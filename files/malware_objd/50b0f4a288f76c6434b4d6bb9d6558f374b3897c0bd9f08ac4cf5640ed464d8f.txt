
50b0f4a288f76c6434b4d6bb9d6558f374b3897c0bd9f08ac4cf5640ed464d8f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	sub    DWORD PTR [eax+0x7c7c70fc],0x5fd37c7c
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	add    bh,BYTE PTR [edx+0x6c]
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0x43fbbb0e]
  40269c:	enter  0xd3ac,0x4b
  4026a0:	arpl   sp,sp
  4026a2:	push   ds
  4026a3:	cmp    eax,0xf658a819
  4026a8:	inc    esp
  4026a9:	mov    ds:0xd0152a2c,eax
  4026ae:	imul   eax,DWORD PTR [edx+0x14],0x32
  4026b2:	xor    al,0x1e
  4026b4:	call   0xa685:0xe0cf12e6
  4026bb:	add    DWORD PTR [ebx+ebx*1-0x1f],eax
  4026bf:	xchg   DWORD PTR [ebx-0x1a],ecx
  4026c2:	sub    ecx,DWORD PTR [ecx+ebx*2-0x3b]
  4026c6:	xor    ebx,DWORD PTR [edi+eiz*2-0x40]
  4026ca:	cmp    bl,BYTE PTR [eax-0x384601ba]
  4026d0:	or     dh,al
  4026d2:	inc    ebx
  4026d3:	adc    edx,ecx
  4026d5:	into   
  4026d6:	adc    DWORD PTR [ecx-0x74b23334],eax
  4026dc:	pop    ecx
  4026dd:	js     0x40271c
  4026df:	cmp    DWORD PTR [esi-0x62],eax
  4026e2:	out    dx,al
  4026e3:	(bad)
  4026e6:	shl    cl,1
  4026e8:	pop    ebx
  4026e9:	or     eax,0xd33a4eb2
  4026ee:	jl     0x402756
  4026f0:	cld    
  4026f1:	int3   
  4026f2:	xor    edx,DWORD PTR [eax]
  4026f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f5:	xor    ch,BYTE PTR [edi]
  4026f7:	xchg   ebx,eax
  4026f8:	(bad)  
  4026f9:	xor    al,BYTE PTR [eax+0x285fa99d]
  4026ff:	adc    bh,0xa
  402702:	clc    
  402703:	or     DWORD PTR [ecx+0x5b],ebx
  402706:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402708:	push   ecx
  402709:	ret    
  40270a:	jbe    0x4026a0
  40270c:	sub    bl,BYTE PTR [ebx]
  40270e:	addr16 aam 0xb0
  402711:	popa   
  402712:	pop    esi
  402713:	js     0x4026c5
  402715:	retf   
  402716:	sbb    edi,edx
  402718:	sub    DWORD PTR [eax-0x4f],esi
  40271b:	lea    esi,[eax]
  40271d:	scas   al,BYTE PTR es:[edi]
  40271e:	jne    0x40272d
  402720:	call   0x49cf:0x54ba4b70
  402727:	cs fwait
  402729:	push   0xffffffc8
  40272b:	add    bh,BYTE PTR [ebx+0xc38611a]
  402731:	xor    DWORD PTR [ebp-0x33a4cc11],eax
  402737:	call   DWORD PTR [edi]
  402739:	inc    edx
  40273a:	stos   DWORD PTR es:[edi],eax
  40273b:	stos   DWORD PTR es:[edi],eax
  40273c:	jmp    0x400f:0x1d7420f7
  402743:	popa   
  402744:	mov    ds:0xa1a209a5,al
  402749:	repnz xchg edi,eax
  40274b:	mov    eax,0xe28592a1
  402750:	add    eax,0x29b82c52
  402755:	xchg   esp,eax
  402756:	out    0xfb,al
  402758:	dec    ecx
  402759:	shl    DWORD PTR [ecx+0x1c],1
  40275c:	std    
  40275d:	jmp    0xebaf:0x233eb1c6
  402764:	es repnz push ds
  402767:	or     eax,0x773f13f3
  40276c:	mov    ah,0x11
  40276e:	das    
  40276f:	adc    bl,BYTE PTR [esi-0x5fbda5eb]
  402775:	dec    esp
  402776:	sub    edx,DWORD PTR [ebp-0xc4fd066]
  40277c:	stos   DWORD PTR es:[edi],eax
  40277d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277e:	or     dl,BYTE PTR ds:0x4fc5d7f7
  402784:	push   ss
  402785:	adc    ch,dl
  402787:	ret    
  402788:	fsubrp st(5),st
  40278a:	jmp    0x7cb6:0xa5ae0a3e
  402791:	and    DWORD PTR [ebp-0x63da1248],edi
  402797:	sahf   
  402798:	add    DWORD PTR [eax-0x1ccc5cd5],eax
  40279e:	jbe    0x4027ac
  4027a0:	int3   
  4027a1:	rcl    DWORD PTR [ebp+0x7ca89d60],cl
  4027a7:	test   al,0xd3
  4027a9:	cdq    
  4027aa:	aad    0xd3
  4027ac:	aaa    
  4027ad:	xchg   ebp,eax
  4027ae:	mov    WORD PTR [edx-0x39],ss
  4027b1:	cmp    dl,BYTE PTR [edx+0x801f8de]
  4027b7:	shr    BYTE PTR [ecx+0x14],1
  4027ba:	inc    edi
  4027bb:	es dec ebp
  4027bd:	dec    ebp
  4027be:	mov    ecx,0x9b735405
  4027c3:	mov    eax,ds:0x34bb1857
  4027c8:	push   ecx
  4027c9:	mov    cl,0x2c
  4027cb:	xchg   ebp,eax
  4027cc:	or     eax,0x41a44d0b
  4027d1:	rol    DWORD PTR [eax-0xf8fee0a],cl
  4027d7:	lods   eax,DWORD PTR ds:[esi]
  4027d8:	call   0x56ed:0xe1094e3c
  4027df:	add    eax,0xdbfe12b4
  4027e4:	int    0xc
  4027e6:	push   esi
  4027e7:	scas   eax,DWORD PTR es:[edi]
  4027e8:	enter  0xc52c,0x59
  4027ec:	shl    edi,0x50
  4027ef:	mov    ch,0x27
  4027f1:	push   ds
  4027f2:	out    0x5a,al
  4027f4:	xchg   esi,eax
  4027f5:	inc    esp
  4027f6:	push   cs
  4027f7:	cld    
  4027f8:	push   0x10
  4027fa:	ja     0x4027e1
  4027fc:	rol    DWORD PTR [ecx-0x7a],cl
  4027ff:	clc    
  402800:	mov    ecx,0x364b0d69
  402805:	and    edi,edi
  402807:	jns    0x402859
  402809:	dec    eax
  40280a:	or     BYTE PTR [eax-0x31401209],bl
  402810:	daa    
  402811:	sbb    eax,0x7b01aee7
  402816:	cmp    DWORD PTR [edx],ebp
  402818:	cmp    cl,bh
  40281a:	adc    eax,0xf52ba2bb
  40281f:	je     0x40284c
  402821:	pop    ss
  402822:	sbb    BYTE PTR [ebp+ebp*4+0x530fec01],bh
  402829:	outs   dx,BYTE PTR ds:[esi]
  40282a:	pop    edi
  40282b:	addr16 push cs
  40282d:	scas   eax,DWORD PTR es:[edi]
  40282e:	cmp    BYTE PTR [edx+0x1057910e],bl
  402834:	fwait
  402835:	or     edx,DWORD PTR [ebx+0x20e7fa22]
  40283b:	mov    cl,0x21
  40283d:	ja     0x402804
  40283f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402840:	test   eax,0xbcc76494
  402845:	fisttp QWORD PTR [ebx]
  402847:	and    dl,BYTE PTR [esi+0x3752643d]
  40284d:	sbb    esi,DWORD PTR [edi+ebp*2+0x1b41281d]
  402854:	inc    esi
  402855:	fdiv   QWORD PTR [edi]
  402857:	ret    
  402858:	jecxz  0x40287a
  40285a:	jno    0x4028a2
  40285c:	call   0x3505:0xba59d9f1
  402863:	ss (bad) 
  402865:	and    ebx,DWORD PTR [eax]
  402867:	inc    esi
  402868:	xor    BYTE PTR [ebx+0x2e324191],al
  40286e:	fst    QWORD PTR [edx-0x9]
  402871:	and    eax,0x64370dcc
  402876:	sbb    bl,BYTE PTR ds:0xc2280316
  40287c:	int    0x4c
  40287e:	sbb    eax,0x66f3a6e6
  402883:	add    DWORD PTR [edi+0x5e94cf86],ebp
  402889:	push   eax
  40288a:	out    dx,eax
  40288b:	inc    ebx
  40288c:	jae    0x402813
  40288e:	sar    DWORD PTR [ebx+eax*4],0xfb
  402892:	cmove  eax,DWORD PTR [edi+0x14599176]
  402899:	out    dx,eax
  40289a:	or     eax,DWORD PTR [esi+0x32cf945e]
  4028a0:	scas   eax,DWORD PTR es:[edi]
  4028a1:	retf   
  4028a2:	xor    eax,0x19
  4028a5:	cmp    al,0x34
  4028a7:	mov    ah,0x79
  4028a9:	xchg   ebp,eax
  4028aa:	xchg   edx,ebx
  4028ac:	pop    esp
  4028ad:	xor    DWORD PTR [ebp+0x1ba8f472],0xffffffa1
  4028b4:	nop
  4028b5:	leave  
  4028b6:	inc    esp
  4028b7:	mov    cl,0xf6
  4028b9:	mov    dl,0xb3
  4028bb:	(bad)  
  4028bc:	dec    edi
  4028bd:	mov    eax,0x4c8b6f0c
  4028c2:	shr    DWORD PTR [edi-0x58f05275],0x74
  4028c9:	daa    
  4028ca:	arpl   WORD PTR [esi],si
  4028cc:	mov    edx,DWORD PTR [ecx-0x5a]
  4028cf:	jo     0x40285b
  4028d1:	xchg   ebp,eax
  4028d2:	mov    eax,0x5b7036
  4028d7:	push   ecx
  4028d8:	(bad)  
  4028d9:	frstor [ecx+ebp*8-0x22]
  4028dd:	mov    esi,0x1603d3cb
  4028e2:	and    ebx,edi
  4028e4:	fwait
  4028e5:	mov    bh,BYTE PTR [ecx]
  4028e7:	sbb    eax,0xf0c9e185
  4028ec:	pop    edx
  4028ed:	cmp    ch,BYTE PTR [edx+0x114359dc]
  4028f3:	mov    ah,BYTE PTR [esi+esi*4-0x67]
  4028f7:	mov    ebx,0xc4910eff
  4028fc:	pop    edx
  4028fd:	out    0x5d,al
  4028ff:	ror    DWORD PTR [edi-0x68],cl
  402902:	dec    eax
  402903:	leave  
  402904:	mov    ah,0xd8
  402906:	mov    BYTE PTR [eax+0x587bc4df],ch
  40290c:	cmp    eax,0xc3d2a701
  402911:	(bad)  
  402912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402913:	dec    eax
  402914:	add    DWORD PTR [ebp+0x74ed7d9b],0xf0b4a713
  40291e:	jne    0x4028a5
  402920:	pop    ebx
  402921:	out    dx,al
  402922:	xchg   edi,eax
  402923:	les    ebx,FWORD PTR [edx]
  402925:	jno    0x4028f2
  402927:	push   ebp
  402928:	(bad)  
  40292a:	push   esi
  40292b:	out    0xdf,al
  40292d:	or     al,0x33
  40292f:	push   es
  402930:	ret    
  402931:	jo     0x402966
  402933:	add    al,0x7e
  402935:	push   edi
  402936:	imul   edx,DWORD PTR [edx+0xde4e050],0xf1073135
  402940:	mov    edx,0xd338f2b9
  402945:	fsubp  st(1),st
  402947:	leave  
  402948:	clc    
  402949:	push   0x50
  40294b:	mov    eax,0x2194ecc3
  402950:	les    esp,FWORD PTR [esp+eax*8+0x365a41f9]
  402957:	out    dx,al
  402958:	imul   ecx,DWORD PTR [eax*8-0x5a0dbfd0],0xfffffff7
  402960:	xor    edx,DWORD PTR [esi]
  402962:	std    
  402963:	and    eax,0x6a84d08
  402968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402969:	fadd   st(6),st
  40296b:	call   0x7bcbbec
  402970:	adc    eax,0x1e24ce7b
  402975:	mov    eax,0xd0011b5f
  40297a:	add    BYTE PTR [edi-0x30],dh
  40297d:	in     al,0x86
  40297f:	ror    dl,cl
  402981:	popa   
  402982:	mov    ds:0x56695271,eax
  402987:	add    al,0xda
  402989:	pop    ds
  40298a:	jnp    0x402947
  40298c:	fcomp  DWORD PTR [edx]
  40298e:	mov    esi,0x98026e3b
  402993:	mov    eax,ds:0x8d71a39d
  402998:	xor    bh,BYTE PTR [edi+edi*4]
  40299b:	push   ebx
  40299c:	mov    WORD PTR [ebp+0x2bb65ebb],es
  4029a2:	addr16 daa 
  4029a4:	into   
  4029a5:	int    0x1f
  4029a7:	sub    esi,DWORD PTR [ebx]
  4029a9:	inc    esp
  4029aa:	add    ecx,DWORD PTR [edx+ebp*2-0x2f2fba6c]
  4029b1:	rcl    ebx,0x94
  4029b4:	mov    ds:0x34625086,eax
  4029b9:	sub    DWORD PTR [edx+ebp*2],ecx
  4029bc:	sub    DWORD PTR [ecx+ebp*2],ebx
  4029bf:	mov    al,0x83
  4029c1:	adc    DWORD PTR [ebx+0x38],esp
  4029c4:	mov    dl,0x6d
  4029c6:	stc    
  4029c7:	fs emms 
  4029ca:	dec    esi
  4029cb:	or     DWORD PTR [edx+eax*2],ecx
  4029ce:	xchg   esp,eax
  4029cf:	sbb    DWORD PTR [edx-0x3181a9ad],edx
  4029d5:	dec    ecx
  4029d6:	adc    eax,DWORD PTR [edx+edx*8]
  4029d9:	test   DWORD PTR [ebx+edi*8],edx
  4029dc:	lea    ecx,[ebx-0x258b049f]
  4029e2:	(bad)  
  4029e3:	pushf  
  4029e4:	aad    0x86
  4029e6:	sti    
  4029e7:	int3   
  4029e8:	pop    ds
  4029e9:	and    BYTE PTR [esi+0x3b],dh
  4029ec:	sub    al,0x7b
  4029ee:	into   
  4029ef:	mov    eax,fs:0x8bba2ccd
  4029f5:	loope  0x402a5a
  4029f7:	adc    BYTE PTR [ebx-0x4d18489f],dh
  4029fd:	adc    BYTE PTR [eax+eiz*8-0x4e],al
  402a01:	adc    DWORD PTR [ebp+edx*8-0x64],edi
  402a05:	mov    ds:0x24c4416e,eax
  402a0a:	or     al,0x36
  402a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0d:	icebp  
  402a0e:	shl    DWORD PTR [ebx-0x7128b46d],1
  402a14:	mov    eax,0xb47f97c4
  402a19:	js     0x4029d5
  402a1b:	and    bh,0x33
  402a1e:	mov    edi,0xa81df3f2
  402a23:	push   edx
  402a24:	nop
  402a25:	jg     0x402a04
  402a27:	jmp    0x402a46
  402a29:	push   ss
  402a2a:	xor    ecx,DWORD PTR [esi-0x1c]
  402a2d:	lea    ebx,[ecx+0x6036f80e]
  402a33:	in     al,dx
  402a34:	out    0x62,eax
  402a36:	jmp    0x4029bc
  402a38:	mov    eax,0xa9811c4
  402a3d:	lock scas al,BYTE PTR es:[edi]
  402a3f:	inc    edi
  402a40:	adc    al,0x8a
  402a42:	jbe    0x4029d0
  402a44:	jne    0x4029d4
  402a46:	mov    ch,0x34
  402a48:	mov    al,ds:0x435d4546
  402a4d:	push   eax
  402a4e:	sbb    cl,BYTE PTR [edi+0x2791d6f7]
  402a54:	arpl   dx,bx
  402a56:	icebp  
  402a57:	or     DWORD PTR [ecx+0x7d],eax
  402a5a:	cmp    al,0xb1
  402a5c:	inc    ecx
  402a5d:	xor    eax,0xdfe8dae8
  402a62:	out    dx,eax
  402a63:	es jb  0x402a38
  402a66:	mov    cl,0xf1
  402a68:	pushf  
  402a69:	xor    edi,eax
  402a6b:	mov    ebp,0xf0960ab0
  402a70:	xor    esp,DWORD PTR [edx]
  402a72:	icebp  
  402a73:	adc    al,0xa7
  402a75:	jns    0x402a6f
  402a77:	mov    ebp,0xd73d1ae4
  402a7c:	mov    bl,0xc9
  402a7e:	imul   esp,DWORD PTR [ecx+edi*4-0x20],0xfffffffd
  402a83:	retf   0x207f
  402a86:	xchg   si,dx
  402a89:	loope  0x402a12
  402a8b:	xchg   edx,eax
  402a8c:	call   0xed78:0x87f1cf83
  402a93:	adc    al,0x71
  402a95:	push   ss
  402a96:	rcl    BYTE PTR [edi+0xe04fd65],cl
  402a9c:	cmc    
  402a9d:	jl     0x402adf
  402a9f:	es xchg edx,eax
  402aa1:	stc    
  402aa2:	lds    ebx,FWORD PTR [esi-0x2b]
  402aa5:	add    al,BYTE PTR [ecx+0x79]
  402aa8:	push   esp
  402aa9:	into   
  402aaa:	add    BYTE PTR [ecx],bl
  402aac:	imul   edi
  402aae:	or     eax,0xc0eadbdd
  402ab3:	push   esi
  402ab4:	int3   
  402ab5:	mov    ebp,0xdd5ab555
  402aba:	and    ecx,ebp
  402abc:	mov    ecx,0xbd7b74a4
  402ac1:	call   DWORD PTR [ebx+ecx*4]
  402ac4:	test   eax,0x6b01785
  402ac9:	xor    ebx,edi
  402acb:	je     0x402b2f
  402acd:	push   ebx
  402ace:	mov    DWORD PTR [ebx-0x38e91c45],0x84bb0b35
  402ad8:	jne    0x402b21
  402ada:	push   edx
  402adb:	int    0xce
  402add:	and    ah,cl
  402adf:	add    edx,DWORD PTR [ebx]
  402ae1:	(bad)  
  402ae2:	cdq    
  402ae3:	out    dx,al
  402ae4:	sbb    eax,0x68679071
  402ae9:	mov    ds:0xd0877a86,al
  402aee:	jecxz  0x402ac2
  402af0:	cmp    al,0x3d
  402af2:	sub    edx,esp
  402af4:	mov    ds:0x997fa145,al
  402af9:	push   edi
  402afa:	aam    0x2
  402afc:	scas   eax,DWORD PTR es:[edi]
  402afd:	bound  edi,QWORD PTR [eax+0x6d]
  402b00:	mov    bl,0x8c
  402b02:	cmp    al,0x53
  402b04:	in     eax,dx
  402b05:	push   eax
  402b06:	lea    ebx,[ebp+0x15a510b2]
  402b0c:	and    BYTE PTR ds:0xf7d05c84,cl
  402b12:	(bad)  
  402b13:	icebp  
  402b14:	clc    
  402b15:	lods   eax,DWORD PTR ds:[esi]
  402b16:	push   es
  402b17:	push   edi
  402b18:	pop    esp
  402b19:	add    DWORD PTR [ecx],esi
  402b1b:	xor    DWORD PTR [esp+eax*2],esp
  402b1e:	mov    ss,WORD PTR [eax+0x25]
  402b21:	push   esi
  402b22:	xlat   BYTE PTR ds:[ebx]
  402b23:	into   
  402b24:	xor    dh,BYTE PTR [bp+0x20]
  402b28:	xchg   ebp,eax
  402b29:	pop    edx
  402b2a:	jmp    0x7fd7:0x5e000698
  402b31:	in     eax,dx
  402b32:	jb     0x402ae3
  402b34:	dec    DWORD PTR [ebx+0x7a6f919f]
  402b3a:	cmp    DWORD PTR [ebx+eax*4+0xa],ebp
  402b3e:	scas   al,BYTE PTR es:[edi]
  402b3f:	es mov bl,0x63
  402b42:	inc    esp
  402b43:	loope  0x402ae7
  402b45:	mov    ebp,0xe66fdc2b
  402b4a:	pop    es
  402b4b:	cmc    
  402b4c:	xchg   dl,dl
  402b4e:	out    dx,al
  402b4f:	js     0x402aef
  402b51:	repz xor bl,0x8f
  402b55:	mov    ah,0xec
  402b57:	test   bh,al
  402b59:	cli    
  402b5a:	lds    eax,FWORD PTR [ebx]
  402b5c:	das    
  402b5d:	ins    DWORD PTR es:[edi],dx
  402b5e:	mov    edx,0x86fbef9d
  402b63:	jmp    0x1c2d7123
  402b68:	lods   eax,DWORD PTR ds:[esi]
  402b69:	(bad)  
  402b6a:	push   edi
  402b6b:	cld    
  402b6c:	mov    al,ds:0xa86ff324
  402b71:	sub    DWORD PTR [edi],0x2bf95f10
  402b77:	sbb    eax,0xe21f89f3
  402b7c:	rol    BYTE PTR [edx-0x4b],cl
  402b7f:	xor    al,0x81
  402b81:	pusha  
  402b82:	aaa    
  402b83:	test   eax,0x7c548e8a
  402b88:	xchg   edi,eax
  402b89:	fs in  eax,dx
  402b8b:	(bad)  
  402b8c:	dec    edx
  402b8d:	jno    0x402b2c
  402b8f:	mov    ch,0x93
  402b91:	pop    edx
  402b92:	loopne 0x402b21
  402b94:	jno    0x402c0a
  402b96:	cld    
  402b97:	mov    ecx,0x957f7e9d
  402b9c:	sar    DWORD PTR [esi],1
  402b9e:	push   eax
  402b9f:	push   0x59
  402ba1:	inc    ebp
  402ba2:	das    
  402ba3:	mov    al,ds:0x9c660706
  402ba8:	ret    0xa4e5
  402bab:	scas   eax,DWORD PTR es:[edi]
  402bac:	sub    ah,BYTE PTR [edi-0x28c8c18b]
  402bb2:	dec    eax
  402bb3:	and    al,BYTE PTR [bp+si]
  402bb6:	and    eax,0x66e1d71b
  402bbb:	cmp    al,0xf2
  402bbd:	mov    esp,0x79173a52
  402bc2:	pop    edx
  402bc3:	inc    edi
  402bc4:	outs   dx,BYTE PTR ds:[esi]
  402bc5:	call   0xce1e:0x41d85534
  402bcc:	pop    ecx
  402bcd:	sbb    ecx,eax
  402bcf:	jbe    0x402b5e
  402bd1:	cdq    
  402bd2:	xchg   esp,eax
  402bd3:	mov    edi,0xf6448eff
  402bd8:	clc    
  402bd9:	mov    DWORD PTR [esi],esp
  402bdb:	repnz pop edx
  402bdd:	dec    edi
  402bde:	jns    0x402b8e
  402be0:	retf   0x8cef
  402be3:	hlt    
  402be4:	sub    al,0x63
  402be6:	jns    0x402c04
  402be8:	mov    cl,0x8e
  402bea:	mov    al,ds:0xdcb57ca7
  402bef:	xchg   ebx,eax
  402bf0:	test   DWORD PTR [ecx],0xe05556c5
  402bf6:	frstor [ecx+edi*2-0x63]
  402bfa:	mov    ?,eax
  402bfc:	ucomiss xmm3,DWORD PTR [esi+0x31]
  402c00:	gs mov dl,0x5c
  402c03:	aad    0x61
  402c05:	or     BYTE PTR [edx],dl
  402c07:	push   0x70
  402c09:	test   eax,0x1fbb2a8a
  402c0e:	cmc    
  402c0f:	push   edi
  402c10:	popa   
  402c11:	cmp    al,0x2d
  402c13:	popf   
  402c14:	out    dx,eax
  402c15:	jae    0x402c70
  402c17:	inc    ecx
  402c18:	fnsave [ebx-0x3db14e1a]
  402c1e:	dec    ecx
  402c1f:	ret    0x8928
  402c22:	inc    ecx
  402c23:	mov    dh,0x44
  402c25:	inc    ebx
  402c26:	jge    0x402c00
  402c28:	xor    ah,BYTE PTR [eax+0x62]
  402c2b:	ins    BYTE PTR es:[edi],dx
  402c2c:	jle    0x402c42
  402c2e:	mov    ah,0x25
  402c30:	pop    ebp
  402c31:	sbb    BYTE PTR [ecx-0x10354101],dh
  402c37:	lods   al,BYTE PTR ds:[esi]
  402c38:	jmp    0x695d:0x5d270db8
  402c3f:	xor    eax,0xcb88e06e
  402c44:	idiv   DWORD PTR [eax]
  402c46:	xor    BYTE PTR [esi+eiz*2+0x4e87fee],ah
  402c4d:	or     bh,BYTE PTR [eax]
  402c4f:	fiadd  DWORD PTR ds:0xb48ac769
  402c55:	shl    BYTE PTR [edi-0x6d],0x10
  402c59:	jo     0x402cd3
  402c5b:	xor    BYTE PTR ds:0x61bc21df,dl
  402c61:	pop    ss
  402c62:	pop    ebp
  402c63:	mov    eax,0xda63574b
  402c68:	repz std 
  402c6a:	push   cs
  402c6b:	mov    ebp,0xfe43ac12
  402c70:	bound  ebx,QWORD PTR [ebp-0x50c3caca]
  402c76:	mov    dl,0xfa
  402c78:	or     eax,0xf7f0b403
  402c7d:	add    eax,0xaf10af17
  402c82:	imul   esp,DWORD PTR [esi],0xffffff9f
  402c85:	dec    eax
  402c86:	nop    DWORD PTR [edx-0xd]
  402c8a:	fs mov cl,0xd8
  402c8d:	icebp  
  402c8e:	or     esi,esp
  402c90:	or     al,bl
  402c92:	out    dx,al
  402c93:	and    BYTE PTR [ecx-0x6f],cl
  402c96:	inc    esp
  402c97:	xchg   esi,eax
  402c98:	sbb    al,0x69
  402c9a:	call   0x1608:0x85f5d8ab
  402ca1:	addr16 sub edi,esp
  402ca4:	mov    cl,0x91
  402ca6:	icebp  
  402ca7:	adc    eax,0xd9aea74
  402cac:	or     esp,ecx
  402cae:	test   DWORD PTR [edx+0x137a4788],ecx
  402cb4:	out    0x7b,al
  402cb6:	mov    BYTE PTR [esi-0x7002aead],dl
  402cbc:	fs test al,0xb8
  402cbf:	test   BYTE PTR [ebp+0x5d],dh
  402cc2:	pusha  
  402cc3:	inc    edx
  402cc4:	xor    edx,DWORD PTR [edx]
  402cc6:	cmc    
  402cc7:	fidivr DWORD PTR [edi+0x69]
  402cca:	xchg   ebp,eax
  402ccb:	jge    0x402c77
  402ccd:	inc    ebp
  402cce:	pushf  
  402ccf:	into   
  402cd0:	mov    DWORD PTR [edi+0x2f5a3795],ebx
  402cd6:	out    0xe,al
  402cd8:	pop    esp
  402cd9:	mov    bh,0x68
  402cdb:	dec    eax
  402cdc:	jb     0x402d4d
  402cde:	cdq    
  402cdf:	out    0xbb,eax
  402ce1:	pop    ecx
  402ce2:	cmp    ah,ch
  402ce4:	adc    eax,0x4cc5be3f
  402ce9:	ret    
  402cea:	pop    esi
  402ceb:	mov    edi,0x67385492
  402cf0:	stos   BYTE PTR es:[edi],al
  402cf1:	cmp    eax,0x62eab713
  402cf6:	push   cs
  402cf7:	addr16 hlt 
  402cf9:	dec    esp
  402cfa:	mov    eax,0x94405301
  402cff:	add    BYTE PTR [esi+ebp*8+0xe233d72],al
  402d06:	in     al,0xb0
  402d08:	add    al,BYTE PTR es:[edx]
  402d0b:	or     ah,BYTE PTR [edi+0x24]
  402d0e:	sbb    edx,DWORD PTR [edi]
  402d10:	cld    
  402d11:	push   ebx
  402d12:	lods   eax,DWORD PTR ds:[esi]
  402d13:	add    DWORD PTR cs:[esp+edx*2+0x13],0xffffffc2
  402d19:	sub    BYTE PTR [edx],ch
  402d1b:	add    bl,ah
  402d1d:	lods   al,BYTE PTR ds:[esi]
  402d1e:	mov    ch,0xd6
  402d20:	sub    BYTE PTR [edi-0x5b],ch
  402d23:	sar    ah,1
  402d25:	or     al,BYTE PTR [edx+0x78267f40]
  402d2b:	mov    edx,0x802a7f45
  402d30:	add    DWORD PTR [edi],ecx
  402d32:	adc    esi,ebp
  402d34:	cmp    bh,BYTE PTR ds:0x4879cd
  402d3a:	stos   BYTE PTR es:[edi],al
  402d3b:	mov    ebp,0x9eb62f8f
  402d40:	les    esi,FWORD PTR [eax-0x29]
  402d43:	inc    ebp
  402d44:	jecxz  0x402d30
  402d46:	xor    eax,0x20b0d0bd
  402d4b:	test   DWORD PTR [ecx+0x29],ecx
  402d4e:	mov    ch,0xba
  402d50:	fiadd  WORD PTR [ebx-0x25]
  402d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d54:	inc    ebp
  402d55:	jmp    0x402d8c
  402d57:	mov    ebp,0x2ad97b6
  402d5c:	add    al,0xc7
  402d5e:	aad    0xc6
  402d60:	sub    BYTE PTR [edi-0x3b3576f0],dl
  402d66:	daa    
  402d67:	jl     0x402d90
  402d69:	cmp    al,0xb9
  402d6b:	push   esi
  402d6c:	xchg   al,dh
  402d6e:	sbb    eax,esp
  402d70:	pop    edx
  402d71:	loope  0x402d80
  402d73:	cli    
  402d74:	iret   
  402d75:	mov    ds:0xc0a6f97a,al
  402d7a:	stos   BYTE PTR es:[edi],al
  402d7b:	paddsw mm4,QWORD PTR [esp+esi*8-0x7d]
  402d80:	cwde   
  402d81:	mov    WORD PTR [eax+0x77db7c00],?
  402d87:	sbb    al,0xbc
  402d89:	mov    ah,0x60
  402d8b:	push   ebp
  402d8c:	jmp    0x402df0
  402d8e:	xchg   ecx,eax
  402d8f:	and    al,0x5f
  402d91:	jle    0x402d5e
  402d93:	adc    bl,0x45
  402d96:	push   0xcee33420
  402d9b:	push   es
  402d9c:	into   
  402d9d:	retf   
  402d9e:	xchg   esi,eax
  402d9f:	mov    eax,ds:0xb20fd42c
  402da4:	fisub  WORD PTR [esi-0x40]
  402da7:	dec    edx
  402da8:	sub    DWORD PTR [ebp+0x26],0x3e
  402dac:	(bad)  
  402dad:	cld    
  402dae:	cmp    DWORD PTR [eax],esi
  402db0:	push   esi
  402db1:	dec    esp
  402db2:	lods   al,BYTE PTR ds:[esi]
  402db3:	aad    0xce
  402db5:	add    edx,DWORD PTR [edi-0x6]
  402db8:	aaa    
  402db9:	mov    ecx,0x3d924b4d
  402dbe:	push   esp
  402dbf:	sbb    cl,BYTE PTR [ebp+0x1f]
  402dc2:	dec    edi
  402dc3:	pop    esp
  402dc4:	ficom  WORD PTR [ebx+eax*8+0x661a1a9a]
  402dcb:	fst    DWORD PTR [eax-0x6b]
  402dce:	sbb    DWORD PTR [ecx-0x563608a0],edi
  402dd4:	xor    ebp,0xc095295
  402dda:	fcomip st,st(6)
  402ddc:	mov    ebp,0x5a6d67a1
  402de1:	cs inc edi
  402de3:	or     eax,0xf8cf6633
  402de8:	aas    
  402de9:	retf   
  402dea:	outs   dx,DWORD PTR ds:[esi]
  402deb:	shr    BYTE PTR ds:0xca78c7f5,cl
  402df1:	enter  0x56e9,0xb
  402df5:	out    dx,al
  402df6:	mov    ecx,edi
  402df8:	enter  0xa0b6,0x62
  402dfc:	mov    ch,0x96
  402dfe:	pop    ds
  402dff:	mov    ebx,0x197abbab
  402e04:	jp     0x402e26
  402e06:	jne    0x402de1
  402e08:	loopne 0x402e28
  402e0a:	push   edi
  402e0b:	aas    
  402e0c:	mov    ebx,0xc4fa1e52
  402e11:	cmc    
  402e12:	dec    esp
  402e13:	cmp    al,ch
  402e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e16:	pop    es
  402e17:	test   eax,0x1e9b7831
  402e1c:	push   0x9c11089
  402e21:	je     0x402e5b
  402e23:	push   eax
  402e24:	out    dx,al
  402e25:	adc    DWORD PTR [esi-0x7f],ebp
  402e28:	int    0x5
  402e2a:	pop    ds
  402e2b:	pop    ds
  402e2c:	xchg   edx,eax
  402e2d:	dec    esi
  402e2e:	(bad)  
  402e2f:	sbb    al,0xe1
  402e31:	bound  esp,QWORD PTR [esi-0x6acc5c92]
  402e37:	mov    bh,0x9a
  402e39:	push   edx
  402e3a:	xchg   ecx,eax
  402e3b:	xchg   ebx,eax
  402e3c:	adc    eax,0x35199996
  402e41:	nop
  402e42:	dec    esi
  402e43:	inc    BYTE PTR [edi+ebp*8-0x51aefce0]
  402e4a:	adc    BYTE PTR [eax+0xe],bh
  402e4d:	adc    DWORD PTR [edx-0x74],ecx
  402e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e51:	add    eax,0xbdfd5d61
  402e56:	or     DWORD PTR [esi-0x40],esp
  402e59:	lea    ebx,[ebx]
  402e5b:	lds    edx,FWORD PTR [esi]
  402e5d:	mov    edi,0x3a35a7b9
  402e62:	and    esi,DWORD PTR [edx-0x4]
  402e65:	call   0x24b6:0x25c47124
  402e6c:	int    0xb2
  402e6e:	and    ebp,DWORD PTR [ecx+0x2ddf1724]
  402e74:	inc    esi
  402e75:	and    esp,DWORD PTR [ebx]
  402e77:	cmp    ch,BYTE PTR [esp+esi*4]
  402e7a:	stc    
  402e7b:	push   esi
  402e7c:	xchg   esi,eax
  402e7d:	enter  0xf3ae,0x17
  402e81:	and    al,cl
  402e83:	clc    
  402e84:	pop    ecx
  402e85:	xor    esp,DWORD PTR [edi-0x6c]
  402e88:	xchg   esi,eax
  402e89:	cld    
  402e8a:	adc    esi,DWORD PTR [edi+eax*8-0x45]
  402e8e:	push   ebx
  402e8f:	in     al,0xe5
  402e91:	dec    esp
  402e92:	inc    edi
  402e93:	rol    BYTE PTR [esi+0x1c],0x47
  402e97:	hlt    
  402e98:	and    al,0xf6
  402e9a:	pop    esi
  402e9b:	scas   eax,DWORD PTR es:[edi]
  402e9c:	jbe    0x402eb1
  402e9e:	jmp    0xb1ce7dc6
  402ea3:	add    BYTE PTR [edi],al
  402ea5:	popa   
  402ea6:	add    al,BYTE PTR [ebx+ecx*1+0x7c]
  402eaa:	sub    eax,0xd3c987ad
  402eaf:	ins    DWORD PTR es:[edi],dx
  402eb0:	push   ss
  402eb1:	dec    edx
  402eb2:	and    DWORD PTR [edx],esi
  402eb4:	mov    DWORD PTR [ebx-0x4f],edx
  402eb7:	test   BYTE PTR [ecx+0x4915f33b],cl
  402ebd:	pop    ds
  402ebe:	inc    esp
  402ebf:	lock test eax,0x4356ad60
  402ec5:	retf   0xb49e
  402ec8:	adc    al,0x3d
  402eca:	dec    ebx
  402ecb:	jmp    0x9f7e:0xd0c7bdc
  402ed2:	nop
  402ed3:	push   edx
  402ed4:	dec    ebx
  402ed5:	jmp    0x402ebc
  402ed7:	mov    ds:0x7f866b5,al
  402edc:	dec    BYTE PTR [esi]
  402ede:	sbb    eax,0x46a1c9ea
  402ee3:	pop    ebp
  402ee4:	and    BYTE PTR [eax-0x4f],dl
  402ee7:	add    BYTE PTR [edx+0x32],ch
  402eea:	and    eax,DWORD PTR [esi+edx*1+0x179fb73b]
  402ef1:	pop    ebx
  402ef2:	mov    edi,0xb08c99cf
  402ef7:	test   eax,0x7372ac74
  402efc:	jmp    0x4c8a:0xde55e988
  402f03:	dec    ebx
  402f04:	dec    ebx
  402f05:	dec    eax
  402f06:	aaa    
  402f07:	xchg   esp,eax
  402f08:	cmc    
  402f09:	pop    es
  402f0a:	ja     0x402f05
  402f0c:	or     BYTE PTR [ecx],cl
  402f0e:	xchg   ecx,eax
  402f0f:	fist   WORD PTR [edx+0x49]
  402f12:	mov    ch,0x16
  402f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f15:	lds    edi,FWORD PTR [ecx]
  402f17:	xor    DWORD PTR [eax-0x2e],ebx
  402f1a:	(bad)  
  402f1b:	retf   
  402f1c:	ror    DWORD PTR [eax],1
  402f1e:	add    ch,BYTE PTR [ecx+0x512eb49]
  402f24:	lods   al,BYTE PTR ds:[esi]
  402f25:	int3   
  402f26:	adc    DWORD PTR [edx+0x3f30d585],ecx
  402f2c:	mov    ebp,0x42f908a2
  402f31:	test   al,0x8d
  402f33:	mov    edi,0xd6c5b156
  402f38:	dec    ecx
  402f39:	add    BYTE PTR [ebx+0x4c624e10],cl
  402f3f:	ficomp DWORD PTR [eax+0x7acb7d7f]
  402f45:	jo     0x402f42
  402f47:	je     0x402fc6
  402f49:	push   ecx
  402f4a:	pop    ss
  402f4b:	loop   0x402f6d
  402f4d:	sbb    BYTE PTR ds:0x39a0fb95,ch
  402f53:	sub    ecx,0xffffff84
  402f56:	pop    edx
  402f57:	pop    edx
  402f58:	pop    es
  402f59:	push   edx
  402f5a:	mov    eax,0x5dfbcf45
  402f5f:	add    eax,0x762aac74
  402f64:	stos   DWORD PTR es:[edi],eax
  402f65:	sbb    eax,0x4e405fb9
  402f6a:	int3   
  402f6b:	idiv   al
  402f6d:	mov    esp,ebx
  402f6f:	pop    ecx
  402f70:	(bad)  
  402f71:	sbb    eax,0xe0563fcb
  402f76:	enter  0x9b37,0xd1
  402f7a:	and    al,0x27
  402f7c:	sub    eax,0x4f54a7f7
  402f81:	mov    ds:0xad7d0da0,eax
  402f86:	mov    bl,0xa0
  402f88:	sbb    al,0x2a
  402f8a:	jne    0x402f11
  402f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8d:	mov    edi,0xa89c2968
  402f92:	gs xchg ebx,eax
  402f94:	pusha  
  402f95:	bound  eax,QWORD PTR [edi-0x5f2ece00]
  402f9b:	loop   0x402f34
  402f9d:	jl     0x403006
  402f9f:	ins    DWORD PTR es:[edi],dx
  402fa0:	and    eax,0x3bd7ad6
  402fa5:	arpl   WORD PTR [eax+0x68],bp
  402fa8:	nop
  402fa9:	xchg   BYTE PTR [esi+0x5b],ah
  402fac:	lods   eax,DWORD PTR ds:[esi]
  402fad:	stc    
  402fae:	(bad)  
  402faf:	aaa    
  402fb0:	xchg   ebp,eax
  402fb1:	xor    ecx,DWORD PTR [ebp+edx*8-0x5fa4f60b]
  402fb8:	lock ins BYTE PTR es:[edi],dx
  402fba:	inc    ebx
  402fbb:	add    BYTE PTR [edi+edi*2],dl
  402fbe:	add    ebp,DWORD PTR [ebp+0x7c1bdbdf]
  402fc4:	adc    al,0x80
  402fc6:	add    ah,BYTE PTR [ecx]
  402fc8:	xor    al,0x44
  402fca:	aas    
  402fcb:	rcr    BYTE PTR [edi+ebp*4],0xe7
  402fcf:	pop    ebx
  402fd0:	ds gs out dx,eax
  402fd3:	push   esp
  402fd4:	sub    eax,0x7684a8c
  402fd9:	xchg   esp,eax
  402fda:	or     bh,BYTE PTR [esi-0x7787945f]
  402fe0:	push   esp
  402fe1:	aaa    
  402fe2:	sbb    BYTE PTR [ecx],dh
  402fe4:	mov    DWORD PTR [ebx-0x6c56e82],esi
  402fea:	imul   edi,DWORD PTR [ebx+0x14568e02],0x1b
  402ff1:	pop    di
  402ff3:	(bad)  
  402ff4:	icebp  
  402ff5:	sub    eax,0x860edce1
  402ffa:	jge    0x402ff4
  402ffc:	outs   dx,BYTE PTR ds:[esi]
  402ffd:	loop   0x40300f
  402fff:	push   edx
  403000:	(bad)  
  403002:	adc    bh,dl
  403004:	pop    ss
  403005:	les    esi,FWORD PTR [eax+0x732092d8]
  40300b:	ins    DWORD PTR es:[edi],dx
  40300c:	dec    ecx
  40300d:	ja     0x403032
  40300f:	std    
  403010:	xchg   edi,eax
  403011:	mov    WORD PTR [ebp+0x2403a5cb],?
  403017:	leave  
  403018:	mov    esp,0xdb3a82d0
  40301d:	test   ch,dl
  40301f:	lahf   
  403020:	xor    DWORD PTR [ebx+0x910045c],ecx
  403026:	loope  0x40303a
  403028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403029:	mov    ch,0xcc
  40302b:	mov    edx,esi
  40302d:	icebp  
  40302e:	sub    ebx,DWORD PTR [esi+esi*4+0x62]
  403032:	enter  0x221f,0xa6
  403036:	data16 ja 0x40300b
  403039:	push   ss
  40303a:	mov    ebx,0xcfbe8c6e
  40303f:	add    DWORD PTR [edx+0x40],0x5b
  403043:	outs   dx,DWORD PTR ds:[esi]
  403044:	int3   
  403045:	out    0x56,eax
  403047:	or     eax,0xd9b02006
  40304c:	arpl   WORD PTR ds:0xb7d1e566,ax
  403052:	xchg   ebx,eax
  403053:	lahf   
  403054:	sbb    al,0xd9
  403056:	fsubr  QWORD PTR [eax+0x15]
  403059:	fst    st(4)
  40305b:	cwde   
  40305c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40305d:	(bad)  [ecx]
  40305f:	ds cmc 
  403061:	push   esi
  403062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403063:	je     0x4030d4
  403065:	sub    DWORD PTR [ecx+0x5a],0x6c905a5b
  40306c:	or     DWORD PTR [edx+0x3d],eax
  40306f:	mov    edi,0x83277e40
  403074:	xchg   edi,eax
  403075:	scas   eax,DWORD PTR es:[edi]
  403076:	adc    eax,0x4f4dff8b
  40307b:	shl    DWORD PTR [edx],cl
  40307d:	inc    edx
  40307e:	dec    esi
  40307f:	(bad)  
  403080:	std    
  403081:	xor    eax,ebp
  403083:	xchg   edx,eax
  403084:	jo     0x40302e
  403086:	stc    
  403087:	adc    cl,BYTE PTR [ecx]
  403089:	dec    ebp
  40308a:	xchg   BYTE PTR [edi+edi*4],ch
  40308d:	rcl    BYTE PTR [ebx-0x2e],1
  403090:	jae    0x4030c1
  403092:	sbb    cl,BYTE PTR [eax]
  403094:	test   al,0xdf
  403096:	sbb    al,0x85
  403098:	sub    BYTE PTR [eax],al
  40309a:	jns    0x4030bc
  40309c:	xor    al,0x9a
  40309e:	mov    esp,0x33f477e3
  4030a3:	dec    esp
  4030a4:	mov    ds:0x1873c653,eax
  4030a9:	xor    BYTE PTR [ecx-0x65],dh
  4030ac:	mov    edi,0xd4b81179
  4030b1:	add    ah,BYTE PTR [edx]
  4030b3:	stos   BYTE PTR es:[edi],al
  4030b4:	push   ebp
  4030b5:	dec    eax
  4030b6:	mov    eax,ds:0x69633344
  4030bb:	lods   eax,DWORD PTR cs:[esi]
  4030bd:	shr    BYTE PTR [ecx+0x31b967e8],1
  4030c3:	and    dl,BYTE PTR [ebx+eiz*2-0x3bd10069]
  4030ca:	addr16 retf 
  4030cc:	push   ebp
  4030cd:	and    DWORD PTR [ebp-0x30f8918c],ecx
  4030d3:	push   edx
  4030d4:	test   eax,0x87d3cebe
  4030d9:	fcom   QWORD PTR [edx]
  4030db:	cwde   
  4030dc:	cmp    esp,edi
  4030de:	adc    BYTE PTR ds:0x795fa677,cl
  4030e4:	mov    ebp,DWORD PTR [eax+0x2b3671c9]
  4030ea:	sbb    DWORD PTR ds:0x7d14928e,edx
  4030f0:	inc    eax
  4030f1:	sub    al,0x80
  4030f3:	mov    eax,0x40c056a7
  4030f8:	and    dh,BYTE PTR [esi+ebx*1]
  4030fb:	mov    WORD PTR [edi-0x4e],gs
  4030fe:	or     al,0xb1
  403100:	jnp    0x403114
  403102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403103:	cli    
  403104:	sub    DWORD PTR [ebx-0x249f71f0],esi
  40310a:	inc    edi
  40310b:	xor    DWORD PTR [ecx],esi
  40310d:	or     eax,0x2030791b
  403112:	call   0x7a67aedc
  403117:	out    0xf1,eax
  403119:	inc    eax
  40311a:	fnstsw WORD PTR [eax+0x1fc26ddf]
  403120:	mov    ds:0x57e2143b,eax
  403125:	mov    ebx,0xc442edcc
  40312a:	outs   dx,DWORD PTR ds:[esi]
  40312b:	mov    ecx,ebp
  40312d:	dec    ecx
  40312e:	test   BYTE PTR [eax-0x6d],ch
  403131:	inc    esp
  403132:	sub    ecx,0x55
  403135:	adc    DWORD PTR [edi+0x7f8393af],esi
  40313b:	lahf   
  40313c:	in     eax,0x8a
  40313e:	mov    ds:0x84f2dfcb,eax
  403143:	mov    ebp,fs
  403145:	es int3 
  403147:	out    0xd1,eax
  403149:	jle    0x403122
  40314b:	int    0xcb
  40314d:	idiv   BYTE PTR [esi-0x23ebb02f]
  403153:	inc    esi
  403154:	or     al,0xe8
  403156:	gs inc ebx
  403158:	push   eax
  403159:	xor    BYTE PTR [ebx+0x5e],bl
  40315c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315d:	mov    eax,0xb20e9096
  403162:	inc    esp
  403163:	into   
  403164:	xchg   ebx,eax
  403165:	mov    ah,0xf3
  403167:	pop    ebx
  403168:	pop    edi
  403169:	es retf 0x7e8f
  40316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316e:	mov    al,BYTE PTR [eax+0x4c]
  403171:	jmp    0xc0b9:0xaac13fa0
  403178:	or     DWORD PTR [ecx-0x41],ecx
  40317b:	sbb    BYTE PTR [edx],0xb5
  40317e:	jo     0x403138
  403180:	or     dh,BYTE PTR [ecx+0x20d6d855]
  403186:	sbb    al,0xb0
  403188:	or     DWORD PTR [edi+0x7762c172],edi
  40318e:	and    ah,BYTE PTR ds:0x57316502
  403194:	outs   dx,BYTE PTR ds:[esi]
  403195:	add    esp,DWORD PTR [ebx+ecx*4]
  403198:	pop    eax
  403199:	bound  edi,QWORD PTR [edi-0x36]
  40319c:	(bad)  
  40319d:	imul   edi,DWORD PTR [edx+0x1d],0x1
  4031a1:	adc    dh,BYTE PTR [edx-0x28]
  4031a4:	gs fmul st,st(0)
  4031a7:	jb     0x403129
  4031a9:	or     al,0xc1
  4031ab:	lods   eax,DWORD PTR ds:[esi]
  4031ac:	push   esp
  4031ad:	inc    esp
  4031ae:	in     eax,dx
  4031af:	push   esi
  4031b0:	jge    0x40322a
  4031b2:	loope  0x4031e5
  4031b4:	and    ebp,edi
  4031b6:	sbb    al,0x85
  4031b8:	add    ecx,esp
  4031ba:	int    0x51
  4031bc:	cs mov esp,0xa7317572
  4031c2:	sbb    eax,0x67
  4031c5:	mov    esp,0x24e129c1
  4031ca:	xchg   ebx,eax
  4031cb:	sub    cl,BYTE PTR cs:[ecx]
  4031ce:	(bad)  
  4031cf:	cmp    eax,0xb9924267
  4031d4:	mov    bh,BYTE PTR [eax]
  4031d6:	int3   
  4031d7:	or     eax,0x3e885922
  4031dc:	ret    
  4031dd:	push   esp
  4031de:	(bad)  
  4031df:	pop    ds
  4031e0:	dec    eax
  4031e1:	xor    dh,ah
  4031e3:	ret    0xfd29
  4031e6:	shr    edx,cl
  4031e8:	ret    0x8f62
  4031eb:	mov    eax,ds:0x2667fc25
  4031f0:	dec    esi
  4031f1:	jnp    0x40322c
  4031f3:	jbe    0x403251
  4031f5:	inc    edx
  4031f6:	scas   eax,DWORD PTR es:[edi]
  4031f7:	push   cs
  4031f8:	and    BYTE PTR [edi+ecx*8+0x6251b53b],bh
  4031ff:	cmp    eax,0x5a3bc2be
  403204:	(bad)  [eax]
  403206:	ss xchg edx,eax
  403208:	jg     0x4031f2
  40320a:	fidiv  WORD PTR [esi]
  40320c:	push   esp
  40320d:	push   ecx
  40320e:	test   al,0x4c
  403210:	mov    ds:0xb064d58a,al
  403215:	loopne 0x40324e
  403217:	je     0x40326e
  403219:	fdiv   DWORD PTR [ebx]
  40321b:	sahf   
  40321c:	ret    0x50c2
  40321f:	sar    BYTE PTR [ecx-0x201171ec],1
  403225:	jnp    0x4031c1
  403227:	pop    ds
  403228:	aam    0x12
  40322a:	ret    
  40322b:	xor    BYTE PTR [ebp+0x1a],ah
  40322e:	and    BYTE PTR [esi-0x93f545c],al
  403234:	jge    0x403271
  403236:	clc    
  403237:	pop    ds
  403238:	jp     0x4031fe
  40323a:	pop    ss
  40323b:	out    0x4c,al
  40323d:	adc    BYTE PTR [ebx-0x17708049],0x3f
  403244:	pop    edi
  403245:	push   edi
  403246:	sub    BYTE PTR [esi],bh
  403248:	and    al,BYTE PTR [eax+0x3d]
  40324b:	test   DWORD PTR [edi],ecx
  40324d:	clc    
  40324e:	ror    ah,cl
  403250:	es iret 
  403252:	pop    ebx
  403253:	(bad)  [ecx]
  403255:	push   eax
  403256:	push   0x1e
  403258:	imul   esp,DWORD PTR [edx+0x38],0xfffffff7
  40325c:	dec    ebx
  40325d:	xchg   ecx,eax
  40325e:	(bad)  
  403260:	or     edx,edx
  403262:	adc    edi,esi
  403264:	fbstp  TBYTE PTR [esi+ebx*8]
  403267:	ffree  st(5)
  403269:	jle    0x403245
  40326b:	inc    edi
  40326c:	jmp    0xe4df6fc7
  403271:	mov    ebp,0x95313afd
  403276:	mov    BYTE PTR [edx+edx*2+0x16adedfa],ah
  40327d:	add    DWORD PTR [edx],edi
  40327f:	push   ebx
  403280:	pop    ss
  403281:	push   0xa364c921
  403286:	std    
  403287:	in     eax,0xbf
  403289:	cwde   
  40328a:	jg     0x4032d1
  40328c:	dec    esi
  40328d:	or     BYTE PTR [ebp-0x5e],ch
  403290:	add    eax,0xf0175964
  403295:	xor    bl,dl
  403297:	xchg   edx,eax
  403298:	gs jns 0x403283
  40329b:	mov    ah,0x24
  40329d:	dec    ebx
  40329e:	mov    DWORD PTR [edi],edx
  4032a0:	adc    BYTE PTR [edx],dh
  4032a2:	inc    edi
  4032a3:	cmp    BYTE PTR [eax+edx*1-0x522a31a2],bh
  4032aa:	mov    bl,0x9e
  4032ac:	test   al,0xd8
  4032ae:	aas    
  4032af:	nop
  4032b0:	xchg   edi,eax
  4032b1:	dec    esi
  4032b2:	xor    bh,ah
  4032b4:	arpl   WORD PTR [edi+ebx*8-0x1e7fbf27],bx
  4032bb:	mov    al,ds:0xb85a0211
  4032c0:	sti    
  4032c1:	adc    BYTE PTR [ecx+0x49],bl
  4032c4:	cmp    al,0xe2
  4032c6:	data16 jns 0x4032a0
  4032c9:	ret    0x31d2
  4032cc:	mov    esp,0xa7104d33
  4032d1:	xor    dh,dl
  4032d3:	mov    ecx,0xa84ae23
  4032d8:	popf   
  4032d9:	enter  0xcb01,0xe8
  4032dd:	cwde   
  4032de:	mov    bh,0xef
  4032e0:	mov    ch,0x6c
  4032e2:	fwait
  4032e3:	stos   DWORD PTR es:[edi],eax
  4032e4:	(bad)  [eax-0x63a2700b]
  4032ea:	push   es
  4032eb:	popf   
  4032ec:	js     0x4032c3
  4032ee:	jecxz  0x403272
  4032f0:	jno    0x403274
  4032f2:	(bad)  
  4032f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f4:	mov    WORD PTR [ebx+ebp*4-0x14],ds
  4032f8:	push   esp
  4032f9:	mov    DWORD PTR [edx+edx*8-0x3c],edx
  4032fd:	add    BYTE PTR [edx-0x2b],0x16
  403301:	scas   al,BYTE PTR es:[edi]
  403302:	rcl    DWORD PTR [ebp-0xe],1
  403305:	ja     0x4032e1
  403307:	or     al,0x31
  403309:	mov    eax,DWORD PTR [edx]
  40330b:	fld    QWORD PTR [edi+0xc]
  40330e:	into   
  40330f:	cmc    
  403310:	sti    
  403311:	inc    ebp
  403312:	mov    ds:0xa1eef07f,eax
  403317:	sbb    DWORD PTR [ecx-0x2f560f78],ebp
  40331d:	hlt    
  40331e:	sbb    edx,eax
  403320:	iret   
  403321:	and    bh,ch
  403323:	mov    al,ds:0xa3bb06
  403328:	mov    al,0xc1
  40332a:	add    dh,BYTE PTR [ebx]
  40332c:	mov    ecx,DWORD PTR [eax-0x293d610c]
  403332:	add    dl,BYTE PTR [ebp+0x57]
  403335:	sub    eax,DWORD PTR [eax+eiz*2+0x33]
  403339:	or     cl,BYTE PTR [ebx-0x434819c7]
  40333f:	in     al,0x91
  403341:	call   0xcdfdec5d
  403346:	enter  0xf722,0xe1
  40334a:	push   ss
  40334b:	test   BYTE PTR [ebx+0x3769d5b8],dl
  403351:	repz jl 0x4033a7
  403354:	(bad)  
  403355:	repnz push cs
  403357:	inc    edi
  403358:	inc    edx
  403359:	ret    
  40335a:	push   es
  40335b:	je     0x4033c5
  40335d:	jl     0x4033ba
  40335f:	mov    eax,DWORD PTR [ecx+0x28]
  403362:	inc    esi
  403363:	neg    BYTE PTR [eax-0x40]
  403366:	mov    dl,0x29
  403368:	inc    ebx
  403369:	and    al,BYTE PTR [esi+edi*1-0x2c]
  40336d:	jmp    0x4033c3
  40336f:	gs in  al,dx
  403371:	dec    edx
  403372:	sbb    BYTE PTR [ecx+0x14],0xa7
  403376:	or     ecx,DWORD PTR [ebx-0x64]
  403379:	neg    dl
  40337b:	scas   al,BYTE PTR es:[edi]
  40337c:	call   0x5753:0x71c73ab3
  403383:	jbe    0x403378
  403385:	sbb    cl,ah
  403387:	test   BYTE PTR [ecx],bl
  403389:	fsub   st,st(2)
  40338b:	adc    DWORD PTR [ecx],edi
  40338d:	mov    esi,0x9732632
  403392:	push   cs
  403393:	inc    ecx
  403394:	cdq    
  403395:	aad    0xb2
  403397:	js     0x40334e
  403399:	fdivrp st(6),st
  40339b:	ins    DWORD PTR es:[edi],dx
  40339c:	fld    DWORD PTR [ebp+eiz*1-0x61]
  4033a0:	push   cs
  4033a1:	test   DWORD PTR [ecx-0x7b],edi
  4033a4:	(bad)  
  4033a5:	imul   esp,DWORD PTR [ecx],0x7
  4033a8:	inc    esi
  4033a9:	popf   
  4033aa:	loop   0x403357
  4033ac:	sbb    BYTE PTR [ebx+0x3f96b59b],bh
  4033b2:	in     eax,dx
  4033b3:	mov    ah,0x60
  4033b5:	or     al,0xe3
  4033b7:	push   ebp
  4033b8:	mov    ebp,eax
  4033ba:	mov    ah,0x7a
  4033bc:	jle    0x4033f9
  4033be:	jp     0x4033c0
  4033c0:	cmp    BYTE PTR [eax-0xc0cf3bd],ch
  4033c6:	cli    
  4033c7:	xlat   BYTE PTR ds:[ebx]
  4033c8:	sub    DWORD PTR [ecx],ebx
  4033ca:	dec    esp
  4033cb:	xor    DWORD PTR [edi-0x7e],0x7357b860
  4033d2:	sbb    al,0xcb
  4033d4:	dec    eax
  4033d5:	mov    edi,0x75695d68
  4033da:	or     dh,0xf6
  4033dd:	leave  
  4033de:	xor    eax,esi
  4033e0:	mov    al,ds:0xf1247b7c
  4033e5:	loopne 0x403423
  4033e7:	lds    edi,FWORD PTR [edi+0x1a]
  4033ea:	mov    edx,0x888280a1
  4033ef:	jae    0x40343d
  4033f1:	mov    ch,BYTE PTR [ebx-0xa]
  4033f4:	xor    BYTE PTR [esi-0x21bf0340],bh
  4033fa:	mov    al,0x7e
  4033fc:	gs adc dh,ch
  4033ff:	pop    edx
  403400:	cli    
  403401:	pop    ebp
  403402:	and    BYTE PTR [esi],al
  403404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403405:	fild   WORD PTR [edi-0x79]
  403408:	icebp  
  403409:	xchg   edi,eax
  40340a:	push   ds
  40340b:	or     dl,BYTE PTR [edi-0x498acbde]
  403411:	dec    eax
  403412:	mov    al,0xca
  403414:	and    DWORD PTR [ebx],esp
  403416:	sbb    eax,0xd489436d
  40341b:	push   ecx
  40341c:	mov    dh,0xbb
  40341e:	xor    BYTE PTR [ebp+0x3a],ah
  403421:	retf   0x5994
  403424:	or     BYTE PTR [ecx],ah
  403426:	jmp    0xeb736442
  40342b:	mov    ch,0xf7
  40342d:	mov    eax,ds:0x5492f041
  403432:	repz sbb eax,0xee514721
  403438:	inc    ebp
  403439:	xchg   esi,eax
  40343a:	imul   ch
  40343c:	or     ebp,0xfe385dd2
  403442:	xchg   ah,dl
  403444:	mov    al,0xad
  403446:	sub    BYTE PTR [edi-0x38c8a60f],ah
  40344c:	mov    dh,0x5e
  40344e:	sbb    al,0x7c
  403450:	nop
  403451:	sti    
  403452:	ja     0x403487
  403454:	cmp    dl,BYTE PTR [esi]
  403456:	push   es
  403457:	call   0x26d96951
  40345c:	or     ch,dh
  40345e:	adc    al,0x6e
  403460:	dec    ecx
  403461:	inc    esi
  403462:	ds (bad) 
  403466:	jno    0x40342b
  403468:	pop    esi
  403469:	and    al,0x61
  40346b:	out    dx,eax
  40346c:	sbb    BYTE PTR [ebx+ebx*1-0x1e],ah
  403470:	adc    DWORD PTR [ebp+0x2c9a0079],esi
  403476:	stos   BYTE PTR es:[edi],al
  403477:	or     ecx,esi
  403479:	(bad)  
  40347b:	fadd   DWORD PTR [esi]
  40347d:	fsub   st(6),st
  40347f:	es xchg esp,eax
  403481:	mov    dh,0xb3
  403483:	xchg   ebx,eax
  403484:	int    0xc4
  403486:	lock enter 0x983,0xca
  40348b:	pop    esp
  40348c:	int    0x4d
  40348e:	into   
  40348f:	jb     0x40341f
  403491:	ret    0x4492
  403494:	sub    ebx,DWORD PTR [ebx+0x39]
  403497:	scas   eax,DWORD PTR es:[edi]
  403498:	push   ebp
  403499:	(bad)  
  40349a:	xor    al,0xd2
  40349c:	lods   al,BYTE PTR ds:[esi]
  40349d:	adc    eax,0x41413e2b
  4034a2:	or     BYTE PTR [esi-0x53de635b],dl
  4034a8:	maxps  xmm1,XMMWORD PTR [ebx+0x70]
  4034ac:	fisubr DWORD PTR [ebx-0x9974c66]
  4034b2:	mov    edx,0xfb59d908
  4034b7:	push   eax
  4034b8:	jo     0x40348a
  4034ba:	scas   eax,DWORD PTR es:[edi]
  4034bb:	daa    
  4034bc:	xor    al,0x7d
  4034be:	pop    ds
  4034bf:	add    al,0x45
  4034c1:	xchg   ebp,eax
  4034c2:	add    DWORD PTR [ecx],ebx
  4034c4:	push   0xffffffd7
  4034c6:	test   eax,0xb0a88266
  4034cb:	add    eax,0xc983b36a
  4034d0:	mov    bl,0x55
  4034d2:	pop    es
  4034d3:	mov    ?,WORD PTR [ebx-0x76]
  4034d6:	xor    DWORD PTR [ecx+0x34],ebx
  4034d9:	jg     0x403546
  4034db:	popf   
  4034dc:	sbb    dh,ah
  4034de:	pop    edx
  4034df:	(bad)  
  4034e0:	dec    edx
  4034e1:	xchg   esi,eax
  4034e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034e3:	mov    ds:0x9a200b4c,eax
  4034e8:	popa   
  4034e9:	add    ah,al
  4034eb:	fnsave [ebx]
  4034ed:	dec    edi
  4034ee:	add    eax,0xeb64fcd7
  4034f3:	and    DWORD PTR [eax+0x72],esp
  4034f6:	push   ebp
  4034f7:	cmc    
  4034f8:	or     al,0x24
  4034fa:	pop    edx
  4034fb:	dec    ebx
  4034fc:	sub    DWORD PTR ds:0x4b37bd57,edx
  403502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403503:	inc    ebx
  403504:	ja     0x403519
  403506:	pop    esi
  403507:	mov    BYTE PTR [esi-0x11689e70],bl
  40350d:	out    0xb3,al
  40350f:	addr16 sti 
  403511:	xchg   esp,eax
  403512:	arpl   WORD PTR [edi-0x8],dx
  403515:	add    eax,0x63fe920
  40351a:	sbb    dl,BYTE PTR [ebx+ebp*4-0x51]
  40351e:	mov    ecx,0x41f7f402
  403523:	lods   eax,DWORD PTR ds:[esi]
  403524:	dec    eax
  403525:	rcl    DWORD PTR [ecx-0x18],0x37
  403529:	jl     0x4034d1
  40352b:	scas   al,BYTE PTR es:[edi]
  40352c:	add    BYTE PTR [ecx-0xb],dl
  40352f:	mov    eax,ds:0x3a3380a1
  403534:	fisub  WORD PTR [ecx-0x57]
  403537:	(bad)  
  403538:	mov    WORD PTR [ebx+0x6eb904a0],es
  40353e:	(bad)  
  40353f:	imul   DWORD PTR [ebx+0x2b]
  403542:	pop    ss
  403543:	icebp  
  403544:	jo     0x4034db
  403546:	cs xchg ebx,eax
  403548:	aad    0xe7
  40354a:	pop    esp
  40354b:	cdq    
  40354c:	or     al,0x6f
  40354e:	leave  
  40354f:	rcr    BYTE PTR [ebx-0x1f],0x68
  403553:	pop    esp
  403554:	jmp    0x4034e4
  403556:	aam    0x6a
  403558:	xor    al,0x9b
  40355a:	fs pop edi
  40355c:	or     eax,0x74df222
  403561:	xor    edi,esi
  403563:	and    BYTE PTR [esi],bh
  403565:	dec    ecx
  403566:	pop    esi
  403567:	xchg   esp,eax
  403568:	les    edi,FWORD PTR [eax+eax*4+0x4ee4ecc8]
  40356f:	xchg   esi,eax
  403570:	cmp    ecx,esp
  403572:	loop   0x4035ef
  403574:	push   0x52
  403576:	push   0x29
  403578:	mov    bh,0x7c
  40357a:	nop
  40357b:	push   ds
  40357c:	push   0xaecd60fa
  403581:	mov    ch,0xa3
  403583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403584:	in     al,dx
  403585:	jo     0x4035e0
  403587:	mov    dl,0x1e
  403589:	sub    DWORD PTR [esi-0x56],edx
  40358c:	mov    dl,0x13
  40358e:	pusha  
  40358f:	neg    DWORD PTR [ecx-0x3eb7dde4]
  403595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403596:	mov    WORD PTR ds:0x7bdd8a9,cs
  40359c:	arpl   di,bx
  40359e:	loope  0x4035f1
  4035a0:	sub    DWORD PTR [esi+0x3a],0x2aa8de24
  4035a7:	jmp    0x1a7d:0xeb20435
  4035ae:	cmp    bl,dl
  4035b0:	outs   dx,BYTE PTR ds:[esi]
  4035b1:	outs   dx,DWORD PTR ds:[esi]
  4035b2:	aam    0x89
  4035b4:	aaa    
  4035b5:	pop    ebp
  4035b6:	mov    BYTE PTR es:[eax-0x333ff212],0xbf
  4035be:	repnz xor esp,DWORD PTR [esi+esi*8+0x740f7707]
  4035c6:	xchg   DWORD PTR [ebp-0x5],ecx
  4035c9:	or     al,0x74
  4035cb:	hlt    
  4035cc:	loope  0x40359a
  4035ce:	aas    
  4035cf:	(bad)  
  4035d0:	or     al,0xe0
  4035d2:	ret    
  4035d3:	cld    
  4035d4:	inc    ebx
  4035d5:	ins    DWORD PTR es:[edi],dx
  4035d6:	mov    cl,0x71
  4035d8:	adc    esi,DWORD PTR [ecx+0x2b]
  4035db:	imul   ebx,DWORD PTR ds:0x4c3a846c,0xffffffa2
  4035e2:	push   es
  4035e3:	shr    DWORD PTR [edi+0x3d1499bf],0xfb
  4035ea:	push   ebp
  4035eb:	(bad)  
  4035ec:	out    0xc7,al
  4035ee:	cs inc edx
  4035f0:	fstp   QWORD PTR [edi-0x722b4f84]
  4035f6:	mov    bh,0x10
  4035f8:	fidivr DWORD PTR [edi]
  4035fa:	mov    al,0xa
  4035fc:	test   al,0x9f
  4035fe:	(bad)  
  403600:	pushf  
  403601:	sbb    ch,ch
  403603:	hlt    
  403604:	js     0x403679
  403606:	jbe    0x403616
  403608:	int    0x1b
  40360a:	mov    ds:0xa7d7f2fa,al
  40360f:	aam    0x9e
  403611:	loopne 0x4035eb
  403613:	out    dx,al
  403614:	loope  0x40366e
  403616:	sbb    ecx,DWORD PTR [ecx+eiz*8+0xc]
  40361a:	mov    ecx,0x48c1aaff
  40361f:	jg     0x4035bc
  403621:	cmp    BYTE PTR [edi+0x69],0x13
  403625:	retf   
  403626:	jne    0x40369e
  403628:	lods   al,BYTE PTR ds:[esi]
  403629:	add    al,0xc4
  40362b:	int    0x68
  40362d:	int    0x3e
  40362f:	xor    BYTE PTR [esi+0x23],0x25
  403633:	mov    fs,WORD PTR [ecx-0x3d]
  403636:	pop    esi
  403637:	pop    esp
  403638:	sub    ecx,DWORD PTR [ecx]
  40363a:	stos   DWORD PTR es:[edi],eax
  40363b:	xor    eax,0xb4e208cd
  403640:	ret    
  403641:	adc    ebx,DWORD PTR [ecx-0x1a651797]
  403647:	and    BYTE PTR [edi-0x53756ff],ch
  40364d:	test   al,0xe5
  40364f:	fmul   QWORD PTR [ebp-0x18]
  403652:	enter  0x6901,0x83
  403656:	or     BYTE PTR [eax+edi*4+0x9d24392],al
  40365d:	call   0xa1dc2f7
  403662:	push   esi
  403663:	sub    cl,ah
  403665:	inc    sp
  403667:	out    0xae,al
  403669:	iret   
  40366a:	ror    DWORD PTR [ecx],0xcf
  40366d:	sbb    esp,ecx
  40366f:	push   ss
  403670:	inc    edi
  403671:	push   ebx
  403672:	aas    
  403673:	lds    ebp,FWORD PTR [edx]
  403675:	mov    al,ds:0xd95337d2
  40367a:	mov    bl,0x64
  40367c:	sub    al,0xfd
  40367e:	loop   0x403618
  403680:	pop    ss
  403681:	and    edi,eax
  403683:	sbb    al,0xa7
  403685:	jp     0x40368c
  403687:	fnsave [eax+edi*1+0x6]
  40368b:	push   es
  40368c:	sub    al,0x1b
  40368e:	dec    BYTE PTR [esi+eax*1-0x7da45a93]
  403695:	mov    ebx,0xa336a399
  40369a:	mov    edx,0xad9d1621
  40369f:	imul   esi,DWORD PTR [esi+0x5a],0x59d0d8fc
  4036a6:	jp     0x403670
  4036a8:	scas   eax,DWORD PTR es:[edi]
  4036a9:	inc    edx
  4036aa:	dec    ebx
  4036ab:	mov    WORD PTR [ecx+0x75],?
  4036ae:	xor    al,0xcb
  4036b0:	(bad)  
  4036b1:	aas    
  4036b2:	ins    BYTE PTR es:[edi],dx
  4036b3:	inc    esp
  4036b4:	push   ebp
  4036b5:	xor    al,ah
  4036b7:	dec    esi
  4036b8:	xchg   DWORD PTR [ecx+eiz*1-0x24bfafff],ecx
  4036bf:	shl    eax,1
  4036c1:	inc    ecx
  4036c2:	cdq    
  4036c3:	jnp    0x403740
  4036c5:	mov    ebx,eax
  4036c7:	and    al,BYTE PTR [esi-0x14b0a134]
  4036cd:	cs stos DWORD PTR es:[edi],eax
  4036cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d0:	shr    BYTE PTR [ebx],0x31
  4036d3:	call   0x27f1beae
  4036d8:	rcl    BYTE PTR [esi-0x651ed7d4],cl
  4036de:	sbb    dl,BYTE PTR [esi+edi*1]
  4036e1:	ins    BYTE PTR es:[edi],dx
  4036e2:	add    esi,0x4c
  4036e5:	sbb    eax,0x5fbb8551
  4036ea:	iret   
  4036eb:	inc    esi
  4036ec:	ror    esi,cl
  4036ee:	xlat   BYTE PTR ds:[ebx]
  4036ef:	jmp    DWORD PTR [ecx]
  4036f1:	std    
  4036f2:	mov    ebx,0xe30d5dd4
  4036f7:	inc    edi
  4036f8:	mov    bh,0x9f
  4036fa:	jbe    0x403721
  4036fc:	inc    edi
  4036fd:	out    dx,eax
  4036fe:	lods   al,BYTE PTR ds:[esi]
  4036ff:	test   eax,0xe6291011
  403704:	iret   
  403705:	inc    edi
  403706:	imul   edx,ebx,0xd9b6132b
  40370c:	mov    edx,0xc5954ca6
  403711:	or     eax,DWORD PTR ds:0xf01370fe
  403717:	mov    DWORD PTR [edx-0x5713f1e],eax
  40371d:	mov    cl,0x14
  40371f:	js     0x4036fc
  403721:	fimul  WORD PTR [ebx-0x7d]
  403724:	mov    eax,ds:0x63a443f2
  403729:	(bad)  
  40372a:	call   esp
  40372c:	out    dx,al
  40372d:	je     0x40371b
  40372f:	(bad)  
  403730:	hlt    
  403731:	jo     0x403708
  403733:	push   ebx
  403734:	mov    esi,0xc4800839
  403739:	cmp    esp,DWORD PTR [eax]
  40373b:	push   ecx
  40373c:	jb     0x91115bc4
  403742:	fcmovnu st,st(3)
  403744:	shl    BYTE PTR [edi+0x506a3834],0xdf
  40374b:	sbb    eax,0x63aa549b
  403750:	fdiv   QWORD PTR [ebx]
  403752:	stc    
  403753:	xor    ecx,ebp
  403755:	pop    ds
  403756:	inc    ebx
  403757:	dec    ebx
  403758:	mov    WORD PTR [ecx-0x63],ds
  40375b:	pushf  
  40375c:	xor    dh,al
  40375e:	ins    BYTE PTR es:[edi],dx
  40375f:	ret    0x148a
  403762:	dec    ebx
  403763:	ror    edi,cl
  403765:	push   ds
  403766:	fnsave [eax+eiz*8+0x5d592c41]
  40376d:	mov    ah,0x2f
  40376f:	ror    BYTE PTR [edx+ecx*4-0x1882f30f],0xfb
  403777:	add    al,0x28
  403779:	jae    0x403774
  40377b:	push   ecx
  40377c:	fs cmp eax,0xa91165a
  403782:	push   ss
  403783:	je     0x4037ab
  403785:	xor    dh,BYTE PTR [ecx+0x1c]
  403788:	ret    
  403789:	sub    ebx,0xfa2e4f8b
  40378f:	imul   edx,ebx,0x72
  403792:	mov    edx,DWORD PTR [ebp-0x543516e0]
  403798:	and    BYTE PTR [ecx+eax*2-0x60],al
  40379c:	sbb    cl,BYTE PTR [eax]
  40379e:	add    al,0xfa
  4037a0:	out    0x4e,eax
  4037a2:	sti    
  4037a3:	adc    al,0xfb
  4037a5:	loopne 0x4037a8
  4037a7:	dec    ebp
  4037a8:	cld    
  4037a9:	push   cs
  4037aa:	push   0x6a
  4037ac:	jne    0x40374b
  4037ae:	lock pusha 
  4037b0:	push   DWORD PTR [esi]
  4037b2:	loope  0x40374f
  4037b4:	cmp    al,0xfd
  4037b6:	and    DWORD PTR [ebp+0x6848e0b6],0xb1de9edc
  4037c0:	jbe    0x403743
  4037c2:	add    eax,0x132484be
  4037c7:	(bad)  
  4037c9:	sbb    BYTE PTR [ecx-0x4a4cc513],dl
  4037cf:	cwde   
  4037d0:	leave  
  4037d1:	inc    esi
  4037d2:	int3   
  4037d3:	inc    ecx
  4037d4:	faddp  st(2),st
  4037d6:	push   cs
  4037d7:	add    cl,al
  4037d9:	(bad)  
  4037da:	jmp    0x403786
  4037dc:	test   al,0xd0
  4037de:	in     eax,dx
  4037df:	out    dx,al
  4037e0:	add    DWORD PTR [esi+ebp*8+0x7d42bec9],eax
  4037e7:	jo     0x4037de
  4037e9:	aad    0x84
  4037eb:	mov    ds:0x45f0268b,al
  4037f0:	int3   
  4037f1:	or     eax,0x6b899742
  4037f6:	and    BYTE PTR [ebp+0x6e],cl
  4037f9:	add    eax,0xc9cf019c
  4037fe:	mov    esp,0x821e0f
  403803:	ud2    
  403805:	sub    BYTE PTR ds:0xae040710,ah
  40380b:	sbb    edi,DWORD PTR [edi-0x50]
  40380e:	ret    0xc5d5
  403811:	retf   
  403812:	popf   
  403813:	pop    es
  403814:	adc    DWORD PTR gs:[ecx],ebp
  403817:	inc    edx
  403818:	jl     0x403856
  40381a:	mov    dl,0x4c
  40381c:	(bad)  
  40381d:	cld    
  40381e:	push   es
  40381f:	adc    al,0x20
  403821:	(bad)  
  403822:	into   
  403823:	rcr    DWORD PTR [edx-0x45c8c5d0],0xcb
  40382a:	mov    ecx,0x37cd051f
  40382f:	fsubr  QWORD PTR [ecx-0x6f]
  403832:	stc    
  403833:	je     0x403874
  403835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403836:	mov    al,ch
  403838:	adc    eax,0x2c3f4a03
  40383d:	mov    eax,0x5fbcf253
  403842:	xor    ebp,0x5d4c3cd7
  403848:	jo     0x40389a
  40384a:	std    
  40384b:	sub    esi,DWORD PTR [ecx]
  40384d:	daa    
  40384e:	mov    cl,0x21
  403850:	jmp    0x403890
  403852:	aam    0x4
  403854:	and    DWORD PTR [ebx+0x2ad65d3b],0x8f8231a
  40385e:	cdq    
  40385f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403860:	mov    fs,esi
  403862:	pusha  
  403863:	jae    0x4037f4
  403865:	push   ebx
  403866:	stos   DWORD PTR es:[edi],eax
  403867:	mov    ebp,0xd76c6dcf
  40386c:	cli    
  40386d:	cmp    al,0xa5
  40386f:	jl     0x403859
  403871:	stc    
  403872:	mov    esi,eax
  403874:	ja     0x4038ed
  403876:	and    ah,BYTE PTR [ecx-0xc938349]
  40387c:	call   DWORD PTR [esi+0x48feae8b]
  403882:	mov    esp,0xfa17fcc7
  403887:	in     al,dx
  403888:	dec    ebx
  403889:	add    ebx,DWORD PTR [ebp-0x74]
  40388c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40388d:	mov    ecx,0xf20eab5c
  403892:	inc    ecx
  403893:	aaa    
  403894:	adc    esp,esi
  403896:	cld    
  403897:	push   edi
  403898:	dec    eax
  403899:	mov    cl,0xc5
  40389b:	xor    esp,DWORD PTR [edx]
  40389d:	icebp  
  40389e:	jle    0x403900
  4038a0:	pop    esi
  4038a1:	clc    
  4038a2:	outs   dx,DWORD PTR ds:[esi]
  4038a3:	mov    ecx,0x28c48a96
  4038a8:	(bad)  
  4038a9:	retf   0xa5c4
  4038ac:	mov    al,0xb9
  4038ae:	mov    ebp,ecx
  4038b0:	pop    ds
  4038b1:	push   ds
  4038b2:	test   al,0xb2
  4038b4:	xor    al,0x9e
  4038b6:	jmp    0x7e820f51
  4038bb:	sub    ch,BYTE PTR [edx]
  4038bd:	int    0x43
  4038bf:	shl    edi,cl
  4038c1:	hlt    
  4038c2:	fwait
  4038c3:	sahf   
  4038c4:	lahf   
  4038c5:	jb     0x4038ee
  4038c7:	div    DWORD PTR gs:[ebx]
  4038ca:	sahf   
  4038cb:	adc    dh,BYTE PTR [ebp-0x66]
  4038ce:	rcr    esi,0x38
  4038d1:	adc    al,0x8d
  4038d3:	mov    cl,0x5
  4038d5:	inc    esi
  4038d6:	push   ebx
  4038d7:	std    
  4038d8:	test   DWORD PTR [ebp+0x35],edi
  4038db:	ret    0xcd83
  4038de:	xor    al,0x34
  4038e0:	push   es
  4038e1:	add    dh,BYTE PTR [edi-0x48adc2f7]
  4038e7:	int3   
  4038e8:	xchg   edi,eax
  4038e9:	sub    edx,DWORD PTR [esi]
  4038eb:	add    esp,DWORD PTR [ebx+esi*4]
  4038ee:	les    eax,FWORD PTR [edx+0x3290401]
  4038f4:	out    0xd9,eax
  4038f6:	ret    0x9fac
  4038f9:	push   eax
  4038fa:	adc    al,0x6b
  4038fc:	mov    bl,0x1d
  4038fe:	stos   DWORD PTR es:[edi],eax
  4038ff:	pusha  
  403900:	jae    0x40394d
  403902:	jno    0x40396b
  403904:	sbb    BYTE PTR [edx-0x1],al
  403907:	or     bl,BYTE PTR [edi-0x2f]
  40390a:	in     al,0x24
  40390c:	(bad)  
  40390d:	cmp    dl,BYTE PTR [edx+0x6a]
  403910:	je     0x4038bc
  403912:	mov    al,BYTE PTR [esi+0x2a15a3f7]
  403918:	popf   
  403919:	push   esp
  40391a:	je     0x403953
  40391c:	xor    edi,DWORD PTR [edx-0x2e7340ad]
  403922:	fist   WORD PTR [eax]
  403924:	xor    BYTE PTR [edi+ebx*2+0x64c0cbc],dl
  40392b:	idiv   DWORD PTR [esi-0x5f]
  40392e:	cmp    esp,DWORD PTR [edi+0x20]
  403931:	adc    eax,0x5e3aab09
  403936:	popa   
  403937:	sahf   
  403938:	jbe    0x4038ec
  40393a:	fild   DWORD PTR [edx]
  40393c:	cmp    ebp,edx
  40393e:	loopne 0x403927
  403940:	imul   edx,DWORD PTR [eax],0xffffffe2
  403943:	sub    ah,BYTE PTR [ebx-0x4e]
  403946:	fstp   TBYTE PTR [edi-0x437c3f7f]
  40394c:	mov    BYTE PTR [edi],0x31
  40394f:	sub    eax,edi
  403951:	push   es
  403952:	fidivr WORD PTR [ecx]
  403954:	das    
  403955:	sbb    cl,dh
  403957:	mov    dl,0xa0
  403959:	pop    eax
  40395a:	aad    0x32
  40395c:	push   0x76
  40395e:	sub    bl,bl
  403960:	clc    
  403961:	clc    
  403962:	xor    edi,DWORD PTR [edx+0x20]
  403965:	push   0xbb593892
  40396a:	xchg   esi,eax
  40396b:	mov    edx,0x2682c448
  403970:	lock dec ecx
  403972:	sbb    al,0xba
  403974:	push   0x432c0afb
  403979:	test   BYTE PTR [edx-0x22434a49],0xaf
  403980:	retf   
  403981:	ja     0x403941
  403983:	pop    edx
  403984:	fsin   
  403986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403987:	pop    edx
  403988:	lds    ebx,FWORD PTR [ebx]
  40398a:	test   bh,dh
  40398c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398d:	imul   esi,DWORD PTR [edx],0xffffffa7
  403990:	sub    BYTE PTR [edx],ah
  403992:	test   al,0xd3
  403994:	cmp    DWORD PTR [eax-0x17],0xfffffff4
  403998:	adc    al,0xd2
  40399a:	push   0xa645fd04
  40399f:	add    esi,DWORD PTR [ecx-0x42774677]
  4039a5:	sub    al,0xe4
  4039a7:	pop    edx
  4039a8:	mov    ebx,0x331bd20d
  4039ad:	push   esp
  4039ae:	xor    ch,BYTE PTR [eax-0xc]
  4039b1:	lods   al,BYTE PTR ds:[esi]
  4039b2:	dec    edx
  4039b3:	outs   dx,DWORD PTR ds:[esi]
  4039b4:	jnp    0x403a20
  4039b6:	call   0xd8517d96
  4039bb:	das    
  4039bc:	push   es
  4039bd:	outs   dx,DWORD PTR ds:[esi]
  4039be:	inc    edi
  4039bf:	pop    ss
  4039c0:	and    BYTE PTR [eax],cl
  4039c2:	pop    esi
  4039c3:	add    eax,ecx
  4039c5:	int    0x6
  4039c7:	dec    esp
  4039c8:	jp     0x40398d
  4039ca:	out    0xe0,al
  4039cc:	xchg   edi,eax
  4039cd:	push   edi
  4039ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039cf:	fst    QWORD PTR [ebp+0x1a2564ae]
  4039d5:	or     BYTE PTR ds:[esi],bl
  4039d8:	sbb    bh,dh
  4039da:	adc    eax,0xa65483f0
  4039df:	(bad)  
  4039e0:	(bad)  
  4039e2:	shr    BYTE PTR [esi+0x251f44df],0x3b
  4039e9:	ss push cs
  4039eb:	jne    0x4039e7
  4039ed:	adc    al,0x8e
  4039ef:	lods   eax,DWORD PTR ds:[esi]
  4039f0:	inc    ebx
  4039f1:	pop    ds
  4039f2:	outs   dx,DWORD PTR ds:[esi]
  4039f3:	jne    0x403a6d
  4039f5:	xchg   esi,eax
  4039f6:	xchg   BYTE PTR [ecx-0x62],dl
  4039f9:	xchg   BYTE PTR [esi+0x131beb0d],cl
  4039ff:	maxps  xmm6,XMMWORD PTR [edi]
  403a02:	push   ebp
  403a03:	das    
  403a04:	push   ds
  403a05:	leave  
  403a06:	pop    edx
  403a07:	test   eax,0x4977a32a
  403a0c:	mov    ebx,0x8ff27493
  403a11:	popf   
  403a12:	enter  0xd4da,0xd9
  403a16:	jo     0x4039c4
  403a18:	(bad)  
  403a1a:	sbb    DWORD PTR [eax],edx
  403a1c:	adc    eax,ecx
  403a1e:	mov    dl,0xae
  403a20:	sbb    eax,0x5da1b441
  403a25:	aaa    
  403a26:	mov    ebp,0xd79a0405
  403a2b:	fistp  WORD PTR [eax-0x7a]
  403a2e:	sub    al,BYTE PTR [edx]
  403a30:	sbb    al,0xeb
  403a32:	(bad)  
  403a33:	sbb    al,0x86
  403a35:	stc    
  403a36:	fs sub eax,0x28d1a448
  403a3c:	mov    cl,0x8a
  403a3e:	and    al,0x2b
  403a40:	xor    DWORD PTR [esi-0x66e34c5d],esi
  403a46:	add    DWORD PTR [ebx],edx
  403a48:	or     al,0x7d
  403a4a:	mov    ch,0x1b
  403a4c:	fidivr WORD PTR [eax]
  403a4e:	adc    eax,0xf18cd53b
  403a53:	imul   DWORD PTR [edx+esi*8]
  403a56:	mov    ds:0x24af1f43,eax
  403a5b:	add    eax,0x6357c983
  403a60:	fcomp  DWORD PTR [esi+0x1f]
  403a63:	and    ebp,edx
  403a65:	js     0x403a1a
  403a67:	inc    eax
  403a68:	mov    eax,0x68a6b9b3
  403a6d:	div    DWORD PTR [edx-0x23ade98b]
  403a73:	not    bh
  403a75:	mov    al,ds:0x3f20c830
  403a7a:	push   ebx
  403a7b:	fs pop edi
  403a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7e:	addr16 fwait
  403a80:	gs pop eax
  403a82:	repz or edx,edx
  403a85:	xor    ebx,DWORD PTR [edi-0x4080983b]
  403a8b:	mov    DWORD PTR [ebx-0x57],ebp
  403a8e:	xchg   esp,eax
  403a8f:	lods   eax,DWORD PTR ds:[esi]
  403a90:	push   eax
  403a91:	jnp    0x403a94
  403a93:	popf   
  403a94:	retf   
  403a95:	rcr    DWORD PTR [eax+0x51ebf7ad],cl
  403a9b:	mov    edi,0xb455a709
  403aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa1:	jmp    0xdd30112f
  403aa6:	mov    ds:0x4d937673,eax
  403aab:	dec    ebx
  403aac:	sub    eax,0x7514e27a
  403ab1:	ret    0xda1
  403ab4:	xor    ah,dl
  403ab6:	(bad)  
  403ab7:	xchg   ebx,eax
  403ab8:	pop    esi
  403ab9:	mov    ds:0x61d80818,eax
  403abe:	out    dx,eax
  403abf:	(bad)  
  403ac0:	push   ebp
  403ac1:	imul   eax,DWORD PTR [eax-0x40],0xffffff9e
  403ac5:	leave  
  403ac6:	adc    al,0xe1
  403ac8:	scas   eax,DWORD PTR es:[edi]
  403ac9:	fcomp  DWORD PTR [ebx-0x1fb29e0a]
  403acf:	aas    
  403ad0:	adc    dl,al
  403ad2:	xchg   esp,esi
  403ad4:	bnd jg 0x403a7f
  403ad7:	dec    esp
  403ad8:	push   ebx
  403ad9:	dec    ecx
  403ada:	and    ah,BYTE PTR [esi]
  403adc:	add    ebx,DWORD PTR [eax+ecx*1+0x6598ed69]
  403ae3:	xchg   edx,eax
  403ae4:	ret    0xc5e1
  403ae7:	pop    eax
  403ae8:	adc    al,0xd1
  403aea:	adc    ah,ah
  403aec:	(bad)  
  403aed:	xchg   ebp,eax
  403aee:	mov    esi,0xd3be0788
  403af3:	(bad)  
  403af4:	arpl   bx,bx
  403af6:	add    edx,DWORD PTR [esp+ebp*8-0x71]
  403afa:	in     eax,dx
  403afb:	push   esi
  403afc:	lds    ebp,FWORD PTR [ebp-0x28]
  403aff:	icebp  
  403b00:	mov    bh,0x75
  403b02:	rcl    edi,1
  403b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b05:	in     eax,dx
  403b06:	jl     0x403b34
  403b08:	mov    edx,0x2df8a3e
  403b0d:	sbb    eax,0x6cc868b
  403b12:	out    dx,eax
  403b13:	push   0xef9eb5d
  403b18:	mov    edi,0xff69334e
  403b1d:	dec    edx
  403b1e:	in     eax,0x14
  403b20:	xchg   DWORD PTR [ecx-0x6f726ab5],ecx
  403b26:	js     0x403b12
  403b28:	push   ebp
  403b29:	enter  0x6aa2,0xe5
  403b2d:	rol    BYTE PTR [ebp+0x6fc6f755],cl
  403b33:	mov    edi,0xed628b23
  403b38:	gs xchg edx,eax
  403b3a:	push   0xffffffcd
  403b3c:	xlat   BYTE PTR ds:[ebx]
  403b3d:	out    0x5d,eax
  403b3f:	outs   dx,BYTE PTR ds:[esi]
  403b40:	push   esp
  403b41:	jecxz  0x403b15
  403b43:	ja     0x403b02
  403b45:	pop    eax
  403b46:	push   cs
  403b47:	pop    ebx
  403b48:	lods   al,BYTE PTR ds:[esi]
  403b49:	add    bl,BYTE PTR [edi+0x1a]
  403b4c:	mov    DWORD PTR [ebx+0x70c00125],eax
  403b52:	or     BYTE PTR [edx+0x6e],0xc1
  403b56:	xor    BYTE PTR [ebx+eax*4],ah
  403b59:	lahf   
  403b5a:	ss xchg ebx,eax
  403b5c:	ins    BYTE PTR es:[edi],dx
  403b5d:	xchg   edx,eax
  403b5e:	mov    BYTE PTR [edx],ch
  403b60:	int3   
  403b61:	push   eax
  403b62:	push   ds
  403b63:	jb     0x403bd2
  403b65:	imul   DWORD PTR [esi]
  403b67:	rcl    BYTE PTR [ebx],1
  403b69:	inc    edx
  403b6a:	adc    BYTE PTR [edx],dh
  403b6c:	sahf   
  403b6d:	hlt    
  403b6e:	mov    ah,0xad
  403b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b72:	mov    edi,0x90226c9e
  403b77:	push   esp
  403b78:	xor    eax,0x2914cfb
  403b7d:	test   al,0xb7
  403b7f:	in     al,0xf5
  403b81:	mov    cl,0xd2
  403b83:	add    ecx,0x41
  403b86:	ds pop edx
  403b88:	and    eax,0xf8cd1d4e
  403b8d:	repz dec esp
  403b8f:	jmp    0x2bdd3104
  403b94:	lock sahf 
  403b96:	fcmove st,st(5)
  403b98:	or     al,0x83
  403b9a:	aaa    
  403b9b:	cmp    dl,bh
  403b9d:	adc    ecx,DWORD PTR [ebx]
  403b9f:	mov    ds:0xac8bd92f,eax
  403ba4:	aad    0x55
  403ba6:	mov    BYTE PTR [edi],bh
  403ba8:	jb     0x403c18
  403baa:	inc    esi
  403bab:	jmp    0x403c02
  403bad:	test   al,0xa3
  403baf:	push   0x9b0fe933
  403bb4:	adc    cl,0x7f
  403bb7:	add    al,0x40
  403bb9:	pop    edi
  403bba:	xchg   ebp,eax
  403bbb:	imul   ebp,DWORD PTR [edx],0xffffffbe
  403bbe:	(bad)  
  403bbf:	mov    ds:0x72f6dc11,eax
  403bc4:	pop    esi
  403bc5:	ins    BYTE PTR es:[edi],dx
  403bc6:	retf   
  403bc7:	rol    DWORD PTR [eax-0x4f87cca0],1
  403bcd:	in     eax,0xde
  403bcf:	and    esp,esp
  403bd1:	mov    ebp,0xcdd31957
  403bd6:	cmp    al,0x75
  403bd8:	inc    eax
  403bd9:	ret    0xdf94
  403bdc:	pop    esi
  403bdd:	mov    ebp,0x89f5d53a
  403be2:	aaa    
  403be3:	repz js 0x403b6c
  403be6:	adc    eax,0xbb6d03c8
  403beb:	ss (bad) 
  403bee:	sub    edi,0x4c
  403bf1:	jae    0x403b8b
  403bf3:	xor    eax,0x37d30956
  403bf8:	daa    
  403bf9:	js     0x403c3e
  403bfb:	mov    eax,ds:0x5a535ce2
  403c00:	ss repz jb 0x403c7e
  403c04:	pushf  
  403c05:	dec    edx
  403c06:	lea    edx,[ebp-0x2b]
  403c09:	outs   dx,BYTE PTR ds:[esi]
  403c0a:	and    BYTE PTR [ecx+0x368e674a],cl
  403c10:	or     eax,DWORD PTR [eax]
  403c12:	xor    eax,0x12274503
  403c17:	daa    
  403c18:	add    eax,0x680af960
  403c1d:	pop    esp
  403c1e:	and    bl,BYTE PTR [esp+eax*1-0x51]
  403c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c23:	sbb    al,0xa9
  403c25:	jns    0x403bf0
  403c27:	sbb    esp,DWORD PTR ds:0x7aa6efd0
  403c2d:	dec    edi
  403c2e:	pop    ecx
  403c2f:	in     al,dx
  403c30:	jecxz  0x403c29
  403c32:	inc    esp
  403c33:	and    bh,BYTE PTR ds:0x92f4c2e8
  403c39:	fst    QWORD PTR ds:0x925488d2
  403c40:	pop    ecx
  403c41:	das    
  403c42:	inc    eax
  403c43:	inc    eax
  403c44:	retf   
  403c45:	cdq    
  403c46:	mov    ebx,0xdda14095
  403c4b:	adc    al,0x12
  403c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c4e:	fadd   DWORD PTR [ebx]
  403c50:	out    0x2d,eax
  403c52:	pop    ebx
  403c53:	mul    BYTE PTR ds:[ecx]
  403c56:	lods   eax,DWORD PTR ds:[esi]
  403c57:	xor    BYTE PTR [esi+0x3a],cl
  403c5a:	sub    eax,0x7902a44d
  403c5f:	sub    BYTE PTR [ebx-0x55eb8294],0x5a
  403c66:	sar    BYTE PTR [eax],cl
  403c68:	or     esi,DWORD PTR [edi]
  403c6a:	lock mov cl,0x1
  403c6d:	aas    
  403c6e:	mov    BYTE PTR [ebp-0x33a40fed],bl
  403c74:	(bad)  
  403c75:	lods   eax,DWORD PTR ds:[esi]
  403c76:	imul   edx,DWORD PTR [edx],0x57
  403c79:	add    esi,DWORD PTR [edx+edi*2-0x47]
  403c7d:	adc    BYTE PTR [ebx+0x4195cbd7],dl
  403c83:	cld    
  403c84:	xor    ah,BYTE PTR [ebx+0x5e0803ff]
  403c8a:	ja     0x403d07
  403c8c:	xchg   ebx,eax
  403c8d:	xchg   esp,eax
  403c8e:	rol    BYTE PTR [esi+0x72],0x2f
  403c92:	inc    ebp
  403c93:	popf   
  403c94:	in     al,0x31
  403c96:	mov    al,BYTE PTR [ebx+0x2a]
  403c99:	pop    ebx
  403c9a:	mov    eax,ds:0x55af9ba8
  403c9f:	adc    cl,BYTE PTR [edx+0x15b90a66]
  403ca5:	popf   
  403ca6:	mov    dh,0x7c
  403ca8:	mov    ebp,0xd19c7df
  403cad:	or     cl,dh
  403caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb0:	inc    ebp
  403cb1:	lds    esp,FWORD PTR [ecx]
  403cb3:	sahf   
  403cb4:	mov    BYTE PTR [edi+0x74c34e7e],0xbe
  403cbb:	popf   
  403cbc:	dec    edx
  403cbd:	call   0x463870ba
  403cc2:	out    dx,eax
  403cc3:	or     eax,DWORD PTR [edx]
  403cc5:	inc    edi
  403cc6:	cmp    BYTE PTR [esi-0x20dd5cd2],dl
  403ccc:	or     BYTE PTR ds:0x69c14246,al
  403cd2:	push   ebx
  403cd3:	lds    eax,FWORD PTR [edx+ebp*1]
  403cd6:	js     0x403c5a
  403cd8:	cli    
  403cd9:	xor    ebp,DWORD PTR [ecx+0x77]
  403cdc:	test   DWORD PTR [esi+0x2f],esi
  403cdf:	call   0x5772bebc
  403ce4:	call   0xa532:0x84ee09f
  403ceb:	or     BYTE PTR [ecx-0x10eb73b7],bh
  403cf1:	sub    al,0x8
  403cf3:	call   0x2013:0x9e49940
  403cfa:	push   0xffffffa8
  403cfc:	ds mov dl,0xfe
  403cff:	xor    dh,BYTE PTR [esi-0x5d]
  403d02:	push   0xf6ff8aab
  403d07:	ss push eax
  403d09:	mov    al,0xea
  403d0b:	xlat   BYTE PTR ds:[ebx]
  403d0c:	xor    eax,0x36f4e93d
  403d11:	js     0x403d4b
  403d13:	loop   0x403ca0
  403d15:	mul    BYTE PTR [ebx]
  403d17:	not    DWORD PTR [ebx-0x50]
  403d1a:	fs dec esi
  403d1c:	popa   
  403d1d:	adc    DWORD PTR [edi-0x3d8bfc88],eax
  403d23:	xchg   BYTE PTR [esi+0x5a4acad4],ah
  403d29:	dec    edi
  403d2a:	push   esp
  403d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d2c:	push   edx
  403d2d:	addr16 add al,0x4b
  403d30:	inc    edx
  403d31:	dec    esp
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	shl    BYTE PTR [esi+0x55],cl
  403d36:	(bad)  
  403d37:	cs into 
  403d39:	je     0x403d6c
  403d3b:	sbb    al,0x6a
  403d3d:	loopne 0x403cfd
  403d3f:	out    dx,al
  403d40:	push   ds
  403d41:	xor    al,0xac
  403d43:	pop    ss
  403d44:	pop    ebx
  403d45:	jge    0x403dbd
  403d47:	mov    al,0xd
  403d49:	xor    esi,DWORD PTR ds:0x23096273
  403d4f:	xchg   edx,eax
  403d50:	mul    ah
  403d52:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d54:	jp     0x403d75
  403d56:	xor    DWORD PTR [edx-0x7c0abd3c],eax
  403d5c:	pop    esi
  403d5d:	shl    BYTE PTR [ebx-0x25],cl
  403d60:	cmc    
  403d61:	mov    ecx,DWORD PTR [edi+0x2ac634c7]
  403d67:	push   edi
  403d68:	xor    al,0x9f
  403d6a:	lahf   
  403d6b:	(bad)  
  403d6c:	jmp    0x358c40d5
  403d71:	pop    edx
  403d72:	dec    ecx
  403d73:	mov    bh,0xf3
  403d75:	fisub  DWORD PTR [ebx+0x6e]
  403d78:	outs   dx,DWORD PTR ds:[esi]
  403d79:	cs dec edi
  403d7b:	popa   
  403d7c:	pop    eax
  403d7d:	sub    BYTE PTR [edx],bh
  403d7f:	dec    esp
  403d80:	mov    ds:0x93f0534a,eax
  403d85:	adc    al,0x88
  403d87:	xor    BYTE PTR [ebx-0x35],ch
  403d8a:	pusha  
  403d8b:	push   cs
  403d8c:	or     DWORD PTR [ebx+0x43b02580],ebp
  403d92:	xor    esp,DWORD PTR [esi+0x456b3d1d]
  403d98:	fwait
  403d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9a:	mul    DWORD PTR [edi-0x52]
  403d9d:	cmc    
  403d9e:	cmp    BYTE PTR [edi-0x4998da06],ch
  403da4:	pop    ss
  403da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da6:	pop    eax
  403da7:	and    ebx,DWORD PTR [edi+0x17f0276b]
  403dad:	mov    al,ds:0x87ff411
  403db2:	inc    ecx
  403db3:	fdivr  DWORD PTR [esi+ecx*2]
  403db6:	and    eax,0x78e4edff
  403dbb:	xchg   edx,eax
  403dbc:	or     al,0xdf
  403dbe:	xchg   DWORD PTR [edx],ecx
  403dc0:	aaa    
  403dc1:	sub    BYTE PTR [ebx+ecx*8-0x57],bl
  403dc5:	ficomp WORD PTR [esi]
  403dc7:	and    ecx,DWORD PTR [esi-0x58]
  403dca:	jmp    0x403e01
  403dcc:	fldenv [ecx+0x3014436b]
  403dd2:	pop    ecx
  403dd3:	mov    ebx,0x51cd8429
  403dd8:	pop    ss
  403dd9:	fdivr  DWORD PTR [ecx+esi*2+0x10]
  403ddd:	sub    bl,0x5b
  403de0:	sbb    ah,dh
  403de2:	push   edx
  403de3:	push   0x87ab46b9
  403de8:	fst    DWORD PTR [edi+edx*4+0x771a612b]
  403def:	cwde   
  403df0:	cmp    DWORD PTR [eax],ebx
  403df2:	mov    ch,0x1e
  403df4:	pusha  
  403df5:	mov    esi,0x9ce87421
  403dfa:	mov    al,0xca
  403dfc:	mov    dl,0x2f
  403dfe:	pusha  
  403dff:	cmc    
  403e00:	inc    ecx
  403e01:	leave  
  403e02:	cmp    cl,dh
  403e04:	cdq    
  403e05:	cmp    eax,0xed449f4e
  403e0a:	mov    eax,ds:0x3a8506aa
  403e0f:	adc    ah,BYTE PTR [ebx]
  403e11:	pop    ecx
  403e12:	int3   
  403e13:	repz call 0x4772f820
  403e19:	dec    eax
  403e1a:	sbb    edx,ebp
  403e1c:	mov    edx,0x3108183f
  403e21:	aad    0x35
  403e23:	mov    DWORD PTR [edx+0x36],ebx
  403e26:	(bad)  
  403e27:	out    dx,eax
  403e28:	jle    0x403deb
  403e2a:	cli    
  403e2b:	adc    BYTE PTR [ebx],0x1
  403e2e:	outs   dx,BYTE PTR ds:[esi]
  403e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e30:	xor    dh,BYTE PTR [esp+ebp*4+0x6fd4b975]
  403e37:	sbb    edx,DWORD PTR [edi+0x27]
  403e3a:	adc    ebp,DWORD PTR [ecx+0x2f994049]
  403e40:	mov    edi,0x989f4a68
  403e45:	int    0x5f
  403e47:	sahf   
  403e48:	mov    eax,ds:0x54638f1a
  403e4d:	dec    eax
  403e4e:	inc    edi
  403e4f:	iret   
  403e50:	adc    eax,0xacb3f82f
  403e55:	outs   dx,DWORD PTR ds:[esi]
  403e56:	pop    esi
  403e57:	or     bh,bh
  403e59:	jge    0x403ed5
  403e5b:	mov    dl,0xe7
  403e5d:	into   
  403e5e:	push   0x763b5903
  403e63:	sub    bh,BYTE PTR [ebx]
  403e65:	je     0x403e70
  403e67:	add    al,0xb6
  403e69:	(bad)  
  403e6a:	int3   
  403e6b:	xchg   BYTE PTR [ebx-0x75],dl
  403e6e:	daa    
  403e6f:	iret   
  403e70:	mov    dl,0xaa
  403e72:	jp     0x403e54
  403e74:	std    
  403e75:	push   ds
  403e76:	dec    esi
  403e77:	add    al,0x74
  403e79:	and    eax,0x7784827b
  403e7e:	lods   eax,DWORD PTR ds:[esi]
  403e7f:	cmc    
  403e80:	ss (bad) 
  403e82:	inc    ecx
  403e83:	xor    al,0xd7
  403e85:	push   esi
  403e86:	or     eax,0xe7fdb7bf
  403e8b:	dec    esp
  403e8c:	jmp    0x403e22
  403e8e:	enter  0x8fb,0x7a
  403e92:	ja     0x403ec2
  403e94:	(bad)  
  403e95:	fcomp  DWORD PTR [ecx+0x6fb7696a]
  403e9b:	imul   esi,DWORD PTR [ebp-0x3e555507],0xffffffed
  403ea2:	sbb    DWORD PTR [edi+0x4acd3824],0x3828fbd9
  403eac:	test   DWORD PTR [ebp-0x19b771e],edx
  403eb2:	push   ds
  403eb3:	dec    ebx
  403eb4:	sub    DWORD PTR [ebp-0xc],esp
  403eb7:	add    BYTE PTR cs:[edx-0x72e40f99],ch
  403ebe:	fmul   DWORD PTR [esp+ecx*8+0x16]
  403ec2:	mov    ecx,0x66869445
  403ec8:	clc    
  403ec9:	adc    cl,bl
  403ecb:	cmc    
  403ecc:	outs   dx,BYTE PTR ds:[esi]
  403ecd:	(bad)  
  403ece:	pop    ebx
  403ecf:	pop    es
  403ed0:	or     ebx,ebp
  403ed2:	daa    
  403ed3:	sub    cl,BYTE PTR [esi-0x5a56a9b4]
  403ed9:	hlt    
  403eda:	sbb    DWORD PTR [ebx-0x16],edi
  403edd:	or     al,0x3c
  403edf:	call   0x69a2:0x1cd4b656
  403ee6:	test   bl,bh
  403ee8:	arpl   WORD PTR [ecx+0x52],cx
  403eeb:	fdiv   DWORD PTR [ebx-0x76]
  403eee:	push   ds
  403eef:	popa   
  403ef0:	cdq    
  403ef1:	add    BYTE PTR [edi+0xf],dl
  403ef4:	mov    ecx,0x12909b98
  403ef9:	cmp    ah,BYTE PTR [ebx]
  403efb:	popa   
  403efc:	dec    ebp
  403efd:	ins    DWORD PTR es:[edi],dx
  403efe:	dec    edi
  403eff:	ds dec esp
  403f01:	jns    0x403f71
  403f03:	sub    al,0x39
  403f05:	mov    al,ds:0x9ffdafb7
  403f0a:	and    al,BYTE PTR ds:0xc9578947
  403f10:	mov    ch,0x6c
  403f12:	push   cs
  403f13:	inc    ecx
  403f14:	mov    ecx,0x676efe27
  403f19:	pop    ss
  403f1a:	push   ss
  403f1b:	shr    BYTE PTR [ecx-0x3a01cec4],1
  403f21:	(bad)  
  403f22:	dec    ebx
  403f23:	inc    edx
  403f24:	pusha  
  403f25:	cdq    
  403f26:	jbe    0x403ec0
  403f28:	mov    ah,0x6d
  403f2a:	cmc    
  403f2b:	mov    bh,0xc7
  403f2d:	icebp  
  403f2e:	push   0x927a4011
  403f33:	inc    eax
  403f34:	xlat   BYTE PTR ds:[ebx]
  403f35:	bndldx bnd2,[eax]
  403f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f39:	or     al,0x52
  403f3b:	cmp    esp,DWORD PTR [ebx-0x64]
  403f3e:	popf   
  403f3f:	arpl   WORD PTR [edx],sp
  403f41:	sub    DWORD PTR ds:0x31e1a457,edx
  403f47:	or     al,0x23
  403f49:	fnsave [ebp+0x302a21b0]
  403f4f:	jp     0x403f32
  403f51:	imul   edx,ebp,0x410bd108
  403f57:	push   esi
  403f58:	pop    edi
  403f59:	int    0xa
  403f5b:	ret    
  403f5c:	sahf   
  403f5d:	or     eax,0xa0fbe1b6
  403f62:	mov    eax,ds:0x48cb35e8
  403f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f68:	in     al,dx
  403f69:	sbb    eax,0xc9b0b4fc
  403f6e:	js     0x403f5b
  403f70:	pop    edi
  403f71:	ja     0x403f5d
  403f73:	dec    eax
  403f74:	in     al,dx
  403f75:	mov    ebp,0xfe0f411c
  403f7a:	hlt    
  403f7b:	fist   DWORD PTR [edx-0x2bdd0b62]
  403f81:	dec    eax
  403f82:	adc    eax,0x7df2fc15
  403f87:	xchg   edx,eax
  403f88:	dec    edx
  403f89:	fs xor eax,0x8df00e6a
  403f8f:	retf   0x7e69
  403f92:	push   ebx
  403f93:	(bad)  
  403f94:	stos   BYTE PTR es:[edi],al
  403f95:	sar    ch,cl
  403f97:	mul    BYTE PTR [esi+0x347a68f4]
  403f9d:	and    ah,dh
  403f9f:	rcl    BYTE PTR [edi],0x75
  403fa2:	mov    esp,0x3cdd2dc6
  403fa7:	sub    ebx,DWORD PTR [eax-0x68]
  403faa:	pusha  
  403fab:	add    BYTE PTR [edi-0xc7d43e0],bh
  403fb1:	mov    al,0x6
  403fb3:	inc    esi
  403fb4:	pop    eax
  403fb5:	xchg   edi,eax
  403fb6:	mov    dh,0x96
  403fb8:	jno    0x403f98
  403fba:	pop    ebx
  403fbb:	cdq    
  403fbc:	daa    
  403fbd:	xor    BYTE PTR [ecx+0x4ea56dc4],dl
  403fc3:	inc    esp
  403fc4:	inc    esp
  403fc5:	mov    esp,0xebab2abc
  403fca:	xchg   edi,eax
  403fcb:	shl    BYTE PTR [edx],0x42
  403fce:	xor    BYTE PTR [eax+ecx*2+0x4780d6a3],0x71
  403fd6:	add    al,0x34
  403fd8:	cld    
  403fd9:	dec    esp
  403fda:	cmp    dh,BYTE PTR [ebp-0x18]
  403fdd:	bound  ebp,QWORD PTR [eax-0x71]
  403fe0:	pop    ss
  403fe1:	xor    eax,0x8fd3ad21
  403fe6:	loope  0x404013
  403fe8:	mov    al,0x86
  403fea:	push   esi
  403feb:	or     BYTE PTR [ebp+0x8],al
  403fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fef:	ror    DWORD PTR [edx+ecx*2+0x64bea84c],0x6d
  403ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ff8:	cmp    BYTE PTR ds:[esi-0x10],0x52
  403ffd:	lods   eax,DWORD PTR ds:[esi]
  403ffe:	sbb    esp,DWORD PTR [edi-0x2b7a250]
  404004:	pop    edi
  404005:	xor    eax,0x7f817eb5
  40400a:	jg     0x404013
  40400c:	sbb    BYTE PTR [ebx+edi*2+0x5c],ah
  404010:	popa   
  404011:	rcr    DWORD PTR [edx+0x34],0x3d
  404015:	fmul   st(5),st
  404017:	inc    edi
  404018:	psadbw mm2,QWORD PTR [edx-0x6169efc4]
  40401f:	ficomp DWORD PTR ds:0x48d2e81
  404025:	shr    BYTE PTR [ebx],cl
  404027:	loope  0x40405a
  404029:	imul   edx,ebx,0x3a
  40402c:	cmc    
  40402d:	(bad)  
  40402e:	jmp    0x709c:0xf6fc7a93
  404035:	adc    eax,0x90f33169
  40403a:	(bad)  
  40403b:	push   cs
  40403c:	inc    esp
  40403d:	adc    al,0xdd
  40403f:	push   0xffffff8e
  404041:	push   edi
  404042:	dec    ebp
  404043:	jae    0x404089
  404045:	stos   DWORD PTR es:[edi],eax
  404046:	in     al,dx
  404047:	cli    
  404048:	ror    ah,0x92
  40404b:	push   ebp
  40404c:	push   edx
  40404d:	sar    ebx,0xc6
  404050:	leave  
  404051:	mov    bl,0xc0
  404053:	add    DWORD PTR [ebx+edx*8+0xdaeb8fb],esp
  40405a:	ds retf 
  40405c:	(bad)  
  40405d:	sbb    al,0xb5
  40405f:	push   cs
  404060:	jg     0x404035
  404062:	push   ss
  404063:	add    ebp,DWORD PTR [edx+esi*1-0x2f]
  404067:	mov    es,WORD PTR [edx]
  404069:	fisub  DWORD PTR [eax-0x78]
  40406c:	add    bl,dh
  40406e:	imul   ebx,DWORD PTR [ebp+0x110f5a56],0x88471778
  404078:	jp     0x4040dd
  40407a:	cmp    al,0x92
  40407c:	pop    ecx
  40407d:	cs (bad) 
  40407f:	sub    al,0xfd
  404081:	xlat   BYTE PTR ds:[ebx]
  404082:	fdiv   st(5),st
  404084:	out    0x5f,eax
  404086:	ret    
  404087:	mov    dl,ch
  404089:	pop    edx
  40408a:	cwde   
  40408b:	into   
  40408c:	pop    ds
  40408d:	inc    edx
  40408e:	sbb    al,0x38
  404090:	push   eax
  404091:	jmp    0x4040ad
  404093:	sub    BYTE PTR [ebx-0x6e],dh
  404096:	mov    cl,0xed
  404098:	sbb    esp,0x14f75e26
  40409e:	cmp    BYTE PTR [esi+0x4],dh
  4040a1:	sub    BYTE PTR [ebx-0x65178fb5],ch
  4040a7:	pop    ecx
  4040a8:	push   edi
  4040a9:	pop    ds
  4040aa:	dec    esp
  4040ab:	add    ah,ah
  4040ad:	push   cs
  4040ae:	and    DWORD PTR [eax],0xffffff87
  4040b1:	push   ss
  4040b2:	(bad)  
  4040b3:	mov    dl,0x90
  4040b5:	js     0x404091
  4040b7:	mov    ah,0xfb
  4040b9:	mov    gs,edx
  4040bb:	loopne 0x404074
  4040bd:	pusha  
  4040be:	imul   ebx,esp,0x404e56d
  4040c4:	push   ss
  4040c5:	jmp    0xf26:0x3a87d038
  4040cc:	ror    BYTE PTR [ebx],cl
  4040ce:	sbb    BYTE PTR [edi+0x53d23ac0],0x4c
  4040d5:	arpl   WORD PTR [eax],sp
  4040d7:	adc    edx,DWORD PTR [edi-0x2a]
  4040da:	or     ebx,edx
  4040dc:	mov    eax,ds:0x7513ac57
  4040e1:	add    eax,0xb72b1d2c
  4040e6:	pop    edi
  4040e7:	mov    ds,WORD PTR [eax-0x7d]
  4040ea:	xchg   esi,eax
  4040eb:	fmul   QWORD PTR [edx]
  4040ed:	ins    BYTE PTR es:[edi],dx
  4040ee:	lods   al,BYTE PTR ds:[esi]
  4040ef:	jecxz  0x4040c1
  4040f1:	imul   DWORD PTR [esi]
  4040f3:	test   al,0x4a
  4040f5:	push   es
  4040f6:	dec    edx
  4040f7:	imul   edx
  4040f9:	mov    BYTE PTR [esi+0x6e],al
  4040fc:	ror    DWORD PTR [ebx+0x18],1
  4040ff:	mov    al,ds:0x6e3d830e
  404104:	dec    ebx
  404105:	mov    esp,0x72be22d7
  40410a:	in     al,dx
  40410b:	mov    bl,0x95
  40410d:	inc    ebx
  40410e:	scas   al,BYTE PTR es:[edi]
  40410f:	mov    esi,0x908bed54
  404114:	(bad)  
  404115:	adc    DWORD PTR [ebx+0x48],esi
  404118:	inc    edx
  404119:	sbb    eax,0x546db110
  40411e:	mov    ebx,DWORD PTR [esp+ecx*1-0x4066ed62]
  404125:	cmc    
  404126:	pop    ss
  404127:	cmp    DWORD PTR [ebx+0x1f],edx
  40412a:	push   ebx
  40412b:	int3   
  40412c:	dec    edx
  40412d:	ins    DWORD PTR es:[edi],dx
  40412e:	(bad)  
  40412f:	and    cl,BYTE PTR [edi]
  404131:	adc    bl,BYTE PTR [eax]
  404133:	loope  0x404113
  404135:	loope  0x4040df
  404137:	cs sub eax,0x9047cc53
  40413d:	(bad)  
  40413e:	out    dx,al
  40413f:	mov    eax,ds:0x22e93ec5
  404144:	adc    al,BYTE PTR [ebx-0x1f2adba]
  40414a:	mov    edx,0x561498b3
  40414f:	add    BYTE PTR [edi+0x50],al
  404152:	inc    edx
  404153:	xchg   esp,eax
  404154:	adc    dl,BYTE PTR [eax+0x45]
  404157:	lahf   
  404158:	adc    DWORD PTR ds:0xa393175d,0x1faa3cf3
  404162:	shl    cl,0x35
  404165:	or     al,0xaa
  404167:	outs   dx,DWORD PTR ds:[esi]
  404168:	mov    edx,0xeb82e335
  40416d:	push   cs
  40416e:	inc    edi
  40416f:	int    0x52
  404171:	mov    esi,0x30c233b1
  404176:	jnp    0x404155
  404178:	mov    ebx,DWORD PTR [ecx]
  40417a:	pop    ss
  40417b:	adc    BYTE PTR cs:[edx-0x5773cce2],ch
  404182:	out    dx,eax
  404183:	push   ebp
  404184:	ret    
  404185:	or     DWORD PTR [edx+0x619cc8eb],eax
  40418b:	call   0x26c5:0x7e6fdab9
  404192:	int3   
  404193:	cli    
  404194:	jecxz  0x4041c8
  404196:	leave  
  404197:	ret    0x11ab
  40419a:	adc    BYTE PTR [eax+0x77b9320a],bl
  4041a0:	adc    DWORD PTR [edi+edi*8-0x16],0xffffff8c
  4041a5:	fisub  WORD PTR [edx+0xb]
  4041a8:	pop    ds
  4041a9:	mov    bh,0xd2
  4041ab:	les    ecx,FWORD PTR [ebx+0x5b782731]
  4041b1:	dec    edx
  4041b2:	bound  ebx,QWORD PTR [edx+0x50]
  4041b5:	lods   al,BYTE PTR ds:[esi]
  4041b6:	cmp    BYTE PTR [ecx+ebp*8+0x5b],0x53
  4041bb:	sub    BYTE PTR [eax],ch
  4041bd:	or     ebp,DWORD PTR [edx+esi*2+0x3033daa8]
  4041c4:	push   ecx
  4041c5:	push   eax
  4041c6:	stos   BYTE PTR es:[edi],al
  4041c7:	sub    BYTE PTR cs:[eax],dh
  4041ca:	int    0x4b
  4041cc:	adc    DWORD PTR [ebx],esp
  4041ce:	cli    
  4041cf:	xchg   ebx,eax
  4041d0:	sbb    eax,0x3f373f54
  4041d5:	and    eax,0x91716ce9
  4041da:	jbe    0x404253
  4041dc:	in     al,dx
  4041dd:	or     al,BYTE PTR [eax+0x2]
  4041e0:	jmp    0x4041cc
  4041e2:	sahf   
  4041e3:	adc    dl,BYTE PTR [edx-0x334acf64]
  4041e9:	arpl   WORD PTR [ebp+0x59],cx
  4041ec:	pop    ebp
  4041ed:	xlat   BYTE PTR ds:[ebx]
  4041ee:	jp     0x404241
  4041f0:	fld    st(7)
  4041f2:	lods   al,BYTE PTR ds:[esi]
  4041f3:	rol    BYTE PTR [edx-0x57],cl
  4041f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041f7:	dec    DWORD PTR [ebx]
  4041f9:	add    bl,BYTE PTR [edx+ebx*2+0x5b84107d]
  404200:	dec    edx
  404201:	push   ss
  404202:	cmp    al,0x60
  404204:	inc    edi
  404205:	push   edx
  404206:	jmp    0x4041b9
  404208:	lahf   
  404209:	and    DWORD PTR [edx],0xb1bf5b47
  40420f:	repz repz xchg edi,eax
  404212:	int3   
  404213:	pushf  
  404214:	lock sbb BYTE PTR [ebx],ch
  404217:	or     dh,ah
  404219:	mov    bl,BYTE PTR [ecx+0x2a62a627]
  40421f:	into   
  404220:	jge    0x404268
  404222:	aaa    
  404223:	shr    DWORD PTR [ecx+edx*4+0x65fb2777],cl
  40422a:	mov    dl,0xb6
  40422c:	sub    al,0x6f
  40422e:	lea    ebp,[edi+ebx*4-0xdffbada]
  404235:	sub    al,0x16
  404237:	das    
  404238:	test   eax,0xad2a2420
  40423d:	outs   dx,DWORD PTR ds:[esi]
  40423e:	cdq    
  40423f:	es icebp 
  404241:	fidivr WORD PTR [esi]
  404243:	sbb    eax,esp
  404245:	or     al,0x2c
  404247:	jo     0x40423b
  404249:	mov    eax,0x1285c5dd
  40424e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424f:	aaa    
  404250:	or     bh,BYTE PTR [ecx]
  404252:	inc    ebx
  404253:	mov    edi,0xb6d498a7
  404258:	mov    ah,0x94
  40425a:	push   edx
  40425b:	fucomip st,st(0)
  40425d:	sahf   
  40425e:	jl     0x404223
  404260:	inc    ebp
  404261:	hlt    
  404262:	push   ds
  404263:	adc    BYTE PTR [esi-0x50],ch
  404266:	dec    esp
  404267:	es mov dl,0x24
  40426a:	out    dx,al
  40426b:	in     al,0x5d
  40426d:	cli    
  40426e:	out    0x94,al
  404270:	dec    edi
  404271:	dec    edi
  404272:	(bad)  
  404273:	mov    edi,0x88245c6a
  404278:	add    al,0x12
  40427a:	fild   QWORD PTR ds:0x1b5f25f6
  404280:	dec    ebx
  404281:	or     BYTE PTR [esi-0x35],ah
  404284:	lahf   
  404285:	jae    0x404212
  404287:	inc    edx
  404288:	lea    ebx,[ecx]
  40428a:	jnp    0x404290
  40428c:	div    BYTE PTR [ecx-0x7e]
  40428f:	dec    esp
  404290:	sub    esi,ebp
  404292:	inc    edx
  404293:	and    DWORD PTR [edx],0x68
  404296:	xchg   edx,eax
  404297:	int3   
  404298:	mov    dl,0x14
  40429a:	fimul  DWORD PTR [edx+0x4f2f650e]
  4042a0:	stc    
  4042a1:	mov    edi,0x5f52ca9b
  4042a6:	cmc    
  4042a7:	je     0x40427b
  4042a9:	pop    edi
  4042aa:	mov    edi,0x628dc82d
  4042af:	xchg   ebp,eax
  4042b0:	push   ss
  4042b1:	mov    edx,0xd69b885a
  4042b6:	push   ebp
  4042b7:	ret    0x4747
  4042ba:	pop    edx
  4042bb:	ss mov esi,0x96a9a1c6
  4042c1:	xlat   BYTE PTR ds:[ebx]
  4042c2:	ds test ebp,0x7529aad9
  4042c9:	push   ebp
  4042ca:	xchg   esi,eax
  4042cb:	(bad)  
  4042cc:	jmp    0xe787:0x519c5488
  4042d3:	iret   
  4042d4:	gs dec ebx
  4042d6:	outs   dx,DWORD PTR ds:[esi]
  4042d7:	sub    BYTE PTR [esi+0x6e],dl
  4042da:	sub    BYTE PTR [eax],ch
  4042dc:	and    al,0xfc
  4042de:	std    
  4042df:	xchg   BYTE PTR [edi-0x40],ch
  4042e2:	in     al,0xe
  4042e4:	in     al,0x47
  4042e6:	ss jecxz 0x4042cb
  4042e9:	xchg   esi,eax
  4042ea:	pop    ebp
  4042eb:	scas   eax,DWORD PTR es:[edi]
  4042ec:	push   esp
  4042ed:	sahf   
  4042ee:	shl    DWORD PTR [ecx+ebx*8],cl
  4042f1:	jne    0x404372
  4042f3:	stc    
  4042f4:	sbb    al,0xeb
  4042f6:	addr16 pop ebp
  4042f8:	jbe    0x40435a
  4042fa:	inc    esi
  4042fb:	sar    DWORD PTR [esi],1
  4042fd:	mov    WORD PTR [esp+ebx*1],gs
  404300:	shl    BYTE PTR [eax],0xaa
  404303:	add    dl,BYTE PTR [edx-0x6c]
  404306:	pop    edi
  404307:	jne    0x4042df
  404309:	xor    eax,0x9a5faeb5
  40430e:	rcr    BYTE PTR [edi+edi*2+0x2121350e],1
  404315:	jns    0x404349
  404317:	ins    BYTE PTR es:[edi],dx
  404318:	cld    
  404319:	mov    ds:0x5c05a9b2,al
  40431e:	xor    BYTE PTR [eax-0x3],0xc2
  404322:	mov    es,WORD PTR [ebp+0x21]
  404325:	mov    dh,0x7e
  404327:	les    esp,FWORD PTR [eax-0x2104e55d]
  40432d:	and    edx,edi
  40432f:	cmp    ch,BYTE PTR [ebx+0x4f]
  404332:	dec    ebx
  404333:	and    al,BYTE PTR [esi]
  404335:	rcl    DWORD PTR [edi],1
  404337:	repnz aad 0x6
  40433a:	outs   dx,BYTE PTR ds:[esi]
  40433b:	push   ss
  40433c:	sbb    BYTE PTR [eax-0x42],bh
  40433f:	mov    al,0xeb
  404341:	ret    
  404342:	es xchg esp,eax
  404344:	push   ss
  404345:	and    ebx,DWORD PTR [ebx+eax*1]
  404348:	xor    al,0xbe
  40434a:	jg     0xc868fdd0
  404350:	xchg   ebx,eax
  404351:	int    0x2d
  404353:	cmp    eax,DWORD PTR [ecx]
  404355:	das    
  404356:	aas    
  404357:	add    al,0x57
  404359:	pusha  
  40435a:	jp     0x4043c5
  40435c:	mov    esi,DWORD PTR [edi-0x12]
  40435f:	daa    
  404360:	call   0xa76b:0xd91021f0
  404367:	dec    eax
  404368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404369:	dec    ebp
  40436a:	cli    
  40436b:	popf   
  40436c:	push   ds
  40436d:	adc    BYTE PTR [ecx+0x2a489c7],bl
  404373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404374:	(bad)  
  404375:	cmp    eax,0xff758204
  40437a:	mov    edi,0x56576dd3
  40437f:	outs   dx,DWORD PTR ds:[esi]
  404380:	test   eax,0xa2a44b5
  404385:	rol    BYTE PTR [edi+0x48e9923d],cl
  40438b:	fisttp DWORD PTR [ebx-0x5f]
  40438e:	mov    DWORD PTR [esi],esi
  404390:	xor    bh,al
  404392:	(bad)  
  404393:	sbb    ebp,edx
  404395:	ins    BYTE PTR es:[edi],dx
  404396:	out    0x99,eax
  404398:	repz xor DWORD PTR [edi+ebx*2+0x6d],esp
  40439d:	adc    al,0x5e
  40439f:	int3   
  4043a0:	hlt    
  4043a1:	pusha  
  4043a2:	daa    
  4043a3:	or     esp,DWORD PTR [ebx]
  4043a5:	push   es
  4043a6:	out    0x27,al
  4043a8:	inc    edx
  4043a9:	and    DWORD PTR [eax+edi*1-0x1493d5e8],0x653904fe
  4043b4:	mov    bl,0x23
  4043b6:	out    0xa9,al
  4043b8:	push   eax
  4043b9:	ror    DWORD PTR [eax+0x6f],1
  4043bc:	sub    DWORD PTR [ebx],ecx
  4043be:	pusha  
  4043bf:	inc    esi
  4043c0:	int3   
  4043c1:	int    0x53
  4043c3:	lods   eax,DWORD PTR ds:[esi]
  4043c4:	xor    eax,0x2e32cfeb
  4043c9:	push   ss
  4043ca:	xchg   ebp,eax
  4043cb:	xlat   BYTE PTR ds:[ebx]
  4043cc:	inc    esi
  4043cd:	fwait
  4043ce:	xchg   edi,eax
  4043cf:	pop    ds
  4043d0:	xchg   esp,eax
  4043d1:	jge    0x4043ea
  4043d3:	sbb    dl,al
  4043d5:	aam    0x21
  4043d7:	inc    esi
  4043d8:	jge    0x4043e2
  4043da:	mov    edi,0x3ae6a2f9
  4043df:	retf   0x905c
  4043e2:	(bad)
  4043e5:	rol    BYTE PTR [ebx],0xbb
  4043e8:	(bad)  [edx]
  4043ea:	jp     0x4043f3
  4043ec:	add    eax,0x2a1f37b6
  4043f1:	bound  ecx,QWORD PTR [ebp+0x28]
  4043f4:	mov    ds:0xdfa053f2,eax
  4043f9:	scas   al,BYTE PTR es:[edi]
  4043fa:	dec    eax
  4043fb:	stos   BYTE PTR es:[edi],al
  4043fc:	inc    esp
  4043fd:	xchg   ebp,eax
  4043fe:	jno    0x404382
  404400:	out    dx,eax
  404401:	xchg   ecx,eax
  404402:	mov    ah,cl
  404404:	or     BYTE PTR [eax],al
  404406:	ret    0xc393
  404409:	xor    esi,DWORD PTR [edx-0x4e990df8]
  40440f:	and    cl,bl
  404411:	out    dx,eax
  404412:	fadd   st,st(4)
  404414:	and    DWORD PTR [ecx+esi*4+0x3a],ebx
  404418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404419:	sahf   
  40441a:	pop    esp
  40441b:	mov    WORD PTR [esp+ecx*2-0x51],es
  40441f:	addr16 cmp al,0x81
  404422:	push   edi
  404423:	into   
  404424:	ret    0x491
  404427:	adc    eax,0x96ff7dfc
  40442c:	jne    0x404414
  40442e:	sbb    DWORD PTR [bp+0x35],esp
  404432:	lock clc 
  404434:	icebp  
  404435:	cwde   
  404436:	push   ds
  404437:	fsubr  QWORD PTR [esi+ebx*1-0x3d276465]
  40443e:	enter  0xc067,0x48
  404442:	mov    al,BYTE PTR [esi+edi*8-0x56]
  404446:	call   0x9d324fc0
  40444b:	and    ecx,edi
  40444d:	fnstenv [ebp-0x4f0edb76]
  404453:	fs push ebx
  404455:	scas   eax,DWORD PTR es:[edi]
  404456:	jp     0x40448e
  404458:	jne    0xde7b3cc9
  40445e:	les    edi,FWORD PTR [ebx]
  404460:	aad    0xf3
  404462:	inc    ebx
  404463:	(bad)  
  404464:	jle    0x404482
  404466:	and    bh,0x7b
  404469:	cs pop ebp
  40446b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446c:	cmp    BYTE PTR [ebx-0x661e3ee5],0x79
  404473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404474:	jmp    0xb749:0xe547d759
  40447b:	cmp    al,0x1d
  40447d:	mov    DWORD PTR [eax+0x27f860d1],edx
  404483:	pop    ecx
  404484:	ror    BYTE PTR [esi-0x26],1
  404487:	cld    
  404488:	sub    bh,BYTE PTR [eax-0x115600a3]
  40448e:	repz xchg esp,eax
  404490:	xchg   edx,eax
  404491:	mov    ebx,edx
  404493:	mov    al,ds:0xc0a66a46
  404498:	inc    ebp
  404499:	sbb    ebp,DWORD PTR [ebx+esi*4+0x38]
  40449d:	loope  0x4044fd
  40449f:	icebp  
  4044a0:	sti    
  4044a1:	stc    
  4044a2:	adc    ah,cl
  4044a4:	scas   al,BYTE PTR es:[edi]
  4044a5:	sbb    BYTE PTR fs:[ecx-0x84fe6bf],0xa4
  4044ad:	shl    DWORD PTR [eax+0x6a],cl
  4044b0:	lods   al,BYTE PTR ds:[esi]
  4044b1:	cmp    eax,DWORD PTR [eax-0x49a6db82]
  4044b7:	sbb    al,dl
  4044b9:	adc    DWORD PTR [eax+0x6],edi
  4044bc:	mov    ds:0x19c2d1c7,eax
  4044c1:	sbb    eax,DWORD PTR ds:[ebx+0x56]
  4044c5:	push   edi
  4044c6:	jb     0x404495
  4044c8:	mov    ?,eax
  4044ca:	and    eax,0xe16b8a1d
  4044cf:	xchg   ecx,eax
  4044d0:	call   0x9226:0x3185b2c3
  4044d7:	jmp    0x28794c18
  4044dc:	cmp    DWORD PTR [ecx],0x6b1928da
  4044e2:	in     al,0x98
  4044e4:	dec    esp
  4044e5:	gs and al,0x61
  4044e8:	and    eax,0xdc6c84c4
  4044ed:	les    ebx,FWORD PTR [edx+0xa]
  4044f0:	mov    WORD PTR [edx-0x32],gs
  4044f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f4:	sar    DWORD PTR [ebp+0x5c],cl
  4044f7:	mov    esi,esi
  4044f9:	fistp  QWORD PTR [edi+ecx*4+0x74c8c395]
  404500:	ins    DWORD PTR es:[edi],dx
  404501:	or     BYTE PTR [ecx],ah
  404503:	iret   
  404504:	mov    esi,0xe8eadf21
  404509:	xchg   ecx,eax
  40450a:	jne    0x404530
  40450c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450f:	mov    al,0xef
  404511:	std    
  404512:	push   ds
  404513:	lea    ecx,[eax-0x47]
  404516:	jb     0x4044e5
  404518:	cmp    ebx,DWORD PTR ds:0x762b4a4e
  40451e:	dec    ebp
  40451f:	cmp    al,0x44
  404521:	dec    eax
  404522:	dec    esp
  404523:	jecxz  0x404502
  404525:	mov    esi,0xb0092bc1
  40452a:	jae    0x40450b
  40452c:	inc    esp
  40452d:	fcom   DWORD PTR [edi-0x44e85c75]
  404533:	out    dx,eax
  404534:	or     ecx,ebp
  404536:	aam    0x1f
  404538:	ins    DWORD PTR es:[edi],dx
  404539:	cmp    DWORD PTR [esi-0x23],edx
  40453c:	out    0x37,al
  40453e:	lods   al,BYTE PTR ds:[esi]
  40453f:	cmp    DWORD PTR [esi-0x7e],edi
  404542:	hlt    
  404543:	inc    ebp
  404544:	cvtpi2ps xmm3,mm0
  404547:	call   0xd1dd7bbe
  40454c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40454d:	sbb    eax,0x32a8ccbc
  404552:	mov    esi,0xa92da186
  404557:	mov    ebp,0x6e9403ef
  40455c:	sbb    eax,0x2e894306
  404561:	or     BYTE PTR [ecx-0x52d169a2],ch
  404567:	outs   dx,DWORD PTR ds:[esi]
  404568:	mov    ds:0x8d860b45,eax
  40456d:	into   
  40456e:	retf   
  40456f:	ret    0x4184
  404572:	int3   
  404573:	sbb    eax,ebp
  404575:	pop    edx
  404576:	ds cwde 
  404578:	adc    dl,bh
  40457a:	out    0xda,al
  40457c:	mov    esi,0x5bc54dcb
  404581:	es out dx,al
  404583:	mov    bh,0xe9
  404585:	stos   BYTE PTR es:[edi],al
  404586:	xchg   ecx,eax
  404587:	pop    esi
  404588:	bound  ecx,QWORD PTR [edi+ebx*2]
  40458b:	mov    esp,ecx
  40458d:	int3   
  40458e:	and    esi,0xf9fb374
  404594:	in     eax,dx
  404595:	mov    ebp,0x8ca28381
  40459a:	scas   al,BYTE PTR es:[edi]
  40459b:	xchg   esi,eax
  40459c:	fisubr WORD PTR [esi]
  40459e:	call   0xdcd5:0xc88c456
  4045a5:	jno    0x40452c
  4045a7:	push   ds
  4045a8:	leave  
  4045a9:	xor    dl,BYTE PTR [esi+edi*1+0x72]
  4045ad:	jbe    0x404530
  4045af:	sbb    ah,BYTE PTR [eax+0x35]
  4045b2:	push   0x23
  4045b4:	(bad)  
  4045b5:	push   0xa9879e6a
  4045ba:	ficom  WORD PTR [edi]
  4045bc:	and    cl,BYTE PTR [ecx-0x7e]
  4045bf:	fiadd  WORD PTR [esi+0x70]
  4045c2:	xchg   BYTE PTR [ecx],dh
  4045c4:	(bad)  
  4045c6:	add    al,0xfd
  4045c8:	mov    ch,0xf0
  4045ca:	pop    ecx
  4045cb:	lds    ebx,FWORD PTR [ebx]
  4045cd:	lods   al,BYTE PTR ds:[esi]
  4045ce:	out    0xfe,eax
  4045d0:	pop    edx
  4045d1:	push   esi
  4045d2:	and    BYTE PTR [edi+0x7132a2f4],ah
  4045d8:	out    0x2e,eax
  4045da:	add    esp,DWORD PTR [ecx-0x5f140167]
  4045e0:	mov    cl,0xfc
  4045e2:	sbb    DWORD PTR [bx+si-0x4c],ebx
  4045e6:	jge    0x404636
  4045e8:	sbb    ah,bh
  4045ea:	(bad)  
  4045eb:	jg     0x404642
  4045ed:	and    al,0x5a
  4045ef:	rol    DWORD PTR [esi-0x4f],1
  4045f2:	push   ebx
  4045f3:	jo     0x404646
  4045f5:	loopne 0x40459f
  4045f7:	mov    ds:0x14cf44c2,al
  4045fc:	xchg   ebp,eax
  4045fd:	push   ebp
  4045fe:	fld    st(5)
  404600:	cdq    
  404601:	adc    al,0xb3
  404603:	into   
  404604:	cmpxchg DWORD PTR [eax+esi*1],ebp
  404608:	dec    esi
  404609:	js     0x40460c
  40460b:	cmp    BYTE PTR [edx-0x8f8026],0x20
  404612:	push   0xffffffba
  404614:	bound  ebx,QWORD PTR [ecx]
  404616:	xchg   dh,cl
  404618:	fs test al,bh
  40461b:	mov    ebx,0x40a9be31
  404620:	arpl   WORD PTR [ecx-0x6810c459],sp
  404626:	inc    ecx
  404627:	pop    ss
  404628:	cdq    
  404629:	inc    ebp
  40462a:	jmp    0x84d3:0x4687429a
  404631:	push   esp
  404632:	jp     0x4046a3
  404634:	mov    ecx,0x4d1c275e
  404639:	pop    ebx
  40463a:	mul    ebp
  40463c:	jmp    0xa39815f
  404641:	ja     0x4046b6
  404643:	lods   al,BYTE PTR ds:[esi]
  404644:	mov    eax,DWORD PTR [esi]
  404646:	pop    ebp
  404647:	mov    al,ds:0xa9576863
  40464c:	(bad)  
  40464d:	sar    DWORD PTR [ebp+0x75731030],1
  404653:	fadd   DWORD PTR [ecx-0x4dcc3c2f]
  404659:	pop    ebx
  40465a:	lods   al,BYTE PTR ds:[esi]
  40465b:	mov    edx,0x129c910e
  404660:	pop    ax
  404662:	jo     0x4046c5
  404664:	jo     0x404663
  404666:	fisubr DWORD PTR [esi-0x34fcf094]
  40466c:	mov    edx,DWORD PTR ds:0x76203b91
  404672:	fidiv  WORD PTR [ebp+0x4f]
  404675:	xchg   ebx,eax
  404676:	daa    
  404677:	pop    ss
  404678:	imul   ecx,DWORD PTR ds:0x4a1031e8,0x878a999b
  404682:	cdq    
  404683:	ror    BYTE PTR [eax+eiz*2],1
  404686:	sub    eax,0xadfdf9e2
  40468b:	jbe    0x404669
  40468d:	mov    eax,DWORD PTR [edx]
  40468f:	mov    ds:0x2527d450,eax
  404694:	dec    edx
  404695:	sbb    DWORD PTR [edi+ecx*2+0x6bafa852],edi
  40469c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40469d:	cmp    BYTE PTR fs:[ecx],dh
  4046a0:	adc    esp,ebp
  4046a2:	sbb    ebx,DWORD PTR [esi]
  4046a4:	sub    edi,DWORD PTR [ebx-0x455e444f]
  4046aa:	jg     0x404686
  4046ac:	mov    bl,0x6b
  4046ae:	(bad)  
  4046af:	rcr    eax,cl
  4046b1:	gs inc esi
  4046b3:	loopne 0x404692
  4046b5:	ins    BYTE PTR es:[edi],dx
  4046b6:	inc    esi
  4046b7:	in     eax,0xe
  4046b9:	pop    ss
  4046ba:	icebp  
  4046bb:	xchg   edi,eax
  4046bc:	retf   0x1bb6
  4046bf:	jp     0x404683
  4046c1:	les    ebp,FWORD PTR [esi+eax*2+0x636b35cc]
  4046c8:	loop   0x40465b
  4046ca:	mov    esp,0x9dbc82d9
  4046cf:	fbld   TBYTE PTR ds:0x7993ba6f
  4046d5:	jae    0x404686
  4046d7:	test   eax,0xe9600c4a
  4046dc:	add    eax,0xc43994ab
  4046e1:	retf   0xb5ad
  4046e4:	adc    al,0x3f
  4046e6:	in     eax,0x3c
  4046e8:	mov    DWORD PTR [esi-0x3c],esi
  4046eb:	ins    DWORD PTR es:[edi],dx
  4046ec:	lods   eax,DWORD PTR ds:[esi]
  4046ed:	sub    al,BYTE PTR [eax-0x60f64a10]
  4046f3:	xchg   esi,eax
  4046f4:	(bad)  
  4046f5:	retf   0xfb26
  4046f8:	in     al,0xe1
  4046fa:	add    ecx,DWORD PTR [esp+eiz*8-0x5df36b96]
  404701:	aad    0x49
  404703:	test   DWORD PTR [edi],esp
  404705:	out    0x74,eax
  404707:	mov    bh,0x13
  404709:	jmp    0x4046be
  40470b:	xchg   DWORD PTR [esi+edi*1-0x46],edx
  40470f:	add    BYTE PTR ds:0x4b77b4e8,dh
  404715:	jae    0x4046c2
  404717:	iret   
  404718:	arpl   WORD PTR ds:[edi-0x114fa11a],di
  40471f:	sub    DWORD PTR [eax],edi
  404721:	into   
  404722:	ss ret 
  404724:	mov    ah,0x2a
  404726:	aad    0x4a
  404728:	mov    BYTE PTR [eax+0x5b],dl
  40472b:	pushf  
  40472c:	rcr    DWORD PTR [ecx+0x262c7164],0x23
  404733:	mov    ch,0x55
  404735:	leave  
  404736:	(bad)  
  404738:	and    DWORD PTR [ebp-0x78],edi
  40473b:	ror    BYTE PTR [edx+0x65],0x93
  40473f:	popf   
  404740:	mov    ds:0x3ffe2305,al
  404745:	js     0x40471a
  404747:	loope  0x4046e2
  404749:	xor    eax,DWORD PTR [edi-0xe]
  40474c:	imul   eax,DWORD PTR [ebx+0x72724754],0x51
  404753:	inc    esi
  404754:	je     0x40478f
  404756:	mov    ebx,0x97ba84ae
  40475b:	aad    0xb1
  40475d:	call   0xb2021af1
  404762:	iret   
  404763:	xchg   ebp,eax
  404764:	dec    ebp
  404765:	out    0x1d,eax
  404767:	pop    esi
  404768:	in     al,dx
  404769:	and    eax,DWORD PTR [edi]
  40476b:	adc    DWORD PTR [ecx],ecx
  40476d:	xchg   DWORD PTR [eax+0x51b8452f],esi
  404773:	push   ecx
  404774:	add    DWORD PTR [eax+edi*1],edi
  404777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404778:	add    dh,BYTE PTR [esi-0x578dffd3]
  40477e:	jmp    0x4047e9
  404780:	jae    0x404799
  404782:	cs push ds
  404784:	push   es
  404785:	int3   
  404786:	ror    BYTE PTR [ecx],1
  404788:	(bad)
  40478d:	(bad)  [esp+ecx*8+0x3be4da3f]
  404794:	test   al,0x2
  404796:	sahf   
  404797:	fdivr  QWORD PTR [edx+ebp*8-0x35]
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	out    dx,eax
  40479d:	loope  0x404749
  40479f:	push   0x6f
  4047a1:	ins    BYTE PTR es:[edi],dx
  4047a2:	inc    DWORD PTR cs:[ecx+esi*1+0x7bb2d000]
  4047aa:	xchg   ebp,eax
  4047ab:	mov    ebp,DWORD PTR [esi]
  4047ad:	xchg   esp,eax
  4047ae:	mov    bl,0x1e
  4047b0:	mov    eax,0x924c621f
  4047b5:	out    dx,al
  4047b6:	lock js 0x404799
  4047b9:	ins    DWORD PTR es:[edi],dx
  4047ba:	in     eax,0xc9
  4047bc:	enter  0xcd98,0x15
  4047c0:	fsub   st(3),st
  4047c2:	add    al,0xb
  4047c4:	out    0x83,al
  4047c6:	sbb    DWORD PTR [edi+0x1009f0f0],0x40fa3759
  4047d0:	cmp    DWORD PTR [ecx+0x12a7c61],esi
  4047d6:	(bad)  
  4047d7:	xor    dh,dh
  4047d9:	enter  0xc0bf,0xc5
  4047dd:	rcl    BYTE PTR [edi+ebp*4],cl
  4047e0:	fbstp  TBYTE PTR [ebp-0x70]
  4047e3:	rcl    edi,cl
  4047e5:	retf   0x7ac4
  4047e8:	inc    eax
  4047e9:	cdq    
  4047ea:	cmp    al,0x99
  4047ec:	cs scas al,BYTE PTR es:[edi]
  4047ee:	adc    al,0xed
  4047f0:	jbe    0x404838
  4047f2:	adc    al,0x6
  4047f4:	mov    ah,0x5c
  4047f6:	mov    edi,0x58c0856a
  4047fb:	cmp    bl,bl
  4047fd:	sahf   
  4047fe:	pop    ebx
  4047ff:	loopne 0x4047f6
  404801:	and    bl,ch
  404803:	push   es
  404804:	ds push esi
  404806:	loope  0x4047f3
  404808:	mov    dl,0x4b
  40480a:	rol    dh,1
  40480c:	popf   
  40480d:	cdq    
  40480e:	cmp    dl,ch
  404810:	cli    
  404811:	mov    BYTE PTR [edx],dh
  404813:	xor    BYTE PTR [ebp-0x4680daf2],bh
  404819:	xchg   esp,eax
  40481a:	fwait
  40481b:	test   DWORD PTR [esi+ebx*8-0x4f],esp
  40481f:	loopne 0x404849
  404821:	or     al,0x8b
  404823:	fwait
  404824:	test   al,0xd5
  404826:	sbb    cl,ch
  404828:	repz xor edx,0xbce163b7
  40482f:	or     BYTE PTR [eax+0x65],ah
  404832:	mov    ch,0x6b
  404834:	mov    DWORD PTR [ecx],0xe412a65
  40483a:	retf   
  40483b:	or     esi,edx
  40483d:	push   es
  40483e:	fcomp  QWORD PTR [ebx]
  404840:	pop    edi
  404841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404842:	sti    
  404843:	mov    dl,0x5b
  404845:	cmp    DWORD PTR [esi+eax*8],ebx
  404848:	add    al,0x2e
  40484a:	leave  
  40484b:	rcr    BYTE PTR [ebx],cl
  40484d:	ins    DWORD PTR es:[edi],dx
  40484e:	retf   
  40484f:	iret   
  404850:	xchg   edx,eax
  404851:	repnz push ss
  404853:	and    al,0x10
  404855:	push   edx
  404856:	mov    ebx,0xafb52af1
  40485b:	pop    ss
  40485c:	jmp    0x404874
  40485e:	stos   DWORD PTR es:[edi],eax
  40485f:	pop    ebp
  404860:	sbb    BYTE PTR [ebx+0x6e8e4ae0],dh
  404866:	(bad)  
  404867:	dec    esp
  404868:	mov    ebp,0x49dd420c
  40486d:	inc    esi
  40486e:	cmp    eax,0x5e700625
  404873:	pop    eax
  404874:	mov    al,0x5a
  404876:	adc    BYTE PTR [edi-0x3e620e60],dh
  40487c:	cwde   
  40487d:	ja     0x404881
  40487f:	out    0x69,eax
  404881:	push   0xadb7bd38
  404886:	das    
  404887:	dec    esi
  404888:	mov    ebx,0xc4b1319
  40488d:	mov    eax,ds:0x57a03dce
  404892:	cmp    BYTE PTR [edi+0x53489f66],al
  404898:	xchg   ebp,eax
  404899:	dec    ecx
  40489a:	gs sub al,0x2d
  40489d:	leave  
  40489e:	mov    eax,ds:0x52d1d55
  4048a3:	(bad)  
  4048a4:	sbb    ch,BYTE PTR ds:0x1c674d84
  4048aa:	cmc    
  4048ab:	add    BYTE PTR [edx-0x4b],dh
  4048ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048af:	hlt    
  4048b0:	popf   
  4048b1:	cmp    BYTE PTR [ebp-0x49326abf],0x25
  4048b8:	xchg   edx,eax
  4048b9:	add    edi,eax
  4048bb:	ja     0x40489e
  4048bd:	aaa    
  4048be:	sub    eax,ecx
  4048c0:	cmp    bl,BYTE PTR [edx-0x523dc81c]
  4048c6:	rcl    bl,0xf7
  4048c9:	stc    
  4048ca:	pop    esi
  4048cb:	out    dx,al
  4048cc:	or     BYTE PTR [ebx],ah
  4048ce:	add    eax,0x8e2ddde1
  4048d3:	in     eax,0x50
  4048d5:	xor    ebx,DWORD PTR [ebp+0x50b13455]
  4048db:	xchg   esp,eax
  4048dc:	pop    edx
  4048dd:	fdivr  QWORD PTR [esi]
  4048df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e0:	aam    0x55
  4048e2:	xchg   DWORD PTR [edx*2-0x3e7a34f0],ebx
  4048e9:	imul   BYTE PTR [ecx+0x22]
  4048ec:	jae    0x4048b4
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	pop    es
  4048f0:	pop    edi
  4048f1:	sub    BYTE PTR [ebx],ah
  4048f3:	sub    dl,dh
  4048f5:	push   esi
  4048f6:	jae    0x404917
  4048f8:	mov    esp,0x90a264eb
  4048fd:	rcr    edx,cl
  4048ff:	lds    ebp,FWORD PTR [ebp-0x80]
  404902:	mov    dh,0x34
  404904:	(bad)  
  404905:	arpl   di,sp
  404907:	retf   
  404908:	adc    DWORD PTR [ebx],0x997ac245
  40490e:	addr16 push edx
  404910:	adc    DWORD PTR [edx],0xa1e16571
  404916:	sub    edx,DWORD PTR [ebp+0x33d7a099]
  40491c:	test   DWORD PTR [edx+0x2d1fbd52],esp
  404922:	idiv   ebx
  404924:	int3   
  404925:	sub    esp,DWORD PTR [eax-0x1a]
  404928:	int    0xf3
  40492a:	sbb    al,0xf
  40492c:	push   cs
  40492d:	mov    ecx,0xa3133fdc
  404932:	rol    DWORD PTR [ecx],0x89
  404935:	add    esi,ebx
  404937:	ja     0x404956
  404939:	cmp    esp,eax
  40493b:	xlat   BYTE PTR ds:[ebx]
  40493c:	push   ebx
  40493d:	aas    
  40493e:	jmp    0x2864:0x5fc5efad
  404945:	std    
  404946:	and    dl,BYTE PTR [esi+0x3a04484c]
  40494c:	jmp    0xbcf1:0x495cae94
  404953:	mov    ebp,0x21cd778a
  404958:	adc    al,0x86
  40495a:	rol    DWORD PTR [ecx-0x6699956a],0xc7
  404961:	ror    bl,0x53
  404964:	add    al,0x90
  404966:	hlt    
  404967:	jge    0x4049d7
  404969:	mov    bh,0x2a
  40496b:	cmp    DWORD PTR ds:[esi+eiz*4],esi
  40496f:	repnz mov edi,0xa9b021ae
  404975:	jecxz  0x4049dc
  404977:	push   ds
  404978:	xor    dl,BYTE PTR [ecx+0x43]
  40497b:	stos   BYTE PTR es:[edi],al
  40497c:	push   cs
  40497d:	ins    DWORD PTR es:[edi],dx
  40497e:	cli    
  40497f:	and    DWORD PTR [ebp+0x7d90dbec],ebx
  404985:	mov    ds:0x84655a04,eax
  40498a:	xchg   esp,eax
  40498b:	inc    esi
  40498c:	xor    cl,BYTE PTR [ebx+edx*1-0x76]
  404990:	xchg   DWORD PTR [edi],edx
  404992:	fs mov ebx,0x815639e7
  404998:	into   
  404999:	lock add BYTE PTR fs:[eax],al
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x4946ca25
  4056ec:	(bad)  
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	leave  
  4056f6:	aad    0x49
  4056f8:	push   edx
  4056f9:	mov    esp,0x6270643e
  4056fe:	jmp    0x40577c
  405700:	push   0x6a8dd1bf
  405705:	sbb    BYTE PTR [ecx-0x472174c4],bh
  40570b:	mov    dh,0x10
  40570d:	add    al,bh
  40570f:	std    
  405710:	jns    0x40574c
  405712:	pop    edx
  405713:	retf   0xf6f1
  405716:	popa   
  405717:	mov    ch,0x5b
  405719:	mov    ebx,0xd6b612aa
  40571e:	and    edi,DWORD PTR [eax]
  405720:	fdivr  st,st(1)
  405722:	pusha  
  405723:	std    
  405724:	adc    al,0x61
  405726:	fsub   DWORD PTR [esi]
  405728:	mov    edx,0x8a90c256
  40572d:	lock sub DWORD PTR [edx-0x55],eax
  405731:	dec    eax
  405732:	cmc    
  405733:	add    bl,ah
  405735:	push   es
  405736:	jl     0x9f8f9329
  40573c:	adc    dh,BYTE PTR [esi+0x71e2f963]
  405742:	sub    esp,DWORD PTR [ebx]
  405744:	gs scas eax,DWORD PTR es:[edi]
  405746:	dec    edx
  405747:	dec    esp
  405748:	cld    
  405749:	loope  0x4057c1
  40574b:	sbb    BYTE PTR [ecx*8-0x3d3b6a92],dh
  405752:	test   al,0xfe
  405754:	inc    ebp
  405755:	sti    
  405756:	push   es
  405757:	dec    edi
  405758:	cdq    
  405759:	fs data16 sti 
  40575c:	gs jo  0x40576d
  40575f:	cld    
  405760:	int3   
  405761:	and    BYTE PTR [edi],ah
  405763:	shl    BYTE PTR [edx+0x2],cl
  405766:	imul   esp,edx,0xdbd14752
  40576c:	retf   0xbf2d
  40576f:	call   0xbefe:0x2da4053
  405776:	stos   BYTE PTR es:[edi],al
  405777:	push   eax
  405778:	ret    0xe9e4
  40577b:	outs   dx,DWORD PTR ds:[esi]
  40577c:	cmp    BYTE PTR [ecx+esi*8-0x29],bl
  405780:	lock jae 0x4057a7
  405783:	dec    edx
  405784:	inc    edi
  405785:	mov    DWORD PTR ds:0x1864a832,esi
  40578b:	pop    ecx
  40578c:	js     0x405801
  40578e:	mov    cl,0x52
  405790:	imul   edx,DWORD PTR [ecx+ebp*1],0x5e
  405794:	fxch   st(5)
  405796:	mov    bh,0x69
  405798:	xor    al,0x6d
  40579a:	out    0xe9,eax
  40579c:	shl    BYTE PTR [ecx],cl
  40579e:	fnstsw WORD PTR [ebx-0x56]
  4057a1:	mov    DWORD PTR [edx-0x80],edx
  4057a4:	adc    eax,0xc6261025
  4057a9:	mov    ebp,0x37f6c276
  4057ae:	jle    0x40580e
  4057b0:	loopne 0x405739
  4057b2:	and    al,0x4f
  4057b4:	sbb    BYTE PTR [edx+0x1],bh
  4057b7:	add    ebx,ecx
  4057b9:	daa    
  4057ba:	rcl    DWORD PTR [ecx+0x2ac65a64],cl
  4057c0:	pop    ecx
  4057c1:	xchg   esp,eax
  4057c2:	xor    bh,ah
  4057c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c5:	jmp    0xc1883bee
  4057ca:	add    DWORD PTR [edx],ecx
  4057cc:	cs sub eax,0xb6cbb0ac
  4057d2:	ficom  DWORD PTR [ebx+edx*2+0xd]
  4057d6:	and    BYTE PTR [edx],bh
  4057d8:	mov    al,0x36
  4057da:	pop    ebx
  4057db:	rcl    DWORD PTR [edi+0x8],0x8a
  4057df:	sub    eax,0xeb5d3bd6
  4057e4:	mov    cs,ecx
  4057e6:	mov    ds:0x482a4dd2,al
  4057eb:	mov    ebx,0xedd43821
  4057f0:	sbb    ah,BYTE PTR [eax-0x64253abd]
  4057f6:	mov    edx,DWORD PTR [ecx]
  4057f8:	pop    ecx
  4057f9:	jmp    0x2acd58ba
  4057fe:	jecxz  0x4057bc
  405800:	cwde   
  405801:	addr16 xor dl,ah
  405804:	jb     0x4057cc
  405806:	aad    0xe6
  405808:	jno    0x4057f8
  40580a:	dec    ebx
  40580b:	in     al,0x8b
  40580d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40580e:	xchg   ecx,eax
  40580f:	mov    ebx,0x460a265c
  405814:	je     0x405829
  405816:	shr    al,cl
  405818:	ret    0xf17f
  40581b:	add    BYTE PTR [edx-0x44ed9b7a],cl
  405821:	scas   al,BYTE PTR es:[edi]
  405822:	repnz push 0xffffffcf
  405825:	sbb    DWORD PTR [ecx-0x1beea8ae],esp
  40582b:	mov    ecx,edi
  40582d:	sbb    cl,BYTE PTR [ecx+0x18]
  405830:	jge    0x40589f
  405832:	fistp  DWORD PTR [ecx+ecx*4-0x68]
  405836:	mov    DWORD PTR [edi+0x829f541],edx
  40583c:	push   ebp
  40583d:	xchg   edi,eax
  40583e:	lds    ebp,FWORD PTR [ebx+0x3b3c3adf]
  405844:	popa   
  405845:	jbe    0x405876
  405847:	dec    edi
  405848:	bound  ebx,QWORD PTR [esi]
  40584a:	jmp    0x405838
  40584c:	gs dec ebp
  40584e:	loope  0x4057f0
  405850:	jl     0x4057dc
  405852:	daa    
  405853:	fld    DWORD PTR [edi]
  405855:	push   esp
  405856:	mov    ecx,0xd2c805
  40585b:	push   ds
  40585c:	push   0x5
  40585e:	add    BYTE PTR [eax],bh
  405860:	rol    BYTE PTR [ebx],0x6e
  405863:	rol    esp,0x54
  405866:	cwde   
  405867:	das    
  405868:	arpl   WORD PTR [ecx+0x76],sp
  40586b:	retf   
  40586c:	sbb    al,0x19
  40586e:	pusha  
  40586f:	mov    al,ds:0x8aa7f78c
  405874:	jp     0x4057f7
  405876:	out    dx,eax
  405877:	jbe    0x405848
  405879:	repnz pop ebp
  40587b:	fisub  WORD PTR [esi]
  40587d:	add    ebx,DWORD PTR [esp+ecx*2-0x103a2a28]
  405884:	pop    ss
  405885:	cdq    
  405886:	cmp    eax,0xf257038c
  40588b:	idiv   DWORD PTR [eax+0xbd892eb]
  405891:	fs xor esp,0xc4dd9460
  405898:	(bad)  
  405899:	xchg   ecx,eax
  40589a:	mov    esp,0xe1a50e87
  40589f:	push   ds
  4058a0:	imul   eax,DWORD PTR [ebx-0x52248ff7],0xd90b8fa4
  4058aa:	xchg   ebx,eax
  4058ab:	inc    esp
  4058ac:	test   BYTE PTR [eax-0x74fc7b72],ch
  4058b2:	ror    ecx,cl
  4058b4:	cmp    ecx,DWORD PTR [esi]
  4058b6:	jns    0x405910
  4058b8:	mov    ecx,0x32a7817a
  4058bd:	aaa    
  4058be:	mov    bl,0xfb
  4058c0:	adc    DWORD PTR [edi-0x70a01f7f],ebp
  4058c6:	in     al,0x2c
  4058c8:	cmp    edx,ebx
  4058ca:	sbb    ch,cl
  4058cc:	cmp    eax,0xcc8c80bf
  4058d1:	cmp    dl,BYTE PTR ds:0x5aa27e02
  4058d7:	xor    eax,0x216104fd
  4058dc:	aam    0x84
  4058de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058df:	adc    BYTE PTR [edx],ah
  4058e1:	jg     0x4058ea
  4058e3:	xor    eax,0x61357076
  4058e8:	cwde   
  4058e9:	dec    ebx
  4058ea:	mov    ebx,0x542d66ed
  4058ef:	xchg   esi,eax
  4058f0:	lahf   
  4058f1:	je     0x405944
  4058f3:	cdq    
  4058f4:	sbb    edx,edi
  4058f6:	dec    ecx
  4058f7:	pop    ebx
  4058f8:	xlat   BYTE PTR ds:[ebx]
  4058f9:	mov    esp,0xaadeb294
  4058fe:	aaa    
  4058ff:	add    al,0x8f
  405901:	mov    DWORD PTR [edi],esi
  405903:	in     al,dx
  405904:	sub    DWORD PTR [ecx],esi
  405906:	mov    ebp,0x2ff58d94
  40590b:	pop    esi
  40590c:	or     eax,0xa2c254f7
  405911:	lahf   
  405912:	in     eax,0x47
  405914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405915:	pushf  
  405916:	loope  0x40593a
  405918:	outs   dx,DWORD PTR ds:[esi]
  405919:	add    cl,BYTE PTR [edi]
  40591b:	add    eax,DWORD PTR [esi+0x46da6b3c]
  405921:	test   ecx,esp
  405923:	add    DWORD PTR ds:0xd2543e01,esp
  405929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40592a:	mov    dh,0xc5
  40592c:	and    DWORD PTR [esi],ebp
  40592e:	ss stos DWORD PTR es:[edi],eax
  405930:	inc    edx
  405931:	add    DWORD PTR [eax],0xa6ba7aa0
  405937:	or     BYTE PTR [ecx],dh
  405939:	call   0xd1c66170
  40593e:	dec    esp
  40593f:	hlt    
  405940:	lds    esi,FWORD PTR [ebx]
  405942:	js     0x4059b0
  405944:	or     BYTE PTR [edi+0x3d],dh
  405947:	mov    al,0xe0
  405949:	dec    eax
  40594a:	test   DWORD PTR [esi-0x2],eax
  40594d:	cs retf 
  40594f:	inc    ecx
  405950:	ret    0x53ec
  405953:	test   eax,0xc460e87
  405958:	mov    edx,0x330f5641
  40595d:	sbb    BYTE PTR [edi-0x18],cl
  405960:	and    eax,0x7dfae684
  405965:	ds std 
  405967:	mov    ch,0xc4
  405969:	inc    edi
  40596a:	loope  0x405983
  40596c:	cmp    dh,ch
  40596e:	loope  0x4059da
  405970:	cmp    BYTE PTR [ebp+0x5f13dbe3],al
  405976:	jl     0x40595d
  405978:	pop    eax
  405979:	stc    
  40597a:	fcomp  QWORD PTR [eax]
  40597c:	dec    eax
  40597d:	call   0xc5c7:0x172cd2cc
  405984:	pushf  
  405985:	out    dx,eax
  405986:	cmp    DWORD PTR [ecx+0x4],0xffffff91
  40598a:	xchg   edx,eax
  40598b:	cmp    ebp,DWORD PTR [eax-0x57]
  40598e:	cdq    
  40598f:	(bad)  [eax]
  405991:	lahf   
  405992:	push   cs
  405993:	mov    DWORD PTR [edx+0x6c102b13],eax
  405999:	nop
  40599a:	jmp    0x168f:0xbcffaa3f
  4059a1:	fistp  QWORD PTR [eax-0x26]
  4059a4:	xor    eax,0xcdd87964
  4059a9:	scas   eax,DWORD PTR es:[edi]
  4059aa:	pop    eax
  4059ab:	out    0xa4,eax
  4059ad:	mov    eax,ds:0x1f4aaf33
  4059b2:	dec    ebx
  4059b3:	pop    ss
  4059b4:	push   ss
  4059b5:	addr16 leave 
  4059b7:	imul   ecx,DWORD PTR [ecx+0x4f905b32],0x37
  4059be:	mov    ebx,esi
  4059c0:	mov    eax,ds:0x1753aeae
  4059c5:	mov    bl,0x83
  4059c7:	repnz or BYTE PTR [ebp+eiz*4-0x1ec97117],bh
  4059cf:	call   0x6fe8:0xab2ce74b
  4059d6:	mov    cl,0x1f
  4059d8:	iret   
  4059d9:	mov    ah,0xb5
  4059db:	test   BYTE PTR [ecx+edi*2+0x13],0x6e
  4059e0:	mov    al,ds:0xb8de61b6
  4059e5:	pop    ds
  4059e6:	jge    0x405a3d
  4059e8:	rcr    BYTE PTR [ebp+0x59],cl
  4059eb:	xor    edi,DWORD PTR [ebx-0x21]
  4059ee:	mov    DWORD PTR [edi],esp
  4059f0:	dec    eax
  4059f1:	mov    edi,0x9cbe6fb1
  4059f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f7:	mov    al,0xc0
  4059f9:	fs in  eax,0x7d
  4059fc:	xchg   DWORD PTR [ecx+edx*8],ebp
  4059ff:	retf   
  405a00:	les    edi,FWORD PTR [ebp+edx*8-0x34]
  405a04:	aad    0x65
  405a06:	ins    DWORD PTR es:[edi],dx
  405a07:	sub    eax,0x7f886f88
  405a0c:	inc    ebx
  405a0d:	dec    eax
  405a0e:	(bad)
  405a11:	pop    ebx
  405a12:	xor    al,0x80
  405a14:	and    al,0xbd
  405a16:	or     eax,0x4f0f2ec6
  405a1b:	loope  0x4059f0
  405a1d:	scas   eax,DWORD PTR es:[edi]
  405a1e:	inc    ebx
  405a1f:	push   ebx
  405a20:	retf   0xd802
  405a23:	mov    ebx,0x2fba2499
  405a28:	and    al,0x61
  405a2a:	push   ds
  405a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a2c:	fstp   QWORD PTR [edx+0x58afc476]
  405a32:	jne    0x405aa2
  405a34:	pusha  
  405a35:	xor    cl,BYTE PTR [esi+0x5ebfb6f7]
  405a3b:	push   ss
  405a3c:	push   ebp
  405a3d:	test   eax,0xd55412a9
  405a42:	ror    BYTE PTR [edi],cl
  405a44:	cmp    eax,0x67a62cf5
  405a49:	cwde   
  405a4a:	shl    DWORD PTR [si+0x7de3],1
  405a4f:	test   BYTE PTR [esp+eiz*2-0x6c],dh
  405a53:	cdq    
  405a54:	and    ch,ch
  405a56:	jg     0x405a9a
  405a58:	or     dl,BYTE PTR [ecx]
  405a5a:	sub    eax,0xe0e100bc
  405a5f:	out    dx,eax
  405a60:	imul   ebx,DWORD PTR [edx-0x3b],0x97ea054d
  405a67:	cmp    eax,0xc1fc8d2b
  405a6c:	cmp    DWORD PTR [eax+0x4d],edi
  405a6f:	fcomi  st,st(6)
  405a71:	mov    dl,cl
  405a73:	adc    ah,BYTE PTR [eax-0x3c96ae10]
  405a79:	push   ebx
  405a7a:	mov    ds:0xf9e789af,al
  405a7f:	xor    BYTE PTR [edx],0xc4
  405a82:	mov    bh,0x12
  405a84:	(bad)  
  405a86:	mov    ecx,0xdd90e42
  405a8b:	cmp    dh,BYTE PTR [ebx+0x7]
  405a8e:	cmp    ah,ch
  405a90:	cmp    bl,ah
  405a92:	bound  esi,QWORD PTR [ebp+0x53e60d44]
  405a98:	aad    0xc9
  405a9a:	in     al,0x26
  405a9c:	ds aam 0x2
  405a9f:	add    al,0x50
  405aa1:	and    eax,0x72479edb
  405aa6:	clc    
  405aa7:	pop    esi
  405aa8:	ins    BYTE PTR es:[edi],dx
  405aa9:	and    eax,0x7d04032f
  405aae:	in     eax,0xb2
  405ab0:	arpl   WORD PTR [ebx-0x70],bp
  405ab3:	call   DWORD PTR [ebx-0x59]
  405ab6:	out    0x86,eax
  405ab8:	lock pop eax
  405aba:	lahf   
  405abb:	(bad)  
  405abc:	loop   0x405a88
  405abe:	out    dx,al
  405abf:	loopne 0x405af6
  405ac1:	add    bl,ah
  405ac3:	retf   
  405ac4:	fld    TBYTE PTR [ecx+0x27d07358]
  405aca:	sbb    ebp,DWORD PTR [edi]
  405acc:	mov    ds,WORD PTR [eax-0x35]
  405acf:	out    0xd7,al
  405ad1:	jle    0x405ad4
  405ad3:	inc    ebp
  405ad4:	sub    BYTE PTR [edi-0x676fc7ad],0xca
  405adb:	ins    DWORD PTR es:[edi],dx
  405adc:	push   0xffffff97
  405ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405adf:	sahf   
  405ae0:	stos   BYTE PTR es:[edi],al
  405ae1:	add    esi,0x815813a5
  405ae7:	push   ss
  405ae8:	jg     0x405b2f
  405aea:	push   ds
  405aeb:	and    al,0xdb
  405aed:	mul    DWORD PTR [ebp-0x428dab19]
  405af3:	cs push edx
  405af5:	aam    0xce
  405af7:	pop    ecx
  405af8:	rcl    ebx,cl
  405afa:	loop   0x405b39
  405afc:	cli    
  405afd:	loopne 0x405b4b
  405aff:	int    0x18
  405b01:	xor    eax,0xc887428a
  405b06:	(bad)  
  405b07:	(bad)  
  405b08:	adc    DWORD PTR [edi],ecx
  405b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b0b:	aad    0x80
  405b0d:	shr    BYTE PTR [edx],0x3
  405b10:	cmp    DWORD PTR [ebx],esi
  405b12:	xchg   edi,eax
  405b13:	and    cl,dl
  405b15:	fnstsw WORD PTR [edx+0x75]
  405b18:	xchg   ecx,eax
  405b19:	fwait
  405b1a:	xor    dh,BYTE PTR [ebp+edx*4-0x30]
  405b1e:	aam    0x8b
  405b20:	out    0xcb,al
  405b22:	add    ch,BYTE PTR [esi]
  405b24:	dec    ebx
  405b26:	repz in al,0x9b
  405b29:	inc    edx
  405b2a:	mov    al,ds:0x70d24599
  405b2f:	loope  0x405b86
  405b31:	idiv   DWORD PTR [ebx+0x7fa1ab4d]
  405b37:	mov    al,ds:0x6156889
  405b3c:	sub    BYTE PTR [esi],bl
  405b3e:	add    ecx,DWORD PTR [eax-0x5f707c08]
  405b44:	mov    eax,ds:0x3907bf92
  405b49:	xchg   ebp,eax
  405b4a:	daa    
  405b4b:	fadd   DWORD PTR [edx+0x56]
  405b4e:	std    
  405b4f:	enter  0x5dc5,0x33
  405b53:	aad    0x40
  405b55:	mov    ds:0xb0524864,al
  405b5a:	pop    es
  405b5b:	push   ebx
  405b5c:	imul   esi,DWORD PTR [ecx-0x6b],0x43
  405b60:	es (bad) 
  405b63:	sub    DWORD PTR [ecx-0x5e],eax
  405b66:	in     eax,dx
  405b67:	pusha  
  405b68:	lds    esp,FWORD PTR [ebx]
  405b6a:	stc    
  405b6b:	pop    ss
  405b6c:	xlat   BYTE PTR ds:[ebx]
  405b6d:	jnp    0x405b13
  405b6f:	mov    bh,0xda
  405b71:	pop    esp
  405b72:	mov    edx,0xce3e0bdd
  405b77:	ret    
  405b78:	imul   edi,DWORD PTR [ebx+0x71414a2a],0x44149d64
  405b82:	jbe    0x405b66
  405b84:	and    al,0x20
  405b86:	sbb    DWORD PTR [ecx+0x47],0x39
  405b8a:	out    0x98,eax
  405b8c:	stos   BYTE PTR es:[edi],al
  405b8d:	or     ebp,ebp
  405b8f:	pushf  
  405b90:	mov    DWORD PTR [edi+edi*8-0x6ebf44a8],eax
  405b97:	inc    edx
  405b98:	jle    0x405bd3
  405b9a:	mov    ds,WORD PTR [esp+ecx*8+0x5f]
  405b9e:	sbb    BYTE PTR [esi+0x6b9f43dd],bh
  405ba4:	mov    ebp,0xe7b5e81f
  405ba9:	(bad)  [ebp+0x75]
  405bac:	or     BYTE PTR [edx+0x869667e],0xbd
  405bb3:	add    al,bh
  405bb5:	pop    eax
  405bb6:	out    dx,al
  405bb7:	xchg   ebp,eax
  405bb9:	(bad)  
  405bbb:	mov    dl,BYTE PTR [edx-0x1147647b]
  405bc1:	cdq    
  405bc2:	or     BYTE PTR [ebp+0x7b],bl
  405bc5:	out    0x30,al
  405bc7:	les    ebx,FWORD PTR [ecx-0x1e63a035]
  405bcd:	lock xor al,0x79
  405bd0:	mov    eax,0x2ae2b498
  405bd5:	pop    ecx
  405bd6:	xchg   esp,eax
  405bd7:	call   0xa56f9642
  405bdc:	jne    0x405bcf
  405bde:	test   al,0xae
  405be0:	stos   DWORD PTR es:[edi],eax
  405be1:	cmc    
  405be2:	pop    ecx
  405be3:	or     bh,BYTE PTR [ebx-0x77]
  405be6:	sub    eax,0x55143451
  405beb:	push   esp
  405bec:	lock call FWORD PTR es:0xb296947e
  405bf4:	dec    ebx
  405bf5:	xchg   ebx,eax
  405bf6:	test   BYTE PTR fs:[ebp-0x15],0x2f
  405bfb:	add    edi,ecx
  405bfd:	pushf  
  405bfe:	sbb    bl,BYTE PTR [ebx-0x72]
  405c01:	fdivrp st(2),st
  405c03:	mov    dh,0x63
  405c05:	xor    BYTE PTR [ebp-0x3c],0x2f
  405c09:	fwait
  405c0a:	add    eax,0xb02a7600
  405c0f:	adc    bl,ch
  405c11:	(bad)  
  405c12:	es inc edi
  405c14:	out    0xd,eax
  405c16:	scas   eax,DWORD PTR es:[edi]
  405c17:	rcr    DWORD PTR [edi-0x7f2fc4ea],0xd6
  405c1e:	push   ebx
  405c1f:	fs fcmovb st,st(0)
  405c22:	pop    ecx
  405c23:	aam    0x55
  405c25:	xchg   esi,eax
  405c26:	mov    esp,ebx
  405c28:	fcom   DWORD PTR [ebp+0x1939357d]
  405c2e:	sbb    eax,0x5c793ad5
  405c33:	pop    ebx
  405c34:	stos   BYTE PTR es:[edi],al
  405c35:	sub    BYTE PTR [eax-0x63],dl
  405c38:	inc    esp
  405c39:	imul   ecx,DWORD PTR [edx],0xffffffba
  405c3c:	aam    0xab
  405c3e:	or     DWORD PTR [edi-0x641e5be2],ebp
  405c44:	jmp    0x5729:0x45813003
  405c4b:	or     al,0x73
  405c4d:	and    al,0x64
  405c50:	scas   al,BYTE PTR es:[edi]
  405c51:	xchg   esi,eax
  405c52:	int3   
  405c53:	(bad)  
  405c54:	jp     0x405c7a
  405c56:	test   DWORD PTR [ecx+0x71b56ea1],esp
  405c5c:	data16 shl BYTE PTR [edi-0x35],1
  405c60:	aam    0xfc
  405c62:	mov    eax,0x6744af7e
  405c67:	sbb    dh,BYTE PTR [eax]
  405c69:	mov    ds:0x8692e0a2,al
  405c6e:	dec    esi
  405c6f:	xor    DWORD PTR [esp+esi*8+0x1839041f],eax
  405c76:	(bad)  
  405c77:	xlat   BYTE PTR ds:[ebx]
  405c78:	inc    ebx
  405c79:	imul   esp,esp,0x44
  405c7c:	mov    ah,0x76
  405c7e:	cli    
  405c7f:	xchg   esi,eax
  405c80:	mov    ch,0x76
  405c82:	mov    ebp,DWORD PTR [eax+0x52d8fcc9]
  405c88:	cmp    BYTE PTR ds:0xe3d48289,cl
  405c8e:	mov    BYTE PTR [eax-0x12],al
  405c91:	rol    BYTE PTR [ebp-0x77],1
  405c94:	out    dx,al
  405c95:	cdq    
  405c96:	int3   
  405c97:	jmp    0x405ca4
  405c99:	call   DWORD PTR [esi]
  405c9b:	sbb    bl,BYTE PTR [ecx+0x336cfe21]
  405ca1:	or     eax,0x414d99fa
  405ca6:	add    ebp,DWORD PTR [edi+eax*1-0x61]
  405caa:	repz add eax,0xcf2c200e
  405cb0:	sub    al,0xe4
  405cb2:	test   al,0xf
  405cb4:	pusha  
  405cb5:	pop    ebp
  405cb6:	emms   
  405cb8:	mov    ebx,0xc5d287ff
  405cbd:	bound  edi,QWORD PTR [esi+0x49]
  405cc0:	sub    BYTE PTR [eax-0x3fffef8],dh
  405cc6:	adc    cl,BYTE PTR [ecx]
  405cc8:	icebp  
  405cc9:	mov    eax,0x915e8763
  405cce:	adc    edx,DWORD PTR [edx]
  405cd0:	sub    eax,0x99e6396
  405cd5:	ret    0x363c
  405cd8:	mov    eax,0x8b334e88
  405cdd:	sub    DWORD PTR [eax-0x40],edx
  405ce0:	(bad)  
  405ce1:	pop    ebp
  405ce2:	aam    0xee
  405ce4:	add    ah,ah
  405ce6:	popf   
  405ce7:	fsubr  DWORD PTR [eax]
  405ce9:	xchg   ebp,eax
  405cea:	sub    al,0xea
  405cec:	pop    es
  405ced:	shl    DWORD PTR [esi],1
  405cef:	add    al,BYTE PTR [edi+0x1a3b4fb2]
  405cf5:	push   cs
  405cf6:	mov    bh,0x9b
  405cf8:	hlt    
  405cf9:	cmc    
  405cfa:	test   BYTE PTR [edi],dl
  405cfc:	xor    al,0x64
  405cfe:	sbb    eax,0x24a5c52f
  405d03:	push   di
  405d05:	adc    ax,0xd71c
  405d09:	jb     0x405ce3
  405d0b:	(bad)  
  405d0c:	stos   BYTE PTR es:[edi],al
  405d0d:	out    0xf3,al
  405d0f:	cld    
  405d10:	stc    
  405d11:	pop    esi
  405d12:	imul   edx,DWORD PTR [edi],0x6f21b1c0
  405d18:	push   ebx
  405d19:	les    esi,FWORD PTR ds:0x423b8abb
  405d1f:	es sti 
  405d21:	push   0x5c9bfe2b
  405d26:	nop
  405d27:	pop    esi
  405d28:	stos   BYTE PTR es:[edi],al
  405d29:	sbb    eax,0x1414a6f8
  405d2e:	push   eax
  405d2f:	sbb    al,0xa6
  405d31:	push   0x6a8e8c38
  405d36:	sahf   
  405d37:	mov    al,0xa0
  405d39:	mov    ebx,0x2b35a7c5
  405d3e:	fs mov bh,cl
  405d41:	mov    ?,WORD PTR [ebp-0x31]
  405d44:	daa    
  405d45:	dec    esi
  405d46:	aaa    
  405d47:	lds    ebp,FWORD PTR [edx+ebx*4+0xdf96b8f]
  405d4e:	cmp    al,0x5
  405d50:	mov    DWORD PTR [esi],ebx
  405d52:	in     eax,dx
  405d53:	cmc    
  405d54:	cld    
  405d55:	ins    DWORD PTR es:[edi],dx
  405d56:	jmp    0xa350de42
  405d5b:	mov    esi,0xbd9f0bc8
  405d60:	add    edi,DWORD PTR [ebx]
  405d62:	mov    ecx,ecx
  405d64:	dec    edx
  405d65:	mov    esi,0x29d3acbb
  405d6a:	sub    DWORD PTR [ecx+0x4a8a8e88],ecx
  405d70:	(bad)  
  405d71:	(bad)  
  405d72:	in     al,0x79
  405d74:	nop
  405d75:	push   ebp
  405d76:	ins    BYTE PTR es:[edi],dx
  405d77:	fsub   DWORD PTR [ecx-0x54]
  405d7a:	ficomp DWORD PTR [edi+esi*1-0x71]
  405d7e:	sub    BYTE PTR ds:0xaefa8bd6,bh
  405d84:	jne    0x405d74
  405d86:	pop    edx
  405d87:	out    0x6d,al
  405d89:	adc    BYTE PTR [edx-0x3f115ae7],ch
  405d8f:	mov    BYTE PTR [ebx],al
  405d91:	in     al,dx
  405d92:	enter  0xf999,0x6a
  405d96:	js     0x405df3
  405d98:	retf   
  405d99:	(bad)  
  405d9a:	ficom  DWORD PTR [ebp+0xa47b360]
  405da0:	mov    ds:0xf64df26d,al
  405da5:	in     al,dx
  405da6:	pop    ds
  405da7:	jecxz  0x405dca
  405da9:	mov    edx,0xdf53c760
  405dae:	push   0xffffffc0
  405db0:	sahf   
  405db1:	in     al,0x30
  405db3:	mov    ss,WORD PTR [eax]
  405db5:	adc    DWORD PTR [edx-0x4ca2930],esi
  405dbb:	adc    edx,DWORD PTR [esi-0x3d]
  405dbe:	add    DWORD PTR [eax-0x30],esi
  405dc1:	fiadd  DWORD PTR [ecx+0x43]
  405dc4:	cmp    ebp,esp
  405dc6:	inc    esi
  405dc7:	mov    eax,0x1790a251
  405dcc:	adc    DWORD PTR [eax+0x31],esi
  405dcf:	in     eax,0x6c
  405dd1:	inc    ebx
  405dd2:	mov    ebx,DWORD PTR [edi]
  405dd4:	and    al,0x8f
  405dd6:	pop    ecx
  405dd7:	xor    al,BYTE PTR ds:0x155f9fb0
  405ddd:	out    dx,eax
  405dde:	and    DWORD PTR [esp+ecx*2-0x175f789e],ebx
  405de5:	ja     0x405d71
  405de7:	xor    BYTE PTR [eax],dh
  405de9:	mov    ds:0x3126af40,al
  405dee:	mov    BYTE PTR [ebx],dh
  405df0:	cwde   
  405df1:	mov    al,0xe8
  405df3:	add    edx,DWORD PTR [ecx-0x4a]
  405df6:	(bad)  
  405df7:	or     BYTE PTR [ecx+0x48],bl
  405dfa:	and    DWORD PTR [esi],0x8d8477f2
  405e00:	(bad)  
  405e01:	sti    
  405e02:	clc    
  405e03:	mov    ebp,0x577ec65d
  405e08:	into   
  405e09:	lahf   
  405e0a:	mov    fs:0x1311965,eax
  405e10:	push   ecx
  405e11:	jmp    0x405e54
  405e13:	mov    ?,WORD PTR [edx+ebp*1-0x7285fc75]
  405e1a:	inc    ecx
  405e1b:	sahf   
  405e1c:	inc    esi
  405e1d:	adc    dl,BYTE PTR [eax+0x56]
  405e20:	pop    edi
  405e21:	neg    DWORD PTR [eax]
  405e23:	mul    DWORD PTR ds:[eax+edx*8]
  405e27:	out    0x92,al
  405e29:	fxch   st(4)
  405e2b:	enter  0x1ae7,0x56
  405e2f:	inc    esp
  405e30:	cs jecxz 0x405e90
  405e33:	mov    ch,0x78
  405e35:	pop    eax
  405e36:	xlat   BYTE PTR ds:[ebx]
  405e37:	rcl    DWORD PTR [ebp+0x40],1
  405e3a:	(bad)  
  405e3c:	fdivr  QWORD PTR [ebx+0x71c10b7b]
  405e42:	arpl   WORD PTR [ecx],bp
  405e44:	int    0x7c
  405e46:	enter  0x30f6,0x5d
  405e4a:	mov    ebp,?
  405e4c:	sbb    eax,0x31f63e3a
  405e51:	stos   DWORD PTR es:[edi],eax
  405e52:	imul   edi,DWORD PTR [ebx+eiz*8],0x67
  405e56:	or     ebp,esi
  405e58:	fsubr  QWORD PTR [edi-0x8e08835]
  405e5e:	push   es
  405e5f:	(bad)  
  405e60:	sti    
  405e61:	outs   dx,BYTE PTR ds:[esi]
  405e62:	adc    dh,BYTE PTR [eax+0x5936ef80]
  405e68:	bound  edx,QWORD PTR [esi+0x69a00b02]
  405e6e:	(bad)  
  405e6f:	push   eax
  405e70:	lods   eax,DWORD PTR ds:[esi]
  405e71:	call   0xa65ef2bd
  405e76:	in     eax,dx
  405e77:	jae    0x405e68
  405e79:	cmp    al,0xe6
  405e7b:	shl    DWORD PTR ds:0xd3b30945,1
  405e81:	in     al,dx
  405e82:	leave  
  405e83:	fs sti 
  405e85:	push   ecx
  405e86:	inc    ecx
  405e87:	rcl    DWORD PTR [ebx+0x453423],0x7a
  405e8e:	ins    DWORD PTR es:[edi],dx
  405e8f:	and    BYTE PTR [edx],0x18
  405e92:	std    
  405e93:	add    ecx,DWORD PTR [ebp-0x5b]
  405e96:	repz jmp 0x405ed1
  405e99:	xor    DWORD PTR [ecx+0x31],ebx
  405e9c:	jbe    0x405f04
  405e9e:	sahf   
  405e9f:	xor    edx,DWORD PTR [ebp+0x6f2ee582]
  405ea5:	sahf   
  405ea6:	jmp    0x8e09a52
  405eab:	sti    
  405eac:	inc    ch
  405eae:	neg    BYTE PTR ds:0x6c7abf44
  405eb4:	fs leave 
  405eb6:	adc    ah,al
  405eb8:	or     eax,0xe55f9b73
  405ebd:	mov    ch,0xa4
  405ebf:	xchg   al,bl
  405ec1:	fwait
  405ec2:	mov    ebx,0x905b39e6
  405ec7:	scas   al,BYTE PTR es:[edi]
  405ec8:	gs sbb cl,dh
  405ecb:	jo     0x405f32
  405ecd:	inc    edx
  405ece:	aad    0x2f
  405ed0:	sub    eax,0x363ebda5
  405ed5:	jmp    0x405eeb
  405ed7:	icebp  
  405ed8:	aaa    
  405ed9:	mov    bh,0x10
  405edb:	pop    ebx
  405edc:	inc    edi
  405edd:	mov    dl,0xe5
  405edf:	dec    edx
  405ee0:	jge    0x405f00
  405ee2:	ds cmc 
  405ee4:	sbb    esp,DWORD PTR [ebp-0x7c12a567]
  405eea:	not    edx
  405eec:	push   0xdac76106
  405ef1:	mov    BYTE PTR [eax+0x22],bl
  405ef4:	xor    bh,BYTE PTR [edx-0x60]
  405ef7:	and    cl,BYTE PTR [ecx+0x24]
  405efa:	fmul   QWORD PTR [edi+ecx*8+0x51a01f1d]
  405f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f02:	les    esi,FWORD PTR [ecx-0x5c]
  405f05:	sbb    esp,edx
  405f07:	outs   dx,DWORD PTR ds:[esi]
  405f08:	xchg   esi,eax
  405f09:	and    ebx,0xf12863b5
  405f0f:	adc    DWORD PTR [edx-0x62],ecx
  405f12:	repz in eax,0xb2
  405f15:	and    ah,BYTE PTR [esi+0x7e]
  405f18:	inc    ebp
  405f19:	fstp   st(6)
  405f1b:	add    ebx,DWORD PTR [edi]
  405f1d:	in     al,0xb7
  405f1f:	int3   
  405f20:	retf   0xfb96
  405f23:	arpl   WORD PTR [edx],bp
  405f25:	(bad)  
  405f26:	push   eax
  405f27:	cs sbb dh,ah
  405f2a:	cli    
  405f2b:	add    edx,DWORD PTR [edi+0x4d]
  405f2e:	xchg   ecx,eax
  405f2f:	popa   
  405f30:	lods   eax,DWORD PTR ds:[esi]
  405f31:	xchg   ebp,eax
  405f32:	xchg   dl,ah
  405f34:	jle    0x405f20
  405f36:	ss call 0x7eec:0x2ed32514
  405f3e:	push   ds
  405f3f:	fistp  DWORD PTR [eax+0x59]
  405f42:	push   eax
  405f43:	dec    ebp
  405f44:	push   eax
  405f45:	mov    WORD PTR [esp+ebx*2-0x67],ss
  405f49:	pusha  
  405f4a:	xor    ebp,DWORD PTR [eax+0x50]
  405f4d:	aad    0x9a
  405f4f:	cmp    al,0x82
  405f51:	fnstsw ax
  405f53:	xchg   ebx,eax
  405f54:	in     al,0x67
  405f56:	sub    al,0xf3
  405f58:	push   0x2f188928
  405f5d:	push   ebp
  405f5e:	push   0x798a7a46
  405f63:	add    DWORD PTR [ebx+0x7b],ebp
  405f66:	inc    ebp
  405f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f68:	lock lds eax,FWORD PTR [ecx-0x3a]
  405f6c:	push   cs
  405f6d:	retf   
  405f6e:	ret    
  405f6f:	in     al,0xcc
  405f71:	fistp  DWORD PTR [eax]
  405f73:	shr    WORD PTR [esi+0x54],0x9b
  405f78:	xor    ebx,DWORD PTR [eax]
  405f7a:	bound  eax,QWORD PTR [ecx-0x5]
  405f7d:	or     ah,cl
  405f7f:	test   DWORD PTR [eax+0x4d68e744],edi
  405f85:	sub    ebp,esi
  405f87:	hlt    
  405f88:	jmp    0x405fdb
  405f8a:	adc    DWORD PTR [ecx+0x3f],edx
  405f8d:	aad    0x7
  405f8f:	iret   
  405f90:	mov    ecx,0xf856408b
  405f95:	mov    edi,0x7446a1d8
  405f9a:	mov    esi,0x5d813f3c
  405f9f:	sbb    esp,DWORD PTR [edx-0x3c]
  405fa2:	cmp    WORD PTR [edi+0x0],dx
  405fa6:	ror    DWORD PTR [ecx-0x392a3a7d],1
  405fac:	jnp    0x405f92
  405fae:	sti    
  405faf:	xor    bl,bl
  405fb1:	mov    edx,0xf743d38
  405fb6:	inc    eax
  405fb7:	mov    eax,0xf0114400
  405fbc:	es dec esp
  405fbe:	sbb    DWORD PTR cs:[ebp+0x497007],edx
  405fc5:	repnz pop es
  405fc7:	das    
  405fc8:	(bad)  
  405fc9:	push   cs
  405fca:	loopne 0x405f84
  405fcc:	and    ebx,DWORD PTR [ebx]
  405fce:	shl    DWORD PTR ds:0x7ef34b,1
  405fd4:	bound  ebx,QWORD PTR [ebx-0x7e187766]
  405fda:	cmc    
  405fdb:	push   es
  405fdc:	ret    0xc38b
  405fdf:	add    al,0xbf
  405fe1:	fnstcw WORD PTR cs:[edi]
  405fe4:	fcmovb st,st(2)
  405fe6:	mov    es,WORD PTR ds:0x5032d0a
  405fec:	xchg   ecx,eax
  405fed:	ret    
  405fee:	push   es
  405fef:	ins    BYTE PTR es:[edi],dx
  405ff0:	mov    ah,0xb2
  405ff2:	mov    bl,bh
  405ff4:	cmp    eax,0x48c21875
  405ff9:	ss out 0xd2,eax
  405ffc:	test   al,0x73
  405ffe:	lods   eax,DWORD PTR ds:[esi]
  405fff:	jbe    0x405f9e
  406001:	or     eax,0x6d990cb8
  406006:	add    BYTE PTR [edx+0x2c],cl
  406009:	test   al,0xd1
  40600b:	mov    bl,0x95
  40600d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40600e:	shl    DWORD PTR [esi],cl
  406010:	mov    bh,0x3b
  406012:	mov    al,ds:0x4a6f7594
  406017:	neg    ebp
  406019:	ret    0xcb84
  40601c:	push   ebx
  40601d:	cmp    BYTE PTR [eax-0x681f3b4a],ah
  406023:	mov    esi,0xc0791878
  406028:	sub    bh,ch
  40602a:	push   0x83cf9bef
  40602f:	mov    esi,0x2f00681f
  406034:	sbb    ebp,eax
  406036:	cmp    al,0x47
  406038:	cmc    
  406039:	mov    ss,WORD PTR [edi+0x27]
  40603c:	nop
  40603d:	hlt    
  40603e:	jp     0x405ffc
  406040:	daa    
  406041:	test   esi,eax
  406043:	mov    esi,0xcbc44fd8
  406048:	push   edx
  406049:	imul   edx,DWORD PTR [ebx],0xdfbb7822
  40604f:	jl     0x4060bc
  406051:	mov    bl,0x36
  406053:	jb     0x405fdf
  406055:	xchg   ebx,eax
  406056:	(bad)  
  406057:	jmp    0x6eb3:0x1a16af15
  40605e:	in     eax,0xb1
  406060:	fsub   DWORD PTR [edi]
  406062:	jecxz  0x406021
  406064:	jmp    0x405fee
  406066:	mov    dl,0xb
  406068:	loope  0x406074
  40606a:	add    al,0xd2
  40606c:	xchg   edi,eax
  40606d:	add    BYTE PTR [eax+0x6d],ah
  406070:	jnp    0x406078
  406072:	mov    bl,0x31
  406074:	aas    
  406075:	ds and ecx,esp
  406078:	(bad)  
  406079:	dec    ebp
  40607a:	xor    BYTE PTR [edi-0x64],al
  40607d:	hlt    
  40607e:	jbe    0x4060cf
  406080:	jp     0x406098
  406082:	rol    DWORD PTR [ecx-0x1b8f3059],1
  406088:	cmc    
  406089:	or     edi,ebp
  40608b:	stos   BYTE PTR es:[edi],al
  40608c:	aaa    
  40608d:	or     al,0x39
  40608f:	xor    eax,0x69bdc03d
  406094:	out    dx,eax
  406095:	cdq    
  406096:	dec    ebx
  406097:	mov    BYTE PTR [esi-0x3c],dl
  40609a:	add    DWORD PTR [edx],esp
  40609c:	inc    edx
  40609d:	shl    dl,0x2f
  4060a0:	mov    eax,0xf4d6f097
  4060a5:	les    ebx,FWORD PTR [ebx-0x8]
  4060a8:	adc    DWORD PTR [ebx+0x6b],ebp
  4060ab:	icebp  
  4060ac:	pop    ss
  4060ad:	sbb    eax,0x2800f897
  4060b2:	push   ebp
  4060b3:	in     al,dx
  4060b4:	cmp    al,0x36
  4060b6:	(bad)  
  4060b7:	fcmovb st,st(2)
  4060b9:	aam    0xa5
  4060bb:	stc    
  4060bc:	and    al,0x8a
  4060be:	or     BYTE PTR [ecx+0x1d9a42a6],dh
  4060c4:	or     eax,0xbeb12e91
  4060c9:	iret   
  4060ca:	scas   eax,DWORD PTR es:[edi]
  4060cb:	inc    esp
  4060cc:	ret    
  4060cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ce:	arpl   WORD PTR [ecx+esi*8],cx
  4060d1:	idiv   DWORD PTR [ebx]
  4060d3:	mov    ss,esi
  4060d5:	idiv   BYTE PTR [ecx-0x7f28ec51]
  4060db:	mov    ch,0x38
  4060dd:	punpckhdq mm6,QWORD PTR [edi+edx*2+0xd371de4]
  4060e5:	retf   
  4060e6:	clc    
  4060e7:	aad    0xa0
  4060e9:	icebp  
  4060ea:	mov    ecx,0x47924b63
  4060ef:	push   0x56
  4060f1:	sahf   
  4060f2:	add    al,0xac
  4060f4:	dec    edx
  4060f5:	(bad)  
  4060f6:	(bad)  
  4060f7:	fidivr DWORD PTR [ebx+0x78d538aa]
  4060fd:	jmp    FWORD PTR [edi-0x73d2d39b]
  406103:	(bad)  
  406105:	stc    
  406106:	sar    DWORD PTR [esi+0x3ff5ffa6],cl
  40610c:	lods   al,BYTE PTR ds:[esi]
  40610d:	cli    
  40610e:	in     al,dx
  40610f:	mov    ch,0x40
  406111:	stos   DWORD PTR es:[edi],eax
  406112:	jne    0x40616f
  406114:	call   0x8e14:0xbaecbc8c
  40611b:	mov    al,0xb8
  40611d:	sbb    edx,DWORD PTR [ebx-0x3b33af8a]
  406123:	xor    ch,ch
  406125:	cmovno ecx,DWORD PTR [edi+0x1290426e]
  40612c:	jg     0x4060e9
  40612e:	mov    bh,0x96
  406130:	cmp    BYTE PTR [edx-0x182f8ccc],dh
  406136:	lods   al,BYTE PTR ds:[esi]
  406137:	neg    DWORD PTR [ebp+0x70]
  40613a:	sub    bl,BYTE PTR [ebp+0x3c]
  40613d:	enter  0xd203,0xf2
  406141:	jno    0x40615f
  406143:	push   eax
  406144:	jmp    0x5bd0:0xbc783452
  40614b:	adc    DWORD PTR [ebp+0x207654ad],edi
  406151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406152:	sti    
  406153:	xor    DWORD PTR ds:0xf29361a5,ebx
  406159:	adc    ebx,esp
  40615b:	dec    edx
  40615c:	in     al,0x7
  40615e:	xchg   DWORD PTR [ebp+0xd],esp
  406161:	cld    
  406162:	xchg   ebx,eax
  406163:	push   ecx
  406164:	xor    eax,0x4056caa9
  406169:	cmp    BYTE PTR [eax-0x7028f4bc],bh
  40616f:	mov    ch,0x8b
  406171:	push   ss
  406172:	repz mov ecx,0x4d34b1d3
  406178:	sbb    ebp,edx
  40617a:	out    0x8b,eax
  40617c:	mov    edx,0x4405f933
  406181:	xchg   DWORD PTR [ebx],eax
  406183:	out    dx,al
  406184:	dec    ebp
  406185:	push   0xa9b86b67
  40618a:	push   ss
  40618b:	out    dx,al
  40618c:	sub    edi,esi
  40618e:	fimul  DWORD PTR [ecx+0x3d71b785]
  406194:	or     al,0x8
  406196:	ins    BYTE PTR es:[edi],dx
  406197:	std    
  406198:	push   es
  406199:	inc    ebp
  40619a:	add    DWORD PTR [edi-0x32],0x3da70f58
  4061a1:	inc    edi
  4061a2:	cld    
  4061a3:	push   0x1425675a
  4061a8:	xor    DWORD PTR [edx],ecx
  4061aa:	or     esi,esi
  4061ac:	dec    ecx
  4061ad:	jecxz  0x406155
  4061af:	lods   eax,DWORD PTR ds:[esi]
  4061b0:	xchg   bl,dh
  4061b2:	mov    dl,BYTE PTR [eax+0x12ddc5a]
  4061b8:	mov    ch,0xbf
  4061ba:	cdq    
  4061bb:	add    edx,eax
  4061bd:	fnstcw WORD PTR [ecx]
  4061bf:	jnp    0x40621b
  4061c1:	dec    edx
  4061c2:	icebp  
  4061c3:	pop    DWORD PTR [ebx+0xea1e3d8]
  4061c9:	sbb    BYTE PTR [ebx-0x7c5e1460],ah
  4061cf:	mov    edi,cs
  4061d1:	mov    ds:0xa27ee1ae,al
  4061d6:	xor    BYTE PTR [esi-0x2c],bl
  4061d9:	sahf   
  4061da:	xchg   edx,eax
  4061db:	in     eax,0x5e
  4061dd:	xchg   ebx,eax
  4061de:	addr16 aas 
  4061e0:	pop    ebx
  4061e1:	ret    
  4061e2:	jmp    0x40620f
  4061e4:	clc    
  4061e5:	push   ss
  4061e6:	inc    ebx
  4061e7:	loop   0x4061a5
  4061e9:	and    eax,esi
  4061eb:	fprem1 
  4061ed:	mov    ecx,0x233cc436
  4061f2:	xchg   edi,eax
  4061f3:	pop    ss
  4061f4:	jle    0x406205
  4061f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f7:	sbb    BYTE PTR fs:[edx-0x501f2b1c],ah
  4061fe:	mov    edi,0x62feb5d
  406203:	adc    bl,BYTE PTR [edx]
  406205:	jge    0x4061ba
  406207:	xchg   bp,ax
  406209:	xor    al,0xf7
  40620b:	xchg   BYTE PTR [ecx+ebp*1],dl
  40620e:	fimul  DWORD PTR [ebx+0xe]
  406211:	repz retf 
  406213:	setb   BYTE PTR [eax]
  406216:	frndint 
  406218:	xor    dl,bl
  40621a:	in     al,0x17
  40621c:	les    edx,FWORD PTR [ecx]
  40621e:	jbe    0x4061bc
  406220:	inc    esp
  406221:	mov    esp,0xeb7a136b
  406226:	(bad)  
  406227:	clc    
  406228:	and    al,BYTE PTR [ebx+0x4097368d]
  40622e:	retf   0x825e
  406231:	stos   DWORD PTR es:[edi],eax
  406232:	shl    DWORD PTR [edx+0x1d],1
  406235:	dec    ecx
  406236:	mov    ds:0xf0a99f10,eax
  40623b:	fstp   TBYTE PTR [ebx+0x3d]
  40623e:	inc    edi
  40623f:	retf   
  406240:	mov    ebp,0x2bbe47ca
  406245:	jne    0x406222
  406247:	sub    DWORD PTR [eax-0x610b239e],esi
  40624d:	xor    BYTE PTR [edi+0xf3b1204],bh
  406253:	ret    
  406254:	dec    ebp
  406255:	int    0x40
  406257:	hlt    
  406258:	mov    ah,BYTE PTR [eax]
  40625a:	popf   
  40625b:	inc    ecx
  40625c:	xchg   esi,eax
  40625d:	jnp    0x4062a2
  40625f:	into   
  406260:	adc    edx,DWORD PTR [ecx]
  406262:	mov    dl,0xf9
  406264:	push   edi
  406265:	dec    ebx
  406266:	cwde   
  406267:	imul   ebp,DWORD PTR [esi+ebp*4],0xffffff8e
  40626b:	stos   BYTE PTR es:[edi],al
  40626c:	push   ds
  40626d:	cmp    dl,BYTE PTR [esi-0x7e]
  406270:	jmp    0x8be4cc39
  406275:	fld    QWORD PTR [ebp-0x10]
  406278:	ja     0x40623d
  40627a:	cmc    
  40627b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40627c:	pop    esp
  40627d:	adc    DWORD PTR [edx+0x40f9438c],edi
  406283:	inc    edx
  406284:	mov    edi,0xc9680961
  406289:	jmp    0x100ba88f
  40628e:	or     al,0x69
  406290:	loopne 0x406239
  406292:	mov    cl,0x4c
  406294:	or     BYTE PTR [edx+0x4ae56637],dh
  40629a:	pop    es
  40629b:	pop    esp
  40629c:	sub    dl,BYTE PTR [edx-0x48]
  40629f:	(bad)  
  4062a0:	in     al,dx
  4062a1:	pop    edi
  4062a2:	lea    esi,gs:[eax*4-0x4f5541e0]
  4062aa:	sub    cl,al
  4062ac:	fucomp st(2)
  4062ae:	xchg   edx,eax
  4062af:	lahf   
  4062b0:	jae    0x40629c
  4062b2:	dec    esp
  4062b3:	mov    ch,0x61
  4062b5:	out    0x1b,al
  4062b7:	sub    BYTE PTR [esp+ecx*2-0x79],bh
  4062bb:	cmp    eax,0x836d8b0d
  4062c0:	sti    
  4062c1:	jne    0x406330
  4062c3:	enter  0xb286,0xcd
  4062c7:	push   eax
  4062c8:	cmp    al,0x18
  4062ca:	add    dh,bl
  4062cc:	mov    BYTE PTR [ecx],dl
  4062ce:	mov    eax,edi
  4062d0:	imul   DWORD PTR [esi]
  4062d2:	fild   DWORD PTR [esi+esi*2-0x1c]
  4062d6:	and    BYTE PTR [edi],0x36
  4062d9:	jge    0x406351
  4062db:	out    dx,eax
  4062dc:	sbb    eax,0x94e93956
  4062e1:	fcmovbe st,st(7)
  4062e3:	sbb    esi,0x5f
  4062e6:	popf   
  4062e7:	jp     0x4062cb
  4062e9:	shl    DWORD PTR [ebx],1
  4062eb:	arpl   WORD PTR [edx-0x3f1bf53d],bp
  4062f1:	or     eax,0x4bd75200
  4062f6:	add    DWORD PTR [esi],eax
  4062f8:	sub    eax,0xb845f1ce
  4062fd:	and    al,BYTE PTR [eax+0x51]
  406300:	mov    edi,0xe766508c
  406305:	adc    eax,DWORD PTR [edx+ebx*1]
  406308:	or     ah,al
  40630a:	popa   
  40630b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630c:	xchg   ecx,eax
  40630d:	rcl    DWORD PTR [edi-0x150e2fc8],cl
  406313:	mov    esp,0x6228ae50
  406318:	fidivr WORD PTR [esi-0x7e]
  40631b:	add    ebp,DWORD PTR [edx]
  40631d:	sbb    bl,al
  40631f:	and    al,0xcc
  406321:	shr    BYTE PTR [edx+0x6c],cl
  406324:	jg     0x4062b5
  406326:	ss mov ah,0x2b
  406329:	xchg   edi,eax
  40632a:	aas    
  40632b:	cmc    
  40632c:	jle    0x406363
  40632e:	mov    ?,ebp
  406330:	(bad)  
  406331:	jnp    0x4062f8
  406333:	xor    al,0x68
  406335:	fsub   QWORD PTR [ebp+ebx*2+0x76]
  406339:	add    eax,0xa7846622
  40633e:	cmp    DWORD PTR [edi],esp
  406340:	mov    ds,WORD PTR [eax-0x3e1821bc]
  406346:	inc    ebp
  406347:	add    al,0x2b
  406349:	ret    0x88f4
  40634c:	xlat   BYTE PTR ds:[ebx]
  40634d:	out    0xd9,eax
  40634f:	gs xchg esi,eax
  406351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406352:	dec    esi
  406353:	or     DWORD PTR [edi-0x2907118f],ebx
  406359:	push   ecx
  40635a:	(bad)  
  40635b:	xor    esi,DWORD PTR [esi]
  40635d:	invd   
  40635f:	cli    
  406360:	pop    esi
  406361:	pop    ebx
  406362:	ret    0x58e4
  406365:	int3   
  406366:	add    BYTE PTR [esp+ebx*1+0x41a0a410],bh
  40636d:	pop    edx
  40636e:	sbb    eax,0x15ca5e27
  406373:	pop    esp
  406374:	adc    ebx,eax
  406376:	inc    ecx
  406377:	mov    BYTE PTR [ecx+0x2f9ac0cb],dl
  40637d:	dec    ebx
  40637e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637f:	(bad)  
  406380:	sbb    eax,0x3e0ae70c
  406385:	mov    eax,0x125d04e
  40638a:	or     DWORD PTR [ebx-0x48],ecx
  40638d:	xor    al,0xeb
  40638f:	clc    
  406390:	fist   DWORD PTR [edi-0x44]
  406393:	mov    cl,0x6c
  406395:	out    0xb3,eax
  406397:	data16 std 
  406399:	jmp    0x406371
  40639b:	fidiv  DWORD PTR [esi-0x5da2afac]
  4063a1:	or     dh,BYTE PTR [edx]
  4063a3:	dec    ecx
  4063a4:	jne    0x4063ce
  4063a6:	addr16 loop 0x4063e3
  4063a9:	push   ebp
  4063aa:	inc    esi
  4063ab:	jnp    0x406380
  4063ad:	(bad)
  4063b2:	in     eax,0x47
  4063b4:	and    DWORD PTR [edx-0x12989627],0x930b35c5
  4063be:	daa    
  4063bf:	xor    DWORD PTR [esi+edi*2+0x66],0x1a45c900
  4063c7:	int    0x18
  4063c9:	or     edx,DWORD PTR [edx-0x6d]
  4063cc:	xor    al,0xcf
  4063ce:	pop    esi
  4063cf:	pushf  
  4063d0:	sub    edx,eax
  4063d2:	rcl    BYTE PTR [ebp+0x336de364],0xc8
  4063d9:	mov    ebx,0xdf1e266e
  4063de:	outs   dx,DWORD PTR ds:[esi]
  4063df:	xor    al,0x8f
  4063e1:	js     0x406375
  4063e3:	pop    ecx
  4063e4:	push   ebp
  4063e5:	scas   al,BYTE PTR es:[edi]
  4063e6:	lahf   
  4063e7:	jecxz  0x40641f
  4063e9:	test   BYTE PTR [edx+0x421b8620],bl
  4063ef:	adc    ebp,esp
  4063f1:	fldcw  WORD PTR [ecx+0x36]
  4063f4:	scas   eax,DWORD PTR es:[di]
  4063f6:	shl    BYTE PTR [esi+edi*2-0x5b],cl
  4063fa:	xchg   ecx,eax
  4063fb:	pop    eax
  4063fc:	adc    ebp,DWORD PTR [ecx-0x14]
  4063ff:	push   cs
  406400:	test   BYTE PTR [eax+edx*1+0x3b8c5761],ah
  406407:	pop    ecx
  406408:	xor    DWORD PTR [ebx+0x1300169d],edi
  40640e:	adc    edi,DWORD PTR [edi+edi*1+0x8786465]
  406415:	and    eax,0x8be2c3a1
  40641a:	sub    BYTE PTR [ecx-0x60],dh
  40641d:	test   BYTE PTR [eax-0x45],ch
  406420:	hlt    
  406421:	cmp    esp,edi
  406423:	fs mov esp,0x4697d1b2
  406429:	addr16 pusha 
  40642b:	repz pop esp
  40642d:	arpl   WORD PTR [eax+esi*8],sp
  406430:	adc    DWORD PTR [ebx],ebx
  406432:	sub    dl,bl
  406434:	mov    dl,0x45
  406436:	cmc    
  406437:	adc    eax,0x4eadfb63
  40643c:	shr    al,0xc5
  40643f:	mov    edx,0xe1c1c5e1
  406444:	fwait
  406445:	jp     0x4064be
  406447:	ret    
  406448:	(bad)  
  406449:	shl    DWORD PTR [eax-0x1f],1
  40644c:	and    al,BYTE PTR [ecx+0x144c38cf]
  406452:	ins    BYTE PTR es:[edi],dx
  406453:	icebp  
  406454:	cdq    
  406455:	aad    0x5a
  406457:	adc    eax,0x22acf665
  40645c:	xlat   BYTE PTR ds:[ebx]
  40645d:	dec    BYTE PTR [edi]
  40645f:	mov    bh,0xd6
  406461:	mov    dl,0x41
  406463:	test   DWORD PTR [eax-0x20d71ca2],esp
  406469:	add    DWORD PTR [edi+eax*8-0x5966fabf],0x6d
  406471:	(bad)  
  406472:	arpl   WORD PTR [esi+0x4b],sp
  406475:	sub    eax,0xc7f04cae
  40647a:	push   es
  40647b:	mov    dl,0x25
  40647d:	mov    DWORD PTR [ecx],eax
  40647f:	inc    esi
  406480:	call   0x9d70:0xb8268e14
  406487:	pushf  
  406488:	mov    edi,0xdd0b5617
  40648d:	rcr    BYTE PTR [edx-0x16867ed2],1
  406493:	dec    ecx
  406494:	jne    0x406459
  406496:	(bad)  
  406497:	mov    al,0xec
  406499:	push   ecx
  40649a:	ins    DWORD PTR es:[edi],dx
  40649b:	and    al,0x13
  40649d:	mov    bl,al
  40649f:	push   esp
  4064a0:	ret    0x6e0a
  4064a3:	xchg   esp,eax
  4064a4:	adc    BYTE PTR [ebp-0x3e48d54c],bh
  4064aa:	test   al,0x28
  4064ac:	sti    
  4064ad:	addr16 push cs
  4064af:	xchg   esi,eax
  4064b0:	inc    edi
  4064b1:	test   esp,ecx
  4064b3:	pop    ebp
  4064b4:	fnstcw WORD PTR [edi]
  4064b6:	mov    eax,ds:0x7f070dc1
  4064bb:	test   bh,dl
  4064bd:	mov    al,ds:0xd58a7510
  4064c2:	jns    0x406469
  4064c4:	jno    0x4064fd
  4064c6:	imul   eax,DWORD PTR [esi+0x7d],0x6e
  4064ca:	outs   dx,DWORD PTR ds:[esi]
  4064cb:	xor    eax,0x95483f65
  4064d0:	xchg   ebp,eax
  4064d1:	cmp    BYTE PTR [ebx+ebx*8],0x9c
  4064d5:	pushf  
  4064d6:	mov    ds:0x6eef740f,eax
  4064db:	push   ss
  4064dc:	(bad)  [ecx-0xd118bd9]
  4064e2:	xor    DWORD PTR [edi-0x24],0x61460845
  4064e9:	mov    ebx,0x766a1c6b
  4064ee:	ret    
  4064ef:	scas   al,BYTE PTR es:[edi]
  4064f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f1:	je     0x406503
  4064f3:	xlat   BYTE PTR ds:[ebx]
  4064f4:	loopne 0x4064cc
  4064f6:	jb     0x4064cb
  4064f8:	gs inc esp
  4064fa:	mov    ch,0xea
  4064fc:	mov    esi,0x81b0fd79
  406501:	retf   
  406502:	dec    esp
  406503:	adc    bh,BYTE PTR [esi+0x3e0baad0]
  406509:	test   bl,dh
  40650b:	cld    
  40650c:	in     eax,0x34
  40650e:	and    esp,DWORD PTR [edi*8+0x181c5cc1]
  406515:	les    edx,FWORD PTR [esi]
  406517:	(bad)  
  406518:	clc    
  406519:	pop    edi
  40651a:	aam    0xd0
  40651c:	sub    al,BYTE PTR [edx-0x3add9f4]
  406522:	ret    0xeecc
  406525:	dec    ebx
  406526:	mov    BYTE PTR [ebp*8+0xb0a93ad],bl
  40652d:	fmul   st(3),st
  40652f:	mov    bl,0x68
  406531:	dec    ebp
  406532:	xlat   BYTE PTR ss:[ebx]
  406534:	neg    esi
  406536:	add    BYTE PTR ds:0x1708e525,cl
  40653c:	pop    es
  40653d:	cmp    cl,BYTE PTR [edi-0x7]
  406540:	fdiv   st,st(2)
  406542:	retf   
  406543:	dec    esi
  406544:	push   0xec11a5cd
  406549:	stc    
  40654a:	xchg   ebp,eax
  40654b:	int3   
  40654c:	call   0x31df:0x8c297985
  406553:	pusha  
  406554:	out    dx,al
  406555:	cdq    
  406556:	das    
  406557:	xor    eax,0x1b259a3
  40655c:	lock inc esi
  40655e:	or     BYTE PTR [edx],cl
  406560:	out    0x72,eax
  406562:	das    
  406563:	call   0x1d1d:0x634000e
  40656a:	clc    
  40656b:	retf   
  40656c:	fld    DWORD PTR [edi-0x55]
  40656f:	imul   edi,DWORD PTR [eax-0xf4570b1],0x7639b5ed
  406579:	xchg   ecx,eax
  40657a:	mov    al,0x13
  40657c:	fisubr DWORD PTR [ebp-0x64f25952]
  406582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406583:	fild   WORD PTR [edx]
  406585:	vcmpsd xmm4,xmm5,xmm7,0x60
  40658a:	stc    
  40658b:	sub    BYTE PTR [esi+0x52],0xc9
  40658f:	and    BYTE PTR [esi+0x7b025a13],dh
  406595:	xlat   BYTE PTR ds:[ebx]
  406596:	ret    
  406597:	add    al,0xa8
  406599:	out    0x5,al
  40659b:	push   eax
  40659c:	jnp    0x406551
  40659e:	int3   
  40659f:	jp     0x406566
  4065a1:	popf   
  4065a2:	in     eax,0x2d
  4065a4:	enter  0xb38f,0xe0
  4065a8:	push   ebp
  4065a9:	or     ah,BYTE PTR [ecx-0x2cb2606e]
  4065af:	mov    al,0xff
  4065b1:	pop    esi
  4065b2:	push   edi
  4065b3:	scas   al,BYTE PTR es:[edi]
  4065b4:	push   edx
  4065b5:	shr    dh,1
  4065b7:	mov    cl,0x69
  4065b9:	data16 jb 0x40655d
  4065bc:	add    DWORD PTR [edi],ecx
  4065be:	dec    edx
  4065bf:	stc    
  4065c0:	pop    ebp
  4065c1:	call   0x9ee9:0xcaadc652
  4065c8:	xchg   ebp,eax
  4065c9:	ins    BYTE PTR es:[edi],dx
  4065ca:	ret    0x5dec
  4065cd:	in     al,0xa5
  4065cf:	int3   
  4065d0:	add    eax,0x246f670f
  4065d5:	xchg   esp,eax
  4065d6:	outs   dx,DWORD PTR ds:[esi]
  4065d7:	lods   eax,DWORD PTR ds:[esi]
  4065d8:	in     al,0xe7
  4065da:	sub    al,0x9b
  4065dc:	push   0x1ebaeb6b
  4065e1:	cmp    esp,edi
  4065e3:	les    esi,FWORD PTR [ecx+0x31]
  4065e6:	pop    ecx
  4065e7:	inc    ebx
  4065e8:	shl    BYTE PTR [edx+0x39],1
  4065eb:	push   cs
  4065ec:	mov    ds:0x76fdbf11,eax
  4065f1:	pop    edx
  4065f2:	mov    eax,0x15ecfe73
  4065f7:	mov    bl,0x59
  4065f9:	jno    0x4065f2
  4065fb:	dec    edi
  4065fc:	daa    
  4065fd:	add    esi,DWORD PTR [ecx+0x21]
  406600:	icebp  
  406601:	fst    QWORD PTR [ebx]
  406603:	or     BYTE PTR [edx+0x10ac6b25],al
  406609:	sbb    al,BYTE PTR [ebp-0x10b8be6e]
  40660f:	inc    ebx
  406610:	in     al,dx
  406611:	cmc    
  406612:	out    0x93,eax
  406614:	xchg   esi,eax
  406615:	cmpxchg DWORD PTR [eax+0x2c],ecx
  406619:	push   ebp
  40661a:	push   esp
  40661b:	(bad)
  406620:	sub    ebx,DWORD PTR [eax+0x6b]
  406623:	mov    eax,0xc8469675
  406628:	frstor [ebx+0x62]
  40662b:	inc    esp
  40662c:	out    0xc3,al
  40662e:	retf   0x8c0a
  406631:	cs jmp 0x1804:0xcddfc365
  406639:	shl    BYTE PTR ds:0xe9c92dc3,1
  40663f:	xlat   BYTE PTR ds:[ebx]
  406640:	nop
  406641:	add    BYTE PTR [esi-0x4c],dh
  406644:	addr16 mov eax,ds:0x492d
  406648:	bound  ebx,QWORD PTR [ebx]
  40664a:	jno    0x406612
  40664c:	lods   al,BYTE PTR ds:[esi]
  40664d:	inc    ebx
  40664e:	call   0xa128:0x4fbb707d
  406655:	ss gs je 0x40663e
  406659:	(bad)  
  40665a:	test   ebp,eax
  40665c:	das    
  40665d:	fstp   QWORD PTR [esi-0x5a]
  406660:	cmp    DWORD PTR [ecx],eax
  406662:	popf   
  406663:	xor    DWORD PTR [edx+0x28691afb],esp
  406669:	mov    eax,ds:0xc7895f42
  40666e:	or     ch,BYTE PTR cs:[esi]
  406671:	jmp    0x5819:0x54868f7b
  406678:	mov    dh,0x96
  40667a:	int3   
  40667b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40667c:	rol    BYTE PTR [eax-0x7f],1
  40667f:	or     al,0xda
  406681:	fldcw  WORD PTR [edi-0x6509e738]
  406687:	push   edx
  406688:	dec    edx
  406689:	mov    eax,0x92755d07
  40668e:	sub    bh,BYTE PTR [esi+0x49]
  406691:	in     eax,0x45
  406693:	in     eax,dx
  406694:	add    eax,0x5197a6d5
  406699:	mov    WORD PTR ds:0xd8cded0b,cs
  40669f:	repz or ebp,DWORD PTR [ebp+0xd6922b3]
  4066a6:	int3   
  4066a7:	jecxz  0x406661
  4066a9:	xlat   BYTE PTR ds:[ebx]
  4066aa:	jb     0x4066ff
  4066ac:	add    dh,BYTE PTR [ebx+0x27d69999]
  4066b2:	outs   dx,DWORD PTR ds:[esi]
  4066b3:	mov    ah,0xd1
  4066b6:	or     eax,0x1e7ccbb5
  4066bb:	call   0x8ab2:0xa1da6957
  4066c2:	mov    WORD PTR [edi+esi*2+0x45],?
  4066c6:	sbb    eax,0x4d26984d
  4066cb:	sub    al,BYTE PTR [eax]
  4066cd:	aaa    
  4066ce:	mov    bl,0xc0
  4066d0:	mov    al,0x80
  4066d2:	jnp    0x4066f1
  4066d4:	xchg   ebp,eax
  4066d5:	lods   eax,DWORD PTR ds:[esi]
  4066d6:	in     al,0xa2
  4066d8:	test   al,0xab
  4066da:	mov    ds:0x359191fe,eax
  4066df:	jge    0x406727
  4066e1:	in     eax,0xb0
  4066e3:	xchg   ecx,eax
  4066e4:	bound  edx,QWORD PTR [edx+0x7dfbc015]
  4066ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066eb:	add    al,0xd7
  4066ed:	dec    edx
  4066ee:	bnd jp 0x406748
  4066f1:	xor    BYTE PTR [edx+ebx*8],dl
  4066f4:	xlat   BYTE PTR ds:[ebx]
  4066f5:	sbb    cl,BYTE PTR [edi+0x67]
  4066f8:	std    
  4066f9:	outs   dx,BYTE PTR ds:[esi]
  4066fa:	cs pusha 
  4066fc:	daa    
  4066fd:	mov    esp,0xc5c2e284
  406702:	mov    dl,0x80
  406704:	ds shl bh,cl
  406707:	rcr    DWORD PTR [ecx],0xf9
  40670a:	sar    BYTE PTR [ebx-0x9],cl
  40670d:	and    BYTE PTR [edx],ch
  40670f:	daa    
  406710:	out    0xf3,al
  406712:	(bad)
  406715:	int    0xf
  406717:	pop    ss
  406718:	add    DWORD PTR [ecx+0x56e29625],esp
  40671e:	cmp    bh,BYTE PTR [esi-0x6161ef4b]
  406724:	add    DWORD PTR [edx+0x3d],ecx
  406727:	xchg   edi,eax
  406728:	pop    eax
  406729:	sbb    al,0x96
  40672b:	out    0x1,eax
  40672d:	fnstenv [edx]
  40672f:	sub    al,0x73
  406731:	test   eax,0x7874cdc
  406736:	push   ds
  406737:	mov    dl,0x48
  406739:	or     BYTE PTR cs:[ebp+0x4403587a],ch
  406740:	lahf   
  406741:	push   eax
  406742:	lea    esp,[ebp+0x22e74432]
  406748:	ror    BYTE PTR ds:0xd3c0bf50,1
  40674e:	xchg   ecx,eax
  40674f:	ret    
  406750:	int3   
  406751:	pop    esi
  406752:	mov    dl,0x89
  406754:	int    0x7a
  406756:	push   eax
  406757:	shld   ecx,ebp,0x66
  40675b:	scas   al,BYTE PTR es:[edi]
  40675c:	mov    cs,edx
  40675e:	mov    edi,0x30c8692e
  406763:	inc    edi
  406764:	icebp  
  406765:	xchg   esp,eax
  406766:	loop   0x4067e2
  406768:	pusha  
  406769:	enter  0xbc06,0x26
  40676d:	call   0x5b300d4
  406772:	fmul   st,st(2)
  406774:	xchg   edx,eax
  406775:	loop   0x40674c
  406777:	shl    DWORD PTR [ecx-0x54898f3e],cl
  40677d:	cmp    esi,DWORD PTR [eax]
  40677f:	in     al,dx
  406780:	cs inc esi
  406782:	mov    ebp,?
  406784:	add    BYTE PTR [ebp-0x69afcc63],bh
  40678a:	ins    BYTE PTR es:[edi],dx
  40678b:	stos   DWORD PTR es:[edi],eax
  40678c:	mov    bh,0x0
  40678e:	ds pushf 
  406790:	out    0xb7,eax
  406792:	int3   
  406793:	jo     0x406747
  406795:	hlt    
  406796:	mov    cl,0x9d
  406798:	mov    ds:0x48e1233a,al
  40679d:	mov    ecx,0xfe4b3ec
  4067a2:	out    dx,eax
  4067a3:	add    BYTE PTR [ebp-0x257e6d58],ah
  4067a9:	enter  0x1dd9,0x18
  4067ad:	icebp  
  4067ae:	pop    esi
  4067af:	popa   
  4067b0:	or     DWORD PTR [ecx-0x4fbb9271],esp
  4067b6:	mov    edx,0x5a580c87
  4067bb:	mov    al,0x63
  4067bd:	imul   ebp,DWORD PTR [ecx+eiz*2-0x3f],0xffffffc1
  4067c2:	mov    ds:0xfa6ee451,eax
  4067c7:	imul   esp,eax,0x53611c8
  4067cd:	lods   al,BYTE PTR ds:[esi]
  4067ce:	push   es
  4067cf:	pusha  
  4067d0:	jno    0x4067fd
  4067d2:	outs   dx,BYTE PTR ds:[esi]
  4067d3:	adc    al,0xbb
  4067d5:	add    ch,0x7
  4067d8:	mov    dl,0xf5
  4067da:	mov    cl,0xee
  4067dc:	jecxz  0x406763
  4067de:	in     al,dx
  4067df:	std    
  4067e0:	sar    DWORD PTR [ecx-0xc],1
  4067e3:	inc    esi
  4067e4:	clc    
  4067e5:	push   eax
  4067e6:	sub    BYTE PTR [eax],0xed
  4067e9:	test   DWORD PTR [ecx],edi
  4067eb:	rcl    al,1
  4067ed:	pop    ss
  4067ee:	mov    cl,0xeb
  4067f0:	in     eax,0x3a
  4067f2:	data16 stos BYTE PTR es:[edi],al
  4067f4:	shr    BYTE PTR ds:0x5eb02ae7,1
  4067fa:	push   0x6438bba7
  4067ff:	fisubr WORD PTR [edx-0x3a]
  406802:	add    DWORD PTR [eax+0x10aaf8ac],esp
  406808:	mov    edx,0xf1321e8f
  40680d:	inc    esp
  40680e:	pop    edx
  40680f:	stos   DWORD PTR es:[edi],eax
  406810:	sub    BYTE PTR [esi],bh
  406812:	fcomp  QWORD PTR [ebp-0x252d29d2]
  406818:	repnz cdq 
  40681a:	or     edi,DWORD PTR [edi+0x5c]
  40681d:	add    BYTE PTR [ebx],al
  40681f:	push   cs
  406820:	cmc    
  406821:	scas   al,BYTE PTR es:[edi]
  406822:	sahf   
  406823:	jg     0x4067f8
  406825:	test   BYTE PTR [edi+0x3a],ch
  406828:	adc    ebx,DWORD PTR [esi+0x57]
  40682b:	mov    ebx,0xd4231d1b
  406830:	xchg   ebx,eax
  406831:	or     esi,DWORD PTR [edi-0x4b7f890a]
  406837:	cs fcmove st,st(2)
  40683a:	scas   eax,DWORD PTR es:[edi]
  40683b:	xchg   BYTE PTR [edi],ch
  40683d:	pop    ss
  40683e:	(bad)  
  40683f:	je     0x406899
  406841:	clc    
  406842:	in     eax,0x4
  406844:	stos   BYTE PTR es:[edi],al
  406845:	cmp    eax,DWORD PTR [eax-0x3685a8b3]
  40684b:	adc    al,0x9a
  40684e:	push   edx
  40684f:	mov    ecx,0xf9f8da9e
  406854:	imul   esi,DWORD PTR [ebx-0x1a],0xffffff99
  406858:	jo     0x406846
  40685a:	arpl   bp,si
  40685c:	xor    eax,0x553be90a
  406861:	sub    BYTE PTR [esi],cl
  406863:	jecxz  0x4068cc
  406865:	and    ah,BYTE PTR [edx]
  406867:	xor    esi,DWORD PTR [ebx-0x2be73563]
  40686d:	mov    bh,0x6f
  40686f:	sbb    ebx,esi
  406871:	(bad)  
  406872:	jb     0x40687c
  406874:	int3   
  406875:	int    0x98
  406877:	stc    
  406878:	in     eax,dx
  406879:	mov    cl,BYTE PTR [ecx]
  40687b:	inc    esi
  40687c:	adc    DWORD PTR [ebp-0x5d],esp
  40687f:	fistp  WORD PTR [ebp+0x10]
  406882:	aad    0xc1
  406884:	adc    esp,edx
  406886:	rcl    DWORD PTR [ebx+0x4e],1
  406889:	mov    WORD PTR [edx+0x4dd01b70],fs
  40688f:	add    DWORD PTR [ecx+0x35],esi
  406892:	inc    eax
  406893:	pop    es
  406894:	mov    esp,0x866bf858
  406899:	push   ebx
  40689a:	adc    al,0x6b
  40689c:	shr    DWORD PTR [edx-0x47075d4],cl
  4068a2:	rcr    BYTE PTR [esi],cl
  4068a4:	mov    bh,0xc8
  4068a6:	xchg   ebx,eax
  4068a7:	adc    al,0xbe
  4068a9:	minps  xmm5,XMMWORD PTR [edx-0xb]
  4068ad:	xchg   esi,eax
  4068ae:	repz sbb DWORD PTR [ecx],0x2acf67fe
  4068b5:	clc    
  4068b6:	pop    ecx
  4068b7:	sbb    DWORD PTR [edx-0x33a371b6],edi
  4068bd:	inc    ebx
  4068be:	popa   
  4068bf:	adc    ecx,DWORD PTR [edx-0x53026aae]
  4068c5:	ficomp DWORD PTR [edi]
  4068c7:	mov    dl,0xe5
  4068c9:	out    dx,al
  4068ca:	in     eax,0x49
  4068cc:	pop    ss
  4068cd:	sbb    al,0xe5
  4068cf:	jge    0x406873
  4068d1:	push   esp
  4068d2:	inc    esp
  4068d3:	call   0xca39:0x26488d65
  4068da:	mov    ds:0x1277558d,eax
  4068df:	push   esi
  4068e0:	aas    
  4068e1:	std    
  4068e2:	ins    DWORD PTR es:[edi],dx
  4068e3:	rcl    DWORD PTR [edx-0x23267311],1
  4068e9:	push   edi
  4068ea:	stos   DWORD PTR es:[edi],eax
  4068eb:	xchg   BYTE PTR [eax-0x41c8dcf6],dl
  4068f1:	push   edi
  4068f2:	pop    ebx
  4068f3:	push   ecx
  4068f4:	xor    bl,al
  4068f6:	(bad)  [ecx+0x23]
  4068f9:	in     eax,dx
  4068fa:	shl    DWORD PTR [ebp+0x3be24fa4],1
  406900:	(bad)  
  406901:	sbb    DWORD PTR [esi-0x7ff51d1d],ecx
  406907:	das    
  406908:	mov    bl,0x4c
  40690a:	dec    ecx
  40690b:	test   al,0x3d
  40690d:	mov    ds:0x43f91145,eax
  406912:	push   ecx
  406913:	mov    ecx,0x6447597
  406918:	frstor [edi+0x47]
  40691b:	lock fisubr WORD PTR [edx+edi*4-0x4ef8b9d7]
  406923:	mov    ds:0x24af1483,al
  406928:	pop    ecx
  406929:	fisub  DWORD PTR [esi+ebx*4+0x3f784359]
  406930:	mov    bl,0x9
  406932:	int3   
  406933:	or     BYTE PTR [ebp+0x38f02458],0xfa
  40693a:	sbb    eax,0x28720a95
  40693f:	(bad)  
  406940:	adc    DWORD PTR [ebp-0x7b13ef45],esp
  406946:	mov    bh,0xeb
  406948:	div    BYTE PTR [edx+edx*8-0x3a97bfce]
  40694f:	mov    edx,DWORD PTR [esi+edi*8-0x1d]
  406953:	jle    0x406965
  406955:	xchg   ecx,eax
  406956:	loope  0x406992
  406958:	or     DWORD PTR [ebx],ebp
  40695a:	aaa    
  40695b:	daa    
  40695c:	fbstp  TBYTE PTR [eax+0x2b]
  40695f:	clc    
  406960:	lods   al,BYTE PTR ds:[esi]
  406961:	(bad)  
  406963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406964:	push   es
  406965:	loope  0x406970
  406967:	pop    es
  406968:	xor    ebx,DWORD PTR [ebp+0x48]
  40696b:	sbb    edi,ecx
  40696d:	adc    al,0xa0
  40696f:	sbb    bl,al
  406971:	sbb    al,0xf0
  406973:	aad    0x78
  406975:	bound  esi,QWORD PTR [esi+0x27]
  406978:	out    0x59,al
  40697a:	and    eax,0x7c15a363
  40697f:	dec    ebp
  406980:	dec    ebx
  406981:	and    edx,DWORD PTR [edx-0x28362fbb]
  406987:	push   ds
  406988:	cli    
  406989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40698a:	retf   
  40698b:	mov    ecx,ebx
  40698d:	iret   
  40698e:	lods   eax,DWORD PTR ds:[esi]
  40698f:	cli    
  406990:	stos   BYTE PTR es:[edi],al
  406991:	in     al,dx
  406992:	jmp    0xac5d:0xcf1b32ce
  406999:	mov    ch,0x64
  40699b:	hlt    
  40699c:	push   ds
  40699d:	fsubr  DWORD PTR [esi-0x3d]
  4069a0:	and    bh,dh
  4069a2:	add    eax,esp
  4069a4:	jl     0x4069e4
  4069a6:	xchg   edx,eax
  4069a7:	leave  
  4069a8:	cld    
  4069a9:	jb     0x4069c3
  4069ab:	repnz cwde 
  4069ad:	rol    BYTE PTR [esi-0x7c32dc52],1
  4069b3:	(bad)  
  4069b4:	stc    
  4069b5:	sbb    ch,al
  4069b7:	lods   eax,DWORD PTR ds:[esi]
  4069b8:	repnz cmp eax,0xb468adc0
  4069be:	adc    al,0x39
  4069c0:	dec    eax
  4069c1:	in     eax,0x38
  4069c3:	push   ecx
  4069c4:	and    BYTE PTR [edi-0x5b5cc615],cl
  4069ca:	xor    BYTE PTR [esi+0x62d9bce5],dh
  4069d0:	out    dx,al
  4069d1:	div    DWORD PTR [ebx]
  4069d3:	ret    0x188c
  4069d6:	shl    DWORD PTR [eax-0x34],0x6c
  4069da:	icebp  
  4069db:	xchg   DWORD PTR [ecx+0x3f],eax
  4069de:	jnp    0x40696b
  4069e0:	cs mov bl,0xf4
  4069e3:	sahf   
  4069e4:	xor    eax,0x2cbef8ab
  4069e9:	xor    DWORD PTR [ebx+0xcacaa1b],edi
  4069ef:	gs aam 0x1
  4069f2:	pop    edx
  4069f3:	stc    
  4069f4:	or     BYTE PTR [ebp+0x5b],bh
  4069f7:	js     0x4069d5
  4069f9:	in     al,0x66
  4069fb:	push   ebp
  4069fc:	(bad)  
  4069fd:	push   0xffffffce
  4069ff:	xor    BYTE PTR [esi],bh
  406a01:	cmp    DWORD PTR [edx],eax
  406a03:	ss inc esp
  406a05:	add    DWORD PTR [edi+edi*4],eax
  406a08:	mov    al,ds:0xa38e010b
  406a0d:	loope  0x406a8a
  406a0f:	push   esp
  406a10:	pop    ds
  406a11:	adc    ebp,DWORD PTR [edx-0x65]
  406a14:	inc    edx
  406a15:	xor    eax,0x46cdd6d8
  406a1a:	xchg   edx,eax
  406a1b:	call   0x6a5e:0x9ec20d83
  406a22:	sbb    al,0xc3
  406a24:	jae    0x4069cf
  406a26:	cmp    ebx,DWORD PTR [ebx+0x1c]
  406a29:	mov    ?,WORD PTR [ebp+0x931e623]
  406a2f:	mov    gs,WORD PTR [eax-0x56f4c512]
  406a35:	jne    0x406a63
  406a37:	int    0xbf
  406a39:	dec    ecx
  406a3a:	inc    BYTE PTR [ebx-0x32d7511d]
  406a40:	or     al,0x12
  406a42:	stos   BYTE PTR es:[edi],al
  406a43:	jge    0x406a27
  406a45:	into   
  406a46:	jg     0x406a37
  406a48:	cwde   
  406a49:	mov    edx,0x4d107092
  406a4e:	outs   dx,BYTE PTR ds:[esi]
  406a4f:	out    dx,al
  406a50:	retf   
  406a51:	into   
  406a52:	lea    eax,[ecx+ebp*1]
  406a55:	(bad)
  406a59:	bound  edi,QWORD PTR [eax+edx*8-0x68]
  406a5d:	and    BYTE PTR [edi+0x3],bl
  406a60:	push   0x453f2514
  406a65:	and    eax,0x86bec90c
  406a6a:	xor    eax,0x4add9b5d
  406a6f:	adc    al,0xd
  406a71:	(bad)  
  406a72:	mov    edi,0x3076c632
  406a77:	sbb    eax,0x35b2285c
  406a7c:	js     0x406a0c
  406a7e:	adc    al,0x6
  406a80:	out    dx,al
  406a81:	push   ebp
  406a82:	addr16 sbb bl,dl
  406a85:	dec    edx
  406a86:	and    DWORD PTR [esi-0x72],ecx
  406a89:	in     al,0x64
  406a8b:	imul   edx,DWORD PTR [ecx],0x31
  406a8e:	or     edi,DWORD PTR [edi+esi*2-0x28520236]
  406a95:	adc    DWORD PTR [esp+esi*4+0x7b],edx
  406a99:	mov    ecx,DWORD PTR [ecx+0x2d84013b]
  406a9f:	(bad)  
  406aa1:	cld    
  406aa2:	ja     0x406a7c
  406aa4:	pop    esp
  406aa5:	xor    al,0xab
  406aa7:	mov    bl,0x5c
  406aa9:	pop    edi
  406aaa:	ja     0x406a4a
  406aac:	dec    ebp
  406aad:	in     eax,0x9c
  406aaf:	add    DWORD PTR [ebx+0x5d],edi
  406ab2:	inc    ebx
  406ab3:	fidivr DWORD PTR [eax+eax*4-0x14138f39]
  406aba:	call   0x59d1:0x77ab467e
  406ac1:	or     bl,0x6d
  406ac4:	sbb    eax,0x58528163
  406ac9:	inc    edi
  406aca:	cmp    DWORD PTR [eax],esi
  406acc:	iret   
  406acd:	push   ebp
  406ace:	xchg   edi,eax
  406acf:	mov    al,ds:0x4dc4561
  406ad4:	sub    eax,0x500a7fb7
  406ad9:	push   0xfffffffd
  406adb:	or     DWORD PTR [ebp+0x3b],ecx
  406ade:	cmp    eax,DWORD PTR [eax+0x4fc22492]
  406ae4:	cmp    al,0x9f
  406ae6:	pop    es
  406ae7:	retf   
  406ae8:	gs dec ecx
  406aea:	icebp  
  406aeb:	mov    fs,edx
  406aed:	sub    al,0x8b
  406aef:	cmc    
  406af0:	int    0xf4
  406af2:	inc    edx
  406af3:	jmp    0x6945:0xc1e78e43
  406afa:	js     0x406ae5
  406afc:	push   eax
  406afd:	xlat   BYTE PTR ds:[ebx]
  406afe:	fisttp WORD PTR [edx+0x33dff44f]
  406b04:	aaa    
  406b05:	call   0x88bf:0x80af18d6
  406b0c:	sub    DWORD PTR [ecx+0x7dc3349a],ebx
  406b12:	(bad)  
  406b13:	pushw  0x2339
  406b17:	jl     0x406ae6
  406b19:	imul   edx,DWORD PTR [edi+ebx*1-0x25],0xffffffb4
  406b1e:	call   0xee6dbed2
  406b23:	lahf   
  406b24:	push   0x2fbff647
  406b29:	mov    ebp,0x5966a051
  406b2e:	adc    esi,DWORD PTR [edx-0x1ce0a3e0]
  406b34:	fisubr WORD PTR [ebp+0x17]
  406b37:	mov    edx,0x6b457b61
  406b3c:	in     eax,dx
  406b3d:	dec    ecx
  406b3e:	mov    bh,0xe2
  406b40:	test   al,0x3a
  406b42:	mov    bh,0x58
  406b44:	sbb    DWORD PTR [ecx-0x5e],ebx
  406b47:	aad    0xdb
  406b49:	jae    0x406b6b
  406b4b:	out    dx,al
  406b4c:	push   eax
  406b4d:	dec    eax
  406b4e:	sub    ch,BYTE PTR [ecx]
  406b50:	add    dh,bl
  406b52:	jae    0x406b71
  406b54:	test   al,0x34
  406b56:	jp     0x406aed
  406b58:	jae    0x406b3b
  406b5a:	add    esi,ecx
  406b5c:	(bad)  
  406b5d:	cmp    eax,0x88875646
  406b62:	jnp    0x406b1e
  406b64:	inc    ebp
  406b65:	pop    ss
  406b66:	sbb    eax,edi
  406b68:	fs or  esi,ecx
  406b6b:	test   DWORD PTR ds:0x63204ee9,ebx
  406b71:	out    dx,al
  406b72:	or     al,0x0
  406b74:	xchg   ecx,eax
  406b75:	repnz scas al,BYTE PTR es:[edi]
  406b77:	fimul  DWORD PTR [ecx-0x2e354e7d]
  406b7d:	xchg   ebx,eax
  406b7e:	mov    esi,0xaddf12c8
  406b83:	pop    ss
  406b84:	cwde   
  406b85:	add    al,0xd3
  406b87:	sbb    cl,bh
  406b89:	cmp    BYTE PTR [eax],bh
  406b8b:	lea    eax,[eax]
  406b8d:	xchg   edx,eax
  406b8e:	sbb    ebp,eax
  406b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b91:	jnp    0x406bf7
  406b93:	pushf  
  406b94:	(bad)  
  406b95:	or     DWORD PTR [ecx-0xf903835],ecx
  406b9b:	aad    0x7f
  406b9d:	test   BYTE PTR [edi+0x52],0x52
  406ba1:	test   al,0x6e
  406ba3:	mov    dh,cl
  406ba5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406ba7:	cmp    ebx,DWORD PTR [ebx-0x194dabdc]
  406bad:	xchg   edx,eax
  406bae:	sub    eax,0xee06d66
  406bb3:	int    0x2
  406bb5:	stos   BYTE PTR es:[edi],al
  406bb6:	sbb    al,0xf1
  406bb8:	jle    0x406b5e
  406bba:	ds dec edx
  406bbc:	rcl    BYTE PTR [ebx-0x1283408e],cl
  406bc2:	sub    eax,0xbdce0354
  406bc7:	call   DWORD PTR [eax-0x14]
  406bca:	push   0xffffff83
  406bcc:	jae    0x406b92
  406bce:	add    al,0xa6
  406bd0:	mov    eax,0x2369e759
  406bd5:	xchg   edx,eax
  406bd6:	and    ah,cl
  406bd8:	add    al,dl
  406bda:	pop    ebx
  406bdb:	pop    esi
  406bdc:	mov    bl,0x16
  406bde:	mov    ?,WORD PTR [eax+0x1cc49b90]
  406be4:	push   ss
  406be5:	jne    0x406bbf
  406be7:	push   es
  406be8:	adc    DWORD PTR [ecx],ebx
  406bea:	sub    eax,DWORD PTR [ebx+0xf1a8d7b]
  406bf0:	sub    eax,0xb5ea9a01
  406bf5:	add    edx,esi
  406bf7:	sbb    ebx,edx
  406bf9:	mov    eax,ds:0xb9f36c33
  406bfe:	mov    ch,ah
  406c00:	mov    edx,0x8d0ef0ab
  406c05:	fs outs dx,BYTE PTR cs:[esi]
  406c08:	mov    al,ds:0xad37553d
  406c0d:	push   ebx
  406c0e:	(bad)  
  406c0f:	mov    ebx,0x1ff7cc09
  406c14:	push   ss
  406c15:	int3   
  406c16:	mov    al,ds:0xe3e156e5
  406c1b:	rcl    BYTE PTR [esi+0x39b1016a],0xa3
  406c22:	lock mov dh,0x73
  406c25:	popa   
  406c26:	xchg   edi,eax
  406c27:	or     esp,DWORD PTR [edx-0x15d8a064]
  406c2d:	into   
  406c2e:	fld    TBYTE PTR [ecx+0x51f2b25b]
  406c34:	xor    eax,DWORD PTR [edx]
  406c36:	adc    edi,DWORD PTR [eax+ebx*4-0x1a]
  406c3a:	xor    DWORD PTR [eax+0x1a6cb658],0x95b90964
  406c44:	jae    0x406cb7
  406c46:	ins    DWORD PTR es:[edi],dx
  406c47:	inc    edx
  406c48:	fdivr  st(0),st
  406c4a:	and    al,0x9
  406c4c:	in     eax,0x61
  406c4e:	loopne 0x406c6a
  406c50:	cmp    DWORD PTR [esi+0x1dbf200b],ebp
  406c56:	retf   
  406c57:	scas   eax,DWORD PTR es:[edi]
  406c58:	sub    DWORD PTR [esi],ecx
  406c5a:	pop    edi
  406c5b:	pop    ecx
  406c5c:	lods   eax,DWORD PTR ds:[esi]
  406c5d:	mov    esp,0x9488d459
  406c62:	in     al,dx
  406c63:	dec    eax
  406c64:	push   ecx
  406c65:	(bad)  
  406c67:	push   es
  406c68:	cmp    al,0x6d
  406c6a:	(bad)  
  406c6b:	ret    
  406c6c:	mov    WORD PTR [edx+0x20],cs
  406c6f:	jo     0x406ca1
  406c71:	in     eax,0x9c
  406c73:	inc    ecx
  406c74:	dec    ecx
  406c75:	mov    dl,0x91
  406c77:	push   esp
  406c78:	jo     0x406c1c
  406c7a:	xchg   esi,eax
  406c7b:	loope  0x406cad
  406c7d:	push   es
  406c7e:	cld    
  406c7f:	pop    eax
  406c80:	cmc    
  406c81:	js     0x406c09
  406c83:	xchg   ecx,ebp
  406c85:	sub    al,0xd2
  406c87:	pop    ds
  406c88:	ja     0x406c97
  406c8a:	and    DWORD PTR [eax-0x48],esi
  406c8d:	add    BYTE PTR [ecx+0x53],dh
  406c90:	inc    edx
  406c91:	sti    
  406c92:	pop    ss
  406c93:	cld    
  406c94:	push   eax
  406c95:	stc    
  406c96:	mov    ?,WORD PTR [esi+0x12]
  406c99:	dec    DWORD PTR [ecx]
  406c9b:	(bad)  
  406c9c:	out    0xbe,al
  406c9e:	fcom   DWORD PTR [ebp+0x4]
  406ca1:	xchg   esp,eax
  406ca2:	sub    ebp,DWORD PTR [edx+eiz*2+0x19]
  406ca6:	fiadd  DWORD PTR [ecx]
  406ca8:	mov    eax,ds:0x7fe1c1aa
  406cad:	jo     0x406cc1
  406caf:	sbb    eax,0x84c4a63e
  406cb4:	ror    BYTE PTR [ecx-0x5b],1
  406cb7:	xchg   edi,eax
  406cb8:	inc    esi
  406cb9:	and    eax,0xee40924
  406cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbf:	add    DWORD PTR [edi],esp
  406cc1:	ins    DWORD PTR es:[edi],dx
  406cc2:	stos   BYTE PTR es:[edi],al
  406cc3:	inc    ecx
  406cc4:	out    0xd6,al
  406cc6:	sub    ecx,DWORD PTR [ebx+0x4f]
  406cc9:	jmp    0x406cf9
  406ccb:	push   ds
  406ccc:	nop
  406ccd:	cmp    eax,0xfd99575b
  406cd2:	scas   al,BYTE PTR es:[edi]
  406cd3:	jmp    0xc7d4:0x33e52573
  406cda:	cmp    bl,BYTE PTR [ecx]
  406cdc:	inc    ebp
  406cdd:	mov    al,0xc1
  406cdf:	ins    DWORD PTR es:[edi],dx
  406ce0:	ss mov eax,0x88254c92
  406ce6:	rol    ah,1
  406ce8:	push   esp
  406ce9:	push   0xffffffcf
  406ceb:	jae    0x406d41
  406ced:	dec    ecx
  406cee:	pop    eax
  406cef:	cmp    ecx,DWORD PTR [esi+edx*4+0x5dd63625]
  406cf6:	jmp    0x406cc8
  406cf8:	mov    dh,0xdb
  406cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cfb:	call   0x85a2f7d6
  406d00:	jge    0x406d56
  406d02:	mov    dl,0xa1
  406d04:	ret    0xd252
  406d07:	pop    edi
  406d08:	fs push esp
  406d0a:	sbb    cl,BYTE PTR [eax]
  406d0c:	lock mov ds:0x6b455386,al
  406d12:	push   0x29
  406d14:	gs in  al,dx
  406d16:	std    
  406d17:	aas    
  406d18:	les    ebp,FWORD PTR [eax+0x54]
  406d1b:	xchg   ecx,eax
  406d1c:	sub    eax,0x44b4261d
  406d21:	sub    al,BYTE PTR [eax-0x2ddde06b]
  406d27:	popa   
  406d28:	out    dx,al
  406d29:	outs   dx,BYTE PTR ds:[esi]
  406d2a:	aas    
  406d2b:	mov    al,ds:0x4f24bf17
  406d30:	lods   eax,DWORD PTR ds:[esi]
  406d31:	ja     0x406d42
  406d33:	inc    ebp
  406d34:	test   al,0x7d
  406d36:	mov    dh,0x23
  406d38:	sbb    esi,DWORD PTR [ecx-0x21817797]
  406d3e:	and    cl,cl
  406d40:	ins    BYTE PTR es:[edi],dx
  406d41:	xor    al,0x98
  406d43:	mov    edi,0x455e99b2
  406d48:	ins    BYTE PTR es:[edi],dx
  406d49:	sahf   
  406d4a:	mov    esp,0x7ccce3b
  406d4f:	pxor   mm7,QWORD PTR [ebp-0xe]
  406d53:	jl     0x406da2
  406d55:	pop    edx
  406d56:	retf   
  406d57:	mov    bh,0x1d
  406d59:	shl    DWORD PTR [edi],0xb9
  406d5c:	leave  
  406d5d:	test   al,0x8d
  406d5f:	jmp    0x406d1d
  406d61:	adc    al,bl
  406d63:	sti    
  406d64:	push   ecx
  406d65:	lods   eax,DWORD PTR ds:[esi]
  406d66:	push   edi
  406d67:	mov    bh,0xcd
  406d69:	xchg   DWORD PTR [ebx-0x5d],esp
  406d6c:	mov    bh,BYTE PTR [esi+ebp*2-0x5a]
  406d70:	(bad)  
  406d71:	gs and al,0xc
  406d74:	and    eax,ebx
  406d76:	repz inc ecx
  406d78:	xlat   BYTE PTR ds:[ebx]
  406d79:	mov    bl,0x23
  406d7b:	mov    al,ds:0xcc95fe17
  406d80:	adc    al,0xe3
  406d82:	fnsave [edi-0x9]
  406d85:	in     al,dx
  406d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d87:	loop   0x406d79
  406d89:	mov    ah,0x29
  406d8b:	call   0xecf7d7f1
  406d90:	int3   
  406d91:	jae    0x406dc8
  406d93:	inc    edx
  406d94:	jns    0x406d3f
  406d96:	xchg   BYTE PTR [edi+0x33],dh
  406d99:	inc    edx
  406d9a:	(bad)  
  406d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9c:	jne    0x406d67
  406d9e:	rcl    DWORD PTR [esi],0xb7
  406da1:	and    eax,0x9c508214
  406da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da7:	cs cmc 
  406da9:	lea    ecx,[edx]
  406dab:	jg     0x406dfd
  406dad:	and    eax,0x5f1321a
  406db2:	addr16 cmp al,0xe
  406db5:	pushf  
  406db6:	jns    0x406dce
  406db8:	push   cs
  406db9:	fisub  DWORD PTR [edx+0x5739064c]
  406dbf:	sbb    esp,DWORD PTR [edi]
  406dc1:	sbb    DWORD PTR [ebx+0x3a5082da],0x5a53cb2
  406dcb:	imul   DWORD PTR ds:0x4803be55
  406dd1:	mov    esi,DWORD PTR [eax-0x6db933ff]
  406dd7:	mov    ebx,0xcd4d4c3e
  406ddc:	push   ebp
  406ddd:	dec    eax
  406dde:	call   0x5453:0x34fef38f
  406de5:	inc    ebx
  406de6:	fild   QWORD PTR [edi+eax*8+0x36]
  406dea:	(bad)  
  406deb:	mov    ds,WORD PTR [esi-0x304a55db]
  406df1:	or     BYTE PTR ds:0x93db10fd,0x3d
  406df8:	pop    ebp
  406df9:	and    dl,BYTE PTR [ecx+0x8]
  406dfc:	mov    eax,ds:0x454693c3
  406e01:	xor    eax,0x19945472
  406e06:	and    BYTE PTR [eax-0x35],cl
  406e09:	loop   0x406dd5
  406e0b:	popa   
  406e0c:	pop    ecx
  406e0d:	sbb    DWORD PTR [ebp+0x6d],edx
  406e10:	(bad)  
  406e11:	or     bh,BYTE PTR [edi]
  406e13:	or     al,0x5c
  406e15:	sbb    bl,BYTE PTR [ebx]
  406e17:	and    bl,dl
  406e19:	xchg   di,ax
  406e1c:	inc    esp
  406e1d:	fisubr DWORD PTR [ebx]
  406e1f:	sbb    al,0x63
  406e21:	fistp  DWORD PTR [ecx]
  406e23:	jg     0x406e0b
  406e25:	adc    al,0xe0
  406e27:	jle    0x406dbe
  406e29:	add    bl,cl
  406e2b:	out    dx,eax
  406e2c:	loop   0x406dbd
  406e2e:	stos   BYTE PTR es:[edi],al
  406e2f:	pop    ebx
  406e30:	pop    eax
  406e31:	mov    ch,0xef
  406e33:	es sub al,0xd3
  406e36:	ds xor bh,ch
  406e39:	sbb    al,0x4d
  406e3b:	call   0xedc3:0x4d6ea6fc
  406e42:	sbb    ch,BYTE PTR [edx+0x2e]
  406e45:	shl    BYTE PTR [eax],1
  406e47:	adc    eax,0x95c21951
  406e4c:	or     edi,DWORD PTR [eax-0x47]
  406e4f:	sbb    esp,DWORD PTR [ecx+0x73cbdb54]
  406e55:	xchg   ecx,eax
  406e56:	ins    BYTE PTR es:[edi],dx
  406e57:	(bad)
  406e5b:	ss push eax
  406e5d:	mov    ebp,0x496895d
  406e62:	ja     0x406e33
  406e64:	xor    ebx,DWORD PTR [edx]
  406e66:	jmp    0x406e8e
  406e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e69:	pop    ds
  406e6a:	push   esi
  406e6b:	mov    ecx,0x384f274d
  406e70:	dec    ebx
  406e71:	ins    DWORD PTR es:[edi],dx
  406e72:	add    ah,ch
  406e74:	push   eax
  406e75:	jp     0x406eaa
  406e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e78:	call   0x14f775c2
  406e7d:	test   BYTE PTR [eax+0x57ed156d],ah
  406e83:	dec    eax
  406e84:	add    eax,0x62d2a07c
  406e89:	imul   edi,esp,0xa7ddac2d
  406e8f:	or     DWORD PTR [ebp-0x67],ebx
  406e92:	and    BYTE PTR ds:0xe8f49b28,0x78
  406e99:	mov    edx,0xfbe09590
  406e9e:	sub    cl,BYTE PTR ds:0xd16c07e4
  406ea4:	and    BYTE PTR [esi+0x11d0ca66],dh
  406eaa:	iret   
  406eab:	jecxz  0x406ec0
  406ead:	icebp  
  406eae:	sub    ebp,DWORD PTR [ecx-0x39c2e299]
  406eb4:	inc    ebp
  406eb5:	sbb    DWORD PTR [esi+ebx*1-0x17],ecx
  406eb9:	mov    DWORD PTR [ecx+0x13],ebp
  406ebc:	push   edi
  406ebd:	ret    0x4698
  406ec0:	jnp    0x406f2d
  406ec2:	mov    ah,0x8a
  406ec4:	or     ch,BYTE PTR ds:0xcaf6ddc4
  406eca:	icebp  
  406ecb:	sahf   
  406ecc:	cmp    edi,edi
  406ece:	xchg   DWORD PTR [ebx+0x3cd887e9],edi
  406ed4:	inc    ebp
  406ed5:	xchg   esi,eax
  406ed6:	add    al,0xfc
  406ed8:	shr    BYTE PTR ds:0x8669c17c,1
  406ede:	popf   
  406edf:	sbb    al,0x17
  406ee1:	sbb    eax,0x82e75ee8
  406ee6:	pop    esi
  406ee7:	add    ebp,DWORD PTR [esi]
  406ee9:	mov    eax,ds:0xf6b750a4
  406eee:	ds gs ins BYTE PTR es:[edi],dx
  406ef1:	ror    BYTE PTR [edx+0x7d],1
  406ef4:	fmul   DWORD PTR [edi-0x78]
  406ef7:	add    bl,BYTE PTR [ecx-0x2f7ff44]
  406efd:	iret   
  406efe:	inc    ebx
  406eff:	fistp  DWORD PTR [esi+edi*1+0x51]
  406f03:	xlat   BYTE PTR ds:[ebx]
  406f04:	clc    
  406f05:	ss mov bh,0x15
  406f08:	loopne 0x406edf
  406f0a:	cmp    ah,0x56
  406f0d:	jno    0x406eac
  406f0f:	stos   DWORD PTR es:[edi],eax
  406f10:	xor    al,0xc9
  406f12:	pusha  
  406f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f14:	cmp    edi,DWORD PTR [ecx]
  406f16:	inc    ebp
  406f17:	jns    0x406f39
  406f19:	xchg   ebx,eax
  406f1a:	pop    ebx
  406f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f1c:	rcl    BYTE PTR [ebp+0x17],1
  406f1f:	jle    0x406f3b
  406f21:	mov    edx,0x17fb8b27
  406f26:	sbb    ch,BYTE PTR [ecx-0x5d]
  406f29:	sub    ch,BYTE PTR [ebx*4+0x1e134f3e]
  406f30:	or     DWORD PTR [edi-0x6b],esp
  406f33:	stos   DWORD PTR es:[edi],eax
  406f34:	call   0xa4105143
  406f39:	rol    BYTE PTR [esi+0x46],0xd3
  406f3d:	clc    
  406f3e:	inc    edi
  406f3f:	mov    ds:0x58a922fc,eax
  406f44:	mov    edx,0x8d857c8a
  406f49:	mov    ebx,edx
  406f4b:	retf   0xfedf
  406f4e:	push   edx
  406f4f:	imul   ecx,DWORD PTR [ebp-0xe241bef],0xffffffc2
  406f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f57:	psubw  mm3,QWORD PTR ds:0xb4e5b206
  406f5e:	sti    
  406f5f:	add    al,0x6c
  406f61:	out    0x7d,al
  406f63:	int    0x8
  406f65:	lahf   
  406f66:	shl    BYTE PTR [edi-0x38],cl
  406f69:	(bad)  
  406f6a:	rcl    ecx,1
  406f6c:	std    
  406f6d:	or     edi,eax
  406f6f:	loopne 0x406f04
  406f71:	push   es
  406f72:	adc    ebp,ecx
  406f74:	jnp    0x406fdd
  406f76:	psrlw  mm4,QWORD PTR [esi-0x5d]
  406f7a:	bound  edx,QWORD PTR [esi+0x44536326]
  406f80:	stos   BYTE PTR es:[edi],al
  406f81:	adc    dl,BYTE PTR [ebp+0x74dc6eb5]
  406f87:	mov    al,dh
  406f89:	mov    ecx,0xcb04b122
  406f8e:	div    BYTE PTR [esi+0x5b]
  406f91:	out    0x62,eax
  406f93:	out    dx,al
  406f94:	repnz mov dl,0x9f
  406f97:	sub    al,0x17
  406f99:	cmp    DWORD PTR [eax],edi
  406f9b:	push   0xffffffd2
  406f9d:	stc    
  406f9e:	bound  eax,QWORD PTR [edx+esi*4-0x68]
  406fa2:	add    al,0x9d
  406fa4:	lds    ebp,FWORD PTR [ecx-0x1e2c30e2]
  406faa:	sti    
  406fab:	xor    eax,0x4fafef25
  406fb0:	rol    BYTE PTR [ebx+0x2],1
  406fb3:	outs   dx,DWORD PTR ds:[esi]
  406fb4:	pushf  
  406fb5:	aaa    
  406fb6:	mov    ?,WORD PTR [edx+edx*8+0x2e05811b]
  406fbd:	into   
  406fbe:	loop   0x406f9f
  406fc0:	mov    bh,0xcd
  406fc2:	cli    
  406fc3:	out    dx,al
  406fc4:	shr    DWORD PTR ds:0x9e4bcd9c,0x6
  406fcb:	pop    edi
  406fcc:	in     eax,dx
  406fcd:	sahf   
  406fce:	cmp    ebp,DWORD PTR [edi+0x7febaa91]
  406fd4:	test   BYTE PTR [edi-0x41],cl
  406fd7:	imul   ebx,DWORD PTR [eax],0x5ed640fb
  406fdd:	push   0x6d8efc70
  406fe2:	int3   
  406fe3:	push   0xffffffb5
  406fe5:	mov    DWORD PTR [esi],esi
  406fe7:	outs   dx,DWORD PTR ds:[esi]
  406fe8:	push   ss
  406fe9:	outs   dx,DWORD PTR ds:[esi]
  406fea:	dec    edx
  406feb:	push   eax
  406fec:	ret    
  406fed:	stc    
  406fee:	mov    dl,ch
  406ff0:	outs   dx,DWORD PTR ds:[esi]
  406ff1:	jp     0x406fb3
  406ff3:	pop    esi
  406ff4:	add    ebp,edi
  406ff6:	inc    ebp
  406ff7:	call   0x64d7:0xbbe2de00
  406ffe:	test   BYTE PTR [ebx-0x5ed901db],bh
  407004:	lods   al,BYTE PTR ds:[esi]
  407005:	or     edx,DWORD PTR [eax]
  407007:	jnp    0x406ff4
  407009:	and    BYTE PTR [ecx-0x47d9a3a4],dl
  40700f:	fwait
  407010:	mov    ecx,0x11915341
  407015:	dec    ebp
  407016:	aaa    
  407017:	test   DWORD PTR [eax-0x2f7ae5ee],ecx
  40701d:	fsub   DWORD PTR [edi+0x7]
  407020:	test   eax,0x85eb0c58
  407025:	test   BYTE PTR [edi],bh
  407027:	test   eax,0x505d699a
  40702c:	hlt    
  40702d:	inc    edi
  40702e:	in     eax,dx
  40702f:	(bad)  
  407030:	pop    ecx
  407031:	in     al,dx
  407032:	pop    edx
  407033:	sub    edx,DWORD PTR [edi+edx*2-0x16]
  407037:	call   0xa179:0x99a69a12
  40703e:	out    dx,al
  40703f:	mov    dh,0x78
  407041:	test   eax,0x4c7082e3
  407046:	fwait
  407047:	mov    ds,WORD PTR [esi]
  407049:	in     al,0x9c
  40704b:	pop    DWORD PTR [ecx-0x1083465b]
  407051:	sbb    BYTE PTR [ebx+0x18],bh
  407054:	xor    al,0x5a
  407056:	pop    edx
  407057:	test   al,0x35
  407059:	or     dh,bl
  40705b:	jo     0x407069
  40705d:	imul   BYTE PTR [edi+0x2af25f88]
  407063:	pop    ecx
  407064:	sar    BYTE PTR [ecx-0x16],0xd4
  407068:	out    0xe9,al
  40706a:	xchg   ecx,eax
  40706b:	loope  0x4070c4
  40706d:	popa   
  40706e:	sbb    al,0x79
  407070:	mov    WORD PTR [edi+0x2b927e9f],es
  407076:	pop    edi
  407077:	sar    DWORD PTR [eax],cl
  407079:	loopne 0x4070ce
  40707b:	mov    al,0x7c
  40707d:	pop    edx
  40707e:	ficom  DWORD PTR [ebx-0x2b808e16]
  407084:	jg     0x40700f
  407086:	mov    BYTE PTR [edi],ah
  407088:	int3   
  407089:	test   ebp,esp
  40708b:	shl    DWORD PTR [ebx],cl
  40708d:	and    eax,0xaac59f0d
  407092:	pop    edx
  407093:	add    bh,BYTE PTR [eax+0x52be5919]
  407099:	outs   dx,DWORD PTR ds:[esi]
  40709a:	xchg   BYTE PTR [si],dl
  40709d:	cld    
  40709e:	fwait
  40709f:	(bad)  
  4070a0:	pop    ecx
  4070a1:	icebp  
  4070a2:	sbb    BYTE PTR [ebp-0x4bc0d51f],cl
  4070a8:	pop    ecx
  4070a9:	or     dh,al
  4070ab:	push   esp
  4070ac:	in     eax,dx
  4070ad:	lods   al,BYTE PTR ds:[esi]
  4070ae:	cmp    BYTE PTR gs:[ebx],bh
  4070b1:	or     eax,0xff01b83a
  4070b6:	xchg   ebx,eax
  4070b7:	jmp    0x80cc:0xc9ab5121
  4070be:	pop    edi
  4070bf:	aam    0xaf
  4070c1:	xchg   edx,eax
  4070c2:	loop   0x4070a6
  4070c4:	fwait
  4070c5:	pop    ss
  4070c6:	mov    ebx,0xdc61c236
  4070cb:	and    al,0x79
  4070cd:	hlt    
  4070ce:	dec    esi
  4070cf:	imul   ebx,edi,0xffffffa4
  4070d2:	imul   ebx,edi,0xf42d676f
  4070d8:	pop    eax
  4070d9:	or     esp,DWORD PTR [ecx]
  4070db:	cmp    edi,DWORD PTR [ebp+0x60c627e9]
  4070e1:	xchg   ebp,eax
  4070e2:	rcl    al,cl
  4070e4:	out    dx,eax
  4070e5:	out    dx,eax
  4070e6:	pushf  
  4070e7:	xchg   DWORD PTR [edx-0xc163015],eax
  4070ed:	cmp    edi,DWORD PTR [eax+0x7a6eec12]
  4070f3:	mov    cs,WORD PTR [eax]
  4070f5:	in     al,0xdc
  4070f7:	lods   al,BYTE PTR ds:[esi]
  4070f8:	pop    es
  4070f9:	sbb    eax,0xd93a2ea9
  4070fe:	xor    DWORD PTR [ecx+eiz*8-0x2f],ebx
  407102:	or     ah,BYTE PTR [ecx]
  407104:	mov    ebp,0xe6259bce
  407109:	int3   
  40710a:	aam    0x7
  40710c:	lods   eax,DWORD PTR ds:[esi]
  40710d:	or     al,0xad
  40710f:	add    ebx,DWORD PTR [ebx+0x58]
  407112:	retf   
  407113:	mov    DWORD PTR [esi-0x40],ebx
  407116:	(bad)  
  407117:	daa    
  407118:	fistp  QWORD PTR ds:0x546f0c15
  40711e:	ss mov ebx,0xc42b91ae
  407124:	cwde   
  407125:	clc    
  407126:	and    DWORD PTR [ecx-0x7e0762bc],edi
  40712c:	fidiv  WORD PTR [ebp-0x8]
  40712f:	mov    ds:0xdee53fa7,eax
  407134:	inc    edi
  407135:	fisttp QWORD PTR [ecx]
  407137:	sbb    DWORD PTR [edx+edi*2],0xd77f0944
  40713e:	mov    ds:0xf7d7665,eax
  407143:	sub    esi,DWORD PTR [edi+0x53]
  407146:	inc    esp
  407147:	xchg   ecx,eax
  407148:	push   esi
  407149:	stc    
  40714a:	aaa    
  40714b:	test   al,0xe2
  40714d:	fnstenv ds:0x8a727a36
  407153:	jmp    0xbba4925c
  407158:	jle    0x4071b9
  40715a:	stc    
  40715b:	gs repnz in al,dx
  40715e:	xor    BYTE PTR [ebx-0x3a70be70],dh
  407164:	adc    DWORD PTR [ecx-0x61215fa8],0x26d4cc3d
  40716e:	and    eax,DWORD PTR [edi+0x640c21a2]
  407174:	add    ebp,DWORD PTR [eax+0xab2f8e1]
  40717a:	cmp    DWORD PTR [ebp+0x6],0x3c3b905e
  407181:	sub    ch,bl
  407183:	sbb    bl,BYTE PTR [ebx+eiz*8-0x5e]
  407187:	ja     0x407198
  407189:	adc    bl,BYTE PTR [edx]
  40718b:	adc    cl,BYTE PTR [ecx-0x44bea253]
  407191:	mov    ebx,?
  407193:	retf   0xefcc
  407196:	xchg   ebx,eax
  407197:	and    ebp,eax
  407199:	mov    edi,0x99765540
  40719e:	outs   dx,DWORD PTR ds:[esi]
  40719f:	fsub   st(3),st
  4071a1:	dec    eax
  4071a2:	dec    esi
  4071a3:	cmp    DWORD PTR [ebx],edx
  4071a5:	adc    BYTE PTR [ecx-0x1c5cfd7e],al
  4071ab:	out    0xf9,eax
  4071ad:	loope  0x4071f6
  4071af:	in     al,0x57
  4071b1:	inc    edx
  4071b2:	xor    DWORD PTR [ebx+0x4fea7363],ebp
  4071b8:	xor    al,0x33
  4071ba:	dec    edi
  4071bb:	adc    eax,0xaa9aadfa
  4071c0:	arpl   WORD PTR [edx+0x7403bf40],sp
  4071c6:	popa   
  4071c7:	test   al,0xe7
  4071c9:	mov    ebx,0x305ff44f
  4071ce:	jne    0x407169
  4071d0:	and    BYTE PTR [esi],bl
  4071d2:	mov    gs,WORD PTR [si]
  4071d5:	xlat   BYTE PTR ds:[ebx]
  4071d6:	push   ss
  4071d7:	rol    ah,cl
  4071d9:	in     eax,0xc8
  4071db:	ret    
  4071dc:	jno    0x407201
  4071de:	mov    ebp,0x66869621
  4071e3:	das    
  4071e4:	stc    
  4071e5:	jmp    0x66bae6a
  4071ea:	(bad)  
  4071eb:	test   al,0x66
  4071ed:	sub    DWORD PTR [ecx+0x2a],edx
  4071f0:	push   0x405d12c8
  4071f5:	les    ebp,FWORD PTR [eax+0x4e]
  4071f8:	cwde   
  4071f9:	(bad)  
  4071fa:	xchg   esp,eax
  4071fb:	repz int 0x8a
  4071fe:	pop    ss
  4071ff:	mov    bl,0x71
  407201:	fs jne 0x407229
  407204:	add    DWORD PTR [edi-0x50],0xee443f2e
  40720b:	ss add eax,0x484cb4cf
  407211:	or     ah,BYTE PTR [esi+0x50fc3147]
  407217:	stc    
  407218:	(bad)  
  407219:	ficomp DWORD PTR [ebx-0x7]
  40721c:	mov    esp,0x1baff910
  407221:	out    0x4b,al
  407223:	and    eax,0x284f68dc
  407228:	ins    DWORD PTR es:[edi],dx
  407229:	es std 
  40722b:	push   esp
  40722c:	rol    bh,0x4c
  40722f:	ins    BYTE PTR es:[edi],dx
  407230:	xchg   edx,eax
  407231:	adc    bh,BYTE PTR [esi+0x76]
  407234:	arpl   WORD PTR [esi-0xc8c483],cx
  40723a:	push   DWORD PTR [ebx]
  40723c:	lock pushf 
  40723e:	sar    BYTE PTR [esi],cl
  407240:	cs jmp 0x757d3549
  407246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407247:	mov    dh,0x8b
  407249:	popa   
  40724a:	jl     0x4071f2
  40724c:	dec    esi
  40724d:	loope  0x4071ff
  40724f:	or     cl,BYTE PTR [ecx]
  407251:	cmp    eax,0x2401acce
  407256:	aas    
  407257:	or     BYTE PTR [esi+esi*2+0x4e],ah
  40725b:	mul    DWORD PTR [bp+si+0x66]
  40725f:	mov    cl,0xbf
  407261:	lods   eax,DWORD PTR ds:[esi]
  407262:	fimul  DWORD PTR [ebp+0x2c]
  407265:	xor    DWORD PTR [esi-0x50a033cd],esp
  40726b:	jno    0x407235
  40726d:	inc    esi
  40726e:	test   eax,0xe70f702d
  407273:	cmp    al,0x93
  407275:	cmp    esp,esp
  407277:	and    ecx,DWORD PTR [ecx]
  407279:	clc    
  40727a:	and    ebx,DWORD PTR [edi]
  40727c:	ror    DWORD PTR [edi],0xc3
  40727f:	jmp    0x4072d5
  407281:	inc    eax
  407282:	push   ebx
  407283:	add    al,0xd5
  407285:	push   edi
  407286:	out    0x24,al
  407288:	out    0x12,al
  40728a:	imul   ecx,DWORD PTR [edi+ebx*2+0x3f],0xffffff92
  40728f:	and    al,0x22
  407291:	adc    DWORD PTR [eax+0x55],0xffe34176
  407298:	arpl   ax,bp
  40729a:	xor    cl,BYTE PTR [edi]
  40729c:	stos   DWORD PTR es:[edi],eax
  40729d:	leave  
  40729e:	jle    0x407224
  4072a0:	jecxz  0x407319
  4072a2:	test   BYTE PTR [eax+0x6a],dl
  4072a5:	jns    0x4072aa
  4072a7:	arpl   WORD PTR [edi-0x377084d1],cx
  4072ad:	fdiv   DWORD PTR [eax]
  4072af:	daa    
  4072b0:	push   ds
  4072b1:	mov    bl,0x4c
  4072b3:	pop    edi
  4072b4:	cmp    DWORD PTR [edi],edi
  4072b6:	pop    ss
  4072b7:	std    
  4072b8:	outs   dx,DWORD PTR ds:[esi]
  4072b9:	(bad)  
  4072ba:	ds (bad) 
  4072bd:	cmp    ecx,DWORD PTR [edi-0x77]
  4072c0:	jbe    0x407304
  4072c2:	je     0x4072f7
  4072c4:	test   eax,0xa41650b9
  4072c9:	outs   dx,DWORD PTR ds:[esi]
  4072ca:	xchg   esi,eax
  4072cb:	(bad)  [di+0x67]
  4072cf:	xor    BYTE PTR [eax],ch
  4072d1:	mov    edx,0x6f071a88
  4072d6:	std    
  4072d7:	pop    edx
  4072d8:	sti    
  4072d9:	sbb    DWORD PTR [edx+0x1bd2230f],ebp
  4072df:	pop    esi
  4072e0:	jo     0x4072ce
  4072e2:	leave  
  4072e3:	adc    edx,DWORD PTR [edx+0x684a7854]
  4072e9:	push   ds
  4072ea:	mov    cl,0xec
  4072ec:	aaa    
  4072ed:	push   edx
  4072ee:	enter  0xb9af,0xf2
  4072f2:	sub    eax,0xb44c7d2d
  4072f7:	jmp    0x4072a8
  4072f9:	jns    0x4072e5
  4072fb:	mov    ebp,0xf56952fe
  407300:	and    eax,0x56379c16
  407305:	out    0xaf,eax
  407307:	sub    al,0xf9
  407309:	test   al,0xe6
  40730b:	add    al,0xbf
  40730d:	test   esp,0xe8928972
  407313:	mov    ebp,0xa3939a0e
  407318:	lahf   
  407319:	(bad)  
  40731a:	adc    edx,DWORD PTR [ecx-0x5b]
  40731d:	outs   dx,DWORD PTR ds:[esi]
  40731e:	icebp  
  40731f:	jno    0x407380
  407321:	aam    0x43
  407323:	stos   DWORD PTR es:[edi],eax
  407324:	int3   
  407325:	push   ecx
  407326:	ja     0x40736a
  407328:	js     0x407330
  40732a:	add    eax,0x9fbdf14b
  40732f:	xor    bh,BYTE PTR [ebx]
  407331:	iret   
  407332:	stc    
  407333:	shl    DWORD PTR [ecx-0x4e89154a],1
  407339:	je     0x407363
  40733b:	retf   
  40733c:	clc    
  40733d:	pop    eax
  40733e:	xor    DWORD PTR [ebp+0x5b],ecx
  407341:	cli    
  407342:	(bad)  
  407343:	fstp   TBYTE PTR [ebx-0x63b51416]
  407349:	push   esp
  40734a:	ret    0x7300
  40734d:	leave  
  40734e:	pop    edi
  40734f:	test   al,0xa1
  407351:	scas   al,BYTE PTR es:[edi]
  407352:	mov    ds:0xc102d1b2,eax
  407357:	ds mov ch,0xe8
  40735a:	out    0xb9,al
  40735c:	adc    bl,BYTE PTR [esi+0x3218cb1]
  407362:	fucom  st(0)
  407364:	mov    eax,0x701a9060
  407369:	js     0x407334
  40736b:	(bad)  
  40736c:	(bad)  [ebx-0x53]
  40736f:	popa   
  407370:	mov    cl,0x49
  407372:	inc    esp
  407373:	dec    edx
  407374:	js     0x40731a
  407376:	outs   dx,BYTE PTR ds:[esi]
  407377:	dec    ebx
  407378:	push   edx
  407379:	out    dx,al
  40737a:	bound  ebp,QWORD PTR [esi-0x6e972aaf]
  407380:	xor    BYTE PTR [esi],al
  407382:	xchg   esi,eax
  407383:	push   ecx
  407384:	xchg   esp,eax
  407385:	xor    eax,0x8dc5f767
  40738a:	lock mov dl,bh
  40738d:	xchg   BYTE PTR [ebp-0x15],ah
  407390:	jmp    0xe803:0xe52d2954
  407397:	xor    bl,BYTE PTR [edx+edx*2+0x1f1187d2]
  40739e:	dec    ecx
  40739f:	adc    edx,DWORD PTR [ebx]
  4073a1:	mov    dl,0x78
  4073a3:	or     BYTE PTR [ecx-0x44],dl
  4073a6:	jmp    0x407405
  4073a8:	dec    esp
  4073a9:	into   
  4073aa:	icebp  
  4073ab:	mov    ebp,DWORD PTR [edx-0x6eacfacd]
  4073b1:	push   ss
  4073b2:	inc    ebx
  4073b3:	inc    eax
  4073b4:	retf   0xcd86
  4073b7:	pop    es
  4073b8:	pop    ecx
  4073b9:	sub    DWORD PTR [ebx+ebx*1+0x58dbb197],eax
  4073c0:	inc    edi
  4073c1:	js     0x40738f
  4073c3:	inc    ebx
  4073c4:	jo     0x4073b4
  4073c6:	mov    DWORD PTR [ebx],ecx
  4073c8:	das    
  4073c9:	dec    ecx
  4073ca:	(bad)  
  4073cb:	cli    
  4073cc:	sub    eax,ecx
  4073ce:	in     al,dx
  4073cf:	inc    ebx
  4073d0:	jb     0x4073b7
  4073d2:	push   0xffffff80
  4073d4:	sub    DWORD PTR [eax],esi
  4073d6:	dec    edi
  4073d7:	icebp  
  4073d8:	fs das 
  4073da:	bound  edx,QWORD PTR [eax+0x4e]
  4073dd:	mov    ah,0x98
  4073df:	cld    
  4073e0:	test   DWORD PTR [esi],ecx
  4073e2:	jo     0x407426
  4073e4:	xor    edx,DWORD PTR [ecx+0x7c33ae10]
  4073ea:	pop    ebx
  4073eb:	imul   edx,DWORD PTR [edi],0x2cfb1dd
  4073f1:	mov    BYTE PTR [edi+0x4e],ah
  4073f4:	pop    ebx
  4073f5:	add    BYTE PTR cs:[ecx+0x68],ah
  4073f9:	retf   
  4073fa:	dec    ebx
  4073fb:	mov    edx,0x6614fc39
  407400:	inc    esp
  407401:	mov    edi,DWORD PTR [edx+0x5e21a40b]
  407407:	clc    
  407408:	imul   ecx,DWORD PTR [ebx+0x45],0xffffffd3
  40740c:	lahf   
  40740d:	mov    ds:0x89d55598,al
  407412:	push   esi
  407413:	pop    esp
  407414:	jbe    0xf04cdc0
  40741a:	cwde   
  40741b:	push   edi
  40741c:	mov    ch,0x67
  40741e:	mov    ebp,0xaf90a1cb
  407423:	mov    esp,0x15359a9a
  407428:	xor    al,0x4c
  40742a:	fdivrp st(6),st
  40742c:	push   cs
  40742d:	lea    ecx,[ecx+0x4ea6d22f]
  407433:	leave  
  407434:	call   0xf895fc93
  407439:	in     al,dx
  40743a:	mul    DWORD PTR [di]
  40743d:	push   0x1ac08922
  407442:	ja     0x4074be
  407444:	inc    esi
  407445:	sub    ch,BYTE PTR cs:[edx+0x47cf3356]
  40744c:	(bad)  
  40744d:	sahf   
  40744e:	leave  
  40744f:	dec    ebp
  407450:	add    al,0xc1
  407452:	aam    0x55
  407454:	rcr    BYTE PTR [ecx+esi*8+0x594f5c59],0x60
  40745c:	cs out 0xea,eax
  40745f:	mov    bh,0xc4
  407461:	push   cs
  407462:	loope  0x407417
  407464:	push   ds
  407465:	mov    edi,0x47592ce2
  40746a:	stos   DWORD PTR es:[edi],eax
  40746b:	pushf  
  40746c:	call   0x9135:0x2c45d191
  407473:	fld    DWORD PTR [eax-0x42650b32]
  407479:	ror    DWORD PTR [ecx+0x6759b5dc],1
  40747f:	inc    edi
  407480:	mov    dl,0x10
  407482:	xor    BYTE PTR [edx+0x7c9563cc],al
  407488:	clc    
  407489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40748a:	or     al,BYTE PTR [eax+0x69157593]
  407490:	push   es
  407491:	xchg   ebx,eax
  407492:	jmp    FWORD PTR [eax+edx*8+0x5b]
  407496:	xor    DWORD PTR [ebx-0x65],esp
  407499:	cmp    DWORD PTR [ebx-0x17e7a657],ebx
  40749f:	mov    edi,ecx
  4074a1:	inc    ebp
  4074a2:	fisubr DWORD PTR ds:0xc2c2e9af
  4074a8:	mov    BYTE PTR ds:0x5998e0c8,ah
  4074ae:	stos   DWORD PTR es:[edi],eax
  4074af:	or     eax,0xd456eb36
  4074b4:	cmp    al,0xac
  4074b6:	int    0x7f
  4074b8:	xor    ecx,DWORD PTR [edi]
  4074ba:	push   es
  4074bb:	cs sub al,0xa4
  4074be:	mov    edi,0xbd6c778a
  4074c3:	ds inc ecx
  4074c5:	cmp    DWORD PTR ds:0xf2d62f4f,esp
  4074cb:	les    ecx,FWORD PTR [edx]
  4074cd:	mov    eax,0xc93b6645
  4074d2:	push   esp
  4074d3:	fstp   st(5)
  4074d5:	pop    es
  4074d6:	je     0x407469
  4074d8:	fld    TBYTE PTR [edi+0xa6cfb4c]
  4074de:	dec    ebp
  4074df:	dec    esp
  4074e0:	dec    edi
  4074e1:	out    0x7c,eax
  4074e3:	(bad)  
  4074e4:	fnsave [edx]
  4074e6:	pop    ebp
  4074e7:	adc    BYTE PTR [eax+0x21419c96],al
  4074ed:	scas   al,BYTE PTR es:[edi]
  4074ee:	(bad)  
  4074ef:	int    0x6f
  4074f1:	push   ebp
  4074f2:	shl    DWORD PTR [edi-0x3feb969a],cl
  4074f8:	jge    0x4074a7
  4074fa:	push   es
  4074fb:	fld    QWORD PTR [ebp+0x65]
  4074fe:	bound  esi,QWORD PTR [edi-0x47]
  407501:	imul   edx,DWORD PTR [edx+0x11],0x68
  407505:	jns    0x407582
  407507:	loope  0x4074f7
  407509:	push   es
  40750a:	sub    eax,0x64985e9a
  40750f:	push   esp
  407510:	pop    ebx
  407511:	push   0xffffffd0
  407513:	adc    eax,0xe355f8a4
  407518:	ror    DWORD PTR [edi-0x5d],cl
  40751b:	and    esi,esi
  40751d:	dec    bp
  40751f:	in     eax,dx
  407520:	mov    ebp,0xbed6b55a
  407525:	ficom  DWORD PTR [ebp+0x2b]
  407528:	jnp    0x4074b9
  40752a:	jp     0x40757b
  40752c:	mov    ecx,0xa216199a
  407531:	outs   dx,DWORD PTR ds:[esi]
  407532:	lock dec ebp
  407534:	imul   esi,DWORD PTR [esi],0xf
  407537:	ss mov bh,0xdd
  40753a:	inc    eax
  40753b:	fwait
  40753c:	mov    esi,DWORD PTR [edx-0x56]
  40753f:	sti    
  407540:	in     eax,0x49
  407542:	lods   al,BYTE PTR ds:[esi]
  407543:	ja     0x4074e5
  407545:	adc    al,0x28
  407547:	aad    0x10
  407549:	(bad)  
  40754a:	or     al,0xec
  40754c:	xor    eax,0x1034fee8
  407551:	gs sbb dl,bl
  407554:	pop    esp
  407555:	fild   DWORD PTR [ebx+0x37]
  407558:	sahf   
  407559:	js     0x40759e
  40755b:	pop    ebx
  40755c:	shl    BYTE PTR [esi],cl
  40755e:	or     BYTE PTR [ebp+0x30],ch
  407561:	xchg   edx,eax
  407562:	das    
  407563:	cmc    
  407564:	daa    
  407565:	xchg   ecx,eax
  407566:	data16 scas al,BYTE PTR es:[edi]
  407568:	jbe    0x4075c1
  40756a:	sub    ebx,0x19
  40756d:	scas   al,BYTE PTR es:[edi]
  40756e:	xchg   edi,eax
  40756f:	out    0x27,al
  407571:	push   edx
  407572:	ror    BYTE PTR [edx-0x17],cl
  407575:	and    eax,0x11a94080
  40757a:	push   ss
  40757b:	mov    esp,0xbd9b14b9
  407580:	sbb    al,0xd9
  407582:	outs   dx,BYTE PTR ds:[esi]
  407583:	dec    esp
  407584:	(bad)  
  407585:	mov    bh,0x6f
  407587:	rcr    esp,0xa7
  40758a:	in     eax,dx
  40758b:	cs je  0x407604
  40758e:	das    
  40758f:	out    dx,al
  407590:	xchg   ebp,eax
  407591:	mov    esp,0xba41c31f
  407596:	push   esi
  407597:	cmp    ecx,esi
  407599:	cli    
  40759a:	mov    DWORD PTR [edx+0xe],esp
  40759d:	push   edi
  40759e:	mov    al,ds:0x4b239cf7
  4075a3:	scas   al,BYTE PTR es:[edi]
  4075a4:	mov    ch,0x87
  4075a6:	aad    0xeb
  4075a8:	ins    BYTE PTR es:[edi],dx
  4075a9:	add    DWORD PTR [edi-0x6e],eax
  4075ac:	test   DWORD PTR [ecx],ecx
  4075ae:	xchg   ebp,eax
  4075af:	mov    ds:0xc1e7ff03,eax
  4075b4:	cdq    
  4075b5:	repz out dx,eax
  4075b7:	pop    ecx
  4075b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b9:	or     esi,esp
  4075bb:	fcom   DWORD PTR [edx-0x3a]
  4075be:	xor    cl,BYTE PTR [esp+ecx*4+0x2d]
  4075c2:	addr16 cwde 
  4075c4:	push   ss
  4075c5:	test   BYTE PTR [edi],ch
  4075c7:	cs mov dh,0xc8
  4075cb:	lods   al,BYTE PTR ds:[esi]
  4075cc:	or     esi,DWORD PTR [esp+eax*4]
  4075cf:	outs   dx,DWORD PTR ds:[esi]
  4075d0:	sub    al,0xb7
  4075d2:	mov    ebx,0xea501261
  4075d7:	cld    
  4075d8:	jge    0x4075e2
  4075da:	add    BYTE PTR [ebp-0x7f],ch
  4075dd:	push   ebp
  4075de:	add    eax,0x27bb4c9c
  4075e3:	and    al,0xce
  4075e5:	cmp    al,0x49
  4075e7:	mov    al,ds:0xb52f93fa
  4075ec:	push   es
  4075ed:	aam    0xfd
  4075ef:	pop    ebp
  4075f0:	sbb    BYTE PTR [ebp+ebp*2+0x3b],dl
  4075f4:	aaa    
  4075f5:	or     eax,DWORD PTR [esi+0x5cfc71b0]
  4075fb:	(bad)  
  4075fc:	jo     0x407642
  4075fe:	and    BYTE PTR [edx+0x3d],ah
  407601:	mov    ah,0x8d
  407603:	inc    ecx
  407604:	int3   
  407605:	xor    al,bl
  407607:	jecxz  0x407595
  407609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40760a:	mov    al,0xda
  40760c:	retf   0xa4c1
  40760f:	xchg   ebp,eax
  407610:	jle    0x4075e2
  407612:	in     eax,0x3b
  407614:	and    bl,BYTE PTR [eax+ebx*2-0x60e4ea2f]
  40761b:	ins    DWORD PTR es:[edi],dx
  40761c:	cs retf 0xb08a
  407620:	push   ebp
  407621:	jae    0x4075cf
  407623:	fdiv   QWORD PTR [eax-0x4cd47e6b]
  407629:	push   0x644edbb1
  40762e:	jae    0x4075e7
  407630:	cld    
  407631:	mov    eax,ds:0x8ed6634e
  407636:	out    0x39,eax
  407638:	dec    ebx
  407639:	pusha  
  40763a:	fidiv  WORD PTR [ecx]
  40763c:	jle    0x4076a6
  40763e:	and    al,0x9c
  407640:	(bad)  
  407641:	fadd   DWORD PTR [esi+0x21]
  407644:	cmp    eax,0x986fd713
  407649:	and    al,BYTE PTR [ecx+0x7f]
  40764c:	cwde   
  40764d:	aas    
  40764e:	ss jmp 0x1a5:0xee613e35
  407656:	jns    0x4075fe
  407658:	mov    bh,0xf8
  40765a:	push   ebx
  40765b:	jmp    0x2d19e6da
  407660:	or     eax,0x9741d715
  407665:	mov    edx,edx
  407667:	jecxz  0x40760a
  407669:	stc    
  40766a:	mov    ebp,0x5acf6585
  40766f:	and    edx,edi
  407671:	hlt    
  407672:	inc    esp
  407673:	imul   edi,DWORD PTR [esi-0x1477bb48],0xa
  40767a:	mov    WORD PTR [ebx+edi*8-0x47a63743],gs
  407681:	mov    ebx,0xb1b5af3c
  407686:	cmp    al,0x66
  407688:	mov    ah,ah
  40768a:	(bad)  
  40768b:	iret   
  40768c:	js     0x40761b
  40768e:	sub    ah,BYTE PTR [edi-0xb]
  407691:	dec    edx
  407692:	mul    BYTE PTR ds:0xcaf7e373
  407698:	sbb    esi,DWORD PTR [eax-0x5d]
  40769b:	adc    eax,0x429206ac
  4076a0:	lea    esi,[edi]
  4076a2:	out    dx,al
  4076a3:	inc    ebp
  4076a4:	add    DWORD PTR [eax],eax
  4076a6:	ss pop ecx
  4076a8:	test   DWORD PTR [ecx-0x38],ebx
  4076ab:	fadd   DWORD PTR [ecx+0x3893ba1d]
  4076b1:	bnd jmp 0x23db717b
  4076b7:	rol    DWORD PTR [eax-0xc],0x36
  4076bb:	mov    ch,0x54
  4076bd:	fistp  QWORD PTR [ecx+0x3f]
  4076c0:	xchg   edi,eax
  4076c1:	push   edx
  4076c2:	push   es
  4076c3:	aam    0x7
  4076c5:	ror    BYTE PTR [eax+0x10eb4fc3],1
  4076cb:	mov    bh,0xfb
  4076cd:	pop    ebx
  4076ce:	jg     0x4076c9
  4076d0:	sbb    eax,0x5770fef3
  4076d5:	(bad)  
  4076d6:	fbstp  TBYTE PTR [ebx+0x6fef59c0]
  4076dc:	adc    dh,BYTE PTR [esi+0x7f37a256]
  4076e2:	(bad)  
  4076e3:	outs   dx,DWORD PTR ds:[esi]
  4076e4:	popf   
  4076e5:	adc    edi,esp
  4076e7:	inc    ebx
  4076e8:	pop    edx
  4076e9:	retf   
  4076ea:	pop    ebx
  4076eb:	mov    eax,0xf0023de9
  4076f0:	push   ecx
  4076f1:	sub    al,0x5
  4076f3:	mov    WORD PTR [edi-0x1e],?
  4076f6:	lock fs ret 
  4076f9:	adc    eax,0x71804982
  4076fe:	fld    st(4)
  407700:	je     0x40776b
  407702:	pop    edi
  407703:	adc    ebp,ecx
  407705:	dec    edx
  407706:	push   edi
  407707:	(bad)  
  407708:	cmc    
  407709:	(bad)  
  40770a:	out    dx,eax
  40770b:	ins    DWORD PTR es:[edi],dx
  40770c:	push   eax
  40770d:	mov    ah,0xc2
  40770f:	bound  ebx,QWORD PTR [ecx+0x19e3472d]
  407715:	inc    eax
  407716:	sub    DWORD PTR [ebp+0x2e],edi
  407719:	stc    
  40771a:	jcxz   0x40774d
  40771d:	lds    ebx,FWORD PTR [ebx]
  40771f:	ins    BYTE PTR es:[edi],dx
  407720:	push   es
  407721:	lock pop ds
  407723:	or     ecx,edi
  407725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407726:	shl    BYTE PTR [ebp+0x12],0xbe
  40772a:	dec    edi
  40772b:	pop    eax
  40772c:	adc    al,0x3
  40772e:	(bad)  
  40772f:	dec    esp
  407730:	jns    0x40770b
  407732:	mov    ah,0xa3
  407734:	repnz xor BYTE PTR [edx-0x7993e924],bh
  40773b:	push   ebx
  40773c:	inc    ecx
  40773d:	lock loop 0x407705
  407740:	add    bl,BYTE PTR [ecx+0x359dc4dc]
  407746:	fisub  WORD PTR [edi]
  407748:	inc    eax
  407749:	leave  
  40774a:	xchg   ecx,eax
  40774b:	out    dx,eax
  40774c:	nop
  40774d:	dec    BYTE PTR [ecx-0x36]
  407750:	fs push cs
  407752:	loopne 0x40772d
  407754:	mov    eax,0x45012ca5
  407759:	push   ebp
  40775a:	shl    BYTE PTR [eax-0x4c9272b5],0xc6
  407761:	add    al,0x38
  407763:	js     0x40777a
  407765:	mov    esi,0x912279bc
  40776a:	jmp    0x40777e
  40776c:	scas   al,BYTE PTR es:[edi]
  40776d:	lahf   
  40776e:	mov    cl,0x71
  407770:	adc    BYTE PTR [ebx-0x70769e41],bl
  407776:	loop   0x40777d
  407778:	inc    ecx
  407779:	push   edi
  40777a:	and    al,0x63
  40777c:	jmp    0x407732
  40777e:	mov    eax,ds:0xda073f93
  407783:	ins    DWORD PTR es:[edi],dx
  407784:	dec    esi
  407785:	cld    
  407786:	mov    al,BYTE PTR [esi+0x54c8c26]
  40778c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778d:	pushf  
  40778e:	fsubr  DWORD PTR ds:0xac24e47
  407794:	lock mov fs:0x8bb6d1e0,eax
  40779b:	js     0x407752
  40779d:	ficomp WORD PTR [edi+edi*8]
  4077a0:	sar    BYTE PTR [edi+0x1e],0xf6
  4077a4:	sub    DWORD PTR [esi],0xe8ac1387
  4077aa:	gs inc ebp
  4077ac:	dec    edx
  4077ad:	mov    ebx,DWORD PTR [esi-0x2316386e]
  4077b3:	jb     0x4077c1
  4077b5:	arpl   WORD PTR [edx+0x55],di
  4077b8:	and    dh,BYTE PTR [eax-0x3951b0cb]
  4077be:	stos   DWORD PTR es:[edi],eax
  4077bf:	fucomp st(4)
  4077c1:	add    BYTE PTR [esi],0xd7
  4077c4:	(bad)
  4077c9:	pusha  
  4077ca:	dec    eax
  4077cb:	pop    ecx
  4077cc:	(bad)  
  4077cd:	mov    bh,0xf6
  4077cf:	shr    DWORD PTR [ebx+0x6f0b70d1],cl
  4077d5:	js     0x4077c6
  4077d7:	xchg   ebx,eax
  4077d8:	aam    0xca
  4077da:	test   eax,0x1868f1f1
  4077df:	(bad)  
  4077e0:	fcomp  DWORD PTR [edi-0x985929e]
  4077e6:	aad    0x2f
  4077e8:	add    eax,0x512dd936
  4077ed:	dec    edi
  4077ee:	rcr    DWORD PTR [edi+ebx*4-0x14],1
  4077f2:	arpl   WORD PTR [ebp-0x56a30a39],bx
  4077f8:	in     al,0x55
  4077fa:	add    eax,0xb43458b8
  4077ff:	jae    0x4077da
  407801:	add    ah,BYTE PTR [eax-0x2a775c5b]
  407807:	cwde   
  407808:	xor    al,0xb8
  40780a:	cld    
  40780b:	mov    al,ds:0x2471445e
  407810:	dec    ebp
  407811:	xchg   ecx,eax
  407812:	lods   eax,DWORD PTR ds:[esi]
  407813:	ss inc ecx
  407815:	inc    esi
  407816:	mov    esp,0xc3edac91
  40781b:	mov    ecx,0x69b46975
  407820:	sbb    al,0xc0
  407822:	pop    es
  407823:	icebp  
  407824:	push   ds
  407825:	xor    ebp,edx
  407827:	xor    al,0x83
  407829:	or     eax,0x29e33444
  40782e:	ret    
  40782f:	out    dx,eax
  407830:	dec    ecx
  407831:	cmc    
  407832:	ins    DWORD PTR es:[edi],dx
  407833:	lods   al,BYTE PTR ds:[esi]
  407834:	mov    esp,0x301218a8
  407839:	pushf  
  40783a:	clc    
  40783b:	cmp    BYTE PTR [eax],ah
  40783d:	popf   
  40783e:	in     eax,dx
  40783f:	push   0xfabf7024
  407844:	adc    DWORD PTR [ebp-0x6159d438],ecx
  40784a:	fnsave [edx+eax*2+0x97511fe]
  407851:	jg     0x40788c
  407853:	cli    
  407854:	rcl    BYTE PTR [ecx+0x24f64c58],cl
  40785a:	les    esp,FWORD PTR [edi+edi*2-0x2a]
  40785e:	push   ds
  40785f:	in     eax,0x5d
  407861:	cmp    bh,BYTE PTR [edi-0x2b]
  407864:	sub    BYTE PTR [edi+0xb9c57b8],dl
  40786a:	call   0xbb8d6398
  40786f:	adc    eax,DWORD PTR [esi-0x60]
  407872:	and    BYTE PTR [edx+0x72ef93a2],0x47
  407879:	into   
  40787a:	xchg   ecx,eax
  40787b:	push   ebp
  40787c:	mov    al,0xd2
  40787e:	mov    al,BYTE PTR [esi-0x27]
  407881:	test   al,0x34
  407883:	scas   al,BYTE PTR es:[edi]
  407884:	enter  0xd898,0xcf
  407888:	sub    BYTE PTR [esi+0x4d],bh
  40788b:	cmp    ah,BYTE PTR [esi+0x63ee09bc]
  407891:	je     0x4078a4
  407893:	pop    edi
  407894:	or     bh,ch
  407896:	mov    eax,ds:0xcc832588
  40789b:	xor    esi,DWORD PTR [esi+0x26]
  40789e:	mov    edx,0x1bef2723
  4078a3:	fadd   DWORD PTR [edx]
  4078a5:	cmp    eax,0x3bc53261
  4078aa:	add    al,0xc7
  4078ac:	mov    esp,DWORD PTR es:[edi+0x7dade2f7]
  4078b3:	push   eax
  4078b4:	jo     0x40785a
  4078b6:	mov    bh,0xd1
  4078b8:	mov    cl,0x9c
  4078ba:	sub    esi,DWORD PTR [edx]
  4078bc:	dec    esi
  4078bd:	mov    ch,BYTE PTR [ebp-0x1eb46f41]
  4078c3:	or     DWORD PTR [ebp-0x13],edi
  4078c6:	sub    dl,dh
  4078c8:	dec    ebx
  4078c9:	into   
  4078ca:	jno    0x4078b0
  4078cc:	pop    eax
  4078cd:	mov    ?,WORD PTR [edx]
  4078cf:	inc    ebx
  4078d0:	inc    edi
  4078d1:	shl    BYTE PTR [ebx-0x44],1
  4078d4:	(bad)  
  4078d5:	imul   edi,DWORD PTR [esi],0xffffffb1
  4078d8:	repz dec eax
  4078db:	xchg   esi,eax
  4078dc:	pop    edx
  4078dd:	jne    0x407865
  4078df:	mov    edi,0x49c528b
  4078e4:	ins    BYTE PTR es:[edi],dx
  4078e5:	(bad)  
  4078e7:	push   es
  4078e8:	or     cl,ah
  4078ea:	gs jmp 0x893eef11
  4078f0:	js     0x4078d3
  4078f2:	out    dx,eax
  4078f3:	dec    ebp
  4078f4:	mov    ebp,0xbca743aa
  4078f9:	sbb    al,0x39
  4078fb:	xchg   esi,ecx
  4078fd:	inc    esp
  4078fe:	cmp    BYTE PTR [eax],0xe3
  407901:	push   0x7b
  407903:	mov    ecx,0xc7ef1fc2
  407908:	mov    al,0x5b
  40790a:	and    DWORD PTR [eax],esi
  40790c:	and    DWORD PTR ds:0xbb81794c,ecx
  407912:	push   ebp
  407913:	or     eax,0x5ec477c
  407918:	aaa    
  407919:	shl    BYTE PTR [edi+0x44],cl
  40791c:	inc    ebp
  40791d:	into   
  40791e:	popa   
  40791f:	(bad)  
  407921:	xchg   edx,eax
  407922:	out    dx,eax
  407923:	stos   BYTE PTR es:[edi],al
  407924:	jmp    0x4078c0
  407926:	imul   edi,DWORD PTR [esi-0x3f460b8c],0xdca2fa3e
  407930:	or     BYTE PTR [edx-0x5f53bc76],dl
  407936:	ja     0x407923
  407938:	out    0xb8,eax
  40793a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793b:	inc    ebp
  40793c:	jns    0x40790a
  40793e:	stc    
  40793f:	lea    esp,ss:[esp+ebp*8-0x7e]
  407944:	inc    edi
  407945:	cmp    ecx,DWORD PTR [ebx+0x65b03219]
  40794b:	sbb    cl,BYTE PTR [edx]
  40794d:	mov    ebx,0x4a7606bb
  407952:	pop    edi
  407953:	push   ds
  407954:	clc    
  407955:	mov    ds:0xc70931d1,al
  40795a:	pop    ss
  40795b:	icebp  
  40795c:	jae    0x40795f
  40795e:	mov    ebx,0xa4a4cc24
  407963:	shl    DWORD PTR [ebp+0x4f],0xb0
  407967:	mov    cl,0xa6
  407969:	sub    eax,0xe7376c0e
  40796e:	jns    0x407995
  407970:	(bad)  
  407971:	fdiv   st(0),st
  407973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407974:	jb     0x407915
  407976:	loop   0x4079ea
  407978:	xor    BYTE PTR [bp+di-0x7b],al
  40797c:	add    eax,0xccb4805f
  407981:	out    dx,al
  407982:	paddw  mm7,mm3
  407985:	ins    BYTE PTR es:[edi],dx
  407986:	jmp    0xf5ab:0x202de9a2
  40798d:	(bad)  
  40798e:	push   ebx
  40798f:	retf   0x5f8a
  407992:	xor    ebp,eax
  407994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407995:	mov    BYTE PTR [edx-0x5a3d3e69],bh
  40799b:	sar    BYTE PTR [ebp+0x5a],cl
  40799e:	jg     0x4079d9
  4079a0:	adc    DWORD PTR [di-0x1d],edi
  4079a4:	sbb    DWORD PTR [edx],0xaea4b667
  4079aa:	mov    ds:0xfc85790e,eax
  4079af:	ja     0x4079f2
  4079b1:	push   eax
  4079b2:	sub    eax,0x21e620b0
  4079b7:	sub    ebx,edi
  4079b9:	mov    ecx,0x80fd9077
  4079be:	sbb    BYTE PTR [esi-0x779fc910],al
  4079c4:	bound  ecx,QWORD PTR fs:[eax+0x41]
  4079c8:	cmp    al,0x8
  4079ca:	push   cs
  4079cb:	pop    es
  4079cc:	fwait
  4079cd:	pop    ecx
  4079ce:	mov    esp,0x268f4db2
  4079d3:	icebp  
  4079d4:	int    0xf1
  4079d6:	xchg   ebx,eax
  4079d7:	push   eax
  4079d8:	adc    edx,DWORD PTR [ecx+eiz*8]
  4079db:	ds popf 
  4079dd:	mov    ch,0x85
  4079df:	xchg   ecx,eax
  4079e0:	xor    DWORD PTR [ebx-0x55308798],edx
  4079e6:	add    bh,bh
  4079e8:	jbe    0x407a21
  4079ea:	sbb    ah,ch
  4079ec:	mov    eax,0xd23a9379
  4079f1:	inc    ebx
  4079f2:	das    
  4079f3:	cmp    ch,BYTE PTR [edx+eiz*8+0x4f]
  4079f7:	gs jge 0x4079e3
  4079fa:	fsubr  st(7),st
  4079fc:	ins    BYTE PTR es:[edi],dx
  4079fd:	fild   WORD PTR [ecx]
  4079ff:	call   0x9a2609a
  407a04:	addr16 mov edi,0x317f823f
  407a0a:	idiv   BYTE PTR [esi]
  407a0c:	and    BYTE PTR [edi+0x36],ah
  407a0f:	and    ah,BYTE PTR [ebx]
  407a11:	and    BYTE PTR [ebx-0x30],dh
  407a14:	pop    ecx
  407a15:	loope  0x4079bf
  407a17:	fist   WORD PTR [esi+0x401b85d0]
  407a1d:	adc    esi,DWORD PTR [esi+esi*4-0xb4e7c52]
  407a24:	adc    cl,cl
  407a26:	loopne 0x407a53
  407a28:	fdivr  DWORD PTR [edi]
  407a2a:	and    bh,bh
  407a2c:	xor    eax,0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0x7e3c:0xb75fc670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	xchg   edx,eax
  407ebd:	aas    
  407ebe:	xchg   ebx,eax
  407ebf:	ret    0x9c56
  407ec2:	xor    eax,0x7cb0e3ef
  407ec7:	pop    eax
  407ec8:	inc    esi
  407ec9:	and    eax,DWORD PTR [esi]
  407ecb:	jg     0x407e8e
  407ecd:	pop    edx
  407ece:	mov    edx,DWORD PTR [eax-0xd]
  407ed1:	shl    DWORD PTR [esi+0x5399c266],0x99
  407ed8:	dec    ecx
  407ed9:	or     edi,ecx
  407edb:	dec    esp
  407edc:	sbb    DWORD PTR [edx],0xccdf8197
  407ee2:	mov    al,ds:0xcb12d24e
  407ee7:	add    dl,BYTE PTR [ebx*8-0x268ca3da]
  407eee:	and    eax,0x733402b8
  407ef3:	sub    al,0xa5
  407ef5:	jg     0x407edc
  407ef7:	(bad)  
  407ef8:	cli    
  407ef9:	add    ecx,DWORD PTR [esi+ebp*8]
  407efc:	cmp    al,0x6a
  407efe:	test   DWORD PTR [eax],esp
  407f00:	ret    
  407f01:	push   es
  407f02:	lock leave 
  407f04:	test   eax,0xfd4913ca
  407f09:	sbb    ecx,DWORD PTR [ebp-0x32f433c0]
  407f0f:	sub    al,0xe7
  407f11:	mov    dl,0x6b
  407f13:	adc    DWORD PTR [edi-0x23],esi
  407f16:	mov    al,ds:0x6e81a803
  407f1b:	daa    
  407f1c:	into   
  407f1d:	lahf   
  407f1e:	add    edx,DWORD PTR [edx]
  407f20:	iret   
  407f21:	mov    dl,0xc3
  407f23:	hlt    
  407f24:	jne    0x407ee3
  407f26:	ins    BYTE PTR es:[edi],dx
  407f27:	rol    BYTE PTR [ebx+edi*8],cl
  407f2a:	dec    ebx
  407f2b:	shl    BYTE PTR [ecx],0x92
  407f2e:	xchg   esp,eax
  407f2f:	imul   DWORD PTR [edx-0x36e8cf8c]
  407f35:	xchg   edx,eax
  407f36:	add    esp,esi
  407f38:	or     DWORD PTR [edi+0x27],esi
  407f3b:	and    al,0x43
  407f3d:	xchg   esi,eax
  407f3e:	dec    edi
  407f3f:	jmp    0x407ec8
  407f41:	ret    0x50ef
  407f44:	call   0xe4054a9f
  407f49:	and    dl,BYTE PTR cs:[esi-0x7f]
  407f4d:	pop    edi
  407f4e:	clc    
  407f4f:	xor    BYTE PTR [ecx-0x4971f6ee],0xaf
  407f56:	loope  0x407efe
  407f58:	(bad)  
  407f59:	shr    BYTE PTR [esi+edx*8+0x57],cl
  407f5d:	add    eax,0xdef62669
  407f62:	retf   0x4a55
  407f65:	cmc    
  407f66:	cdq    
  407f67:	add    edx,DWORD PTR [esi-0x631db54]
  407f6d:	stos   DWORD PTR es:[edi],eax
  407f6e:	sti    
  407f6f:	dec    ebp
  407f70:	sbb    al,0x40
  407f72:	fsubr  st(7),st
  407f74:	sbb    DWORD PTR [esi],0xfffffff7
  407f77:	std    
  407f78:	jp     0x407f70
  407f7a:	sbb    eax,0xc6b167fb
  407f7f:	stos   BYTE PTR es:[edi],al
  407f80:	pop    edx
  407f81:	push   es
  407f82:	pop    ds
  407f83:	mov    eax,ds:0x221f8e3
  407f88:	pop    edx
  407f89:	pop    esi
  407f8a:	or     edi,DWORD PTR [edx+ebx*4-0x6ed28332]
  407f91:	test   esi,esi
  407f93:	xchg   ebp,eax
  407f94:	bound  ebp,QWORD PTR [ebp-0x36]
  407f97:	icebp  
  407f98:	jb     0x407f31
  407f9a:	iret   
  407f9b:	sub    DWORD PTR [esp+ebp*2+0x7f],0x1
  407fa0:	fcmovnb st,st(6)
  407fa2:	xor    cl,ch
  407fa4:	clc    
  407fa5:	retf   0x6120
  407fa8:	pop    esi
  407fa9:	imul   ebx,DWORD PTR [edi],0x8c813126
  407faf:	sti    
  407fb0:	jmp    0x407f8c
  407fb2:	fistp  WORD PTR [eax+edi*2-0x4fa1a3bf]
  407fb9:	inc    esp
  407fba:	bound  ebp,QWORD PTR [ebx]
  407fbc:	xchg   BYTE PTR [edi+0x32b75f31],cl
  407fc2:	icebp  
  407fc3:	inc    ebp
  407fc4:	mov    WORD PTR [eax+0x2c],ss
  407fc7:	sbb    al,0xc4
  407fc9:	std    
  407fca:	sti    
  407fcb:	lods   eax,DWORD PTR cs:[esi]
  407fcd:	push   cs
  407fce:	xchg   ebx,eax
  407fcf:	pop    edi
  407fd0:	cmp    WORD PTR [esi],dx
  407fd3:	mov    ebp,0x936ba8d4
  407fd8:	fsubr  QWORD PTR [edi+ebx*8+0x5d]
  407fdc:	dec    ecx
  407fdd:	les    esp,FWORD PTR fs:[ebp+0x2f0dbb92]
  407fe4:	lods   al,BYTE PTR ds:[esi]
  407fe5:	popf   
  407fe6:	lods   al,BYTE PTR ds:[esi]
  407fe7:	sbb    DWORD PTR [esi],edx
  407fe9:	mov    esp,0xad31ab83
  407fee:	dec    esi
  407fef:	or     al,0xc0
  407ff1:	adc    al,0xf2
  407ff3:	mov    eax,0xe972f57
  407ff8:	mov    dh,0x89
  407ffa:	jp     0x407f9a
  407ffc:	lds    esi,FWORD PTR [esi]
  407ffe:	push   edx
  407fff:	lods   al,BYTE PTR ds:[esi]
  408000:	test   al,0x62
  408002:	mov    ch,0x8f
  408004:	mov    al,BYTE PTR [edx+eax*8+0x10a1d78d]
  40800b:	lahf   
  40800c:	push   esi
  40800d:	gs and al,0xa9
  408010:	popf   
  408011:	inc    eax
  408012:	in     eax,dx
  408013:	push   ebx
  408014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408016:	fwait
  408017:	pop    ecx
  408018:	mov    ch,0x12
  40801a:	test   DWORD PTR [ebx],eax
  40801c:	sbb    bh,BYTE PTR [eax+esi*2]
  40801f:	shl    BYTE PTR [ecx],cl
  408021:	sahf   
  408022:	jecxz  0x407fe2
  408024:	popa   
  408025:	rcl    DWORD PTR [edi],1
  408027:	mov    ah,0x94
  408029:	mov    eax,0xfa155dbc
  40802e:	jg     0x408026
  408030:	and    DWORD PTR ds:0xd67e77d6,0x3a
  408037:	mov    ecx,0x49cd1d00
  40803c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803d:	mov    BYTE PTR [ebx+0x6a],ah
  408040:	mov    ds:0xab6cb625,eax
  408045:	ins    BYTE PTR es:[edi],dx
  408046:	sbb    DWORD PTR [esi],ebx
  408048:	mov    cl,0x30
  40804a:	xor    al,0x11
  40804c:	push   ss
  40804d:	or     BYTE PTR [esi],bh
  40804f:	stc    
  408050:	jmp    0x68b64f7a
  408055:	mov    ds:0x18a166e8,eax
  40805a:	jb     0x408030
  40805c:	jl     0x408092
  40805e:	lods   eax,DWORD PTR ds:[esi]
  40805f:	add    esi,esi
  408061:	icebp  
  408062:	enter  0xe3a1,0x7d
  408066:	loopne 0x408018
  408068:	(bad)  
  408069:	arpl   bx,sp
  40806b:	jno    0x408044
  40806d:	pusha  
  40806e:	fmul   QWORD PTR [esi+0x34]
  408071:	cmp    esi,DWORD PTR [edi-0x35689c7f]
  408077:	mov    ch,0x64
  408079:	pop    ebx
  40807a:	fcomp  DWORD PTR [eax+0x39b531f3]
  408080:	and    eax,0xbf7a3211
  408085:	pop    edx
  408086:	xor    eax,0x5377d906
  40808b:	inc    edx
  40808c:	div    DWORD PTR [edx+0x38]
  40808f:	push   ebx
  408090:	loop   0x408091
  408092:	std    
  408093:	or     esi,DWORD PTR [ecx]
  408095:	mov    eax,0x1b4c35a3
  40809a:	aad    0xe6
  40809c:	push   edx
  40809d:	(bad)  
  40809e:	push   esp
  40809f:	xchg   ecx,eax
  4080a0:	sub    cl,BYTE PTR [ecx+0x2ca3ffc7]
  4080a6:	push   ss
  4080a7:	xor    eax,0xfdba639f
  4080ac:	mov    ebx,0x430723d0
  4080b1:	adc    DWORD PTR [edi+ecx*8+0x4d55c904],eax
  4080b8:	inc    ecx
  4080b9:	fsub   st(0),st
  4080bb:	adc    dl,0x34
  4080be:	jns    0x4080b0
  4080c0:	test   BYTE PTR [esi-0x7b57a53c],0x17
  4080c7:	pushf  
  4080c8:	mov    bl,cl
  4080ca:	sub    DWORD PTR [ecx],ebx
  4080cc:	mov    ecx,DWORD PTR [ebx]
  4080ce:	mov    al,0xf9
  4080d0:	test   edi,ecx
  4080d2:	in     al,0x39
  4080d4:	in     eax,dx
  4080d5:	fidiv  DWORD PTR [esi+0xa427047]
  4080db:	stos   DWORD PTR es:[edi],eax
  4080dc:	xchg   edi,eax
  4080dd:	clc    
  4080de:	add    al,0x87
  4080e0:	repz imul ecx,esi,0x29
  4080e4:	sub    al,0xbc
  4080e6:	jg     0x408127
  4080e8:	pop    ebp
  4080e9:	stos   DWORD PTR es:[edi],eax
  4080ea:	jp     0x40809d
  4080ec:	pop    ds
  4080ed:	aam    0xd2
  4080ef:	push   ebp
  4080f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080f1:	xchg   ecx,eax
  4080f2:	ins    DWORD PTR es:[edi],dx
  4080f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f4:	fcmovnb st,st(7)
  4080f6:	mul    DWORD PTR [ebp+0x748c1197]
  4080fc:	xor    eax,DWORD PTR [esi+0x26]
  4080ff:	lea    ecx,[ecx+0x7b]
  408102:	sbb    DWORD PTR [ecx-0x28099cb7],esp
  408108:	bound  ebp,QWORD PTR [esi+ebx*2-0x2d]
  40810c:	cmp    BYTE PTR [ebx],dh
  40810e:	(bad)  
  40810f:	in     al,dx
  408110:	mov    al,0x14
  408112:	aad    0x6
  408114:	shl    BYTE PTR [eax],cl
  408116:	xor    al,0x17
  408118:	adc    al,0x9c
  40811a:	fldcw  WORD PTR [edi-0x2f8927b4]
  408120:	xor    cl,BYTE PTR [eax-0xe333b8e]
  408126:	mov    esp,0x8f259b77
  40812b:	(bad)  
  40812c:	mov    bl,0x6a
  40812e:	cmp    dh,BYTE PTR [edi+edx*2+0x6a12e775]
  408135:	cli    
  408136:	xchg   DWORD PTR [ecx+0x2f],edx
  408139:	sub    dl,BYTE PTR [edi+edx*1]
  40813c:	mov    al,0xa
  40813e:	stos   DWORD PTR es:[edi],eax
  40813f:	mov    ebp,DWORD PTR [edi+0x5a]
  408142:	xor    DWORD PTR [edx+0x4d],0x1b3bb70
  408149:	rcl    BYTE PTR [edi-0x25],cl
  40814c:	loop   0x408104
  40814e:	pop    esi
  40814f:	xor    edx,DWORD PTR [eax]
  408151:	shl    BYTE PTR [ebx-0x588a35d],0x37
  408158:	outs   dx,DWORD PTR ds:[esi]
  408159:	mov    dh,BYTE PTR [edi+0x1e468ff7]
  40815f:	dec    edi
  408160:	mov    esi,0xcc743157
  408165:	lods   eax,DWORD PTR ds:[esi]
  408166:	and    ch,al
  408168:	inc    eax
  408169:	sti    
  40816a:	or     edi,edx
  40816c:	and    BYTE PTR [edx],bl
  40816e:	cli    
  40816f:	shl    eax,cl
  408171:	repnz cmp BYTE PTR ss:[ebx+0x27],al
  408176:	adc    dl,bh
  408178:	push   edi
  408179:	sahf   
  40817a:	fiadd  DWORD PTR [ecx+0x650dceff]
  408180:	sbb    esp,DWORD PTR [esi-0x82b1936]
  408186:	aam    0xaa
  408188:	mov    edi,es
  40818a:	daa    
  40818b:	adc    eax,0x996e0dd
  408190:	dec    ebp
  408191:	dec    eax
  408192:	cmp    al,0x38
  408194:	scas   al,BYTE PTR es:[edi]
  408195:	fcom   QWORD PTR [eax]
  408197:	enter  0x8f1a,0x95
  40819b:	scas   eax,DWORD PTR es:[edi]
  40819c:	jp     0x408140
  40819e:	rol    DWORD PTR [ecx+eax*8+0x5ecaf082],1
  4081a5:	push   0x79a3b368
  4081aa:	mov    bl,0x8f
  4081ac:	je     0x4081d4
  4081ae:	sub    eax,0xafa8d64f
  4081b3:	fstp   TBYTE PTR [esi+0x43]
  4081b6:	int3   
  4081b7:	outs   dx,BYTE PTR ds:[esi]
  4081b8:	or     DWORD PTR [esp+ecx*1],ecx
  4081bb:	test   DWORD PTR [esi+0x6170f478],0xe40914c
  4081c5:	sar    BYTE PTR [edi-0x6ab08bea],cl
  4081cb:	sahf   
  4081cc:	xor    BYTE PTR [esi+ecx*2-0x7b],bl
  4081d0:	ror    DWORD PTR [ebp+0x1fa3305d],cl
  4081d6:	sub    eax,0xa08d61e8
  4081db:	lods   eax,DWORD PTR ds:[esi]
  4081dc:	add    ecx,DWORD PTR ds:0x1d84f679
  4081e2:	sbb    bl,BYTE PTR [ebp-0x203dd336]
  4081e8:	in     eax,0x12
  4081ea:	fld    DWORD PTR [eax]
  4081ec:	sbb    DWORD PTR [ebp+0xf43c3ba],ecx
  4081f2:	or     eax,DWORD PTR [ebx+eax*8-0x2e9de677]
  4081f9:	mov    esi,0xc4b8bca4
  4081fe:	xor    BYTE PTR [edi],ch
  408200:	push   ds
  408201:	lods   al,BYTE PTR ds:[esi]
  408202:	ins    DWORD PTR es:[edi],dx
  408203:	ret    
  408204:	data16 mov bl,0x4e
  408207:	lds    edx,FWORD PTR [esi]
  408209:	xor    al,BYTE PTR gs:[esi]
  40820c:	jne    0x408211
  40820e:	mov    eax,0x2c28a517
  408213:	dec    ebx
  408214:	(bad)  
  408215:	fwait
  408216:	add    edx,DWORD PTR [esp+ebx*2+0x1d]
  40821a:	and    DWORD PTR [ebx+0x6f324610],edi
  408220:	mov    ds:0xd16c,al
  408225:	sahf   
  408226:	push   ecx
  408227:	push   edi
  408228:	push   esi
  408229:	dec    ebp
  40822a:	jmp    0x40822b
  40822c:	fisub  DWORD PTR ss:[edx+0x2dd4d09]
  408233:	push   ebp
  408234:	inc    ebp
  408235:	ret    0x2ef9
  408238:	repnz push cs
  40823a:	nop
  40823b:	inc    eax
  40823c:	pop    es
  40823d:	inc    ecx
  40823e:	and    DWORD PTR [esi+ebp*2-0xf969ca8],ebp
  408245:	push   0xfffffff4
  408247:	cli    
  408248:	iret   
  408249:	ret    0x85de
  40824c:	cmp    DWORD PTR [edi+0x53],eax
  40824f:	xchg   dh,bl
  408251:	sub    BYTE PTR [edx-0x7b],cl
  408254:	pop    ebp
  408255:	pop    edx
  408256:	pushf  
  408257:	dec    edx
  408258:	ret    0x32ef
  40825b:	shl    BYTE PTR [edx+0x2c],1
  40825e:	cld    
  40825f:	jg     0x4082b5
  408261:	sub    ebx,DWORD PTR [esi+0x71]
  408264:	mov    ecx,0x2d426fb5
  408269:	stc    
  40826a:	xchg   ebp,eax
  40826b:	add    al,0x97
  40826d:	pop    ebx
  40826e:	xor    BYTE PTR [esi],dl
  408270:	ret    
  408271:	or     eax,0xb747589a
  408276:	mov    dl,0x75
  408278:	add    DWORD PTR [esi+eax*1+0x2a4aa701],eax
  40827f:	cli    
  408280:	xor    eax,0x8080b894
  408285:	stos   BYTE PTR es:[edi],al
  408286:	in     al,0xeb
  408288:	or     eax,0xfe94b41d
  40828d:	cmc    
  40828e:	test   al,0xdd
  408290:	test   al,0xe
  408292:	scas   al,BYTE PTR es:[edi]
  408293:	pop    esp
  408294:	xor    DWORD PTR [ebp+0x375af4ce],eax
  40829a:	jle    0x408236
  40829c:	mov    ds:0x761660d2,al
  4082a1:	popa   
  4082a2:	nop
  4082a3:	ja     0x408321
  4082a5:	(bad)
  4082a8:	scas   al,BYTE PTR es:[edi]
  4082a9:	inc    edx
  4082aa:	repnz or DWORD PTR [ebp-0x27102e22],0x80a56d63
  4082b5:	cmp    bl,bh
  4082b7:	jo     0x40830a
  4082b9:	cmp    ah,BYTE PTR [esi]
  4082bb:	scas   al,BYTE PTR es:[edi]
  4082bc:	repnz icebp 
  4082be:	adc    DWORD PTR [esi],esp
  4082c0:	and    BYTE PTR [esi-0x47],bh
  4082c3:	pop    ebp
  4082c4:	mov    bl,ah
  4082c6:	mov    esp,DWORD PTR [esi]
  4082c8:	popf   
  4082c9:	pop    edx
  4082ca:	push   ebx
  4082cb:	push   0xffffff83
  4082cd:	imul   ebx,DWORD PTR ds:0xa3b65c74,0xd88a618b
  4082d7:	adc    DWORD PTR [edi-0x113e4a55],edx
  4082dd:	sub    BYTE PTR [eax+0x28afe738],0x1e
  4082e4:	push   esi
  4082e5:	aam    0x49
  4082e7:	and    DWORD PTR [ebx+ebp*8-0x57],eax
  4082eb:	adc    edx,DWORD PTR [esi+0x40c61ac5]
  4082f1:	adc    al,0x22
  4082f3:	shl    BYTE PTR [ebx],cl
  4082f5:	sub    bh,BYTE PTR [edx-0x55456109]
  4082fb:	xchg   DWORD PTR [ebx],edx
  4082fd:	push   ebp
  4082fe:	div    BYTE PTR [edi]
  408300:	pushf  
  408301:	ds daa 
  408303:	clc    
  408304:	loopne 0x408383
  408306:	or     al,0x40
  408308:	int3   
  408309:	cmp    DWORD PTR [ecx-0x64],ebp
  40830c:	repz jge 0x408311
  40830f:	jmp    0xcb1d47f2
  408314:	loope  0x40833d
  408316:	(bad)  
  408317:	into   
  408318:	cld    
  408319:	(bad)  
  40831a:	mov    bh,0xe7
  40831c:	xchg   edx,eax
  40831d:	out    0x79,eax
  40831f:	push   esp
  408320:	jne    0x4082d7
  408322:	mov    ds:0xcd82db68,al
  408327:	sub    ah,BYTE PTR ds:0xe8a4b964
  40832d:	out    0xac,al
  40832f:	retf   0xbd62
  408332:	push   ss
  408333:	mov    dh,0xfb
  408335:	xchg   edi,eax
  408336:	mov    WORD PTR [edx],?
  408338:	sub    al,0xf1
  40833a:	xchg   ebp,eax
  40833b:	das    
  40833c:	add    ecx,DWORD PTR [edi+0x294e2fe9]
  408342:	xchg   edx,eax
  408343:	cmp    ch,dl
  408345:	push   ebp
  408346:	rcr    BYTE PTR ds:0xc6a092eb,cl
  40834c:	xor    eax,0xa0b6eea6
  408351:	bound  eax,QWORD PTR [ebx+0x63]
  408354:	pop    ebp
  408355:	and    edx,ecx
  408357:	imul   edx,eax,0x37
  40835a:	bnd jne 0x40832a
  40835d:	add    al,BYTE PTR [ebx-0x6]
  408360:	(bad)  
  408361:	(bad)  
  408362:	shr    BYTE PTR [ecx+edi*4-0x6c09985e],1
  408369:	add    BYTE PTR [ebx+0x7d],ah
  40836c:	scas   eax,DWORD PTR es:[edi]
  40836d:	xchg   esi,eax
  40836e:	cmp    BYTE PTR [edx-0x5e],ah
  408371:	lods   al,BYTE PTR ds:[esi]
  408372:	push   0xffffffc9
  408374:	mov    edx,0xf8c627d0
  408379:	adc    BYTE PTR [ecx-0x3de9a12d],dh
  40837f:	dec    edx
  408380:	push   edx
  408381:	dec    ecx
  408382:	adc    DWORD PTR [bx+di],eax
  408385:	xor    DWORD PTR [edi+0x66],ebp
  408388:	inc    esi
  408389:	sub    edi,ebx
  40838b:	addr16 sbb al,0xb7
  40838e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40838f:	repnz mov BYTE PTR [ebp+0x22f16a7d],cl
  408396:	mov    dl,BYTE PTR [eax+0x62]
  408399:	pop    edx
  40839a:	test   al,0x42
  40839c:	mov    ah,0x51
  40839e:	or     BYTE PTR [ebp-0x25eabb3],al
  4083a4:	test   al,cl
  4083a6:	inc    ebp
  4083a7:	or     al,0xd3
  4083a9:	lods   eax,DWORD PTR ds:[esi]
  4083aa:	inc    edi
  4083ab:	cmp    eax,0x336ce93c
  4083b0:	mov    ds:0xe460fb50,al
  4083b5:	xchg   DWORD PTR [ecx-0x2a],edx
  4083b8:	adc    eax,0x91c8f535
  4083bd:	pop    ss
  4083be:	inc    ebx
  4083bf:	jecxz  0x40841d
  4083c1:	pop    ds
  4083c2:	sub    BYTE PTR [esi+0x7119258a],cl
  4083c8:	mov    bh,0x89
  4083ca:	push   ebp
  4083cb:	(bad)  
  4083cc:	out    dx,al
  4083cd:	loopne 0x408389
  4083cf:	cmp    al,0x1e
  4083d1:	adc    BYTE PTR [edx],bh
  4083d3:	out    0x6b,al
  4083d5:	pop    ds
  4083d6:	mov    bl,0x65
  4083d8:	or     al,0x9d
  4083da:	push   esi
  4083db:	mov    al,0x9d
  4083dd:	test   al,0x90
  4083df:	cs in  eax,0xba
  4083e2:	push   esi
  4083e3:	stos   DWORD PTR es:[edi],eax
  4083e4:	retf   0x25
  4083e7:	xchg   ebp,eax
  4083e8:	hlt    
  4083e9:	jp     0x408461
  4083eb:	mov    bh,0xf
  4083ed:	jge    0x408428
  4083ef:	in     eax,0xbe
  4083f1:	cwde   
  4083f2:	test   eax,0x49d5ddfd
  4083f7:	mov    al,0x96
  4083f9:	cmp    dl,BYTE PTR [edi]
  4083fb:	(bad)  
  4083fd:	adc    esp,DWORD PTR [eax-0x7c]
  408400:	rol    esi,1
  408402:	cdq    
  408403:	jmp    0xd74cda37
  408408:	cmp    BYTE PTR [esi+esi*2+0x2698ce4a],al
  40840f:	and    BYTE PTR es:[edx],bl
  408412:	lods   eax,DWORD PTR ds:[esi]
  408413:	mov    esp,0x6ec3da3c
  408418:	jmp    0x408485
  40841a:	inc    ecx
  40841b:	imul   DWORD PTR ds:0xc9f878bd
  408421:	xor    eax,0xd1b80f80
  408426:	dec    ebp
  408427:	mov    ds:0xe39ef175,eax
  40842c:	daa    
  40842d:	xchg   esi,eax
  40842e:	mov    al,ds:0x10a95b26
  408433:	pop    esp
  408434:	jp     0x408412
  408436:	mov    ds:0x7bc6a90f,al
  40843b:	fst    QWORD PTR [edx]
  40843d:	rep stos DWORD PTR es:[edi],eax
  40843f:	dec    ebp
  408440:	xor    dh,bh
  408442:	push   edi
  408443:	inc    ebx
  408444:	mov    ah,0x1f
  408446:	rcl    DWORD PTR [edi-0x6b98e882],cl
  40844c:	add    BYTE PTR [ebx+0x7db10d76],dl
  408452:	mov    al,ds:0x2d749436
  408457:	les    edx,FWORD PTR [ebx-0xcef876e]
  40845d:	sti    
  40845e:	mov    al,ds:0xcc4c6a05
  408463:	pop    es
  408464:	xchg   esi,eax
  408465:	jmp    0x408459
  408467:	popa   
  408468:	rol    DWORD PTR [edi],1
  40846a:	mov    ch,0x1e
  40846c:	cmp    ch,BYTE PTR ss:[ebp+ecx*1-0x1f96107f]
  408474:	int3   
  408475:	jbe    0x4084aa
  408477:	jnp    0x40843c
  408479:	add    BYTE PTR [eax-0x28],0xef
  40847d:	xchg   edx,eax
  40847e:	nop
  40847f:	and    BYTE PTR [edi],0xb
  408482:	div    BYTE PTR [eax]
  408484:	mov    ebp,0xd0522f69
  408489:	jmp    0x4440:0x51c7d51e
  408490:	ins    DWORD PTR es:[edi],dx
  408491:	in     eax,0xdb
  408493:	addr16 int3 
  408495:	and    dl,0x38
  408498:	mov    cl,0x3e
  40849a:	push   0x3b
  40849c:	daa    
  40849d:	(bad)
  4084a0:	or     al,0x1a
  4084a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a3:	xchg   ecx,eax
  4084a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a5:	(bad)
  4084a9:	leave  
  4084aa:	repnz xor DWORD PTR [esp+edi*8],esi
  4084ae:	retf   0xa130
  4084b1:	sub    ah,ah
  4084b3:	fucomi st,st(7)
  4084b5:	adc    eax,0x846686e7
  4084ba:	daa    
  4084bb:	mov    esp,0x64215ebc
  4084c0:	adc    al,0xce
  4084c2:	xor    dh,dh
  4084c4:	sub    DWORD PTR [ecx+0x15],0xfbd45727
  4084cb:	jb     0x4084ea
  4084cd:	adc    al,0x3e
  4084cf:	sbb    al,0x32
  4084d1:	xchg   esi,eax
  4084d2:	xchg   ebx,eax
  4084d3:	sbb    eax,0xeba05825
  4084d8:	cld    
  4084d9:	add    esp,DWORD PTR [edi-0x25ffa870]
  4084df:	adc    ecx,DWORD PTR [edx-0x7175cd39]
  4084e5:	enter  0x8dd3,0xf7
  4084e9:	mov    ds:0xbe7d22dd,al
  4084ee:	repz aam 0x9b
  4084f1:	add    BYTE PTR [eax],bh
  4084f3:	jecxz  0x408475
  4084f5:	mov    dh,0xba
  4084f7:	push   ebx
  4084f8:	scas   eax,DWORD PTR es:[edi]
  4084f9:	push   0x5ab2528f
  4084fe:	xor    al,0x48
  408500:	mov    BYTE PTR [eax],dl
  408502:	jo     0x408575
  408504:	iret   
  408505:	mov    ebp,ebx
  408507:	mov    BYTE PTR [eax],bh
  408509:	clc    
  40850a:	pop    ds
  40850b:	mov    dh,0x36
  40850d:	loope  0x40849f
  40850f:	mov    ebx,0xe4e16db1
  408514:	imul   BYTE PTR [esi+0x2c180c20]
  40851a:	add    ah,dh
  40851c:	add    esi,DWORD PTR [ebp-0x7130f60e]
  408522:	retf   
  408523:	lods   al,BYTE PTR ds:[esi]
  408524:	sub    al,0x35
  408526:	pop    edi
  408527:	push   esp
  408528:	add    dl,BYTE PTR [esi]
  40852a:	nop
  40852b:	adc    BYTE PTR [esp+edi*2-0x2],al
  40852f:	pop    ecx
  408530:	mov    BYTE PTR [eax],dh
  408532:	xor    ah,BYTE PTR [edx-0x57]
  408535:	arpl   WORD PTR [edx-0x1cdf3ef8],di
  40853b:	jmp    0x408512
  40853d:	jmp    0x2268:0x928f04ef
  408544:	fld    QWORD PTR [edx]
  408546:	cmp    eax,0xc7cfad30
  40854b:	xor    DWORD PTR [edi+0xd],edi
  40854e:	imul   esp
  408550:	cs or  eax,esi
  408553:	fistp  WORD PTR [edx+ecx*4+0x664c339f]
  40855a:	imul   ebx,edi,0x33
  40855d:	push   edi
  40855e:	adc    al,0xee
  408560:	mov    bh,0x90
  408562:	clc    
  408563:	enter  0xe4c8,0xb9
  408567:	and    eax,0xccc9c62c
  40856c:	in     eax,0x24
  40856e:	loope  0x408564
  408570:	add    BYTE PTR [ebx],0x13
  408573:	aaa    
  408574:	nop
  408575:	and    edx,eax
  408577:	pop    edx
  408578:	sub    dh,BYTE PTR [edi+0x27]
  40857b:	inc    ebp
  40857c:	mov    bl,0xe1
  40857e:	std    
  40857f:	sub    DWORD PTR [esi+0x7c90a92c],edi
  408585:	aas    
  408586:	scas   eax,DWORD PTR es:[edi]
  408587:	cmp    DWORD PTR [esi-0x65639ad6],eax
  40858d:	mov    ch,0xbd
  40858f:	sub    ebp,DWORD PTR [ecx]
  408591:	bound  edi,QWORD PTR [ecx]
  408593:	or     esp,edx
  408595:	ss stc 
  408597:	push   ecx
  408598:	and    BYTE PTR [ecx],0x5a
  40859b:	ins    DWORD PTR es:[edi],dx
  40859c:	jne    0x408571
  40859e:	mov    ecx,0xf53e9194
  4085a3:	mov    ah,0x53
  4085a5:	adc    DWORD PTR [edi+0x616dd68a],ebx
  4085ab:	sub    al,0x5c
  4085ad:	aas    
  4085ae:	rcl    ebp,1
  4085b0:	es sbb eax,0x1c861d20
  4085b6:	push   edi
  4085b7:	mov    ah,0x2e
  4085b9:	xchg   edx,eax
  4085ba:	jno    0x40861d
  4085bc:	mov    WORD PTR [ecx],fs
  4085be:	dec    ebx
  4085bf:	mov    eax,0xbcfc5a19
  4085c4:	add    esi,esi
  4085c6:	mov    eax,0x8372c9ef
  4085cb:	jo     0x4085e8
  4085cd:	jle    0x40859d
  4085cf:	popa   
  4085d0:	inc    ebp
  4085d1:	pop    ecx
  4085d2:	scas   eax,DWORD PTR es:[edi]
  4085d3:	push   esi
  4085d4:	and    al,0xe4
  4085d6:	push   0x8bc57b7c
  4085db:	cmp    BYTE PTR [eax-0xf09cb95],0x14
  4085e2:	jno    0x408585
  4085e4:	jae    0x408628
  4085e6:	push   eax
  4085e7:	inc    edx
  4085e8:	xor    al,bh
  4085ea:	popa   
  4085eb:	ss rol ch,0xfa
  4085ef:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4085f1:	sub    al,0x48
  4085f3:	leave  
  4085f4:	out    dx,al
  4085f5:	test   BYTE PTR gs:[eax+0x65a27f50],0xd8
  4085fd:	addr16 cs push 0xb8676143
  408604:	push   eax
  408605:	jg     0x408650
  408607:	aad    0xcf
  408609:	mov    ecx,0x3aec26ed
  40860e:	(bad)  
  408610:	mov    edi,0xed42736f
  408615:	test   eax,0x8515e379
  40861a:	mov    esi,0xe1f17c2a
  40861f:	push   eax
  408620:	int3   
  408621:	inc    ecx
  408622:	shl    esp,1
  408624:	xchg   esp,eax
  408625:	pop    ebp
  408626:	js     0x4085b2
  408628:	(bad)  
  40862a:	add    al,0x96
  40862c:	icebp  
  40862d:	xchg   edi,eax
  40862e:	cmp    al,0xac
  408630:	in     al,dx
  408631:	repnz adc al,0xe6
  408634:	shr    DWORD PTR [edi],1
  408636:	sbb    esp,DWORD PTR [ecx-0x63]
  408639:	ins    BYTE PTR es:[edi],dx
  40863a:	jp     0x4086b4
  40863c:	scas   al,BYTE PTR es:[edi]
  40863d:	(bad)  
  40863e:	minps  xmm1,xmm3
  408641:	xor    edi,esi
  408643:	inc    esp
  408644:	xchg   BYTE PTR [edx+0x20],bh
  408647:	ins    DWORD PTR es:[edi],dx
  408648:	pop    edi
  408649:	add    BYTE PTR [edx],dl
  40864b:	push   ds
  40864c:	fs mov esp,0x28099929
  408652:	push   esi
  408653:	dec    edi
  408654:	shr    bh,cl
  408656:	loop   0x408692
  408658:	or     al,0xb4
  40865a:	dec    edx
  40865b:	cmp    eax,0xbb3c220a
  408660:	enter  0xf4df,0x7a
  408664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408665:	mov    esp,0xc719a68f
  40866a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866b:	imul   BYTE PTR [edi]
  40866d:	jb     0x408604
  40866f:	add    eax,0x47b7177f
  408674:	pop    esi
  408675:	xlat   BYTE PTR ds:[ebx]
  408676:	sbb    BYTE PTR ds:0xca378ac8,al
  40867c:	iret   
  40867d:	push   eax
  40867e:	sub    esi,ecx
  408680:	enter  0xd0f3,0x9d
  408684:	and    al,BYTE PTR [eax]
  408686:	fmul   QWORD PTR [esi]
  408688:	ret    0x5cd5
  40868b:	enter  0x8493,0xb8
  40868f:	enter  0x40b6,0x11
  408693:	and    DWORD PTR [eax],ebx
  408695:	(bad)  
  408696:	cmp    BYTE PTR [esi-0x2982da7c],bl
  40869c:	stos   DWORD PTR es:[edi],eax
  40869d:	fnstsw WORD PTR [ebx]
  40869f:	cld    
  4086a0:	pop    edx
  4086a1:	daa    
  4086a2:	(bad)  
  4086a5:	inc    esi
  4086a6:	xchg   ebp,eax
  4086a7:	aaa    
  4086a8:	iret   
  4086a9:	inc    ecx
  4086aa:	ja     0x408697
  4086ac:	dec    ebp
  4086ad:	sbb    eax,0x29fa5e3a
  4086b2:	cmp    DWORD PTR [ecx+0x4b],0xffffffa8
  4086b6:	pop    edx
  4086b7:	sub    BYTE PTR [edx+ebx*1+0x303faf17],al
  4086be:	and    DWORD PTR [edx],0xfffffff0
  4086c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c2:	sub    eax,0xd24a851b
  4086c7:	das    
  4086c8:	sub    DWORD PTR [edi+ecx*4],ebp
  4086cb:	jmp    0x4086a1
  4086cd:	push   edx
  4086ce:	pop    esp
  4086cf:	rcl    bh,0x59
  4086d2:	cwde   
  4086d3:	mov    bh,bh
  4086d5:	gs loopne 0x4086fd
  4086d8:	(bad)  
  4086d9:	ins    BYTE PTR es:[edi],dx
  4086da:	mov    cl,0x2a
  4086dc:	or     esi,edi
  4086de:	adc    BYTE PTR [ecx+eax*1-0x12],al
  4086e2:	sbb    BYTE PTR [ebp-0x6],dl
  4086e5:	out    dx,eax
  4086e6:	fucomi st,st(0)
  4086e8:	out    dx,al
  4086e9:	pop    ecx
  4086ea:	pop    ebx
  4086eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ec:	xchg   esp,eax
  4086ed:	inc    edi
  4086ee:	add    BYTE PTR ds:0x7a8922c8,bh
  4086f4:	xchg   edx,eax
  4086f5:	xor    DWORD PTR [esi+0x7a11e69d],ebx
  4086fb:	pop    eax
  4086fc:	lock cmp al,0x73
  4086ff:	push   esi
  408700:	inc    ebx
  408701:	sub    al,0xfc
  408703:	jae    0x408688
  408705:	mov    BYTE PTR [ecx+0x20997b2a],cl
  40870b:	xor    esp,esi
  40870d:	fdivr  DWORD PTR [eax+0x28]
  408710:	shl    BYTE PTR [edi-0x64],cl
  408713:	dec    esi
  408714:	jno    0x40873d
  408716:	js     0x40870f
  408718:	jmp    0x763ae474
  40871d:	imul   eax,DWORD PTR ds:0x2725b79c,0x9ca8f5f
  408727:	fmul   QWORD PTR [eax+0x412c1b2e]
  40872d:	int3   
  40872e:	jecxz  0x4086d7
  408730:	dec    eax
  408731:	outs   dx,BYTE PTR ds:[esi]
  408732:	loopne 0x408782
  408734:	adc    edx,ebp
  408736:	test   eax,0x5a5dba99
  40873b:	and    BYTE PTR [edi],bh
  40873d:	loope  0x408769
  40873f:	(bad)  
  408741:	xor    DWORD PTR [edx],esi
  408743:	jl     0x408759
  408745:	xor    dh,BYTE PTR [eax+eiz*2+0x5ff99edf]
  40874c:	ss dec esp
  40874e:	aaa    
  40874f:	mov    ebp,0x35305e70
  408754:	jg     0x4087b5
  408756:	out    0x8a,al
  408758:	or     DWORD PTR [eax+edi*1-0x52],ebp
  40875c:	mov    dl,0x7b
  40875e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40875f:	imul   esp,DWORD PTR [eax+esi*1+0x70],0xffffff93
  408764:	jno    0x408717
  408766:	push   esi
  408767:	jge    0x408743
  408769:	sub    bl,ah
  40876b:	test   DWORD PTR [esp+edi*8+0xd],ecx
  40876f:	daa    
  408770:	lahf   
  408771:	shl    BYTE PTR ds:0x78aa53f7,0xbc
  408778:	mov    dl,0x40
  40877a:	sbb    al,0xbe
  40877c:	jns    0x40879d
  40877e:	outs   dx,DWORD PTR ds:[esi]
  40877f:	xor    DWORD PTR [eax],esp
  408781:	xor    BYTE PTR [esi],dl
  408783:	xchg   esi,eax
  408784:	loopne 0x4087d1
  408786:	adc    ecx,DWORD PTR [edx+ebx*4+0x7c]
  40878a:	aaa    
  40878b:	ins    BYTE PTR es:[edi],dx
  40878c:	arpl   WORD PTR [ebx-0x251afa5],di
  408792:	pop    ebx
  408793:	cmp    dh,ch
  408795:	mov    ebx,ebp
  408797:	mov    esi,0x30c663a6
  40879c:	sub    BYTE PTR [esi+0xa],ch
  40879f:	call   0x7f33d290
  4087a4:	sub    ah,dh
  4087a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087a7:	sar    dl,1
  4087a9:	pop    ds
  4087aa:	aaa    
  4087ab:	mov    ebx,0xf6298746
  4087b0:	add    BYTE PTR [eax-0x1092516f],cl
  4087b6:	sub    bl,BYTE PTR [ebp-0x6c]
  4087b9:	push   es
  4087ba:	out    0xcd,eax
  4087bc:	sbb    dh,BYTE PTR [ecx+0x2d09da1a]
  4087c2:	push   cs
  4087c3:	push   ebp
  4087c4:	sahf   
  4087c5:	lock scas eax,DWORD PTR es:[edi]
  4087c7:	or     eax,0xda3a0b1f
  4087cc:	mov    eax,0xfa0f0ce0
  4087d1:	pushf  
  4087d2:	ds inc edx
  4087d4:	loop   0x408836
  4087d6:	in     al,0x12
  4087d8:	sbb    eax,DWORD PTR ds:0xed9e1a61
  4087de:	sub    al,0xbd
  4087e0:	inc    edx
  4087e1:	push   esp
  4087e2:	not    ah
  4087e4:	cld    
  4087e5:	jne    0x4087b8
  4087e7:	ror    DWORD PTR [ebp+0x2c],1
  4087ea:	mov    edi,0x5699bc44
  4087ef:	push   edx
  4087f0:	lods   eax,DWORD PTR ds:[esi]
  4087f1:	xchg   BYTE PTR ds:0x1d2e9b77,ch
  4087f7:	mov    cl,0x77
  4087f9:	inc    eax
  4087fa:	outs   dx,DWORD PTR ds:[esi]
  4087fb:	daa    
  4087fc:	xchg   DWORD PTR [esi-0x1796e6f4],ebp
  408802:	sub    ch,dh
  408804:	repnz lea esi,[ecx+0x25]
  408808:	repz jmp 0x408797
  40880b:	push   ds
  40880c:	xchg   ecx,eax
  40880d:	fcomp  st(4)
  40880f:	dec    edx
  408810:	mov    eax,ds:0x24d2239
  408815:	mov    edx,0x7f2da97
  40881a:	jl     0x408801
  40881c:	xor    eax,0x3eaf5333
  408821:	xor    ebx,DWORD PTR [edi-0x5e]
  408824:	adc    eax,0x18708c8d
  408829:	jecxz  0x408887
  40882b:	inc    edi
  40882c:	dec    ecx
  40882d:	adc    al,BYTE PTR [edi-0x111b143f]
  408833:	inc    eax
  408834:	xchg   esi,eax
  408835:	push   es
  408836:	sub    DWORD PTR [esi],ebp
  408838:	xor    ch,BYTE PTR [esi]
  40883a:	adc    edx,DWORD PTR [ebx-0x5005bc44]
  408840:	aam    0x63
  408842:	and    ecx,0xffffffdf
  408845:	jle    0x40889a
  408847:	mov    DWORD PTR [ecx+0xa],edi
  40884a:	push   ss
  40884b:	inc    BYTE PTR [ebp-0x3a9223bf]
  408851:	retf   
  408852:	xor    bl,ch
  408854:	cmp    BYTE PTR [eax+esi*1-0x34],al
  408858:	push   ebp
  408859:	es mov ecx,0x257eb29d
  40885f:	pop    esi
  408860:	in     eax,dx
  408861:	mov    esi,0x6b3b7d49
  408866:	lock mov dl,BYTE PTR [edi+0x2d5b73bb]
  40886d:	and    eax,0x67d5039b
  408872:	push   esp
  408873:	dec    edx
  408874:	mov    ds:0x6588e865,al
  408879:	cmp    BYTE PTR [bx+si-0x71],ah
  40887d:	sbb    bl,bl
  40887f:	xor    edi,esp
  408881:	jae    0x40888c
  408883:	lds    esp,FWORD PTR [eax]
  408885:	xchg   dl,ah
  408887:	in     al,dx
  408888:	inc    ebp
  408889:	gs inc esp
  40888b:	push   es
  40888c:	retf   
  40888d:	mov    DWORD PTR [esp+eax*2+0x6462d5f0],edx
  408894:	movsx  ebp,WORD PTR [ecx]
  408897:	sbb    dh,BYTE PTR [ecx]
  408899:	cmp    dl,0x66
  40889c:	sbb    al,BYTE PTR [ecx+0x31]
  40889f:	sbb    al,0x44
  4088a1:	dec    ebx
  4088a2:	clc    
  4088a3:	cli    
  4088a4:	(bad)  
  4088a6:	enter  0xd11c,0x87
  4088aa:	cmp    al,0x37
  4088ac:	pusha  
  4088ad:	dec    eax
  4088ae:	lds    ebx,FWORD PTR [eax+0x558c080b]
  4088b4:	xchg   DWORD PTR [edi+0x5b],esp
  4088b7:	and    al,0x74
  4088b9:	pop    edx
  4088ba:	in     al,0x15
  4088bc:	lods   eax,DWORD PTR ds:[esi]
  4088bd:	popf   
  4088be:	scas   eax,DWORD PTR es:[edi]
  4088bf:	in     al,dx
  4088c0:	sub    eax,0xb7064151
  4088c5:	or     eax,0xbb217b24
  4088ca:	mov    bh,0x16
  4088cc:	jge    0x408917
  4088ce:	(bad)  
  4088cf:	pop    esi
  4088d0:	popa   
  4088d1:	mov    al,dl
  4088d3:	repnz call 0x4e0:0x38816473
  4088db:	(bad)  
  4088de:	lods   al,BYTE PTR ds:[esi]
  4088df:	fsub   QWORD PTR [ebx-0x26]
  4088e2:	fstp   DWORD PTR [edi-0x4b]
  4088e5:	mov    BYTE PTR [esi+0x67],ch
  4088e8:	fiadd  WORD PTR [eax-0x1196a0d5]
  4088ee:	lds    edi,FWORD PTR [edx]
  4088f0:	pop    ebx
  4088f1:	cmp    eax,0x900951a7
  4088f6:	or     DWORD PTR [ecx-0x37],ebx
  4088f9:	xor    edi,DWORD PTR [edi+0x37b82093]
  4088ff:	icebp  
  408900:	push   cs
  408901:	mov    ebx,gs
  408903:	inc    ebx
  408904:	loopne 0x4088d9
  408906:	add    BYTE PTR [ebx-0x6a],al
  408909:	sub    ebx,DWORD PTR [ecx-0x79]
  40890c:	dec    esp
  40890d:	push   cs
  40890e:	addr16 jmp 0x40892d
  408911:	jmp    DWORD PTR [ebp-0x59b8cc11]
  408918:	add    ch,bh
  40891a:	jb     0x408915
  40891c:	ins    BYTE PTR es:[edi],dx
  40891d:	das    
  40891e:	xchg   dh,dh
  408920:	outs   dx,DWORD PTR ds:[esi]
  408921:	or     eax,0x292f5897
  408926:	sysret 
  408928:	add    eax,0x1794a58e
  40892d:	push   edi
  40892e:	or     ebp,edi
  408930:	idiv   BYTE PTR [ecx-0x7f]
  408933:	push   ss
  408934:	add    dh,bl
  408936:	arpl   WORD PTR [ecx],di
  408938:	popa   
  408939:	into   
  40893a:	enter  0xe471,0xff
  40893e:	sub    eax,DWORD PTR [ebx-0x5]
  408941:	ror    BYTE PTR [edx+0x1fe0f9b6],1
  408947:	xchg   ebp,eax
  408948:	std    
  408949:	ins    BYTE PTR es:[edi],dx
  40894a:	repnz fistp QWORD PTR [edx]
  40894d:	sub    esp,DWORD PTR [edx-0x2fcb668f]
  408953:	mov    eax,0x1951594c
  408958:	idiv   DWORD PTR [edi-0x1f960f08]
  40895e:	or     DWORD PTR [ecx+0x5f],edi
  408961:	cdq    
  408962:	cmp    BYTE PTR [edx+0x418819f4],0xdd
  408969:	pushf  
  40896a:	pusha  
  40896b:	xor    esp,DWORD PTR [ecx-0x2d]
  40896e:	inc    esp
  40896f:	ret    0xcf1d
  408972:	push   0xffffffd6
  408974:	loopne 0x408975
  408976:	call   0xc20a:0xd05658e9
  40897d:	and    al,BYTE PTR [ecx]
  40897f:	ret    
  408980:	sahf   
  408981:	mov    esi,0x7965d731
  408986:	mov    cl,0xa9
  408988:	clc    
  408989:	jno    0x40898e
  40898b:	bound  esp,QWORD PTR [edi]
  40898d:	xor    DWORD PTR [esi-0x42],edx
  408990:	or     DWORD PTR [ebx+edx*1],edx
  408993:	aas    
  408994:	out    dx,eax
  408995:	adc    DWORD PTR [edi+0x6e6c0dc0],0x53b3abc
  40899f:	cdq    
  4089a0:	or     eax,0x7e64e4fd
  4089a5:	sbb    BYTE PTR ds:0x4162e019,ch
  4089ab:	sub    eax,0xc812f1e2
  4089b0:	sub    bl,BYTE PTR [eax]
  4089b2:	jnp    0x408935
  4089b4:	xchg   DWORD PTR [edi+0x73e8d0f9],ebx
  4089ba:	mov    edi,0x6c160e41
  4089c0:	mov    eax,0xca71d0ba
  4089c5:	shl    DWORD PTR [ebx+0x2018297e],1
  4089cb:	inc    ebp
  4089cc:	leave  
  4089cd:	repz aas 
  4089cf:	sbb    dh,BYTE PTR [esi+0x21]
  4089d2:	(bad)  
  4089d3:	clc    
  4089d4:	scas   al,BYTE PTR es:[edi]
  4089d5:	mov    ecx,0x3937a001
  4089da:	out    0x88,eax
  4089dc:	(bad)  
  4089dd:	sbb    BYTE PTR [ebx],cl
  4089df:	lods   eax,DWORD PTR ds:[esi]
  4089e0:	or     al,0x84
  4089e2:	sbb    eax,0x90e824f2
  4089e7:	daa    
  4089e8:	int    0x5b
  4089ea:	cld    
  4089eb:	in     al,0x95
  4089ed:	mov    eax,ds:0x745c89e2
  4089f2:	fild   DWORD PTR [ebx+edi*1]
  4089f5:	imul   ebp,DWORD PTR [ecx],0xef168f00
  4089fb:	pop    ecx
  4089fc:	ins    BYTE PTR es:[edi],dx
  4089fd:	mov    ecx,0x7f48d898
  408a02:	jmp    0x5e00d783
  408a07:	fld    TBYTE PTR [ebp+eiz*1+0x7b]
  408a0b:	jmp    0x3d858379
  408a10:	xchg   BYTE PTR [edx+eiz*2+0x551b2acd],ch
  408a17:	fwait
  408a18:	scas   al,BYTE PTR es:[edi]
  408a19:	push   cs
  408a1a:	das    
  408a1b:	adc    ah,BYTE PTR [ecx-0x573be8be]
  408a21:	dec    ebx
  408a22:	xchg   BYTE PTR [eax+0x3d540281],bl
  408a28:	cmp    ebx,DWORD PTR [eax]
  408a2a:	fidiv  WORD PTR [ebx+0x4e2329c1]
  408a30:	and    BYTE PTR [ecx+0x4a02148b],dl
  408a36:	add    ebp,DWORD PTR [ebx-0x72]
  408a39:	push   edi
  408a3a:	push   cs
  408a3b:	pop    ss
  408a3c:	dec    esi
  408a3d:	or     eax,0x68ec61a4
  408a42:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408a44:	ror    dl,cl
  408a46:	loopne 0x408a12
  408a48:	inc    ecx
  408a49:	mov    ch,0x69
  408a4b:	lods   al,BYTE PTR ds:[esi]
  408a4d:	dec    esp
  408a4e:	inc    esp
  408a4f:	cmp    al,BYTE PTR [ebx+eiz*8-0x51]
  408a53:	pop    edx
  408a54:	pop    edi
  408a55:	or     ah,BYTE PTR ds:0xe8993df3
  408a5b:	dec    eax
  408a5c:	arpl   WORD PTR [edx-0x40128f19],sp
  408a62:	outs   dx,BYTE PTR ds:[esi]
  408a63:	cmp    ah,0x1b
  408a66:	(bad)  
  408a67:	test   al,0x72
  408a69:	popf   
  408a6a:	xor    ecx,0xffffffb2
  408a6d:	sub    BYTE PTR [ebp+0x662cda1],cl
  408a73:	adc    ebx,DWORD PTR [ecx-0x7a]
  408a76:	jns    0x408a0e
  408a78:	dec    esi
  408a79:	rol    BYTE PTR [edi],0x38
  408a7c:	fnstenv [edx-0x4df4400d]
  408a82:	mov    ah,0xfa
  408a84:	into   
  408a85:	xchg   BYTE PTR [edi+ebp*4-0x356f5032],dh
  408a8c:	push   ds
  408a8d:	sti    
  408a8e:	jp     0x408a4e
  408a90:	and    al,0x94
  408a92:	jmp    0x45526db3
  408a97:	sub    DWORD PTR [ebp-0x76],esp
  408a9a:	test   al,0x5c
  408a9c:	adc    DWORD PTR [ebx],ebx
  408a9e:	inc    ecx
  408a9f:	inc    esp
  408aa0:	add    ecx,DWORD PTR [ecx+0x47dd19cc]
  408aa6:	mov    esi,0x78668a38
  408aab:	and    dl,ch
  408aad:	sub    eax,0x6358ed2b
  408ab2:	pop    ss
  408ab3:	popf   
  408ab4:	(bad)  
  408ab5:	push   esi
  408ab6:	pop    ecx
  408ab7:	pushf  
  408ab8:	cld    
  408ab9:	out    0x40,ax
  408abc:	out    0xd6,eax
  408abe:	mov    dh,0x6d
  408ac0:	sahf   
  408ac1:	push   ds
  408ac2:	repnz addr16 pop edx
  408ac5:	shl    ecx,cl
  408ac7:	jo     0x408a59
  408ac9:	push   cs
  408aca:	inc    esi
  408acb:	mov    gs,WORD PTR [eax]
  408acd:	sub    edx,edx
  408acf:	jb     0x408b17
  408ad1:	xchg   esi,eax
  408ad2:	mov    bl,0x40
  408ad4:	mov    ebx,0xfa6a77e
  408ad9:	fistp  WORD PTR [eax+0x7f353206]
  408adf:	ds out 0x6c,al
  408ae2:	sbb    bl,BYTE PTR [esi-0x39]
  408ae5:	popa   
  408ae6:	iret   
  408ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae8:	in     eax,0x54
  408aea:	add    esi,DWORD PTR [esi+0x6e71a783]
  408af0:	and    BYTE PTR [ebx],dl
  408af2:	mov    dl,0x5a
  408af4:	aas    
  408af5:	and    eax,0x8a400ace
  408afa:	loopne 0x408aef
  408afc:	sub    DWORD PTR [eax+edi*8+0xd],edi
  408b00:	mov    edi,0x2d7a463
  408b05:	xor    al,0xd4
  408b07:	or     al,0xe0
  408b09:	mov    esi,0x7812b2a5
  408b0e:	icebp  
  408b0f:	and    DWORD PTR [edx+0x24],esi
  408b12:	xlat   BYTE PTR ds:[ebx]
  408b13:	inc    ebp
  408b14:	inc    ecx
  408b15:	xor    eax,0xc53ac82d
  408b1a:	inc    ecx
  408b1b:	push   esi
  408b1c:	jnp    0x408b4c
  408b1e:	mov    eax,ds:0x7b11129
  408b23:	sub    dh,BYTE PTR [ecx+0x1ef3a94]
  408b29:	inc    ebp
  408b2a:	setg   BYTE PTR [edi-0x7eb30fc4]
  408b31:	bnd jne 0x408b6a
  408b34:	cmp    ecx,DWORD PTR ds:0x9d4a23c4
  408b3a:	inc    esi
  408b3b:	xor    al,0xc3
  408b3d:	add    ecx,DWORD PTR [esi+ecx*4]
  408b40:	mov    ebx,DWORD PTR [eax-0x27f328cf]
  408b46:	sub    BYTE PTR [esi],cl
  408b48:	sbb    DWORD PTR [ecx],0x68
  408b4b:	fs and al,0x4b
  408b4e:	mov    al,0xd4
  408b50:	adc    BYTE PTR [edi-0x24],bl
  408b53:	jns    0x408adf
  408b55:	stos   BYTE PTR es:[edi],al
  408b56:	test   BYTE PTR [edi-0x1c],dh
  408b59:	sbb    edi,DWORD PTR [eax+0x8]
  408b5c:	test   DWORD PTR [eax],edx
  408b5e:	sbb    esp,ebx
  408b60:	ficomp DWORD PTR [eax+edx*2]
  408b63:	adc    al,0x45
  408b65:	cs xor eax,0x7a48940d
  408b6b:	fst    QWORD PTR [edx-0x79]
  408b6e:	add    eax,0xdcdbd11a
  408b73:	mov    ds:0x3e17c7e1,al
  408b78:	das    
  408b79:	test   DWORD PTR [ecx],ecx
  408b7b:	rol    ebx,1
  408b7d:	clc    
  408b7e:	lahf   
  408b7f:	(bad)
  408b83:	dec    esi
  408b84:	das    
  408b85:	cwde   
  408b86:	adc    esp,DWORD PTR [esi+0x6e79465b]
  408b8c:	mov    ds:0xb776a037,eax
  408b91:	dec    ecx
  408b92:	ins    DWORD PTR es:[edi],dx
  408b93:	sub    eax,0xfe16e5d8
  408b98:	int3   
  408b99:	popf   
  408b9a:	rcr    BYTE PTR ds:[esi+0x483bbf28],cl
  408ba1:	ror    DWORD PTR [edi+0x72ee10ed],cl
  408ba7:	daa    
  408ba8:	and    cl,BYTE PTR [edi+0x66]
  408bab:	test   al,0xeb
  408bad:	mov    ah,dl
  408baf:	sbb    esi,edi
  408bb1:	out    dx,al
  408bb2:	ret    0x6fb1
  408bb5:	aaa    
  408bb6:	es jmp 0x408b90
  408bb9:	lahf   
  408bba:	push   edx
  408bbb:	xchg   ebx,eax
  408bbc:	daa    
  408bbd:	mov    eax,0x51f2140f
  408bc2:	mov    bh,dl
  408bc4:	(bad)  
  408bc5:	in     al,dx
  408bc6:	sbb    BYTE PTR [ebp+0x29fa85ee],0x60
  408bcd:	and    BYTE PTR [edi+eiz*1],dh
  408bd0:	pop    ebx
  408bd1:	jo     0x408be0
  408bd3:	pop    edx
  408bd4:	retf   0xbb11
  408bd7:	inc    eax
  408bd8:	mov    al,0x62
  408bda:	push   0x14d5c530
  408bdf:	js     0x408bd7
  408be1:	mov    al,ds:0xdbf5044f
  408be6:	push   esp
  408be7:	mov    WORD PTR [ebp+0x7caaaf69],?
  408bed:	aad    0x25
  408bef:	pop    eax
  408bf0:	fcmovne st,st(0)
  408bf2:	push   ds
  408bf3:	jmp    0x408be5
  408bf5:	push   eax
  408bf6:	ret    
  408bf7:	stc    
  408bf8:	pop    es
  408bf9:	jp     0x408b8e
  408bfb:	push   ss
  408bfc:	call   0xae60:0xabee7f7
  408c03:	sub    al,0x7f
  408c05:	or     al,0x8f
  408c07:	dec    esp
  408c08:	aaa    
  408c09:	ret    
  408c0a:	imul   edi,edi,0x9a529102
  408c10:	or     ecx,DWORD PTR [ebp-0x20f7d1d3]
  408c16:	jle    0x408c77
  408c18:	xchg   edi,eax
  408c19:	out    0xda,al
  408c1b:	shl    BYTE PTR [ecx+edi*4-0x4843593a],0xbf
  408c23:	mov    esi,0x71aed758
  408c28:	mov    edx,0xe226970a
  408c2d:	dec    edx
  408c2e:	and    ah,BYTE PTR [ecx+0x49]
  408c31:	out    dx,al
  408c32:	(bad)  
  408c33:	pop    edx
  408c34:	adc    esp,esp
  408c36:	loope  0x408c26
  408c38:	shl    dh,cl
  408c3a:	jae    0x408c6b
  408c3c:	xor    BYTE PTR fs:[ebx-0x1e],0xf3
  408c41:	cs vpshab ymm9,xmm6,xmm3
  408c47:	mov    cl,0xd3
  408c49:	add    DWORD PTR [edi+0x322c3c2b],esi
  408c4f:	sbb    esp,DWORD PTR [ecx+0x869bb54]
  408c55:	stos   DWORD PTR es:[edi],eax
  408c56:	or     BYTE PTR [edi-0x65],bl
  408c59:	das    
  408c5a:	jge    0x408c25
  408c5c:	jg     0x408c54
  408c5e:	fsubp  st(1),st
  408c60:	fwait
  408c61:	sbb    eax,esp
  408c63:	jl     0x408cbb
  408c65:	mov    DWORD PTR [edx+0x227bd972],eax
  408c6b:	or     eax,0x8967371
  408c70:	ins    DWORD PTR es:[edi],dx
  408c71:	push   ebx
  408c72:	pop    edx
  408c73:	shl    ebp,0x57
  408c76:	stc    
  408c77:	mov    BYTE PTR [ecx+0x6e],al
  408c7a:	lods   eax,DWORD PTR ds:[esi]
  408c7b:	cmp    ebx,DWORD PTR ds:0xc434f31d
  408c81:	jmp    0x408c60
  408c83:	sub    BYTE PTR [ecx],0x2
  408c86:	xor    eax,0xbb368564
  408c8b:	inc    edx
  408c8c:	inc    ebx
  408c8d:	dec    eax
  408c8e:	jmp    0x67b0:0xa8be72c7
  408c95:	(bad)  
  408c96:	adc    eax,0xbd98c5df
  408c9b:	test   al,0xe9
  408c9d:	les    edi,FWORD PTR [eax-0x674fb7cd]
  408ca3:	dec    ebp
  408ca4:	aad    0xbc
  408ca6:	jmp    0xc874:0x29dfabea
  408cad:	and    esp,DWORD PTR [ebx-0x2e]
  408cb0:	shl    esp,1
  408cb2:	pop    es
  408cb3:	pop    edx
  408cb4:	in     al,0x3e
  408cb6:	pop    es
  408cb7:	push   esi
  408cb8:	xor    al,0xe5
  408cba:	outs   dx,DWORD PTR ds:[esi]
  408cbb:	out    dx,al
  408cbc:	pop    es
  408cbd:	pop    edi
  408cbe:	gs hlt 
  408cc0:	pop    ebp
  408cc1:	test   DWORD PTR [ebp+eiz*8+0x99377b],ecx
  408cc8:	loopne 0x408cb9
  408cca:	add    eax,0xb78f3ae9
  408ccf:	aaa    
  408cd0:	in     al,0x43
  408cd2:	adc    DWORD PTR [ebp+0xc23521e],esp
  408cd8:	aas    
  408cd9:	mov    ebp,0x3eccc532
  408cde:	setle  BYTE PTR [edi]
  408ce1:	sub    ecx,edi
  408ce3:	sbb    ah,BYTE PTR [edx-0x44]
  408ce6:	cdq    
  408ce7:	sub    al,0xee
  408ce9:	scas   al,BYTE PTR es:[edi]
  408cea:	push   cs
  408ceb:	add    DWORD PTR [ebp+ebx*4-0x4ce323a2],0x9a27e77d
  408cf6:	xor    DWORD PTR [edx+0x1],ecx
  408cf9:	lds    ebp,FWORD PTR [edx]
  408cfb:	jge    0x408cb1
  408cfd:	sbb    al,0x20
  408cff:	mov    ds,WORD PTR [esi+eax*1+0x4d00e0bd]
  408d06:	push   0x4388cbf4
  408d0b:	lock mov esi,0x5baa8939
  408d11:	(bad)  
  408d12:	xor    esi,eax
  408d14:	loopne 0x408cc7
  408d16:	and    dh,cl
  408d18:	ss daa 
  408d1a:	mov    eax,0x6c5e4775
  408d1f:	loop   0x408d42
  408d21:	leave  
  408d22:	mov    dl,0x75
  408d24:	test   al,0xba
  408d26:	lods   eax,DWORD PTR ds:[esi]
  408d27:	dec    edi
  408d28:	xchg   esi,eax
  408d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d2a:	fidiv  WORD PTR [ebp+0x2c5f1d31]
  408d30:	cmp    eax,0xc3e32a2
  408d35:	fwait
  408d36:	add    eax,0x54117ad0
  408d3b:	mov    DWORD PTR [ecx+0x32ce54ad],0xbc250339
  408d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d46:	daa    
  408d47:	aam    0x99
  408d49:	jge    0x408ccc
  408d4b:	mov    eax,0xc8c93213
  408d50:	mov    cl,0x95
  408d52:	push   esp
  408d53:	xor    DWORD PTR [ebp+0x51],ecx
  408d56:	sub    DWORD PTR [ebx+0x4d],ebp
  408d59:	mov    WORD PTR [edi+0x5235c6c1],es
  408d5f:	mov    esi,edi
  408d61:	lea    edi,[esi-0x2ac58bee]
  408d67:	pop    ebx
  408d68:	in     al,dx
  408d69:	pop    edx
  408d6a:	pop    ds
  408d6b:	jg     0x408d92
  408d6d:	dec    edi
  408d6e:	ins    DWORD PTR es:[edi],dx
  408d6f:	ins    DWORD PTR es:[edi],dx
  408d70:	push   ss
  408d71:	push   cs
  408d72:	cmp    BYTE PTR [edx-0x1c],cl
  408d75:	xor    esp,0xcd3f556f
  408d7b:	fiadd  DWORD PTR [edx]
  408d7d:	dec    esp
  408d7e:	cmp    esi,DWORD PTR [ebx+0x2b]
  408d81:	push   cs
  408d82:	pop    esi
  408d83:	push   ss
  408d84:	mov    bh,0x21
  408d86:	pop    ebp
  408d87:	dec    ecx
  408d88:	pop    edi
  408d89:	mov    ebp,0xa1e01203
  408d8e:	xchg   cl,bh
  408d90:	add    DWORD PTR [edx-0x2bb9bb9c],esi
  408d96:	sbb    eax,0xdc717b15
  408d9b:	popf   
  408d9c:	sbb    al,0x57
  408d9e:	adc    al,0x5c
  408da0:	jne    0x408d32
  408da2:	xor    BYTE PTR [ebp-0x73],bh
  408da5:	sbb    ecx,DWORD PTR ds:[esi+0x97f3bc9]
  408dac:	fsubr  QWORD PTR [ebx-0x52ecf590]
  408db2:	aam    0xc0
  408db4:	sbb    ecx,DWORD PTR [eax+esi*1-0x52]
  408db8:	push   edi
  408db9:	out    0x3f,eax
  408dbb:	lahf   
  408dbc:	cdq    
  408dbd:	icebp  
  408dbe:	inc    BYTE PTR [ebx]
  408dc0:	push   ebp
  408dc1:	cmc    
  408dc2:	cwde   
  408dc3:	xchg   ecx,eax
  408dc4:	dec    edi
  408dc5:	mov    bl,0xab
  408dc7:	cmp    eax,0xb500398a
  408dcc:	pop    ecx
  408dcd:	inc    edi
  408dce:	(bad)  
  408dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dd0:	jnp    0x408dd7
  408dd2:	fimul  WORD PTR [eax+0x101f7b12]
  408dd8:	jmp    0x5d51ee17
  408ddd:	mov    esp,0xd604184f
  408de2:	push   ss
  408de3:	xchg   edi,eax
  408de4:	mov    edi,0x89af34c5
  408de9:	jb     0x408e54
  408deb:	adc    al,0x73
  408ded:	rcr    bl,cl
  408def:	jae    0x408dfc
  408df1:	push   ebp
  408df2:	daa    
  408df3:	add    eax,0x7ca09f14
  408df8:	sub    BYTE PTR [eax-0x3a34c0e4],dl
  408dfe:	out    dx,eax
  408dff:	or     al,0x55
  408e01:	inc    ebp
  408e02:	xor    al,ah
  408e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e05:	mov    DWORD PTR [ebx],0x25c23571
  408e0b:	ror    DWORD PTR [eax],0x51
  408e0e:	and    al,BYTE PTR [eax+0x37]
  408e11:	or     al,0x9f
  408e13:	mov    edx,0x285d02b1
  408e18:	push   edi
  408e19:	inc    ebp
  408e1a:	test   eax,0x3afd410d
  408e1f:	addr16 xor eax,0x50b5872c
  408e25:	and    DWORD PTR [edi+0x9c7c9f8],ebp
  408e2b:	cdq    
  408e2c:	jbe    0x408ded
  408e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2f:	ret    
  408e30:	mov    ebp,0x8034f6bb
  408e35:	bound  ecx,QWORD PTR [ebp-0xa]
  408e38:	call   0xd11:0x82b25090
  408e3f:	sub    eax,0xa905563b
  408e44:	push   esi
  408e45:	pop    esi
  408e46:	fcmovu st,st(0)
  408e48:	jno    0x408e58
  408e4a:	js     0x408e02
  408e4c:	push   edx
  408e4d:	mov    ah,0x96
  408e4f:	pop    ebx
  408e50:	in     al,0x17
  408e52:	mov    bl,0x1f
  408e54:	das    
  408e55:	jns    0x408e8b
  408e57:	jg     0x408eb3
  408e59:	test   eax,0x7272b9f6
  408e5e:	fcom   QWORD PTR [eax-0xddf8e4a]
  408e64:	dec    ecx
  408e65:	mov    esi,0xd5a2818e
  408e6a:	in     al,dx
  408e6b:	in     al,0x14
  408e6d:	dec    esi
  408e6e:	ins    DWORD PTR es:[edi],dx
  408e6f:	repz pop eax
  408e71:	loope  0x408e1f
  408e73:	stos   DWORD PTR es:[edi],eax
  408e74:	inc    ecx
  408e75:	mov    eax,ds:0xbb2ba993
  408e7a:	mov    ah,0x20
  408e7c:	jmp    0x5623:0xf8ef9182
  408e83:	or     dh,ah
  408e85:	(bad)  
  408e86:	mov    ch,bl
  408e88:	mov    dl,BYTE PTR [esi-0xd21a3e6]
  408e8e:	aaa    
  408e8f:	jbe    0x408e34
  408e91:	mov    esi,0xbeecb17b
  408e96:	jmp    0x99f8:0xe52c8f9b
  408e9d:	outs   dx,BYTE PTR ds:[esi]
  408e9e:	leave  
  408e9f:	stc    
  408ea0:	add    eax,0xc9966e7f
  408ea5:	mov    cl,0x17
  408ea7:	loop   0x408e4a
  408ea9:	out    dx,al
  408eaa:	ret    0xede1
  408ead:	stos   DWORD PTR es:[edi],eax
  408eae:	test   al,0x9c
  408eb0:	out    0x2e,eax
  408eb2:	xor    al,0x9c
  408eb4:	push   edi
  408eb5:	inc    edx
  408eb6:	jbe    0x408e89
  408eb8:	xchg   esi,eax
  408eb9:	addr16 call 0xedd42c6b
  408ebf:	xor    eax,0xa40e66d5
  408ec4:	mov    bl,BYTE PTR [edx-0x21]
  408ec7:	nop
  408ec8:	inc    esp
  408ec9:	adc    bl,BYTE PTR [ebx]
  408ecb:	repnz adc edi,edi
  408ece:	jp     0x408efe
  408ed0:	pop    ecx
  408ed1:	daa    
  408ed2:	shl    BYTE PTR [esi+0x40],cl
  408ed5:	rol    BYTE PTR [esp+edx*2+0x7c1707f4],cl
  408edc:	rcl    DWORD PTR ds:0x3a1d849b,1
  408ee2:	jecxz  0x408f3a
  408ee4:	lock mov esi,0x14312e3d
  408eea:	jl     0x408f4e
  408eec:	dec    esi
  408eed:	(bad)  
  408eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eef:	inc    ecx
  408ef0:	mov    ds:0xd939b1f1,al
  408ef5:	das    
  408ef6:	xchg   esp,eax
  408ef7:	pop    esp
  408ef8:	ret    
  408ef9:	sub    DWORD PTR [ecx+0x756d0ce9],edx
  408eff:	cmp    al,BYTE PTR [edi+0x14]
  408f02:	fcom   DWORD PTR [eax]
  408f04:	mov    WORD PTR [ecx+edi*1],fs
  408f07:	xchg   ebx,eax
  408f08:	out    0x44,eax
  408f0a:	(bad)  
  408f0b:	push   cs
  408f0c:	in     eax,0x29
  408f0e:	add    dh,BYTE PTR [eax]
  408f10:	iret   
  408f11:	mov    al,es:0x6969c862
  408f17:	arpl   si,bx
  408f19:	fcomp  st(7)
  408f1b:	sub    al,0xc0
  408f1d:	xor    DWORD PTR [esi+0x136c5bfb],edx
  408f23:	or     DWORD PTR [eax-0x2e],ebx
  408f26:	xchg   ebx,eax
  408f27:	jo     0x408f55
  408f29:	add    edi,DWORD PTR [ebx]
  408f2b:	out    dx,eax
  408f2c:	xchg   edx,eax
  408f2d:	jmp    0xd63d:0xb3b5378b
  408f34:	mov    esp,0x1e1458c9
  408f39:	xchg   DWORD PTR [eax],ecx
  408f3b:	retf   0x6711
  408f3e:	sub    esi,edi
  408f40:	mov    ch,0xa
  408f42:	or     dh,BYTE PTR [ebp+0x5c]
  408f45:	jge    0x408f91
  408f47:	mov    dl,BYTE PTR [ebp-0x29]
  408f4a:	retf   
  408f4b:	push   edi
  408f4c:	jle    0x408ece
  408f4e:	mov    edi,0xb8c624f8
  408f53:	dec    esi
  408f54:	mov    ebp,0x39f09031
  408f59:	or     eax,0xa1e5b2fb
  408f5e:	in     al,0x0
  408f60:	mov    ds:0x2dcd40c8,eax
  408f65:	adc    eax,0xbcdf2460
  408f6a:	and    eax,0x95df21f6
  408f6f:	jge    0x408fcb
  408f71:	lahf   
  408f72:	add    cl,ch
  408f74:	xchg   esi,eax
  408f75:	xchg   ebp,eax
  408f76:	imul   ebx,edx,0x731c8064
  408f7c:	adc    al,0xb2
  408f7e:	or     al,0x14
  408f80:	sbb    eax,0xe88390cc
  408f85:	or     esp,esi
  408f87:	sub    BYTE PTR [esi-0x12],al
  408f8a:	jo     0x408fbe
  408f8c:	lahf   
  408f8d:	iret   
  408f8e:	out    dx,eax
  408f8f:	js     0x40900a
  408f91:	jbe    0x408fb0
  408f93:	cmp    esp,esp
  408f95:	pop    ebx
  408f96:	(bad)  
  408f97:	xchg   edi,eax
  408f98:	inc    edi
  408f99:	mov    dh,0x48
  408f9b:	sar    DWORD PTR [edx+0x4fbe94b],1
  408fa1:	dec    esp
  408fa2:	ret    
  408fa3:	dec    edx
  408fa4:	cdq    
  408fa5:	cs push ds
  408fa7:	scas   al,BYTE PTR es:[edi]
  408fa8:	lea    esp,[eax+0x72]
  408fab:	xlat   BYTE PTR ds:[ebx]
  408fac:	mov    ss,edi
  408fae:	xchg   edi,eax
  408fb0:	pop    ecx
  408fb1:	mov    eax,0x6e160479
  408fb6:	enter  0x2131,0x63
  408fba:	xchg   edx,eax
  408fbb:	or     ebp,DWORD PTR [ebp+ebp*8+0x48]
  408fbf:	nop
  408fc0:	xchg   esi,eax
  408fc1:	retf   0xbc2c
  408fc4:	mov    ds:0x73db7c2a,eax
  408fc9:	shr    DWORD PTR [eax-0x36db92b9],cl
  408fcf:	pop    esp
  408fd0:	div    DWORD PTR [ebx]
  408fd2:	mov    ebx,0x5e1c1631
  408fd7:	imul   esp,ecx,0x7592410a
  408fdd:	int3   
  408fde:	es ret 0xf68c
  408fe2:	jecxz  0x408fe7
  408fe4:	xor    edx,DWORD PTR [ebx-0x48]
  408fe7:	mov    DWORD PTR [ecx+ebx*8],0xb294e8d1
  408fee:	xchg   edi,eax
  408fef:	add    bl,BYTE PTR [ebx-0x75]
  408ff2:	xchg   ebp,eax
  408ff3:	mov    ecx,DWORD PTR [edx-0x403f1dee]
  408ff9:	pop    esi
  408ffa:	adc    al,al
  408ffc:	xchg   edi,eax
  408ffd:	ret    
  408ffe:	mov    eax,DWORD PTR cs:0x99db8585
  409005:	push   0x60d74d08
  40900a:	test   ah,cl
  40900c:	push   ebp
  40900d:	push   ds
  40900e:	aas    
  40900f:	pushf  
  409010:	in     al,dx
  409011:	sbb    DWORD PTR [ecx-0x29e52f1c],ebx
  409017:	sbb    edi,0x6c
  40901a:	push   edi
  40901b:	aad    0x37
  40901d:	mul    edx
  40901f:	add    bh,dh
  409021:	rol    bl,0xe1
  409024:	js     0x4090a0
  409026:	xchg   ecx,eax
  409027:	(bad)  
  409028:	pop    ss
  409029:	lods   al,BYTE PTR ds:[esi]
  40902a:	push   0xffffff8c
  40902c:	ds and eax,0x922577ea
  409032:	or     DWORD PTR ds:0x1e50925b,ebp
  409038:	lds    edi,FWORD PTR [esp+ecx*2]
  40903b:	cwde   
  40903c:	mov    DWORD PTR [esi],ecx
  40903e:	jo     0x6d04c112
  409044:	jge    0x409006
  409046:	jbe    0x409082
  409048:	xor    bh,al
  40904a:	push   ebx
  40904b:	into   
  40904c:	fdivr  DWORD PTR [si]
  40904f:	xor    al,0x58
  409051:	cmp    edx,DWORD PTR [ecx]
  409053:	ins    BYTE PTR es:[edi],dx
  409054:	dec    ebp
  409055:	jg     0x409098
  409057:	cld    
  409058:	fldz   
  40905a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40905b:	pop    ecx
  40905c:	sub    BYTE PTR [ebx+0x66d2d942],dh
  409062:	or     cl,BYTE PTR [edx-0x17]
  409065:	fucomp st(7)
  409067:	mov    cx,0x9c5b
  40906b:	stc    
  40906c:	dec    ebx
  40906d:	xchg   ebx,eax
  40906e:	inc    edi
  40906f:	push   esi
  409070:	mov    eax,0x4ce6e63c
  409075:	aam    0x84
  409077:	lods   al,BYTE PTR ds:[esi]
  409078:	cmc    
  409079:	jno    0x4090a8
  40907b:	js     0x4090ae
  40907d:	imul   edi,DWORD PTR [edx-0x41],0x8cf66afa
  409084:	cmp    BYTE PTR [eax],0x4b
  409087:	shl    bl,0xb7
  40908a:	(bad)  [eax+0x26]
  40908d:	js     0x4090c2
  40908f:	lods   al,BYTE PTR ds:[esi]
  409090:	sbb    eax,0x92d0d500
  409095:	sub    al,0x90
  409097:	div    bh
  409099:	inc    edx
  40909a:	(bad)  
  40909c:	cmp    DWORD PTR [eax],0x22b3b8db
  4090a2:	mov    BYTE PTR [ebp+0x329a8042],bl
  4090a8:	rol    BYTE PTR [ebx+0x59d0b236],0xb2
  4090af:	popf   
  4090b0:	cmp    BYTE PTR [eax+esi*1+0x3a],bh
  4090b4:	cmc    
  4090b5:	inc    edx
  4090b6:	push   edx
  4090b7:	fiadd  DWORD PTR [ebx]
  4090b9:	add    eax,0xdb9b5eb4
  4090bf:	push   ebp
  4090c0:	or     eax,0xa7c0604
  4090c5:	outs   dx,DWORD PTR ds:[esi]
  4090c6:	push   0xffffff90
  4090c8:	leave  
  4090c9:	mov    esp,0x13cde021
  4090ce:	fstp   DWORD PTR [edx+0x32]
  4090d1:	xor    ah,BYTE PTR [esi]
  4090d3:	mov    eax,0x56b192a5
  4090d8:	xor    ebp,DWORD PTR [ecx+esi*2+0x6c]
  4090dc:	call   0x2ef38b2d
  4090e1:	mov    ch,0x85
  4090e3:	out    dx,al
  4090e4:	xchg   ebp,eax
  4090e5:	cld    
  4090e6:	add    al,0xda
  4090e8:	in     eax,dx
  4090e9:	(bad)  
  4090ea:	sbb    al,0x2a
  4090ec:	icebp  
  4090ed:	dec    eax
  4090ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ef:	hlt    
  4090f0:	fisubr WORD PTR [edi+0x74b5ba20]
  4090f6:	xchg   edi,eax
  4090f7:	sub    ch,BYTE PTR [ecx-0x7b]
  4090fa:	jge    0x409162
  4090fc:	(bad)  
  4090fd:	rcl    eax,1
  4090ff:	add    DWORD PTR [esi+0x26],eax
  409102:	mov    ah,0x25
  409104:	and    dl,0x0
  409107:	pop    esi
  409109:	out    0x53,eax
  40910b:	aam    0x1e
  40910d:	inc    eax
  40910e:	sub    ecx,0x1a10e240
  409114:	lea    eax,[ecx-0x4e]
  409117:	jnp    0x40912a
  409119:	popa   
  40911a:	ins    BYTE PTR es:[edi],dx
  40911b:	xchg   edx,eax
  40911c:	add    ah,dh
  40911e:	dec    ebp
  40911f:	adc    DWORD PTR [ebp+0x27],edi
  409122:	je     0x4090d1
  409124:	xor    al,0x10
  409126:	jae    0x4091a7
  409128:	out    dx,eax
  409129:	ins    BYTE PTR es:[edi],dx
  40912a:	cld    
  40912b:	cdq    
  40912c:	popa   
  40912d:	cmp    DWORD PTR [edi+edx*4+0x6],esi
  409131:	sti    
  409132:	jb     0x409132
  409134:	cmp    eax,0xf88fa4d
  409139:	aaa    
  40913a:	xchg   edx,eax
  40913b:	sbb    al,0xe2
  40913d:	adc    edx,DWORD PTR [ebp+0x9]
  409140:	mov    ds:0x73acb4d5,eax
  409145:	cmp    ch,BYTE PTR [ebp-0x2ee777d9]
  40914b:	int3   
  40914c:	bound  ebp,QWORD PTR [esi]
  40914e:	sbb    DWORD PTR [esp+eax*1],ebx
  409151:	inc    ecx
  409152:	imul   ecx,DWORD PTR [ebx-0x4da678cb],0xfffffffb
  409159:	or     BYTE PTR [edx-0x2c20ffae],cl
  40915f:	ja     0x409188
  409161:	(bad)  
  409162:	sti    
  409163:	pop    es
  409164:	ins    DWORD PTR es:[edi],dx
  409165:	out    dx,al
  409166:	cs or  esi,0x74
  40916a:	push   eax
  40916b:	jp     0x409186
  40916d:	xor    al,0x22
  40916f:	scas   eax,DWORD PTR es:[edi]
  409170:	inc    DWORD PTR [esi+0x6fdb748e]
  409176:	pop    edi
  409177:	push   0x5
  409179:	pop    ebp
  40917a:	xchg   ebp,eax
  40917b:	je     0x4090fd
  40917d:	test   al,0xcf
  40917f:	dec    eax
  409180:	cwde   
  409181:	(bad)  
  409182:	xor    al,0x93
  409184:	int    0x67
  409186:	push   ebx
  409187:	mov    bh,0x40
  409189:	test   al,0xb4
  40918b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40918c:	pop    ss
  40918d:	mov    BYTE PTR [ecx-0x593d8f9c],0x78
  409194:	push   ebp
  409195:	xchg   ebx,eax
  409196:	(bad)  
  409197:	sbb    DWORD PTR [edi-0x63],edi
  40919a:	int3   
  40919b:	cmp    BYTE PTR [esi+edi*2+0x6d],0x92
  4091a0:	lock lds ebx,FWORD PTR [ebx]
  4091a3:	cdq    
  4091a4:	xor    DWORD PTR [edx-0x72],ecx
  4091a7:	fnstenv [ecx]
  4091a9:	out    dx,eax
  4091aa:	lahf   
  4091ab:	fwait
  4091ac:	daa    
  4091ad:	lock ins BYTE PTR es:[edi],dx
  4091af:	js     0x40921b
  4091b1:	rcr    DWORD PTR [edi],1
  4091b3:	fadd   st(7),st
  4091b5:	aaa    
  4091b6:	dec    ebp
  4091b7:	or     ebx,DWORD PTR [ebx+0x6e]
  4091ba:	and    esp,ebp
  4091bc:	push   esp
  4091bd:	jmp    0x40914c
  4091bf:	cwde   
  4091c0:	mov    dl,0xd9
  4091c2:	and    al,0x3
  4091c4:	jmp    0x409173
  4091c6:	xchg   esi,eax
  4091c7:	call   0x28e6:0xc0f6605a
  4091ce:	gs in  al,0xf8
  4091d1:	sahf   
  4091d2:	mov    eax,ds:0xb56c1ae0
  4091d7:	stc    
  4091d8:	dec    esi
  4091d9:	in     al,0x70
  4091db:	mov    edx,0x592e72fd
  4091e0:	push   eax
  4091e1:	jae    0x40924d
  4091e3:	aas    
  4091e4:	int    0xee
  4091e6:	mov    ebx,0x2396d71b
  4091eb:	xchg   esp,eax
  4091ec:	dec    DWORD PTR [eax+0x4447ee4a]
  4091f2:	pop    es
  4091f3:	sub    DWORD PTR ds:0xf8eb9aa0,edi
  4091f9:	or     al,0x59
  4091fb:	ins    BYTE PTR es:[edi],dx
  4091fc:	xchg   esi,eax
  4091fd:	scas   al,BYTE PTR es:[edi]
  4091fe:	cmp    al,0x57
  409200:	enter  0x201e,0x2c
  409204:	stos   BYTE PTR es:[edi],al
  409205:	adc    dh,BYTE PTR [eax+0x6]
  409208:	icebp  
  409209:	add    eax,0x4d81569f
  40920e:	sbb    dh,ch
  409210:	jns    0x4091fc
  409212:	sbb    edx,DWORD PTR [ecx-0x5d]
  409215:	mov    esp,0xf26d1583
  40921a:	sub    DWORD PTR es:[eax-0x3f20807f],esi
  409221:	and    eax,DWORD PTR [ecx+eiz*8]
  409224:	dec    edx
  409225:	in     eax,0x99
  409227:	pop    ds
  409228:	(bad)  
  409229:	(bad)  
  40922b:	out    dx,al
  40922c:	(bad)  
  40922d:	and    al,0xbd
  409230:	xchg   ebx,eax
  409231:	mov    ah,0x77
  409233:	mov    ecx,0xb2703b79
  409238:	push   edi
  409239:	aaa    
  40923a:	xor    eax,0x6ef856a0
  40923f:	pop    ss
  409240:	inc    edx
  409241:	cmp    ecx,DWORD PTR [eax+0x1a0ea906]
  409247:	push   es
  409248:	into   
  409249:	xchg   esp,eax
  40924a:	push   es
  40924b:	das    
  40924c:	(bad)  
  40924d:	jno    0x40929f
  40924f:	inc    eax
  409250:	mov    eax,0x9e89ac23
  409255:	xor    eax,0x2026ea5f
  40925a:	rcl    bl,1
  40925c:	adc    eax,0xac6e36d1
  409261:	pop    edi
  409262:	cmp    ebx,ebp
  409264:	and    esp,DWORD PTR [ebx-0xe3b600d]
  40926a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926b:	cmp    ecx,esp
  40926d:	icebp  
  40926e:	cld    
  40926f:	scas   al,BYTE PTR es:[edi]
  409270:	outs   dx,BYTE PTR ds:[esi]
  409271:	int3   
  409272:	pop    eax
  409273:	retf   0x85a1
  409276:	inc    ebp
  409277:	inc    edi
  409278:	pop    esi
  409279:	mov    al,al
  40927b:	and    cl,BYTE PTR [ebx+0xc]
  40927e:	dec    eax
  40927f:	std    
  409280:	fcomp  DWORD PTR [ecx-0x2b]
  409283:	mov    eax,ds:0x532ecc9
  409288:	add    DWORD PTR [ebx+0x5cf9d8eb],ecx
  40928e:	hlt    
  40928f:	or     BYTE PTR ds:0x9fc53dd6,al
  409295:	jecxz  0x409274
  409297:	push   0xefa9cc0a
  40929c:	inc    edi
  40929d:	add    WORD PTR [eax+eax*1+0x25656532],0x1bf7
  4092a7:	in     al,0x97
  4092a9:	inc    esi
  4092aa:	jle    0x409290
  4092ac:	sub    DWORD PTR [esi-0x20],esp
  4092af:	stos   DWORD PTR es:[edi],eax
  4092b0:	in     eax,dx
  4092b1:	bound  esp,QWORD PTR [esi]
  4092b3:	scas   eax,DWORD PTR es:[edi]
  4092b4:	pop    ds
  4092b5:	cmp    ecx,DWORD PTR [ebx+0x7da82e55]
  4092bb:	pop    es
  4092bc:	mov    cl,al
  4092be:	ins    BYTE PTR es:[edi],dx
  4092bf:	pop    eax
  4092c0:	loopne 0x40933e
  4092c2:	or     esi,esp
  4092c4:	jge    0x4092c5
  4092c6:	push   ecx
  4092c7:	cmp    bl,BYTE PTR [edi+0x59329c60]
  4092cd:	xchg   edx,eax
  4092ce:	mov    esi,0x6611cc26
  4092d3:	pop    eax
  4092d4:	ss pop eax
  4092d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d7:	mov    eax,ds:0x6192ae46
  4092dc:	add    BYTE PTR [edx*4-0x29c772e9],ch
  4092e3:	add    eax,0x59d68f5d
  4092e8:	call   0x2bc8:0xfe005b46
  4092ef:	inc    ecx
  4092f0:	push   eax
  4092f1:	mov    BYTE PTR [edi+ebx*4],dl
  4092f4:	push   0x9fca6bb7
  4092f9:	xchg   BYTE PTR [ebx-0x43],bl
  4092fc:	call   0xc40a:0xfdfc8973
  409303:	rcl    BYTE PTR [eax],1
  409305:	adc    DWORD PTR ds:0xff0cd15d,ebx
  40930b:	(bad)  [edi-0x1d7b33c1]
  409311:	in     eax,0x9f
  409313:	dec    ebp
  409314:	std    
  409315:	(bad)  
  409316:	xor    bl,cl
  409318:	into   
  409319:	lahf   
  40931a:	mov    ebx,0xe251c11f
  40931f:	fst    DWORD PTR [ecx-0x13]
  409322:	andps  xmm1,XMMWORD PTR [edx-0x35]
  409326:	rol    DWORD PTR [esi-0x69c95cd3],cl
  40932c:	cmovno edx,edi
  40932f:	popa   
  409330:	(bad)  
  409331:	mov    eax,0x20a3bf3a
  409336:	xchg   edi,eax
  409337:	or     eax,esi
  409339:	fistp  DWORD PTR [esi-0x1d]
  40933c:	retf   0xccf5
  40933f:	rol    BYTE PTR [edx-0x45d3dc30],0x64
  409346:	dec    ebx
  409347:	jns    0x4092f9
  409349:	push   edx
  40934a:	pop    ebp
  40934b:	enter  0x52fa,0x32
  40934f:	jge    0x40939a
  409351:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  409353:	sbb    BYTE PTR ds:[esi+0x58],0x34
  409358:	repnz (bad) [esi-0x556ca2e9]
  40935f:	mov    ebp,0xc704c42f
  409364:	xor    dl,BYTE PTR [ecx-0x7910860b]
  40936a:	imul   eax,DWORD PTR [edi+0x6b4dc6d7],0x44
  409371:	xchg   esi,eax
  409372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409373:	outs   dx,BYTE PTR ds:[esi]
  409374:	hlt    
  409375:	cmc    
  409376:	call   0xf08f7602
  40937b:	jmp    0x9282:0xbd2caeb
  409382:	pop    esp
  409383:	iret   
  409384:	shl    edx,1
  409386:	cwde   
  409387:	push   edx
  409388:	hlt    
  409389:	scas   eax,DWORD PTR es:[edi]
  40938a:	leave  
  40938b:	xlat   BYTE PTR ds:[ebx]
  40938c:	jo     0x4093db
  40938e:	mov    al,0xb7
  409390:	cmp    BYTE PTR [ecx+0x3b3ebf9d],ah
  409396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409397:	fnstsw ax
  409399:	sub    BYTE PTR ds:0xf236807e,al
  40939f:	loopne 0x4093a3
  4093a1:	loopne 0x4093d8
  4093a3:	mov    eax,ds:0x5ba69b27
  4093a8:	je     0x409367
  4093aa:	push   eax
  4093ab:	(bad)  
  4093ac:	mov    ds:0xf7022322,eax
  4093b1:	jnp    0x409378
  4093b3:	lahf   
  4093b4:	loope  0x409372
  4093b6:	inc    ecx
  4093b7:	add    DWORD PTR [ecx+0x56ceefa6],eax
  4093bd:	jo     0x40940d
  4093bf:	push   ebp
  4093c0:	mov    edx,0x53b2f5d0
  4093c5:	adc    al,0x5f
  4093c7:	fwait
  4093c8:	mov    esp,0x53d975c
  4093cd:	adc    BYTE PTR [edx-0x360f8d43],dh
  4093d3:	jnp    0x4093e7
  4093d5:	retf   0xab0c
  4093d8:	pop    ds
  4093d9:	loope  0x4093ab
  4093db:	add    esi,ebp
  4093dd:	adc    dl,ah
  4093df:	das    
  4093e0:	fimul  WORD PTR [ecx-0x4e]
  4093e3:	icebp  
  4093e4:	out    0xf1,eax
  4093e6:	mov    cl,0x5a
  4093e8:	pop    ss
  4093e9:	icebp  
  4093ea:	test   al,0x5f
  4093ec:	neg    BYTE PTR [edi+0x1450900b]
  4093f2:	cmp    al,0xca
  4093f4:	and    cl,0xc0
  4093f7:	jae    0x4093fd
  4093f9:	mov    al,ds:0x42629208
  4093fe:	dec    ebp
  4093ff:	push   ss
  409400:	fild   DWORD PTR [eax+edi*2+0x3c]
  409404:	pop    esi
  409405:	push   edx
  409406:	xor    DWORD PTR [ecx-0x521ab8f9],esi
  40940c:	imul   edi
  40940e:	inc    esp
  40940f:	add    DWORD PTR [ecx-0x2706bc55],ebp
  409415:	mov    bl,0x3a
  409417:	stos   BYTE PTR es:[edi],al
  409418:	mov    dh,0x95
  40941a:	inc    ebx
  40941b:	sub    edi,DWORD PTR [ecx]
  40941d:	shl    BYTE PTR [edx],1
  40941f:	test   BYTE PTR [esi+eax*1],cl
  409422:	pop    esp
  409423:	sbb    DWORD PTR [edi],esp
  409425:	loope  0x4093f0
  409427:	call   0xdf6e9246
  40942c:	dec    edx
  40942d:	(bad)
  409431:	(bad)  
  409432:	call   0x28ae:0xf4a85b04
  409439:	call   0xe950:0x9b843480
  409440:	aam    0xfa
  409442:	lods   al,BYTE PTR ds:[esi]
  409443:	sbb    esi,DWORD PTR [ebp+0x54]
  409446:	push   es
  409447:	jmp    0x1f22e891
  40944c:	mov    es,WORD PTR ds:0xa73639d1
  409452:	fcmovne st,st(0)
  409454:	fnstcw WORD PTR [edx]
  409456:	add    ah,BYTE PTR [eax+0x2ff64ecc]
  40945c:	jg     0x409446
  40945e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40945f:	or     eax,0x297117f4
  409464:	pop    esi
  409465:	and    dl,BYTE PTR [ecx+0x507c8611]
  40946b:	pop    ds
  40946c:	cld    
  40946d:	or     ah,BYTE PTR [ebp+0x19f72aea]
  409473:	nop
  409474:	sub    eax,0xea0eb1e0
  409479:	or     cl,BYTE PTR [eax+0x7c9d6f48]
  40947f:	jo     0x409428
  409481:	int3   
  409482:	sbb    bh,BYTE PTR [eax+ebx*2+0x3a]
  409486:	cmp    ah,BYTE PTR [edi+0xee32b81]
  40948c:	stc    
  40948d:	pushf  
  40948e:	(bad)  
  40948f:	out    dx,eax
  409490:	push   cs
  409491:	add    DWORD PTR [edi+0x1f],esp
  409494:	or     esp,DWORD PTR [di+0xd]
  409498:	mov    DWORD PTR [edx-0x76],0xea25b201
  40949f:	test   DWORD PTR [ebp+0x1ed58fa6],esp
  4094a5:	aad    0xc6
  4094a7:	dec    ebx
  4094a8:	and    ch,BYTE PTR ds:0x2de65662
  4094ae:	fist   DWORD PTR [edi+0x37b409b8]
  4094b4:	mov    eax,ds:0xf250e31f
  4094b9:	aaa    
  4094ba:	repz (bad) 
  4094bc:	cmp    bh,BYTE PTR [esi+0x4a]
  4094bf:	or     BYTE PTR [edi+ecx*1-0x4fee60da],0xeb
  4094c7:	jp     0x40952c
  4094c9:	push   0xa17464a
  4094ce:	lahf   
  4094cf:	nop
  4094d0:	lahf   
  4094d1:	and    ebp,edx
  4094d3:	jg     0x4094a5
  4094d5:	js     0x4094e0
  4094d7:	test   DWORD PTR [edx],ebx
  4094d9:	clc    
  4094da:	test   BYTE PTR [ebx+ebx*2+0x27],bl
  4094de:	imul   ebx,eax,0x78
  4094e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e2:	js     0x4094a5
  4094e4:	jg     0x409504
  4094e6:	cmc    
  4094e7:	fild   DWORD PTR [ebx+0x70]
  4094ea:	out    dx,al
  4094eb:	add    al,0xa7
  4094ed:	into   
  4094ee:	add    eax,eax
  4094f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f1:	jb     0x409486
  4094f3:	in     al,0x1c
  4094f5:	in     al,0x56
  4094f7:	jbe    0x409533
  4094f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094fa:	std    
  4094fb:	mov    ch,0x87
  4094fd:	out    dx,eax
  4094fe:	dec    ebp
  4094ff:	xor    al,dl
  409501:	adc    BYTE PTR [edi-0x752bfdd9],0xf4
  409508:	xchg   ebp,eax
  409509:	sbb    DWORD PTR [ebp-0x7d2b9b27],ecx
  40950f:	and    al,0x98
  409511:	dec    edx
  409512:	dec    esi
  409513:	inc    esp
  409514:	out    0xe8,eax
  409516:	fdiv   QWORD PTR ds:0xee9a6cda
  40951c:	inc    edi
  40951d:	bound  ebx,QWORD PTR [edx-0x12950f1f]
  409523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409524:	cmp    edx,DWORD PTR [esi*2-0x605643bf]
  40952b:	gs adc eax,0xf90c57e
  409531:	or     al,0xa2
  409533:	retf   0xaabd
  409536:	je     0x4095a9
  409538:	sub    ah,al
  40953a:	jb     0x40952a
  40953c:	jmp    0xc12b:0xc7c15c1d
  409543:	cwde   
  409544:	int    0xcc
  409546:	mov    ebp,0xed2261e6
  40954b:	jmp    0xb638:0x1a39e909
  409552:	call   0xac94:0x677ca64
  409559:	or     cl,dl
  40955b:	das    
  40955c:	and    BYTE PTR ss:[esi+0x5e],dl
  409560:	shl    BYTE PTR [edi],cl
  409562:	push   ebp
  409563:	pop    ds
  409564:	popf   
  409565:	inc    ebx
  409566:	inc    esi
  409567:	jl     0x409568
  409569:	and    al,0x78
  40956b:	dec    ebx
  40956c:	pop    edx
  40956d:	rcl    BYTE PTR [eax-0x7],0xa0
  409571:	nop
  409572:	test   al,0xb
  409574:	cdq    
  409575:	cmp    esi,ebx
  409577:	dec    eax
  409578:	cli    
  409579:	push   ds
  40957a:	cmp    DWORD PTR [ebx-0x61a34c37],ecx
  409580:	mov    eax,0xa145408b
  409585:	pop    es
  409586:	adc    DWORD PTR [esi],edi
  409588:	xacquire xchg DWORD PTR [esi+0x190d6ab7],eax
  40958f:	mov    ds:0xa7ec9bbe,al
  409594:	sbb    dl,BYTE PTR [eax+0x732b8ba5]
  40959a:	stos   BYTE PTR es:[edi],al
  40959b:	in     eax,dx
  40959c:	ror    BYTE PTR [eax],0xfd
  40959f:	ret    
  4095a0:	out    dx,al
  4095a1:	call   0xcb11:0x3a0cf39a
  4095a8:	pop    esp
  4095a9:	mov    eax,DWORD PTR [esp+eax*4]
  4095ac:	shl    DWORD PTR [di],cl
  4095af:	cli    
  4095b0:	fs das 
  4095b2:	and    al,0x54
  4095b4:	pop    ebx
  4095b5:	mov    bh,0xa6
  4095b7:	lea    ebx,ds:0x6226f2d0
  4095bd:	push   esi
  4095be:	or     al,BYTE PTR [ebp-0x55]
  4095c1:	sub    eax,ecx
  4095c3:	lods   eax,DWORD PTR ds:[esi]
  4095c4:	fsubr  st,st(1)
  4095c6:	dec    edi
  4095c7:	pop    edi
  4095c8:	pop    ds
  4095c9:	pusha  
  4095ca:	cli    
  4095cb:	stos   DWORD PTR es:[edi],eax
  4095cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cd:	arpl   WORD PTR [edx],dx
  4095cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d0:	inc    esi
  4095d1:	inc    edi
  4095d2:	mov    edi,0xc16dae29
  4095d7:	dec    edx
  4095d8:	sub    bh,BYTE PTR [esi]
  4095da:	jg     0x4095ea
  4095dc:	lds    esp,FWORD PTR [eax-0x5a]
  4095df:	out    0x19,eax
  4095e1:	pop    ebp
  4095e2:	out    dx,eax
  4095e3:	jg     0x409634
  4095e5:	daa    
  4095e6:	add    BYTE PTR [ebp+0x2b],dl
  4095e9:	pop    esi
  4095ea:	mov    ds:0xec3e56,al
  4095ef:	fisttp QWORD PTR [esi-0x18]
  4095f2:	ins    DWORD PTR es:[edi],dx
  4095f3:	xor    dl,BYTE PTR [edx+0x176954fc]
  4095f9:	push   ds
  4095fa:	jne    0x4095ec
  4095fc:	and    al,0x44
  4095fe:	fnstcw WORD PTR [ebx]
  409600:	and    BYTE PTR [edi-0x79d63780],cl
  409606:	push   ds
  409607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409608:	sub    ch,BYTE PTR [esi-0x69b31415]
  40960e:	xchg   esi,eax
  40960f:	add    al,0x6d
  409611:	cmp    ebp,DWORD PTR [esi-0x36]
  409614:	or     eax,0xe4dd5ce5
  409619:	ret    0x61a1
  40961c:	dec    esi
  40961d:	inc    esi
  40961e:	inc    esi
  40961f:	jle    0x40966b
  409621:	mov    eax,0x65a9af59
  409626:	sub    al,0xe4
  409628:	nop
  409629:	pop    ds
  40962a:	scas   al,BYTE PTR es:[edi]
  40962b:	jmp    0x5a44:0xd231aa68
  409632:	fiadd  WORD PTR [eax-0x5a5a9953]
  409638:	sahf   
  409639:	mov    ds:0x404e42d3,al
  40963e:	idiv   cl
  409640:	sub    eax,0x8dabf25b
  409645:	xchg   edi,ecx
  409647:	shl    BYTE PTR [ebp-0x43446335],1
  40964d:	daa    
  40964e:	push   0xdc0ff1ed
  409653:	jno    0x409647
  409655:	push   0x9c91d7dd
  40965a:	enter  0x744,0xb2
  40965e:	xlat   BYTE PTR ds:[ebx]
  40965f:	out    0xe2,eax
  409661:	inc    ebp
  409662:	hlt    
  409663:	push   ds
  409664:	mov    ah,BYTE PTR [edi-0x70c0490c]
  40966a:	stc    
  40966b:	adc    eax,0x1dff1574
  409670:	push   es
  409671:	cmp    al,0x5d
  409673:	ret    
  409674:	aam    0x38
  409676:	and    ah,BYTE PTR [edi]
  409678:	mov    ecx,0xdaf98a69
  40967d:	mov    cl,BYTE PTR [edi+0x66c7c2ec]
  409683:	adc    al,0xe
  409685:	leave  
  409686:	iret   
  409687:	add    esp,esi
  409689:	iret   
  40968a:	lahf   
  40968b:	mov    eax,0x4d8f6bae
  409690:	(bad)  
  409691:	arpl   WORD PTR [ebx],si
  409693:	inc    BYTE PTR [ebp-0x36]
  409696:	popa   
  409697:	mov    cl,0x37
  409699:	fcomi  st,st(2)
  40969b:	ins    DWORD PTR es:[edi],dx
  40969c:	in     al,0x79
  40969e:	loopne 0x409637
  4096a0:	and    bl,BYTE PTR [eax]
  4096a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a3:	push   ebp
  4096a4:	cmp    ah,BYTE PTR [ecx]
  4096a6:	adc    eax,0xc73f05ba
  4096ab:	inc    ebp
  4096ac:	inc    bx
  4096ae:	out    dx,al
  4096af:	mov    bl,0x22
  4096b1:	inc    eax
  4096b2:	adc    eax,0xcd9f74f2
  4096b7:	int3   
  4096b8:	retf   0x29fb
  4096bb:	sbb    ah,dl
  4096bd:	(bad)  
  4096be:	push   esp
  4096bf:	pop    edx
  4096c0:	xchg   BYTE PTR [edi-0x29a43564],bh
  4096c6:	dec    esp
  4096c7:	dec    ebp
  4096c8:	inc    ebx
  4096c9:	jns    0x40973f
  4096cb:	jo     0x40971a
  4096cd:	mov    esp,0xb302337
  4096d2:	or     edx,edi
  4096d4:	es add al,0xb5
  4096d7:	js     0x4096be
  4096d9:	push   ss
  4096da:	add    DWORD PTR [ebp+0x3d3bbc8],edi
  4096e0:	sub    eax,DWORD PTR [ebx-0x4d228dde]
  4096e6:	adc    edi,DWORD PTR ds:0x2378a019
  4096ec:	int3   
  4096ed:	test   DWORD PTR [ecx+0x4b],esi
  4096f0:	pop    ebx
  4096f1:	mov    ds:0xb3c24932,al
  4096f6:	leave  
  4096f7:	jecxz  0x40969f
  4096f9:	ret    0xa44a
  4096fc:	ret    
  4096fd:	imul   edx,DWORD PTR [ebx+0x45f8559b],0x1b3c2cca
  409707:	std    
  409708:	fcom   DWORD PTR [edx-0x781fd2eb]
  40970e:	aas    
  40970f:	aam    0x27
  409711:	sbb    esp,DWORD PTR [eax]
  409713:	std    
  409714:	xlat   BYTE PTR ds:[ebx]
  409715:	outs   dx,DWORD PTR ds:[esi]
  409716:	sbb    DWORD PTR [eax],eax
  409718:	ror    BYTE PTR [ebx-0x12],cl
  40971b:	sti    
  40971c:	rol    DWORD PTR [edi-0x76323bca],cl
  409722:	inc    eax
  409723:	int    0x69
  409725:	in     eax,dx
  409726:	ds fs dec ebx
  409729:	cmp    esp,DWORD PTR [esi]
  40972b:	ficom  WORD PTR [ebx]
  40972d:	(bad)  
  40972e:	mov    bl,0x2c
  409730:	sub    BYTE PTR [ebx-0x11050c3b],ah
  409736:	cmc    
  409737:	jecxz  0x4096cd
  409739:	fmul   DWORD PTR [edx]
  40973b:	stos   BYTE PTR es:[edi],al
  40973c:	pop    edx
  40973d:	repnz mov BYTE PTR [ebx-0x14639],al
  409744:	xlat   BYTE PTR ds:[ebx]
  409745:	xor    eax,0x882bbd77
  40974a:	xchg   esi,esi
  40974c:	cs in  eax,dx
  40974e:	and    ah,BYTE PTR [ebx-0x48]
  409751:	inc    esp
  409752:	jge    0x4096f4
  409754:	aad    0xb2
  409756:	sbb    bl,BYTE PTR [edx]
  409758:	ror    BYTE PTR [ecx],1
  40975a:	pop    ds
  40975b:	jp     0x4097c2
  40975d:	mov    dl,0xe4
  40975f:	dec    esp
  409760:	jecxz  0x4096f5
  409762:	push   ds
  409763:	xchg   ecx,eax
  409764:	pop    ebx
  409765:	push   esi
  409766:	xchg   di,ax
  409768:	outs   dx,DWORD PTR ds:[esi]
  409769:	mov    ds:0xec891759,al
  40976e:	rcl    DWORD PTR [eax+0x7a],0xac
  409772:	cwde   
  409773:	xor    ah,BYTE PTR [edx+0x35]
  409776:	jns    0x4097ab
  409778:	pop    es
  409779:	adc    eax,DWORD PTR [ecx-0x4fb914ff]
  40977f:	sahf   
  409780:	mov    BYTE PTR [ebx+ebp*2+0x3e],bh
  409784:	int    0x77
  409786:	scas   eax,DWORD PTR es:[edi]
  409787:	mov    bl,BYTE PTR [ecx]
  409789:	scas   eax,DWORD PTR es:[edi]
  40978a:	mov    eax,0xd80d1fc7
  40978f:	out    dx,al
  409790:	mov    al,ds:0xc2f659d4
  409795:	cmc    
  409796:	push   0x52fb26b2
  40979b:	bnd call 0x31d10ab5
  4097a1:	pop    edx
  4097a2:	idiv   BYTE PTR [esi]
  4097a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a6:	cmp    eax,0x133f0375
  4097ab:	pop    ds
  4097ac:	std    
  4097ad:	aam    0x73
  4097af:	cdq    
  4097b0:	xchg   ecx,eax
  4097b1:	mov    DWORD PTR [ebx+0x6f],0xf047b381
  4097b8:	and    ebx,DWORD PTR [ecx+edx*1-0x79]
  4097bc:	jmp    0x40977c
  4097be:	ins    BYTE PTR es:[edi],dx
  4097bf:	dec    eax
  4097c0:	out    0xce,al
  4097c2:	test   eax,0x53273de1
  4097c7:	dec    ecx
  4097c8:	pop    ss
  4097c9:	mov    esi,edi
  4097cb:	jge    0x4097ca
  4097cd:	cwde   
  4097ce:	mov    fs,WORD PTR [esi]
  4097d0:	xchg   esi,eax
  4097d1:	adc    esi,DWORD PTR [edx+ebp*2+0x5817e027]
  4097d8:	mov    BYTE PTR ds:0x277bf2,0xb2
  4097df:	clc    
  4097e0:	ds jb  0x409789
  4097e3:	mov    al,0x55
  4097e5:	adc    al,0x90
  4097e7:	mov    eax,ds:0xb56b4fdc
  4097ec:	sub    eax,0xc9c91670
  4097f1:	or     eax,0x5b0b3379
  4097f6:	retf   
  4097f7:	push   ebx
  4097f8:	out    0x5b,al
  4097fa:	xor    BYTE PTR ds:0xa86deecc,dl
  409800:	stos   BYTE PTR es:[edi],al
  409801:	test   eax,0x8ddf244f
  409806:	jns    0x409812
  409808:	stc    
  409809:	inc    edx
  40980a:	shl    cl,0xe4
  40980d:	xor    BYTE PTR [esi+0x2a271461],bl
  409813:	adc    al,0x97
  409815:	jg     0x40985e
  409817:	js     0x40985d
  409819:	(bad)  
  40981a:	nop
  40981b:	add    DWORD PTR ds:0xc6a4f0ce,ebx
  409821:	test   al,0x3b
  409823:	(bad)  
  409824:	xchg   edi,eax
  409825:	in     al,0x13
  409827:	or     cl,BYTE PTR [esi+edx*8]
  40982a:	mov    ch,0x69
  40982c:	fcomp  DWORD PTR [ecx]
  40982e:	mov    ah,0xf6
  409830:	clc    
  409831:	mov    esi,0x743cd928
  409836:	ins    BYTE PTR es:[edi],dx
  409837:	sub    al,BYTE PTR es:[ebx+0x69]
  40983b:	sbb    edi,0x185c4dc8
  409841:	cmp    bh,BYTE PTR [esi-0x1619c5bb]
  409847:	loop   0x4098a2
  409849:	mov    ebp,0xcf53704d
  40984e:	push   edi
  40984f:	out    dx,eax
  409850:	stos   DWORD PTR es:[edi],eax
  409851:	call   0xd584:0xf8ab7850
  409858:	push   esi
  409859:	fsubr  DWORD PTR [eax+0x21]
  40985c:	loopne 0x4098d6
  40985e:	xchg   dl,dl
  409860:	mov    ecx,0x91eb6f53
  409865:	inc    ecx
  409866:	pop    ebx
  409867:	jnp    0x4097eb
  409869:	fld    TBYTE PTR [ebx]
  40986b:	icebp  
  40986c:	std    
  40986d:	pop    eax
  40986e:	(bad)  
  40986f:	ror    DWORD PTR [ebp+0x22],1
  409872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409873:	sub    DWORD PTR [edx+0x6b965f4f],0xd06a9040
  40987d:	popa   
  40987e:	mov    esp,0x3ef2b7a6
  409883:	test   eax,0xf7ad4e61
  409888:	sbb    esi,ecx
  40988a:	xchg   edi,eax
  40988b:	sub    dl,ah
  40988d:	adc    ah,BYTE PTR [ebx]
  40988f:	mov    esi,0x3c79d76a
  409894:	outs   dx,BYTE PTR ds:[esi]
  409895:	icebp  
  409896:	mov    WORD PTR [eax],cs
  409898:	inc    ebx
  409899:	push   cs
  40989a:	xchg   edi,eax
  40989b:	mov    edi,0x7a2b763d
  4098a0:	xchg   DWORD PTR [eax],ecx
  4098a2:	dec    ebx
  4098a3:	sbb    DWORD PTR [edx],esp
  4098a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a6:	sar    DWORD PTR [esi+ebx*8-0x1f1b3e44],cl
  4098ad:	xchg   esi,eax
  4098ae:	push   ecx
  4098af:	cmp    al,0x90
  4098b1:	scas   al,BYTE PTR es:[edi]
  4098b2:	jnp    0x4098b8
  4098b4:	repnz xchg ebx,eax
  4098b6:	dec    esi
  4098b7:	jne    0x40989a
  4098b9:	add    dh,BYTE PTR [ebp+0x1c]
  4098bc:	(bad)  
  4098bd:	xchg   ebx,eax
  4098be:	jg     0x409920
  4098c0:	cld    
  4098c1:	test   ebx,ecx
  4098c3:	and    ebp,DWORD PTR [ebp-0x78d814a1]
  4098c9:	mov    ecx,0x8743ebd
  4098ce:	les    ecx,FWORD PTR [ecx]
  4098d0:	out    dx,al
  4098d1:	daa    
  4098d2:	cmp    ebp,esp
  4098d4:	mov    ecx,0x868524ba
  4098d9:	push   ecx
  4098da:	lea    ebx,[esi+0xf]
  4098dd:	dec    esi
  4098de:	aad    0xbf
  4098e0:	mov    eax,ds:0x2c807c54
  4098e5:	mov    eax,ds:0x8c2cb41e
  4098ea:	jb     0x40995d
  4098ec:	pop    ds
  4098ed:	pop    esp
  4098ee:	inc    esp
  4098f0:	das    
  4098f1:	sbb    BYTE PTR [edi+0xbd1fa70],al
  4098f7:	rcr    DWORD PTR [ebx+0xa],cl
  4098fa:	jo     0x40994d
  4098fc:	xor    DWORD PTR [ebx-0x3cd262f2],edx
  409902:	push   ss
  409903:	mov    esi,0x519410d
  409908:	fdivrp st(5),st
  40990a:	mov    ch,0x24
  40990c:	and    al,0x4f
  40990e:	jecxz  0x4098f4
  409910:	adc    ecx,DWORD PTR [ebp+0x4305a1c4]
  409916:	fadd   QWORD PTR [eax]
  409918:	clc    
  409919:	std    
  40991a:	test   al,0x54
  40991c:	dec    edi
  40991d:	adc    al,0xc4
  40991f:	inc    ebx
  409920:	gs test al,0xd2
  409923:	xchg   esi,eax
  409924:	fcomip st,st(0)
  409926:	sbb    DWORD PTR [ebx-0x4df0b230],edi
  40992c:	or     edx,esi
  40992e:	ds clc 
  409930:	stos   BYTE PTR es:[edi],al
  409931:	fild   QWORD PTR [ebx+ebp*1+0x346b59e5]
  409938:	sbb    al,0xae
  40993a:	sub    al,0xa4
  40993c:	lahf   
  40993d:	mov    edi,0xfdf80915
  409942:	sbb    ecx,DWORD PTR [ecx-0x4a3313b5]
  409948:	add    ecx,DWORD PTR [ebx+0x7caf94c3]
  40994e:	outs   dx,DWORD PTR ds:[esi]
  40994f:	ja     0x409944
  409951:	sub    DWORD PTR [edi],edx
  409953:	mov    BYTE PTR [edx],bh
  409955:	push   0x6f
  409957:	js     0x4099b1
  409959:	jmp    0xb65b:0xe92a4b36
  409960:	stos   DWORD PTR es:[edi],eax
  409961:	mov    ah,0xb1
  409963:	mov    WORD PTR [edx+0x6a],ds
  409966:	sar    DWORD PTR [ebx+0x2278084a],cl
  40996c:	add    eax,0xf8b1e771
  409971:	push   edx
  409972:	imul   eax,DWORD PTR [ebp-0x2d],0x59
  409976:	xchg   edi,eax
  409977:	shl    DWORD PTR [edx],0xd6
  40997a:	push   es
  40997b:	mov    dl,0xde
  40997d:	(bad)
  409980:	add    esi,DWORD PTR [ebx+0x57]
  409983:	ret    
  409984:	int3   
  409985:	mov    ebp,0x987dc934
  40998a:	sti    
  40998b:	xlat   BYTE PTR ds:[ebx]
  40998c:	lods   al,BYTE PTR ds:[esi]
  40998d:	sbb    BYTE PTR [ebx],bl
  40998f:	xchg   BYTE PTR [edi],cl
  409991:	jecxz  0x4099de
  409993:	pop    esp
  409994:	test   al,0xe5
  409996:	jmp    0x4099bf
  409998:	mov    edi,0xfa454724
  40999d:	rcl    DWORD PTR [esi-0x56ff66c8],cl
  4099a3:	push   ss
  4099a4:	push   es
  4099a5:	jmp    DWORD PTR [ebp+0x43]
  4099a8:	mov    bh,0xb6
  4099aa:	int3   
  4099ab:	sar    DWORD PTR [ecx+eax*2],cl
  4099ae:	adc    BYTE PTR [ebx],0xaf
  4099b1:	je     0x4099ab
  4099b3:	pop    ss
  4099b4:	(bad)  
  4099b6:	pop    esp
  4099b7:	push   esi
  4099b8:	imul   esp,DWORD PTR [esp+eiz*2-0x57],0x7a
  4099bd:	rcr    BYTE PTR ds:0xf2c10f44,1
  4099c3:	shl    ah,cl
  4099c5:	test   DWORD PTR [edx],0xa233f0d6
  4099cb:	jno    0x409982
  4099cd:	fnstcw WORD PTR [eax]
  4099cf:	add    cl,BYTE PTR [edx-0x67805547]
  4099d5:	push   ebp
  4099d6:	mov    WORD PTR [ebx-0x25],es
  4099d9:	test   al,0x3d
  4099db:	out    0xa0,eax
  4099dd:	neg    DWORD PTR [edx+0x1fd5c0bf]
  4099e3:	test   al,0x9b
  4099e5:	sbb    ecx,eax
  4099e7:	dec    bp
  4099e9:	and    DWORD PTR ds:0x23d9bd42,edi
  4099ef:	mov    esp,0xa018a43e
  4099f4:	sbb    al,0xf0
  4099f6:	pop    ds
  4099f7:	xchg   BYTE PTR [ecx+ecx*2],ch
  4099fa:	and    al,0x26
  4099fc:	lea    edi,[ebp-0x4f7b40d2]
  409a02:	jl     0x4099dc
  409a04:	mov    bh,ch
  409a06:	mov    dl,0xcd
  409a08:	or     ah,cl
  409a0a:	fisub  DWORD PTR [ebp+0x48]
  409a0d:	les    edx,FWORD PTR [esi]
  409a0f:	jp     0x4099c6
  409a11:	scas   eax,DWORD PTR es:[edi]
  409a12:	xor    BYTE PTR [ecx+0x16],ah
  409a15:	cli    
  409a16:	sub    BYTE PTR [esi],0x5b
  409a19:	add    eax,0xcc6d1260
  409a1e:	lea    ecx,[esi]
  409a20:	cdq    
  409a21:	mov    edx,0x21597291
  409a26:	xchg   BYTE PTR [esi],bh
  409a28:	or     BYTE PTR [esi],al
  409a2a:	mov    dl,0xa1
  409a2c:	cmp    DWORD PTR [ebx+0x3d6b89c7],ecx
  409a32:	dec    ebx
  409a33:	push   es
  409a34:	je     0x984522ac
  409a3a:	jbe    0x409a85
  409a3c:	mov    cl,BYTE PTR [ebp-0x306da95e]
  409a42:	ret    0xbaed
  409a45:	sub    al,0x6
  409a47:	lahf   
  409a48:	lods   eax,DWORD PTR ds:[esi]
  409a49:	clc    
  409a4a:	test   DWORD PTR [esp+edx*4-0x7704ae47],0xbe796a4c
  409a55:	mov    ecx,fs
  409a57:	xchg   ecx,eax
  409a58:	adc    eax,ecx
  409a5a:	mov    bl,0x7d
  409a5c:	repnz mov ebp,0x4419f706
  409a62:	add    bl,BYTE PTR [ecx+0x34]
  409a65:	adc    BYTE PTR [ebp+ebp*4-0x1],0xef
  409a6a:	push   esi
  409a6b:	into   
  409a6c:	xor    DWORD PTR [edi],ebx
  409a6e:	div    DWORD PTR [edi-0x30]
  409a71:	sbb    BYTE PTR [ebp+eax*8-0x62],0x94
  409a76:	xor    eax,0xf7312f71
  409a7b:	pop    ss
  409a7c:	fmul   DWORD PTR [ebx+0x46]
  409a7f:	adc    dh,dh
  409a81:	sub    ecx,edi
  409a83:	adc    al,0x9c
  409a85:	jmp    0xab48:0x6b7bd259
  409a8c:	test   al,0xd3
  409a8e:	mov    BYTE PTR [eax-0x9],ah
  409a91:	inc    edx
  409a92:	mov    al,ds:0x536c00f1
  409a97:	lock retf 0xef7
  409a9b:	sub    al,0x77
  409a9d:	scas   eax,DWORD PTR es:[edi]
  409a9e:	test   eax,0x6eb92b42
  409aa3:	and    eax,DWORD PTR [ebx]
  409aa5:	out    0x52,al
  409aa7:	sub    eax,0x20b1b81
  409aac:	add    DWORD PTR [ebp+0x27],eax
  409aaf:	cmp    al,0x97
  409ab1:	es xor edi,eax
  409ab4:	loopne 0x409a66
  409ab6:	dec    ebx
  409ab7:	imul   esi,DWORD PTR [edx-0x28e78d10],0xeb2c0b88
  409ac1:	adc    eax,0x6e46f2b7
  409ac6:	ins    DWORD PTR es:[edi],dx
  409ac7:	mov    cl,0xe9
  409ac9:	outs   dx,BYTE PTR ds:[esi]
  409aca:	nop
  409acb:	adc    al,0xe7
  409acd:	fmulp  st(4),st
  409acf:	cmp    DWORD PTR [esi+0x379199d0],edx
  409ad5:	fdiv   DWORD PTR [eax+0x1]
  409ad8:	ret    
  409ad9:	fwait
  409ada:	jns    0x409b43
  409adc:	xchg   esi,eax
  409add:	test   BYTE PTR [ebx],dh
  409adf:	pop    edi
  409ae0:	jmp    0x2785:0x38094754
  409ae7:	test   BYTE PTR [edi+0x371b005b],bh
  409aed:	jle    0x409b1b
  409aef:	add    al,0xb5
  409af1:	call   0xa82a:0x15b426f0
  409af8:	lock pop ebx
  409afa:	lods   eax,DWORD PTR ds:[esi]
  409afb:	mov    dh,0x5e
  409afd:	mov    bl,0xee
  409aff:	ins    BYTE PTR es:[edi],dx
  409b00:	jmp    0xaf08:0xffc7ab8a
  409b07:	sar    DWORD PTR [edx+0x1d],1
  409b0a:	ret    0x2d1
  409b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0e:	and    DWORD PTR [ebp+0x3c],edi
  409b11:	imul   ecx,DWORD PTR [ebp+0x755291c0],0x12
  409b18:	out    0xa6,al
  409b1a:	leave  
  409b1b:	setnp  BYTE PTR [edx]
  409b1e:	or     eax,0xbe46b983
  409b23:	sub    ebx,DWORD PTR [edi-0x60]
  409b26:	int    0x56
  409b28:	mov    ch,0x7
  409b2a:	clc    
  409b2b:	stos   BYTE PTR es:[edi],al
  409b2c:	fld    DWORD PTR [esi-0x5ed4e575]
  409b32:	stc    
  409b33:	call   0x1495:0x99803357
  409b3a:	push   ds
  409b3b:	jo     0x409b89
  409b3d:	push   eax
  409b3e:	inc    esp
  409b3f:	in     eax,dx
  409b40:	mov    WORD PTR [edi+ecx*8],ss
  409b43:	push   0x633c5948
  409b48:	and    eax,0x7b1d916b
  409b4d:	popa   
  409b4e:	mov    bh,0xea
  409b50:	jne    0x409b62
  409b52:	ins    DWORD PTR es:[edi],dx
  409b53:	shl    DWORD PTR [eax+edx*2+0x716f965d],cl
  409b5a:	cmp    BYTE PTR [ecx+0x1],0xa5
  409b5e:	inc    ebx
  409b5f:	jb     0x409b9b
  409b61:	sbb    BYTE PTR [eax],ah
  409b63:	fcomp  DWORD PTR [ecx+0x4d1f60af]
  409b69:	mov    ecx,0x27264246
  409b6e:	aaa    
  409b6f:	and    dl,bl
  409b71:	(bad)  
  409b73:	or     BYTE PTR [ecx+0x6cbac696],0xd3
  409b7a:	scas   eax,DWORD PTR es:[edi]
  409b7b:	popa   
  409b7c:	cmc    
  409b7d:	mov    esp,0xe67b51a2
  409b82:	out    0xc9,al
  409b84:	push   ebp
  409b85:	pop    ebp
  409b86:	push   0x7353de2c
  409b8b:	addr16 inc eax
  409b8d:	(bad)  
  409b8e:	jmp    0x409bce
  409b90:	into   
  409b91:	loop   0x409bd4
  409b93:	nop
  409b94:	call   0xb0124b8f
  409b99:	mov    cl,0xe3
  409b9b:	pop    esp
  409b9c:	ror    BYTE PTR [edi],1
  409b9e:	mov    eax,0xb6ba6b99
  409ba3:	pop    ecx
  409ba4:	fcom   DWORD PTR [esi+0x295670a1]
  409baa:	(bad)  
  409bab:	cmp    DWORD PTR [eax-0x40],edx
  409bae:	sub    dh,bl
  409bb0:	popa   
  409bb1:	xchg   DWORD PTR [edx],edi
  409bb3:	mov    esi,0x86e5c01f
  409bb8:	jmp    0x409c0a
  409bba:	cwde   
  409bbb:	add    al,0xcb
  409bbd:	pop    eax
  409bbe:	(bad)  
  409bbf:	or     bh,ch
  409bc1:	dec    edi
  409bc2:	jmp    0x409c40
  409bc4:	pop    ebx
  409bc5:	int3   
  409bc6:	adc    al,0x1b
  409bc8:	retf   
  409bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bca:	imul   edx,DWORD PTR [eax+0x7b],0x7735e872
  409bd1:	pop    es
  409bd2:	xor    BYTE PTR [ecx+0x39],ch
  409bd5:	icebp  
  409bd6:	mov    dl,0x5a
  409bd8:	test   eax,0x1652ef5f
  409bdd:	out    dx,eax
  409bde:	into   
  409bdf:	fidiv  WORD PTR [ebp-0x7e]
  409be2:	pop    edx
  409be3:	fcmovu st,st(2)
  409be5:	jo     0x409bb4
  409be7:	adc    al,0xe1
  409be9:	stos   DWORD PTR es:[edi],eax
  409bea:	push   0x23e3c284
  409bef:	outs   dx,BYTE PTR ds:[esi]
  409bf0:	mov    ds:0xea07c142,al
  409bf5:	sub    dh,ah
  409bf7:	cwde   
  409bf8:	and    BYTE PTR [eax+0x4a],dl
  409bfb:	and    eax,0xaa402d5b
  409c00:	ds push ebx
  409c02:	mov    edi,0xd4f84116
  409c07:	jbe    0x409b91
  409c09:	jbe    0x409c7c
  409c0b:	es jmp 0xa9b7:0xb5f68a81
  409c13:	int3   
  409c14:	test   eax,0x29d504dc
  409c19:	lods   al,BYTE PTR ds:[esi]
  409c1a:	sti    
  409c1b:	mov    BYTE PTR ss:[esi-0xd031225],bl
  409c22:	xchg   esi,eax
  409c23:	popf   
  409c24:	xchg   ebx,eax
  409c25:	out    0x61,al
  409c27:	jle    0x409beb
  409c29:	out    0x4a,eax
  409c2b:	fs test eax,0xe7f422c9
  409c31:	pop    ds
  409c32:	inc    esi
  409c33:	mov    ds:0xe8cf0ab7,al
  409c38:	in     al,0x18
  409c3a:	in     eax,0xa
  409c3c:	clc    
  409c3d:	inc    BYTE PTR [edi-0x575364ea]
  409c43:	loopne 0x409c31
  409c45:	push   0x39
  409c47:	jg     0x409c55
  409c49:	outs   dx,BYTE PTR ds:[esi]
  409c4a:	xchg   edx,eax
  409c4b:	jg     0x409c1a
  409c4d:	inc    ecx
  409c4e:	fistp  QWORD PTR [esi+0x6d1528bb]
  409c54:	ret    0x1206
  409c57:	xor    DWORD PTR [eax-0x20505f9d],ebp
  409c5d:	test   eax,0xdaa77fd7
  409c62:	out    0xc8,eax
  409c64:	mov    eax,ds:0x3f42df29
  409c69:	ffreep st(2)
  409c6b:	aad    0x78
  409c6d:	inc    eax
  409c6e:	jmp    0x409c6e
  409c70:	mov    DWORD PTR [edx],0xa4bea208
  409c76:	int3   
  409c77:	cmp    eax,0xec5d6d69
  409c7c:	arpl   WORD PTR [ecx+edi*1-0x4c34a467],dx
  409c83:	imul   edx,DWORD PTR [ecx-0x5613f3dd],0x282fc3d9
  409c8d:	es cs popf 
  409c90:	and    BYTE PTR [eax-0x39],0x7c
  409c94:	xor    edx,DWORD PTR [eiz*8-0x6710d137]
  409c9b:	push   edx
  409c9c:	les    ecx,FWORD PTR [ebx-0x28]
  409c9f:	mov    eax,ds:0x6999649a
  409ca4:	popf   
  409ca5:	jecxz  0x409cb5
  409ca7:	sub    BYTE PTR [edi+ebx*1+0x3f],0xf5
  409cac:	sub    esp,DWORD PTR [edi+0x5285a319]
  409cb2:	adc    ebp,ebp
  409cb4:	or     esi,DWORD PTR [eax]
  409cb6:	adc    esp,DWORD PTR [edx]
  409cb8:	push   ss
  409cb9:	push   ebx
  409cba:	pop    esi
  409cbb:	xchg   ebx,eax
  409cbc:	gs std 
  409cbe:	retf   
  409cbf:	mov    ebp,0xcb631178
  409cc4:	in     eax,0x6a
  409cc6:	retf   0xf092
  409cc9:	dec    ecx
  409cca:	popf   
  409ccb:	lods   eax,DWORD PTR ds:[esi]
  409ccc:	je     0x409d12
  409cce:	imul   esp,edx,0xffffffb8
  409cd1:	pop    ebp
  409cd2:	sub    eax,0x8f856248
  409cd7:	ss loop 0x409c85
  409cda:	push   0xdbfa6586
  409cdf:	dec    ebp
  409ce0:	mov    ds:0xd8721c05,al
  409ce5:	hlt    
  409ce6:	sub    al,0x8
  409ce8:	inc    edx
  409ce9:	jl     0x409c72
  409ceb:	into   
  409cec:	jle    0x409ce4
  409cee:	mov    al,ds:0xc3955a04
  409cf3:	sub    al,0xd
  409cf5:	aaa    
  409cf6:	mov    ebx,0x79cffc7f
  409cfb:	jp     0x409d1a
  409cfd:	clc    
  409cfe:	fucom  st(1)
  409d00:	inc    edx
  409d01:	test   eax,0x31c58e8
  409d06:	xchg   ebp,eax
  409d07:	cdq    
  409d08:	push   ecx
  409d09:	fwait
  409d0a:	imul   ebx,DWORD PTR [ebx-0x52f50bc9],0x9885eb38
  409d14:	adc    al,0x3a
  409d16:	dec    esp
  409d17:	xor    ah,BYTE PTR [ecx]
  409d19:	xor    DWORD PTR [ecx-0x27],eax
  409d1c:	in     al,dx
  409d1d:	jns    0x409d11
  409d1f:	or     ebp,DWORD PTR [ebp-0x70217fb4]
  409d25:	mov    ah,0x3a
  409d27:	push   edi
  409d28:	test   eax,0xb3d2ee21
  409d2d:	mov    BYTE PTR [eax+ebp*4+0x32bd6bdd],dl
  409d34:	sub    DWORD PTR [ebp+0x6b688ece],esp
  409d3a:	(bad)  
  409d3b:	loop   0x409d35
  409d3d:	aad    0x49
  409d3f:	test   esp,0x16720fd1
  409d45:	repz pushf 
  409d47:	ds fld st(1)
  409d4a:	cld    
  409d4b:	sbb    al,BYTE PTR [edx+0x34]
  409d4e:	retf   0xebca
  409d51:	adc    ebx,ebx
  409d53:	push   eax
  409d54:	pushf  
  409d55:	int    0xed
  409d57:	aam    0xd3
  409d59:	out    dx,al
  409d5a:	cld    
  409d5b:	jg     0x409cf9
  409d5d:	pop    ebx
  409d5e:	inc    edi
  409d5f:	loopne 0x409d76
  409d61:	ins    DWORD PTR es:[edi],dx
  409d62:	das    
  409d63:	mov    WORD PTR [ecx+eax*2+0x1d2deaa7],?
  409d6a:	ror    DWORD PTR [ebx],1
  409d6c:	enter  0xba2c,0xcd
  409d70:	sar    DWORD PTR [ecx+0x73685d7d],1
  409d76:	inc    eax
  409d77:	inc    edi
  409d78:	es in  eax,0x84
  409d7b:	and    al,0xf1
  409d7d:	mov    bl,0x1b
  409d7f:	bound  esi,QWORD PTR [edi-0x77]
  409d82:	inc    ecx
  409d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d84:	or     dh,BYTE PTR [ebx-0x6b2ed721]
  409d8a:	dec    edi
  409d8b:	(bad)  
  409d8d:	lds    ecx,FWORD PTR [edx+eiz*2-0x3cc21f38]
  409d94:	cmc    
  409d95:	syscall 
  409d97:	ss int3 
  409d99:	push   ecx
  409d9a:	scas   al,BYTE PTR es:[edi]
  409d9b:	adc    ah,BYTE PTR [ebx]
  409d9d:	or     al,BYTE PTR [edx+0x249c67dc]
  409da3:	jns    0x409d9d
  409da5:	lea    edx,[edi+ecx*2-0x765caf2a]
  409dac:	(bad)  
  409dad:	(bad)  
  409dae:	div    BYTE PTR [edi-0x40]
  409db1:	jmp    0x409e22
  409db3:	or     eax,0xe7fd710e
  409db8:	mov    eax,esp
  409dba:	fcomp  QWORD PTR [ecx]
  409dbc:	shl    eax,1
  409dbe:	sbb    al,BYTE PTR [eax+0x74]
  409dc1:	mov    eax,0x71269e52
  409dc6:	scas   eax,DWORD PTR es:[edi]
  409dc7:	mov    ds:0xba052b9b,eax
  409dcc:	adc    dl,cl
  409dce:	sub    edi,DWORD PTR [edx+eiz*1+0x49]
  409dd2:	fs cdq 
  409dd4:	leave  
  409dd5:	or     eax,0x6046ea7d
  409dda:	shl    ch,0x3a
  409ddd:	int    0x93
  409ddf:	lock mov ebx,0x86ac2720
  409de5:	clc    
  409de6:	adc    BYTE PTR [edi+0x67],0x6c
  409dea:	out    dx,eax
  409deb:	into   
  409dec:	jmp    0xc7e89740
  409df1:	jo     0x409dae
  409df3:	and    al,0x6a
  409df5:	push   esp
  409df6:	xor    BYTE PTR [edi+0x73ae3c64],cl
  409dfc:	cdq    
  409dfd:	int3   
  409dfe:	icebp  
  409dff:	xor    dh,BYTE PTR [ebp+ecx*2-0x5085aa56]
  409e06:	ret    0x8230
  409e09:	or     al,0x5e
  409e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0c:	push   es
  409e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0e:	addr16 mov ecx,0x6a1683ed
  409e14:	nop
  409e15:	mov    dl,0x7b
  409e17:	fld    QWORD PTR [ebx+0x7274a919]
  409e1d:	inc    ebp
  409e1e:	mov    edx,0xdc6bf75c
  409e23:	mov    bl,0xeb
  409e25:	shr    BYTE PTR [ebp*1+0x75f00524],cl
  409e2c:	pop    ss
  409e2d:	fsubr  st,st(1)
  409e2f:	mov    gs,esi
  409e31:	mov    DWORD PTR [edi-0x35443eb2],ebp
  409e37:	inc    ebx
  409e38:	dec    ebx
  409e39:	in     al,0x9b
  409e3b:	push   es
  409e3c:	aad    0xc8
  409e3e:	or     DWORD PTR [edx+0x6b2b15ce],esi
  409e44:	mov    al,ds:0x48e13944
  409e4a:	cmp    eax,0x230fa67f
  409e4f:	cmp    esi,DWORD PTR [ebp+0x5603897d]
  409e55:	ja     0x409dea
  409e57:	imul   ebp,ecx,0xffffffc8
  409e5a:	sub    dl,BYTE PTR [edi+0x1ad15547]
  409e60:	sbb    BYTE PTR [ebp-0x4b],0xb5
  409e64:	xor    esp,DWORD PTR [edx]
  409e66:	sub    edx,ebp
  409e68:	push   edi
  409e69:	xchg   ecx,eax
  409e6a:	xchg   esp,eax
  409e6b:	or     edi,DWORD PTR [edx]
  409e6d:	(bad)  
  409e6f:	mov    bh,ch
  409e71:	sti    
  409e72:	xchg   ch,cl
  409e74:	dec    eax
  409e75:	rcr    BYTE PTR [ebx],cl
  409e77:	and    ch,ah
  409e79:	shl    BYTE PTR [edx],cl
  409e7b:	add    BYTE PTR ds:0x6fa4bdc8,ch
  409e81:	sti    
  409e82:	jp     0x409ed4
  409e84:	inc    ebp
  409e85:	(bad)  
  409e86:	lock addr16 jmp 0x3d80:0x3beec2a
  409e8f:	mov    al,0x7f
  409e91:	(bad)  
  409e92:	cli    
  409e93:	call   0x87700b57
  409e98:	ror    bh,cl
  409e9a:	xchg   ecx,eax
  409e9b:	loop   0x409e86
  409e9d:	fwait
  409e9e:	les    ebx,FWORD PTR ds:0xaea70a0a
  409ea4:	cmp    eax,0x6156828c
  409ea9:	or     eax,0xabeadba0
  409eae:	adc    BYTE PTR [ecx+0x2ec9c9ae],0x6f
  409eb5:	ss sbb al,0x92
  409eb8:	mov    ebp,0x26df8733
  409ebd:	and    esp,esi
  409ebf:	jnp    0x409e9f
  409ec1:	jp     0x409ee1
  409ec3:	cmp    BYTE PTR [esi-0x4acf5d8e],0x7d
  409eca:	jae    0x409ec1
  409ecc:	sub    BYTE PTR ds:[esi],ch
  409ecf:	imul   esi,edx,0xffffffed
  409ed2:	test   BYTE PTR [ebp+0x2e],dl
  409ed5:	nop
  409ed6:	cmp    ch,bl
  409ed8:	(bad)  ds:0xcea2aa5e
  409ede:	and    al,0xbf
  409ee0:	lea    ebp,[esi+0x25]
  409ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee4:	push   0xffffffdb
  409ee6:	push   esp
  409ee7:	add    al,0x48
  409ee9:	pop    es
  409eea:	das    
  409eeb:	mov    al,ds:0x48d2853c
  409ef0:	mov    cl,0x48
  409ef2:	dec    edi
  409ef3:	iret   
  409ef4:	or     esi,esp
  409ef6:	addr16 mov dl,0x25
  409ef9:	push   ecx
  409efa:	jae    0x409e90
  409efc:	mov    eax,ds:0xc95f269e
  409f01:	ds xor eax,0x7ec0f483
  409f07:	xchg   BYTE PTR [ecx+0x3ceca81d],dh
  409f0d:	xchg   ecx,eax
  409f0e:	sub    al,0x92
  409f10:	sti    
  409f11:	add    al,0x89
  409f13:	jle    0x409efb
  409f15:	cdq    
  409f16:	pushf  
  409f17:	and    bl,BYTE PTR [edx+ebx*8-0x47]
  409f1b:	rcl    BYTE PTR [edi+0x8826912],1
  409f21:	fs gs adc al,0x84
  409f25:	pop    es
  409f26:	(bad)  
  409f27:	jae    0x409f90
  409f29:	mov    BYTE PTR [ebx+0x4a4e7ed6],0x90
  409f30:	cs in  al,dx
  409f32:	and    cl,al
  409f34:	jg     0x409f96
  409f36:	inc    esi
  409f37:	or     BYTE PTR [esi+ecx*4-0x2],0xad
  409f3c:	xchg   ecx,eax
  409f3d:	adc    BYTE PTR ds:0x649e3f12,bh
  409f43:	out    0x5a,al
  409f45:	mov    ebp,0x2b422a83
  409f4a:	push   edx
  409f4b:	and    BYTE PTR [edx+0x106a708d],0x33
  409f52:	das    
  409f53:	sub    eax,0x83a9cb0d
  409f58:	xchg   esi,eax
  409f59:	inc    ecx
  409f5a:	std    
  409f5b:	lods   al,BYTE PTR ds:[esi]
  409f5c:	lods   eax,DWORD PTR ds:[esi]
  409f5d:	push   ds
  409f5e:	jno    0x409fdf
  409f60:	sub    esi,esp
  409f62:	dec    edx
  409f63:	pop    ss
  409f64:	jle    0x409eea
  409f66:	and    BYTE PTR [esi+0x47af1443],bl
  409f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6d:	pop    ebp
  409f6e:	gs xchg ebp,ebx
  409f71:	sub    eax,0xd2773803
  409f76:	lods   eax,DWORD PTR ds:[esi]
  409f77:	xlat   BYTE PTR ds:[ebx]
  409f78:	inc    ebx
  409f79:	ins    BYTE PTR es:[edi],dx
  409f7a:	sub    edi,DWORD PTR [edi-0x519327fe]
  409f80:	and    ebp,DWORD PTR [ecx+0x4e]
  409f83:	inc    eax
  409f84:	sbb    DWORD PTR [esi-0x19],esi
  409f87:	push   ss
  409f88:	or     bl,BYTE PTR [ebp-0x2c]
  409f8b:	lahf   
  409f8c:	jmp    FWORD PTR [ecx+edx*1-0x2e311e18]
  409f93:	and    al,bl
  409f95:	or     eax,DWORD PTR [esi]
  409f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f98:	mov    WORD PTR [esi-0x3a],es
  409f9b:	dec    dx
  409f9d:	push   ds
  409f9e:	rcr    DWORD PTR [edi-0x38baeabf],cl
  409fa4:	fmul   DWORD PTR [edx+0x74]
  409fa7:	mov    dl,0x9f
  409fa9:	sti    
  409faa:	jge    0x409f3e
  409fac:	sub    dh,BYTE PTR [edi]
  409fae:	dec    ebp
  409faf:	div    BYTE PTR [edx+0x7c]
  409fb2:	repz into 
  409fb4:	scas   eax,DWORD PTR es:[edi]
  409fb5:	or     al,0xe9
  409fb7:	arpl   WORD PTR [esi+0x12],sp
  409fba:	mov    ch,cl
  409fbc:	inc    edi
  409fbd:	sub    al,0x69
  409fbf:	dec    edi
  409fc0:	adc    bh,BYTE PTR [eax+ecx*8]
  409fc3:	ret    
  409fc4:	jns    0x409fec
  409fc6:	retf   0x9e04
  409fc9:	mov    cl,0xac
  409fcb:	mov    ah,0xb0
  409fcd:	addr16 (bad) 
  409fcf:	test   ebx,eax
  409fd1:	push   ds
  409fd2:	add    dl,BYTE PTR [edi-0xa1c84cf]
  409fd8:	cmp    al,0x71
  409fda:	or     edi,DWORD PTR [ebx+ebx*1-0x5]
  409fde:	cwde   
  409fdf:	xchg   esi,ecx
  409fe1:	xor    BYTE PTR [edi],al
  409fe3:	cdq    
  409fe4:	cmp    eax,0x8ed1fd53
  409fe9:	cmp    al,0x41
  409feb:	add    al,0xc4
  409fed:	mov    esp,0x44286121
  409ff2:	jnp    0x40a051
  409ff4:	enter  0x8d1a,0x82
  409ff8:	cld    
  409ff9:	es sub eax,0xa6543188
  409fff:	push   cs
  40a000:	mov    bl,0xe3
  40a003:	hlt    
  40a004:	js     0x40a061
  40a006:	test   dh,bh
  40a008:	xchg   ebx,eax
  40a009:	out    dx,eax
  40a00a:	out    0x73,eax
  40a00c:	popf   
  40a00d:	adc    cl,BYTE PTR [edx-0x5f898240]
  40a013:	xor    al,0xfd
  40a015:	push   ds
  40a016:	pop    ebp
  40a017:	data16 fild WORD PTR [eax+ebp*2-0xb76e4ee]
  40a01f:	out    dx,al
  40a020:	or     DWORD PTR ds:[edx],ecx
  40a023:	push   eax
  40a024:	mov    al,ds:0xb5144dd
  40a029:	inc    eax
  40a02a:	bound  ebx,QWORD PTR [esi-0x7bc9cb81]
  40a030:	xchg   esi,eax
  40a031:	xor    BYTE PTR [ebx],0x78
  40a034:	dec    ebx
  40a035:	push   ebx
  40a036:	add    ecx,eax
  40a038:	int3   
  40a039:	stos   DWORD PTR es:[edi],eax
  40a03a:	push   0xbd166668
  40a03f:	mov    BYTE PTR gs:[ecx+edx*8],bh
  40a043:	(bad)  
  40a044:	repnz imul esp,DWORD PTR [esi-0x6f],0x39
  40a049:	pop    esi
  40a04a:	inc    ebp
  40a04b:	pop    ebx
  40a04c:	mov    ch,0x99
  40a04e:	(bad)  
  40a050:	ds inc ebp
  40a052:	je     0x409ffe
  40a054:	mov    DWORD PTR [ecx*2+0x70eba661],edx
  40a05b:	push   esp
  40a05c:	add    dh,BYTE PTR [edi]
  40a05e:	ss scas al,BYTE PTR es:[edi]
  40a060:	sbb    eax,0x8db3f4fa
  40a065:	pop    ebp
  40a066:	jb     0x40a08a
  40a068:	or     ah,dl
  40a06a:	and    ah,BYTE PTR [eax+0x3b82ff23]
  40a070:	mov    eax,0x3c4657e3
  40a075:	sbb    eax,0xfbac4180
  40a07a:	pop    ebp
  40a07b:	inc    esp
  40a07c:	pop    ecx
  40a07d:	repnz mov eax,0x7af8ba68
  40a083:	xor    ebx,esi
  40a085:	dec    eax
  40a086:	je     0x40a017
  40a088:	std    
  40a089:	in     al,dx
  40a08a:	jbe    0x40a022
  40a08c:	loop   0x40a035
  40a08e:	clc    
  40a08f:	sbb    DWORD PTR [esi-0x59f338ce],edi
  40a095:	and    BYTE PTR [esi+0x1f],ch
  40a098:	pushf  
  40a099:	ror    BYTE PTR [ecx],cl
  40a09b:	ja     0x40a0af
  40a09d:	xchg   BYTE PTR [ecx+0x3905716f],cl
  40a0a3:	add    eax,0x7e9e5e01
  40a0a8:	jmp    0xfd26:0x12d7b54
  40a0af:	dec    ebx
  40a0b0:	hlt    
  40a0b1:	sbb    eax,0x17d253da
  40a0b6:	or     BYTE PTR [ecx],cl
  40a0b8:	cmc    
  40a0b9:	and    BYTE PTR [ecx-0x36ffde42],dh
  40a0bf:	xor    BYTE PTR [ecx+0x8b58cce],0x9e
  40a0c6:	sets   BYTE PTR [ebp+0x3]
  40a0ca:	mov    edx,DWORD PTR [ebp+0x11]
  40a0cd:	sar    DWORD PTR [ebx-0x6c6ba36c],0xac
  40a0d4:	pop    esp
  40a0d5:	or     al,0x12
  40a0d7:	dec    ebp
  40a0d8:	sbb    DWORD PTR [ebx-0x76],0x2e962eca
  40a0df:	outs   dx,DWORD PTR ds:[esi]
  40a0e0:	cmp    al,0xa4
  40a0e2:	imul   esp,esi,0x354f6982
  40a0e8:	repz xchg ebx,eax
  40a0ea:	dec    esp
  40a0eb:	call   0xcb10:0x27c42b81
  40a0f2:	fdivr  QWORD PTR [ebp+ecx*8+0x286b0be0]
  40a0f9:	inc    ebx
  40a0fa:	cli    
  40a0fb:	enter  0x12e1,0xf5
  40a0ff:	sub    BYTE PTR [edx],dh
  40a101:	adc    DWORD PTR [ebx-0x55],edi
  40a104:	ret    0xc1a4
  40a107:	adc    ch,BYTE PTR [esi-0x6efadfac]
  40a10d:	out    dx,al
  40a10e:	pop    ecx
  40a10f:	and    BYTE PTR [edi],bl
  40a111:	cmp    eax,DWORD PTR [edi+edi*2]
  40a114:	adc    BYTE PTR [eax],ah
  40a116:	rcr    DWORD PTR [ebp-0x75a1875c],1
  40a11c:	nop
  40a11d:	into   
  40a11e:	xor    DWORD PTR [ebp-0x35bbaf5a],esi
  40a124:	xchg   ecx,eax
  40a125:	inc    ebp
  40a126:	or     eax,0x35b28a68
  40a12b:	fadd   DWORD PTR [eax]
  40a12d:	das    
  40a12e:	ins    DWORD PTR es:[edi],dx
  40a12f:	out    0xaf,al
  40a131:	(bad)  
  40a132:	iret   
  40a133:	nop
  40a134:	sbb    ah,BYTE PTR ds:0xa7a179d3
  40a13a:	mov    DWORD PTR [ebx-0x71],ebx
  40a13d:	push   ecx
  40a13e:	mov    esp,0x3fae2172
  40a143:	or     esp,DWORD PTR cs:[ebp+0xe]
  40a147:	adc    BYTE PTR [eax+0x8],cl
  40a14a:	xor    eax,0xab66d46d
  40a14f:	cmp    DWORD PTR [esi-0x45],0xffffffcc
  40a153:	loope  0x40a108
  40a155:	jge    0x40a111
  40a157:	or     DWORD PTR [esi],ecx
  40a159:	xchg   BYTE PTR [ecx+eiz*8-0x5922586b],ch
  40a160:	repz mov ecx,0x2cd266b2
  40a166:	aas    
  40a167:	adc    dl,BYTE PTR [eax]
  40a169:	hlt    
  40a16a:	push   0x25188844
  40a16f:	les    esp,FWORD PTR [edi-0x5d]
  40a172:	loope  0x40a0fb
  40a174:	add    BYTE PTR [ebx+0x55f69937],0x96
  40a17b:	jo     0x40a182
  40a17d:	in     al,0x65
  40a17f:	fisub  DWORD PTR [esi+ebx*8]
  40a182:	es (bad) 
  40a184:	ret    0x6c07
  40a187:	fmul   st,st(4)
  40a189:	shl    edi,cl
  40a18b:	sub    dl,cl
  40a18d:	or     dl,0x1b
  40a190:	addr16 dec esp
  40a192:	aam    0x9e
  40a194:	inc    esp
  40a195:	loop   0x40a18e
  40a197:	(bad)  
  40a198:	mov    ebx,DWORD PTR [eax+0x39]
  40a19b:	inc    ecx
  40a19c:	mov    al,ds:0x5a47a64f
  40a1a1:	xchg   edi,eax
  40a1a2:	je     0x40a130
  40a1a4:	sub    eax,0xc023e8e1
  40a1a9:	mov    eax,esp
  40a1ab:	inc    BYTE PTR ss:[esi-0x214a7a4]
  40a1b2:	or     dl,cl
  40a1b4:	dec    eax
  40a1b5:	dec    eax
  40a1b6:	hlt    
  40a1b7:	mov    ds:0x94274a5d,al
  40a1bc:	mov    cl,0x51
  40a1be:	lods   eax,DWORD PTR ds:[esi]
  40a1bf:	retf   0x1842
  40a1c2:	jl     0x40a23c
  40a1c4:	imul   edi,ebx,0x5d
  40a1c7:	or     al,0xab
  40a1c9:	and    BYTE PTR [eax],bh
  40a1cb:	pop    ss
  40a1cc:	icebp  
  40a1cd:	mov    BYTE PTR [eax+0x382995a1],dh
  40a1d3:	int3   
  40a1d4:	pop    esi
  40a1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d7:	inc    esp
  40a1d8:	shl    dl,cl
  40a1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1db:	jmp    0xfd80:0xd0d6d177
  40a1e2:	xor    DWORD PTR ds:0x33a2da32,esp
  40a1e8:	or     DWORD PTR cs:[edi-0x256609ef],eax
  40a1ef:	mov    edx,0x73b8b606
  40a1f4:	jbe    0x40a20f
  40a1f6:	push   ebx
  40a1f7:	out    dx,eax
  40a1f8:	loop   0x40a23b
  40a1fa:	mov    esi,0x734c72bb
  40a1ff:	or     eax,esp
  40a201:	jo     0x40a220
  40a203:	sub    bh,ch
  40a205:	inc    ecx
  40a206:	jge    0x40a1cb
  40a208:	xchg   edx,eax
  40a209:	xchg   edi,eax
  40a20a:	sub    bl,BYTE PTR [edx+0x4a4d4702]
  40a210:	shl    BYTE PTR [edx-0x1c],cl
  40a213:	xchg   ebx,eax
  40a214:	test   ecx,ecx
  40a216:	xchg   ecx,eax
  40a217:	imul   di,di,0xcf3c
  40a21c:	pop    ecx
  40a21d:	sbb    DWORD PTR [ebx+0x78],esp
  40a220:	sub    DWORD PTR [esi+0x2a0cabff],ebx
  40a226:	test   al,0x34
  40a228:	jp     0x40a270
  40a22a:	sbb    DWORD PTR [ecx+0x6],0xfffffff8
  40a22e:	icebp  
  40a22f:	(bad)  [ebx-0x54]
  40a232:	xchg   bh,dh
  40a234:	ds je  0x40a253
  40a237:	addr16 out 0x76,eax
  40a23a:	sbb    esi,edi
  40a23c:	cli    
  40a23d:	xor    dl,BYTE PTR [ebx-0x2aa029a9]
  40a243:	xchg   ebp,eax
  40a244:	scas   eax,DWORD PTR es:[edi]
  40a245:	sti    
  40a246:	(bad)  
  40a247:	mov    eax,0xcc71def0
  40a24c:	jmp    0x40a255
  40a24e:	aas    
  40a24f:	dec    edx
  40a250:	lds    ebp,FWORD PTR [ebx+ecx*8-0x10]
  40a254:	int    0xfb
  40a256:	in     al,0x2b
  40a258:	test   DWORD PTR [ebp-0x1a3bc77c],0x7d8b0064
  40a262:	or     al,0x33
  40a264:	stc    
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	mov    ecx,0xe2f7f0d
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	mov    bh,0x16
  40abe5:	and    al,0xe0
  40abe7:	popa   
  40abe8:	mov    al,fs:0x2ed66446
  40abee:	in     al,dx
  40abef:	mov    ch,0x26
  40abf1:	inc    edi
  40abf2:	adc    BYTE PTR [ecx],0xb5
  40abf5:	push   0xa417f57
  40abfa:	xor    DWORD PTR [eax],esp
  40abfc:	inc    ebx
  40abfd:	push   0x6e2be936
  40ac02:	cmp    al,0x13
  40ac04:	repnz push es
  40ac06:	outs   dx,BYTE PTR ds:[esi]
  40ac07:	not    DWORD PTR [ecx+ecx*8]
  40ac0a:	cmp    al,0xe8
  40ac0c:	pop    edx
  40ac0d:	dec    ebx
  40ac0e:	or     ecx,DWORD PTR [ebx]
  40ac10:	mov    ds:0xdc82471c,eax
  40ac15:	jle    0x40aba9
  40ac17:	dec    ebp
  40ac18:	or     DWORD PTR [ebp-0x286989eb],ebx
  40ac1e:	jae    0x40abb1
  40ac20:	sbb    al,0xe9
  40ac22:	dec    esp
  40ac23:	mov    esi,0xbc877a4d
  40ac28:	addr16 mov edi,0xa0fc1cd6
  40ac2e:	and    dh,dl
  40ac30:	push   edi
  40ac31:	fcmovnu st,st(4)
  40ac33:	imul   BYTE PTR [eax-0x32]
  40ac36:	test   BYTE PTR [eax+0x8],al
  40ac39:	addr16 stc 
  40ac3b:	aas    
  40ac3c:	sar    cl,cl
  40ac3e:	pushf  
  40ac3f:	fidiv  DWORD PTR [eax-0x66ac31be]
  40ac45:	mov    ebx,0x1ec78486
  40ac4a:	sbb    eax,0xf7b7a926
  40ac4f:	stos   BYTE PTR es:[edi],al
  40ac50:	(bad)  
  40ac51:	dec    ebp
  40ac52:	push   esp
  40ac53:	fmul   DWORD PTR [edx+eax*2]
  40ac56:	xor    DWORD PTR [eax],eax
  40ac58:	and    edi,esp
  40ac5a:	mov    ebp,0xd70954ad
  40ac5f:	rol    DWORD PTR [edx-0x4d],1
  40ac62:	sbb    eax,edi
  40ac64:	(bad)  
  40ac65:	adc    BYTE PTR [edx+0x46c33630],ch
  40ac6b:	out    0x6e,al
  40ac6d:	jae    0x40ac30
  40ac6f:	fs pop ds
  40ac71:	addr16 out 0x2f,eax
  40ac74:	jle    0x40ac0e
  40ac76:	out    0xb9,al
  40ac78:	adc    esp,0xffffffdb
  40ac7b:	stos   BYTE PTR es:[edi],al
  40ac7c:	sbb    ebx,DWORD PTR [ebp-0xe993362]
  40ac82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac83:	or     al,0x84
  40ac85:	xchg   esi,eax
  40ac86:	leave  
  40ac87:	rol    DWORD PTR [ebx+0x674cd7d2],0x73
  40ac8e:	test   DWORD PTR [ebp-0x139d8ba9],edi
  40ac94:	mov    DWORD PTR [edi+0x18a8d040],esp
  40ac9a:	loopne 0x40ace9
  40ac9c:	mov    dh,0x32
  40ac9e:	xor    bh,BYTE PTR [edx]
  40aca0:	mov    dl,0xd6
  40aca2:	xor    dl,ah
  40aca4:	lds    eax,FWORD PTR [edi+0x4d8864e]
  40acaa:	repnz push cs
  40acac:	pop    ebp
  40acad:	out    dx,al
  40acae:	rcr    BYTE PTR ds:0xed31c9a1,0x30
  40acb5:	fs in  eax,0x21
  40acb8:	add    eax,0xe1399feb
  40acbd:	sbb    DWORD PTR [ecx-0x23],eax
  40acc0:	push   0xffffffb3
  40acc2:	sub    ecx,DWORD PTR [ecx]
  40acc4:	mov    ebp,0xffa8265
  40acc9:	mov    WORD PTR [edi],?
  40accb:	or     al,0x49
  40accd:	mov    ebp,DWORD PTR [edx+0x574bf45f]
  40acd3:	dec    edi
  40acd4:	mov    ds:0xa94c53b8,eax
  40acd9:	inc    ebx
  40acda:	mov    esi,0x7fcd48aa
  40acdf:	and    DWORD PTR [edi-0x3f415587],esi
  40ace5:	jmp    0x40ac89
  40ace7:	add    al,0x72
  40ace9:	cmc    
  40acea:	ret    
  40aceb:	loopne 0x40acbd
  40aced:	push   ecx
  40acee:	fs loope 0x40ad6d
  40acf1:	mov    dl,0x6e
  40acf3:	or     dh,BYTE PTR [ebx-0x5a731a57]
  40acf9:	ss loop 0x40acfe
  40acfc:	push   es
  40acfd:	add    al,0x4e
  40acff:	cdq    
  40ad00:	invd   
  40ad02:	outs   dx,DWORD PTR ds:[esi]
  40ad03:	test   eax,0xad053e59
  40ad08:	inc    esp
  40ad09:	sub    al,0x5e
  40ad0b:	out    0xb4,eax
  40ad0d:	jnp    0x40accb
  40ad0f:	and    al,0xd0
  40ad11:	(bad)  
  40ad12:	out    dx,al
  40ad13:	mov    esp,0x96c81a6f
  40ad18:	xchg   edx,eax
  40ad19:	mov    dl,0xb7
  40ad1b:	sub    eax,0x22ae5595
  40ad20:	les    edi,FWORD PTR [eax-0x7]
  40ad23:	lock cmc 
  40ad25:	pop    ds
  40ad26:	push   0x38
  40ad28:	jecxz  0x40acac
  40ad2a:	fsubr  st,st(5)
  40ad2c:	bound  ebp,QWORD PTR [edx]
  40ad2e:	sahf   
  40ad2f:	or     al,0xc8
  40ad31:	or     DWORD PTR [edx+0x4f20bfc1],esi
  40ad37:	out    0xc2,al
  40ad39:	retf   0x215a
  40ad3c:	push   esi
  40ad3d:	xor    BYTE PTR [eax+0x26238eb9],dl
  40ad43:	mov    eax,ds:0x5bed37c4
  40ad48:	(bad)  
  40ad49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4a:	fwait
  40ad4b:	cmc    
  40ad4c:	xchg   DWORD PTR [bp-0x2707],edx
  40ad51:	push   cs
  40ad52:	ja     0x40ad9d
  40ad54:	clc    
  40ad55:	pushf  
  40ad56:	xchg   BYTE PTR [esp+edi*4+0x39d3cb9c],cl
  40ad5d:	std    
  40ad5e:	jbe    0x40ad54
  40ad60:	mov    ebx,0xfb1dc72d
  40ad65:	aaa    
  40ad66:	je     0x40ad4e
  40ad68:	jbe    0x40ad8b
  40ad6a:	sub    ebp,eax
  40ad6c:	call   0x87378d64
  40ad71:	xchg   edx,eax
  40ad72:	and    eax,0x2dc87580
  40ad77:	adc    bl,BYTE PTR [esi]
  40ad79:	call   0x126b:0x20f1e904
  40ad80:	xor    ah,BYTE PTR [edx-0x10]
  40ad83:	inc    ebp
  40ad84:	bnd jmp 0x40ad35
  40ad87:	push   edx
  40ad88:	test   al,0xed
  40ad8a:	loop   0x40ad3c
  40ad8c:	leave  
  40ad8d:	loop   0x40ae07
  40ad8f:	mov    al,ds:0xee879f3b
  40ad94:	mov    dl,0xe5
  40ad96:	js     0x40ada0
  40ad98:	shl    DWORD PTR [eax-0x60a67a51],cl
  40ad9e:	dec    esi
  40ad9f:	shr    BYTE PTR [ebx-0x5c],1
  40ada2:	(bad)  
  40ada3:	mov    ecx,esp
  40ada5:	inc    ecx
  40ada6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ada7:	inc    edi
  40ada8:	cmp    BYTE PTR [eax+0x4b],dl
  40adab:	fistp  DWORD PTR [ecx]
  40adad:	call   0x78b9:0x1996b109
  40adb4:	pop    es
  40adb5:	or     esi,edx
  40adb7:	out    dx,eax
  40adb8:	jle    0x40add1
  40adba:	cld    
  40adbb:	xor    DWORD PTR [ebp-0x2cd711e6],esi
  40adc1:	mov    esi,0x92b5603d
  40adc6:	xchg   DWORD PTR [ebx+ecx*4+0x6e],esp
  40adca:	dec    eax
  40adcb:	les    ebp,FWORD PTR [esi]
  40adcd:	pop    ss
  40adce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adcf:	xchg   edx,eax
  40add0:	mov    ds:0x730447ce,eax
  40add5:	and    dl,ah
  40add7:	mov    ds:0xd00efda6,al
  40addc:	dec    esi
  40addd:	outs   dx,DWORD PTR ds:[esi]
  40adde:	cld    
  40addf:	mov    cl,0xd5
  40ade1:	ins    BYTE PTR es:[edi],dx
  40ade2:	sbb    esi,DWORD PTR [edx-0x10]
  40ade5:	push   edx
  40ade6:	push   eax
  40ade7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade8:	stos   BYTE PTR es:[edi],al
  40ade9:	stos   BYTE PTR es:[edi],al
  40adea:	fld    QWORD PTR [ebx+0x48ed0ae8]
  40adf0:	pop    edx
  40adf1:	popf   
  40adf2:	jle    0x40ae0c
  40adf4:	inc    ebx
  40adf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adf6:	sub    bl,bl
  40adf8:	hlt    
  40adf9:	cdq    
  40adfa:	adc    al,0xca
  40adfc:	xchg   BYTE PTR [eax-0x52],ah
  40adff:	sahf   
  40ae00:	mov    bh,0x2d
  40ae02:	(bad)  
  40ae03:	adc    eax,DWORD PTR [ebx+eiz*1+0x38b22ba9]
  40ae0a:	and    al,0xb0
  40ae0c:	dec    ecx
  40ae0d:	and    dl,BYTE PTR [ebx-0x5b]
  40ae10:	mov    al,0x33
  40ae12:	pop    eax
  40ae13:	daa    
  40ae14:	in     al,dx
  40ae15:	(bad)  
  40ae16:	repz jnp 0x40adb1
  40ae19:	jns    0x40ae03
  40ae1b:	cli    
  40ae1c:	je     0x40ae96
  40ae1e:	xor    eax,0x3c31009a
  40ae23:	enter  0x9b8d,0xb1
  40ae27:	fdivrp st(7),st
  40ae29:	dec    ebx
  40ae2a:	mov    ?,eax
  40ae2c:	jne    0x40adf0
  40ae2e:	or     al,0xa5
  40ae30:	aam    0x2f
  40ae32:	add    esp,DWORD PTR [ebx]
  40ae34:	mov    ebx,0x9a7f31b4
  40ae39:	enter  0xe503,0x5
  40ae3d:	push   edi
  40ae3e:	sbb    al,0x76
  40ae40:	rcr    DWORD PTR [eax+0x66d2ffb6],0x82
  40ae47:	push   edi
  40ae48:	clc    
  40ae49:	data16 clc 
  40ae4b:	cmp    bh,ah
  40ae4d:	mov    edi,0xfcf99971
  40ae52:	sub    DWORD PTR [ebx-0x79],ebp
  40ae55:	pop    ss
  40ae56:	sbb    eax,0x23264ba2
  40ae5b:	enter  0x67dd,0x90
  40ae5f:	jle    0x40ae12
  40ae61:	mov    dh,0x6
  40ae63:	in     eax,0xe3
  40ae65:	inc    ecx
  40ae66:	xchg   esi,eax
  40ae67:	pop    ebp
  40ae68:	push   edi
  40ae69:	das    
  40ae6a:	dec    ebp
  40ae6b:	js     0x40ae9b
  40ae6d:	adc    eax,0x88c2f3e
  40ae72:	in     eax,0x12
  40ae74:	mov    ?,WORD PTR [eax]
  40ae76:	rol    DWORD PTR [esi-0x5fa06bd4],1
  40ae7c:	push   ss
  40ae7d:	lahf   
  40ae7e:	cld    
  40ae7f:	icebp  
  40ae80:	pop    ss
  40ae81:	test   eax,0xe5b1c632
  40ae86:	sub    ebp,DWORD PTR [eax-0x61a5afee]
  40ae8c:	xor    esp,edi
  40ae8e:	adc    cl,BYTE PTR ds:0x9fec3d76
  40ae94:	sahf   
  40ae95:	neg    DWORD PTR [edx]
  40ae97:	adc    DWORD PTR [ebp+0x79aa8081],esi
  40ae9d:	call   0x15ec:0x9a26f480
  40aea4:	pop    ecx
  40aea5:	jo     0x40aea8
  40aea7:	adc    edx,DWORD PTR [ebx]
  40aea9:	adc    edx,ecx
  40aeab:	cmp    al,ah
  40aead:	aaa    
  40aeae:	scas   al,BYTE PTR es:[edi]
  40aeaf:	and    al,0x2b
  40aeb1:	jecxz  0x40aeb0
  40aeb3:	mov    ds:0x420f7548,al
  40aeb8:	and    ebp,esp
  40aeba:	cwde   
  40aebb:	and    eax,DWORD PTR [eax+eax*4-0x3e]
  40aebf:	daa    
  40aec0:	add    al,0xbc
  40aec2:	retf   
  40aec3:	ja     0x40aeeb
  40aec5:	jns    0x40aee2
  40aec7:	(bad)  
  40aec8:	inc    esi
  40aec9:	test   BYTE PTR [ebp-0x7b],0x3a
  40aecd:	pop    esp
  40aece:	outs   dx,BYTE PTR ds:[esi]
  40aecf:	mov    ch,al
  40aed1:	add    DWORD PTR [ecx+0x5e],ecx
  40aed4:	cmp    bh,bl
  40aed6:	dec    edi
  40aed7:	adc    bl,dh
  40aed9:	popf   
  40aeda:	dec    ecx
  40aedb:	mov    bl,0xa0
  40aedd:	ja     0x40aee3
  40aedf:	inc    edx
  40aee0:	test   eax,0x1cf198a1
  40aee5:	popa   
  40aee6:	sbb    DWORD PTR [edi+edx*4-0x60],esp
  40aeea:	push   edx
  40aeeb:	dec    eax
  40aeec:	mov    ebx,DWORD PTR [edx+0x4e]
  40aeef:	fcmovu st,st(1)
  40aef1:	out    dx,al
  40aef2:	(bad)  
  40aef3:	jmp    0x34d2:0xd6e42c13
  40aefa:	mov    al,ds:0x89940633
  40aeff:	and    eax,0xb1145ef0
  40af04:	xchg   esi,eax
  40af05:	push   ebp
  40af06:	add    ch,BYTE PTR [ebx-0x76]
  40af09:	push   edi
  40af0a:	aam    0x4c
  40af0c:	je     0x40af22
  40af0e:	pop    es
  40af0f:	sub    eax,DWORD PTR [eax+0x2a]
  40af12:	fld    TBYTE PTR [edi+0x31dfaba9]
  40af18:	stos   BYTE PTR es:[edi],al
  40af19:	xchg   BYTE PTR [edx+0x26591f28],dl
  40af1f:	mov    eax,DWORD PTR [edx+0x5d]
  40af22:	lea    esi,[edi-0x80]
  40af25:	mov    ds:0x1d12483c,eax
  40af2a:	mov    edi,0x697b677e
  40af2f:	call   DWORD PTR [edx]
  40af31:	adc    dh,ch
  40af33:	fidiv  DWORD PTR [eax+0x7d]
  40af36:	pop    esp
  40af37:	pop    esp
  40af38:	retf   
  40af39:	cdq    
  40af3a:	cmp    DWORD PTR [eax],esi
  40af3c:	mul    BYTE PTR [ebx-0x19]
  40af3f:	jbe    0x40af83
  40af41:	das    
  40af42:	xor    ebp,eax
  40af44:	pop    esi
  40af45:	xchg   ebx,eax
  40af46:	inc    edi
  40af48:	xchg   esi,eax
  40af49:	es pop eax
  40af4b:	inc    edi
  40af4c:	lods   al,BYTE PTR ds:[esi]
  40af4d:	pop    ebx
  40af4e:	pop    eax
  40af4f:	test   BYTE PTR [ecx],0x36
  40af52:	scas   al,BYTE PTR es:[edi]
  40af53:	and    DWORD PTR [esi],eax
  40af55:	scas   al,BYTE PTR es:[edi]
  40af56:	fwait
  40af57:	cdq    
  40af58:	sahf   
  40af59:	loopne 0x40afb1
  40af5b:	adc    al,0xa9
  40af5d:	add    dh,bh
  40af5f:	xlat   BYTE PTR ds:[ebx]
  40af60:	fist   DWORD PTR [ebp+0x3ea43fc0]
  40af66:	mov    DWORD PTR [edi+0x7f],esi
  40af69:	fs jns 0x40af5d
  40af6c:	cwde   
  40af6d:	shl    DWORD PTR [esi],0xea
  40af70:	fisub  DWORD PTR [edi+eax*1+0x4]
  40af74:	push   edi
  40af75:	xchg   edx,eax
  40af76:	sbb    al,0x6f
  40af78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af79:	pop    esi
  40af7a:	inc    esi
  40af7b:	dec    ebp
  40af7c:	jp     0x40af56
  40af7e:	jge    0x40af13
  40af80:	pop    ebp
  40af81:	xchg   ebp,eax
  40af82:	(bad)  
  40af83:	ret    
  40af84:	mov    dl,0xb8
  40af86:	cld    
  40af87:	xor    BYTE PTR [ebp-0x12432724],dh
  40af8d:	jne    0x40afa9
  40af8f:	adc    esp,DWORD PTR [edi+eax*1-0x47f2f44d]
  40af96:	pop    eax
  40af97:	mov    bl,BYTE PTR [ebp-0xb]
  40af9a:	loopne 0x40b004
  40af9c:	push   0x5f
  40af9e:	stc    
  40af9f:	push   0xd1319d53
  40afa4:	cwde   
  40afa5:	dec    esp
  40afa6:	js     0x40af67
  40afa8:	fcmovu st,st(7)
  40afaa:	mov    esi,0x7a42a90e
  40afaf:	mov    bh,0x9b
  40afb1:	add    eax,0x25d8e45d
  40afb6:	jmp    0x3:0x1dc1263d
  40afbd:	mov    ebp,0xda181813
  40afc2:	ficomp DWORD PTR ds:0x404b21f6
  40afc8:	push   edi
  40afc9:	rcr    dl,1
  40afcb:	(bad)  
  40afcc:	rol    DWORD PTR [edi-0x298ff316],1
  40afd2:	call   0x1a54:0x344ad31d
  40afd9:	test   eax,0xbec618ad
  40afde:	mov    bl,0x46
  40afe0:	jp     0x40afca
  40afe2:	ds out 0xde,al
  40afe5:	push   edx
  40afe6:	sbb    al,0xd4
  40afe8:	push   esp
  40afe9:	loop   0x40afa5
  40afeb:	inc    eax
  40afec:	jmp    0x8902:0x54edd4c1
  40aff3:	jo     0x40b03f
  40aff5:	cmp    BYTE PTR [esi],al
  40aff7:	int    0xff
  40aff9:	aam    0xe6
  40affb:	out    0x8d,al
  40affd:	in     al,0xd8
  40afff:	xchg   ecx,eax
  40b000:	sbb    eax,0x74d5a30
  40b005:	sbb    eax,0x3009980f
  40b00a:	adc    ax,WORD PTR [edx]
  40b00d:	retf   
  40b00e:	iret   
  40b00f:	and    al,0xb5
  40b011:	scas   eax,DWORD PTR es:[edi]
  40b012:	mov    cl,0x1f
  40b014:	or     BYTE PTR [edi+0x76],bh
  40b017:	push   eax
  40b018:	push   ebp
  40b019:	jl     0x40b051
  40b01b:	mov    al,0x77
  40b01d:	test   eax,0x9bafb012
  40b022:	sahf   
  40b023:	sub    DWORD PTR [ecx+0x30eb49b1],ebp
  40b029:	or     esp,DWORD PTR ds:0x2fcc54ee
  40b02f:	mov    cl,0x83
  40b031:	jnp    0x40b08e
  40b033:	sar    DWORD PTR [ebx],cl
  40b035:	loope  0x40afe6
  40b037:	add    eax,0xd0ef7830
  40b03c:	pop    es
  40b03d:	xor    DWORD PTR [ebx-0x15],edx
  40b040:	pop    ds
  40b041:	lea    edx,[ebp-0x3533156e]
  40b047:	pop    ebp
  40b048:	mov    ds:0x33df340a,eax
  40b04d:	adc    eax,0x8386f619
  40b052:	arpl   WORD PTR [ebx+0x3b],si
  40b055:	inc    esi
  40b056:	sbb    DWORD PTR [ecx],esi
  40b058:	inc    esi
  40b059:	push   esi
  40b05a:	cmp    bh,BYTE PTR [ebp+eiz*1+0x6987be70]
  40b061:	mov    eax,ecx
  40b063:	jb     0x40b08b
  40b065:	xchg   edx,eax
  40b066:	push   ds
  40b067:	test   al,0xe7
  40b069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06a:	or     edx,ebp
  40b06c:	cli    
  40b06d:	out    0xde,al
  40b06f:	lahf   
  40b070:	jge    0x40b050
  40b072:	or     edi,DWORD PTR [edi-0x40]
  40b075:	xor    al,0xa
  40b077:	sub    edx,ebx
  40b079:	sub    dl,BYTE PTR [edx+edx*8+0x688a86fc]
  40b080:	jae    0x40b0f3
  40b082:	sahf   
  40b083:	pop    ecx
  40b084:	or     ebp,DWORD PTR [edi]
  40b086:	pop    ss
  40b087:	test   al,0xff
  40b089:	cli    
  40b08a:	lea    dx,[ebx+0x69]
  40b08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b08f:	call   0x5f65:0xc681c1a9
  40b096:	xlat   BYTE PTR ds:[ebx]
  40b097:	mov    ecx,0x459adf85
  40b09c:	pop    es
  40b09d:	push   esp
  40b09e:	call   0x1bb1:0x99e9d626
  40b0a5:	mov    eax,ds:0x7aada2ba
  40b0aa:	jmp    DWORD PTR [ebp-0x5bea1d18]
  40b0b0:	push   0x912d4c70
  40b0b5:	mov    ecx,0x4ff7c12c
  40b0ba:	dec    ebp
  40b0bb:	fild   WORD PTR [ebx+0x2691d54f]
  40b0c1:	xchg   ebx,eax
  40b0c2:	outs   dx,DWORD PTR ds:[esi]
  40b0c3:	mov    BYTE PTR [esi],bl
  40b0c5:	add    ah,BYTE PTR [ebp-0x2a]
  40b0c8:	fcmovne st,st(6)
  40b0ca:	ja     0x40b0ff
  40b0cc:	push   es
  40b0cd:	out    dx,eax
  40b0ce:	daa    
  40b0cf:	cmp    edi,DWORD PTR [esi-0x5e]
  40b0d2:	mov    ecx,0x533eadd3
  40b0d7:	sbb    ch,bl
  40b0d9:	sbb    BYTE PTR [esi],dl
  40b0db:	xchg   ebp,eax
  40b0dc:	mul    BYTE PTR [eax-0x769620d0]
  40b0e2:	adc    eax,0xcfe4065c
  40b0e7:	inc    esi
  40b0e8:	pop    esp
  40b0e9:	mov    al,BYTE PTR [ebx+0x39]
  40b0ec:	out    0x7c,al
  40b0ee:	mov    fs,WORD PTR [ecx]
  40b0f0:	sbb    DWORD PTR [ebp+0x529db309],edx
  40b0f6:	cmp    eax,0xf980e059
  40b0fb:	pop    eax
  40b0fc:	test   DWORD PTR [esi+ecx*8],0x3de0eebc
  40b103:	add    BYTE PTR [edi],dl
  40b105:	xor    al,0x14
  40b107:	jl     0x40b175
  40b109:	loope  0x40b094
  40b10b:	popa   
  40b10c:	js     0x40b10d
  40b10e:	test   ebx,0x9b09c256
  40b114:	leave  
  40b115:	lods   eax,DWORD PTR ds:[esi]
  40b116:	into   
  40b117:	push   eax
  40b118:	mov    ecx,DWORD PTR [esi]
  40b11a:	jp     0x40b15b
  40b11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11e:	jb     0x40b0b2
  40b120:	retf   
  40b121:	jns    0x40b12a
  40b123:	test   eax,0xd33e4a67
  40b129:	mov    edx,0xce870068
  40b12e:	cmp    ebp,eax
  40b130:	dec    ecx
  40b131:	fdivr  DWORD PTR [ecx+0x26]
  40b134:	aad    0x52
  40b136:	push   cs
  40b137:	out    0x4e,al
  40b139:	xchg   edx,eax
  40b13a:	sub    al,0x7f
  40b13c:	ja     0x40b187
  40b13e:	mov    ecx,0x87cba906
  40b143:	dec    edi
  40b144:	stc    
  40b145:	inc    ecx
  40b146:	push   esp
  40b147:	lods   eax,DWORD PTR ds:[esi]
  40b148:	sub    eax,0xbe31c27b
  40b14d:	fild   DWORD PTR [edx-0x54d84ce3]
  40b153:	cmp    eax,0x56855845
  40b158:	mov    cl,0x3b
  40b15a:	jno    0x40b11f
  40b15c:	rcr    ecx,cl
  40b15e:	dec    esi
  40b15f:	cmc    
  40b160:	stos   DWORD PTR es:[edi],eax
  40b161:	xor    al,0xe4
  40b163:	aam    0xb8
  40b165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b166:	mov    ds:0x30830ff3,al
  40b16b:	adc    eax,DWORD PTR [edx+0x45d482ab]
  40b171:	(bad)  
  40b173:	ss aaa 
  40b175:	adc    edx,DWORD PTR [ebx]
  40b177:	jno    0x40b12f
  40b179:	adc    al,0x89
  40b17b:	pop    ds
  40b17c:	jo     0x40b18c
  40b17e:	add    al,0x99
  40b180:	in     eax,dx
  40b181:	push   es
  40b182:	pop    eax
  40b183:	add    ebx,edi
  40b185:	pop    ss
  40b186:	mov    al,0xa3
  40b188:	xor    eax,0x1f0fc43e
  40b18d:	out    dx,eax
  40b18e:	jo     0x40b121
  40b190:	sar    DWORD PTR [ecx-0xf63248f],1
  40b196:	outs   dx,BYTE PTR ds:[esi]
  40b197:	nop
  40b198:	ficomp WORD PTR [edi-0xcd51f67]
  40b19e:	push   ebp
  40b19f:	cli    
  40b1a0:	mov    esp,0xa902aff4
  40b1a5:	push   cs
  40b1a6:	xchg   ebp,eax
  40b1a7:	or     DWORD PTR [ecx-0x5167ffc7],esp
  40b1ad:	mov    DWORD PTR [ebp+0x68],esp
  40b1b0:	sub    DWORD PTR [esi],esp
  40b1b2:	sbb    al,0xeb
  40b1b4:	sub    al,ah
  40b1b6:	in     al,0x48
  40b1b8:	fsub   DWORD PTR [ebx+eiz*4-0xf]
  40b1bc:	xor    eax,0xb33ef059
  40b1c1:	push   esp
  40b1c2:	sub    al,0x4c
  40b1c4:	cmp    al,0x8e
  40b1c6:	lock cs ret 0x77c5
  40b1cb:	dec    ecx
  40b1cc:	mov    ebx,0x9da2c52c
  40b1d1:	lods   eax,DWORD PTR ds:[esi]
  40b1d2:	out    0xd1,al
  40b1d4:	aaa    
  40b1d5:	cmc    
  40b1d6:	push   edi
  40b1d8:	or     BYTE PTR ds:0x40dc2a25,al
  40b1de:	dec    esi
  40b1df:	pop    ebx
  40b1e0:	mov    ebp,0x91214e4d
  40b1e5:	seto   bh
  40b1e8:	inc    edi
  40b1e9:	sub    dh,BYTE PTR [edx]
  40b1eb:	dec    ebx
  40b1ec:	sub    eax,0x2a31d31a
  40b1f1:	fsubp  st(7),st
  40b1f3:	lea    esp,ds:0xf461660
  40b1f9:	test   DWORD PTR [edi+0x7c1e1208],ebp
  40b1ff:	pop    edx
  40b200:	sbb    DWORD PTR ds:0x3264c922,ebp
  40b206:	sbb    BYTE PTR [edx],ch
  40b208:	or     al,0x1c
  40b20a:	and    al,bh
  40b20c:	call   0xc08e2dfb
  40b211:	ja     0x40b25e
  40b213:	rol    ch,cl
  40b215:	jne    0x40b222
  40b217:	icebp  
  40b218:	int3   
  40b219:	in     eax,dx
  40b21a:	out    0xa,eax
  40b21c:	imul   al
  40b21e:	cmp    DWORD PTR [ebp-0x3339388a],esi
  40b224:	rcl    DWORD PTR [edx],0x95
  40b227:	(bad)  
  40b229:	rol    cl,cl
  40b22b:	xor    bl,BYTE PTR [edi]
  40b22d:	clc    
  40b22e:	ror    eax,cl
  40b230:	adc    al,0xf
  40b232:	adc    esi,DWORD PTR [ebx]
  40b234:	cmp    ch,BYTE PTR [esi-0x4a50d551]
  40b23a:	ret    
  40b23b:	inc    edi
  40b23c:	xlat   BYTE PTR ds:[ebx]
  40b23d:	es in  eax,dx
  40b23f:	fs aam 0x94
  40b242:	xchg   esi,eax
  40b243:	and    eax,0x429098cd
  40b248:	cmc    
  40b249:	popa   
  40b24a:	into   
  40b24b:	out    dx,eax
  40b24c:	adc    cl,BYTE PTR [ecx]
  40b24e:	fcom   st(0)
  40b250:	xor    BYTE PTR [ecx-0x5b],al
  40b253:	pop    ecx
  40b254:	pop    ebx
  40b255:	cmp    esp,esp
  40b257:	mov    ecx,0x7043301e
  40b25c:	and    dh,BYTE PTR [esi-0x4d]
  40b25f:	rcl    BYTE PTR [edx+0x48],cl
  40b262:	not    bl
  40b264:	and    edx,DWORD PTR [eax-0x4ce7add1]
  40b26a:	cmp    BYTE PTR [eax-0x40],bh
  40b26d:	pushf  
  40b26e:	xchg   edx,eax
  40b26f:	dec    DWORD PTR [esi-0x150bbf1b]
  40b275:	jns    0x40b2e9
  40b277:	dec    ebp
  40b278:	xchg   ebx,eax
  40b279:	in     al,0x3f
  40b27b:	arpl   WORD PTR ds:0xccd40f8a,cx
  40b282:	sub    ah,BYTE PTR ds:0x5e9b46bf
  40b288:	bound  ebx,QWORD PTR [ecx+0x4]
  40b28b:	popf   
  40b28c:	scas   eax,DWORD PTR es:[edi]
  40b28d:	addr16 or eax,0xd02e56fc
  40b293:	lods   al,BYTE PTR ds:[esi]
  40b294:	popf   
  40b295:	sub    esp,DWORD PTR [edx]
  40b297:	inc    edx
  40b298:	out    dx,eax
  40b299:	fs ss jp 0x40b30c
  40b29d:	adc    al,0xd0
  40b29f:	pop    ebx
  40b2a0:	lods   eax,DWORD PTR ds:[esi]
  40b2a1:	clc    
  40b2a2:	sub    edi,eax
  40b2a4:	jle    0x40b2f6
  40b2a6:	dec    ecx
  40b2a7:	pop    ds
  40b2a8:	push   esp
  40b2a9:	add    al,0x43
  40b2ab:	pop    ecx
  40b2ac:	xchg   edx,eax
  40b2ad:	outs   dx,DWORD PTR ds:[esi]
  40b2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2af:	sbb    bl,ah
  40b2b1:	fistp  DWORD PTR [ebp-0x3ab4a3d3]
  40b2b7:	inc    ebx
  40b2b8:	push   0xfffffff1
  40b2ba:	push   ecx
  40b2bb:	repz mov ecx,0xe7840d0f
  40b2c1:	and    BYTE PTR [esi-0x22f20e8],bl
  40b2c7:	nop
  40b2c8:	std    
  40b2c9:	mov    ds:0xec1c2675,al
  40b2ce:	xchg   ebx,eax
  40b2cf:	jge    0x40b29b
  40b2d1:	pop    esp
  40b2d2:	iret   
  40b2d3:	add    al,BYTE PTR [esi-0x5b]
  40b2d6:	ins    BYTE PTR es:[edi],dx
  40b2d7:	adc    cl,BYTE PTR [ebp-0x4d80b184]
  40b2dd:	jae    0x40b2bd
  40b2df:	pushf  
  40b2e0:	push   edi
  40b2e1:	push   ecx
  40b2e2:	fdivr  QWORD PTR [ebx]
  40b2e4:	pop    edx
  40b2e5:	lea    edi,[esp+ebx*8]
  40b2e8:	adc    DWORD PTR [edx],ebx
  40b2ea:	fwait
  40b2eb:	push   es
  40b2ec:	lea    esi,[ebx]
  40b2ee:	mov    ds:0x4e0409a7,al
  40b2f3:	xor    ah,cl
  40b2f5:	test   al,0xe5
  40b2f7:	es xor al,0xa7
  40b2fa:	rol    DWORD PTR [eax+0x2c],cl
  40b2fd:	hlt    
  40b2fe:	push   esi
  40b2ff:	cli    
  40b300:	lds    ecx,FWORD PTR [edi-0x1b]
  40b303:	shl    DWORD PTR [esi+0x3dd32eda],0x76
  40b30a:	cmp    ebx,DWORD PTR ds:0xe86ac11a
  40b310:	jecxz  0x40b310
  40b312:	or     dl,BYTE PTR [edx-0x57a0dea4]
  40b318:	mov    BYTE PTR [eax-0x67],ch
  40b31b:	es leave 
  40b31d:	mov    DWORD PTR [eax],ecx
  40b31f:	cmp    al,BYTE PTR [edx-0x4c654a0a]
  40b325:	push   eax
  40b326:	cmc    
  40b327:	ss pop ecx
  40b329:	lods   eax,DWORD PTR ds:[esi]
  40b32a:	and    al,BYTE PTR [edx-0x15]
  40b32d:	adc    al,0x27
  40b32f:	or     eax,DWORD PTR [eax+0x7efd4079]
  40b335:	int3   
  40b336:	sub    eax,esi
  40b338:	pop    ebx
  40b339:	pusha  
  40b33a:	call   FWORD PTR [ecx-0x2e1cef1d]
  40b340:	pop    esp
  40b341:	mov    bh,0xea
  40b343:	(bad)  
  40b344:	sbb    edx,DWORD PTR [ebp+0x74c7d8cd]
  40b34a:	xor    bl,BYTE PTR [edx-0x512eb3d9]
  40b350:	dec    edx
  40b351:	mov    WORD PTR [ebx-0x58],?
  40b354:	or     BYTE PTR [esi+0x55a7de7f],dl
  40b35a:	and    eax,0xb89f18ef
  40b35f:	mov    BYTE PTR [ebx+0x4a],0x81
  40b363:	int    0x6
  40b365:	stc    
  40b366:	inc    ebx
  40b367:	adc    esp,DWORD PTR [ecx-0x123a7f6]
  40b36d:	xchg   ebx,eax
  40b36e:	add    eax,0x321e882c
  40b373:	shl    DWORD PTR [ecx+ebp*2],0xb4
  40b377:	mov    dl,0x50
  40b379:	fs mov ah,0xf5
  40b37c:	(bad)  
  40b37d:	hlt    
  40b37e:	(bad)  
  40b380:	add    dh,BYTE PTR [edx-0x29073540]
  40b386:	pop    ecx
  40b387:	mov    esi,esi
  40b389:	call   0xd52dd014
  40b38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b38f:	pop    ss
  40b390:	sbb    ch,al
  40b392:	sbb    ecx,DWORD PTR [ecx-0x3f]
  40b395:	(bad)  
  40b396:	mov    bh,0x61
  40b398:	dec    ecx
  40b399:	ss inc eax
  40b39b:	movnti DWORD PTR [ebp-0x5b],ebx
  40b39f:	sbb    DWORD PTR [edx+0x43b63861],0xffffffe0
  40b3a6:	(bad)  
  40b3a7:	cmp    eax,0x831e46a7
  40b3ac:	jb     0x40b3d7
  40b3ae:	stos   BYTE PTR es:[edi],al
  40b3af:	mov    ecx,0xc60a14ef
  40b3b4:	or     eax,0xfa0bfeca
  40b3b9:	and    al,0xc1
  40b3bb:	mov    ebx,0x4e15ff0d
  40b3c0:	nop
  40b3c1:	jp     0x40b39c
  40b3c3:	or     DWORD PTR [esi],esi
  40b3c5:	xchg   ebx,eax
  40b3c6:	mov    bl,0xca
  40b3c8:	mov    bh,0x29
  40b3ca:	or     eax,0xb05467f9
  40b3cf:	repnz sub DWORD PTR [ecx+0x65],edi
  40b3d3:	dec    edx
  40b3d4:	inc    ebp
  40b3d5:	aam    0x14
  40b3d7:	pop    ebp
  40b3d8:	daa    
  40b3d9:	jns    0x40b3f8
  40b3db:	pop    esp
  40b3dc:	lods   al,BYTE PTR ds:[esi]
  40b3dd:	(bad)  
  40b3de:	dec    esi
  40b3df:	or     ecx,edi
  40b3e1:	pushf  
  40b3e2:	push   es
  40b3e3:	or     ch,BYTE PTR [esi+0x50]
  40b3e6:	mov    ds:0x915314b3,al
  40b3eb:	and    bl,ch
  40b3ed:	inc    ebp
  40b3ee:	je     0x40b441
  40b3f0:	inc    ebx
  40b3f1:	mov    ah,0xf7
  40b3f3:	cmp    ecx,DWORD PTR [ebx+0x5]
  40b3f6:	mov    eax,0xe16dd00c
  40b3fb:	imul   ecx,DWORD PTR [eax+0x306a8baf],0xffffff91
  40b402:	ret    
  40b403:	cmp    al,0xf8
  40b405:	mov    ecx,0xdae0e9cf
  40b40a:	loope  0x40b422
  40b40c:	icebp  
  40b40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b40e:	mov    al,ds:0x2e6644b5
  40b413:	call   0x1bb404d8
  40b418:	jne    0x40b468
  40b41a:	and    BYTE PTR [edx-0x22],cl
  40b41d:	in     al,0xc6
  40b41f:	sahf   
  40b420:	retf   0x9ee8
  40b423:	sbb    bl,dh
  40b425:	mov    bh,0xe7
  40b427:	mov    bh,0xf4
  40b429:	dec    edi
  40b42a:	hlt    
  40b42b:	call   DWORD PTR [esi+esi*4]
  40b42e:	shl    bl,cl
  40b430:	inc    edx
  40b431:	xchg   esi,eax
  40b432:	xor    DWORD PTR [edx+0x771dbb36],edx
  40b438:	lock (bad) [esi-0x12]
  40b43c:	add    BYTE PTR [edx-0x25],al
  40b43f:	adc    BYTE PTR [ecx+0x1c],ch
  40b442:	bound  edx,QWORD PTR [esi+0x43]
  40b445:	int    0x7
  40b447:	dec    eax
  40b448:	xchg   esi,eax
  40b449:	(bad)  
  40b44a:	leave  
  40b44b:	loopne 0x40b4af
  40b44d:	scas   al,BYTE PTR es:[edi]
  40b44e:	dec    edi
  40b44f:	bound  esp,QWORD PTR [esi+ecx*2]
  40b452:	lods   eax,DWORD PTR ds:[esi]
  40b453:	lods   eax,DWORD PTR ds:[esi]
  40b454:	lock mov ch,0x71
  40b457:	inc    edi
  40b458:	inc    DWORD PTR [esi+ebx*2-0x5c39ea24]
  40b45f:	mov    ebp,0x6e1ff019
  40b464:	mov    bl,BYTE PTR [eax-0x14]
  40b467:	dec    esi
  40b468:	aas    
  40b469:	(bad)
  40b46d:	lods   al,BYTE PTR ds:[esi]
  40b46e:	mov    ah,0x13
  40b470:	outs   dx,BYTE PTR ds:[esi]
  40b471:	rcr    edi,cl
  40b473:	pop    ebx
  40b474:	into   
  40b475:	psubd  mm2,QWORD PTR [edx+0x42]
  40b479:	push   edi
  40b47a:	pop    edi
  40b47b:	jns    0x40b406
  40b47d:	inc    dx
  40b47f:	pop    esp
  40b480:	lahf   
  40b481:	test   DWORD PTR [edx+0x4f],esi
  40b484:	frstor [esi]
  40b486:	mov    dh,0xf8
  40b488:	pop    esp
  40b489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48a:	inc    edx
  40b48b:	jae    0x40b47a
  40b48d:	mov    ds:0x4fdbc2f8,al
  40b492:	xchg   edi,eax
  40b493:	sub    dl,dl
  40b495:	jecxz  0x40b49a
  40b497:	mov    BYTE PTR [esi],0xd
  40b49a:	fcomp  QWORD PTR [ebp-0x50]
  40b49d:	sub    ebp,DWORD PTR [ebx]
  40b49f:	pop    es
  40b4a0:	das    
  40b4a1:	ret    0xd880
  40b4a4:	bound  eax,QWORD PTR [ecx+0x20]
  40b4a7:	mov    esi,DWORD PTR [edx-0x2b]
  40b4aa:	les    esp,FWORD PTR [eax]
  40b4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ad:	pop    es
  40b4ae:	push   edx
  40b4af:	cdq    
  40b4b0:	add    ecx,eax
  40b4b2:	jmp    0x4f0543ab
  40b4b7:	sahf   
  40b4b8:	xor    ebx,DWORD PTR [edi]
  40b4ba:	stos   BYTE PTR es:[edi],al
  40b4bb:	add    bl,BYTE PTR [ebp-0x56]
  40b4be:	mov    edi,0x50bb0dab
  40b4c3:	pop    esp
  40b4c4:	sub    eax,0x77ef4dbb
  40b4c9:	jnp    0x40b47b
  40b4cb:	add    DWORD PTR [edi-0x76],eax
  40b4ce:	sub    DWORD PTR [eax+0x1d],edx
  40b4d1:	push   ds
  40b4d2:	fadd   DWORD PTR [edx-0x2b]
  40b4d5:	ds ins DWORD PTR es:[edi],dx
  40b4d7:	xchg   ebp,eax
  40b4d8:	cmp    DWORD PTR cs:[ebx+0x59],esi
  40b4dc:	inc    edi
  40b4dd:	aaa    
  40b4de:	into   
  40b4df:	ins    BYTE PTR es:[edi],dx
  40b4e0:	pop    edi
  40b4e1:	sbb    BYTE PTR [ebx+0x361d62ad],dh
  40b4e7:	cs aaa 
  40b4e9:	pusha  
  40b4ea:	ins    BYTE PTR es:[edi],dx
  40b4eb:	cmp    dh,BYTE PTR [ecx+edi*8]
  40b4ee:	test   al,0x90
  40b4f0:	(bad)  
  40b4f1:	rcr    BYTE PTR [esi+esi*4-0x3719eaf2],0x10
  40b4f9:	push   edi
  40b4fa:	imul   ebp,DWORD PTR [ebx],0xffffff91
  40b4fd:	lods   eax,DWORD PTR ds:[esi]
  40b4fe:	sbb    DWORD PTR [esi+0x17],ebx
  40b501:	or     ebx,ecx
  40b503:	and    BYTE PTR ss:[eax+0x67],dh
  40b507:	jns    0x40b4fe
  40b509:	leave  
  40b50a:	loope  0x40b53a
  40b50c:	mov    esp,gs
  40b50e:	ja     0x40b4df
  40b510:	pop    es
  40b511:	(bad)  
  40b512:	jecxz  0x40b4c3
  40b514:	and    edx,DWORD PTR [ebx]
  40b516:	xchg   ebp,eax
  40b517:	mov    edx,0x6f3c7085
  40b51c:	or     BYTE PTR [ebx-0x6d4739cf],bh
  40b522:	mov    eax,0x1eadf00
  40b527:	push   ss
  40b528:	xchg   esi,eax
  40b529:	sub    BYTE PTR [ebx],ch
  40b52b:	shl    BYTE PTR [edx-0x40623db7],0x5c
  40b532:	mov    dl,0x9c
  40b534:	pop    edx
  40b535:	push   ecx
  40b536:	lods   eax,DWORD PTR ds:[esi]
  40b537:	mov    eax,ds:0xb1061a4a
  40b53c:	and    ch,dl
  40b53e:	adc    eax,0x9168d978
  40b543:	imul   ebp,ebp,0x5a
  40b546:	sbb    eax,0x161309ad
  40b54b:	ror    BYTE PTR [ebx-0x6036d784],cl
  40b551:	rcr    DWORD PTR [edx+0x7c49a09],cl
  40b557:	mov    eax,0x77fc9032
  40b55c:	jo     0x40b5b9
  40b55e:	(bad)  
  40b55f:	xrstor [eax-0x65535aaa]
  40b566:	push   ebp
  40b567:	xchg   BYTE PTR [eax-0x69],bl
  40b56a:	outs   dx,DWORD PTR ds:[esi]
  40b56b:	enter  0x15c0,0xbf
  40b56f:	pop    edx
  40b570:	push   esi
  40b571:	es jbe 0x40b5b6
  40b574:	sbb    DWORD PTR [edi+0x22],ebp
  40b577:	mov    ebp,0xb6447d4a
  40b57c:	cmp    al,0x56
  40b57e:	(bad)  
  40b580:	xor    BYTE PTR ss:[edi+eax*2-0x1b],bh
  40b585:	jle    0x40b5c1
  40b587:	sub    eax,0xa570c60b
  40b58c:	mov    eax,0xdad1a8d4
  40b591:	push   edi
  40b592:	aad    0xe
  40b594:	adc    eax,0x2fa59b86
  40b599:	xor    eax,DWORD PTR [ebx+0x34]
  40b59c:	fld    TBYTE PTR [edi]
  40b59e:	shl    bh,0x9a
  40b5a1:	(bad)  
  40b5a2:	mov    ebp,0x9a67d784
  40b5a7:	adc    dh,dl
  40b5a9:	call   0x9623cdf6
  40b5ae:	test   DWORD PTR [ebx-0xda3f212],eax
  40b5b4:	cmc    
  40b5b5:	xchg   DWORD PTR [ecx-0x3a6d35ef],ecx
  40b5bb:	cwde   
  40b5bc:	out    dx,al
  40b5bd:	jg     0x40b572
  40b5bf:	push   0x2c
  40b5c1:	mov    dh,0x56
  40b5c3:	mov    dh,0xda
  40b5c5:	pop    esp
  40b5c6:	or     ebp,esp
  40b5c8:	mov    BYTE PTR [edi+edi*8+0x47],ch
  40b5cc:	xor    eax,0x7027113d
  40b5d1:	sbb    ebx,edi
  40b5d3:	daa    
  40b5d4:	mov    edx,0x47ebf06a
  40b5d9:	push   edi
  40b5da:	outs   dx,BYTE PTR ds:[esi]
  40b5db:	(bad)
  40b5de:	loope  0x40b5ea
  40b5e0:	mov    edi,0xcb14e8a1
  40b5e5:	push   ss
  40b5e6:	cmc    
  40b5e7:	scas   eax,DWORD PTR es:[edi]
  40b5e8:	add    ebp,DWORD PTR [edx+0x701aed2e]
  40b5ee:	call   0x14ba:0xc25be81d
  40b5f5:	dec    esi
  40b5f6:	cmc    
  40b5f7:	ins    DWORD PTR es:[edi],dx
  40b5f8:	add    DWORD PTR [edi],esp
  40b5fa:	pop    es
  40b5fb:	out    0x6b,al
  40b5fd:	stos   BYTE PTR es:[edi],al
  40b5fe:	mov    ebp,0xe65f3ec2
  40b603:	inc    ebx
  40b604:	xor    ch,BYTE PTR [edx+0x1767fa47]
  40b60a:	mov    ebx,0xf4403c12
  40b60f:	rol    DWORD PTR [ebx+0x7dfa3d97],0xd1
  40b616:	(bad)  
  40b617:	je     0x40b632
  40b619:	das    
  40b61a:	pop    ebp
  40b61b:	jp     0x40b66b
  40b61d:	retf   
  40b61e:	rol    DWORD PTR [edx-0x28],cl
  40b621:	psubusb mm2,mm3
  40b624:	and    al,0xa3
  40b626:	in     eax,dx
  40b627:	inc    ebx
  40b628:	push   edx
  40b629:	mov    dh,0x5c
  40b62b:	fdivr  st(3),st
  40b62d:	xor    edx,DWORD PTR [ecx+0x271023d4]
  40b633:	(bad)  
  40b634:	in     eax,dx
  40b635:	fild   WORD PTR [ebx+0x1f]
  40b638:	add    BYTE PTR [eax-0x7b505e5a],dl
  40b63e:	ja     0x40b67d
  40b640:	mov    cl,0xc0
  40b642:	js     0x40b670
  40b644:	shr    DWORD PTR [ebx+0x7e342675],cl
  40b64a:	fwait
  40b64b:	sbb    DWORD PTR [ebx+0x48],ecx
  40b64e:	mov    cl,BYTE PTR [esi+0x35]
  40b651:	adc    DWORD PTR [edi],esp
  40b653:	test   edx,ecx
  40b655:	shr    bl,0xae
  40b658:	xor    eax,0x17adedbd
  40b65d:	stos   BYTE PTR es:[edi],al
  40b65e:	mov    edi,0xaeb62101
  40b663:	xchg   ebx,eax
  40b664:	mov    ecx,edi
  40b666:	hlt    
  40b667:	sub    DWORD PTR [edx+0xd],ebx
  40b66a:	cdq    
  40b66b:	in     eax,dx
  40b66c:	ins    BYTE PTR es:[edi],dx
  40b66d:	retf   0xf305
  40b670:	aam    0xa9
  40b672:	dec    edi
  40b673:	pop    es
  40b674:	scas   eax,DWORD PTR es:[edi]
  40b675:	inc    ecx
  40b676:	test   al,0x66
  40b678:	cld    
  40b679:	lahf   
  40b67a:	adc    eax,0x902bd3a1
  40b67f:	push   0x9878ac03
  40b684:	aas    
  40b685:	out    0x7d,al
  40b687:	pop    esi
  40b688:	push   cs
  40b689:	pop    ds
  40b68a:	jne    0x40b69f
  40b68c:	jl     0x40b65b
  40b68e:	mov    al,ds:0x948e7219
  40b693:	test   bl,dl
  40b695:	hlt    
  40b696:	pop    esi
  40b697:	pop    edx
  40b698:	adc    BYTE PTR [edx+0x1f],al
  40b69b:	popa   
  40b69c:	shl    BYTE PTR [ebp-0xd],1
  40b69f:	add    DWORD PTR [edi-0x4a4fe793],edi
  40b6a5:	pop    ebp
  40b6a6:	mov    ebx,0x7428e423
  40b6ab:	outs   dx,DWORD PTR ds:[esi]
  40b6ac:	lahf   
  40b6ad:	adc    al,0x6f
  40b6af:	xchg   ebx,eax
  40b6b0:	add    eax,0x8bf07ca
  40b6b5:	aaa    
  40b6b6:	sbb    ebp,DWORD PTR [edx]
  40b6b8:	and    ebp,DWORD PTR [eax+0x12]
  40b6bb:	test   eax,0x38b083a0
  40b6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c1:	sti    
  40b6c2:	das    
  40b6c3:	xchg   edi,esi
  40b6c5:	js     0x40b725
  40b6c7:	jae    0x40b70d
  40b6c9:	jge    0x40b672
  40b6cb:	sbb    edi,eax
  40b6cd:	ds cmp eax,0xadf6b572
  40b6d3:	repnz dec esp
  40b6d5:	push   esp
  40b6d6:	mov    ebp,0xa46af2b7
  40b6db:	inc    edx
  40b6dc:	retf   
  40b6dd:	sar    DWORD PTR [edi+esi*8-0x461627b8],cl
  40b6e4:	jp     0x40b709
  40b6e6:	xchg   esp,eax
  40b6e7:	std    
  40b6e8:	ja     0x40b75b
  40b6ea:	adc    bl,BYTE PTR [edi-0x33]
  40b6ed:	xchg   ecx,eax
  40b6ee:	cmp    ch,BYTE PTR [edi-0x13]
  40b6f1:	imul   ecx,ebx,0xffffff90
  40b6f4:	fild   DWORD PTR cs:[edi+0x63]
  40b6f8:	adc    cl,BYTE PTR [edx+ecx*1-0x27]
  40b6fc:	inc    ebp
  40b6fd:	xor    ebx,0x10
  40b700:	pop    ecx
  40b701:	rol    bl,0x9d
  40b704:	mov    bh,0x1
  40b706:	mov    ebx,DWORD PTR [eax+0x3313ce6e]
  40b70c:	lods   al,BYTE PTR ds:[esi]
  40b70d:	cmp    BYTE PTR [ebp+0x23],ch
  40b710:	xchg   DWORD PTR [ebx-0x4faa3fc6],esi
  40b716:	std    
  40b717:	loopne 0x40b703
  40b719:	div    eax
  40b71b:	mov    ah,0x25
  40b71d:	aam    0x89
  40b71f:	jae    0x40b70a
  40b721:	ret    0x199f
  40b724:	or     al,0xd
  40b726:	pop    ecx
  40b727:	push   esp
  40b728:	or     bl,BYTE PTR [edi-0x7463742f]
  40b72e:	loopne 0x40b70c
  40b730:	inc    edx
  40b731:	clc    
  40b732:	sbb    eax,DWORD PTR [esp+ebx*8-0x69]
  40b736:	pop    ebx
  40b737:	(bad)  
  40b738:	mov    DWORD PTR [edx-0x396e2ba],esi
  40b73e:	cli    
  40b73f:	pop    esi
  40b740:	fsubr  QWORD PTR [ebx+esi*2-0x51]
  40b744:	pop    ebx
  40b745:	ss push ds
  40b747:	xchg   edx,eax
  40b748:	neg    DWORD PTR [edx-0x6c26e440]
  40b74e:	xchg   edi,eax
  40b74f:	test   DWORD PTR [ecx+0x6f],esi
  40b752:	or     al,0x60
  40b754:	es loop 0x40b73b
  40b757:	jo     0x40b6fc
  40b759:	pop    ss
  40b75a:	in     al,0xdd
  40b75c:	cmp    esp,edx
  40b75e:	pop    ecx
  40b75f:	jg     0x40b757
  40b761:	fsubr  QWORD PTR [edx-0x583801fa]
  40b767:	sbb    eax,0x77fc6790
  40b76c:	push   esp
  40b76d:	scas   eax,DWORD PTR es:[edi]
  40b76e:	mov    bh,0x34
  40b770:	outs   dx,DWORD PTR ds:[esi]
  40b771:	retf   0x5d4c
  40b774:	adc    BYTE PTR [ebp+0x48071b8e],0xbb
  40b77b:	xchg   edx,eax
  40b77c:	inc    eax
  40b77d:	pop    edi
  40b77e:	jno    0x40b74b
  40b780:	xchg   edx,eax
  40b781:	jo     0x40b7a1
  40b783:	xrelease mov DWORD PTR ds:[ebx+ebx*8],ecx
  40b788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b789:	push   ss
  40b78a:	dec    esp
  40b78b:	idiv   DWORD PTR ss:[eax]
  40b78e:	pop    eax
  40b78f:	mov    DWORD PTR [esi+0x1d7b6b2e],0xf3922a65
  40b799:	add    bl,BYTE PTR [ecx]
  40b79b:	xor    ebx,esi
  40b79d:	xor    DWORD PTR [esi-0x6],edx
  40b7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a1:	mov    ebp,0xccc50318
  40b7a6:	mov    DWORD PTR [edi+0x212d9acd],esp
  40b7ac:	test   eax,0x4979e05a
  40b7b1:	shr    DWORD PTR gs:[esi],1
  40b7b4:	clc    
  40b7b5:	and    al,0xf4
  40b7b7:	arpl   WORD PTR [eax+0x3d63aedb],di
  40b7bd:	and    BYTE PTR [ecx+0x63039b28],ah
  40b7c3:	nop
  40b7c4:	call   0x99de:0x30cbfb2a
  40b7cb:	fisubr WORD PTR [ebx-0x205f56ca]
  40b7d1:	cld    
  40b7d2:	pop    esi
  40b7d3:	push   ecx
  40b7d4:	iret   
  40b7d5:	outs   dx,BYTE PTR ds:[esi]
  40b7d6:	or     ah,0x17
  40b7d9:	xor    BYTE PTR [eax-0x421c1077],ch
  40b7df:	cmp    al,0x89
  40b7e1:	jmp    0xa48:0x314a3be3
  40b7e8:	pop    ecx
  40b7e9:	pop    edi
  40b7ea:	xchg   ecx,eax
  40b7eb:	popf   
  40b7ec:	std    
  40b7ed:	xchg   esi,eax
  40b7ee:	mov    bl,0x1c
  40b7f0:	and    al,0x18
  40b7f2:	mov    ?,WORD PTR [ecx]
  40b7f4:	push   es
  40b7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f6:	not    edi
  40b7f8:	out    dx,eax
  40b7f9:	and    al,0xfe
  40b7fb:	pop    ss
  40b7fc:	nop
  40b7fd:	inc    ecx
  40b7fe:	jnp    0x40b7d3
  40b800:	retf   
  40b801:	and    cl,cl
  40b803:	scas   eax,DWORD PTR es:[edi]
  40b804:	outs   dx,DWORD PTR ds:[esi]
  40b805:	sbb    edi,DWORD PTR ds:0x58db3562
  40b80b:	ror    bl,1
  40b80d:	call   0xe061:0x7b5fd237
  40b814:	and    eax,0x238992de
  40b819:	inc    ebx
  40b81a:	xchg   ecx,eax
  40b81b:	popa   
  40b81c:	dec    edx
  40b81d:	inc    ebx
  40b81e:	test   edx,eax
  40b820:	icebp  
  40b821:	pop    eax
  40b822:	cdq    
  40b823:	dec    esi
  40b824:	jnp    0x40b7fd
  40b826:	inc    ecx
  40b827:	pop    eax
  40b828:	lods   al,BYTE PTR ds:[esi]
  40b829:	push   ebx
  40b82a:	inc    edi
  40b82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82c:	repnz test eax,0x9470ddb5
  40b832:	or     eax,esp
  40b834:	xor    bh,BYTE PTR [eax-0x23]
  40b837:	fidivr DWORD PTR [edi+eiz*2-0x75]
  40b83b:	adc    BYTE PTR [ecx-0x28],0xb
  40b83f:	aam    0x85
  40b841:	out    0x53,al
  40b843:	out    0x9,eax
  40b845:	and    edx,ebp
  40b847:	(bad)  [edi+0x22]
  40b84a:	inc    ebp
  40b84b:	(bad)  
  40b84c:	popf   
  40b84d:	dec    ebx
  40b84e:	icebp  
  40b84f:	xlat   BYTE PTR ds:[ebx]
  40b850:	xchg   ecx,eax
  40b851:	push   edi
  40b852:	pop    ebp
  40b853:	xlat   BYTE PTR ds:[ebx]
  40b854:	repz sbb eax,0xb56f596c
  40b85a:	lock jmp 0x98b8ba81
  40b860:	lock stos DWORD PTR es:[edi],eax
  40b862:	push   es
  40b863:	je     0x40b89d
  40b865:	test   eax,0x87a6d403
  40b86a:	(bad)  
  40b86b:	add    BYTE PTR [edx-0x92b74fd],al
  40b871:	xchg   esp,eax
  40b872:	loop   0x40b81d
  40b874:	adc    eax,DWORD PTR [ebp+0x4a]
  40b877:	push   esi
  40b878:	add    esp,DWORD PTR [edi-0x29]
  40b87b:	sti    
  40b87c:	add    esp,DWORD PTR ds:0x478683f8
  40b882:	mov    bl,0xb5
  40b884:	je     0x40b83a
  40b886:	mov    ds:0x22f279fe,eax
  40b88b:	push   esi
  40b88c:	pop    ebp
  40b88d:	outs   dx,BYTE PTR ds:[esi]
  40b88e:	scas   eax,DWORD PTR es:[edi]
  40b88f:	and    eax,0x2b7f8e30
  40b894:	in     eax,dx
  40b895:	pushf  
  40b896:	xchg   DWORD PTR [esi],ebp
  40b898:	dec    esi
  40b899:	(bad)  
  40b89b:	cmp    eax,0x454fda5e
  40b8a0:	jne    0x40b919
  40b8a2:	jns    0x40b8d6
  40b8a4:	sti    
  40b8a5:	dec    edi
  40b8a6:	jge    0x40b846
  40b8a8:	popa   
  40b8a9:	std    
  40b8aa:	push   ss
  40b8ab:	lock addr16 mov ds:0x4138,al
  40b8b0:	cld    
  40b8b1:	sbb    DWORD PTR [edi],eax
  40b8b3:	ds pop es
  40b8b5:	xchg   edi,eax
  40b8b6:	jb     0x40b8d8
  40b8b8:	fidiv  DWORD PTR [ebx]
  40b8ba:	cmp    eax,0xb2e4b70d
  40b8bf:	mov    edx,0x93c4ea43
  40b8c4:	js     0x40b87e
  40b8c6:	bound  ebx,QWORD PTR [ebp+0x4488978d]
  40b8cc:	adc    BYTE PTR [ecx+edx*4],0xac
  40b8d0:	xor    al,0xf0
  40b8d2:	add    ebp,eax
  40b8d4:	test   DWORD PTR [edx+0x22],0x54701303
  40b8db:	rol    BYTE PTR [esi],1
  40b8dd:	mov    ch,0xdc
  40b8df:	sub    al,0x7c
  40b8e1:	dec    ebx
  40b8e2:	xchg   ebx,eax
  40b8e3:	fst    DWORD PTR [ecx+eiz*2]
  40b8e6:	adc    DWORD PTR [ebx+0x1],0x50
  40b8ea:	addr16 es mov bl,0x91
  40b8ee:	mov    dh,0x7b
  40b8f0:	out    dx,eax
  40b8f1:	push   ss
  40b8f2:	cdq    
  40b8f3:	adc    al,0xa5
  40b8f5:	jmp    0x2538:0xb4522664
  40b8fc:	call   0xb1aed63
  40b901:	mov    cl,bh
  40b903:	cld    
  40b904:	je     0x40b8c9
  40b906:	dec    esp
  40b907:	push   0x31bf4e30
  40b90c:	sbb    DWORD PTR [ebx],edi
  40b90e:	mov    WORD PTR [ecx+ebp*8-0x7b8b1994],?
  40b915:	add    BYTE PTR [esi+eiz*8],0xb6
  40b919:	push   ecx
  40b91a:	xchg   edi,eax
  40b91b:	neg    DWORD PTR [edi+0x2b5627b3]
  40b921:	enter  0x6c3,0x9a
  40b925:	cdq    
  40b926:	mov    ds:0xc74434d1,al
  40b92b:	arpl   di,bx
  40b92d:	sbb    al,0xa5
  40b92f:	xchg   edx,eax
  40b930:	pop    ss
  40b931:	or     DWORD PTR [ecx-0x12],0xff903cac
  40b938:	repnz cdq 
  40b93a:	jp     0x40b92f
  40b93c:	mov    ah,0x5c
  40b93e:	std    
  40b93f:	dec    eax
  40b940:	arpl   si,si
  40b942:	rcr    bh,0xec
  40b945:	mov    ebp,0xf0c52650
  40b94a:	shl    DWORD PTR ds:0xaf3493aa,cl
  40b950:	les    edi,FWORD PTR [esi-0x34781904]
  40b956:	jge    0x40b9c9
  40b958:	xor    edx,DWORD PTR [edx+edi*1]
  40b95b:	loopne 0x40b9a1
  40b95d:	aaa    
  40b95e:	mov    ebp,DWORD PTR [ebp-0x47]
  40b961:	fstp   QWORD PTR [edi]
  40b963:	(bad)  
  40b964:	repnz fistp DWORD PTR cs:[ebx-0x78]
  40b969:	sahf   
  40b96a:	mov    cl,0x24
  40b96c:	cmp    ecx,DWORD PTR [eax+0x7788ebe5]
  40b972:	das    
  40b973:	bound  eax,QWORD PTR [eax+ebp*1-0x19]
  40b977:	cmp    BYTE PTR [eax+0x49],dl
  40b97a:	(bad)  
  40b97b:	push   eax
  40b97c:	(bad)  
  40b97d:	push   DWORD PTR ds:0x52e2598c
  40b983:	or     eax,0xa77546c9
  40b988:	xchg   edi,eax
  40b989:	cwde   
  40b98a:	mov    bh,0x96
  40b98c:	jne    0x40b90f
  40b98e:	(bad)  
  40b98f:	retf   
  40b990:	sbb    al,0xc2
  40b992:	mov    dl,0x81
  40b994:	pop    ebp
  40b995:	inc    esi
  40b996:	mov    edi,0x612ab174
  40b99b:	mov    dl,0xe1
  40b99d:	xchg   edx,eax
  40b99e:	dec    ecx
  40b99f:	stos   BYTE PTR es:[edi],al
  40b9a0:	or     al,0xd4
  40b9a2:	outs   dx,BYTE PTR ds:[esi]
  40b9a3:	scas   eax,DWORD PTR es:[edi]
  40b9a4:	mov    bh,0xf7
  40b9a6:	sub    BYTE PTR [edx+eax*4],ch
  40b9a9:	out    dx,eax
  40b9aa:	(bad)  
  40b9ab:	je     0x40b980
  40b9ad:	add    BYTE PTR [eax+eax*8-0x47f8b0c9],al
  40b9b4:	dec    ecx
  40b9b5:	inc    ebp
  40b9b6:	pop    edi
  40b9b7:	add    al,0xf3
  40b9b9:	dec    edx
  40b9ba:	lods   al,BYTE PTR ds:[esi]
  40b9bb:	sub    ebp,DWORD PTR [edx+0x249fbc3a]
  40b9c1:	and    BYTE PTR [ecx+0x47],dl
  40b9c4:	das    
  40b9c5:	shl    BYTE PTR [edi+0x754ec1f6],0x9e
  40b9cc:	data16 stc 
  40b9ce:	adc    BYTE PTR [eax],dh
  40b9d0:	sbb    cl,bl
  40b9d2:	add    eax,0x219d9296
  40b9d7:	jmp    0x70c7:0xb126f30e
  40b9de:	retf   
  40b9df:	adc    eax,0xfa40baeb
  40b9e4:	aam    0xa2
  40b9e6:	imul   ebx,DWORD PTR [ebx-0x51],0xa39949ac
  40b9ed:	aas    
  40b9ee:	popf   
  40b9ef:	mov    eax,ds:0xbe59c327
  40b9f4:	iret   
  40b9f5:	mov    dl,0xda
  40b9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f8:	aaa    
  40b9f9:	into   
  40b9fa:	sbb    DWORD PTR gs:[eax],ecx
  40b9fd:	jp     0x40ba5f
  40b9ff:	dec    eax
  40ba00:	cmp    edx,DWORD PTR [esi+0x2c]
  40ba03:	or     edi,DWORD PTR ds:[ebx-0x6b1e5f7f]
  40ba0a:	shl    BYTE PTR [eax-0x73],0x3c
  40ba0e:	fmul   QWORD PTR ds:0xde1ffbfa
  40ba14:	stos   BYTE PTR es:[edi],al
  40ba15:	popf   
  40ba16:	fcomp  QWORD PTR ds:0x78a62b30
  40ba1c:	or     al,0x30
  40ba1e:	das    
  40ba1f:	mov    ds:0x57ff0c88,al
  40ba24:	test   eax,0x18d54a8a
  40ba29:	jb     0x40ba40
  40ba2b:	pop    edi
  40ba2c:	sbb    eax,0x261df789
  40ba31:	xor    DWORD PTR [eax-0x65],0xffffffc3
  40ba35:	add    al,0xae
  40ba37:	adc    al,0xfb
  40ba39:	inc    ebp
  40ba3a:	xor    BYTE PTR [edx],al
  40ba3c:	in     eax,dx
  40ba3d:	sub    al,0xf3
  40ba3f:	jno    0x40ba73
  40ba41:	jo     0x40baa2
  40ba43:	(bad)  [edi+0x5cccbf17]
  40ba49:	ret    0x92da
  40ba4c:	sub    eax,0x74439f9f
  40ba51:	into   
  40ba52:	and    al,0x9
  40ba54:	gs leave 
  40ba56:	ins    DWORD PTR es:[edi],dx
  40ba57:	outs   dx,DWORD PTR ds:[esi]
  40ba58:	inc    ebp
  40ba59:	aam    0x27
  40ba5b:	inc    ecx
  40ba5c:	fld    QWORD PTR [ebx]
  40ba5e:	loopne 0x40ba74
  40ba60:	not    ch
  40ba62:	or     ah,al
  40ba64:	xlat   BYTE PTR ds:[ebx]
  40ba65:	dec    ecx
  40ba66:	cmp    bh,BYTE PTR [eax]
  40ba68:	xchg   edi,eax
  40ba69:	push   edx
  40ba6a:	dec    ecx
  40ba6b:	dec    esi
  40ba6c:	xchg   ebx,eax
  40ba6d:	in     eax,0xc7
  40ba6f:	outs   dx,DWORD PTR ds:[esi]
  40ba70:	mov    ebx,0x3eb217e5
  40ba75:	mov    edx,DWORD PTR [edi-0x54f92fae]
  40ba7b:	stc    
  40ba7c:	mov    dl,0x71
  40ba7e:	(bad)  
  40ba80:	imul   edx,DWORD PTR [eax-0x2cdf993f],0xffffffe3
  40ba87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba88:	pop    edx
  40ba89:	jp     0x40baa9
  40ba8b:	fiadd  WORD PTR [edx+0x23]
  40ba8e:	cld    
  40ba8f:	add    eax,0x5c805ca6
  40ba94:	test   BYTE PTR [edx],bh
  40ba96:	push   ss
  40ba97:	inc    edi
  40ba98:	adc    DWORD PTR [edx],0x9fa591e7
  40ba9e:	mov    dl,0xd1
  40baa0:	sub    esp,edx
  40baa2:	cmp    al,0x68
  40baa4:	ja     0x40ba29
  40baa6:	clc    
  40baa7:	xor    DWORD PTR [ecx+ebp*2+0x52],edx
  40baab:	in     al,dx
  40baac:	int    0x2c
  40baae:	pop    ecx
  40baaf:	cmp    edx,DWORD PTR [ebx+0x3b]
  40bab2:	cmp    DWORD PTR [ebx-0x7bbca0c8],0x6c
  40bab9:	mov    ds:0xbcaba1d1,eax
  40babe:	and    al,0xc5
  40bac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac1:	sub    dl,ah
  40bac3:	dec    ecx
  40bac4:	cmp    eax,DWORD PTR [edx]
  40bac6:	lahf   
  40bac7:	in     al,0x9c
  40bac9:	jns    0x40bae0
  40bacb:	cmp    eax,0x10db5ffd
  40bad0:	sub    edx,esi
  40bad2:	into   
  40bad3:	imul   edx,DWORD PTR [ecx],0xffffffd0
  40bad6:	adc    DWORD PTR [ebx+0x75],ebp
  40bad9:	popf   
  40bada:	jmp    0x3de49d71
  40badf:	push   esp
  40bae0:	pop    esp
  40bae1:	mov    dl,0x3a
  40bae3:	push   es
  40bae4:	icebp  
  40bae5:	lods   eax,DWORD PTR ds:[esi]
  40bae6:	ins    DWORD PTR es:[edi],dx
  40bae7:	and    BYTE PTR [edi+0xa],al
  40baea:	xchg   DWORD PTR ds:0x6ca36b40,edi
  40baf0:	(bad)  
  40baf1:	pop    ebp
  40baf2:	test   BYTE PTR [ebp-0x3e41c00a],cl
  40baf8:	call   0xc0a4ac4d
  40bafd:	dec    edx
  40bafe:	ins    BYTE PTR es:[edi],dx
  40baff:	push   ds
  40bb00:	imul   edi,DWORD PTR [eax+edx*2-0x78],0x9ab56ac
  40bb08:	inc    esp
  40bb09:	test   BYTE PTR ds:0x5cdfab18,dh
  40bb0f:	push   eax
  40bb10:	push   es
  40bb11:	aaa    
  40bb12:	jmp    0x9f44346
  40bb17:	adc    dl,BYTE PTR [ebp-0x10]
  40bb1a:	cmc    
  40bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1c:	lds    ecx,FWORD PTR [esi-0x3f]
  40bb1f:	nop
  40bb20:	loopne 0x40bb2d
  40bb22:	mov    edi,0x32d5e9
  40bb27:	stc    
  40bb28:	mov    ds:0xb42e3af0,al
  40bb2d:	and    bh,dh
  40bb2f:	mov    dl,0x7f
  40bb31:	cmp    DWORD PTR [edx],edx
  40bb33:	and    ebp,DWORD PTR [edx+0x69]
  40bb36:	jl     0x40baea
  40bb38:	cmp    bh,BYTE PTR [ebx+0x35]
  40bb3b:	add    BYTE PTR [esi],0xa5
  40bb3e:	sub    ah,BYTE PTR [ecx]
  40bb40:	add    dh,BYTE PTR [edx+0x67]
  40bb43:	mov    dl,0x7a
  40bb45:	sub    al,0x7f
  40bb47:	xor    eax,DWORD PTR [eax+0x29]
  40bb4a:	push   es
  40bb4b:	shr    ebx,cl
  40bb4d:	mov    esi,0x27fab68c
  40bb52:	mov    bl,0x31
  40bb54:	fdiv   DWORD PTR [esi-0x3e80eeda]
  40bb5a:	adc    eax,0xf2e7cf4b
  40bb5f:	icebp  
  40bb60:	adc    ah,BYTE PTR [ecx+0x74]
  40bb63:	dec    esi
  40bb64:	sbb    al,0x29
  40bb66:	(bad)  
  40bb67:	jno    0x40bbc7
  40bb69:	mov    al,0x3f
  40bb6b:	cs retf 0xf9fa
  40bb6f:	push   ecx
  40bb70:	aam    0x1b
  40bb72:	lock fucomip st,st(7)
  40bb75:	add    al,0x7f
  40bb77:	bound  ecx,QWORD PTR [edi-0x15d85401]
  40bb7d:	cmp    al,0xd9
  40bb7f:	mov    gs,esi
  40bb81:	call   0x556cc762
  40bb86:	dec    eax
  40bb87:	dec    edi
  40bb88:	std    
  40bb89:	adc    al,0x83
  40bb8b:	sub    DWORD PTR [edi+eax*8+0x7135661c],0x531e07b8
  40bb96:	jmp    0x7d5a1dc2
  40bb9b:	inc    esp
  40bb9c:	lds    edi,FWORD PTR [esi-0x3e01e214]
  40bba2:	sub    DWORD PTR [edx-0x16],esi
  40bba5:	pop    ds
  40bba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba8:	jmp    0x40bb5d
  40bbaa:	jb     0x40bbd4
  40bbac:	aam    0x1
  40bbae:	shr    DWORD PTR [esi+0x152b088f],cl
  40bbb4:	jmp    0x40bbeb
  40bbb6:	mov    ds:0xb4260949,al
  40bbbb:	inc    ebp
  40bbbc:	jbe    0x40bb45
  40bbbe:	mov    BYTE PTR [ebx],dl
  40bbc0:	xor    DWORD PTR [esi-0x7742f9ed],0xffffff8e
  40bbc7:	sti    
  40bbc8:	xchg   BYTE PTR [ebx],dl
  40bbca:	nop
  40bbcb:	inc    edx
  40bbcc:	lods   al,BYTE PTR ds:[esi]
  40bbcd:	cmp    cl,BYTE PTR [ebx]
  40bbcf:	imul   esp,DWORD PTR [ebx+0x66bdfcd0],0xfcda92e6
  40bbd9:	adc    DWORD PTR [ecx-0x5a39e072],esp
  40bbdf:	mov    bl,0x26
  40bbe1:	outs   dx,BYTE PTR ds:[esi]
  40bbe2:	lar    ecx,WORD PTR [edi+ebx*8-0x3d]
  40bbe7:	and    BYTE PTR [edi-0x5e9e8378],ah
  40bbed:	inc    esp
  40bbee:	repz adc DWORD PTR [ecx-0x73],0x4adad240
  40bbf6:	add    BYTE PTR [edi+ebx*8+0x5718def7],bl
  40bbfd:	lods   eax,DWORD PTR ds:[esi]
  40bbfe:	and    BYTE PTR [ebx-0x41],dl
  40bc01:	aas    
  40bc02:	xchg   esi,eax
  40bc03:	lea    esp,[edi+0x3b]
  40bc06:	mov    esi,0x9cc5997c
  40bc0b:	mov    eax,ds:0x65765c07
  40bc10:	adc    eax,DWORD PTR [edx-0x6e80b255]
  40bc16:	(bad)  
  40bc17:	push   ds
  40bc18:	div    DWORD PTR [ebp+0x52f746ce]
  40bc1e:	aad    0x3e
  40bc20:	push   edi
  40bc21:	xchg   ebx,eax
  40bc22:	in     eax,dx
  40bc23:	test   ebp,edx
  40bc25:	add    esp,ebx
  40bc27:	push   es
  40bc28:	cmp    ch,cl
  40bc2a:	jmp    0xb0249114
  40bc2f:	adc    BYTE PTR [ebx+0x1a0a1525],ch
  40bc35:	aas    
  40bc36:	jmp    0x40bc34
  40bc38:	or     eax,DWORD PTR [ebp+0x7]
  40bc3b:	push   0xffffffc8
  40bc3d:	gs in  al,0xdc
  40bc40:	xchg   DWORD PTR [eax+0xd],ebp
  40bc43:	adc    BYTE PTR [ebp+ebx*8-0x4006dbd2],cl
  40bc4a:	inc    ecx
  40bc4b:	xor    DWORD PTR [edx+0x27],edi
  40bc4e:	sub    ebx,ecx
  40bc50:	xor    eax,0x4bec4625
  40bc55:	psraw  mm5,QWORD PTR [ebx]
  40bc58:	xchg   ah,bl
  40bc5a:	sub    ah,BYTE PTR [ebp+0x6f3a5d62]
  40bc60:	mov    ds:0xf7c56ca7,al
  40bc65:	cmp    DWORD PTR [eax+0x0],0xffffffcc
  40bc69:	nop
  40bc6a:	push   edi
  40bc6b:	xor    eax,0xa7adacec
  40bc70:	xchg   ecx,eax
  40bc71:	xchg   DWORD PTR [ecx+0x2450bec],esi
  40bc77:	leave  
  40bc78:	stos   DWORD PTR es:[edi],eax
  40bc79:	xchg   edx,eax
  40bc7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc7b:	arpl   ax,dx
  40bc7d:	or     cl,BYTE PTR [ebp+0x5a]
  40bc80:	mov    edx,0x8445ec69
  40bc85:	out    dx,eax
  40bc86:	push   0x40
  40bc88:	mov    esi,0x9a2dd730
  40bc8d:	loope  0x40bc55
  40bc8f:	push   ds
  40bc90:	dec    edx
  40bc91:	push   0x7ec713b0
  40bc96:	xor    BYTE PTR [edi+0x7846cb99],0x37
  40bc9d:	stc    
  40bc9e:	ins    BYTE PTR es:[edi],dx
  40bc9f:	xchg   esp,eax
  40bca0:	pop    ss
  40bca1:	lea    edi,[edx]
  40bca3:	aas    
  40bca4:	in     al,dx
  40bca5:	pop    esp
  40bca6:	outs   dx,DWORD PTR ds:[esi]
  40bca7:	ss jae 0x40bc30
  40bcaa:	das    
  40bcab:	imul   esi,DWORD PTR [ebp-0xf],0xffffff80
  40bcaf:	or     DWORD PTR [edx+0x42],esi
  40bcb2:	out    dx,al
  40bcb3:	adc    eax,0x8d2adce
  40bcb8:	leave  
  40bcb9:	(bad)  
  40bcbb:	in     al,dx
  40bcbc:	call   DWORD PTR [bp-0x67f2]
  40bcc1:	aad    0xef
  40bcc3:	sbb    DWORD PTR [ecx],edx
  40bcc5:	mov    WORD PTR [ebx],es
  40bcc7:	cmp    DWORD PTR [ebx+0x7b182d2f],0x4135d4f8
  40bcd1:	(bad)  
  40bcd2:	sbb    bh,BYTE PTR [ecx-0x77]
  40bcd5:	cdq    
  40bcd6:	test   DWORD PTR ds:0x7d9d8759,edx
  40bcdc:	jb     0x40bd1c
  40bcde:	jae    0x40bcc3
  40bce0:	jg     0x40bd2d
  40bce2:	(bad)  
  40bce3:	jg     0x40bd2c
  40bce5:	adc    DWORD PTR [ecx+0x6805069f],ebp
  40bceb:	popf   
  40bcec:	iret   
  40bced:	dec    ebx
  40bcee:	xor    bh,ah
  40bcf0:	mov    bl,0x8
  40bcf2:	lea    esi,[ebp-0x36]
  40bcf5:	xchg   edi,eax
  40bcf6:	dec    ecx
  40bcf7:	or     DWORD PTR [esi-0x33],ecx
  40bcfa:	push   ebx
  40bcfb:	(bad)  
  40bcfc:	sub    eax,0xf2a1cf5c
  40bd01:	fbld   TBYTE PTR [esi]
  40bd03:	pop    es
  40bd04:	ins    BYTE PTR es:[edi],dx
  40bd05:	adc    DWORD PTR [ebx-0x666f0ca3],eax
  40bd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0c:	cmp    al,0x33
  40bd0e:	sub    eax,ecx
  40bd10:	lock mov esp,es
  40bd13:	push   es
  40bd14:	icebp  
  40bd15:	jecxz  0x40bd1c
  40bd17:	call   0x2fc5:0xa2c619df
  40bd1e:	aad    0x44
  40bd20:	test   eax,0xc472ab77
  40bd25:	push   ecx
  40bd26:	sub    DWORD PTR [edi-0x4472cdd8],edx
  40bd2c:	mov    bh,0xe7
  40bd2e:	jo     0x40bd9e
  40bd30:	inc    ecx
  40bd31:	pop    esp
  40bd32:	(bad)  
  40bd33:	loop   0x40bcfb
  40bd35:	mov    BYTE PTR [eax+0x35],ah
  40bd38:	dec    eax
  40bd39:	test   BYTE PTR ds:0xc7b46538,0x77
  40bd40:	xchg   ebx,eax
  40bd41:	ficomp DWORD PTR [eax+0x37]
  40bd44:	dec    esi
  40bd45:	ds out 0x1a,eax
  40bd48:	xchg   esp,eax
  40bd49:	repnz sbb eax,DWORD PTR [esi-0x20]
  40bd4d:	pop    ss
  40bd4e:	in     eax,0x4e
  40bd50:	scas   eax,DWORD PTR es:[edi]
  40bd51:	adc    BYTE PTR [ebx+0x0],dl
  40bd54:	fild   WORD PTR [edx+0x63512e0]
  40bd5a:	retf   
  40bd5b:	jge    0x40bd90
  40bd5d:	mul    BYTE PTR [ecx]
  40bd5f:	sub    al,0x6d
  40bd61:	clc    
  40bd62:	sub    BYTE PTR [eax-0x5],0xa7
  40bd66:	mov    esi,0x8cdccd10
  40bd6b:	es sbb eax,0xc48b1cf4
  40bd71:	mul    DWORD PTR [edx]
  40bd73:	and    al,0xf8
  40bd75:	adc    al,0xbc
  40bd77:	push   DWORD PTR [edi-0x6bc617ab]
  40bd7d:	mov    al,ds:0xc1536d2
  40bd82:	ret    0xd005
  40bd85:	push   esp
  40bd86:	loope  0x40bdf8
  40bd88:	xchg   ecx,eax
  40bd89:	and    edx,DWORD PTR [edx-0x1662fd4]
  40bd8f:	test   al,0x3d
  40bd91:	test   DWORD PTR [ebx-0x3d],edx
  40bd94:	xchg   ecx,eax
  40bd95:	xlat   BYTE PTR ds:[ebx]
  40bd96:	cdq    
  40bd97:	xor    al,0xcb
  40bd99:	ficomp WORD PTR [esi+0x5]
  40bd9c:	repnz lds ebp,FWORD PTR [ecx]
  40bd9f:	mov    dl,0xaf
  40bda1:	xchg   BYTE PTR [ebx],bh
  40bda3:	cmp    ch,BYTE PTR [ebx-0x78]
  40bda6:	xor    BYTE PTR [ebx+0x59],al
  40bda9:	frstor [ebp-0x93d0eb2]
  40bdaf:	outs   dx,DWORD PTR ds:[esi]
  40bdb0:	and    ch,BYTE PTR [eax]
  40bdb2:	gs dec ecx
  40bdb4:	dec    ch
  40bdb6:	adc    DWORD PTR [edi],edx
  40bdb8:	pop    ds
  40bdb9:	cmp    cl,ch
  40bdbb:	jl     0x40bd8f
  40bdbd:	in     al,dx
  40bdbe:	mov    ebp,0x3524d7fe
  40bdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc4:	or     ecx,DWORD PTR [ecx+0x7a]
  40bdc7:	push   cs
  40bdc8:	cmp    al,0xcd
  40bdca:	jnp    0x40be20
  40bdcc:	pop    eax
  40bdcd:	in     al,dx
  40bdce:	mov    eax,0xb52c6b11
  40bdd3:	pop    esi
  40bdd4:	xor    edi,edi
  40bdd6:	ret    0x9e56
  40bdd9:	outs   dx,DWORD PTR ds:[esi]
  40bdda:	aaa    
  40bddb:	add    eax,0x8ab39a27
  40bde0:	adc    BYTE PTR fs:[eax],cl
  40bde3:	mov    eax,ds:0x5951e1ba
  40bde8:	int3   
  40bde9:	dec    ecx
  40bdea:	fidiv  WORD PTR ds:0xc030861a
  40bdf0:	pop    ds
  40bdf1:	(bad)  [ecx+0x17]
  40bdf4:	enter  0xcfaa,0xa4
  40bdf8:	retf   0x53fa
  40bdfb:	lock and BYTE PTR [edi-0x3f],0x87
  40be00:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40be02:	xchg   edx,eax
  40be03:	adc    eax,0xa0192240
  40be08:	sub    edx,edx
  40be0a:	adc    eax,0x8a06a6
  40be0f:	mov    bh,0x72
  40be11:	cmp    eax,0xeadc4fdb
  40be16:	lods   eax,DWORD PTR ds:[esi]
  40be17:	std    
  40be18:	lods   al,BYTE PTR ds:[esi]
  40be19:	mov    eax,0x156d6d0
  40be1e:	jmp    0x40bdfd
  40be20:	push   cs
  40be21:	sbb    ebp,esp
  40be23:	pop    DWORD PTR [edx+0x7f]
  40be26:	sub    cl,dl
  40be28:	fnstcw WORD PTR [ebx-0x3]
  40be2b:	and    edx,esi
  40be2d:	sbb    ecx,0xe474e136
  40be33:	push   esi
  40be34:	xchg   edx,eax
  40be35:	outs   dx,BYTE PTR ds:[esi]
  40be36:	fcmovnb st,st(3)
  40be38:	cmp    al,0x75
  40be3a:	gs (bad) 
  40be3c:	(bad)  [eax]
  40be3e:	jns    0x40be3b
  40be40:	out    0x2f,eax
  40be42:	push   ss
  40be43:	scas   al,BYTE PTR es:[di]
  40be45:	rol    DWORD PTR [ebx],0xfb
  40be48:	out    dx,al
  40be49:	imul   DWORD PTR [esi-0x50f99015]
  40be4f:	pusha  
  40be50:	inc    edi
  40be51:	sub    cl,ch
  40be53:	je     0x40bed2
  40be55:	mov    bl,ah
  40be57:	lock les esi,FWORD PTR [esi+ebx*8-0xb]
  40be5c:	gs jecxz 0x40beb2
  40be5f:	lea    ebx,[ebp-0x42b1bbba]
  40be65:	sbb    eax,0x148dff60
  40be6a:	dec    ecx
  40be6b:	out    dx,al
  40be6c:	scas   eax,DWORD PTR es:[edi]
  40be6d:	lods   eax,DWORD PTR ds:[esi]
  40be6e:	gs loop 0x40becb
  40be71:	aad    0xdd
  40be73:	imul   eax,DWORD PTR [edx+eax*4+0x48a32aed],0x2e
  40be7b:	bound  edi,QWORD PTR [ebp-0x6a7f1074]
  40be81:	rol    BYTE PTR gs:[ebx],1
  40be84:	arpl   WORD PTR [ebx+eiz*1+0x48],cx
  40be88:	out    0xb0,al
  40be8a:	mov    al,0xd3
  40be8c:	jmp    0xcf90d2ff
  40be91:	sti    
  40be92:	lock pop es
  40be94:	jmp    0x40be8e
  40be96:	sbb    dh,BYTE PTR [eax]
  40be98:	jno    0x40be70
  40be9a:	pop    eax
  40be9b:	cmp    eax,ecx
  40be9d:	in     eax,dx
  40be9e:	mov    eax,0x835935cf
  40bea3:	pop    ebx
  40bea4:	jnp    0x40beb8
  40bea6:	mov    bl,0xdd
  40bea8:	jecxz  0x40bef0
  40beaa:	sbb    DWORD PTR [ebx+0x562610e0],ebp
  40beb0:	rol    DWORD PTR [ebx+0x6ac2b013],1
  40beb6:	fld    DWORD PTR [edx]
  40beb8:	rol    DWORD PTR [eax+0x10c5a47c],cl
  40bebe:	cwde   
  40bebf:	idiv   BYTE PTR [edi+0x10a20972]
  40bec5:	fiadd  DWORD PTR [ebx+edx*4-0xc3de179]
  40becc:	and    al,0xc5
  40bece:	jo     0x40be70
  40bed0:	ret    
  40bed1:	jmp    0xc5e0:0xf5ce2408
  40bed8:	call   FWORD PTR [edx]
  40beda:	dec    ebx
  40bedb:	or     eax,0x279a2c3e
  40bee0:	loope  0x40bec0
  40bee2:	in     al,dx
  40bee3:	inc    esi
  40bee4:	and    DWORD PTR [ecx-0x14fdac82],0x363f727a
  40beee:	mov    eax,ds:0x78e0669b
  40bef3:	test   eax,0x30a1656b
  40bef8:	and    DWORD PTR [esi+ecx*2-0x69],ecx
  40befc:	call   0x79e1:0xfa19a149
  40bf03:	retf   0x8c3e
  40bf06:	ins    BYTE PTR es:[edi],dx
  40bf07:	dec    ebp
  40bf08:	mov    cl,0x47
  40bf0a:	lahf   
  40bf0b:	push   0xa07c7a60
  40bf10:	inc    esp
  40bf11:	sub    DWORD PTR [edx-0x6aa9c5cc],edi
  40bf17:	mov    edi,0xfe522216
  40bf1c:	addr16 aad 0x65
  40bf1f:	sbb    BYTE PTR [edx+0x34892661],0x23
  40bf26:	push   esp
  40bf27:	fwait
  40bf28:	cwde   
  40bf29:	sbb    BYTE PTR [esi-0x50cf508c],bl
  40bf2f:	cmp    eax,0x5dd5b124
  40bf34:	and    eax,0xc2cbf78a
  40bf39:	cmp    al,0x7f
  40bf3b:	iret   
  40bf3c:	mov    eax,ds:0xfce66c4e
  40bf41:	xchg   ebp,eax
  40bf42:	cmp    al,0x52
  40bf44:	int    0x53
  40bf46:	cdq    
  40bf47:	dec    eax
  40bf48:	jmp    0x40493f0b
  40bf4d:	and    BYTE PTR [eax-0x12c72250],al
  40bf53:	scas   eax,DWORD PTR es:[edi]
  40bf54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf55:	pop    ss
  40bf56:	push   esp
  40bf57:	in     eax,dx
  40bf58:	push   0x361cfeff
  40bf5d:	cmp    al,0xaa
  40bf5f:	inc    ecx
  40bf60:	pop    ebx
  40bf61:	cld    
  40bf62:	imul   esp,ecx,0x97416938
  40bf68:	push   esp
  40bf69:	popf   
  40bf6a:	xor    BYTE PTR [ebx+0x6d344fad],dh
  40bf70:	aas    
  40bf71:	or     BYTE PTR [edi-0x2a],al
  40bf74:	xor    eax,0x4adc46c1
  40bf79:	jmp    0x40bf30
  40bf7b:	cmp    al,0xb9
  40bf7d:	sbb    al,0x18
  40bf7f:	adc    bl,BYTE PTR [ecx-0x77]
  40bf82:	add    esi,DWORD PTR [edi]
  40bf84:	fnstcw WORD PTR [edi+0x4f9ae346]
  40bf8a:	jbe    0x40bf8d
  40bf8c:	daa    
  40bf8d:	pushf  
  40bf8e:	xchg   esp,eax
  40bf8f:	ja     0x40bf17
  40bf91:	out    0xcf,eax
  40bf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf94:	ret    0x8b18
  40bf97:	lea    ecx,[edx-0x7f3db1fb]
  40bf9d:	jecxz  0x40bfcc
  40bf9f:	dec    edx
  40bfa0:	scas   eax,DWORD PTR es:[edi]
  40bfa1:	test   al,0xfa
  40bfa3:	out    0xea,eax
  40bfa5:	daa    
  40bfa6:	aam    0x1c
  40bfa8:	sbb    esp,DWORD PTR [ecx+0xa4d4b0e]
  40bfae:	xchg   esp,eax
  40bfaf:	push   ebx
  40bfb0:	sar    DWORD PTR [edx+0x49],cl
  40bfb3:	xlat   BYTE PTR ds:[ebx]
  40bfb4:	retf   
  40bfb5:	add    eax,0x879a83fb
  40bfba:	push   ds
  40bfbb:	xchg   ebx,eax
  40bfbc:	jp     0x40bfd6
  40bfbe:	gs ret 
  40bfc0:	mov    eax,0x34b65450
  40bfc5:	(bad)  
  40bfc6:	xor    BYTE PTR [ebp+0x19],dl
  40bfc9:	xchg   esi,eax
  40bfca:	popf   
  40bfcb:	fsubr  DWORD PTR [ebx-0x5887e8ec]
  40bfd1:	and    al,0x84
  40bfd3:	jl     0x40bf83
  40bfd5:	pop    edx
  40bfd6:	shr    BYTE PTR [ecx-0x18],0x36
  40bfda:	jg     0x40c055
  40bfdc:	shl    BYTE PTR [eax+edi*4+0x248ff852],1
  40bfe3:	int    0xbe
  40bfe5:	jp     0x40c009
  40bfe7:	enter  0xf6cc,0x2a
  40bfeb:	aaa    
  40bfec:	dec    eax
  40bfed:	mov    eax,ds:0x72a99794
  40bff2:	(bad)  [ebx-0xe8f0ccc]
  40bff8:	cmp    eax,0x66a26deb
  40bffd:	(bad)  
  40bffe:	push   ss
  40bfff:	sbb    BYTE PTR cs:[eax+0x71],ah
  40c003:	xlat   BYTE PTR ds:[ebx]
  40c004:	ja     0x40c034
  40c006:	sbb    DWORD PTR [eax+0x14d4874a],0xffffffb4
  40c00d:	adc    ecx,DWORD PTR [ebx+esi*4-0x43]
  40c011:	imul   ax,WORD PTR [edi-0xe],0xffd4
  40c016:	or     BYTE PTR [ecx],bh
  40c018:	xchg   ebp,eax
  40c019:	mov    dl,0x26
  40c01b:	jl     0x40bf9f
  40c01d:	jmp    0x5c52:0xf6046d55
  40c024:	repz inc edi
  40c026:	jo     0x40c030
  40c028:	dec    esp
  40c029:	pop    es
  40c02a:	add    al,0xfe
  40c02c:	adc    ch,BYTE PTR [esi+esi*1+0x5e4d6629]
  40c033:	sub    DWORD PTR [ebx+ebp*1+0x3d],eax
  40c037:	and    al,0x0
  40c039:	pop    esi
  40c03a:	mov    al,BYTE PTR [edx+0x5b728f27]
  40c040:	add    al,0x2f
  40c042:	push   0x2b
  40c044:	jo     0x40c0b1
  40c046:	cmp    ebp,DWORD PTR [edi+0x1c]
  40c049:	aas    
  40c04a:	xor    bl,bh
  40c04c:	lods   al,BYTE PTR ds:[esi]
  40c04d:	out    0xec,al
  40c04f:	das    
  40c050:	fadd   QWORD PTR [ecx-0x37ecb99b]
  40c056:	retf   0x5149
  40c059:	mov    ebp,0x3d58de6b
  40c05e:	mov    dl,0x47
  40c060:	adc    eax,0x2a85b4d9
  40c065:	stos   DWORD PTR es:[edi],eax
  40c066:	add    ecx,DWORD PTR [edi+0x37]
  40c069:	bound  ebp,QWORD PTR [ecx+0x68]
  40c06c:	or     BYTE PTR [ebp+ecx*4-0x1],0x2c
  40c071:	call   FWORD PTR [esp+eiz*4-0x43]
  40c075:	push   ebp
  40c076:	xchg   DWORD PTR [ecx+0x1d],esi
  40c079:	xor    al,dh
  40c07b:	aad    0x34
  40c07d:	out    0x64,eax
  40c07f:	(bad)  
  40c080:	pushf  
  40c081:	xchg   esi,eax
  40c082:	add    BYTE PTR [ecx-0x67e183da],dh
  40c088:	into   
  40c089:	ins    BYTE PTR es:[edi],dx
  40c08a:	imul   edx,DWORD PTR [edx+eax*1-0x51557fa5],0x79
  40c092:	adc    DWORD PTR [eax],0xffffffd9
  40c095:	scas   eax,DWORD PTR es:[edi]
  40c096:	mov    eax,ds:0xec41226b
  40c09b:	stos   DWORD PTR es:[edi],eax
  40c09c:	out    0xad,eax
  40c09e:	not    DWORD PTR [edx]
  40c0a0:	adc    ebx,DWORD PTR [ebp-0x3875f844]
  40c0a6:	xchg   eax,esi
  40c0a8:	ror    BYTE PTR [ecx-0x32],cl
  40c0ab:	pop    ds
  40c0ac:	ret    
  40c0ad:	aaa    
  40c0ae:	jnp    0x40c0e0
  40c0b0:	sbb    DWORD PTR [edi-0x2bd2bc4],0xda49f367
  40c0ba:	dec    ebx
  40c0bb:	stos   BYTE PTR es:[edi],al
  40c0bc:	movsx  edi,ax
  40c0bf:	int    0x68
  40c0c1:	mov    eax,ds:0x67f93a5b
  40c0c6:	int3   
  40c0c7:	(bad)  
  40c0c8:	push   ss
  40c0c9:	fbld   TBYTE PTR [edx+0x2d]
  40c0cc:	cld    
  40c0cd:	sub    al,0x8c
  40c0cf:	pop    ecx
  40c0d0:	fwait
  40c0d1:	ret    
  40c0d2:	mov    bh,0x49
  40c0d4:	jae    0x40c110
  40c0d6:	xor    bl,BYTE PTR [ebp-0x6f59d043]
  40c0dc:	call   FWORD PTR [ebx+0x15]
  40c0df:	cmp    BYTE PTR [ecx-0x1d],bl
  40c0e2:	addr16 jmp 0x1c43b0b5
  40c0e8:	mov    al,ds:0x59d90cd2
  40c0ed:	mov    ch,0xf3
  40c0ef:	cmp    al,bl
  40c0f1:	sbb    BYTE PTR [esi+0x3ebac10f],ah
  40c0f7:	in     al,0x5
  40c0f9:	mov    WORD PTR [eax],ds
  40c0fb:	and    ch,BYTE PTR [esi]
  40c0fd:	mov    dh,0x81
  40c0ff:	cmp    ecx,ebp
  40c101:	pop    ebx
  40c102:	add    DWORD PTR [ecx],0xffffffaf
  40c105:	repnz mov eax,ds:0xe9d9a01e
  40c10b:	scas   al,BYTE PTR es:[edi]
  40c10c:	hlt    
  40c10d:	je     0x40c163
  40c10f:	sbb    DWORD PTR [edx-0x2a],ebx
  40c112:	lods   al,BYTE PTR ds:[esi]
  40c113:	pop    ebx
  40c114:	inc    edx
  40c115:	or     BYTE PTR [ebp+0xe195aad],0xad
  40c11c:	cmc    
  40c11d:	les    edi,FWORD PTR [ebp+eiz*8-0x32477224]
  40c124:	sti    
  40c125:	imul   ecx,DWORD PTR [ecx-0x41],0x2d
  40c129:	mov    ebp,0xa2546e7
  40c12e:	ins    BYTE PTR es:[edi],dx
  40c12f:	jmp    0xd59eccde
  40c134:	and    edx,DWORD PTR [ebx+eiz*4]
  40c137:	xlat   BYTE PTR ds:[ebx]
  40c138:	sub    eax,0x4be83948
  40c13d:	lds    ebp,FWORD PTR [ecx+edi*4-0x1f]
  40c141:	std    
  40c142:	movlps QWORD PTR [ebx],xmm7
  40c145:	int3   
  40c146:	repz jbe 0x40c185
  40c149:	inc    ebx
  40c14a:	jmp    0x40c11e
  40c14c:	mov    bh,0x10
  40c14e:	int3   
  40c14f:	mov    bl,0xe9
  40c151:	jle    0x40c102
  40c153:	adc    eax,0x2eb68107
  40c158:	iret   
  40c159:	mov    esp,0x3bde4cd9
  40c15e:	(bad)  
  40c160:	and    BYTE PTR [ebx],dl
  40c162:	dec    edx
  40c163:	das    
  40c164:	mov    ecx,0xaecbefae
  40c169:	hlt    
  40c16a:	jb     0x40c0f6
  40c16c:	add    al,BYTE PTR [ebx]
  40c16e:	push   ss
  40c16f:	adc    eax,DWORD PTR [edi]
  40c171:	test   edx,ebp
  40c173:	inc    ebx
  40c174:	add    al,0x3f
  40c176:	fsub   QWORD PTR [ebx-0x1a]
  40c179:	mov    al,ds:0xa573f944
  40c17e:	retf   0xae87
  40c181:	add    eax,0x2047ae49
  40c186:	add    esi,DWORD PTR [edx+0xab96972]
  40c18c:	shr    ecx,cl
  40c18e:	jmp    esp
  40c190:	retf   
  40c191:	mov    ch,BYTE PTR [ebx+0x3b]
  40c194:	xchg   BYTE PTR [edi-0x13d4274e],dh
  40c19a:	popa   
  40c19b:	or     DWORD PTR [ecx+ebp*2],esp
  40c19e:	xlat   BYTE PTR ds:[ebx]
  40c19f:	dec    ecx
  40c1a0:	test   ebp,ecx
  40c1a2:	push   es
  40c1a3:	pop    es
  40c1a4:	sbb    ecx,0x8c95238f
  40c1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ab:	dec    esp
  40c1ac:	dec    esi
  40c1ad:	shl    ebx,cl
  40c1af:	sub    al,0xbc
  40c1b1:	xchg   BYTE PTR [ebp-0x7a0051e],ah
  40c1b7:	adc    BYTE PTR [esi+esi*4+0xb],ch
  40c1bb:	cmc    
  40c1bc:	pop    ss
  40c1bd:	cmp    eax,DWORD PTR [esi+0x375e488e]
  40c1c3:	in     al,dx
  40c1c4:	dec    eax
  40c1c5:	xchg   ebx,eax
  40c1c6:	mov    esi,0x3173c819
  40c1cb:	push   ss
  40c1cc:	sub    DWORD PTR [eax+0x4aff4edd],ebx
  40c1d2:	xor    al,0x20
  40c1d4:	jle    0x40c1b7
  40c1d6:	sbb    eax,0xd0f44b71
  40c1db:	xabort 0x1a
  40c1de:	leave  
  40c1df:	push   cs
  40c1e0:	mov    ebx,0xddfce4cd
  40c1e5:	xor    eax,0x4cf99ce1
  40c1ea:	adc    bh,dl
  40c1ec:	mov    ds:0x181f24c2,eax
  40c1f1:	mov    ?,ebp
  40c1f3:	lahf   
  40c1f4:	and    BYTE PTR [edi],cl
  40c1f6:	mov    bl,0x69
  40c1f8:	out    0xc0,al
  40c1fa:	push   ss
  40c1fb:	xchg   DWORD PTR [edx-0x25b2bb53],esi
  40c201:	cmp    ebp,DWORD PTR [edx-0x555c6b81]
  40c207:	das    
  40c208:	jne    0x40c199
  40c20a:	lods   eax,DWORD PTR ds:[esi]
  40c20b:	push   esi
  40c20c:	cmp    BYTE PTR [ecx],ch
  40c20e:	inc    ecx
  40c20f:	fstp   DWORD PTR [ebx+0x42]
  40c212:	daa    
  40c213:	(bad)  
  40c214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c215:	retf   0xeeb
  40c218:	daa    
  40c219:	int    0x6c
  40c21b:	(bad)  
  40c21c:	shl    BYTE PTR [eax+0x4f],cl
  40c21f:	mov    ds:0xe6d205be,al
  40c224:	mov    ebx,0xf302c5fd
  40c229:	enter  0xd572,0xbe
  40c22d:	adc    esp,DWORD PTR [esi]
  40c22f:	or     bl,bh
  40c231:	lock push es
  40c233:	fdivrp st(3),st
  40c235:	dec    ebx
  40c236:	clc    
  40c237:	and    DWORD PTR [ebp+esi*4-0x1865e536],esp
  40c23e:	jl     0x40c27e
  40c240:	test   DWORD PTR [ecx+eiz*4-0x5b],edx
  40c244:	xchg   edx,eax
  40c245:	push   cs
  40c246:	or     BYTE PTR [eax+ebp*2-0xd2bf2d6],dh
  40c24d:	gs pop ebx
  40c250:	dec    edi
  40c251:	pop    ecx
  40c252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c253:	or     eax,0x5cd5435e
  40c258:	pop    ds
  40c259:	push   edx
  40c25a:	mov    dh,0x22
  40c25c:	into   
  40c25d:	mov    ch,BYTE PTR [esi+0x60]
  40c260:	leave  
  40c261:	gs dec ebx
  40c263:	je     0x40c2aa
  40c265:	or     BYTE PTR [edx],al
  40c267:	repz (bad) 
  40c269:	mov    DWORD PTR [esi+0x4bcddc8d],eax
  40c26f:	bound  ebp,QWORD PTR [edx]
  40c271:	int3   
  40c272:	mov    ecx,0x639397c0
  40c277:	jecxz  0x40c20f
  40c279:	mul    BYTE PTR [esi+0x15]
  40c27c:	and    al,0xcf
  40c27e:	imul   ecx,DWORD PTR [esi],0x570e3c9a
  40c284:	cmc    
  40c285:	scas   al,BYTE PTR es:[edi]
  40c286:	mov    ebp,0x3f3ccf7d
  40c28b:	or     BYTE PTR [edi-0x52],ch
  40c28e:	mov    ds:0x2d10eda6,eax
  40c293:	inc    edx
  40c294:	(bad)  
  40c295:	cs xor eax,0xd6650327
  40c29b:	adc    dl,BYTE PTR [eax-0x1b]
  40c29e:	cli    
  40c29f:	(bad)  
  40c2a0:	sub    eax,0x822cb305
  40c2a5:	out    0xc8,al
  40c2a7:	jne    0x40c2e2
  40c2a9:	pop    eax
  40c2aa:	ins    DWORD PTR es:[edi],dx
  40c2ab:	xchg   esi,eax
  40c2ac:	inc    ebp
  40c2ad:	pop    edx
  40c2ae:	push   ecx
  40c2af:	dec    esp
  40c2b0:	jmp    DWORD PTR [esp+ebp*1]
  40c2b3:	sar    dh,0xa2
  40c2b6:	cmp    DWORD PTR [ebx+0x5d],eax
  40c2b9:	test   al,0x3d
  40c2bb:	sbb    edx,DWORD PTR [eax]
  40c2bd:	add    eax,0xcb0f074b
  40c2c2:	mov    dl,0xf9
  40c2c4:	outs   dx,BYTE PTR ds:[esi]
  40c2c5:	jae    0x40c2a0
  40c2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c8:	xchg   BYTE PTR ds:0xa082fe56,ch
  40c2ce:	sub    eax,0x8831342c
  40c2d3:	add    edx,DWORD PTR [edi]
  40c2d5:	xor    al,BYTE PTR ds:0x8b4f098e
  40c2db:	ret    
  40c2dc:	push   ebx
  40c2dd:	mov    eax,ds:0xfd657b8e
  40c2e2:	aam    0x1a
  40c2e4:	add    DWORD PTR [ecx+eax*8],edi
  40c2e7:	enter  0x8b47,0x3e
  40c2eb:	mov    al,0x21
  40c2ed:	pop    esp
  40c2ee:	inc    ebp
  40c2ef:	test   eax,0x20c9421b
  40c2f4:	scas   eax,DWORD PTR es:[edi]
  40c2f5:	lods   al,BYTE PTR ds:[esi]
  40c2f6:	pop    esi
  40c2f7:	inc    esp
  40c2f8:	jmp    0x40c316
  40c2fa:	push   ebp
  40c2fb:	xchg   DWORD PTR [eax],edi
  40c2fd:	pop    edi
  40c2fe:	jl     0x40c32c
  40c300:	mov    DWORD PTR [edi+0x79],ecx
  40c303:	fdivr  DWORD PTR ds:0xb0b2b21c
  40c309:	cmp    bl,BYTE PTR [eax+0x4]
  40c30c:	cli    
  40c30d:	xor    eax,0x73278d89
  40c312:	xchg   DWORD PTR [esi-0x7575cdb2],eax
  40c318:	cmc    
  40c319:	mov    ds:0x5c456e39,eax
  40c31e:	leave  
  40c31f:	mov    edx,0x36c73b43
  40c324:	push   ecx
  40c325:	ins    BYTE PTR es:[edi],dx
  40c326:	xor    BYTE PTR [edi+0x56],bl
  40c329:	xor    DWORD PTR [ecx-0x5b99a0cf],esi
  40c32f:	pop    ebx
  40c330:	dec    ecx
  40c331:	sub    edx,DWORD PTR [eax-0x1a2f3018]
  40c337:	ins    DWORD PTR es:[edi],dx
  40c338:	xor    dl,dl
  40c33a:	add    DWORD PTR ds:0x6f546ca7,esi
  40c340:	mov    ds:0x2da6e69c,eax
  40c345:	adc    DWORD PTR [edx],esp
  40c347:	cmp    BYTE PTR [edx],bl
  40c349:	jns    0x40c3c2
  40c34b:	enter  0xa580,0x5d
  40c34f:	cmp    eax,0x8606ea71
  40c354:	mov    edx,0x3d3c93e2
  40c359:	stos   BYTE PTR es:[edi],al
  40c35a:	add    BYTE PTR [ebx],ch
  40c35c:	in     eax,dx
  40c35d:	stos   BYTE PTR es:[edi],al
  40c35e:	out    0x97,al
  40c360:	xor    eax,DWORD PTR [eax]
  40c362:	sub    eax,0x51f088c2
  40c367:	dec    edx
  40c368:	jne    0x40c392
  40c36a:	retf   0x2c5c
  40c36d:	push   cs
  40c36e:	clc    
  40c36f:	adc    DWORD PTR [ebx-0x4b],0x73e9178
  40c376:	mov    cs,ecx
  40c378:	xchg   ebx,eax
  40c379:	and    al,0x81
  40c37b:	inc    esp
  40c37c:	addr16 push eax
  40c37e:	sbb    DWORD PTR [ebx+esi*1-0x3761d464],edi
  40c385:	xor    ebx,eax
  40c387:	outs   dx,BYTE PTR ds:[esi]
  40c388:	sub    eax,0xbb9e9af
  40c38d:	xchg   ebx,eax
  40c38e:	add    eax,0x1de0ac59
  40c393:	push   ds
  40c394:	pop    esp
  40c395:	sti    
  40c396:	cs adc eax,0x54c130d9
  40c39c:	mov    cl,0xbd
  40c39e:	fcomp  DWORD PTR [edx+0x21]
  40c3a1:	xchg   esp,eax
  40c3a2:	cmp    eax,DWORD PTR [ebx+0x73b8db35]
  40c3a8:	push   esp
  40c3a9:	(bad)  
  40c3aa:	lds    esi,FWORD PTR [ecx-0x445b07eb]
  40c3b0:	popf   
  40c3b1:	fidivr DWORD PTR [edi+0x451b3235]
  40c3b7:	inc    ebp
  40c3b8:	dec    esi
  40c3b9:	mov    bh,0x2f
  40c3bb:	sbb    cl,BYTE PTR [edx+0x58]
  40c3be:	mov    dh,0x67
  40c3c0:	pushf  
  40c3c1:	mov    esi,0x3c6a3c16
  40c3c6:	cld    
  40c3c7:	mov    dh,BYTE PTR [edx+0x6b]
  40c3ca:	mov    al,0x14
  40c3cc:	ss jmp 0xb7cd:0xca2ff571
  40c3d4:	repz sbb ebp,DWORD PTR [ebx+0x30382ae4]
  40c3db:	xor    bl,ch
  40c3dd:	leave  
  40c3de:	fld    QWORD PTR [ebp+eiz*2+0x1ad08feb]
  40c3e5:	push   esp
  40c3e6:	jno    0x40c3f2
  40c3e8:	and    DWORD PTR [edx+edi*4],ecx
  40c3eb:	pop    ss
  40c3ec:	sahf   
  40c3ed:	(bad)  
  40c3ee:	mov    eax,0x401f16f4
  40c3f3:	pop    ebp
  40c3f4:	adc    ah,BYTE PTR [ecx]
  40c3f6:	mov    eax,0xd68f1975
  40c3fb:	push   ss
  40c3fc:	mov    cl,0x7d
  40c3fe:	push   0xea2841e2
  40c403:	mov    esi,0x8d17c289
  40c408:	and    ecx,DWORD PTR [ecx+0x5a87408e]
  40c40e:	int    0x45
  40c410:	inc    edi
  40c411:	mov    ecx,0x4e394e23
  40c416:	test   DWORD PTR [ebp-0x7ff4d40a],ebp
  40c41c:	cmp    esp,ebp
  40c41e:	and    eax,0x4dadf29d
  40c423:	ret    0xb338
  40c426:	jecxz  0x40c3b6
  40c428:	jge    0x40c480
  40c42a:	hlt    
  40c42b:	inc    ecx
  40c42c:	aaa    
  40c42d:	mov    BYTE PTR [edx-0x7ce6ad07],bh
  40c433:	pop    edx
  40c434:	mov    ah,0x90
  40c436:	retf   
  40c437:	iret   
  40c438:	ss inc esi
  40c43a:	aas    
  40c43b:	and    eax,0x3869c558
  40c440:	xchg   edx,eax
  40c441:	outs   dx,DWORD PTR ds:[esi]
  40c442:	in     al,dx
  40c443:	jnp    0x40c47f
  40c445:	lock stos BYTE PTR es:[di],al
  40c448:	xor    eax,DWORD PTR [edi+ebx*4]
  40c44b:	sbb    edx,DWORD PTR [esi]
  40c44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c44e:	and    dh,BYTE PTR [ebx-0x4a]
  40c451:	cmc    
  40c452:	jbe    0x40c44b
  40c454:	mov    cs,WORD PTR ds:0x11f861d7
  40c45a:	fs inc ebp
  40c45c:	dec    edi
  40c45d:	sbb    edx,DWORD PTR [edi]
  40c45f:	mov    DWORD PTR [ecx+0x677ce283],ecx
  40c465:	retf   0x907d
  40c468:	(bad)  
  40c469:	in     al,dx
  40c46a:	sub    eax,0x73cc177b
  40c46f:	xchg   edx,eax
  40c470:	or     DWORD PTR [ebp-0x760a3642],0x3b
  40c477:	(bad)  
  40c478:	xlat   BYTE PTR ds:[ebx]
  40c479:	ins    DWORD PTR es:[edi],dx
  40c47a:	and    BYTE PTR [eax+0x2a],dh
  40c47d:	fisttp QWORD PTR [eax-0x6e]
  40c480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c481:	pop    ecx
  40c482:	inc    esi
  40c483:	sub    al,0x1f
  40c485:	fild   WORD PTR [ebp-0x21]
  40c488:	jnp    0x40c451
  40c48a:	and    al,0xaa
  40c48c:	pop    edi
  40c48d:	inc    ecx
  40c48e:	xor    BYTE PTR ds:0x4c41fd8b,dh
  40c494:	jae    0x40c463
  40c496:	lock ss (bad) 
  40c499:	lea    ebp,[ebx-0x38]
  40c49c:	imul   DWORD PTR [edx-0x46]
  40c49f:	inc    esp
  40c4a0:	stos   DWORD PTR es:[edi],eax
  40c4a1:	sub    ebx,ecx
  40c4a3:	into   
  40c4a4:	and    ah,BYTE PTR [ecx-0x7393d649]
  40c4aa:	test   BYTE PTR [ecx+0x27e81a9c],dh
  40c4b0:	stos   DWORD PTR es:[edi],eax
  40c4b1:	mov    bl,0x6f
  40c4b3:	sti    
  40c4b4:	jecxz  0x40c52a
  40c4b6:	mov    BYTE PTR [esi],bh
  40c4b8:	test   eax,esi
  40c4ba:	(bad)  
  40c4bb:	and    al,dl
  40c4bd:	xor    dl,BYTE PTR [esi-0x42]
  40c4c0:	adc    ecx,DWORD PTR [eax+ebx*4-0x2c0ad0c7]
  40c4c7:	add    al,0xf4
  40c4c9:	aad    0x31
  40c4cb:	pop    edx
  40c4cc:	test   esp,0x6089457
  40c4d2:	lock inc ebp
  40c4d4:	xchg   edx,eax
  40c4d5:	and    BYTE PTR [esi],bl
  40c4d7:	xchg   ebx,eax
  40c4d8:	cs mov esp,0xf3a778ab
  40c4de:	xchg   dh,cl
  40c4e0:	mov    esi,0x15d56a98
  40c4e5:	xchg   ecx,eax
  40c4e6:	pop    ebp
  40c4e7:	inc    ebp
  40c4e8:	hlt    
  40c4e9:	fdivr  QWORD PTR [eax-0x1da7e709]
  40c4ef:	pop    ds
  40c4f0:	pop    ebp
  40c4f1:	jmp    0x3ae:0xe7367946
  40c4f8:	cmp    BYTE PTR ds:0xe97dc84,bl
  40c4fe:	mov    cl,ch
  40c500:	push   cs
  40c501:	gs or  ch,bl
  40c504:	and    DWORD PTR [ecx],ebx
  40c506:	sahf   
  40c507:	jne    0x40c574
  40c509:	pop    esp
  40c50a:	mov    esi,DWORD PTR [edx*1-0x57552baf]
  40c511:	rcl    BYTE PTR [edi-0x25],0x5c
  40c515:	rcr    DWORD PTR [edx+esi*8],0x57
  40c519:	ret    0xf176
  40c51c:	mov    ah,0xcc
  40c51e:	xchg   ebp,eax
  40c51f:	and    dl,al
  40c521:	fcomp  QWORD PTR [eax]
  40c523:	hlt    
  40c524:	(bad)  
  40c525:	stos   DWORD PTR es:[edi],eax
  40c526:	xlat   BYTE PTR ds:[ebx]
  40c527:	ret    0xa98c
  40c52a:	sahf   
  40c52b:	retf   0x592a
  40c52e:	xchg   ebx,eax
  40c52f:	jmp    0x5ae7:0x13c5d4aa
  40c536:	js     0x40c5a5
  40c538:	and    eax,0xf73bdcf6
  40c53d:	sbb    edi,DWORD PTR [eax]
  40c53f:	and    edi,esp
  40c541:	cmp    ah,BYTE PTR [ecx-0x7d93cdae]
  40c547:	adc    BYTE PTR [ebx+esi*4-0x5f],bl
  40c54b:	dec    esi
  40c54c:	sub    eax,0x6c617bd9
  40c551:	mov    ecx,DWORD PTR [eax]
  40c553:	cmp    ah,BYTE PTR [edi]
  40c555:	popf   
  40c556:	mov    ch,0xff
  40c558:	cs push es
  40c55a:	mov    dh,0x36
  40c55c:	loop   0x40c4fb
  40c55e:	xchg   edi,eax
  40c55f:	mov    bh,0xe2
  40c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c562:	pop    di
  40c564:	pop    ss
  40c565:	ja     0x40c526
  40c567:	xchg   esp,eax
  40c568:	mov    dh,0x21
  40c56a:	and    al,bl
  40c56c:	mov    BYTE PTR [edx-0x663d060a],bh
  40c572:	cld    
  40c573:	rcl    edi,cl
  40c575:	nop
  40c576:	repnz or BYTE PTR [ecx+ebp*2],ch
  40c57a:	leave  
  40c57b:	jne    0x40c56a
  40c57d:	mov    ah,0xd9
  40c57f:	mov    bl,0xfe
  40c581:	inc    esi
  40c582:	icebp  
  40c583:	jne    0x40c5ea
  40c585:	bound  esp,QWORD PTR [edx]
  40c587:	push   cs
  40c588:	pop    edi
  40c589:	(bad)  
  40c58a:	fmul   QWORD PTR [ebp-0x60]
  40c58d:	lahf   
  40c58e:	(bad)  
  40c58f:	xchg   ebx,eax
  40c590:	inc    edx
  40c591:	inc    esi
  40c592:	lahf   
  40c593:	pop    edx
  40c594:	jno    0x40c524
  40c596:	lea    ebp,[esi+0x78]
  40c599:	sbb    eax,0xc7738f62
  40c59e:	lods   eax,DWORD PTR ds:[esi]
  40c59f:	push   ss
  40c5a0:	daa    
  40c5a1:	popf   
  40c5a2:	in     al,0x64
  40c5a4:	mov    ah,0xbb
  40c5a6:	push   ebp
  40c5a7:	mov    ebp,0x57712ca9
  40c5ac:	inc    esi
  40c5ad:	imul   eax,DWORD PTR [eax-0x16],0xef24dca0
  40c5b4:	push   ds
  40c5b5:	in     eax,0x8
  40c5b7:	cdq    
  40c5b8:	loope  0x40c54e
  40c5ba:	cmc    
  40c5bb:	xchg   ebx,eax
  40c5bc:	sbb    DWORD PTR [ecx-0x6a3a6f94],edi
  40c5c2:	shl    bh,0x26
  40c5c5:	ror    BYTE PTR es:[ebp+esi*8+0x4e],0xd1
  40c5cb:	fld    DWORD PTR [eax+ebx*1]
  40c5ce:	xor    dl,bh
  40c5d0:	cmp    ebp,DWORD PTR [ebp-0x2]
  40c5d3:	mov    bl,cl
  40c5d5:	dec    edx
  40c5d6:	ret    
  40c5d7:	fiadd  WORD PTR [edx+0x3a]
  40c5da:	and    al,cl
  40c5dc:	cwde   
  40c5dd:	dec    eax
  40c5de:	aad    0xdc
  40c5e0:	hlt    
  40c5e1:	sub    al,0x6c
  40c5e3:	lods   al,BYTE PTR ds:[esi]
  40c5e4:	adc    BYTE PTR [ecx-0x20],0xe5
  40c5e8:	fistp  QWORD PTR [edi]
  40c5ea:	pop    ds
  40c5eb:	lds    edi,FWORD PTR [ebx+0x29]
  40c5ee:	and    BYTE PTR [esi+0x619d9020],ah
  40c5f4:	cli    
  40c5f5:	mov    bh,0xed
  40c5f7:	and    eax,0xe8457251
  40c5fc:	and    eax,0x612bdd85
  40c601:	call   0x36aac3bb
  40c606:	jmp    0xca87:0x20f19b34
  40c60d:	or     eax,0xaa4b4864
  40c612:	add    eax,0x76314117
  40c617:	lods   al,BYTE PTR ds:[esi]
  40c618:	mov    cl,0x96
  40c61a:	push   ebx
  40c61b:	jo     0x40c61b
  40c61d:	lahf   
  40c61e:	jb     0x40c5dd
  40c620:	cmp    ah,BYTE PTR [ebx+ecx*4]
  40c623:	mov    bl,0x43
  40c625:	mov    eax,ds:0x5ad9ddf8
  40c62a:	mov    edx,0x7f90ed8a
  40c62f:	(bad)  
  40c630:	and    DWORD PTR [esi-0x1b],esp
  40c633:	aaa    
  40c634:	xchg   edi,eax
  40c635:	dec    ecx
  40c636:	out    0x12,al
  40c638:	neg    BYTE PTR [eax]
  40c63a:	(bad)
  40c63d:	dec    esp
  40c63e:	mov    cl,BYTE PTR [ecx+0x24]
  40c641:	sahf   
  40c642:	bound  esp,QWORD PTR [esi-0x8bde82e]
  40c648:	stos   BYTE PTR es:[edi],al
  40c649:	sub    ah,BYTE PTR [edx+0x62]
  40c64c:	inc    edi
  40c64d:	retf   0xb9a4
  40c650:	test   DWORD PTR [ecx],esi
  40c652:	fwait
  40c653:	repnz and al,0xec
  40c656:	retf   0xc211
  40c659:	and    DWORD PTR [ebx],esi
  40c65b:	sbb    BYTE PTR ds:0xe4f4e872,dl
  40c661:	sbb    eax,0xa3af8aeb
  40c666:	adc    BYTE PTR [ecx+0x681b4b37],ch
  40c66c:	call   0xf933889e
  40c671:	jns    0x40c6c1
  40c673:	repz mov ah,0x0
  40c677:	pop    esi
  40c678:	xchg   ch,ah
  40c67a:	fs mov dh,0xfe
  40c67d:	jmp    0x40c692
  40c67f:	mov    ds:0xabd96c36,al
  40c684:	cli    
  40c685:	mov    edi,0xb1be999c
  40c68a:	shl    BYTE PTR [eax],0xf3
  40c68d:	xchg   ebx,eax
  40c68e:	push   0xffffff9b
  40c690:	xchg   dh,al
  40c692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c693:	pop    ebx
  40c694:	retf   
  40c695:	ds ja  0x40c6b3
  40c698:	popf   
  40c699:	jne    0x40c70b
  40c69b:	pusha  
  40c69c:	jae    0x40c68b
  40c69e:	jbe    0x40c63d
  40c6a0:	ja     0x40c6cb
  40c6a2:	or     al,0x9f
  40c6a4:	into   
  40c6a5:	je     0x40c63f
  40c6a7:	pop    edi
  40c6a8:	in     eax,0xac
  40c6aa:	ja     0x40c684
  40c6ac:	cmp    ecx,DWORD PTR [eax]
  40c6ae:	repz dec edi
  40c6b0:	mov    ch,0x8f
  40c6b2:	jbe    0x40c6e5
  40c6b4:	sti    
  40c6b5:	daa    
  40c6b6:	or     esp,edi
  40c6b8:	inc    ecx
  40c6b9:	or     esp,esp
  40c6bb:	adc    BYTE PTR [esi],cl
  40c6bd:	sahf   
  40c6be:	adc    eax,0x29f9352
  40c6c3:	or     DWORD PTR [eax+0x0],ebp
  40c6c6:	in     al,0x80
  40c6c8:	push   es
  40c6c9:	and    edx,DWORD PTR [esp+eax*2-0x21f3e473]
  40c6d0:	ins    BYTE PTR es:[edi],dx
  40c6d1:	dec    ebp
  40c6d2:	add    ebx,ebp
  40c6d4:	cmp    dh,dl
  40c6d6:	xor    DWORD PTR [esi+0x1664feee],eax
  40c6dc:	mov    ecx,0x3f853c6c
  40c6e1:	cmp    edx,0xffffffb8
  40c6e4:	in     al,dx
  40c6e5:	aam    0x5b
  40c6e7:	adc    al,0xc3
  40c6e9:	mov    esi,0x3c942e50
  40c6ee:	stos   DWORD PTR es:[edi],eax
  40c6ef:	sbb    bl,ah
  40c6f1:	dec    ebp
  40c6f2:	aas    
  40c6f3:	xor    dl,BYTE PTR [ecx]
  40c6f5:	xchg   ebx,eax
  40c6f6:	mov    esi,0x174335d2
  40c6fb:	push   cs
  40c6fc:	mov    ebx,ecx
  40c6fe:	dec    edx
  40c6ff:	add    eax,0xdbf52d2b
  40c704:	inc    eax
  40c705:	mov    cl,0x80
  40c707:	daa    
  40c708:	sbb    DWORD PTR [eax-0x10],esi
  40c70b:	push   edi
  40c70c:	dec    esp
  40c70d:	push   eax
  40c70e:	cld    
  40c70f:	inc    edi
  40c710:	jae    0x40c71e
  40c712:	push   ss
  40c713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c714:	or     al,BYTE PTR fs:[edi+0x42de3d84]
  40c71b:	fnsave [esi+ecx*4]
  40c71e:	cmp    eax,DWORD PTR [edx]
  40c720:	je     0x40c6b4
  40c722:	push   0x4bc66471
  40c727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c728:	add    dl,dh
  40c72a:	inc    edi
  40c72b:	daa    
  40c72c:	xor    ch,BYTE PTR [eax-0x678d9bff]
  40c732:	scas   eax,DWORD PTR es:[edi]
  40c733:	mov    eax,ds:0xd889f94c
  40c738:	mov    ds:0xce4cf611,eax
  40c73d:	mov    ah,0xf4
  40c73f:	push   0xffffffd7
  40c741:	xor    BYTE PTR [eax+0x531916ab],dh
  40c747:	aad    0xd7
  40c749:	sbb    esp,DWORD PTR [edi]
  40c74b:	dec    eax
  40c74c:	and    ch,BYTE PTR [edi-0xc]
  40c74f:	mov    DWORD PTR [edx+ebp*1],0x87c10639
  40c756:	sbb    eax,DWORD PTR [edi+0x3]
  40c759:	and    DWORD PTR [edi+0x1a],0xffffffe8
  40c75d:	push   ebx
  40c75e:	add    DWORD PTR [edx-0x65b46bd7],eax
  40c764:	dec    edi
  40c765:	inc    edi
  40c766:	inc    esi
  40c767:	adc    ecx,DWORD PTR [edx+0x20a0dbbe]
  40c76d:	dec    esp
  40c76e:	and    ebx,DWORD PTR [ebx-0x56387036]
  40c774:	lahf   
  40c775:	mov    ebp,0x4e69154c
  40c77a:	push   ebp
  40c77b:	inc    ecx
  40c77c:	inc    esi
  40c77d:	(bad)  
  40c77e:	mov    eax,0xeb518279
  40c783:	out    dx,al
  40c784:	pcmpgtd mm2,QWORD PTR [eax+ecx*2]
  40c788:	mov    eax,ds:0x5c9289fc
  40c78d:	pop    edi
  40c78e:	hlt    
  40c78f:	push   ecx
  40c790:	cli    
  40c791:	fcmove st,st(7)
  40c793:	fisub  DWORD PTR [edi+0x2]
  40c796:	cld    
  40c797:	or     dl,BYTE PTR [eax]
  40c799:	push   eax
  40c79a:	(bad)  
  40c79b:	pop    ebx
  40c79c:	int    0xcf
  40c79e:	retf   
  40c79f:	pop    esi
  40c7a0:	ins    BYTE PTR es:[edi],dx
  40c7a1:	lea    ebx,[edi-0x2d]
  40c7a4:	push   ebp
  40c7a5:	leave  
  40c7a6:	inc    ebp
  40c7a7:	rol    DWORD PTR [esi+0x15dc8f81],0xd8
  40c7ae:	test   BYTE PTR [esi+0x1b],bl
  40c7b1:	ss sub eax,edx
  40c7b4:	ret    0x31db
  40c7b7:	ins    DWORD PTR es:[edi],dx
  40c7b8:	xchg   ebp,eax
  40c7b9:	xchg   ecx,eax
  40c7ba:	and    eax,0xaa2d8dcf
  40c7bf:	sti    
  40c7c0:	nop
  40c7c1:	int3   
  40c7c2:	sub    al,0xbe
  40c7c4:	or     eax,0x8fb2e9ad
  40c7ca:	jno    0x40c7aa
  40c7cc:	sbb    BYTE PTR [ebp-0x54128042],bh
  40c7d2:	add    eax,0xc1dde3ba
  40c7d7:	fist   WORD PTR [eax+edx*1+0x5eb49368]
  40c7de:	add    DWORD PTR [ebx+0x4d],esi
  40c7e1:	adc    DWORD PTR ds:0x99642b60,edi
  40c7e7:	into   
  40c7e8:	dec    esp
  40c7e9:	add    ah,ch
  40c7eb:	jno    0x40c7e5
  40c7ed:	mov    al,0xa5
  40c7ef:	adc    BYTE PTR [ecx],dl
  40c7f1:	jmp    0x40c85e
  40c7f3:	retf   
  40c7f4:	cmp    al,0xf8
  40c7f6:	out    0xa6,al
  40c7f8:	or     al,0x20
  40c7fa:	fs nop
  40c7fc:	push   cs
  40c7fd:	out    dx,al
  40c7fe:	data16 fwait
  40c800:	xlat   BYTE PTR ds:[ebx]
  40c801:	inc    esi
  40c802:	mov    dl,0xa3
  40c804:	fucomp st(0)
  40c806:	sar    DWORD PTR [ebx],0xf9
  40c809:	xor    DWORD PTR [eax+edx*2+0x7],ebp
  40c80d:	pop    ds
  40c80e:	out    0x98,eax
  40c810:	cmp    eax,0xb89935d5
  40c815:	mov    ds,WORD PTR [edi]
  40c817:	sbb    ch,dl
  40c819:	dec    edi
  40c81a:	and    eax,DWORD PTR [ebx+0x4d]
  40c81d:	loop   0x40c7f4
  40c81f:	pop    ebx
  40c820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c821:	cmp    dl,BYTE PTR [ecx-0x55]
  40c824:	push   es
  40c825:	and    DWORD PTR [esi-0xd],0xd
  40c829:	pushf  
  40c82a:	aam    0x41
  40c82c:	outs   dx,DWORD PTR ds:[esi]
  40c82d:	xor    dl,BYTE PTR [eax+0x41]
  40c830:	repnz rcr ebp,0x86
  40c834:	adc    al,BYTE PTR [edi-0x2a8edf57]
  40c83a:	mov    esi,0x60616411
  40c83f:	pushf  
  40c840:	test   esp,edx
  40c842:	cmp    eax,0xa70797c7
  40c847:	imul   esp,edx,0xcc199af
  40c84d:	or     DWORD PTR [ebp+0x468e3d83],edi
  40c853:	out    dx,al
  40c854:	sahf   
  40c855:	or     DWORD PTR [esp+esi*8],esp
  40c858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c859:	scas   eax,DWORD PTR es:[edi]
  40c85a:	fwait
  40c85b:	xor    eax,DWORD PTR [edi]
  40c85d:	popf   
  40c85e:	jmp    0x82b7:0x1057b619
  40c865:	hlt    
  40c866:	push   ss
  40c867:	xor    edi,DWORD PTR [ebx+0x4a0d2a16]
  40c86d:	mov    ch,0xd0
  40c86f:	or     DWORD PTR [ebx-0x19f2a9df],edx
  40c875:	popf   
  40c876:	push   cs
  40c877:	pop    edi
  40c878:	les    ebx,FWORD PTR [esi]
  40c87a:	arpl   bx,cx
  40c87c:	mov    dh,0x72
  40c87e:	mov    esp,0xed15dac3
  40c883:	or     ah,dl
  40c885:	push   ecx
  40c886:	lods   al,BYTE PTR ds:[esi]
  40c887:	dec    eax
  40c888:	ret    
  40c889:	xor    eax,0x726d08ca
  40c88e:	mov    cl,0x77
  40c890:	xor    ebp,esp
  40c892:	hlt    
  40c893:	lahf   
  40c894:	lods   al,BYTE PTR ds:[esi]
  40c895:	arpl   WORD PTR [eax+ebx*1],bp
  40c898:	xchg   ecx,eax
  40c899:	icebp  
  40c89a:	call   0x9533ccd2
  40c89f:	dec    ebp
  40c8a0:	cmp    BYTE PTR gs:[eax-0x68],dh
  40c8a4:	lods   eax,DWORD PTR ds:[esi]
  40c8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a6:	inc    esi
  40c8a7:	fist   DWORD PTR [esp+ecx*4-0x36e35bd8]
  40c8ae:	shr    BYTE PTR [edx-0x196d7f4e],1
  40c8b4:	push   ss
  40c8b5:	pop    esi
  40c8b6:	addr16 imul edx,edx,0xfbb0d738
  40c8bd:	jl     0x40c8f1
  40c8bf:	inc    esi
  40c8c0:	nop
  40c8c1:	jmp    0xd862:0xe37cb0e9
  40c8c8:	add    BYTE PTR [edx-0x7985e0f6],dh
  40c8ce:	and    al,0xa5
  40c8d0:	pusha  
  40c8d1:	nop
  40c8d2:	mov    edi,DWORD PTR [eax-0x51]
  40c8d5:	mov    esi,0x455535e
  40c8da:	call   0x22f95c07
  40c8df:	pop    eax
  40c8e0:	or     al,0x1
  40c8e2:	or     al,0x9b
  40c8e4:	adc    bh,0x7f
  40c8e7:	nop
  40c8e8:	mov    bl,dl
  40c8ea:	test   DWORD PTR [edx-0x6e],ecx
  40c8ed:	retf   0x220
  40c8f0:	ffreep st(4)
  40c8f2:	aam    0x9c
  40c8f4:	cmp    dh,dl
  40c8f6:	out    0xf4,eax
  40c8f8:	xchg   ebp,eax
  40c8f9:	outs   dx,BYTE PTR ds:[esi]
  40c8fa:	stc    
  40c8fb:	(bad)  
  40c8fd:	xchg   ebp,eax
  40c8fe:	xchg   edx,eax
  40c8ff:	mov    eax,ds:0x68d22368
  40c904:	outs   dx,DWORD PTR ds:[esi]
  40c905:	pop    ecx
  40c906:	(bad)  
  40c907:	addr16 jno 0x40c953
  40c90a:	xor    esp,DWORD PTR [edx]
  40c90c:	adc    dl,ah
  40c90e:	or     eax,0xc99ea0cc
  40c913:	iret   
  40c914:	icebp  
  40c915:	shr    DWORD PTR [eax+0x520dcbeb],cl
  40c91b:	mov    al,ds:0x6f7d7b3a
  40c920:	adc    BYTE PTR [ebx+edi*8],dh
  40c923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c925:	inc    eax
  40c926:	idiv   BYTE PTR [ebx-0x6a57fec7]
  40c92c:	push   edi
  40c92d:	mov    ecx,0x8df90cf1
  40c932:	and    al,0x5b
  40c934:	sbb    BYTE PTR [ecx-0x8],0x52
  40c938:	stc    
  40c939:	xchg   esp,eax
  40c93a:	out    0x48,eax
  40c93c:	clc    
  40c93d:	adc    BYTE PTR [eax+0x3e],ah
  40c940:	pop    ds
  40c941:	mov    BYTE PTR [ecx],al
  40c943:	xchg   ebx,eax
  40c944:	je     0x40c8f3
  40c946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c948:	mov    DWORD PTR [edi-0x2],ebp
  40c94b:	mov    ebx,0x474f66c0
  40c950:	out    dx,eax
  40c951:	cdq    
  40c952:	adc    ch,BYTE PTR [ebp+esi*4+0x6d6efab4]
  40c959:	sbb    edx,ebp
  40c95b:	xchg   esp,eax
  40c95c:	dec    esi
  40c95d:	push   ebx
  40c95e:	mov    esi,0x58abb7ca
  40c963:	jnp    0x40c970
  40c965:	cmp    ah,dl
  40c967:	pop    esi
  40c968:	nop
  40c969:	inc    ebp
  40c96b:	rcr    BYTE PTR [ecx],1
  40c96d:	es mov esp,0xcbb1ebe1
  40c973:	outs   dx,DWORD PTR ds:[si]
  40c975:	(bad)  
  40c976:	sub    DWORD PTR [ecx-0x25f99b5b],ecx
  40c97c:	popa   
  40c97d:	fnstenv [esi+ecx*8+0x4540892c]
  40c984:	mov    esi,DWORD PTR [ebx]
  40c986:	mov    eax,ds:0x1dda8b8e
  40c98b:	dec    eax
  40c98c:	leave  
  40c98d:	not    BYTE PTR [eax]
  40c98f:	mov    eax,ds:0xc6c9fcde
  40c994:	jae    0x40c9f8
  40c996:	lahf   
  40c997:	hlt    
  40c998:	and    dh,BYTE PTR [ebx+eiz*1-0x55af7bf7]
  40c99f:	or     dh,BYTE PTR [edi-0x14]
  40c9a2:	jge    0x40c9a3
  40c9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a5:	mov    ebx,0xa6ebfa7c
  40c9aa:	shl    DWORD PTR [ebx+ebx*8],1
  40c9ad:	inc    edx
  40c9ae:	cmp    cl,0x13
  40c9b1:	std    
  40c9b2:	mov    BYTE PTR [edi],bl
  40c9b4:	adc    al,0xb9
  40c9b6:	cs or  ah,ah
  40c9b9:	loopne 0x40c973
  40c9bb:	fisub  DWORD PTR [esp+edx*4]
  40c9be:	push   esp
  40c9bf:	in     al,dx
  40c9c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c1:	fcom   QWORD PTR [edi-0x80]
  40c9c4:	out    0x61,eax
  40c9c6:	adc    al,0x6b
  40c9c8:	lods   eax,DWORD PTR ds:[esi]
  40c9c9:	pusha  
  40c9ca:	mov    ebx,0xe7afbc36
  40c9cf:	in     al,dx
  40c9d0:	pop    eax
  40c9d1:	cmp    al,0xab
  40c9d3:	inc    ebx
  40c9d4:	int3   
  40c9d5:	(bad)  
  40c9d6:	int3   
  40c9d7:	push   ecx
  40c9d8:	ret    0x8e49
  40c9db:	xor    al,0x24
  40c9dd:	add    al,0xb3
  40c9df:	fld    st(4)
  40c9e1:	cld    
  40c9e2:	rcr    dl,1
  40c9e4:	test   eax,0xf78b165
  40c9e9:	lahf   
  40c9ea:	jl     0x40c97c
  40c9ec:	cmp    eax,0x87eae2b4
  40c9f1:	dec    esp
  40c9f2:	bound  eax,QWORD PTR [eax]
  40c9f4:	ror    BYTE PTR [ebp-0xc],0xbc
  40c9f8:	add    BYTE PTR [edi-0x4c],dl
  40c9fb:	mov    edx,0x84846cfe
  40ca00:	call   FWORD PTR [ebx]
  40ca02:	push   ds
  40ca03:	(bad)  
  40ca04:	shl    BYTE PTR [ecx-0x37c5e55b],1
  40ca0a:	inc    ecx
  40ca0b:	jmp    0x40ca05
  40ca0d:	imul   esi,DWORD PTR [esi],0x45
  40ca10:	jmp    0x17c23da5
  40ca15:	lea    ecx,[esi]
  40ca17:	inc    ebp
  40ca18:	adc    cl,BYTE PTR [edx+0x3f]
  40ca1b:	mov    ch,0xbc
  40ca1d:	adc    dl,ch
  40ca1f:	es jp  0x40ca40
  40ca22:	neg    DWORD PTR [edi]
  40ca24:	and    BYTE PTR [ebp+0x4],ch
  40ca27:	xor    bh,BYTE PTR [ecx-0x53470cc1]
  40ca2d:	mov    esi,0x451088f4
  40ca32:	pop    ebp
  40ca33:	xor    bl,BYTE PTR [ecx-0x15d3d776]
  40ca39:	add    ch,ch
  40ca3b:	dec    ecx
  40ca3c:	sbb    DWORD PTR [edi-0x149f9e47],ecx
  40ca42:	lods   eax,DWORD PTR ds:[esi]
  40ca43:	int    0x46
  40ca45:	data16 sub al,BYTE PTR [edx+0x5c34e555]
  40ca4c:	int3   
  40ca4d:	and    ebx,DWORD PTR [edx+0x68ab3dd5]
  40ca53:	(bad)  
  40ca54:	xchg   edi,eax
  40ca55:	mov    ebx,0x19d27ae
  40ca5a:	jp     0x40caa9
  40ca5c:	mov    ds:0xb0b7ef65,al
  40ca61:	rol    DWORD PTR [esi+0x672ffc8],cl
  40ca67:	add    ch,BYTE PTR [ebp+0x3686d9f0]
  40ca6d:	inc    edi
  40ca6e:	xchg   edx,eax
  40ca6f:	xchg   ebx,eax
  40ca70:	ds pop es
  40ca72:	pop    ds
  40ca73:	cmp    eax,0xfd98ad9e
  40ca78:	popa   
  40ca79:	adc    eax,0xfe1fbf12
  40ca7e:	mov    DWORD PTR [ebx+0x7dcbd0fe],esp
  40ca84:	jnp    0x40ca73
  40ca86:	xchg   edx,eax
  40ca87:	call   0x3077:0xf9a244c2
  40ca8e:	idiv   BYTE PTR [ebp-0x3]
  40ca91:	call   FWORD PTR [edx+0x615c06bd]
  40ca97:	xor    BYTE PTR [edx+0x19],ch
  40ca9a:	test   DWORD PTR [ebx+0x223a5e28],edx
  40caa0:	imul   edx,DWORD PTR [ecx],0xffffff92
  40caa3:	mov    ebx,0x6c64e484
  40caa8:	addr16 pop ebx
  40caaa:	cli    
  40caab:	es js  0x40cb02
  40caae:	daa    
  40caaf:	call   0x846f:0x5f74544b
  40cab6:	pop    ebx
  40cab7:	test   BYTE PTR [ebx+ebx*1+0x7d43174f],ah
  40cabe:	jecxz  0x40caec
  40cac0:	and    al,0x50
  40cac2:	dec    eax
  40cac3:	mov    al,0x6b
  40cac5:	push   edx
  40cac6:	jns    0x40ca63
  40cac8:	adc    eax,0x8d93bda
  40cacd:	adc    eax,0xf1d846a
  40cad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad3:	xor    bh,BYTE PTR [esi+0x365e75bf]
  40cad9:	(bad)  
  40cada:	fnstsw WORD PTR ds:0x771f7105
  40cae0:	fnstenv [eax-0x2d]
  40cae3:	(bad)  
  40cae4:	bound  ecx,QWORD PTR [ecx-0x6cf0938d]
  40caea:	cmp    DWORD PTR [ecx+0x32],eax
  40caed:	mov    bl,0x52
  40caef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caf0:	leave  
  40caf1:	pop    bp
  40caf3:	sbb    ah,ch
  40caf5:	xchg   ebp,eax
  40caf6:	push   ds
  40caf7:	cmp    eax,0xd5d9c80
  40cafc:	and    al,0xdc
  40cafe:	xchg   ebp,eax
  40caff:	lods   al,BYTE PTR ds:[esi]
  40cb00:	adc    ebp,DWORD PTR [ecx-0x40a564ac]
  40cb06:	sub    ah,BYTE PTR [esi+0x5488b40f]
  40cb0c:	adc    ecx,esi
  40cb0e:	inc    edi
  40cb0f:	jp     0x40cad1
  40cb11:	sbb    ch,bl
  40cb13:	lods   eax,DWORD PTR ds:[esi]
  40cb14:	push   ds
  40cb15:	cmc    
  40cb16:	add    al,BYTE PTR [ebp+ebx*8-0x1f]
  40cb1a:	cs and edi,ebp
  40cb1d:	mov    ebx,0x1b8462a4
  40cb22:	mov    al,ds:0xb01ce872
  40cb27:	rcl    DWORD PTR [ecx-0x171d9b41],cl
  40cb2d:	xor    bl,BYTE PTR [eax-0x29]
  40cb30:	rcr    ecx,0xb7
  40cb33:	add    edx,DWORD PTR [edi-0x2c4a9150]
  40cb39:	mov    cl,0xdf
  40cb3b:	je     0x40cb59
  40cb3d:	mov    DWORD PTR [edx-0x68],ebx
  40cb40:	mov    dl,0x70
  40cb42:	out    0xb0,eax
  40cb44:	xor    eax,ecx
  40cb46:	mov    ch,BYTE PTR [edi]
  40cb48:	in     eax,dx
  40cb49:	das    
  40cb4a:	or     eax,0xc2f506f5
  40cb4f:	xor    al,0x9d
  40cb51:	pop    ebp
  40cb52:	jle    0x40cb0e
  40cb54:	jb     0x40cb1d
  40cb56:	mov    bl,0x57
  40cb58:	sub    al,0x8e
  40cb5a:	mov    ds:0x398ad0c7,al
  40cb5f:	out    0xc0,eax
  40cb61:	stos   DWORD PTR es:[edi],eax
  40cb62:	dec    esi
  40cb63:	add    DWORD PTR [esi+0x4472eb0e],ecx
  40cb69:	adc    BYTE PTR [edi+0x61],dl
  40cb6c:	scas   eax,DWORD PTR es:[edi]
  40cb6d:	mov    eax,ds:0x4c3c23b4
  40cb72:	inc    ebx
  40cb73:	push   ds
  40cb74:	pop    es
  40cb75:	xor    esi,DWORD PTR ds:0x417f4095
  40cb7b:	aad    0xc
  40cb7d:	mov    cl,0xa5
  40cb7f:	jmp    0x3bf4:0xd7024507
  40cb86:	popf   
  40cb87:	mov    al,0x90
  40cb89:	mov    ch,bl
  40cb8b:	test   BYTE PTR [ebp-0x7f],al
  40cb8e:	adc    BYTE PTR [eax+0x36],dl
  40cb91:	mov    ch,0xe1
  40cb93:	loop   0x40cb38
  40cb95:	jmp    0x40cb5c
  40cb97:	ror    ebp,cl
  40cb99:	push   esp
  40cb9a:	xchg   esp,eax
  40cb9b:	adc    al,0x97
  40cb9d:	sti    
  40cb9e:	imul   esp
  40cba0:	cli    
  40cba1:	loop   0x40cb67
  40cba3:	push   esp
  40cba4:	loopne 0x40cb53
  40cba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba7:	(bad)  
  40cba8:	scas   al,BYTE PTR es:[edi]
  40cba9:	mov    edx,0x5a6b9206
  40cbae:	cli    
  40cbaf:	lods   al,BYTE PTR ds:[esi]
  40cbb0:	sub    bh,ah
  40cbb2:	fisttp WORD PTR [edx-0x455b8568]
  40cbb8:	out    0xe6,eax
  40cbba:	scas   al,BYTE PTR es:[edi]
  40cbbb:	xor    esi,DWORD PTR [edi]
  40cbbd:	adc    BYTE PTR [ecx],bl
  40cbbf:	iret   
  40cbc0:	cmp    bh,bh
  40cbc2:	cmp    ebx,DWORD PTR [eax+0x302d6cc2]
  40cbc8:	jo     0x40cc39
  40cbca:	les    ebp,FWORD PTR [ebp+0x77963f1]
  40cbd0:	mov    esi,eax
  40cbd2:	push   0x25
  40cbd4:	adc    DWORD PTR [ebp+0x41a61cbf],edx
  40cbda:	lods   eax,DWORD PTR ds:[esi]
  40cbdb:	popf   
  40cbdc:	xchg   esi,eax
  40cbdd:	inc    esi
  40cbde:	shl    DWORD PTR [ecx+0x1b],0x96
  40cbe2:	pop    ds
  40cbe3:	addr16 dec esi
  40cbe5:	mov    ds:0x9e848875,eax
  40cbea:	retf   0x85e9
  40cbed:	dec    edi
  40cbee:	nop
  40cbef:	or     ecx,ebx
  40cbf1:	sti    
  40cbf2:	add    cl,dh
  40cbf4:	outs   dx,BYTE PTR ds:[esi]
  40cbf5:	pushf  
  40cbf6:	lds    edi,FWORD PTR [ebx]
  40cbf8:	dec    ch
  40cbfa:	sub    ebx,edx
  40cbfc:	mov    ch,0x45
  40cbfe:	cmp    DWORD PTR [ebp-0x7a1cb503],esp
  40cc04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc05:	or     al,0xfd
  40cc07:	jle    0x40cbfb
  40cc09:	fisttp QWORD PTR [edi]
  40cc0c:	inc    edi
  40cc0d:	push   ebp
  40cc0e:	fnsave ds:0x987100d3
  40cc14:	sti    
  40cc15:	loop   0x40cba8
  40cc17:	adc    eax,0xcec96601
  40cc1c:	fmul   QWORD PTR [eax+0x2f]
  40cc1f:	inc    ecx
  40cc20:	fdivr  st,st(6)
  40cc22:	xchg   BYTE PTR [ebx],al
  40cc24:	inc    esp
  40cc25:	sub    edx,edi
  40cc27:	nop
  40cc28:	fcmovnb st,st(3)
  40cc2a:	sub    DWORD PTR [ebx-0x73],eax
  40cc2d:	out    0x74,al
  40cc2f:	das    
  40cc30:	fidiv  DWORD PTR [ebx]
  40cc32:	pop    ebp
  40cc33:	lock dec eax
  40cc35:	push   ebp
  40cc36:	mov    ebp,0xe54d7c44
  40cc3b:	fsub   DWORD PTR [edi+0x470eedc0]
  40cc41:	rol    BYTE PTR [esi+0x5d],cl
  40cc44:	cdq    
  40cc45:	mov    ?,WORD PTR [eax-0x2785f321]
  40cc4b:	push   eax
  40cc4c:	stos   BYTE PTR es:[edi],al
  40cc4d:	push   cs
  40cc4e:	scas   al,BYTE PTR es:[edi]
  40cc4f:	(bad)  
  40cc50:	rcr    BYTE PTR [esi+0x60],0x40
  40cc54:	push   0x5c
  40cc56:	xor    esp,ebx
  40cc58:	test   al,0x96
  40cc5a:	fdiv   DWORD PTR [ecx+0x6ee838bc]
  40cc60:	nop
  40cc61:	(bad)  [edi+0x19acb568]
  40cc67:	popf   
  40cc68:	jg     0x40cc72
  40cc6a:	lods   al,BYTE PTR ds:[esi]
  40cc6b:	xor    BYTE PTR [ebx],dh
  40cc6d:	mov    DWORD PTR [ebx],ecx
  40cc6f:	mov    cl,0x31
  40cc71:	pop    eax
  40cc72:	or     cl,ah
  40cc74:	test   DWORD PTR [eax-0x55],0x52a3d387
  40cc7b:	push   cs
  40cc7c:	sub    ebx,DWORD PTR [ebp-0x70]
  40cc7f:	scas   al,BYTE PTR es:[edi]
  40cc80:	mov    edx,0x117c8a53
  40cc85:	dec    ebx
  40cc86:	pop    ebp
  40cc87:	xchg   edi,eax
  40cc88:	inc    ebx
  40cc89:	cdq    
  40cc8a:	lods   eax,DWORD PTR ds:[esi]
  40cc8b:	push   0x8b156716
  40cc90:	in     eax,0x19
  40cc92:	cmp    BYTE PTR [eax-0x23551fbd],0xb1
  40cc99:	mov    ebp,0x831e3df
  40cc9e:	lahf   
  40cc9f:	ds dec edx
  40cca1:	les    ecx,FWORD PTR [edi-0x2b]
  40cca4:	xor    al,0xce
  40cca6:	outs   dx,DWORD PTR ds:[esi]
  40cca7:	std    
  40cca8:	in     eax,0xa
  40ccaa:	push   edx
  40ccab:	pop    esi
  40ccac:	enter  0x81a3,0xd5
  40ccb0:	icebp  
  40ccb1:	cs mov esi,0x24000c12
  40ccb7:	(bad)  
  40ccb8:	mov    dl,0xa8
  40ccba:	mov    ebx,0x543f3aae
  40ccbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc0:	sbb    eax,0xecc81278
  40ccc5:	pop    esp
  40ccc6:	mov    cl,0x18
  40ccc8:	mov    al,0xb3
  40ccca:	jmp    0x853d3fa5
  40cccf:	inc    eax
  40ccd0:	cmp    eax,0x57ab6306
  40ccd5:	inc    ebx
  40ccd6:	ins    DWORD PTR es:[edi],dx
  40ccd7:	fs fwait
  40ccd9:	retf   
  40ccda:	outs   dx,BYTE PTR ds:[esi]
  40ccdb:	out    0xc0,al
  40ccdd:	add    ch,BYTE PTR fs:[esi]
  40cce0:	push   0xffffffe7
  40cce2:	adc    esi,edi
  40cce4:	fidivr DWORD PTR [ebp+ebx*8-0x2ccc0e15]
  40cceb:	adc    DWORD PTR [edx+0x2cc0130e],esi
  40ccf1:	int3   
  40ccf2:	ds push eax
  40ccf4:	mov    dl,ch
  40ccf6:	xor    DWORD PTR [ebp-0x48],edi
  40ccf9:	daa    
  40ccfa:	(bad)  
  40ccfb:	jp     0x40ccec
  40ccfd:	dec    esi
  40ccfe:	adc    DWORD PTR [eax-0x17],ebp
  40cd01:	fadd   DWORD PTR [esi+0x5]
  40cd04:	fcmovnb st,st(5)
  40cd06:	fnstenv [edi+0x50e80835]
  40cd0c:	arpl   WORD PTR ds:0xc8a92342,si
  40cd12:	xor    edx,DWORD PTR [ebx+0x5a03024b]
  40cd18:	push   cs
  40cd19:	add    BYTE PTR [edi+0x3762809e],bh
  40cd1f:	dec    ebp
  40cd20:	mov    ecx,0x1bd4bbca
  40cd25:	dec    esi
  40cd26:	int    0x4a
  40cd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd29:	xchg   edi,eax
  40cd2a:	jns    0x40cd6d
  40cd2c:	mov    DWORD PTR es:[edx],eax
  40cd2f:	jo     0x40cd1d
  40cd31:	lods   al,BYTE PTR ds:[esi]
  40cd32:	scas   eax,DWORD PTR es:[edi]
  40cd33:	sub    cl,al
  40cd35:	lods   eax,DWORD PTR ds:[esi]
  40cd36:	jge    0x40cd75
  40cd38:	daa    
  40cd39:	add    edi,DWORD PTR [edx]
  40cd3b:	fistp  DWORD PTR [edx]
  40cd3d:	in     eax,dx
  40cd3e:	or     esi,DWORD PTR [eax+esi*2]
  40cd41:	das    
  40cd42:	ret    
  40cd43:	cld    
  40cd44:	jmp    0x40cd73
  40cd46:	(bad)  
  40cd47:	xor    edi,eax
  40cd49:	data16 lahf 
  40cd4b:	fdiv   st,st(4)
  40cd4d:	pop    ds
  40cd4e:	adc    bh,BYTE PTR [ebx+0xcb9eb96]
  40cd54:	or     BYTE PTR [eax-0x26],dh
  40cd57:	fdiv   st(5),st
  40cd59:	bound  esi,QWORD PTR [eax-0x7ba55739]
  40cd5f:	in     eax,dx
  40cd60:	sub    DWORD PTR [esi+esi*8-0x12ecb7e3],esi
  40cd67:	outs   dx,BYTE PTR ds:[esi]
  40cd68:	in     al,dx
  40cd69:	jl     0x40cd26
  40cd6b:	cdq    
  40cd6c:	xor    eax,ebx
  40cd6e:	push   edi
  40cd6f:	xchg   ebp,eax
  40cd70:	sbb    DWORD PTR ds:0xe297655c,0x4af3058b
  40cd7a:	daa    
  40cd7b:	push   edx
  40cd7c:	push   cs
  40cd7d:	bound  eax,QWORD PTR [edi+ebp*8+0x27056564]
  40cd84:	xor    al,0x58
  40cd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd87:	add    eax,0xbdf0290b
  40cd8c:	in     eax,dx
  40cd8d:	cld    
  40cd8e:	pop    esp
  40cd8f:	add    BYTE PTR [ebx],bl
  40cd91:	lock daa 
  40cd93:	fidivr WORD PTR [esp+ecx*8]
  40cd96:	fmul   DWORD PTR [ebx-0x18]
  40cd99:	inc    ebp
  40cd9a:	test   ch,0x17
  40cd9d:	cmp    BYTE PTR ds:0x2e11fd0a,cl
  40cda3:	leave  
  40cda4:	test   DWORD PTR [ebp-0x362119e5],edx
  40cdaa:	int    0xa3
  40cdac:	into   
  40cdad:	idiv   BYTE PTR [esi-0xcf9d03f]
  40cdb3:	push   ebp
  40cdb5:	xchg   ebp,eax
  40cdb6:	push   eax
  40cdb7:	das    
  40cdb8:	int3   
  40cdb9:	jae    0x40cdcf
  40cdbb:	les    ecx,FWORD PTR [esi+ebx*8-0x3cbc1d12]
  40cdc2:	mov    dl,0x13
  40cdc4:	in     eax,dx
  40cdc5:	cld    
  40cdc6:	or     ebp,DWORD PTR [edx-0x4ab95ec2]
  40cdcc:	hlt    
  40cdcd:	leave  
  40cdce:	jecxz  0x40cd5a
  40cdd0:	pushf  
  40cdd1:	daa    
  40cdd2:	das    
  40cdd3:	cmp    BYTE PTR [ebx-0x1c],bh
  40cdd6:	pop    esp
  40cdd7:	mov    dl,0x5d
  40cdd9:	dec    eax
  40cdda:	mov    al,ds:0xa2a8391d
  40cddf:	sar    BYTE PTR [edi+0x6b596013],cl
  40cde5:	hlt    
  40cde6:	add    ecx,DWORD PTR [esi]
  40cde8:	and    BYTE PTR [esi],dh
  40cdea:	retf   0xbacf
  40cded:	loopne 0x40ce68
  40cdef:	(bad)  [ebx-0x955bfcd]
  40cdf5:	retf   
  40cdf6:	(bad)  
  40cdf7:	mov    eax,0x98b22fc8
  40cdfc:	inc    ebx
  40cdfd:	pop    es
  40cdfe:	sti    
  40cdff:	lock adc edi,DWORD PTR [edi-0x51]
  40ce03:	push   ebp
  40ce04:	sub    eax,0x32cc869e
  40ce09:	jmp    0xab9f:0xac9b8857
  40ce10:	fstp   DWORD PTR ds:0x2b606115
  40ce16:	xor    edx,eax
  40ce18:	ins    DWORD PTR es:[edi],dx
  40ce19:	rol    DWORD PTR [edi+0x66],1
  40ce1c:	fsub   DWORD PTR [edi-0x48]
  40ce1f:	inc    eax
  40ce20:	xchg   esp,eax
  40ce21:	or     eax,0xbadcd409
  40ce26:	add    DWORD PTR [esi+0x4ca786ca],ebp
  40ce2c:	cmp    bl,BYTE PTR [esp+ebp*2]
  40ce2f:	scas   al,BYTE PTR es:[edi]
  40ce30:	ror    ebp,cl
  40ce32:	xchg   ecx,eax
  40ce33:	aad    0xd4
  40ce35:	bound  eax,QWORD PTR [ebx]
  40ce37:	push   0xffffffd7
  40ce39:	xor    BYTE PTR [edi+0x1a3295a],ah
  40ce3f:	(bad)
  40ce43:	or     eax,0x48549b6b
  40ce48:	ja     0x40ce80
  40ce4a:	inc    eax
  40ce4b:	lock pop edx
  40ce4d:	inc    edi
  40ce4e:	mov    ds:0x4b13b18d,eax
  40ce53:	stos   DWORD PTR es:[edi],eax
  40ce54:	or     BYTE PTR [edx],bl
  40ce56:	bnd jb 0x40ce80
  40ce59:	(bad)  
  40ce5a:	adc    eax,0x35ec94b1
  40ce5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce60:	pop    edx
  40ce61:	cmp    DWORD PTR [edx],esi
  40ce63:	inc    esp
  40ce64:	fnstsw WORD PTR gs:[edx]
  40ce67:	popf   
  40ce68:	fcmovne st,st(0)
  40ce6a:	inc    edi
  40ce6b:	jg     0x40ce2b
  40ce6d:	daa    
  40ce6e:	push   0x84b57aaf
  40ce73:	add    ah,BYTE PTR [edx+0x5b]
  40ce76:	aaa    
  40ce77:	xchg   edi,eax
  40ce78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce79:	popf   
  40ce7a:	cs pop ebp
  40ce7c:	cmp    ebp,DWORD PTR [ebx+0x2b]
  40ce7f:	mov    edx,0xddc23cca
  40ce84:	xor    DWORD PTR [edi-0x68],edi
  40ce87:	sub    BYTE PTR [ecx+0x7b5e74a4],ah
  40ce8d:	jb     0x40ce3c
  40ce8f:	std    
  40ce90:	scas   al,BYTE PTR es:[edi]
  40ce91:	xor    esi,DWORD PTR [eax]
  40ce93:	fsubr  QWORD PTR ds:0x7e634c66
  40ce99:	dec    edi
  40ce9a:	mov    ds:0x182a78c,al
  40ce9f:	shl    BYTE PTR [edx],0x95
  40cea2:	sbb    BYTE PTR [edx+0x6f],bl
  40cea5:	push   ebp
  40cea6:	das    
  40cea7:	fnsave [esi+0x15]
  40ceaa:	adc    dl,BYTE PTR [ebx+0x55217ffc]
  40ceb0:	stos   DWORD PTR es:[edi],eax
  40ceb1:	sub    al,BYTE PTR [ecx+ecx*2]
  40ceb4:	push   ecx
  40ceb5:	or     BYTE PTR [ecx],bl
  40ceb7:	mov    esi,0xaaeb1d64
  40cebc:	jge    0x40ce60
  40cebe:	sub    al,0x67
  40cec0:	scas   al,BYTE PTR es:[edi]
  40cec1:	lock xchg dl,bl
  40cec4:	add    bl,BYTE PTR [eax-0x78335f5b]
  40ceca:	add    BYTE PTR [edx],bh
  40cecc:	and    DWORD PTR [edi],edi
  40cece:	xchg   edi,eax
  40cecf:	jecxz  0x40cf14
  40ced1:	daa    
  40ced2:	add    ch,BYTE PTR [ecx-0x2a]
  40ced5:	ds or  eax,0xb15f33c8
  40cedb:	dec    ebp
  40cedc:	int    0x60
  40cede:	fcom   st(4)
  40cee0:	and    BYTE PTR [ebp-0x177bf9cf],bh
  40cee6:	test   BYTE PTR [ecx-0x7c],cl
  40cee9:	sbb    eax,0x1a5b5ed
  40ceee:	or     bh,BYTE PTR [ebp-0x30f33be5]
  40cef4:	repz (bad) 
  40cef6:	mov    bh,0x4d
  40cef8:	in     al,0x2b
  40cefa:	mov    ecx,0x2f344745
  40ceff:	(bad)  
  40cf00:	fsub   DWORD PTR [ebp+esi*8+0x27]
  40cf04:	enter  0xa7c0,0x5f
  40cf08:	out    0xb9,eax
  40cf0a:	mov    ?,WORD PTR [ebp+0x4f]
  40cf0d:	push   ebp
  40cf0e:	mov    ds:0x30440acd,al
  40cf13:	ror    BYTE PTR [esp+edi*8-0x56],1
  40cf17:	dec    ebp
  40cf18:	les    esi,FWORD PTR [ebp+0x24fe6005]
  40cf1e:	pop    ebx
  40cf1f:	sbb    ebp,ebp
  40cf21:	push   edi
  40cf22:	test   al,0x85
  40cf24:	push   0xffffffde
  40cf26:	xchg   esp,eax
  40cf27:	fdivr  st,st(1)
  40cf29:	mov    ebx,0xd2a1377
  40cf2e:	in     eax,0x16
  40cf30:	cli    
  40cf31:	stos   DWORD PTR es:[edi],eax
  40cf32:	test   esi,edx
  40cf34:	pop    es
  40cf35:	sbb    BYTE PTR [edi-0x24],cl
  40cf38:	js     0x40cebd
  40cf3a:	jl     0x40cf52
  40cf3c:	bound  eax,QWORD PTR [ebx-0x48f5beb8]
  40cf42:	xchg   esp,eax
  40cf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf44:	aas    
  40cf45:	mov    dh,0xe3
  40cf47:	sbb    BYTE PTR [ecx],0x51
  40cf4a:	add    ebp,DWORD PTR [edx+edi*1+0x32e231d7]
  40cf51:	leave  
  40cf52:	stos   BYTE PTR es:[edi],al
  40cf53:	das    
  40cf54:	push   ss
  40cf55:	sar    BYTE PTR [eax],0xdc
  40cf58:	sbb    BYTE PTR [ecx+0x377e6f1e],0x96
  40cf5f:	or     eax,0x853244ae
  40cf64:	nop
  40cf65:	or     al,0xc1
  40cf67:	xchg   esi,eax
  40cf68:	outs   dx,BYTE PTR ds:[esi]
  40cf69:	cmp    eax,0x74c2c047
  40cf6e:	arpl   WORD PTR [edx],ax
  40cf70:	xor    eax,0xd4e3abc3
  40cf75:	sub    BYTE PTR [ebx+0x65],ah
  40cf78:	push   0x33d10365
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	scas   al,BYTE PTR es:[edi]
  40cfb1:	out    dx,eax
  40cfb2:	add    DWORD PTR ds:0x7c7ce265,ecx
  40cfb8:	jmp    0x40d019
  40cfba:	jl     0x40d038
  40cfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfbd:	pop    edi
  40cfbe:	test   BYTE PTR [ebx],dl
  40cfc0:	clc    
  40cfc1:	loope  0x40cfb5
  40cfc3:	dec    edi
  40cfc4:	lock ins DWORD PTR es:[edi],dx
  40cfc6:	(bad)  [ebx+ebx*8]
  40cfc9:	fmul   DWORD PTR ds:0xdbfb3879
  40cfcf:	push   edx
  40cfd0:	pop    ss
  40cfd1:	mov    esp,0x22a41968
  40cfd6:	xchg   ebx,eax
  40cfd7:	ins    BYTE PTR es:[edi],dx
  40cfd8:	ds cwde 
  40cfda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfdb:	les    esp,FWORD PTR ds:[ecx+0x3b]
  40cfdf:	xchg   edi,eax
  40cfe0:	setnp  dl
  40cfe3:	sub    ebx,DWORD PTR [edx+ebp*4]
  40cfe6:	mov    dh,BYTE PTR [edi]
  40cfe8:	mov    ebx,0x828aa1d
  40cfed:	lds    edi,FWORD PTR [ebp+0x2951b847]
  40cff3:	(bad)  
  40cff4:	jl     0x40d067
  40cff6:	fld    DWORD PTR [esp+edx*1]
  40cff9:	cmp    ecx,DWORD PTR [ecx+0x12c9d6cd]
  40cfff:	call   0x14294cc3
  40d004:	cs sbb eax,0xd9e8b652
  40d00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d00b:	cld    
  40d00c:	jae    0x40d05d
  40d00e:	xchg   DWORD PTR [ecx-0x6a],ecx
  40d011:	cmp    eax,0x21b2502d
  40d016:	aam    0x3
  40d018:	mov    al,0xc0
  40d01a:	cmp    DWORD PTR [edx+eax*1],esp
  40d01d:	and    bl,ch
  40d01f:	sub    ch,dh
  40d021:	fld    TBYTE PTR [ecx+0x5f44c778]
  40d027:	aad    0xdc
  40d029:	loop   0x40d083
  40d02b:	inc    esp
  40d02c:	in     eax,0xd2
  40d02e:	push   0xffffffbe
  40d030:	push   es
  40d031:	pusha  
  40d032:	and    eax,0xab2c2e36
  40d037:	dec    esp
  40d038:	or     ch,BYTE PTR [ecx-0x6bd778e]
  40d03e:	retf   0x66a0
  40d041:	inc    ebp
  40d042:	jmp    0x40d098
  40d044:	dec    ebp
  40d045:	(bad)  
  40d046:	mov    dl,0xcc
  40d048:	gs cmp ch,cl
  40d04b:	aas    
  40d04c:	cmp    edx,DWORD PTR [edi]
  40d04e:	ffreep st(7)
  40d050:	sbb    eax,0x148fa861
  40d055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d056:	add    eax,0xc0fedb2f
  40d05b:	push   ss
  40d05c:	lock xchg esp,eax
  40d05e:	push   ecx
  40d05f:	fnsave [eax-0x3d]
  40d062:	cmp    bl,al
  40d064:	cld    
  40d065:	xchg   edx,eax
  40d066:	xor    bl,BYTE PTR ds:0x4258b64
  40d06c:	rcl    BYTE PTR [ebp-0x5506dac9],cl
  40d072:	push   ebp
  40d073:	push   esi
  40d074:	xlat   BYTE PTR ds:[ebx]
  40d075:	outs   dx,BYTE PTR ds:[esi]
  40d076:	cwde   
  40d077:	push   esp
  40d078:	aaa    
  40d079:	sbb    DWORD PTR [esi-0x6e89fb1e],esi
  40d07f:	push   ecx
  40d080:	rcr    BYTE PTR [ebx-0x1e],0x21
  40d084:	dec    esp
  40d085:	std    
  40d086:	push   esi
  40d087:	sbb    BYTE PTR [ebx+0x26],dh
  40d08a:	and    BYTE PTR [esp+ecx*8],ch
  40d08d:	ds daa 
  40d08f:	cvttps2pi mm2,QWORD PTR [esi+0x49]
  40d093:	arpl   WORD PTR [eax+0x28977d0e],ax
  40d099:	jecxz  0x40d052
  40d09b:	jmp    FWORD PTR [esi]
  40d09d:	inc    ecx
  40d09e:	cs enter 0x452e,0x47
  40d0a3:	out    dx,al
  40d0a4:	adc    al,dl
  40d0a6:	lock ds out 0x35,eax
  40d0aa:	jo     0x40d05b
  40d0ac:	xor    ecx,DWORD PTR [ecx-0x729aacee]
  40d0b2:	rcr    BYTE PTR [ebx+ebx*8-0x20],1
  40d0b6:	mov    edx,0x2eb950cd
  40d0bb:	in     eax,0x5d
  40d0bd:	nop
  40d0be:	xlat   BYTE PTR ss:[ebx]
  40d0c0:	fs popf 
  40d0c2:	sbb    BYTE PTR [ecx+0x6137bcc3],ch
  40d0c8:	stos   BYTE PTR es:[edi],al
  40d0c9:	inc    ebx
  40d0ca:	inc    edi
  40d0cb:	outs   dx,BYTE PTR ds:[esi]
  40d0cc:	inc    ebp
  40d0cd:	and    eax,0x95a818e
  40d0d2:	cmp    dh,BYTE PTR ds:0x3fd43b44
  40d0d8:	in     eax,0xea
  40d0da:	into   
  40d0db:	pop    ecx
  40d0dc:	sahf   
  40d0dd:	sbb    bh,ch
  40d0df:	ja     0x40d0d2
  40d0e1:	(bad)  
  40d0e2:	cmp    BYTE PTR [ebp-0x28],ch
  40d0e5:	xor    edi,DWORD PTR [esp+esi*1+0x5dcae190]
  40d0ec:	push   0x3a
  40d0ee:	loope  0x40d169
  40d0f0:	sar    DWORD PTR ds:0x4ce149dc,cl
  40d0f6:	mov    esp,0x890c772a
  40d0fb:	inc    eax
  40d0fc:	or     BYTE PTR [edx+0x43b70309],0x8f
  40d103:	cmp    eax,0xa9b0ede7
  40d108:	daa    
  40d109:	or     ecx,DWORD PTR [edx-0x6e]
  40d10c:	ror    ecx,cl
  40d10e:	inc    esi
  40d10f:	stc    
  40d110:	mov    ch,0xe1
  40d112:	jno    0x40d0e6
  40d114:	ins    BYTE PTR es:[edi],dx
  40d115:	in     al,0x3c
  40d117:	test   eax,0x73fdc4b6
  40d11c:	fnstsw WORD PTR [edi-0x7c]
  40d11f:	adc    eax,0x84c81ba8
  40d124:	mov    ds:0x373e7bd,eax
  40d129:	outs   dx,DWORD PTR ds:[esi]
  40d12a:	pushf  
  40d12b:	dec    edx
  40d12c:	mov    esp,?
  40d12e:	loopne 0x40d160
  40d130:	(bad)  
  40d131:	in     eax,dx
  40d132:	popa   
  40d133:	cli    
  40d134:	pop    es
  40d135:	xor    edx,eax
  40d137:	test   DWORD PTR [esp+ebx*4-0x32],esp
  40d13b:	in     eax,dx
  40d13c:	hlt    
  40d13d:	or     eax,0xd1d9ffa9
  40d142:	dec    ebx
  40d143:	jnp    0x40d162
  40d145:	xchg   ebp,eax
  40d146:	(bad)  
  40d147:	aaa    
  40d148:	dec    esp
  40d149:	ins    DWORD PTR es:[edi],dx
  40d14a:	inc    eax
  40d14b:	mov    WORD PTR [ecx-0x4a],gs
  40d14e:	mov    cl,0xf3
  40d150:	in     eax,dx
  40d151:	jne    0x40d176
  40d153:	sbb    eax,edx
  40d155:	mov    eax,0x1000aa1d
  40d15a:	loope  0x40d132
  40d15c:	push   ebx
  40d15d:	cmp    eax,0x7e9d0f54
  40d162:	or     ebx,DWORD PTR [edx]
  40d164:	xor    BYTE PTR [esi],dh
  40d166:	cmp    eax,0x582132d2
  40d16b:	repz and ch,BYTE PTR [edx+0x2cd2b66f]
  40d172:	jle    0x40d1a5
  40d174:	sub    eax,DWORD PTR [esi-0x55]
  40d177:	or     bh,dh
  40d179:	pushf  
  40d17a:	add    edi,DWORD PTR [edx]
  40d17c:	jne    0x40d1bd
  40d17e:	into   
  40d17f:	sub    BYTE PTR [edi],dl
  40d181:	(bad)  
  40d182:	push   0xffffff8c
  40d184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d185:	imul   ebx,DWORD PTR [esi+0x2437898b],0x0
  40d18c:	xchg   esp,eax
  40d18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d18e:	xchg   esi,eax
  40d18f:	das    
  40d190:	jb     0x40d210
  40d192:	aam    0x2e
  40d194:	ja     0x40d1bf
  40d196:	xchg   esp,eax
  40d197:	sub    DWORD PTR [edx],ebx
  40d199:	stos   BYTE PTR es:[edi],al
  40d19a:	out    dx,eax
  40d19b:	mov    cl,0xd1
  40d19d:	adc    eax,0x91387412
  40d1a2:	adc    DWORD PTR [eax+0x628923ca],edx
  40d1a8:	and    BYTE PTR [eax+edx*2],ch
  40d1ab:	mov    ebp,0xaacdf9a6
  40d1b0:	jle    0x1ca8d78
  40d1b6:	aaa    
  40d1b7:	jge    0x40d146
  40d1b9:	push   edi
  40d1ba:	(bad)  
  40d1bc:	pop    ebp
  40d1bd:	mov    dh,0x3b
  40d1bf:	mov    eax,0x545e7d49
  40d1c4:	push   ss
  40d1c5:	mov    WORD PTR [esi+ebx*1+0x430093b1],fs
  40d1cc:	pop    es
  40d1cd:	xor    DWORD PTR [ebp+0x4e],esi
  40d1d0:	xchg   esi,eax
  40d1d1:	shl    BYTE PTR [eax+0x4590afaa],1
  40d1d7:	jb     0x40d18f
  40d1d9:	xchg   ebp,esi
  40d1db:	ins    DWORD PTR es:[edi],dx
  40d1dc:	mov    ds:0xf65096f1,eax
  40d1e1:	shl    BYTE PTR [ecx],1
  40d1e3:	add    BYTE PTR [esi-0x4e452980],dl
  40d1e9:	lahf   
  40d1ea:	ret    
  40d1eb:	xchg   ecx,esp
  40d1ed:	pop    ds
  40d1ee:	pop    ebp
  40d1ef:	dec    ebx
  40d1f0:	push   ebx
  40d1f1:	jmp    DWORD PTR [ebp+0x5c471891]
  40d1f7:	(bad)  
  40d1f8:	pushf  
  40d1f9:	rcl    DWORD PTR [edi+0x3b],cl
  40d1fc:	in     al,dx
  40d1fd:	add    eax,0xa53e40df
  40d202:	pop    ebp
  40d203:	js     0x40d1e3
  40d205:	popf   
  40d206:	jns    0x40d260
  40d208:	push   eax
  40d209:	or     eax,0x42f44925
  40d20e:	mov    ds,WORD PTR [eax-0x6b]
  40d211:	cmp    al,0x47
  40d213:	pop    es
  40d214:	fsub   QWORD PTR [eax+0x2a0b72ab]
  40d21a:	inc    esp
  40d21b:	sub    al,bh
  40d21d:	mov    al,BYTE PTR [esi-0x65]
  40d220:	xchg   esp,eax
  40d221:	ss inc ebp
  40d223:	int3   
  40d224:	repnz dec ecx
  40d226:	inc    esp
  40d227:	mov    eax,ds:0xdbcc77b9
  40d22c:	repnz cmp dl,BYTE PTR [eax+0x1f]
  40d230:	add    ebx,ebx
  40d232:	mov    DWORD PTR [esi-0x62],edi
  40d235:	fistp  DWORD PTR [ebp+0x59]
  40d238:	dec    eax
  40d239:	dec    ecx
  40d23a:	cwde   
  40d23b:	push   ecx
  40d23c:	or     edi,DWORD PTR [ebx-0x5a]
  40d23f:	add    eax,0xc0f88ce0
  40d244:	cld    
  40d245:	or     DWORD PTR [eax-0x4d],ebx
  40d248:	jnp    0x40d1e4
  40d24a:	jecxz  0x40d223
  40d24c:	lods   eax,DWORD PTR ds:[esi]
  40d24d:	xchg   DWORD PTR [eax],edx
  40d24f:	mov    edi,0x653dde6b
  40d254:	ret    
  40d255:	mov    esi,0xff7cd681
  40d25a:	js     0x40d1ff
  40d25c:	push   eax
  40d25d:	pusha  
  40d25e:	mov    al,ds:0xb18a150
  40d263:	jmp    0x40d2a3
  40d265:	into   
  40d266:	and    al,0xd5
  40d268:	inc    eax
  40d269:	cmc    
  40d26a:	sub    al,0x11
  40d26c:	push   ecx
  40d26d:	sbb    eax,eax
  40d26f:	(bad)  
  40d270:	in     al,0x63
  40d272:	xchg   edx,eax
  40d273:	(bad)  
  40d274:	jge    0x40d285
  40d276:	jge    0x40d228
  40d278:	aad    0xde
  40d27a:	mov    eax,0x51baab3d
  40d27f:	scas   al,BYTE PTR es:[edi]
  40d280:	repz mov cl,0xb7
  40d283:	or     al,0xc6
  40d285:	std    
  40d286:	loop   0x40d2f4
  40d288:	pop    ebp
  40d289:	fisub  DWORD PTR ds:0x71659c81
  40d28f:	in     al,dx
  40d290:	pop    esi
  40d291:	push   cs
  40d292:	(bad)  
  40d293:	sub    bh,dl
  40d295:	pop    edi
  40d296:	iret   
  40d297:	mov    al,ds:0x6a72c7e5
  40d29c:	(bad)  
  40d29d:	(bad)  
  40d29e:	retf   
  40d29f:	jo     0x40d221
  40d2a1:	mov    WORD PTR [eax],?
  40d2a3:	in     eax,dx
  40d2a4:	out    dx,eax
  40d2a5:	inc    ebp
  40d2a6:	lahf   
  40d2a7:	xor    DWORD PTR [ebx+0x5176ca0a],esp
  40d2ad:	sbb    al,0x4a
  40d2af:	pop    eax
  40d2b0:	test   BYTE PTR [edi+eiz*1],dh
  40d2b3:	leave  
  40d2b4:	ins    BYTE PTR es:[edi],dx
  40d2b5:	sbb    eax,0x2eb35ef3
  40d2ba:	pop    ecx
  40d2bb:	ss imul esp,esi,0x1c09c0b3
  40d2c2:	mov    ds:0xc0967943,al
  40d2c7:	pushf  
  40d2c8:	(bad)  
  40d2c9:	adc    al,BYTE PTR [edx+0x57ed7811]
  40d2cf:	adc    al,BYTE PTR [esi+0x47b10b5d]
  40d2d5:	lods   eax,DWORD PTR es:[esi]
  40d2d7:	xor    ebx,DWORD PTR [eax+0x6cc3aec4]
  40d2dd:	cli    
  40d2de:	lds    ecx,FWORD PTR [edx+0x15e6d401]
  40d2e4:	stos   BYTE PTR es:[edi],al
  40d2e5:	test   eax,0xea78b547
  40d2ea:	outs   dx,DWORD PTR ds:[esi]
  40d2eb:	adc    eax,0x21e6c352
  40d2f0:	rcl    DWORD PTR ds:0x91243a92,cl
  40d2f6:	(bad)  
  40d2f7:	cmp    eax,0xe85f3f78
  40d2fc:	mov    al,0x8a
  40d2fe:	adc    BYTE PTR [ebx],al
  40d300:	pop    eax
  40d301:	retf   0xc0e
  40d304:	pop    ebp
  40d305:	mov    dl,BYTE PTR [esi+0x19325564]
  40d30b:	ss xchg esi,eax
  40d30d:	(bad)  
  40d30e:	xchg   esp,eax
  40d30f:	adc    esp,DWORD PTR [ecx-0x6a]
  40d312:	push   cs
  40d313:	sub    al,0xaf
  40d315:	enter  0x114a,0xd1
  40d319:	call   0x64d6cd2f
  40d31e:	in     eax,dx
  40d31f:	retf   
  40d320:	test   ecx,esp
  40d322:	and    dl,BYTE PTR [ebx+edx*8]
  40d325:	loopne 0x40d341
  40d327:	iret   
  40d328:	adc    al,0xe5
  40d32a:	ss scas al,BYTE PTR es:[edi]
  40d32c:	test   ch,al
  40d32e:	(bad)  
  40d32f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d331:	xor    BYTE PTR [edi],0x2b
  40d334:	lahf   
  40d335:	das    
  40d336:	js     0x40d392
  40d338:	test   BYTE PTR ds:0x216f449c,al
  40d33e:	xchg   BYTE PTR [eax],bh
  40d340:	arpl   WORD PTR [ecx],si
  40d342:	push   0xffffffbc
  40d344:	dec    edx
  40d345:	int3   
  40d346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d347:	xchg   ebx,eax
  40d348:	add    eax,0xd222fae7
  40d34d:	jns    0x40d335
  40d34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d350:	xchg   edi,eax
  40d351:	pop    edx
  40d352:	in     al,dx
  40d353:	xchg   BYTE PTR [ecx-0x5c88e4c9],ch
  40d359:	xor    al,0x85
  40d35b:	mov    edi,0x1c9ea35c
  40d360:	dec    edx
  40d361:	push   esi
  40d362:	sub    cl,dl
  40d364:	pop    edx
  40d365:	lods   al,BYTE PTR ds:[esi]
  40d366:	push   cs
  40d367:	pop    esi
  40d368:	in     eax,dx
  40d369:	dec    esp
  40d36a:	inc    esi
  40d36b:	(bad)  [ebx]
  40d36d:	inc    edi
  40d36e:	stos   DWORD PTR es:[edi],eax
  40d36f:	shl    ch,cl
  40d371:	mov    ds:0xeafb31a3,eax
  40d376:	sbb    dl,ah
  40d378:	adc    eax,0x609f66d2
  40d37d:	jnp    0x40d31d
  40d37f:	sub    BYTE PTR [edx+eiz*1-0xf],bl
  40d383:	or     esp,DWORD PTR [esp+edx*1-0x7da9f56c]
  40d38a:	sbb    DWORD PTR [ecx],ebx
  40d38c:	xor    al,0x81
  40d38e:	sub    DWORD PTR [ebx-0x1cb1dd20],ecx
  40d394:	dec    edi
  40d395:	ss ret 
  40d397:	ret    
  40d398:	in     al,0x43
  40d39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39b:	mov    ds:0xf54b2d8a,al
  40d3a0:	ficom  WORD PTR [edi-0x6]
  40d3a3:	mov    BYTE PTR [ecx],ah
  40d3a5:	repnz cmp eax,0x22517012
  40d3ab:	jo     0x40d348
  40d3ad:	push   cs
  40d3ae:	dec    si
  40d3b0:	cmp    BYTE PTR [ecx+ebx*8],0xb8
  40d3b4:	rcpps  xmm1,xmm0
  40d3b7:	jge    0x40d3c8
  40d3b9:	push   edi
  40d3ba:	call   0x2e6c:0x5783e58
  40d3c1:	adc    al,0x4e
  40d3c3:	cmp    esp,DWORD PTR [ecx]
  40d3c5:	and    al,0xb2
  40d3c7:	scas   al,BYTE PTR es:[edi]
  40d3c8:	cmp    DWORD PTR [eax-0x37dd4fec],eax
  40d3ce:	scas   al,BYTE PTR es:[edi]
  40d3cf:	and    eax,0x51f203fb
  40d3d4:	std    
  40d3d5:	je     0x40d3d8
  40d3d7:	add    eax,0xa91a9b07
  40d3dc:	pop    edx
  40d3dd:	adc    esi,ecx
  40d3df:	imul   ebp,DWORD PTR [ebx-0x14],0xcb571ee5
  40d3e6:	or     al,0x8f
  40d3e8:	or     dh,BYTE PTR [edi-0x65]
  40d3eb:	sub    DWORD PTR [eax-0x63],eax
  40d3ee:	mov    eax,0x17c21609
  40d3f3:	sbb    DWORD PTR [edi+0x32ff06f6],ecx
  40d3f9:	fadd   QWORD PTR [eax]
  40d3fb:	add    ecx,DWORD PTR [eax+0x2fe28b25]
  40d401:	cmp    esi,DWORD PTR [esi+edi*1+0x32]
  40d405:	scas   al,BYTE PTR es:[edi]
  40d406:	enter  0xe440,0x75
  40d40a:	mov    WORD PTR [edi-0x779e0431],?
  40d410:	mov    ecx,0x576ab57c
  40d415:	aas    
  40d416:	lea    edx,[edi+0x704246ff]
  40d41c:	(bad)  
  40d41e:	inc    DWORD PTR [edx+ebp*2-0x51e61f12]
  40d425:	nop
  40d426:	shl    DWORD PTR [ebp-0x2ee8e8a6],1
  40d42c:	lahf   
  40d42d:	sbb    DWORD PTR [edx-0x5e0ef86f],esp
  40d433:	push   edi
  40d434:	mov    bl,0x2d
  40d436:	ja     0x40d448
  40d438:	cmp    al,0x62
  40d43a:	mov    esi,0x3e802fbb
  40d43f:	vpmullw ymm6,ymm1,YMMWORD PTR [ecx+edx*4-0x6563612d]
  40d448:	bound  esi,QWORD PTR [edx+0x7359d4be]
  40d44e:	je     0x40d4a6
  40d450:	sar    al,cl
  40d452:	push   esp
  40d453:	(bad)  
  40d454:	pusha  
  40d455:	push   ebx
  40d456:	xchg   ebp,esp
  40d458:	inc    esi
  40d459:	in     eax,dx
  40d45a:	and    eax,0xaa434af2
  40d45f:	xor    BYTE PTR [edx+0x25],0x89
  40d463:	inc    ebp
  40d464:	cmp    esp,DWORD PTR [ecx+edi*1+0x65cfcb2b]
  40d46b:	out    dx,eax
  40d46c:	pop    ecx
  40d46d:	into   
  40d46e:	mov    esi,0x9560498e
  40d473:	xchg   DWORD PTR [edi-0x6dfdb6e7],ecx
  40d479:	xchg   ebx,eax
  40d47a:	pop    esp
  40d47b:	stos   BYTE PTR es:[edi],al
  40d47c:	xchg   BYTE PTR [ecx+0x4f],bh
  40d47f:	cmp    eax,0xba25c436
  40d484:	inc    esi
  40d485:	jno    0x40d42c
  40d487:	xchg   esp,eax
  40d488:	and    al,0x20
  40d48a:	mov    ch,0xdc
  40d48c:	fst    QWORD PTR [ebx]
  40d48e:	add    bl,BYTE PTR [edx-0x20bdad41]
  40d494:	jb     0x40d45b
  40d496:	sub    edx,DWORD PTR [ebx+0x106372fb]
  40d49c:	push   eax
  40d49d:	and    bh,BYTE PTR [ebx+0x32]
  40d4a0:	mov    ebx,0xa01a0528
  40d4a5:	pop    eax
  40d4a6:	inc    esi
  40d4a7:	mov    DWORD PTR [eax-0x47],ecx
  40d4aa:	push   0xe2a5a0af
  40d4af:	and    ebx,DWORD PTR [edx]
  40d4b1:	icebp  
  40d4b2:	xor    dl,BYTE PTR [eax-0x6e5aabcd]
  40d4b8:	and    eax,0xec1563
  40d4bd:	lock je 0x40d496
  40d4c0:	ret    
  40d4c1:	pop    ecx
  40d4c2:	sbb    BYTE PTR [ebx],0x2e
  40d4c5:	cmp    DWORD PTR ds:0xb5b77eac,ebx
  40d4cb:	clc    
  40d4cc:	imul   edx,DWORD PTR [edi+0x8551c09],0x40b28e80
  40d4d6:	popa   
  40d4d7:	pop    ebp
  40d4d8:	out    0xf2,eax
  40d4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4db:	scas   al,BYTE PTR es:[edi]
  40d4dc:	adc    ebp,edx
  40d4de:	cmp    eax,0x315f06b5
  40d4e3:	(bad)  
  40d4e6:	mov    al,ds:0x77829304
  40d4eb:	out    dx,al
  40d4ec:	cmp    ch,BYTE PTR [esi+0x4af2eb7b]
  40d4f2:	fsubr  QWORD PTR [esi]
  40d4f4:	rcr    DWORD PTR [ebx-0x7f2e4cd5],0xea
  40d4fb:	mov    dh,0x1
  40d4fd:	cmc    
  40d4fe:	rcl    DWORD PTR [ebp-0x6a],cl
  40d501:	dec    esi
  40d502:	dec    ecx
  40d503:	push   esi
  40d504:	(bad)  
  40d505:	iret   
  40d506:	bound  ebp,QWORD PTR [ecx+0x47]
  40d509:	mov    eax,0xe0eadec7
  40d50e:	mov    bh,0x9b
  40d510:	jne    0x40d536
  40d512:	clc    
  40d513:	dec    ebx
  40d514:	jmp    0x40d4b4
  40d516:	xchg   bh,bl
  40d518:	ret    0x5107
  40d51b:	data16 std 
  40d51d:	inc    esi
  40d51e:	cwde   
  40d51f:	pop    edx
  40d520:	xor    al,0xbb
  40d522:	sub    eax,0x4e12259f
  40d527:	pusha  
  40d528:	mov    edx,0xc1a1c238
  40d52d:	or     eax,0x7f43440a
  40d532:	jecxz  0x40d502
  40d534:	aad    0x76
  40d536:	fmul   DWORD PTR [edi-0x2cafaea0]
  40d53c:	mov    ?,WORD PTR [ebp+0x9]
  40d53f:	pop    ecx
  40d540:	std    
  40d541:	lods   eax,DWORD PTR ds:[esi]
  40d542:	inc    esi
  40d543:	jle    0x40d58c
  40d545:	add    bl,BYTE PTR [eax-0x1b]
  40d548:	xchg   ecx,eax
  40d549:	add    DWORD PTR [edx+ebx*4-0x20c0d76a],eax
  40d550:	in     al,dx
  40d551:	out    dx,eax
  40d552:	fwait
  40d553:	aam    0x4b
  40d555:	push   es
  40d556:	lds    edx,FWORD PTR [esp+esi*2-0x27a78377]
  40d55d:	cs sub ah,bl
  40d560:	pop    DWORD PTR [esi-0x69]
  40d563:	push   cs
  40d564:	mov    dl,0x71
  40d566:	xchg   ebp,eax
  40d567:	adc    eax,eax
  40d569:	sbb    ecx,eax
  40d56b:	adc    esp,DWORD PTR ds:0x6f791faa
  40d571:	mov    eax,0x9c8e8ea0
  40d576:	mov    dl,0xd6
  40d578:	pop    esi
  40d579:	sti    
  40d57a:	mov    ch,0x43
  40d57c:	jmp    0x40d500
  40d57e:	cli    
  40d57f:	icebp  
  40d580:	popa   
  40d581:	jmp    0x40d50d
  40d583:	pop    ss
  40d584:	xchg   ecx,eax
  40d585:	xor    DWORD PTR [ecx-0x32],edi
  40d588:	in     eax,dx
  40d589:	inc    ecx
  40d58a:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  40d58e:	push   esp
  40d58f:	cmp    eax,0x58037d2c
  40d594:	pop    ebx
  40d595:	xchg   ebx,eax
  40d596:	inc    edi
  40d597:	(bad)  
  40d598:	lds    esp,FWORD PTR [eax+0x3d]
  40d59b:	in     al,dx
  40d59c:	lods   eax,DWORD PTR ds:[esi]
  40d59d:	jg     0x40d5ea
  40d59f:	mov    ebp,0x19ebac7f
  40d5a4:	pop    esp
  40d5a5:	pop    esp
  40d5a6:	mov    WORD PTR [eax-0x6f3e3190],fs
  40d5ac:	call   0x1efb4dd4
  40d5b1:	test   al,0xaf
  40d5b3:	and    DWORD PTR [eax],ebp
  40d5b5:	add    ah,bl
  40d5b7:	add    al,dh
  40d5b9:	xchg   ecx,eax
  40d5ba:	fstp   QWORD PTR [ebx+0xc]
  40d5bd:	test   al,0x91
  40d5bf:	or     al,0x9a
  40d5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5c2:	inc    ecx
  40d5c3:	xchg   DWORD PTR [edi-0xc],ebx
  40d5c6:	frstor [ebp+0x10e7d4b5]
  40d5cc:	cmp    BYTE PTR [eax+0x2e],0xfc
  40d5d0:	(bad)  [eax+0x181414f2]
  40d5d6:	mov    esi,eax
  40d5d8:	sbb    al,0xc
  40d5da:	mov    dh,0xe4
  40d5dc:	retf   
  40d5dd:	mov    edi,0xf20c2131
  40d5e2:	fld    DWORD PTR [edx+edi*8]
  40d5e5:	pop    eax
  40d5e6:	xchg   edx,eax
  40d5e7:	cmp    dl,BYTE PTR [esi+0x18fe6425]
  40d5ed:	push   0xffffff8d
  40d5ef:	and    eax,0x685a081d
  40d5f4:	not    bh
  40d5f6:	rol    DWORD PTR [ebp-0x36],0x19
  40d5fa:	fild   WORD PTR [ecx-0x14]
  40d5fd:	test   ecx,edi
  40d5ff:	out    0x18,eax
  40d601:	add    DWORD PTR [eax-0x87b5867],0xd4700632
  40d60b:	sub    al,0xce
  40d60d:	js     0x40d64a
  40d60f:	push   0xffffffec
  40d611:	fmul   QWORD PTR [bx+si+0x1a85]
  40d616:	xlat   BYTE PTR ds:[ebx]
  40d617:	jg     0x40d5b0
  40d619:	jns    0x40d607
  40d61b:	xchg   ecx,esi
  40d61d:	(bad)  
  40d61e:	sti    
  40d61f:	std    
  40d620:	iret   
  40d621:	vorps  ymm5,ymm5,ymm4
  40d625:	push   eax
  40d626:	lods   eax,DWORD PTR ds:[esi]
  40d627:	and    al,0x30
  40d629:	lock jge 0x40d5dd
  40d62c:	push   ebp
  40d62d:	lds    edi,FWORD PTR [edx+0x53]
  40d630:	mov    al,ds:0xb7044e3b
  40d635:	jecxz  0x40d5fe
  40d637:	nop
  40d638:	fst    DWORD PTR [esi+0xa]
  40d63b:	mov    ch,0x49
  40d63d:	int3   
  40d63e:	test   DWORD PTR [edx-0x6d],ecx
  40d641:	fwait
  40d642:	sub    bh,bh
  40d644:	or     eax,0x17342c1e
  40d649:	add    al,0xd
  40d64b:	push   ebx
  40d64c:	pusha  
  40d64d:	(bad)  
  40d64e:	cmc    
  40d64f:	retf   
  40d650:	(bad)  
  40d651:	xor    BYTE PTR [ebx],bh
  40d653:	(bad)  
  40d654:	aas    
  40d655:	jp     0x40d6ad
  40d657:	mov    ebp,db1
  40d65a:	icebp  
  40d65b:	xor    cl,dh
  40d65d:	popa   
  40d65e:	xchg   edx,edi
  40d660:	test   BYTE PTR [eax],dh
  40d662:	cmp    DWORD PTR [eax+ecx*1-0x7d],ecx
  40d666:	or     ch,BYTE PTR [esi-0x6de9b9c0]
  40d66c:	inc    edx
  40d66d:	inc    ebx
  40d66e:	jle    0x40d669
  40d670:	push   esp
  40d671:	popf   
  40d672:	sti    
  40d673:	gs cld 
  40d675:	cmp    bl,ah
  40d677:	pop    ebp
  40d678:	pop    esi
  40d679:	jae    0x40d6a0
  40d67b:	push   ebx
  40d67c:	push   ecx
  40d67d:	loopne 0x40d644
  40d67f:	add    eax,DWORD PTR [eax+ebp*8+0x12]
  40d683:	stos   BYTE PTR es:[edi],al
  40d684:	ds mov ecx,0xb73ded59
  40d68a:	ds enter 0xebbc,0xcd
  40d68f:	mov    BYTE PTR [ebx],0x21
  40d692:	inc    esi
  40d693:	xor    ah,dh
  40d695:	div    DWORD PTR [ebx+0x3b]
  40d698:	and    eax,0x5939c323
  40d69d:	inc    ecx
  40d69e:	push   0xffffffaf
  40d6a0:	cmp    al,0x55
  40d6a2:	mov    ds:0x14bb13c2,eax
  40d6a7:	mov    edx,0x602f0cc8
  40d6ac:	mov    eax,ds:0xac6ad83e
  40d6b1:	retf   
  40d6b2:	loopne 0x40d653
  40d6b4:	stos   BYTE PTR es:[edi],al
  40d6b5:	jle    0x40d63d
  40d6b7:	or     eax,0x13e28ca6
  40d6bc:	jmp    0xfe182272
  40d6c1:	shl    bl,1
  40d6c3:	loope  0x40d6c1
  40d6c5:	test   DWORD PTR [edx],0xdd63d0d1
  40d6cb:	ret    0xf015
  40d6ce:	fidiv  DWORD PTR [esi+0x24]
  40d6d1:	cmp    dh,0xab
  40d6d4:	and    eax,0xab32e91f
  40d6d9:	ins    DWORD PTR es:[edi],dx
  40d6da:	pop    eax
  40d6db:	mov    eax,0xb3a81626
  40d6e0:	jbe    0x40d6db
  40d6e2:	nop
  40d6e3:	ins    BYTE PTR es:[edi],dx
  40d6e4:	test   eax,0x53eaa6da
  40d6e9:	pop    eax
  40d6ea:	fnstcw WORD PTR [ebx-0x3011bffc]
  40d6f0:	arpl   WORD PTR [edi+0x5be6db91],di
  40d6f6:	ss push edi
  40d6f8:	ret    
  40d6f9:	sti    
  40d6fa:	scas   eax,DWORD PTR es:[edi]
  40d6fb:	mov    al,0x3a
  40d6fd:	and    BYTE PTR [eax-0x31b6d6bf],0xed
  40d704:	lods   eax,DWORD PTR ds:[esi]
  40d705:	adc    ebp,DWORD PTR [ebp+0x6d]
  40d708:	lea    edx,[edx-0x7c]
  40d70b:	xlat   BYTE PTR ds:[ebx]
  40d70c:	cs push edx
  40d70e:	lods   eax,DWORD PTR ds:[esi]
  40d70f:	adc    DWORD PTR [esi+ebp*8],ecx
  40d712:	inc    esi
  40d713:	icebp  
  40d714:	xchg   ebx,eax
  40d715:	sbb    BYTE PTR [esi+edi*1],0x76
  40d719:	sbb    bl,ah
  40d71b:	sub    BYTE PTR [ecx+ebx*8-0x40],dh
  40d71f:	sbb    edx,edx
  40d721:	out    0xad,eax
  40d723:	mov    bh,0xd5
  40d725:	or     esp,DWORD PTR [ebx+0x3]
  40d728:	dec    esi
  40d729:	sub    BYTE PTR [eax-0x4d],al
  40d72c:	(bad)
  40d730:	pushf  
  40d731:	xchg   DWORD PTR [esi],ebx
  40d733:	fnsave [ebp-0x3b]
  40d736:	adc    BYTE PTR [edx-0xcd76fb],ch
  40d73c:	jmp    0x40d71c
  40d73e:	xchg   ebx,eax
  40d73f:	inc    eax
  40d740:	mul    edi
  40d742:	pop    ebp
  40d743:	ja     0x40d765
  40d745:	repnz idiv BYTE PTR [ebx-0x68]
  40d749:	lods   al,BYTE PTR ds:[esi]
  40d74a:	inc    ebp
  40d74b:	dec    eax
  40d74c:	scas   eax,DWORD PTR es:[edi]
  40d74d:	ins    DWORD PTR es:[edi],dx
  40d74e:	adc    ch,0xb6
  40d751:	call   0x2cd7:0x144c3a84
  40d758:	icebp  
  40d759:	push   ebp
  40d75a:	dec    ebx
  40d75b:	add    edi,edi
  40d75d:	loope  0x40d712
  40d75f:	imul   edx,edi,0xffffff9e
  40d762:	call   0x24ec6493
  40d767:	int    0x8
  40d769:	lods   eax,DWORD PTR ds:[esi]
  40d76a:	ins    DWORD PTR es:[edi],dx
  40d76b:	in     al,dx
  40d76c:	push   0x17a59467
  40d771:	lods   eax,DWORD PTR ds:[esi]
  40d772:	sbb    DWORD PTR [esi],ebp
  40d774:	mov    bh,0x80
  40d776:	and    al,0xd6
  40d778:	or     eax,0x2687d065
  40d77d:	addr16 jnp 0x40d73d
  40d780:	out    0x9c,al
  40d782:	test   eax,0x3e09e569
  40d787:	fsub   QWORD PTR [edi]
  40d789:	cmp    bl,BYTE PTR [ecx+0x38]
  40d78c:	inc    ecx
  40d78d:	lds    edi,FWORD PTR [esi-0x48]
  40d790:	add    eax,0xd0bb40cc
  40d795:	test   eax,0x285800e4
  40d79a:	mov    eax,ds:0xba200a7e
  40d79f:	out    0x69,al
  40d7a1:	loop   0x40d787
  40d7a3:	popa   
  40d7a4:	cs shr dh,0x8a
  40d7a8:	mul    ebp
  40d7aa:	dec    DWORD PTR [edx]
  40d7ac:	nop
  40d7ad:	(bad)  
  40d7ae:	js     0x40d7c5
  40d7b0:	repz je 0x40d7d8
  40d7b3:	int3   
  40d7b4:	nop
  40d7b5:	xchg   DWORD PTR [eax],esi
  40d7b7:	rcr    BYTE PTR [ebx+0x624f73f],cl
  40d7bd:	fwait
  40d7be:	test   DWORD PTR [ebp-0x66],esi
  40d7c1:	iret   
  40d7c2:	mov    eax,0x65d9942a
  40d7c7:	push   cs
  40d7c8:	and    bh,BYTE PTR es:[edx+0x470d3f0e]
  40d7cf:	push   eax
  40d7d0:	or     eax,0xa8684d28
  40d7d5:	jbe    0x40d844
  40d7d7:	outs   dx,BYTE PTR ds:[esi]
  40d7d8:	maskmovq mm0,(bad)
  40d7d9:	test   DWORD PTR [edi-0x5e],0x911b8de2
  40d7e0:	xchg   edi,eax
  40d7e1:	(bad)  
  40d7e2:	push   edi
  40d7e3:	jp     0x40d843
  40d7e5:	and    esi,ebx
  40d7e7:	mov    esi,0xaa3df519
  40d7ec:	ins    DWORD PTR es:[edi],dx
  40d7ed:	jg     0x40d7c1
  40d7ef:	std    
  40d7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f1:	mov    edx,0x4fd84306
  40d7f6:	mov    bh,0x2c
  40d7f8:	ins    BYTE PTR es:[edi],dx
  40d7f9:	inc    eax
  40d7fa:	inc    eax
  40d7fb:	xor    DWORD PTR [ecx],esp
  40d7fd:	mov    edx,0xce238510
  40d802:	call   0xf6fc3c13
  40d807:	ja     0x40d78f
  40d809:	dec    ebp
  40d80a:	pop    DWORD PTR [eax+0x1e9ce160]
  40d810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d811:	cmp    DWORD PTR [esi-0x15],edi
  40d814:	or     al,0xc8
  40d816:	pop    eax
  40d817:	aad    0x96
  40d819:	cmc    
  40d81a:	mov    al,ds:0x82ed51ca
  40d81f:	int    0xcb
  40d821:	jnp    0x40d834
  40d823:	xchg   BYTE PTR [eax+edi*2-0x7d],bl
  40d827:	cwde   
  40d828:	test   al,0xfa
  40d82a:	outs   dx,BYTE PTR ds:[esi]
  40d82b:	addr16 ja 0x40d899
  40d82e:	sbb    ah,BYTE PTR [edx]
  40d830:	xor    BYTE PTR [ebx-0x3a55f93],cl
  40d836:	(bad)  
  40d837:	pop    ecx
  40d838:	loopne 0x40d7e3
  40d83a:	pop    es
  40d83b:	xor    BYTE PTR [esi-0x1e05190d],0x26
  40d842:	cmp    cl,BYTE PTR [edi]
  40d844:	xor    al,0x85
  40d846:	mov    bh,0x4d
  40d848:	pop    eax
  40d849:	mov    ecx,0xb4cec996
  40d84e:	jo     0x40d863
  40d850:	xor    DWORD PTR [ecx-0x6],esi
  40d853:	repnz nop
  40d855:	add    eax,0x1cb6cea2
  40d85a:	add    cl,BYTE PTR [edx]
  40d85c:	pop    ds
  40d85d:	inc    ebx
  40d85e:	dec    ecx
  40d85f:	rcr    BYTE PTR [ebx+0x5f],1
  40d862:	(bad)  
  40d863:	xchg   ebx,eax
  40d864:	push   es
  40d865:	xor    eax,0xa4a74298
  40d86a:	xchg   ebx,eax
  40d86b:	loop   0x40d807
  40d86d:	push   cs
  40d86e:	mov    ch,0x8e
  40d870:	or     eax,DWORD PTR [ecx+0x2e]
  40d873:	lahf   
  40d874:	ficom  DWORD PTR ds:0x9cc913e1
  40d87a:	sbb    DWORD PTR [edx-0x1a],esi
  40d87d:	push   esi
  40d87e:	clc    
  40d87f:	scas   al,BYTE PTR es:[edi]
  40d880:	mov    eax,0x2c5b9121
  40d885:	sub    ebp,DWORD PTR [esp+ebx*2-0x1d]
  40d889:	imul   ecx,ebx,0x4894e230
  40d88f:	fwait
  40d890:	sub    DWORD PTR [esi+ebx*8],0x7dd9439b
  40d897:	bound  eax,QWORD PTR [ecx]
  40d899:	imul   esp,eax,0xf43c37b7
  40d89f:	push   ds
  40d8a0:	cmp    edi,edx
  40d8a2:	cmc    
  40d8a3:	retf   0x2b
  40d8a6:	mov    ebx,0x7360b5d5
  40d8ab:	cmp    ch,BYTE PTR [esi-0x2f]
  40d8ae:	mov    ebp,0x2727fd15
  40d8b3:	call   0xe132:0x798382bb
  40d8ba:	push   cs
  40d8bb:	sbb    BYTE PTR [esi],dl
  40d8bd:	adc    BYTE PTR [ecx-0x4d197f4],bl
  40d8c3:	xchg   ebp,eax
  40d8c4:	xchg   esi,eax
  40d8c5:	rcl    edi,1
  40d8c7:	lock inc eax
  40d8c9:	fcmovnbe st,st(1)
  40d8cb:	test   al,0x5c
  40d8cd:	push   ecx
  40d8ce:	push   0xc633cda8
  40d8d3:	into   
  40d8d4:	imul   esi,DWORD PTR [esi+0x7106fbdc],0xabd18733
  40d8de:	or     ecx,DWORD PTR [esi+0xe16276d]
  40d8e4:	push   ecx
  40d8e5:	pop    ss
  40d8e6:	lods   eax,DWORD PTR ds:[esi]
  40d8e7:	xor    eax,0x5cecb2c7
  40d8ec:	shr    BYTE PTR [ecx],0x2
  40d8ef:	pop    ecx
  40d8f0:	lds    ecx,FWORD PTR [ebx-0x40]
  40d8f3:	sub    al,0xd3
  40d8f5:	ret    
  40d8f6:	in     al,dx
  40d8f7:	mov    dl,0xa9
  40d8f9:	in     eax,0x54
  40d8fb:	or     eax,0x69cd9354
  40d900:	adc    ah,BYTE PTR [ebx+0xe]
  40d903:	and    al,0xe6
  40d905:	inc    BYTE PTR [edx]
  40d907:	cwde   
  40d908:	xchg   BYTE PTR [edx-0x6c],al
  40d90b:	pop    esp
  40d90c:	jno    0x40d890
  40d90e:	data16 mov dl,0x21
  40d911:	out    0xe,al
  40d913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d914:	test   al,0x18
  40d916:	mov    eax,ds:0x304c723d
  40d91b:	iret   
  40d91c:	xor    BYTE PTR [esi],ah
  40d91e:	or     eax,0x99d92b9e
  40d923:	jg     0x40d8df
  40d925:	lds    esp,FWORD PTR [ebx+0x9200b87]
  40d92b:	ins    DWORD PTR es:[edi],dx
  40d92c:	into   
  40d92d:	sub    BYTE PTR [ebp-0x3b99a545],bl
  40d933:	sbb    al,BYTE PTR ds:[edx]
  40d936:	inc    edi
  40d937:	jp     0x40d989
  40d939:	sub    cl,dl
  40d93b:	(bad)  
  40d93c:	cmp    BYTE PTR [esi-0x452b46b4],dl
  40d942:	jle    0x40d94a
  40d944:	fstp   QWORD PTR [eax]
  40d946:	jle    0x40d96e
  40d948:	and    BYTE PTR [ebp+0x55],ch
  40d94b:	stc    
  40d94c:	fcom   QWORD PTR [edx+0x5b1855bb]
  40d952:	mov    ah,0xea
  40d954:	add    ah,BYTE PTR [ebp-0x20]
  40d957:	add    edx,DWORD PTR [esi]
  40d959:	cdq    
  40d95a:	pop    eax
  40d95b:	int3   
  40d95c:	ror    DWORD PTR [eax+0x5b],cl
  40d95f:	push   ecx
  40d960:	xchg   edx,eax
  40d961:	lea    eax,[eax-0x16]
  40d964:	bound  edi,QWORD PTR [ebx+0x1b884e20]
  40d96a:	jns    0x40d9e2
  40d96c:	gs stc 
  40d96e:	sub    edi,esi
  40d970:	les    eax,FWORD PTR [ebx]
  40d972:	lods   al,BYTE PTR ds:[esi]
  40d973:	js     0x40d932
  40d975:	stos   BYTE PTR es:[edi],al
  40d976:	jmp    0x83cd:0x3a9f676c
  40d97d:	cmp    al,0x3b
  40d97f:	xchg   DWORD PTR [edx+0x45],ebp
  40d982:	mov    al,0xf2
  40d984:	add    al,0x9e
  40d986:	ds (bad) 
  40d989:	in     eax,0x7
  40d98b:	add    DWORD PTR [ebx],esi
  40d98d:	add    eax,esp
  40d98f:	cmp    cl,ah
  40d991:	ja     0x40d92f
  40d993:	pop    ds
  40d994:	xor    BYTE PTR [edi+ebp*4-0x74141797],ah
  40d99b:	outs   dx,DWORD PTR ds:[esi]
  40d99c:	in     eax,dx
  40d99d:	add    DWORD PTR [esi-0x27],eax
  40d9a0:	xor    BYTE PTR [ebx-0x709a26f],al
  40d9a6:	(bad)  
  40d9a7:	icebp  
  40d9a8:	pusha  
  40d9a9:	(bad)  
  40d9aa:	movzx  ebx,BYTE PTR [esi+0x17]
  40d9ae:	and    eax,0x3bfc867d
  40d9b3:	int3   
  40d9b4:	xchg   ebp,eax
  40d9b5:	dec    ecx
  40d9b6:	sbb    BYTE PTR [eax+0x2],al
  40d9b9:	test   BYTE PTR [edx+0x67aeba3f],dh
  40d9bf:	push   edi
  40d9c0:	pop    edi
  40d9c1:	mov    eax,ds:0xb68c047e
  40d9c6:	mov    bh,0x30
  40d9c8:	pop    ebp
  40d9c9:	push   cs
  40d9ca:	xchg   esp,eax
  40d9cb:	shl    esi,1
  40d9cd:	and    bh,ch
  40d9cf:	repnz scas eax,DWORD PTR es:[edi]
  40d9d1:	xchg   ecx,eax
  40d9d2:	cli    
  40d9d3:	pop    es
  40d9d4:	in     al,dx
  40d9d5:	imul   esi,DWORD PTR [ecx-0x4811e755],0xffffffc9
  40d9dc:	xor    eax,0xf9eca139
  40d9e1:	mov    ecx,ds
  40d9e3:	and    esi,edi
  40d9e5:	mov    DWORD PTR [ebp+0x60],eax
  40d9e8:	leave  
  40d9e9:	mov    ebp,DWORD PTR [esi+0x341aeea7]
  40d9ef:	loop   0x40d988
  40d9f1:	repnz cli 
  40d9f3:	stc    
  40d9f4:	inc    edx
  40d9f5:	adc    ecx,DWORD PTR [eax]
  40d9f7:	fbld   TBYTE PTR [ebx+eax*4+0x23]
  40d9fb:	add    eax,0x767e07ae
  40da00:	inc    ebp
  40da01:	popf   
  40da02:	mov    ebp,0x3154f2cb
  40da07:	les    edi,FWORD PTR [ebp-0x49]
  40da0a:	inc    eax
  40da0b:	add    ch,BYTE PTR [ebx+ebp*2-0x553b733a]
  40da12:	xlat   BYTE PTR ds:[ebx]
  40da13:	or     dh,bh
  40da15:	std    
  40da16:	stos   BYTE PTR es:[edi],al
  40da17:	cs jg  0x40da22
  40da1a:	push   eax
  40da1b:	push   ds
  40da1c:	mov    ecx,0xdcd7764
  40da21:	cmp    eax,0xdf6baad
  40da26:	cwde   
  40da27:	pop    esi
  40da28:	js     0x40da3a
  40da2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da2b:	add    eax,0x6788aaba
  40da30:	les    ebp,FWORD PTR [ecx+0x0]
  40da33:	adc    DWORD PTR [ebx+eiz*2-0x7f12adda],0x1979161d
  40da3e:	add    BYTE PTR [ecx+0x5b],bl
  40da41:	in     eax,dx
  40da42:	pop    esp
  40da43:	mov    es,WORD PTR ds:0x7b1e492d
  40da49:	xchg   edx,eax
  40da4a:	xchg   DWORD PTR [ecx+0x79c693db],edx
  40da50:	cmp    DWORD PTR [ebp-0x70afee7d],0x14
  40da57:	push   ecx
  40da58:	mov    ah,0x9f
  40da5a:	xor    eax,0xdda8f673
  40da5f:	addr16 jne 0x40d9e6
  40da62:	mov    ch,0xd
  40da64:	or     eax,0x2a28960b
  40da69:	sbb    al,dh
  40da6b:	popf   
  40da6c:	xchg   ebx,eax
  40da6d:	or     al,0x53
  40da6f:	leave  
  40da70:	xor    DWORD PTR ds:0x9e79901e,esi
  40da76:	lahf   
  40da77:	xor    esi,edx
  40da79:	(bad)  
  40da7d:	in     al,0x3
  40da7f:	pop    ebx
  40da80:	pop    eax
  40da81:	in     al,0x27
  40da83:	sub    al,0x7a
  40da85:	mov    bl,0x41
  40da87:	ss retf 0x8175
  40da8b:	imul   esp,DWORD PTR [eax],0x67d4f0cf
  40da91:	push   edx
  40da92:	scas   al,BYTE PTR es:[edi]
  40da93:	test   eax,0x8b558fca
  40da98:	clc    
  40da99:	fsub   QWORD PTR [esi-0x5ddf7c1d]
  40da9f:	clc    
  40daa0:	bound  esp,QWORD PTR [eax-0x21127941]
  40daa6:	inc    eax
  40daa7:	push   eax
  40daa8:	shl    DWORD PTR ds:0xf4db615e,0x42
  40daaf:	pop    es
  40dab0:	in     eax,dx
  40dab1:	dec    ebx
  40dab2:	lods   eax,DWORD PTR ds:[esi]
  40dab3:	es jmp 0x40dae5
  40dab6:	sti    
  40dab7:	aam    0x17
  40dab9:	mul    DWORD PTR ds:[eax+0x29]
  40dabd:	fist   DWORD PTR [ebx]
  40dabf:	xchg   BYTE PTR [esi+0x1b],al
  40dac2:	adc    al,0x1e
  40dac4:	dec    esp
  40dac5:	js     0x40db3e
  40dac7:	(bad)  [ebx-0x66aea03e]
  40dacd:	out    0x50,eax
  40dacf:	xchg   esi,eax
  40dad0:	jge    0x40db42
  40dad2:	xchg   esi,eax
  40dad3:	ret    
  40dad4:	sti    
  40dad5:	mov    cl,0xbb
  40dad7:	inc    edi
  40dad8:	or     al,0x10
  40dada:	adc    ebx,DWORD PTR [esi-0x70bbd58]
  40dae0:	push   edx
  40dae1:	push   ss
  40dae2:	arpl   WORD PTR [edi-0x75],dx
  40dae5:	test   DWORD PTR [esi+0x46],edx
  40dae8:	inc    esi
  40dae9:	mov    DWORD PTR [ebp+0x27fe7515],edi
  40daef:	xlat   BYTE PTR ds:[ebx]
  40daf0:	jno    0x40db18
  40daf2:	xchg   edi,eax
  40daf3:	jp     0x40daf4
  40daf5:	loope  0x40dadf
  40daf7:	and    edx,ebx
  40daf9:	mov    esi,0x5974845f
  40dafe:	addr16 aaa 
  40db00:	ins    BYTE PTR es:[edi],dx
  40db01:	imul   ebx,DWORD PTR [ecx-0x3c],0x46
  40db05:	daa    
  40db06:	mov    edx,0x27c3a4a
  40db0b:	sti    
  40db0c:	and    edx,DWORD PTR [ebp-0x24]
  40db0f:	outs   dx,BYTE PTR ds:[esi]
  40db10:	scas   eax,DWORD PTR es:[edi]
  40db11:	scas   al,BYTE PTR es:[edi]
  40db12:	inc    esi
  40db13:	aaa    
  40db14:	std    
  40db15:	mov    ds:0xa6feb600,eax
  40db1a:	mov    dh,0xcf
  40db1c:	stos   DWORD PTR es:[edi],eax
  40db1d:	mov    dl,0x10
  40db1f:	shr    DWORD PTR [eax+edx*1],0x3f
  40db23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db24:	xrelease mov BYTE PTR [edi],ch
  40db27:	cmp    eax,DWORD PTR [edi+0x63]
  40db2a:	jmp    0xbbca37ea
  40db2f:	push   edx
  40db30:	cmc    
  40db31:	push   esi
  40db32:	mov    bh,ch
  40db34:	and    DWORD PTR [ecx+0x75],ebx
  40db37:	retf   0x55c6
  40db3a:	mov    ch,0xdd
  40db3c:	add    ebx,DWORD PTR [edi+ecx*1]
  40db3f:	mov    dl,0x89
  40db41:	(bad)  
  40db42:	pinsrw mm4,WORD PTR [ecx-0x7bded699],0xdb
  40db4a:	xchg   DWORD PTR [ecx+0x5f2750ec],esi
  40db50:	mov    cl,0x7e
  40db52:	inc    ebx
  40db53:	dec    eax
  40db54:	cs mov al,0x66
  40db57:	pop    esi
  40db58:	rol    BYTE PTR [ecx+edi*1],1
  40db5b:	daa    
  40db5c:	cs (bad) 
  40db5e:	xlat   BYTE PTR ds:[ebx]
  40db5f:	and    al,0xb3
  40db61:	shl    DWORD PTR [ecx-0x71],0x99
  40db65:	ret    0xb8e5
  40db68:	mov    gs,WORD PTR [edx]
  40db6a:	push   eax
  40db6b:	or     ebx,edi
  40db6d:	or     eax,0x8df5a30b
  40db72:	xchg   esi,eax
  40db73:	and    dh,cl
  40db75:	mov    ebp,0xcc1d40a1
  40db7a:	jg     0x40dbdd
  40db7c:	cmp    BYTE PTR [edx],dh
  40db7e:	ins    BYTE PTR es:[edi],dx
  40db7f:	xchg   ecx,eax
  40db80:	mov    ds:0x1f615dfa,al
  40db85:	mov    dl,0x29
  40db87:	push   eax
  40db88:	and    ecx,edx
  40db8a:	cli    
  40db8b:	aam    0x72
  40db8d:	inc    ebx
  40db8e:	or     eax,0xacfa9288
  40db93:	jmp    0x40dbe2
  40db95:	fist   DWORD PTR [eax+ebp*2-0x30]
  40db99:	std    
  40db9a:	jo     0x40dba5
  40db9c:	hlt    
  40db9d:	dec    edi
  40db9e:	shr    cl,1
  40dba0:	mov    bh,0x48
  40dba2:	stc    
  40dba3:	les    esp,FWORD PTR [ebx+0xd9ab21a]
  40dba9:	jg     0x40dbdd
  40dbab:	call   0xa07d:0x8ab54e19
  40dbb2:	enter  0x9d2f,0x9e
  40dbb6:	mov    esp,0x36256440
  40dbbb:	push   esp
  40dbbc:	mov    ebx,0xf90a1c9d
  40dbc1:	add    ah,BYTE PTR [esi+0x6dc91925]
  40dbc7:	pop    eax
  40dbc8:	fidiv  DWORD PTR [ecx-0x1]
  40dbcb:	jbe    0x40db63
  40dbcd:	cmp    DWORD PTR [ecx-0x3d1b6f1],esp
  40dbd3:	imul   esp,DWORD PTR [esi+0x55],0x42
  40dbd7:	cld    
  40dbd8:	mov    esp,0x4651b3a1
  40dbdd:	cli    
  40dbde:	test   bh,bl
  40dbe0:	mov    eax,ds:0xb8affc53
  40dbe5:	pop    edx
  40dbe6:	push   0x745ef481
  40dbeb:	jle    0x40dba6
  40dbed:	and    BYTE PTR ds:0x5a154c36,0xc
  40dbf4:	ss push esp
  40dbf6:	mov    dl,ch
  40dbf8:	das    
  40dbf9:	mov    al,0xfd
  40dbfb:	xor    al,0x97
  40dbfd:	dec    ebp
  40dbfe:	push   cs
  40dbff:	mov    edx,0x2a48ae26
  40dc04:	fistp  WORD PTR ds:0xce5fdbe3
  40dc0a:	cs test al,0x2c
  40dc0d:	xor    ebx,edi
  40dc0f:	mov    BYTE PTR [ebp-0x64bcd9d9],bh
  40dc15:	mov    eax,0xea6de207
  40dc1a:	jmp    0x40dc4e
  40dc1c:	ins    BYTE PTR es:[edi],dx
  40dc1d:	and    al,0x4d
  40dc1f:	mov    ebp,0x11e4867
  40dc24:	jl     0x40dc79
  40dc26:	cdq    
  40dc27:	mov    ds:0x80127216,eax
  40dc2c:	test   BYTE PTR [ecx-0x37],dl
  40dc2f:	push   eax
  40dc30:	xlat   BYTE PTR ds:[ebx]
  40dc31:	sahf   
  40dc32:	fcmovne st,st(6)
  40dc34:	dec    ecx
  40dc35:	and    al,0x82
  40dc37:	inc    edi
  40dc38:	cli    
  40dc39:	cmp    ebx,DWORD PTR [ecx]
  40dc3b:	outs   dx,BYTE PTR ds:[esi]
  40dc3c:	nop
  40dc3d:	cmp    ebx,DWORD PTR [esi-0x1d]
  40dc40:	xor    bh,BYTE PTR [ebx+edx*1-0x26]
  40dc44:	push   ebp
  40dc45:	and    al,0x6f
  40dc47:	mov    ch,0x6b
  40dc49:	data16 je 0x40dcc9
  40dc4c:	sbb    al,0xe
  40dc4e:	icebp  
  40dc4f:	mov    dl,0xf2
  40dc51:	fbstp  TBYTE PTR [edi]
  40dc53:	iret   
  40dc54:	loope  0x40dc00
  40dc56:	push   ebp
  40dc57:	popf   
  40dc58:	xchg   ecx,eax
  40dc59:	shl    ebx,cl
  40dc5b:	rol    BYTE PTR [esi+0x1191422a],1
  40dc61:	retf   
  40dc62:	push   0xffffffce
  40dc64:	and    edi,ebp
  40dc66:	adc    DWORD PTR ds:0x8a343eab,ebx
  40dc6c:	push   esp
  40dc6d:	aaa    
  40dc6e:	pop    esi
  40dc6f:	arpl   WORD PTR [ecx+0x65],bx
  40dc72:	ss dec esi
  40dc74:	jns    0x40dcbb
  40dc76:	inc    edx
  40dc77:	inc    ebp
  40dc78:	push   ecx
  40dc79:	pushf  
  40dc7a:	or     esp,DWORD PTR [esi+0x4e436e4]
  40dc80:	mov    ds:0x578c3b1a,al
  40dc85:	cdq    
  40dc86:	and    al,BYTE PTR [esi]
  40dc88:	call   0x2813:0x683f69d0
  40dc8f:	push   ecx
  40dc90:	int    0xe0
  40dc92:	dec    esp
  40dc93:	in     al,dx
  40dc94:	call   0x1a3b7605
  40dc99:	push   0x5e
  40dc9b:	popf   
  40dc9c:	in     al,0xec
  40dc9e:	mov    ds:0xf31846e6,eax
  40dca3:	or     ah,ch
  40dca5:	arpl   WORD PTR [ecx],bp
  40dca7:	jb     0x40dc7a
  40dca9:	icebp  
  40dcaa:	scas   al,BYTE PTR es:[edi]
  40dcab:	add    al,BYTE PTR [ebx]
  40dcad:	int    0x35
  40dcaf:	lods   al,BYTE PTR ds:[esi]
  40dcb0:	mov    edi,0x6cac805a
  40dcb5:	test   al,0x44
  40dcb7:	ret    0xffbf
  40dcba:	sbb    eax,0x1ffcec87
  40dcbf:	and    ebp,ebx
  40dcc1:	inc    ebx
  40dcc2:	out    0xd6,al
  40dcc4:	dec    ebp
  40dcc5:	xor    esp,DWORD PTR [ebx-0x3349f050]
  40dccb:	or     BYTE PTR [eax-0x310403ad],al
  40dcd1:	dec    ecx
  40dcd2:	sub    BYTE PTR [edi-0x30],cl
  40dcd5:	scas   al,BYTE PTR es:[edi]
  40dcd6:	mov    al,ds:0xd4c13074
  40dcdb:	stos   BYTE PTR es:[edi],al
  40dcdc:	jbe    0x40dc69
  40dcde:	loop   0x40dd00
  40dce0:	adc    eax,0xe938d916
  40dce5:	cld    
  40dce6:	iret   
  40dce7:	arpl   WORD PTR [ecx-0x4e],di
  40dcea:	ds xchg ebx,eax
  40dcec:	mov    DWORD PTR [ebx],eax
  40dcee:	fmul   st(7),st
  40dcf0:	stos   BYTE PTR es:[edi],al
  40dcf1:	pop    esp
  40dcf2:	aaa    
  40dcf3:	bnd jno 0x40dc88
  40dcf6:	inc    ebx
  40dcf7:	inc    esi
  40dcf8:	and    al,0x25
  40dcfa:	adc    eax,0xe792388
  40dcff:	addr16 add eax,0x52cfa3e0
  40dd05:	mov    BYTE PTR [ebx],al
  40dd07:	fcomp  QWORD PTR [edx+esi*8]
  40dd0a:	lahf   
  40dd0b:	bound  edi,QWORD PTR ds:0x19eea4b6
  40dd11:	push   eax
  40dd12:	dec    ebp
  40dd13:	imul   edi,DWORD PTR [ebx+eax*2+0x51],0x7f1d8ddb
  40dd1b:	fs stos BYTE PTR es:[edi],al
  40dd1d:	pop    ss
  40dd1e:	cmp    eax,0x88f6820e
  40dd23:	inc    ebp
  40dd24:	xor    al,0xe3
  40dd26:	mov    dh,0xfb
  40dd28:	ret    
  40dd29:	in     eax,dx
  40dd2a:	sbb    ecx,DWORD PTR [ebp-0x25]
  40dd2d:	enter  0x5df7,0x66
  40dd31:	jns    0x40dd07
  40dd33:	test   BYTE PTR [edx-0x5e741423],cl
  40dd39:	lds    edx,FWORD PTR [ebx]
  40dd3b:	(bad)
  40dd3e:	pop    ds
  40dd3f:	cmp    al,0xd1
  40dd41:	dec    edx
  40dd42:	test   eax,0xad1eeab4
  40dd47:	xchg   ecx,eax
  40dd48:	and    bh,dh
  40dd4a:	cmp    al,0xe
  40dd4c:	scas   eax,DWORD PTR es:[edi]
  40dd4d:	add    ebp,0x15
  40dd50:	cli    
  40dd51:	stos   BYTE PTR es:[edi],al
  40dd52:	push   ebx
  40dd53:	jnp    0x40dd68
  40dd55:	cmp    BYTE PTR [esi-0x23fce0a],bl
  40dd5b:	push   ds
  40dd5c:	pop    ds
  40dd5d:	and    BYTE PTR ds:[ebp+0x3d],0x59
  40dd62:	xor    edx,edx
  40dd64:	mov    ebx,DWORD PTR [edi-0x2a69db9b]
  40dd6a:	push   es
  40dd6b:	test   al,bl
  40dd6d:	mov    al,ds:0xb982c5b2
  40dd72:	dec    ebx
  40dd73:	sbb    DWORD PTR ds:0xed0a68c4,ebp
  40dd79:	pop    ebp
  40dd7a:	mov    ds:0xd2d0d3c9,eax
  40dd7f:	repz repz test al,0x1
  40dd83:	outs   dx,BYTE PTR ds:[esi]
  40dd84:	dec    esp
  40dd85:	and    DWORD PTR [edx],eax
  40dd87:	cmp    eax,0x3b22f0bb
  40dd8c:	sbb    DWORD PTR [edi+0x50],ebx
  40dd8f:	add    esp,DWORD PTR [ecx+0x4]
  40dd92:	outs   dx,BYTE PTR ds:[esi]
  40dd93:	cmp    bl,0x46
  40dd96:	into   
  40dd97:	aad    0xe2
  40dd99:	dec    ebx
  40dd9a:	ins    DWORD PTR es:[edi],dx
  40dd9b:	or     dl,BYTE PTR [ecx+0x5a1ba4c7]
  40dda1:	cmp    al,0x8
  40dda3:	push   es
  40dda4:	daa    
  40dda5:	pop    edx
  40dda6:	mov    ch,0x41
  40dda8:	iret   
  40dda9:	dec    ebp
  40ddaa:	je     0x40de22
  40ddac:	je     0x40ddf8
  40ddae:	push   ebp
  40ddaf:	in     al,0x49
  40ddb1:	xchg   ecx,eax
  40ddb2:	icebp  
  40ddb3:	cdq    
  40ddb4:	pop    ss
  40ddb5:	scas   eax,DWORD PTR es:[edi]
  40ddb6:	cmp    eax,0x30ca12a0
  40ddbb:	enter  0x5f70,0xb
  40ddbf:	inc    ecx
  40ddc0:	xchg   ebx,eax
  40ddc1:	ds int 0x15
  40ddc4:	mov    edi,0xf723ef16
  40ddc9:	fwait
  40ddca:	pushf  
  40ddcb:	js     0x40dd90
  40ddcd:	sub    BYTE PTR [ecx+0x5ede9970],dl
  40ddd3:	je     0x40ddfb
  40ddd5:	fcomp  QWORD PTR [ebp-0x76]
  40ddd8:	xor    dl,cl
  40ddda:	and    bl,0xde
  40dddd:	add    ebx,ecx
  40dddf:	xor    DWORD PTR [eax],esp
  40dde1:	(bad)  
  40dde2:	leave  
  40dde3:	hlt    
  40dde4:	or     DWORD PTR [eax+0x20],esi
  40dde7:	daa    
  40dde8:	je     0x40dde5
  40ddea:	rol    BYTE PTR [ebx+0x66be1f56],cl
  40ddf0:	in     al,0x7e
  40ddf2:	xchg   ch,dh
  40ddf4:	cwde   
  40ddf5:	call   0x9d3d347d
  40ddfa:	mov    edi,0xb8073a66
  40ddff:	push   edi
  40de00:	int3   
  40de01:	cmp    eax,0xf104d849
  40de06:	ret    0x5239
  40de09:	repz jnp 0x40ddb8
  40de0c:	push   ecx
  40de0d:	mov    ch,0x33
  40de0f:	cli    
  40de10:	sub    DWORD PTR [eax-0xab88462],edi
  40de16:	mov    eax,ds:0x2804fc23
  40de1b:	dec    ecx
  40de1c:	fld    QWORD PTR [edx-0x7f9d55a8]
  40de22:	aaa    
  40de23:	jecxz  0x40de66
  40de25:	mov    dh,0x81
  40de27:	xchg   ecx,eax
  40de28:	inc    esp
  40de29:	adc    DWORD PTR [esi],esp
  40de2b:	(bad)  
  40de2c:	les    esp,FWORD PTR [ebp+0x49b0ab76]
  40de32:	div    DWORD PTR [ecx+eax*4-0x54e20f05]
  40de39:	adc    DWORD PTR [edi+0x52],ebx
  40de3c:	mov    ebx,0x3701d2c9
  40de41:	pop    es
  40de42:	xor    eax,0xc625c1e8
  40de47:	out    0xee,eax
  40de49:	xchg   edx,eax
  40de4a:	dec    ebx
  40de4b:	lods   al,BYTE PTR ds:[esi]
  40de4c:	fistp  QWORD PTR [esi+0x6f3c21e0]
  40de52:	cdq    
  40de53:	aad    0xa9
  40de55:	xchg   BYTE PTR [esi],bh
  40de57:	mov    esp,0xa16af6e9
  40de5c:	sbb    eax,0x2e2ecb31
  40de61:	add    ah,BYTE PTR cs:[ecx]
  40de64:	xor    eax,0x5b07a20b
  40de69:	jp     0x40debe
  40de6b:	cmp    eax,0x2bc92f55
  40de70:	stos   BYTE PTR es:[edi],al
  40de71:	add    DWORD PTR [ebx+0x202341],ebp
  40de77:	mov    bh,0x90
  40de79:	ins    BYTE PTR es:[edi],dx
  40de7a:	or     dl,dh
  40de7c:	imul   edx,DWORD PTR [eax],0xffffff93
  40de7f:	dec    esp
  40de80:	jo     0x40de06
  40de82:	fnstsw WORD PTR [ebp+0x5fbb0221]
  40de88:	popa   
  40de89:	jb     0x40de19
  40de8b:	js     0x40dec8
  40de8d:	ret    
  40de8e:	enter  0xf1fe,0xf1
  40de92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de93:	cwde   
  40de94:	xor    al,0x79
  40de96:	test   BYTE PTR [ebx],ch
  40de98:	inc    edi
  40de99:	sbb    ah,BYTE PTR [esi]
  40de9b:	cld    
  40de9c:	push   ebx
  40de9d:	shr    DWORD PTR [edi+0x7c71083a],0x25
  40dea4:	push   esp
  40dea5:	ret    
  40dea6:	add    BYTE PTR es:[ebp+ebx*4+0x45c37045],ch
  40deae:	adc    bh,BYTE PTR [ebp+0x73]
  40deb1:	jns    0x40de92
  40deb3:	mov    ecx,0xac0102f0
  40deb8:	mov    ah,0xc
  40deba:	and    esp,DWORD PTR ds:0xfef70b49
  40dec0:	call   0xf5b636af
  40dec5:	rcr    DWORD PTR [eax-0x6b449691],1
  40decb:	(bad)  
  40decc:	retf   0x6148
  40decf:	push   ss
  40ded0:	add    DWORD PTR [ebp+0x4c],ebp
  40ded3:	pop    esi
  40ded4:	repz addr16 call 0xa9214c13
  40dedb:	les    esi,FWORD PTR [esi]
  40dedd:	loopne 0x40deb9
  40dedf:	sub    ah,0x81
  40dee2:	dec    ecx
  40dee3:	mov    WORD PTR [edx+0x47],ss
  40dee6:	ret    0x9304
  40dee9:	shr    dh,cl
  40deeb:	jb     0x40def9
  40deed:	jae    0x40dece
  40deef:	std    
  40def0:	and    DWORD PTR [esi+0x68],esi
  40def3:	mov    bh,0x86
  40def5:	lock sub ecx,DWORD PTR [edi+0x47]
  40def9:	lods   eax,DWORD PTR ds:[esi]
  40defa:	push   edi
  40defb:	std    
  40defc:	adc    ebx,esp
  40defe:	xchg   esi,eax
  40deff:	xor    DWORD PTR [edx+0x33],ebp
  40df02:	loopne 0x40df16
  40df04:	sbb    bl,cl
  40df06:	cmp    al,0xa9
  40df08:	or     bl,ah
  40df0a:	cmp    ecx,edi
  40df0c:	icebp  
  40df0d:	adc    DWORD PTR [eax],esp
  40df0f:	mov    esi,0xdc1cc38a
  40df14:	mov    al,0x4e
  40df16:	add    esp,DWORD PTR [edi*1+0x12a54966]
  40df1d:	jo     0x40df77
  40df1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df20:	dec    edx
  40df21:	aaa    
  40df22:	jns    0x40def3
  40df24:	lea    ebx,[edi-0x608184df]
  40df2a:	pop    ecx
  40df2b:	pop    esi
  40df2c:	pop    eax
  40df2d:	test   DWORD PTR [eax-0x17],0x625884dc
  40df34:	jmp    0x55c5:0x5b1227dc
  40df3b:	mov    ah,0x9d
  40df3d:	jno    0x40df42
  40df3f:	in     eax,0x18
  40df41:	jns    0x40df76
  40df43:	mov    ecx,0xb3bdffa0
  40df48:	es retf 
  40df4a:	lods   al,BYTE PTR ds:[esi]
  40df4b:	out    0x56,eax
  40df4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df4e:	out    dx,eax
  40df4f:	xor    ah,al
  40df51:	cmc    
  40df52:	pop    esp
  40df53:	inc    edx
  40df54:	xchg   edx,eax
  40df55:	sar    DWORD PTR [edi-0x7e],cl
  40df58:	jecxz  0x40df0b
  40df5a:	xchg   edx,eax
  40df5b:	cmp    bl,BYTE PTR [esi-0x4]
  40df5e:	(bad)  
  40df60:	adc    al,0xca
  40df62:	scas   eax,DWORD PTR es:[edi]
  40df63:	dec    ebx
  40df64:	es add eax,esi
  40df67:	jo     0x40df1a
  40df69:	jle    0x40def7
  40df6b:	sbb    al,0x85
  40df6d:	clc    
  40df6e:	(bad)  
  40df6f:	jecxz  0x40dfef
  40df71:	push   0xffffffec
  40df73:	sub    al,0xf3
  40df75:	das    
  40df76:	outs   dx,DWORD PTR ds:[esi]
  40df77:	mov    ebp,0xe5a3d6db
  40df7c:	mov    bl,0x35
  40df7e:	dec    eax
  40df7f:	retf   
  40df80:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40df82:	jg     0x40df4a
  40df84:	dec    esi
  40df85:	fst    DWORD PTR es:[ebx-0x8]
  40df89:	mov    BYTE PTR cs:[eax+0x527a5f32],al
  40df90:	call   0x1395:0x2e9dfdb2
  40df97:	scas   al,BYTE PTR es:[edi]
  40df98:	push   es
  40df99:	xchg   ecx,eax
  40df9a:	dec    eax
  40df9b:	jbe    0x40df3e
  40df9d:	cld    
  40df9e:	jbe    0x40df83
  40dfa0:	push   esp
  40dfa1:	bound  esi,QWORD PTR [eax+0x1456a3]
  40dfa7:	les    edi,FWORD PTR [esi+ebx*8-0x6bdcf83c]
  40dfae:	loopne 0x40dfcf
  40dfb0:	retf   0x8cbc
  40dfb3:	sar    DWORD PTR [ebp+0x20],0xb6
  40dfb7:	mov    dh,0x27
  40dfb9:	ds adc ecx,edx
  40dfbc:	cld    
  40dfbd:	test   BYTE PTR [eax+0x7e],dh
  40dfc0:	daa    
  40dfc1:	lods   eax,DWORD PTR ds:[esi]
  40dfc2:	mov    esi,0x2a6f03ae
  40dfc7:	cdq    
  40dfc8:	mov    dh,0x61
  40dfca:	(bad)  
  40dfcb:	or     eax,DWORD PTR [eax-0x37]
  40dfce:	jp     0x40df91
  40dfd0:	jmp    0xb0ca:0x7618f6e6
  40dfd7:	imul   esp
  40dfd9:	outs   dx,BYTE PTR ds:[esi]
  40dfda:	fbld   TBYTE PTR [ebx+0x31]
  40dfdd:	nop
  40dfde:	add    al,0x25
  40dfe0:	std    
  40dfe1:	jnp    0x40df64
  40dfe3:	rcl    BYTE PTR [eax+0x7560f9ba],cl
  40dfe9:	fadd   QWORD PTR [ecx]
  40dfeb:	scas   eax,DWORD PTR es:[edi]
  40dfec:	ret    0x87f3
  40dfef:	out    dx,eax
  40dff0:	lock pop ebx
  40dff2:	icebp  
  40dff3:	add    al,0xc4
  40dff5:	adc    DWORD PTR [edi+0x7f52f5e4],esi
  40dffb:	ds dec ebp
  40dffd:	hlt    
  40dffe:	js     0x40e075
  40e000:	mov    WORD PTR [ecx],?
  40e002:	gs mov eax,0xe5dde310
  40e008:	and    ah,dl
  40e00a:	xor    eax,0xa0082cd2
  40e00f:	sbb    ah,al
  40e011:	imul   edx,DWORD PTR [ebp-0x6f],0xffffff85
  40e015:	adc    cl,dl
  40e017:	inc    cl
  40e019:	mov    eax,0x4dfd654a
  40e01e:	dec    edx
  40e01f:	hlt    
  40e020:	js     0x40dfcf
  40e022:	stos   BYTE PTR es:[edi],al
  40e023:	lods   eax,DWORD PTR ds:[esi]
  40e024:	stc    
  40e025:	jo     0x40dffa
  40e027:	push   cs
  40e028:	xchg   ebp,eax
  40e029:	jbe    0x40dfb9
  40e02b:	jle    0x40e049
  40e02d:	popa   
  40e02e:	call   0x81f1a5c6
  40e033:	mov    bh,0xdc
  40e035:	cmp    eax,0xb2167f0d
  40e03a:	inc    ebp
  40e03b:	es dec ebp
  40e03d:	pop    edi
  40e03e:	aad    0x28
  40e040:	hlt    
  40e041:	pop    eax
  40e042:	mov    esp,0x15591347
  40e047:	xor    DWORD PTR [esi-0x7bc7283a],ecx
  40e04d:	test   al,0xd9
  40e04f:	pop    ss
  40e050:	mov    edi,0xb3e5bca5
  40e055:	xor    edi,DWORD PTR [eax]
  40e057:	jne    0x40e00b
  40e059:	loopne 0x40e001
  40e05b:	and    DWORD PTR [esi],0x40
  40e05e:	pushf  
  40e05f:	xchg   BYTE PTR ds:0xb4e7435a,dh
  40e065:	fcomi  st,st(5)
  40e067:	or     dh,BYTE PTR [edi-0x19dfec27]
  40e06d:	(bad)  
  40e06f:	inc    esp
  40e070:	sub    eax,0xaebb98a8
  40e075:	fbstp  TBYTE PTR [edx]
  40e077:	or     DWORD PTR ds:0x67603e89,ebp
  40e07d:	addr16 xor eax,0x9cb52d15
  40e083:	rcr    DWORD PTR [ecx-0x68d988ed],0xea
  40e08a:	pop    edi
  40e08b:	jp     0x40e06d
  40e08d:	or     eax,0x1261a3d8
  40e092:	and    bh,BYTE PTR [edx+0x22]
  40e095:	xchg   esi,eax
  40e096:	daa    
  40e097:	test   al,0x71
  40e099:	imul   ebp,ebp,0x9d93d09f
  40e09f:	and    eax,0x597147f6
  40e0a4:	fwait
  40e0a5:	push   ss
  40e0a6:	pop    es
  40e0a7:	inc    esi
  40e0a8:	jns    0x40e08e
  40e0aa:	fwait
  40e0ab:	rcr    BYTE PTR [eax],cl
  40e0ad:	das    
  40e0ae:	mov    cl,0x1f
  40e0b0:	sub    BYTE PTR [ebx],bh
  40e0b2:	jmp    0xd7092544
  40e0b7:	sub    eax,DWORD PTR [ebx+esi*1+0x1e]
  40e0bb:	push   cs
  40e0bc:	pop    esi
  40e0bd:	cmp    al,0x7e
  40e0bf:	or     BYTE PTR [edx-0x6b410b6d],cl
  40e0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c6:	cwde   
  40e0c7:	mov    ecx,0xf480ec44
  40e0cc:	pusha  
  40e0cd:	and    al,dl
  40e0cf:	test   eax,0xd9c836ab
  40e0d4:	jle    0x40e124
  40e0d6:	mov    dh,0xd3
  40e0d8:	pop    ss
  40e0d9:	aad    0xa7
  40e0db:	sbb    BYTE PTR [esi+ebp*8],al
  40e0de:	hlt    
  40e0df:	xor    al,0x2
  40e0e1:	jecxz  0x40e15f
  40e0e3:	(bad)  
  40e0e5:	cwde   
  40e0e6:	xor    esi,DWORD PTR [edx+ecx*4-0x53]
  40e0ea:	js     0x40e10e
  40e0ec:	pusha  
  40e0ed:	stc    
  40e0ee:	clc    
  40e0ef:	addr16 push ds
  40e0f1:	sbb    DWORD PTR [edi],eax
  40e0f3:	outs   dx,BYTE PTR ds:[esi]
  40e0f4:	cdq    
  40e0f5:	or     dl,bl
  40e0f7:	das    
  40e0f8:	aaa    
  40e0f9:	fiadd  DWORD PTR [eax+0xa]
  40e0fc:	xchg   ebx,eax
  40e0fd:	push   es
  40e0fe:	xor    bl,bh
  40e100:	xlat   BYTE PTR ds:[ebx]
  40e101:	inc    ebx
  40e102:	xor    bl,BYTE PTR [ebx+esi*1+0x22]
  40e106:	in     eax,dx
  40e107:	in     al,0x5e
  40e109:	inc    eax
  40e10a:	ins    BYTE PTR es:[edi],dx
  40e10b:	sub    ah,BYTE PTR [eax+0x129d53f1]
  40e111:	mov    esp,0x1d1375de
  40e116:	inc    edi
  40e117:	cmp    al,0xe
  40e119:	xchg   ebx,eax
  40e11a:	in     eax,dx
  40e11b:	cmp    eax,0xa4a618be
  40e120:	daa    
  40e121:	popf   
  40e122:	dec    esp
  40e123:	pusha  
  40e124:	cmp    cl,BYTE PTR [edx+0x8]
  40e127:	fist   DWORD PTR [eax]
  40e129:	mov    ecx,0x93e0216a
  40e12e:	out    0xf1,al
  40e130:	pop    ebx
  40e131:	mov    ebp,0xc80b2a4b
  40e136:	adc    ch,BYTE PTR [eax+ebx*8+0x1c]
  40e13a:	outs   dx,DWORD PTR ds:[esi]
  40e13b:	mov    edi,0xb4466566
  40e140:	push   0xffffff96
  40e142:	jb     0x40e0d7
  40e144:	and    eax,0xc6712cc6
  40e149:	lods   eax,DWORD PTR ds:[esi]
  40e14a:	mov    ds:0x3633924c,al
  40e14f:	push   0x8bd1c446
  40e154:	pushf  
  40e155:	ins    DWORD PTR es:[edi],dx
  40e156:	loop   0x40e142
  40e158:	mov    dl,0xbc
  40e15a:	mov    dh,0x69
  40e15c:	add    edx,DWORD PTR [edx+ebp*4-0x6a82c64a]
  40e163:	or     DWORD PTR [ecx+esi*4+0x6dc7b68b],0xffffff99
  40e16b:	inc    esp
  40e16c:	jle    0x40e17b
  40e16e:	in     al,dx
  40e16f:	push   edx
  40e170:	mov    ds:0xc669f23e,eax
  40e175:	ror    ebp,1
  40e177:	rcl    DWORD PTR [esi+ebx*1-0x5c353aa0],0x85
  40e17f:	mov    bh,0x41
  40e181:	cs mov eax,ds:0x2f53c54c
  40e188:	mov    edi,0xe3f9e7a9
  40e18d:	pop    ebx
  40e18e:	int    0x9e
  40e190:	lea    ebp,[esi-0x3dcef203]
  40e196:	push   0xffffffe8
  40e198:	stos   DWORD PTR es:[edi],eax
  40e199:	popa   
  40e19a:	mov    ebp,esp
  40e19c:	icebp  
  40e19d:	hlt    
  40e19e:	repnz add BYTE PTR [eax+0x7b],ah
  40e1a2:	push   ss
  40e1a3:	mov    ah,0x3
  40e1a5:	mov    edx,0xc5d0bdb5
  40e1aa:	inc    ebp
  40e1ab:	ins    BYTE PTR es:[edi],dx
  40e1ac:	sbb    BYTE PTR [eax-0x39b7682d],bh
  40e1b2:	aas    
  40e1b3:	add    esp,DWORD PTR [ebp-0x604e4e54]
  40e1b9:	adc    BYTE PTR [ebp-0x552fbe1c],cl
  40e1bf:	or     ebp,DWORD PTR fs:[ebx+0x675ff15b]
  40e1c6:	jmp    0x40e14b
  40e1c8:	repz sar WORD PTR [eax],1
  40e1cc:	mov    esp,0x2d376627
  40e1d1:	in     al,0xc0
  40e1d3:	xor    al,0x6a
  40e1d5:	test   al,0xda
  40e1d7:	xor    bh,BYTE PTR [esi+ecx*8-0x731a26b8]
  40e1de:	jg     0x40e218
  40e1e0:	mov    al,0xd8
  40e1e2:	int3   
  40e1e3:	clc    
  40e1e4:	sar    DWORD PTR [edx],cl
  40e1e6:	outs   dx,BYTE PTR ds:[esi]
  40e1e7:	pop    ss
  40e1e8:	and    DWORD PTR [ebp-0x705b9427],0x58
  40e1ef:	or     BYTE PTR [ecx-0x2d],bh
  40e1f2:	mov    esp,0x9b53291b
  40e1f7:	sub    al,0x27
  40e1f9:	dec    ecx
  40e1fa:	sbb    al,0x36
  40e1fc:	test   DWORD PTR [ecx-0x37],esi
  40e1ff:	jg     0x40e18d
  40e201:	ficom  WORD PTR [ebx+0x16468ce2]
  40e207:	nop
  40e208:	sbb    esi,DWORD PTR [ecx+edi*4-0x3dd6fcca]
  40e20f:	fld    QWORD PTR [ecx-0x36]
  40e212:	cmpxchg DWORD PTR [eax-0x1a],ebp
  40e216:	jecxz  0x40e22b
  40e218:	(bad)  
  40e219:	inc    BYTE PTR [esi+ebp*4+0x5872eb1b]
  40e220:	neg    DWORD PTR [esi-0x4ffec33a]
  40e226:	add    BYTE PTR [eax],al
  40e228:	adc    al,0x2b
  40e22a:	daa    
  40e22b:	jge    0x40e230
  40e22d:	retf   0x81a5
  40e230:	icebp  
  40e231:	xchg   al,cl
  40e233:	mov    al,0xff
  40e235:	shr    eax,0xfa
  40e238:	and    eax,0xe6f09f70
  40e23d:	push   0x8463fbd6
  40e242:	fmul   QWORD PTR [eax+0xaafc4f2]
  40e248:	stos   DWORD PTR es:[edi],eax
  40e249:	jne    0x40e1cc
  40e24b:	mov    bh,0x7
  40e24d:	mov    bh,0xc7
  40e24f:	inc    esi
  40e250:	sub    DWORD PTR [edi+edx*8],esi
  40e253:	jmp    0xe59f9391
  40e258:	pop    ecx
  40e259:	aas    
  40e25a:	rol    edi,0x5
  40e25d:	lods   eax,DWORD PTR ds:[esi]
  40e25e:	repnz pop ss
  40e260:	inc    esi
  40e261:	aaa    
  40e262:	or     eax,0x22f08c35
  40e267:	sahf   
  40e268:	inc    ebx
  40e269:	add    bh,BYTE PTR [ecx+0x380a261c]
  40e26f:	addr16 ss mul ch
  40e273:	xchg   cl,al
  40e275:	mov    al,0xc5
  40e277:	sbb    DWORD PTR [ebx-0x550b157b],0xc4e4ad11
  40e281:	pop    esp
  40e282:	mov    esp,0xcec10dcd
  40e287:	(bad)  
  40e288:	fild   QWORD PTR [esi]
  40e28a:	xchg   ebx,eax
  40e28b:	loop   0x40e2c9
  40e28d:	mov    ebp,0x87f54e19
  40e292:	js     0x40e30f
  40e294:	mov    edi,0x1df9ddd4
  40e299:	add    DWORD PTR ds:[edi-0x1182859b],ecx
  40e2a0:	pop    esi
  40e2a1:	cmp    DWORD PTR [ebx+0x3e],ebx
  40e2a4:	pop    ebp
  40e2a5:	sbb    ebx,DWORD PTR [ecx+0x4a31fda8]
  40e2ab:	and    edi,eax
  40e2ad:	ja     0x40e2f8
  40e2af:	mov    BYTE PTR [esi],ah
  40e2b1:	inc    ebx
  40e2b2:	pop    edx
  40e2b3:	jmp    0x40e327
  40e2b5:	ss adc eax,0x4d4c55c5
  40e2bb:	add    al,bh
  40e2bd:	xchg   bl,dh
  40e2bf:	xchg   BYTE PTR [esi],al
  40e2c1:	xchg   edi,eax
  40e2c2:	retf   0x3f5a
  40e2c5:	fistp  QWORD PTR [edi+0x14ddc0be]
  40e2cb:	and    dh,0x7b
  40e2ce:	or     eax,0xbedeb119
  40e2d3:	mov    gs,edi
  40e2d5:	in     al,dx
  40e2d6:	pop    edx
  40e2d7:	jmp    FWORD PTR [edx-0x1]
  40e2da:	adc    DWORD PTR [edi-0x76],0xa9a0cbe9
  40e2e1:	in     al,0xf4
  40e2e3:	add    dh,BYTE PTR [ecx-0x207e0de1]
  40e2e9:	test   esp,edx
  40e2eb:	mov    ah,0x31
  40e2ed:	sub    eax,0x33337e81
  40e2f2:	xor    al,0x35
  40e2f4:	ins    BYTE PTR es:[edi],dx
  40e2f5:	push   0xfffffff4
  40e2f7:	push   ebx
  40e2f8:	test   BYTE PTR [esi-0x47],dh
  40e2fb:	or     esp,DWORD PTR [eax]
  40e2fd:	dec    esi
  40e2fe:	pop    edi
  40e2ff:	mov    eax,0xf285a33b
  40e304:	ins    BYTE PTR es:[edi],dx
  40e305:	ret    
  40e306:	(bad)  
  40e308:	fcom   QWORD PTR [esi-0x3d]
  40e30b:	jbe    0x40e32e
  40e30d:	(bad)  
  40e30e:	loopne 0x40e2f5
  40e310:	and    ebx,DWORD PTR [eax-0x5ae561f5]
  40e316:	rcr    BYTE PTR [ebx+0x6cb398be],0x4a
  40e31d:	cmc    
  40e31e:	jne    0x40e2a5
  40e320:	ins    DWORD PTR es:[edi],dx
  40e321:	shl    DWORD PTR fs:[edi-0x77542f9a],1
  40e328:	push   esp
  40e329:	sub    DWORD PTR ss:[ecx],0xb80e865
  40e330:	sar    DWORD PTR [eax-0x38],cl
  40e333:	jno    0x40e2b9
  40e335:	sbb    al,0xed
  40e337:	mov    ds:0x99b6b809,al
  40e33c:	loope  0x40e2be
  40e33e:	push   ebx
  40e33f:	test   DWORD PTR [esp+eax*2+0x41],esp
  40e343:	xchg   edi,eax
  40e344:	scas   eax,DWORD PTR es:[edi]
  40e345:	jns    0x40e32d
  40e347:	imul   esp,DWORD PTR [eax-0x1f],0x35
  40e34b:	push   ebx
  40e34c:	je     0x40e355
  40e34e:	fsubp  st(1),st
  40e350:	adc    DWORD PTR [eax+0x1d92d980],edi
  40e356:	(bad)  
  40e357:	(bad)  
  40e358:	imul   esi,DWORD PTR [ebp+0x14],0xdf297a11
  40e35f:	or     al,0xa
  40e361:	dec    ebx
  40e362:	out    dx,eax
  40e363:	push   edi
  40e364:	jo     0x40e363
  40e366:	mov    eax,ds:0x39ae1949
  40e36b:	add    DWORD PTR ds:0x8dcd031f,ebx
  40e371:	int    0xf0
  40e373:	fcmovnb st,st(4)
  40e375:	push   ecx
  40e376:	(bad)  
  40e377:	sub    dl,BYTE PTR [ebx+eax*4+0x6b]
  40e37b:	fs jecxz 0x40e3fb
  40e37e:	or     al,0x3f
  40e380:	mov    ds:0xc39a02d0,eax
  40e385:	pushf  
  40e386:	fcmovnbe st,st(1)
  40e388:	mov    eax,ds:0x4af53e44
  40e38d:	sti    
  40e38e:	jbe    0x40e407
  40e390:	ins    DWORD PTR es:[edi],dx
  40e391:	jge    0x40e357
  40e393:	pop    edx
  40e394:	pop    esi
  40e395:	cwde   
  40e396:	sub    BYTE PTR [edi-0xc],bl
  40e399:	mov    bl,0xe
  40e39b:	adc    esi,edi
  40e39d:	imul   ebp,DWORD PTR [esi+ecx*2+0x4a],0x28
  40e3a2:	adc    dl,bh
  40e3a4:	dec    eax
  40e3a5:	push   ecx
  40e3a6:	adc    BYTE PTR [edx+0x44a12f2],bh
  40e3ac:	mov    al,ds:0xc767eeac
  40e3b1:	push   0x7644cf83
  40e3b6:	(bad)  
  40e3b7:	ja     0x40e34b
  40e3b9:	pop    ebp
  40e3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3bb:	push   0xffffffd3
  40e3bd:	push   DWORD PTR gs:[eax-0x53004116]
  40e3c4:	mov    ch,0xa7
  40e3c6:	je     0x40e3a9
  40e3c8:	hlt    
  40e3c9:	mov    dh,0xfb
  40e3cb:	in     eax,0x43
  40e3cd:	mov    ah,BYTE PTR [esi+eiz*1]
  40e3d0:	add    eax,0xdce0ccb1
  40e3d5:	pushf  
  40e3d6:	xchg   edx,eax
  40e3d7:	push   ds
  40e3d8:	xor    eax,0x37505bd3
  40e3dd:	aaa    
  40e3de:	mov    cl,0x15
  40e3e0:	jmp    0xa45b:0x63c7e0bd
  40e3e7:	aas    
  40e3e8:	cmp    dh,bh
  40e3ea:	mov    dh,0x55
  40e3ec:	sti    
  40e3ed:	jo     0x40e389
  40e3ef:	pop    es
  40e3f0:	add    ch,dl
  40e3f2:	mov    eax,0x8c7c7c5e
  40e3f7:	xchg   ebp,eax
  40e3f8:	dec    edx
  40e3f9:	or     dl,BYTE PTR [esp+ecx*4+0x2e]
  40e3fd:	sub    bh,BYTE PTR [eax-0x12]
  40e400:	inc    edi
  40e402:	je     0x40e40c
  40e404:	call   0x31c:0xfaf7a80d
  40e40b:	pop    edx
  40e40c:	inc    ebx
  40e40d:	inc    ecx
  40e40e:	pop    ds
  40e40f:	mov    edx,0x40a4243d
  40e414:	repnz (bad) [ebp+0x34]
  40e418:	cmp    cl,BYTE PTR [edx-0x59c91b9]
  40e41e:	ja     0x40e468
  40e420:	clc    
  40e421:	lock aaa 
  40e423:	push   ebx
  40e424:	dec    edi
  40e425:	outs   dx,DWORD PTR ds:[esi]
  40e426:	loop   0x40e412
  40e428:	fisub  WORD PTR [esi]
  40e42a:	test   eax,0xf2974f92
  40e42f:	cmp    BYTE PTR [edx-0x78],al
  40e432:	int3   
  40e433:	ins    DWORD PTR es:[edi],dx
  40e434:	js     0x40e44c
  40e436:	retf   0xf681
  40e439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e43a:	in     al,dx
  40e43b:	sbb    eax,0x90c2522b
  40e440:	push   edx
  40e441:	in     eax,dx
  40e442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e443:	pop    edx
  40e444:	jp     0x40e3ec
  40e446:	popf   
  40e447:	cmp    BYTE PTR [eax+0x1e],ch
  40e44a:	into   
  40e44b:	mov    eax,ds:0xf634c2c8
  40e450:	xchg   ecx,eax
  40e451:	and    esp,DWORD PTR [eax+edi*8-0x63]
  40e455:	adc    al,0xd1
  40e457:	sti    
  40e458:	jbe    0x40e436
  40e45a:	pop    esp
  40e45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e45c:	loopne 0x40e4d5
  40e45e:	dec    esp
  40e45f:	sub    al,0x1b
  40e461:	sub    BYTE PTR [edi+0x4d],al
  40e464:	or     ah,cl
  40e466:	xchg   ecx,eax
  40e467:	jbe    0x40e4d2
  40e469:	jle    0x40e3f0
  40e46b:	xchg   edx,eax
  40e46c:	push   edi
  40e46d:	push   0xfffffff0
  40e46f:	ja     0x40e41e
  40e471:	pop    es
  40e472:	(bad)  [edx+0x2b9dfbf8]
  40e478:	je     0x40e45a
  40e47a:	or     DWORD PTR [ecx+ebp*2+0x8],0x11
  40e47f:	or     DWORD PTR [ecx],0xd962744
  40e485:	rcl    DWORD PTR [edx],0xda
  40e488:	int3   
  40e489:	scas   al,BYTE PTR es:[edi]
  40e48a:	out    0xc5,eax
  40e48c:	add    al,0x90
  40e48e:	xor    BYTE PTR [eax],bh
  40e490:	xor    eax,0xcc30787e
  40e495:	ins    BYTE PTR es:[edi],dx
  40e496:	rcr    DWORD PTR [eax+0x2c],cl
  40e499:	add    al,0xfa
  40e49b:	sub    al,0xf6
  40e49d:	pop    ds
  40e49e:	or     DWORD PTR [edx-0x110b2bef],edi
  40e4a4:	(bad)  
  40e4a5:	mov    ds:0xf927631e,eax
  40e4aa:	inc    ebp
  40e4ab:	mov    esi,DWORD PTR [esp+edi*2-0x6aff454a]
  40e4b2:	cmp    al,0xd5
  40e4b4:	pop    ebx
  40e4b5:	outs   dx,DWORD PTR ds:[esi]
  40e4b6:	fcmovbe st,st(4)
  40e4b8:	retf   
  40e4b9:	mov    cl,0xcf
  40e4bb:	mov    esp,0xe9a1077b
  40e4c0:	(bad)  
  40e4c1:	je     0x40e508
  40e4c3:	cmp    al,0xcb
  40e4c5:	or     ecx,DWORD PTR [ecx+0x1c]
  40e4c8:	inc    edi
  40e4c9:	gs pop es
  40e4cb:	int    0xff
  40e4cd:	dec    ebx
  40e4ce:	out    dx,al
  40e4cf:	out    dx,eax
  40e4d0:	rdpmc  
  40e4d2:	inc    esi
  40e4d3:	xor    BYTE PTR [edi+0x66],0x78
  40e4d7:	xor    eax,DWORD PTR [eax-0x868f695]
  40e4dd:	scas   al,BYTE PTR es:[edi]
  40e4de:	or     al,0x7c
  40e4e0:	out    0xed,eax
  40e4e2:	xlat   BYTE PTR ds:[ebx]
  40e4e3:	fsubr  DWORD PTR [edi+ebx*8-0x6ff719f9]
  40e4ea:	int3   
  40e4eb:	xchg   ebp,eax
  40e4ec:	add    eax,0xf4672313
  40e4f1:	dec    eax
  40e4f2:	xlat   BYTE PTR ds:[ebx]
  40e4f3:	imul   ecx,DWORD PTR [edi],0xadb9474b
  40e4f9:	pop    ecx
  40e4fa:	lea    eax,[esi+eiz*1-0x582ca1a8]
  40e501:	adc    BYTE PTR [ebx-0x64],ah
  40e504:	bound  eax,QWORD PTR [edi]
  40e506:	imul   ebx,DWORD PTR [ebx+ecx*1+0x19],0xd77ae7c0
  40e50e:	mov    ds:0xeb415ed4,al
  40e513:	pop    ss
  40e514:	enter  0x5fc2,0xb9
  40e518:	je     0x40e512
  40e51a:	push   esi
  40e51b:	push   0xffffffe9
  40e51d:	mov    dl,0x8f
  40e51f:	jb     0x40e56c
  40e521:	push   ds
  40e522:	jb     0x40e51d
  40e524:	mov    eax,ds:0x1543bf74
  40e529:	inc    ebx
  40e52a:	popa   
  40e52b:	sub    BYTE PTR [edi],bl
  40e52d:	push   edi
  40e52e:	lea    eax,[eax-0x40]
  40e531:	push   esp
  40e532:	jmp    0x37e43198
  40e537:	adc    BYTE PTR [ebx+0x13efdca2],bl
  40e53d:	clc    
  40e53e:	dec    ecx
  40e53f:	hlt    
  40e540:	scas   eax,DWORD PTR es:[edi]
  40e541:	fild   DWORD PTR [ebx-0x1358448d]
  40e547:	inc    edi
  40e548:	or     BYTE PTR [edx+0x1d],dl
  40e54b:	mov    esi,0xfeeb1c06
  40e550:	mov    bl,0xce
  40e552:	mov    eax,ds:0x97218c71
  40e557:	fisub  DWORD PTR [ecx]
  40e559:	cs or  al,0xfe
  40e55c:	mov    DWORD PTR [edi-0x7b46423f],ebx
  40e562:	add    ebp,eax
  40e564:	retf   
  40e565:	pop    ecx
  40e566:	(bad)  
  40e568:	addr16 xor al,0x91
  40e56b:	cmc    
  40e56c:	dec    edi
  40e56d:	(bad)  
  40e56e:	xchg   esi,eax
  40e56f:	push   ss
  40e570:	inc    edx
  40e571:	jmp    DWORD PTR [edi]
  40e573:	shr    BYTE PTR [ebp+eiz*4-0x15],0xd7
  40e578:	popa   
  40e579:	mov    edi,DWORD PTR [edi-0x2c14a881]
  40e57f:	and    bh,bh
  40e581:	inc    DWORD PTR [eax+eiz*8+0x41a597e5]
  40e588:	mov    DWORD PTR [edi-0x58],ecx
  40e58b:	push   edi
  40e58c:	pop    esi
  40e58d:	ret    
  40e58e:	mov    bh,0xe6
  40e590:	pop    esi
  40e591:	inc    ecx
  40e592:	loopne 0x40e5b3
  40e594:	add    BYTE PTR [ebx],cl
  40e596:	jecxz  0x40e54b
  40e598:	jno    0x40e5d8
  40e59a:	shr    BYTE PTR [ecx+0x3240c6a1],cl
  40e5a0:	sti    
  40e5a1:	xchg   ebx,ebx
  40e5a3:	(bad)  
  40e5a5:	cdq    
  40e5a6:	add    eax,0x77d76cbd
  40e5ab:	dec    eax
  40e5ac:	jle    0x40e54c
  40e5ae:	shr    al,cl
  40e5b0:	enter  0xa96b,0x3d
  40e5b4:	nop
  40e5b5:	xchg   DWORD PTR [esi+0x37],ecx
  40e5b8:	mov    dl,0xec
  40e5ba:	cmp    ecx,eax
  40e5bc:	add    al,0xfb
  40e5be:	jo     0x40e631
  40e5c0:	mov    cl,0x52
  40e5c2:	sub    ebp,eax
  40e5c4:	in     al,dx
  40e5c5:	sbb    eax,0x587d72d6
  40e5ca:	adc    dl,cl
  40e5cc:	daa    
  40e5cd:	ss add eax,0xff82911f
  40e5d3:	scas   eax,DWORD PTR es:[edi]
  40e5d4:	add    al,0x7f
  40e5d6:	lahf   
  40e5d7:	push   0xffffffe7
  40e5d9:	cmp    BYTE PTR [esi+0x6e654115],ch
  40e5df:	and    cl,BYTE PTR [edx+0x1c]
  40e5e2:	in     eax,dx
  40e5e3:	pop    ebx
  40e5e4:	sub    ah,BYTE PTR [esi]
  40e5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e7:	mov    DWORD PTR [ebp-0x1a843f91],edi
  40e5ed:	(bad)  
  40e5ee:	in     al,dx
  40e5ef:	xchg   edx,eax
  40e5f0:	jbe    0x40e5ae
  40e5f2:	jae    0x40e580
  40e5f4:	hlt    
  40e5f5:	push   0xcdc2a42c
  40e5fa:	ins    BYTE PTR es:[edi],dx
  40e5fb:	ret    0xacac
  40e5fe:	imul   eax
  40e600:	or     BYTE PTR [eax-0x400a48cf],dl
  40e606:	dec    eax
  40e607:	jnp    0x40e5de
  40e609:	and    eax,0x31d8a9e2
  40e60e:	sbb    eax,0x3ab283d6
  40e613:	cmp    ebx,esi
  40e615:	sbb    esp,ebp
  40e617:	jge    0x40e5be
  40e619:	daa    
  40e61a:	imul   edi,DWORD PTR [ebx+0x60c45621],0x7bb4f663
  40e624:	sub    al,0x50
  40e626:	and    BYTE PTR [edi+edi*2+0x2f],ah
  40e62a:	mov    eax,0x52dc3f95
  40e62f:	adc    BYTE PTR [ecx+0x5952ac37],0x55
  40e636:	(bad)  
  40e638:	ss out 0x3b,al
  40e63b:	or     bh,BYTE PTR [edi+0x36]
  40e63e:	add    ch,BYTE PTR [ebp+0x46]
  40e641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e642:	outs   dx,BYTE PTR ds:[esi]
  40e643:	mov    cl,0x9c
  40e645:	in     al,dx
  40e646:	inc    esp
  40e647:	shl    dl,cl
  40e649:	std    
  40e64a:	mov    al,ds:0x4797f32c
  40e64f:	xor    BYTE PTR [edx],bh
  40e651:	xor    al,0x98
  40e653:	and    cl,BYTE PTR [edi]
  40e655:	adc    DWORD PTR gs:[esi],esp
  40e658:	in     al,dx
  40e659:	(bad)  
  40e65a:	scas   al,BYTE PTR es:[edi]
  40e65b:	mov    eax,0x29159271
  40e660:	stc    
  40e661:	mov    DWORD PTR [edx],esi
  40e663:	add    dl,BYTE PTR [ecx+0x7d]
  40e666:	(bad)  
  40e667:	cs fcmovb st,st(3)
  40e66a:	pop    ecx
  40e66b:	jae    0x98251bb2
  40e671:	adc    al,0x11
  40e673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e674:	test   al,0x4a
  40e676:	(bad)  
  40e678:	outs   dx,WORD PTR fs:[esi]
  40e67b:	lock mov al,ds:0x673d93f3
  40e681:	add    eax,0x733c9609
  40e686:	xchg   ebp,eax
  40e687:	xchg   esi,eax
  40e688:	loope  0x40e69b
  40e68a:	sbb    cl,BYTE PTR [ecx-0x4cba11a6]
  40e690:	hlt    
  40e691:	hlt    
  40e692:	bound  ebx,QWORD PTR [ebx-0x46acadd9]
  40e698:	mov    ebx,0x2990843c
  40e69d:	sub    esi,DWORD PTR [esp+edi*1-0x6430099]
  40e6a4:	and    al,0x8a
  40e6a6:	pusha  
  40e6a7:	out    0x66,eax
  40e6a9:	dec    edx
  40e6aa:	aam    0x13
  40e6ac:	jg     0x40e6e4
  40e6ae:	pop    edx
  40e6af:	pushf  
  40e6b0:	adc    eax,0x8dc2fad2
  40e6b5:	adc    BYTE PTR [ebx-0x7bd8abb3],bh
  40e6bb:	fs xchg esi,eax
  40e6bd:	call   0x4d4a:0xccc74395
  40e6c4:	imul   esi
  40e6c6:	enter  0x966a,0x20
  40e6ca:	rdmsr  
  40e6cc:	ror    ebx,1
  40e6ce:	stos   BYTE PTR es:[edi],al
  40e6cf:	cmp    eax,0x86309810
  40e6d4:	daa    
  40e6d5:	add    DWORD PTR [eax],ebp
  40e6d7:	outs   dx,BYTE PTR ds:[esi]
  40e6d8:	(bad)
  40e6dc:	mov    dh,0xb
  40e6de:	jno    0x40e747
  40e6e0:	add    eax,0x49c258ca
  40e6e5:	bound  esi,QWORD PTR [ebp+0x3f47dfd3]
  40e6eb:	daa    
  40e6ec:	and    dh,BYTE PTR [ebx]
  40e6ee:	in     eax,0x52
  40e6f0:	jae    0x40e745
  40e6f2:	dec    ebp
  40e6f3:	mov    dl,0xe
  40e6f5:	push   edi
  40e6f6:	nop
  40e6f7:	mov    ds:0xf9bafc0e,eax
  40e6fc:	dec    edi
  40e6fd:	repz dec esp
  40e6ff:	adc    BYTE PTR [eax-0x5a33e240],dl
  40e705:	lea    edi,[edx+0x4e]
  40e708:	mov    bl,0x58
  40e70a:	(bad)  
  40e70b:	repz adc ax,0xa0ae
  40e710:	jg     0x40e6e7
  40e712:	rep lods eax,DWORD PTR ds:[esi]
  40e714:	rcl    cl,cl
  40e716:	xor    eax,0x38ae50a8
  40e71b:	ficom  DWORD PTR [edx+0x5c23f02c]
  40e721:	mov    ds:0xaf47a140,eax
  40e726:	push   0x97d1b73f
  40e72b:	dec    ecx
  40e72c:	clc    
  40e72d:	and    al,BYTE PTR [edi]
  40e72f:	jle    0x40e780
  40e731:	pop    edx
  40e732:	push   es
  40e733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e734:	loope  0x40e720
  40e736:	push   0x6077c89f
  40e73b:	aad    0xf5
  40e73d:	mov    WORD PTR [edi+0x61],cs
  40e740:	push   esp
  40e741:	jge    0x40e6df
  40e743:	mov    ebp,0xb5fd0009
  40e748:	sbb    DWORD PTR [ebx-0x1f4fab5b],edi
  40e74e:	sbb    ch,BYTE PTR [esi+0x2a]
  40e751:	inc    edi
  40e752:	lahf   
  40e753:	pop    esi
  40e754:	fs mov ebx,es
  40e757:	dec    ecx
  40e758:	cld    
  40e759:	repnz push esp
  40e75b:	enter  0x9a06,0x61
  40e75f:	aaa    
  40e760:	jg     0x40e6ed
  40e762:	sbb    bl,BYTE PTR [ebx+0x17056d75]
  40e768:	addr16 popa 
  40e76a:	add    ch,0xcd
  40e76d:	nop
  40e76e:	dec    BYTE PTR [edx+0x7fee944f]
  40e774:	xchg   edi,eax
  40e775:	sub    BYTE PTR [edx],al
  40e777:	and    BYTE PTR [ecx],0xcf
  40e77a:	push   edx
  40e77b:	fiadd  DWORD PTR [edi-0x5a3a70d2]
  40e781:	pop    ss
  40e782:	fsub   QWORD PTR [edx-0x26]
  40e785:	and    ebx,DWORD PTR [ecx-0x5787a999]
  40e78b:	dec    edi
  40e78c:	daa    
  40e78d:	out    dx,al
  40e78e:	(bad)
  40e791:	dec    ecx
  40e792:	pop    ebp
  40e793:	jl     0x40e769
  40e795:	pop    ebx
  40e796:	xor    eax,0xfb3e934
  40e79b:	push   ebp
  40e79c:	ins    BYTE PTR es:[edi],dx
  40e79d:	popf   
  40e79e:	mov    esp,0xfd06ca6d
  40e7a3:	push   ebp
  40e7a4:	push   eax
  40e7a5:	push   esi
  40e7a6:	cs hlt 
  40e7a8:	xchg   BYTE PTR [esi-0x654ea6cd],dh
  40e7ae:	ret    
  40e7af:	mov    ah,ah
  40e7b1:	dec    ebx
  40e7b2:	in     eax,0x1
  40e7b4:	adc    eax,0xd9f2977e
  40e7b9:	xor    ch,BYTE PTR [esi-0x69]
  40e7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7bd:	add    eax,0x9d85e6
  40e7c2:	int3   
  40e7c3:	fs mov eax,0x361ea427
  40e7c9:	mov    al,ds:0xdc3eb223
  40e7ce:	xor    bh,dl
  40e7d0:	packssdw mm1,mm3
  40e7d3:	jecxz  0x40e846
  40e7d5:	rol    BYTE PTR ds:0x5d4db865,cl
  40e7db:	inc    DWORD PTR [ecx-0x6ae26457]
  40e7e1:	leave  
  40e7e2:	mov    al,ds:0x86d8c100
  40e7e7:	fcomp  QWORD PTR [edx*8+0x47e372f5]
  40e7ee:	int3   
  40e7ef:	stc    
  40e7f0:	or     DWORD PTR [edx-0x658985cd],esp
  40e7f6:	mov    ebp,ecx
  40e7f8:	clc    
  40e7f9:	das    
  40e7fa:	out    0x58,eax
  40e7fc:	pop    eax
  40e7fd:	inc    ebp
  40e7fe:	test   DWORD PTR [edi+0xa],esi
  40e801:	mov    ds:0x512d3e8a,al
  40e806:	lahf   
  40e807:	or     DWORD PTR [ecx],esi
  40e809:	dec    esi
  40e80a:	cmp    BYTE PTR [edi-0x2ce4c75b],bh
  40e810:	pop    edi
  40e811:	inc    ebp
  40e812:	sub    al,0x8e
  40e814:	pop    ecx
  40e815:	mov    DWORD PTR [esi],ebx
  40e817:	je     0x40e801
  40e819:	clc    
  40e81a:	imul   eax,DWORD PTR [edx],0x1e7dfa1c
  40e820:	jno    0x40e83f
  40e822:	outs   dx,BYTE PTR ds:[esi]
  40e823:	push   esi
  40e824:	adc    ebx,DWORD PTR [ebx]
  40e826:	ja     0x40e84e
  40e828:	xlat   BYTE PTR ds:[ebx]
  40e829:	jecxz  0x40e800
  40e82b:	mov    edx,0xa733358e
  40e830:	clc    
  40e831:	dec    DWORD PTR [ebx+eax*1-0x686408b0]
  40e838:	mov    ch,0x1d
  40e83a:	dec    edx
  40e83b:	test   al,0xc3
  40e83d:	jbe    0x40e8a3
  40e83f:	fild   DWORD PTR [ecx-0x63]
  40e842:	or     ah,BYTE PTR [ebx]
  40e844:	inc    esi
  40e845:	jns    0x40e82c
  40e847:	push   es
  40e848:	(bad)  
  40e849:	cmc    
  40e84a:	leave  
  40e84b:	inc    eax
  40e84c:	int3   
  40e84d:	mov    ebx,0x2aed668f
  40e852:	fmul   QWORD PTR [edx]
  40e854:	js     0x40e80e
  40e856:	imul   edx,DWORD PTR [ebx+0x53],0x4562580e
  40e85d:	mov    edi,0xee6e2a66
  40e862:	test   DWORD PTR [esi],eax
  40e864:	out    0x8b,al
  40e866:	rol    BYTE PTR [eax],0x94
  40e869:	or     al,0xea
  40e86b:	in     al,dx
  40e86c:	lods   eax,DWORD PTR ds:[esi]
  40e86d:	mov    bh,0x76
  40e86f:	mov    esi,0xa57d4e21
  40e874:	xor    edi,DWORD PTR [edx+0x12]
  40e877:	pop    ebx
  40e878:	adc    eax,0x697755ed
  40e87d:	jo     0x40e8f1
  40e87f:	cld    
  40e880:	fcom   QWORD PTR [eax]
  40e882:	push   edx
  40e883:	mov    eax,ds:0x7d1597e1
  40e888:	add    dl,BYTE PTR [ebp-0x6910d7cf]
  40e88e:	es pushf 
  40e890:	push   eax
  40e891:	inc    edi
  40e892:	(bad)  
  40e893:	fdiv   DWORD PTR [eax-0x6e]
  40e896:	(bad)  
  40e898:	add    al,0xb3
  40e89a:	sub    dl,BYTE PTR [eax-0x3d]
  40e89d:	or     BYTE PTR [eax-0x5e],al
  40e8a0:	js     0x40e881
  40e8a2:	jne    0x40e8e3
  40e8a4:	sub    BYTE PTR [esi+edx*2+0x2119c06b],ah
  40e8ab:	ror    BYTE PTR [ebx],0xe5
  40e8ae:	shl    DWORD PTR [ebp-0x7fe28b44],cl
  40e8b4:	adc    al,0xc8
  40e8b6:	ins    BYTE PTR es:[edi],dx
  40e8b7:	dec    edi
  40e8b8:	cs or  eax,edx
  40e8bb:	imul   ebx,DWORD PTR [edi],0xffffffaa
  40e8be:	mov    dh,0x13
  40e8c0:	in     al,dx
  40e8c1:	stos   BYTE PTR es:[edi],al
  40e8c2:	or     ebx,edi
  40e8c4:	mov    es,WORD PTR [ecx-0x3f]
  40e8c7:	inc    ecx
  40e8c8:	pop    ss
  40e8c9:	mov    bl,0xf6
  40e8cb:	mov    ebx,0xdc25c24a
  40e8d0:	pop    es
  40e8d1:	mov    DWORD PTR [ebx-0x37],esp
  40e8d4:	sub    al,BYTE PTR [edx-0x3fbc6fce]
  40e8da:	scas   al,BYTE PTR es:[edi]
  40e8db:	jmp    0x24e89488
  40e8e0:	xchg   edi,eax
  40e8e1:	mov    ch,0xeb
  40e8e3:	xor    al,dl
  40e8e5:	sub    ah,BYTE PTR [esp+esi*1]
  40e8e8:	dec    esp
  40e8e9:	iret   
  40e8ea:	push   ebp
  40e8eb:	xlat   BYTE PTR ds:[ebx]
  40e8ec:	nop
  40e8ed:	fild   WORD PTR [edi-0x45f2b806]
  40e8f3:	xlat   BYTE PTR ds:[ebx]
  40e8f4:	and    eax,0xdf99e7e7
  40e8f9:	punpcklwd mm2,DWORD PTR [esi-0x3945adb9]
  40e900:	mov    al,ds:0x3441cdd8
  40e905:	or     BYTE PTR [eax+0x3180bf12],0x17
  40e90c:	add    BYTE PTR [ecx+0x17499d44],0x59
  40e913:	jne    0x40e900
  40e915:	or     eax,0xb2d7fdb
  40e91a:	push   ebx
  40e91b:	stos   DWORD PTR es:[edi],eax
  40e91c:	mov    gs:0x4813233e,al
  40e922:	xchg   BYTE PTR [edi+0x59a8677c],ch
  40e928:	xor    al,0x6f
  40e92a:	test   eax,0x1bcbe773
  40e92f:	fwait
  40e930:	call   0x8955e08e
  40e935:	xchg   ecx,eax
  40e936:	popa   
  40e937:	ret    0xfedf
  40e93a:	sub    BYTE PTR [eax+0x7d],bl
  40e93d:	jg     0x40e922
  40e93f:	xchg   ebp,eax
  40e940:	shl    BYTE PTR [ecx-0x2155ecb0],0x73
  40e947:	sbb    dh,dl
  40e949:	adc    al,0x38
  40e94b:	inc    ecx
  40e94c:	push   edi
  40e94d:	or     bl,al
  40e94f:	mov    ebp,DWORD PTR [edi+0x1d]
  40e952:	adc    al,0xc2
  40e954:	mov    ds:0xcb88cad8,eax
  40e959:	jo     0x40e958
  40e95b:	and    al,0x80
  40e95d:	push   esi
  40e95e:	and    esi,ecx
  40e960:	cmp    bh,BYTE PTR [esi-0x60]
  40e963:	shl    DWORD PTR [ebx+0x72],0x91
  40e967:	sti    
  40e968:	xor    ebx,DWORD PTR [edi-0x3fcca436]
  40e96e:	pop    ecx
  40e96f:	push   esp
  40e970:	pop    esp
  40e971:	mov    dl,ch
  40e973:	jno    0x40e90a
  40e975:	xchg   esi,eax
  40e976:	out    dx,eax
  40e977:	test   eax,0x1df42052
  40e97c:	jmp    0x609b:0x8f15f193
  40e983:	pop    edi
  40e984:	adc    ah,BYTE PTR [edi]
  40e986:	es int 0xfd
  40e989:	stc    
  40e98a:	adc    edi,DWORD PTR [eax+esi*2]
  40e98d:	(bad)  
  40e98e:	inc    esi
  40e98f:	cmp    al,0x2b
  40e991:	arpl   WORD PTR [ebp-0xb],dx
  40e994:	add    edx,DWORD PTR [ecx+0x20a4bf68]
  40e99a:	mov    edi,0x8c956e62
  40e99f:	xor    DWORD PTR [ebp+0x3d],esp
  40e9a2:	jo     0x40e944
  40e9a4:	(bad)  
  40e9a5:	fstp   QWORD PTR [eax]
  40e9a7:	xchg   esp,eax
  40e9a8:	mov    bh,0xcb
  40e9aa:	dec    ecx
  40e9ab:	mov    edx,0xa6360e06
  40e9b0:	shl    DWORD PTR [ecx+0x172073fc],1
  40e9b6:	or     esp,DWORD PTR [ebp-0x1fb70b19]
  40e9bc:	sar    DWORD PTR [ecx],0x65
  40e9bf:	leave  
  40e9c0:	popf   
  40e9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c2:	xchg   ebp,eax
  40e9c3:	daa    
  40e9c4:	sbb    edx,edi
  40e9c6:	js     0x40e970
  40e9c8:	xchg   esp,eax
  40e9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ca:	aas    
  40e9cb:	jno    0x40e9e8
  40e9cd:	xor    BYTE PTR [ecx-0x15ee11a],dh
  40e9d3:	add    esi,DWORD PTR [esp+ecx*4+0xf]
  40e9d7:	int3   
  40e9d8:	jl     0x40ea49
  40e9da:	dec    esp
  40e9db:	jnp    0x40e988
  40e9dd:	cmp    dl,BYTE PTR [ebx+eax*8]
  40e9e0:	mov    edi,0x1b507b0b
  40e9e5:	add    eax,0xbc34e5d7
  40e9ea:	shl    DWORD PTR [edi+0x1e],cl
  40e9ed:	inc    edx
  40e9ee:	and    BYTE PTR [ebx+0x7b067c36],ah
  40e9f4:	inc    ecx
  40e9f5:	cmp    al,BYTE PTR [ecx-0x63]
  40e9f8:	cli    
  40e9f9:	mov    cl,0x8d
  40e9fb:	sbb    eax,0x448c6cca
  40ea00:	xchg   bh,dh
  40ea02:	adc    BYTE PTR [esi],ch
  40ea04:	sahf   
  40ea05:	xchg   ecx,eax
  40ea06:	xchg   DWORD PTR [ecx],ebp
  40ea08:	pop    eax
  40ea09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea0a:	or     ebx,ecx
  40ea0c:	addr16 pop ebp
  40ea0e:	cld    
  40ea0f:	sub    BYTE PTR ds:0xf237a9d3,al
  40ea15:	cmp    BYTE PTR [eax],dh
  40ea17:	dec    edi
  40ea18:	test   ch,bh
  40ea1a:	mov    esp,DWORD PTR [eax-0x4c]
  40ea1d:	loop   0x40ea7c
  40ea1f:	sbb    DWORD PTR ds:0xb8352c5e,edx
  40ea25:	fsubr  st(2),st
  40ea27:	aam    0xb8
  40ea29:	inc    ecx
  40ea2a:	inc    ecx
  40ea2b:	xchg   edx,eax
  40ea2c:	pop    edx
  40ea2d:	jg     0x40ea4f
  40ea2f:	jo     0x40e9b8
  40ea31:	in     al,dx
  40ea32:	cmp    eax,ebp
  40ea34:	adc    eax,0x449ccb96
  40ea39:	sysexit 
  40ea3b:	bound  ebx,QWORD PTR [ebx]
  40ea3d:	mov    edx,0xea26dd5e
  40ea42:	pop    ds
  40ea43:	pop    ecx
  40ea44:	pop    ds
  40ea45:	loopne 0x40e9d9
  40ea47:	cmp    DWORD PTR [esi],esi
  40ea49:	and    al,BYTE PTR [ecx]
  40ea4b:	jno    0x40ea41
  40ea4d:	push   0x92a3551e
  40ea52:	sbb    ebp,DWORD PTR [ebx+edx*1+0x4e76445e]
  40ea59:	mov    dh,0xa6
  40ea5b:	ss es push edi
  40ea5e:	sub    dl,bh
  40ea60:	push   edi
  40ea61:	mov    cl,0xd0
  40ea63:	or     eax,0x368e6ee5
  40ea68:	int3   
  40ea69:	inc    ecx
  40ea6a:	in     eax,dx
  40ea6b:	adc    al,0xa
  40ea6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea6e:	lahf   
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ds:0xbe6738f7,al
  40ea75:	std    
  40ea76:	adc    ah,bl
  40ea78:	pop    ecx
  40ea79:	loop   0x40eaaa
  40ea7b:	pop    edi
  40ea7c:	jecxz  0x40ea34
  40ea7e:	(bad)  
  40ea7f:	aam    0x2a
  40ea81:	ja     0x40eafd
  40ea83:	xor    al,0xb0
  40ea85:	jl     0x40ea37
  40ea87:	inc    edx
  40ea88:	cmp    eax,0x6b28719b
  40ea8d:	leave  
  40ea8e:	or     BYTE PTR [edx+0x27130415],bl
  40ea94:	es xchg ebp,eax
  40ea96:	ror    dl,1
  40ea98:	push   esi
  40ea99:	(bad)  
  40ea9a:	retf   
  40ea9b:	pop    ss
  40ea9c:	ins    BYTE PTR es:[edi],dx
  40ea9d:	xchg   edi,eax
  40ea9e:	mov    al,ds:0x6c3083f8
  40eaa3:	mov    cl,0xda
  40eaa5:	lods   al,BYTE PTR ds:[esi]
  40eaa6:	in     eax,dx
  40eaa7:	aaa    
  40eaa8:	aaa    
  40eaa9:	cld    
  40eaaa:	cli    
  40eaab:	pusha  
  40eaac:	pushf  
  40eaad:	fiadd  DWORD PTR [ecx-0x13eb583e]
  40eab3:	fiadd  DWORD PTR [edi+0x4e]
  40eab6:	inc    ebp
  40eab7:	clc    
  40eab8:	dec    esp
  40eab9:	jbe    0x40eb04
  40eabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eabc:	pop    edi
  40eabd:	shl    ah,cl
  40eabf:	in     al,dx
  40eac0:	pop    ecx
  40eac1:	mov    esi,0x196cb83f
  40eac6:	or     ecx,DWORD PTR [edi-0x2db7f412]
  40eacc:	fwait
  40eacd:	sub    eax,0x8b1758e0
  40ead2:	or     edi,DWORD PTR [eax]
  40ead4:	push   esp
  40ead5:	adc    eax,0x7a01b98e
  40eada:	ror    DWORD PTR [esi],1
  40eadc:	retf   0x2e2c
  40eadf:	call   0x1c9a632f
  40eae4:	inc    ebx
  40eae5:	test   BYTE PTR [eax-0x38],ah
  40eae8:	imul   ebx,DWORD PTR [edx-0x161ea4d4],0xffffffe4
  40eaef:	pop    edx
  40eaf0:	icebp  
  40eaf1:	das    
  40eaf2:	mov    ds:0xf2fb902a,eax
  40eaf7:	dec    eax
  40eaf8:	pop    ds
  40eaf9:	stc    
  40eafa:	xor    eax,0x1daf4498
  40eaff:	daa    
  40eb00:	data16 cmc 
  40eb02:	pop    edi
  40eb03:	(bad)  
  40eb04:	dec    esi
  40eb05:	lahf   
  40eb06:	out    0x6b,al
  40eb08:	pop    edi
  40eb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb0a:	(bad)  
  40eb0b:	cmc    
  40eb0c:	(bad)  
  40eb0d:	jbe    0x40ea91
  40eb0f:	pop    ebp
  40eb10:	and    DWORD PTR [ebp+0x6ce58ff1],0xfffffff4
  40eb17:	stos   DWORD PTR es:[edi],eax
  40eb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb19:	cmp    dl,al
  40eb1b:	mov    ecx,0x10a97c19
  40eb20:	inc    ebp
  40eb21:	pop    edx
  40eb22:	ds jns 0x40eb32
  40eb25:	cmp    edx,ecx
  40eb27:	and    eax,0x7212b40f
  40eb2c:	xchg   DWORD PTR [esi],ebx
  40eb2e:	mov    cl,0x21
  40eb30:	sbb    cl,BYTE PTR [edi]
  40eb32:	pop    ss
  40eb33:	fdiv   st(6),st
  40eb35:	adc    dh,bl
  40eb37:	inc    esp
  40eb38:	fst    DWORD PTR [eax]
  40eb3a:	(bad)  
  40eb3b:	add    eax,ebp
  40eb3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb3e:	aas    
  40eb3f:	and    ecx,DWORD PTR [esi]
  40eb41:	(bad)  
  40eb42:	sti    
  40eb43:	cld    
  40eb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb45:	fdivr  QWORD PTR fs:[esi+0x745600e7]
  40eb4c:	cmp    cl,BYTE PTR [ebp+edx*2-0x1db47944]
  40eb53:	adc    eax,0x10f826a7
  40eb58:	inc    esp
  40eb59:	ja     0x40eb7b
  40eb5b:	or     esi,DWORD PTR [ecx-0xe]
  40eb5e:	nop
  40eb5f:	lea    esi,ds:0xa6ba3213
  40eb65:	sbb    al,0x11
  40eb67:	xor    al,0x87
  40eb69:	mov    esi,0xd61f6723
  40eb6e:	and    al,0x70
  40eb70:	call   0xab89:0xac578e8f
  40eb77:	push   ds
  40eb78:	arpl   bx,bp
  40eb7a:	cmp    ecx,DWORD PTR [eax-0x3884090e]
  40eb80:	out    0x93,eax
  40eb82:	jge    0x40eb4a
  40eb84:	test   eax,0xc631c384
  40eb89:	mov    edx,0xd2acd095
  40eb8e:	mov    eax,ds:0x644ede19
  40eb93:	popa   
  40eb94:	addr16 fprem1 
  40eb97:	sub    eax,0x8b57dc8d
  40eb9c:	(bad)  
  40eb9d:	je     0x40ebe7
  40eb9f:	adc    BYTE PTR [ecx-0x3fbcb76d],dl
  40eba5:	mov    dl,0x48
  40eba7:	xchg   edi,eax
  40eba8:	fstp   TBYTE PTR [ebp-0x64]
  40ebab:	pusha  
  40ebac:	aaa    
  40ebad:	lea    ecx,[ecx]
  40ebaf:	add    ebp,edx
  40ebb1:	xor    DWORD PTR [edx-0x2ac53a6],0x5d
  40ebb8:	loop   0x40ebdd
  40ebba:	leave  
  40ebbb:	aam    0xc4
  40ebbd:	(bad)  
  40ebbe:	mov    esp,0x5e906a0
  40ebc3:	(bad)  
  40ebc4:	adc    eax,0x8658aebd
  40ebc9:	icebp  
  40ebca:	push   ebx
  40ebcb:	rcl    DWORD PTR [ebp-0x64],0x8b
  40ebcf:	out    dx,eax
  40ebd0:	push   ebp
  40ebd1:	fld    QWORD PTR [edi+0x4a]
  40ebd4:	cdq    
  40ebd5:	test   BYTE PTR [ecx+0x38],bl
  40ebd8:	inc    ebx
  40ebd9:	sbb    BYTE PTR [ecx+0x658de197],al
  40ebdf:	mov    ecx,0xd33d23c5
  40ebe4:	push   es
  40ebe5:	pop    ss
  40ebe6:	imul   ah
  40ebe8:	inc    eax
  40ebe9:	adc    esp,DWORD PTR [eax]
  40ebeb:	pop    eax
  40ebec:	hlt    
  40ebed:	sub    DWORD PTR ds:0xbfce7388,esi
  40ebf3:	stos   DWORD PTR es:[edi],eax
  40ebf4:	gs jo  0x40ec52
  40ebf7:	push   edi
  40ebf8:	repz push ebp
  40ebfa:	xchg   esi,eax
  40ebfb:	in     al,dx
  40ebfc:	and    BYTE PTR gs:[eax],ah
  40ebff:	pushf  
  40ec00:	inc    esi
  40ec01:	inc    esp
  40ec02:	mov    esi,0xf0b11c7b
  40ec07:	and    eax,0x6f6ad8a7
  40ec0c:	mov    ebx,0x22fc313d
  40ec11:	pusha  
  40ec12:	rol    BYTE PTR [ecx+0x2a09b0e7],1
  40ec18:	or     eax,0x3887ca48
  40ec1d:	fs int3 
  40ec1f:	fbstp  TBYTE PTR [edx+0x34]
  40ec22:	dec    edi
  40ec23:	sbb    BYTE PTR [edi],0xa4
  40ec26:	daa    
  40ec27:	xchg   DWORD PTR [esi+0x4],edx
  40ec2a:	dec    ecx
  40ec2b:	lea    esp,[ebx]
  40ec2d:	xchg   BYTE PTR [ecx-0x4c03dffe],bh
  40ec33:	xor    ch,BYTE PTR [edi-0x69]
  40ec36:	add    eax,0x30eaa000
  40ec3b:	or     eax,0xd3fb2c9b
  40ec40:	xchg   ah,cl
  40ec42:	xor    eax,0xa57485a7
  40ec47:	(bad)  
  40ec48:	fwait
  40ec49:	xor    esp,ecx
  40ec4b:	out    0x7f,eax
  40ec4d:	xchg   esi,eax
  40ec4e:	or     ecx,ebp
  40ec50:	popa   
  40ec51:	dec    ebx
  40ec52:	or     DWORD PTR [edx+0x4b315b1b],ebp
  40ec58:	rol    BYTE PTR [ebx-0x33],cl
  40ec5b:	add    dh,BYTE PTR [edx]
  40ec5d:	sbb    ch,0xb9
  40ec60:	aaa    
  40ec61:	test   al,0xf3
  40ec63:	ss xor al,0x2
  40ec66:	and    dh,BYTE PTR [ebx]
  40ec68:	mov    ebp,0xafffdbf6
  40ec6d:	iret   
  40ec6e:	jae    0x40ec6f
  40ec70:	jecxz  0x40ec3c
  40ec72:	mov    eax,0x73d8ce5
  40ec77:	pop    ecx
  40ec78:	pushf  
  40ec79:	into   
  40ec7a:	imul   ecx,DWORD PTR ds:0x7f9641c,0xd5c5fc7a
  40ec84:	(bad)  
  40ec85:	sbb    eax,0x61830f75
  40ec8a:	mul    ah
  40ec8c:	xchg   esi,eax
  40ec8d:	gs cdq 
  40ec8f:	daa    
  40ec90:	(bad)  
  40ec91:	pop    esi
  40ec92:	jmp    0x40ece6
  40ec94:	jbe    0x40ec46
  40ec96:	adc    ebx,esi
  40ec98:	xchg   esp,eax
  40ec99:	cwde   
  40ec9a:	inc    edi
  40ec9b:	inc    esp
  40ec9c:	inc    ecx
  40ec9d:	xchg   esi,eax
  40ec9e:	mov    al,0x49
  40eca0:	test   BYTE PTR [ebx+0x1],bl
  40eca3:	clc    
  40eca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca5:	cld    
  40eca6:	cmp    esi,DWORD PTR [ecx-0x5c521ab4]
  40ecac:	push   0xffffffaf
  40ecae:	stc    
  40ecaf:	xor    eax,0x336b283e
  40ecb4:	imul   ebx,DWORD PTR [esi],0xffffffcc
  40ecb7:	inc    edi
  40ecb8:	xor    eax,0xaf0388a4
  40ecbd:	retf   
  40ecbe:	push   edx
  40ecbf:	mov    al,ds:0xfcb4b358
  40ecc4:	xchg   esi,eax
  40ecc5:	push   ss
  40ecc6:	jg     0x40ecbf
  40ecc8:	and    eax,0x516781d3
  40eccd:	out    dx,al
  40ecce:	inc    esp
  40eccf:	ds jne 0x40ed22
  40ecd2:	bswap  ecx
  40ecd4:	mov    bl,0x8a
  40ecd6:	inc    ecx
  40ecd7:	rol    ecx,0xda
  40ecda:	dec    ebp
  40ecdb:	test   al,0x39
  40ecdd:	pop    esp
  40ecde:	fisub  WORD PTR ds:0x7bc20a97
  40ece4:	jmp    0x2c3cc871
  40ece9:	test   DWORD PTR ds:0x46ad85aa,ebp
  40ecef:	push   eax
  40ecf0:	push   esp
  40ecf1:	jge    0x40ec82
  40ecf3:	xor    eax,0x4cc35b61
  40ecf8:	pop    edi
  40ecf9:	push   0x384e1b8c
  40ecfe:	shr    esi,1
  40ed00:	dec    ebp
  40ed01:	lods   eax,DWORD PTR ds:[esi]
  40ed02:	push   0x7e869020
  40ed07:	adc    bh,BYTE PTR [esi-0x7521e379]
  40ed0d:	mov    ah,0xfc
  40ed0f:	sub    BYTE PTR [edi+0x4ece5f9b],dh
  40ed15:	adc    BYTE PTR [eax+0x716547ff],0x69
  40ed1c:	nop
  40ed1d:	cli    
  40ed1e:	mov    ebx,0x2fc02bd9
  40ed23:	iret   
  40ed24:	mov    edi,0x9f78b45f
  40ed29:	mov    ds:0xbe16ce16,al
  40ed2e:	pop    eax
  40ed2f:	sbb    BYTE PTR [edi+0x22981569],dl
  40ed35:	nop
  40ed36:	cs cld 
  40ed38:	and    cl,BYTE PTR [eax-0x22d46a07]
  40ed3e:	dec    esp
  40ed3f:	je     0x40ed28
  40ed41:	fdiv   st,st(2)
  40ed43:	repz jl 0x40ed02
  40ed46:	scas   al,BYTE PTR es:[edi]
  40ed47:	add    al,0xea
  40ed49:	scas   al,BYTE PTR es:[edi]
  40ed4a:	sti    
  40ed4b:	push   esi
  40ed4c:	cmc    
  40ed4d:	mov    edx,DWORD PTR [esi-0x1]
  40ed50:	lahf   
  40ed51:	mov    al,0x75
  40ed53:	aad    0x2a
  40ed55:	add    al,0x51
  40ed57:	std    
  40ed58:	mov    al,ds:0xaec38c1c
  40ed5d:	shr    DWORD PTR [esi-0x6c4fa933],1
  40ed63:	es jb  0x40edb6
  40ed66:	test   BYTE PTR [edi+eax*2],dl
  40ed69:	dec    esp
  40ed6a:	sbb    edx,DWORD PTR [edx+0x59e7c3d9]
  40ed70:	cmp    bl,BYTE PTR [eax-0x5ab00071]
  40ed76:	fs fs adc al,0x66
  40ed7a:	js     0x40ed2a
  40ed7c:	lea    edx,[ecx]
  40ed7e:	scas   al,BYTE PTR es:[edi]
  40ed7f:	cmp    ebx,DWORD PTR [ebp-0x7ff603b2]
  40ed85:	mov    bh,BYTE PTR [ebx+eiz*4-0x6895b54a]
  40ed8c:	in     eax,0x73
  40ed8e:	push   cs
  40ed8f:	rcr    bh,cl
  40ed91:	sub    ebp,DWORD PTR [ebx+0x17a31b87]
  40ed97:	test   al,0x0
  40ed99:	(bad)  
  40ed9a:	push   0x5866819c
  40ed9f:	imul   edx,esi,0x4ed288b9
  40eda5:	cmp    ch,ch
  40eda7:	cmp    bl,BYTE PTR [ebx+0x6e]
  40edaa:	or     dh,BYTE PTR [ecx]
  40edac:	daa    
  40edad:	retf   0xa63c
  40edb0:	jmp    0xf7e9:0x73301b7d
  40edb7:	pop    edi
  40edb8:	jbe    0x40ee2c
  40edba:	push   cs
  40edbb:	mov    al,0x5a
  40edbd:	int3   
  40edbe:	sbb    al,0xee
  40edc0:	xchg   ebp,eax
  40edc1:	aad    0xe8
  40edc3:	pop    edi
  40edc4:	jbe    0x40ee24
  40edc6:	mov    esi,0xc92cc5bb
  40edcb:	aaa    
  40edcc:	scas   al,BYTE PTR es:[edi]
  40edcd:	and    ebx,DWORD PTR [esi]
  40edcf:	lds    esp,FWORD PTR [edx]
  40edd1:	psubusb mm0,QWORD PTR [edx-0x492d3c58]
  40edd8:	and    al,0xd0
  40edda:	cs sahf 
  40eddc:	pop    ds
  40eddd:	aaa    
  40edde:	or     edx,DWORD PTR [ebx+ecx*1]
  40ede1:	and    DWORD PTR [eax+0x3f207e4b],ecx
  40ede7:	arpl   WORD PTR [esi],sp
  40ede9:	retf   0xbc
  40edec:	shl    BYTE PTR [ecx],1
  40edee:	add    eax,0x320155f9
  40edf3:	jmp    FWORD PTR [ecx]
  40edf5:	scas   ax,WORD PTR es:[edi]
  40edf7:	xor    eax,0xec0607e7
  40edfc:	push   ebx
  40edfd:	sub    bh,BYTE PTR [eax+0x1223812a]
  40ee03:	mov    ecx,0xc67be8b1
  40ee08:	mov    esp,0xe395bae
  40ee0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee0e:	stc    
  40ee0f:	push   es
  40ee10:	(bad)  
  40ee12:	out    0xf9,eax
  40ee14:	jae    0x40ee50
  40ee16:	push   0xd9d3f9d2
  40ee1b:	inc    esi
  40ee1c:	enter  0x4efd,0xcd
  40ee20:	sbb    esp,edx
  40ee22:	xchg   edx,eax
  40ee23:	push   eax
  40ee24:	jno    0x40ee28
  40ee26:	and    DWORD PTR [edx-0x578ec7a6],0x841d60e6
  40ee30:	lock lds eax,FWORD PTR [eax+0x3a]
  40ee34:	std    
  40ee35:	pushf  
  40ee36:	test   al,0x13
  40ee38:	in     eax,dx
  40ee39:	and    al,0x28
  40ee3b:	inc    ecx
  40ee3c:	push   cs
  40ee3d:	xor    esi,DWORD PTR [edx+0x30909478]
  40ee43:	mov    ds:0x3d8f9fbd,eax
  40ee48:	leave  
  40ee49:	stos   BYTE PTR es:[edi],al
  40ee4a:	inc    ebp
  40ee4b:	jbe    0x40edee
  40ee4d:	inc    ecx
  40ee4e:	add    DWORD PTR [edx-0x30aa5a05],ebp
  40ee54:	adc    edx,edi
  40ee56:	sbb    al,0x0
  40ee58:	xchg   ecx,eax
  40ee59:	test   dh,ah
  40ee5b:	push   es
  40ee5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5d:	xchg   edx,eax
  40ee5e:	xchg   esi,eax
  40ee5f:	stos   DWORD PTR es:[edi],eax
  40ee60:	icebp  
  40ee61:	(bad)  
  40ee62:	cs in  al,0x40
  40ee65:	mov    ds,WORD PTR [edx+edi*1+0x4dfa11e8]
  40ee6c:	test   DWORD PTR ds:0x754e50df,ecx
  40ee72:	xchg   edx,eax
  40ee73:	xor    al,BYTE PTR [esi*8-0x29a9d327]
  40ee7a:	mov    DWORD PTR [ebx-0x55836a42],eax
  40ee80:	fcmovne st,st(5)
  40ee82:	in     eax,dx
  40ee83:	imul   edx,DWORD PTR [edx],0x944b8f7e
  40ee89:	or     eax,0xf875f42c
  40ee8e:	mov    eax,ds:0xb82bd4cf
  40ee93:	dec    ecx
  40ee94:	inc    edx
  40ee95:	fs je  0x40eed8
  40ee98:	in     al,dx
  40ee99:	les    esi,FWORD PTR [edi+edx*2-0x19516733]
  40eea0:	and    ebx,ebx
  40eea2:	xor    eax,0xf22cfce9
  40eea7:	into   
  40eea8:	or     eax,ebp
  40eeaa:	cmp    bl,BYTE PTR [eax]
  40eeac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eead:	push   0x774fb7f7
  40eeb2:	idiv   DWORD PTR [edi+0x25e76da3]
  40eeb8:	fwait
  40eeb9:	sub    BYTE PTR [edi-0x1b],al
  40eebc:	mov    ah,BYTE PTR [ebx]
  40eebe:	add    eax,0x5fb5b8e
  40eec3:	or     bh,BYTE PTR [eax+0x2f0fa492]
  40eec9:	adc    ebp,0x60
  40eecc:	iret   
  40eecd:	idiv   DWORD PTR [ebx+eiz*8]
  40eed0:	mov    cl,0xc3
  40eed2:	jp     0x40ef23
  40eed4:	mov    eax,ds:0x466d286a
  40eed9:	sbb    eax,0x18bc6bb3
  40eede:	loop   0x40ee78
  40eee0:	sub    al,al
  40eee2:	ret    
  40eee3:	cmp    esp,edi
  40eee5:	ss (bad) 
  40eee7:	dec    edi
  40eee8:	pop    ebx
  40eee9:	je     0x40ef13
  40eeeb:	icebp  
  40eeec:	add    ecx,edx
  40eeee:	adc    BYTE PTR [ecx-0x54],al
  40eef1:	mov    ch,0x7c
  40eef3:	cwde   
  40eef4:	pushf  
  40eef5:	add    al,0x10
  40eef7:	repnz mov eax,ds:0x23b4f27d
  40eefd:	push   ebp
  40eefe:	cmp    al,BYTE PTR [eax-0x4f]
  40ef01:	or     BYTE PTR [esi+ebx*2],0xb9
  40ef05:	jo     0x40ef07
  40ef07:	out    0x49,eax
  40ef09:	lea    ecx,[esi-0x46]
  40ef0c:	imul   esi,DWORD PTR [edx],0x41
  40ef0f:	paddsw mm6,QWORD PTR [ecx]
  40ef12:	mov    dl,BYTE PTR ds:0x4c2fbd43
  40ef18:	in     eax,dx
  40ef19:	stos   DWORD PTR es:[edi],eax
  40ef1a:	push   ss
  40ef1b:	pop    edx
  40ef1c:	adc    al,0x4c
  40ef1e:	jae    0x40ef5f
  40ef20:	(bad)  
  40ef21:	loop   0x40ef73
  40ef23:	cdq    
  40ef24:	repnz in eax,dx
  40ef26:	mov    ah,0xe8
  40ef28:	jno    0x40ef32
  40ef2a:	aad    0x7b
  40ef2c:	test   edx,0x7248b011
  40ef32:	cmp    al,0xee
  40ef34:	and    BYTE PTR [ebp+eiz*2+0x77],cl
  40ef38:	pop    esp
  40ef39:	mov    ebp,0x99b73031
  40ef3e:	into   
  40ef3f:	das    
  40ef40:	sar    bh,1
  40ef42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef43:	inc    esi
  40ef44:	(bad)
  40ef49:	ins    DWORD PTR es:[edi],dx
  40ef4a:	inc    ebx
  40ef4b:	jl     0x40ef47
  40ef4d:	daa    
  40ef4e:	push   ebp
  40ef4f:	push   ebp
  40ef50:	mov    bh,0x7b
  40ef52:	retf   0x1ed2
  40ef55:	add    DWORD PTR [esi],ebx
  40ef57:	push   ebp
  40ef58:	inc    ebp
  40ef59:	or     eax,0x130cc8b0
  40ef5e:	outs   dx,DWORD PTR ds:[esi]
  40ef5f:	lock cdq 
  40ef61:	or     BYTE PTR [edi-0x9],dl
  40ef64:	xchg   esi,eax
  40ef65:	push   ebx
  40ef66:	jmp    0x4e4e2afe
  40ef6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef6c:	out    0xd5,eax
  40ef6e:	dec    edi
  40ef6f:	and    eax,0xfd1ef331
  40ef74:	ins    DWORD PTR es:[edi],dx
  40ef75:	enter  0xb90e,0xad
  40ef79:	lods   eax,DWORD PTR ds:[esi]
  40ef7a:	cmc    
  40ef7b:	mov    ds:0x436e55db,al
  40ef80:	jge    0x40ef42
  40ef82:	push   edx
  40ef83:	fs popa 
  40ef85:	rol    dl,0x69
  40ef88:	je     0x40efcc
  40ef8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef8c:	jecxz  0x40efbd
  40ef8e:	call   0x9ab64042
  40ef93:	push   0x32
  40ef95:	xor    BYTE PTR [ebx],bh
  40ef97:	push   ss
  40ef98:	cmc    
  40ef99:	aas    
  40ef9a:	mov    ss,WORD PTR [eax+0x54]
  40ef9d:	sbb    eax,0x534af972
  40efa2:	cmp    eax,0x397a488b
  40efa7:	sub    al,0xfb
  40efa9:	rcr    BYTE PTR [esp+edi*4],0xb7
  40efad:	cwde   
  40efae:	and    BYTE PTR [ebx-0x19c856f0],dl
  40efb4:	dec    esi
  40efb5:	push   esp
  40efb6:	add    BYTE PTR [edi+0x2ae8946a],cl
  40efbc:	xor    BYTE PTR [eax],ch
  40efbe:	or     BYTE PTR [ebx+0x57],dl
  40efc1:	mov    dh,0xab
  40efc3:	sub    BYTE PTR [edx+0x2478463a],bh
  40efc9:	push   edi
  40efca:	pusha  
  40efcb:	inc    edx
  40efcc:	shl    DWORD PTR ds:0x907af71f,0xe7
  40efd3:	dec    ecx
  40efd4:	shl    DWORD PTR es:[ebx+0x134e4a48],cl
  40efdb:	stc    
  40efdc:	lea    esp,[edx-0x73]
  40efdf:	popf   
  40efe0:	inc    edi
  40efe1:	sbb    eax,0x7752a5d6
  40efe6:	or     BYTE PTR [ebp+0x6f64338e],al
  40efec:	add    eax,0x71135877
  40eff1:	mov    cl,0xaf
  40eff3:	mov    esi,0x9337d5a2
  40eff8:	out    dx,eax
  40eff9:	aaa    
  40effa:	dec    esi
  40effb:	outs   dx,DWORD PTR ds:[esi]
  40effc:	mov    dl,BYTE PTR [ecx]
  40effe:	sahf   
  40efff:	mov    al,ds:0x18eb23da
  40f004:	sub    DWORD PTR [edi+0x70a068ac],0x7c80b754
  40f00e:	inc    ebp
  40f00f:	sub    edi,DWORD PTR ss:[edi+0x4a79f35c]
  40f016:	adc    ecx,edi
  40f018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f019:	inc    ebx
  40f01a:	popa   
  40f01b:	repz jg 0x40efce
  40f01e:	mov    DWORD PTR [ebx+0x8],0x3f4996a1
  40f025:	adc    DWORD PTR ds:0xc74c2d79,ebp
  40f02b:	sbb    eax,0x514fe2a9
  40f030:	and    dl,BYTE PTR [esi+0x2b30d438]
  40f036:	mov    DWORD PTR [ecx],esi
  40f038:	xor    eax,0x2eb00da4
  40f03d:	dec    ebp
  40f03e:	mov    WORD PTR [ebx],es
  40f040:	dec    eax
  40f041:	xchg   ebx,eax
  40f042:	data16 (bad) 
  40f045:	adc    al,dh
  40f047:	xor    BYTE PTR [edx],ah
  40f049:	dec    esp
  40f04a:	hlt    
  40f04b:	dec    eax
  40f04c:	gs push 0x1d
  40f04f:	sbb    eax,ebx
  40f051:	call   0xd2b252c6
  40f056:	repz not DWORD PTR [ebp-0x39f950b7]
  40f05d:	and    edi,edx
  40f05f:	inc    edi
  40f060:	adc    BYTE PTR [ebp+edi*2+0x2329004e],bh
  40f067:	push   DWORD PTR [eax-0x7421146f]
  40f06d:	nop
  40f06e:	mov    esi,0x880bef3
  40f073:	cs hlt 
  40f075:	js     0x40f0f5
  40f077:	ins    DWORD PTR es:[edi],dx
  40f078:	imul   ebx,DWORD PTR gs:[ebx+0x1f],0x1f
  40f07d:	pop    edx
  40f07e:	lock ror BYTE PTR [ebx+0x61a0b61c],0x2d
  40f086:	pushf  
  40f087:	adc    BYTE PTR [ebx+0x7d7d0ee5],ah
  40f08d:	inc    eax
  40f08e:	and    esp,DWORD PTR [edx]
  40f090:	mov    esi,0x934183ee
  40f095:	mov    bl,0x1b
  40f097:	push   0xf7129ffb
  40f09c:	out    dx,al
  40f09d:	jns    0x40f09d
  40f09f:	or     DWORD PTR [eax-0x49318dca],ebx
  40f0a5:	ins    DWORD PTR es:[edi],dx
  40f0a6:	sub    DWORD PTR [eax],ebx
  40f0a8:	xchg   ebx,eax
  40f0a9:	dec    edi
  40f0aa:	push   esi
  40f0ab:	mov    edx,0x7a8bd4da
  40f0b0:	adc    ecx,DWORD PTR ds:0x94e3672a
  40f0b6:	push   ss
  40f0b7:	mov    eax,ds:0x73b2f603
  40f0bc:	jae    0x40f068
  40f0be:	repnz ins BYTE PTR es:[edi],dx
  40f0c0:	clc    
  40f0c1:	push   esp
  40f0c2:	fmul   st(5),st
  40f0c4:	cmp    dl,ch
  40f0c6:	dec    ecx
  40f0c7:	mov    ah,0xf0
  40f0c9:	fimul  DWORD PTR [ebp+0xe190072]
  40f0cf:	sbb    DWORD PTR [ebx],0xffffffdc
  40f0d2:	ror    DWORD PTR [ebx],cl
  40f0d4:	cmp    BYTE PTR [ecx],ah
  40f0d6:	mov    WORD PTR [ebp+0x31],fs
  40f0d9:	and    DWORD PTR [ecx-0x512a573d],ebx
  40f0df:	mov    edx,ebx
  40f0e1:	push   ds
  40f0e2:	xor    eax,0x84e3fe6b
  40f0e7:	int    0x18
  40f0e9:	rsqrtps xmm0,xmm6
  40f0ec:	xor    DWORD PTR [edx+0x50],esp
  40f0ef:	sub    ebp,DWORD PTR [ecx+0x6b]
  40f0f2:	mov    ds:0x734b7264,eax
  40f0f7:	mov    ecx,0xad1f5763
  40f0fc:	mov    ebx,0xf44c21e9
  40f101:	out    dx,al
  40f102:	stos   BYTE PTR es:[edi],al
  40f103:	and    edx,eax
  40f105:	sbb    al,0x12
  40f107:	popf   
  40f108:	mov    ecx,0xbf0d4d40
  40f10d:	push   edi
  40f10e:	ret    0x2ccd
  40f111:	pop    ecx
  40f112:	sub    ecx,ebx
  40f114:	push   eax
  40f115:	jb     0x40f102
  40f117:	jb     0x40f0cb
  40f119:	jge    0x40f113
  40f11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f11c:	mov    ds:0x36c8b50b,al
  40f121:	dec    eax
  40f122:	sti    
  40f123:	xchg   BYTE PTR [ecx+0x7],al
  40f126:	addr16 iret 
  40f128:	or     ecx,DWORD PTR [eax+0x30]
  40f12b:	mov    esi,0xfa38b7bd
  40f130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f131:	add    al,0xd7
  40f133:	cs push edx
  40f135:	punpckhbw mm0,mm6
  40f138:	pop    ebp
  40f139:	mov    cl,0xaf
  40f13b:	std    
  40f13c:	inc    ebp
  40f13d:	cdq    
  40f13e:	sub    al,0x7e
  40f140:	popf   
  40f141:	div    ah
  40f143:	shl    DWORD PTR [ebx],cl
  40f145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f146:	ficom  WORD PTR [ebx]
  40f148:	mov    dh,0x3e
  40f14a:	cmp    DWORD PTR [esi],esp
  40f14c:	outs   dx,DWORD PTR ds:[esi]
  40f14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f14e:	imul   ebp,DWORD PTR [esi-0x4b],0xffffffa3
  40f152:	test   al,0x20
  40f154:	(bad)  
  40f155:	sti    
  40f156:	sub    eax,0xc415ab40
  40f15b:	inc    esi
  40f15c:	add    ecx,DWORD PTR [esi+0x6d]
  40f15f:	mov    eax,ds:0xe425a88d
  40f164:	shl    DWORD PTR [esi+0x26],0x2
  40f168:	pop    ebp
  40f169:	in     al,dx
  40f16a:	clc    
  40f16b:	jge    0x40f137
  40f16d:	and    edi,esi
  40f16f:	pushf  
  40f170:	cmp    DWORD PTR [ebp+0x1e],edi
  40f173:	pop    ebp
  40f174:	fwait
  40f175:	pop    esp
  40f176:	jp     0x40f0f9
  40f178:	out    dx,al
  40f179:	mov    BYTE PTR ss:[esi-0x8],bh
  40f17d:	jg     0x40f17b
  40f17f:	(bad)  
  40f180:	mov    edx,0xae06c018
  40f185:	jno    0x40f1dc
  40f187:	je     0x40f204
  40f189:	or     eax,0xdb9b3fbc
  40f18e:	or     DWORD PTR [eax],0x541722ca
  40f194:	push   ebp
  40f195:	inc    edi
  40f196:	ror    BYTE PTR [ebp+0x44077cb8],1
  40f19c:	mov    edi,0xa4aa8602
  40f1a1:	gs push eax
  40f1a3:	cmp    ecx,DWORD PTR [eax]
  40f1a5:	push   es
  40f1a6:	mov    ah,0x50
  40f1a8:	mov    dh,0x80
  40f1aa:	inc    ebx
  40f1ab:	loop   0x40f16b
  40f1ad:	push   esp
  40f1ae:	(bad)  
  40f1af:	xor    eax,0xe696e57a
  40f1b4:	and    dh,BYTE PTR [ecx]
  40f1b6:	mov    ebp,0xfca9f462
  40f1bb:	dec    esp
  40f1bc:	mov    WORD PTR [edx+0x56],?
  40f1bf:	or     eax,0x25b59089
  40f1c4:	frstor [esi+0x358bc692]
  40f1ca:	bound  ecx,QWORD PTR [edi+0x19]
  40f1cd:	cmp    ah,BYTE PTR [ebp-0x358890e3]
  40f1d3:	sbb    bl,BYTE PTR [esi]
  40f1d5:	aas    
  40f1d6:	cmp    eax,0x6cc018d6
  40f1db:	xor    al,0x86
  40f1dd:	lods   al,BYTE PTR ds:[esi]
  40f1de:	enter  0x378f,0xf7
  40f1e2:	data16 mov BYTE PTR [esi+0x57],cl
  40f1e6:	imul   edx,DWORD PTR [esi-0x52e25395],0x1e
  40f1ed:	daa    
  40f1ee:	cmp    eax,DWORD PTR [ecx-0x3f]
  40f1f1:	mov    bh,0xf8
  40f1f3:	cmp    ch,BYTE PTR [eax-0x66]
  40f1f6:	and    bh,BYTE PTR [ecx+0xb]
  40f1f9:	ins    DWORD PTR es:[edi],dx
  40f1fa:	lods   al,BYTE PTR ds:[esi]
  40f1fb:	mov    edi,0xb0257438
  40f200:	inc    ebp
  40f201:	mov    cl,0x29
  40f203:	dec    ecx
  40f204:	ins    DWORD PTR es:[edi],dx
  40f205:	xchg   ebx,eax
  40f206:	push   cs
  40f207:	fwait
  40f208:	dec    ecx
  40f209:	fs clc 
  40f20b:	jno    0x40f228
  40f20d:	pop    ebp
  40f20e:	leave  
  40f20f:	inc    esi
  40f210:	sbb    BYTE PTR [ebx],dh
  40f212:	mov    ch,0xa0
  40f214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f215:	repnz pushf 
  40f217:	aaa    
  40f218:	mov    cl,0x4d
  40f21a:	lea    ebp,[ebx-0x5d0713ce]
  40f220:	push   edx
  40f221:	pop    edx
  40f222:	(bad)  
  40f223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f224:	sbb    dl,BYTE PTR [ebx-0x1]
  40f227:	fidiv  DWORD PTR [edi+0x1b21b5e4]
  40f22d:	sbb    bl,BYTE PTR [edi+ebp*2]
  40f230:	imul   edi,DWORD PTR [ecx+0x1c3dc438],0x3
  40f237:	int3   
  40f238:	test   eax,edx
  40f23a:	lock test eax,0x3d5d298f
  40f240:	sahf   
  40f241:	and    esp,ebx
  40f243:	push   ecx
  40f244:	inc    esp
  40f245:	ja     0x40f29e
  40f247:	in     al,dx
  40f248:	les    esp,FWORD PTR [eax-0x46]
  40f24b:	imul   esi,DWORD PTR [edi+eax*8-0xb7035e9],0xffffffa0
  40f253:	sbb    bh,al
  40f255:	iret   
  40f256:	cmp    bh,BYTE PTR [esi]
  40f258:	inc    eax
  40f259:	push   es
  40f25a:	sub    ah,BYTE PTR [esi+0x92c6bfb]
  40f260:	imul   eax,DWORD PTR [eax-0x22227186],0x2b
  40f267:	cmc    
  40f268:	and    esi,DWORD PTR [edx]
  40f26a:	and    ebx,esp
  40f26c:	std    
  40f26d:	sbb    ecx,DWORD PTR [esi-0x17]
  40f270:	or     esp,0x32
  40f273:	pop    esi
  40f274:	mov    esp,0xb1422a8b
  40f279:	scas   eax,DWORD PTR es:[edi]
  40f27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f27b:	dec    edx
  40f27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f27d:	add    BYTE PTR [edx+edx*2-0x107f7f65],ch
  40f284:	test   esp,edx
  40f286:	adc    BYTE PTR [edx+0xcea5289],dh
  40f28c:	pop    ds
  40f28d:	es stos BYTE PTR es:[edi],al
  40f28f:	sahf   
  40f290:	mov    ebp,0x52926242
  40f295:	mov    ah,BYTE PTR [edi-0x2870bb5e]
  40f29b:	xchg   DWORD PTR [esi-0xc],esp
  40f29e:	clc    
  40f29f:	pushf  
  40f2a0:	iret   
  40f2a1:	es pushf 
  40f2a3:	mov    WORD PTR [esi+0x78e175d9],ss
  40f2a9:	(bad)  
  40f2aa:	mov    eax,0x9a452722
  40f2af:	fsub   QWORD PTR [ebp-0x2e]
  40f2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b3:	test   DWORD PTR ds:[esi+0x3b],esp
  40f2b7:	xchg   esi,eax
  40f2b8:	jmp    0x58736327
  40f2bd:	mov    al,ds:0x52ea7425
  40f2c2:	sub    eax,0x2b374b2e
  40f2c7:	clc    
  40f2c8:	shl    BYTE PTR [edx-0x78],1
  40f2cb:	push   ecx
  40f2cc:	sub    DWORD PTR [ebx],eax
  40f2ce:	mov    ebx,0x83a0d86f
  40f2d3:	shl    DWORD PTR [ebp-0x1865158d],0x59
  40f2da:	ins    DWORD PTR es:[edi],dx
  40f2db:	pop    esp
  40f2dc:	out    0x91,eax
  40f2de:	inc    eax
  40f2df:	out    dx,al
  40f2e0:	call   0x2804:0x53a755c3
  40f2e7:	dec    esi
  40f2e8:	sbb    bl,dh
  40f2ea:	lds    ebp,FWORD PTR [edi]
  40f2ec:	arpl   WORD PTR [edx-0x5e],dx
  40f2ef:	repz addr16 ss pop ebx
  40f2f3:	rcl    DWORD PTR [edx+edi*8],cl
  40f2f6:	in     eax,0x44
  40f2f8:	pop    esp
  40f2f9:	xor    eax,0x5767281
  40f2fe:	je     0x40f29f
  40f300:	out    0x5e,al
  40f302:	outs   dx,BYTE PTR ds:[esi]
  40f303:	mov    dl,0x3c
  40f305:	ret    
  40f306:	fimul  DWORD PTR [eax-0x690cbf37]
  40f30c:	xor    al,0x80
  40f30e:	push   es
  40f30f:	out    0x6b,eax
  40f311:	outs   dx,DWORD PTR ds:[esi]
  40f312:	scas   eax,DWORD PTR es:[edi]
  40f313:	scas   eax,DWORD PTR es:[edi]
  40f314:	lds    edx,FWORD PTR [eax+0x28dc549e]
  40f31a:	(bad)  
  40f31c:	(bad)  
  40f31d:	lahf   
  40f31e:	pop    ecx
  40f31f:	into   
  40f320:	adc    al,0x88
  40f322:	cld    
  40f323:	sbb    dh,BYTE PTR [ebp-0x3d]
  40f326:	dec    eax
  40f327:	sbb    DWORD PTR [ebp-0x18],ebp
  40f32a:	mov    esp,0x860b0854
  40f32f:	ja     0x40f2f3
  40f331:	cmp    DWORD PTR [edx+0x6cb0152b],esp
  40f337:	xlat   BYTE PTR ds:[ebx]
  40f338:	pop    esp
  40f339:	pop    ebp
  40f33a:	stos   BYTE PTR es:[edi],al
  40f33b:	pop    es
  40f33c:	stc    
  40f33d:	pop    edi
  40f33e:	inc    ecx
  40f33f:	mov    eax,0x2f84badf
  40f344:	aas    
  40f345:	cmp    edi,DWORD PTR [ecx]
  40f347:	iret   
  40f348:	ins    DWORD PTR es:[edi],dx
  40f349:	aaa    
  40f34a:	out    0xd2,al
  40f34c:	xchg   ebx,eax
  40f34d:	fidivr DWORD PTR [eax+0x55]
  40f350:	jle    0x40f31d
  40f352:	ds add edx,edi
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	test   al,ch
  40f709:	xchg   edx,eax
  40f70a:	push   0xffffffdc
  40f70c:	int    0x7c
  40f70e:	jl     0x40f6fb
  40f710:	pop    edi
  40f711:	jl     0x40f78f
  40f713:	mov    ds:0x636c4a94,eax
  40f718:	cmc    
  40f719:	std    
  40f71a:	inc    ebx
  40f71b:	sbb    al,0x31
  40f71d:	mov    ch,0xf2
  40f71f:	jnp    0x40f6b1
  40f721:	xchg   ecx,eax
  40f722:	leave  
  40f723:	sbb    ebp,DWORD PTR [edx]
  40f725:	lds    ebp,FWORD PTR [edx+0x4e]
  40f728:	inc    eax
  40f729:	rcr    BYTE PTR ds:0xa635925d,1
  40f72f:	fimul  DWORD PTR ds:0x2256a1fd
  40f735:	sbb    eax,0xa29bc23
  40f73a:	dec    esi
  40f73b:	add    esp,ebp
  40f73d:	call   DWORD PTR [ebx+eax*4-0x60edb0b7]
  40f744:	sti    
  40f745:	sub    al,0x80
  40f747:	mov    ds:0x440c9a2f,eax
  40f74c:	jecxz  0x40f7a0
  40f74e:	lds    ecx,FWORD PTR [ebx]
  40f750:	jmp    0xffff8d4
  40f755:	xor    BYTE PTR [ebp-0x63be0b7d],dh
  40f75b:	into   
  40f75c:	jle    0x40f761
  40f75e:	fcmovbe st,st(6)
  40f760:	loop   0x40f75e
  40f762:	or     al,0x2e
  40f764:	jae    0x40f7d0
  40f766:	adc    esp,DWORD PTR [ebx+0x321cb6]
  40f76c:	dec    edx
  40f76d:	sbb    DWORD PTR [ebx],esi
  40f76f:	es scas al,BYTE PTR es:[edi]
  40f771:	fsub   DWORD PTR [esi+0x70]
  40f774:	mov    cl,BYTE PTR [edx-0x4f]
  40f777:	cmp    eax,0xdca8f084
  40f77c:	outs   dx,BYTE PTR ds:[esi]
  40f77d:	sub    bl,BYTE PTR [ecx+eax*2]
  40f780:	retf   0xef5e
  40f783:	pushf  
  40f784:	out    0x98,eax
  40f786:	jecxz  0x40f72d
  40f788:	sbb    DWORD PTR [edx],0xc539c728
  40f78e:	push   edi
  40f78f:	out    dx,al
  40f790:	xchg   esp,eax
  40f791:	pop    esp
  40f793:	shl    DWORD PTR [eax+0x5129a210],0xb1
  40f79a:	stos   DWORD PTR es:[edi],eax
  40f79b:	out    dx,al
  40f79c:	add    cl,al
  40f79e:	push   cs
  40f79f:	je     0x40f7d7
  40f7a1:	fadd   DWORD PTR ds:0xaea50a7e
  40f7a7:	cwde   
  40f7a8:	aam    0xf0
  40f7aa:	adc    eax,0xad05fd2
  40f7af:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b1:	test   DWORD PTR [ebp-0x725e4444],esi
  40f7b7:	sub    cl,BYTE PTR [ebx+0x54]
  40f7ba:	push   esp
  40f7bb:	or     ah,BYTE PTR [edi-0x686f7c64]
  40f7c1:	retf   0x7ebb
  40f7c4:	pop    ss
  40f7c5:	xor    al,0xcd
  40f7c7:	cli    
  40f7c8:	clc    
  40f7c9:	or     al,0xdb
  40f7cb:	jle    0x40f7e8
  40f7cd:	stos   DWORD PTR es:[edi],eax
  40f7ce:	mov    ebx,0x1664720a
  40f7d3:	sub    ebp,eax
  40f7d5:	jb     0x40f7f1
  40f7d7:	sbb    eax,0x7951fdfc
  40f7dc:	dec    edi
  40f7dd:	sub    ch,BYTE PTR [ecx+esi*4]
  40f7e0:	mov    bh,0xf6
  40f7e2:	push   ebx
  40f7e3:	inc    ebx
  40f7e4:	gs jmp 0x215b:0x5f2983fd
  40f7ec:	mov    DWORD PTR ds:0xf649b0c7,esp
  40f7f2:	jae    0x40f84d
  40f7f4:	pushf  
  40f7f5:	aam    0x3a
  40f7f7:	scas   eax,DWORD PTR es:[edi]
  40f7f8:	scas   al,BYTE PTR es:[edi]
  40f7f9:	ds pop esp
  40f7fb:	dec    edx
  40f7fc:	jo     0x40f847
  40f7fe:	test   DWORD PTR ds:0x48016e18,esp
  40f804:	push   0xffffffe0
  40f806:	hlt    
  40f807:	mov    bh,0x5c
  40f809:	loop   0x40f80d
  40f80b:	mov    ebx,0x85060c8b
  40f810:	mov    WORD PTR [ecx],?
  40f812:	scas   al,BYTE PTR es:[edi]
  40f813:	cdq    
  40f814:	addr16 jmp 0x35a68879
  40f81a:	adc    al,0xb9
  40f81c:	in     eax,0xa4
  40f81e:	mov    al,ds:0x97a13cc9
  40f823:	adc    ch,BYTE PTR [edx]
  40f825:	(bad)  
  40f827:	dec    esi
  40f828:	and    BYTE PTR [eax+ebx*8+0x2adcafe7],dh
  40f82f:	add    esi,DWORD PTR [eax-0x3]
  40f832:	xlat   BYTE PTR ds:[ebx]
  40f833:	int    0x17
  40f835:	fmul   DWORD PTR [esi-0x2784cc58]
  40f83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83c:	shl    eax,cl
  40f83e:	aaa    
  40f83f:	int    0xf8
  40f841:	dec    ecx
  40f842:	cs pop edx
  40f844:	ret    0x6295
  40f847:	pop    edx
  40f848:	push   ss
  40f849:	jb     0x40f8c5
  40f84b:	dec    ebp
  40f84c:	aad    0x71
  40f84e:	lock ds es and dl,ah
  40f853:	dec    esi
  40f854:	push   ebx
  40f855:	cwde   
  40f856:	adc    DWORD PTR [edx+0x5ee12847],esp
  40f85c:	adc    BYTE PTR gs:[edi+0x6dbdc005],dl
  40f863:	popf   
  40f864:	and    eax,0x4acdd01e
  40f869:	cs jp  0x40f87d
  40f86c:	push   edx
  40f86d:	cmp    eax,0x86365012
  40f872:	add    eax,0xf0dd6234
  40f877:	mov    bl,0x9b
  40f879:	dec    esp
  40f87a:	out    0x3,al
  40f87c:	mov    ch,0xf
  40f87e:	inc    esi
  40f87f:	in     eax,0x94
  40f881:	addr16 jl 0x40f8fb
  40f884:	ins    DWORD PTR es:[edi],dx
  40f885:	jl     0x40f884
  40f887:	mov    ebx,0xea8e2868
  40f88c:	inc    eax
  40f88d:	jmp    0x40f8f5
  40f88f:	pop    ecx
  40f890:	mov    WORD PTR [edx],cs
  40f892:	jg     0x40f8f8
  40f894:	jb     0x40f85a
  40f896:	ds sahf 
  40f898:	sbb    bl,BYTE PTR [eax+0x15baf5f6]
  40f89e:	rcr    BYTE PTR [ebp-0x4e],cl
  40f8a1:	xchg   ebx,eax
  40f8a2:	cmp    ah,BYTE PTR [eax-0x443c7aa1]
  40f8a8:	call   0x226d4dd8
  40f8ad:	cmc    
  40f8ae:	push   eax
  40f8af:	ins    DWORD PTR es:[edi],dx
  40f8b0:	stos   BYTE PTR es:[edi],al
  40f8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b2:	push   0xe4b31f02
  40f8b7:	add    BYTE PTR [esi-0x168ca98a],bh
  40f8bd:	pop    DWORD PTR [ebx]
  40f8bf:	je     0x40f87f
  40f8c1:	dec    eax
  40f8c2:	arpl   cx,ax
  40f8c4:	cli    
  40f8c5:	dec    ecx
  40f8c6:	aad    0x90
  40f8c8:	retf   
  40f8c9:	jp     0x40f87c
  40f8cb:	ret    
  40f8cc:	or     DWORD PTR [ecx-0x3dd9e7a7],esi
  40f8d2:	js     0x40f951
  40f8d4:	sbb    eax,0x84ea55f
  40f8d9:	out    dx,al
  40f8da:	or     al,0x14
  40f8dc:	je     0x40f955
  40f8de:	mov    es,WORD PTR [ebx]
  40f8e0:	jle    0x40f92c
  40f8e2:	adc    edi,DWORD PTR [ecx+0x71]
  40f8e5:	mov    al,ds:0xef183b45
  40f8ea:	inc    esp
  40f8eb:	adc    DWORD PTR [edx+0x1905d675],ebp
  40f8f1:	stos   DWORD PTR es:[edi],eax
  40f8f2:	pop    ebp
  40f8f3:	repnz mov dh,0xb0
  40f8f6:	pop    ebx
  40f8f7:	dec    ecx
  40f8f8:	pop    edx
  40f8f9:	(bad)  
  40f8fa:	jmp    0x78db:0x5f53d345
  40f901:	jno    0x40f8d5
  40f903:	mov    cs,WORD PTR [esi-0x50]
  40f906:	aad    0x2a
  40f908:	xor    al,0xa7
  40f90a:	inc    ebp
  40f90b:	aad    0xe8
  40f90d:	fst    QWORD PTR [edi]
  40f90f:	adc    eax,0x68394cb2
  40f914:	mov    ah,bl
  40f916:	xchg   esp,eax
  40f917:	mov    ecx,0xcbfdb7aa
  40f91c:	mov    esi,0xa67f9367
  40f921:	sub    al,0xd9
  40f923:	loop   0x40f8d9
  40f925:	in     al,0xf1
  40f927:	and    ecx,0xffffffd3
  40f92a:	mov    ?,esp
  40f92c:	dec    ecx
  40f92d:	cmp    bl,BYTE PTR [esi-0x678745d2]
  40f933:	pushf  
  40f934:	dec    ebp
  40f935:	mov    ah,0x11
  40f937:	mov    ecx,0x8b674947
  40f93c:	xchg   edi,eax
  40f93d:	call   0xcaa2:0x555dd26c
  40f944:	je     0x40f8ff
  40f946:	fcom   DWORD PTR [ecx+0x131fe2db]
  40f94c:	data16 jecxz 0x40f9b8
  40f94f:	(bad)  
  40f950:	fcomp  QWORD PTR [edx]
  40f952:	sbb    eax,0x8509f19
  40f957:	in     al,dx
  40f958:	call   0x92e7:0xcba6d246
  40f95f:	push   es
  40f960:	pop    esp
  40f961:	fld    TBYTE PTR [ecx]
  40f963:	jecxz  0x40f986
  40f965:	pop    esp
  40f966:	inc    eax
  40f967:	cli    
  40f968:	jle    0x40f971
  40f96a:	aad    0x4b
  40f96c:	xor    ebx,DWORD PTR [esi-0x47]
  40f96f:	gs stos BYTE PTR es:[edi],al
  40f971:	aad    0x25
  40f973:	mov    ds:0xdf50d89d,al
  40f978:	mov    dh,BYTE PTR [esi]
  40f97a:	shl    BYTE PTR [ebp-0x6b3b9e7f],0xa6
  40f981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f982:	mov    esi,0xe700f6a1
  40f987:	xchg   DWORD PTR [esi],ebx
  40f989:	push   ds
  40f98a:	sbb    DWORD PTR [edi-0x45c99ee7],ebp
  40f990:	pop    esp
  40f991:	push   edi
  40f992:	inc    edi
  40f993:	ret    
  40f994:	js     0x40f924
  40f996:	xor    BYTE PTR [ebx+eax*1-0x33d5f34d],bh
  40f99d:	jo     0x40f959
  40f99f:	push   edx
  40f9a0:	jae    0x40f9cc
  40f9a2:	add    DWORD PTR [edx+0x38],ebx
  40f9a5:	jecxz  0x40fa26
  40f9a7:	into   
  40f9a8:	ins    BYTE PTR es:[edi],dx
  40f9a9:	repnz xchg ecx,eax
  40f9ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ac:	pusha  
  40f9ad:	adc    DWORD PTR [esi-0x6d],esp
  40f9b0:	jbe    0x40f97d
  40f9b2:	repz bound ebx,QWORD PTR [ebx+0x7388f048]
  40f9b9:	add    eax,DWORD PTR [eax+0x4dfda9ab]
  40f9bf:	bound  edx,QWORD PTR gs:[eax+ebp*8]
  40f9c3:	cwde   
  40f9c4:	sbb    esi,DWORD PTR [eax]
  40f9c6:	ret    
  40f9c7:	add    al,0xe0
  40f9c9:	cmp    DWORD PTR ds:0x7d143329,ebx
  40f9cf:	sub    BYTE PTR [ebx+edx*4-0x44f27dbe],0xb9
  40f9d7:	fldcw  WORD PTR [ebx-0x3c]
  40f9da:	repz or BYTE PTR [ecx-0xf],cl
  40f9de:	pop    ss
  40f9df:	outs   dx,BYTE PTR ds:[esi]
  40f9e0:	in     al,dx
  40f9e1:	jns    0x40fa02
  40f9e3:	jp     0x40f9e5
  40f9e5:	test   al,0xee
  40f9e7:	xor    al,dl
  40f9e9:	(bad)  
  40f9ea:	ins    BYTE PTR es:[edi],dx
  40f9eb:	call   0x7a95:0x225c3e6a
  40f9f2:	jb     0x40f974
  40f9f4:	dec    edx
  40f9f5:	jmp    0xc3d6:0xa045feb0
  40f9fc:	adc    eax,0x461f4a6f
  40fa01:	cmp    DWORD PTR [edx+edi*1],0x1e80d35c
  40fa08:	lahf   
  40fa09:	pop    edi
  40fa0a:	sbb    bl,BYTE PTR [ecx+0x70]
  40fa0d:	add    ecx,DWORD PTR [eax-0x16]
  40fa10:	loope  0x40fa66
  40fa12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa13:	mov    ds:0x22cc77e0,eax
  40fa18:	lea    esp,[ebp-0x786ff65c]
  40fa1e:	xchg   eax,ecx
  40fa20:	inc    edi
  40fa21:	cmp    al,0xc8
  40fa23:	es jo  0x40fa01
  40fa26:	and    BYTE PTR ss:[ebx+edx*8],dl
  40fa2a:	lods   eax,DWORD PTR ds:[esi]
  40fa2b:	pop    ecx
  40fa2c:	adc    edi,esp
  40fa2e:	push   eax
  40fa2f:	dec    edi
  40fa30:	xchg   edi,eax
  40fa31:	sbb    dl,dl
  40fa33:	add    dl,BYTE PTR [ebx-0x76c39253]
  40fa39:	push   edi
  40fa3a:	(bad)  
  40fa3b:	dec    esp
  40fa3c:	aaa    
  40fa3d:	cmp    al,0x25
  40fa3f:	cmp    eax,0x3ce12b1c
  40fa44:	xchg   ecx,eax
  40fa45:	inc    ecx
  40fa46:	push   es
  40fa47:	fisubr DWORD PTR [ebx+0x78f3c805]
  40fa4d:	mov    ah,0x73
  40fa4f:	sub    dh,ch
  40fa51:	adc    dh,BYTE PTR [ebx-0x153f8b18]
  40fa57:	dec    ecx
  40fa58:	aaa    
  40fa59:	sub    DWORD PTR [edi+eiz*1+0x1e],eax
  40fa5d:	lock mov bh,dl
  40fa60:	and    eax,DWORD PTR [edx-0x10eb2e26]
  40fa66:	adc    eax,0xcdbf68a3
  40fa6b:	cmp    eax,DWORD PTR [esi-0x1ce0eeb1]
  40fa71:	push   edi
  40fa72:	lods   al,BYTE PTR ds:[esi]
  40fa73:	fsqrt  
  40fa75:	jmp    0x5a52:0xd1ca6370
  40fa7c:	nop
  40fa7d:	dec    edi
  40fa7e:	jno    0x40fa27
  40fa80:	in     al,0xcd
  40fa82:	or     ebp,DWORD PTR [esi+0x39]
  40fa85:	fs mov ch,dl
  40fa88:	lods   al,BYTE PTR ds:[esi]
  40fa89:	sub    BYTE PTR [ebp+0x64],ah
  40fa8c:	cmp    al,bl
  40fa8e:	iret   
  40fa8f:	(bad)  
  40fa90:	sbb    DWORD PTR [edi],edx
  40fa92:	cmp    eax,0xef427184
  40fa97:	into   
  40fa98:	rol    ch,cl
  40fa9a:	dec    edx
  40fa9b:	imul   ebx,esi,0xfffffff9
  40fa9e:	out    dx,al
  40fa9f:	pusha  
  40faa0:	xchg   esp,eax
  40faa1:	mov    edi,0x3246a8b8
  40faa6:	sbb    DWORD PTR [eax-0x26],esi
  40faa9:	sbb    ebp,edx
  40faab:	fs sbb al,0x63
  40faae:	sbb    al,0x4
  40fab0:	and    dh,BYTE PTR [eax+0xb4004b2]
  40fab6:	cdq    
  40fab7:	jge    0x40fb07
  40fab9:	imul   esi,DWORD PTR ds:0xdd02d08e,0x1f
  40fac0:	mov    esi,0x2124de7e
  40fac5:	mov    edx,0xa1e8b506
  40faca:	mov    eax,0x3ddc8e1c
  40facf:	je     0x40faaa
  40fad1:	ins    DWORD PTR es:[edi],dx
  40fad2:	sbb    DWORD PTR ds:0x60b6286e,ecx
  40fad8:	outs   dx,BYTE PTR ds:[esi]
  40fad9:	pop    es
  40fada:	dec    ebx
  40fadb:	cmp    dl,dh
  40fadd:	loope  0x40fa62
  40fadf:	hlt    
  40fae0:	aaa    
  40fae1:	pop    es
  40fae2:	(bad)  
  40fae3:	fimul  WORD PTR [ebx]
  40fae5:	scas   eax,DWORD PTR es:[edi]
  40fae6:	cwde   
  40fae7:	mov    ah,BYTE PTR [ebp+0x61]
  40faea:	sbb    ebp,esi
  40faec:	dec    ebx
  40faed:	sub    al,0xa
  40faef:	and    ch,BYTE PTR [edi+0x3]
  40faf2:	inc    ecx
  40faf3:	jp     0x40fabf
  40faf5:	mov    bl,BYTE PTR [edx-0x80]
  40faf8:	test   al,0xf5
  40fafa:	mov    DWORD PTR [edi-0x86f0987],esi
  40fb00:	jmp    0x40fb4e
  40fb02:	add    eax,0x289d90c2
  40fb07:	mov    cl,0x91
  40fb09:	js     0x40fb39
  40fb0b:	add    eax,0xd0621f74
  40fb10:	push   edi
  40fb11:	cmp    DWORD PTR [eax],ebx
  40fb13:	inc    edx
  40fb14:	inc    ecx
  40fb15:	or     BYTE PTR [eax+0x21825917],0x7f
  40fb1c:	mov    dl,0x41
  40fb1e:	or     al,cl
  40fb20:	cmp    esp,DWORD PTR [esi-0x80]
  40fb23:	dec    ebx
  40fb24:	aam    0x39
  40fb26:	or     BYTE PTR [ecx+0x25],dh
  40fb29:	hlt    
  40fb2a:	imul   eax,DWORD PTR [edi-0x74ad675],0xcbf61523
  40fb34:	jle    0x40fb46
  40fb36:	shl    esi,1
  40fb38:	shl    BYTE PTR [esi],cl
  40fb3a:	and    DWORD PTR [edx+0x69],0xffffffd8
  40fb3e:	sub    al,0x36
  40fb40:	rcr    dl,0x7
  40fb43:	stc    
  40fb44:	mov    al,ds:0xbd9a2c88
  40fb49:	jecxz  0x40faef
  40fb4b:	data16 stc 
  40fb4d:	iret   
  40fb4e:	pop    es
  40fb4f:	mov    esp,0xd80a3b0a
  40fb54:	xchg   esp,eax
  40fb55:	sbb    eax,0x71424504
  40fb5a:	mov    edx,esi
  40fb5c:	jo     0x40fbbe
  40fb5e:	arpl   WORD PTR [edi+0x1f],dx
  40fb61:	mov    esi,0x25054d4c
  40fb66:	rcl    BYTE PTR [ecx+0x79c2e0f4],cl
  40fb6c:	cmp    BYTE PTR [ebx+0x2e],dh
  40fb6f:	or     BYTE PTR [eax-0x21],ah
  40fb72:	xchg   BYTE PTR [ecx+ebx*2+0x3d],ch
  40fb76:	pop    ds
  40fb77:	mov    ebx,0x9cb4ea2
  40fb7c:	push   es
  40fb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb7e:	xchg   esi,eax
  40fb7f:	inc    ecx
  40fb80:	in     eax,0x9b
  40fb82:	enter  0x854e,0xb5
  40fb86:	and    edx,ecx
  40fb88:	mov    bh,0xe9
  40fb8a:	stos   BYTE PTR es:[edi],al
  40fb8b:	repnz add DWORD PTR [eax+eax*2-0x76d1a538],edi
  40fb93:	inc    ebp
  40fb94:	xor    bh,bh
  40fb96:	out    0x27,al
  40fb98:	inc    edi
  40fb99:	adc    dh,BYTE PTR [edi-0x61]
  40fb9c:	fisttp QWORD PTR [edx]
  40fb9e:	(bad)  
  40fb9f:	aad    0x51
  40fba1:	inc    esi
  40fba2:	cmc    
  40fba3:	pop    edi
  40fba4:	cmc    
  40fba5:	dec    eax
  40fba6:	sti    
  40fba7:	rcl    esp,0x7a
  40fbaa:	repnz retf 
  40fbac:	cld    
  40fbad:	xor    ecx,eax
  40fbaf:	jns    0x40fc2d
  40fbb1:	inc    edi
  40fbb2:	adc    dh,BYTE PTR [edx+0x76ded9f]
  40fbb8:	xor    eax,DWORD PTR [ebx-0x29fc127f]
  40fbbe:	into   
  40fbbf:	xlat   BYTE PTR ds:[ebx]
  40fbc0:	stos   DWORD PTR es:[edi],eax
  40fbc1:	xchg   BYTE PTR [edi+0x68],bh
  40fbc4:	jnp    0x40fc09
  40fbc6:	jmp    0x40fbcb
  40fbc8:	jbe    0x40fc43
  40fbca:	outs   dx,DWORD PTR ds:[esi]
  40fbcb:	hlt    
  40fbcc:	call   0x2eb6176f
  40fbd1:	shr    BYTE PTR [esi],1
  40fbd3:	jo     0x40fbd8
  40fbd5:	(bad)  
  40fbd6:	repz xchg esp,eax
  40fbd8:	mov    ecx,0x382b0c28
  40fbdd:	jmp    0x40fbd1
  40fbdf:	push   edi
  40fbe0:	mov    dh,0x31
  40fbe2:	gs mov edx,0x5a0e94e6
  40fbe8:	rol    DWORD PTR [edx-0x42],0x51
  40fbec:	sbb    esi,edx
  40fbee:	cld    
  40fbef:	xchg   edx,eax
  40fbf0:	jmp    0x40fc09
  40fbf2:	or     eax,0x71217a05
  40fbf7:	jnp    0x40fb86
  40fbf9:	aas    
  40fbfa:	imul   ebx,DWORD PTR [ebp-0x3dd73179],0xffffffe0
  40fc01:	test   eax,0xb7d3c3d0
  40fc06:	ss imul esp,ecx,0x765b9544
  40fc0d:	fwait
  40fc0e:	data16 add al,0x8f
  40fc11:	dec    eax
  40fc12:	sub    cl,BYTE PTR [edx-0x74]
  40fc15:	xchg   ebp,eax
  40fc16:	jl     0x40fc72
  40fc18:	ss out 0x2a,al
  40fc1b:	sbb    ah,BYTE PTR [ecx+edi*8-0x12dc110c]
  40fc22:	mov    edx,0xf5b0be89
  40fc27:	mov    ss,WORD PTR [esi+0x22]
  40fc2a:	cmc    
  40fc2b:	sub    BYTE PTR [eax-0x9b34863],0x6e
  40fc32:	push   edx
  40fc33:	cmp    dh,dl
  40fc35:	test   BYTE PTR [edi],cl
  40fc37:	out    0x74,eax
  40fc39:	inc    ebx
  40fc3a:	xchg   edx,eax
  40fc3b:	aas    
  40fc3c:	adc    BYTE PTR [ebx],ah
  40fc3e:	mov    eax,ds:0x3efca45
  40fc43:	mov    ch,0xb2
  40fc45:	repz cwde 
  40fc47:	add    ah,dh
  40fc49:	jmp    0xb6174014
  40fc4e:	sbb    DWORD PTR [edx+0x4f414ee9],esp
  40fc54:	jnp    0x40fc44
  40fc56:	adc    al,0x16
  40fc58:	stc    
  40fc59:	mov    BYTE PTR [edi-0x73],dl
  40fc5c:	push   cs
  40fc5d:	adc    DWORD PTR [edx-0x7e28b422],esp
  40fc63:	(bad)  
  40fc64:	cs push edx
  40fc66:	aaa    
  40fc67:	iret   
  40fc68:	lahf   
  40fc69:	daa    
  40fc6a:	mov    al,0xb2
  40fc6c:	stos   BYTE PTR es:[edi],al
  40fc6d:	fs ss xchg esp,eax
  40fc70:	outs   dx,DWORD PTR ds:[esi]
  40fc71:	cli    
  40fc72:	jb     0x40fc07
  40fc74:	lock sahf 
  40fc76:	fstp   TBYTE PTR [esi-0x51d63456]
  40fc7c:	pop    ebx
  40fc7d:	mov    bh,0x46
  40fc7f:	jp     0x40fcea
  40fc81:	(bad)  
  40fc82:	mov    bh,0x10
  40fc84:	mov    ebx,edi
  40fc86:	aaa    
  40fc87:	out    dx,al
  40fc88:	data16 fidiv WORD PTR [esi+ebp*4-0x7c4fc096]
  40fc90:	jmp    0x93539b8d
  40fc95:	mov    edi,0x8183c643
  40fc9a:	and    al,0xbb
  40fc9c:	ret    
  40fc9d:	sbb    DWORD PTR [ebx],ebp
  40fc9f:	iret   
  40fca0:	inc    ebp
  40fca1:	adc    eax,0xd20d54e7
  40fca6:	outs   dx,BYTE PTR ds:[esi]
  40fca7:	int    0xf2
  40fca9:	mov    fs,WORD PTR [ecx-0x29]
  40fcac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcad:	sbb    eax,0x2e43ef84
  40fcb2:	adc    al,0xef
  40fcb4:	add    BYTE PTR [edi+0x201c8a61],bh
  40fcba:	imul   ebp,DWORD PTR [ecx],0xffffffd1
  40fcbd:	mov    bl,0x11
  40fcbf:	pop    ebp
  40fcc0:	inc    esp
  40fcc1:	add    dh,BYTE PTR [ebx]
  40fcc3:	dec    esi
  40fcc4:	inc    ebp
  40fcc5:	push   esi
  40fcc6:	push   edi
  40fcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc8:	retf   
  40fcc9:	dec    ebx
  40fcca:	mov    esi,ecx
  40fccc:	or     DWORD PTR [ebp+0x57],eax
  40fccf:	cdq    
  40fcd0:	pop    ecx
  40fcd1:	adc    ah,BYTE PTR [edx-0x62a27aaa]
  40fcd7:	xor    al,0x2e
  40fcd9:	mov    esp,0x8888b38a
  40fcde:	mov    ch,BYTE PTR [esi-0xd0ea227]
  40fce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fce5:	bound  ebp,QWORD PTR [edx-0x66e9f33f]
  40fceb:	ins    BYTE PTR es:[edi],dx
  40fcec:	pusha  
  40fced:	mov    ebp,0x88a9803e
  40fcf2:	bound  ebp,QWORD PTR [edx-0x38]
  40fcf5:	loopne 0x40fc9c
  40fcf7:	mov    eax,0xb81515a3
  40fcfc:	sbb    al,0xdc
  40fcfe:	scas   al,BYTE PTR es:[edi]
  40fcff:	in     al,dx
  40fd00:	outs   dx,BYTE PTR ds:[esi]
  40fd01:	mov    cl,0x46
  40fd03:	xor    eax,0xcad2aadb
  40fd08:	fcomp  QWORD PTR [esi+0x23]
  40fd0b:	mov    al,0x5f
  40fd0d:	mov    dl,0xc
  40fd0f:	push   ss
  40fd10:	pushf  
  40fd11:	shl    BYTE PTR [edx+0x7a4c62dd],1
  40fd17:	mov    eax,0x52edcf79
  40fd1c:	jecxz  0x40fd6d
  40fd1e:	ja     0x40fcd1
  40fd20:	cdq    
  40fd21:	xchg   DWORD PTR [eax-0x3f7e61f],ebp
  40fd27:	ret    
  40fd28:	xchg   ecx,eax
  40fd29:	mov    eax,ds:0x6f387252
  40fd2e:	ins    BYTE PTR es:[edi],dx
  40fd2f:	pop    edi
  40fd30:	inc    ecx
  40fd31:	fucom  st(1)
  40fd34:	ret    0x784d
  40fd37:	jne    0x40fd16
  40fd39:	int3   
  40fd3a:	or     BYTE PTR [ecx+0x71],ch
  40fd3d:	imul   edx,DWORD PTR [edx+edi*2+0x51],0xe522c359
  40fd45:	je     0x40fd38
  40fd47:	arpl   ax,ax
  40fd49:	(bad)  
  40fd4a:	mov    cl,0x68
  40fd4c:	dec    BYTE PTR ds:0xa13007fe
  40fd52:	mov    dl,0x67
  40fd54:	popa   
  40fd55:	cmp    BYTE PTR [ebp+0x2d],bl
  40fd58:	add    DWORD PTR [ebp-0x5d],ecx
  40fd5b:	sbb    BYTE PTR [edx],ah
  40fd5d:	in     eax,dx
  40fd5e:	and    edi,ecx
  40fd60:	mov    al,ds:0x66e13860
  40fd65:	jnp    0x40fd5b
  40fd67:	push   edi
  40fd68:	int3   
  40fd69:	and    ch,BYTE PTR [eax]
  40fd6b:	lods   eax,DWORD PTR fs:[esi]
  40fd6d:	jnp    0x40fdcf
  40fd6f:	test   ch,0x44
  40fd72:	ss iret 
  40fd74:	push   edx
  40fd75:	jle    0x40fd68
  40fd77:	pop    ss
  40fd78:	jnp    0x40fd73
  40fd7a:	push   eax
  40fd7b:	test   BYTE PTR [edx+0x2ee4aaa1],bl
  40fd81:	repnz test BYTE PTR [esi],dh
  40fd84:	out    dx,eax
  40fd85:	jmp    0x4955:0xf772795a
  40fd8c:	mov    dl,0x4b
  40fd8e:	pop    edi
  40fd8f:	sub    eax,esi
  40fd91:	ret    0x4bae
  40fd94:	pop    esp
  40fd95:	data16 (bad) 
  40fd97:	outs   dx,BYTE PTR ds:[esi]
  40fd98:	icebp  
  40fd99:	cmp    eax,0x73124ff
  40fd9e:	add    DWORD PTR [ebp-0x52],esi
  40fda1:	cdq    
  40fda2:	push   eax
  40fda3:	ja     0x40fd92
  40fda5:	call   0xd72b:0xba093dac
  40fdac:	sbb    esp,ecx
  40fdae:	in     al,dx
  40fdaf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40fdb1:	test   al,0x93
  40fdb3:	lock outs dx,DWORD PTR ds:[esi]
  40fdb5:	mov    edi,0xb176f3d7
  40fdba:	mov    al,0xe5
  40fdbc:	test   al,0x14
  40fdbe:	js     0x40fddd
  40fdc0:	lahf   
  40fdc1:	pop    esi
  40fdc2:	lea    esi,[ecx+0x69717499]
  40fdc8:	fisttp QWORD PTR [edi-0x3f2e2928]
  40fdce:	sbb    eax,0xb008c8e0
  40fdd3:	loope  0x40fd6d
  40fdd5:	and    BYTE PTR [esi-0x51fcd21e],cl
  40fddb:	mov    al,0xe1
  40fddd:	clc    
  40fdde:	rol    BYTE PTR [edi+0x23],cl
  40fde1:	ror    DWORD PTR [ebp+edx*4-0x38],1
  40fde5:	sub    BYTE PTR [ebx+0x49],0x3a
  40fde9:	and    ah,BYTE PTR [ebx]
  40fdeb:	push   ecx
  40fdec:	sub    eax,0xcd235f95
  40fdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf2:	mov    al,ds:0x346e78ff
  40fdf7:	test   BYTE PTR ds:0xf6f4d1f1,dl
  40fdfd:	mov    ebp,0x9ba369ae
  40fe02:	fadd   DWORD PTR [ecx]
  40fe04:	pop    ecx
  40fe05:	jle    0x40fdfc
  40fe07:	das    
  40fe08:	inc    eax
  40fe09:	lds    esp,FWORD PTR [ecx+0x7f98d1e0]
  40fe0f:	jp     0x40fe52
  40fe11:	xchg   esi,eax
  40fe12:	mov    ds:0x394a4990,al
  40fe17:	sub    eax,0xb9bb06e0
  40fe1c:	inc    esp
  40fe1d:	push   0x28
  40fe1f:	cmove  esp,DWORD PTR [eax-0x78]
  40fe23:	aas    
  40fe24:	sub    edi,DWORD PTR [ecx+edx*2-0x5f23ebc]
  40fe2b:	pop    ss
  40fe2c:	repnz pop eax
  40fe2e:	mov    ds:0x178ea2e1,eax
  40fe33:	call   0x4e7fdac0
  40fe38:	icebp  
  40fe39:	int    0xd5
  40fe3b:	adc    eax,DWORD PTR [ecx+0x62edbd22]
  40fe41:	lea    edx,[ecx]
  40fe43:	lahf   
  40fe44:	and    cl,BYTE PTR [edi]
  40fe46:	mov    eax,0xf2bdfb03
  40fe4b:	jmp    0x8559:0x7ecc72ce
  40fe52:	push   ebx
  40fe53:	sar    BYTE PTR [edx],0x1a
  40fe56:	xor    al,dl
  40fe58:	jg     0x40fe9a
  40fe5a:	mov    edi,0x5dc13e8f
  40fe5f:	int    0xa5
  40fe61:	adc    eax,DWORD PTR es:[edx+0x37a0c58c]
  40fe68:	dec    ebp
  40fe69:	mov    ecx,0x446db979
  40fe6e:	fcmovb st,st(0)
  40fe70:	or     bh,BYTE PTR [edi]
  40fe72:	lods   eax,DWORD PTR ds:[esi]
  40fe73:	dec    ebx
  40fe74:	test   ecx,esi
  40fe76:	adc    al,0xb8
  40fe78:	mov    dh,0xf5
  40fe7a:	sub    DWORD PTR [ebx+0x56],esp
  40fe7d:	mov    cl,0xde
  40fe7f:	xlat   BYTE PTR ds:[ebx]
  40fe80:	push   ss
  40fe81:	inc    esi
  40fe82:	jmp    0x40fe82
  40fe84:	retf   
  40fe85:	push   esp
  40fe86:	les    edi,FWORD PTR [eax+0x43]
  40fe89:	out    0xee,al
  40fe8b:	sub    BYTE PTR fs:[edx+ebx*1-0x508ec6d7],0x48
  40fe94:	mov    ah,0xaa
  40fe96:	iret   
  40fe97:	mov    ecx,0xcaca0485
  40fe9c:	xchg   esi,eax
  40fe9d:	nop
  40fe9e:	mov    edx,DWORD PTR [esi]
  40fea0:	fs pushf 
  40fea2:	js     0x40fe7d
  40fea4:	mov    cs,WORD PTR [esi+ebp*1-0x7e]
  40fea8:	lahf   
  40fea9:	stos   DWORD PTR es:[edi],eax
  40feaa:	or     al,0xd9
  40feac:	enter  0x4b7a,0x8b
  40feb0:	mov    al,ds:0xb4d48c6e
  40feb5:	mov    bh,0x93
  40feb7:	int    0x99
  40feb9:	cwde   
  40feba:	lods   eax,DWORD PTR ds:[esi]
  40febb:	mov    ah,0xbc
  40febd:	push   0x59
  40febf:	push   ebx
  40fec0:	sbb    BYTE PTR [ecx+0x46],bl
  40fec3:	pop    edx
  40fec4:	fwait
  40fec5:	xchg   edi,eax
  40fec6:	cmp    BYTE PTR [ebx],dh
  40fec8:	mov    eax,?
  40feca:	int    0x2f
  40fecc:	adc    BYTE PTR [esi],0xf4
  40fecf:	push   edi
  40fed0:	shr    DWORD PTR [ebx+ebp*8-0x6d7d3ad9],1
  40fed7:	jnp    0x40ff02
  40fed9:	mov    esi,0x2cc3de47
  40fede:	pop    ds
  40fedf:	adc    ah,cl
  40fee1:	(bad)  
  40fee2:	ja     0x40fee7
  40fee4:	mov    ds:0xbaa848cf,eax
  40fee9:	mov    ch,0x40
  40feeb:	dec    ebx
  40feec:	sahf   
  40feed:	in     al,0x4e
  40feef:	push   edx
  40fef0:	inc    edx
  40fef1:	pop    ebp
  40fef2:	shl    DWORD PTR [ecx+0x1a],cl
  40fef5:	dec    eax
  40fef6:	push   ecx
  40fef7:	mov    dh,0xa7
  40fef9:	push   cs
  40fefa:	fsub   QWORD PTR [esi+0x19]
  40fefd:	mov    ecx,0xdea3ef03
  40ff02:	cdq    
  40ff03:	leave  
  40ff04:	stos   BYTE PTR es:[edi],al
  40ff05:	pop    eax
  40ff06:	ds mov edx,0xf202152f
  40ff0c:	call   0x1b72:0x9ddcd33b
  40ff13:	mov    ebx,ecx
  40ff15:	and    ebx,DWORD PTR [ebx+0x34]
  40ff18:	mov    ebx,0x3a8cb94e
  40ff1d:	mov    ebp,0x62ae225d
  40ff22:	std    
  40ff23:	mov    al,BYTE PTR [eax]
  40ff25:	add    eax,0xf31889f
  40ff2a:	adc    BYTE PTR [eax],dh
  40ff2c:	xchg   ebp,eax
  40ff2d:	imul   edi,DWORD PTR [esi-0x2ccffc25],0xa81131e2
  40ff37:	fist   WORD PTR [edi]
  40ff39:	lods   al,BYTE PTR ds:[esi]
  40ff3a:	push   edx
  40ff3b:	add    bl,BYTE PTR [edx-0x345c92ce]
  40ff41:	jge    0x40ff5e
  40ff43:	inc    ebx
  40ff44:	pop    eax
  40ff45:	jnp    0x40ff5d
  40ff47:	dec    esp
  40ff48:	cmp    ebp,ebx
  40ff4a:	shl    DWORD PTR [ebp+ebx*8-0x45c1d9f7],cl
  40ff51:	and    DWORD PTR [ebp+eiz*1+0x3c],edx
  40ff55:	push   0xfffffffa
  40ff57:	pushf  
  40ff58:	push   ebx
  40ff59:	xor    BYTE PTR [edi-0x17],0xa7
  40ff5d:	loope  0x40ff87
  40ff5f:	mov    edx,0x59bcc74b
  40ff64:	pop    edi
  40ff65:	aad    0x3e
  40ff67:	mov    eax,edi
  40ff69:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ff6b:	mov    esi,0x3900ff3c
  40ff70:	push   ds
  40ff71:	ret    
  40ff72:	jns    0x40ffc1
  40ff74:	xchg   ebx,eax
  40ff75:	mov    dh,0x23
  40ff77:	mov    bl,0xe
  40ff79:	ss inc ecx
  40ff7b:	ja     0x40ff13
  40ff7d:	push   eax
  40ff7e:	pop    edi
  40ff7f:	fstp   QWORD PTR [esi+esi*4-0x12]
  40ff83:	(bad)  
  40ff84:	popf   
  40ff85:	xor    ch,BYTE PTR [esi]
  40ff87:	inc    esp
  40ff88:	ds xor eax,0xea6e28d8
  40ff8e:	lds    ebx,FWORD PTR [ecx-0x42]
  40ff91:	add    BYTE PTR [ebp+0x4286bf81],bh
  40ff97:	jae    0x40ffd8
  40ff99:	adc    eax,0xc72a3364
  40ff9e:	popf   
  40ff9f:	mov    ds:0x62a271e2,eax
  40ffa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa5:	cmp    BYTE PTR [ecx],0x18
  40ffa8:	xlat   BYTE PTR ds:[ebx]
  40ffa9:	mov    ds:0x79339995,al
  40ffae:	or     bh,BYTE PTR [ebp-0x389d1bb4]
  40ffb4:	popa   
  40ffb5:	rcr    bh,cl
  40ffb7:	hlt    
  40ffb8:	lods   al,BYTE PTR ds:[esi]
  40ffb9:	lahf   
  40ffba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffbb:	cdq    
  40ffbc:	or     eax,0x88930beb
  40ffc1:	ret    
  40ffc2:	mov    ecx,0xca104e56
  40ffc7:	loop   0x40ff84
  40ffc9:	in     ax,0x11
  40ffcc:	mov    edi,0x7382b3d7
  40ffd1:	dec    edi
  40ffd2:	dec    ebx
  40ffd3:	or     eax,DWORD PTR [eax-0x60e0303f]
  40ffd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffda:	(bad)  [edx+0x45da4d39]
  40ffe0:	or     al,0x5c
  40ffe2:	enter  0x4c15,0xc1
  40ffe6:	shl    BYTE PTR [ebx],1
  40ffe8:	push   ebx
  40ffe9:	(bad)  
  40ffea:	adc    edi,esp
  40ffec:	mov    ch,0xb
  40ffee:	cmp    al,BYTE PTR [eax+0x61d37960]
  40fff4:	push   ss
  40fff5:	ret    
  40fff6:	xchg   BYTE PTR ds:0x847fb7e2,dl
  40fffc:	jge    0x40ff97
  40fffe:	and    esi,eax
  410000:	dec    ecx
  410001:	std    
  410002:	loop   0x41004f
  410004:	push   esi
  410005:	sub    al,0x7a
  410007:	add    dh,BYTE PTR [ebx+eax*4+0x699972dd]
  41000e:	mov    ch,0x16
  410010:	into   
  410011:	(bad)  
  410012:	cli    
  410013:	push   eax
  410014:	push   edi
  410015:	pop    esi
  410016:	pop    es
  410017:	dec    ebp
  410018:	ja     0x41002c
  41001a:	mov    eax,0xdf8ba92a
  41001f:	repnz adc edx,ebp
  410022:	sub    DWORD PTR [ebx+ecx*1],ecx
  410025:	push   ebx
  410026:	cmp    cl,ah
  410028:	xor    BYTE PTR [eax+ebp*8+0x33f75fbb],dh
  41002f:	mov    al,ds:0x8dc6afe1
  410034:	xchg   ebp,eax
  410035:	ret    
  410036:	fisub  DWORD PTR [ecx+0x648ceb59]
  41003c:	dec    ebx
  41003d:	rol    BYTE PTR [edx],cl
  41003f:	mov    es,WORD PTR cs:[edi-0x7117e0a]
  410046:	andnps xmm7,xmm4
  410049:	iret   
  41004a:	fwait
  41004b:	and    BYTE PTR [esi-0x6b252363],dh
  410051:	xchg   esp,eax
  410052:	lock int 0xba
  410055:	loopne 0x410030
  410057:	mov    esi,0xe3cd1184
  41005c:	loope  0x4100a1
  41005e:	stc    
  41005f:	dec    esi
  410060:	mov    bl,0xda
  410062:	sub    ebp,edx
  410064:	jmp    0xac46:0x73ab224d
  41006b:	stos   DWORD PTR es:[edi],eax
  41006c:	fdiv   st(2),st
  41006e:	mov    ebp,0x8d68cd14
  410073:	inc    esp
  410074:	xchg   edx,eax
  410075:	adc    ch,cl
  410077:	add    eax,0xfd96eb8c
  41007c:	or     ah,BYTE PTR [ecx]
  41007e:	idiv   BYTE PTR [eax-0xea42e68]
  410084:	popa   
  410085:	stos   DWORD PTR es:[edi],eax
  410086:	xchg   esp,eax
  410087:	ret    0x78ed
  41008a:	inc    esp
  41008b:	add    dl,cl
  41008d:	(bad)  
  41008e:	mov    ch,0x39
  410090:	les    esi,FWORD PTR [esi+0x49416e0f]
  410096:	cmp    bh,BYTE PTR [eax-0x4b57a276]
  41009c:	push   ecx
  41009d:	xchg   ecx,eax
  41009e:	mov    ecx,0xaf21123f
  4100a3:	out    0x30,eax
  4100a5:	(bad)  
  4100a6:	sub    ecx,edx
  4100a8:	fstp   DWORD PTR [ecx+0x6f5bd49f]
  4100ae:	or     eax,0xb7fa3ccf
  4100b3:	inc    ecx
  4100b4:	mov    ds:0x8c14114c,eax
  4100b9:	pop    esp
  4100ba:	lods   eax,DWORD PTR ds:[esi]
  4100bc:	data16 jle 0x41010e
  4100bf:	xchg   esp,eax
  4100c0:	scas   al,BYTE PTR es:[edi]
  4100c1:	stos   BYTE PTR es:[edi],al
  4100c2:	xchg   BYTE PTR [esi-0x16],dl
  4100c5:	lock mov DWORD PTR [edi-0x5f8efc56],ecx
  4100cc:	mov    ah,0xc
  4100ce:	mov    ch,0x28
  4100d0:	cmp    BYTE PTR [edx],dl
  4100d2:	aad    0x6b
  4100d4:	pop    es
  4100d5:	test   eax,0x89a9414b
  4100da:	int3   
  4100db:	inc    edx
  4100dc:	mov    ds:0x978d239,al
  4100e1:	ja     0x410154
  4100e3:	(bad)  
  4100e5:	xor    cl,dh
  4100e7:	int3   
  4100e8:	out    dx,eax
  4100e9:	add    ebp,esi
  4100eb:	jp     0x41007d
  4100ed:	nop
  4100ee:	xor    dh,bl
  4100f0:	and    edx,edx
  4100f2:	sar    DWORD PTR [ebp-0x245066c6],1
  4100f8:	dec    ebp
  4100f9:	je     0x410175
  4100fb:	dec    ebx
  4100fc:	adc    BYTE PTR [eax+0x44],cl
  4100ff:	mov    eax,ds:0x6c3c962b
  410104:	sbb    ecx,DWORD PTR [eax-0x6e]
  410107:	adc    BYTE PTR [eax+0x5d],dl
  41010a:	clc    
  41010b:	push   eax
  41010c:	mov    ds:0x40655c31,eax
  410111:	inc    eax
  410112:	inc    ebp
  410113:	jae    0x41010d
  410115:	mov    dl,0x3f
  410117:	lea    eax,[edx]
  410119:	or     eax,0xe133492a
  41011e:	ins    BYTE PTR es:[edi],dx
  41011f:	rol    DWORD PTR [edx-0x5684d663],0x3
  410126:	xor    ebp,DWORD PTR [ecx-0x7d]
  410129:	test   al,0xe9
  41012b:	fscale 
  41012d:	xchg   ah,ch
  41012f:	sahf   
  410130:	sub    ecx,DWORD PTR [edx+esi*1-0x18]
  410134:	jae    0x41016d
  410136:	mov    ds:0xa81a4fcf,al
  41013b:	sub    al,0x86
  41013d:	push   eax
  41013e:	jp     0x4100f5
  410140:	lock mov bl,bh
  410143:	add    DWORD PTR [ecx],ecx
  410145:	ret    
  410146:	inc    ecx
  410147:	jecxz  0x41018a
  410149:	jae    0x410193
  41014b:	aam    0xd9
  41014d:	sbb    bl,BYTE PTR [edx-0x5c287599]
  410153:	test   al,0xf9
  410155:	loope  0x410156
  410157:	es push ss
  410159:	pop    esp
  41015a:	cmp    esp,DWORD PTR [ebp+0x47]
  41015d:	ins    BYTE PTR es:[edi],dx
  41015e:	jbe    0x41010e
  410160:	lock iret 
  410162:	dec    eax
  410163:	add    BYTE PTR [ebp-0x15907296],cl
  410169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41016a:	sbb    BYTE PTR [ebx-0x8235cc6],cl
  410170:	xchg   esi,eax
  410171:	test   DWORD PTR [edx],esp
  410173:	xchg   ecx,eax
  410174:	xchg   ebx,eax
  410175:	cmp    DWORD PTR [esi+0x6b],ebp
  410178:	push   edx
  410179:	or     al,0x5d
  41017b:	dec    edx
  41017c:	push   ds
  41017d:	scas   eax,DWORD PTR es:[edi]
  41017e:	daa    
  41017f:	pop    edx
  410180:	dec    ecx
  410181:	dec    esp
  410182:	fcmovnu st,st(7)
  410184:	rol    bh,0x97
  410187:	imul   BYTE PTR [ebx-0x50f7415]
  41018d:	add    esi,DWORD PTR [edi-0x4d]
  410190:	nop
  410191:	sbb    DWORD PTR [eax+0x5c],esp
  410194:	xchg   dl,bl
  410196:	int3   
  410197:	fbstp  TBYTE PTR [edi+0x587b0fb9]
  41019d:	or     dl,BYTE PTR [edi+0xd]
  4101a0:	xor    al,0x71
  4101a2:	fdivp  st(3),st
  4101a4:	daa    
  4101a5:	int    0xc8
  4101a7:	out    dx,eax
  4101a8:	sahf   
  4101a9:	mov    dh,0xeb
  4101ab:	retf   
  4101ac:	jno    0x41020d
  4101ae:	dec    ebx
  4101af:	popw   ds
  4101b1:	clc    
  4101b2:	adc    BYTE PTR [esi],ah
  4101b4:	pop    eax
  4101b5:	or     edi,DWORD PTR gs:[eax+0x59]
  4101b9:	ja     0x4101e2
  4101bb:	daa    
  4101bc:	push   esp
  4101bd:	sub    BYTE PTR [edi+0x7c60d9a5],bl
  4101c3:	lods   al,BYTE PTR ds:[esi]
  4101c4:	and    ebp,edx
  4101c6:	aas    
  4101c7:	scas   al,BYTE PTR es:[edi]
  4101c8:	mov    al,0xb5
  4101ca:	jnp    0x4101af
  4101cc:	int3   
  4101cd:	rcl    BYTE PTR [ebp-0x82361a8],0x75
  4101d4:	add    edx,DWORD PTR [esp+esi*8]
  4101d7:	cmp    bl,BYTE PTR [eax+0x1d]
  4101da:	jno    0x41018a
  4101dc:	xor    ebp,DWORD PTR [edi]
  4101de:	xlat   BYTE PTR ds:[ebx]
  4101df:	pop    ebx
  4101e0:	fcmovu st,st(3)
  4101e2:	sub    eax,0x7ec4eb91
  4101e7:	pop    ds
  4101e8:	cmp    eax,0x1413082b
  4101ed:	adc    DWORD PTR [ecx-0x160a841a],eax
  4101f3:	(bad)  
  4101f4:	fadd   QWORD PTR [ebx+edx*8-0x69]
  4101f8:	mov    ah,0xbc
  4101fa:	aaa    
  4101fb:	dec    ebx
  4101fc:	(bad)  
  4101fd:	test   eax,0x1ff52cb1
  410202:	adc    bl,ah
  410204:	and    BYTE PTR [ebp-0x3c9c082c],cl
  41020a:	shl    bl,1
  41020c:	clc    
  41020d:	inc    edx
  41020e:	pop    ss
  41020f:	mov    bl,0xfd
  410211:	mov    DWORD PTR [ebx+0x57e4492e],esp
  410217:	and    al,0xcd
  410219:	loopne 0x4101d5
  41021b:	es fwait
  41021d:	pushf  
  41021e:	and    dl,BYTE PTR ds:0x9d247c13
  410224:	ja     0x410258
  410226:	jb     0x410260
  410228:	test   BYTE PTR [ecx-0x76d0a4f0],dh
  41022e:	pop    ebp
  41022f:	sub    BYTE PTR [edi+0x71],cl
  410232:	pop    ebx
  410233:	adc    DWORD PTR [ebx],ebx
  410235:	inc    ecx
  410236:	mov    bh,0xec
  410238:	mov    BYTE PTR [edi-0x6a],al
  41023b:	das    
  41023c:	pusha  
  41023d:	mov    ebx,DWORD PTR [edx-0x21b190f1]
  410243:	push   ss
  410244:	lods   eax,DWORD PTR ds:[esi]
  410245:	cmp    al,0x48
  410247:	stos   DWORD PTR es:[edi],eax
  410248:	ret    0xce96
  41024b:	mov    DWORD PTR [eax+0x40],esp
  41024e:	imul   esp,DWORD PTR [ecx+0x6e72f0f],0x5b43f04f
  410258:	stc    
  410259:	adc    BYTE PTR [ebx-0x461e679b],ah
  41025f:	shr    DWORD PTR [edi+0x54],cl
  410262:	loope  0x4102d3
  410264:	adc    al,0xae
  410266:	sub    ecx,esp
  410268:	jbe    0x41025d
  41026a:	cmp    bl,BYTE PTR [ecx]
  41026c:	push   0xffffffed
  41026e:	push   ebx
  41026f:	fucom  st(3)
  410271:	adc    BYTE PTR [esi-0x5],dh
  410274:	xchg   edi,eax
  410275:	pusha  
  410276:	lods   eax,DWORD PTR ds:[esi]
  410277:	or     al,0x99
  410279:	cpuid  
  41027b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027d:	xchg   ebx,eax
  41027e:	sbb    ecx,DWORD PTR [ebx]
  410280:	sub    dl,BYTE PTR [ebx+0x56058e09]
  410286:	mov    ds:0x488a77b4,eax
  41028b:	push   edi
  41028c:	bound  ecx,QWORD PTR [ecx-0x149250ae]
  410292:	icebp  
  410293:	push   edx
  410294:	push   0x45b27e33
  410299:	cmp    al,BYTE PTR [ebx-0x6f620168]
  41029f:	cld    
  4102a0:	loopne 0x410314
  4102a2:	or     ebx,DWORD PTR [edx+eax*8]
  4102a5:	dec    ebx
  4102a6:	js     0x4102a8
  4102a8:	mov    dh,0x19
  4102aa:	in     eax,0xdf
  4102ac:	sbb    eax,0x5cf0c958
  4102b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b2:	imul   DWORD PTR [ebx+ecx*4+0x2fcd180b]
  4102b9:	adc    eax,0x3edfe32d
  4102be:	or     DWORD PTR [edx],0x11
  4102c1:	push   ecx
  4102c2:	test   eax,0x91113269
  4102c7:	xchg   ebx,eax
  4102c8:	xchg   edx,eax
  4102c9:	test   DWORD PTR [ecx-0x3e],esi
  4102cc:	std    
  4102cd:	lock das 
  4102cf:	ins    BYTE PTR es:[edi],dx
  4102d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d1:	test   eax,0x75002685
  4102d6:	hlt    
  4102d7:	ins    DWORD PTR es:[edi],dx
  4102d8:	inc    eax
  4102d9:	into   
  4102da:	dec    esi
  4102db:	rcr    DWORD PTR [ecx],1
  4102dd:	pop    DWORD PTR [eax+0x6a674a41]
  4102e3:	push   0x61b6f2ae
  4102e8:	jmp    0x5d1a:0x95b9e693
  4102ef:	ins    DWORD PTR es:[edi],dx
  4102f0:	mov    eax,ds:0xfa4c5aae
  4102f5:	and    al,0xd4
  4102f7:	adc    esi,DWORD PTR [ebp+ebp*8+0x74]
  4102fb:	push   edi
  4102fc:	cs dec edx
  4102fe:	fld    TBYTE PTR [edx]
  410300:	das    
  410301:	inc    ebx
  410302:	mul    dh
  410304:	loopne 0x41037c
  410306:	sbb    eax,0x1a537ca1
  41030b:	mov    edx,0xfa711ce7
  410310:	outs   dx,DWORD PTR ds:[esi]
  410311:	ja     0x410322
  410313:	inc    ebx
  410314:	in     al,0x37
  410316:	mov    esp,0xe22cc237
  41031b:	stos   BYTE PTR es:[edi],al
  41031c:	retf   
  41031d:	push   0xffffff8f
  41031f:	outs   dx,BYTE PTR ds:[esi]
  410320:	adc    dh,BYTE PTR [edx-0x3eb2ae84]
  410326:	or     BYTE PTR [eax+0x6a6f0dd2],0xd6
  41032d:	mov    bh,0xff
  41032f:	xor    eax,0xe01fc399
  410334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410335:	xor    ebp,DWORD PTR [eax]
  410337:	in     eax,0x87
  410339:	push   edx
  41033a:	and    eax,0x5c2c8359
  41033f:	jne    0x41032f
  410341:	pop    ss
  410342:	imul   ebp,DWORD PTR [eax+0x1],0xffffffce
  410346:	pop    ss
  410347:	dec    ebx
  410348:	inc    ebx
  410349:	les    esi,FWORD PTR [esi-0x37]
  41034c:	mov    al,BYTE PTR [edx+ebx*8+0x1805ece8]
  410353:	imul   BYTE PTR [ecx+esi*8+0x58]
  410357:	div    BYTE PTR [ebx+0x14]
  41035a:	cmp    al,0x9
  41035c:	outs   dx,BYTE PTR ds:[esi]
  41035d:	call   0x27a2:0x1d0062e5
  410364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410365:	lea    eax,[esi]
  410367:	stos   DWORD PTR es:[edi],eax
  410368:	(bad)  [esi]
  41036a:	(bad)  
  41036b:	or     al,0x62
  41036d:	not    DWORD PTR [edx]
  41036f:	cmp    ebx,edx
  410371:	inc    ebp
  410372:	int    0xec
  410374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410375:	sub    dl,BYTE PTR [edx]
  410377:	shr    ecx,1
  410379:	fld    QWORD PTR [ecx]
  41037b:	and    ah,BYTE PTR [edx+0x58]
  41037e:	and    al,0x6e
  410380:	scas   eax,DWORD PTR es:[edi]
  410381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410383:	xlat   BYTE PTR ds:[ebx]
  410384:	jbe    0x4103dd
  410386:	aad    0x7f
  410388:	xchg   ecx,eax
  410389:	(bad)  
  41038a:	fldl2t 
  41038c:	xchg   ebx,eax
  41038d:	xchg   ebx,eax
  41038e:	xchg   ecx,eax
  41038f:	xchg   edx,eax
  410390:	je     0x410378
  410392:	jp     0x410380
  410394:	jns    0x410337
  410396:	lock pusha 
  410398:	pop    eax
  410399:	mov    ch,BYTE PTR [esi]
  41039b:	sti    
  41039c:	pop    ebp
  41039d:	ins    BYTE PTR es:[edi],dx
  41039e:	mov    dh,0xc4
  4103a0:	je     0x410325
  4103a2:	mov    WORD PTR [eax],?
  4103a4:	cdq    
  4103a5:	or     al,0x12
  4103a7:	mov    bl,0xa9
  4103a9:	out    0x4d,eax
  4103ab:	retf   0xc3
  4103ae:	or     dl,BYTE PTR [ebx-0x47]
  4103b1:	inc    ebx
  4103b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103b3:	mov    bh,BYTE PTR [ebp+0xd]
  4103b6:	or     eax,0x70a62b62
  4103bb:	sbb    BYTE PTR [ebx],0x96
  4103be:	mov    ecx,0x85783bd4
  4103c3:	ror    BYTE PTR [ecx],0xab
  4103c6:	mov    ?,eax
  4103c8:	fsubrp st(3),st
  4103ca:	xor    bl,ch
  4103cc:	jb     0x410390
  4103ce:	mov    ah,0xcb
  4103d0:	sub    esp,DWORD PTR [ecx+0x1a]
  4103d3:	(bad)
  4103d7:	push   es
  4103d8:	mov    al,0xb7
  4103da:	ficom  DWORD PTR [ebx+ecx*8]
  4103dd:	add    ah,BYTE PTR [esi-0x2b]
  4103e0:	ins    DWORD PTR es:[edi],dx
  4103e1:	xor    al,0x65
  4103e3:	rol    BYTE PTR [esi-0x19],1
  4103e6:	ss cli 
  4103e8:	ret    
  4103e9:	push   0x36b83cd5
  4103ee:	push   esp
  4103ef:	pop    esi
  4103f0:	rcr    bh,cl
  4103f2:	pop    esi
  4103f3:	ins    BYTE PTR es:[edi],dx
  4103f4:	push   ebx
  4103f5:	hlt    
  4103f6:	aas    
  4103f7:	jmp    0x41038e
  4103f9:	cmp    ebx,DWORD PTR [ecx+esi*1-0x6c]
  4103fd:	jmp    0x1941:0x589caab8
  410404:	mov    bh,BYTE PTR [edx-0x45]
  410407:	xchg   al,dl
  410409:	shl    DWORD PTR [edi],0xeb
  41040c:	mov    ebp,0xaec73302
  410411:	retf   0x6f14
  410414:	sbb    bh,dl
  410416:	add    al,0xc8
  410418:	jecxz  0x410484
  41041a:	sbb    eax,DWORD PTR [edi-0x24]
  41041d:	out    0x66,al
  41041f:	xor    DWORD PTR [ecx],0x1e
  410422:	pushf  
  410423:	int3   
  410424:	(bad)  
  410425:	out    dx,eax
  410426:	and    DWORD PTR [esi],esi
  410428:	mov    ah,0x39
  41042a:	push   ebp
  41042b:	xchg   edi,eax
  41042c:	mov    ds:0x8f117a38,al
  410431:	repz sub DWORD PTR [ecx],ebx
  410434:	jp     0x410443
  410436:	add    edi,0x973a1d4a
  41043c:	jbe    0x410457
  41043e:	xor    BYTE PTR [esi],al
  410440:	push   esp
  410441:	cs mov esi,0xa5ba9d29
  410447:	mov    WORD PTR [edi],?
  410449:	sub    ebp,0x99a3cdcb
  41044f:	inc    edi
  410450:	inc    ebx
  410451:	pop    esp
  410452:	or     ebx,DWORD PTR [esi]
  410454:	(bad)  
  410457:	jl     0x41044d
  410459:	jb     0x410469
  41045b:	stos   BYTE PTR es:[edi],al
  41045c:	jle    0x41048a
  41045e:	xchg   ecx,eax
  41045f:	jmp    0xe592:0xed3cf72c
  410466:	adc    eax,0x7c6c08c5
  41046b:	xchg   ebp,eax
  41046c:	fsub   DWORD PTR [ecx]
  41046e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046f:	out    0xdb,al
  410471:	push   ebx
  410472:	test   DWORD PTR [ebp+0x462e8b4d],edx
  410478:	dec    esi
  410479:	in     eax,0x16
  41047b:	es imul ebx,ecx,0xffffff9f
  41047f:	pop    es
  410480:	pop    esi
  410481:	inc    ebx
  410482:	call   0xa1af:0xa8cc1ca6
  410489:	das    
  41048a:	sub    DWORD PTR [ebx+0x21],edi
  41048d:	loop   0x41042b
  41048f:	mov    al,ds:0xb9b93dbf
  410494:	cdq    
  410495:	lods   eax,DWORD PTR ds:[esi]
  410496:	and    BYTE PTR [edi+0x3cb3acfe],dh
  41049c:	jg     0x4104cb
  41049e:	or     eax,0x8f149c33
  4104a3:	in     al,dx
  4104a4:	int    0x16
  4104a6:	nop
  4104a7:	jg     0x410430
  4104a9:	or     ecx,DWORD PTR [edi+edx*2]
  4104ac:	sub    dh,BYTE PTR [ecx]
  4104ae:	hlt    
  4104af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104b0:	jle    0x410509
  4104b2:	mov    edx,0xce478e5d
  4104b7:	cmc    
  4104b8:	cmp    eax,0xe52c7c5
  4104bd:	adc    edx,esp
  4104bf:	cwde   
  4104c0:	adc    DWORD PTR [ebx],eax
  4104c2:	and    BYTE PTR [esi+0x77208838],dh
  4104c8:	and    DWORD PTR [eax-0x1b],edi
  4104cb:	div    BYTE PTR [edi-0x5c]
  4104ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104cf:	pop    edi
  4104d0:	aam    0xa5
  4104d2:	sti    
  4104d3:	fadd   QWORD PTR [ebp+0x12]
  4104d6:	or     BYTE PTR [edi+edi*2],bl
  4104d9:	repz adc cl,al
  4104dc:	test   DWORD PTR [edx+0x1],edi
  4104df:	jl     0x4104e7
  4104e1:	lods   al,BYTE PTR ds:[esi]
  4104e2:	inc    edi
  4104e3:	push   ss
  4104e4:	xlat   BYTE PTR ds:[ebx]
  4104e5:	ins    BYTE PTR es:[edi],dx
  4104e6:	jmp    0x410540
  4104e8:	lahf   
  4104e9:	cdq    
  4104ea:	mov    ch,0xe3
  4104ec:	(bad)  
  4104ed:	mov    edi,0xff9ab3f3
  4104f2:	add    eax,0x8144a93a
  4104f7:	or     dl,bl
  4104f9:	repz jbe 0x410519
  4104fc:	pusha  
  4104fd:	cmc    
  4104fe:	push   eax
  4104ff:	lds    edi,FWORD PTR [eax+0x5b]
  410502:	jle    0x410562
  410504:	lods   eax,DWORD PTR ds:[esi]
  410505:	adc    BYTE PTR [edi],0x6d
  410508:	or     BYTE PTR [ebx+0x53007fad],ah
  41050e:	add    eax,0x6b523a8f
  410513:	jmp    0xb515:0x689aa6d7
  41051a:	arpl   WORD PTR [eax-0x4],ax
  41051d:	int3   
  41051e:	rcl    DWORD PTR [edi+0x157bee1],1
  410524:	xor    BYTE PTR [esi-0x44c2e870],dh
  41052a:	mov    esp,0x593cef1d
  41052f:	scas   eax,DWORD PTR es:[edi]
  410530:	pop    ss
  410531:	jo     0x410581
  410533:	mov    WORD PTR [ebx+0x2d],gs
  410536:	call   FWORD PTR [edx-0x19b08f38]
  41053c:	jg     0x4104d7
  41053e:	retf   
  41053f:	fs pusha 
  410541:	add    DWORD PTR [ebx+0x58],edi
  410544:	pop    edi
  410545:	seto   BYTE PTR gs:[edx+0xde2460f]
  41054d:	jl     0x41050d
  41054f:	sub    eax,0x1c2f5423
  410554:	xchg   si,ax
  410556:	enter  0xc676,0x6c
  41055a:	xor    BYTE PTR es:[esi+0x43e153f1],cl
  410561:	mov    ebx,ecx
  410563:	jl     0x41056a
  410565:	popa   
  410566:	inc    ecx
  410567:	lds    edx,FWORD PTR [esi+edx*1]
  41056a:	call   0xf767ca9a
  41056f:	call   0x8d33:0x91d78b8f
  410576:	or     dh,BYTE PTR [ebp+0x37b85bd5]
  41057c:	adc    dh,ah
  41057e:	inc    eax
  41057f:	rcl    DWORD PTR [edx+0x68],0x73
  410583:	add    al,ch
  410585:	inc    ebx
  410586:	add    DWORD PTR [ebx+0x54d9bd52],esi
  41058c:	sub    al,0x95
  41058e:	js     0x4105a3
  410590:	push   edx
  410591:	in     eax,0xb7
  410593:	lods   eax,DWORD PTR ds:[esi]
  410594:	cli    
  410595:	in     eax,0xfc
  410597:	push   0xffffffbb
  410599:	stos   BYTE PTR es:[edi],al
  41059a:	sbb    DWORD PTR [edx+0x28],ecx
  41059d:	push   ebx
  41059e:	cs push es
  4105a0:	std    
  4105a1:	(bad)  
  4105a2:	adc    dh,BYTE PTR [esi+ebp*8-0x7a]
  4105a6:	(bad)  
  4105a7:	sbb    al,al
  4105a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105aa:	push   edx
  4105ab:	sub    dl,BYTE PTR [edi+eax*2+0x9]
  4105af:	pop    esi
  4105b0:	and    eax,0x524dae34
  4105b5:	ins    BYTE PTR es:[edi],dx
  4105b6:	nop
  4105b7:	push   cs
  4105b8:	mov    eax,ds:0xc5557d70
  4105bd:	adc    ebp,0xffffff89
  4105c0:	inc    ebx
  4105c1:	sbb    edi,DWORD PTR [ebx-0x716818fb]
  4105c7:	jle    0x410619
  4105c9:	and    eax,0xe125bd5e
  4105ce:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4105d0:	inc    ebx
  4105d1:	stos   BYTE PTR es:[edi],al
  4105d2:	imul   ebx
  4105d4:	pop    es
  4105d5:	rol    BYTE PTR ds:0x58b086fc,1
  4105db:	inc    eax
  4105dc:	jns    0x4105c0
  4105de:	movnti DWORD PTR [esp+ecx*8+0x5b],eax
  4105e3:	sbb    al,0x89
  4105e5:	mov    DWORD PTR [edi+0x4b35583c],esp
  4105eb:	mov    al,0xf0
  4105ed:	adc    ecx,DWORD PTR ds:0x15fa223b
  4105f3:	mov    ecx,0xaa0071ab
  4105f9:	cwde   
  4105fa:	pop    edx
  4105fb:	loopne 0x410583
  4105fd:	or     DWORD PTR ds:0x5eed6a4a,edi
  410603:	push   0xffffffb5
  410605:	fwait
  410606:	push   ebp
  410607:	out    0x35,eax
  410609:	loop   0x410652
  41060b:	jmp    0xf2e5:0xd3e8661f
  410612:	cli    
  410613:	clc    
  410614:	mov    edi,0x537d6520
  410619:	push   esp
  41061a:	retf   
  41061b:	bound  ebp,QWORD PTR [ecx]
  41061d:	call   0x57f88984
  410622:	mov    dh,0xe8
  410624:	sbb    al,0xc3
  410626:	xor    al,0x29
  410628:	push   ebp
  410629:	test   eax,0xe3b0b048
  41062e:	jle    0x410690
  410630:	push   ebx
  410631:	mov    ebx,DWORD PTR [edi]
  410633:	sbb    eax,0x9c7c804f
  410638:	retf   
  410639:	lea    ecx,gs:[edi+0x2a]
  41063d:	cmp    DWORD PTR [edx+esi*4+0x24],ebp
  410641:	or     ch,BYTE PTR [edx-0x5d9db303]
  410647:	push   ds
  410648:	aad    0x5
  41064a:	jmp    0x11b00f62
  41064f:	mov    ah,0xd6
  410651:	sbb    eax,0x70575ca9
  410656:	sbb    al,0xf4
  410658:	and    al,0x40
  41065a:	pop    eax
  41065b:	mov    dl,0x43
  41065d:	mov    dl,bh
  41065f:	pop    eax
  410660:	inc    ecx
  410661:	sub    eax,0x9edf35fb
  410666:	in     eax,0xa0
  410668:	int3   
  410669:	mov    ds:0x35769f76,eax
  41066e:	addr16 lahf 
  410670:	(bad)  
  410671:	in     eax,0xe8
  410673:	shl    BYTE PTR [ebp+0x56],cl
  410676:	sbb    dh,BYTE PTR [eax]
  410678:	mov    al,0x66
  41067a:	rcr    BYTE PTR [esp+eiz*4-0x9],1
  41067e:	sub    eax,0x56ff5c8
  410683:	(bad)  
  410684:	jbe    0x410675
  410686:	xchg   ebp,eax
  410687:	mov    esp,0x1b115eeb
  41068c:	dec    ecx
  41068d:	stos   DWORD PTR es:[edi],eax
  41068e:	fild   DWORD PTR [ebx]
  410690:	lds    esi,FWORD PTR [edi]
  410692:	jmp    0xde2344e2
  410697:	xor    bp,cx
  41069a:	jmp    0x410664
  41069c:	pop    ss
  41069d:	ss (bad) 
  41069f:	pop    esi
  4106a0:	aam    0xc1
  4106a2:	mov    BYTE PTR [ebx+0x30866573],dl
  4106a8:	inc    esp
  4106a9:	nop
  4106aa:	sbb    al,0xa1
  4106ac:	jne    0x41065d
  4106ae:	ss mov edx,0x80e5b48
  4106b4:	jle    0x410721
  4106b6:	aad    0x36
  4106b8:	aam    0x9e
  4106ba:	jg     0x41069c
  4106bc:	cdq    
  4106bd:	stc    
  4106be:	dec    edx
  4106bf:	ins    DWORD PTR es:[edi],dx
  4106c0:	and    eax,0x5d0949e5
  4106c5:	ss push 0x2
  4106c8:	mov    eax,ds:0x230203b4
  4106cd:	or     ebp,esp
  4106cf:	sbb    edi,edx
  4106d1:	hlt    
  4106d2:	(bad)  
  4106d3:	stos   BYTE PTR es:[edi],al
  4106d4:	into   
  4106d5:	int3   
  4106d6:	enter  0x96a9,0xe5
  4106da:	push   0x75
  4106dc:	les    edi,FWORD PTR [eax]
  4106de:	gs (bad) 
  4106e1:	or     DWORD PTR [edx-0xefc70eb],0x1139a9f6
  4106eb:	or     DWORD PTR [eax+0x3],edx
  4106ee:	mov    ds:0xe8225281,al
  4106f3:	repz or DWORD PTR [edi+0x5f],0x5e
  4106f8:	test   BYTE PTR ds:0xe3d22769,dl
  4106fe:	cmp    bl,BYTE PTR [edx+0x78237548]
  410704:	fstp   TBYTE PTR [edx-0x3a]
  410707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410708:	push   edx
  410709:	mov    bh,0x1f
  41070b:	jnp    0x4106af
  41070d:	dec    esp
  41070e:	ins    BYTE PTR es:[edi],dx
  41070f:	test   DWORD PTR [ebx],0xae29e265
  410715:	outs   dx,DWORD PTR ds:[esi]
  410716:	adc    bh,BYTE PTR [edi-0x69]
  410719:	sar    BYTE PTR [edx-0x6eece689],cl
  41071f:	call   0xdc9c8e6a
  410724:	jle    0x4107a0
  410726:	iret   
  410727:	pop    ds
  410728:	xor    BYTE PTR [ebx-0x64],0x37
  41072c:	in     al,0x91
  41072e:	(bad)  
  41072f:	or     eax,0x3ed98381
  410734:	js     0x41070f
  410736:	dec    esi
  410737:	icebp  
  410738:	stc    
  410739:	cmp    eax,ebp
  41073b:	test   BYTE PTR [ebp-0xf],ch
  41073e:	xchg   esi,eax
  41073f:	in     eax,dx
  410740:	mov    ds:0x4bea3897,eax
  410745:	dec    ebx
  410746:	jo     0x410752
  410748:	sub    al,0x15
  41074a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41074b:	add    eax,0x55d5853e
  410750:	shl    esp,1
  410752:	add    al,0xbc
  410754:	cmp    ah,BYTE PTR [edx-0x5bb3ecd6]
  41075a:	aam    0x70
  41075c:	mov    ah,0xa5
  41075e:	mov    BYTE PTR [ebx+eiz*4-0x4fcf2db7],al
  410765:	clc    
  410766:	imul   esi,DWORD PTR [esi+0x5e6e77ac],0xfedcfc26
  410770:	inc    ecx
  410771:	adc    eax,0xdbfcd45c
  410776:	out    0x40,al
  410778:	stos   DWORD PTR es:[edi],eax
  410779:	jae    0x410780
  41077b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41077c:	mov    bl,BYTE PTR [edx+0x71]
  41077f:	jae    0x4107d0
  410781:	sahf   
  410782:	mov    edi,0xaf1447ce
  410787:	ss fsubr st(6),st
  41078a:	hlt    
  41078b:	mov    dh,0xf7
  41078d:	push   ebp
  41078e:	xor    DWORD PTR [ecx],edx
  410790:	rol    BYTE PTR [edi],cl
  410792:	mov    bl,BYTE PTR [eax+0x1d]
  410795:	ret    0x90fc
  410798:	pop    es
  410799:	gs push es
  41079b:	and    eax,0xb1c5bc21
  4107a0:	pop    edx
  4107a1:	popa   
  4107a2:	xor    esi,DWORD PTR [edx+0x4a]
  4107a5:	push   esp
  4107a6:	sar    esp,0x73
  4107a9:	inc    edx
  4107aa:	sbb    BYTE PTR [edi-0x31],cl
  4107ad:	push   eax
  4107ae:	stos   BYTE PTR es:[edi],al
  4107af:	cmp    ecx,DWORD PTR [eax]
  4107b1:	outs   dx,BYTE PTR ds:[esi]
  4107b2:	xchg   esi,eax
  4107b3:	push   cs
  4107b4:	push   ebp
  4107b5:	fisub  DWORD PTR [edx-0x2d]
  4107b8:	in     al,dx
  4107b9:	mov    edi,0x247802f9
  4107be:	(bad)  
  4107bf:	icebp  
  4107c0:	pop    ebp
  4107c1:	stc    
  4107c2:	cmp    ebp,ebp
  4107c4:	std    
  4107c5:	add    esi,edi
  4107c7:	rol    DWORD PTR [edx+esi*2],0x1e
  4107cb:	adc    DWORD PTR [ebx-0x4fcf0283],edi
  4107d1:	mov    ch,0x1e
  4107d3:	pop    ss
  4107d4:	sub    al,0xa4
  4107d6:	fld    DWORD PTR [ebx+0x3d7f9fac]
  4107dc:	jo     0x41078c
  4107de:	inc    edi
  4107df:	mov    dh,0x40
  4107e1:	jp     0x410824
  4107e3:	mov    ebx,0x7178f015
  4107e8:	mov    esp,0x5efb2351
  4107ed:	and    al,0xff
  4107ef:	stos   DWORD PTR es:[edi],eax
  4107f0:	cmp    ebx,edi
  4107f2:	lods   eax,DWORD PTR ds:[esi]
  4107f3:	idiv   DWORD PTR [ebx+0x4]
  4107f6:	push   edx
  4107f7:	xor    al,ah
  4107f9:	pop    eax
  4107fa:	cli    
  4107fb:	dec    BYTE PTR [edx+0x7814d04d]
  410801:	into   
  410802:	ds xchg esp,eax
  410804:	mov    dh,0x89
  410806:	lods   al,BYTE PTR ds:[esi]
  410807:	loope  0x4107b0
  410809:	sti    
  41080a:	push   ds
  41080b:	lods   eax,DWORD PTR ds:[esi]
  41080c:	push   es
  41080d:	fisttp DWORD PTR [eax+ebx*1+0x614261e0]
  410814:	jmp    0x3fff36be
  410819:	mov    ds:0x676fdeb0,eax
  41081e:	test   BYTE PTR [ecx],dh
  410820:	mov    ebx,0x4964b53f
  410825:	and    edi,DWORD PTR [ebp+0x875c851]
  41082b:	mov    gs,WORD PTR [edx-0x576fda66]
  410831:	imul   ebx,edx,0x48
  410834:	bound  esp,QWORD PTR [eax]
  410836:	test   BYTE PTR [esi-0x77],0x20
  41083a:	rol    DWORD PTR [esi-0xc31355],cl
  410840:	icebp  
  410841:	push   0x8191f90a
  410846:	xchg   DWORD PTR [edi],edi
  410848:	or     eax,0xfd1b202b
  41084d:	test   ebx,esi
  41084f:	daa    
  410850:	dec    eax
  410851:	xchg   esp,eax
  410852:	in     eax,dx
  410853:	push   ds
  410854:	xor    eax,0xc13b10cc
  410859:	fdiv   st,st(3)
  41085b:	pop    eax
  41085c:	in     eax,0x7d
  41085e:	in     eax,dx
  41085f:	call   0xa83c155a
  410864:	xchg   ebx,eax
  410865:	daa    
  410866:	dec    esi
  410867:	cmp    eax,0x8c6012d6
  41086c:	adc    BYTE PTR [ecx+ecx*2+0x79],ah
  410870:	xor    DWORD PTR [ecx],esp
  410872:	sbb    DWORD PTR [eax-0x39],esp
  410875:	adc    DWORD PTR [ecx],edx
  410877:	data16 mov bh,0x4
  41087a:	jne    0x4108eb
  41087c:	retf   
  41087d:	jp     0x4108b1
  41087f:	sub    BYTE PTR [ebp-0x12],0x98
  410883:	ret    0xf64a
  410886:	mov    ds:0x8cacbca,eax
  41088b:	jo     0x410873
  41088d:	push   0xd60a3b9b
  410892:	sbb    ebp,DWORD PTR [eax+0x4580ac9b]
  410898:	gs imul esi,edx,0x9162c89b
  41089f:	xor    eax,0xf67c8658
  4108a4:	jno    0x4108f7
  4108a6:	mov    ch,0xf4
  4108a8:	pusha  
  4108a9:	into   
  4108aa:	or     DWORD PTR [ecx+0x472d5cfb],edx
  4108b0:	push   ds
  4108b1:	jge    0x410881
  4108b3:	pusha  
  4108b4:	pop    ecx
  4108b5:	loop   0x410841
  4108b7:	mov    ebp,DWORD PTR [esi+0x6c70b2d6]
  4108bd:	cwde   
  4108be:	or     BYTE PTR [edi-0x6f1d1416],cl
  4108c4:	push   edx
  4108c6:	and    al,0x3d
  4108c8:	test   al,0x29
  4108ca:	push   es
  4108cb:	adc    DWORD PTR [ebx-0x73],edi
  4108ce:	stos   DWORD PTR es:[edi],eax
  4108cf:	inc    ebp
  4108d0:	aad    0xca
  4108d2:	xchg   DWORD PTR [esi],esp
  4108d4:	inc    ebx
  4108d5:	and    dh,BYTE PTR [edx-0x30]
  4108d8:	mov    ah,0x2a
  4108da:	push   esp
  4108db:	inc    esp
  4108dc:	sahf   
  4108dd:	ss je  0x410886
  4108e0:	sub    al,0x38
  4108e2:	bnd ret 0xdbbb
  4108e6:	js     0x4108ff
  4108e8:	lds    edi,FWORD PTR [ebx+eax*2]
  4108eb:	mov    esp,0x85b1ff2a
  4108f0:	popa   
  4108f1:	ins    BYTE PTR es:[edi],dx
  4108f2:	jle    0x41096f
  4108f4:	xchg   ebp,eax
  4108f5:	sar    BYTE PTR [ebx-0x1f2d209],1
  4108fb:	arpl   WORD PTR [eax+edx*8],dx
  4108fe:	inc    ebp
  4108ff:	sbb    BYTE PTR [ecx],0x22
  410902:	scas   al,BYTE PTR es:[edi]
  410903:	jmp    0x2c55fc60
  410908:	js     0x41094e
  41090a:	mov    dl,0x9c
  41090c:	jnp    0x4108b4
  41090e:	cmp    eax,0xb6babba3
  410913:	fisttp DWORD PTR [ecx+0x6e]
  410916:	fnstcw WORD PTR [ebx]
  410918:	imul   ebp,DWORD PTR [esi-0x7e],0x8868d558
  41091f:	push   esi
  410920:	pop    edx
  410921:	dec    edx
  410922:	fs mov cl,0xaa
  410925:	jbe    0x41098b
  410927:	sbb    DWORD PTR [ebx+0x1d],edx
  41092a:	daa    
  41092b:	and    dl,bh
  41092d:	cld    
  41092e:	adc    DWORD PTR [eax+0x7e52e72b],esi
  410934:	push   esp
  410935:	mov    ebx,0x59ece351
  41093a:	aam    0xdb
  41093c:	push   edx
  41093d:	push   esi
  41093e:	call   0xcca7563d
  410943:	push   eax
  410944:	pop    esp
  410945:	outs   dx,DWORD PTR ds:[esi]
  410946:	pop    ebx
  410947:	int    0xb8
  410949:	sub    ebx,DWORD PTR [ecx-0x309a91d6]
  41094f:	cld    
  410950:	add    al,BYTE PTR [ebx-0x34698208]
  410956:	nop
  410957:	pop    ecx
  410958:	sbb    al,0xd
  41095a:	mov    eax,ds:0x3ced7853
  41095f:	int    0x6e
  410961:	inc    ebx
  410962:	dec    esp
  410963:	sbb    esi,DWORD PTR [ecx+ecx*2-0x7d3bfb3]
  41096a:	ins    BYTE PTR es:[edi],dx
  41096b:	mov    ch,0xa4
  41096d:	xchg   esi,eax
  41096e:	sub    eax,esp
  410970:	aam    0x68
  410972:	into   
  410973:	xchg   BYTE PTR [ecx-0x25],al
  410976:	mov    ebp,fs
  410978:	dec    eax
  410979:	push   ss
  41097a:	adc    DWORD PTR [ecx+0x3e],0xfffffff2
  41097e:	and    al,0xdc
  410980:	push   ebx
  410981:	add    al,0x79
  410983:	sbb    DWORD PTR [edi],ebp
  410985:	pop    esp
  410986:	pop    es
  410987:	mov    bl,0x1c
  410989:	aas    
  41098a:	push   ebp
  41098b:	mov    edi,0xf365d450
  410990:	shl    BYTE PTR [ecx],cl
  410992:	lea    ebp,[esi+0x6c8b99dd]
  410998:	mov    BYTE PTR [ebp+eiz*4+0x29],bh
  41099c:	loopne 0x410924
  41099e:	lahf   
  41099f:	sti    
  4109a0:	fs add ebp,eax
  4109a3:	loope  0x410a22
  4109a5:	jecxz  0x4109d2
  4109a7:	dec    ebx
  4109a8:	pop    ebx
  4109a9:	dec    edx
  4109aa:	icebp  
  4109ab:	fadd   QWORD PTR [ebp+0x16]
  4109ae:	retf   
  4109af:	push   esp
  4109b0:	(bad)  
  4109b2:	rcr    DWORD PTR [esi+0x50b0046c],cl
  4109b8:	sub    DWORD PTR [esi+0x2f6b6f8f],0x8
  4109bf:	or     BYTE PTR [esi-0x1d],al
  4109c2:	not    BYTE PTR [edx-0x46]
  4109c5:	aaa    
  4109c6:	fsubr  DWORD PTR [ebp-0x7d]
  4109c9:	bound  edi,QWORD PTR [edx+0x6a]
  4109cc:	int3   
  4109cd:	push   esi
  4109ce:	mov    al,BYTE PTR [eax]
  4109d0:	xchg   ebp,esi
  4109d2:	sbb    bh,BYTE PTR [esi-0x21]
  4109d5:	pushf  
  4109d6:	adc    DWORD PTR [ecx-0x5757e30d],ebx
  4109dc:	dec    esp
  4109dd:	adc    eax,0x618d9273
  4109e2:	fdivr  st,st(4)
  4109e4:	outs   dx,BYTE PTR ds:[esi]
  4109e5:	xchg   edx,eax
  4109e6:	sbb    ah,BYTE PTR [esp+ecx*1]
  4109e9:	and    ebx,DWORD PTR [edx]
  4109eb:	out    0x39,eax
  4109ed:	les    ebx,FWORD PTR [esi+0x59d8581]
  4109f3:	mov    ah,0xcf
  4109f5:	pop    esi
  4109f6:	adc    al,0x43
  4109f8:	mov    ds:0xc30c4458,al
  4109fd:	pop    ebp
  4109fe:	adc    ebp,ebp
  410a00:	mov    ds:0xca9ed202,al
  410a05:	mov    edi,0xe3a02a14
  410a0a:	or     eax,DWORD PTR [edi-0x69]
  410a0d:	and    esi,DWORD PTR [eax]
  410a0f:	mov    DWORD PTR [eax-0x35603374],ecx
  410a15:	adc    BYTE PTR ds:0x38f0218e,ah
  410a1b:	mov    esi,0xb750714d
  410a20:	arpl   WORD PTR [ebx+0x41fc7120],ax
  410a26:	add    ecx,DWORD PTR [edi]
  410a28:	inc    ecx
  410a29:	inc    esp
  410a2a:	loopne 0x410a8c
  410a2c:	mov    ch,0xe8
  410a2e:	xchg   ebx,eax
  410a2f:	mov    WORD PTR [eax],cs
  410a31:	sar    BYTE PTR [eax],1
  410a33:	pusha  
  410a34:	jmp    0xbbca:0xc056604e
  410a3b:	sub    ebx,DWORD PTR [edx-0x33]
  410a3e:	and    al,BYTE PTR [ecx+ebx*2-0x4087dd6b]
  410a45:	mov    eax,0x6e1f3ce
  410a4a:	dec    ebx
  410a4b:	or     al,0x73
  410a4d:	xor    eax,0xfe5cd527
  410a52:	jnp    0x410ac9
  410a54:	jo     0x410a6f
  410a56:	jl     0x410a90
  410a58:	adc    DWORD PTR [ebx+edx*2-0x7d321cb9],edi
  410a5f:	adc    DWORD PTR [eax+ebp*1+0x6af24641],eax
  410a66:	dec    ecx
  410a67:	sub    BYTE PTR [ebp-0x79b52830],ah
  410a6d:	add    ah,ch
  410a6f:	xchg   ebx,eax
  410a70:	imul   ecx,esp,0x16
  410a73:	fistp  WORD PTR [edx-0x60cc85f8]
  410a79:	mov    esp,DWORD PTR [eax-0x16be9665]
  410a7f:	xlat   BYTE PTR ds:[ebx]
  410a80:	(bad)  
  410a81:	jge    0x410aa6
  410a83:	and    eax,DWORD PTR [ebp+0x1b478c01]
  410a89:	inc    ebp
  410a8a:	aaa    
  410a8b:	sar    BYTE PTR [ecx],0xa6
  410a8e:	pop    esp
  410a8f:	sbb    edx,esp
  410a91:	xchg   esp,eax
  410a92:	jne    0x410acf
  410a94:	push   esp
  410a95:	int    0xf7
  410a97:	dec    edx
  410a98:	gs push esi
  410a9a:	aas    
  410a9b:	iret   
  410a9c:	and    ch,BYTE PTR [eax-0x54257c33]
  410aa2:	inc    esp
  410aa3:	push   ecx
  410aa4:	sbb    bh,BYTE PTR [ebx+eax*2]
  410aa7:	mov    cl,0x1f
  410aa9:	repnz retf 
  410aab:	sub    eax,DWORD PTR [esi+0x73]
  410aae:	aaa    
  410aaf:	cmp    ch,BYTE PTR [ebp-0x59]
  410ab2:	or     DWORD PTR [ebp+edi*1+0x39],ecx
  410ab6:	out    0xdb,eax
  410ab8:	jmp    DWORD PTR [eax+0x4e]
  410abb:	mov    BYTE PTR [esi+0x5f],bl
  410abe:	mov    edx,0x388f5ce7
  410ac3:	scas   eax,DWORD PTR es:[edi]
  410ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac5:	jmp    0x8b7cfb12
  410aca:	rol    BYTE PTR [esi+0x4ed86ac1],0x62
  410ad1:	inc    ebx
  410ad2:	aaa    
  410ad3:	xor    eax,0x539afd97
  410ad8:	inc    ecx
  410ad9:	mov    dh,BYTE PTR [esi-0x7b1d5f3b]
  410adf:	outs   dx,BYTE PTR ds:[esi]
  410ae0:	xchg   ebp,eax
  410ae1:	arpl   WORD PTR [edx-0x38],di
  410ae4:	inc    edx
  410ae5:	les    ebp,FWORD PTR [ebx+0x2]
  410ae8:	in     eax,dx
  410ae9:	pop    ebp
  410aea:	outs   dx,BYTE PTR ds:[esi]
  410aeb:	adc    ah,BYTE PTR [ecx]
  410aed:	je     0x410b45
  410aef:	sub    al,0x2e
  410af1:	mov    ecx,0x4995fccd
  410af6:	arpl   si,dx
  410af8:	sbb    al,bh
  410afa:	jmp    0x410b27
  410afc:	shl    DWORD PTR [ebx],0xbc
  410aff:	pop    eax
  410b00:	(bad)  
  410b02:	lods   eax,DWORD PTR ds:[esi]
  410b03:	cdq    
  410b04:	call   0x8ba9cd05
  410b09:	ret    
  410b0a:	add    eax,0x317db6dc
  410b0f:	and    bl,dl
  410b11:	icebp  
  410b12:	ds lock push 0x9863b370
  410b19:	mov    BYTE PTR [edi],bl
  410b1b:	test   al,0x2b
  410b1d:	mov    cs,WORD PTR [edi+0x1e]
  410b20:	cwde   
  410b21:	repz rol DWORD PTR [edx-0x454d3958],cl
  410b28:	inc    ecx
  410b29:	jns    0x410b6b
  410b2b:	xlat   BYTE PTR ds:[ebx]
  410b2c:	dec    ebx
  410b2d:	test   DWORD PTR [edx-0x56],ebx
  410b30:	jle    0x410ac5
  410b32:	ins    DWORD PTR es:[edi],dx
  410b33:	sbb    edi,ebp
  410b35:	pop    esp
  410b36:	sbb    al,cl
  410b38:	adc    al,0xb2
  410b3a:	imul   ecx
  410b3c:	jmp    0xb04f:0xa7e2ab10
  410b43:	mov    dh,0x27
  410b45:	(bad)  
  410b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b47:	mov    bh,0x44
  410b49:	cmp    DWORD PTR [ecx],esp
  410b4b:	push   cs
  410b4c:	adc    ebp,DWORD PTR [eax]
  410b4e:	jecxz  0x410b70
  410b50:	mov    esi,0xea3b0ed
  410b55:	pop    edx
  410b56:	xlat   BYTE PTR ds:[bx]
  410b58:	clc    
  410b59:	data16 icebp 
  410b5b:	xchg   BYTE PTR [eax-0x66fa3338],al
  410b61:	mov    DWORD PTR [ebp+0x76c2e98],eax
  410b67:	pop    ss
  410b68:	mov    cl,0x8b
  410b6a:	cwde   
  410b6b:	je     0x410b67
  410b6d:	pop    edi
  410b6e:	nop
  410b6f:	psubsb mm1,QWORD PTR [ebp+0x1fc82950]
  410b76:	pop    eax
  410b77:	mov    dh,0x16
  410b79:	mov    ch,0x10
  410b7b:	jecxz  0x410b91
  410b7d:	rcl    BYTE PTR [esi+0x7f71b5af],1
  410b83:	jmp    0x410b64
  410b85:	dec    esi
  410b86:	mov    edx,0xd4d85eba
  410b8b:	jecxz  0x410b70
  410b8d:	test   eax,0x74f53bdd
  410b92:	mov    esp,0x96e489a2
  410b97:	push   ebx
  410b98:	pop    ebp
  410b99:	jb     0x410b3a
  410b9b:	pusha  
  410b9c:	pop    ds
  410b9d:	aas    
  410b9e:	fst    QWORD PTR fs:[eax+0x29]
  410ba2:	xchg   edi,eax
  410ba3:	mov    ds:0x252ef3c7,eax
  410ba8:	out    0x9f,eax
  410baa:	cmp    eax,0xd91e0dbe
  410baf:	(bad)
  410bb2:	nop
  410bb3:	pop    ebp
  410bb4:	lock jb 0x410c2e
  410bb7:	lods   eax,DWORD PTR ds:[esi]
  410bb8:	daa    
  410bb9:	dec    edi
  410bba:	jae    0x410bfb
  410bbc:	das    
  410bbd:	or     edi,DWORD PTR [ebp+0x7e]
  410bc0:	mov    eax,0x3f2bf071
  410bc5:	cld    
  410bc6:	repnz push ebp
  410bc8:	mov    al,0xe4
  410bca:	add    dh,BYTE PTR [edx+0x3d]
  410bcd:	mov    eax,ds:0x46aef0e4
  410bd2:	sub    BYTE PTR [edi-0x55],cl
  410bd5:	mov    al,ds:0xe39ca27b
  410bda:	sub    DWORD PTR [ebx+0x53ccc252],0xffffffab
  410be1:	pop    ss
  410be2:	sbb    ebx,0x35
  410be5:	inc    edx
  410be6:	adc    DWORD PTR [ebx-0x3e151e3f],ebp
  410bec:	push   ebp
  410bed:	icebp  
  410bee:	sub    DWORD PTR [ebx],ecx
  410bf0:	cmp    cl,BYTE PTR [ebx-0x43]
  410bf3:	stos   DWORD PTR es:[edi],eax
  410bf4:	test   eax,0xd2279701
  410bf9:	fcomp  DWORD PTR [edi-0x36a5987e]
  410bff:	jge    0x410bd8
  410c01:	xor    al,0xaa
  410c03:	fcomi  st,st(0)
  410c05:	cmc    
  410c06:	dec    esp
  410c07:	das    
  410c08:	shl    BYTE PTR [esi+0x2f],cl
  410c0b:	clc    
  410c0c:	jge    0x410bec
  410c0e:	inc    edi
  410c0f:	lahf   
  410c10:	adc    dh,ah
  410c12:	mov    esi,0x9936499c
  410c17:	jnp    0x410c55
  410c19:	in     al,dx
  410c1a:	pop    edi
  410c1b:	dec    ecx
  410c1c:	jne    0x410c52
  410c1e:	fisubr DWORD PTR [ebx+esi*8]
  410c21:	sub    DWORD PTR [edi],0xc83bf127
  410c27:	jmp    0x5d98:0xb8315103
  410c2e:	daa    
  410c2f:	dec    edi
  410c30:	push   edi
  410c31:	mov    ds:0xea9730,al
  410c37:	or     ecx,ebp
  410c39:	cmc    
  410c3a:	in     al,0x59
  410c3c:	xor    eax,0xe63b3c32
  410c41:	mov    eax,ds:0xa1eb7dcd
  410c46:	pop    esp
  410c47:	push   cs
  410c48:	xchg   BYTE PTR [esi-0x6c2d070b],dh
  410c4e:	mov    bh,0x8a
  410c50:	jne    0x410cb4
  410c52:	dec    bh
  410c54:	lahf   
  410c55:	xchg   edi,eax
  410c56:	inc    eax
  410c57:	jle    0x410be1
  410c59:	enter  0xae3e,0xeb
  410c5d:	push   ebp
  410c5e:	and    eax,0x578dca76
  410c63:	in     al,dx
  410c64:	aas    
  410c65:	pop    ds
  410c66:	mov    DWORD PTR [ecx+0x25],0xaeab3f0f
  410c6d:	add    DWORD PTR [edi],esi
  410c6f:	xchg   edi,eax
  410c70:	xchg   ecx,eax
  410c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c72:	mov    edi,0x61b628b
  410c77:	in     eax,0xcd
  410c79:	shl    dl,1
  410c7b:	jl     0x410ce9
  410c7d:	dec    ebp
  410c7e:	sahf   
  410c7f:	scas   eax,DWORD PTR es:[edi]
  410c80:	in     al,dx
  410c81:	inc    edx
  410c82:	xchg   ebp,eax
  410c83:	pusha  
  410c84:	pop    es
  410c85:	push   eax
  410c86:	ja     0x410caa
  410c88:	mov    ebp,0x26d3e94f
  410c8d:	fld    QWORD PTR [eax]
  410c8f:	or     eax,0xb4a6f08f
  410c94:	or     eax,0x844328fa
  410c99:	ins    DWORD PTR es:[edi],dx
  410c9a:	mov    edx,0x2e43152b
  410c9f:	pop    edi
  410ca0:	pop    es
  410ca1:	dec    edi
  410ca2:	std    
  410ca3:	push   esi
  410ca4:	out    dx,eax
  410ca5:	and    eax,0xf01014eb
  410caa:	mov    ds:0x78cbf548,al
  410caf:	js     0x410d1a
  410cb1:	test   eax,0x72bbb043
  410cb6:	lock mov esi,DWORD PTR [edx+0x33]
  410cba:	leave  
  410cbb:	sahf   
  410cbc:	pop    ecx
  410cbd:	pop    esi
  410cbe:	cs and al,0xc8
  410cc1:	cmp    al,0x41
  410cc3:	jo     0x410c5f
  410cc5:	adc    DWORD PTR [ebx],0x6612c992
  410ccb:	sbb    ah,BYTE PTR [ecx]
  410ccd:	(bad)  
  410cce:	leave  
  410ccf:	test   BYTE PTR [ecx+0x56],dl
  410cd2:	sar    BYTE PTR [edi],cl
  410cd4:	in     eax,dx
  410cd5:	test   DWORD PTR ds:0x93959847,edx
  410cdb:	add    eax,DWORD PTR [edi+0x6f1fe18d]
  410ce1:	or     al,0x34
  410ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ce4:	aam    0xad
  410ce6:	lea    ebp,ds:0x92c41520
  410cec:	kxorw  k4,k3,k1
  410cf0:	mov    al,ds:0x26ed46bf
  410cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf6:	jg     0x410d5b
  410cf8:	push   0xffffffe9
  410cfa:	or     eax,0x7c11ff18
  410cff:	mov    ds:0x622b636d,al
  410d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d05:	or     al,0xbb
  410d07:	or     ebx,esi
  410d09:	jno    0x6c6a0b03
  410d0f:	lods   eax,DWORD PTR ds:[si]
  410d11:	mov    ds:0xf999122d,al
  410d16:	dec    DWORD PTR [edx+eiz*2-0x4e]
  410d1a:	sub    BYTE PTR [ebx+0x7f063dda],0x49
  410d21:	dec    ebp
  410d22:	or     al,0x13
  410d24:	rol    BYTE PTR gs:[di+0x76],1
  410d29:	sbb    DWORD PTR [esi-0x7362050b],0x15
  410d30:	ret    
  410d31:	adc    eax,0x61607b03
  410d36:	xchg   DWORD PTR [ecx],eax
  410d38:	cmp    eax,DWORD PTR [ecx-0x71]
  410d3b:	iret   
  410d3c:	daa    
  410d3d:	xchg   ecx,eax
  410d3e:	push   es
  410d3f:	fdivr  st,st(2)
  410d41:	add    al,0x63
  410d43:	inc    edx
  410d44:	cld    
  410d45:	push   esi
  410d46:	(bad)  [ebx+0x44]
  410d49:	and    bh,BYTE PTR [ebp+0x6]
  410d4c:	js     0x410d82
  410d4e:	jmp    0x8efc:0x5e136ae9
  410d55:	aam    0x9
  410d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d58:	repnz cmp DWORD PTR [ecx],eax
  410d5b:	test   al,0x47
  410d5d:	mov    dh,0xec
  410d5f:	call   0x16f1665
  410d64:	mov    dh,0x62
  410d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d67:	mov    ds:0x75863dd1,al
  410d6c:	jmp    0xbd3c:0xded5395
  410d73:	shl    BYTE PTR [edi+0x34],0xc5
  410d77:	jle    0x410d8e
  410d79:	sbb    eax,DWORD PTR ss:[ecx-0x3d55029f]
  410d80:	data16 test BYTE PTR [esi+0x48244af5],dh
  410d87:	jecxz  0x410e03
  410d89:	jns    0x410d5e
  410d8b:	shl    DWORD PTR [esi-0x34],0xdb
  410d8f:	pop    eax
  410d90:	sbb    DWORD PTR [ecx],0x2fc981ac
  410d96:	sti    
  410d97:	mov    al,ds:0xa77b5caf
  410d9c:	divps  xmm2,XMMWORD PTR [ebx-0x48]
  410da0:	jbe    0x410dc9
  410da2:	lods   eax,DWORD PTR ds:[esi]
  410da3:	jno    0x410da5
  410da5:	scas   al,BYTE PTR es:[edi]
  410da6:	mov    cl,dh
  410da8:	or     eax,0xf6cc7cca
  410dad:	je     0x410da2
  410daf:	psraw  mm1,QWORD PTR [eax+ebp*1]
  410db3:	mov    esp,0x5e9323be
  410db8:	fcomp  QWORD PTR [ecx+0x1fe231db]
  410dbe:	dec    ebp
  410dbf:	test   DWORD PTR [eax+0x6114d2ce],esi
  410dc5:	pop    esp
  410dc6:	int3   
  410dc7:	cmp    eax,0x67f16c0c
  410dcc:	cld    
  410dcd:	jno    0x410dde
  410dcf:	mov    esi,0x16ee3860
  410dd4:	ss sbb edi,edi
  410dd7:	fadd   DWORD PTR [esi-0x22c4f4cb]
  410ddd:	mov    dl,0x38
  410ddf:	xor    DWORD PTR [ebx+0x2f4eb1d1],0x8
  410de6:	lods   eax,DWORD PTR ds:[esi]
  410de7:	xor    BYTE PTR [ebp+0x10],dl
  410dea:	es xor ebp,ebp
  410ded:	pop    es
  410dee:	mov    ebp,0xd26c528
  410df3:	ret    
  410df4:	inc    edi
  410df5:	mov    esi,0x9d0b3767
  410dfa:	xchg   ebx,ebp
  410dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dfd:	push   ss
  410dfe:	sar    BYTE PTR [ecx+ebp*4],0x94
  410e02:	data16 ror BYTE PTR [ebx-0x2c],1
  410e06:	adc    eax,DWORD PTR [eax+0x1a]
  410e09:	aam    0x66
  410e0b:	pop    ebx
  410e0c:	xchg   esp,eax
  410e0d:	out    dx,al
  410e0e:	xchg   esp,eax
  410e0f:	mov    bh,0x50
  410e11:	mov    ch,0xb1
  410e13:	adc    cl,bl
  410e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e16:	mov    esp,0x986af75f
  410e1b:	and    DWORD PTR [edx+0xe7bce33],ebx
  410e21:	xlat   BYTE PTR ds:[ebx]
  410e22:	lahf   
  410e23:	mov    ds:0xaba49b35,al
  410e28:	sub    al,al
  410e2a:	das    
  410e2b:	and    DWORD PTR [ebx-0x39],eax
  410e2e:	adc    esi,DWORD PTR [ecx-0x5ca22834]
  410e34:	cmp    DWORD PTR [ebx],ebp
  410e36:	and    al,0xd6
  410e38:	ds mov bl,0x7b
  410e3b:	clc    
  410e3c:	mov    WORD PTR [ebx-0x7a],gs
  410e3f:	mov    edi,0x4c446ba7
  410e44:	cld    
  410e45:	es ret 
  410e47:	loopne 0x410df6
  410e49:	enter  0x225,0xb4
  410e4d:	ret    
  410e4e:	mov    al,ds:0x12d9b5ac
  410e53:	out    dx,al
  410e54:	int3   
  410e55:	xor    ch,BYTE PTR [ecx]
  410e57:	(bad)  
  410e58:	mov    edi,0x9f90e9ab
  410e5d:	js     0x410eb8
  410e5f:	stc    
  410e60:	(bad)
  410e63:	sbb    edx,DWORD PTR [eax-0x56]
  410e66:	xchg   esp,eax
  410e67:	add    DWORD PTR ds:0xcbfd13b5,0x2bdd92ae
  410e71:	rcl    BYTE PTR [eax-0x799feee],cl
  410e77:	daa    
  410e78:	addr16 mov ds:0x6fb3,al
  410e7c:	lods   eax,DWORD PTR ds:[esi]
  410e7d:	mov    bl,0x4a
  410e7f:	outs   dx,DWORD PTR ds:[esi]
  410e80:	cld    
  410e81:	outs   dx,DWORD PTR ds:[esi]
  410e82:	sub    eax,DWORD PTR [esi+edi*8]
  410e85:	shl    BYTE PTR [ecx-0x5c],1
  410e88:	jb     0x410e19
  410e8a:	in     al,0xbe
  410e8c:	cmp    al,0xf7
  410e8e:	cmc    
  410e8f:	data16 add al,0x53
  410e92:	xor    eax,ecx
  410e94:	stos   BYTE PTR es:[edi],al
  410e95:	mov    bl,0x31
  410e97:	mov    al,0x7f
  410e99:	dec    ebx
  410e9a:	jecxz  0x410f12
  410e9c:	je     0x410e30
  410e9e:	cwde   
  410e9f:	add    al,BYTE PTR [esi-0x2f]
  410ea2:	push   ds
  410ea3:	xchg   edi,eax
  410ea4:	fldenv [ebp+0x5a]
  410ea7:	aad    0x52
  410ea9:	sub    ch,BYTE PTR [edx-0x7af510ed]
  410eaf:	aam    0x4d
  410eb1:	or     BYTE PTR [edi],bh
  410eb3:	xor    bh,BYTE PTR [eax-0x48d0ef93]
  410eb9:	cmp    eax,0x87afe5f4
  410ebe:	ja     0x410ee1
  410ec0:	stc    
  410ec1:	pusha  
  410ec2:	cmc    
  410ec3:	fcomp  QWORD PTR [eax+0xcbfc953]
  410ec9:	jno    0x410ee7
  410ecb:	jnp    0x410f10
  410ecd:	add    al,al
  410ecf:	push   eax
  410ed0:	add    eax,0x5a97f87
  410ed5:	int3   
  410ed6:	fild   DWORD PTR [ecx+ebx*2]
  410ed9:	retf   
  410eda:	(bad)  
  410edb:	loop   0x410ea7
  410edd:	je     0x410ec0
  410edf:	or     ebp,esp
  410ee1:	mov    ds:0xf148aa39,al
  410ee6:	mov    dl,BYTE PTR [edi-0x28558a15]
  410eec:	daa    
  410eed:	cs mov ebx,0xb33364e1
  410ef3:	mul    BYTE PTR [eax]
  410ef5:	sar    DWORD PTR ds:0x734b5b7,cl
  410efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efc:	adc    dh,BYTE PTR [ecx]
  410efe:	pop    edx
  410eff:	dec    edx
  410f00:	xor    BYTE PTR [ebp-0x2],dl
  410f03:	jge    0x410f43
  410f05:	in     eax,dx
  410f06:	push   esp
  410f07:	xchg   ecx,eax
  410f08:	cdq    
  410f09:	push   es
  410f0a:	imul   eax,DWORD PTR [ecx+esi*2+0x6cec4b85],0xb4da854
  410f15:	cmc    
  410f16:	pop    edx
  410f17:	inc    edx
  410f18:	dec    ebx
  410f19:	je     0x410f03
  410f1b:	(bad)
  410f1f:	scas   al,BYTE PTR es:[edi]
  410f20:	inc    eax
  410f21:	(bad)  
  410f22:	jp     0x410eb1
  410f24:	faddp  st(1),st
  410f26:	jp     0x410ed6
  410f28:	pop    esi
  410f29:	lods   eax,DWORD PTR ds:[esi]
  410f2a:	outs   dx,BYTE PTR ds:[esi]
  410f2b:	out    dx,eax
  410f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2d:	pop    eax
  410f2e:	jbe    0x410ebb
  410f30:	lahf   
  410f31:	sbb    dh,BYTE PTR [edx+ebp*2+0x1cfe0971]
  410f38:	sbb    cl,BYTE PTR [edx+edi*4-0x2444bea2]
  410f3f:	dec    ebp
  410f40:	adc    DWORD PTR ss:0xdaaa33ff,esi
  410f47:	jno    0x410ee5
  410f49:	cmp    BYTE PTR [eax-0x199352ba],ch
  410f4f:	fisttp QWORD PTR [ebp+0x54]
  410f52:	in     al,0x98
  410f54:	dec    esp
  410f55:	ret    
  410f56:	pushf  
  410f57:	scas   al,BYTE PTR es:[edi]
  410f58:	mov    eax,DWORD PTR ds:0xfb82c755
  410f5e:	bound  ebp,QWORD PTR [ebx+0x5fe24b93]
  410f64:	add    esp,ecx
  410f66:	sub    eax,0x91fe9a16
  410f6b:	mov    edx,DWORD PTR [esi]
  410f6d:	push   ds
  410f6e:	xchg   ecx,eax
  410f6f:	lock add bl,BYTE PTR [esi-0x45]
  410f73:	push   ecx
  410f74:	mov    ecx,0xc765727d
  410f79:	sar    BYTE PTR [ecx-0x35fe0d56],0x1f
  410f80:	push   ecx
  410f81:	shl    DWORD PTR [edi+0x7b7243c6],cl
  410f87:	in     al,0x72
  410f89:	imul   eax,DWORD PTR [esi+0x10],0x49
  410f8d:	sub    bh,BYTE PTR ss:[ecx]
  410f90:	xor    al,0xb5
  410f92:	cmp    dh,bh
  410f94:	dec    esp
  410f95:	icebp  
  410f96:	dec    eax
  410f97:	jne    0x410fa8
  410f99:	in     al,0x8a
  410f9b:	jg     0x410fb9
  410f9d:	xchg   ecx,eax
  410f9e:	out    0x93,al
  410fa0:	xchg   esi,eax
  410fa1:	adc    eax,0xf5886f17
  410fa6:	lahf   
  410fa7:	in     al,0xeb
  410fa9:	xchg   ebp,eax
  410faa:	(bad)  
  410fab:	or     eax,0xb85c4bdf
  410fb0:	int3   
  410fb1:	add    ch,BYTE PTR [edi-0x41]
  410fb4:	jo     0x410fe1
  410fb6:	hlt    
  410fb7:	retf   0xbc42
  410fba:	push   ss
  410fbb:	scas   al,BYTE PTR es:[edi]
  410fbc:	fdivr  st,st(6)
  410fbe:	fcmovbe st,st(4)
  410fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc1:	push   0x4910f33b
  410fc6:	inc    edi
  410fc7:	icebp  
  410fc8:	aam    0x5a
  410fca:	(bad)  
  410fcc:	(bad)  
  410fce:	ret    
  410fcf:	test   eax,0x4df49e2f
  410fd4:	icebp  
  410fd5:	push   es
  410fd6:	jmp    0x410f80
  410fd8:	fsubrp st(5),st
  410fda:	test   BYTE PTR [edx+eax*8-0x43b783d6],al
  410fe1:	adc    al,0xed
  410fe3:	retf   0xfcae
  410fe6:	mov    ds:0x66ed07a7,eax
  410feb:	jb     0x410f83
  410fed:	cmp    al,0x58
  410fef:	mov    dl,0xaa
  410ff1:	mov    fs,WORD PTR ds:0xe4e054e2
  410ff7:	dec    ebx
  410ff8:	sbb    esi,eax
  410ffa:	aad    0xc6
  410ffc:	in     eax,0xc7
  410ffe:	imul   ecx,DWORD PTR [ecx],0xe9de9b69
  411004:	js     0x411006
  411006:	jg     0x410fe9
  411008:	or     al,0xaa
  41100a:	imul   esp,DWORD PTR [ecx],0x1a3df56c
  411010:	aaa    
  411011:	call   0x93b193ef
  411016:	push   0xffffffdd
  411018:	xchg   esi,eax
  411019:	add    dl,BYTE PTR [edi+0x1dd55534]
  41101f:	sbb    eax,0x205179c2
  411024:	fidivr WORD PTR ds:0xeac47b5c
  41102a:	pop    ds
  41102b:	test   al,0xa3
  41102d:	adc    ch,BYTE PTR [esi+ebx*1]
  411030:	aam    0x7b
  411032:	cld    
  411033:	pop    ds
  411034:	inc    esi
  411035:	and    BYTE PTR [esi],0x78
  411038:	in     al,dx
  411039:	mov    bh,0x2d
  41103b:	call   0x6a7e:0xbddd3b58
  411042:	les    edi,FWORD PTR [edi+0x420a3243]
  411048:	pushf  
  411049:	mov    esi,0xcbfb111a
  41104e:	icebp  
  41104f:	jne    0x410ff5
  411051:	inc    ecx
  411052:	or     BYTE PTR [ebx+edi*1+0x13],0x4b
  411057:	push   0xe8b699dd
  41105c:	leave  
  41105d:	mov    bl,0x62
  41105f:	ins    DWORD PTR es:[edi],dx
  411060:	pop    ebp
  411061:	adc    DWORD PTR [ebx],esp
  411063:	fadd   QWORD PTR [ebx]
  411065:	into   
  411066:	xchg   BYTE PTR [edi-0x7f03597f],ch
  41106c:	push   edi
  41106d:	test   al,0x20
  41106f:	retf   0x3221
  411072:	test   DWORD PTR [edx],edi
  411074:	mov    esp,esp
  411076:	cmp    DWORD PTR [esi],edx
  411078:	repnz nop
  41107a:	into   
  41107b:	add    ebx,DWORD PTR [esi-0xe]
  41107e:	dec    ebx
  41107f:	inc    ebx
  411080:	mov    ds:0x24b50ee9,eax
  411085:	(bad)  
  411086:	adc    al,0x4c
  411088:	stc    
  411089:	push   eax
  41108a:	in     al,dx
  41108b:	xor    al,BYTE PTR [eax-0x59f7ed3]
  411091:	add    DWORD PTR [esp+ecx*4],edi
  411094:	(bad)
  411097:	cmp    eax,0xfd62966b
  41109c:	test   al,0x5c
  41109e:	push   0x30
  4110a0:	cli    
  4110a1:	rcr    DWORD PTR [ecx-0x439ffe25],cl
  4110a7:	fld    DWORD PTR [edx-0x388ef64f]
  4110ad:	push   0x35
  4110af:	mov    BYTE PTR [ecx],dh
  4110b1:	pop    esi
  4110b2:	cdq    
  4110b3:	lods   al,BYTE PTR ds:[esi]
  4110b4:	mov    edx,0x686a1681
  4110b9:	test   esp,ecx
  4110bb:	jl     0x41108e
  4110bd:	cli    
  4110be:	(bad)  
  4110c0:	aas    
  4110c1:	retf   
  4110c2:	xor    bh,BYTE PTR [edi+0x70]
  4110c5:	(bad)  
  4110c6:	in     eax,0xb5
  4110c8:	sbb    al,BYTE PTR [ecx]
  4110ca:	iret   
  4110cb:	pop    ds
  4110cc:	push   ebx
  4110cd:	jbe    0x411094
  4110cf:	pop    esi
  4110d0:	sbb    al,dh
  4110d2:	mov    ecx,0xd901b004
  4110d7:	fwait
  4110d8:	or     BYTE PTR [eax-0x55],0xc3
  4110dc:	or     al,0x4
  4110de:	mov    WORD PTR [ebp-0x71f0df4e],ss
  4110e4:	loop   0x4110b2
  4110e6:	or     BYTE PTR [ecx],ah
  4110e8:	int    0x90
  4110ea:	push   ecx
  4110eb:	pop    ebp
  4110ec:	sub    ebp,DWORD PTR [ebx]
  4110ee:	int3   
  4110ef:	packsswb mm5,QWORD PTR [edx-0x10]
  4110f3:	add    edx,esp
  4110f5:	add    dh,BYTE PTR [ecx]
  4110f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110f8:	test   DWORD PTR [ecx-0x1f],esp
  4110fb:	loop   0x4110c2
  4110fd:	add    al,0x32
  4110ff:	into   
  411100:	cld    
  411101:	addr16 dec ebx
  411103:	push   0x2b
  411105:	push   edx
  411106:	shl    DWORD PTR [eax+0x0],1
  411109:	mov    esi,0x40040d25
  41110e:	ds sub eax,0xb274fd38
  411114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411115:	xor    esi,0x3f0da7b9
  41111b:	call   0xe6ea:0xb3028936
  411122:	(bad)  
  411123:	ss (bad) 
  411125:	stc    
  411126:	je     0x4110aa
  411128:	idiv   BYTE PTR [eax+0x24021ca2]
  41112e:	or     eax,0x693fb60e
  411133:	ror    BYTE PTR [esi-0x3800f2f2],0xb9
  41113a:	xchg   ecx,eax
  41113b:	adc    edx,esp
  41113d:	test   al,0x0
  41113f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411140:	into   
  411141:	stos   BYTE PTR es:[edi],al
  411142:	jb     0x411133
  411144:	fwait
  411145:	xchg   ecx,eax
  411146:	fbld   TBYTE PTR [eax-0x229775a3]
  41114c:	fidiv  WORD PTR [ebp+esi*4+0x12]
  411150:	mov    eax,ds:0x301a7295
  411155:	mov    edi,0x6c28e3e0
  41115a:	inc    esi
  41115b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41115c:	jb     0x41113c
  41115e:	add    eax,0xa6e5dc68
  411163:	int3   
  411164:	test   al,0x74
  411166:	fdiv   QWORD PTR [ebp-0x17]
  411169:	push   edi
  41116a:	out    dx,al
  41116b:	cmp    bl,BYTE PTR [ecx+edi*2-0x19630563]
  411172:	sbb    ch,BYTE PTR [edi-0xae5a64e]
  411178:	gs push edi
  41117a:	xlat   BYTE PTR ds:[ebx]
  41117b:	dec    ebx
  41117c:	ret    0x84a9
  41117f:	push   esp
  411180:	pop    ds
  411181:	dec    eax
  411182:	and    ecx,DWORD PTR [ebx+0x3b]
  411185:	into   
  411186:	sbb    BYTE PTR [edi+ecx*8],al
  411189:	daa    
  41118a:	xor    cl,BYTE PTR [ebp+ebp*4-0x6b]
  41118e:	nop
  41118f:	jg     0x411146
  411191:	push   0x1fdfc20
  411196:	jg     0x4111a7
  411198:	aad    0xd7
  41119a:	lahf   
  41119b:	pop    esp
  41119c:	cdq    
  41119d:	shl    BYTE PTR [eax],1
  41119f:	rcr    BYTE PTR [ecx+0x6d],1
  4111a2:	sar    ebp,1
  4111a4:	inc    ebp
  4111a5:	test   al,0xe2
  4111a7:	mov    cl,0x9d
  4111a9:	sub    edx,DWORD PTR [edi+0xd]
  4111ac:	aam    0x93
  4111ae:	fist   DWORD PTR [eax+0x30]
  4111b1:	sbb    bh,BYTE PTR [edi+edx*1-0x17]
  4111b5:	jp     0x41115d
  4111b7:	dec    ecx
  4111b8:	aam    0xcc
  4111ba:	es ja  0x4111bb
  4111bd:	xor    BYTE PTR [esi],ah
  4111bf:	mov    ch,0x5f
  4111c1:	lahf   
  4111c2:	sub    bh,BYTE PTR [eax-0x74]
  4111c5:	pop    ebx
  4111c6:	mov    ah,bl
  4111c8:	cmp    BYTE PTR [esi+0x7b651ee0],al
  4111ce:	and    DWORD PTR [ebx+0x2d],eax
  4111d1:	aas    
  4111d2:	pop    edx
  4111d3:	mov    edx,0x28b09fb5
  4111d8:	int3   
  4111d9:	or     DWORD PTR [ecx+0x36f4bb23],eax
  4111df:	fild   DWORD PTR [edx+0x54]
  4111e2:	shl    DWORD PTR [eax+0x2d],1
  4111e5:	inc    edx
  4111e6:	or     ebp,DWORD PTR [esi-0x65]
  4111e9:	mov    ebp,0x77a3b049
  4111ee:	int    0xb5
  4111f0:	mov    ch,0xc
  4111f2:	dec    esp
  4111f3:	push   0xffffffd4
  4111f5:	xor    eax,0xe4cb4734
  4111fa:	push   ecx
  4111fb:	add    al,0xf4
  4111fd:	push   esp
  4111fe:	xchg   ebp,eax
  4111ff:	add    ah,ah
  411201:	cld    
  411202:	adc    eax,0x1bc50583
  411207:	and    BYTE PTR [ebx+0x7f],dl
  41120a:	dec    ebx
  41120b:	xlat   BYTE PTR ds:[ebx]
  41120c:	lock xor al,0xfe
  41120f:	add    DWORD PTR ds:0xc54d4d68,0x9120599d
  411219:	int3   
  41121a:	dec    ecx
  41121b:	pop    ebp
  41121c:	inc    ecx
  41121d:	push   esi
  41121e:	fisttp WORD PTR ds:0xf6ea7670
  411224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411225:	dec    ebp
  411226:	fimul  WORD PTR [edi+edx*1-0x1a]
  41122a:	sub    al,0xa4
  41122c:	addr16 jae 0x4111d4
  41122f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411230:	cmp    BYTE PTR [esi+0x3e0b0c8b],0xa3
  411237:	dec    ebx
  411238:	pop    edi
  411239:	(bad)  
  41123a:	shl    edi,0x43
  41123d:	outs   dx,DWORD PTR ds:[esi]
  41123e:	mov    esi,0x5e3e7173
  411243:	enter  0xfd41,0xe3
  411247:	push   ebp
  411248:	sbb    BYTE PTR [eax],0x57
  41124b:	fwait
  41124c:	iret   
  41124d:	jno    0x411282
  41124f:	shl    edi,1
  411251:	mov    edx,0xb35f9274
  411256:	mov    eax,0x469a85e4
  41125b:	arpl   bx,sp
  41125d:	lahf   
  41125e:	test   DWORD PTR [edx+ebx*8+0x5f436258],0x61602afd
  411269:	fcomp  st(1)
  41126b:	jmp    0xdbda94a2
  411270:	push   ss
  411271:	nop
  411272:	cs jnp 0x4111fc
  411275:	stos   DWORD PTR es:[edi],eax
  411276:	shl    bh,1
  411278:	mov    ah,0xad
  41127a:	and    BYTE PTR [edx+ecx*4-0x1cf46cd6],al
  411281:	dec    esi
  411282:	into   
  411283:	and    ebx,DWORD PTR [esi+0x64]
  411286:	inc    eax
  411287:	lods   al,BYTE PTR ds:[esi]
  411288:	retf   
  411289:	adc    eax,0xb8362425
  41128e:	add    DWORD PTR [esi-0x397f954c],ebp
  411294:	inc    esi
  411295:	popa   
  411296:	loope  0x41128f
  411298:	mov    ch,0x7c
  41129a:	pop    edx
  41129b:	jmp    0x411296
  41129d:	jmp    0xd44f1898
  4112a2:	cmp    BYTE PTR [ecx+ebp*1+0x3ba85fe4],bh
  4112a9:	mov    ch,BYTE PTR [esi]
  4112ab:	cld    
  4112ac:	lock pop es
  4112ae:	in     eax,dx
  4112af:	cwde   
  4112b0:	mov    cl,0x7c
  4112b2:	inc    ebx
  4112b3:	sbb    al,0x5
  4112b5:	push   ebx
  4112b6:	pop    ss
  4112b7:	inc    ecx
  4112b8:	call   0x3b69:0xaaf67456
  4112bf:	pop    ecx
  4112c0:	mov    dl,0xe9
  4112c2:	add    BYTE PTR [ecx-0x7f],0x7
  4112c6:	mov    ebx,0xddf1ca66
  4112cb:	into   
  4112cc:	cdq    
  4112cd:	add    edi,DWORD PTR [esi-0x512b7b31]
  4112d3:	sbb    bh,bl
  4112d5:	pop    edi
  4112d6:	les    ebx,FWORD PTR [eax+eax*1+0x39]
  4112da:	mov    WORD PTR ds:0x27eee1a6,?
  4112e0:	inc    edx
  4112e1:	cmp    al,0x85
  4112e3:	mov    ah,0xbe
  4112e5:	es xchg edx,eax
  4112e7:	(bad)  
  4112e8:	dec    ecx
  4112e9:	push   edx
  4112ea:	sti    
  4112eb:	retf   0x35bf
  4112ee:	xchg   ebp,eax
  4112ef:	pop    edx
  4112f0:	pop    ds
  4112f1:	mov    ebx,0xc56e4f96
  4112f6:	loope  0x411318
  4112f8:	jno    0x4112e9
  4112fa:	loopne 0x411330
  4112fc:	and    esi,DWORD PTR ds:0x2a991011
  411302:	sahf   
  411303:	neg    DWORD PTR ds:0xce59db54
  411309:	push   edi
  41130a:	cwde   
  41130b:	(bad)  
  41130e:	xchg   ecx,eax
  41130f:	sbb    ebx,DWORD PTR [edx-0x26]
  411312:	mul    BYTE PTR [eax-0x4489dcec]
  411318:	lods   eax,DWORD PTR ds:[esi]
  411319:	lods   al,BYTE PTR ds:[esi]
  41131a:	sti    
  41131b:	push   ss
  41131c:	xchg   esp,eax
  41131d:	hlt    
  41131e:	imul   edi,DWORD PTR [ebx+0x5b],0xffffff9c
  411322:	ja     0x41130c
  411324:	xchg   edi,eax
  411325:	dec    ebx
  411326:	outs   dx,BYTE PTR ds:[esi]
  411327:	add    esp,DWORD PTR [eax]
  411329:	adc    al,0xf1
  41132b:	ins    DWORD PTR es:[edi],dx
  41132c:	xor    BYTE PTR [edx+0x778fe37b],cl
  411332:	lahf   
  411333:	mov    ebp,0x10c6d5e2
  411338:	sbb    BYTE PTR [ebx-0x6e2ebe3],al
  41133e:	nop
  41133f:	ins    DWORD PTR es:[edi],dx
  411340:	lea    ecx,[edx-0x2a]
  411343:	retf   0x1858
  411346:	pop    edi
  411347:	adc    BYTE PTR [ebx+edx*8],0x39
  41134b:	enter  0xd74,0xf6
  41134f:	and    DWORD PTR [esp+esi*8],esi
  411352:	xchg   ebx,eax
  411353:	dec    eax
  411354:	cmc    
  411355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411356:	and    dl,dl
  411358:	and    al,0x96
  41135a:	mov    edi,0xfae41a87
  41135f:	xor    al,0x59
  411361:	std    
  411362:	dec    ecx
  411363:	mov    dh,0x49
  411365:	mov    dl,0x5e
  411367:	sbb    BYTE PTR [eax],dl
  411369:	push   eax
  41136a:	rcl    eax,1
  41136c:	push   esp
  41136d:	add    bh,BYTE PTR [edi]
  41136f:	add    DWORD PTR [eax+ebx*8-0x7c],0xffffffc2
  411374:	sub    eax,0xe615628c
  411379:	adc    ah,ch
  41137b:	arpl   WORD PTR [eax-0x7232fc2f],si
  411381:	jne    0x41137f
  411383:	fistp  QWORD PTR ds:0xf292c18f
  411389:	xor    eax,0x530e4db0
  41138e:	in     al,0x5
  411390:	dec    edx
  411391:	enter  0x1f78,0x99
  411395:	shl    BYTE PTR [ecx-0x32],0x53
  411399:	push   eax
  41139a:	pop    edx
  41139b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139c:	mov    al,ds:0x7c3f03e2
  4113a1:	shl    DWORD PTR [ebp+0x2e93fa42],cl
  4113a7:	mov    al,0xaa
  4113a9:	in     eax,dx
  4113aa:	ja     0x41141f
  4113ac:	sahf   
  4113ad:	(bad)  
  4113ae:	sbb    BYTE PTR [eax],dl
  4113b0:	or     BYTE PTR [ebx+0xec5d462],bl
  4113b6:	ret    0xb50a
  4113b9:	stos   BYTE PTR es:[edi],al
  4113ba:	call   0x6f85a911
  4113bf:	mov    ebx,0x6e816676
  4113c4:	pop    ecx
  4113c5:	fld    TBYTE PTR [edx]
  4113c7:	push   ds
  4113c8:	xor    dl,BYTE PTR [ebx]
  4113ca:	iret   
  4113cb:	jp     0x41139c
  4113cd:	push   0xfffffff3
  4113cf:	push   ss
  4113d0:	add    cl,dh
  4113d2:	mov    edi,0x4cd1d0c9
  4113d7:	mov    edx,0x9626f71b
  4113dc:	xchg   esi,eax
  4113dd:	jecxz  0x411389
  4113df:	pop    eax
  4113e0:	xor    DWORD PTR [esi],0x8b5e45d2
  4113e6:	push   es
  4113e7:	cdq    
  4113e8:	push   ecx
  4113e9:	push   ss
  4113ea:	test   eax,0x2fe56e83
  4113ef:	clc    
  4113f0:	add    bh,BYTE PTR [ecx-0x27]
  4113f3:	retf   0x1327
  4113f6:	jp     0x411455
  4113f8:	dec    edx
  4113f9:	adc    al,0xbe
  4113fb:	mov    cl,0x7d
  4113fd:	out    0x34,al
  4113ff:	inc    ecx
  411400:	test   al,0x54
  411402:	add    al,0x9f
  411404:	sbb    BYTE PTR [edx+0x115c63fc],al
  41140a:	and    DWORD PTR [eax],0x7d4d8bd9
  411410:	add    DWORD PTR [ecx],eax
  411412:	mov    esi,0x6b1739b0
  411417:	mov    dl,0x38
  411419:	xchg   ch,al
  41141b:	xor    esp,DWORD PTR [ecx-0x3c]
  41141e:	fnstsw WORD PTR [edx+esi*2+0x1e]
  411422:	imul   ebp,DWORD PTR [ebp-0x41909336],0x7a1e02c5
  41142c:	push   esp
  41142d:	push   esi
  41142e:	aas    
  41142f:	xchg   ebp,eax
  411430:	enter  0x80b7,0x8b
  411434:	cwde   
  411435:	scas   eax,DWORD PTR es:[edi]
  411436:	cdq    
  411437:	ss and al,0xce
  41143a:	stos   BYTE PTR es:[edi],al
  41143b:	int3   
  41143c:	mov    ebp,0xad466872
  411441:	jb     0x4113e0
  411443:	sbb    eax,0x81856fc5
  411448:	out    0xd3,eax
  41144a:	arpl   WORD PTR [eax-0x5bda63],sp
  411450:	mov    eax,ds:0x340b13ee
  411455:	scas   eax,DWORD PTR es:[edi]
  411456:	(bad)  
  411457:	sti    
  411458:	mov    al,ds:0x49012c3
  41145d:	and    eax,0x14588a5c
  411462:	pop    esi
  411463:	retf   
  411464:	mov    ah,0x68
  411466:	ret    0xa751
  411469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146a:	retf   
  41146b:	imul   DWORD PTR [edx+0x2]
  41146e:	out    0xd6,eax
  411470:	push   ebx
  411471:	sahf   
  411472:	push   es
  411473:	push   ecx
  411474:	mov    dh,0x9d
  411476:	mov    al,ds:0x90e91205
  41147b:	add    eax,0xa163cfcc
  411480:	in     al,0x3e
  411482:	inc    esi
  411483:	sbb    ah,ah
  411485:	cmp    eax,0xa0e3af6
  41148a:	jecxz  0x411451
  41148c:	int3   
  41148d:	mov    ecx,DWORD PTR [ecx-0x3fc68b0b]
  411493:	jmp    0xdd62af72
  411498:	outs   dx,DWORD PTR ds:[esi]
  411499:	mov    ds:0x4f2691da,eax
  41149e:	mov    dl,0x72
  4114a0:	sub    BYTE PTR [edx],0x5a
  4114a3:	pushf  
  4114a4:	pushf  
  4114a5:	mov    ebx,0xc2c47df8
  4114aa:	fdivr  QWORD PTR [eiz*2+0x4d5ee600]
  4114b1:	xor    esp,esi
  4114b3:	loope  0x411437
  4114b5:	repnz sub eax,0xe6093f06
  4114bb:	cmc    
  4114bc:	jno    0x41144b
  4114be:	sub    esp,DWORD PTR [edx+0x4f9b8bd0]
  4114c4:	loop   0x411482
  4114c6:	mov    bh,0xd2
  4114c8:	adc    al,0xf2
  4114ca:	lahf   
  4114cb:	xor    DWORD PTR [ebx-0x482635fe],esi
  4114d1:	push   esp
  4114d2:	mov    al,dh
  4114d4:	xor    eax,0x835f7bf2
  4114d9:	mov    al,ds:0xc14e9698
  4114de:	out    dx,al
  4114df:	aad    0x2c
  4114e1:	xchg   BYTE PTR [edi],bh
  4114e3:	mov    al,0x9c
  4114e5:	dec    eax
  4114e6:	mov    BYTE PTR [ecx+0x7df126f4],dh
  4114ec:	sub    edx,DWORD PTR [eax-0x62264974]
  4114f2:	shr    DWORD PTR [edx+0x50711171],cl
  4114f8:	cmp    DWORD PTR [ebp+ebx*2-0x75f4d63a],esp
  4114ff:	popf   
  411500:	imul   ebp,DWORD PTR [edx-0x69],0xe81f3066
  411507:	stos   BYTE PTR es:[edi],al
  411508:	cmp    eax,0x95e5c57c
  41150d:	xor    al,0xde
  41150f:	(bad)  
  411510:	arpl   WORD PTR [edi],si
  411512:	xchg   ebx,eax
  411513:	mov    dl,0x18
  411515:	sbb    al,0x45
  411517:	dec    edx
  411518:	cdq    
  411519:	push   ecx
  41151a:	aam    0x30
  41151c:	and    DWORD PTR [edx-0x2b9ca39f],0xd04b246
  411526:	out    0x40,al
  411528:	and    al,0x17
  41152a:	js     0x4114ce
  41152c:	dec    edx
  41152d:	mov    bl,0xaa
  41152f:	xchg   ecx,eax
  411530:	fwait
  411531:	jmp    0x411532
  411533:	sub    ah,dh
  411535:	jp     0x4114f9
  411537:	lock mov bl,0x62
  41153a:	pop    esi
  41153b:	sub    ebx,DWORD PTR [ecx-0x3a31dafe]
  411541:	int3   
  411542:	pop    es
  411543:	mov    edi,0xb68449e3
  411548:	outs   dx,BYTE PTR ss:[esi]
  41154a:	into   
  41154b:	adc    DWORD PTR es:[eax+0x26490c3],edi
  411552:	mov    eax,ds:0x2ae25c8a
  411557:	rcl    BYTE PTR [eax-0x6150740c],cl
  41155d:	jge    0x4115d4
  41155f:	add    eax,0x19dedde7
  411564:	out    0xb8,al
  411566:	pop    esi
  411567:	xor    cl,dh
  411569:	shl    DWORD PTR [eax-0x7a4d290b],1
  41156f:	xor    al,0x8
  411571:	aaa    
  411572:	mov    ebx,0xcdb5eeca
  411577:	mov    al,0x2a
  411579:	jbe    0x4115d4
  41157b:	cld    
  41157c:	(bad)  
  41157d:	imul   BYTE PTR [edx-0x3a36b6c1]
  411583:	add    DWORD PTR [edi],ecx
  411585:	cmp    edx,DWORD PTR ss:[ebp*4-0x6ec87415]
  41158d:	pop    edi
  41158e:	(bad)  
  41158f:	fisttp QWORD PTR [esp-0x14b2facb]
  411596:	out    0x48,al
  411598:	cld    
  411599:	sbb    BYTE PTR [ecx],al
  41159b:	fld    QWORD PTR [edx]
  41159d:	adc    al,0xad
  41159f:	mov    al,ds:0x7fd1ec86
  4115a4:	inc    ebx
  4115a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a6:	or     DWORD PTR [ebp-0x23585e05],esp
  4115ac:	clc    
  4115ad:	les    ebx,FWORD PTR [ebx]
  4115af:	loopne 0x4115ac
  4115b1:	adc    al,0xa1
  4115b3:	retf   
  4115b4:	xor    ch,BYTE PTR [eax]
  4115b6:	sub    esi,DWORD PTR [ecx-0x3f2529f7]
  4115bc:	xchg   esi,eax
  4115bd:	push   ds
  4115be:	sub    ebp,DWORD PTR [esi+0x4e13c8a9]
  4115c4:	sbb    edi,DWORD PTR [eax-0x48]
  4115c7:	push   0xb59301c
  4115cc:	psubb  mm2,QWORD PTR [edx-0xf]
  4115d0:	inc    edi
  4115d1:	cmp    al,0xc4
  4115d3:	or     DWORD PTR [edx],0xffffffb6
  4115d6:	ret    
  4115d7:	(bad)  
  4115d8:	jo     0x4115df
  4115da:	push   edx
  4115db:	xchg   esp,eax
  4115dc:	repnz clc 
  4115de:	mov    edi,0x700c5e3e
  4115e3:	inc    edx
  4115e4:	leave  
  4115e5:	(bad)  [edi+0x5fc4b29a]
  4115eb:	iret   
  4115ec:	inc    esi
  4115ed:	nop
  4115ee:	push   edi
  4115ef:	adc    BYTE PTR [ecx],ch
  4115f1:	fstp   DWORD PTR [ecx+ebp*8-0x79ccbcc6]
  4115f8:	jle    0x4115ae
  4115fa:	jmp    0x9db:0xc7db02a3
  411601:	or     BYTE PTR [ecx+0x59],ah
  411604:	test   ah,ch
  411606:	mov    al,0x78
  411608:	lods   al,BYTE PTR ds:[esi]
  411609:	sti    
  41160a:	cmp    eax,0x1bcc4447
  41160f:	and    eax,0xf8c128a2
  411614:	sbb    BYTE PTR ds:0x5af7d14d,cl
  41161a:	cmpxchg DWORD PTR ds:0x8419c30f,edx
  411621:	fs mov esp,0x78f06e02
  411627:	push   0x2b
  411629:	lahf   
  41162a:	and    eax,0xbcb7a2e2
  41162f:	sub    esi,ebp
  411631:	mov    ebx,0xd75ac2bc
  411636:	mov    edi,0xed84780a
  41163b:	dec    bl
  41163d:	push   eax
  41163e:	dec    DWORD PTR [eax+0x74]
  411641:	hlt    
  411642:	ja     0x4115f9
  411644:	sub    eax,0xd7265bfd
  411649:	xor    dl,BYTE PTR [edi+0x7a6fa30a]
  41164f:	push   edi
  411650:	test   BYTE PTR [ebp-0x5e],dh
  411653:	or     eax,0x18ea1f05
  411658:	call   0x6efd:0x586640f8
  41165f:	div    DWORD PTR ds:0xe330eb04
  411665:	fld    DWORD PTR [ebx+edi*4-0x20]
  411669:	xor    ecx,DWORD PTR cs:[edi+0x293b9f89]
  411670:	aad    0xb6
  411672:	cli    
  411673:	or     ch,dh
  411675:	sbb    DWORD PTR [edx-0x7],ebx
  411678:	pop    es
  411679:	dec    esp
  41167a:	fld    QWORD PTR [esi]
  41167c:	xchg   cl,bl
  41167e:	ss xor al,0x47
  411681:	imul   esi,edi,0xcd355c04
  411687:	jecxz  0x411700
  411689:	and    eax,0xb8538a27
  41168e:	push   ebx
  41168f:	sbb    al,0xb9
  411691:	push   edx
  411692:	(bad)  
  411693:	scas   al,BYTE PTR es:[edi]
  411694:	and    esp,ecx
  411696:	scas   eax,DWORD PTR es:[edi]
  411697:	inc    ecx
  411698:	ds push ebp
  41169a:	cld    
  41169b:	lods   al,BYTE PTR ds:[esi]
  41169c:	or     BYTE PTR [eax+0x50f8f3d5],dl
  4116a2:	cs (bad) 
  4116a4:	jae    0x411653
  4116a6:	pop    esp
  4116a7:	int3   
  4116a8:	and    ecx,DWORD PTR [eax-0x508a047f]
  4116ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116af:	icebp  
  4116b0:	nop
  4116b1:	mov    WORD PTR [edi+eax*4+0x36],es
  4116b5:	sbb    al,0x37
  4116b7:	data16 mov dh,0x50
  4116ba:	sbb    bl,bh
  4116bc:	adc    BYTE PTR [esi],0xd3
  4116bf:	xchg   ebx,eax
  4116c0:	mov    dl,0x98
  4116c2:	jno    0x4116b1
  4116c4:	push   0xffffffeb
  4116c6:	(bad)  
  4116c7:	jno    0x4116fe
  4116c9:	scas   al,BYTE PTR es:[edi]
  4116ca:	scas   al,BYTE PTR es:[edi]
  4116cb:	pop    ds
  4116cc:	add    esi,DWORD PTR [edi]
  4116ce:	std    
  4116cf:	inc    ecx
  4116d0:	pop    ss
  4116d1:	jne    0x411707
  4116d3:	mov    edi,esi
  4116d5:	push   ecx
  4116d6:	dec    edi
  4116d7:	jb     0x411751
  4116d9:	shl    DWORD PTR [esi-0x2e],1
  4116dc:	or     BYTE PTR [ecx-0x170f103b],bl
  4116e2:	jl     0x4116f0
  4116e4:	jns    0x4116f5
  4116e6:	out    dx,eax
  4116e7:	pop    esi
  4116e8:	pop    esp
  4116e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ea:	mov    ch,0x56
  4116ec:	pop    edx
  4116ed:	(bad)  
  4116ef:	fldenv [edi-0x41bb368e]
  4116f5:	dec    esi
  4116f6:	xor    edi,eax
  4116f8:	pop    edi
  4116f9:	inc    eax
  4116fa:	mov    cl,0x3e
  4116fc:	mov    eax,ds:0xb94438b1
  411701:	jmp    0x4116cb
  411703:	pushf  
  411704:	push   0xfffffff8
  411706:	or     esp,DWORD PTR [eax-0x603d2809]
  41170c:	dec    eax
  41170d:	lds    ebp,FWORD PTR [eax+0x5a]
  411710:	xor    eax,0xb97fcd48
  411715:	out    dx,eax
  411716:	test   BYTE PTR [eax-0x6f],bl
  411719:	inc    esi
  41171a:	sbb    DWORD PTR [ebp+0x1841f40b],esp
  411720:	ja     0x41172c
  411722:	out    0xc3,eax
  411724:	pop    ebp
  411725:	out    0x81,al
  411727:	ret    0x85fe
  41172a:	sub    BYTE PTR [edx-0x63],bl
  41172d:	jne    0x411735
  41172f:	cmp    edx,DWORD PTR [edx+0x7750acfe]
  411735:	pop    ecx
  411736:	mov    ebx,0xfb0942b
  41173b:	mov    dl,0xa3
  41173d:	lods   al,BYTE PTR ds:[esi]
  41173e:	sti    
  41173f:	iret   
  411740:	imul   ebp,DWORD PTR [esi-0x6ce3e9b1],0xb77c6fe1
  41174a:	pushf  
  41174b:	fisub  DWORD PTR [edi]
  41174d:	ss (bad) 
  41174f:	jmp    0x87e7:0xc9d3b10c
  411756:	jmp    0xda8c8c1f
  41175b:	add    BYTE PTR [edi-0x15],bl
  41175e:	push   eax
  41175f:	pop    ecx
  411760:	dec    esi
  411761:	(bad)
  411765:	shl    BYTE PTR [edi+0x18e809a0],1
  41176b:	aaa    
  41176c:	scas   al,BYTE PTR es:[edi]
  41176d:	inc    ecx
  41176e:	mov    ebx,0xbdbe2304
  411773:	sub    BYTE PTR [ecx-0x47],al
  411776:	push   ebx
  411777:	mov    ebx,0xf3d7717d
  41177c:	add    al,0x69
  41177e:	popf   
  41177f:	inc    eax
  411780:	push   ebx
  411781:	mov    eax,0x125baf14
  411786:	popf   
  411787:	pop    edx
  411788:	add    edi,DWORD PTR [edx-0x78]
  41178b:	clc    
  41178c:	adc    BYTE PTR [ebp+0x52],0x4b
  411790:	cmp    BYTE PTR [eiz*4-0x1cf0d9b2],dh
  411797:	and    DWORD PTR [ecx-0x3e5296b],esp
  41179d:	rol    ch,1
  41179f:	cmp    al,0xb8
  4117a1:	jo     0x411792
  4117a3:	cli    
  4117a4:	or     al,0x41
  4117a6:	inc    edi
  4117a7:	cmp    bl,BYTE PTR ds:0x8801decb
  4117ad:	lods   eax,DWORD PTR ds:[esi]
  4117ae:	jmp    0x7964741c
  4117b3:	pop    edi
  4117b4:	cmc    
  4117b5:	int    0xba
  4117b7:	xchg   DWORD PTR [ebx+0xa],ebx
  4117ba:	mov    DWORD PTR [edx-0x5],eax
  4117bd:	cld    
  4117be:	push   ecx
  4117bf:	mov    ebp,0xdca24088
  4117c4:	xchg   ebp,eax
  4117c5:	dec    esp
  4117c6:	dec    esi
  4117c7:	jo     0x4117bf
  4117c9:	outs   dx,DWORD PTR ds:[esi]
  4117ca:	sti    
  4117cb:	sbb    DWORD PTR ds:0xd5f67429,esi
  4117d1:	jmp    0x1833:0x20eba082
  4117d8:	or     bl,BYTE PTR [ecx+0x69]
  4117db:	div    BYTE PTR [eax+eiz*1-0x3edc21ec]
  4117e2:	or     edi,ecx
  4117e4:	pop    edx
  4117e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e6:	in     eax,0xad
  4117e8:	mov    al,ds:0xf3791cc9
  4117ed:	push   esp
  4117ee:	xor    eax,0xec842000
  4117f3:	les    eax,FWORD PTR [ecx+0x3fdac2be]
  4117f9:	and    esp,DWORD PTR [ecx+0x174fa9e4]
  4117ff:	shr    DWORD PTR [esi-0x4336b458],cl
  411805:	inc    eax
  411806:	sub    esi,esi
  411808:	jl     0x41178d
  41180a:	push   ds
  41180b:	fistp  DWORD PTR [ecx-0x33759237]
  411811:	jecxz  0x41180b
  411813:	icebp  
  411814:	fstp   DWORD PTR [ebp*1+0x706c272]
  41181b:	popf   
  41181c:	(bad)
  41181f:	sub    al,0x55
  411821:	sub    DWORD PTR [eax],0xffffff87
  411824:	fsub   DWORD PTR [esi-0x61]
  411827:	popa   
  411828:	sbb    DWORD PTR [esp+ebx*2],ecx
  41182b:	adc    eax,0x3bff23bb
  411830:	mov    cs,WORD PTR [ecx+ebp*2-0x29]
  411834:	call   0x485dee03
  411839:	leave  
  41183a:	or     al,0xd5
  41183c:	(bad)  
  41183d:	jle    0x4117fc
  41183f:	and    DWORD PTR [esi],ebx
  411841:	ret    0x3f63
  411844:	push   ds
  411845:	outs   dx,BYTE PTR ds:[esi]
  411846:	pop    edi
  411847:	data16 rcl BYTE PTR [ecx-0x43],1
  41184b:	in     al,dx
  41184c:	adc    cl,BYTE PTR [edi-0x65]
  41184f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411850:	pop    eax
  411851:	cmp    edi,DWORD PTR [ebp-0x6f283e08]
  411857:	(bad)  
  411858:	jns    0x411863
  41185a:	je     0x41182f
  41185c:	in     eax,dx
  41185d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41185e:	or     eax,0x537e0f13
  411863:	idiv   BYTE PTR [edx]
  411865:	adc    al,0x86
  411867:	out    0x9c,eax
  411869:	xchg   esi,eax
  41186a:	mov    bh,0x89
  41186c:	xchg   edi,eax
  41186d:	jb     0x4118c2
  41186f:	in     eax,dx
  411870:	adc    eax,0x9faa5b8
  411875:	pop    ds
  411876:	pusha  
  411877:	add    al,0x43
  411879:	lock loopne 0x411893
  41187c:	pop    eax
  41187d:	inc    ebx
  41187e:	(bad)  
  41187f:	pusha  
  411880:	cdq    
  411881:	nop
  411882:	loop   0x41185d
  411884:	mov    dh,0x91
  411886:	adc    al,0x8c
  411888:	stos   DWORD PTR es:[edi],eax
  411889:	dec    esi
  41188a:	and    eax,0x30ccba13
  41188f:	dec    eax
  411890:	push   esp
  411891:	repnz fisub DWORD PTR [eax-0x60]
  411895:	imul   dl
  411897:	sbb    esp,DWORD PTR [edx]
  411899:	pusha  
  41189a:	(bad)  [edi-0x6c]
  41189d:	inc    esi
  41189e:	pop    edx
  41189f:	adc    eax,0x1cd72b69
  4118a4:	sub    dl,al
  4118a6:	jp     0x4118b4
  4118a8:	int3   
  4118a9:	push   edi
  4118aa:	test   BYTE PTR [edx+eax*2-0x507a74ad],0x77
  4118b2:	push   0x2358843b
  4118b7:	mov    al,0x48
  4118b9:	add    eax,0x832f60c7
  4118be:	es mov esi,esp
  4118c1:	xor    dl,0x50
  4118c4:	fiadd  WORD PTR [edx+0x17]
  4118c7:	xchg   esi,eax
  4118c8:	lods   eax,DWORD PTR ds:[esi]
  4118c9:	repz mov al,ds:0x115165dd
  4118cf:	push   cs
  4118d0:	cmp    DWORD PTR [esp+ebp*8-0x7c],edi
  4118d4:	sub    DWORD PTR [edi-0xc],edx
  4118d7:	outs   dx,BYTE PTR ds:[esi]
  4118d8:	mov    dl,0xb6
  4118da:	cmp    al,ah
  4118dc:	inc    ebx
  4118dd:	test   al,0xf7
  4118df:	mov    DWORD PTR [esi+0x1a],eax
  4118e2:	fmulp  st(1),st
  4118e4:	adc    al,BYTE PTR [eax]
  4118e6:	in     al,0xcd
  4118e8:	not    DWORD PTR [edx-0x7c6fd5c3]
  4118ee:	inc    eax
  4118ef:	jp     0x4118c9
  4118f1:	xlat   BYTE PTR ds:[ebx]
  4118f2:	jmp    0x26f9af5
  4118f7:	sbb    al,0xed
  4118f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118fa:	imul   esp,DWORD PTR [eax-0xfe00551],0xffffffcb
  411901:	addr16 inc ebp
  411903:	and    eax,0x16ba6437
  411908:	mov    edx,0xb6c941ee
  41190d:	mov    bl,0x97
  41190f:	pop    ebp
  411910:	loop   0x411943
  411912:	or     DWORD PTR [edx+0x49],ebx
  411915:	fld    TBYTE PTR [ecx]
  411917:	cld    
  411918:	dec    ecx
  411919:	push   esi
  41191a:	add    dh,ah
  41191c:	adc    ch,BYTE PTR [edi]
  41191e:	and    al,0xf0
  411920:	ja     0x41199d
  411922:	mov    ebx,0x2ed801cd
  411927:	push   edi
  411928:	or     eax,0x62007ead
  41192d:	mov    cl,0xc
  41192f:	push   0xffffffc2
  411931:	stc    
  411932:	dec    eax
  411933:	pop    ecx
  411934:	xor    cl,BYTE PTR [esi]
  411936:	inc    esp
  411937:	xchg   edi,eax
  411938:	clc    
  411939:	shl    BYTE PTR [esi],1
  41193b:	adc    ecx,DWORD PTR [ebx]
  41193d:	mov    ds:0xb2722595,al
  411942:	(bad)  
  411944:	out    dx,eax
  411945:	push   ecx
  411946:	xor    dh,BYTE PTR [ebx+esi*1]
  411949:	xor    DWORD PTR [ebp+0x18],esp
  41194c:	(bad)  
  41194d:	sbb    eax,0xe060f6be
  411952:	mov    bh,0x54
  411954:	pop    ecx
  411955:	cmp    bh,BYTE PTR [esi-0x29]
  411958:	hlt    
  411959:	retf   
  41195a:	or     edx,DWORD PTR [eax+0x28]
  41195d:	adc    al,0xfc
  41195f:	cmp    eax,DWORD PTR [eax+0x960fc92]
  411965:	mov    ch,0xca
  411967:	das    
  411968:	test   BYTE PTR [eax-0x5d],ch
  41196b:	ret    
  41196c:	inc    edi
  41196d:	dec    ebp
  41196e:	mov    cs,WORD PTR [esi-0x7b]
  411971:	rol    ebp,cl
  411973:	test   DWORD PTR [esi-0x29431be8],ebp
  411979:	and    DWORD PTR [eax+edi*1-0xb6dc93c],esi
  411980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411981:	mov    ds:0x6d6eedff,eax
  411986:	test   DWORD PTR [edi+0x7d09bc37],esp
  41198c:	sbb    BYTE PTR [eax-0x67],dl
  41198f:	je     0x411982
  411991:	pop    ss
  411992:	add    dl,BYTE PTR [edx+eiz*1]
  411995:	and    al,0x97
  411997:	in     eax,dx
  411998:	rcl    DWORD PTR [esp+edi*1-0x6a],cl
  41199c:	mov    edi,0x53e6f491
  4119a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a2:	gs mov eax,0xdd938016
  4119a8:	out    dx,eax
  4119a9:	and    dh,BYTE PTR [ebp+0x63]
  4119ac:	ins    DWORD PTR es:[edi],dx
  4119ad:	rcl    DWORD PTR [edx+0x2b],cl
  4119b0:	fcomp  QWORD PTR [ecx-0x1c]
  4119b3:	lods   al,BYTE PTR ds:[esi]
  4119b4:	push   0x89a5fd61
  4119b9:	jle    0x411a09
  4119bb:	sbb    al,0x75
  4119bd:	pop    ds
  4119be:	ins    BYTE PTR es:[edi],dx
  4119bf:	sbb    eax,0xf06db33b
  4119c4:	sub    BYTE PTR [edi+0x39],0xa9
  4119c8:	xlat   BYTE PTR ds:[ebx]
  4119c9:	xchg   BYTE PTR [eax-0x318c1e8e],ah
  4119cf:	sbb    edx,DWORD PTR [ebp+0x1]
  4119d2:	aad    0x96
  4119d4:	sub    ah,BYTE PTR [ecx-0xde13158]
  4119da:	xlat   BYTE PTR ds:[ebx]
  4119db:	sbb    eax,0xc678339
  4119e0:	mov    ds:0xa7202b89,eax
  4119e5:	and    edx,edi
  4119e7:	or     ecx,edx
  4119e9:	ret    
  4119ea:	or     ah,BYTE PTR [edx+0x4dd557e1]
  4119f0:	jg     0x411a71
  4119f2:	or     al,BYTE PTR [edx+ebx*2+0x4d1471ed]
  4119f9:	adc    BYTE PTR [esi],0xec
  4119fc:	pop    ss
  4119fd:	jne    0x411a67
  4119ff:	loopne 0x4119b1
  411a01:	mov    bl,0x70
  411a03:	ret    0x6bbb
  411a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a07:	std    
  411a08:	lahf   
  411a09:	inc    edi
  411a0a:	mov    esp,0x58a40c7
  411a0f:	jb     0x411a60
  411a11:	clc    
  411a12:	jp     0x4119ee
  411a14:	push   esp
  411a15:	mov    ah,0x6e
  411a17:	int    0x57
  411a19:	pushf  
  411a1a:	sub    BYTE PTR [esi+0x42a9df29],dl
  411a20:	add    al,BYTE PTR [esi-0x1f]
  411a23:	retf   0xd26f
  411a26:	push   eax
  411a27:	mov    ah,BYTE PTR [ebx]
  411a29:	(bad)  
  411a2a:	xor    al,0x33
  411a2c:	sub    BYTE PTR [ebx],al
  411a2e:	lock mov cl,0x2f
  411a31:	xlat   BYTE PTR ds:[ebx]
  411a32:	push   ebx
  411a33:	les    ebx,FWORD PTR [eax]
  411a35:	int3   
  411a36:	rcl    BYTE PTR [ebp+0x1d022201],cl
  411a3c:	adc    eax,0xe8890a31
  411a41:	mov    al,0xbe
  411a43:	sub    ecx,DWORD PTR [ebp-0x11]
  411a46:	js     0x411a08
  411a48:	add    al,0x8f
  411a4a:	pop    ebx
  411a4b:	mov    eax,DWORD PTR ds:0x3cfc6103
  411a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a52:	inc    esi
  411a53:	nop
  411a54:	mov    WORD PTR [eax+0x72],ds
  411a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a58:	in     al,dx
  411a59:	fistp  QWORD PTR [eax]
  411a5b:	(bad)  
  411a5c:	mov    ebx,0x124379b3
  411a61:	and    bh,BYTE PTR [edi+0x2b]
  411a64:	jae    0x411a3f
  411a66:	jge    0x411a97
  411a68:	adc    BYTE PTR ds:0x16bc31ec,dl
  411a6e:	cmp    cl,0xf3
  411a71:	add    DWORD PTR [ecx-0x4840803c],esp
  411a77:	pop    edx
  411a78:	sub    DWORD PTR ds:0x9477f988,0xbe8f9a6
  411a82:	(bad)  
  411a83:	fisttp DWORD PTR [ebp+eax*4+0x77]
  411a87:	xor    al,dl
  411a89:	mov    eax,0x111146fc
  411a8e:	dec    esp
  411a8f:	test   DWORD PTR [ebx-0x2994f9c1],esp
  411a95:	loop   0x411a57
  411a97:	jl     0x411aaa
  411a99:	cs mov bl,0xe0
  411a9c:	stos   BYTE PTR es:[edi],al
  411a9d:	cmp    dh,BYTE PTR [ecx]
  411a9f:	fisub  DWORD PTR [ebp-0x47]
  411aa2:	sahf   
  411aa3:	fist   DWORD PTR [ecx]
  411aa5:	int    0x4
  411aa7:	mov    bl,BYTE PTR [ebx-0x17aa749b]
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	data16 sahf 
  411bf9:	scas   al,BYTE PTR es:[edi]
  411bfa:	ror    BYTE PTR [ebx-0x57],0x7c
  411bfe:	jl     0x411beb
  411c00:	pop    edi
  411c01:	jl     0x411c7f
  411c03:	shl    DWORD PTR [esi+0x12],1
  411c06:	test   DWORD PTR [eax-0x7f],ebp
  411c09:	and    DWORD PTR [esi+0x2f4fe238],0x85458d0a
  411c13:	in     eax,0x17
  411c15:	imul   ebx,DWORD PTR [eax-0x44],0xf8deb46a
  411c1c:	push   ds
  411c1d:	aad    0xdf
  411c1f:	pushf  
  411c20:	jge    0x411c3a
  411c22:	shl    DWORD PTR [eax],cl
  411c24:	(bad)  
  411c25:	mov    ecx,0x6626a5af
  411c2a:	lods   eax,DWORD PTR ds:[esi]
  411c2b:	and    edx,DWORD PTR [edi+edi*1+0x4]
  411c2f:	or     BYTE PTR fs:[eax-0x1b217ef5],dl
  411c36:	addr16 dec ecx
  411c38:	mov    cl,0x32
  411c3a:	pop    edi
  411c3b:	test   DWORD PTR [ecx],0x68cf1c01
  411c41:	test   al,0xb5
  411c43:	sahf   
  411c44:	loope  0x411bd3
  411c46:	mov    ecx,0xc35f7f58
  411c4b:	mov    BYTE PTR [esi-0x50a09623],al
  411c51:	sbb    esp,edx
  411c53:	or     bl,cl
  411c55:	mov    edi,DWORD PTR [edi+0x47f7bfe9]
  411c5b:	sub    al,0xaf
  411c5d:	into   
  411c5e:	das    
  411c5f:	xor    al,ch
  411c61:	retf   
  411c62:	dec    ebx
  411c63:	nop
  411c64:	(bad)  
  411c65:	xor    eax,0x1c3a0983
  411c6a:	mov    cl,0x8e
  411c6c:	cmp    eax,0xdf8f0ac3
  411c71:	or     eax,eax
  411c73:	add    eax,0xb27fcf87
  411c78:	mov    gs,WORD PTR cs:[ecx]
  411c7b:	popa   
  411c7c:	aam    0xcd
  411c7e:	inc    ebx
  411c7f:	ret    
  411c80:	xchg   edx,eax
  411c81:	xchg   edx,eax
  411c82:	add    bh,ch
  411c84:	pop    ebx
  411c85:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411c87:	arpl   WORD PTR ds:0x65ffb56d,dx
  411c8d:	or     esp,DWORD PTR [eax-0x36d4dd72]
  411c93:	cmp    BYTE PTR [edx-0x2b],ch
  411c96:	mov    esp,0xff77684a
  411c9b:	jns    0x411c94
  411c9d:	ret    0x591b
  411ca0:	pop    edi
  411ca1:	lods   eax,DWORD PTR ds:[esi]
  411ca2:	and    ecx,DWORD PTR [ecx+eiz*1]
  411ca5:	mov    ch,0xbc
  411ca7:	sub    eax,DWORD PTR [edx]
  411ca9:	repz mov ah,0xbe
  411cac:	in     al,dx
  411cad:	sbb    BYTE PTR [ebx],bh
  411caf:	int3   
  411cb0:	dec    esi
  411cb1:	push   edi
  411cb2:	popa   
  411cb3:	lahf   
  411cb4:	mov    dl,0x58
  411cb6:	scas   al,BYTE PTR es:[edi]
  411cb7:	mov    ds:0x18697e21,eax
  411cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cbd:	sub    BYTE PTR [eax+0x5e],0x64
  411cc1:	je     0x411ccc
  411cc3:	lahf   
  411cc4:	loopne 0x411cfa
  411cc6:	mov    al,0xb
  411cc8:	(bad)  
  411cc9:	aam    0x2e
  411ccb:	xor    ebp,DWORD PTR [esi+0x6b]
  411cce:	int3   
  411ccf:	ins    BYTE PTR es:[edi],dx
  411cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd1:	clc    
  411cd2:	sub    dh,cl
  411cd4:	xor    eax,0xd77082e9
  411cd9:	sub    eax,0x1de92ee3
  411cde:	mov    ebp,0xede13b71
  411ce3:	in     eax,dx
  411ce4:	adc    bp,sp
  411ce7:	popw   es
  411ce9:	movups xmm0,XMMWORD PTR [esi-0x3014853f]
  411cf0:	mov    bh,0xa7
  411cf2:	nop
  411cf3:	push   cs
  411cf4:	mov    bl,0xd6
  411cf6:	fs xor al,0x69
  411cf9:	and    bh,bh
  411cfb:	inc    eax
  411cfc:	int    0x65
  411cfe:	shr    dh,cl
  411d00:	std    
  411d01:	(bad)  
  411d02:	fld    st(1)
  411d04:	repnz push ebx
  411d06:	sbb    ch,BYTE PTR [edi]
  411d08:	call   0x856eca23
  411d0d:	inc    ebp
  411d0e:	popa   
  411d0f:	fidivr WORD PTR [edx]
  411d11:	int    0xf7
  411d13:	sub    ebx,DWORD PTR [eax+0x35]
  411d16:	loopne 0x411cfd
  411d18:	push   0x46
  411d1a:	cmp    al,0xaa
  411d1c:	adc    al,0x17
  411d1e:	fucomi st,st(1)
  411d20:	inc    esi
  411d21:	cmp    DWORD PTR [ebp+0x6b],ecx
  411d24:	cmp    BYTE PTR [edi+0x2ecaabe8],cl
  411d2a:	cmc    
  411d2b:	sbb    cl,bh
  411d2d:	hlt    
  411d2e:	sbb    DWORD PTR [eax+esi*4+0x27],0xffffffe6
  411d33:	int3   
  411d34:	xor    al,0x25
  411d36:	mov    ebx,0x3c2315e5
  411d3b:	push   es
  411d3c:	cmp    al,BYTE PTR [ecx]
  411d3e:	add    edi,esi
  411d40:	mov    esp,0x69f7d030
  411d45:	sub    al,0x9d
  411d47:	stos   BYTE PTR es:[edi],al
  411d48:	sub    al,0x2
  411d4a:	cdq    
  411d4b:	icebp  
  411d4c:	mov    ecx,0x7ee57f46
  411d51:	cdq    
  411d52:	mov    bl,0x2a
  411d54:	ror    DWORD PTR [eax+0xe117f9d],1
  411d5a:	lds    ebp,FWORD PTR [edi+0x2724258a]
  411d60:	mov    cl,0x8
  411d62:	fwait
  411d63:	lods   eax,DWORD PTR ds:[esi]
  411d64:	inc    edx
  411d65:	adc    cl,BYTE PTR [eax-0x3c8f3e3c]
  411d6b:	xor    DWORD PTR [ebx],edx
  411d6d:	cdq    
  411d6e:	mov    al,0xbb
  411d70:	lods   eax,DWORD PTR ds:[esi]
  411d71:	shl    BYTE PTR ds:0x83109c05,0x1a
  411d78:	dec    esp
  411d79:	scas   al,BYTE PTR es:[edi]
  411d7a:	ror    edx,cl
  411d7c:	fdiv   st(0),st
  411d7e:	enter  0x5ff2,0x25
  411d82:	scas   al,BYTE PTR es:[edi]
  411d83:	push   esp
  411d84:	and    dh,dl
  411d86:	pop    es
  411d87:	je     0x411de8
  411d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8a:	out    0xac,al
  411d8c:	mov    BYTE PTR [eax+0x786fad9b],cl
  411d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d93:	add    bh,BYTE PTR gs:[esi+0x78241673]
  411d9a:	mov    WORD PTR [eax+0x49],?
  411d9d:	jmp    0x411de0
  411d9f:	jno    0x411d7e
  411da1:	xor    DWORD PTR [ebx-0x94d262b],ebp
  411da7:	inc    ebx
  411da8:	sub    esp,DWORD PTR [esi+0x3a]
  411dab:	push   ss
  411dac:	mov    edx,0x6cefe139
  411db1:	mov    ebp,0x179b55bf
  411db6:	fwait
  411db7:	mov    ebx,0x50b3d70e
  411dbc:	cmp    ebp,DWORD PTR [esi+0x44]
  411dbf:	mov    dl,0x87
  411dc1:	dec    eax
  411dc2:	stos   BYTE PTR es:[edi],al
  411dc3:	sub    al,0x95
  411dc5:	sar    dh,0xc7
  411dc8:	jl     0x411d67
  411dca:	cmp    DWORD PTR ds:0xa9add1b9,ebx
  411dd0:	xchg   edx,eax
  411dd1:	loope  0x411de7
  411dd3:	cld    
  411dd4:	xor    DWORD PTR [ebx],ebx
  411dd6:	adc    DWORD PTR [ebx],edi
  411dd8:	test   BYTE PTR [eax-0x593fe244],0xdb
  411ddf:	inc    edi
  411de0:	adc    al,0x30
  411de2:	mov    cl,BYTE PTR [ebx+0x2d]
  411de5:	pop    ss
  411de6:	pushf  
  411de7:	mov    dl,0xde
  411de9:	pop    eax
  411dea:	out    0x9c,eax
  411dec:	scas   eax,DWORD PTR es:[edi]
  411ded:	inc    ebx
  411dee:	dec    edx
  411def:	mov    dh,0xf
  411df1:	fbld   TBYTE PTR [esi+0x5bc15e4f]
  411df7:	sbb    dh,BYTE PTR [ebp+0x5e]
  411dfa:	ss push edi
  411dfc:	(bad)  
  411dfd:	int    0xa8
  411dff:	and    esi,edx
  411e01:	sub    eax,0x3ae05ecd
  411e06:	pop    eax
  411e07:	jmp    0xdb32:0xfcde977d
  411e0e:	lods   eax,DWORD PTR ds:[esi]
  411e0f:	loop   0x411e48
  411e11:	ja     0x411e87
  411e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e14:	fdiv   DWORD PTR [ecx+0x2c446cb4]
  411e1a:	mov    ds:0x3e10277a,al
  411e1f:	mov    bh,0xd
  411e21:	jge    0x411e87
  411e23:	out    0x33,al
  411e25:	mov    ch,0x72
  411e27:	mov    ebp,DWORD PTR [edi-0x474b68b6]
  411e2d:	cmp    al,0x83
  411e2f:	xchg   esi,eax
  411e30:	dec    ebx
  411e31:	(bad)  
  411e32:	or     dh,BYTE PTR [eax]
  411e34:	fs inc edx
  411e36:	mov    ecx,0xd1680fc4
  411e3b:	inc    eax
  411e3c:	cmp    DWORD PTR [ecx+ebp*1],0xffffffc0
  411e40:	sar    DWORD PTR [edx+0x13],cl
  411e43:	je     0x411e48
  411e45:	setno  BYTE PTR [esi-0x39c05c44]
  411e4c:	push   ss
  411e4d:	ja     0x411e51
  411e4f:	sar    ebp,0x84
  411e52:	test   BYTE PTR [edx+0x1c],0x1d
  411e56:	cmc    
  411e57:	adc    bh,bh
  411e59:	daa    
  411e5a:	les    edx,FWORD PTR [eax]
  411e5c:	jecxz  0x411e37
  411e5e:	jnp    0x411e8c
  411e60:	push   ebx
  411e61:	pop    ss
  411e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e63:	and    al,0xab
  411e65:	add    BYTE PTR ds:0x36b77a09,0x5c
  411e6c:	xchg   edx,eax
  411e6d:	xlat   BYTE PTR ds:[ebx]
  411e6e:	jl     0x411e2d
  411e70:	popa   
  411e71:	mov    al,ds:0xb1e8c495
  411e76:	ds int 0x6f
  411e79:	repnz in al,dx
  411e7b:	sbb    al,0x2
  411e7d:	xlat   BYTE PTR ds:[ebx]
  411e7e:	int    0xfb
  411e80:	mov    ds:0x204780ce,eax
  411e85:	and    BYTE PTR [edi],0xc5
  411e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e89:	sub    ebx,DWORD PTR [ebx+0xabf6fee]
  411e8f:	mov    bh,0xbb
  411e91:	xchg   BYTE PTR [esi+0x17],al
  411e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e95:	loop   0x411e27
  411e97:	mov    ecx,0x5b81f8b7
  411e9c:	(bad)  
  411e9d:	mov    eax,0xed458186
  411ea2:	sbb    al,0x7e
  411ea4:	bnd ret 
  411ea6:	mov    esp,ecx
  411ea8:	jle    0x411edc
  411eaa:	mov    esp,0xf7b65d6
  411eaf:	dec    esp
  411eb0:	test   DWORD PTR [edi-0x185f0e41],esp
  411eb6:	cdq    
  411eb7:	or     ah,0x5c
  411eba:	cmp    esp,0xffffffc8
  411ebd:	clc    
  411ebe:	aas    
  411ebf:	hlt    
  411ec0:	aaa    
  411ec1:	in     eax,0xb9
  411ec3:	cmp    ebp,DWORD PTR [edx+0x77af4a9d]
  411ec9:	lds    ebp,FWORD PTR [edi+eax*8-0x7d]
  411ecd:	dec    cl
  411ecf:	cmp    al,0x9c
  411ed1:	cmp    dl,ch
  411ed3:	fwait
  411ed4:	sub    al,0x87
  411ed6:	fcom   st(4)
  411ed8:	ret    0x69f3
  411edb:	mov    ah,0x8f
  411edd:	or     BYTE PTR [ebx-0x66],ah
  411ee0:	lods   eax,DWORD PTR ds:[esi]
  411ee1:	js     0x411ee3
  411ee3:	imul   edx,DWORD PTR [ecx-0x5b20a77d],0xffffffe1
  411eea:	push   ebp
  411eeb:	push   edi
  411eec:	mov    edi,0x2bfc9157
  411ef1:	ins    DWORD PTR es:[edi],dx
  411ef2:	in     eax,dx
  411ef3:	adc    eax,0xa3762ff4
  411ef8:	ror    BYTE PTR [esi],1
  411efa:	das    
  411efb:	nop
  411efc:	imul   esp,DWORD PTR [eax],0x21be845d
  411f02:	popa   
  411f03:	test   al,0xb0
  411f05:	out    0xff,eax
  411f07:	xchg   ecx,eax
  411f08:	pop    ds
  411f09:	(bad)  
  411f0a:	in     eax,0x4c
  411f0c:	cmp    DWORD PTR [esi-0x1db85942],0x165d221a
  411f16:	pop    esp
  411f17:	sbb    eax,0xf5144c54
  411f1c:	ds stc 
  411f1e:	push   ss
  411f1f:	in     eax,0x8e
  411f21:	jmp    0x411f27
  411f23:	cmp    eax,0x4d5aa173
  411f28:	imul   edx,esi,0xc8a1c116
  411f2e:	jnp    0x411f19
  411f30:	in     al,0x8b
  411f32:	pop    eax
  411f33:	mov    edi,0x96f70e33
  411f38:	jle    0x411f9f
  411f3a:	sub    bl,ah
  411f3c:	jg     0x411ed4
  411f3e:	push   esi
  411f3f:	shl    DWORD PTR [edi+0x53d1ac9e],0x9c
  411f46:	mov    ?,WORD PTR [ecx+edx*2]
  411f49:	clc    
  411f4a:	(bad)  
  411f4b:	cdq    
  411f4c:	fcom   QWORD PTR [ecx-0x2706d2d3]
  411f52:	jmp    0x7b0de2e5
  411f57:	mov    edx,ebx
  411f59:	push   0x4e
  411f5b:	imul   edi,DWORD PTR [edi+ebx*1+0x70],0x62
  411f60:	(bad)  
  411f61:	lahf   
  411f62:	or     bl,bl
  411f64:	push   ds
  411f65:	enter  0x9712,0xac
  411f69:	and    eax,0xfea03a4a
  411f6e:	xchg   esp,eax
  411f6f:	dec    esp
  411f70:	sbb    DWORD PTR [ebx+0x6c0f9698],ebx
  411f76:	xchg   ecx,eax
  411f77:	push   eax
  411f78:	pushf  
  411f79:	out    0xc5,eax
  411f7b:	pop    es
  411f7c:	call   0x655cccdf
  411f81:	ins    BYTE PTR es:[edi],dx
  411f82:	outs   dx,DWORD PTR ds:[esi]
  411f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f84:	lahf   
  411f85:	inc    ecx
  411f86:	popa   
  411f87:	xchg   DWORD PTR [edi+0x7484d00a],ebp
  411f8d:	sbb    esp,DWORD PTR [ecx]
  411f8f:	mov    ds:0x42b6ec42,eax
  411f94:	fwait
  411f95:	inc    ecx
  411f96:	xchg   edi,eax
  411f97:	out    0x96,eax
  411f99:	sbb    DWORD PTR [edx-0x133e6956],esp
  411f9f:	rcr    al,1
  411fa1:	jne    0x411f78
  411fa3:	push   0xffffff94
  411fa5:	pop    ebx
  411fa6:	cmp    al,0xc8
  411fa8:	ja     0x411f30
  411faa:	sbb    cl,BYTE PTR cs:[edi+0x92e8e92]
  411fb1:	out    dx,al
  411fb2:	popa   
  411fb3:	cli    
  411fb4:	jg     0x411fb1
  411fb6:	dec    esp
  411fb7:	mov    esi,0x8f832fc3
  411fbc:	clc    
  411fbd:	xor    al,0x31
  411fbf:	and    al,0xfe
  411fc1:	pop    esp
  411fc2:	lock push cs
  411fc4:	outs   dx,BYTE PTR ds:[esi]
  411fc5:	or     BYTE PTR [ebp*8-0x43bfc65f],cl
  411fcc:	mov    al,ds:0xe8ca08be
  411fd1:	mov    bl,0x2f
  411fd3:	lahf   
  411fd4:	sti    
  411fd5:	data16 jle 0x411f83
  411fd8:	int    0x62
  411fda:	mov    BYTE PTR [esi],ch
  411fdc:	or     cl,BYTE PTR [edx]
  411fde:	fst    QWORD PTR [edi+0x10]
  411fe1:	mov    DWORD PTR [eax-0x7a43bea3],esp
  411fe7:	jmp    0x411f7e
  411fe9:	cmp    ebp,DWORD PTR [ebx-0x56]
  411fec:	retf   0x257e
  411fef:	ins    BYTE PTR es:[edi],dx
  411ff0:	push   cs
  411ff1:	inc    eax
  411ff2:	rol    BYTE PTR [eax+ecx*2],0x89
  411ff6:	dec    ecx
  411ff7:	fst    DWORD PTR cs:[edi+0x2464c1bf]
  411ffe:	jecxz  0x41201d
  412000:	add    eax,0xfef9f040
  412005:	pop    eax
  412006:	shl    dl,cl
  412008:	adc    DWORD PTR [ebp+0x45c23d31],ebx
  41200e:	add    edx,DWORD PTR ds:[ebx-0x6df8021f]
  412015:	int3   
  412016:	test   DWORD PTR [edx+0x78cc0cf3],edx
  41201c:	jb     0x412092
  41201e:	jmp    0x199b:0xa5baee0b
  412025:	adc    eax,esp
  412027:	jp     0x4120a0
  412029:	inc    esi
  41202a:	xor    al,0x82
  41202c:	loope  0x412093
  41202e:	dec    ecx
  41202f:	stos   DWORD PTR es:[edi],eax
  412030:	es int3 
  412032:	rcl    BYTE PTR [esi],0x26
  412035:	inc    eax
  412036:	inc    esi
  412037:	cmc    
  412038:	cmp    DWORD PTR [edx+0x1afaeefa],ebp
  41203e:	adc    ecx,ebx
  412040:	mov    al,0x81
  412042:	out    0xf6,al
  412044:	jo     0x41206f
  412046:	push   es
  412047:	fs mov ah,ah
  41204a:	clc    
  41204b:	ss jmp 0x79bafb6b
  412051:	into   
  412052:	inc    edx
  412053:	pop    esp
  412054:	les    ecx,FWORD PTR ss:[edi]
  412057:	pop    esi
  412058:	test   BYTE PTR [esp+eiz*8+0xc],dl
  41205c:	fwait
  41205d:	aas    
  41205e:	sbb    DWORD PTR [ecx],0xc02984dc
  412064:	xchg   esi,edx
  412066:	add    BYTE PTR [ebx-0x7af44594],ch
  41206c:	jb     0x412077
  41206e:	rol    ah,cl
  412070:	iret   
  412071:	xor    DWORD PTR [edi],esp
  412073:	sar    DWORD PTR [edx-0x62],1
  412076:	icebp  
  412077:	shr    edi,cl
  412079:	ficom  DWORD PTR [eax+ecx*1+0x17536883]
  412080:	or     dl,BYTE PTR [edx]
  412082:	pop    ds
  412083:	mov    esp,0xefe73d2b
  412088:	mov    al,0xba
  41208a:	pop    ebp
  41208b:	int3   
  41208c:	neg    BYTE PTR [ebx]
  41208e:	sbb    bh,0x99
  412091:	adc    BYTE PTR [eax+0x3728f723],ch
  412097:	push   cs
  412098:	or     BYTE PTR [ebx-0x19],bl
  41209b:	cmc    
  41209c:	nop
  41209d:	loope  0x4120ef
  41209f:	inc    edx
  4120a0:	mov    ecx,0x7062ca9c
  4120a5:	daa    
  4120a6:	loope  0x41210a
  4120a8:	rcr    DWORD PTR [edi-0x6d651d9b],0x18
  4120af:	adc    DWORD PTR [esi+eiz*8-0x24],edi
  4120b3:	sahf   
  4120b4:	jmp    0x4ac62871
  4120b9:	repz iret 
  4120bb:	sar    BYTE PTR [ecx+0x25f0fb9f],0xf9
  4120c2:	mov    ah,0xfc
  4120c4:	lods   al,BYTE PTR ds:[esi]
  4120c5:	stos   BYTE PTR es:[edi],al
  4120c6:	aam    0x11
  4120c8:	mov    dh,0x1c
  4120ca:	lods   eax,DWORD PTR ds:[esi]
  4120cb:	inc    esi
  4120cc:	ret    0xa994
  4120cf:	ret    
  4120d0:	mov    ebp,0x669fee05
  4120d5:	sahf   
  4120d6:	mov    eax,0x60669d99
  4120db:	xor    cl,BYTE PTR [edx+eiz*1-0x1c]
  4120df:	mov    cx,0x2090
  4120e3:	je     0x4120c8
  4120e5:	out    0x24,al
  4120e7:	or     cl,BYTE PTR [edx+0x15]
  4120ea:	jnp    0x4120a1
  4120ec:	mov    edx,0xcc46daeb
  4120f1:	lea    eax,[edx-0x46]
  4120f4:	mov    edi,0xb3a7332b
  4120f9:	dec    edx
  4120fa:	out    0xa6,al
  4120fc:	cwde   
  4120fd:	into   
  4120fe:	add    DWORD PTR [eax+0x6c],ebx
  412101:	iret   
  412102:	push   ds
  412103:	test   BYTE PTR [eax+0x55fdbf82],bl
  412109:	pop    eax
  41210a:	and    eax,0x5a21b890
  41210f:	out    dx,al
  412110:	out    dx,eax
  412111:	nop
  412112:	mov    dl,0xc8
  412114:	fisub  DWORD PTR [ebp-0x7c5f06a6]
  41211a:	ror    ebx,1
  41211c:	jge    0x412166
  41211e:	inc    edx
  41211f:	sbb    DWORD PTR [eax],esp
  412121:	loopne 0x4120fb
  412123:	lahf   
  412124:	sti    
  412125:	xor    DWORD PTR [esi+0x43aeca3],eax
  41212b:	iret   
  41212c:	pop    ecx
  41212d:	aas    
  41212e:	rcr    ebx,cl
  412130:	rol    DWORD PTR [ebx],1
  412132:	push   0x510c017
  412137:	and    DWORD PTR [ecx+0x3d],ecx
  41213a:	jmp    0x30e7:0x3ad1fcd3
  412141:	iret   
  412142:	jle    0x4121ba
  412144:	sahf   
  412145:	xlat   BYTE PTR ds:[ebx]
  412146:	popa   
  412147:	cmp    DWORD PTR [esi],esp
  412149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41214a:	cwd    
  41214c:	inc    ebx
  41214d:	mov    ecx,0xccb9c7af
  412152:	mov    edi,0x16099a50
  412157:	xchg   esp,ebp
  412159:	stc    
  41215a:	xlat   BYTE PTR ds:[ebx]
  41215b:	fidivr DWORD PTR [esi+ebx*8+0x2a5d9f0d]
  412162:	cld    
  412163:	xor    al,0x48
  412165:	cli    
  412166:	sub    ah,BYTE PTR [ebp+0x74]
  412169:	sub    eax,0x9756bdeb
  41216e:	mul    DWORD PTR ss:[esi]
  412171:	jle    0x412193
  412173:	pushf  
  412174:	mov    bh,0x64
  412176:	(bad)  
  412177:	lods   al,BYTE PTR ds:[esi]
  412178:	push   esi
  412179:	mov    ah,0x22
  41217b:	int3   
  41217c:	push   0x412ef7af
  412181:	test   al,0xe6
  412183:	pushf  
  412184:	mov    cl,0xd7
  412186:	jae    0x4121b3
  412188:	sbb    DWORD PTR [ecx-0x3],0xf7fbb26c
  41218f:	(bad)  
  412190:	pop    ebx
  412191:	jmp    0x8cedfb91
  412196:	in     eax,dx
  412197:	xlat   BYTE PTR ss:[ebx]
  412199:	ret    0x85d
  41219c:	mov    ds:0xf0e0769f,eax
  4121a1:	and    al,0xa1
  4121a3:	jg     0x4121b5
  4121a5:	mov    edi,ebp
  4121a7:	call   0xae66:0x90bd0ec1
  4121ae:	pop    edx
  4121af:	cmp    ah,bl
  4121b1:	adc    esp,ecx
  4121b3:	cmp    al,0xa5
  4121b5:	aam    0xd9
  4121b7:	fnstcw WORD PTR [ecx]
  4121b9:	jle    0x41217d
  4121bb:	sub    esi,esi
  4121bd:	les    ebp,FWORD PTR [ebp+0x40]
  4121c0:	jnp    0x41221e
  4121c2:	sbb    DWORD PTR [eax+0x44],ebx
  4121c5:	ret    0x28d0
  4121c8:	jb     0x412164
  4121ca:	cmp    al,0xf9
  4121cc:	mov    ds:0xfdabe337,eax
  4121d1:	and    DWORD PTR [edx+0x6b],esp
  4121d4:	(bad)  
  4121d5:	imul   edx,DWORD PTR [ebx],0xdeeec760
  4121db:	xor    eax,0x5111d536
  4121e0:	xchg   ecx,eax
  4121e1:	inc    eax
  4121e2:	outs   dx,BYTE PTR ds:[esi]
  4121e3:	and    eax,0x798f179b
  4121e8:	push   ebp
  4121e9:	jmp    0x6c46959f
  4121ee:	outs   dx,BYTE PTR ds:[si]
  4121f0:	aaa    
  4121f1:	psubsb mm2,QWORD PTR [esi]
  4121f4:	mov    WORD PTR ds:0xedc521c0,gs
  4121fa:	ret    
  4121fb:	sti    
  4121fc:	sub    al,ch
  4121fe:	lock and DWORD PTR [edi*8+0x42122eb4],edx
  412206:	aam    0x2c
  412208:	out    dx,eax
  412209:	xchg   DWORD PTR [edx-0x56],esp
  41220c:	sub    dh,bh
  41220e:	mov    eax,es
  412210:	xchg   edx,eax
  412211:	mov    BYTE PTR [ebp+0x76],bl
  412214:	sub    DWORD PTR [ebp+ecx*4+0x6d],edx
  412218:	ret    0x64cb
  41221b:	pusha  
  41221c:	dec    eax
  41221d:	pop    ss
  41221e:	dec    esp
  41221f:	gs stos DWORD PTR es:[edi],eax
  412221:	aas    
  412222:	int3   
  412223:	(bad)  
  412225:	cli    
  412226:	dec    ebp
  412227:	imul   esi,DWORD PTR ds:0xa02ff98,0xffffffdd
  41222e:	adc    BYTE PTR [ecx+ebx*8-0xb53362e],bh
  412235:	xchg   ebp,eax
  412236:	pop    es
  412237:	xchg   DWORD PTR [esi],esp
  412239:	xor    eax,0xa33baf3f
  41223e:	sub    al,0xd7
  412240:	push   ebx
  412241:	test   DWORD PTR ds:0x10580acf,esp
  412247:	and    DWORD PTR [edi-0x1b],ebp
  41224a:	sbb    BYTE PTR [esi-0x62799175],dh
  412250:	iret   
  412251:	dec    eax
  412252:	sbb    esp,DWORD PTR [eax]
  412254:	pop    es
  412255:	dec    edx
  412256:	and    dh,bl
  412258:	xchg   DWORD PTR [ecx],ebx
  41225a:	pop    es
  41225b:	(bad)
  41225e:	mov    esi,0x6cc3543c
  412263:	jg     0x4122ae
  412265:	aad    0x31
  412267:	sbb    eax,0x8e4e0b4e
  41226c:	dec    ebp
  41226d:	fild   WORD PTR [edi+0xace4edf]
  412273:	inc    esi
  412274:	xchg   edi,eax
  412275:	js     0x412238
  412277:	xor    eax,0x6a60cfae
  41227c:	lods   al,BYTE PTR ds:[esi]
  41227d:	in     al,0x39
  41227f:	adc    BYTE PTR [edx+eax*8],dh
  412282:	pop    es
  412283:	push   ebx
  412284:	leave  
  412285:	(bad)  
  412286:	daa    
  412287:	dec    ebp
  412288:	push   edi
  412289:	push   ds
  41228a:	push   cs
  41228b:	jmp    0xc830a786
  412290:	enter  0xe536,0x63
  412294:	iret   
  412295:	inc    edi
  412296:	mov    al,ds:0x47ae1d4d
  41229b:	sbb    eax,0x9cfebb4d
  4122a0:	sub    DWORD PTR [ebp+0x4e],ecx
  4122a3:	retf   
  4122a4:	pop    ss
  4122a5:	push   es
  4122a6:	pop    es
  4122a7:	adc    eax,0x9f5cd775
  4122ac:	stos   BYTE PTR es:[edi],al
  4122ad:	sbb    DWORD PTR [eax-0x60],ebx
  4122b0:	mov    bl,0xd9
  4122b2:	scas   eax,DWORD PTR es:[edi]
  4122b3:	xor    ch,BYTE PTR [ebx+0x1]
  4122b6:	or     dl,BYTE PTR [ecx+0x7c3e02b]
  4122bc:	in     eax,dx
  4122bd:	faddp  st(1),st
  4122bf:	scas   eax,DWORD PTR es:[edi]
  4122c0:	fdiv   QWORD PTR [ebx-0x2b]
  4122c3:	inc    esp
  4122c4:	mov    edx,0xd9cf1d28
  4122c9:	add    DWORD PTR [esi],edi
  4122cb:	push   cs
  4122cc:	aaa    
  4122cd:	dec    ebx
  4122ce:	sub    DWORD PTR [edx],esi
  4122d0:	cmc    
  4122d1:	sbb    ebx,DWORD PTR [esi+ebp*4]
  4122d4:	mov    eax,ds:0x2b0319bf
  4122d9:	mov    ah,0xcd
  4122db:	add    edx,ebp
  4122dd:	je     0x412351
  4122df:	dec    esp
  4122e0:	mov    esp,DWORD PTR [esi]
  4122e2:	xor    BYTE PTR [eax-0x3e],cl
  4122e5:	rcl    BYTE PTR [edx],cl
  4122e7:	mov    ds,WORD PTR [esi]
  4122e9:	dec    ecx
  4122ea:	rcr    DWORD PTR [ecx+ecx*8],0x9f
  4122ee:	pop    esp
  4122ef:	adc    DWORD PTR [ecx],ebx
  4122f1:	push   ebp
  4122f2:	jmp    0x54ef:0x16857c35
  4122f9:	mov    dl,BYTE PTR [edx]
  4122fb:	sbb    al,0x1b
  4122fd:	mov    bh,0x29
  4122ff:	mov    bh,0xea
  412301:	mov    ch,0xa7
  412303:	mov    eax,ebx
  412305:	mov    esi,0xf9f06de0
  41230a:	(bad)  
  41230b:	loop   0x412389
  41230d:	sti    
  41230e:	cmp    BYTE PTR [edi+ebp*4],0xd8
  412312:	neg    BYTE PTR [ebp-0x2e]
  412315:	in     eax,0xd
  412317:	jl     0x4122c2
  412319:	jmp    0x1c5427da
  41231e:	cmp    eax,0xebab65ec
  412323:	ja     0x4122c1
  412325:	stc    
  412326:	call   0xa8d4a21f
  41232b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41232c:	scas   al,BYTE PTR es:[edi]
  41232d:	test   BYTE PTR [eax+0x1f],dl
  412330:	(bad)  
  412331:	fldenv [eax+0x62]
  412334:	inc    ebx
  412335:	push   es
  412336:	ds or  al,0x72
  412339:	push   ds
  41233a:	sub    BYTE PTR es:[edi],dl
  41233d:	jmp    0x7970:0x665de086
  412344:	mov    eax,0x1d5a7a16
  412349:	sub    BYTE PTR [esi-0x5b],dl
  41234c:	les    ebp,FWORD PTR [ecx]
  41234e:	xchg   dl,cl
  412350:	pop    edx
  412351:	cli    
  412352:	pop    esi
  412353:	or     eax,0x87e749e6
  412358:	scas   eax,DWORD PTR es:[edi]
  412359:	and    BYTE PTR [eax-0x5c3c56ca],cl
  41235f:	jb     0x412319
  412361:	sar    DWORD PTR [esi],0x2
  412364:	push   ebp
  412365:	(bad)  
  412366:	mov    edi,0xe268a2e2
  41236b:	fscale 
  41236d:	fnstcw WORD PTR [ebx+0x6a6b5729]
  412373:	dec    eax
  412374:	sbb    eax,0xe8c5a2eb
  412379:	fsubr  DWORD PTR [esi-0x6cba38fa]
  41237f:	psrld  mm3,mm0
  412382:	idiv   BYTE PTR [edi+0x40]
  412385:	out    0xf8,eax
  412387:	jle    0x4123e1
  412389:	ror    DWORD PTR [edi+eax*8],0xeb
  41238d:	add    ah,BYTE PTR [ebp+0x64]
  412390:	je     0x4123a3
  412392:	jo     0x4123d6
  412394:	std    
  412395:	sbb    DWORD PTR [ebp+0x24],0xffffff98
  412399:	sar    dh,0xe3
  41239c:	xchg   esi,eax
  41239d:	xchg   ecx,eax
  41239e:	push   esp
  41239f:	inc    edi
  4123a0:	ins    BYTE PTR es:[edi],dx
  4123a1:	push   ss
  4123a2:	pushf  
  4123a3:	add    DWORD PTR [ebx],esp
  4123a5:	mov    al,0xb2
  4123a7:	leave  
  4123a8:	(bad)  
  4123a9:	out    dx,al
  4123aa:	and    ch,bl
  4123ac:	int    0x3c
  4123ae:	mov    al,0xd8
  4123b0:	mov    al,0xc7
  4123b2:	int3   
  4123b3:	lea    ebp,[eax+0x450ceb09]
  4123b9:	pusha  
  4123ba:	jge    0x412390
  4123bc:	mov    ah,0x92
  4123be:	into   
  4123bf:	lds    esi,FWORD PTR [esi+ebx*4]
  4123c2:	dec    edx
  4123c3:	push   0x33
  4123c5:	test   bl,bl
  4123c7:	(bad)  
  4123c8:	out    dx,al
  4123c9:	bound  eax,QWORD PTR [esi-0x6f]
  4123cc:	popf   
  4123cd:	pop    ds
  4123ce:	test   BYTE PTR [ebx+0x64],bh
  4123d1:	mov    eax,ds:0x1016c600
  4123d7:	fdivrp st(5),st
  4123d9:	adc    eax,0x418c1f73
  4123de:	push   eax
  4123df:	push   esp
  4123e0:	ins    BYTE PTR es:[edi],dx
  4123e1:	pop    ebp
  4123e2:	cld    
  4123e3:	fwait
  4123e4:	loopne 0x412424
  4123e6:	loope  0x4123bd
  4123e8:	ja     0x41245e
  4123ea:	xchg   ecx,eax
  4123eb:	cmp    al,0x59
  4123ed:	push   esi
  4123ee:	xchg   edx,eax
  4123ef:	jbe    0x4123b9
  4123f1:	(bad)  [edx+0x28]
  4123f4:	cmp    ah,dl
  4123f6:	sub    al,0x5f
  4123f8:	pop    es
  4123f9:	mov    dh,0xe9
  4123fb:	push   ss
  4123fc:	push   ebp
  4123fd:	mov    esi,0xf0d3c433
  412402:	shl    DWORD PTR [edx+eax*8-0x28d8f19c],cl
  412409:	add    ah,bl
  41240b:	rcr    DWORD PTR [ecx-0xdeffbb3],0x85
  412412:	outs   dx,BYTE PTR es:[esi]
  412414:	inc    ecx
  412415:	xor    al,0x88
  412417:	repnz fstp DWORD PTR [esi-0x63e0cca4]
  41241e:	pop    ds
  41241f:	mov    edx,0x8a7c60d0
  412424:	push   esi
  412425:	sbb    BYTE PTR [edi-0x3c],0x51
  412429:	repz test DWORD PTR [ebp+0x5cca0433],esi
  412430:	lock dec esp
  412432:	pop    esp
  412433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412434:	retf   
  412435:	push   eax
  412436:	test   BYTE PTR [esi+edx*1+0x1bcfd28c],0xa0
  41243e:	popf   
  41243f:	and    ah,BYTE PTR [eax+0x61]
  412442:	sub    eax,0xdaba4a33
  412447:	xlat   BYTE PTR ds:[ebx]
  412448:	lea    edi,[ebx+ebp*1]
  41244b:	and    BYTE PTR fs:[eax-0x63],dh
  41244f:	add    DWORD PTR [edi],edi
  412451:	add    bh,0x2
  412454:	bound  ebp,QWORD PTR [ecx-0x553d003d]
  41245a:	inc    ecx
  41245b:	or     ebx,esi
  41245d:	jb     0x4123fe
  41245f:	dec    edx
  412460:	cmp    DWORD PTR [ebx-0x5a],eax
  412463:	bound  ebp,QWORD PTR [edi+0x6]
  412466:	mov    dh,0x50
  412468:	cmp    ch,BYTE PTR [ebx+0x40]
  41246b:	in     eax,dx
  41246c:	repnz int3 
  41246e:	sbb    eax,DWORD PTR [eax]
  412470:	sub    eax,ebp
  412472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412473:	cmp    dh,0x37
  412476:	addr16 dec ecx
  412478:	mov    bh,0x37
  41247a:	jbe    0x4124ea
  41247c:	sbb    DWORD PTR [esi-0x458d4962],esp
  412482:	sbb    bl,dh
  412484:	sub    bh,dl
  412486:	inc    edi
  412487:	inc    ebx
  412488:	sub    dl,ch
  41248a:	iret   
  41248b:	shl    ecx,0x83
  41248e:	or     DWORD PTR [esi],ebx
  412490:	ret    0xc88f
  412493:	loopne 0x412462
  412495:	dec    esi
  412496:	cmp    eax,0xad3b56a5
  41249b:	cmp    dl,BYTE PTR [edx]
  41249d:	xor    BYTE PTR [esi+0x35de497e],al
  4124a3:	in     al,0x42
  4124a5:	push   edx
  4124a6:	stos   DWORD PTR es:[edi],eax
  4124a7:	xchg   edx,eax
  4124a8:	xchg   ecx,eax
  4124a9:	adc    al,0x40
  4124ab:	pop    ds
  4124ac:	fs push es
  4124ae:	cmp    dl,ch
  4124b0:	imul   edi,DWORD PTR [edi-0x20],0xffffffde
  4124b4:	push   cs
  4124b5:	mov    cl,0xa3
  4124b7:	mov    bh,0x35
  4124b9:	or     BYTE PTR [ebx-0x78],bh
  4124bc:	or     al,0x37
  4124bf:	fwait
  4124c0:	push   ds
  4124c1:	mov    eax,ds:0xcfb9b530
  4124c6:	mov    BYTE PTR [edi-0xe],0xab
  4124ca:	mov    ebx,0x68884685
  4124cf:	rcl    BYTE PTR [ebp+edi*1-0x62edcfe3],cl
  4124d6:	out    0xb7,al
  4124d8:	call   0xe62247ad
  4124dd:	cmc    
  4124de:	pop    edi
  4124df:	icebp  
  4124e0:	sbb    dh,BYTE PTR [esi+0x67]
  4124e3:	xchg   edx,eax
  4124e4:	into   
  4124e5:	inc    eax
  4124e6:	xor    al,0x56
  4124e8:	inc    edx
  4124e9:	pop    ebx
  4124ea:	sar    BYTE PTR [esi-0x2b7d280f],cl
  4124f0:	test   eax,0xe85c6ec6
  4124f5:	into   
  4124f6:	ja     0x4124d3
  4124f8:	shr    bh,0x6c
  4124fb:	xchg   ebx,eax
  4124fc:	mov    BYTE PTR [ebx+edi*2-0x2a432567],bh
  412503:	push   ss
  412504:	jbe    0x412540
  412506:	and    DWORD PTR [ebx],edi
  412508:	adc    eax,0xd8b370a7
  41250d:	push   es
  41250e:	and    eax,0x726d9b7
  412513:	add    eax,DWORD PTR [esi+0xb497554]
  412519:	and    DWORD PTR [edx+eax*1],0xffffff90
  41251d:	stc    
  41251e:	and    eax,0x103833b4
  412523:	ds pop eax
  412525:	and    DWORD PTR gs:[eax],edi
  412528:	shl    BYTE PTR [ecx+0x15],cl
  41252b:	(bad)  
  41252c:	aaa    
  41252d:	frstor [edi-0x34]
  412530:	bound  ebx,QWORD PTR ds:0x44d0d744
  412536:	daa    
  412537:	cmp    al,0x21
  412539:	push   ebx
  41253a:	in     eax,dx
  41253b:	pop    ebp
  41253c:	push   esp
  41253d:	and    esp,DWORD PTR [edx-0x6650f53a]
  412543:	ret    0x10c
  412546:	push   ebp
  412547:	loope  0x412547
  412549:	jae    0x4124e9
  41254b:	sub    DWORD PTR [edi-0x52263542],ebp
  412551:	pop    ss
  412552:	push   ds
  412553:	rcr    ch,0x3a
  412556:	or     eax,0x8afdd3b5
  41255b:	add    edi,esp
  41255d:	fcom   QWORD PTR [ebp-0x11953178]
  412563:	popf   
  412564:	xchg   ebp,eax
  412565:	packsswb mm5,QWORD PTR [edx+0x7c]
  412569:	xchg   esp,eax
  41256a:	daa    
  41256b:	mov    ds:0xa14d7b6,al
  412570:	pop    esi
  412571:	and    esi,ebp
  412573:	mov    ecx,0x1263699d
  412578:	mov    BYTE PTR [esi+ecx*8+0x32a9dfa2],dh
  41257f:	jne    0x412502
  412581:	aad    0x7e
  412583:	cli    
  412584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412585:	es cs xchg esp,eax
  412588:	cli    
  412589:	xor    edi,edx
  41258b:	lods   eax,DWORD PTR ds:[esi]
  41258c:	retf   
  41258d:	and    DWORD PTR ds:0x2e895358,eax
  412593:	cmp    ch,ah
  412595:	add    eax,0x1ba892fb
  41259a:	mov    cl,0xc6
  41259c:	inc    ebp
  41259d:	and    eax,0x86d8e7c5
  4125a2:	loopne 0x412545
  4125a4:	jo     0x41258d
  4125a6:	jb     0x41255e
  4125a8:	fwait
  4125a9:	jno    0x4125bb
  4125ab:	mov    al,0x2b
  4125ad:	or     DWORD PTR [edi-0x4b96c093],esp
  4125b3:	inc    esi
  4125b4:	and    edx,esi
  4125b6:	repz and al,0x16
  4125b9:	xchg   edi,eax
  4125ba:	out    dx,eax
  4125bb:	aaa    
  4125bc:	pop    ebp
  4125bd:	stos   BYTE PTR es:[edi],al
  4125be:	jp     0x41257a
  4125c0:	stos   DWORD PTR es:[edi],eax
  4125c1:	mov    eax,0xb2ed3e28
  4125c6:	and    al,0x32
  4125c8:	inc    eax
  4125c9:	std    
  4125ca:	(bad)
  4125ce:	cdq    
  4125cf:	jns    0x412639
  4125d1:	dec    ebx
  4125d2:	fidivr WORD PTR [esi+0x7e]
  4125d5:	sub    ecx,ecx
  4125d7:	sub    al,0xf7
  4125d9:	jo     0x41264f
  4125db:	iret   
  4125dc:	inc    esi
  4125dd:	push   eax
  4125de:	test   al,0x69
  4125e0:	xchg   DWORD PTR ds:0xdf43dea4,ebx
  4125e6:	lea    esi,[edi+edi*8+0x6b]
  4125ea:	inc    edx
  4125eb:	xor    al,bh
  4125ed:	sub    al,0xe3
  4125ef:	ins    BYTE PTR es:[edi],dx
  4125f0:	sbb    DWORD PTR [edi+0x74],edx
  4125f3:	fidiv  DWORD PTR [ecx]
  4125f5:	dec    esi
  4125f6:	idiv   al
  4125f8:	mov    ecx,0x6769b3c0
  4125fd:	jo     0x4125b5
  4125ff:	fiadd  WORD PTR [edx]
  412601:	or     bh,BYTE PTR [esp+eax*8+0x3b]
  412605:	lods   eax,DWORD PTR ds:[esi]
  412606:	addr16 mov ch,0xd8
  412609:	imul   ebp,DWORD PTR [ebx+eiz*8-0x7f97a642],0x9b07f381
  412614:	mov    al,ds:0xeae1bcbf
  412619:	push   esi
  41261a:	sbb    ch,BYTE PTR [ebp-0x4a]
  41261d:	fstp   QWORD PTR [ecx-0x15]
  412620:	dec    eax
  412621:	push   ss
  412622:	cmp    dh,BYTE PTR [ecx-0x6c2325f]
  412628:	jge    0x4126a0
  41262a:	adc    bh,BYTE PTR [esi-0x44]
  41262d:	ds push 0xffffff90
  412630:	shl    esp,0xb3
  412633:	outs   dx,BYTE PTR ds:[esi]
  412634:	pop    ecx
  412635:	adc    al,0x9e
  412637:	and    al,bl
  412639:	loopne 0x4126a5
  41263b:	mov    ebp,0xfe9d7ac3
  412640:	jg     0x412682
  412642:	cwde   
  412643:	out    dx,al
  412644:	pop    ecx
  412645:	ds jae 0x4125e2
  412648:	fcom   DWORD PTR [edi-0x5fd73e1f]
  41264e:	in     eax,0xc9
  412650:	inc    edx
  412651:	jmp    0x412631
  412653:	scas   eax,DWORD PTR es:[edi]
  412654:	dec    esp
  412655:	mov    eax,ds:0x6383ff71
  41265a:	sbb    eax,0x3f0a488c
  41265f:	js     0x412686
  412661:	push   edx
  412662:	outs   dx,BYTE PTR ds:[esi]
  412663:	inc    edi
  412664:	xchg   ebx,eax
  412665:	and    BYTE PTR [ebp+0x71b3d24a],al
  41266b:	inc    esp
  41266c:	enter  0x3c73,0xbe
  412670:	inc    BYTE PTR [ecx-0xf]
  412673:	cmp    dh,0xd8
  412676:	pop    ss
  412677:	in     al,0x46
  412679:	leave  
  41267a:	and    al,0x76
  41267c:	add    BYTE PTR ds:0xbd144fef,bh
  412682:	push   edx
  412683:	cmp    ah,bl
  412685:	int    0xf6
  412687:	add    dh,BYTE PTR [esi-0x751dbbda]
  41268d:	rcl    BYTE PTR [edx],1
  41268f:	pusha  
  412690:	mov    edx,0x44736ea0
  412695:	fst    DWORD PTR [ebx+0x2]
  412698:	xchg   esi,eax
  412699:	push   edx
  41269a:	ret    
  41269b:	mov    ebx,0x6fce5593
  4126a0:	popf   
  4126a1:	nop
  4126a2:	jns    0x412675
  4126a4:	les    edx,FWORD PTR [eax+ebp*2]
  4126a7:	dec    edx
  4126a8:	push   esi
  4126a9:	loop   0x4126aa
  4126ab:	nop
  4126ac:	cli    
  4126ad:	sub    cl,bl
  4126af:	inc    esi
  4126b0:	jecxz  0x412658
  4126b2:	pushf  
  4126b3:	xchg   ebx,eax
  4126b4:	pop    ss
  4126b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b6:	add    al,0xc7
  4126b8:	aas    
  4126b9:	xchg   BYTE PTR [ecx+0x25cee599],bh
  4126bf:	lods   eax,DWORD PTR ds:[esi]
  4126c0:	pop    edi
  4126c1:	or     eax,0xdc35c2e8
  4126c6:	test   BYTE PTR [esi-0x173455d5],0x72
  4126cd:	xchg   ebp,eax
  4126ce:	mov    eax,0xf913b044
  4126d3:	ret    
  4126d4:	xor    esi,DWORD PTR [eax+0x7a1234fb]
  4126da:	dec    ebp
  4126db:	xchg   esi,eax
  4126dc:	xor    bh,BYTE PTR [ebx+0x414e774e]
  4126e2:	in     eax,dx
  4126e3:	xchg   DWORD PTR [eax+edi*4-0x77],ebp
  4126e7:	xchg   ecx,eax
  4126e8:	sbb    eax,ecx
  4126ea:	call   0x6d133566
  4126ef:	scas   al,BYTE PTR es:[edi]
  4126f0:	nop
  4126f1:	stos   DWORD PTR es:[edi],eax
  4126f2:	ins    DWORD PTR es:[edi],dx
  4126f3:	ret    
  4126f4:	sbb    cl,BYTE PTR [edx-0x3ef667bc]
  4126fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126fb:	inc    edi
  4126fc:	bound  ebp,QWORD PTR [edi]
  4126fe:	pusha  
  4126ff:	out    0x6f,eax
  412701:	icebp  
  412702:	lds    ebp,FWORD PTR [ecx]
  412704:	mov    WORD PTR [ecx],?
  412706:	adc    al,0x5
  412708:	push   edx
  412709:	(bad)
  41270c:	xchg   DWORD PTR [edx-0x53cb0968],esi
  412712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412713:	fadd   QWORD PTR [ecx]
  412715:	or     DWORD PTR [bx+si],0xffffffbb
  412719:	push   edx
  41271a:	sti    
  41271b:	in     eax,0x94
  41271d:	jmp    0x9135f798
  412722:	xchg   BYTE PTR [esi+0x66],al
  412725:	out    dx,al
  412726:	inc    eax
  412727:	fadd   DWORD PTR [ebp-0x78285220]
  41272d:	mov    dh,0x94
  41272f:	sbb    BYTE PTR [edi+ebx*1-0x55839a92],dh
  412736:	ss daa 
  412738:	mov    bh,0x55
  41273a:	test   DWORD PTR [eax+0x7c],esi
  41273d:	inc    eax
  41273e:	mov    bl,0x99
  412740:	mov    ds:0xd82e0453,al
  412745:	ret    0xbdf
  412748:	dec    ecx
  412749:	mov    ebx,DWORD PTR [edx]
  41274b:	addr16 pop ss
  41274d:	les    eax,FWORD PTR [eax+0x52]
  412750:	or     ah,0x66
  412753:	sar    DWORD PTR [esi],1
  412755:	adc    esp,esi
  412757:	clc    
  412758:	in     al,0x7
  41275a:	in     al,dx
  41275b:	dec    ebx
  41275c:	and    DWORD PTR [esi-0x47900c22],esi
  412762:	mov    al,ds:0xb0ce8f4e
  412767:	push   0x5c
  412769:	mov    edi,0xcf027a66
  41276e:	sbb    al,cl
  412770:	int3   
  412771:	push   edx
  412772:	push   esp
  412773:	xchg   esp,eax
  412774:	sub    ch,dl
  412776:	clc    
  412777:	dec    esi
  412778:	lods   al,BYTE PTR ds:[esi]
  412779:	jmp    esi
  41277b:	lahf   
  41277c:	scas   eax,DWORD PTR es:[edi]
  41277d:	dec    edx
  41277e:	js     0x4127fa
  412780:	mov    WORD PTR [esp+eax*8],?
  412783:	or     DWORD PTR [ecx-0x17537872],edi
  412789:	test   eax,0x3acccb15
  41278e:	ret    
  41278f:	mov    dh,0xb7
  412791:	dec    esp
  412792:	mov    al,ds:0x628afb82
  412797:	ret    
  412798:	into   
  412799:	popa   
  41279a:	loopne 0x4127a4
  41279c:	imul   DWORD PTR [esi+0x689c0eed]
  4127a2:	jne    0x4127ff
  4127a4:	xchg   esp,eax
  4127a5:	dec    esi
  4127a6:	ret    
  4127a7:	inc    edx
  4127a8:	test   DWORD PTR [eax-0x52c5c4fe],eax
  4127ae:	mov    ?,esp
  4127b0:	cs inc edi
  4127b2:	or     edx,DWORD PTR [ebx+0x350ad687]
  4127b8:	and    eax,DWORD PTR [eax]
  4127ba:	xor    ecx,DWORD PTR [esi+0x1f]
  4127bd:	iret   
  4127be:	dec    esi
  4127bf:	adc    eax,0xa79344c3
  4127c4:	inc    ebx
  4127c5:	mov    al,ds:0xd9abea1e
  4127ca:	sbb    esp,DWORD PTR [ecx]
  4127cc:	dec    edi
  4127cd:	loope  0x41278b
  4127cf:	jp     0x412847
  4127d1:	jae    0x4127fb
  4127d3:	vcvtss2sd xmm1,xmm5,DWORD PTR [ecx+0x3528d548]
  4127db:	adc    ch,bl
  4127dd:	adc    dh,BYTE PTR [eax]
  4127df:	mov    ds:0x62a20a9a,eax
  4127e4:	jmp    0x419ecc6
  4127e9:	mov    dh,0x76
  4127eb:	dec    esi
  4127ec:	cmp    edi,DWORD PTR [edx-0x80]
  4127ef:	mov    cl,0xe6
  4127f1:	pop    edi
  4127f2:	les    edx,FWORD PTR [si]
  4127f5:	mov    esi,0xee31e68c
  4127fa:	fdivr  st(0),st
  4127fc:	aad    0x9c
  4127fe:	pop    ebp
  4127ff:	pop    ecx
  412800:	lahf   
  412801:	mov    ecx,0xb6ef6d9a
  412806:	cld    
  412807:	xchg   edx,eax
  412808:	out    dx,eax
  412809:	test   BYTE PTR [eax+edi*1],dl
  41280c:	or     eax,0xb678cb4e
  412811:	inc    edx
  412812:	add    DWORD PTR [esi],0x915ab36d
  412818:	sub    DWORD PTR [eax],esi
  41281a:	cmc    
  41281b:	and    eax,0xf26c2a23
  412820:	in     eax,dx
  412821:	daa    
  412822:	mov    esp,0x21f6787
  412827:	dec    ecx
  412828:	cmp    edi,DWORD PTR [eax]
  41282a:	and    BYTE PTR [ebx+0x7fa42121],bl
  412830:	xchg   esi,eax
  412831:	dec    eax
  412832:	fs push sp
  412835:	pop    DWORD PTR [ecx+0x56180122]
  41283b:	fsubr  QWORD PTR [edi+ecx*1-0x5f]
  41283f:	cmp    BYTE PTR [eax],dl
  412841:	fimul  DWORD PTR [ecx]
  412843:	outs   dx,DWORD PTR ds:[esi]
  412844:	out    dx,eax
  412845:	stos   BYTE PTR es:[edi],al
  412846:	xchg   ebp,eax
  412847:	out    dx,eax
  412848:	shl    ah,cl
  41284a:	inc    ebp
  41284b:	dec    ecx
  41284c:	pusha  
  41284d:	sub    eax,0x2d185863
  412852:	or     ecx,esp
  412854:	xchg   edi,eax
  412855:	or     al,0xc
  412857:	in     eax,dx
  412858:	and    BYTE PTR [edx+ebx*2-0x5f876e50],ch
  41285f:	arpl   sp,sp
  412861:	test   eax,0xcd6212e0
  412866:	scas   al,BYTE PTR es:[edi]
  412867:	sar    DWORD PTR [edi-0x7910a9e4],cl
  41286d:	jnp    0x41284e
  41286f:	mov    ebx,0x420c59ac
  412874:	mov    esp,0xbaca505c
  412879:	or     eax,0xfceb3d59
  41287e:	(bad)  
  412880:	sub    al,0xb3
  412882:	push   DWORD PTR [ecx+edi*4]
  412885:	stc    
  412886:	jmp    0xdca2:0xa01b3c10
  41288d:	cmp    eax,0x1a5bb476
  412892:	jle    0x412819
  412894:	dec    esi
  412895:	test   esi,eax
  412897:	ret    
  412898:	ror    BYTE PTR [esi],cl
  41289a:	cmp    DWORD PTR ds:0x69f6c2ea,eax
  4128a0:	inc    edx
  4128a1:	ror    BYTE PTR ds:0xf2053b3f,cl
  4128a7:	fdivr  DWORD PTR [eax-0x6288fe30]
  4128ad:	fadd   QWORD PTR [edx]
  4128af:	and    edi,edx
  4128b1:	xchg   ebp,eax
  4128b2:	pop    ecx
  4128b3:	imul   edi,DWORD PTR [eax+ecx*1],0x61
  4128b7:	add    DWORD PTR [ebx],ebp
  4128b9:	push   ss
  4128ba:	cmc    
  4128bb:	(bad)  
  4128bc:	mov    esp,0xd3604491
  4128c1:	cwde   
  4128c2:	and    eax,0x2d20a9e0
  4128c7:	stos   BYTE PTR es:[edi],al
  4128c8:	dec    edx
  4128c9:	sub    BYTE PTR [ecx+0x4f],cl
  4128cc:	mov    ecx,0x4b1b1d6c
  4128d1:	or     BYTE PTR [ecx+0x66ba4a8a],dh
  4128d7:	jns    0x412878
  4128d9:	in     eax,0x57
  4128db:	mov    ebx,0x4da7dfcd
  4128e0:	mov    WORD PTR [ebx],ss
  4128e2:	adc    al,0x1c
  4128e4:	idiv   al
  4128e6:	in     al,0x40
  4128e8:	adc    BYTE PTR [eax],al
  4128ea:	or     ebx,esp
  4128ec:	inc    esp
  4128ed:	push   esi
  4128ee:	mov    DWORD PTR [ecx+0x1a],ecx
  4128f1:	(bad)  
  4128f2:	push   ebx
  4128f3:	std    
  4128f4:	add    DWORD PTR [ecx+0x14d4306f],edi
  4128fa:	cld    
  4128fb:	out    dx,eax
  4128fc:	push   0xe1e80443
  412901:	enter  0x632a,0x6a
  412905:	imul   edx,DWORD PTR ds:0x3ca6e303,0x8d0e9f1e
  41290f:	and    BYTE PTR [esi-0x13a2d693],ah
  412915:	lds    esi,FWORD PTR ds:0x7385949a
  41291b:	js     0x4128de
  41291d:	pop    ebp
  41291e:	jae    0x412987
  412920:	xchg   DWORD PTR [ebx],ecx
  412922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412923:	sar    edx,cl
  412925:	sbb    ebp,DWORD PTR [edi]
  412927:	or     bh,ah
  412929:	leave  
  41292a:	adc    eax,0xc8c94e5e
  41292f:	jne    0x412960
  412931:	push   esp
  412932:	sti    
  412933:	xchg   ebx,eax
  412934:	and    ebp,DWORD PTR [ebx+0x429f7b12]
  41293a:	ret    0x4c03
  41293d:	sbb    BYTE PTR [edx],bl
  41293f:	sbb    BYTE PTR [eax],bl
  412941:	pop    ds
  412942:	mov    ds:0xc3299e41,al
  412947:	iret   
  412948:	gs pop ss
  41294a:	retf   
  41294b:	mov    bl,0xc3
  41294d:	lea    edi,[ebp+0x2e49ec79]
  412953:	in     al,dx
  412954:	lds    esp,FWORD PTR [eax+ebx*2]
  412957:	retf   0x2e6b
  41295a:	data16 int 0xf
  41295d:	gs mov esi,0x973bd834
  412963:	fwait
  412964:	test   eax,0x1317c68f
  412969:	ds int 0x4b
  41296c:	xchg   ecx,eax
  41296d:	test   eax,0xa5a4ae8c
  412972:	add    ebp,DWORD PTR ds:0xaec53634
  412978:	pop    edx
  412979:	push   ds
  41297a:	imul   esp,esp,0x74
  41297d:	jl     0x412930
  41297f:	stos   DWORD PTR es:[edi],eax
  412980:	and    bl,dh
  412982:	imul   esp,edi,0xe37cf00f
  412988:	js     0x412956
  41298a:	jae    0x4129be
  41298c:	jnp    0x4129a2
  41298e:	scas   eax,DWORD PTR es:[edi]
  41298f:	push   esp
  412990:	(bad)  
  412991:	mov    ds:0xe967f29f,eax
  412996:	mov    esp,0x3b8ab1dc
  41299b:	std    
  41299c:	loop   0x41297a
  41299e:	xchg   edi,eax
  41299f:	scas   al,BYTE PTR es:[edi]
  4129a0:	mov    edi,0xc91a46
  4129a5:	outs   dx,BYTE PTR ds:[esi]
  4129a6:	dec    esp
  4129a7:	sbb    al,0xfa
  4129a9:	aaa    
  4129aa:	popf   
  4129ab:	das    
  4129ac:	pusha  
  4129ad:	sbb    eax,DWORD PTR [eax]
  4129af:	push   edx
  4129b0:	aaa    
  4129b1:	jp     0x41297a
  4129b3:	cmp    DWORD PTR [ecx-0x4d714741],esp
  4129b9:	fwait
  4129ba:	jge    0x4129a8
  4129bc:	mov    cl,0xac
  4129be:	sbb    dl,BYTE PTR [edi+edx*1]
  4129c1:	pop    ecx
  4129c2:	and    bl,BYTE PTR [edx-0x3fec77b9]
  4129c8:	sbb    cl,BYTE PTR [ebx]
  4129ca:	push   ebx
  4129cb:	jmp    0xe648682d
  4129d0:	cmp    BYTE PTR [edx+0x2df53e17],ah
  4129d6:	test   al,0xff
  4129d8:	and    edx,ebp
  4129da:	inc    esp
  4129db:	jl     0x4129b5
  4129dd:	pop    ss
  4129de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129df:	scas   al,BYTE PTR es:[edi]
  4129e0:	or     al,0x3a
  4129e2:	or     dh,BYTE PTR [eax+0x5b]
  4129e5:	stc    
  4129e6:	imul   DWORD PTR [edx]
  4129e8:	pusha  
  4129e9:	push   ebp
  4129ea:	pop    edx
  4129eb:	loope  0x412a42
  4129ed:	jmp    0xd913b913
  4129f2:	nop
  4129f3:	push   ebx
  4129f4:	or     BYTE PTR [ebx],0x5b
  4129f7:	mov    ecx,ebx
  4129f9:	lds    esi,FWORD PTR [ebp+0x0]
  4129fc:	fs (bad) 
  4129fe:	je     0x412987
  412a00:	shr    edi,1
  412a02:	or     ecx,DWORD PTR [eax-0x22]
  412a05:	mov    ch,0xf
  412a07:	hlt    
  412a08:	imul   DWORD PTR [eax-0x7d3d4010]
  412a0e:	dec    esp
  412a0f:	out    dx,eax
  412a10:	aam    0xe7
  412a12:	inc    DWORD PTR [esi-0x26ee2e54]
  412a18:	adc    al,0xb1
  412a1a:	xchg   ecx,eax
  412a1b:	inc    esi
  412a1c:	mov    edx,0x540b7579
  412a21:	sahf   
  412a22:	push   esp
  412a23:	arpl   WORD PTR [ebx-0x44],bx
  412a26:	mov    cl,0xd6
  412a28:	mov    WORD PTR [ebx-0x340b4db6],cs
  412a2e:	sub    al,0x8
  412a30:	xchg   DWORD PTR [ecx-0x5d],ebx
  412a33:	push   edi
  412a34:	shr    BYTE PTR [edi+edi*2-0x56],0xae
  412a39:	push   esp
  412a3a:	test   al,0xfc
  412a3c:	es dec ebx
  412a3e:	shl    DWORD PTR [edi+0x233643b9],0x1d
  412a45:	pop    edi
  412a46:	les    esi,FWORD PTR [ebx-0x42]
  412a49:	arpl   WORD PTR [ebx-0x75],di
  412a4c:	dec    edx
  412a4d:	adc    BYTE PTR [ecx+0x2132c749],0x92
  412a54:	push   es
  412a55:	or     BYTE PTR [ebx],ch
  412a57:	jl     0x412a8d
  412a59:	into   
  412a5a:	je     0x4129ea
  412a5c:	sub    eax,0x363cbb47
  412a61:	or     dl,ch
  412a63:	dec    ebx
  412a64:	jnp    0x412a90
  412a66:	jp     0x412ab7
  412a68:	dec    esp
  412a69:	sti    
  412a6a:	int    0xd8
  412a6c:	and    eax,0x2f254a87
  412a71:	mov    esi,esp
  412a73:	xchg   ebp,eax
  412a74:	pop    es
  412a75:	xchg   ecx,eax
  412a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a77:	mov    ah,0x2e
  412a79:	(bad)  
  412a7a:	out    0x26,eax
  412a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a7d:	dec    esi
  412a7e:	jg     0x412ade
  412a80:	add    eax,0xc2050b92
  412a85:	(bad)  
  412a86:	sub    eax,0x7c295d13
  412a8c:	pop    edx
  412a8d:	cmp    eax,0x7b139d20
  412a92:	leave  
  412a93:	mov    ds:0xa8107447,al
  412a98:	in     al,0xcc
  412a9a:	dec    ecx
  412a9b:	jle    0x412a6d
  412a9d:	rcl    DWORD PTR [esi+0x77],cl
  412aa0:	stos   DWORD PTR es:[edi],eax
  412aa1:	ds aas 
  412aa3:	dec    ebx
  412aa4:	mov    esp,esp
  412aa6:	stos   BYTE PTR es:[edi],al
  412aa7:	out    dx,al
  412aa8:	sbb    esp,DWORD PTR [ebp+0x35]
  412aab:	xchg   esp,eax
  412aac:	aaa    
  412aad:	ret    
  412aae:	sub    DWORD PTR [ebp+0x28170a5],0xffffffe8
  412ab5:	repz pushf 
  412ab7:	into   
  412ab8:	jmp    0x412a88
  412aba:	lea    ebp,[ebp+edx*1-0x7f]
  412abe:	sbb    DWORD PTR [ebp-0x617935df],ecx
  412ac4:	mov    DWORD PTR [ebp+0x15],ebx
  412ac7:	cs push ecx
  412ac9:	test   dh,ch
  412acb:	xchg   edx,eax
  412acc:	test   al,0x90
  412ace:	sbb    ecx,eax
  412ad0:	mov    BYTE PTR [ebx+0x15dbeb4f],0x3d
  412ad7:	fiadd  DWORD PTR [edi+eiz*8-0x35]
  412adb:	sub    eax,0xb517f5f2
  412ae0:	es sbb BYTE PTR es:[ecx-0xa],dh
  412ae5:	fcmovb st,st(2)
  412ae7:	jecxz  0x412aa9
  412ae9:	mov    dh,0xa0
  412aeb:	lds    ebp,FWORD PTR [bp+si]
  412aee:	out    0x19,eax
  412af0:	lods   eax,DWORD PTR ds:[esi]
  412af1:	(bad)  
  412af2:	sti    
  412af3:	mov    DWORD PTR [ecx+esi*2-0x5d],eax
  412af7:	inc    esp
  412af8:	inc    edx
  412af9:	fidivr WORD PTR [edx]
  412afb:	mov    dh,0x28
  412afd:	popa   
  412afe:	mov    edx,0x77d4a7cd
  412b03:	adc    al,cl
  412b05:	push   0x55a3697d
  412b0a:	pop    ds
  412b0b:	mov    dl,0x24
  412b0d:	fild   QWORD PTR [ebx-0x2ee19380]
  412b13:	or     BYTE PTR [eax-0x45],ch
  412b16:	push   0x57809f5f
  412b1b:	out    dx,eax
  412b1c:	pusha  
  412b1d:	jg     0x412aaa
  412b1f:	dec    esp
  412b20:	mov    edx,0x69574b1a
  412b25:	ins    DWORD PTR es:[edi],dx
  412b26:	xchg   edi,eax
  412b27:	jecxz  0x412b7d
  412b29:	xor    al,0x67
  412b2b:	fs arpl dx,dx
  412b2e:	sbb    eax,esp
  412b30:	lds    edi,FWORD PTR [edx-0x65618028]
  412b36:	retf   
  412b37:	call   0xcfc2:0x42df065e
  412b3e:	jae    0x412b7d
  412b40:	and    ebp,0x6803c958
  412b46:	out    0xb8,eax
  412b48:	xchg   edi,eax
  412b49:	and    bl,BYTE PTR [edi]
  412b4b:	push   ebp
  412b4c:	ret    0x1e03
  412b4f:	dec    esp
  412b50:	(bad)  
  412b51:	cmc    
  412b52:	push   ds
  412b53:	lahf   
  412b54:	into   
  412b55:	test   BYTE PTR [ebp+0x36],dl
  412b58:	sub    al,0xc6
  412b5a:	lock adc dh,BYTE PTR [edx-0x37fcd190]
  412b61:	int3   
  412b62:	sbb    eax,0xbf08862f
  412b67:	inc    edx
  412b68:	(bad)  
  412b69:	es aam 0x2c
  412b6c:	mov    ecx,0x8ff29b82
  412b71:	js     0x412b62
  412b73:	jo     0x412b8e
  412b75:	pop    ecx
  412b76:	repnz sbb bl,cl
  412b79:	mov    WORD PTR [esi-0x9],ss
  412b7c:	mov    ah,0x80
  412b7e:	inc    ebx
  412b7f:	cmc    
  412b80:	ins    DWORD PTR es:[edi],dx
  412b81:	aam    0x15
  412b83:	cmp    eax,0xfcd2623c
  412b88:	jmp    0x9d21:0x7d6e96bf
  412b8f:	mov    ds:0xe539c220,eax
  412b94:	dec    eax
  412b95:	loope  0x412c11
  412b97:	mov    ds:0x5ee87f6a,al
  412b9c:	das    
  412b9d:	sar    DWORD PTR [edx-0x3d],1
  412ba0:	pop    ebp
  412ba1:	inc    edx
  412ba2:	sub    al,0xc7
  412ba4:	xchg   DWORD PTR [eax],eax
  412ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba7:	mov    DWORD PTR [edi+0x599a8530],ecx
  412bad:	xchg   ebp,eax
  412bae:	push   esp
  412baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb0:	push   edi
  412bb1:	in     eax,0x2a
  412bb3:	mov    al,0x72
  412bb6:	push   ds
  412bb7:	jne    0x412b45
  412bb9:	mov    ah,0x8f
  412bbb:	pop    es
  412bbc:	cmc    
  412bbd:	push   eax
  412bbe:	jns    0x412be7
  412bc0:	xchg   esi,eax
  412bc1:	jecxz  0x412b48
  412bc3:	fistp  WORD PTR [esp+eax*8+0x25477122]
  412bca:	mov    ds:0xa6418ade,eax
  412bcf:	fistp  WORD PTR [eax]
  412bd1:	push   ss
  412bd2:	lds    ebp,FWORD PTR [eax+0x39221b0e]
  412bd8:	pop    edi
  412bd9:	push   eax
  412bda:	lds    edi,FWORD PTR [eax+0x4a]
  412bdd:	mov    ah,BYTE PTR [ecx+0x44]
  412be0:	idiv   BYTE PTR [esi]
  412be2:	jmp    0x4435:0x653b538f
  412be9:	popf   
  412bea:	jmp    0xb0a3:0xc770dda0
  412bf1:	call   0xe1c5dfe
  412bf6:	jo     0x412b85
  412bf8:	adc    eax,0x8eb30e85
  412bfd:	and    ch,BYTE PTR [esi-0x8]
  412c00:	(bad)  
  412c02:	in     al,dx
  412c03:	mov    ah,0x85
  412c05:	xchg   edi,eax
  412c06:	frstor [ecx]
  412c08:	repnz outs dx,BYTE PTR ds:[esi]
  412c0a:	cld    
  412c0b:	xor    DWORD PTR [ebx],edi
  412c0d:	mov    ds:0x33cb56b4,eax
  412c12:	nop
  412c13:	ins    DWORD PTR es:[edi],dx
  412c14:	stos   BYTE PTR es:[edi],al
  412c15:	xchg   BYTE PTR [edx+0x2],ah
  412c18:	ficomp DWORD PTR [edx]
  412c1a:	ja     0x412beb
  412c1c:	jl     0x412c39
  412c1e:	cmp    ah,BYTE PTR [ebx]
  412c20:	adc    BYTE PTR [ebx+0x21],ch
  412c23:	lahf   
  412c24:	bnd jge 0x412c7c
  412c27:	add    DWORD PTR [ebx+edi*4],eax
  412c2a:	add    DWORD PTR [esi-0xc],esp
  412c2d:	inc    ecx
  412c2e:	mov    gs,ebp
  412c30:	xchg   esp,eax
  412c31:	stos   DWORD PTR es:[edi],eax
  412c32:	xor    al,0x5b
  412c34:	imul   ecx,DWORD PTR [edx+0x11],0xffffffa4
  412c38:	push   ss
  412c39:	scas   eax,DWORD PTR es:[edi]
  412c3a:	loope  0x412c25
  412c3c:	cwde   
  412c3d:	sub    BYTE PTR [ebx-0x468bafc6],0x22
  412c44:	dec    ebx
  412c45:	inc    esp
  412c46:	clc    
  412c47:	inc    esp
  412c48:	mov    ebx,DWORD PTR [edi]
  412c4a:	out    dx,eax
  412c4b:	in     al,0x8d
  412c4d:	mov    edi,0x918d1613
  412c52:	mov    bh,0x46
  412c54:	cmovbe esi,DWORD PTR [edi-0x29ec4d0f]
  412c5b:	je     0x412c73
  412c5d:	sbb    esp,DWORD PTR [eax+0x4c2aa4e1]
  412c63:	rcl    BYTE PTR [ebx],1
  412c65:	mov    ebx,0x6415b0cc
  412c6a:	adc    BYTE PTR [ebx],dl
  412c6c:	add    al,0x66
  412c6e:	dec    edi
  412c6f:	scas   al,BYTE PTR es:[edi]
  412c70:	lock or ch,dh
  412c73:	or     BYTE PTR [ebp-0x76de1da5],al
  412c79:	ja     0x412c6f
  412c7b:	ret    
  412c7c:	xchg   ecx,eax
  412c7d:	inc    edx
  412c7e:	out    0xc2,eax
  412c80:	or     ch,BYTE PTR [edi]
  412c82:	repnz and BYTE PTR [esi+0x37],0xb6
  412c87:	push   ss
  412c88:	ins    DWORD PTR es:[edi],dx
  412c89:	jle    0x412c1c
  412c8b:	clc    
  412c8c:	int    0x23
  412c8e:	xchg   esp,eax
  412c8f:	or     al,0x99
  412c91:	imul   edi,DWORD PTR [ebp+0x64],0x1d
  412c95:	jae    0x412c57
  412c97:	pop    esi
  412c98:	es xchg ebp,eax
  412c9a:	cld    
  412c9b:	in     al,dx
  412c9c:	pop    esp
  412c9d:	out    0xd3,eax
  412c9f:	fwait
  412ca0:	test   bl,bl
  412ca2:	and    BYTE PTR [eax],dh
  412ca4:	inc    esp
  412ca5:	leave  
  412ca6:	rcl    DWORD PTR [edi-0x6d],0x19
  412caa:	sbb    DWORD PTR [edx-0x5],edx
  412cad:	ins    DWORD PTR es:[edi],dx
  412cae:	lds    esp,FWORD PTR [edx-0x70]
  412cb1:	jbe    0x412c45
  412cb3:	add    eax,0xe729efe
  412cb8:	jge    0x412cf0
  412cba:	mov    ecx,0x1bc71973
  412cbf:	mov    bh,0x74
  412cc1:	mov    dh,0x88
  412cc3:	imul   esi,DWORD PTR [ebx+eax*2+0x3f],0x74
  412cc8:	sbb    bl,BYTE PTR [ebx-0x7445ef63]
  412cce:	test   eax,0x7b4c5e13
  412cd3:	push   ecx
  412cd4:	fst    DWORD PTR [edi-0x3a]
  412cd7:	dec    ebx
  412cd8:	leave  
  412cd9:	mov    esi,ebx
  412cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdc:	outs   dx,BYTE PTR ds:[esi]
  412cdd:	rcr    BYTE PTR [edi-0x65],cl
  412ce0:	jae    0x412c6c
  412ce2:	push   ds
  412ce3:	or     dh,cl
  412ce5:	jmp    0x88ca:0x60b52f72
  412cec:	aaa    
  412ced:	adc    eax,0xc5219f8d
  412cf2:	dec    edx
  412cf3:	adc    al,0xb1
  412cf5:	jns    0x412c79
  412cf7:	cmp    al,0xa
  412cf9:	aam    0xf1
  412cfb:	ds jnp 0x412d10
  412cfe:	mov    dl,0x8a
  412d00:	and    BYTE PTR [ebx-0x985de99],al
  412d06:	push   ebp
  412d07:	and    esp,edx
  412d09:	dec    ebp
  412d0a:	sub    al,BYTE PTR [ecx-0x59]
  412d0d:	dec    edi
  412d0e:	dec    ebx
  412d0f:	and    DWORD PTR [ebp-0x51],esi
  412d12:	adc    ecx,esp
  412d14:	mov    edx,esi
  412d16:	je     0x412cee
  412d18:	fst    DWORD PTR [edx+0x13]
  412d1b:	mul    bh
  412d1d:	js     0x412cb3
  412d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d20:	mov    ecx,0x2ce82fe5
  412d25:	pop    esi
  412d27:	imul   eax
  412d29:	adc    DWORD PTR [edi+0x300d2390],esp
  412d2f:	and    DWORD PTR [esi-0x33],ebp
  412d32:	jp     0x412ce0
  412d34:	aas    
  412d35:	adc    eax,0xd9088591
  412d3a:	aaa    
  412d3b:	xchg   edx,eax
  412d3c:	mov    edi,0xb18b069a
  412d41:	push   esi
  412d42:	inc    edi
  412d43:	popf   
  412d44:	pop    edx
  412d45:	xchg   esp,eax
  412d46:	xchg   esi,eax
  412d47:	jbe    0x412d0f
  412d49:	fcomp  QWORD PTR [edx-0x1f]
  412d4c:	add    ah,BYTE PTR [ebp-0x45348416]
  412d52:	loope  0x412dcb
  412d54:	xchg   ebp,eax
  412d55:	adc    ebx,edi
  412d57:	mov    al,0x11
  412d59:	push   ebx
  412d5a:	lds    edi,FWORD PTR [ecx-0x45c8a062]
  412d60:	into   
  412d61:	in     eax,dx
  412d62:	es aas 
  412d64:	inc    di
  412d66:	inc    edi
  412d67:	sub    BYTE PTR [ebp*2-0x11ce145a],0x94
  412d6f:	mov    esp,0xa8f2ed47
  412d74:	gs jno 0x412d2a
  412d77:	xor    eax,DWORD PTR [ebp+edx*4-0x6a827d89]
  412d7e:	mov    DWORD PTR ss:[eax+0x24],esi
  412d82:	psraw  mm5,mm1
  412d85:	dec    ecx
  412d86:	sbb    BYTE PTR [ecx],ah
  412d88:	cmovae ecx,DWORD PTR [edx]
  412d8b:	sar    WORD PTR [edx],1
  412d8e:	pop    edx
  412d8f:	or     esi,edi
  412d91:	push   0xffffff98
  412d93:	aad    0x4e
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	in     eax,0xe2
  412d98:	ret    
  412d99:	dec    ebx
  412d9a:	sbb    al,0xb4
  412d9c:	mov    bl,BYTE PTR ds:0x8cd7a395
  412da2:	scas   al,BYTE PTR es:[edi]
  412da3:	and    al,0x89
  412da5:	shr    DWORD PTR [esi-0x2d56cd8a],0x56
  412dac:	lds    eax,FWORD PTR [eax+eiz*4-0x137b84ef]
  412db3:	or     edx,DWORD PTR [edi+edx*4+0x70]
  412db7:	push   ecx
  412db8:	push   0x3c
  412dba:	push   ebx
  412dbb:	pop    eax
  412dbc:	das    
  412dbd:	(bad)  
  412dbe:	jge    0x412e0d
  412dc0:	call   0xa31e276f
  412dc5:	adc    BYTE PTR [esi-0x42],0x27
  412dc9:	fnstenv [ebp-0x60]
  412dcc:	push   eax
  412dcd:	retf   0xb670
  412dd0:	push   esp
  412dd1:	and    DWORD PTR [ebx+0x582b749b],0xbde8e8d4
  412ddb:	pop    ds
  412ddc:	mov    ebp,0x5e697591
  412de1:	stc    
  412de2:	and    ah,BYTE PTR [ebx-0x42edfe28]
  412de8:	out    0x35,eax
  412dea:	or     cl,ch
  412dec:	in     eax,dx
  412ded:	mov    ds:0x989fa12e,eax
  412df2:	jge    0x412d76
  412df4:	pushf  
  412df5:	sbb    ebx,DWORD PTR [esp+ecx*4+0x56f99764]
  412dfc:	mov    eax,ds:0xd646d5e0
  412e01:	jnp    0x412dc3
  412e03:	pop    es
  412e04:	lock sbb eax,0x7962f3e
  412e0a:	(bad)  
  412e0b:	pop    esi
  412e0c:	xchg   ecx,eax
  412e0d:	inc    DWORD PTR [edi]
  412e0f:	mov    ds:0xb9a8804f,eax
  412e14:	test   al,0xe1
  412e16:	popa   
  412e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e18:	pop    esp
  412e19:	jno    0x412ddc
  412e1b:	dec    ecx
  412e1c:	lods   eax,DWORD PTR ds:[esi]
  412e1d:	mov    cl,al
  412e1f:	xor    DWORD PTR [edx+ecx*8-0x51],ebx
  412e23:	inc    ebp
  412e24:	and    al,0x29
  412e26:	int    0xbc
  412e28:	inc    ebp
  412e29:	jecxz  0x412daf
  412e2b:	iret   
  412e2c:	in     al,dx
  412e2d:	and    edx,DWORD PTR [edx]
  412e2f:	lock inc ebx
  412e31:	xchg   edx,eax
  412e32:	push   ecx
  412e33:	cwde   
  412e34:	push   edi
  412e35:	icebp  
  412e36:	and    cl,BYTE PTR [ebp+0x45b44842]
  412e3c:	dec    esp
  412e3d:	ror    BYTE PTR [eax-0x6ed05798],1
  412e43:	loop   0x412ec4
  412e45:	inc    edx
  412e46:	fwait
  412e47:	jl     0x412dfe
  412e49:	or     DWORD PTR [edi+ebp*2+0x43],0xa1d5dcf7
  412e51:	push   esp
  412e52:	mov    dh,0x55
  412e54:	mov    ?,WORD PTR [ebx-0x3728614f]
  412e5a:	or     eax,0x8f1a4549
  412e5f:	sbb    BYTE PTR [esi],bl
  412e61:	mov    ds:0x74799bae,al
  412e66:	adc    bl,dl
  412e68:	enter  0x58d8,0x4e
  412e6c:	shr    DWORD PTR [edx+0x24413886],1
  412e72:	cwde   
  412e73:	or     bh,BYTE PTR [esi+0x17]
  412e76:	fmul   st(1),st
  412e78:	hlt    
  412e79:	test   BYTE PTR [edx],ah
  412e7b:	adc    ecx,DWORD PTR [esi+ecx*2]
  412e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7f:	jno    0x412eab
  412e81:	jne    0x412ed7
  412e83:	push   cs
  412e84:	xor    DWORD PTR [ebx],edi
  412e86:	bound  ebx,QWORD PTR [esi+0x7fea434d]
  412e8c:	and    DWORD PTR [edx+0x2cd747c5],esi
  412e92:	mov    WORD PTR [esi+0x21cad8de],cs
  412e98:	jno    0x412f03
  412e9a:	in     eax,0xae
  412e9c:	jmp    0x412ea1
  412e9e:	leave  
  412e9f:	call   0x8cce2f4b
  412ea4:	scas   eax,DWORD PTR es:[edi]
  412ea5:	mov    DWORD PTR [esi],edx
  412ea7:	xor    ebp,DWORD PTR fs:0xba2a5589
  412eae:	stos   BYTE PTR es:[edi],al
  412eaf:	mov    edx,0x5204561
  412eb4:	pusha  
  412eb5:	in     eax,dx
  412eb6:	mov    ah,0xda
  412eb8:	xchg   esi,eax
  412eb9:	data16 fsub DWORD PTR [ecx-0x6c61e702]
  412ec0:	mov    edx,0xf6cb1625
  412ec5:	into   
  412ec6:	mov    cl,0x6f
  412ec8:	mov    ebp,0x87211da0
  412ecd:	adc    dh,BYTE PTR [eax-0x4f]
  412ed0:	mov    ds:0xb683b111,al
  412ed5:	in     eax,dx
  412ed6:	mov    al,ds:0x6acc89d8
  412edb:	jnp    0x412f28
  412edd:	jecxz  0x412e86
  412edf:	(bad)  
  412ee0:	mov    ds:0x6d1eb169,eax
  412ee5:	push   0xffffffce
  412ee7:	or     BYTE PTR [edi+esi*4],0x81
  412eeb:	xchg   ecx,eax
  412eec:	sbb    eax,DWORD PTR [edi-0x3ad4a57b]
  412ef2:	mov    ds:0xc1348e5a,eax
  412ef7:	int3   
  412ef8:	pop    ds
  412ef9:	int    0x97
  412efb:	ror    DWORD PTR [ebx+0x70],cl
  412efe:	jmp    0xf7f9:0xb2f120f8
  412f05:	jl     0x412f3f
  412f07:	pop    esp
  412f08:	push   edi
  412f09:	les    eax,FWORD PTR [edx]
  412f0b:	xor    DWORD PTR [ecx+0x6a],ebp
  412f0e:	jo     0x412f12
  412f10:	cli    
  412f11:	xchg   esi,eax
  412f12:	xchg   edi,eax
  412f13:	inc    esi
  412f14:	fcomp  QWORD PTR [ebx+0x715acd02]
  412f1a:	jle    0x412f2e
  412f1c:	xor    eax,0x5edf5194
  412f21:	jge    0x412f09
  412f23:	cld    
  412f24:	pop    eax
  412f25:	jecxz  0x412f31
  412f27:	sub    bh,0xb
  412f2a:	popa   
  412f2b:	and    dh,BYTE PTR [eax+edi*2-0x63]
  412f2f:	sub    DWORD PTR [ebx+ebx*1-0xd],0xffffffb8
  412f34:	loope  0x412edd
  412f36:	or     BYTE PTR [esi+0x49e4f4b6],cl
  412f3c:	pushf  
  412f3d:	daa    
  412f3e:	inc    edi
  412f3f:	jb     0x412fba
  412f41:	pop    esp
  412f42:	jb     0x412f68
  412f44:	inc    edi
  412f45:	or     BYTE PTR [ebx-0x56],0x15
  412f49:	adc    BYTE PTR [edi+0x47],dl
  412f4c:	(bad)  
  412f4d:	leave  
  412f4e:	bound  edi,QWORD PTR [ebx]
  412f50:	jge    0x412f92
  412f52:	jb     0x412fb3
  412f54:	jo     0x412fd5
  412f56:	cmp    al,bh
  412f58:	xchg   edi,eax
  412f59:	push   edi
  412f5a:	add    ah,dl
  412f5c:	lahf   
  412f5d:	or     eax,0x78677b8d
  412f62:	xchg   edi,eax
  412f63:	mov    ebp,0x4d34225b
  412f68:	pop    edx
  412f69:	dec    esp
  412f6a:	push   esp
  412f6b:	loope  0x412fa0
  412f6d:	push   esi
  412f6e:	dec    ebx
  412f6f:	pop    eax
  412f70:	or     al,0xa3
  412f72:	jb     0x412fc5
  412f74:	scas   al,BYTE PTR es:[edi]
  412f75:	mov    eax,DWORD PTR [esi]
  412f77:	cdq    
  412f78:	jp     0x412f8b
  412f7a:	icebp  
  412f7b:	iret   
  412f7c:	jmp    0xb520:0xffdc15c9
  412f83:	push   ecx
  412f84:	xor    eax,0x668f3a81
  412f89:	mov    esi,0x23c2a55e
  412f8e:	and    eax,0x86e31f3c
  412f93:	inc    esp
  412f94:	bswap  ebp
  412f96:	loopne 0x412fbf
  412f98:	push   esp
  412f99:	stc    
  412f9a:	and    eax,0x1f0ea8dd
  412f9f:	push   ss
  412fa0:	lds    esp,FWORD PTR [ecx]
  412fa2:	and    edx,esp
  412fa4:	cdq    
  412fa5:	retf   
  412fa6:	push   es
  412fa7:	mov    ecx,edx
  412fa9:	mov    DWORD PTR [esi],ebp
  412fab:	ins    BYTE PTR es:[edi],dx
  412fac:	ror    DWORD PTR [edi+edx*1],1
  412faf:	pop    eax
  412fb0:	add    bl,cl
  412fb2:	(bad)  
  412fb3:	fstp   TBYTE PTR [eax+0x16]
  412fb6:	or     DWORD PTR [esi+0x5d],ebx
  412fb9:	int3   
  412fba:	lods   al,BYTE PTR ds:[esi]
  412fbb:	xchg   edi,eax
  412fbc:	xadd   ebp,eax
  412fbf:	mov    eax,0xff30ebc6
  412fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc5:	jle    0x412f90
  412fc7:	shl    DWORD PTR [edi+0x55],0x9
  412fcb:	sub    cl,al
  412fcd:	lds    ebp,FWORD PTR [esi]
  412fcf:	dec    esi
  412fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd1:	sbb    BYTE PTR [ecx+0x3c415805],al
  412fd7:	pop    edi
  412fd8:	push   0x20f7b852
  412fdd:	dec    ecx
  412fde:	xchg   edi,eax
  412fdf:	iret   
  412fe0:	pop    ecx
  412fe1:	cli    
  412fe2:	cmc    
  412fe3:	bound  esp,QWORD PTR [ecx-0x79]
  412fe6:	enter  0x35cf,0x38
  412fea:	test   al,0x89
  412fec:	adc    edx,DWORD PTR [edi-0x25]
  412fef:	ds clc 
  412ff1:	ins    BYTE PTR es:[edi],dx
  412ff2:	test   DWORD PTR [eax],ecx
  412ff4:	retf   0x6fdc
  412ff7:	fwait
  412ff8:	mov    edi,edx
  412ffa:	popa   
  412ffb:	out    0xc3,al
  412ffd:	data16 add BYTE PTR ds:[edi],0x19
  413002:	inc    ebp
  413003:	aam    0x8c
  413005:	jno    0x41303f
  413007:	lds    eax,FWORD PTR [edx]
  413009:	jnp    0x41300a
  41300b:	js     0x412fcd
  41300d:	das    
  41300e:	leave  
  41300f:	mov    ecx,0x6462ecb
  413014:	je     0x412fd7
  413016:	fisubr DWORD PTR [eax+0x76]
  413019:	inc    ebx
  41301a:	jnp    0x41308b
  41301c:	pop    edx
  41301d:	sbb    al,0xe5
  41301f:	cmp    esi,DWORD PTR [edx-0x14]
  413022:	aaa    
  413023:	adc    ch,dl
  413025:	jg     0x41301f
  413027:	gs retf 
  413029:	inc    esi
  41302a:	or     BYTE PTR [ebx-0xd861376],bl
  413030:	fcomp  DWORD PTR [ebx]
  413032:	xor    eax,DWORD PTR [ebp+eax*1-0x7c41dd86]
  413039:	adc    eax,DWORD PTR [edx+0x333cbf06]
  41303f:	repnz and ebx,DWORD PTR [eax-0x16ccbcd0]
  413046:	test   eax,0xb46bedfc
  41304b:	call   0x79c7:0x819ea957
  413052:	add    eax,0x806beb41
  413057:	cs pop edi
  413059:	push   cs
  41305a:	jns    0x4130a6
  41305c:	and    al,0x14
  41305e:	xchg   eax,edx
  413060:	add    eax,0x69a1005a
  413065:	pop    ecx
  413066:	es int 0x28
  413069:	out    0xa8,eax
  41306b:	jecxz  0x41303b
  41306d:	sub    esp,edi
  41306f:	arpl   WORD PTR [esi],dx
  413071:	adc    eax,0x67194bff
  413076:	clc    
  413077:	daa    
  413078:	sbb    edi,DWORD PTR [esi]
  41307a:	lock mov ds:0x9a1f624e,al
  413080:	mov    gs,WORD PTR ss:[ebp+edx*4-0xebf5dac]
  413088:	mov    dl,0xc1
  41308a:	mov    cl,BYTE PTR [esi]
  41308c:	pop    eax
  41308d:	clc    
  41308e:	cs dec ecx
  413090:	xchg   DWORD PTR [ebx],esi
  413092:	div    BYTE PTR [ecx+0x3e52c8ba]
  413098:	rol    BYTE PTR [edx],0xb0
  41309b:	out    dx,eax
  41309c:	inc    edi
  41309d:	sbb    eax,0x73e0b0e4
  4130a2:	xchg   edi,eax
  4130a3:	repnz sub eax,0x690d0e82
  4130a9:	pop    ss
  4130aa:	mov    al,ds:0x69fa9e4
  4130af:	add    al,0xaa
  4130b1:	sbb    BYTE PTR [ebx+0x1f],0xf3
  4130b5:	loopne 0x4130d2
  4130b7:	cmc    
  4130b8:	call   0xb8a1:0x9379901
  4130bf:	xchg   DWORD PTR [ebp-0x180a0859],ebx
  4130c5:	mov    esp,0xc6f74a38
  4130ca:	mov    ch,bl
  4130cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130cd:	sub    ecx,ecx
  4130cf:	out    dx,al
  4130d0:	or     bh,ah
  4130d2:	hlt    
  4130d3:	sub    BYTE PTR [edi+0x28],bh
  4130d6:	fnstenv [esi-0x2e]
  4130d9:	xchg   DWORD PTR [ebx-0x3e],ecx
  4130dc:	loope  0x4130b4
  4130de:	dec    esi
  4130df:	in     al,dx
  4130e0:	inc    ebp
  4130e1:	xor    al,0xfa
  4130e3:	add    al,0x96
  4130e5:	ins    BYTE PTR es:[edi],dx
  4130e6:	push   cs
  4130e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130e8:	or     DWORD PTR [edx+eiz*8+0x1925c538],0xffffffd7
  4130f0:	jle    0x413119
  4130f2:	in     al,0xa0
  4130f4:	push   esp
  4130f5:	and    al,ch
  4130f7:	int3   
  4130f8:	or     al,0xd0
  4130fa:	sbb    eax,0x9a7982d9
  4130ff:	mov    BYTE PTR [edi+0x48ec5c43],0x18
  413106:	pop    ecx
  413107:	call   0x53ab:0xe303dfb7
  41310e:	and    eax,0xa41715f0
  413113:	test   al,0xd2
  413115:	test   eax,0x983ee7fa
  41311a:	xchg   ecx,eax
  41311b:	cld    
  41311c:	cmp    BYTE PTR [edx],ah
  41311e:	fwait
  41311f:	loope  0x4130db
  413121:	dec    ebx
  413122:	sub    al,0x5c
  413124:	scas   eax,DWORD PTR es:[edi]
  413125:	cli    
  413126:	mov    ds:0x9fe79,al
  41312b:	sub    BYTE PTR [edi],ah
  41312d:	ficomp DWORD PTR [ecx+0x1b]
  413130:	fistp  DWORD PTR [ebx+0x5ef19a1b]
  413136:	(bad)  
  413137:	mov    ds:0xcd3b2273,eax
  41313c:	push   ecx
  41313d:	xor    DWORD PTR [eax-0x63d08c5b],edi
  413143:	jb     0x4130f0
  413145:	arpl   WORD PTR [ebx-0x3d],di
  413148:	repz sub al,0x64
  41314b:	pusha  
  41314c:	xor    DWORD PTR [ecx-0x2c580836],eax
  413152:	cdq    
  413153:	mov    dl,ah
  413155:	cli    
  413156:	sar    BYTE PTR [ebp-0x30],1
  413159:	sbb    DWORD PTR [edi],esi
  41315b:	and    eax,0xc4dd86d7
  413160:	push   ecx
  413161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413162:	push   es
  413163:	add    DWORD PTR [edx+esi*8],edi
  413166:	das    
  413167:	cmc    
  413168:	enter  0xcb87,0x82
  41316c:	push   edx
  41316d:	mov    edi,0xb18b23ca
  413172:	je     0x413135
  413174:	mov    al,ds:0xcb98b4a9
  413179:	sahf   
  41317a:	enter  0xee87,0xc
  41317e:	imul   esi,DWORD PTR [ebx-0x31],0x14
  413182:	lods   al,BYTE PTR ds:[esi]
  413183:	sbb    al,0x21
  413185:	and    DWORD PTR [edi+ebp*2],edx
  413188:	mov    BYTE PTR [ebx+0x45],al
  41318b:	imul   ecx,DWORD PTR [eax-0x7e79ca91],0xffffff98
  413192:	call   0xefcb87e7
  413197:	popf   
  413198:	or     eax,0x9b8092db
  41319d:	fs push cs
  41319f:	aas    
  4131a0:	outs   dx,DWORD PTR ds:[esi]
  4131a1:	add    BYTE PTR [edi],dl
  4131a3:	out    0xe8,al
  4131a5:	sbb    DWORD PTR [esi],ebx
  4131a7:	push   ds
  4131a8:	or     ebx,DWORD PTR [ebp+eiz*8-0x489a2810]
  4131af:	jmp    0x7542:0x19e81416
  4131b6:	out    dx,eax
  4131b7:	outs   dx,BYTE PTR ds:[esi]
  4131b8:	imul   edi,DWORD PTR [esi],0xf57e8bad
  4131be:	int3   
  4131bf:	pop    es
  4131c0:	shr    edi,1
  4131c2:	mov    cl,0x69
  4131c4:	aad    0x81
  4131c6:	int3   
  4131c7:	sub    DWORD PTR [ecx],0x48
  4131ca:	pop    esp
  4131cb:	sub    ecx,DWORD PTR [ebx-0x308f4283]
  4131d1:	retf   
  4131d2:	popa   
  4131d3:	inc    esi
  4131d4:	mov    dl,ch
  4131d6:	icebp  
  4131d7:	adc    ebp,eax
  4131d9:	xor    eax,0x83a92c63
  4131de:	outs   dx,DWORD PTR ds:[esi]
  4131df:	shl    DWORD PTR [edi],cl
  4131e1:	pop    ds
  4131e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e3:	jne    0x413224
  4131e5:	mov    ebx,0xfddd833
  4131ea:	push   0x59762e9d
  4131ef:	mov    ebx,0x634a653e
  4131f4:	cmp    ebx,ecx
  4131f6:	and    eax,0x5ba320c4
  4131fb:	pop    esp
  4131fc:	stos   BYTE PTR es:[edi],al
  4131fd:	iret   
  4131fe:	push   esi
  4131ff:	js     0xca7b27b8
  413205:	scas   eax,DWORD PTR es:[edi]
  413206:	and    BYTE PTR [eax-0x2004f195],cl
  41320c:	or     eax,0x14bf46ce
  413211:	xor    al,0x50
  413213:	jmp    0x5a49ab3
  413218:	cmp    eax,0x486d91fe
  41321d:	ror    BYTE PTR [esi],0xc9
  413220:	gs pop eax
  413222:	lods   al,BYTE PTR ds:[esi]
  413223:	stos   BYTE PTR es:[edi],al
  413224:	retf   0xa34
  413227:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413229:	adc    al,0xf5
  41322b:	xchg   esi,eax
  41322c:	in     eax,dx
  41322d:	mov    ds:0x3da06781,eax
  413232:	out    dx,eax
  413233:	cmp    BYTE PTR [esi+0x56aa14df],dl
  413239:	or     ah,al
  41323b:	add    al,0x44
  41323d:	push   dx
  41323f:	cs pop edi
  413241:	pop    esi
  413242:	adc    DWORD PTR [esi+ebp*8-0x5e07ac11],0x18
  41324a:	inc    ebx
  41324b:	xor    DWORD PTR [esi],edi
  41324d:	pop    edx
  41324e:	inc    esp
  41324f:	test   DWORD PTR [ecx-0x2b641042],ebx
  413255:	jno    0x413285
  413257:	adc    DWORD PTR ds:[ecx-0x1b],ebx
  41325b:	retf   0x568d
  41325e:	push   cs
  41325f:	lods   al,BYTE PTR ds:[esi]
  413260:	xchg   ecx,eax
  413261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413262:	hlt    
  413263:	jge    0x4132aa
  413265:	jg     0x41326e
  413267:	(bad)
  41326a:	lods   eax,DWORD PTR ds:[esi]
  41326b:	xor    DWORD PTR [ebx+0x741e21fc],edx
  413271:	test   BYTE PTR [ecx+ecx*1],bl
  413274:	push   0xda18036c
  413279:	outs   dx,BYTE PTR ds:[esi]
  41327a:	dec    edi
  41327b:	add    BYTE PTR [ebp+0x2cea32ee],ah
  413281:	aam    0xed
  413283:	or     cl,BYTE PTR [edi-0x243c2ade]
  413289:	pop    es
  41328a:	and    esi,ecx
  41328c:	sbb    edi,DWORD PTR [ebx-0x325f8e0b]
  413292:	pop    es
  413293:	jmp    0x6697426c
  413298:	pop    edx
  413299:	arpl   WORD PTR [esi+edi*4],si
  41329c:	daa    
  41329d:	cmp    edi,DWORD PTR [edx-0x3a]
  4132a0:	xchg   edx,eax
  4132a1:	pop    ebp
  4132a2:	mov    eax,ds:0xb4f17aa3
  4132a7:	mov    eax,0x888c30d1
  4132ac:	jl     0x413255
  4132ae:	repz les ebp,FWORD PTR [ebx+0x75]
  4132b2:	fild   DWORD PTR [ebp+0x28d3a8cc]
  4132b8:	pop    ebp
  4132b9:	cli    
  4132ba:	jle    0x413252
  4132bc:	in     al,dx
  4132bd:	enter  0x15a8,0xbf
  4132c1:	ja     0x413331
  4132c3:	retf   
  4132c4:	dec    edi
  4132c5:	pop    edi
  4132c6:	or     eax,0x1ec9f491
  4132cb:	xchg   esp,eax
  4132cc:	dec    edx
  4132cd:	cmp    DWORD PTR [esi-0x3b],esi
  4132d0:	jo     0x413254
  4132d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d3:	push   esp
  4132d4:	inc    esi
  4132d5:	and    dl,dh
  4132d7:	test   BYTE PTR [edx+0x24],al
  4132da:	pushf  
  4132db:	scas   al,BYTE PTR es:[di]
  4132dd:	stc    
  4132de:	pop    edx
  4132df:	and    eax,DWORD PTR [ebx*2+0x15cff190]
  4132e6:	and    ecx,edi
  4132e8:	mov    ebx,0xaeb28c4c
  4132ed:	(bad)  
  4132ee:	arpl   WORD PTR [eax-0x98a259b],bx
  4132f4:	mov    esi,0x1f5c993d
  4132f9:	fidivr WORD PTR [ebx-0x294cc8af]
  4132ff:	mov    ds:0x7a8d21ee,al
  413304:	into   
  413305:	dec    edi
  413306:	fsubr  QWORD PTR [edi]
  413308:	jl     0x413328
  41330a:	adc    esp,DWORD PTR ds:0x6f0f72e8
  413310:	es pop ds
  413312:	cmp    dl,BYTE PTR [ecx]
  413314:	mov    ebx,0x7572725d
  413319:	jo     0x41336b
  41331b:	and    al,0x30
  41331d:	and    al,BYTE PTR [edx-0x3a]
  413320:	std    
  413321:	xor    BYTE PTR [edx+0x28],dh
  413324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413325:	nop
  413326:	loop   0x4132ce
  413328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413329:	adc    DWORD PTR [esi],esp
  41332b:	inc    ebx
  41332c:	pop    esp
  41332d:	adc    dl,dh
  41332f:	(bad)  
  413330:	ins    BYTE PTR es:[edi],dx
  413331:	out    dx,al
  413332:	arpl   sp,dx
  413334:	pop    ebp
  413335:	sbb    BYTE PTR [ebx-0x5f4455ca],bh
  41333b:	pop    es
  41333c:	sub    edx,ecx
  41333e:	gs cwde 
  413340:	fmul   st,st(4)
  413342:	test   al,0x6b
  413344:	and    BYTE PTR [ebx],cl
  413346:	dec    ebp
  413347:	inc    esi
  413348:	mov    esi,0xcfc21ab9
  41334d:	mov    bl,0xec
  41334f:	into   
  413350:	or     BYTE PTR [eax-0x2c],cl
  413353:	stos   DWORD PTR es:[edi],eax
  413354:	leave  
  413355:	repz push esp
  413357:	mov    al,0xe8
  413359:	shr    BYTE PTR [edx-0x2e7dcf9d],0x14
  413360:	push   edi
  413361:	je     0x4132f2
  413363:	(bad)  
  413364:	sub    eax,0x5063fb61
  413369:	xlat   BYTE PTR ds:[ebx]
  41336a:	mov    edx,0x384a878c
  41336f:	or     edi,edx
  413371:	add    DWORD PTR [ebp+0x47bb814a],ecx
  413377:	outs   dx,BYTE PTR ds:[esi]
  413378:	bound  ebp,QWORD PTR ds:0x4bf01b35
  41337e:	ds dec esp
  413380:	cld    
  413381:	inc    ebp
  413382:	lock push esp
  413384:	cmovae edx,DWORD PTR [ebx+0x26]
  413388:	mov    ebx,0xea2b9eb6
  41338d:	test   DWORD PTR [ebx],ebp
  41338f:	dec    DWORD PTR ds:0x4b9c3b43
  413395:	dec    esi
  413396:	jb     0x41338e
  413398:	das    
  413399:	pop    ds
  41339a:	mov    eax,0x5119b019
  41339f:	xor    al,0xae
  4133a1:	test   al,0x72
  4133a3:	inc    esi
  4133a4:	lea    esp,[eax-0x1f2b62e6]
  4133aa:	outs   dx,BYTE PTR ds:[esi]
  4133ab:	lds    esp,FWORD PTR [ecx]
  4133ad:	mov    ecx,0x7dd93220
  4133b2:	aas    
  4133b3:	mov    WORD PTR [ecx],?
  4133b5:	icebp  
  4133b6:	adc    ch,BYTE PTR ds:0x263e22ee
  4133bc:	push   edi
  4133bd:	jge    0x4133c2
  4133bf:	(bad)  
  4133c0:	mov    ebx,0xc1bfe4cc
  4133c5:	aaa    
  4133c6:	mov    bh,BYTE PTR [ebp+ebx*8+0x41]
  4133ca:	sub    ecx,ebx
  4133cc:	dec    edi
  4133cd:	out    dx,al
  4133ce:	add    BYTE PTR [ecx],bl
  4133d0:	(bad)  [esi+0x57]
  4133d3:	sahf   
  4133d4:	jmp    0xc172:0xc77bef49
  4133db:	ds call 0x10c8:0x1f7c686a
  4133e3:	sub    al,0x59
  4133e5:	jl     0x41345c
  4133e7:	xor    al,0x2a
  4133e9:	inc    edi
  4133ea:	push   cs
  4133eb:	sbb    BYTE PTR [ecx+0x53120eb],ah
  4133f1:	(bad)  
  4133f2:	call   0xf1129b26
  4133f7:	jne    0x41343e
  4133f9:	pop    esp
  4133fa:	mov    edi,0x26f935b9
  4133ff:	jmp    0x25e78315
  413404:	bound  ebx,QWORD PTR [edi]
  413406:	and    BYTE PTR ds:0xa1b10d6d,bh
  41340c:	cmp    edi,DWORD PTR [eax+0x134bdbf1]
  413412:	lods   al,BYTE PTR ds:[esi]
  413413:	jns    0x41343b
  413415:	mov    al,0x8
  413417:	mov    bl,0xc7
  413419:	cmp    esi,edx
  41341b:	adc    DWORD PTR [esi],ebp
  41341d:	mov    dh,BYTE PTR [ebx]
  41341f:	(bad)  
  413420:	imul   ebp,DWORD PTR [ebp+0x20],0x5404c280
  413427:	and    DWORD PTR [esi+0xf],0x3e
  41342b:	ins    DWORD PTR es:[edi],dx
  41342c:	in     al,0xd9
  41342e:	(bad)  
  41342f:	nop
  413430:	popf   
  413431:	in     al,0x64
  413433:	add    ah,BYTE PTR [ebp-0x75]
  413436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413437:	fs leave 
  413439:	hlt    
  41343a:	cdq    
  41343b:	and    BYTE PTR [eax-0x1c],al
  41343e:	and    eax,0xf501f0ed
  413443:	add    dl,BYTE PTR [eax]
  413445:	inc    edi
  413446:	mov    bh,0xe1
  413448:	inc    edx
  413449:	xor    DWORD PTR [ecx],esi
  41344b:	adc    al,0xb0
  41344d:	jne    0x4134b3
  41344f:	jle    0x4134c4
  413451:	cmc    
  413452:	or     BYTE PTR [eax-0x51ed7486],ch
  413458:	jecxz  0x4133ea
  41345a:	sub    BYTE PTR [edi+0x4b51b5f8],al
  413460:	adc    al,0x12
  413462:	mov    ds:0x9053a1f3,al
  413467:	pusha  
  413468:	fstp   DWORD PTR [eax]
  41346a:	cmp    ch,BYTE PTR [ebp+0x2c]
  41346d:	mov    eax,0x66ef2556
  413472:	ss data16 in al,dx
  413475:	(bad)  
  413476:	xchg   ebx,eax
  413477:	or     eax,DWORD PTR [ecx+0x40d9bb5e]
  41347d:	push   0xffffffae
  41347f:	retf   
  413480:	mov    bh,0x59
  413482:	push   esi
  413483:	push   ebp
  413484:	sbb    eax,0x6943068a
  413489:	adc    ebp,DWORD PTR [edx+0x7f]
  41348c:	leave  
  41348d:	not    DWORD PTR [esi-0x67]
  413490:	xchg   ebx,eax
  413491:	inc    ecx
  413492:	lahf   
  413493:	sbb    al,0xf2
  413495:	adc    eax,0x4518f808
  41349a:	jge    0x4134ea
  41349c:	neg    edi
  41349e:	dec    ebx
  41349f:	into   
  4134a0:	cmp    al,0x5d
  4134a2:	adc    al,0x84
  4134a4:	cs adc esi,edx
  4134a7:	mov    ch,0xa0
  4134a9:	test   BYTE PTR [esi],bl
  4134ab:	pop    ebx
  4134ac:	lods   al,BYTE PTR ds:[esi]
  4134ad:	retf   0x68f9
  4134b0:	inc    edi
  4134b1:	mov    ah,bh
  4134b3:	cmp    BYTE PTR ds:0xee374914,0x98
  4134ba:	dec    edx
  4134bb:	fst    QWORD PTR [edx+0x76536b5e]
  4134c1:	bound  ebx,QWORD PTR [ebx+esi*8+0x551b5cd8]
  4134c8:	div    bl
  4134ca:	dec    ecx
  4134cb:	loop   0x4134a2
  4134cd:	es in  eax,dx
  4134cf:	repnz mov eax,ds:0x84cb4a06
  4134d5:	pop    es
  4134d6:	push   ss
  4134d7:	in     eax,dx
  4134d8:	fidivr WORD PTR [edx+0x294a91b8]
  4134de:	std    
  4134df:	push   esp
  4134e0:	jg     0x41347e
  4134e2:	test   al,0xb2
  4134e4:	in     eax,0x36
  4134e6:	addr16 push ecx
  4134e8:	inc    esp
  4134e9:	je     0x413489
  4134eb:	repnz and DWORD PTR [esi-0x621e6e17],esi
  4134f2:	push   ds
  4134f3:	push   es
  4134f4:	xchg   ebx,eax
  4134f5:	rcr    BYTE PTR [ebx],cl
  4134f7:	mov    BYTE PTR [ebx],dl
  4134f9:	adc    BYTE PTR [edx+0x2d],dh
  4134fc:	adc    al,0x5e
  4134fe:	push   esp
  4134ff:	jmp    0x5828:0x494a1eb5
  413506:	sbb    edi,DWORD PTR [edi+0x30]
  413509:	mov    al,0x3a
  41350b:	in     al,dx
  41350c:	cmp    BYTE PTR [ecx],bh
  41350e:	jae    0x413580
  413510:	jg     0x41358f
  413512:	in     eax,0x17
  413514:	(bad)  
  413515:	in     eax,0x6c
  413517:	xchg   esp,eax
  413518:	xchg   ebp,eax
  413519:	clc    
  41351a:	jl     0x41351d
  41351c:	fnstcw WORD PTR [esi]
  41351e:	mov    BYTE PTR ds:0x336e50b1,dh
  413524:	cmp    DWORD PTR [eax+eax*4-0x22],0x43fbb4ed
  41352c:	mov    esi,0xf8526b8
  413531:	test   DWORD PTR [edx-0x71f94b48],0x52707df9
  41353b:	scas   al,BYTE PTR es:[edi]
  41353c:	sbb    edi,DWORD PTR [ecx]
  41353e:	xchg   bh,bl
  413540:	aad    0xe3
  413542:	test   al,0x74
  413544:	jp     0x4134c6
  413546:	jmp    0x4134ea
  413548:	ret    
  413549:	scas   al,BYTE PTR es:[edi]
  41354a:	add    bl,BYTE PTR [edx+0x6c]
  41354d:	jp     0x41355a
  41354f:	mov    bh,0x98
  413551:	test   BYTE PTR [edx+esi*2-0x21],al
  413555:	out    0x59,al
  413557:	inc    edi
  413558:	div    BYTE PTR [edx-0x52]
  41355b:	mov    dh,0x2c
  41355d:	push   es
  41355e:	test   eax,0xb50288d5
  413563:	fmul   QWORD PTR [ebx+0x26]
  413566:	pop    esi
  413567:	imul   edi,DWORD PTR ds:[ebx],0x7241e77c
  41356e:	cdq    
  41356f:	jge    0x41353d
  413571:	mov    eax,0x5ca4c4cb
  413576:	push   esi
  413577:	inc    ebp
  413578:	test   BYTE PTR [ecx],0x7c
  41357b:	cli    
  41357c:	cmp    ebx,DWORD PTR [ecx+0x24]
  41357f:	push   cs
  413580:	es popf 
  413582:	mov    eax,0x49d1dcae
  413587:	add    al,0xda
  413589:	dec    edi
  41358a:	pop    edx
  41358b:	pop    ebx
  41358c:	sbb    BYTE PTR [esi-0x4d],0x64
  413590:	push   ecx
  413591:	mov    DWORD PTR [ebp+ebp*4-0x37],0x28b9cff
  413599:	jbe    0x413596
  41359b:	xor    DWORD PTR [eax+edi*4+0x1ae9dd77],ebp
  4135a2:	xchg   esp,eax
  4135a3:	jp     0x413539
  4135a5:	and    DWORD PTR [eax+ebx*4-0x59],eax
  4135a9:	std    
  4135aa:	test   al,0x8f
  4135ac:	sub    DWORD PTR [ebp-0x5a3f8033],ebx
  4135b2:	push   0x1ba59355
  4135b7:	mov    BYTE PTR [eax-0x4213727d],bl
  4135bd:	pop    ss
  4135be:	inc    edi
  4135bf:	adc    eax,0xc786502b
  4135c4:	mov    WORD PTR [ecx-0x822f0b7],es
  4135ca:	cwde   
  4135cb:	cmp    BYTE PTR [esi+0x4971ee7c],dl
  4135d1:	pop    ebx
  4135d2:	outs   dx,BYTE PTR ds:[esi]
  4135d3:	push   eax
  4135d4:	mov    bl,0xe2
  4135d6:	ror    ah,cl
  4135d8:	ja     0x4135f6
  4135da:	pop    dx
  4135dc:	mov    esp,0x579a7570
  4135e1:	inc    BYTE PTR [ebp-0x41410559]
  4135e7:	leave  
  4135e8:	ds mov ecx,0x25353ba2
  4135ee:	je     0x4135e0
  4135f0:	and    eax,0x7abef5cc
  4135f5:	xor    bh,al
  4135f7:	jne    0x4135f6
  4135f9:	stos   DWORD PTR es:[edi],eax
  4135fa:	stos   BYTE PTR es:[edi],al
  4135fb:	les    ebx,FWORD PTR [ebx]
  4135fd:	xor    BYTE PTR [ebp+0x5],dl
  413600:	sub    DWORD PTR [ebx+0x172fa859],ebp
  413606:	or     eax,0x353273d7
  41360b:	das    
  41360c:	jle    0x4135b5
  41360e:	add    eax,0xa4a3ee7f
  413613:	out    0x7b,eax
  413615:	jp     0x41362b
  413617:	push   ecx
  413618:	adc    ah,dh
  41361a:	and    eax,0x23a2d48c
  41361f:	cdq    
  413620:	push   DWORD PTR [ecx+0x3ae66c08]
  413626:	imul   edi,DWORD PTR [edi+0x288099f0],0xffffff8a
  41362d:	out    0xdb,eax
  41362f:	hlt    
  413630:	stos   BYTE PTR es:[edi],al
  413631:	inc    eax
  413632:	clc    
  413633:	or     eax,0x20e02aa3
  413638:	enter  0xca18,0x81
  41363c:	in     al,0x8a
  41363e:	dec    eax
  41363f:	cmp    BYTE PTR [edi+0x3a],ch
  413642:	xchg   edx,eax
  413643:	std    
  413644:	and    DWORD PTR [ebx],ebp
  413646:	out    dx,eax
  413647:	and    DWORD PTR cs:[edi],0xfffffff5
  41364b:	sbb    ch,BYTE PTR [ebp-0xa68a728]
  413651:	lock or al,0x5c
  413654:	adc    DWORD PTR [ebx+0x18],ebx
  413657:	fcomp  DWORD PTR [ecx+0x7c205ae]
  41365d:	mov    bl,0xf
  41365f:	sahf   
  413660:	xor    DWORD PTR [eax+0x2b80010f],ebp
  413666:	in     eax,dx
  413667:	repnz push ebx
  413669:	fs dec edx
  41366b:	jnp    0x4136a9
  41366d:	sub    eax,0xd0bb2db3
  413672:	in     al,dx
  413673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413674:	cmp    bh,BYTE PTR [esi-0x64]
  413677:	arpl   WORD PTR [edi+eax*2-0xa],di
  41367b:	jno    0x4136b9
  41367d:	in     al,dx
  41367e:	xchg   ebx,eax
  41367f:	mov    ds:0x39388845,al
  413684:	add    al,al
  413686:	pop    edx
  413687:	(bad)  
  413688:	or     eax,0xb07c40b9
  41368d:	fstp   TBYTE PTR ds:0x37cbdbce
  413693:	sub    al,0xea
  413695:	test   esp,eax
  413697:	sub    eax,0xe4dfe2c
  41369c:	scas   al,BYTE PTR es:[edi]
  41369d:	icebp  
  41369e:	xchg   ecx,esi
  4136a0:	sub    BYTE PTR [ebp-0x57],bh
  4136a3:	out    0x27,eax
  4136a5:	mov    DWORD PTR [esi],ebp
  4136a7:	jo     0x4136ac
  4136a9:	push   0x52
  4136ab:	or     ah,BYTE PTR es:[edx+0x72]
  4136af:	fnstcw WORD PTR [eax+0x4336b322]
  4136b5:	inc    eax
  4136b6:	pop    es
  4136b7:	pop    es
  4136b8:	push   esp
  4136b9:	repnz stc 
  4136bb:	pop    esi
  4136bc:	push   DWORD PTR gs:[esi+esi*8-0x51]
  4136c1:	mov    ebp,0xe8a71ad6
  4136c6:	(bad)  
  4136c7:	clc    
  4136c8:	cli    
  4136c9:	xchg   DWORD PTR [edi-0x1f],edx
  4136cc:	bound  esi,QWORD PTR [ebx-0x441301b7]
  4136d2:	mov    edi,0xe877c92d
  4136d7:	jno    0x4136fc
  4136d9:	es xchg edx,eax
  4136db:	pop    es
  4136dc:	sahf   
  4136dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136de:	jmp    0x42693384
  4136e3:	cmp    eax,0xe0fc0ac1
  4136e8:	pop    ecx
  4136e9:	jno    0x41369f
  4136eb:	jg     0x4136d4
  4136ed:	and    cl,BYTE PTR [ebp-0xf]
  4136f0:	pushf  
  4136f1:	xchg   esi,eax
  4136f2:	or     eax,0xc51133e9
  4136f7:	cmp    DWORD PTR [ebp+0x567fa62c],0x1d
  4136fe:	fnstsw WORD PTR [esi+edi*1+0x5aba68e4]
  413705:	das    
  413706:	pop    esp
  413707:	fisubr WORD PTR [edx-0x6d]
  41370a:	inc    eax
  41370b:	xchg   edx,eax
  41370c:	rcr    BYTE PTR [edi*1-0x89b0230],cl
  413713:	js     0x4136fb
  413715:	gs js  0x4136c3
  413718:	pop    edi
  413719:	fs test esp,esp
  41371c:	adc    ebp,DWORD PTR [edx*1-0x301b6abf]
  413723:	or     al,0xee
  413725:	rcr    DWORD PTR [eax+0x5d],0x6a
  413729:	mov    bl,0xe9
  41372b:	ret    
  41372c:	push   ss
  41372d:	retf   
  41372e:	dec    edx
  41372f:	and    DWORD PTR [eax-0x45],ebp
  413732:	stc    
  413733:	outs   dx,DWORD PTR ds:[esi]
  413734:	sbb    esp,DWORD PTR [eax]
  413736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413737:	push   esi
  413738:	or     edx,DWORD PTR [eax-0x35]
  41373b:	outs   dx,DWORD PTR ds:[esi]
  41373c:	jno    0x41377b
  41373e:	aas    
  41373f:	pop    es
  413740:	add    al,0x2b
  413742:	sub    BYTE PTR [edi],ch
  413744:	jmp    0xc1a1:0x32b06320
  41374b:	pusha  
  41374c:	jp     0x4136d7
  41374e:	and    eax,0x78de426d
  413753:	pop    ebp
  413754:	popa   
  413755:	xor    al,0xdb
  413757:	xchg   ebx,eax
  413758:	scas   al,BYTE PTR es:[edi]
  413759:	aas    
  41375a:	adc    ah,dl
  41375c:	adc    DWORD PTR [esi],ebx
  41375e:	ret    
  41375f:	mov    BYTE PTR [ecx-0x2496de2d],dh
  413765:	dec    edx
  413766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413767:	shl    DWORD PTR [ebx-0x5eba212a],0xb
  41376e:	inc    ebx
  41376f:	jns    0x4137e7
  413771:	ret    
  413772:	imul   esi,DWORD PTR [eax],0xffffff80
  413775:	int3   
  413776:	scas   eax,DWORD PTR es:[edi]
  413777:	push   es
  413778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413779:	pop    es
  41377a:	test   DWORD PTR [edx],edi
  41377c:	dec    ecx
  41377d:	push   0xffffffa9
  41377f:	push   ss
  413780:	cmp    eax,0x13692a7b
  413785:	aaa    
  413786:	mov    DWORD PTR [ecx-0x3c],esi
  413789:	xchg   esi,eax
  41378a:	int3   
  41378b:	inc    esp
  41378c:	and    bh,cl
  41378e:	nop
  41378f:	fsub   DWORD PTR [esi+0x13]
  413792:	xchg   esi,eax
  413793:	mov    ds:0xdc06cc8a,al
  413798:	pushf  
  413799:	mov    WORD PTR [edi],ds
  41379b:	push   ecx
  41379c:	aad    0xcb
  41379e:	adc    dh,al
  4137a0:	out    0xf5,al
  4137a2:	aam    0x81
  4137a4:	(bad)  
  4137a5:	out    dx,eax
  4137a6:	push   edx
  4137a7:	cs cwde 
  4137a9:	aam    0x38
  4137ab:	fs push 0x67
  4137ae:	in     eax,0xc7
  4137b0:	cli    
  4137b1:	jge    0x413771
  4137b3:	or     eax,0x6d3277b6
  4137b8:	push   cs
  4137b9:	mov    BYTE PTR [ebx],0x70
  4137bc:	push   edi
  4137bd:	add    DWORD PTR [ebx+0x1e],ebp
  4137c0:	jl     0x413802
  4137c2:	push   eax
  4137c3:	jae    0x413836
  4137c5:	mov    esp,0xfa86c72
  4137ca:	stos   DWORD PTR es:[edi],eax
  4137cb:	xchg   esp,eax
  4137cc:	shl    BYTE PTR [esp+edx*4],0x26
  4137d0:	jmp    0x7218:0xf0e46f26
  4137d7:	fstp   DWORD PTR [edx+0x5da6e5db]
  4137dd:	frstor [ecx-0x2]
  4137e0:	daa    
  4137e1:	push   es
  4137e2:	pop    es
  4137e3:	pop    esi
  4137e4:	push   ss
  4137e5:	sub    BYTE PTR [ecx-0x5d],dh
  4137e8:	cmp    al,0xe2
  4137ea:	pop    esi
  4137eb:	not    edx
  4137ed:	stc    
  4137ee:	sub    DWORD PTR [esi],ecx
  4137f0:	leave  
  4137f1:	cmp    dl,BYTE PTR [ebx+0x7d]
  4137f4:	sahf   
  4137f5:	fsubr  DWORD PTR [ebx+0x2a]
  4137f8:	xchg   DWORD PTR [esp+eax*1],esi
  4137fb:	mov    ch,0x5b
  4137fd:	out    dx,al
  4137fe:	jne    0x4137a4
  413800:	call   0x47211258
  413805:	mov    gs,WORD PTR ds:0x8df393fe
  41380b:	aas    
  41380c:	test   DWORD PTR [eax-0x77],ecx
  41380f:	cli    
  413810:	iret   
  413811:	jg     0x413810
  413813:	mov    cl,0x6
  413815:	add    eax,0x50712c5e
  41381a:	xchg   ebp,eax
  41381b:	mov    dh,0x83
  41381d:	fimul  WORD PTR [edx]
  41381f:	fistp  QWORD PTR [edi+0x31]
  413822:	inc    ebp
  413823:	mov    edi,edx
  413825:	mov    ds:0xd3a257ba,al
  41382a:	popf   
  41382b:	inc    esp
  41382c:	idiv   DWORD PTR [ecx+edi*2+0x2d]
  413830:	and    al,0x83
  413832:	nop
  413833:	fnstcw WORD PTR [eax+esi*2]
  413836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413837:	shl    edx,cl
  413839:	test   eax,0x425c37a6
  41383e:	idiv   DWORD PTR [edx]
  413840:	(bad)  
  413841:	aaa    
  413842:	jmp    0x2628:0xb60322ba
  413849:	das    
  41384a:	add    al,0x4b
  41384c:	lea    esp,[edi-0x5aa4bf82]
  413852:	mov    edi,0x76415c65
  413857:	orps   xmm6,XMMWORD PTR [edx+0x544a9364]
  41385e:	ret    0x50df
  413861:	add    eax,0xba5cb2bc
  413866:	(bad)  
  413867:	or     esi,DWORD PTR [eax]
  413869:	cmp    ebx,DWORD PTR [ebp-0x588f536e]
  41386f:	pop    edi
  413870:	sub    esp,ecx
  413872:	int3   
  413873:	pop    eax
  413874:	and    eax,0x56292398
  413879:	sbb    al,0x6
  41387b:	mov    eax,ds:0x40ef1bb5
  413880:	leave  
  413881:	neg    BYTE PTR [ebx-0x70ec32fe]
  413887:	sti    
  413888:	stos   BYTE PTR es:[edi],al
  413889:	fdiv   st,st(2)
  41388b:	dec    DWORD PTR [edx-0x50]
  41388e:	adc    eax,0xeef4cdb8
  413893:	adc    bh,BYTE PTR [eax]
  413895:	xchg   edi,eax
  413896:	ret    0x2084
  413899:	loope  0x413908
  41389b:	xor    bh,BYTE PTR [edi+0x4c]
  41389e:	dec    esi
  41389f:	clc    
  4138a0:	xor    bl,BYTE PTR [ebp+0x5a]
  4138a3:	fnsave [edi+0x4c]
  4138a6:	ret    0x357d
  4138a9:	add    al,0xd5
  4138ab:	and    al,0x53
  4138ad:	es push 0xffffff97
  4138b0:	jl     0x41389b
  4138b2:	add    ecx,esi
  4138b4:	mov    esp,0x52f1a875
  4138b9:	cmovnp esi,DWORD PTR [ebp+ebx*8-0x10]
  4138be:	sar    DWORD PTR [esp+eax*2],0xb4
  4138c2:	je     0x413912
  4138c4:	or     eax,0x74c9ed51
  4138c9:	dec    esp
  4138ca:	lods   al,BYTE PTR ds:[esi]
  4138cb:	ret    0x684a
  4138ce:	mov    edi,0x925c299a
  4138d3:	xchg   BYTE PTR [ebp+ebp*1+0x7551b657],ah
  4138da:	ror    BYTE PTR [eax],cl
  4138dc:	mov    esp,0xdeb06dcd
  4138e1:	cmp    eax,0x5a54a0ba
  4138e6:	cmp    ch,BYTE PTR [edi+0xd]
  4138e9:	mov    dl,0xfe
  4138eb:	xchg   edx,eax
  4138ec:	test   al,0x4d
  4138ee:	sbb    cl,BYTE PTR [esi]
  4138f0:	pop    esi
  4138f1:	and    eax,0xa03ee3f0
  4138f6:	in     al,0xac
  4138f8:	push   edi
  4138f9:	fistp  DWORD PTR [esi+eax*1]
  4138fc:	sbb    ch,bl
  4138fe:	cmp    eax,0xfb25ca2a
  413903:	(bad)
  413906:	adc    DWORD PTR [ebx-0x10],ebp
  413909:	fstp   TBYTE PTR gs:[ebp-0x36341771]
  413910:	ficom  WORD PTR [ecx]
  413912:	xchg   edx,eax
  413913:	(bad)  
  413914:	not    DWORD PTR [ecx+0x2]
  413917:	jmp    0x4917:0x6560
  41391d:	fwait
  41391e:	add    bl,bl
  413920:	xor    eax,0x1ee4793f
  413925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413926:	mov    al,ds:0xd6af32e7
  41392b:	or     bh,BYTE PTR [esi+0x12bf0470]
  413931:	popf   
  413932:	sahf   
  413933:	inc    ecx
  413934:	mov    bh,0xf2
  413936:	sahf   
  413937:	fsub   QWORD PTR [ebp+0x64]
  41393a:	sbb    BYTE PTR [edx],dh
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	rol    BYTE PTR ds:0x3aadad73,0xd5
  413944:	fiadd  WORD PTR [esi+edi*4+0x48e2cd69]
  41394b:	xor    edx,edx
  41394d:	cmp    eax,0xa59accf7
  413952:	push   esi
  413953:	inc    ecx
  413954:	push   ds
  413955:	iret   
  413956:	mov    al,dh
  413958:	(bad)  
  413959:	stos   DWORD PTR es:[edi],eax
  41395a:	dec    eax
  41395b:	dec    ebp
  41395c:	mov    edx,0xa3132fe6
  413961:	sbb    WORD PTR [eax+0x429fe027],sp
  413968:	xchg   esi,eax
  413969:	fs clc 
  41396b:	xor    DWORD PTR [ecx-0x5f],edi
  41396e:	pop    edi
  41396f:	lods   al,BYTE PTR ds:[esi]
  413970:	add    esp,DWORD PTR [edi+0x63aa85f6]
  413976:	push   edx
  413977:	cs (bad) 
  413979:	cli    
  41397a:	push   ss
  41397b:	cli    
  41397c:	fisttp DWORD PTR [ebp-0x4dffd1e1]
  413982:	mov    dl,0xb3
  413984:	push   ebx
  413985:	mov    ds:0x141fba9,eax
  41398a:	lahf   
  41398b:	ror    bh,1
  41398d:	enter  0x6e49,0xe8
  413991:	and    BYTE PTR [edx+0xa],bh
  413994:	jbe    0x413a14
  413996:	push   cs
  413997:	mov    DWORD PTR [eax],0x9f35b8cc
  41399d:	jp     0x413927
  41399f:	int    0x27
  4139a1:	and    ebp,DWORD PTR [ebp+0x1e85ba6c]
  4139a7:	xlat   BYTE PTR ds:[ebx]
  4139a8:	mov    cl,ch
  4139aa:	mov    WORD PTR [ebx],?
  4139ac:	(bad)  
  4139ad:	test   BYTE PTR [edi+0x72],0x3b
  4139b1:	push   esi
  4139b2:	or     dh,BYTE PTR [edx]
  4139b4:	dec    esi
  4139b5:	js     0x413963
  4139b7:	and    esi,DWORD PTR [esi-0x3c]
  4139ba:	sbb    edx,DWORD PTR [ecx]
  4139bc:	imul   ebx,DWORD PTR [ecx-0x16],0xc7b81d3f
  4139c3:	(bad)  
  4139c4:	js     0x413959
  4139c6:	add    eax,DWORD PTR [ebx+ecx*2-0xf22aaf2]
  4139cd:	nop
  4139ce:	push   ds
  4139cf:	mov    al,ds:0x6b1298ee
  4139d4:	fwait
  4139d5:	scas   eax,DWORD PTR es:[edi]
  4139d6:	out    dx,eax
  4139d7:	std    
  4139d8:	inc    ecx
  4139d9:	or     cl,ah
  4139db:	adc    DWORD PTR [eax],eax
  4139dd:	or     BYTE PTR [esi-0x20],dl
  4139e0:	popa   
  4139e1:	imul   esp,DWORD PTR [edx+ebx*1],0x17
  4139e5:	push   es
  4139e6:	out    dx,eax
  4139e7:	dec    edi
  4139e8:	sbb    BYTE PTR [ecx],dl
  4139ea:	cdq    
  4139eb:	cmp    ah,ah
  4139ed:	dec    esp
  4139ee:	call   0x94fd:0x5e45dc04
  4139f5:	shr    DWORD PTR [edx-0x606c31fc],0x4c
  4139fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fd:	jecxz  0x413993
  4139ff:	loope  0x413a1d
  413a01:	cli    
  413a02:	mov    cl,0x10
  413a04:	xor    eax,0x1a6dd0b1
  413a09:	mov    cx,0x15e0
  413a0d:	sar    DWORD PTR [ebx],cl
  413a0f:	or     BYTE PTR [ecx+0x49],ch
  413a12:	add    BYTE PTR [ebp-0x3183adca],cl
  413a18:	ins    BYTE PTR es:[edi],dx
  413a19:	mov    edi,0xadc9d407
  413a1e:	jl     0x413a3a
  413a20:	fst    DWORD PTR [eax-0x5]
  413a23:	les    edx,FWORD PTR [ebx-0x5aec3a02]
  413a29:	cmp    DWORD PTR [edx],0x36359f79
  413a2f:	(bad)  
  413a30:	popa   
  413a31:	dec    edx
  413a32:	ins    BYTE PTR es:[edi],dx
  413a33:	outs   dx,BYTE PTR ds:[esi]
  413a34:	aam    0xe5
  413a36:	inc    ebx
  413a37:	or     eax,0xed4ba074
  413a3c:	sar    DWORD PTR ss:[edx],cl
  413a3f:	sbb    BYTE PTR [esp+ecx*8+0x76],ch
  413a43:	mov    dh,0xe0
  413a45:	lock lea edi,[ebx-0x2c4962ed]
  413a4c:	call   FWORD PTR [ecx-0x1f]
  413a4f:	and    BYTE PTR [ebp+ebx*2-0xdc90a39],al
  413a56:	in     eax,dx
  413a57:	js     0x413abd
  413a59:	(bad)  
  413a5a:	jno    0x413ac2
  413a5c:	cwde   
  413a5d:	lods   eax,DWORD PTR ds:[esi]
  413a5e:	and    al,0x4
  413a60:	dec    edx
  413a61:	loop   0x413ad0
  413a63:	mov    al,0x52
  413a65:	repz cwde 
  413a67:	or     al,bh
  413a69:	sbb    al,0x19
  413a6b:	mov    edx,0x2650ef28
  413a70:	int    0x1a
  413a72:	outs   dx,DWORD PTR ds:[esi]
  413a73:	dec    edx
  413a74:	or     al,0xd6
  413a76:	dec    ebx
  413a77:	dec    ebp
  413a78:	and    BYTE PTR ds:0x59d86800,ah
  413a7e:	ins    DWORD PTR es:[edi],dx
  413a7f:	lahf   
  413a80:	repz dec eax
  413a82:	mov    eax,0xe6b1a617
  413a87:	sub    BYTE PTR [eax+0x5a650fe5],dl
  413a8d:	fnsave [eax-0x22fabaeb]
  413a93:	pop    esi
  413a94:	nop
  413a95:	pop    ebp
  413a96:	fsubp  st(5),st
  413a98:	ja     0x413a55
  413a9a:	(bad)  
  413a9b:	push   DWORD PTR [ebx-0x45fb02f4]
  413aa1:	xchg   esp,eax
  413aa2:	cmc    
  413aa3:	inc    ebp
  413aa4:	fadd   st(0),st
  413aa6:	inc    ebp
  413aa7:	fdivr  QWORD PTR [ecx-0x3a]
  413aaa:	push   edx
  413aab:	add    ah,ah
  413aad:	xchg   esi,eax
  413aae:	push   ebx
  413aaf:	and    edx,DWORD PTR [ebp-0x52]
  413ab2:	mov    bh,BYTE PTR [eax]
  413ab4:	or     al,0x91
  413ab6:	jns    0x413b23
  413ab8:	push   edx
  413ab9:	lods   eax,DWORD PTR ds:[esi]
  413aba:	enter  0x540f,0xba
  413abe:	jge    0x413a9d
  413ac0:	jnp    0x413a83
  413ac2:	dec    edi
  413ac3:	inc    ebp
  413ac4:	jg     0x413a82
  413ac6:	mov    edx,0xa7f49b34
  413acb:	pop    edx
  413acc:	push   esp
  413acd:	fist   DWORD PTR [esi-0x56]
  413ad0:	int    0x29
  413ad2:	fistp  DWORD PTR [ecx+0x38]
  413ad5:	pop    edx
  413ad6:	call   0x4023:0xed5c12ba
  413add:	pop    edx
  413ade:	mov    edi,0xcff71656
  413ae3:	pusha  
  413ae4:	ror    ecx,cl
  413ae6:	in     al,0x36
  413ae8:	sbb    bl,BYTE PTR [edx]
  413aea:	push   ss
  413aeb:	rcl    DWORD PTR [esi+0x5e],0x34
  413aef:	out    0xe3,al
  413af1:	into   
  413af2:	cmp    edi,DWORD PTR [ebx]
  413af4:	xchg   ebp,eax
  413af5:	xor    DWORD PTR [ebx+ebp*4-0x1c],edx
  413af9:	or     ecx,esp
  413afb:	out    0x26,eax
  413afd:	jae    0x413b74
  413aff:	xchg   ebp,eax
  413b00:	sub    DWORD PTR [eax],ebp
  413b02:	hlt    
  413b03:	(bad)  
  413b05:	cdq    
  413b06:	mov    dh,0x8c
  413b08:	push   eax
  413b09:	es scas al,BYTE PTR es:[edi]
  413b0b:	sub    dh,BYTE PTR [ebx]
  413b0d:	je     0x413aea
  413b0f:	fisttp WORD PTR [edx-0x720cc3ac]
  413b15:	outs   dx,DWORD PTR ds:[esi]
  413b16:	pop    edi
  413b17:	aas    
  413b18:	adc    esp,eax
  413b1a:	inc    edx
  413b1b:	jmp    0x1e7a:0x23e41ee4
  413b22:	cmp    BYTE PTR [ebp-0x7f],cl
  413b25:	shl    edx,0x5f
  413b28:	pop    ebx
  413b29:	int3   
  413b2a:	add    cl,BYTE PTR [esi]
  413b2c:	pushf  
  413b2d:	xor    ebx,DWORD PTR [edi+0x43578525]
  413b33:	cs aad 0xaf
  413b36:	ror    dl,1
  413b38:	pop    ecx
  413b39:	and    eax,0x4e1367b4
  413b3e:	and    esp,DWORD PTR [ebx-0x7d]
  413b41:	or     al,0xd9
  413b43:	mov    bl,0x39
  413b45:	dec    esi
  413b46:	pop    ebx
  413b47:	fsubr  DWORD PTR [edx-0x6e15e9c9]
  413b4d:	ror    ebp,0x75
  413b50:	push   cs
  413b51:	jne    0x413b2a
  413b53:	or     BYTE PTR [edx-0x3d],cl
  413b56:	xchg   ebp,eax
  413b57:	and    eax,0x167fc633
  413b5c:	add    eax,0xe0a5fa3f
  413b61:	mov    eax,ds:0xaa5f7f34
  413b66:	hlt    
  413b67:	add    bl,BYTE PTR [edx-0x71]
  413b6a:	adc    BYTE PTR [ebx-0x1531cb7f],dh
  413b70:	arpl   WORD PTR [eax+0x49],bx
  413b73:	stc    
  413b74:	fild   DWORD PTR [ebp-0x6f]
  413b77:	mov    ebp,0xe41db216
  413b7c:	sbb    al,0x26
  413b7e:	aaa    
  413b7f:	adc    dl,BYTE PTR [ebx+eax*8+0x12f063ad]
  413b86:	xor    BYTE PTR [esi-0x1ff1245d],bh
  413b8c:	fisttp DWORD PTR [ebp+0x78]
  413b8f:	jge    0x413b89
  413b91:	scas   al,BYTE PTR es:[edi]
  413b92:	inc    ebp
  413b93:	shl    edx,1
  413b95:	stc    
  413b96:	or     ebx,DWORD PTR [esi-0x72b273e9]
  413b9c:	sbb    eax,0x9308d21e
  413ba1:	sub    al,0xaa
  413ba3:	sub    DWORD PTR ds:[ebp+0x36],ecx
  413ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba8:	sbb    al,0x12
  413baa:	mov    esi,0x2f8ba5c5
  413baf:	pop    es
  413bb0:	popf   
  413bb1:	cmp    esp,DWORD PTR [ecx]
  413bb3:	pop    ss
  413bb4:	or     BYTE PTR [ebp-0x5c94b57],bh
  413bba:	ret    0x9f6c
  413bbd:	scas   al,BYTE PTR es:[edi]
  413bbe:	scas   al,BYTE PTR es:[edi]
  413bbf:	or     al,BYTE PTR [edx-0x78]
  413bc2:	push   eax
  413bc3:	scas   eax,DWORD PTR es:[edi]
  413bc4:	mov    esi,0xf2b641ec
  413bc9:	mov    bh,BYTE PTR [edi+0x64]
  413bcc:	jo     0x413bc8
  413bce:	cld    
  413bcf:	add    al,BYTE PTR [edi+eiz*4+0x3a]
  413bd3:	mov    ebp,0x7191e295
  413bd8:	test   eax,0x7176ca57
  413bdd:	xchg   edx,eax
  413bde:	pop    ss
  413bdf:	mov    BYTE PTR [edi+0x631df8e7],0xff
  413be6:	lea    ebx,[ecx-0x532beb0]
  413bec:	fisub  DWORD PTR [ebp-0x7d]
  413bef:	jmp    0x7de08928
  413bf4:	sub    DWORD PTR [bp+di+0x769b],esp
  413bf9:	or     ah,bh
  413bfb:	iret   
  413bfc:	cmp    eax,0x419e8389
  413c01:	push   es
  413c02:	stos   BYTE PTR es:[edi],al
  413c03:	ror    DWORD PTR [edx-0x4],1
  413c06:	dec    ecx
  413c07:	pinsrw mm2,WORD PTR [ebp+0x64],0x7b
  413c0c:	lea    ecx,[ebp+eax*4+0x291654d7]
  413c13:	jnp    0x413ba8
  413c15:	int3   
  413c16:	and    BYTE PTR [edi+ebx*1+0x33],ah
  413c1a:	stos   BYTE PTR es:[edi],al
  413c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c1c:	inc    esi
  413c1d:	scas   eax,DWORD PTR es:[edi]
  413c1e:	outs   dx,DWORD PTR ds:[esi]
  413c1f:	dec    edi
  413c20:	adc    eax,0xa8b3814b
  413c25:	cli    
  413c26:	fidiv  WORD PTR [esi-0x41]
  413c29:	push   esp
  413c2a:	in     al,0x5b
  413c2c:	ja     0x413c8e
  413c2e:	adc    BYTE PTR [eax+0x492e8158],0xb5
  413c35:	fdivr  st,st(4)
  413c37:	ss cld 
  413c39:	add    al,0x53
  413c3b:	push   eax
  413c3c:	imul   eax,DWORD PTR [ecx+0x6e],0x9
  413c40:	out    0xbb,al
  413c42:	or     DWORD PTR [ecx-0x32e0868f],esi
  413c48:	out    dx,al
  413c49:	frstor [edi-0x1d6cdb48]
  413c4f:	popf   
  413c50:	int3   
  413c51:	sub    eax,DWORD PTR [ebx-0x34]
  413c54:	div    DWORD PTR [edi+0x6fa38948]
  413c5a:	inc    ebx
  413c5b:	mov    esi,0xf4a75f54
  413c60:	mov    edx,0x1bdc1074
  413c65:	xor    BYTE PTR [ebx-0x5d],cl
  413c68:	sbb    DWORD PTR [edx-0x1e9b6b5e],eax
  413c6e:	leave  
  413c6f:	inc    ecx
  413c70:	pop    eax
  413c71:	sub    ah,BYTE PTR [eax-0x7c4cb1b2]
  413c77:	xchg   esp,eax
  413c78:	push   eax
  413c79:	xor    eax,0x71c5dd6a
  413c7e:	push   eax
  413c7f:	jmp    0xe7366d0b
  413c84:	ins    BYTE PTR es:[edi],dx
  413c85:	xchg   edx,eax
  413c86:	add    ebp,ecx
  413c88:	ret    
  413c89:	ins    BYTE PTR es:[edi],dx
  413c8a:	pop    ecx
  413c8b:	cmp    eax,0x8436ec0d
  413c90:	call   0x1352c59c
  413c95:	enter  0x8aa5,0x8d
  413c99:	cdq    
  413c9a:	fs std 
  413c9c:	mov    ch,0x0
  413c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9f:	cmp    DWORD PTR [esi+0x2885438f],esi
  413ca5:	add    dl,BYTE PTR [ebx]
  413ca7:	in     al,dx
  413ca8:	mov    ebx,0x64d5df4e
  413cad:	out    dx,eax
  413cae:	sub    BYTE PTR gs:[esi],bh
  413cb1:	or     esi,DWORD PTR [ebp-0x14]
  413cb4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413cb6:	dec    esp
  413cb7:	dec    ebx
  413cb8:	loope  0x413c95
  413cba:	scas   eax,DWORD PTR es:[edi]
  413cbb:	adc    BYTE PTR [esi],0xae
  413cbe:	pop    ss
  413cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc0:	push   es
  413cc1:	push   esp
  413cc3:	push   es
  413cc4:	fild   DWORD PTR [edx+ecx*1-0x56c4c1c]
  413ccb:	push   ebx
  413ccd:	jmp    0x887a:0x7f3c204d
  413cd4:	shr    ebp,0xea
  413cd7:	aas    
  413cd8:	iret   
  413cd9:	fadd   QWORD PTR [ecx+0x50]
  413cdc:	aad    0x25
  413cde:	xor    ebp,ebx
  413ce0:	ror    DWORD PTR [eax+0x279c0e8b],cl
  413ce6:	idiv   DWORD PTR [edi]
  413ce8:	jp     0x413d4c
  413cea:	jne    0x413c8c
  413cec:	adc    ebp,DWORD PTR [edi+0x9]
  413cef:	lods   al,BYTE PTR ds:[esi]
  413cf0:	and    BYTE PTR [eax-0x55],cl
  413cf3:	adc    al,0x9b
  413cf5:	xor    ah,BYTE PTR [eax+0x71]
  413cf8:	fs jge 0x413d47
  413cfb:	repnz (bad) 
  413cfd:	fcomp  QWORD PTR [ecx-0x7f]
  413d00:	mov    dh,0xc9
  413d02:	push   ebx
  413d03:	dec    ebp
  413d04:	push   cs
  413d05:	scas   al,BYTE PTR es:[edi]
  413d06:	std    
  413d07:	ret    
  413d08:	pop    es
  413d09:	mov    eax,es:0x7cb2a09c
  413d0f:	dec    ecx
  413d10:	inc    esi
  413d11:	mov    ds:0xef4bf240,al
  413d16:	xchg   esp,eax
  413d17:	lods   al,BYTE PTR ds:[esi]
  413d18:	pop    ds
  413d19:	mov    fs,WORD PTR [ecx-0x39]
  413d1c:	ds pop ebp
  413d1e:	cwde   
  413d1f:	in     al,dx
  413d20:	inc    ecx
  413d21:	sub    DWORD PTR [ebx+edi*1+0x73bbcdb7],eax
  413d28:	ret    
  413d29:	addr16 test eax,edx
  413d2c:	lock outs dx,BYTE PTR cs:[esi]
  413d2f:	(bad)  
  413d31:	out    0xae,al
  413d33:	gs pop ebp
  413d35:	push   edi
  413d36:	mov    ebp,0xc3b5cb40
  413d3b:	into   
  413d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d3d:	fidiv  WORD PTR [edi-0x2f]
  413d40:	pop    ebp
  413d41:	xchg   bh,dl
  413d43:	ja     0x413d02
  413d45:	das    
  413d46:	and    BYTE PTR [ebx+esi*1-0xc],ch
  413d4a:	bound  ecx,QWORD PTR [esi]
  413d4c:	in     eax,dx
  413d4d:	rcr    DWORD PTR [ecx],0xdf
  413d50:	sbb    si,WORD PTR [esi+0x1c]
  413d54:	mov    ch,0x8c
  413d56:	or     eax,DWORD PTR [edx-0x3fb2c18c]
  413d5c:	(bad)  
  413d5e:	shr    BYTE PTR [edx-0x2b],1
  413d61:	call   0xd1a8c438
  413d66:	and    dl,BYTE PTR [edx+eiz*1]
  413d69:	mov    bh,0xf7
  413d6b:	adc    al,0x72
  413d6d:	or     dh,ch
  413d6f:	ds push edx
  413d71:	cmp    al,0xc9
  413d73:	out    0xb1,eax
  413d75:	jns    0x413d64
  413d77:	jmp    0x413d59
  413d79:	xchg   ebp,eax
  413d7a:	add    BYTE PTR fs:[edi],bl
  413d7d:	jge    0x413d33
  413d7f:	push   0x27ce3bd0
  413d84:	jmp    0x13843f01
  413d89:	lods   al,BYTE PTR ds:[esi]
  413d8a:	inc    edi
  413d8b:	scas   eax,DWORD PTR es:[edi]
  413d8c:	sbb    eax,0x99d44d96
  413d91:	hlt    
  413d92:	frstor [edi]
  413d94:	dec    ecx
  413d95:	inc    DWORD PTR [esi+eiz*1]
  413d98:	fwait
  413d99:	into   
  413d9a:	dec    ecx
  413d9b:	(bad)  
  413d9e:	mov    ch,0x9a
  413da0:	shl    DWORD PTR [ebx+0x18a14013],0x25
  413da7:	sbb    DWORD PTR [ebx+0xe],eax
  413daa:	mov    esi,0x1d84161f
  413daf:	repnz adc DWORD PTR [edi+0x6e],0xffffffd5
  413db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db5:	popf   
  413db6:	jnp    0x413ded
  413db8:	adc    BYTE PTR [eax],dh
  413dba:	or     BYTE PTR [ecx+0x66360c94],al
  413dc0:	daa    
  413dc1:	mov    eax,ds:0x72a27b03
  413dc6:	xor    BYTE PTR [esi+0x2a883c67],ah
  413dcc:	shl    DWORD PTR [ebp-0x44],cl
  413dcf:	fs push 0xfffffff5
  413dd2:	mov    bh,0xc9
  413dd4:	sub    ebx,DWORD PTR [esi-0x7221ce31]
  413dda:	mov    esp,0x20f547f2
  413ddf:	repz mul ecx
  413de2:	dec    eax
  413de3:	mov    eax,0x2a51cd3f
  413de8:	sub    ebx,DWORD PTR [ecx+0x3f013580]
  413dee:	dec    esi
  413def:	sbb    BYTE PTR [esi],bl
  413df1:	sub    BYTE PTR [ebp-0x21],0x7e
  413df5:	sub    ebp,DWORD PTR [edi+0x47]
  413df8:	stos   DWORD PTR es:[edi],eax
  413df9:	xchg   ecx,eax
  413dfa:	(bad)  
  413dfb:	adc    BYTE PTR [ecx-0xe3f98c2],al
  413e01:	mov    ch,dh
  413e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e04:	pop    ebp
  413e05:	pop    esp
  413e06:	mov    ch,0xe6
  413e08:	int3   
  413e09:	js     0x413d8f
  413e0b:	jbe    0x413dc5
  413e0d:	pop    esp
  413e0e:	xor    ecx,edi
  413e10:	cmp    bh,BYTE PTR [ecx]
  413e12:	retf   
  413e13:	inc    ecx
  413e14:	aas    
  413e15:	in     eax,dx
  413e16:	jl     0x413e3d
  413e18:	repnz ins BYTE PTR es:[edi],dx
  413e1a:	(bad)  
  413e1b:	aad    0x3
  413e1d:	adc    ecx,esi
  413e1f:	cld    
  413e20:	pop    es
  413e21:	pop    edx
  413e22:	ffreep st(0)
  413e24:	xchg   ebx,eax
  413e25:	inc    edi
  413e26:	mov    ebx,0x78b4ecc
  413e2b:	sub    eax,0x41e8b75d
  413e30:	div    DWORD PTR [esi+0x65]
  413e33:	fild   DWORD PTR [ebx+ebx*1-0x216b4aa]
  413e3a:	repnz loope 0x413dc9
  413e3d:	fdivr  QWORD PTR [eax+eax*2-0x5bcf4e49]
  413e44:	mov    esp,0xd84dd337
  413e49:	pop    edi
  413e4a:	jle    0x413e68
  413e4c:	add    BYTE PTR [eax],dh
  413e4e:	push   ecx
  413e4f:	(bad)  
  413e50:	jmp    0xbe8a:0x87f38adf
  413e57:	add    eax,0x5e4b7cc6
  413e5c:	mov    ecx,0x245f21e8
  413e61:	xor    BYTE PTR [ebx+eax*8],cl
  413e64:	pop    eax
  413e65:	xchg   BYTE PTR [eax-0x45b64026],al
  413e6b:	les    ecx,FWORD PTR [esi-0x7b]
  413e6e:	ficom  DWORD PTR [edi-0x65d28bf6]
  413e74:	sub    al,0xab
  413e76:	out    0x1a,al
  413e78:	add    al,0x76
  413e7a:	xchg   ebp,eax
  413e7b:	into   
  413e7c:	or     BYTE PTR [ebx-0x9a95a5d],ch
  413e82:	mov    eax,0xdd695723
  413e87:	daa    
  413e88:	cmp    DWORD PTR [esi],ebp
  413e8a:	test   DWORD PTR [eax-0x72771efc],0xfea29f99
  413e94:	(bad)  
  413e95:	loop   0x413eca
  413e97:	adc    al,0x7c
  413e99:	aaa    
  413e9a:	jecxz  0x413e5b
  413e9c:	sub    eax,0x54e813c
  413ea1:	leave  
  413ea2:	jbe    0x413e96
  413ea4:	test   eax,edx
  413ea6:	and    esi,eax
  413ea8:	xor    esp,eax
  413eaa:	outs   dx,BYTE PTR ds:[esi]
  413eab:	mov    dl,0x87
  413ead:	jmp    0xbb4e3f40
  413eb2:	js     0x413ed1
  413eb4:	(bad)  
  413eb5:	nop
  413eb6:	ror    DWORD PTR [esi],1
  413eb8:	or     esi,DWORD PTR cs:[esi+0x44]
  413ebc:	in     al,0x2e
  413ebe:	(bad)  
  413ebf:	ja     0x413e89
  413ec1:	and    eax,ecx
  413ec3:	push   ds
  413ec4:	retf   
  413ec5:	pop    ds
  413ec6:	sub    ah,0xce
  413ec9:	pop    ebx
  413eca:	and    dh,BYTE PTR [ecx+0x79fcb960]
  413ed0:	test   BYTE PTR [ebp+edi*2+0x0],bl
  413ed4:	ds sbb eax,0x12171ed4
  413eda:	outs   dx,BYTE PTR ds:[esi]
  413edb:	je     0x413f2b
  413edd:	in     eax,dx
  413ede:	xor    al,0xdf
  413ee0:	add    edx,esi
  413ee2:	pushf  
  413ee3:	push   edi
  413ee4:	xor    BYTE PTR [esi+0x50],al
  413ee7:	mov    cr6,esi
  413eea:	outs   dx,DWORD PTR ds:[esi]
  413eeb:	ret    0x8ded
  413eee:	jg     0x413ecf
  413ef0:	imul   esi,ecx,0x76
  413ef3:	xchg   ecx,eax
  413ef4:	mov    ds:0x9d177ef,eax
  413ef9:	push   esi
  413efa:	push   es
  413efb:	pop    esp
  413efc:	and    bl,BYTE PTR [ebx-0x3]
  413eff:	adc    eax,0x8a5a055e
  413f04:	mov    edi,0x311fe3c2
  413f09:	test   dh,0xb5
  413f0c:	xor    eax,0xfb1ac313
  413f11:	push   0x3d7b167c
  413f16:	xchg   edx,eax
  413f17:	mov    ebx,0x261413dd
  413f1c:	sbb    ebp,DWORD PTR [edx+ebp*2-0x46]
  413f20:	jle    0x413f2f
  413f22:	arpl   cx,ax
  413f24:	pop    ss
  413f25:	inc    esp
  413f26:	loopne 0x413ee5
  413f28:	shr    DWORD PTR [esi],cl
  413f2a:	test   BYTE PTR [ecx-0x5f9d3ac9],ah
  413f30:	pop    edi
  413f31:	jmp    0xc5f4:0x7d22530a
  413f38:	fisttp WORD PTR [edi]
  413f3a:	or     al,0xdd
  413f3c:	push   ecx
  413f3d:	add    al,0xb6
  413f3f:	mov    ecx,0x98a26128
  413f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f45:	popf   
  413f46:	push   cs
  413f47:	push   edx
  413f48:	mov    BYTE PTR [eax+0x2],dh
  413f4b:	sub    BYTE PTR [eax-0x36f1f1d3],0x93
  413f52:	adc    dl,BYTE PTR [edx]
  413f54:	sbb    ah,bh
  413f56:	cmp    eax,0x6297d588
  413f5b:	or     bh,BYTE PTR [eax+0x7f]
  413f5e:	and    ebp,DWORD PTR [ecx+0x7d]
  413f61:	fwait
  413f62:	cdq    
  413f63:	hlt    
  413f64:	(bad)  
  413f65:	in     al,0xf1
  413f67:	in     al,dx
  413f68:	pop    edi
  413f69:	push   ds
  413f6a:	and    dl,BYTE PTR [edi-0x3f]
  413f6d:	mov    WORD PTR ds:0xc119d8bd,fs
  413f73:	xchg   cl,ch
  413f75:	call   0x4ad0:0x621fdc50
  413f7c:	ret    0x53a4
  413f7f:	inc    edx
  413f80:	out    dx,al
  413f81:	jo     0x413f71
  413f83:	jno    0x413fc9
  413f85:	aaa    
  413f86:	mov    eax,ds:0xcd89fdc5
  413f8b:	sub    eax,DWORD PTR ss:[edx]
  413f8e:	or     BYTE PTR [ebx],bh
  413f90:	hlt    
  413f91:	aam    0xf1
  413f93:	cmp    edi,edx
  413f95:	and    al,0xdb
  413f97:	scas   al,BYTE PTR es:[edi]
  413f98:	nop
  413f99:	dec    BYTE PTR [ebx+0x5d8b0855]
  413f9f:	clc    
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	sbb    BYTE PTR [ebx-0x60],bl
  414016:	int3   
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	push   0xffffffcd
  414021:	pop    ebp
  414022:	xchg   ebp,eax
  414023:	popf   
  414024:	mov    esi,0x4326194f
  414029:	pop    esp
  41402a:	lahf   
  41402b:	xor    eax,0x9e02a46
  414030:	cmp    al,0x2e
  414032:	call   0xdf79:0x2f504bab
  414039:	xchg   ebx,eax
  41403a:	shl    BYTE PTR [esi-0x36c4cb8],0x4
  414041:	popa   
  414042:	repnz int3 
  414044:	mov    dh,0xd5
  414046:	xchg   ebx,eax
  414047:	pop    ebx
  414048:	pushf  
  414049:	adc    DWORD PTR [esi+ebx*2-0x23],edx
  41404d:	mov    ds,edx
  41404f:	aaa    
  414050:	push   cs
  414051:	addr16 ss add eax,0x14c7585a
  414058:	hlt    
  414059:	mov    al,ds:0x198ad6e8
  41405e:	sub    BYTE PTR [ecx+eiz*4+0x3bd90bee],dh
  414065:	push   0x8636573b
  41406a:	jnp    0x414088
  41406c:	pop    es
  41406d:	pushf  
  41406e:	and    BYTE PTR [edi+0x1784f3e0],0x6a
  414075:	hlt    
  414076:	mov    ah,0x5e
  414078:	ret    
  414079:	iret   
  41407a:	call   0x2bfd:0xd833be73
  414081:	fwait
  414082:	mov    al,BYTE PTR [esi]
  414084:	loop   0x41404c
  414086:	pop    edi
  414087:	jg     0x41405d
  414089:	inc    ecx
  41408a:	ins    BYTE PTR es:[edi],dx
  41408b:	fild   DWORD PTR [edi+0x4e]
  41408e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408f:	aas    
  414090:	call   0x5d6ae159
  414095:	cmp    eax,0x497eb9b9
  41409a:	xchg   esp,eax
  41409b:	arpl   WORD PTR [ebx],di
  41409d:	cwde   
  41409e:	aam    0x80
  4140a0:	mov    eax,ds:0x46716126
  4140a5:	push   0x18
  4140a7:	scas   eax,DWORD PTR es:[edi]
  4140a8:	ret    
  4140a9:	push   edi
  4140aa:	sub    DWORD PTR [eax],0x8913167f
  4140b0:	out    dx,eax
  4140b1:	daa    
  4140b2:	and    eax,0x10b508e2
  4140b7:	sbb    eax,0xa1a4ca2f
  4140bc:	clc    
  4140bd:	das    
  4140be:	mov    BYTE PTR [edx+edx*8],bh
  4140c1:	pop    eax
  4140c2:	aad    0xbe
  4140c4:	stc    
  4140c5:	and    al,0x1c
  4140c7:	int3   
  4140c8:	cmp    ebx,DWORD PTR [ebx]
  4140ca:	mov    BYTE PTR [esi-0x7e],dh
  4140cd:	mov    ch,dl
  4140cf:	mov    dh,0x15
  4140d1:	push   0x63
  4140d3:	jmp    0x9c5a7986
  4140d8:	dec    ebx
  4140d9:	add    ebx,esi
  4140db:	cmc    
  4140dc:	aam    0xeb
  4140de:	jno    0x414126
  4140e0:	push   esp
  4140e1:	pop    ecx
  4140e2:	pop    esi
  4140e3:	in     eax,dx
  4140e4:	mov    edi,0x78b63264
  4140e9:	jns    0x414162
  4140eb:	pop    ss
  4140ec:	mov    ?,WORD PTR [ebx]
  4140ee:	mov    bl,0x80
  4140f0:	cmc    
  4140f1:	repz push ss
  4140f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f4:	add    edx,DWORD PTR [ebx-0x4a]
  4140f7:	dec    ebp
  4140f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140f9:	scas   al,BYTE PTR es:[edi]
  4140fa:	pop    ecx
  4140fb:	loopne 0x4140d3
  4140fd:	ror    DWORD PTR [ecx],cl
  4140ff:	mov    bl,0xac
  414101:	repz xlat BYTE PTR ds:[ebx]
  414103:	or     dh,BYTE PTR [ecx+0x11]
  414106:	push   edi
  414107:	dec    edx
  414108:	bound  ebx,QWORD PTR [edi]
  41410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410b:	cmp    ah,BYTE PTR [edx-0x71]
  41410e:	dec    esp
  41410f:	xchg   ebp,eax
  414110:	xor    DWORD PTR [eax],ebx
  414112:	mov    ecx,?
  414114:	dec    ebx
  414115:	scas   eax,DWORD PTR es:[edi]
  414116:	mov    ebx,0xc99bf9ee
  41411b:	dec    DWORD PTR [ebx-0xf]
  41411e:	arpl   WORD PTR [eax+0x4696143b],ax
  414124:	push   ds
  414125:	pusha  
  414126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414127:	enter  0x3044,0xaf
  41412b:	(bad)  
  41412c:	push   0x98d405e9
  414131:	adc    al,0xd1
  414133:	aaa    
  414134:	test   BYTE PTR [eax+0x12],al
  414137:	mov    eax,0xc36cc3f3
  41413c:	mov    edx,0x4563e859
  414141:	das    
  414142:	sbb    esi,esp
  414144:	adc    DWORD PTR [eax+ecx*1],ecx
  414147:	or     DWORD PTR [bp+di],esp
  41414a:	lods   eax,DWORD PTR ds:[esi]
  41414b:	out    0x48,al
  41414d:	int    0x98
  41414f:	sub    esp,ebx
  414151:	xchg   esi,eax
  414152:	call   0x131e:0x83d94406
  414159:	add    ebp,0x6145ec3f
  41415f:	xlat   BYTE PTR ds:[ebx]
  414160:	push   ebp
  414161:	sar    DWORD PTR [edi+0x12eaea3d],1
  414167:	lds    esp,FWORD PTR [ebp+0x47a95487]
  41416d:	jo     0x414144
  41416f:	adc    BYTE PTR [edx-0x45],bl
  414172:	xor    eax,0xde27d119
  414177:	ds sub eax,0x5e25f6b2
  41417d:	bnd jae 0x4141be
  414180:	pushf  
  414181:	ret    0x4da1
  414184:	outs   dx,BYTE PTR ds:[esi]
  414185:	in     al,0xc0
  414187:	or     bl,BYTE PTR [eax-0x5dabbfc0]
  41418d:	cli    
  41418e:	scas   al,BYTE PTR es:[edi]
  41418f:	test   DWORD PTR [ebp-0x4eaf61b],ecx
  414195:	lds    esp,FWORD PTR [ecx+0x74]
  414198:	das    
  414199:	add    al,0xf2
  41419b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41419c:	inc    esp
  41419d:	pop    es
  41419e:	xchg   ebp,eax
  41419f:	(bad)  
  4141a0:	pop    ebx
  4141a1:	pop    ds
  4141a2:	sar    DWORD PTR [edi+ebx*2],1
  4141a5:	jno    0x4141be
  4141a7:	dec    esp
  4141a8:	adc    al,0x9c
  4141aa:	cmp    esi,esp
  4141ac:	push   0xffffffad
  4141ae:	dec    eax
  4141af:	adc    BYTE PTR [ebp-0x10],0x1e
  4141b3:	dec    BYTE PTR [ebx-0x7a]
  4141b6:	jmp    0x414198
  4141b8:	cli    
  4141b9:	pusha  
  4141ba:	mov    edx,DWORD PTR [edi-0x57]
  4141bd:	and    eax,DWORD PTR ds:0x72307e82
  4141c3:	rcl    BYTE PTR [eax-0x2ab24a74],cl
  4141c9:	push   cs
  4141ca:	cwde   
  4141cb:	in     al,0x2b
  4141cd:	ss push ds
  4141cf:	std    
  4141d0:	out    dx,al
  4141d1:	cs xchg esi,eax
  4141d3:	arpl   WORD PTR [eax+eiz*2],cx
  4141d6:	mov    dh,0x19
  4141d8:	xchg   esi,eax
  4141d9:	adc    ebx,edi
  4141db:	sbb    dh,ah
  4141dd:	or     BYTE PTR [edi+0x778125ce],dh
  4141e3:	sbb    al,0x70
  4141e5:	das    
  4141e6:	pop    ss
  4141e7:	pop    ss
  4141e8:	or     ecx,ebx
  4141ea:	sbb    esp,DWORD PTR [edi-0x7dd2557c]
  4141f0:	loope  0x4141f7
  4141f2:	in     al,0x31
  4141f4:	enter  0xa315,0x8c
  4141f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141f9:	(bad)  
  4141fa:	mov    ebx,0x50f4dc8b
  4141ff:	add    al,0x11
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	scas   eax,DWORD PTR es:[edi]
  414203:	inc    edx
  414204:	in     al,0xdc
  414206:	adc    ch,dl
  414208:	dec    edx
  414209:	sbb    al,dh
  41420b:	adc    ebp,DWORD PTR [esi-0x23]
  41420e:	not    BYTE PTR [eax+0x7a4ab69e]
  414214:	retf   
  414215:	dec    ebx
  414216:	test   BYTE PTR es:[edi-0x6e],al
  41421a:	mov    ch,0x66
  41421c:	cmp    eax,0x4a5ccd4e
  414221:	sbb    edi,DWORD PTR [edi+eax*8+0xbddab31]
  414228:	aam    0x61
  41422a:	mov    BYTE PTR [ecx+0x6ad16d54],al
  414230:	fistp  WORD PTR [esi-0x4761d30a]
  414236:	fsub   st,st(6)
  414238:	lahf   
  414239:	lock iret 
  41423b:	xchg   esi,eax
  41423c:	dec    esp
  41423d:	call   0xe7b98249
  414242:	sub    BYTE PTR [edx-0x14],ah
  414245:	and    BYTE PTR [ecx-0xd],ch
  414248:	push   es
  414249:	rcl    al,cl
  41424b:	mov    BYTE PTR [ecx-0x306bf567],0x2a
  414252:	adc    edx,eax
  414254:	mov    esi,0x12405102
  414259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41425a:	clc    
  41425b:	retf   
  41425c:	ss dec esi
  41425e:	jbe    0x4141e5
  414260:	sbb    BYTE PTR [ecx-0x2011eb9d],0x51
  414267:	pop    edi
  414268:	or     esp,DWORD PTR [ebx+edx*2-0x1]
  41426c:	pop    ecx
  41426d:	inc    ebp
  41426e:	dec    esp
  41426f:	out    dx,eax
  414270:	jnp    0x4142a0
  414272:	xchg   ebx,eax
  414273:	retf   0xba46
  414276:	inc    eax
  414277:	xchg   ebx,eax
  414278:	inc    ecx
  414279:	je     0x414202
  41427b:	call   0x34d:0x35960d07
  414282:	stos   DWORD PTR es:[edi],eax
  414283:	out    dx,eax
  414284:	add    al,0x26
  414286:	ss xchg esp,eax
  414288:	xchg   DWORD PTR [edx+0x2f],esi
  41428b:	mov    ebp,0x41586bc7
  414290:	stos   BYTE PTR es:[edi],al
  414291:	xchg   ebx,eax
  414292:	(bad)  
  414293:	test   al,0x8e
  414295:	jg     0x4142ca
  414297:	inc    eax
  414298:	lods   eax,DWORD PTR ds:[esi]
  414299:	out    dx,al
  41429a:	sub    eax,0x44bb0dc2
  41429f:	stc    
  4142a0:	out    0x23,al
  4142a2:	inc    BYTE PTR [ecx]
  4142a4:	or     esi,DWORD PTR [esi+0x3c]
  4142a7:	rcl    BYTE PTR [edx],cl
  4142a9:	cwde   
  4142aa:	in     eax,0x68
  4142ac:	stos   DWORD PTR es:[edi],eax
  4142ad:	cdq    
  4142ae:	out    0xaa,eax
  4142b0:	frstor [esi]
  4142b2:	xlat   BYTE PTR ds:[ebx]
  4142b3:	dec    edx
  4142b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b5:	fimul  WORD PTR [esi-0x36]
  4142b8:	bnd ret 
  4142ba:	addr16 iret 
  4142bc:	in     eax,0x1c
  4142be:	addr16 imul eax,ecx,0xffffffca
  4142c2:	rol    BYTE PTR [edx],1
  4142c4:	imul   DWORD PTR [edx-0x6b]
  4142c7:	push   edx
  4142c8:	inc    ebx
  4142c9:	push   0x35
  4142cb:	cld    
  4142cc:	mov    esi,0xff95c0a7
  4142d1:	call   0xeeeda36c
  4142d6:	push   eax
  4142d7:	scas   eax,DWORD PTR es:[edi]
  4142d8:	push   0x4f2aa245
  4142dd:	ins    BYTE PTR es:[edi],dx
  4142de:	test   BYTE PTR [edi+0x3f],al
  4142e1:	mov    BYTE PTR [ecx+0x65],0x8e
  4142e5:	jmp    DWORD PTR [edx-0x3fc57f77]
  4142eb:	xor    DWORD PTR [edi],ebx
  4142ed:	xchg   edx,eax
  4142ee:	mov    eax,0xe33b95fb
  4142f3:	nop
  4142f4:	or     BYTE PTR [edx+0x4c81a66],0xc6
  4142fb:	call   0x17c222b3
  414300:	stos   BYTE PTR es:[edi],al
  414301:	lods   eax,DWORD PTR ds:[esi]
  414302:	stos   DWORD PTR es:[edi],eax
  414303:	ror    DWORD PTR [ebx-0x27],0xac
  414307:	ret    
  414308:	xchg   esi,eax
  414309:	(bad)  [ebp-0x12]
  41430c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430d:	mov    al,ds:0x8fa0e086
  414312:	dec    esi
  414313:	fmul   st,st(2)
  414315:	jns    0x41438a
  414317:	push   0xb54d227d
  41431c:	sbb    esp,DWORD PTR [ecx]
  41431e:	xor    eax,0x807f549c
  414323:	pop    edi
  414324:	xchg   edi,eax
  414325:	in     al,0x81
  414327:	aam    0x8
  414329:	fisttp WORD PTR [ebx]
  41432b:	outs   dx,DWORD PTR ds:[esi]
  41432c:	jl     0x41431c
  41432e:	test   al,0x4c
  414330:	add    DWORD PTR [ecx-0x4ad6be3f],0xcacfab35
  41433a:	inc    ebx
  41433b:	inc    ebp
  41433c:	xchg   edx,eax
  41433d:	dec    ebp
  41433e:	rol    edi,1
  414340:	push   ds
  414341:	aad    0xbb
  414343:	(bad)  
  414344:	aaa    
  414345:	sar    BYTE PTR [ebx+0x3],cl
  414348:	sbb    al,0x6f
  41434a:	lods   al,BYTE PTR ds:[esi]
  41434b:	gs gs ret 
  41434e:	retf   0xb1bd
  414351:	jnp    0x4143b4
  414353:	push   DWORD PTR [ebx-0x66]
  414356:	sar    BYTE PTR [ebx+0x5c],0x7d
  41435a:	mov    fs,WORD PTR ss:[edi-0xd]
  41435e:	mov    ch,0x55
  414360:	xlat   BYTE PTR ds:[ebx]
  414361:	(bad)  
  414362:	out    dx,al
  414363:	(bad)  
  414364:	xchg   esp,eax
  414365:	pusha  
  414366:	jecxz  0x414390
  414368:	sahf   
  414369:	cwde   
  41436a:	ins    DWORD PTR es:[edi],dx
  41436b:	fwait
  41436c:	push   ebp
  41436d:	test   eax,0x8e1b5625
  414372:	mov    al,ds:0x554d2f55
  414377:	jno    0x414333
  414379:	or     bh,cl
  41437b:	pop    ebp
  41437c:	cdq    
  41437d:	add    DWORD PTR [esi],eax
  41437f:	mov    ebx,0x5d096ff2
  414384:	lods   al,BYTE PTR ds:[esi]
  414385:	push   esi
  414386:	aad    0xb5
  414388:	xor    eax,0xd5354f03
  41438d:	xchg   ebp,eax
  41438e:	and    eax,0xf2266609
  414393:	push   ebp
  414394:	inc    ecx
  414395:	cmp    eax,0x2803cd47
  41439a:	mov    cl,0xe5
  41439c:	mov    ch,0x4
  41439e:	mov    dl,0x93
  4143a0:	sub    al,0x97
  4143a2:	jle    0x41440f
  4143a4:	mov    edx,0xac1d5277
  4143a9:	popa   
  4143aa:	sub    BYTE PTR [ecx+0x28141330],ah
  4143b0:	mov    ds:0x80acc3ae,eax
  4143b5:	das    
  4143b6:	or     BYTE PTR [ebx],bl
  4143b8:	arpl   WORD PTR [ebx+ecx*1],ax
  4143bb:	rcr    BYTE PTR [esp+ebp*8+0x9],cl
  4143bf:	pop    es
  4143c0:	pop    ebp
  4143c1:	aaa    
  4143c2:	dec    ebp
  4143c3:	inc    eax
  4143c4:	outs   dx,BYTE PTR ds:[esi]
  4143c5:	sbb    ebp,ecx
  4143c7:	loopne 0x4143ad
  4143c9:	push   esi
  4143ca:	pop    ecx
  4143cb:	out    0xd0,eax
  4143cd:	mov    gs:0x504a9c1a,al
  4143d3:	or     eax,0x76ac4761
  4143d8:	adc    al,0xc8
  4143da:	aas    
  4143db:	mov    eax,0xdf61b84e
  4143e0:	stos   BYTE PTR es:[edi],al
  4143e1:	jecxz  0x41441b
  4143e3:	retf   0xaee0
  4143e6:	test   eax,0x3636fe16
  4143eb:	pop    ecx
  4143ec:	(bad)  
  4143ed:	xchg   BYTE PTR [ecx],cl
  4143ef:	xchg   ebp,eax
  4143f0:	sahf   
  4143f1:	xor    eax,0xcf0ffe83
  4143f6:	push   0x3966fd51
  4143fb:	mov    ebx,0xe6f8cae8
  414400:	mov    al,ds:0xbe8fc4e8
  414405:	mov    esi,0x17ce42a0
  41440a:	pop    ebp
  41440b:	aaa    
  41440c:	push   esp
  41440d:	mov    eax,ds:0x9a92bf86
  414412:	(bad)
  414416:	loop   0x414401
  414418:	aas    
  414419:	iret   
  41441a:	push   esi
  41441b:	or     al,0x20
  41441d:	out    0xf8,eax
  41441f:	push   ebp
  414420:	and    eax,0xd17c03b5
  414425:	test   al,0x60
  414427:	sub    esi,DWORD PTR [ebx]
  414429:	push   edx
  41442a:	pop    ebp
  41442b:	lea    esp,[esi]
  41442d:	retf   
  41442e:	stos   DWORD PTR es:[edi],eax
  41442f:	gs push esp
  414431:	push   0x3511e19f
  414436:	inc    edx
  414437:	push   edi
  414438:	mov    dh,0xdd
  41443a:	inc    eax
  41443b:	pop    ss
  41443c:	clc    
  41443d:	and    esp,DWORD PTR [ebx+edx*4-0x2942a1c]
  414444:	pop    ebp
  414445:	push   ecx
  414446:	sahf   
  414447:	fsub   DWORD PTR [eax]
  414449:	pop    ebp
  41444a:	mov    ch,0xa5
  41444c:	mov    edi,0x9a3b2a2e
  414451:	call   0xbe13:0x1230db6c
  414458:	and    al,0x43
  41445a:	or     ch,bl
  41445c:	jns    0x414422
  41445e:	adc    dh,dl
  414460:	sahf   
  414461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414462:	sbb    eax,0xcd5132bb
  414467:	xchg   ebx,eax
  414468:	(bad)  [edx+0x7df6a6e8]
  41446e:	div    BYTE PTR [esi]
  414470:	dec    ecx
  414471:	fbstp  TBYTE PTR [edx+0x336b1ee5]
  414477:	into   
  414478:	retf   0xfeb6
  41447b:	cmp    al,0x4c
  41447d:	push   edi
  41447e:	inc    ebp
  41447f:	mov    bh,0xe2
  414481:	scas   eax,DWORD PTR es:[edi]
  414482:	(bad)  
  414484:	push   ss
  414485:	imul   ebp,DWORD PTR [edx],0x10e08fdc
  41448b:	sub    ebp,ecx
  41448d:	das    
  41448e:	pop    ebx
  41448f:	fwait
  414490:	add    ah,BYTE PTR [edi+0x68a1feef]
  414496:	sbb    DWORD PTR [edi-0x2d],esi
  414499:	adc    dh,BYTE PTR [ebx]
  41449b:	mov    edi,0x6a0f3ea
  4144a0:	xchg   BYTE PTR [eax+0x744c57eb],dl
  4144a6:	adc    al,0xb7
  4144a8:	push   0x64
  4144aa:	outs   dx,DWORD PTR ds:[esi]
  4144ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ac:	test   BYTE PTR [ecx],0x65
  4144af:	push   ebp
  4144b0:	or     DWORD PTR [eax+0x6d],ebp
  4144b3:	cmc    
  4144b4:	jl     0x4144c6
  4144b6:	jb     0x4144d2
  4144b8:	mov    cl,BYTE PTR [ecx]
  4144ba:	jns    0x414483
  4144bc:	loop   0x4144d2
  4144be:	enter  0xb00d,0x76
  4144c2:	inc    ebx
  4144c3:	add    DWORD PTR [esi-0x58],ebp
  4144c6:	sub    ebx,ebp
  4144c8:	(bad)  
  4144c9:	push   eax
  4144ca:	mov    bl,0x72
  4144cc:	call   0x173004f9
  4144d1:	int3   
  4144d2:	inc    ecx
  4144d3:	jb     0x4144e8
  4144d5:	inc    edi
  4144d6:	jge    0x414557
  4144d8:	inc    edx
  4144d9:	pop    ebx
  4144da:	data16 clc 
  4144dc:	out    dx,al
  4144dd:	leave  
  4144de:	fwait
  4144df:	lock and DWORD PTR [ecx-0xa25f9b6],esi
  4144e6:	xchg   ebx,eax
  4144e7:	retf   0x8c17
  4144ea:	int    0xce
  4144ec:	icebp  
  4144ed:	push   esi
  4144ee:	jns    0x41448a
  4144f0:	mov    ds:0x61aa1e4c,al
  4144f5:	mov    esi,0x6d6fcfdf
  4144fa:	dec    esi
  4144fb:	and    esp,DWORD PTR [eax+0x71]
  4144fe:	rol    BYTE PTR [edi+0x5dbc3bc2],1
  414504:	push   edx
  414505:	push   ebp
  414506:	jb     0x414508
  414508:	push   0x24d7c2bd
  41450d:	cmp    BYTE PTR [ebx+0x7233bcd7],bh
  414513:	fld    st(3)
  414515:	das    
  414516:	lock add ecx,DWORD PTR [edi+esi*8]
  41451a:	cmp    DWORD PTR [ecx-0x39b1d5d6],edi
  414520:	jno    0x4144f5
  414522:	pop    edi
  414523:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414525:	(bad)  
  414527:	pop    ss
  414528:	dec    DWORD PTR ds:0x300a57a4
  41452e:	mov    esi,0x70be56b3
  414533:	in     al,dx
  414534:	inc    esp
  414535:	fisub  WORD PTR [eax-0x25]
  414538:	xchg   edi,eax
  414539:	dec    esi
  41453a:	data16 jnp 0x4145a2
  41453d:	stos   DWORD PTR es:[edi],eax
  41453e:	jp     0x41454b
  414540:	in     al,0x1
  414542:	outs   dx,BYTE PTR ds:[esi]
  414543:	push   eax
  414544:	mov    esp,0xe93e7bcb
  414549:	inc    ecx
  41454a:	or     BYTE PTR [ebx],cl
  41454c:	cld    
  41454d:	ror    DWORD PTR [ebx+0x4e67ba21],cl
  414553:	inc    esp
  414554:	popa   
  414555:	inc    ebp
  414556:	es jmp 0x414509
  414559:	sahf   
  41455a:	(bad)  
  41455c:	sbb    DWORD PTR [eax+0x636cb9ea],0xffffffd3
  414563:	push   ss
  414564:	pop    esp
  414565:	scas   eax,DWORD PTR es:[edi]
  414566:	cdq    
  414567:	lahf   
  414568:	in     al,dx
  414569:	mov    eax,0x612d97e
  41456e:	das    
  41456f:	mov    dl,0xd2
  414571:	(bad)  
  414572:	adc    al,ch
  414574:	stos   DWORD PTR es:[edi],eax
  414575:	(bad)  
  414576:	in     eax,dx
  414577:	cmp    al,0xb4
  414579:	shl    DWORD PTR [esi],0xc9
  41457c:	sbb    BYTE PTR [ebx],ah
  41457e:	aad    0x17
  414580:	shl    cl,1
  414582:	inc    ebx
  414583:	call   0x74950d7b
  414588:	inc    esp
  414589:	sti    
  41458a:	push   ecx
  41458b:	push   esi
  41458c:	jns    0x4145c9
  41458e:	stos   BYTE PTR es:[edi],al
  41458f:	fisubr WORD PTR [edi-0x29735c71]
  414595:	dec    eax
  414596:	cli    
  414597:	jg     0x414550
  414599:	pop    ebp
  41459a:	xchg   edx,eax
  41459b:	jbe    0x414570
  41459d:	adc    al,BYTE PTR [edx+edi*4]
  4145a0:	pop    esi
  4145a1:	push   es
  4145a2:	lods   eax,DWORD PTR ds:[esi]
  4145a3:	push   esi
  4145a4:	add    dl,BYTE PTR [edx+0x57]
  4145a7:	mov    ch,0x9a
  4145a9:	fsub   QWORD PTR [ebx-0x403b59f2]
  4145af:	push   ds
  4145b0:	iret   
  4145b1:	xor    cl,ch
  4145b3:	mov    ah,0xaa
  4145b5:	pusha  
  4145b6:	sub    BYTE PTR [eax],cl
  4145b8:	iret   
  4145b9:	stc    
  4145ba:	je     0x414569
  4145bc:	dec    ebp
  4145bd:	jp     0x41460f
  4145bf:	mov    esi,0x5a86062
  4145c4:	and    edi,DWORD PTR [edi-0x22]
  4145c7:	movzx  ebx,WORD PTR [edi]
  4145ca:	stc    
  4145cb:	retf   
  4145cc:	mov    edi,0xf5ad0190
  4145d1:	pop    esi
  4145d2:	mov    ecx,0xb95510a2
  4145d7:	ins    BYTE PTR es:[edi],dx
  4145d8:	(bad)  
  4145d9:	jb     0x4145ee
  4145db:	sti    
  4145dc:	cmp    ebp,0x4f
  4145df:	add    DWORD PTR [edi],edi
  4145e1:	div    DWORD PTR [esi]
  4145e3:	enter  0xae7c,0x2a
  4145e7:	sbb    DWORD PTR [edx],edi
  4145e9:	push   ebp
  4145ea:	retf   
  4145eb:	jne    0x414573
  4145ed:	stos   DWORD PTR es:[edi],eax
  4145ee:	jae    0x41466b
  4145f0:	add    BYTE PTR [esi+eax*8+0x521406d9],cl
  4145f7:	adc    eax,0x5f1bf1c
  4145fc:	mov    edx,0x6cbc994a
  414601:	push   es
  414602:	out    0xc2,eax
  414604:	push   0xfbad0a8c
  414609:	scas   eax,DWORD PTR es:[edi]
  41460a:	in     eax,0x65
  41460c:	int    0x1d
  41460e:	or     BYTE PTR [ebp+0x44],cl
  414611:	mov    ebx,0x4dea7ed5
  414616:	cmp    eax,0xe886861d
  41461b:	test   eax,0x4b5f6fb3
  414620:	pop    esp
  414621:	dec    esi
  414622:	cld    
  414623:	es in  eax,0x5b
  414626:	push   ecx
  414627:	adc    ecx,DWORD PTR [edx-0x58]
  41462a:	push   edi
  41462b:	mov    edx,esp
  41462d:	xor    al,0xfb
  41462f:	push   esp
  414630:	aaa    
  414631:	scas   al,BYTE PTR es:[edi]
  414632:	test   eax,0x213a8687
  414637:	cli    
  414638:	mov    ebx,0xfd14cad7
  41463d:	pop    ebx
  41463e:	inc    ebp
  41463f:	xor    al,0xbd
  414641:	adc    DWORD PTR [ebx-0x389905dd],esi
  414647:	pushf  
  414648:	xor    al,0x9c
  41464a:	es xor bh,ah
  41464d:	hlt    
  41464e:	inc    eax
  41464f:	adc    DWORD PTR [esi],edx
  414651:	(bad)  
  414652:	mov    esi,0x1548234a
  414657:	pop    ss
  414658:	add    eax,0x6de71ad5
  41465d:	or     al,0xad
  41465f:	mov    edi,0x45e277dc
  414664:	jp     0x4146e3
  414666:	xor    eax,eax
  414668:	pop    esp
  414669:	ins    BYTE PTR es:[edi],dx
  41466a:	add    DWORD PTR [ecx-0x70],esi
  41466d:	mov    BYTE PTR [eax],ch
  41466f:	jne    0x4145f8
  414671:	push   ds
  414672:	mov    edx,0xb1c387ee
  414677:	jmp    0xe8a:0x3260d2d5
  41467e:	pop    ds
  41467f:	fsub   st,st(6)
  414681:	test   esp,0x49508c6c
  414687:	mov    bl,0xe8
  414689:	stc    
  41468a:	mov    DWORD PTR [edx+0x37c1ec52],0x63ad022c
  414694:	test   eax,0x5f4636cc
  414699:	mov    DWORD PTR [ebp+0xbf67344],ebx
  41469f:	fidiv  WORD PTR [edx-0x5d]
  4146a2:	or     bh,BYTE PTR [edx-0x6ba49d93]
  4146a8:	popa   
  4146a9:	add    al,0xc5
  4146ab:	in     al,0x38
  4146ad:	push   edi
  4146ae:	mov    cl,al
  4146b0:	fild   QWORD PTR [ecx]
  4146b2:	das    
  4146b3:	and    ah,BYTE PTR [edx+0x1f]
  4146b6:	adc    bh,dh
  4146b8:	sub    eax,0x37d61a7a
  4146bd:	jmp    0x414708
  4146bf:	in     al,dx
  4146c0:	clc    
  4146c1:	push   ebx
  4146c2:	ret    0x9ed7
  4146c5:	(bad)
  4146c9:	idiv   eax
  4146cb:	adc    al,0xc0
  4146cd:	(bad)  
  4146ce:	xor    al,0x6b
  4146d0:	xchg   edi,eax
  4146d1:	jecxz  0x4146d3
  4146d3:	jp     0x414705
  4146d5:	cmp    DWORD PTR [esi],0x29
  4146d8:	call   0xa361:0xaa83e429
  4146df:	mov    ch,BYTE PTR [edx-0x26f2ae8a]
  4146e5:	fmul   st,st(1)
  4146e7:	jl     0x4146e8
  4146e9:	or     BYTE PTR [eax],ch
  4146eb:	xchg   ecx,eax
  4146ec:	mov    ecx,0x23a828cd
  4146f1:	iret   
  4146f2:	push   ss
  4146f3:	pop    ds
  4146f4:	pusha  
  4146f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f6:	gs xchg esp,eax
  4146f8:	out    dx,eax
  4146f9:	lods   al,BYTE PTR ds:[esi]
  4146fa:	mov    ebx,0xde083971
  4146ff:	sbb    eax,0x8fae65bf
  414704:	sub    DWORD PTR [esi],ebp
  414706:	sbb    eax,0x9344d45c
  41470b:	add    eax,0x5d0c60b4
  414710:	scas   eax,DWORD PTR es:[edi]
  414711:	sbb    cl,BYTE PTR [edi-0x5d]
  414714:	test   DWORD PTR [eax-0x3cebabb],ebp
  41471a:	fstp   TBYTE PTR [ebx]
  41471c:	cmp    BYTE PTR [edx+0x45],bh
  41471f:	sbb    eax,0x7cd6c4f0
  414724:	add    ch,ah
  414726:	inc    ebp
  414727:	push   ss
  414728:	add    BYTE PTR [esi+edx*1],0xcf
  41472c:	add    ebx,DWORD PTR [esi+0x7a]
  41472f:	xor    cl,ah
  414731:	cmp    bh,BYTE PTR [ecx]
  414733:	mov    ah,0xc3
  414735:	push   es
  414736:	pmaxsw mm4,QWORD PTR [esi]
  414739:	mov    edi,0x84b98537
  41473e:	inc    esi
  41473f:	jge    0x414780
  414741:	and    edx,DWORD PTR [eax+0x5e454956]
  414747:	mov    ebx,0x4230fb89
  41474c:	out    0x80,eax
  41474e:	retf   0x3dd4
  414751:	into   
  414752:	adc    al,0x49
  414754:	xchg   bl,bh
  414756:	pusha  
  414757:	and    eax,0xe2061e09
  41475c:	stc    
  41475d:	jbe    0x4146e8
  41475f:	jecxz  0x41476d
  414761:	shl    BYTE PTR [edi-0x3e],cl
  414764:	fbld   TBYTE PTR [ebp+ebp*1+0x67863b3b]
  41476b:	(bad)  
  41476d:	ror    DWORD PTR [esi+edx*2-0x79],cl
  414771:	sbb    eax,0xfda8ef2c
  414776:	aaa    
  414777:	inc    esi
  414778:	inc    edi
  414779:	aaa    
  41477a:	pop    ds
  41477b:	add    eax,0x4768883d
  414780:	dec    ecx
  414781:	in     eax,dx
  414782:	or     BYTE PTR [edx],ch
  414784:	fwait
  414785:	xchg   DWORD PTR [edi],ecx
  414787:	dec    ecx
  414788:	(bad)  
  414789:	xchg   edx,eax
  41478a:	test   al,0x83
  41478c:	arpl   si,sp
  41478e:	mov    bl,BYTE PTR [ebp-0xa]
  414791:	xchg   esp,eax
  414792:	add    DWORD PTR [eax-0x51],esp
  414795:	sbb    eax,0x44813a4b
  41479a:	push   edi
  41479b:	pop    esp
  41479c:	call   0x3f74:0xfd375ef6
  4147a3:	ret    
  4147a4:	jmp    FWORD PTR [esi+0x1f466416]
  4147aa:	imul   edx,DWORD PTR [esi],0xffffff94
  4147ad:	mov    al,ds:0x28f157a8
  4147b2:	ja     0x414769
  4147b4:	push   cs
  4147b5:	push   esi
  4147b6:	mov    eax,0xe9a3402d
  4147bb:	push   ds
  4147bc:	fist   DWORD PTR [ebx]
  4147be:	mov    bl,0xee
  4147c0:	xchg   edi,eax
  4147c1:	sub    BYTE PTR [ebp-0x22],dl
  4147c4:	(bad)  
  4147c5:	pushf  
  4147c6:	mov    ds:0x32b61d8d,al
  4147cb:	in     eax,0xd9
  4147cd:	hlt    
  4147ce:	xchg   ecx,eax
  4147cf:	loopne 0x4147fd
  4147d1:	jecxz  0x41479c
  4147d3:	or     DWORD PTR [ebx],esp
  4147d5:	inc    edi
  4147d6:	sub    eax,0xecf3e82c
  4147db:	xchg   edx,eax
  4147dc:	or     bh,ch
  4147de:	mov    bh,0x21
  4147e0:	jbe    0x4147bf
  4147e2:	int3   
  4147e3:	add    bh,BYTE PTR [ebp-0x1e8817bd]
  4147e9:	iret   
  4147ea:	jne    0x414823
  4147ec:	xor    al,0xc8
  4147ee:	cmp    edi,0xd8d38d2a
  4147f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f5:	gs ins BYTE PTR es:[edi],dx
  4147f7:	sbb    ebp,DWORD PTR [ecx+edx*8-0x46bd6d5b]
  4147fe:	xchg   esi,eax
  4147ff:	and    eax,0xa16da7b4
  414804:	jnp    0x4147ad
  414806:	mov    ds:0x4f918a6d,al
  41480b:	push   eax
  41480c:	dec    edi
  41480d:	stc    
  41480e:	pop    edi
  41480f:	into   
  414810:	dec    edi
  414811:	(bad)  
  414812:	sbb    al,BYTE PTR [ebx+0x77]
  414815:	cs jg  0x4147cb
  414818:	sub    BYTE PTR [edi+0x5177c720],ah
  41481e:	repnz add DWORD PTR [edi],esp
  414821:	cmp    eax,edi
  414823:	je     0x41482e
  414825:	and    dh,bl
  414827:	mov    dh,0x20
  414829:	call   0x969b:0xa39c861d
  414830:	hlt    
  414831:	and    BYTE PTR [edx-0x33],0x2
  414835:	sbb    al,0x23
  414837:	cmp    BYTE PTR [edx+0x22],0xe3
  41483b:	mov    edi,DWORD PTR [edi+0x45081832]
  414841:	jle    0x41483f
  414843:	mov    bl,0xd4
  414845:	mov    esi,DWORD PTR [eax+0x0]
  414848:	add    eax,0xf814a192
  41484d:	outs   dx,BYTE PTR ds:[esi]
  41484e:	jecxz  0x4147e0
  414850:	retf   
  414851:	rcl    esi,0xd3
  414854:	jmp    0x580b:0x21731c8e
  41485b:	lock sbb edi,DWORD PTR [esi+0x207f8d33]
  414862:	stos   BYTE PTR es:[edi],al
  414863:	ret    0x2a09
  414866:	out    dx,al
  414867:	pop    eax
  414868:	and    al,0x34
  41486a:	and    DWORD PTR [ebx+0x11],ebp
  41486d:	sbb    eax,0xdf66a7be
  414872:	mov    eax,ds:0x4acb0e64
  414877:	sbb    BYTE PTR [ebp+0x30fb6126],cl
  41487d:	inc    esi
  41487e:	cs dec ebx
  414880:	cli    
  414881:	in     eax,dx
  414882:	cmp    al,dh
  414884:	mov    al,ds:0x2fab3e66
  414889:	cdq    
  41488a:	push   cs
  41488b:	cld    
  41488c:	sub    al,0x16
  41488e:	pop    esp
  41488f:	loope  0x41481a
  414891:	fwait
  414892:	mov    ah,BYTE PTR [edi]
  414894:	fsubr  QWORD PTR ds:0xb4712284
  41489a:	push   ebx
  41489b:	addr16 inc ebp
  41489d:	inc    ebx
  41489e:	sub    esp,edi
  4148a0:	jns    0x41484a
  4148a2:	mov    al,0x29
  4148a4:	ins    DWORD PTR es:[edi],dx
  4148a5:	mov    esi,?
  4148a7:	lock mov bh,0xf
  4148aa:	xor    edi,DWORD PTR ds:0x8a5d80b7
  4148b0:	xor    dh,BYTE PTR [edi]
  4148b2:	adc    BYTE PTR [edi],al
  4148b4:	mov    edi,0x3aeb7837
  4148b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ba:	push   ss
  4148bb:	inc    eax
  4148bc:	push   0x4203baca
  4148c1:	repnz push 0xffffff8e
  4148c4:	push   ebx
  4148c5:	jg     0x41488d
  4148c7:	inc    edi
  4148c8:	xor    eax,0xe1ba301a
  4148cd:	xchg   ebx,eax
  4148ce:	mov    dh,BYTE PTR [ebx]
  4148d0:	loop   0x4148e1
  4148d2:	fyl2x  
  4148d4:	dec    ebp
  4148d5:	out    dx,al
  4148d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d7:	and    eax,0x20480a64
  4148dc:	jge    0x414882
  4148de:	cmp    al,0xf9
  4148e0:	cli    
  4148e1:	imul   edi,DWORD PTR [ebx],0x33
  4148e4:	sbb    cl,BYTE PTR [eax]
  4148e6:	leave  
  4148e7:	or     DWORD PTR [ecx+0x28],0x54355276
  4148ee:	cdq    
  4148ef:	adc    bl,BYTE PTR [esi+0x4505a657]
  4148f5:	aad    0x4
  4148f7:	pop    ebx
  4148f8:	in     eax,0x2e
  4148fa:	lahf   
  4148fb:	neg    BYTE PTR [ebx]
  4148fd:	cmp    eax,DWORD PTR [ecx+0xf96f51e]
  414903:	push   0xa9adf620
  414908:	repz push ebx
  41490a:	adc    esp,ebx
  41490c:	sbb    BYTE PTR [edx+0x76604b40],dl
  414912:	(bad)  
  414913:	int    0xd0
  414915:	jbe    0x41498b
  414917:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414919:	inc    ebx
  41491a:	xchg   DWORD PTR [eax+ebp*8+0x36],esi
  41491e:	enter  0xa67a,0xd6
  414922:	pop    ebp
  414923:	jmp    0x4148a8
  414925:	xchg   ebx,eax
  414926:	cmp    ah,ch
  414928:	ret    
  414929:	jl     0x41492e
  41492b:	ss sbb al,0x90
  41492e:	mov    bl,0xfe
  414930:	dec    ecx
  414931:	in     al,dx
  414932:	add    eax,0x4964fd4b
  414937:	cli    
  414938:	xchg   ch,al
  41493a:	scas   eax,DWORD PTR es:[edi]
  41493b:	mov    esp,0x98b6a784
  414940:	ret    
  414941:	retf   
  414942:	das    
  414943:	rol    esp,cl
  414945:	and    BYTE PTR [esi],0xb3
  414948:	pop    es
  414949:	dec    esi
  41494a:	retf   0x50ee
  41494d:	mov    eax,DWORD PTR cs:[edx-0x1e]
  414951:	scas   eax,DWORD PTR es:[edi]
  414952:	mov    ds:0x3e1d77b8,eax
  414957:	jp     0x414938
  414959:	xor    ebx,ecx
  41495b:	and    ebp,esp
  41495d:	bound  eax,QWORD PTR [edx+0x2f188795]
  414963:	pop    edx
  414964:	call   0x283bf1f5
  414969:	jbe    0x414914
  41496b:	jle    0x414979
  41496d:	sahf   
  41496e:	call   0x53691f18
  414973:	(bad)  
  414974:	sbb    eax,ecx
  414976:	inc    ebp
  414977:	dec    eax
  414978:	and    eax,0x3e70f818
  41497d:	dec    ebp
  41497e:	or     eax,0x506e3580
  414983:	dec    esi
  414984:	xor    DWORD PTR [edx],ecx
  414986:	daa    
  414987:	pop    edi
  414988:	aas    
  414989:	mov    cl,BYTE PTR [edi-0x6fb8db2]
  41498f:	cmp    eax,0x3db8d98
  414994:	stos   BYTE PTR es:[edi],al
  414995:	icebp  
  414996:	loopne 0x414931
  414998:	sti    
  414999:	jg     0x4149a5
  41499b:	and    DWORD PTR [ebx-0x3b],ecx
  41499e:	mov    edi,0xafa5182d
  4149a3:	(bad)  
  4149a5:	cmp    eax,DWORD PTR [ebx+0x19]
  4149a8:	adc    bh,BYTE PTR [edi-0x298381f3]
  4149ae:	cmp    eax,0x9ab892b3
  4149b3:	jb     0x414a07
  4149b5:	iret   
  4149b6:	(bad)  
  4149b7:	adc    ecx,DWORD PTR [bp+si]
  4149ba:	pushf  
  4149bb:	fnstenv [ecx+0x5aec68b9]
  4149c1:	xlat   BYTE PTR ds:[ebx]
  4149c2:	push   esp
  4149c3:	(bad)  [eax]
  4149c5:	add    eax,0xe746d700
  4149ca:	icebp  
  4149cb:	int    0x3a
  4149cd:	xor    esp,esp
  4149cf:	into   
  4149d0:	inc    eax
  4149d1:	or     eax,0x71324579
  4149d6:	(bad)  
  4149d7:	cmp    eax,0xa947185c
  4149dc:	cmp    dh,BYTE PTR [ebp+0x335bef3f]
  4149e2:	jge    0x4149fb
  4149e4:	cmp    DWORD PTR ds:0x195ac8f5,0x5496d935
  4149ee:	cli    
  4149ef:	mov    bl,0x77
  4149f1:	je     0x414997
  4149f3:	retf   
  4149f4:	mov    ds:0x8902ff78,al
  4149f9:	add    BYTE PTR [eax+0x43a312cb],cl
  4149ff:	in     al,dx
  414a00:	mov    ebp,0xb8eb8825
  414a05:	int    0x5b
  414a07:	retf   
  414a08:	js     0x4149d9
  414a0a:	shl    DWORD PTR [ecx+0x3f2d1f89],0x14
  414a11:	push   0xffffff9e
  414a13:	std    
  414a14:	pop    es
  414a15:	or     DWORD PTR [esi-0x514379a2],edx
  414a1b:	xor    ebx,eax
  414a1d:	adc    ah,dl
  414a1f:	sbb    DWORD PTR [esi+0x4b],esi
  414a22:	aaa    
  414a23:	enter  0x3edc,0x15
  414a27:	jae    0x414a56
  414a29:	cs jo  0x414a75
  414a2c:	std    
  414a2d:	out    dx,al
  414a2e:	mov    edx,0x5b5429f0
  414a33:	sbb    eax,0x246cdaac
  414a38:	ret    
  414a39:	jmp    0x4e1a:0xe875d6c1
  414a40:	(bad)  
  414a41:	xor    edi,DWORD PTR [ebp+ecx*8-0x45761085]
  414a48:	out    0xa9,al
  414a4a:	shr    DWORD PTR ds:0xb33687cc,0x7c
  414a51:	ror    BYTE PTR [edi+edi*1+0x51178648],0x4
  414a59:	and    dh,BYTE PTR [eax]
  414a5b:	stos   DWORD PTR es:[edi],eax
  414a5c:	cmp    DWORD PTR [esi-0x2a],0xc
  414a60:	leave  
  414a61:	jle    0x414aa2
  414a63:	les    edx,FWORD PTR ds:0xa4a618e1
  414a69:	add    ch,BYTE PTR [edi]
  414a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a6c:	mov    cl,0x84
  414a6e:	ss cdq 
  414a70:	aam    0x6c
  414a72:	sub    ah,BYTE PTR [eax]
  414a74:	je     0x414a7f
  414a76:	mov    ds:0x50a10fb6,eax
  414a7b:	xlat   BYTE PTR ds:[ebx]
  414a7c:	and    DWORD PTR [ebx],eax
  414a7e:	loopne 0x414a62
  414a80:	mov    al,ds:0xb05548f
  414a85:	outs   dx,DWORD PTR ds:[esi]
  414a86:	loope  0x414a6f
  414a88:	xor    esi,DWORD PTR [ebx-0x6d7c03a5]
  414a8e:	mov    ds:0x5836b27a,eax
  414a93:	sub    esp,ecx
  414a95:	gs cld 
  414a97:	xchg   ecx,eax
  414a98:	mov    dh,BYTE PTR [ecx]
  414a9a:	jb     0x414ab3
  414a9c:	lods   al,BYTE PTR ds:[esi]
  414a9d:	mov    bl,0x7e
  414a9f:	dec    esi
  414aa0:	mov    ch,0x9c
  414aa2:	lds    eax,FWORD PTR [ebx]
  414aa4:	mov    al,0x2e
  414aa6:	sbb    DWORD PTR ss:[edi+edi*2+0x7e],esp
  414aab:	leave  
  414aac:	jae    0x414ab4
  414aae:	(bad)  
  414aaf:	push   ecx
  414ab0:	jo     0x414a52
  414ab2:	mov    dh,0x7d
  414ab4:	sahf   
  414ab5:	and    BYTE PTR [ecx+ecx*1-0x4a],0x1c
  414aba:	push   es
  414abb:	xor    DWORD PTR [ebx],edi
  414abd:	and    esi,ecx
  414abf:	js     0x414b21
  414ac1:	pop    es
  414ac2:	adc    eax,0xb9b6e419
  414ac7:	push   edi
  414ac8:	mov    dl,0x75
  414aca:	ins    BYTE PTR es:[edi],dx
  414acb:	push   ebx
  414acc:	add    eax,0x8833ecce
  414ad1:	mov    cl,0xda
  414ad3:	fldcw  WORD PTR [bp+di+0x66]
  414ad7:	or     al,0x65
  414ad9:	push   esp
  414ada:	fld    DWORD PTR [edx-0x2c]
  414add:	or     al,0x36
  414adf:	mov    BYTE PTR [edi],0xb8
  414ae2:	mov    ebx,0x376b7ba4
  414ae7:	movq   mm3,QWORD PTR [edi-0x6c6b3860]
  414aee:	jne    0x414ad6
  414af0:	(bad)  
  414af1:	in     eax,0x77
  414af3:	in     al,dx
  414af4:	xor    al,0x31
  414af6:	add    ah,BYTE PTR ds:0x9f116164
  414afc:	add    eax,0xdc0730f0
  414b01:	stos   DWORD PTR es:[edi],eax
  414b02:	aaa    
  414b03:	xchg   ecx,eax
  414b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b05:	inc    esp
  414b06:	mov    ebx,0x6b88d720
  414b0b:	jmp    0x414afb
  414b0d:	and    ah,bl
  414b0f:	xor    DWORD PTR [eax-0x29],edi
  414b12:	sbb    dl,BYTE PTR [edi]
  414b14:	mov    edx,0x6d6def11
  414b19:	add    ebp,DWORD PTR [ebx-0x43e5a7e2]
  414b1f:	lods   al,BYTE PTR ds:[esi]
  414b20:	in     al,0x47
  414b22:	sub    eax,0x211ffe72
  414b27:	inc    esi
  414b28:	(bad)  [ebp+0x73575ed3]
  414b2e:	pop    eax
  414b2f:	test   BYTE PTR [eax-0x1e10d19a],0x18
  414b36:	or     al,0x93
  414b38:	mov    ebp,0x5fa7e55
  414b3d:	mov    edx,0xbf15ede3
  414b42:	outs   dx,BYTE PTR ds:[esi]
  414b43:	inc    ebx
  414b44:	enter  0x5a60,0x74
  414b48:	push   esi
  414b49:	xor    al,0x3c
  414b4b:	iret   
  414b4c:	and    ah,bh
  414b4e:	shl    DWORD PTR [edx],cl
  414b50:	ret    0xf9db
  414b53:	push   es
  414b54:	adc    al,0xc7
  414b56:	mov    ah,0x7b
  414b58:	mov    ebx,0x2071c6c7
  414b5d:	xlat   BYTE PTR ds:[ebx]
  414b5e:	jo     0x414bd0
  414b60:	jne    0x414b2a
  414b62:	adc    ch,dh
  414b64:	dec    esp
  414b65:	adc    BYTE PTR [ebp-0x3b],ch
  414b68:	fld    TBYTE PTR [esi+0x6af998b2]
  414b6e:	xor    eax,0x63158cac
  414b73:	sub    dh,BYTE PTR [esi-0x447081f0]
  414b79:	xchg   ecx,eax
  414b7a:	push   edx
  414b7b:	lock sub al,0xdb
  414b7e:	or     eax,0x4ae0fdaa
  414b83:	rcr    BYTE PTR [edx+esi*1-0x7aab10d9],0x1
  414b8b:	cmp    eax,0x7382f7f2
  414b90:	push   esi
  414b91:	push   esp
  414b92:	mov    ds:0xaa2179d7,al
  414b97:	mov    BYTE PTR [edx+0x7b4b0381],al
  414b9d:	and    dh,al
  414b9f:	stc    
  414ba0:	add    eax,0x942f75c0
  414ba5:	pop    eax
  414ba6:	adc    al,0x34
  414ba8:	fsubp  st(6),st
  414baa:	push   0x47e4ac0d
  414baf:	int    0x3b
  414bb1:	popf   
  414bb2:	add    eax,0x921db844
  414bb7:	pop    edi
  414bb8:	scas   eax,DWORD PTR es:[edi]
  414bb9:	mov    dh,0xc7
  414bbb:	pop    ds
  414bbc:	icebp  
  414bbd:	sar    BYTE PTR [ebp+0x4c],0x45
  414bc1:	cmp    al,0xe2
  414bc3:	lock cmp al,0xff
  414bc6:	jne    0x414c1a
  414bc8:	mov    dh,BYTE PTR [edi-0x6599b64f]
  414bce:	push   esi
  414bcf:	mov    bh,0xfa
  414bd1:	and    al,0x7c
  414bd3:	add    dl,cl
  414bd5:	mov    bl,0xfa
  414bd7:	js     0x414bb6
  414bd9:	inc    esi
  414bda:	daa    
  414bdb:	mov    BYTE PTR [eax],ch
  414bdd:	mov    cl,0x59
  414bdf:	fdiv   QWORD PTR [edx]
  414be1:	dec    edi
  414be2:	fidivr WORD PTR [ecx-0x4eff1f3e]
  414be8:	jb     0x414bae
  414bea:	repnz dec eax
  414bec:	aam    0x5e
  414bee:	xchg   DWORD PTR [esp+eax*8-0x580297d4],eax
  414bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf6:	fldenv [ebp-0x1]
  414bf9:	sub    ecx,DWORD PTR [ebx-0x77fc67e8]
  414bff:	(bad)  
  414c00:	sti    
  414c01:	(bad)  
  414c03:	sbb    DWORD PTR [esi],edx
  414c05:	pusha  
  414c06:	and    bl,BYTE PTR [esi]
  414c08:	jge    0x414be9
  414c0a:	pop    ds
  414c0b:	repz add al,0xd3
  414c0e:	jnp    0x414bdd
  414c10:	xor    esp,DWORD PTR [ebp-0x4a]
  414c13:	push   eax
  414c14:	mov    edx,0xe95ac765
  414c19:	sub    DWORD PTR [ecx],ebp
  414c1b:	in     eax,dx
  414c1c:	jp     0x414c76
  414c1e:	fisttp DWORD PTR [ebx-0x76]
  414c21:	adc    al,BYTE PTR [eax-0x498780f0]
  414c27:	sub    eax,0x17888ad1
  414c2c:	xchg   edi,eax
  414c2d:	jno    0x414c4f
  414c2f:	(bad)  
  414c30:	stc    
  414c31:	lea    edx,[edi+edx*1]
  414c34:	xchg   edx,eax
  414c35:	into   
  414c36:	jge    0x414c86
  414c38:	cwde   
  414c39:	iret   
  414c3a:	pop    DWORD PTR [ebp+0x45a462e0]
  414c40:	jb     0x414bda
  414c42:	jl     0x414c36
  414c44:	and    bh,ch
  414c46:	xchg   esi,eax
  414c47:	and    DWORD PTR ds:0x2ee2c4c8,ebp
  414c4d:	sbb    DWORD PTR [eax+0x62],ebx
  414c50:	pop    ebx
  414c51:	nop
  414c52:	stos   BYTE PTR es:[edi],al
  414c53:	(bad)  
  414c54:	push   cs
  414c55:	or     cl,ch
  414c57:	fisubr DWORD PTR [bp+si+0x62e3]
  414c5c:	(bad)  
  414c5d:	scas   eax,DWORD PTR es:[edi]
  414c5e:	and    ah,BYTE PTR [ebx-0xe12729]
  414c64:	repnz pop eax
  414c66:	pop    edi
  414c67:	jnp    0x414c9b
  414c69:	mov    eax,ds:0xbff6d4b1
  414c6e:	mov    bl,0xe
  414c70:	jmp    0x69ad:0xfb54436
  414c77:	and    eax,0xf4462c41
  414c7c:	test   DWORD PTR [esi],0xec66721
  414c82:	bound  edx,QWORD PTR [esi+edx*4]
  414c85:	mov    ds:0xb2296c28,al
  414c8a:	(bad)
  414c8e:	ds jl  0x414cab
  414c91:	imul   edx,eax,0x46eefb51
  414c97:	loopne 0x414c54
  414c99:	dec    ebp
  414c9a:	ds (bad) 
  414c9c:	dec    BYTE PTR [ebx]
  414c9e:	mov    ebx,eax
  414ca0:	push   ss
  414ca1:	sbb    eax,0x7cb2331e
  414ca6:	or     eax,0x9a7d7e0c
  414cab:	or     cl,BYTE PTR [edi]
  414cad:	(bad)  
  414cae:	jae    0x414c75
  414cb0:	and    BYTE PTR [edi+ecx*2-0x25286d44],ch
  414cb7:	mov    dh,BYTE PTR [edi]
  414cb9:	inc    ebp
  414cba:	inc    edi
  414cbb:	pushf  
  414cbc:	lea    esp,[ebx-0x5c6225b0]
  414cc2:	test   al,0xb4
  414cc4:	(bad)  
  414cc5:	out    0x90,eax
  414cc7:	xchg   ecx,eax
  414cc8:	inc    ecx
  414cc9:	clc    
  414cca:	dec    ecx
  414ccb:	scas   eax,DWORD PTR es:[edi]
  414ccc:	xor    al,0x9a
  414cce:	pop    ecx
  414ccf:	xchg   edx,eax
  414cd0:	sub    DWORD PTR [ebx+esi*1+0x59],ebx
  414cd4:	test   BYTE PTR [ebp+ebx*1+0x44d2edf1],ah
  414cdb:	jg     0x414cb7
  414cdd:	and    al,0x75
  414cdf:	sbb    esi,ecx
  414ce1:	push   ds
  414ce2:	cdq    
  414ce3:	pusha  
  414ce4:	adc    bh,BYTE PTR [edx-0x10]
  414ce7:	xor    DWORD PTR [ecx+ebx*2-0x41a8e810],eax
  414cee:	jne    0x414d20
  414cf0:	pop    edi
  414cf1:	mov    dh,bl
  414cf3:	dec    ebx
  414cf4:	stos   BYTE PTR es:[edi],al
  414cf5:	test   DWORD PTR [eax+0x72],esi
  414cf8:	or     edi,edi
  414cfa:	fsubr  QWORD PTR [eax-0x2b651b5f]
  414d00:	xor    eax,0x1150abd4
  414d05:	xchg   esi,eax
  414d06:	in     al,0xab
  414d08:	arpl   bx,sp
  414d0a:	and    DWORD PTR [edx],eax
  414d0c:	xor    cl,dh
  414d0e:	sub    DWORD PTR [edx+0x52],esi
  414d11:	add    al,0x84
  414d13:	inc    eax
  414d14:	gs scas eax,DWORD PTR es:[edi]
  414d16:	scas   eax,DWORD PTR es:[edi]
  414d17:	add    bh,ch
  414d19:	je     0x414cc5
  414d1b:	add    eax,0xb650d33
  414d20:	cdq    
  414d21:	mov    ah,0x27
  414d23:	fdiv   DWORD PTR [ecx+0x20]
  414d26:	xchg   edi,eax
  414d27:	inc    DWORD PTR [ecx-0x3b]
  414d2a:	dec    edi
  414d2b:	dec    esp
  414d2c:	in     al,0xf
  414d2e:	adc    eax,0x2d339531
  414d33:	fisubr DWORD PTR [edi]
  414d35:	mov    DWORD PTR [esi+0x601768d9],ebx
  414d3b:	jge    0x414cbd
  414d3d:	hlt    
  414d3e:	cmc    
  414d3f:	jg     0x414d3f
  414d41:	inc    eax
  414d42:	aas    
  414d43:	pop    esp
  414d44:	sub    ch,bh
  414d46:	adc    bh,BYTE PTR [bx+di-0x441e]
  414d4b:	adc    al,0x54
  414d4d:	fist   WORD PTR [edx+0xe]
  414d50:	mov    ?,edx
  414d52:	adc    DWORD PTR [edi+0x3a],ebx
  414d55:	nop
  414d56:	call   FWORD PTR [edx-0x93e1043]
  414d5c:	pop    ebp
  414d5d:	repnz and BYTE PTR [ebx-0x59f8c1e7],dl
  414d64:	sbb    dh,dh
  414d66:	test   BYTE PTR [esi-0x1f0c579a],dh
  414d6c:	mov    bl,0x5b
  414d6e:	pop    ss
  414d6f:	out    dx,eax
  414d70:	adc    ch,BYTE PTR ds:0xcd3cc1c0
  414d76:	push   ds
  414d77:	and    al,0xfc
  414d79:	adc    eax,0xaec86835
  414d7e:	push   ebp
  414d7f:	inc    esi
  414d80:	pop    edx
  414d81:	cmp    eax,0xb9c1aac
  414d86:	loopne 0x414da9
  414d88:	mov    esi,0x6c7572a4
  414d8d:	pop    es
  414d8e:	les    esi,FWORD PTR [edi]
  414d90:	cmp    eax,0x48693da0
  414d95:	xchg   DWORD PTR [eax],eax
  414d97:	xchg   DWORD PTR [ecx+0x3d8944e],edx
  414d9d:	and    al,0x98
  414d9f:	mov    BYTE PTR [eax],bh
  414da1:	sub    ebx,DWORD PTR [esi-0x205540b7]
  414da7:	jbe    0x414e09
  414da9:	cmp    al,0xd0
  414dab:	mov    eax,0x8a0fb97f
  414db0:	les    edi,FWORD PTR [edx]
  414db2:	sar    BYTE PTR [edx+0x75],cl
  414db5:	leave  
  414db6:	ret    
  414db7:	sub    dl,dh
  414db9:	out    dx,eax
  414dba:	inc    ebx
  414dbb:	ficomp DWORD PTR [edi+edx*4+0x71e1a263]
  414dc2:	adc    BYTE PTR [eax],0x9e
  414dc5:	data16 shl al,1
  414dc8:	repnz cmp al,0x3e
  414dcb:	sbb    BYTE PTR [edx+0x7199b4c1],dl
  414dd1:	mov    ds:0xf45dbed2,eax
  414dd6:	call   0x9c55:0x508f6a2e
  414ddd:	and    DWORD PTR [edi+0x73],eax
  414de0:	retf   0xa50d
  414de3:	fbld   TBYTE PTR [esi+0x1751db7a]
  414de9:	mov    esp,0x8300382f
  414dee:	mov    edi,0x358c4408
  414df3:	mov    eax,0x77280ef8
  414df8:	cmp    edi,DWORD PTR [ecx]
  414dfa:	or     DWORD PTR [ebx+0x28e62618],ecx
  414e00:	arpl   WORD PTR [ebp+eiz*2-0x18],sp
  414e04:	pop    ds
  414e05:	jmp    0xf17b0540
  414e0a:	add    eax,0xa6471641
  414e0f:	(bad)  
  414e11:	inc    eax
  414e12:	das    
  414e13:	xor    eax,0x26c2ad35
  414e18:	test   BYTE PTR [edi-0x4b20e3a0],cl
  414e1e:	mov    ch,0xae
  414e20:	imul   ebp,DWORD PTR ds:[ecx+0x1a],0x9221fdde
  414e28:	sub    al,0xf7
  414e2a:	pop    ds
  414e2b:	aam    0x6e
  414e2d:	in     al,dx
  414e2e:	adc    eax,0xd32bf905
  414e33:	ja     0x414dc7
  414e35:	adc    bh,BYTE PTR [ebx-0x50]
  414e38:	int3   
  414e39:	loopne 0x414eae
  414e3b:	and    dh,dl
  414e3d:	sub    cl,ch
  414e3f:	es je  0x414e09
  414e42:	lods   eax,DWORD PTR ds:[esi]
  414e43:	dec    ebx
  414e44:	xchg   ebx,eax
  414e45:	cli    
  414e46:	call   0x965d:0x68d19571
  414e4d:	es and al,0xe9
  414e50:	int    0xe5
  414e52:	mov    ?,WORD PTR [ecx]
  414e54:	hlt    
  414e55:	ds fsubr st(7),st
  414e58:	sbb    eax,0x40003bec
  414e5d:	mov    dh,0xcd
  414e5f:	pusha  
  414e60:	push   ds
  414e61:	iret   
  414e62:	pop    edi
  414e63:	adc    DWORD PTR [edi+0x10c1044c],ebx
  414e69:	jmp    0xeddb:0x168f959a
  414e70:	pop    edx
  414e71:	je     0x414e0f
  414e73:	shr    bl,0x83
  414e76:	fiadd  DWORD PTR [esi+0x47]
  414e79:	xor    edi,DWORD PTR [esi+0xc]
  414e7c:	jle    0x414ed0
  414e7e:	retf   
  414e7f:	loop   0x414ecc
  414e81:	xchg   ebp,eax
  414e82:	and    BYTE PTR [edx],dh
  414e84:	repz popf 
  414e86:	inc    DWORD PTR ds:0x672f3593
  414e8c:	and    BYTE PTR [ecx-0xaad7f9],bh
  414e92:	int3   
  414e93:	mov    cl,0xa1
  414e95:	fs inc edi
  414e97:	popf   
  414e98:	push   0xb4c072fd
  414e9d:	push   ss
  414e9e:	ja     0x414f09
  414ea0:	dec    esp
  414ea1:	dec    esp
  414ea2:	leave  
  414ea3:	mov    edx,0x9c8e6b2f
  414ea8:	inc    ebp
  414ea9:	rcr    BYTE PTR [eax+esi*8],1
  414eac:	or     DWORD PTR [ebx],esp
  414eae:	arpl   WORD PTR [esi],cx
  414eb0:	add    eax,0x158dec02
  414eb5:	dec    esp
  414eb6:	outs   dx,DWORD PTR ds:[esi]
  414eb7:	xor    al,0x2e
  414eb9:	test   esi,ebp
  414ebb:	fs jmp 0xfc4df04f
  414ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec2:	dec    esi
  414ec3:	mov    cl,0x4a
  414ec5:	pop    ebp
  414ec6:	in     eax,0x12
  414ec8:	and    DWORD PTR [esi-0x47],edx
  414ecb:	scas   eax,DWORD PTR es:[edi]
  414ecc:	and    BYTE PTR [edi-0x1b],dl
  414ecf:	jp     0x414f0c
  414ed1:	sub    BYTE PTR [ebx],dh
  414ed3:	mov    ecx,0x3e74b812
  414ed8:	mov    dl,0xcb
  414eda:	shl    bl,cl
  414edc:	inc    esi
  414edd:	xor    al,0x5f
  414edf:	(bad)  
  414ee0:	push   0x28
  414ee2:	jo     0x414ec5
  414ee4:	test   eax,0xa74b6d77
  414ee9:	repz and BYTE PTR [ecx+ebp*4],bh
  414eed:	push   esp
  414eee:	cs mov bp,0x7384
  414ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef4:	aad    0xd6
  414ef6:	xchg   ecx,eax
  414ef7:	jg     0x414e8b
  414ef9:	and    dh,BYTE PTR [esi]
  414efb:	adc    ecx,DWORD PTR [ebp+0x5d]
  414efe:	cli    
  414eff:	hlt    
  414f00:	or     dl,BYTE PTR [ebp+0x1b205cfb]
  414f06:	push   0xc3146782
  414f0b:	dec    ebx
  414f0c:	cmp    DWORD PTR [ebx+ebp*1+0x62],ecx
  414f10:	imul   ebx,DWORD PTR [edx],0x23
  414f13:	jg     0x414ec2
  414f15:	mov    ?,WORD PTR ds:0xb8048f59
  414f1b:	out    0x86,al
  414f1d:	test   BYTE PTR [esi-0x7c],cl
  414f20:	push   ebx
  414f21:	jl     0x414efb
  414f23:	fucomip st,st(4)
  414f25:	push   ss
  414f26:	xlat   BYTE PTR ds:[ebx]
  414f27:	push   esi
  414f28:	pop    edi
  414f29:	mov    cs,eax
  414f2b:	sub    ebp,DWORD PTR [ecx]
  414f2d:	dec    esi
  414f2e:	push   0xe9b18e82
  414f33:	popf   
  414f34:	push   esi
  414f35:	call   0x3832c309
  414f3a:	loop   0x414f70
  414f3c:	push   ds
  414f3d:	xchg   ebp,eax
  414f3e:	daa    
  414f3f:	mov    esp,0x61226fbc
  414f44:	push   ecx
  414f45:	mov    dl,0xf3
  414f47:	mov    al,ds:0xea30f4b0
  414f4c:	js     0x414f8c
  414f4e:	jne    0x414f3a
  414f50:	sahf   
  414f51:	loop   0x414f37
  414f53:	add    eax,0xdf34563b
  414f58:	mov    ds:0xf638e380,al
  414f5d:	in     al,dx
  414f5e:	outs   dx,DWORD PTR ds:[esi]
  414f5f:	jmp    0x414fb7
  414f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f63:	(bad)  
  414f64:	cmc    
  414f65:	pop    ebx
  414f66:	mov    ch,0x87
  414f68:	jmp    0x414f3a
  414f6a:	sub    al,0x66
  414f6c:	jbe    0x414f37
  414f6e:	sbb    DWORD PTR [ecx],0x15
  414f71:	nop
  414f72:	pop    esp
  414f73:	fcomip st,st(2)
  414f75:	xchg   BYTE PTR [esi-0x7a887ea],dl
  414f7b:	jmp    0x414f8a
  414f7d:	lock int 0x1
  414f80:	add    ch,BYTE PTR [eax+eax*2+0x18]
  414f84:	dec    eax
  414f85:	jecxz  0x414f3f
  414f87:	fisttp WORD PTR [edi]
  414f89:	xchg   ebx,eax
  414f8a:	push   0x6087fd5b
  414f8f:	xchg   ebp,eax
  414f90:	push   edi
  414f91:	arpl   WORD PTR [edx-0x3bf857ec],sp
  414f97:	jl     0x414f1a
  414f99:	fwait
  414f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f9b:	inc    esp
  414f9c:	adc    al,0x69
  414f9e:	(bad)  
  414f9f:	and    cl,BYTE PTR [edi+eax*8-0x64]
  414fa3:	ds pop ecx
  414fa5:	or     bl,BYTE PTR [ebx-0xf008ad4]
  414fab:	mov    ch,0xe9
  414fad:	lods   eax,DWORD PTR ds:[esi]
  414fae:	xlat   BYTE PTR ds:[ebx]
  414faf:	pop    ebx
  414fb0:	add    eax,0x31c5f1fd
  414fb5:	lahf   
  414fb6:	mov    cs,WORD PTR [edx]
  414fb8:	(bad)  
  414fb9:	fdivrp st(5),st
  414fbb:	adc    eax,0xf8abbfaf
  414fc0:	ds mov cl,0xea
  414fc3:	loop   0x414f46
  414fc5:	ficom  DWORD PTR [edi+ebp*1]
  414fc8:	xor    al,0xa
  414fca:	ret    
  414fcb:	leave  
  414fcc:	adc    BYTE PTR [eax+eiz*8-0xf],ah
  414fd0:	cmc    
  414fd1:	push   esi
  414fd2:	push   eax
  414fd3:	(bad)  
  414fd4:	dec    esp
  414fd5:	or     DWORD PTR [esi-0x70],eax
  414fd8:	lahf   
  414fd9:	test   DWORD PTR [eax+0x64],0x76337edd
  414fe0:	icebp  
  414fe1:	mov    al,ds:0x260a2c47
  414fe6:	sub    esi,0xcf2542dc
  414fec:	or     al,0xf9
  414fee:	xchg   ebp,eax
  414fef:	mov    edi,0xd65e790d
  414ff4:	cmp    DWORD PTR [ebp-0x198f20a0],edi
  414ffa:	push   ebp
  414ffb:	sbb    DWORD PTR [eax-0x35c02e3b],esp
  415001:	jo     0x414fac
  415003:	cmp    al,0xb1
  415005:	xorps  xmm6,XMMWORD PTR ds:0x2247ce3f
  41500c:	and    eax,0x4a79e1ed
  415011:	sbb    eax,0x430a16a6
  415016:	xchg   edx,eax
  415017:	fwait
  415018:	sti    
  415019:	mov    dl,0xb8
  41501b:	or     BYTE PTR [esi+0x24c45590],ah
  415021:	xchg   edx,eax
  415022:	adc    al,0x56
  415024:	(bad)  
  415025:	mov    ebx,0x8b607ff4
  41502a:	inc    ecx
  41502b:	mov    eax,0x12f7282d
  415030:	sahf   
  415031:	pop    esp
  415032:	arpl   WORD PTR [ebx+0x439aa1c9],sp
  415038:	jne    0x41502f
  41503a:	sbb    eax,0xeb6b815c
  41503f:	inc    eax
  415040:	dec    ebp
  415041:	add    al,0x57
  415043:	push   ss
  415044:	lods   eax,DWORD PTR ds:[esi]
  415045:	lock call 0x9e7:0xefea1ba5
  41504d:	test   BYTE PTR [esi+esi*2+0x5b],ch
  415051:	cmp    eax,0xbadf76c1
  415056:	mov    esi,0x70617622
  41505b:	stc    
  41505c:	push   0xffffffee
  41505e:	cmp    DWORD PTR [edx-0x57],eax
  415061:	aaa    
  415062:	pop    eax
  415063:	fimul  WORD PTR [ebp-0x263c8c89]
  415069:	loopne 0x41508f
  41506b:	pop    ebp
  41506c:	out    dx,eax
  41506d:	fstp   DWORD PTR [ebx-0x3ec8694f]
  415073:	sub    DWORD PTR [ebp-0x77],edx
  415076:	test   al,0xe7
  415078:	popa   
  415079:	test   DWORD PTR [edi],ecx
  41507b:	rep outs dx,DWORD PTR gs:[esi]
  41507e:	ret    
  41507f:	mov    cl,0x8f
  415081:	push   esp
  415082:	inc    ecx
  415083:	rol    BYTE PTR [esp+edi*8],cl
  415086:	mov    al,ds:0xf4520862
  41508b:	cwde   
  41508c:	and    BYTE PTR [ebx],bh
  41508e:	repnz rcr ebp,0x1d
  415092:	pop    esp
  415093:	mov    ecx,0x8dc6b39e
  415098:	adc    edi,DWORD PTR fs:[edx-0x2b]
  41509c:	sti    
  41509d:	jl     0x41511a
  41509f:	(bad)  
  4150a1:	sub    eax,0xe3abf98c
  4150a6:	push   esp
  4150a7:	mov    ebp,gs
  4150a9:	dec    ebx
  4150aa:	cmp    al,0x4d
  4150ac:	fist   DWORD PTR [ebp-0x1a]
  4150af:	into   
  4150b0:	pop    ss
  4150b1:	cmc    
  4150b2:	shl    dh,0x41
  4150b5:	and    bh,BYTE PTR [edx-0x544f926d]
  4150bb:	mov    ds:0x886cb907,eax
  4150c0:	sub    ebx,DWORD PTR ds:0xb943461
  4150c6:	jnp    0x4150a6
  4150c8:	fs mov ebp,0xb3ff4250
  4150ce:	aad    0x69
  4150d0:	mov    esp,0x5a4c4272
  4150d5:	mov    al,BYTE PTR [ebx+0x5a]
  4150d8:	jmp    0xd1589fda
  4150dd:	stos   BYTE PTR es:[edi],al
  4150de:	mov    ch,0xa0
  4150e0:	(bad)  
  4150e1:	cdq    
  4150e2:	mov    BYTE PTR [edx+0x3e],dl
  4150e5:	iret   
  4150e6:	or     DWORD PTR [ecx],eax
  4150e8:	jo     0x415074
  4150ea:	js     0x41508c
  4150ec:	aas    
  4150ed:	sti    
  4150ee:	sbb    eax,0x2f558648
  4150f3:	cmp    dh,BYTE PTR [ecx-0xc]
  4150f6:	pop    ecx
  4150f7:	test   al,0xe4
  4150f9:	test   BYTE PTR [ebx+0x67],bl
  4150fc:	cmp    BYTE PTR [edx-0x7c],dl
  4150ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415100:	xchg   BYTE PTR [eax-0x19b97967],bl
  415106:	dec    edx
  415107:	add    BYTE PTR [esi],bl
  415109:	add    ebp,DWORD PTR [edi+0x11]
  41510c:	clc    
  41510d:	mov    ebp,0x2bc6266a
  415112:	(bad)  
  415113:	cli    
  415114:	mov    edx,0x29a07027
  415119:	sub    DWORD PTR [edx],edi
  41511b:	mov    ss,WORD PTR gs:[edi-0x1f]
  41511f:	mov    ds:0xed9c457d,al
  415124:	mov    ?,WORD PTR [eax-0x40]
  415127:	and    ch,dl
  415129:	loop   0x415178
  41512b:	ret    
  41512c:	xor    eax,0x2e57366a
  415131:	jmp    0x4150fc
  415133:	shl    BYTE PTR [esi],1
  415135:	loope  0x4150f4
  415137:	mov    ebx,0x6d269fbb
  41513c:	fs retf 
  41513e:	sub    cl,BYTE PTR [ebp-0x23]
  415141:	and    eax,0x547a5a10
  415146:	(bad)  
  415147:	push   eax
  415148:	inc    ecx
  415149:	(bad)  
  41514a:	xchg   ebp,eax
  41514b:	iret   
  41514c:	lock push cs
  41514e:	(bad)  
  41514f:	retf   0x7da7
  415152:	ret    
  415153:	ret    
  415154:	rcl    DWORD PTR [ebp-0x55],cl
  415157:	sub    esi,DWORD PTR [eax]
  415159:	pop    ebx
  41515a:	ret    
  41515b:	imul   ebx,DWORD PTR [ebx+0x33260cd0],0x839457d1
  415165:	adc    bl,BYTE PTR [eax+0x5c90c69c]
  41516b:	fwait
  41516c:	out    dx,eax
  41516d:	ss jb  0x415101
  415170:	and    DWORD PTR [ebx-0x2e],eax
  415173:	jge    0x41515b
  415175:	daa    
  415176:	(bad)  
  415177:	gs in  al,0x14
  41517a:	mov    ch,ah
  41517c:	mov    ds:0xcc90cd71,al
  415181:	pop    esp
  415182:	in     eax,0x8d
  415184:	jb     0x415166
  415186:	in     al,dx
  415187:	jae    0x41516d
  415189:	pop    ds
  41518a:	int    0xfa
  41518c:	ins    BYTE PTR es:[edi],dx
  41518d:	push   eax
  41518e:	leave  
  41518f:	mov    ds:0x6a3268c6,al
  415194:	mov    ss,WORD PTR [ecx+0x18ff444c]
  41519a:	fsubr  st,st(5)
  41519c:	xchg   DWORD PTR [ebx-0x185d9308],edi
  4151a2:	xor    BYTE PTR [ebp-0x2d],0x85
  4151a6:	(bad)  
  4151a7:	shl    DWORD PTR [ebx-0x25],0xad
  4151ab:	or     al,0x3c
  4151ad:	pusha  
  4151ae:	mov    ch,0x14
  4151b0:	imul   esi,DWORD PTR [edi+0x2d],0x73f9716f
  4151b7:	dec    edi
  4151b8:	fabs   
  4151ba:	mov    edx,0xb183385f
  4151bf:	ret    
  4151c0:	lods   eax,DWORD PTR ds:[esi]
  4151c1:	lahf   
  4151c2:	or     ah,BYTE PTR [ecx-0x3]
  4151c5:	sub    ecx,edi
  4151c7:	cdq    
  4151c8:	push   esp
  4151c9:	mov    cl,0x45
  4151cb:	nop
  4151cc:	mov    bl,0xfe
  4151ce:	shl    esp,1
  4151d0:	ins    DWORD PTR es:[edi],dx
  4151d1:	retf   0xf3f0
  4151d4:	or     al,0x9e
  4151d6:	sbb    eax,0x6476b069
  4151db:	mov    eax,ds:0x798ff1b
  4151e0:	cmp    BYTE PTR [ebp-0x26cc611c],cl
  4151e6:	mov    gs,WORD PTR [ecx-0x670132e8]
  4151ec:	fcomp  DWORD PTR [ecx+0x74]
  4151ef:	push   ebx
  4151f0:	lods   al,BYTE PTR ds:[esi]
  4151f1:	and    BYTE PTR [ebp+0x46979e80],bl
  4151f7:	int3   
  4151f8:	xor    edi,DWORD PTR [edi-0x22755dfa]
  4151fe:	pop    edx
  4151ff:	mov    DWORD PTR [esi],ebx
  415201:	repz pop edx
  415203:	and    al,0x29
  415205:	inc    eax
  415206:	dec    ebx
  415207:	mov    ah,dh
  415209:	(bad)  
  41520a:	pop    ebx
  41520b:	push   eax
  41520c:	mov    esi,0x26718d28
  415211:	loopne 0x41522e
  415213:	jne    0x4151c7
  415215:	retf   0xe0e2
  415218:	adc    bl,ch
  41521a:	adc    eax,0x873cfafe
  41521f:	and    eax,esi
  415221:	fs sti 
  415223:	jnp    0x41520f
  415225:	cmp    dh,BYTE PTR [esi+0x40953e01]
  41522b:	mov    dh,bl
  41522d:	adc    al,0x5f
  41522f:	test   al,0x98
  415231:	idiv   BYTE PTR [edx+eiz*4]
  415234:	dec    ecx
  415235:	jle    0x41526b
  415237:	pop    ss
  415238:	ds mov cl,0xfa
  41523b:	or     edx,ebp
  41523d:	pop    edi
  41523e:	mov    esi,0x6f66776d
  415243:	inc    ebx
  415244:	sbb    cl,BYTE PTR [ebp+0x6d]
  415247:	sub    cl,al
  415249:	stc    
  41524a:	clc    
  41524b:	je     0x41520a
  41524d:	mov    bh,0xed
  41524f:	adc    eax,0xb853765
  415254:	popf   
  415255:	inc    eax
  415256:	sub    BYTE PTR [eax],ah
  415258:	mov    al,al
  41525a:	aad    0xa7
  41525c:	repnz fild DWORD PTR [eax]
  41525f:	dec    ebx
  415260:	enter  0x5d2a,0xa9
  415264:	jmp    0x6baa:0x43b8bd74
  41526b:	int    0xfa
  41526d:	sbb    DWORD PTR [ecx-0x4fee6f8f],esp
  415273:	push   0xa4a94226
  415278:	loope  0x4152d0
  41527a:	hlt    
  41527b:	fcom   DWORD PTR [ebx+ecx*1+0x7c5274bb]
  415282:	leave  
  415283:	loope  0x4152c5
  415285:	rol    BYTE PTR [ecx],1
  415287:	dec    ebp
  415288:	mov    ecx,0x8b326e59
  41528d:	mov    bl,0xda
  41528f:	pop    eax
  415290:	out    0x49,eax
  415292:	(bad)
  415295:	sub    ecx,DWORD PTR [edi-0x23adac5c]
  41529b:	ds pop ecx
  41529d:	pop    ebp
  41529e:	rcl    DWORD PTR [ecx],cl
  4152a0:	popf   
  4152a1:	push   ds
  4152a2:	jge    0x415317
  4152a4:	push   0x724541c3
  4152a9:	xchg   edx,eax
  4152aa:	retf   
  4152ab:	loop   0x415273
  4152ad:	sbb    al,0x2b
  4152af:	push   ss
  4152b0:	psrld  mm2,QWORD PTR [edx+0x7ee132cb]
  4152b7:	add    dl,dh
  4152b9:	or     eax,0x3e4c7f32
  4152be:	inc    esi
  4152bf:	mov    gs,WORD PTR ds:0x8b468768
  4152c5:	sbb    DWORD PTR [ebp+eax*2-0x3c16dbb9],0x6c
  4152cd:	das    
  4152ce:	mov    dh,0x40
  4152d0:	sar    edx,0xf
  4152d3:	jle    0x4152bd
  4152d5:	repnz in eax,dx
  4152d7:	(bad)  
  4152d8:	sbb    ebx,DWORD PTR [esi+0xf83174]
  4152de:	out    dx,eax
  4152df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e0:	pop    eax
  4152e1:	repnz mov ch,0xd0
  4152e4:	and    DWORD PTR [edx+0x14],0x968277dd
  4152eb:	push   esp
  4152ec:	inc    ecx
  4152ed:	sbb    eax,0x8a036c9a
  4152f2:	sbb    ch,dh
  4152f4:	out    dx,eax
  4152f5:	fnstcw WORD PTR [ecx+esi*2-0x161147d1]
  4152fc:	and    eax,0x8e9a7239
  415301:	jb     0x41531e
  415303:	test   BYTE PTR [ebp-0x6be40650],al
  415309:	inc    edx
  41530a:	sub    BYTE PTR [edi-0x4e],ah
  41530d:	sti    
  41530e:	dec    BYTE PTR [ebx-0x55]
  415311:	mov    bl,0x30
  415313:	inc    ebx
  415314:	sub    BYTE PTR [edx-0x62],al
  415317:	clc    
  415318:	inc    edi
  415319:	lods   al,BYTE PTR ds:[esi]
  41531a:	or     esp,esi
  41531c:	int    0xd4
  41531e:	push   ds
  41531f:	add    eax,0x95bc7e6b
  415324:	ins    DWORD PTR es:[edi],dx
  415325:	cmp    edi,DWORD PTR [edx-0x29c819bf]
  41532b:	mov    esp,0xeecc09b8
  415330:	or     BYTE PTR [edi+0x34],bl
  415333:	lods   eax,DWORD PTR ds:[esi]
  415334:	bound  ecx,QWORD PTR [eax]
  415336:	sti    
  415337:	(bad)  
  415338:	or     eax,0x3b45131d
  41533d:	sahf   
  41533e:	aaa    
  41533f:	in     eax,dx
  415340:	xlat   BYTE PTR ds:[ebx]
  415341:	push   edi
  415342:	sbb    bl,BYTE PTR [edi+ebx*1+0x1d1ae2c0]
  415349:	mov    BYTE PTR [esi+0x79],0xc2
  41534d:	pop    ebp
  41534e:	sbb    eax,0x264051
  415353:	push   ecx
  415354:	mov    ah,0x1b
  415356:	retw   0x2c41
  41535a:	jg     0x41531c
  41535c:	inc    eax
  41535d:	ror    bl,0x1a
  415360:	cmp    bh,BYTE PTR [edi+0x2a]
  415363:	scas   al,BYTE PTR es:[edi]
  415364:	or     BYTE PTR [eax+0x435c4e1a],bh
  41536a:	jle    0x415378
  41536c:	pop    edi
  41536d:	mov    DWORD PTR ds:0xf7408e90,edx
  415373:	lock mov ah,0xb2
  415376:	push   ebx
  415377:	xchg   edi,eax
  415378:	das    
  415379:	pop    ebp
  41537a:	sbb    eax,0x6845cc3c
  41537f:	jmp    0x41532d
  415381:	inc    ebp
  415382:	xlat   BYTE PTR ds:[ebx]
  415383:	add    DWORD PTR [ecx],eax
  415385:	fwait
  415386:	scas   al,BYTE PTR es:[edi]
  415387:	add    bh,BYTE PTR [ecx]
  415389:	test   al,0xff
  41538b:	scas   eax,DWORD PTR es:[edi]
  41538c:	arpl   WORD PTR [ebx+esi*2],di
  41538f:	mov    esp,0x45e96053
  415394:	in     eax,0xd7
  415396:	dec    ebp
  415397:	dec    edi
  415398:	ins    BYTE PTR es:[edi],dx
  415399:	or     ecx,DWORD PTR [ecx+0x5f6c8d06]
  41539f:	cmc    
  4153a0:	jmp    0xc821:0xa727dd89
  4153a7:	mov    cl,0x3f
  4153a9:	fs sub eax,0xbbb9a1a6
  4153af:	xor    eax,0x3031ce2d
  4153b4:	fsubrp st(1),st
  4153b6:	fstp   TBYTE PTR ds:0x2d7b6fc8
  4153bc:	mov    DWORD PTR [eax-0x3ccda528],esp
  4153c2:	mov    eax,ds:0xf6d523e9
  4153c7:	jecxz  0x4153e5
  4153c9:	push   edx
  4153ca:	retf   0x1c6b
  4153cd:	xor    DWORD PTR [ebx+eax*2-0x71],ecx
  4153d1:	fcomp  DWORD PTR [edi+0xe461c68]
  4153d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153d8:	fcmovb st,st(0)
  4153da:	push   eax
  4153db:	clc    
  4153dc:	xlat   BYTE PTR ds:[ebx]
  4153dd:	lods   al,BYTE PTR ds:[esi]
  4153de:	xchg   esi,eax
  4153df:	dec    eax
  4153e0:	or     BYTE PTR [edx+0x1e2bf120],0xf0
  4153e7:	lock out dx,al
  4153e9:	stos   DWORD PTR es:[edi],eax
  4153ea:	std    
  4153eb:	xor    BYTE PTR cs:[esi],0xe7
  4153ef:	cmp    al,0x24
  4153f1:	int    0x81
  4153f3:	jo     0x4153ae
  4153f5:	sbb    DWORD PTR [eax+esi*8-0x4e],0xeafa6020
  4153fd:	sbb    DWORD PTR [edx-0x2e065982],0xffffffaf
  415404:	or     ebp,DWORD PTR [edx-0x5ac10cc7]
  41540a:	fdiv   QWORD PTR [eax+0x53e061b3]
  415410:	test   BYTE PTR [edx-0x435eedf],ch
  415416:	out    0x11,al
  415418:	ss in  eax,dx
  41541a:	jmp    0xe0a3d78b
  41541f:	ins    DWORD PTR es:[edi],dx
  415420:	in     al,0x51
  415422:	lods   eax,DWORD PTR ds:[esi]
  415423:	push   ds
  415424:	jb     0x415473
  415426:	mov    ch,0xe8
  415428:	(bad)  
  415429:	xor    al,0xca
  41542b:	cmc    
  41542c:	or     DWORD PTR [esi],esp
  41542e:	aaa    
  41542f:	call   0x12d43da6
  415434:	data16 xor BYTE PTR [esi+0x7558abf8],dh
  41543b:	(bad)  
  41543c:	call   FWORD PTR ds:0xba26a5ec
  415442:	xor    esp,DWORD PTR [esi-0x59a6a601]
  415448:	jge    0x415484
  41544a:	cld    
  41544b:	pop    ss
  41544c:	lea    eax,[edx-0x37]
  41544f:	fsubr  DWORD PTR [edx-0x64947a27]
  415455:	hlt    
  415456:	fwait
  415457:	jae    0x415407
  415459:	sbb    eax,0xac0b4b16
  41545e:	and    eax,0x46e7b168
  415463:	jmp    0x415491
  415465:	dec    edi
  415466:	and    bh,BYTE PTR [edi+0x78]
  415469:	(bad)  
  41546a:	idiv   al
  41546c:	jp     0x415499
  41546e:	mov    al,0x50
  415470:	fsubr  DWORD PTR [eax-0x79]
  415473:	mov    esi,0xd0721b90
  415478:	mov    ah,0x2b
  41547a:	rcl    DWORD PTR [esi+0x5db47d59],1
  415480:	popa   
  415481:	lods   al,BYTE PTR ds:[esi]
  415482:	sub    al,0xcc
  415484:	aam    0xf5
  415486:	shl    ebp,cl
  415488:	sti    
  415489:	lock lods eax,DWORD PTR ds:[esi]
  41548b:	dec    edi
  41548c:	mov    ah,0xe9
  41548e:	pusha  
  41548f:	xor    esi,DWORD PTR [ebp-0x54]
  415492:	jp     0x4154a0
  415494:	sbb    al,0xde
  415496:	jecxz  0x41548e
  415498:	lahf   
  415499:	jae    0x4154ad
  41549b:	test   eax,edi
  41549d:	xor    eax,0x3bacc183
  4154a2:	inc    ecx
  4154a3:	test   DWORD PTR [ebx],eax
  4154a5:	test   BYTE PTR [edi],ah
  4154a7:	nop
  4154a8:	enter  0xb2b5,0xbf
  4154ac:	or     edx,esi
  4154ae:	aam    0xa4
  4154b0:	mov    bl,0xcd
  4154b2:	jo     0x415487
  4154b4:	pop    esp
  4154b5:	jo     0x415445
  4154b7:	cdq    
  4154b8:	xchg   ecx,eax
  4154b9:	push   0x2b626b8f
  4154be:	mov    dl,0x31
  4154c0:	icebp  
  4154c1:	ret    0xecd5
  4154c4:	pusha  
  4154c5:	and    BYTE PTR [ebx-0x4841f23c],bh
  4154cb:	push   es
  4154cc:	sbb    eax,0x71f38a93
  4154d1:	or     DWORD PTR [ebx*8-0x8c4050c],ebx
  4154d8:	imul   esp,ebx,0x22ace1e3
  4154de:	popf   
  4154df:	mov    eax,0x81e763fa
  4154e4:	mov    eax,ds:0x7d730c0c
  4154e9:	outs   dx,BYTE PTR ds:[esi]
  4154ea:	imul   esi,DWORD PTR fs:0xf3e34969,0xfffffff0
  4154f2:	adc    eax,0xc64fc431
  4154f7:	sbb    BYTE PTR [ebp-0x1ab4061a],dh
  4154fd:	fldcw  WORD PTR [ebx]
  4154ff:	mov    esp,0x56050d86
  415504:	ret    
  415505:	popf   
  415506:	je     0x41550c
  415508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415509:	popa   
  41550a:	clc    
  41550b:	pop    es
  41550c:	ja     0x41551d
  41550e:	loop   0x415498
  415510:	pop    esp
  415511:	adc    eax,0x51dfeb66
  415516:	imul   edi,eax,0x6b
  415519:	int    0x69
  41551b:	dec    esi
  41551c:	mov    bl,0xf4
  41551e:	cs dec esi
  415520:	jnp    0x4154a4
  415522:	outs   dx,DWORD PTR ds:[esi]
  415523:	jge    0x4154d7
  415525:	repz adc cl,BYTE PTR [eax]
  415528:	or     eax,0xf339f9f
  41552d:	cs mov bl,0x90
  415530:	pop    ecx
  415531:	dec    esi
  415532:	mov    bl,0x23
  415534:	xor    DWORD PTR [eax-0x572ab3cf],edi
  41553a:	(bad)  
  41553b:	sbb    BYTE PTR [ecx],al
  41553d:	in     eax,0x63
  41553f:	icebp  
  415540:	mov    esp,0xcaf0d7bb
  415545:	ret    0xc70d
  415548:	and    ah,cl
  41554a:	push   cs
  41554b:	mov    esp,0xd3b49de4
  415550:	dec    ecx
  415551:	dec    edx
  415552:	lds    ebx,FWORD PTR [eax+ebp*4+0x359b4b7e]
  415559:	mov    ah,0x2b
  41555b:	pop    ebp
  41555c:	pop    edx
  41555d:	pop    ebx
  41555e:	mov    eax,0x2c76561
  415563:	cmp    DWORD PTR [edi-0x62],0x1dd98716
  41556a:	push   es
  41556b:	sub    al,0xcc
  41556d:	mov    esi,0x51037ed5
  415572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415573:	imul   ebx,DWORD PTR [ecx],0xa27c2ac9
  415579:	popf   
  41557a:	std    
  41557b:	pop    edi
  41557c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557d:	and    BYTE PTR [edx-0x77],dh
  415580:	pop    ds
  415581:	lods   eax,DWORD PTR ds:[esi]
  415582:	and    eax,DWORD PTR [esi-0xa]
  415585:	call   0x2ad9bca
  41558a:	or     edx,DWORD PTR [eax+0x167d9aeb]
  415590:	inc    eax
  415591:	xor    al,0x50
  415593:	in     al,dx
  415594:	je     0x415615
  415596:	push   ecx
  415597:	push   ebx
  415598:	adc    ebx,DWORD PTR [ecx]
  41559a:	arpl   WORD PTR [edi],bx
  41559c:	ret    
  41559d:	sbb    al,0xf4
  41559f:	ret    0x6e92
  4155a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a3:	fcom   QWORD PTR [ebx]
  4155a5:	xchg   edi,eax
  4155a6:	and    BYTE PTR [ecx+ecx*8+0x487fd916],cl
  4155ad:	psraw  mm6,mm3
  4155b0:	add    BYTE PTR [edx+0x1365cce1],ch
  4155b6:	or     al,0x30
  4155b8:	fs (bad) 
  4155ba:	iret   
  4155bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bc:	cmp    eax,0x4f1b88e4
  4155c1:	jno    0x41563c
  4155c3:	sub    DWORD PTR [ebx],eax
  4155c5:	pushf  
  4155c6:	xor    esi,DWORD PTR [eax+0x2]
  4155c9:	dec    ebx
  4155ca:	mov    dh,0xf4
  4155cc:	outs   dx,DWORD PTR ds:[esi]
  4155cd:	adc    ebp,edx
  4155cf:	mov    eax,ds:0xc2c64100
  4155d4:	mov    edi,0x4074cd18
  4155d9:	mov    BYTE PTR [ebp+edi*2+0xe9a211d],ah
  4155e0:	push   edi
  4155e1:	xor    DWORD PTR [edi],ecx
  4155e3:	(bad)  
  4155e4:	leave  
  4155e5:	jecxz  0x4155a8
  4155e7:	mov    gs,WORD PTR ds:0x920d1a65
  4155ed:	aaa    
  4155ee:	pop    es
  4155ef:	shr    DWORD PTR [edi+edi*8-0x7b],0x27
  4155f4:	aas    
  4155f5:	xor    edx,DWORD PTR [edx+0x427430d4]
  4155fb:	repnz cmc 
  4155fd:	mov    ss,WORD PTR [esi+0x22b72c1]
  415603:	mov    bh,0xc5
  415605:	xchg   DWORD PTR [edi+0x13],ebx
  415608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415609:	les    esi,FWORD PTR [edx]
  41560b:	inc    edx
  41560c:	push   esp
  41560d:	addr16 sbb al,0x93
  415610:	test   eax,0x2f44dfe1
  415615:	add    BYTE PTR [ecx],cl
  415617:	cmc    
  415618:	shl    DWORD PTR [edi+0x4e3d9f69],1
  41561e:	mov    ds:0x7fe93888,eax
  415623:	pop    ecx
  415624:	popa   
  415625:	call   0xb59e:0xe0d47c99
  41562c:	(bad)  
  41562d:	push   ecx
  41562e:	cmp    eax,0x178b93cc
  415633:	mov    bh,0x93
  415635:	and    edi,DWORD PTR [ecx-0x29]
  415638:	ret    
  415639:	mov    BYTE PTR [eax-0x2ecd3f5],ah
  41563f:	push   edi
  415640:	in     al,dx
  415641:	lock sub al,ah
  415644:	push   ebp
  415645:	sbb    eax,0x7c9c7d68
  41564a:	dec    esp
  41564b:	shl    BYTE PTR [ebx+edx*2-0x1bd77e0a],cl
  415652:	inc    esi
  415653:	inc    esi
  415654:	push   0xfffffff3
  415656:	xchg   edi,eax
  415657:	ds mov ebp,0xb473164b
  41565d:	dec    edi
  41565e:	cs inc ebx
  415660:	sub    BYTE PTR [edi+0x21],bl
  415663:	add    DWORD PTR [esi-0x37b2c4d],ebp
  415669:	test   eax,0x21ebc5a8
  41566e:	in     eax,dx
  41566f:	cmp    DWORD PTR [ebp+0x3e],ebp
  415672:	mov    fs,WORD PTR [ebp-0x518255d7]
  415678:	pop    esi
  415679:	fst    DWORD PTR [eax+0x42]
  41567c:	ror    DWORD PTR [edi-0x32c7895f],1
  415682:	std    
  415683:	jmp    0x441b:0x14fbf7a2
  41568a:	sub    al,0xbd
  41568c:	pop    edi
  41568d:	ficom  WORD PTR ds:0x6e5adbaa
  415693:	out    0xb8,eax
  415695:	jns    0x415674
  415697:	lods   al,BYTE PTR ds:[esi]
  415698:	sar    edi,0x5b
  41569b:	outs   dx,DWORD PTR ds:[esi]
  41569c:	es int3 
  41569e:	add    BYTE PTR [ebx*1-0x6f68416f],bh
  4156a5:	xor    BYTE PTR [eax-0x1b77d648],bh
  4156ab:	jnp    0x41570c
  4156ad:	loope  0x4156ba
  4156af:	inc    edx
  4156b0:	scas   eax,DWORD PTR es:[edi]
  4156b1:	sub    BYTE PTR [eax+ebx*4+0x5d4c91de],cl
  4156b8:	sahf   
  4156b9:	pop    edi
  4156ba:	xor    DWORD PTR [ebx],esp
  4156bc:	lods   eax,DWORD PTR ds:[esi]
  4156bd:	mov    eax,0x207db993
  4156c2:	xor    BYTE PTR ds:0x2d743ab3,bl
  4156c8:	inc    eax
  4156c9:	ss out dx,al
  4156cb:	pop    ds
  4156cc:	pop    es
  4156cd:	out    dx,eax
  4156ce:	pop    esp
  4156cf:	outs   dx,BYTE PTR ds:[esi]
  4156d0:	mov    eax,ds:0x7173b6e6
  4156d5:	aad    0x87
  4156d7:	add    dh,BYTE PTR [edi+0x51e1eeaa]
  4156dd:	jae    0x41569b
  4156df:	push   eax
  4156e0:	jnp    0x4156b1
  4156e2:	ss sub eax,0x7d4ecb01
  4156e8:	cmp    DWORD PTR [ecx],ebp
  4156ea:	jmp    0xabbbc8c4
  4156ef:	add    eax,0xdaf5cc80
  4156f4:	jmp    DWORD PTR [edi+edx*2-0x5f]
  4156f8:	cmp    eax,0xcf4beb58
  4156fd:	inc    edx
  4156fe:	xchg   DWORD PTR [eax+0x4fa463d5],ebx
  415704:	cld    
  415705:	dec    edx
  415706:	and    BYTE PTR [eax-0x42987fc2],0xfc
  41570d:	imul   esp,DWORD PTR [edi-0x70],0xffffffb0
  415711:	call   0x484b:0x30c6d4c6
  415718:	xchg   edi,eax
  415719:	cmp    BYTE PTR [eax-0x49],0x16
  41571d:	faddp  st(6),st
  41571f:	jae    0x415728
  415721:	retf   
  415722:	aaa    
  415723:	sub    eax,0x2a96fd2
  415728:	dec    ebp
  415729:	std    
  41572a:	into   
  41572b:	push   cs
  41572c:	aaa    
  41572d:	fucomip st,st(5)
  41572f:	sbb    eax,0x7a177bc5
  415734:	pop    eax
  415735:	out    dx,eax
  415736:	cmp    esi,esp
  415738:	fstp   TBYTE PTR [esp+esi*8+0x7fc3a2d3]
  41573f:	push   ebp
  415740:	xor    al,0xc5
  415742:	outs   dx,DWORD PTR ds:[esi]
  415743:	xor    eax,0xcc68611e
  415748:	das    
  415749:	das    
  41574a:	nop
  41574b:	outs   dx,BYTE PTR ds:[esi]
  41574c:	cmp    al,0x2e
  41574e:	repz popf 
  415750:	jns    0x415740
  415752:	xchg   ebp,eax
  415753:	dec    ebp
  415754:	fild   QWORD PTR [eax+ebp*1-0x15]
  415758:	push   0x32b100da
  41575d:	ss cdq 
  41575f:	out    0x42,eax
  415761:	loop   0x4157e1
  415763:	das    
  415764:	iret   
  415765:	jae    0x415701
  415767:	mov    dl,0x3b
  415769:	mov    ah,0xf6
  41576b:	or     DWORD PTR [ecx+0x75],ebx
  41576e:	inc    esp
  41576f:	retf   
  415770:	push   eax
  415771:	outs   dx,BYTE PTR ds:[esi]
  415772:	xor    edx,ecx
  415774:	inc    edx
  415775:	stos   DWORD PTR es:[edi],eax
  415776:	enter  0x39ed,0xd5
  41577a:	or     ch,bh
  41577c:	inc    esi
  41577d:	cs sub eax,0xb2597b78
  415783:	xchg   edx,eax
  415784:	popf   
  415785:	cs xchg esi,eax
  415787:	shr    BYTE PTR ds:0xac7a2ab9,1
  41578d:	jns    0x4157f2
  41578f:	jmp    0x415747
  415791:	clc    
  415792:	dec    esp
  415793:	ret    
  415794:	dec    eax
  415795:	xchg   edi,eax
  415796:	add    cl,ah
  415798:	push   ebp
  415799:	repz pop edx
  41579b:	mov    ah,BYTE PTR [eax-0x3e]
  41579e:	mov    DWORD PTR [ecx+0x4e],esp
  4157a1:	jbe    0x415758
  4157a3:	push   cs
  4157a4:	xor    eax,0x95ad23e3
  4157a9:	pop    edi
  4157aa:	and    DWORD PTR [esi-0x488c69f1],0x4c58b54d
  4157b4:	jmp    0x605a:0x865d6782
  4157bb:	loope  0x4157a7
  4157bd:	inc    edx
  4157be:	adc    DWORD PTR [esi+eiz*1+0x22],0x12b10cb9
  4157c6:	pop    edi
  4157c7:	mov    fs,edx
  4157c9:	int    0xd7
  4157cb:	mov    ecx,0xc5f924d4
  4157d0:	shl    BYTE PTR [eax-0x7fbb3bcb],0x99
  4157d7:	out    0x9b,eax
  4157d9:	add    al,0x88
  4157db:	lods   eax,DWORD PTR ds:[esi]
  4157dc:	in     eax,dx
  4157dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157de:	pop    es
  4157df:	push   ss
  4157e0:	dec    eax
  4157e1:	jecxz  0x41581f
  4157e3:	loope  0x415783
  4157e5:	pop    edi
  4157e6:	mov    bl,BYTE PTR [ebp+0x22]
  4157e9:	lds    esi,FWORD PTR [ecx]
  4157eb:	dec    esp
  4157ec:	sbb    DWORD PTR [ebx+0x7549763],ebp
  4157f2:	test   edi,0xd2747e14
  4157f8:	pop    ecx
  4157f9:	in     al,0x91
  4157fb:	pop    ebx
  4157fc:	scas   eax,DWORD PTR es:[edi]
  4157fd:	cmc    
  4157fe:	retf   
  4157ff:	prefetch BYTE PTR [edi]
  415802:	add    BYTE PTR [ebx-0x63],bh
  415805:	xlat   BYTE PTR ds:[ebx]
  415806:	add    esp,DWORD PTR [edx+0x36]
  415809:	fsub   QWORD PTR [eax-0x7a]
  41580c:	inc    edi
  41580d:	mov    ds:0xc2595c2c,eax
  415812:	shl    BYTE PTR [esi],1
  415814:	imul   esp,DWORD PTR [ebx-0x28],0xd98774a0
  41581b:	jmp    0x77a39aa0
  415820:	push   eax
  415821:	pop    esp
  415822:	ins    BYTE PTR es:[edi],dx
  415823:	(bad)  
  415824:	lea    eax,[ecx+0x7659f85e]
  41582a:	xor    al,0x41
  41582c:	add    al,0xb0
  41582e:	pop    ecx
  41582f:	arpl   WORD PTR [eax+0x37d1a41d],sp
  415835:	mov    edx,0x56664d04
  41583a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41583b:	dec    edx
  41583c:	cmp    BYTE PTR [esi+0x58],dh
  41583f:	pop    es
  415840:	push   esp
  415841:	shl    DWORD PTR [eax],cl
  415843:	ds push es
  415845:	sbb    al,0xeb
  415847:	pop    ebp
  415848:	xor    BYTE PTR [ebx],bl
  41584a:	cmp    edx,DWORD PTR [edi]
  41584c:	in     eax,dx
  41584d:	cmp    bl,BYTE PTR [ecx-0xd57408a]
  415853:	retf   
  415854:	in     eax,0x8d
  415856:	(bad)  
  415857:	lock xor al,0xef
  41585a:	mov    esi,0x591d39c0
  41585f:	jmp    0x980a2e14
  415864:	xchg   esp,eax
  415865:	jge    0x4158af
  415867:	cmp    eax,0x1eb921d6
  41586c:	fsubr  DWORD PTR [ecx+esi*1-0x4f23db47]
  415873:	xchg   ecx,eax
  415874:	jmp    0x4158bb
  415876:	adc    DWORD PTR [esi+edi*4-0x2995747],edx
  41587d:	js     0x415815
  41587f:	mov    BYTE PTR [ebp-0x168b2210],dh
  415885:	lods   al,BYTE PTR ds:[esi]
  415886:	xor    cl,0xf9
  415889:	jne    0x415843
  41588b:	mov    DWORD PTR [edi+0xc953d00],esi
  415891:	lods   eax,DWORD PTR ds:[esi]
  415892:	mov    esi,0x7707321d
  415897:	jg     0x4158dd
  415899:	pop    esp
  41589a:	(bad)  
  41589b:	aam    0xf7
  41589d:	sbb    BYTE PTR [ebp-0x21],0xc8
  4158a1:	push   cs
  4158a2:	adc    edi,ebp
  4158a4:	enter  0xb3ad,0x4b
  4158a8:	shr    BYTE PTR [edx+edx*1+0x77],cl
  4158ac:	arpl   WORD PTR [eax],cx
  4158ae:	fisttp WORD PTR [ecx-0xf753a3f]
  4158b4:	pop    es
  4158b5:	mov    DWORD PTR [edi-0x53],esi
  4158b8:	hlt    
  4158b9:	aad    0x3
  4158bb:	mov    ah,0x39
  4158bd:	ins    BYTE PTR es:[edi],dx
  4158be:	cmp    BYTE PTR [ebp-0x4a474f09],cl
  4158c4:	xchg   ebx,eax
  4158c5:	adc    al,0xd
  4158c7:	cmp    al,0xec
  4158c9:	xchg   ecx,eax
  4158ca:	lods   al,BYTE PTR ds:[esi]
  4158cb:	std    
  4158cc:	xlat   BYTE PTR ds:[ebx]
  4158cd:	jl     0x4158c8
  4158cf:	shl    BYTE PTR [edx+edx*2+0x49],0x66
  4158d4:	xchg   edi,eax
  4158d5:	dec    edi
  4158d6:	inc    ebp
  4158d7:	push   esi
  4158d8:	sub    esi,DWORD PTR [eax+0x4f]
  4158db:	push   edx
  4158dc:	test   eax,0xa70b3395
  4158e1:	cmovne ebx,DWORD PTR [edi+0x6c]
  4158e5:	pop    ebx
  4158e6:	sbb    edi,DWORD PTR [eax+0x11]
  4158e9:	xchg   ecx,eax
  4158ea:	or     al,0x52
  4158ec:	xor    bh,dl
  4158ee:	(bad)  
  4158ef:	push   0xffffffc0
  4158f1:	add    cl,cl
  4158f3:	outs   dx,DWORD PTR ds:[esi]
  4158f4:	mov    esi,0xde895725
  4158f9:	fs sahf 
  4158fb:	jnp    0x41591c
  4158fd:	jp     0x415939
  4158ff:	sub    al,0xf7
  415901:	xchg   esp,eax
  415902:	ins    BYTE PTR es:[edi],dx
  415903:	adc    al,0x8b
  415905:	mov    al,0x2e
  415907:	xchg   ebp,eax
  415908:	cmp    dl,BYTE PTR [ebx+0x7f]
  41590b:	imul   ebx,DWORD PTR [edi+ebp*4+0x7c688d73],0x111ac367
  415916:	inc    eax
  415917:	pop    ecx
  415918:	xor    DWORD PTR ds:0x8581075b,0x3d
  41591f:	dec    esp
  415920:	retf   0xcfd4
  415923:	mov    bl,0x8c
  415925:	push   ds
  415926:	mov    bh,0x33
  415928:	sub    eax,0x112f21ef
  41592d:	loop   0x4158ff
  41592f:	push   edx
  415930:	popa   
  415931:	imul   esi,DWORD PTR [edx+0x5695776c],0x2e700f4e
  41593b:	cs jmp 0xd4688c35
  415941:	xchg   esi,eax
  415942:	retf   
  415943:	cmp    eax,0xfa4e94f
  415948:	cmp    eax,0x9b242686
  41594d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594e:	cmp    eax,0x278daead
  415953:	enter  0xb012,0x1
  415957:	(bad)  
  415958:	jecxz  0x4158f3
  41595a:	pop    ebx
  41595b:	sti    
  41595c:	je     0x415932
  41595e:	je     0x415983
  415960:	pusha  
  415961:	cmp    eax,0x44b156a6
  415966:	push   edx
  415967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415968:	sbb    al,0x4
  41596a:	push   0xffffff97
  41596c:	cmp    BYTE PTR [ecx-0x4409b153],0x59
  415973:	adc    DWORD PTR [ebp-0x35],edi
  415976:	jo     0x4159cd
  415978:	sar    ebp,cl
  41597a:	loopne 0x4159f1
  41597c:	test   BYTE PTR [ecx+0x6caaa126],cl
  415982:	lods   eax,DWORD PTR ds:[esi]
  415983:	add    bh,cl
  415985:	mov    esp,0x9ddfe0ba
  41598a:	xchg   edx,eax
  41598b:	pop    ss
  41598c:	ror    BYTE PTR [ebx-0xe196917],0xfc
  415993:	in     eax,0xc6
  415995:	dec    esi
  415996:	mov    eax,ds:0x9c822597
  41599b:	push   ebx
  41599c:	sub    al,0x61
  41599e:	je     0x4159df
  4159a0:	mov    ?,WORD PTR [ebx-0x49b18e9f]
  4159a6:	inc    edx
  4159a7:	add    al,0x6b
  4159a9:	push   esi
  4159aa:	push   cs
  4159ab:	fdivp  st(6),st
  4159ad:	push   edx
  4159ae:	mov    esp,0xc97071b8
  4159b3:	dec    edi
  4159b4:	mov    al,ds:0x638d24fd
  4159b9:	inc    ecx
  4159ba:	inc    esi
  4159bb:	add    ebx,DWORD PTR [edx]
  4159bd:	sti    
  4159be:	push   0x741da5c3
  4159c3:	ins    BYTE PTR es:[edi],dx
  4159c4:	lds    edi,FWORD PTR [ebp+0x792ce596]
  4159ca:	outs   dx,DWORD PTR ds:[esi]
  4159cb:	mov    ch,BYTE PTR [edi]
  4159cd:	xor    BYTE PTR [ebp+0x13],bh
  4159d0:	(bad)  
  4159d1:	out    0x82,al
  4159d3:	jno    0x4159bf
  4159d5:	mov    esp,0x272b0881
  4159da:	push   ecx
  4159db:	loopne 0x415a39
  4159dd:	clc    
  4159de:	sub    DWORD PTR [edi+0x35],esp
  4159e1:	cli    
  4159e2:	aam    0x2c
  4159e4:	or     ch,BYTE PTR [ebp+edi*2-0x729f11db]
  4159eb:	out    0x80,eax
  4159ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ee:	icebp  
  4159ef:	and    al,0x7
  4159f1:	xchg   BYTE PTR [ebx+0x36130510],ch
  4159f7:	jbe    0x4159b0
  4159f9:	shl    esp,0xa3
  4159fc:	sub    ebx,edx
  4159fe:	dec    edx
  4159ff:	pop    es
  415a00:	xchg   esp,eax
  415a01:	test   DWORD PTR [esi-0x7ccdc15],eax
  415a07:	or     esi,DWORD PTR [eax-0x586c9db1]
  415a0d:	and    al,0x67
  415a0f:	int    0xa9
  415a11:	adc    edi,DWORD PTR [eax]
  415a13:	retf   
  415a14:	jle    0x415a54
  415a16:	inc    edi
  415a17:	(bad)  
  415a18:	shl    edx,cl
  415a1a:	mov    dl,ah
  415a1c:	mov    ds:0xc859ebbf,al
  415a21:	xchg   edi,eax
  415a22:	xor    ch,BYTE PTR [esi+eax*4]
  415a25:	sbb    al,0x1f
  415a27:	mov    dl,0xaf
  415a29:	jo     0x4159ea
  415a2b:	clc    
  415a2c:	inc    esi
  415a2d:	int3   
  415a2e:	int3   
  415a2f:	sti    
  415a30:	mov    ecx,0xc7533349
  415a35:	outs   dx,DWORD PTR ds:[esi]
  415a36:	leave  
  415a37:	inc    ebx
  415a38:	push   ecx
  415a39:	ss in  al,dx
  415a3b:	imul   BYTE PTR [edx+0x2c4eab18]
  415a41:	xchg   BYTE PTR [esi+eax*1+0x569e618d],bl
  415a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a49:	push   ecx
  415a4a:	pop    esp
  415a4b:	pop    esp
  415a4c:	ss ins DWORD PTR es:[edi],dx
  415a4e:	jmp    0x4159ec
  415a50:	aad    0x58
  415a52:	scas   eax,DWORD PTR es:[edi]
  415a53:	jle    0x415a19
  415a55:	xchg   ecx,eax
  415a56:	adc    al,0xa
  415a58:	mov    WORD PTR gs:[esi],cs
  415a5b:	aad    0x11
  415a5d:	mov    ch,0x31
  415a5f:	pop    ebp
  415a60:	int3   
  415a61:	or     eax,0x70101ef3
  415a66:	mov    ah,0x34
  415a68:	jge    0x4159f0
  415a6a:	cmp    ch,bh
  415a6c:	jbe    0x415aba
  415a6e:	inc    edx
  415a6f:	mov    WORD PTR [edx-0x400ec8fe],?
  415a75:	xchg   edi,eax
  415a76:	push   es
  415a77:	jmp    0xbc597129
  415a7c:	call   0xc003b1cb
  415a81:	add    BYTE PTR [ebx-0x33],bh
  415a84:	std    
  415a85:	scas   al,BYTE PTR es:[edi]
  415a86:	xchg   DWORD PTR [ebp+edi*2+0x3e],ebp
  415a8a:	loop   0x415a15
  415a8c:	sub    al,0xb2
  415a8f:	jnp    0x415a73
  415a91:	xor    ch,BYTE PTR [ebp+0x31]
  415a94:	push   esi
  415a95:	inc    edi
  415a96:	adc    eax,0x1a671413
  415a9b:	(bad)  
  415a9c:	jmp    0x351e0af5
  415aa1:	pop    es
  415aa2:	scas   eax,DWORD PTR es:[edi]
  415aa3:	mov    cl,0x79
  415aa5:	adc    al,BYTE PTR [ecx]
  415aa7:	outs   dx,BYTE PTR ds:[esi]
  415aa8:	rcl    DWORD PTR [eax],1
  415aaa:	mov    bl,BYTE PTR [eax+0x3593223e]
  415ab0:	mov    DWORD PTR [ebp-0x50680f95],eax
  415ab6:	or     BYTE PTR [ebp+0x2604edd3],ah
  415abc:	fdiv   QWORD PTR [eax]
  415abe:	outs   dx,BYTE PTR ds:[esi]
  415abf:	sbb    DWORD PTR [eax],eax
  415ac1:	xor    BYTE PTR [esi],0xe4
  415ac4:	ficomp DWORD PTR [esi-0x55afe826]
  415aca:	pop    edx
  415acb:	jae    0x415a69
  415acd:	xor    eax,0xe4828c86
  415ad2:	cwde   
  415ad3:	out    0xcb,eax
  415ad5:	push   esi
  415ad6:	push   esi
  415ad7:	push   ss
  415ad8:	add    al,0xe
  415ada:	arpl   di,cx
  415adc:	mov    esp,0xa1b2178c
  415ae1:	test   eax,0x233656b5
  415ae6:	cmp    ebx,DWORD PTR [edi]
  415ae8:	push   0xfad3de83
  415aed:	call   0x3dd5:0xea601cdb
  415af4:	jmp    0xcaea:0x272aaf7d
  415afb:	mov    eax,ds:0x284276d0
  415b00:	xchg   edi,eax
  415b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b02:	mov    edx,0x339d1255
  415b07:	enter  0x71a5,0x47
  415b0b:	fwait
  415b0c:	add    eax,0x85806b1
  415b11:	push   ds
  415b12:	in     al,0xf3
  415b14:	sub    DWORD PTR [eax+ebx*1+0x2],edx
  415b18:	inc    edx
  415b19:	ret    
  415b1a:	cdq    
  415b1b:	mov    ch,0x44
  415b1d:	or     bh,dh
  415b1f:	or     dh,0xcf
  415b22:	adc    DWORD PTR [eax],0x890134bc
  415b28:	pop    ss
  415b29:	push   edx
  415b2a:	shl    BYTE PTR [edi+0x772fa998],cl
  415b30:	and    DWORD PTR [edx+0x3b001e56],ebx
  415b36:	xchg   esi,eax
  415b37:	cmp    eax,0x919cec6f
  415b3c:	adc    dl,cl
  415b3e:	mov    ds:0x453797bb,eax
  415b43:	ficomp DWORD PTR [ebp-0x35]
  415b46:	loop   0x415b11
  415b48:	adc    eax,0xf9bf20a7
  415b4d:	out    0xb0,eax
  415b4f:	in     eax,0x5a
  415b51:	cmp    DWORD PTR fs:[ebx],esp
  415b54:	hlt    
  415b55:	fbld   TBYTE PTR [esi+0x2c90a8be]
  415b5b:	xor    DWORD PTR [eax+0x7c5d0d8f],esi
  415b61:	push   ebp
  415b62:	adc    eax,0x7b3bf0ca
  415b67:	push   ds
  415b68:	mov    ch,0x3f
  415b6a:	sbb    BYTE PTR [edi+0x7b5731b4],bl
  415b70:	adc    eax,0xfe9a98d6
  415b75:	jne    0x415b3c
  415b77:	or     al,0x64
  415b79:	lea    edx,[edi+0x49]
  415b7c:	cmp    al,cl
  415b7e:	adc    BYTE PTR [esi+0x3dc3b883],dh
  415b84:	fwait
  415b85:	xor    DWORD PTR [edx-0x5a0f0c20],edx
  415b8b:	mov    cs,WORD PTR [esi]
  415b8d:	push   ds
  415b8e:	lods   eax,DWORD PTR ds:[esi]
  415b8f:	outs   dx,DWORD PTR ds:[esi]
  415b90:	xchg   ebx,eax
  415b91:	pop    edi
  415b92:	lds    edx,FWORD PTR [edi]
  415b94:	jns    0x415b44
  415b96:	mov    edi,0x1a5b000f
  415b9b:	push   0xd0fcfaee
  415ba0:	ret    0xa28f
  415ba3:	sub    al,0xf9
  415ba5:	test   bl,0x2f
  415ba8:	lea    edx,[ebp+0x5514b072]
  415bae:	retf   
  415baf:	lahf   
  415bb0:	jns    0x415b5c
  415bb2:	push   edx
  415bb3:	(bad)  
  415bb4:	cmc    
  415bb5:	sbb    al,0x34
  415bb7:	sub    bh,dl
  415bb9:	rcl    DWORD PTR [ebp-0x6d],0x32
  415bbd:	mov    ebx,0xa3bf39b5
  415bc2:	and    esp,DWORD PTR [eax-0x1e]
  415bc5:	pop    edi
  415bc6:	inc    ebx
  415bc7:	iret   
  415bc8:	not    DWORD PTR [eax+0x51500312]
  415bce:	adc    al,0xeb
  415bd0:	and    DWORD PTR [ebp*2-0x76b7dc45],0x98b5fcbc
  415bdb:	add    bh,BYTE PTR [ebx-0x16]
  415bde:	mov    ebp,0x2f51572
  415be3:	add    al,0xa2
  415be5:	sub    DWORD PTR [edx],ebp
  415be7:	aam    0xa2
  415be9:	mov    dl,0xa0
  415beb:	mov    ds:0x48f735de,eax
  415bf0:	pop    es
  415bf1:	or     BYTE PTR [ebx-0x5d],dh
  415bf4:	xor    al,0xe3
  415bf6:	push   ecx
  415bf7:	sbb    BYTE PTR [ecx+0x52abf693],bh
  415bfd:	jno    0x415c67
  415bff:	jecxz  0x415bc3
  415c01:	dec    ebp
  415c02:	pop    esp
  415c03:	or     al,0x6e
  415c05:	enter  0x8f26,0xa1
  415c09:	adc    ah,BYTE PTR [edx+0xa]
  415c0c:	xlat   BYTE PTR ds:[ebx]
  415c0d:	dec    edx
  415c0e:	leave  
  415c0f:	out    dx,al
  415c10:	nop
  415c11:	loopne 0x415c7b
  415c13:	pop    ebx
  415c14:	inc    BYTE PTR [edi+0x74]
  415c17:	cld    
  415c18:	push   cs
  415c19:	sbb    bh,dh
  415c1b:	out    0xc1,al
  415c1d:	lea    ecx,[edx-0x426f540]
  415c23:	push   esp
  415c24:	add    BYTE PTR ds:[ebx+0x728aa6cc],ah
  415c2b:	or     esp,edi
  415c2d:	mov    eax,0x61cc12a9
  415c32:	popa   
  415c33:	pop    es
  415c34:	sbb    DWORD PTR [edi+0x1e],0xffffffb1
  415c38:	push   cs
  415c39:	push   ebp
  415c3a:	aas    
  415c3b:	xor    BYTE PTR [esi-0x7c1db416],cl
  415c41:	add    DWORD PTR [ebx-0x7f],esp
  415c44:	clc    
  415c45:	or     bl,BYTE PTR [esi]
  415c47:	data16 and al,0xc3
  415c4a:	cli    
  415c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4c:	js     0x415ca5
  415c4e:	adc    eax,0xef341129
  415c53:	cmp    esi,ecx
  415c55:	aaa    
  415c56:	xchg   ecx,eax
  415c57:	inc    esp
  415c58:	cdq    
  415c59:	dec    ecx
  415c5a:	cmp    dl,bh
  415c5c:	cdq    
  415c5d:	push   ebx
  415c5e:	sub    DWORD PTR [edx-0x258a4885],ebp
  415c64:	aam    0xf5
  415c66:	mov    al,ds:0xa9cd63c6
  415c6b:	inc    eax
  415c6c:	stos   BYTE PTR es:[edi],al
  415c6d:	scas   al,BYTE PTR es:[edi]
  415c6e:	(bad)  
  415c6f:	jp     0x415c1e
  415c71:	out    0xd5,al
  415c73:	mov    DWORD PTR [ecx-0x6f],edi
  415c76:	imul   esp,DWORD PTR [esi-0x3446f941],0x7777e33d
  415c80:	fpatan 
  415c82:	adc    bl,BYTE PTR [ebx+0x23a2dbea]
  415c88:	adc    DWORD PTR [eax],esp
  415c8a:	xchg   esi,eax
  415c8b:	mov    esp,0x57cacc4f
  415c90:	cli    
  415c91:	pop    es
  415c92:	adc    ch,cl
  415c94:	or     esp,DWORD PTR [esi-0x6a]
  415c97:	call   0x8d72da6c
  415c9c:	sub    edx,0xffffffde
  415c9f:	jg     0x415c2e
  415ca1:	arpl   WORD PTR [edx+0x5ab832ce],ax
  415ca7:	pop    edx
  415ca8:	xor    al,0xe1
  415caa:	sar    BYTE PTR [ecx+0x4757042d],0xe6
  415cb1:	imul   eax,DWORD PTR [eax],0xffffffd1
  415cb4:	(bad)  
  415cb6:	add    eax,0x95fba8f1
  415cbb:	not    DWORD PTR [edi+edi*4-0x6ce3466]
  415cc2:	push   0x7bda9a90
  415cc7:	test   al,0x59
  415cc9:	mov    DWORD PTR [ebx+0x49b074e3],esi
  415ccf:	leave  
  415cd0:	push   eax
  415cd1:	push   edx
  415cd2:	xchg   edi,eax
  415cd3:	ds push edx
  415cd5:	lea    esp,[edx-0x51]
  415cd8:	rcr    ebx,1
  415cda:	jno    0x415c69
  415cdc:	pop    ebp
  415cdd:	out    dx,al
  415cde:	(bad)  
  415cdf:	lahf   
  415ce0:	mov    dl,0xcb
  415ce2:	in     eax,0x56
  415ce4:	gs pop ecx
  415ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce7:	or     cl,cl
  415ce9:	sahf   
  415cea:	lds    esi,FWORD PTR [bp-0x4791]
  415cef:	jmp    0xd2eb:0xe41601ee
  415cf6:	mov    WORD PTR [eax+0x47],?
  415cf9:	clc    
  415cfa:	push   edx
  415cfb:	push   edi
  415cfc:	sbb    al,BYTE PTR [eax+ebx*1+0x67722a47]
  415d03:	adc    bl,BYTE PTR [esp+edx*8+0x3b6cd763]
  415d0a:	call   DWORD PTR [edx-0x47f0c6d3]
  415d10:	test   DWORD PTR [edi-0x6b9f49ea],0xed47bcb5
  415d1a:	inc    edx
  415d1b:	mov    dl,0xde
  415d1d:	fnstenv [edx+ebx*8+0x74]
  415d21:	mov    esi,0x80e1f9e5
  415d26:	fst    QWORD PTR [eax-0xd7e87fd]
  415d2c:	and    ah,BYTE PTR [esi+0x3ede60a8]
  415d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d33:	mov    esp,0x8e05c581
  415d38:	dec    esp
  415d39:	xchg   BYTE PTR [esi+0x6bea1a0f],bh
  415d3f:	sub    ebx,DWORD PTR [edx+0x2e84b2f3]
  415d45:	xor    dl,BYTE PTR [edi+0x4a]
  415d48:	(bad)  
  415d49:	adc    edx,esp
  415d4b:	xchg   ecx,eax
  415d4c:	sub    eax,0x4292cdab
  415d51:	imul   esi,DWORD PTR [edi-0x687bde4f],0xad0f6767
  415d5b:	aas    
  415d5c:	pop    ebp
  415d5d:	mov    ah,BYTE PTR [ecx+0x34]
  415d60:	icebp  
  415d61:	mov    ds:0xfe23c4f9,eax
  415d66:	adc    DWORD PTR cs:[esi+0x51],esp
  415d6a:	xor    al,0x37
  415d6d:	test   BYTE PTR [ebx+0x3c8b934e],0x9e
  415d74:	cwde   
  415d75:	loope  0x415d21
  415d77:	push   ebx
  415d78:	lock arpl WORD PTR [edi-0x1fe31bdc],si
  415d7f:	scas   al,BYTE PTR es:[edi]
  415d80:	call   0xee9bfc5f
  415d85:	and    eax,0x6d4c474f
  415d8a:	jbe    0x415d3d
  415d8c:	or     cl,BYTE PTR [edi]
  415d8e:	add    al,BYTE PTR [ecx-0x7b]
  415d91:	in     al,0x8f
  415d93:	jne    0x415df3
  415d95:	es dec ecx
  415d97:	and    bh,al
  415d99:	retf   
  415d9a:	inc    ecx
  415d9b:	das    
  415d9c:	jp     0x415d91
  415d9e:	add    BYTE PTR [esi+ecx*4],ch
  415da1:	sbb    ah,BYTE PTR [eax-0x6d]
  415da4:	xor    DWORD PTR [edx],edi
  415da6:	push   ss
  415da7:	or     BYTE PTR [edi-0x73],bh
  415daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dab:	mov    ebx,0x578550f2
  415db0:	fwait
  415db1:	idiv   BYTE PTR [esi-0x72]
  415db4:	adc    dl,BYTE PTR ss:[ecx]
  415db7:	dec    esp
  415db8:	daa    
  415db9:	add    esp,DWORD PTR [ebx]
  415dbb:	sbb    ebx,DWORD PTR [ebp+0x77]
  415dbe:	push   0xffffffeb
  415dc0:	popf   
  415dc1:	xchg   esp,eax
  415dc2:	push   edi
  415dc3:	int    0x3f
  415dc5:	in     eax,dx
  415dc6:	push   cs
  415dc7:	not    DWORD PTR [edi-0x60f85f02]
  415dcd:	enter  0xc35,0x8
  415dd1:	gs inc eax
  415dd3:	test   al,0x3c
  415dd5:	test   DWORD PTR [ecx+ecx*4],0x147aca04
  415ddc:	adc    eax,0x17db11d6
  415de1:	inc    ecx
  415de2:	mov    ah,0x58
  415de4:	daa    
  415de5:	xchg   edi,eax
  415de6:	push   edi
  415de7:	(bad)  
  415de8:	cmp    esi,DWORD PTR [edx-0x81bf082]
  415dee:	pusha  
  415def:	dec    ebp
  415df0:	mov    bl,0x47
  415df2:	xchg   esi,eax
  415df3:	stos   BYTE PTR es:[edi],al
  415df4:	xchg   ebp,eax
  415df5:	in     al,dx
  415df6:	hlt    
  415df7:	inc    eax
  415df8:	imul   ebx,DWORD PTR [edi+0x3a],0xffffffa2
  415dfc:	mov    ebx,DWORD PTR [ebp+0x29]
  415dff:	adc    eax,0x84807156
  415e04:	or     esp,DWORD PTR [edi+0x2b]
  415e07:	sbb    bl,BYTE PTR [ecx+0x2dc4db36]
  415e0d:	pushf  
  415e0e:	jb     0x415db8
  415e10:	adc    eax,0xe58d8ef5
  415e15:	mov    cl,0xb2
  415e17:	jo     0x415dc2
  415e19:	sbb    BYTE PTR [ebp+0x7908ae76],0x2b
  415e20:	loopne 0x415dfb
  415e22:	repz not bh
  415e25:	aam    0x4c
  415e27:	imul   esp,ebx,0x5e
  415e2a:	sub    ebp,DWORD PTR [ebx+0xe]
  415e2d:	push   ecx
  415e2e:	data16 jb 0x415e2d
  415e31:	push   edi
  415e32:	inc    DWORD PTR [edi-0x67]
  415e35:	loop   0x415df1
  415e37:	jmp    0x415e39
  415e39:	fxch   st(2)
  415e3b:	fs cdq 
  415e3d:	mov    BYTE PTR [edx],dl
  415e3f:	mov    ebx,0x45143d34
  415e44:	sbb    eax,0x947acc46
  415e49:	inc    edi
  415e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e4b:	add    bh,BYTE PTR [ebx-0x48]
  415e4e:	stos   DWORD PTR es:[edi],eax
  415e4f:	and    eax,DWORD PTR [edx-0x33]
  415e52:	(bad)  
  415e54:	xchg   ebx,eax
  415e55:	aas    
  415e56:	adc    BYTE PTR [esi],bh
  415e58:	je     0x415e40
  415e5a:	mov    DWORD PTR [eax*1-0x805ddc],0x3f667d6c
  415e65:	and    al,0xca
  415e67:	jne    0x415e26
  415e69:	icebp  
  415e6a:	in     al,0xc
  415e6c:	push   eax
  415e6d:	jae    0x415e37
  415e6f:	rol    dh,1
  415e71:	mov    ah,BYTE PTR [ecx]
  415e73:	push   es
  415e74:	xchg   ebp,eax
  415e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e76:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e79:	mov    al,0xf9
  415e7b:	enter  0x166c,0x2e
  415e7f:	push   0xddbe0bf9
  415e84:	js     0x415f02
  415e86:	std    
  415e87:	push   0xbeca6dda
  415e8c:	pushf  
  415e8d:	or     ah,BYTE PTR [eax+0x5d]
  415e90:	lock in al,0xe8
  415e93:	test   DWORD PTR [eax+0x24e09806],esi
  415e99:	popf   
  415e9a:	int3   
  415e9b:	(bad)
  415e9f:	mov    eax,ds:0x7d96014c
  415ea4:	leave  
  415ea5:	enter  0x6c95,0xed
  415ea9:	fldcw  WORD PTR [ebp+0x85aeefc]
  415eaf:	pusha  
  415eb0:	(bad)  
  415eb2:	fld    QWORD PTR [edx+0x5e]
  415eb5:	imul   eax,ebp,0xf6d73a31
  415ebb:	push   eax
  415ebc:	inc    esi
  415ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ebe:	add    ebx,DWORD PTR [edi+0x58]
  415ec1:	mov    eax,es
  415ec3:	cmc    
  415ec4:	cmp    ebx,0x54ea98d0
  415eca:	xchg   ebx,eax
  415ecb:	or     ch,ah
  415ecd:	jecxz  0x415f3a
  415ecf:	shl    DWORD PTR [ecx],0x8
  415ed2:	jmp    0xf4eadc2e
  415ed7:	cmc    
  415ed8:	push   esp
  415ed9:	or     ebp,DWORD PTR [edx]
  415edb:	xchg   ecx,eax
  415edc:	mov    edx,0x57d7faa9
  415ee1:	imul   eax,DWORD PTR [ebx],0xffffff9f
  415ee4:	push   DWORD PTR [ebp+0x61]
  415ee7:	aas    
  415ee8:	cmc    
  415ee9:	pop    esi
  415eea:	ja     0x415e75
  415eec:	inc    BYTE PTR [eax-0x2576fcc0]
  415ef2:	pop    edi
  415ef3:	rcr    BYTE PTR [esi],0x65
  415ef6:	or     al,0xcc
  415ef8:	iret   
  415ef9:	pop    ebp
  415efa:	mov    ch,0xa3
  415efc:	add    BYTE PTR [edi],dh
  415efe:	addr16 retf 
  415f00:	jg     0x415f40
  415f02:	call   0xba02b89
  415f07:	lds    edi,FWORD PTR ds:0xa9ad64a2
  415f0d:	xor    eax,DWORD PTR [edi+0x3d]
  415f10:	mov    cl,0xfd
  415f12:	mov    edi,0x52000db3
  415f17:	es xchg edi,eax
  415f19:	adc    al,0x47
  415f1b:	ds mov ecx,0x15318043
  415f21:	xchg   edi,eax
  415f22:	adc    esi,DWORD PTR [ebx+0x5e669998]
  415f28:	jmp    0xa852:0x909c4e68
  415f2f:	int    0x82
  415f31:	push   esi
  415f32:	out    dx,eax
  415f33:	idiv   eax
  415f35:	ss add al,0x85
  415f38:	add    eax,0x40d4e59a
  415f3d:	cmp    ch,BYTE PTR [ecx+0x124e1468]
  415f43:	mov    esp,ss
  415f45:	adc    DWORD PTR [edi],0x1493546d
  415f4b:	sub    al,0x3d
  415f4d:	mov    ds:0x4ff5ef0d,eax
  415f52:	dec    eax
  415f53:	daa    
  415f54:	mov    edx,0xe89c3e0e
  415f59:	aas    
  415f5a:	adc    ebx,DWORD PTR [esi-0x7f]
  415f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f5e:	clc    
  415f5f:	stos   BYTE PTR es:[edi],al
  415f60:	cli    
  415f61:	xor    eax,0x7aa256bb
  415f66:	inc    esp
  415f67:	sti    
  415f68:	mov    ah,0x37
  415f6a:	nop
  415f6b:	scas   al,BYTE PTR es:[edi]
  415f6c:	mov    bh,0x4f
  415f6e:	pushf  
  415f6f:	arpl   bp,cx
  415f71:	jge    0x415fc0
  415f73:	fistp  QWORD PTR [esi+0x1e89c024]
  415f79:	jae    0x415f94
  415f7b:	out    dx,eax
  415f7c:	mov    edi,0xc54e39d5
  415f81:	add    al,0xd1
  415f83:	fmulp  st(3),st
  415f85:	mov    esi,0x3265a170
  415f8a:	dec    edx
  415f8b:	inc    esp
  415f8c:	xchg   ebp,eax
  415f8d:	and    BYTE PTR [eax+0x18],bh
  415f90:	(bad)  
  415f91:	fcmovnb st,st(3)
  415f93:	adc    DWORD PTR [ebp-0x2e],eax
  415f96:	jge    0x415fd6
  415f98:	aam    0x3c
  415f9a:	push   es
  415f9b:	(bad)  
  415f9c:	or     eax,0xc1ea99fd
  415fa1:	jns    0x415f65
  415fa3:	idiv   ah
  415fa5:	in     eax,dx
  415fa6:	adc    DWORD PTR [ebx-0xc],ebp
  415fa9:	push   ebx
  415faa:	push   es
  415fab:	pop    ss
  415fac:	inc    ebp
  415fad:	std    
  415fae:	icebp  
  415faf:	push   edx
  415fb0:	int    0x7b
  415fb2:	dec    edx
  415fb3:	mov    ebx,0xca12ee0
  415fb8:	xchg   edx,eax
  415fb9:	push   0xffffff97
  415fbb:	(bad)  
  415fbc:	(bad)  [esi]
  415fbe:	imul   BYTE PTR [ebx]
  415fc0:	push   ecx
  415fc1:	int3   
  415fc2:	xchg   esi,eax
  415fc3:	add    cl,dl
  415fc5:	(bad)  
  415fc6:	pop    ss
  415fc7:	sbb    eax,0x317fa24c
  415fcc:	iret   
  415fcd:	imul   edi,DWORD PTR [eax+0x1fed3cbe],0xd1caaade
  415fd7:	inc    edi
  415fd8:	xor    al,0x7c
  415fda:	push   eax
  415fdb:	mov    al,ds:0x26a1896e
  415fe0:	pop    es
  415fe1:	dec    ecx
  415fe2:	sub    DWORD PTR [ebx+0x17],0xffffffb6
  415fe6:	dec    eax
  415fe7:	lock sub eax,0x34074184
  415fed:	push   ecx
  415fee:	into   
  415fef:	mov    BYTE PTR fs:[ebp+edi*1-0x3a92ce33],bh
  415ff7:	ss mov ebx,0x9bc3707e
  415ffd:	dec    esi
  415ffe:	scas   eax,DWORD PTR es:[edi]
  415fff:	repnz inc ecx
  416001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416002:	jl     0x416034
  416004:	pop    ebp
  416005:	ja     0x416042
  416007:	sbb    eax,edx
  416009:	ss jg  0x416041
  41600c:	mov    bl,0x5d
  41600e:	imul   BYTE PTR [ebp-0x392ca9b9]
  416014:	xlat   BYTE PTR ds:[ebx]
  416015:	stc    
  416016:	and    al,0x7b
  416018:	nop
  416019:	add    al,0xfc
  41601b:	xlat   BYTE PTR ds:[ebx]
  41601c:	je     0x416033
  41601e:	dec    edx
  41601f:	inc    edi
  416020:	dec    esp
  416021:	xor    DWORD PTR [ecx+0x19d72a0d],esi
  416027:	adc    BYTE PTR [esi-0x46],0x4c
  41602b:	jbe    0x41602d
  41602d:	push   ds
  41602e:	or     BYTE PTR [edx+ecx*8],0x80
  416032:	gs mov bl,0x91
  416035:	dec    eax
  416036:	hlt    
  416037:	mov    edx,0x967aedd0
  41603c:	test   DWORD PTR [esi+0x0],ecx
  41603f:	fisttp DWORD PTR [ebx+0x74]
  416042:	mov    dh,0x6a
  416044:	jne    0x41601e
  416046:	adc    DWORD PTR [ecx],edx
  416048:	push   ecx
  416049:	lods   al,BYTE PTR ds:[esi]
  41604a:	mov    eax,ds:0xd8551f69
  41604f:	dec    esi
  416050:	jae    0x41603b
  416052:	jl     0x415ffe
  416054:	mov    eax,0x1176d047
  416059:	sbb    al,0x55
  41605b:	xor    eax,0xe0446230
  416060:	xor    BYTE PTR [edi+0x6919d231],al
  416066:	stos   DWORD PTR es:[edi],eax
  416067:	pop    esp
  416068:	push   0x1bea2ff4
  41606d:	mov    al,ds:0xbf8fa6f0
  416072:	int3   
  416073:	in     eax,0xe7
  416075:	cwde   
  416076:	and    eax,0xa404548f
  41607b:	cmp    dh,BYTE PTR [esp+edi*1+0x45]
  41607f:	icebp  
  416080:	aam    0x28
  416082:	push   edx
  416083:	pop    edx
  416084:	push   ds
  416085:	jmp    0x41600d
  416087:	movzx  eax,WORD PTR [esi-0x74150c61]
  41608e:	inc    DWORD PTR [ebx+0x289ecec5]
  416094:	test   BYTE PTR [esi+0x7627b6a7],0x7c
  41609b:	pop    esp
  41609c:	xchg   DWORD PTR [ebp+0x42],edx
  41609f:	imul   esp,DWORD PTR [edx+0x21e0327e],0x2cf8b2b6
  4160a9:	sub    BYTE PTR [ecx-0x6ebc767e],dh
  4160af:	mov    ds:0x30313998,al
  4160b4:	pop    ds
  4160b5:	iret   
  4160b6:	push   ds
  4160b7:	daa    
  4160b8:	sub    BYTE PTR [edx+ecx*1],al
  4160bb:	call   0x9235:0x73816d5b
  4160c2:	in     eax,dx
  4160c3:	jno    0x416118
  4160c5:	mov    dl,0x71
  4160c7:	ins    DWORD PTR es:[edi],dx
  4160c8:	xor    eax,0xda731998
  4160cd:	or     edi,eax
  4160cf:	fucomip st,st(3)
  4160d1:	mov    al,ds:0x4cd31a5c
  4160d6:	sahf   
  4160d7:	and    edi,DWORD PTR [ecx+0x59]
  4160da:	sub    bl,BYTE PTR [ebp-0x611b1549]
  4160e0:	sbb    al,0xd9
  4160e2:	mov    bl,0x2e
  4160e4:	fild   DWORD PTR [edx+edi*8+0x2a]
  4160e8:	ins    BYTE PTR es:[edi],dx
  4160e9:	popf   
  4160ea:	adc    BYTE PTR [edi+0x5667b5ba],0x20
  4160f1:	jp     0x416155
  4160f3:	in     eax,0x11
  4160f5:	jb     0x4160b7
  4160f7:	lea    eax,[edx]
  4160f9:	shr    BYTE PTR ds:0xd164fddc,cl
  4160ff:	sub    BYTE PTR [edi-0x13],ch
  416102:	shl    BYTE PTR [edi-0x79],1
  416105:	in     al,dx
  416106:	xchg   esi,eax
  416107:	push   ss
  416108:	add    al,0x5d
  41610a:	jmp    0xea934ddd
  41610f:	stos   BYTE PTR es:[edi],al
  416110:	jb     0x41614c
  416112:	add    ah,BYTE PTR [edx]
  416114:	adc    ebx,ebx
  416116:	ss aaa 
  416118:	jge    0x4160da
  41611a:	mov    ebx,0x77522a09
  41611f:	cmp    DWORD PTR [edx],eax
  416121:	push   ss
  416122:	fisttp WORD PTR [eax+0x31]
  416125:	into   
  416126:	jp     0x416178
  416128:	in     al,dx
  416129:	arpl   dx,bx
  41612b:	push   edi
  41612c:	xchg   eax,ebp
  41612e:	leave  
  41612f:	ret    0x6828
  416132:	fmul   DWORD PTR ds:[eax+0x464ad476]
  416139:	cmp    al,BYTE PTR [esi]
  41613b:	cs mov edx,0x4515149d
  416141:	xchg   DWORD PTR [edx+0x27],ecx
  416144:	fs add eax,0xaaf428a
  41614a:	lahf   
  41614b:	xchg   edi,eax
  41614c:	test   eax,0xccef4460
  416151:	jo     0x4160d3
  416153:	jne    0x416167
  416155:	shl    DWORD PTR [edx+0x12],cl
  416158:	addr16 cli 
  41615a:	addr16 or al,0x5a
  41615d:	sbb    DWORD PTR [edi+0x2d516aff],0x605e393a
  416167:	das    
  416168:	les    ecx,FWORD PTR [esi-0xb886020]
  41616e:	fstp   QWORD PTR [ebx+0x588a99f5]
  416174:	test   BYTE PTR [ebx-0x33],al
  416177:	mov    ecx,0x176a41f9
  41617c:	cmp    eax,0x77c9ca6e
  416181:	ins    DWORD PTR es:[edi],dx
  416182:	jmp    0x4161f4
  416184:	outs   dx,BYTE PTR ds:[esi]
  416185:	in     al,0x8b
  416187:	mov    es,WORD PTR cs:[ebp+0x17dfaf71]
  41618e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41618f:	mov    ecx,0xe9acab32
  416194:	lds    eax,FWORD PTR [ebx]
  416196:	jle    0x416178
  416198:	sbb    cl,dl
  41619a:	out    dx,al
  41619b:	inc    edi
  41619c:	fcomp  DWORD PTR [esi]
  41619e:	dec    edi
  41619f:	inc    esi
  4161a0:	loopne 0x4161db
  4161a2:	sbb    bl,dh
  4161a4:	sbb    al,0x96
  4161a6:	dec    esp
  4161a7:	lods   al,BYTE PTR ds:[esi]
  4161a8:	or     esp,edi
  4161aa:	loope  0x416173
  4161ac:	or     cl,BYTE PTR [ebp+0x30]
  4161af:	cmp    al,BYTE PTR [ebx+0x43]
  4161b2:	jnp    0x416221
  4161b4:	pop    esi
  4161b5:	fwait
  4161b6:	mov    ecx,DWORD PTR [esi+0x65]
  4161b9:	dec    ebp
  4161ba:	data16 data16 mov al,ds:0x7a6c34ea
  4161c1:	add    DWORD PTR [eax],ebp
  4161c3:	pop    ds
  4161c4:	jno    0x4161dc
  4161c6:	cmp    cl,dh
  4161c8:	arpl   WORD PTR [eax],dx
  4161ca:	das    
  4161cb:	sbb    DWORD PTR [eax+0x76],ecx
  4161ce:	xor    al,0x59
  4161d0:	dec    ecx
  4161d1:	and    BYTE PTR [eax+0x7a],cl
  4161d4:	call   0xd4e2432c
  4161d9:	std    
  4161da:	sub    eax,DWORD PTR [ebp-0x48]
  4161dd:	jle    0x416165
  4161df:	inc    edi
  4161e0:	ja     0x41622f
  4161e2:	xor    al,0xa
  4161e4:	or     al,0x11
  4161e7:	pop    es
  4161e8:	ss jg  0x416253
  4161eb:	call   0xeca41794
  4161f0:	pop    ecx
  4161f1:	mov    esp,DWORD PTR ds:0x88ea005b
  4161f7:	popf   
  4161f8:	lock rcr BYTE PTR [esi-0x5c7c25f7],1
  4161ff:	js     0x416226
  416201:	arpl   WORD PTR [edi-0x2b0fbdb],di
  416207:	pop    ds
  416208:	add    eax,0x71a8312e
  41620d:	icebp  
  41620e:	cs ja  0x4161d1
  416211:	test   DWORD PTR [esi+0x76],eax
  416214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416215:	rcl    BYTE PTR [edi+0x47acb387],cl
  41621b:	xchg   ebp,eax
  41621c:	sbb    al,ch
  41621e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41621f:	je     0x4161c0
  416221:	and    al,0x1d
  416223:	or     BYTE PTR [edi+0x53],cl
  416226:	adc    BYTE PTR [edi+0x2296cb3e],ah
  41622c:	jmp    0x6842:0x9d5dc163
  416233:	mov    ah,dh
  416235:	mov    ds:0xb2242138,al
  41623a:	hlt    
  41623b:	adc    ecx,DWORD PTR [ecx+0x9]
  41623e:	xchg   ebp,eax
  41623f:	pop    ecx
  416240:	mov    edi,0xbae9b519
  416245:	inc    edi
  416246:	xchg   esi,eax
  416247:	or     BYTE PTR ds:0xe5ddd03d,dl
  41624d:	sar    DWORD PTR [ebp+0x7a],0x27
  416251:	arpl   WORD PTR [edx],bp
  416253:	gs test ah,dh
  416256:	call   0x41270891
  41625b:	adc    eax,0x8f9bb3e3
  416260:	pop    ebp
  416261:	adc    al,0x78
  416263:	sub    dh,BYTE PTR [ebx]
  416265:	xor    BYTE PTR [esi+esi*8+0xb],bl
  416269:	pop    edx
  41626a:	sub    esi,DWORD PTR [ecx-0x11256c15]
  416270:	jmp    0xbcadd827
  416275:	jnp    0x41627f
  416277:	jmp    0xb23ef9de
  41627c:	dec    esi
  41627d:	(bad)  
  41627e:	out    dx,eax
  41627f:	or     eax,edx
  416281:	or     eax,0x3b6eec22
  416286:	scas   eax,DWORD PTR es:[edi]
  416287:	inc    ecx
  416288:	rol    BYTE PTR [edi+0x45],cl
  41628b:	inc    eax
  41628c:	mov    al,0xbb
  41628e:	in     eax,dx
  41628f:	cmp    ah,BYTE PTR [eax]
  416291:	loop   0x4162f7
  416293:	icebp  
  416294:	sbb    bh,0xe3
  416297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416298:	loop   0x416223
  41629a:	lds    ecx,FWORD PTR [esi+0x5298cb82]
  4162a0:	xchg   edx,eax
  4162a1:	push   esi
  4162a2:	fs ret 
  4162a4:	outs   dx,DWORD PTR ds:[esi]
  4162a5:	pop    ecx
  4162a6:	mov    al,0xc7
  4162a8:	pop    esp
  4162a9:	leave  
  4162aa:	push   0x24
  4162ac:	(bad)  
  4162ad:	adc    eax,0x115cdab8
  4162b2:	xchg   ebp,edi
  4162b4:	daa    
  4162b5:	mov    edi,0x3a9f10e0
  4162ba:	sbb    al,0x57
  4162bc:	cli    
  4162bd:	(bad)
  4162c0:	sub    DWORD PTR [ebx],eax
  4162c2:	xadd   DWORD PTR [eax-0x11],ebp
  4162c6:	out    0x73,al
  4162c8:	mov    DWORD PTR [ebp+0x7b76961],ecx
  4162ce:	outs   dx,BYTE PTR ds:[esi]
  4162cf:	cmp    DWORD PTR [ebx],0xffffff93
  4162d2:	daa    
  4162d3:	inc    edx
  4162d4:	std    
  4162d5:	xor    eax,DWORD PTR [esi-0x11b75270]
  4162db:	daa    
  4162dc:	jne    0x416277
  4162de:	sub    ch,BYTE PTR [edx+0x3d57edae]
  4162e4:	bound  ecx,QWORD PTR [ebp+ecx*4-0x1d78d460]
  4162eb:	push   0xffffff99
  4162ed:	xor    BYTE PTR [ebp+0xff955ba],ah
  4162f3:	jp     0x4162d5
  4162f5:	imul   esi,DWORD PTR [ecx+0x7f],0x1a
  4162f9:	xchg   ecx,eax
  4162fa:	sbb    BYTE PTR [ebp+0x74e8bc30],bl
  416300:	inc    esp
  416301:	outs   dx,DWORD PTR ds:[esi]
  416302:	test   DWORD PTR [ebp+0xaff1a31],eax
  416308:	in     al,dx
  416309:	retf   
  41630a:	push   esi
  41630b:	shl    DWORD PTR [ebp+0x66],1
  41630e:	cmp    eax,0x1422012
  416313:	jbe    0x4162df
  416315:	or     ebx,edx
  416317:	repnz pop eax
  416319:	push   edx
  41631a:	lahf   
  41631b:	lods   al,BYTE PTR ds:[esi]
  41631c:	mov    ebp,0xeac15d4e
  416321:	call   0xc0a:0x1264a63b
  416328:	in     eax,0x27
  41632a:	adc    ebp,DWORD PTR [eax-0x7a]
  41632d:	add    ch,ch
  41632f:	pop    ebx
  416330:	mov    edx,gs
  416332:	test   DWORD PTR [ecx-0x3a],ebp
  416335:	ret    
  416336:	mov    al,BYTE PTR [edx]
  416338:	(bad)  
  416339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41633a:	xchg   ebx,eax
  41633b:	fwait
  41633c:	inc    esi
  41633d:	and    al,0xad
  41633f:	out    0x3a,eax
  416341:	add    ebx,0xd72fff41
  416347:	aas    
  416348:	(bad)  
  416349:	adc    BYTE PTR [esi-0x4b],ch
  41634c:	xor    BYTE PTR [edi],0x44
  41634f:	push   ebx
  416350:	mov    edi,DWORD PTR ss:[eax]
  416353:	push   edi
  416354:	add    eax,0x670d1a1b
  416359:	dec    ebp
  41635a:	pop    es
  41635b:	cli    
  41635c:	mov    bh,0xa
  41635e:	adc    ch,BYTE PTR [esi+eax*8+0x6406ef28]
  416365:	xor    esi,DWORD PTR [ebx+0x2c]
  416368:	fsubr  DWORD PTR [ebp+eiz*1-0x593b366]
  41636f:	pop    edi
  416370:	lea    eax,[esi+0x49242378]
  416376:	pop    edi
  416377:	js     0x4163cd
  416379:	xchg   edx,eax
  41637a:	out    0x7b,eax
  41637c:	mov    ch,0xb5
  41637e:	enter  0x64d9,0x63
  416382:	add    BYTE PTR [esi],al
  416384:	jae    0x416388
  416386:	mov    esp,0xabf026a0
  41638b:	sub    eax,0x5bd05503
  416390:	ss xchg edx,eax
  416392:	outs   dx,BYTE PTR ds:[esi]
  416393:	je     0x4163ad
  416395:	int3   
  416396:	scas   al,BYTE PTR es:[di]
  416398:	add    BYTE PTR [edx-0x21ce935e],ah
  41639e:	stc    
  41639f:	jns    0x4163b2
  4163a1:	mov    edi,0xfcea5fb0
  4163a6:	lods   al,BYTE PTR gs:[esi]
  4163a8:	cmc    
  4163a9:	shl    DWORD PTR [esi],1
  4163ab:	pop    ebp
  4163ac:	sub    ch,BYTE PTR [esi+0x2b]
  4163af:	inc    ebx
  4163b0:	xchg   ebp,eax
  4163b1:	lds    ebp,FWORD PTR [esi]
  4163b3:	ret    
  4163b4:	ja     0x41636b
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	jl     0x416547
  4165c6:	push   eax
  4165c7:	pop    ebx
  4165c8:	fsub   QWORD PTR [bp+di-0x4bbe]
  4165cd:	mov    esi,0x4df97f6e
  4165d2:	add    cl,bl
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0xd4c23c46
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx+0x41000003],ch
  419e8a:	jge    0x419e30
  419e8c:	mov    WORD PTR [esi],ds
  419e8e:	imul   edi,DWORD PTR [ebp+0x29],0xf73b2ad8
  419e95:	sti    
  419e96:	jno    0x419e9f
  419e98:	popa   
  419e99:	or     DWORD PTR [ecx-0xbba34e6],edx
  419e9f:	test   BYTE PTR [esi+edx*8],ch
  419ea2:	clc    
  419ea3:	sti    
  419ea4:	mov    al,ds:0x67d42ed4
  419ea9:	dec    edi
  419eaa:	mov    esp,edi
  419eac:	sbb    al,0x4b
  419eae:	dec    edx
  419eaf:	push   cs
  419eb0:	and    edx,DWORD PTR [esi-0x6d]
  419eb3:	push   0xffffffa9
  419eb5:	pop    es
  419eb6:	push   0x26
  419eb8:	int3   
  419eb9:	aad    0xea
  419ebb:	inc    eax
  419ebc:	inc    eax
  419ebd:	jno    0x419e50
  419ebf:	std    
  419ec0:	xor    esp,DWORD PTR [ebx+0x3c4a9f0c]
  419ec6:	js     0x419ebb
  419ec8:	out    dx,al
  419ec9:	and    BYTE PTR [edx+0x4c785da2],bh
  419ecf:	lahf   
  419ed0:	sbb    eax,0x8d8d5828
  419ed5:	mov    ecx,cs
  419ed7:	mov    esi,0x68638b4c
  419edc:	ret    
  419edd:	pop    es
  419ede:	aam    0x4f
  419ee0:	stc    
  419ee1:	bnd jb 0x419e9d
  419ee4:	push   ebx
  419ee5:	inc    edx
  419ee6:	rcl    BYTE PTR [eax+0x65],1
  419ee9:	iret   
  419eea:	xchg   DWORD PTR [ebp+0x37e61d96],ebx
  419ef0:	and    ecx,DWORD PTR [esi-0x835fd50]
  419ef6:	cdq    
  419ef7:	(bad)  
  419ef9:	pusha  
  419efa:	imul   esi,DWORD PTR [eax],0x19a66982
  419f00:	mov    bl,0x47
  419f02:	xchg   sp,sp
  419f05:	push   0x685df16d
  419f0a:	push   ecx
  419f0b:	sub    DWORD PTR [ebx+0x4cb2cba6],0xc8a646c3
  419f15:	daa    
  419f16:	retf   0xdff3
  419f19:	add    BYTE PTR [ebp+ecx*1-0x21],0x1b
  419f1e:	lds    edi,FWORD PTR [ebp*4-0x1f33da3a]
  419f25:	sub    eax,0x2df4f291
  419f2a:	iret   
  419f2b:	mov    ch,BYTE PTR [edx]
  419f2d:	loope  0x419f05
  419f2f:	jns    0x419f85
  419f31:	icebp  
  419f32:	xlat   BYTE PTR ds:[ebx]
  419f33:	outs   dx,BYTE PTR ds:[esi]
  419f34:	test   al,0x52
  419f36:	(bad)  
  419f37:	jge    0x419f5f
  419f39:	mov    DWORD PTR [edi-0x51adc057],ebp
  419f3f:	lods   eax,DWORD PTR ds:[esi]
  419f40:	ret    
  419f41:	mov    al,BYTE PTR [edi-0x40a96855]
  419f47:	das    
  419f48:	into   
  419f49:	sar    eax,1
  419f4b:	inc    ebp
  419f4c:	ins    BYTE PTR es:[edi],dx
  419f4d:	ficomp DWORD PTR [eax+0x72]
  419f50:	add    al,0x56
  419f52:	mov    eax,ds:0x9eb0c26d
  419f57:	adc    DWORD PTR [eax-0x13],ebp
  419f5a:	jae    0x419fbf
  419f5c:	mov    bh,0xd2
  419f5e:	push   edi
  419f5f:	pop    ebx
  419f60:	mov    DWORD PTR [ebp+0x2f4943c9],ebp
  419f66:	cld    
  419f67:	pop    ds
  419f68:	inc    edi
  419f69:	ror    ecx,0xca
  419f6c:	xchg   edx,eax
  419f6d:	(bad)  
  419f6e:	not    DWORD PTR [edx-0x1af2615d]
  419f74:	retf   0x372a
  419f77:	inc    esp
  419f78:	sub    eax,0x1f5d080d
  419f7d:	pop    esp
  419f7e:	mov    edi,0xd9f2bc06
  419f83:	adc    DWORD PTR [esi-0x647925ef],edi
  419f89:	ins    BYTE PTR es:[edi],dx
  419f8a:	jl     0x419f7d
  419f8c:	sub    al,0x2d
  419f8e:	push   ecx
  419f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f90:	in     eax,dx
  419f91:	repnz cmp eax,esp
  419f94:	test   ch,cl
  419f96:	and    esi,DWORD PTR [edx-0x59]
  419f99:	fstp   DWORD PTR [eax-0x44605613]
  419f9f:	cmc    
  419fa0:	mov    esp,0xd89717ba
  419fa5:	or     bl,ah
  419fa7:	loopne 0x419fda
  419fa9:	test   al,0x1d
  419fab:	pop    eax
  419fac:	ins    DWORD PTR es:[edi],dx
  419fad:	les    ecx,FWORD PTR [edi]
  419faf:	scas   eax,DWORD PTR es:[edi]
  419fb0:	imul   esi,DWORD PTR [eax+0x1e74442a],0xffffff84
  419fb7:	adc    eax,0xee90b976
  419fbc:	cdq    
  419fbd:	jle    0x419f64
  419fbf:	in     al,dx
  419fc0:	inc    edi
  419fc1:	jbe    0x419f5f
  419fc3:	push   0x84751ebd
  419fc8:	and    eax,0xaa31588e
  419fcd:	cmp    eax,0xe7ab4c7f
  419fd2:	jae    0x41a04b
  419fd4:	xor    dh,BYTE PTR [esi+eiz*1-0x16d1a92f]
  419fdb:	mov    dh,0x3f
  419fdd:	xor    ebp,DWORD PTR es:[ecx+0x22ef24]
  419fe4:	xor    BYTE PTR [edx+edi*4+0x657d11a],ah
  419feb:	mov    WORD PTR [ebp-0x443c037],ds
  419ff1:	sbb    BYTE PTR [edi+0x36],dh
  419ff4:	fsub   st(1),st
  419ff6:	repnz enter 0x7480,0x1f
  419ffb:	in     al,dx
  419ffc:	xchg   ebp,eax
  419ffd:	shr    esp,cl
  419fff:	cmp    DWORD PTR [eax-0x53],ebp
  41a002:	ins    DWORD PTR es:[edi],dx
  41a003:	mov    WORD PTR ds:0x7c890faf,es
  41a009:	(bad)  
  41a00a:	test   eax,0xf1d669b6
  41a00f:	mov    ebx,0xd49a14e9
  41a014:	mov    bh,0x73
  41a016:	mov    ds:0xc2edcc95,al
  41a01b:	hlt    
  41a01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a01d:	jle    0x419fd0
  41a01f:	out    0x35,al
  41a021:	or     dh,ch
  41a023:	adc    BYTE PTR [ecx],ah
  41a025:	cmp    ebp,DWORD PTR [esi+0x2e3c2309]
  41a02b:	jmp    0x2b6d6007
  41a030:	inc    ecx
  41a031:	jno    0x41a030
  41a033:	cmp    dl,cl
  41a035:	mov    esi,0x3877f619
  41a03a:	pop    esi
  41a03b:	add    DWORD PTR [edi+0x688cf2d],ebx
  41a041:	(bad)
  41a045:	push   ss
  41a046:	fild   QWORD PTR [eax]
  41a048:	mov    al,0x37
  41a04a:	and    ebp,DWORD PTR [ecx]
  41a04c:	mov    edi,DWORD PTR [eax+0x65]
  41a04f:	dec    eax
  41a050:	push   cs
  41a051:	fcmovne st,st(2)
  41a053:	in     eax,dx
  41a054:	dec    eax
  41a055:	xchg   esp,eax
  41a056:	sub    BYTE PTR [esi-0x5b],0x94
  41a05a:	(bad)
  41a05d:	jae    0x41a01e
  41a05f:	add    esi,DWORD PTR [ebx]
  41a061:	jns    0x41a036
  41a063:	xchg   ebp,eax
  41a064:	out    dx,eax
  41a065:	test   dh,cl
  41a067:	fst    QWORD PTR [edi+0x6694faf2]
  41a06d:	xchg   esi,eax
  41a06e:	mov    ecx,0xf6b9c36d
  41a073:	cmp    BYTE PTR [ebx+0x3a],ah
  41a076:	pop    edi
  41a077:	and    ch,BYTE PTR [ecx-0x41]
  41a07a:	push   esp
  41a07b:	sar    BYTE PTR [ecx],cl
  41a07d:	dec    esi
  41a07e:	add    edx,ebx
  41a080:	ins    DWORD PTR es:[edi],dx
  41a081:	push   ecx
  41a082:	mov    ebp,0x6178d417
  41a087:	mov    WORD PTR [edi],gs
  41a089:	jmp    DWORD PTR [ebp-0x3e]
  41a08c:	pop    esi
  41a08d:	fsubrp st(3),st
  41a08f:	push   ecx
  41a090:	div    DWORD PTR [edx+0x73]
  41a093:	jnp    0x41a089
  41a095:	dec    edx
  41a096:	and    BYTE PTR [esi],bh
  41a098:	add    eax,DWORD PTR [edi+0x48]
  41a09b:	pop    esp
  41a09c:	xor    dl,BYTE PTR [ecx+0x67237cd9]
  41a0a2:	mov    bh,0x9a
  41a0a4:	cmp    bl,BYTE PTR [ebp+0xb]
  41a0a7:	or     BYTE PTR [ebx-0x5b],0x9c
  41a0ab:	xchg   BYTE PTR [edx+0x1add4df4],dl
  41a0b1:	bound  ebx,QWORD PTR [edi-0x50d04bc8]
  41a0b7:	push   0x4
  41a0b9:	jle    0x41a119
  41a0bb:	xlat   BYTE PTR ds:[ebx]
  41a0bc:	inc    esp
  41a0bd:	xchg   BYTE PTR [eax],bh
  41a0bf:	jo     0x41a11c
  41a0c1:	and    DWORD PTR [eax],esp
  41a0c3:	(bad)  
  41a0c4:	hlt    
  41a0c5:	cmp    eax,0x9a4d4696
  41a0ca:	ins    BYTE PTR es:[edi],dx
  41a0cb:	push   0xffffffb4
  41a0cd:	inc    esp
  41a0ce:	xor    DWORD PTR cs:[ebp-0x2aeb5866],edx
  41a0d5:	or     DWORD PTR [ebx+ebx*2+0x7c],esi
  41a0d9:	sbb    al,0xba
  41a0db:	es popa 
  41a0dd:	ror    edi,1
  41a0df:	inc    esp
  41a0e0:	sub    al,0xd9
  41a0e2:	cmp    al,0xfd
  41a0e4:	les    edx,FWORD PTR [ecx]
  41a0e6:	lods   al,BYTE PTR ds:[esi]
  41a0e7:	les    esi,FWORD PTR [ebx]
  41a0e9:	(bad)  
  41a0eb:	mov    eax,0x43fae80
  41a0f0:	xchg   DWORD PTR [ebx],ecx
  41a0f2:	push   cs
  41a0f3:	xchg   esi,eax
  41a0f4:	push   eax
  41a0f5:	push   esi
  41a0f6:	icebp  
  41a0f7:	in     al,0xb2
  41a0f9:	cdq    
  41a0fa:	pop    ebp
  41a0fb:	jbe    0x41a171
  41a0fd:	cs (bad) 
  41a0ff:	mov    eax,ds:0x7cdf8ad3
  41a104:	jecxz  0x41a0fd
  41a106:	addr16 mov dh,0x87
  41a109:	lock cmp ebx,ecx
  41a10c:	retf   
  41a10d:	bound  esp,QWORD PTR [edx]
  41a10f:	mov    ds:0x9671e177,eax
  41a114:	xchg   esp,eax
  41a115:	pusha  
  41a116:	and    DWORD PTR [ebx+0x6],edx
  41a119:	dec    edx
  41a11a:	push   esi
  41a11b:	out    0xc0,eax
  41a11d:	sbb    BYTE PTR [esp-0x3c],ah
  41a121:	pusha  
  41a122:	cwde   
  41a123:	dec    ecx
  41a124:	jne    0x41a185
  41a126:	mov    cl,BYTE PTR [ebp-0x27ca84c0]
  41a12c:	pop    edi
  41a12d:	xlat   BYTE PTR ds:[ebx]
  41a12e:	fscale 
  41a130:	pusha  
  41a131:	ja     0x41a124
  41a133:	cdq    
  41a134:	adc    BYTE PTR [ecx+0x6c059b5d],dh
  41a13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a13b:	add    DWORD PTR [esi],ecx
  41a13d:	xor    ecx,DWORD PTR [ebx+0x2c]
  41a140:	int3   
  41a141:	lds    esi,FWORD PTR [ebx-0x5385e18e]
  41a147:	cmp    eax,0x808137e4
  41a14c:	jne    0x41a16e
  41a14e:	lock test BYTE PTR [ecx-0x2b5e629c],dh
  41a155:	jmp    0x519a:0x2cc81e52
  41a15c:	ret    0x2aa2
  41a15f:	sbb    al,0x15
  41a161:	jns    0x65ef86d9
  41a167:	push   cs
  41a168:	ret    0x6a1d
  41a16b:	nop
  41a16c:	out    dx,al
  41a16d:	xor    eax,0xd4a90b55
  41a172:	xchg   edi,eax
  41a173:	pop    ds
  41a174:	scas   al,BYTE PTR es:[edi]
  41a175:	push   cs
  41a176:	or     cl,BYTE PTR [edi-0x762ecc85]
  41a17c:	pushf  
  41a17d:	xlat   BYTE PTR ds:[ebx]
  41a17e:	pop    ebx
  41a17f:	cs ins BYTE PTR es:[edi],dx
  41a181:	or     ax,0x9ec6
  41a185:	retf   0x2270
  41a188:	ins    BYTE PTR es:[edi],dx
  41a189:	(bad)  
  41a18a:	push   esi
  41a18b:	cdq    
  41a18c:	pop    edx
  41a18d:	clc    
  41a18e:	cmp    ch,BYTE PTR [eax+ecx*1]
  41a191:	mov    cl,0x55
  41a193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a194:	jmp    0x41a1d3
  41a196:	clc    
  41a197:	jmp    0x41a12d
  41a199:	call   0xc8a9:0x10c7a95d
  41a1a0:	mov    ds:0x8da4e476,al
  41a1a5:	and    dl,ch
  41a1a7:	clc    
  41a1a8:	pop    es
  41a1a9:	scas   al,BYTE PTR es:[edi]
  41a1aa:	and    cl,ch
  41a1ac:	add    eax,0x75e19441
  41a1b1:	cwde   
  41a1b2:	sub    edx,DWORD PTR [esi]
  41a1b4:	pop    ss
  41a1b5:	dec    ebx
  41a1b6:	cmp    BYTE PTR [esp+esi*2-0x65],bh
  41a1ba:	fwait
  41a1bb:	mov    BYTE PTR [eax],0xe1
  41a1be:	shr    bh,0x98
  41a1c1:	inc    eax
  41a1c2:	xchg   ecx,eax
  41a1c3:	ret    0x2e6e
  41a1c6:	outs   dx,BYTE PTR ds:[esi]
  41a1c7:	mov    eax,0x1789b14c
  41a1cc:	dec    ecx
  41a1cd:	test   eax,0xe37c3a0e
  41a1d2:	mov    bh,0xc4
  41a1d4:	xor    dh,BYTE PTR [eax-0x7ff24ed4]
  41a1da:	xor    ebx,edx
  41a1dc:	mov    ebx,edi
  41a1de:	ret    
  41a1df:	cmp    ah,dh
  41a1e1:	ins    BYTE PTR es:[edi],dx
  41a1e2:	xor    DWORD PTR [ecx],esi
  41a1e4:	jmp    0xb70e:0xaa53f0ec
  41a1eb:	xchg   esp,eax
  41a1ec:	and    eax,0x6007ace2
  41a1f1:	loopne 0x41a20d
  41a1f3:	gs rol bh,0x2b
  41a1f7:	hlt    
  41a1f8:	in     eax,0x21
  41a1fa:	bound  edi,QWORD PTR [ecx+0x73]
  41a1fd:	out    0xa7,eax
  41a1ff:	inc    edx
  41a200:	test   eax,0x52913383
  41a205:	pusha  
  41a206:	mov    cl,0xa6
  41a208:	pop    ds
  41a209:	mov    ebx,0x34ce4507
  41a20e:	mov    dl,0x34
  41a210:	stos   BYTE PTR es:[edi],al
  41a211:	pop    edi
  41a212:	lock bound ebp,QWORD PTR [edx+eiz*2]
  41a216:	jmp    0x17f44d1f
  41a21b:	les    esp,FWORD PTR [esi+edi*2]
  41a21e:	inc    eax
  41a21f:	fiadd  WORD PTR [edx-0x4aec91f7]
  41a225:	or     BYTE PTR [edx-0x3eec6676],cl
  41a22b:	rcl    BYTE PTR [eax],cl
  41a22d:	pop    DWORD PTR [edi]
  41a22f:	aaa    
  41a230:	mov    ds:0x9b5628,eax
	...
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	add    ebx,ebp
  41a244:	mov    ds:0xdeeebef,eax
  41a249:	mov    ebp,DWORD PTR [edi]
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	adc    ebp,ebx
  41a24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a24f:	sbb    BYTE PTR [edi+0x10],dl
  41a252:	and    BYTE PTR [ecx],al
  41a254:	add    BYTE PTR [ebx+0x39000003],ch
  41a25a:	adc    BYTE PTR [ecx],dh
  41a25c:	(bad)  
  41a25d:	aad    0xab
  41a25f:	xor    BYTE PTR [eax+edi*2],bh
  41a262:	mov    ?,WORD PTR [edi-0x47703a0c]
  41a268:	xor    al,0x29
  41a26a:	jo     0x41a208
  41a26c:	jp     0x41a279
  41a26e:	jmp    0x41a25d
  41a270:	stos   DWORD PTR es:[edi],eax
  41a271:	lock sbb BYTE PTR [edx+edi*8-0x36],cl
  41a276:	ins    DWORD PTR es:[edi],dx
  41a277:	ror    BYTE PTR [eax-0xd7e74c3],0x67
  41a27e:	cli    
  41a27f:	shl    esi,0x9
  41a282:	xor    eax,0xcab8e7d8
  41a287:	xor    DWORD PTR [ebx+ebp*4],ebx
  41a28a:	jp     0x41a2ef
  41a28c:	push   ebp
  41a28d:	pushf  
  41a28e:	or     al,0x5a
  41a290:	cwde   
  41a291:	adc    BYTE PTR ds:0xe28ca512,0xb5
  41a298:	scas   eax,DWORD PTR es:[edi]
  41a299:	cmp    al,0x97
  41a29b:	sahf   
  41a29c:	xor    ebp,eax
  41a29e:	inc    esi
  41a29f:	inc    edi
  41a2a0:	sbb    BYTE PTR [ebp-0x73],0x62
  41a2a4:	xchg   edi,eax
  41a2a5:	xor    eax,0x2bd8e4c0
  41a2aa:	mov    ebp,0xb200f11e
  41a2af:	push   ss
  41a2b0:	xchg   esp,eax
  41a2b1:	ret    
  41a2b2:	(bad)  
  41a2b3:	out    0x8e,eax
  41a2b5:	dec    ebx
  41a2b6:	mov    ds:0x9f207d71,eax
  41a2bb:	push   ebx
  41a2bc:	cmp    al,0x3e
  41a2be:	xor    BYTE PTR [edx+0x74],ah
  41a2c1:	(bad)  
  41a2c2:	push   ecx
  41a2c3:	outs   dx,BYTE PTR ds:[esi]
  41a2c4:	inc    ebp
  41a2c5:	and    DWORD PTR [edi],0x311107ff
  41a2cb:	test   ch,ah
  41a2cd:	cwde   
  41a2ce:	icebp  
  41a2cf:	cmp    eax,0x73b198bf
  41a2d4:	inc    DWORD PTR [ebx+0x4a0fba2b]
  41a2da:	xchg   edx,eax
  41a2db:	daa    
  41a2dc:	add    BYTE PTR [edi-0x533a7d84],dl
  41a2e2:	ret    
  41a2e3:	mov    ch,0x2e
  41a2e5:	cmp    dh,BYTE PTR [ecx-0x586c4c50]
  41a2eb:	sbb    BYTE PTR [ebx+esi*2+0x16ac9072],0x47
  41a2f3:	addr16 loope 0x41a34b
  41a2f6:	cmp    al,0x57
  41a2f8:	push   esp
  41a2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2fa:	js     0x41a305
  41a2fc:	sbb    al,0xd7
  41a2fe:	pusha  
  41a2ff:	mov    eax,ds:0xed2fb1c7
  41a304:	adc    ebp,0x76b011dc
  41a30a:	jo     0x41a2d9
  41a30c:	arpl   WORD PTR [edx],si
  41a30e:	test   eax,0x3d753f61
  41a313:	and    dh,BYTE PTR [esi-0x454561b7]
  41a319:	xchg   esp,eax
  41a31a:	outs   dx,BYTE PTR ds:[esi]
  41a31b:	jge    0x41a2bf
  41a31d:	pop    ebp
  41a31e:	jo     0x41a354
  41a320:	clc    
  41a321:	jnp    0x41a388
  41a323:	inc    esp
  41a324:	push   ebp
  41a325:	call   0xfaf6e42
  41a32a:	(bad)  
  41a32c:	jnp    0x41a300
  41a32e:	mov    ss,WORD PTR [edx+ebx*8-0x5098d4f7]
  41a335:	in     eax,dx
  41a336:	cmp    eax,0x29dde367
  41a33b:	xchg   ebx,eax
  41a33c:	sbb    eax,0xa5002a7b
  41a341:	pop    esp
  41a342:	leave  
  41a343:	repnz pop eax
  41a345:	outs   dx,BYTE PTR ds:[esi]
  41a346:	xor    eax,0x977bb891
  41a34b:	sbb    eax,0xd6b87920
  41a350:	outs   dx,BYTE PTR ds:[esi]
  41a351:	mov    DWORD PTR ds:0xf698b39a,esp
  41a357:	or     BYTE PTR [edi+0x75fef654],bh
  41a35d:	in     eax,0xf4
  41a35f:	jo     0x41a356
  41a361:	add    BYTE PTR [eax],0x7
  41a364:	pop    edi
  41a365:	cmp    edi,DWORD PTR [ebp-0x64b7d6d4]
  41a36b:	push   es
  41a36c:	fisttp DWORD PTR [edi-0x38]
  41a36f:	pushf  
  41a370:	sbb    al,0xf9
  41a372:	push   eax
  41a373:	xchg   ebp,eax
  41a374:	or     dl,BYTE PTR [esp+ebp*1]
  41a377:	sbb    DWORD PTR [eax],0xffffff93
  41a37a:	cmp    al,0x18
  41a37c:	adc    dh,cl
  41a37e:	lock push 0xc2f57006
  41a384:	add    eax,0x705500c4
  41a389:	jmp    0xa068e761
  41a38e:	pushf  
  41a38f:	jge    0x41a3ac
  41a391:	inc    esp
  41a392:	push   ds
  41a393:	sbb    ch,BYTE PTR [ebx+ebx*1-0x52]
  41a397:	pop    ebp
  41a398:	push   cs
  41a399:	cmp    eax,0x602203bf
  41a39e:	mov    ch,0xe9
  41a3a0:	test   dl,bl
  41a3a2:	mov    ss,ebx
  41a3a4:	rcr    edx,1
  41a3a6:	lahf   
  41a3a7:	sbb    BYTE PTR [ebp-0x1060ea8c],bl
  41a3ad:	pop    esp
  41a3ae:	stos   BYTE PTR es:[edi],al
  41a3af:	scas   eax,DWORD PTR es:[edi]
  41a3b0:	sub    al,0x74
  41a3b2:	push   cs
  41a3b3:	sub    eax,0x55d3e85e
  41a3b8:	adc    BYTE PTR [esi],dl
  41a3ba:	mov    edx,ebx
  41a3bc:	push   esi
  41a3bd:	dec    BYTE PTR [eax+0x72]
  41a3c0:	and    bh,BYTE PTR ds:0xfcf52308
  41a3c6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c8:	(bad)  
  41a3ca:	sbb    DWORD PTR [edi],ebx
  41a3cc:	and    eax,0x78b53dca
  41a3d1:	rol    DWORD PTR [edx],0x68
  41a3d4:	adc    cl,BYTE PTR [edx]
  41a3d6:	cs popa 
  41a3d8:	sub    BYTE PTR [esi+0x302745a8],bh
  41a3de:	in     eax,dx
  41a3df:	mov    al,0x77
  41a3e1:	sub    ebp,0xb20c82b3
  41a3e7:	aad    0xb0
  41a3e9:	dec    esi
  41a3ea:	jg     0x41a451
  41a3ec:	or     al,0x5b
  41a3ee:	int3   
  41a3ef:	jle    0x41a46d
  41a3f1:	fld    DWORD PTR [ecx-0x325189a4]
  41a3f7:	mov    ebx,0x86936d67
  41a3fc:	push   ebp
  41a3fd:	pop    edi
  41a3fe:	cmp    al,0x48
  41a400:	shl    BYTE PTR [esi+0x45a7d8e2],1
  41a406:	pop    edx
  41a407:	mov    ss,WORD PTR [eax]
  41a409:	cmp    eax,esi
  41a40b:	cmp    eax,0xb09c891e
  41a410:	push   ss
  41a411:	add    BYTE PTR [eax+0x2],dh
  41a414:	rol    edi,cl
  41a416:	dec    esp
  41a417:	gs pop ds
  41a419:	pop    ds
  41a41a:	add    ecx,DWORD PTR [edx+eiz*1+0x31]
  41a41e:	adc    BYTE PTR ds:0x69a477dd,bl
  41a424:	xchg   edx,eax
  41a425:	jno    0x41a484
  41a427:	inc    ebp
  41a428:	or     eax,0xd31086fd
  41a42d:	fs aaa 
  41a42f:	(bad)  [eax]
  41a431:	ret    
  41a432:	popf   
  41a433:	xchg   esp,eax
  41a434:	in     eax,dx
  41a435:	jnp    0x41a436
  41a437:	cdq    
  41a438:	int    0xcd
  41a43a:	jb     0x41a494
  41a43c:	push   ss
  41a43d:	in     al,0xf1
  41a43f:	mov    dl,0x3f
  41a441:	push   cs
  41a442:	mov    bl,0x18
  41a444:	jno    0x41a467
  41a446:	add    edx,DWORD PTR [ebx+ecx*8+0x67a32f07]
  41a44d:	popa   
  41a44e:	mov    dl,0x9a
  41a450:	xor    eax,0x35c11f4d
  41a455:	push   ds
  41a456:	jne    0x41a401
  41a458:	push   ebp
  41a459:	mov    edi,0x464facc5
  41a45e:	or     bl,BYTE PTR [eax-0x108986f6]
  41a464:	cmove  ebx,DWORD PTR [eax-0x19]
  41a468:	loope  0x41a4cb
  41a46a:	imul   edi,DWORD PTR [ebp+0x21],0xfffffffc
  41a46e:	(bad)  
  41a470:	in     eax,0x51
  41a472:	addr16 lahf 
  41a474:	push   0x68472d75
  41a479:	or     dh,dl
  41a47b:	pop    esp
  41a47c:	gs (bad) 
  41a47e:	jnp    0x41a43c
  41a480:	pop    ss
  41a481:	adc    eax,0x812202a2
  41a486:	popf   
  41a487:	push   edx
  41a488:	cmp    bl,al
  41a48a:	jp     0x41a4ff
  41a48c:	mov    eax,ds:0xf6a927d3
  41a491:	push   ebp
  41a492:	fnstsw WORD PTR [ebx-0x59]
  41a495:	call   0x550e:0x4628dd12
  41a49c:	arpl   WORD PTR [edi+ecx*2],di
  41a49f:	cwde   
  41a4a0:	push   es
  41a4a1:	mov    WORD PTR [ebx-0x4c],?
  41a4a4:	jb     0x41a467
  41a4a6:	lea    edx,[ebp+0x6acc4d64]
  41a4ac:	je     0x41a467
  41a4ae:	sub    al,0xbe
  41a4b0:	sub    bl,dl
  41a4b2:	dec    eax
  41a4b3:	mov    dh,0xe2
  41a4b5:	pop    edx
  41a4b6:	and    edx,ecx
  41a4b8:	mov    ds:0x9ae89dfa,eax
  41a4bd:	hlt    
  41a4be:	cwde   
  41a4bf:	sub    dh,BYTE PTR [esi+0x75]
  41a4c2:	ss mov edi,0x32f3cb94
  41a4c8:	repnz shl BYTE PTR [edi-0xf5d924c],0x2a
  41a4d0:	std    
  41a4d1:	jecxz  0x41a482
  41a4d3:	inc    ebp
  41a4d4:	nop
  41a4d5:	sbb    eax,0x3e24fe96
  41a4da:	test   al,0x1d
  41a4dc:	mov    ch,0x28
  41a4de:	inc    ecx
  41a4df:	pushf  
  41a4e0:	cmp    DWORD PTR [eax],ebx
  41a4e2:	inc    eax
  41a4e3:	push   0x2a40e9e3
  41a4e8:	pusha  
  41a4e9:	data16 ins BYTE PTR es:[edi],dx
  41a4eb:	mov    bl,0xe5
  41a4ed:	sahf   
  41a4ee:	sbb    esi,edi
  41a4f0:	mov    ?,WORD PTR [esi+0x1e]
  41a4f3:	test   BYTE PTR [ebx+eax*4-0x30],bh
  41a4f7:	mov    ebp,esp
  41a4f9:	scas   al,BYTE PTR es:[edi]
  41a4fa:	xor    dl,BYTE PTR ds:0xd8dccbee
  41a500:	mov    bh,0x3e
  41a502:	imul   esi,DWORD PTR [eax+0x24],0x420e6c5d
  41a509:	retf   
  41a50a:	jnp    0x41a4f2
  41a50c:	fstp   TBYTE PTR [ebp-0x7d65918f]
  41a512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a513:	push   esp
  41a514:	fidiv  WORD PTR [eax+edi*4-0x373b8463]
  41a51b:	and    al,0x62
  41a51d:	and    ecx,DWORD PTR [ebp-0x24a54a3a]
  41a523:	das    
  41a524:	das    
  41a525:	xor    eax,0x938483bc
  41a52a:	xor    dh,BYTE PTR [edx+0x15]
  41a52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52e:	aaa    
  41a52f:	test   ecx,edi
  41a531:	push   esp
  41a532:	pop    es
  41a533:	call   0xf60d9727
  41a538:	lahf   
  41a539:	cmp    al,0xce
  41a53c:	jmp    FWORD PTR [ebx+0x77b7a0ba]
  41a542:	into   
  41a543:	sub    eax,0xbfb574d2
  41a548:	out    0x2c,eax
  41a54a:	xchg   BYTE PTR [esi+0x7ebdee88],bh
  41a550:	das    
  41a551:	ss in  eax,dx
  41a553:	sub    eax,0x7b87f19e
  41a558:	mov    ch,BYTE PTR [esi+0x7]
  41a55b:	sbb    al,0x31
  41a55d:	enter  0x8423,0x96
  41a561:	fist   DWORD PTR [ecx-0x5477efb4]
  41a567:	data16 lahf 
  41a569:	ds in  al,dx
  41a56b:	push   ecx
  41a56c:	rcl    BYTE PTR [edx+0x218c49f7],1
  41a572:	sub    DWORD PTR [edx+ebp*4-0x44],ebp
  41a576:	mov    ?,esi
  41a578:	jmp    edi
  41a57a:	mov    eax,ds:0x7db5dac8
  41a57f:	xor    dh,bl
  41a581:	aaa    
  41a582:	mov    ds:0x22dafbdf,eax
  41a587:	bnd jl 0x41a561
  41a58a:	test   DWORD PTR [ebp-0x4b],ebx
  41a58d:	jb     0x41a5f7
  41a58f:	and    edi,DWORD PTR [ebx]
  41a591:	mov    WORD PTR [ebx+0xb18a995],es
  41a597:	jge    0x41a5cf
  41a599:	test   al,0xc2
  41a59b:	arpl   WORD PTR [edx-0x34],si
  41a59e:	mov    bh,0x7e
  41a5a0:	jmp    0x41a5e7
  41a5a2:	push   esp
  41a5a3:	fimul  WORD PTR [eax+eiz*8]
  41a5a6:	test   eax,0x259b44e0
  41a5ab:	ds dec edi
  41a5ad:	sahf   
  41a5ae:	test   DWORD PTR [ebp+0x7bd4c7d4],ecx
  41a5b4:	push   ecx
  41a5b5:	sahf   
  41a5b6:	in     al,dx
  41a5b7:	sub    bl,BYTE PTR [edi-0xd]
  41a5ba:	mov    bh,0xc0
  41a5bc:	dec    ecx
  41a5bd:	inc    esi
  41a5be:	les    esp,FWORD PTR [ebp-0x64]
  41a5c1:	dec    esp
  41a5c2:	jecxz  0x41a5ff
  41a5c4:	add    DWORD PTR [ebp+0x36],edi
  41a5c7:	sbb    esi,DWORD PTR [eax+0x19]
  41a5ca:	push   cs
  41a5cb:	pop    ebx
  41a5cc:	sysexit 
  41a5ce:	das    
  41a5cf:	push   esp
  41a5d0:	and    edi,ebp
  41a5d2:	sbb    BYTE PTR [ecx+0x18],bh
  41a5d5:	test   al,0x83
  41a5d7:	mov    esp,0x8c7f673c
  41a5dc:	jae    0x41a622
  41a5de:	lea    eax,[edx-0x4e]
  41a5e1:	loop   0x41a5e1
  41a5e3:	test   DWORD PTR [esi],ecx
  41a5e5:	mov    ebp,0x41c3e879
  41a5ea:	in     al,dx
  41a5eb:	das    
  41a5ec:	push   ebx
  41a5ed:	sub    esp,eax
  41a5ef:	push   ds
  41a5f0:	pop    ss
  41a5f1:	sbb    al,0x50
  41a5f3:	push   es
  41a5f4:	ds pop ecx
  41a5f6:	pop    ss
  41a5f7:	mov    ah,0xd
  41a5f9:	loopne 0x41a66e
  41a5fb:	jp     0x41a58b
  41a5fd:	fistp  QWORD PTR [eax]
  41a5ff:	mov    edi,0xec00f5f3
	...
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbbe9:0x75b12a4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+0x38000003],ch
  41a62a:	xor    eax,0x33829fc0
  41a62f:	sar    BYTE PTR [ebx+0x4903e2a2],0x41
  41a636:	sub    al,0xb6
  41a638:	rol    DWORD PTR ds:0x4b22d01d,0x84
  41a63f:	add    eax,eax
  41a641:	xlat   BYTE PTR ds:[ebx]
  41a642:	jno    0x41a5d8
  41a644:	stc    
  41a645:	popf   
  41a646:	push   ds
  41a647:	push   0xfdd357b6
  41a64c:	xchg   edx,eax
  41a64d:	mov    esi,0xfc9a0f25
  41a652:	loop   0x41a677
  41a654:	lods   al,BYTE PTR ds:[esi]
  41a655:	add    ch,ch
  41a657:	icebp  
  41a658:	push   ebx
  41a659:	in     al,dx
  41a65a:	mov    ds:0xe93965a7,al
  41a65f:	cld    
  41a660:	lods   al,BYTE PTR ds:[esi]
  41a661:	bswap  esi
  41a663:	push   ecx
  41a664:	sbb    edx,esp
  41a666:	sbb    BYTE PTR [ecx+ecx*1+0x79],bl
  41a66a:	xchg   DWORD PTR [ebx],ecx
  41a66c:	lds    esp,FWORD PTR [ebx+0x7c]
  41a66f:	inc    eax
  41a670:	cmp    eax,DWORD PTR [esi-0x32]
  41a673:	sbb    al,0x56
  41a675:	test   DWORD PTR [ebx+0x2c],edx
  41a678:	stos   BYTE PTR es:[edi],al
  41a679:	pop    eax
  41a67a:	push   ds
  41a67b:	cs loop 0x41a629
  41a67e:	je     0x41a6ea
  41a680:	sub    ebp,esp
  41a682:	add    BYTE PTR [ebx+0x69],ch
  41a685:	jecxz  0x41a702
  41a687:	int3   
  41a688:	inc    edi
  41a689:	pop    esi
  41a68a:	lds    ecx,FWORD PTR [edx+eiz*8-0x7eedcfcb]
  41a691:	pop    ss
  41a692:	or     BYTE PTR [edi+0x705faca7],ah
  41a698:	rol    BYTE PTR [eax+0x27],1
  41a69b:	dec    ebx
  41a69c:	xchg   ebp,eax
  41a69d:	cmp    BYTE PTR [esi+ebx*1],dl
  41a6a0:	out    dx,al
  41a6a1:	ss ss int 0xdd
  41a6a5:	xchg   esi,eax
  41a6a6:	cmp    BYTE PTR [eax+ebx*4+0x66b798a1],bh
  41a6ad:	xor    al,0x35
  41a6af:	push   ebx
  41a6b0:	sub    bh,BYTE PTR [ecx+0x1b66db8c]
  41a6b6:	jmp    0x41a71e
  41a6b8:	test   eax,0x32407336
  41a6bd:	je     0x41a738
  41a6bf:	xlat   BYTE PTR ds:[ebx]
  41a6c0:	cmp    al,0x2d
  41a6c2:	aam    0x3d
  41a6c4:	mov    ecx,0xe4e1da66
  41a6c9:	adc    al,bh
  41a6cb:	mov    dh,0xd6
  41a6cd:	dec    esi
  41a6ce:	and    ecx,DWORD PTR [ebx]
  41a6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d1:	out    dx,eax
  41a6d2:	stos   BYTE PTR es:[edi],al
  41a6d3:	stos   DWORD PTR es:[edi],eax
  41a6d4:	bound  esi,QWORD PTR [edx+0x7baa27a2]
  41a6da:	and    ebp,DWORD PTR [ebx-0x3c44df34]
  41a6e0:	repnz pusha 
  41a6e2:	mov    eax,0xa42748db
  41a6e7:	push   cs
  41a6e8:	xchg   edi,eax
  41a6e9:	jle    0x41a6fd
  41a6eb:	call   0x93dc:0x3787d268
  41a6f2:	lea    esi,[ebx]
  41a6f4:	ja     0x41a762
  41a6f6:	(bad)  
  41a6f7:	push   esi
  41a6f8:	push   ebx
  41a6f9:	int3   
  41a6fa:	mov    cl,BYTE PTR [ebx+0x3a1ad2d9]
  41a700:	lds    edx,FWORD PTR [edi-0x46]
  41a703:	data16 jge 0x41a785
  41a706:	jl     0x41a713
  41a708:	mov    bl,0xa3
  41a70a:	cwde   
  41a70b:	mov    al,0xc
  41a70d:	les    esp,FWORD PTR [ecx-0x4ab72721]
  41a713:	mov    dh,0xa
  41a715:	cmp    DWORD PTR [ebp+0x7],ebx
  41a718:	dec    ebx
  41a719:	adc    eax,0xf7fa70f3
  41a71e:	fldenv ds:0xd5746b32
  41a724:	jae    0x41a6aa
  41a726:	mov    eax,ds:0xfb27e529
  41a72b:	sub    edi,DWORD PTR ds:0xa79216e9
  41a731:	imul   ebp,DWORD PTR [ecx],0xa9f238bd
  41a737:	in     eax,dx
  41a738:	iret   
  41a739:	pusha  
  41a73a:	xor    cl,dh
  41a73c:	xchg   edx,eax
  41a73d:	scas   al,BYTE PTR es:[edi]
  41a73e:	mov    eax,0x1e39838b
  41a743:	xchg   esi,eax
  41a744:	sub    dh,BYTE PTR [ebx-0x23]
  41a747:	mov    esp,0x141ea14a
  41a74c:	retf   0xf55d
  41a74f:	iret   
  41a750:	cs pop esi
  41a752:	sub    al,0xd
  41a754:	fwait
  41a755:	or     al,BYTE PTR [edx]
  41a757:	(bad)  
  41a758:	out    dx,al
  41a759:	repz (bad) 
  41a75c:	call   0x9e1a:0x32ca4d79
  41a763:	lods   al,BYTE PTR ds:[esi]
  41a764:	inc    esi
  41a765:	cs jae 0x41a71d
  41a768:	push   edi
  41a769:	dec    eax
  41a76a:	shl    DWORD PTR [edi],0x75
  41a76d:	pop    ebx
  41a76e:	and    DWORD PTR [esi-0x2b],ecx
  41a771:	lods   al,BYTE PTR ds:[esi]
  41a772:	test   eax,0xeae8274d
  41a777:	dec    edi
  41a778:	loope  0x41a7f4
  41a77a:	xor    eax,0xb7361c7d
  41a77f:	mov    ds:0x8896e53,eax
  41a784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a785:	mov    edx,0xf0575d56
  41a78a:	push   esp
  41a78b:	or     DWORD PTR ds:0xeeb87cf6,ebp
  41a791:	mov    cl,0x4a
  41a793:	pop    ss
  41a794:	jb     0x41a7d7
  41a796:	mov    eax,0xed028c24
  41a79b:	xor    cl,BYTE PTR [esi+0x3e]
  41a79e:	add    dl,BYTE PTR [edi-0x7d533848]
  41a7a4:	shl    al,0xa
  41a7a7:	call   0xd3cf:0x438ee353
  41a7ae:	add    eax,0x5d1a57b5
  41a7b3:	rcl    DWORD PTR [edi],cl
  41a7b5:	cld    
  41a7b6:	sbb    ecx,DWORD PTR [ecx-0x281d39e2]
  41a7bc:	xlat   BYTE PTR ds:[ebx]
  41a7bd:	jmp    0x69d06dc8
  41a7c2:	scas   al,BYTE PTR es:[edi]
  41a7c3:	rcr    BYTE PTR [edx+0x68],0x61
  41a7c7:	mov    ds:0x2e53fadb,al
  41a7cc:	adc    al,0x86
  41a7ce:	or     eax,0x5ed58ae5
  41a7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7d4:	lods   eax,DWORD PTR ds:[esi]
  41a7d5:	or     ebp,ecx
  41a7d7:	jb     0x41a84b
  41a7d9:	sub    eax,0x75b3b458
  41a7de:	fst    DWORD PTR [edi-0xb]
  41a7e1:	add    dh,0xda
  41a7e4:	les    eax,FWORD PTR [edx-0x70f78fff]
  41a7ea:	shl    DWORD PTR [ebp+0x34fb68b5],0x49
  41a7f1:	dec    ebx
  41a7f2:	dec    ecx
  41a7f3:	movlhps xmm2,xmm2
  41a7f6:	dec    ebx
  41a7f7:	data16 cmp BYTE PTR [ebx+0x6ddc0fae],dh
  41a7fe:	jg     0x41a830
  41a800:	adc    eax,0xddd9e961
  41a805:	in     al,0x37
  41a807:	mov    al,0xb
  41a809:	fstp   TBYTE PTR [ebx]
  41a80b:	in     al,0x99
  41a80d:	sar    BYTE PTR [ecx+0x58],0x37
  41a811:	ins    DWORD PTR es:[edi],dx
  41a812:	sar    DWORD PTR [ebx-0x567253d0],1
  41a818:	js     0x41a86a
  41a81a:	inc    esi
  41a81b:	fs inc edx
  41a81d:	lea    esp,[eax+0x43]
  41a820:	neg    BYTE PTR [eax+0x7603a017]
  41a826:	(bad)  
  41a827:	pushf  
  41a828:	std    
  41a829:	pop    edi
  41a82a:	or     eax,ebx
  41a82c:	pop    ss
  41a82d:	cli    
  41a82e:	fiadd  DWORD PTR [ebx+0xaf437f0]
  41a834:	adc    eax,ecx
  41a836:	push   esi
  41a837:	adc    BYTE PTR [ecx+0x723a2bf2],dh
  41a83d:	or     eax,0xe1053ec9
  41a842:	(bad)  
  41a843:	dec    ebp
  41a844:	or     BYTE PTR [ecx+edx*4-0x3829c087],cl
  41a84b:	xor    BYTE PTR [eax+esi*8+0x59aefe8d],ch
  41a852:	xchg   edx,eax
  41a853:	adc    al,BYTE PTR [ebp-0x2a5b8446]
  41a859:	aaa    
  41a85a:	jecxz  0x41a7e6
  41a85c:	pop    ebx
  41a85d:	and    esi,ebx
  41a85f:	inc    esp
  41a860:	mov    edx,0x2a3c6e61
  41a865:	fidivr DWORD PTR [edi]
  41a867:	mov    bl,0x38
  41a869:	adc    DWORD PTR [ecx-0x5e9fca15],edx
  41a86f:	(bad)  
  41a870:	mov    ch,0x57
  41a872:	inc    ecx
  41a873:	inc    ebx
  41a874:	dec    ecx
  41a875:	fwait
  41a876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a877:	cmp    DWORD PTR [ebx-0x6b],esi
  41a87a:	das    
  41a87b:	ror    ebx,1
  41a87d:	xchg   ebp,eax
  41a87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87f:	fneni(8087 only) 
  41a881:	sub    al,0xcd
  41a883:	ss inc esi
  41a885:	push   0xdd265ab2
  41a88a:	push   edx
  41a88b:	and    dh,BYTE PTR [esi+0x6f]
  41a88e:	(bad)  
  41a890:	ins    DWORD PTR es:[edi],dx
  41a891:	sbb    BYTE PTR [eax],dl
  41a893:	ret    
  41a894:	mov    edx,0xbaa14f62
  41a899:	add    bl,bh
  41a89b:	pop    ebx
  41a89c:	test   al,0x15
  41a89e:	mov    al,0x22
  41a8a0:	ds aaa 
  41a8a2:	lock pop es
  41a8a4:	add    esp,DWORD PTR [ebp-0x45]
  41a8a7:	inc    esi
  41a8a8:	mov    bh,0x96
  41a8aa:	dec    edi
  41a8ab:	jae    0x41a893
  41a8ad:	repz sub ebp,ebp
  41a8b0:	aas    
  41a8b1:	sbb    al,0x3f
  41a8b3:	xor    eax,0x53d131a1
  41a8b8:	add    eax,0x16c276f6
  41a8bd:	dec    esi
  41a8be:	scas   eax,DWORD PTR es:[edi]
  41a8bf:	xor    dl,BYTE PTR [edx-0x61941bcc]
  41a8c5:	push   0xa9ea7716
  41a8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8cb:	into   
  41a8cc:	stos   BYTE PTR es:[edi],al
  41a8cd:	and    al,0x27
  41a8cf:	xchg   ecx,eax
  41a8d0:	xchg   ebp,eax
  41a8d1:	int3   
  41a8d2:	sub    al,BYTE PTR [ecx-0x2d0d2847]
  41a8d8:	push   edx
  41a8d9:	in     al,dx
  41a8da:	pop    ecx
  41a8db:	add    BYTE PTR [eax+eax*1],0xc9
  41a8df:	mov    ds:0x587fc2b,al
  41a8e4:	xchg   esi,eax
  41a8e5:	rcl    BYTE PTR [eax+0x4f],cl
  41a8e8:	inc    esp
  41a8e9:	jp     0x41a943
  41a8eb:	lock or ebx,0x59
  41a8ef:	(bad)  
  41a8f0:	out    dx,eax
  41a8f1:	mov    WORD PTR [ecx],ds
  41a8f3:	sbb    al,0xeb
  41a8f5:	fisub  WORD PTR [esi]
  41a8f7:	xor    BYTE PTR [ecx-0x206d2086],bl
  41a8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fe:	(bad)  
  41a8ff:	fist   DWORD PTR [edi]
  41a901:	je     0x41a91e
  41a903:	js     0x41a976
  41a905:	xchg   ebx,eax
  41a906:	lahf   
  41a907:	clc    
  41a908:	int3   
  41a909:	mov    edx,0xf4325dde
  41a90e:	mov    esp,0xf8924b6d
  41a913:	push   esp
  41a914:	push   es
  41a915:	push   es
  41a916:	inc    ecx
  41a917:	jge    0x41a98a
  41a919:	stos   BYTE PTR es:[edi],al
  41a91a:	mov    ds:0xedb5af83,eax
  41a91f:	stos   DWORD PTR es:[edi],eax
  41a920:	test   al,0x6
  41a922:	mov    ch,BYTE PTR [edi-0x8]
  41a925:	dec    edx
  41a926:	das    
  41a927:	call   0x9b37:0x4122c5ea
  41a92e:	mov    eax,0xbfdf89b0
  41a933:	mov    cl,0xb3
  41a935:	mov    ch,0xca
  41a937:	out    dx,eax
  41a938:	imul   esp,DWORD PTR [ebx],0x3b
  41a93b:	sub    dl,cl
  41a93d:	pop    edi
  41a93e:	jp     0x41a913
  41a940:	je     0x41a932
  41a942:	xlat   BYTE PTR ds:[ebx]
  41a943:	call   FWORD PTR [edi+0x603d2499]
  41a949:	cmp    bh,BYTE PTR [edi+0x3a]
  41a94c:	cmp    DWORD PTR [edx],edi
  41a94e:	fimul  DWORD PTR [edx]
  41a950:	rol    BYTE PTR [ecx-0x63],1
  41a953:	sbb    eax,0x557b2252
  41a958:	sti    
  41a959:	out    dx,eax
  41a95a:	(bad)  
  41a95b:	jle    0x41a9a6
  41a95d:	mov    esi,0xc121effe
  41a962:	or     ch,BYTE PTR [bp+0x806]
  41a967:	adc    BYTE PTR [edx+ebx*4+0x68],ch
  41a96b:	mov    ss,WORD PTR [edi-0x24]
  41a96e:	loop   0x41a9ca
  41a970:	and    esp,DWORD PTR [edx+0x5895ebe9]
  41a976:	or     eax,0xa3793798
  41a97b:	call   0x115a:0xa21b2600
  41a982:	mov    bh,0x9c
  41a984:	push   ebx
  41a985:	cmp    al,0x3c
  41a987:	fsubr  QWORD PTR [edi+0x44]
  41a98a:	cli    
  41a98b:	xchg   ecx,eax
  41a98c:	scas   eax,DWORD PTR es:[edi]
  41a98d:	xchg   esp,eax
  41a98e:	sub    ecx,DWORD PTR [ecx]
  41a990:	scas   eax,DWORD PTR es:[edi]
  41a991:	mov    ebx,0x2e4bf0d7
  41a996:	dec    ecx
  41a997:	scas   al,BYTE PTR es:[edi]
  41a998:	(bad)  [eax+edi*1+0x54165891]
  41a99f:	jb     0x41a9f9
  41a9a1:	jecxz  0x41a9e9
  41a9a3:	popa   
  41a9a4:	call   DWORD PTR [esi+ebx*2+0x3b]
  41a9a8:	jno    0x41a950
  41a9aa:	adc    DWORD PTR [eax],ebp
  41a9ac:	xor    eax,0xe49cb869
  41a9b1:	jnp    0x41a9a0
  41a9b3:	adc    ecx,DWORD PTR [ebp+0x250dda61]
  41a9b9:	es je  0x41aa39
  41a9bc:	hlt    
  41a9bd:	mov    eax,0xeff0e46d
  41a9c2:	clc    
  41a9c3:	imul   edi,DWORD PTR [ebp+0x5544eef5],0xdf854685
  41a9cd:	mov    ds:0xc00e05ff,al
  41a9d2:	mov    ch,0x57
	...
  41a9e0:	add    BYTE PTR [ebx-0x8],al
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	add    esp,DWORD PTR [ecx-0x42]
  41a9f0:	adc    DWORD PTR [esi+0x27],esp
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	stos   DWORD PTR es:[edi],eax
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ebx-0xd405ffc],dl
  41a9fe:	dec    ebp
  41a9ff:	stos   DWORD PTR es:[edi],eax
  41aa00:	jns    0x41aa02
  41aa02:	lahf   
  41aa03:	mov    ah,0xc9
  41aa05:	add    al,0x8e
  41aa07:	mov    ds:0x2b8a03fa,eax
  41aa0c:	pop    eax
  41aa0d:	cmc    
  41aa0e:	nop
  41aa0f:	cs addr16 mov bl,0x49
  41aa13:	ret    0x5e6b
  41aa16:	pop    esp
  41aa17:	shl    BYTE PTR [edx-0x6f20e387],cl
  41aa1d:	aad    0xa3
  41aa1f:	dec    esp
  41aa20:	(bad)  
  41aa21:	jb     0x41a9de
  41aa23:	sub    eax,0x84f38ec8
  41aa28:	add    DWORD PTR [edx],eax
  41aa2a:	mov    ebp,DWORD PTR [edi]
  41aa2c:	fdivp  st(2),st
  41aa2e:	and    eax,0x20e4626f
  41aa33:	adc    ch,dh
  41aa35:	dec    edx
  41aa36:	clc    
  41aa37:	hlt    
  41aa38:	push   ecx
  41aa39:	mov    bl,0x2f
  41aa3b:	sub    esi,esi
  41aa3d:	retf   0xaa6e
  41aa40:	mov    bh,0x80
  41aa42:	mov    WORD PTR [eiz*2+0x6b732c1],gs
  41aa49:	jnp    0x41aa36
  41aa4b:	test   DWORD PTR [esi+0x50],0x78b907bc
  41aa52:	imul   esi,DWORD PTR [edx-0x28],0xffffffa6
  41aa56:	mov    bl,0x1d
  41aa58:	int    0x34
  41aa5a:	lock pop edx
  41aa5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa5d:	pop    ebp
  41aa5e:	fs or  ebp,edi
  41aa61:	std    
  41aa62:	sub    eax,0xcb17a639
  41aa67:	jecxz  0x41aac2
  41aa69:	mov    ebp,0x10f6b9c6
  41aa6e:	xchg   edx,eax
  41aa6f:	mov    esi,0x4588f8c9
  41aa74:	or     eax,0x2dc070a3
  41aa79:	xchg   edi,eax
  41aa7a:	inc    ecx
  41aa7b:	clc    
  41aa7c:	sub    BYTE PTR [ebp+0x5c],ah
  41aa7f:	sub    eax,DWORD PTR [ebx-0xc]
  41aa82:	in     eax,0xe4
  41aa84:	mov    al,0x39
  41aa86:	jns    0x41aa36
  41aa88:	lahf   
  41aa89:	push   0xf37671a1
  41aa8e:	stc    
  41aa8f:	out    dx,al
  41aa90:	add    ecx,DWORD PTR [ebx]
  41aa92:	js     0x41aa51
  41aa94:	pop    ecx
  41aa95:	sub    DWORD PTR [eax+0x323eb1e4],ebp
  41aa9b:	imul   edx,DWORD PTR [esi-0x49abd442],0x40
  41aaa2:	push   esi
  41aaa3:	sub    DWORD PTR [eax],ebx
  41aaa5:	mov    ch,0x4f
  41aaa7:	scas   eax,DWORD PTR es:[edi]
  41aaa8:	push   ecx
  41aaa9:	(bad)  
  41aaaa:	fidiv  WORD PTR [edx-0x32d530f0]
  41aab0:	arpl   WORD PTR [esi+0x797d44e5],bx
  41aab6:	jmpw   0x7818
  41aaba:	lods   al,BYTE PTR ds:[esi]
  41aabb:	out    0x1b,al
  41aabd:	add    DWORD PTR [ebx+0x26],0x3d
  41aac1:	mov    ds:0x12d4320a,al
  41aac6:	aam    0xd4
  41aac8:	mov    al,0x88
  41aaca:	mov    ?,WORD PTR [esi-0xc]
  41aacd:	imul   edx,DWORD PTR [esi-0x269f9347],0x7b
  41aad4:	lock sbb al,0x2d
  41aad7:	mov    gs,WORD PTR [edi+0xc6d4e73]
  41aadd:	fmul   st(0),st
  41aadf:	push   esp
  41aae0:	jb     0x41aae9
  41aae2:	(bad)  
  41aae3:	int    0xef
  41aae5:	sub    eax,esi
  41aae7:	icebp  
  41aae8:	push   esi
  41aae9:	ja     0x41aa9b
  41aaeb:	push   DWORD PTR [ecx-0x6b]
  41aaee:	test   BYTE PTR [ebp+0x7207ac1c],bl
  41aaf4:	inc    edi
  41aaf5:	push   ebx
  41aaf6:	and    bh,BYTE PTR [esi+0x17]
  41aaf9:	sti    
  41aafa:	pusha  
  41aafb:	jb     0x41ab28
  41aafd:	cli    
  41aafe:	xchg   BYTE PTR [ecx+0x237d020f],ch
  41ab04:	sub    ecx,DWORD PTR ds:0xc1f8d8aa
  41ab0a:	ficomp DWORD PTR [ecx-0x646593e3]
  41ab10:	call   0xe3d9:0xe23afcc2
  41ab17:	dec    edi
  41ab18:	xor    bl,BYTE PTR [esi+0x7d36fb1f]
  41ab1e:	push   es
  41ab1f:	div    BYTE PTR [esi-0x5a]
  41ab22:	gs and eax,0x62d9fcb3
  41ab28:	or     bl,BYTE PTR [eax+0x500b3485]
  41ab2e:	inc    esi
  41ab2f:	pop    ecx
  41ab30:	mov    ch,dl
  41ab32:	addr16 call 0xb9ef:0x86b678bf
  41ab3a:	enter  0x8bc5,0xba
  41ab3e:	mov    WORD PTR [eax],cs
  41ab40:	ret    
  41ab41:	out    0x11,eax
  41ab43:	(bad)  
  41ab44:	mov    ecx,0xf04d94cf
  41ab49:	out    dx,eax
  41ab4a:	cmp    al,ch
  41ab4c:	dec    eax
  41ab4d:	aas    
  41ab4e:	push   eax
  41ab4f:	mov    ebx,0xf7b129cc
  41ab54:	adc    BYTE PTR [ecx],bh
  41ab56:	outs   dx,BYTE PTR ds:[esi]
  41ab57:	xchg   ch,dl
  41ab59:	sbb    BYTE PTR [ecx+0x69],bl
  41ab5c:	in     al,0xcf
  41ab5e:	xor    eax,0x1d26487a
  41ab63:	push   ecx
  41ab64:	cwde   
  41ab65:	fstp   QWORD PTR [edx]
  41ab67:	ret    0x5ef0
  41ab6a:	gs mov edx,0x767aae73
  41ab70:	jmp    0x41ab5c
  41ab72:	xchg   ebp,eax
  41ab73:	test   eax,0x3e459fe0
  41ab78:	or     eax,0x7739d560
  41ab7d:	call   0x4327:0xc34896d3
  41ab84:	ss inc esp
  41ab86:	sbb    cl,BYTE PTR [edx+0x421cf1cd]
  41ab8c:	leave  
  41ab8d:	mov    eax,ds:0x910d6c
  41ab92:	pop    es
  41ab93:	jge    0x41abf0
  41ab95:	test   al,0x1d
  41ab97:	cmp    BYTE PTR [ebx],bl
  41ab99:	jne    0x41ac12
  41ab9b:	ss inc edx
  41ab9d:	mov    bh,0x15
  41ab9f:	push   esp
  41aba0:	xor    BYTE PTR [edx],ch
  41aba2:	push   esp
  41aba3:	test   dl,0xa8
  41aba6:	sub    al,0xe3
  41aba8:	jle    0x41aba4
  41abaa:	xchg   ecx,eax
  41abab:	(bad)  
  41abad:	add    DWORD PTR [edx],edi
  41abaf:	hlt    
  41abb0:	pop    esp
  41abb1:	retf   0x93ec
  41abb4:	push   0xffffffba
  41abb6:	aas    
  41abb7:	mov    eax,ds:0x9662af71
  41abbc:	leave  
  41abbd:	in     eax,0x1
  41abbf:	inc    ebx
  41abc0:	adc    eax,0x6d88e231
  41abc5:	xchg   edx,eax
  41abc6:	pop    eax
  41abc7:	shr    BYTE PTR [ebx],0xde
  41abca:	jecxz  0x41ab67
  41abcc:	mov    WORD PTR [esi-0x24ebc3e3],gs
  41abd2:	in     al,0x18
  41abd4:	shr    DWORD PTR [edx-0x5eec32ad],1
  41abda:	test   BYTE PTR [ebx],0xa3
  41abdd:	jmp    0x5c62be7
  41abe2:	outs   dx,BYTE PTR ds:[esi]
  41abe3:	scas   al,BYTE PTR es:[edi]
  41abe4:	add    BYTE PTR [edi+ebp*4-0x5a9736a],al
  41abeb:	fisub  DWORD PTR [esp+eiz*8]
  41abee:	cmp    ecx,DWORD PTR [ecx+0x3e]
  41abf1:	sbb    eax,0xaa7d2686
  41abf6:	jmp    0x27a0:0xef2bcc31
  41abfd:	loope  0x41ac4e
  41abff:	jle    0x41ab81
  41ac01:	pushf  
  41ac02:	mov    ebx,0xb114132c
  41ac07:	stos   DWORD PTR es:[edi],eax
  41ac08:	lock jmp 0x7d454add
  41ac0e:	and    al,0x47
  41ac10:	mov    dl,BYTE PTR [ecx+0x8]
  41ac13:	xlat   BYTE PTR ds:[ebx]
  41ac14:	add    edx,ebx
  41ac16:	(bad)  
  41ac17:	loopne 0x41ac94
  41ac19:	loop   0x41abf6
  41ac1b:	cmp    DWORD PTR [eax+0x7673ea21],esi
  41ac21:	mov    eax,ds:0xa02576f1
  41ac26:	xchg   ecx,eax
  41ac27:	(bad)  [esp+esi*8-0x63]
  41ac2b:	jge    0x41ac63
  41ac2d:	loop   0x41ac96
  41ac2f:	add    eax,0x19cb3c81
  41ac34:	ins    BYTE PTR es:[edi],dx
  41ac35:	add    BYTE PTR [esi+edx*8-0x7392cbfa],al
  41ac3c:	mov    ch,0x8b
  41ac3e:	stos   DWORD PTR es:[edi],eax
  41ac3f:	ins    DWORD PTR es:[edi],dx
  41ac40:	rol    DWORD PTR [edx+esi*4+0x4be32846],0xd3
  41ac48:	(bad)  
  41ac49:	mov    bl,0xe4
  41ac4b:	or     ch,BYTE PTR ds:0xcd593c41
  41ac51:	mov    ebx,0x78a885cf
  41ac56:	cmp    eax,0x4fb4e8aa
  41ac5b:	std    
  41ac5c:	das    
  41ac5d:	aaa    
  41ac5e:	fs add edx,esi
  41ac61:	xchg   esp,eax
  41ac62:	xchg   ebx,eax
  41ac63:	dec    esi
  41ac64:	into   
  41ac65:	jb     0x41ac77
  41ac67:	iret   
  41ac68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac69:	iret   
  41ac6a:	ret    
  41ac6b:	or     al,0xd0
  41ac6d:	sbb    ah,dl
  41ac6f:	dec    esp
  41ac70:	sbb    ebp,DWORD PTR [edi]
  41ac72:	iret   
  41ac73:	and    eax,0x53057035
  41ac78:	inc    esi
  41ac79:	mov    ds:0xac8c234b,eax
  41ac7e:	jbe    0x41ac91
  41ac80:	js     0x41ac86
  41ac82:	lahf   
  41ac83:	addr16 aas 
  41ac85:	pop    eax
  41ac86:	mov    esi,0xe1bd02c3
  41ac8b:	push   cs
  41ac8c:	adc    bl,dl
  41ac8e:	or     esi,DWORD PTR [eax]
  41ac90:	xlat   BYTE PTR ds:[ebx]
  41ac91:	push   ebx
  41ac92:	push   esp
  41ac93:	pop    ebx
  41ac94:	push   esp
  41ac95:	pushf  
  41ac96:	sbb    eax,0x225ca611
  41ac9b:	and    BYTE PTR [eax],bh
  41ac9d:	int    0xdc
  41ac9f:	push   ebp
  41aca0:	push   cs
  41aca1:	(bad)  
  41aca3:	shl    DWORD PTR [ebp+0x65],0x7c
  41aca7:	mov    ds:0xa6331397,al
  41acac:	pop    edi
  41acad:	les    eax,FWORD PTR [ecx-0x6c]
  41acb0:	mov    ebp,0x87807d5b
  41acb5:	push   edi
  41acb6:	daa    
  41acb7:	mov    ebx,0x9a4c8c14
  41acbc:	cmp    BYTE PTR [ebx+0x21f3544a],dl
  41acc2:	lock pop ebp
  41acc4:	push   ss
  41acc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc6:	mov    dh,0x96
  41acc8:	arpl   si,sp
  41acca:	retf   
  41accb:	push   0x5157907d
  41acd0:	int3   
  41acd1:	cmp    DWORD PTR [ebx*1-0x4aa0645f],ebp
  41acd8:	push   edi
  41acd9:	push   0xffffff87
  41acdb:	jecxz  0x41ad2b
  41acdd:	popf   
  41acde:	jae    0x41ad4e
  41ace0:	push   ss
  41ace1:	dec    esp
  41ace2:	sub    al,0x2f
  41ace4:	cmp    eax,esp
  41ace6:	test   BYTE PTR [esi+0x31],bl
  41ace9:	push   eax
  41acea:	push   ebx
  41aceb:	into   
  41acec:	cwde   
  41aced:	pop    esi
  41acee:	sub    al,0xa1
  41acf0:	leave  
  41acf1:	rcr    BYTE PTR [esi+0x45],cl
  41acf4:	mov    ch,0x0
  41acf6:	int    0xac
  41acf8:	es ds aaa 
  41acfb:	push   edx
  41acfc:	aad    0x25
  41acfe:	xchg   esi,eax
  41acff:	dec    ecx
  41ad00:	dec    esi
  41ad01:	cmc    
  41ad02:	repz mov edx,0x2e061b3f
  41ad08:	fs jle 0x41aca5
  41ad0b:	xchg   esp,eax
  41ad0c:	shl    BYTE PTR [esi],cl
  41ad0e:	adc    ebx,DWORD PTR [ebx-0x5cbb7328]
  41ad14:	std    
  41ad15:	in     al,dx
  41ad16:	mov    ebx,ss
  41ad18:	nop
  41ad19:	fwait
  41ad1a:	jb     0x41acaa
  41ad1c:	leave  
  41ad1d:	fisubr DWORD PTR [edx-0x1a]
  41ad20:	mov    es,WORD PTR [ecx-0x50a3346a]
  41ad26:	iret   
  41ad27:	mov    BYTE PTR [ecx],ah
  41ad29:	daa    
  41ad2a:	and    edx,esi
  41ad2c:	adc    edx,DWORD PTR [eax-0x26eecb6b]
  41ad32:	pop    ecx
  41ad33:	mov    cl,0xaf
  41ad35:	xchg   ebx,eax
  41ad36:	mov    edi,esp
  41ad38:	xor    eax,DWORD PTR [ecx+0x5]
  41ad3b:	enter  0x1aea,0xa4
  41ad3f:	(bad)  
  41ad40:	ror    BYTE PTR [eax+0x70],1
  41ad43:	(bad)  
  41ad44:	std    
  41ad45:	stc    
  41ad46:	xlat   BYTE PTR ds:[ebx]
  41ad47:	dec    edi
  41ad48:	sar    esp,1
  41ad4a:	loope  0x41adb1
  41ad4c:	inc    edx
  41ad4d:	and    ah,bh
  41ad4f:	lods   al,BYTE PTR ds:[esi]
  41ad50:	xlat   BYTE PTR ds:[ebx]
  41ad51:	push   edx
  41ad52:	and    dh,BYTE PTR [ebp+0x73]
  41ad55:	adc    esp,DWORD PTR [esi+0x7a]
  41ad58:	mov    eax,0x4d5085e8
  41ad5d:	inc    ecx
  41ad5e:	shr    BYTE PTR [ebx],0xb2
  41ad61:	push   ebx
  41ad62:	nop
  41ad63:	out    dx,al
  41ad64:	js     0x41acf3
  41ad66:	in     al,0x22
  41ad68:	jnp    0x41ad06
  41ad6a:	jbe    0x41ad06
  41ad6c:	jo     0x41adab
  41ad6e:	jp     0x41adbe
  41ad70:	test   eax,0x4e34d523
  41ad75:	aam    0xc6
  41ad77:	xor    BYTE PTR [edx-0x28],ah
  41ad7a:	out    dx,al
  41ad7b:	lods   eax,DWORD PTR ds:[esi]
  41ad7c:	and    al,0x2b
  41ad7e:	adc    DWORD PTR [ebx+0x1c04e959],ecx
  41ad84:	add    DWORD PTR [esi-0x178b8512],0xffffffde
  41ad8b:	pop    eax
  41ad8c:	fucomp st(1)
  41ad8e:	jnp    0x41ae05
  41ad90:	test   al,0xf9
  41ad92:	int3   
  41ad93:	call   0x7925:0x253a3ca2
  41ad9a:	pop    edx
  41ad9b:	call   0xad4e:0x9cc2f4ff
  41ada2:	cwde   
  41ada3:	jne    0x41ada5
	...
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x4a723905],0x11
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+0x18000003],ch
  41adca:	mov    esi,0xbfbc3c2f
  41adcf:	xor    eax,0xef9355c6
  41add4:	inc    edi
  41add5:	fcmovnu st,st(5)
  41add7:	ins    BYTE PTR es:[edi],dx
  41add8:	mov    DWORD PTR [esi],ebp
  41adda:	or     dl,BYTE PTR [esi]
  41addc:	jle    0x41ad88
  41adde:	inc    ebp
  41addf:	adc    ebx,DWORD PTR [ebx+ecx*2+0x18]
  41ade3:	push   ebp
  41ade4:	jle    0x41adc3
  41ade6:	mov    esi,0x5f4c164e
  41adeb:	test   DWORD PTR [ecx-0x3663945e],0x11d5500d
  41adf5:	mov    dl,0x60
  41adf7:	jae    0x41ad8b
  41adf9:	push   es
  41adfa:	ret    0xfa15
  41adfd:	mov    ah,0xe8
  41adff:	xchg   ebx,eax
  41ae00:	scas   eax,DWORD PTR es:[edi]
  41ae01:	adc    al,0xc0
  41ae03:	shl    BYTE PTR [ebp+0x1a],1
  41ae06:	std    
  41ae07:	push   esi
  41ae08:	das    
  41ae09:	xchg   BYTE PTR [esi+0x15],cl
  41ae0c:	lea    ebx,[esi]
  41ae0e:	mov    esp,0xd35b73fe
  41ae13:	mov    dl,0x96
  41ae15:	in     eax,dx
  41ae16:	xor    dh,dl
  41ae18:	lock mov cl,0xaa
  41ae1b:	push   esp
  41ae1c:	pop    ss
  41ae1d:	xchg   ecx,eax
  41ae1e:	out    dx,eax
  41ae1f:	es mov edx,0xf483c04b
  41ae25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae26:	popf   
  41ae27:	and    ch,BYTE PTR [ebp+0x65aa3d82]
  41ae2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2e:	mov    cl,0x4b
  41ae30:	test   BYTE PTR [ebx],0xe7
  41ae33:	and    edi,esi
  41ae35:	cli    
  41ae36:	cmp    dl,BYTE PTR [ebx]
  41ae38:	mov    ds:0xefc0e370,al
  41ae3d:	or     cl,BYTE PTR [ecx-0x7a]
  41ae40:	push   0x20
  41ae42:	sub    BYTE PTR [eax+0x66482ca],bl
  41ae48:	inc    eax
  41ae49:	dec    esp
  41ae4a:	cli    
  41ae4b:	cmp    eax,0x2010f2e7
  41ae50:	and    DWORD PTR [edi-0x26236f5d],eax
  41ae56:	test   eax,0x5b683247
  41ae5b:	ror    ch,1
  41ae5d:	mov    edi,0xde4513ea
  41ae62:	jnp    0x41aec2
  41ae64:	js     0x41ae03
  41ae66:	cmp    eax,0x66db206e
  41ae6b:	xor    eax,0x7a0602b4
  41ae70:	or     esi,DWORD PTR cs:[ebx]
  41ae73:	(bad)  
  41ae75:	adc    dl,BYTE PTR [edx]
  41ae77:	xchg   edi,eax
  41ae78:	repz leave 
  41ae7a:	or     eax,DWORD PTR [ecx-0x35d4e611]
  41ae80:	pusha  
  41ae81:	mul    DWORD PTR [ecx+0x3fda5ebd]
  41ae87:	push   ss
  41ae88:	pop    edi
  41ae89:	mov    al,0x69
  41ae8b:	pop    ss
  41ae8c:	push   edx
  41ae8d:	sbb    esi,DWORD PTR [eax]
  41ae8f:	mov    ebx,0xeee0746c
  41ae94:	pop    ecx
  41ae95:	ds and al,0xc6
  41ae98:	int3   
  41ae99:	push   eax
  41ae9a:	xor    bl,dl
  41ae9c:	loope  0x41ae71
  41ae9e:	push   ebp
  41ae9f:	int3   
  41aea0:	mov    ds:0x52c00136,al
  41aea5:	dec    esi
  41aea6:	test   BYTE PTR [eax-0x538425c1],ah
  41aeac:	je     0x41aeae
  41aeae:	leave  
  41aeaf:	pop    ds
  41aeb0:	inc    ecx
  41aeb1:	pop    es
  41aeb2:	adc    dh,BYTE PTR [ecx]
  41aeb4:	inc    edx
  41aeb5:	sti    
  41aeb6:	cli    
  41aeb7:	mov    al,0x4
  41aeb9:	sbb    eax,0xcf1aea9
  41aebe:	int3   
  41aebf:	nop
  41aec0:	mov    BYTE PTR ds:0xa5899b28,ah
  41aec6:	dec    esp
  41aec7:	add    DWORD PTR [edi-0xb0c671],edx
  41aecd:	dec    esp
  41aece:	push   edx
  41aecf:	lea    eax,[edx+0x31]
  41aed2:	(bad)  
  41aed4:	xor    ebp,DWORD PTR ds:0xc8e700e7
  41aeda:	jecxz  0x41aeb4
  41aedc:	mov    ds:0xc54a4241,eax
  41aee1:	loopne 0x41af02
  41aee3:	in     eax,0xaa
  41aee5:	push   es
  41aee6:	xchg   esi,eax
  41aee7:	or     BYTE PTR [ebp-0x21],bh
  41aeea:	test   DWORD PTR [edx+edx*2+0x6e],ebp
  41aeee:	push   esi
  41aeef:	out    dx,al
  41aef0:	push   eax
  41aef1:	aaa    
  41aef2:	scas   eax,DWORD PTR es:[edi]
  41aef3:	rep outs dx,BYTE PTR ds:[esi]
  41aef5:	cmp    dh,BYTE PTR [ecx]
  41aef7:	pop    esi
  41aef8:	mov    edi,0xa45a4af9
  41aefd:	add    ebp,esi
  41aeff:	mov    ah,0xbd
  41af01:	test   eax,0xe8e9a33c
  41af06:	dec    ebp
  41af07:	(bad)  
  41af09:	mov    ebx,DWORD PTR [ebx+0x69]
  41af0c:	inc    eax
  41af0d:	sbb    dh,al
  41af0f:	mov    edi,0xf3c8f170
  41af14:	cwde   
  41af15:	add    BYTE PTR [esi],bl
  41af17:	cmp    BYTE PTR [ecx-0x52],0x46
  41af1b:	jns    0x41af16
  41af1d:	jmp    0x2c7d270f
  41af22:	pop    edi
  41af23:	cdq    
  41af24:	adc    eax,0xf11f23ae
  41af29:	xchg   BYTE PTR [ecx-0x4723698a],ch
  41af2f:	in     eax,dx
  41af30:	push   eax
  41af31:	adc    esi,DWORD PTR [esi+0x35bbbed8]
  41af37:	mov    ebx,0xef926858
  41af3c:	int3   
  41af3d:	(bad)  
  41af3e:	loop   0x41aed3
  41af40:	xchg   esi,eax
  41af41:	add    eax,0xa56360c3
  41af46:	ins    BYTE PTR es:[edi],dx
  41af47:	pop    ecx
  41af48:	std    
  41af49:	jecxz  0x41af5b
  41af4b:	adc    DWORD PTR [ebp+0x609eb751],0xffffffba
  41af52:	pop    ss
  41af53:	xchg   edi,edx
  41af55:	fst    st(6)
  41af57:	in     al,dx
  41af58:	pop    edi
  41af59:	jl     0x41af27
  41af5b:	retf   
  41af5c:	jp     0x41afd7
  41af5e:	mov    bh,0xf7
  41af60:	fld    DWORD PTR [edx+0x19]
  41af63:	jmp    0xb48d:0xc8028d84
  41af6a:	xchg   ebp,eax
  41af6b:	jns    0x41af96
  41af6d:	adc    al,cl
  41af6f:	xor    ecx,DWORD PTR [ecx-0x5b]
  41af72:	test   eax,edi
  41af74:	lahf   
  41af75:	mov    ah,0x3d
  41af77:	mov    bh,0x93
  41af79:	out    dx,eax
  41af7a:	mov    bh,0x44
  41af7c:	dec    esp
  41af7d:	xchg   DWORD PTR [eax],ebp
  41af7f:	mov    al,ds:0xb788c716
  41af84:	xor    al,0x3a
  41af86:	mov    edi,0x53ab0dea
  41af8b:	or     dl,BYTE PTR [ecx]
  41af8d:	(bad)  
  41af8e:	std    
  41af8f:	retf   0x983d
  41af92:	pop    ss
  41af93:	arpl   di,di
  41af95:	jmp    FWORD PTR [ebx+0x49]
  41af98:	cmp    eax,ebx
  41af9a:	fucomip st,st(1)
  41af9c:	pop    ebx
  41af9d:	(bad)  
  41af9e:	sub    eax,0x83f91ee
  41afa3:	adc    eax,0xc8570b62
  41afa8:	mov    ebp,0x2c9ece63
  41afad:	js     0x41afc0
  41afaf:	sub    eax,0x30d83441
  41afb4:	fisttp QWORD PTR [edi]
  41afb6:	sbb    eax,0x1b56bc81
  41afbb:	cmp    al,0xf9
  41afbd:	js     0x41af78
  41afbf:	fs inc eax
  41afc1:	jbe    0x41afee
  41afc3:	and    bh,ch
  41afc5:	mov    ecx,0xa56f833b
  41afca:	adc    BYTE PTR [ecx],al
  41afcc:	mov    esi,0x42210e50
  41afd1:	cld    
  41afd2:	repz fwait
  41afd4:	pop    esp
  41afd5:	stos   BYTE PTR es:[edi],al
  41afd6:	dec    edx
  41afd7:	aad    0xab
  41afd9:	inc    esp
  41afda:	rol    BYTE PTR [edx],1
  41afdc:	les    edi,FWORD PTR [ebx+0x5624c4d2]
  41afe2:	cld    
  41afe3:	inc    eax
  41afe4:	inc    ebp
  41afe5:	fimul  WORD PTR [esi]
  41afe7:	cmp    DWORD PTR [edi-0x53],edx
  41afea:	aad    0x2c
  41afec:	pushf  
  41afed:	dec    edi
  41afee:	xchg   edx,eax
  41afef:	ror    BYTE PTR [ebx],1
  41aff1:	jmp    0x41afe4
  41aff3:	daa    
  41aff4:	rol    DWORD PTR [ebp-0x2207e082],cl
  41affa:	int    0x99
  41affc:	pop    esp
  41affd:	scas   al,BYTE PTR es:[edi]
  41affe:	cmp    eax,0x5ffcf5d4
  41b003:	aaa    
  41b004:	rcr    ch,cl
  41b006:	sub    BYTE PTR ds:0x2fb894b9,0xde
  41b00d:	stc    
  41b00e:	jge    0x41afa5
  41b010:	jle    0x41afb2
  41b012:	mov    ecx,0xd9fd5994
  41b017:	call   0xc6dd:0xb3d8d9ef
  41b01e:	fs cmp eax,0x4d5224f1
  41b024:	jmp    0x89d9:0xc3ec
  41b02a:	arpl   WORD PTR [ecx+0x42e7b4ad],si
  41b030:	std    
  41b031:	(bad)  
  41b032:	mov    bl,0x19
  41b035:	pop    es
  41b036:	push   edi
  41b037:	dec    ecx
  41b038:	xor    DWORD PTR [ecx-0x47],esp
  41b03b:	dec    ebx
  41b03c:	xchg   ebp,eax
  41b03e:	popf   
  41b03f:	inc    edi
  41b040:	mov    bh,0x3d
  41b042:	dec    edi
  41b043:	pop    edi
  41b044:	imul   edx,DWORD PTR [ebp-0xd0a4974],0x59
  41b04b:	enter  0xe1aa,0xfe
  41b04f:	std    
  41b050:	or     eax,0xc9125e66
  41b055:	xor    BYTE PTR [edx+0x7d81a6dd],0x93
  41b05c:	jo     0x41affe
  41b05e:	lods   al,BYTE PTR ds:[esi]
  41b05f:	(bad)  
  41b061:	xlat   BYTE PTR ds:[ebx]
  41b062:	inc    edx
  41b063:	pop    eax
  41b064:	sbb    eax,0xd807f281
  41b069:	jmp    0xc565:0xfe3fd53e
  41b070:	dec    ebp
  41b071:	inc    esp
  41b072:	jae    0x41b0a4
  41b074:	mov    eax,ds:0xc1072e9a
  41b079:	inc    ecx
  41b07a:	cmp    ch,BYTE PTR [ecx-0x5ddf0e0e]
  41b080:	jge    0x41b0c4
  41b082:	aaa    
  41b083:	jns    0x41b00d
  41b085:	das    
  41b086:	stos   BYTE PTR es:[edi],al
  41b087:	push   0x33
  41b089:	popf   
  41b08a:	ret    
  41b08b:	cwde   
  41b08c:	(bad)  
  41b08d:	mov    ecx,eax
  41b08f:	sbb    DWORD PTR [ecx+ebp*8-0x31],edi
  41b093:	xor    ecx,DWORD PTR [ebx+0xe96e838]
  41b099:	jge    0x41b020
  41b09b:	in     eax,dx
  41b09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09d:	loope  0x41b119
  41b09f:	cmp    BYTE PTR [edx-0x43b6fc5a],al
  41b0a5:	or     eax,0xd937f26
  41b0aa:	add    cl,dl
  41b0ac:	pop    ds
  41b0ad:	mov    dh,0xfe
  41b0af:	sub    eax,0xc807c348
  41b0b4:	jp     0x41b0dc
  41b0b6:	mov    ds:0x1e9fe2e6,al
  41b0bb:	cmp    eax,0x9207ac10
  41b0c0:	mov    esp,0xd09f5a9a
  41b0c5:	mov    eax,0xddf39902
  41b0ca:	in     eax,dx
  41b0cb:	adc    BYTE PTR [ecx-0x6e257903],ah
  41b0d1:	jmp    0x3e1685d1
  41b0d6:	jmp    DWORD PTR [eax]
  41b0d8:	shr    BYTE PTR [ebp+0x62],cl
  41b0db:	int    0x7d
  41b0dd:	adc    BYTE PTR [ebx-0x5575e1c5],ch
  41b0e3:	js     0x41b088
  41b0e5:	dec    esi
  41b0e6:	sub    esi,DWORD PTR [ecx]
  41b0e8:	gs jo  0x41b15d
  41b0eb:	sbb    al,dh
  41b0ed:	mov    DWORD PTR [eax+edi*8-0x3739dccd],esi
  41b0f4:	mov    ds:0x81b48f8a,al
  41b0f9:	lock mov ebp,0x10a35bb7
  41b0ff:	sub    esp,esi
  41b101:	dec    ebp
  41b102:	mov    ebx,0x37f9059
  41b107:	pcmpgtd mm0,QWORD PTR [ebx]
  41b10a:	fistp  QWORD PTR [esi]
  41b10c:	imul   eax,DWORD PTR [edi],0x9eea3c5
  41b112:	(bad)  
  41b113:	stc    
  41b114:	arpl   bx,di
  41b116:	push   cs
  41b117:	add    al,0x2a
  41b119:	pushf  
  41b11a:	mov    bh,0x56
  41b11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b11d:	push   ecx
  41b11e:	sar    BYTE PTR ds:0x8a46cfc5,0x64
  41b125:	(bad)  
  41b126:	outs   dx,BYTE PTR ds:[esi]
  41b127:	adc    DWORD PTR [ecx+0x7],0x8d773891
  41b12e:	jg     0x41b190
  41b130:	sbb    eax,0x37d0982b
  41b135:	and    ecx,DWORD PTR [ebx]
  41b137:	into   
  41b138:	jne    0x41b1a6
  41b13a:	shr    BYTE PTR [esi],1
  41b13c:	ins    BYTE PTR es:[edi],dx
  41b13d:	inc    esi
  41b13e:	or     eax,DWORD PTR [ecx+0x4d61282e]
  41b144:	push   esi
  41b145:	and    eax,0x165a768b
  41b14a:	cmp    BYTE PTR [edx],0x8f
  41b14d:	xor    DWORD PTR [ebx-0x78652e36],edx
  41b153:	mov    edi,0xa7a99d47
  41b158:	and    al,0x92
  41b15a:	jmp    0xed85:0xd41f4630
  41b161:	adc    BYTE PTR [eax+eiz*2+0x691947e0],0xf6
  41b169:	mov    esi,0x3bce9d0c
  41b16e:	push   cs
  41b16f:	cmc    
  41b170:	pop    eax
  41b171:	lea    edx,fs:[edx]
	...
  41b180:	add    bl,ah
  41b182:	call   0xf8dd8217
  41b187:	jecxz  0x41b184
  41b189:	jns    0x41b1d5
  41b18b:	shr    ebp,0xb8
  41b18e:	sbb    edi,0x12ebcb7
  41b194:	add    BYTE PTR [ebx+0x15000003],ch
  41b19a:	xchg   ecx,eax
  41b19b:	xchg   DWORD PTR [ebp-0x62],esp
  41b19e:	inc    esi
  41b19f:	inc    ecx
  41b1a0:	jle    0x41b1c4
  41b1a2:	addr16 data16 jge 0x41b1d4
  41b1a6:	popf   
  41b1a7:	mov    edx,0x85ab2753
  41b1ac:	add    al,ah
  41b1ae:	and    DWORD PTR [ebp-0x47d34311],ebx
  41b1b4:	inc    ebx
  41b1b5:	jmp    FWORD PTR [edx+0x7a]
  41b1b8:	icebp  
  41b1b9:	es sbb al,0x8
  41b1bc:	pusha  
  41b1bd:	pop    es
  41b1be:	add    eax,0x4682cb03
  41b1c3:	into   
  41b1c4:	or     ecx,DWORD PTR [esi+0x0]
  41b1c7:	push   esp
  41b1c8:	push   ss
  41b1c9:	(bad)  
  41b1ca:	rcr    cl,cl
  41b1cc:	call   0xffcc5010
  41b1d1:	lahf   
  41b1d2:	aam    0x1b
  41b1d4:	and    BYTE PTR [edx+0x3],0x57
  41b1d8:	xchg   edi,eax
  41b1d9:	repz pop esi
  41b1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1dc:	lods   al,BYTE PTR ds:[esi]
  41b1dd:	and    WORD PTR [ebx-0x65],cx
  41b1e1:	pushf  
  41b1e2:	sbb    al,0x6c
  41b1e4:	mov    es,WORD PTR [edi+esi*2+0x7d]
  41b1e8:	(bad)  
  41b1e9:	xor    al,0x4b
  41b1eb:	test   bl,bh
  41b1ed:	(bad)  
  41b1ee:	xor    eax,0x278f8d8d
  41b1f3:	iret   
  41b1f4:	xor    cl,ah
  41b1f6:	xor    al,0x26
  41b1f8:	(bad)  
  41b1fa:	bsf    ebx,DWORD PTR ds:0xa0a7af36
  41b201:	js     0x41b237
  41b203:	repz (bad) 
  41b206:	jmp    0xb4d2375c
  41b20b:	out    0x65,eax
  41b20d:	xchg   BYTE PTR ds:0x751044e7,dl
  41b213:	sub    dh,0xba
  41b216:	and    dl,BYTE PTR [ebp-0x70]
  41b219:	cli    
  41b21a:	mov    ?,WORD PTR [esp+ecx*1+0x4b]
  41b21e:	mov    ebx,0x10096222
  41b223:	mov    edi,0xaf630a4f
  41b228:	ss arpl bx,sp
  41b22b:	cdq    
  41b22c:	push   ds
  41b22d:	pop    eax
  41b22e:	cmp    esi,DWORD PTR [ebx+edi*1]
  41b231:	stos   DWORD PTR es:[di],eax
  41b233:	jmp    0xc5b6af
  41b238:	fild   QWORD PTR [ecx+0x464c33f4]
  41b23e:	retf   0xf69a
  41b241:	es sti 
  41b243:	mov    fs,WORD PTR [edi-0x58]
  41b246:	or     eax,0x14f329b0
  41b24b:	xlat   BYTE PTR ds:[ebx]
  41b24c:	ins    DWORD PTR es:[edi],dx
  41b24d:	jl     0xd090bfc2
  41b253:	mov    eax,0x4bcd21c8
  41b258:	call   0xc1c4:0xfa0ed063
  41b25f:	dec    esp
  41b260:	xlat   BYTE PTR ds:[ebx]
  41b261:	ret    0x527e
  41b264:	sbb    al,0xe
  41b266:	int    0xcb
  41b268:	(bad)  
  41b269:	addr16 jns 0x41b1f5
  41b26c:	or     DWORD PTR [edi-0x11],ecx
  41b26f:	fcomp  st(2)
  41b271:	ror    ch,cl
  41b273:	fiadd  WORD PTR [eax-0x5f]
  41b276:	add    BYTE PTR gs:[edx],bl
  41b279:	lahf   
  41b27a:	mov    cl,0xb7
  41b27c:	popa   
  41b27d:	lods   eax,DWORD PTR ds:[esi]
  41b27e:	mov    al,0x4a
  41b280:	jl     0x41b2a7
  41b282:	mov    ds:0x984f923e,eax
  41b287:	mov    edi,0xb8e9a515
  41b28c:	outs   dx,BYTE PTR ds:[esi]
  41b28d:	into   
  41b28e:	push   esi
  41b28f:	push   eax
  41b290:	mov    ebp,0x9b2f9b10
  41b295:	out    dx,eax
  41b296:	jbe    0x41b26f
  41b298:	in     eax,0xfe
  41b29a:	lea    edi,ds:0x3cce4432
  41b2a0:	mov    BYTE PTR [edx+0x59],0x87
  41b2a4:	mov    ebp,0x84bf7d6a
  41b2a9:	mov    bl,0xda
  41b2ab:	xor    eax,0xa211f9ce
  41b2b0:	inc    esp
  41b2b1:	jmp    0x690de6ee
  41b2b6:	mov    ebx,DWORD PTR [edi]
  41b2b8:	clc    
  41b2b9:	xor    al,0x55
  41b2bb:	inc    ebx
  41b2bc:	repnz xor eax,0xe7ea5020
  41b2c2:	(bad)  
  41b2c3:	sub    dl,BYTE PTR [ebp-0x3]
  41b2c6:	sub    eax,0x6a3b4d15
  41b2cb:	in     eax,dx
  41b2cc:	pop    eax
  41b2cd:	out    dx,al
  41b2ce:	out    0x78,eax
  41b2d0:	add    ebp,edx
  41b2d2:	xlat   BYTE PTR ds:[ebx]
  41b2d3:	cmp    eax,DWORD PTR [eax]
  41b2d5:	fdivr  DWORD PTR [ebx-0x42b7381d]
  41b2db:	gs sahf 
  41b2dd:	outs   dx,BYTE PTR ds:[esi]
  41b2de:	sbb    BYTE PTR [edi+edi*4-0x9ce1cc5],al
  41b2e5:	sbb    BYTE PTR [ecx-0x33cf0147],cl
  41b2eb:	push   ss
  41b2ec:	test   eax,0xc50f7d48
  41b2f1:	ss inc eax
  41b2f3:	into   
  41b2f4:	daa    
  41b2f5:	in     al,0x7
  41b2f7:	push   0x44072216
  41b2fc:	jo     0x41b2a5
  41b2fe:	ror    BYTE PTR [edx+0x2d4b11d8],cl
  41b304:	iret   
  41b305:	xchg   esp,eax
  41b306:	mov    ah,BYTE PTR [esi]
  41b308:	jno    0x41b2db
  41b30a:	push   ecx
  41b30b:	mov    DWORD PTR [esp+edi*1-0x53366d0],esp
  41b312:	popf   
  41b313:	or     BYTE PTR [esi-0x7d],bl
  41b316:	pop    ds
  41b317:	stc    
  41b318:	jmp    0x7c76:0xf28c387a
  41b31f:	mov    ah,0xbe
  41b321:	test   eax,0xf0a89e16
  41b326:	push   ss
  41b327:	jge    0x41b2af
  41b329:	mov    ?,WORD PTR [esi]
  41b32b:	or     BYTE PTR [ecx+0x5164de3c],bh
  41b331:	outs   dx,DWORD PTR ds:[esi]
  41b332:	lods   al,BYTE PTR ds:[esi]
  41b333:	xor    al,0x90
  41b335:	popf   
  41b336:	jge    0x41b333
  41b338:	jecxz  0x41b38e
  41b33a:	ret    
  41b33b:	hlt    
  41b33c:	les    esi,FWORD PTR [eax+0x19]
  41b33f:	aas    
  41b340:	test   al,0x8f
  41b342:	outs   dx,DWORD PTR ds:[esi]
  41b343:	imul   esp,ebp,0xddc39e2b
  41b349:	jb     0x41b38b
  41b34b:	jg     0x41b2e5
  41b34d:	xor    DWORD PTR [edi+0x23],ecx
  41b350:	in     al,0xef
  41b352:	or     al,0x6e
  41b354:	and    ah,BYTE PTR [ebp-0x40cceb6]
  41b35a:	lods   eax,DWORD PTR ds:[esi]
  41b35b:	mov    ?,ecx
  41b35d:	xor    eax,0x44e84a22
  41b362:	push   edi
  41b363:	stc    
  41b364:	stos   DWORD PTR es:[edi],eax
  41b365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b366:	(bad)  [edi]
  41b368:	mov    dl,0xf6
  41b36a:	sar    DWORD PTR [ebx],1
  41b36c:	inc    eax
  41b36d:	adc    ah,ch
  41b36f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b370:	sahf   
  41b371:	add    BYTE PTR [edi+0x2a],dh
  41b374:	push   esi
  41b375:	jecxz  0x41b3dc
  41b377:	out    dx,al
  41b378:	pushf  
  41b379:	lods   al,BYTE PTR ds:[esi]
  41b37a:	xchg   esp,eax
  41b37b:	sbb    DWORD PTR [edx+0x39],0xffffff93
  41b37f:	sub    BYTE PTR [eax+ebp*1-0x165c4e26],0x21
  41b387:	mov    eax,ds:0xab40b276
  41b38c:	jg     0x41b3ad
  41b38e:	xchg   ebp,eax
  41b38f:	jne    0x41b3fa
  41b391:	or     BYTE PTR [eax],dh
  41b393:	(bad)
  41b396:	(bad)  
  41b397:	sbb    bh,BYTE PTR [ecx]
  41b399:	ret    
  41b39a:	das    
  41b39b:	adc    BYTE PTR [esi-0x2d],bl
  41b39e:	sub    eax,0xb4499531
  41b3a3:	mov    esi,0xcedf48a2
  41b3a8:	hlt    
  41b3a9:	hlt    
  41b3aa:	and    ecx,eax
  41b3ac:	ds aaa 
  41b3ae:	hlt    
  41b3af:	hlt    
  41b3b0:	jmp    DWORD PTR fs:[ebp+0x60cbc37b]
  41b3b7:	mov    dh,0x13
  41b3b9:	pop    esp
  41b3ba:	xor    eax,0xe03d4ee
  41b3bf:	mov    esi,0x3a722e48
  41b3c4:	ins    DWORD PTR es:[edi],dx
  41b3c5:	in     eax,0x63
  41b3c7:	pop    edi
  41b3c8:	in     al,dx
  41b3c9:	lahf   
  41b3ca:	aam    0x7a
  41b3cc:	pop    edx
  41b3cd:	sti    
  41b3ce:	or     bl,BYTE PTR [eax-0x358611ea]
  41b3d4:	in     eax,0xe5
  41b3d6:	jnp    0x41b363
  41b3d8:	ins    DWORD PTR es:[edi],dx
  41b3d9:	jl     0x41b411
  41b3db:	mov    ecx,ebx
  41b3dd:	or     ch,ah
  41b3df:	or     bl,BYTE PTR [esi-0x670ef793]
  41b3e5:	mov    ds:0x87231511,eax
  41b3ea:	mov    ch,0xcf
  41b3ec:	and    BYTE PTR [ecx],dh
  41b3ee:	and    ah,cl
  41b3f0:	ds cwde 
  41b3f2:	cmp    dl,BYTE PTR [esi+0x72]
  41b3f5:	call   0x83c0af81
  41b3fa:	into   
  41b3fb:	mov    ebx,0x2cda00c6
  41b400:	push   DWORD PTR [esi+0x5]
  41b403:	pop    ecx
  41b404:	adc    dl,cl
  41b406:	aam    0xae
  41b408:	daa    
  41b409:	out    dx,eax
  41b40a:	mov    cs,WORD PTR ss:[edi]
  41b40d:	cdq    
  41b40e:	push   edi
  41b40f:	xor    BYTE PTR [ebx],dh
  41b411:	inc    edx
  41b412:	(bad)  
  41b413:	jbe    0x41b3c3
  41b415:	lea    ebx,cs:[esi+0x75]
  41b419:	jge    0x41b3fa
  41b41b:	sbb    eax,0x66548cd3
  41b420:	js     0x41b409
  41b422:	ins    DWORD PTR es:[edi],dx
  41b423:	ins    BYTE PTR es:[edi],dx
  41b424:	aam    0x13
  41b426:	xchg   esi,eax
  41b427:	jmp    0xa59f4c98
  41b42c:	sub    eax,0x7020ca48
  41b431:	inc    ecx
  41b432:	(bad)  [esi]
  41b434:	inc    ebp
  41b436:	inc    ebp
  41b437:	fnstenv [eax]
  41b439:	dec    edi
  41b43a:	adc    dl,BYTE PTR [eax-0x55d32f69]
  41b440:	fdivr  DWORD PTR [esi]
  41b442:	push   0x79
  41b444:	adc    eax,0x807646b2
  41b449:	in     al,0x77
  41b44b:	dec    edx
  41b44c:	dec    ecx
  41b44d:	lahf   
  41b44e:	xor    al,0xf1
  41b450:	stc    
  41b451:	das    
  41b452:	mov    ecx,DWORD PTR [ebx+0x3d03afeb]
  41b458:	loop   0x41b494
  41b45a:	xchg   esi,eax
  41b45b:	pop    ebp
  41b45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45d:	inc    edx
  41b45e:	xchg   edx,eax
  41b45f:	xchg   edi,eax
  41b460:	cwde   
  41b461:	les    esi,FWORD PTR [edi+0x3474aaf6]
  41b467:	imul   esp,DWORD PTR [eax+0x22],0x616c64f6
  41b46e:	dec    ecx
  41b46f:	mov    BYTE PTR [ebx+edx*2+0xb39e80e],ah
  41b476:	mov    ds:0xd5414635,al
  41b47b:	dec    ecx
  41b47c:	sti    
  41b47d:	inc    eax
  41b47e:	mov    ds:0xb5c93189,al
  41b483:	and    eax,0x92d302b9
  41b488:	mov    al,0xb
  41b48a:	call   0xff4aac8d
  41b48f:	(bad)  
  41b490:	xchg   esp,eax
  41b491:	add    edi,DWORD PTR [edx-0xa]
  41b494:	adc    al,dl
  41b496:	mov    ecx,0xebd13569
  41b49b:	sub    al,0x78
  41b49d:	sub    DWORD PTR [ebp-0xf4058fd],0xf
  41b4a4:	ja     0x41b4d3
  41b4a6:	cmc    
  41b4a7:	push   es
  41b4a8:	jmp    0x8ed2ce74
  41b4ad:	sub    ebx,DWORD PTR [eax+0x5aa4f8ea]
  41b4b3:	jae    0x41b4cf
  41b4b5:	mov    ds:0xc66dcbc,al
  41b4ba:	pop    ebp
  41b4bb:	les    esi,FWORD PTR [ebp-0x4a]
  41b4be:	aam    0xe5
  41b4c0:	and    ah,BYTE PTR [esi+ecx*2+0x3c]
  41b4c4:	adc    ebp,DWORD PTR [esp+ebp*1+0x29]
  41b4c8:	adc    ch,dh
  41b4ca:	pop    eax
  41b4cb:	xchg   BYTE PTR [edi],dh
  41b4cd:	loope  0x41b4b8
  41b4cf:	dec    esp
  41b4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d1:	data16 aaa 
  41b4d3:	mov    ds:0xcbbd0d73,al
  41b4d8:	ret    0xd916
  41b4db:	mov    ebp,0x26058e63
  41b4e0:	test   eax,0xf88231d2
  41b4e5:	frstor [eax+0xa]
  41b4e8:	cmp    edi,0xffffff88
  41b4eb:	add    al,BYTE PTR [ebp+0x48]
  41b4ee:	jmp    0xece2:0xbbd1127a
  41b4f5:	adc    al,ch
  41b4f7:	sub    al,0xdd
  41b4f9:	or     DWORD PTR ds:0x2b2006b0,0x17
  41b500:	scas   eax,DWORD PTR es:[edi]
  41b501:	or     esi,DWORD PTR [esi+0x32]
  41b504:	enter  0x1624,0xe3
  41b508:	mov    edx,0x926939e7
  41b50d:	add    ecx,eax
  41b50f:	dec    edi
  41b510:	sbb    ch,dh
  41b512:	jmp    0x6034:0xf7103fd8
  41b519:	push   ebp
  41b51a:	cwde   
  41b51b:	mov    ss,WORD PTR [eax]
  41b51d:	xchg   esp,ebp
  41b51f:	int    0x28
  41b521:	pause  
  41b523:	nop
  41b524:	test   DWORD PTR [esi],ebp
  41b526:	xchg   ebx,eax
  41b527:	jb     0x41b58a
  41b529:	nop
  41b52a:	in     al,0x53
  41b52c:	adc    edx,DWORD PTR [edi+0x7fb1d5ee]
  41b532:	push   esi
  41b533:	mov    ah,0x23
  41b535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b536:	popa   
  41b537:	cli    
  41b538:	rcl    BYTE PTR [esi-0x6604bad8],cl
  41b53e:	push   es
  41b53f:	stc    
  41b540:	outs   dx,DWORD PTR ds:[esi]
  41b541:	sub    esi,DWORD PTR [esi+0x23]
	...
  41b54f:	add    BYTE PTR [eax],al
  41b551:	out    dx,al
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0xf4ea5e1c
  41b561:	xor    al,BYTE PTR [bx+di]
  41b564:	add    BYTE PTR [ebx+0x39000003],ch
  41b56a:	inc    edi
  41b56b:	mov    ecx,0x280ccf0c
  41b570:	xchg   BYTE PTR [edx],ah
  41b572:	popf   
  41b573:	pop    esp
  41b574:	js     0x41b5c2
  41b576:	jle    0x41b55e
  41b578:	cmovge ecx,DWORD PTR [ecx+0x6a54c270]
  41b57f:	lods   eax,DWORD PTR ds:[esi]
  41b580:	(bad)  
  41b581:	push   ebx
  41b582:	xchg   BYTE PTR [edx-0x172dd0a8],cl
  41b588:	xor    BYTE PTR [ebx-0x1007404a],0xe3
  41b58f:	mov    cl,0xc9
  41b591:	ds call 0xdfe7:0xebd427b2
  41b599:	push   0x43
  41b59b:	sbb    ah,bh
  41b59d:	sub    dl,dl
  41b59f:	into   
  41b5a0:	js     0x41b5e9
  41b5a2:	sub    DWORD PTR [eax+0x78ac92d2],eax
  41b5a8:	stos   DWORD PTR es:[edi],eax
  41b5a9:	int3   
  41b5aa:	pop    esp
  41b5ab:	mov    eax,0xfc0cef31
  41b5b0:	sgdtd  [edx+0x70a52e9d]
  41b5b7:	test   al,0xe1
  41b5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bb:	test   DWORD PTR [eax+0x5e],ebp
  41b5be:	hlt    
  41b5bf:	sahf   
  41b5c0:	call   0x345d:0x93c1d21f
  41b5c7:	jl     0x41b5a4
  41b5c9:	and    edi,esp
  41b5cb:	push   ss
  41b5cc:	in     al,0xc9
  41b5ce:	les    esp,FWORD PTR [ecx-0x79]
  41b5d1:	mov    cl,0x47
  41b5d3:	mov    WORD PTR [ebx-0x1958f9d5],?
  41b5d9:	jecxz  0x41b61b
  41b5db:	xor    edi,DWORD PTR [edi]
  41b5dd:	nop
  41b5de:	jmp    0x41b5f1
  41b5e0:	scas   eax,DWORD PTR es:[edi]
  41b5e1:	inc    edx
  41b5e2:	addr16 mov cl,0x51
  41b5e5:	retf   
  41b5e6:	xchg   BYTE PTR [edi+edx*4-0x66],ah
  41b5ea:	out    0x10,eax
  41b5ec:	repz jbe 0x41b59f
  41b5ef:	or     dl,BYTE PTR [eax+0xf]
  41b5f2:	jnp    0x41b5a2
  41b5f4:	rcr    BYTE PTR [edx+0x17],1
  41b5f7:	es pusha 
  41b5f9:	jge    0x41b66f
  41b5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5fc:	nop
  41b5fd:	inc    esi
  41b5fe:	cmp    DWORD PTR [eax],esp
  41b600:	(bad)  
  41b601:	jmp    0x67a0c4bb
  41b606:	stos   DWORD PTR es:[edi],eax
  41b607:	sub    al,0x6e
  41b609:	xor    al,0xbc
  41b60b:	mov    ah,0x1a
  41b60d:	xor    al,0x7b
  41b60f:	jae    0x41b5ae
  41b611:	test   BYTE PTR [edi+ebp*4-0x19],ah
  41b615:	mov    edx,0x5e5002fe
  41b61a:	pop    ebp
  41b61b:	cld    
  41b61c:	dec    edi
  41b61d:	push   0xc3dc748e
  41b622:	mov    eax,0x88a9af45
  41b627:	(bad)  
  41b628:	loop   0x41b5ae
  41b62a:	sbb    DWORD PTR [edi+0x3d],0x39
  41b62e:	(bad)  
  41b62f:	lods   eax,DWORD PTR ds:[esi]
  41b630:	adc    al,0x6f
  41b632:	das    
  41b633:	sbb    DWORD PTR [eax-0x7b],0xffffff82
  41b637:	xchg   ecx,eax
  41b638:	stos   BYTE PTR es:[edi],al
  41b639:	pop    ecx
  41b63a:	shl    ch,cl
  41b63c:	jb     0x41b6ae
  41b63e:	inc    edx
  41b63f:	xor    DWORD PTR [edi+0x7f],ebp
  41b642:	dec    esi
  41b643:	mov    es,eax
  41b645:	call   0xf186c367
  41b64a:	aam    0xd5
  41b64c:	mov    ds:0x93ee90f9,eax
  41b651:	fcmovb st,st(4)
  41b653:	sbb    al,0xc9
  41b655:	or     DWORD PTR [ebx+0x28daaaa9],0x57
  41b65c:	xchg   ebp,eax
  41b65d:	pop    ss
  41b65e:	ja     0x41b633
  41b660:	lea    esi,[edx-0x1eff0272]
  41b666:	adc    BYTE PTR [edi-0x2b6db09c],0x41
  41b66d:	mov    ds:0xb971fb44,eax
  41b672:	cs pop ecx
  41b674:	repnz cdq 
  41b676:	gs (bad) 
  41b678:	aaa    
  41b679:	and    dl,BYTE PTR [ebx-0x180a7ff6]
  41b67f:	sbb    al,0x1e
  41b681:	mov    ds:0x6d55cd72,eax
  41b686:	sahf   
  41b687:	push   ebx
  41b688:	(bad)  
  41b689:	das    
  41b68a:	je     0x41b642
  41b68c:	lods   al,BYTE PTR ds:[esi]
  41b68d:	cmp    eax,0xa9391a28
  41b692:	xor    esi,DWORD PTR [ebp-0x48b38c7b]
  41b698:	ins    BYTE PTR es:[edi],dx
  41b699:	xor    al,0xaf
  41b69b:	retf   
  41b69c:	fiadd  WORD PTR [ebx]
  41b69e:	mov    dl,BYTE PTR [eax*1-0x75f9a7a6]
  41b6a5:	push   ecx
  41b6a6:	sub    bl,BYTE PTR [ebp+0x5c]
  41b6a9:	out    0x39,al
  41b6ab:	in     al,dx
  41b6ac:	call   0x6464d459
  41b6b1:	and    al,0x44
  41b6b3:	popf   
  41b6b4:	sub    esi,DWORD PTR [ecx*1-0x36aa22be]
  41b6bb:	jge    0x41b708
  41b6bd:	(bad)  
  41b6bf:	xchg   edi,eax
  41b6c0:	les    esp,FWORD PTR [ecx+eax*1]
  41b6c3:	add    bh,BYTE PTR [esi+eax*8-0x22]
  41b6c7:	repz or al,BYTE PTR [ebp+0x2d9d77a6]
  41b6ce:	aaa    
  41b6cf:	pop    ds
  41b6d0:	cmp    al,0x4c
  41b6d2:	jmp    0x41b6aa
  41b6d4:	xor    edi,esp
  41b6d6:	inc    esi
  41b6d7:	int    0xe7
  41b6d9:	pop    esp
  41b6da:	out    dx,eax
  41b6db:	sbb    ecx,DWORD PTR [ecx+0x4d2eca47]
  41b6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e2:	dec    esi
  41b6e3:	mov    bl,0x1e
  41b6e5:	loope  0x41b760
  41b6e7:	ins    BYTE PTR es:[edi],dx
  41b6e8:	fsubr  DWORD PTR [esp+eax*4]
  41b6eb:	fdivr  QWORD PTR [edi-0x2cc25024]
  41b6f1:	pushf  
  41b6f2:	mov    ebp,0x329d7014
  41b6f7:	int    0xff
  41b6f9:	dec    esp
  41b6fa:	mov    BYTE PTR [edx+0x4d],ah
  41b6fd:	aam    0x65
  41b6ff:	repnz xchg edi,eax
  41b701:	jg     0x41b747
  41b703:	arpl   WORD PTR [ecx+0x47],bp
  41b706:	ret    0x5eb4
  41b709:	jne    0x41b6f3
  41b70b:	nop
  41b70c:	xor    DWORD PTR [ebx],eax
  41b70e:	mov    eax,0x23b6f430
  41b713:	(bad)  
  41b714:	test   DWORD PTR [edx-0x21],ecx
  41b717:	xchg   ebx,eax
  41b718:	jns    0x41b6ef
  41b71a:	mov    ah,0xbc
  41b71c:	jns    0x41b6ca
  41b71e:	(bad)  
  41b71f:	int3   
  41b720:	and    eax,0x2d0e6a4d
  41b725:	pop    ss
  41b726:	repnz lock push esi
  41b729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b72a:	or     esi,DWORD PTR [esi]
  41b72c:	fs loope 0x41b70c
  41b72f:	stos   BYTE PTR es:[edi],al
  41b730:	xchg   esi,eax
  41b731:	or     BYTE PTR [ecx+ecx*2+0x20],ch
  41b735:	pop    ebx
  41b736:	or     cl,BYTE PTR ss:[edx-0x7db6c912]
  41b73d:	jg     0x41b775
  41b73f:	rol    DWORD PTR [esi],1
  41b741:	sbb    BYTE PTR [ecx+0x1bc098f5],ah
  41b747:	sub    al,0x27
  41b749:	pop    edi
  41b74a:	in     al,dx
  41b74b:	push   edx
  41b74c:	fdivr  QWORD PTR [ebx+ebp*1]
  41b74f:	ins    DWORD PTR es:[edi],dx
  41b750:	xchg   esp,eax
  41b751:	fidiv  WORD PTR [eax-0x73]
  41b754:	shr    bl,0x4
  41b757:	push   0xffffffc9
  41b759:	sbb    ebx,DWORD PTR [eax-0x5f]
  41b75c:	nop
  41b75d:	out    0x7a,al
  41b75f:	add    ecx,DWORD PTR [ecx-0x231bbe4b]
  41b765:	mov    cl,0x62
  41b767:	inc    ebp
  41b768:	pop    ecx
  41b769:	loope  0x41b740
  41b76b:	sub    esp,DWORD PTR [edi+0x114e406e]
  41b771:	(bad)  
  41b772:	push   es
  41b773:	fmul   DWORD PTR [edx+0x4dfc4d05]
  41b779:	pop    esi
  41b77a:	(bad)  [edi+0x6d]
  41b77d:	pop    es
  41b77e:	dec    esi
  41b77f:	xor    DWORD PTR [ebp+0x3d20bb3],ebx
  41b785:	or     ebx,DWORD PTR [esi-0x3e]
  41b788:	stc    
  41b789:	aad    0xed
  41b78b:	push   edi
  41b78c:	sub    BYTE PTR [eax-0x19],ch
  41b78f:	cmc    
  41b790:	pop    ecx
  41b791:	and    DWORD PTR [esi],edi
  41b793:	xchg   ecx,eax
  41b794:	add    DWORD PTR [edx],esi
  41b796:	push   ebp
  41b797:	sar    DWORD PTR [edx+0x2969afbd],cl
  41b79d:	add    edi,DWORD PTR [eax+0xb]
  41b7a0:	mov    BYTE PTR [esi],ch
  41b7a2:	jo     0x41b807
  41b7a4:	push   cs
  41b7a5:	fnstcw WORD PTR [eax+edx*8]
  41b7a8:	mov    eax,ds:0xf36a50fa
  41b7ad:	pop    ebx
  41b7ae:	outs   dx,BYTE PTR ds:[esi]
  41b7af:	cdq    
  41b7b0:	mov    DWORD PTR [esi-0x7d],ebx
  41b7b3:	push   cs
  41b7b4:	sti    
  41b7b5:	jmp    0x9c69cffb
  41b7ba:	ss in  eax,0x68
  41b7bd:	js     0x41b775
  41b7bf:	dec    esi
  41b7c0:	xor    ch,BYTE PTR [esi-0x1c338d30]
  41b7c6:	neg    DWORD PTR [edx+0x70]
  41b7c9:	call   0x768c5565
  41b7ce:	not    BYTE PTR [edx]
  41b7d0:	mov    BYTE PTR [edx+0x2b06f9f4],dh
  41b7d6:	aaa    
  41b7d7:	xlat   BYTE PTR ds:[ebx]
  41b7d8:	imul   ecx,DWORD PTR [eax],0x60
  41b7db:	shr    DWORD PTR [eax],0x1
  41b7de:	cmp    BYTE PTR [edx],0x17
  41b7e1:	loopne 0x41b77b
  41b7e3:	(bad)  
  41b7e4:	js     0x41b82d
  41b7e6:	addr16 ffreep st(2)
  41b7e9:	lock mov ds:0xc205b3d,al
  41b7ef:	loop   0x41b78f
  41b7f1:	push   0xe41a7bb3
  41b7f6:	in     eax,0x2d
  41b7f8:	pop    ebp
  41b7f9:	add    esp,DWORD PTR [ebp-0x7042b55d]
  41b7ff:	cmp    ah,BYTE PTR [eax-0x11]
  41b802:	xor    eax,0xbe897c25
  41b807:	daa    
  41b808:	lods   eax,DWORD PTR ds:[esi]
  41b809:	ins    BYTE PTR es:[edi],dx
  41b80a:	shl    DWORD PTR [edx+0x6912e6ce],0x85
  41b811:	and    al,BYTE PTR [ebx+0x4df49972]
  41b817:	cs xchg ebx,eax
  41b819:	mov    BYTE PTR ds:[ebp+0x39],ah
  41b81d:	test   BYTE PTR [edx],dl
  41b81f:	pusha  
  41b820:	xchg   DWORD PTR [esi-0x25f79f6c],ebp
  41b826:	hlt    
  41b827:	mov    ebp,ebp
  41b829:	nop
  41b82a:	mov    ebx,0xd1d868be
  41b82f:	mov    WORD PTR [ebp-0x23d07ca5],fs
  41b835:	inc    edi
  41b836:	xchg   ebx,eax
  41b837:	dec    esp
  41b838:	jns    0x41b7d4
  41b83a:	or     esi,DWORD PTR [ebx+0x36]
  41b83d:	xlat   BYTE PTR ds:[ebx]
  41b83e:	sub    DWORD PTR [esi+0x16],ebx
  41b841:	xor    bh,ch
  41b843:	int3   
  41b844:	pop    edx
  41b845:	add    eax,0x9eae31fd
  41b84b:	mov    al,0xce
  41b84d:	loop   0x41b82d
  41b84f:	hlt    
  41b850:	ja     0x41b7e0
  41b852:	sti    
  41b853:	shl    esi,0xed
  41b856:	sub    DWORD PTR [ecx+edi*1],edx
  41b859:	inc    edx
  41b85a:	out    0x36,al
  41b85c:	mov    al,0x45
  41b85e:	arpl   bp,si
  41b860:	test   BYTE PTR [edx+0x6ef188ae],0x42
  41b867:	pushf  
  41b868:	rol    BYTE PTR [edx-0x1ba78078],1
  41b86e:	sub    ecx,DWORD PTR [eax-0x4e56ca11]
  41b874:	push   edi
  41b875:	icebp  
  41b876:	dec    esi
  41b877:	xchg   DWORD PTR [ecx-0x20],esi
  41b87a:	cdq    
  41b87b:	outs   dx,DWORD PTR ds:[esi]
  41b87c:	push   esp
  41b87d:	mov    ds:0x2b61a164,eax
  41b882:	rol    DWORD PTR [ecx-0x7ca33af5],0x4
  41b889:	fwait
  41b88a:	sub    DWORD PTR [ecx-0x3c],ebx
  41b88d:	mov    ds:0xa851bfbc,al
  41b892:	dec    edx
  41b893:	lds    esi,FWORD PTR [edi+0x6ef94d5c]
  41b899:	cmp    DWORD PTR [ecx-0x32f25b64],ecx
  41b89f:	jecxz  0x41b82b
  41b8a1:	sub    DWORD PTR [ecx],esi
  41b8a3:	cmp    al,0xc3
  41b8a5:	ds and bl,cl
  41b8a8:	repnz mov esp,eax
  41b8ab:	dec    edx
  41b8ac:	push   esp
  41b8ad:	xchg   BYTE PTR [esi],dl
  41b8af:	dec    esp
  41b8b0:	(bad)  
  41b8b1:	pushf  
  41b8b2:	(bad)  
  41b8b3:	popf   
  41b8b4:	mov    bl,0xec
  41b8b6:	dec    ebp
  41b8b7:	mov    cl,0xd2
  41b8b9:	lods   al,BYTE PTR ds:[esi]
  41b8ba:	and    al,0xde
  41b8bc:	lahf   
  41b8bd:	pop    edi
  41b8be:	xchg   ebp,eax
  41b8bf:	sbb    al,0x5c
  41b8c1:	fsubr  st,st(2)
  41b8c3:	(bad)  
  41b8c5:	inc    eax
  41b8c6:	and    edi,0x3d436a5f
  41b8cc:	xchg   edi,eax
  41b8cd:	lahf   
  41b8ce:	and    DWORD PTR [ecx-0x6a],ecx
  41b8d1:	clc    
  41b8d2:	jg     0x41b94c
  41b8d4:	popf   
  41b8d5:	or     esp,DWORD PTR [eax]
  41b8d7:	sub    al,0x65
  41b8d9:	cli    
  41b8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8db:	aam    0x34
  41b8dd:	and    ecx,DWORD PTR [eax-0x10]
  41b8e0:	fs pop ebx
  41b8e2:	mov    al,ds:0xe914437
  41b8e7:	jbe    0x41b8cd
  41b8e9:	stos   BYTE PTR es:[edi],al
  41b8ea:	adc    al,BYTE PTR [eax]
  41b8ec:	add    al,0xae
  41b8ee:	mul    DWORD PTR [eax]
  41b8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f1:	pop    esp
  41b8f2:	aad    0x80
  41b8f4:	out    dx,al
  41b8f5:	mov    fs,WORD PTR [eax+ebx*4]
  41b8f8:	cmc    
  41b8f9:	push   eax
  41b8fa:	cs mov dh,0xff
  41b8fd:	mov    dl,0x32
  41b8ff:	push   0x44
  41b901:	and    BYTE PTR [ebp+0x51],dl
  41b904:	out    0xf1,eax
  41b906:	pop    ebx
  41b907:	int3   
  41b908:	in     eax,dx
  41b909:	add    eax,0x37725a49
  41b90e:	xlat   BYTE PTR ds:[ebx]
  41b90f:	jno    0x41b947
  41b911:	sub    cl,BYTE PTR [edi]
  41b913:	mov    BYTE PTR [eax],0x0
	...
  41b91e:	add    BYTE PTR [eax],al
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi+0x79],ah
  41b92e:	gs sub al,0xf1
  41b931:	adc    dh,BYTE PTR [esi]
  41b933:	add    DWORD PTR [eax],eax
  41b935:	stos   DWORD PTR es:[edi],eax
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    BYTE PTR [eax+0x2],ch
  41b93b:	mov    ss,WORD PTR [edi+0x18081951]
  41b941:	cmc    
  41b942:	fs repz add eax,0x2de458e3
  41b949:	sub    al,BYTE PTR [edi+0x11]
  41b94c:	push   0x7ba7323e
  41b951:	inc    esp
  41b952:	mov    bh,0x75
  41b954:	cmp    DWORD PTR [eax-0x74bf7b2a],esp
  41b95a:	or     DWORD PTR [ecx+0x51],edi
  41b95d:	push   ebx
  41b95f:	xor    DWORD PTR [edx],esi
  41b961:	cmp    DWORD PTR [esp+edi*1],eax
  41b964:	cwde   
  41b965:	jge    0x41b981
  41b967:	mov    ah,BYTE PTR [ecx+0x435bc55c]
  41b96d:	xchg   esp,eax
  41b96e:	cmp    esp,DWORD PTR [ecx-0x4f]
  41b971:	stos   DWORD PTR es:[edi],eax
  41b972:	mov    ah,0xf1
  41b974:	jae    0x41b933
  41b976:	scas   al,BYTE PTR es:[edi]
  41b977:	mov    ebx,0x38c96c72
  41b97c:	and    esp,esp
  41b97e:	test   bl,al
  41b980:	test   BYTE PTR [ebx+0x79],cl
  41b983:	push   esi
  41b984:	das    
  41b985:	pop    ss
  41b986:	xchg   edx,eax
  41b987:	jecxz  0x41b9f7
  41b989:	jp     0x41b9b3
  41b98b:	aas    
  41b98c:	aad    0xa
  41b98e:	in     al,dx
  41b98f:	jae    0x41b961
  41b991:	bound  edi,QWORD PTR [edi-0x7e]
  41b994:	popf   
  41b995:	out    0x21,eax
  41b997:	scas   eax,DWORD PTR es:[edi]
  41b998:	push   cs
  41b999:	cmp    al,cl
  41b99b:	xchg   esp,eax
  41b99c:	ja     0x41b956
  41b99e:	je     0x41b9fb
  41b9a0:	dec    edx
  41b9a1:	xchg   ebp,eax
  41b9a2:	pop    eax
  41b9a3:	xor    DWORD PTR cs:[ebx],ebp
  41b9a6:	test   eax,edi
  41b9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a9:	in     al,0x11
  41b9ab:	rcl    DWORD PTR [esi+0x5e9bb008],1
  41b9b1:	out    dx,al
  41b9b2:	ret    0xa653
  41b9b5:	mov    esi,0x48fc87b8
  41b9ba:	fistp  DWORD PTR [ecx+0xfa2b616]
  41b9c0:	jle    0x41b9e3
  41b9c2:	out    dx,eax
  41b9c3:	xchg   edx,eax
  41b9c4:	pop    edi
  41b9c5:	ins    BYTE PTR es:[edi],dx
  41b9c6:	push   ss
  41b9c7:	pop    ds
  41b9c8:	fimul  WORD PTR [esi]
  41b9ca:	(bad)  
  41b9cb:	pop    esi
  41b9cc:	mov    cl,0x66
  41b9ce:	and    cl,BYTE PTR [esi]
  41b9d0:	nop
  41b9d1:	and    ebx,ecx
  41b9d3:	mov    ds:0xf71ee8ab,eax
  41b9d8:	es call 0x372df5cd
  41b9de:	fistp  WORD PTR [ebx-0x29]
  41b9e1:	aaa    
  41b9e2:	inc    eax
  41b9e3:	xor    ah,ah
  41b9e5:	cmp    ebp,DWORD PTR [eax+0x14bfd57b]
  41b9eb:	clc    
  41b9ec:	pop    ebx
  41b9ed:	in     al,dx
  41b9ee:	(bad)  
  41b9ef:	or     eax,0xa43756df
  41b9f4:	sar    BYTE PTR [esi-0x28477679],cl
  41b9fa:	mov    esi,0xb4efbf86
  41b9ff:	retf   
  41ba00:	jg     0x41ba12
  41ba02:	lds    ecx,FWORD PTR [edx]
  41ba04:	mov    dl,0x1d
  41ba06:	enter  0xb67b,0xf9
  41ba0a:	(bad)  
  41ba0b:	adc    esi,DWORD PTR [esi+0x26]
  41ba0e:	mov    cl,0xea
  41ba10:	pop    eax
  41ba11:	in     al,dx
  41ba12:	pop    ecx
  41ba13:	jno    0x41b9ec
  41ba15:	xor    esi,DWORD PTR ds:0xe687ad3d
  41ba1b:	sub    esp,eax
  41ba1d:	or     ebx,edi
  41ba1f:	inc    esp
  41ba20:	xchg   esp,eax
  41ba21:	dec    ecx
  41ba22:	cmp    ebp,ecx
  41ba24:	inc    ecx
  41ba25:	mov    esp,0x6b71cd3e
  41ba2a:	ret    
  41ba2b:	jne    0x41ba4b
  41ba2d:	ja     0x41b9be
  41ba2f:	in     al,0xbf
  41ba31:	aad    0xc5
  41ba33:	loop   0x41ba68
  41ba35:	out    0xf0,al
  41ba37:	repnz inc ebp
  41ba3a:	(bad)  
  41ba3b:	jg     0x41b9d8
  41ba3d:	push   edi
  41ba3e:	popa   
  41ba3f:	aaa    
  41ba40:	bswap  ecx
  41ba42:	xchg   ebp,eax
  41ba43:	stos   BYTE PTR es:[edi],al
  41ba44:	bound  ecx,QWORD PTR [ecx+0x531ccb64]
  41ba4a:	jae    0x41ba13
  41ba4c:	lods   eax,DWORD PTR ds:[esi]
  41ba4d:	(bad)  
  41ba4e:	adc    dh,BYTE PTR ss:[edi-0x4c]
  41ba52:	les    ebp,FWORD PTR [edi]
  41ba54:	and    DWORD PTR [edi],ecx
  41ba56:	dec    esi
  41ba57:	iret   
  41ba58:	lods   al,BYTE PTR ds:[esi]
  41ba59:	test   eax,0x84bf977c
  41ba5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba5f:	add    bh,BYTE PTR [eax-0x3d]
  41ba62:	aas    
  41ba63:	xlat   BYTE PTR ds:[ebx]
  41ba64:	dec    eax
  41ba65:	or     ebx,DWORD PTR ds:0xf8e0ec00
  41ba6b:	int3   
  41ba6c:	mov    eax,0x32ba76b3
  41ba71:	xor    esi,DWORD PTR [esi+0x6dcbb2b4]
  41ba77:	pushf  
  41ba78:	arpl   WORD PTR [ebx],sp
  41ba7a:	fwait
  41ba7b:	add    al,0xd7
  41ba7d:	mov    ebp,0xd8069dcc
  41ba82:	das    
  41ba83:	fstp   DWORD PTR [edi]
  41ba85:	jno    0x41ba24
  41ba87:	test   eax,0x137932b8
  41ba8c:	nop
  41ba8d:	adc    DWORD PTR [ebx+0x73],edx
  41ba90:	iret   
  41ba91:	xor    BYTE PTR [ebp+0x2fbaf307],bh
  41ba97:	out    0xe5,eax
  41ba99:	jo     0x41baae
  41ba9b:	inc    edi
  41ba9c:	mov    eax,ds:0xd3c96dba
  41baa1:	jp     0x41bab8
  41baa3:	jne    0x41ba45
  41baa5:	adc    bh,BYTE PTR [ebp-0x191aa00c]
  41baab:	add    bh,cl
  41baad:	aaa    
  41baae:	xchg   esi,eax
  41baaf:	pop    ecx
  41bab1:	(bad)  
  41bab2:	aam    0x1f
  41bab4:	mov    edi,0x3a3e4ea7
  41bab9:	fistp  QWORD PTR [esi-0xb06cc35]
  41babf:	sub    edx,DWORD PTR [esi+ecx*2]
  41bac2:	xor    ch,BYTE PTR [edi+eax*8-0x7c]
  41bac6:	lahf   
  41bac7:	jmp    0x41bb02
  41bac9:	pop    esi
  41baca:	push   eax
  41bacb:	loop   0x41bb3c
  41bacd:	sbb    eax,DWORD PTR [eax]
  41bacf:	xor    eax,0xf8e45c64
  41bad4:	and    al,0x4b
  41bad6:	sbb    eax,0x23bb99c1
  41badb:	jmp    0xf24:0xc44ee5d3
  41bae2:	nop
  41bae3:	sbb    al,0x66
  41bae5:	xor    al,0x80
  41bae7:	cdq    
  41bae8:	sub    DWORD PTR [esi-0x57],esi
  41baeb:	mov    eax,esp
  41baed:	sub    al,0x93
  41baef:	sbb    al,ch
  41baf1:	push   esi
  41baf2:	ins    DWORD PTR es:[edi],dx
  41baf3:	(bad)  
  41baf5:	sbb    DWORD PTR [ebx+eax*4-0x4c60ef7c],eax
  41bafc:	dec    ebp
  41bafd:	xchg   esi,eax
  41bafe:	outs   dx,DWORD PTR ds:[esi]
  41baff:	aam    0x27
  41bb01:	xchg   cl,ch
  41bb03:	call   0x158d:0x4759d2c5
  41bb0a:	xor    BYTE PTR [ebp+0x5436a7d5],cl
  41bb10:	shl    DWORD PTR [eax+0x4b],1
  41bb13:	mov    cl,0x41
  41bb15:	retf   
  41bb16:	bound  esp,QWORD PTR [ecx+ebp*1+0x40998a9f]
  41bb1d:	sub    eax,0xd9de534a
  41bb22:	idiv   BYTE PTR [esi-0x73]
  41bb25:	xchg   edi,eax
  41bb26:	jp     0x41bad3
  41bb28:	push   esp
  41bb29:	pusha  
  41bb2a:	sbb    BYTE PTR [ecx+ebx*2],bh
  41bb2d:	inc    ebx
  41bb2e:	shr    DWORD PTR [edi+0x5e],cl
  41bb31:	sub    ch,BYTE PTR [ecx+0x33bd82ab]
  41bb37:	ror    bl,1
  41bb39:	mov    al,ds:0xfdf35bef
  41bb3e:	adc    al,dh
  41bb40:	jo     0x41bb5c
  41bb42:	cmp    ebx,DWORD PTR [eax+0x2317b35f]
  41bb48:	inc    ebx
  41bb49:	pop    esi
  41bb4a:	mov    ch,0x51
  41bb4c:	push   ebp
  41bb4d:	cmp    DWORD PTR [eax-0x791d8cdd],ecx
  41bb53:	sub    al,0x4e
  41bb55:	adc    bl,0x9b
  41bb58:	pop    ss
  41bb59:	mov    ebx,0xdff1f353
  41bb5e:	shl    DWORD PTR [edx+0x1f111a95],0x9b
  41bb65:	xor    cl,0xa5
  41bb68:	outs   dx,DWORD PTR ds:[esi]
  41bb69:	cdq    
  41bb6a:	das    
  41bb6b:	dec    ecx
  41bb6c:	mov    eax,ds:0x685b9e1
  41bb71:	neg    DWORD PTR [ebx-0x28]
  41bb74:	cmp    esi,DWORD PTR [edx+esi*1-0x45044942]
  41bb7b:	and    eax,0x27416e16
  41bb80:	pusha  
  41bb81:	cmp    edi,ebx
  41bb83:	dec    eax
  41bb84:	mov    bh,0xe5
  41bb86:	mov    edx,0x80fad8fc
  41bb8b:	lock std 
  41bb8d:	rcl    DWORD PTR ds:0x1566e6b7,0xf
  41bb94:	push   ebp
  41bb95:	cmp    dh,BYTE PTR [eax]
  41bb97:	mov    gs,WORD PTR [edi+ebp*1+0x6f]
  41bb9b:	jge    0x41bba8
  41bb9d:	mov    ebx,0x2ecce148
  41bba2:	pop    ebp
  41bba3:	je     0x41bb9b
  41bba5:	mov    eax,ds:0x6b42a8b7
  41bbaa:	lds    edx,FWORD PTR [ebx-0x35b686b4]
  41bbb0:	push   eax
  41bbb1:	cmp    ch,BYTE PTR [ebx+0x4cda7b1a]
  41bbb7:	mov    dh,0x33
  41bbb9:	inc    ebx
  41bbba:	stc    
  41bbbb:	cld    
  41bbbc:	xchg   ecx,eax
  41bbbd:	leave  
  41bbbe:	ret    0x46b1
  41bbc1:	jle    0x41bb96
  41bbc3:	sub    edi,DWORD PTR [edx+ebx*4+0x4651cace]
  41bbca:	jg     0x41bc36
  41bbcc:	mov    ds:0x7979ef1,eax
  41bbd1:	dec    ebx
  41bbd2:	outs   dx,DWORD PTR ds:[esi]
  41bbd3:	add    ebp,ebp
  41bbd5:	or     cl,BYTE PTR [ebx]
  41bbd7:	adc    BYTE PTR [edx],bl
  41bbd9:	add    BYTE PTR [edx+0x4d7a077],dl
  41bbdf:	into   
  41bbe0:	pop    ds
  41bbe1:	out    dx,eax
  41bbe2:	les    edi,FWORD PTR [ebx-0x5bf8737c]
  41bbe8:	repz add DWORD PTR [ebx],0x46
  41bbec:	and    ebp,DWORD PTR [esi-0xba399bb]
  41bbf2:	nop
  41bbf3:	fild   WORD PTR [ecx]
  41bbf5:	fadd   DWORD PTR [esi]
  41bbf7:	fs gs dec ebp
  41bbfa:	stos   DWORD PTR es:[edi],eax
  41bbfb:	std    
  41bbfc:	push   ds
  41bbfd:	mov    dl,0xd7
  41bbff:	add    BYTE PTR [edx+0x120771e2],ch
  41bc05:	dec    esp
  41bc06:	fs xor al,0xe5
  41bc09:	and    BYTE PTR [edx+0x791c8a0b],cl
  41bc0f:	mov    DWORD PTR gs:[edx+0x32],ecx
  41bc13:	loop   0x41bbef
  41bc15:	cdq    
  41bc16:	push   ecx
  41bc17:	fld    QWORD PTR [esi+edi*1-0x48ca2b96]
  41bc1e:	xor    DWORD PTR [ebp-0x7cac7798],esp
  41bc24:	pop    es
  41bc25:	cmc    
  41bc26:	fs addr16 aam 0x3
  41bc2a:	mov    dl,0x73
  41bc2c:	push   cs
  41bc2d:	add    ebp,ebx
  41bc2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc30:	jb     0x41bc24
  41bc32:	rol    DWORD PTR [edi-0x28],0x80
  41bc36:	in     al,dx
  41bc37:	sar    BYTE PTR [eax+0x3d],1
  41bc3a:	jecxz  0x41bc89
  41bc3c:	outs   dx,BYTE PTR ds:[esi]
  41bc3d:	cmp    DWORD PTR [edx-0x3b],esi
  41bc40:	imul   ecx,DWORD PTR [ebx-0x4f],0x6b
  41bc44:	in     al,dx
  41bc45:	xchg   BYTE PTR [eax-0x4dad14a8],dh
  41bc4b:	jae    0x41bc56
  41bc4d:	lahf   
  41bc4e:	jns    0x41bbda
  41bc50:	add    DWORD PTR [edx-0x35e5d282],esi
  41bc56:	sub    DWORD PTR [edi],esi
  41bc58:	into   
  41bc59:	aad    0xf9
  41bc5b:	shl    bh,cl
  41bc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5e:	jae    0x41bc1d
  41bc60:	jns    0x41bc2f
  41bc62:	fcom   st(1)
  41bc64:	xor    eax,0xe8ebc8ca
  41bc69:	xor    DWORD PTR [ecx-0x20868563],0xffffffe5
  41bc70:	mov    al,0x22
  41bc72:	mov    ebp,0x830d9e7
  41bc77:	sar    eax,0xaa
  41bc7a:	repnz sahf 
  41bc7c:	jge    0x41bc2b
  41bc7e:	adc    esi,DWORD PTR [edx+0x716f183d]
  41bc84:	repz inc edi
  41bc86:	or     dh,BYTE PTR [eax+0xe946c9e]
  41bc8c:	inc    edx
  41bc8d:	xchg   ecx,eax
  41bc8e:	out    dx,eax
  41bc8f:	and    ebp,DWORD PTR [eax]
  41bc91:	cli    
  41bc92:	add    al,0x78
  41bc94:	addr16 pop ss
  41bc96:	mov    ds:0x16692dc9,eax
  41bc9b:	aad    0x1
  41bc9d:	call   DWORD PTR [eax-0x71ac5311]
  41bca3:	xchg   DWORD PTR [esi+0x1a],edx
  41bca6:	sbb    edx,DWORD PTR [eax]
  41bca8:	retf   
  41bca9:	mov    bl,0xd3
  41bcab:	pop    ecx
  41bcac:	test   eax,0xb8c24050
  41bcb1:	xor    esp,DWORD PTR [eax+ecx*4]
  41bcb4:	push   ecx
  41bcb5:	xor    ch,BYTE PTR [eax+0x10]
  41bcb8:	mov    dl,0x90
  41bcba:	popf   
  41bcbb:	lahf   
  41bcbc:	inc    BYTE PTR [ebp+0x3389c929]
  41bcc2:	mov    ebp,0x3cc5913e
  41bcc7:	fwait
  41bcc8:	mov    edx,0x944e8e11
  41bccd:	hlt    
  41bcce:	out    dx,al
  41bccf:	sar    BYTE PTR [ebx-0x80],1
  41bcd2:	sbb    cl,al
  41bcd4:	dec    edx
  41bcd5:	pop    eax
  41bcd6:	popf   
  41bcd7:	sub    eax,0x60561482
  41bcdc:	fsubr  DWORD PTR [ecx]
  41bcde:	ins    BYTE PTR es:[edi],dx
  41bcdf:	sub    eax,eax
  41bce1:	cmp    edi,DWORD PTR [eax+0xa9]
	...
  41bcef:	add    BYTE PTR [eax],al
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	loop   0x41bc85
  41bcff:	pop    esi
  41bd00:	pop    edi
  41bd01:	mov    ebp,0xab000139
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    cl,al
  41bd0a:	shl    DWORD PTR [ebx+0x7f],0xd4
  41bd0e:	mov    ebx,0x4d81dd08
  41bd13:	loope  0x41bd2c
  41bd15:	and    DWORD PTR [edx-0x528debd9],esi
  41bd1b:	jae    0x41bce2
  41bd1d:	inc    esp
  41bd1e:	nop
  41bd1f:	les    esp,FWORD PTR [esi+0x1e8b0fb2]
  41bd25:	add    ch,BYTE PTR [ecx]
  41bd27:	ror    DWORD PTR [edi+0x3f660058],0xb
  41bd2e:	or     eax,0x16d5377b
  41bd33:	sbb    eax,0x1080ced2
  41bd38:	adc    DWORD PTR [edx],esp
  41bd3a:	gs xchg edi,eax
  41bd3c:	pop    esp
  41bd3d:	arpl   bp,bp
  41bd3f:	mov    ch,0x30
  41bd42:	fwait
  41bd43:	test   al,0x41
  41bd45:	(bad)  
  41bd46:	iret   
  41bd47:	gs leave 
  41bd49:	add    al,0x82
  41bd4b:	imul   esi,DWORD PTR [ebx+0x24fc35b6],0xffffffe6
  41bd52:	mov    esi,0xdaed2f54
  41bd57:	in     eax,0x92
  41bd59:	mov    dh,0x3f
  41bd5b:	dec    edi
  41bd5c:	in     eax,dx
  41bd5d:	jno    0x41bdb3
  41bd5f:	imul   ecx,DWORD PTR [ebx+eax*4+0x5d4414d8],0x980bc5cd
  41bd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6b:	cmc    
  41bd6c:	jmp    0x7adc:0x68eac6af
  41bd73:	enter  0xd2bc,0x2e
  41bd77:	jae    0x41bd88
  41bd79:	pop    ecx
  41bd7a:	cmc    
  41bd7b:	(bad)  
  41bd7d:	xchg   DWORD PTR [ebx+0x21a4b3e0],ebp
  41bd83:	inc    ebx
  41bd84:	ret    
  41bd85:	cmp    ebp,edi
  41bd87:	xchg   ebx,eax
  41bd88:	add    BYTE PTR [edi+0x29e134d5],al
  41bd8e:	adc    ebx,DWORD PTR [ebp-0x6f]
  41bd91:	mov    ds:0x9ad0ff6a,al
  41bd96:	inc    edi
  41bd97:	cs (bad) 
  41bd99:	popf   
  41bd9a:	mov    al,0xd3
  41bd9c:	mov    al,ds:0x2cadbd8
  41bda1:	enter  0x3c21,0xf0
  41bda5:	mov    gs,eax
  41bda7:	rep lods eax,DWORD PTR ds:[esi]
  41bda9:	mov    bh,0x5
  41bdab:	cmp    ecx,DWORD PTR [eax]
  41bdad:	mov    al,0x30
  41bdaf:	mov    dh,0x47
  41bdb1:	ret    
  41bdb2:	int    0x98
  41bdb4:	or     dh,bl
  41bdb6:	aas    
  41bdb7:	addr16 (bad) 
  41bdb9:	sub    ebx,DWORD PTR [eax-0x3fd3a55e]
  41bdbf:	sbb    ebx,DWORD PTR [esi+0x2f0e974c]
  41bdc5:	lea    edx,[edx-0x77]
  41bdc8:	inc    ecx
  41bdc9:	dec    edx
  41bdca:	mov    ds,WORD PTR [edx]
  41bdcc:	jo     0x41be25
  41bdce:	test   esi,ecx
  41bdd0:	adc    ebp,DWORD PTR [ebp+0x37da9915]
  41bdd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd7:	xor    cl,BYTE PTR [ecx-0x57]
  41bdda:	scas   al,BYTE PTR es:[edi]
  41bddb:	cmc    
  41bddc:	pop    esi
  41bddd:	pop    ebp
  41bdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bddf:	sub    DWORD PTR [ecx],esp
  41bde1:	aaa    
  41bde2:	push   ebx
  41bde3:	cdq    
  41bde4:	lock ins DWORD PTR es:[edi],dx
  41bde6:	imul   ebp,DWORD PTR [edx+eax*1+0x541b1dc4],0x5
  41bdee:	jle    0x41bdf8
  41bdf0:	xchg   BYTE PTR [esi-0x6c],cl
  41bdf3:	inc    ecx
  41bdf4:	mov    esp,ecx
  41bdf6:	xchg   edi,eax
  41bdf7:	and    BYTE PTR [eax+ebx*8+0xe432ce8],ch
  41bdfe:	mov    ds:0xfaada06b,al
  41be03:	aam    0x5c
  41be05:	jnp    0x41bdac
  41be07:	scas   eax,DWORD PTR es:[edi]
  41be08:	or     BYTE PTR [edx+0x21676e],ah
  41be0e:	loop   0x41be07
  41be10:	push   ss
  41be11:	(bad)
  41be14:	neg    eax
  41be16:	fwait
  41be17:	repnz dec edx
  41be19:	in     eax,0xa2
  41be1b:	xchg   edx,eax
  41be1c:	cdq    
  41be1d:	fsub   DWORD PTR [edx]
  41be1f:	and    eax,0xfa1b0187
  41be24:	imul   eax,eax,0x59
  41be27:	cld    
  41be28:	pusha  
  41be29:	dec    edx
  41be2a:	pop    ds
  41be2b:	ins    BYTE PTR es:[edi],dx
  41be2c:	sbb    al,0x3e
  41be2e:	fcmovnb st,st(7)
  41be30:	sbb    ebx,DWORD PTR [ebx]
  41be32:	ret    0xe815
  41be35:	dec    eax
  41be36:	jne    0x41be73
  41be38:	and    al,dh
  41be3a:	icebp  
  41be3b:	loope  0x41be90
  41be3d:	nop
  41be3e:	cmp    BYTE PTR [ebp-0x2773624],dh
  41be44:	pop    es
  41be45:	xchg   esi,eax
  41be46:	fistp  WORD PTR [ebx]
  41be48:	repnz mov ebx,0xe1f0b61b
  41be4e:	lods   al,BYTE PTR es:[esi]
  41be50:	cmp    eax,0xd53c1108
  41be55:	int    0x5e
  41be57:	jnp    0x41be1f
  41be59:	push   ecx
  41be5a:	(bad)  
  41be5c:	dec    ecx
  41be5d:	dec    eax
  41be5e:	iret   
  41be5f:	fnstsw WORD PTR [ebx]
  41be61:	adc    eax,0x6a8d7649
  41be66:	cmp    BYTE PTR [esi],bh
  41be68:	mov    DWORD PTR [ebx+0x3eba4468],edi
  41be6e:	out    0xe8,eax
  41be70:	es ins BYTE PTR es:[edi],dx
  41be72:	pop    ebx
  41be73:	data16 mov ch,0x6c
  41be76:	push   esi
  41be77:	cmp    DWORD PTR [eax-0x37],0x7e6d392e
  41be7e:	aad    0xce
  41be80:	or     dh,0x94
  41be83:	js     0x41be82
  41be85:	push   ebx
  41be86:	xchg   DWORD PTR [eax+0xf5e9e86],esi
  41be8c:	add    al,0xc0
  41be8e:	pop    ecx
  41be8f:	jmp    0x41bec8
  41be91:	xor    edi,DWORD PTR [esi]
  41be93:	jmp    0xa497:0xebdfc962
  41be9a:	arpl   cx,si
  41be9c:	dec    edx
  41be9d:	fstp   QWORD PTR [eax+0x3c]
  41bea0:	mov    bl,BYTE PTR [edx+ecx*1+0x1a]
  41bea4:	push   eax
  41bea5:	mov    ds:0x338d107c,al
  41beaa:	popf   
  41beab:	sub    DWORD PTR [eax],ebx
  41bead:	and    edx,DWORD PTR [ebp-0xb]
  41beb0:	mov    esp,ebp
  41beb2:	xor    al,0x60
  41beb4:	push   0x27
  41beb6:	mul    bl
  41beb8:	sbb    DWORD PTR [ecx],eax
  41beba:	inc    edi
  41bebb:	xchg   ebp,eax
  41bebc:	pushf  
  41bebd:	in     al,dx
  41bebe:	mov    ch,0x11
  41bec0:	mov    ds:0x9332312d,eax
  41bec5:	sbb    edi,DWORD PTR [ecx-0x540413b0]
  41becb:	into   
  41becc:	add    DWORD PTR [eax-0x19],edx
  41becf:	aaa    
  41bed0:	jnp    0x41beec
  41bed2:	sbb    ecx,DWORD PTR [esi-0x2787f4fd]
  41bed8:	test   BYTE PTR [ebx],bl
  41beda:	push   edx
  41bedb:	out    0x3c,eax
  41bedd:	pop    esi
  41bede:	and    BYTE PTR [edi+0x286e0bb3],ch
  41bee4:	aas    
  41bee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee6:	dec    ecx
  41bee7:	cmp    DWORD PTR [edi],ecx
  41bee9:	out    dx,eax
  41beea:	icebp  
  41beeb:	cmp    al,0xf1
  41beed:	jno    0x41beea
  41beef:	jmp    0xdc89:0x60e2c88e
  41bef6:	or     al,0xeb
  41bef8:	jle    0x41bf44
  41befa:	push   ss
  41befb:	mov    edi,0xa2cd312b
  41bf00:	cmp    eax,0x40110a75
  41bf05:	mul    BYTE PTR [ecx-0x4e]
  41bf08:	retf   
  41bf09:	adc    BYTE PTR [ebx+eiz*2-0x5f],0x15
  41bf0e:	test   al,0x2e
  41bf10:	jnp    0x41be94
  41bf12:	xor    al,0x5d
  41bf14:	(bad)  
  41bf16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf17:	das    
  41bf18:	int    0x64
  41bf1a:	das    
  41bf1b:	push   ds
  41bf1c:	dec    ebx
  41bf1d:	fild   WORD PTR ds:0xc09e563
  41bf23:	in     al,0x36
  41bf25:	or     al,0xaa
  41bf27:	sahf   
  41bf28:	into   
  41bf29:	mov    esp,0x65b93739
  41bf2e:	sbb    cl,BYTE PTR [esp+ebx*8-0x5d]
  41bf32:	int3   
  41bf33:	xchg   esi,eax
  41bf34:	sbb    DWORD PTR [ecx+0x2e2ba219],0xb493a23a
  41bf3e:	adc    al,0x14
  41bf40:	loop   0x41bf8e
  41bf42:	js     0x41beff
  41bf44:	(bad)
  41bf48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf49:	ds aas 
  41bf4b:	xor    eax,0x3b4f451
  41bf50:	or     BYTE PTR [edi+0x7d73b375],0x75
  41bf57:	mov    al,ds:0xc3eeb00d
  41bf5c:	add    BYTE PTR [ebx-0xa679b81],bl
  41bf62:	stos   BYTE PTR es:[edi],al
  41bf63:	popa   
  41bf64:	jae    0x41bf45
  41bf66:	cwde   
  41bf67:	imul   esp,eax,0x6e
  41bf6a:	pop    es
  41bf6b:	into   
  41bf6c:	rcl    ecx,cl
  41bf6e:	xor    edx,DWORD PTR [edi-0x7cf45567]
  41bf74:	loopne 0x41bf30
  41bf76:	inc    esp
  41bf77:	idiv   esi
  41bf79:	mov    bl,0x8d
  41bf7b:	sar    BYTE PTR [eax-0x3b],1
  41bf7e:	cmp    esp,eax
  41bf80:	mov    BYTE PTR [ecx],cl
  41bf82:	ret    
  41bf83:	je     0x41bf90
  41bf85:	mov    ebx,0x5cda7713
  41bf8a:	test   al,0x63
  41bf8c:	repz cs faddp st(3),st
  41bf90:	jmp    0x8063:0xb70ec920
  41bf97:	add    eax,0xff01115f
  41bf9c:	fadd   QWORD PTR [edx+0x3a8192b6]
  41bfa2:	and    al,BYTE PTR [eax+ebx*2+0xf06a82b]
  41bfa9:	push   ebx
  41bfaa:	in     eax,0xd9
  41bfac:	add    edx,0x7e
  41bfaf:	iret   
  41bfb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfb1:	mov    dl,0xfb
  41bfb3:	mov    eax,0x2fc96b79
  41bfb8:	mov    dh,0x41
  41bfba:	(bad)  
  41bfbb:	std    
  41bfbc:	int    0xe1
  41bfbe:	test   BYTE PTR [edx],cl
  41bfc0:	fld    TBYTE PTR [ecx+0x20]
  41bfc3:	fwait
  41bfc4:	xor    BYTE PTR [eax+0x6c],ch
  41bfc7:	test   bl,0xd
  41bfca:	pop    edi
  41bfcb:	sub    bh,al
  41bfcd:	(bad)  
  41bfce:	fcmovnbe st,st(7)
  41bfd0:	mov    ds:0x670d0bee,al
  41bfd5:	jns    0x41bff7
  41bfd7:	loopne 0x41c009
  41bfd9:	sbb    DWORD PTR [esi+0xcae8ab5],edi
  41bfdf:	imul   edx,DWORD PTR [ebx-0x120a0b22],0x9b92b652
  41bfe9:	and    bh,BYTE PTR [ebx-0x214b099d]
  41bfef:	push   eax
  41bff0:	into   
  41bff1:	scas   eax,DWORD PTR es:[edi]
  41bff2:	iret   
  41bff3:	sub    BYTE PTR [eax-0xa],ah
  41bff6:	in     al,dx
  41bff7:	mov    bh,BYTE PTR [ebx-0x452e8920]
  41bffd:	dec    ecx
  41bffe:	xor    BYTE PTR [ecx*8-0x99468c1],0xf0
  41c006:	xor    BYTE PTR [edx+0x5c3ddb],cl
  41c00c:	pop    ecx
  41c00d:	out    dx,al
  41c00e:	adc    DWORD PTR [edi-0xd],edx
  41c011:	repnz into 
  41c013:	mov    edx,0x66219d66
  41c018:	mov    eax,0x438960b2
  41c01d:	pop    ecx
  41c01e:	lods   al,BYTE PTR ds:[esi]
  41c01f:	imul   edx,esp,0x1d
  41c022:	sub    eax,0xc82fe399
  41c027:	out    0x22,al
  41c029:	in     eax,0xdd
  41c02b:	mov    edx,0x8c30a19d
  41c030:	lock das 
  41c032:	sub    DWORD PTR ds:0x582bf186,0xffffffc5
  41c039:	xchg   DWORD PTR [edx],ebp
  41c03b:	call   0x2f96:0xf3790cdb
  41c042:	xchg   ebx,eax
  41c043:	out    0x22,al
  41c045:	push   0xe0f1a2f
  41c04a:	das    
  41c04b:	cmp    bh,BYTE PTR [eax+eiz*4-0x4b]
  41c04f:	sub    eax,0xb602215a
  41c054:	ins    DWORD PTR es:[edi],dx
  41c055:	mov    bh,0x2e
  41c057:	iret   
  41c058:	inc    ecx
  41c059:	sub    cl,BYTE PTR [ecx]
  41c05b:	mov    cl,dh
  41c05d:	push   ebx
  41c05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c05f:	outs   dx,BYTE PTR ds:[esi]
  41c060:	push   ebx
  41c061:	bound  edi,QWORD PTR ds:0x7dcf3f43
  41c067:	jl     0x41c05d
  41c069:	push   cs
  41c06a:	dec    edx
  41c06b:	bound  esp,QWORD PTR [esp+ebp*2+0x18]
  41c06f:	jbe    0x41c021
  41c071:	xor    BYTE PTR [ecx+0x3b],dl
  41c074:	(bad)  
  41c075:	jne    0x41c020
  41c077:	mov    WORD PTR [edi],gs
  41c079:	adc    BYTE PTR [eax],ch
  41c07b:	sub    BYTE PTR [eax+0x3c],0x33
  41c07f:	jb     0x41c065
  41c081:	ds jb  0x41c0bb
  41c084:	iret   
  41c085:	fs cli 
  41c087:	loopne 0x41c077
  41c089:	xchg   esi,eax
  41c08a:	(bad)  
  41c08b:	xchg   ebp,eax
  41c08c:	(bad)  
  41c08d:	in     eax,dx
  41c08e:	(bad)  
  41c08f:	pop    ds
  41c090:	ja     0x41c0bf
  41c092:	xchg   edx,eax
  41c093:	sbb    ah,BYTE PTR [ecx+0x68]
  41c096:	ja     0x41c06f
  41c098:	daa    
  41c099:	xchg   DWORD PTR [ecx+0x34ef1303],edi
  41c09f:	(bad)  
  41c0a0:	in     eax,0x87
  41c0a2:	icebp  
  41c0a3:	inc    ebp
  41c0a4:	add    al,0x54
  41c0a6:	lods   eax,DWORD PTR ds:[esi]
  41c0a7:	mov    esp,0x3f784954
  41c0ac:	and    DWORD PTR [eax],esi
  41c0ae:	add    eax,0x6a0764c1
  41c0b3:	xchg   BYTE PTR [eax],al
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1+0xe]
  41c0ce:	dec    ebp
  41c0cf:	push   esp
  41c0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d1:	push   0xab00013d
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [ebp+ecx*4-0x7c],bh
  41c0dc:	test   eax,0xa371d87c
  41c0e1:	push   eax
  41c0e2:	adc    edx,DWORD PTR [edx+0x56]
  41c0e5:	and    DWORD PTR [ebx],0xffffff87
  41c0e8:	les    esi,FWORD PTR [eax]
  41c0ea:	ror    DWORD PTR [edi-0x4f],cl
  41c0ed:	mov    ebx,0x88bf1a04
  41c0f2:	loopne 0x41c12c
  41c0f4:	sbb    BYTE PTR [ebx+0x5b],ch
  41c0f7:	icebp  
  41c0f8:	push   es
  41c0f9:	jge    0x41c0cd
  41c0fb:	jno    0x41c0cf
  41c0fd:	adc    DWORD PTR [edx+ebp*1+0x417d6668],eax
  41c104:	and    eax,0xb8725232
  41c109:	retf   
  41c10a:	push   esi
  41c10b:	cmp    al,0x36
  41c10d:	call   0xd8a2:0x24a42ca2
  41c114:	(bad)  [esi-0x41da00de]
  41c11a:	into   
  41c11b:	fs jbe 0x41c10f
  41c11e:	mov    WORD PTR [eax-0x56bd680b],ds
  41c124:	cmc    
  41c125:	repnz inc esi
  41c127:	pop    es
  41c128:	cwde   
  41c129:	push   0xffffff95
  41c12b:	sub    bh,BYTE PTR [edx]
  41c12d:	gs shl bh,0x89
  41c131:	pushf  
  41c132:	je     0x41c172
  41c134:	(bad)  
  41c136:	rcr    BYTE PTR [ebp+0x6036a8ae],cl
  41c13c:	icebp  
  41c13d:	xchg   esi,eax
  41c13e:	bound  ebx,QWORD PTR [eax]
  41c140:	hlt    
  41c141:	pop    eax
  41c142:	dec    eax
  41c143:	jp     0x41c16e
  41c145:	sub    al,0xd7
  41c147:	xor    bl,BYTE PTR [ebx+ebx*4+0x5783c91d]
  41c14e:	adc    edi,ecx
  41c150:	push   esp
  41c151:	test   DWORD PTR ss:[ebp-0x7a00ef58],eax
  41c158:	mov    al,0x92
  41c15a:	or     BYTE PTR [ebx+ecx*4],dh
  41c15d:	mov    edi,0xad77793e
  41c162:	adc    eax,0x43027b78
  41c167:	add    al,0x78
  41c169:	pop    esi
  41c16a:	popa   
  41c16b:	mov    ds:0x8231df82,eax
  41c170:	aad    0x2b
  41c172:	pop    esi
  41c173:	mov    al,ds:0x6c9258cc
  41c178:	fs ins BYTE PTR es:[edi],dx
  41c17a:	cli    
  41c17b:	popa   
  41c17c:	cmp    esp,ecx
  41c17e:	dec    ebp
  41c17f:	ja     0x41c160
  41c181:	call   0xd33c:0x2cd38f76
  41c188:	(bad)  
  41c18a:	pop    esp
  41c18b:	jbe    0x41c150
  41c18d:	adc    ebp,0x7b
  41c190:	pop    ebx
  41c191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c192:	fild   DWORD PTR [ebx+0x6a]
  41c195:	push   cs
  41c196:	xlat   BYTE PTR ds:[ebx]
  41c197:	stc    
  41c198:	dec    esi
  41c199:	stos   BYTE PTR es:[edi],al
  41c19a:	xor    dl,bh
  41c19c:	fsubr  st,st(0)
  41c19e:	push   esp
  41c19f:	push   esi
  41c1a0:	inc    eax
  41c1a1:	jae    0x41c1c3
  41c1a3:	jl     0x41c1c6
  41c1a5:	ss scas al,BYTE PTR es:[edi]
  41c1a7:	imul   ebx,edx,0x76
  41c1aa:	or     ecx,DWORD PTR [eax+0x66]
  41c1ad:	rcl    dl,1
  41c1af:	cmp    DWORD PTR [edx],edi
  41c1b1:	out    0x77,eax
  41c1b3:	imul   ecx,DWORD PTR [edi-0x528af93a],0xc62913e7
  41c1bd:	in     al,0x4d
  41c1bf:	aas    
  41c1c0:	repnz test BYTE PTR [esi-0x6deb07a4],cl
  41c1c7:	sbb    esp,DWORD PTR [edx+0x648a5a43]
  41c1cd:	test   BYTE PTR [esi+esi*4-0x10],cl
  41c1d1:	pop    ebx
  41c1d2:	fsub   DWORD PTR [esp+eiz*8-0x1b]
  41c1d6:	lahf   
  41c1d7:	scas   eax,DWORD PTR es:[edi]
  41c1d8:	jg     0x41c1e0
  41c1da:	scas   eax,DWORD PTR es:[edi]
  41c1db:	push   edx
  41c1dc:	popf   
  41c1dd:	cmp    ebp,DWORD PTR [ecx-0x13ac6c02]
  41c1e3:	pop    edx
  41c1e4:	mov    ds:0x93b251b4,eax
  41c1e9:	bound  esp,QWORD PTR [edx-0x54]
  41c1ec:	or     esi,DWORD PTR [edi+eiz*8]
  41c1ef:	ins    DWORD PTR es:[edi],dx
  41c1f0:	aam    0x64
  41c1f2:	xor    ebp,DWORD PTR [edi+0x22]
  41c1f5:	loopne 0x41c1d1
  41c1f7:	xor    ch,ah
  41c1f9:	inc    edi
  41c1fa:	cmp    dh,BYTE PTR [ecx+0x67]
  41c1fd:	loope  0x41c243
  41c1ff:	cmp    al,0x7
  41c201:	scas   eax,DWORD PTR es:[edi]
  41c202:	sub    DWORD PTR [ebx],ecx
  41c204:	test   BYTE PTR [edi+0x43],ah
  41c207:	daa    
  41c208:	or     DWORD PTR [ebp-0x14c1acfd],esp
  41c20e:	or     ch,BYTE PTR [edi]
  41c210:	shl    BYTE PTR [eax-0x4cc866e9],0xca
  41c217:	pushf  
  41c218:	cmp    dh,dh
  41c21a:	ja     0x41c259
  41c21c:	ja     0x41c1f8
  41c21e:	xchg   esp,eax
  41c21f:	or     esp,ecx
  41c221:	cmp    al,0xb6
  41c223:	add    ch,BYTE PTR [ecx+eax*4]
  41c226:	xchg   ebx,eax
  41c227:	dec    ebx
  41c228:	push   0xfffffff6
  41c22a:	cmp    BYTE PTR [ebx],bl
  41c22c:	mov    esp,0xd0f61336
  41c231:	(bad)
  41c235:	test   DWORD PTR [ecx+0x4f10caa1],edx
  41c23b:	ins    DWORD PTR es:[edi],dx
  41c23c:	push   eax
  41c23d:	dec    edx
  41c23e:	add    al,0xa2
  41c240:	pop    ds
  41c241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c242:	jns    0x41c28b
  41c244:	mov    eax,0x72e50d8b
  41c249:	pusha  
  41c24a:	or     ecx,eax
  41c24c:	call   0xabe2:0xa29db717
  41c253:	loopne 0x41c257
  41c255:	jp     0x41c1d8
  41c257:	mov    ebx,0x912aac4
  41c25c:	add    DWORD PTR [ecx],ebx
  41c25e:	sbb    BYTE PTR [ebp-0x7c],ch
  41c261:	sbb    DWORD PTR [eax-0x779c0db6],edi
  41c267:	push   es
  41c268:	push   edi
  41c269:	xor    eax,0xf04c92a4
  41c26e:	mov    edx,0x5b72789a
  41c273:	outs   dx,DWORD PTR ds:[esi]
  41c274:	(bad)  
  41c275:	cmp    BYTE PTR [edx],al
  41c277:	out    0x6e,al
  41c279:	sbb    dl,BYTE PTR [ecx]
  41c27b:	inc    eax
  41c27c:	or     bh,0xce
  41c27f:	xchg   edx,eax
  41c280:	ror    BYTE PTR [edx+0x13],1
  41c283:	dec    ebx
  41c284:	mov    ecx,0xcd79f19d
  41c289:	shl    DWORD PTR [ebp*8-0x362b7c32],cl
  41c290:	hlt    
  41c291:	iret   
  41c292:	dec    edi
  41c293:	call   0x52eb:0xe79e39a0
  41c29a:	and    BYTE PTR [ecx-0x43],ah
  41c29d:	sbb    DWORD PTR [esp+eax*8+0x47],eax
  41c2a1:	mov    dh,0x89
  41c2a3:	push   ds
  41c2a4:	mov    dh,0xb3
  41c2a6:	and    DWORD PTR [edi+0x3b],esp
  41c2a9:	lock ds inc edi
  41c2ac:	sar    BYTE PTR [ebx+0x7e],cl
  41c2af:	stc    
  41c2b0:	pop    edi
  41c2b2:	bound  ebx,QWORD PTR [ebp-0x3689a0f8]
  41c2b8:	dec    edi
  41c2b9:	xchg   esp,eax
  41c2ba:	push   ebx
  41c2bb:	mov    ds:0x2c415c0,al
  41c2c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c1:	adc    eax,0xfe7d2532
  41c2c6:	sbb    al,bh
  41c2c8:	push   esi
  41c2c9:	lock dec edi
  41c2cb:	mov    bl,ah
  41c2cd:	call   0xf665:0x8767d565
  41c2d4:	and    DWORD PTR ds:0x8bda3951,0xffffffe2
  41c2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2dc:	lar    eax,WORD PTR [edx+0x6c1dbdc0]
  41c2e3:	in     eax,dx
  41c2e4:	or     eax,0xf030e820
  41c2e9:	call   0x8237:0xf2c54eb2
  41c2f0:	stos   BYTE PTR es:[edi],al
  41c2f1:	cmp    DWORD PTR [edi-0x30f8fea7],esp
  41c2f7:	test   al,0x83
  41c2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fa:	test   al,0x39
  41c2fc:	mov    cl,0xc3
  41c2fe:	pop    ebx
  41c2ff:	fwait
  41c300:	xor    BYTE PTR [esi],bl
  41c302:	adc    al,0x59
  41c304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c305:	jl     0x41c295
  41c307:	add    DWORD PTR [ecx-0x7f60cb96],ebx
  41c30d:	and    ebx,DWORD PTR [ebx+esi*1+0x3c]
  41c311:	xor    dl,BYTE PTR [esi]
  41c313:	push   eax
  41c314:	and    dh,BYTE PTR [ebx-0x28]
  41c317:	cmp    eax,DWORD PTR [eax+eax*4-0x7f6884f]
  41c31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c31f:	xchg   ebx,eax
  41c320:	push   ecx
  41c321:	add    edx,edx
  41c323:	and    ebp,edi
  41c325:	sub    DWORD PTR [edx+0x3d543b1c],ecx
  41c32b:	xor    BYTE PTR [esi+0x2b56a5ad],al
  41c331:	aad    0x1e
  41c333:	mov    eax,ds:0x1a1359d3
  41c338:	adc    eax,0x43228109
  41c33d:	dec    edi
  41c33e:	out    dx,eax
  41c33f:	mov    ah,0xe9
  41c341:	cld    
  41c342:	outs   dx,DWORD PTR ds:[esi]
  41c343:	adc    eax,0x2905d211
  41c348:	cmp    edx,DWORD PTR [eax+ebx*2+0x10]
  41c34c:	int3   
  41c34d:	inc    esi
  41c34e:	out    dx,eax
  41c34f:	test   DWORD PTR [ecx],ebx
  41c351:	cmp    BYTE PTR [edx],al
  41c353:	cwde   
  41c354:	push   edx
  41c355:	cs pusha 
  41c357:	cmp    DWORD PTR [ecx+0x2c],ebx
  41c35a:	call   0x137f:0x90ed0a5e
  41c361:	repnz fsub DWORD PTR [edi+0xd988756]
  41c368:	and    eax,0xbf93f6fd
  41c36d:	mov    WORD PTR [edx+0x3801302d],fs
  41c373:	dec    esi
  41c374:	rcl    BYTE PTR [eax],cl
  41c376:	cmp    DWORD PTR [esi],edi
  41c378:	mov    dl,0xa
  41c37a:	lods   eax,DWORD PTR ds:[esi]
  41c37b:	ja     0x41c37e
  41c37d:	mov    esi,0xf5a17ebc
  41c382:	jmp    FWORD PTR [edx+ebx*1-0x32]
  41c386:	or     edi,DWORD PTR [bp-0x5512]
  41c38b:	add    DWORD PTR [esi],edx
  41c38d:	mov    sp,0x1cc6
  41c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c392:	(bad)  
  41c393:	(bad)  
  41c394:	std    
  41c395:	adc    DWORD PTR [edx],0xffffff80
  41c398:	jle    0x41c3c8
  41c39a:	adc    eax,0xfc48000b
  41c39f:	cmc    
  41c3a0:	push   edx
  41c3a1:	test   DWORD PTR fs:[edx],0xcd50535
  41c3a8:	xchg   esp,eax
  41c3a9:	test   BYTE PTR [edx],dh
  41c3ab:	or     al,0x43
  41c3ad:	shl    BYTE PTR [ebx-0x2],0xe6
  41c3b1:	test   eax,0x42bed30a
  41c3b6:	in     al,dx
  41c3b7:	ins    BYTE PTR es:[edi],dx
  41c3b8:	test   BYTE PTR [ecx-0x4f9ea473],0xaf
  41c3bf:	add    BYTE PTR ds:0x2dad0a05,bh
  41c3c5:	lahf   
  41c3c6:	dec    eax
  41c3c7:	call   0xd613:0x4852d9aa
  41c3ce:	shl    BYTE PTR [ecx+ecx*4-0x1a4b1e9a],cl
  41c3d5:	out    0xd9,al
  41c3d7:	or     ecx,DWORD PTR [edx-0x28]
  41c3da:	adc    al,0xfd
  41c3dc:	inc    DWORD PTR [ebx+0x2ff1e5f2]
  41c3e2:	adc    bh,cl
  41c3e4:	mov    ah,0xef
  41c3e6:	mov    esp,DWORD PTR [ebx]
  41c3e8:	lds    ecx,FWORD PTR [esp+esi*8]
  41c3eb:	sub    DWORD PTR [esi-0x24],esi
  41c3ee:	ret    
  41c3ef:	and    DWORD PTR [eax-0xd],eax
  41c3f2:	jp     0x41c460
  41c3f4:	xchg   edi,eax
  41c3f5:	mov    bl,0xa8
  41c3f7:	std    
  41c3f8:	mov    ch,0xc
  41c3fa:	cwde   
  41c3fb:	add    DWORD PTR [ecx],0xb7720a9c
  41c401:	xchg   esi,eax
  41c402:	jb     0x41c3b2
  41c404:	jno    0x41c42e
  41c406:	mov    ebp,0x903b8ee5
  41c40b:	xchg   bl,ah
  41c40d:	and    ch,BYTE PTR [ebx+0xaddada5]
  41c413:	ja     0x41c3de
  41c415:	mov    eax,0xc663f15
  41c41a:	int    0xc4
  41c41c:	popf   
  41c41d:	jg     0x41c498
  41c41f:	xchg   edi,eax
  41c420:	adc    eax,0xefb9c5ad
  41c425:	or     ecx,edx
  41c427:	sub    eax,0xc6b2785d
  41c42c:	pop    ss
  41c42d:	jmp    0x6550:0xace58892
  41c434:	shr    BYTE PTR [edx-0x55],0x4b
  41c438:	or     DWORD PTR [edi-0xce289aa],ebp
  41c43e:	pop    ebp
  41c43f:	mov    ah,0xb7
  41c441:	jne    0x41c432
  41c443:	std    
  41c444:	retf   0xd9e7
  41c447:	bound  edi,QWORD PTR [ebx-0x78]
  41c44a:	add    dl,bl
  41c44c:	pop    ebx
  41c44d:	sub    ecx,esi
  41c44f:	addr16 jmp 0x41c461
  41c452:	add    ebp,DWORD PTR [ebp-0x11]
  41c455:	or     eax,0x27fc8535
  41c45a:	dec    edi
  41c45b:	ret    
  41c45c:	inc    ecx
  41c45d:	add    BYTE PTR [ebx-0x42683f74],0x8f
  41c464:	xchg   BYTE PTR [ebx],dl
  41c466:	sub    esi,DWORD PTR [ebx]
  41c468:	mov    edx,0x40c8c5fc
  41c46d:	outs   dx,DWORD PTR ds:[esi]
  41c46e:	push   esp
  41c46f:	cwde   
  41c470:	push   esp
  41c471:	outs   dx,DWORD PTR ds:[esi]
  41c472:	jb     0x41c4e5
  41c474:	popa   
  41c475:	mov    edx,0x4805029e
  41c47a:	stc    
  41c47b:	lock mov ds:0xc90e7a5d,eax
  41c481:	or     ecx,DWORD PTR [ebx]
  41c483:	and    DWORD PTR [eax],eax
	...
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0x3b326b32
  41c4a0:	jne    0x41c4b5
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	stos   DWORD PTR es:[edi],eax
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    BYTE PTR [esi+0x57],bl
  41c4ab:	xor    DWORD PTR [eax-0x683bca04],ebx
  41c4b1:	fisubr WORD PTR [ecx-0x39]
  41c4b4:	xchg   DWORD PTR [ebx+ebx*1],esi
  41c4b7:	stc    
  41c4b8:	cmp    BYTE PTR [edx+0x28f8d87a],bh
  41c4be:	add    BYTE PTR [edi],al
  41c4c0:	jno    0x41c501
  41c4c2:	inc    ebp
  41c4c3:	imul   ebx,DWORD PTR [edi],0xb8907317
  41c4c9:	dec    ebp
  41c4ca:	or     dh,bl
  41c4cc:	xchg   ebx,eax
  41c4cd:	add    al,0xf
  41c4cf:	cs jmp 0x41c4f2
  41c4d2:	ss mov esp,0xa816070f
  41c4d8:	or     eax,0x4ba11a00
  41c4dd:	ret    
  41c4de:	xchg   ebx,eax
  41c4df:	inc    ecx
  41c4e0:	test   BYTE PTR [ebx+0x3e17afc2],0x55
  41c4e7:	push   ebx
  41c4e8:	imul   BYTE PTR [edi+0x4b]
  41c4eb:	fisttp DWORD PTR [edi-0x7]
  41c4ee:	mov    ah,0xb1
  41c4f0:	test   DWORD PTR [esi+ebp*8+0x361dae71],ebp
  41c4f7:	in     eax,0x60
  41c4f9:	push   eax
  41c4fa:	js     0x41c4f6
  41c4fc:	lds    esi,FWORD PTR [esp+ebp*8+0x4d]
  41c500:	jb     0x41c54f
  41c502:	pop    edi
  41c503:	fnstenv [ebp-0x27]
  41c506:	shl    BYTE PTR [ebx+eiz*2],0x67
  41c50a:	mov    al,ds:0x662c50fb
  41c50f:	mov    ch,0xb9
  41c511:	jbe    0x41c548
  41c513:	add    esi,DWORD PTR [ecx-0x3f675158]
  41c519:	sub    al,0xee
  41c51b:	mov    ch,0x4f
  41c51d:	scas   al,BYTE PTR es:[edi]
  41c51e:	mov    ds:0xf43e9cd4,eax
  41c523:	mov    ch,0xc5
  41c525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c526:	and    al,0xc0
  41c528:	jno    0x41c538
  41c52a:	inc    edi
  41c52b:	add    BYTE PTR [eax],dh
  41c52d:	push   ebp
  41c52e:	out    0x25,eax
  41c530:	push   ecx
  41c531:	lods   al,BYTE PTR ds:[esi]
  41c532:	push   ecx
  41c533:	lods   eax,DWORD PTR ds:[esi]
  41c534:	bound  ebx,QWORD PTR [eax-0x40]
  41c537:	inc    eax
  41c538:	and    BYTE PTR [esi-0x43dcd857],dh
  41c53e:	pop    edi
  41c53f:	cdq    
  41c540:	aas    
  41c541:	loop   0x41c4fb
  41c543:	sbb    bl,bh
  41c545:	js     0x41c4e8
  41c547:	fidiv  WORD PTR ds:0x60d4ffa2
  41c54d:	mov    eax,ds:0xb68dea8f
  41c552:	shufps xmm6,XMMWORD PTR [esp+esi*4-0x3b],0x8c
  41c558:	sub    esi,edi
  41c55a:	cld    
  41c55b:	push   ebp
  41c55c:	xchg   edx,eax
  41c55d:	xor    al,0x3b
  41c55f:	out    dx,al
  41c560:	sub    al,0xf2
  41c562:	mov    edi,0x97c077b3
  41c567:	loopne 0x41c514
  41c569:	cwde   
  41c56a:	jb     0x41c5a9
  41c56c:	jmp    0x4e22:0x6ce52887
  41c573:	in     eax,dx
  41c574:	retf   
  41c575:	sub    eax,0xf935e046
  41c57a:	imul   ecx,DWORD PTR [ecx-0x7f027caf],0xa534af13
  41c584:	jmp    FWORD PTR [eax]
  41c586:	sbb    DWORD PTR [edi-0x53d673a6],edx
  41c58c:	mov    cl,0x32
  41c58e:	xor    eax,0x70584b6d
  41c593:	aad    0x5f
  41c595:	repnz popf 
  41c597:	mov    DWORD PTR [edi-0x68],edx
  41c59a:	lods   al,BYTE PTR ds:[esi]
  41c59b:	cli    
  41c59c:	adc    edi,DWORD PTR [edx-0x6d8f3b94]
  41c5a2:	nop
  41c5a3:	xor    DWORD PTR [ebx+0x25],edi
  41c5a6:	cmp    BYTE PTR [esi-0x59c0d4bc],ch
  41c5ac:	cmp    dl,bh
  41c5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5af:	les    ebx,FWORD PTR [ebx]
  41c5b1:	(bad)
  41c5b5:	push   es
  41c5b6:	es call 0xf96a8452
  41c5bc:	scas   al,BYTE PTR es:[edi]
  41c5bd:	in     al,dx
  41c5be:	(bad)  
  41c5bf:	jge    0x41c57a
  41c5c1:	xor    eax,0x33261735
  41c5c6:	ror    BYTE PTR [edi],0x9b
  41c5c9:	add    esi,DWORD PTR [edx+ebx*4-0x2391592]
  41c5d0:	push   esp
  41c5d1:	xor    ebp,DWORD PTR [ebx-0x395babc]
  41c5d7:	sub    DWORD PTR [esi],ecx
  41c5d9:	pop    eax
  41c5da:	mov    bh,0x7d
  41c5dc:	adc    esi,eax
  41c5de:	pop    esp
  41c5df:	retf   0x229e
  41c5e2:	cs inc edi
  41c5e4:	addr16 push ds
  41c5e6:	add    ebx,DWORD PTR [ecx-0x53a717e1]
  41c5ec:	(bad)  
  41c5ed:	jmp    FWORD PTR [edi-0x1a]
  41c5f0:	stc    
  41c5f1:	mov    edi,0xf33c5122
  41c5f6:	mov    ebx,DWORD PTR [esi]
  41c5f8:	push   edi
  41c5f9:	out    0x42,al
  41c5fb:	pop    esp
  41c5fc:	repz push edx
  41c5fe:	aaa    
  41c5ff:	mov    edi,DWORD PTR [eax]
  41c601:	aad    0xae
  41c603:	push   0x44
  41c605:	into   
  41c606:	xlat   BYTE PTR ds:[ebx]
  41c607:	and    esp,DWORD PTR [esi-0x32b0a477]
  41c60d:	mov    ecx,0xd2b8b691
  41c612:	aad    0x5b
  41c614:	scas   al,BYTE PTR es:[edi]
  41c615:	dec    ebp
  41c616:	retf   0xc36b
  41c619:	gs out 0xfd,al
  41c61c:	iret   
  41c61d:	je     0x41c60a
  41c61f:	iret   
  41c620:	mov    DWORD PTR [edi+eiz*1],edx
  41c623:	fldcw  WORD PTR [eax-0x56]
  41c626:	fist   DWORD PTR [ecx]
  41c628:	add    edi,esp
  41c62a:	dec    eax
  41c62b:	xchg   esp,eax
  41c62c:	retf   
  41c62d:	push   0xb8572b12
  41c632:	pop    ebp
  41c633:	scas   al,BYTE PTR es:[edi]
  41c634:	enter  0xb2b8,0x5
  41c638:	loope  0x41c695
  41c63a:	push   0xe2a8b0a1
  41c63f:	popa   
  41c640:	js     0x41c6bd
  41c642:	ins    DWORD PTR es:[edi],dx
  41c643:	dec    esi
  41c644:	push   eax
  41c645:	xor    edx,0xefe61cca
  41c64b:	push   edx
  41c64c:	cmp    BYTE PTR [ebp+0x6b644623],ch
  41c652:	fwait
  41c653:	fwait
  41c654:	jmp    0x41c6aa
  41c656:	std    
  41c657:	push   ecx
  41c658:	popa   
  41c659:	mov    eax,ds:0x9e02972e
  41c65e:	out    dx,eax
  41c65f:	sbb    BYTE PTR [ebp-0x6d796fc5],bl
  41c665:	popf   
  41c666:	mulps  xmm2,XMMWORD PTR es:[eax]
  41c66a:	std    
  41c66b:	aas    
  41c66c:	inc    edi
  41c66d:	test   DWORD PTR [ecx+esi*2],ebp
  41c670:	shl    al,1
  41c672:	nop
  41c673:	add    BYTE PTR [edi+0x31c7f186],bh
  41c679:	mov    ebx,DWORD PTR [ecx]
  41c67b:	push   ebp
  41c67c:	dec    eax
  41c67d:	jle    0x41c6f4
  41c67f:	sub    ch,ah
  41c681:	xor    bh,BYTE PTR [edx]
  41c683:	dec    edi
  41c684:	ja     0x41c6d4
  41c686:	sub    cl,bl
  41c688:	pop    ss
  41c689:	aam    0x1c
  41c68b:	bound  ebp,QWORD PTR [esi+0x16737913]
  41c691:	ja     0x41c6b6
  41c693:	out    0x4f,al
  41c695:	test   DWORD PTR [ebp-0x14b6ed52],ebp
  41c69b:	out    0x21,eax
  41c69d:	ins    DWORD PTR es:[edi],dx
  41c69e:	sub    eax,0x66100990
  41c6a3:	adc    BYTE PTR [edi+0x7d7dfb17],dh
  41c6a9:	call   0x1ac972b9
  41c6ae:	dec    eax
  41c6af:	jecxz  0x41c687
  41c6b1:	or     BYTE PTR [ebx-0x7a8a0b74],dh
  41c6b7:	enter  0xced1,0x6e
  41c6bb:	hlt    
  41c6bc:	sub    BYTE PTR [edx+ebx*8+0x3],dh
  41c6c0:	loopne 0x41c729
  41c6c2:	fild   QWORD PTR [edx+0x281fd64e]
  41c6c8:	cld    
  41c6c9:	cmp    dl,BYTE PTR [ebx+edx*4+0x3e]
  41c6cd:	add    BYTE PTR [ecx+eax*2+0x5],dl
  41c6d1:	(bad)  
  41c6d2:	cld    
  41c6d3:	push   ss
  41c6d4:	mov    cl,0x9a
  41c6d6:	leave  
  41c6d7:	sub    BYTE PTR [eax-0x403b5516],bl
  41c6dd:	push   ebp
  41c6de:	sub    DWORD PTR [ecx+edi*8+0x5d],edx
  41c6e2:	jmp    0xa7e0:0x6478f05f
  41c6e9:	ud1    dx,cx
  41c6ed:	ins    BYTE PTR es:[edi],dx
  41c6ee:	mov    al,ds:0x558bd8e9
  41c6f3:	addr16 dec edx
  41c6f5:	arpl   WORD PTR [ebp+eiz*2-0x71],ax
  41c6f9:	mov    edx,DWORD PTR [edx+ebx*8-0x1de5859]
  41c700:	add    BYTE PTR [esp+ebx*4-0x37],0x57
  41c705:	pushw  0x3d
  41c708:	imul   eax,DWORD PTR [ebp+0x251e1dc1],0xeb5eb3a3
  41c712:	xor    al,0x2f
  41c714:	ja     0x41c793
  41c716:	sahf   
  41c717:	push   ecx
  41c718:	pusha  
  41c719:	dec    esi
  41c71a:	xor    DWORD PTR [ecx],0xffffffc3
  41c71d:	aad    0xd8
  41c71f:	fstp   QWORD PTR [eax+0xc]
  41c722:	rcr    DWORD PTR ds:[si],0x81
  41c727:	cmp    al,0x81
  41c729:	icebp  
  41c72a:	ficom  WORD PTR [esi+0x23]
  41c72d:	inc    esp
  41c72e:	jecxz  0x41c78a
  41c730:	add    eax,0xc07c7baa
  41c735:	jnp    0x41c702
  41c737:	pop    ebp
  41c738:	sub    BYTE PTR [ebx+0x6e],bh
  41c73b:	clc    
  41c73c:	out    dx,al
  41c73d:	cmp    al,0xc9
  41c73f:	fwait
  41c740:	aaa    
  41c741:	xchg   BYTE PTR [ebp-0x3011734d],ch
  41c747:	out    dx,eax
  41c748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c749:	and    BYTE PTR [edx],0x53
  41c74c:	setnp  BYTE PTR [edi-0x80]
  41c750:	mov    ecx,0x5b48bfc9
  41c755:	out    dx,al
  41c756:	xlat   BYTE PTR ds:[ebx]
  41c757:	xchg   esi,eax
  41c758:	sbb    bl,BYTE PTR [ecx+ebx*4+0x5a798cdd]
  41c75f:	(bad)  
  41c760:	lods   eax,DWORD PTR ds:[esi]
  41c762:	sub    BYTE PTR [ecx-0x11519f92],ch
  41c768:	rol    DWORD PTR [ebp-0x97d1aa],1
  41c76e:	push   ebp
  41c76f:	and    esi,DWORD PTR [esi+0x1c5bb324]
  41c775:	repz xchg esp,eax
  41c777:	xchg   edi,eax
  41c778:	inc    ecx
  41c779:	pop    es
  41c77a:	mov    eax,0x19620a47
  41c77f:	xchg   DWORD PTR [ecx+0x426ab80a],edi
  41c785:	aas    
  41c786:	jg     0x41c70b
  41c788:	mov    ebx,0xca3d8380
  41c78d:	ret    0xb4b
  41c790:	pop    edi
  41c791:	fild   DWORD PTR [esi-0x48c3b63d]
  41c797:	xor    al,0x7e
  41c799:	enter  0x7563,0xe7
  41c79d:	rcr    cl,cl
  41c79f:	cmp    BYTE PTR [esi+ebx*4],al
  41c7a2:	pop    esi
  41c7a3:	add    eax,0x882136a1
  41c7a8:	popa   
  41c7a9:	inc    ecx
  41c7aa:	add    DWORD PTR [edi],esi
  41c7ac:	nop
  41c7ad:	bound  ecx,QWORD PTR [ecx]
  41c7af:	or     BYTE PTR [esi],bh
  41c7b1:	jbe    0x41c76f
  41c7b3:	(bad)  
  41c7b4:	mov    dl,0x2e
  41c7b6:	push   ebx
  41c7b7:	dec    eax
  41c7b8:	retf   
  41c7b9:	push   ds
  41c7ba:	push   esp
  41c7bb:	mov    al,0xeb
  41c7bd:	cmc    
  41c7be:	fwait
  41c7bf:	out    dx,al
  41c7c0:	mov    esi,0x13e78f19
  41c7c5:	adc    ah,ch
  41c7c7:	imul   al
  41c7c9:	or     eax,0xec639344
  41c7ce:	pusha  
  41c7cf:	xchg   ecx,eax
  41c7d0:	dec    esi
  41c7d1:	outs   dx,DWORD PTR ds:[esi]
  41c7d2:	lods   al,BYTE PTR ds:[esi]
  41c7d3:	loop   0x41c82b
  41c7d5:	sub    ah,BYTE PTR [edx+0x19438b81]
  41c7db:	xor    bh,0xc8
  41c7de:	loope  0x41c7cd
  41c7e0:	xchg   edi,eax
  41c7e1:	or     al,0x10
  41c7e3:	xchg   edx,eax
  41c7e4:	ds mov edx,0x83ac0f95
  41c7ea:	int3   
  41c7eb:	fs (bad) 
  41c7ed:	mov    bl,0x56
  41c7ef:	outs   dx,BYTE PTR ds:[esi]
  41c7f0:	adc    bl,BYTE PTR [edi-0x3c0a7b36]
  41c7f6:	shr    BYTE PTR [edi-0x75be34e8],0x7e
  41c7fd:	adc    esp,DWORD PTR [esi+0x1b]
  41c800:	jge    0x41c84a
  41c802:	cmp    bh,BYTE PTR [ebx+eiz*1+0x4e782abf]
  41c809:	aam    0x3f
  41c80b:	sar    BYTE PTR ds:0x5c02e07c,1
  41c811:	js     0x41c82e
  41c813:	xchg   dl,dl
  41c815:	es fwait
  41c817:	mov    esi,eax
  41c819:	in     eax,0x3d
  41c81b:	sub    DWORD PTR [edi+0x8],edi
  41c81e:	imul   esp,DWORD PTR [ebx+0x1322b55a],0xffffff84
  41c825:	or     DWORD PTR [edx],edi
  41c827:	mov    bh,0xf2
  41c829:	pop    ds
  41c82a:	mov    eax,DWORD PTR ds:0x6c6a2bf8
  41c830:	sbb    eax,DWORD PTR [edx-0x606a20e4]
  41c836:	fcomp  QWORD PTR [ecx+0x7c]
  41c839:	and    ebx,esp
  41c83b:	mov    ss,edi
  41c83d:	fisub  WORD PTR [ecx]
  41c83f:	lods   al,BYTE PTR ds:[esi]
  41c840:	cdq    
  41c841:	mov    ds,esp
  41c843:	add    al,BYTE PTR [ebp+0x38]
  41c846:	sub    eax,edi
  41c848:	fucomi st,st(7)
  41c84a:	add    DWORD PTR [esi+0x57d95524],edi
  41c850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c851:	dec    ebp
  41c852:	repnz mov ebp,0x0
	...
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     DWORD PTR [ebx-0x3f],esp
  41c86f:	mov    fs:0x144be,al
  41c875:	stos   DWORD PTR es:[edi],eax
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    BYTE PTR [ecx-0x6cb0f171],bh
  41c87e:	push   ebx
  41c87f:	ja     0x41c864
  41c881:	cs pop edi
  41c883:	push   eax
  41c884:	arpl   WORD PTR [edi],di
  41c886:	add    eax,0x24f70832
  41c88b:	mov    BYTE PTR [eax+0x71],0x38
  41c88f:	stos   DWORD PTR es:[edi],eax
  41c890:	ds mov ch,0x86
  41c893:	mov    WORD PTR [esi],?
  41c895:	mov    al,ds:0xeaf183da
  41c89a:	stc    
  41c89b:	popa   
  41c89c:	fst    QWORD PTR [eax]
  41c89e:	jmp    0x41c914
  41c8a0:	jmp    0x1c8d:0xb123149
  41c8a7:	push   DWORD PTR [ecx+esi*1+0x63]
  41c8ab:	jle    0x41c8be
  41c8ad:	sahf   
  41c8ae:	adc    ah,BYTE PTR [edi+0x12f43746]
  41c8b4:	or     DWORD PTR [edx-0x69],esp
  41c8b7:	icebp  
  41c8b8:	pusha  
  41c8b9:	or     al,0x14
  41c8bb:	cmp    cl,bl
  41c8bd:	adc    eax,0x8beefef6
  41c8c2:	aad    0x71
  41c8c4:	cdq    
  41c8c5:	cmp    eax,edx
  41c8c7:	push   edx
  41c8c8:	(bad)  
  41c8c9:	adc    al,0xe6
  41c8cb:	xchg   ebp,eax
  41c8cc:	out    dx,eax
  41c8cd:	lds    esi,FWORD PTR [esi-0x1b]
  41c8d0:	leave  
  41c8d1:	lds    ebp,FWORD PTR [ecx-0x49]
  41c8d4:	add    al,0x87
  41c8d6:	push   esi
  41c8d7:	jno    0x41c884
  41c8d9:	(bad)  
  41c8da:	sbb    al,0xcf
  41c8dc:	sbb    al,0x8c
  41c8de:	sbb    dl,dl
  41c8e0:	fs push ds
  41c8e2:	push   ecx
  41c8e3:	shl    DWORD PTR [ebx],0x42
  41c8e6:	je     0x41c86d
  41c8e8:	rol    edx,0x1a
  41c8eb:	push   0xa56cd7b5
  41c8f0:	test   DWORD PTR fs:[ecx+ecx*4-0x15],ecx
  41c8f5:	jmp    0x4a3:0xd38f465c
  41c8fc:	xor    eax,DWORD PTR [ecx-0x252a1edd]
  41c902:	add    eax,0x621b5113
  41c907:	sub    BYTE PTR [ebp-0x53],cl
  41c90a:	aas    
  41c90b:	jbe    0x41c92d
  41c90d:	imul   eax,DWORD PTR [ebx+0x183b6490],0x21a4ff89
  41c917:	daa    
  41c918:	mov    esi,0xf9d7ffa7
  41c91d:	ficomp WORD PTR [edi+ebp*4]
  41c921:	jmp    0x4b28:0xfd87a377
  41c928:	dec    ecx
  41c929:	add    DWORD PTR [ecx-0x336aa0b8],ecx
  41c92f:	add    bh,BYTE PTR [ecx-0x5b38b662]
  41c935:	and    al,0xd0
  41c937:	xchg   edi,eax
  41c938:	aam    0x7
  41c93a:	sahf   
  41c93b:	inc    eax
  41c93c:	xchg   ebp,eax
  41c93d:	frstor [ecx+0x2b]
  41c940:	rcr    DWORD PTR [ebp+esi*8-0x28],1
  41c944:	sbb    esi,edx
  41c946:	jne    0x41c90d
  41c948:	mov    dh,dl
  41c94a:	test   al,0x95
  41c94c:	push   cs
  41c94d:	pop    esp
  41c94e:	mov    dl,0x12
  41c950:	call   0xd7d3:0xab664b63
  41c957:	jg     0x41c9a8
  41c959:	scas   al,BYTE PTR es:[edi]
  41c95a:	inc    ecx
  41c95b:	sbb    eax,edi
  41c95d:	push   es
  41c95e:	xor    bl,dh
  41c960:	xchg   BYTE PTR [edx],ah
  41c962:	clc    
  41c963:	mov    dl,0x97
  41c965:	push   edi
  41c966:	scas   al,BYTE PTR es:[edi]
  41c967:	mov    ah,0xb
  41c969:	das    
  41c96a:	fs xor eax,0xf03e3d8e
  41c970:	es leave 
  41c972:	shl    DWORD PTR [ecx],cl
  41c974:	ins    BYTE PTR es:[edi],dx
  41c975:	add    ebx,DWORD PTR [edi]
  41c977:	adc    esp,DWORD PTR [esp+eax*8+0x3ea4e4f0]
  41c97e:	inc    ecx
  41c97f:	std    
  41c980:	adc    al,0x6c
  41c982:	push   edi
  41c983:	push   0x7f4ccfd1
  41c988:	lods   eax,DWORD PTR ds:[esi]
  41c989:	rcr    DWORD PTR [ecx+0x48e7b3d9],0xfd
  41c990:	loopne 0x41c9a7
  41c992:	push   ebp
  41c993:	xchg   ebp,eax
  41c994:	fadd   st(4),st
  41c996:	idiv   ecx
  41c998:	dec    esi
  41c999:	dec    ebx
  41c99a:	in     al,dx
  41c99b:	add    ch,BYTE PTR ds:0xe5dc9ddc
  41c9a1:	jecxz  0x41c9b0
  41c9a3:	pop    es
  41c9a4:	pop    ecx
  41c9a5:	and    DWORD PTR [edi+ebp*1-0x32],edx
  41c9a9:	pop    edi
  41c9aa:	in     al,dx
  41c9ab:	jmp    0x41ca0b
  41c9ad:	add    dl,0x6f
  41c9b0:	and    al,0x7e
  41c9b2:	dec    eax
  41c9b3:	mov    ecx,0x77cf286d
  41c9b8:	pop    eax
  41c9b9:	push   edi
  41c9ba:	shl    DWORD PTR [esp+ebx*4+0x67],cl
  41c9be:	outs   dx,DWORD PTR ds:[esi]
  41c9bf:	pushf  
  41c9c0:	xor    eax,0x75736770
  41c9c5:	in     al,dx
  41c9c6:	jb     0x41c99d
  41c9c8:	pushf  
  41c9c9:	sub    edx,ebp
  41c9cb:	shl    edx,0xff
  41c9ce:	test   al,0xd9
  41c9d0:	pop    eax
  41c9d1:	shl    DWORD PTR [ecx+0x1d],1
  41c9d4:	mov    edx,0xda11d697
  41c9d9:	pop    edx
  41c9da:	ret    0xb464
  41c9dd:	push   eax
  41c9de:	mov    DWORD PTR [ebp+eiz*2-0x19eb4dd],edi
  41c9e5:	xchg   ebx,eax
  41c9e6:	mov    dl,0x49
  41c9e8:	arpl   WORD PTR [edx+eiz*8],bp
  41c9eb:	ret    0x432e
  41c9ee:	inc    ebx
  41c9ef:	or     bh,cl
  41c9f1:	add    ebp,DWORD PTR ds:0x5a81e372
  41c9f7:	test   al,0xa5
  41c9f9:	ficom  WORD PTR [ecx+eiz*2]
  41c9fc:	and    dl,BYTE PTR [edi+0x6a]
  41c9ff:	jmp    0xbd00:0x5d8d8f04
  41ca06:	out    dx,al
  41ca07:	jl     0x41ca61
  41ca09:	clc    
  41ca0a:	push   esi
  41ca0b:	ret    
  41ca0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0d:	loop   0x41c9bf
  41ca0f:	push   ebx
  41ca10:	pop    esp
  41ca11:	loop   0x41ca28
  41ca13:	(bad)  
  41ca14:	and    eax,0x6a2c1b3
  41ca19:	mov    ecx,0xe6353a75
  41ca1e:	sbb    eax,0x25941099
  41ca23:	mov    esp,0xdfc95bf3
  41ca28:	sub    DWORD PTR [eax+edx*4+0x167b374f],ecx
  41ca2f:	out    dx,al
  41ca30:	dec    ebp
  41ca31:	push   es
  41ca32:	pop    es
  41ca33:	scas   eax,DWORD PTR es:[edi]
  41ca34:	ds hlt 
  41ca36:	adc    ebp,ebp
  41ca38:	jbe    0x41caa8
  41ca3a:	jbe    0x41ca2f
  41ca3c:	iret   
  41ca3d:	out    0x8,al
  41ca3f:	fs aam 0x79
  41ca42:	mov    bh,0x93
  41ca44:	call   0x699a:0xefb1864a
  41ca4b:	or     edx,DWORD PTR [ebx+0x79]
  41ca4e:	mov    ah,BYTE PTR [edx]
  41ca50:	sbb    eax,0xaa2f53e5
  41ca55:	and    DWORD PTR [edx],ebx
  41ca57:	mov    cl,0xf9
  41ca59:	sub    BYTE PTR [ebp+ebx*8+0x25],cl
  41ca5d:	das    
  41ca5e:	sub    eax,0x713093c3
  41ca63:	scas   al,BYTE PTR es:[edi]
  41ca64:	pusha  
  41ca65:	xchg   esp,eax
  41ca66:	add    ebx,DWORD PTR [ebx-0x39]
  41ca69:	and    al,0xff
  41ca6b:	dec    ebx
  41ca6c:	jnp    0x41ca68
  41ca6e:	das    
  41ca6f:	mov    edx,0x614aaf68
  41ca74:	aaa    
  41ca75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca76:	jmp    0x41ca82
  41ca78:	test   eax,0xbb409244
  41ca7d:	(bad)  
  41ca7e:	mov    bh,0x97
  41ca80:	mul    bh
  41ca82:	pop    edi
  41ca83:	sti    
  41ca84:	mov    ebx,0xe7b89fa2
  41ca89:	aam    0x8b
  41ca8b:	mov    ebp,0x86926bdb
  41ca90:	fimul  DWORD PTR [eax+edx*4+0x19fe0ba5]
  41ca97:	jb     0x41caab
  41ca99:	loop   0x41cad7
  41ca9b:	cld    
  41ca9c:	sub    BYTE PTR [esi-0x39],bl
  41ca9f:	push   ds
  41caa0:	pop    edi
  41caa1:	inc    edx
  41caa2:	add    eax,0x4d2cf593
  41caa7:	pop    ds
  41caa8:	push   esp
  41caa9:	lea    ebp,ss:[ebx+0x77]
  41caad:	repz and eax,ebx
  41cab0:	test   BYTE PTR [esp+eax*4-0x79cc0437],cl
  41cab7:	and    DWORD PTR [ebp+0xb870394],0xd840e674
  41cac1:	in     eax,0x7a
  41cac3:	mov    ch,0xd3
  41cac5:	outs   dx,BYTE PTR ds:[esi]
  41cac6:	fs add eax,0xcae0f6d9
  41cacc:	pop    es
  41cacd:	xor    edi,edi
  41cacf:	(bad)  
  41cad0:	xor    edi,DWORD PTR [ecx-0x5a0f6253]
  41cad6:	mov    edi,0x67b48c25
  41cadb:	pop    esi
  41cadc:	hlt    
  41cadd:	push   0x3f
  41cadf:	test   BYTE PTR [edi+0x54d64577],ah
  41cae5:	outs   dx,DWORD PTR ds:[esi]
  41cae6:	sub    DWORD PTR [eax+0x2b938097],edi
  41caec:	pop    ebx
  41caed:	adc    ecx,DWORD PTR [edi]
  41caef:	fnstenv [ebx]
  41caf1:	push   ebx
  41caf2:	imul   esp,DWORD PTR [ebp+0x7f],0x24d9be78
  41caf9:	ror    BYTE PTR [ecx-0x201b27cb],1
  41caff:	dec    ebx
  41cb00:	sbb    BYTE PTR ds:0x2b92a9f2,bl
  41cb06:	xchg   esi,eax
  41cb07:	cmp    DWORD PTR [esi+0x20c0c5c1],0xffffff90
  41cb0e:	xchg   ebp,eax
  41cb0f:	adc    BYTE PTR [eax-0x5d],ch
  41cb12:	in     al,dx
  41cb13:	cwde   
  41cb14:	dec    ebx
  41cb15:	pop    edx
  41cb16:	(bad)  
  41cb17:	lods   eax,DWORD PTR ds:[esi]
  41cb18:	repnz or bh,BYTE PTR [edi]
  41cb1b:	xor    al,0x63
  41cb1d:	push   edx
  41cb1e:	nop
  41cb1f:	adc    eax,0x49944ec
  41cb24:	jb     0x41cacc
  41cb26:	ds inc ebp
  41cb28:	push   eax
  41cb29:	fwait
  41cb2a:	lock mov edx,DWORD PTR [esi-0x6dcf84f2]
  41cb31:	mov    si,0x9858
  41cb35:	cmc    
  41cb36:	push   ebp
  41cb37:	in     al,0xdc
  41cb39:	dec    ebx
  41cb3a:	xchg   BYTE PTR [ebx],dh
  41cb3c:	jbe    0x41cb0a
  41cb3e:	iret   
  41cb3f:	xor    BYTE PTR [ebx+ecx*8],cl
  41cb42:	test   ecx,0xc7073a0f
  41cb48:	inc    ecx
  41cb49:	or     bh,cl
  41cb4b:	mov    dl,0xb8
  41cb4d:	test   BYTE PTR [ebp+0x38],0x46
  41cb51:	dec    eax
  41cb52:	pop    eax
  41cb53:	jbe    0x41cb62
  41cb55:	push   es
  41cb56:	das    
  41cb57:	jb     0x41cb3e
  41cb59:	xor    dl,ch
  41cb5b:	fistp  WORD PTR [ecx+ecx*1+0x395123d1]
  41cb62:	jmp    0xc69:0xa3e868fc
  41cb69:	adc    ch,0x97
  41cb6c:	sub    BYTE PTR [edx+ebx*2],cl
  41cb6f:	test   DWORD PTR [ecx],eax
  41cb71:	jae    0x41cbec
  41cb73:	or     DWORD PTR [eax-0x5c],edx
  41cb76:	add    eax,0x60deb09f
  41cb7b:	mov    dl,0x8e
  41cb7d:	pop    edx
  41cb7e:	out    dx,eax
  41cb7f:	fnsave [edi+edi*8]
  41cb82:	ret    0x22cc
  41cb85:	enter  0x9b67,0x81
  41cb89:	adc    DWORD PTR [edx+edi*4-0x34fa42da],0x6d
  41cb91:	ret    
  41cb92:	cmc    
  41cb93:	xor    DWORD PTR [eax+0x73a13ec6],ebp
  41cb99:	or     esp,ebx
  41cb9b:	jmp    0x41cbe7
  41cb9d:	adc    cl,BYTE PTR [eax-0x560f2a5b]
  41cba3:	aaa    
  41cba4:	mov    BYTE PTR [edx+0xa4c1bee],al
  41cbaa:	and    DWORD PTR [ebp+0x744f53e8],0x5aaebb09
  41cbb4:	push   eax
  41cbb5:	in     al,dx
  41cbb6:	outs   dx,BYTE PTR ds:[esi]
  41cbb7:	in     al,dx
  41cbb8:	das    
  41cbb9:	sbb    eax,0x284aa152
  41cbbe:	div    DWORD PTR [edx]
  41cbc0:	push   0xffffffb4
  41cbc2:	mov    bl,0x2a
  41cbc4:	jmp    0x11cc:0x463e834c
  41cbcb:	xor    DWORD PTR cs:[edi+0x3b64b8be],esi
  41cbd2:	shr    DWORD PTR [edi+edi*2],cl
  41cbd5:	mov    BYTE PTR [edx],dl
  41cbd7:	js     0x41cbc2
  41cbd9:	xor    ebx,DWORD PTR [eax]
  41cbdb:	jne    0x41cbdf
  41cbdd:	mov    al,ds:0x395c56dc
  41cbe2:	mov    al,ds:0xa3043325
  41cbe7:	xchg   edx,eax
  41cbe8:	icebp  
  41cbe9:	in     al,0x23
  41cbeb:	inc    esi
  41cbec:	mov    edx,0x744d2e4
  41cbf1:	jns    0x41cc62
  41cbf3:	lea    ebp,[ecx+ebp*8-0x4e]
  41cbf7:	cs retf 0x74e
  41cbfb:	jmp    0x41cc05
  41cbfd:	jae    0x41cbe2
  41cbff:	mov    eax,0xe2203be0
  41cc04:	mov    WORD PTR [ecx+0x71],?
  41cc07:	mov    cl,0x67
  41cc09:	push   esi
  41cc0a:	cmp    esi,eax
  41cc0c:	pop    ecx
  41cc0d:	jmp    DWORD PTR [eax+0x19bf0601]
  41cc13:	or     al,0xfa
  41cc15:	jns    0x41cba7
  41cc17:	fwait
  41cc18:	and    bh,BYTE PTR [esi]
  41cc1a:	sub    DWORD PTR [eax],edi
  41cc1c:	(bad)
  41cc20:	repnz xor edx,DWORD PTR [eax+0x94]
	...
  41cc2f:	add    BYTE PTR [eax],al
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0x14f0d8aa,ecx
  41cc41:	imul   ecx,DWORD PTR [eax+0x1],0x3ab00
  41cc48:	add    BYTE PTR [edi+0x3c871f1e],cl
  41cc4e:	pop    ss
  41cc4f:	icebp  
  41cc50:	sub    bl,dl
  41cc52:	push   0xffffffe7
  41cc54:	mov    al,0xe0
  41cc56:	push   cs
  41cc57:	inc    DWORD PTR [esi+0x68]
  41cc5a:	stc    
  41cc5b:	dec    esp
  41cc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc5d:	jle    0x41ccb8
  41cc5f:	pop    es
  41cc60:	mov    bl,cl
  41cc62:	add    BYTE PTR [ebx-0x7eaf4487],al
  41cc68:	imul   eax,esi,0x31eb622b
  41cc6e:	jg     0x41cc43
  41cc70:	cmp    DWORD PTR [eax],edx
  41cc72:	or     eax,0x59247ae
  41cc77:	shr    BYTE PTR [ecx-0x4a],1
  41cc7a:	ins    DWORD PTR es:[edi],dx
  41cc7b:	pop    esp
  41cc7c:	add    ch,ah
  41cc7e:	jmp    0xd4641bff
  41cc83:	or     al,0xc3
  41cc85:	into   
  41cc86:	popf   
  41cc87:	mul    DWORD PTR [ecx+0x55]
  41cc8a:	xchg   ebx,eax
  41cc8b:	mov    DWORD PTR [eax],esi
  41cc8d:	pop    ds
  41cc8e:	sar    DWORD PTR [ecx+0x6006d470],0xac
  41cc95:	cmp    al,0x40
  41cc97:	cmc    
  41cc98:	pop    esp
  41cc99:	je     0x41cce7
  41cc9b:	adc    eax,0x38c91251
  41cca0:	pushf  
  41cca1:	inc    edx
  41cca2:	inc    ebp
  41cca3:	pop    edi
  41cca4:	cmp    BYTE PTR [edx+esi*4-0x39],cl
  41cca8:	loope  0x41cc82
  41ccaa:	mov    esp,0x1b8e0d1
  41ccaf:	mov    esp,0x12cd35cd
  41ccb4:	leave  
  41ccb5:	add    al,0x82
  41ccb7:	mov    esi,0x675f9950
  41ccbc:	lar    ebx,WORD PTR [ebx+0x6bee4523]
  41ccc3:	cmp    DWORD PTR [ecx-0x40],edi
  41ccc6:	jmp    0x41ccb2
  41ccc8:	adc    al,0x38
  41ccca:	mov    ch,0xc0
  41cccc:	dec    esp
  41cccd:	aas    
  41ccce:	adc    BYTE PTR [edx+ecx*4+0x27],ah
  41ccd2:	les    edx,FWORD PTR [ecx+0x4f]
  41ccd5:	mov    esi,DWORD PTR [ebp+0x25]
  41ccd8:	mov    ebp,0x85aeb5d
  41ccdd:	test   DWORD PTR [esi],esp
  41ccdf:	jle    0x41ccad
  41cce1:	jle    0x41cca2
  41cce3:	imul   DWORD PTR [edi]
  41cce5:	fs mov al,0x81
  41cce8:	out    dx,eax
  41cce9:	mov    al,ds:0xb1523b68
  41ccee:	adc    al,BYTE PTR [ecx+0x1d]
  41ccf1:	ds jmp 0xf155010d
  41ccf7:	call   0xc47f:0x934c31fe
  41ccfe:	ror    DWORD PTR [edx],cl
  41cd00:	push   ebp
  41cd01:	xchg   ebp,eax
  41cd02:	cmp    ecx,DWORD PTR [ecx-0x60]
  41cd05:	pop    edx
  41cd06:	pushf  
  41cd07:	(bad)  
  41cd09:	jg     0x41cd36
  41cd0b:	add    DWORD PTR [ebp-0x59],edi
  41cd0e:	fstp   TBYTE PTR [edx]
  41cd10:	push   ebx
  41cd11:	rol    dh,cl
  41cd13:	xchg   edx,eax
  41cd14:	mov    cl,0xae
  41cd16:	xchg   edx,eax
  41cd17:	fdivr  DWORD PTR [edi+0x49]
  41cd1a:	scas   al,BYTE PTR es:[edi]
  41cd1b:	gs fwait
  41cd1d:	pop    edi
  41cd1e:	ins    DWORD PTR es:[edi],dx
  41cd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd20:	out    dx,eax
  41cd21:	pop    ecx
  41cd22:	mov    cl,0x69
  41cd24:	out    0x50,eax
  41cd26:	and    esi,DWORD PTR [ecx+0x2177004f]
  41cd2c:	out    0xe2,al
  41cd2e:	sbb    eax,0xa9f1da1b
  41cd33:	outs   dx,BYTE PTR ds:[esi]
  41cd34:	ja     0x41cd92
  41cd36:	les    ecx,FWORD PTR [ebp-0x4]
  41cd39:	das    
  41cd3a:	or     DWORD PTR [esi+0x3f],ebp
  41cd3d:	xchg   ebp,eax
  41cd3e:	out    dx,al
  41cd3f:	jno    0x41cd55
  41cd41:	(bad)  
  41cd42:	pop    ds
  41cd43:	add    ebx,0xe863ad3a
  41cd49:	retf   0xaa7f
  41cd4c:	pop    edi
  41cd4d:	outs   dx,BYTE PTR ds:[esi]
  41cd4e:	cwde   
  41cd4f:	das    
  41cd50:	pop    esp
  41cd51:	cmp    al,0x6f
  41cd53:	push   0xffffffdb
  41cd55:	and    ebx,DWORD PTR [edx+0x1c04a5b7]
  41cd5b:	dec    edi
  41cd5c:	xchg   ecx,eax
  41cd5d:	cs pop ebx
  41cd5f:	mov    al,ds:0x575a4653
  41cd64:	adc    cl,BYTE PTR [esi-0x19cfebb4]
  41cd6a:	inc    ebx
  41cd6b:	xor    dh,BYTE PTR [ebp-0x3f698a73]
  41cd71:	mov    bl,bh
  41cd73:	or     cl,BYTE PTR [edx+ebp*2]
  41cd76:	cmp    ebp,DWORD PTR [esi+0x585f1226]
  41cd7c:	pop    edi
  41cd7d:	xlat   BYTE PTR ds:[ebx]
  41cd7e:	call   0x979f43fe
  41cd83:	ret    
  41cd84:	xor    BYTE PTR [eax-0x7e639810],0x2e
  41cd8b:	pop    es
  41cd8c:	call   0x7426:0x49bcbcd3
  41cd93:	mov    dl,0xb6
  41cd96:	mov    edx,0x5bb2554b
  41cd9b:	mov    ds:0x5eb9aa41,eax
  41cda0:	pop    ecx
  41cda1:	(bad)  
  41cda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda3:	dec    eax
  41cda4:	mov    BYTE PTR [ebp+0x58],ch
  41cda7:	lods   eax,DWORD PTR ds:[esi]
  41cda8:	pop    ds
  41cda9:	xchg   DWORD PTR [ebp-0x3e6c380b],ebx
  41cdaf:	jmp    0x3ff5:0x13b5fff4
  41cdb6:	inc    ebp
  41cdb7:	pop    edx
  41cdb8:	pop    esp
  41cdb9:	mov    eax,0xd572a100
  41cdbe:	(bad)
  41cdc1:	push   ss
  41cdc2:	jecxz  0x41cd56
  41cdc4:	inc    ecx
  41cdc5:	lock fs jns 0x41cd51
  41cdc9:	push   edi
  41cdca:	adc    DWORD PTR [ecx-0x59],esi
  41cdcd:	push   edx
  41cdce:	xchg   esp,eax
  41cdcf:	xlat   BYTE PTR ds:[ebx]
  41cdd0:	jne    0x41cd95
  41cdd2:	lea    esp,[esi+esi*4+0x22]
  41cdd6:	punpckhdq mm5,QWORD PTR [edi+0x71d90af0]
  41cddd:	push   ebp
  41cdde:	dec    ebx
  41cddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde0:	pop    esi
  41cde1:	add    ah,BYTE PTR [esi]
  41cde3:	adc    DWORD PTR [ebp+0x23],eax
  41cde6:	xor    esp,ecx
  41cde8:	xchg   edx,eax
  41cde9:	sub    BYTE PTR [eax-0x41689aff],bl
  41cdef:	dec    edx
  41cdf0:	fdivr  st,st(0)
  41cdf2:	xor    edi,DWORD PTR [ebp+0x78fa2a91]
  41cdf8:	add    al,BYTE PTR [eax+0x62]
  41cdfb:	add    bl,bl
  41cdfd:	mov    al,ds:0x37d407f6
  41ce02:	push   eax
  41ce03:	addr16 (bad) 
  41ce05:	xchg   ebp,eax
  41ce06:	xor    BYTE PTR [eax],bl
  41ce08:	stos   BYTE PTR es:[edi],al
  41ce09:	cs lahf 
  41ce0b:	mov    ecx,0xeca0da99
  41ce10:	inc    ecx
  41ce11:	aam    0x85
  41ce13:	les    edi,FWORD PTR [eax-0x11ad6594]
  41ce19:	cmp    bl,ah
  41ce1b:	jmp    0x8a44:0x7fbc12b3
  41ce22:	mov    BYTE PTR [ebp+0x4d],ah
  41ce25:	or     dl,BYTE PTR [ebx+ebx*8+0x173f6b9a]
  41ce2c:	aad    0xe8
  41ce2e:	add    al,0x56
  41ce30:	jo     0x41ce4d
  41ce32:	add    BYTE PTR ds:0x4a38f966,0x8c
  41ce39:	pop    ebx
  41ce3a:	adc    DWORD PTR [edi+0x1e0c727e],ebx
  41ce40:	sbb    eax,0x95e38c7e
  41ce45:	leave  
  41ce46:	inc    ecx
  41ce47:	aaa    
  41ce48:	mov    bh,BYTE PTR [edi]
  41ce4a:	dec    eax
  41ce4b:	sub    eax,0x80bbb0e5
  41ce50:	rcr    DWORD PTR [edx],0x7a
  41ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce54:	push   0x1dc8202e
  41ce59:	pop    es
  41ce5a:	mov    edx,esi
  41ce5c:	and    eax,0x65e1fcb0
  41ce61:	inc    edi
  41ce62:	sub    ecx,DWORD PTR [ebp-0x52]
  41ce65:	fild   QWORD PTR [ecx-0x10]
  41ce68:	lods   eax,DWORD PTR ds:[esi]
  41ce69:	mov    bh,0xe9
  41ce6b:	stc    
  41ce6c:	and    ecx,DWORD PTR [edx]
  41ce6e:	mov    bl,0x4b
  41ce70:	fstp   QWORD PTR [ebx+0x1a]
  41ce73:	cwde   
  41ce74:	scas   al,BYTE PTR es:[edi]
  41ce75:	xchg   edi,eax
  41ce76:	es sub edx,ebx
  41ce79:	mov    dl,0xa5
  41ce7b:	lea    ebx,[ebx-0x3b8da557]
  41ce81:	mov    esi,DWORD PTR [eax-0x6569ac9e]
  41ce87:	out    dx,eax
  41ce88:	cmp    ah,al
  41ce8a:	aad    0x25
  41ce8c:	push   eax
  41ce8d:	daa    
  41ce8e:	jne    0x41ce84
  41ce90:	nop
  41ce91:	ret    0x68bb
  41ce94:	and    dh,cl
  41ce96:	pop    ds
  41ce97:	ret    
  41ce98:	aad    0x1
  41ce9a:	int    0x7d
  41ce9c:	mov    esi,0xe57695a4
  41cea1:	push   eax
  41cea2:	je     0x41cf1e
  41cea4:	lock stos BYTE PTR es:[edi],al
  41cea6:	aam    0x9f
  41cea8:	add    eax,0x1db5356a
  41cead:	cmp    al,0x4c
  41ceaf:	mov    BYTE PTR [esi+0x29],bh
  41ceb2:	data16 cmp al,dl
  41ceb5:	xor    ecx,DWORD PTR [ebp-0x1]
  41ceb8:	jae    0x41cefb
  41ceba:	mov    ds:0x4617ba4d,eax
  41cebf:	mov    BYTE PTR [ebx],al
  41cec1:	push   ebp
  41cec2:	push   cs
  41cec3:	adc    al,0x75
  41cec5:	xor    al,BYTE PTR [edx+0x680773c3]
  41cecb:	push   ss
  41cecc:	dec    ebp
  41cecd:	or     eax,0xcf78eea2
  41ced2:	call   0x92d8:0xf7e4131a
  41ced9:	mov    dl,0x7a
  41cedb:	outs   dx,DWORD PTR ds:[esi]
  41cedc:	out    0xb8,eax
  41cede:	leave  
  41cedf:	ret    0xeff5
  41cee2:	sti    
  41cee3:	and    esp,edx
  41cee5:	(bad)  
  41cee7:	xor    BYTE PTR [ecx+0x3],cl
  41ceea:	cmp    DWORD PTR [ebp-0x1b],0x66
  41ceee:	mov    esp,0x84b9fbf4
  41cef3:	mov    al,0x3a
  41cef5:	cmp    ebx,ebp
  41cef7:	push   0xabbe3f55
  41cefc:	ins    DWORD PTR es:[edi],dx
  41cefd:	push   ebx
  41cefe:	scas   al,BYTE PTR es:[edi]
  41ceff:	scas   eax,DWORD PTR es:[edi]
  41cf00:	mov    ds:0x18ef2868,al
  41cf05:	push   ebp
  41cf06:	pop    eax
  41cf07:	mov    esp,0x18adff55
  41cf0c:	mov    BYTE PTR [esi+ecx*2],cl
  41cf0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf10:	(bad)  
  41cf11:	mov    esi,0xd3ff0b4
  41cf16:	xchg   esi,eax
  41cf17:	or     DWORD PTR [ecx],0xfcfcd342
  41cf1d:	or     eax,0xf7fc106f
  41cf22:	nop
  41cf23:	sub    eax,0x450ea2e9
  41cf28:	adc    bl,dh
  41cf2a:	ret    0x6354
  41cf2d:	in     eax,dx
  41cf2e:	repnz push es
  41cf30:	imul   esp,DWORD PTR [ebp+edi*2+0x29adb1da],0x27aad2ea
  41cf3b:	xchg   esi,eax
  41cf3c:	aad    0x21
  41cf3e:	inc    edi
  41cf3f:	add    ch,BYTE PTR [esi-0xd8aa7a3]
  41cf45:	out    dx,eax
  41cf46:	jne    0x41cf90
  41cf48:	arpl   WORD PTR [ecx],di
  41cf4a:	xor    eax,0x26710467
  41cf4f:	mov    al,0x1d
  41cf51:	ror    edx,0x7e
  41cf54:	jno    0x41cf70
  41cf56:	fild   WORD PTR [edx]
  41cf58:	lea    edi,[esi+esi*8+0x16]
  41cf5c:	int    0xc2
  41cf5e:	sbb    ecx,edx
  41cf60:	iret   
  41cf61:	(bad)  
  41cf62:	loope  0x41cf0c
  41cf64:	iret   
  41cf65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf66:	mov    edx,?
  41cf68:	pusha  
  41cf69:	(bad)
  41cf6c:	adc    DWORD PTR [edx-0x6bc5e0ea],ecx
  41cf72:	mov    eax,0x6533d836
  41cf77:	mov    dl,0x4c
  41cf79:	or     ecx,ebx
  41cf7b:	in     al,0xa3
  41cf7d:	or     al,0x5
  41cf7f:	cmp    al,0xc3
  41cf81:	(bad)  
  41cf82:	xchg   ecx,eax
  41cf83:	jmp    0x41d002
  41cf85:	fs push ds
  41cf87:	dec    eax
  41cf88:	mov    ch,0x7b
  41cf8a:	jo     0x41cf4b
  41cf8c:	sub    al,0x78
  41cf8e:	cmp    ebx,DWORD PTR [ecx+0x30411188]
  41cf94:	lds    eax,FWORD PTR cs:[ebx-0x18d9a1a5]
  41cf9b:	inc    BYTE PTR [ecx-0x14b3d8f8]
  41cfa1:	(bad)  
  41cfa2:	ret    
  41cfa3:	shl    esp,0x8c
  41cfa6:	cmp    eax,0x29b25041
  41cfab:	dec    edi
  41cfac:	xchg   esi,eax
  41cfad:	add    dl,BYTE PTR [edx]
  41cfaf:	fwait
  41cfb0:	mov    WORD PTR [ecx-0x31],es
  41cfb3:	xchg   ebx,eax
  41cfb4:	pop    esi
  41cfb5:	inc    edx
  41cfb6:	(bad)
  41cfba:	in     al,dx
  41cfbb:	iret   
  41cfbc:	mov    bh,0x67
  41cfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfbf:	xchg   esp,eax
  41cfc0:	xchg   BYTE PTR [eax-0x14a72c2d],dh
  41cfc6:	es int3 
  41cfc8:	cld    
  41cfc9:	sub    ebp,DWORD PTR [edx+esi*1]
  41cfcc:	ins    DWORD PTR es:[edi],dx
  41cfcd:	xchg   ebp,eax
  41cfce:	sahf   
  41cfcf:	jo     0x41d03c
  41cfd1:	addr16 xchg edi,eax
  41cfd3:	aad    0xc5
  41cfd5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41cfd7:	dec    edx
  41cfd8:	mov    ds:0x32e44a8c,al
  41cfdd:	mov    BYTE PTR [edx-0x77],ch
  41cfe0:	js     0x41cfa1
  41cfe2:	je     0x41cf97
  41cfe4:	jle    0x41d00d
  41cfe6:	and    BYTE PTR [eax-0x5d323b88],bl
  41cfec:	js     0x41cf78
  41cfee:	arpl   ax,si
  41cff0:	xor    esi,DWORD PTR [esi+0xb13f]
	...
  41cffe:	add    BYTE PTR [eax],al
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	xchg   ebp,eax
  41d00e:	xor    bh,BYTE PTR [ebx+0x14c14ed]
  41d014:	add    BYTE PTR [ebx-0x55fffffd],ch
  41d01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01b:	and    eax,0xdf038a9f
  41d020:	jl     0x41d075
  41d022:	jb     0x41cfce
  41d024:	fsubr  QWORD PTR [edi]
  41d026:	es xchg esp,eax
  41d028:	cld    
  41d029:	retf   
  41d02a:	lea    ecx,[ecx-0x2d30799c]
  41d030:	out    dx,eax
  41d031:	push   cs
  41d032:	popa   
  41d033:	and    BYTE PTR [esp+ebp*4],dh
  41d036:	dec    ebp
  41d037:	jl     0x41d01a
  41d039:	and    BYTE PTR [ebp+eiz*1-0x5a2b22e1],0xb9
  41d041:	retf   0x26fb
  41d044:	push   es
  41d045:	jmp    0x9ef21a90
  41d04a:	bound  eax,QWORD PTR [ebx+0x7cfa1d9]
  41d050:	stos   BYTE PTR es:[edi],al
  41d051:	out    dx,eax
  41d052:	jns    0x41d07c
  41d054:	cwde   
  41d055:	pop    edi
  41d056:	push   es
  41d057:	inc    ebx
  41d058:	lods   al,BYTE PTR ds:[esi]
  41d059:	pop    edi
  41d05a:	jle    0x41d0d4
  41d05c:	push   eax
  41d05d:	(bad)  
  41d05e:	outs   dx,DWORD PTR ds:[esi]
  41d05f:	sub    ecx,DWORD PTR [edi+0x745785e6]
  41d065:	pushf  
  41d066:	mov    ebp,0xe38a1734
  41d06b:	icebp  
  41d06c:	add    al,0xc1
  41d06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d06f:	sub    DWORD PTR [ebp-0x5f],ebx
  41d072:	and    ah,dl
  41d074:	xor    DWORD PTR ds:0x790404e2,0xffffffe2
  41d07b:	cmp    DWORD PTR [ecx+0x4e5e932],0x933d281e
  41d085:	jmp    0x5b169cc0
  41d08a:	pop    ecx
  41d08b:	xor    eax,0x8fbc891c
  41d090:	mov    edi,DWORD PTR [esi]
  41d092:	sub    al,0x7
  41d094:	mov    ds:0xdf09fe13,al
  41d099:	lods   al,BYTE PTR ds:[esi]
  41d09a:	jg     0x41d0f4
  41d09c:	mov    ebx,0x1228eb1
  41d0a1:	mov    ds:0xd46bfa8a,eax
  41d0a6:	dec    esi
  41d0a7:	cdq    
  41d0a8:	sbb    ch,bh
  41d0aa:	push   edx
  41d0ab:	mov    eax,es
  41d0ad:	and    DWORD PTR [ebx-0x536165e9],0xd
  41d0b4:	jecxz  0x41d090
  41d0b6:	and    ch,BYTE PTR ds:0xe0b4e308
  41d0bc:	movsx  ecx,BYTE PTR [esp+edx*4]
  41d0c0:	mov    eax,es
  41d0c2:	ds jb  0x41d13a
  41d0c5:	dec    ebp
  41d0c6:	cmp    al,0xf3
  41d0c8:	lock mov WORD PTR [ebx+0x50cb95b0],ds
  41d0cf:	fild   WORD PTR [ecx+0x7c]
  41d0d2:	adc    BYTE PTR [eax+edi*2],ch
  41d0d5:	xchg   ecx,eax
  41d0d6:	xchg   esi,eax
  41d0d7:	push   edi
  41d0d8:	sbb    DWORD PTR [esi],edx
  41d0da:	mov    ch,0x4a
  41d0dc:	add    ebp,DWORD PTR [ecx]
  41d0de:	test   DWORD PTR [ebp-0x1e],edx
  41d0e1:	pop    eax
  41d0e2:	push   cs
  41d0e3:	les    edi,FWORD PTR ds:0xe6250799
  41d0e9:	xor    BYTE PTR [eax],ch
  41d0eb:	ds or  eax,0xd5105355
  41d0f1:	or     ebp,eax
  41d0f3:	retf   
  41d0f4:	(bad)  
  41d0f5:	das    
  41d0f6:	pop    ebp
  41d0f7:	xchg   esi,eax
  41d0f8:	cmp    ecx,esp
  41d0fa:	xor    DWORD PTR [edx+0x4c],eax
  41d0fd:	mov    ecx,0xbbf8a616
  41d102:	(bad)  
  41d103:	sbb    ecx,DWORD PTR [edi+0xc8eab22]
  41d109:	aas    
  41d10a:	push   edi
  41d10b:	cmc    
  41d10c:	ja     0x41d0c5
  41d10e:	pop    ss
  41d10f:	inc    ecx
  41d110:	test   BYTE PTR ds:0x1971db47,dl
  41d116:	jnp    0x41d15b
  41d118:	push   es
  41d119:	mov    ebx,0xc131e77f
  41d11e:	test   bl,al
  41d120:	mov    eax,ds:0xb4cf2fc7
  41d125:	pop    ss
  41d126:	aam    0x93
  41d128:	fsub   DWORD PTR [ecx-0x21]
  41d12b:	pusha  
  41d12c:	cmc    
  41d12d:	jns    0x41d11d
  41d12f:	xor    BYTE PTR [ebx+0x6829aa5b],0xf8
  41d136:	xchg   edi,eax
  41d137:	repz sti 
  41d139:	xor    al,0x46
  41d13b:	loope  0x41d137
  41d13d:	xor    bh,0x13
  41d140:	dec    ebp
  41d141:	fstp   st(3)
  41d143:	or     bh,al
  41d145:	out    dx,al
  41d146:	ds mov al,0xee
  41d149:	or     al,dh
  41d14b:	addr16 inc ebp
  41d14d:	inc    ecx
  41d14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14f:	push   esi
  41d150:	push   0x850f3266
  41d155:	mov    eax,ds:0x48fa54cc
  41d15a:	out    dx,al
  41d15b:	xor    BYTE PTR [ebp+0x76d9aaef],dh
  41d161:	mov    edx,0xcf0478a1
  41d166:	out    dx,eax
  41d167:	cmp    DWORD PTR [ebx-0x20a710e2],0x3703cc7d
  41d171:	push   ecx
  41d172:	adc    DWORD PTR [edx-0x51],0xffffffe3
  41d176:	jbe    0x41d1f6
  41d178:	xchg   ebp,eax
  41d179:	popf   
  41d17a:	sahf   
  41d17b:	push   0x50af89da
  41d180:	pop    es
  41d181:	adc    ch,BYTE PTR [ebp+ecx*8+0x5a]
  41d185:	cmp    ch,dh
  41d187:	js     0x41d1e1
  41d189:	pop    edi
  41d18a:	sub    dl,BYTE PTR [eax+0x8]
  41d18d:	pop    edi
  41d18e:	xor    al,0x73
  41d190:	push   ss
  41d191:	sub    ch,cl
  41d193:	jne    0x41d189
  41d195:	or     esi,DWORD PTR [esi+esi*4]
  41d198:	rcl    BYTE PTR es:[esi+ebx*8-0x10],1
  41d19d:	xchg   esi,eax
  41d19e:	sbb    edi,DWORD PTR [eax]
  41d1a0:	add    eax,0x68115cd
  41d1a5:	loope  0x41d13e
  41d1a7:	xchg   esp,eax
  41d1a8:	dec    edx
  41d1a9:	popf   
  41d1aa:	jecxz  0x41d1c1
  41d1ac:	sbb    al,0x43
  41d1ae:	adc    eax,0x51e29003
  41d1b3:	pushf  
  41d1b4:	mov    edx,0xc9a5a3cd
  41d1b9:	(bad)  
  41d1ba:	(bad)  
  41d1bb:	popf   
  41d1bc:	lea    edi,[ebp+0x96c7d45]
  41d1c2:	push   edx
  41d1c3:	xor    bh,BYTE PTR [esi]
  41d1c5:	mov    dh,0x5
  41d1c7:	arpl   di,cx
  41d1c9:	aas    
  41d1ca:	ret    0x53b6
  41d1cd:	out    dx,eax
  41d1ce:	stc    
  41d1cf:	and    al,0xda
  41d1d1:	fistp  WORD PTR es:[ebx-0x11]
  41d1d5:	sbb    BYTE PTR [ecx],al
  41d1d7:	push   ds
  41d1d8:	lods   eax,DWORD PTR ds:[esi]
  41d1d9:	dec    esp
  41d1da:	lea    ebx,[edx]
  41d1dc:	test   eax,0xbe7a311c
  41d1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1e2:	(bad)  
  41d1e3:	stc    
  41d1e4:	test   DWORD PTR [edx+0x59],0x2f0b7497
  41d1eb:	ins    DWORD PTR es:[edi],dx
  41d1ec:	mov    al,0x64
  41d1ee:	mov    bl,0x53
  41d1f0:	mov    WORD PTR [esi-0x2606fbbd],?
  41d1f6:	push   cs
  41d1f7:	push   ebp
  41d1f8:	add    ecx,DWORD PTR [ebx]
  41d1fa:	dec    ecx
  41d1fb:	aaa    
  41d1fc:	mov    esi,0x958018f3
  41d201:	sbb    cl,BYTE PTR [edi+0x3482664c]
  41d207:	xor    al,0x90
  41d209:	and    dh,dh
  41d20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d20c:	or     BYTE PTR [esi+0x69],cl
  41d20f:	push   esi
  41d210:	int    0x16
  41d212:	inc    esp
  41d213:	pusha  
  41d214:	sbb    eax,0xe26e21a2
  41d219:	xor    ebp,0x339ed9a2
  41d21f:	ret    0xcc12
  41d222:	mov    ebx,0x1ffd60be
  41d227:	call   0x1f64ffad
  41d22c:	(bad)  
  41d22d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d22e:	jp     0x41d2ab
  41d230:	retf   0xd088
  41d233:	jg     0x41d2a7
  41d235:	fcomp  QWORD PTR [ebp+eiz*8+0x51]
  41d239:	nop
  41d23a:	dec    ecx
  41d23b:	hlt    
  41d23c:	mov    edx,0x56d1ee48
  41d241:	fadd   QWORD PTR [eax]
  41d243:	mov    ah,0x23
  41d245:	jo     0x41d1ff
  41d247:	ret    0x1879
  41d24a:	stos   BYTE PTR es:[edi],al
  41d24b:	pushf  
  41d24c:	pop    esi
  41d24d:	cmp    DWORD PTR [ebp+0x41ef7626],ebp
  41d253:	mov    edi,0x96020335
  41d258:	adc    eax,0xda744e6b
  41d25d:	and    BYTE PTR [esi+0x69f7a43e],cl
  41d263:	adc    ch,BYTE PTR [ebp-0x3deff326]
  41d269:	push   es
  41d26a:	pop    ss
  41d26b:	adc    BYTE PTR ds:0x5502c6e8,dh
  41d271:	pop    edx
  41d272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d273:	mov    cl,dl
  41d275:	rol    BYTE PTR [eax],0x1
  41d278:	outs   dx,DWORD PTR ds:[esi]
  41d279:	and    eax,0x53b0c513
  41d27e:	and    al,ah
  41d280:	mov    eax,ds:0x6b44c458
  41d285:	fdivr  QWORD PTR [esi-0x67fec8eb]
  41d28b:	sbb    BYTE PTR [edx+esi*8+0x6e8b3e86],bl
  41d292:	add    esp,DWORD PTR [edi-0x78]
  41d295:	call   0x9aa4:0x27ec01f0
  41d29c:	add    ah,BYTE PTR [eax]
  41d29e:	dec    edi
  41d29f:	stos   BYTE PTR es:[edi],al
  41d2a0:	shr    ch,0xf6
  41d2a3:	(bad)  
  41d2a4:	push   0x72
  41d2a6:	js     0x41d2e6
  41d2a8:	push   ss
  41d2a9:	jecxz  0x41d287
  41d2ab:	outs   dx,DWORD PTR ds:[esi]
  41d2ac:	pop    edx
  41d2ad:	cs adc al,0xac
  41d2b0:	inc    eax
  41d2b1:	push   es
  41d2b2:	cwde   
  41d2b3:	xchg   edx,eax
  41d2b4:	cmc    
  41d2b5:	jae    0x41d2d6
  41d2b7:	jge    0x41d28e
  41d2b9:	in     eax,dx
  41d2ba:	push   0x50
  41d2bc:	xchg   bh,cl
  41d2be:	out    0x1c,al
  41d2c0:	or     DWORD PTR [edi],ebp
  41d2c2:	xchg   ecx,eax
  41d2c3:	jge    0x41d2b5
  41d2c5:	mov    ecx,esi
  41d2c7:	pop    ebx
  41d2c8:	call   DWORD PTR [eax+ebx*4]
  41d2cb:	adc    dl,BYTE PTR [edx+0x49]
  41d2ce:	sbb    DWORD PTR [edi+0x3a62f47],edx
  41d2d4:	dec    esi
  41d2d5:	sbb    BYTE PTR [eax+0x5d],bh
  41d2d8:	aaa    
  41d2d9:	push   ds
  41d2da:	dec    ecx
  41d2db:	imul   edx,DWORD PTR [ecx+0x61],0x6f
  41d2df:	adc    ah,BYTE PTR [ecx+0x7703e979]
  41d2e5:	mov    ds:0xd04e84c2,al
  41d2ea:	adc    al,0x4b
  41d2ec:	mov    ecx,0x15101ef3
  41d2f1:	mov    edi,0xa46e1384
  41d2f6:	or     DWORD PTR [edx-0x643adb57],eax
  41d2fc:	call   0x60a3:0xbe9e819
  41d303:	mov    esp,0xd609dab1
  41d308:	push   cs
  41d309:	scas   eax,DWORD PTR es:[edi]
  41d30a:	fldcw  WORD PTR [edx-0x150b49c7]
  41d310:	jg     0x41d388
  41d312:	in     eax,0x7a
  41d314:	push   es
  41d315:	lods   eax,DWORD PTR ds:[esi]
  41d316:	sbb    DWORD PTR [edi+edi*4],eax
  41d319:	aad    0x23
  41d31b:	and    DWORD PTR [edi+0x4c1ca2fe],esp
  41d321:	mov    ds:0xadcf95e9,eax
  41d326:	call   0x8c2f:0xfa15b175
  41d32d:	inc    eax
  41d32e:	add    eax,0x73478dbc
  41d333:	push   ebp
  41d334:	add    eax,0x79cd03c4
  41d339:	and    BYTE PTR [ebp+edi*2-0x62c0859b],dh
  41d340:	inc    ecx
  41d341:	inc    ebp
  41d342:	fiadd  DWORD PTR [ecx+0x71]
  41d345:	inc    ebp
  41d346:	in     eax,0xd3
  41d348:	les    ebx,FWORD PTR [edi]
  41d34a:	push   edi
  41d34b:	jae    0x41d2d0
  41d34d:	lea    edi,[esi-0x7eb30a8c]
  41d353:	jae    0x41d3cd
  41d355:	mov    bh,bh
  41d357:	push   0x31
  41d359:	jecxz  0x41d36b
  41d35b:	mov    esi,0x453a184b
  41d360:	cmp    eax,0xf7a79a17
  41d365:	sub    al,0xf9
  41d367:	push   ds
  41d368:	pop    esp
  41d369:	ins    DWORD PTR es:[edi],dx
  41d36a:	test   DWORD PTR [ebx-0x39684e2b],esi
  41d370:	push   ss
  41d371:	mov    WORD PTR [eax+0x28d9f0d1],ss
  41d377:	test   al,0xd3
  41d379:	(bad)  
  41d37a:	push   ecx
  41d37b:	add    dh,BYTE PTR [edi+0x6e8e7044]
  41d381:	jae    0x41d3f9
  41d383:	ins    BYTE PTR es:[edi],dx
  41d384:	pop    ss
  41d385:	shl    DWORD PTR [edi+0x74],1
  41d388:	aam    0x45
  41d38a:	or     eax,ebx
  41d38c:	add    al,0xcd
  41d38e:	and    dl,BYTE PTR ss:[edi+0x7e]
  41d392:	push   esp
  41d393:	mov    ds:0xa57de4fc,al
  41d398:	jp     0x41d405
  41d39a:	enter  0x3f02,0x68
  41d39e:	push   0x6345c819
  41d3a3:	add    edx,edx
  41d3a5:	mov    al,0xf5
  41d3a7:	dec    ebp
  41d3a8:	jmp    0x39c45b24
  41d3ad:	pusha  
  41d3ae:	xor    al,0x34
  41d3b0:	xchg   esp,eax
  41d3b1:	test   eax,0x147c150a
  41d3b6:	lahf   
  41d3b7:	jns    0x41d3a8
  41d3b9:	fdivr  QWORD PTR [edi]
  41d3bb:	fisttp QWORD PTR [edx]
  41d3bd:	mov    bh,BYTE PTR [ebx+0x60]
  41d3c0:	mov    eax,0xfbf8c4
	...
  41d3d1:	call   0xbef9:0xcff14f56
  41d3d8:	jg     0x41d423
  41d3da:	push   ss
  41d3db:	jecxz  0x41d387
  41d3dd:	sub    al,0x40
  41d3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3e0:	pop    ecx
  41d3e1:	mov    edi,0xab00014f
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [esi+0x33865156],ch
  41d3ee:	dec    edi
  41d3ef:	add    al,0x54
  41d3f1:	sbb    eax,0xda49df3c
  41d3f6:	mov    ebp,0xa1042151
  41d3fb:	pop    esi
  41d3fc:	push   0xb362ef0f
  41d401:	je     0x15118622
  41d407:	xchg   esp,eax
  41d408:	jns    0x41d42a
  41d40a:	mov    cl,0xce
  41d40c:	out    dx,al
  41d40d:	outs   dx,DWORD PTR ds:[esi]
  41d40e:	icebp  
  41d40f:	add    edi,ecx
  41d411:	inc    esi
  41d412:	pop    ecx
  41d413:	or     eax,DWORD PTR [esi+0x6b]
  41d416:	jp     0x41d491
  41d418:	adc    al,0xd9
  41d41a:	je     0x41d436
  41d41c:	hlt    
  41d41d:	mov    ecx,0x923e0755
  41d422:	dec    eax
  41d423:	in     al,dx
  41d424:	add    DWORD PTR [edx+0x71],ecx
  41d427:	jns    0x41d45e
  41d429:	cmp    BYTE PTR [ebx],al
  41d42b:	rol    DWORD PTR [ebx],cl
  41d42d:	add    ch,BYTE PTR [esi]
  41d42f:	enter  0xd06,0x58
  41d433:	jp     0x41d472
  41d435:	inc    edi
  41d436:	sbb    eax,0xeeaf097f
  41d43b:	lea    ebx,[ebx]
  41d43d:	pop    es
  41d43e:	sar    dh,cl
  41d440:	ds ins BYTE PTR es:[edi],dx
  41d442:	pusha  
  41d443:	retf   
  41d444:	sub    eax,0x54a2b28b
  41d449:	loop   0x41d409
  41d44b:	sub    eax,0x5cfebebc
  41d450:	js     0x41d458
  41d452:	mov    ds:0xc9b2ffc8,al
  41d457:	add    edx,DWORD PTR [ebx+0x6248981e]
  41d45d:	xlat   BYTE PTR ds:[ebx]
  41d45e:	dec    ebp
  41d45f:	xor    al,bh
  41d461:	nop
  41d462:	mov    edx,0x67a67eaf
  41d467:	pop    edx
  41d468:	mov    bl,0xe9
  41d46a:	jge    0x41d44c
  41d46c:	leave  
  41d46d:	leave  
  41d46e:	pop    edi
  41d46f:	cmp    al,0x66
  41d471:	and    ch,0xb8
  41d474:	int    0xb7
  41d476:	mov    ds:0xc5805e9c,al
  41d47b:	and    eax,0xa1cf8aad
  41d480:	or     al,0x93
  41d482:	imul   esp,DWORD PTR [ebp-0x28],0xffffffdf
  41d486:	or     al,0x54
  41d488:	lahf   
  41d489:	dec    esp
  41d48a:	test   BYTE PTR [esp+esi*1-0x2f8ed114],al
  41d491:	fdiv   QWORD PTR [eax]
  41d493:	and    BYTE PTR [ebx-0x25884fe1],al
  41d499:	ret    
  41d49a:	xor    ebx,esi
  41d49c:	pop    esi
  41d49d:	dec    ecx
  41d49e:	scas   eax,DWORD PTR es:[edi]
  41d49f:	sub    edx,DWORD PTR [ebx+edx*8]
  41d4a2:	jge    0x41d439
  41d4a4:	or     DWORD PTR [esp+edi*8-0x65bf0bc7],ebp
  41d4ab:	add    al,0xb7
  41d4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ae:	popfw  
  41d4b0:	ficom  DWORD PTR [ecx+ebx*4+0x13]
  41d4b4:	xor    DWORD PTR [esi+0x288ec684],ebx
  41d4ba:	and    esi,ebx
  41d4bc:	scas   eax,DWORD PTR es:[edi]
  41d4bd:	neg    BYTE PTR [esi-0x4c]
  41d4c0:	pop    edi
  41d4c1:	fimul  WORD PTR [eax+0x41]
  41d4c4:	retf   0xc738
  41d4c7:	fisub  WORD PTR [ecx]
  41d4c9:	stos   BYTE PTR es:[edi],al
  41d4ca:	inc    eax
  41d4cb:	dec    edi
  41d4cc:	jecxz  0x41d500
  41d4ce:	es add ah,bl
  41d4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4d2:	sub    eax,0xaea0fc25
  41d4d7:	shl    BYTE PTR [edx],1
  41d4d9:	xchg   ecx,eax
  41d4da:	push   edi
  41d4db:	pop    esi
  41d4dc:	test   esi,esi
  41d4de:	leave  
  41d4df:	xchg   ebx,eax
  41d4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e1:	imul   ebx,DWORD PTR [eax+0x15],0xffffffca
  41d4e5:	imul   ebx,DWORD PTR [ebp-0x32a6c5b2],0xb151fdc4
  41d4ef:	mov    ebx,0xca1573e7
  41d4f4:	js     0x41d4ce
  41d4f6:	sbb    al,0x60
  41d4f8:	xor    BYTE PTR [esi-0x4f],bl
  41d4fb:	jmp    0xb7b72c34
  41d500:	jmp    0x41d4e3
  41d502:	inc    esi
  41d503:	mov    eax,0x1b164992
  41d508:	xlat   BYTE PTR ds:[ebx]
  41d509:	stc    
  41d50a:	mov    ah,0x2f
  41d50c:	(bad)  
  41d50e:	mov    al,ds:0xcbfccdae
  41d513:	(bad)
  41d516:	sbb    ch,BYTE PTR [edx+0x7b0ba045]
  41d51c:	mov    al,0x98
  41d51e:	gs inc ebp
  41d520:	outs   dx,DWORD PTR ds:[esi]
  41d521:	shl    BYTE PTR [edi],0x81
  41d524:	sbb    al,0x6c
  41d526:	pop    esi
  41d527:	lods   al,BYTE PTR ds:[esi]
  41d528:	(bad)  [eax]
  41d52a:	push   ebp
  41d52b:	daa    
  41d52c:	sbb    al,BYTE PTR [ecx-0x55]
  41d52f:	mov    ecx,0x12c03102
  41d534:	inc    ebp
  41d535:	sub    esi,DWORD PTR [ecx-0x37]
  41d538:	mov    bh,0x69
  41d53a:	imul   edx,esp,0x98079d39
  41d540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d541:	pmaddwd mm5,QWORD PTR [ebx+0x770a692c]
  41d548:	call   0xae5e2923
  41d54d:	adc    eax,0x9ecd85ac
  41d552:	test   al,0xd
  41d554:	test   al,0xf4
  41d556:	pushf  
  41d557:	pop    esi
  41d558:	cmp    al,0xd5
  41d55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d55b:	scas   eax,DWORD PTR es:[edi]
  41d55c:	lock fnsave [ecx+0x56fbedd6]
  41d563:	and    ebp,DWORD PTR [ecx+0x56]
  41d566:	xor    al,BYTE PTR [ebx]
  41d568:	das    
  41d569:	push   edx
  41d56a:	pop    edx
  41d56b:	fsubr  st,st(7)
  41d56d:	popf   
  41d56e:	ja     0x41d52c
  41d570:	push   esp
  41d571:	adc    esi,eax
  41d573:	out    0x17,eax
  41d575:	fisub  WORD PTR [edi+0x5b83413e]
  41d57b:	fnstsw WORD PTR [edx]
  41d57d:	daa    
  41d57e:	xlat   BYTE PTR ds:[ebx]
  41d57f:	(bad)  
  41d580:	fwait
  41d581:	mov    bl,ah
  41d583:	mov    al,0x1f
  41d585:	pop    es
  41d586:	call   0x8aa5aa38
  41d58b:	inc    esi
  41d58c:	sub    BYTE PTR [esi],dh
  41d58e:	xchg   esp,eax
  41d58f:	imul   eax,DWORD PTR [ebx],0xc1eb0c8f
  41d595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d596:	ss sbb edx,ecx
  41d599:	retf   
  41d59a:	sub    DWORD PTR [ebx-0x45],0x18
  41d59e:	shr    BYTE PTR [ecx+0x1c817730],0xe5
  41d5a5:	lods   eax,DWORD PTR ds:[esi]
  41d5a6:	dec    ecx
  41d5a7:	pop    ds
  41d5a8:	pop    esi
  41d5a9:	int3   
  41d5aa:	sbb    DWORD PTR [ebx],esp
  41d5ac:	cmp    DWORD PTR [edx],eax
  41d5ae:	adc    DWORD PTR [eax-0x2b],eax
  41d5b1:	inc    edi
  41d5b2:	not    DWORD PTR [ebx-0x62a6308c]
  41d5b8:	stos   DWORD PTR es:[edi],eax
  41d5b9:	hlt    
  41d5ba:	sub    dl,BYTE PTR [eax+0x5dc541c9]
  41d5c0:	sar    BYTE PTR [ecx],0x61
  41d5c3:	stos   BYTE PTR es:[edi],al
  41d5c4:	dec    edx
  41d5c5:	mul    DWORD PTR [edx]
  41d5c7:	imul   ebx,DWORD PTR [eax],0x49
  41d5ca:	pusha  
  41d5cb:	pusha  
  41d5cc:	sbb    esp,esi
  41d5ce:	in     al,0x4f
  41d5d0:	sahf   
  41d5d1:	push   0xfffffff2
  41d5d3:	jae    0x41d5d6
  41d5d5:	or     al,0xb7
  41d5d7:	xchg   ecx,eax
  41d5d8:	mov    ch,0xdb
  41d5da:	or     DWORD PTR [ebx-0x2bc87497],esp
  41d5e0:	inc    edx
  41d5e1:	push   ss
  41d5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5e3:	sub    BYTE PTR [ebx+0x52],ah
  41d5e6:	sub    BYTE PTR [ebx+edi*1+0x2f],bl
  41d5ea:	jmp    0x41d56d
  41d5ec:	mov    edi,0xfa1d941f
  41d5f1:	jns    0x41d5dd
  41d5f3:	or     al,0x8
  41d5f5:	mov    ah,0x74
  41d5f7:	lods   al,BYTE PTR ds:[esi]
  41d5f8:	inc    edx
  41d5f9:	sub    DWORD PTR [ecx-0x212be458],edx
  41d5ff:	jne    0x41d63e
  41d601:	in     eax,dx
  41d602:	or     ah,BYTE PTR [edi+0x72d33f93]
  41d608:	adc    BYTE PTR [edx+0x55],ah
  41d60b:	jmp    0xb4b1:0x91a7f637
  41d612:	mov    ecx,0x22c5c26e
  41d617:	xchg   edi,eax
  41d618:	(bad)  
  41d619:	mov    edx,0xf1c4c85e
  41d61e:	inc    DWORD PTR [eax+0x71]
  41d621:	stos   BYTE PTR es:[edi],al
  41d622:	fld    DWORD PTR [eax+0x6]
  41d625:	test   BYTE PTR [edi-0x3],bh
  41d628:	es mov bh,0x85
  41d62b:	jns    0x41d653
  41d62d:	push   edi
  41d62e:	or     edi,ebx
  41d630:	and    BYTE PTR [ecx+0x35bf64b3],al
  41d636:	mov    ds:0x8d4a56b1,al
  41d63b:	imul   esp,DWORD PTR es:[ebx+0x42722f33],0x63
  41d643:	repnz mov WORD PTR [eax],es
  41d646:	xchg   ebp,eax
  41d647:	in     eax,0xc1
  41d649:	fcomp  QWORD PTR [edx+ebp*8+0x36cdc2a5]
  41d650:	scas   eax,DWORD PTR es:[edi]
  41d651:	dec    edx
  41d652:	jle    0x41d671
  41d654:	lods   al,BYTE PTR ds:[esi]
  41d655:	std    
  41d656:	sub    al,0x5f
  41d658:	dec    ebx
  41d659:	(bad)  
  41d65a:	cmp    DWORD PTR [esi+0x3f],edx
  41d65d:	sub    dh,bh
  41d65f:	xor    cl,ah
  41d661:	nop
  41d662:	enter  0xd415,0xbc
  41d666:	xlat   BYTE PTR ds:[ebx]
  41d667:	inc    ebp
  41d668:	lds    edi,FWORD PTR [esi+0x75]
  41d66b:	test   eax,0xc390fe55
  41d670:	mov    eax,0xb2ca00f2
  41d675:	daa    
  41d676:	test   eax,0x9c10a3ca
  41d67b:	ret    0x16cc
  41d67e:	push   0x14ff750d
  41d683:	(bad)  
  41d684:	call   0x7347:0xaedda3c7
  41d68b:	test   DWORD PTR [ebp+0xf],ebp
  41d68e:	int3   
  41d68f:	xchg   ecx,eax
  41d690:	call   ebx
  41d692:	test   BYTE PTR [ebp+0x6929feb0],bl
  41d698:	int    0xdd
  41d69a:	loop   0x41d698
  41d69c:	shl    BYTE PTR cs:[esi+0x52],1
  41d6a0:	outs   dx,BYTE PTR ds:[esi]
  41d6a1:	in     al,0x38
  41d6a3:	sub    esi,DWORD PTR [ecx-0x33787c96]
  41d6a9:	out    0xa2,al
  41d6ab:	sbb    BYTE PTR [edx],bl
  41d6ad:	(bad)  
  41d6ae:	sbb    DWORD PTR [eax+0x450c99da],ebp
  41d6b4:	sbb    DWORD PTR [ecx],ebp
  41d6b6:	push   DWORD PTR [edi]
  41d6b8:	in     eax,0xcb
  41d6ba:	fs push edx
  41d6bc:	out    0x41,eax
  41d6be:	js     0x41d6fb
  41d6c0:	jge    0x41d645
  41d6c2:	add    BYTE PTR [esi+0x359c8197],cl
  41d6c8:	xchg   DWORD PTR [ebp-0x3a],edx
  41d6cb:	aaa    
  41d6cc:	outs   dx,BYTE PTR ds:[esi]
  41d6cd:	sbb    eax,0x6c0ed516
  41d6d2:	mov    eax,0xab00dd98
  41d6d7:	out    0x66,eax
  41d6d9:	sti    
  41d6da:	and    ebp,esi
  41d6dc:	outs   dx,DWORD PTR ds:[esi]
  41d6dd:	jl     0x41d6b6
  41d6df:	sbb    DWORD PTR ds:0x178339c4,ecx
  41d6e5:	adc    ebp,esi
  41d6e7:	cdq    
  41d6e8:	out    dx,eax
  41d6e9:	test   edi,esi
  41d6eb:	inc    esp
  41d6ec:	jns    0x41d6d1
  41d6ee:	outs   dx,BYTE PTR ds:[esi]
  41d6ef:	mov    ds:0x59d1dbc3,eax
  41d6f4:	inc    eax
  41d6f5:	sti    
  41d6f6:	dec    eax
  41d6f7:	daa    
  41d6f8:	mov    al,BYTE PTR [ebp+0x64]
  41d6fb:	ds ja  0x41d6d7
  41d6fe:	daa    
  41d6ff:	push   cs
  41d700:	inc    edi
  41d701:	mov    BYTE PTR [edx+esi*4-0x77b129fb],al
  41d708:	xchg   DWORD PTR ds:0x3521e02a,edi
  41d70e:	push   0x14b14a5f
  41d713:	dec    edx
  41d714:	inc    esp
  41d716:	and    BYTE PTR [esi+0x70],0x86
  41d71a:	aaa    
  41d71b:	dec    esp
  41d71c:	push   eax
  41d71d:	je     0x41d771
  41d71f:	or     cl,BYTE PTR [esi+0x56375931]
  41d725:	and    bh,dl
  41d727:	cli    
  41d728:	out    0x53,eax
  41d72a:	jne    0x41d726
  41d72c:	repnz mov esp,0xf0306e23
  41d732:	outs   dx,DWORD PTR ds:[esi]
  41d733:	dec    eax
  41d734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d735:	imul   edx,DWORD PTR [edx],0xd53a8c1c
  41d73b:	aas    
  41d73c:	or     cl,dh
  41d73e:	mov    ebx,0xab524ffd
  41d743:	aas    
  41d744:	iret   
  41d745:	sub    al,0x58
  41d747:	mov    DWORD PTR [edi+0x7f],edx
  41d74a:	ds stc 
  41d74c:	in     eax,dx
  41d74d:	xchg   edx,eax
  41d74e:	jg     0x41d73f
  41d750:	mul    DWORD PTR [edi+ebp*4-0x70851d2c]
  41d757:	dec    edx
  41d758:	or     BYTE PTR [ecx],ah
  41d75a:	adc    dl,BYTE PTR [edi-0x6597e3bd]
  41d760:	adc    bh,bl
  41d762:	fs adc esi,ebp
  41d765:	pushf  
  41d766:	daa    
  41d767:	popa   
  41d768:	into   
  41d769:	sar    DWORD PTR [esi+0x58ae3852],0x63
  41d770:	ficomp DWORD PTR [ebp+0x43]
  41d773:	icebp  
  41d774:	jbe    0x41d707
  41d776:	push   ss
  41d777:	xchg   BYTE PTR [eax],dl
  41d779:	dec    eax
  41d77a:	push   eax
  41d77b:	jno    0x41d70c
  41d77d:	add    cl,dh
  41d77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d780:	ret    
  41d781:	mov    WORD PTR [ecx-0x7],es
  41d784:	out    0x46,al
  41d786:	aad    0x55
  41d788:	pop    ebp
  41d789:	xor    eax,0x44c603bc
  41d78e:	lahf   
  41d78f:	mov    ebx,0xad9013c7
	...
  41d7a0:	add    ah,bh
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x53f713a2],ah
  41d7af:	fs push ebp
  41d7b1:	push   0x53
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	stos   DWORD PTR es:[edi],eax
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [edi],dh
  41d7ba:	js     0x41d815
  41d7bc:	mov    dl,0x67
  41d7be:	shr    DWORD PTR [ecx-0x79],cl
  41d7c1:	call   0xbecfa2bc
  41d7c6:	clc    
  41d7c7:	mov    bl,0xab
  41d7c9:	xchg   esi,eax
  41d7ca:	daa    
  41d7cb:	xlat   BYTE PTR ds:[ebx]
  41d7cc:	jns    0x41d7ac
  41d7ce:	rcr    BYTE PTR [ebx+0x794de188],0xe9
  41d7d5:	cmc    
  41d7d6:	pop    edx
  41d7d7:	dec    eax
  41d7d8:	mov    WORD PTR [ebp-0x2f],gs
  41d7db:	mov    edx,0x164b55d5
  41d7e0:	int    0x78
  41d7e2:	fnsave ds:0x275059fd
  41d7e8:	aad    0xdb
  41d7ea:	call   0x205c0c1c
  41d7ef:	mov    esi,0x855b2504
  41d7f4:	fs call 0xa4136c1c
  41d7fa:	mov    WORD PTR [esi-0x7e4d1889],?
  41d800:	call   0x25d8:0xae19d429
  41d807:	cmp    al,0x51
  41d809:	jmp    0x8d05:0xe023998e
  41d810:	mov    ds:0x12feaf4d,eax
  41d815:	mov    eax,0xdda8b3a8
  41d81a:	pushf  
  41d81b:	test   DWORD PTR [ecx-0x51f0c80e],edi
  41d821:	jle    0x41d861
  41d823:	ss xor al,0xde
  41d826:	push   ebx
  41d827:	jno    0x41d819
  41d829:	in     eax,0xe3
  41d82b:	mov    ah,0x75
  41d82d:	jne    0x41d7ce
  41d82f:	(bad)
  41d834:	add    BYTE PTR [ebp-0x50],dl
  41d837:	add    eax,0xf131f3af
  41d83c:	sub    dl,dl
  41d83e:	sbb    al,0x82
  41d840:	mov    esp,0xe4a8eca
  41d845:	int    0xe9
  41d847:	ret    
  41d848:	scas   al,BYTE PTR es:[edi]
  41d849:	pop    edi
  41d84a:	addr16 retf 
  41d84c:	inc    esi
  41d84d:	dec    esi
  41d84e:	mov    esi,0xef9653cc
  41d853:	arpl   WORD PTR [esi+0x317d18c4],bp
  41d859:	cld    
  41d85a:	xchg   edi,eax
  41d85b:	mov    al,ds:0x4f7cf0d5
  41d860:	and    ch,dl
  41d862:	mov    ch,0xfc
  41d864:	ret    
  41d865:	daa    
  41d866:	jne    0x41d874
  41d868:	lea    ebx,[ebx+0x628878d7]
  41d86e:	arpl   WORD PTR [ebx-0x43ecc40c],bp
  41d874:	pop    ss
  41d875:	push   cs
  41d876:	pop    ds
  41d877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d878:	mov    eax,ds:0x912593d3
  41d87d:	cwde   
  41d87e:	jbe    0x41d823
  41d880:	or     bl,ch
  41d882:	pop    eax
  41d883:	or     ch,dh
  41d885:	jmp    0x460f:0x66399ddb
  41d88c:	mov    bh,0x16
  41d88e:	pop    es
  41d88f:	sbb    ecx,ebp
  41d891:	push   0x840619c0
  41d896:	popf   
  41d897:	ret    0xe36e
  41d89a:	jbe    0x41d906
  41d89c:	inc    esi
  41d89d:	pushf  
  41d89e:	fwait
  41d89f:	(bad)  
  41d8a0:	(bad)  
  41d8a1:	jecxz  0x41d8c9
  41d8a3:	push   edi
  41d8a4:	(bad)  
  41d8a5:	rcl    DWORD PTR [edi],cl
  41d8a7:	inc    ebx
  41d8a8:	mov    dh,0xbb
  41d8aa:	js     0x41d855
  41d8ac:	test   BYTE PTR [eax],0x9
  41d8af:	jo     0x41d84e
  41d8b1:	into   
  41d8b2:	mov    eax,0xd4d9cbe6
  41d8b7:	aam    0xb1
  41d8b9:	pop    ds
  41d8ba:	scas   eax,DWORD PTR es:[edi]
  41d8bb:	pop    edx
  41d8bc:	call   0x96d7311c
  41d8c1:	arpl   WORD PTR ds:0xb8ee23f3,cx
  41d8c7:	cmp    BYTE PTR [eax+0x69a7db11],dh
  41d8cd:	ds cs in eax,dx
  41d8d0:	xchg   ecx,esp
  41d8d2:	stos   BYTE PTR es:[edi],al
  41d8d3:	jmp    0x41d8ee
  41d8d5:	pop    edx
  41d8d6:	sahf   
  41d8d7:	fild   WORD PTR [ecx+0x70]
  41d8da:	sbb    eax,0x1643534c
  41d8df:	inc    esp
  41d8e0:	fs mov ecx,0x7fea1c4b
  41d8e6:	dec    esi
  41d8e7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d8e9:	add    bh,0xd2
  41d8ec:	add    bl,BYTE PTR [eax+0x0]
  41d8ef:	adc    edx,DWORD PTR [ebx-0x6021b721]
  41d8f5:	xor    al,BYTE PTR [ebp+0x6fb9e153]
  41d8fb:	leave  
  41d8fc:	loope  0x41d889
  41d8fe:	sbb    esi,DWORD PTR [ecx]
  41d900:	push   edi
  41d901:	xchg   esp,eax
  41d902:	mov    ah,0xc2
  41d904:	lds    ebx,FWORD PTR [ebx+0x4273f4bb]
  41d90a:	sar    BYTE PTR [ebp-0x4133e981],cl
  41d910:	ss xor ebx,eax
  41d913:	dec    edx
  41d914:	push   es
  41d915:	xor    esi,eax
  41d917:	add    dh,BYTE PTR ds:0x99dd51f2
  41d91d:	pop    esi
  41d91e:	pop    esp
  41d91f:	lods   al,BYTE PTR ds:[esi]
  41d920:	push   ebx
  41d921:	ficomp WORD PTR [ebp-0x3a308756]
  41d927:	ret    0x504c
  41d92a:	fbld   TBYTE PTR [eax+0x36]
  41d92d:	inc    ebx
  41d92e:	out    0x46,al
  41d930:	jb     0x41d904
  41d932:	add    esp,DWORD PTR [esi+0x75]
  41d935:	pop    edi
  41d936:	int3   
  41d937:	xor    ecx,esp
  41d939:	mov    esp,0xb1be8d
  41d93e:	jmp    0x7cb1bdd4
  41d943:	sar    DWORD PTR [esi+0x55],1
  41d946:	push   ecx
  41d947:	(bad)  
  41d949:	ret    0x1273
  41d94c:	mov    fs,WORD PTR ds:0x229fa771
  41d952:	mov    esp,gs
  41d954:	fcomp  st(3)
  41d956:	lods   eax,DWORD PTR ds:[esi]
  41d957:	xchg   ebp,eax
  41d958:	jmp    0x41d9ab
  41d95a:	cmp    eax,0x185efa61
  41d95f:	xchg   esi,eax
  41d960:	inc    edi
  41d961:	cld    
  41d962:	pop    ebp
  41d963:	outs   dx,BYTE PTR ds:[esi]
  41d964:	das    
  41d965:	push   0x7d
  41d967:	push   es
  41d968:	jmp    0x97c1d323
  41d96d:	icebp  
  41d96e:	adc    DWORD PTR [esi+0x24a45342],0x4c2424ff
  41d978:	loope  0x41d98d
  41d97a:	test   al,0x7
  41d97c:	ds das 
  41d97e:	nop
  41d97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d980:	dec    BYTE PTR [esi-0x3621995b]
  41d986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d987:	add    DWORD PTR [edx-0x1d],ecx
  41d98a:	cmp    bh,dl
  41d98c:	jecxz  0x41d93f
  41d98e:	loopne 0x41da0f
  41d990:	fbstp  TBYTE PTR [esi]
  41d992:	and    eax,0xef84d7ff
  41d997:	and    eax,0x240050bb
  41d99c:	mov    al,0xf5
  41d99e:	mov    eax,ds:0xabd10f21
  41d9a3:	pop    es
  41d9a4:	aad    0xf1
  41d9a6:	je     0x41d9c4
  41d9a8:	lods   eax,DWORD PTR ds:[si]
  41d9aa:	add    al,BYTE PTR [edx]
  41d9ac:	loope  0x41da22
  41d9ae:	(bad)  
  41d9af:	jge    0x41d99d
  41d9b1:	hlt    
  41d9b2:	xchg   ebp,eax
  41d9b3:	ja     0x41d9cf
  41d9b5:	popf   
  41d9b6:	lock mov dl,0x61
  41d9b9:	call   0x8f9:0x71802ae2
  41d9c0:	mov    dh,BYTE PTR [ecx-0x3f]
  41d9c3:	pop    eax
  41d9c4:	sbb    eax,DWORD PTR [edx+0x1a]
  41d9c7:	push   edi
  41d9c8:	jb     0x41d94a
  41d9ca:	loope  0x41d978
  41d9cc:	sbb    al,0x28
  41d9ce:	(bad)
  41d9d2:	out    0x4b,eax
  41d9d4:	lods   eax,DWORD PTR ds:[esi]
  41d9d5:	mov    es,WORD PTR [ebp+0x3068f73f]
  41d9db:	push   ebp
  41d9dc:	xor    bh,0xa9
  41d9df:	jmp    0x9d64:0xa964c983
  41d9e6:	inc    ecx
  41d9e7:	test   BYTE PTR [ebx+0x394ba4e0],0x6
  41d9ee:	dec    ebp
  41d9ef:	xlat   BYTE PTR ds:[ebx]
  41d9f0:	inc    ecx
  41d9f1:	or     bh,ah
  41d9f3:	xor    DWORD PTR [eax+0xb4a66b8],edx
  41d9f9:	jbe    0x41d97b
  41d9fb:	lods   al,BYTE PTR ds:[esi]
  41d9fc:	ror    ah,0x6d
  41d9ff:	aaa    
  41da00:	out    0x25,eax
  41da02:	sbb    ch,BYTE PTR [edi]
  41da04:	xchg   edx,eax
  41da05:	(bad)  
  41da06:	pop    edi
  41da07:	adc    al,BYTE PTR [eax+0x66]
  41da0a:	fbld   TBYTE PTR [ecx+0x58e55275]
  41da10:	sbb    eax,0x5c88b335
  41da15:	scas   al,BYTE PTR es:[edi]
  41da16:	xlat   BYTE PTR ds:[ebx]
  41da17:	dec    eax
  41da18:	mov    esi,0xadca8a14
  41da1d:	(bad)  [esi-0x648e6fe7]
  41da23:	sub    DWORD PTR [edi],esi
  41da25:	repnz add eax,0xe5ab92d7
  41da2b:	or     al,0x8d
  41da2d:	stos   DWORD PTR es:[edi],eax
  41da2e:	dec    eax
  41da2f:	repz mov ds,WORD PTR [edx+0x2d]
  41da33:	fstp   QWORD PTR [ebx-0x1c6ef238]
  41da39:	rcr    DWORD PTR [ecx],0xe6
  41da3c:	outs   dx,DWORD PTR ds:[esi]
  41da3d:	cmp    esi,DWORD PTR [ebp-0x26f2a730]
  41da43:	mov    ds:0x96ef7469,eax
  41da48:	mov    al,ds:0x37d8a145
  41da4d:	xor    al,0x74
  41da4f:	sub    DWORD PTR [edx+0x22],esi
  41da52:	cmp    al,0xb7
  41da54:	inc    ecx
  41da55:	(bad)  
  41da56:	jmp    0x35e4:0xdf131bce
  41da5d:	or     DWORD PTR [esi-0x4953909b],0xfffffff3
  41da64:	cli    
  41da65:	test   eax,0x30b3322b
  41da6a:	dec    ecx
  41da6b:	fistp  DWORD PTR [eax]
  41da6d:	sti    
  41da6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da6f:	inc    ebp
  41da70:	pop    ebp
  41da71:	fcom   QWORD PTR [ecx+0x76]
  41da74:	outs   dx,BYTE PTR ds:[esi]
  41da75:	data16 aam 0xda
  41da78:	or     DWORD PTR [ebx],ebp
  41da7a:	and    dh,dh
  41da7c:	push   ecx
  41da7d:	cmp    eax,0x88cdd2cb
  41da82:	ins    DWORD PTR es:[edi],dx
  41da83:	es push esi
  41da85:	xor    BYTE PTR [ebx+0xa],cl
  41da88:	cmp    ch,dl
  41da8a:	mov    al,ds:0xfc23dd18
  41da8f:	adc    bl,BYTE PTR [eax+esi*1+0x10]
  41da93:	mov    ebx,0x64fa8068
  41da98:	int3   
  41da99:	mov    ds:0xe297f6eb,eax
  41da9e:	mov    ebp,eax
  41daa0:	bound  ecx,QWORD PTR [edi-0x3fc6c75b]
  41daa6:	sbb    dh,dl
  41daa8:	mov    ds:0x2205de51,eax
  41daad:	dec    edx
  41daae:	sbb    BYTE PTR ss:[ecx],0x2a
  41dab2:	stos   DWORD PTR es:[edi],eax
  41dab3:	das    
  41dab4:	jae    0x41da8a
  41dab6:	clc    
  41dab7:	xchg   edx,eax
  41dab8:	and    BYTE PTR [ebp+0x1d139a00],ah
  41dabe:	std    
  41dabf:	data16 mov dl,0x78
  41dac2:	pop    ebp
  41dac3:	(bad)  
  41dac4:	push   ebp
  41dac5:	mov    dl,0xf5
  41dac7:	test   al,0x3
  41dac9:	bound  esp,QWORD PTR [edi-0x6e]
  41dacc:	pop    eax
  41dacd:	in     al,0x7a
  41dacf:	jmp    0xd4cefc7f
  41dad4:	cmp    DWORD PTR [esi+0x10],esi
  41dad7:	and    DWORD PTR [ecx],eax
  41dad9:	sub    eax,0xb5844e1e
  41dade:	push   cs
  41dadf:	adc    dl,bh
  41dae1:	hlt    
  41dae2:	xchg   edi,eax
  41dae3:	add    esp,DWORD PTR [ecx-0x771b9cad]
  41dae9:	adc    al,0x86
  41daeb:	test   cl,dh
  41daed:	and    DWORD PTR ds:0xfa66336c,edi
  41daf3:	cs cmp eax,0xaaf13e3a
  41daf9:	fistp  QWORD PTR ss:[esi+0x24]
  41dafd:	cwde   
  41dafe:	shr    ebp,0x12
  41db01:	add    ah,cl
  41db03:	icebp  
  41db04:	(bad)  
  41db05:	xlat   BYTE PTR ds:[ebx]
  41db06:	cmp    esp,ebp
  41db08:	js     0x41dada
  41db0a:	adc    ebx,DWORD PTR [esi+0x59]
  41db0d:	or     eax,0x5e3374ba
  41db12:	(bad)  
  41db13:	or     DWORD PTR [ebx],edi
  41db15:	mov    cl,0xd0
  41db17:	fild   DWORD PTR [edx+0x27]
  41db1a:	aad    0x4
  41db1c:	into   
  41db1d:	leave  
  41db1e:	loop   0x41db69
  41db20:	mov    al,ds:0xb3028296
  41db25:	push   ecx
  41db26:	cli    
  41db27:	out    dx,al
  41db28:	push   0xffffffa4
  41db2a:	add    ah,bl
  41db2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db2d:	mov    ah,BYTE PTR [ecx-0x233790eb]
  41db33:	rol    DWORD PTR [edx-0x7c],0xef
  41db37:	inc    edx
  41db38:	jbe    0x41db8f
  41db3a:	loope  0x41db1d
  41db3c:	arpl   WORD PTR [eax+0xc],bx
  41db3f:	loope  0x41daf7
  41db41:	cwde   
  41db42:	retf   
  41db43:	std    
  41db44:	push   eax
  41db45:	dec    edx
  41db46:	adc    al,0x2a
  41db48:	shr    ah,1
  41db4a:	mov    edi,0xa9783c29
  41db4f:	(bad)  
  41db50:	xchg   cl,cl
  41db52:	sub    eax,0x2022cd02
  41db57:	ja     0x41db47
  41db59:	cmp    DWORD PTR [ecx],esi
  41db5b:	and    dh,BYTE PTR [esi-0x23]
  41db5e:	retf   0x115
  41db61:	mov    es,WORD PTR [edi+eax*8+0x0]
	...
  41db71:	inc    ecx
  41db72:	out    dx,eax
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x1fe8d962
  41db80:	adc    DWORD PTR ds:0xab000157,edx
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [ebp+0x2b],bh
  41db8b:	sub    BYTE PTR [eax],al
  41db8d:	inc    edx
  41db8e:	mov    al,BYTE PTR [eax]
  41db90:	out    dx,al
  41db91:	fdivr  st(4),st
  41db93:	push   ds
  41db94:	imul   esp,DWORD PTR [esi],0xffffffe9
  41db97:	or     BYTE PTR [ecx],ah
  41db99:	push   ebx
  41db9a:	in     al,0x6f
  41db9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db9d:	jns    0x41dbbf
  41db9f:	adc    edx,DWORD PTR [eax-0x25]
  41dba2:	add    DWORD PTR [edi-0x81d8a90],ebx
  41dba8:	cmp    al,0xa5
  41dbaa:	dec    ecx
  41dbab:	and    al,0x6f
  41dbad:	push   ss
  41dbae:	daa    
  41dbaf:	imul   ecx,DWORD PTR [edi],0x4d
  41dbb2:	(bad)  
  41dbb3:	dec    esp
  41dbb4:	inc    esp
  41dbb5:	lods   al,BYTE PTR ds:[esi]
  41dbb6:	xchg   esp,eax
  41dbb7:	dec    eax
  41dbb8:	imul   BYTE PTR [ebp+0x16651712]
  41dbbe:	jg     0x41db5d
  41dbc0:	jmp    0xc9b8d9e2
  41dbc5:	dec    edx
  41dbc6:	push   esi
  41dbc7:	punpckldq mm0,DWORD PTR [edx-0xd2ae5b]
  41dbce:	rcr    DWORD PTR [ecx+0x4b],1
  41dbd1:	mov    dl,0x66
  41dbd3:	add    ch,0x49
  41dbd6:	xor    DWORD PTR ds:0x8752c558,0x6f59804f
  41dbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe1:	data16 je 0x41db97
  41dbe4:	jp     0x41db9c
  41dbe6:	dec    esi
  41dbe7:	mov    ah,0x2f
  41dbe9:	outs   dx,DWORD PTR ds:[esi]
  41dbea:	jge    0x41dc67
  41dbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbed:	mov    bh,0x9
  41dbef:	adc    DWORD PTR [esi-0x2],eax
  41dbf2:	adc    esp,DWORD PTR [ecx]
  41dbf4:	mov    DWORD PTR [edx],edx
  41dbf6:	scas   al,BYTE PTR es:[edi]
  41dbf7:	retf   
  41dbf8:	pop    edx
  41dbf9:	scas   al,BYTE PTR es:[edi]
  41dbfa:	dec    esi
  41dbfb:	hlt    
  41dbfc:	ja     0x41dc05
  41dbfe:	es or  al,0x19
  41dc01:	fwait
  41dc02:	mov    edx,0xc663b04
  41dc07:	inc    eax
  41dc08:	pop    es
  41dc09:	int3   
  41dc0a:	cmp    edx,ebx
  41dc0c:	xchg   edx,eax
  41dc0d:	in     eax,0xbd
  41dc0f:	sbb    eax,0xb0673ac1
  41dc14:	popa   
  41dc15:	mov    bh,0x52
  41dc17:	mov    ds:0x19fcce01,al
  41dc1c:	push   esi
  41dc1d:	xor    DWORD PTR [eax+0x9c40d71],ecx
  41dc23:	loopne 0x41dbf2
  41dc25:	jbe    0x41dc0e
  41dc27:	mov    ebx,0xd15e7894
  41dc2c:	inc    edi
  41dc2d:	inc    edi
  41dc2e:	jl     0x41dbf0
  41dc30:	popa   
  41dc31:	ret    
  41dc32:	and    al,0xaa
  41dc34:	outs   dx,BYTE PTR ds:[esi]
  41dc35:	ja     0x41dbbf
  41dc37:	iret   
  41dc38:	or     al,0xc6
  41dc3a:	jnp    0x41dcaa
  41dc3c:	mov    ecx,0x912f9f0b
  41dc41:	ins    DWORD PTR es:[edi],dx
  41dc42:	adc    DWORD PTR [esi],eax
  41dc44:	ret    0xd4c0
  41dc47:	cmp    ch,cl
  41dc49:	ja     0x41dbff
  41dc4b:	inc    edx
  41dc4c:	fisttp WORD PTR [edi-0x72]
  41dc4f:	pop    ebx
  41dc50:	pusha  
  41dc51:	in     al,0xd0
  41dc53:	das    
  41dc54:	enter  0x2e4,0x6
  41dc58:	cs jmp 0x3c2:0x6007f881
  41dc60:	test   al,0x2b
  41dc63:	je     0x41dc9e
  41dc65:	sbb    DWORD PTR [esi-0x6e],edi
  41dc68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc69:	sub    dh,BYTE PTR [ecx-0x13723310]
  41dc6f:	out    dx,al
  41dc70:	call   0x5662ed52
  41dc75:	dec    ecx
  41dc76:	add    ch,cl
  41dc78:	add    BYTE PTR [ebx+eiz*4],dh
  41dc7b:	pushaw 
  41dc7d:	or     ah,bh
  41dc7f:	xor    ah,BYTE PTR [ecx-0x17]
  41dc82:	or     DWORD PTR [esp+eiz*2+0x4d],ecx
  41dc86:	mov    bh,0x11
  41dc88:	ins    BYTE PTR es:[edi],dx
  41dc89:	xchg   BYTE PTR [eax-0x7aa19491],cl
  41dc8f:	mov    DWORD PTR fs:[eax+0x47],edx
  41dc93:	mov    edi,0x6eba50ed
  41dc98:	out    dx,al
  41dc99:	adc    DWORD PTR [esi],esi
  41dc9b:	mov    dh,BYTE PTR [edx+0x452a64d7]
  41dca1:	addr16 inc ebp
  41dca3:	add    ah,al
  41dca5:	jmp    0x5d6e:0xc1bf813b
  41dcac:	mov    dh,0x5
  41dcae:	cmp    ebx,eax
  41dcb0:	int    0x36
  41dcb2:	test   DWORD PTR [edx+eax*2],0x108e4213
  41dcb9:	fistp  QWORD PTR [ebx+0x6f]
  41dcbc:	inc    edx
  41dcbd:	cwde   
  41dcbe:	sbb    dh,dh
  41dcc0:	dec    esp
  41dcc1:	dec    ebp
  41dcc2:	inc    esp
  41dcc3:	xor    bl,BYTE PTR [ebp+0x56]
  41dcc6:	nop
  41dcc7:	push   ss
  41dcc8:	xor    edx,DWORD PTR [ebp+0x44]
  41dccb:	and    ebx,DWORD PTR [edi+0x5e]
  41dcce:	cmp    eax,0x2c362fb9
  41dcd3:	lods   eax,DWORD PTR ds:[esi]
  41dcd4:	pop    esi
  41dcd5:	push   ebp
  41dcd6:	rcl    dh,0xfd
  41dcd9:	mov    edx,0x565ebef6
  41dcde:	mov    cl,BYTE PTR [ebx-0x3fc6caa7]
  41dce4:	inc    ecx
  41dce5:	loopne 0x41dd5e
  41dce7:	ja     0x41dd3f
  41dce9:	pop    edx
  41dcea:	adc    al,0x45
  41dcec:	add    dl,bh
  41dcee:	adc    eax,0x729bf356
  41dcf3:	mov    ds:0x589bbd9b,eax
  41dcf8:	popa   
  41dcf9:	mov    cl,0xf2
  41dcfb:	sub    eax,ecx
  41dcfd:	push   0xffffffe8
  41dcff:	jg     0x41dd15
  41dd01:	mov    ecx,ebx
  41dd03:	jbe    0x41dd1c
  41dd05:	pop    edi
  41dd06:	ds push es
  41dd08:	(bad)  
  41dd09:	jmp    0xc71a91a6
  41dd0e:	adc    eax,0x947eaa97
  41dd13:	sub    al,0x68
  41dd15:	outs   dx,BYTE PTR ds:[esi]
  41dd16:	daa    
  41dd17:	fisub  DWORD PTR [esi]
  41dd19:	cmp    dh,BYTE PTR [esp+edi*4]
  41dd1c:	idiv   DWORD PTR [edi]
  41dd1e:	std    
  41dd1f:	pop    esp
  41dd20:	add    ecx,esp
  41dd22:	jnp    0x41dd1f
  41dd24:	in     eax,0xd4
  41dd26:	ds jno 0x41dcae
  41dd29:	fwait
  41dd2a:	call   0xa17:0xce99eae5
  41dd31:	adc    eax,0x6957fd68
  41dd36:	xor    eax,0xa3eac0e6
  41dd3b:	jecxz  0x41dccd
  41dd3d:	cmp    BYTE PTR [esi+ecx*2],dh
  41dd40:	out    0x71,eax
  41dd42:	idiv   ecx
  41dd44:	pusha  
  41dd45:	jae    0x41dcc7
  41dd47:	(bad)  [ecx]
  41dd49:	fild   QWORD PTR [ebp+esi*1-0x568bc835]
  41dd50:	pusha  
  41dd51:	xchg   bh,bh
  41dd53:	pop    esi
  41dd54:	push   ebx
  41dd55:	(bad)  
  41dd56:	mov    dh,dh
  41dd58:	jnp    0x41dd28
  41dd5a:	cli    
  41dd5b:	jb     0x41dd95
  41dd5d:	and    ebp,DWORD PTR [ebp-0x70411811]
  41dd63:	ror    DWORD PTR [ebp+0x55],1
  41dd66:	jne    0x41dd3f
  41dd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd69:	mov    ah,BYTE PTR [edi-0xdf4c97f]
  41dd6f:	jmp    0x6734:0xd829a9e2
  41dd76:	(bad)  
  41dd77:	adc    cl,BYTE PTR [ebx]
  41dd79:	or     BYTE PTR ds:0xaae22539,0xe
  41dd80:	mov    ch,0x86
  41dd82:	jmp    0x41ddcd
  41dd84:	push   0x152adcf3
  41dd89:	cwde   
  41dd8a:	or     eax,esi
  41dd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd8d:	js     0x41dd77
  41dd8f:	or     BYTE PTR [ebp-0x11e5639d],0xc1
  41dd96:	push   0xffffffd8
  41dd98:	(bad)  
  41dd99:	mov    al,0x58
  41dd9b:	icebp  
  41dd9c:	les    esi,FWORD PTR [edx-0x1c]
  41dd9f:	imul   ebp,ecx,0xe561490
  41dda5:	xchg   ebp,eax
  41dda6:	or     eax,ebp
  41dda8:	sbb    eax,edi
  41ddaa:	mov    ebp,DWORD PTR [ebx-0x650dcbef]
  41ddb0:	fcom   DWORD PTR [ebx-0xb]
  41ddb3:	and    BYTE PTR [edi*1-0x11963e65],cl
  41ddba:	sbb    eax,0x7f2885f6
  41ddbf:	ins    BYTE PTR es:[edi],dx
  41ddc0:	ins    BYTE PTR es:[edi],dx
  41ddc1:	scas   al,BYTE PTR es:[edi]
  41ddc2:	xchg   esi,eax
  41ddc3:	xchg   esi,eax
  41ddc4:	mov    ah,0x6f
  41ddc6:	inc    ebx
  41ddc7:	pop    esp
  41ddc8:	fcmovnb st,st(6)
  41ddca:	add    dh,BYTE PTR [ebp-0x2a0d4600]
  41ddd0:	mov    esp,0x6f5d6f4
  41ddd5:	cmp    DWORD PTR [ecx-0x17],edi
  41ddd8:	sbb    DWORD PTR [eax-0x51],eax
  41dddb:	dec    edx
  41dddc:	test   al,0x57
  41ddde:	adc    al,0x3f
  41dde0:	cli    
  41dde1:	xchg   edx,eax
  41dde2:	mov    ch,0xdc
  41dde4:	push   eax
  41dde5:	mov    esi,0x9004e00
  41ddea:	dec    esp
  41ddeb:	mov    ds:0xe7ee080a,eax
  41ddf0:	lock mov ds:0x76156a2c,eax
  41ddf6:	xor    al,0x65
  41ddf8:	or     DWORD PTR [ebx-0x8a0e709],eax
  41ddfe:	and    ebp,DWORD PTR [esi-0x2a]
  41de01:	jne    0x41de0a
  41de03:	ret    
  41de04:	push   ss
  41de05:	ins    BYTE PTR es:[edi],dx
  41de06:	push   ss
  41de07:	(bad)  
  41de08:	sub    ebp,edx
  41de0a:	inc    edi
  41de0b:	or     eax,0x24acb7d4
  41de10:	fistp  QWORD PTR [ebp+0x2fc6cb9b]
  41de16:	lds    edx,FWORD PTR [edx]
  41de18:	jo     0x41de03
  41de1a:	outs   dx,DWORD PTR ds:[esi]
  41de1b:	nop
  41de1c:	sbb    ch,BYTE PTR [ebx-0x56213573]
  41de22:	cwde   
  41de23:	or     BYTE PTR [edx+0x6c],0xb6
  41de27:	(bad)  
  41de28:	fadd   DWORD PTR [edx-0x187c9a34]
  41de2e:	cdq    
  41de2f:	rol    DWORD PTR [ecx-0x35],0xf8
  41de33:	and    al,BYTE PTR [eax-0x31]
  41de36:	(bad)  
  41de37:	xor    eax,esi
  41de39:	pop    es
  41de3a:	loope  0x41dddc
  41de3c:	xchg   ebp,eax
  41de3d:	adc    ah,BYTE PTR [ebx-0x2a6e4b27]
  41de43:	and    al,BYTE PTR [esi]
  41de45:	not    DWORD PTR [edx-0x632c3bf]
  41de4b:	sti    
  41de4c:	rcl    ebx,0xa8
  41de4f:	jne    0x41de18
  41de51:	jo     0x41de29
  41de53:	shl    DWORD PTR [esi],0x6
  41de56:	push   esp
  41de57:	or     al,0x61
  41de59:	dec    ecx
  41de5a:	cld    
  41de5b:	dec    edx
  41de5c:	sub    ecx,ecx
  41de5e:	sbb    eax,0x798f729a
  41de63:	push   0xcc7008db
  41de68:	bound  edi,QWORD PTR [ebx+0x70]
  41de6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de6c:	cvtps2pd xmm6,QWORD PTR [esi]
  41de6f:	dec    edx
  41de70:	sub    dh,0x50
  41de73:	(bad)  
  41de74:	mov    dl,0xf8
  41de76:	popf   
  41de77:	ins    DWORD PTR es:[edi],dx
  41de78:	(bad)  
  41de79:	mov    esp,0x258ab95e
  41de7e:	adc    eax,0x11dad9f5
  41de83:	adc    ch,BYTE PTR [edx+0x43]
  41de86:	ror    dh,1
  41de88:	out    0x10,al
  41de8a:	lods   al,BYTE PTR ds:[esi]
  41de8b:	daa    
  41de8c:	popf   
  41de8d:	or     DWORD PTR [eax+0x679da17c],ebx
  41de93:	adc    DWORD PTR [esp+ecx*2],0x6c4b71ef
  41de9a:	dec    edi
  41de9b:	push   ds
  41de9c:	push   eax
  41de9d:	cmp    BYTE PTR [eax+eiz*2-0x1f],ch
  41dea1:	je     0x41dee4
  41dea3:	jle    0x41de5a
  41dea5:	push   eax
  41dea6:	sbb    BYTE PTR [eax],0xcb
  41dea9:	xor    DWORD PTR [ebx+0x66f169e6],esi
  41deaf:	adc    ch,BYTE PTR [edx+0x5d3214b3]
  41deb5:	sub    BYTE PTR [ebx+0x542ef107],ah
  41debb:	test   eax,0x34353e3a
  41dec0:	(bad)  
  41dec1:	jge    0x41df29
  41dec3:	scas   al,BYTE PTR es:[edi]
  41dec4:	adc    eax,0x8aa39cac
  41dec9:	lock dec esp
  41decb:	sub    BYTE PTR [ecx-0x4a1e0f38],al
  41ded1:	frstor [edi]
  41ded3:	icebp  
  41ded4:	mov    eax,0xb9dee3ac
  41ded9:	aas    
  41deda:	push   ss
  41dedb:	dec    ecx
  41dedc:	rcl    BYTE PTR [esi+0x1f],1
  41dedf:	push   edx
  41dee0:	and    eax,0xb973635b
  41dee5:	inc    esi
  41dee6:	(bad)  
  41dee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee8:	ds and edi,ebp
  41deeb:	or     al,0x43
  41deed:	cmc    
  41deee:	int3   
  41deef:	sbb    ebx,DWORD PTR [ebp-0x6d6602b5]
  41def5:	mov    edi,0xfdd2bad1
  41defa:	add    eax,0x2af32392
  41deff:	add    DWORD PTR ds:0xb25c7d61,edx
  41df05:	test   eax,0x6ad184d
  41df0a:	pop    ebx
  41df0b:	cwde   
  41df0c:	cmp    esi,DWORD PTR es:[edx]
  41df0f:	jmp    0x673f5369
  41df14:	mov    ds:0x905d1f1d,al
  41df19:	sub    BYTE PTR [esi-0x755bcffd],ch
  41df1f:	lods   eax,DWORD PTR ds:[esi]
  41df20:	sub    al,0x36
  41df22:	(bad)  
  41df23:	jge    0x41df7d
  41df25:	xchg   esi,eax
  41df26:	hlt    
  41df27:	mov    BYTE PTR ds:0x4cc64077,ch
  41df2d:	into   
  41df2e:	push   0xffffff8a
  41df30:	xchg   edx,eax
  41df31:	aam    0x29
  41df33:	rol    BYTE PTR [eax],cl
	...
  41df41:	adc    eax,0x7f7d7f79
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	cmp    BYTE PTR [eax],0x1b
  41df4f:	arpl   cx,bx
  41df51:	rcr    BYTE PTR [edx+0x1],0x0
  41df55:	stos   DWORD PTR es:[edi],eax
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    cl,dl
  41df5a:	mov    ecx,0x7e88d139
  41df5f:	sti    
  41df60:	xchg   esi,eax
  41df61:	popf   
  41df62:	popf   
  41df63:	aas    
  41df64:	pop    ds
  41df65:	stc    
  41df66:	in     eax,0x9
  41df68:	in     al,dx
  41df69:	cmp    ebx,esi
  41df6b:	retf   
  41df6c:	clc    
  41df6d:	pop    eax
  41df6e:	or     ah,BYTE PTR [ebp-0x5432da43]
  41df74:	gs popf 
  41df76:	xor    eax,0x8abd0636
  41df7b:	mov    ebx,0x51cea2db
  41df80:	sbb    DWORD PTR [eax],0xffffffb0
  41df83:	mov    bh,0xf1
  41df85:	(bad)
  41df89:	(bad)  
  41df8a:	sbb    ah,BYTE PTR [edi]
  41df8c:	fistp  DWORD PTR [ebx]
  41df8e:	inc    esp
  41df8f:	push   0xffffffde
  41df91:	fcom   QWORD PTR [ebp-0x797d21b1]
  41df97:	mov    ecx,0x88c9e697
  41df9c:	and    BYTE PTR [ebx+eiz*8-0xe80a306],0x2d
  41dfa4:	sbb    cl,0x7c
  41dfa7:	dec    edi
  41dfa8:	ja     0x41e019
  41dfaa:	fist   WORD PTR [ebx+0x253aa3e1]
  41dfb0:	adc    BYTE PTR [ecx],dh
  41dfb2:	pop    es
  41dfb3:	mov    bl,BYTE PTR [ebx-0xa]
  41dfb6:	lods   eax,DWORD PTR ds:[esi]
  41dfb7:	cmp    BYTE PTR [edi],cl
  41dfb9:	pop    ebp
  41dfba:	pop    eax
  41dfbb:	add    DWORD PTR [edi+0x15],0xe06c7256
  41dfc2:	enter  0xa32e,0x1f
  41dfc6:	sbb    ah,BYTE PTR [edx+0x1dd33542]
  41dfcc:	fisub  DWORD PTR [eax-0x203253d3]
  41dfd2:	xchg   ecx,eax
  41dfd3:	push   eax
  41dfd4:	sub    dh,dh
  41dfd6:	jmp    0x41df59
  41dfd8:	inc    esp
  41dfd9:	fcmovb st,st(1)
  41dfdb:	add    eax,0x7e21c5b5
  41dfe0:	cld    
  41dfe1:	xor    DWORD PTR [eax-0x35645541],ebp
  41dfe7:	inc    DWORD PTR [edx]
  41dfe9:	iret   
  41dfea:	psubusw mm5,QWORD PTR [edx+esi*8+0x65]
  41dfef:	enter  0xc26d,0x5a
  41dff3:	and    BYTE PTR [esi+eiz*1+0x6e],bl
  41dff7:	mov    edi,esi
  41dff9:	cmp    edi,DWORD PTR [bx+di]
  41dffc:	pop    ebx
  41dffd:	ins    DWORD PTR es:[edi],dx
  41dffe:	xchg   esp,eax
  41dfff:	js     0x41df81
  41e001:	mov    ebx,0xb34a7eea
  41e006:	cli    
  41e007:	jmp    0x41e044
  41e009:	mov    al,0x6d
  41e00b:	bound  ebx,QWORD PTR [esp+eiz*4+0x62]
  41e00f:	stos   BYTE PTR es:[edi],al
  41e010:	outs   dx,DWORD PTR ds:[esi]
  41e011:	xchg   ebx,eax
  41e012:	lahf   
  41e013:	cmp    al,0x5e
  41e015:	inc    ecx
  41e016:	inc    edi
  41e017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e018:	xor    bh,BYTE PTR [edi-0x52]
  41e01b:	sub    esp,DWORD PTR [edx+ebp*8]
  41e01e:	lods   al,BYTE PTR ds:[esi]
  41e01f:	mov    ebp,0x226ca620
  41e024:	cmp    bl,BYTE PTR [ebp+0x21fa3b5f]
  41e02a:	push   edx
  41e02b:	xchg   edi,eax
  41e02c:	mul    BYTE PTR [edi]
  41e02e:	sti    
  41e02f:	inc    esi
  41e030:	js     0x41e084
  41e032:	add    eax,0xea675c56
  41e037:	popf   
  41e038:	fwait
  41e039:	jne    0x41dfcf
  41e03b:	and    al,0xa9
  41e03d:	retf   0xc72c
  41e040:	jp     0x41dfe3
  41e042:	push   0xc98f431a
  41e047:	hlt    
  41e048:	aam    0x9d
  41e04a:	pop    edi
  41e04b:	test   eax,0x3fe1471c
  41e050:	inc    ecx
  41e051:	add    al,0xe5
  41e053:	xor    eax,0xf77d6fe
  41e058:	jge    0x41e004
  41e05a:	push   eax
  41e05b:	pop    ecx
  41e05c:	jno    0x41e076
  41e05e:	sahf   
  41e05f:	sbb    esp,esp
  41e061:	(bad)  
  41e063:	push   cs
  41e064:	pop    es
  41e065:	inc    edx
  41e066:	mov    eax,0x587907ab
  41e06b:	xor    ah,BYTE PTR [edi-0x7a8b3463]
  41e071:	xor    BYTE PTR [esi-0x89143f],cl
  41e077:	cmp    cl,BYTE PTR [edi-0x66]
  41e07a:	dec    edi
  41e07b:	xor    eax,0x3c4ad06f
  41e080:	jmp    0xf1b:0x416b0b92
  41e087:	ror    bl,cl
  41e089:	pop    edi
  41e08a:	add    DWORD PTR [esp+eiz*2-0x74d1a231],eax
  41e091:	mov    ecx,0xec5a96a2
  41e096:	or     DWORD PTR [edx-0x1dac8950],0x769065a9
  41e0a0:	es jne 0x41e04a
  41e0a3:	sub    ebx,DWORD PTR [edi]
  41e0a5:	jae    0x41e097
  41e0a7:	mov    ecx,0x6c2980a6
  41e0ac:	xchg   edx,eax
  41e0ad:	xlat   BYTE PTR ds:[ebx]
  41e0ae:	mov    ds:0x73d0adec,al
  41e0b3:	push   cs
  41e0b4:	aad    0x78
  41e0b6:	pop    ds
  41e0b7:	fistp  QWORD PTR [edi+ebp*2-0xb17ba3a]
  41e0be:	cmp    BYTE PTR [edi-0x186d6b5e],bh
  41e0c4:	xchg   ebp,eax
  41e0c5:	fwait
  41e0c6:	inc    edi
  41e0c7:	popf   
  41e0c8:	or     eax,0x958d7de2
  41e0cd:	push   ds
  41e0ce:	std    
  41e0cf:	cmp    eax,0xd8ebc4e
  41e0d4:	adc    edi,DWORD PTR [ecx+0x3de7f62e]
  41e0da:	adc    DWORD PTR [eax+ebx*8+0x67],esp
  41e0de:	sbb    BYTE PTR [ecx],0x30
  41e0e1:	fwait
  41e0e2:	sub    al,0xa1
  41e0e4:	dec    ebx
  41e0e5:	das    
  41e0e6:	mov    ch,0x24
  41e0e8:	xor    dl,0xba
  41e0eb:	loop   0x41e08a
  41e0ed:	jp     0x41e0c8
  41e0ef:	cdq    
  41e0f0:	lea    esi,[esi]
  41e0f2:	test   BYTE PTR [ecx+ebp*4+0x65b58467],al
  41e0f9:	sub    ah,BYTE PTR [ecx]
  41e0fb:	test   BYTE PTR [ebp-0x2f4f599a],dl
  41e101:	push   ebx
  41e102:	das    
  41e103:	mov    cl,0xdf
  41e105:	add    DWORD PTR [eax],edx
  41e107:	nop
  41e108:	loop   0x41e0d2
  41e10a:	cmp    bl,al
  41e10c:	imul   ecx,edx,0x14
  41e10f:	scas   eax,DWORD PTR es:[edi]
  41e110:	pop    eax
  41e111:	mov    ch,0x5a
  41e113:	in     eax,dx
  41e114:	out    dx,eax
  41e115:	call   DWORD PTR [ebp+0x6084e388]
  41e11b:	dec    ebp
  41e11c:	in     eax,dx
  41e11d:	call   0x3c87:0x300afebf
  41e124:	(bad)  
  41e125:	mov    ecx,0xa03a9e1c
  41e12a:	push   esi
  41e12b:	and    cl,BYTE PTR [eax-0x3]
  41e12e:	enter  0x673e,0xb0
  41e132:	dec    esi
  41e133:	std    
  41e134:	mov    esp,0x204ff44c
  41e139:	add    DWORD PTR [edi+esi*2],ecx
  41e13c:	dec    edx
  41e13d:	sub    dh,ch
  41e13f:	(bad)
  41e142:	mov    ah,0xa
  41e144:	(bad)  
  41e145:	xchg   edi,eax
  41e146:	mov    WORD PTR [edi],ds
  41e148:	or     esi,ebp
  41e14a:	bsr    ecx,DWORD PTR [eax-0x62041bd3]
  41e151:	pop    esp
  41e152:	(bad)  
  41e153:	pop    esi
  41e154:	shr    ebx,0x15
  41e157:	pop    ss
  41e158:	sub    DWORD PTR [ecx+0x4830d02f],edx
  41e15e:	jb     0x41e164
  41e160:	mov    esi,0xccb1d03d
  41e165:	fisttp QWORD PTR [eax]
  41e167:	push   ecx
  41e168:	pop    ds
  41e169:	mov    edi,0x2fd924db
  41e16e:	scas   eax,DWORD PTR es:[edi]
  41e16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e170:	cmp    eax,0xc75b9949
  41e175:	and    ch,BYTE PTR [edx]
  41e177:	repz rol DWORD PTR [eax],cl
  41e17a:	in     eax,dx
  41e17b:	jg     0x41e17a
  41e17d:	fst    QWORD PTR [edi-0x7d]
  41e180:	xchg   edx,eax
  41e181:	loop   0x41e182
  41e183:	dec    eax
  41e184:	loopne 0x41e119
  41e186:	stos   DWORD PTR es:[edi],eax
  41e187:	cmp    BYTE PTR [ebx],cl
  41e189:	jne    0x41e203
  41e18b:	jecxz  0x41e1a0
  41e18d:	push   0x64
  41e18f:	cwde   
  41e190:	jne    0x41e1e2
  41e192:	xor    ebp,DWORD PTR [eax+0x7a6a65c9]
  41e198:	out    dx,eax
  41e199:	dec    edi
  41e19a:	test   edi,ebx
  41e19c:	dec    eax
  41e19d:	(bad)
  41e1a2:	inc    ecx
  41e1a3:	push   esp
  41e1a4:	inc    edx
  41e1a5:	jbe    0x41e155
  41e1a7:	(bad)  
  41e1a8:	adc    DWORD PTR [ecx],ebx
  41e1aa:	dec    ecx
  41e1ab:	add    eax,0xc5c92006
  41e1b0:	inc    esi
  41e1b1:	jp     0x41e222
  41e1b3:	(bad)  
  41e1b4:	scas   al,BYTE PTR es:[edi]
  41e1b5:	adc    DWORD PTR [esp+edx*2-0x27710745],ebp
  41e1bc:	popa   
  41e1bd:	mov    esi,0xa500bdf4
  41e1c2:	jge    0x41e18a
  41e1c4:	dec    eax
  41e1c5:	or     dh,BYTE PTR [esi-0x486ffb99]
  41e1cb:	cli    
  41e1cc:	xor    bh,cl
  41e1ce:	cmp    al,BYTE PTR [edi+0x57d7f865]
  41e1d4:	mov    ebp,ss
  41e1d6:	push   ecx
  41e1d7:	out    0xcb,al
  41e1d9:	cmp    edx,DWORD PTR ds:0x59f3933c
  41e1df:	popa   
  41e1e0:	jmp    0x41e22e
  41e1e2:	sbb    ebp,esp
  41e1e4:	mov    ch,BYTE PTR [eax-0x75]
  41e1e7:	aas    
  41e1e8:	outs   dx,BYTE PTR ds:[esi]
  41e1e9:	(bad)  
  41e1ea:	rcr    DWORD PTR [esi-0x23],1
  41e1ed:	cmc    
  41e1ee:	xchg   edi,eax
  41e1ef:	dec    ebx
  41e1f0:	jmp    0xdef4:0x9871b875
  41e1f7:	cs inc ecx
  41e1f9:	mov    al,0x60
  41e1fb:	cmp    DWORD PTR [edi],esi
  41e1fd:	inc    edx
  41e1fe:	mov    esi,0xe42f6420
  41e203:	push   ebp
  41e204:	mov    esi,0xa3591442
  41e209:	fs adc esp,ebp
  41e20c:	cld    
  41e20d:	ficom  DWORD PTR [edx]
  41e20f:	shl    DWORD PTR [ebx+0x29],0xc0
  41e213:	jno    0x41e267
  41e215:	jge    0x41e1b9
  41e217:	lods   al,BYTE PTR ds:[esi]
  41e218:	push   cs
  41e219:	mov    dl,ah
  41e21b:	sub    DWORD PTR [edi+0x25],edx
  41e21e:	iret   
  41e21f:	mov    esi,0x70552fbe
  41e224:	icebp  
  41e225:	push   ecx
  41e226:	or     cl,BYTE PTR [edi]
  41e228:	sbb    al,0xe1
  41e22a:	test   eax,0x6c69c9bf
  41e22f:	xchg   esp,eax
  41e230:	mov    ecx,0x2c5a5b21
  41e235:	mov    bh,0x54
  41e237:	pop    ebx
  41e238:	and    al,0xed
  41e23a:	mov    al,ds:0x703aa8c4
  41e23f:	sub    BYTE PTR [edx],bl
  41e241:	add    cl,BYTE PTR [ebx]
  41e243:	jnp    0x41e1e1
  41e245:	popa   
  41e246:	enter  0x55d2,0xcd
  41e24a:	and    bh,BYTE PTR [ecx+0x13e7de36]
  41e250:	pushf  
  41e251:	push   edx
  41e252:	std    
  41e253:	ret    0xc1f5
  41e256:	jne    0x41e1e3
  41e258:	mov    al,0x2e
  41e25a:	xor    eax,0x7087c3f9
  41e260:	mov    eax,ds:0x4c698d25
  41e265:	sbb    al,0xc
  41e267:	push   ebx
  41e268:	retf   0x7ae4
  41e26b:	aas    
  41e26c:	repz gs mov esi,0xdcc6fd06
  41e273:	outs   dx,BYTE PTR ds:[esi]
  41e274:	mov    al,ds:0xe9b9c1b0
  41e279:	jmp    0x849f:0xdefcda3d
  41e280:	mov    esp,0x5b4e634b
  41e285:	lods   eax,DWORD PTR ds:[esi]
  41e286:	aaa    
  41e287:	inc    eax
  41e288:	inc    esp
  41e289:	outs   dx,DWORD PTR ds:[esi]
  41e28a:	dec    edx
  41e28c:	mov    ds:0x2a35db51,eax
  41e291:	push   edi
  41e292:	(bad)  
  41e293:	in     eax,dx
  41e294:	repnz enter 0xc5f3,0x7f
  41e299:	mov    edi,0x1d222f54
  41e29e:	mov    eax,0xb362275f
  41e2a3:	enter  0x9496,0x2f
  41e2a7:	fisubr DWORD PTR [eax]
  41e2a9:	sub    dl,dh
  41e2ab:	ins    BYTE PTR es:[edi],dx
  41e2ac:	and    al,0x67
  41e2ae:	retf   
  41e2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b0:	xchg   esi,eax
  41e2b1:	imul   ecx,DWORD PTR [ebx+0x3],0xb5737b9
  41e2b8:	sub    BYTE PTR [ecx+0x5f],bh
  41e2bb:	test   DWORD PTR [eax],ebp
  41e2bd:	or     eax,0x2a59c0e
  41e2c2:	jb     0x41e245
  41e2c4:	sbb    dh,BYTE PTR [ebp-0x6c6bb18c]
  41e2ca:	add    al,0x19
  41e2cc:	adc    bl,BYTE PTR [ebp+0x25330fc1]
  41e2d2:	in     al,dx
  41e2d3:	push   ebp
  41e2d4:	int    0xe0
  41e2d6:	xlat   BYTE PTR ds:[ebx]
  41e2d7:	xchg   ebp,eax
  41e2d8:	int    0x72
  41e2da:	idiv   DWORD PTR [eax]
  41e2dc:	mov    ebx,0xc7dca77a
  41e2e1:	xchg   edx,eax
  41e2e2:	or     BYTE PTR [ebp+0x5653fa7d],dh
  41e2e8:	in     eax,0x18
  41e2ea:	add    eax,0x9d9efff1
  41e2ef:	stos   BYTE PTR es:[edi],al
  41e2f0:	cmp    eax,0xaa876d97
  41e2f5:	pushf  
  41e2f6:	or     al,0x3d
  41e2f8:	pop    esi
  41e2f9:	fucomi st,st(3)
  41e2fb:	int3   
  41e2fc:	push   edi
  41e2fd:	lods   eax,DWORD PTR ds:[esi]
  41e2fe:	inc    edx
  41e2ff:	or     DWORD PTR [ebp+0x42bb48],edx
	...
  41e311:	outs   dx,BYTE PTR ds:[esi]
  41e312:	idiv   DWORD PTR [ebx-0x1924497]
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	out    0x43,eax
  41e31f:	jno    0x41e2bf
  41e321:	imul   ebx,DWORD PTR [esi+0x1],0x0
  41e325:	stos   DWORD PTR es:[edi],eax
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [esi],cl
  41e32a:	les    ebp,FWORD PTR fs:[eax]
  41e32d:	sbb    al,0x68
  41e32f:	int    0x8b
  41e331:	jnp    0x41e2be
  41e333:	mov    ch,0xd6
  41e335:	loopne 0x41e2d6
  41e337:	data16 mov WORD PTR [eax],fs
  41e33a:	xchg   edx,eax
  41e33b:	mov    eax,edx
  41e33d:	inc    ecx
  41e33e:	inc    ebp
  41e33f:	pop    ebp
  41e340:	std    
  41e341:	xchg   dh,bh
  41e343:	cs push edi
  41e345:	iret   
  41e346:	int    0x28
  41e348:	out    dx,al
  41e349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e34a:	out    dx,eax
  41e34b:	popf   
  41e34c:	cmp    esp,DWORD PTR [esi-0x3142776a]
  41e352:	jp     0x41e346
  41e354:	in     al,0x10
  41e356:	jbe    0x41e30a
  41e358:	mov    bh,0xc
  41e35a:	arpl   WORD PTR ds:0x802b2ca1,cx
  41e360:	and    al,0x94
  41e362:	mov    eax,0x4fb95126
  41e367:	imul   eax,DWORD PTR [edx+0x4a],0xffffff87
  41e36b:	adc    DWORD PTR [eax-0x26],ebp
  41e36e:	imul   esi,DWORD PTR [ecx+0x512f7e0a],0xffffff80
  41e375:	fadd   DWORD PTR [ebx+0x57]
  41e378:	dec    ebp
  41e379:	pop    ds
  41e37a:	inc    ecx
  41e37b:	xor    eax,0x71a78464
  41e380:	cmp    eax,DWORD PTR [ebp-0x25]
  41e383:	sbb    ebp,DWORD PTR [esi-0x5a]
  41e386:	dec    ecx
  41e387:	inc    esp
  41e388:	xor    ebp,eax
  41e38a:	inc    esi
  41e38b:	fwait
  41e38c:	hlt    
  41e38d:	cld    
  41e38e:	and    DWORD PTR [ebx],esi
  41e390:	pop    es
  41e391:	das    
  41e392:	daa    
  41e393:	cld    
  41e394:	push   edx
  41e395:	jae    0x41e405
  41e397:	jnp    0x41e3bf
  41e399:	mov    ch,0xb1
  41e39b:	test   eax,0x613ac5ce
  41e3a0:	inc    eax
  41e3a1:	jmp    0xb0d087dc
  41e3a6:	push   eax
  41e3a7:	pusha  
  41e3a8:	add    DWORD PTR [ebx+edx*1-0x1f53e988],esi
  41e3af:	mov    al,0x2
  41e3b1:	shl    esp,0x28
  41e3b4:	xor    bh,BYTE PTR [esi]
  41e3b6:	pop    esi
  41e3b7:	das    
  41e3b8:	ds dec ebx
  41e3ba:	je     0x41e38d
  41e3bc:	lock in al,0xa8
  41e3bf:	pusha  
  41e3c0:	rsm    
  41e3c2:	fnstsw WORD PTR [esi]
  41e3c4:	mov    dh,0x9d
  41e3c6:	retf   
  41e3c7:	add    eax,0xc759a00b
  41e3cc:	adc    al,0x9a
  41e3ce:	xchg   DWORD PTR [esi-0x7a],ebp
  41e3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d2:	cmc    
  41e3d3:	pop    edi
  41e3d4:	(bad)  
  41e3d5:	bound  edi,QWORD PTR [edx+0x10]
  41e3d8:	push   ebx
  41e3d9:	ss aam 0xd6
  41e3dc:	test   DWORD PTR [esi],ecx
  41e3de:	outs   dx,DWORD PTR ds:[esi]
  41e3df:	xlat   BYTE PTR ds:[ebx]
  41e3e0:	jmp    0x41e40e
  41e3e2:	test   eax,0x6043498f
  41e3e7:	mov    ebp,0xd77ba3ce
  41e3ec:	xchg   esi,eax
  41e3ed:	stc    
  41e3ee:	mov    ebx,0xcaf042b5
  41e3f3:	int3   
  41e3f4:	scas   al,BYTE PTR es:[edi]
  41e3f5:	sti    
  41e3f6:	nop
  41e3f7:	adc    DWORD PTR [edi+0x2b],edx
  41e3fa:	test   dh,ch
  41e3fc:	clc    
  41e3fd:	or     ah,bh
  41e3ff:	lahf   
  41e400:	push   cs
  41e401:	cmp    al,BYTE PTR [esi]
  41e403:	fld    st(5)
  41e405:	push   ecx
  41e406:	imul   esp,esp,0x76
  41e409:	adc    edi,DWORD PTR ds:0x64d226cd
  41e40f:	lods   eax,DWORD PTR ds:[esi]
  41e410:	ret    
  41e411:	mov    dl,0x67
  41e413:	ret    
  41e414:	jne    0x41e448
  41e416:	mov    esi,0x7aff8beb
  41e41b:	pop    ecx
  41e41c:	popa   
  41e41d:	push   edx
  41e41e:	push   ds
  41e41f:	out    dx,al
  41e420:	mov    ebp,0x605ccd80
  41e425:	pop    es
  41e426:	mov    ebx,0x2fdd8715
  41e42b:	out    dx,eax
  41e42c:	cmp    al,0x62
  41e42e:	pop    ebp
  41e42f:	dec    ebp
  41e430:	pop    ebx
  41e431:	imul   BYTE PTR [edx+0x38]
  41e434:	and    al,0x4
  41e436:	dec    ecx
  41e437:	jl     0xa9676bac
  41e43d:	test   eax,0x1bd95f8
  41e442:	mov    esi,DWORD PTR [edi+0x1d]
  41e445:	pop    esi
  41e446:	int3   
  41e447:	inc    eax
  41e448:	add    BYTE PTR [ebx-0x19],dl
  41e44b:	pop    ss
  41e44c:	cmp    DWORD PTR [eax+ecx*2+0x32],esp
  41e450:	jo     0x41e4c0
  41e452:	fs dec esi
  41e454:	mov    esi,0xfe12be09
  41e459:	test   DWORD PTR [esi-0x29],ecx
  41e45c:	pop    edx
  41e45d:	inc    eax
  41e45e:	popa   
  41e45f:	pop    DWORD PTR [edx-0x15a74bc3]
  41e465:	das    
  41e466:	add    cl,BYTE PTR [ebx-0x6dfb8f0e]
  41e46c:	test   BYTE PTR [esi],bh
  41e46e:	jecxz  0x41e4b1
  41e470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e471:	nop
  41e472:	dec    esi
  41e473:	bswap  esi
  41e475:	retf   0xa48
  41e478:	mov    ebp,0x9b42a6ea
  41e47d:	ret    0x3260
  41e480:	pop    ebp
  41e481:	lahf   
  41e482:	jns    0x41e43a
  41e484:	pop    edi
  41e485:	sahf   
  41e486:	mov    al,0x53
  41e488:	xchg   edi,eax
  41e489:	xchg   edx,eax
  41e48a:	or     BYTE PTR [eax+0x65],ch
  41e48d:	lea    edx,ds:0xd9251c65
  41e493:	or     dh,BYTE PTR [ebp-0x10]
  41e496:	xor    bl,ah
  41e498:	and    al,0xf3
  41e49a:	sbb    DWORD PTR [ebp+0x2e],ebx
  41e49d:	cs pop edx
  41e49f:	(bad)  
  41e4a0:	cdq    
  41e4a1:	push   ebx
  41e4a2:	add    BYTE PTR ds:0x8c312f47,ah
  41e4a8:	or     dh,BYTE PTR [esi+ebp*4]
  41e4ab:	xchg   edi,eax
  41e4ac:	xchg   esi,eax
  41e4ad:	jb     0x41e51a
  41e4af:	xchg   edx,eax
  41e4b0:	fwait
  41e4b1:	not    DWORD PTR [ecx-0x60a219f5]
  41e4b7:	cld    
  41e4b8:	pop    ss
  41e4b9:	jmp    0xebe75de9
  41e4be:	je     0x41e4fa
  41e4c0:	sub    eax,0x7ffc7a90
  41e4c5:	out    dx,al
  41e4c6:	push   ss
  41e4c7:	test   al,0xc
  41e4c9:	jmp    0xce04939b
  41e4ce:	xchg   ebp,eax
  41e4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d0:	cli    
  41e4d1:	pushf  
  41e4d2:	adc    edx,DWORD PTR [edx+0x3c]
  41e4d5:	mov    DWORD PTR [ebp-0x32],edx
  41e4d8:	daa    
  41e4d9:	call   0xefc6d39c
  41e4de:	cmc    
  41e4df:	iret   
  41e4e0:	aaa    
  41e4e1:	add    al,0x80
  41e4e3:	or     edi,DWORD PTR [ecx+ebx*1-0x50]
  41e4e7:	fbld   TBYTE PTR [edi+0x47c739fa]
  41e4ed:	xchg   edi,eax
  41e4ee:	xchg   edx,eax
  41e4ef:	jmp    0xda076b78
  41e4f4:	xchg   esp,eax
  41e4f5:	(bad)  
  41e4f6:	addr16 std 
  41e4f8:	mov    ecx,0x82274a0c
  41e4fd:	jnp    0x41e544
  41e4ff:	xchg   edx,eax
  41e500:	lods   al,BYTE PTR ds:[esi]
  41e501:	sbb    al,dh
  41e503:	xor    dl,BYTE PTR [ecx-0x5b2dd8cf]
  41e509:	mov    ebp,DWORD PTR ds:0x82f094c2
  41e50f:	mov    bl,0x5f
  41e511:	(bad)  [ecx]
  41e513:	mov    edi,0xb88b5fb5
  41e518:	ja     0x41e4e2
  41e51a:	iret   
  41e51b:	sub    eax,0x4250b316
  41e520:	icebp  
  41e521:	lahf   
  41e522:	cld    
  41e523:	arpl   WORD PTR [ebx-0x6bd9efb9],dx
  41e529:	cs pop ds
  41e52b:	or     esp,DWORD PTR [ebp-0x5c]
  41e52e:	arpl   dx,bp
  41e530:	leave  
  41e531:	cmp    bl,BYTE PTR [edi]
  41e533:	jecxz  0x41e559
  41e535:	lock ins BYTE PTR es:[edi],dx
  41e537:	loop   0x41e5b1
  41e539:	stos   DWORD PTR es:[edi],eax
  41e53a:	lahf   
  41e53b:	in     eax,dx
  41e53c:	or     DWORD PTR [edi],ebx
  41e53e:	fs and bl,dh
  41e541:	or     edx,ecx
  41e543:	mov    ch,0xf5
  41e545:	jne    0x41e57e
  41e547:	adc    al,0x71
  41e549:	mov    ds:0xcbe3fd2a,al
  41e54e:	sub    bl,BYTE PTR [esi+0x4666d518]
  41e554:	mov    WORD PTR [edi+0x5c],ds
  41e557:	stos   DWORD PTR es:[edi],eax
  41e558:	pop    edi
  41e559:	data16 shl BYTE PTR [ebx],1
  41e55c:	jnp    0x41e5db
  41e55e:	pop    esi
  41e55f:	(bad)  
  41e560:	fsub   DWORD PTR [ebp-0x12669d]
  41e566:	adc    BYTE PTR [ebx+0x6],dh
  41e569:	jmp    esp
  41e56b:	ror    DWORD PTR [eax],1
  41e56d:	nop
  41e56e:	sbb    al,0x4a
  41e570:	mov    ch,BYTE PTR [ecx]
  41e572:	unpcklps xmm1,xmm0
  41e575:	cmp    ch,cl
  41e577:	push   esi
  41e578:	pushf  
  41e579:	ror    DWORD PTR [edi-0x61],0x96
  41e57d:	into   
  41e57e:	stc    
  41e57f:	and    DWORD PTR [ebx+edi*4-0x28],eax
  41e583:	ret    0x3e81
  41e586:	inc    edi
  41e587:	sub    eax,0xc8ff46f3
  41e58c:	adc    eax,ebx
  41e58e:	out    dx,eax
  41e58f:	push   edx
  41e590:	push   ecx
  41e591:	and    ah,BYTE PTR [esi+0x58b1353f]
  41e597:	and    dl,dl
  41e599:	pop    es
  41e59a:	add    bh,BYTE PTR [eax]
  41e59c:	scas   eax,DWORD PTR es:[edi]
  41e59d:	aaa    
  41e59e:	dec    ebp
  41e59f:	stos   BYTE PTR es:[edi],al
  41e5a0:	fmul   QWORD PTR [esi+0x3479b5f4]
  41e5a6:	daa    
  41e5a7:	fcmovb st,st(2)
  41e5a9:	pop    eax
  41e5aa:	icebp  
  41e5ab:	repz loope 0x41e5b4
  41e5ae:	mov    edi,0x251fa704
  41e5b3:	pop    ebx
  41e5b4:	aam    0x2e
  41e5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b7:	loope  0x41e638
  41e5b9:	rcr    BYTE PTR [edx],0x5b
  41e5bc:	mov    ebp,0xb555d9db
  41e5c1:	repnz push ebp
  41e5c3:	jmp    0x41e5b3
  41e5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c6:	push   cs
  41e5c7:	push   ebx
  41e5c8:	xor    BYTE PTR [eax+0x76],ah
  41e5cb:	xor    ebx,DWORD PTR [edx-0x1f]
  41e5ce:	fstp   TBYTE PTR [edi]
  41e5d0:	(bad)  
  41e5d1:	fwait
  41e5d2:	jae    0x41e5ec
  41e5d4:	push   ds
  41e5d5:	sbb    cl,BYTE PTR [edx+0x4d18c38d]
  41e5db:	or     al,0xf7
  41e5dd:	add    edi,DWORD PTR [esi-0x3c1b92d5]
  41e5e3:	sub    DWORD PTR [ebx+esi*4-0x269fb3d7],eax
  41e5ea:	aas    
  41e5eb:	pushf  
  41e5ec:	(bad)  
  41e5ed:	add    eax,edx
  41e5ef:	stc    
  41e5f0:	pop    ebp
  41e5f1:	cmp    dl,BYTE PTR ds:0x8f94bc65
  41e5f7:	inc    edx
  41e5f8:	xor    al,0x1f
  41e5fa:	push   esi
  41e5fb:	ret    
  41e5fc:	sbb    ah,BYTE PTR [eax+0x67]
  41e5ff:	mov    ecx,0x144a811a
  41e604:	mov    ds:0xe1b2e58b,al
  41e609:	(bad)  
  41e60b:	fist   DWORD PTR [ebx+0x47]
  41e60e:	loopne 0x41e5e5
  41e610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e611:	clc    
  41e612:	rcl    DWORD PTR [edx],1
  41e614:	mov    edx,0x505bb923
  41e619:	fcomp  DWORD PTR [edx+0x4a71d835]
  41e61f:	rcl    ebx,1
  41e621:	push   ds
  41e622:	cwde   
  41e623:	dec    eax
  41e624:	xlat   BYTE PTR ds:[ebx]
  41e625:	adc    al,0x47
  41e627:	pop    ebp
  41e628:	push   eax
  41e629:	ins    BYTE PTR es:[edi],dx
  41e62a:	scas   al,BYTE PTR es:[edi]
  41e62b:	icebp  
  41e62c:	imul   eax,DWORD PTR [edi+0x78],0x63
  41e630:	dec    eax
  41e631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e632:	jge    0x41e6ae
  41e634:	or     al,0xb0
  41e636:	fsub   QWORD PTR [ebp+edi*4-0x4e556140]
  41e63d:	jmp    0xe049:0xffb5aa5b
  41e644:	cmp    BYTE PTR [esi],al
  41e646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e647:	sub    edi,DWORD PTR [eax+0x32]
  41e64a:	sub    al,0xbc
  41e64c:	out    dx,eax
  41e64d:	mov    edx,0xdcb1ff07
  41e652:	push   cs
  41e653:	or     esp,DWORD PTR [edi]
  41e655:	setae  BYTE PTR [esi]
  41e658:	xor    dl,BYTE PTR [edx+0x56]
  41e65b:	shl    BYTE PTR [esi-0x9607015],1
  41e661:	xor    eax,0x394b2a90
  41e666:	pusha  
  41e667:	mov    esi,esi
  41e669:	jbe    0x41e6e6
  41e66b:	jb     0x41e666
  41e66d:	jle    0x41e648
  41e66f:	repnz test DWORD PTR [edi+0x53],0xb482cbdc
  41e677:	call   DWORD PTR [edx]
  41e679:	cmp    al,0xaf
  41e67b:	call   0x26a4:0xa5de1e1
  41e682:	inc    edx
  41e683:	repz push esp
  41e685:	mov    bh,0xe2
  41e687:	pushf  
  41e688:	lds    ax,DWORD PTR [ebx-0x738cf6fd]
  41e68f:	cli    
  41e690:	shl    esp,1
  41e692:	xchg   esi,eax
  41e693:	push   ebx
  41e694:	mov    cl,0x1d
  41e696:	pop    esp
  41e697:	jle    0x41e6b0
  41e699:	push   esi
  41e69a:	mov    dl,0x3a
  41e69c:	ds loope 0x41e695
  41e69f:	popf   
  41e6a0:	imul   ebx,DWORD PTR [edx-0x45e30f67],0xffffff8a
  41e6a7:	(bad)  
  41e6a8:	idiv   BYTE PTR [ebp+0x1d]
  41e6ab:	add    al,0x96
  41e6ad:	nop
  41e6ae:	inc    edx
  41e6af:	les    esi,FWORD PTR [eax]
  41e6b1:	and    al,BYTE PTR [ecx+esi*2+0x44]
  41e6b5:	leave  
  41e6b6:	(bad)  
  41e6b7:	adc    BYTE PTR [ebp+0x54b895b1],al
  41e6bd:	cli    
  41e6be:	push   ebx
  41e6bf:	sub    ah,BYTE PTR [edx*4-0x5761f2ed]
  41e6c6:	cs jmp 0x41e722
  41e6c9:	and    dl,BYTE PTR [esi]
  41e6cb:	ins    DWORD PTR es:[edi],dx
  41e6cc:	fsubr  st,st(2)
  41e6ce:	xor    ecx,ecx
  41e6d0:	daa    
  41e6d1:	or     ebx,DWORD PTR [edx-0x6c]
	...
  41e6e0:	add    BYTE PTR ds:0xfffb5fc4,ch
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0x16feea5d
  41e6f0:	test   BYTE PTR [esi],dl
  41e6f2:	bound  eax,QWORD PTR [ecx]
  41e6f4:	add    BYTE PTR [ebx+0x58000003],ch
  41e6fa:	loop   0x41e733
  41e6fc:	out    0xa9,al
  41e6fe:	add    eax,0x1ae1fc7
  41e703:	adc    BYTE PTR [eax-0x2f02f53f],dl
  41e709:	popf   
  41e70a:	add    BYTE PTR [esi-0x7],dh
  41e70d:	mov    edi,ebx
  41e70f:	xchg   edx,eax
  41e710:	fcom   DWORD PTR [ebp+0x1383aa20]
  41e716:	ret    
  41e717:	js     0x41e702
  41e719:	inc    esi
  41e71a:	retf   
  41e71b:	rcl    BYTE PTR [di],1
  41e71e:	lahf   
  41e71f:	add    cl,BYTE PTR [edx]
  41e721:	adc    ecx,DWORD PTR [eax-0x2506a9c1]
  41e727:	xor    dh,BYTE PTR [edi-0x6c]
  41e72a:	pop    es
  41e72b:	fstp   QWORD PTR [ebx-0x4c]
  41e72e:	mov    edx,0x547454a1
  41e733:	or     al,0xaf
  41e735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e736:	push   ss
  41e737:	lahf   
  41e738:	add    al,0x5b
  41e73a:	xor    BYTE PTR [ebx+0x1816da1e],bl
  41e740:	pop    ecx
  41e741:	loope  0x41e6d0
  41e743:	int3   
  41e744:	lea    ecx,ds:0x1a7b8d1
  41e74a:	sub    DWORD PTR [ebx],0x38908281
  41e750:	fist   DWORD PTR [ebp+0x24]
  41e753:	xor    BYTE PTR ss:[ebp+0x5744622f],bl
  41e75a:	fdivr  DWORD PTR [ebx-0x29]
  41e75d:	aaa    
  41e75e:	mov    BYTE PTR [ecx-0x1c],ch
  41e761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e762:	lea    ecx,[edx-0x3]
  41e765:	sbb    BYTE PTR [ebx],0xd2
  41e768:	mov    BYTE PTR [edx],dl
  41e76a:	add    al,0x1c
  41e76c:	dec    eax
  41e76d:	mov    ecx,0x9296baac
  41e772:	nop
  41e773:	std    
  41e774:	pop    esp
  41e775:	out    dx,al
  41e776:	cmc    
  41e777:	sbb    ecx,0x4c
  41e77a:	(bad)  
  41e77c:	fimul  WORD PTR [ebx+edx*1+0x2a]
  41e780:	mov    bl,0xae
  41e782:	in     eax,0xa
  41e784:	sbb    eax,0x9afb6228
  41e789:	ds push edi
  41e78b:	sub    DWORD PTR [ebx+0x6962c590],esp
  41e791:	mov    ch,0x79
  41e793:	(bad)  
  41e794:	pop    edx
  41e795:	clc    
  41e796:	std    
  41e797:	jmp    0x9f0b4d01
  41e79c:	xor    cl,BYTE PTR [esi+0x337902e7]
  41e7a2:	addr16 hlt 
  41e7a4:	sbb    edi,DWORD PTR [eax]
  41e7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a7:	xchg   ebx,eax
  41e7a8:	fld    TBYTE PTR [esp+eiz*4-0x260965e]
  41e7af:	mov    ecx,ecx
  41e7b1:	addr16 pop edi
  41e7b3:	xlat   BYTE PTR ds:[ebx]
  41e7b4:	popf   
  41e7b5:	mov    edx,DWORD PTR [ebx]
  41e7b7:	(bad)  
  41e7b8:	popa   
  41e7b9:	or     al,0x35
  41e7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7bc:	xchg   esi,eax
  41e7bd:	mov    ch,0x93
  41e7bf:	repnz imul ebp,esp,0xffffff96
  41e7c3:	inc    edx
  41e7c4:	jne    0x41e7de
  41e7c6:	inc    edx
  41e7c7:	cwde   
  41e7c8:	sbb    DWORD PTR [esi+eax*4-0x2a],ebx
  41e7cc:	nop
  41e7cd:	icebp  
  41e7ce:	xor    BYTE PTR [ebx-0x6c],al
  41e7d1:	push   edx
  41e7d2:	rol    BYTE PTR [ebp+0xd],cl
  41e7d5:	inc    esp
  41e7d6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e7d8:	adc    ecx,DWORD PTR [ebx+0xde601f9]
  41e7de:	lahf   
  41e7df:	sbb    al,0x1d
  41e7e1:	push   eax
  41e7e2:	dec    eax
  41e7e3:	jl     0x41e7a8
  41e7e5:	dec    esi
  41e7e6:	pop    ebx
  41e7e7:	mov    al,ds:0xbf53c88e
  41e7ec:	jmp    0x7b1f:0x735ca039
  41e7f3:	clc    
  41e7f4:	add    al,0x30
  41e7f6:	mov    ds:0xaf07f8ff,al
  41e7fb:	arpl   sp,cx
  41e7fd:	cli    
  41e7fe:	out    0x3b,eax
  41e800:	xchg   ecx,eax
  41e801:	adc    ah,cl
  41e803:	shl    DWORD PTR [edx],cl
  41e805:	adc    DWORD PTR [edx],esp
  41e807:	push   edi
  41e808:	int    0x9f
  41e80a:	pop    ecx
  41e80b:	sbb    edi,0x18780958
  41e811:	(bad)  
  41e812:	xor    eax,0xec077406
  41e817:	or     eax,0x145f8475
  41e81c:	pop    edx
  41e81d:	add    eax,0xad950e61
  41e822:	mov    BYTE PTR [ebp+0x57],bh
  41e825:	imul   ebp,DWORD PTR [eax+0x2c],0xffffff92
  41e829:	cmp    eax,0x298d979c
  41e82e:	fwait
  41e82f:	dec    esp
  41e830:	fidiv  WORD PTR [ecx]
  41e832:	mov    dl,0xef
  41e834:	mov    fs,WORD PTR [ecx]
  41e836:	hlt    
  41e837:	xchg   esp,eax
  41e838:	int3   
  41e839:	cmc    
  41e83a:	jo     0x41e8b9
  41e83c:	ror    BYTE PTR [esi],0x12
  41e83f:	mov    esp,0x971ddef2
  41e844:	outs   dx,DWORD PTR ds:[esi]
  41e845:	jno    0x41e84b
  41e847:	mov    dh,0xc6
  41e849:	push   cs
  41e84a:	push   ebx
  41e84b:	jecxz  0x41e875
  41e84d:	adc    eax,0x68b40905
  41e852:	mov    DWORD PTR [edx-0x5b02c3d7],edx
  41e858:	out    0xc8,eax
  41e85a:	pop    eax
  41e85b:	xor    ebp,0x9049ea64
  41e861:	int    0x33
  41e863:	in     al,dx
  41e864:	test   BYTE PTR [edx+eiz*1-0x4f],0x44
  41e869:	and    bh,BYTE PTR [esi+0x5bbdfacc]
  41e86f:	sbb    ebx,edi
  41e871:	cwde   
  41e872:	inc    edi
  41e873:	mov    dh,0xc
  41e875:	dec    edi
  41e876:	mov    ds:0xa7d24113,eax
  41e87b:	stos   BYTE PTR es:[edi],al
  41e87c:	jmp    0x41e8e6
  41e87e:	inc    ecx
  41e87f:	or     BYTE PTR [esi],bh
  41e881:	loopne 0x41e830
  41e883:	pop    edi
  41e884:	leave  
  41e885:	in     eax,dx
  41e886:	(bad)  
  41e887:	sti    
  41e888:	xor    bh,ch
  41e88a:	mov    esp,0xc811b3c2
  41e88f:	arpl   WORD PTR [ebp-0x7f],sp
  41e892:	mov    ebx,ebx
  41e894:	in     eax,0x24
  41e896:	cmc    
  41e897:	inc    eax
  41e898:	xchg   ebx,eax
  41e899:	loop   0x41e82c
  41e89b:	ficomp WORD PTR [ebp+eiz*2+0x59ed9ba6]
  41e8a2:	fldenv [edx-0x5136b979]
  41e8a8:	adc    BYTE PTR [edx+0x61bf4341],ah
  41e8ae:	jmp    0xf3bcf84b
  41e8b3:	cs cmp eax,0xc6aef1b7
  41e8b9:	jne    0x41e8ad
  41e8bb:	imul   esi,esi,0xffffffe9
  41e8be:	dec    esp
  41e8bf:	or     dh,cl
  41e8c1:	add    eax,0x22a25850
  41e8c6:	test   eax,esi
  41e8c8:	leave  
  41e8c9:	mov    al,ds:0x24d4c2a9
  41e8ce:	mov    BYTE PTR [ecx],ch
  41e8d0:	push   edx
  41e8d1:	push   ss
  41e8d2:	sbb    eax,0x5c00bcda
  41e8d7:	ret    0xfea3
  41e8da:	cmp    DWORD PTR [ebp+0x7fd7d04c],edi
  41e8e0:	push   edi
  41e8e1:	jmp    0x41e8c9
  41e8e3:	call   0x8563:0xb593310d
  41e8ea:	mov    BYTE PTR [esi-0x5fcaafab],dh
  41e8f0:	or     BYTE PTR [edx-0x23],dl
  41e8f3:	xchg   edx,eax
  41e8f4:	inc    edi
  41e8f5:	ficom  DWORD PTR [ebp+0x30]
  41e8f8:	cmc    
  41e8f9:	sbb    al,0x90
  41e8fb:	xchg   esp,eax
  41e8fc:	retf   0xd283
  41e8ff:	dec    eax
  41e900:	xchg   BYTE PTR [ecx],bl
  41e902:	jmp    0x41e90f
  41e904:	xchg   esi,eax
  41e905:	mov    dl,0xe3
  41e907:	nop
  41e908:	xor    DWORD PTR [ecx+0x1e],eax
  41e90b:	and    BYTE PTR [ebp+0x413cc908],bh
  41e911:	stos   DWORD PTR es:[edi],eax
  41e912:	cmp    ah,bh
  41e914:	push   ss
  41e915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e916:	sbb    BYTE PTR [ebx],0x82
  41e919:	push   ebx
  41e91a:	pop    ebx
  41e91b:	or     BYTE PTR [edx],bh
  41e91d:	jecxz  0x41e8e9
  41e91f:	xor    ebx,ecx
  41e921:	push   esp
  41e922:	push   ss
  41e923:	into   
  41e924:	or     dh,bl
  41e926:	inc    edi
  41e927:	(bad)  [eax+0x4125065e]
  41e92d:	push   edx
  41e92e:	lea    ecx,[eax]
  41e930:	mov    ebp,0x898a0db1
  41e935:	jge    0x41e8c6
  41e937:	shl    BYTE PTR gs:[ebp-0x3f],cl
  41e93b:	imul   ebx,DWORD PTR [eax],0x21c3ce2f
  41e941:	add    BYTE PTR [edi],bl
  41e943:	outs   dx,BYTE PTR ds:[esi]
  41e945:	cmp    DWORD PTR [ebp-0x7b],ebp
  41e948:	loope  0x41e987
  41e94a:	sbb    al,0x7f
  41e94c:	sub    BYTE PTR [edx],0x43
  41e94f:	jmp    0x41e91d
  41e951:	jmp    0x41e979
  41e953:	retf   0x80f5
  41e956:	add    al,0x85
  41e958:	mov    ch,0xc
  41e95a:	aam    0x3e
  41e95c:	and    al,0x1a
  41e95e:	pop    esp
  41e95f:	sbb    bh,BYTE PTR [eax]
  41e961:	sbb    esp,edi
  41e963:	pusha  
  41e964:	jmp    0x2c24:0x22fa4898
  41e96b:	gs aaa 
  41e96d:	sbb    al,0x17
  41e96f:	and    BYTE PTR [ebx],ch
  41e971:	xor    BYTE PTR [edx],0x89
  41e974:	adc    BYTE PTR [edx],dl
  41e976:	pop    eax
  41e977:	xchg   edi,eax
  41e978:	dec    ebp
  41e979:	stos   BYTE PTR es:[edi],al
  41e97a:	shr    BYTE PTR [ebx+0x59],0x8e
  41e97e:	mov    ds:0x4458a707,eax
  41e983:	pop    ds
  41e984:	push   ecx
  41e985:	inc    edi
  41e986:	ror    DWORD PTR [ebx],1
  41e988:	adc    bl,bl
  41e98a:	outs   dx,BYTE PTR ds:[esi]
  41e98b:	rcl    ebx,cl
  41e98d:	enter  0x9427,0x36
  41e991:	jb     0x41e9e8
  41e993:	mov    esp,esp
  41e995:	jmp    0xf5b8:0x6880ea30
  41e99c:	inc    esi
  41e99d:	loopne 0x41e9c0
  41e99f:	or     ecx,esp
  41e9a1:	push   DWORD PTR [edi+0xcd4e6b9]
  41e9a7:	mov    dh,0x4e
  41e9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9aa:	les    edx,FWORD PTR [ebx+0x62]
  41e9ad:	pop    edi
  41e9ae:	pop    eax
  41e9af:	lds    edx,FWORD PTR [edx+0x5c]
  41e9b2:	rcl    al,cl
  41e9b4:	dec    edx
  41e9b5:	push   esp
  41e9b6:	add    DWORD PTR [ebp-0x49],ebx
  41e9b9:	fs adc al,0xbe
  41e9bc:	dec    ecx
  41e9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9be:	xor    ebx,DWORD PTR [ebp-0x31]
  41e9c1:	test   BYTE PTR [edx],al
  41e9c3:	mov    es,WORD PTR [ecx+0x54f9f3b0]
  41e9c9:	mov    ebx,DWORD PTR [ebx]
  41e9cb:	xor    ah,0xc1
  41e9ce:	lds    esp,FWORD PTR [edi-0x485d882]
  41e9d4:	pop    ss
  41e9d5:	call   0x175c22dd
  41e9da:	jmp    0x1fa9:0x1c290a26
  41e9e1:	sbb    al,0x19
  41e9e3:	cmp    ch,BYTE PTR [eax-0x3c]
  41e9e6:	std    
  41e9e7:	popa   
  41e9e8:	push   0xffffffc7
  41e9ea:	int3   
  41e9eb:	jno    0x41e9a6
  41e9ed:	adc    eax,0x57d3f544
  41e9f2:	fist   DWORD PTR [ebx]
  41e9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f5:	arpl   WORD PTR [ebp-0x3623fb73],cx
  41e9fb:	cmp    al,0xfd
  41e9fd:	lock cmp cl,BYTE PTR [ebp-0x60487616]
  41ea04:	push   0x75270d93
  41ea09:	cmp    al,0xf2
  41ea0b:	stos   DWORD PTR es:[edi],eax
  41ea0c:	sub    al,0x8d
  41ea0e:	cmp    esp,DWORD PTR [bx+si-0x14]
  41ea12:	mov    ebp,0x5a418ed8
  41ea17:	jle    0x41ea3e
  41ea19:	pop    edi
  41ea1a:	xchg   ebx,eax
  41ea1b:	sbb    edi,ebx
  41ea1d:	and    BYTE PTR [ebx+0x10e010cb],dl
  41ea23:	push   ecx
  41ea24:	pop    esi
  41ea25:	jno    0x41ea60
  41ea27:	in     eax,dx
  41ea28:	icebp  
  41ea29:	adc    bh,BYTE PTR gs:[edi]
  41ea2c:	cwde   
  41ea2d:	shl    BYTE PTR [edi-0x5e7503c4],0x4a
  41ea34:	xchg   ebp,eax
  41ea35:	pushf  
  41ea36:	jg     0x41ea7e
  41ea38:	cli    
  41ea39:	xchg   ecx,eax
  41ea3a:	and    eax,0x166bf5f3
  41ea3f:	js     0x41ea43
  41ea41:	mov    edx,0xd968a198
  41ea46:	sub    ebx,esp
  41ea48:	jb     0x41ea98
  41ea4a:	sub    DWORD PTR [ebp+esi*2+0x57],ecx
  41ea4e:	and    BYTE PTR [ebp+0x5448395d],bh
  41ea54:	retf   0x3d3c
  41ea57:	mov    ecx,0x8aefe338
  41ea5c:	aam    0xa4
  41ea5e:	pusha  
  41ea5f:	pop    ecx
  41ea60:	gs xor eax,0x4dc8262c
  41ea66:	mov    WORD PTR [esp+edx*4+0xacc70d6],ds
  41ea6d:	adc    BYTE PTR ds:0x297b8e0e,bl
  41ea73:	lods   eax,DWORD PTR ds:[si]
  41ea75:	xchg   ebx,eax
  41ea76:	jb     0x41ea43
  41ea78:	and    ebx,ebp
  41ea7a:	push   0xfffffff5
  41ea7c:	or     bl,BYTE PTR [edi]
  41ea7e:	cdq    
  41ea7f:	stos   BYTE PTR es:[edi],al
  41ea80:	call   0x65c63ff3
  41ea85:	sub    edx,edi
  41ea87:	dec    edx
  41ea88:	sub    ch,BYTE PTR [edi+0x2a]
  41ea8b:	(bad)  
  41ea8c:	and    dh,BYTE PTR [edi-0x5fbf80fb]
  41ea92:	adc    al,0x31
  41ea94:	mov    bl,0x5f
  41ea96:	jmp    0x1de4:0x48411989
  41ea9d:	pop    ebp
  41ea9e:	xor    bh,dh
  41eaa0:	mov    ah,0x2f
  41eaa2:	shl    DWORD PTR [ebx+0x0],0x0
	...
  41eaae:	add    BYTE PTR [eax],al
  41eab0:	add    BYTE PTR [esi-0x3e],bh
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x66
  41eabe:	std    
  41eabf:	shl    DWORD PTR [ebp+0x165c1],cl
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [ebx],dh
  41eaca:	shr    DWORD PTR [esi+0x77],0x53
  41eace:	fs ins BYTE PTR es:[edi],dx
  41ead0:	aam    0xe
  41ead2:	xchg   esi,eax
  41ead3:	xlat   BYTE PTR ds:[ebx]
  41ead4:	inc    ecx
  41ead5:	mov    ebx,0x6f22c8b7
  41eada:	cmp    BYTE PTR [edx],0x7c
  41eadd:	sub    ch,bl
  41eadf:	cmp    BYTE PTR [esp+ebx*4-0x4d9399c1],ah
  41eae6:	add    DWORD PTR [eax-0x46c17dae],0x5ea6364
  41eaf0:	clc    
  41eaf1:	sub    BYTE PTR [edx],ch
  41eaf3:	or     ecx,eax
  41eaf5:	add    esi,ebp
  41eaf7:	mov    bh,0x15
  41eaf9:	into   
  41eafa:	add    ah,0x7f
  41eafd:	repz clc 
  41eaff:	mov    dl,0x9f
  41eb01:	mov    ah,0x4f
  41eb03:	cmp    al,BYTE PTR [eax+edx*4+0x8]
  41eb07:	cli    
  41eb08:	leave  
  41eb09:	sbb    edi,ebp
  41eb0b:	(bad)  
  41eb0c:	lea    esp,[ebp+0x1f6bac13]
  41eb12:	clc    
  41eb13:	cmp    dh,dl
  41eb15:	adc    DWORD PTR [ecx],esi
  41eb17:	mov    DWORD PTR [ebp+ebx*4+0x7a],0xbf9f0d06
  41eb1f:	jns    0x41eaea
  41eb21:	inc    eax
  41eb22:	cmp    BYTE PTR [eax+0x416ab95d],dh
  41eb28:	outs   dx,DWORD PTR ds:[esi]
  41eb29:	in     al,dx
  41eb2a:	xor    eax,DWORD PTR [edi-0x21]
  41eb2d:	dec    esp
  41eb2e:	dec    edi
  41eb2f:	cmp    al,BYTE PTR [edi]
  41eb31:	(bad)  [esi+0x5ab9ca60]
  41eb37:	fwait
  41eb38:	inc    ebx
  41eb39:	pop    edi
  41eb3a:	(bad)  
  41eb3b:	or     bl,BYTE PTR [edx+0x16]
  41eb3e:	imul   BYTE PTR [ebx-0x17fb5d1d]
  41eb44:	imul   esi,DWORD PTR [eax+0x2f],0xfffffffd
  41eb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb49:	fiadd  WORD PTR [eax]
  41eb4b:	lahf   
  41eb4c:	xor    dh,0x38
  41eb4f:	jge    0x41eb01
  41eb51:	fiadd  DWORD PTR [ebx-0x3d]
  41eb54:	sub    al,0x95
  41eb56:	adc    al,0x9e
  41eb58:	xor    eax,DWORD PTR [ecx+0xe4ea57]
  41eb5e:	mov    ah,0x1f
  41eb61:	xchg   DWORD PTR [eax+0x5a],ecx
  41eb64:	cmp    esp,DWORD PTR [ebp-0x48a68cdc]
  41eb6a:	ja     0x41ebdc
  41eb6c:	mov    eax,0xdd1572e3
  41eb71:	test   BYTE PTR [edi],cl
  41eb73:	loopne 0x41eb37
  41eb75:	daa    
  41eb76:	adc    dl,dl
  41eb78:	push   ds
  41eb79:	and    ebp,DWORD PTR [edx-0x1e]
  41eb7c:	icebp  
  41eb7d:	xchg   ecx,eax
  41eb7e:	cmp    al,0xd9
  41eb80:	ret    
  41eb81:	imul   ebp,DWORD PTR [eax+0x55],0xffffffb5
  41eb85:	mov    bl,0xb7
  41eb87:	out    dx,al
  41eb88:	mov    ch,0xcc
  41eb8a:	and    al,0x9f
  41eb8c:	mov    ebp,0x61a2cc56
  41eb91:	es jle 0x41eb69
  41eb94:	cdq    
  41eb95:	or     DWORD PTR [ebp+0x40],0x7d
  41eb99:	in     al,dx
  41eb9a:	cmc    
  41eb9b:	repnz fs xchg edi,eax
  41eb9e:	mov    esi,0x351500a2
  41eba3:	loop   0x41eb3a
  41eba5:	hlt    
  41eba6:	cmp    DWORD PTR [edi],ebx
  41eba8:	mov    edx,0xedd655a0
  41ebad:	mov    ebp,0x81a8c6f5
  41ebb2:	fiadd  DWORD PTR [ebx-0x7a002a50]
  41ebb8:	or     DWORD PTR [ebp-0x61],edi
  41ebbb:	pop    esp
  41ebbc:	(bad)  
  41ebbd:	retf   
  41ebbe:	scas   al,BYTE PTR es:[edi]
  41ebbf:	pushf  
  41ebc0:	aam    0x77
  41ebc2:	(bad)  
  41ebc3:	rcr    DWORD PTR [ebp+0x3efd7db9],1
  41ebc9:	rol    BYTE PTR ds:0x471fb048,cl
  41ebcf:	mov    edx,cs
  41ebd1:	inc    eax
  41ebd2:	push   es
  41ebd3:	adc    DWORD PTR [edi+0x21],esp
  41ebd6:	or     BYTE PTR ds:0x964a68ef,ah
  41ebdc:	and    bl,cl
  41ebde:	add    eax,0x320a595a
  41ebe3:	ins    DWORD PTR es:[edi],dx
  41ebe4:	sub    BYTE PTR [esi],dh
  41ebe6:	jbe    0x41eba0
  41ebe8:	es (bad) 
  41ebea:	push   eax
  41ebeb:	test   BYTE PTR [ecx-0x214ff15c],dl
  41ebf1:	aaa    
  41ebf2:	xor    edx,DWORD PTR [ebx+eiz*1]
  41ebf5:	ds cli 
  41ebf7:	js     0x41ebfd
  41ebf9:	pop    DWORD PTR [edi-0x55]
  41ebfc:	fstp   DWORD PTR [eax-0x74]
  41ebff:	test   eax,0x3b331b80
  41ec04:	xchg   ch,bl
  41ec06:	lock jno 0x41ebd3
  41ec09:	retf   
  41ec0a:	fldenv [ecx]
  41ec0c:	sbb    bh,0xf7
  41ec0f:	mov    al,0x99
  41ec11:	or     al,0x4e
  41ec13:	xor    al,0x38
  41ec15:	push   0xffffff8a
  41ec17:	aad    0xfe
  41ec19:	mov    ah,0x8b
  41ec1b:	in     eax,dx
  41ec1c:	ret    
  41ec1d:	cmp    BYTE PTR [edx+0x57534a9e],dh
  41ec23:	aad    0xc8
  41ec25:	push   eax
  41ec26:	mov    ch,0x5a
  41ec28:	jae    0x41ec30
  41ec2a:	or     edi,esi
  41ec2c:	mov    edx,0x390120d5
  41ec31:	mov    dh,0x61
  41ec33:	jbe    0x41ec51
  41ec35:	cmp    eax,0x1b8cabd4
  41ec3a:	xor    dh,BYTE PTR ds:0x34176323
  41ec40:	sub    BYTE PTR ds:0x138bd23b,0x4c
  41ec47:	jmp    0xc37ffa18
  41ec4c:	jmp    0xab195c30
  41ec51:	stos   BYTE PTR es:[edi],al
  41ec52:	adc    DWORD PTR [eax-0x7b],esi
  41ec55:	mov    edx,0x7206d800
  41ec5a:	in     al,0x6
  41ec5c:	mov    esp,0xd7facac2
  41ec61:	jmp    0x41ecd8
  41ec63:	adc    eax,0xf01469a4
  41ec68:	and    dh,BYTE PTR [eax-0x7d]
  41ec6b:	sub    edi,DWORD PTR [eax]
  41ec6d:	gs pop edi
  41ec6f:	rol    BYTE PTR [ecx+0x4],1
  41ec72:	adc    eax,0xce53a653
  41ec77:	jg     0x41ebfc
  41ec79:	lea    ebx,[ecx-0x450c8d0b]
  41ec7f:	outs   dx,DWORD PTR ds:[esi]
  41ec80:	and    al,0x87
  41ec82:	add    BYTE PTR [ebx-0x4a],ah
  41ec85:	paddusw mm4,QWORD PTR [edi-0x18dc65ad]
  41ec8c:	xchg   DWORD PTR [edi-0x57ec8fdc],edi
  41ec92:	add    eax,0xe12abebe
  41ec97:	(bad)  
  41ec99:	dec    esp
  41ec9a:	leave  
  41ec9b:	dec    eax
  41ec9c:	mov    cl,0x8d
  41ec9e:	repz xchg edx,eax
  41eca0:	test   al,0xcd
  41eca2:	stos   BYTE PTR es:[edi],al
  41eca3:	(bad)  
  41eca4:	in     al,dx
  41eca5:	ror    BYTE PTR [esi],1
  41eca7:	add    bl,ah
  41eca9:	repnz dec edi
  41ecab:	icebp  
  41ecac:	push   ebp
  41ecad:	or     ecx,DWORD PTR [eax+0x64ffac9b]
  41ecb3:	mov    al,ss:0x3cc3fc7e
  41ecb9:	dec    esi
  41ecba:	push   ss
  41ecbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecbc:	mov    esi,0xa4b4f272
  41ecc1:	xor    al,BYTE PTR [edx]
  41ecc3:	or     ah,BYTE PTR [ecx+eiz*1-0x10]
  41ecc7:	icebp  
  41ecc8:	xchg   edx,ecx
  41ecca:	es jmp 0x867f2976
  41ecd0:	lods   al,BYTE PTR ds:[esi]
  41ecd1:	loop   0x41ed35
  41ecd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd4:	loopne 0x41ed2d
  41ecd6:	cs int 0x7f
  41ecd9:	jle    0x41ed5a
  41ecdb:	pop    edx
  41ecdc:	dec    ebx
  41ecdd:	cld    
  41ecde:	xchg   edx,eax
  41ecdf:	cwde   
  41ece0:	pusha  
  41ece1:	sub    eax,0x8aa60aa6
  41ece6:	adc    DWORD PTR [ebp+0x5e],0xffffff8a
  41ecea:	test   eax,0xc21ce319
  41ecef:	xor    DWORD PTR [edi],esi
  41ecf1:	test   al,0x58
  41ecf3:	jne    0x41ecdd
  41ecf5:	lods   al,BYTE PTR ds:[esi]
  41ecf6:	jne    0x41ed1d
  41ecf8:	outs   dx,DWORD PTR ds:[esi]
  41ecf9:	xor    DWORD PTR [ecx+0xe],esp
  41ecfc:	jl     0x41ec90
  41ecfe:	push   ebp
  41ecff:	in     eax,dx
  41ed00:	xor    eax,esp
  41ed02:	pop    eax
  41ed03:	or     al,0x5b
  41ed05:	and    ecx,ecx
  41ed07:	in     eax,0xed
  41ed09:	xchg   esi,eax
  41ed0a:	sbb    DWORD PTR ss:[esi+0x5c],ebx
  41ed0e:	pushf  
  41ed0f:	pusha  
  41ed10:	mov    esp,DWORD PTR [ebx-0x12]
  41ed13:	aas    
  41ed14:	ins    BYTE PTR es:[edi],dx
  41ed15:	pusha  
  41ed16:	push   edx
  41ed17:	sub    eax,0xf698034
  41ed1c:	mov    eax,0xa9da1e3a
  41ed21:	dec    edi
  41ed22:	(bad)
  41ed25:	xlat   BYTE PTR ds:[ebx]
  41ed26:	mov    bh,0x10
  41ed28:	adc    eax,0xe655a248
  41ed2d:	cmp    al,0xeb
  41ed2f:	in     eax,0xf7
  41ed31:	or     eax,0xec23c510
  41ed36:	mov    DWORD PTR [edi],0x2888218e
  41ed3c:	dec    eax
  41ed3d:	jp     0x41ed05
  41ed3f:	jmp    0xa18468f2
  41ed44:	add    eax,0xdf50c47d
  41ed49:	sub    bl,BYTE PTR [ebx]
  41ed4b:	sub    ecx,DWORD PTR [ebx-0x3b]
  41ed4e:	dec    edx
  41ed4f:	fisubr WORD PTR [ebx-0x47141d97]
  41ed55:	mov    al,ds:0x4d07ad36
  41ed5a:	test   BYTE PTR [ebp+0x721bd17d],0xbf
  41ed61:	sub    al,0xfb
  41ed63:	aad    0x21
  41ed65:	adc    DWORD PTR [ebx+eax*1-0x572d5509],ecx
  41ed6c:	mov    dh,0x79
  41ed6e:	add    bl,BYTE PTR [edi+ebx*2]
  41ed71:	inc    ebx
  41ed72:	sub    eax,0x434ede25
  41ed77:	sahf   
  41ed78:	dec    edx
  41ed79:	pop    edx
  41ed7a:	inc    esp
  41ed7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7c:	retf   0xc4ba
  41ed7f:	neg    BYTE PTR [ecx-0x48af3b88]
  41ed85:	cmp    BYTE PTR [esi+edx*1],ah
  41ed88:	and    al,0x62
  41ed8a:	retf   
  41ed8b:	test   bh,bh
  41ed8d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ed8f:	xchg   esp,eax
  41ed90:	shl    BYTE PTR [edx-0x4a6b2239],0x64
  41ed97:	or     DWORD PTR [ebp-0x66],0xaef33d1f
  41ed9e:	retf   0xd02c
  41eda1:	adc    BYTE PTR [edx+0x48],bh
  41eda4:	mov    eax,ds:0x1da87a5
  41eda9:	fisttp QWORD PTR [eax]
  41edab:	sahf   
  41edac:	test   DWORD PTR [ebx+ebp*1+0x68],0xe6e08afd
  41edb4:	shr    DWORD PTR [edi-0x45],0x77
  41edb8:	(bad)  
  41edb9:	push   esp
  41edba:	push   ebp
  41edbb:	cdq    
  41edbc:	inc    ebx
  41edbd:	sbb    al,BYTE PTR [esi+0x26]
  41edc0:	mov    ecx,0x863c0583
  41edc5:	mov    ah,0xda
  41edc7:	push   esp
  41edc8:	push   cs
  41edc9:	outs   dx,BYTE PTR ds:[esi]
  41edca:	push   edi
  41edcb:	cmp    al,0x75
  41edcd:	pushf  
  41edce:	or     esp,0x17cdf6f7
  41edd4:	(bad)  [esi+0x181c464c]
  41edda:	mov    ecx,DWORD PTR [ecx]
  41eddc:	mov    bl,0x3e
  41edde:	mov    ds:0x2a01b8ce,al
  41ede3:	xchg   bh,ah
  41ede5:	pop    ds
  41ede6:	fnstcw WORD PTR [edi+0x23]
  41ede9:	sub    ecx,ecx
  41edeb:	adc    DWORD PTR [edi],eax
  41eded:	mov    al,ds:0x7e69b624
  41edf2:	xchg   esp,eax
  41edf3:	push   0x2c
  41edf5:	adc    BYTE PTR ds:0xf3d68643,0x41
  41edfc:	pusha  
  41edfd:	jmp    0x4d89ce08
  41ee02:	sbb    eax,0x90a4fe99
  41ee07:	xchg   eax,ebp
  41ee09:	xor    BYTE PTR [ebx-0x15769352],dh
  41ee0f:	mov    esp,0x8122d2e0
  41ee14:	or     edi,ecx
  41ee16:	rcr    dh,1
  41ee18:	adc    eax,0x10c4a335
  41ee1d:	add    al,0x27
  41ee1f:	jmp    0xc11c:0xa4501ccb
  41ee26:	inc    edx
  41ee27:	xchg   esp,eax
  41ee28:	mov    eax,0x293c2a23
  41ee2d:	or     BYTE PTR [ecx-0x27],ch
  41ee30:	jmp    0x41ee03
  41ee32:	mov    edx,0xcb130b51
  41ee37:	in     eax,dx
  41ee38:	xchg   esi,eax
  41ee39:	lods   al,BYTE PTR ds:[esi]
  41ee3a:	out    0x67,eax
  41ee3c:	jae    0x41eeb0
  41ee3e:	jne    0x41ee88
  41ee40:	aaa    
  41ee41:	int3   
  41ee42:	mov    bl,0x67
  41ee44:	xor    DWORD PTR [edx+ebx*2-0x28],ebx
  41ee48:	lahf   
  41ee49:	jmp    0x41ee5d
  41ee4b:	enter  0x3ce1,0x28
  41ee4f:	int3   
  41ee50:	ret    
  41ee51:	xchg   bl,ah
  41ee53:	(bad)  
  41ee54:	shr    al,0xf0
  41ee57:	repnz lea ebx,ds:0x817521a0
  41ee5e:	push   eax
  41ee5f:	je     0x41ee02
  41ee61:	shr    DWORD PTR [eax],0x34
  41ee64:	popa   
  41ee65:	iret   
  41ee66:	push   ecx
  41ee67:	je     0x41ee79
  41ee69:	stos   DWORD PTR es:[edi],eax
  41ee6a:	pop    eax
  41ee6b:	fstp   TBYTE PTR ds:0xc104db1a
  41ee71:	push   eax
  41ee72:	hlt    
  41ee73:	add    BYTE PTR ds:[eax],al
	...
  41ee7e:	add    BYTE PTR [eax],al
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0x412f76e4
  41ee8e:	fadd   DWORD PTR [esi+0x1696c3f]
  41ee94:	add    BYTE PTR [ebx-0x1dfffffd],ch
  41ee9a:	out    dx,eax
  41ee9b:	jl     0x41eebe
  41ee9d:	push   ss
  41ee9e:	cmp    eax,DWORD PTR [ecx+0x38a755c9]
  41eea4:	push   ecx
  41eea5:	fsub   DWORD PTR [edx+0x47a7da63]
  41eeab:	(bad)  
  41eeac:	aad    0x79
  41eeae:	call   0x67540f90
  41eeb3:	push   edx
  41eeb4:	aad    0x51
  41eeb6:	push   es
  41eeb7:	shl    edi,1
  41eeb9:	bound  edi,QWORD PTR [ebx]
  41eebb:	stos   BYTE PTR es:[edi],al
  41eebc:	xchg   BYTE PTR [eax],ah
  41eebe:	dec    esi
  41eebf:	xor    bl,BYTE PTR [edi+0xe]
  41eec2:	adc    BYTE PTR [ebx+eiz*1-0x29],dl
  41eec6:	jnp    0x41eeac
  41eec8:	mov    dl,0x6b
  41eeca:	popf   
  41eecb:	cmp    eax,0x1add0f81
  41eed0:	inc    edi
  41eed1:	test   al,0xb4
  41eed3:	dec    eax
  41eed4:	mov    cl,0xf3
  41eed6:	adc    al,0xb3
  41eed8:	sbb    eax,0x93e9b08f
  41eedd:	mov    esp,DWORD PTR [esi-0x2655e568]
  41eee3:	pop    edi
  41eee4:	sar    ah,0x7e
  41eee7:	leave  
  41eee8:	rcl    BYTE PTR [eax],cl
  41eeea:	jmp    0x41ef55
  41eeec:	fbld   TBYTE PTR [ecx]
  41eeee:	shl    DWORD PTR [ecx],0x8c
  41eef1:	mov    bl,BYTE PTR [ecx+0x2e]
  41eef4:	inc    edi
  41eef5:	push   0x1fe1ab3f
  41eefa:	sar    BYTE PTR [ecx],1
  41eefc:	mov    ecx,0xe88d9646
  41ef01:	enter  0x4eda,0x46
  41ef05:	fsubp  st(0),st
  41ef07:	into   
  41ef08:	je     0x41eec7
  41ef0a:	test   DWORD PTR [ebp+0x7137759],esi
  41ef10:	and    BYTE PTR [edi-0x13],bh
  41ef13:	adc    BYTE PTR [ebp+0x68479eb],ch
  41ef19:	push   edi
  41ef1a:	dec    ebx
  41ef1b:	sub    edx,esi
  41ef1d:	dec    ebx
  41ef1e:	pop    ecx
  41ef1f:	loopne 0x41ef94
  41ef21:	out    0x67,al
  41ef23:	cmp    esi,DWORD PTR [edi+0x4666933f]
  41ef29:	ja     0x41ef39
  41ef2b:	dec    esp
  41ef2c:	xchg   edx,eax
  41ef2d:	cli    
  41ef2e:	(bad)  
  41ef2f:	cmp    eax,0x45207c
  41ef34:	inc    edi
  41ef35:	xchg   esp,eax
  41ef36:	sub    DWORD PTR [ecx-0x7b570ed8],edx
  41ef3c:	mov    al,ds:0xa84216f4
  41ef41:	sub    al,0x1a
  41ef43:	dec    esp
  41ef44:	adc    edx,edx
  41ef46:	repnz mov ebp,0xe0f02601
  41ef4c:	ds pop eax
  41ef4e:	rcl    BYTE PTR [eax-0x35fa58be],1
  41ef54:	cmp    BYTE PTR [ebx+0x4ee646a1],dl
  41ef5a:	int    0x23
  41ef5c:	addr16 js 0x41ef92
  41ef5f:	sbb    esi,ebx
  41ef61:	enter  0x97f2,0x8b
  41ef65:	pop    edx
  41ef66:	dec    edi
  41ef67:	jo     0x41ef1e
  41ef69:	fwait
  41ef6a:	mov    cl,0xc8
  41ef6c:	or     edi,0xffffff82
  41ef6f:	rcl    DWORD PTR [ecx],0x33
  41ef72:	or     BYTE PTR [esi+0x8],ch
  41ef75:	pop    sp
  41ef77:	scas   al,BYTE PTR es:[edi]
  41ef78:	jle    0x41ef62
  41ef7a:	daa    
  41ef7b:	xor    BYTE PTR [eax],cl
  41ef7d:	mov    esp,0x4b037a24
  41ef82:	repnz fs icebp 
  41ef85:	dec    edx
  41ef86:	sti    
  41ef87:	lock jno 0x41efc9
  41ef8a:	ja     0x41efb4
  41ef8c:	popa   
  41ef8d:	sub    dl,dh
  41ef8f:	adc    eax,DWORD PTR [edx]
  41ef91:	cmp    esp,DWORD PTR [esi-0x8dc4e31]
  41ef97:	leave  
  41ef98:	or     BYTE PTR [edx+0x5d525169],0x8f
  41ef9f:	in     eax,dx
  41efa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa1:	lods   eax,DWORD PTR ds:[esi]
  41efa2:	cld    
  41efa3:	dec    edx
  41efa4:	mov    bl,0x84
  41efa6:	xchg   edx,eax
  41efa7:	pop    edi
  41efa8:	and    ch,BYTE PTR [esi-0x2d73eba9]
  41efae:	pushf  
  41efaf:	jle    0x41ef97
  41efb1:	xchg   esp,eax
  41efb2:	push   esi
  41efb3:	add    BYTE PTR [esi+0x3d],0x47
  41efb7:	pop    esi
  41efb8:	pop    ss
  41efb9:	cmp    eax,0x334d53b2
  41efbe:	add    al,0x6e
  41efc0:	xchg   edi,ecx
  41efc2:	bound  esp,QWORD PTR [eax+eiz*4-0x5cc14c52]
  41efc9:	sub    eax,0x286e0812
  41efce:	mov    BYTE PTR [ebx-0x6683a1df],bh
  41efd4:	inc    esi
  41efd5:	and    edi,DWORD PTR [esi-0x6f]
  41efd8:	jns    0x41ef7a
  41efda:	push   ebp
  41efdb:	dec    edi
  41efdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdd:	(bad)  
  41efde:	and    BYTE PTR [ecx+ebx*1],dh
  41efe1:	aad    0xee
  41efe3:	ins    BYTE PTR es:[edi],dx
  41efe4:	inc    edi
  41efe5:	mov    ebp,0x17c0235f
  41efea:	jae    0x41ef76
  41efec:	mov    bh,0x6b
  41efee:	int3   
  41efef:	ja     0x41f03d
  41eff1:	push   ebp
  41eff2:	and    ebx,0x5e
  41eff5:	jg     0x41efe9
  41eff7:	dec    eax
  41eff8:	push   0x73
  41effa:	jae    0x41f066
  41effc:	inc    ebx
  41effd:	xchg   ebp,eax
  41effe:	rcl    ebp,cl
  41f000:	or     al,0xfa
  41f002:	rol    ebx,1
  41f004:	xor    ch,BYTE PTR [esi+0x5ef0d3f5]
  41f00a:	pushf  
  41f00b:	in     al,0x7
  41f00d:	adc    al,bl
  41f00f:	int3   
  41f010:	(bad)  
  41f012:	mov    edi,DWORD PTR [edx]
  41f014:	or     dh,BYTE PTR [ebx-0x6f]
  41f017:	outs   dx,BYTE PTR ds:[esi]
  41f018:	jmp    0x41f011
  41f01a:	sbb    cl,BYTE PTR [esi]
  41f01c:	dec    ebp
  41f01d:	sbb    cl,ah
  41f01f:	imul   esp,edi,0x5a90f4d0
  41f025:	ret    0x3fc
  41f028:	in     eax,0xda
  41f02a:	test   eax,0x33f8e79b
  41f02f:	shl    ebp,0xf6
  41f032:	(bad)  
  41f033:	xchg   esi,eax
  41f034:	dec    esi
  41f035:	xor    BYTE PTR [edx+0x5a109b03],ch
  41f03b:	sbb    eax,0x8bf2ad78
  41f040:	pop    ebx
  41f041:	test   eax,0xbb38a0e9
  41f046:	fucomp st(4)
  41f048:	jbe    0x41f071
  41f04a:	addr16 (bad) 
  41f04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f04d:	mov    esi,0x2c989e54
  41f052:	mov    ebx,0x2e8eb65
  41f057:	arpl   si,bx
  41f059:	jmp    0x41f05e
  41f05b:	mov    al,bl
  41f05d:	pusha  
  41f05e:	xor    esi,DWORD PTR [edi-0x2b4f557d]
  41f064:	mov    esi,0x4dd83cb2
  41f069:	mov    dh,0x1d
  41f06b:	push   esp
  41f06d:	lods   al,BYTE PTR ds:[esi]
  41f06e:	sahf   
  41f06f:	pop    ds
  41f070:	daa    
  41f071:	inc    ebp
  41f072:	jg     0x41f06d
  41f074:	cmc    
  41f075:	sbb    al,0x48
  41f077:	jae    0x41f03e
  41f079:	jb     0x41f0b3
  41f07b:	ins    DWORD PTR es:[edi],dx
  41f07c:	sub    DWORD PTR [ebx-0x51],ebx
  41f07f:	sub    eax,0xeba77cff
  41f084:	sbb    BYTE PTR [edx],dh
  41f086:	adc    eax,0x4c7cbae5
  41f08b:	ds and eax,0x874a7a94
  41f091:	sbb    al,0x70
  41f093:	sub    BYTE PTR [esi],ch
  41f095:	std    
  41f096:	xchg   esp,eax
  41f097:	push   ss
  41f098:	aam    0x17
  41f09a:	jnp    0x41f0e6
  41f09c:	mov    al,cl
  41f09e:	outs   dx,DWORD PTR ds:[esi]
  41f09f:	dec    edx
  41f0a0:	sub    eax,0x23976363
  41f0a5:	imul   BYTE PTR [ecx]
  41f0a7:	pop    ebp
  41f0a8:	in     eax,0x5d
  41f0aa:	sbb    eax,0x1e227de7
  41f0af:	popa   
  41f0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b1:	or     BYTE PTR [ecx+0x50dd1797],al
  41f0b7:	es push ebx
  41f0b9:	in     al,0x9f
  41f0bb:	pop    ebx
  41f0bc:	jle    0x41f05e
  41f0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0bf:	xor    eax,0x4bbe1845
  41f0c4:	sbb    ah,BYTE PTR [edi-0x42]
  41f0c7:	jae    0x41f0f1
  41f0c9:	stc    
  41f0ca:	call   DWORD PTR [edx-0x3316dfad]
  41f0d0:	inc    eax
  41f0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d2:	pop    esi
  41f0d3:	mov    al,0xc2
  41f0d5:	dec    ecx
  41f0d6:	out    dx,al
  41f0d7:	inc    edx
  41f0d8:	ins    BYTE PTR es:[edi],dx
  41f0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0da:	sub    ch,cl
  41f0dc:	mov    eax,ds:0x46fc83c7
  41f0e1:	data16 fcomp QWORD PTR [edi+0x59]
  41f0e5:	pop    es
  41f0e6:	xchg   edx,eax
  41f0e7:	adc    eax,0x3a6f63c1
  41f0ec:	jns    0x41f075
  41f0ee:	push   cs
  41f0ef:	and    ebx,ecx
  41f0f1:	int    0xc8
  41f0f3:	xor    eax,0x1465c442
  41f0f8:	mov    eax,ds:0xc4a3a266
  41f0fd:	mov    ah,0x41
  41f0ff:	sbb    edi,edi
  41f101:	ds test dh,ah
  41f104:	sbb    ah,dh
  41f106:	into   
  41f107:	inc    ebp
  41f108:	cdq    
  41f109:	push   esp
  41f10a:	xchg   esp,eax
  41f10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10c:	or     eax,0x5aa7b714
  41f111:	push   0xa35dbf75
  41f116:	out    0x57,al
  41f118:	cdq    
  41f119:	adc    eax,0x813d6015
  41f11e:	(bad)  [ebp-0x54]
  41f121:	inc    esi
  41f122:	enter  0xf646,0xa0
  41f126:	cli    
  41f127:	neg    DWORD PTR [ecx]
  41f129:	and    bh,BYTE PTR [ebx+0x72]
  41f12c:	sbb    DWORD PTR [esi-0x56],ecx
  41f12f:	cli    
  41f130:	aaa    
  41f131:	dec    esp
  41f132:	(bad)  
  41f133:	mov    ecx,0xe71efdf3
  41f138:	and    edi,DWORD PTR [ebx-0x7a]
  41f13b:	retf   
  41f13c:	xchg   ebp,eax
  41f13d:	jo     0x41f1b0
  41f13f:	mov    bh,0xa7
  41f141:	mov    es,WORD PTR [ecx]
  41f143:	adc    DWORD PTR [bp+0x5444],esp
  41f148:	(bad)  
  41f149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14a:	or     BYTE PTR [ebx+0x442ded7],ch
  41f150:	mov    ds,WORD PTR [edx]
  41f152:	shl    BYTE PTR [edi],0x45
  41f155:	test   al,0x59
  41f157:	aad    0x41
  41f159:	rol    BYTE PTR [ebx],1
  41f15b:	sbb    edi,DWORD PTR [edx+0x5f]
  41f15e:	test   al,0xdf
  41f160:	jmp    0xfc87:0x7c1266f3
  41f167:	test   DWORD PTR [eax-0x55e2045],0x308eac93
  41f171:	sub    eax,0xfb02744a
  41f176:	sub    DWORD PTR ds:0x910d125a,edx
  41f17c:	mov    ecx,0x8735c93d
  41f181:	repnz push ecx
  41f183:	sub    DWORD PTR [edi],esp
  41f185:	push   esi
  41f186:	xchg   ebp,eax
  41f187:	push   eax
  41f188:	leave  
  41f189:	push   cs
  41f18a:	mov    WORD PTR [eax+0x27f54b29],cs
  41f190:	or     eax,ecx
  41f192:	jl     0x41f186
  41f194:	xor    ch,BYTE PTR [ebx-0x1b]
  41f197:	mov    esi,0x3bf7014a
  41f19c:	and    DWORD PTR [edx+0x56],esi
  41f19f:	or     bh,BYTE PTR [eax+0x0]
  41f1a2:	jecxz  0x41f140
  41f1a4:	and    bl,0xa7
  41f1a7:	xchg   ecx,eax
  41f1a8:	xor    al,BYTE PTR [ebp-0x9]
  41f1ab:	pop    es
  41f1ac:	aaa    
  41f1ad:	push   sp
  41f1af:	in     al,dx
  41f1b0:	mov    ch,0x0
  41f1b2:	mov    dh,0x6e
  41f1b4:	arpl   di,ax
  41f1b6:	inc    eax
  41f1b7:	ss in  eax,dx
  41f1b9:	or     eax,0x40561805
  41f1be:	fs jle 0x41f17a
  41f1c1:	cld    
  41f1c2:	enter  0x4c4d,0xfd
  41f1c6:	cmp    BYTE PTR [ebx],bl
  41f1c8:	sbb    esi,DWORD PTR [edx]
  41f1ca:	dec    esp
  41f1cb:	lock xchg edi,eax
  41f1cd:	repz std 
  41f1cf:	lods   al,BYTE PTR ds:[esi]
  41f1d0:	jmp    0x82b6e0f
  41f1d5:	xchg   edi,eax
  41f1d6:	imul   BYTE PTR [ebx+0x345651f3]
  41f1dc:	inc    esp
  41f1dd:	imul   ebp,DWORD PTR [edx+0x30],0xd5035b74
  41f1e4:	pushf  
  41f1e5:	push   ecx
  41f1e6:	or     ebp,DWORD PTR [edx+0x226c256d]
  41f1ec:	or     eax,0xf8fb8c3a
  41f1f1:	bound  edx,QWORD PTR [ebp+0x7d]
  41f1f4:	call   0xb6d8a8a
  41f1f9:	hlt    
  41f1fa:	pop    edi
  41f1fb:	test   eax,0x94bea74e
  41f200:	inc    ebp
  41f201:	outs   dx,BYTE PTR ds:[esi]
  41f202:	in     eax,dx
  41f203:	mov    ah,0x8c
  41f205:	mov    cs,esp
  41f207:	jl     0x41f26c
  41f209:	cdq    
  41f20a:	(bad)  
  41f20c:	repnz ss dec esi
  41f20f:	(bad)  
  41f210:	aam    0x75
  41f212:	rol    BYTE PTR ds:0x94206be4,cl
  41f218:	pop    ecx
  41f219:	nop
  41f21a:	xchg   DWORD PTR [edi+0x1778a346],ecx
  41f220:	jg     0x41f1bf
  41f222:	leave  
  41f223:	mov    dl,0x96
  41f225:	(bad)  
  41f226:	push   esi
  41f227:	into   
  41f228:	clc    
  41f229:	adc    BYTE PTR [ecx],cl
  41f22b:	add    cl,bl
  41f22d:	pop    edx
  41f22e:	arpl   WORD PTR [esi+0x4],dx
  41f231:	adc    ah,BYTE PTR [ecx+eax*4-0x54]
  41f235:	pmulhw mm6,QWORD PTR [edi+eax*1-0x67]
  41f23a:	std    
  41f23b:	std    
  41f23c:	ins    BYTE PTR es:[edi],dx
  41f23d:	xchg   ebp,eax
  41f23e:	test   DWORD PTR [eax+0x7259de7d],edi
	...
  41f250:	add    BYTE PTR [eax],dh
  41f252:	ret    0xe921
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx-0x5e],ebx
  41f25e:	pop    ds
  41f25f:	jecxz  0x41f283
  41f261:	pop    ss
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	stos   DWORD PTR es:[edi],eax
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [ecx-0x76308d80],bh
  41f26e:	sbb    BYTE PTR [ebx+0x5003cb0f],ah
  41f274:	mov    ds:0x89dace58,eax
  41f279:	xor    eax,0x4be27e1b
  41f27e:	add    al,0x2b
  41f280:	or     DWORD PTR [esi-0x75],0xb1c653e1
  41f287:	fdivr  DWORD PTR [esi-0xebde7cc]
  41f28d:	dec    ebx
  41f28e:	add    dl,BYTE PTR [ebx+ecx*1-0xbf5ca9c]
  41f295:	or     eax,0xbb491b5b
  41f29a:	neg    DWORD PTR [edi]
  41f29c:	push   0x1e
  41f29e:	sbb    eax,0xa9a02756
  41f2a3:	in     eax,0xfe
  41f2a5:	ret    
  41f2a6:	mov    bh,0x39
  41f2a8:	and    ah,BYTE PTR [ecx-0xb]
  41f2ab:	push   eax
  41f2ac:	jae    0x41f253
  41f2ae:	sub    DWORD PTR [esi+0x7a94f573],esi
  41f2b4:	daa    
  41f2b5:	out    0xf,eax
  41f2b7:	mov    esi,DWORD PTR [ebx-0x52]
  41f2ba:	test   BYTE PTR [eax],ch
  41f2bc:	adc    DWORD PTR ds:[ecx],0xffffffeb
  41f2c0:	clc    
  41f2c1:	popa   
  41f2c2:	add    BYTE PTR [edx-0x2b9ed783],ch
  41f2c8:	inc    ecx
  41f2c9:	pop    edi
  41f2ca:	mov    eax,ds:0xa7525d84
  41f2cf:	std    
  41f2d0:	stos   DWORD PTR es:[edi],eax
  41f2d1:	data16 xor dl,ch
  41f2d4:	repz or eax,0x4ae5b137
  41f2da:	sub    BYTE PTR [eax+0x53],ch
  41f2dd:	mov    eax,ds:0xfc5ff130
  41f2e2:	fnstenv [edx]
  41f2e4:	pusha  
  41f2e5:	mul    BYTE PTR [ebx]
  41f2e7:	hlt    
  41f2e8:	adc    BYTE PTR [eax-0x5d],ch
  41f2eb:	cli    
  41f2ec:	in     al,0x93
  41f2ee:	sbb    esi,ebp
  41f2f0:	push   ebp
  41f2f1:	test   eax,0x3bb06051
  41f2f6:	jo     0x41f2a9
  41f2f8:	cmc    
  41f2f9:	clc    
  41f2fa:	pop    edi
  41f2fb:	pop    esi
  41f2fc:	add    DWORD PTR [esi+0xb9de73],edx
  41f302:	jmp    0x75471ce7
  41f307:	cmp    al,0xe5
  41f309:	sub    al,0xcc
  41f30b:	xchg   edi,eax
  41f30c:	push   ecx
  41f30d:	fwait
  41f30e:	dec    ebx
  41f30f:	inc    edi
  41f310:	push   ebx
  41f311:	mov    WORD PTR [ebp+0x3281f65],?
  41f317:	popa   
  41f318:	mov    eax,ds:0x7d33a16b
  41f31d:	mov    dh,0xec
  41f31f:	loop   0x41f370
  41f321:	loope  0x41f39a
  41f323:	lods   al,BYTE PTR ds:[esi]
  41f324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f325:	call   0x5631:0x40ec425f
  41f32c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f32d:	mov    edx,0x26df1197
  41f332:	sbb    eax,0xab480193
  41f337:	and    BYTE PTR ds:0x5a34ee95,cl
  41f33d:	fisttp WORD PTR fs:[ecx+0x3ecc2ca0]
  41f344:	cs sbb al,0x64
  41f347:	test   eax,0xca10891
  41f34c:	push   0xabbdce46
  41f351:	push   0x48e95f2f
  41f356:	fisubr DWORD PTR [ecx-0x6a]
  41f359:	out    dx,al
  41f35a:	into   
  41f35b:	ins    DWORD PTR es:[edi],dx
  41f35c:	jle    0x41f2f7
  41f35e:	retf   0x486c
  41f361:	scas   eax,DWORD PTR es:[edi]
  41f362:	xor    al,0x58
  41f364:	mov    ah,0xd1
  41f366:	in     eax,dx
  41f367:	jae    0x41f3a1
  41f369:	aad    0xf1
  41f36b:	retf   0x97b4
  41f36e:	fldenv [ecx+edi*8+0x6d]
  41f372:	mov    ds:0x9ecd00b4,eax
  41f377:	sub    ecx,DWORD PTR [esi-0x5516aef7]
  41f37d:	or     eax,0xdee84d5c
  41f382:	push   esp
  41f383:	ret    0x259
  41f386:	nop
  41f387:	enter  0xae0b,0x22
  41f38b:	in     al,dx
  41f38c:	jmp    0x41f36b
  41f38e:	and    eax,0xd75105a7
  41f393:	hlt    
  41f394:	sub    dl,bl
  41f396:	push   eax
  41f397:	int3   
  41f398:	xor    al,0x71
  41f39a:	call   0xe2fce12a
  41f39f:	mov    ch,0xd9
  41f3a1:	loopne 0x41f3d7
  41f3a3:	stc    
  41f3a4:	adc    eax,esp
  41f3a6:	push   edx
  41f3a7:	gs shl dh,0x77
  41f3ab:	fisubr DWORD PTR [ebp+0x27741a44]
  41f3b1:	test   eax,0xc81a1ff
  41f3b6:	(bad)  
  41f3b7:	mov    bh,0x62
  41f3b9:	xchg   edx,eax
  41f3ba:	add    eax,0x8faf5789
  41f3bf:	push   esi
  41f3c0:	xor    ebp,0xffffffc9
  41f3c3:	addr16 mov eax,0x12c14cc9
  41f3c9:	in     eax,0x39
  41f3cb:	dec    edx
  41f3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3cd:	adc    dl,BYTE PTR [ebx+0x5ae78582]
  41f3d3:	push   ds
  41f3d4:	and    DWORD PTR [ecx-0x48c2836],ecx
  41f3da:	test   al,0x43
  41f3dc:	push   esi
  41f3dd:	xchg   ebx,eax
  41f3de:	imul   eax,DWORD PTR [edi-0x77],0x3e
  41f3e2:	sub    BYTE PTR [edx+0x18],ch
  41f3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e6:	lahf   
  41f3e7:	repz hlt 
  41f3e9:	dec    edx
  41f3ea:	and    esp,DWORD PTR [ebx-0x4f0cc8ce]
  41f3f0:	add    DWORD PTR [edx],0xc470105a
  41f3f6:	and    ebp,eax
  41f3f8:	inc    edi
  41f3f9:	inc    esi
  41f3fa:	pop    ecx
  41f3fb:	xchg   DWORD PTR [edi-0x76],ebx
  41f3fe:	push   esp
  41f3ff:	dec    eax
  41f400:	dec    ebx
  41f401:	retf   
  41f402:	add    al,0x4d
  41f404:	pop    ecx
  41f405:	push   cs
  41f406:	fwait
  41f407:	mov    bl,0xe9
  41f409:	cmp    eax,0x9578264c
  41f40e:	lds    esi,FWORD PTR [eax]
  41f410:	and    al,0x7e
  41f412:	in     al,dx
  41f413:	(bad)  
  41f414:	push   ebx
  41f415:	(bad)  
  41f417:	mov    ecx,0x1b920cfe
  41f41c:	mov    ah,0x45
  41f41e:	stc    
  41f41f:	or     BYTE PTR ds:0xd5d418b5,0xee
  41f426:	xor    eax,0x88b187fb
  41f42c:	add    al,0xcf
  41f42e:	mov    ebp,0x94a7a694
  41f433:	adc    eax,ebp
  41f435:	idiv   BYTE PTR [eax+0x6c]
  41f438:	xchg   edx,eax
  41f439:	add    BYTE PTR [ebx+0x3cc12961],ah
  41f43f:	jae    0x41f41b
  41f441:	adc    DWORD PTR [ebp+edi*8+0x21f4ae7c],ecx
  41f448:	paddsb mm6,QWORD PTR [eax+0x79]
  41f44c:	push   0xe245f5fc
  41f451:	lds    esi,FWORD PTR [esi-0x3a88991c]
  41f457:	add    BYTE PTR [edx+0x7bad6a6d],cl
  41f45d:	pusha  
  41f45e:	and    ch,BYTE PTR [eax-0x5e]
  41f461:	shl    BYTE PTR [esp+ebp*2+0x28],1
  41f465:	lods   eax,DWORD PTR ds:[esi]
  41f466:	xor    cl,ah
  41f468:	adc    al,0x8e
  41f46a:	jae    0x41f420
  41f46c:	scas   eax,DWORD PTR es:[edi]
  41f46d:	mov    esi,0xaec9ddd5
  41f472:	mov    ?,WORD PTR [ebp+0x30]
  41f475:	ds scas eax,DWORD PTR es:[edi]
  41f477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f478:	push   edi
  41f479:	aam    0x38
  41f47b:	inc    edx
  41f47c:	pop    es
  41f47d:	lods   eax,DWORD PTR ds:[esi]
  41f47e:	cmc    
  41f47f:	or     eax,0x2e116355
  41f484:	and    bh,BYTE PTR [edx-0x79]
  41f487:	loop   0x41f455
  41f489:	adc    DWORD PTR [ebp-0x7f],ecx
  41f48c:	jne    0x41f4df
  41f48e:	cld    
  41f48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f490:	pop    ds
  41f491:	into   
  41f492:	inc    ebx
  41f493:	jge    0x41f4e7
  41f495:	push   ds
  41f496:	mov    al,0xf8
  41f498:	int3   
  41f499:	in     eax,0x8d
  41f49b:	fdivr  st,st(4)
  41f49d:	lods   eax,DWORD PTR ds:[esi]
  41f49e:	retf   
  41f49f:	inc    edx
  41f4a0:	and    edi,ecx
  41f4a2:	sub    al,0x9f
  41f4a4:	int    0xc1
  41f4a6:	fcmovbe st,st(2)
  41f4a8:	call   FWORD PTR [esi]
  41f4aa:	add    bh,BYTE PTR [ebx-0x3f]
  41f4ad:	adc    BYTE PTR [edx+eiz*2],al
  41f4b0:	adc    ch,cl
  41f4b2:	sub    dl,BYTE PTR [eax]
  41f4b4:	enter  0x4a8,0xcb
  41f4b8:	and    al,0xf3
  41f4ba:	jmp    0x2319f99f
  41f4bf:	shl    DWORD PTR [edi+0x53],1
  41f4c2:	inc    ecx
  41f4c3:	(bad)  
  41f4c4:	std    
  41f4c5:	outs   dx,DWORD PTR ds:[esi]
  41f4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c7:	add    BYTE PTR [ebp+edx*8+0x71],al
  41f4cb:	cwde   
  41f4cc:	push   ebx
  41f4cd:	retf   0xc09e
  41f4d0:	jmp    0xda9a:0x93c57318
  41f4d7:	ja     0x41f49d
  41f4d9:	or     DWORD PTR [edx+ebx*8+0x24],ebx
  41f4dd:	loope  0x41f524
  41f4df:	jp     0x41f514
  41f4e1:	dec    eax
  41f4e2:	addr16 xchg ebx,eax
  41f4e4:	sub    cl,BYTE PTR [edx-0x6e52d485]
  41f4ea:	sub    BYTE PTR [ecx-0x55d356d8],bh
  41f4f0:	stc    
  41f4f1:	mov    WORD PTR [ebx+0x61516107],cs
  41f4f7:	pop    edi
  41f4f8:	addr16 in al,0x38
  41f4fb:	fwait
  41f4fc:	mov    ds:0x77161a00,eax
  41f501:	data16 lahf 
  41f503:	cs xchg ecx,eax
  41f505:	stos   BYTE PTR es:[edi],al
  41f506:	mov    eax,0xb40985f1
  41f50b:	jl     0x41f4a9
  41f50d:	xlat   BYTE PTR ds:[ebx]
  41f50e:	dec    ebp
  41f50f:	sar    DWORD PTR [edi],0x68
  41f512:	jle    0x41f494
  41f514:	adc    DWORD PTR [edi+0x4a7ba8c7],edi
  41f51a:	mov    dl,0x21
  41f51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f51d:	test   BYTE PTR [esi],ch
  41f51f:	push   esi
  41f520:	pop    esp
  41f521:	fstp   st(5)
  41f523:	mov    ah,0xd9
  41f525:	xor    bl,BYTE PTR [ecx-0x69]
  41f528:	les    edi,FWORD PTR [eax]
  41f52a:	mov    ebp,0x52a5735
  41f52f:	xchg   esp,eax
  41f530:	mov    dh,0x92
  41f532:	(bad)  
  41f533:	fnstcw WORD PTR [edx-0x115dcc85]
  41f539:	sub    dh,al
  41f53b:	sbb    DWORD PTR [eax+edx*8-0x1c167523],esp
  41f542:	sahf   
  41f543:	sbb    DWORD PTR [ecx-0x55],ecx
  41f546:	cmp    BYTE PTR [edi+0x5bfc0fad],ch
  41f54c:	dec    esi
  41f54d:	fwait
  41f54e:	sbb    ah,dl
  41f550:	jmp    0x41f5c5
  41f552:	sti    
  41f553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f554:	ret    
  41f555:	xor    eax,0xf4e2dc8
  41f55a:	fisttp QWORD PTR fs:[esi-0x4d]
  41f55e:	xor    DWORD PTR [eax],ecx
  41f560:	inc    edi
  41f561:	test   BYTE PTR [eax-0x10950875],bl
  41f567:	scas   al,BYTE PTR es:[edi]
  41f568:	scas   eax,DWORD PTR es:[edi]
  41f569:	in     eax,dx
  41f56a:	fwait
  41f56b:	imul   edx,edx,0xe2ed77f8
  41f571:	sbb    DWORD PTR [ebp+0x26979c73],edx
  41f577:	jns    0x41f524
  41f579:	inc    ecx
  41f57a:	sub    al,0x5c
  41f57c:	out    dx,al
  41f57d:	shl    bl,1
  41f57f:	(bad)  
  41f580:	xchg   edx,eax
  41f581:	mov    dl,0x4e
  41f583:	fidivr WORD PTR [eax-0x6dfb96c8]
  41f589:	mov    ecx,0x768da02a
  41f58e:	dec    eax
  41f58f:	jl     0x41f549
  41f591:	test   al,0x1
  41f593:	(bad)  
  41f594:	addr16 inc ebx
  41f596:	mov    esi,0x6cbc8296
  41f59b:	pop    es
  41f59c:	aad    0xba
  41f59e:	cmp    al,0x2c
  41f5a0:	xchg   ebx,eax
  41f5a1:	and    BYTE PTR [esi],bh
  41f5a3:	inc    ecx
  41f5a4:	in     al,dx
  41f5a5:	in     al,dx
  41f5a6:	cmp    dl,ah
  41f5a8:	fidiv  DWORD PTR [eax]
  41f5aa:	inc    eax
  41f5ab:	and    DWORD PTR [ecx],eax
  41f5ad:	xchg   esp,eax
  41f5ae:	pop    ss
  41f5af:	loop   0x41f5be
  41f5b1:	in     eax,dx
  41f5b2:	pop    ecx
  41f5b3:	iret   
  41f5b4:	arpl   WORD PTR [ecx],bp
  41f5b6:	std    
  41f5b7:	jo     0x41f5e2
  41f5b9:	mov    WORD PTR [ecx+edx*2+0x9ea3572],cs
  41f5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5c1:	mov    edx,0xb0959be8
  41f5c6:	jbe    0x41f610
  41f5c8:	pop    ebx
  41f5c9:	leave  
  41f5ca:	lea    esp,[ebx+0x25]
  41f5cd:	pop    es
  41f5ce:	pusha  
  41f5cf:	xchg   esi,eax
  41f5d0:	(bad)  [ebx]
  41f5d2:	cmp    eax,0x92d2f5e2
  41f5d7:	cwde   
  41f5d8:	sar    DWORD PTR [ebp+0x1899cc47],cl
  41f5de:	jns    0x41f634
  41f5e0:	(bad)  
  41f5e1:	lods   eax,DWORD PTR ds:[esi]
  41f5e2:	mov    ecx,0xbd16b77e
  41f5e7:	xchg   esp,eax
  41f5e8:	xchg   ecx,eax
  41f5e9:	sub    bh,bl
  41f5eb:	dec    eax
  41f5ec:	out    dx,al
  41f5ed:	push   eax
  41f5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ef:	and    bl,bl
  41f5f1:	or     eax,0xc7ee4d3c
  41f5f6:	ret    0x95ba
  41f5f9:	dec    ebx
  41f5fa:	sbb    eax,0x212cbfc6
  41f5ff:	xchg   edi,eax
  41f600:	in     eax,0xe3
  41f602:	div    BYTE PTR ds:0x3b4cc63a
  41f608:	jbe    0x41f641
  41f60a:	sti    
  41f60b:	pop    es
  41f60c:	pop    ebp
  41f60d:	xor    ebp,DWORD PTR [eax-0x5d]
  41f610:	stos   BYTE PTR es:[edi],al
  41f611:	pop    edi
  41f612:	std    
  41f613:	push   ebx
	...
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	pusha  
  41f62e:	dec    edi
  41f62f:	cs pop eax
  41f631:	ret    0x170
  41f634:	add    BYTE PTR [ebx-0x31fffffd],ch
  41f63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f63b:	sub    esp,DWORD PTR [esi+0x6058a166]
  41f641:	jle    0x41f5e5
  41f643:	mov    dh,0x76
  41f645:	sbb    DWORD PTR [edx+0x0],esi
  41f648:	(bad)  
  41f649:	push   edx
  41f64a:	add    eax,0x338ebba9
  41f64f:	inc    eax
  41f650:	xlat   BYTE PTR ds:[ebx]
  41f651:	push   ss
  41f652:	imul   DWORD PTR [esi]
  41f654:	test   DWORD PTR [ebx],edx
  41f656:	push   esi
  41f657:	and    esi,DWORD PTR [ebx-0x69]
  41f65a:	jbe    0x41f617
  41f65c:	pop    ebp
  41f65d:	and    eax,0x130d84b2
  41f662:	jnp    0x41f6c2
  41f664:	or     al,0xf6
  41f666:	stos   DWORD PTR es:[edi],eax
  41f667:	push   cs
  41f668:	push   cs
  41f669:	outs   dx,BYTE PTR ds:[esi]
  41f66a:	dec    edx
  41f66b:	fwait
  41f66c:	in     al,dx
  41f66d:	sub    al,0x22
  41f66f:	sti    
  41f670:	sub    eax,DWORD PTR [edx+0x1d]
  41f673:	add    al,0xb8
  41f675:	jo     0x41f66d
  41f677:	cld    
  41f678:	push   cs
  41f679:	test   eax,0x41806d6c
  41f67e:	jle    0x41f6f0
  41f680:	fiadd  DWORD PTR [ebx+0x67]
  41f683:	rcr    DWORD PTR [ebx-0x52],cl
  41f686:	push   eax
  41f687:	adc    al,0x4e
  41f689:	mov    edx,0xea2df5a
  41f68e:	mul    edi
  41f690:	mov    DWORD PTR [ebp-0x68],0xdc81e90a
  41f697:	add    ebx,DWORD PTR [edx-0x772b1cfa]
  41f69d:	fs test al,0x71
  41f6a0:	ins    DWORD PTR es:[edi],dx
  41f6a1:	sub    esp,0x1180e2af
  41f6a7:	out    0xb8,eax
  41f6a9:	test   ebp,eax
  41f6ab:	mov    bh,0xb2
  41f6ad:	push   0x577ffeb4
  41f6b2:	inc    eax
  41f6b3:	pop    ss
  41f6b4:	scas   eax,DWORD PTR es:[edi]
  41f6b5:	sbb    DWORD PTR [ebp-0x39],esi
  41f6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b9:	sahf   
  41f6ba:	lds    ecx,FWORD PTR [edi+0x2fc274]
  41f6c0:	dec    esi
  41f6c1:	rcr    DWORD PTR [edx+0x571ab301],cl
  41f6c7:	mov    ch,0xc8
  41f6c9:	out    0x4c,eax
  41f6cb:	or     BYTE PTR [esi-0x53],ah
  41f6ce:	add    cl,BYTE PTR [eax+0x60c836b3]
  41f6d4:	pop    es
  41f6d5:	cmp    DWORD PTR [eax-0x3bc03d66],esp
  41f6db:	inc    ecx
  41f6dc:	pop    ebp
  41f6dd:	adc    DWORD PTR [ecx],edx
  41f6df:	shl    al,1
  41f6e1:	xchg   esi,eax
  41f6e2:	mov    ds:0x8e110ac1,eax
  41f6e7:	dec    esp
  41f6e8:	sbb    eax,0x43461892
  41f6ed:	lock and eax,ebx
  41f6f0:	std    
  41f6f1:	push   esp
  41f6f2:	jmp    0x41f68b
  41f6f4:	stc    
  41f6f5:	in     eax,dx
  41f6f6:	ret    0xb5c5
  41f6f9:	pop    esp
  41f6fa:	push   esi
  41f6fb:	cwde   
  41f6fc:	sbb    DWORD PTR [esi],edx
  41f6fe:	jge    0x41f701
  41f700:	(bad)  
  41f701:	mov    ebp,es
  41f703:	xchg   ebp,eax
  41f704:	iret   
  41f705:	into   
  41f706:	shl    ah,0xf0
  41f709:	sbb    eax,0x4e691e82
  41f70e:	sti    
  41f70f:	xor    al,0x52
  41f711:	enter  0x3561,0x3a
  41f715:	push   ebx
  41f716:	dec    edx
  41f717:	stos   BYTE PTR es:[edi],al
  41f718:	dec    esp
  41f719:	xchg   esp,eax
  41f71a:	test   DWORD PTR [esi-0x63],0xfc6725c2
  41f721:	(bad)  
  41f722:	dec    esp
  41f723:	js     0x41f6e8
  41f725:	pusha  
  41f726:	mov    edi,0x994f5c58
  41f72b:	push   ss
  41f72c:	fsub   QWORD PTR [ecx+0x69]
  41f72f:	sub    bl,BYTE PTR [edx-0x5e]
  41f732:	dec    esi
  41f733:	dec    edi
  41f734:	add    BYTE PTR [edx-0x4ea781ee],0x67
  41f73b:	jae    0x41f769
  41f73d:	das    
  41f73e:	xchg   DWORD PTR [eax-0x7d764ea1],eax
  41f744:	pop    es
  41f745:	retf   
  41f746:	addr16 push ecx
  41f748:	xchg   BYTE PTR [esi+0x21f52e02],al
  41f74e:	mov    eax,ds:0xe1d14066
  41f753:	mov    al,ds:0x29675bf9
  41f758:	xor    eax,0xc9a6cf11
  41f75d:	mov    ecx,0xbc888d4a
  41f762:	mov    ch,BYTE PTR [edx]
  41f764:	loop   0x41f774
  41f766:	ja     0x41f759
  41f768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f769:	push   ss
  41f76a:	xor    dl,BYTE PTR [eax-0x30bebec8]
  41f770:	jecxz  0x41f720
  41f772:	add    esi,DWORD PTR [eax-0x674187ad]
  41f778:	or     eax,ebx
  41f77a:	cmp    bl,bh
  41f77c:	fidivr WORD PTR [edx]
  41f77e:	sbb    eax,0xbe252d75
  41f783:	out    dx,al
  41f784:	(bad)  
  41f786:	ja     0x41f73d
  41f788:	jp     0x41f805
  41f78a:	and    eax,0xbf6688a3
  41f78f:	push   0x88d2057f
  41f794:	inc    eax
  41f795:	sar    DWORD PTR [edx+0x3eeea30a],0x1a
  41f79c:	sar    DWORD PTR [eax],1
  41f79e:	adc    DWORD PTR [ecx-0x22],esp
  41f7a1:	out    0x1f,al
  41f7a3:	sti    
  41f7a4:	cwde   
  41f7a5:	cdq    
  41f7a6:	mov    ch,0xf1
  41f7a8:	ins    DWORD PTR es:[edi],dx
  41f7a9:	das    
  41f7aa:	xor    BYTE PTR [edx+0xaa0556a],bl
  41f7b0:	cmp    esi,DWORD PTR [edx-0x7743e4e2]
  41f7b6:	pop    eax
  41f7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b8:	inc    ecx
  41f7b9:	mov    ah,0x75
  41f7bb:	dec    edx
  41f7bc:	inc    edi
  41f7bd:	ficom  WORD PTR [edx]
  41f7bf:	xchg   BYTE PTR [ebp-0x60],cl
  41f7c2:	xchg   DWORD PTR [ebx+0xb],ebx
  41f7c5:	cld    
  41f7c6:	mov    ah,0x78
  41f7c8:	inc    esi
  41f7c9:	lea    ebx,[si]
  41f7cc:	icebp  
  41f7cd:	scas   eax,DWORD PTR es:[edi]
  41f7ce:	sub    DWORD PTR [ebp+esi*8+0x68fce652],esp
  41f7d5:	ds mov ebp,0x10c97ce7
  41f7db:	jecxz  0x41f7de
  41f7dd:	jecxz  0x41f833
  41f7df:	sub    DWORD PTR [ebx+0x42662be7],0x67
  41f7e6:	sar    BYTE PTR [ebp+ebx*4-0x4b],0xa6
  41f7eb:	fidiv  DWORD PTR [edx-0x39ed530]
  41f7f1:	ins    DWORD PTR es:[edi],dx
  41f7f2:	push   di
  41f7f4:	push   DWORD PTR [edx]
  41f7f6:	shl    BYTE PTR [edi+eiz*1],0x8b
  41f7fa:	mov    bh,BYTE PTR [ecx-0x6e]
  41f7fd:	sahf   
  41f7fe:	repz out dx,al
  41f800:	loop   0x41f880
  41f802:	adc    eax,0x120f2c04
  41f807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f808:	mov    ch,BYTE PTR [edx-0x5b]
  41f80b:	fwait
  41f80c:	and    bh,BYTE PTR [ecx-0x37]
  41f80f:	sub    eax,0xd17fced2
  41f814:	xlat   BYTE PTR cs:[ebx]
  41f816:	jle    0x41f7ab
  41f818:	hlt    
  41f819:	arpl   WORD PTR [esi+ecx*4],ax
  41f81c:	cwde   
  41f81d:	mov    ah,0x41
  41f81f:	or     ecx,0xffffffc9
  41f822:	lea    edx,[edi-0x1a]
  41f825:	inc    esi
  41f826:	xor    ebp,DWORD PTR [ebp+0x62]
  41f829:	es mov edx,0x3ca42dde
  41f82f:	mov    dh,0x84
  41f831:	jne    0x41f7b5
  41f833:	stos   DWORD PTR es:[edi],eax
  41f834:	fstp   QWORD PTR [eax-0x50]
  41f837:	ror    ebp,0x3f
  41f83a:	xchg   edi,eax
  41f83b:	out    0xc3,eax
  41f83d:	mov    ebp,esp
  41f83f:	pop    ebx
  41f840:	inc    ebx
  41f841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f842:	and    DWORD PTR [ebx-0x22],edx
  41f845:	push   edi
  41f846:	(bad)  
  41f847:	fimul  WORD PTR [eax+esi*8-0x14]
  41f84b:	enter  0xca8,0x46
  41f84f:	adc    al,0x52
  41f851:	dec    ebx
  41f852:	mov    ds:0x78f33100,al
  41f857:	gs ds test al,0xad
  41f85b:	cdq    
  41f85c:	loop   0x41f7f8
  41f85e:	sti    
  41f85f:	xchg   ebp,eax
  41f860:	iret   
  41f861:	mov    ebp,0x68bb8ee4
  41f866:	repnz icebp 
  41f868:	cmp    al,0x43
  41f86a:	ss into 
  41f86c:	rcr    bl,cl
  41f86e:	or     dh,dh
  41f870:	push   ss
  41f871:	ins    BYTE PTR es:[edi],dx
  41f872:	shl    DWORD PTR [edx+edx*4-0x28],1
  41f876:	bound  edx,QWORD PTR [ebx]
  41f878:	inc    edx
  41f879:	jb     0x41f81e
  41f87b:	and    DWORD PTR [edi+0x75282eff],eax
  41f881:	iret   
  41f882:	mov    dl,0x64
  41f884:	ins    DWORD PTR es:[edi],dx
  41f885:	inc    edx
  41f886:	fldcw  WORD PTR [esi]
  41f888:	mov    al,0xed
  41f88a:	xor    eax,0x349a811e
  41f88f:	leave  
  41f890:	sbb    ecx,DWORD PTR [esi]
  41f892:	leave  
  41f893:	adc    ebp,DWORD PTR [edx-0x4c50cf15]
  41f899:	sub    BYTE PTR [esi-0x3e],ch
  41f89c:	dec    esi
  41f89d:	sub    DWORD PTR [ebx],eax
  41f89f:	out    dx,al
  41f8a0:	imul   BYTE PTR [ecx-0x6d]
  41f8a3:	sti    
  41f8a4:	dec    ebx
  41f8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a6:	cmp    bh,BYTE PTR [eax]
  41f8a8:	push   0x38
  41f8aa:	pop    eax
  41f8ab:	push   0x23
  41f8ad:	pushf  
  41f8ae:	cmp    DWORD PTR [esi-0x3c],ebp
  41f8b1:	into   
  41f8b2:	xor    DWORD PTR [eax+0xdd5c331],esp
  41f8b8:	cld    
  41f8b9:	add    ebx,esi
  41f8bb:	mov    ebx,0x97106680
  41f8c0:	sahf   
  41f8c1:	mov    ecx,esp
  41f8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c4:	push   cs
  41f8c5:	(bad)  
  41f8c6:	push   0x9c282bf8
  41f8cb:	ret    0x9a1c
  41f8ce:	mov    eax,ds:0x9fa3059
  41f8d3:	stos   DWORD PTR es:[edi],eax
  41f8d4:	jo     0x41f866
  41f8d6:	stos   DWORD PTR es:[edi],eax
  41f8d7:	dec    ebp
  41f8d8:	sub    esi,DWORD PTR [ecx+0x46]
  41f8db:	leave  
  41f8dc:	retf   0x60f5
  41f8df:	fnstcw WORD PTR [eax+0x9]
  41f8e2:	stc    
  41f8e3:	repnz mov edx,0x7f62258
  41f8e9:	cld    
  41f8ea:	jl     0x41f944
  41f8ec:	fs pop edi
  41f8ee:	sbb    al,0x26
  41f8f0:	out    dx,eax
  41f8f1:	sbb    ebx,DWORD PTR [ebp+0x189301c6]
  41f8f7:	sub    DWORD PTR [edi-0x6bee220c],ecx
  41f8fd:	ret    0x5f24
  41f900:	mov    al,0xed
  41f902:	enter  0xe629,0x6c
  41f906:	jb     0x41f8a0
  41f908:	out    dx,eax
  41f909:	cmp    eax,0x9887ad3d
  41f90e:	pop    esp
  41f90f:	sub    DWORD PTR [esi],0x2478c195
  41f915:	dec    ecx
  41f916:	neg    BYTE PTR [eax+0x4b]
  41f919:	jnp    0x41f995
  41f91b:	add    al,0x9d
  41f91d:	cmp    BYTE PTR [edx-0x5b],bl
  41f920:	sub    eax,0xdde1f40a
  41f925:	jbe    0x41f940
  41f927:	jecxz  0x41f8e8
  41f929:	xchg   eax,ebx
  41f92b:	cdq    
  41f92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f92d:	push   DWORD PTR [ebp+edx*8+0x3e2c0b4a]
  41f934:	ds mov edx,0x5ad8ce69
  41f93a:	add    al,0x1d
  41f93c:	mov    DWORD PTR [esi+0x6d98eb51],ecx
  41f942:	pushf  
  41f943:	cmp    al,0x81
  41f945:	add    bh,0xa5
  41f948:	mov    esp,0x377e276f
  41f94d:	nop
  41f94e:	sar    BYTE PTR [ebp+0x14],1
  41f951:	enter  0x9b2c,0x52
  41f955:	sub    DWORD PTR [esi+0x5bfa9407],ecx
  41f95b:	into   
  41f95c:	pop    ds
  41f95d:	into   
  41f95e:	pop    ebp
  41f95f:	shr    DWORD PTR [edx],1
  41f961:	mov    WORD PTR [esi],?
  41f963:	call   0x76fb:0x351e1380
  41f96a:	jg     0x41f8ec
  41f96c:	inc    ebx
  41f96d:	xor    DWORD PTR [eax+0x53],ebp
  41f970:	xchg   ebx,eax
  41f971:	repz (bad) 
  41f973:	xor    bh,0x6d
  41f976:	mov    ebx,ecx
  41f978:	dec    edx
  41f979:	xchg   esi,eax
  41f97a:	das    
  41f97b:	fisubr DWORD PTR [ecx]
  41f97d:	pushf  
  41f97e:	stos   DWORD PTR es:[edi],eax
  41f97f:	xchg   esp,eax
  41f980:	adc    edi,DWORD PTR [ebp-0x7f]
  41f983:	cmp    dl,BYTE PTR ds:0x277609fb
  41f989:	mov    ebp,0x501d37d4
  41f98e:	retf   
  41f98f:	pop    ss
  41f990:	test   DWORD PTR [ebx+0xb5557cf],ebx
  41f996:	nop
  41f997:	dec    eax
  41f998:	stos   DWORD PTR es:[edi],eax
  41f999:	or     eax,0x26876fb2
  41f99e:	lods   eax,DWORD PTR ds:[esi]
  41f99f:	fldenv [ebp-0x4d]
  41f9a2:	repz in eax,0x5a
  41f9a5:	mov    bh,0x10
  41f9a7:	xor    bh,BYTE PTR [esp+eiz*4-0x73]
  41f9ab:	(bad)  
  41f9ac:	into   
  41f9ad:	jmp    0xcfa1:0x857a6d1b
  41f9b4:	in     al,0xf9
  41f9b6:	lds    ebx,FWORD PTR [di]
  41f9b9:	cmp    ebx,DWORD PTR [edi-0x57]
  41f9bc:	loop   0x41f9ef
  41f9be:	jg     0x41f9da
  41f9c0:	cli    
  41f9c1:	or     DWORD PTR [eax+0x61],esp
  41f9c4:	cmp    DWORD PTR [ebp-0x78],edx
  41f9c7:	leave  
  41f9c8:	pop    es
  41f9c9:	out    0xef,al
  41f9cb:	sti    
  41f9cc:	push   ds
  41f9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ce:	or     eax,0x365861cc
  41f9d3:	cmp    al,0x86
  41f9d5:	dec    esi
  41f9d6:	(bad)  
  41f9d7:	mov    ch,0xc6
  41f9d9:	hlt    
  41f9da:	(bad)  
  41f9db:	mov    cl,0xa4
  41f9dd:	jmp    0x3ed1:0x17f5db72
	...
  41f9f0:	add    BYTE PTR [edi-0x637fe3d1],bh
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	out    0xdc,al
  41f9ff:	outs   dx,DWORD PTR ds:[esi]
  41fa00:	hlt    
  41fa01:	ins    DWORD PTR es:[edi],dx
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [ebx-0x7bfffffd],ch
  41fa0a:	fidiv  DWORD PTR ds:0x90f62a1a
  41fa10:	call   0xa23c:0x6332678d
  41fa17:	or     DWORD PTR [edx],edi
  41fa19:	sub    ch,dh
  41fa1b:	call   0x70090c39
  41fa20:	push   esi
  41fa21:	mov    eax,0x905fb8fe
  41fa26:	js     0x41fa99
  41fa28:	or     BYTE PTR [eax],0x28
  41fa2b:	loopne 0x41f9f7
  41fa2d:	imul   eax,DWORD PTR [ecx-0x19bec34e],0x62
  41fa34:	data16 fstp TBYTE PTR [ecx]
  41fa37:	aad    0xae
  41fa39:	out    0x54,eax
  41fa3b:	pop    ss
  41fa3c:	xchg   ebp,eax
  41fa3d:	jne    0x41f9fe
  41fa3f:	mov    WORD PTR [eax-0x52],?
  41fa42:	mov    bh,0x75
  41fa44:	push   edi
  41fa45:	and    DWORD PTR [eax],ebx
  41fa47:	mov    ss,WORD PTR [ebp+0x13]
  41fa4a:	repz sti 
  41fa4c:	mov    ds:0xd38f3a99,al
  41fa51:	mov    al,BYTE PTR [ebp+0x57]
  41fa54:	out    dx,eax
  41fa55:	push   ds
  41fa56:	sub    ebp,DWORD PTR [edx-0x27]
  41fa59:	xor    BYTE PTR [ebp+0x617472ce],cl
  41fa5f:	add    bl,dl
  41fa61:	inc    esp
  41fa62:	into   
  41fa63:	(bad)  [ecx]
  41fa65:	dec    edx
  41fa66:	mov    cl,0xbe
  41fa68:	(bad)  
  41fa69:	or     eax,0x76d621d9
  41fa6e:	fcom   QWORD PTR [eax]
  41fa70:	outs   dx,BYTE PTR ds:[esi]
  41fa71:	mov    cl,0x91
  41fa73:	mov    WORD PTR [ecx-0x6a7aa19c],gs
  41fa79:	cli    
  41fa7a:	adc    esi,DWORD PTR [edx+0x3a]
  41fa7d:	mov    bl,0x55
  41fa7f:	sub    eax,0x46641d05
  41fa84:	scas   al,BYTE PTR es:[edi]
  41fa85:	test   BYTE PTR [ecx-0x47edbb7b],dl
  41fa8b:	add    al,0x44
  41fa8d:	pop    es
  41fa8e:	stc    
  41fa8f:	cmp    dh,ah
  41fa91:	fs nop
  41fa93:	imul   ebp,DWORD PTR [edi],0xffffffe9
  41fa96:	mov    ds:0x87f2ca37,eax
  41fa9b:	push   ss
  41fa9c:	mov    dh,0x19
  41fa9e:	jne    0x41fa3d
  41faa0:	in     eax,0xf6
  41faa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa3:	cmp    BYTE PTR [edi+0x49],ch
  41faa6:	ins    BYTE PTR es:[edi],dx
  41faa7:	mov    ebx,esp
  41faa9:	dec    esp
  41faaa:	arpl   WORD PTR [edx],sp
  41faac:	pop    ecx
  41faad:	jmp    0xded1c0d8
  41fab2:	ja     0x41fa92
  41fab4:	in     al,dx
  41fab5:	les    ebx,FWORD PTR [ebx+0x7ab938c5]
  41fabb:	test   DWORD PTR [esi+0x64],0xd937ea29
  41fac2:	xchg   esp,eax
  41fac3:	enter  0xf1d1,0xac
  41fac7:	dec    esi
  41fac8:	jbe    0x41fb43
  41faca:	xor    ah,BYTE PTR [ecx-0x58]
  41facd:	pop    esi
  41face:	mov    edx,0xa8f87206
  41fad3:	jmp    DWORD PTR [edx+0x44]
  41fad6:	push   ecx
  41fad7:	mov    al,ds:0xe0be595c
  41fadc:	loope  0x41fab0
  41fade:	jmp    0x7873:0x777de63
  41fae5:	jns    0x41fa6c
  41fae7:	sbb    eax,0x47ba75bd
  41faec:	jb     0x41fb26
  41faee:	xor    BYTE PTR [edx-0x6593802],dl
  41faf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf5:	push   eax
  41faf6:	fcom   DWORD PTR [ebx+0x4d]
  41faf9:	pop    edx
  41fafa:	or     ah,BYTE PTR [edx+0x74]
  41fafd:	and    al,0xfb
  41faff:	push   ebx
  41fb00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb01:	sahf   
  41fb02:	jae    0x41facd
  41fb04:	icebp  
  41fb05:	es xchg esp,eax
  41fb07:	inc    ebp
  41fb08:	adc    al,0x61
  41fb0a:	add    bh,bl
  41fb0c:	arpl   WORD PTR [edi+eiz*2],ax
  41fb0f:	pop    es
  41fb10:	inc    edx
  41fb11:	adc    DWORD PTR [ecx+esi*1+0x421b7346],eax
  41fb18:	pop    edx
  41fb19:	mov    edx,0x73a2a3a7
  41fb1e:	jmp    0xdf9e:0xd29ad42b
  41fb25:	es jmp 0x41fb79
  41fb28:	mov    cl,BYTE PTR [esi-0x4fb93def]
  41fb2e:	mov    ch,BYTE PTR [ebp+0x5]
  41fb31:	pop    esi
  41fb32:	pop    esp
  41fb33:	int    0xf8
  41fb35:	and    dl,ch
  41fb37:	das    
  41fb38:	jg     0x41fafd
  41fb3a:	cmp    esp,DWORD PTR [esi-0x66]
  41fb3d:	inc    ebx
  41fb3e:	pop    ds
  41fb3f:	rcl    eax,cl
  41fb41:	ret    0x6188
  41fb44:	cmp    DWORD PTR [ecx],esi
  41fb46:	aam    0xac
  41fb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb49:	sub    DWORD PTR [edi-0x34],ecx
  41fb4c:	add    ch,BYTE PTR [ebx]
  41fb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb4f:	pop    ebx
  41fb50:	adc    edi,DWORD PTR [edx+0x77]
  41fb53:	adc    al,0x99
  41fb55:	in     al,0x27
  41fb57:	aam    0xbf
  41fb59:	inc    eax
  41fb5a:	mov    ds:0xade0d7b1,eax
  41fb5f:	mov    bh,0x9c
  41fb61:	mov    al,0x9c
  41fb63:	mov    es,WORD PTR [eax+0x2c234238]
  41fb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb6a:	push   ss
  41fb6b:	xchg   esi,eax
  41fb6c:	mov    bh,BYTE PTR [edi-0x36]
  41fb6f:	nop
  41fb70:	cdq    
  41fb71:	iret   
  41fb72:	and    ecx,DWORD PTR [edx-0x3b]
  41fb75:	xchg   DWORD PTR [esi-0x42],edx
  41fb78:	fistp  WORD PTR [eax]
  41fb7a:	sbb    al,0xad
  41fb7c:	outs   dx,BYTE PTR ds:[esi]
  41fb7d:	rcr    BYTE PTR [edx+0x48],1
  41fb80:	inc    edx
  41fb81:	jp     0x41fbd4
  41fb83:	inc    esp
  41fb84:	pop    ebp
  41fb85:	adc    DWORD PTR [ecx+0x37b29a6e],esp
  41fb8b:	ret    
  41fb8c:	int    0x1b
  41fb8e:	scas   al,BYTE PTR es:[edi]
  41fb8f:	mov    cl,0x6c
  41fb91:	sahf   
  41fb92:	stc    
  41fb93:	shl    BYTE PTR [ebp-0x6fc8bc6],cl
  41fb99:	sub    BYTE PTR [esi-0x1a9c5311],dl
  41fb9f:	sub    esp,DWORD PTR [edx+0x2ceab796]
  41fba5:	push   esi
  41fba6:	ror    BYTE PTR [esi+0x65],cl
  41fba9:	daa    
  41fbaa:	mov    esp,0xc841d9dc
  41fbaf:	cmp    cl,BYTE PTR [eax-0x72e9f094]
  41fbb5:	adc    eax,DWORD PTR [ecx]
  41fbb7:	retf   0x3ade
  41fbba:	push   eax
  41fbbb:	and    edi,DWORD PTR [ebx+eax*1+0x671f49bb]
  41fbc2:	imul   eax,DWORD PTR ds:0xe22d9348,0x6b
  41fbc9:	fistp  WORD PTR [eax-0x24]
  41fbcc:	pop    ebp
  41fbcd:	xchg   ebx,eax
  41fbce:	setge  BYTE PTR [edi+ebp*4]
  41fbd2:	lea    eax,[edx+0x3a]
  41fbd5:	inc    esp
  41fbd6:	out    0x3d,al
  41fbd8:	repz and BYTE PTR [esi],ch
  41fbdb:	dec    ebx
  41fbdc:	pop    ds
  41fbdd:	or     al,0x39
  41fbdf:	or     DWORD PTR [edi+ecx*8-0xe],0xffffff91
  41fbe4:	mov    dh,0x4f
  41fbe6:	(bad)  
  41fbe7:	cmp    ebx,DWORD PTR [esi]
  41fbe9:	stos   DWORD PTR es:[edi],eax
  41fbea:	cmc    
  41fbeb:	push   eax
  41fbec:	xchg   ebx,eax
  41fbed:	xor    bl,ch
  41fbef:	jns    0x41fc10
  41fbf1:	ins    DWORD PTR es:[edi],dx
  41fbf2:	jo     0x41fbe6
  41fbf4:	mov    dl,0x1e
  41fbf6:	add    esp,0xffffffa0
  41fbf9:	test   DWORD PTR [edx],eax
  41fbfb:	xchg   ebx,eax
  41fbfc:	mov    bl,0x90
  41fbfe:	jmp    0x6ee848
  41fc03:	or     esp,DWORD PTR [edi]
  41fc05:	sub    eax,0xf7d206c7
  41fc0a:	shl    DWORD PTR [ecx],1
  41fc0c:	push   ds
  41fc0d:	jo     0x41fbfa
  41fc0f:	mov    ch,0x54
  41fc11:	fiadd  DWORD PTR [ecx+0x72]
  41fc14:	shr    bh,0x69
  41fc17:	push   cs
  41fc18:	cld    
  41fc19:	std    
  41fc1a:	fmul   st,st(2)
  41fc1c:	loop   0x41fbe1
  41fc1e:	push   ds
  41fc1f:	(bad)  
  41fc20:	es pop esp
  41fc22:	jmp    0xba3b8b90
  41fc27:	mov    BYTE PTR [edi+0x670c305],al
  41fc2d:	or     al,0x86
  41fc2f:	inc    esp
  41fc30:	icebp  
  41fc31:	and    ebx,DWORD PTR [ecx]
  41fc33:	xor    bh,al
  41fc35:	cmp    edi,DWORD PTR [ebx]
  41fc37:	shl    BYTE PTR [esi-0x66],1
  41fc3a:	or     BYTE PTR [edi-0x54],ah
  41fc3d:	jb     0x41fc64
  41fc3f:	enter  0x4b00,0x54
  41fc43:	dec    edx
  41fc44:	push   edx
  41fc45:	sub    DWORD PTR [edi],0xffffffaf
  41fc48:	pop    esp
  41fc4a:	ret    0xbfee
  41fc4d:	int3   
  41fc4e:	sbb    al,0x62
  41fc50:	add    esp,DWORD PTR [edi]
  41fc52:	xlat   BYTE PTR ds:[ebx]
  41fc53:	fnstcw WORD PTR [ebp+0x74]
  41fc56:	repz shl esp,cl
  41fc59:	cs stos BYTE PTR es:[edi],al
  41fc5b:	push   esi
  41fc5c:	pop    ds
  41fc5d:	jp     0x41fcc7
  41fc5f:	jecxz  0x41fccc
  41fc61:	ret    0xfaa5
  41fc64:	and    dl,BYTE PTR [edi+eiz*4-0x30]
  41fc68:	dec    ecx
  41fc69:	sbb    dh,BYTE PTR [esi+0x6ea8ba90]
  41fc6f:	inc    edx
  41fc70:	cs cli 
  41fc72:	mov    cl,0x7f
  41fc74:	mov    ds:0x4be7d1fd,al
  41fc79:	jl     0x41fc07
  41fc7b:	loop   0x41fbfe
  41fc7d:	fucom  st(1)
  41fc7f:	push   es
  41fc80:	mov    dh,0x1a
  41fc82:	pop    ebx
  41fc83:	leave  
  41fc84:	xor    al,0x24
  41fc86:	pop    ebx
  41fc87:	cmp    al,0xe4
  41fc89:	jmp    0x41fc51
  41fc8b:	daa    
  41fc8c:	lock in al,dx
  41fc8e:	scas   al,BYTE PTR es:[edi]
  41fc8f:	jo     0x41fd04
  41fc91:	jle    0x41fcdc
  41fc93:	xchg   al,cl
  41fc95:	cmp    al,0x1e
  41fc97:	or     eax,0x7917c892
  41fc9c:	mov    ebx,0xce88ae4
  41fca1:	into   
  41fca2:	pop    esi
  41fca3:	call   0x31bb:0xcfa6f1fe
  41fcaa:	mov    esi,edx
  41fcac:	and    al,0x8a
  41fcae:	adc    ebx,DWORD PTR fs:[esi+0x22]
  41fcb2:	(bad)  [eax]
  41fcb4:	inc    ecx
  41fcb5:	sbb    al,0x2d
  41fcb7:	sbb    BYTE PTR [edx+0x2b703a23],ch
  41fcbd:	iret   
  41fcbe:	mov    bh,0x63
  41fcc0:	pusha  
  41fcc1:	xor    edi,ebp
  41fcc3:	or     DWORD PTR [ebx-0x33],edi
  41fcc6:	push   edx
  41fcc7:	sbb    DWORD PTR [edx],edx
  41fcc9:	icebp  
  41fcca:	ret    0x686c
  41fccd:	jle    0x41fc7e
  41fccf:	lahf   
  41fcd0:	test   al,0xc8
  41fcd2:	mov    WORD PTR [esi+0x744f4170],ss
  41fcd8:	out    0x26,al
  41fcda:	lea    edx,[ebx+0x5e]
  41fcdd:	add    eax,0x1a311f9e
  41fce2:	stc    
  41fce3:	stos   DWORD PTR es:[edi],eax
  41fce4:	cs xchg esp,eax
  41fce6:	test   eax,0x148168f6
  41fceb:	bound  ebx,QWORD PTR [ecx-0x358aef56]
  41fcf1:	jns    0x41fd34
  41fcf3:	cli    
  41fcf4:	and    DWORD PTR [ebx-0x599f29bd],esp
  41fcfa:	int3   
  41fcfb:	and    eax,0x4d621c2e
  41fd00:	fdiv   st(5),st
  41fd02:	fidivr DWORD PTR [eax+0x6b]
  41fd05:	stos   BYTE PTR es:[edi],al
  41fd06:	jno    0x41fca6
  41fd08:	push   es
  41fd09:	fs stos DWORD PTR es:[edi],eax
  41fd0b:	icebp  
  41fd0c:	retf   0x569d
  41fd0f:	xchg   esi,eax
  41fd10:	mov    ds:0x26a8b6e5,al
  41fd15:	fs dec ecx
  41fd17:	push   eax
  41fd18:	sub    DWORD PTR [eax-0x11],ebx
  41fd1b:	mul    DWORD PTR [ecx]
  41fd1d:	pop    DWORD PTR [esi-0x4de603d8]
  41fd23:	fdiv   QWORD PTR ds:0x5f6455bf
  41fd29:	push   ss
  41fd2a:	inc    esi
  41fd2b:	(bad)  
  41fd2d:	scas   al,BYTE PTR es:[edi]
  41fd2e:	pop    es
  41fd2f:	aaa    
  41fd30:	mov    ds:0xf41f354,eax
  41fd35:	bnd jle 0x41fd84
  41fd38:	sbb    BYTE PTR [edx],dh
  41fd3a:	pop    ebx
  41fd3b:	mov    BYTE PTR [ebp+0x6ea60fa6],0xbd
  41fd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd43:	arpl   WORD PTR [edx+0x4f5595cc],bx
  41fd49:	test   BYTE PTR [ebx+ecx*2],bh
  41fd4c:	cld    
  41fd4d:	dec    esp
  41fd4e:	xor    eax,0x5ac5cdec
  41fd53:	jbe    0x41fd17
  41fd55:	jno    0x41fd7d
  41fd57:	mov    eax,0xc832c1bd
  41fd5c:	jmp    0xd6ff:0x509b9927
  41fd63:	scas   al,BYTE PTR es:[edi]
  41fd64:	jb     0x41fd76
  41fd66:	cld    
  41fd67:	or     eax,0x47d25baa
  41fd6c:	(bad)  
  41fd6d:	clc    
  41fd6e:	mov    al,ds:0xec6d18aa
  41fd73:	xchg   ebx,eax
  41fd74:	jle    0x41fd61
  41fd76:	xor    dh,BYTE PTR [esi]
  41fd78:	test   BYTE PTR [ebx],al
  41fd7a:	mov    BYTE PTR [ebp-0x22dc0a3e],cl
  41fd80:	pop    ds
  41fd81:	cli    
  41fd82:	sub    eax,DWORD PTR [ebx]
  41fd84:	mov    esi,0x75ea0ab5
  41fd89:	push   edx
  41fd8a:	test   eax,0x285f0601
  41fd8f:	or     dl,BYTE PTR fs:[ebx+edx*8]
  41fd93:	and    eax,0x780ccfb
  41fd98:	daa    
  41fd99:	aam    0xf8
  41fd9b:	in     eax,dx
  41fd9c:	arpl   WORD PTR [esi],sp
  41fd9e:	sub    esp,DWORD PTR [edx+esi*8+0x785078e0]
  41fda5:	push   ds
  41fda6:	cwde   
  41fda7:	call   0x2c56a12a
  41fdac:	repz sub BYTE PTR [edx-0x67973585],al
  41fdb3:	in     eax,0x0
	...
  41fdc1:	mov    DWORD PTR [esi+esi*4-0x320c400d],esi
  41fdc8:	(bad)  
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	push   0x18bd12d6
  41fdd2:	js     0x41fdd5
  41fdd4:	add    BYTE PTR [ebx-0x44fffffd],ch
  41fdda:	shl    BYTE PTR [ecx],0x5f
  41fddd:	add    ah,ah
  41fddf:	imul   edx,DWORD PTR [eax],0x7a
  41fde2:	or     esp,ecx
  41fde4:	jns    0x41fde1
  41fde6:	or     esi,esi
  41fde8:	lods   al,BYTE PTR ds:[esi]
  41fde9:	push   0xffffffac
  41fdeb:	jmp    0x932f:0x63b75452
  41fdf2:	push   esi
  41fdf3:	pop    ebp
  41fdf4:	jp     0x41fe37
  41fdf6:	gs and al,0x1b
  41fdf9:	arpl   WORD PTR [esi+0xa],cx
  41fdfc:	hlt    
  41fdfd:	fmul   QWORD PTR [ebx-0x38b304f]
  41fe03:	jbe    0x41fdc2
  41fe05:	cmc    
  41fe06:	(bad)  
  41fe07:	loopne 0x41fdc0
  41fe09:	je     0x41fe72
  41fe0b:	xchg   edx,eax
  41fe0c:	into   
  41fe0d:	retf   
  41fe0e:	mov    al,0xb
  41fe10:	out    dx,al
  41fe11:	lahf   
  41fe12:	inc    edi
  41fe13:	xchg   BYTE PTR [esi+0x6],al
  41fe16:	inc    ebp
  41fe17:	imul   esp,DWORD PTR [edi],0xb0b9ab78
  41fe1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe1e:	cld    
  41fe1f:	add    dh,BYTE PTR [ebp-0x19]
  41fe22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe23:	fs push ebp
  41fe25:	push   es
  41fe26:	mov    edi,0x3690ad9
  41fe2b:	mov    cl,ch
  41fe2d:	fdiv   QWORD PTR [edx-0xf310e61]
  41fe33:	push   ebp
  41fe34:	and    eax,0x96daa41a
  41fe39:	inc    edx
  41fe3a:	stos   DWORD PTR es:[edi],eax
  41fe3b:	shl    BYTE PTR [ecx+0x6c],0xc4
  41fe3f:	bound  esi,QWORD PTR [edx-0x167506ed]
  41fe45:	loope  0x41fddd
  41fe47:	pop    ecx
  41fe48:	and    bh,BYTE PTR [ebx-0x75f63d63]
  41fe4e:	xchg   edx,eax
  41fe4f:	xchg   ebx,eax
  41fe50:	or     BYTE PTR [ebp+ebx*2+0x2e],dl
  41fe54:	jmp    0x41fe54
  41fe56:	fbld   TBYTE PTR [ebp+0x5beb6a72]
  41fe5c:	jns    0x41fe6c
  41fe5e:	data16 int 0x19
  41fe61:	jg     0x41fe0c
  41fe63:	(bad)  
  41fe64:	mov    bl,0xc5
  41fe66:	mov    WORD PTR [ebp+ebx*2-0x17a391ad],cs
  41fe6d:	int    0x12
  41fe6f:	xchg   ebp,eax
  41fe70:	xchg   esp,eax
  41fe71:	in     al,0x8b
  41fe73:	mov    ebp,esp
  41fe75:	das    
  41fe76:	or     bh,BYTE PTR [edi]
  41fe78:	das    
  41fe79:	fstp   QWORD PTR [eax]
  41fe7b:	jo     0x41fed1
  41fe7d:	outs   dx,BYTE PTR ds:[esi]
  41fe7e:	inc    ebx
  41fe7f:	fistp  WORD PTR [edi]
  41fe81:	jecxz  0x41fe47
  41fe83:	mov    dh,0xad
  41fe85:	(bad)  [ebx]
  41fe87:	and    ebx,esp
  41fe89:	mov    ds:0x5c300d40,eax
  41fe8e:	pusha  
  41fe8f:	mov    dh,0xe4
  41fe92:	xchg   ebx,eax
  41fe93:	mov    cl,0x5f
  41fe95:	sahf   
  41fe96:	in     eax,dx
  41fe97:	imul   eax,DWORD PTR [ebp-0x3c14689d],0xcdc02e25
  41fea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea2:	fist   WORD PTR [esi-0x7ff5842e]
  41fea8:	xlat   BYTE PTR ds:[ebx]
  41fea9:	scas   al,BYTE PTR es:[edi]
  41feaa:	fwait
  41feab:	scas   al,BYTE PTR es:[edi]
  41feac:	call   0xc0f6:0x7b339959
  41feb3:	ror    ebx,cl
  41feb5:	int    0x34
  41feb7:	xchg   ebp,eax
  41feb8:	int3   
  41feb9:	fs or  eax,0xd3db597
  41febf:	mov    ch,0x8b
  41fec1:	outs   dx,BYTE PTR cs:[esi]
  41fec3:	out    dx,al
  41fec4:	mov    dh,0xad
  41fec6:	jbe    0x41feaf
  41fec8:	jp     0x41fe83
  41feca:	hlt    
  41fecb:	sub    al,0x4b
  41fecd:	and    BYTE PTR [edi+edi*2+0x6aa3f8a2],0xb
  41fed5:	scas   al,BYTE PTR es:[edi]
  41fed6:	out    dx,eax
  41fed7:	xchg   edi,eax
  41fed8:	cmp    BYTE PTR [edi],0x75
  41fedb:	(bad)  
  41fedc:	(bad)  
  41fedd:	data16 sbb al,0x17
  41fee0:	sbb    al,0xc2
  41fee2:	sbb    BYTE PTR [eax-0x6691131e],0xe8
  41fee9:	mov    esp,esp
  41feeb:	neg    ah
  41feed:	pop    ebx
  41feee:	outs   dx,BYTE PTR ds:[esi]
  41feef:	cmp    eax,ebp
  41fef1:	cmp    ch,BYTE PTR [esi-0x12a8049f]
  41fef7:	into   
  41fef8:	ja     0x41fee8
  41fefa:	inc    ebx
  41fefb:	mov    dh,dl
  41fefd:	xor    BYTE PTR [eax-0x45],bl
  41ff00:	sahf   
  41ff01:	sub    DWORD PTR [edx+0x4e1d],0xcb8e5243
  41ff0b:	inc    eax
  41ff0c:	enter  0x7ac9,0x37
  41ff10:	pop    eax
  41ff11:	mov    edi,0xa9af7baa
  41ff16:	xor    ebx,DWORD PTR [eax-0x3ab17a28]
  41ff1c:	iret   
  41ff1d:	inc    eax
  41ff1e:	jnp    0x41ff0f
  41ff20:	int    0xa9
  41ff22:	sub    ah,ch
  41ff24:	cmp    DWORD PTR [edi],ebx
  41ff26:	loopne 0x41feee
  41ff28:	mov    edi,0xccb38e6e
  41ff2d:	repz adc al,0xa1
  41ff30:	mov    ds:0xd9113705,eax
  41ff35:	lods   al,BYTE PTR ds:[esi]
  41ff36:	inc    eax
  41ff37:	push   edx
  41ff38:	rcl    DWORD PTR [ebx],1
  41ff3a:	inc    ecx
  41ff3b:	nop
  41ff3c:	(bad)  
  41ff3d:	icebp  
  41ff3e:	dec    eax
  41ff3f:	test   al,0x42
  41ff41:	sub    DWORD PTR [esi+0x7b],edi
  41ff44:	push   ecx
  41ff45:	je     0x41fee8
  41ff47:	cmp    edx,DWORD PTR [edx-0xa519418]
  41ff4d:	cmp    ah,ah
  41ff4f:	jl     0x41ff21
  41ff51:	jmp    0xe5825baa
  41ff56:	js     0x41ff99
  41ff58:	pop    esp
  41ff59:	push   ebp
  41ff5a:	sub    DWORD PTR [eax],edi
  41ff5c:	jns    0x41ff5f
  41ff5e:	ret    0x6d2a
  41ff61:	int    0x2
  41ff63:	mov    DWORD PTR [eax-0x7],edi
  41ff66:	lods   al,BYTE PTR ds:[esi]
  41ff67:	xor    ch,bh
  41ff69:	mov    eax,ds:0xa118e24e
  41ff6e:	sar    BYTE PTR [eax+edi*2],1
  41ff71:	ss jb  0x41ff92
  41ff74:	sub    BYTE PTR [edx-0x3012251e],dl
  41ff7a:	mov    esi,0x78a43b3c
  41ff7f:	inc    DWORD PTR [esi+0x3]
  41ff82:	loop   0x41ff70
  41ff84:	lahf   
  41ff85:	and    eax,0x46b83b4f
  41ff8a:	shl    DWORD PTR [ebx],cl
  41ff8c:	icebp  
  41ff8d:	push   es
  41ff8e:	rcr    DWORD PTR [edx-0x77],1
  41ff91:	mov    dh,0x46
  41ff93:	sbb    eax,0xfafb173b
  41ff98:	push   0xffffff8d
  41ff9a:	adc    BYTE PTR [edx+0x7d43be67],0xe5
  41ffa1:	jnp    0x41ffbc
  41ffa3:	cmp    esi,edi
  41ffa5:	and    eax,0x6b7677f9
  41ffaa:	cwde   
  41ffab:	push   cs
  41ffac:	das    
  41ffad:	repz adc eax,0x2e663ad4
  41ffb3:	pop    esi
  41ffb4:	xchg   edx,eax
  41ffb5:	and    al,0x6c
  41ffb7:	imul   BYTE PTR [esi+edi*8]
  41ffba:	stos   DWORD PTR es:[edi],eax
  41ffbb:	inc    edx
  41ffbc:	and    BYTE PTR [eax+0x6753bd3c],bl
  41ffc2:	sbb    al,ch
  41ffc4:	jmp    0xc92ffc61
  41ffc9:	mov    al,BYTE PTR [edi+ecx*1]
  41ffcc:	jns    0x41fff9
  41ffce:	jno    0x41ffec
  41ffd0:	lods   al,BYTE PTR ds:[esi]
  41ffd1:	xor    edi,ebp
  41ffd3:	mov    bh,0x8c
  41ffd5:	dec    ecx
  41ffd6:	les    esp,FWORD PTR [esp+edi*8+0x5f135f22]
  41ffdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffde:	xor    DWORD PTR [edi+ebp*8],ebx
  41ffe1:	(bad)  
  41ffe2:	test   eax,0x1498c376
  41ffe7:	push   edi
  41ffe8:	jb     0x41fffa
  41ffea:	pop    edx
  41ffeb:	pushf  
  41ffec:	jne    0x420024
  41ffee:	inc    edi
  41ffef:	dec    edx
  41fff0:	adc    eax,0x81997a4c
  41fff5:	inc    edx
  41fff6:	test   DWORD PTR [edx-0x2457bba8],eax
  41fffc:	aad    0xb6
  41fffe:	cmp    al,0xa5
  420000:	int3   
  420001:	or     BYTE PTR [ebx],al
  420003:	imul   edx,DWORD PTR [esi-0x58],0xffffffcb
  420007:	inc    ebx
  420008:	mov    BYTE PTR [ecx-0x14],cl
  42000b:	gs aam 0x38
  42000e:	jl     0x420083
  420010:	adc    ah,BYTE PTR [edi-0x56]
  420013:	sbb    esi,esi
  420015:	aaa    
  420016:	sbb    eax,0xc0e370bd
  42001b:	sbb    eax,0xeac2385c
  420020:	jo     0x42008f
  420022:	sahf   
  420023:	outs   dx,DWORD PTR ds:[esi]
  420024:	retf   0xd75e
  420027:	mov    eax,DWORD PTR [esi-0x3ecf649d]
  42002d:	cmp    ebp,DWORD PTR [edi+edx*4-0x1]
  420031:	and    al,0xb7
  420033:	loope  0x420025
  420035:	jbe    0x42006d
  420037:	ror    BYTE PTR [esi-0x6e],0x36
  42003b:	adc    ebx,DWORD PTR [edx-0x54]
  42003e:	mov    edi,0xe53622f1
  420043:	ja     0x42005b
  420045:	jl     0x420082
  420047:	iret   
  420048:	jge    0x420088
  42004a:	xchg   ebx,eax
  42004b:	nop
  42004c:	push   edi
  42004d:	add    eax,0x361dad92
  420052:	scas   eax,DWORD PTR es:[edi]
  420053:	stos   BYTE PTR es:[edi],al
  420054:	xchg   ecx,eax
  420055:	xchg   esp,eax
  420056:	test   DWORD PTR [ebp+eax*8-0x58],esp
  42005a:	stos   BYTE PTR es:[edi],al
  42005b:	test   BYTE PTR [ecx+0x6bdc6d1c],bh
  420061:	(bad)  
  420062:	push   edi
  420063:	dec    esi
  420064:	sub    al,0x21
  420066:	push   esp
  420067:	inc    esp
  420068:	adc    esp,DWORD PTR [eax-0x55]
  42006b:	ins    DWORD PTR es:[edi],dx
  42006c:	(bad)  
  42006d:	xchg   ebx,eax
  42006e:	sahf   
  42006f:	adc    cl,BYTE PTR [ebp+eiz*8-0xce0c02b]
  420076:	cwde   
  420077:	in     eax,0x37
  420079:	int    0xf8
  42007b:	outs   dx,BYTE PTR ds:[esi]
  42007c:	pop    ss
  42007d:	mov    ecx,0xefc72f8a
  420082:	sbb    BYTE PTR [esi+0x25864bc5],ah
  420088:	mov    BYTE PTR [edi+ecx*8],bh
  42008b:	jp     0x42010b
  42008d:	sar    bl,cl
  42008f:	stos   BYTE PTR es:[edi],al
  420090:	idiv   DWORD PTR [ecx+0x6d7a9b3b]
  420096:	(bad)
  420099:	mov    WORD PTR [edi-0x145fa0f1],fs
  42009f:	js     0x42010c
  4200a1:	push   0x83bef8e1
  4200a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a7:	adc    eax,0x23d3f621
  4200ac:	dec    esp
  4200ad:	sub    ebx,DWORD PTR [edx-0x2e]
  4200b0:	xor    bh,dh
  4200b2:	fild   DWORD PTR [ecx-0xd]
  4200b6:	pusha  
  4200b7:	loopne 0x4200c7
  4200b9:	adc    ebp,esi
  4200bb:	sub    esi,DWORD PTR [edi+eax*4-0x2bf1edf9]
  4200c2:	push   edi
  4200c3:	lods   eax,DWORD PTR ds:[esi]
  4200c4:	mov    cl,0x36
  4200c6:	popf   
  4200c7:	pop    ebp
  4200c8:	xchg   DWORD PTR [ebx],eax
  4200ca:	sbb    al,BYTE PTR [edi]
  4200cc:	mov    ebx,0xadae3f5c
  4200d1:	scas   eax,DWORD PTR es:[edi]
  4200d2:	dec    esp
  4200d3:	lds    esi,FWORD PTR [eax-0x3]
  4200d6:	imul   ebx,DWORD PTR cs:[edx+edi*2+0x2ec82e18],0xffffff84
  4200df:	mov    ds:0x3b87ebb6,al
  4200e4:	cmp    DWORD PTR [ecx],esi
  4200e6:	test   eax,0x8c8dc1b
  4200eb:	pushf  
  4200ec:	or     ecx,DWORD PTR [edx]
  4200ee:	std    
  4200ef:	jecxz  0x420158
  4200f1:	xor    al,0xf4
  4200f3:	nop
  4200f4:	daa    
  4200f5:	ins    DWORD PTR es:[edi],dx
  4200f6:	cli    
  4200f7:	popa   
  4200f8:	and    eax,0x4be17c71
  4200fd:	leave  
  4200fe:	jb     0x420144
  420100:	push   esi
  420101:	lahf   
  420102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420103:	adc    al,0xb
  420105:	mov    esp,0x461ba7ed
  42010a:	pop    edi
  42010b:	sbb    eax,0x5e0475a2
  420110:	ds icebp 
  420112:	or     ecx,edi
  420114:	mov    ecx,DWORD PTR [ecx-0x78]
  420117:	pop    eax
  420118:	pop    edx
  420119:	imul   edx,edi,0x53
  42011c:	popf   
  42011d:	pop    edx
  42011e:	xor    ah,BYTE PTR [eax]
  420120:	pop    edi
  420121:	imul   edi,ecx,0xa6d772ff
  420127:	in     al,0x23
  420129:	fimul  WORD PTR [ecx]
  42012b:	mov    eax,0xf874cd0a
  420130:	imul   edi,DWORD PTR [edi-0x7d],0x37f280df
  420137:	xchg   ecx,eax
  420138:	jbe    0x420178
  42013a:	or     ebp,DWORD PTR [edx]
  42013c:	jb     0x4200f3
  42013e:	fwait
  42013f:	cs dec eax
  420141:	jno    0x4201bb
  420143:	add    dh,BYTE PTR [ecx+edx*1]
  420146:	mov    esi,0xfaaf2e6e
  42014b:	sub    eax,0x9b8c4a9f
  420150:	bound  eax,QWORD PTR [eax-0x2]
  420153:	jns    0x420135
  420155:	inc    edi
  420156:	mov    eax,0x3dc50eff
  42015b:	xlat   BYTE PTR ds:[ebx]
  42015c:	add    al,0x99
  42015e:	mov    DWORD PTR [ebx],0x3f60e676
  420164:	push   0xffffffd0
  420166:	cmp    DWORD PTR [esi+0x107c7780],esi
  42016c:	(bad)  
  42016d:	xor    al,bh
  42016f:	test   eax,0xf7319416
  420174:	inc    ebx
  420175:	xchg   BYTE PTR gs:[ebp-0x3],ah
  420179:	xchg   esp,eax
  42017a:	loop   0x420128
  42017c:	pop    ds
  42017d:	or     ah,al
  42017f:	mov    bl,0x7
  420181:	cwde   
  420182:	lock dec ecx
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x6404:0x7836e732
  42019f:	outs   dx,DWORD PTR ds:[esi]
  4201a0:	sbb    ebx,eax
  4201a2:	jnp    0x4201a5
  4201a4:	add    BYTE PTR [ebx+0x26000003],ch
  4201aa:	loope  0x4201b8
  4201ac:	add    ah,ch
  4201ae:	lock outs dx,DWORD PTR ds:[esi]
  4201b0:	xor    eax,esi
  4201b2:	call   0xf67:0x5a77e88d
  4201b9:	(bad)  
  4201ba:	jecxz  0x420211
  4201bc:	jge    0x420159
  4201be:	adc    DWORD PTR [esi-0x7a],edx
  4201c1:	sub    cl,BYTE PTR [esi]
  4201c3:	and    eax,0xb297e2f4
  4201c8:	sahf   
  4201c9:	inc    edx
  4201ca:	popf   
  4201cb:	cmp    BYTE PTR [esp+edi*8+0xb7ea4a1],dl
  4201d2:	pop    ss
  4201d3:	mov    ecx,0x6dd48b77
  4201d8:	repz pop edi
  4201da:	enter  0x7f9d,0xf0
  4201de:	adc    eax,0x7cef5f25
  4201e3:	ret    
  4201e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e5:	mov    esp,0x1e600529
  4201ea:	std    
  4201eb:	adc    bl,BYTE PTR [ecx+0x2b05067e]
  4201f1:	sbb    BYTE PTR [esi+esi*8],bh
  4201f4:	(bad)  
  4201f6:	or     BYTE PTR [edi],bh
  4201f8:	ret    
  4201f9:	xchg   ecx,eax
  4201fa:	hlt    
  4201fb:	inc    ebp
  4201fc:	hlt    
  4201fd:	sub    bl,BYTE PTR [edx+eiz*8+0x3f4c847f]
  420204:	jno    0x42025d
  420206:	lahf   
  420207:	cmp    cl,cl
  420209:	sub    DWORD PTR es:[edx],esi
  42020c:	fadd   DWORD PTR [edi]
  42020e:	add    eax,0xb207c916
  420213:	sbb    al,0x47
  420215:	lods   al,BYTE PTR ds:[esi]
  420216:	add    DWORD PTR ds:0xc0f6ea65,esp
  42021c:	dec    esp
  42021d:	xchg   edi,eax
  42021e:	pop    edx
  42021f:	cwde   
  420220:	pop    ss
  420221:	mov    bl,0x6f
  420223:	cmc    
  420224:	fadd   DWORD PTR es:[ecx-0x1c4c5840]
  42022b:	dec    edi
  42022c:	aad    0x58
  42022e:	mov    WORD PTR [ebx-0x5e],ds
  420231:	fdivr  st,st(5)
  420233:	pusha  
  420234:	je     0x42029f
  420236:	inc    ecx
  420237:	adc    al,0x16
  420239:	xchg   esp,eax
  42023a:	sti    
  42023b:	popf   
  42023c:	out    0x60,al
  42023e:	outs   dx,DWORD PTR ds:[esi]
  42023f:	xchg   BYTE PTR [ebp-0x57],dh
  420242:	add    al,0x96
  420244:	ins    DWORD PTR es:[edi],dx
  420245:	xchg   ebx,eax
  420246:	or     eax,0x1ff6859
  42024b:	sbb    DWORD PTR [esp-0x1e],esp
  42024f:	ins    BYTE PTR es:[edi],dx
  420250:	repnz mov es,eax
  420253:	rcl    DWORD PTR [edx],1
  420255:	iret   
  420256:	jmp    0x8825f70a
  42025b:	sbb    ebp,DWORD PTR [ebx]
  42025d:	jecxz  0x4201f9
  42025f:	mov    dh,0x53
  420261:	jae    0x4202a2
  420263:	in     eax,dx
  420264:	fiadd  WORD PTR [eax]
  420266:	cmp    bl,dh
  420268:	ret    
  420269:	pushf  
  42026a:	(bad)  
  42026b:	adc    edx,DWORD PTR [ebp+0x7141d28]
  420271:	ss jo  0x42021c
  420274:	lahf   
  420275:	ror    BYTE PTR [edi],cl
  420277:	lds    ebx,FWORD PTR [ecx]
  420279:	push   cs
  42027a:	jmp    0x420270
  42027c:	add    esp,DWORD PTR [ebp-0x3163ebf3]
  420282:	xor    al,0xc4
  420284:	int3   
  420285:	repnz adc eax,0xe5d1a70d
  42028b:	cmp    BYTE PTR [esi+0x30],bl
  42028e:	(bad)  
  42028f:	jo     0x420259
  420291:	push   edi
  420292:	scas   al,BYTE PTR es:[edi]
  420293:	mov    ecx,ebx
  420295:	adc    DWORD PTR [edi-0x1923569d],esi
  42029b:	cmp    ah,ch
  42029d:	loope  0x420230
  42029f:	fdiv   st(3),st
  4202a1:	lock and eax,0xcb7f1eda
  4202a7:	nop
  4202a8:	mov    bh,0x3c
  4202aa:	sahf   
  4202ab:	cmp    al,0xc3
  4202ad:	xor    DWORD PTR ds:0xe070915d,ebx
  4202b3:	mov    BYTE PTR [edx-0x3311f026],al
  4202b9:	adc    ebp,edx
  4202bb:	pop    eax
  4202bc:	rol    DWORD PTR [ecx-0x7a],0xb4
  4202c0:	repnz aam 0x47
  4202c3:	repz push esp
  4202c5:	ins    BYTE PTR es:[di],dx
  4202c7:	lock div ah
  4202ca:	pop    ss
  4202cb:	cmc    
  4202cc:	xchg   esi,eax
  4202cd:	hlt    
  4202ce:	daa    
  4202cf:	mov    bh,0x4
  4202d1:	jl     0x42026b
  4202d3:	pop    esi
  4202d4:	sub    al,0xe9
  4202d6:	sub    ebp,DWORD PTR [esi+ebx*2+0x47e18e5f]
  4202dd:	mov    bl,0xe9
  4202df:	(bad)  
  4202e0:	(bad)  
  4202e1:	repnz dec edi
  4202e3:	mov    dl,BYTE PTR [eax+0x89497c2]
  4202e9:	or     cl,BYTE PTR [esi]
  4202eb:	repz (bad) 
  4202ed:	mov    edx,0x680911dd
  4202f2:	ret    0xb7d1
  4202f5:	jns    0x4202cd
  4202f7:	inc    ebx
  4202f8:	mov    bh,0x9a
  4202fa:	mov    dh,0x87
  4202fc:	push   es
  4202fd:	sar    ebp,cl
  4202ff:	pop    esp
  420300:	(bad)  
  420301:	mov    ebp,0x3e6cd865
  420306:	jno    0x42031f
  420308:	push   ebx
  420309:	or     edx,edi
  42030b:	sbb    eax,0x91aa6140
  420310:	test   eax,0x488bd03f
  420315:	add    DWORD PTR [edx-0x2c],eax
  420318:	xchg   BYTE PTR [edi-0x4c],al
  42031b:	dec    ebp
  42031c:	jmp    0x42032e
  42031e:	sub    esp,esp
  420320:	stos   DWORD PTR es:[edi],eax
  420321:	call   0x5b0ef27c
  420326:	adc    BYTE PTR [edx+0x5f],ch
  420329:	cdq    
  42032a:	mov    edx,0x1e1f8bda
  42032f:	addr16 inc esp
  420331:	mov    edx,0x43fb254a
  420336:	retf   0x47fb
  420339:	xchg   esi,eax
  42033a:	inc    eax
  42033b:	fsubr  DWORD PTR [ebp-0xf65f40]
  420341:	ret    
  420342:	aas    
  420343:	sti    
  420344:	add    DWORD PTR [edi+0x53],ebx
  420347:	push   ss
  420348:	cmp    al,0xd8
  42034a:	mov    dh,0x9
  42034c:	(bad)
  420351:	or     al,0xec
  420353:	enter  0x664c,0xfa
  420357:	jb     0x420310
  420359:	inc    ecx
  42035a:	push   ds
  42035b:	add    DWORD PTR [ebx+esi*2],esp
  42035e:	sub    ebp,DWORD PTR [edi]
  420360:	mov    cl,0x63
  420362:	out    0x40,eax
  420364:	in     al,0xb5
  420366:	mov    eax,ds:0xfb02917a
  42036b:	mov    DWORD PTR [edi],ecx
  42036d:	adc    al,0xd9
  42036f:	push   ss
  420370:	push   ebx
  420371:	test   al,0x6e
  420373:	pop    ebp
  420374:	pop    edi
  420375:	add    esp,eax
  420377:	pop    ebx
  420378:	xchg   esp,eax
  420379:	add    al,0xf2
  42037b:	inc    edx
  42037c:	ss in  eax,0xc
  42037f:	or     al,BYTE PTR [esi+0x25123522]
  420385:	mov    eax,ds:0xfa258048
  42038a:	jmp    0x2128141a
  42038f:	ror    DWORD PTR [ebp-0xb18a5a2],cl
  420395:	mov    eax,ds:0x8d22478f
  42039a:	pop    edi
  42039b:	jl     0x4203f8
  42039d:	mov    eax,0xda83d8a3
  4203a2:	call   0xfaf8e3bc
  4203a7:	fld    QWORD PTR [esi-0x222f54ef]
  4203ad:	add    BYTE PTR [esi-0x63],dh
  4203b0:	in     al,0x22
  4203b2:	call   0xe204:0x644d294e
  4203b9:	and    BYTE PTR [eax-0x13755c07],0xff
  4203c0:	test   DWORD PTR ds:0x7bd40b85,esi
  4203c6:	fldenv [esi-0x1e]
  4203c9:	and    ebp,DWORD PTR [ebx+0x13]
  4203cc:	daa    
  4203cd:	rol    BYTE PTR [eax+0x63ec4e5f],1
  4203d3:	mov    ecx,0x7bb8539d
  4203d8:	and    BYTE PTR [ebx-0x47],al
  4203db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203dc:	jb     0x42044f
  4203de:	add    dl,BYTE PTR [edi+0x619508d9]
  4203e4:	inc    edi
  4203e5:	inc    BYTE PTR [edx-0x7c]
  4203e8:	pushf  
  4203e9:	or     al,0x1f
  4203eb:	sar    BYTE PTR [eax+eiz*4-0x22403cc8],1
  4203f2:	stos   BYTE PTR es:[edi],al
  4203f3:	inc    eax
  4203f4:	push   0x13
  4203f6:	push   es
  4203f7:	mov    esp,0x52072a20
  4203fc:	fs and al,0xf8
  4203ff:	outs   dx,BYTE PTR ds:[esi]
  420400:	push   ebx
  420401:	outs   dx,BYTE PTR ds:[esi]
  420402:	cli    
  420403:	jbe    0x420430
  420405:	in     eax,dx
  420406:	into   
  420407:	or     BYTE PTR [esi],0x74
  42040a:	jle    0x420482
  42040c:	cld    
  42040d:	sbb    cl,BYTE PTR [ecx]
  42040f:	shl    DWORD PTR ds:0x40b46422,0x6d
  420416:	sub    eax,0x60b10f6f
  42041b:	jne    0x4203f0
  42041d:	jae    0x420476
  42041f:	clc    
  420420:	mov    eax,ss:0xda46f7c3
  420426:	fnstsw WORD PTR [ebx]
  420428:	add    ch,BYTE PTR [eax]
  42042a:	add    bl,BYTE PTR ds:0x9a0ef62e
  420430:	(bad)  
  420432:	(bad)  
  420433:	mov    ah,0x2f
  420435:	cmp    al,0xf5
  420437:	fisubr DWORD PTR [ebp-0x34529cc0]
  42043d:	xchg   edx,eax
  42043e:	stos   DWORD PTR es:[edi],eax
  42043f:	fwait
  420440:	aad    0x96
  420442:	jns    0x420470
  420444:	pop    ebx
  420445:	or     ch,BYTE PTR [ebx+0x7a]
  420448:	push   ebp
  420449:	test   BYTE PTR [ebp+0x5d791063],cl
  42044f:	pop    es
  420450:	dec    esp
  420451:	jp     0x4204b3
  420453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420454:	and    dl,BYTE PTR [esi]
  420456:	cmp    eax,0xb47c557d
  42045b:	call   0x638f:0xc942c094
  420462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420463:	test   BYTE PTR [ebp-0x64],bl
  420466:	cmp    bl,cl
  420468:	out    dx,eax
  420469:	jae    0x42041f
  42046b:	mov    fs,WORD PTR [eax-0x17]
  42046e:	ins    DWORD PTR es:[edi],dx
  42046f:	retf   0x9059
  420472:	imul   esi,DWORD PTR [ebp-0x71],0xec8d4e9a
  420479:	ins    DWORD PTR es:[edi],dx
  42047a:	imul   edi,eax,0x6a
  42047d:	hlt    
  42047e:	cs dec ebx
  420480:	lock jecxz 0x420458
  420483:	dec    ebx
  420484:	daa    
  420485:	aas    
  420486:	dec    ecx
  420487:	es aad 0x49
  42048a:	in     al,0x8c
  42048c:	inc    esi
  42048d:	mov    al,0x10
  42048f:	jns    0x420445
  420491:	fdiv   st,st(0)
  420493:	retf   0x4fdb
  420496:	jns    0x420468
  420498:	xchg   DWORD PTR [ebx-0x758cb365],ebx
  42049e:	ret    
  42049f:	loop   0x420515
  4204a1:	enter  0xb0e9,0xcf
  4204a5:	dec    eax
  4204a6:	sbb    dh,BYTE PTR [ebp+0x4c131c88]
  4204ac:	pushf  
  4204ad:	xchg   DWORD PTR [eax],ecx
  4204af:	fwait
  4204b0:	(bad)  
  4204b1:	iret   
  4204b2:	pop    ds
  4204b3:	dec    ecx
  4204b4:	ficomp WORD PTR [ebx-0x59]
  4204b7:	push   ebp
  4204b8:	cmp    BYTE PTR [ecx+0x432c2192],dh
  4204be:	fimul  DWORD PTR [esi-0x5b5fd90d]
  4204c4:	aam    0x3d
  4204c6:	adc    ecx,esi
  4204c8:	loope  0x420505
  4204ca:	gs mov ah,0xbd
  4204cd:	sbb    BYTE PTR [edx-0x66728a64],bl
  4204d3:	pushf  
  4204d4:	mov    eax,ds:0xdcdb5702
  4204d9:	sti    
  4204da:	cmp    bh,BYTE PTR [edi+0x19338393]
  4204e0:	popf   
  4204e1:	pop    esp
  4204e2:	push   es
  4204e3:	mov    al,ds:0x7dec3573
  4204e8:	or     DWORD PTR [edi-0x72416f51],0x6b2ed6dd
  4204f2:	or     BYTE PTR [esi+0x5f],cl
  4204f5:	es aad 0xab
  4204f8:	mov    eax,0x92cf2ee2
  4204fd:	xchg   edi,eax
  4204fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ff:	rol    BYTE PTR [esi+0xc],0xb1
  420503:	or     BYTE PTR [esi+0x58],al
  420506:	jle    0x420572
  420508:	outs   dx,BYTE PTR ds:[esi]
  420509:	addr16 mov cl,0x46
  42050c:	outs   dx,DWORD PTR ds:[esi]
  42050d:	xor    eax,0x100da229
  420512:	push   0xffffff93
  420514:	dec    eax
  420515:	pop    ebx
  420516:	repz push esi
  420518:	addr16 je 0x4204b1
  42051b:	mov    ch,0x6b
  42051d:	push   ebp
  42051e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42051f:	icebp  
  420520:	fild   WORD PTR [eax-0x13d87ad6]
  420526:	in     al,0xec
  420528:	add    al,0xe2
  42052a:	test   BYTE PTR ds:0x1ab7caf,bl
  420530:	cld    
  420531:	arpl   WORD PTR [eax],bp
  420533:	ds into 
  420535:	or     al,0xb2
  420537:	jmp    0x9188:0xa859e2b0
  42053e:	popa   
  42053f:	jbe    0x420510
  420541:	mov    ebp,0x6ab1440
  420546:	inc    edi
  420547:	(bad)  
  420548:	and    ebp,esi
  42054a:	retf   0x5a0a
  42054d:	and    dh,BYTE PTR [ecx+0x369abe35]
  420553:	ins    BYTE PTR es:[edi],dx
	...
  420560:	add    BYTE PTR [eax-0x5020734d],dl
  420566:	call   ebx
  420568:	jmp    esp
  42056a:	and    dh,0xd4
  42056d:	adc    BYTE PTR [edi-0x65],0x66
  420571:	outs   dx,BYTE PTR ds:[esi]
  420572:	jg     0x420575
  420574:	add    BYTE PTR [ebx+0x17000003],ch
  42057a:	push   0xedc638c4
  42057f:	out    dx,al
  420580:	adc    esp,esp
  420582:	leave  
  420583:	mov    al,ds:0x1886902c
  420588:	mov    dh,0xe3
  42058a:	pop    ecx
  42058b:	xchg   BYTE PTR [edi+ebx*2+0x13],cl
  42058f:	push   esi
  420590:	sti    
  420591:	(bad)  
  420592:	aas    
  420593:	dec    edx
  420594:	sub    al,0x6f
  420596:	loop   0x420543
  420598:	ror    BYTE PTR [eax],0x77
  42059b:	mov    bl,0x77
  42059d:	addr16 jbe 0x4205f5
  4205a0:	inc    ebp
  4205a1:	vmread DWORD PTR [ecx-0x15],esp
  4205a5:	jle    0x4205ac
  4205a7:	and    edi,ecx
  4205a9:	dec    ebx
  4205aa:	fimul  WORD PTR [ebx]
  4205ac:	jmp    0x420587
  4205ae:	rcl    BYTE PTR [eax+0x72ff3d07],cl
  4205b4:	sar    BYTE PTR [eax-0x4e],cl
  4205b7:	add    ah,BYTE PTR [ebx]
  4205b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ba:	mov    ah,0xb9
  4205bc:	cwde   
  4205bd:	add    al,0x2e
  4205bf:	xchg   esp,eax
  4205c0:	inc    edi
  4205c1:	out    0xb2,eax
  4205c3:	int3   
  4205c4:	shl    DWORD PTR [esi-0x6b],1
  4205c7:	popf   
  4205c8:	xor    BYTE PTR es:[edi+0x1a],ch
  4205cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205cd:	in     al,dx
  4205ce:	test   DWORD PTR [ebp-0x45fdd56e],esi
  4205d4:	(bad)  
  4205d5:	out    0x17,eax
  4205d7:	dec    esi
  4205d8:	xlat   BYTE PTR ds:[ebx]
  4205d9:	xor    al,0x72
  4205db:	mov    ?,eax
  4205dd:	loop   0x420648
  4205df:	push   esi
  4205e0:	nop
  4205e1:	shl    BYTE PTR [ebx],1
  4205e3:	dec    edx
  4205e4:	xchg   esp,eax
  4205e5:	ins    BYTE PTR es:[edi],dx
  4205e6:	fiadd  DWORD PTR [edx+0x9]
  4205e9:	cmp    DWORD PTR [eax-0x115286f4],eax
  4205ef:	mov    esi,0xc62b372b
  4205f4:	retf   
  4205f5:	and    dl,bl
  4205f7:	jle    0x420646
  4205f9:	jmp    0xcdfb:0x47905d85
  420600:	call   0x43bd8ca8
  420605:	js     0x4205ae
  420607:	lods   al,BYTE PTR ds:[esi]
  420608:	add    al,0xbd
  42060a:	ja     0x4205c8
  42060c:	in     al,0x92
  42060e:	add    edx,DWORD PTR [ebx+0x62]
  420611:	shl    ah,1
  420613:	frstor [eax+0x3b6dcbae]
  420619:	aam    0xbe
  42061b:	mov    esp,0xc4ee5405
  420620:	add    edi,ebx
  420622:	sbb    edi,esp
  420624:	adc    BYTE PTR [edi-0x7e],bh
  420627:	es push 0xffffff9a
  42062a:	enter  0x9f6a,0x95
  42062e:	xchg   ecx,edx
  420630:	shr    ebx,1
  420632:	je     0x420695
  420634:	jp     0x420698
  420636:	jmp    0x4585a7ae
  42063b:	dec    ebx
  42063c:	jnp    0x4205ce
  42063e:	fisttp DWORD PTR [edi]
  420640:	inc    esi
  420641:	shl    DWORD PTR ds:0x64026ab2,1
  420647:	push   0xf5a22b9e
  42064c:	xor    DWORD PTR [edx+0x655fbbd2],eax
  420652:	jns    0x42060c
  420654:	mov    ds:0x968e291d,al
  420659:	in     al,0x21
  42065b:	add    ebp,DWORD PTR [ebx+0x4d6ad45c]
  420661:	jmp    0x420658
  420663:	loopne 0x4206d4
  420665:	imul   edi,DWORD PTR [edi+0x1a],0x37
  420669:	and    al,BYTE PTR [ecx]
  42066b:	daa    
  42066c:	(bad)  
  42066d:	mov    bl,0x26
  42066f:	dec    esp
  420670:	and    DWORD PTR [eax+0x6c],edi
  420673:	sbb    eax,0xd388a4ed
  420678:	dec    ebx
  420679:	scas   al,BYTE PTR es:[edi]
  42067a:	dec    esp
  42067b:	enter  0x70e,0xd6
  42067f:	imul   esi,DWORD PTR [edx+0x50],0xf7444adc
  420686:	(bad)  
  420688:	and    eax,0x4e25098f
  42068d:	xlat   BYTE PTR ds:[ebx]
  42068e:	xor    dl,ah
  420690:	push   edi
  420691:	push   eax
  420692:	push   ebp
  420693:	out    0x98,al
  420695:	adc    dh,BYTE PTR [ebp-0x644bb8d7]
  42069b:	mov    ds:0x1dedc5e6,al
  4206a0:	imul   eax,DWORD PTR [edx],0x74
  4206a3:	das    
  4206a4:	xor    dh,0x58
  4206a7:	shr    BYTE PTR [ecx+0x2995612c],cl
  4206ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ae:	push   eax
  4206af:	aas    
  4206b0:	loopne 0x420672
  4206b2:	jae    0x4206f6
  4206b4:	into   
  4206b5:	into   
  4206b6:	jg     0x420708
  4206b8:	popf   
  4206b9:	dec    edx
  4206ba:	rcl    DWORD PTR [eax],0x9e
  4206bd:	ins    BYTE PTR es:[edi],dx
  4206be:	sbb    eax,0x248c19e5
  4206c3:	test   al,0xad
  4206c5:	js     0x4206d3
  4206c7:	cld    
  4206c8:	mov    ds:0xa0d83df7,eax
  4206cd:	push   0x9cfbc80e
  4206d2:	pushf  
  4206d3:	add    al,0xa6
  4206d5:	arpl   WORD PTR [edi+0x6d805444],cx
  4206db:	dec    eax
  4206dc:	pop    eax
  4206dd:	shr    bl,1
  4206df:	ja     0x420716
  4206e1:	arpl   WORD PTR [esi],bp
  4206e3:	mov    al,0xa2
  4206e5:	adc    ah,ch
  4206e7:	rcr    DWORD PTR [esi-0x4234be6c],cl
  4206ed:	sub    ch,BYTE PTR [ecx+0x7bfbd792]
  4206f3:	jecxz  0x4206b4
  4206f5:	enter  0x1479,0x90
  4206f9:	sbb    al,0xf3
  4206fb:	sbb    al,0x38
  4206fd:	cmp    DWORD PTR [ecx-0x2b8e4c26],ecx
  420703:	xchg   ebp,eax
  420704:	cmp    al,0xd8
  420706:	and    eax,DWORD PTR [ecx-0x5ff20b68]
  42070c:	popa   
  42070d:	mov    eax,ds:0x55def6b6
  420712:	jmp    0xcd54b65e
  420717:	out    dx,al
  420718:	out    dx,eax
  420719:	fnsetpm(287 only) 
  42071b:	pushw  ds
  42071d:	ror    BYTE PTR [ecx-0x3a],cl
  420720:	ret    
  420721:	cwde   
  420722:	call   0x8d27:0xe37a0277
  420729:	jmp    0x7e74:0x9e75c647
  420730:	xor    al,0x5a
  420732:	sti    
  420733:	jge    0x4206f9
  420735:	add    dl,BYTE PTR [ebx+eiz*4-0x59]
  420739:	or     ebx,DWORD PTR [ebx+eax*1+0x74828c8f]
  420740:	mov    esp,0x6c617f90
  420745:	sub    edi,edi
  420747:	fwait
  420748:	xchg   ebx,eax
  420749:	mov    ?,edi
  42074b:	inc    edi
  42074c:	mov    eax,0x38ce39d7
  420751:	frstorw [ebx+0x7fdfcb9f]
  420758:	lods   al,BYTE PTR ds:[esi]
  420759:	jb     0x420792
  42075b:	dec    ecx
  42075c:	pop    ecx
  42075d:	ss lahf 
  42075f:	sub    al,0xae
  420761:	adc    edx,DWORD PTR [esi+eiz*1]
  420764:	and    esi,DWORD PTR [edx]
  420766:	arpl   WORD PTR [esi+0x67ef493d],dx
  42076c:	pop    edi
  42076d:	and    ecx,DWORD PTR [esi-0xfe94382]
  420773:	mov    DWORD PTR [esi-0x14],edi
  420776:	loop   0x42076c
  420778:	sbb    BYTE PTR [edi+edx*1+0x3],0xf1
  42077d:	les    ebx,FWORD PTR [esp+eiz*4-0x75]
  420781:	inc    edi
  420782:	mov    ch,dh
  420784:	xchg   ecx,eax
  420785:	imul   edi,DWORD PTR [eax],0x7e
  420788:	jecxz  0x42071f
  42078a:	mov    bh,0x12
  42078c:	fadd   QWORD PTR [ebx]
  42078e:	push   es
  42078f:	sub    al,0x2e
  420791:	cmp    al,0x7b
  420793:	mov    ebp,ebp
  420795:	call   FWORD PTR [esi-0x31]
  420798:	mov    BYTE PTR [edx],bh
  42079a:	call   0xa0e1f6c5
  42079f:	pop    es
  4207a0:	ret    0xf547
  4207a3:	push   ss
  4207a4:	jae    0x420747
  4207a6:	aad    0xd2
  4207a8:	and    BYTE PTR [edx-0x5a],cl
  4207ab:	aaa    
  4207ac:	inc    eax
  4207ad:	bound  edx,QWORD PTR [edx-0x5]
  4207b0:	lock fisttp DWORD PTR [ecx]
  4207b3:	cld    
  4207b4:	sub    al,0x2d
  4207b6:	test   al,0x96
  4207b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b9:	push   edx
  4207ba:	inc    eax
  4207bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207bc:	pop    eax
  4207bd:	mov    ah,0x57
  4207bf:	nop
  4207c0:	pop    esi
  4207c1:	int    0xdc
  4207c3:	ins    BYTE PTR es:[edi],dx
  4207c4:	(bad)  
  4207c6:	les    edi,FWORD PTR [esi]
  4207c8:	push   ebx
  4207c9:	aad    0x31
  4207cb:	aas    
  4207cc:	popf   
  4207cd:	cmc    
  4207ce:	inc    ecx
  4207cf:	mov    eax,0xf6b3c3fb
  4207d4:	sub    cl,BYTE PTR [edx]
  4207d6:	cmp    DWORD PTR [esi-0x36],ebp
  4207d9:	sahf   
  4207da:	or     DWORD PTR [eax+0x72f8708],edi
  4207e0:	lods   eax,DWORD PTR ds:[esi]
  4207e1:	out    0xf7,al
  4207e3:	ds scas al,BYTE PTR es:[edi]
  4207e5:	test   al,0xf
  4207e7:	and    al,bl
  4207e9:	neg    DWORD PTR [esi]
  4207eb:	ror    BYTE PTR [edi-0x240f7b6f],0x5f
  4207f2:	mov    esp,0xf17e7a43
  4207f7:	inc    edi
  4207f8:	outs   dx,BYTE PTR ds:[esi]
  4207f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207fa:	jp     0x4207b2
  4207fc:	adc    dh,BYTE PTR [ebp-0x27bce5a3]
  420802:	shr    BYTE PTR [ebx+ebx*1],cl
  420805:	xor    BYTE PTR [eax+0x6f],0xdf
  420809:	rcr    DWORD PTR [edi-0x80],1
  42080c:	mov    ch,0x7e
  42080e:	cmp    edx,DWORD PTR [ebx]
  420810:	pop    ebx
  420811:	mov    edi,0x48c3eb7
  420816:	xchg   ebp,eax
  420817:	out    0xc0,eax
  420819:	pop    ebp
  42081a:	xchg   edx,eax
  42081b:	test   eax,0xe9b50760
  420820:	mov    ds:0x265d119a,al
  420825:	push   ds
  420826:	and    eax,0xf62dca61
  42082b:	loope  0x4207c0
  42082d:	ins    DWORD PTR es:[edi],dx
  42082e:	mov    edx,0xb2fc7a1c
  420833:	jne    0x420807
  420835:	fdivr  DWORD PTR [edi+esi*4]
  420838:	xor    BYTE PTR [eax],dh
  42083a:	push   ds
  42083b:	or     ch,cl
  42083d:	or     al,0xe
  42083f:	ja     0x4207c6
  420841:	push   cs
  420842:	push   eax
  420843:	pop    es
  420844:	sbb    bl,BYTE PTR [esp+eiz*8+0x72b6aef8]
  42084b:	out    0x8a,eax
  42084d:	enter  0x4d07,0xa7
  420851:	push   0xffffffe9
  420853:	rol    DWORD PTR [ecx],cl
  420855:	and    eax,0xc70ea28e
  42085a:	cmp    al,0x9d
  42085c:	shl    DWORD PTR [ebx+0x29],0xb1
  420860:	call   FWORD PTR [eax-0x43]
  420863:	xchg   esp,eax
  420864:	xchg   esp,eax
  420865:	shr    edi,cl
  420867:	mov    edx,0xa1f6db26
  42086c:	retf   
  42086d:	inc    edx
  42086e:	sub    esi,ebx
  420870:	sub    BYTE PTR [eax],ch
  420872:	pushf  
  420873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420874:	es in  al,dx
  420876:	ins    BYTE PTR es:[edi],dx
  420877:	pusha  
  420878:	ror    BYTE PTR [ecx-0x20],0x72
  42087c:	cdq    
  42087d:	or     ecx,0x24
  420880:	push   es
  420881:	into   
  420882:	mov    ebp,DWORD PTR ds:0x49fe302e
  420888:	ins    BYTE PTR es:[edi],dx
  420889:	cs jmp 0x420820
  42088c:	mov    bh,BYTE PTR [edi+edx*2]
  42088f:	test   BYTE PTR gs:[ebx-0x47963827],dl
  420896:	dec    ebp
  420897:	sbb    bh,0xd4
  42089a:	in     eax,dx
  42089b:	pop    edi
  42089c:	mov    al,0xd0
  42089e:	jb     0x420873
  4208a0:	stos   BYTE PTR es:[edi],al
  4208a1:	loop   0x420870
  4208a3:	das    
  4208a4:	lods   al,BYTE PTR ds:[esi]
  4208a5:	aaa    
  4208a6:	cmp    al,al
  4208a8:	repnz loopne 0x4208c5
  4208ab:	pop    edi
  4208ac:	mov    DWORD PTR [esi-0x34a1ae6],esp
  4208b2:	call   0xb76c:0xe3bad63f
  4208b9:	bound  edx,QWORD PTR [ecx]
  4208bb:	cmp    al,0x28
  4208bd:	cmp    al,0xd3
  4208bf:	dec    esp
  4208c0:	test   ebx,edx
  4208c2:	pop    edx
  4208c3:	jle    0x420860
  4208c5:	imul   edx,DWORD PTR [eax-0x6a5a0263],0xb1751acb
  4208cf:	sub    al,BYTE PTR [edi]
  4208d1:	add    edi,esp
  4208d3:	mov    ds:0x774acccf,eax
  4208d8:	mov    eax,ds:0xbbbffd27
  4208dd:	fs push bp
  4208e0:	jmp    0xd7d5:0x127e0bed
  4208e7:	xor    BYTE PTR [ebx+0x1],cl
  4208ea:	xchg   edi,eax
  4208eb:	popa   
  4208ec:	aam    0x10
  4208ee:	lahf   
  4208ef:	mov    ebp,0xb3a7df7f
  4208f4:	and    esp,DWORD PTR [edx]
  4208f6:	jl     0x4208dc
  4208f8:	mov    cl,BYTE PTR [edi]
  4208fa:	(bad)  
  4208fb:	jle    0x42096a
  4208fd:	cli    
  4208fe:	pop    ecx
  4208ff:	addr16 loopne 0x4208b5
  420902:	jle    0x42094d
  420904:	sub    al,0xb3
  420906:	xchg   esp,eax
  420907:	imul   esp,DWORD PTR [edi],0xffffffda
  42090a:	arpl   WORD PTR [eax],bx
  42090c:	push   0xfffffff9
  42090e:	mov    ah,0x7d
  420910:	arpl   sp,si
  420912:	mov    eax,0x539b5bab
  420917:	jae    0x42094c
  420919:	into   
  42091a:	in     al,dx
  42091b:	jmp    0x420949
  42091d:	loope  0x42094e
  42091f:	test   al,0x6
  420921:	jno    0x4208e8
  420923:	cwde   
	...
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x6d4b39b3],0x19
  420942:	add    DWORD PTR [ecx],0x0
  420945:	stos   DWORD PTR es:[edi],eax
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    cl,bh
  42094a:	push   eax
  42094b:	push   esi
  42094c:	fistp  DWORD PTR [ebx+0x170a7fb9]
  420952:	adc    BYTE PTR [ecx],dl
  420954:	ror    eax,0xd4
  420957:	cmp    al,0xd3
  420959:	out    dx,al
  42095a:	fimul  WORD PTR [ecx+0x52]
  42095d:	repz pop eax
  42095f:	and    ebp,eax
  420961:	push   edx
  420962:	sub    dh,BYTE PTR [edx-0x35c18074]
  420968:	mov    ebp,0x15ed4822
  42096d:	xor    DWORD PTR [edx+0x33],esi
  420970:	pop    edi
  420971:	mov    dh,0xd3
  420973:	stos   DWORD PTR es:[edi],eax
  420974:	sub    ecx,edi
  420976:	loop   0x420935
  420978:	xor    DWORD PTR [esi],edx
  42097a:	xchg   edi,eax
  42097b:	aad    0x0
  42097d:	repnz out 0xf4,al
  420980:	mov    eax,0x8668b370
  420985:	sbb    ah,ch
  420987:	xchg   esp,eax
  420988:	(bad)  
  420989:	fsubr  QWORD PTR [edi+0x578841f]
  42098f:	daa    
  420990:	add    eax,0xb80f14c
  420995:	imul   esp,DWORD PTR [ebx+0xb52b01e],0xffffffa6
  42099c:	or     eax,0xa692272e
  4209a1:	stc    
  4209a2:	ss leave 
  4209a4:	hlt    
  4209a5:	popa   
  4209a6:	push   esi
  4209a7:	je     0x42097b
  4209a9:	xor    BYTE PTR [esi-0x5ee50555],bh
  4209af:	adc    DWORD PTR [edx+0x77],esp
  4209b2:	les    edx,FWORD PTR [ebx+0x40]
  4209b5:	sbb    DWORD PTR [ecx+0x2d490b75],eax
  4209bb:	mov    ds:0xe6e363f7,eax
  4209c0:	dec    eax
  4209c1:	inc    ebx
  4209c2:	(bad)  
  4209c3:	popa   
  4209c4:	cmp    BYTE PTR [ebx],cl
  4209c6:	rol    DWORD PTR [ebp+0x399bbaca],0xf4
  4209cd:	les    edi,FWORD PTR [ebx+0x718bbf46]
  4209d3:	jb     0x420a51
  4209d5:	xchg   esp,eax
  4209d6:	dec    ebx
  4209d7:	das    
  4209d8:	push   cs
  4209d9:	pop    edi
  4209da:	loope  0x420a11
  4209dc:	xchg   ebx,eax
  4209dd:	stos   DWORD PTR es:[edi],eax
  4209de:	rol    edi,1
  4209e0:	int3   
  4209e1:	xor    al,0x61
  4209e3:	xchg   ebx,eax
  4209e4:	mov    bh,0x6e
  4209e6:	pop    eax
  4209e7:	jnp    0x4209b8
  4209e9:	or     al,0xd6
  4209eb:	in     eax,0x2d
  4209ed:	mov    bh,BYTE PTR [ebx]
  4209ef:	and    al,cl
  4209f1:	(bad)  
  4209f2:	pop    esi
  4209f3:	xor    al,BYTE PTR [edx+0x911fa68]
  4209f9:	inc    ecx
  4209fa:	sbb    ebp,DWORD PTR [edx+eiz*8+0x93df7fe]
  420a01:	data16 ins BYTE PTR es:[edi],dx
  420a03:	into   
  420a04:	js     0x4209fe
  420a06:	dec    ebx
  420a07:	test   DWORD PTR [edi-0x69b6832f],eax
  420a0d:	pop    esi
  420a0e:	mov    WORD PTR [ebx],fs
  420a10:	push   ebp
  420a11:	add    al,0x8e
  420a13:	xchg   ebp,eax
  420a14:	adc    ebx,esi
  420a16:	mov    edi,0xaed5bbb8
  420a1b:	pop    edx
  420a1c:	xchg   esi,eax
  420a1d:	inc    esp
  420a1e:	and    eax,0xdb575e13
  420a23:	iret   
  420a24:	cmp    eax,0x79408a50
  420a29:	cdq    
  420a2a:	loopne 0x420a32
  420a2c:	adc    bl,BYTE PTR [eax-0x80]
  420a2f:	fs inc ebp
  420a31:	jb     0x420a6b
  420a33:	loop   0x420aa8
  420a35:	mov    ecx,DWORD PTR [ecx+0x7aec4abf]
  420a3b:	push   es
  420a3c:	xchg   ebx,eax
  420a3d:	sahf   
  420a3e:	ficomp DWORD PTR [edi+0x4f5d8fb0]
  420a44:	jne    0x420a7d
  420a46:	mov    es,WORD PTR [edx]
  420a48:	std    
  420a49:	js     0x420a2e
  420a4b:	jge    0x420a56
  420a4d:	cld    
  420a4e:	push   0xffffffc4
  420a50:	pop    ebp
  420a51:	jo     0x420a7b
  420a53:	leave  
  420a54:	(bad)  
  420a55:	fmul   DWORD PTR [edx]
  420a57:	dec    esi
  420a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a59:	sbb    ebp,DWORD PTR [edx+eax*1]
  420a5c:	dec    ebx
  420a5d:	div    DWORD PTR [edi-0x49f7bad7]
  420a63:	ss mov cl,0xaf
  420a66:	fld    DWORD PTR [edi+edi*2]
  420a69:	out    dx,eax
  420a6a:	(bad)  
  420a6b:	mov    al,0xbb
  420a6d:	jg     0x420ae5
  420a6f:	ins    BYTE PTR es:[edi],dx
  420a70:	mov    eax,0x10a7db42
  420a75:	adc    ecx,eax
  420a77:	mov    edi,0x1b0021aa
  420a7c:	mov    bh,0x94
  420a7e:	shl    BYTE PTR [edi],0xb4
  420a81:	fwait
  420a82:	xchg   ecx,eax
  420a83:	add    BYTE PTR [edx+eiz*2+0x53],al
  420a87:	scas   al,BYTE PTR es:[edi]
  420a88:	lods   eax,DWORD PTR ds:[esi]
  420a89:	iret   
  420a8a:	stos   DWORD PTR es:[edi],eax
  420a8b:	cmp    bl,bh
  420a8d:	adc    BYTE PTR [edx-0x18],0x5b
  420a91:	dec    esi
  420a92:	pusha  
  420a93:	jmp    0x420ae9
  420a95:	out    0xbe,eax
  420a97:	xor    eax,0xcbacc56b
  420a9c:	retf   0x5dec
  420a9f:	push   ss
  420aa0:	xchg   edi,eax
  420aa1:	or     ah,BYTE PTR [ecx]
  420aa3:	cmp    ebx,DWORD PTR [ebp-0x55333703]
  420aa9:	xchg   edx,eax
  420aaa:	pop    eax
  420aab:	push   eax
  420aac:	mov    dh,0xdf
  420aae:	pop    ecx
  420aaf:	dec    esi
  420ab0:	aad    0xcb
  420ab2:	xor    dh,BYTE PTR [edi+edx*1-0x18]
  420ab6:	les    ecx,FWORD PTR [edx-0x6d]
  420ab9:	cwde   
  420aba:	in     eax,dx
  420abb:	sbb    BYTE PTR [edx+ebx*8-0x57],dh
  420abf:	xor    ebp,ebp
  420ac1:	adc    cl,BYTE PTR [edi-0x40]
  420ac4:	out    dx,eax
  420ac5:	xor    eax,0xae89ee9b
  420aca:	xor    eax,0x423867a7
  420acf:	cld    
  420ad0:	mov    edx,0xd25cb51e
  420ad5:	imul   edi,ebx,0xc7dd8a4b
  420adb:	pop    ss
  420adc:	jmp    0x420b3d
  420ade:	mov    edx,0xfd79d889
  420ae3:	and    ecx,esi
  420ae5:	icebp  
  420ae6:	cli    
  420ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae8:	pop    es
  420ae9:	pop    edi
  420aea:	xor    DWORD PTR [ecx],edx
  420aec:	xor    al,0x61
  420aee:	mov    esi,0xcd1745e7
  420af3:	or     DWORD PTR [ebp+0x1fc66fbf],edx
  420af9:	push   ebx
  420afa:	mov    edi,0x9164dff8
  420aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b00:	cvtps2pi mm0,xmm5
  420b03:	sub    al,BYTE PTR [eax+ebp*4-0x71d31304]
  420b0a:	jp     0x420b89
  420b0c:	mov    edi,esi
  420b0e:	adc    eax,0x466c1a07
  420b13:	aad    0x83
  420b15:	and    edi,DWORD PTR [esi]
  420b17:	xor    al,0xe5
  420b19:	aas    
  420b1a:	mov    al,ds:0x211880e9
  420b1f:	xchg   ebx,eax
  420b20:	jmp    0xe39e:0xe26b29be
  420b27:	adc    BYTE PTR [eax],0x23
  420b2a:	adc    BYTE PTR [esi],cl
  420b2c:	or     al,0x81
  420b2e:	cdq    
  420b2f:	sbb    al,cl
  420b31:	and    al,0x90
  420b33:	fwait
  420b34:	mov    DWORD PTR [edi-0x48],esi
  420b37:	mov    ecx,gs
  420b39:	pop    eax
  420b3a:	cmp    eax,0xd69d8930
  420b3f:	dec    ebp
  420b40:	xor    BYTE PTR [esi+0x43],ah
  420b43:	dec    eax
  420b44:	enter  0x6843,0x1c
  420b48:	pop    esi
  420b49:	imul   ebp,DWORD PTR [eax+0x71f274ee],0x78db9a0a
  420b53:	test   edx,edx
  420b55:	int3   
  420b56:	push   esp
  420b57:	sub    ecx,esi
  420b59:	jg     0x420b7e
  420b5b:	jnp    0x420b70
  420b5d:	dec    ebp
  420b5e:	cmp    ch,BYTE PTR [eax]
  420b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b61:	jl     0x420b6c
  420b63:	dec    ebx
  420b64:	and    eax,esp
  420b66:	hlt    
  420b67:	push   cs
  420b68:	jae    0x420bde
  420b6a:	inc    ebp
  420b6b:	mov    ecx,0x8dcadb45
  420b70:	adc    dl,dl
  420b72:	xor    ecx,DWORD PTR ds:0x9731a760
  420b78:	push   esi
  420b79:	aad    0x9c
  420b7b:	or     al,ah
  420b7d:	push   ss
  420b7e:	js     0x420b85
  420b80:	mov    bl,0xc0
  420b82:	cwde   
  420b83:	fild   QWORD PTR [ebx]
  420b85:	(bad)  
  420b86:	scas   eax,DWORD PTR es:[edi]
  420b87:	dec    edx
  420b88:	out    dx,al
  420b89:	sub    al,BYTE PTR [edx-0x2f0d0ecf]
  420b8f:	fwait
  420b90:	lahf   
  420b91:	xchg   ebp,eax
  420b92:	xor    al,0x5b
  420b94:	mov    eax,0x2119d44b
  420b99:	and    ah,BYTE PTR [ecx-0x28e020bf]
  420b9f:	xchg   BYTE PTR [edi],ah
  420ba1:	xor    al,0xb1
  420ba3:	ins    DWORD PTR es:[edi],dx
  420ba4:	inc    edi
  420ba5:	scas   al,BYTE PTR es:[edi]
  420ba6:	in     eax,0x13
  420ba8:	sbb    BYTE PTR [eax-0x3f],dl
  420bab:	pop    ecx
  420bac:	and    BYTE PTR [ebp+0x31],ah
  420baf:	gs retf 
  420bb1:	cmp    bl,BYTE PTR [ebp-0x5bfc2f24]
  420bb7:	fist   DWORD PTR [ecx]
  420bb9:	cmp    eax,DWORD PTR [edi-0x67ae5035]
  420bbf:	mov    edx,0x94d9c976
  420bc4:	test   DWORD PTR [edx-0x1d],ebp
  420bc7:	mov    BYTE PTR [edi+0x5c48c1ef],ch
  420bcd:	(bad)  
  420bce:	nop
  420bcf:	add    eax,0xc71b3615
  420bd4:	mov    dh,0x3c
  420bd6:	std    
  420bd7:	cmp    al,0x80
  420bd9:	daa    
  420bda:	loop   0x420c3a
  420bdc:	outs   dx,DWORD PTR ds:[esi]
  420bdd:	or     DWORD PTR [edi],ebx
  420bdf:	inc    edi
  420be0:	dec    edx
  420be1:	push   DWORD PTR [esi+0x335291c0]
  420be7:	(bad)  
  420be9:	xchg   edi,eax
  420bea:	sub    BYTE PTR [esi+ecx*1],bh
  420bed:	repnz outs dx,BYTE PTR ds:[esi]
  420bef:	adc    edx,DWORD PTR [eax-0x5e2dbbd]
  420bf5:	sub    bh,BYTE PTR [esi+0x2540ec88]
  420bfb:	mov    edx,0x96688171
  420c00:	inc    esp
  420c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c02:	sub    BYTE PTR [eax],0xed
  420c05:	sub    BYTE PTR ds:0x7edd7ccf,bh
  420c0b:	aad    0xa4
  420c0d:	loop   0x420c1e
  420c0f:	mov    edx,0x505a4cf0
  420c14:	or     BYTE PTR [edx+0x592a26aa],ah
  420c1a:	xchg   edi,eax
  420c1b:	adc    DWORD PTR [edi+0x38],ebp
  420c1e:	mov    ecx,0x7414faef
  420c23:	nop
  420c24:	xor    eax,0x3e40aa6c
  420c29:	pop    esp
  420c2a:	mov    ds,esp
  420c2c:	and    BYTE PTR [ebp-0x5f8bca40],ah
  420c32:	inc    eax
  420c33:	or     eax,edx
  420c35:	jle    0x420c4c
  420c37:	xchg   esi,eax
  420c38:	sub    BYTE PTR [ecx],cl
  420c3a:	mov    eax,ds:0x8a9e150b
  420c3f:	xchg   ecx,eax
  420c40:	ror    bl,cl
  420c42:	sub    dh,BYTE PTR [eax+0x1366170]
  420c48:	dec    ecx
  420c49:	and    al,0x3a
  420c4b:	in     eax,0xdd
  420c4d:	push   edx
  420c4e:	jecxz  0x420ca5
  420c50:	ror    esp,1
  420c52:	lea    ebx,[edi+0xbae9039]
  420c58:	push   edx
  420c59:	sbb    eax,0x4c2c6ea9
  420c5e:	inc    BYTE PTR ds:0x10934b40
  420c64:	pop    ecx
  420c65:	xchg   ebx,eax
  420c66:	addr16 ja 0x420bf9
  420c69:	or     BYTE PTR [edx-0x15],bh
  420c6c:	ins    BYTE PTR es:[edi],dx
  420c6d:	or     ebx,edi
  420c6f:	fidiv  WORD PTR [ebx]
  420c71:	xchg   esp,eax
  420c72:	dec    ebp
  420c73:	jmp    0x79ca4c77
  420c78:	popa   
  420c79:	std    
  420c7a:	ficom  WORD PTR [ebp+0x71c7f4bd]
  420c80:	push   edx
  420c81:	cld    
  420c82:	or     al,0xb5
  420c84:	xor    al,BYTE PTR [edi-0x6b]
  420c87:	mov    cl,0x90
  420c89:	in     al,0x1b
  420c8b:	mov    eax,0x750036f7
  420c90:	inc    esi
  420c91:	sub    cl,BYTE PTR [esi-0x3061ffd8]
  420c97:	ror    edx,1
  420c99:	sub    DWORD PTR [ebx],ecx
  420c9b:	add    DWORD PTR [edx-0x65391a05],0x70
  420ca2:	fild   WORD PTR [ecx+0x42cc4cf]
  420ca8:	mov    ecx,0xef9b119e
  420cad:	push   0xd78ee746
  420cb2:	pop    es
  420cb3:	mov    edx,0x5841dff1
  420cb8:	mov    edx,esp
  420cba:	popf   
  420cbb:	push   edx
  420cbc:	push   ebx
  420cbd:	outs   dx,DWORD PTR ds:[esi]
  420cbe:	js     0x420d04
  420cc0:	std    
  420cc1:	rol    DWORD PTR [ecx],1
  420cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc4:	fistp  DWORD PTR [ebx-0x24]
  420cc7:	test   esp,ebp
  420cc9:	pop    ss
  420cca:	sub    edx,ecx
  420ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ccd:	inc    edx
  420cce:	sbb    al,0x92
  420cd0:	and    BYTE PTR [ecx],cl
  420cd2:	cmc    
  420cd3:	lods   eax,DWORD PTR ds:[esi]
  420cd4:	inc    ebp
  420cd5:	ja     0x420c8b
  420cd7:	sti    
  420cd8:	sub    BYTE PTR [ebp-0x3b5df180],0x4f
  420cdf:	out    dx,eax
  420ce0:	xchg   ebp,eax
  420ce1:	push   ebp
  420ce2:	sbb    BYTE PTR [ecx],ch
  420ce4:	push   ebp
  420ce5:	fild   WORD PTR [edi+ebx*1-0x3cc71dc4]
  420cec:	test   BYTE PTR [eax+0x69],dl
  420cef:	add    BYTE PTR [ebx*4+0xe965],0x0
	...
  420cff:	add    BYTE PTR [eax],al
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	(bad)  
  420d0e:	repnz xor esp,DWORD PTR [ecx]
  420d11:	les    eax,FWORD PTR [esi+0x3ab0001]
  420d17:	add    BYTE PTR [eax],al
  420d19:	lds    ax,DWORD PTR [edi-0x538f64f6]
  420d20:	mov    bl,0xb1
  420d22:	xchg   edx,eax
  420d23:	scas   eax,DWORD PTR es:[edi]
  420d24:	hlt    
  420d25:	stc    
  420d26:	xchg   edx,eax
  420d27:	pop    ecx
  420d28:	xor    BYTE PTR [ebx],bl
  420d2a:	mov    esi,0x65f9513
  420d2f:	outs   dx,BYTE PTR ds:[esi]
  420d30:	xlat   BYTE PTR ds:[ebx]
  420d31:	jmp    0x420db2
  420d33:	mov    ds:0x9184f1e6,eax
  420d38:	sti    
  420d39:	mov    bl,0x45
  420d3b:	push   edi
  420d3c:	shr    BYTE PTR [edx],0x56
  420d3f:	xor    eax,0xbe21004e
  420d44:	lock rol BYTE PTR [ecx+edi*2],0x65
  420d49:	fwait
  420d4a:	cmp    al,0xa5
  420d4c:	sub    ch,ah
  420d4e:	lahf   
  420d4f:	outs   dx,BYTE PTR ds:[esi]
  420d50:	dec    edi
  420d51:	xor    al,0x9e
  420d53:	(bad)  
  420d54:	ds cld 
  420d56:	mov    ah,0xe5
  420d58:	loop   0x420d83
  420d5a:	adc    eax,0xa1ec5d7b
  420d5f:	mov    eax,ds:0x5ce24cd3
  420d64:	or     al,0xbd
  420d66:	aaa    
  420d67:	test   al,0x36
  420d69:	ins    DWORD PTR es:[edi],dx
  420d6a:	into   
  420d6b:	dec    ecx
  420d6c:	pop    edx
  420d6d:	sub    al,bh
  420d6f:	sub    edi,DWORD PTR [eax+ecx*1]
  420d72:	sub    ecx,DWORD PTR [ebx+0x24]
  420d75:	sti    
  420d76:	or     al,0x4d
  420d78:	aas    
  420d79:	mov    ecx,edi
  420d7b:	xchg   esi,eax
  420d7c:	cdq    
  420d7d:	cmc    
  420d7e:	in     al,dx
  420d7f:	in     eax,0x67
  420d81:	fidiv  WORD PTR ds:0x17f870e6
  420d87:	aas    
  420d88:	pusha  
  420d89:	leave  
  420d8a:	fcomp  QWORD PTR [esp+edx*1]
  420d8d:	or     BYTE PTR [ebx],ch
  420d8f:	mov    ds:0xf14b4aa8,eax
  420d94:	repz xor bl,BYTE PTR [edi]
  420d97:	data16 adc al,0x1b
  420d9a:	jge    0x420dba
  420d9c:	adc    DWORD PTR [ebx+0x7222490],esp
  420da2:	popa   
  420da3:	adc    al,0xa6
  420da5:	jp     0x420da9
  420da7:	fs out dx,eax
  420da9:	test   al,0x7b
  420dab:	mov    dh,0xd4
  420dad:	ror    dl,0x70
  420db0:	test   eax,0xecd8feeb
  420db5:	push   edx
  420db6:	jmp    0x420e01
  420db8:	les    edi,FWORD PTR [ebp-0x27027fa1]
  420dbe:	fdivr  DWORD PTR ds:0xd6fdeabb
  420dc4:	das    
  420dc5:	fld    TBYTE PTR [ebx+0x16]
  420dc8:	cmp    eax,0x359a4570
  420dcd:	inc    ebp
  420dce:	(bad)  
  420dcf:	stos   DWORD PTR es:[edi],eax
  420dd0:	mov    ds:0x7849b90f,al
  420dd5:	mov    ch,0x4c
  420dd7:	shr    BYTE PTR [edi+0x7951ca18],1
  420ddd:	adc    BYTE PTR [edi],dh
  420ddf:	push   cs
  420de0:	imul   esi,DWORD PTR ds:0xfcd6254,0x55
  420de7:	mov    edi,0xd92289e1
  420dec:	jbe    0x420dc0
  420dee:	mov    al,ds:0x4d17591f
  420df3:	rcr    DWORD PTR [esp+ecx*2],1
  420df6:	xlat   BYTE PTR ds:[ebx]
  420df7:	addr16 jge 0x420e65
  420dfa:	push   ds
  420dfb:	test   eax,0x1f80e86f
  420e00:	inc    ecx
  420e01:	dec    eax
  420e02:	out    dx,eax
  420e03:	cli    
  420e04:	adc    ah,BYTE PTR [ebp+eiz*4+0x14220652]
  420e0b:	mov    esp,0xaed52134
  420e10:	jecxz  0x420da6
  420e12:	pop    ds
  420e13:	sti    
  420e14:	lea    esi,[edi+edx*1+0x39]
  420e18:	pop    ss
  420e19:	mov    ch,0x73
  420e1b:	sbb    DWORD PTR [esi+0x6b],eax
  420e1e:	jecxz  0x420e57
  420e20:	enter  0x2c8c,0xb0
  420e24:	inc    ebp
  420e25:	lods   al,BYTE PTR ds:[esi]
  420e26:	test   DWORD PTR [edi],0xee3e59d6
  420e2c:	fcmovu st,st(2)
  420e2e:	stos   DWORD PTR es:[edi],eax
  420e2f:	mov    esp,0xe637d100
  420e34:	pop    edx
  420e35:	test   eax,0x4b251c00
  420e3a:	lds    ebp,FWORD PTR [edx-0x651ef506]
  420e40:	stos   DWORD PTR es:[edi],eax
  420e41:	cs fsqrt 
  420e44:	cmp    ecx,DWORD PTR [edi-0x55355875]
  420e4a:	into   
  420e4b:	pop    ss
  420e4c:	inc    ebx
  420e4d:	icebp  
  420e4e:	and    eax,0xfd821ce0
  420e53:	mov    edx,0x9f93e029
  420e58:	mov    edi,0x798df744
  420e5d:	inc    edx
  420e5e:	mov    eax,edx
  420e60:	xor    eax,DWORD PTR [eax]
  420e62:	pop    ss
  420e63:	mov    eax,0x1b0258d2
  420e68:	mov    cl,0xef
  420e6a:	or     BYTE PTR [edi],al
  420e6c:	add    BYTE PTR [eax],dh
  420e6e:	sbb    BYTE PTR ss:0xca9fa756,ah
  420e75:	jp     0x420edd
  420e77:	repz mov ss,esp
  420e7a:	imul   ecx,DWORD PTR [esi-0x5bd5809],0xffffffce
  420e81:	xchg   ecx,eax
  420e82:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420e84:	cdq    
  420e85:	std    
  420e86:	mov    WORD PTR gs:[ebp+eax*2+0x5e],fs
  420e8b:	repz fist WORD PTR ds:0x70bff8a8
  420e92:	cli    
  420e93:	dec    esp
  420e94:	cmp    al,0x73
  420e96:	cmc    
  420e97:	fs iret 
  420e99:	inc    esp
  420e9a:	shld   DWORD PTR [edi+0x71],esp,cl
  420e9e:	mov    ah,0x53
  420ea0:	icebp  
  420ea1:	out    0x27,al
  420ea3:	cdq    
  420ea4:	rol    DWORD PTR [edi+0x27],0xa7
  420ea8:	xchg   BYTE PTR [ebx+0x48],dh
  420eab:	test   al,0xc4
  420ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eae:	repnz retf 
  420eb0:	rcl    edx,0xd1
  420eb3:	aaa    
  420eb4:	and    al,0x4e
  420eb6:	retf   
  420eb7:	and    cx,WORD PTR [eax-0x68771ab8]
  420ebe:	cmp    DWORD PTR [eax+0x382ae120],esp
  420ec4:	fiadd  DWORD PTR [ecx-0x33]
  420ec7:	and    BYTE PTR [eax-0x22],al
  420eca:	loope  0x420f0d
  420ecc:	and    dh,BYTE PTR [esi]
  420ece:	sub    DWORD PTR [ecx+0x1164ca0c],edi
  420ed4:	or     al,0x2c
  420ed6:	enter  0xb062,0xde
  420eda:	imul   BYTE PTR [edx]
  420edc:	mov    eax,0xb0f39415
  420ee1:	or     al,0x4d
  420ee3:	lahf   
  420ee4:	push   0x3f767852
  420ee9:	sti    
  420eea:	not    bl
  420eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eed:	call   0x54bc4fe0
  420ef2:	sub    BYTE PTR [eax+0x7303f859],bh
  420ef8:	stos   DWORD PTR es:[edi],eax
  420ef9:	inc    esp
  420efa:	pop    ebp
  420efb:	and    dl,BYTE PTR [ecx+0x19ba6b80]
  420f01:	sahf   
  420f02:	xor    ebp,ebp
  420f04:	pop    ebx
  420f05:	leave  
  420f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f07:	(bad)  
  420f08:	in     eax,0x42
  420f0a:	repnz add DWORD PTR [ecx+0xa],eax
  420f0e:	ret    0xc0b5
  420f11:	jae    0x420f36
  420f13:	mov    ds,WORD PTR [esi]
  420f15:	mov    al,ds:0x6c46ecd5
  420f1a:	inc    esi
  420f1b:	sub    BYTE PTR [ebx+0x4dba697b],al
  420f21:	xchg   ebx,eax
  420f22:	jg     0x420f62
  420f24:	or     DWORD PTR [ebx+esi*4-0x6ad16655],ecx
  420f2b:	push   es
  420f2c:	pop    esp
  420f2d:	mov    ah,0x9f
  420f2f:	dec    ebp
  420f30:	push   ebx
  420f31:	adc    eax,0x848d3fe3
  420f36:	and    eax,0x5c
  420f39:	sub    DWORD PTR [ebx+0x7],eax
  420f3c:	xchg   ecx,eax
  420f3d:	mov    eax,0x4969f9d
  420f42:	cmp    al,0x54
  420f44:	int3   
  420f45:	lods   eax,DWORD PTR ds:[esi]
  420f46:	outs   dx,BYTE PTR ds:[esi]
  420f47:	loope  0x420ee0
  420f49:	adc    al,0x16
  420f4b:	pop    ebx
  420f4c:	dec    esi
  420f4d:	jmp    0x86b8:0x42da31a1
  420f54:	mov    DWORD PTR [eax],edx
  420f56:	mov    ds:0xe6a47c27,al
  420f5b:	dec    esi
  420f5c:	loope  0x420f0c
  420f5e:	ret    
  420f5f:	or     DWORD PTR [edx+0x79],eax
  420f62:	jb     0x420fab
  420f64:	add    dh,al
  420f66:	sbb    al,0x47
  420f68:	popf   
  420f69:	das    
  420f6a:	sub    BYTE PTR [esi],0xf9
  420f6d:	push   ebp
  420f6e:	mov    bh,0xb7
  420f70:	repz lahf 
  420f72:	cmp    BYTE PTR [ecx+ecx*8+0x1d5651ef],0x85
  420f7a:	lock aas 
  420f7c:	or     esi,DWORD PTR [ebp-0x4b]
  420f7f:	jmp    0x353348b6
  420f84:	clts   
  420f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f87:	jmp    0xd287b7de
  420f8c:	add    esp,ebp
  420f8e:	mov    edx,0x49ff19a2
  420f93:	fdivr  QWORD PTR [edx+0x51e557a]
  420f99:	shr    cl,1
  420f9b:	ror    DWORD PTR [eax+ebx*1+0x12],0xd9
  420fa0:	clc    
  420fa1:	push   es
  420fa2:	arpl   bx,bp
  420fa4:	inc    ecx
  420fa5:	pop    es
  420fa6:	test   eax,0xdd5ddf0a
  420fab:	rol    DWORD PTR [edx],0xe2
  420fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420faf:	mov    esp,0x77708824
  420fb4:	and    DWORD PTR [edx+0x68],esi
  420fb7:	popa   
  420fb8:	call   DWORD PTR [esi]
  420fba:	push   0x1aa8953c
  420fbf:	pop    ecx
  420fc0:	sbb    ah,BYTE PTR [ebp+0x36]
  420fc3:	jns    0x420f89
  420fc5:	mov    WORD PTR [esi+0x61381ab0],es
  420fcb:	xchg   BYTE PTR [edx+0x6b46ba4c],cl
  420fd1:	popf   
  420fd2:	inc    esp
  420fd3:	xor    ch,0xf1
  420fd6:	mov    WORD PTR [edi+eax*1+0x176e67c7],es
  420fdd:	and    ebp,edx
  420fdf:	bound  edi,QWORD PTR [esi-0x12ba9782]
  420fe5:	mov    eax,0xa6b8aacd
  420fea:	cmp    ecx,ebp
  420fec:	lods   al,BYTE PTR ds:[esi]
  420fed:	pop    ebp
  420fee:	outs   dx,BYTE PTR ds:[esi]
  420fef:	pop    ss
  420ff0:	stc    
  420ff1:	jmp    0x8b7be2a8
  420ff6:	test   esi,0x8cc1dfed
  420ffc:	or     eax,0x4c0581de
  421001:	pop    esp
  421002:	dec    ebx
  421003:	(bad)  
  421004:	into   
  421005:	mov    al,ds:0x8fe62c60
  42100a:	xor    DWORD PTR [ebx+0x58b858d1],esi
  421010:	and    al,0xb6
  421012:	mov    ebx,0x9f218735
  421017:	stos   DWORD PTR es:[edi],eax
  421018:	inc    esi
  421019:	xor    DWORD PTR [eax+ebx*8+0x3a],edx
  42101d:	lods   eax,DWORD PTR ds:[esi]
  42101e:	or     dh,BYTE PTR [edx-0x1c]
  421021:	dec    eax
  421022:	adc    DWORD PTR [esi+ecx*4-0x3a],esp
  421026:	pop    esi
  421027:	imul   ecx,ebx,0xe7358dc7
  42102d:	mov    dl,0x3d
  42102f:	fs jbe 0x421051
  421032:	or     DWORD PTR [eax+0x4],eax
  421035:	mov    esi,0x1be5d51
  42103a:	xchg   esp,eax
  42103b:	dec    eax
  42103c:	push   esi
  42103d:	lds    esp,FWORD PTR ds:0xcd38f261
  421043:	xor    BYTE PTR [esi+0x34],dh
  421046:	in     eax,dx
  421047:	push   ebx
  421048:	enter  0xf022,0xe0
  42104c:	rol    BYTE PTR [ebp+0x14134a18],0x10
  421053:	jb     0x42101e
  421055:	sbb    bl,BYTE PTR [edi-0x53d2083d]
  42105b:	mov    ebp,0x5d032a00
  421060:	fs jbe 0x421082
  421063:	mov    ds:0xbc9cbff,eax
  421068:	adc    dl,dl
  42106a:	push   0x79
  42106c:	fisub  WORD PTR [edx+0x17183aeb]
  421072:	(bad)  
  421073:	clc    
  421074:	push   eax
  421075:	push   esi
  421076:	in     eax,dx
  421077:	xchg   DWORD PTR [esi-0x72],ebx
  42107a:	lock adc DWORD PTR [edi+0x564707fc],ebx
  421081:	jmp    0xa120cdd0
  421086:	mov    al,ds:0xbaacdf71
  42108b:	rcl    BYTE PTR [edx+0x2a],0xa
  42108f:	outs   dx,DWORD PTR ds:[esi]
  421090:	inc    esi
  421091:	call   ebx
  421093:	icebp  
  421094:	icebp  
  421095:	jne    0x42110e
  421097:	inc    eax
  421098:	call   0x610b:0x1ab9b43b
  42109f:	sbb    DWORD PTR [ecx],ebp
  4210a1:	mov    esi,0xd590932d
  4210a6:	test   eax,0x9973aa1c
  4210ab:	in     al,0x62
  4210ad:	mov    BYTE PTR [ebx-0x2ce04048],bh
  4210b3:	leave  
  4210b4:	cs jecxz 0x421092
  4210b7:	imul   BYTE PTR [ebx+edi*4]
  4210ba:	cs hlt 
  4210bc:	sub    eax,0x96f1a207
  4210c1:	test   al,0x7b
  4210c3:	rol    DWORD PTR [eax],1
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	xor    BYTE PTR [edi+0x6e],al
  4210e0:	jb     0x421151
  4210e2:	mov    al,BYTE PTR [ecx]
  4210e4:	add    BYTE PTR [ebx+0x1b000003],ch
  4210ea:	scas   al,BYTE PTR es:[edi]
  4210eb:	rcr    BYTE PTR [ecx],1
  4210ed:	in     al,dx
  4210ee:	cli    
  4210ef:	cs int3 
  4210f1:	add    BYTE PTR [esi-0x6e284274],ah
  4210f7:	addr16 popf 
  4210f9:	test   al,0xde
  4210fb:	adc    esp,esp
  4210fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fe:	sbb    esp,DWORD PTR [ebx+0x49]
  421101:	gs xchg ebx,eax
  421103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421104:	mov    ch,0x8e
  421106:	js     0x421178
  421108:	push   eax
  421109:	not    bl
  42110b:	xchg   edi,eax
  42110c:	stos   BYTE PTR es:[edi],al
  42110d:	mov    eax,0xb787e03
  421112:	or     BYTE PTR [eax+0xe515085],0xcc
  421119:	repz inc ebx
  42111b:	nop
  42111c:	jb     0x4210fc
  42111e:	jnp    0x42117b
  421120:	add    bl,BYTE PTR [esi]
  421122:	inc    ebx
  421123:	fadd   QWORD PTR [edi+eax*8-0x59896fdd]
  42112a:	inc    ebp
  42112b:	int3   
  42112c:	cmp    eax,edx
  42112e:	ret    
  42112f:	and    BYTE PTR [ebx-0x7d],ch
  421132:	mov    ebp,0xc1e841b5
  421137:	mov    dh,0xac
  421139:	sub    al,0x31
  42113b:	nop
  42113c:	test   eax,0x99f5a587
  421141:	je     0x421141
  421143:	cmp    bh,bl
  421145:	jg     0x4211b7
  421147:	repnz pop eax
  421149:	sub    edi,DWORD PTR [ebx]
  42114b:	inc    edx
  42114c:	lods   al,BYTE PTR ds:[esi]
  42114d:	xor    bl,al
  42114f:	ss adc al,0xba
  421152:	add    ebp,esi
  421154:	jae    0x421179
  421156:	add    al,0x64
  421158:	loope  0x421106
  42115a:	adc    ebx,DWORD PTR [edi]
  42115c:	jno    0x4211ad
  42115e:	mov    eax,0xc6f02bf0
  421163:	jl     0x421116
  421165:	xor    dl,bl
  421167:	pop    esp
  421168:	add    edi,eax
  42116a:	cmp    esp,ebp
  42116c:	pop    ebp
  42116d:	neg    DWORD PTR [ecx]
  42116f:	or     al,BYTE PTR [ebx]
  421171:	sub    al,0x6e
  421173:	jecxz  0x4211ac
  421175:	and    ebx,DWORD PTR [esi-0x4dae89cc]
  42117b:	retf   
  42117c:	xchg   ebx,eax
  42117d:	lods   al,BYTE PTR ds:[esi]
  42117e:	imul   DWORD PTR [edi-0x75f3cab]
  421184:	mov    edi,0x4e1655b5
  421189:	push   0x51
  42118b:	shl    BYTE PTR [eax-0xc388db5],0x5
  421192:	test   eax,0xfb9efcc0
  421197:	push   eax
  421198:	push   ecx
  421199:	fwait
  42119a:	sbb    eax,0x1c29951f
  42119f:	bound  ebp,QWORD PTR [eax-0x1a04876d]
  4211a5:	add    al,0x27
  4211a7:	or     dl,bh
  4211a9:	in     eax,0x4b
  4211ab:	repz dec ebx
  4211ad:	into   
  4211ae:	cmp    BYTE PTR [edi-0x7c31c8b9],dh
  4211b4:	enter  0x81fc,0x69
  4211b8:	neg    DWORD PTR [edx]
  4211ba:	xor    ebx,esi
  4211bc:	or     eax,0xbf8ab68c
  4211c1:	push   ds
  4211c2:	call   0xd4b8:0xd8f7bc18
  4211c9:	call   0xd901cf1e
  4211ce:	mov    ds:0x72aecf66,al
  4211d3:	std    
  4211d4:	mov    ch,BYTE PTR [edi-0x38556545]
  4211da:	(bad)  
  4211db:	call   0x5d4c7482
  4211e0:	in     al,dx
  4211e1:	pop    ebx
  4211e2:	inc    edx
  4211e3:	(bad)  
  4211e4:	add    bh,cl
  4211e6:	sub    dl,BYTE PTR [edx]
  4211e8:	pop    edx
  4211e9:	dec    ecx
  4211ea:	mov    ch,0x20
  4211ec:	fs pop ds
  4211ee:	loopne 0x421227
  4211f0:	mov    ebp,DWORD PTR [ebx+0x28]
  4211f3:	mov    edi,eax
  4211f5:	mov    WORD PTR [ebp-0x701097cf],gs
  4211fb:	and    eax,0x289a9672
  421200:	jl     0x421269
  421202:	gs (bad) 
  421204:	sub    DWORD PTR [edx+0x3c],edx
  421207:	or     edx,DWORD PTR [ebp-0x3d57a2b8]
  42120d:	and    eax,DWORD PTR ds:0x20f8180
  421213:	cs repz jle 0x42126a
  421217:	dec    edx
  421218:	pop    edi
  421219:	cmp    BYTE PTR [ebx-0x712d0e42],0x88
  421220:	out    0xab,eax
  421222:	das    
  421223:	iret   
  421224:	mov    ecx,0xbbbaa950
  421229:	jp     0x4211e7
  42122b:	push   ss
  42122c:	(bad)  
  42122f:	mov    esp,0x192111f6
  421234:	ins    DWORD PTR es:[edi],dx
  421235:	cmp    edi,ebp
  421237:	jp     0x421260
  421239:	scas   eax,DWORD PTR es:[edi]
  42123a:	inc    ebp
  42123b:	rol    BYTE PTR [ebx-0x64319797],cl
  421241:	xor    DWORD PTR [ebx],eax
  421243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421244:	xchg   edi,eax
  421245:	arpl   WORD PTR [eax+0x23],cx
  421248:	int    0x5a
  42124a:	xor    esp,DWORD PTR [edi+esi*4]
  42124d:	mov    WORD PTR [edx],es
  42124f:	shl    al,1
  421251:	or     DWORD PTR [ecx+edx*1+0x26526407],eax
  421258:	pushf  
  421259:	jb     0x421217
  42125b:	pushf  
  42125c:	add    al,dl
  42125e:	aas    
  42125f:	pop    es
  421260:	xchg   esi,eax
  421261:	cmp    eax,0x2ac14daa
  421266:	in     eax,0x3e
  421268:	aas    
  421269:	cs aad 0x67
  42126c:	add    eax,0x3ba2e8f1
  421271:	jbe    0x42124c
  421273:	cli    
  421274:	xchg   esp,eax
  421275:	cld    
  421276:	das    
  421277:	ins    BYTE PTR es:[edi],dx
  421278:	call   0x31c29c05
  42127d:	(bad)  
  42127e:	(bad)  
  42127f:	mov    edi,0x97757211
  421284:	mov    dh,0x8
  421286:	ins    DWORD PTR es:[edi],dx
  421287:	mov    eax,0xb670af0f
  42128c:	sub    BYTE PTR [eax+0x3b],cl
  42128f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421290:	mov    dl,0x68
  421292:	inc    esp
  421293:	xor    DWORD PTR [ecx-0x68],eax
  421296:	inc    eax
  421297:	add    ch,BYTE PTR [edx]
  421299:	repnz inc edi
  42129b:	aam    0xb4
  42129d:	adc    al,0xe2
  42129f:	inc    edi
  4212a0:	(bad)  
  4212a2:	pop    es
  4212a3:	sub    DWORD PTR fs:[esi],ebx
  4212a6:	sbb    BYTE PTR [eax],bh
  4212a8:	or     dl,BYTE PTR [edi+0x75d62683]
  4212ae:	mov    esp,0x57559fe0
  4212b3:	mov    ds:0x813c2464,eax
  4212b8:	call   0xaa46e69d
  4212bd:	adc    edi,ecx
  4212bf:	pushf  
  4212c0:	ins    DWORD PTR es:[edi],dx
  4212c1:	sbb    al,dh
  4212c3:	inc    esi
  4212c4:	ret    0x384b
  4212c7:	jp     0x421318
  4212c9:	call   0x74c73cf6
  4212ce:	sbb    al,dh
  4212d0:	pop    ebp
  4212d1:	add    edi,esp
  4212d3:	mov    ecx,0x5dee5992
  4212d8:	xchg   edx,eax
  4212d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212da:	aaa    
  4212db:	sub    dh,BYTE PTR [esi+ebx*1-0x2720641d]
  4212e2:	cmp    ecx,ebx
  4212e4:	cmp    bl,dh
  4212e6:	call   0x7209:0x8a53d0ca
  4212ed:	push   esi
  4212ee:	cmp    al,0x1c
  4212f0:	out    0xf,al
  4212f2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4212f4:	ins    BYTE PTR es:[edi],dx
  4212f5:	mov    DWORD PTR [esp+edi*8+0x1aaa464e],eax
  4212fc:	into   
  4212fd:	ret    
  4212fe:	mov    esi,0xe33a7a13
  421303:	xchg   ecx,eax
  421304:	jle    0x421300
  421306:	xchg   edi,eax
  421307:	add    eax,0x727d8138
  42130c:	lea    esi,[eax-0x13]
  42130f:	xchg   esi,eax
  421310:	fs mov edx,0x5fc1d6ad
  421316:	jp     0x421303
  421318:	or     al,BYTE PTR [ecx]
  42131a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131b:	push   ss
  42131c:	out    dx,al
  42131d:	push   ss
  42131e:	dec    esi
  42131f:	arpl   WORD PTR ds:0x6f9abf0f,bx
  421325:	push   ebx
  421326:	push   ds
  421327:	push   ebx
  421328:	es leave 
  42132a:	icebp  
  42132b:	sbb    BYTE PTR [edi-0xf],dh
  42132e:	push   ecx
  42132f:	rcl    BYTE PTR ds:0x69101258,cl
  421335:	or     BYTE PTR [ebx+0x35624179],bh
  42133b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133c:	scas   al,BYTE PTR es:[edi]
  42133d:	les    ecx,FWORD PTR [ecx]
  42133f:	push   ecx
  421340:	cmp    BYTE PTR [esi-0x2a],0xb7
  421344:	(bad)  
  421345:	loope  0x4212e1
  421347:	jo     0x4212d6
  421349:	xchg   BYTE PTR [esi+eax*2-0x2c],dh
  42134d:	or     DWORD PTR ds:0x91c4fd7b,eax
  421353:	push   eax
  421354:	stos   BYTE PTR es:[edi],al
  421355:	or     edi,ebp
  421357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421358:	add    ebp,DWORD PTR [ecx+0xd5f3912]
  42135e:	push   ebx
  42135f:	inc    ebp
  421360:	mov    ecx,0x29faf6cf
  421365:	dec    edi
  421366:	jmp    0x78e1fc2b
  42136b:	mov    esp,0x26dfd0e9
  421370:	mov    edx,0xc4804473
  421375:	mov    ds:0x8c2d2d79,al
  42137a:	les    ebp,FWORD PTR [ecx+0x57]
  42137d:	imul   edx,ecx,0xffffffb8
  421380:	pop    esi
  421381:	add    al,0x90
  421383:	pop    es
  421384:	sub    ebx,ecx
  421386:	gs bswap ebx
  421389:	xchg   esi,ecx
  42138b:	pop    ss
  42138c:	sahf   
  42138d:	pop    esi
  42138e:	fiadd  WORD PTR [bp+di]
  421391:	test   al,0x44
  421393:	add    bh,bl
  421395:	cmp    eax,edi
  421397:	ror    ch,cl
  421399:	adc    ecx,esi
  42139b:	dec    ebx
  42139c:	pop    edi
  42139d:	dec    eax
  42139e:	inc    eax
  42139f:	aad    0x90
  4213a1:	xlat   BYTE PTR ds:[ebx]
  4213a2:	rcr    BYTE PTR [ebx+0x4bf1a021],0x7d
  4213a9:	add    al,ah
  4213ab:	hlt    
  4213ac:	pop    ebp
  4213ad:	jecxz  0x421363
  4213af:	dec    edx
  4213b0:	cmp    ecx,DWORD PTR [eax-0xf595ed2]
  4213b6:	iret   
  4213b7:	es push esp
  4213b9:	sub    eax,DWORD PTR [eax]
  4213bb:	rcl    al,0x3
  4213be:	repnz cmp al,0x62
  4213c1:	jno    0x421431
  4213c3:	std    
  4213c4:	retf   
  4213c5:	out    0xe1,eax
  4213c7:	neg    edx
  4213c9:	inc    edi
  4213ca:	icebp  
  4213cb:	xchg   DWORD PTR [eax+0x5dac97c2],esp
  4213d1:	push   0x47
  4213d3:	xchg   esi,eax
  4213d4:	adc    eax,0x6260f03d
  4213d9:	in     eax,0xc7
  4213db:	xchg   esp,eax
  4213dc:	mov    bh,0xe
  4213de:	and    eax,eax
  4213e0:	and    ch,cl
  4213e2:	rcl    DWORD PTR [ebp+0xec0c37e],0xbc
  4213e9:	sbb    dh,BYTE PTR [eax-0x49bac3c1]
  4213ef:	lahf   
  4213f0:	xor    ecx,DWORD PTR [edi-0x13a0f624]
  4213f6:	scas   eax,DWORD PTR es:[edi]
  4213f7:	fld    QWORD PTR [edi-0x42927854]
  4213fd:	(bad)  
  4213ff:	out    dx,al
  421400:	adc    al,bl
  421402:	aam    0x5f
  421404:	mov    edx,0xb852bd8c
  421409:	lds    ebx,FWORD PTR [eax-0x72]
  42140c:	call   0x8266:0xdcf21bc8
  421413:	jle    0x4213ed
  421415:	sbb    DWORD PTR [ebx+0x1b],edx
  421418:	pop    esi
  421419:	mov    DWORD PTR [ebp-0x72bfb793],ebp
  42141f:	in     eax,dx
  421420:	int    0x20
  421422:	in     al,dx
  421423:	lods   al,BYTE PTR fs:[esi]
  421425:	dec    esp
  421426:	mov    esp,0x25fc3417
  42142b:	cmp    al,0x1b
  42142d:	pop    edx
  42142e:	push   0x3e
  421430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421431:	fsub   QWORD PTR [eax+0x64098c2e]
  421437:	mov    dh,0x2e
  421439:	add    DWORD PTR [edx-0x29],esi
  42143c:	fld    DWORD PTR [esi-0x21]
  42143f:	jp     0x421482
  421441:	dec    edx
  421442:	cmp    al,0x17
  421444:	adc    al,0x9
  421446:	call   0x6889:0x2ec05d0b
  42144d:	jb     0x4213e6
  42144f:	enter  0xd089,0x8e
  421453:	test   al,bl
  421455:	pop    ecx
  421456:	sub    BYTE PTR [eax-0x52],bh
  421459:	dec    edi
  42145a:	mov    ecx,0x62839846
  42145f:	jmp    0x421400
  421461:	push   ebp
  421462:	jne    0x421433
  421464:	not    BYTE PTR [ebx-0x80]
  421467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421468:	mov    eax,ss:0x299bb8f9
  42146e:	or     eax,0x954d2c5
  421473:	dec    ebx
  421474:	add    DWORD PTR [ecx-0x63ced880],esp
  42147a:	test   eax,0x7edc771b
  42147f:	push   ss
  421480:	jbe    0x421453
  421482:	(bad)  
  421483:	push   ebp
  421484:	dec    eax
  421485:	mov    al,0x5d
  421487:	cmp    DWORD PTR [edx+0x2a],ebp
  42148a:	fcmovb st,st(0)
  42148c:	ret    0x3af
  42148f:	out    0xc8,eax
  421491:	sti    
  421492:	pop    es
  421493:	sbb    al,BYTE PTR [eax]
	...
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp+0x4e279950]
  4214ae:	jecxz  0x421440
  4214b0:	mov    dl,0x1a
  4214b2:	mov    es,WORD PTR [ecx]
  4214b4:	add    BYTE PTR [ebx-0x44fffffd],ch
  4214ba:	pop    es
  4214bb:	xor    DWORD PTR [eax],esp
  4214bd:	and    eax,0xf5d17593
  4214c2:	push   eax
  4214c3:	mov    DWORD PTR [edi+0x23],edx
  4214c6:	lds    ebp,FWORD PTR [ebx]
  4214c8:	mov    ecx,0xf812662e
  4214cd:	dec    edi
  4214ce:	call   0x9f27:0xca650945
  4214d5:	pop    ebp
  4214d6:	jbe    0x421533
  4214d8:	in     al,dx
  4214d9:	out    0x8c,eax
  4214db:	lods   eax,DWORD PTR ds:[esi]
  4214dc:	adc    BYTE PTR fs:0x5b556335,ch
  4214e3:	jno    0x42152a
  4214e5:	dec    eax
  4214e6:	aam    0xfe
  4214e8:	add    eax,0x14c7fe4e
  4214ed:	sbb    dh,BYTE PTR [edi]
  4214ef:	mov    cl,0xda
  4214f1:	jbe    0x4214a0
  4214f3:	js     0x4214b9
  4214f5:	jecxz  0x421556
  4214f7:	out    0xf8,eax
  4214f9:	mov    dl,0x8d
  4214fb:	(bad)  [ebp+0x77]
  4214fe:	cld    
  4214ff:	push   esi
  421500:	jecxz  0x4214d0
  421502:	dec    ebp
  421503:	mov    ah,0xb0
  421505:	dec    esp
  421506:	ret    
  421507:	(bad)  
  421508:	jmp    0x4214ed
  42150a:	add    BYTE PTR [esp+ecx*8-0x5b743e30],ah
  421511:	aam    0x54
  421513:	mov    ecx,0x1d13cfb8
  421518:	lods   eax,DWORD PTR ds:[esi]
  421519:	pop    ds
  42151a:	retf   
  42151b:	(bad)  
  42151c:	fcmovb st,st(1)
  42151e:	js     0x4214aa
  421520:	aas    
  421521:	cs mov edx,0xa09286b9
  421527:	fdivr  st(0),st
  421529:	retf   0xf1d6
  42152c:	dec    edi
  42152d:	fild   DWORD PTR [eax+0x5f5200de]
  421533:	ss pop eax
  421535:	imul   ebp,ecx,0x49
  421538:	mov    ebx,0xaff77aa4
  42153d:	jb     0x421549
  42153f:	ret    0xf3b2
  421542:	mov    cl,0xdd
  421544:	stos   DWORD PTR es:[edi],eax
  421545:	das    
  421546:	dec    ebp
  421547:	cmp    dh,ah
  421549:	dec    ebx
  42154a:	mov    WORD PTR [ecx-0x14cc97e7],ss
  421550:	mov    al,0xf
  421552:	pop    ds
  421553:	push   ebx
  421554:	cld    
  421555:	jne    0x421586
  421557:	mov    dh,0xd1
  421559:	mov    ebx,0x68295340
  42155e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42155f:	cdq    
  421560:	repz (bad) 
  421563:	loope  0x421578
  421565:	xchg   ebp,eax
  421566:	adc    ebp,DWORD PTR [edx]
  421568:	xor    al,0x4d
  42156a:	inc    ebp
  42156b:	lahf   
  42156c:	ror    DWORD PTR [ebx+0x52],cl
  42156f:	leave  
  421570:	loopne 0x42150f
  421572:	dec    ebx
  421573:	inc    eax
  421574:	xchg   ebx,eax
  421575:	pop    esi
  421576:	cmp    eax,0xa5cded3c
  42157b:	fistp  DWORD PTR [edx-0x5f831502]
  421581:	cmp    DWORD PTR [ecx+0x5b],0x9a0f1f41
  421588:	sbb    BYTE PTR [eax+0x10],bh
  42158b:	inc    esp
  42158c:	jne    0x4215d0
  42158e:	ja     0x421511
  421590:	mov    ds:0xb0f1d77b,eax
  421596:	and    eax,0xdd2f25c1
  42159b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42159c:	out    dx,eax
  42159d:	out    0xc,eax
  42159f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215a0:	sahf   
  4215a1:	inc    edi
  4215a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a3:	(bad)  
  4215a4:	push   ds
  4215a5:	xchg   esi,eax
  4215a6:	xor    eax,DWORD PTR [edi]
  4215a8:	out    0xcf,eax
  4215aa:	mov    bh,0x1a
  4215ac:	adc    al,al
  4215ae:	rcr    bh,1
  4215b0:	stos   BYTE PTR es:[edi],al
  4215b1:	std    
  4215b2:	test   esi,edx
  4215b4:	jmp    0x4c622e1e
  4215b9:	or     eax,0x7525d700
  4215be:	ret    0x2cb1
  4215c1:	out    0xaf,al
  4215c3:	cmp    dl,BYTE PTR [eax-0x75]
  4215c6:	add    al,0xd1
  4215c8:	push   0x6cb7c0b0
  4215cd:	xor    eax,0x43283f2b
  4215d2:	mov    BYTE PTR [ebp+0x1],dh
  4215d5:	xchg   DWORD PTR [edi-0x54cfe232],esp
  4215db:	call   DWORD PTR [edi+edx*8-0x4ee1cea9]
  4215e2:	dec    esi
  4215e3:	lahf   
  4215e4:	ret    0x3a13
  4215e7:	add    eax,0x2dbf28ef
  4215ec:	lea    dx,[ebx+0x78]
  4215f0:	mov    al,0xf5
  4215f2:	loopne 0x421660
  4215f4:	ja     0x4215eb
  4215f6:	mov    esi,0xf82984a9
  4215fb:	add    al,0xb1
  4215fd:	mov    bl,0x20
  4215ff:	ins    BYTE PTR es:[edi],dx
  421600:	in     eax,0x43
  421602:	jns    0x4215a4
  421604:	std    
  421605:	mov    dl,0xf3
  421607:	xor    dl,BYTE PTR [edi+0x14]
  42160a:	xchg   edi,eax
  42160b:	xor    edi,DWORD PTR [ebp-0x37]
  42160e:	ficom  DWORD PTR [ebx+0x78ebce84]
  421614:	icebp  
  421615:	add    al,BYTE PTR cs:[ebx-0x69]
  421619:	sub    ebx,DWORD PTR ds:[esi-0x2a]
  42161d:	inc    edi
  42161e:	jecxz  0x421618
  421620:	addr16 imul eax,ebp,0x29168d5d
  421627:	or     al,0xdd
  421629:	push   edx
  42162a:	cdq    
  42162b:	sbb    bh,ah
  42162d:	ret    0x3f84
  421630:	xchg   esi,eax
  421631:	mov    esi,0xc212245c
  421637:	ror    bh,1
  421639:	mov    ch,0xe3
  42163b:	popf   
  42163c:	pop    ebp
  42163d:	daa    
  42163e:	lds    ecx,FWORD PTR [edi-0x5dd1ced5]
  421644:	or     al,0xdb
  421646:	fadd   QWORD PTR [esi-0x6d]
  421649:	fidiv  DWORD PTR [ebx+0x49]
  42164c:	sbb    DWORD PTR ds:0x25377ad3,ebp
  421652:	inc    ecx
  421653:	dec    ecx
  421654:	sbb    ch,BYTE PTR ss:[ebp+eax*1-0x7668cac2]
  42165c:	jge    0x42166b
  42165e:	mov    dl,0x4e
  421660:	and    BYTE PTR [esi],dl
  421662:	add    dl,BYTE PTR [edx+0x48]
  421665:	and    DWORD PTR [edx+0x1a],ecx
  421668:	das    
  421669:	mul    DWORD PTR [ebp+0x6c]
  42166c:	xchg   ebx,eax
  42166d:	sub    ch,al
  42166f:	pusha  
  421670:	imul   ebx,DWORD PTR [ecx],0xffffffcf
  421673:	mov    WORD PTR [edx+0x35],es
  421676:	pop    esi
  421677:	int    0x43
  421679:	jecxz  0x421630
  42167b:	fdivr  QWORD PTR [ebx]
  42167d:	dec    ecx
  42167e:	retf   
  42167f:	test   DWORD PTR [esi+0x42],0xf54d4545
  421686:	fadd   QWORD PTR [eax*4+0xb95c30f]
  42168d:	mov    ch,0x97
  42168f:	jmp    0x6c7d49dc
  421694:	test   BYTE PTR [ebx-0x65],bh
  421697:	cmp    eax,0x20a26968
  42169c:	xchg   ecx,eax
  42169d:	fstp   DWORD PTR [ebp-0x53c4a417]
  4216a3:	lock retf 
  4216a5:	leave  
  4216a6:	add    al,0xb5
  4216a8:	push   ebx
  4216a9:	int    0x62
  4216ab:	xor    BYTE PTR [eax-0x10],bl
  4216ae:	bound  ebp,QWORD PTR [ecx]
  4216b0:	sti    
  4216b1:	ficomp DWORD PTR [esi-0x71cf44b8]
  4216b7:	mov    dl,0x77
  4216b9:	cmp    esi,DWORD PTR [ecx-0xf]
  4216bc:	adc    cl,BYTE PTR [eax-0x5e]
  4216bf:	xor    al,0xd7
  4216c1:	and    DWORD PTR [esi],eax
  4216c3:	mov    ah,0x24
  4216c5:	ficomp DWORD PTR [edi+ebx*8-0x55]
  4216c9:	into   
  4216ca:	dec    edx
  4216cb:	jmp    0xb295:0x80f2d2d1
  4216d2:	adc    edi,DWORD PTR [edx]
  4216d4:	pop    ss
  4216d5:	xchg   DWORD PTR ds:0x3bb1d977,edi
  4216db:	or     al,ch
  4216dd:	cmc    
  4216de:	or     esi,0xd5cdc5bb
  4216e4:	dec    eax
  4216e5:	ins    BYTE PTR es:[edi],dx
  4216e6:	pop    esp
  4216e7:	popa   
  4216e8:	mov    eax,ds:0x8fc56a3d
  4216ed:	imul   edx,DWORD PTR [edi],0x64
  4216f0:	shl    edx,0x3e
  4216f3:	cmp    eax,0xa049c9d6
  4216f8:	les    ebp,FWORD PTR [ebx-0x46cbf2a3]
  4216fe:	and    esp,DWORD PTR [esi+0x4f78ff59]
  421704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421705:	out    dx,eax
  421706:	mov    ss,ebx
  421708:	sub    BYTE PTR ds:0xbc7381e7,bh
  42170e:	lds    esi,FWORD PTR [ebp+0x6476bfb1]
  421714:	push   ecx
  421715:	js     0x421722
  421717:	push   eax
  421718:	cwde   
  421719:	arpl   WORD PTR [ebx-0x3505e42e],di
  42171f:	mov    ah,0xb3
  421721:	sub    BYTE PTR [ebp+0x6a5fab7c],al
  421727:	inc    esi
  421728:	xlat   BYTE PTR ds:[ebx]
  421729:	outs   dx,BYTE PTR ds:[esi]
  42172a:	lea    edx,[esp+ecx*8]
  42172d:	nop
  42172e:	sbb    edx,ebp
  421730:	std    
  421731:	jge    0x421712
  421733:	imul   DWORD PTR [eax+0x5d]
  421736:	push   0xac891a28
  42173b:	fldcw  WORD PTR [edx-0x6f]
  42173e:	and    DWORD PTR [ebp+0x6d4e01d2],0xffffff83
  421745:	jb     0x42179d
  421747:	inc    esi
  421748:	mov    ?,WORD PTR [eax]
  42174a:	push   0xffffffa1
  42174c:	loop   0x4217a6
  42174e:	bound  eax,QWORD PTR [edx+0x17]
  421751:	dec    ecx
  421752:	stc    
  421753:	aas    
  421754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421755:	sti    
  421756:	frstor [eax-0x3a]
  421759:	and    al,0xc5
  42175b:	add    al,BYTE PTR [ebp+ecx*1-0x13f50634]
  421762:	sbb    DWORD PTR [esi],ebp
  421764:	(bad)  
  421765:	dec    edi
  421766:	ror    BYTE PTR [eax+0xf1516c2],1
  42176c:	mov    edi,0x2c6776df
  421771:	(bad)  
  421772:	mov    esi,0x8cb1f951
  421777:	sub    BYTE PTR [eax],cl
  421779:	push   cs
  42177a:	cdq    
  42177b:	mov    ecx,0x2bc65824
  421780:	inc    ebx
  421781:	xchg   ecx,eax
  421782:	xor    edi,DWORD PTR [edi+edx*1]
  421785:	jg     0x4217d9
  421787:	and    ecx,DWORD PTR [edi-0x77647a5f]
  42178d:	lea    esp,[esi+0x5a97f230]
  421793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421794:	rcr    DWORD PTR [bx+di],0x4b
  421798:	rcr    DWORD PTR [edx+eax*1],0x1a
  42179c:	or     al,0x32
  42179e:	and    ecx,DWORD PTR [esi]
  4217a0:	cmp    edi,ebx
  4217a2:	(bad)
  4217a5:	xchg   ebp,eax
  4217a6:	loopne 0x4217a7
  4217a8:	lds    edx,FWORD PTR [esi+0x53]
  4217ab:	xchg   ecx,eax
  4217ac:	adc    al,0xed
  4217ae:	add    al,0x5f
  4217b0:	jno    0x421790
  4217b2:	xor    al,0x3b
  4217b4:	mov    edi,0x16b03f37
  4217b9:	mov    esi,0xf015537f
  4217be:	pop    ebx
  4217bf:	sbb    BYTE PTR [edx],cl
  4217c1:	xor    eax,edx
  4217c3:	scas   al,BYTE PTR es:[edi]
  4217c4:	jecxz  0x42174c
  4217c6:	xor    ecx,DWORD PTR ds:0xf4eeed51
  4217cc:	into   
  4217cd:	mov    eax,ds:0x38d2d584
  4217d2:	mov    eax,0x7c203c46
  4217d7:	popf   
  4217d8:	call   0xff06d6d3
  4217dd:	xor    al,0x55
  4217df:	ss or  al,0x42
  4217e2:	test   eax,0x1c7f3642
  4217e7:	xchg   esp,eax
  4217e8:	mov    ch,0x1b
  4217ea:	xor    DWORD PTR [edx+esi*1],eax
  4217ed:	daa    
  4217ee:	retf   0x671b
  4217f1:	mov    edx,0x1c1fd06b
  4217f6:	in     eax,dx
  4217f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f8:	mov    dl,ch
  4217fa:	iret   
  4217fb:	in     al,dx
  4217fc:	jmp    0x421872
  4217fe:	pop    edx
  4217ff:	pop    ecx
  421800:	imul   ebp,ebx,0x4a5d09c0
  421806:	add    ah,0x48
  421809:	add    ebp,esp
  42180b:	push   ebp
  42180c:	xor    eax,0x22
  42180f:	push   ebp
  421810:	sub    al,0x4f
  421812:	leave  
  421813:	sti    
  421814:	js     0x421868
  421816:	aad    0x44
  421818:	pusha  
  421819:	mov    eax,0x1412d276
  42181e:	je     0x42182e
  421820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421821:	cmp    esp,DWORD PTR [esi-0x6201d9e3]
  421827:	xor    DWORD PTR [esi],esi
  421829:	xor    BYTE PTR [ebx-0x16],bh
  42182c:	mov    al,0x31
  42182e:	imul   ecx,DWORD PTR [esi-0x77a8366f],0xffffff91
  421835:	push   ss
  421836:	mov    al,0xd8
  421838:	lea    ecx,[esi+edx*1-0x9]
  42183c:	xchg   edx,eax
  42183d:	imul   ecx,DWORD PTR [edi+0xb17c02b],0x68e87b70
  421847:	lds    esi,FWORD PTR [edi]
  421849:	xchg   esp,eax
  42184a:	xchg   edi,eax
  42184b:	stc    
  42184c:	popf   
  42184d:	ret    0xe3df
  421850:	jg     0x421885
  421852:	fild   WORD PTR [esp+edx*1]
  421855:	fwait
  421856:	xor    al,0xd6
  421858:	mov    DWORD PTR gs:[esi-0x73],ecx
  42185c:	mov    edx,0x6085cfb0
  421861:	and    al,0xce
  421863:	mov    eax,DWORD PTR [eax]
	...
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [ebp-0x3adb5fac],esi
  421882:	xchg   ecx,eax
  421883:	add    DWORD PTR [eax],eax
  421885:	stos   DWORD PTR es:[edi],eax
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR [edi+0x68384b15],al
  42188e:	inc    edi
  42188f:	jmp    0x421834
  421891:	fdivp  st(4),st
  421893:	xlat   BYTE PTR ds:[ebx]
  421894:	dec    edx
  421895:	cmp    esp,DWORD PTR [ecx-0x48]
  421898:	sahf   
  421899:	adc    ebp,ebx
  42189b:	push   ebx
  42189c:	frstor [eax+0x4feee992]
  4218a2:	ja     0x4218b6
  4218a4:	mov    ebp,0xb3aea5f3
  4218a9:	jno    0x4218d2
  4218ab:	sti    
  4218ac:	loopne 0x421852
  4218ae:	cmp    DWORD PTR [ecx+0x6757c9dd],ebp
  4218b4:	nop
  4218b5:	fidivr WORD PTR [ebx]
  4218b7:	ret    0xf9cf
  4218ba:	jmp    0x421928
  4218bc:	dec    ecx
  4218bd:	jne    0x4218b3
  4218bf:	xchg   esp,eax
  4218c0:	push   DWORD PTR [eax+0x33]
  4218c3:	sub    esi,esp
  4218c5:	xchg   edx,eax
  4218c6:	outs   dx,BYTE PTR ds:[esi]
  4218c7:	mov    ah,0x70
  4218c9:	pop    ebx
  4218ca:	add    eax,0x20bc0e90
  4218cf:	push   esp
  4218d0:	mov    ds:0xa688ec31,eax
  4218d5:	inc    edx
  4218d6:	mov    ds:0xdcd1772c,eax
  4218db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218dc:	add    eax,0xb01b832d
  4218e1:	mov    ecx,0xfede16c4
  4218e6:	sub    DWORD PTR [eax-0x617104d0],esp
  4218ec:	call   0xa58117b2
  4218f1:	jns    0x421884
  4218f3:	adc    cl,ch
  4218f5:	sub    BYTE PTR [ebp-0x4c],ah
  4218f8:	push   0x65
  4218fa:	sbb    dl,dl
  4218fc:	push   cs
  4218fd:	(bad)  
  4218fe:	adc    eax,0x31f364f
  421903:	jle    0x421888
  421905:	mov    ds:0xac11fe42,eax
  42190a:	mov    eax,0xa82d7b41
  42190f:	mov    al,ds:0x5d9b4fe1
  421914:	push   ecx
  421915:	test   dh,ah
  421917:	data16 mov dh,0xf
  42191a:	push   esp
  42191b:	add    BYTE PTR [esi],0x16
  42191e:	mov    BYTE PTR [eax+0x4a],bl
  421921:	cdq    
  421922:	sbb    al,0xe0
  421924:	dec    esi
  421925:	test   ebx,edx
  421927:	inc    ecx
  421928:	and    al,0x30
  42192a:	dec    eax
  42192b:	les    esi,FWORD PTR [esp+ebp*4+0x69836da5]
  421932:	imul   ebx,DWORD PTR [ecx+0x3eef8bde],0x5f6e942b
  42193c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42193d:	push   0x55d46f0f
  421942:	xor    al,0x54
  421944:	stos   BYTE PTR es:[edi],al
  421945:	xchg   DWORD PTR [edx-0x36d5e393],esi
  42194b:	mov    ebx,0x11062d50
  421950:	mov    bl,0x71
  421952:	add    BYTE PTR [edx+0x1d],al
  421955:	mov    edx,edx
  421957:	cmc    
  421958:	scas   eax,DWORD PTR es:[edi]
  421959:	std    
  42195a:	mov    edx,DWORD PTR ds:0xcd586a1d
  421960:	inc    ebp
  421961:	dec    eax
  421962:	mov    dl,0x4b
  421964:	mov    eax,ds:0x7af11b7
  421969:	cmc    
  42196a:	out    0xaf,eax
  42196c:	popa   
  42196d:	mov    ecx,0xe9cef149
  421972:	stos   BYTE PTR es:[edi],al
  421973:	jge    0x4219ae
  421975:	push   ss
  421976:	lock lds ebx,FWORD PTR [eax+0x62]
  42197a:	sbb    DWORD PTR [ebx-0x7e],0xbcc51e0a
  421981:	cmp    al,0xe1
  421983:	xor    ch,BYTE PTR [ebx+0x5be797da]
  421989:	mov    bh,0x6
  42198b:	mov    eax,0x97b0784a
  421990:	adc    BYTE PTR [ecx-0x27366d26],ah
  421996:	sub    eax,0xb364e44e
  42199b:	push   ecx
  42199c:	mov    bl,0x50
  42199e:	mov    ecx,0x75e63885
  4219a3:	push   0x634a4a1b
  4219a8:	fstp   TBYTE PTR [edx]
  4219aa:	xchg   esp,eax
  4219ab:	inc    edi
  4219ac:	or     ebx,eax
  4219ae:	lods   eax,DWORD PTR ds:[esi]
  4219af:	xchg   ecx,eax
  4219b0:	icebp  
  4219b1:	ja     0x4219d8
  4219b3:	xor    eax,0xa7c4dac6
  4219b8:	xchg   BYTE PTR [eax-0x647921de],al
  4219be:	das    
  4219bf:	fdivrp st(1),st
  4219c1:	mov    al,0xb5
  4219c3:	nop    esi
  4219c6:	outs   dx,BYTE PTR ds:[esi]
  4219c7:	jbe    0x42197b
  4219c9:	in     eax,dx
  4219ca:	clc    
  4219cb:	ret    
  4219cc:	sbb    al,0x59
  4219ce:	mov    ds:0xd67dd990,eax
  4219d3:	dec    eax
  4219d4:	or     al,bl
  4219d6:	mov    DWORD PTR [edi+0x16],ebx
  4219d9:	jl     0x421a06
  4219db:	mov    al,ds:0x6a758e8f
  4219e0:	pop    eax
  4219e1:	lods   al,BYTE PTR ds:[esi]
  4219e2:	adc    eax,0x55af0805
  4219e7:	pop    ebx
  4219e8:	mov    edx,0xb62fffa1
  4219ed:	sub    DWORD PTR [eax-0x356a5e00],edx
  4219f3:	adc    al,BYTE PTR [ebp+eax*4-0x4d]
  4219f7:	adc    DWORD PTR [ecx-0x647aebd2],esp
  4219fd:	xchg   esp,eax
  4219fe:	fcom   DWORD PTR [ecx+0x163edce0]
  421a04:	mov    bl,0x86
  421a06:	fchs   
  421a08:	sysexit 
  421a0a:	mov    dl,0x35
  421a0c:	sysenter 
  421a0e:	inc    ecx
  421a0f:	test   BYTE PTR [ecx],ch
  421a11:	lods   eax,DWORD PTR ds:[esi]
  421a12:	sub    eax,0x666e9409
  421a17:	pop    ebx
  421a18:	ror    BYTE PTR [ebx-0x27981260],0xfb
  421a1f:	dec    ebp
  421a20:	in     eax,dx
  421a21:	mov    edx,esi
  421a23:	inc    ebx
  421a24:	or     ebp,DWORD PTR [edi]
  421a26:	(bad)  
  421a27:	inc    DWORD PTR [ebp+0x5ad1a717]
  421a2d:	sub    esi,DWORD PTR [esi+0x9b9646a]
  421a33:	mov    eax,0x22688568
  421a38:	pop    edx
  421a39:	ja     0x421a97
  421a3b:	pop    es
  421a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a3d:	clc    
  421a3e:	cmc    
  421a3f:	cmp    al,0x3c
  421a41:	jbe    0x421a17
  421a43:	jb     0x421ac3
  421a45:	pop    ds
  421a46:	cmp    edi,esp
  421a48:	inc    DWORD PTR [edi]
  421a4a:	fdivrp st(0),st
  421a4c:	push   ebx
  421a4d:	aam    0x40
  421a4f:	mov    BYTE PTR [ebx+edx*8+0xd7c4155],cl
  421a56:	push   0xbb6f744c
  421a5b:	mul    eax
  421a5d:	dec    esp
  421a5e:	push   ebp
  421a5f:	pop    edi
  421a60:	pop    edx
  421a61:	push   cs
  421a62:	mov    edi,DWORD PTR [ebx-0x50]
  421a65:	mov    edx,0x3d4742ae
  421a6a:	aas    
  421a6b:	cmp    DWORD PTR [edx+0x5c],ebx
  421a6e:	leave  
  421a6f:	mov    ah,0xb8
  421a71:	pop    ds
  421a72:	sub    bl,BYTE PTR [edi+eax*1-0x73]
  421a76:	mov    edx,0x5c59763e
  421a7b:	lods   al,BYTE PTR ds:[esi]
  421a7c:	aam    0xf8
  421a7e:	sub    eax,0xf3f01ccb
  421a83:	das    
  421a84:	call   0x58353b03
  421a89:	loop   0x421a8f
  421a8b:	cmp    cl,dh
  421a8d:	mov    ch,0xf3
  421a8f:	mov    dh,0x2a
  421a91:	mov    ah,0x6d
  421a93:	mov    bh,0x30
  421a95:	(bad)  
  421a97:	jb     0x421a29
  421a99:	cmp    eax,0xdf3aa60d
  421a9e:	test   al,0x73
  421aa0:	fild   QWORD PTR [ecx+0x65]
  421aa3:	or     eax,0x5693ae0e
  421aa8:	mov    esi,0x83427a7c
  421aad:	addr16 retf 0x7879
  421ab1:	js     0x421ab7
  421ab3:	sub    eax,0x768eafcb
  421ab8:	test   BYTE PTR [esi+0x22],bl
  421abb:	leave  
  421abc:	daa    
  421abd:	or     al,0xa0
  421abf:	xor    DWORD PTR [ecx+0x73e72f55],0xffffffa2
  421ac6:	(bad)  [edi+0x3f18555d]
  421acc:	sub    BYTE PTR [eax+esi*4-0x63],dl
  421ad0:	enter  0x12ee,0xcd
  421ad4:	imul   edi,DWORD PTR [ebp+0x68aa4008],0x61df8903
  421ade:	mov    al,ds:0x16cd1f50
  421ae3:	pop    es
  421ae4:	sar    ebp,0x7f
  421ae7:	sub    ch,bh
  421ae9:	xchg   ebp,esi
  421aeb:	inc    eax
  421aec:	mov    esi,0x92dd8a83
  421af1:	retf   0xcfb6
  421af4:	mov    cl,0x27
  421af6:	fstp   DWORD PTR [ebx+0x64aa3bf3]
  421afc:	mov    ds:0x528bd9a6,eax
  421b01:	lods   eax,DWORD PTR ds:[esi]
  421b02:	aam    0xed
  421b04:	in     al,dx
  421b05:	lock (bad) 
  421b08:	das    
  421b09:	mov    al,0x45
  421b0b:	aad    0xfa
  421b0d:	xor    BYTE PTR [ebp+0x4fa653a9],al
  421b13:	cmovp  esi,DWORD PTR ds:0x67fce7d0
  421b1a:	loope  0x421b3c
  421b1c:	and    eax,0xbf5fcf48
  421b21:	sbb    edx,ebx
  421b23:	clc    
  421b24:	not    cl
  421b26:	fs std 
  421b28:	outs   dx,BYTE PTR ds:[esi]
  421b29:	adc    DWORD PTR [edi-0x1f],esp
  421b2c:	dec    BYTE PTR [ebx]
  421b2e:	mov    edi,DWORD PTR [edi-0x6f]
  421b31:	iret   
  421b32:	push   0xd5df83ee
  421b37:	fwait
  421b38:	jle    0x421ba4
  421b3a:	repnz sbb ah,BYTE PTR [edx-0xa49866b]
  421b41:	ret    0x9495
  421b44:	lock inc ecx
  421b46:	mov    al,0x3a
  421b48:	retf   0xd169
  421b4b:	(bad)  
  421b4c:	cmp    dl,bh
  421b4e:	adc    al,0xe6
  421b50:	dec    esi
  421b51:	mov    BYTE PTR [ecx+0x16],ah
  421b54:	and    edi,DWORD PTR [ebx+0x2e]
  421b57:	sbb    bl,BYTE PTR [eax]
  421b59:	out    0x5f,eax
  421b5b:	int3   
  421b5c:	retf   
  421b5d:	jmp    0x2fd9f62f
  421b62:	mov    al,0x6b
  421b64:	fnstenv [edx-0x65aa4310]
  421b6a:	mov    WORD PTR [esi],fs
  421b6c:	repz mov ebp,0x77cb07ee
  421b72:	xor    cl,cl
  421b74:	dec    esp
  421b75:	fsub   st(2),st
  421b77:	imul   DWORD PTR [ebx-0x118ac02a]
  421b7d:	xchg   edi,eax
  421b7e:	mov    esp,0x8ff08df3
  421b83:	push   0xfffffffe
  421b85:	mov    ds:0xbbe7bfe9,al
  421b8a:	xchg   DWORD PTR [ebx-0x500b3cb3],ebx
  421b90:	bound  ecx,QWORD PTR [eax+0x780e9189]
  421b96:	fld    QWORD PTR [ecx+0x7663393b]
  421b9c:	mov    bh,0x7f
  421b9e:	stos   DWORD PTR es:[edi],eax
  421b9f:	cdq    
  421ba0:	aaa    
  421ba1:	push   ss
  421ba2:	push   ebp
  421ba3:	cmp    al,0x5a
  421ba5:	mul    DWORD PTR [ecx-0x2078769b]
  421bab:	ins    DWORD PTR es:[edi],dx
  421bac:	push   edx
  421bad:	sbb    DWORD PTR [ebx+edi*4],edx
  421bb0:	fidivr WORD PTR [ebp+0x7a9d086a]
  421bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bb7:	sbb    eax,0x39e2aeef
  421bbc:	sub    edi,DWORD PTR ds:0x8a5ecef4
  421bc2:	mov    cl,0x31
  421bc4:	xchg   ebp,eax
  421bc5:	xchg   ebp,eax
  421bc6:	push   edi
  421bc7:	retf   0xc52a
  421bca:	in     al,dx
  421bcb:	outs   dx,DWORD PTR ds:[esi]
  421bcc:	mov    ds:0xa9703991,eax
  421bd1:	int3   
  421bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd3:	push   edi
  421bd4:	cmp    ah,BYTE PTR [ebx-0x60417d66]
  421bda:	mov    bh,0x88
  421bdc:	or     bh,ch
  421bde:	xchg   ebx,eax
  421bdf:	rcr    BYTE PTR [ecx+eiz*1-0x513a0eda],0xe7
  421be7:	stos   BYTE PTR es:[edi],al
  421be8:	jmp    0x421c46
  421bea:	mov    eax,ds:0xf9c42bc6
  421bef:	shl    DWORD PTR [edi+0x16],cl
  421bf2:	test   dl,bl
  421bf4:	dec    edx
  421bf5:	push   esi
  421bf6:	ret    0x31eb
  421bf9:	mov    ds:0x30a2de3a,eax
  421bfe:	sub    ch,BYTE PTR [ebx]
  421c00:	dec    edx
  421c01:	sbb    edx,DWORD PTR [ebx+0x4b9a940a]
  421c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c08:	test   BYTE PTR [ecx-0x1d],cl
  421c0b:	or     dl,BYTE PTR [ecx+0x11]
  421c0e:	xchg   ebx,eax
  421c0f:	jmp    0xf249:0x3004ad9c
  421c16:	fsub   st,st(4)
  421c18:	xor    DWORD PTR [esp-0x15],esi
  421c1c:	xchg   ecx,eax
  421c1d:	mov    ah,0xde
  421c1f:	stc    
  421c20:	xchg   ebx,eax
  421c21:	mov    ebx,0x5d30d912
  421c26:	xchg   edi,eax
  421c27:	mov    ds:0xde27cbd6,eax
  421c2c:	jmp    0x421c06
  421c2e:	mov    BYTE PTR cs:[esi+0xe8bda5],dl
	...
  421c41:	or     al,0xc2
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0x99971a56
  421c4e:	sbb    eax,0x9570f4e2
  421c53:	add    DWORD PTR [eax],eax
  421c55:	stos   DWORD PTR es:[edi],eax
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [edx-0x22],al
  421c5b:	jp     0x421caa
  421c5d:	jmp    0xfc53:0x315aa062
  421c64:	push   esi
  421c65:	pushf  
  421c66:	stos   DWORD PTR es:[edi],eax
  421c67:	aad    0x9f
  421c69:	push   0x70
  421c6b:	push   esi
  421c6c:	mov    ds:0xf4f9b485,eax
  421c71:	ret    
  421c72:	ret    0xb87d
  421c75:	out    dx,al
  421c76:	xor    al,BYTE PTR ds:0xda266895
  421c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c7d:	ja     0x421c3d
  421c7f:	jge    0x421cf2
  421c81:	cmp    al,0x94
  421c83:	(bad)  
  421c84:	rcl    DWORD PTR [eax],0x49
  421c87:	vpsraw xmm5,xmm2,xmm4
  421c8b:	dec    ebp
  421c8c:	call   0x501d:0xbfd3ef7c
  421c93:	sahf   
  421c94:	jne    0x421cd5
  421c96:	adc    edi,DWORD PTR [edx]
  421c98:	cmp    BYTE PTR [ebp-0x517bc9c9],0xe3
  421c9f:	dec    eax
  421ca0:	add    eax,0x240bd3bc
  421ca5:	dec    DWORD PTR [edx]
  421ca7:	dec    edi
  421ca8:	xchg   DWORD PTR [eax+0x3783305d],ecx
  421cae:	sub    DWORD PTR [edx],edx
  421cb0:	pop    edi
  421cb1:	out    dx,al
  421cb2:	gs es mov ecx,ss
  421cb6:	ja     0x421cf7
  421cb8:	icebp  
  421cb9:	add    DWORD PTR [ebx],esp
  421cbb:	adc    al,0x83
  421cbd:	(bad)  
  421cbe:	pop    es
  421cbf:	adc    DWORD PTR [ebx+0x4f51f3c3],esi
  421cc5:	push   esi
  421cc6:	pop    esp
  421cc7:	jmp    0x4b9d:0x5ace82ad
  421cce:	retf   
  421ccf:	out    dx,eax
  421cd0:	push   es
  421cd1:	mov    ch,0x6
  421cd3:	enter  0xfd6,0x1f
  421cd7:	lods   al,BYTE PTR ds:[esi]
  421cd8:	aam    0x51
  421cda:	fisttp QWORD PTR [ecx-0x51]
  421cdd:	xor    al,0x78
  421cdf:	inc    edi
  421ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce1:	arpl   WORD PTR [esp+esi*2],sp
  421ce4:	cmp    DWORD PTR [ebx-0x4d6dbfc4],ebx
  421cea:	cdq    
  421ceb:	inc    ebx
  421cec:	inc    ebp
  421ced:	and    esp,DWORD PTR [edx-0x68]
  421cf0:	mov    al,ds:0xf1992253
  421cf5:	inc    ebx
  421cf6:	xchg   edi,eax
  421cf7:	aam    0xe5
  421cf9:	inc    esi
  421cfa:	ret    
  421cfb:	push   ebx
  421cfc:	dec    ebx
  421cfd:	call   0xf7ec:0x94a44f0e
  421d04:	arpl   WORD PTR [ecx-0x65],sp
  421d07:	mov    al,0xf0
  421d09:	loopne 0x421cf3
  421d0b:	es lds eax,FWORD PTR ss:[edi+0x52]
  421d10:	mov    ah,bh
  421d12:	popf   
  421d13:	ficom  DWORD PTR [edx+0x78]
  421d16:	push   ds
  421d17:	cmc    
  421d18:	bound  eax,QWORD PTR [ebx+ebp*8-0x1a332102]
  421d1f:	leave  
  421d20:	inc    ebp
  421d21:	aad    0xf1
  421d23:	xor    eax,0x93167fa
  421d28:	js     0x421d42
  421d2a:	push   0x61
  421d2c:	(bad)  
  421d2d:	pusha  
  421d2e:	mov    ch,0x7e
  421d30:	push   ebx
  421d31:	sbb    DWORD PTR [ecx-0x11],ebp
  421d34:	sbb    ebp,DWORD PTR [edi]
  421d36:	in     eax,dx
  421d37:	cmp    DWORD PTR [ebx+0x3b],0x9acc1cd2
  421d3e:	loope  0x421d72
  421d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d41:	fisubr DWORD PTR [ebp+0x4b]
  421d44:	stos   DWORD PTR es:[edi],eax
  421d45:	pop    eax
  421d46:	sbb    DWORD PTR [edx+eiz*1],0x5f5b22c1
  421d4d:	in     al,dx
  421d4e:	imul   eax,DWORD PTR [eax+0x6b],0xf2262178
  421d55:	mov    ds:0x536d47ed,al
  421d5a:	lahf   
  421d5b:	dec    ecx
  421d5c:	shr    DWORD PTR [ebx+eax*8],1
  421d5f:	lods   eax,DWORD PTR ds:[esi]
  421d60:	cmp    al,0x79
  421d62:	data16 stc 
  421d64:	and    BYTE PTR [ebx-0x78],bh
  421d67:	pop    ds
  421d68:	sub    bl,ah
  421d6a:	add    ch,BYTE PTR [ebp-0x8897928]
  421d70:	pushfw 
  421d72:	fcom   QWORD PTR [edi]
  421d74:	inc    ecx
  421d75:	lea    edx,[edx-0x472013b4]
  421d7b:	pop    edi
  421d7c:	jae    0x421d2a
  421d7e:	cwde   
  421d7f:	and    al,0xf6
  421d81:	add    al,0x72
  421d83:	dec    ecx
  421d84:	mov    ds:0xab5b8341,eax
  421d89:	xchg   ebp,esp
  421d8b:	pop    eax
  421d8c:	test   DWORD PTR [esp+edx*8-0x32],edx
  421d90:	xchg   esp,eax
  421d91:	add    DWORD PTR [esi+0x204f3af2],ebp
  421d97:	jo     0x421d69
  421d99:	call   0xab72a99b
  421d9e:	retf   0x7cd5
  421da1:	dec    ebp
  421da2:	(bad)  
  421da3:	mov    ebx,0x1874927a
  421da8:	adc    BYTE PTR [edx],al
  421daa:	sbb    ah,BYTE PTR [ecx-0x9]
  421dad:	(bad)  
  421dae:	mov    esp,0x1dcc8a70
  421db3:	push   0x204259f9
  421db8:	add    ah,BYTE PTR [edx]
  421dba:	mov    edx,0xaf9d8cd
  421dbf:	(bad)  
  421dc0:	sub    ch,bh
  421dc2:	rcr    ah,0x49
  421dc5:	out    0x6f,eax
  421dc7:	rcl    DWORD PTR [esi+0x2e7a290a],0xb2
  421dce:	jnp    0x421dfc
  421dd0:	pop    ebx
  421dd1:	sbb    dh,BYTE PTR [esi]
  421dd3:	inc    ecx
  421dd4:	cwde   
  421dd5:	sbb    eax,0x28c9618d
  421dda:	cmp    DWORD PTR [ecx],edi
  421ddc:	inc    esi
  421ddd:	stc    
  421dde:	mov    edi,0x8b3de72e
  421de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de4:	push   0xa66aed0b
  421de9:	call   0x71b925e3
  421dee:	xchg   ebp,eax
  421def:	dec    ecx
  421df0:	xor    esi,DWORD PTR [ebx]
  421df2:	or     dh,BYTE PTR [edi]
  421df4:	inc    esi
  421df5:	jge    0x421dc0
  421df7:	xor    eax,0x849ecd87
  421dfc:	test   al,0x89
  421dfe:	call   0x6d82:0xdf0e2838
  421e05:	xchg   ebx,esi
  421e07:	sbb    BYTE PTR [edx-0x70053067],bl
  421e0d:	jecxz  0x421db5
  421e0f:	add    ecx,DWORD PTR [esi+0x47150ccf]
  421e15:	(bad)  
  421e17:	shl    BYTE PTR ds:0x3f6764dd,1
  421e1d:	loop   0x421e13
  421e1f:	cwde   
  421e20:	adc    DWORD PTR [edx-0x28],esi
  421e23:	push   0x57
  421e25:	push   ds
  421e26:	add    eax,0xf1593112
  421e2b:	lock push es
  421e2d:	xchg   ecx,eax
  421e2e:	mov    eax,0x24d255f9
  421e33:	xchg   ebx,eax
  421e34:	out    dx,al
  421e35:	pop    ds
  421e36:	xchg   edx,eax
  421e37:	out    0x83,eax
  421e39:	(bad)  
  421e3a:	mov    ds:0x4df210a1,eax
  421e3f:	sahf   
  421e40:	outs   dx,DWORD PTR ds:[esi]
  421e41:	out    0x9a,eax
  421e43:	jg     0x421e8d
  421e45:	cmp    edx,DWORD PTR [ebx]
  421e47:	std    
  421e48:	xchg   esi,eax
  421e49:	mov    esi,0x194bc27a
  421e4e:	jl     0x421e7d
  421e50:	pmuludq mm0,QWORD PTR [ebx+0x3e]
  421e54:	ins    DWORD PTR es:[edi],dx
  421e55:	mov    esi,ds
  421e57:	xor    al,0x73
  421e59:	rcr    DWORD PTR ds:0xd16d23ad,1
  421e5f:	call   0xc8837384
  421e64:	retf   0x2c3e
  421e67:	es sbb eax,0xdd5116a7
  421e6d:	popa   
  421e6e:	ret    0xba6
  421e71:	mov    cl,0x23
  421e73:	enter  0xa982,0xd6
  421e77:	mov    BYTE PTR [ebp+0x37914a73],al
  421e7d:	rol    DWORD PTR [ebx],cl
  421e7f:	out    0x83,al
  421e81:	xchg   esp,eax
  421e82:	push   esp
  421e83:	icebp  
  421e84:	adc    al,0x32
  421e86:	push   ss
  421e87:	mov    al,0xb3
  421e89:	(bad)  
  421e8a:	jmp    0x5e4886d2
  421e8f:	mov    eax,ds:0x4789dd2e
  421e94:	or     ch,ch
  421e96:	xchg   esp,eax
  421e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e98:	sub    cl,BYTE PTR [eax-0x36bdb740]
  421e9e:	jmp    0x87d1:0x2d34ae4a
  421ea5:	mov    BYTE PTR [edx-0x290ec42b],cl
  421eab:	scas   eax,DWORD PTR es:[edi]
  421eac:	pop    ebx
  421ead:	mov    ecx,0x80e387fe
  421eb2:	cmp    al,0x38
  421eb4:	jg     0x421f29
  421eb6:	push   ss
  421eb7:	xor    al,0x53
  421eb9:	mov    ecx,0x8b35b08f
  421ebe:	xor    al,0x97
  421ec0:	retf   
  421ec1:	jne    0x421e5c
  421ec3:	adc    BYTE PTR [esi-0x15],0xc5
  421ec7:	dec    edx
  421ec8:	lods   eax,DWORD PTR ds:[esi]
  421ec9:	xchg   ebx,eax
  421eca:	(bad)  
  421ecc:	std    
  421ecd:	and    ch,ch
  421ecf:	mov    dh,0x4f
  421ed1:	or     ecx,DWORD PTR [ebp+0x78b725a6]
  421ed7:	stos   DWORD PTR es:[edi],eax
  421ed8:	ror    BYTE PTR [eax],1
  421eda:	xor    eax,0x5cf994e9
  421edf:	sbb    DWORD PTR [ebx-0x55],ebx
  421ee2:	xor    dh,BYTE PTR [esi+ebx*1-0x7b5da37a]
  421ee9:	inc    edx
  421eea:	sub    DWORD PTR [edx+ecx*8],ebx
  421eed:	pop    ebx
  421eee:	adc    ch,BYTE PTR ds:0xc48e37e1
  421ef4:	jmp    0xfdce92b4
  421ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421efa:	lods   eax,DWORD PTR ds:[esi]
  421efb:	rcr    DWORD PTR [edx+eiz*1-0x3c],0x43
  421f00:	pop    ds
  421f01:	jp     0x421f15
  421f03:	(bad)  
  421f07:	gs push ds
  421f09:	lods   al,BYTE PTR ds:[esi]
  421f0a:	mov    esp,0xa25bcacb
  421f0f:	mov    ds:0xee7f517f,al
  421f14:	test   BYTE PTR [edi+ebx*4-0x2c7bfb6],0x3a
  421f1c:	int    0xb6
  421f1e:	enter  0xd830,0xc8
  421f22:	repnz outs dx,DWORD PTR ds:[esi]
  421f24:	sub    ch,BYTE PTR [ebx+esi*1]
  421f27:	pop    eax
  421f28:	push   ss
  421f29:	std    
  421f2a:	iret   
  421f2b:	jmp    0xe93deb29
  421f30:	hlt    
  421f31:	std    
  421f32:	repnz adc al,0x41
  421f35:	mov    esi,0x9c62b69d
  421f3a:	mul    DWORD PTR [bx-0x3e]
  421f3e:	mov    ebp,0xddbedd1a
  421f43:	int    0x8e
  421f45:	mov    edx,0xa3d4ee65
  421f4a:	addr16 dec esp
  421f4c:	xor    al,0xfc
  421f4e:	dec    ebp
  421f4f:	retf   0x4ade
  421f52:	(bad)
  421f55:	dec    ecx
  421f56:	jns    0x421f95
  421f58:	sbb    DWORD PTR [ebp+0x6c8d0873],ebp
  421f5e:	leave  
  421f5f:	mov    WORD PTR [ecx],?
  421f61:	iret   
  421f62:	mov    ecx,0x85e06fd3
  421f67:	je     0x421f94
  421f69:	into   
  421f6a:	push   esi
  421f6b:	lea    ebp,[ecx+ebx*8+0x14]
  421f6f:	fldl2e 
  421f71:	adc    ah,cl
  421f73:	aas    
  421f74:	imul   ebp,DWORD PTR ds:0x907a7c4,0x57
  421f7b:	mov    bl,0x95
  421f7d:	retf   
  421f7e:	fstp   st(1)
  421f80:	sub    esi,DWORD PTR [ebp-0x2e6c0f3b]
  421f86:	es enter 0x4972,0xde
  421f8b:	repnz test BYTE PTR [esi],bh
  421f8e:	sub    ecx,DWORD PTR [esi-0x2cee5ee6]
  421f94:	fsub   DWORD PTR [ecx]
  421f96:	fwait
  421f97:	jae    0x422015
  421f99:	dec    esp
  421f9a:	loopne 0x422004
  421f9c:	bound  edi,QWORD PTR [ecx+0x1d]
  421f9f:	in     al,0x5a
  421fa1:	xor    al,0x5c
  421fa3:	cmp    dh,BYTE PTR [ebx-0xadf2c60]
  421fa9:	cmp    al,0xe9
  421fab:	sbb    DWORD PTR [ebp-0x24],edi
  421fae:	jo     0x421f40
  421fb0:	mov    DWORD PTR [edx],edx
  421fb2:	and    DWORD PTR [ebp-0x7b4cb3d5],esp
  421fb8:	in     al,0xda
  421fba:	mov    cl,0xb4
  421fbc:	in     eax,0x5
  421fbe:	and    DWORD PTR [edx-0x7d],ebp
  421fc1:	int    0x31
  421fc3:	mov    ch,0x78
  421fc5:	shl    BYTE PTR [esi-0x6742a769],cl
  421fcb:	pop    edx
  421fcc:	icebp  
  421fcd:	dec    edi
  421fce:	es xchg ebx,eax
  421fd0:	sti    
  421fd1:	ret    
  421fd2:	push   eax
  421fd3:	jecxz  0x421f70
  421fd5:	fist   DWORD PTR [ecx+0x1f]
  421fd8:	js     0x421f8d
  421fda:	pop    ebp
  421fdb:	out    dx,al
  421fdc:	xchg   ebx,eax
  421fdd:	imul   DWORD PTR [ecx-0x6e]
  421fe0:	adc    cl,BYTE PTR [ebx]
  421fe2:	dec    eax
  421fe3:	in     eax,dx
  421fe4:	lock mov esi,0x90ed65cf
  421fea:	or     al,0x6
  421fec:	add    eax,0x79cf70e2
  421ff1:	or     cl,BYTE PTR [ecx]
  421ff3:	int3   
  421ff4:	daa    
  421ff5:	lds    ebx,FWORD PTR [edi]
  421ff7:	enter  0xd3b3,0x89
  421ffb:	and    eax,0xb42fa219
  422000:	inc    ebp
  422001:	jp     0x421ffb
  422003:	jle    0x422005
	...
  422011:	inc    edx
  422012:	dec    edi
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xf8fab176
  422020:	aas    
  422021:	sbb    ebx,DWORD PTR [ecx+0x3ab0001]
  422027:	add    BYTE PTR [eax],al
  422029:	js     0x422010
  42202b:	adc    BYTE PTR [ebx],0x98
  42202e:	push   edx
  42202f:	popa   
  422030:	pop    ss
  422031:	retf   
  422032:	bnd jg 0x422094
  422035:	retf   0x1036
  422038:	sbb    al,0xdc
  42203a:	jmp    0xd4b:0xcedc5b8a
  422041:	lods   al,BYTE PTR ds:[esi]
  422042:	popa   
  422043:	push   0xffffffe6
  422045:	xchg   edx,eax
  422046:	fisubr WORD PTR [ebx-0x1e]
  422049:	sbb    ecx,DWORD PTR [ecx+0x5bc391d8]
  42204f:	mov    ebx,DWORD PTR [ebx-0x258b1acf]
  422055:	jns    0x42209d
  422057:	or     edi,DWORD PTR [edx+0x2]
  42205a:	and    eax,0x929c914a
  42205f:	push   0xacbb6949
  422064:	popf   
  422065:	jge    0x4220ba
  422067:	add    DWORD PTR [ebx],eax
  422069:	lods   al,BYTE PTR ds:[esi]
  42206a:	or     ebp,ebp
  42206c:	daa    
  42206d:	aas    
  42206e:	push   es
  42206f:	ja     0x4220c5
  422071:	xchg   BYTE PTR [esi+esi*8-0x2d],al
  422075:	push   ds
  422076:	mov    ebx,0xdde84be8
  42207b:	and    esp,DWORD PTR [edi]
  42207d:	cwde   
  42207e:	lahf   
  42207f:	retf   
  422080:	(bad)  
  422082:	ret    0x6721
  422085:	lods   eax,DWORD PTR ds:[esi]
  422086:	cmp    al,0x2
  422088:	cdq    
  422089:	lea    edx,ds:0x72d3a409
  42208f:	and    ebx,DWORD PTR [ebp-0x52b018f5]
  422095:	cmc    
  422096:	js     0x42203c
  422098:	aam    0x1
  42209a:	repnz mov bl,0xf0
  42209d:	sub    esp,eax
  42209f:	mov    ds:0x2746cec6,al
  4220a4:	leave  
  4220a5:	xchg   esp,eax
  4220a6:	mov    esi,esi
  4220a8:	(bad)  
  4220aa:	mov    DWORD PTR [edi+0x55],ebx
  4220ad:	jmp    0xae4d:0xcaecffdb
  4220b4:	jne    0x422130
  4220b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b7:	out    0x18,eax
  4220b9:	call   0x114a:0xdd3b56b7
  4220c0:	ins    BYTE PTR es:[edi],dx
  4220c1:	pop    ss
  4220c2:	aaa    
  4220c3:	(bad)  
  4220c4:	cmp    ecx,esi
  4220c6:	das    
  4220c7:	adc    DWORD PTR [edi-0x87050bc],edi
  4220cd:	retf   0xf3b
  4220d0:	xchg   edx,eax
  4220d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220d2:	xor    ebp,DWORD PTR [ebp+0x71d6c1ce]
  4220d8:	push   ss
  4220d9:	mov    dh,0x8c
  4220db:	retf   0xa1a0
  4220de:	jmp    0x422103
  4220e0:	popf   
  4220e1:	ins    BYTE PTR es:[edi],dx
  4220e2:	ficomp DWORD PTR [eax-0x7a81ce82]
  4220e8:	sub    ch,ch
  4220ea:	jno    0x422141
  4220ec:	ret    0xd817
  4220ef:	adc    BYTE PTR [eax+0x3a],ch
  4220f2:	int    0x7c
  4220f4:	dec    esp
  4220f5:	(bad)  
  4220f7:	outs   dx,BYTE PTR ds:[esi]
  4220f8:	mov    esi,0x1c4bcacd
  4220fd:	arpl   di,dx
  4220ff:	ss jns 0x422175
  422102:	aaa    
  422103:	pop    ebp
  422104:	jno    0x4220ff
  422106:	add    ecx,ecx
  422108:	adc    eax,eax
  42210a:	push   cs
  42210b:	leave  
  42210c:	xchg   ebx,eax
  42210d:	mov    bh,cl
  42210f:	call   0xde23debb
  422114:	pop    esi
  422115:	or     dh,BYTE PTR [edx+ebx*8+0xcb157a9]
  42211c:	inc    eax
  42211d:	in     al,0xaf
  42211f:	mov    dl,0xc
  422121:	in     eax,0x32
  422123:	retf   0xfa6f
  422126:	test   al,0xdc
  422128:	mov    esi,0xe39be23f
  42212d:	jb     0x4221a0
  42212f:	add    esi,DWORD PTR [ebp+0x7529cd6d]
  422135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422136:	int3   
  422137:	adc    ah,bl
  422139:	in     al,dx
  42213a:	loope  0x4220d3
  42213c:	mov    al,ds:0x4d240cec
  422141:	sti    
  422142:	(bad)  
  422143:	mov    bl,0x74
  422145:	mov    eax,ds:0x32389d2a
  42214a:	stos   BYTE PTR es:[edi],al
  42214b:	mov    eax,0x74faf3b9
  422150:	cli    
  422151:	cmp    al,0x3e
  422153:	outs   dx,BYTE PTR ds:[esi]
  422154:	cld    
  422155:	mov    cl,0x1e
  422157:	push   ebp
  422158:	sbb    al,0x4
  42215a:	popf   
  42215b:	adc    ecx,DWORD PTR [esp+eiz*2-0x49eb6424]
  422162:	rol    BYTE PTR es:[bp+si+0x3d],0x79
  422168:	cmp    cl,BYTE PTR [edi-0x7613f8ce]
  42216e:	push   ebp
  42216f:	cwde   
  422170:	cmp    eax,0xc7039ec0
  422175:	bound  ebx,QWORD PTR [ebx+0x1e]
  422178:	mov    eax,0x7e895de0
  42217d:	mov    cl,ah
  42217f:	lods   al,BYTE PTR ds:[esi]
  422180:	lock pop ss
  422182:	push   ebp
  422183:	in     al,0xed
  422185:	rol    DWORD PTR [edx],0x99
  422188:	inc    esp
  422189:	mov    ebx,0x87a3af87
  42218e:	(bad)
  422192:	pop    ecx
  422193:	icebp  
  422194:	(bad)  
  422195:	mov    ebp,0xd9d59fd4
  42219a:	jmp    0x691e:0xda3465d8
  4221a1:	or     dh,BYTE PTR [ebp-0x4b]
  4221a4:	mov    eax,0x1939dbd0
  4221a9:	cmp    BYTE PTR gs:[eax+0x12],0xee
  4221ae:	pop    ebx
  4221af:	push   edi
  4221b0:	ins    DWORD PTR es:[edi],dx
  4221b1:	push   esi
  4221b2:	fadd   QWORD PTR [edx]
  4221b4:	sub    eax,DWORD PTR [esi+0x21]
  4221b7:	int3   
  4221b8:	test   DWORD PTR [edx-0x29],0x85b33676
  4221bf:	xchg   edx,eax
  4221c0:	test   DWORD PTR [edx],0x1c6513ef
  4221c6:	das    
  4221c7:	cld    
  4221c8:	ss mov bl,0x21
  4221cb:	int3   
  4221cc:	jns    0x422217
  4221ce:	mov    ah,0xf8
  4221d0:	fistp  QWORD PTR [esi-0x3e0006b2]
  4221d6:	xchg   edx,eax
  4221d7:	mov    dh,0x50
  4221d9:	daa    
  4221da:	add    al,0xb0
  4221dc:	push   ebp
  4221dd:	mov    fs,esp
  4221df:	call   DWORD PTR [esi]
  4221e1:	xchg   esi,eax
  4221e2:	je     0x422220
  4221e4:	mov    ebp,0xd25983cf
  4221e9:	adc    edi,0xf029ccd1
  4221ef:	(bad)  
  4221f0:	popa   
  4221f1:	scas   al,BYTE PTR es:[edi]
  4221f2:	(bad)  
  4221f3:	std    
  4221f4:	dec    esp
  4221f5:	or     DWORD PTR [edi+ebp*8],ecx
  4221f8:	(bad)  
  4221f9:	sbb    BYTE PTR [edi+esi*2],bl
  4221fc:	rol    DWORD PTR [di+0xa2a],1
  422201:	push   cs
  422202:	and    BYTE PTR [ecx+0x2c737e11],bh
  422208:	int3   
  422209:	cmp    eax,0x75a42211
  42220e:	push   ss
  42220f:	add    al,0x78
  422211:	sub    al,0xc2
  422213:	inc    ebx
  422214:	sub    esp,DWORD PTR [ebx+0x21]
  422217:	es xor BYTE PTR ss:[edx+0x68],dh
  42221c:	jae    0x422276
  42221e:	leave  
  42221f:	adc    al,BYTE PTR [edx-0x70]
  422222:	adc    BYTE PTR [ecx],al
  422224:	inc    edx
  422225:	push   ss
  422226:	scas   eax,DWORD PTR es:[edi]
  422227:	pusha  
  422228:	ja     0x4221e1
  42222a:	inc    esi
  42222b:	sbb    DWORD PTR [ebp+0x7e],eax
  42222e:	mov    WORD PTR [esi],?
  422230:	outs   dx,BYTE PTR ds:[esi]
  422231:	inc    edx
  422232:	daa    
  422233:	test   BYTE PTR [ebx-0x2e],bh
  422236:	mov    ah,0x1c
  422238:	lock fstp DWORD PTR [edx]
  42223b:	outs   dx,DWORD PTR ds:[esi]
  42223c:	and    esp,DWORD PTR [ecx+0x60]
  42223f:	add    al,0xff
  422241:	and    DWORD PTR [ecx],ebp
  422243:	ins    DWORD PTR es:[edi],dx
  422244:	imul   ebp,DWORD PTR cs:[edi-0x5f],0xd5304e44
  42224c:	ins    DWORD PTR es:[edi],dx
  42224d:	push   es
  42224e:	cmp    BYTE PTR [eax+0x5b313ace],ah
  422254:	in     eax,0xd8
  422256:	adc    BYTE PTR [ebp+0x24197fa1],ch
  42225c:	sbb    edi,DWORD PTR [edx+0x22]
  42225f:	add    DWORD PTR [eax+0x44],0x1b
  422263:	xchg   edi,eax
  422264:	push   eax
  422265:	cmp    eax,0x5a1038c4
  42226a:	callw  0x2815
  42226e:	fldenv [eax]
  422270:	xchg   ebp,eax
  422271:	daa    
  422272:	jbe    0x42226a
  422274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422275:	retf   
  422276:	add    edx,DWORD PTR [eax+0x3c]
  422279:	in     al,0xf6
  42227b:	pop    edx
  42227c:	neg    DWORD PTR [eax-0x2a4b122]
  422282:	bound  ebx,QWORD PTR [esi]
  422284:	popa   
  422285:	push   edi
  422286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422287:	xchg   esp,eax
  422288:	xchg   edx,eax
  422289:	in     al,dx
  42228a:	push   eax
  42228b:	nop
  42228c:	(bad)  
  42228d:	js     0x4222be
  42228f:	mov    gs,edi
  422291:	sub    al,BYTE PTR gs:[ebx+ebx*8]
  422295:	lock xchg DWORD PTR [eax+eax*8+0x405e8fcb],edx
  42229d:	int3   
  42229e:	xchg   esi,eax
  42229f:	(bad)  
  4222a0:	rol    DWORD PTR [ecx+0x15],cl
  4222a3:	mov    eax,0xa414584a
  4222a8:	pop    esi
  4222a9:	mov    dl,0xf1
  4222ab:	xor    ah,ch
  4222ad:	sub    eax,0x5ef0e62
  4222b2:	sub    al,0x6d
  4222b4:	out    0x2d,al
  4222b6:	lods   al,BYTE PTR ds:[esi]
  4222b7:	ret    
  4222b8:	pop    ss
  4222b9:	test   DWORD PTR [esi],edi
  4222bb:	and    bl,BYTE PTR [edx]
  4222bd:	das    
  4222be:	daa    
  4222bf:	jbe    0x42231e
  4222c1:	stos   DWORD PTR es:[edi],eax
  4222c2:	fadd   QWORD PTR [esi-0x76d080fa]
  4222c8:	push   edi
  4222c9:	jge    0x422273
  4222cb:	push   edx
  4222cc:	out    dx,al
  4222cd:	es xchg ebp,eax
  4222cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d0:	jge    0x42233c
  4222d2:	add    eax,0xa4237d05
  4222d7:	in     eax,dx
  4222d8:	test   BYTE PTR [eax+esi*4+0x51],0x5c
  4222dd:	outs   dx,BYTE PTR ds:[esi]
  4222de:	push   eax
  4222df:	cmp    DWORD PTR [edx],0x38e94f81
  4222e5:	push   cs
  4222e6:	ret    
  4222e7:	pop    ds
  4222e8:	ds aas 
  4222ea:	xlat   BYTE PTR ds:[ebx]
  4222eb:	test   BYTE PTR [ebx],cl
  4222ed:	pop    ebx
  4222ee:	loope  0x422276
  4222f0:	fwait
  4222f1:	into   
  4222f2:	mov    cl,0xce
  4222f4:	mov    ecx,0xdfb8b317
  4222f9:	mov    WORD PTR [esi+0x37],es
  4222fc:	cmp    esi,ebp
  4222fe:	jge    0x42231b
  422300:	jecxz  0x4222a9
  422302:	jae    0x422328
  422304:	add    ebx,DWORD PTR [ecx]
  422306:	jge    0x422313
  422308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422309:	mov    ebx,0xc6ffe1ff
  42230e:	in     eax,0xe5
  422310:	pop    ss
  422311:	sub    ecx,ebp
  422313:	pop    eax
  422314:	xchg   DWORD PTR [edi+0x43],eax
  422317:	pop    esi
  422318:	repz or cl,BYTE PTR [esi]
  42231b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231c:	test   edx,ebp
  42231e:	or     ebp,0xafbaf6ec
  422324:	add    eax,0x5d666db
  422329:	repz or edi,edx
  42232c:	(bad)  
  42232e:	dec    edx
  42232f:	and    al,0xc8
  422331:	jne    0x42232f
  422333:	push   ebp
  422334:	loopne 0x422346
  422336:	inc    eax
  422337:	cli    
  422338:	(bad)  
  422339:	and    al,0xf2
  42233b:	imul   BYTE PTR [eax+0x37]
  42233e:	lea    edi,[ecx+0x12]
  422341:	hlt    
  422342:	fucomp st(3)
  422344:	jge    0x42232f
  422346:	bound  ebp,QWORD PTR [eax-0x56]
  422349:	pusha  
  42234a:	inc    eax
  42234b:	arpl   WORD PTR [edi*4+0x280bebad],di
  422352:	jne    0x422379
  422354:	mov    BYTE PTR [ebp-0x26b2a70f],al
  42235a:	mov    WORD PTR [eax-0x1ce4486d],fs
  422360:	and    al,0xce
  422362:	popf   
  422363:	test   BYTE PTR [esi+eiz*8-0x5cd33f15],ah
  42236a:	fstp   st(6)
  42236c:	adc    esi,0x40
  42236f:	gs xchg ecx,eax
  422371:	xchg   edx,edx
  422373:	mov    esi,0x7982f514
  422378:	adc    al,0xcb
  42237a:	add    eax,0x62f004ed
  42237f:	or     cl,bh
  422381:	(bad)  
  422382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422383:	out    dx,al
  422384:	pop    esp
  422385:	inc    ebx
  422386:	sbb    ebp,esp
  422388:	xchg   ecx,eax
  422389:	out    dx,al
  42238a:	(bad)  
  42238b:	sbb    bh,al
  42238d:	das    
  42238e:	jg     0x4223d0
  422390:	aad    0x52
  422392:	ja     0x422384
  422394:	xor    al,0x57
  422396:	stc    
  422397:	jns    0x4223be
  422399:	push   ds
  42239a:	js     0x4223ac
  42239c:	mov    ds:0x5a60a992,al
  4223a1:	iret   
  4223a2:	mov    BYTE PTR [eax-0x64],ah
  4223a5:	(bad)  
  4223a6:	or     ebp,DWORD PTR [edi+0x56]
  4223a9:	jmp    0x422335
  4223ab:	loop   0x42242b
  4223ad:	fs mov dl,0x5f
  4223b0:	test   BYTE PTR [esi-0x58a43a4],0x85
  4223b7:	pushf  
  4223b8:	adc    DWORD PTR [ecx+0x68],0x14
  4223bc:	cmp    ebp,edi
  4223be:	shl    ecx,cl
  4223c0:	imul   esi,DWORD PTR [eax+0x5827fb1c],0xffffffe4
  4223c7:	cmp    esp,ebx
  4223c9:	shl    BYTE PTR [esi-0x7224f66b],0xb2
  4223d0:	cdq    
  4223d1:	aaa    
  4223d2:	lods   eax,DWORD PTR ds:[esi]
  4223d3:	add    DWORD PTR [eax],0x0
	...
  4223e1:	data16 jl 0x4223c4
  4223e4:	mov    ebx,0xfd7fbffa
  4223e9:	pop    esp
  4223ea:	mov    eax,ds:0x63b94f5c
  4223ef:	sahf   
  4223f0:	sbb    eax,esi
  4223f2:	pushf  
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	stos   DWORD PTR es:[edi],eax
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    BYTE PTR [esi+0x11],dl
  4223fb:	rol    cl,cl
  4223fd:	pop    ss
  4223fe:	rdtsc  
  422400:	ror    DWORD PTR [eax],cl
  422402:	xchg   edi,eax
  422403:	xor    BYTE PTR [edx+0x30],bl
  422406:	cmp    ecx,ecx
  422408:	test   al,0x59
  42240a:	inc    esi
  42240b:	jbe    0x422436
  42240d:	leave  
  42240e:	ins    BYTE PTR es:[edi],dx
  42240f:	test   DWORD PTR [edx-0x3e],eax
  422412:	sub    eax,0x3cac2bdd
  422417:	in     al,0x15
  422419:	mov    eax,ds:0xfddc4d55
  42241e:	leave  
  42241f:	icebp  
  422420:	popf   
  422421:	or     DWORD PTR ds:0x57b54c8a,0x2bbdc8c2
  42242b:	pusha  
  42242c:	mov    ebx,DWORD PTR [esi]
  42242e:	xor    eax,0xad7ff7d0
  422433:	retf   
  422434:	pop    eax
  422435:	xor    edi,ebx
  422437:	fisubr DWORD PTR [eax]
  422439:	lods   eax,DWORD PTR ds:[esi]
  42243a:	fisttp QWORD PTR [ecx+0x6fa6b84c]
  422440:	ss lahf 
  422442:	nop
  422443:	cli    
  422444:	and    DWORD PTR ds:0x4c22a39c,esi
  42244a:	int3   
  42244b:	pop    esi
  42244c:	int    0x6c
  42244e:	outs   dx,DWORD PTR ds:[esi]
  42244f:	push   edi
  422450:	xor    esi,edx
  422452:	jp     0x4223e6
  422454:	xchg   ebp,eax
  422455:	nop
  422456:	in     al,dx
  422457:	cmp    al,0x42
  422459:	fsubr  DWORD PTR [edi]
  42245b:	outs   dx,BYTE PTR ds:[esi]
  42245c:	imul   ecx,DWORD PTR [esi],0xa5c94818
  422462:	fist   WORD PTR [ecx+0x0]
  422465:	push   0xffffff82
  422467:	popa   
  422468:	cdq    
  422469:	xchg   al,dh
  42246b:	push   ebx
  42246c:	push   edx
  42246d:	sahf   
  42246e:	xchg   esp,eax
  42246f:	aam    0x4e
  422471:	add    ah,ch
  422473:	mov    ds:0xcee51ef0,al
  422478:	adc    DWORD PTR [edi-0x795bd87a],edi
  42247e:	xchg   esi,eax
  42247f:	repz and al,0x5b
  422482:	and    ebx,edi
  422484:	out    dx,al
  422485:	fisttp WORD PTR [eax+eax*1]
  422488:	(bad)  
  422489:	mov    eax,0xb6c93997
  42248e:	or     BYTE PTR [ecx],ah
  422490:	stos   BYTE PTR es:[edi],al
  422491:	or     al,0xc1
  422493:	call   0xf3b9:0x35033916
  42249a:	daa    
  42249b:	mov    esi,0x896076
  4224a0:	xchg   ecx,eax
  4224a1:	mov    eax,ds:0x4cf491
  4224a6:	push   ecx
  4224a7:	scas   eax,DWORD PTR es:[edi]
  4224a8:	and    dl,ah
  4224aa:	lds    edx,FWORD PTR [ebp+eax*1+0x1174f7e8]
  4224b1:	mov    esi,0xe2ba0a3a
  4224b6:	dec    edi
  4224b7:	je     0x4224c7
  4224b9:	ret    0xb3c9
  4224bc:	ror    edx,cl
  4224be:	fistp  DWORD PTR [esi]
  4224c0:	sub    DWORD PTR [ecx+0x4f89feee],esp
  4224c6:	push   edi
  4224c7:	mov    ds:0x696f17f9,eax
  4224cc:	retf   0xcb3a
  4224cf:	jnp    0x422543
  4224d1:	cdq    
  4224d2:	outs   dx,BYTE PTR ds:[esi]
  4224d3:	in     eax,0xc6
  4224d5:	(bad)  
  4224d7:	pop    edi
  4224d8:	jle    0x422532
  4224da:	inc    ecx
  4224db:	lahf   
  4224dc:	mov    gs,WORD PTR [ebp-0x1a]
  4224df:	cli    
  4224e0:	cld    
  4224e1:	sti    
  4224e2:	fisttp WORD PTR [edi-0x6b]
  4224e5:	sub    BYTE PTR [edx-0x37ef493b],0x91
  4224ec:	aad    0x60
  4224ee:	(bad)  
  4224ef:	addr16 es call 0x17a2:0x7cef1d40
  4224f8:	das    
  4224f9:	sahf   
  4224fa:	add    DWORD PTR [esi+0x65],esp
  4224fd:	mov    eax,ds:0xa8d55b41
  422502:	add    al,0x4f
  422504:	xchg   ecx,eax
  422505:	xor    dl,ah
  422507:	mov    ebx,gs
  422509:	inc    esp
  42250a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42250b:	xchg   BYTE PTR [ebx-0x31],cl
  42250e:	dec    ebx
  42250f:	pop    edi
  422510:	xor    al,0xf2
  422512:	ds imul esi,ebp
  422516:	xchg   ebx,eax
  422517:	xor    BYTE PTR [eax-0x50bb9aec],bh
  42251d:	sti    
  42251e:	sub    cl,BYTE PTR [esp+edx*8-0x260608c8]
  422525:	out    0xec,eax
  422527:	out    0x1e,al
  422529:	and    BYTE PTR [ebx+0x4e50011f],dl
  42252f:	xchg   ebx,eax
  422530:	aas    
  422531:	fwait
  422532:	fs call 0xfbed32b2
  422538:	retf   
  422539:	mov    bh,0x9c
  42253b:	and    BYTE PTR [edi],al
  42253d:	arpl   di,ax
  42253f:	(bad)  
  422540:	dec    esp
  422541:	sti    
  422542:	in     al,dx
  422543:	cmp    eax,0x5a5345da
  422548:	cmp    BYTE PTR [esi-0x68e61be6],dh
  42254e:	repz cmp al,0x3e
  422551:	(bad)  
  422552:	xchg   edi,eax
  422553:	cs jbe 0x422542
  422556:	inc    esp
  422557:	das    
  422558:	adc    edx,ebx
  42255a:	adc    al,0x40
  42255c:	push   eax
  42255d:	fstp   QWORD PTR es:[eax+0x6f]
  422561:	mov    cl,cl
  422563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422564:	in     al,dx
  422565:	ins    DWORD PTR es:[edi],dx
  422566:	rol    BYTE PTR [eax+edx*2+0x31c5eccb],1
  42256d:	fnsave [esi+edx*8-0x69]
  422571:	sub    ah,bl
  422573:	stos   DWORD PTR es:[edi],eax
  422574:	stos   DWORD PTR es:[edi],eax
  422575:	xchg   esp,eax
  422576:	xchg   edi,eax
  422577:	in     eax,dx
  422578:	scas   al,BYTE PTR es:[edi]
  422579:	xlat   BYTE PTR ds:[ebx]
  42257a:	stos   BYTE PTR es:[edi],al
  42257b:	pop    eax
  42257c:	outs   dx,BYTE PTR ds:[esi]
  42257d:	jo     0x4225d6
  42257f:	or     al,0x39
  422581:	or     BYTE PTR [ebx],cl
  422583:	stos   BYTE PTR es:[edi],al
  422584:	jno    0x422558
  422586:	dec    esp
  422587:	sbb    esi,DWORD PTR [esi-0x36]
  42258a:	xchg   BYTE PTR [eax],cl
  42258c:	jnp    0x4225ae
  42258e:	jae    0x4225a8
  422590:	out    dx,al
  422591:	push   0x1b52fc2b
  422596:	pop    ebx
  422597:	adc    eax,DWORD PTR [ebp+0x1b471fb2]
  42259d:	das    
  42259e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42259f:	mov    ch,0x9b
  4225a1:	jmp    0xa9bb6248
  4225a6:	cdq    
  4225a7:	sti    
  4225a8:	jnp    0x42252b
  4225aa:	or     ah,BYTE PTR [edi-0x3fca8957]
  4225b0:	jg     0x422613
  4225b2:	inc    edi
  4225b3:	ror    DWORD PTR [edx-0x5e],1
  4225b6:	loop   0x422619
  4225b8:	pop    esi
  4225b9:	ins    DWORD PTR es:[edi],dx
  4225ba:	cwde   
  4225bb:	sbb    al,0xea
  4225bd:	ret    
  4225be:	mov    dh,0x87
  4225c0:	jp     0x422555
  4225c2:	pop    ds
  4225c3:	stc    
  4225c4:	fiadd  WORD PTR [esi]
  4225c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c7:	or     eax,0xb5ecae5d
  4225cc:	cli    
  4225cd:	mov    ds:0xbf6d5cc9,al
  4225d2:	nop
  4225d3:	into   
  4225d4:	cmp    eax,0x98e192d5
  4225d9:	call   0x36c98883
  4225de:	rol    BYTE PTR [edx-0x5215e177],1
  4225e4:	(bad)  
  4225e5:	ss popf 
  4225e7:	fld    DWORD PTR [ebx-0x3fc7d2df]
  4225ed:	nop
  4225ee:	call   0x98c8:0x1c7f3cdf
  4225f5:	push   eax
  4225f6:	and    eax,esp
  4225f8:	test   DWORD PTR [ebx+0x69],ecx
  4225fb:	sub    ah,ch
  4225fd:	fbld   TBYTE PTR [ebx+0x9]
  422600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422601:	jns    0x422596
  422603:	js     0x422680
  422605:	fild   WORD PTR [ecx]
  422607:	int3   
  422608:	add    al,0x9e
  42260a:	mov    esi,0x5a40b005
  42260f:	jge    0x4225aa
  422611:	imul   ecx,DWORD PTR [esi-0xed850ab],0x53
  422618:	add    al,0xcd
  42261a:	push   ebx
  42261b:	rcl    bh,1
  42261d:	xor    cl,0xf1
  422620:	test   BYTE PTR [ebx-0x1c77e5dc],cl
  422626:	fdivrp st(6),st
  422628:	cdq    
  422629:	in     al,dx
  42262a:	lock neg DWORD PTR [ecx-0xed49ebb]
  422631:	int3   
  422632:	popf   
  422633:	mov    eax,ds:0x8a5db3df
  422638:	loop   0x422661
  42263a:	inc    edi
  42263b:	xchg   esi,eax
  42263c:	jae    0x422647
  42263e:	or     ecx,esp
  422640:	outs   dx,DWORD PTR ds:[esi]
  422641:	std    
  422642:	jmp    0x66204302
  422647:	mov    ebp,0x6251074a
  42264c:	stc    
  42264d:	cmp    ebp,ecx
  42264f:	sahf   
  422650:	adc    al,0xe0
  422652:	(bad)  
  422653:	punpckhwd mm7,QWORD PTR [esi-0x14]
  422657:	adc    DWORD PTR [ecx+0x612ccc72],eax
  42265d:	jecxz  0x42269d
  42265f:	or     DWORD PTR [edi-0x1fde3292],esi
  422665:	push   edx
  422666:	or     edx,esi
  422668:	lea    esp,[esi+ebp*4-0x2485ffa4]
  42266f:	pop    ss
  422670:	mov    ds:0x743daea,eax
  422675:	imul   ebx,DWORD PTR [ebx+0x3ead320f],0x45
  42267c:	scas   eax,DWORD PTR es:[edi]
  42267d:	inc    ebp
  42267e:	jecxz  0x422607
  422680:	sahf   
  422681:	hlt    
  422682:	mov    eax,0xfe9e6a0f
  422687:	mov    al,BYTE PTR [ecx-0x875894]
  42268d:	xchg   ebx,eax
  42268e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268f:	call   0x5522:0xb8aa60b2
  422696:	inc    esi
  422697:	in     eax,dx
  422698:	push   esp
  422699:	adc    eax,DWORD PTR [eax-0x485686a7]
  42269f:	(bad)
  4226a2:	pop    ss
  4226a3:	inc    edx
  4226a4:	xchg   ebx,eax
  4226a5:	inc    esi
  4226a6:	aaa    
  4226a7:	shr    DWORD PTR [ebp+0x17],1
  4226aa:	mul    DWORD PTR [esi+0x2b]
  4226ad:	call   0x4598:0xdbed2259
  4226b4:	xor    eax,0x19a41ab6
  4226b9:	imul   ecx,DWORD PTR [edx-0x3595909],0x34d7c403
  4226c3:	mov    esp,0x4fa0d97b
  4226c8:	add    al,0xd7
  4226ca:	xor    al,0x31
  4226cc:	mov    ebx,0x1427949d
  4226d1:	imul   ecx,DWORD PTR [ecx+0x78],0xfffffffe
  4226d5:	or     bl,BYTE PTR [eax+0x4d]
  4226d8:	std    
  4226d9:	loop   0x42269c
  4226db:	add    bl,BYTE PTR [edi-0x78]
  4226de:	and    ecx,eax
  4226e0:	xchg   esp,eax
  4226e1:	inc    ecx
  4226e2:	fs mov edx,0x784dba19
  4226e8:	or     al,BYTE PTR [edi+edx*8]
  4226eb:	sahf   
  4226ec:	inc    edx
  4226ed:	sti    
  4226ee:	inc    ecx
  4226ef:	outs   dx,DWORD PTR ds:[esi]
  4226f0:	pop    esi
  4226f1:	cwde   
  4226f2:	dec    edx
  4226f3:	jae    0x422739
  4226f5:	popa   
  4226f6:	mov    DWORD PTR [ecx+eiz*4],ecx
  4226f9:	scas   eax,DWORD PTR es:[edi]
  4226fa:	jae    0x422749
  4226fc:	loope  0x422729
  4226fe:	inc    edi
  4226ff:	call   0x1f623627
  422704:	xlat   BYTE PTR ds:[ebx]
  422705:	aas    
  422706:	(bad)  
  422707:	and    al,0xef
  422709:	pop    edx
  42270a:	jbe    0x422746
  42270c:	xchg   esp,eax
  42270d:	cmp    al,0xdd
  42270f:	sub    al,0x94
  422711:	dec    esi
  422712:	pop    ds
  422713:	pop    ss
  422714:	in     al,dx
  422715:	or     cl,BYTE PTR [ebp-0x15]
  422718:	sbb    al,0xed
  42271a:	dec    ecx
  42271b:	call   0x1b0d4b72
  422720:	add    DWORD PTR [edi],ebx
  422722:	aam    0xad
  422724:	xor    BYTE PTR [eax],dh
  422726:	popa   
  422727:	loop   0x4226dc
  422729:	push   esi
  42272a:	sbb    al,0x81
  42272c:	adc    al,0xe9
  42272e:	inc    edx
  42272f:	pop    esp
  422730:	jp     0x4226f9
  422732:	(bad)
  422735:	out    dx,al
  422736:	int3   
  422737:	adc    eax,0x3d823fd0
  42273c:	bnd jle 0x4227b1
  42273f:	inc    ecx
  422740:	cdq    
  422741:	(bad)  
  422742:	not    DWORD PTR [esi+0x7bbea37c]
  422748:	shl    DWORD PTR [edi+0x47],1
  42274b:	mov    edi,0x959a662d
  422750:	stos   BYTE PTR es:[edi],al
  422751:	adc    esp,edi
  422753:	(bad)  
  422754:	ror    dl,cl
  422756:	js     0x4226f7
  422758:	xchg   esp,eax
  422759:	jae    0x422703
  42275b:	sti    
  42275c:	mov    ecx,0xa6618d3e
  422761:	xor    al,0x7b
  422763:	sbb    DWORD PTR [edi+0x1],0xffffffac
  422767:	aam    0x1d
  422769:	(bad)  
  42276a:	test   eax,0xc31e1e12
  42276f:	cmp    eax,0x33118cbc
  422774:	in     eax,dx
  422775:	mov    ah,0x74
  422777:	dec    ecx
  422778:	std    
  422779:	stos   DWORD PTR es:[edi],eax
  42277a:	not    BYTE PTR [eax+0x8]
  42277d:	xchg   edi,eax
  42277e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422780:	cmp    ch,cl
  422782:	and    eax,0xd344a7ac
  422787:	dec    edi
  422788:	lods   eax,DWORD PTR ds:[esi]
  422789:	xchg   DWORD PTR [edi-0x363b1d40],esi
  42278f:	jmp    0x42272b
  422791:	xchg   edi,eax
  422792:	mov    ds:0x6a4c63d5,eax
  422797:	es inc edi
  422799:	ss popf 
  42279b:	loop   0x4227fc
  42279d:	jl     0x4227fa
  42279f:	out    dx,al
  4227a0:	pop    edi
  4227a1:	nop
  4227a2:	outs   dx,BYTE PTR ds:[esi]
  4227a3:	xor    al,BYTE PTR [eax]
	...
  4227b1:	addr16 jne 0x422780
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	jl     0x422805
  4227bf:	push   0x1a071da
  4227c4:	add    BYTE PTR [ebx-0x5fffffd],ch
  4227ca:	jb     0x4227c0
  4227cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227cd:	lock fisubr WORD PTR [edi]
  4227d0:	inc    esp
  4227d1:	iret   
  4227d2:	xchg   ebx,eax
  4227d3:	cld    
  4227d4:	or     ebp,DWORD PTR [edx]
  4227d6:	dec    esi
  4227d7:	sub    eax,0x48b2d80e
  4227dc:	sub    esi,DWORD PTR [edi]
  4227de:	cmp    BYTE PTR [esi+0x1105b360],dl
  4227e4:	in     al,0x53
  4227e6:	push   es
  4227e7:	and    dh,BYTE PTR [ecx+eax*8+0x20be07d9]
  4227ee:	popf   
  4227ef:	fdiv   DWORD PTR [eax]
  4227f1:	inc    esi
  4227f2:	(bad)  
  4227f3:	ficom  WORD PTR [esp+esi*2]
  4227f6:	ja     0x4227dc
  4227f8:	inc    edi
  4227f9:	and    eax,0x16799bd7
  4227fe:	jle    0x42282f
  422800:	add    DWORD PTR [edi],esi
  422802:	inc    edx
  422803:	adc    DWORD PTR [eax-0x19257cfd],0x14
  42280a:	pop    ebp
  42280b:	adc    eax,eax
  42280d:	lahf   
  42280e:	dec    ebx
  42280f:	lods   al,BYTE PTR ds:[esi]
  422810:	sbb    esp,ebp
  422812:	mov    cl,0x50
  422814:	mov    al,0x65
  422816:	xchg   edi,eax
  422817:	push   ecx
  422818:	inc    edx
  422819:	dec    esi
  42281a:	es stos DWORD PTR es:[edi],eax
  42281c:	adc    eax,0xc9505984
  422822:	adc    DWORD PTR [ebx+ecx*1],0xffffff9c
  422826:	dec    edx
  422827:	add    edx,DWORD PTR [eax+ecx*1-0x4]
  42282b:	mov    dh,0x6d
  42282d:	out    dx,eax
  42282e:	xor    bl,BYTE PTR [edi+0x78]
  422831:	div    ah
  422833:	cwde   
  422834:	dec    edx
  422835:	adc    ecx,DWORD PTR [esi+0x4037cbf6]
  42283b:	xor    esi,DWORD PTR [ebp+0x70edce7e]
  422841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422842:	scas   al,BYTE PTR es:[edi]
  422843:	inc    eax
  422844:	mov    esp,0xdd86021
  422849:	pop    ebp
  42284a:	pop    DWORD PTR [ebx]
  42284c:	pusha  
  42284d:	ins    BYTE PTR es:[edi],dx
  42284e:	adc    cl,BYTE PTR [edi+eiz*4+0x6fb0ca78]
  422855:	dec    edi
  422856:	out    dx,eax
  422857:	adc    al,0xdf
  422859:	enter  0x924d,0x92
  42285d:	dec    ebx
  42285e:	hlt    
  42285f:	mov    ds:0x352318fe,al
  422864:	scas   eax,DWORD PTR es:[edi]
  422865:	xor    dl,0x5c
  422868:	or     eax,0x9bd55a51
  42286d:	and    BYTE PTR [esi-0x931100c],ah
  422873:	cmp    eax,0xa77e31ba
  422878:	mov    ecx,0x91b7a547
  42287d:	stos   BYTE PTR es:[edi],al
  42287e:	test   BYTE PTR [ebp+0x2b],dl
  422881:	adc    dl,BYTE PTR [ebp-0x41696472]
  422887:	syscall 
  422889:	sbb    esi,ecx
  42288b:	ja     0x42284e
  42288d:	jle    0x422873
  42288f:	imul   esi,DWORD PTR [eax+esi*1+0x35b3f2e5],0x5464cfb0
  42289a:	inc    ebx
  42289b:	pop    eax
  42289c:	(bad)  
  42289d:	ja     0x422887
  42289f:	xor    eax,0xb56dec55
  4228a4:	outs   dx,BYTE PTR ds:[esi]
  4228a5:	push   es
  4228a6:	mov    eax,ds:0xe3843817
  4228ab:	mov    edx,0xc4410793
  4228b0:	add    ah,ch
  4228b2:	les    ecx,FWORD PTR [ebx+0x7b6b4aad]
  4228b8:	mov    eax,ds:0xa54c6f88
  4228bd:	inc    edi
  4228be:	inc    ecx
  4228bf:	mul    edi
  4228c1:	inc    edx
  4228c2:	popa   
  4228c3:	aaa    
  4228c4:	xor    eax,0x1dce338c
  4228c9:	mov    BYTE PTR [ebp+0x26],bh
  4228cc:	cmc    
  4228cd:	out    dx,eax
  4228ce:	inc    cl
  4228d0:	ficomp WORD PTR [esi]
  4228d2:	call   0x9344:0xba2f088e
  4228d9:	jecxz  0x42286e
  4228db:	ror    BYTE PTR [eax+0x456cd1de],1
  4228e1:	xor    esp,DWORD PTR [esi-0x37098fd]
  4228e7:	sub    eax,DWORD PTR ds:0xb3abd7c
  4228ed:	mov    al,0xfd
  4228ef:	xchg   DWORD PTR [ebx],ebp
  4228f1:	call   DWORD PTR [eax+esi*8+0x5d017965]
  4228f8:	shr    BYTE PTR [edx],cl
  4228fa:	sub    esp,DWORD PTR [ecx]
  4228fc:	lods   al,BYTE PTR ds:[esi]
  4228fd:	jbe    0x42294f
  4228ff:	das    
  422900:	jnp    0x4228cf
  422902:	inc    edx
  422903:	loope  0x4228b3
  422905:	popf   
  422906:	add    BYTE PTR [eax-0x6b],0xa
  42290a:	jmp    0xeda4:0x7dd11e5a
  422911:	imul   ebp,DWORD PTR [esi-0x2d8587e0],0xb7547ee7
  42291b:	add    DWORD PTR [ebx-0x3989addf],esp
  422921:	fcom   DWORD PTR [esi+0x3f]
  422924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422925:	xchg   esi,eax
  422926:	lods   al,BYTE PTR ds:[esi]
  422927:	clc    
  422928:	sbb    ecx,DWORD PTR [eax-0x3]
  42292b:	jbe    0x422945
  42292d:	dec    edx
  42292e:	xchg   edi,eax
  42292f:	outs   dx,DWORD PTR ds:[esi]
  422930:	inc    esp
  422931:	dec    ebx
  422932:	inc    esi
  422933:	mov    cl,0x37
  422935:	mov    ebx,0x6653a762
  42293a:	jbe    0x4229b5
  42293c:	or     eax,DWORD PTR [ecx]
  42293e:	xor    BYTE PTR [esi-0x3abe53ce],bl
  422944:	or     eax,0x9d7257cf
  422949:	call   0x894d1394
  42294e:	fcomip st,st(2)
  422950:	call   0xdfd7:0x596cf586
  422957:	test   BYTE PTR [ebp-0x14646a7c],ah
  42295d:	inc    esp
  42295e:	aas    
  42295f:	clc    
  422960:	push   ecx
  422961:	ret    
  422962:	inc    esi
  422963:	lods   al,BYTE PTR ds:[esi]
  422964:	je     0x42296f
  422966:	dec    ebx
  422967:	sub    esp,esp
  422969:	pop    esi
  42296a:	(bad)  
  42296b:	push   eax
  42296c:	jle    0x42291a
  42296e:	out    0x40,al
  422970:	mov    al,ds:0x776373a2
  422975:	cdq    
  422976:	mov    ebx,0x167ec4ce
  42297b:	dec    eax
  42297c:	ficomp DWORD PTR [edx-0x273479ac]
  422982:	addr16 pop edx
  422984:	xlat   BYTE PTR ds:[ebx]
  422985:	int3   
  422986:	sbb    eax,0xce17616d
  42298b:	retf   
  42298c:	mov    ds:0x64abccfc,al
  422991:	out    dx,eax
  422992:	and    BYTE PTR [edx+esi*1-0x44],dh
  422996:	lahf   
  422997:	jbe    0x4229fa
  422999:	out    dx,eax
  42299a:	imul   ecx,DWORD PTR [edx],0x6b
  42299d:	push   cs
  42299e:	fwait
  42299f:	sbb    DWORD PTR [eax-0x5f],ebp
  4229a2:	push   ecx
  4229a3:	stos   BYTE PTR es:[edi],al
  4229a4:	je     0x422984
  4229a6:	mov    edx,0x5f8ae070
  4229ab:	and    al,0x8a
  4229ad:	es iret 
  4229af:	mov    DWORD PTR [esp+esi*1+0x28],edx
  4229b3:	leave  
  4229b4:	es jnp 0x4229e1
  4229b7:	add    eax,0x593dcf72
  4229bc:	int    0xa6
  4229be:	jns    0x4229a3
  4229c0:	test   BYTE PTR [ebx],0x32
  4229c3:	push   ss
  4229c4:	mov    edi,0x9e5d4b4
  4229c9:	mov    bh,0x62
  4229cb:	test   esi,edx
  4229cd:	test   ebx,edx
  4229cf:	int3   
  4229d0:	jg     0x422a05
  4229d2:	int3   
  4229d3:	sub    BYTE PTR [eax-0x63],bh
  4229d6:	stc    
  4229d7:	jl     0x422a19
  4229d9:	or     DWORD PTR [edx-0xc],edx
  4229dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229dd:	shr    DWORD PTR [ecx+eiz*8],1
  4229e0:	push   esi
  4229e1:	pop    eax
  4229e2:	pop    ebx
  4229e3:	das    
  4229e4:	jecxz  0x422a54
  4229e6:	test   DWORD PTR [ebp+0xbf6a0d0],0x203cfd5b
  4229f0:	inc    eax
  4229f1:	call   0xab68d63e
  4229f6:	scas   eax,DWORD PTR es:[edi]
  4229f7:	jbe    0x422a72
  4229f9:	and    dh,BYTE PTR [esp+ecx*1]
  4229fc:	and    DWORD PTR [edx+0x3184c13],0xfffffff2
  422a03:	push   ds
  422a04:	pop    ecx
  422a05:	cmp    BYTE PTR [edi],0xb1
  422a08:	add    al,BYTE PTR [edi-0x4cc13d7e]
  422a0e:	adc    eax,0xccfb063d
  422a13:	je     0x4229c6
  422a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a16:	icebp  
  422a17:	leave  
  422a18:	add    BYTE PTR [ebx+ebp*4+0x11dd64ac],0x13
  422a20:	sub    BYTE PTR [edx],ah
  422a22:	adc    al,0xa8
  422a24:	clc    
  422a25:	fild   WORD PTR [ebp-0x749f09e7]
  422a2b:	in     al,dx
  422a2c:	jns    0x4229c8
  422a2e:	push   esi
  422a2f:	mov    al,ds:0x5b87bc88
  422a34:	stos   DWORD PTR es:[edi],eax
  422a35:	cmc    
  422a36:	cdq    
  422a37:	test   eax,0xe4e43ff8
  422a3c:	dec    ebx
  422a3d:	mov    bl,0x5
  422a3f:	imul   eax,DWORD PTR [ebx+ecx*8],0x6a
  422a43:	dec    edx
  422a44:	mov    ecx,0x7298b14f
  422a49:	pop    ecx
  422a4a:	dec    ebp
  422a4b:	retf   0xe01
  422a4e:	ficomp DWORD PTR ds:0x61f9c931
  422a54:	jmp    0x95de:0x9c70034e
  422a5b:	jae    0x4229e0
  422a5d:	addr16 add al,0xa6
  422a60:	or     eax,0xf45ed41a
  422a65:	out    dx,eax
  422a66:	je     0x422a41
  422a68:	cmc    
  422a69:	ret    
  422a6a:	scas   al,BYTE PTR es:[edi]
  422a6b:	dec    edx
  422a6c:	mov    edi,0x13145999
  422a71:	(bad)
  422a74:	fmul   DWORD PTR [ebx]
  422a76:	pushf  
  422a77:	ret    0x9558
  422a7a:	or     ebp,ecx
  422a7c:	jge    0x422a41
  422a7e:	push   ebp
  422a7f:	test   esp,esi
  422a81:	aas    
  422a82:	jns    0x422a8e
  422a84:	add    ecx,esi
  422a86:	ins    BYTE PTR es:[edi],dx
  422a87:	inc    edi
  422a88:	mov    dl,0xa4
  422a8a:	out    0x25,eax
  422a8c:	sar    DWORD PTR [edx],0xdc
  422a8f:	repz pop edi
  422a91:	pop    ebp
  422a92:	shr    DWORD PTR ss:[ecx-0x62],0x68
  422a97:	xchg   BYTE PTR [edx+0x79],bh
  422a9a:	popa   
  422a9b:	inc    ebx
  422a9c:	push   ss
  422a9d:	push   ebx
  422a9e:	cmp    ecx,DWORD PTR [ebp+0x2adebd03]
  422aa4:	adc    dh,dh
  422aa6:	jo     0x422ab3
  422aa8:	sbb    DWORD PTR [edx],edi
  422aaa:	mov    dl,0x60
  422aac:	into   
  422aad:	into   
  422aae:	push   ss
  422aaf:	imul   esp,DWORD PTR [edi],0xb325e22e
  422ab5:	or     DWORD PTR [eax+0x75bbb8c5],0x411495f2
  422abf:	sub    esi,DWORD PTR [edx+ecx*4+0x48]
  422ac3:	mov    ah,0xf0
  422ac5:	ret    0xd3d4
  422ac8:	imul   ecx,DWORD PTR [ecx],0xeb519c11
  422ace:	inc    ecx
  422acf:	jp     0x422aac
  422ad1:	gs lahf 
  422ad3:	sbb    eax,0x9f55ff39
  422ad8:	xchg   DWORD PTR [ecx-0x5a],ecx
  422adb:	pusha  
  422adc:	push   cs
  422add:	ss aad 0xc1
  422ae0:	ins    BYTE PTR es:[edi],dx
  422ae1:	mov    es,WORD PTR [edi]
  422ae3:	jl     0x422b0d
  422ae5:	cs or  eax,0x569e9704
  422aeb:	pop    esi
  422aec:	xor    esp,esp
  422aee:	jg     0x422abe
  422af0:	pop    ebp
  422af1:	loope  0x422a93
  422af3:	call   0x33c0:0xe6d9d29b
  422afa:	sub    edi,esp
  422afc:	dec    eax
  422afd:	inc    ebp
  422afe:	(bad)  
  422aff:	jl     0x422b69
  422b01:	push   DWORD PTR [esi+0x79]
  422b04:	adc    esi,DWORD PTR [ecx]
  422b06:	dec    eax
  422b07:	mov    fs,ebp
  422b09:	mov    cl,0x28
  422b0b:	enter  0xd4c1,0x9
  422b0f:	(bad)  
  422b10:	fdiv   DWORD PTR [ebx+0x863e98]
  422b16:	pop    edx
  422b17:	test   al,0xf2
  422b19:	add    dh,dh
  422b1b:	add    DWORD PTR [edx],0x47
  422b1e:	aad    0x8c
  422b20:	test   al,0x85
  422b22:	inc    edx
  422b23:	adc    esi,DWORD PTR [eax]
  422b25:	jge    0x422ae4
  422b27:	cmp    al,0x22
  422b29:	cli    
  422b2a:	cs repz cld 
  422b2d:	out    0x52,eax
  422b2f:	jbe    0x422baf
  422b31:	and    eax,0x478ceac6
  422b36:	call   FWORD PTR [ecx+eiz*1]
  422b39:	ja     0x422b3c
  422b3b:	jmp    0x437c0fcc
  422b40:	out    0x44,al
  422b42:	mov    bh,0x5
  422b44:	(bad)  
  422b45:	pop    ds
  422b46:	sbb    ecx,DWORD PTR [ecx+0x74e3603c]
  422b4c:	mov    ch,0x15
  422b4f:	pop    ebp
  422b50:	idiv   BYTE PTR [edi]
  422b52:	mov    bh,0x4d
  422b54:	retf   
  422b55:	js     0x422bc6
  422b57:	stc    
  422b58:	xchg   bh,dl
  422b5a:	gs push esp
  422b5c:	(bad)  
  422b5d:	in     al,dx
  422b5e:	int3   
  422b5f:	pop    cx
  422b61:	fwait
  422b62:	loopne 0x422ae6
  422b64:	sub    DWORD PTR [edx-0x2b],eax
  422b67:	in     al,0xff
  422b69:	imul   ebx,edx,0x53
  422b6c:	test   eax,0x886b1261
  422b71:	js     0x422be2
  422b73:	dec    edx
	...
  422b80:	add    BYTE PTR [eax-0x43f64bd4],ah
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    bl,BYTE PTR [edi+0x1c3b3fc2]
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	stos   DWORD PTR es:[edi],eax
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR ds:0x669e021f,cl
  422b9e:	mov    ah,0xa2
  422ba0:	sub    edx,ebx
  422ba2:	and    WORD PTR [ebx-0x8],bx
  422ba6:	mov    edi,0x7b7ab9ea
  422bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bac:	push   ss
  422bad:	dec    esi
  422bae:	dec    eax
  422baf:	lahf   
  422bb0:	push   cs
  422bb1:	stos   DWORD PTR es:[edi],eax
  422bb2:	es pop eax
  422bb4:	hlt    
  422bb5:	scas   eax,DWORD PTR es:[edi]
  422bb6:	add    DWORD PTR [ecx+ebp*2-0x174c3586],edx
  422bbd:	imul   BYTE PTR fs:[esi+ecx*4+0x1043ddb]
  422bc5:	sub    DWORD PTR [eax-0x69],ecx
  422bc8:	std    
  422bc9:	shl    DWORD PTR [ecx-0x78414234],0x9c
  422bd0:	in     al,0x88
  422bd2:	adc    al,0xcf
  422bd4:	sahf   
  422bd5:	stos   DWORD PTR es:[edi],eax
  422bd6:	cmp    esi,DWORD PTR [edi+0x49239c15]
  422bdc:	xor    eax,0xd4f07141
  422be1:	pop    ds
  422be2:	imul   esi,DWORD PTR [ebx],0x57
  422be5:	gs popa 
  422be7:	sbb    edi,esi
  422be9:	int3   
  422bea:	xchg   ebp,eax
  422beb:	nop
  422bec:	xor    BYTE PTR [eax],dh
  422bee:	jmp    0x80a9e6c9
  422bf3:	add    ch,bl
  422bf5:	mov    cl,0x85
  422bf7:	mov    ch,al
  422bf9:	rcl    BYTE PTR [edi+ecx*4+0x4cdb51c],0xcb
  422c01:	dec    edi
  422c02:	inc    esi
  422c03:	jo     0x422be9
  422c05:	rcr    BYTE PTR [edx],cl
  422c07:	test   BYTE PTR [ebp+0x6af041f0],dl
  422c0d:	lds    edi,FWORD PTR [edi-0x11]
  422c10:	int    0x7b
  422c12:	push   edi
  422c13:	jg     0x422c29
  422c15:	lock mov esp,0xcf459d39
  422c1b:	mov    edi,0x1e03dce8
  422c20:	arpl   di,si
  422c22:	jge    0x422c1e
  422c24:	cmp    eax,0xd127a09b
  422c29:	inc    esp
  422c2a:	and    BYTE PTR fs:[edi],bh
  422c2d:	sbb    DWORD PTR [esi-0x391933ac],0x4
  422c34:	gs pop edi
  422c36:	das    
  422c37:	pop    es
  422c38:	inc    edx
  422c39:	shl    BYTE PTR [ecx],1
  422c3b:	add    DWORD PTR [ebx-0x505728ab],edi
  422c41:	mov    dh,0x9f
  422c43:	rol    DWORD PTR [ecx+0x3c],0x2e
  422c47:	aad    0xe5
  422c49:	sbb    dl,BYTE PTR [edi-0x7d]
  422c4c:	push   0xd94b307c
  422c51:	out    dx,al
  422c52:	rep lods al,BYTE PTR ds:[esi]
  422c54:	or     eax,0x391c3e82
  422c59:	shr    DWORD PTR [edi+ebx*1-0x8],1
  422c5d:	nop
  422c5e:	jne    0x422c4a
  422c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c61:	and    esi,DWORD PTR [esi+0x31]
  422c64:	inc    edx
  422c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c66:	mov    BYTE PTR [edx-0x21b8ec76],ch
  422c6c:	jbe    0x422c23
  422c6e:	and    eax,0xb7666859
  422c73:	jecxz  0x422cc9
  422c75:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  422c77:	arpl   WORD PTR [edx],ax
  422c79:	jl     0x422c84
  422c7b:	sbb    al,0xae
  422c7d:	push   es
  422c7e:	inc    eax
  422c7f:	cwde   
  422c80:	adc    BYTE PTR [ebp+0x5c],dl
  422c83:	jp     0x422c29
  422c85:	cmp    ebp,DWORD PTR [esi+0x796cf1e]
  422c8b:	mov    al,bl
  422c8d:	fwait
  422c8e:	pmulhw mm3,QWORD PTR ds:0x50fb15a4
  422c95:	aas    
  422c96:	xchg   ecx,eax
  422c97:	ja     0x422cdd
  422c99:	nop
  422c9a:	sti    
  422c9b:	jle    0x422c51
  422c9d:	dec    ecx
  422c9e:	cmp    DWORD PTR [edi+0x28e6583f],0xffffffd2
  422ca5:	mov    eax,ds:0x551dd560
  422caa:	and    eax,0xa30b62cb
  422caf:	daa    
  422cb0:	cmp    eax,0x357f1da
  422cb5:	test   al,0xb
  422cb7:	fwait
  422cb8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  422cba:	jo     0x422d33
  422cbc:	ror    BYTE PTR [ecx+0x5dee4b08],0x8c
  422cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc4:	push   esi
  422cc5:	fisubr WORD PTR [ebp+0x27]
  422cc8:	inc    esi
  422cc9:	les    ecx,FWORD PTR [bp+0x64]
  422ccd:	cmc    
  422cce:	mov    ah,0x62
  422cd0:	xlat   BYTE PTR ds:[ebx]
  422cd1:	scas   eax,DWORD PTR es:[edi]
  422cd2:	mov    gs,WORD PTR [ebx+0x3a]
  422cd5:	daa    
  422cd6:	int    0x19
  422cd8:	out    0xd5,eax
  422cda:	loope  0x422cd3
  422cdc:	mov    ds:0x989f6ae0,al
  422ce1:	xchg   edx,eax
  422ce2:	inc    esp
  422ce3:	rcr    DWORD PTR [edi],cl
  422ce5:	add    edx,esp
  422ce7:	mov    DWORD PTR [eax+0x5b],ecx
  422cea:	jmp    0x3739:0x423f9293
  422cf1:	popa   
  422cf2:	inc    esi
  422cf3:	(bad)  
  422cf5:	pop    eax
  422cf6:	or     BYTE PTR [esi-0x5],0x58
  422cfa:	(bad)  
  422cfb:	call   DWORD PTR [eax+0x4]
  422cfe:	xchg   esi,eax
  422cff:	add    BYTE PTR [esi+0x1e9a82ea],bh
  422d05:	push   ss
  422d06:	xchg   edx,eax
  422d07:	and    BYTE PTR ds:0x15b8ea42,ch
  422d0d:	xor    ebx,esp
  422d0f:	idiv   DWORD PTR [eax-0x55]
  422d12:	xchg   DWORD PTR ds:0x6494b06f,esp
  422d18:	sbb    eax,0xc0a8a9bf
  422d1d:	imul   ebx,DWORD PTR [eax+0x5e],0x4609a08
  422d24:	inc    ebx
  422d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d26:	mov    DWORD PTR [ebp+0x6409c613],ebp
  422d2c:	xor    al,0xb3
  422d2e:	mov    esp,0x74331967
  422d33:	repz mov ah,0x2a
  422d36:	mov    al,ds:0x51f8e139
  422d3b:	jno    0x422cd6
  422d3d:	add    dh,BYTE PTR [eax-0x26ae10]
  422d43:	into   
  422d44:	xchg   ecx,eax
  422d45:	jecxz  0x422d64
  422d47:	inc    eax
  422d48:	mov    ebx,0x98221142
  422d4d:	xchg   esi,eax
  422d4e:	ds jo  0x422d04
  422d51:	or     DWORD PTR [esi-0x3321f77e],eax
  422d57:	aaa    
  422d58:	push   ebp
  422d59:	addr16 sahf 
  422d5b:	jns    0x422d9c
  422d5d:	sub    eax,0xf94a02c
  422d62:	repz push ds
  422d64:	call   0x20d:0xbd25d5f0
  422d6b:	cmp    eax,0x767d1aed
  422d70:	(bad)  
  422d71:	mov    eax,0xff96434f
  422d76:	mov    dl,0x28
  422d78:	sbb    eax,0x71fe6f4d
  422d7d:	cmp    cl,BYTE PTR ds:0x9264ff6e
  422d83:	adc    WORD PTR [ecx-0x47],cx
  422d87:	loope  0x422d99
  422d89:	les    esi,FWORD PTR [edx-0x5e9ad7d7]
  422d8f:	cwde   
  422d90:	adc    dl,BYTE PTR [edi]
  422d92:	daa    
  422d93:	popa   
  422d94:	sbb    edi,DWORD PTR [edx]
  422d96:	jmp    0x3c68:0x640d1548
  422d9d:	mov    esi,0xdcc59866
  422da2:	cmp    eax,ebx
  422da4:	mov    ebx,0x56b92a5b
  422da9:	jmp    0x7ab:0xb51d1a83
  422db0:	pop    eax
  422db1:	mov    eax,0x2b7dc48
  422db6:	xchg   esp,eax
  422db7:	adc    eax,0xa5cbff4b
  422dbc:	push   es
  422dbd:	or     bl,cl
  422dbf:	mov    dl,0x47
  422dc1:	adc    dl,dh
  422dc3:	imul   ebx,ecx,0x771eb47d
  422dc9:	mov    edi,0x4fd632ce
  422dce:	mov    esp,0x5b18de1a
  422dd3:	ret    0xc007
  422dd6:	push   ds
  422dd7:	lock or al,0xf6
  422dda:	gs (bad) 
  422ddc:	lds    edx,FWORD PTR [edi]
  422dde:	adc    DWORD PTR [esi+eax*2-0x55],ebp
  422de2:	add    BYTE PTR [eax+0x2fc57783],cl
  422de8:	retf   0x7f9b
  422deb:	push   ecx
  422dec:	jle    0x422d78
  422dee:	fidivr DWORD PTR [ecx-0x50]
  422df1:	sbb    DWORD PTR [esp+ebx*8+0x5c],0xe588543d
  422df9:	cs and eax,0x62a4efd2
  422dff:	daa    
  422e00:	aaa    
  422e01:	push   ebp
  422e02:	mov    edx,0xa8611498
  422e07:	ins    BYTE PTR es:[edi],dx
  422e08:	mov    ah,0x97
  422e0a:	mov    DWORD PTR [edx+0x64],edi
  422e0d:	push   eax
  422e0e:	inc    esp
  422e0f:	fcomp  DWORD PTR [edx+ecx*2-0x57efbc09]
  422e16:	jmp    0xbdba:0x64e47842
  422e1d:	scas   eax,DWORD PTR es:[edi]
  422e1e:	enter  0x5208,0x1e
  422e22:	xchg   edx,eax
  422e23:	sbb    eax,0xe9c5c57b
  422e28:	int    0x8c
  422e2a:	repz sub eax,0x1f944e3c
  422e30:	xor    eax,0x5d601113
  422e35:	aas    
  422e36:	xlat   BYTE PTR ds:[ebx]
  422e37:	stos   DWORD PTR es:[edi],eax
  422e38:	outs   dx,BYTE PTR ds:[esi]
  422e39:	xor    ah,ah
  422e3b:	pop    edx
  422e3c:	jg     0x422de8
  422e3e:	sub    DWORD PTR [edx+0x54be50d9],0x47aac0
  422e48:	int    0x8
  422e4a:	or     ebx,esp
  422e4c:	out    0xf8,al
  422e4e:	bound  eax,QWORD PTR [eax-0xf2be51f]
  422e54:	popf   
  422e55:	add    ebx,edi
  422e57:	es hlt 
  422e59:	jge    0x422de6
  422e5b:	jl     0x422e6c
  422e5d:	sbb    al,0x85
  422e5f:	jae    0x422e79
  422e61:	fwait
  422e62:	mov    edi,0xf3784715
  422e67:	jp     0x422eb3
  422e69:	pop    es
  422e6a:	and    bh,al
  422e6c:	xchg   ebx,eax
  422e6d:	imul   esi,DWORD PTR [ebx+0x30],0xffffffae
  422e71:	shl    BYTE PTR [eax-0x719f997a],1
  422e77:	mov    fs,WORD PTR [eax]
  422e79:	push   ebx
  422e7a:	mov    ?,WORD PTR [ecx-0x1dace081]
  422e80:	mov    DWORD PTR [ebp-0xc],edx
  422e83:	mov    bl,0x24
  422e85:	cmp    DWORD PTR [eax+0x1e0a754d],ebx
  422e8b:	int    0x10
  422e8d:	pusha  
  422e8e:	add    al,0x45
  422e90:	repz sub DWORD PTR [esi+0x6],esp
  422e94:	aad    0xcc
  422e96:	cld    
  422e97:	outs   dx,DWORD PTR ds:[esi]
  422e98:	call   0x7c38b123
  422e9d:	mov    cl,0x75
  422e9f:	aad    0x9
  422ea1:	pop    ebp
  422ea2:	test   DWORD PTR [ecx-0xf56102c],eax
  422ea8:	out    0xb,al
  422eaa:	mov    cl,0xad
  422eac:	lock mov BYTE PTR [bp+di+0x3b7a],cl
  422eb2:	inc    ebp
  422eb3:	rcl    DWORD PTR [ebp-0x10],0xa3
  422eb7:	dec    esi
  422eb8:	dec    ebp
  422eb9:	out    dx,eax
  422eba:	std    
  422ebb:	ins    BYTE PTR es:[edi],dx
  422ebc:	xchg   ch,ah
  422ebe:	pusha  
  422ebf:	push   eax
  422ec0:	aaa    
  422ec1:	mov    ah,0xba
  422ec3:	fwait
  422ec4:	out    0x16,al
  422ec6:	fcmovne st,st(1)
  422ec8:	jmp    ebp
  422eca:	cmp    eax,0x765b596
  422ecf:	(bad)  
  422ed0:	imul   ecx,ebx,0x41d1a13
  422ed6:	push   edx
  422ed7:	and    dh,BYTE PTR [edx]
  422ed9:	adc    BYTE PTR [eax],0xaf
  422edc:	aam    0x4c
  422ede:	mov    dl,0x17
  422ee0:	sar    DWORD PTR [eax+0x4d],0x62
  422ee4:	sub    al,0x81
  422ee6:	jmp    DWORD PTR [ebx]
  422ee8:	outs   dx,DWORD PTR ds:[esi]
  422ee9:	aaa    
  422eea:	lods   eax,DWORD PTR gs:[esi]
  422eec:	cmp    eax,0x3454d730
  422ef1:	sbb    al,0x7c
  422ef3:	jo     0x422f01
  422ef5:	rep lods eax,DWORD PTR ds:[esi]
  422ef7:	push   es
  422ef8:	retf   0x3e23
  422efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422efc:	mov    ecx,0x2494a3b5
  422f01:	inc    eax
  422f02:	add    ebx,ebx
  422f04:	xor    ch,cl
  422f06:	mov    BYTE PTR [ebx-0x71],bl
  422f09:	push   cs
  422f0a:	retf   
  422f0b:	punpcklbw mm7,DWORD PTR [ebx+0x48]
  422f0f:	jne    0x422f2f
  422f11:	pop    ecx
  422f12:	inc    edx
  422f13:	scas   al,BYTE PTR es:[edi]
  422f14:	cmp    BYTE PTR [edx-0x589bf020],dl
  422f1a:	mov    al,ds:0xd879cb31
  422f1f:	xchg   BYTE PTR [ebx+0x299a558d],ch
  422f25:	mov    edi,0x4f456dca
  422f2a:	dec    ebx
  422f2b:	popa   
  422f2c:	pop    es
  422f2d:	pop    es
  422f2e:	bound  edi,QWORD PTR [eax]
  422f30:	fsub   DWORD PTR [esi-0x5d]
  422f33:	dec    ebx
  422f34:	cmp    BYTE PTR [ebx-0x52],al
  422f37:	fld    DWORD PTR [esi-0x5c01bb0b]
  422f3d:	jae    0x422f95
  422f3f:	jo     0x422f67
  422f41:	xor    esi,DWORD PTR [ebx+0x5d]
	...
  422f50:	add    BYTE PTR [edx],al
  422f52:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  422f58:	cmp    esi,DWORD PTR [esi-0x2f481422]
  422f5e:	push   ebp
  422f5f:	bound  eax,QWORD PTR [edi]
  422f61:	(bad)  
  422f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f63:	add    DWORD PTR [eax],eax
  422f65:	stos   DWORD PTR es:[edi],eax
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    bl,ah
  422f6a:	dec    esi
  422f6b:	dec    edi
  422f6c:	or     BYTE PTR [ecx],ah
  422f6e:	icebp  
  422f6f:	and    al,0xfb
  422f71:	test   al,0x4e
  422f73:	(bad)  ds:0x8e6958cd
  422f79:	js     0x422f1d
  422f7b:	outs   dx,BYTE PTR ds:[esi]
  422f7c:	sbb    esp,ecx
  422f7e:	and    BYTE PTR [edi-0x4b],ch
  422f81:	xlat   BYTE PTR ds:[ebx]
  422f82:	mov    edx,0xc3e5294d
  422f87:	push   es
  422f88:	sub    BYTE PTR [ebp-0x32d05fec],bl
  422f8e:	mov    edi,0x6b0b0b5d
  422f93:	cdq    
  422f94:	icebp  
  422f95:	es sahf 
  422f97:	test   eax,0x1dd4ee29
  422f9d:	popa   
  422f9e:	arpl   WORD PTR [edx-0x30],ax
  422fa1:	or     BYTE PTR [eax-0x47dd47dc],bl
  422fa7:	into   
  422fa8:	std    
  422fa9:	iret   
  422faa:	sahf   
  422fab:	cld    
  422fac:	out    dx,al
  422fad:	sub    dl,BYTE PTR ds:0x5e24d428
  422fb3:	repz and BYTE PTR [edx-0x60],dl
  422fb7:	and    esi,ebp
  422fb9:	clc    
  422fba:	pop    edi
  422fbb:	jb     0x423013
  422fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fbe:	xchg   DWORD PTR [eax],edi
  422fc0:	sbb    cl,BYTE PTR [esi+0x26]
  422fc3:	xchg   edi,eax
  422fc4:	xor    BYTE PTR [edx],0x9a
  422fc7:	push   0x5ae03e50
  422fcc:	xor    esp,ebx
  422fce:	push   ecx
  422fcf:	cmp    bh,0x3
  422fd2:	fidiv  DWORD PTR [ebp+0xc]
  422fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fd6:	scas   al,BYTE PTR es:[edi]
  422fd7:	sbb    ebp,eax
  422fd9:	sub    al,0x5e
  422fdb:	sub    ecx,ebx
  422fdd:	addr16 add eax,0xd82673c6
  422fe3:	(bad)  
  422fe4:	neg    BYTE PTR [edi]
  422fe6:	push   0x39
  422fe8:	test   al,0x41
  422fea:	and    BYTE PTR [ecx-0x1f],0x3b
  422fee:	das    
  422fef:	lahf   
  422ff0:	leave  
  422ff1:	jmp    0x8933e489
  422ff6:	fiadd  DWORD PTR [ebp-0x37]
  422ff9:	ret    
  422ffa:	xchg   esp,eax
  422ffb:	push   cs
  422ffc:	mov    edi,0x9ef12505
  423001:	jbe    0x422f97
  423003:	call   0xc6ae0c18
  423008:	inc    ebp
  423009:	mov    ebp,0xb31e905d
  42300e:	and    ebp,0xf0ee6566
  423014:	es (bad) 
  423017:	adc    DWORD PTR [ecx],0xb9bebc22
  42301d:	push   ds
  42301e:	scas   al,BYTE PTR es:[edi]
  42301f:	loope  0x42306b
  423021:	dec    esi
  423022:	lds    esp,FWORD PTR [ebx+0x47]
  423025:	rol    bl,1
  423027:	inc    edx
  423028:	push   cs
  423029:	inc    ebp
  42302a:	sub    al,BYTE PTR [ebx+0x51]
  42302d:	sar    BYTE PTR [esi-0x2e],cl
  423030:	inc    ebx
  423031:	sub    DWORD PTR [ebx+edi*8-0x425d976d],edx
  423038:	jns    0x422fff
  42303a:	fs mov gs:0xf3f377f8,eax
  423041:	pop    edx
  423042:	int    0xf
  423044:	adc    ah,BYTE PTR [ecx+0x2e]
  423047:	icebp  
  423048:	daa    
  423049:	hlt    
  42304a:	and    DWORD PTR [ebp-0x51],edx
  42304d:	int    0xc9
  42304f:	inc    esi
  423050:	and    al,BYTE PTR [edi+0x10]
  423053:	fisttp DWORD PTR [ebx-0x56c54396]
  423059:	fnstcw WORD PTR [edi+0x78cd86a0]
  42305f:	push   0x6dc04bfa
  423064:	imul   eax,DWORD PTR [esi],0xffffffb4
  423067:	mov    al,ds:0x76fc1927
  42306c:	mov    edi,0xbc975438
  423071:	outs   dx,BYTE PTR ds:[esi]
  423072:	pop    esp
  423073:	jae    0x4230ca
  423075:	(bad)  
  423076:	ins    BYTE PTR es:[edi],dx
  423077:	cwde   
  423078:	aad    0xb8
  42307a:	xlat   BYTE PTR ds:[ebx]
  42307b:	jne    0x4230a0
  42307d:	and    esi,DWORD PTR [ecx-0x1bd99bab]
  423083:	jmp    0x423032
  423085:	test   eax,0x538f76c8
  42308a:	pop    edi
  42308b:	icebp  
  42308c:	je     0x4230e7
  42308e:	out    dx,al
  42308f:	pushf  
  423090:	popa   
  423091:	daa    
  423092:	gs mov dl,bl
  423095:	jle    0x42305c
  423097:	call   0x503d:0x7c0d1e9e
  42309e:	gs inc esp
  4230a0:	sbb    al,0x16
  4230a2:	inc    esp
  4230a3:	cmc    
  4230a4:	scas   al,BYTE PTR es:[edi]
  4230a5:	mov    edx,0xb5dd526c
  4230aa:	adc    dl,BYTE PTR [edi]
  4230ac:	dec    edi
  4230ad:	push   0xe8e1eca1
  4230b2:	jne    0x4230e7
  4230b4:	les    ecx,FWORD PTR [ebx]
  4230b6:	push   0x2b
  4230b8:	js     0x42309c
  4230ba:	popa   
  4230bb:	daa    
  4230bc:	ret    
  4230bd:	addr16 es push 0x447c443
  4230c4:	jnp    0x4230c0
  4230c6:	shr    DWORD PTR [ecx],0xaa
  4230c9:	(bad)  
  4230ca:	push   ebx
  4230cb:	mov    ebx,0x5408ee6a
  4230d0:	mov    ah,0xcf
  4230d2:	mov    ds:0xb32bd2df,eax
  4230d7:	cmp    ah,bh
  4230d9:	pop    es
  4230da:	int3   
  4230db:	sub    cl,BYTE PTR [esp+eiz*4-0x442bc61d]
  4230e2:	fistp  QWORD PTR [ecx]
  4230e4:	xbegin 0xe62ea597
  4230ea:	shl    DWORD PTR [esi],cl
  4230ec:	dec    ecx
  4230ed:	adc    ecx,DWORD PTR [ecx]
  4230ef:	mov    ebp,0x6fec1722
  4230f4:	xor    al,0x9a
  4230f6:	xor    eax,DWORD PTR [esi-0x1194e3b3]
  4230fc:	fldenv [esi-0x471d0b1b]
  423102:	push   ebx
  423103:	fld    TBYTE PTR [edx-0x68]
  423106:	test   al,0xbc
  423108:	push   esp
  423109:	js     0x4230c4
  42310b:	mov    BYTE PTR [ebx+0x14eea541],0xc7
  423112:	jmp    0x4230ac
  423114:	inc    esp
  423115:	cmc    
  423116:	pop    ebx
  423117:	push   eax
  423118:	or     eax,0xca6e43c3
  42311d:	out    dx,al
  42311e:	add    al,0x7b
  423120:	add    al,0x34
  423122:	xchg   edi,eax
  423123:	xchg   esi,ebp
  423125:	sub    eax,esi
  423127:	pop    ds
  423128:	sub    BYTE PTR [ebx],al
  42312a:	in     al,0x84
  42312c:	pop    eax
  42312d:	bswap  eax
  42312f:	daa    
  423130:	xor    al,0x23
  423132:	or     edx,DWORD PTR [ebx-0x1a]
  423135:	daa    
  423136:	repnz cwde 
  423138:	mov    dh,bl
  42313a:	xchg   ecx,eax
  42313b:	jecxz  0x4230e0
  42313d:	and    eax,0xd04825f
  423142:	ins    DWORD PTR es:[edi],dx
  423143:	test   al,0xc5
  423145:	sub    DWORD PTR [eax+esi*2],ebx
  423148:	jp     0x42316e
  42314a:	xor    ebp,DWORD PTR [esp+eiz*2-0x19d36733]
  423151:	data16 int 0xfa
  423154:	outs   dx,BYTE PTR ds:[esi]
  423155:	(bad)  
  423156:	(bad)  
  423157:	mov    cl,0x33
  423159:	and    al,0xf3
  42315b:	or     ch,BYTE PTR [esi+0x3e3062f5]
  423161:	mov    bl,0x2a
  423163:	and    ch,BYTE PTR [ebx-0x73f30453]
  423169:	repnz push ds
  42316b:	add    al,0xae
  42316d:	aas    
  42316e:	dec    eax
  42316f:	lods   al,BYTE PTR ds:[esi]
  423170:	aaa    
  423171:	gs jp  0x423162
  423174:	sub    ebx,edx
  423176:	cmp    DWORD PTR [edx-0x58],esi
  423179:	xchg   ebp,eax
  42317a:	sub    BYTE PTR [ecx+ecx*2-0x19d346a],cl
  423181:	lods   eax,DWORD PTR ds:[esi]
  423182:	pop    eax
  423183:	sbb    eax,0x1523580
  423188:	call   0x5e639c99
  42318d:	inc    edx
  42318e:	sbb    ecx,DWORD PTR [edi+0x66405985]
  423194:	je     0x4231da
  423196:	push   ecx
  423197:	arpl   di,bx
  423199:	push   ss
  42319a:	mov    esi,0x79ad1479
  42319f:	fadd   DWORD PTR [eax+0x8]
  4231a2:	jae    0x423178
  4231a4:	or     al,BYTE PTR [ecx+0x34906ed9]
  4231aa:	sbb    ecx,edx
  4231ac:	shr    DWORD PTR [esi+0xa],cl
  4231af:	retf   0xbc1
  4231b2:	add    ebx,ebx
  4231b4:	pop    ebx
  4231b5:	mov    esp,0xb6a09293
  4231ba:	call   0xebb2:0x71a07ac0
  4231c1:	sub    ecx,0x2d
  4231c4:	jle    0x4231d9
  4231c6:	xchg   DWORD PTR [edi+ebp*4],esp
  4231c9:	xchg   edi,eax
  4231ca:	leave  
  4231cb:	loop   0x42315b
  4231cd:	add    bl,al
  4231cf:	imul   edi,ecx,0xfc0d06be
  4231d5:	pop    edi
  4231d6:	leave  
  4231d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d8:	test   BYTE PTR [edx],al
  4231da:	imul   ecx,DWORD PTR [ebp+0x2e],0x29
  4231de:	ror    BYTE PTR [ebx-0x616dfae7],0x32
  4231e5:	dec    esi
  4231e6:	cmp    bh,dh
  4231e8:	pop    ebx
  4231e9:	jecxz  0x4231f0
  4231eb:	mov    esi,0x6dc8fcb4
  4231f0:	mov    ch,0xd4
  4231f2:	int3   
  4231f3:	pushf  
  4231f4:	dec    esi
  4231f5:	in     al,0xc9
  4231f7:	addr16 push ss
  4231f9:	mov    bl,0xa1
  4231fb:	or     BYTE PTR [ebx],cl
  4231fd:	cs dec ebp
  4231ff:	cmp    esp,DWORD PTR [ecx]
  423201:	sub    ebx,0x4e
  423204:	and    al,0x47
  423206:	(bad)  
  423208:	sti    
  423209:	mov    BYTE PTR [edi],0x12
  42320c:	sbb    BYTE PTR [esi-0x45],dl
  42320f:	call   0xbb3e94a0
  423214:	int3   
  423215:	xor    BYTE PTR [esi],cl
  423217:	jae    0x423240
  423219:	sbb    eax,0x69caddd
  42321e:	mov    eax,ds:0xcee74182
  423223:	pop    ds
  423224:	mov    dl,0x24
  423226:	mov    esi,0xaaa3ac12
  42322b:	ret    0xcd77
  42322e:	sbb    dl,BYTE PTR [ebx-0x3cc23354]
  423234:	mov    ah,0xfb
  423236:	push   esp
  423237:	inc    esi
  423238:	ins    BYTE PTR es:[edi],dx
  423239:	ds stos DWORD PTR es:[edi],eax
  42323b:	jno    0x4231bd
  42323d:	inc    edi
  42323e:	pop    edx
  42323f:	retf   
  423240:	push   0xffffffa1
  423242:	fistp  DWORD PTR [esi+edi*2-0x12]
  423246:	jnp    0x423283
  423248:	jp     0x423293
  42324a:	dec    ecx
  42324b:	mov    WORD PTR [esi],cs
  42324d:	adc    al,0x46
  423250:	sbb    dl,BYTE PTR [ecx]
  423252:	jno    0x42324a
  423254:	stos   DWORD PTR es:[edi],eax
  423255:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423257:	push   ebp
  423258:	add    DWORD PTR [esp-0x77],ecx
  42325c:	push   edi
  42325d:	xchg   ebp,eax
  42325e:	add    bh,bl
  423260:	pop    esi
  423261:	cwde   
  423262:	fild   QWORD PTR [edx]
  423264:	mov    al,0x31
  423266:	and    dl,dl
  423268:	jmp    esi
  42326a:	xchg   ecx,eax
  42326b:	shr    DWORD PTR [eax+edi*1+0x398b21a7],1
  423272:	mov    ah,0xdc
  423274:	push   edi
  423275:	das    
  423276:	fcom   QWORD PTR [eax-0x1f482d0e]
  42327c:	and    eax,0xbf08dd4d
  423281:	int3   
  423282:	nop
  423283:	xchg   edi,eax
  423284:	icebp  
  423285:	xchg   esp,eax
  423286:	adc    BYTE PTR [edx+0x6f71b8d5],dl
  42328c:	repnz lods eax,DWORD PTR ds:[esi]
  42328e:	add    DWORD PTR [edx-0x65dc24e2],esi
  423294:	mov    eax,ds:0xbe89b996
  423299:	(bad)  
  42329b:	aad    0xe
  42329d:	cdq    
  42329e:	adc    BYTE PTR [ebp+0x237ce452],al
  4232a4:	xchg   ecx,eax
  4232a5:	ja     0x42328e
  4232a7:	test   BYTE PTR [eax+0x22],cl
  4232aa:	jl     0x4232f4
  4232ac:	jg     0x42327d
  4232ae:	jecxz  0x42325a
  4232b0:	dec    esi
  4232b1:	mov    ah,dh
  4232b3:	fidivr WORD PTR [esp+esi*8+0x18ab2a6a]
  4232ba:	adc    esi,DWORD PTR [esi+0xa]
  4232bd:	pop    ebp
  4232be:	add    BYTE PTR [edi-0x2353ee86],bh
  4232c4:	inc    ecx
  4232c5:	loope  0x423305
  4232c7:	in     eax,dx
  4232c8:	sub    ch,BYTE PTR [ebx+0x95851bc]
  4232ce:	xchg   edi,eax
  4232cf:	jg     0x4232ad
  4232d1:	shl    bl,0x64
  4232d4:	popf   
  4232d5:	adc    BYTE PTR [edi],ah
  4232d7:	loop   0x423357
  4232d9:	retf   
  4232da:	jge    0x423289
  4232dc:	loop   0x42329c
  4232de:	xchg   ecx,eax
  4232df:	sbb    DWORD PTR fs:[eax],edx
  4232e2:	xor    BYTE PTR [edx+0x54],dl
  4232e5:	(bad)  
  4232e6:	aad    0x84
  4232e8:	ins    DWORD PTR es:[edi],dx
  4232e9:	mov    edx,0xd491a191
  4232ee:	or     dh,BYTE PTR [edi+0x2a]
  4232f1:	inc    ecx
  4232f2:	cs iret 
  4232f4:	cmp    bl,BYTE PTR [ebx+0x5ad0c020]
  4232fa:	or     edi,edx
  4232fc:	ss jg  0x42336b
  4232ff:	inc    edi
  423300:	add    DWORD PTR [ecx],esp
  423302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423303:	inc    edi
  423304:	jo     0x42336a
  423306:	and    eax,0x8a279b7e
  42330b:	jno    0x423389
  42330d:	adc    BYTE PTR [edi-0x73],0xa7
  423311:	push   0x2a3e
	...
  42331e:	add    BYTE PTR [eax],al
  423320:	add    dl,bh
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x78
  42332e:	jecxz  0x423374
  423330:	inc    edi
  423331:	jb     0x4232de
  423333:	add    DWORD PTR [eax],eax
  423335:	stos   DWORD PTR es:[edi],eax
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    al,dh
  42333a:	mov    BYTE PTR [eax+edi*1],dh
  42333d:	jmp    0x42339c
  42333f:	shl    DWORD PTR [esi],cl
  423341:	addr16 mov bh,0x7b
  423344:	and    ah,BYTE PTR [edx]
  423346:	pop    ss
  423347:	sub    ah,BYTE PTR [eax+0x6eb084a]
  42334d:	pop    es
  42334e:	repz xchg esp,eax
  423350:	enter  0x66f7,0xd0
  423354:	mov    DWORD PTR [edi],edi
  423356:	stos   BYTE PTR es:[edi],al
  423357:	cs popf 
  423359:	pop    edx
  42335a:	sbb    bx,bx
  42335d:	les    ebx,FWORD PTR [ebx]
  42335f:	inc    esi
  423360:	or     BYTE PTR [edi+0x6a],al
  423363:	loopne 0x4233e4
  423365:	test   eax,0x7a8a91c1
  42336a:	sbb    DWORD PTR [eax],ebx
  42336c:	push   edi
  42336d:	(bad)  
  42336e:	pop    esp
  42336f:	and    BYTE PTR [eax+0x1b0dfcf5],bl
  423375:	xchg   ebp,eax
  423376:	push   ebx
  423377:	push   ds
  423378:	jns    0x423328
  42337a:	dec    DWORD PTR [ebx]
  42337c:	dec    esi
  42337d:	in     al,dx
  42337e:	inc    ebp
  42337f:	(bad)  
  423380:	std    
  423381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423382:	dec    edx
  423383:	xor    al,0xe5
  423385:	mov    ds:0x286affa4,al
  42338a:	mov    ch,0x89
  42338c:	xor    edi,DWORD PTR [ebp+0x75a5eb47]
  423392:	adc    eax,0x98d4dcf7
  423397:	push   cs
  423398:	push   esi
  423399:	push   ebx
  42339a:	push   eax
  42339b:	mov    ch,0xc5
  42339d:	stc    
  42339e:	jns    0x4233c5
  4233a0:	push   eax
  4233a1:	add    bh,BYTE PTR [edi+0x35]
  4233a4:	push   0xffffffc9
  4233a6:	(bad)  
  4233a7:	mov    ch,ah
  4233a9:	arpl   WORD PTR ss:[edx],bx
  4233ac:	je     0x423381
  4233ae:	aas    
  4233af:	and    edi,edx
  4233b1:	loopne 0x423385
  4233b3:	sar    BYTE PTR [ebp-0x1a446dd6],1
  4233b9:	add    bh,BYTE PTR [edx+0x72]
  4233bc:	call   0xc9056fbc
  4233c1:	mov    DWORD PTR [ecx+eax*4-0x6cbd781c],ebx
  4233c8:	dec    edx
  4233c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233ca:	push   esi
  4233cb:	jae    0x42343c
  4233cd:	bound  ebx,QWORD PTR ds:0xe7c88653
  4233d3:	out    dx,eax
  4233d4:	mov    edi,0x7f40d55e
  4233d9:	test   eax,0x96338c2f
  4233de:	jmp    0x91149e7f
  4233e3:	ret    
  4233e4:	loope  0x423426
  4233e6:	ss in  eax,0xbd
  4233e9:	jns    0x423391
  4233eb:	add    DWORD PTR [edx],ecx
  4233ed:	mov    esp,0xdc270f22
  4233f2:	sbb    DWORD PTR [esi+ebx*4],ebx
  4233f5:	push   0xffffffa3
  4233f7:	rcr    bl,0x5
  4233fa:	pop    es
  4233fb:	mov    ds:0xb186e32f,al
  423400:	cmc    
  423401:	mov    esi,0xdd8baf14
  423406:	cs xchg esi,eax
  423408:	dec    ebp
  423409:	adc    al,0x10
  42340b:	mov    ah,0x1f
  42340d:	mov    cl,0x37
  42340f:	sub    eax,0x4c1b38ac
  423414:	ss ins BYTE PTR es:[edi],dx
  423416:	jb     0x42340c
  423418:	aas    
  423419:	sbb    DWORD PTR [esi-0x36baf8c2],esp
  42341f:	lahf   
  423420:	mov    esi,0x4014f2cb
  423425:	inc    eax
  423426:	(bad)  
  423428:	add    al,0x58
  42342a:	pop    edi
  42342b:	push   eax
  42342c:	nop    esp
  42342f:	dec    esp
  423430:	stos   DWORD PTR es:[edi],eax
  423431:	dec    esp
  423432:	sbb    dh,BYTE PTR [ebp+0x2a]
  423435:	or     edi,eax
  423437:	mul    DWORD PTR [ecx-0x11]
  42343a:	adc    al,0xba
  42343c:	inc    edx
  42343d:	pop    esp
  42343e:	mov    dh,0xaf
  423440:	push   0x7d
  423442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423443:	mov    ds:0xb89a1c0f,al
  423448:	push   esi
  423449:	fld    DWORD PTR [ebp+0x3327d044]
  42344f:	or     al,0x2f
  423451:	add    BYTE PTR [edi],cl
  423453:	mov    WORD PTR [ecx],gs
  423455:	xor    DWORD PTR ds:0x444184a3,ebp
  42345b:	fcomi  st,st(0)
  42345e:	cmp    DWORD PTR [ebp-0x4f631890],eax
  423464:	gs lock pop es
  423467:	mov    ds:0xa41b0e93,al
  42346c:	jmp    0xe6ef:0x4b5f3040
  423473:	dec    ebp
  423474:	ret    0x1bd9
  423477:	mov    ss,WORD PTR [edi-0x5a]
  42347a:	into   
  42347b:	aad    0xbd
  42347d:	pushf  
  42347e:	or     eax,0x19fbdc6c
  423483:	jmp    0x23bd4b11
  423488:	inc    esi
  423489:	jle    0x4234d0
  42348b:	imul   ebp,DWORD PTR [eax],0xffffffa2
  42348e:	neg    edi
  423490:	aaa    
  423491:	mul    BYTE PTR [ebx+0xc]
  423494:	call   0xce68:0x1e63caf3
  42349b:	and    BYTE PTR [esi+0x68],dh
  42349e:	pop    esi
  42349f:	ret    
  4234a0:	(bad)  
  4234a3:	pop    ss
  4234a4:	out    0x86,al
  4234a6:	les    ecx,FWORD PTR [ebp-0x4f158947]
  4234ac:	inc    eax
  4234ad:	inc    ecx
  4234ae:	in     eax,0xac
  4234b0:	ficom  DWORD PTR [eax-0xf]
  4234b3:	jbe    0x42344c
  4234b5:	sbb    eax,0x3abe6ffb
  4234ba:	jae    0x4234fe
  4234bc:	fwait
  4234bd:	js     0x423495
  4234bf:	test   al,0xd1
  4234c1:	xor    al,0x9d
  4234c3:	mov    es,WORD PTR [ebx+edi*8+0x7f64048b]
  4234ca:	shl    BYTE PTR ds:0x36a940f9,1
  4234d0:	aad    0x60
  4234d2:	or     esp,0x2d49909c
  4234d8:	cli    
  4234d9:	inc    ebp
  4234da:	sbb    DWORD PTR [edx-0x5c395249],esi
  4234e0:	nop
  4234e1:	sahf   
  4234e2:	and    ah,bl
  4234e4:	fild   DWORD PTR [esi+0x6a3bd0e2]
  4234ea:	mov    ds:0xdf124df9,eax
  4234ef:	inc    eax
  4234f0:	jb     0x42355d
  4234f2:	or     edi,0x9dee4ea1
  4234f8:	imul   ebp,DWORD PTR [ebp-0x759f6e40],0x97dabd8f
  423502:	push   eax
  423503:	sub    al,0xf9
  423505:	clc    
  423506:	jae    0x42353a
  423508:	shl    esp,0xdc
  42350b:	mov    ebp,0x908de01b
  423510:	mov    eax,ds:0x6275b6b1
  423515:	rcl    BYTE PTR [edx-0x7a],1
  423518:	inc    ecx
  423519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42351a:	scas   al,BYTE PTR es:[edi]
  42351b:	lods   eax,DWORD PTR ds:[esi]
  42351c:	scas   al,BYTE PTR es:[edi]
  42351d:	dec    esp
  42351e:	inc    ebp
  42351f:	xlat   BYTE PTR ds:[ebx]
  423520:	call   0x2950:0x7128c214
  423527:	neg    BYTE PTR [esi+esi*2-0x78]
  42352b:	jge    0x4234d7
  42352d:	(bad)  
  42352e:	mov    edi,0xc0044178
  423533:	push   ebp
  423534:	mov    ah,0x55
  423536:	pop    esi
  423537:	mov    ebp,0xdaeb0c24
  42353c:	adc    dl,BYTE PTR [ebp-0xe53c43]
  423542:	test   al,0xc4
  423544:	cmp    BYTE PTR [ebx+0x38],ch
  423547:	xchg   esi,eax
  423548:	dec    ecx
  423549:	push   ds
  42354a:	mov    ch,0x18
  42354c:	push   ebx
  42354d:	addr16 popf 
  42354f:	fnstsw WORD PTR [ebx+eax*4]
  423552:	push   DWORD PTR [edx+edi*1-0x45]
  423556:	sub    eax,0x1fa4e7ba
  42355b:	push   eax
  42355c:	fstp   QWORD PTR [ebp+0x17f14fab]
  423562:	xor    BYTE PTR [edx],ch
  423564:	cmp    eax,0xe7b0d0ff
  423569:	xor    DWORD PTR ss:0x8c50dc1e,esp
  423570:	fs inc edi
  423572:	je     0x4235da
  423574:	inc    edi
  423575:	mov    ebp,0xce8dcd45
  42357a:	dec    esi
  42357c:	or     bl,BYTE PTR [ebx]
  42357e:	xchg   DWORD PTR [ebx],ebx
  423580:	outs   dx,BYTE PTR ds:[esi]
  423581:	pop    esp
  423582:	and    eax,0x5750d64d
  423587:	pop    eax
  423588:	xor    esi,esp
  42358a:	and    eax,0xb6638558
  42358f:	mov    DWORD PTR [esp+edx*4-0x55fa0161],edx
  423596:	or     al,0xb0
  423598:	xchg   esi,eax
  423599:	cmp    bh,al
  42359b:	pop    ss
  42359c:	test   eax,0xfb04ef4
  4235a1:	inc    DWORD PTR [ecx+0x654d92de]
  4235a7:	stc    
  4235a8:	xchg   ecx,eax
  4235a9:	pop    eax
  4235aa:	stc    
  4235ab:	(bad)  
  4235ac:	xchg   ecx,eax
  4235ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ae:	and    BYTE PTR [edi-0x44],al
  4235b1:	sbb    cl,bh
  4235b3:	cmp    ebp,ebp
  4235b5:	mov    DWORD PTR [edi+edi*2],edi
  4235b8:	xchg   esi,eax
  4235b9:	into   
  4235ba:	mov    DWORD PTR [ebx],0x3fb43a37
  4235c0:	mov    edx,0x12bca3f1
  4235c5:	push   eax
  4235c6:	push   ebp
  4235c7:	icebp  
  4235c8:	cmp    al,0x87
  4235cb:	pop    edi
  4235cc:	shr    edi,0x18
  4235cf:	cmp    al,0x77
  4235d1:	cmp    DWORD PTR [esi],ebx
  4235d3:	bound  ecx,QWORD PTR [esi+0x15410f30]
  4235d9:	neg    ebp
  4235db:	bound  ebp,QWORD PTR [edi-0x6a7c0520]
  4235e1:	lock mov al,BYTE PTR [ecx+esi*2]
  4235e5:	dec    edx
  4235e6:	rol    BYTE PTR [ebp+0x64],1
  4235e9:	cmp    eax,DWORD PTR [ebp+0x73]
  4235ec:	dec    ecx
  4235ed:	mov    ?,WORD PTR [ebx-0x60]
  4235f0:	icebp  
  4235f1:	dec    DWORD PTR [edi-0x3acf668b]
  4235f7:	inc    ecx
  4235f8:	test   eax,0x23124ca7
  4235fd:	les    ebx,FWORD PTR [ebx]
  4235ff:	add    DWORD PTR [esi+0x66db57],edi
  423605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423606:	or     al,dl
  423608:	push   0x3e
  42360a:	dec    edi
  42360b:	cbw    
  42360d:	xor    DWORD PTR [ebx],0xe975ba8d
  423613:	imul   eax,DWORD PTR [esi],0x1e
  423616:	mov    eax,0x12eba44b
  42361b:	push   esp
  42361c:	sbb    eax,0xbaf08ecb
  423621:	pop    ebp
  423622:	data16 outs dx,BYTE PTR ds:[esi]
  423624:	mov    ds:0x71a9027a,al
  423629:	push   ss
  42362a:	cmp    edi,0xee89e3c9
  423630:	es (bad) 
  423632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423634:	inc    ebp
  423635:	fs inc esi
  423637:	sbb    bh,BYTE PTR [esi+0x1b]
  42363a:	sub    DWORD PTR [ebx+eax*8],edi
  42363d:	ret    0xcc2
  423640:	mov    eax,eax
  423642:	addr16 push eax
  423644:	hlt    
  423645:	lock sbb ah,al
  423648:	gs and al,0xb2
  42364b:	dec    esi
  42364c:	adc    edx,DWORD PTR ds:0xed9c9ad2
  423652:	mov    eax,ds:0x24d12b3d
  423657:	mov    ch,0xfc
  423659:	int3   
  42365a:	into   
  42365b:	fidivr DWORD PTR [eax+0x39cc0c2e]
  423661:	popa   
  423662:	add    eax,0x2eed27f7
  423667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423668:	xchg   DWORD PTR [edi],esi
  42366a:	js     0x423649
  42366c:	test   BYTE PTR [ebx-0x3db7ce85],ah
  423672:	dec    ecx
  423673:	out    0xeb,eax
  423675:	out    dx,eax
  423676:	rcl    DWORD PTR [esi*8+0x1eed9663],1
  42367d:	aad    0x78
  42367f:	int3   
  423680:	in     eax,0xd7
  423682:	into   
  423683:	dec    esp
  423684:	cmp    cl,BYTE PTR [ecx+0xe]
  423687:	add    edi,ecx
  423689:	daa    
  42368a:	rcr    BYTE PTR [ecx-0x68ed5ecf],cl
  423690:	or     DWORD PTR [ebx],ebx
  423692:	ficomp DWORD PTR [ebx+0x3c]
  423695:	out    0x51,al
  423697:	xchg   esp,eax
  423698:	cld    
  423699:	ins    BYTE PTR es:[edi],dx
  42369a:	adc    al,ch
  42369c:	mov    bl,0x46
  42369e:	xchg   ebx,eax
  42369f:	mov    dh,0x20
  4236a1:	iret   
  4236a2:	xchg   esi,eax
  4236a3:	adc    BYTE PTR ds:0x79045931,ah
  4236a9:	push   cs
  4236aa:	jae    0x42365b
  4236ac:	add    ah,BYTE PTR [ecx+0x53]
  4236af:	dec    edx
  4236b0:	mov    edi,0x27a84f54
  4236b5:	lahf   
  4236b6:	and    eax,0xee53c743
  4236bb:	sub    DWORD PTR [ecx+eax*1],ebp
  4236be:	(bad)  
  4236bf:	mov    dl,0x66
  4236c1:	out    0xde,eax
  4236c3:	call   0x3a43ca2b
  4236c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c9:	adc    esi,esi
  4236cb:	ja     0x4236c7
  4236cd:	mov    BYTE PTR [ecx],cl
  4236cf:	popf   
  4236d0:	jns    0x423676
  4236d2:	arpl   WORD PTR [ecx],dx
  4236d4:	dec    esi
  4236d5:	sbb    al,cl
  4236d7:	(bad)  
  4236d8:	out    dx,eax
  4236d9:	sub    al,0xc7
  4236db:	imul   esi,ecx,0x28c2f47e
  4236e1:	cmp    DWORD PTR [edx+0xe7],esi
	...
  4236ef:	add    BYTE PTR [eax],al
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x4f141ef4],dh
  423701:	sbb    eax,0xab0001af
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [ecx],ah
  42370a:	sub    eax,0xebc4b7ae
  42370f:	fsubrp st(0),st
  423711:	mov    edx,0x1e7ee1c0
  423716:	(bad)
  42371a:	lea    esp,[edi+0x44]
  42371d:	xchg   esp,eax
  42371e:	and    DWORD PTR [ecx-0x4a],esp
  423721:	das    
  423722:	pop    ss
  423723:	sbb    ecx,ebx
  423725:	(bad)  
  423727:	icebp  
  423728:	enter  0x80f0,0x6
  42372c:	sbb    eax,DWORD PTR [eax*8-0x5cd83ad0]
  423733:	scas   al,BYTE PTR es:[edi]
  423734:	div    BYTE PTR [ebx-0x25dce444]
  42373a:	mov    al,ds:0x92e24e4b
  42373f:	sti    
  423740:	mov    al,0xbc
  423742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423743:	adc    DWORD PTR [esi-0x64],esi
  423746:	and    eax,0x30775c96
  42374b:	mov    dl,0x36
  42374d:	and    BYTE PTR [ebp+0x4ee2d642],bl
  423753:	mov    dh,0x76
  423755:	or     al,bl
  423757:	in     eax,dx
  423758:	je     0x4237c9
  42375a:	pop    ebp
  42375b:	int    0x2b
  42375d:	adc    ecx,ebp
  42375f:	pop    edx
  423760:	mov    bh,0x82
  423762:	xchg   BYTE PTR [ebp+0x336878bd],bl
  423768:	(bad)  
  423769:	dec    ecx
  42376a:	fwait
  42376b:	imul   edi,DWORD PTR [edi],0x1
  42376e:	sbb    eax,DWORD PTR [edi-0x36]
  423771:	mov    ecx,0x6fde3125
  423776:	in     al,0x3d
  423778:	fimul  WORD PTR [ebx+ebx*2-0x568eaf]
  42377f:	mov    al,0x6b
  423781:	outs   dx,DWORD PTR ds:[esi]
  423782:	adc    BYTE PTR [edx],0xb4
  423785:	pop    ecx
  423786:	aaa    
  423787:	test   DWORD PTR [eax],esi
  423789:	mov    dh,0x4b
  42378b:	mov    ah,0x9d
  42378d:	cwde   
  42378e:	cmp    dh,BYTE PTR [edx+esi*2]
  423791:	pusha  
  423792:	mov    ebp,0x32babc07
  423797:	cdq    
  423798:	pusha  
  423799:	dec    ecx
  42379a:	ds (bad) 
  42379c:	sahf   
  42379d:	and    BYTE PTR [esi-0x6c8b26ac],ah
  4237a3:	push   ebp
  4237a4:	dec    edx
  4237a5:	fs pop ss
  4237a7:	in     eax,0x74
  4237a9:	jl     0x4237a5
  4237ab:	bound  edx,QWORD PTR [esi]
  4237ad:	add    ebx,DWORD PTR [ecx-0x72277db7]
  4237b3:	mul    BYTE PTR [ecx]
  4237b5:	lock outs dx,BYTE PTR ds:[esi]
  4237b7:	push   edx
  4237b8:	mov    ah,0x7b
  4237ba:	sbb    al,0x4a
  4237bc:	adc    eax,0x9311598e
  4237c1:	outs   dx,BYTE PTR ds:[esi]
  4237c2:	pop    ecx
  4237c3:	dec    edi
  4237c4:	sbb    DWORD PTR [ebp+ebp*2-0x3c],esi
  4237c8:	sub    eax,0x7df46610
  4237cd:	dec    ebp
  4237ce:	and    al,0x58
  4237d0:	out    dx,eax
  4237d1:	mov    ecx,DWORD PTR [eax+0x4]
  4237d4:	dec    esp
  4237d5:	clc    
  4237d6:	and    BYTE PTR [eax-0x6e],0x83
  4237da:	test   DWORD PTR [eax],edx
  4237dc:	mov    dl,0xdf
  4237de:	pop    edx
  4237df:	bound  esp,QWORD PTR [ebx-0x72]
  4237e2:	loop   0x4237fa
  4237e4:	dec    ebx
  4237e5:	aaa    
  4237e6:	and    al,0x53
  4237e8:	loop   0x42379d
  4237ea:	push   0x316c7af6
  4237ef:	xor    eax,0x44599888
  4237f4:	mov    esi,0xe97e00c6
  4237f9:	inc    ebp
  4237fa:	sbb    ebp,esp
  4237fc:	and    al,0x6c
  4237fe:	in     eax,0x94
  423800:	lahf   
  423801:	addr16 in al,dx
  423803:	cmp    edi,eax
  423805:	test   eax,0x967e40e3
  42380a:	(bad)  
  42380b:	mov    ebp,0x67cc248e
  423810:	hlt    
  423811:	jmp    0x2df4ab3e
  423816:	sub    al,0x4d
  423818:	add    bh,BYTE PTR [edx+edi*4]
  42381b:	jno    0x4237b2
  42381d:	inc    edx
  42381e:	aaa    
  42381f:	and    eax,edx
  423821:	hlt    
  423822:	xchg   ecx,eax
  423823:	iret   
  423824:	jae    0x423848
  423826:	mov    ds:0xe1a632fb,eax
  42382b:	aas    
  42382c:	push   edx
  42382d:	(bad)
  423830:	pop    ds
  423831:	mov    edi,0xf57d098f
  423836:	imul   esp,ebx,0x5321c324
  42383c:	sbb    al,0x35
  42383e:	adc    esi,esi
  423840:	and    eax,0x75d2c96b
  423845:	adc    DWORD PTR [edi],ebp
  423847:	pusha  
  423848:	sbb    ch,BYTE PTR [edi-0x5e]
  42384b:	mov    ebp,0x91ebd6c7
  423850:	ja     0x4238a4
  423852:	mov    WORD PTR [ecx+0x5e4653a4],ss
  423858:	loopne 0x4237f0
  42385a:	enter  0x39e1,0x42
  42385e:	adc    BYTE PTR [ebx-0x68],al
  423861:	sub    ecx,ebp
  423863:	popa   
  423864:	gs mov dl,0xd5
  423867:	push   cs
  423868:	adc    cl,BYTE PTR [edi+eiz*1]
  42386b:	scas   eax,DWORD PTR es:[edi]
  42386c:	and    ebp,DWORD PTR [ecx+0x29]
  42386f:	xchg   ebp,eax
  423870:	in     eax,0xeb
  423872:	imul   edi,DWORD PTR [edx],0xffffffe9
  423875:	dec    esp
  423876:	mov    edi,0x6f1c2f0
  42387b:	stos   DWORD PTR es:[edi],eax
  42387c:	pslld  mm6,QWORD PTR [edx+0x9]
  423880:	neg    BYTE PTR [edx]
  423882:	call   0x78bb2fad
  423887:	add    DWORD PTR [ebp-0x6],0xc57042e9
  42388e:	inc    esi
  42388f:	cwde   
  423890:	push   ebp
  423891:	dec    edi
  423892:	mov    esp,0x413396a4
  423897:	jns    0x4238ee
  423899:	fsub   QWORD PTR [edi-0x73]
  42389c:	ja     0x42387b
  42389e:	and    eax,0xa7f360be
  4238a3:	sub    esp,DWORD PTR [edi+0x2a1c12d4]
  4238a9:	dec    ecx
  4238aa:	dec    ebx
  4238ab:	jns    0x423921
  4238ad:	or     DWORD PTR ds:0xf367d267,edx
  4238b3:	mov    WORD PTR [ecx],cs
  4238b5:	cmovge esi,ecx
  4238b8:	adc    BYTE PTR [ebx],al
  4238ba:	mov    dl,0xa8
  4238bc:	mov    eax,ds:0x9bf26a34
  4238c1:	in     al,dx
  4238c2:	(bad)  
  4238c3:	(bad)  
  4238c4:	hlt    
  4238c5:	sbb    BYTE PTR [ebp+eax*4-0x7e],dl
  4238c9:	outs   dx,DWORD PTR ds:[esi]
  4238ca:	les    ebx,FWORD PTR ds:0x85d3de80
  4238d0:	fdivr  DWORD PTR ds:0xb1f75a09
  4238d6:	lahf   
  4238d7:	add    DWORD PTR [ecx+0x541ce451],edi
  4238dd:	inc    ebx
  4238de:	xchg   esp,eax
  4238df:	dec    edi
  4238e0:	and    al,0x4b
  4238e2:	xor    DWORD PTR [edx-0x4a],edi
  4238e5:	mov    ebx,0x65fd81b2
  4238ea:	pop    edi
  4238eb:	dec    esp
  4238ec:	test   eax,0xc37b9021
  4238f1:	sub    eax,0xc35dc5f7
  4238f6:	std    
  4238f7:	mov    ds:0x4bc6ed39,eax
  4238fc:	jbe    0x4238b4
  4238fe:	sbb    dl,BYTE PTR [ecx]
  423900:	pop    es
  423901:	aas    
  423902:	dec    ecx
  423903:	call   0x8525:0xfe000639
  42390a:	dec    esp
  42390b:	test   al,0xa7
  42390d:	scas   al,BYTE PTR es:[edi]
  42390e:	mov    WORD PTR cs:[ebp-0x4f53132a],ss
  423915:	or     DWORD PTR [esi+0x62],0x81a5529f
  42391c:	add    ah,bl
  42391e:	lods   al,BYTE PTR ds:[si]
  423920:	xchg   ebp,eax
  423921:	outs   dx,DWORD PTR ds:[esi]
  423922:	shr    edx,cl
  423924:	xlat   BYTE PTR ds:[ebx]
  423925:	lds    ebx,FWORD PTR [esi-0x1d96cf73]
  42392b:	(bad)  
  42392c:	repz js 0x4238d7
  42392f:	test   DWORD PTR [edx-0x3d],ebp
  423932:	sbb    esi,DWORD PTR [esi-0xc]
  423935:	aaa    
  423936:	adc    bh,al
  423938:	in     eax,dx
  423939:	loopne 0x42393d
  42393b:	bound  esp,QWORD PTR [esi+edi*1]
  42393e:	cli    
  42393f:	rcr    BYTE PTR [ebp-0x4f9874f8],0x18
  423946:	dec    ebx
  423947:	pop    ecx
  423948:	mov    ecx,0xcc81cbde
  42394d:	fs (bad) 
  42394f:	and    BYTE PTR [bx+si-0x7200],ch
  423954:	pop    esi
  423955:	or     al,0xb1
  423957:	ss dec eax
  423959:	mov    dh,0x75
  42395b:	retf   
  42395c:	pop    ds
  42395d:	jbe    0x42394f
  42395f:	bound  eax,QWORD PTR [eax+0x4019f307]
  423965:	aaa    
  423966:	stos   BYTE PTR es:[edi],al
  423967:	daa    
  423968:	lods   eax,DWORD PTR ds:[esi]
  423969:	cli    
  42396a:	enter  0xfe98,0xb2
  42396e:	mov    esi,0xacf8951a
  423973:	call   0xcc37:0x52e06f12
  42397a:	inc    esp
  42397b:	add    BYTE PTR [eax-0x19],bh
  42397e:	arpl   WORD PTR [edx-0x17679e38],ax
  423984:	jbe    0x4239ee
  423986:	(bad)  
  423987:	(bad)  
  423988:	sbb    eax,0x89c67620
  42398d:	int    0x4
  42398f:	sub    eax,0x901ef282
  423994:	mov    eax,0xf1f247b9
  423999:	(bad)  
  42399a:	lods   eax,DWORD PTR ds:[esi]
  42399b:	shl    BYTE PTR [esi+0x3b],1
  42399e:	xor    ecx,0x5e551d9a
  4239a4:	popf   
  4239a5:	imul   eax,DWORD PTR [eax+0x5cb31fed],0xd8e72686
  4239af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239b0:	inc    eax
  4239b1:	mov    edx,0x72410cc5
  4239b6:	mov    cl,BYTE PTR [edx+0x3bbcd358]
  4239bc:	add    bl,BYTE PTR [ebx-0x3db22d]
  4239c2:	xor    eax,DWORD PTR [edi]
  4239c4:	adc    eax,0x25446f72
  4239c9:	sbb    al,0x29
  4239cb:	pop    esi
  4239cc:	adc    BYTE PTR [edx-0x6c],bl
  4239cf:	(bad)  
  4239d0:	ins    DWORD PTR es:[edi],dx
  4239d1:	push   ebp
  4239d2:	jle    0x4239d1
  4239d4:	push   ecx
  4239d5:	push   eax
  4239d6:	or     ecx,esp
  4239d8:	out    dx,eax
  4239d9:	push   ecx
  4239da:	push   edi
  4239db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239dc:	test   eax,0x67e06aa9
  4239e1:	test   BYTE PTR [esi+eiz*4-0x2f],ch
  4239e5:	imul   DWORD PTR [edx+0x1733b635]
  4239eb:	dec    edi
  4239ec:	xor    al,0x9b
  4239ee:	pushf  
  4239ef:	outs   dx,BYTE PTR ds:[esi]
  4239f0:	inc    esp
  4239f1:	in     eax,0x31
  4239f3:	pop    edi
  4239f4:	data16 jb 0x42399c
  4239f7:	mov    fs,edx
  4239f9:	(bad)  
  4239fa:	lods   al,BYTE PTR ds:[esi]
  4239fb:	mov    ebx,0xe26f9eac
  423a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a01:	mov    esi,0xa761fbc
  423a06:	lods   eax,DWORD PTR ds:[esi]
  423a07:	call   DWORD PTR [esi+ecx*1]
  423a0a:	push   ss
  423a0b:	sbb    edx,DWORD PTR [edx-0x79]
  423a0e:	sar    ch,0xf9
  423a11:	inc    ebp
  423a12:	ret    0x87f4
  423a15:	sub    ebx,esp
  423a17:	mov    eax,DWORD PTR [ebp-0xd]
  423a1a:	out    0xdc,eax
  423a1c:	icebp  
  423a1d:	cs push cs
  423a1f:	lock pop esp
  423a21:	cmc    
  423a22:	dec    ecx
  423a23:	mov    bl,BYTE PTR [ebx+0x7]
  423a26:	subps  xmm2,XMMWORD PTR [ecx-0x731e3cd6]
  423a2d:	dec    edi
  423a2e:	sub    BYTE PTR [eax-0x6b],ah
  423a31:	rol    ah,cl
  423a33:	fiadd  WORD PTR [edi]
  423a35:	cs (bad) 
  423a39:	mov    cl,0x7a
  423a3b:	mov    ah,BYTE PTR [ecx-0xb1823cc]
  423a41:	add    BYTE PTR [esi+ebp*1+0x1d254659],dh
  423a48:	add    BYTE PTR [esi-0x22aafc0c],0x24
  423a4f:	push   esi
  423a50:	pop    edx
  423a51:	fisubr DWORD PTR [eax-0x5e]
  423a54:	addr16 (bad) 
  423a57:	xchg   DWORD PTR [eax],ebp
  423a59:	test   al,0x1a
  423a5b:	sbb    BYTE PTR [ebx+0x752670c8],dh
  423a61:	pop    edx
  423a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a63:	pop    es
  423a64:	and    bh,bl
  423a66:	pop    ebx
  423a67:	call   0x31768e4
  423a6c:	or     ah,BYTE PTR ds:0xafc6e41e
  423a72:	push   es
  423a73:	push   ecx
  423a74:	aaa    
  423a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a76:	inc    edx
  423a77:	jnp    0x423aa5
  423a79:	pusha  
  423a7a:	mov    edi,0x4681ac3e
  423a7f:	xchg   ebp,eax
  423a80:	or     al,0x6
  423a82:	mov    al,ds:0x80887e70
  423a87:	fs push edi
  423a89:	adc    DWORD PTR [edx],esp
  423a8b:	add    bl,BYTE PTR [ebp-0x52d8f49f]
  423a91:	push   edi
  423a92:	gs push ecx
  423a94:	sub    DWORD PTR [edx-0x20],edx
  423a97:	mov    al,0xd1
  423a99:	pushf  
  423a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a9b:	dec    ebx
  423a9c:	dec    edx
  423a9d:	push   esp
  423a9e:	shl    DWORD PTR [ebp+0x2f],0x38
  423aa2:	aam    0x85
  423aa4:	je     0x423a79
  423aa6:	cmp    al,0x5c
  423aa8:	aad    0xcd
  423aaa:	nop
  423aab:	mov    ebp,0x2685d3b2
  423ab0:	fwait
  423ab1:	push   ebx
  423ab2:	lds    edi,FWORD PTR ds:0x0
	...
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi-0x71],cs
  423ace:	(bad)  
  423acf:	pop    ds
  423ad0:	ror    al,0xb2
  423ad3:	add    DWORD PTR [eax],eax
  423ad5:	stos   DWORD PTR es:[edi],eax
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    BYTE PTR [esi+0x6e],al
  423adb:	cmp    eax,DWORD PTR [ecx-0x14311b64]
  423ae1:	ror    eax,0xc6
  423ae4:	jb     0x423ad9
  423ae6:	push   esp
  423ae7:	inc    edi
  423ae8:	pop    esp
  423ae9:	ret    0xd89
  423aec:	mov    ds:0x1739a748,eax
  423af1:	adc    eax,0x31e850e1
  423af6:	mov    al,ds:0x2545ff78
  423afb:	out    dx,al
  423afc:	shl    BYTE PTR [eax-0x74],1
  423aff:	adc    BYTE PTR [edi],bh
  423b01:	loop   0x423b60
  423b03:	movzx  edx,BYTE PTR [edx+eiz*2]
  423b07:	in     al,0x97
  423b09:	inc    edx
  423b0a:	mov    DWORD PTR [ebx],ebx
  423b0c:	retf   
  423b0d:	push   eax
  423b0e:	dec    esi
  423b0f:	mov    ds:0xb48a6b55,eax
  423b14:	ins    DWORD PTR es:[edi],dx
  423b15:	add    esi,DWORD PTR [ebp+0x2f51b9ff]
  423b1b:	inc    ecx
  423b1c:	fild   WORD PTR [edx+eax*2]
  423b1f:	xlat   BYTE PTR ds:[ebx]
  423b20:	push   0xffffffee
  423b22:	cmp    BYTE PTR [ebx],al
  423b24:	sbb    ch,BYTE PTR [edx]
  423b26:	mov    al,ds:0x8e659d2d
  423b2b:	add    al,0x8b
  423b2d:	jl     0x423b8a
  423b2f:	inc    edi
  423b30:	loop   0x423b29
  423b32:	data16 adc al,0xe7
  423b35:	mov    ds:0xd71727c5,eax
  423b3a:	mov    ds:0x39ca186c,eax
  423b3f:	imul   ebx,DWORD PTR [ebp+eiz*2-0x3184d53],0xcb8d4b53
  423b4a:	sahf   
  423b4b:	test   al,dl
  423b4d:	pop    edi
  423b4e:	inc    edx
  423b4f:	ss dec esp
  423b51:	jle    0x423ad5
  423b53:	add    BYTE PTR [eax],bh
  423b55:	imul   esp,DWORD PTR [esi+esi*8],0x3174252
  423b5c:	dec    edx
  423b5d:	push   edi
  423b5e:	xchg   DWORD PTR ds:0xb5d6450c,edx
  423b64:	ret    0x1a23
  423b67:	push   edx
  423b68:	or     al,0x50
  423b6a:	push   esi
  423b6b:	mov    DWORD PTR [edi+0x8],edi
  423b6e:	mov    ds:0x8436c632,al
  423b73:	aaa    
  423b74:	nop    DWORD PTR [ecx-0x461bbf16]
  423b7b:	push   cs
  423b7c:	xor    eax,0x6a64debc
  423b81:	test   al,0x38
  423b83:	push   ebx
  423b84:	mov    cl,0xce
  423b86:	mov    ebp,0xc62046ee
  423b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b8c:	fld    QWORD PTR [edx+ebp*1+0x51]
  423b90:	inc    edi
  423b91:	(bad)  
  423b92:	jae    0x423b5a
  423b94:	dec    edx
  423b95:	outs   dx,DWORD PTR ds:[esi]
  423b96:	test   eax,0xfb70e0b5
  423b9b:	test   edx,0x87a0b08f
  423ba1:	adc    ecx,edx
  423ba3:	scas   al,BYTE PTR es:[edi]
  423ba4:	(bad)  
  423ba5:	or     eax,ebx
  423ba7:	pop    ss
  423ba8:	push   es
  423ba9:	xchg   ebx,eax
  423baa:	sbb    DWORD PTR [edi*2-0x2760d28e],0x931a8312
  423bb5:	mov    esp,0xc72ae36c
  423bba:	dec    ecx
  423bbb:	rcr    DWORD PTR [edx],0xf
  423bbe:	nop
  423bbf:	cmp    eax,0xbfc5de42
  423bc4:	pop    ecx
  423bc5:	inc    edx
  423bc6:	inc    eax
  423bc7:	fadd   QWORD PTR [ebx+0x19]
  423bca:	mov    DWORD PTR [ebx+edx*4],edi
  423bcd:	fisub  WORD PTR [edi+0x1fc952ca]
  423bd3:	jmp    0x9bed:0x478f27a4
  423bda:	fcom   QWORD PTR [edi+eax*1+0x5f]
  423bde:	push   DWORD PTR [ecx+0x70516a69]
  423be4:	add    BYTE PTR [ebp+0x34b4b7f1],0x26
  423beb:	(bad)  
  423bec:	sub    DWORD PTR [ebx-0x74],edx
  423bef:	das    
  423bf0:	je     0x423bab
  423bf2:	sub    al,BYTE PTR [esi+0xaff0c2c]
  423bf8:	sbb    ebp,eax
  423bfa:	imul   eax,edx,0x39
  423bfd:	mov    BYTE PTR [eax-0x600f3038],dl
  423c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c04:	ins    DWORD PTR es:[edi],dx
  423c05:	dec    edi
  423c06:	ja     0x423c41
  423c08:	push   ebx
  423c09:	mov    edx,DWORD PTR [ebp+0x7]
  423c0c:	and    esp,ecx
  423c0e:	push   edi
  423c0f:	jmp    0x423c3a
  423c11:	xchg   ecx,eax
  423c12:	jbe    0x423bb1
  423c14:	xchg   DWORD PTR [esi-0x2a],esi
  423c17:	sbb    bh,BYTE PTR [ecx]
  423c19:	cs xchg ebp,eax
  423c1b:	mov    bh,0xae
  423c1d:	in     eax,dx
  423c1e:	inc    ebp
  423c1f:	movaps xmm2,xmm5
  423c22:	mov    eax,0x7ca9b50b
  423c27:	ret    0xe963
  423c2a:	ins    BYTE PTR es:[edi],dx
  423c2b:	es scas al,BYTE PTR es:[edi]
  423c2d:	pop    es
  423c2e:	dec    eax
  423c2f:	adc    DWORD PTR [ecx+0x56],edi
  423c32:	and    cl,dh
  423c34:	cmp    BYTE PTR [ecx+0x2eb0f853],0xd1
  423c3b:	es shl dh,cl
  423c3e:	mov    bh,0xb0
  423c40:	cmp    ebp,DWORD PTR [eax-0x7c]
  423c43:	cmp    ah,bh
  423c45:	js     0x423c90
  423c47:	pop    ecx
  423c48:	mov    dl,0x1c
  423c4a:	mov    esp,0x31d15299
  423c4f:	rcr    edi,0xcd
  423c52:	jns    0x423bd9
  423c54:	sti    
  423c55:	push   es
  423c56:	sbb    dl,BYTE PTR [edx-0x57]
  423c59:	stos   BYTE PTR es:[edi],al
  423c5a:	add    DWORD PTR ds:0x550d38,ebp
  423c60:	enter  0x3362,0x9a
  423c64:	bound  ecx,QWORD PTR [ebx+esi*4-0x753c2088]
  423c6b:	rol    BYTE PTR [ecx],0x6d
  423c6e:	push   0x43acfcee
  423c73:	test   eax,0x739cce88
  423c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c79:	sbb    ecx,edx
  423c7b:	mov    ah,0xdc
  423c7d:	push   cs
  423c7e:	rcl    DWORD PTR [eax+0x4b726b52],1
  423c84:	call   FWORD PTR [edx-0x6179066d]
  423c8a:	jae    0x423c42
  423c8c:	ds cdq 
  423c8e:	(bad)  
  423c8f:	mov    eax,ds:0x319390e6
  423c94:	in     eax,0x12
  423c96:	shl    DWORD PTR [edi-0x148ffde2],cl
  423c9c:	test   eax,0x9f3856de
  423ca1:	leave  
  423ca2:	push   ss
  423ca3:	ret    0x6ee5
  423ca6:	popf   
  423ca7:	scas   eax,DWORD PTR es:[edi]
  423ca8:	mov    ?,WORD PTR [esi+0x65]
  423cab:	jno    0x423d15
  423cad:	xor    eax,0x8a7fe23
  423cb2:	jnp    0x423c3d
  423cb4:	xchg   bl,bh
  423cb6:	rdtsc  
  423cb8:	pushf  
  423cb9:	or     al,0x96
  423cbb:	and    DWORD PTR [ecx+0x3b],ecx
  423cbe:	mov    al,ds:0xf897f8e3
  423cc3:	mov    dh,0x91
  423cc5:	or     BYTE PTR [edi+0x33],0x23
  423cc9:	push   0x77
  423ccb:	popa   
  423ccc:	push   edi
  423ccd:	or     esp,DWORD PTR [ebx]
  423ccf:	pop    esi
  423cd0:	rol    DWORD PTR [ecx-0x7fd4fbec],1
  423cd6:	mov    ecx,0x5151049b
  423cdb:	dec    ebp
  423cdc:	cmp    BYTE PTR [edx-0x7c],cl
  423cdf:	adc    DWORD PTR [ecx-0x1a],esp
  423ce2:	xor    DWORD PTR [ecx+ebx*1+0x39c7f8c8],esp
  423ce9:	mov    edx,0xa3707bb7
  423cee:	add    BYTE PTR [edi],dl
  423cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf1:	js     0x423d30
  423cf3:	adc    bh,bl
  423cf5:	retf   0x62ff
  423cf8:	mov    dl,0x46
  423cfa:	or     eax,DWORD PTR [ecx+0x51]
  423cfd:	cli    
  423cfe:	das    
  423cff:	out    dx,eax
  423d00:	xchg   ecx,eax
  423d01:	xchg   dl,al
  423d03:	aam    0x9e
  423d05:	sub    dh,ch
  423d07:	mov    dh,0xf0
  423d09:	rol    BYTE PTR [edi],cl
  423d0b:	jo     0x423d30
  423d0d:	inc    esp
  423d0e:	mov    ebp,0x2c3f3e29
  423d13:	mov    eax,DWORD PTR [ecx+0x7b5fae06]
  423d19:	add    cl,BYTE PTR [ecx+ebp*1-0x654a403b]
  423d20:	rol    BYTE PTR [ebp-0x37],cl
  423d23:	sub    dh,BYTE PTR [edi-0xcbcef68]
  423d29:	jmp    0x423d6e
  423d2b:	out    dx,al
  423d2c:	push   ss
  423d2d:	data16 (bad) 
  423d30:	mov    edx,0x7d5c38cb
  423d35:	test   BYTE PTR [edx],bh
  423d37:	jo     0x423d55
  423d39:	push   DWORD PTR ds:0x4bc03db1
  423d3f:	repnz adc al,0xae
  423d42:	push   eax
  423d43:	scas   eax,DWORD PTR es:[edi]
  423d44:	add    al,0xb9
  423d46:	dec    eax
  423d47:	(bad)  
  423d48:	mov    esp,0xf5c71ce
  423d4d:	xor    eax,0x135ebc8b
  423d52:	stos   BYTE PTR es:[edi],al
  423d53:	jns    0x423d8f
  423d55:	push   ebp
  423d56:	xor    esi,DWORD PTR [edx-0x603d95c5]
  423d5c:	ds push esi
  423d5e:	int3   
  423d5f:	xor    BYTE PTR [edx+0x3f],cl
  423d62:	fldenv [ecx-0x2c0cf8dd]
  423d68:	or     edi,DWORD PTR ds:0xebd4e820
  423d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d6f:	jns    0x423d0f
  423d71:	sbb    al,0x81
  423d73:	sub    BYTE PTR [esi-0x64047100],ah
  423d79:	call   0x9d57:0xbdf56716
  423d80:	push   edx
  423d81:	out    dx,eax
  423d82:	loopne 0x423d80
  423d84:	out    0xb9,al
  423d86:	pusha  
  423d87:	mov    bh,0x7e
  423d89:	add    DWORD PTR gs:[edx-0x43],eax
  423d8d:	dec    ebx
  423d8e:	pop    ebp
  423d8f:	mov    al,0x17
  423d91:	adc    DWORD PTR [eax+edx*8+0x72],ebx
  423d95:	cmp    ebp,DWORD PTR [ecx+ebx*2-0x31]
  423d99:	jle    0x423dee
  423d9b:	mov    bl,0x14
  423d9d:	xchg   ecx,eax
  423d9e:	lods   al,BYTE PTR ds:[esi]
  423d9f:	sbb    BYTE PTR ds:0x2062a34,0x55
  423da6:	call   0x8f5e:0xcf21cb4a
  423dad:	and    al,0xa5
  423daf:	stos   BYTE PTR es:[edi],al
  423db0:	xor    edi,DWORD PTR [esi-0x2fac6af8]
  423db6:	jmp    0x5c34:0x36669868
  423dbd:	test   eax,0xcb3b9453
  423dc2:	adc    DWORD PTR [ebx-0x79],ecx
  423dc5:	push   0x2f54e216
  423dca:	dec    esp
  423dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dcc:	jle    0x423daa
  423dce:	pusha  
  423dcf:	rcl    DWORD PTR [esi],cl
  423dd1:	sub    eax,0x5b1f48d8
  423dd6:	mov    cl,0xfb
  423dd8:	outs   dx,BYTE PTR ds:[esi]
  423dd9:	call   0x9bee0d87
  423dde:	cmp    edx,DWORD PTR [ecx]
  423de0:	enter  0xe7b6,0x43
  423de4:	outs   dx,BYTE PTR ds:[esi]
  423de5:	ins    DWORD PTR es:[edi],dx
  423de6:	out    0x5b,al
  423de8:	shl    DWORD PTR [eax-0x5f07250a],0xde
  423def:	lds    esp,FWORD PTR [ecx+0x1af06b88]
  423df5:	jb     0x423db4
  423df7:	daa    
  423df8:	int    0x19
  423dfa:	adc    esp,eax
  423dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dfd:	xchg   ebp,eax
  423dfe:	and    DWORD PTR [edx+0x15],esi
  423e01:	imul   ecx,eax,0x73
  423e04:	mov    cl,0x99
  423e06:	fdivr  QWORD PTR [edi+0x338d48f4]
  423e0c:	jb     0x423e8a
  423e0e:	gs cmc 
  423e10:	add    DWORD PTR [edx+0x1a9b8581],esi
  423e16:	std    
  423e17:	sbb    DWORD PTR [eax+ebx*4-0x5c],ebp
  423e1b:	mov    dl,0x75
  423e1d:	in     al,0xea
  423e1f:	dec    ebp
  423e20:	dec    eax
  423e21:	add    eax,0x66c8d78c
  423e26:	repz loopne 0x423e0c
  423e29:	dec    esi
  423e2a:	pop    eax
  423e2b:	inc    edx
  423e2c:	and    BYTE PTR [esi+eax*2+0x461e3c42],ch
  423e33:	sbb    al,0xeb
  423e35:	xor    DWORD PTR [ebp+0x3a74e8ef],ecx
  423e3b:	mov    dh,0x74
  423e3d:	mov    dh,BYTE PTR [edx]
  423e3f:	mov    eax,ds:0x71df76cc
  423e44:	sub    eax,0xc003875e
  423e49:	jne    0x423e08
  423e4b:	pop    ebp
  423e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e4d:	push   0x9ebc048d
  423e52:	call   0xf1657016
  423e57:	(bad)  
  423e58:	in     eax,dx
  423e59:	aam    0x8a
  423e5b:	mov    esp,0xa12d0cb8
  423e60:	sti    
  423e61:	mov    ebx,0x79984b2b
  423e66:	xlat   BYTE PTR ds:[ebx]
  423e67:	call   0xdeaa:0xb84b4d2e
  423e6e:	fwait
  423e6f:	pop    edx
  423e70:	pop    ebx
  423e71:	xchg   DWORD PTR [esi+0x256bddad],edi
  423e77:	mov    dh,0x4c
  423e79:	jne    0x423e17
  423e7b:	inc    edi
  423e7c:	jmp    0x423e03
  423e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e7f:	add    ebp,eax
  423e81:	dec    esi
  423e82:	inc    eax
  423e83:	cmp    eax,DWORD PTR [eax]
	...
  423e91:	xor    ebx,ecx
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0x6e
  423e9e:	retf   
  423e9f:	imul   BYTE PTR [ebx+0x73]
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [ebx-0x3fffffd],ch
  423eaa:	adc    al,0x6
  423eac:	add    DWORD PTR [ebp+0x24],ecx
  423eaf:	jge    0x423e85
  423eb1:	jo     0x423e86
  423eb3:	jge    0x423ef5
  423eb5:	dec    BYTE PTR [edx+0x64]
  423eb8:	scas   al,BYTE PTR es:[edi]
  423eb9:	xchg   esp,eax
  423eba:	mov    esp,DWORD PTR [esi+ecx*4-0x5311ed0b]
  423ec1:	dec    edi
  423ec2:	add    esp,DWORD PTR [edi]
  423ec4:	mov    ah,0x98
  423ec6:	add    al,BYTE PTR [edx]
  423ec8:	add    edx,ebx
  423eca:	pop    esi
  423ecb:	pop    ebp
  423ecc:	repnz mov BYTE PTR [eax],0x94
  423ed0:	pop    ebx
  423ed1:	arpl   WORD PTR [esp+edx*2-0x4f],si
  423ed5:	sub    al,0x60
  423ed7:	loope  0x423e5a
  423ed9:	jp     0x423efd
  423edb:	lods   al,BYTE PTR ds:[esi]
  423edc:	or     BYTE PTR [edi-0x33],ch
  423edf:	mov    bh,BYTE PTR [eax-0x174b48fc]
  423ee5:	jne    0x423f4a
  423ee7:	mov    ah,0xb2
  423ee9:	gs int 0x6e
  423eec:	popa   
  423eed:	inc    esp
  423eee:	data16 lock cmp al,0xf5
  423ef2:	neg    DWORD PTR ds:0x1fa546c7
  423ef8:	in     eax,0xb
  423efa:	push   esp
  423efb:	xchg   ebp,eax
  423efc:	pop    eax
  423efd:	mov    bl,0xcb
  423eff:	xchg   esi,eax
  423f00:	les    esi,FWORD PTR [ecx-0x4b]
  423f03:	mov    cs,ebx
  423f05:	jp     0x423ecf
  423f07:	rol    BYTE PTR [ecx+ebx*8-0x55],cl
  423f0b:	sub    bl,BYTE PTR [ecx+0x2b]
  423f0e:	rcr    al,cl
  423f10:	adc    esp,DWORD PTR ds:0x80eee0a2
  423f16:	pop    ds
  423f17:	or     ah,dl
  423f19:	lahf   
  423f1a:	in     eax,dx
  423f1b:	or     eax,0xf8e10cc4
  423f20:	daa    
  423f21:	cwde   
  423f22:	leave  
  423f23:	in     eax,dx
  423f24:	out    0x82,eax
  423f26:	imul   edx,esp,0xffffffc9
  423f29:	pop    ecx
  423f2a:	pusha  
  423f2b:	mov    ebx,0x96dc5789
  423f30:	xchg   edi,eax
  423f31:	aaa    
  423f32:	sub    al,0xf2
  423f34:	dec    esi
  423f35:	xor    dh,BYTE PTR [ebp+0x4b]
  423f38:	test   BYTE PTR [esp+eiz*2-0x4e04751e],bl
  423f3f:	test   BYTE PTR [ecx+eax*4-0x7e],ah
  423f43:	add    eax,DWORD PTR [esi-0x669305b]
  423f49:	jl     0x423f89
  423f4b:	(bad)  
  423f4c:	outs   dx,DWORD PTR ds:[esi]
  423f4d:	dec    edx
  423f4e:	xlat   BYTE PTR ds:[ebx]
  423f4f:	ins    BYTE PTR es:[edi],dx
  423f50:	mov    BYTE PTR [esp+ebx*4-0x55],bh
  423f54:	jg     0x423fb9
  423f56:	sti    
  423f57:	idiv   esi
  423f59:	sub    bl,BYTE PTR [eax]
  423f5b:	fwait
  423f5c:	dec    ebx
  423f5d:	pop    ebx
  423f5e:	xchg   edi,eax
  423f5f:	scas   al,BYTE PTR es:[edi]
  423f60:	and    DWORD PTR ss:[ebx-0x5ec87abe],esp
  423f67:	popf   
  423f68:	aad    0x64
  423f6a:	sub    dl,BYTE PTR [ebp+0x67]
  423f6d:	pusha  
  423f6e:	je     0x423f7c
  423f70:	pop    eax
  423f71:	sbb    DWORD PTR [ebp-0x7bd8b3d7],0xd6d62328
  423f7b:	daa    
  423f7c:	push   esp
  423f7d:	cdq    
  423f7e:	jmp    0x667e:0xc82367dc
  423f85:	jmp    0xa97:0x55ad48fa
  423f8c:	out    dx,eax
  423f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f8e:	pop    eax
  423f8f:	mov    dh,0x54
  423f91:	pop    es
  423f92:	cwde   
  423f93:	gs jg  0x423fcd
  423f96:	clc    
  423f97:	dec    ebx
  423f98:	inc    ebp
  423f99:	(bad)  
  423f9a:	mov    dl,0xe9
  423f9c:	cmp    DWORD PTR [edx+edx*8],ebp
  423f9f:	dec    esp
  423fa0:	call   0xdd99:0xecfd4ade
  423fa7:	jbe    0x423f6e
  423fa9:	sti    
  423faa:	sti    
  423fab:	fisttp QWORD PTR [edi]
  423fad:	push   ebx
  423fae:	and    DWORD PTR [edi],edi
  423fb0:	cmp    al,BYTE PTR ds:0x2bd2f652
  423fb6:	pop    edi
  423fb7:	call   0x96774912
  423fbc:	les    ebp,FWORD PTR [edi]
  423fbe:	stc    
  423fbf:	rcl    DWORD PTR [ebx],0x9b
  423fc2:	pop    es
  423fc3:	nop
  423fc4:	ds add eax,0xa6ac9f6d
  423fca:	add    eax,esi
  423fcc:	aad    0xb4
  423fce:	rol    BYTE PTR [esi],1
  423fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fd1:	xchg   esi,eax
  423fd2:	into   
  423fd3:	inc    edi
  423fd4:	sbb    bl,BYTE PTR [ecx+0x40]
  423fd7:	inc    esi
  423fd8:	add    DWORD PTR [ecx+0x58],0xccb679bb
  423fdf:	jae    0x423fa2
  423fe1:	rcr    DWORD PTR [edx+0x386edb1c],0xa1
  423fe8:	pop    ebp
  423fe9:	in     eax,dx
  423fea:	add    eax,0xda1df91a
  423fef:	ins    BYTE PTR es:[edi],dx
  423ff0:	mov    bh,0x94
  423ff2:	ret    0xe40
  423ff5:	push   ebp
  423ff6:	or     eax,0xd0e61021
  423ffb:	ffreep st(2)
  423ffd:	add    ah,BYTE PTR [eax]
  423fff:	sbb    al,0x85
  424001:	test   BYTE PTR ds:0x7550ebd3,bh
  424007:	cmp    DWORD PTR [eax-0x64f03b4a],ebp
  42400d:	sub    BYTE PTR [eax+0x27],0x36
  424011:	inc    ebp
  424012:	les    esi,FWORD PTR [ebx]
  424014:	aad    0xbe
  424016:	push   es
  424017:	and    BYTE PTR [esi+0xfd9e6c8],ah
  42401d:	scas   eax,DWORD PTR es:[edi]
  42401e:	xchg   esp,eax
  42401f:	(bad)  
  424021:	mov    al,0x9
  424023:	ins    BYTE PTR es:[edi],dx
  424024:	fwait
  424025:	mov    eax,0x16156322
  42402a:	add    eax,0x18a50e93
  42402f:	push   ebx
  424030:	test   al,0x8a
  424032:	mov    al,ds:0x7c415ea9
  424037:	pmaxsw mm6,QWORD PTR [ebp-0x4a]
  42403b:	je     0x4240b7
  42403d:	shr    DWORD PTR ds:0x6580b6a6,1
  424043:	pop    edx
  424044:	jge    0x42406e
  424046:	shr    al,0xde
  424049:	cmp    al,0x54
  42404b:	out    0x17,eax
  42404d:	push   cs
  42404e:	add    edx,DWORD PTR [ecx+0x3f]
  424051:	sbb    al,0xb8
  424053:	mov    al,ds:0x395e247d
  424058:	xor    eax,0x4496a1a2
  42405d:	add    DWORD PTR [ebp+0x385072de],ebp
  424063:	push   ebx
  424064:	mov    ds:0xba290c08,eax
  424069:	mov    dl,0xbf
  42406b:	das    
  42406c:	inc    esp
  42406d:	dec    ebx
  42406e:	xlat   BYTE PTR ds:[ebx]
  42406f:	loop   0x424040
  424071:	out    dx,eax
  424072:	shl    ebx,1
  424074:	dec    esp
  424075:	scas   al,BYTE PTR es:[edi]
  424076:	aad    0x9c
  424078:	push   ss
  424079:	shr    BYTE PTR [edx+0xd705d62],0x6c
  424080:	add    ebx,DWORD PTR [ebx+0x5b]
  424083:	sbb    BYTE PTR [ebx+eax*2-0x79],dh
  424087:	pop    ecx
  424088:	imul   ebx,eax,0x65dc2c6c
  42408e:	loope  0x42409e
  424090:	mov    ah,0x24
  424092:	retf   0x1c27
  424095:	mov    bh,0x45
  424097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424098:	push   0x34a3cc5
  42409d:	out    0x4d,al
  42409f:	and    eax,0x5139793e
  4240a4:	mov    ebp,0x74d94e65
  4240a9:	int    0x73
  4240ab:	or     al,BYTE PTR [esi+0x2e]
  4240ae:	xor    DWORD PTR [edx+ebx*2+0x13],ebx
  4240b2:	or     eax,0x8fe6c148
  4240b7:	sub    BYTE PTR [edx],dh
  4240b9:	mov    dh,0xc9
  4240bb:	xor    BYTE PTR [ebp+0x7e],bh
  4240be:	mov    dl,0x67
  4240c0:	push   ds
  4240c1:	push   DWORD PTR [ebp+0x13]
  4240c4:	cmp    edi,esi
  4240c6:	mov    eax,ds:0x73e7e46e
  4240cb:	test   esi,ecx
  4240cd:	mov    ch,BYTE PTR [ecx]
  4240cf:	icebp  
  4240d0:	or     eax,0x21177526
  4240d5:	mov    esp,0x2ddfa418
  4240da:	sub    BYTE PTR [edx-0x59],al
  4240dd:	lahf   
  4240de:	hlt    
  4240df:	aas    
  4240e0:	fadd   st(1),st
  4240e2:	mov    cl,0x75
  4240e4:	push   ebx
  4240e5:	aaa    
  4240e6:	mov    ch,0xdb
  4240e8:	loopne 0x4240c8
  4240ea:	ret    0xc9d6
  4240ed:	cmp    eax,0x34759886
  4240f2:	(bad)  
  4240f3:	pop    esi
  4240f4:	sub    eax,0xd40e0f7a
  4240f9:	push   ds
  4240fa:	loope  0x42407f
  4240fc:	loop   0x4240b6
  4240fe:	jp     0x4240a5
  424100:	lahf   
  424101:	stos   BYTE PTR es:[edi],al
  424102:	rcl    DWORD PTR [ebp+0x65eb29f6],1
  424108:	jae    0x4240fa
  42410a:	xchg   DWORD PTR [esi-0x68],ebp
  42410d:	sbb    ah,cl
  42410f:	mov    dh,cl
  424111:	in     eax,dx
  424112:	inc    eax
  424113:	mov    esi,0x52e8cd0d
  424118:	jge    0x424179
  42411a:	mov    ch,0x4a
  42411c:	rcl    BYTE PTR [edx+0x443c79d7],cl
  424122:	test   eax,0xedab9182
  424127:	pop    esi
  424128:	cmp    al,0x5a
  42412a:	push   edx
  42412b:	hlt    
  42412c:	push   ds
  42412d:	mov    ds,ecx
  42412f:	icebp  
  424130:	and    al,0x8c
  424132:	das    
  424133:	fdiv   QWORD PTR [ecx+0x1228d8e4]
  424139:	dec    ecx
  42413a:	adc    al,0xee
  42413c:	xchg   ecx,eax
  42413d:	jne    0x4241a6
  42413f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424140:	je     0x424198
  424142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424143:	push   ecx
  424144:	jg     0x424100
  424146:	cdq    
  424147:	xchg   ebp,eax
  424148:	mov    al,ds:0xbb0594de
  42414d:	push   ecx
  42414e:	jecxz  0x424179
  424150:	ror    DWORD PTR [edx],0x76
  424153:	xchg   DWORD PTR [edx+0x2e],esi
  424156:	mov    BYTE PTR [ecx],al
  424158:	mov    bh,0x2f
  42415a:	enter  0xd1d3,0x7f
  42415e:	retf   0x52c0
  424161:	sub    al,0xa7
  424163:	out    0xc1,eax
  424165:	jae    0x424125
  424167:	mov    al,0xf6
  424169:	mov    eax,ds:0xcd93d819
  42416e:	test   bl,dh
  424170:	ins    DWORD PTR es:[edi],dx
  424171:	or     DWORD PTR [esi-0x71ab6ce6],edx
  424177:	mov    cl,0x73
  424179:	cmp    BYTE PTR [ebp+0x79],ch
  42417c:	mov    bh,0x46
  42417e:	mov    dl,0x56
  424180:	fisub  WORD PTR [ebp+0x50fdeac7]
  424186:	loopne 0x4241cb
  424188:	mov    DWORD PTR [eax-0x6fec0e41],eax
  42418e:	mov    eax,ds:0xb1bd5d99
  424193:	dec    ecx
  424194:	sub    eax,0x7683635
  424199:	retf   0x18a3
  42419c:	ins    BYTE PTR es:[edi],dx
  42419d:	stos   DWORD PTR es:[edi],eax
  42419e:	pop    ebx
  42419f:	push   ss
  4241a0:	stc    
  4241a1:	out    dx,al
  4241a2:	int3   
  4241a3:	(bad)  
  4241a4:	fbstp  TBYTE PTR [edi-0x24]
  4241a7:	nop    esp
  4241aa:	(bad)  
  4241ab:	mov    cl,0x39
  4241ad:	and    edi,DWORD PTR [ebx-0x43]
  4241b0:	sti    
  4241b1:	out    dx,al
  4241b2:	sub    al,BYTE PTR [eax-0x380d7a40]
  4241b8:	and    dl,BYTE PTR [ecx+0x2f]
  4241bb:	int    0x46
  4241bd:	jmp    ecx
  4241bf:	xchg   ebx,eax
  4241c0:	mov    edi,0xc759fec5
  4241c5:	gs dec ebx
  4241c7:	repz aam 0x68
  4241ca:	popa   
  4241cb:	mov    edx,0xf7835fcc
  4241d0:	test   eax,0xfaf08e32
  4241d5:	add    al,BYTE PTR [edx]
  4241d7:	add    BYTE PTR [esp+esi*4+0x723773e3],0x46
  4241df:	ud2    
  4241e1:	pop    ds
  4241e2:	jecxz  0x42420b
  4241e4:	mov    ebp,0x259ccb71
  4241e9:	mov    al,ds:0x1dda2262
  4241ee:	retf   
  4241ef:	out    0xd8,al
  4241f1:	pop    esp
  4241f2:	(bad)  
  4241f3:	stos   DWORD PTR es:[edi],eax
  4241f4:	push   ebp
  4241f5:	sub    esp,DWORD PTR [esi-0x1680bf48]
  4241fb:	aas    
  4241fc:	pop    esi
  4241fd:	mov    eax,ds:0xf1891094
  424202:	xchg   ebp,eax
  424203:	and    eax,0x8fe55e5e
  424208:	ja     0x4241be
  42420a:	test   al,0xf2
  42420c:	out    0xdb,al
  42420e:	std    
  42420f:	cmp    BYTE PTR [edx],0x74
  424212:	push   edi
  424213:	ret    
  424214:	leave  
  424215:	retf   0x3fc2
  424218:	sbb    eax,0x232002cd
  42421d:	push   cs
  42421e:	jbe    0x424270
  424220:	push   0xdb8c4db7
  424225:	imul   eax,ecx,0x72
  424228:	arpl   WORD PTR [edx],sp
  42422a:	frstor [ebx+0x2d356b3f]
  424230:	or     cl,bh
  424232:	loope  0x424233
  424234:	(bad)
  424237:	cld    
  424238:	and    dh,ah
  42423a:	sbb    DWORD PTR [ebx-0xee6e9f2],ecx
  424240:	ret    
  424241:	mov    ds:0x9954e696,al
  424246:	cld    
  424247:	xchg   ecx,eax
  424248:	loop   0x4241fd
  42424a:	sbb    al,0x48
  42424c:	in     al,dx
  42424d:	ins    DWORD PTR es:[edi],dx
  42424e:	cs fwait
  424250:	add    edx,DWORD PTR [esi+esi*2]
  424253:	dec    ebp
	...
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x4193212c],1
  42426f:	data16 daa 
  424271:	push   ds
  424272:	mov    edx,0x3ab0001
  424277:	add    BYTE PTR [eax],al
  424279:	push   ebx
  42427a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42427b:	(bad)  
  42427c:	out    0x12,al
  42427e:	add    al,0xd
  424280:	jge    0x4242f7
  424282:	iret   
  424283:	fisttp WORD PTR [esi+0x4e41a629]
  424289:	mov    ?,WORD PTR [eax-0xf1d900f]
  42428f:	push   edx
  424290:	xchg   ebx,eax
  424291:	push   es
  424292:	sub    eax,0xae5c1647
  424297:	or     DWORD PTR [eax+0x1e],esi
  42429a:	jbe    0x4242d0
  42429c:	mov    bh,0x68
  42429e:	mov    ecx,0xb736e6bc
  4242a3:	cmc    
  4242a4:	mov    cl,0x61
  4242a6:	or     BYTE PTR [ebx+0x56],bl
  4242a9:	jo     0x4242a3
  4242ab:	std    
  4242ac:	in     eax,dx
  4242ad:	or     BYTE PTR [ecx],ah
  4242af:	sbb    al,BYTE PTR [edi]
  4242b1:	(bad)  
  4242b2:	fist   DWORD PTR [ebp+0x53]
  4242b5:	aaa    
  4242b6:	inc    ebp
  4242b7:	and    al,bl
  4242b9:	sub    DWORD PTR [esi+0x4f],0x7b
  4242bd:	stc    
  4242be:	pop    esp
  4242bf:	dec    ecx
  4242c0:	xor    al,BYTE PTR [esp+edi*8]
  4242c3:	mov    dh,0x1
  4242c5:	les    ebp,FWORD PTR [eax]
  4242c7:	xor    DWORD PTR [esi+0x1e6f4197],0x7d
  4242ce:	mov    edx,DWORD PTR [esi+0x21]
  4242d1:	test   al,bl
  4242d3:	fdiv   QWORD PTR [edx+esi*1-0x4d7f1f2a]
  4242da:	cmp    BYTE PTR [ecx+edx*2+0x57],bh
  4242de:	bound  edx,QWORD PTR [edx+0x1f840c56]
  4242e4:	inc    esp
  4242e5:	push   0x31
  4242e7:	jl     0x424334
  4242e9:	arpl   WORD PTR [eax+0x6f],sp
  4242ec:	sbb    DWORD PTR [esi+edx*2],edi
  4242ef:	ret    
  4242f0:	add    esp,DWORD PTR [edx]
  4242f2:	pop    ds
  4242f3:	or     ecx,DWORD PTR [ebx]
  4242f5:	test   BYTE PTR [ebp+0x22],ah
  4242f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242f9:	jecxz  0x4242d2
  4242fb:	imul   esp,DWORD PTR [ebp-0x2d20e47b],0xfffffff7
  424302:	jns    0x424346
  424304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424305:	and    DWORD PTR [eax+0x2977a0b0],ebx
  42430b:	(bad)  
  42430c:	mov    bl,0x4b
  42430e:	sbb    dh,BYTE PTR [ecx]
  424310:	or     ebx,DWORD PTR [eax]
  424312:	mov    BYTE PTR [eax-0x9],0x14
  424316:	sbb    ecx,DWORD PTR [ebx+0x5c]
  424319:	xchg   ecx,eax
  42431a:	cmp    eax,0xc00a0ae5
  42431f:	std    
  424320:	dec    esp
  424321:	sbb    dh,BYTE PTR [edi]
  424323:	dec    ebx
  424324:	push   ebx
  424325:	sahf   
  424326:	xor    edi,esi
  424328:	lds    edx,FWORD PTR [edx*4-0x1484e9f1]
  42432f:	mov    DWORD PTR [edi],0xb934eb43
  424335:	fistp  WORD PTR [ebx+0x2d]
  424338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424339:	add    DWORD PTR [ebp+0x41899e0c],0xffffffb2
  424340:	or     ah,BYTE PTR [eax]
  424342:	jge    0x424390
  424344:	jns    0x424369
  424346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424347:	ret    
  424348:	cmp    eax,0x12a19082
  42434d:	add    eax,0x75a55d9e
  424352:	mov    WORD PTR [eax-0x743e52dd],gs
  424358:	pop    ebp
  424359:	xchg   ecx,eax
  42435a:	shl    DWORD PTR [edi-0x1c513d2d],1
  424360:	add    ecx,DWORD PTR [ebx-0x2f]
  424363:	push   ebx
  424364:	aaa    
  424365:	addr16 aas 
  424367:	(bad)
  42436a:	movd   mm5,DWORD PTR [ebx+0x46]
  42436e:	rcl    BYTE PTR [ecx-0x3607ccc4],0x28
  424375:	shl    dh,cl
  424377:	into   
  424378:	aad    0x33
  42437a:	xor    BYTE PTR [edx-0x7aa1f73f],cl
  424380:	aaa    
  424381:	sub    eax,0x6f430eaf
  424386:	xchg   esi,eax
  424387:	(bad)  
  424388:	leave  
  424389:	out    dx,al
  42438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42438b:	dec    edx
  42438c:	icebp  
  42438d:	test   eax,0xdaec72a
  424392:	test   al,0x58
  424394:	scas   al,BYTE PTR es:[edi]
  424395:	cdq    
  424396:	scas   eax,DWORD PTR es:[edi]
  424397:	inc    ebx
  424398:	lock cwde 
  42439a:	sbb    edi,DWORD PTR [eax]
  42439c:	pop    es
  42439d:	sar    ch,cl
  42439f:	dec    esi
  4243a0:	mov    eax,0xbb071fdc
  4243a5:	xor    eax,0xf6c53bb
  4243aa:	push   edx
  4243ab:	bound  ebx,QWORD PTR [edx-0x64]
  4243ae:	ins    DWORD PTR es:[edi],dx
  4243af:	in     eax,dx
  4243b0:	mov    esi,?
  4243b2:	aam    0x6a
  4243b4:	in     al,dx
  4243b5:	arpl   WORD PTR [ecx],sp
  4243b7:	inc    edx
  4243b8:	dec    esi
  4243b9:	int3   
  4243ba:	xchg   edx,eax
  4243bb:	dec    ebp
  4243bc:	push   ds
  4243bd:	lahf   
  4243be:	cmp    al,0xe5
  4243c0:	xchg   esi,eax
  4243c1:	dec    ebx
  4243c2:	push   edx
  4243c3:	icebp  
  4243c4:	retf   0x25e0
  4243c7:	push   ds
  4243c8:	das    
  4243c9:	ret    0x574d
  4243cc:	xor    ch,BYTE PTR [esi]
  4243ce:	loop   0x4243f4
  4243d0:	adc    al,0xf6
  4243d2:	adc    al,0xea
  4243d4:	in     eax,dx
  4243d5:	jmp    0x37d7:0x27504ccb
  4243dc:	xchg   esp,eax
  4243dd:	mov    esi,0xc2ec8017
  4243e2:	or     cl,al
  4243e4:	push   0xd308cdd3
  4243e9:	mov    ds:0x7cd4f9aa,al
  4243ee:	popa   
  4243ef:	outs   dx,DWORD PTR ds:[esi]
  4243f0:	xchg   ebp,eax
  4243f1:	sbb    DWORD PTR [eax+0x3786a183],0xffffff81
  4243f8:	sbb    ah,cl
  4243fa:	pop    edx
  4243fb:	and    DWORD PTR [ebx+0x727ad8b0],eax
  424401:	sub    BYTE PTR [ebx+0x7c],dh
  424404:	push   cs
  424405:	in     eax,dx
  424406:	xor    BYTE PTR [edi+0x14d7a609],dl
  42440c:	jg     0x424451
  42440e:	lods   eax,DWORD PTR ds:[esi]
  42440f:	(bad)  
  424410:	mov    eax,0x25855aa5
  424415:	mov    bh,BYTE PTR [eax+0x1bbbde22]
  42441b:	push   0xb12929b5
  424420:	mov    bh,0xad
  424422:	pop    ebx
  424423:	sahf   
  424424:	cmp    eax,0xb71df324
  424429:	cmp    eax,0xb81bde3e
  42442e:	mov    ebp,0xbd408fbe
  424433:	xchg   al,bl
  424435:	xor    ebp,DWORD PTR [esi]
  424437:	jno    0x4243e6
  424439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42443a:	pusha  
  42443b:	adc    ch,0xc6
  42443e:	lods   al,BYTE PTR ds:[esi]
  42443f:	call   0xf8c7:0x91ff9536
  424446:	mov    ds:0xa438fb8f,al
  42444b:	mov    bx,0x7005
  42444f:	arpl   WORD PTR [ebx+ebx*4-0x5d136f76],bp
  424456:	or     bh,al
  424458:	mov    al,ds:0xcc195c28
  42445d:	ins    DWORD PTR es:[edi],dx
  42445e:	sbb    ah,al
  424460:	outs   dx,BYTE PTR ds:[esi]
  424461:	inc    eax
  424462:	stos   BYTE PTR es:[edi],al
  424463:	dec    eax
  424464:	popa   
  424465:	push   es
  424466:	cli    
  424467:	loopne 0x424423
  424469:	fimul  WORD PTR [ebx+0x61]
  42446c:	icebp  
  42446d:	add    ebx,DWORD PTR ds:0x760a64d7
  424473:	fwait
  424474:	ins    DWORD PTR es:[edi],dx
  424475:	push   eax
  424476:	push   esp
  424477:	xor    BYTE PTR [edi+0x151ab347],al
  42447d:	pop    edx
  42447e:	mov    esi,ds
  424480:	or     dh,bh
  424482:	fist   WORD PTR [eax+0x4d654837]
  424488:	pop    ecx
  424489:	add    BYTE PTR [edi],bl
  42448b:	cmp    esp,DWORD PTR [esi]
  42448d:	or     BYTE PTR [edi-0x7c],bh
  424490:	inc    esp
  424491:	inc    ecx
  424492:	mov    dl,0x1d
  424494:	sub    al,0x61
  424496:	or     eax,0x6207ca70
  42449b:	sbb    BYTE PTR [eax+0x76891ac7],0xbb
  4244a2:	push   cs
  4244a3:	xchg   ebp,eax
  4244a4:	or     esp,DWORD PTR [edi+0x68]
  4244a7:	sbb    DWORD PTR [ecx-0x4d],edi
  4244aa:	test   BYTE PTR [esi-0x5ce155be],cl
  4244b0:	xlat   BYTE PTR ds:[ebx]
  4244b1:	mov    edx,0x7bc84588
  4244b6:	xor    ecx,DWORD PTR gs:[ecx]
  4244b9:	call   0xffb93317
  4244be:	sti    
  4244bf:	mov    ebx,0xdd8e2244
  4244c4:	stos   DWORD PTR es:[edi],eax
  4244c5:	mov    esi,0xbbaa7a26
  4244ca:	add    esi,DWORD PTR [esi]
  4244cc:	ins    BYTE PTR es:[edi],dx
  4244cd:	test   al,0x80
  4244cf:	clc    
  4244d0:	jle    0x42448e
  4244d2:	scas   eax,DWORD PTR es:[edi]
  4244d3:	xchg   DWORD PTR [ebx-0x43c6f436],esp
  4244d9:	int    0x4a
  4244db:	sub    al,0xc3
  4244dd:	mov    dl,0x9e
  4244df:	dec    eax
  4244e0:	mov    gs,WORD PTR [eax]
  4244e2:	dec    esi
  4244e3:	lahf   
  4244e4:	stos   BYTE PTR es:[edi],al
  4244e5:	or     edx,0x9426eda0
  4244eb:	fmulp  st(6),st
  4244ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244ee:	int    0x15
  4244f0:	mov    ds,WORD PTR ds:0x3c8b4365
  4244f6:	dec    ebp
  4244f7:	mov    ecx,0x2843552
  4244fc:	fmul   QWORD PTR ds:0x540858b2
  424502:	fcmovnb st,st(1)
  424504:	inc    esp
  424505:	pop    eax
  424506:	push   edx
  424507:	jmp    0x8bc9:0x827a1a49
  42450e:	pop    es
  42450f:	xor    BYTE PTR [edx+0x23bea668],al
  424515:	out    0x98,eax
  424517:	adc    ebx,edi
  424519:	xor    cl,cl
  42451b:	jg     0x4244ee
  42451d:	and    edx,ebp
  42451f:	outs   dx,DWORD PTR ds:[esi]
  424520:	cmp    DWORD PTR [edi-0x3],esp
  424523:	lock add eax,0xb3702ef4
  424529:	xor    DWORD PTR [edi-0x63],esp
  42452c:	lods   eax,DWORD PTR ds:[esi]
  42452d:	adc    dh,BYTE PTR [esi-0x54]
  424530:	test   ecx,edi
  424532:	std    
  424533:	fldcw  WORD PTR [eax]
  424535:	mov    esi,0x6858faed
  42453a:	add    al,BYTE PTR [esi-0x23]
  42453d:	pop    es
  42453e:	mov    dh,0x74
  424540:	scas   eax,DWORD PTR es:[edi]
  424541:	inc    esi
  424542:	cmc    
  424543:	test   al,0x0
  424545:	(bad)  
  424546:	ror    BYTE PTR [ebx+0x37f85ff5],1
  42454c:	rol    DWORD PTR [ebx],cl
  42454e:	outs   dx,BYTE PTR ds:[si]
  424550:	adc    ecx,DWORD PTR [edi]
  424552:	into   
  424553:	call   0xa56bda8b
  424558:	cmp    esp,edi
  42455a:	shr    BYTE PTR [ecx-0x6d],cl
  42455d:	xor    eax,0x7cfb0639
  424562:	lahf   
  424563:	mov    ds:0x6848a653,al
  424568:	and    al,BYTE PTR [esi-0x6e8524b5]
  42456e:	nop
  42456f:	retf   0x8a60
  424572:	push   ecx
  424573:	or     DWORD PTR [edx],0xffffffaf
  424576:	mov    dl,0xed
  424578:	push   edi
  424579:	jmp    0x4245a7
  42457b:	aas    
  42457c:	mov    dh,0xee
  42457e:	cmp    al,0x9a
  424580:	imul   edi,DWORD PTR [esi-0x4a],0xc27f4ab4
  424587:	dec    edx
  424588:	sar    BYTE PTR [edx+edx*2],cl
  42458b:	dec    eax
  42458c:	stc    
  42458d:	and    BYTE PTR [eax+0x77],bh
  424590:	(bad)  
  424591:	jns    0x4245eb
  424593:	xchg   edi,eax
  424594:	push   eax
  424595:	push   esp
  424596:	mov    dh,0xd3
  424598:	ja     0x4245bd
  42459a:	pop    edx
  42459b:	pop    es
  42459c:	cli    
  42459d:	data16 jne 0x42459a
  4245a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245a1:	sub    BYTE PTR [ebx-0x7a],cl
  4245a4:	lea    edx,[ecx-0x5e]
  4245a7:	iret   
  4245a8:	sbb    eax,0xb7235217
  4245ad:	mov    edi,0xc6f35b3e
  4245b2:	ja     0x4245dc
  4245b4:	hlt    
  4245b5:	xchg   DWORD PTR [eax+eiz*4+0x2a3c6a87],ecx
  4245bc:	scas   al,BYTE PTR es:[edi]
  4245bd:	dec    ebx
  4245be:	stos   DWORD PTR es:[edi],eax
  4245bf:	(bad)  
  4245c0:	dec    esi
  4245c1:	repz mov ebx,0x89222ab0
  4245c7:	jp     0x4245bc
  4245c9:	jae    0xa8de2ff3
  4245cf:	push   ecx
  4245d0:	xchg   ecx,eax
  4245d1:	aaa    
  4245d2:	mov    ecx,DWORD PTR [eax]
  4245d4:	fxsave [ecx]
  4245d7:	pop    esp
  4245d8:	or     al,0x4f
  4245da:	dec    esp
  4245db:	push   esp
  4245dc:	pop    ss
  4245dd:	xchg   esi,eax
  4245de:	jns    0x42465f
  4245e0:	and    ebx,DWORD PTR [edx]
  4245e2:	iret   
  4245e3:	inc    edx
  4245e4:	icebp  
  4245e5:	not    DWORD PTR [ebp+0x65]
  4245e8:	add    BYTE PTR [ebp-0x7c163669],ch
  4245ee:	push   edx
  4245ef:	pop    edx
  4245f0:	push   eax
  4245f1:	inc    ebp
  4245f2:	xlat   BYTE PTR ds:[ebx]
  4245f3:	xchg   DWORD PTR [eax+0x1b],edi
  4245f6:	imul   dh
  4245f8:	push   ebp
  4245f9:	mov    ecx,0x9d66f5ce
  4245fe:	push   eax
  4245ff:	dec    edi
  424600:	xchg   ebp,eax
  424601:	mov    dh,dl
  424603:	mov    ah,BYTE PTR [ebp-0x19bcb21a]
  424609:	pop    esp
  42460a:	dec    ebp
  42460b:	jmp    FWORD PTR [edx+0x74]
  42460e:	and    edi,ecx
  424610:	xor    al,0x2d
  424612:	push   ecx
  424613:	fcomp  DWORD PTR [ecx-0x55]
  424616:	mov    eax,0xd0fc294e
  42461b:	mov    esi,0xd3b58931
  424620:	fmul   DWORD PTR [edi+ecx*2]
  424623:	rol    BYTE PTR [eax],cl
	...
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	mov    ebp,0xc953bd03
  424642:	mov    ebp,0x3ab0001
  424647:	add    BYTE PTR [eax],al
  424649:	lds    esi,FWORD PTR [edi+0x1a]
  42464c:	test   DWORD PTR [edx+0x32ec7ed2],edi
  424652:	xlat   BYTE PTR ds:[ebx]
  424653:	adc    cl,bl
  424655:	inc    eax
  424656:	add    al,0x95
  424658:	xor    al,0x81
  42465a:	cmp    ecx,DWORD PTR [ecx]
  42465c:	repz dec edi
  42465e:	jmp    FWORD PTR [eax+esi*8]
  424661:	imul   ebx,DWORD PTR [edx],0xe9cff69d
  424667:	xchg   DWORD PTR [eax-0x56],esp
  42466a:	xlat   BYTE PTR ds:[ebx]
  42466b:	sbb    BYTE PTR [eax],ah
  42466d:	imul   edi,DWORD PTR [ecx-0x1c4a1791],0xb311b2e
  424677:	xchg   esp,eax
  424678:	inc    ebp
  424679:	test   dl,dl
  42467b:	jecxz  0x4246b1
  42467d:	mov    ebx,0x865a0a8a
  424682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424683:	mov    ebp,0xbbcd2073
  424688:	sub    bl,0x23
  42468b:	jns    0x4246f2
  42468d:	fistp  WORD PTR [ebx+eax*1+0x5c]
  424691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424692:	fstp   QWORD PTR [edx-0x9469a55]
  424698:	loope  0x42461e
  42469a:	ds jnp 0x4246a7
  42469d:	adc    al,BYTE PTR [ecx-0x13]
  4246a0:	shl    DWORD PTR [edi],cl
  4246a2:	fidivr WORD PTR [bp+si-0x188e]
  4246a7:	mov    dl,0xd7
  4246a9:	out    0x92,eax
  4246ab:	sbb    al,0xf1
  4246ad:	fisttp QWORD PTR [eax]
  4246af:	sub    edx,ebx
  4246b1:	fdiv   DWORD PTR [esi+esi*2+0x7c]
  4246b5:	std    
  4246b6:	push   cs
  4246b7:	(bad)  
  4246b8:	into   
  4246b9:	push   es
  4246ba:	shl    DWORD PTR [bx+si-0x1f],1
  4246be:	(bad)  
  4246bf:	repz jno 0x424691
  4246c2:	mov    eax,ds:0x9039fe5d
  4246c7:	cmc    
  4246c8:	repz std 
  4246ca:	adc    DWORD PTR [edi],0x97e2a417
  4246d0:	ja     0x4246cf
  4246d2:	dec    ebx
  4246d3:	fist   DWORD PTR [edx]
  4246d5:	add    eax,0x56a278e7
  4246da:	pushf  
  4246db:	jle    0x4246f2
  4246dd:	cmp    ch,BYTE PTR ds:[ecx]
  4246e0:	fcom   DWORD PTR [eax]
  4246e2:	gs (bad) 
  4246e4:	js     0x424673
  4246e6:	mov    edi,0x71f87080
  4246eb:	pusha  
  4246ec:	and    eax,edi
  4246ee:	jecxz  0x4246d1
  4246f0:	or     ch,BYTE PTR [edi+0x11]
  4246f3:	or     ebp,ecx
  4246f5:	cwde   
  4246f6:	jl     0x42472d
  4246f8:	jmp    0x4246bb
  4246fa:	loop   0x42473f
  4246fc:	mov    esi,0x7d5332c8
  424701:	daa    
  424702:	sbb    eax,DWORD PTR [edi]
  424704:	push   ebp
  424705:	ins    BYTE PTR es:[edi],dx
  424706:	(bad)  
  424707:	pop    es
  424708:	rcr    BYTE PTR [ebx],cl
  42470a:	xchg   edx,eax
  42470b:	xchg   ecx,eax
  42470c:	sahf   
  42470d:	lock pop edi
  42470f:	push   ecx
  424710:	inc    ebp
  424711:	pop    esp
  424712:	outs   dx,DWORD PTR ds:[esi]
  424713:	loop   0x42477a
  424715:	jg     0x42472c
  424717:	add    bh,dh
  424719:	sti    
  42471a:	ret    0xbccb
  42471d:	test   DWORD PTR [esp+esi*2+0x79],eax
  424721:	jnp    0x424732
  424723:	jnp    0x42477a
  424725:	in     al,0x6f
  424727:	sar    bh,1
  424729:	pop    es
  42472a:	mov    bl,0x56
  42472c:	sbb    al,0x32
  42472e:	xor    eax,0xcde527a6
  424733:	aam    0x8f
  424735:	jbe    0x4247a2
  424737:	dec    ebx
  424738:	add    al,0x6c
  42473a:	push   ss
  42473b:	fsub   QWORD PTR [edx-0x126c98]
  424741:	inc    edx
  424742:	sub    bl,BYTE PTR [ecx+0x11e115a1]
  424748:	jne    0x424731
  42474a:	outs   dx,BYTE PTR ds:[esi]
  42474b:	push   edi
  42474c:	lea    eax,[ebp+ebp*1+0x19]
  424750:	push   ss
  424751:	out    dx,al
  424752:	jp     0x4247ae
  424754:	pop    ebx
  424755:	inc    esi
  424756:	lods   eax,DWORD PTR ds:[esi]
  424757:	sbb    al,0xea
  424759:	inc    esp
  42475a:	unpcklps xmm6,XMMWORD PTR [edx+ecx*2-0x15]
  42475f:	cmp    eax,0x7fc63c6d
  424764:	mov    WORD PTR [ebx],fs
  424766:	sub    esp,DWORD PTR [edx]
  424768:	jb     0x4247dc
  42476a:	ins    DWORD PTR es:[edi],dx
  42476b:	jmp    0x4247dd
  42476d:	adc    edx,esi
  42476f:	nop
  424770:	push   edx
  424771:	js     0x424700
  424773:	mov    bl,0x10
  424775:	push   cs
  424776:	dec    ebx
  424777:	dec    ecx
  424778:	mov    ah,0xc1
  42477a:	test   eax,0x6084d3ad
  42477f:	mov    edx,esp
  424781:	mov    dh,0x46
  424783:	jle    0x424716
  424785:	pop    edx
  424786:	fs pop esp
  424788:	(bad)  
  424789:	int3   
  42478a:	adc    BYTE PTR [ebp+0x60],dh
  42478d:	mov    edi,0xa15072e2
  424792:	mov    eax,0xf12a4d67
  424797:	sub    BYTE PTR [esi-0x4d6d5515],dl
  42479d:	loopne 0x42478e
  42479f:	int3   
  4247a0:	pop    eax
  4247a1:	xor    al,0x33
  4247a3:	push   edi
  4247a4:	sub    dl,BYTE PTR [edx-0x7b]
  4247a7:	das    
  4247a8:	pop    esi
  4247a9:	jo     0x424803
  4247ab:	mov    ch,0x3a
  4247ad:	jle    0x4247f0
  4247af:	stos   DWORD PTR es:[edi],eax
  4247b0:	mov    ebp,0x55e81956
  4247b5:	cmp    BYTE PTR [ecx+esi*8+0x10],al
  4247b9:	inc    ecx
  4247ba:	xchg   esp,eax
  4247bb:	jp     0x424792
  4247bd:	xor    bl,BYTE PTR [edi+0x37fc1df4]
  4247c3:	fsubr  DWORD PTR [eax+0x67]
  4247c6:	(bad)  
  4247c7:	push   0xffffff84
  4247c9:	lock inc esi
  4247cb:	adc    BYTE PTR [ebx+0x45],dh
  4247ce:	scas   al,BYTE PTR es:[edi]
  4247cf:	enter  0xe5ff,0x16
  4247d3:	dec    edi
  4247d4:	sub    ah,BYTE PTR [edi+esi*2-0x32c09db4]
  4247db:	lods   eax,DWORD PTR ds:[esi]
  4247dc:	mov    ds:0xd2e6a45f,al
  4247e1:	jne    0x42476b
  4247e3:	and    ah,BYTE PTR [edx+0x21]
  4247e6:	scas   eax,DWORD PTR es:[edi]
  4247e7:	jo     0x42479a
  4247e9:	popa   
  4247ea:	sbb    al,0x39
  4247ec:	xchg   ebx,eax
  4247ed:	mov    ebx,0x667264ba
  4247f2:	gs loopne 0x42479d
  4247f5:	inc    eax
  4247f6:	jge    0x424829
  4247f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247f9:	dec    edx
  4247fa:	and    eax,0x41d18757
  4247ff:	adc    ah,BYTE PTR [esi+0x7999e26a]
  424805:	aad    0xe0
  424807:	les    eax,FWORD PTR gs:0x7a204794
  42480e:	fist   WORD PTR [ebx]
  424810:	cmp    eax,0x35b1bea4
  424815:	add    eax,edi
  424817:	shr    BYTE PTR [ebp-0x2cad7813],cl
  42481d:	dec    edi
  42481e:	outs   dx,BYTE PTR ds:[esi]
  42481f:	xchg   esi,eax
  424820:	cpuid  
  424822:	pop    ebp
  424823:	js     0x4248a1
  424825:	cmc    
  424826:	fdiv   DWORD PTR [esi+0x1ebdfa0a]
  42482c:	xor    DWORD PTR [ecx],esp
  42482e:	xchg   cl,cl
  424830:	scas   al,BYTE PTR es:[edi]
  424831:	xchg   edx,eax
  424832:	popf   
  424833:	mov    ecx,0x1a26c7f0
  424838:	imul   ebx,DWORD PTR [eax],0x7f
  42483b:	fs ja  0x42485b
  42483e:	sub    BYTE PTR [esi+0x30],al
  424841:	xor    ecx,DWORD PTR [eax+0x266729d4]
  424847:	into   
  424848:	icebp  
  424849:	sahf   
  42484a:	sub    eax,0x7bf6688e
  42484f:	or     al,0xed
  424851:	sar    BYTE PTR [ebx+0x26],1
  424854:	rcl    BYTE PTR ds:0xb298adaa,0x49
  42485b:	pop    ds
  42485c:	popa   
  42485d:	test   DWORD PTR [esp+eiz*2+0x131ba3cd],ebp
  424864:	in     eax,dx
  424865:	sar    BYTE PTR [ecx+0x8df06fa],cl
  42486b:	in     al,dx
  42486c:	mov    ah,0xc7
  42486e:	mov    fs,WORD PTR [ebx-0x80]
  424871:	mov    ds:0xe47640fe,eax
  424876:	loopne 0x42486d
  424878:	jb     0x424802
  42487a:	xor    ecx,DWORD PTR [ebx+0x5c]
  42487d:	je     0x4248a7
  42487f:	add    dh,BYTE PTR [edx]
  424881:	nop
  424882:	ss mov ecx,0x730b3a76
  424888:	stc    
  424889:	fisttp DWORD PTR ss:[esi+0x7b]
  42488d:	inc    esp
  42488e:	(bad)  ds:0xc810e9e1
  424894:	ret    
  424895:	fstp   QWORD PTR [edi+0x4df4cde2]
  42489b:	ror    al,0x8f
  42489e:	fnstenv [eax]
  4248a0:	arpl   bx,di
  4248a2:	jmp    0x4248bf
  4248a4:	push   esp
  4248a5:	or     BYTE PTR [edx],dl
  4248a7:	cwde   
  4248a8:	xlat   BYTE PTR ds:[ebx]
  4248a9:	sbb    DWORD PTR ds:0x3212ff4d,esi
  4248af:	cwde   
  4248b0:	mov    bl,0x90
  4248b2:	or     DWORD PTR [ebx],esp
  4248b4:	fs xor al,0x98
  4248b7:	mov    esi,0x487b02b1
  4248bc:	push   es
  4248bd:	adc    eax,0x381e861d
  4248c2:	sbb    DWORD PTR [edx+eiz*1+0x1faa10b9],edi
  4248c9:	pop    esp
  4248ca:	rcl    BYTE PTR [ebx+0x6f2f37ef],0x58
  4248d1:	push   0x4479e462
  4248d6:	cmp    ah,BYTE PTR [ecx-0x16c1c6ce]
  4248dc:	fld    DWORD PTR [ecx-0x4a]
  4248df:	jno    0x424899
  4248e1:	shr    BYTE PTR [eax+ebx*4+0x3e],0x5f
  4248e6:	daa    
  4248e7:	sbb    BYTE PTR [ecx+eax*8-0x74],bh
  4248eb:	mov    edx,0x8825f712
  4248f0:	xor    bl,ch
  4248f2:	pop    eax
  4248f3:	aad    0x5a
  4248f5:	pop    esi
  4248f6:	push   ebp
  4248f7:	sbb    esi,edx
  4248f9:	push   ss
  4248fa:	ret    
  4248fb:	jmp    0x4248f1
  4248fd:	fdiv   DWORD PTR [esi-0x384af4ed]
  424903:	adc    esi,esp
  424905:	xor    ah,BYTE PTR [esi-0x78]
  424908:	pop    ecx
  424909:	bound  esp,QWORD PTR [esi+0x75f8c40e]
  42490f:	aas    
  424910:	gs pop ds
  424912:	xchg   edi,eax
  424913:	sub    eax,0x5ef9b11e
  424918:	(bad)  
  424919:	pop    esp
  42491a:	test   edi,edi
  42491c:	sub    DWORD PTR [ebx-0x6b00cb7a],ebx
  424922:	sar    DWORD PTR [esi-0x69365f7d],1
  424928:	stos   DWORD PTR es:[edi],eax
  424929:	jg     0x424937
  42492b:	add    dh,cl
  42492d:	or     esi,DWORD PTR [ebp+eax*1-0x38]
  424931:	and    al,0x96
  424933:	adc    esi,edi
  424935:	hlt    
  424936:	or     eax,0x61fe5061
  42493b:	ror    BYTE PTR [edi-0x3be5fa9b],1
  424941:	xchg   edx,eax
  424942:	adc    eax,0x56b27668
  424947:	das    
  424948:	cmp    dh,BYTE PTR [ecx+0x3c]
  42494b:	repnz add al,0xe
  42494e:	jmp    0x42497b
  424950:	dec    edx
  424951:	int3   
  424952:	js     0x4249a0
  424954:	jg     0x424926
  424956:	jae    0x4249d4
  424958:	hlt    
  424959:	les    edx,FWORD PTR [eax]
  42495b:	repz push 0x49947b5f
  424961:	sub    ch,BYTE PTR [eax]
  424963:	jle    0x424998
  424965:	mov    esi,gs
  424967:	pop    es
  424968:	and    eax,0x6fd22c3f
  42496d:	cli    
  42496e:	mov    dl,0xb8
  424970:	inc    esi
  424971:	imul   esp,DWORD PTR [edi],0x7b
  424974:	sbb    BYTE PTR [edi+0x8],0xdd
  424978:	cld    
  424979:	and    edx,DWORD PTR [ebp+0x2ec6ca49]
  42497f:	(bad)  
  424980:	fisubr WORD PTR [eax-0x45]
  424983:	test   BYTE PTR [edx+0x2489ef44],dl
  424989:	xor    eax,0xdb40cc5a
  42498e:	icebp  
  42498f:	and    eax,0x65c81d2d
  424994:	(bad)  
  424996:	mov    ?,WORD PTR [ecx]
  424998:	lods   al,BYTE PTR ds:[esi]
  424999:	aas    
  42499a:	push   ss
  42499b:	(bad)  
  42499c:	aas    
  42499d:	sub    al,0x1a
  42499f:	jecxz  0x424960
  4249a1:	push   ecx
  4249a2:	shl    BYTE PTR [edi-0x469b1d93],cl
  4249a8:	push   ds
  4249a9:	or     al,0x5c
  4249ab:	js     0x424a03
  4249ad:	and    BYTE PTR [edx+eiz*8+0x6b],ah
  4249b1:	add    BYTE PTR [esi+edi*2+0x2d756e2c],ch
  4249b8:	mov    esi,0x16cf9627
  4249bd:	div    DWORD PTR [ebx]
  4249bf:	aaa    
  4249c0:	shl    DWORD PTR [eax-0x47c41b9f],0x61
  4249c7:	dec    edi
  4249c8:	retf   0xf5a0
  4249cb:	dec    esi
  4249cc:	sub    BYTE PTR [edx-0x1aff4e31],cl
  4249d2:	xor    dl,BYTE PTR [ebx+edi*4-0x36371433]
  4249d9:	jmp    0x4249e7
  4249db:	repz int 0x28
  4249de:	inc    ebx
  4249df:	call   0x7559cd23
  4249e4:	sub    eax,DWORD PTR [ecx+0x17]
  4249e7:	out    0xe,ax
  4249ea:	(bad)  
  4249eb:	or     edx,DWORD PTR [ebx+0x3a]
  4249ee:	cbw    
  4249f0:	les    ecx,FWORD PTR ds:0x61ed
	...
  4249fe:	add    BYTE PTR [eax],al
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	dec    ecx
  424a0e:	mov    ch,0x9b
  424a10:	bnd je 0x4249d4
  424a13:	add    DWORD PTR [eax],eax
  424a15:	stos   DWORD PTR es:[edi],eax
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    BYTE PTR [edi+eiz*8-0x147a9edd],bl
  424a1f:	lods   al,BYTE PTR ds:[esi]
  424a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a21:	pop    edx
  424a22:	(bad)  
  424a23:	cmp    BYTE PTR [ebp-0x113c4bb6],bl
  424a29:	push   edx
  424a2a:	mov    dh,0xd9
  424a2c:	addr16 icebp 
  424a2e:	push   cs
  424a2f:	rcl    BYTE PTR [ecx+0x4698a1b1],cl
  424a35:	arpl   WORD PTR [ebx-0x16],sp
  424a38:	stos   BYTE PTR es:[edi],al
  424a39:	lods   eax,DWORD PTR ds:[esi]
  424a3a:	dec    eax
  424a3b:	pop    ecx
  424a3c:	dec    edi
  424a3d:	push   ebx
  424a3e:	push   es
  424a3f:	retf   0x3d35
  424a42:	mov    bh,0x7f
  424a44:	mov    al,ds:0x772bdd7a
  424a49:	and    eax,0xff862f3d
  424a4e:	arpl   WORD PTR [edx+0x1f214a1d],cx
  424a54:	xchg   edx,eax
  424a55:	xchg   DWORD PTR [eax+0x5ad4356d],ebx
  424a5b:	gs sbb dh,cl
  424a5e:	inc    ecx
  424a5f:	dec    esi
  424a60:	sub    DWORD PTR [eax+0x12],ebp
  424a63:	xlat   BYTE PTR ds:[ebx]
  424a64:	jno    0x424ab6
  424a66:	push   0x26aa5511
  424a6b:	pop    ss
  424a6c:	push   ebp
  424a6d:	sub    eax,DWORD PTR [edx-0x27]
  424a70:	fidiv  DWORD PTR [ebp+0x40188202]
  424a76:	and    al,0x35
  424a78:	mov    dl,0x25
  424a7a:	pop    esp
  424a7b:	bound  esp,QWORD PTR [edi-0x6d]
  424a7e:	daa    
  424a7f:	mov    edi,0x97538050
  424a84:	mov    ebp,0x7c83a299
  424a89:	int3   
  424a8a:	sahf   
  424a8b:	repz mov eax,ds:0xb043510e
  424a91:	cmp    eax,0x4a129530
  424a96:	cwde   
  424a97:	(bad)  
  424a98:	sbb    eax,0x16db381a
  424a9d:	fidiv  WORD PTR [ebx]
  424a9f:	pop    eax
  424aa0:	pop    dx
  424aa2:	test   eax,0x9c96621b
  424aa7:	loop   0x424ac4
  424aa9:	imul   esp,DWORD PTR [eax-0x616d8365],0x198d1220
  424ab3:	push   ds
  424ab4:	retf   
  424ab5:	fnstsw WORD PTR [ebp-0x3d]
  424ab8:	push   edx
  424ab9:	adc    bh,dh
  424abb:	fdiv   QWORD PTR ds:[esi+0x31]
  424abf:	xor    al,0x63
  424ac1:	pop    esp
  424ac2:	retf   
  424ac3:	aaa    
  424ac4:	jg     0x424ac7
  424ac6:	and    BYTE PTR [ecx+0x564c1928],cl
  424acc:	ins    DWORD PTR es:[edi],dx
  424acd:	jne    0x424a9f
  424acf:	or     BYTE PTR [edx],cl
  424ad1:	sbb    BYTE PTR [esi+eiz*8-0x11],bh
  424ad5:	pop    ss
  424ad6:	ret    0x7192
  424ad9:	ins    DWORD PTR es:[edi],dx
  424ada:	sub    eax,0x36fda8d9
  424adf:	sub    edi,DWORD PTR [ebp+ebp*2-0x666f1dce]
  424ae6:	je     0x424abb
  424ae8:	sti    
  424ae9:	sbb    edi,0x2f
  424aec:	jb     0x424ad0
  424aee:	sbb    dl,dl
  424af0:	mov    dh,0x24
  424af2:	or     bl,BYTE PTR [eax+0x4a]
  424af5:	dec    ebp
  424af6:	mov    al,0xe8
  424af8:	dec    BYTE PTR [ebx]
  424afa:	adc    bl,bh
  424afc:	lahf   
  424afd:	adc    eax,0x5ca22e1a
  424b02:	jmp    0x424b0b
  424b04:	in     al,0xea
  424b06:	adc    BYTE PTR [ebx],al
  424b08:	or     al,0xb0
  424b0a:	pop    edx
  424b0b:	jo     0x424a9e
  424b0d:	dec    esi
  424b0e:	adc    eax,0x3f227573
  424b13:	fcmovnu st,st(3)
  424b15:	pextrw eax,(bad),0xc5
  424b17:	inc    ebp
  424b18:	sbb    al,0xc3
  424b1a:	xor    DWORD PTR [eax+edi*4+0x65b7ba8e],0xf0d6c589
  424b25:	adc    BYTE PTR [ebx+0x71],ah
  424b28:	shl    bl,cl
  424b2a:	enter  0x8ab3,0xd5
  424b2e:	pmaxsw mm4,QWORD PTR [eax-0x5e2c0649]
  424b35:	cmp    ch,BYTE PTR [esi-0x25cc21ac]
  424b3b:	jne    0x424b75
  424b3d:	pop    eax
  424b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b3f:	js     0x424b54
  424b41:	and    ebx,ecx
  424b43:	fidivr DWORD PTR [eax+edi*8]
  424b46:	es into 
  424b48:	inc    ecx
  424b49:	jle    0x424b8d
  424b4b:	popa   
  424b4c:	cmp    DWORD PTR [ecx-0x6350bef4],eax
  424b52:	sti    
  424b53:	sub    DWORD PTR [ecx+0x6812bb96],edx
  424b59:	mov    bh,0x81
  424b5b:	add    al,0xa6
  424b5d:	and    eax,0xd2338c0d
  424b62:	dec    ecx
  424b63:	jmp    0x58cef895
  424b68:	retf   0xb712
  424b6b:	mov    edi,0xbfe593f4
  424b70:	jp     0x424b1b
  424b72:	dec    edx
  424b73:	xchg   ebx,eax
  424b74:	lea    ebp,[ebx+0x49bebb8c]
  424b7a:	fild   QWORD PTR [ebx]
  424b7c:	jp     0x424b64
  424b7e:	ins    DWORD PTR es:[edi],dx
  424b7f:	push   eax
  424b80:	mul    cl
  424b82:	jp     0x424bae
  424b84:	push   0x18
  424b86:	lldt   WORD PTR [edx-0xea34edc]
  424b8d:	xor    eax,0xc1677c28
  424b92:	in     al,dx
  424b93:	aaa    
  424b94:	sbb    al,0xa0
  424b96:	xchg   DWORD PTR [ebp+ecx*4-0x649e7dd8],edx
  424b9d:	int    0x72
  424b9f:	mov    BYTE PTR [edx-0x4a],bl
  424ba2:	call   0xbfa5:0xa0b368d2
  424ba9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  424bab:	popf   
  424bac:	(bad)  
  424bad:	out    dx,eax
  424bae:	jp     0x424bea
  424bb0:	sub    eax,0xa8ba174
  424bb5:	addr16 adc al,0x5a
  424bb8:	mov    bl,BYTE PTR [edx+ebx*2]
  424bbb:	adc    esp,DWORD PTR [esi]
  424bbd:	sbb    BYTE PTR [ebx-0x6061ee73],al
  424bc3:	jmp    0x424bcf
  424bc5:	and    DWORD PTR [edx],edx
  424bc7:	jne    0x424c40
  424bc9:	add    BYTE PTR [esi],dh
  424bcb:	test   eax,0xc0ffbd41
  424bd0:	push   ebx
  424bd1:	mov    dl,0x50
  424bd3:	imul   esi,DWORD PTR [ecx],0xcf195834
  424bd9:	fwait
  424bda:	or     eax,0xf7f238b5
  424bdf:	scas   al,BYTE PTR es:[edi]
  424be0:	sbb    al,0x8b
  424be2:	push   esi
  424be3:	dec    esi
  424be4:	inc    ecx
  424be5:	ret    0x622d
  424be8:	adc    bl,ah
  424bea:	jmp    0x424b81
  424bec:	out    0x4f,eax
  424bee:	adc    bh,BYTE PTR [ecx]
  424bf0:	or     eax,0x524d4f28
  424bf5:	cmp    eax,0x180bd71b
  424bfa:	pushf  
  424bfb:	pop    esi
  424bfc:	xchg   ecx,eax
  424bfd:	adc    ah,ah
  424bff:	xor    edi,0x53e826e6
  424c05:	pushf  
  424c06:	imul   ecx,DWORD PTR [edi+0x7902896],0x23329bf
  424c10:	jl     0x424c65
  424c12:	mov    al,ds:0xa2f69eec
  424c17:	dec    edi
  424c18:	imul   edx,DWORD PTR [eax+0x2ba14148],0xcb947c0e
  424c22:	pop    esi
  424c23:	add    eax,0x7c1d89e2
  424c28:	aam    0xf8
  424c2a:	inc    DWORD PTR [edi-0x6c8797cb]
  424c30:	and    edx,DWORD PTR [ebx+0x71c35289]
  424c36:	loope  0x424bc9
  424c38:	add    DWORD PTR [eax-0x10],ebx
  424c3b:	dec    ebp
  424c3c:	push   edx
  424c3d:	mov    WORD PTR [ebp+0x44a749de],cs
  424c43:	out    dx,eax
  424c44:	mov    DWORD PTR [edi+0x0],ebp
  424c47:	add    esi,DWORD PTR [edx-0x8b3d654]
  424c4d:	jb     0x424c0e
  424c4f:	add    eax,DWORD PTR [edi+0x6b]
  424c52:	inc    edi
  424c53:	loope  0x424ccb
  424c55:	call   0x939ce3e
  424c5a:	cmp    DWORD PTR [ebp+0x7b],ebp
  424c5d:	fisttp DWORD PTR [ebx]
  424c5f:	shl    BYTE PTR [eax-0x1],cl
  424c62:	jns    0x424c83
  424c64:	xor    eax,0x30cfb615
  424c69:	mov    ecx,edx
  424c6b:	(bad)  
  424c6d:	adc    eax,0xb4d30442
  424c72:	mov    esi,0xd3dcd4cf
  424c77:	test   bl,cl
  424c79:	fadd   QWORD PTR [esi]
  424c7b:	sbb    dl,BYTE PTR [ecx]
  424c7d:	or     al,0x4a
  424c7f:	add    eax,DWORD PTR [ecx]
  424c81:	out    dx,al
  424c82:	cmp    BYTE PTR [edi+0x7105a45c],0xff
  424c89:	gs or  ebp,esi
  424c8c:	bound  ebp,QWORD PTR [edi+eax*1+0x1f95f542]
  424c93:	pop    esp
  424c94:	sti    
  424c95:	sbb    ecx,DWORD PTR [edi]
  424c97:	adc    BYTE PTR [ebp-0x1726a964],dl
  424c9d:	mov    al,0xa
  424c9f:	xor    edi,DWORD PTR [eax+0x42]
  424ca2:	sub    al,0x46
  424ca4:	clc    
  424ca5:	pop    ecx
  424ca6:	jnp    0x424cb5
  424ca8:	test   BYTE PTR [edx-0xfd967be],0x3d
  424caf:	jg     0x424d09
  424cb1:	lock loop 0x424c76
  424cb4:	push   ebx
  424cb5:	pop    ebp
  424cb6:	and    DWORD PTR [esi+0x733fd05],ebp
  424cbc:	push   es
  424cbd:	rol    DWORD PTR [ebx+0x46705d69],cl
  424cc3:	test   eax,0xcb364388
  424cc8:	jg     0x424cad
  424cca:	adc    dh,BYTE PTR [esi+0x34fa84d2]
  424cd0:	icebp  
  424cd1:	pop    ebp
  424cd2:	mov    edi,0x55be75bf
  424cd7:	popa   
  424cd8:	pop    es
  424cd9:	loope  0x424c80
  424cdb:	and    al,0x28
  424cdd:	sub    cl,BYTE PTR [edx+0x55]
  424ce0:	retf   
  424ce1:	xchg   ebx,eax
  424ce2:	mov    cl,0x65
  424ce4:	cli    
  424ce5:	scas   eax,DWORD PTR es:[edi]
  424ce6:	fistp  WORD PTR [edi+0x1e88bd24]
  424cec:	mov    ah,0x4d
  424cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cef:	jne    0x424d67
  424cf1:	jmp    0x871f5e7b
  424cf6:	jnp    0x424d3c
  424cf8:	dec    ebp
  424cf9:	clc    
  424cfa:	sar    BYTE PTR [ecx],cl
  424cfc:	add    al,0xbd
  424cfe:	in     al,0x51
  424d00:	jbe    0x424ce0
  424d02:	ret    0xbaf9
  424d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d06:	and    al,0xd4
  424d08:	data16 cmp cl,BYTE PTR [ebx+0x1a]
  424d0c:	or     ebx,esi
  424d0e:	shl    DWORD PTR [ebx-0x735f993e],cl
  424d14:	push   eax
  424d15:	xor    DWORD PTR [ecx],0x6a4fa78c
  424d1b:	mov    cl,0xcd
  424d1d:	lea    ebp,[eax]
  424d1f:	aaa    
  424d20:	xchg   ebp,eax
  424d21:	ins    DWORD PTR es:[edi],dx
  424d22:	adc    eax,0x66278a82
  424d27:	retf   
  424d28:	xchg   edi,eax
  424d29:	and    eax,0xe3801a25
  424d2e:	sbb    edx,DWORD PTR [esi]
  424d30:	scas   al,BYTE PTR es:[edi]
  424d31:	cmp    eax,0x4e36103
  424d36:	mov    esp,0xf8764e3d
  424d3b:	jl     0x424d27
  424d3d:	adc    al,0x8c
  424d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d40:	mov    gs,WORD PTR [ebp-0x8965634]
  424d46:	and    bl,BYTE PTR ds:0xee566204
  424d4c:	ins    DWORD PTR es:[edi],dx
  424d4d:	pop    ecx
  424d4e:	adc    cl,bl
  424d50:	aaa    
  424d51:	mov    al,0xc2
  424d53:	sub    edx,ebp
  424d55:	push   ebp
  424d56:	ja     0x424dd3
  424d58:	outs   dx,DWORD PTR ds:[esi]
  424d59:	in     al,dx
  424d5a:	gs repnz repz push ecx
  424d5e:	mov    esp,DWORD PTR [ebx-0x5b]
  424d61:	jg     0x424d1c
  424d63:	mov    dl,0xc
  424d65:	pop    eax
  424d66:	fdiv   QWORD PTR [ebx]
  424d68:	jne    0x424d4f
  424d6a:	or     eax,0x5cf56ff6
  424d6f:	scas   al,BYTE PTR es:[edi]
  424d70:	icebp  
  424d71:	sti    
  424d72:	enter  0x66e1,0xc6
  424d76:	xor    eax,0xb4c3713a
  424d7b:	lahf   
  424d7c:	pop    esp
  424d7d:	pop    edi
  424d7e:	sahf   
  424d7f:	adc    al,0x89
  424d81:	outs   dx,DWORD PTR ds:[esi]
  424d82:	test   al,0x5a
  424d84:	xchg   esp,eax
  424d85:	jb     0x424d93
  424d87:	jmp    0x424e08
  424d89:	dec    ebp
  424d8a:	xor    al,0x3c
  424d8c:	cmp    esp,esi
  424d8e:	mov    cl,0xc7
  424d90:	inc    edi
  424d91:	sbb    DWORD PTR [ebx-0x12532daf],ebp
  424d97:	pop    es
  424d98:	xor    BYTE PTR [esi*2+0x1519401b],bh
  424d9f:	cmp    eax,0xfa2f9c10
  424da4:	sbb    al,0xa1
  424da6:	cmp    DWORD PTR [edi-0x2],ecx
  424da9:	fxch   st(3)
  424dab:	mov    al,0xf6
  424dad:	lahf   
  424dae:	sbb    eax,0xcf73b9be
  424db3:	ss aas 
  424db5:	xchg   ebp,eax
  424db6:	cli    
  424db7:	jmp    0x424d6c
  424db9:	dec    ebx
  424dba:	mov    esp,0xed145f93
  424dbf:	pop    ebx
  424dc0:	push   esp
  424dc1:	xor    ebp,DWORD PTR [esi+0x46]
	...
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    dh,BYTE PTR [edx+edi*1]
  424ddf:	icebp  
  424de0:	retf   0xc51f
  424de3:	add    DWORD PTR [eax],eax
  424de5:	stos   DWORD PTR es:[edi],eax
  424de6:	add    eax,DWORD PTR [eax]
  424de8:	add    BYTE PTR [esi-0x21],cl
  424deb:	xlat   BYTE PTR ds:[ebx]
  424dec:	aaa    
  424ded:	sbb    DWORD PTR [edx],esi
  424def:	lds    esp,FWORD PTR [ecx+0x4ba47fdc]
  424df5:	nop
  424df6:	fadd   DWORD PTR [esi+0x6a]
  424df9:	push   0x1d5d0663
  424dfe:	leave  
  424dff:	pop    esp
  424e00:	jecxz  0x424d99
  424e02:	or     BYTE PTR [eax+0x67],ch
  424e05:	cmp    BYTE PTR [eax+0x4b023052],cl
  424e0b:	test   eax,0x35bfc69b
  424e10:	out    0x34,eax
  424e12:	sahf   
  424e13:	inc    esp
  424e14:	shr    BYTE PTR [ecx+0x5c4d7069],0x41
  424e1b:	dec    esi
  424e1c:	ins    DWORD PTR es:[edi],dx
  424e1d:	mov    WORD PTR [ebx+0x713db077],ds
  424e23:	mov    edi,0xfec4750c
  424e28:	addr16 push ss
  424e2a:	lds    edi,FWORD PTR [ebp-0x5051ab7a]
  424e30:	pop    eax
  424e31:	dec    esp
  424e32:	lds    edx,FWORD PTR [esi+0x5db41359]
  424e38:	popf   
  424e39:	outs   dx,DWORD PTR ds:[esi]
  424e3a:	dec    ecx
  424e3b:	push   ebx
  424e3c:	setl   BYTE PTR [ebp+0x17]
  424e40:	jbe    0x424e7f
  424e42:	fnstenv [eax+0x53]
  424e45:	mov    BYTE PTR [esi+0x1f9ed150],bl
  424e4b:	or     edi,0x57
  424e4e:	fs loope 0x424e6f
  424e51:	sbb    eax,0xfcd63f16
  424e56:	not    ebp
  424e58:	push   edi
  424e59:	scas   al,BYTE PTR es:[edi]
  424e5a:	(bad)  
  424e5b:	jne    0x424e97
  424e5d:	pop    ebp
  424e5e:	enter  0x2deb,0x31
  424e62:	pop    ss
  424e63:	xor    BYTE PTR [eax],bl
  424e65:	pop    ecx
  424e66:	push   edx
  424e67:	mov    ecx,0xbf94f152
  424e6c:	lods   al,BYTE PTR ds:[esi]
  424e6d:	mov    fs,WORD PTR [esi]
  424e6f:	xor    eax,DWORD PTR [edx+0x39]
  424e72:	fistp  DWORD PTR [eax-0x195c484]
  424e78:	clc    
  424e79:	adc    dh,0x19
  424e7c:	fcomi  st,st(1)
  424e7e:	cld    
  424e7f:	out    0x8b,al
  424e81:	test   BYTE PTR [esi-0x589db05e],cl
  424e87:	push   edx
  424e88:	and    eax,0x2cc1639d
  424e8d:	pop    ds
  424e8e:	fild   QWORD PTR [eax+0x73]
  424e91:	push   ebx
  424e92:	push   ds
  424e93:	inc    esp
  424e94:	ins    BYTE PTR es:[edi],dx
  424e95:	or     al,0xd3
  424e97:	mov    dh,0xf6
  424e99:	rol    BYTE PTR [edi+0x7a],cl
  424e9c:	das    
  424e9d:	pop    ebp
  424e9e:	jmp    0x340f9f5b
  424ea3:	aad    0x85
  424ea5:	les    edx,FWORD PTR [edi-0x4f]
  424ea8:	lahf   
  424ea9:	adc    DWORD PTR [ecx+0x1c5c8f4e],0xdb100ea6
  424eb3:	out    dx,al
  424eb4:	xor    BYTE PTR [ebx-0xa],ah
  424eb7:	sbb    DWORD PTR [edx+0x6e],edx
  424eba:	out    0xaf,eax
  424ebc:	inc    ebx
  424ebd:	jnp    0x424f25
  424ebf:	adc    eax,0x75d2afd8
  424ec4:	or     bh,BYTE PTR [ebp+0x3a]
  424ec7:	rol    ebp,1
  424ec9:	sub    BYTE PTR [eax+0xcddfdbc],dh
  424ecf:	adc    al,0x7b
  424ed1:	push   ss
  424ed2:	mov    ecx,0xd1d60f79
  424ed7:	fidivr DWORD PTR [ebx+0x40]
  424eda:	lods   al,BYTE PTR ds:[esi]
  424edb:	adc    ecx,DWORD PTR [eax-0x57]
  424ede:	out    dx,al
  424edf:	xchg   ebx,eax
  424ee0:	jg     0x424e84
  424ee2:	lods   al,BYTE PTR ds:[esi]
  424ee3:	sbb    al,0x2a
  424ee5:	mov    eax,ds:0xb364e8ef
  424eea:	dec    ebx
  424eeb:	jb     0x424f14
  424eed:	mov    cl,0x2
  424eef:	loope  0x424f18
  424ef1:	adc    eax,0x42c44c24
  424ef6:	xor    eax,0xbfe4662f
  424efb:	aas    
  424efc:	mov    WORD PTR [edx-0x59],es
  424eff:	sti    
  424f00:	xlat   BYTE PTR ds:[ebx]
  424f01:	fwait
  424f02:	push   esp
  424f03:	push   edx
  424f04:	inc    ebx
  424f05:	aas    
  424f06:	jge    0x424eeb
  424f08:	push   esp
  424f09:	adc    bh,al
  424f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f0c:	xor    eax,DWORD PTR [edx+0x2a413c4d]
  424f12:	idiv   BYTE PTR [ecx-0x2b]
  424f15:	fsubr  DWORD PTR [ebp-0x33]
  424f18:	sbb    ebx,DWORD PTR [eax+0x65a87337]
  424f1e:	std    
  424f1f:	xor    eax,0xafe80063
  424f24:	add    ecx,DWORD PTR [ecx+0x2e]
  424f27:	sbb    edx,DWORD PTR [eax+0x14]
  424f2a:	ficomp DWORD PTR [edi+eiz*1-0x2c70f2fa]
  424f31:	add    eax,0x6373df1d
  424f36:	call   DWORD PTR [esi-0x7949124]
  424f3c:	lock or BYTE PTR [edi],dh
  424f3f:	sti    
  424f40:	das    
  424f41:	test   ah,dl
  424f43:	gs out dx,eax
  424f45:	and    al,0xfc
  424f47:	mov    bh,0x9c
  424f49:	push   esi
  424f4a:	ins    DWORD PTR es:[edi],dx
  424f4b:	fcmovu st,st(3)
  424f4d:	sbb    al,0x96
  424f4f:	push   esp
  424f50:	push   edx
  424f51:	adc    esp,0x3131f109
  424f57:	mov    ecx,0x9f1c7c30
  424f5c:	not    BYTE PTR [ecx]
  424f5e:	push   0xffffff86
  424f60:	pushfw 
  424f62:	test   BYTE PTR [eax+0x31],bl
  424f65:	popa   
  424f66:	and    bl,BYTE PTR [ebp+0x65]
  424f69:	mov    bh,0xa2
  424f6b:	pop    ds
  424f6c:	mov    ebp,0x559f51c1
  424f71:	jg     0x424f9b
  424f73:	(bad)  
  424f74:	jns    0x424f5b
  424f76:	ror    BYTE PTR [ecx],1
  424f78:	std    
  424f79:	clc    
  424f7a:	arpl   WORD PTR [eax-0x9b871de],bp
  424f80:	rcr    DWORD PTR [edx-0x17],cl
  424f83:	push   cs
  424f84:	or     al,0x9b
  424f86:	scas   al,BYTE PTR es:[edi]
  424f87:	mov    esi,0x455d686e
  424f8c:	inc    edi
  424f8d:	or     edi,DWORD PTR [ecx-0x73]
  424f90:	jmp    0x6e23:0xb88bac0a
  424f97:	cmp    DWORD PTR [ecx-0x74bcbd98],edi
  424f9d:	mov    dl,0x97
  424f9f:	sar    DWORD PTR [edi+0x1ab9dc87],1
  424fa5:	out    dx,al
  424fa6:	aam    0xd2
  424fa8:	jle    0x424f90
  424faa:	xchg   esi,eax
  424fab:	mov    al,0x26
  424fad:	imul   ebp,DWORD PTR [ebp+0x3a],0x93c8c463
  424fb4:	call   0x5a17cd05
  424fb9:	bound  eax,QWORD PTR [edx+0x4d]
  424fbc:	xchg   ebp,eax
  424fbd:	xor    ecx,DWORD PTR [eax]
  424fbf:	mov    BYTE PTR [edi-0x69],dh
  424fc2:	xchg   edi,eax
  424fc3:	xchg   ecx,eax
  424fc4:	stos   BYTE PTR es:[edi],al
  424fc5:	popa   
  424fc6:	inc    ecx
  424fc7:	popf   
  424fc8:	adc    ecx,edx
  424fca:	add    al,0xd4
  424fcc:	mov    db0,ecx
  424fcf:	pop    ebx
  424fd0:	xlat   BYTE PTR ds:[ebx]
  424fd1:	push   esp
  424fd2:	imul   ebx,esi,0xb090271a
  424fd8:	xchg   ebp,eax
  424fd9:	aaa    
  424fda:	scas   eax,DWORD PTR es:[edi]
  424fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fdc:	jns    0x424feb
  424fde:	cdq    
  424fdf:	inc    ebp
  424fe0:	or     al,0x52
  424fe2:	mul    edx
  424fe4:	fnstcw WORD PTR [eax]
  424fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fe7:	cmp    eax,0xba3c9510
  424fec:	and    BYTE PTR [ebp*1-0x149c2ac9],dl
  424ff3:	push   0xa8e75c97
  424ff8:	push   cs
  424ff9:	das    
  424ffa:	mov    ecx,0xdb719d9c
  424fff:	add    BYTE PTR [edi],ah
  425001:	ins    BYTE PTR es:[edi],dx
  425002:	or     eax,esp
  425004:	cmp    al,0x30
  425006:	mov    dh,0x12
  425008:	sar    BYTE PTR [ecx],0xf7
  42500b:	cmp    BYTE PTR [ebx+0x32],ah
  42500e:	jns    0x424f98
  425010:	ds mov edx,0x73933842
  425016:	ja     0x42506a
  425018:	sub    al,0x7f
  42501a:	shl    DWORD PTR [ebp+0x3a],cl
  42501d:	mov    ch,0xee
  42501f:	xor    BYTE PTR [ebp+0x44],al
  425022:	cmp    ecx,ebx
  425024:	ret    
  425025:	iret   
  425026:	imul   eax,DWORD PTR [esi],0xc9c2d7d0
  42502c:	fimul  WORD PTR [ebp-0x215865cb]
  425032:	xor    DWORD PTR [edx],ebp
  425034:	inc    esp
  425035:	mov    eax,ds:0x49c2424c
  42503a:	(bad)  
  42503b:	ficom  WORD PTR [edx+0x7f]
  42503e:	or     eax,0xca6ec45
  425043:	out    dx,al
  425044:	test   DWORD PTR [edx],esp
  425046:	pop    esp
  425047:	mov    ah,0x50
  425049:	cli    
  42504a:	ds ins BYTE PTR es:[edi],dx
  42504c:	inc    ebp
  42504d:	test   BYTE PTR [edi],bh
  42504f:	jge    0x42506e
  425051:	loop   0x42509a
  425053:	outs   dx,BYTE PTR ds:[esi]
  425054:	pushf  
  425055:	aad    0x31
  425057:	retf   
  425058:	btr    ebx,0x2a
  42505c:	xor    bh,BYTE PTR [eax-0x32bb2d5a]
  425062:	and    dl,BYTE PTR [edi+0x496df0d4]
  425068:	enter  0x362e,0x1d
  42506c:	jle    0x425069
  42506e:	xor    DWORD PTR [ecx+0x39ff11ce],ecx
  425074:	adc    BYTE PTR [ecx-0x6313dcad],cl
  42507a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42507b:	adc    ax,0xc23f
  42507f:	mov    eax,ds:0xe18ac53f
  425084:	mov    dl,0x8d
  425086:	adc    DWORD PTR [edi+0x37],edi
  425089:	jo     0x425037
  42508b:	inc    ebp
  42508c:	cmp    BYTE PTR [edx+0x32],dh
  42508f:	gs mov al,0x99
  425092:	inc    ebx
  425093:	mov    esi,ecx
  425095:	sbb    ebx,DWORD PTR [eax]
  425097:	push   cs
  425098:	inc    edx
  425099:	dec    ebx
  42509a:	inc    esi
  42509b:	test   BYTE PTR [edx+0x17],0x56
  42509f:	out    0x58,al
  4250a1:	sbb    edx,edx
  4250a3:	mov    al,0xfe
  4250a5:	inc    DWORD PTR [edi+0x444f9c46]
  4250ab:	mov    bl,0xe6
  4250ad:	(bad)  
  4250ae:	in     al,0xf9
  4250b0:	aad    0x32
  4250b2:	pop    ds
  4250b3:	shr    BYTE PTR [esi],0xf3
  4250b6:	mov    ebx,0xd489509e
  4250bb:	cdq    
  4250bc:	mov    bh,0x9d
  4250be:	add    al,0xba
  4250c0:	sub    DWORD PTR [edx+ebp*1],eax
  4250c3:	jns    0x425076
  4250c5:	dec    edi
  4250c6:	mov    ds:0xa55e0910,eax
  4250cb:	ret    0x9135
  4250ce:	mov    ch,0x3c
  4250d0:	mov    DWORD PTR [esi],ebp
  4250d2:	out    dx,al
  4250d3:	leave  
  4250d4:	test   eax,0x6a611d5
  4250d9:	jbe    0x4250f0
  4250db:	ds dec eax
  4250dd:	xlat   BYTE PTR ds:[ebx]
  4250de:	in     eax,dx
  4250df:	mov    dh,0xc7
  4250e1:	jg     0x425095
  4250e3:	jae    0x4250e7
  4250e5:	shr    DWORD PTR [edi-0x7c],0x9f
  4250e9:	retf   
  4250ea:	mov    ah,0xf6
  4250ec:	sbb    eax,0xf17ac0e8
  4250f1:	test   DWORD PTR [eax],0xc458ffb3
  4250f7:	cli    
  4250f8:	icebp  
  4250f9:	sbb    dh,al
  4250fb:	fmul   DWORD PTR [ecx-0x15]
  4250fe:	cli    
  4250ff:	inc    ebp
  425100:	mov    ds:0xf90921e9,eax
  425105:	adc    DWORD PTR [ecx+0x35],eax
  425108:	add    eax,0xf90df6e7
  42510d:	hlt    
  42510e:	add    cx,0xfff4
  425112:	lea    ecx,[ecx+eiz*1]
  425115:	push   eax
  425116:	popf   
  425117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425118:	retf   
  425119:	mov    ecx,0x6deef3bd
  42511e:	xor    BYTE PTR [ebx+0x5],ch
  425121:	push   es
  425122:	daa    
  425123:	popa   
  425124:	or     ebx,0xffffffea
  425127:	sar    DWORD PTR [ebp+eiz*2-0x59],0x47
  42512c:	cmc    
  42512d:	mov    dh,0x82
  42512f:	stc    
  425130:	cmp    al,0x51
  425132:	cmp    ebx,DWORD PTR [ecx]
  425134:	ja     0x425178
  425136:	or     eax,0xedfd400f
  42513b:	jbe    0x425180
  42513d:	call   FWORD PTR [ebx]
  42513f:	mul    BYTE PTR [ebp-0x72e7936b]
  425145:	jne    0x4250f8
  425147:	add    ah,al
  425149:	popa   
  42514a:	mov    esi,0xc1c203fe
  42514f:	adc    DWORD PTR [edx],0xd31b7390
  425155:	jecxz  0x42515a
  425157:	push   es
  425158:	cmp    al,0x76
  42515a:	pop    ebp
  42515b:	(bad)  
  42515c:	xchg   ebp,eax
  42515d:	(bad)  
  42515e:	lahf   
  42515f:	and    al,0xc0
  425161:	dec    ebp
  425162:	sbb    ebp,DWORD PTR [esi]
  425164:	jmp    0x1201c9b3
  425169:	sbb    ch,BYTE PTR [edi-0x62]
  42516c:	add    eax,0xa42c3659
  425171:	mov    eax,0x505c8073
  425176:	cdq    
  425177:	push   0x2f
  425179:	mov    bl,0xe8
  42517b:	add    DWORD PTR [edx+0x4e45df0b],ebx
  425181:	lods   al,BYTE PTR ds:[esi]
  425182:	add    eax,0x254bc5cb
  425187:	(bad)  
  425188:	mov    ds:0xc0b6c757,eax
  42518d:	sbb    eax,0x6c4ead79
  425192:	sbb    BYTE PTR [ecx+0x0],cl
	...
  4251a0:	add    BYTE PTR [ecx-0x42],ch
  4251a3:	cmp    esi,DWORD PTR [esi-0x124801]
  4251a9:	jnp    0x4251f5
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	out    0x55,al
  4251af:	test   eax,0x1c8ca61
  4251b4:	add    BYTE PTR [ebx-0x56fffffd],ch
  4251ba:	push   esp
  4251bb:	dec    esp
  4251bc:	loop   0x4251e3
  4251be:	loope  0x425197
  4251c0:	adc    DWORD PTR [edi+0x578b42ae],esi
  4251c6:	fprem1 
  4251c8:	addr16 sub esi,ecx
  4251cb:	mov    ebp,0x8f526b01
  4251d0:	cmp    eax,0x76be7d0e
  4251d5:	push   0x6
  4251d7:	cld    
  4251d8:	and    BYTE PTR [ebx+0x63],al
  4251db:	mov    al,ds:0x474e23b
  4251e0:	sbb    eax,0x7ce023d6
  4251e5:	(bad)  
  4251e6:	mov    ch,0xdf
  4251e8:	sbb    BYTE PTR [ebx],dh
  4251ea:	mov    ebx,0xdfd7570c
  4251ef:	dec    esi
  4251f0:	jge    0x42525f
  4251f2:	pop    ss
  4251f3:	popf   
  4251f4:	sub    BYTE PTR [ebp+0x1f243457],dl
  4251fa:	adc    al,0x6b
  4251fc:	outs   dx,DWORD PTR ds:[esi]
  4251fd:	sti    
  4251fe:	mov    ch,0x1c
  425200:	pushf  
  425201:	mov    ch,BYTE PTR [esi+edi*1-0x1f1be5bf]
  425208:	mov    ecx,0x3c3f5204
  42520d:	sub    al,0xb9
  42520f:	ja     0x425250
  425211:	and    edx,ebp
  425213:	in     eax,0xa3
  425215:	mov    BYTE PTR [ecx-0x2e71ba5c],ch
  42521b:	fucomi st,st(3)
  42521d:	pushf  
  42521e:	mov    al,0xf
  425220:	jg     0x425208
  425222:	das    
  425223:	mov    dh,0xe5
  425225:	in     eax,0x8d
  425227:	out    dx,eax
  425228:	mov    bh,0x4a
  42522a:	push   edi
  42522b:	mov    dl,0xa4
  42522d:	mov    fs,WORD PTR ds:[edi+edi*8+0xb]
  425232:	push   ebp
  425233:	or     BYTE PTR [ebx+0x36],dl
  425236:	ja     0x4251ca
  425238:	mov    ch,0x45
  42523a:	imul   eax,DWORD PTR [edx-0x137fef43],0x39cb5421
  425244:	aas    
  425245:	mov    ah,0xc5
  425247:	mov    ds:0x3e37b05c,al
  42524c:	ja     0x4252c5
  42524e:	pop    edx
  42524f:	cmp    BYTE PTR [eax+0x77f5442b],al
  425255:	push   ds
  425256:	push   0x35
  425258:	add    ah,BYTE PTR [edi+ecx*1-0x78]
  42525c:	xor    eax,ebx
  42525e:	ror    BYTE PTR [ecx],0x7
  425261:	fld    TBYTE PTR [ebx-0x2249515a]
  425267:	push   ebx
  425268:	cs mov bl,0x56
  42526b:	loopne 0x425255
  42526d:	mov    ds:0x47ab930d,al
  425272:	add    DWORD PTR [ecx+0x42],0x37871d1d
  425279:	fs sahf 
  42527b:	push   0x60
  42527d:	dec    esp
  42527e:	pop    edx
  42527f:	cmp    eax,DWORD PTR [eax+0x70bab8d3]
  425285:	(bad)  [edi]
  425287:	jnp    0x4252dd
  425289:	xchg   esp,eax
  42528a:	mov    dh,0x20
  42528c:	mov    edi,0x14795850
  425291:	test   BYTE PTR [ecx],ch
  425293:	(bad)  
  425294:	and    ah,ah
  425296:	or     DWORD PTR [ecx],ebx
  425298:	stc    
  425299:	mov    cl,0xe3
  42529b:	sub    esp,0xfc5aae01
  4252a1:	ins    DWORD PTR es:[edi],dx
  4252a2:	cmp    BYTE PTR [ebx],0xf2
  4252a5:	sub    al,0xe5
  4252a7:	xchg   edx,eax
  4252a9:	imul   eax,DWORD PTR ds:[edi+0x73229709],0xe5623e6c
  4252b4:	inc    edi
  4252b5:	jb     0x42527a
  4252b7:	adc    BYTE PTR [eax],0xa9
  4252ba:	hlt    
  4252bb:	iret   
  4252bc:	es jl  0x4252bc
  4252bf:	dec    esi
  4252c0:	test   eax,0x34566045
  4252c5:	jmp    0x42527a
  4252c7:	push   eax
  4252c8:	pusha  
  4252c9:	pop    esi
  4252ca:	shr    DWORD PTR ds:0xaff2b9fc,0xa8
  4252d1:	lahf   
  4252d2:	xchg   DWORD PTR [ebp+0x26],esi
  4252d5:	pop    eax
  4252d6:	jbe    0x4252e3
  4252d8:	mov    ds:0x30748d8c,eax
  4252dd:	pop    ebp
  4252de:	cs add eax,0x8cb0ca24
  4252e4:	shl    DWORD PTR [ecx],0xef
  4252e7:	xchg   ebx,eax
  4252e8:	pop    eax
  4252e9:	shr    DWORD PTR ds:0x7e6384b0,1
  4252ef:	dec    eax
  4252f0:	rcl    BYTE PTR [edx-0x8a8a33b],1
  4252f6:	mov    dh,0x50
  4252f8:	not    BYTE PTR [ebx+esi*2+0x79]
  4252fc:	xchg   ebp,eax
  4252fd:	cmc    
  4252fe:	lds    ebx,FWORD PTR [edx+0x20]
  425301:	arpl   bx,si
  425303:	(bad)  
  425304:	test   al,0x8c
  425306:	jmp    0x591e:0xe6aeffa7
  42530d:	and    BYTE PTR [edi],dh
  42530f:	sub    al,0x11
  425311:	ins    BYTE PTR es:[edi],dx
  425312:	push   ebx
  425313:	shl    dl,1
  425315:	sbb    eax,edi
  425317:	inc    ebp
  425318:	ror    dh,0x3d
  42531b:	xchg   edi,eax
  42531c:	inc    edx
  42531d:	xchg   esp,eax
  42531e:	lods   al,BYTE PTR ds:[esi]
  42531f:	add    al,BYTE PTR [edi-0x294e812a]
  425325:	loope  0x425372
  425327:	push   eax
  425328:	(bad)  
  425329:	mov    BYTE PTR [eax],al
  42532b:	(bad)  
  42532c:	mov    esp,?
  42532e:	push   ebp
  42532f:	fldcw  WORD PTR [edx]
  425331:	(bad)  
  425332:	in     eax,dx
  425333:	cmp    dl,ah
  425335:	fwait
  425336:	push   0x6779d605
  42533b:	inc    eax
  42533c:	std    
  42533d:	and    BYTE PTR [edi+0x1db11581],bh
  425343:	push   esp
  425344:	jp     0x4252d3
  425346:	dec    esp
  425347:	mov    cl,0xfe
  425349:	dec    ecx
  42534a:	add    BYTE PTR [ebp+0x68e2ba3d],dl
  425350:	lods   al,BYTE PTR ds:[esi]
  425351:	push   ebx
  425352:	mov    ds:0x5ed93474,al
  425357:	loop   0x425368
  425359:	push   esi
  42535a:	scas   al,BYTE PTR es:[edi]
  42535b:	rol    DWORD PTR [edi-0x31],cl
  42535e:	or     eax,0xed45ec09
  425363:	xor    edi,DWORD PTR [ebx]
  425365:	cmp    dh,BYTE PTR [edi]
  425367:	call   0xa4dd:0xfe69622f
  42536e:	xor    dh,0xce
  425371:	lea    ebx,[edx+0x72e9e3c5]
  425377:	aad    0x15
  425379:	push   edx
  42537a:	xor    ebx,DWORD PTR [ecx-0x17f84fcb]
  425380:	aam    0xd0
  425382:	jge    0x425326
  425384:	xlat   BYTE PTR ds:[ebx]
  425385:	shr    eax,1
  425387:	push   0x39
  425389:	pop    ds
  42538a:	je     0x4253ba
  42538c:	jns    0x4253f9
  42538e:	in     eax,dx
  42538f:	push   edx
  425390:	sahf   
  425391:	sbb    ebp,DWORD PTR [eax]
  425393:	jo     0x42533d
  425395:	mov    ah,0xb
  425397:	arpl   WORD PTR [ebx+0x67bd4a07],sp
  42539d:	inc    esi
  42539e:	das    
  42539f:	lock jmp 0x425414
  4253a2:	mov    WORD PTR [ecx+eax*4-0x76],fs
  4253a6:	xlat   BYTE PTR ds:[ebx]
  4253a7:	call   0x64ee:0x4bd0
  4253ad:	dec    eax
  4253ae:	fdiv   QWORD PTR [ebx]
  4253b0:	or     eax,0xd0f4cf24
  4253b5:	out    0x83,al
  4253b7:	mov    eax,ds:0x64b88f15
  4253bc:	xor    BYTE PTR [ebx-0x3f],al
  4253bf:	ja     0x42542a
  4253c1:	cmp    ch,BYTE PTR [ecx+0x44]
  4253c4:	sub    BYTE PTR ds:0xc4796c7,dh
  4253ca:	pop    edi
  4253cb:	pop    ecx
  4253cc:	mov    al,0x54
  4253ce:	retf   0xca5a
  4253d1:	lea    eax,[ecx+ecx*1-0x29]
  4253d5:	mov    bh,BYTE PTR [ecx]
  4253d7:	xchg   edi,eax
  4253d8:	push   0x45613d9a
  4253dd:	(bad)  
  4253de:	and    dl,al
  4253e0:	pop    DWORD PTR [ebp-0x329ae484]
  4253e6:	xchg   edx,eax
  4253e7:	int3   
  4253e8:	push   0xfdb1e3f4
  4253ed:	shr    BYTE PTR [edi],cl
  4253ef:	push   ss
  4253f0:	mov    al,0x61
  4253f2:	lahf   
  4253f3:	sub    dh,BYTE PTR [ebx+0x6b6489bc]
  4253f9:	cmp    al,0x60
  4253fb:	fldenv [ebp-0x3a0c8c65]
  425401:	in     eax,dx
  425402:	js     0x4253ef
  425404:	(bad)  
  425405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425406:	push   ebx
  425407:	pop    esp
  425408:	xchg   ebx,eax
  425409:	repz xchg esi,eax
  42540b:	xchg   ecx,eax
  42540c:	in     eax,dx
  42540d:	dec    ecx
  42540e:	out    0xca,al
  425410:	das    
  425411:	int    0x3a
  425413:	push   cs
  425414:	dec    esp
  425415:	inc    ebx
  425416:	sbb    cl,cl
  425418:	mov    bh,0xfe
  42541a:	or     eax,0xf406cb64
  42541f:	in     al,dx
  425420:	sahf   
  425421:	loopne 0x4253b3
  425423:	mul    ebx
  425425:	loope  0x425440
  425427:	push   ds
  425428:	cmp    BYTE PTR gs:[esi],dl
  42542b:	pop    ds
  42542c:	mov    bh,0xa2
  42542e:	inc    ebx
  42542f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425430:	ret    0x63da
  425433:	xor    dl,BYTE PTR [edi-0x7f]
  425436:	nop
  425437:	lods   eax,DWORD PTR ds:[esi]
  425438:	sub    esi,DWORD PTR [ecx-0x22]
  42543b:	cmp    edi,ecx
  42543d:	mov    cl,0xc1
  42543f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425440:	jns    0x425437
  425442:	ror    BYTE PTR [esp+edx*4],0x4f
  425446:	push   esi
  425447:	dec    ebp
  425448:	inc    ebp
  425449:	clc    
  42544a:	sbb    eax,0x7cdc1ed2
  42544f:	pop    esp
  425450:	mov    ah,0xa4
  425452:	sub    eax,0x96ea18f6
  425457:	push   esp
  425458:	fcomp  QWORD PTR [ebx]
  42545a:	xchg   edi,eax
  42545b:	cmp    al,0xdc
  42545d:	adc    al,BYTE PTR [ebp-0x8]
  425460:	addr16 pop ecx
  425462:	dec    edx
  425463:	xor    eax,0x5c3744ce
  425468:	sub    BYTE PTR [edx],0x56
  42546b:	push   ebp
  42546c:	bound  edi,QWORD PTR [ecx+0x4d]
  42546f:	or     DWORD PTR [edi-0x662198be],esp
  425475:	stc    
  425476:	mov    bh,0x89
  425478:	mov    edx,0x9d868fd
  42547d:	inc    ebp
  42547e:	inc    eax
  42547f:	ret    0x644d
  425482:	mov    eax,0xdab88628
  425487:	jbe    0x425434
  425489:	push   0x8027b17d
  42548e:	je     0x4254c6
  425490:	outs   dx,BYTE PTR ds:[esi]
  425491:	dec    eax
  425492:	jmp    0xd022:0xb852fc06
  425499:	addr16 in eax,dx
  42549b:	push   esp
  42549c:	push   ds
  42549d:	loop   0x4254d0
  42549f:	fcmovb st,st(0)
  4254a1:	or     edi,DWORD PTR [edi+0x5fd7244f]
  4254a7:	imul   ebp,edi,0x4b
  4254aa:	push   ecx
  4254ab:	pop    esi
  4254ac:	cmp    ebx,edx
  4254ae:	pusha  
  4254af:	and    DWORD PTR cs:0xb64165bb,ebp
  4254b6:	ficom  DWORD PTR [edi*8-0x5e7187ed]
  4254bd:	loope  0x425494
  4254bf:	bound  ebp,QWORD PTR [eax+0x48eee7f2]
  4254c5:	shr    BYTE PTR [ebx-0x457c7f06],1
  4254cb:	retf   
  4254cc:	mov    cl,0xde
  4254ce:	mov    ds:0x8807989f,eax
  4254d3:	xchg   ecx,eax
  4254d4:	and    eax,0x58d53afa
  4254d9:	jecxz  0x4254e9
  4254db:	scas   eax,DWORD PTR es:[edi]
  4254dc:	sbb    ecx,DWORD PTR [ecx]
  4254de:	addr16 in al,0x29
  4254e1:	jg     0x4254fc
  4254e3:	or     eax,0x9c99a5a9
  4254e8:	pop    edx
  4254e9:	jl     0x4254e8
  4254eb:	xor    BYTE PTR [edx-0x4c93aec3],ah
  4254f1:	cdq    
  4254f2:	mov    ds:0x298ed11d,al
  4254f7:	outs   dx,BYTE PTR ds:[esi]
  4254f8:	call   0x10a7:0x3eee8db1
  4254ff:	jl     0x4254c7
  425501:	retf   
  425502:	mov    edx,0x49eca8ce
  425507:	sahf   
  425508:	push   ecx
  425509:	add    cl,dh
  42550b:	fcom   QWORD PTR [edi]
  42550d:	test   eax,0xfc09e6a1
  425512:	cmp    al,bl
  425514:	cmp    DWORD PTR [eax+0x31],esp
  425517:	xor    eax,0x6fe42d79
  42551c:	in     al,dx
  42551d:	cmp    ch,BYTE PTR [ecx]
  42551f:	add    BYTE PTR [ebx-0x4f],ch
  425522:	aaa    
  425523:	or     al,0x1
  425525:	add    bh,BYTE PTR [esi+0x680e6d3a]
  42552b:	(bad)  
  42552c:	sub    esp,DWORD PTR [esi+0x5399fbb5]
  425532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425533:	(bad)  
  425534:	jno    0x425587
  425536:	in     eax,dx
  425537:	cmp    eax,0xd299ba27
  42553c:	cs push ds
  42553e:	ret    0xafa8
  425541:	retf   0x1db3
  425544:	sub    cl,BYTE PTR [eax+0x1b7bd3cd]
  42554a:	(bad)  
  42554b:	in     al,dx
  42554c:	mov    cl,0xa
  42554e:	jge    0x4255ad
  425550:	push   ebx
  425551:	call   0x8307:0x4678243f
  425558:	(bad)  
  425559:	jmp    0x1582:0xcb668635
  425560:	es scas al,BYTE PTR es:[edi]
  425562:	iret   
  425563:	pop    edx
	...
  425570:	add    bl,ch
  425572:	dec    eax
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     eax,DWORD PTR [ebp+0x1f]
  42557f:	iret   
  425580:	xor    BYTE PTR [ebp-0x34],0x1
  425584:	add    BYTE PTR [ebx+0x19000003],ch
  42558a:	aam    0x14
  42558c:	mov    al,0x2b
  42558e:	mov    ss,WORD PTR [eax]
  425590:	fs and al,0xb2
  425593:	fcomi  st,st(0)
  425595:	pop    edi
  425596:	test   DWORD PTR [esi+0x2a],edx
  425599:	into   
  42559a:	retf   
  42559b:	mov    cl,0xd4
  42559d:	mov    bh,BYTE PTR [esi-0x34]
  4255a0:	pop    edi
  4255a1:	jnp    0x425566
  4255a3:	pop    ss
  4255a4:	ficomp WORD PTR [ebp+eiz*4-0x1af4e571]
  4255ab:	cmp    bl,BYTE PTR [edi+eax*2+0x31]
  4255af:	fwait
  4255b0:	pop    ecx
  4255b1:	push   ds
  4255b2:	cmp    ebp,ebp
  4255b4:	pop    ebx
  4255b5:	test   eax,0x55b87f76
  4255ba:	dec    ebx
  4255bb:	test   BYTE PTR [ebx],0x65
  4255be:	fs push ebx
  4255c0:	iret   
  4255c1:	call   0x15d3:0xb366f335
  4255c8:	jl     0x42563c
  4255ca:	or     al,0x84
  4255cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255cd:	dec    ecx
  4255ce:	push   es
  4255cf:	or     edx,ebp
  4255d1:	popf   
  4255d2:	imul   edx,DWORD PTR [edi-0x4fff0aaf],0x480a1ef3
  4255dc:	pop    ecx
  4255dd:	repnz outs dx,DWORD PTR ds:[esi]
  4255df:	mov    ah,0xe7
  4255e1:	jg     0x4255aa
  4255e3:	shl    BYTE PTR [edx+0x42],cl
  4255e6:	xor    eax,0xfba766d8
  4255eb:	pop    ebx
  4255ec:	jb     0x42562b
  4255ee:	jno    0x425637
  4255f0:	sahf   
  4255f1:	push   ebx
  4255f2:	sub    BYTE PTR [ebp-0x35ec576e],al
  4255f8:	loop   0x42562a
  4255fa:	dec    esp
  4255fb:	sub    al,0xb6
  4255fd:	adc    eax,0x1c744de7
  425602:	test   al,0x7d
  425604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425605:	jl     0x4255ae
  425607:	not    BYTE PTR [ebp+0x65b226ff]
  42560d:	outs   dx,BYTE PTR fs:[esi]
  42560f:	cmp    ah,bh
  425611:	adc    ah,BYTE PTR [edi-0x40]
  425614:	push   eax
  425615:	popa   
  425616:	ss shr ecx,0xee
  42561a:	pop    edx
  42561b:	fdiv   DWORD PTR [ebp-0x6185c022]
  425621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425622:	fstp   DWORD PTR [ecx]
  425624:	out    0x99,al
  425626:	out    0xd2,eax
  425628:	sub    al,BYTE PTR [eax+esi*8]
  42562b:	mul    al
  42562d:	xor    ebp,DWORD PTR [ebx+0x6ed61fa6]
  425633:	or     eax,0x19ea22fb
  425638:	fwait
  425639:	ret    
  42563a:	xor    DWORD PTR ds:0x20bca112,ebp
  425640:	push   cs
  425641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425642:	mov    DWORD PTR [edx-0x29],edx
  425645:	ror    DWORD PTR [eax-0x24b917f],1
  42564b:	jecxz  0x4255f3
  42564d:	lahf   
  42564e:	dec    esp
  42564f:	jb     0x4256b7
  425651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425652:	aam    0x6b
  425654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425655:	mov    cl,dl
  425657:	pop    edi
  425658:	out    dx,eax
  425659:	push   0xffffffce
  42565b:	test   eax,ebp
  42565d:	sbb    DWORD PTR [ebp+0x72736027],eax
  425663:	hlt    
  425664:	pop    esp
  425665:	ror    DWORD PTR [esi+0x6],0x1e
  425669:	arpl   WORD PTR [ebp+ebx*4-0x18],di
  42566d:	test   al,0xe7
  42566f:	pop    es
  425670:	pop    ebx
  425671:	inc    esp
  425672:	cld    
  425673:	inc    ebx
  425674:	ins    BYTE PTR es:[edi],dx
  425675:	mov    esi,0x1c622472
  42567a:	and    al,0x1a
  42567c:	imul   esi,DWORD PTR [esi],0xffffffcd
  42567f:	inc    ecx
  425680:	add    al,0x72
  425682:	sub    al,0x61
  425684:	jge    0x425631
  425686:	jne    0x425660
  425688:	test   DWORD PTR gs:[ebp-0x4bb9c7c0],0x7ea3958
  425693:	cs nop
  425695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425696:	xlat   BYTE PTR ds:[ebx]
  425697:	jmp    0xa7d5:0x24712cf4
  42569e:	(bad)  
  42569f:	loop   0x4256f4
  4256a1:	mov    ebx,ebp
  4256a3:	push   0x4a77920d
  4256a8:	lock mov al,cs:0x706d4e0c
  4256af:	pushf  
  4256b0:	or     DWORD PTR [edx],ebx
  4256b2:	sub    eax,0xe6fe71f5
  4256b7:	xchg   edx,eax
  4256b8:	pop    ds
  4256b9:	stc    
  4256ba:	mul    ch
  4256bc:	mov    dh,0x6e
  4256be:	repnz bound edx,QWORD PTR [eax+0x4f9f2cb]
  4256c5:	add    ecx,DWORD PTR [ebx]
  4256c7:	xor    al,0xd3
  4256c9:	and    DWORD PTR [edi],0xfffffff6
  4256cc:	inc    esp
  4256cd:	cld    
  4256ce:	popf   
  4256cf:	mov    esp,0xe8b92d7d
  4256d4:	(bad)  
  4256d5:	in     al,dx
  4256d6:	sbb    esp,DWORD PTR [edi-0x49]
  4256d9:	jb     0x4256f2
  4256db:	shr    dh,0x30
  4256de:	fstp   QWORD PTR [edx-0x6d16ac0e]
  4256e4:	mov    bl,BYTE PTR [ebx-0x5e]
  4256e7:	sub    eax,0x5c6b447f
  4256ec:	pop    esi
  4256ed:	loopne 0x4256f9
  4256ef:	dec    esi
  4256f0:	test   DWORD PTR [ebx+0x79],edx
  4256f3:	nop
  4256f4:	cli    
  4256f5:	inc    ebp
  4256f6:	or     BYTE PTR [eax+0x4d13f3f9],dh
  4256fc:	cwde   
  4256fd:	push   ebp
  4256fe:	mov    DWORD PTR ds:0x4baba5c0,eax
  425704:	sbb    eax,0x55
  425707:	ins    DWORD PTR es:[edi],dx
  425708:	sbb    BYTE PTR [ebx+edx*2-0x7ca40d5b],ch
  42570f:	mov    cl,0xcf
  425711:	pop    ebp
  425712:	out    0x39,al
  425714:	stos   BYTE PTR es:[edi],al
  425715:	out    0x46,al
  425717:	cld    
  425718:	dec    esp
  425719:	int    0x4c
  42571b:	retf   0x1289
  42571e:	cmp    al,BYTE PTR [esi]
  425720:	jns    0x4256d1
  425722:	fdivr  st,st(1)
  425724:	out    0x80,al
  425726:	dec    esi
  425727:	push   edx
  425728:	xor    BYTE PTR [eax+0x3f],al
  42572b:	push   0xffffffc3
  42572d:	adc    al,0x70
  42572f:	or     BYTE PTR [ebx+eax*2],cl
  425732:	in     al,dx
  425733:	push   ds
  425734:	mov    ebp,0x30dcbf2
  425739:	adc    al,0x77
  42573b:	cmp    esp,DWORD PTR [ebx*1-0x33caf1e0]
  425742:	pop    ss
  425743:	add    DWORD PTR [ebp-0x10],ebp
  425746:	shl    DWORD PTR [ecx-0x7],1
  425749:	rcl    BYTE PTR [eax+0x1953253b],cl
  42574f:	mov    al,ds:0x9bdff98b
  425754:	jns    0x425766
  425756:	inc    edi
  425757:	dec    ebx
  425758:	ja     0x4256fd
  42575a:	adc    ch,BYTE PTR [ebx-0x7936919]
  425760:	fsubrp st(5),st
  425762:	adc    bh,BYTE PTR [eax+0x3b]
  425765:	or     ah,BYTE PTR [esi]
  425767:	pop    ss
  425768:	stc    
  425769:	repz cdq 
  42576b:	out    0x7b,eax
  42576d:	sub    ch,BYTE PTR [esi+0x60ac30d7]
  425773:	xor    al,0xb6
  425775:	xchg   ecx,eax
  425776:	mov    ah,bl
  425778:	(bad)  
  425779:	repz jns 0x42572f
  42577c:	js     0x4257e4
  42577e:	adc    al,0x33
  425780:	data16 loope 0x42578c
  425783:	outs   dx,DWORD PTR ds:[esi]
  425784:	xchg   edx,eax
  425785:	loope  0x42579b
  425787:	jg     0x42571a
  425789:	and    BYTE PTR [esi-0x5432e6d9],0xaa
  425790:	xor    dh,BYTE PTR [ebx-0x47717b4d]
  425796:	pop    ebp
  425797:	sbb    dl,BYTE PTR [edx-0x73]
  42579a:	dec    edx
  42579b:	rcr    BYTE PTR [esi+0x76873200],1
  4257a1:	inc    esp
  4257a2:	arpl   WORD PTR [ebx-0x16d1e3d],bp
  4257a8:	popa   
  4257a9:	mov    edx,0x169f5c5a
  4257ae:	sub    BYTE PTR [ecx],0x51
  4257b1:	shl    BYTE PTR [edi+0x1c18476],1
  4257b7:	or     eax,0x7b9cad2f
  4257bc:	loop   0x425810
  4257be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257bf:	std    
  4257c0:	(bad)  
  4257c3:	jb     0x425756
  4257c5:	imul   BYTE PTR [ebx+0x6169a40c]
  4257cb:	cli    
  4257cc:	test   BYTE PTR [esi-0x1a94bec],dl
  4257d2:	mov    ds:0xe46b163a,eax
  4257d7:	mov    ebx,0x8d065a27
  4257dc:	pop    esi
  4257dd:	pusha  
  4257de:	cli    
  4257df:	rol    DWORD PTR [esi],0x93
  4257e2:	sub    dh,dl
  4257e4:	pusha  
  4257e5:	mov    edx,0xa50056e5
  4257ea:	into   
  4257eb:	push   esp
  4257ec:	popa   
  4257ed:	mov    eax,ds:0x2d1c931b
  4257f2:	es mov ebx,0xa20f7112
  4257f8:	ins    BYTE PTR es:[edi],dx
  4257f9:	test   al,0xd5
  4257fb:	or     DWORD PTR [edi+0x3630f03c],edx
  425801:	retf   
  425802:	retf   
  425803:	xchg   ecx,eax
  425804:	retf   
  425805:	cwde   
  425806:	pusha  
  425807:	adc    dh,BYTE PTR ds:0x6152de33
  42580d:	cmp    cl,BYTE PTR [eax]
  42580f:	push   0x71
  425811:	(bad)  
  425813:	pop    eax
  425814:	shl    DWORD PTR [ecx-0x6eb5a4fd],cl
  42581a:	fcomip st,st(2)
  42581c:	xchg   esp,eax
  42581d:	pop    eax
  42581e:	dec    ebp
  42581f:	test   BYTE PTR ds:0x952d640b,dl
  425825:	cdq    
  425826:	mov    ah,0xab
  425828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42582a:	sbb    dh,BYTE PTR [edi+0x1adc789f]
  425830:	cmovns ecx,DWORD PTR [eax+0x378d01d0]
  425837:	pop    eax
  425838:	mov    edx,0xe52f0c06
  42583d:	adc    bh,cl
  42583f:	dec    edi
  425840:	and    DWORD PTR [ebx+eax*4-0x55077481],0xffffffdf
  425848:	inc    ebx
  425849:	sub    ecx,DWORD PTR [edx]
  42584b:	mov    esi,0xe2fba018
  425850:	scas   eax,DWORD PTR es:[edi]
  425851:	pop    esp
  425852:	imul   esi,DWORD PTR [eax+0x3e],0x66
  425856:	cmp    ecx,DWORD PTR [ecx]
  425858:	sbb    dh,bh
  42585a:	xchg   ecx,eax
  42585b:	sub    dh,dh
  42585d:	sahf   
  42585e:	inc    eax
  42585f:	aad    0x20
  425861:	aas    
  425862:	xchg   esp,eax
  425863:	in     eax,dx
  425864:	push   es
  425865:	fsub   st,st(7)
  425867:	xchg   ebp,eax
  425868:	inc    edx
  425869:	cmp    al,0x23
  42586b:	and    al,BYTE PTR [edx+0x35]
  42586e:	adc    bl,dh
  425870:	in     eax,dx
  425871:	mov    eax,0xdb2e297
  425876:	inc    ebp
  425877:	and    DWORD PTR [esi],edx
  425879:	inc    esi
  42587a:	pop    edx
  42587b:	(bad)  
  42587c:	fsubr  QWORD PTR [esi]
  42587e:	cmp    bl,bh
  425880:	sbb    al,0xfc
  425882:	hlt    
  425883:	repnz cmp eax,0xc0fe604a
  425889:	in     eax,dx
  42588a:	jnp    0x4258b2
  42588c:	sub    esi,eax
  42588e:	mov    ecx,0x9192d3bf
  425893:	pop    ebp
  425894:	(bad)  
  425895:	sbb    BYTE PTR [edx+0x6c],ch
  425898:	bound  ecx,QWORD PTR [edx-0x4b]
  42589b:	xor    edx,ebx
  42589d:	scas   eax,DWORD PTR es:[edi]
  42589e:	loope  0x4258bb
  4258a0:	out    dx,al
  4258a1:	gs mov dl,0x33
  4258a4:	loop   0x425874
  4258a6:	(bad)
  4258aa:	add    BYTE PTR [edx],ah
  4258ac:	fbstp  TBYTE PTR ds:[ebx]
  4258af:	shl    dh,cl
  4258b1:	push   ss
  4258b2:	inc    ebx
  4258b3:	mov    al,ds:0xe8ec7877
  4258b8:	add    BYTE PTR [esi],ch
  4258ba:	cmp    DWORD PTR [edx+0x29ff987c],ecx
  4258c0:	and    DWORD PTR [esi],ebx
  4258c2:	(bad)  
  4258c3:	repnz mov DWORD PTR [esi],ecx
  4258c6:	cld    
  4258c7:	and    ecx,DWORD PTR [esi]
  4258c9:	adc    ah,BYTE PTR [ecx+0x5c]
  4258cc:	push   esi
  4258cd:	fisttp QWORD PTR [ebx]
  4258cf:	and    BYTE PTR [ebp-0x5bd9e8e6],ah
  4258d5:	or     bh,dl
  4258d7:	adc    BYTE PTR [edx+0x3709daa0],bl
  4258dd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258df:	je     0x4258e7
  4258e1:	retf   0x4ed3
  4258e4:	nop
  4258e5:	fdivr  st,st(2)
  4258e7:	loope  0x4258f8
  4258e9:	in     eax,0x6d
  4258eb:	iret   
  4258ec:	hlt    
  4258ed:	test   BYTE PTR [edi+0x79],0x7e
  4258f1:	dec    ah
  4258f3:	(bad)  
  4258f4:	xchg   edx,eax
  4258f5:	loope  0x4258e2
  4258f7:	sbb    edx,DWORD PTR [eax-0x4ae61b83]
  4258fd:	popf   
  4258fe:	push   ebp
  4258ff:	add    eax,0x40b2c99f
  425904:	mov    dl,0xa2
  425906:	(bad)  
  425907:	jno    0x425942
  425909:	fidiv  DWORD PTR [esi-0x53]
  42590c:	pop    ecx
  42590d:	pop    ds
  42590e:	cmovnp esi,DWORD PTR [edx+0x7cb460b5]
  425915:	push   0x642b31a1
  42591a:	mov    esp,0x24fee6c3
  42591f:	ss dec ebx
  425921:	or     dl,BYTE PTR [ebp-0x49]
  425924:	add    DWORD PTR [esi],0xb
  425927:	lods   al,BYTE PTR ds:[esi]
  425928:	clc    
  425929:	push   cs
  42592a:	mov    ebx,0x33b0a917
  42592f:	mov    al,0xe1
  425931:	dec    edi
  425932:	mov    fs,esi
	...
  425940:	add    ah,ch
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx-0x4dcfb061],ah
  425951:	and    al,dl
  425953:	add    DWORD PTR [eax],eax
  425955:	stos   DWORD PTR es:[edi],eax
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [ebp+0x6],dh
  42595b:	lahf   
  42595c:	mov    DWORD PTR [ebp+0x52],ebp
  42595f:	loopne 0x42598b
  425961:	push   esp
  425962:	xor    al,0xb7
  425964:	mov    eax,0xb5ed75b0
  425969:	jle    0x425922
  42596b:	add    cl,BYTE PTR [ecx+0x10e8af87]
  425971:	loope  0x425970
  425973:	adc    DWORD PTR [esi-0x9],ecx
  425976:	pop    ds
  425977:	add    DWORD PTR [edx+0x62d1f3b8],esp
  42597d:	ret    0xd67a
  425980:	add    eax,0xd86a984a
  425985:	pop    edx
  425986:	jo     0x42590a
  425988:	pop    esi
  425989:	fdiv   QWORD PTR [edx+0x6836cc7]
  42598f:	adc    eax,0x5f205eff
  425994:	js     0x4259aa
  425996:	shl    DWORD PTR [edx-0x5e3ea4ae],0x5d
  42599d:	inc    ebx
  42599e:	push   ss
  42599f:	cmp    bh,BYTE PTR [esi]
  4259a1:	fstp   QWORD PTR [eax-0x7eaaec70]
  4259a7:	add    ebx,edi
  4259a9:	or     DWORD PTR [esi+eax*1+0x62],ebp
  4259ad:	sbb    al,0x4d
  4259af:	mov    cl,BYTE PTR [eax-0x35]
  4259b2:	push   ebx
  4259b3:	int3   
  4259b4:	je     0x425a2a
  4259b6:	push   ss
  4259b7:	loopne 0x425959
  4259b9:	lods   al,BYTE PTR ds:[esi]
  4259ba:	jmp    0xc9e7aff2
  4259bf:	(bad)  
  4259c0:	adc    DWORD PTR [edi-0x2b],ebp
  4259c3:	push   0x44
  4259c5:	xchg   edi,eax
  4259c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259c7:	mov    ds:0x8d4614be,eax
  4259cc:	push   edx
  4259cd:	xlat   BYTE PTR ds:[ebx]
  4259ce:	and    al,BYTE PTR [eax+0x60bddac]
  4259d4:	repz ret 
  4259d6:	pop    ebx
  4259d7:	cmp    BYTE PTR [edx+0x5b20172a],bh
  4259dd:	cmp    DWORD PTR [edi+ebx*4-0x5b09685],0x33
  4259e5:	and    al,0x37
  4259e7:	ja     0x4259d8
  4259e9:	sub    eax,0x77564652
  4259ee:	je     0x42598c
  4259f0:	or     dh,BYTE PTR [eax-0x64]
  4259f3:	jb     0x425a2a
  4259f5:	mov    dl,0x55
  4259f7:	lods   eax,DWORD PTR ds:[esi]
  4259f8:	mov    ebx,0x2c21039c
  4259fd:	nop
  4259fe:	add    esp,0x47225b9c
  425a04:	cmp    DWORD PTR [ebx-0x24],eax
  425a07:	sub    eax,DWORD PTR cs:[esi]
  425a0a:	inc    ebp
  425a0b:	push   cs
  425a0c:	pop    ecx
  425a0d:	xchg   si,ax
  425a0f:	cmp    al,0xa3
  425a11:	mov    bl,0xf
  425a13:	sbb    ecx,0xffffff9e
  425a16:	jg     0x425a13
  425a18:	adc    ecx,ebx
  425a1a:	lahf   
  425a1b:	dec    eax
  425a1c:	jg     0x4259ee
  425a1e:	ja     0x4259c8
  425a20:	or     eax,0x67e7e4bb
  425a25:	ficomp DWORD PTR [edi]
  425a27:	aaa    
  425a28:	add    DWORD PTR [edi],esp
  425a2a:	mov    eax,0xdc71d587
  425a2f:	dec    esp
  425a30:	fwait
  425a31:	jbe    0x4259ea
  425a33:	xor    eax,0x5383052b
  425a38:	push   ebp
  425a3a:	cmp    bh,BYTE PTR [ecx]
  425a3c:	push   edx
  425a3d:	jl     0x425a51
  425a3f:	adc    esi,ebx
  425a41:	xlat   BYTE PTR ds:[ebx]
  425a42:	jle    0x425a18
  425a44:	ror    BYTE PTR [ebp-0x2262456d],cl
  425a4a:	mov    gs,WORD PTR [ebx+0x6]
  425a4d:	rol    DWORD PTR [esi+0x2e],0xc6
  425a51:	fwait
  425a52:	gs add eax,0x575d8e43
  425a58:	pop    ecx
  425a59:	ror    BYTE PTR ds:[ebp+esi*8+0x2f8a3235],0x9f
  425a62:	rcl    DWORD PTR [ecx-0x21],0xf9
  425a66:	dec    ebp
  425a67:	es scas eax,DWORD PTR es:[edi]
  425a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6a:	daa    
  425a6b:	jecxz  0x425a6e
  425a6d:	xchg   edi,eax
  425a6e:	stos   BYTE PTR es:[edi],al
  425a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a70:	into   
  425a71:	mov    ecx,0x69b9bb0f
  425a76:	pop    es
  425a77:	fisttp DWORD PTR [esi+edx*2+0x132ad8f0]
  425a7e:	or     DWORD PTR [edi],esi
  425a80:	fild   WORD PTR [edx-0x73015956]
  425a86:	jmp    0x1581:0xcbc7f369
  425a8d:	ret    
  425a8e:	test   BYTE PTR ds:0xe9e33113,al
  425a94:	shl    ecx,1
  425a96:	retf   
  425a97:	ficomp DWORD PTR [eax]
  425a99:	iret   
  425a9a:	push   0x5b
  425a9c:	outs   dx,DWORD PTR ds:[esi]
  425a9d:	sbb    bl,BYTE PTR [edi]
  425a9f:	xchg   edi,eax
  425aa0:	test   eax,0x4e85b0fa
  425aa5:	sub    DWORD PTR [edi-0x7],esi
  425aa8:	push   esi
  425aa9:	retf   0xba66
  425aac:	pushf  
  425aad:	mov    edx,0x7bf85b2d
  425ab2:	sub    BYTE PTR [esi],al
  425ab4:	les    esi,FWORD PTR [esi]
  425ab6:	add    BYTE PTR [ebx+0x694f3f51],0x76
  425abd:	mov    ecx,0x4cc7394d
  425ac2:	mov    edi,0x73a2b90a
  425ac7:	daa    
  425ac8:	in     eax,0xf3
  425aca:	cmp    esp,DWORD PTR [ebx+0x6e]
  425acd:	or     ch,cl
  425acf:	(bad)  
  425ad0:	loopne 0x425a78
  425ad2:	push   esi
  425ad3:	imul   edx,DWORD PTR [eax-0x3d],0xa
  425ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ad8:	push   ebp
  425ad9:	ja     0x425a74
  425adb:	(bad)  
  425adc:	fisubr WORD PTR [ebp+0x6d3202dd]
  425ae2:	popa   
  425ae3:	outs   dx,DWORD PTR ds:[esi]
  425ae4:	call   0x435ad623
  425ae9:	inc    edi
  425aea:	or     ebx,DWORD PTR [ecx-0x2be563a0]
  425af0:	stos   BYTE PTR es:[edi],al
  425af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425af2:	scas   al,BYTE PTR es:[edi]
  425af3:	mul    BYTE PTR [ebp-0x2f89ac09]
  425af9:	test   al,0x95
  425afb:	mov    ecx,0x9eb144ef
  425b00:	das    
  425b01:	fild   QWORD PTR [edi]
  425b03:	or     esi,edi
  425b05:	mov    bh,bl
  425b07:	pusha  
  425b08:	lea    eax,[ebx+0x7]
  425b0b:	pop    ss
  425b0c:	lock and al,0xae
  425b0f:	sub    eax,0xc0f66723
  425b14:	sub    ebx,DWORD PTR [ebx-0xb9aae73]
  425b1a:	hlt    
  425b1b:	pop    edx
  425b1c:	shl    BYTE PTR [ebx],0x78
  425b1f:	cmp    bl,BYTE PTR [esi]
  425b21:	cdq    
  425b22:	ret    0xfb05
  425b25:	sub    DWORD PTR [ebx-0xf],edi
  425b28:	jl     0x425ab8
  425b2a:	mov    bl,0x40
  425b2c:	and    eax,0xde63b5ef
  425b31:	lods   al,BYTE PTR ds:[esi]
  425b32:	and    al,0xd6
  425b34:	mov    BYTE PTR [edi+0x55],cl
  425b37:	ficom  WORD PTR [ebx-0x58]
  425b3a:	dec    esp
  425b3b:	inc    esi
  425b3c:	icebp  
  425b3d:	adc    eax,0x11422360
  425b42:	xlat   BYTE PTR ds:[ebx]
  425b43:	push   0xffffff94
  425b45:	shl    DWORD PTR [ebx+0x31],0xca
  425b49:	xor    al,0xdb
  425b4b:	rol    edi,cl
  425b4d:	sbb    dl,BYTE PTR [edx]
  425b4f:	sbb    BYTE PTR [edi-0x49cf16b4],al
  425b55:	push   es
  425b56:	inc    esp
  425b57:	cld    
  425b58:	stos   BYTE PTR es:[edi],al
  425b59:	xchg   esi,eax
  425b5a:	xchg   ecx,eax
  425b5b:	cld    
  425b5c:	or     BYTE PTR [ecx],cl
  425b5e:	fmul   st,st(6)
  425b60:	ret    
  425b61:	dec    eax
  425b62:	cmp    cl,BYTE PTR cs:[esi+0x6388ce4f]
  425b69:	aam    0x3c
  425b6b:	pop    ds
  425b6c:	sub    BYTE PTR [ebx],dh
  425b6e:	and    BYTE PTR [ebx+edi*8-0x1d827a42],dl
  425b75:	and    bh,al
  425b77:	test   bh,bh
  425b79:	data16 fmul st,st(5)
  425b7c:	aad    0x72
  425b7e:	push   es
  425b7f:	mov    eax,0xeea25efd
  425b84:	stos   BYTE PTR es:[edi],al
  425b85:	ret    0x1b6
  425b88:	mov    ds:0xcbb89edc,al
  425b8d:	inc    esi
  425b8e:	outs   dx,WORD PTR ds:[esi]
  425b90:	mov    eax,0x6217c060
  425b95:	xor    BYTE PTR [edx+edi*4+0x1b69bd44],ch
  425b9c:	dec    esp
  425b9d:	in     al,dx
  425b9e:	mov    ah,0x83
  425ba0:	sahf   
  425ba1:	dec    esp
  425ba2:	hlt    
  425ba3:	jmp    0x85dbf99c
  425ba8:	jle    0x425ba1
  425baa:	or     BYTE PTR [eax],dl
  425bac:	or     edx,DWORD PTR [edi+0x3]
  425baf:	(bad)  
  425bb0:	in     al,0xa8
  425bb2:	aaa    
  425bb3:	popa   
  425bb4:	fwait
  425bb5:	pop    edx
  425bb6:	inc    edx
  425bb7:	cld    
  425bb8:	scas   eax,DWORD PTR es:[edi]
  425bb9:	imul   ah
  425bbb:	jmp    0x5e360dc8
  425bc0:	xor    eax,edi
  425bc2:	push   ebx
  425bc3:	mov    edx,0x5f1aba39
  425bc8:	jp     0x425c24
  425bca:	jno    0x425b69
  425bcc:	adc    eax,0xc324f47b
  425bd1:	inc    esp
  425bd2:	mov    edi,0x9b813582
  425bd7:	leave  
  425bd8:	mov    ebp,DWORD PTR [ecx+0x65]
  425bdb:	jecxz  0x425bb3
  425bdd:	and    edx,eax
  425bdf:	in     al,dx
  425be0:	gs cmc 
  425be2:	out    dx,eax
  425be3:	mov    ebp,0x3152d464
  425be8:	adc    esi,DWORD PTR [ebp+0x6a]
  425beb:	sbb    ecx,0xc2348aa9
  425bf1:	inc    eax
  425bf2:	fwait
  425bf3:	scas   eax,DWORD PTR es:[edi]
  425bf4:	mov    ds:0x2dda1eb,eax
  425bf9:	push   DWORD PTR [esi+eax*2-0x4d]
  425bfd:	mov    eax,0x9aa7752f
  425c02:	popa   
  425c03:	fwait
  425c04:	and    cl,BYTE PTR [edi-0x53e6bcf6]
  425c0a:	bswap  esp
  425c0c:	mov    dl,dh
  425c0e:	cmp    ebx,DWORD PTR [eax+0x167591eb]
  425c14:	jo     0x425bfd
  425c16:	pop    edx
  425c17:	jb     0x425bdc
  425c19:	aaa    
  425c1a:	repnz and ecx,eax
  425c1d:	cmc    
  425c1e:	mov    ds:0xe517755e,al
  425c23:	cmp    eax,0xd9ec726
  425c28:	pop    ecx
  425c29:	xchg   ebx,eax
  425c2a:	fs inc ebx
  425c2c:	cmc    
  425c2d:	cmp    eax,0xf496fd8f
  425c32:	ja     0x425c54
  425c34:	xchg   edx,eax
  425c35:	popf   
  425c36:	adc    ecx,DWORD PTR [ecx+0x3f]
  425c39:	and    DWORD PTR [ebx-0x5b492a9e],0xfffffff7
  425c40:	xchg   ebx,eax
  425c41:	test   eax,0xf1570a8
  425c46:	mov    bl,0x62
  425c48:	mov    edx,0xc6844337
  425c4d:	push   edi
  425c4e:	imul   ecx,DWORD PTR [ebx],0x7
  425c51:	test   BYTE PTR [ebp+0x6f085e62],0x77
  425c58:	add    BYTE PTR [ebx-0x18],0xd7
  425c5c:	sub    cl,bh
  425c5e:	retf   0x2da6
  425c61:	int    0x28
  425c63:	addr16 call 0xb87e434d
  425c69:	sub    eax,ecx
  425c6b:	or     eax,0x55fbbc17
  425c70:	pop    edi
  425c71:	push   ebp
  425c72:	clc    
  425c73:	lods   al,BYTE PTR ds:[esi]
  425c74:	mov    ebp,0x61305746
  425c79:	push   0xffffffa1
  425c7b:	aaa    
  425c7c:	stc    
  425c7d:	outs   dx,BYTE PTR ds:[esi]
  425c7e:	pop    ds
  425c7f:	cdq    
  425c80:	test   al,0x67
  425c82:	xchg   dh,dh
  425c84:	out    dx,eax
  425c85:	scas   eax,DWORD PTR es:[edi]
  425c86:	add    edx,DWORD PTR [eax+0x5c]
  425c89:	aas    
  425c8a:	out    0x43,al
  425c8c:	not    BYTE PTR [ecx]
  425c8e:	(bad)  
  425c8f:	cmp    ah,BYTE PTR ds:0x90e3d8b4
  425c95:	jmp    0x6609:0x2982dab2
  425c9c:	fbstp  TBYTE PTR [ebx]
  425c9e:	lods   eax,DWORD PTR ds:[esi]
  425c9f:	int3   
  425ca0:	ds (bad) 
  425ca2:	jne    0x425c62
  425ca4:	ins    DWORD PTR es:[edi],dx
  425ca5:	adc    DWORD PTR [edi+ebp*4+0x755277f2],esi
  425cac:	jp     0x425ce4
  425cae:	in     al,0x6
  425cb0:	or     BYTE PTR [esi+0x1b1c5333],cl
  425cb6:	sub    BYTE PTR [esi-0x5b],dl
  425cb9:	je     0x425c4f
  425cbb:	and    al,ah
  425cbd:	push   cs
  425cbe:	add    BYTE PTR [ecx],al
  425cc0:	pop    ebp
  425cc1:	ds dec edi
  425cc3:	loope  0x425c94
  425cc5:	xor    DWORD PTR [bp+di],0xe7f1263a
  425ccc:	ins    BYTE PTR es:[edi],dx
  425ccd:	lahf   
  425cce:	xchg   ebx,eax
  425ccf:	jo     0x425d01
  425cd1:	cmp    al,0xde
  425cd3:	shl    BYTE PTR [esi],0x70
  425cd6:	adc    al,ch
  425cd8:	aam    0x5f
  425cda:	cmp    DWORD PTR [ecx+0x1617b6ba],ebx
  425ce0:	arpl   WORD PTR [edx],sp
  425ce2:	add    DWORD PTR [eax+0x8],edx
  425ce5:	dec    ebx
  425ce6:	test   DWORD PTR [edx-0x21],ebp
  425ce9:	imul   ecx,DWORD PTR [esi],0xe0d9e8ae
  425cef:	stos   DWORD PTR es:[edi],eax
  425cf0:	mov    eax,0x136bdb0e
  425cf5:	or     dl,0x3d
  425cf8:	mov    WORD PTR [eax+0x28],cs
  425cfb:	push   ecx
  425cfc:	aam    0xbb
  425cfe:	aas    
  425cff:	and    ch,BYTE PTR [ebp+0xc0879c]
	...
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock retf 0xe9a5
  425d20:	into   
  425d21:	retf   
  425d22:	rol    DWORD PTR [ecx],cl
  425d24:	add    BYTE PTR [ebx+0x5b000003],ch
  425d2a:	dec    esp
  425d2b:	sbb    al,0xea
  425d2d:	mov    al,0x2f
  425d2f:	mov    ch,ah
  425d31:	mov    dl,0xec
  425d33:	xchg   DWORD PTR [esi+0x76],esi
  425d36:	sbb    al,0x35
  425d38:	mov    esp,0xaca7e886
  425d3d:	mov    dh,ch
  425d3f:	shl    DWORD PTR [eax],cl
  425d41:	cld    
  425d42:	mov    ebp,0xa69ff252
  425d47:	cmp    al,BYTE PTR [esi-0x59b29361]
  425d4d:	(bad)  
  425d4e:	dec    eax
  425d4f:	leave  
  425d50:	pop    ecx
  425d51:	mov    dh,0xad
  425d53:	leave  
  425d54:	pushf  
  425d55:	sbb    dh,dl
  425d57:	adc    BYTE PTR [edi-0x49],dl
  425d5a:	adc    BYTE PTR [ebx-0x18],ah
  425d5d:	loope  0x425dd8
  425d5f:	and    al,0x1d
  425d61:	fs scas al,BYTE PTR es:[edi]
  425d63:	cmp    BYTE PTR [ebp-0x7f],ch
  425d66:	jmp    0x6e22:0x2af48391
  425d6d:	call   0xa12f:0xfcfa9b8b
  425d74:	or     esi,DWORD PTR [ecx+0x2aa20f66]
  425d7a:	std    
  425d7b:	push   ss
  425d7c:	inc    ebp
  425d7d:	sub    DWORD PTR [edi+0x32f7cf4e],esp
  425d83:	cmp    dh,ch
  425d85:	or     DWORD PTR [edx],esp
  425d87:	adc    eax,0x4b7c9eba
  425d8c:	call   DWORD PTR [edx+0x65]
  425d8f:	in     al,dx
  425d90:	enter  0x8beb,0x58
  425d94:	and    DWORD PTR [edx+0x27d09284],ebp
  425d9a:	dec    esp
  425d9b:	imul   ebp,DWORD PTR [ecx+0x1610d41c],0x174ee9a2
  425da5:	xor    esp,eax
  425da7:	fs inc edi
  425da9:	push   es
  425daa:	(bad)  
  425dab:	rol    ebp,1
  425dad:	sub    ecx,DWORD PTR [ebx+0x560c6fe7]
  425db3:	test   eax,0xef10c34e
  425db8:	jmp    0x1b14:0x35b7f891
  425dbf:	jle    0x425dbd
  425dc1:	push   edi
  425dc2:	mov    ?,WORD PTR [esi-0x110f98dd]
  425dc8:	in     al,dx
  425dc9:	dec    eax
  425dca:	xor    bh,dh
  425dcc:	not    DWORD PTR [ebx+edi*8-0x7d]
  425dd0:	dec    eax
  425dd1:	(bad)  
  425dd2:	in     al,0xb
  425dd4:	jle    0x425dba
  425dd6:	stos   DWORD PTR es:[edi],eax
  425dd7:	xor    edi,DWORD PTR [ecx+0x73591475]
  425ddd:	add    DWORD PTR [eax],esp
  425ddf:	cdq    
  425de0:	aam    0x38
  425de2:	mov    bh,0x64
  425de4:	mov    eax,ds:0xaa89a93
  425de9:	mov    dh,0x34
  425deb:	dec    edx
  425dec:	lea    ebx,[ebx-0x45c3b3fa]
  425df2:	xchg   ebp,eax
  425df3:	mov    bh,0xe2
  425df5:	cmp    DWORD PTR [esi+0x78],0x46c4312d
  425dfc:	ins    DWORD PTR es:[edi],dx
  425dfd:	rol    DWORD PTR [eax],cl
  425dff:	xor    bl,bl
  425e01:	stc    
  425e02:	adc    al,BYTE PTR [edi-0x17]
  425e05:	pop    ebp
  425e06:	ja     0x425e30
  425e08:	or     al,0xb1
  425e0a:	mov    edi,0xb3bb16d2
  425e0f:	fild   DWORD PTR ds:0xc5e39bee
  425e15:	fldenv [ebp+0x79]
  425e18:	cdq    
  425e19:	sbb    ebx,ebp
  425e1b:	in     al,dx
  425e1c:	mov    dl,0x6e
  425e1e:	retf   
  425e1f:	inc    ecx
  425e20:	mov    ch,0xe
  425e22:	inc    edi
  425e23:	adc    bl,BYTE PTR [esi-0x24b40370]
  425e29:	xor    esi,ecx
  425e2b:	mov    eax,DWORD PTR [ebx+0x17]
  425e2e:	cmp    cl,BYTE PTR [ecx]
  425e30:	ret    
  425e31:	pop    eax
  425e32:	sti    
  425e33:	push   es
  425e34:	xchg   ah,dl
  425e36:	(bad)
  425e39:	inc    ebp
  425e3a:	rcl    dh,0x33
  425e3d:	adc    al,0xb5
  425e3f:	xor    ebx,DWORD PTR [eax+0x582223fc]
  425e45:	popa   
  425e46:	out    0x3f,eax
  425e48:	js     0x425eac
  425e4a:	push   ds
  425e4b:	adc    eax,0xe15c11a6
  425e50:	sub    ch,bl
  425e52:	sbb    cl,BYTE PTR [ecx+0x4f]
  425e55:	mov    ds:0xb41e8e39,eax
  425e5a:	or     eax,0x4d096ab4
  425e5f:	fwait
  425e60:	xchg   DWORD PTR [edx],edi
  425e62:	in     eax,dx
  425e63:	add    edx,esp
  425e65:	xor    eax,DWORD PTR [esi+ebx*8+0x459fc54a]
  425e6c:	push   es
  425e6d:	jne    0x425e6c
  425e6f:	xor    cl,BYTE PTR [ebx-0x67]
  425e72:	mov    edi,ds
  425e74:	xchg   edi,eax
  425e75:	mov    BYTE PTR [edi-0x47],ah
  425e78:	shl    edx,0xfe
  425e7b:	ss inc ebx
  425e7d:	pushf  
  425e7e:	ss es dec ebp
  425e81:	cmp    DWORD PTR [ebp-0x38],0xffffff8a
  425e85:	mov    cl,0xf2
  425e87:	jecxz  0x425eed
  425e89:	int3   
  425e8a:	jo     0x425e15
  425e8c:	xchg   BYTE PTR [edx-0xa],cl
  425e8f:	jnp    0x425f0a
  425e91:	out    dx,eax
  425e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e93:	leave  
  425e94:	imul   esi,DWORD PTR [ebx-0x4f12495e],0x52f8b03
  425e9e:	inc    edi
  425e9f:	fsub   DWORD PTR [ebx]
  425ea1:	int3   
  425ea2:	xchg   ebp,eax
  425ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ea4:	push   edi
  425ea5:	mov    DWORD PTR [esi+0x3d3b6ba1],esi
  425eab:	cli    
  425eac:	or     al,0xb8
  425eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eaf:	jmp    0xb97b7ae9
  425eb4:	mov    dl,0xc4
  425eb6:	shl    DWORD PTR [ebp+0x2745200b],1
  425ebc:	mov    ebx,0xb1f663c8
  425ec1:	sbb    esi,DWORD PTR [edx]
  425ec3:	jle    0x425ec6
  425ec5:	jecxz  0x425eb2
  425ec7:	and    al,0xc3
  425ec9:	sahf   
  425eca:	or     eax,0xc24df30d
  425ecf:	lock fwait
  425ed1:	dec    esp
  425ed2:	mov    al,0xad
  425ed4:	sub    ax,0xff52
  425ed8:	(bad)  
  425ed9:	test   al,0xe1
  425edb:	or     BYTE PTR [ebx+edi*4-0x24a49234],ch
  425ee2:	inc    eax
  425ee3:	ret    0x8d39
  425ee6:	xor    eax,0xbf2e1c5
  425eeb:	xchg   edx,eax
  425eec:	cmp    esp,esi
  425eee:	rol    BYTE PTR [edx-0x615223ca],0xe2
  425ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ef6:	fistp  QWORD PTR [ecx+eiz*8]
  425ef9:	mov    al,0x99
  425efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425efc:	or     edx,DWORD PTR [ebx-0x781c5194]
  425f02:	call   0x98da5776
  425f07:	fistp  DWORD PTR [eax]
  425f09:	dec    esp
  425f0a:	jbe    0x425f28
  425f0c:	sahf   
  425f0d:	mov    edx,0x1a6f7939
  425f12:	cmp    ebx,DWORD PTR [ecx-0x337a5191]
  425f18:	shl    DWORD PTR [edi+esi*8],1
  425f1b:	and    al,0xd2
  425f1d:	dec    edi
  425f1e:	icebp  
  425f1f:	cli    
  425f20:	cmp    al,0x9e
  425f22:	xchg   esp,eax
  425f23:	aam    0xf0
  425f25:	rol    BYTE PTR [ecx+0x2411a4e6],1
  425f2b:	test   DWORD PTR [esi],edi
  425f2d:	pushf  
  425f2e:	jp     0x425f7c
  425f30:	scas   al,BYTE PTR es:[edi]
  425f31:	(bad)  
  425f32:	ret    
  425f33:	sbb    BYTE PTR [ebp-0x4ad950bc],0x90
  425f3a:	inc    ebx
  425f3b:	mov    ah,0x34
  425f3d:	scas   al,BYTE PTR es:[edi]
  425f3e:	scas   al,BYTE PTR es:[edi]
  425f3f:	pop    edi
  425f40:	sbb    eax,0xb6885da1
  425f45:	dec    eax
  425f46:	in     eax,dx
  425f47:	pop    ecx
  425f48:	adc    DWORD PTR [esp+esi*4-0x59ad2143],eax
  425f4f:	mov    dh,0xdc
  425f51:	stos   BYTE PTR es:[edi],al
  425f52:	loop   0x425f4a
  425f54:	nop
  425f55:	(bad)  
  425f56:	loopne 0x425fd3
  425f58:	cmp    DWORD PTR [edi],esi
  425f5a:	xchg   edx,edi
  425f5c:	cmp    ah,BYTE PTR [edx-0x3fb90756]
  425f62:	repz adc al,BYTE PTR [edi+edi*1]
  425f66:	cld    
  425f67:	pop    ss
  425f68:	mov    edx,0x6dbb2333
  425f6d:	mov    al,0x8d
  425f6f:	mov    cl,0x56
  425f71:	nop
  425f72:	aad    0x64
  425f74:	push   eax
  425f75:	hlt    
  425f76:	mov    esi,0x5021b52e
  425f7b:	int3   
  425f7c:	and    eax,edi
  425f7e:	bound  ecx,QWORD PTR es:[eax-0x6b026acd]
  425f85:	aam    0x94
  425f87:	dec    ebx
  425f88:	xor    DWORD PTR [ebp+0x79],ebp
  425f8b:	dec    edi
  425f8c:	jne    0x425ff8
  425f8e:	or     DWORD PTR [esi-0x2ef1157b],0x10
  425f95:	jmp    0x5bb8:0xee69ca2d
  425f9c:	mov    cs,WORD PTR [ebx*1-0xf9fcb9]
  425fa3:	test   BYTE PTR [ebp-0x3b0f6116],ah
  425fa9:	std    
  425faa:	movq   mm4,QWORD PTR [ebp-0x22]
  425fae:	push   es
  425faf:	jne    0x425ff5
  425fb1:	and    DWORD PTR [ebx+0x38],ebx
  425fb4:	or     al,0x9f
  425fb6:	mov    esp,DWORD PTR [esi-0x3d]
  425fb9:	lahf   
  425fba:	dec    esp
  425fbb:	add    BYTE PTR [edx-0x702d4435],al
  425fc1:	cmp    eax,0x1740b303
  425fc6:	mov    ebp,0xfd2dffac
  425fcb:	push   ebp
  425fcc:	ins    DWORD PTR es:[edi],dx
  425fcd:	shr    DWORD PTR [eax+0x26],1
  425fd0:	dec    BYTE PTR [eax-0x20b3de63]
  425fd6:	rcr    DWORD PTR ds:0xd5c148e5,0xe8
  425fdd:	inc    ebp
  425fde:	es or  eax,0xb10981c9
  425fe4:	lods   al,BYTE PTR ds:[esi]
  425fe5:	hlt    
  425fe6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73497c2],0xfa041689
  425ff1:	or     eax,0xff85dc1a
  425ff6:	jge    0x425fff
  425ff8:	or     BYTE PTR [edi+eiz*4-0x4f3343d6],ch
  425fff:	int3   
  426000:	inc    ebx
  426001:	adc    al,0xc
  426003:	add    eax,0xfb25caee
  426008:	and    al,0x14
  42600a:	in     eax,dx
  42600b:	aaa    
  42600c:	add    eax,0x57f280dd
  426011:	in     al,dx
  426012:	je     0x426021
  426014:	mov    ebx,0xe94978bc
  426019:	cli    
  42601a:	jbe    0x426056
  42601c:	sub    dh,BYTE PTR [ebx-0x4d4af4df]
  426022:	mov    al,0xa3
  426024:	fidivr WORD PTR [eax]
  426026:	les    eax,FWORD PTR [esi-0x40]
  426029:	(bad)
  42602c:	mov    esi,DWORD PTR [edx]
  42602e:	mov    ds:0x5b967364,eax
  426033:	adc    DWORD PTR [eax+0x4ee9b392],0x20
  42603a:	and    eax,0xee9678e3
  42603f:	fwait
  426040:	mov    bl,0xf
  426042:	mov    dh,0x58
  426044:	adc    al,0x80
  426046:	jb     0x4260b3
  426048:	inc    edx
  426049:	and    esi,DWORD PTR [edx-0x51]
  42604c:	jnp    0x425fe0
  42604e:	xchg   ebp,eax
  42604f:	cli    
  426050:	mov    dl,0x71
  426052:	sbb    BYTE PTR [ebp-0x2],0x2f
  426056:	push   edx
  426057:	mov    BYTE PTR [esi+edx*1-0x7f],cl
  42605b:	shl    BYTE PTR [esi-0x136e5740],0xaf
  426062:	daa    
  426063:	push   0xffffffa3
  426065:	shl    DWORD PTR [edx+0x5e9218e1],1
  42606b:	mov    edi,0xf5b71b41
  426070:	or     eax,0x78
  426073:	xor    ecx,DWORD PTR [ecx+ecx*4+0x3fe16ef4]
  42607a:	fldenv [esi-0x65]
  42607d:	in     al,0x75
  42607f:	or     dl,al
  426081:	mov    ebp,0x630f7f2c
  426086:	int    0xa1
  426088:	stos   DWORD PTR es:[edi],eax
  426089:	xchg   bl,ah
  42608b:	mov    dh,0x6a
  42608d:	jmp    FWORD PTR [ebx]
  42608f:	lds    ebp,FWORD PTR [edi+0x5841b939]
  426095:	or     DWORD PTR [edi+0x5],ebp
  426098:	xlat   BYTE PTR ds:[bx]
  42609a:	ins    BYTE PTR es:[edi],dx
  42609b:	pop    eax
  42609c:	and    edx,DWORD PTR [edi]
  42609e:	jecxz  0x42605d
  4260a0:	aaa    
  4260a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260a2:	cs xchg esp,eax
  4260a4:	or     esp,esi
  4260a6:	add    al,0xe2
  4260a8:	mov    DWORD PTR [ebx],ecx
  4260aa:	jbe    0x4260e1
  4260ac:	imul   esp,DWORD PTR [esi],0x2a
  4260af:	loop   0x42612e
  4260b1:	dec    esp
  4260b2:	pop    es
  4260b3:	mov    ebx,0x4ebcca36
  4260b8:	sar    BYTE PTR [eax],cl
  4260ba:	inc    esp
  4260bb:	push   ebx
  4260bc:	mov    al,0x40
  4260be:	xchg   ebx,eax
  4260bf:	icebp  
  4260c0:	and    al,cl
  4260c2:	ins    DWORD PTR es:[edi],dx
  4260c3:	(bad)  
  4260c4:	ret    
  4260c5:	mov    BYTE PTR es:[ecx-0x5804a942],dl
  4260cc:	jecxz  0x426136
  4260ce:	addr16 ds in eax,0x71
  4260d2:	daa    
  4260d3:	popf   
	...
  4260e0:	add    BYTE PTR [edx],bl
  4260e2:	call   0x3e3d72
  4260e7:	pop    edi
  4260e8:	out    dx,al
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    ebx,DWORD PTR [ecx]
  4260ee:	repz cmc 
  4260f0:	mov    dh,0x76
  4260f2:	xlat   BYTE PTR ds:[ebx]
  4260f3:	add    DWORD PTR [eax],eax
  4260f5:	stos   DWORD PTR es:[edi],eax
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [edx-0x10ac934c],dh
  4260fe:	push   es
  4260ff:	sbb    al,0x40
  426101:	mov    edi,0x8b952eb0
  426106:	mov    edx,0xf7718c44
  42610b:	test   ch,0x3
  42610e:	das    
  42610f:	into   
  426110:	lahf   
  426111:	add    DWORD PTR [esi],eax
  426113:	push   0xffffffe2
  426115:	mov    edi,0x93ef0820
  42611a:	xor    eax,0x70f22661
  42611f:	jb     0x42610b
  426121:	and    BYTE PTR [edi],bl
  426123:	mov    ds:0x55d444c1,eax
  426128:	and    bh,BYTE PTR [esi-0x8]
  42612b:	mov    ebp,0x1ffcfed6
  426130:	mov    edi,0x314f8af3
  426135:	mov    esi,0xf284f2c5
  42613a:	cmp    BYTE PTR [edi-0x13047e89],bh
  426140:	pop    edi
  426141:	push   ebp
  426142:	xor    al,0x58
  426144:	aam    0xac
  426146:	inc    esp
  426147:	ins    DWORD PTR es:[edi],dx
  426148:	or     edx,esi
  42614a:	jae    0x4261b8
  42614c:	pop    es
  42614d:	jecxz  0x42610d
  42614f:	jge    0x426176
  426151:	inc    esp
  426152:	fnstsw WORD PTR [edi+eax*4]
  426155:	sub    al,0x69
  426157:	iret   
  426158:	push   0xffffffdb
  42615a:	and    dl,BYTE PTR [eax+ecx*1]
  42615d:	enter  0x2e32,0x8a
  426161:	sub    DWORD PTR cs:[esi],eax
  426164:	sar    BYTE PTR [ebx],cl
  426166:	push   esp
  426167:	or     BYTE PTR [ebx],dl
  426169:	ss (bad) 
  42616b:	fisub  WORD PTR [esi]
  42616d:	sbb    al,0x0
  42616f:	xor    ebp,DWORD PTR [ebp-0x23223767]
  426175:	stc    
  426176:	dec    ebp
  426177:	xor    DWORD PTR ds:0x4f4dbc7f,edi
  42617d:	jo     0x426171
  42617f:	sbb    al,0xa2
  426181:	fdiv   DWORD PTR [ebp+0x146efaf6]
  426187:	dec    esi
  426188:	data16 int 0x89
  42618b:	xor    bl,cl
  42618d:	push   cs
  42618e:	push   es
  42618f:	ins    DWORD PTR es:[edi],dx
  426190:	inc    esi
  426191:	xor    al,0xba
  426193:	pop    edi
  426194:	loope  0x42612e
  426196:	sti    
  426197:	dec    ebx
  426198:	xchg   ecx,eax
  426199:	sbb    bh,0x68
  42619c:	je     0x426179
  42619e:	repnz xchg ecx,eax
  4261a0:	mov    ah,0x64
  4261a2:	or     eax,0x88c25382
  4261a7:	bound  esp,QWORD PTR [edx]
  4261a9:	pop    edx
  4261aa:	mov    edx,ecx
  4261ac:	pop    ss
  4261ad:	ins    DWORD PTR es:[edi],dx
  4261ae:	sbb    edi,ebx
  4261b0:	and    edi,DWORD PTR [ecx-0x473fab3d]
  4261b6:	in     al,0x4b
  4261b8:	aad    0x67
  4261ba:	pop    ebp
  4261bb:	or     DWORD PTR [esi-0x33],esi
  4261be:	and    DWORD PTR [ebp+0x2d],ecx
  4261c1:	scas   eax,DWORD PTR es:[edi]
  4261c2:	pusha  
  4261c3:	push   eax
  4261c4:	add    eax,0x6618ebe9
  4261c9:	sub    bh,ch
  4261cb:	loopne 0x426210
  4261cd:	sbb    al,0xd7
  4261cf:	jmp    0x1fb16072
  4261d4:	stc    
  4261d5:	sub    al,cl
  4261d7:	and    esi,ebp
  4261d9:	dec    ecx
  4261da:	cmp    eax,0x168b2af3
  4261df:	cdq    
  4261e0:	popf   
  4261e1:	cmp    ebp,DWORD PTR [ecx]
  4261e3:	mov    dl,BYTE PTR [edx]
  4261e5:	jp     0x42619f
  4261e7:	inc    eax
  4261e8:	(bad)  
  4261e9:	xor    cl,bh
  4261eb:	mov    al,ds:0x44f0e57c
  4261f0:	sbb    bl,BYTE PTR [esi]
  4261f2:	dec    esp
  4261f3:	adc    eax,0x66db8a58
  4261f8:	lock lods al,BYTE PTR ds:[esi]
  4261fa:	xchg   BYTE PTR [esi+0x42bfdf5],cl
  426200:	clc    
  426201:	add    al,0x0
  426203:	cli    
  426204:	fcom   QWORD PTR [esi+edx*4-0x2a]
  426208:	jl     0x42626b
  42620a:	dec    esi
  42620b:	xchg   ecx,eax
  42620c:	adc    DWORD PTR ds:[edx+0x37],edx
  426210:	frstor [edx+0x23fc3a17]
  426216:	stc    
  426217:	sar    BYTE PTR [ecx],cl
  426219:	imul   eax,DWORD PTR [ecx-0x5f9e9e9b],0x71
  426220:	mov    gs,WORD PTR [edx+0x75]
  426223:	sub    dh,BYTE PTR [ecx+edi*8]
  426226:	cmp    bl,dl
  426228:	test   eax,0x3666c43b
  42622d:	pop    edx
  42622e:	mov    bh,0x37
  426230:	ins    BYTE PTR es:[edi],dx
  426231:	dec    esi
  426232:	rol    BYTE PTR [ebx-0x1f],0x97
  426236:	adc    ah,ch
  426238:	int3   
  426239:	sahf   
  42623a:	pushf  
  42623b:	fs hlt 
  42623d:	adc    bh,dh
  42623f:	mov    eax,ds:0x8913de7
  426244:	test   DWORD PTR [ecx+0x46],0x1682e50a
  42624b:	sbb    ah,dh
  42624d:	test   al,0x6d
  42624f:	inc    ebp
  426250:	scas   al,BYTE PTR es:[edi]
  426251:	pop    eax
  426252:	or     al,0x66
  426254:	test   DWORD PTR [edx+0x3c0eaceb],0x486ebc0e
  42625e:	cmp    ecx,DWORD PTR [eax-0x73]
  426261:	jmp    0x36e71ae8
  426266:	fcomp  DWORD PTR [ebx]
  426268:	dec    eax
  426269:	sub    DWORD PTR [eax-0x508b5ca8],esi
  42626f:	push   esp
  426270:	add    eax,DWORD PTR [edi-0x1e362b8e]
  426276:	sti    
  426277:	aas    
  426278:	repnz mov bh,0xcf
  42627b:	sub    bh,BYTE PTR [ebx]
  42627d:	call   FWORD PTR [ecx]
  42627f:	imul   esp,DWORD PTR [ebp-0x25],0x62c9764a
  426286:	mov    ecx,0xf4b58e1f
  42628b:	cmp    bh,dl
  42628d:	dec    edi
  42628e:	pop    esi
  42628f:	jno    0x426255
  426291:	inc    esi
  426292:	jns    0x426228
  426294:	add    al,0x30
  426296:	cs mov ebp,0x35df1ea7
  42629c:	fidivr WORD PTR [edi]
  42629e:	mov    edi,0x4f13d6a6
  4262a3:	pop    edx
  4262a4:	jo     0x4262f9
  4262a6:	push   0xe199bf8e
  4262ab:	fldpi  
  4262ad:	je     0x42624e
  4262af:	jmp    0xcd57:0x665f073
  4262b6:	inc    eax
  4262b7:	rcr    BYTE PTR [ebx-0x4d329ecd],0xf3
  4262be:	fs inc ebp
  4262c0:	pop    ebx
  4262c1:	mov    edx,0xc5828f69
  4262c6:	adc    al,bl
  4262c8:	cs dec sp
  4262cb:	mov    BYTE PTR [ecx],dl
  4262cd:	icebp  
  4262ce:	fadd   QWORD PTR [edx-0x7945f3b0]
  4262d4:	and    al,BYTE PTR [esp+ecx*8+0x5]
  4262d8:	and    BYTE PTR [edi+0x262bcfe5],0x20
  4262df:	mov    eax,ds:0xbe50959
  4262e4:	call   0x43578538
  4262e9:	mov    edi,0xc781cd53
  4262ee:	push   eax
  4262ef:	cmp    bl,BYTE PTR [ebx-0x42b69a9c]
  4262f5:	fild   WORD PTR [edi-0x72d241ac]
  4262fb:	adc    DWORD PTR [edx+0x49],0xf068c5f
  426302:	cmp    DWORD PTR [ebp-0xc],eax
  426305:	mov    BYTE PTR [edx],0x7e
  426308:	dec    esi
  426309:	das    
  42630a:	mov    bh,0xe3
  42630c:	jle    0x426358
  42630e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42630f:	adc    al,0xbf
  426311:	sub    esp,esp
  426313:	push   ecx
  426314:	jle    0x426342
  426316:	call   0x8660:0xe903fdfc
  42631d:	pop    ebp
  42631e:	or     al,0x57
  426320:	repz mov ebx,0x51732859
  426326:	mov    eax,0x465b0ce1
  42632b:	inc    ebp
  42632c:	sahf   
  42632d:	mov    edi,0x21ec9c50
  426332:	lods   eax,DWORD PTR ds:[esi]
  426333:	fist   DWORD PTR [edi+0x32]
  426336:	fisttp QWORD PTR [ecx+0x57ef0aa5]
  42633c:	imul   esp,DWORD PTR [edi+0x37],0x38df275b
  426343:	jp     0x426343
  426345:	ds pop esi
  426347:	std    
  426348:	push   ebx
  426349:	enter  0xa46,0x3b
  42634d:	lahf   
  42634e:	repz mov eax,esi
  426351:	retf   
  426352:	das    
  426353:	ror    DWORD PTR [edx+0x253e862d],1
  426359:	jg     0x4263bf
  42635b:	hlt    
  42635c:	xor    al,0x98
  42635e:	cmc    
  42635f:	stos   DWORD PTR es:[edi],eax
  426360:	popf   
  426361:	imul   ebx,eax,0xffffffd9
  426364:	inc    ebp
  426365:	mov    bl,0xdc
  426367:	mov    esi,0xf5175fbf
  42636c:	in     eax,dx
  42636d:	mov    esi,0x53e56f02
  426372:	dec    esi
  426373:	fistp  QWORD PTR [bp-0x7a]
  426377:	test   DWORD PTR [esi+ebp*8+0x7b16babb],0xce4e0fd9
  426382:	jae    0x426395
  426384:	ins    BYTE PTR es:[edi],dx
  426385:	and    ecx,DWORD PTR [edi+0x1f]
  426388:	inc    ebx
  426389:	or     eax,DWORD PTR [ebp+0xc]
  42638c:	xchg   ebp,eax
  42638d:	cmp    al,0x96
  42638f:	outs   dx,DWORD PTR ds:[esi]
  426390:	jnp    0x426335
  426392:	int3   
  426393:	or     ch,bl
  426395:	fstp   TBYTE PTR [ebx]
  426397:	imul   bh
  426399:	mov    WORD PTR ds:0x45725dcd,fs
  42639f:	pushf  
  4263a0:	mov    BYTE PTR [eax+0x6e],dh
  4263a3:	xchg   esi,eax
  4263a4:	fsub   QWORD PTR [eax+edx*4+0x79]
  4263a8:	jecxz  0x4263a0
  4263aa:	imul   ebp,DWORD PTR [esi-0x42],0xffffffa3
  4263ae:	test   DWORD PTR [edi+0x61],ebx
  4263b1:	or     eax,0xa26b3b97
  4263b6:	(bad)  
  4263b7:	retf   
  4263b8:	das    
  4263b9:	cdq    
  4263ba:	ret    
  4263bb:	dec    ebp
  4263bc:	das    
  4263bd:	sub    ah,BYTE PTR [eax]
  4263bf:	jecxz  0x4263ae
  4263c1:	jno    0x42641d
  4263c3:	enter  0x1d09,0x15
  4263c7:	imul   DWORD PTR [ecx+eax*1]
  4263ca:	fbld   TBYTE PTR ds:0xf022cbcd
  4263d0:	pop    edx
  4263d1:	push   ebp
  4263d2:	mov    bh,0x5d
  4263d4:	jp     0x42637a
  4263d6:	ret    0x4e15
  4263d9:	ret    0x6af9
  4263dc:	test   BYTE PTR [edx+0x47],ah
  4263df:	mov    ecx,0x1a255642
  4263e4:	rol    BYTE PTR [edx-0x38],1
  4263e7:	out    dx,al
  4263e8:	mov    BYTE PTR [edi+0x72],dl
  4263eb:	push   eax
  4263ec:	pop    edi
  4263ed:	pop    ebp
  4263ee:	daa    
  4263ef:	adc    dh,al
  4263f1:	dec    ebp
  4263f2:	imul   esp,DWORD PTR [ebx],0x1e
  4263f5:	jnp    0x426420
  4263f7:	shr    dh,0x13
  4263fa:	sbb    al,0x62
  4263fc:	adc    DWORD PTR [esi-0x46],ebx
  4263ff:	push   cs
  426400:	mov    al,0x6e
  426402:	adc    BYTE PTR [ebp+0x2],ah
  426405:	jl     0x4263ce
  426407:	loop   0x426485
  426409:	adc    esp,DWORD PTR [edi]
  42640b:	inc    esp
  42640c:	dec    ebp
  42640d:	(bad)  
  42640e:	and    al,0xe0
  426410:	dec    edi
  426411:	mov    edi,0xb88aa331
  426416:	push   eax
  426417:	hlt    
  426418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426419:	mov    WORD PTR [esi+0x7849c81b],gs
  42641f:	xchg   DWORD PTR [ebx-0x4bab786c],ebp
  426425:	dec    edx
  426426:	and    BYTE PTR [ecx-0x1ae5d88f],0x7e
  42642d:	add    al,0x7a
  42642f:	popa   
  426430:	int    0x15
  426432:	imul   esp,DWORD PTR [ebx+0x2d],0x2988b39f
  426439:	mov    DWORD PTR [edi],esi
  42643b:	cwde   
  42643c:	jle    0x42648e
  42643e:	je     0x4263e7
  426440:	mov    ds:0x58074a9c,al
  426445:	mov    ebx,0xc8bc758c
  42644a:	add    eax,DWORD PTR [eax]
  42644c:	mov    ch,0x4e
  42644e:	fdivr  DWORD PTR [ebx]
  426450:	sbb    eax,DWORD PTR [eax]
  426452:	pop    edi
  426453:	scas   al,BYTE PTR es:[edi]
  426454:	scas   al,BYTE PTR es:[edi]
  426455:	sub    al,0xb2
  426457:	mul    DWORD PTR [eax-0x5d]
  42645a:	xor    BYTE PTR [ebx+0x2f89771f],al
  426460:	sub    BYTE PTR [eax+0x42ec636b],bl
  426466:	adc    ah,BYTE PTR [esi]
  426468:	icebp  
  426469:	icebp  
  42646a:	lea    ebp,[edi]
  42646c:	adc    BYTE PTR [ebx+0xa],0x7a
  426470:	out    0x3,eax
  426472:	mov    ebp,0xc0b91bb7
  426477:	inc    esi
  426478:	loopne 0x4264b7
  42647a:	lods   al,BYTE PTR ds:[esi]
  42647b:	test   al,0x6
  42647d:	push   esp
  42647e:	shr    DWORD PTR [eax],cl
  426480:	xlat   BYTE PTR ds:[ebx]
  426481:	jnp    0x426463
  426483:	jae    0x42642d
  426485:	sbb    esi,DWORD PTR [edi-0x49]
  426488:	imul   eax,DWORD PTR [ebp-0x2a],0x5d
  42648c:	xchg   ebp,eax
  42648d:	pushf  
  42648e:	mov    bl,0xd1
  426490:	imul   eax,DWORD PTR [ecx],0x221b8f08
  426496:	faddp  st(3),st
  426498:	stc    
  426499:	jno    0x4264bf
  42649b:	(bad)  
  42649c:	mov    esp,0x20c8d00c
  4264a1:	xchg   ebp,eax
  4264a2:	out    dx,eax
  4264a3:	add    eax,0x0
	...
  4264b0:	add    dl,ah
  4264b2:	jnp    0x426505
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     edi,DWORD PTR [ebx+0x218c8bfa]
  4264c2:	fild   DWORD PTR [ecx]
  4264c4:	add    BYTE PTR [ebx+0x4c000003],ch
  4264ca:	push   esp
  4264cb:	shl    al,0xcc
  4264ce:	(bad)  
  4264cf:	out    dx,eax
  4264d0:	or     esp,DWORD PTR [ecx]
  4264d2:	aam    0xe8
  4264d4:	les    edx,FWORD PTR [ebx]
  4264d6:	or     al,0xb9
  4264d8:	nop
  4264d9:	or     DWORD PTR [ebx+edx*1],esi
  4264dc:	mov    bh,0x7a
  4264de:	cld    
  4264df:	icebp  
  4264e0:	clc    
  4264e1:	xchg   esp,eax
  4264e2:	xchg   edi,eax
  4264e3:	xchg   ebx,eax
  4264e4:	add    DWORD PTR [esi-0x2d1bc390],0xc
  4264eb:	js     0x4264aa
  4264ed:	add    DWORD PTR [esi+esi*8-0xb],0x39
  4264f2:	fcom   st(1)
  4264f4:	add    eax,0x41f731cc
  4264f9:	jmp    0x1229:0xabe2e159
  426500:	push   esp
  426501:	pop    eax
  426502:	loop   0x42655f
  426504:	sub    eax,0xd188733a
  426509:	stos   DWORD PTR es:[edi],eax
  42650a:	or     eax,DWORD PTR [bp+di-0x7a]
  42650e:	ins    DWORD PTR es:[edi],dx
  42650f:	hlt    
  426510:	jne    0x426495
  426512:	or     dh,dh
  426514:	(bad)  
  426515:	cld    
  426516:	mov    ebp,0x9ad50d8a
  42651b:	ins    BYTE PTR es:[edi],dx
  42651c:	call   0x51b85993
  426521:	pop    eax
  426522:	xor    dl,BYTE PTR [ecx+0x43]
  426525:	fs or  eax,0x95ac026f
  42652b:	cmp    al,0x6e
  42652d:	mov    BYTE PTR [edi],al
  42652f:	test   cl,0xc1
  426532:	pop    eax
  426533:	stos   DWORD PTR es:[edi],eax
  426534:	or     DWORD PTR [ecx-0x5771356a],0xffffffee
  42653b:	test   al,0xc0
  42653d:	fadd   QWORD PTR [eax]
  42653f:	dec    ebp
  426540:	popa   
  426541:	cmc    
  426542:	pusha  
  426543:	cmp    ah,dh
  426545:	std    
  426546:	fwait
  426547:	add    eax,0xfb6325e0
  42654c:	pop    edx
  42654d:	mov    ch,0x75
  42654f:	mov    al,ds:0xd955cebc
  426554:	loop   0x42652d
  426556:	jo     0x426583
  426558:	sub    DWORD PTR [edx+0x63337be3],esi
  42655e:	test   al,0x85
  426560:	iret   
  426561:	int3   
  426562:	sahf   
  426563:	mov    ah,BYTE PTR [edx-0x17]
  426566:	loopne 0x4265ac
  426568:	mov    ah,0x4f
  42656a:	pushf  
  42656b:	inc    ecx
  42656c:	(bad)  
  42656e:	fld    TBYTE PTR [ebp+0x54]
  426571:	fs xchg esi,eax
  426573:	push   edx
  426574:	dec    edx
  426575:	aam    0x27
  426577:	or     bl,BYTE PTR [esi-0x3aa292c6]
  42657d:	add    BYTE PTR [ebx+0x4a1f3d52],dl
  426583:	or     ch,BYTE PTR [ecx-0x72]
  426586:	sbb    ch,BYTE PTR ds:0x1dce8e4
  42658c:	adc    DWORD PTR [ecx-0x69008095],ecx
  426592:	or     DWORD PTR [edi-0x6e],eax
  426595:	test   DWORD PTR [ebp+0x29],0x8b72015a
  42659c:	test   al,0x51
  42659e:	stc    
  42659f:	lods   eax,DWORD PTR ds:[esi]
  4265a0:	ds int 0x2b
  4265a3:	jmp    0x4320:0x6b1dba90
  4265aa:	mov    eax,fs
  4265ac:	(bad)
  4265b0:	xor    DWORD PTR [ebx+0x1019006a],0x2303ae7b
  4265ba:	test   DWORD PTR ds:0x7edb18aa,ebx
  4265c0:	pop    eax
  4265c1:	sub    BYTE PTR [edx+0x2aa66a68],0x94
  4265c8:	rsqrtps xmm3,xmm0
  4265cb:	loopne 0x4265d0
  4265cd:	or     dl,BYTE PTR [edx+0x29f557fa]
  4265d3:	lods   al,BYTE PTR ds:[esi]
  4265d4:	adc    al,BYTE PTR [ecx-0xa]
  4265d7:	data16 mov ah,BYTE PTR [edi-0x79a85bb5]
  4265de:	neg    eax
  4265e0:	jg     0x426630
  4265e2:	inc    ebp
  4265e3:	mov    BYTE PTR [edx],ch
  4265e5:	mov    ds:0x18289fcb,eax
  4265ea:	cmp    eax,0xbb5a8cf2
  4265ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f0:	sub    BYTE PTR [eax],cl
  4265f2:	inc    edx
  4265f3:	and    DWORD PTR [edi-0x3a9d2ca0],edi
  4265f9:	xchg   ecx,eax
  4265fa:	sbb    DWORD PTR [edx+0x1f],eax
  4265fd:	repz jb 0x42666c
  426600:	sub    al,0x33
  426602:	cmc    
  426603:	cli    
  426604:	jle    0x4265d0
  426606:	lock and bl,BYTE PTR [edx]
  426609:	ss push esi
  42660b:	inc    ecx
  42660c:	mov    dh,BYTE PTR [edi+0xa]
  42660f:	mov    WORD PTR [ebx+0x30096f1e],es
  426615:	inc    eax
  426616:	in     eax,dx
  426617:	fadd   DWORD PTR [edx]
  426619:	test   esp,esi
  42661b:	or     al,0xb5
  42661d:	jecxz  0x4265b6
  42661f:	lock scas al,BYTE PTR es:[edi]
  426621:	mov    bl,0x89
  426623:	xchg   edx,eax
  426624:	jns    0x42663d
  426626:	enter  0xe415,0x49
  42662a:	cmp    ah,0xef
  42662d:	fcmovnb st,st(6)
  42662f:	jg     0x42669f
  426631:	repnz mov eax,0xab5ba0d0
  426637:	imul   DWORD PTR [edx-0x28]
  42663a:	nop
  42663b:	ss mov dh,0x49
  42663e:	and    eax,ebp
  426640:	clc    
  426641:	mov    DWORD PTR [eax-0xf4a4bf8],eax
  426647:	xor    bl,cl
  426649:	jmp    0x426636
  42664b:	stos   DWORD PTR es:[edi],eax
  42664c:	enter  0x9dd7,0x58
  426650:	out    dx,al
  426651:	stos   DWORD PTR es:[edi],eax
  426652:	jp     0x4266ca
  426654:	(bad)  [esi+0x58d549c6]
  42665a:	pop    ebx
  42665b:	sbb    al,0x77
  42665d:	jge    0x426618
  42665f:	rcr    BYTE PTR [edi+0x6db02e8b],0xa4
  426666:	dec    ebx
  426667:	jle    0x42669b
  426669:	or     cl,al
  42666b:	jmp    0x4265fc
  42666d:	out    dx,eax
  42666e:	fst    QWORD PTR [edx-0x5c]
  426671:	das    
  426672:	mov    ecx,0x4553deb
  426677:	or     DWORD PTR [esi],esi
  426679:	sbb    al,0x7e
  42667b:	sub    edx,ecx
  42667d:	in     al,0x32
  42667f:	nop
  426680:	adc    al,dl
  426682:	dec    esi
  426683:	inc    esi
  426684:	call   0xf2f8:0x832e7ff5
  42668b:	add    bh,ch
  42668d:	aad    0x10
  42668f:	retf   
  426690:	pop    ebx
  426691:	fisub  WORD PTR [ebx+0x19]
  426694:	xchg   esp,eax
  426695:	sahf   
  426696:	push   esp
  426697:	stos   DWORD PTR es:[edi],eax
  426698:	xor    eax,0x9a2ffdb6
  42669d:	jmp    0x4266a5
  42669f:	pop    dx
  4266a1:	leave  
  4266a2:	and    eax,0xb2533f9f
  4266a7:	or     eax,0xb007d14f
  4266ac:	mov    ah,0x27
  4266ae:	call   0x65aa:0x580275b3
  4266b5:	and    DWORD PTR [eax-0x3af725bf],edi
  4266bb:	cmp    dl,bl
  4266bd:	shr    DWORD PTR [esp+ebp*2-0x15d6a3f7],cl
  4266c4:	and    eax,0x132f00e5
  4266c9:	mov    ds:0xe90255b6,al
  4266ce:	mov    ebx,DWORD PTR [edi+0x48ad638a]
  4266d4:	push   esp
  4266d5:	daa    
  4266d6:	retf   0xf42b
  4266d9:	sti    
  4266da:	mov    eax,0x62a2dd08
  4266df:	mov    ah,0xb7
  4266e1:	mov    WORD PTR [eax-0x7d],gs
  4266e4:	adc    DWORD PTR [edi-0x48d67fd4],0x1176c54d
  4266ee:	and    dl,BYTE PTR [edx+eax*1-0x6f]
  4266f2:	ss pop ecx
  4266f4:	xchg   edx,eax
  4266f5:	lods   al,BYTE PTR ds:[esi]
  4266f6:	mov    ebx,0x79617835
  4266fb:	arpl   WORD PTR [edi+0x3799690b],bx
  426701:	sti    
  426702:	cmp    ebx,DWORD PTR [edi]
  426704:	cmp    eax,0xcacb4312
  426709:	or     eax,0x659195cd
  42670e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42670f:	mov    fs,WORD PTR [edi-0xb]
  426712:	repnz clc 
  426714:	jb     0x4266f2
  426716:	cdq    
  426717:	pop    ebp
  426718:	inc    BYTE PTR [edi-0x4dbf59d2]
  42671e:	mov    dh,0x70
  426720:	adc    BYTE PTR [edi-0x41c4ec90],cl
  426726:	aam    0x74
  426728:	dec    edi
  426729:	add    ebx,edi
  42672b:	in     al,0x6a
  42672d:	mov    ch,0x46
  42672f:	or     eax,0x6194bd7a
  426734:	inc    ebx
  426735:	outs   dx,BYTE PTR ds:[esi]
  426736:	(bad)  
  426737:	std    
  426738:	pop    edi
  426739:	adc    al,0xc3
  42673b:	xlat   BYTE PTR ds:[ebx]
  42673c:	inc    edx
  42673d:	mov    ds:0x9e29e2cc,eax
  426742:	cld    
  426743:	mov    dh,0x30
  426745:	in     al,dx
  426746:	scas   eax,DWORD PTR es:[edi]
  426747:	pushf  
  426748:	push   ebp
  426749:	adc    al,0x44
  42674b:	(bad)  
  42674c:	in     eax,dx
  42674d:	cmp    al,0xde
  42674f:	ret    
  426750:	push   edx
  426751:	(bad)  
  426752:	fmul   st(6),st
  426754:	pop    eax
  426755:	mov    esi,0x4aad21c2
  42675a:	call   DWORD PTR [esi-0x66b739a7]
  426760:	dec    esp
  426761:	xor    BYTE PTR [edi+0x5e85153b],ah
  426767:	or     DWORD PTR [ecx+0xcd400fe],esi
  42676d:	iret   
  42676e:	lahf   
  42676f:	ins    BYTE PTR es:[edi],dx
  426770:	(bad)
  426773:	loope  0x42677e
  426775:	mov    bh,0xe9
  426777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426778:	xor    ebx,DWORD PTR [ecx]
  42677a:	popf   
  42677b:	test   al,0xc4
  42677d:	ins    BYTE PTR es:[edi],dx
  42677e:	rcl    BYTE PTR [edx-0x7bf0766c],0xe8
  426785:	jno    0x4267b6
  426787:	mov    edx,0x86f820e2
  42678c:	xor    eax,0xe0f1200f
  426791:	push   ebx
  426792:	xor    BYTE PTR [edi+0x3ece0387],0xc9
  426799:	or     esp,DWORD PTR ds:0xb478e277
  42679f:	sbb    dl,BYTE PTR [edi+eiz*1+0x7f7c7c34]
  4267a6:	std    
  4267a7:	daa    
  4267a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267a9:	xchg   ebp,eax
  4267aa:	pop    ebx
  4267ab:	bound  esp,QWORD PTR [edx]
  4267ad:	dec    esi
  4267ae:	scas   al,BYTE PTR es:[edi]
  4267af:	or     eax,0x5de213da
  4267b4:	addr16 out 0xef,al
  4267b7:	mov    al,ds:0xa3ef8445
  4267bc:	inc    esp
  4267bd:	and    eax,0x20e63538
  4267c2:	outs   dx,BYTE PTR ds:[esi]
  4267c3:	or     bh,al
  4267c5:	jo     0x4267c9
  4267c7:	cwde   
  4267c8:	cmp    bl,bh
  4267ca:	stos   BYTE PTR es:[edi],al
  4267cb:	sar    DWORD PTR ss:[esi-0x7441106b],0xab
  4267d3:	jl     0x4267c5
  4267d5:	jmp    0x1a53:0x75c75943
  4267dc:	jae    0x426832
  4267de:	ss xchg edi,eax
  4267e0:	std    
  4267e1:	mov    ch,bh
  4267e3:	or     al,0xef
  4267e5:	sar    eax,cl
  4267e7:	mov    edx,0x9b78a5d4
  4267ec:	out    0x34,al
  4267ee:	int3   
  4267ef:	fadd   QWORD PTR [ecx+0x61fca6f0]
  4267f5:	inc    ecx
  4267f6:	out    dx,al
  4267f7:	adc    eax,0x5d9661b5
  4267fc:	out    0xdc,al
  4267fe:	fwait
  4267ff:	or     ecx,DWORD PTR [ecx+0x27]
  426802:	jge    0x426788
  426804:	lock mov ds:0x1fa5250c,eax
  42680a:	sbb    eax,0x900e9702
  42680f:	rcl    BYTE PTR [esi+0x15a8a27],0x3a
  426816:	bound  ebx,QWORD PTR [edx]
  426818:	jns    0x4267b4
  42681a:	xchg   edx,eax
  42681b:	into   
  42681c:	xchg   bl,ah
  42681e:	sub    edx,DWORD PTR [edx-0x5b]
  426821:	mov    dl,0x33
  426823:	out    dx,eax
  426824:	ds ss xchg ecx,eax
  426827:	lods   eax,DWORD PTR ds:[esi]
  426829:	jp     0x426822
  42682b:	xchg   ebp,eax
  42682c:	div    BYTE PTR [eax]
  42682e:	je     0x426826
  426830:	nop
  426831:	lds    edx,FWORD PTR [esi-0x2e7b05c9]
  426837:	jb     0x4267cb
  426839:	and    al,BYTE PTR [ebx+0x2a]
  42683c:	dec    edx
  42683d:	dec    ecx
  42683e:	into   
  42683f:	loop   0x4267f3
  426841:	int3   
  426842:	pop    edi
  426843:	lahf   
  426844:	(bad)  
  426845:	inc    ecx
  426846:	test   cl,dh
  426848:	dec    eax
  426849:	data16 test al,0x3e
  42684c:	in     al,0xc5
  42684e:	test   DWORD PTR [esi],edi
  426850:	inc    ecx
  426851:	dec    ebp
  426852:	inc    eax
  426853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426854:	add    edx,esp
  426856:	sar    BYTE PTR [esp+edx*4],0xcd
  42685a:	inc    ebp
  42685b:	int    0x4f
  42685d:	jl     0x4268de
  42685f:	frstor [esi+0x2a166088]
  426865:	imul   esi,DWORD PTR [esi],0x4c40c3e6
  42686b:	mov    esp,DWORD PTR [esi]
  42686d:	retf   0xe6c6
  426870:	adc    eax,0x4536d9
	...
  426881:	ror    esi,0xf
  426884:	ror    BYTE PTR [edi],cl
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	arpl   WORD PTR [edi],sp
  42688f:	bound  edx,QWORD PTR ds:0x1decc
  426895:	stos   DWORD PTR es:[edi],eax
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    dl,ah
  42689a:	int3   
  42689b:	icebp  
  42689c:	les    ecx,FWORD PTR [esi+0x55]
  42689f:	xor    eax,0x88d9d8f8
  4268a4:	ins    BYTE PTR es:[edi],dx
  4268a5:	fisttp QWORD PTR [ebx+0x27]
  4268a8:	mov    ds:0x490e757,eax
  4268ad:	lods   eax,DWORD PTR ds:[esi]
  4268ae:	pop    eax
  4268af:	cmp    eax,ecx
  4268b1:	je     0x426860
  4268b3:	dec    ebx
  4268b4:	pop    esi
  4268b5:	repz fistp WORD PTR [edx-0x12]
  4268b9:	call   0xdbd1:0xfc2ee37a
  4268c0:	or     dl,BYTE PTR ds:0x7e5fe51d
  4268c6:	cmp    BYTE PTR [ebp+0x38],cl
  4268c9:	push   ds
  4268ca:	add    ch,BYTE PTR [eax+0x1e]
  4268cd:	ds or  al,0x5a
  4268d0:	in     eax,0xd9
  4268d2:	mov    gs,eax
  4268d4:	push   0x3d
  4268d6:	push   ds
  4268d7:	cld    
  4268d8:	pop    eax
  4268d9:	pop    ecx
  4268da:	mov    esp,0x66e67a81
  4268df:	mov    esp,esi
  4268e1:	cmp    dl,dh
  4268e3:	fwait
  4268e4:	push   esi
  4268e5:	push   cs
  4268e6:	push   eax
  4268e7:	mov    bl,0x24
  4268e9:	add    ah,bh
  4268eb:	sub    ebx,DWORD PTR [ecx-0x31]
  4268ee:	cmc    
  4268ef:	out    dx,al
  4268f0:	xlat   BYTE PTR ds:[ebx]
  4268f1:	or     eax,DWORD PTR [edi+ecx*1+0x5d]
  4268f5:	jecxz  0x426966
  4268f7:	imul   ebx,DWORD PTR [ecx],0x372bb3a0
  4268fd:	sti    
  4268fe:	mov    al,0x9a
  426900:	shl    DWORD PTR [ecx+0x32],cl
  426903:	call   0x3086:0x4f1fc640
  42690a:	jle    0x4268b4
  42690c:	mov    edi,0x499c17e4
  426911:	adc    ch,ah
  426913:	repz push esp
  426915:	cmp    DWORD PTR [edx+0xd65cad2],eax
  42691b:	in     eax,0xd4
  42691d:	lods   eax,DWORD PTR ds:[esi]
  42691e:	out    0x97,al
  426920:	jb     0x426984
  426922:	in     eax,dx
  426923:	xchg   ebx,eax
  426924:	cmp    BYTE PTR [ecx+ecx*8],0x4c
  426928:	pop    edx
  426929:	mov    eax,ds:0x7a28ed46
  42692e:	push   esi
  42692f:	mov    edi,0xcea77fcb
  426934:	test   eax,esp
  426936:	dec    esp
  426937:	xchg   ebp,eax
  426938:	add    edx,DWORD PTR [ebx+0x777d3c74]
  42693e:	nop
  42693f:	jno    0x4269ba
  426941:	push   edi
  426942:	pop    esi
  426943:	jb     0x42697a
  426945:	js     0x4268d3
  426947:	test   BYTE PTR [eax],bh
  426949:	jo     0x4269a8
  42694b:	into   
  42694c:	outs   dx,DWORD PTR ds:[esi]
  42694d:	cmp    dl,BYTE PTR ds:[edi-0x5]
  426951:	or     DWORD PTR [ecx-0x1c],ecx
  426954:	dec    eax
  426955:	xlat   BYTE PTR ds:[ebx]
  426956:	nop
  426957:	xlat   BYTE PTR ds:[ebx]
  426958:	xor    DWORD PTR [ebp-0x2b93bbb],edi
  42695e:	sub    ebx,DWORD PTR [edi+eiz*1-0x4]
  426962:	addr16 retf 0x4a90
  426966:	shl    DWORD PTR [ebp+0x7ed12aee],cl
  42696c:	pop    ebp
  42696d:	xchg   esi,eax
  42696e:	mov    al,BYTE PTR [ebx+eiz*1-0x52]
  426972:	mov    BYTE PTR [esi+edi*2-0x77834ba2],bl
  426979:	mul    BYTE PTR [ecx]
  42697b:	cwde   
  42697c:	dec    BYTE PTR [edx-0xb]
  42697f:	xor    ch,BYTE PTR [edx+0x42]
  426982:	pop    es
  426983:	xchg   ebx,ebx
  426985:	add    eax,0x4a23f770
  42698a:	lods   eax,DWORD PTR ds:[esi]
  42698b:	test   al,0x55
  42698d:	adc    al,0xb2
  42698f:	jecxz  0x426946
  426991:	(bad)  
  426992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426993:	xlat   BYTE PTR ds:[ebx]
  426994:	retf   
  426995:	mov    cl,0xe4
  426997:	arpl   di,bp
  426999:	scas   al,BYTE PTR es:[edi]
  42699a:	push   edi
  42699b:	jle    0x426a03
  42699d:	ja     0x426976
  42699f:	std    
  4269a0:	sbb    cl,BYTE PTR gs:[edx]
  4269a3:	inc    esp
  4269a4:	mov    ds:0x59753c46,eax
  4269a9:	pop    esi
  4269aa:	fistp  DWORD PTR [esi+0xd15262c]
  4269b0:	retf   
  4269b1:	div    BYTE PTR es:[ebx-0x18]
  4269b5:	or     DWORD PTR [edi+0x2b71fde0],ebx
  4269bb:	test   BYTE PTR [edx],0x4
  4269be:	ins    DWORD PTR es:[edi],dx
  4269bf:	mov    ah,BYTE PTR ds:0x6d46ea51
  4269c5:	add    edi,edx
  4269c7:	sar    BYTE PTR [edx-0x75],1
  4269ca:	fistp  WORD PTR ds:0xf4890104
  4269d0:	ins    BYTE PTR es:[edi],dx
  4269d1:	repnz test BYTE PTR [eax-0x19],dl
  4269d5:	pop    ebx
  4269d6:	into   
  4269d7:	inc    ecx
  4269d8:	xor    dl,ch
  4269da:	sbb    dh,BYTE PTR [ebx]
  4269dc:	xor    cl,bl
  4269de:	cs scas al,BYTE PTR es:[edi]
  4269e0:	xchg   ecx,eax
  4269e1:	aam    0x37
  4269e3:	mov    ah,0x83
  4269e5:	loopne 0x426a0e
  4269e7:	mov    bl,0x0
  4269e9:	sbb    eax,0x27f2a803
  4269ee:	stc    
  4269ef:	mov    ebp,0xb8c297be
  4269f4:	mov    BYTE PTR [eax-0x67d1ad2f],dl
  4269fa:	imul   bh
  4269fc:	and    DWORD PTR [ecx],0xecd5aeca
  426a02:	sbb    al,BYTE PTR [eax-0x72]
  426a05:	aas    
  426a06:	xchg   edx,eax
  426a07:	aaa    
  426a08:	test   al,0x58
  426a0a:	dec    edx
  426a0b:	es pop ebp
  426a0d:	lock ins DWORD PTR es:[edi],dx
  426a0f:	loop   0x426a4a
  426a11:	inc    esi
  426a12:	pop    edi
  426a13:	fidivr DWORD PTR [ebp+ecx*1+0x2e]
  426a17:	cld    
  426a18:	data16 jg 0x426a4c
  426a1b:	std    
  426a1c:	cmp    DWORD PTR [ebx],esi
  426a1e:	inc    edi
  426a1f:	push   0x4
  426a21:	stc    
  426a22:	lock adc eax,0x5d0f3c6c
  426a28:	imul   esp,DWORD PTR [edx+0x75d0f549],0x21
  426a2f:	inc    DWORD PTR [esi+0x54befa62]
  426a35:	pop    ecx
  426a37:	inc    eax
  426a38:	cmp    al,0x7a
  426a3a:	lock pop eax
  426a3c:	in     eax,0x93
  426a3e:	(bad)  
  426a3f:	ja     0x426a5d
  426a41:	std    
  426a42:	(bad)  
  426a45:	jo     0x426a8a
  426a47:	push   ebp
  426a48:	xor    eax,edx
  426a4a:	popf   
  426a4b:	sub    eax,DWORD PTR [eax-0x3086ba9b]
  426a51:	sub    cl,BYTE PTR ds:0xc05f029b
  426a57:	xchg   edi,eax
  426a58:	(bad)  
  426a59:	xchg   ebp,eax
  426a5a:	test   DWORD PTR [esi-0x53],ebx
  426a5d:	mov    al,ds:0xde2cf734
  426a62:	sbb    BYTE PTR [ebp-0x6da2b6fb],ah
  426a68:	out    0xc9,eax
  426a6a:	ins    DWORD PTR es:[edi],dx
  426a6b:	jmp    0xb0c7:0x61f8d438
  426a72:	ror    BYTE PTR [ecx-0x33],cl
  426a75:	fisub  DWORD PTR [ebp-0x3929d47d]
  426a7b:	ret    0xa21a
  426a7e:	call   0x97f0:0x6b8ae534
  426a85:	(bad)  
  426a86:	enter  0xb125,0x39
  426a8a:	push   ds
  426a8b:	mov    esp,0x8554b52e
  426a90:	cmc    
  426a91:	repnz stos BYTE PTR es:[edi],al
  426a93:	sub    BYTE PTR [bx+si+0x39],dl
  426a97:	xchg   edx,eax
  426a98:	jle    0x426a3b
  426a9a:	aad    0xad
  426a9c:	fldenv [bp+si+0x61]
  426aa0:	or     eax,0xffffff95
  426aa3:	lea    ecx,[eax+0x39]
  426aa6:	or     al,cl
  426aa8:	addr16 push esi
  426aaa:	jno    0x426b2a
  426aac:	arpl   WORD PTR ds:0x99ab2cdc,ax
  426ab2:	das    
  426ab3:	int3   
  426ab4:	scas   al,BYTE PTR es:[edi]
  426ab5:	and    al,0x99
  426ab7:	or     BYTE PTR [ecx-0x74de4ec8],dh
  426abd:	imul   ebx,DWORD PTR [ebp+ecx*2-0x49],0x3c
  426ac2:	aad    0x96
  426ac4:	mov    dh,0x71
  426ac6:	add    BYTE PTR [ebp+0x28],0x62
  426aca:	and    BYTE PTR [edi-0x655e01d3],dh
  426ad0:	inc    esp
  426ad1:	sub    bh,cl
  426ad3:	jno    0x426b46
  426ad5:	add    BYTE PTR [edx+edx*4+0x18],ch
  426ad9:	shl    esi,1
  426adb:	out    dx,al
  426adc:	jmp    0x49e99f76
  426ae1:	bound  ebp,QWORD PTR [edx+0x37]
  426ae4:	nop
  426ae5:	xchg   esp,eax
  426ae6:	pop    esi
  426ae7:	div    DWORD PTR [eax]
  426ae9:	sbb    dh,0xa
  426aec:	fstp   TBYTE PTR [edi+ebx*8]
  426aef:	jns    0x426b37
  426af1:	lods   eax,DWORD PTR ds:[esi]
  426af2:	test   bh,dh
  426af4:	fild   WORD PTR [edi+0x45]
  426af7:	lods   al,BYTE PTR ds:[esi]
  426af8:	ds jge 0x426a9e
  426afb:	or     edx,edx
  426afd:	arpl   WORD PTR [ecx+0x1d],ax
  426b00:	sbb    al,0x34
  426b02:	push   0x676ec67b
  426b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b08:	sub    BYTE PTR [ecx+edx*8-0x690fe257],0x69
  426b10:	inc    ebp
  426b11:	mov    ah,0x27
  426b13:	xor    esp,DWORD PTR [edx+edx*8]
  426b16:	sub    BYTE PTR [edx+0x4ba84376],bl
  426b1c:	jnp    0x426af5
  426b1e:	push   edx
  426b1f:	xor    edi,DWORD PTR [edi]
  426b21:	jbe    0x426b3f
  426b23:	pushf  
  426b24:	cli    
  426b25:	mov    WORD PTR [eax-0x19754223],ds
  426b2b:	sbb    al,0x59
  426b2d:	mov    al,ds:0x7c1e91f8
  426b32:	jnp    0x426b55
  426b34:	pusha  
  426b35:	cmp    eax,0x203472bf
  426b3a:	dec    edi
  426b3b:	sub    al,0x4c
  426b3d:	and    al,0x0
  426b3f:	mov    ds:0x1bd04bdd,eax
  426b44:	mov    al,0xbf
  426b46:	inc    ebx
  426b47:	daa    
  426b48:	adc    al,BYTE PTR [ebp+0x4ebb281f]
  426b4e:	or     eax,0x845d132f
  426b53:	mov    ebx,0x619d92c1
  426b58:	xor    BYTE PTR [edi+0x6e],dh
  426b5b:	ins    DWORD PTR es:[edi],dx
  426b5c:	sub    edi,0xffffffa3
  426b5f:	and    eax,0xd5e5a192
  426b64:	test   BYTE PTR [eax-0x10ae84a1],bl
  426b6a:	(bad)  
  426b6c:	or     dh,bh
  426b6e:	not    DWORD PTR [edx+0x32]
  426b71:	leave  
  426b72:	and    BYTE PTR ds:0x502edd65,ah
  426b78:	mov    bl,0x3c
  426b7a:	cmp    dh,bl
  426b7c:	xor    BYTE PTR [edi-0x57],dh
  426b7f:	retf   
  426b80:	sub    al,0x55
  426b82:	shl    BYTE PTR [esi-0x34],cl
  426b85:	sbb    eax,0xc453042
  426b8a:	pop    ss
  426b8b:	out    0xd5,eax
  426b8d:	inc    esp
  426b8e:	cwde   
  426b8f:	test   al,0x39
  426b91:	sar    BYTE PTR [eax+0x4e],0xcd
  426b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b96:	fdivr  st,st(1)
  426b98:	mov    ds:0x4b8bda0a,eax
  426b9d:	push   eax
  426b9e:	pop    edi
  426b9f:	mov    cl,0xa5
  426ba1:	push   esp
  426ba2:	pushf  
  426ba3:	xchg   ecx,eax
  426ba4:	jbe    0x426b39
  426ba6:	mov    ds:0x42bae550,al
  426bab:	iret   
  426bac:	xchg   ecx,eax
  426bad:	pop    ebx
  426bae:	pop    edx
  426baf:	pop    es
  426bb0:	push   0x43
  426bb2:	scas   eax,DWORD PTR es:[edi]
  426bb3:	cmp    esp,DWORD PTR [ebx-0x7b1bce5a]
  426bb9:	mov    ebx,0x405e7e3f
  426bbe:	xor    eax,0xfa894c04
  426bc3:	lods   al,BYTE PTR fs:[esi]
  426bc5:	push   ecx
  426bc6:	push   esp
  426bc7:	adc    BYTE PTR [edx],bh
  426bc9:	dec    ebp
  426bca:	jns    0x426b74
  426bcc:	jnp    0x426bc5
  426bce:	xor    eax,0x1a71b7d8
  426bd3:	jmp    0x426c19
  426bd5:	std    
  426bd6:	xchg   esi,eax
  426bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bd8:	int3   
  426bd9:	ret    0x784f
  426bdc:	xlat   BYTE PTR ds:[ebx]
  426bdd:	hlt    
  426bde:	sub    BYTE PTR [edi-0x1b51511],ah
  426be4:	push   cs
  426be5:	rcl    DWORD PTR [edx+0x27],cl
  426be8:	popa   
  426be9:	and    al,0xf2
  426beb:	mov    ebp,0x94355a97
  426bf0:	jecxz  0x426c08
  426bf2:	push   es
  426bf3:	and    DWORD PTR [edi+0x26],0x86054931
  426bfa:	lock pusha 
  426bfc:	shr    DWORD PTR [esi-0xc],0x61
  426c00:	dec    ebp
  426c01:	jbe    0x426c4c
  426c03:	mov    eax,0xd242c224
  426c08:	xor    ch,BYTE PTR [ecx-0x13028917]
  426c0e:	es (bad) 
  426c10:	and    eax,edi
  426c12:	dec    ebx
  426c13:	(bad)  
  426c14:	jecxz  0x426bdc
  426c16:	sbb    BYTE PTR [esi-0x4c1734fa],cl
  426c1c:	mov    ds:0x89e26d0d,eax
  426c21:	cmp    ebp,DWORD PTR [ebp-0x10b0b1a8]
  426c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c28:	inc    ecx
  426c29:	lahf   
  426c2a:	push   edx
  426c2b:	loop   0x426bf6
  426c2d:	jp     0x426c7a
  426c2f:	sub    al,0x14
  426c31:	pop    ss
  426c32:	in     eax,dx
  426c33:	push   ebx
  426c34:	(bad)  
  426c35:	pop    ebp
  426c36:	aas    
  426c37:	mov    dl,BYTE PTR [ecx+0x778f9b6]
  426c3d:	popa   
  426c3e:	mov    DWORD PTR [ebp+0x66366da0],ecx
	...
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ebp,edi
  426c5e:	push   ebx
  426c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c60:	enter  0xe277,0x1
  426c64:	add    BYTE PTR [ebx-0x7bfffffd],ch
  426c6a:	inc    ebp
  426c6b:	ficomp DWORD PTR ds:0x5d4da407
  426c71:	mov    bh,0xf4
  426c73:	je     0x426c48
  426c75:	out    0xdc,al
  426c77:	movaps XMMWORD PTR ds:0xc0cbf089,xmm7
  426c7e:	dec    ecx
  426c7f:	cmp    dh,al
  426c81:	jp     0x426ce6
  426c83:	test   al,0x5c
  426c85:	imul   DWORD PTR [ebx-0x54e00175]
  426c8b:	and    DWORD PTR [ebp+0x61],edi
  426c8e:	(bad)  
  426c8f:	outs   dx,BYTE PTR ds:[esi]
  426c90:	pop    ebx
  426c91:	jnp    0x426c3c
  426c93:	ret    0x3213
  426c96:	xor    eax,ebx
  426c98:	data16 stc 
  426c9a:	pop    ebp
  426c9b:	pop    ebx
  426c9c:	adc    DWORD PTR [edx+0x19fe2c45],edi
  426ca2:	mov    cl,0x7
  426ca4:	xlat   BYTE PTR ds:[ebx]
  426ca5:	cli    
  426ca6:	rcr    WORD PTR fs:[eax-0x32d8ea2e],cl
  426cae:	pop    esi
  426caf:	repnz sub ebx,0x69
  426cb3:	enter  0x274b,0x62
  426cb7:	ins    BYTE PTR es:[edi],dx
  426cb8:	cwde   
  426cb9:	daa    
  426cba:	push   edi
  426cbb:	pusha  
  426cbc:	xchg   edi,eax
  426cbd:	pop    ebx
  426cbe:	xchg   edx,eax
  426cbf:	(bad)  
  426cc0:	pand   mm4,QWORD PTR cs:[edx+eax*1]
  426cc5:	fptan  
  426cc7:	(bad)  
  426cc8:	fwait
  426cc9:	les    ebp,FWORD PTR [ebx]
  426ccb:	mov    bh,BYTE PTR [eax]
  426ccd:	out    0x36,al
  426ccf:	popf   
  426cd0:	jno    0x426cc9
  426cd2:	cmp    ch,bh
  426cd4:	scas   eax,DWORD PTR es:[edi]
  426cd5:	pop    es
  426cd6:	sbb    BYTE PTR [ebp-0x4a],0x7a
  426cda:	data16 jns 0x426d07
  426cdd:	les    esp,FWORD PTR [ecx]
  426cdf:	jmp    0x2b734c53
  426ce4:	test   eax,0xf96cf3f0
  426ce9:	push   esi
  426cea:	shl    BYTE PTR [edi],cl
  426cec:	jne    0x426cd5
  426cee:	int    0xcd
  426cf0:	scas   eax,DWORD PTR es:[edi]
  426cf1:	cmp    al,0xe0
  426cf3:	xor    BYTE PTR [edi-0x1b],cl
  426cf6:	inc    ebx
  426cf7:	shl    BYTE PTR [esi-0xb],cl
  426cfa:	sar    BYTE PTR [eax+ebp*4],cl
  426cfd:	cmp    bl,BYTE PTR ds:0x5ef93386
  426d03:	xchg   esp,eax
  426d04:	or     BYTE PTR [ebx],dl
  426d06:	push   es
  426d07:	jecxz  0x426d34
  426d09:	imul   edi,DWORD PTR ds:0xdc2c0c96,0x51
  426d10:	jmp    0x85ed656e
  426d15:	cwde   
  426d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d17:	pop    es
  426d18:	pusha  
  426d19:	cmp    al,0x51
  426d1b:	sub    BYTE PTR [ebx],al
  426d1d:	push   0xd713957e
  426d22:	mov    dh,dl
  426d24:	mov    WORD PTR [ebx],cs
  426d26:	jg     0x426d37
  426d28:	ss hlt 
  426d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d2b:	lea    esi,[edi+0x14]
  426d2e:	mov    ecx,0x1a42f33c
  426d33:	pop    esp
  426d34:	pop    edx
  426d35:	fimul  DWORD PTR gs:[ebp-0x2cf226cc]
  426d3c:	ror    DWORD PTR [esi],0xc
  426d3f:	not    DWORD PTR [eax-0x2a]
  426d42:	and    al,BYTE PTR ds:[edi]
  426d45:	hlt    
  426d46:	fcomip st,st(5)
  426d48:	sahf   
  426d49:	cld    
  426d4a:	jge    0x426cdd
  426d4c:	mov    ds:0x5aa081b6,eax
  426d51:	fs inc ebp
  426d53:	cwde   
  426d54:	sar    DWORD PTR [ebx+0x2e],0xb8
  426d58:	data16 mov al,ds:0x1959259b
  426d5e:	mov    dl,0x9b
  426d60:	and    eax,0x98fa8e99
  426d65:	dec    esi
  426d66:	clc    
  426d67:	lea    esp,[esp+ecx*1+0x290b01fa]
  426d6e:	jne    0x426dc5
  426d70:	fwait
  426d71:	sbb    eax,0xa0dc354a
  426d76:	jb     0x426d7d
  426d78:	mov    ch,0x2a
  426d7a:	inc    ecx
  426d7b:	push   edx
  426d7c:	cmp    eax,0x1e87df80
  426d81:	add    BYTE PTR [eax+0x720848f8],ch
  426d87:	fsubr  QWORD PTR [edi+0x67]
  426d8a:	les    edx,FWORD PTR [ebx-0x9]
  426d8d:	jo     0x426da9
  426d8f:	scas   eax,DWORD PTR es:[edi]
  426d90:	(bad)  
  426d91:	jp     0x426d28
  426d93:	dec    ecx
  426d94:	cmovp  edi,DWORD PTR [esp+esi*2]
  426d98:	aam    0x4f
  426d9a:	push   edi
  426d9b:	aas    
  426d9c:	(bad)
  426d9f:	dec    esi
  426da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426da1:	push   0x35
  426da3:	cmp    BYTE PTR [esi-0x79],bl
  426da6:	dec    ebx
  426da7:	shr    DWORD PTR [ecx],1
  426da9:	ss scas al,BYTE PTR es:[edi]
  426dab:	call   DWORD PTR [edx+0x23]
  426dae:	popa   
  426daf:	out    0xa7,eax
  426db1:	adc    eax,eax
  426db3:	push   ebp
  426db4:	or     ch,bl
  426db6:	sahf   
  426db7:	mov    cs,WORD PTR [edx+0x39ec5641]
  426dbd:	sub    ch,BYTE PTR [eax+0x62c008ac]
  426dc3:	int3   
  426dc4:	mov    eax,0x1745be11
  426dc9:	and    edx,DWORD PTR [ebx+0x73444d7d]
  426dcf:	or     BYTE PTR [ebx+eiz*4],ch
  426dd2:	loopne 0x426d5d
  426dd4:	jecxz  0x426e2f
  426dd6:	loop   0x426dbc
  426dd8:	xchg   BYTE PTR [esp+eax*8+0x1d],ch
  426ddc:	xor    dl,ah
  426dde:	clc    
  426ddf:	sbb    ch,BYTE PTR [edx+0x7274247f]
  426de5:	jp     0x426dc0
  426de7:	mov    ebp,0xe467c817
  426dec:	cmp    al,0x27
  426dee:	cs inc edx
  426df0:	xchg   ebx,eax
  426df1:	pop    ebp
  426df2:	je     0x426d7b
  426df4:	jmp    0x886:0x5f5d84f8
  426dfb:	jge    0x426e54
  426dfd:	sbb    eax,0xf33a44c0
  426e02:	jg     0x426e25
  426e04:	or     eax,0xcaa918c3
  426e09:	shl    BYTE PTR ds:0x8913d37d,cl
  426e0f:	fsqrt  
  426e11:	xor    DWORD PTR gs:[eax-0x7e],0x1b36a635
  426e19:	pop    edx
  426e1a:	enter  0x4aca,0xf8
  426e1e:	cmp    dl,al
  426e20:	stos   DWORD PTR es:[edi],eax
  426e21:	sbb    cl,BYTE PTR [esi-0x3e]
  426e24:	ins    DWORD PTR es:[edi],dx
  426e25:	ret    0x320
  426e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e29:	xchg   ebp,eax
  426e2a:	xchg   ebp,eax
  426e2b:	inc    eax
  426e2c:	cmp    al,0x26
  426e2e:	push   edx
  426e2f:	xor    BYTE PTR [edx],dh
  426e31:	cmp    BYTE PTR [ecx+0x48f94966],dh
  426e37:	imul   ebx,DWORD PTR [ebx+edx*8+0x40],0xf5e3593e
  426e3f:	fwait
  426e40:	push   ebp
  426e41:	mov    BYTE PTR cs:[esi-0x2b094c52],ch
  426e48:	inc    esp
  426e49:	nop
  426e4a:	mov    ds:0x1eb28358,eax
  426e4f:	pop    esi
  426e50:	jo     0x426ec4
  426e52:	add    edi,DWORD PTR [ebp-0x13221c27]
  426e58:	cdq    
  426e59:	jnp    0x426e19
  426e5b:	mov    dl,0xc8
  426e5d:	out    0xc1,eax
  426e5f:	scas   al,BYTE PTR es:[edi]
  426e60:	inc    ecx
  426e61:	inc    eax
  426e62:	lea    ebx,[ebp-0x641ba60c]
  426e68:	pushf  
  426e69:	cdq    
  426e6a:	jno    0x426e52
  426e6c:	fld    TBYTE PTR [ebp+0x1c9f2ba0]
  426e72:	clc    
  426e73:	mul    DWORD PTR [edx+eiz*8]
  426e76:	ret    
  426e77:	fwait
  426e78:	not    BYTE PTR [ecx]
  426e7a:	je     0x426e88
  426e7c:	adc    BYTE PTR [eax],0xf
  426e7f:	cdq    
  426e80:	jg     0x426e75
  426e82:	(bad)  
  426e84:	mov    eax,ds:0xd34b8848
  426e89:	inc    di
  426e8b:	inc    ebx
  426e8c:	add    al,0xea
  426e8e:	mov    al,0x9e
  426e90:	jge    0x426e43
  426e92:	js     0x426e65
  426e94:	sub    al,0x61
  426e96:	mov    edx,0x1e8403e9
  426e9b:	jl     0x426e9a
  426e9d:	fistp  WORD PTR [esp+ebp*8-0xc006b41]
  426ea4:	clc    
  426ea5:	aaa    
  426ea6:	outs   dx,BYTE PTR ds:[esi]
  426ea7:	test   dl,dh
  426ea9:	shl    DWORD PTR [eax-0x61],cl
  426eac:	add    esp,DWORD PTR [ebp+0x459c494b]
  426eb2:	pop    edx
  426eb3:	dec    esi
  426eb4:	mov    esp,0x91b9e8ae
  426eb9:	inc    eax
  426eba:	sub    BYTE PTR [ebx],bl
  426ebc:	xchg   edx,eax
  426ebd:	retf   
  426ebe:	std    
  426ebf:	popf   
  426ec0:	pop    esi
  426ec1:	push   esi
  426ec2:	cs or  eax,esp
  426ec5:	xchg   DWORD PTR [edx-0x40],ecx
  426ec8:	pop    ds
  426ec9:	idiv   DWORD PTR [esp+esi*4-0x64]
  426ecd:	mov    ah,al
  426ecf:	mov    al,fs:0x25cb7f92
  426ed5:	pop    edx
  426ed6:	aaa    
  426ed7:	iret   
  426ed8:	ja     0x426eb9
  426eda:	das    
  426edb:	dec    esp
  426edc:	lea    esi,[ebp-0x33]
  426edf:	mov    ds:0xa6c00ca9,eax
  426ee4:	or     al,BYTE PTR [ebp+0x25bd3fb1]
  426eea:	cld    
  426eeb:	cmp    eax,DWORD PTR [esi+0x0]
  426eee:	add    eax,0x63ff4b8d
  426ef3:	adc    al,0xc
  426ef5:	ds popa 
  426ef7:	jp     0x426ee0
  426ef9:	mov    BYTE PTR [edi-0x4ad3af97],bl
  426eff:	sub    eax,0x122d273d
  426f04:	jmp    0x426f6a
  426f06:	xchg   esp,eax
  426f07:	push   ds
  426f08:	outs   dx,DWORD PTR ds:[esi]
  426f09:	mov    ecx,0x5df433fd
  426f0e:	inc    ecx
  426f0f:	mov    ecx,0xe3d3d22b
  426f14:	inc    edx
  426f15:	sub    DWORD PTR [edx],0x64dd4096
  426f1b:	jecxz  0x426f1c
  426f1d:	pop    edi
  426f1e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f20:	imul   edx,DWORD PTR [ecx],0xffffff98
  426f23:	and    eax,0xcf73548d
  426f28:	aas    
  426f29:	in     al,0x19
  426f2b:	loopne 0x426f62
  426f2d:	pop    esp
  426f2e:	jo     0x426ec4
  426f30:	inc    edi
  426f31:	add    BYTE PTR [edx],al
  426f33:	(bad)  
  426f35:	sub    edi,esp
  426f37:	ss mov bl,0xf3
  426f3a:	dec    eax
  426f3b:	ds sbb al,0xf9
  426f3f:	mov    edi,0xfaa30ecf
  426f44:	arpl   WORD PTR [esi+0x25],dx
  426f47:	leave  
  426f48:	jmp    0x426ee5
  426f4a:	jge    0x426f5f
  426f4c:	dec    ebp
  426f4d:	ja     0x426f68
  426f4f:	push   edi
  426f50:	mov    ebp,0xc609bac0
  426f55:	loopne 0x426f46
  426f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f58:	fcomp  DWORD PTR [edx+0x66]
  426f5b:	daa    
  426f5c:	es pop ss
  426f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5f:	ja     0x426f0a
  426f61:	es sub al,0xbb
  426f64:	(bad)  
  426f65:	shl    DWORD PTR [ecx-0x7da263e2],cl
  426f6b:	dec    edi
  426f6c:	out    0x6f,eax
  426f6e:	sbb    BYTE PTR [ebx-0x2209c57d],cl
  426f74:	mov    esp,DWORD PTR [esi-0x43d1eda0]
  426f7a:	sub    dl,ch
  426f7c:	add    eax,ecx
  426f7e:	push   edx
  426f7f:	add    dl,BYTE PTR [esp+0x5c]
  426f83:	adc    BYTE PTR [ebx+esi*8+0x499a7b8e],0xee
  426f8b:	push   edx
  426f8c:	sub    DWORD PTR [ebp+0x6717e0cd],0x8
  426f93:	je     0x426fe6
  426f95:	bound  eax,QWORD PTR [ecx+0x7734ef96]
  426f9b:	mov    cl,0x47
  426f9d:	inc    eax
  426f9e:	inc    edi
  426f9f:	push   ebx
  426fa0:	int    0x67
  426fa2:	stos   DWORD PTR es:[edi],eax
  426fa3:	rol    ah,1
  426fa5:	mov    dl,bh
  426fa7:	xchg   edi,eax
  426fa8:	xchg   BYTE PTR [ebx+0x3f],dh
  426fab:	jge    0x426f41
  426fad:	adc    eax,0xa8ca15d4
  426fb2:	add    eax,0xeb360991
  426fb7:	ret    0x8af3
  426fba:	dec    ebp
  426fbb:	cmp    DWORD PTR [eax-0x4b],esp
  426fbe:	ret    0x15ae
  426fc1:	jg     0x42703f
  426fc3:	or     al,BYTE PTR [ecx-0x53]
  426fc6:	push   ebx
  426fc7:	dec    edx
  426fc8:	in     al,dx
  426fc9:	popa   
  426fca:	dec    edx
  426fcb:	dec    ebp
  426fcc:	fwait
  426fcd:	cmp    bh,BYTE PTR ds:0xb9f55458
  426fd3:	xor    DWORD PTR [esi],ecx
  426fd5:	repz rcl DWORD PTR [ecx-0x10],1
  426fd9:	dec    esi
  426fda:	bnd ret 
  426fdc:	(bad)  
  426fdd:	sbb    eax,0x3197c2fc
  426fe2:	(bad)  
  426fe3:	aas    
  426fe4:	xchg   edx,eax
  426fe5:	jmp    0x48800239
  426fea:	hlt    
  426feb:	jmp    0xc2aba86f
  426ff0:	je     0x42701b
  426ff2:	push   cs
  426ff3:	cmp    ebx,DWORD PTR [edx+0x2152d71e]
  426ff9:	jp     0x426fd3
  426ffb:	cmp    eax,0x1d0282ac
  427000:	mov    esi,0x8fc3df60
  427005:	jl     0x426fa3
  427007:	sub    esi,ecx
  427009:	cmp    BYTE PTR [edx-0x544a2526],bl
  42700f:	dec    esp
  427010:	mov    bl,0xe
  427012:	fnstenv [edi]
	...
  427020:	add    BYTE PTR [ebx],bl
  427022:	inc    ebp
  427023:	gs ret 
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	ror    BYTE PTR [ebx-0x47],cl
  42702f:	fwait
  427030:	pop    ds
  427031:	and    ah,dh
  427033:	add    DWORD PTR [eax],eax
  427035:	stos   DWORD PTR es:[edi],eax
  427036:	add    eax,DWORD PTR [eax]
  427038:	add    bh,dl
  42703a:	iret   
  42703b:	and    eax,0xa5b6ef6
  427040:	and    eax,0x3d302216
  427045:	mov    eax,ds:0xa45124b9
  42704a:	xchg   ebp,eax
  42704b:	neg    esp
  42704d:	mov    esi,0xd4cc6cc6
  427052:	jmp    0x2dc9c7b9
  427057:	xchg   edi,eax
  427058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427059:	cmp    eax,edi
  42705b:	mov    ds:0xe09c35c3,al
  427060:	mov    ebx,0xf5bb4491
  427065:	std    
  427066:	push   0x8092b7fd
  42706b:	cmp    DWORD PTR [ebx+ecx*4+0x3d],eax
  42706f:	xchg   ecx,eax
  427070:	or     eax,0xcca41179
  427075:	and    esi,DWORD PTR [ebp-0x737541e3]
  42707b:	pop    ds
  42707c:	mov    edi,0x204e93ee
  427081:	or     al,0x22
  427083:	xchg   BYTE PTR [ecx+0x43dc29f5],al
  427089:	jmp    0xc1cb:0xabe10149
  427090:	int    0x1e
  427092:	sti    
  427093:	adc    dh,cl
  427095:	call   0xa960:0x1168d9db
  42709c:	ins    DWORD PTR es:[edi],dx
  42709d:	xor    al,0xff
  42709f:	add    DWORD PTR [ebx+0x50],edx
  4270a2:	mov    edi,0x1f3b8098
  4270a7:	imul   ebx,eax,0x68
  4270aa:	adc    ecx,esp
  4270ac:	fs pop ds
  4270ae:	xor    eax,0x7d154833
  4270b3:	test   DWORD PTR [ebp+edi*4-0x6a],esi
  4270b7:	out    0x5b,al
  4270b9:	call   0xa439:0x3703afed
  4270c0:	ror    ebp,cl
  4270c2:	jmp    0x821c3c82
  4270c7:	stos   BYTE PTR es:[edi],al
  4270c8:	movaps XMMWORD PTR [edx-0x2],xmm5
  4270cc:	lock out dx,eax
  4270ce:	cmc    
  4270cf:	pop    ds
  4270d0:	xor    dl,BYTE PTR [eax+esi*1+0x7]
  4270d4:	mov    ecx,0xd446eab5
  4270d9:	repnz sbb eax,0x3cd8c253
  4270df:	xchg   edi,eax
  4270e0:	jb     0x4270ff
  4270e2:	aad    0x19
  4270e4:	scas   eax,DWORD PTR es:[edi]
  4270e5:	push   ds
  4270e6:	outs   dx,BYTE PTR ds:[esi]
  4270e7:	pop    esi
  4270e8:	ret    
  4270e9:	push   esi
  4270ea:	mov    bl,0xb
  4270ec:	pop    ecx
  4270ed:	retf   0xbca
  4270f0:	int    0x30
  4270f2:	iret   
  4270f3:	sbb    dh,bl
  4270f5:	xchg   esp,eax
  4270f6:	lods   al,BYTE PTR ds:[esi]
  4270f7:	cmp    al,0xef
  4270f9:	in     al,dx
  4270fa:	fstp   st(0)
  4270fc:	mov    ds:0x8a82478e,eax
  427101:	lods   eax,DWORD PTR ds:[esi]
  427102:	data16 fidiv DWORD PTR [edx-0x41]
  427106:	data16 ffreep st(4)
  427109:	out    dx,al
  42710a:	fcmovnu st,st(4)
  42710c:	ret    
  42710d:	cli    
  42710e:	push   ecx
  42710f:	mov    ah,0xc0
  427111:	outs   dx,DWORD PTR ds:[esi]
  427112:	shr    BYTE PTR [esp+edi*8-0x1055a3ae],0x1e
  42711a:	push   0x52d49fa4
  42711f:	add    BYTE PTR [esi+0x7a],0x45
  427123:	(bad)  
  427124:	sub    BYTE PTR [edi+0x39c4c078],bh
  42712a:	jl     0x4270fb
  42712c:	mov    cl,0x16
  42712e:	adc    BYTE PTR [ebp+0x17835dc8],dh
  427134:	mov    cl,0x6c
  427136:	popa   
  427137:	xor    BYTE PTR [ebx+0x130dabda],cl
  42713d:	out    dx,al
  42713e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42713f:	xchg   BYTE PTR [ebx],dh
  427141:	mov    cl,0xfc
  427143:	mov    DWORD PTR [ecx-0x63],ecx
  427146:	shl    DWORD PTR [ebp-0x3a4fe0ec],0x14
  42714d:	stc    
  42714e:	fadd   DWORD PTR ss:[esi]
  427151:	fcmovb st,st(7)
  427153:	iret   
  427154:	rol    BYTE PTR [edi*4-0x5b9d3282],1
  42715b:	cmp    dl,BYTE PTR [eax+0x5148210e]
  427161:	ffree  st(2)
  427163:	push   cs
  427164:	and    DWORD PTR [ecx+0x20],ebx
  427167:	pop    esi
  427168:	xchg   ebp,eax
  427169:	fwait
  42716a:	sub    BYTE PTR [esi+esi*8-0x4bac86aa],dh
  427171:	xchg   edx,eax
  427172:	mov    esp,0x28550d2f
  427177:	in     eax,dx
  427178:	js     0x427157
  42717a:	ins    DWORD PTR es:[edi],dx
  42717b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42717c:	aam    0xa3
  42717e:	mov    bh,0x95
  427180:	sbb    eax,DWORD PTR [ecx-0x7e18e939]
  427186:	sub    al,0x85
  427188:	(bad)  
  427189:	or     bl,BYTE PTR [edi+ebp*2+0x22]
  42718d:	mov    edx,0xbd79cccf
  427192:	or     DWORD PTR [ecx+0x34],edi
  427195:	mov    al,ds:0x11c19e4
  42719a:	and    al,0x52
  42719c:	adc    ah,BYTE PTR [ebp+esi*1-0x31]
  4271a0:	jne    0xd0a0ed37
  4271a6:	jecxz  0x427177
  4271a8:	or     ecx,DWORD PTR [edx+eiz*2-0x48]
  4271ac:	inc    DWORD PTR [eax+0x2b]
  4271af:	popa   
  4271b0:	lds    esi,FWORD PTR ds:0x314a9a98
  4271b6:	dec    ebx
  4271b7:	shr    ch,cl
  4271b9:	cmp    al,0xd4
  4271bb:	xchg   bh,al
  4271bd:	sbb    BYTE PTR [ebx-0x8],0x8d
  4271c1:	cmc    
  4271c2:	rcl    DWORD PTR [ecx+0x1c],0x2d
  4271c6:	aaa    
  4271c7:	sahf   
  4271c8:	push   eax
  4271c9:	lods   eax,DWORD PTR ds:[esi]
  4271ca:	and    BYTE PTR [ebx],ch
  4271cc:	out    0x6d,al
  4271ce:	jb     0x42722b
  4271d0:	jp     0x427178
  4271d2:	clc    
  4271d3:	shl    ch,cl
  4271d5:	scas   al,BYTE PTR es:[edi]
  4271d6:	xor    BYTE PTR [ebp+edi*1-0x76],dl
  4271da:	push   esi
  4271db:	fdiv   QWORD PTR [ebx]
  4271dd:	sbb    BYTE PTR [edx],0x7f
  4271e0:	mov    ebx,0x3485758f
  4271e5:	fldcw  WORD PTR [edi]
  4271e7:	xor    DWORD PTR [edx-0x4a107bc0],ecx
  4271ed:	out    0x94,eax
  4271ef:	scas   al,BYTE PTR es:[edi]
  4271f0:	lock mov bh,0x30
  4271f3:	std    
  4271f4:	das    
  4271f5:	push   edx
  4271f6:	mov    ebp,0x19792372
  4271fb:	and    eax,0x4ea3c301
  427200:	mov    edi,0xaea1b76
  427205:	out    dx,al
  427206:	push   cs
  427207:	push   ebp
  427208:	test   al,0xf7
  42720a:	test   BYTE PTR [ecx+eax*8-0x1e38de9e],dh
  427211:	es inc edi
  427213:	fs test al,0xe5
  427216:	jno    0x4271ba
  427218:	aad    0x61
  42721a:	or     bh,BYTE PTR [edx]
  42721c:	mov    dh,0x90
  42721e:	cmp    esp,edx
  427220:	nop
  427221:	and    DWORD PTR [ebp+0x66d47b88],ebp
  427227:	stos   BYTE PTR es:[edi],al
  427228:	imul   edx,ebp,0x2f0d33c9
  42722e:	dec    esi
  42722f:	cmp    eax,DWORD PTR [ecx-0x2995bc43]
  427235:	gs mov edi,0x1b2d2ffc
  42723b:	cmovs  edi,DWORD PTR [edx]
  42723e:	inc    edi
  42723f:	and    al,0xfe
  427241:	sub    eax,0xf5138411
  427246:	mov    dh,0xdc
  427248:	add    ch,ah
  42724a:	cmp    BYTE PTR [eax-0x7f],ah
  42724d:	les    esp,FWORD PTR [esi+0x42c8fa9]
  427253:	push   ebx
  427254:	fidiv  DWORD PTR [ecx-0x42]
  427257:	push   ecx
  427258:	hlt    
  427259:	rcl    esp,1
  42725b:	(bad)
  42725f:	out    0xa2,eax
  427261:	hlt    
  427262:	sub    esi,DWORD PTR [si-0x58]
  427266:	jge    0x42721b
  427268:	dec    esp
  42726a:	les    ebx,FWORD PTR [ebp-0x5704e3f7]
  427270:	jo     0x4272ea
  427272:	push   es
  427273:	dec    edx
  427274:	jmp    FWORD PTR [ebx+ebp*8]
  427277:	push   cs
  427278:	pop    edx
  427279:	nop
  42727a:	xor    eax,0x34afe09
  42727f:	dec    esi
  427280:	xchg   ecx,eax
  427281:	out    0x4,al
  427283:	xchg   DWORD PTR [esi+0x3ca77c71],edi
  427289:	int    0x61
  42728b:	sbb    al,0x7d
  42728d:	mov    edx,0x583fe814
  427292:	iret   
  427293:	repz cld 
  427295:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427297:	out    0x8a,al
  427299:	lahf   
  42729a:	fcmovnb st,st(2)
  42729c:	adc    dh,BYTE PTR [eax]
  42729e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42729f:	stos   DWORD PTR es:[edi],eax
  4272a0:	push   0x17
  4272a2:	dec    ecx
  4272a3:	xchg   edx,eax
  4272a4:	inc    ecx
  4272a5:	jp     0x427303
  4272a7:	mov    DWORD PTR [edi+0x613344e3],0x5856d64c
  4272b1:	mov    esi,0x972a6e8d
  4272b6:	push   ds
  4272b7:	dec    ebp
  4272b8:	es aam 0x5f
  4272bb:	or     edi,0xcca2c6de
  4272c1:	ins    BYTE PTR es:[edi],dx
  4272c2:	pop    edi
  4272c3:	clc    
  4272c4:	and    eax,0x19ca8099
  4272c9:	icebp  
  4272ca:	adc    dh,BYTE PTR [ebx+0x2cba39da]
  4272d0:	fnstcw WORD PTR gs:[edx+0xb]
  4272d4:	shl    BYTE PTR [ecx+0x63],cl
  4272d7:	add    BYTE PTR ds:0x2670684b,dh
  4272dd:	push   es
  4272de:	jge    0x427319
  4272e0:	ins    DWORD PTR es:[edi],dx
  4272e1:	out    0x8c,al
  4272e3:	nop
  4272e4:	add    eax,0xf74d55a6
  4272e9:	adc    DWORD PTR [ebx-0x4bb4131f],ebp
  4272ef:	mov    ebx,0x5a5b1831
  4272f4:	bound  esp,QWORD PTR gs:[esi+0x21]
  4272f8:	dec    esp
  4272f9:	arpl   bx,dx
  4272fb:	fstp   QWORD PTR [ebp+0x2e9c94e4]
  427301:	mul    DWORD PTR [eax-0x4e339295]
  427307:	xor    al,BYTE PTR ds:0x39ba68ae
  42730d:	imul   ebp,DWORD PTR [ebp-0x23],0x411f9f03
  427314:	xor    edx,DWORD PTR [ecx-0x1ea3c339]
  42731a:	lock xor BYTE PTR [edx+edi*1+0x41b7fa],0x1f
  427323:	outs   dx,BYTE PTR ds:[esi]
  427324:	cdq    
  427325:	std    
  427326:	fucom  st(5)
  427328:	mov    esi,0xe1d378e3
  42732d:	mov    ds:0x868f0ee2,eax
  427332:	mov    eax,0x899f3539
  427337:	dec    ebx
  427338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427339:	mov    ah,0xd7
  42733b:	mov    esp,ebx
  42733d:	inc    ebp
  42733e:	push   edx
  42733f:	je     0xcf69ce7d
  427345:	inc    ebp
  427346:	and    BYTE PTR es:[eax-0x3ca97900],ah
  42734d:	fcomp  DWORD PTR [eax+eiz*2+0x41d772ef]
  427354:	out    0x7,al
  427356:	mov    DWORD PTR [ecx-0x6f],edx
  427359:	adc    eax,0xc299f2ec
  42735e:	inc    ecx
  42735f:	int    0x32
  427361:	mov    dh,0x72
  427363:	dec    eax
  427364:	dec    esp
  427365:	mov    eax,0x237d198a
  42736a:	add    edi,DWORD PTR [ebx]
  42736c:	mov    edx,0xd72570c8
  427371:	inc    edi
  427372:	sbb    ah,0x71
  427375:	xchg   ecx,eax
  427376:	aam    0x6f
  427378:	jp     0x427300
  42737a:	js     0x42736c
  42737c:	sbb    BYTE PTR [ebx+edx*8],bl
  42737f:	sbb    esp,DWORD PTR [ebp+0x4b2db570]
  427385:	adc    DWORD PTR [eax-0x3ac59df0],esi
  42738b:	ins    BYTE PTR es:[edi],dx
  42738c:	or     DWORD PTR [edi-0x47],ebp
  42738f:	aas    
  427390:	and    edx,DWORD PTR [ebx]
  427392:	ret    
  427393:	jle    0x427377
  427395:	or     al,0x54
  427397:	mov    al,0xb6
  427399:	pop    edi
  42739a:	mov    BYTE PTR [esi],dh
  42739c:	jecxz  0x427353
  42739e:	or     DWORD PTR ds:0x280e1da4,eax
  4273a4:	pop    ebx
  4273a5:	bnd jle 0x427355
  4273a8:	mov    eax,0x8579cae5
  4273ad:	xor    cl,BYTE PTR [esi-0x5d208360]
  4273b3:	retf   
  4273b4:	stos   DWORD PTR es:[edi],eax
  4273b5:	cs into 
  4273b7:	iret   
  4273b8:	call   0xfbde2269
  4273bd:	mov    ecx,DWORD PTR [edi]
  4273bf:	pop    ds
  4273c0:	mov    ebx,DWORD PTR [ebp-0x44d5a523]
  4273c6:	imul   edx,DWORD PTR [esi-0x3d870f8],0x39
  4273cd:	mov    ah,0x6b
  4273cf:	repz jb 0x4273f5
  4273d2:	mov    cl,0xf5
  4273d4:	add    al,0x41
  4273d6:	mov    ebp,0x4f2fafda
  4273db:	or     al,0xa8
  4273dd:	repnz mov ds:0xcdb738f8,al
  4273e3:	fiadd  DWORD PTR [eax]
	...
  4273f1:	or     al,0x47
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0x5719f609
  4273fe:	sbb    dl,al
  427400:	dec    ebx
  427401:	int    0xe9
  427403:	add    DWORD PTR [eax],eax
  427405:	stos   DWORD PTR es:[edi],eax
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [edx-0x1c5ed4ea],bl
  42740e:	jbe    0x4273ff
  427410:	dec    ebp
  427411:	dec    eax
  427412:	push   ecx
  427413:	js     0x4273b1
  427415:	cmp    al,0x50
  427417:	jp     0x4273c2
  427419:	cmc    
  42741a:	imul   esp,DWORD PTR [eax],0x901c9a01
  427420:	fadd   st,st(1)
  427422:	js     0x427412
  427424:	ret    0x9922
  427427:	shl    BYTE PTR ds:0x57d1a54,1
  42742d:	rol    DWORD PTR [ecx],1
  42742f:	sbb    ebx,ebp
  427431:	(bad)  
  427432:	jmp    0x427476
  427434:	push   edx
  427435:	mov    ecx,0x1769c9c4
  42743a:	jbe    0x4274a4
  42743c:	xor    eax,0xd9d486d5
  427441:	adc    al,0xc2
  427443:	in     al,dx
  427444:	rcr    edx,cl
  427446:	pop    ebp
  427447:	mov    esi,0xfb3f1d8c
  42744c:	mov    ebp,0x187fa6b3
  427451:	fiadd  DWORD PTR ds:0x52234169
  427457:	lods   eax,DWORD PTR ds:[esi]
  427458:	ror    BYTE PTR [esi],0x70
  42745b:	xor    DWORD PTR [eax+0x79dd6499],eax
  427461:	adc    bh,0x25
  427464:	retf   0xcbb7
  427467:	pop    ebp
  427468:	pop    ss
  427469:	xchg   esp,eax
  42746a:	cld    
  42746b:	xor    DWORD PTR [ebp-0x43],0xb8a5de06
  427472:	pop    eax
  427473:	cmp    esi,DWORD PTR [ebp+0x71]
  427476:	js     0x4274ab
  427478:	loop   0x4274e0
  42747a:	into   
  42747b:	or     BYTE PTR [ecx-0x67],ch
  42747e:	and    ah,BYTE PTR [esi]
  427480:	mov    gs,WORD PTR [edx]
  427482:	xor    ebx,ebp
  427484:	iret   
  427485:	mov    al,ds:0xedb67617
  42748a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42748b:	dec    edi
  42748c:	add    DWORD PTR [edi+0x6c],esi
  42748f:	mov    bh,0xa2
  427491:	lods   al,BYTE PTR ds:[esi]
  427492:	ja     0x42743a
  427494:	mov    DWORD PTR [esp+edi*8],ebx
  427497:	jo     0x42750f
  427499:	mov    al,ds:0xff244612
  42749e:	push   ebx
  42749f:	(bad)  
  4274a0:	std    
  4274a1:	jnp    0x4274b3
  4274a3:	cmp    eax,0x159bff81
  4274a8:	and    al,0x81
  4274aa:	pop    ecx
  4274ab:	test   eax,0x38ee7e67
  4274b0:	mov    ecx,0x70ee94bd
  4274b5:	sahf   
  4274b6:	add    edx,DWORD PTR [ebx-0x37]
  4274b9:	fdivr  QWORD PTR [eax-0x34990835]
  4274bf:	jno    0x427483
  4274c1:	cmp    DWORD PTR [edi+0x1d58f4d9],eax
  4274c7:	es enter 0x7c67,0x2
  4274cc:	pop    es
  4274cd:	xor    ebx,DWORD PTR [ebp+0x28e5251c]
  4274d3:	dec    ebp
  4274d4:	pop    esp
  4274d5:	jae    0x42750d
  4274d7:	add    ebp,DWORD PTR [ebp+0x79db00bf]
  4274dd:	inc    ebp
  4274de:	mul    BYTE PTR [eax+0x1e]
  4274e1:	push   ds
  4274e2:	jp     0x4274b3
  4274e4:	inc    ebp
  4274e5:	pop    esi
  4274e6:	icebp  
  4274e7:	sti    
  4274e8:	fs dec esp
  4274ea:	sbb    dh,BYTE PTR [edx+0x1a]
  4274ed:	push   cs
  4274ee:	in     al,dx
  4274ef:	and    ch,BYTE PTR [esi]
  4274f1:	push   cs
  4274f2:	enter  0x8909,0x67
  4274f6:	xor    eax,eax
  4274f8:	mul    BYTE PTR [eax-0x1c]
  4274fb:	sti    
  4274fc:	xlat   BYTE PTR ds:[ebx]
  4274fd:	adc    al,0xe8
  4274ff:	push   ds
  427500:	ds pushf 
  427502:	and    BYTE PTR [edi+esi*4+0x32],dh
  427506:	imul   DWORD PTR [ebp+eax*1-0x5d]
  42750a:	mov    al,0x9f
  42750c:	xchg   edi,eax
  42750d:	mov    BYTE PTR [edi],cl
  42750f:	pushf  
  427510:	inc    eax
  427511:	test   al,0x5d
  427513:	ds inc ecx
  427515:	(bad)  
  427516:	addr16 dec ebp
  427518:	pop    eax
  427519:	mov    ebx,0x602cabb2
  42751e:	pushf  
  42751f:	cs mov edx,0x5953dac4
  427525:	xor    eax,0xba4c1b33
  42752a:	xchg   esi,eax
  42752b:	jae    0x42754c
  42752d:	sub    bl,BYTE PTR [ebp+0x6722f131]
  427533:	dec    ebp
  427534:	xchg   ebx,eax
  427535:	es mov edi,edx
  427538:	or     BYTE PTR [esi-0x71ebfaa1],0x40
  42753f:	fwait
  427540:	pop    ecx
  427541:	unpcklps xmm2,XMMWORD PTR [esp+edi*8]
  427545:	push   esi
  427546:	sbb    eax,0x892d208f
  42754b:	jp     0x427571
  42754d:	sub    BYTE PTR [esi-0x6],0xd7
  427551:	mov    ds:0xf16d865f,al
  427556:	out    0xab,eax
  427558:	mov    al,ds:0xf6642ebd
  42755d:	fisub  DWORD PTR [ebx-0x16fa310]
  427563:	mov    DWORD PTR [ecx+0x36],esi
  427566:	popf   
  427567:	pop    ebp
  427568:	mov    BYTE PTR [ecx],cl
  42756a:	scas   al,BYTE PTR es:[edi]
  42756b:	test   BYTE PTR [eax],bl
  42756d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42756e:	bound  ebp,QWORD PTR [eax-0x77]
  427571:	movaps xmm6,xmm7
  427574:	or     eax,0x6443786b
  427579:	lahf   
  42757a:	(bad)  
  42757b:	xcrypt-ofb (bad)
  42757c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42757d:	stos   BYTE PTR es:[edi],al
  42757e:	mov    BYTE PTR ds:0xa2164e4a,0x69
  427585:	xor    DWORD PTR [eax+0x77],ebp
  427588:	aad    0x79
  42758a:	mov    ecx,0x650ad00
  42758f:	stos   BYTE PTR es:[edi],al
  427590:	and    al,0xf7
  427592:	xchg   esi,eax
  427593:	call   0xecf:0xb06e0b07
  42759a:	jmp    0x42753b
  42759c:	jge    0x42752e
  42759e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42759f:	or     al,0x96
  4275a1:	dec    esi
  4275a2:	or     eax,0x6f04998e
  4275a7:	dec    esp
  4275a8:	xor    eax,0xf669a878
  4275ad:	daa    
  4275ae:	mov    ds:0xbb26009a,eax
  4275b3:	mov    ds:0x1a4ec347,al
  4275b8:	ret    0xbd5a
  4275bb:	popf   
  4275bc:	jecxz  0x427630
  4275be:	call   0xf6f9:0x4d0960c6
  4275c5:	sub    al,0x59
  4275c7:	and    eax,0x7d3e12c5
  4275cc:	rcl    DWORD PTR [edi+ebx*4],1
  4275cf:	push   eax
  4275d0:	mov    ch,BYTE PTR [ebx-0x4b260d5b]
  4275d6:	dec    ebp
  4275d7:	iret   
  4275d8:	add    BYTE PTR [ebp+0x77ed45f],dh
  4275de:	jmp    0xb2ace548
  4275e3:	add    BYTE PTR [edx+0x34062b3e],dl
  4275e9:	repnz not BYTE PTR [ecx+0x267991f8]
  4275f0:	sbb    ecx,eax
  4275f2:	sub    WORD PTR [ecx+0x7d5cbe0],bp
  4275f9:	inc    edi
  4275fa:	jns    0x4275ae
  4275fc:	mov    esi,0xa42ef862
  427601:	in     al,0x6f
  427603:	jns    0x427642
  427605:	sub    BYTE PTR [edx-0x64],0x52
  427609:	sub    eax,DWORD PTR [edi+0x4dcf0deb]
  42760f:	xchg   edx,eax
  427610:	les    ebx,FWORD PTR [ebx+0x13]
  427613:	not    DWORD PTR [ebp-0x6f]
  427616:	and    al,0x3d
  427618:	sahf   
  427619:	inc    edi
  42761a:	lods   eax,DWORD PTR ds:[esi]
  42761b:	push   ds
  42761c:	out    dx,al
  42761d:	cmp    edi,DWORD PTR [ecx-0x4f7c53b2]
  427623:	pop    esp
  427624:	adc    bl,BYTE PTR ss:[eax+0x74]
  427628:	and    eax,DWORD PTR [edi-0x76d114a1]
  42762e:	dec    edx
  42762f:	pop    esp
  427630:	mov    WORD PTR [ebp-0xa],fs
  427633:	shl    ebp,1
  427635:	fs dec edi
  427637:	dec    esp
  427638:	out    dx,eax
  427639:	dec    eax
  42763a:	cdq    
  42763b:	stc    
  42763c:	xor    eax,0x5144507d
  427641:	cmp    ebx,DWORD PTR [edi+0x39]
  427644:	nop
  427645:	pop    edx
  427646:	jge    0x4275e3
  427648:	fdivr  DWORD PTR [eax-0x3f512b88]
  42764e:	inc    edi
  42764f:	mov    ecx,0x7412713d
  427654:	jnp    0x4275e0
  427656:	outs   dx,DWORD PTR ds:[esi]
  427657:	mov    dl,0x5f
  427659:	outs   dx,DWORD PTR ds:[esi]
  42765a:	inc    esi
  42765b:	jle    0x4276c4
  42765d:	cmp    DWORD PTR [ecx],ecx
  42765f:	and    eax,0x985c9baf
  427664:	jo     0x427646
  427666:	sbb    DWORD PTR [edx+esi*4+0x79],ebp
  42766a:	int    0x3e
  42766c:	ins    DWORD PTR es:[edi],dx
  42766d:	ins    BYTE PTR es:[edi],dx
  42766e:	mov    dh,0x6e
  427670:	mov    eax,ds:0xf06af0e7
  427675:	and    dl,bh
  427677:	mov    BYTE PTR [edi+0x7fe236ad],al
  42767d:	mov    edx,0xb5b2958f
  427682:	inc    esi
  427683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427684:	adc    DWORD PTR [esi],ebx
  427686:	mov    BYTE PTR [ecx-0x3a415c6c],0x97
  42768d:	clc    
  42768e:	sti    
  42768f:	das    
  427690:	(bad)  
  427691:	or     DWORD PTR [edi+0x2c1fb1a9],esi
  427697:	mov    ebx,0xe3cc1937
  42769c:	push   edx
  42769d:	pop    ds
  42769e:	xor    DWORD PTR [eax+0x35475f5a],0x31ee2cb4
  4276a8:	jnp    0x427702
  4276aa:	push   esp
  4276ab:	mov    BYTE PTR [esi+eax*8-0x12b78d2b],dh
  4276b2:	mov    al,ds:0xeb0da2f9
  4276b7:	retf   
  4276b8:	ficomp WORD PTR [esi]
  4276ba:	es adc eax,0x7eaebe83
  4276c0:	xor    eax,0xff17d520
  4276c5:	jle    0x4276af
  4276c7:	outs   dx,DWORD PTR ds:[esi]
  4276c8:	fs sub edi,0xe6d24496
  4276cf:	add    al,0xaa
  4276d1:	or     al,bh
  4276d3:	push   ds
  4276d4:	adc    eax,DWORD PTR es:[esi]
  4276d7:	test   DWORD PTR [ecx-0x3e],0x80ba185b
  4276de:	jnp    0x427690
  4276e0:	push   esp
  4276e1:	dec    edx
  4276e2:	mov    esi,0x1bf5b2db
  4276e7:	cdq    
  4276e8:	mov    al,ds:0x1d33f378
  4276ed:	and    BYTE PTR [ebp-0x38e598a1],dl
  4276f3:	in     al,0xb4
  4276f5:	in     eax,0x16
  4276f7:	in     eax,dx
  4276f8:	xor    al,0xac
  4276fa:	pop    ebx
  4276fb:	xchg   edx,eax
  4276fc:	int3   
  4276fd:	(bad)  
  4276fe:	or     BYTE PTR [eax+0x5a],ch
  427701:	in     al,0x3c
  427703:	fisubr WORD PTR [ecx]
  427705:	push   edx
  427706:	dec    edi
  427707:	aam    0x3f
  427709:	jmp    0x6396792e
  42770e:	xchg   BYTE PTR [esi+0x7780f57e],ch
  427714:	in     eax,dx
  427715:	ja     0x427743
  427717:	xchg   ebp,eax
  427718:	or     ebx,0x43316336
  42771e:	(bad)  
  42771f:	(bad)  
  427720:	test   BYTE PTR [edx-0x15],cl
  427723:	shl    edx,cl
  427725:	cwde   
  427726:	pop    ebx
  427727:	mov    ah,BYTE PTR [edi-0x49]
  42772a:	mov    BYTE PTR [eax-0x7ef6c2a6],dl
  427730:	aam    0xe8
  427732:	popf   
  427733:	fxtract 
  427735:	popa   
  427736:	mov    ch,0x87
  427738:	addr16 or ah,bh
  42773b:	push   esi
  42773c:	mov    cl,0xdc
  42773e:	lock adc eax,0xa9194519
  427745:	jmp    0x18b:0x2b710af0
  42774c:	pop    esi
  42774d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42774e:	(bad)  
  42774f:	push   cs
  427750:	inc    ecx
  427751:	mov    gs,esi
  427753:	jecxz  0x427731
  427755:	gs rol ebp,1
  427758:	dec    ecx
  427759:	mov    esi,0x6e7b5b96
  42775e:	fsubr  st,st(7)
  427760:	and    eax,0xb2989e17
  427765:	pop    esi
  427766:	inc    esp
  427767:	ins    DWORD PTR es:[edi],dx
  427768:	mov    eax,cs:0x858ec9b9
  42776e:	and    al,0x68
  427770:	cli    
  427771:	jmp    0x4277a6
  427773:	mov    esi,0xf5a41d35
  427778:	jnp    0x42778c
  42777a:	and    DWORD PTR ds:0x52ad1138,ebx
  427780:	xchg   edx,eax
  427781:	mov    esi,0xe840b0b8
  427786:	addr16 repnz push edx
  427789:	pop    ebx
  42778a:	cmp    eax,0xf50573e7
  42778f:	add    al,0xaa
  427791:	xchg   esi,eax
  427792:	pop    ds
  427793:	or     eax,0x79ad5683
  427798:	popa   
  427799:	loopne 0x427806
  42779b:	mov    bh,0x12
  42779d:	clc    
  42779e:	scas   al,BYTE PTR es:[edi]
  42779f:	xchg   esi,eax
  4277a0:	fild   QWORD PTR [ebx+0x2425c8b0]
  4277a6:	(bad)  
  4277a7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4277a9:	or     eax,DWORD PTR [esi-0x1e]
  4277ac:	bound  eax,QWORD PTR [esi-0x120a2856]
  4277b2:	sub    BYTE PTR [edx+0x0],bl
	...
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp+0x7706a276]
  4277cf:	lods   al,BYTE PTR ds:[esi]
  4277d0:	or     edi,DWORD PTR [eax-0x13]
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	stos   DWORD PTR es:[edi],eax
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [ebp-0x13],bh
  4277db:	adc    al,0xeb
  4277dd:	push   cs
  4277de:	iret   
  4277df:	sub    edx,edx
  4277e1:	stc    
  4277e2:	ja     0x427764
  4277e4:	lahf   
  4277e5:	das    
  4277e6:	loop   0x427788
  4277e8:	aam    0x15
  4277ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277eb:	jno    0x4277db
  4277ed:	sbb    ecx,eax
  4277ef:	mov    ebx,0xac132602
  4277f4:	mov    edi,0x4fc7cf06
  4277f9:	mov    ah,0x90
  4277fb:	sahf   
  4277fc:	mov    esp,0xb8338e8d
  427801:	pop    edx
  427802:	(bad)  
  427803:	sbb    esp,DWORD PTR [edx]
  427805:	mov    ds:0xf546634b,al
  42780a:	sub    edi,edi
  42780c:	add    al,0xcf
  42780e:	aad    0x84
  427810:	xchg   ecx,eax
  427811:	push   0x9f441cc5
  427816:	jae    0x4277b6
  427818:	js     0x4277eb
  42781a:	lds    edx,FWORD PTR [edx]
  42781c:	idiv   BYTE PTR [eax+eax*8]
  42781f:	mov    esi,0xe50d2a73
  427824:	rcl    DWORD PTR [edx-0x2a2503e8],cl
  42782a:	sti    
  42782b:	dec    ecx
  42782c:	lea    esi,[ecx]
  42782e:	repnz neg DWORD PTR [edx+eiz*2]
  427832:	jge    0x427847
  427834:	cs out 0x5b,eax
  427837:	inc    ebp
  427838:	xchg   edi,eax
  427839:	xchg   edx,eax
  42783a:	xchg   ebp,eax
  42783b:	xor    eax,DWORD PTR [si+0x1c]
  42783f:	test   eax,0x61b80fc1
  427844:	jl     0x427800
  427846:	test   BYTE PTR ds:0x45d3fafa,0x4c
  42784d:	mov    bl,BYTE PTR [edi+0x2]
  427850:	loopne 0x4278c6
  427852:	push   cs
  427853:	push   cs
  427854:	lds    esp,FWORD PTR [ecx]
  427856:	sub    bl,al
  427858:	(bad)  
  427859:	mov    al,0x11
  42785b:	push   cs
  42785c:	test   DWORD PTR [eax],ebp
  42785e:	sti    
  42785f:	(bad)  
  427861:	clc    
  427862:	iret   
  427863:	hlt    
  427864:	inc    esp
  427865:	test   DWORD PTR [edx+0xf1bfb14],ebp
  42786b:	and    dl,BYTE PTR [ebx+esi*2-0x409accb4]
  427872:	fsub   st(3),st
  427874:	iret   
  427875:	dec    ebp
  427876:	jecxz  0x427807
  427878:	mov    eax,0x99fb70fc
  42787d:	(bad)  
  42787e:	fisubr WORD PTR [edx]
  427880:	sub    ch,BYTE PTR [ebx-0x14]
  427883:	push   0xffffffe2
  427885:	pusha  
  427886:	popa   
  427887:	gs dec edi
  427889:	mov    bl,0x7f
  42788b:	sbb    al,0x2e
  42788d:	add    DWORD PTR [edx],ebp
  42788f:	sub    dh,ah
  427891:	loope  0x42787d
  427893:	ja     0x427898
  427895:	scas   eax,DWORD PTR es:[edi]
  427896:	dec    eax
  427897:	(bad)  [edi+0x68182367]
  42789d:	sbb    al,0x4c
  42789f:	icebp  
  4278a0:	mov    edi,0xd1da1c85
  4278a5:	add    bh,cl
  4278a7:	xchg   edx,eax
  4278a8:	push   0x5a
  4278aa:	jecxz  0x427916
  4278ac:	mov    eax,0x7c42d67f
  4278b1:	aam    0xa4
  4278b3:	arpl   WORD PTR [eax],di
  4278b5:	and    cl,ch
  4278b7:	arpl   si,bp
  4278b9:	sbb    eax,0x6602128e
  4278be:	mov    eax,DWORD PTR [edx-0x6b]
  4278c1:	repz xor DWORD PTR [edi-0x1f],eax
  4278c5:	int    0x29
  4278c7:	pop    ss
  4278c8:	xor    BYTE PTR [ecx-0x2],bh
  4278cb:	das    
  4278cc:	test   eax,0xaf4717c3
  4278d1:	xchg   DWORD PTR [edi],esi
  4278d3:	cmp    eax,0x5934f371
  4278d8:	pop    ebx
  4278d9:	ror    esp,0xa
  4278dc:	xchg   ebx,eax
  4278dd:	es leave 
  4278df:	jp     0x42789e
  4278e1:	jp     0x4278bd
  4278e3:	inc    esp
  4278e4:	or     ebp,DWORD PTR [esi+0x7489cfe]
  4278ea:	aad    0x4b
  4278ec:	jle    0x4278e0
  4278ee:	pusha  
  4278ef:	test   BYTE PTR [edi+edi*4],al
  4278f2:	out    dx,eax
  4278f3:	das    
  4278f4:	bound  ebp,QWORD PTR [ebp+eax*4+0x3d]
  4278f8:	test   ebp,ebp
  4278fa:	imul   esp,DWORD PTR [edi+0x18925cbf],0x9f8aac9b
  427904:	jno    0x4278f4
  427906:	jo     0x4278b0
  427908:	jo     0x4278d1
  42790a:	and    ecx,ebp
  42790c:	sbb    al,0x3a
  42790e:	jbe    0x42798c
  427910:	ins    BYTE PTR es:[edi],dx
  427911:	add    BYTE PTR [eax-0x3f671bb7],dl
  427917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427918:	sbb    DWORD PTR [ebx-0x2e],eax
  42791b:	inc    edi
  42791c:	jle    0x42792b
  42791e:	push   eax
  42791f:	je     0x427987
  427921:	lahf   
  427922:	lds    esp,FWORD PTR [ebp+0x2a]
  427925:	dec    ebx
  427926:	jg     0x4279a2
  427928:	pop    ds
  427929:	fistp  WORD PTR [edi]
  42792b:	lahf   
  42792c:	repz mov ds:0x85bcd683,al
  427933:	pop    es
  427934:	cmp    dh,BYTE PTR [ecx]
  427936:	test   eax,0x3ff87356
  42793b:	or     esi,DWORD PTR [ebp+0x31ef7118]
  427941:	and    eax,0x9c956e71
  427946:	enter  0x352f,0x6
  42794a:	fwait
  42794b:	jp     0x42799c
  42794d:	and    BYTE PTR [ebx],dl
  42794f:	dec    esp
  427950:	xchg   ebx,eax
  427951:	popa   
  427952:	sar    BYTE PTR [eax+0x636ea8c4],cl
  427958:	dec    edx
  427959:	push   ebx
  42795a:	out    dx,eax
  42795b:	in     al,dx
  42795c:	sub    BYTE PTR [ecx+0x72],ah
  42795f:	mov    ah,0xcd
  427961:	outs   dx,BYTE PTR ds:[esi]
  427962:	leave  
  427963:	or     eax,0xf417c984
  427968:	(bad)  
  427969:	pop    es
  42796a:	pop    ebx
  42796b:	div    BYTE PTR [eax]
  42796d:	dec    edi
  42796e:	fmul   QWORD PTR [edi-0x593839ee]
  427974:	jne    0x4279d5
  427976:	add    BYTE PTR [ebp+0x1d],0xea
  42797a:	sbb    bh,BYTE PTR [ecx]
  42797c:	hlt    
  42797d:	test   eax,0x82652e2e
  427982:	ss mov al,0xe9
  427985:	shl    DWORD PTR [edi-0x3fc8cf8d],cl
  42798b:	addr16 jl 0x427a0b
  42798e:	mov    dh,bl
  427990:	out    dx,eax
  427991:	jno    0x427944
  427993:	(bad)  
  427994:	aas    
  427995:	rol    DWORD PTR [edx+eax*2+0x77],1
  427999:	pop    ds
  42799a:	mov    edx,DWORD PTR [ecx+0x6857e77e]
  4279a0:	enter  0x3ca6,0xde
  4279a4:	jbe    0x4279be
  4279a6:	stc    
  4279a7:	jmp    0x2f5b:0x194b7d67
  4279ae:	je     0x427956
  4279b0:	inc    edi
  4279b1:	out    0x3e,al
  4279b3:	inc    ebx
  4279b4:	dec    ebx
  4279b5:	(bad)  
  4279b6:	and    dl,BYTE PTR [eax]
  4279b8:	cmp    bl,0x4e
  4279bb:	mov    bl,0x86
  4279bd:	test   DWORD PTR [eax+0x66],0xe74264e1
  4279c4:	retf   
  4279c5:	iret   
  4279c6:	adc    eax,DWORD PTR [eax]
  4279c8:	cdq    
  4279c9:	retf   
  4279ca:	pop    ss
  4279cb:	sub    dh,0x98
  4279ce:	or     DWORD PTR [ebx-0x3b60446e],ecx
  4279d4:	sub    DWORD PTR [esi],esp
  4279d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d7:	push   0xdf4a78a6
  4279dc:	xor    BYTE PTR [ebx],dl
  4279de:	inc    ebp
  4279df:	cwde   
  4279e0:	in     al,dx
  4279e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279e2:	das    
  4279e3:	(bad)  
  4279e4:	fld    st(3)
  4279e6:	dec    ecx
  4279e7:	cli    
  4279e8:	cmp    DWORD PTR [ecx],ebx
  4279ea:	fadd   DWORD PTR [edi+0x354485f8]
  4279f0:	out    0x46,eax
  4279f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279f3:	scas   al,BYTE PTR es:[edi]
  4279f4:	pusha  
  4279f5:	nop
  4279f6:	cmp    ebp,edi
  4279f8:	jp     0x46366cf0
  4279fe:	fmul   QWORD PTR ds:0x8978c321
  427a04:	fstp   TBYTE PTR [eax]
  427a06:	test   eax,0x1cf283ad
  427a0b:	(bad)  
  427a0c:	fdivr  QWORD PTR [ebp+0x38]
  427a0f:	and    ecx,DWORD PTR [edi+0x3de81816]
  427a15:	aam    0xb0
  427a17:	or     bl,dh
  427a19:	out    dx,al
  427a1a:	repz pop es
  427a1c:	in     al,0x8b
  427a1e:	or     al,0x85
  427a20:	mov    ebx,0x3cc031de
  427a25:	lea    edi,[ebx+0x4]
  427a28:	jp     0x427a16
  427a2a:	dec    ebx
  427a2b:	jns    0x427a52
  427a2d:	mov    ecx,0xd11855f9
  427a32:	out    0xe0,eax
  427a34:	fcom   DWORD PTR [edi]
  427a36:	loope  0x427aa6
  427a38:	adc    cl,al
  427a3a:	(bad)  
  427a3c:	xchg   ebx,eax
  427a3d:	adc    al,BYTE PTR [ebx-0x447db535]
  427a43:	call   0xae26:0x7393f2bf
  427a4a:	mov    eax,ds:0xce90d86d
  427a4f:	sbb    ebx,DWORD PTR ds:0x86d4791e
  427a55:	cmp    esi,ebx
  427a57:	test   BYTE PTR [edi+0x2b],al
  427a5a:	xchg   esp,eax
  427a5b:	mov    fs,edi
  427a5d:	aaa    
  427a5e:	bound  esp,QWORD PTR [eax+0x47]
  427a61:	arpl   si,di
  427a63:	push   ss
  427a64:	mov    edi,0x23bff074
  427a69:	enter  0x2827,0xac
  427a6d:	push   esi
  427a6e:	test   eax,0xb7f11477
  427a73:	scas   eax,DWORD PTR es:[edi]
  427a74:	fcomp  QWORD PTR [esi-0x50]
  427a77:	stos   BYTE PTR es:[edi],al
  427a78:	iret   
  427a79:	outs   dx,DWORD PTR ds:[esi]
  427a7a:	dec    edx
  427a7b:	dec    edx
  427a7c:	or     DWORD PTR [edi-0x73],esi
  427a7f:	fwait
  427a80:	into   
  427a81:	jge    0x427a48
  427a83:	mov    ebx,0x977d5515
  427a88:	and    cl,dl
  427a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8b:	mov    ah,0x21
  427a8d:	stos   DWORD PTR es:[edi],eax
  427a8e:	loope  0x427a59
  427a90:	outs   dx,BYTE PTR ds:[esi]
  427a91:	retf   
  427a92:	es jo  0x427a75
  427a95:	push   edi
  427a96:	outs   dx,BYTE PTR ds:[esi]
  427a97:	pop    esi
  427a98:	ins    BYTE PTR es:[edi],dx
  427a99:	fimul  WORD PTR [esi+0xe]
  427a9c:	stos   BYTE PTR es:[edi],al
  427a9d:	pop    ebx
  427a9e:	jmp    FWORD PTR [ecx-0x5f]
  427aa1:	daa    
  427aa2:	les    edx,FWORD PTR [edi-0x6]
  427aa5:	add    eax,0x2ead1bc4
  427aaa:	sbb    BYTE PTR [ebp+0x3f],0xb5
  427aae:	aad    0x4e
  427ab0:	xor    dl,ah
  427ab2:	int3   
  427ab3:	loopne 0x427b33
  427ab5:	fcomp  DWORD PTR [esi+0x43]
  427ab8:	imul   esi,edi,0x16
  427abb:	jge    0x427b1b
  427abd:	aas    
  427abe:	jmp    0xd363:0xe9d38940
  427ac5:	mov    al,0x15
  427ac7:	aas    
  427ac8:	adc    BYTE PTR [ebx-0x65],dh
  427acb:	repz je 0x427a8f
  427ace:	in     al,dx
  427acf:	mov    cl,0xae
  427ad1:	xor    al,0x81
  427ad3:	push   es
  427ad4:	les    ebp,FWORD PTR [edx]
  427ad6:	mov    WORD PTR [ebx-0x33],es
  427ad9:	scas   eax,DWORD PTR es:[edi]
  427ada:	aam    0xa9
  427adc:	xchg   esi,eax
  427add:	stos   DWORD PTR es:[edi],eax
  427ade:	les    eax,FWORD PTR [ebx+edi*2]
  427ae1:	ret    0xd64
  427ae4:	rol    DWORD PTR [ebx-0x7c],cl
  427ae7:	clc    
  427ae8:	dec    eax
  427ae9:	push   0x48796658
  427aee:	enter  0x8143,0xa5
  427af2:	mov    edi,0xf0b7cc92
  427af7:	mov    ds:0x950aeac4,al
  427afc:	or     edi,edx
  427afe:	shl    DWORD PTR [ebx-0x75],cl
  427b01:	mov    edx,0x4cf9fd5
  427b06:	pop    ebx
  427b07:	dec    esi
  427b08:	call   0xfc21:0x540edc65
  427b0f:	adc    DWORD PTR [esp+edx*8],esp
  427b12:	shl    BYTE PTR [edx],0x9d
  427b15:	fmul   DWORD PTR [esi]
  427b17:	imul   ebp,DWORD PTR ds:0x85d32cf9,0xab51603b
  427b21:	(bad)  
  427b22:	pop    ebx
  427b23:	hlt    
  427b24:	adc    esi,edx
  427b26:	addr16 add bh,dl
  427b29:	jecxz  0x427b0c
  427b2b:	rol    BYTE PTR [ebx],cl
  427b2d:	cmp    dl,BYTE PTR [edx]
  427b2f:	fdivr  QWORD PTR [esi+edx*1-0x1076f154]
  427b36:	or     cl,BYTE PTR [eax-0x7c]
  427b39:	lea    esi,[ecx-0x4a82db50]
  427b3f:	mov    esp,0xa15b48ff
  427b44:	retf   0x48d6
  427b47:	not    DWORD PTR [edi-0x8]
  427b4a:	xchg   DWORD PTR [ebp-0xf],ebx
  427b4d:	jae    0x427b5a
  427b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b50:	cmp    eax,0x1a4b8cd
  427b55:	pop    es
  427b56:	adc    ecx,ebp
  427b58:	adc    al,al
  427b5a:	icebp  
  427b5b:	dec    esp
  427b5c:	jecxz  0x427b70
  427b5e:	jns    0x427b37
  427b60:	fsubr  st(4),st
  427b62:	inc    edi
  427b63:	lods   eax,DWORD PTR ds:[esi]
  427b64:	lock adc eax,0x902dfb6b
  427b6a:	fdivr  QWORD PTR [ebx+0x7403516a]
  427b70:	cmovo  eax,ebx
  427b73:	sub    al,0xe9
  427b75:	mov    bl,0x2
  427b77:	mov    ebx,0xd9f6a2b3
  427b7c:	jge    0x427b39
  427b7e:	test   BYTE PTR [edi-0x5738e99e],ah
	...
  427b90:	add    BYTE PTR [ebx],ch
  427b92:	loopne 0x427c0f
  427b94:	cmp    bl,bh
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [esi+0x23d25f73],ecx
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	stos   DWORD PTR es:[edi],eax
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [esi],dl
  427baa:	mov    ds:0x81b3ebbd,eax
  427baf:	fst    DWORD PTR [eax-0x4e]
  427bb2:	std    
  427bb3:	dec    eax
  427bb4:	rcl    BYTE PTR [edx],1
  427bb6:	nop
  427bb7:	dec    esp
  427bb8:	adc    ebx,DWORD PTR [eax]
  427bba:	inc    ecx
  427bbb:	cmp    DWORD PTR [ecx+0x71f2fecb],ebx
  427bc1:	repz jne 0x427bf1
  427bc4:	mov    ah,0x29
  427bc6:	clc    
  427bc7:	test   dl,0x13
  427bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bcb:	sub    al,BYTE PTR [edx+ebp*1]
  427bce:	pop    ds
  427bcf:	aaa    
  427bd0:	jb     0x427bb1
  427bd2:	mov    bh,0x8b
  427bd4:	cmp    DWORD PTR [edi],ecx
  427bd6:	xchg   ebp,eax
  427bd7:	dec    edi
  427bd8:	mov    edi,0xcd1e7c0c
  427bdd:	xor    BYTE PTR [esi+0x75b62ad4],cl
  427be3:	call   0xab907a2a
  427be8:	sub    eax,eax
  427bea:	repz pop ebx
  427bec:	in     al,dx
  427bed:	mov    ch,0xdc
  427bef:	aas    
  427bf0:	mov    WORD PTR [esi],gs
  427bf2:	icebp  
  427bf3:	ds mov esp,0x4a355057
  427bf9:	das    
  427bfa:	mov    bh,0x57
  427bfc:	rcr    dl,cl
  427bfe:	sub    BYTE PTR [ecx+0x15],ah
  427c01:	fisttp QWORD PTR [edx+0x5e]
  427c04:	pop    ebp
  427c05:	mov    BYTE PTR [ecx+eax*2],0x9c
  427c09:	push   ecx
  427c0a:	or     ebp,edi
  427c0c:	aam    0xbc
  427c0e:	push   ds
  427c0f:	cmp    edi,ecx
  427c11:	sti    
  427c12:	mov    al,0x4e
  427c14:	je     0x427bd7
  427c16:	jp     0x427bf6
  427c18:	dec    edx
  427c19:	xchg   edi,eax
  427c1a:	adc    eax,0x157f7333
  427c1f:	aad    0xec
  427c21:	mov    ebx,0xcc5357d6
  427c26:	pop    ecx
  427c27:	dec    ebp
  427c28:	pop    esi
  427c29:	leave  
  427c2a:	rcr    DWORD PTR [edi+esi*2+0x1e9e7990],cl
  427c31:	mov    esp,0x7551d2e4
  427c36:	bound  ebp,QWORD PTR [edi+ecx*1-0x5f]
  427c3a:	pop    eax
  427c3b:	ins    DWORD PTR es:[edi],dx
  427c3c:	imul   edx,DWORD PTR [eax+0x2a63bbbb],0xffffff8b
  427c43:	push   edi
  427c44:	cmc    
  427c45:	xor    BYTE PTR [edi+0x16],dh
  427c48:	mov    DWORD PTR [ecx-0x1a3b781],edi
  427c4e:	outs   dx,DWORD PTR ds:[esi]
  427c4f:	fwait
  427c50:	es xchg ebx,eax
  427c52:	call   0x38a66f9b
  427c57:	mov    esi,0x1769f2d0
  427c5c:	loopne 0x427cd6
  427c5e:	scas   eax,DWORD PTR es:[edi]
  427c5f:	pop    eax
  427c60:	hlt    
  427c61:	pop    ss
  427c62:	pop    ebp
  427c63:	mov    dh,0x37
  427c65:	add    dh,0x35
  427c68:	add    dh,BYTE PTR ds:0x54e6e999
  427c6e:	inc    ecx
  427c6f:	(bad)  
  427c70:	iret   
  427c71:	stos   BYTE PTR es:[edi],al
  427c72:	mov    ds:0x552d5de9,al
  427c77:	jb     0x427ccf
  427c79:	mov    ds:0x5a9c9a8d,eax
  427c7e:	ror    ah,1
  427c80:	test   DWORD PTR [ecx],esi
  427c82:	popf   
  427c83:	int    0xc
  427c85:	mov    bl,0x4c
  427c87:	int    0xe8
  427c89:	lock ror BYTE PTR [ebx-0x60],0xf6
  427c8e:	push   ebx
  427c8f:	add    eax,0x6d43ff43
  427c94:	cmp    DWORD PTR ds:0x49a083b4,esi
  427c9a:	adc    dl,BYTE PTR [ebx-0x2f991ace]
  427ca0:	dec    ebp
  427ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ca2:	mov    ds:0x2c54ae8,al
  427ca7:	pop    ebp
  427ca8:	push   ebx
  427ca9:	mov    ebx,0x8cc184d0
  427cae:	jbe    0x427c3c
  427cb0:	cmp    ch,dh
  427cb2:	pusha  
  427cb3:	jo     0x427ce7
  427cb5:	mov    ebx,0x921c67e8
  427cba:	mov    edx,0x9282170d
  427cbf:	mov    eax,0x1f26219f
  427cc4:	inc    edi
  427cc5:	(bad)  
  427cc6:	loop   0x427c96
  427cc8:	out    0x78,al
  427cca:	mov    ebp,0xcaaef6ac
  427ccf:	push   ebp
  427cd0:	pop    ebp
  427cd1:	mov    al,0xa8
  427cd3:	xor    BYTE PTR [eax],bh
  427cd5:	and    al,0x23
  427cd7:	ror    BYTE PTR [ecx+0x368d66ec],0x57
  427cde:	or     BYTE PTR [ecx-0x7a],bl
  427ce1:	shl    DWORD PTR [esp+ebx*4+0x552f3c85],cl
  427ce8:	out    0xa1,al
  427cea:	mov    BYTE PTR [esi-0x22],ch
  427ced:	fisub  WORD PTR [ecx+0x2d4ad2da]
  427cf3:	mov    dl,0x76
  427cf5:	and    DWORD PTR [eax+0x5ff2b526],edx
  427cfb:	imul   esp,esi,0xffffffc7
  427cfe:	or     dh,BYTE PTR [eax+0x6c]
  427d01:	in     al,dx
  427d02:	sbb    al,0x6f
  427d04:	mov    al,0x51
  427d06:	mov    dl,0x75
  427d08:	add    DWORD PTR [edx],ebx
  427d0a:	aam    0x16
  427d0c:	xor    BYTE PTR [ecx-0x4f2ab5c5],bl
  427d12:	in     eax,dx
  427d13:	cmp    BYTE PTR es:0x2dbbf0f0,dl
  427d1a:	inc    esi
  427d1b:	sbb    eax,0x42012187
  427d20:	mov    edx,0x66f43d50
  427d25:	dec    esi
  427d26:	out    0x80,eax
  427d28:	xor    eax,0x6b5cd336
  427d2d:	test   DWORD PTR [esp+eiz*8+0x63db0559],0x56b49e75
  427d38:	sbb    DWORD PTR [edi-0x76839cc0],esi
  427d3e:	out    0x43,eax
  427d40:	(bad)  
  427d41:	jp     0x427d8e
  427d43:	mov    eax,0x77fe5c8b
  427d48:	pop    ebx
  427d49:	sbb    BYTE PTR [eax-0x12b91fbc],ch
  427d4f:	pop    esp
  427d50:	pop    esp
  427d51:	inc    edx
  427d52:	jmp    0x8c97:0x331e6a6f
  427d59:	add    ah,0x3d
  427d5c:	mov    eax,ds:0x8a0ce41e
  427d61:	pop    ebx
  427d62:	inc    esi
  427d63:	test   al,0x10
  427d65:	ins    BYTE PTR es:[edi],dx
  427d66:	push   eax
  427d67:	mov    ebx,0x97723024
  427d6c:	mov    al,ds:0xd577b54d
  427d71:	lock and DWORD PTR [esi-0x31],ebx
  427d75:	ret    
  427d76:	inc    esp
  427d77:	mov    ecx,0x3caa9e41
  427d7c:	pop    ebp
  427d7d:	dec    eax
  427d7e:	cld    
  427d7f:	xchg   ecx,eax
  427d80:	mov    bl,0x27
  427d82:	and    eax,0x5af0330c
  427d87:	(bad)  
  427d89:	push   es
  427d8a:	(bad)  
  427d8b:	pop    ebp
  427d8c:	jl     0x427d71
  427d8e:	pop    esi
  427d8f:	adc    edi,DWORD PTR [esi]
  427d91:	(bad)  
  427d92:	(bad)  [ebp-0x38]
  427d95:	pop    ebx
  427d96:	inc    ebp
  427d97:	xor    BYTE PTR [ecx],al
  427d99:	or     ebx,edx
  427d9b:	cwde   
  427d9c:	push   ss
  427d9d:	jae    0x427dc7
  427d9f:	pop    es
  427da0:	jb     0x427dad
  427da2:	mov    ebx,0x7c14d892
  427da7:	inc    edx
  427da8:	inc    ecx
  427da9:	add    al,0xa4
  427dab:	inc    ecx
  427dac:	pop    edi
  427dad:	sbb    edi,ecx
  427daf:	ret    0xdc8e
  427db2:	mov    dh,0x8c
  427db4:	(bad)  
  427db5:	fild   WORD PTR [ecx+0x1e]
  427db8:	mov    ch,0x5d
  427dba:	je     0x427dd8
  427dbc:	fwait
  427dbd:	out    dx,al
  427dbe:	and    DWORD PTR [edi+0xd44b29b],esi
  427dc4:	adc    eax,0x6c561ec0
  427dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dca:	loope  0x427e3a
  427dcc:	out    dx,al
  427dcd:	fs mov edx,0x1b050915
  427dd3:	enter  0x5fde,0xe7
  427dd7:	inc    esi
  427dd8:	xchg   BYTE PTR [eax+0x5974c8f0],al
  427dde:	sub    DWORD PTR [ecx],esp
  427de0:	and    eax,0x610b5381
  427de5:	or     BYTE PTR [edx],dh
  427de7:	mov    DWORD PTR [ebx+0x3c5c8df6],esp
  427ded:	bound  edi,QWORD PTR [esi+0x74]
  427df0:	in     eax,dx
  427df1:	cmp    BYTE PTR [ebx+eax*4],0xad
  427df5:	mov    ?,edx
  427df7:	mov    ah,BYTE PTR gs:[ecx+0x42]
  427dfb:	xchg   ebp,eax
  427dfc:	pop    eax
  427dfd:	rcr    BYTE PTR [ecx-0x343ef7df],cl
  427e03:	clc    
  427e04:	aas    
  427e05:	inc    esp
  427e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e07:	xor    dh,BYTE PTR [edi+0x0]
  427e0a:	and    bl,dh
  427e0c:	pop    ds
  427e0d:	or     esp,DWORD PTR [ebp+ecx*4-0x4e0d3cef]
  427e14:	xor    al,0xde
  427e16:	xor    eax,0xd3a4540
  427e1b:	int    0x23
  427e1d:	mov    ds:0xcb97839e,al
  427e22:	(bad)  [esi]
  427e24:	add    DWORD PTR [eax-0x2b9ccd65],ecx
  427e2a:	cmp    eax,0x75740a88
  427e2f:	push   edx
  427e30:	jmp    0xb70e:0xdd1bcb81
  427e37:	sbb    ecx,DWORD PTR [edi]
  427e39:	(bad)
  427e3d:	adc    al,0x3a
  427e3f:	ins    BYTE PTR es:[edi],dx
  427e40:	scas   eax,DWORD PTR es:[edi]
  427e41:	and    BYTE PTR [ebp+0xd548964],bl
  427e47:	push   ebx
  427e48:	xlat   BYTE PTR ds:[ebx]
  427e49:	adc    BYTE PTR [edx+0x6c2fc49c],ch
  427e4f:	pop    ebx
  427e50:	mov    ah,0xd3
  427e52:	icebp  
  427e53:	push   cs
  427e54:	fnstenv [edx+ecx*8+0x51]
  427e58:	jne    0x427e8f
  427e5a:	(bad)  
  427e5b:	mov    edx,0xe75ec90
  427e60:	test   eax,0xef5f1f01
  427e65:	repnz cmp ah,0x8d
  427e69:	pop    esi
  427e6a:	out    0xad,eax
  427e6c:	mov    ecx,0xe9097fa5
  427e71:	in     al,dx
  427e72:	xchg   ebp,edi
  427e74:	mov    ebx,0x2b966a58
  427e79:	js     0x427e9e
  427e7b:	enter  0xdc86,0x0
  427e7f:	das    
  427e80:	inc    eax
  427e81:	fs iret 
  427e83:	and    ch,ah
  427e85:	mov    dl,0x91
  427e87:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  427e89:	test   DWORD PTR [ebx+edx*8-0xa],ecx
  427e8d:	push   ebp
  427e8e:	mov    ebx,0x7ed9bd2d
  427e93:	stos   DWORD PTR es:[edi],eax
  427e94:	loopne 0x427ee4
  427e96:	ds jb  0x427eaa
  427e99:	out    dx,eax
  427e9a:	sar    BYTE PTR [ebx],0x3b
  427e9d:	push   ebx
  427e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e9f:	pop    ss
  427ea0:	int    0x66
  427ea2:	mov    ecx,0xae76df90
  427ea7:	add    al,0x67
  427ea9:	out    dx,eax
  427eaa:	fldcw  WORD PTR [eax]
  427eac:	ss add al,0xc9
  427eaf:	inc    edi
  427eb0:	sub    al,0x70
  427eb2:	stos   BYTE PTR es:[edi],al
  427eb3:	pop    edi
  427eb4:	cdq    
  427eb5:	arpl   WORD PTR [edx-0x6d],sp
  427eb8:	sub    esp,DWORD PTR [edx]
  427eba:	pop    es
  427ebb:	jb     0x427efa
  427ebd:	loop   0x427f02
  427ebf:	cli    
  427ec0:	inc    eax
  427ec1:	pop    eax
  427ec2:	mov    eax,ds:0xd323e517
  427ec7:	cmp    eax,0x5d9782e
  427ecc:	push   es
  427ecd:	call   0x33a7:0x30e7affe
  427ed4:	cs sub eax,0xbd94aefa
  427eda:	jbe    0x427ee8
  427edc:	push   ds
  427edd:	add    bl,BYTE PTR [eax-0x7f]
  427ee0:	xchg   ch,bh
  427ee2:	adc    DWORD PTR [eax],ebp
  427ee4:	lds    esi,FWORD PTR [edx-0x6ac1b6a3]
  427eea:	or     al,0x2
  427eec:	fwait
  427eed:	jecxz  0x427ef4
  427eef:	cmp    ch,BYTE PTR [edi-0x80]
  427ef2:	std    
  427ef3:	xor    eax,0xeb03ce7e
  427ef8:	and    bh,bh
  427efa:	js     0x427ee6
  427efc:	sub    DWORD PTR [edi+0x73232b18],ebx
  427f02:	repnz mov dl,BYTE PTR ss:[bx+di-0x28]
  427f08:	mov    ch,0xb9
  427f0a:	push   esi
  427f0b:	pop    esi
  427f0c:	mov    ebx,0xcb0f5cc3
  427f11:	retf   
  427f12:	add    al,0x60
  427f14:	es and eax,0xe20f1536
  427f1a:	cwde   
  427f1b:	mov    ch,0xb4
  427f1d:	mov    al,ds:0xb7bbe77a
  427f22:	enter  0x2b83,0x2c
  427f26:	xchg   esi,eax
  427f27:	add    eax,DWORD PTR [eax+eax*1-0x3bd738f1]
  427f2e:	add    BYTE PTR [ebx+0x1],dh
  427f31:	dec    esi
  427f32:	mov    WORD PTR [edi],ds
  427f34:	inc    esi
  427f35:	or     al,0xe1
  427f37:	shr    BYTE PTR [edx+0x66],cl
  427f3a:	inc    ebx
  427f3b:	pop    ecx
  427f3c:	mov    ebp,0x8d7f46b2
  427f41:	rol    ebp,0x6a
  427f44:	xor    BYTE PTR [ebp+0x73],dl
  427f47:	pop    ebx
  427f48:	gs pop esi
  427f4a:	mov    bl,0xb3
  427f4c:	leave  
  427f4d:	jns    0x427f13
  427f4f:	js     0x427f4f
  427f51:	jo     0x427f5d
  427f53:	mov    WORD PTR [eax],es
	...
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0x7f157dd
  427f71:	into   
  427f72:	hlt    
  427f73:	add    DWORD PTR [eax],eax
  427f75:	mov    ds:0xec000003,eax
  427f7a:	sar    BYTE PTR [esi+0x79],cl
  427f7d:	enter  0x2e18,0x5c
  427f81:	adc    al,0xcf
  427f83:	scas   eax,DWORD PTR es:[edi]
  427f84:	mov    al,ds:0x6b7f5354
  427f89:	mov    ebx,0xb1d69fb6
  427f8e:	or     DWORD PTR [esi-0x6b],esp
  427f91:	inc    ecx
  427f92:	js     0x427f3e
  427f94:	ret    0xea9f
  427f97:	inc    ebp
  427f98:	(bad)  
  427f99:	jb     0x428009
  427f9b:	fist   WORD PTR [ebx-0xde824ab]
  427fa1:	sub    DWORD PTR [esi+edx*4],0xb67a264e
  427fa8:	push   es
  427fa9:	(bad)  
  427faa:	cli    
  427fab:	fisttp WORD PTR [ebp-0x6051dc79]
  427fb1:	es sbb eax,0x87b3ebe2
  427fb7:	and    al,0xec
  427fb9:	aam    0xcf
  427fbb:	daa    
  427fbc:	mov    ch,0x2d
  427fbe:	rcr    DWORD PTR [esi],1
  427fc0:	bound  ebp,QWORD PTR [ecx-0x70]
  427fc3:	mov    bl,0x66
  427fc5:	imul   edx
  427fc7:	cmc    
  427fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fca:	imul   esp,DWORD PTR [ebx],0x41
  427fcd:	in     al,0x39
  427fcf:	(bad)  
  427fd0:	jle    0x427fd1
  427fd2:	test   DWORD PTR [ecx-0x51423f05],eax
  427fd8:	pop    esp
  427fd9:	jl     0x427fa2
  427fdb:	sub    al,0x87
  427fdd:	daa    
  427fde:	ins    DWORD PTR es:[edi],dx
  427fdf:	xor    bh,BYTE PTR [edi-0x8]
  427fe2:	xchg   edx,ebp
  427fe4:	std    
  427fe5:	mov    eax,DWORD PTR [ecx]
  427fe7:	shr    DWORD PTR [esp+eax*4+0x78d8504e],0xbc
  427fef:	cdq    
  427ff0:	xchg   ebp,eax
  427ff1:	fnstenv es:[edx-0x70e77d21]
  427ff8:	push   es
  427ff9:	(bad)  
  427ffb:	call   FWORD PTR [esi-0x7e]
  427ffe:	pop    es
  427fff:	(bad)  
  428000:	ins    DWORD PTR es:[edi],dx
  428001:	inc    ebx
  428002:	iret   
  428003:	(bad)  
  428005:	out    0xac,al
  428007:	in     al,0x26
  428009:	xchg   DWORD PTR [eax-0x48],edx
  42800c:	xchg   ecx,eax
  42800d:	imul   edx,DWORD PTR [eax-0x50f910e2],0x5e1bd804
  428017:	jae    0x427fb5
  428019:	adc    DWORD PTR [esi],edx
  42801b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42801c:	(bad)  
  42801d:	and    eax,0xf5a85af3
  428022:	or     al,0x88
  428024:	jnp    0x427fe5
  428026:	aaa    
  428027:	cwde   
  428028:	sbb    DWORD PTR [esi],esi
  42802a:	fisub  DWORD PTR [ecx+ebx*8]
  42802d:	pop    edx
  42802e:	mov    al,ds:0xd3dca91a
  428033:	in     al,dx
  428034:	xor    al,0x72
  428036:	cmp    eax,esi
  428038:	dec    edi
  428039:	or     al,0xc7
  42803b:	ror    DWORD PTR [ecx+ebx*8-0x6b],0x92
  428040:	std    
  428041:	in     al,0x7a
  428043:	and    eax,0x698b2f26
  428048:	ins    BYTE PTR es:[edi],dx
  428049:	add    bh,BYTE PTR [ebx]
  42804b:	icebp  
  42804c:	mov    ch,0xb3
  42804e:	jge    0x42804e
  428050:	(bad)  
  428051:	gs xchg esi,eax
  428053:	ins    DWORD PTR es:[edi],dx
  428054:	jbe    0x428092
  428056:	push   esp
  428057:	push   esp
  428059:	adc    BYTE PTR [ecx-0x71],ch
  42805c:	adc    BYTE PTR [ecx-0x1c],0x32
  428060:	mov    eax,ecx
  428062:	mov    bl,0x57
  428064:	ins    BYTE PTR es:[edi],dx
  428065:	into   
  428066:	adc    al,0xda
  428068:	sub    dl,0xca
  42806b:	add    eax,0xac5c9877
  428070:	jmp    0x4280b2
  428072:	test   BYTE PTR [edx+esi*8+0xa],bl
  428076:	jp     0x4280b0
  428078:	fbld   TBYTE PTR [ebx]
  42807a:	sbb    BYTE PTR [ebx],ah
  42807c:	xchg   edx,eax
  42807d:	mov    ecx,eax
  42807f:	pop    ecx
  428080:	sub    al,0x85
  428082:	sahf   
  428083:	sub    DWORD PTR [ecx],esp
  428085:	push   ds
  428086:	fist   WORD PTR [eax-0x61]
  428089:	repz jle 0x428074
  42808c:	dec    edx
  42808d:	dec    esi
  42808e:	pop    ebp
  42808f:	push   esi
  428090:	inc    edx
  428091:	mov    ebx,0x5c55e557
  428096:	inc    eax
  428097:	int    0x5b
  428099:	(bad)  
  42809a:	push   esi
  42809b:	xchg   esp,eax
  42809c:	ins    DWORD PTR es:[edi],dx
  42809d:	push   edi
  42809e:	jmp    0x8cde:0xd4ccefde
  4280a5:	into   
  4280a6:	and    edx,DWORD PTR [eax]
  4280a8:	adc    cl,BYTE PTR [edx-0x59]
  4280ab:	add    eax,0x96d62c8e
  4280b0:	mov    ebx,0xdabc0ff8
  4280b5:	add    DWORD PTR [edx],esi
  4280b7:	add    DWORD PTR [ebp-0x7031cbd9],esp
  4280bd:	fild   DWORD PTR [ebp+0x4f]
  4280c0:	jecxz  0x4280e9
  4280c2:	mov    eax,0x742a8cb3
  4280c7:	sbb    eax,0x32e34161
  4280cc:	push   edi
  4280cd:	inc    ebp
  4280ce:	push   ecx
  4280cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280d0:	addr16 aad 0xd0
  4280d3:	mov    ecx,0x79d8f254
  4280d8:	test   BYTE PTR [edx+0x66f48c22],ch
  4280de:	enter  0xcdae,0x1c
  4280e2:	jecxz  0x428078
  4280e4:	jecxz  0x428135
  4280e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280e7:	(bad)
  4280ea:	rcl    ebx,1
  4280ec:	or     bh,dl
  4280ee:	mov    al,ds:0x10f61326
  4280f3:	aas    
  4280f4:	add    eax,DWORD PTR [edi+0x12]
  4280f7:	push   es
  4280f8:	stc    
  4280f9:	xchg   DWORD PTR [edi-0xf],ebx
  4280fc:	xchg   ecx,eax
  4280fd:	mov    ebp,0x38366de
  428102:	sub    edx,ebx
  428104:	xchg   edx,eax
  428105:	loopne 0x428170
  428107:	add    BYTE PTR [edi+0x7c],al
  42810a:	push   eax
  42810b:	inc    eax
  42810c:	dec    esi
  42810d:	into   
  42810e:	mov    ecx,0x34a0d55a
  428113:	cmp    al,0x8f
  428115:	mov    ah,0xe1
  428117:	fsub   QWORD PTR [esi-0x392a6db8]
  42811d:	dec    esi
  42811e:	push   edx
  42811f:	lea    ebx,[eax+esi*4]
  428122:	sbb    eax,0xab1cf7f0
  428127:	jae    0x428158
  428129:	inc    ebx
  42812a:	or     edx,ebp
  42812c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42812d:	xor    dh,BYTE PTR [edi+0x66]
  428130:	add    ah,BYTE PTR [ebx+0x55]
  428133:	jle    0x4280e1
  428135:	xchg   esp,eax
  428136:	jae    0x428152
  428138:	xchg   edx,eax
  428139:	push   ds
  42813a:	push   ss
  42813b:	lahf   
  42813c:	out    dx,al
  42813d:	lods   al,BYTE PTR ds:[esi]
  42813e:	fild   WORD PTR [eax+0x4c762d15]
  428144:	dec    eax
  428145:	ret    0xe0f8
  428148:	pop    eax
  428149:	add    dl,BYTE PTR [ecx+0x3]
  42814c:	mul    DWORD PTR [esi-0x1e]
  42814f:	sub    DWORD PTR [ebp+0x128063e],eax
  428155:	ins    BYTE PTR es:[edi],dx
  428156:	out    dx,eax
  428157:	xchg   ecx,eax
  428158:	inc    esi
  428159:	mov    edx,0x5f4f53a8
  42815e:	dec    esi
  42815f:	xchg   edi,eax
  428160:	nop
  428161:	fdivr  DWORD PTR [edx]
  428163:	out    dx,al
  428164:	or     eax,ebp
  428166:	in     eax,dx
  428167:	gs stos DWORD PTR es:[edi],eax
  428169:	lock ss pop eax
  42816c:	repnz hlt 
  42816e:	inc    edi
  42816f:	ins    BYTE PTR es:[edi],dx
  428170:	inc    ebp
  428171:	mov    cl,0xb8
  428173:	push   0x5a
  428175:	jp     0x4281b3
  428177:	or     edx,DWORD PTR [ecx-0x286499f]
  42817d:	aam    0x18
  42817f:	mov    dh,0x87
  428181:	retf   0x7967
  428184:	sbb    bh,BYTE PTR [ebx-0x454fb9eb]
  42818a:	popa   
  42818b:	fwait
  42818c:	xor    al,0x3d
  42818e:	push   ebx
  42818f:	loop   0x4281b2
  428191:	outs   dx,DWORD PTR ds:[esi]
  428192:	into   
  428193:	push   0xffffffe1
  428195:	cmp    al,dh
  428197:	inc    ebp
  428198:	xchg   BYTE PTR [esi],bh
  42819a:	jle    0x42817c
  42819c:	and    ch,BYTE PTR es:[eax*4+0x2f117dd8]
  4281a4:	fnsave [edx]
  4281a6:	inc    ebx
  4281a7:	call   0xe39cab4a
  4281ac:	daa    
  4281ad:	sbb    eax,0xbb10b633
  4281b2:	(bad)  
  4281b3:	in     eax,dx
  4281b4:	fwait
  4281b5:	pop    eax
  4281b6:	pop    esi
  4281b7:	int3   
  4281b8:	xchg   edx,eax
  4281b9:	in     eax,0xc3
  4281bb:	inc    ebx
  4281bc:	(bad)  
  4281bd:	xlat   BYTE PTR ds:[ebx]
  4281be:	sbb    DWORD PTR [edx+0x1],edx
  4281c1:	outs   dx,DWORD PTR ds:[esi]
  4281c2:	and    DWORD PTR [ecx+ebx*1],esi
  4281c5:	pop    ss
  4281c6:	sub    dl,al
  4281c8:	cmp    DWORD PTR [ebx+eiz*2+0x92b20fd],ecx
  4281cf:	imul   ecx,ecx,0xb51a545a
  4281d5:	or     al,0xbf
  4281d7:	mov    al,BYTE PTR [esi+0x27]
  4281da:	push   ss
  4281db:	xlat   BYTE PTR ds:[ebx]
  4281dc:	adc    al,0xb7
  4281de:	mov    dl,0xef
  4281e0:	test   eax,0x5c3160d4
  4281e5:	push   ebp
  4281e6:	jb     0x4281c3
  4281e8:	fisttp WORD PTR ds:0x22a6713
  4281ee:	ret    0x1612
  4281f1:	(bad)
  4281f5:	push   es
  4281f6:	outs   dx,BYTE PTR ds:[esi]
  4281f7:	pop    ss
  4281f8:	mov    bh,0xe6
  4281fa:	retf   
  4281fb:	and    al,BYTE PTR [edx-0x65fa7509]
  428201:	cli    
  428202:	xor    BYTE PTR [ebp+0x76c3e2ab],ch
  428208:	pushf  
  428209:	inc    ecx
  42820a:	jecxz  0x4281f3
  42820c:	jmp    0x4281c2
  42820e:	xor    al,0xba
  428210:	outs   dx,BYTE PTR ds:[esi]
  428211:	push   es
  428212:	call   0xd4f0:0x764bedeb
  428219:	bound  edi,QWORD PTR ds:0x3ac24b4b
  42821f:	sub    eax,0x37612c61
  428224:	daa    
  428225:	sar    BYTE PTR [ecx+0x0],0x3f
  428229:	mov    bl,0xe9
  42822b:	inc    ebx
  42822c:	mov    bh,0x6
  42822e:	cmp    eax,0xe0b65286
  428233:	add    eax,0xf238aebc
  428238:	pop    ebx
  428239:	xor    ebx,edi
  42823b:	lods   eax,DWORD PTR ds:[esi]
  42823c:	or     al,0x8d
  42823e:	ds repz ret 0x3f5f
  428243:	les    eax,FWORD PTR [eax]
  428245:	aam    0xff
  428247:	jp     0x428297
  428249:	xchg   ecx,eax
  42824a:	sub    DWORD PTR [ecx-0x3e15c1f1],ebx
  428250:	sbb    DWORD PTR [edx],edx
  428252:	xor    BYTE PTR [ebp-0x6936021a],bh
  428258:	sub    ch,0xc3
  42825b:	mov    ebx,0xb215ad1c
  428260:	pop    es
  428261:	push   eax
  428262:	inc    esi
  428263:	or     al,0x2f
  428265:	out    0x56,eax
  428267:	mov    ebx,ss
  428269:	mov    cs:0x1d5fd712,eax
  42826f:	stos   DWORD PTR es:[edi],eax
  428270:	pop    eax
  428271:	arpl   si,ax
  428273:	jb     0x4282c6
  428275:	in     eax,0x88
  428277:	out    dx,al
  428278:	push   edi
  428279:	sub    BYTE PTR [esi],bh
  42827b:	cdq    
  42827c:	mov    esp,0xf6df9448
  428281:	mov    cl,0xb1
  428283:	scas   eax,DWORD PTR es:[edi]
  428284:	jecxz  0x4282f7
  428286:	jo     0x4282f4
  428288:	push   edi
  428289:	cli    
  42828a:	pop    esp
  42828b:	add    ebp,ebp
  42828d:	in     al,dx
  42828e:	xchg   esi,eax
  42828f:	xor    al,0x92
  428291:	add    BYTE PTR [ebx],bl
  428293:	push   eax
  428294:	jno    0x4282e3
  428296:	in     eax,0xfe
  428298:	out    0x14,eax
  42829a:	mov    BYTE PTR [ecx+eax*8+0x58711fe2],ah
  4282a1:	repnz adc bl,0x47
  4282a5:	mov    ebx,0x9a6eb8d
  4282aa:	mov    WORD PTR [ecx-0x68],gs
  4282ad:	ficomp WORD PTR [edi+0x6830677d]
  4282b3:	in     eax,0x9b
  4282b5:	stc    
  4282b6:	xchg   edx,eax
  4282b7:	data16 add ah,BYTE PTR [esi+0x2039e161]
  4282be:	lahf   
  4282bf:	shr    DWORD PTR ds:0xcafc5de5,0x99
  4282c6:	jmp    FWORD PTR [edx+0x6609f37d]
  4282cc:	mov    esp,0xdeea36af
  4282d1:	jmp    0xb5ae:0x7bbbb9cd
  4282d8:	adc    al,0xfd
  4282da:	dec    ecx
  4282db:	leave  
  4282dc:	mov    ds:0xb72ca15d,eax
  4282e1:	outs   dx,DWORD PTR ds:[esi]
  4282e2:	sub    eax,0x5d81b505
  4282e7:	cmp    DWORD PTR [ecx+0x11],ebp
  4282ea:	pop    edi
  4282eb:	push   cs
  4282ec:	(bad)  
  4282ed:	dec    esi
  4282ee:	in     eax,dx
  4282ef:	inc    edi
  4282f0:	hlt    
  4282f1:	mov    dh,0xc6
  4282f3:	inc    ebx
  4282f4:	inc    ecx
  4282f5:	imul   eax,DWORD PTR [ebp-0x5e],0x69
  4282f9:	xor    al,0x35
  4282fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282fc:	and    dl,BYTE PTR [ebp-0x4704f361]
  428302:	xor    ch,BYTE PTR [eax-0x5ef9a4e4]
  428308:	or     eax,0x38bbd4f8
  42830d:	sbb    bl,BYTE PTR [ecx+ebp*4-0x36]
  428311:	add    eax,0xadfe8cac
  428316:	sub    ebx,DWORD PTR [ebp+ecx*4+0x7]
  42831a:	mov    eax,0x11
	...
