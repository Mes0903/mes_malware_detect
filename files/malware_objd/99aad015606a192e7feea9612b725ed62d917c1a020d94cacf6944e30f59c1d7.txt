
99aad015606a192e7feea9612b725ed62d917c1a020d94cacf6944e30f59c1d7.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	push   esi
64001001:	mov    esi,DWORD PTR [esp+0x8]
64001005:	test   esi,esi
64001007:	je     0x64001038
64001009:	mov    eax,DWORD PTR [esp+0xc]
6400100d:	test   eax,eax
6400100f:	je     0x64001038
64001011:	mov    ecx,DWORD PTR [esp+0x10]
64001015:	mov    edx,DWORD PTR [esp+0x14]
64001019:	push   0x0
6400101b:	push   0x0
6400101d:	push   ecx
6400101e:	push   esi
6400101f:	push   0xffffffff
64001021:	push   eax
64001022:	push   0x0
64001024:	push   edx
64001025:	mov    BYTE PTR [esi],0x0
64001028:	call   DWORD PTR ds:0x64024010
6400102e:	neg    eax
64001030:	sbb    eax,eax
64001032:	and    eax,esi
64001034:	pop    esi
64001035:	ret    0x10
64001038:	xor    eax,eax
6400103a:	pop    esi
6400103b:	ret    0x10
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402bc3c
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x64013832
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	mov    eax,DWORD PTR [esp+0x4]
64001064:	cmp    eax,0x50
64001067:	ja     0x6400108b
64001069:	movzx  ecx,BYTE PTR [eax+0x640010a8]
64001070:	jmp    DWORD PTR [ecx*4+0x64001098]
64001077:	push   0x8007000e
6400107c:	call   0x64001040
64001081:	push   0x80070057
64001086:	call   0x64001040
6400108b:	push   0x80004005
64001090:	call   0x64001040
64001095:	ret    
64001096:	mov    edi,edi
64001098:	xchg   ebp,eax
64001099:	adc    BYTE PTR [eax],al
6400109b:	fs ja  0x640010ae
6400109e:	add    BYTE PTR [ecx+eax*4+0x10],ah
640010a2:	add    BYTE PTR [ebx+ecx*4+0x10],ah
640010a6:	add    BYTE PTR [eax+eax*1+0x3],ah
640010aa:	add    eax,DWORD PTR [ebx]
640010ac:	add    eax,DWORD PTR [ebx]
640010ae:	add    eax,DWORD PTR [ebx]
640010b0:	add    eax,DWORD PTR [ebx]
640010b2:	add    eax,DWORD PTR [ebx]
640010b4:	add    DWORD PTR [ebx],eax
640010b6:	add    eax,DWORD PTR [ebx]
640010b8:	add    eax,DWORD PTR [ebx]
640010ba:	add    eax,DWORD PTR [ebx]
640010bc:	add    eax,DWORD PTR [ebx]
640010be:	add    al,BYTE PTR [ebx]
640010c0:	add    eax,DWORD PTR [ebx]
640010c2:	add    eax,DWORD PTR [ebx]
640010c4:	add    eax,DWORD PTR [ebx]
640010c6:	add    eax,DWORD PTR [ebx]
640010c8:	add    eax,DWORD PTR [ebx]
640010ca:	add    al,BYTE PTR [ebx]
640010cc:	add    eax,DWORD PTR [ebx]
640010ce:	add    eax,DWORD PTR [ebx]
640010d0:	add    eax,DWORD PTR [ebx]
640010d2:	add    eax,DWORD PTR [ebx]
640010d4:	add    eax,DWORD PTR [ebx]
640010d6:	add    eax,DWORD PTR [ebx]
640010d8:	add    eax,DWORD PTR [ebx]
640010da:	add    eax,DWORD PTR [ebx]
640010dc:	add    eax,DWORD PTR [ebx]
640010de:	add    eax,DWORD PTR [ebx]
640010e0:	add    eax,DWORD PTR [ebx]
640010e2:	add    eax,DWORD PTR [ebx]
640010e4:	add    eax,DWORD PTR [ebx]
640010e6:	add    eax,DWORD PTR [ebx]
640010e8:	add    eax,DWORD PTR [ebx]
640010ea:	add    eax,DWORD PTR [ebx]
640010ec:	add    eax,DWORD PTR [ebx]
640010ee:	add    eax,DWORD PTR [ebx]
640010f0:	add    eax,DWORD PTR [ebx]
640010f2:	add    eax,DWORD PTR [ebx]
640010f4:	add    eax,DWORD PTR [ebx]
640010f6:	add    eax,DWORD PTR [ebx]
640010f8:	add    ah,cl
640010fa:	int3   
640010fb:	int3   
640010fc:	int3   
640010fd:	int3   
640010fe:	int3   
640010ff:	int3   
64001100:	push   ebx
64001101:	mov    ebx,DWORD PTR [esp+0x8]
64001105:	push   edi
64001106:	mov    edi,DWORD PTR [esp+0x10]
6400110a:	push   edi
6400110b:	push   ebx
6400110c:	call   DWORD PTR ds:0x6402401c
64001112:	test   eax,eax
64001114:	jne    0x64001119
64001116:	pop    edi
64001117:	pop    ebx
64001118:	ret    
64001119:	push   esi
6400111a:	push   eax
6400111b:	call   DWORD PTR ds:0x64024018
64001121:	mov    esi,eax
64001123:	test   esi,esi
64001125:	je     0x64001154
64001127:	push   edi
64001128:	push   ebx
64001129:	call   DWORD PTR ds:0x64024014
6400112f:	mov    ecx,DWORD PTR [esp+0x18]
64001133:	add    eax,esi
64001135:	and    ecx,0xf
64001138:	jbe    0x64001150
6400113a:	lea    ebx,[ebx+0x0]
64001140:	cmp    esi,eax
64001142:	jae    0x64001154
64001144:	sub    ecx,0x1
64001147:	movzx  edx,WORD PTR [esi]
6400114a:	lea    esi,[esi+edx*2+0x2]
6400114e:	jne    0x64001140
64001150:	cmp    esi,eax
64001152:	jb     0x6400115a
64001154:	pop    esi
64001155:	pop    edi
64001156:	xor    eax,eax
64001158:	pop    ebx
64001159:	ret    
6400115a:	mov    ax,WORD PTR [esi]
6400115d:	neg    ax
64001160:	sbb    eax,eax
64001162:	and    eax,esi
64001164:	pop    esi
64001165:	pop    edi
64001166:	pop    ebx
64001167:	ret    
64001168:	int3   
64001169:	int3   
6400116a:	int3   
6400116b:	int3   
6400116c:	int3   
6400116d:	int3   
6400116e:	int3   
6400116f:	int3   
64001170:	push   ebx
64001171:	push   ebp
64001172:	push   esi
64001173:	push   edi
64001174:	xor    edi,edi
64001176:	push   edi
64001177:	mov    ecx,0x64038df0
6400117c:	call   0x640132b6
64001181:	mov    esi,eax
64001183:	test   esi,esi
64001185:	lea    ebp,[edi+0x1]
64001188:	je     0x640011d7
6400118a:	mov    ebx,DWORD PTR [esp+0x14]
6400118e:	mov    edi,edi
64001190:	test   edi,edi
64001192:	jne    0x640011d7
64001194:	mov    eax,DWORD PTR [esp+0x18]
64001198:	mov    ecx,ebx
6400119a:	shr    ecx,0x4
6400119d:	add    ecx,0x1
640011a0:	push   eax
640011a1:	movzx  edx,cx
640011a4:	push   edx
640011a5:	push   0x6
640011a7:	push   esi
640011a8:	call   DWORD PTR ds:0x64024024
640011ae:	test   eax,eax
640011b0:	je     0x640011c3
640011b2:	push   ebx
640011b3:	push   eax
640011b4:	push   esi
640011b5:	call   0x64001100
640011ba:	mov    edi,eax
640011bc:	add    esp,0xc
640011bf:	test   edi,edi
640011c1:	jne    0x640011de
640011c3:	push   ebp
640011c4:	mov    ecx,0x64038df0
640011c9:	call   0x640132b6
640011ce:	mov    esi,eax
640011d0:	add    ebp,0x1
640011d3:	test   esi,esi
640011d5:	jne    0x64001190
640011d7:	pop    edi
640011d8:	pop    esi
640011d9:	pop    ebp
640011da:	xor    eax,eax
640011dc:	pop    ebx
640011dd:	ret    
640011de:	pop    edi
640011df:	mov    eax,esi
640011e1:	pop    esi
640011e2:	pop    ebp
640011e3:	pop    ebx
640011e4:	ret    
640011e5:	int3   
640011e6:	int3   
640011e7:	int3   
640011e8:	int3   
640011e9:	int3   
640011ea:	int3   
640011eb:	int3   
640011ec:	int3   
640011ed:	int3   
640011ee:	int3   
640011ef:	int3   
640011f0:	mov    eax,DWORD PTR [esp+0x8]
640011f4:	ret    
640011f5:	int3   
640011f6:	int3   
640011f7:	int3   
640011f8:	int3   
640011f9:	int3   
640011fa:	int3   
640011fb:	int3   
640011fc:	int3   
640011fd:	int3   
640011fe:	int3   
640011ff:	int3   
64001200:	ret    
64001201:	int3   
64001202:	int3   
64001203:	int3   
64001204:	int3   
64001205:	int3   
64001206:	int3   
64001207:	int3   
64001208:	int3   
64001209:	int3   
6400120a:	int3   
6400120b:	int3   
6400120c:	int3   
6400120d:	int3   
6400120e:	int3   
6400120f:	int3   
64001210:	push   esi
64001211:	lea    eax,[esp+0x8]
64001215:	push   eax
64001216:	mov    esi,ecx
64001218:	call   0x6401361a
6400121d:	mov    DWORD PTR [esi],0x640242a4
64001223:	mov    eax,esi
64001225:	pop    esi
64001226:	ret    0x4
64001229:	int3   
6400122a:	int3   
6400122b:	int3   
6400122c:	int3   
6400122d:	int3   
6400122e:	int3   
6400122f:	int3   
64001230:	mov    DWORD PTR [ecx],0x640242a4
64001236:	jmp    0x640136d8
6400123b:	int3   
6400123c:	int3   
6400123d:	int3   
6400123e:	int3   
6400123f:	int3   
64001240:	push   esi
64001241:	mov    esi,ecx
64001243:	mov    DWORD PTR [esi],0x640242a4
64001249:	call   0x640136d8
6400124e:	test   BYTE PTR [esp+0x8],0x1
64001253:	je     0x6400125e
64001255:	push   esi
64001256:	call   0x64013604
6400125b:	add    esp,0x4
6400125e:	mov    eax,esi
64001260:	pop    esi
64001261:	ret    0x4
64001264:	int3   
64001265:	int3   
64001266:	int3   
64001267:	int3   
64001268:	int3   
64001269:	int3   
6400126a:	int3   
6400126b:	int3   
6400126c:	int3   
6400126d:	int3   
6400126e:	int3   
6400126f:	int3   
64001270:	mov    eax,DWORD PTR [esp+0xc]
64001274:	cmp    eax,0x4
64001277:	mov    ecx,DWORD PTR [esp+0x8]
6400127b:	mov    edx,DWORD PTR [esp+0x4]
6400127f:	push   esi
64001280:	push   edi
64001281:	jb     0x64001297
64001283:	mov    esi,DWORD PTR [edx]
64001285:	cmp    esi,DWORD PTR [ecx]
64001287:	jne    0x6400129b
64001289:	sub    eax,0x4
6400128c:	add    ecx,0x4
6400128f:	add    edx,0x4
64001292:	cmp    eax,0x4
64001295:	jae    0x64001283
64001297:	test   eax,eax
64001299:	je     0x640012f9
6400129b:	movzx  esi,BYTE PTR [edx]
6400129e:	movzx  edi,BYTE PTR [ecx]
640012a1:	sub    esi,edi
640012a3:	jne    0x640012ea
640012a5:	sub    eax,0x1
640012a8:	add    ecx,0x1
640012ab:	add    edx,0x1
640012ae:	test   eax,eax
640012b0:	je     0x640012f9
640012b2:	movzx  esi,BYTE PTR [edx]
640012b5:	movzx  edi,BYTE PTR [ecx]
640012b8:	sub    esi,edi
640012ba:	jne    0x640012ea
640012bc:	sub    eax,0x1
640012bf:	add    ecx,0x1
640012c2:	add    edx,0x1
640012c5:	test   eax,eax
640012c7:	je     0x640012f9
640012c9:	movzx  esi,BYTE PTR [edx]
640012cc:	movzx  edi,BYTE PTR [ecx]
640012cf:	sub    esi,edi
640012d1:	jne    0x640012ea
640012d3:	sub    eax,0x1
640012d6:	add    ecx,0x1
640012d9:	add    edx,0x1
640012dc:	test   eax,eax
640012de:	je     0x640012f9
640012e0:	movzx  esi,BYTE PTR [edx]
640012e3:	movzx  eax,BYTE PTR [ecx]
640012e6:	sub    esi,eax
640012e8:	je     0x640012f9
640012ea:	test   esi,esi
640012ec:	mov    eax,0x1
640012f1:	jg     0x640012fb
640012f3:	pop    edi
640012f4:	or     eax,0xffffffff
640012f7:	pop    esi
640012f8:	ret    
640012f9:	xor    eax,eax
640012fb:	pop    edi
640012fc:	pop    esi
640012fd:	ret    
640012fe:	int3   
640012ff:	int3   
64001300:	mov    eax,ecx
64001302:	mov    DWORD PTR [eax],0x0
64001308:	ret    
64001309:	int3   
6400130a:	int3   
6400130b:	int3   
6400130c:	int3   
6400130d:	int3   
6400130e:	int3   
6400130f:	int3   
64001310:	push   0xffffffff
64001312:	push   0x640230c8
64001317:	mov    eax,fs:0x0
6400131d:	push   eax
6400131e:	push   ecx
6400131f:	push   esi
64001320:	mov    eax,ds:0x64037644
64001325:	xor    eax,esp
64001327:	push   eax
64001328:	lea    eax,[esp+0xc]
6400132c:	mov    fs:0x0,eax
64001332:	mov    esi,ecx
64001334:	mov    DWORD PTR [esp+0x8],esi
64001338:	call   0x64013609
6400133d:	xor    eax,eax
6400133f:	mov    DWORD PTR [esp+0x14],eax
64001343:	lea    ecx,[esi+0xc]
64001346:	mov    DWORD PTR [esi],0x640242d4
6400134c:	push   0xffffffff
6400134e:	mov    DWORD PTR [ecx+0x14],eax
64001351:	mov    DWORD PTR [ecx+0x18],0xf
64001358:	push   eax
64001359:	mov    BYTE PTR [ecx+0x4],al
6400135c:	mov    eax,DWORD PTR [esp+0x24]
64001360:	push   eax
64001361:	call   0x64003310
64001366:	mov    eax,esi
64001368:	mov    ecx,DWORD PTR [esp+0xc]
6400136c:	mov    DWORD PTR fs:0x0,ecx
64001373:	pop    ecx
64001374:	pop    esi
64001375:	add    esp,0x10
64001378:	ret    0x4
6400137b:	int3   
6400137c:	int3   
6400137d:	int3   
6400137e:	int3   
6400137f:	int3   
64001380:	cmp    DWORD PTR [ecx+0x24],0x10
64001384:	jb     0x6400138a
64001386:	mov    eax,DWORD PTR [ecx+0x10]
64001389:	ret    
6400138a:	lea    eax,[ecx+0x10]
6400138d:	ret    
6400138e:	int3   
6400138f:	int3   
64001390:	push   esi
64001391:	mov    esi,ecx
64001393:	mov    DWORD PTR [esi],0x640242d4
64001399:	cmp    DWORD PTR [esi+0x24],0x10
6400139d:	jb     0x640013ab
6400139f:	mov    eax,DWORD PTR [esi+0x10]
640013a2:	push   eax
640013a3:	call   0x64013604
640013a8:	add    esp,0x4
640013ab:	xor    eax,eax
640013ad:	mov    DWORD PTR [esi+0x24],0xf
640013b4:	mov    DWORD PTR [esi+0x20],eax
640013b7:	mov    ecx,esi
640013b9:	mov    BYTE PTR [esi+0x10],al
640013bc:	call   0x640136d8
640013c1:	test   BYTE PTR [esp+0x8],0x1
640013c6:	je     0x640013d1
640013c8:	push   esi
640013c9:	call   0x64013604
640013ce:	add    esp,0x4
640013d1:	mov    eax,esi
640013d3:	pop    esi
640013d4:	ret    0x4
640013d7:	int3   
640013d8:	int3   
640013d9:	int3   
640013da:	int3   
640013db:	int3   
640013dc:	int3   
640013dd:	int3   
640013de:	int3   
640013df:	int3   
640013e0:	mov    eax,DWORD PTR [esp+0x4]
640013e4:	push   esi
640013e5:	push   eax
640013e6:	mov    esi,ecx
640013e8:	call   0x64001310
640013ed:	mov    DWORD PTR [esi],0x640242e0
640013f3:	mov    eax,esi
640013f5:	pop    esi
640013f6:	ret    0x4
640013f9:	int3   
640013fa:	int3   
640013fb:	int3   
640013fc:	int3   
640013fd:	int3   
640013fe:	int3   
640013ff:	int3   
64001400:	push   esi
64001401:	mov    esi,ecx
64001403:	mov    DWORD PTR [esi],0x640242d4
64001409:	cmp    DWORD PTR [esi+0x24],0x10
6400140d:	jb     0x6400141b
6400140f:	mov    eax,DWORD PTR [esi+0x10]
64001412:	push   eax
64001413:	call   0x64013604
64001418:	add    esp,0x4
6400141b:	xor    eax,eax
6400141d:	mov    DWORD PTR [esi+0x24],0xf
64001424:	mov    DWORD PTR [esi+0x20],eax
64001427:	mov    BYTE PTR [esi+0x10],al
6400142a:	mov    ecx,esi
6400142c:	pop    esi
6400142d:	jmp    0x640136d8
64001432:	int3   
64001433:	int3   
64001434:	int3   
64001435:	int3   
64001436:	int3   
64001437:	int3   
64001438:	int3   
64001439:	int3   
6400143a:	int3   
6400143b:	int3   
6400143c:	int3   
6400143d:	int3   
6400143e:	int3   
6400143f:	int3   
64001440:	push   0xffffffff
64001442:	push   0x64023098
64001447:	mov    eax,fs:0x0
6400144d:	push   eax
6400144e:	push   esi
6400144f:	mov    eax,ds:0x64037644
64001454:	xor    eax,esp
64001456:	push   eax
64001457:	lea    eax,[esp+0x8]
6400145b:	mov    fs:0x0,eax
64001461:	mov    esi,DWORD PTR [esp+0x18]
64001465:	mov    ecx,esi
64001467:	call   0x64013609
6400146c:	xor    eax,eax
6400146e:	mov    DWORD PTR [esp+0x10],eax
64001472:	lea    ecx,[esi+0xc]
64001475:	mov    DWORD PTR [esi],0x64029968
6400147b:	push   0xffffffff
6400147d:	mov    DWORD PTR [ecx+0x14],eax
64001480:	mov    DWORD PTR [ecx+0x18],0xf
64001487:	push   eax
64001488:	mov    BYTE PTR [ecx+0x4],al
6400148b:	mov    eax,DWORD PTR [esp+0x24]
6400148f:	push   eax
64001490:	call   0x64003310
64001495:	mov    eax,esi
64001497:	mov    ecx,DWORD PTR [esp+0x8]
6400149b:	mov    DWORD PTR fs:0x0,ecx
640014a2:	pop    ecx
640014a3:	pop    esi
640014a4:	add    esp,0xc
640014a7:	ret    0x8
640014aa:	int3   
640014ab:	int3   
640014ac:	int3   
640014ad:	int3   
640014ae:	int3   
640014af:	int3   
640014b0:	push   esi
640014b1:	mov    esi,ecx
640014b3:	mov    DWORD PTR [esi],0x64029968
640014b9:	cmp    DWORD PTR [esi+0x24],0x10
640014bd:	jb     0x640014cb
640014bf:	mov    eax,DWORD PTR [esi+0x10]
640014c2:	push   eax
640014c3:	call   0x64013604
640014c8:	add    esp,0x4
640014cb:	xor    eax,eax
640014cd:	mov    DWORD PTR [esi+0x24],0xf
640014d4:	mov    DWORD PTR [esi+0x20],eax
640014d7:	mov    BYTE PTR [esi+0x10],al
640014da:	mov    ecx,esi
640014dc:	pop    esi
640014dd:	jmp    0x640136d8
640014e2:	int3   
640014e3:	int3   
640014e4:	int3   
640014e5:	int3   
640014e6:	int3   
640014e7:	int3   
640014e8:	int3   
640014e9:	int3   
640014ea:	int3   
640014eb:	int3   
640014ec:	int3   
640014ed:	int3   
640014ee:	int3   
640014ef:	int3   
640014f0:	push   0xffffffff
640014f2:	push   0x64023068
640014f7:	mov    eax,fs:0x0
640014fd:	push   eax
640014fe:	push   ecx
640014ff:	push   esi
64001500:	push   edi
64001501:	mov    eax,ds:0x64037644
64001506:	xor    eax,esp
64001508:	push   eax
64001509:	lea    eax,[esp+0x10]
6400150d:	mov    fs:0x0,eax
64001513:	mov    esi,ecx
64001515:	mov    DWORD PTR [esp+0xc],esi
64001519:	mov    edi,DWORD PTR [esp+0x20]
6400151d:	push   edi
6400151e:	call   0x64013680
64001523:	xor    edx,edx
64001525:	mov    DWORD PTR [esp+0x18],edx
64001529:	push   0xffffffff
6400152b:	lea    ecx,[esi+0xc]
6400152e:	mov    DWORD PTR [esi],0x64029968
64001534:	lea    eax,[edi+0xc]
64001537:	push   edx
64001538:	mov    DWORD PTR [ecx+0x18],0xf
6400153f:	mov    DWORD PTR [ecx+0x14],edx
64001542:	push   eax
64001543:	mov    BYTE PTR [ecx+0x4],dl
64001546:	call   0x64003310
6400154b:	mov    eax,esi
6400154d:	mov    ecx,DWORD PTR [esp+0x10]
64001551:	mov    DWORD PTR fs:0x0,ecx
64001558:	pop    ecx
64001559:	pop    edi
6400155a:	pop    esi
6400155b:	add    esp,0x10
6400155e:	ret    0x4
64001561:	int3   
64001562:	int3   
64001563:	int3   
64001564:	int3   
64001565:	int3   
64001566:	int3   
64001567:	int3   
64001568:	int3   
64001569:	int3   
6400156a:	int3   
6400156b:	int3   
6400156c:	int3   
6400156d:	int3   
6400156e:	int3   
6400156f:	int3   
64001570:	push   ecx
64001571:	push   edi
64001572:	mov    edi,DWORD PTR [ecx]
64001574:	test   edi,edi
64001576:	je     0x640015b9
64001578:	push   0x0
6400157a:	lea    ecx,[esp+0x8]
6400157e:	call   0x64012fb7
64001583:	mov    eax,DWORD PTR [edi+0x4]
64001586:	test   eax,eax
64001588:	jbe    0x64001595
6400158a:	cmp    eax,0xffffffff
6400158d:	jae    0x64001595
6400158f:	add    eax,0xffffffff
64001592:	mov    DWORD PTR [edi+0x4],eax
64001595:	push   esi
64001596:	mov    esi,DWORD PTR [edi+0x4]
64001599:	neg    esi
6400159b:	sbb    esi,esi
6400159d:	not    esi
6400159f:	lea    ecx,[esp+0x8]
640015a3:	and    esi,edi
640015a5:	call   0x64012fd8
640015aa:	test   esi,esi
640015ac:	je     0x640015b8
640015ae:	mov    eax,DWORD PTR [esi]
640015b0:	mov    edx,DWORD PTR [eax]
640015b2:	push   0x1
640015b4:	mov    ecx,esi
640015b6:	call   edx
640015b8:	pop    esi
640015b9:	pop    edi
640015ba:	pop    ecx
640015bb:	ret    
640015bc:	int3   
640015bd:	int3   
640015be:	int3   
640015bf:	int3   
640015c0:	mov    eax,DWORD PTR [esp+0x4]
640015c4:	push   esi
640015c5:	push   eax
640015c6:	mov    esi,ecx
640015c8:	call   0x640015e0
640015cd:	mov    DWORD PTR [esi],0x640242ec
640015d3:	mov    eax,esi
640015d5:	pop    esi
640015d6:	ret    0x4
640015d9:	int3   
640015da:	int3   
640015db:	int3   
640015dc:	int3   
640015dd:	int3   
640015de:	int3   
640015df:	int3   
640015e0:	push   0xffffffff
640015e2:	push   0x64023038
640015e7:	mov    eax,fs:0x0
640015ed:	push   eax
640015ee:	push   ecx
640015ef:	push   esi
640015f0:	push   edi
640015f1:	mov    eax,ds:0x64037644
640015f6:	xor    eax,esp
640015f8:	push   eax
640015f9:	lea    eax,[esp+0x10]
640015fd:	mov    fs:0x0,eax
64001603:	mov    esi,ecx
64001605:	mov    DWORD PTR [esp+0xc],esi
64001609:	mov    edi,DWORD PTR [esp+0x20]
6400160d:	push   edi
6400160e:	call   0x64013680
64001613:	xor    edx,edx
64001615:	mov    DWORD PTR [esp+0x18],edx
64001619:	push   0xffffffff
6400161b:	lea    ecx,[esi+0xc]
6400161e:	mov    DWORD PTR [esi],0x640242d4
64001624:	lea    eax,[edi+0xc]
64001627:	push   edx
64001628:	mov    DWORD PTR [ecx+0x18],0xf
6400162f:	mov    DWORD PTR [ecx+0x14],edx
64001632:	push   eax
64001633:	mov    BYTE PTR [ecx+0x4],dl
64001636:	call   0x64003310
6400163b:	mov    eax,esi
6400163d:	mov    ecx,DWORD PTR [esp+0x10]
64001641:	mov    DWORD PTR fs:0x0,ecx
64001648:	pop    ecx
64001649:	pop    edi
6400164a:	pop    esi
6400164b:	add    esp,0x10
6400164e:	ret    0x4
64001651:	int3   
64001652:	int3   
64001653:	int3   
64001654:	int3   
64001655:	int3   
64001656:	int3   
64001657:	int3   
64001658:	int3   
64001659:	int3   
6400165a:	int3   
6400165b:	int3   
6400165c:	int3   
6400165d:	int3   
6400165e:	int3   
6400165f:	int3   
64001660:	mov    eax,esi
64001662:	mov    edx,0xe3
64001667:	push   edi
64001668:	mov    ecx,DWORD PTR [eax+0x4]
6400166b:	mov    edi,DWORD PTR [eax]
6400166d:	xor    edi,ecx
6400166f:	and    edi,0x7ffffffe
64001675:	xor    edi,DWORD PTR [eax]
64001677:	and    cl,0x1
6400167a:	shr    edi,1
6400167c:	sub    edx,0x1
6400167f:	neg    cl
64001681:	sbb    ecx,ecx
64001683:	and    ecx,0x9908b0df
64001689:	xor    edi,ecx
6400168b:	xor    edi,DWORD PTR [eax+0x634]
64001691:	add    eax,0x4
64001694:	test   edx,edx
64001696:	mov    DWORD PTR [eax-0x4],edi
64001699:	jne    0x64001668
6400169b:	mov    edx,0x18c
640016a0:	mov    ecx,DWORD PTR [eax+0x4]
640016a3:	mov    edi,DWORD PTR [eax]
640016a5:	xor    edi,ecx
640016a7:	and    edi,0x7ffffffe
640016ad:	xor    edi,DWORD PTR [eax]
640016af:	and    cl,0x1
640016b2:	shr    edi,1
640016b4:	neg    cl
640016b6:	sbb    ecx,ecx
640016b8:	and    ecx,0x9908b0df
640016be:	xor    edi,ecx
640016c0:	xor    edi,DWORD PTR [eax-0x38c]
640016c6:	add    eax,0x4
640016c9:	sub    edx,0x1
640016cc:	mov    DWORD PTR [eax-0x4],edi
640016cf:	jne    0x640016a0
640016d1:	mov    ecx,DWORD PTR [esi]
640016d3:	mov    edx,DWORD PTR [eax]
640016d5:	xor    edx,ecx
640016d7:	and    edx,0x7ffffffe
640016dd:	xor    edx,DWORD PTR [eax]
640016df:	and    cl,0x1
640016e2:	shr    edx,1
640016e4:	neg    cl
640016e6:	pop    edi
640016e7:	sbb    ecx,ecx
640016e9:	and    ecx,0x9908b0df
640016ef:	xor    edx,ecx
640016f1:	xor    edx,DWORD PTR [eax-0x38c]
640016f7:	mov    DWORD PTR [eax],edx
640016f9:	mov    DWORD PTR [esi+0x9c4],0x270
64001703:	mov    DWORD PTR [esi+0x9c0],esi
64001709:	ret    
6400170a:	int3   
6400170b:	int3   
6400170c:	int3   
6400170d:	int3   
6400170e:	int3   
6400170f:	int3   
64001710:	push   esi
64001711:	mov    esi,eax
64001713:	push   edi
64001714:	mov    ecx,0x1
64001719:	mov    DWORD PTR [esi],edx
6400171b:	jmp    0x64001720
6400171d:	lea    ecx,[ecx+0x0]
64001720:	mov    edx,DWORD PTR [eax]
64001722:	mov    edi,edx
64001724:	shr    edi,0x1e
64001727:	xor    edi,edx
64001729:	imul   edi,edi,0x6c078965
6400172f:	add    edi,ecx
64001731:	mov    DWORD PTR [eax+0x4],edi
64001734:	add    ecx,0x1
64001737:	add    eax,0x4
6400173a:	cmp    ecx,0x270
64001740:	jl     0x64001720
64001742:	call   0x64001660
64001747:	pop    edi
64001748:	pop    esi
64001749:	ret    
6400174a:	int3   
6400174b:	int3   
6400174c:	int3   
6400174d:	int3   
6400174e:	int3   
6400174f:	int3   
64001750:	push   esi
64001751:	push   edi
64001752:	mov    edi,ebx
64001754:	shr    edi,1
64001756:	or     edi,ebx
64001758:	mov    esi,eax
6400175a:	mov    eax,edi
6400175c:	shr    eax,0x2
6400175f:	or     edi,eax
64001761:	mov    ecx,edi
64001763:	shr    ecx,0x4
64001766:	or     edi,ecx
64001768:	mov    edx,edi
6400176a:	shr    edx,0x8
6400176d:	or     edi,edx
6400176f:	mov    eax,edi
64001771:	shr    eax,0x10
64001774:	or     edi,eax
64001776:	cmp    DWORD PTR [esi+0x9c4],0x0
6400177d:	jne    0x64001784
6400177f:	call   0x64001660
64001784:	mov    eax,DWORD PTR [esi+0x9c0]
6400178a:	add    DWORD PTR [esi+0x9c4],0xffffffff
64001791:	mov    ecx,DWORD PTR [eax]
64001793:	add    eax,0x4
64001796:	mov    edx,ecx
64001798:	shr    edx,0xb
6400179b:	xor    ecx,edx
6400179d:	mov    DWORD PTR [esi+0x9c0],eax
640017a3:	mov    eax,ecx
640017a5:	and    eax,0xff3a58ad
640017aa:	shl    eax,0x7
640017ad:	xor    ecx,eax
640017af:	mov    edx,ecx
640017b1:	and    edx,0xffffdf8c
640017b7:	shl    edx,0xf
640017ba:	xor    ecx,edx
640017bc:	mov    eax,ecx
640017be:	shr    eax,0x12
640017c1:	xor    eax,ecx
640017c3:	and    eax,edi
640017c5:	cmp    eax,ebx
640017c7:	ja     0x64001776
640017c9:	pop    edi
640017ca:	pop    esi
640017cb:	ret    
640017cc:	int3   
640017cd:	int3   
640017ce:	int3   
640017cf:	int3   
640017d0:	cmp    DWORD PTR ds:0x640399d8,0x0
640017d7:	jne    0x64001858
640017d9:	push   esi
640017da:	push   0x11c
640017df:	push   0x0
640017e1:	push   0x640399e0
640017e6:	mov    DWORD PTR ds:0x640399dc,0x0
640017f0:	call   0x64015120
640017f5:	mov    esi,DWORD PTR ds:0x640240f4
640017fb:	add    esp,0xc
640017fe:	push   0x640399e0
64001803:	mov    DWORD PTR ds:0x640399e0,0x114
6400180d:	call   esi
6400180f:	test   eax,eax
64001811:	je     0x64001854
64001813:	cmp    DWORD PTR ds:0x640399f0,0x2
6400181a:	mov    DWORD PTR ds:0x640399d8,0x1
64001824:	jne    0x64001854
64001826:	cmp    DWORD PTR ds:0x640399e4,0x5
6400182d:	jb     0x64001854
6400182f:	push   0x11c
64001834:	push   0x0
64001836:	push   0x640399e0
6400183b:	call   0x64015120
64001840:	add    esp,0xc
64001843:	push   0x640399e0
64001848:	mov    DWORD PTR ds:0x640399e0,0x11c
64001852:	call   esi
64001854:	mov    eax,edi
64001856:	pop    esi
64001857:	ret    
64001858:	mov    eax,edi
6400185a:	ret    
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebp
64001861:	mov    ebp,esp
64001863:	and    esp,0xfffffff8
64001866:	push   0xffffffff
64001868:	push   0x64022f20
6400186d:	mov    eax,fs:0x0
64001873:	push   eax
64001874:	sub    esp,0x50
64001877:	push   ebx
64001878:	push   esi
64001879:	push   edi
6400187a:	mov    eax,ds:0x64037644
6400187f:	xor    eax,esp
64001881:	push   eax
64001882:	lea    eax,[esp+0x60]
64001886:	mov    fs:0x0,eax
6400188c:	xor    ebx,ebx
6400188e:	push   0x4000
64001893:	mov    DWORD PTR [esp+0x18],ebx
64001897:	call   0x64012f5a
6400189c:	mov    edi,eax
6400189e:	push   0x38
640018a0:	mov    DWORD PTR [esp+0x70],ebx
640018a4:	push   0x640295f8
640018a9:	lea    eax,[esp+0x30]
640018ad:	push   0x2f
640018af:	push   eax
640018b0:	mov    DWORD PTR [esp+0x58],ebx
640018b4:	mov    DWORD PTR [esp+0x5c],ebx
640018b8:	mov    DWORD PTR [esp+0x60],ebx
640018bc:	mov    DWORD PTR [esp+0x3c],ebx
640018c0:	mov    DWORD PTR [esp+0x38],ebx
640018c4:	call   0x6400efb0
640018c9:	add    esp,0x14
640018cc:	test   eax,eax
640018ce:	je     0x640018fd
640018d0:	mov    esi,DWORD PTR [ebp+0x8]
640018d3:	push   ebx
640018d4:	mov    DWORD PTR [esp+0x1c],ebx
640018d8:	mov    DWORD PTR [esi],ebx
640018da:	call   0x64013604
640018df:	push   edi
640018e0:	call   0x64013604
640018e5:	add    esp,0x8
640018e8:	mov    eax,esi
640018ea:	mov    ecx,DWORD PTR [esp+0x60]
640018ee:	mov    DWORD PTR fs:0x0,ecx
640018f5:	pop    ecx
640018f6:	pop    edi
640018f7:	pop    esi
640018f8:	pop    ebx
640018f9:	mov    esp,ebp
640018fb:	pop    ebp
640018fc:	ret    
640018fd:	mov    ecx,DWORD PTR [ebp+0x10]
64001900:	mov    edx,DWORD PTR [ebp+0xc]
64001903:	mov    DWORD PTR [esp+0x28],ecx
64001907:	mov    DWORD PTR [esp+0x24],edx
6400190b:	jmp    0x64001910
6400190d:	lea    ecx,[ecx+0x0]
64001910:	lea    ecx,[esp+0x24]
64001914:	lea    eax,[ebx+edi*1]
64001917:	push   0x4
64001919:	push   ecx
6400191a:	mov    DWORD PTR [esp+0x3c],0x4000
64001922:	mov    DWORD PTR [esp+0x38],eax
64001926:	call   0x6400f190
6400192b:	mov    esi,eax
6400192d:	add    esp,0x8
64001930:	cmp    esi,0xfffffffc
64001933:	mov    DWORD PTR [esp+0x18],esi
64001937:	jl     0x6400194b
64001939:	cmp    esi,0xfffffffd
6400193c:	jle    0x640019e2
64001942:	cmp    esi,0x2
64001945:	je     0x640019e2
6400194b:	mov    ecx,DWORD PTR [esp+0x34]
6400194f:	mov    eax,0x4000
64001954:	sub    eax,ecx
64001956:	add    ebx,eax
64001958:	test   ecx,ecx
6400195a:	mov    DWORD PTR [esp+0x14],ebx
6400195e:	jne    0x640019c9
64001960:	mov    esi,edi
64001962:	mov    DWORD PTR [esp+0x1c],ecx
64001966:	mov    DWORD PTR [esp+0x20],esi
6400196a:	add    ebx,0x4000
64001970:	push   ebx
64001971:	mov    BYTE PTR [esp+0x6c],0x1
64001976:	call   0x64012f5a
6400197b:	mov    edi,eax
6400197d:	add    esp,0x4
64001980:	test   edi,edi
64001982:	mov    DWORD PTR [esp+0x10],0x0
6400198a:	je     0x64001996
6400198c:	push   0x0
6400198e:	call   0x64013604
64001993:	add    esp,0x4
64001996:	mov    edx,DWORD PTR [esp+0x10]
6400199a:	push   edx
6400199b:	call   0x64013604
640019a0:	mov    ebx,DWORD PTR [esp+0x18]
640019a4:	push   ebx
640019a5:	push   esi
640019a6:	push   edi
640019a7:	call   0x640151a0
640019ac:	push   esi
640019ad:	mov    BYTE PTR [esp+0x7c],0x0
640019b2:	call   0x64013604
640019b7:	add    esp,0x14
640019ba:	cmp    DWORD PTR [esp+0x34],0x0
640019bf:	je     0x64001910
640019c5:	mov    esi,DWORD PTR [esp+0x18]
640019c9:	lea    ecx,[esp+0x24]
640019cd:	push   ecx
640019ce:	call   0x64010780
640019d3:	add    esp,0x4
640019d6:	cmp    esi,0x1
640019d9:	jne    0x64001a22
640019db:	mov    edx,DWORD PTR [ebp+0x14]
640019de:	mov    DWORD PTR [edx],ebx
640019e0:	jmp    0x64001a46
640019e2:	lea    eax,[esp+0x24]
640019e6:	push   eax
640019e7:	call   0x64010780
640019ec:	mov    esi,DWORD PTR [ebp+0x8]
640019ef:	push   0x0
640019f1:	mov    DWORD PTR [esp+0x28],0x0
640019f9:	mov    DWORD PTR [esi],0x0
640019ff:	call   0x64013604
64001a04:	push   edi
64001a05:	call   0x64013604
64001a0a:	add    esp,0xc
64001a0d:	mov    eax,esi
64001a0f:	mov    ecx,DWORD PTR [esp+0x60]
64001a13:	mov    DWORD PTR fs:0x0,ecx
64001a1a:	pop    ecx
64001a1b:	pop    edi
64001a1c:	pop    esi
64001a1d:	pop    ebx
64001a1e:	mov    esp,ebp
64001a20:	pop    ebp
64001a21:	ret    
64001a22:	test   edi,edi
64001a24:	mov    DWORD PTR [esp+0x18],0x0
64001a2c:	je     0x64001a37
64001a2e:	push   edi
64001a2f:	call   0x64013604
64001a34:	add    esp,0x4
64001a37:	mov    eax,DWORD PTR [esp+0x18]
64001a3b:	push   eax
64001a3c:	xor    edi,edi
64001a3e:	call   0x64013604
64001a43:	add    esp,0x4
64001a46:	mov    esi,DWORD PTR [ebp+0x8]
64001a49:	push   0x0
64001a4b:	mov    DWORD PTR [esi],edi
64001a4d:	call   0x64013604
64001a52:	add    esp,0x4
64001a55:	mov    eax,esi
64001a57:	mov    ecx,DWORD PTR [esp+0x60]
64001a5b:	mov    DWORD PTR fs:0x0,ecx
64001a62:	pop    ecx
64001a63:	pop    edi
64001a64:	pop    esi
64001a65:	pop    ebx
64001a66:	mov    esp,ebp
64001a68:	pop    ebp
64001a69:	ret    
64001a6a:	int3   
64001a6b:	int3   
64001a6c:	int3   
64001a6d:	int3   
64001a6e:	int3   
64001a6f:	int3   
64001a70:	sub    esp,0x74
64001a73:	mov    eax,ds:0x64037644
64001a78:	xor    eax,esp
64001a7a:	mov    DWORD PTR [esp+0x70],eax
64001a7e:	mov    eax,DWORD PTR [esp+0x78]
64001a82:	movzx  ecx,BYTE PTR [eax+0xf]
64001a86:	movzx  edx,BYTE PTR [eax+0xe]
64001a8a:	push   ecx
64001a8b:	movzx  ecx,BYTE PTR [eax+0xd]
64001a8f:	push   edx
64001a90:	movzx  edx,BYTE PTR [eax+0xc]
64001a94:	push   ecx
64001a95:	movzx  ecx,BYTE PTR [eax+0xb]
64001a99:	push   edx
64001a9a:	movzx  edx,BYTE PTR [eax+0xa]
64001a9e:	push   ecx
64001a9f:	movzx  ecx,BYTE PTR [eax+0x9]
64001aa3:	push   edx
64001aa4:	movzx  edx,BYTE PTR [eax+0x8]
64001aa8:	push   ecx
64001aa9:	movzx  ecx,WORD PTR [eax+0x6]
64001aad:	push   edx
64001aae:	movzx  edx,WORD PTR [eax+0x4]
64001ab2:	mov    eax,DWORD PTR [eax]
64001ab4:	push   ecx
64001ab5:	push   edx
64001ab6:	push   eax
64001ab7:	push   0x64029618
64001abc:	push   0x32
64001abe:	push   0x6402964c
64001ac3:	mov    DWORD PTR [esp+0x38],0x0
64001acb:	call   0x64002e30
64001ad0:	add    esp,0xc
64001ad3:	push   eax
64001ad4:	lea    ecx,[esp+0x34]
64001ad8:	push   ecx
64001ad9:	call   0x6401468c
64001ade:	lea    eax,[esp+0x38]
64001ae2:	mov    DWORD PTR [esi+0x18],0xf
64001ae9:	mov    DWORD PTR [esi+0x14],0x0
64001af0:	add    esp,0x34
64001af3:	mov    BYTE PTR [esi+0x4],0x0
64001af7:	lea    edx,[eax+0x1]
64001afa:	lea    ebx,[ebx+0x0]
64001b00:	mov    cl,BYTE PTR [eax]
64001b02:	add    eax,0x1
64001b05:	test   cl,cl
64001b07:	jne    0x64001b00
64001b09:	sub    eax,edx
64001b0b:	push   eax
64001b0c:	lea    edx,[esp+0x8]
64001b10:	push   edx
64001b11:	mov    ecx,esi
64001b13:	call   0x640033f0
64001b18:	mov    ecx,DWORD PTR [esp+0x70]
64001b1c:	xor    ecx,esp
64001b1e:	mov    eax,esi
64001b20:	call   0x64013cc6
64001b25:	add    esp,0x74
64001b28:	ret    
64001b29:	int3   
64001b2a:	int3   
64001b2b:	int3   
64001b2c:	int3   
64001b2d:	int3   
64001b2e:	int3   
64001b2f:	int3   
64001b30:	push   ebp
64001b31:	mov    ebp,esp
64001b33:	sub    esp,0x8
64001b36:	mov    eax,ds:0x64037644
64001b3b:	xor    eax,ebp
64001b3d:	mov    DWORD PTR [ebp-0x4],eax
64001b40:	push   ebx
64001b41:	push   esi
64001b42:	mov    esi,DWORD PTR [ebp+0xc]
64001b45:	push   edi
64001b46:	call   DWORD PTR ds:0x6403761c
64001b4c:	mov    edi,DWORD PTR [ebp+0x8]
64001b4f:	mov    DWORD PTR [edi],0x0
64001b55:	mov    DWORD PTR [ebp-0x8],eax
64001b58:	xor    eax,eax
64001b5a:	mov    DWORD PTR [edi+0x4],eax
64001b5d:	mov    DWORD PTR [edi+0x8],eax
64001b60:	mov    DWORD PTR [edi+0xc],eax
64001b63:	cmp    DWORD PTR [esi+0x18],0x10
64001b67:	jb     0x64001b6e
64001b69:	mov    ebx,DWORD PTR [esi+0x4]
64001b6c:	jmp    0x64001b71
64001b6e:	lea    ebx,[esi+0x4]
64001b71:	test   ebx,ebx
64001b73:	jne    0x64001b79
64001b75:	xor    eax,eax
64001b77:	jmp    0x64001bbe
64001b79:	push   ebx
64001b7a:	call   DWORD PTR ds:0x6402406c
64001b80:	mov    edi,eax
64001b82:	add    edi,0x1
64001b85:	cmp    edi,0x3fffffff
64001b8b:	jg     0x64001bb9
64001b8d:	lea    eax,[edi+edi*1]
64001b90:	call   0x64013ce0
64001b95:	mov    esi,esp
64001b97:	test   esi,esi
64001b99:	je     0x64001bb9
64001b9b:	mov    eax,DWORD PTR [ebp-0x8]
64001b9e:	push   edi
64001b9f:	push   esi
64001ba0:	push   0xffffffff
64001ba2:	push   ebx
64001ba3:	push   0x0
64001ba5:	push   eax
64001ba6:	mov    WORD PTR [esi],0x0
64001bab:	call   DWORD PTR ds:0x64024028
64001bb1:	neg    eax
64001bb3:	sbb    eax,eax
64001bb5:	and    eax,esi
64001bb7:	jmp    0x64001bbb
64001bb9:	xor    eax,eax
64001bbb:	mov    edi,DWORD PTR [ebp+0x8]
64001bbe:	push   edi
64001bbf:	push   eax
64001bc0:	call   DWORD PTR ds:0x64024200
64001bc6:	mov    eax,edi
64001bc8:	lea    esp,[ebp-0x14]
64001bcb:	pop    edi
64001bcc:	pop    esi
64001bcd:	pop    ebx
64001bce:	mov    ecx,DWORD PTR [ebp-0x4]
64001bd1:	xor    ecx,ebp
64001bd3:	call   0x64013cc6
64001bd8:	mov    esp,ebp
64001bda:	pop    ebp
64001bdb:	ret    
64001bdc:	int3   
64001bdd:	int3   
64001bde:	int3   
64001bdf:	int3   
64001be0:	push   0xffffffff
64001be2:	push   0x64023701
64001be7:	mov    eax,fs:0x0
64001bed:	push   eax
64001bee:	sub    esp,0x4c
64001bf1:	push   ebx
64001bf2:	push   esi
64001bf3:	push   edi
64001bf4:	mov    eax,ds:0x64037644
64001bf9:	xor    eax,esp
64001bfb:	push   eax
64001bfc:	lea    eax,[esp+0x5c]
64001c00:	mov    fs:0x0,eax
64001c06:	mov    edi,DWORD PTR [esp+0x6c]
64001c0a:	xor    ebx,ebx
64001c0c:	mov    DWORD PTR [esp+0x64],ebx
64001c10:	mov    DWORD PTR [esp+0x10],ebx
64001c14:	mov    eax,ds:0x64038e64
64001c19:	mov    edx,DWORD PTR [eax+0xc]
64001c1c:	mov    ecx,0x64038e64
64001c21:	call   edx
64001c23:	add    eax,0x10
64001c26:	mov    DWORD PTR [edi],eax
64001c28:	mov    DWORD PTR [esp+0x64],ebx
64001c2c:	mov    ecx,0x1
64001c31:	sub    ecx,DWORD PTR [eax-0x4]
64001c34:	mov    eax,DWORD PTR [eax-0x8]
64001c37:	sub    eax,0x800
64001c3c:	or     eax,ecx
64001c3e:	mov    DWORD PTR [esp+0x10],0x1
64001c46:	jge    0x64001c54
64001c48:	push   0x800
64001c4d:	mov    ecx,edi
64001c4f:	call   0x64004340
64001c54:	mov    eax,DWORD PTR [edi]
64001c56:	push   0x800
64001c5b:	push   eax
64001c5c:	call   DWORD PTR ds:0x6402405c
64001c62:	test   eax,eax
64001c64:	jne    0x64001ccc
64001c66:	push   0x6402968c
64001c6b:	push   0x1c
64001c6d:	push   0x640296c8
64001c72:	call   0x64002e30
64001c77:	mov    ecx,eax
64001c79:	add    esp,0xc
64001c7c:	mov    DWORD PTR [esp+0x2c],0xf
64001c84:	mov    DWORD PTR [esp+0x28],ebx
64001c88:	mov    BYTE PTR [esp+0x18],bl
64001c8c:	lea    esi,[ecx+0x1]
64001c8f:	nop
64001c90:	mov    dl,BYTE PTR [ecx]
64001c92:	add    ecx,0x1
64001c95:	cmp    dl,bl
64001c97:	jne    0x64001c90
64001c99:	sub    ecx,esi
64001c9b:	push   ecx
64001c9c:	push   eax
64001c9d:	lea    ecx,[esp+0x1c]
64001ca1:	call   0x640033f0
64001ca6:	lea    eax,[esp+0x14]
64001caa:	push   eax
64001cab:	lea    ecx,[esp+0x34]
64001caf:	push   ecx
64001cb0:	mov    DWORD PTR [esp+0x6c],0x1
64001cb8:	call   0x64001440
64001cbd:	push   0x6402bc90
64001cc2:	lea    edx,[esp+0x34]
64001cc6:	push   edx
64001cc7:	call   0x64013832
64001ccc:	mov    edx,DWORD PTR [edi]
64001cce:	cmp    edx,ebx
64001cd0:	jne    0x64001cd6
64001cd2:	xor    eax,eax
64001cd4:	jmp    0x64001cf1
64001cd6:	mov    eax,edx
64001cd8:	lea    esi,[eax+0x2]
64001cdb:	jmp    0x64001ce0
64001cdd:	lea    ecx,[ecx+0x0]
64001ce0:	mov    cx,WORD PTR [eax]
64001ce3:	add    eax,0x2
64001ce6:	cmp    cx,bx
64001ce9:	jne    0x64001ce0
64001ceb:	sub    eax,esi
64001ced:	sar    eax,1
64001cef:	js     0x64001d35
64001cf1:	cmp    eax,DWORD PTR [edx-0x8]
64001cf4:	jg     0x64001d35
64001cf6:	mov    DWORD PTR [edx-0xc],eax
64001cf9:	mov    ecx,DWORD PTR [edi]
64001cfb:	mov    WORD PTR [ecx+eax*2],bx
64001cff:	mov    ecx,DWORD PTR [edi]
64001d01:	mov    edx,DWORD PTR [ecx-0xc]
64001d04:	lea    eax,[edx-0x1]
64001d07:	cmp    eax,ebx
64001d09:	jl     0x64001d35
64001d0b:	cmp    eax,edx
64001d0d:	jg     0x64001d35
64001d0f:	movzx  eax,WORD PTR [ecx+eax*2]
64001d13:	cmp    ax,0x5c
64001d17:	je     0x64001d20
64001d19:	push   0x5c
64001d1b:	call   0x64002bb0
64001d20:	mov    eax,edi
64001d22:	mov    ecx,DWORD PTR [esp+0x5c]
64001d26:	mov    DWORD PTR fs:0x0,ecx
64001d2d:	pop    ecx
64001d2e:	pop    edi
64001d2f:	pop    esi
64001d30:	pop    ebx
64001d31:	add    esp,0x58
64001d34:	ret    
64001d35:	push   0x80070057
64001d3a:	call   0x64001040
64001d3f:	int3   
64001d40:	push   0xffffffff
64001d42:	push   0x64023a81
64001d47:	mov    eax,fs:0x0
64001d4d:	push   eax
64001d4e:	sub    esp,0x50
64001d51:	push   ebx
64001d52:	push   ebp
64001d53:	push   esi
64001d54:	push   edi
64001d55:	mov    eax,ds:0x64037644
64001d5a:	xor    eax,esp
64001d5c:	push   eax
64001d5d:	lea    eax,[esp+0x64]
64001d61:	mov    fs:0x0,eax
64001d67:	mov    esi,DWORD PTR [esp+0x74]
64001d6b:	xor    ebx,ebx
64001d6d:	mov    DWORD PTR [esp+0x6c],ebx
64001d71:	push   esi
64001d72:	mov    DWORD PTR [esp+0x1c],ebx
64001d76:	call   0x64001be0
64001d7b:	add    esp,0x4
64001d7e:	mov    DWORD PTR [esp+0x6c],ebx
64001d82:	mov    eax,DWORD PTR [esi]
64001d84:	mov    ebp,0x1
64001d89:	sub    eax,0x10
64001d8c:	cmp    DWORD PTR [eax+0xc],ebp
64001d8f:	mov    DWORD PTR [esp+0x18],ebp
64001d93:	jle    0x64001da0
64001d95:	mov    eax,DWORD PTR [eax+0x4]
64001d98:	push   eax
64001d99:	mov    ecx,esi
64001d9b:	call   0x64003780
64001da0:	mov    eax,DWORD PTR [esi]
64001da2:	push   0x5c
64001da4:	push   eax
64001da5:	call   0x6401480d
64001daa:	mov    edi,eax
64001dac:	add    esp,0x8
64001daf:	cmp    edi,ebx
64001db1:	jne    0x64001e17
64001db3:	push   0x640296e8
64001db8:	push   0x18
64001dba:	push   0x64029728
64001dbf:	call   0x64002e30
64001dc4:	mov    ecx,eax
64001dc6:	add    esp,0xc
64001dc9:	mov    DWORD PTR [esp+0x34],0xf
64001dd1:	mov    DWORD PTR [esp+0x30],ebx
64001dd5:	mov    BYTE PTR [esp+0x20],bl
64001dd9:	lea    esi,[ecx+0x1]
64001ddc:	lea    esp,[esp+0x0]
64001de0:	mov    dl,BYTE PTR [ecx]
64001de2:	add    ecx,ebp
64001de4:	cmp    dl,bl
64001de6:	jne    0x64001de0
64001de8:	sub    ecx,esi
64001dea:	push   ecx
64001deb:	push   eax
64001dec:	lea    ecx,[esp+0x24]
64001df0:	call   0x640033f0
64001df5:	lea    ecx,[esp+0x1c]
64001df9:	push   ecx
64001dfa:	lea    edx,[esp+0x3c]
64001dfe:	push   edx
64001dff:	mov    DWORD PTR [esp+0x74],ebp
64001e03:	call   0x64001440
64001e08:	push   0x6402bc90
64001e0d:	lea    eax,[esp+0x3c]
64001e11:	push   eax
64001e12:	call   0x64013832
64001e17:	mov    eax,DWORD PTR [esi]
64001e19:	sub    eax,0x10
64001e1c:	cmp    DWORD PTR [eax+0xc],ebp
64001e1f:	jle    0x64001e2c
64001e21:	mov    ecx,DWORD PTR [eax+0x4]
64001e24:	push   ecx
64001e25:	mov    ecx,esi
64001e27:	call   0x64003780
64001e2c:	mov    ecx,DWORD PTR [esi]
64001e2e:	sub    edi,ecx
64001e30:	sar    edi,1
64001e32:	add    edi,ebp
64001e34:	cmp    ecx,ebx
64001e36:	jne    0x64001e3c
64001e38:	xor    eax,eax
64001e3a:	jmp    0x64001e57
64001e3c:	mov    eax,ecx
64001e3e:	lea    ebp,[eax+0x2]
64001e41:	mov    dx,WORD PTR [eax]
64001e44:	add    eax,0x2
64001e47:	cmp    dx,bx
64001e4a:	jne    0x64001e41
64001e4c:	sub    eax,ebp
64001e4e:	sar    eax,1
64001e50:	js     0x64001eaa
64001e52:	mov    ebp,0x1
64001e57:	cmp    eax,DWORD PTR [ecx-0x8]
64001e5a:	jg     0x64001eaa
64001e5c:	mov    DWORD PTR [ecx-0xc],eax
64001e5f:	mov    edx,DWORD PTR [esi]
64001e61:	mov    WORD PTR [edx+eax*2],bx
64001e65:	mov    eax,DWORD PTR [esi]
64001e67:	sub    eax,0x10
64001e6a:	mov    ecx,ebp
64001e6c:	sub    ecx,DWORD PTR [eax+0xc]
64001e6f:	mov    eax,DWORD PTR [eax+0x8]
64001e72:	sub    eax,edi
64001e74:	or     eax,ecx
64001e76:	jge    0x64001e80
64001e78:	push   edi
64001e79:	mov    ecx,esi
64001e7b:	call   0x64004340
64001e80:	cmp    edi,ebx
64001e82:	jl     0x64001eaa
64001e84:	mov    eax,DWORD PTR [esi]
64001e86:	cmp    edi,DWORD PTR [eax-0x8]
64001e89:	jg     0x64001eaa
64001e8b:	mov    DWORD PTR [eax-0xc],edi
64001e8e:	mov    eax,DWORD PTR [esi]
64001e90:	mov    WORD PTR [eax+edi*2],bx
64001e94:	mov    eax,esi
64001e96:	mov    ecx,DWORD PTR [esp+0x64]
64001e9a:	mov    DWORD PTR fs:0x0,ecx
64001ea1:	pop    ecx
64001ea2:	pop    edi
64001ea3:	pop    esi
64001ea4:	pop    ebp
64001ea5:	pop    ebx
64001ea6:	add    esp,0x5c
64001ea9:	ret    
64001eaa:	push   0x80070057
64001eaf:	call   0x64001040
64001eb4:	int3   
64001eb5:	int3   
64001eb6:	int3   
64001eb7:	int3   
64001eb8:	int3   
64001eb9:	int3   
64001eba:	int3   
64001ebb:	int3   
64001ebc:	int3   
64001ebd:	int3   
64001ebe:	int3   
64001ebf:	int3   
64001ec0:	push   ebp
64001ec1:	mov    ebp,esp
64001ec3:	push   0xffffffff
64001ec5:	push   0x64023b4f
64001eca:	mov    eax,fs:0x0
64001ed0:	push   eax
64001ed1:	sub    esp,0x134
64001ed7:	mov    eax,ds:0x64037644
64001edc:	xor    eax,ebp
64001ede:	mov    DWORD PTR [ebp-0x10],eax
64001ee1:	push   ebx
64001ee2:	push   esi
64001ee3:	push   edi
64001ee4:	push   eax
64001ee5:	lea    eax,[ebp-0xc]
64001ee8:	mov    fs:0x0,eax
64001eee:	call   DWORD PTR ds:0x6403761c
64001ef4:	mov    ebx,eax
64001ef6:	lea    eax,[ebp-0x7c]
64001ef9:	push   eax
64001efa:	call   0x64001d40
64001eff:	add    esp,0x4
64001f02:	push   0x0
64001f04:	push   0x0
64001f06:	lea    ecx,[ebp-0x88]
64001f0c:	push   ecx
64001f0d:	lea    edx,[ebp-0x84]
64001f13:	push   edx
64001f14:	lea    eax,[ebp-0x80]
64001f17:	push   eax
64001f18:	push   0x0
64001f1a:	mov    DWORD PTR [ebp-0x4],0x0
64001f21:	mov    ecx,DWORD PTR [ebp-0x7c]
64001f24:	push   0x0
64001f26:	push   ecx
64001f27:	call   DWORD PTR ds:0x64024060
64001f2d:	test   eax,eax
64001f2f:	jne    0x6400205f
64001f35:	call   DWORD PTR ds:0x64024068
64001f3b:	push   0xa
64001f3d:	lea    edx,[ebp-0x78]
64001f40:	push   edx
64001f41:	push   eax
64001f42:	call   0x64014579
64001f47:	mov    eax,DWORD PTR [ebp-0x7c]
64001f4a:	add    esp,0xc
64001f4d:	test   eax,eax
64001f4f:	mov    edi,eax
64001f51:	je     0x64001f7f
64001f53:	push   eax
64001f54:	call   DWORD PTR ds:0x64024030
64001f5a:	add    eax,0x1
64001f5d:	cmp    eax,0x3fffffff
64001f62:	jle    0x64001f68
64001f64:	xor    edi,edi
64001f66:	jmp    0x64001f7f
64001f68:	lea    esi,[eax+eax*1]
64001f6b:	mov    eax,esi
64001f6d:	call   0x64013ce0
64001f72:	mov    eax,esp
64001f74:	push   ebx
64001f75:	push   esi
64001f76:	push   edi
64001f77:	push   eax
64001f78:	call   0x64001000
64001f7d:	mov    edi,eax
64001f7f:	push   0x6402978c
64001f84:	push   0x21
64001f86:	push   0x640297b4
64001f8b:	call   0x64002e30
64001f90:	mov    ecx,eax
64001f92:	add    esp,0xc
64001f95:	mov    DWORD PTR [ebp-0x8c],0xf
64001f9f:	mov    DWORD PTR [ebp-0x90],0x0
64001fa9:	mov    BYTE PTR [ebp-0xa0],0x0
64001fb0:	lea    esi,[ecx+0x1]
64001fb3:	mov    dl,BYTE PTR [ecx]
64001fb5:	add    ecx,0x1
64001fb8:	test   dl,dl
64001fba:	jne    0x64001fb3
64001fbc:	sub    ecx,esi
64001fbe:	push   ecx
64001fbf:	push   eax
64001fc0:	lea    ecx,[ebp-0xa4]
64001fc6:	call   0x640033f0
64001fcb:	lea    eax,[ebp-0xa4]
64001fd1:	push   eax
64001fd2:	lea    esi,[ebp-0xe8]
64001fd8:	mov    BYTE PTR [ebp-0x4],0x1
64001fdc:	call   0x64006820
64001fe1:	add    esp,0x4
64001fe4:	mov    esi,eax
64001fe6:	push   0x64029748
64001feb:	push   0x7
64001fed:	push   0x64029784
64001ff2:	mov    BYTE PTR [ebp-0x4],0x2
64001ff6:	call   0x64002e30
64001ffb:	add    esp,0xc
64001ffe:	push   esi
64001fff:	mov    edi,eax
64002001:	lea    esi,[ebp-0x104]
64002007:	call   0x64006820
6400200c:	add    esp,0x4
6400200f:	push   eax
64002010:	lea    edi,[ebp-0x78]
64002013:	lea    esi,[ebp-0x13c]
64002019:	mov    BYTE PTR [ebp-0x4],0x3
6400201d:	call   0x64006820
64002022:	add    esp,0x4
64002025:	push   eax
64002026:	mov    edi,0x64029744
6400202b:	lea    esi,[ebp-0x120]
64002031:	mov    BYTE PTR [ebp-0x4],0x4
64002035:	call   0x64006820
6400203a:	add    esp,0x4
6400203d:	push   eax
6400203e:	lea    ecx,[ebp-0xcc]
64002044:	push   ecx
64002045:	mov    BYTE PTR [ebp-0x4],0x5
64002049:	call   0x64001440
6400204e:	push   0x6402bc90
64002053:	lea    edx,[ebp-0xcc]
64002059:	push   edx
6400205a:	call   0x64013832
6400205f:	mov    esi,DWORD PTR [ebp-0x80]
64002062:	mov    DWORD PTR [ebp-0x4],0xffffffff
64002069:	mov    eax,DWORD PTR [ebp-0x7c]
6400206c:	add    eax,0xfffffff0
6400206f:	lea    ecx,[eax+0xc]
64002072:	or     edx,0xffffffff
64002075:	lock xadd DWORD PTR [ecx],edx
64002079:	dec    edx
6400207a:	test   edx,edx
6400207c:	jg     0x64002088
6400207e:	mov    ecx,DWORD PTR [eax]
64002080:	mov    edx,DWORD PTR [ecx]
64002082:	push   eax
64002083:	mov    eax,DWORD PTR [edx+0x4]
64002086:	call   eax
64002088:	mov    eax,esi
6400208a:	lea    esp,[ebp-0x150]
64002090:	mov    ecx,DWORD PTR [ebp-0xc]
64002093:	mov    DWORD PTR fs:0x0,ecx
6400209a:	pop    ecx
6400209b:	pop    edi
6400209c:	pop    esi
6400209d:	pop    ebx
6400209e:	mov    ecx,DWORD PTR [ebp-0x10]
640020a1:	xor    ecx,ebp
640020a3:	call   0x64013cc6
640020a8:	mov    esp,ebp
640020aa:	pop    ebp
640020ab:	ret    
640020ac:	int3   
640020ad:	int3   
640020ae:	int3   
640020af:	int3   
640020b0:	push   ebp
640020b1:	mov    ebp,esp
640020b3:	and    esp,0xfffffff8
640020b6:	push   ecx
640020b7:	push   esi
640020b8:	mov    DWORD PTR [esp+0x4],0x0
640020c0:	call   0x64001ec0
640020c5:	mov    ecx,DWORD PTR [ebp+0x10]
640020c8:	mov    edx,DWORD PTR [ebp+0xc]
640020cb:	mov    esi,DWORD PTR [ebp+0x8]
640020ce:	push   ecx
640020cf:	push   edx
640020d0:	push   eax
640020d1:	push   esi
640020d2:	call   0x640022a0
640020d7:	add    esp,0x10
640020da:	mov    eax,esi
640020dc:	pop    esi
640020dd:	mov    esp,ebp
640020df:	pop    ebp
640020e0:	ret    
640020e1:	int3   
640020e2:	int3   
640020e3:	int3   
640020e4:	int3   
640020e5:	int3   
640020e6:	int3   
640020e7:	int3   
640020e8:	int3   
640020e9:	int3   
640020ea:	int3   
640020eb:	int3   
640020ec:	int3   
640020ed:	int3   
640020ee:	int3   
640020ef:	int3   
640020f0:	mov    eax,0x64000000
640020f5:	ret    
640020f6:	int3   
640020f7:	int3   
640020f8:	int3   
640020f9:	int3   
640020fa:	int3   
640020fb:	int3   
640020fc:	int3   
640020fd:	int3   
640020fe:	int3   
640020ff:	int3   
64002100:	push   ecx
64002101:	mov    eax,DWORD PTR [esp+0xc]
64002105:	push   esi
64002106:	mov    esi,DWORD PTR [esp+0xc]
6400210a:	push   eax
6400210b:	push   esi
6400210c:	mov    DWORD PTR [esp+0xc],0x0
64002114:	call   0x64002130
64002119:	add    esp,0x8
6400211c:	mov    eax,esi
6400211e:	pop    esi
6400211f:	pop    ecx
64002120:	ret    
64002121:	int3   
64002122:	int3   
64002123:	int3   
64002124:	int3   
64002125:	int3   
64002126:	int3   
64002127:	int3   
64002128:	int3   
64002129:	int3   
6400212a:	int3   
6400212b:	int3   
6400212c:	int3   
6400212d:	int3   
6400212e:	int3   
6400212f:	int3   
64002130:	push   0xffffffff
64002132:	push   0x640232b8
64002137:	mov    eax,fs:0x0
6400213d:	push   eax
6400213e:	push   ecx
6400213f:	push   ebp
64002140:	push   esi
64002141:	mov    eax,ds:0x64037644
64002146:	xor    eax,esp
64002148:	push   eax
64002149:	lea    eax,[esp+0x10]
6400214d:	mov    fs:0x0,eax
64002153:	mov    ebp,DWORD PTR [esp+0x20]
64002157:	mov    DWORD PTR [esp+0xc],0x0
6400215f:	mov    eax,ds:0x64038e64
64002164:	mov    edx,DWORD PTR [eax+0xc]
64002167:	mov    ecx,0x64038e64
6400216c:	call   edx
6400216e:	lea    esi,[eax+0x10]
64002171:	mov    DWORD PTR [esp+0xc],esi
64002175:	mov    DWORD PTR [esp+0x18],0x0
6400217d:	mov    eax,DWORD PTR [esi-0x8]
64002180:	mov    ecx,0x1
64002185:	sub    ecx,DWORD PTR [esi-0x4]
64002188:	sub    eax,0x104
6400218d:	or     eax,ecx
6400218f:	jge    0x640021a3
64002191:	push   0x104
64002196:	lea    ecx,[esp+0x10]
6400219a:	call   0x64004340
6400219f:	mov    esi,DWORD PTR [esp+0xc]
640021a3:	cmp    DWORD PTR [esi-0x8],0x104
640021aa:	jge    0x640021b6
640021ac:	push   0x80070057
640021b1:	call   0x64001040
640021b6:	push   0x104
640021bb:	push   esi
640021bc:	mov    DWORD PTR [esi-0xc],0x104
640021c3:	push   0x64000000
640021c8:	mov    WORD PTR [esi+0x208],0x0
640021d1:	call   DWORD PTR ds:0x64024054
640021d7:	mov    eax,esi
640021d9:	lea    edx,[eax+0x2]
640021dc:	lea    esp,[esp+0x0]
640021e0:	mov    cx,WORD PTR [eax]
640021e3:	add    eax,0x2
640021e6:	test   cx,cx
640021e9:	jne    0x640021e0
640021eb:	sub    eax,edx
640021ed:	sar    eax,1
640021ef:	js     0x640021ac
640021f1:	cmp    eax,DWORD PTR [esi-0x8]
640021f4:	jg     0x640021ac
640021f6:	cmp    BYTE PTR [esp+0x24],cl
640021fa:	mov    DWORD PTR [esi-0xc],eax
640021fd:	mov    WORD PTR [esi+eax*2],cx
64002201:	je     0x6400222f
64002203:	add    esi,0xfffffff0
64002206:	mov    eax,esi
64002208:	call   0x64004390
6400220d:	add    eax,0x10
64002210:	mov    DWORD PTR [ebp+0x0],eax
64002213:	mov    DWORD PTR [esp+0x18],0xffffffff
6400221b:	lea    eax,[esi+0xc]
6400221e:	or     ecx,0xffffffff
64002221:	lock xadd DWORD PTR [eax],ecx
64002225:	dec    ecx
64002226:	test   ecx,ecx
64002228:	jg     0x64002285
6400222a:	mov    ecx,DWORD PTR [esi]
6400222c:	push   esi
6400222d:	jmp    0x6400227e
6400222f:	push   0x5c
64002231:	push   esi
64002232:	call   0x64014ae1
64002237:	add    esp,0x8
6400223a:	test   eax,eax
6400223c:	je     0x64002249
6400223e:	sub    eax,esi
64002240:	sar    eax,1
64002242:	mov    ecx,eax
64002244:	cmp    ecx,0xffffffff
64002247:	jne    0x6400224d
64002249:	xor    ecx,ecx
6400224b:	jmp    0x64002250
6400224d:	add    ecx,0x1
64002250:	mov    eax,DWORD PTR [esi-0xc]
64002253:	sub    eax,ecx
64002255:	lea    ecx,[esp+0xc]
64002259:	push   ecx
6400225a:	mov    ecx,ebp
6400225c:	call   0x64002c10
64002261:	lea    eax,[esi-0x10]
64002264:	mov    DWORD PTR [esp+0x18],0xffffffff
6400226c:	lea    edx,[eax+0xc]
6400226f:	or     ecx,0xffffffff
64002272:	lock xadd DWORD PTR [edx],ecx
64002276:	dec    ecx
64002277:	test   ecx,ecx
64002279:	jg     0x64002285
6400227b:	mov    ecx,DWORD PTR [eax]
6400227d:	push   eax
6400227e:	mov    edx,DWORD PTR [ecx]
64002280:	mov    eax,DWORD PTR [edx+0x4]
64002283:	call   eax
64002285:	mov    eax,ebp
64002287:	mov    ecx,DWORD PTR [esp+0x10]
6400228b:	mov    DWORD PTR fs:0x0,ecx
64002292:	pop    ecx
64002293:	pop    esi
64002294:	pop    ebp
64002295:	add    esp,0x10
64002298:	ret    
64002299:	int3   
6400229a:	int3   
6400229b:	int3   
6400229c:	int3   
6400229d:	int3   
6400229e:	int3   
6400229f:	int3   
640022a0:	push   ebp
640022a1:	mov    ebp,esp
640022a3:	push   0xffffffff
640022a5:	push   0x64023a2f
640022aa:	mov    eax,fs:0x0
640022b0:	push   eax
640022b1:	sub    esp,0xa0c
640022b7:	mov    eax,ds:0x64037644
640022bc:	xor    eax,ebp
640022be:	mov    DWORD PTR [ebp-0x10],eax
640022c1:	push   ebx
640022c2:	push   esi
640022c3:	push   edi
640022c4:	push   eax
640022c5:	lea    eax,[ebp-0xc]
640022c8:	mov    fs:0x0,eax
640022ce:	mov    esi,DWORD PTR [ebp+0x14]
640022d1:	mov    ecx,DWORD PTR [ebp+0x10]
640022d4:	mov    edx,DWORD PTR [ebp+0xc]
640022d7:	mov    edi,DWORD PTR [ebp+0x8]
640022da:	xor    eax,eax
640022dc:	mov    DWORD PTR [ebp-0x4],eax
640022df:	mov    DWORD PTR [ebp-0x2c],eax
640022e2:	lea    eax,[esi+esi*4]
640022e5:	lea    eax,[ecx+eax*2]
640022e8:	add    edx,eax
640022ea:	lea    eax,[ebp-0xa18]
640022f0:	mov    DWORD PTR [ebp-0x30],edi
640022f3:	call   0x64001710
640022f8:	mov    ebx,0x1
640022fd:	test   BYTE PTR ds:0x64039b10,bl
64002303:	jne    0x640023b9
64002309:	or     DWORD PTR ds:0x64039b10,ebx
6400230f:	push   0x640298d4
64002314:	push   0x3
64002316:	mov    ecx,0x640298cc
6400231b:	mov    DWORD PTR [ebp-0x4],ebx
6400231e:	call   0x64003030
64002323:	push   0x64029890
64002328:	push   0x3
6400232a:	mov    ecx,0x64029888
6400232f:	mov    ds:0x64039994,eax
64002334:	mov    DWORD PTR ds:0x64039998,ebx
6400233a:	call   0x64003030
6400233f:	push   0x6402984c
64002344:	push   0x0
64002346:	mov    ecx,0x640295f4
6400234b:	mov    ds:0x6403999c,eax
64002350:	mov    DWORD PTR ds:0x640399a0,ebx
64002356:	call   0x64003030
6400235b:	push   0x64029824
64002360:	push   0x0
64002362:	mov    ecx,0x640295f4
64002367:	mov    ds:0x640399a4,eax
6400236c:	mov    DWORD PTR ds:0x640399a8,ebx
64002372:	call   0x64003030
64002377:	push   0x640297e4
6400237c:	push   0x4
6400237e:	mov    ecx,0x640297d8
64002383:	mov    ds:0x640399ac,eax
64002388:	mov    DWORD PTR ds:0x640399b0,ebx
6400238e:	call   0x64003030
64002393:	add    esp,0x28
64002396:	mov    ds:0x640399b4,eax
6400239b:	mov    DWORD PTR ds:0x640399b8,ebx
640023a1:	mov    DWORD PTR ds:0x640399bc,0x640295f4
640023ab:	mov    DWORD PTR ds:0x640399c0,0x2
640023b5:	mov    BYTE PTR [ebp-0x4],0x0
640023b9:	lea    ecx,[esi-0x1]
640023bc:	cmp    ecx,0x5
640023bf:	ja     0x640023da
640023c1:	mov    eax,DWORD PTR [ebp+0x10]
640023c4:	lea    edx,[esi+esi*2]
640023c7:	lea    eax,[eax+edx*2]
640023ca:	mov    ecx,DWORD PTR [eax*8+0x64039964]
640023d1:	mov    esi,DWORD PTR [eax*8+0x64039968]
640023d8:	jmp    0x640023e1
640023da:	mov    ecx,0x640295f4
640023df:	xor    esi,esi
640023e1:	push   edi
640023e2:	call   0x64002a50
640023e7:	xor    ecx,ecx
640023e9:	mov    eax,esi
640023eb:	sub    eax,ebx
640023ed:	mov    DWORD PTR [ebp-0x4],ecx
640023f0:	mov    DWORD PTR [ebp-0x2c],ebx
640023f3:	je     0x6400252d
640023f9:	sub    eax,ebx
640023fb:	jne    0x64002509
64002401:	mov    DWORD PTR [ebp-0x1c],eax
64002404:	mov    DWORD PTR [ebp-0x18],eax
64002407:	mov    DWORD PTR [ebp-0x14],eax
6400240a:	or     ebx,0xffffffff
6400240d:	lea    eax,[ebp-0xa18]
64002413:	call   0x64001750
64002418:	mov    DWORD PTR [ebp-0x20],eax
6400241b:	or     ebx,0xffffffff
6400241e:	lea    eax,[ebp-0xa18]
64002424:	call   0x64001750
64002429:	mov    DWORD PTR [ebp-0x1c],eax
6400242c:	or     ebx,0xffffffff
6400242f:	lea    eax,[ebp-0xa18]
64002435:	call   0x64001750
6400243a:	mov    DWORD PTR [ebp-0x18],eax
6400243d:	or     ebx,0xffffffff
64002440:	lea    eax,[ebp-0xa18]
64002446:	call   0x64001750
6400244b:	mov    DWORD PTR [ebp-0x14],eax
6400244e:	call   DWORD PTR ds:0x6403761c
64002454:	lea    ecx,[ebp-0x20]
64002457:	push   ecx
64002458:	lea    esi,[ebp-0x4c]
6400245b:	mov    DWORD PTR [ebp-0x28],eax
6400245e:	call   0x64001a70
64002463:	add    esp,0x4
64002466:	mov    DWORD PTR [ebp-0x4],0x2
6400246d:	cmp    DWORD PTR [eax+0x18],0x10
64002471:	jb     0x6400247b
64002473:	mov    eax,DWORD PTR [eax+0x4]
64002476:	mov    DWORD PTR [ebp-0x24],eax
64002479:	jmp    0x64002481
6400247b:	add    eax,0x4
6400247e:	mov    DWORD PTR [ebp-0x24],eax
64002481:	test   eax,eax
64002483:	jne    0x64002489
64002485:	xor    edx,edx
64002487:	jmp    0x640024ef
64002489:	push   eax
6400248a:	call   DWORD PTR ds:0x6402406c
64002490:	mov    ebx,eax
64002492:	add    ebx,0x1
64002495:	cmp    ebx,0x3fffffff
6400249b:	jg     0x640024cc
6400249d:	lea    eax,[ebx+ebx*1]
640024a0:	call   0x64013ce0
640024a5:	mov    esi,esp
640024a7:	test   esi,esi
640024a9:	je     0x640024cc
640024ab:	mov    edx,DWORD PTR [ebp-0x24]
640024ae:	mov    eax,DWORD PTR [ebp-0x28]
640024b1:	push   ebx
640024b2:	push   esi
640024b3:	push   0xffffffff
640024b5:	push   edx
640024b6:	push   0x0
640024b8:	push   eax
640024b9:	mov    WORD PTR [esi],0x0
640024be:	call   DWORD PTR ds:0x64024028
640024c4:	neg    eax
640024c6:	sbb    eax,eax
640024c8:	and    eax,esi
640024ca:	jmp    0x640024ce
640024cc:	xor    eax,eax
640024ce:	mov    edx,eax
640024d0:	test   edx,edx
640024d2:	je     0x640024ef
640024d4:	mov    eax,edx
640024d6:	lea    esi,[eax+0x2]
640024d9:	lea    esp,[esp+0x0]
640024e0:	mov    cx,WORD PTR [eax]
640024e3:	add    eax,0x2
640024e6:	test   cx,cx
640024e9:	jne    0x640024e0
640024eb:	sub    eax,esi
640024ed:	sar    eax,1
640024ef:	push   eax
640024f0:	push   edx
640024f1:	push   edi
640024f2:	call   0x64003630
640024f7:	cmp    DWORD PTR [ebp-0x34],0x10
640024fb:	jb     0x64002509
640024fd:	mov    ecx,DWORD PTR [ebp-0x48]
64002500:	push   ecx
64002501:	call   0x64013604
64002506:	add    esp,0x4
64002509:	mov    eax,edi
6400250b:	lea    esp,[ebp-0xa28]
64002511:	mov    ecx,DWORD PTR [ebp-0xc]
64002514:	mov    DWORD PTR fs:0x0,ecx
6400251b:	pop    ecx
6400251c:	pop    edi
6400251d:	pop    esi
6400251e:	pop    ebx
6400251f:	mov    ecx,DWORD PTR [ebp-0x10]
64002522:	xor    ecx,ebp
64002524:	call   0x64013cc6
64002529:	mov    esp,ebp
6400252b:	pop    ebp
6400252c:	ret    
6400252d:	mov    DWORD PTR [ebp-0x28],ecx
64002530:	mov    ebx,0x23
64002535:	lea    eax,[ebp-0xa18]
6400253b:	call   0x64001750
64002540:	cmp    eax,0xa
64002543:	jae    0x64002550
64002545:	add    eax,0x30
64002548:	movzx  edx,ax
6400254b:	mov    DWORD PTR [ebp-0x24],edx
6400254e:	jmp    0x64002559
64002550:	add    eax,0x57
64002553:	movzx  eax,ax
64002556:	mov    DWORD PTR [ebp-0x24],eax
64002559:	mov    eax,DWORD PTR [edi]
6400255b:	mov    ebx,DWORD PTR [eax-0xc]
6400255e:	mov    ecx,0x1
64002563:	sub    ecx,DWORD PTR [eax-0x4]
64002566:	mov    eax,DWORD PTR [eax-0x8]
64002569:	lea    esi,[ebx+0x1]
6400256c:	sub    eax,esi
6400256e:	or     eax,ecx
64002570:	jge    0x6400257a
64002572:	push   esi
64002573:	mov    ecx,edi
64002575:	call   0x64004340
6400257a:	test   esi,esi
6400257c:	mov    eax,DWORD PTR [edi]
6400257e:	mov    cx,WORD PTR [ebp-0x24]
64002582:	mov    WORD PTR [eax+ebx*2],cx
64002586:	jl     0x640025ad
64002588:	mov    eax,DWORD PTR [edi]
6400258a:	cmp    esi,DWORD PTR [eax-0x8]
6400258d:	jg     0x640025ad
6400258f:	mov    DWORD PTR [eax-0xc],esi
64002592:	mov    eax,DWORD PTR [ebp-0x28]
64002595:	mov    edx,DWORD PTR [edi]
64002597:	add    eax,0x1
6400259a:	cmp    eax,0x5
6400259d:	mov    WORD PTR [edx+esi*2],0x0
640025a3:	mov    DWORD PTR [ebp-0x28],eax
640025a6:	jl     0x64002530
640025a8:	jmp    0x64002509
640025ad:	push   0x80070057
640025b2:	call   0x64001040
640025b7:	int3   
640025b8:	int3   
640025b9:	int3   
640025ba:	int3   
640025bb:	int3   
640025bc:	int3   
640025bd:	int3   
640025be:	int3   
640025bf:	int3   
640025c0:	push   0xffffffff
640025c2:	push   0x64023c81
640025c7:	mov    eax,fs:0x0
640025cd:	push   eax
640025ce:	sub    esp,0xc
640025d1:	push   ebx
640025d2:	push   esi
640025d3:	push   edi
640025d4:	mov    eax,ds:0x64037644
640025d9:	xor    eax,esp
640025db:	push   eax
640025dc:	lea    eax,[esp+0x1c]
640025e0:	mov    fs:0x0,eax
640025e6:	xor    ebx,ebx
640025e8:	mov    DWORD PTR [esp+0x24],ebx
640025ec:	mov    DWORD PTR [esp+0x10],ebx
640025f0:	mov    eax,ds:0x64038e64
640025f5:	mov    edx,DWORD PTR [eax+0xc]
640025f8:	mov    ecx,0x64038e64
640025fd:	call   edx
640025ff:	mov    esi,DWORD PTR [esp+0x2c]
64002603:	add    eax,0x10
64002606:	mov    DWORD PTR [esi],eax
64002608:	cmp    BYTE PTR [esp+0x30],bl
6400260c:	mov    edi,0x1
64002611:	mov    DWORD PTR [esp+0x24],ebx
64002615:	mov    DWORD PTR [esp+0x10],edi
64002619:	je     0x6400265d
6400261b:	lea    eax,[esp+0x14]
6400261f:	push   eax
64002620:	call   0x64001be0
64002625:	add    esp,0x4
64002628:	mov    DWORD PTR [esp+0x24],edi
6400262c:	mov    eax,DWORD PTR [eax]
6400262e:	mov    ecx,DWORD PTR [eax-0xc]
64002631:	push   ecx
64002632:	push   eax
64002633:	push   esi
64002634:	call   0x64003630
64002639:	mov    BYTE PTR [esp+0x24],bl
6400263d:	mov    eax,DWORD PTR [esp+0x14]
64002641:	add    eax,0xfffffff0
64002644:	lea    ecx,[eax+0xc]
64002647:	or     edx,0xffffffff
6400264a:	lock xadd DWORD PTR [ecx],edx
6400264e:	dec    edx
6400264f:	test   edx,edx
64002651:	jg     0x6400265d
64002653:	mov    ecx,DWORD PTR [eax]
64002655:	mov    edx,DWORD PTR [ecx]
64002657:	push   eax
64002658:	mov    eax,DWORD PTR [edx+0x4]
6400265b:	call   eax
6400265d:	push   edi
6400265e:	lea    ecx,[esp+0x1c]
64002662:	push   0x2
64002664:	push   ecx
64002665:	call   0x640020b0
6400266a:	mov    edi,eax
6400266c:	push   0x640298f8
64002671:	push   0x4
64002673:	mov    ecx,0x64029928
64002678:	mov    DWORD PTR [esp+0x38],0x2
64002680:	call   0x64003030
64002685:	lea    edx,[esp+0x28]
64002689:	push   edi
6400268a:	push   edx
6400268b:	mov    ebx,eax
6400268d:	call   0x64002c90
64002692:	add    esp,0x1c
64002695:	mov    BYTE PTR [esp+0x24],0x3
6400269a:	mov    eax,DWORD PTR [eax]
6400269c:	mov    ecx,DWORD PTR [eax-0xc]
6400269f:	push   ecx
640026a0:	push   eax
640026a1:	push   esi
640026a2:	call   0x64003630
640026a7:	mov    BYTE PTR [esp+0x24],0x2
640026ac:	mov    eax,DWORD PTR [esp+0x14]
640026b0:	add    eax,0xfffffff0
640026b3:	lea    ecx,[eax+0xc]
640026b6:	or     edx,0xffffffff
640026b9:	lock xadd DWORD PTR [ecx],edx
640026bd:	dec    edx
640026be:	test   edx,edx
640026c0:	jg     0x640026cc
640026c2:	mov    ecx,DWORD PTR [eax]
640026c4:	mov    edx,DWORD PTR [ecx]
640026c6:	push   eax
640026c7:	mov    eax,DWORD PTR [edx+0x4]
640026ca:	call   eax
640026cc:	mov    BYTE PTR [esp+0x24],0x0
640026d1:	mov    eax,DWORD PTR [esp+0x18]
640026d5:	add    eax,0xfffffff0
640026d8:	lea    ecx,[eax+0xc]
640026db:	or     edx,0xffffffff
640026de:	lock xadd DWORD PTR [ecx],edx
640026e2:	dec    edx
640026e3:	test   edx,edx
640026e5:	jg     0x640026f1
640026e7:	mov    ecx,DWORD PTR [eax]
640026e9:	mov    edx,DWORD PTR [ecx]
640026eb:	push   eax
640026ec:	mov    eax,DWORD PTR [edx+0x4]
640026ef:	call   eax
640026f1:	mov    eax,esi
640026f3:	mov    ecx,DWORD PTR [esp+0x1c]
640026f7:	mov    DWORD PTR fs:0x0,ecx
640026fe:	pop    ecx
640026ff:	pop    edi
64002700:	pop    esi
64002701:	pop    ebx
64002702:	add    esp,0x18
64002705:	ret    
64002706:	int3   
64002707:	int3   
64002708:	int3   
64002709:	int3   
6400270a:	int3   
6400270b:	int3   
6400270c:	int3   
6400270d:	int3   
6400270e:	int3   
6400270f:	int3   
64002710:	push   0xffffffff
64002712:	push   0x64022f83
64002717:	mov    eax,fs:0x0
6400271d:	push   eax
6400271e:	sub    esp,0x434
64002724:	mov    eax,ds:0x64037644
64002729:	xor    eax,esp
6400272b:	mov    DWORD PTR [esp+0x430],eax
64002732:	push   ebx
64002733:	push   ebp
64002734:	push   esi
64002735:	push   edi
64002736:	mov    eax,ds:0x64037644
6400273b:	xor    eax,esp
6400273d:	push   eax
6400273e:	lea    eax,[esp+0x448]
64002745:	mov    fs:0x0,eax
6400274b:	mov    eax,DWORD PTR [esp+0x458]
64002752:	push   eax
64002753:	push   0x18
64002755:	mov    DWORD PTR [esp+0x458],0x0
64002760:	call   0x64012ebe
64002765:	mov    esi,eax
64002767:	mov    DWORD PTR [esp+0x18],esi
6400276b:	or     ebp,0xffffffff
6400276e:	cmp    esi,ebp
64002770:	mov    BYTE PTR [esp+0x450],0x1
64002778:	jne    0x640027a6
6400277a:	call   DWORD PTR ds:0x64024068
64002780:	push   ebp
64002781:	mov    esi,eax
64002783:	call   DWORD PTR ds:0x64024074
64002789:	push   esi
6400278a:	call   DWORD PTR ds:0x64024070
64002790:	mov    DWORD PTR [esp+0x450],ebp
64002797:	mov    eax,DWORD PTR [esp+0x45c]
6400279e:	add    eax,0xfffffff0
640027a1:	jmp    0x64002862
640027a6:	lea    ecx,[esp+0x1c]
640027aa:	push   ecx
640027ab:	push   esi
640027ac:	mov    DWORD PTR [esp+0x24],0x428
640027b4:	call   0x64012ec4
640027b9:	test   eax,eax
640027bb:	jne    0x640027f2
640027bd:	test   esi,esi
640027bf:	je     0x640027d7
640027c1:	call   DWORD PTR ds:0x64024068
640027c7:	push   esi
640027c8:	mov    edi,eax
640027ca:	call   DWORD PTR ds:0x64024074
640027d0:	push   edi
640027d1:	call   DWORD PTR ds:0x64024070
640027d7:	mov    DWORD PTR [esp+0x450],ebp
640027de:	mov    eax,DWORD PTR [esp+0x45c]
640027e5:	add    eax,0xfffffff0
640027e8:	lea    edx,[eax+0xc]
640027eb:	lock xadd DWORD PTR [edx],ebp
640027ef:	dec    ebp
640027f0:	jmp    0x6400286a
640027f2:	mov    edi,DWORD PTR [esp+0x45c]
640027f9:	lea    esp,[esp+0x0]
64002800:	cmp    DWORD PTR [edi-0x4],0x1
64002804:	jle    0x6400281d
64002806:	mov    ecx,DWORD PTR [edi-0xc]
64002809:	push   ecx
6400280a:	lea    ecx,[esp+0x460]
64002811:	call   0x64003780
64002816:	mov    edi,DWORD PTR [esp+0x45c]
6400281d:	lea    edx,[esp+0x3c]
64002821:	push   edi
64002822:	push   edx
64002823:	call   0x64014a50
64002828:	add    esp,0x8
6400282b:	test   eax,eax
6400282d:	je     0x640028a2
6400282f:	lea    eax,[esp+0x1c]
64002833:	push   eax
64002834:	push   esi
64002835:	call   0x64012eca
6400283a:	test   eax,eax
6400283c:	jne    0x64002800
6400283e:	test   esi,esi
64002840:	je     0x64002858
64002842:	call   DWORD PTR ds:0x64024068
64002848:	push   esi
64002849:	mov    ebx,eax
6400284b:	call   DWORD PTR ds:0x64024074
64002851:	push   ebx
64002852:	call   DWORD PTR ds:0x64024070
64002858:	mov    DWORD PTR [esp+0x450],ebp
6400285f:	lea    eax,[edi-0x10]
64002862:	lea    ecx,[eax+0xc]
64002865:	lock xadd DWORD PTR [ecx],ebp
64002869:	dec    ebp
6400286a:	test   ebp,ebp
6400286c:	jg     0x64002878
6400286e:	mov    ecx,DWORD PTR [eax]
64002870:	mov    edx,DWORD PTR [ecx]
64002872:	push   eax
64002873:	mov    eax,DWORD PTR [edx+0x4]
64002876:	call   eax
64002878:	xor    al,al
6400287a:	mov    ecx,DWORD PTR [esp+0x448]
64002881:	mov    DWORD PTR fs:0x0,ecx
64002888:	pop    ecx
64002889:	pop    edi
6400288a:	pop    esi
6400288b:	pop    ebp
6400288c:	pop    ebx
6400288d:	mov    ecx,DWORD PTR [esp+0x430]
64002894:	xor    ecx,esp
64002896:	call   0x64013cc6
6400289b:	add    esp,0x440
640028a1:	ret    
640028a2:	test   esi,esi
640028a4:	je     0x640028bc
640028a6:	call   DWORD PTR ds:0x64024068
640028ac:	push   esi
640028ad:	mov    ebx,eax
640028af:	call   DWORD PTR ds:0x64024074
640028b5:	push   ebx
640028b6:	call   DWORD PTR ds:0x64024070
640028bc:	lea    eax,[edi-0x10]
640028bf:	mov    DWORD PTR [esp+0x450],ebp
640028c6:	lea    ecx,[eax+0xc]
640028c9:	lock xadd DWORD PTR [ecx],ebp
640028cd:	dec    ebp
640028ce:	test   ebp,ebp
640028d0:	jg     0x640028dc
640028d2:	mov    ecx,DWORD PTR [eax]
640028d4:	mov    edx,DWORD PTR [ecx]
640028d6:	push   eax
640028d7:	mov    eax,DWORD PTR [edx+0x4]
640028da:	call   eax
640028dc:	mov    al,0x1
640028de:	jmp    0x6400287a
640028e0:	xor    ax,ax
640028e3:	ret    
640028e4:	int3   
640028e5:	int3   
640028e6:	int3   
640028e7:	int3   
640028e8:	int3   
640028e9:	int3   
640028ea:	int3   
640028eb:	int3   
640028ec:	int3   
640028ed:	int3   
640028ee:	int3   
640028ef:	int3   
640028f0:	mov    edx,DWORD PTR [esp+0x4]
640028f4:	push   esi
640028f5:	mov    esi,ecx
640028f7:	mov    eax,edx
640028f9:	push   edi
640028fa:	mov    DWORD PTR [esi+0x18],0xf
64002901:	mov    DWORD PTR [esi+0x14],0x0
64002908:	mov    BYTE PTR [esi+0x4],0x0
6400290c:	lea    edi,[eax+0x1]
6400290f:	nop
64002910:	mov    cl,BYTE PTR [eax]
64002912:	add    eax,0x1
64002915:	test   cl,cl
64002917:	jne    0x64002910
64002919:	sub    eax,edi
6400291b:	push   eax
6400291c:	push   edx
6400291d:	mov    ecx,esi
6400291f:	call   0x640033f0
64002924:	pop    edi
64002925:	mov    eax,esi
64002927:	pop    esi
64002928:	ret    0x4
6400292b:	int3   
6400292c:	int3   
6400292d:	int3   
6400292e:	int3   
6400292f:	int3   
64002930:	push   esi
64002931:	mov    esi,ecx
64002933:	cmp    DWORD PTR [esi+0x18],0x10
64002937:	jb     0x64002945
64002939:	mov    eax,DWORD PTR [esi+0x4]
6400293c:	push   eax
6400293d:	call   0x64013604
64002942:	add    esp,0x4
64002945:	xor    eax,eax
64002947:	mov    DWORD PTR [esi+0x18],0xf
6400294e:	mov    DWORD PTR [esi+0x14],eax
64002951:	mov    BYTE PTR [esi+0x4],al
64002954:	pop    esi
64002955:	ret    
64002956:	int3   
64002957:	int3   
64002958:	int3   
64002959:	int3   
6400295a:	int3   
6400295b:	int3   
6400295c:	int3   
6400295d:	int3   
6400295e:	int3   
6400295f:	int3   
64002960:	mov    ecx,DWORD PTR [esp+0x4]
64002964:	push   ebx
64002965:	push   ebp
64002966:	mov    ebp,DWORD PTR [esp+0x10]
6400296a:	push   esi
6400296b:	mov    esi,eax
6400296d:	mov    edx,DWORD PTR [esi+0x18]
64002970:	cmp    edx,0x10
64002973:	push   edi
64002974:	lea    ebx,[esi+0x4]
64002977:	jb     0x6400297d
64002979:	mov    eax,DWORD PTR [ebx]
6400297b:	jmp    0x6400297f
6400297d:	mov    eax,ebx
6400297f:	cmp    ecx,eax
64002981:	jb     0x640029b0
64002983:	cmp    edx,0x10
64002986:	jb     0x6400298c
64002988:	mov    eax,DWORD PTR [ebx]
6400298a:	jmp    0x6400298e
6400298c:	mov    eax,ebx
6400298e:	mov    edi,DWORD PTR [esi+0x14]
64002991:	add    edi,eax
64002993:	cmp    edi,ecx
64002995:	jbe    0x640029b0
64002997:	cmp    edx,0x10
6400299a:	jb     0x6400299e
6400299c:	mov    ebx,DWORD PTR [ebx]
6400299e:	sub    ecx,ebx
640029a0:	push   ecx
640029a1:	push   esi
640029a2:	mov    eax,ebp
640029a4:	call   0x64003220
640029a9:	pop    edi
640029aa:	pop    esi
640029ab:	pop    ebp
640029ac:	pop    ebx
640029ad:	ret    0x8
640029b0:	mov    eax,DWORD PTR [esi+0x14]
640029b3:	or     ecx,0xffffffff
640029b6:	sub    ecx,eax
640029b8:	cmp    ecx,ebp
640029ba:	jbe    0x640029c3
640029bc:	lea    edx,[eax+ebp*1]
640029bf:	cmp    edx,eax
640029c1:	jae    0x640029c8
640029c3:	call   0x64012edc
640029c8:	test   ebp,ebp
640029ca:	jbe    0x64002a40
640029cc:	mov    edi,DWORD PTR [esi+0x14]
640029cf:	add    edi,ebp
640029d1:	cmp    edi,0xfffffffe
640029d4:	jbe    0x640029db
640029d6:	call   0x64012edc
640029db:	mov    eax,DWORD PTR [esi+0x18]
640029de:	cmp    eax,edi
640029e0:	jae    0x640029fe
640029e2:	mov    eax,DWORD PTR [esi+0x14]
640029e5:	push   eax
640029e6:	push   edi
640029e7:	mov    ecx,esi
640029e9:	call   0x64004040
640029ee:	test   edi,edi
640029f0:	jbe    0x64002a40
640029f2:	mov    eax,DWORD PTR [esi+0x18]
640029f5:	cmp    eax,0x10
640029f8:	jb     0x64002a18
640029fa:	mov    edx,DWORD PTR [ebx]
640029fc:	jmp    0x64002a1a
640029fe:	test   edi,edi
64002a00:	jne    0x640029f0
64002a02:	cmp    eax,0x10
64002a05:	mov    DWORD PTR [esi+0x14],edi
64002a08:	jb     0x64002a0c
64002a0a:	mov    ebx,DWORD PTR [ebx]
64002a0c:	pop    edi
64002a0d:	mov    eax,esi
64002a0f:	pop    esi
64002a10:	pop    ebp
64002a11:	mov    BYTE PTR [ebx],0x0
64002a14:	pop    ebx
64002a15:	ret    0x8
64002a18:	mov    edx,ebx
64002a1a:	mov    ecx,DWORD PTR [esi+0x14]
64002a1d:	push   ebp
64002a1e:	mov    ebp,DWORD PTR [esp+0x18]
64002a22:	sub    eax,ecx
64002a24:	push   ebp
64002a25:	push   eax
64002a26:	add    ecx,edx
64002a28:	push   ecx
64002a29:	call   0x6401375c
64002a2e:	add    esp,0x10
64002a31:	cmp    DWORD PTR [esi+0x18],0x10
64002a35:	mov    DWORD PTR [esi+0x14],edi
64002a38:	jb     0x64002a3c
64002a3a:	mov    ebx,DWORD PTR [ebx]
64002a3c:	mov    BYTE PTR [ebx+edi*1],0x0
64002a40:	pop    edi
64002a41:	mov    eax,esi
64002a43:	pop    esi
64002a44:	pop    ebp
64002a45:	pop    ebx
64002a46:	ret    0x8
64002a49:	int3   
64002a4a:	int3   
64002a4b:	int3   
64002a4c:	int3   
64002a4d:	int3   
64002a4e:	int3   
64002a4f:	int3   
64002a50:	push   0xffffffff
64002a52:	push   0x640233e8
64002a57:	mov    eax,fs:0x0
64002a5d:	push   eax
64002a5e:	push   ebx
64002a5f:	push   esi
64002a60:	push   edi
64002a61:	mov    eax,ds:0x64037644
64002a66:	xor    eax,esp
64002a68:	push   eax
64002a69:	lea    eax,[esp+0x10]
64002a6d:	mov    fs:0x0,eax
64002a73:	mov    esi,ecx
64002a75:	mov    ebx,DWORD PTR [esp+0x20]
64002a79:	mov    eax,ds:0x64038e64
64002a7e:	mov    edx,DWORD PTR [eax+0xc]
64002a81:	mov    ecx,0x64038e64
64002a86:	call   edx
64002a88:	add    eax,0x10
64002a8b:	mov    DWORD PTR [ebx],eax
64002a8d:	test   esi,esi
64002a8f:	mov    DWORD PTR [esp+0x18],0x0
64002a97:	je     0x64002abe
64002a99:	test   esi,0xffff0000
64002a9f:	jne    0x64002ac2
64002aa1:	movzx  esi,si
64002aa4:	push   0x0
64002aa6:	push   esi
64002aa7:	call   0x64001170
64002aac:	add    esp,0x8
64002aaf:	test   eax,eax
64002ab1:	je     0x64002adf
64002ab3:	push   esi
64002ab4:	push   eax
64002ab5:	mov    ecx,ebx
64002ab7:	call   0x64004af0
64002abc:	jmp    0x64002adf
64002abe:	xor    eax,eax
64002ac0:	jmp    0x64002ad6
64002ac2:	mov    eax,esi
64002ac4:	lea    edx,[eax+0x2]
64002ac7:	mov    cx,WORD PTR [eax]
64002aca:	add    eax,0x2
64002acd:	test   cx,cx
64002ad0:	jne    0x64002ac7
64002ad2:	sub    eax,edx
64002ad4:	sar    eax,1
64002ad6:	push   esi
64002ad7:	push   ebx
64002ad8:	mov    edi,eax
64002ada:	call   0x64004290
64002adf:	mov    eax,ebx
64002ae1:	mov    ecx,DWORD PTR [esp+0x10]
64002ae5:	mov    DWORD PTR fs:0x0,ecx
64002aec:	pop    ecx
64002aed:	pop    edi
64002aee:	pop    esi
64002aef:	pop    ebx
64002af0:	add    esp,0xc
64002af3:	ret    0x4
64002af6:	int3   
64002af7:	int3   
64002af8:	int3   
64002af9:	int3   
64002afa:	int3   
64002afb:	int3   
64002afc:	int3   
64002afd:	int3   
64002afe:	int3   
64002aff:	int3   
64002b00:	push   0xffffffff
64002b02:	push   0x640233b8
64002b07:	mov    eax,fs:0x0
64002b0d:	push   eax
64002b0e:	push   ecx
64002b0f:	push   esi
64002b10:	push   edi
64002b11:	mov    eax,ds:0x64037644
64002b16:	xor    eax,esp
64002b18:	push   eax
64002b19:	lea    eax,[esp+0x10]
64002b1d:	mov    fs:0x0,eax
64002b23:	mov    esi,ecx
64002b25:	mov    DWORD PTR [esp+0xc],esi
64002b29:	mov    eax,ds:0x64038e64
64002b2e:	mov    edx,DWORD PTR [eax+0xc]
64002b31:	mov    ecx,0x64038e64
64002b36:	call   edx
64002b38:	add    eax,0x10
64002b3b:	mov    DWORD PTR [esi],eax
64002b3d:	mov    eax,DWORD PTR [esp+0x20]
64002b41:	test   eax,eax
64002b43:	mov    DWORD PTR [esp+0x18],0x0
64002b4b:	je     0x64002b71
64002b4d:	test   eax,0xffff0000
64002b52:	jne    0x64002b71
64002b54:	movzx  edi,ax
64002b57:	push   0x0
64002b59:	push   edi
64002b5a:	call   0x64001170
64002b5f:	add    esp,0x8
64002b62:	test   eax,eax
64002b64:	je     0x64002b79
64002b66:	push   edi
64002b67:	push   eax
64002b68:	mov    ecx,esi
64002b6a:	call   0x64004af0
64002b6f:	jmp    0x64002b79
64002b71:	push   eax
64002b72:	mov    ecx,esi
64002b74:	call   0x64003590
64002b79:	mov    eax,esi
64002b7b:	mov    ecx,DWORD PTR [esp+0x10]
64002b7f:	mov    DWORD PTR fs:0x0,ecx
64002b86:	pop    ecx
64002b87:	pop    edi
64002b88:	pop    esi
64002b89:	add    esp,0x10
64002b8c:	ret    0x4
64002b8f:	int3   
64002b90:	mov    eax,DWORD PTR [ecx]
64002b92:	sub    eax,0x10
64002b95:	lea    ecx,[eax+0xc]
64002b98:	or     edx,0xffffffff
64002b9b:	lock xadd DWORD PTR [ecx],edx
64002b9f:	dec    edx
64002ba0:	test   edx,edx
64002ba2:	jg     0x64002bae
64002ba4:	mov    ecx,DWORD PTR [eax]
64002ba6:	mov    edx,DWORD PTR [ecx]
64002ba8:	push   eax
64002ba9:	mov    eax,DWORD PTR [edx+0x4]
64002bac:	call   eax
64002bae:	ret    
64002baf:	int3   
64002bb0:	mov    eax,DWORD PTR [edi]
64002bb2:	mov    edx,DWORD PTR [eax-0x8]
64002bb5:	push   ebx
64002bb6:	mov    ebx,DWORD PTR [eax-0xc]
64002bb9:	push   esi
64002bba:	mov    ecx,0x1
64002bbf:	sub    ecx,DWORD PTR [eax-0x4]
64002bc2:	lea    esi,[ebx+0x1]
64002bc5:	sub    edx,esi
64002bc7:	or     ecx,edx
64002bc9:	jge    0x64002bd3
64002bcb:	push   esi
64002bcc:	mov    ecx,edi
64002bce:	call   0x64004340
64002bd3:	test   esi,esi
64002bd5:	mov    eax,DWORD PTR [edi]
64002bd7:	mov    cx,WORD PTR [esp+0xc]
64002bdc:	mov    WORD PTR [eax+ebx*2],cx
64002be0:	jl     0x64002bfb
64002be2:	mov    eax,DWORD PTR [edi]
64002be4:	cmp    esi,DWORD PTR [eax-0x8]
64002be7:	jg     0x64002bfb
64002be9:	mov    DWORD PTR [eax-0xc],esi
64002bec:	mov    edx,DWORD PTR [edi]
64002bee:	mov    WORD PTR [edx+esi*2],0x0
64002bf4:	pop    esi
64002bf5:	mov    eax,edi
64002bf7:	pop    ebx
64002bf8:	ret    0x4
64002bfb:	push   0x80070057
64002c00:	call   0x64001040
64002c05:	int3   
64002c06:	int3   
64002c07:	int3   
64002c08:	int3   
64002c09:	int3   
64002c0a:	int3   
64002c0b:	int3   
64002c0c:	int3   
64002c0d:	int3   
64002c0e:	int3   
64002c0f:	int3   
64002c10:	push   ebx
64002c11:	push   ebp
64002c12:	mov    ebp,DWORD PTR [esp+0xc]
64002c16:	push   esi
64002c17:	mov    esi,eax
64002c19:	test   esi,esi
64002c1b:	push   edi
64002c1c:	mov    edi,ecx
64002c1e:	mov    DWORD PTR [esp+0x14],0x0
64002c26:	jge    0x64002c2a
64002c28:	xor    esi,esi
64002c2a:	mov    eax,DWORD PTR [ebp+0x0]
64002c2d:	mov    ebx,DWORD PTR [eax-0xc]
64002c30:	cmp    esi,ebx
64002c32:	jl     0x64002c4a
64002c34:	add    eax,0xfffffff0
64002c37:	call   0x64004390
64002c3c:	add    eax,0x10
64002c3f:	mov    DWORD PTR [edi],eax
64002c41:	mov    eax,edi
64002c43:	pop    edi
64002c44:	pop    esi
64002c45:	pop    ebp
64002c46:	pop    ebx
64002c47:	ret    0x4
64002c4a:	mov    eax,DWORD PTR [eax-0x10]
64002c4d:	test   eax,eax
64002c4f:	je     0x64002c5e
64002c51:	mov    edx,DWORD PTR [eax]
64002c53:	mov    ecx,eax
64002c55:	mov    eax,DWORD PTR [edx+0x10]
64002c58:	call   eax
64002c5a:	test   eax,eax
64002c5c:	jne    0x64002c6e
64002c5e:	mov    edx,DWORD PTR ds:0x64038e64
64002c64:	mov    eax,DWORD PTR [edx+0x10]
64002c67:	mov    ecx,0x64038e64
64002c6c:	call   eax
64002c6e:	mov    ecx,DWORD PTR [ebp+0x0]
64002c71:	sub    ebx,esi
64002c73:	lea    ebx,[ecx+ebx*2]
64002c76:	mov    ecx,eax
64002c78:	call   0x640041c0
64002c7d:	mov    eax,edi
64002c7f:	pop    edi
64002c80:	pop    esi
64002c81:	pop    ebp
64002c82:	pop    ebx
64002c83:	ret    0x4
64002c86:	int3   
64002c87:	int3   
64002c88:	int3   
64002c89:	int3   
64002c8a:	int3   
64002c8b:	int3   
64002c8c:	int3   
64002c8d:	int3   
64002c8e:	int3   
64002c8f:	int3   
64002c90:	push   0xffffffff
64002c92:	push   0x64023289
64002c97:	mov    eax,fs:0x0
64002c9d:	push   eax
64002c9e:	push   ebp
64002c9f:	push   esi
64002ca0:	mov    eax,ds:0x64037644
64002ca5:	xor    eax,esp
64002ca7:	push   eax
64002ca8:	lea    eax,[esp+0xc]
64002cac:	mov    fs:0x0,eax
64002cb2:	mov    ebp,DWORD PTR [esp+0x20]
64002cb6:	mov    esi,DWORD PTR [esp+0x1c]
64002cba:	mov    DWORD PTR [esp+0x14],0x0
64002cc2:	mov    DWORD PTR [esp+0x20],0x0
64002cca:	mov    eax,DWORD PTR [ebp+0x0]
64002ccd:	mov    ecx,DWORD PTR [eax-0x10]
64002cd0:	test   ecx,ecx
64002cd2:	je     0x64002cdf
64002cd4:	mov    edx,DWORD PTR [ecx]
64002cd6:	mov    eax,DWORD PTR [edx+0x10]
64002cd9:	call   eax
64002cdb:	test   eax,eax
64002cdd:	jne    0x64002cef
64002cdf:	mov    edx,DWORD PTR ds:0x64038e64
64002ce5:	mov    eax,DWORD PTR [edx+0x10]
64002ce8:	mov    ecx,0x64038e64
64002ced:	call   eax
64002cef:	xor    ecx,ecx
64002cf1:	test   eax,eax
64002cf3:	setne  cl
64002cf6:	test   ecx,ecx
64002cf8:	jne    0x64002d04
64002cfa:	push   0x80004005
64002cff:	call   0x64001040
64002d04:	mov    edx,DWORD PTR [eax]
64002d06:	mov    ecx,eax
64002d08:	mov    eax,DWORD PTR [edx+0xc]
64002d0b:	call   eax
64002d0d:	add    eax,0x10
64002d10:	mov    DWORD PTR [esi],eax
64002d12:	test   ebx,ebx
64002d14:	mov    DWORD PTR [esp+0x14],0x0
64002d1c:	mov    DWORD PTR [esp+0x20],0x1
64002d24:	jne    0x64002d2a
64002d26:	xor    edx,edx
64002d28:	jmp    0x64002d41
64002d2a:	mov    eax,ebx
64002d2c:	lea    edx,[eax+0x2]
64002d2f:	nop
64002d30:	mov    cx,WORD PTR [eax]
64002d33:	add    eax,0x2
64002d36:	test   cx,cx
64002d39:	jne    0x64002d30
64002d3b:	sub    eax,edx
64002d3d:	sar    eax,1
64002d3f:	mov    edx,eax
64002d41:	mov    ecx,DWORD PTR [ebp+0x0]
64002d44:	mov    eax,DWORD PTR [ecx-0xc]
64002d47:	push   edx
64002d48:	push   ebx
64002d49:	push   ecx
64002d4a:	push   esi
64002d4b:	call   0x640036f0
64002d50:	add    esp,0x10
64002d53:	mov    eax,esi
64002d55:	mov    ecx,DWORD PTR [esp+0xc]
64002d59:	mov    DWORD PTR fs:0x0,ecx
64002d60:	pop    ecx
64002d61:	pop    esi
64002d62:	pop    ebp
64002d63:	add    esp,0xc
64002d66:	ret    
64002d67:	int3   
64002d68:	int3   
64002d69:	int3   
64002d6a:	int3   
64002d6b:	int3   
64002d6c:	int3   
64002d6d:	int3   
64002d6e:	int3   
64002d6f:	int3   
64002d70:	mov    ecx,DWORD PTR [esp+0x8]
64002d74:	test   ecx,ecx
64002d76:	jne    0x64002d82
64002d78:	push   0x80004005
64002d7d:	call   0x64001040
64002d82:	mov    eax,DWORD PTR [esp+0x4]
64002d86:	mov    eax,DWORD PTR [eax]
64002d88:	mov    dx,WORD PTR [eax]
64002d8b:	cmp    dx,WORD PTR [ecx]
64002d8e:	jne    0x64002db6
64002d90:	test   dx,dx
64002d93:	je     0x64002daa
64002d95:	mov    dx,WORD PTR [eax+0x2]
64002d99:	cmp    dx,WORD PTR [ecx+0x2]
64002d9d:	jne    0x64002db6
64002d9f:	add    eax,0x4
64002da2:	add    ecx,0x4
64002da5:	test   dx,dx
64002da8:	jne    0x64002d88
64002daa:	xor    eax,eax
64002dac:	xor    ecx,ecx
64002dae:	test   eax,eax
64002db0:	sete   cl
64002db3:	mov    al,cl
64002db5:	ret    
64002db6:	sbb    eax,eax
64002db8:	sbb    eax,0xffffffff
64002dbb:	xor    ecx,ecx
64002dbd:	test   eax,eax
64002dbf:	sete   cl
64002dc2:	mov    al,cl
64002dc4:	ret    
64002dc5:	int3   
64002dc6:	int3   
64002dc7:	int3   
64002dc8:	int3   
64002dc9:	int3   
64002dca:	int3   
64002dcb:	int3   
64002dcc:	int3   
64002dcd:	int3   
64002dce:	int3   
64002dcf:	int3   
64002dd0:	push   esi
64002dd1:	mov    esi,ecx
64002dd3:	mov    eax,DWORD PTR [esi]
64002dd5:	mov    edx,DWORD PTR [eax-0x8]
64002dd8:	sub    eax,0x10
64002ddb:	mov    ecx,0x1
64002de0:	sub    ecx,DWORD PTR [eax+0xc]
64002de3:	mov    eax,DWORD PTR [esp+0x8]
64002de7:	sub    edx,eax
64002de9:	or     ecx,edx
64002deb:	jge    0x64002df5
64002ded:	push   eax
64002dee:	mov    ecx,esi
64002df0:	call   0x64004340
64002df5:	mov    eax,DWORD PTR [esi]
64002df7:	pop    esi
64002df8:	ret    0x4
64002dfb:	int3   
64002dfc:	int3   
64002dfd:	int3   
64002dfe:	int3   
64002dff:	int3   
64002e00:	push   esi
64002e01:	mov    esi,ecx
64002e03:	push   edi
64002e04:	mov    edi,DWORD PTR [esi]
64002e06:	test   edi,edi
64002e08:	je     0x64002e22
64002e0a:	push   ebx
64002e0b:	call   DWORD PTR ds:0x64024068
64002e11:	push   edi
64002e12:	mov    ebx,eax
64002e14:	call   DWORD PTR ds:0x64024074
64002e1a:	push   ebx
64002e1b:	call   DWORD PTR ds:0x64024070
64002e21:	pop    ebx
64002e22:	pop    edi
64002e23:	mov    DWORD PTR [esi],0x0
64002e29:	pop    esi
64002e2a:	ret    
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   ebp
64002e31:	mov    ebp,esp
64002e33:	and    esp,0xfffffff8
64002e36:	push   0xffffffff
64002e38:	push   0x640236b0
64002e3d:	mov    eax,fs:0x0
64002e43:	push   eax
64002e44:	sub    esp,0x50
64002e47:	mov    eax,ds:0x64037644
64002e4c:	xor    eax,esp
64002e4e:	mov    DWORD PTR [esp+0x48],eax
64002e52:	push   ebx
64002e53:	push   esi
64002e54:	push   edi
64002e55:	mov    eax,ds:0x64037644
64002e5a:	xor    eax,esp
64002e5c:	push   eax
64002e5d:	lea    eax,[esp+0x60]
64002e61:	mov    fs:0x0,eax
64002e67:	mov    eax,ds:0x640399c8
64002e6c:	mov    esi,DWORD PTR [ebp+0x8]
64002e6f:	xor    edi,edi
64002e71:	cmp    eax,edi
64002e73:	mov    DWORD PTR [esp+0x1c],esi
64002e77:	jne    0x64002e87
64002e79:	push   edi
64002e7a:	push   edi
64002e7b:	push   edi
64002e7c:	call   DWORD PTR ds:0x64024090
64002e82:	mov    ds:0x640399c8,eax
64002e87:	push   0xffffffff
64002e89:	push   eax
64002e8a:	call   DWORD PTR ds:0x64024058
64002e90:	test   eax,eax
64002e92:	je     0x64002e9b
64002e94:	mov    eax,esi
64002e96:	jmp    0x64003007
64002e9b:	mov    eax,DWORD PTR [ebp+0xc]
64002e9e:	push   eax
64002e9f:	push   esi
64002ea0:	lea    ecx,[esp+0x28]
64002ea4:	mov    DWORD PTR [esp+0x40],0xf
64002eac:	mov    DWORD PTR [esp+0x3c],edi
64002eb0:	mov    BYTE PTR [esp+0x2c],0x0
64002eb5:	call   0x640033f0
64002eba:	lea    ecx,[esp+0x20]
64002ebe:	push   ecx
64002ebf:	lea    edx,[esp+0x18]
64002ec3:	push   edx
64002ec4:	mov    DWORD PTR [esp+0x70],edi
64002ec8:	call   0x64003800
64002ecd:	mov    ecx,eax
64002ecf:	call   0x64003c20
64002ed4:	call   0x64003800
64002ed9:	mov    esi,DWORD PTR [esp+0x14]
64002edd:	cmp    esi,edi
64002edf:	mov    ebx,DWORD PTR [eax+0x4]
64002ee2:	je     0x64002ee8
64002ee4:	cmp    esi,eax
64002ee6:	je     0x64002eed
64002ee8:	call   0x64013e36
64002eed:	mov    edi,DWORD PTR [esp+0x18]
64002ef1:	cmp    edi,ebx
64002ef3:	jne    0x64002f6a
64002ef5:	sub    esp,0x1c
64002ef8:	mov    ecx,esp
64002efa:	mov    DWORD PTR [esp+0x30],esp
64002efe:	push   0xffffffff
64002f00:	push   0x0
64002f02:	lea    eax,[esp+0x44]
64002f06:	mov    DWORD PTR [ecx+0x18],0xf
64002f0d:	mov    DWORD PTR [ecx+0x14],0x0
64002f14:	push   eax
64002f15:	mov    BYTE PTR [ecx+0x4],0x0
64002f19:	call   0x64003310
64002f1e:	lea    ecx,[esp+0x58]
64002f22:	push   ecx
64002f23:	call   0x64003890
64002f28:	add    esp,0x20
64002f2b:	lea    edx,[esp+0x20]
64002f2f:	push   edx
64002f30:	mov    BYTE PTR [esp+0x6c],0x1
64002f35:	call   0x64003800
64002f3a:	mov    ecx,eax
64002f3c:	call   0x64003ac0
64002f41:	push   0xffffffff
64002f43:	push   0x0
64002f45:	lea    ecx,[esp+0x44]
64002f49:	push   ecx
64002f4a:	mov    ecx,eax
64002f4c:	call   0x64003310
64002f51:	mov    BYTE PTR [esp+0x68],0x0
64002f56:	cmp    DWORD PTR [esp+0x54],0x10
64002f5b:	jb     0x64002f6a
64002f5d:	mov    edx,DWORD PTR [esp+0x40]
64002f61:	push   edx
64002f62:	call   0x64013604
64002f67:	add    esp,0x4
64002f6a:	mov    eax,DWORD PTR [ebp+0x10]
64002f6d:	movzx  ecx,BYTE PTR [eax]
64002f70:	cmp    ecx,0x100
64002f76:	jge    0x64002f93
64002f78:	lea    edx,[esp+0x20]
64002f7c:	push   edx
64002f7d:	lea    eax,[esp+0x18]
64002f81:	push   eax
64002f82:	call   0x64003800
64002f87:	mov    ecx,eax
64002f89:	call   0x64003c20
64002f8e:	mov    esi,DWORD PTR [eax]
64002f90:	mov    edi,DWORD PTR [eax+0x4]
64002f93:	call   0x64003800
64002f98:	test   esi,esi
64002f9a:	mov    ebx,DWORD PTR [eax+0x4]
64002f9d:	je     0x64002fa3
64002f9f:	cmp    esi,eax
64002fa1:	je     0x64002fa8
64002fa3:	call   0x64013e36
64002fa8:	cmp    edi,ebx
64002faa:	je     0x64002fcf
64002fac:	test   esi,esi
64002fae:	jne    0x64002fb5
64002fb0:	call   0x64013e36
64002fb5:	cmp    edi,DWORD PTR [esi+0x4]
64002fb8:	jne    0x64002fbf
64002fba:	call   0x64013e36
64002fbf:	cmp    DWORD PTR [edi+0x40],0x10
64002fc3:	jb     0x64002fca
64002fc5:	mov    edi,DWORD PTR [edi+0x2c]
64002fc8:	jmp    0x64002fd3
64002fca:	add    edi,0x2c
64002fcd:	jmp    0x64002fd3
64002fcf:	mov    edi,DWORD PTR [esp+0x1c]
64002fd3:	mov    eax,ds:0x640399c8
64002fd8:	test   eax,eax
64002fda:	jne    0x64002fea
64002fdc:	push   eax
64002fdd:	push   eax
64002fde:	push   eax
64002fdf:	call   DWORD PTR ds:0x64024090
64002fe5:	mov    ds:0x640399c8,eax
64002fea:	push   eax
64002feb:	call   DWORD PTR ds:0x64024094
64002ff1:	cmp    DWORD PTR [esp+0x38],0x10
64002ff6:	jb     0x64003005
64002ff8:	mov    ecx,DWORD PTR [esp+0x24]
64002ffc:	push   ecx
64002ffd:	call   0x64013604
64003002:	add    esp,0x4
64003005:	mov    eax,edi
64003007:	mov    ecx,DWORD PTR [esp+0x60]
6400300b:	mov    DWORD PTR fs:0x0,ecx
64003012:	pop    ecx
64003013:	pop    edi
64003014:	pop    esi
64003015:	pop    ebx
64003016:	mov    ecx,DWORD PTR [esp+0x48]
6400301a:	xor    ecx,esp
6400301c:	call   0x64013cc6
64003021:	mov    esp,ebp
64003023:	pop    ebp
64003024:	ret    
64003025:	int3   
64003026:	int3   
64003027:	int3   
64003028:	int3   
64003029:	int3   
6400302a:	int3   
6400302b:	int3   
6400302c:	int3   
6400302d:	int3   
6400302e:	int3   
6400302f:	int3   
64003030:	push   ebp
64003031:	mov    ebp,esp
64003033:	and    esp,0xfffffff8
64003036:	push   0xffffffff
64003038:	push   0x64023670
6400303d:	mov    eax,fs:0x0
64003043:	push   eax
64003044:	sub    esp,0x50
64003047:	mov    eax,ds:0x64037644
6400304c:	xor    eax,esp
6400304e:	mov    DWORD PTR [esp+0x48],eax
64003052:	push   ebx
64003053:	push   esi
64003054:	push   edi
64003055:	mov    eax,ds:0x64037644
6400305a:	xor    eax,esp
6400305c:	push   eax
6400305d:	lea    eax,[esp+0x60]
64003061:	mov    fs:0x0,eax
64003067:	mov    eax,ds:0x640399c8
6400306c:	xor    ebx,ebx
6400306e:	cmp    eax,ebx
64003070:	mov    esi,ecx
64003072:	mov    DWORD PTR [esp+0x1c],esi
64003076:	jne    0x64003086
64003078:	push   ebx
64003079:	push   ebx
6400307a:	push   ebx
6400307b:	call   DWORD PTR ds:0x64024090
64003081:	mov    ds:0x640399c8,eax
64003086:	push   0xffffffff
64003088:	push   eax
64003089:	call   DWORD PTR ds:0x64024058
6400308f:	test   eax,eax
64003091:	je     0x6400309a
64003093:	mov    eax,esi
64003095:	jmp    0x640031fb
6400309a:	mov    eax,DWORD PTR [ebp+0x8]
6400309d:	push   eax
6400309e:	push   esi
6400309f:	lea    esi,[esp+0x28]
640030a3:	mov    DWORD PTR [esp+0x40],0x7
640030ab:	mov    DWORD PTR [esp+0x3c],ebx
640030af:	mov    WORD PTR [esp+0x2c],bx
640030b4:	call   0x64004780
640030b9:	mov    ecx,esi
640030bb:	push   ecx
640030bc:	lea    edx,[esp+0x18]
640030c0:	push   edx
640030c1:	mov    DWORD PTR [esp+0x70],ebx
640030c5:	call   0x64003960
640030ca:	mov    ebx,eax
640030cc:	call   0x64003e50
640030d1:	call   0x64003960
640030d6:	mov    ebx,DWORD PTR [esp+0x14]
640030da:	test   ebx,ebx
640030dc:	mov    esi,DWORD PTR [eax+0x4]
640030df:	je     0x640030e5
640030e1:	cmp    ebx,eax
640030e3:	je     0x640030ea
640030e5:	call   0x64013e36
640030ea:	mov    edi,DWORD PTR [esp+0x18]
640030ee:	cmp    edi,esi
640030f0:	jne    0x6400315f
640030f2:	sub    esp,0x1c
640030f5:	mov    ecx,esp
640030f7:	xor    eax,eax
640030f9:	mov    DWORD PTR [esp+0x30],esp
640030fd:	mov    DWORD PTR [ecx+0x14],eax
64003100:	push   0xffffffff
64003102:	mov    DWORD PTR [ecx+0x18],0x7
64003109:	mov    WORD PTR [ecx+0x4],ax
6400310d:	push   eax
6400310e:	lea    eax,[esp+0x44]
64003112:	call   0x640046d0
64003117:	lea    esi,[esp+0x58]
6400311b:	call   0x640039f0
64003120:	add    esp,0x1c
64003123:	lea    eax,[esp+0x20]
64003127:	push   eax
64003128:	mov    BYTE PTR [esp+0x6c],0x1
6400312d:	call   0x64003960
64003132:	mov    ecx,eax
64003134:	call   0x64003d00
64003139:	push   0xffffffff
6400313b:	mov    ecx,eax
6400313d:	push   0x0
6400313f:	mov    eax,esi
64003141:	call   0x640046d0
64003146:	mov    BYTE PTR [esp+0x68],0x0
6400314b:	cmp    DWORD PTR [esp+0x54],0x8
64003150:	jb     0x6400315f
64003152:	mov    ecx,DWORD PTR [esp+0x40]
64003156:	push   ecx
64003157:	call   0x64013604
6400315c:	add    esp,0x4
6400315f:	mov    edx,DWORD PTR [ebp+0xc]
64003162:	movzx  eax,BYTE PTR [edx]
64003165:	cmp    eax,0x100
6400316a:	jge    0x64003187
6400316c:	lea    ecx,[esp+0x20]
64003170:	push   ecx
64003171:	lea    edx,[esp+0x18]
64003175:	push   edx
64003176:	call   0x64003960
6400317b:	mov    ebx,eax
6400317d:	call   0x64003e50
64003182:	mov    ebx,DWORD PTR [eax]
64003184:	mov    edi,DWORD PTR [eax+0x4]
64003187:	call   0x64003960
6400318c:	test   ebx,ebx
6400318e:	mov    esi,DWORD PTR [eax+0x4]
64003191:	je     0x64003197
64003193:	cmp    ebx,eax
64003195:	je     0x6400319c
64003197:	call   0x64013e36
6400319c:	cmp    edi,esi
6400319e:	je     0x640031c3
640031a0:	test   ebx,ebx
640031a2:	jne    0x640031a9
640031a4:	call   0x64013e36
640031a9:	cmp    edi,DWORD PTR [ebx+0x4]
640031ac:	jne    0x640031b3
640031ae:	call   0x64013e36
640031b3:	cmp    DWORD PTR [edi+0x40],0x8
640031b7:	jb     0x640031be
640031b9:	mov    edi,DWORD PTR [edi+0x2c]
640031bc:	jmp    0x640031c7
640031be:	add    edi,0x2c
640031c1:	jmp    0x640031c7
640031c3:	mov    edi,DWORD PTR [esp+0x1c]
640031c7:	mov    eax,ds:0x640399c8
640031cc:	test   eax,eax
640031ce:	jne    0x640031de
640031d0:	push   eax
640031d1:	push   eax
640031d2:	push   eax
640031d3:	call   DWORD PTR ds:0x64024090
640031d9:	mov    ds:0x640399c8,eax
640031de:	push   eax
640031df:	call   DWORD PTR ds:0x64024094
640031e5:	cmp    DWORD PTR [esp+0x38],0x8
640031ea:	jb     0x640031f9
640031ec:	mov    eax,DWORD PTR [esp+0x24]
640031f0:	push   eax
640031f1:	call   0x64013604
640031f6:	add    esp,0x4
640031f9:	mov    eax,edi
640031fb:	mov    ecx,DWORD PTR [esp+0x60]
640031ff:	mov    DWORD PTR fs:0x0,ecx
64003206:	pop    ecx
64003207:	pop    edi
64003208:	pop    esi
64003209:	pop    ebx
6400320a:	mov    ecx,DWORD PTR [esp+0x48]
6400320e:	xor    ecx,esp
64003210:	call   0x64013cc6
64003215:	mov    esp,ebp
64003217:	pop    ebp
64003218:	ret    
64003219:	int3   
6400321a:	int3   
6400321b:	int3   
6400321c:	int3   
6400321d:	int3   
6400321e:	int3   
6400321f:	int3   
64003220:	push   ebx
64003221:	push   ebp
64003222:	mov    ebp,DWORD PTR [esp+0xc]
64003226:	push   edi
64003227:	mov    edi,DWORD PTR [esp+0x14]
6400322b:	cmp    DWORD PTR [ebp+0x14],edi
6400322e:	mov    ebx,eax
64003230:	jae    0x64003237
64003232:	call   0x64012f1b
64003237:	mov    eax,DWORD PTR [ebp+0x14]
6400323a:	sub    eax,edi
6400323c:	cmp    eax,ebx
6400323e:	jae    0x64003242
64003240:	mov    ebx,eax
64003242:	mov    eax,DWORD PTR [esi+0x14]
64003245:	or     ecx,0xffffffff
64003248:	sub    ecx,eax
6400324a:	cmp    ecx,ebx
6400324c:	jbe    0x64003255
6400324e:	lea    edx,[eax+ebx*1]
64003251:	cmp    edx,eax
64003253:	jae    0x6400325a
64003255:	call   0x64012edc
6400325a:	test   ebx,ebx
6400325c:	jbe    0x64003306
64003262:	mov    edi,DWORD PTR [esi+0x14]
64003265:	add    edi,ebx
64003267:	cmp    edi,0xfffffffe
6400326a:	jbe    0x64003271
6400326c:	call   0x64012edc
64003271:	mov    eax,DWORD PTR [esi+0x18]
64003274:	cmp    eax,edi
64003276:	jae    0x64003293
64003278:	mov    eax,DWORD PTR [esi+0x14]
6400327b:	push   eax
6400327c:	push   edi
6400327d:	mov    ecx,esi
6400327f:	call   0x64004040
64003284:	test   edi,edi
64003286:	jbe    0x64003306
64003288:	cmp    DWORD PTR [ebp+0x18],0x10
6400328c:	jb     0x640032bb
6400328e:	mov    ebp,DWORD PTR [ebp+0x4]
64003291:	jmp    0x640032be
64003293:	test   edi,edi
64003295:	jne    0x64003286
64003297:	cmp    eax,0x10
6400329a:	mov    DWORD PTR [esi+0x14],edi
6400329d:	jb     0x640032ad
6400329f:	mov    eax,DWORD PTR [esi+0x4]
640032a2:	pop    edi
640032a3:	pop    ebp
640032a4:	mov    BYTE PTR [eax],0x0
640032a7:	mov    eax,esi
640032a9:	pop    ebx
640032aa:	ret    0x8
640032ad:	pop    edi
640032ae:	lea    eax,[esi+0x4]
640032b1:	pop    ebp
640032b2:	mov    BYTE PTR [eax],0x0
640032b5:	mov    eax,esi
640032b7:	pop    ebx
640032b8:	ret    0x8
640032bb:	add    ebp,0x4
640032be:	mov    eax,DWORD PTR [esi+0x18]
640032c1:	cmp    eax,0x10
640032c4:	jb     0x640032cb
640032c6:	mov    edx,DWORD PTR [esi+0x4]
640032c9:	jmp    0x640032ce
640032cb:	lea    edx,[esi+0x4]
640032ce:	mov    ecx,DWORD PTR [esi+0x14]
640032d1:	push   ebx
640032d2:	mov    ebx,DWORD PTR [esp+0x18]
640032d6:	add    ebp,ebx
640032d8:	sub    eax,ecx
640032da:	push   ebp
640032db:	push   eax
640032dc:	add    ecx,edx
640032de:	push   ecx
640032df:	call   0x6401375c
640032e4:	add    esp,0x10
640032e7:	cmp    DWORD PTR [esi+0x18],0x10
640032eb:	mov    DWORD PTR [esi+0x14],edi
640032ee:	jb     0x640032ff
640032f0:	mov    eax,DWORD PTR [esi+0x4]
640032f3:	mov    BYTE PTR [eax+edi*1],0x0
640032f7:	pop    edi
640032f8:	pop    ebp
640032f9:	mov    eax,esi
640032fb:	pop    ebx
640032fc:	ret    0x8
640032ff:	lea    eax,[esi+0x4]
64003302:	mov    BYTE PTR [eax+edi*1],0x0
64003306:	pop    edi
64003307:	pop    ebp
64003308:	mov    eax,esi
6400330a:	pop    ebx
6400330b:	ret    0x8
6400330e:	int3   
6400330f:	int3   
64003310:	push   ebx
64003311:	mov    ebx,DWORD PTR [esp+0x8]
64003315:	push   ebp
64003316:	mov    ebp,DWORD PTR [esp+0x10]
6400331a:	cmp    DWORD PTR [ebx+0x14],ebp
6400331d:	push   esi
6400331e:	push   edi
6400331f:	mov    esi,ecx
64003321:	jae    0x64003328
64003323:	call   0x64012f1b
64003328:	mov    edi,DWORD PTR [ebx+0x14]
6400332b:	mov    eax,DWORD PTR [esp+0x1c]
6400332f:	sub    edi,ebp
64003331:	cmp    eax,edi
64003333:	jae    0x64003337
64003335:	mov    edi,eax
64003337:	cmp    esi,ebx
64003339:	jne    0x6400335a
6400333b:	push   0xffffffff
6400333d:	add    edi,ebp
6400333f:	push   edi
64003340:	mov    ecx,esi
64003342:	call   0x64003fb0
64003347:	push   ebp
64003348:	push   0x0
6400334a:	mov    ecx,esi
6400334c:	call   0x64003fb0
64003351:	pop    edi
64003352:	mov    eax,esi
64003354:	pop    esi
64003355:	pop    ebp
64003356:	pop    ebx
64003357:	ret    0xc
6400335a:	cmp    edi,0xfffffffe
6400335d:	jbe    0x64003364
6400335f:	call   0x64012edc
64003364:	mov    eax,DWORD PTR [esi+0x18]
64003367:	cmp    eax,edi
64003369:	jae    0x64003386
6400336b:	mov    eax,DWORD PTR [esi+0x14]
6400336e:	push   eax
6400336f:	push   edi
64003370:	mov    ecx,esi
64003372:	call   0x64004040
64003377:	test   edi,edi
64003379:	jbe    0x640033e1
6400337b:	cmp    DWORD PTR [ebx+0x18],0x10
6400337f:	jb     0x640033b0
64003381:	mov    edx,DWORD PTR [ebx+0x4]
64003384:	jmp    0x640033b3
64003386:	test   edi,edi
64003388:	jne    0x64003379
6400338a:	cmp    eax,0x10
6400338d:	mov    DWORD PTR [esi+0x14],edi
64003390:	jb     0x640033a1
64003392:	mov    eax,DWORD PTR [esi+0x4]
64003395:	pop    edi
64003396:	mov    BYTE PTR [eax],0x0
64003399:	mov    eax,esi
6400339b:	pop    esi
6400339c:	pop    ebp
6400339d:	pop    ebx
6400339e:	ret    0xc
640033a1:	lea    eax,[esi+0x4]
640033a4:	pop    edi
640033a5:	mov    BYTE PTR [eax],0x0
640033a8:	mov    eax,esi
640033aa:	pop    esi
640033ab:	pop    ebp
640033ac:	pop    ebx
640033ad:	ret    0xc
640033b0:	lea    edx,[ebx+0x4]
640033b3:	mov    ecx,DWORD PTR [esi+0x18]
640033b6:	cmp    ecx,0x10
640033b9:	lea    ebx,[esi+0x4]
640033bc:	jb     0x640033c2
640033be:	mov    eax,DWORD PTR [ebx]
640033c0:	jmp    0x640033c4
640033c2:	mov    eax,ebx
640033c4:	push   edi
640033c5:	add    edx,ebp
640033c7:	push   edx
640033c8:	push   ecx
640033c9:	push   eax
640033ca:	call   0x6401375c
640033cf:	add    esp,0x10
640033d2:	cmp    DWORD PTR [esi+0x18],0x10
640033d6:	mov    DWORD PTR [esi+0x14],edi
640033d9:	jb     0x640033dd
640033db:	mov    ebx,DWORD PTR [ebx]
640033dd:	mov    BYTE PTR [ebx+edi*1],0x0
640033e1:	pop    edi
640033e2:	mov    eax,esi
640033e4:	pop    esi
640033e5:	pop    ebp
640033e6:	pop    ebx
640033e7:	ret    0xc
640033ea:	int3   
640033eb:	int3   
640033ec:	int3   
640033ed:	int3   
640033ee:	int3   
640033ef:	int3   
640033f0:	push   ebx
640033f1:	push   ebp
640033f2:	push   esi
640033f3:	mov    esi,ecx
640033f5:	mov    ecx,DWORD PTR [esi+0x18]
640033f8:	cmp    ecx,0x10
640033fb:	lea    ebx,[esi+0x4]
640033fe:	jb     0x64003404
64003400:	mov    eax,DWORD PTR [ebx]
64003402:	jmp    0x64003406
64003404:	mov    eax,ebx
64003406:	mov    ebp,DWORD PTR [esp+0x10]
6400340a:	cmp    ebp,eax
6400340c:	jb     0x6400343f
6400340e:	cmp    ecx,0x10
64003411:	jb     0x64003417
64003413:	mov    eax,DWORD PTR [ebx]
64003415:	jmp    0x64003419
64003417:	mov    eax,ebx
64003419:	mov    edx,DWORD PTR [esi+0x14]
6400341c:	add    edx,eax
6400341e:	cmp    edx,ebp
64003420:	jbe    0x6400343f
64003422:	cmp    ecx,0x10
64003425:	jb     0x64003429
64003427:	mov    ebx,DWORD PTR [ebx]
64003429:	mov    eax,DWORD PTR [esp+0x14]
6400342d:	push   eax
6400342e:	sub    ebp,ebx
64003430:	push   ebp
64003431:	push   esi
64003432:	mov    ecx,esi
64003434:	call   0x64003310
64003439:	pop    esi
6400343a:	pop    ebp
6400343b:	pop    ebx
6400343c:	ret    0x8
6400343f:	push   edi
64003440:	mov    edi,DWORD PTR [esp+0x18]
64003444:	cmp    edi,0xfffffffe
64003447:	jbe    0x6400344e
64003449:	call   0x64012edc
6400344e:	mov    eax,DWORD PTR [esi+0x18]
64003451:	cmp    eax,edi
64003453:	jae    0x64003471
64003455:	mov    ecx,DWORD PTR [esi+0x14]
64003458:	push   ecx
64003459:	push   edi
6400345a:	mov    ecx,esi
6400345c:	call   0x64004040
64003461:	test   edi,edi
64003463:	jbe    0x640034a8
64003465:	mov    ecx,DWORD PTR [esi+0x18]
64003468:	cmp    ecx,0x10
6400346b:	jb     0x6400348b
6400346d:	mov    eax,DWORD PTR [ebx]
6400346f:	jmp    0x6400348d
64003471:	test   edi,edi
64003473:	jne    0x64003463
64003475:	cmp    eax,0x10
64003478:	mov    DWORD PTR [esi+0x14],edi
6400347b:	jb     0x6400347f
6400347d:	mov    ebx,DWORD PTR [ebx]
6400347f:	pop    edi
64003480:	mov    eax,esi
64003482:	pop    esi
64003483:	pop    ebp
64003484:	mov    BYTE PTR [ebx],0x0
64003487:	pop    ebx
64003488:	ret    0x8
6400348b:	mov    eax,ebx
6400348d:	push   edi
6400348e:	push   ebp
6400348f:	push   ecx
64003490:	push   eax
64003491:	call   0x6401375c
64003496:	add    esp,0x10
64003499:	cmp    DWORD PTR [esi+0x18],0x10
6400349d:	mov    DWORD PTR [esi+0x14],edi
640034a0:	jb     0x640034a4
640034a2:	mov    ebx,DWORD PTR [ebx]
640034a4:	mov    BYTE PTR [ebx+edi*1],0x0
640034a8:	pop    edi
640034a9:	mov    eax,esi
640034ab:	pop    esi
640034ac:	pop    ebp
640034ad:	pop    ebx
640034ae:	ret    0x8
640034b1:	int3   
640034b2:	int3   
640034b3:	int3   
640034b4:	int3   
640034b5:	int3   
640034b6:	int3   
640034b7:	int3   
640034b8:	int3   
640034b9:	int3   
640034ba:	int3   
640034bb:	int3   
640034bc:	int3   
640034bd:	int3   
640034be:	int3   
640034bf:	int3   
640034c0:	push   ebx
640034c1:	push   ebp
640034c2:	mov    ebp,DWORD PTR [esp+0xc]
640034c6:	push   esi
640034c7:	push   edi
640034c8:	mov    edi,ecx
640034ca:	cmp    DWORD PTR [edi+0x14],ebp
640034cd:	jae    0x640034d4
640034cf:	call   0x64012f1b
640034d4:	mov    eax,DWORD PTR [edi+0x14]
640034d7:	mov    esi,DWORD PTR [esp+0x18]
640034db:	sub    eax,ebp
640034dd:	cmp    eax,esi
640034df:	jae    0x640034e3
640034e1:	mov    esi,eax
640034e3:	mov    ebx,DWORD PTR [esp+0x20]
640034e7:	cmp    esi,ebx
640034e9:	mov    eax,esi
640034eb:	jb     0x640034ef
640034ed:	mov    eax,ebx
640034ef:	cmp    DWORD PTR [edi+0x18],0x10
640034f3:	jb     0x640034fa
640034f5:	mov    edi,DWORD PTR [edi+0x4]
640034f8:	jmp    0x640034fd
640034fa:	add    edi,0x4
640034fd:	push   eax
640034fe:	mov    eax,DWORD PTR [esp+0x20]
64003502:	push   eax
64003503:	add    edi,ebp
64003505:	push   edi
64003506:	call   0x64001270
6400350b:	add    esp,0xc
6400350e:	test   eax,eax
64003510:	jne    0x64003527
64003512:	cmp    esi,ebx
64003514:	jae    0x64003520
64003516:	pop    edi
64003517:	pop    esi
64003518:	pop    ebp
64003519:	or     eax,0xffffffff
6400351c:	pop    ebx
6400351d:	ret    0x10
64003520:	xor    eax,eax
64003522:	cmp    esi,ebx
64003524:	setne  al
64003527:	pop    edi
64003528:	pop    esi
64003529:	pop    ebp
6400352a:	pop    ebx
6400352b:	ret    0x10
6400352e:	int3   
6400352f:	int3   
64003530:	mov    ecx,DWORD PTR [esp+0x4]
64003534:	sub    esp,0xc
64003537:	test   ecx,ecx
64003539:	ja     0x6400354c
6400353b:	xor    ecx,ecx
6400353d:	push   ecx
6400353e:	call   0x64013895
64003543:	add    esp,0x4
64003546:	add    esp,0xc
64003549:	ret    0x4
6400354c:	or     eax,0xffffffff
6400354f:	xor    edx,edx
64003551:	div    ecx
64003553:	cmp    eax,0x1
64003556:	jae    0x6400353d
64003558:	lea    eax,[esp+0x10]
6400355c:	push   eax
6400355d:	lea    ecx,[esp+0x4]
64003561:	mov    DWORD PTR [esp+0x14],0x0
64003569:	call   0x6401361a
6400356e:	push   0x6402bd5c
64003573:	lea    ecx,[esp+0x4]
64003577:	push   ecx
64003578:	mov    DWORD PTR [esp+0x8],0x640242a4
64003580:	call   0x64013832
64003585:	int3   
64003586:	int3   
64003587:	int3   
64003588:	int3   
64003589:	int3   
6400358a:	int3   
6400358b:	int3   
6400358c:	int3   
6400358d:	int3   
6400358e:	int3   
6400358f:	int3   
64003590:	push   ebx
64003591:	mov    ebx,DWORD PTR [esp+0x8]
64003595:	test   ebx,ebx
64003597:	push   ebp
64003598:	push   esi
64003599:	push   edi
6400359a:	mov    edi,ecx
6400359c:	je     0x64003614
6400359e:	call   DWORD PTR ds:0x6403761c
640035a4:	mov    ebp,DWORD PTR ds:0x64024028
640035aa:	push   0x0
640035ac:	push   0x0
640035ae:	push   0xffffffff
640035b0:	push   ebx
640035b1:	push   0x0
640035b3:	push   eax
640035b4:	call   ebp
640035b6:	mov    esi,eax
640035b8:	sub    esi,0x1
640035bb:	test   esi,esi
640035bd:	jle    0x64003614
640035bf:	mov    eax,DWORD PTR [edi]
640035c1:	mov    edx,DWORD PTR [eax-0x8]
640035c4:	sub    eax,0x10
640035c7:	mov    ecx,0x1
640035cc:	sub    ecx,DWORD PTR [eax+0xc]
640035cf:	sub    edx,esi
640035d1:	or     ecx,edx
640035d3:	jge    0x640035dd
640035d5:	push   esi
640035d6:	mov    ecx,edi
640035d8:	call   0x64004340
640035dd:	mov    eax,DWORD PTR [edi]
640035df:	push   esi
640035e0:	push   eax
640035e1:	push   0xffffffff
640035e3:	push   ebx
640035e4:	push   0x0
640035e6:	call   DWORD PTR ds:0x6403761c
640035ec:	push   eax
640035ed:	call   ebp
640035ef:	mov    eax,DWORD PTR [edi]
640035f1:	cmp    esi,DWORD PTR [eax-0x8]
640035f4:	jg     0x6400360a
640035f6:	mov    DWORD PTR [eax-0xc],esi
640035f9:	mov    eax,DWORD PTR [edi]
640035fb:	mov    WORD PTR [eax+esi*2],0x0
64003601:	mov    eax,edi
64003603:	pop    edi
64003604:	pop    esi
64003605:	pop    ebp
64003606:	pop    ebx
64003607:	ret    0x4
6400360a:	push   0x80070057
6400360f:	call   0x64001040
64003614:	mov    ecx,edi
64003616:	call   0x64004220
6400361b:	mov    eax,edi
6400361d:	pop    edi
6400361e:	pop    esi
6400361f:	pop    ebp
64003620:	pop    ebx
64003621:	ret    0x4
64003624:	int3   
64003625:	int3   
64003626:	int3   
64003627:	int3   
64003628:	int3   
64003629:	int3   
6400362a:	int3   
6400362b:	int3   
6400362c:	int3   
6400362d:	int3   
6400362e:	int3   
6400362f:	int3   
64003630:	mov    ecx,DWORD PTR [esp+0xc]
64003634:	push   ebx
64003635:	push   ebp
64003636:	mov    ebp,DWORD PTR [esp+0xc]
6400363a:	mov    eax,DWORD PTR [ebp+0x0]
6400363d:	mov    ebx,DWORD PTR [eax-0xc]
64003640:	push   esi
64003641:	mov    esi,DWORD PTR [esp+0x14]
64003645:	sub    esi,eax
64003647:	mov    edx,0x1
6400364c:	sub    edx,DWORD PTR [eax-0x4]
6400364f:	mov    eax,DWORD PTR [eax-0x8]
64003652:	push   edi
64003653:	lea    edi,[ebx+ecx*1]
64003656:	sub    eax,edi
64003658:	sar    esi,1
6400365a:	or     edx,eax
6400365c:	jge    0x64003666
6400365e:	push   edi
6400365f:	mov    ecx,ebp
64003661:	call   0x64004340
64003666:	cmp    esi,ebx
64003668:	mov    ecx,DWORD PTR [ebp+0x0]
6400366b:	ja     0x64003674
6400366d:	lea    edx,[ecx+esi*2]
64003670:	mov    DWORD PTR [esp+0x18],edx
64003674:	mov    eax,DWORD PTR [esp+0x1c]
64003678:	mov    edx,DWORD PTR [esp+0x18]
6400367c:	add    eax,eax
6400367e:	push   eax
6400367f:	push   edx
64003680:	push   eax
64003681:	lea    eax,[ecx+ebx*2]
64003684:	push   eax
64003685:	call   0x6401375c
6400368a:	add    esp,0x10
6400368d:	test   edi,edi
6400368f:	jl     0x640036ac
64003691:	mov    eax,DWORD PTR [ebp+0x0]
64003694:	cmp    edi,DWORD PTR [eax-0x8]
64003697:	jg     0x640036ac
64003699:	mov    DWORD PTR [eax-0xc],edi
6400369c:	mov    ecx,DWORD PTR [ebp+0x0]
6400369f:	mov    WORD PTR [ecx+edi*2],0x0
640036a5:	pop    edi
640036a6:	pop    esi
640036a7:	pop    ebp
640036a8:	pop    ebx
640036a9:	ret    0xc
640036ac:	push   0x80070057
640036b1:	call   0x64001040
640036b6:	int3   
640036b7:	int3   
640036b8:	int3   
640036b9:	int3   
640036ba:	int3   
640036bb:	int3   
640036bc:	int3   
640036bd:	int3   
640036be:	int3   
640036bf:	int3   
640036c0:	mov    eax,DWORD PTR [esp+0x4]
640036c4:	test   eax,eax
640036c6:	jl     0x640036dd
640036c8:	mov    edx,DWORD PTR [ecx]
640036ca:	cmp    eax,DWORD PTR [edx-0x8]
640036cd:	jg     0x640036dd
640036cf:	mov    DWORD PTR [edx-0xc],eax
640036d2:	mov    ecx,DWORD PTR [ecx]
640036d4:	mov    WORD PTR [ecx+eax*2],0x0
640036da:	ret    0x4
640036dd:	push   0x80070057
640036e2:	call   0x64001040
640036e7:	int3   
640036e8:	int3   
640036e9:	int3   
640036ea:	int3   
640036eb:	int3   
640036ec:	int3   
640036ed:	int3   
640036ee:	int3   
640036ef:	int3   
640036f0:	push   ebp
640036f1:	mov    ebp,DWORD PTR [esp+0x8]
640036f5:	push   esi
640036f6:	mov    esi,eax
640036f8:	mov    eax,DWORD PTR [esp+0x18]
640036fc:	push   edi
640036fd:	lea    edi,[esi+eax*1]
64003700:	mov    eax,DWORD PTR [ebp+0x0]
64003703:	mov    edx,DWORD PTR [eax-0x8]
64003706:	sub    eax,0x10
64003709:	mov    ecx,0x1
6400370e:	sub    ecx,DWORD PTR [eax+0xc]
64003711:	sub    edx,edi
64003713:	or     ecx,edx
64003715:	jge    0x6400371f
64003717:	push   edi
64003718:	mov    ecx,ebp
6400371a:	call   0x64004340
6400371f:	mov    eax,DWORD PTR [esp+0x14]
64003723:	push   ebx
64003724:	mov    ebx,DWORD PTR [ebp+0x0]
64003727:	add    esi,esi
64003729:	push   esi
6400372a:	push   eax
6400372b:	push   esi
6400372c:	push   ebx
6400372d:	call   0x6401375c
64003732:	mov    eax,DWORD PTR [esp+0x30]
64003736:	mov    ecx,DWORD PTR [esp+0x2c]
6400373a:	add    eax,eax
6400373c:	push   eax
6400373d:	push   ecx
6400373e:	push   eax
6400373f:	add    esi,ebx
64003741:	push   esi
64003742:	call   0x6401375c
64003747:	add    esp,0x20
6400374a:	test   edi,edi
6400374c:	pop    ebx
6400374d:	jl     0x64003767
6400374f:	mov    eax,DWORD PTR [ebp+0x0]
64003752:	cmp    edi,DWORD PTR [eax-0x8]
64003755:	jg     0x64003767
64003757:	mov    DWORD PTR [eax-0xc],edi
6400375a:	mov    edx,DWORD PTR [ebp+0x0]
6400375d:	mov    WORD PTR [edx+edi*2],0x0
64003763:	pop    edi
64003764:	pop    esi
64003765:	pop    ebp
64003766:	ret    
64003767:	push   0x80070057
6400376c:	call   0x64001040
64003771:	int3   
64003772:	int3   
64003773:	int3   
64003774:	int3   
64003775:	int3   
64003776:	int3   
64003777:	int3   
64003778:	int3   
64003779:	int3   
6400377a:	int3   
6400377b:	int3   
6400377c:	int3   
6400377d:	int3   
6400377e:	int3   
6400377f:	int3   
64003780:	push   ecx
64003781:	push   ebx
64003782:	push   ebp
64003783:	push   esi
64003784:	mov    esi,DWORD PTR [ecx]
64003786:	mov    ebx,DWORD PTR [esi-0xc]
64003789:	sub    esi,0x10
6400378c:	mov    DWORD PTR [esp+0xc],ecx
64003790:	mov    ecx,DWORD PTR [esi]
64003792:	mov    eax,DWORD PTR [ecx]
64003794:	mov    edx,DWORD PTR [eax+0x10]
64003797:	push   edi
64003798:	call   edx
6400379a:	mov    edx,DWORD PTR [eax]
6400379c:	mov    ebp,DWORD PTR [esp+0x18]
640037a0:	push   0x2
640037a2:	mov    ecx,eax
640037a4:	mov    eax,DWORD PTR [edx]
640037a6:	push   ebp
640037a7:	call   eax
640037a9:	mov    edi,eax
640037ab:	test   edi,edi
640037ad:	jne    0x640037b4
640037af:	call   0x64004330
640037b4:	cmp    ebx,ebp
640037b6:	jge    0x640037ba
640037b8:	mov    ebp,ebx
640037ba:	lea    eax,[ebp+ebp*1+0x2]
640037be:	push   eax
640037bf:	lea    ecx,[esi+0x10]
640037c2:	push   ecx
640037c3:	push   eax
640037c4:	lea    ebp,[edi+0x10]
640037c7:	push   ebp
640037c8:	call   0x6401375c
640037cd:	add    esp,0x10
640037d0:	mov    DWORD PTR [edi+0x4],ebx
640037d3:	lea    edx,[esi+0xc]
640037d6:	or     eax,0xffffffff
640037d9:	lock xadd DWORD PTR [edx],eax
640037dd:	dec    eax
640037de:	test   eax,eax
640037e0:	jg     0x640037ec
640037e2:	mov    ecx,DWORD PTR [esi]
640037e4:	mov    edx,DWORD PTR [ecx]
640037e6:	mov    eax,DWORD PTR [edx+0x4]
640037e9:	push   esi
640037ea:	call   eax
640037ec:	mov    ecx,DWORD PTR [esp+0x10]
640037f0:	pop    edi
640037f1:	pop    esi
640037f2:	mov    DWORD PTR [ecx],ebp
640037f4:	pop    ebp
640037f5:	pop    ebx
640037f6:	pop    ecx
640037f7:	ret    0x4
640037fa:	int3   
640037fb:	int3   
640037fc:	int3   
640037fd:	int3   
640037fe:	int3   
640037ff:	int3   
64003800:	push   0xffffffff
64003802:	push   0x6402363e
64003807:	mov    eax,fs:0x0
6400380d:	push   eax
6400380e:	mov    eax,ds:0x64037644
64003813:	xor    eax,esp
64003815:	push   eax
64003816:	lea    eax,[esp+0x4]
6400381a:	mov    fs:0x0,eax
64003820:	test   BYTE PTR ds:0x6403998c,0x1
64003827:	jne    0x64003879
64003829:	or     DWORD PTR ds:0x6403998c,0x1
64003830:	mov    ecx,0x64039970
64003835:	mov    DWORD PTR [esp+0xc],0x0
6400383d:	call   0x64005fd0
64003842:	mov    ds:0x64039974,eax
64003847:	mov    BYTE PTR [eax+0x45],0x1
6400384b:	mov    eax,ds:0x64039974
64003850:	mov    DWORD PTR [eax+0x4],eax
64003853:	mov    eax,ds:0x64039974
64003858:	mov    DWORD PTR [eax],eax
6400385a:	mov    eax,ds:0x64039974
6400385f:	mov    DWORD PTR [eax+0x8],eax
64003862:	push   0x64023e60
64003867:	mov    DWORD PTR ds:0x64039978,0x0
64003871:	call   0x64013f6a
64003876:	add    esp,0x4
64003879:	mov    eax,0x64039970
6400387e:	mov    ecx,DWORD PTR [esp+0x4]
64003882:	mov    DWORD PTR fs:0x0,ecx
64003889:	pop    ecx
6400388a:	add    esp,0xc
6400388d:	ret    
6400388e:	int3   
6400388f:	int3   
64003890:	push   0xffffffff
64003892:	push   0x64023248
64003897:	mov    eax,fs:0x0
6400389d:	push   eax
6400389e:	push   ecx
6400389f:	push   ebx
640038a0:	push   ebp
640038a1:	push   esi
640038a2:	push   edi
640038a3:	mov    eax,ds:0x64037644
640038a8:	xor    eax,esp
640038aa:	push   eax
640038ab:	lea    eax,[esp+0x18]
640038af:	mov    fs:0x0,eax
640038b5:	mov    esi,DWORD PTR [esp+0x28]
640038b9:	xor    eax,eax
640038bb:	mov    DWORD PTR [esp+0x14],eax
640038bf:	mov    DWORD PTR [esp+0x20],eax
640038c3:	push   0xffffffff
640038c5:	mov    DWORD PTR [esi+0x14],eax
640038c8:	mov    DWORD PTR [esi+0x18],0xf
640038cf:	lea    ebp,[esi+0x4]
640038d2:	push   eax
640038d3:	mov    BYTE PTR [ebp+0x0],al
640038d6:	lea    eax,[esp+0x34]
640038da:	push   eax
640038db:	mov    ecx,esi
640038dd:	call   0x64003310
640038e2:	mov    eax,DWORD PTR [esi+0x14]
640038e5:	mov    edi,0x1
640038ea:	cmp    eax,edi
640038ec:	jbe    0x6400392d
640038ee:	cmp    edi,eax
640038f0:	jbe    0x640038f7
640038f2:	call   0x64013e36
640038f7:	cmp    DWORD PTR [esi+0x18],0x10
640038fb:	jb     0x64003902
640038fd:	mov    ebx,DWORD PTR [ebp+0x0]
64003900:	jmp    0x64003904
64003902:	mov    ebx,ebp
64003904:	lea    ecx,[edi-0x1]
64003907:	cmp    ecx,DWORD PTR [esi+0x14]
6400390a:	jbe    0x64003911
6400390c:	call   0x64013e36
64003911:	cmp    DWORD PTR [esi+0x18],0x10
64003915:	jb     0x6400391c
64003917:	mov    eax,DWORD PTR [ebp+0x0]
6400391a:	jmp    0x6400391e
6400391c:	mov    eax,ebp
6400391e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64003922:	xor    BYTE PTR [ebx+edi*1],dl
64003925:	add    edi,0x1
64003928:	cmp    edi,DWORD PTR [esi+0x14]
6400392b:	jb     0x640038f7
6400392d:	cmp    DWORD PTR [esp+0x44],0x10
64003932:	jb     0x64003941
64003934:	mov    eax,DWORD PTR [esp+0x30]
64003938:	push   eax
64003939:	call   0x64013604
6400393e:	add    esp,0x4
64003941:	mov    eax,esi
64003943:	mov    ecx,DWORD PTR [esp+0x18]
64003947:	mov    DWORD PTR fs:0x0,ecx
6400394e:	pop    ecx
6400394f:	pop    edi
64003950:	pop    esi
64003951:	pop    ebp
64003952:	pop    ebx
64003953:	add    esp,0x10
64003956:	ret    
64003957:	int3   
64003958:	int3   
64003959:	int3   
6400395a:	int3   
6400395b:	int3   
6400395c:	int3   
6400395d:	int3   
6400395e:	int3   
6400395f:	int3   
64003960:	push   0xffffffff
64003962:	push   0x6402360e
64003967:	mov    eax,fs:0x0
6400396d:	push   eax
6400396e:	mov    eax,ds:0x64037644
64003973:	xor    eax,esp
64003975:	push   eax
64003976:	lea    eax,[esp+0x4]
6400397a:	mov    fs:0x0,eax
64003980:	test   BYTE PTR ds:0x64039988,0x1
64003987:	jne    0x640039d4
64003989:	or     DWORD PTR ds:0x64039988,0x1
64003990:	mov    DWORD PTR [esp+0xc],0x0
64003998:	call   0x64005fd0
6400399d:	mov    ds:0x64039980,eax
640039a2:	mov    BYTE PTR [eax+0x45],0x1
640039a6:	mov    eax,ds:0x64039980
640039ab:	mov    DWORD PTR [eax+0x4],eax
640039ae:	mov    eax,ds:0x64039980
640039b3:	mov    DWORD PTR [eax],eax
640039b5:	mov    eax,ds:0x64039980
640039ba:	mov    DWORD PTR [eax+0x8],eax
640039bd:	push   0x64023e10
640039c2:	mov    DWORD PTR ds:0x64039984,0x0
640039cc:	call   0x64013f6a
640039d1:	add    esp,0x4
640039d4:	mov    eax,0x6403997c
640039d9:	mov    ecx,DWORD PTR [esp+0x4]
640039dd:	mov    DWORD PTR fs:0x0,ecx
640039e4:	pop    ecx
640039e5:	add    esp,0xc
640039e8:	ret    
640039e9:	int3   
640039ea:	int3   
640039eb:	int3   
640039ec:	int3   
640039ed:	int3   
640039ee:	int3   
640039ef:	int3   
640039f0:	push   0xffffffff
640039f2:	push   0x64023008
640039f7:	mov    eax,fs:0x0
640039fd:	push   eax
640039fe:	push   ecx
640039ff:	push   ebx
64003a00:	push   ebp
64003a01:	push   edi
64003a02:	mov    eax,ds:0x64037644
64003a07:	xor    eax,esp
64003a09:	push   eax
64003a0a:	lea    eax,[esp+0x14]
64003a0e:	mov    fs:0x0,eax
64003a14:	xor    eax,eax
64003a16:	mov    DWORD PTR [esp+0x10],eax
64003a1a:	mov    DWORD PTR [esp+0x1c],eax
64003a1e:	mov    DWORD PTR [esi+0x14],eax
64003a21:	push   0xffffffff
64003a23:	mov    DWORD PTR [esi+0x18],0x7
64003a2a:	lea    ebp,[esi+0x4]
64003a2d:	mov    WORD PTR [ebp+0x0],ax
64003a31:	push   eax
64003a32:	lea    eax,[esp+0x2c]
64003a36:	mov    ecx,esi
64003a38:	call   0x640046d0
64003a3d:	mov    eax,DWORD PTR [esi+0x14]
64003a40:	mov    edi,0x1
64003a45:	cmp    eax,edi
64003a47:	jbe    0x64003a8a
64003a49:	cmp    edi,eax
64003a4b:	jbe    0x64003a52
64003a4d:	call   0x64013e36
64003a52:	cmp    DWORD PTR [esi+0x18],0x8
64003a56:	jb     0x64003a5d
64003a58:	mov    ebx,DWORD PTR [ebp+0x0]
64003a5b:	jmp    0x64003a5f
64003a5d:	mov    ebx,ebp
64003a5f:	lea    eax,[edi-0x1]
64003a62:	cmp    eax,DWORD PTR [esi+0x14]
64003a65:	jbe    0x64003a6c
64003a67:	call   0x64013e36
64003a6c:	cmp    DWORD PTR [esi+0x18],0x8
64003a70:	jb     0x64003a77
64003a72:	mov    eax,DWORD PTR [ebp+0x0]
64003a75:	jmp    0x64003a79
64003a77:	mov    eax,ebp
64003a79:	mov    cx,WORD PTR [eax+edi*2-0x2]
64003a7e:	xor    WORD PTR [ebx+edi*2],cx
64003a82:	add    edi,0x1
64003a85:	cmp    edi,DWORD PTR [esi+0x14]
64003a88:	jb     0x64003a52
64003a8a:	cmp    DWORD PTR [esp+0x3c],0x8
64003a8f:	jb     0x64003a9e
64003a91:	mov    edx,DWORD PTR [esp+0x28]
64003a95:	push   edx
64003a96:	call   0x64013604
64003a9b:	add    esp,0x4
64003a9e:	mov    eax,esi
64003aa0:	mov    ecx,DWORD PTR [esp+0x14]
64003aa4:	mov    DWORD PTR fs:0x0,ecx
64003aab:	pop    ecx
64003aac:	pop    edi
64003aad:	pop    ebp
64003aae:	pop    ebx
64003aaf:	add    esp,0x10
64003ab2:	ret    
64003ab3:	int3   
64003ab4:	int3   
64003ab5:	int3   
64003ab6:	int3   
64003ab7:	int3   
64003ab8:	int3   
64003ab9:	int3   
64003aba:	int3   
64003abb:	int3   
64003abc:	int3   
64003abd:	int3   
64003abe:	int3   
64003abf:	int3   
64003ac0:	push   ebp
64003ac1:	mov    ebp,esp
64003ac3:	and    esp,0xfffffff8
64003ac6:	push   0xffffffff
64003ac8:	push   0x640235e0
64003acd:	mov    eax,fs:0x0
64003ad3:	push   eax
64003ad4:	sub    esp,0x60
64003ad7:	push   ebx
64003ad8:	push   esi
64003ad9:	push   edi
64003ada:	mov    eax,ds:0x64037644
64003adf:	xor    eax,esp
64003ae1:	push   eax
64003ae2:	lea    eax,[esp+0x70]
64003ae6:	mov    fs:0x0,eax
64003aec:	mov    edi,ecx
64003aee:	mov    ebx,DWORD PTR [ebp+0x8]
64003af1:	push   ebx
64003af2:	call   0x64004fe0
64003af7:	test   edi,edi
64003af9:	mov    esi,eax
64003afb:	jne    0x64003b02
64003afd:	call   0x64013e36
64003b02:	mov    eax,DWORD PTR [edi+0x4]
64003b05:	cmp    esi,eax
64003b07:	je     0x64003b31
64003b09:	cmp    DWORD PTR [esi+0x24],0x10
64003b0d:	mov    ecx,DWORD PTR [esi+0x20]
64003b10:	jb     0x64003b17
64003b12:	mov    eax,DWORD PTR [esi+0x10]
64003b15:	jmp    0x64003b1a
64003b17:	lea    eax,[esi+0x10]
64003b1a:	push   ecx
64003b1b:	push   eax
64003b1c:	mov    eax,DWORD PTR [ebx+0x14]
64003b1f:	push   eax
64003b20:	push   0x0
64003b22:	mov    ecx,ebx
64003b24:	call   0x640034c0
64003b29:	test   eax,eax
64003b2b:	jge    0x64003be5
64003b31:	xor    eax,eax
64003b33:	mov    DWORD PTR [esp+0x30],0xf
64003b3b:	mov    DWORD PTR [esp+0x2c],eax
64003b3f:	mov    BYTE PTR [esp+0x1c],al
64003b43:	lea    ecx,[esp+0x18]
64003b47:	push   ecx
64003b48:	push   ebx
64003b49:	lea    ecx,[esp+0x3c]
64003b4d:	mov    DWORD PTR [esp+0x80],eax
64003b54:	call   0x64004650
64003b59:	push   eax
64003b5a:	push   esi
64003b5b:	push   edi
64003b5c:	lea    edx,[esp+0x1c]
64003b60:	push   edx
64003b61:	mov    ecx,edi
64003b63:	mov    BYTE PTR [esp+0x88],0x1
64003b6b:	call   0x64004400
64003b70:	cmp    DWORD PTR [esp+0x68],0x10
64003b75:	mov    edi,DWORD PTR [eax]
64003b77:	mov    esi,DWORD PTR [eax+0x4]
64003b7a:	jb     0x64003b89
64003b7c:	mov    eax,DWORD PTR [esp+0x54]
64003b80:	push   eax
64003b81:	call   0x64013604
64003b86:	add    esp,0x4
64003b89:	xor    ebx,ebx
64003b8b:	cmp    DWORD PTR [esp+0x4c],0x10
64003b90:	mov    DWORD PTR [esp+0x68],0xf
64003b98:	mov    DWORD PTR [esp+0x64],ebx
64003b9c:	mov    BYTE PTR [esp+0x54],bl
64003ba0:	jb     0x64003baf
64003ba2:	mov    ecx,DWORD PTR [esp+0x38]
64003ba6:	push   ecx
64003ba7:	call   0x64013604
64003bac:	add    esp,0x4
64003baf:	cmp    DWORD PTR [esp+0x30],0x10
64003bb4:	mov    DWORD PTR [esp+0x4c],0xf
64003bbc:	mov    DWORD PTR [esp+0x48],ebx
64003bc0:	mov    BYTE PTR [esp+0x38],bl
64003bc4:	jb     0x64003bd3
64003bc6:	mov    edx,DWORD PTR [esp+0x1c]
64003bca:	push   edx
64003bcb:	call   0x64013604
64003bd0:	add    esp,0x4
64003bd3:	mov    DWORD PTR [esp+0x30],0xf
64003bdb:	mov    DWORD PTR [esp+0x2c],ebx
64003bdf:	mov    BYTE PTR [esp+0x1c],bl
64003be3:	jmp    0x64003be7
64003be5:	xor    ebx,ebx
64003be7:	cmp    edi,ebx
64003be9:	jne    0x64003bf0
64003beb:	call   0x64013e36
64003bf0:	cmp    esi,DWORD PTR [edi+0x4]
64003bf3:	jne    0x64003bfa
64003bf5:	call   0x64013e36
64003bfa:	lea    eax,[esi+0x28]
64003bfd:	mov    ecx,DWORD PTR [esp+0x70]
64003c01:	mov    DWORD PTR fs:0x0,ecx
64003c08:	pop    ecx
64003c09:	pop    edi
64003c0a:	pop    esi
64003c0b:	pop    ebx
64003c0c:	mov    esp,ebp
64003c0e:	pop    ebp
64003c0f:	ret    0x4
64003c12:	int3   
64003c13:	int3   
64003c14:	int3   
64003c15:	int3   
64003c16:	int3   
64003c17:	int3   
64003c18:	int3   
64003c19:	int3   
64003c1a:	int3   
64003c1b:	int3   
64003c1c:	int3   
64003c1d:	int3   
64003c1e:	int3   
64003c1f:	int3   
64003c20:	sub    esp,0x18
64003c23:	push   ebx
64003c24:	mov    ebx,DWORD PTR [esp+0x24]
64003c28:	push   esi
64003c29:	push   edi
64003c2a:	push   ebx
64003c2b:	mov    esi,ecx
64003c2d:	call   0x64004fe0
64003c32:	test   esi,esi
64003c34:	mov    edi,eax
64003c36:	mov    DWORD PTR [esp+0x14],edi
64003c3a:	jne    0x64003c41
64003c3c:	call   0x64013e36
64003c41:	cmp    edi,DWORD PTR [esi+0x4]
64003c44:	mov    DWORD PTR [esp+0x10],esi
64003c48:	je     0x64003c74
64003c4a:	cmp    DWORD PTR [edi+0x24],0x10
64003c4e:	mov    eax,DWORD PTR [edi+0x20]
64003c51:	jb     0x64003c58
64003c53:	mov    edi,DWORD PTR [edi+0x10]
64003c56:	jmp    0x64003c5b
64003c58:	add    edi,0x10
64003c5b:	push   eax
64003c5c:	mov    eax,DWORD PTR [ebx+0x14]
64003c5f:	push   edi
64003c60:	push   eax
64003c61:	push   0x0
64003c63:	mov    ecx,ebx
64003c65:	call   0x640034c0
64003c6a:	test   eax,eax
64003c6c:	jl     0x64003c74
64003c6e:	lea    ecx,[esp+0x10]
64003c72:	jmp    0x64003c83
64003c74:	mov    ecx,DWORD PTR [esi+0x4]
64003c77:	mov    DWORD PTR [esp+0x1c],ecx
64003c7b:	mov    DWORD PTR [esp+0x18],esi
64003c7f:	lea    ecx,[esp+0x18]
64003c83:	mov    edx,DWORD PTR [ecx]
64003c85:	mov    eax,DWORD PTR [esp+0x28]
64003c89:	mov    ecx,DWORD PTR [ecx+0x4]
64003c8c:	pop    edi
64003c8d:	pop    esi
64003c8e:	mov    DWORD PTR [eax],edx
64003c90:	mov    DWORD PTR [eax+0x4],ecx
64003c93:	pop    ebx
64003c94:	add    esp,0x18
64003c97:	ret    0x8
64003c9a:	int3   
64003c9b:	int3   
64003c9c:	int3   
64003c9d:	int3   
64003c9e:	int3   
64003c9f:	int3   
64003ca0:	push   esi
64003ca1:	mov    esi,ecx
64003ca3:	mov    eax,DWORD PTR [esi]
64003ca5:	test   eax,eax
64003ca7:	push   edi
64003ca8:	mov    edi,DWORD PTR [esp+0xc]
64003cac:	je     0x64003cb2
64003cae:	cmp    eax,DWORD PTR [edi]
64003cb0:	je     0x64003cb7
64003cb2:	call   0x64013e36
64003cb7:	mov    eax,DWORD PTR [esi+0x4]
64003cba:	xor    ecx,ecx
64003cbc:	cmp    eax,DWORD PTR [edi+0x4]
64003cbf:	pop    edi
64003cc0:	sete   cl
64003cc3:	mov    al,cl
64003cc5:	pop    esi
64003cc6:	ret    0x4
64003cc9:	int3   
64003cca:	int3   
64003ccb:	int3   
64003ccc:	int3   
64003ccd:	int3   
64003cce:	int3   
64003ccf:	int3   
64003cd0:	cmp    DWORD PTR [esi+0x18],0x8
64003cd4:	jb     0x64003ce2
64003cd6:	mov    eax,DWORD PTR [esi+0x4]
64003cd9:	push   eax
64003cda:	call   0x64013604
64003cdf:	add    esp,0x4
64003ce2:	xor    eax,eax
64003ce4:	mov    DWORD PTR [esi+0x18],0x7
64003ceb:	mov    DWORD PTR [esi+0x14],eax
64003cee:	mov    WORD PTR [esi+0x4],ax
64003cf2:	ret    
64003cf3:	int3   
64003cf4:	int3   
64003cf5:	int3   
64003cf6:	int3   
64003cf7:	int3   
64003cf8:	int3   
64003cf9:	int3   
64003cfa:	int3   
64003cfb:	int3   
64003cfc:	int3   
64003cfd:	int3   
64003cfe:	int3   
64003cff:	int3   
64003d00:	push   0xffffffff
64003d02:	push   0x640235b0
64003d07:	mov    eax,fs:0x0
64003d0d:	push   eax
64003d0e:	sub    esp,0x60
64003d11:	push   ebx
64003d12:	push   ebp
64003d13:	push   esi
64003d14:	push   edi
64003d15:	mov    eax,ds:0x64037644
64003d1a:	xor    eax,esp
64003d1c:	push   eax
64003d1d:	lea    eax,[esp+0x74]
64003d21:	mov    fs:0x0,eax
64003d27:	mov    ebx,ecx
64003d29:	mov    ecx,DWORD PTR [esp+0x84]
64003d30:	mov    eax,ebx
64003d32:	call   0x64005580
64003d37:	xor    ebp,ebp
64003d39:	cmp    ebx,ebp
64003d3b:	mov    esi,eax
64003d3d:	jne    0x64003d44
64003d3f:	call   0x64013e36
64003d44:	mov    eax,DWORD PTR [ebx+0x4]
64003d47:	cmp    esi,eax
64003d49:	je     0x64003d74
64003d4b:	cmp    DWORD PTR [esi+0x24],0x8
64003d4f:	mov    edi,DWORD PTR [esi+0x20]
64003d52:	jb     0x64003d59
64003d54:	mov    eax,DWORD PTR [esi+0x10]
64003d57:	jmp    0x64003d5c
64003d59:	lea    eax,[esi+0x10]
64003d5c:	mov    ecx,DWORD PTR [esp+0x84]
64003d63:	push   eax
64003d64:	mov    eax,DWORD PTR [ecx+0x14]
64003d67:	call   0x640068f0
64003d6c:	test   eax,eax
64003d6e:	jge    0x64003e21
64003d74:	mov    edi,0x7
64003d79:	mov    DWORD PTR [esp+0x34],edi
64003d7d:	mov    DWORD PTR [esp+0x30],ebp
64003d81:	mov    WORD PTR [esp+0x20],bp
64003d86:	mov    ecx,DWORD PTR [esp+0x84]
64003d8d:	lea    eax,[esp+0x1c]
64003d91:	push   eax
64003d92:	push   ecx
64003d93:	lea    edx,[esp+0x40]
64003d97:	push   edx
64003d98:	mov    DWORD PTR [esp+0x88],ebp
64003d9f:	call   0x64004a70
64003da4:	push   esi
64003da5:	push   ebx
64003da6:	push   eax
64003da7:	lea    eax,[esp+0x20]
64003dab:	push   eax
64003dac:	mov    BYTE PTR [esp+0x8c],0x1
64003db4:	call   0x64004820
64003db9:	cmp    DWORD PTR [esp+0x6c],0x8
64003dbe:	mov    ebx,DWORD PTR [eax]
64003dc0:	mov    esi,DWORD PTR [eax+0x4]
64003dc3:	jb     0x64003dd2
64003dc5:	mov    ecx,DWORD PTR [esp+0x58]
64003dc9:	push   ecx
64003dca:	call   0x64013604
64003dcf:	add    esp,0x4
64003dd2:	cmp    DWORD PTR [esp+0x50],0x8
64003dd7:	mov    DWORD PTR [esp+0x6c],edi
64003ddb:	mov    DWORD PTR [esp+0x68],ebp
64003ddf:	mov    WORD PTR [esp+0x58],bp
64003de4:	jb     0x64003df3
64003de6:	mov    edx,DWORD PTR [esp+0x3c]
64003dea:	push   edx
64003deb:	call   0x64013604
64003df0:	add    esp,0x4
64003df3:	cmp    DWORD PTR [esp+0x34],0x8
64003df8:	mov    DWORD PTR [esp+0x50],edi
64003dfc:	mov    DWORD PTR [esp+0x4c],ebp
64003e00:	mov    WORD PTR [esp+0x3c],bp
64003e05:	jb     0x64003e14
64003e07:	mov    eax,DWORD PTR [esp+0x20]
64003e0b:	push   eax
64003e0c:	call   0x64013604
64003e11:	add    esp,0x4
64003e14:	mov    DWORD PTR [esp+0x34],edi
64003e18:	mov    DWORD PTR [esp+0x30],ebp
64003e1c:	mov    WORD PTR [esp+0x20],bp
64003e21:	cmp    ebx,ebp
64003e23:	jne    0x64003e2a
64003e25:	call   0x64013e36
64003e2a:	cmp    esi,DWORD PTR [ebx+0x4]
64003e2d:	jne    0x64003e34
64003e2f:	call   0x64013e36
64003e34:	lea    eax,[esi+0x28]
64003e37:	mov    ecx,DWORD PTR [esp+0x74]
64003e3b:	mov    DWORD PTR fs:0x0,ecx
64003e42:	pop    ecx
64003e43:	pop    edi
64003e44:	pop    esi
64003e45:	pop    ebp
64003e46:	pop    ebx
64003e47:	add    esp,0x6c
64003e4a:	ret    0x4
64003e4d:	int3   
64003e4e:	int3   
64003e4f:	int3   
64003e50:	sub    esp,0x18
64003e53:	push   ebp
64003e54:	mov    ebp,DWORD PTR [esp+0x24]
64003e58:	push   esi
64003e59:	push   edi
64003e5a:	mov    ecx,ebp
64003e5c:	mov    eax,ebx
64003e5e:	call   0x64005580
64003e63:	test   ebx,ebx
64003e65:	mov    esi,eax
64003e67:	mov    DWORD PTR [esp+0x14],esi
64003e6b:	jne    0x64003e72
64003e6d:	call   0x64013e36
64003e72:	cmp    esi,DWORD PTR [ebx+0x4]
64003e75:	mov    DWORD PTR [esp+0x10],ebx
64003e79:	je     0x64003ea1
64003e7b:	cmp    DWORD PTR [esi+0x24],0x8
64003e7f:	mov    edi,DWORD PTR [esi+0x20]
64003e82:	jb     0x64003e89
64003e84:	mov    esi,DWORD PTR [esi+0x10]
64003e87:	jmp    0x64003e8c
64003e89:	add    esi,0x10
64003e8c:	mov    eax,DWORD PTR [ebp+0x14]
64003e8f:	push   esi
64003e90:	mov    ecx,ebp
64003e92:	call   0x640068f0
64003e97:	test   eax,eax
64003e99:	jl     0x64003ea1
64003e9b:	lea    eax,[esp+0x10]
64003e9f:	jmp    0x64003eb0
64003ea1:	mov    eax,DWORD PTR [ebx+0x4]
64003ea4:	mov    DWORD PTR [esp+0x1c],eax
64003ea8:	mov    DWORD PTR [esp+0x18],ebx
64003eac:	lea    eax,[esp+0x18]
64003eb0:	mov    edx,DWORD PTR [eax]
64003eb2:	mov    ecx,DWORD PTR [esp+0x28]
64003eb6:	mov    eax,DWORD PTR [eax+0x4]
64003eb9:	pop    edi
64003eba:	pop    esi
64003ebb:	mov    DWORD PTR [ecx+0x4],eax
64003ebe:	mov    DWORD PTR [ecx],edx
64003ec0:	mov    eax,ecx
64003ec2:	pop    ebp
64003ec3:	add    esp,0x18
64003ec6:	ret    0x8
64003ec9:	int3   
64003eca:	int3   
64003ecb:	int3   
64003ecc:	int3   
64003ecd:	int3   
64003ece:	int3   
64003ecf:	int3   
64003ed0:	mov    eax,DWORD PTR [edi]
64003ed2:	test   eax,eax
64003ed4:	je     0x64003eda
64003ed6:	cmp    eax,DWORD PTR [esi]
64003ed8:	je     0x64003edf
64003eda:	call   0x64013e36
64003edf:	mov    eax,DWORD PTR [edi+0x4]
64003ee2:	xor    ecx,ecx
64003ee4:	cmp    eax,DWORD PTR [esi+0x4]
64003ee7:	sete   cl
64003eea:	mov    al,cl
64003eec:	ret    
64003eed:	int3   
64003eee:	int3   
64003eef:	int3   
64003ef0:	mov    eax,DWORD PTR [esp+0x4]
64003ef4:	push   esi
64003ef5:	push   eax
64003ef6:	mov    esi,ecx
64003ef8:	call   0x640015e0
64003efd:	mov    DWORD PTR [esi],0x640242e0
64003f03:	mov    eax,esi
64003f05:	pop    esi
64003f06:	ret    0x4
64003f09:	int3   
64003f0a:	int3   
64003f0b:	int3   
64003f0c:	int3   
64003f0d:	int3   
64003f0e:	int3   
64003f0f:	int3   
64003f10:	push   ebx
64003f11:	push   esi
64003f12:	mov    esi,ecx
64003f14:	cmp    DWORD PTR [esi+0x34],0x10
64003f18:	jb     0x64003f26
64003f1a:	mov    eax,DWORD PTR [esi+0x20]
64003f1d:	push   eax
64003f1e:	call   0x64013604
64003f23:	add    esp,0x4
64003f26:	xor    ebx,ebx
64003f28:	mov    DWORD PTR [esi+0x34],0xf
64003f2f:	mov    DWORD PTR [esi+0x30],ebx
64003f32:	mov    BYTE PTR [esi+0x20],bl
64003f35:	cmp    DWORD PTR [esi+0x18],0x10
64003f39:	jb     0x64003f47
64003f3b:	mov    ecx,DWORD PTR [esi+0x4]
64003f3e:	push   ecx
64003f3f:	call   0x64013604
64003f44:	add    esp,0x4
64003f47:	mov    DWORD PTR [esi+0x14],ebx
64003f4a:	mov    DWORD PTR [esi+0x18],0xf
64003f51:	mov    BYTE PTR [esi+0x4],bl
64003f54:	pop    esi
64003f55:	pop    ebx
64003f56:	ret    
64003f57:	int3   
64003f58:	int3   
64003f59:	int3   
64003f5a:	int3   
64003f5b:	int3   
64003f5c:	int3   
64003f5d:	int3   
64003f5e:	int3   
64003f5f:	int3   
64003f60:	cmp    DWORD PTR [esi+0x34],0x8
64003f64:	jb     0x64003f72
64003f66:	mov    eax,DWORD PTR [esi+0x20]
64003f69:	push   eax
64003f6a:	call   0x64013604
64003f6f:	add    esp,0x4
64003f72:	push   edi
64003f73:	xor    edi,edi
64003f75:	mov    DWORD PTR [esi+0x34],0x7
64003f7c:	mov    DWORD PTR [esi+0x30],edi
64003f7f:	mov    WORD PTR [esi+0x20],di
64003f83:	cmp    DWORD PTR [esi+0x18],0x8
64003f87:	jb     0x64003f95
64003f89:	mov    ecx,DWORD PTR [esi+0x4]
64003f8c:	push   ecx
64003f8d:	call   0x64013604
64003f92:	add    esp,0x4
64003f95:	mov    DWORD PTR [esi+0x14],edi
64003f98:	mov    DWORD PTR [esi+0x18],0x7
64003f9f:	mov    WORD PTR [esi+0x4],di
64003fa3:	pop    edi
64003fa4:	ret    
64003fa5:	int3   
64003fa6:	int3   
64003fa7:	int3   
64003fa8:	int3   
64003fa9:	int3   
64003faa:	int3   
64003fab:	int3   
64003fac:	int3   
64003fad:	int3   
64003fae:	int3   
64003faf:	int3   
64003fb0:	push   ebx
64003fb1:	mov    ebx,DWORD PTR [esp+0x8]
64003fb5:	push   esi
64003fb6:	mov    esi,ecx
64003fb8:	cmp    DWORD PTR [esi+0x14],ebx
64003fbb:	push   edi
64003fbc:	jae    0x64003fc3
64003fbe:	call   0x64012f1b
64003fc3:	mov    eax,DWORD PTR [esi+0x14]
64003fc6:	mov    edi,DWORD PTR [esp+0x14]
64003fca:	sub    eax,ebx
64003fcc:	cmp    eax,edi
64003fce:	jae    0x64003fd2
64003fd0:	mov    edi,eax
64003fd2:	test   edi,edi
64003fd4:	jbe    0x6400402b
64003fd6:	mov    ecx,DWORD PTR [esi+0x18]
64003fd9:	cmp    ecx,0x10
64003fdc:	push   ebp
64003fdd:	lea    ebp,[esi+0x4]
64003fe0:	jb     0x64003feb
64003fe2:	mov    edx,DWORD PTR [ebp+0x0]
64003fe5:	mov    DWORD PTR [esp+0x14],edx
64003fe9:	jmp    0x64003fef
64003feb:	mov    DWORD PTR [esp+0x14],ebp
64003fef:	cmp    ecx,0x10
64003ff2:	jb     0x64003ff9
64003ff4:	mov    edx,DWORD PTR [ebp+0x0]
64003ff7:	jmp    0x64003ffb
64003ff9:	mov    edx,ebp
64003ffb:	sub    eax,edi
64003ffd:	push   eax
64003ffe:	mov    eax,DWORD PTR [esp+0x18]
64004002:	add    eax,ebx
64004004:	add    eax,edi
64004006:	push   eax
64004007:	sub    ecx,ebx
64004009:	push   ecx
6400400a:	add    edx,ebx
6400400c:	push   edx
6400400d:	call   0x640137d7
64004012:	mov    eax,DWORD PTR [esi+0x14]
64004015:	sub    eax,edi
64004017:	add    esp,0x10
6400401a:	cmp    DWORD PTR [esi+0x18],0x10
6400401e:	mov    DWORD PTR [esi+0x14],eax
64004021:	jb     0x64004026
64004023:	mov    ebp,DWORD PTR [ebp+0x0]
64004026:	mov    BYTE PTR [eax+ebp*1],0x0
6400402a:	pop    ebp
6400402b:	pop    edi
6400402c:	mov    eax,esi
6400402e:	pop    esi
6400402f:	pop    ebx
64004030:	ret    0x8
64004033:	int3   
64004034:	int3   
64004035:	int3   
64004036:	int3   
64004037:	int3   
64004038:	int3   
64004039:	int3   
6400403a:	int3   
6400403b:	int3   
6400403c:	int3   
6400403d:	int3   
6400403e:	int3   
6400403f:	int3   
64004040:	push   ebp
64004041:	mov    ebp,esp
64004043:	push   0xffffffff
64004045:	push   0x64022fe0
6400404a:	mov    eax,fs:0x0
64004050:	push   eax
64004051:	sub    esp,0x1c
64004054:	push   ebx
64004055:	push   esi
64004056:	push   edi
64004057:	mov    eax,ds:0x64037644
6400405c:	xor    eax,ebp
6400405e:	push   eax
6400405f:	lea    eax,[ebp-0xc]
64004062:	mov    fs:0x0,eax
64004068:	mov    DWORD PTR [ebp-0x10],esp
6400406b:	mov    edi,ecx
6400406d:	mov    DWORD PTR [ebp-0x14],edi
64004070:	mov    eax,DWORD PTR [ebp+0x8]
64004073:	mov    esi,eax
64004075:	or     esi,0xf
64004078:	cmp    esi,0xfffffffe
6400407b:	jbe    0x64004081
6400407d:	mov    esi,eax
6400407f:	jmp    0x640040a3
64004081:	mov    ebx,DWORD PTR [edi+0x18]
64004084:	mov    eax,0xaaaaaaab
64004089:	mul    esi
6400408b:	mov    ecx,ebx
6400408d:	shr    ecx,1
6400408f:	shr    edx,1
64004091:	cmp    edx,ecx
64004093:	jae    0x640040a3
64004095:	mov    eax,0xfffffffe
6400409a:	sub    eax,ecx
6400409c:	cmp    ebx,eax
6400409e:	ja     0x640040a3
640040a0:	lea    esi,[ecx+ebx*1]
640040a3:	xor    ebx,ebx
640040a5:	lea    ecx,[esi+0x1]
640040a8:	cmp    ecx,ebx
640040aa:	mov    DWORD PTR [ebp-0x4],ebx
640040ad:	ja     0x640040bf
640040af:	xor    ecx,ecx
640040b1:	push   ecx
640040b2:	call   0x64013895
640040b7:	add    esp,0x4
640040ba:	mov    DWORD PTR [ebp+0x8],eax
640040bd:	jmp    0x64004117
640040bf:	or     eax,0xffffffff
640040c2:	xor    edx,edx
640040c4:	div    ecx
640040c6:	cmp    eax,0x1
640040c9:	jae    0x640040b1
640040cb:	lea    ecx,[ebp-0x18]
640040ce:	push   ecx
640040cf:	lea    ecx,[ebp-0x28]
640040d2:	mov    DWORD PTR [ebp-0x18],ebx
640040d5:	call   0x6401361a
640040da:	push   0x6402bd5c
640040df:	lea    edx,[ebp-0x28]
640040e2:	push   edx
640040e3:	mov    DWORD PTR [ebp-0x28],0x640242a4
640040ea:	call   0x64013832
640040ef:	mov    eax,DWORD PTR [ebp+0x8]
640040f2:	mov    ecx,DWORD PTR [ebp-0x14]
640040f5:	mov    DWORD PTR [ebp-0x1c],eax
640040f8:	add    eax,0x1
640040fb:	mov    DWORD PTR [ebp-0x10],esp
640040fe:	push   eax
640040ff:	mov    BYTE PTR [ebp-0x4],0x2
64004103:	call   0x64003530
64004108:	mov    DWORD PTR [ebp+0x8],eax
6400410b:	mov    eax,0x64004111
64004110:	ret    
64004111:	mov    edi,DWORD PTR [ebp-0x14]
64004114:	mov    esi,DWORD PTR [ebp-0x1c]
64004117:	mov    ebx,DWORD PTR [ebp+0xc]
6400411a:	test   ebx,ebx
6400411c:	jbe    0x6400413e
6400411e:	cmp    DWORD PTR [edi+0x18],0x10
64004122:	jb     0x64004129
64004124:	mov    eax,DWORD PTR [edi+0x4]
64004127:	jmp    0x6400412c
64004129:	lea    eax,[edi+0x4]
6400412c:	mov    ecx,DWORD PTR [ebp+0x8]
6400412f:	push   ebx
64004130:	push   eax
64004131:	lea    eax,[esi+0x1]
64004134:	push   eax
64004135:	push   ecx
64004136:	call   0x6401375c
6400413b:	add    esp,0x10
6400413e:	cmp    DWORD PTR [edi+0x18],0x10
64004142:	jb     0x64004150
64004144:	mov    edx,DWORD PTR [edi+0x4]
64004147:	push   edx
64004148:	call   0x64013604
6400414d:	add    esp,0x4
64004150:	cmp    esi,0x10
64004153:	mov    ecx,DWORD PTR [ebp+0x8]
64004156:	lea    eax,[edi+0x4]
64004159:	mov    BYTE PTR [eax],0x0
6400415c:	mov    DWORD PTR [eax],ecx
6400415e:	mov    DWORD PTR [edi+0x18],esi
64004161:	mov    DWORD PTR [edi+0x14],ebx
64004164:	jb     0x64004168
64004166:	mov    eax,ecx
64004168:	mov    BYTE PTR [eax+ebx*1],0x0
6400416c:	mov    ecx,DWORD PTR [ebp-0xc]
6400416f:	mov    DWORD PTR fs:0x0,ecx
64004176:	pop    ecx
64004177:	pop    edi
64004178:	pop    esi
64004179:	pop    ebx
6400417a:	mov    esp,ebp
6400417c:	pop    ebp
6400417d:	ret    0x8
64004180:	mov    esi,DWORD PTR [ebp-0x14]
64004183:	cmp    DWORD PTR [esi+0x18],0x10
64004187:	jb     0x64004195
64004189:	mov    eax,DWORD PTR [esi+0x4]
6400418c:	push   eax
6400418d:	call   0x64013604
64004192:	add    esp,0x4
64004195:	push   0x0
64004197:	mov    DWORD PTR [esi+0x18],0xf
6400419e:	mov    DWORD PTR [esi+0x14],0x0
640041a5:	push   0x0
640041a7:	mov    BYTE PTR [esi+0x4],0x0
640041ab:	call   0x64013832
640041b0:	int3   
640041b1:	int3   
640041b2:	int3   
640041b3:	int3   
640041b4:	int3   
640041b5:	int3   
640041b6:	int3   
640041b7:	int3   
640041b8:	int3   
640041b9:	int3   
640041ba:	int3   
640041bb:	int3   
640041bc:	int3   
640041bd:	int3   
640041be:	int3   
640041bf:	int3   
640041c0:	test   ecx,ecx
640041c2:	jne    0x640041ce
640041c4:	push   0x80004005
640041c9:	call   0x64001040
640041ce:	test   ebx,ebx
640041d0:	jne    0x640041e0
640041d2:	test   esi,esi
640041d4:	je     0x640041e0
640041d6:	push   0x80070057
640041db:	call   0x64001040
640041e0:	mov    eax,DWORD PTR [ecx]
640041e2:	mov    edx,DWORD PTR [eax]
640041e4:	push   0x2
640041e6:	push   esi
640041e7:	call   edx
640041e9:	test   eax,eax
640041eb:	jne    0x640041f2
640041ed:	jmp    0x64004330
640041f2:	add    eax,0x10
640041f5:	test   esi,esi
640041f7:	mov    DWORD PTR [edi],eax
640041f9:	jl     0x640041d6
640041fb:	cmp    esi,DWORD PTR [eax-0x8]
640041fe:	jg     0x640041d6
64004200:	mov    DWORD PTR [eax-0xc],esi
64004203:	mov    ecx,DWORD PTR [edi]
64004205:	lea    eax,[esi+esi*1]
64004208:	push   eax
64004209:	push   ebx
6400420a:	mov    WORD PTR [eax+ecx*1],0x0
64004210:	mov    edx,DWORD PTR [edi]
64004212:	push   eax
64004213:	push   edx
64004214:	call   0x6401375c
64004219:	add    esp,0x10
6400421c:	mov    eax,edi
6400421e:	ret    
6400421f:	int3   
64004220:	push   esi
64004221:	mov    esi,ecx
64004223:	mov    ecx,DWORD PTR [esi]
64004225:	cmp    DWORD PTR [ecx-0xc],0x0
64004229:	lea    eax,[ecx-0x10]
6400422c:	push   edi
6400422d:	mov    edi,DWORD PTR [eax]
6400422f:	je     0x6400427f
64004231:	cmp    DWORD PTR [eax+0xc],0x0
64004235:	lea    edx,[eax+0xc]
64004238:	jge    0x6400425b
6400423a:	cmp    DWORD PTR [ecx-0x8],0x0
6400423e:	jge    0x6400424a
64004240:	push   0x80070057
64004245:	call   0x64001040
6400424a:	mov    DWORD PTR [ecx-0xc],0x0
64004251:	mov    eax,DWORD PTR [esi]
64004253:	pop    edi
64004254:	mov    WORD PTR [eax],0x0
64004259:	pop    esi
6400425a:	ret    
6400425b:	or     ecx,0xffffffff
6400425e:	lock xadd DWORD PTR [edx],ecx
64004262:	dec    ecx
64004263:	test   ecx,ecx
64004265:	jg     0x64004271
64004267:	mov    ecx,DWORD PTR [eax]
64004269:	mov    edx,DWORD PTR [ecx]
6400426b:	push   eax
6400426c:	mov    eax,DWORD PTR [edx+0x4]
6400426f:	call   eax
64004271:	mov    edx,DWORD PTR [edi]
64004273:	mov    eax,DWORD PTR [edx+0xc]
64004276:	mov    ecx,edi
64004278:	call   eax
6400427a:	add    eax,0x10
6400427d:	mov    DWORD PTR [esi],eax
6400427f:	pop    edi
64004280:	pop    esi
64004281:	ret    
64004282:	int3   
64004283:	int3   
64004284:	int3   
64004285:	int3   
64004286:	int3   
64004287:	int3   
64004288:	int3   
64004289:	int3   
6400428a:	int3   
6400428b:	int3   
6400428c:	int3   
6400428d:	int3   
6400428e:	int3   
6400428f:	int3   
64004290:	test   edi,edi
64004292:	push   ebp
64004293:	mov    ebp,DWORD PTR [esp+0x8]
64004297:	jne    0x640042a4
64004299:	mov    ecx,ebp
6400429b:	call   0x64004220
640042a0:	pop    ebp
640042a1:	ret    0x8
640042a4:	push   esi
640042a5:	mov    esi,DWORD PTR [esp+0x10]
640042a9:	test   esi,esi
640042ab:	jne    0x640042b7
640042ad:	push   0x80070057
640042b2:	call   0x64001040
640042b7:	mov    eax,DWORD PTR [ebp+0x0]
640042ba:	mov    edx,DWORD PTR [eax-0x8]
640042bd:	mov    ecx,0x1
640042c2:	sub    ecx,DWORD PTR [eax-0x4]
640042c5:	sub    esi,eax
640042c7:	sub    edx,edi
640042c9:	sar    esi,1
640042cb:	or     ecx,edx
640042cd:	push   ebx
640042ce:	mov    ebx,DWORD PTR [eax-0xc]
640042d1:	jge    0x640042db
640042d3:	push   edi
640042d4:	mov    ecx,ebp
640042d6:	call   0x64004340
640042db:	mov    eax,DWORD PTR [ebp+0x0]
640042de:	cmp    esi,ebx
640042e0:	lea    ebx,[edi+edi*1]
640042e3:	push   ebx
640042e4:	ja     0x640042f3
640042e6:	lea    ecx,[eax+esi*2]
640042e9:	push   ecx
640042ea:	push   ebx
640042eb:	push   eax
640042ec:	call   0x640137d7
640042f1:	jmp    0x640042ff
640042f3:	mov    edx,DWORD PTR [esp+0x18]
640042f7:	push   edx
640042f8:	push   ebx
640042f9:	push   eax
640042fa:	call   0x6401375c
640042ff:	add    esp,0x10
64004302:	test   edi,edi
64004304:	jl     0x64004320
64004306:	mov    eax,DWORD PTR [ebp+0x0]
64004309:	cmp    edi,DWORD PTR [eax-0x8]
6400430c:	jg     0x64004320
6400430e:	mov    DWORD PTR [eax-0xc],edi
64004311:	mov    eax,DWORD PTR [ebp+0x0]
64004314:	mov    WORD PTR [ebx+eax*1],0x0
6400431a:	pop    ebx
6400431b:	pop    esi
6400431c:	pop    ebp
6400431d:	ret    0x8
64004320:	push   0x80070057
64004325:	call   0x64001040
6400432a:	int3   
6400432b:	int3   
6400432c:	int3   
6400432d:	int3   
6400432e:	int3   
6400432f:	int3   
64004330:	push   0x8007000e
64004335:	call   0x64001040
6400433a:	int3   
6400433b:	int3   
6400433c:	int3   
6400433d:	int3   
6400433e:	int3   
6400433f:	int3   
64004340:	mov    eax,DWORD PTR [ecx]
64004342:	mov    edx,DWORD PTR [esp+0x4]
64004346:	sub    eax,0x10
64004349:	push   esi
6400434a:	mov    esi,DWORD PTR [eax+0x4]
6400434d:	cmp    esi,edx
6400434f:	jle    0x64004353
64004351:	mov    edx,esi
64004353:	cmp    DWORD PTR [eax+0xc],0x1
64004357:	pop    esi
64004358:	jle    0x64004363
6400435a:	mov    DWORD PTR [esp+0x4],edx
6400435e:	jmp    0x64003780
64004363:	mov    eax,DWORD PTR [eax+0x8]
64004366:	cmp    eax,edx
64004368:	jge    0x64004389
6400436a:	cmp    eax,0x400
6400436f:	jle    0x64004378
64004371:	add    eax,0x400
64004376:	jmp    0x6400437a
64004378:	add    eax,eax
6400437a:	cmp    eax,edx
6400437c:	jge    0x64004380
6400437e:	mov    eax,edx
64004380:	mov    DWORD PTR [esp+0x4],eax
64004384:	jmp    0x64004bc0
64004389:	ret    0x4
6400438c:	int3   
6400438d:	int3   
6400438e:	int3   
6400438f:	int3   
64004390:	push   esi
64004391:	mov    esi,eax
64004393:	mov    ecx,DWORD PTR [esi]
64004395:	mov    eax,DWORD PTR [ecx]
64004397:	mov    edx,DWORD PTR [eax+0x10]
6400439a:	push   edi
6400439b:	call   edx
6400439d:	cmp    DWORD PTR [esi+0xc],0x0
640043a1:	lea    ecx,[esi+0xc]
640043a4:	jl     0x640043ba
640043a6:	cmp    eax,DWORD PTR [esi]
640043a8:	jne    0x640043ba
640043aa:	mov    edi,esi
640043ac:	mov    eax,0x1
640043b1:	lock xadd DWORD PTR [ecx],eax
640043b5:	mov    eax,edi
640043b7:	pop    edi
640043b8:	pop    esi
640043b9:	ret    
640043ba:	mov    ecx,DWORD PTR [esi+0x4]
640043bd:	mov    edx,DWORD PTR [eax]
640043bf:	mov    edx,DWORD PTR [edx]
640043c1:	push   0x2
640043c3:	push   ecx
640043c4:	mov    ecx,eax
640043c6:	call   edx
640043c8:	mov    edi,eax
640043ca:	test   edi,edi
640043cc:	jne    0x640043d3
640043ce:	jmp    0x64004330
640043d3:	mov    eax,DWORD PTR [esi+0x4]
640043d6:	mov    DWORD PTR [edi+0x4],eax
640043d9:	mov    eax,DWORD PTR [esi+0x4]
640043dc:	lea    eax,[eax+eax*1+0x2]
640043e0:	push   eax
640043e1:	add    esi,0x10
640043e4:	push   esi
640043e5:	push   eax
640043e6:	lea    ecx,[edi+0x10]
640043e9:	push   ecx
640043ea:	call   0x6401375c
640043ef:	add    esp,0x10
640043f2:	mov    eax,edi
640043f4:	pop    edi
640043f5:	pop    esi
640043f6:	ret    
640043f7:	int3   
640043f8:	int3   
640043f9:	int3   
640043fa:	int3   
640043fb:	int3   
640043fc:	int3   
640043fd:	int3   
640043fe:	int3   
640043ff:	int3   
64004400:	push   ebp
64004401:	mov    ebp,esp
64004403:	and    esp,0xfffffff8
64004406:	sub    esp,0x14
64004409:	push   ebx
6400440a:	push   esi
6400440b:	mov    esi,ecx
6400440d:	cmp    DWORD PTR [esi+0x8],0x0
64004411:	push   edi
64004412:	jne    0x64004434
64004414:	mov    eax,DWORD PTR [ebp+0x14]
64004417:	mov    ecx,DWORD PTR [esi+0x4]
6400441a:	mov    edi,DWORD PTR [ebp+0x8]
6400441d:	push   eax
6400441e:	push   ecx
6400441f:	push   0x1
64004421:	push   edi
64004422:	mov    ecx,esi
64004424:	call   0x64004d90
64004429:	mov    eax,edi
6400442b:	pop    edi
6400442c:	pop    esi
6400442d:	pop    ebx
6400442e:	mov    esp,ebp
64004430:	pop    ebp
64004431:	ret    0x10
64004434:	mov    edx,DWORD PTR [esi+0x4]
64004437:	mov    edi,DWORD PTR [ebp+0xc]
6400443a:	test   edi,edi
6400443c:	mov    eax,DWORD PTR [edx]
6400443e:	mov    DWORD PTR [esp+0x18],eax
64004442:	je     0x64004448
64004444:	cmp    edi,esi
64004446:	je     0x6400444d
64004448:	call   0x64013e36
6400444d:	mov    ebx,DWORD PTR [ebp+0x10]
64004450:	cmp    ebx,DWORD PTR [esp+0x18]
64004454:	jne    0x64004487
64004456:	mov    edi,DWORD PTR [ebp+0x14]
64004459:	lea    ecx,[ebx+0xc]
6400445c:	push   ecx
6400445d:	push   edi
6400445e:	mov    ecx,esi
64004460:	call   0x64004610
64004465:	test   al,al
64004467:	je     0x640045e3
6400446d:	push   edi
6400446e:	mov    edi,DWORD PTR [ebp+0x8]
64004471:	push   ebx
64004472:	push   0x1
64004474:	push   edi
64004475:	mov    ecx,esi
64004477:	call   0x64004d90
6400447c:	mov    eax,edi
6400447e:	pop    edi
6400447f:	pop    esi
64004480:	pop    ebx
64004481:	mov    esp,ebp
64004483:	pop    ebp
64004484:	ret    0x10
64004487:	test   edi,edi
64004489:	mov    edx,DWORD PTR [esi+0x4]
6400448c:	mov    DWORD PTR [esp+0x18],edx
64004490:	je     0x64004496
64004492:	cmp    edi,esi
64004494:	je     0x6400449b
64004496:	call   0x64013e36
6400449b:	cmp    ebx,DWORD PTR [esp+0x18]
6400449f:	mov    edi,DWORD PTR [ebp+0x14]
640044a2:	mov    ecx,esi
640044a4:	jne    0x640044de
640044a6:	mov    eax,DWORD PTR [esi+0x4]
640044a9:	mov    eax,DWORD PTR [eax+0x8]
640044ac:	add    eax,0xc
640044af:	push   edi
640044b0:	push   eax
640044b1:	call   0x64004610
640044b6:	test   al,al
640044b8:	je     0x640045e3
640044be:	mov    ecx,DWORD PTR [esi+0x4]
640044c1:	mov    edx,DWORD PTR [ecx+0x8]
640044c4:	push   edi
640044c5:	mov    edi,DWORD PTR [ebp+0x8]
640044c8:	push   edx
640044c9:	push   0x0
640044cb:	push   edi
640044cc:	mov    ecx,esi
640044ce:	call   0x64004d90
640044d3:	mov    eax,edi
640044d5:	pop    edi
640044d6:	pop    esi
640044d7:	pop    ebx
640044d8:	mov    esp,ebp
640044da:	pop    ebp
640044db:	ret    0x10
640044de:	lea    eax,[ebx+0xc]
640044e1:	push   eax
640044e2:	push   edi
640044e3:	call   0x64004610
640044e8:	test   al,al
640044ea:	je     0x6400454f
640044ec:	mov    eax,DWORD PTR [ebp+0xc]
640044ef:	lea    ecx,[esp+0xc]
640044f3:	mov    DWORD PTR [esp+0xc],eax
640044f7:	mov    DWORD PTR [esp+0x10],ebx
640044fb:	call   0x64006010
64004500:	mov    ecx,DWORD PTR [esp+0x10]
64004504:	add    ecx,0xc
64004507:	push   edi
64004508:	push   ecx
64004509:	mov    ecx,esi
6400450b:	call   0x64004610
64004510:	test   al,al
64004512:	je     0x6400454f
64004514:	mov    eax,DWORD PTR [esp+0x10]
64004518:	mov    edx,DWORD PTR [eax+0x8]
6400451b:	cmp    BYTE PTR [edx+0x45],0x0
6400451f:	push   edi
64004520:	mov    edi,DWORD PTR [ebp+0x8]
64004523:	mov    ecx,esi
64004525:	je     0x6400453b
64004527:	push   eax
64004528:	push   0x0
6400452a:	push   edi
6400452b:	call   0x64004d90
64004530:	mov    eax,edi
64004532:	pop    edi
64004533:	pop    esi
64004534:	pop    ebx
64004535:	mov    esp,ebp
64004537:	pop    ebp
64004538:	ret    0x10
6400453b:	push   ebx
6400453c:	push   0x1
6400453e:	push   edi
6400453f:	call   0x64004d90
64004544:	mov    eax,edi
64004546:	pop    edi
64004547:	pop    esi
64004548:	pop    ebx
64004549:	mov    esp,ebp
6400454b:	pop    ebp
6400454c:	ret    0x10
6400454f:	push   edi
64004550:	lea    eax,[ebx+0xc]
64004553:	push   eax
64004554:	mov    ecx,esi
64004556:	call   0x64004610
6400455b:	test   al,al
6400455d:	je     0x640045e3
64004563:	mov    ecx,DWORD PTR [esi+0x4]
64004566:	mov    eax,DWORD PTR [ebp+0xc]
64004569:	mov    DWORD PTR [esp+0x18],ecx
6400456d:	lea    ecx,[esp+0xc]
64004571:	mov    DWORD PTR [esp+0xc],eax
64004575:	mov    DWORD PTR [esp+0x10],ebx
64004579:	mov    DWORD PTR [esp+0x14],esi
6400457d:	call   0x640060a0
64004582:	lea    edx,[esp+0x14]
64004586:	push   edx
64004587:	lea    ecx,[esp+0x10]
6400458b:	call   0x64003ca0
64004590:	test   al,al
64004592:	jne    0x640045a8
64004594:	mov    eax,DWORD PTR [esp+0x10]
64004598:	add    eax,0xc
6400459b:	push   eax
6400459c:	push   edi
6400459d:	mov    ecx,esi
6400459f:	call   0x64004610
640045a4:	test   al,al
640045a6:	je     0x640045e3
640045a8:	mov    ecx,DWORD PTR [ebx+0x8]
640045ab:	cmp    BYTE PTR [ecx+0x45],0x0
640045af:	push   edi
640045b0:	mov    edi,DWORD PTR [ebp+0x8]
640045b3:	mov    ecx,esi
640045b5:	je     0x640045cb
640045b7:	push   ebx
640045b8:	push   0x0
640045ba:	push   edi
640045bb:	call   0x64004d90
640045c0:	mov    eax,edi
640045c2:	pop    edi
640045c3:	pop    esi
640045c4:	pop    ebx
640045c5:	mov    esp,ebp
640045c7:	pop    ebp
640045c8:	ret    0x10
640045cb:	mov    edx,DWORD PTR [esp+0x14]
640045cf:	push   edx
640045d0:	push   0x1
640045d2:	push   edi
640045d3:	call   0x64004d90
640045d8:	mov    eax,edi
640045da:	pop    edi
640045db:	pop    esi
640045dc:	pop    ebx
640045dd:	mov    esp,ebp
640045df:	pop    ebp
640045e0:	ret    0x10
640045e3:	push   edi
640045e4:	lea    eax,[esp+0x18]
640045e8:	push   eax
640045e9:	mov    ecx,esi
640045eb:	call   0x64004c00
640045f0:	mov    edx,DWORD PTR [eax]
640045f2:	mov    ecx,DWORD PTR [ebp+0x8]
640045f5:	pop    edi
640045f6:	mov    DWORD PTR [ecx],edx
640045f8:	mov    eax,DWORD PTR [eax+0x4]
640045fb:	pop    esi
640045fc:	mov    DWORD PTR [ecx+0x4],eax
640045ff:	mov    eax,ecx
64004601:	pop    ebx
64004602:	mov    esp,ebp
64004604:	pop    ebp
64004605:	ret    0x10
64004608:	int3   
64004609:	int3   
6400460a:	int3   
6400460b:	int3   
6400460c:	int3   
6400460d:	int3   
6400460e:	int3   
6400460f:	int3   
64004610:	mov    eax,DWORD PTR [esp+0x8]
64004614:	cmp    DWORD PTR [eax+0x18],0x10
64004618:	mov    ecx,DWORD PTR [eax+0x14]
6400461b:	jb     0x64004622
6400461d:	mov    eax,DWORD PTR [eax+0x4]
64004620:	jmp    0x64004625
64004622:	add    eax,0x4
64004625:	push   ecx
64004626:	mov    ecx,DWORD PTR [esp+0x8]
6400462a:	push   eax
6400462b:	mov    eax,DWORD PTR [ecx+0x14]
6400462e:	push   eax
6400462f:	push   0x0
64004631:	call   0x640034c0
64004636:	xor    ecx,ecx
64004638:	test   eax,eax
6400463a:	setl   cl
6400463d:	mov    al,cl
6400463f:	ret    0x8
64004642:	int3   
64004643:	int3   
64004644:	int3   
64004645:	int3   
64004646:	int3   
64004647:	int3   
64004648:	int3   
64004649:	int3   
6400464a:	int3   
6400464b:	int3   
6400464c:	int3   
6400464d:	int3   
6400464e:	int3   
6400464f:	int3   
64004650:	push   0xffffffff
64004652:	push   0x64023218
64004657:	mov    eax,fs:0x0
6400465d:	push   eax
6400465e:	push   ecx
6400465f:	push   ebx
64004660:	push   esi
64004661:	mov    eax,ds:0x64037644
64004666:	xor    eax,esp
64004668:	push   eax
64004669:	lea    eax,[esp+0x10]
6400466d:	mov    fs:0x0,eax
64004673:	mov    esi,ecx
64004675:	mov    DWORD PTR [esp+0xc],esi
64004679:	mov    eax,DWORD PTR [esp+0x20]
6400467d:	xor    ebx,ebx
6400467f:	push   0xffffffff
64004681:	push   ebx
64004682:	mov    DWORD PTR [esi+0x18],0xf
64004689:	mov    DWORD PTR [esi+0x14],ebx
6400468c:	push   eax
6400468d:	mov    BYTE PTR [esi+0x4],bl
64004690:	call   0x64003310
64004695:	mov    edx,DWORD PTR [esp+0x24]
64004699:	push   0xffffffff
6400469b:	lea    ecx,[esi+0x1c]
6400469e:	mov    DWORD PTR [esp+0x1c],ebx
640046a2:	push   ebx
640046a3:	mov    DWORD PTR [ecx+0x18],0xf
640046aa:	mov    DWORD PTR [ecx+0x14],ebx
640046ad:	push   edx
640046ae:	mov    BYTE PTR [ecx+0x4],bl
640046b1:	call   0x64003310
640046b6:	mov    eax,esi
640046b8:	mov    ecx,DWORD PTR [esp+0x10]
640046bc:	mov    DWORD PTR fs:0x0,ecx
640046c3:	pop    ecx
640046c4:	pop    esi
640046c5:	pop    ebx
640046c6:	add    esp,0x10
640046c9:	ret    0x8
640046cc:	int3   
640046cd:	int3   
640046ce:	int3   
640046cf:	int3   
640046d0:	push   ebx
640046d1:	push   ebp
640046d2:	mov    ebp,DWORD PTR [esp+0xc]
640046d6:	push   esi
640046d7:	mov    ebx,eax
640046d9:	cmp    DWORD PTR [ebx+0x14],ebp
640046dc:	push   edi
640046dd:	mov    esi,ecx
640046df:	jae    0x640046e6
640046e1:	call   0x64012f1b
640046e6:	mov    edi,DWORD PTR [ebx+0x14]
640046e9:	mov    eax,DWORD PTR [esp+0x18]
640046ed:	sub    edi,ebp
640046ef:	cmp    eax,edi
640046f1:	jae    0x640046f5
640046f3:	mov    edi,eax
640046f5:	cmp    esi,ebx
640046f7:	jne    0x64004716
640046f9:	lea    ebx,[edi+ebp*1]
640046fc:	or     eax,0xffffffff
640046ff:	call   0x64005070
64004704:	mov    eax,ebp
64004706:	xor    ebx,ebx
64004708:	call   0x64005070
6400470d:	pop    edi
6400470e:	mov    eax,esi
64004710:	pop    esi
64004711:	pop    ebp
64004712:	pop    ebx
64004713:	ret    0x8
64004716:	mov    eax,esi
64004718:	call   0x64005100
6400471d:	test   al,al
6400471f:	je     0x6400476d
64004721:	cmp    DWORD PTR [ebx+0x18],0x8
64004725:	jb     0x6400472c
64004727:	mov    ecx,DWORD PTR [ebx+0x4]
6400472a:	jmp    0x6400472f
6400472c:	lea    ecx,[ebx+0x4]
6400472f:	cmp    DWORD PTR [esi+0x18],0x8
64004733:	lea    ebp,[esi+0x4]
64004736:	jb     0x6400473d
64004738:	mov    eax,DWORD PTR [ebp+0x0]
6400473b:	jmp    0x6400473f
6400473d:	mov    eax,ebp
6400473f:	mov    edx,DWORD PTR [esp+0x14]
64004743:	lea    ecx,[ecx+edx*2]
64004746:	lea    ebx,[edi+edi*1]
64004749:	push   ebx
6400474a:	push   ecx
6400474b:	mov    ecx,DWORD PTR [esi+0x18]
6400474e:	lea    edx,[ecx+ecx*1]
64004751:	push   edx
64004752:	push   eax
64004753:	call   0x6401375c
64004758:	add    esp,0x10
6400475b:	cmp    DWORD PTR [esi+0x18],0x8
6400475f:	mov    DWORD PTR [esi+0x14],edi
64004762:	jb     0x64004767
64004764:	mov    ebp,DWORD PTR [ebp+0x0]
64004767:	mov    WORD PTR [ebx+ebp*1],0x0
6400476d:	pop    edi
6400476e:	mov    eax,esi
64004770:	pop    esi
64004771:	pop    ebp
64004772:	pop    ebx
64004773:	ret    0x8
64004776:	int3   
64004777:	int3   
64004778:	int3   
64004779:	int3   
6400477a:	int3   
6400477b:	int3   
6400477c:	int3   
6400477d:	int3   
6400477e:	int3   
6400477f:	int3   
64004780:	mov    ecx,DWORD PTR [esi+0x18]
64004783:	cmp    ecx,0x8
64004786:	push   ebx
64004787:	push   ebp
64004788:	mov    ebp,DWORD PTR [esp+0xc]
6400478c:	lea    ebx,[esi+0x4]
6400478f:	jb     0x64004795
64004791:	mov    eax,DWORD PTR [ebx]
64004793:	jmp    0x64004797
64004795:	mov    eax,ebx
64004797:	cmp    ebp,eax
64004799:	jb     0x640047cf
6400479b:	cmp    ecx,0x8
6400479e:	jb     0x640047a4
640047a0:	mov    eax,DWORD PTR [ebx]
640047a2:	jmp    0x640047a6
640047a4:	mov    eax,ebx
640047a6:	mov    edx,DWORD PTR [esi+0x14]
640047a9:	lea    eax,[eax+edx*2]
640047ac:	cmp    eax,ebp
640047ae:	jbe    0x640047cf
640047b0:	cmp    ecx,0x8
640047b3:	jb     0x640047b7
640047b5:	mov    ebx,DWORD PTR [ebx]
640047b7:	mov    ecx,DWORD PTR [esp+0x10]
640047bb:	sub    ebp,ebx
640047bd:	push   ecx
640047be:	sar    ebp,1
640047c0:	push   ebp
640047c1:	mov    eax,esi
640047c3:	mov    ecx,esi
640047c5:	call   0x640046d0
640047ca:	pop    ebp
640047cb:	pop    ebx
640047cc:	ret    0x8
640047cf:	push   edi
640047d0:	mov    edi,DWORD PTR [esp+0x14]
640047d4:	mov    eax,esi
640047d6:	call   0x64005100
640047db:	test   al,al
640047dd:	je     0x64004813
640047df:	mov    ecx,DWORD PTR [esi+0x18]
640047e2:	cmp    ecx,0x8
640047e5:	jb     0x640047eb
640047e7:	mov    eax,DWORD PTR [ebx]
640047e9:	jmp    0x640047ed
640047eb:	mov    eax,ebx
640047ed:	add    edi,edi
640047ef:	push   edi
640047f0:	push   ebp
640047f1:	lea    edx,[ecx+ecx*1]
640047f4:	push   edx
640047f5:	push   eax
640047f6:	call   0x6401375c
640047fb:	mov    eax,DWORD PTR [esp+0x24]
640047ff:	add    esp,0x10
64004802:	cmp    DWORD PTR [esi+0x18],0x8
64004806:	mov    DWORD PTR [esi+0x14],eax
64004809:	jb     0x6400480d
6400480b:	mov    ebx,DWORD PTR [ebx]
6400480d:	mov    WORD PTR [edi+ebx*1],0x0
64004813:	pop    edi
64004814:	pop    ebp
64004815:	mov    eax,esi
64004817:	pop    ebx
64004818:	ret    0x8
6400481b:	int3   
6400481c:	int3   
6400481d:	int3   
6400481e:	int3   
6400481f:	int3   
64004820:	mov    ecx,DWORD PTR [ebx+0x4]
64004823:	sub    esp,0x18
64004826:	cmp    DWORD PTR [ebx+0x8],0x0
6400482a:	push   ebp
6400482b:	mov    ebp,DWORD PTR [esp+0x20]
6400482f:	push   esi
64004830:	push   edi
64004831:	jne    0x6400484c
64004833:	mov    eax,DWORD PTR [esp+0x2c]
64004837:	push   eax
64004838:	push   0x1
6400483a:	push   ebp
6400483b:	push   ebx
6400483c:	call   0x640052f0
64004841:	mov    eax,ebp
64004843:	pop    edi
64004844:	pop    esi
64004845:	pop    ebp
64004846:	add    esp,0x18
64004849:	ret    0x10
6400484c:	mov    esi,DWORD PTR [esp+0x30]
64004850:	test   esi,esi
64004852:	mov    edx,DWORD PTR [ecx]
64004854:	mov    DWORD PTR [esp+0x18],edx
64004858:	je     0x6400485e
6400485a:	cmp    esi,ebx
6400485c:	je     0x64004863
6400485e:	call   0x64013e36
64004863:	mov    edi,DWORD PTR [esp+0x34]
64004867:	cmp    edi,DWORD PTR [esp+0x18]
6400486b:	jne    0x6400489a
6400486d:	mov    esi,DWORD PTR [esp+0x2c]
64004871:	lea    eax,[edi+0xc]
64004874:	mov    ecx,esi
64004876:	call   0x64004a30
6400487b:	test   al,al
6400487d:	je     0x640049ff
64004883:	push   esi
64004884:	push   0x1
64004886:	push   ebp
64004887:	push   ebx
64004888:	mov    ecx,edi
6400488a:	call   0x640052f0
6400488f:	mov    eax,ebp
64004891:	pop    edi
64004892:	pop    esi
64004893:	pop    ebp
64004894:	add    esp,0x18
64004897:	ret    0x10
6400489a:	test   esi,esi
6400489c:	mov    eax,DWORD PTR [ebx+0x4]
6400489f:	mov    DWORD PTR [esp+0x18],eax
640048a3:	je     0x640048a9
640048a5:	cmp    esi,ebx
640048a7:	je     0x640048ae
640048a9:	call   0x64013e36
640048ae:	cmp    edi,DWORD PTR [esp+0x18]
640048b2:	jne    0x640048ed
640048b4:	mov    ecx,DWORD PTR [ebx+0x4]
640048b7:	mov    ecx,DWORD PTR [ecx+0x8]
640048ba:	mov    eax,DWORD PTR [esp+0x2c]
640048be:	add    ecx,0xc
640048c1:	call   0x64004a30
640048c6:	test   al,al
640048c8:	je     0x640049fb
640048ce:	mov    edx,DWORD PTR [esp+0x2c]
640048d2:	mov    eax,DWORD PTR [ebx+0x4]
640048d5:	mov    ecx,DWORD PTR [eax+0x8]
640048d8:	push   edx
640048d9:	push   0x0
640048db:	push   ebp
640048dc:	push   ebx
640048dd:	call   0x640052f0
640048e2:	mov    eax,ebp
640048e4:	pop    edi
640048e5:	pop    esi
640048e6:	pop    ebp
640048e7:	add    esp,0x18
640048ea:	ret    0x10
640048ed:	mov    ecx,DWORD PTR [esp+0x2c]
640048f1:	lea    eax,[edi+0xc]
640048f4:	call   0x64004a30
640048f9:	test   al,al
640048fb:	je     0x64004965
640048fd:	mov    DWORD PTR [esp+0xc],esi
64004901:	lea    esi,[esp+0xc]
64004905:	mov    DWORD PTR [esp+0x10],edi
64004909:	call   0x640064a0
6400490e:	mov    esi,DWORD PTR [esp+0x10]
64004912:	mov    eax,DWORD PTR [esp+0x2c]
64004916:	lea    ecx,[esi+0xc]
64004919:	call   0x64004a30
6400491e:	test   al,al
64004920:	je     0x64004961
64004922:	mov    ecx,DWORD PTR [esi+0x8]
64004925:	cmp    BYTE PTR [ecx+0x45],0x0
64004929:	je     0x64004946
6400492b:	mov    edx,DWORD PTR [esp+0x2c]
6400492f:	push   edx
64004930:	push   0x0
64004932:	push   ebp
64004933:	push   ebx
64004934:	mov    ecx,esi
64004936:	call   0x640052f0
6400493b:	mov    eax,ebp
6400493d:	pop    edi
6400493e:	pop    esi
6400493f:	pop    ebp
64004940:	add    esp,0x18
64004943:	ret    0x10
64004946:	mov    eax,DWORD PTR [esp+0x2c]
6400494a:	push   eax
6400494b:	push   0x1
6400494d:	push   ebp
6400494e:	push   ebx
6400494f:	mov    ecx,edi
64004951:	call   0x640052f0
64004956:	mov    eax,ebp
64004958:	pop    edi
64004959:	pop    esi
6400495a:	pop    ebp
6400495b:	add    esp,0x18
6400495e:	ret    0x10
64004961:	mov    esi,DWORD PTR [esp+0x30]
64004965:	mov    eax,DWORD PTR [esp+0x2c]
64004969:	lea    ecx,[edi+0xc]
6400496c:	call   0x64004a30
64004971:	test   al,al
64004973:	je     0x640049fb
64004979:	mov    ecx,DWORD PTR [ebx+0x4]
6400497c:	mov    DWORD PTR [esp+0xc],esi
64004980:	lea    esi,[esp+0xc]
64004984:	mov    DWORD PTR [esp+0x10],edi
64004988:	mov    DWORD PTR [esp+0x18],ecx
6400498c:	mov    DWORD PTR [esp+0x14],ebx
64004990:	call   0x64006520
64004995:	lea    esi,[esp+0x14]
64004999:	lea    edi,[esp+0xc]
6400499d:	call   0x64003ed0
640049a2:	test   al,al
640049a4:	mov    esi,DWORD PTR [esp+0x10]
640049a8:	jne    0x640049ba
640049aa:	mov    ecx,DWORD PTR [esp+0x2c]
640049ae:	lea    eax,[esi+0xc]
640049b1:	call   0x64004a30
640049b6:	test   al,al
640049b8:	je     0x640049fb
640049ba:	mov    ecx,DWORD PTR [esp+0x34]
640049be:	mov    edx,DWORD PTR [ecx+0x8]
640049c1:	cmp    BYTE PTR [edx+0x45],0x0
640049c5:	je     0x640049e0
640049c7:	mov    eax,DWORD PTR [esp+0x2c]
640049cb:	push   eax
640049cc:	push   0x0
640049ce:	push   ebp
640049cf:	push   ebx
640049d0:	call   0x640052f0
640049d5:	mov    eax,ebp
640049d7:	pop    edi
640049d8:	pop    esi
640049d9:	pop    ebp
640049da:	add    esp,0x18
640049dd:	ret    0x10
640049e0:	mov    ecx,DWORD PTR [esp+0x2c]
640049e4:	push   ecx
640049e5:	push   0x1
640049e7:	push   ebp
640049e8:	push   ebx
640049e9:	mov    ecx,esi
640049eb:	call   0x640052f0
640049f0:	mov    eax,ebp
640049f2:	pop    edi
640049f3:	pop    esi
640049f4:	pop    ebp
640049f5:	add    esp,0x18
640049f8:	ret    0x10
640049fb:	mov    esi,DWORD PTR [esp+0x2c]
640049ff:	push   esi
64004a00:	lea    edx,[esp+0x18]
64004a04:	push   edx
64004a05:	push   ebx
64004a06:	call   0x64005160
64004a0b:	mov    ecx,DWORD PTR [eax]
64004a0d:	mov    DWORD PTR [ebp+0x0],ecx
64004a10:	mov    edx,DWORD PTR [eax+0x4]
64004a13:	pop    edi
64004a14:	pop    esi
64004a15:	mov    DWORD PTR [ebp+0x4],edx
64004a18:	mov    eax,ebp
64004a1a:	pop    ebp
64004a1b:	add    esp,0x18
64004a1e:	ret    0x10
64004a21:	int3   
64004a22:	int3   
64004a23:	int3   
64004a24:	int3   
64004a25:	int3   
64004a26:	int3   
64004a27:	int3   
64004a28:	int3   
64004a29:	int3   
64004a2a:	int3   
64004a2b:	int3   
64004a2c:	int3   
64004a2d:	int3   
64004a2e:	int3   
64004a2f:	int3   
64004a30:	cmp    DWORD PTR [eax+0x18],0x8
64004a34:	push   edi
64004a35:	mov    edi,DWORD PTR [eax+0x14]
64004a38:	jb     0x64004a51
64004a3a:	mov    eax,DWORD PTR [eax+0x4]
64004a3d:	push   eax
64004a3e:	mov    eax,DWORD PTR [ecx+0x14]
64004a41:	call   0x640068f0
64004a46:	xor    ecx,ecx
64004a48:	test   eax,eax
64004a4a:	setl   cl
64004a4d:	mov    al,cl
64004a4f:	pop    edi
64004a50:	ret    
64004a51:	add    eax,0x4
64004a54:	push   eax
64004a55:	mov    eax,DWORD PTR [ecx+0x14]
64004a58:	call   0x640068f0
64004a5d:	xor    ecx,ecx
64004a5f:	test   eax,eax
64004a61:	setl   cl
64004a64:	mov    al,cl
64004a66:	pop    edi
64004a67:	ret    
64004a68:	int3   
64004a69:	int3   
64004a6a:	int3   
64004a6b:	int3   
64004a6c:	int3   
64004a6d:	int3   
64004a6e:	int3   
64004a6f:	int3   
64004a70:	push   0xffffffff
64004a72:	push   0x640231e8
64004a77:	mov    eax,fs:0x0
64004a7d:	push   eax
64004a7e:	push   esi
64004a7f:	push   edi
64004a80:	mov    eax,ds:0x64037644
64004a85:	xor    eax,esp
64004a87:	push   eax
64004a88:	lea    eax,[esp+0xc]
64004a8c:	mov    fs:0x0,eax
64004a92:	mov    esi,DWORD PTR [esp+0x1c]
64004a96:	mov    eax,DWORD PTR [esp+0x20]
64004a9a:	xor    edi,edi
64004a9c:	push   0xffffffff
64004a9e:	mov    DWORD PTR [esi+0x18],0x7
64004aa5:	mov    DWORD PTR [esi+0x14],edi
64004aa8:	push   edi
64004aa9:	mov    ecx,esi
64004aab:	mov    WORD PTR [esi+0x4],di
64004aaf:	call   0x640046d0
64004ab4:	mov    eax,DWORD PTR [esp+0x24]
64004ab8:	lea    ecx,[esi+0x1c]
64004abb:	mov    DWORD PTR [esp+0x14],edi
64004abf:	push   0xffffffff
64004ac1:	mov    DWORD PTR [ecx+0x18],0x7
64004ac8:	mov    DWORD PTR [ecx+0x14],edi
64004acb:	push   edi
64004acc:	mov    WORD PTR [ecx+0x4],di
64004ad0:	call   0x640046d0
64004ad5:	mov    eax,esi
64004ad7:	mov    ecx,DWORD PTR [esp+0xc]
64004adb:	mov    DWORD PTR fs:0x0,ecx
64004ae2:	pop    ecx
64004ae3:	pop    edi
64004ae4:	pop    esi
64004ae5:	add    esp,0xc
64004ae8:	ret    0xc
64004aeb:	int3   
64004aec:	int3   
64004aed:	int3   
64004aee:	int3   
64004aef:	int3   
64004af0:	push   ebx
64004af1:	push   esi
64004af2:	mov    esi,DWORD PTR [esp+0x10]
64004af6:	mov    eax,esi
64004af8:	shr    eax,0x4
64004afb:	push   edi
64004afc:	mov    edi,DWORD PTR [esp+0x10]
64004b00:	add    eax,0x1
64004b03:	mov    ebx,ecx
64004b05:	movzx  ecx,ax
64004b08:	push   0x6
64004b0a:	push   ecx
64004b0b:	push   edi
64004b0c:	call   DWORD PTR ds:0x64024020
64004b12:	test   eax,eax
64004b14:	je     0x64004b27
64004b16:	push   esi
64004b17:	push   eax
64004b18:	push   edi
64004b19:	call   0x64001100
64004b1e:	mov    esi,eax
64004b20:	add    esp,0xc
64004b23:	test   esi,esi
64004b25:	jne    0x64004b2f
64004b27:	pop    edi
64004b28:	pop    esi
64004b29:	xor    eax,eax
64004b2b:	pop    ebx
64004b2c:	ret    0x8
64004b2f:	mov    eax,DWORD PTR [ebx]
64004b31:	movzx  edi,WORD PTR [esi]
64004b34:	sub    eax,0x10
64004b37:	mov    edx,0x1
64004b3c:	sub    edx,DWORD PTR [eax+0xc]
64004b3f:	mov    eax,DWORD PTR [eax+0x8]
64004b42:	sub    eax,edi
64004b44:	or     edx,eax
64004b46:	jge    0x64004b50
64004b48:	push   edi
64004b49:	mov    ecx,ebx
64004b4b:	call   0x64004340
64004b50:	movzx  eax,WORD PTR [esi]
64004b53:	cmp    eax,0xffffffff
64004b56:	push   ebp
64004b57:	mov    ebp,DWORD PTR [ebx]
64004b59:	lea    edx,[esi+0x2]
64004b5c:	jne    0x64004b75
64004b5e:	mov    eax,edx
64004b60:	lea    esi,[eax+0x2]
64004b63:	mov    cx,WORD PTR [eax]
64004b66:	add    eax,0x2
64004b69:	test   cx,cx
64004b6c:	jne    0x64004b63
64004b6e:	sub    eax,esi
64004b70:	sar    eax,1
64004b72:	add    eax,0x1
64004b75:	lea    ecx,[eax+eax*1]
64004b78:	push   ecx
64004b79:	push   edx
64004b7a:	lea    esi,[edi+edi*1]
64004b7d:	push   esi
64004b7e:	push   ebp
64004b7f:	call   0x6401375c
64004b84:	push   eax
64004b85:	call   0x64001060
64004b8a:	add    esp,0x14
64004b8d:	test   edi,edi
64004b8f:	pop    ebp
64004b90:	jl     0x64004baf
64004b92:	mov    eax,DWORD PTR [ebx]
64004b94:	cmp    edi,DWORD PTR [eax-0x8]
64004b97:	jg     0x64004baf
64004b99:	mov    DWORD PTR [eax-0xc],edi
64004b9c:	mov    edx,DWORD PTR [ebx]
64004b9e:	pop    edi
64004b9f:	mov    WORD PTR [esi+edx*1],0x0
64004ba5:	pop    esi
64004ba6:	mov    eax,0x1
64004bab:	pop    ebx
64004bac:	ret    0x8
64004baf:	push   0x80070057
64004bb4:	call   0x64001040
64004bb9:	int3   
64004bba:	int3   
64004bbb:	int3   
64004bbc:	int3   
64004bbd:	int3   
64004bbe:	int3   
64004bbf:	int3   
64004bc0:	mov    edx,DWORD PTR [esp+0x4]
64004bc4:	push   esi
64004bc5:	mov    esi,ecx
64004bc7:	mov    eax,DWORD PTR [esi]
64004bc9:	mov    ecx,DWORD PTR [eax-0x10]
64004bcc:	sub    eax,0x10
64004bcf:	cmp    DWORD PTR [eax+0x8],edx
64004bd2:	jge    0x64004be9
64004bd4:	test   edx,edx
64004bd6:	jle    0x64004be9
64004bd8:	push   edi
64004bd9:	mov    edi,DWORD PTR [ecx]
64004bdb:	push   0x2
64004bdd:	push   edx
64004bde:	push   eax
64004bdf:	mov    eax,DWORD PTR [edi+0x8]
64004be2:	call   eax
64004be4:	test   eax,eax
64004be6:	pop    edi
64004be7:	jne    0x64004bee
64004be9:	call   0x64004330
64004bee:	add    eax,0x10
64004bf1:	mov    DWORD PTR [esi],eax
64004bf3:	pop    esi
64004bf4:	ret    0x4
64004bf7:	int3   
64004bf8:	int3   
64004bf9:	int3   
64004bfa:	int3   
64004bfb:	int3   
64004bfc:	int3   
64004bfd:	int3   
64004bfe:	int3   
64004bff:	int3   
64004c00:	push   ebp
64004c01:	mov    ebp,esp
64004c03:	and    esp,0xfffffff8
64004c06:	sub    esp,0x24
64004c09:	push   ebx
64004c0a:	push   esi
64004c0b:	push   edi
64004c0c:	mov    edi,ecx
64004c0e:	mov    eax,DWORD PTR [edi+0x4]
64004c11:	mov    esi,DWORD PTR [eax+0x4]
64004c14:	cmp    BYTE PTR [esi+0x45],0x0
64004c18:	mov    ecx,eax
64004c1a:	mov    al,0x1
64004c1c:	mov    DWORD PTR [esp+0x28],edi
64004c20:	mov    DWORD PTR [esp+0x10],ecx
64004c24:	mov    BYTE PTR [esp+0x18],al
64004c28:	jne    0x64004cc8
64004c2e:	mov    edx,DWORD PTR [ebp+0xc]
64004c31:	mov    eax,DWORD PTR [edx+0x14]
64004c34:	mov    ecx,DWORD PTR [edx+0x18]
64004c37:	mov    DWORD PTR [esp+0x20],eax
64004c3b:	mov    DWORD PTR [esp+0x1c],eax
64004c3f:	mov    DWORD PTR [esp+0x24],ecx
64004c43:	jmp    0x64004c4c
64004c45:	mov    edx,DWORD PTR [ebp+0xc]
64004c48:	mov    eax,DWORD PTR [esp+0x1c]
64004c4c:	cmp    DWORD PTR [esi+0x24],0x10
64004c50:	mov    ebx,DWORD PTR [esi+0x20]
64004c53:	mov    DWORD PTR [esp+0x10],esi
64004c57:	jb     0x64004c5e
64004c59:	mov    ecx,DWORD PTR [esi+0x10]
64004c5c:	jmp    0x64004c61
64004c5e:	lea    ecx,[esi+0x10]
64004c61:	mov    edi,DWORD PTR [esp+0x20]
64004c65:	cmp    eax,edi
64004c67:	mov    DWORD PTR [esp+0x14],ecx
64004c6b:	jae    0x64004c6f
64004c6d:	mov    edi,eax
64004c6f:	cmp    edi,ebx
64004c71:	mov    ecx,edi
64004c73:	jb     0x64004c77
64004c75:	mov    ecx,ebx
64004c77:	cmp    DWORD PTR [esp+0x24],0x10
64004c7c:	lea    eax,[edx+0x4]
64004c7f:	jb     0x64004c83
64004c81:	mov    eax,DWORD PTR [eax]
64004c83:	mov    edx,DWORD PTR [esp+0x14]
64004c87:	push   ecx
64004c88:	push   edx
64004c89:	push   eax
64004c8a:	call   0x64001270
64004c8f:	add    esp,0xc
64004c92:	test   eax,eax
64004c94:	jne    0x64004ca8
64004c96:	cmp    edi,ebx
64004c98:	jae    0x64004c9f
64004c9a:	or     eax,0xffffffff
64004c9d:	jmp    0x64004ca6
64004c9f:	xor    eax,eax
64004ca1:	cmp    edi,ebx
64004ca3:	setne  al
64004ca6:	test   eax,eax
64004ca8:	setl   al
64004cab:	test   al,al
64004cad:	mov    BYTE PTR [esp+0x18],al
64004cb1:	je     0x64004cb7
64004cb3:	mov    esi,DWORD PTR [esi]
64004cb5:	jmp    0x64004cba
64004cb7:	mov    esi,DWORD PTR [esi+0x8]
64004cba:	cmp    BYTE PTR [esi+0x45],0x0
64004cbe:	je     0x64004c45
64004cc0:	mov    edi,DWORD PTR [esp+0x28]
64004cc4:	mov    ecx,DWORD PTR [esp+0x10]
64004cc8:	test   al,al
64004cca:	mov    esi,ecx
64004ccc:	mov    DWORD PTR [esp+0x2c],esi
64004cd0:	mov    DWORD PTR [esp+0x28],edi
64004cd4:	je     0x64004d19
64004cd6:	mov    eax,DWORD PTR [edi+0x4]
64004cd9:	cmp    ecx,DWORD PTR [eax]
64004cdb:	jne    0x64004d0c
64004cdd:	mov    edx,DWORD PTR [ebp+0xc]
64004ce0:	push   edx
64004ce1:	push   ecx
64004ce2:	push   0x1
64004ce4:	lea    eax,[esp+0x34]
64004ce8:	push   eax
64004ce9:	mov    ecx,edi
64004ceb:	call   0x64004d90
64004cf0:	mov    ecx,eax
64004cf2:	mov    edx,DWORD PTR [ecx]
64004cf4:	mov    eax,DWORD PTR [ebp+0x8]
64004cf7:	mov    ecx,DWORD PTR [ecx+0x4]
64004cfa:	mov    DWORD PTR [eax+0x4],ecx
64004cfd:	mov    BYTE PTR [eax+0x8],0x1
64004d01:	mov    DWORD PTR [eax],edx
64004d03:	pop    edi
64004d04:	pop    esi
64004d05:	pop    ebx
64004d06:	mov    esp,ebp
64004d08:	pop    ebp
64004d09:	ret    0x8
64004d0c:	lea    ecx,[esp+0x28]
64004d10:	call   0x64006010
64004d15:	mov    esi,DWORD PTR [esp+0x2c]
64004d19:	mov    ebx,DWORD PTR [ebp+0xc]
64004d1c:	cmp    DWORD PTR [ebx+0x18],0x10
64004d20:	mov    edx,DWORD PTR [ebx+0x14]
64004d23:	lea    ecx,[esi+0xc]
64004d26:	jb     0x64004d2d
64004d28:	mov    eax,DWORD PTR [ebx+0x4]
64004d2b:	jmp    0x64004d30
64004d2d:	lea    eax,[ebx+0x4]
64004d30:	push   edx
64004d31:	mov    edx,DWORD PTR [ecx+0x14]
64004d34:	push   eax
64004d35:	push   edx
64004d36:	push   0x0
64004d38:	call   0x640034c0
64004d3d:	test   eax,eax
64004d3f:	jge    0x64004d74
64004d41:	mov    eax,DWORD PTR [esp+0x10]
64004d45:	mov    ecx,DWORD PTR [esp+0x18]
64004d49:	push   ebx
64004d4a:	push   eax
64004d4b:	push   ecx
64004d4c:	lea    edx,[esp+0x34]
64004d50:	push   edx
64004d51:	mov    ecx,edi
64004d53:	call   0x64004d90
64004d58:	mov    ecx,eax
64004d5a:	mov    edx,DWORD PTR [ecx]
64004d5c:	mov    eax,DWORD PTR [ebp+0x8]
64004d5f:	mov    ecx,DWORD PTR [ecx+0x4]
64004d62:	mov    DWORD PTR [eax+0x4],ecx
64004d65:	mov    BYTE PTR [eax+0x8],0x1
64004d69:	mov    DWORD PTR [eax],edx
64004d6b:	pop    edi
64004d6c:	pop    esi
64004d6d:	pop    ebx
64004d6e:	mov    esp,ebp
64004d70:	pop    ebp
64004d71:	ret    0x8
64004d74:	mov    eax,DWORD PTR [ebp+0x8]
64004d77:	mov    edx,DWORD PTR [esp+0x28]
64004d7b:	pop    edi
64004d7c:	mov    DWORD PTR [eax+0x4],esi
64004d7f:	pop    esi
64004d80:	mov    BYTE PTR [eax+0x8],0x0
64004d84:	mov    DWORD PTR [eax],edx
64004d86:	pop    ebx
64004d87:	mov    esp,ebp
64004d89:	pop    ebp
64004d8a:	ret    0x8
64004d8d:	int3   
64004d8e:	int3   
64004d8f:	int3   
64004d90:	push   ebp
64004d91:	mov    ebp,esp
64004d93:	and    esp,0xfffffff8
64004d96:	push   0xffffffff
64004d98:	push   0x64023578
64004d9d:	mov    eax,fs:0x0
64004da3:	push   eax
64004da4:	sub    esp,0x50
64004da7:	push   ebx
64004da8:	push   esi
64004da9:	push   edi
64004daa:	mov    eax,ds:0x64037644
64004daf:	xor    eax,esp
64004db1:	push   eax
64004db2:	lea    eax,[esp+0x60]
64004db6:	mov    fs:0x0,eax
64004dbc:	mov    edi,ecx
64004dbe:	xor    ebx,ebx
64004dc0:	cmp    DWORD PTR [edi+0x8],0x4924923
64004dc7:	jb     0x64004e12
64004dc9:	push   0x13
64004dcb:	push   0x64029934
64004dd0:	lea    ecx,[esp+0x20]
64004dd4:	mov    DWORD PTR [esp+0x38],0xf
64004ddc:	mov    DWORD PTR [esp+0x34],ebx
64004de0:	mov    BYTE PTR [esp+0x24],bl
64004de4:	call   0x640033f0
64004de9:	lea    eax,[esp+0x18]
64004ded:	push   eax
64004dee:	lea    ecx,[esp+0x38]
64004df2:	mov    DWORD PTR [esp+0x6c],ebx
64004df6:	call   0x64001310
64004dfb:	push   0x6402bd24
64004e00:	lea    ecx,[esp+0x38]
64004e04:	push   ecx
64004e05:	mov    DWORD PTR [esp+0x3c],0x640242e0
64004e0d:	call   0x64013832
64004e12:	mov    edx,DWORD PTR [ebp+0x14]
64004e15:	mov    eax,DWORD PTR [edi+0x4]
64004e18:	mov    esi,DWORD PTR [ebp+0x10]
64004e1b:	push   ebx
64004e1c:	push   edx
64004e1d:	push   eax
64004e1e:	push   esi
64004e1f:	push   eax
64004e20:	call   0x64005800
64004e25:	add    DWORD PTR [edi+0x8],0x1
64004e29:	mov    ecx,eax
64004e2b:	mov    eax,DWORD PTR [edi+0x4]
64004e2e:	cmp    esi,eax
64004e30:	mov    DWORD PTR [esp+0x14],ecx
64004e34:	jne    0x64004e46
64004e36:	mov    DWORD PTR [eax+0x4],ecx
64004e39:	mov    eax,DWORD PTR [edi+0x4]
64004e3c:	mov    DWORD PTR [eax],ecx
64004e3e:	mov    edx,DWORD PTR [edi+0x4]
64004e41:	mov    DWORD PTR [edx+0x8],ecx
64004e44:	jmp    0x64004e66
64004e46:	cmp    BYTE PTR [ebp+0xc],bl
64004e49:	je     0x64004e58
64004e4b:	mov    DWORD PTR [esi],ecx
64004e4d:	mov    eax,DWORD PTR [edi+0x4]
64004e50:	cmp    esi,DWORD PTR [eax]
64004e52:	jne    0x64004e66
64004e54:	mov    DWORD PTR [eax],ecx
64004e56:	jmp    0x64004e66
64004e58:	mov    DWORD PTR [esi+0x8],ecx
64004e5b:	mov    eax,DWORD PTR [edi+0x4]
64004e5e:	cmp    esi,DWORD PTR [eax+0x8]
64004e61:	jne    0x64004e66
64004e63:	mov    DWORD PTR [eax+0x8],ecx
64004e66:	mov    edx,DWORD PTR [ecx+0x4]
64004e69:	cmp    BYTE PTR [edx+0x44],bl
64004e6c:	lea    eax,[ecx+0x4]
64004e6f:	mov    esi,ecx
64004e71:	jne    0x64004fb2
64004e77:	mov    ecx,DWORD PTR [eax]
64004e79:	mov    edx,DWORD PTR [ecx+0x4]
64004e7c:	cmp    ecx,DWORD PTR [edx]
64004e7e:	jne    0x64004f25
64004e84:	mov    edx,DWORD PTR [edx+0x8]
64004e87:	cmp    BYTE PTR [edx+0x44],bl
64004e8a:	je     0x64004f2c
64004e90:	cmp    esi,DWORD PTR [ecx+0x8]
64004e93:	jne    0x64004ed0
64004e95:	mov    esi,ecx
64004e97:	mov    ecx,DWORD PTR [esi+0x8]
64004e9a:	mov    eax,DWORD PTR [ecx]
64004e9c:	mov    DWORD PTR [esi+0x8],eax
64004e9f:	mov    eax,DWORD PTR [ecx]
64004ea1:	cmp    BYTE PTR [eax+0x45],bl
64004ea4:	jne    0x64004ea9
64004ea6:	mov    DWORD PTR [eax+0x4],esi
64004ea9:	mov    edx,DWORD PTR [esi+0x4]
64004eac:	lea    eax,[esi+0x4]
64004eaf:	mov    DWORD PTR [ecx+0x4],edx
64004eb2:	mov    edx,DWORD PTR [edi+0x4]
64004eb5:	cmp    esi,DWORD PTR [edx+0x4]
64004eb8:	jne    0x64004ebf
64004eba:	mov    DWORD PTR [edx+0x4],ecx
64004ebd:	jmp    0x64004ecc
64004ebf:	mov    edx,DWORD PTR [eax]
64004ec1:	cmp    esi,DWORD PTR [edx]
64004ec3:	jne    0x64004ec9
64004ec5:	mov    DWORD PTR [edx],ecx
64004ec7:	jmp    0x64004ecc
64004ec9:	mov    DWORD PTR [edx+0x8],ecx
64004ecc:	mov    DWORD PTR [ecx],esi
64004ece:	mov    DWORD PTR [eax],ecx
64004ed0:	mov    ecx,DWORD PTR [eax]
64004ed2:	mov    BYTE PTR [ecx+0x44],0x1
64004ed6:	mov    edx,DWORD PTR [eax]
64004ed8:	mov    ecx,DWORD PTR [edx+0x4]
64004edb:	mov    BYTE PTR [ecx+0x44],bl
64004ede:	mov    edx,DWORD PTR [eax]
64004ee0:	mov    eax,DWORD PTR [edx+0x4]
64004ee3:	mov    ecx,DWORD PTR [eax]
64004ee5:	mov    edx,DWORD PTR [ecx+0x8]
64004ee8:	mov    DWORD PTR [eax],edx
64004eea:	mov    edx,DWORD PTR [ecx+0x8]
64004eed:	cmp    BYTE PTR [edx+0x45],bl
64004ef0:	jne    0x64004ef5
64004ef2:	mov    DWORD PTR [edx+0x4],eax
64004ef5:	mov    edx,DWORD PTR [eax+0x4]
64004ef8:	mov    DWORD PTR [ecx+0x4],edx
64004efb:	mov    edx,DWORD PTR [edi+0x4]
64004efe:	cmp    eax,DWORD PTR [edx+0x4]
64004f01:	jne    0x64004f0e
64004f03:	mov    DWORD PTR [edx+0x4],ecx
64004f06:	mov    DWORD PTR [ecx+0x8],eax
64004f09:	jmp    0x64004f9c
64004f0e:	mov    edx,DWORD PTR [eax+0x4]
64004f11:	cmp    eax,DWORD PTR [edx+0x8]
64004f14:	jne    0x64004f1e
64004f16:	mov    DWORD PTR [edx+0x8],ecx
64004f19:	mov    DWORD PTR [ecx+0x8],eax
64004f1c:	jmp    0x64004f9c
64004f1e:	mov    DWORD PTR [edx],ecx
64004f20:	mov    DWORD PTR [ecx+0x8],eax
64004f23:	jmp    0x64004f9c
64004f25:	mov    edx,DWORD PTR [edx]
64004f27:	cmp    BYTE PTR [edx+0x44],bl
64004f2a:	jne    0x64004f43
64004f2c:	mov    BYTE PTR [ecx+0x44],0x1
64004f30:	mov    BYTE PTR [edx+0x44],0x1
64004f34:	mov    edx,DWORD PTR [eax]
64004f36:	mov    ecx,DWORD PTR [edx+0x4]
64004f39:	mov    BYTE PTR [ecx+0x44],bl
64004f3c:	mov    edx,DWORD PTR [eax]
64004f3e:	mov    esi,DWORD PTR [edx+0x4]
64004f41:	jmp    0x64004f9f
64004f43:	cmp    esi,DWORD PTR [ecx]
64004f45:	jne    0x64004f51
64004f47:	mov    esi,ecx
64004f49:	push   esi
64004f4a:	mov    ecx,edi
64004f4c:	call   0x640057a0
64004f51:	mov    eax,DWORD PTR [esi+0x4]
64004f54:	mov    BYTE PTR [eax+0x44],0x1
64004f58:	mov    ecx,DWORD PTR [esi+0x4]
64004f5b:	mov    edx,DWORD PTR [ecx+0x4]
64004f5e:	mov    BYTE PTR [edx+0x44],bl
64004f61:	mov    eax,DWORD PTR [esi+0x4]
64004f64:	mov    eax,DWORD PTR [eax+0x4]
64004f67:	mov    ecx,DWORD PTR [eax+0x8]
64004f6a:	mov    edx,DWORD PTR [ecx]
64004f6c:	mov    DWORD PTR [eax+0x8],edx
64004f6f:	mov    edx,DWORD PTR [ecx]
64004f71:	cmp    BYTE PTR [edx+0x45],bl
64004f74:	jne    0x64004f79
64004f76:	mov    DWORD PTR [edx+0x4],eax
64004f79:	mov    edx,DWORD PTR [eax+0x4]
64004f7c:	mov    DWORD PTR [ecx+0x4],edx
64004f7f:	mov    edx,DWORD PTR [edi+0x4]
64004f82:	cmp    eax,DWORD PTR [edx+0x4]
64004f85:	jne    0x64004f8c
64004f87:	mov    DWORD PTR [edx+0x4],ecx
64004f8a:	jmp    0x64004f9a
64004f8c:	mov    edx,DWORD PTR [eax+0x4]
64004f8f:	cmp    eax,DWORD PTR [edx]
64004f91:	jne    0x64004f97
64004f93:	mov    DWORD PTR [edx],ecx
64004f95:	jmp    0x64004f9a
64004f97:	mov    DWORD PTR [edx+0x8],ecx
64004f9a:	mov    DWORD PTR [ecx],eax
64004f9c:	mov    DWORD PTR [eax+0x4],ecx
64004f9f:	mov    ecx,DWORD PTR [esi+0x4]
64004fa2:	cmp    BYTE PTR [ecx+0x44],bl
64004fa5:	lea    eax,[esi+0x4]
64004fa8:	je     0x64004e77
64004fae:	mov    ecx,DWORD PTR [esp+0x14]
64004fb2:	mov    edx,DWORD PTR [edi+0x4]
64004fb5:	mov    eax,DWORD PTR [edx+0x4]
64004fb8:	mov    BYTE PTR [eax+0x44],0x1
64004fbc:	mov    eax,DWORD PTR [ebp+0x8]
64004fbf:	mov    DWORD PTR [eax+0x4],ecx
64004fc2:	mov    DWORD PTR [eax],edi
64004fc4:	mov    ecx,DWORD PTR [esp+0x60]
64004fc8:	mov    DWORD PTR fs:0x0,ecx
64004fcf:	pop    ecx
64004fd0:	pop    edi
64004fd1:	pop    esi
64004fd2:	pop    ebx
64004fd3:	mov    esp,ebp
64004fd5:	pop    ebp
64004fd6:	ret    0x10
64004fd9:	int3   
64004fda:	int3   
64004fdb:	int3   
64004fdc:	int3   
64004fdd:	int3   
64004fde:	int3   
64004fdf:	int3   
64004fe0:	push   ecx
64004fe1:	mov    eax,DWORD PTR [ecx+0x4]
64004fe4:	push   esi
64004fe5:	mov    esi,DWORD PTR [eax+0x4]
64004fe8:	cmp    BYTE PTR [esi+0x45],0x0
64004fec:	mov    DWORD PTR [esp+0x4],eax
64004ff0:	jne    0x64005067
64004ff2:	mov    eax,DWORD PTR [esp+0xc]
64004ff6:	mov    ecx,DWORD PTR [eax+0x18]
64004ff9:	push   ebx
64004ffa:	mov    ebx,DWORD PTR [eax+0x14]
64004ffd:	push   ebp
64004ffe:	push   edi
64004fff:	mov    DWORD PTR [esp+0x18],ecx
64005003:	lea    ebp,[eax+0x4]
64005006:	cmp    DWORD PTR [esp+0x18],0x10
6400500b:	jb     0x64005012
6400500d:	mov    edx,DWORD PTR [ebp+0x0]
64005010:	jmp    0x64005014
64005012:	mov    edx,ebp
64005014:	mov    edi,DWORD PTR [esi+0x20]
64005017:	mov    eax,edi
64005019:	cmp    eax,edi
6400501b:	jae    0x6400501d
6400501d:	cmp    edi,ebx
6400501f:	mov    ecx,edi
64005021:	jb     0x64005025
64005023:	mov    ecx,ebx
64005025:	cmp    DWORD PTR [esi+0x24],0x10
64005029:	jb     0x64005030
6400502b:	mov    eax,DWORD PTR [esi+0x10]
6400502e:	jmp    0x64005033
64005030:	lea    eax,[esi+0x10]
64005033:	push   ecx
64005034:	push   edx
64005035:	push   eax
64005036:	call   0x64001270
6400503b:	add    esp,0xc
6400503e:	test   eax,eax
64005040:	jne    0x6400504d
64005042:	cmp    edi,ebx
64005044:	jb     0x6400504f
64005046:	cmp    edi,ebx
64005048:	setne  al
6400504b:	test   eax,eax
6400504d:	jge    0x64005054
6400504f:	mov    esi,DWORD PTR [esi+0x8]
64005052:	jmp    0x6400505a
64005054:	mov    DWORD PTR [esp+0x10],esi
64005058:	mov    esi,DWORD PTR [esi]
6400505a:	cmp    BYTE PTR [esi+0x45],0x0
6400505e:	je     0x64005006
64005060:	mov    eax,DWORD PTR [esp+0x10]
64005064:	pop    edi
64005065:	pop    ebp
64005066:	pop    ebx
64005067:	pop    esi
64005068:	pop    ecx
64005069:	ret    0x4
6400506c:	int3   
6400506d:	int3   
6400506e:	int3   
6400506f:	int3   
64005070:	sub    esp,0x8
64005073:	cmp    DWORD PTR [esi+0x14],ebx
64005076:	push   edi
64005077:	mov    edi,eax
64005079:	jae    0x64005080
6400507b:	call   0x64012f1b
64005080:	mov    eax,DWORD PTR [esi+0x14]
64005083:	sub    eax,ebx
64005085:	cmp    eax,edi
64005087:	jae    0x6400508b
64005089:	mov    edi,eax
6400508b:	test   edi,edi
6400508d:	jbe    0x640050f8
6400508f:	mov    ecx,DWORD PTR [esi+0x18]
64005092:	cmp    ecx,0x8
64005095:	push   ebp
64005096:	lea    ebp,[esi+0x4]
64005099:	jb     0x640050a4
6400509b:	mov    edx,DWORD PTR [ebp+0x0]
6400509e:	mov    DWORD PTR [esp+0x8],edx
640050a2:	jmp    0x640050a8
640050a4:	mov    DWORD PTR [esp+0x8],ebp
640050a8:	cmp    ecx,0x8
640050ab:	jb     0x640050b6
640050ad:	mov    edx,DWORD PTR [ebp+0x0]
640050b0:	mov    DWORD PTR [esp+0xc],edx
640050b4:	jmp    0x640050ba
640050b6:	mov    DWORD PTR [esp+0xc],ebp
640050ba:	mov    edx,DWORD PTR [esp+0x8]
640050be:	sub    eax,edi
640050c0:	add    eax,eax
640050c2:	push   eax
640050c3:	lea    eax,[ebx+edi*1]
640050c6:	lea    eax,[edx+eax*2]
640050c9:	sub    ecx,ebx
640050cb:	push   eax
640050cc:	add    ecx,ecx
640050ce:	push   ecx
640050cf:	mov    ecx,DWORD PTR [esp+0x18]
640050d3:	lea    edx,[ecx+ebx*2]
640050d6:	push   edx
640050d7:	call   0x640137d7
640050dc:	mov    eax,DWORD PTR [esi+0x14]
640050df:	sub    eax,edi
640050e1:	add    esp,0x10
640050e4:	cmp    DWORD PTR [esi+0x18],0x8
640050e8:	mov    DWORD PTR [esi+0x14],eax
640050eb:	jb     0x640050f0
640050ed:	mov    ebp,DWORD PTR [ebp+0x0]
640050f0:	mov    WORD PTR [ebp+eax*2+0x0],0x0
640050f7:	pop    ebp
640050f8:	mov    eax,esi
640050fa:	pop    edi
640050fb:	add    esp,0x8
640050fe:	ret    
640050ff:	int3   
64005100:	cmp    edi,0x7ffffffe
64005106:	push   esi
64005107:	mov    esi,eax
64005109:	jbe    0x64005110
6400510b:	call   0x64012edc
64005110:	mov    eax,DWORD PTR [esi+0x18]
64005113:	cmp    eax,edi
64005115:	jae    0x6400512c
64005117:	mov    eax,DWORD PTR [esi+0x14]
6400511a:	push   eax
6400511b:	push   edi
6400511c:	push   esi
6400511d:	call   0x640058a0
64005122:	xor    ecx,ecx
64005124:	cmp    ecx,edi
64005126:	sbb    eax,eax
64005128:	neg    eax
6400512a:	pop    esi
6400512b:	ret    
6400512c:	test   edi,edi
6400512e:	jne    0x64005150
64005130:	cmp    eax,0x8
64005133:	mov    DWORD PTR [esi+0x14],edi
64005136:	jb     0x64005148
64005138:	mov    esi,DWORD PTR [esi+0x4]
6400513b:	xor    ecx,ecx
6400513d:	cmp    ecx,edi
6400513f:	sbb    eax,eax
64005141:	mov    WORD PTR [esi],di
64005144:	neg    eax
64005146:	pop    esi
64005147:	ret    
64005148:	add    esi,0x4
6400514b:	mov    WORD PTR [esi],0x0
64005150:	xor    ecx,ecx
64005152:	cmp    ecx,edi
64005154:	sbb    eax,eax
64005156:	neg    eax
64005158:	pop    esi
64005159:	ret    
6400515a:	int3   
6400515b:	int3   
6400515c:	int3   
6400515d:	int3   
6400515e:	int3   
6400515f:	int3   
64005160:	sub    esp,0x18
64005163:	mov    ecx,DWORD PTR [esp+0x1c]
64005167:	mov    eax,DWORD PTR [ecx+0x4]
6400516a:	push   ebx
6400516b:	mov    ebx,DWORD PTR [esp+0x24]
6400516f:	push   ebp
64005170:	push   esi
64005171:	mov    esi,DWORD PTR [eax+0x4]
64005174:	cmp    BYTE PTR [esi+0x45],0x0
64005178:	mov    ebp,eax
6400517a:	mov    al,0x1
6400517c:	push   edi
6400517d:	mov    BYTE PTR [esp+0x10],al
64005181:	jne    0x64005243
64005187:	mov    eax,DWORD PTR [esp+0x34]
6400518b:	mov    ecx,DWORD PTR [eax+0x14]
6400518e:	mov    edx,DWORD PTR [eax+0x18]
64005191:	mov    DWORD PTR [esp+0x18],ecx
64005195:	mov    DWORD PTR [esp+0x14],ecx
64005199:	mov    DWORD PTR [esp+0x1c],edx
6400519d:	jmp    0x640051a4
6400519f:	nop
640051a0:	mov    ecx,DWORD PTR [esp+0x14]
640051a4:	cmp    DWORD PTR [esi+0x24],0x8
640051a8:	mov    ebp,DWORD PTR [esi+0x20]
640051ab:	mov    DWORD PTR [esp+0x20],esi
640051af:	jb     0x640051b6
640051b1:	mov    eax,DWORD PTR [esi+0x10]
640051b4:	jmp    0x640051b9
640051b6:	lea    eax,[esi+0x10]
640051b9:	mov    edi,DWORD PTR [esp+0x18]
640051bd:	cmp    ecx,edi
640051bf:	jae    0x640051c3
640051c1:	mov    edi,ecx
640051c3:	cmp    edi,ebp
640051c5:	mov    edx,edi
640051c7:	jb     0x640051cb
640051c9:	mov    edx,ebp
640051cb:	mov    ecx,DWORD PTR [esp+0x34]
640051cf:	add    ecx,0x4
640051d2:	cmp    DWORD PTR [esp+0x1c],0x8
640051d7:	jb     0x640051db
640051d9:	mov    ecx,DWORD PTR [ecx]
640051db:	test   edx,edx
640051dd:	jbe    0x640051f7
640051df:	nop
640051e0:	mov    bx,WORD PTR [ecx]
640051e3:	cmp    bx,WORD PTR [eax]
640051e6:	jne    0x64005200
640051e8:	add    ecx,0x2
640051eb:	add    eax,0x2
640051ee:	sub    edx,0x1
640051f1:	jne    0x640051e0
640051f3:	mov    ebx,DWORD PTR [esp+0x30]
640051f7:	cmp    edi,ebp
640051f9:	jae    0x64005216
640051fb:	or     eax,0xffffffff
640051fe:	jmp    0x6400521d
64005200:	mov    cx,bx
64005203:	cmp    cx,WORD PTR [eax]
64005206:	sbb    eax,eax
64005208:	and    eax,0xfffffffe
6400520b:	add    eax,0x1
6400520e:	je     0x640051f3
64005210:	mov    ebx,DWORD PTR [esp+0x30]
64005214:	jmp    0x6400521d
64005216:	xor    eax,eax
64005218:	cmp    edi,ebp
6400521a:	setne  al
6400521d:	test   eax,eax
6400521f:	setl   al
64005222:	test   al,al
64005224:	mov    BYTE PTR [esp+0x10],al
64005228:	je     0x6400522e
6400522a:	mov    esi,DWORD PTR [esi]
6400522c:	jmp    0x64005231
6400522e:	mov    esi,DWORD PTR [esi+0x8]
64005231:	cmp    BYTE PTR [esi+0x45],0x0
64005235:	je     0x640051a0
6400523b:	mov    ebp,DWORD PTR [esp+0x20]
6400523f:	mov    ecx,DWORD PTR [esp+0x2c]
64005243:	test   al,al
64005245:	mov    esi,ebp
64005247:	mov    DWORD PTR [esp+0x24],esi
6400524b:	mov    DWORD PTR [esp+0x20],ecx
6400524f:	je     0x64005293
64005251:	mov    edx,DWORD PTR [ecx+0x4]
64005254:	cmp    ebp,DWORD PTR [edx]
64005256:	jne    0x64005286
64005258:	mov    eax,DWORD PTR [esp+0x34]
6400525c:	push   eax
6400525d:	push   0x1
6400525f:	lea    edx,[esp+0x28]
64005263:	push   edx
64005264:	push   ecx
64005265:	mov    ecx,ebp
64005267:	call   0x640052f0
6400526c:	mov    ecx,DWORD PTR [eax]
6400526e:	mov    edx,DWORD PTR [eax+0x4]
64005271:	mov    DWORD PTR [ebx],ecx
64005273:	mov    DWORD PTR [ebx+0x4],edx
64005276:	mov    BYTE PTR [ebx+0x8],0x1
6400527a:	mov    eax,ebx
6400527c:	pop    edi
6400527d:	pop    esi
6400527e:	pop    ebp
6400527f:	pop    ebx
64005280:	add    esp,0x18
64005283:	ret    0xc
64005286:	lea    esi,[esp+0x20]
6400528a:	call   0x640064a0
6400528f:	mov    esi,DWORD PTR [esp+0x24]
64005293:	mov    eax,DWORD PTR [esp+0x34]
64005297:	cmp    DWORD PTR [eax+0x18],0x8
6400529b:	mov    edi,DWORD PTR [eax+0x14]
6400529e:	lea    ecx,[esi+0xc]
640052a1:	jb     0x640052a8
640052a3:	mov    eax,DWORD PTR [eax+0x4]
640052a6:	jmp    0x640052ab
640052a8:	add    eax,0x4
640052ab:	push   eax
640052ac:	mov    eax,DWORD PTR [ecx+0x14]
640052af:	call   0x640068f0
640052b4:	test   eax,eax
640052b6:	jge    0x640052ce
640052b8:	mov    eax,DWORD PTR [esp+0x34]
640052bc:	mov    ecx,DWORD PTR [esp+0x10]
640052c0:	push   eax
640052c1:	mov    eax,DWORD PTR [esp+0x30]
640052c5:	push   ecx
640052c6:	lea    edx,[esp+0x28]
640052ca:	push   edx
640052cb:	push   eax
640052cc:	jmp    0x64005265
640052ce:	mov    eax,DWORD PTR [esp+0x20]
640052d2:	pop    edi
640052d3:	mov    DWORD PTR [ebx+0x4],esi
640052d6:	pop    esi
640052d7:	mov    DWORD PTR [ebx],eax
640052d9:	pop    ebp
640052da:	mov    BYTE PTR [ebx+0x8],0x0
640052de:	mov    eax,ebx
640052e0:	pop    ebx
640052e1:	add    esp,0x18
640052e4:	ret    0xc
640052e7:	int3   
640052e8:	int3   
640052e9:	int3   
640052ea:	int3   
640052eb:	int3   
640052ec:	int3   
640052ed:	int3   
640052ee:	int3   
640052ef:	int3   
640052f0:	push   0xffffffff
640052f2:	push   0x64023548
640052f7:	mov    eax,fs:0x0
640052fd:	push   eax
640052fe:	sub    esp,0x44
64005301:	push   ebx
64005302:	push   ebp
64005303:	push   esi
64005304:	push   edi
64005305:	mov    eax,ds:0x64037644
6400530a:	xor    eax,esp
6400530c:	push   eax
6400530d:	lea    eax,[esp+0x58]
64005311:	mov    fs:0x0,eax
64005317:	mov    esi,ecx
64005319:	mov    ebp,DWORD PTR [esp+0x68]
6400531d:	cmp    DWORD PTR [ebp+0x8],0x4924923
64005324:	jb     0x64005371
64005326:	push   0x13
64005328:	xor    ebx,ebx
6400532a:	push   0x64029934
6400532f:	lea    ecx,[esp+0x1c]
64005333:	mov    DWORD PTR [esp+0x34],0xf
6400533b:	mov    DWORD PTR [esp+0x30],ebx
6400533f:	mov    BYTE PTR [esp+0x20],bl
64005343:	call   0x640033f0
64005348:	lea    eax,[esp+0x14]
6400534c:	push   eax
6400534d:	lea    ecx,[esp+0x34]
64005351:	mov    DWORD PTR [esp+0x64],ebx
64005355:	call   0x64001310
6400535a:	push   0x6402bd24
6400535f:	lea    ecx,[esp+0x34]
64005363:	push   ecx
64005364:	mov    DWORD PTR [esp+0x38],0x640242e0
6400536c:	call   0x64013832
64005371:	mov    edx,DWORD PTR [esp+0x74]
64005375:	mov    eax,DWORD PTR [ebp+0x4]
64005378:	push   edx
64005379:	push   eax
6400537a:	push   esi
6400537b:	push   eax
6400537c:	call   0x64005c10
64005381:	mov    ecx,DWORD PTR [ebp+0x4]
64005384:	mov    edx,eax
64005386:	mov    eax,0x1
6400538b:	add    DWORD PTR [ebp+0x8],eax
6400538e:	xor    ebx,ebx
64005390:	cmp    esi,ecx
64005392:	mov    DWORD PTR [esp+0x68],edx
64005396:	jne    0x640053a5
64005398:	mov    DWORD PTR [ecx+0x4],edx
6400539b:	mov    ecx,DWORD PTR [ebp+0x4]
6400539e:	mov    DWORD PTR [ecx],edx
640053a0:	mov    ecx,DWORD PTR [ebp+0x4]
640053a3:	jmp    0x640053c3
640053a5:	cmp    BYTE PTR [esp+0x70],bl
640053a9:	je     0x640053b8
640053ab:	mov    DWORD PTR [esi],edx
640053ad:	mov    ecx,DWORD PTR [ebp+0x4]
640053b0:	cmp    esi,DWORD PTR [ecx]
640053b2:	jne    0x640053c6
640053b4:	mov    DWORD PTR [ecx],edx
640053b6:	jmp    0x640053c6
640053b8:	mov    DWORD PTR [esi+0x8],edx
640053bb:	mov    ecx,DWORD PTR [ebp+0x4]
640053be:	cmp    esi,DWORD PTR [ecx+0x8]
640053c1:	jne    0x640053c6
640053c3:	mov    DWORD PTR [ecx+0x8],edx
640053c6:	mov    esi,DWORD PTR [edx+0x4]
640053c9:	cmp    BYTE PTR [esi+0x44],bl
640053cc:	lea    ecx,[edx+0x4]
640053cf:	jne    0x64005547
640053d5:	mov    esi,DWORD PTR [ecx]
640053d7:	mov    edi,DWORD PTR [esi+0x4]
640053da:	cmp    esi,DWORD PTR [edi]
640053dc:	jne    0x64005488
640053e2:	mov    edi,DWORD PTR [edi+0x8]
640053e5:	cmp    BYTE PTR [edi+0x44],bl
640053e8:	je     0x6400548f
640053ee:	cmp    edx,DWORD PTR [esi+0x8]
640053f1:	jne    0x6400542e
640053f3:	mov    edx,esi
640053f5:	mov    esi,DWORD PTR [edx+0x8]
640053f8:	mov    ecx,DWORD PTR [esi]
640053fa:	mov    DWORD PTR [edx+0x8],ecx
640053fd:	mov    ecx,DWORD PTR [esi]
640053ff:	cmp    BYTE PTR [ecx+0x45],bl
64005402:	jne    0x64005407
64005404:	mov    DWORD PTR [ecx+0x4],edx
64005407:	mov    edi,DWORD PTR [edx+0x4]
6400540a:	lea    ecx,[edx+0x4]
6400540d:	mov    DWORD PTR [esi+0x4],edi
64005410:	mov    edi,DWORD PTR [ebp+0x4]
64005413:	cmp    edx,DWORD PTR [edi+0x4]
64005416:	jne    0x6400541d
64005418:	mov    DWORD PTR [edi+0x4],esi
6400541b:	jmp    0x6400542a
6400541d:	mov    edi,DWORD PTR [ecx]
6400541f:	cmp    edx,DWORD PTR [edi]
64005421:	jne    0x64005427
64005423:	mov    DWORD PTR [edi],esi
64005425:	jmp    0x6400542a
64005427:	mov    DWORD PTR [edi+0x8],esi
6400542a:	mov    DWORD PTR [esi],edx
6400542c:	mov    DWORD PTR [ecx],esi
6400542e:	mov    esi,DWORD PTR [ecx]
64005430:	mov    BYTE PTR [esi+0x44],al
64005433:	mov    esi,DWORD PTR [ecx]
64005435:	mov    esi,DWORD PTR [esi+0x4]
64005438:	mov    BYTE PTR [esi+0x44],bl
6400543b:	mov    ecx,DWORD PTR [ecx]
6400543d:	mov    ecx,DWORD PTR [ecx+0x4]
64005440:	mov    esi,DWORD PTR [ecx]
64005442:	mov    edi,DWORD PTR [esi+0x8]
64005445:	mov    DWORD PTR [ecx],edi
64005447:	mov    edi,DWORD PTR [esi+0x8]
6400544a:	cmp    BYTE PTR [edi+0x45],bl
6400544d:	jne    0x64005452
6400544f:	mov    DWORD PTR [edi+0x4],ecx
64005452:	mov    edi,DWORD PTR [ecx+0x4]
64005455:	mov    DWORD PTR [esi+0x4],edi
64005458:	mov    edi,DWORD PTR [ebp+0x4]
6400545b:	cmp    ecx,DWORD PTR [edi+0x4]
6400545e:	jne    0x6400546b
64005460:	mov    DWORD PTR [edi+0x4],esi
64005463:	mov    DWORD PTR [esi+0x8],ecx
64005466:	jmp    0x64005531
6400546b:	mov    edi,DWORD PTR [ecx+0x4]
6400546e:	cmp    ecx,DWORD PTR [edi+0x8]
64005471:	jne    0x6400547e
64005473:	mov    DWORD PTR [edi+0x8],esi
64005476:	mov    DWORD PTR [esi+0x8],ecx
64005479:	jmp    0x64005531
6400547e:	mov    DWORD PTR [edi],esi
64005480:	mov    DWORD PTR [esi+0x8],ecx
64005483:	jmp    0x64005531
64005488:	mov    edi,DWORD PTR [edi]
6400548a:	cmp    BYTE PTR [edi+0x44],bl
6400548d:	jne    0x640054a9
6400548f:	mov    edx,esi
64005491:	mov    BYTE PTR [edx+0x44],al
64005494:	mov    BYTE PTR [edi+0x44],al
64005497:	mov    edx,DWORD PTR [ecx]
64005499:	mov    edx,DWORD PTR [edx+0x4]
6400549c:	mov    BYTE PTR [edx+0x44],bl
6400549f:	mov    ecx,DWORD PTR [ecx]
640054a1:	mov    edx,DWORD PTR [ecx+0x4]
640054a4:	jmp    0x64005534
640054a9:	cmp    edx,DWORD PTR [esi]
640054ab:	jne    0x640054ea
640054ad:	mov    edx,esi
640054af:	mov    esi,DWORD PTR [edx]
640054b1:	mov    ecx,DWORD PTR [esi+0x8]
640054b4:	mov    DWORD PTR [edx],ecx
640054b6:	mov    ecx,DWORD PTR [esi+0x8]
640054b9:	cmp    BYTE PTR [ecx+0x45],bl
640054bc:	jne    0x640054c1
640054be:	mov    DWORD PTR [ecx+0x4],edx
640054c1:	mov    edi,DWORD PTR [edx+0x4]
640054c4:	lea    ecx,[edx+0x4]
640054c7:	mov    DWORD PTR [esi+0x4],edi
640054ca:	mov    edi,DWORD PTR [ebp+0x4]
640054cd:	cmp    edx,DWORD PTR [edi+0x4]
640054d0:	jne    0x640054d7
640054d2:	mov    DWORD PTR [edi+0x4],esi
640054d5:	jmp    0x640054e5
640054d7:	mov    edi,DWORD PTR [ecx]
640054d9:	cmp    edx,DWORD PTR [edi+0x8]
640054dc:	jne    0x640054e3
640054de:	mov    DWORD PTR [edi+0x8],esi
640054e1:	jmp    0x640054e5
640054e3:	mov    DWORD PTR [edi],esi
640054e5:	mov    DWORD PTR [esi+0x8],edx
640054e8:	mov    DWORD PTR [ecx],esi
640054ea:	mov    esi,DWORD PTR [ecx]
640054ec:	mov    BYTE PTR [esi+0x44],al
640054ef:	mov    esi,DWORD PTR [ecx]
640054f1:	mov    esi,DWORD PTR [esi+0x4]
640054f4:	mov    BYTE PTR [esi+0x44],bl
640054f7:	mov    ecx,DWORD PTR [ecx]
640054f9:	mov    ecx,DWORD PTR [ecx+0x4]
640054fc:	mov    esi,DWORD PTR [ecx+0x8]
640054ff:	mov    edi,DWORD PTR [esi]
64005501:	mov    DWORD PTR [ecx+0x8],edi
64005504:	mov    edi,DWORD PTR [esi]
64005506:	cmp    BYTE PTR [edi+0x45],bl
64005509:	jne    0x6400550e
6400550b:	mov    DWORD PTR [edi+0x4],ecx
6400550e:	mov    edi,DWORD PTR [ecx+0x4]
64005511:	mov    DWORD PTR [esi+0x4],edi
64005514:	mov    edi,DWORD PTR [ebp+0x4]
64005517:	cmp    ecx,DWORD PTR [edi+0x4]
6400551a:	jne    0x64005521
6400551c:	mov    DWORD PTR [edi+0x4],esi
6400551f:	jmp    0x6400552f
64005521:	mov    edi,DWORD PTR [ecx+0x4]
64005524:	cmp    ecx,DWORD PTR [edi]
64005526:	jne    0x6400552c
64005528:	mov    DWORD PTR [edi],esi
6400552a:	jmp    0x6400552f
6400552c:	mov    DWORD PTR [edi+0x8],esi
6400552f:	mov    DWORD PTR [esi],ecx
64005531:	mov    DWORD PTR [ecx+0x4],esi
64005534:	mov    esi,DWORD PTR [edx+0x4]
64005537:	cmp    BYTE PTR [esi+0x44],bl
6400553a:	lea    ecx,[edx+0x4]
6400553d:	je     0x640053d5
64005543:	mov    edx,DWORD PTR [esp+0x68]
64005547:	mov    ecx,DWORD PTR [ebp+0x4]
6400554a:	mov    ecx,DWORD PTR [ecx+0x4]
6400554d:	mov    BYTE PTR [ecx+0x44],al
64005550:	mov    ecx,DWORD PTR [esp+0x6c]
64005554:	mov    DWORD PTR [ecx+0x4],edx
64005557:	mov    DWORD PTR [ecx],ebp
64005559:	mov    eax,ecx
6400555b:	mov    ecx,DWORD PTR [esp+0x58]
6400555f:	mov    DWORD PTR fs:0x0,ecx
64005566:	pop    ecx
64005567:	pop    edi
64005568:	pop    esi
64005569:	pop    ebp
6400556a:	pop    ebx
6400556b:	add    esp,0x50
6400556e:	ret    0x10
64005571:	int3   
64005572:	int3   
64005573:	int3   
64005574:	int3   
64005575:	int3   
64005576:	int3   
64005577:	int3   
64005578:	int3   
64005579:	int3   
6400557a:	int3   
6400557b:	int3   
6400557c:	int3   
6400557d:	int3   
6400557e:	int3   
6400557f:	int3   
64005580:	sub    esp,0xc
64005583:	mov    eax,DWORD PTR [eax+0x4]
64005586:	push   edi
64005587:	mov    edi,DWORD PTR [eax+0x4]
6400558a:	cmp    BYTE PTR [edi+0x45],0x0
6400558e:	mov    DWORD PTR [esp+0x4],eax
64005592:	jne    0x6400562f
64005598:	mov    edx,DWORD PTR [ecx+0x18]
6400559b:	push   ebx
6400559c:	push   ebp
6400559d:	mov    ebp,DWORD PTR [ecx+0x14]
640055a0:	add    ecx,0x4
640055a3:	push   esi
640055a4:	mov    DWORD PTR [esp+0x18],edx
640055a8:	mov    DWORD PTR [esp+0x14],ecx
640055ac:	jmp    0x640055b4
640055ae:	mov    edi,edi
640055b0:	mov    ecx,DWORD PTR [esp+0x14]
640055b4:	mov    eax,0x8
640055b9:	cmp    DWORD PTR [esp+0x18],eax
640055bd:	jb     0x640055c1
640055bf:	mov    ecx,DWORD PTR [ecx]
640055c1:	mov    ebx,DWORD PTR [edi+0x20]
640055c4:	mov    edx,ebx
640055c6:	cmp    edx,ebx
640055c8:	jae    0x640055ca
640055ca:	cmp    ebx,ebp
640055cc:	mov    esi,ebx
640055ce:	jb     0x640055d2
640055d0:	mov    esi,ebp
640055d2:	cmp    DWORD PTR [edi+0x24],eax
640055d5:	jb     0x640055dc
640055d7:	mov    edx,DWORD PTR [edi+0x10]
640055da:	jmp    0x640055df
640055dc:	lea    edx,[edi+0x10]
640055df:	test   esi,esi
640055e1:	jbe    0x64005608
640055e3:	mov    ax,WORD PTR [edx]
640055e6:	cmp    ax,WORD PTR [ecx]
640055e9:	jne    0x640055f8
640055eb:	add    edx,0x2
640055ee:	add    ecx,0x2
640055f1:	sub    esi,0x1
640055f4:	jne    0x640055e3
640055f6:	jmp    0x64005608
640055f8:	mov    dx,ax
640055fb:	cmp    dx,WORD PTR [ecx]
640055fe:	sbb    ecx,ecx
64005600:	and    ecx,0xfffffffe
64005603:	add    ecx,0x1
64005606:	jne    0x64005613
64005608:	cmp    ebx,ebp
6400560a:	jb     0x64005617
6400560c:	xor    ecx,ecx
6400560e:	cmp    ebx,ebp
64005610:	setne  cl
64005613:	test   ecx,ecx
64005615:	jge    0x6400561c
64005617:	mov    edi,DWORD PTR [edi+0x8]
6400561a:	jmp    0x64005622
6400561c:	mov    DWORD PTR [esp+0x10],edi
64005620:	mov    edi,DWORD PTR [edi]
64005622:	cmp    BYTE PTR [edi+0x45],0x0
64005626:	je     0x640055b0
64005628:	mov    eax,DWORD PTR [esp+0x10]
6400562c:	pop    esi
6400562d:	pop    ebp
6400562e:	pop    ebx
6400562f:	pop    edi
64005630:	add    esp,0xc
64005633:	ret    
64005634:	int3   
64005635:	int3   
64005636:	int3   
64005637:	int3   
64005638:	int3   
64005639:	int3   
6400563a:	int3   
6400563b:	int3   
6400563c:	int3   
6400563d:	int3   
6400563e:	int3   
6400563f:	int3   
64005640:	push   ebp
64005641:	mov    ebp,esp
64005643:	and    esp,0xfffffff8
64005646:	sub    esp,0x14
64005649:	push   ebx
6400564a:	push   esi
6400564b:	push   edi
6400564c:	mov    edi,ecx
6400564e:	mov    eax,DWORD PTR [edi+0x4]
64005651:	mov    ebx,DWORD PTR [eax]
64005653:	mov    eax,DWORD PTR [ebp+0xc]
64005656:	test   eax,eax
64005658:	je     0x6400565e
6400565a:	cmp    eax,edi
6400565c:	je     0x64005663
6400565e:	call   0x64013e36
64005663:	mov    esi,DWORD PTR [ebp+0x10]
64005666:	cmp    esi,ebx
64005668:	jne    0x640056c0
6400566a:	mov    eax,DWORD PTR [ebp+0x14]
6400566d:	test   eax,eax
6400566f:	mov    ebx,DWORD PTR [edi+0x4]
64005672:	je     0x64005678
64005674:	cmp    eax,edi
64005676:	je     0x6400567d
64005678:	call   0x64013e36
6400567d:	cmp    DWORD PTR [ebp+0x18],ebx
64005680:	jne    0x640056c0
64005682:	mov    ecx,DWORD PTR [edi+0x4]
64005685:	mov    edx,DWORD PTR [ecx+0x4]
64005688:	push   edx
64005689:	mov    ecx,edi
6400568b:	call   0x64006690
64005690:	mov    eax,DWORD PTR [edi+0x4]
64005693:	mov    DWORD PTR [eax+0x4],eax
64005696:	mov    eax,DWORD PTR [edi+0x4]
64005699:	mov    DWORD PTR [edi+0x8],0x0
640056a0:	mov    DWORD PTR [eax],eax
640056a2:	mov    eax,DWORD PTR [edi+0x4]
640056a5:	mov    DWORD PTR [eax+0x8],eax
640056a8:	mov    eax,DWORD PTR [edi+0x4]
640056ab:	mov    ecx,DWORD PTR [eax]
640056ad:	mov    eax,DWORD PTR [ebp+0x8]
640056b0:	mov    DWORD PTR [eax+0x4],ecx
640056b3:	mov    DWORD PTR [eax],edi
640056b5:	pop    edi
640056b6:	pop    esi
640056b7:	pop    ebx
640056b8:	mov    esp,ebp
640056ba:	pop    ebp
640056bb:	ret    0x14
640056be:	mov    edi,edi
640056c0:	mov    ebx,DWORD PTR [ebp+0xc]
640056c3:	test   ebx,ebx
640056c5:	je     0x640056cc
640056c7:	cmp    ebx,DWORD PTR [ebp+0x14]
640056ca:	je     0x640056d1
640056cc:	call   0x64013e36
640056d1:	cmp    esi,DWORD PTR [ebp+0x18]
640056d4:	je     0x6400573e
640056d6:	test   ebx,ebx
640056d8:	mov    DWORD PTR [esp+0x14],esi
640056dc:	jne    0x640056e3
640056de:	call   0x64013e36
640056e3:	cmp    BYTE PTR [esi+0x45],0x0
640056e7:	je     0x640056f0
640056e9:	call   0x64013e36
640056ee:	jmp    0x6400572a
640056f0:	mov    eax,DWORD PTR [esi+0x8]
640056f3:	cmp    BYTE PTR [eax+0x45],0x0
640056f7:	jne    0x6400570f
640056f9:	mov    esi,eax
640056fb:	mov    eax,DWORD PTR [esi]
640056fd:	cmp    BYTE PTR [eax+0x45],0x0
64005701:	jne    0x6400572a
64005703:	mov    esi,eax
64005705:	mov    eax,DWORD PTR [esi]
64005707:	cmp    BYTE PTR [eax+0x45],0x0
6400570b:	je     0x64005703
6400570d:	jmp    0x6400572a
6400570f:	mov    eax,DWORD PTR [esi+0x4]
64005712:	cmp    BYTE PTR [eax+0x45],0x0
64005716:	jne    0x64005728
64005718:	cmp    esi,DWORD PTR [eax+0x8]
6400571b:	jne    0x64005728
6400571d:	mov    esi,eax
6400571f:	mov    eax,DWORD PTR [eax+0x4]
64005722:	cmp    BYTE PTR [eax+0x45],0x0
64005726:	je     0x64005718
64005728:	mov    esi,eax
6400572a:	mov    edx,DWORD PTR [esp+0x14]
6400572e:	push   edx
6400572f:	push   ebx
64005730:	lea    eax,[esp+0x20]
64005734:	push   eax
64005735:	mov    ecx,edi
64005737:	call   0x64005cb0
6400573c:	jmp    0x640056c0
6400573e:	mov    eax,DWORD PTR [ebp+0x8]
64005741:	pop    edi
64005742:	mov    DWORD PTR [eax+0x4],esi
64005745:	pop    esi
64005746:	mov    DWORD PTR [eax],ebx
64005748:	pop    ebx
64005749:	mov    esp,ebp
6400574b:	pop    ebp
6400574c:	ret    0x14
6400574f:	int3   
64005750:	mov    edx,DWORD PTR [esp+0x4]
64005754:	mov    eax,DWORD PTR [edx+0x8]
64005757:	push   esi
64005758:	mov    esi,DWORD PTR [eax]
6400575a:	mov    DWORD PTR [edx+0x8],esi
6400575d:	mov    esi,DWORD PTR [eax]
6400575f:	cmp    BYTE PTR [esi+0x45],0x0
64005763:	jne    0x64005768
64005765:	mov    DWORD PTR [esi+0x4],edx
64005768:	mov    esi,DWORD PTR [edx+0x4]
6400576b:	mov    DWORD PTR [eax+0x4],esi
6400576e:	mov    ecx,DWORD PTR [ecx+0x4]
64005771:	cmp    edx,DWORD PTR [ecx+0x4]
64005774:	pop    esi
64005775:	jne    0x64005782
64005777:	mov    DWORD PTR [ecx+0x4],eax
6400577a:	mov    DWORD PTR [eax],edx
6400577c:	mov    DWORD PTR [edx+0x4],eax
6400577f:	ret    0x4
64005782:	mov    ecx,DWORD PTR [edx+0x4]
64005785:	cmp    edx,DWORD PTR [ecx]
64005787:	jne    0x64005793
64005789:	mov    DWORD PTR [ecx],eax
6400578b:	mov    DWORD PTR [eax],edx
6400578d:	mov    DWORD PTR [edx+0x4],eax
64005790:	ret    0x4
64005793:	mov    DWORD PTR [ecx+0x8],eax
64005796:	mov    DWORD PTR [eax],edx
64005798:	mov    DWORD PTR [edx+0x4],eax
6400579b:	ret    0x4
6400579e:	int3   
6400579f:	int3   
640057a0:	mov    edx,DWORD PTR [esp+0x4]
640057a4:	mov    eax,DWORD PTR [edx]
640057a6:	push   esi
640057a7:	mov    esi,DWORD PTR [eax+0x8]
640057aa:	mov    DWORD PTR [edx],esi
640057ac:	mov    esi,DWORD PTR [eax+0x8]
640057af:	cmp    BYTE PTR [esi+0x45],0x0
640057b3:	jne    0x640057b8
640057b5:	mov    DWORD PTR [esi+0x4],edx
640057b8:	mov    esi,DWORD PTR [edx+0x4]
640057bb:	mov    DWORD PTR [eax+0x4],esi
640057be:	mov    ecx,DWORD PTR [ecx+0x4]
640057c1:	cmp    edx,DWORD PTR [ecx+0x4]
640057c4:	pop    esi
640057c5:	jne    0x640057d3
640057c7:	mov    DWORD PTR [ecx+0x4],eax
640057ca:	mov    DWORD PTR [eax+0x8],edx
640057cd:	mov    DWORD PTR [edx+0x4],eax
640057d0:	ret    0x4
640057d3:	mov    ecx,DWORD PTR [edx+0x4]
640057d6:	cmp    edx,DWORD PTR [ecx+0x8]
640057d9:	jne    0x640057e7
640057db:	mov    DWORD PTR [ecx+0x8],eax
640057de:	mov    DWORD PTR [eax+0x8],edx
640057e1:	mov    DWORD PTR [edx+0x4],eax
640057e4:	ret    0x4
640057e7:	mov    DWORD PTR [ecx],eax
640057e9:	mov    DWORD PTR [eax+0x8],edx
640057ec:	mov    DWORD PTR [edx+0x4],eax
640057ef:	ret    0x4
640057f2:	int3   
640057f3:	int3   
640057f4:	int3   
640057f5:	int3   
640057f6:	int3   
640057f7:	int3   
640057f8:	int3   
640057f9:	int3   
640057fa:	int3   
640057fb:	int3   
640057fc:	int3   
640057fd:	int3   
640057fe:	int3   
640057ff:	int3   
64005800:	push   ebp
64005801:	mov    ebp,esp
64005803:	push   0xffffffff
64005805:	push   0x640231c1
6400580a:	mov    eax,fs:0x0
64005810:	push   eax
64005811:	sub    esp,0xc
64005814:	push   ebx
64005815:	push   esi
64005816:	push   edi
64005817:	mov    eax,ds:0x64037644
6400581c:	xor    eax,ebp
6400581e:	push   eax
6400581f:	lea    eax,[ebp-0xc]
64005822:	mov    fs:0x0,eax
64005828:	mov    DWORD PTR [ebp-0x10],esp
6400582b:	push   0x48
6400582d:	call   0x64013895
64005832:	mov    esi,eax
64005834:	mov    DWORD PTR [ebp-0x4],0x0
6400583b:	add    esp,0x4
6400583e:	mov    DWORD PTR [ebp-0x14],esi
64005841:	mov    DWORD PTR [ebp-0x18],esi
64005844:	test   esi,esi
64005846:	mov    BYTE PTR [ebp-0x4],0x1
6400584a:	je     0x64005873
6400584c:	mov    eax,DWORD PTR [ebp+0x8]
6400584f:	mov    ecx,DWORD PTR [ebp+0xc]
64005852:	mov    edx,DWORD PTR [ebp+0x10]
64005855:	mov    DWORD PTR [esi],eax
64005857:	mov    eax,DWORD PTR [ebp+0x14]
6400585a:	mov    DWORD PTR [esi+0x4],ecx
6400585d:	push   eax
6400585e:	lea    ecx,[esi+0xc]
64005861:	mov    DWORD PTR [esi+0x8],edx
64005864:	call   0x64006590
64005869:	mov    cl,BYTE PTR [ebp+0x18]
6400586c:	mov    BYTE PTR [esi+0x44],cl
6400586f:	mov    BYTE PTR [esi+0x45],0x0
64005873:	mov    eax,esi
64005875:	mov    ecx,DWORD PTR [ebp-0xc]
64005878:	mov    DWORD PTR fs:0x0,ecx
6400587f:	pop    ecx
64005880:	pop    edi
64005881:	pop    esi
64005882:	pop    ebx
64005883:	mov    esp,ebp
64005885:	pop    ebp
64005886:	ret    0x14
64005889:	mov    edx,DWORD PTR [ebp-0x14]
6400588c:	push   edx
6400588d:	call   0x64013604
64005892:	add    esp,0x4
64005895:	push   0x0
64005897:	push   0x0
64005899:	call   0x64013832
6400589e:	int3   
6400589f:	int3   
640058a0:	push   ebp
640058a1:	mov    ebp,esp
640058a3:	push   0xffffffff
640058a5:	push   0x64022fc0
640058aa:	mov    eax,fs:0x0
640058b0:	push   eax
640058b1:	sub    esp,0x18
640058b4:	push   ebx
640058b5:	push   esi
640058b6:	push   edi
640058b7:	mov    eax,ds:0x64037644
640058bc:	xor    eax,ebp
640058be:	push   eax
640058bf:	lea    eax,[ebp-0xc]
640058c2:	mov    fs:0x0,eax
640058c8:	mov    DWORD PTR [ebp-0x10],esp
640058cb:	mov    eax,DWORD PTR [ebp+0xc]
640058ce:	mov    edi,DWORD PTR [ebp+0x8]
640058d1:	mov    esi,eax
640058d3:	or     esi,0x7
640058d6:	cmp    esi,0x7ffffffe
640058dc:	jbe    0x640058e2
640058de:	mov    esi,eax
640058e0:	jmp    0x64005904
640058e2:	mov    ebx,DWORD PTR [edi+0x18]
640058e5:	mov    eax,0xaaaaaaab
640058ea:	mul    esi
640058ec:	mov    ecx,ebx
640058ee:	shr    ecx,1
640058f0:	shr    edx,1
640058f2:	cmp    edx,ecx
640058f4:	jae    0x64005904
640058f6:	mov    eax,0x7ffffffe
640058fb:	sub    eax,ecx
640058fd:	cmp    ebx,eax
640058ff:	ja     0x64005904
64005901:	lea    esi,[ecx+ebx*1]
64005904:	xor    ebx,ebx
64005906:	lea    ecx,[esi+0x1]
64005909:	cmp    ecx,ebx
6400590b:	mov    DWORD PTR [ebp-0x4],ebx
6400590e:	ja     0x64005923
64005910:	xor    ecx,ecx
64005912:	lea    eax,[ecx+ecx*1]
64005915:	push   eax
64005916:	call   0x64013895
6400591b:	add    esp,0x4
6400591e:	mov    DWORD PTR [ebp+0xc],eax
64005921:	jmp    0x64005977
64005923:	or     eax,0xffffffff
64005926:	xor    edx,edx
64005928:	div    ecx
6400592a:	cmp    eax,0x2
6400592d:	jae    0x64005912
6400592f:	lea    ecx,[ebp-0x14]
64005932:	push   ecx
64005933:	lea    ecx,[ebp-0x24]
64005936:	mov    DWORD PTR [ebp-0x14],ebx
64005939:	call   0x6401361a
6400593e:	push   0x6402bd5c
64005943:	lea    edx,[ebp-0x24]
64005946:	push   edx
64005947:	mov    DWORD PTR [ebp-0x24],0x640242a4
6400594e:	call   0x64013832
64005953:	mov    eax,DWORD PTR [ebp+0xc]
64005956:	lea    ecx,[eax+0x1]
64005959:	mov    DWORD PTR [ebp-0x10],esp
6400595c:	mov    DWORD PTR [ebp-0x18],eax
6400595f:	mov    BYTE PTR [ebp-0x4],0x2
64005963:	call   0x64006110
64005968:	mov    DWORD PTR [ebp+0xc],eax
6400596b:	mov    eax,0x64005971
64005970:	ret    
64005971:	mov    edi,DWORD PTR [ebp+0x8]
64005974:	mov    esi,DWORD PTR [ebp-0x18]
64005977:	mov    ebx,DWORD PTR [ebp+0x10]
6400597a:	test   ebx,ebx
6400597c:	jbe    0x640059a2
6400597e:	cmp    DWORD PTR [edi+0x18],0x8
64005982:	jb     0x64005989
64005984:	mov    eax,DWORD PTR [edi+0x4]
64005987:	jmp    0x6400598c
64005989:	lea    eax,[edi+0x4]
6400598c:	lea    ecx,[ebx+ebx*1]
6400598f:	push   ecx
64005990:	push   eax
64005991:	mov    eax,DWORD PTR [ebp+0xc]
64005994:	lea    edx,[esi+esi*1+0x2]
64005998:	push   edx
64005999:	push   eax
6400599a:	call   0x6401375c
6400599f:	add    esp,0x10
640059a2:	cmp    DWORD PTR [edi+0x18],0x8
640059a6:	jb     0x640059b4
640059a8:	mov    ecx,DWORD PTR [edi+0x4]
640059ab:	push   ecx
640059ac:	call   0x64013604
640059b1:	add    esp,0x4
640059b4:	cmp    esi,0x8
640059b7:	mov    ecx,DWORD PTR [ebp+0xc]
640059ba:	lea    eax,[edi+0x4]
640059bd:	mov    WORD PTR [eax],0x0
640059c2:	mov    DWORD PTR [eax],ecx
640059c4:	mov    DWORD PTR [edi+0x18],esi
640059c7:	mov    DWORD PTR [edi+0x14],ebx
640059ca:	jb     0x640059ce
640059cc:	mov    eax,ecx
640059ce:	mov    WORD PTR [eax+ebx*2],0x0
640059d4:	mov    ecx,DWORD PTR [ebp-0xc]
640059d7:	mov    DWORD PTR fs:0x0,ecx
640059de:	pop    ecx
640059df:	pop    edi
640059e0:	pop    esi
640059e1:	pop    ebx
640059e2:	mov    esp,ebp
640059e4:	pop    ebp
640059e5:	ret    0xc
640059e8:	mov    esi,DWORD PTR [ebp+0x8]
640059eb:	cmp    DWORD PTR [esi+0x18],0x8
640059ef:	jb     0x640059fd
640059f1:	mov    edx,DWORD PTR [esi+0x4]
640059f4:	push   edx
640059f5:	call   0x64013604
640059fa:	add    esp,0x4
640059fd:	xor    eax,eax
640059ff:	push   eax
64005a00:	mov    DWORD PTR [esi+0x18],0x7
64005a07:	mov    DWORD PTR [esi+0x14],eax
64005a0a:	push   eax
64005a0b:	mov    WORD PTR [esi+0x4],ax
64005a0f:	call   0x64013832
64005a14:	int3   
64005a15:	int3   
64005a16:	int3   
64005a17:	int3   
64005a18:	int3   
64005a19:	int3   
64005a1a:	int3   
64005a1b:	int3   
64005a1c:	int3   
64005a1d:	int3   
64005a1e:	int3   
64005a1f:	int3   
64005a20:	mov    eax,ds:0x64039980
64005a25:	push   ebx
64005a26:	mov    ebx,DWORD PTR [esp+0xc]
64005a2a:	test   ebx,ebx
64005a2c:	push   ebp
64005a2d:	mov    ebp,DWORD PTR [esp+0xc]
64005a31:	push   esi
64005a32:	push   edi
64005a33:	mov    edi,DWORD PTR [eax]
64005a35:	je     0x64005a3f
64005a37:	cmp    ebx,0x6403997c
64005a3d:	je     0x64005a44
64005a3f:	call   0x64013e36
64005a44:	mov    esi,DWORD PTR [esp+0x1c]
64005a48:	cmp    esi,edi
64005a4a:	jne    0x64005ac0
64005a4c:	mov    eax,DWORD PTR [esp+0x20]
64005a50:	test   eax,eax
64005a52:	mov    edi,DWORD PTR ds:0x64039980
64005a58:	je     0x64005a61
64005a5a:	cmp    eax,0x6403997c
64005a5f:	je     0x64005a66
64005a61:	call   0x64013e36
64005a66:	cmp    DWORD PTR [esp+0x24],edi
64005a6a:	jne    0x64005ac0
64005a6c:	mov    ecx,DWORD PTR ds:0x64039980
64005a72:	mov    edx,DWORD PTR [ecx+0x4]
64005a75:	push   edx
64005a76:	mov    ecx,0x6403997c
64005a7b:	call   0x64006750
64005a80:	mov    eax,ds:0x64039980
64005a85:	mov    DWORD PTR [eax+0x4],eax
64005a88:	mov    eax,ds:0x64039980
64005a8d:	mov    DWORD PTR ds:0x64039984,0x0
64005a97:	mov    DWORD PTR [eax],eax
64005a99:	mov    eax,ds:0x64039980
64005a9e:	mov    DWORD PTR [eax+0x8],eax
64005aa1:	mov    eax,ds:0x64039980
64005aa6:	mov    ecx,DWORD PTR [eax]
64005aa8:	mov    DWORD PTR [ebp+0x4],ecx
64005aab:	mov    DWORD PTR [ebp+0x0],0x6403997c
64005ab2:	mov    eax,ebp
64005ab4:	pop    edi
64005ab5:	pop    esi
64005ab6:	pop    ebp
64005ab7:	pop    ebx
64005ab8:	ret    0x14
64005abb:	jmp    0x64005ac0
64005abd:	lea    ecx,[ecx+0x0]
64005ac0:	test   ebx,ebx
64005ac2:	je     0x64005aca
64005ac4:	cmp    ebx,DWORD PTR [esp+0x20]
64005ac8:	je     0x64005acf
64005aca:	call   0x64013e36
64005acf:	cmp    esi,DWORD PTR [esp+0x24]
64005ad3:	je     0x64005b54
64005ad5:	test   ebx,ebx
64005ad7:	mov    edi,esi
64005ad9:	jne    0x64005ae0
64005adb:	call   0x64013e36
64005ae0:	cmp    BYTE PTR [esi+0x45],0x0
64005ae4:	je     0x64005af9
64005ae6:	call   0x64013e36
64005aeb:	push   edi
64005aec:	push   ebx
64005aed:	lea    edx,[esp+0x20]
64005af1:	push   edx
64005af2:	call   0x64006170
64005af7:	jmp    0x64005ac0
64005af9:	mov    eax,DWORD PTR [esi+0x8]
64005afc:	cmp    BYTE PTR [eax+0x45],0x0
64005b00:	jne    0x64005b28
64005b02:	mov    esi,eax
64005b04:	mov    eax,DWORD PTR [esi]
64005b06:	cmp    BYTE PTR [eax+0x45],0x0
64005b0a:	jne    0x64005b43
64005b0c:	lea    esp,[esp+0x0]
64005b10:	mov    esi,eax
64005b12:	mov    eax,DWORD PTR [esi]
64005b14:	cmp    BYTE PTR [eax+0x45],0x0
64005b18:	je     0x64005b10
64005b1a:	push   edi
64005b1b:	push   ebx
64005b1c:	lea    edx,[esp+0x20]
64005b20:	push   edx
64005b21:	call   0x64006170
64005b26:	jmp    0x64005ac0
64005b28:	mov    eax,DWORD PTR [esi+0x4]
64005b2b:	cmp    BYTE PTR [eax+0x45],0x0
64005b2f:	jne    0x64005b41
64005b31:	cmp    esi,DWORD PTR [eax+0x8]
64005b34:	jne    0x64005b41
64005b36:	mov    esi,eax
64005b38:	mov    eax,DWORD PTR [eax+0x4]
64005b3b:	cmp    BYTE PTR [eax+0x45],0x0
64005b3f:	je     0x64005b31
64005b41:	mov    esi,eax
64005b43:	push   edi
64005b44:	push   ebx
64005b45:	lea    edx,[esp+0x20]
64005b49:	push   edx
64005b4a:	call   0x64006170
64005b4f:	jmp    0x64005ac0
64005b54:	pop    edi
64005b55:	mov    DWORD PTR [ebp+0x4],esi
64005b58:	pop    esi
64005b59:	mov    DWORD PTR [ebp+0x0],ebx
64005b5c:	mov    eax,ebp
64005b5e:	pop    ebp
64005b5f:	pop    ebx
64005b60:	ret    0x14
64005b63:	int3   
64005b64:	int3   
64005b65:	int3   
64005b66:	int3   
64005b67:	int3   
64005b68:	int3   
64005b69:	int3   
64005b6a:	int3   
64005b6b:	int3   
64005b6c:	int3   
64005b6d:	int3   
64005b6e:	int3   
64005b6f:	int3   
64005b70:	mov    eax,DWORD PTR [ecx+0x8]
64005b73:	mov    edx,DWORD PTR [eax]
64005b75:	mov    DWORD PTR [ecx+0x8],edx
64005b78:	mov    edx,DWORD PTR [eax]
64005b7a:	cmp    BYTE PTR [edx+0x45],0x0
64005b7e:	jne    0x64005b83
64005b80:	mov    DWORD PTR [edx+0x4],ecx
64005b83:	mov    edx,DWORD PTR [ecx+0x4]
64005b86:	mov    DWORD PTR [eax+0x4],edx
64005b89:	mov    edx,DWORD PTR [esp+0x4]
64005b8d:	mov    edx,DWORD PTR [edx+0x4]
64005b90:	cmp    ecx,DWORD PTR [edx+0x4]
64005b93:	jne    0x64005ba0
64005b95:	mov    DWORD PTR [edx+0x4],eax
64005b98:	mov    DWORD PTR [eax],ecx
64005b9a:	mov    DWORD PTR [ecx+0x4],eax
64005b9d:	ret    0x4
64005ba0:	mov    edx,DWORD PTR [ecx+0x4]
64005ba3:	cmp    ecx,DWORD PTR [edx]
64005ba5:	jne    0x64005bb1
64005ba7:	mov    DWORD PTR [edx],eax
64005ba9:	mov    DWORD PTR [eax],ecx
64005bab:	mov    DWORD PTR [ecx+0x4],eax
64005bae:	ret    0x4
64005bb1:	mov    DWORD PTR [edx+0x8],eax
64005bb4:	mov    DWORD PTR [eax],ecx
64005bb6:	mov    DWORD PTR [ecx+0x4],eax
64005bb9:	ret    0x4
64005bbc:	int3   
64005bbd:	int3   
64005bbe:	int3   
64005bbf:	int3   
64005bc0:	mov    eax,DWORD PTR [ecx]
64005bc2:	mov    edx,DWORD PTR [eax+0x8]
64005bc5:	mov    DWORD PTR [ecx],edx
64005bc7:	mov    edx,DWORD PTR [eax+0x8]
64005bca:	cmp    BYTE PTR [edx+0x45],0x0
64005bce:	jne    0x64005bd3
64005bd0:	mov    DWORD PTR [edx+0x4],ecx
64005bd3:	mov    edx,DWORD PTR [ecx+0x4]
64005bd6:	mov    DWORD PTR [eax+0x4],edx
64005bd9:	mov    edx,DWORD PTR [esp+0x4]
64005bdd:	mov    edx,DWORD PTR [edx+0x4]
64005be0:	cmp    ecx,DWORD PTR [edx+0x4]
64005be3:	jne    0x64005bf1
64005be5:	mov    DWORD PTR [edx+0x4],eax
64005be8:	mov    DWORD PTR [eax+0x8],ecx
64005beb:	mov    DWORD PTR [ecx+0x4],eax
64005bee:	ret    0x4
64005bf1:	mov    edx,DWORD PTR [ecx+0x4]
64005bf4:	cmp    ecx,DWORD PTR [edx+0x8]
64005bf7:	jne    0x64005c05
64005bf9:	mov    DWORD PTR [edx+0x8],eax
64005bfc:	mov    DWORD PTR [eax+0x8],ecx
64005bff:	mov    DWORD PTR [ecx+0x4],eax
64005c02:	ret    0x4
64005c05:	mov    DWORD PTR [edx],eax
64005c07:	mov    DWORD PTR [eax+0x8],ecx
64005c0a:	mov    DWORD PTR [ecx+0x4],eax
64005c0d:	ret    0x4
64005c10:	push   ebp
64005c11:	mov    ebp,esp
64005c13:	push   0xffffffff
64005c15:	push   0x64023191
64005c1a:	mov    eax,fs:0x0
64005c20:	push   eax
64005c21:	sub    esp,0xc
64005c24:	push   ebx
64005c25:	push   esi
64005c26:	push   edi
64005c27:	mov    eax,ds:0x64037644
64005c2c:	xor    eax,ebp
64005c2e:	push   eax
64005c2f:	lea    eax,[ebp-0xc]
64005c32:	mov    fs:0x0,eax
64005c38:	mov    DWORD PTR [ebp-0x10],esp
64005c3b:	push   0x48
64005c3d:	call   0x64013895
64005c42:	mov    esi,eax
64005c44:	mov    DWORD PTR [ebp-0x4],0x0
64005c4b:	add    esp,0x4
64005c4e:	mov    DWORD PTR [ebp-0x14],esi
64005c51:	mov    DWORD PTR [ebp-0x18],esi
64005c54:	test   esi,esi
64005c56:	mov    BYTE PTR [ebp-0x4],0x1
64005c5a:	je     0x64005c81
64005c5c:	mov    eax,DWORD PTR [ebp+0x8]
64005c5f:	mov    ecx,DWORD PTR [ebp+0xc]
64005c62:	mov    edx,DWORD PTR [ebp+0x10]
64005c65:	mov    ebx,DWORD PTR [ebp+0x14]
64005c68:	mov    DWORD PTR [esi],eax
64005c6a:	lea    eax,[esi+0xc]
64005c6d:	push   eax
64005c6e:	mov    DWORD PTR [esi+0x4],ecx
64005c71:	mov    DWORD PTR [esi+0x8],edx
64005c74:	call   0x64006610
64005c79:	xor    al,al
64005c7b:	mov    BYTE PTR [esi+0x44],al
64005c7e:	mov    BYTE PTR [esi+0x45],al
64005c81:	mov    eax,esi
64005c83:	mov    ecx,DWORD PTR [ebp-0xc]
64005c86:	mov    DWORD PTR fs:0x0,ecx
64005c8d:	pop    ecx
64005c8e:	pop    edi
64005c8f:	pop    esi
64005c90:	pop    ebx
64005c91:	mov    esp,ebp
64005c93:	pop    ebp
64005c94:	ret    0x10
64005c97:	mov    ecx,DWORD PTR [ebp-0x14]
64005c9a:	push   ecx
64005c9b:	call   0x64013604
64005ca0:	add    esp,0x4
64005ca3:	push   0x0
64005ca5:	push   0x0
64005ca7:	call   0x64013832
64005cac:	int3   
64005cad:	int3   
64005cae:	int3   
64005caf:	int3   
64005cb0:	push   ebp
64005cb1:	mov    ebp,esp
64005cb3:	and    esp,0xfffffff8
64005cb6:	push   0xffffffff
64005cb8:	push   0x64023518
64005cbd:	mov    eax,fs:0x0
64005cc3:	push   eax
64005cc4:	sub    esp,0x50
64005cc7:	push   ebx
64005cc8:	push   esi
64005cc9:	push   edi
64005cca:	mov    eax,ds:0x64037644
64005ccf:	xor    eax,esp
64005cd1:	push   eax
64005cd2:	lea    eax,[esp+0x60]
64005cd6:	mov    fs:0x0,eax
64005cdc:	mov    DWORD PTR [esp+0x14],ecx
64005ce0:	mov    edi,DWORD PTR [ebp+0x10]
64005ce3:	cmp    BYTE PTR [edi+0x45],0x0
64005ce7:	je     0x64005d35
64005ce9:	push   0x1b
64005ceb:	xor    esi,esi
64005ced:	push   0x64029948
64005cf2:	lea    ecx,[esp+0x20]
64005cf6:	mov    DWORD PTR [esp+0x38],0xf
64005cfe:	mov    DWORD PTR [esp+0x34],esi
64005d02:	mov    BYTE PTR [esp+0x24],0x0
64005d07:	call   0x640033f0
64005d0c:	lea    eax,[esp+0x18]
64005d10:	push   eax
64005d11:	lea    ecx,[esp+0x38]
64005d15:	mov    DWORD PTR [esp+0x6c],esi
64005d19:	call   0x64001310
64005d1e:	push   0x6402bce8
64005d23:	lea    ecx,[esp+0x38]
64005d27:	push   ecx
64005d28:	mov    DWORD PTR [esp+0x3c],0x640242ec
64005d30:	call   0x64013832
64005d35:	lea    ecx,[ebp+0xc]
64005d38:	call   0x640060a0
64005d3d:	mov    ecx,DWORD PTR [edi]
64005d3f:	cmp    BYTE PTR [ecx+0x45],0x0
64005d43:	je     0x64005d4a
64005d45:	mov    ebx,DWORD PTR [edi+0x8]
64005d48:	jmp    0x64005d61
64005d4a:	mov    edx,DWORD PTR [edi+0x8]
64005d4d:	cmp    BYTE PTR [edx+0x45],0x0
64005d51:	je     0x64005d57
64005d53:	mov    ebx,ecx
64005d55:	jmp    0x64005d61
64005d57:	mov    eax,DWORD PTR [ebp+0x10]
64005d5a:	cmp    eax,edi
64005d5c:	mov    ebx,DWORD PTR [eax+0x8]
64005d5f:	jne    0x64005ddd
64005d61:	cmp    BYTE PTR [ebx+0x45],0x0
64005d65:	mov    esi,DWORD PTR [edi+0x4]
64005d68:	jne    0x64005d6d
64005d6a:	mov    DWORD PTR [ebx+0x4],esi
64005d6d:	mov    ecx,DWORD PTR [esp+0x14]
64005d71:	mov    eax,DWORD PTR [ecx+0x4]
64005d74:	cmp    DWORD PTR [eax+0x4],edi
64005d77:	jne    0x64005d7e
64005d79:	mov    DWORD PTR [eax+0x4],ebx
64005d7c:	jmp    0x64005d89
64005d7e:	cmp    DWORD PTR [esi],edi
64005d80:	jne    0x64005d86
64005d82:	mov    DWORD PTR [esi],ebx
64005d84:	jmp    0x64005d89
64005d86:	mov    DWORD PTR [esi+0x8],ebx
64005d89:	mov    eax,DWORD PTR [ecx+0x4]
64005d8c:	cmp    DWORD PTR [eax],edi
64005d8e:	jne    0x64005dac
64005d90:	cmp    BYTE PTR [ebx+0x45],0x0
64005d94:	je     0x64005d9a
64005d96:	mov    eax,esi
64005d98:	jmp    0x64005da7
64005d9a:	push   ebx
64005d9b:	call   0x64006730
64005da0:	mov    ecx,DWORD PTR [esp+0x18]
64005da4:	add    esp,0x4
64005da7:	mov    edx,DWORD PTR [ecx+0x4]
64005daa:	mov    DWORD PTR [edx],eax
64005dac:	mov    eax,DWORD PTR [ecx+0x4]
64005daf:	cmp    DWORD PTR [eax+0x8],edi
64005db2:	jne    0x64005e3c
64005db8:	cmp    BYTE PTR [ebx+0x45],0x0
64005dbc:	je     0x64005dc8
64005dbe:	mov    edx,DWORD PTR [ecx+0x4]
64005dc1:	mov    eax,esi
64005dc3:	mov    DWORD PTR [edx+0x8],eax
64005dc6:	jmp    0x64005e3c
64005dc8:	push   ebx
64005dc9:	call   0x64006710
64005dce:	mov    ecx,DWORD PTR [esp+0x18]
64005dd2:	mov    edx,DWORD PTR [ecx+0x4]
64005dd5:	add    esp,0x4
64005dd8:	mov    DWORD PTR [edx+0x8],eax
64005ddb:	jmp    0x64005e3c
64005ddd:	mov    DWORD PTR [ecx+0x4],eax
64005de0:	mov    ecx,DWORD PTR [edi]
64005de2:	mov    DWORD PTR [eax],ecx
64005de4:	cmp    eax,DWORD PTR [edi+0x8]
64005de7:	jne    0x64005ded
64005de9:	mov    esi,eax
64005deb:	jmp    0x64005e07
64005ded:	cmp    BYTE PTR [ebx+0x45],0x0
64005df1:	mov    esi,DWORD PTR [eax+0x4]
64005df4:	jne    0x64005df9
64005df6:	mov    DWORD PTR [ebx+0x4],esi
64005df9:	mov    DWORD PTR [esi],ebx
64005dfb:	mov    edx,DWORD PTR [edi+0x8]
64005dfe:	mov    DWORD PTR [eax+0x8],edx
64005e01:	mov    ecx,DWORD PTR [edi+0x8]
64005e04:	mov    DWORD PTR [ecx+0x4],eax
64005e07:	mov    edx,DWORD PTR [esp+0x14]
64005e0b:	mov    ecx,DWORD PTR [edx+0x4]
64005e0e:	cmp    DWORD PTR [ecx+0x4],edi
64005e11:	jne    0x64005e18
64005e13:	mov    DWORD PTR [ecx+0x4],eax
64005e16:	jmp    0x64005e26
64005e18:	mov    ecx,DWORD PTR [edi+0x4]
64005e1b:	cmp    DWORD PTR [ecx],edi
64005e1d:	jne    0x64005e23
64005e1f:	mov    DWORD PTR [ecx],eax
64005e21:	jmp    0x64005e26
64005e23:	mov    DWORD PTR [ecx+0x8],eax
64005e26:	mov    ecx,DWORD PTR [edi+0x4]
64005e29:	mov    DWORD PTR [eax+0x4],ecx
64005e2c:	mov    cl,BYTE PTR [eax+0x44]
64005e2f:	mov    dl,BYTE PTR [edi+0x44]
64005e32:	mov    BYTE PTR [eax+0x44],dl
64005e35:	mov    BYTE PTR [edi+0x44],cl
64005e38:	mov    ecx,DWORD PTR [esp+0x14]
64005e3c:	cmp    BYTE PTR [edi+0x44],0x1
64005e40:	jne    0x64005f51
64005e46:	mov    eax,DWORD PTR [ecx+0x4]
64005e49:	cmp    ebx,DWORD PTR [eax+0x4]
64005e4c:	je     0x64005f4d
64005e52:	cmp    BYTE PTR [ebx+0x44],0x1
64005e56:	jne    0x64005f4d
64005e5c:	mov    eax,DWORD PTR [esi]
64005e5e:	cmp    ebx,eax
64005e60:	jne    0x64005ed0
64005e62:	mov    eax,DWORD PTR [esi+0x8]
64005e65:	cmp    BYTE PTR [eax+0x44],0x0
64005e69:	jne    0x64005e80
64005e6b:	mov    BYTE PTR [eax+0x44],0x1
64005e6f:	push   esi
64005e70:	mov    BYTE PTR [esi+0x44],0x0
64005e74:	call   0x64005750
64005e79:	mov    eax,DWORD PTR [esi+0x8]
64005e7c:	mov    ecx,DWORD PTR [esp+0x14]
64005e80:	cmp    BYTE PTR [eax+0x45],0x0
64005e84:	jne    0x64005f05
64005e86:	mov    edx,DWORD PTR [eax]
64005e88:	cmp    BYTE PTR [edx+0x44],0x1
64005e8c:	jne    0x64005e97
64005e8e:	mov    edx,DWORD PTR [eax+0x8]
64005e91:	cmp    BYTE PTR [edx+0x44],0x1
64005e95:	je     0x64005f01
64005e97:	mov    edx,DWORD PTR [eax+0x8]
64005e9a:	cmp    BYTE PTR [edx+0x44],0x1
64005e9e:	jne    0x64005eb7
64005ea0:	mov    edx,DWORD PTR [eax]
64005ea2:	mov    BYTE PTR [edx+0x44],0x1
64005ea6:	push   eax
64005ea7:	mov    BYTE PTR [eax+0x44],0x0
64005eab:	call   0x640057a0
64005eb0:	mov    eax,DWORD PTR [esi+0x8]
64005eb3:	mov    ecx,DWORD PTR [esp+0x14]
64005eb7:	mov    dl,BYTE PTR [esi+0x44]
64005eba:	mov    BYTE PTR [eax+0x44],dl
64005ebd:	mov    BYTE PTR [esi+0x44],0x1
64005ec1:	mov    eax,DWORD PTR [eax+0x8]
64005ec4:	push   esi
64005ec5:	mov    BYTE PTR [eax+0x44],0x1
64005ec9:	call   0x64005750
64005ece:	jmp    0x64005f4d
64005ed0:	cmp    BYTE PTR [eax+0x44],0x0
64005ed4:	jne    0x64005eea
64005ed6:	mov    BYTE PTR [eax+0x44],0x1
64005eda:	push   esi
64005edb:	mov    BYTE PTR [esi+0x44],0x0
64005edf:	call   0x640057a0
64005ee4:	mov    eax,DWORD PTR [esi]
64005ee6:	mov    ecx,DWORD PTR [esp+0x14]
64005eea:	cmp    BYTE PTR [eax+0x45],0x0
64005eee:	jne    0x64005f05
64005ef0:	mov    edx,DWORD PTR [eax+0x8]
64005ef3:	cmp    BYTE PTR [edx+0x44],0x1
64005ef7:	jne    0x64005f18
64005ef9:	mov    edx,DWORD PTR [eax]
64005efb:	cmp    BYTE PTR [edx+0x44],0x1
64005eff:	jne    0x64005f18
64005f01:	mov    BYTE PTR [eax+0x44],0x0
64005f05:	mov    eax,DWORD PTR [ecx+0x4]
64005f08:	mov    ebx,esi
64005f0a:	cmp    ebx,DWORD PTR [eax+0x4]
64005f0d:	mov    esi,DWORD PTR [esi+0x4]
64005f10:	jne    0x64005e52
64005f16:	jmp    0x64005f4d
64005f18:	mov    edx,DWORD PTR [eax]
64005f1a:	cmp    BYTE PTR [edx+0x44],0x1
64005f1e:	jne    0x64005f37
64005f20:	mov    edx,DWORD PTR [eax+0x8]
64005f23:	mov    BYTE PTR [edx+0x44],0x1
64005f27:	push   eax
64005f28:	mov    BYTE PTR [eax+0x44],0x0
64005f2c:	call   0x64005750
64005f31:	mov    eax,DWORD PTR [esi]
64005f33:	mov    ecx,DWORD PTR [esp+0x14]
64005f37:	mov    dl,BYTE PTR [esi+0x44]
64005f3a:	mov    BYTE PTR [eax+0x44],dl
64005f3d:	mov    BYTE PTR [esi+0x44],0x1
64005f41:	mov    eax,DWORD PTR [eax]
64005f43:	push   esi
64005f44:	mov    BYTE PTR [eax+0x44],0x1
64005f48:	call   0x640057a0
64005f4d:	mov    BYTE PTR [ebx+0x44],0x1
64005f51:	cmp    DWORD PTR [edi+0x40],0x10
64005f55:	jb     0x64005f63
64005f57:	mov    ecx,DWORD PTR [edi+0x2c]
64005f5a:	push   ecx
64005f5b:	call   0x64013604
64005f60:	add    esp,0x4
64005f63:	xor    esi,esi
64005f65:	mov    ebx,0xf
64005f6a:	mov    DWORD PTR [edi+0x40],ebx
64005f6d:	mov    DWORD PTR [edi+0x3c],esi
64005f70:	mov    BYTE PTR [edi+0x2c],0x0
64005f74:	cmp    DWORD PTR [edi+0x24],0x10
64005f78:	jb     0x64005f86
64005f7a:	mov    edx,DWORD PTR [edi+0x10]
64005f7d:	push   edx
64005f7e:	call   0x64013604
64005f83:	add    esp,0x4
64005f86:	mov    DWORD PTR [edi+0x24],ebx
64005f89:	mov    DWORD PTR [edi+0x20],esi
64005f8c:	push   edi
64005f8d:	mov    BYTE PTR [edi+0x10],0x0
64005f91:	call   0x64013604
64005f96:	mov    ecx,DWORD PTR [esp+0x18]
64005f9a:	mov    eax,DWORD PTR [ecx+0x8]
64005f9d:	add    esp,0x4
64005fa0:	cmp    eax,esi
64005fa2:	jbe    0x64005faa
64005fa4:	add    eax,0xffffffff
64005fa7:	mov    DWORD PTR [ecx+0x8],eax
64005faa:	mov    eax,DWORD PTR [ebp+0x8]
64005fad:	mov    ecx,DWORD PTR [ebp+0xc]
64005fb0:	mov    edx,DWORD PTR [ebp+0x10]
64005fb3:	mov    DWORD PTR [eax],ecx
64005fb5:	mov    DWORD PTR [eax+0x4],edx
64005fb8:	mov    ecx,DWORD PTR [esp+0x60]
64005fbc:	mov    DWORD PTR fs:0x0,ecx
64005fc3:	pop    ecx
64005fc4:	pop    edi
64005fc5:	pop    esi
64005fc6:	pop    ebx
64005fc7:	mov    esp,ebp
64005fc9:	pop    ebp
64005fca:	ret    0xc
64005fcd:	int3   
64005fce:	int3   
64005fcf:	int3   
64005fd0:	push   0x48
64005fd2:	call   0x64013895
64005fd7:	add    esp,0x4
64005fda:	test   eax,eax
64005fdc:	je     0x64005fe4
64005fde:	mov    DWORD PTR [eax],0x0
64005fe4:	lea    ecx,[eax+0x4]
64005fe7:	test   ecx,ecx
64005fe9:	je     0x64005ff1
64005feb:	mov    DWORD PTR [ecx],0x0
64005ff1:	lea    ecx,[eax+0x8]
64005ff4:	test   ecx,ecx
64005ff6:	je     0x64005ffe
64005ff8:	mov    DWORD PTR [ecx],0x0
64005ffe:	mov    BYTE PTR [eax+0x44],0x1
64006002:	mov    BYTE PTR [eax+0x45],0x0
64006006:	ret    
64006007:	int3   
64006008:	int3   
64006009:	int3   
6400600a:	int3   
6400600b:	int3   
6400600c:	int3   
6400600d:	int3   
6400600e:	int3   
6400600f:	int3   
64006010:	push   esi
64006011:	mov    esi,ecx
64006013:	cmp    DWORD PTR [esi],0x0
64006016:	jne    0x6400601d
64006018:	call   0x64013e36
6400601d:	mov    eax,DWORD PTR [esi+0x4]
64006020:	cmp    BYTE PTR [eax+0x45],0x0
64006024:	je     0x64006038
64006026:	mov    eax,DWORD PTR [eax+0x8]
64006029:	mov    DWORD PTR [esi+0x4],eax
6400602c:	cmp    BYTE PTR [eax+0x45],0x0
64006030:	je     0x64006097
64006032:	pop    esi
64006033:	jmp    0x64013e36
64006038:	mov    ecx,DWORD PTR [eax]
6400603a:	cmp    BYTE PTR [ecx+0x45],0x0
6400603e:	jne    0x64006060
64006040:	mov    eax,DWORD PTR [ecx+0x8]
64006043:	cmp    BYTE PTR [eax+0x45],0x0
64006047:	jne    0x6400605b
64006049:	lea    esp,[esp+0x0]
64006050:	mov    ecx,eax
64006052:	mov    eax,DWORD PTR [ecx+0x8]
64006055:	cmp    BYTE PTR [eax+0x45],0x0
64006059:	je     0x64006050
6400605b:	mov    DWORD PTR [esi+0x4],ecx
6400605e:	pop    esi
6400605f:	ret    
64006060:	mov    eax,DWORD PTR [eax+0x4]
64006063:	cmp    BYTE PTR [eax+0x45],0x0
64006067:	jne    0x64006085
64006069:	lea    esp,[esp+0x0]
64006070:	mov    ecx,DWORD PTR [esi+0x4]
64006073:	cmp    ecx,DWORD PTR [eax]
64006075:	jne    0x64006085
64006077:	mov    DWORD PTR [esi+0x4],eax
6400607a:	mov    edx,eax
6400607c:	mov    eax,DWORD PTR [edx+0x4]
6400607f:	cmp    BYTE PTR [eax+0x45],0x0
64006083:	je     0x64006070
64006085:	mov    ecx,DWORD PTR [esi+0x4]
64006088:	cmp    BYTE PTR [ecx+0x45],0x0
6400608c:	je     0x64006094
6400608e:	pop    esi
6400608f:	jmp    0x64013e36
64006094:	mov    DWORD PTR [esi+0x4],eax
64006097:	pop    esi
64006098:	ret    
64006099:	int3   
6400609a:	int3   
6400609b:	int3   
6400609c:	int3   
6400609d:	int3   
6400609e:	int3   
6400609f:	int3   
640060a0:	push   esi
640060a1:	mov    esi,ecx
640060a3:	cmp    DWORD PTR [esi],0x0
640060a6:	jne    0x640060ad
640060a8:	call   0x64013e36
640060ad:	mov    eax,DWORD PTR [esi+0x4]
640060b0:	cmp    BYTE PTR [eax+0x45],0x0
640060b4:	je     0x640060bc
640060b6:	pop    esi
640060b7:	jmp    0x64013e36
640060bc:	mov    ecx,DWORD PTR [eax+0x8]
640060bf:	cmp    BYTE PTR [ecx+0x45],0x0
640060c3:	jne    0x640060df
640060c5:	mov    eax,DWORD PTR [ecx]
640060c7:	cmp    BYTE PTR [eax+0x45],0x0
640060cb:	jne    0x640060da
640060cd:	lea    ecx,[ecx+0x0]
640060d0:	mov    ecx,eax
640060d2:	mov    eax,DWORD PTR [ecx]
640060d4:	cmp    BYTE PTR [eax+0x45],0x0
640060d8:	je     0x640060d0
640060da:	mov    DWORD PTR [esi+0x4],ecx
640060dd:	pop    esi
640060de:	ret    
640060df:	mov    eax,DWORD PTR [eax+0x4]
640060e2:	cmp    BYTE PTR [eax+0x45],0x0
640060e6:	jne    0x640060fe
640060e8:	mov    ecx,DWORD PTR [esi+0x4]
640060eb:	cmp    ecx,DWORD PTR [eax+0x8]
640060ee:	jne    0x640060fe
640060f0:	mov    DWORD PTR [esi+0x4],eax
640060f3:	mov    edx,eax
640060f5:	mov    eax,DWORD PTR [edx+0x4]
640060f8:	cmp    BYTE PTR [eax+0x45],0x0
640060fc:	je     0x640060e8
640060fe:	mov    DWORD PTR [esi+0x4],eax
64006101:	pop    esi
64006102:	ret    
64006103:	int3   
64006104:	int3   
64006105:	int3   
64006106:	int3   
64006107:	int3   
64006108:	int3   
64006109:	int3   
6400610a:	int3   
6400610b:	int3   
6400610c:	int3   
6400610d:	int3   
6400610e:	int3   
6400610f:	int3   
64006110:	sub    esp,0x10
64006113:	test   ecx,ecx
64006115:	ja     0x64006129
64006117:	xor    ecx,ecx
64006119:	lea    edx,[ecx+ecx*1]
6400611c:	push   edx
6400611d:	call   0x64013895
64006122:	add    esp,0x4
64006125:	add    esp,0x10
64006128:	ret    
64006129:	or     eax,0xffffffff
6400612c:	xor    edx,edx
6400612e:	div    ecx
64006130:	cmp    eax,0x2
64006133:	jae    0x64006119
64006135:	lea    eax,[esp]
64006138:	push   eax
64006139:	lea    ecx,[esp+0x8]
6400613d:	mov    DWORD PTR [esp+0x4],0x0
64006145:	call   0x6401361a
6400614a:	push   0x6402bd5c
6400614f:	lea    ecx,[esp+0x8]
64006153:	push   ecx
64006154:	mov    DWORD PTR [esp+0xc],0x640242a4
6400615c:	call   0x64013832
64006161:	int3   
64006162:	int3   
64006163:	int3   
64006164:	int3   
64006165:	int3   
64006166:	int3   
64006167:	int3   
64006168:	int3   
64006169:	int3   
6400616a:	int3   
6400616b:	int3   
6400616c:	int3   
6400616d:	int3   
6400616e:	int3   
6400616f:	int3   
64006170:	push   0xffffffff
64006172:	push   0x640234e8
64006177:	mov    eax,fs:0x0
6400617d:	push   eax
6400617e:	sub    esp,0x48
64006181:	push   ebx
64006182:	push   ebp
64006183:	push   esi
64006184:	push   edi
64006185:	mov    eax,ds:0x64037644
6400618a:	xor    eax,esp
6400618c:	push   eax
6400618d:	lea    eax,[esp+0x5c]
64006191:	mov    fs:0x0,eax
64006197:	mov    eax,DWORD PTR [esp+0x74]
6400619b:	cmp    BYTE PTR [eax+0x45],0x0
6400619f:	je     0x640061ed
640061a1:	push   0x1b
640061a3:	xor    esi,esi
640061a5:	push   0x64029948
640061aa:	lea    ecx,[esp+0x1c]
640061ae:	mov    DWORD PTR [esp+0x34],0xf
640061b6:	mov    DWORD PTR [esp+0x30],esi
640061ba:	mov    BYTE PTR [esp+0x20],0x0
640061bf:	call   0x640033f0
640061c4:	lea    eax,[esp+0x14]
640061c8:	push   eax
640061c9:	lea    ecx,[esp+0x34]
640061cd:	mov    DWORD PTR [esp+0x68],esi
640061d1:	call   0x64001310
640061d6:	push   0x6402bce8
640061db:	lea    ecx,[esp+0x34]
640061df:	push   ecx
640061e0:	mov    DWORD PTR [esp+0x38],0x640242ec
640061e8:	call   0x64013832
640061ed:	lea    esi,[esp+0x70]
640061f1:	mov    ebp,eax
640061f3:	call   0x64006520
640061f8:	mov    eax,DWORD PTR [ebp+0x0]
640061fb:	cmp    BYTE PTR [eax+0x45],0x0
640061ff:	je     0x64006206
64006201:	mov    edi,DWORD PTR [ebp+0x8]
64006204:	jmp    0x6400621e
64006206:	mov    edx,DWORD PTR [ebp+0x8]
64006209:	cmp    BYTE PTR [edx+0x45],0x0
6400620d:	je     0x64006213
6400620f:	mov    edi,eax
64006211:	jmp    0x6400621e
64006213:	mov    ecx,DWORD PTR [esp+0x74]
64006217:	cmp    ecx,ebp
64006219:	mov    edi,DWORD PTR [ecx+0x8]
6400621c:	jne    0x6400629d
6400621e:	cmp    BYTE PTR [edi+0x45],0x0
64006222:	mov    esi,DWORD PTR [ebp+0x4]
64006225:	jne    0x6400622a
64006227:	mov    DWORD PTR [edi+0x4],esi
6400622a:	mov    eax,ds:0x64039980
6400622f:	cmp    DWORD PTR [eax+0x4],ebp
64006232:	jne    0x64006239
64006234:	mov    DWORD PTR [eax+0x4],edi
64006237:	jmp    0x64006244
64006239:	cmp    DWORD PTR [esi],ebp
6400623b:	jne    0x64006241
6400623d:	mov    DWORD PTR [esi],edi
6400623f:	jmp    0x64006244
64006241:	mov    DWORD PTR [esi+0x8],edi
64006244:	mov    edx,DWORD PTR ds:0x64039980
6400624a:	cmp    DWORD PTR [edx],ebp
6400624c:	jne    0x6400626e
6400624e:	cmp    BYTE PTR [edi+0x45],0x0
64006252:	je     0x64006258
64006254:	mov    ecx,esi
64006256:	jmp    0x6400626c
64006258:	mov    eax,DWORD PTR [edi]
6400625a:	cmp    BYTE PTR [eax+0x45],0x0
6400625e:	mov    ecx,edi
64006260:	jne    0x6400626c
64006262:	mov    ecx,eax
64006264:	mov    eax,DWORD PTR [ecx]
64006266:	cmp    BYTE PTR [eax+0x45],0x0
6400626a:	je     0x64006262
6400626c:	mov    DWORD PTR [edx],ecx
6400626e:	mov    eax,ds:0x64039980
64006273:	cmp    DWORD PTR [eax+0x8],ebp
64006276:	jne    0x640062f7
64006278:	cmp    BYTE PTR [edi+0x45],0x0
6400627c:	je     0x6400628b
6400627e:	mov    ecx,DWORD PTR ds:0x64039980
64006284:	mov    eax,esi
64006286:	mov    DWORD PTR [ecx+0x8],eax
64006289:	jmp    0x640062f7
6400628b:	mov    eax,edi
6400628d:	call   0x640067d0
64006292:	mov    ecx,DWORD PTR ds:0x64039980
64006298:	mov    DWORD PTR [ecx+0x8],eax
6400629b:	jmp    0x640062f7
6400629d:	mov    DWORD PTR [eax+0x4],ecx
640062a0:	mov    edx,DWORD PTR [ebp+0x0]
640062a3:	mov    DWORD PTR [ecx],edx
640062a5:	cmp    ecx,DWORD PTR [ebp+0x8]
640062a8:	jne    0x640062ae
640062aa:	mov    esi,ecx
640062ac:	jmp    0x640062c8
640062ae:	cmp    BYTE PTR [edi+0x45],0x0
640062b2:	mov    esi,DWORD PTR [ecx+0x4]
640062b5:	jne    0x640062ba
640062b7:	mov    DWORD PTR [edi+0x4],esi
640062ba:	mov    DWORD PTR [esi],edi
640062bc:	mov    eax,DWORD PTR [ebp+0x8]
640062bf:	mov    DWORD PTR [ecx+0x8],eax
640062c2:	mov    edx,DWORD PTR [ebp+0x8]
640062c5:	mov    DWORD PTR [edx+0x4],ecx
640062c8:	mov    eax,ds:0x64039980
640062cd:	cmp    DWORD PTR [eax+0x4],ebp
640062d0:	jne    0x640062d7
640062d2:	mov    DWORD PTR [eax+0x4],ecx
640062d5:	jmp    0x640062e5
640062d7:	mov    eax,DWORD PTR [ebp+0x4]
640062da:	cmp    DWORD PTR [eax],ebp
640062dc:	jne    0x640062e2
640062de:	mov    DWORD PTR [eax],ecx
640062e0:	jmp    0x640062e5
640062e2:	mov    DWORD PTR [eax+0x8],ecx
640062e5:	mov    eax,DWORD PTR [ebp+0x4]
640062e8:	mov    DWORD PTR [ecx+0x4],eax
640062eb:	mov    dl,BYTE PTR [ebp+0x44]
640062ee:	mov    al,BYTE PTR [ecx+0x44]
640062f1:	mov    BYTE PTR [ecx+0x44],dl
640062f4:	mov    BYTE PTR [ebp+0x44],al
640062f7:	mov    ebx,0x1
640062fc:	cmp    BYTE PTR [ebp+0x44],bl
640062ff:	jne    0x6400641c
64006305:	mov    eax,ds:0x64039980
6400630a:	cmp    edi,DWORD PTR [eax+0x4]
6400630d:	je     0x64006419
64006313:	cmp    BYTE PTR [edi+0x44],bl
64006316:	jne    0x64006419
6400631c:	mov    ecx,DWORD PTR [esi]
6400631e:	cmp    edi,ecx
64006320:	jne    0x64006398
64006322:	mov    ecx,DWORD PTR [esi+0x8]
64006325:	cmp    BYTE PTR [ecx+0x44],0x0
64006329:	jne    0x64006341
6400632b:	mov    BYTE PTR [ecx+0x44],bl
6400632e:	push   0x6403997c
64006333:	mov    ecx,esi
64006335:	mov    BYTE PTR [esi+0x44],0x0
64006339:	call   0x64005b70
6400633e:	mov    ecx,DWORD PTR [esi+0x8]
64006341:	cmp    BYTE PTR [ecx+0x45],0x0
64006345:	jne    0x640063cc
6400634b:	mov    edx,DWORD PTR [ecx]
6400634d:	cmp    BYTE PTR [edx+0x44],bl
64006350:	jne    0x6400635a
64006352:	mov    eax,DWORD PTR [ecx+0x8]
64006355:	cmp    BYTE PTR [eax+0x44],bl
64006358:	je     0x640063c8
6400635a:	mov    edx,DWORD PTR [ecx+0x8]
6400635d:	cmp    BYTE PTR [edx+0x44],bl
64006360:	jne    0x64006378
64006362:	mov    eax,DWORD PTR [ecx]
64006364:	mov    BYTE PTR [eax+0x44],bl
64006367:	push   0x6403997c
6400636c:	mov    BYTE PTR [ecx+0x44],0x0
64006370:	call   0x64005bc0
64006375:	mov    ecx,DWORD PTR [esi+0x8]
64006378:	mov    dl,BYTE PTR [esi+0x44]
6400637b:	mov    BYTE PTR [ecx+0x44],dl
6400637e:	mov    BYTE PTR [esi+0x44],bl
64006381:	mov    eax,DWORD PTR [ecx+0x8]
64006384:	push   0x6403997c
64006389:	mov    ecx,esi
6400638b:	mov    BYTE PTR [eax+0x44],bl
6400638e:	call   0x64005b70
64006393:	jmp    0x64006419
64006398:	cmp    BYTE PTR [ecx+0x44],0x0
6400639c:	jne    0x640063b3
6400639e:	mov    BYTE PTR [ecx+0x44],bl
640063a1:	push   0x6403997c
640063a6:	mov    ecx,esi
640063a8:	mov    BYTE PTR [esi+0x44],0x0
640063ac:	call   0x64005bc0
640063b1:	mov    ecx,DWORD PTR [esi]
640063b3:	cmp    BYTE PTR [ecx+0x45],0x0
640063b7:	jne    0x640063cc
640063b9:	mov    edx,DWORD PTR [ecx+0x8]
640063bc:	cmp    BYTE PTR [edx+0x44],bl
640063bf:	jne    0x640063e2
640063c1:	mov    eax,DWORD PTR [ecx]
640063c3:	cmp    BYTE PTR [eax+0x44],bl
640063c6:	jne    0x640063e2
640063c8:	mov    BYTE PTR [ecx+0x44],0x0
640063cc:	mov    ecx,DWORD PTR ds:0x64039980
640063d2:	mov    edi,esi
640063d4:	cmp    edi,DWORD PTR [ecx+0x4]
640063d7:	mov    esi,DWORD PTR [esi+0x4]
640063da:	jne    0x64006313
640063e0:	jmp    0x64006419
640063e2:	mov    edx,DWORD PTR [ecx]
640063e4:	cmp    BYTE PTR [edx+0x44],bl
640063e7:	jne    0x640063ff
640063e9:	mov    eax,DWORD PTR [ecx+0x8]
640063ec:	mov    BYTE PTR [eax+0x44],bl
640063ef:	push   0x6403997c
640063f4:	mov    BYTE PTR [ecx+0x44],0x0
640063f8:	call   0x64005b70
640063fd:	mov    ecx,DWORD PTR [esi]
640063ff:	mov    dl,BYTE PTR [esi+0x44]
64006402:	mov    BYTE PTR [ecx+0x44],dl
64006405:	mov    BYTE PTR [esi+0x44],bl
64006408:	mov    eax,DWORD PTR [ecx]
6400640a:	push   0x6403997c
6400640f:	mov    ecx,esi
64006411:	mov    BYTE PTR [eax+0x44],bl
64006414:	call   0x64005bc0
64006419:	mov    BYTE PTR [edi+0x44],bl
6400641c:	mov    edi,0x8
64006421:	cmp    DWORD PTR [ebp+0x40],edi
64006424:	jb     0x64006432
64006426:	mov    ecx,DWORD PTR [ebp+0x2c]
64006429:	push   ecx
6400642a:	call   0x64013604
6400642f:	add    esp,0x4
64006432:	xor    eax,eax
64006434:	mov    esi,0x7
64006439:	mov    DWORD PTR [ebp+0x40],esi
6400643c:	mov    DWORD PTR [ebp+0x3c],eax
6400643f:	mov    WORD PTR [ebp+0x2c],ax
64006443:	cmp    DWORD PTR [ebp+0x24],edi
64006446:	jb     0x64006456
64006448:	mov    edx,DWORD PTR [ebp+0x10]
6400644b:	push   edx
6400644c:	call   0x64013604
64006451:	add    esp,0x4
64006454:	xor    eax,eax
64006456:	mov    DWORD PTR [ebp+0x24],esi
64006459:	mov    DWORD PTR [ebp+0x20],eax
6400645c:	push   ebp
6400645d:	mov    WORD PTR [ebp+0x10],ax
64006461:	call   0x64013604
64006466:	add    esp,0x4
64006469:	cmp    DWORD PTR ds:0x64039984,0x0
64006470:	jbe    0x64006478
64006472:	sub    DWORD PTR ds:0x64039984,ebx
64006478:	mov    eax,DWORD PTR [esp+0x6c]
6400647c:	mov    ecx,DWORD PTR [esp+0x70]
64006480:	mov    edx,DWORD PTR [esp+0x74]
64006484:	mov    DWORD PTR [eax],ecx
64006486:	mov    DWORD PTR [eax+0x4],edx
64006489:	mov    ecx,DWORD PTR [esp+0x5c]
6400648d:	mov    DWORD PTR fs:0x0,ecx
64006494:	pop    ecx
64006495:	pop    edi
64006496:	pop    esi
64006497:	pop    ebp
64006498:	pop    ebx
64006499:	add    esp,0x54
6400649c:	ret    0xc
6400649f:	int3   
640064a0:	cmp    DWORD PTR [esi],0x0
640064a3:	jne    0x640064aa
640064a5:	call   0x64013e36
640064aa:	mov    eax,DWORD PTR [esi+0x4]
640064ad:	cmp    BYTE PTR [eax+0x45],0x0
640064b1:	je     0x640064c4
640064b3:	mov    eax,DWORD PTR [eax+0x8]
640064b6:	mov    DWORD PTR [esi+0x4],eax
640064b9:	cmp    BYTE PTR [eax+0x45],0x0
640064bd:	je     0x64006516
640064bf:	jmp    0x64013e36
640064c4:	mov    ecx,DWORD PTR [eax]
640064c6:	cmp    BYTE PTR [ecx+0x45],0x0
640064ca:	jne    0x640064e4
640064cc:	mov    eax,DWORD PTR [ecx+0x8]
640064cf:	cmp    BYTE PTR [eax+0x45],0x0
640064d3:	jne    0x640064e0
640064d5:	mov    ecx,eax
640064d7:	mov    eax,DWORD PTR [ecx+0x8]
640064da:	cmp    BYTE PTR [eax+0x45],0x0
640064de:	je     0x640064d5
640064e0:	mov    DWORD PTR [esi+0x4],ecx
640064e3:	ret    
640064e4:	mov    eax,DWORD PTR [eax+0x4]
640064e7:	cmp    BYTE PTR [eax+0x45],0x0
640064eb:	jne    0x64006505
640064ed:	lea    ecx,[ecx+0x0]
640064f0:	mov    ecx,DWORD PTR [esi+0x4]
640064f3:	cmp    ecx,DWORD PTR [eax]
640064f5:	jne    0x64006505
640064f7:	mov    DWORD PTR [esi+0x4],eax
640064fa:	mov    edx,eax
640064fc:	mov    eax,DWORD PTR [edx+0x4]
640064ff:	cmp    BYTE PTR [eax+0x45],0x0
64006503:	je     0x640064f0
64006505:	mov    ecx,DWORD PTR [esi+0x4]
64006508:	cmp    BYTE PTR [ecx+0x45],0x0
6400650c:	je     0x64006513
6400650e:	jmp    0x64013e36
64006513:	mov    DWORD PTR [esi+0x4],eax
64006516:	ret    
64006517:	int3   
64006518:	int3   
64006519:	int3   
6400651a:	int3   
6400651b:	int3   
6400651c:	int3   
6400651d:	int3   
6400651e:	int3   
6400651f:	int3   
64006520:	cmp    DWORD PTR [esi],0x0
64006523:	jne    0x6400652a
64006525:	call   0x64013e36
6400652a:	mov    eax,DWORD PTR [esi+0x4]
6400652d:	cmp    BYTE PTR [eax+0x45],0x0
64006531:	je     0x64006538
64006533:	jmp    0x64013e36
64006538:	mov    ecx,DWORD PTR [eax+0x8]
6400653b:	cmp    BYTE PTR [ecx+0x45],0x0
6400653f:	jne    0x6400655e
64006541:	mov    eax,DWORD PTR [ecx]
64006543:	cmp    BYTE PTR [eax+0x45],0x0
64006547:	jne    0x6400655a
64006549:	lea    esp,[esp+0x0]
64006550:	mov    ecx,eax
64006552:	mov    eax,DWORD PTR [ecx]
64006554:	cmp    BYTE PTR [eax+0x45],0x0
64006558:	je     0x64006550
6400655a:	mov    DWORD PTR [esi+0x4],ecx
6400655d:	ret    
6400655e:	mov    eax,DWORD PTR [eax+0x4]
64006561:	cmp    BYTE PTR [eax+0x45],0x0
64006565:	jne    0x6400657d
64006567:	mov    ecx,DWORD PTR [esi+0x4]
6400656a:	cmp    ecx,DWORD PTR [eax+0x8]
6400656d:	jne    0x6400657d
6400656f:	mov    DWORD PTR [esi+0x4],eax
64006572:	mov    edx,eax
64006574:	mov    eax,DWORD PTR [edx+0x4]
64006577:	cmp    BYTE PTR [eax+0x45],0x0
6400657b:	je     0x64006567
6400657d:	mov    DWORD PTR [esi+0x4],eax
64006580:	ret    
64006581:	int3   
64006582:	int3   
64006583:	int3   
64006584:	int3   
64006585:	int3   
64006586:	int3   
64006587:	int3   
64006588:	int3   
64006589:	int3   
6400658a:	int3   
6400658b:	int3   
6400658c:	int3   
6400658d:	int3   
6400658e:	int3   
6400658f:	int3   
64006590:	push   0xffffffff
64006592:	push   0x64023158
64006597:	mov    eax,fs:0x0
6400659d:	push   eax
6400659e:	push   ecx
6400659f:	push   ebx
640065a0:	push   esi
640065a1:	push   edi
640065a2:	mov    eax,ds:0x64037644
640065a7:	xor    eax,esp
640065a9:	push   eax
640065aa:	lea    eax,[esp+0x14]
640065ae:	mov    fs:0x0,eax
640065b4:	mov    esi,ecx
640065b6:	mov    DWORD PTR [esp+0x10],esi
640065ba:	mov    edi,DWORD PTR [esp+0x24]
640065be:	xor    ebx,ebx
640065c0:	push   0xffffffff
640065c2:	push   ebx
640065c3:	mov    DWORD PTR [esi+0x18],0xf
640065ca:	mov    DWORD PTR [esi+0x14],ebx
640065cd:	push   edi
640065ce:	mov    BYTE PTR [esi+0x4],bl
640065d1:	call   0x64003310
640065d6:	push   0xffffffff
640065d8:	lea    ecx,[esi+0x1c]
640065db:	mov    DWORD PTR [esp+0x20],ebx
640065df:	lea    eax,[edi+0x1c]
640065e2:	push   ebx
640065e3:	mov    DWORD PTR [ecx+0x18],0xf
640065ea:	mov    DWORD PTR [ecx+0x14],ebx
640065ed:	push   eax
640065ee:	mov    BYTE PTR [ecx+0x4],bl
640065f1:	call   0x64003310
640065f6:	mov    eax,esi
640065f8:	mov    ecx,DWORD PTR [esp+0x14]
640065fc:	mov    DWORD PTR fs:0x0,ecx
64006603:	pop    ecx
64006604:	pop    edi
64006605:	pop    esi
64006606:	pop    ebx
64006607:	add    esp,0x10
6400660a:	ret    0x4
6400660d:	int3   
6400660e:	int3   
6400660f:	int3   
64006610:	push   0xffffffff
64006612:	push   0x64023128
64006617:	mov    eax,fs:0x0
6400661d:	push   eax
6400661e:	push   esi
6400661f:	push   edi
64006620:	mov    eax,ds:0x64037644
64006625:	xor    eax,esp
64006627:	push   eax
64006628:	lea    eax,[esp+0xc]
6400662c:	mov    fs:0x0,eax
64006632:	mov    esi,DWORD PTR [esp+0x1c]
64006636:	xor    edi,edi
64006638:	push   0xffffffff
6400663a:	mov    DWORD PTR [esi+0x18],0x7
64006641:	mov    DWORD PTR [esi+0x14],edi
64006644:	push   edi
64006645:	mov    eax,ebx
64006647:	mov    ecx,esi
64006649:	mov    WORD PTR [esi+0x4],di
6400664d:	call   0x640046d0
64006652:	lea    ecx,[esi+0x1c]
64006655:	mov    DWORD PTR [esp+0x14],edi
64006659:	push   0xffffffff
6400665b:	mov    DWORD PTR [ecx+0x18],0x7
64006662:	mov    DWORD PTR [ecx+0x14],edi
64006665:	lea    eax,[ebx+0x1c]
64006668:	push   edi
64006669:	mov    WORD PTR [ecx+0x4],di
6400666d:	call   0x640046d0
64006672:	mov    eax,esi
64006674:	mov    ecx,DWORD PTR [esp+0xc]
64006678:	mov    DWORD PTR fs:0x0,ecx
6400667f:	pop    ecx
64006680:	pop    edi
64006681:	pop    esi
64006682:	add    esp,0xc
64006685:	ret    0x4
64006688:	int3   
64006689:	int3   
6400668a:	int3   
6400668b:	int3   
6400668c:	int3   
6400668d:	int3   
6400668e:	int3   
6400668f:	int3   
64006690:	push   ecx
64006691:	push   ebx
64006692:	push   esi
64006693:	mov    esi,DWORD PTR [esp+0x10]
64006697:	xor    ebx,ebx
64006699:	cmp    BYTE PTR [esi+0x45],bl
6400669c:	push   edi
6400669d:	mov    DWORD PTR [esp+0xc],ecx
640066a1:	mov    edi,esi
640066a3:	jne    0x64006706
640066a5:	push   ebp
640066a6:	lea    ebp,[ebx+0xf]
640066a9:	lea    esp,[esp+0x0]
640066b0:	mov    eax,DWORD PTR [edi+0x8]
640066b3:	mov    ecx,DWORD PTR [esp+0x10]
640066b7:	push   eax
640066b8:	call   0x64006690
640066bd:	cmp    DWORD PTR [esi+0x40],0x10
640066c1:	mov    edi,DWORD PTR [edi]
640066c3:	jb     0x640066d1
640066c5:	mov    ecx,DWORD PTR [esi+0x2c]
640066c8:	push   ecx
640066c9:	call   0x64013604
640066ce:	add    esp,0x4
640066d1:	mov    DWORD PTR [esi+0x40],ebp
640066d4:	mov    DWORD PTR [esi+0x3c],ebx
640066d7:	mov    BYTE PTR [esi+0x2c],bl
640066da:	cmp    DWORD PTR [esi+0x24],0x10
640066de:	jb     0x640066ec
640066e0:	mov    edx,DWORD PTR [esi+0x10]
640066e3:	push   edx
640066e4:	call   0x64013604
640066e9:	add    esp,0x4
640066ec:	mov    DWORD PTR [esi+0x24],ebp
640066ef:	mov    DWORD PTR [esi+0x20],ebx
640066f2:	push   esi
640066f3:	mov    BYTE PTR [esi+0x10],bl
640066f6:	call   0x64013604
640066fb:	add    esp,0x4
640066fe:	cmp    BYTE PTR [edi+0x45],bl
64006701:	mov    esi,edi
64006703:	je     0x640066b0
64006705:	pop    ebp
64006706:	pop    edi
64006707:	pop    esi
64006708:	pop    ebx
64006709:	pop    ecx
6400670a:	ret    0x4
6400670d:	int3   
6400670e:	int3   
6400670f:	int3   
64006710:	mov    eax,DWORD PTR [esp+0x4]
64006714:	mov    ecx,DWORD PTR [eax+0x8]
64006717:	cmp    BYTE PTR [ecx+0x45],0x0
6400671b:	jne    0x6400672b
6400671d:	lea    ecx,[ecx+0x0]
64006720:	mov    eax,ecx
64006722:	mov    ecx,DWORD PTR [eax+0x8]
64006725:	cmp    BYTE PTR [ecx+0x45],0x0
64006729:	je     0x64006720
6400672b:	ret    
6400672c:	int3   
6400672d:	int3   
6400672e:	int3   
6400672f:	int3   
64006730:	mov    eax,DWORD PTR [esp+0x4]
64006734:	mov    ecx,DWORD PTR [eax]
64006736:	cmp    BYTE PTR [ecx+0x45],0x0
6400673a:	jne    0x6400674a
6400673c:	lea    esp,[esp+0x0]
64006740:	mov    eax,ecx
64006742:	mov    ecx,DWORD PTR [eax]
64006744:	cmp    BYTE PTR [ecx+0x45],0x0
64006748:	je     0x64006740
6400674a:	ret    
6400674b:	int3   
6400674c:	int3   
6400674d:	int3   
6400674e:	int3   
6400674f:	int3   
64006750:	push   ecx
64006751:	push   ebx
64006752:	push   esi
64006753:	mov    esi,DWORD PTR [esp+0x10]
64006757:	xor    ebx,ebx
64006759:	cmp    BYTE PTR [esi+0x45],bl
6400675c:	push   edi
6400675d:	mov    DWORD PTR [esp+0xc],ecx
64006761:	mov    edi,esi
64006763:	jne    0x640067c8
64006765:	push   ebp
64006766:	lea    ebp,[ebx+0x7]
64006769:	lea    esp,[esp+0x0]
64006770:	mov    eax,DWORD PTR [edi+0x8]
64006773:	mov    ecx,DWORD PTR [esp+0x10]
64006777:	push   eax
64006778:	call   0x64006750
6400677d:	cmp    DWORD PTR [esi+0x40],0x8
64006781:	mov    edi,DWORD PTR [edi]
64006783:	jb     0x64006791
64006785:	mov    ecx,DWORD PTR [esi+0x2c]
64006788:	push   ecx
64006789:	call   0x64013604
6400678e:	add    esp,0x4
64006791:	mov    DWORD PTR [esi+0x40],ebp
64006794:	mov    DWORD PTR [esi+0x3c],ebx
64006797:	mov    WORD PTR [esi+0x2c],bx
6400679b:	cmp    DWORD PTR [esi+0x24],0x8
6400679f:	jb     0x640067ad
640067a1:	mov    edx,DWORD PTR [esi+0x10]
640067a4:	push   edx
640067a5:	call   0x64013604
640067aa:	add    esp,0x4
640067ad:	mov    DWORD PTR [esi+0x24],ebp
640067b0:	mov    DWORD PTR [esi+0x20],ebx
640067b3:	push   esi
640067b4:	mov    WORD PTR [esi+0x10],bx
640067b8:	call   0x64013604
640067bd:	add    esp,0x4
640067c0:	cmp    BYTE PTR [edi+0x45],bl
640067c3:	mov    esi,edi
640067c5:	je     0x64006770
640067c7:	pop    ebp
640067c8:	pop    edi
640067c9:	pop    esi
640067ca:	pop    ebx
640067cb:	pop    ecx
640067cc:	ret    0x4
640067cf:	int3   
640067d0:	mov    ecx,DWORD PTR [eax+0x8]
640067d3:	cmp    BYTE PTR [ecx+0x45],0x0
640067d7:	jne    0x640067eb
640067d9:	lea    esp,[esp+0x0]
640067e0:	mov    eax,ecx
640067e2:	mov    ecx,DWORD PTR [eax+0x8]
640067e5:	cmp    BYTE PTR [ecx+0x45],0x0
640067e9:	je     0x640067e0
640067eb:	ret    
640067ec:	int3   
640067ed:	int3   
640067ee:	int3   
640067ef:	int3   
640067f0:	mov    eax,DWORD PTR [esp+0x8]
640067f4:	mov    ecx,DWORD PTR [esp+0xc]
640067f8:	or     edx,0xffffffff
640067fb:	sub    edx,eax
640067fd:	cmp    edx,ecx
640067ff:	jae    0x64006807
64006801:	mov    eax,0x80070057
64006806:	ret    
64006807:	add    eax,ecx
64006809:	mov    ecx,DWORD PTR [esp+0x4]
6400680d:	mov    DWORD PTR [ecx],eax
6400680f:	xor    eax,eax
64006811:	ret    
64006812:	int3   
64006813:	int3   
64006814:	int3   
64006815:	int3   
64006816:	int3   
64006817:	int3   
64006818:	int3   
64006819:	int3   
6400681a:	int3   
6400681b:	int3   
6400681c:	int3   
6400681d:	int3   
6400681e:	int3   
6400681f:	int3   
64006820:	push   0xffffffff
64006822:	push   0x64023388
64006827:	mov    eax,fs:0x0
6400682d:	push   eax
6400682e:	sub    esp,0x20
64006831:	push   ebx
64006832:	push   ebp
64006833:	mov    eax,ds:0x64037644
64006838:	xor    eax,esp
6400683a:	push   eax
6400683b:	lea    eax,[esp+0x2c]
6400683f:	mov    fs:0x0,eax
64006845:	mov    eax,DWORD PTR [esp+0x3c]
64006849:	xor    ebx,ebx
6400684b:	push   0xffffffff
6400684d:	push   ebx
6400684e:	push   eax
6400684f:	lea    ecx,[esp+0x1c]
64006853:	mov    DWORD PTR [esp+0x18],ebx
64006857:	mov    DWORD PTR [esp+0x34],0xf
6400685f:	mov    DWORD PTR [esp+0x30],ebx
64006863:	mov    BYTE PTR [esp+0x20],bl
64006867:	call   0x64003310
6400686c:	mov    eax,edi
6400686e:	mov    DWORD PTR [esp+0x34],ebx
64006872:	lea    ebp,[eax+0x1]
64006875:	mov    cl,BYTE PTR [eax]
64006877:	add    eax,0x1
6400687a:	cmp    cl,bl
6400687c:	jne    0x64006875
6400687e:	sub    eax,ebp
64006880:	push   eax
64006881:	push   edi
64006882:	lea    eax,[esp+0x18]
64006886:	call   0x64002960
6400688b:	push   0xffffffff
6400688d:	push   ebx
6400688e:	mov    DWORD PTR [esi+0x18],0xf
64006895:	mov    DWORD PTR [esi+0x14],ebx
64006898:	push   eax
64006899:	mov    ecx,esi
6400689b:	mov    BYTE PTR [esi+0x4],bl
6400689e:	call   0x64003310
640068a3:	cmp    DWORD PTR [esp+0x28],0x10
640068a8:	jb     0x640068b7
640068aa:	mov    ecx,DWORD PTR [esp+0x14]
640068ae:	push   ecx
640068af:	call   0x64013604
640068b4:	add    esp,0x4
640068b7:	mov    eax,esi
640068b9:	mov    ecx,DWORD PTR [esp+0x2c]
640068bd:	mov    DWORD PTR fs:0x0,ecx
640068c4:	pop    ecx
640068c5:	pop    ebp
640068c6:	pop    ebx
640068c7:	add    esp,0x2c
640068ca:	ret    
640068cb:	int3   
640068cc:	int3   
640068cd:	int3   
640068ce:	int3   
640068cf:	int3   
640068d0:	mov    eax,DWORD PTR [esp+0x4]
640068d4:	push   esi
640068d5:	push   eax
640068d6:	mov    esi,ecx
640068d8:	call   0x64013680
640068dd:	mov    DWORD PTR [esi],0x640242a4
640068e3:	mov    eax,esi
640068e5:	pop    esi
640068e6:	ret    0x4
640068e9:	int3   
640068ea:	int3   
640068eb:	int3   
640068ec:	int3   
640068ed:	int3   
640068ee:	int3   
640068ef:	int3   
640068f0:	push   ebx
640068f1:	push   esi
640068f2:	mov    esi,eax
640068f4:	mov    eax,DWORD PTR [ecx+0x14]
640068f7:	cmp    eax,esi
640068f9:	jae    0x640068fd
640068fb:	mov    esi,eax
640068fd:	cmp    esi,edi
640068ff:	mov    edx,esi
64006901:	jb     0x64006905
64006903:	mov    edx,edi
64006905:	cmp    DWORD PTR [ecx+0x18],0x8
64006909:	jb     0x64006910
6400690b:	mov    eax,DWORD PTR [ecx+0x4]
6400690e:	jmp    0x64006913
64006910:	lea    eax,[ecx+0x4]
64006913:	test   edx,edx
64006915:	mov    ecx,DWORD PTR [esp+0xc]
64006919:	jbe    0x64006945
6400691b:	jmp    0x64006920
6400691d:	lea    ecx,[ecx+0x0]
64006920:	mov    bx,WORD PTR [eax]
64006923:	cmp    bx,WORD PTR [ecx]
64006926:	jne    0x64006935
64006928:	add    eax,0x2
6400692b:	add    ecx,0x2
6400692e:	sub    edx,0x1
64006931:	jne    0x64006920
64006933:	jmp    0x64006945
64006935:	movzx  eax,WORD PTR [eax]
64006938:	cmp    ax,WORD PTR [ecx]
6400693b:	sbb    eax,eax
6400693d:	and    eax,0xfffffffe
64006940:	add    eax,0x1
64006943:	jne    0x64006958
64006945:	cmp    esi,edi
64006947:	jae    0x64006951
64006949:	pop    esi
6400694a:	or     eax,0xffffffff
6400694d:	pop    ebx
6400694e:	ret    0x4
64006951:	xor    eax,eax
64006953:	cmp    esi,edi
64006955:	setne  al
64006958:	pop    esi
64006959:	pop    ebx
6400695a:	ret    0x4
6400695d:	int3   
6400695e:	int3   
6400695f:	int3   
64006960:	push   ebp
64006961:	mov    ebp,esp
64006963:	and    esp,0xfffffff8
64006966:	push   0xffffffff
64006968:	push   0x64023c28
6400696d:	mov    eax,fs:0x0
64006973:	push   eax
64006974:	sub    esp,0x14
64006977:	push   ebx
64006978:	push   esi
64006979:	mov    eax,ds:0x64037644
6400697e:	xor    eax,esp
64006980:	push   eax
64006981:	lea    eax,[esp+0x20]
64006985:	mov    fs:0x0,eax
6400698b:	mov    eax,DWORD PTR [ebp+0xc]
6400698e:	push   eax
6400698f:	lea    ecx,[esp+0x14]
64006993:	push   0x4
64006995:	xor    esi,esi
64006997:	push   ecx
64006998:	mov    DWORD PTR [esp+0x1c],esi
6400699c:	call   0x640020b0
640069a1:	add    esp,0xc
640069a4:	lea    edx,[esp+0x18]
640069a8:	push   edx
640069a9:	mov    DWORD PTR [esp+0x2c],esi
640069ad:	call   0x64001be0
640069b2:	add    esp,0x4
640069b5:	lea    ecx,[esp+0x10]
640069b9:	push   ecx
640069ba:	lea    edx,[esp+0x18]
640069be:	push   edx
640069bf:	mov    ebx,eax
640069c1:	mov    BYTE PTR [esp+0x30],0x1
640069c6:	call   0x64006b70
640069cb:	mov    esi,eax
640069cd:	push   0x64029970
640069d2:	push   0x4
640069d4:	mov    ecx,0x64029928
640069d9:	mov    BYTE PTR [esp+0x38],0x2
640069de:	call   0x64003030
640069e3:	push   esi
640069e4:	mov    esi,DWORD PTR [ebp+0x8]
640069e7:	push   esi
640069e8:	mov    ebx,eax
640069ea:	call   0x64002c90
640069ef:	mov    BYTE PTR [esp+0x40],0x1
640069f4:	mov    eax,DWORD PTR [esp+0x2c]
640069f8:	add    eax,0xfffffff0
640069fb:	add    esp,0x18
640069fe:	lea    ecx,[eax+0xc]
64006a01:	or     edx,0xffffffff
64006a04:	lock xadd DWORD PTR [ecx],edx
64006a08:	dec    edx
64006a09:	test   edx,edx
64006a0b:	jg     0x64006a17
64006a0d:	mov    ecx,DWORD PTR [eax]
64006a0f:	mov    edx,DWORD PTR [ecx]
64006a11:	push   eax
64006a12:	mov    eax,DWORD PTR [edx+0x4]
64006a15:	call   eax
64006a17:	mov    BYTE PTR [esp+0x28],0x0
64006a1c:	mov    eax,DWORD PTR [esp+0x18]
64006a20:	add    eax,0xfffffff0
64006a23:	lea    ecx,[eax+0xc]
64006a26:	or     edx,0xffffffff
64006a29:	lock xadd DWORD PTR [ecx],edx
64006a2d:	dec    edx
64006a2e:	test   edx,edx
64006a30:	jg     0x64006a3c
64006a32:	mov    ecx,DWORD PTR [eax]
64006a34:	mov    edx,DWORD PTR [ecx]
64006a36:	push   eax
64006a37:	mov    eax,DWORD PTR [edx+0x4]
64006a3a:	call   eax
64006a3c:	mov    DWORD PTR [esp+0x28],0xffffffff
64006a44:	mov    eax,DWORD PTR [esp+0x10]
64006a48:	add    eax,0xfffffff0
64006a4b:	lea    ecx,[eax+0xc]
64006a4e:	or     edx,0xffffffff
64006a51:	lock xadd DWORD PTR [ecx],edx
64006a55:	dec    edx
64006a56:	test   edx,edx
64006a58:	jg     0x64006a64
64006a5a:	mov    ecx,DWORD PTR [eax]
64006a5c:	mov    edx,DWORD PTR [ecx]
64006a5e:	push   eax
64006a5f:	mov    eax,DWORD PTR [edx+0x4]
64006a62:	call   eax
64006a64:	mov    eax,esi
64006a66:	mov    ecx,DWORD PTR [esp+0x20]
64006a6a:	mov    DWORD PTR fs:0x0,ecx
64006a71:	pop    ecx
64006a72:	pop    esi
64006a73:	pop    ebx
64006a74:	mov    esp,ebp
64006a76:	pop    ebp
64006a77:	ret    
64006a78:	int3   
64006a79:	int3   
64006a7a:	int3   
64006a7b:	int3   
64006a7c:	int3   
64006a7d:	int3   
64006a7e:	int3   
64006a7f:	int3   
64006a80:	push   0xffffffff
64006a82:	push   0x64023360
64006a87:	mov    eax,fs:0x0
64006a8d:	push   eax
64006a8e:	sub    esp,0xc
64006a91:	push   ebx
64006a92:	push   ebp
64006a93:	push   esi
64006a94:	push   edi
64006a95:	mov    eax,ds:0x64037644
64006a9a:	xor    eax,esp
64006a9c:	push   eax
64006a9d:	lea    eax,[esp+0x20]
64006aa1:	mov    fs:0x0,eax
64006aa7:	mov    edi,ecx
64006aa9:	mov    ebp,DWORD PTR [esp+0x30]
64006aad:	xor    ebx,ebx
64006aaf:	push   edi
64006ab0:	mov    DWORD PTR [esp+0x34],ebx
64006ab4:	call   0x64012f5a
64006ab9:	mov    esi,eax
64006abb:	mov    DWORD PTR [esp+0x1c],esi
64006abf:	mov    eax,DWORD PTR [esp+0x38]
64006ac3:	push   edi
64006ac4:	push   eax
64006ac5:	push   esi
64006ac6:	mov    DWORD PTR [esp+0x38],ebx
64006aca:	call   0x640151a0
64006acf:	add    esp,0x10
64006ad2:	xor    ecx,ecx
64006ad4:	xor    edx,edx
64006ad6:	cmp    edi,ebx
64006ad8:	je     0x64006af9
64006ada:	mov    eax,DWORD PTR [esp+0x38]
64006ade:	mov    al,BYTE PTR [edx+eax*1]
64006ae1:	xor    BYTE PTR [ecx+esi*1],al
64006ae4:	lea    eax,[edx+0x1]
64006ae7:	xor    edx,edx
64006ae9:	mov    ebx,0x25
64006aee:	add    ecx,0x1
64006af1:	div    ebx
64006af3:	cmp    ecx,edi
64006af5:	jne    0x64006ada
64006af7:	xor    ebx,ebx
64006af9:	lea    ecx,[esp+0x14]
64006afd:	push   ecx
64006afe:	push   edi
64006aff:	lea    edx,[esp+0x38]
64006b03:	push   esi
64006b04:	push   edx
64006b05:	call   0x64001860
64006b0a:	mov    ecx,DWORD PTR [eax]
64006b0c:	mov    edi,ecx
64006b0e:	mov    DWORD PTR [eax],ebx
64006b10:	mov    DWORD PTR [esp+0x2c],edi
64006b14:	mov    BYTE PTR [esp+0x38],0x1
64006b19:	mov    edx,DWORD PTR [esp+0x40]
64006b1d:	push   edx
64006b1e:	call   0x64013604
64006b23:	mov    eax,DWORD PTR [esp+0x28]
64006b27:	add    esp,0x14
64006b2a:	push   eax
64006b2b:	mov    DWORD PTR [ebp+0x18],0xf
64006b32:	mov    DWORD PTR [ebp+0x14],ebx
64006b35:	push   edi
64006b36:	mov    ecx,ebp
64006b38:	mov    BYTE PTR [ebp+0x4],bl
64006b3b:	call   0x640033f0
64006b40:	push   edi
64006b41:	call   0x64013604
64006b46:	push   esi
64006b47:	call   0x64013604
64006b4c:	add    esp,0x8
64006b4f:	mov    eax,ebp
64006b51:	mov    ecx,DWORD PTR [esp+0x20]
64006b55:	mov    DWORD PTR fs:0x0,ecx
64006b5c:	pop    ecx
64006b5d:	pop    edi
64006b5e:	pop    esi
64006b5f:	pop    ebp
64006b60:	pop    ebx
64006b61:	add    esp,0x18
64006b64:	ret    
64006b65:	int3   
64006b66:	int3   
64006b67:	int3   
64006b68:	int3   
64006b69:	int3   
64006b6a:	int3   
64006b6b:	int3   
64006b6c:	int3   
64006b6d:	int3   
64006b6e:	int3   
64006b6f:	int3   
64006b70:	push   0xffffffff
64006b72:	push   0x64023329
64006b77:	mov    eax,fs:0x0
64006b7d:	push   eax
64006b7e:	push   ecx
64006b7f:	push   esi
64006b80:	push   edi
64006b81:	mov    eax,ds:0x64037644
64006b86:	xor    eax,esp
64006b88:	push   eax
64006b89:	lea    eax,[esp+0x10]
64006b8d:	mov    fs:0x0,eax
64006b93:	mov    esi,DWORD PTR [esp+0x20]
64006b97:	xor    edi,edi
64006b99:	mov    DWORD PTR [esp+0x18],edi
64006b9d:	mov    DWORD PTR [esp+0xc],edi
64006ba1:	mov    eax,DWORD PTR [ebx]
64006ba3:	mov    ecx,DWORD PTR [eax-0x10]
64006ba6:	cmp    ecx,edi
64006ba8:	je     0x64006bb5
64006baa:	mov    edx,DWORD PTR [ecx]
64006bac:	mov    eax,DWORD PTR [edx+0x10]
64006baf:	call   eax
64006bb1:	cmp    eax,edi
64006bb3:	jne    0x64006bc5
64006bb5:	mov    edx,DWORD PTR ds:0x64038e64
64006bbb:	mov    eax,DWORD PTR [edx+0x10]
64006bbe:	mov    ecx,0x64038e64
64006bc3:	call   eax
64006bc5:	xor    ecx,ecx
64006bc7:	cmp    eax,edi
64006bc9:	setne  cl
64006bcc:	cmp    ecx,edi
64006bce:	jne    0x64006bda
64006bd0:	push   0x80004005
64006bd5:	call   0x64001040
64006bda:	mov    edx,DWORD PTR [eax]
64006bdc:	mov    ecx,eax
64006bde:	mov    eax,DWORD PTR [edx+0xc]
64006be1:	call   eax
64006be3:	add    eax,0x10
64006be6:	mov    DWORD PTR [esi],eax
64006be8:	mov    ecx,DWORD PTR [esp+0x24]
64006bec:	mov    DWORD PTR [esp+0x18],edi
64006bf0:	mov    ecx,DWORD PTR [ecx]
64006bf2:	mov    edi,DWORD PTR [ecx-0xc]
64006bf5:	mov    edx,DWORD PTR [ebx]
64006bf7:	mov    eax,DWORD PTR [edx-0xc]
64006bfa:	push   edi
64006bfb:	push   ecx
64006bfc:	push   edx
64006bfd:	push   esi
64006bfe:	mov    DWORD PTR [esp+0x1c],0x1
64006c06:	call   0x640036f0
64006c0b:	add    esp,0x10
64006c0e:	mov    eax,esi
64006c10:	mov    ecx,DWORD PTR [esp+0x10]
64006c14:	mov    DWORD PTR fs:0x0,ecx
64006c1b:	pop    ecx
64006c1c:	pop    edi
64006c1d:	pop    esi
64006c1e:	add    esp,0x10
64006c21:	ret    
64006c22:	int3   
64006c23:	int3   
64006c24:	int3   
64006c25:	int3   
64006c26:	int3   
64006c27:	int3   
64006c28:	int3   
64006c29:	int3   
64006c2a:	int3   
64006c2b:	int3   
64006c2c:	int3   
64006c2d:	int3   
64006c2e:	int3   
64006c2f:	int3   
64006c30:	push   ebp
64006c31:	mov    ebp,esp
64006c33:	and    esp,0xfffffff8
64006c36:	sub    esp,0x34
64006c39:	xor    eax,eax
64006c3b:	push   ebx
64006c3c:	mov    DWORD PTR [esp+0x24],eax
64006c40:	mov    DWORD PTR [esp+0x28],eax
64006c44:	mov    DWORD PTR [esp+0x2c],eax
64006c48:	mov    DWORD PTR [esp+0x30],eax
64006c4c:	mov    DWORD PTR [esp+0x34],eax
64006c50:	mov    eax,DWORD PTR [ebp+0xc]
64006c53:	push   esi
64006c54:	push   edi
64006c55:	mov    edi,DWORD PTR [ebp+0x8]
64006c58:	add    eax,0xc
64006c5b:	mov    DWORD PTR [esp+0xc],edi
64006c5f:	mov    DWORD PTR [esp+0x18],eax
64006c63:	mov    eax,0x14
64006c68:	lea    ecx,[esp+0x2c]
64006c6c:	mov    edx,edi
64006c6e:	mov    edi,edi
64006c70:	mov    esi,DWORD PTR [edx]
64006c72:	cmp    esi,DWORD PTR [ecx]
64006c74:	jne    0x64006c88
64006c76:	sub    eax,0x4
64006c79:	add    ecx,0x4
64006c7c:	add    edx,0x4
64006c7f:	cmp    eax,0x4
64006c82:	jae    0x64006c70
64006c84:	test   eax,eax
64006c86:	je     0x64006ce5
64006c88:	movzx  esi,BYTE PTR [edx]
64006c8b:	movzx  ebx,BYTE PTR [ecx]
64006c8e:	sub    esi,ebx
64006c90:	jne    0x64006cd7
64006c92:	sub    eax,0x1
64006c95:	add    ecx,0x1
64006c98:	add    edx,0x1
64006c9b:	test   eax,eax
64006c9d:	je     0x64006ce5
64006c9f:	movzx  esi,BYTE PTR [edx]
64006ca2:	movzx  ebx,BYTE PTR [ecx]
64006ca5:	sub    esi,ebx
64006ca7:	jne    0x64006cd7
64006ca9:	sub    eax,0x1
64006cac:	add    ecx,0x1
64006caf:	add    edx,0x1
64006cb2:	test   eax,eax
64006cb4:	je     0x64006ce5
64006cb6:	movzx  esi,BYTE PTR [edx]
64006cb9:	movzx  ebx,BYTE PTR [ecx]
64006cbc:	sub    esi,ebx
64006cbe:	jne    0x64006cd7
64006cc0:	sub    eax,0x1
64006cc3:	add    ecx,0x1
64006cc6:	add    edx,0x1
64006cc9:	test   eax,eax
64006ccb:	je     0x64006ce5
64006ccd:	movzx  esi,BYTE PTR [edx]
64006cd0:	movzx  ecx,BYTE PTR [ecx]
64006cd3:	sub    esi,ecx
64006cd5:	je     0x64006ce5
64006cd7:	test   esi,esi
64006cd9:	mov    eax,0x1
64006cde:	jg     0x64006ce7
64006ce0:	or     eax,0xffffffff
64006ce3:	jmp    0x64006ce7
64006ce5:	xor    eax,eax
64006ce7:	test   eax,eax
64006ce9:	je     0x64006dcd
64006cef:	mov    eax,DWORD PTR [ebp+0xc]
64006cf2:	sub    eax,DWORD PTR [ebp+0x8]
64006cf5:	cdq    
64006cf6:	mov    ebx,eax
64006cf8:	mov    DWORD PTR [esp+0x24],edx
64006cfc:	mov    edx,DWORD PTR [esp+0x18]
64006d00:	mov    eax,DWORD PTR [edx]
64006d02:	lea    esi,[eax+ebx*1+0x64000000]
64006d09:	push   esi
64006d0a:	mov    DWORD PTR [esp+0x24],ebx
64006d0e:	call   DWORD PTR ds:0x6402409c
64006d14:	test   eax,eax
64006d16:	mov    DWORD PTR [esp+0x1c],eax
64006d1a:	jne    0x64006d27
64006d1c:	push   esi
64006d1d:	call   DWORD PTR ds:0x640240a0
64006d23:	mov    DWORD PTR [esp+0x1c],eax
64006d27:	mov    edi,DWORD PTR [edi]
64006d29:	mov    ecx,DWORD PTR [esp+0xc]
64006d2d:	mov    esi,DWORD PTR [ecx+0x10]
64006d30:	add    edi,0x64000000
64006d36:	add    esi,0x64000000
64006d3c:	cmp    DWORD PTR [edi],0x0
64006d3f:	lea    edx,[ebx+edi*1]
64006d42:	mov    DWORD PTR [esp+0x14],edx
64006d46:	je     0x64006dae
64006d48:	mov    eax,DWORD PTR [esp+0x14]
64006d4c:	mov    eax,DWORD PTR [eax]
64006d4e:	test   eax,eax
64006d50:	je     0x64006d9e
64006d52:	js     0x64006d9e
64006d54:	mov    edx,DWORD PTR [esp+0x1c]
64006d58:	lea    ecx,[eax+ebx*1+0x64000002]
64006d5f:	push   ecx
64006d60:	push   edx
64006d61:	call   DWORD PTR ds:0x64024098
64006d67:	mov    ebx,eax
64006d69:	xor    eax,eax
64006d6b:	mov    ecx,ebx
64006d6d:	or     ecx,eax
64006d6f:	je     0x64006dc4
64006d71:	lea    edx,[esp+0x10]
64006d75:	push   edx
64006d76:	push   0x40
64006d78:	push   0x4
64006d7a:	push   esi
64006d7b:	mov    DWORD PTR [esp+0x20],eax
64006d7f:	call   DWORD PTR ds:0x640399cc
64006d85:	mov    ecx,DWORD PTR [esp+0x10]
64006d89:	lea    eax,[esp+0x10]
64006d8d:	push   eax
64006d8e:	push   ecx
64006d8f:	push   0x4
64006d91:	push   esi
64006d92:	mov    DWORD PTR [esi],ebx
64006d94:	call   DWORD PTR ds:0x640399cc
64006d9a:	mov    ebx,DWORD PTR [esp+0x20]
64006d9e:	add    DWORD PTR [esp+0x14],0x4
64006da3:	add    edi,0x4
64006da6:	add    esi,0x4
64006da9:	cmp    DWORD PTR [edi],0x0
64006dac:	jne    0x64006d48
64006dae:	mov    eax,0x14
64006db3:	add    DWORD PTR [esp+0xc],eax
64006db7:	add    DWORD PTR [esp+0x18],eax
64006dbb:	mov    edi,DWORD PTR [esp+0xc]
64006dbf:	jmp    0x64006c63
64006dc4:	xor    al,al
64006dc6:	pop    edi
64006dc7:	pop    esi
64006dc8:	pop    ebx
64006dc9:	mov    esp,ebp
64006dcb:	pop    ebp
64006dcc:	ret    
64006dcd:	pop    edi
64006dce:	pop    esi
64006dcf:	mov    al,0x1
64006dd1:	pop    ebx
64006dd2:	mov    esp,ebp
64006dd4:	pop    ebp
64006dd5:	ret    
64006dd6:	int3   
64006dd7:	int3   
64006dd8:	int3   
64006dd9:	int3   
64006dda:	int3   
64006ddb:	int3   
64006ddc:	int3   
64006ddd:	int3   
64006dde:	int3   
64006ddf:	int3   
64006de0:	mov    eax,0x853c
64006de5:	call   0x64017d00
64006dea:	mov    eax,ds:0x64037644
64006def:	xor    eax,esp
64006df1:	mov    DWORD PTR [esp+0x8538],eax
64006df8:	push   ebx
64006df9:	push   esi
64006dfa:	push   edi
64006dfb:	mov    edi,DWORD PTR [esp+0x854c]
64006e02:	push   0x6402a72c
64006e07:	push   0x6402a73c
64006e0c:	call   DWORD PTR ds:0x6402409c
64006e12:	push   eax
64006e13:	call   DWORD PTR ds:0x64024098
64006e19:	mov    ds:0x640399cc,eax
64006e1e:	mov    eax,ds:0x6400003c
64006e23:	mov    eax,DWORD PTR [eax+0x64000080]
64006e29:	test   eax,eax
64006e2b:	je     0x64006e39
64006e2d:	lea    ecx,[eax+0x64000000]
64006e33:	mov    DWORD PTR [esp+0x10],ecx
64006e37:	jmp    0x64006e41
64006e39:	mov    DWORD PTR [esp+0x10],0x0
64006e41:	push   0x640299c4
64006e46:	push   0x2711
64006e4b:	push   edi
64006e4c:	call   DWORD PTR ds:0x64024020
64006e52:	mov    esi,eax
64006e54:	test   esi,esi
64006e56:	je     0x64006f05
64006e5c:	push   esi
64006e5d:	push   edi
64006e5e:	call   DWORD PTR ds:0x6402401c
64006e64:	mov    ebx,eax
64006e66:	test   ebx,ebx
64006e68:	je     0x64006f05
64006e6e:	push   esi
64006e6f:	push   edi
64006e70:	call   DWORD PTR ds:0x64024014
64006e76:	push   ebx
64006e77:	mov    esi,eax
64006e79:	call   DWORD PTR ds:0x64024018
64006e7f:	mov    ebx,eax
64006e81:	mov    eax,0x4
64006e86:	mov    ecx,0x6402a728
64006e8b:	mov    edx,ebx
64006e8d:	push   ebp
64006e8e:	mov    edi,edi
64006e90:	mov    edi,DWORD PTR [edx]
64006e92:	cmp    edi,DWORD PTR [ecx]
64006e94:	jne    0x64006ea8
64006e96:	sub    eax,0x4
64006e99:	add    ecx,0x4
64006e9c:	add    edx,0x4
64006e9f:	cmp    eax,0x4
64006ea2:	jae    0x64006e90
64006ea4:	test   eax,eax
64006ea6:	je     0x64006f1f
64006ea8:	movzx  edi,BYTE PTR [edx]
64006eab:	movzx  ebp,BYTE PTR [ecx]
64006eae:	sub    edi,ebp
64006eb0:	jne    0x64006ef7
64006eb2:	sub    eax,0x1
64006eb5:	add    ecx,0x1
64006eb8:	add    edx,0x1
64006ebb:	test   eax,eax
64006ebd:	je     0x64006f1f
64006ebf:	movzx  edi,BYTE PTR [edx]
64006ec2:	movzx  ebp,BYTE PTR [ecx]
64006ec5:	sub    edi,ebp
64006ec7:	jne    0x64006ef7
64006ec9:	sub    eax,0x1
64006ecc:	add    ecx,0x1
64006ecf:	add    edx,0x1
64006ed2:	test   eax,eax
64006ed4:	je     0x64006f1f
64006ed6:	movzx  edi,BYTE PTR [edx]
64006ed9:	movzx  ebp,BYTE PTR [ecx]
64006edc:	sub    edi,ebp
64006ede:	jne    0x64006ef7
64006ee0:	sub    eax,0x1
64006ee3:	add    ecx,0x1
64006ee6:	add    edx,0x1
64006ee9:	test   eax,eax
64006eeb:	je     0x64006f1f
64006eed:	movzx  edi,BYTE PTR [edx]
64006ef0:	movzx  edx,BYTE PTR [ecx]
64006ef3:	sub    edi,edx
64006ef5:	je     0x64006f1f
64006ef7:	test   edi,edi
64006ef9:	mov    eax,0x1
64006efe:	jg     0x64006f21
64006f00:	or     eax,0xffffffff
64006f03:	jmp    0x64006f21
64006f05:	pop    edi
64006f06:	pop    esi
64006f07:	xor    al,al
64006f09:	pop    ebx
64006f0a:	mov    ecx,DWORD PTR [esp+0x8538]
64006f11:	xor    ecx,esp
64006f13:	call   0x64013cc6
64006f18:	add    esp,0x853c
64006f1e:	ret    
64006f1f:	xor    eax,eax
64006f21:	test   eax,eax
64006f23:	pop    ebp
64006f24:	jne    0x64006f05
64006f26:	mov    edi,DWORD PTR [ebx+0x4]
64006f29:	push   edi
64006f2a:	lea    eax,[ebx+0x8]
64006f2d:	push   eax
64006f2e:	lea    ecx,[esp+0x1c]
64006f32:	push   ecx
64006f33:	call   0x640151a0
64006f38:	sub    esi,edi
64006f3a:	sub    esi,0x8
64006f3d:	push   esi
64006f3e:	lea    edx,[edi+ebx*1+0x8]
64006f42:	push   edx
64006f43:	lea    eax,[esp+0x1028]
64006f4a:	push   eax
64006f4b:	call   0x640151a0
64006f50:	add    esp,0x18
64006f53:	xor    ecx,ecx
64006f55:	xor    edx,edx
64006f57:	test   esi,esi
64006f59:	je     0x64006f79
64006f5b:	jmp    0x64006f60
64006f5d:	lea    ecx,[ecx+0x0]
64006f60:	mov    al,BYTE PTR [esp+edx*1+0x14]
64006f64:	xor    BYTE PTR [esp+ecx*1+0x1014],al
64006f6b:	lea    eax,[edx+0x1]
64006f6e:	xor    edx,edx
64006f70:	add    ecx,0x1
64006f73:	div    edi
64006f75:	cmp    ecx,esi
64006f77:	jne    0x64006f60
64006f79:	mov    edi,DWORD PTR [esp+0x10]
64006f7d:	lea    ecx,[esp+0xc]
64006f81:	push   ecx
64006f82:	push   0x40
64006f84:	push   esi
64006f85:	push   edi
64006f86:	mov    DWORD PTR [esp+0x1c],0x0
64006f8e:	call   DWORD PTR ds:0x640399cc
64006f94:	lea    edx,[esp+0x1014]
64006f9b:	push   edx
64006f9c:	push   edi
64006f9d:	call   0x64006c30
64006fa2:	mov    ecx,DWORD PTR [esp+0x14]
64006fa6:	add    esp,0x8
64006fa9:	mov    bl,al
64006fab:	lea    eax,[esp+0xc]
64006faf:	push   eax
64006fb0:	push   ecx
64006fb1:	push   esi
64006fb2:	push   edi
64006fb3:	call   DWORD PTR ds:0x640399cc
64006fb9:	mov    ecx,DWORD PTR [esp+0x8544]
64006fc0:	pop    edi
64006fc1:	pop    esi
64006fc2:	mov    al,bl
64006fc4:	pop    ebx
64006fc5:	xor    ecx,esp
64006fc7:	call   0x64013cc6
64006fcc:	add    esp,0x853c
64006fd2:	ret    
64006fd3:	int3   
64006fd4:	int3   
64006fd5:	int3   
64006fd6:	int3   
64006fd7:	int3   
64006fd8:	int3   
64006fd9:	int3   
64006fda:	int3   
64006fdb:	int3   
64006fdc:	int3   
64006fdd:	int3   
64006fde:	int3   
64006fdf:	int3   
64006fe0:	mov    eax,ecx
64006fe2:	mov    cl,BYTE PTR [esp+0x8]
64006fe6:	mov    BYTE PTR [eax],cl
64006fe8:	mov    DWORD PTR [eax+0x4],0xffffffff
64006fef:	mov    BYTE PTR [eax+0x8],0x1
64006ff3:	ret    0x8
64006ff6:	int3   
64006ff7:	int3   
64006ff8:	int3   
64006ff9:	int3   
64006ffa:	int3   
64006ffb:	int3   
64006ffc:	int3   
64006ffd:	int3   
64006ffe:	int3   
64006fff:	int3   
64007000:	push   esi
64007001:	mov    esi,ecx
64007003:	push   edi
64007004:	mov    edi,DWORD PTR [esi+0x4]
64007007:	test   edi,edi
64007009:	je     0x64007023
6400700b:	push   ebx
6400700c:	call   DWORD PTR ds:0x64024068
64007012:	push   edi
64007013:	mov    ebx,eax
64007015:	call   DWORD PTR ds:0x64024074
6400701b:	push   ebx
6400701c:	call   DWORD PTR ds:0x64024070
64007022:	pop    ebx
64007023:	pop    edi
64007024:	mov    DWORD PTR [esi+0x4],0x0
6400702b:	pop    esi
6400702c:	ret    
6400702d:	int3   
6400702e:	int3   
6400702f:	int3   
64007030:	push   ebp
64007031:	mov    ebp,esp
64007033:	and    esp,0xfffffff8
64007036:	push   0xffffffff
64007038:	push   0x640239d8
6400703d:	mov    eax,fs:0x0
64007043:	push   eax
64007044:	sub    esp,0x50
64007047:	push   ebx
64007048:	push   esi
64007049:	push   edi
6400704a:	mov    eax,ds:0x64037644
6400704f:	xor    eax,esp
64007051:	push   eax
64007052:	lea    eax,[esp+0x60]
64007056:	mov    fs:0x0,eax
6400705c:	xor    ebx,ebx
6400705e:	mov    DWORD PTR [esp+0x10],ebx
64007062:	mov    DWORD PTR [esp+0x14],ebx
64007066:	push   0xa
64007068:	mov    DWORD PTR [esp+0x6c],ebx
6400706c:	call   0x64012f5a
64007071:	mov    edi,eax
64007073:	add    esp,0x4
64007076:	mov    DWORD PTR [esp+0x10],edi
6400707a:	mov    eax,DWORD PTR [ebp+0x10]
6400707d:	cmp    eax,ebx
6400707f:	mov    BYTE PTR [esp+0x68],0x1
64007084:	mov    DWORD PTR [edi+0x4],0x2
6400708b:	je     0x64007094
6400708d:	mov    ax,WORD PTR [eax]
64007090:	mov    WORD PTR [edi+0x8],ax
64007094:	mov    eax,DWORD PTR [edi+0x4]
64007097:	mov    ecx,DWORD PTR [ebp+0x8]
6400709a:	add    eax,0x8
6400709d:	push   eax
6400709e:	push   edi
6400709f:	push   eax
640070a0:	push   edi
640070a1:	push   0x3
640070a3:	call   0x640072a0
640070a8:	test   eax,eax
640070aa:	jne    0x6400710f
640070ac:	push   0x6402a74c
640070b1:	push   0x19
640070b3:	push   0x6402a780
640070b8:	call   0x64002e30
640070bd:	mov    ecx,eax
640070bf:	add    esp,0xc
640070c2:	mov    DWORD PTR [esp+0x30],0xf
640070ca:	mov    DWORD PTR [esp+0x2c],ebx
640070ce:	mov    BYTE PTR [esp+0x1c],0x0
640070d3:	lea    esi,[ecx+0x1]
640070d6:	mov    dl,BYTE PTR [ecx]
640070d8:	add    ecx,0x1
640070db:	test   dl,dl
640070dd:	jne    0x640070d6
640070df:	sub    ecx,esi
640070e1:	push   ecx
640070e2:	push   eax
640070e3:	lea    ecx,[esp+0x20]
640070e7:	call   0x640033f0
640070ec:	lea    ecx,[esp+0x18]
640070f0:	push   ecx
640070f1:	lea    edx,[esp+0x38]
640070f5:	push   edx
640070f6:	mov    BYTE PTR [esp+0x70],0x2
640070fb:	call   0x64001440
64007100:	push   0x6402bc90
64007105:	lea    eax,[esp+0x38]
64007109:	push   eax
6400710a:	call   0x64013832
6400710f:	cmp    DWORD PTR [edi],0x1
64007112:	jne    0x64007168
64007114:	mov    ebx,DWORD PTR [edi+0x4]
64007117:	lea    ecx,[ebx+0x8]
6400711a:	push   ecx
6400711b:	call   0x64012f5a
64007120:	mov    esi,eax
64007122:	add    esp,0x4
64007125:	cmp    esi,edi
64007127:	je     0x64007132
64007129:	push   edi
6400712a:	call   0x64013604
6400712f:	add    esp,0x4
64007132:	mov    eax,DWORD PTR [ebp+0x10]
64007135:	test   eax,eax
64007137:	mov    edi,esi
64007139:	mov    DWORD PTR [esp+0x10],edi
6400713d:	mov    DWORD PTR [esi+0x4],ebx
64007140:	je     0x64007149
64007142:	mov    dx,WORD PTR [eax]
64007145:	mov    WORD PTR [esi+0x8],dx
64007149:	mov    eax,DWORD PTR [esi+0x4]
6400714c:	mov    ecx,DWORD PTR [ebp+0x8]
6400714f:	add    eax,0x8
64007152:	push   eax
64007153:	push   esi
64007154:	push   eax
64007155:	push   esi
64007156:	push   0x3
64007158:	call   0x640072a0
6400715d:	test   eax,eax
6400715f:	je     0x640071b1
64007161:	cmp    DWORD PTR [esi],0x1
64007164:	je     0x64007114
64007166:	xor    ebx,ebx
64007168:	cmp    DWORD PTR [edi],ebx
6400716a:	je     0x64007219
64007170:	push   0x6402a7cc
64007175:	push   0x19
64007177:	push   0x6402a780
6400717c:	call   0x64002e30
64007181:	add    esp,0xc
64007184:	push   eax
64007185:	lea    ecx,[esp+0x1c]
64007189:	call   0x640028f0
6400718e:	lea    eax,[esp+0x18]
64007192:	push   eax
64007193:	lea    ecx,[esp+0x38]
64007197:	push   ecx
64007198:	mov    BYTE PTR [esp+0x70],0x4
6400719d:	call   0x64001440
640071a2:	push   0x6402bc90
640071a7:	lea    edx,[esp+0x38]
640071ab:	push   edx
640071ac:	call   0x64013832
640071b1:	push   0x6402a79c
640071b6:	push   0x19
640071b8:	push   0x6402a780
640071bd:	call   0x64002e30
640071c2:	mov    ecx,eax
640071c4:	add    esp,0xc
640071c7:	mov    DWORD PTR [esp+0x30],0xf
640071cf:	mov    DWORD PTR [esp+0x2c],0x0
640071d7:	mov    BYTE PTR [esp+0x1c],0x0
640071dc:	lea    esi,[ecx+0x1]
640071df:	nop
640071e0:	mov    dl,BYTE PTR [ecx]
640071e2:	add    ecx,0x1
640071e5:	test   dl,dl
640071e7:	jne    0x640071e0
640071e9:	sub    ecx,esi
640071eb:	push   ecx
640071ec:	push   eax
640071ed:	lea    ecx,[esp+0x20]
640071f1:	call   0x640033f0
640071f6:	lea    eax,[esp+0x18]
640071fa:	push   eax
640071fb:	lea    ecx,[esp+0x38]
640071ff:	push   ecx
64007200:	mov    BYTE PTR [esp+0x70],0x3
64007205:	call   0x64001440
6400720a:	push   0x6402bc90
6400720f:	lea    edx,[esp+0x38]
64007213:	push   edx
64007214:	call   0x64013832
64007219:	mov    eax,DWORD PTR [edi+0x4]
6400721c:	mov    esi,DWORD PTR [ebp+0xc]
6400721f:	push   eax
64007220:	lea    eax,[edi+0x8]
64007223:	mov    DWORD PTR [esi+0x18],0xf
6400722a:	mov    DWORD PTR [esi+0x14],ebx
6400722d:	push   eax
6400722e:	mov    ecx,esi
64007230:	mov    BYTE PTR [esi+0x4],0x0
64007234:	call   0x640033f0
64007239:	push   edi
6400723a:	call   0x64013604
6400723f:	add    esp,0x4
64007242:	push   ebx
64007243:	call   0x64013604
64007248:	add    esp,0x4
6400724b:	mov    eax,esi
6400724d:	mov    ecx,DWORD PTR [esp+0x60]
64007251:	mov    DWORD PTR fs:0x0,ecx
64007258:	pop    ecx
64007259:	pop    edi
6400725a:	pop    esi
6400725b:	pop    ebx
6400725c:	mov    esp,ebp
6400725e:	pop    ebp
6400725f:	ret    0xc
64007262:	int3   
64007263:	int3   
64007264:	int3   
64007265:	int3   
64007266:	int3   
64007267:	int3   
64007268:	int3   
64007269:	int3   
6400726a:	int3   
6400726b:	int3   
6400726c:	int3   
6400726d:	int3   
6400726e:	int3   
6400726f:	int3   
64007270:	push   ecx
64007271:	push   esi
64007272:	mov    esi,DWORD PTR [esp+0xc]
64007276:	lea    eax,[esp+0x10]
6400727a:	push   eax
6400727b:	push   esi
6400727c:	push   ecx
6400727d:	mov    DWORD PTR [esp+0x10],0x0
64007285:	call   0x64007030
6400728a:	mov    eax,esi
6400728c:	pop    esi
6400728d:	pop    ecx
6400728e:	ret    0x8
64007291:	int3   
64007292:	int3   
64007293:	int3   
64007294:	int3   
64007295:	int3   
64007296:	int3   
64007297:	int3   
64007298:	int3   
64007299:	int3   
6400729a:	int3   
6400729b:	int3   
6400729c:	int3   
6400729d:	int3   
6400729e:	int3   
6400729f:	int3   
640072a0:	push   0xffffffff
640072a2:	push   0x64023988
640072a7:	mov    eax,fs:0x0
640072ad:	push   eax
640072ae:	push   ecx
640072af:	push   ebx
640072b0:	push   ebp
640072b1:	push   esi
640072b2:	push   edi
640072b3:	mov    eax,ds:0x64037644
640072b8:	xor    eax,esp
640072ba:	push   eax
640072bb:	lea    eax,[esp+0x18]
640072bf:	mov    fs:0x0,eax
640072c5:	mov    esi,ecx
640072c7:	xor    ebp,ebp
640072c9:	mov    DWORD PTR [esp+0x14],ebp
640072cd:	mov    DWORD PTR [esp+0x20],ebp
640072d1:	cmp    BYTE PTR [esi],0x0
640072d4:	jne    0x640072e1
640072d6:	call   0x640073c0
640072db:	mov    ebp,eax
640072dd:	mov    ebx,ebp
640072df:	jmp    0x64007317
640072e1:	cmp    DWORD PTR [esi+0x4],0xffffffff
640072e5:	jne    0x64007314
640072e7:	call   0x640073c0
640072ec:	mov    edi,DWORD PTR [esi+0x4]
640072ef:	test   edi,edi
640072f1:	mov    DWORD PTR [esp+0x14],eax
640072f5:	je     0x6400730d
640072f7:	call   DWORD PTR ds:0x64024068
640072fd:	push   edi
640072fe:	mov    ebx,eax
64007300:	call   DWORD PTR ds:0x64024074
64007306:	push   ebx
64007307:	call   DWORD PTR ds:0x64024070
6400730d:	mov    eax,DWORD PTR [esp+0x14]
64007311:	mov    DWORD PTR [esi+0x4],eax
64007314:	mov    ebx,DWORD PTR [esi+0x4]
64007317:	cmp    ebx,0xffffffff
6400731a:	jne    0x6400733a
6400731c:	test   ebp,ebp
6400731e:	je     0x64007336
64007320:	call   DWORD PTR ds:0x64024068
64007326:	push   ebp
64007327:	mov    esi,eax
64007329:	call   DWORD PTR ds:0x64024074
6400732f:	push   esi
64007330:	call   DWORD PTR ds:0x64024070
64007336:	xor    eax,eax
64007338:	jmp    0x640073a8
6400733a:	mov    ecx,DWORD PTR [esp+0x38]
6400733e:	mov    edx,DWORD PTR [esp+0x30]
64007342:	mov    edi,DWORD PTR [esp+0x34]
64007346:	push   ecx
64007347:	mov    ecx,DWORD PTR [esp+0x2c]
6400734b:	push   edx
6400734c:	mov    edx,DWORD PTR [esp+0x34]
64007350:	push   esi
64007351:	call   0x640075d0
64007356:	mov    ebx,eax
64007358:	test   ebx,ebx
6400735a:	mov    DWORD PTR [esp+0x38],ebx
6400735e:	jne    0x6400738c
64007360:	cmp    BYTE PTR [esi],al
64007362:	je     0x6400738c
64007364:	mov    edi,DWORD PTR [esi+0x4]
64007367:	test   edi,edi
64007369:	je     0x64007385
6400736b:	call   DWORD PTR ds:0x64024068
64007371:	push   edi
64007372:	mov    ebx,eax
64007374:	call   DWORD PTR ds:0x64024074
6400737a:	push   ebx
6400737b:	call   DWORD PTR ds:0x64024070
64007381:	mov    ebx,DWORD PTR [esp+0x38]
64007385:	mov    DWORD PTR [esi+0x4],0x0
6400738c:	test   ebp,ebp
6400738e:	je     0x640073a6
64007390:	call   DWORD PTR ds:0x64024068
64007396:	push   ebp
64007397:	mov    esi,eax
64007399:	call   DWORD PTR ds:0x64024074
6400739f:	push   esi
640073a0:	call   DWORD PTR ds:0x64024070
640073a6:	mov    eax,ebx
640073a8:	mov    ecx,DWORD PTR [esp+0x18]
640073ac:	mov    DWORD PTR fs:0x0,ecx
640073b3:	pop    ecx
640073b4:	pop    edi
640073b5:	pop    esi
640073b6:	pop    ebp
640073b7:	pop    ebx
640073b8:	add    esp,0x10
640073bb:	ret    0x14
640073be:	int3   
640073bf:	int3   
640073c0:	push   ebp
640073c1:	mov    ebp,esp
640073c3:	and    esp,0xfffffff8
640073c6:	push   0xffffffff
640073c8:	push   0x6402395e
640073cd:	mov    eax,fs:0x0
640073d3:	push   eax
640073d4:	sub    esp,0x14
640073d7:	push   ebx
640073d8:	push   ebp
640073d9:	push   esi
640073da:	push   edi
640073db:	mov    eax,ds:0x64037644
640073e0:	xor    eax,esp
640073e2:	push   eax
640073e3:	lea    eax,[esp+0x28]
640073e7:	mov    fs:0x0,eax
640073ed:	xor    edi,edi
640073ef:	mov    DWORD PTR [esp+0x1c],edi
640073f3:	lea    eax,[esp+0x18]
640073f7:	mov    DWORD PTR [esp+0x30],edi
640073fb:	mov    ecx,DWORD PTR ds:0x64039b04
64007401:	push   eax
64007402:	call   0x64002a50
64007407:	mov    ebx,0x1
6400740c:	mov    BYTE PTR [esp+0x30],bl
64007410:	test   BYTE PTR ds:0x64039b0c,bl
64007416:	jne    0x64007463
64007418:	or     DWORD PTR ds:0x64039b0c,ebx
6400741e:	push   0x6402a804
64007423:	push   0xb
64007425:	push   0x6402a840
6400742a:	mov    BYTE PTR [esp+0x3c],0x2
6400742f:	call   0x64002e30
64007434:	add    esp,0xc
64007437:	push   eax
64007438:	push   0x6402a84c
6400743d:	push   0xc
6400743f:	push   0x6402a884
64007444:	call   0x64002e30
64007449:	add    esp,0xc
6400744c:	push   eax
6400744d:	call   DWORD PTR ds:0x6402409c
64007453:	push   eax
64007454:	call   DWORD PTR ds:0x64024098
6400745a:	mov    ds:0x64039b08,eax
6400745f:	mov    BYTE PTR [esp+0x30],bl
64007463:	mov    ebx,DWORD PTR ds:0x64024068
64007469:	lea    esp,[esp+0x0]
64007470:	mov    ecx,DWORD PTR [esp+0x18]
64007474:	push   0x0
64007476:	push   0x0
64007478:	push   0x3
6400747a:	push   0x0
6400747c:	push   0x0
6400747e:	push   0xc0000000
64007483:	push   ecx
64007484:	call   DWORD PTR ds:0x64039b08
6400748a:	test   edi,edi
6400748c:	mov    esi,eax
6400748e:	je     0x640074a6
64007490:	call   ebx
64007492:	push   edi
64007493:	mov    ebp,eax
64007495:	call   DWORD PTR ds:0x64024074
6400749b:	push   ebp
6400749c:	mov    ebp,DWORD PTR ds:0x64024070
640074a2:	call   ebp
640074a4:	jmp    0x640074ac
640074a6:	mov    ebp,DWORD PTR ds:0x64024070
640074ac:	cmp    esi,0xffffffff
640074af:	mov    edi,esi
640074b1:	mov    DWORD PTR [esp+0x1c],edi
640074b5:	jne    0x640074dd
640074b7:	call   ebx
640074b9:	cmp    eax,0xe7
640074be:	jne    0x64007579
640074c4:	mov    edx,DWORD PTR [esp+0x18]
640074c8:	push   0x1f4
640074cd:	push   edx
640074ce:	call   DWORD PTR ds:0x640240a4
640074d4:	test   eax,eax
640074d6:	jne    0x64007470
640074d8:	jmp    0x6400757b
640074dd:	push   0x0
640074df:	push   0x0
640074e1:	lea    eax,[esp+0x28]
640074e5:	push   eax
640074e6:	push   esi
640074e7:	mov    DWORD PTR [esp+0x30],0x2
640074ef:	call   DWORD PTR ds:0x640240a8
640074f5:	test   eax,eax
640074f7:	jne    0x64007536
640074f9:	call   ebx
640074fb:	mov    BYTE PTR [esp+0x30],0x0
64007500:	mov    eax,DWORD PTR [esp+0x18]
64007504:	add    eax,0xfffffff0
64007507:	lea    ecx,[eax+0xc]
6400750a:	or     edx,0xffffffff
6400750d:	lock xadd DWORD PTR [ecx],edx
64007511:	dec    edx
64007512:	test   edx,edx
64007514:	jg     0x64007520
64007516:	mov    ecx,DWORD PTR [eax]
64007518:	mov    edx,DWORD PTR [ecx]
6400751a:	push   eax
6400751b:	mov    eax,DWORD PTR [edx+0x4]
6400751e:	call   eax
64007520:	test   esi,esi
64007522:	je     0x640075af
64007528:	call   ebx
6400752a:	push   esi
6400752b:	mov    edi,eax
6400752d:	call   DWORD PTR ds:0x64024074
64007533:	push   edi
64007534:	jmp    0x640075ad
64007536:	mov    BYTE PTR [esp+0x30],0x0
6400753b:	mov    eax,DWORD PTR [esp+0x18]
6400753f:	add    eax,0xfffffff0
64007542:	mov    DWORD PTR [esp+0x1c],0x0
6400754a:	lea    ecx,[eax+0xc]
6400754d:	or     edx,0xffffffff
64007550:	lock xadd DWORD PTR [ecx],edx
64007554:	dec    edx
64007555:	test   edx,edx
64007557:	jg     0x64007563
64007559:	mov    ecx,DWORD PTR [eax]
6400755b:	mov    edx,DWORD PTR [ecx]
6400755d:	push   eax
6400755e:	mov    eax,DWORD PTR [edx+0x4]
64007561:	call   eax
64007563:	mov    eax,esi
64007565:	mov    ecx,DWORD PTR [esp+0x28]
64007569:	mov    DWORD PTR fs:0x0,ecx
64007570:	pop    ecx
64007571:	pop    edi
64007572:	pop    esi
64007573:	pop    ebp
64007574:	pop    ebx
64007575:	mov    esp,ebp
64007577:	pop    ebp
64007578:	ret    
64007579:	call   ebx
6400757b:	mov    BYTE PTR [esp+0x30],0x0
64007580:	mov    eax,DWORD PTR [esp+0x18]
64007584:	add    eax,0xfffffff0
64007587:	or     edx,0xffffffff
6400758a:	lea    ecx,[eax+0xc]
6400758d:	lock xadd DWORD PTR [ecx],edx
64007591:	dec    edx
64007592:	test   edx,edx
64007594:	jg     0x640075a0
64007596:	mov    ecx,DWORD PTR [eax]
64007598:	mov    edx,DWORD PTR [ecx]
6400759a:	push   eax
6400759b:	mov    eax,DWORD PTR [edx+0x4]
6400759e:	call   eax
640075a0:	call   ebx
640075a2:	push   0xffffffff
640075a4:	mov    esi,eax
640075a6:	call   DWORD PTR ds:0x64024074
640075ac:	push   esi
640075ad:	call   ebp
640075af:	or     eax,0xffffffff
640075b2:	mov    ecx,DWORD PTR [esp+0x28]
640075b6:	mov    DWORD PTR fs:0x0,ecx
640075bd:	pop    ecx
640075be:	pop    edi
640075bf:	pop    esi
640075c0:	pop    ebp
640075c1:	pop    ebx
640075c2:	mov    esp,ebp
640075c4:	pop    ebp
640075c5:	ret    
640075c6:	int3   
640075c7:	int3   
640075c8:	int3   
640075c9:	int3   
640075ca:	int3   
640075cb:	int3   
640075cc:	int3   
640075cd:	int3   
640075ce:	int3   
640075cf:	int3   
640075d0:	push   ebp
640075d1:	mov    ebp,esp
640075d3:	and    esp,0xfffffff8
640075d6:	sub    esp,0x5c
640075d9:	mov    eax,ds:0x64037644
640075de:	xor    eax,esp
640075e0:	mov    DWORD PTR [esp+0x58],eax
640075e4:	xor    eax,eax
640075e6:	cmp    BYTE PTR ds:0x640399d0,al
640075ec:	push   esi
640075ed:	mov    esi,edx
640075ef:	mov    WORD PTR [esp+0x18],ax
640075f4:	mov    DWORD PTR [esp+0x1a],eax
640075f8:	mov    DWORD PTR [esp+0x1e],eax
640075fc:	mov    DWORD PTR [esp+0x22],eax
64007600:	mov    WORD PTR [esp+0x26],ax
64007605:	mov    DWORD PTR [esp+0x28],eax
64007609:	mov    DWORD PTR [esp+0x2c],eax
6400760d:	mov    DWORD PTR [esp+0x30],eax
64007611:	mov    DWORD PTR [esp+0x34],eax
64007615:	mov    DWORD PTR [esp+0x38],eax
64007619:	mov    WORD PTR [esp+0x3c],ax
6400761e:	mov    DWORD PTR [esp+0x3e],eax
64007622:	mov    DWORD PTR [esp+0x42],eax
64007626:	mov    DWORD PTR [esp+0x46],eax
6400762a:	mov    WORD PTR [esp+0x4a],ax
6400762f:	mov    DWORD PTR [esp+0x4c],eax
64007633:	mov    DWORD PTR [esp+0x50],eax
64007637:	mov    DWORD PTR [esp+0x54],eax
6400763b:	mov    DWORD PTR [esp+0x58],eax
6400763f:	jne    0x6400768e
64007641:	mov    DWORD PTR [esp+0x28],ecx
64007645:	call   DWORD PTR ds:0x64024038
6400764b:	mov    ecx,DWORD PTR [ebp+0x10]
6400764e:	mov    DWORD PTR [esp+0x2c],eax
64007652:	mov    eax,DWORD PTR [ebp+0xc]
64007655:	cmp    esi,edi
64007657:	mov    DWORD PTR [esp+0x30],eax
6400765b:	mov    eax,DWORD PTR [ebp+0x8]
6400765e:	sete   dl
64007661:	cmp    BYTE PTR [eax+0x8],0x0
64007665:	mov    DWORD PTR [esp+0x34],ecx
64007669:	mov    BYTE PTR [esp+0x38],dl
6400766d:	je     0x64007683
6400766f:	push   0x8
64007671:	lea    ecx,[esp+0x1c]
64007675:	push   0x64029600
6400767a:	push   ecx
6400767b:	call   0x64014db3
64007680:	add    esp,0xc
64007683:	mov    eax,0x24
64007688:	lea    ecx,[esp+0x18]
6400768c:	jmp    0x640076cf
6400768e:	mov    edx,DWORD PTR [ebp+0xc]
64007691:	mov    eax,DWORD PTR [ebp+0x10]
64007694:	cmp    esi,edi
64007696:	mov    DWORD PTR [esp+0x50],edx
6400769a:	mov    edx,DWORD PTR [ebp+0x8]
6400769d:	mov    DWORD PTR [esp+0x4c],ecx
640076a1:	sete   cl
640076a4:	cmp    BYTE PTR [edx+0x8],0x0
640076a8:	mov    DWORD PTR [esp+0x54],eax
640076ac:	mov    BYTE PTR [esp+0x58],cl
640076b0:	je     0x640076c6
640076b2:	push   0x8
640076b4:	lea    eax,[esp+0x40]
640076b8:	push   0x64029600
640076bd:	push   eax
640076be:	call   0x64014db3
640076c3:	add    esp,0xc
640076c6:	mov    eax,0x20
640076cb:	lea    ecx,[esp+0x3c]
640076cf:	push   0x0
640076d1:	lea    edx,[esp+0x14]
640076d5:	push   edx
640076d6:	push   eax
640076d7:	push   ecx
640076d8:	push   ebx
640076d9:	call   DWORD PTR ds:0x6402413c
640076df:	test   eax,eax
640076e1:	jne    0x640076f7
640076e3:	xor    eax,eax
640076e5:	pop    esi
640076e6:	mov    ecx,DWORD PTR [esp+0x58]
640076ea:	xor    ecx,esp
640076ec:	call   0x64013cc6
640076f1:	mov    esp,ebp
640076f3:	pop    ebp
640076f4:	ret    0xc
640076f7:	mov    ecx,DWORD PTR [ebp+0xc]
640076fa:	push   0x0
640076fc:	lea    eax,[esp+0x14]
64007700:	push   eax
64007701:	push   ecx
64007702:	push   esi
64007703:	push   ebx
64007704:	call   DWORD PTR ds:0x6402413c
6400770a:	test   eax,eax
6400770c:	je     0x640076e3
6400770e:	mov    esi,DWORD PTR ds:0x6402408c
64007714:	xor    eax,eax
64007716:	push   eax
64007717:	lea    edx,[esp+0x18]
6400771b:	push   edx
6400771c:	mov    DWORD PTR [esp+0x10],eax
64007720:	mov    DWORD PTR [esp+0x14],eax
64007724:	push   0x8
64007726:	lea    eax,[esp+0x14]
6400772a:	push   eax
6400772b:	push   ebx
6400772c:	call   esi
6400772e:	test   eax,eax
64007730:	je     0x640076e3
64007732:	cmp    DWORD PTR [esp+0x8],0x0
64007737:	je     0x640076e3
64007739:	mov    eax,DWORD PTR [esp+0xc]
6400773d:	cmp    eax,DWORD PTR [ebp+0x10]
64007740:	ja     0x640076e3
64007742:	test   eax,eax
64007744:	je     0x64007756
64007746:	push   0x0
64007748:	lea    ecx,[esp+0x18]
6400774c:	push   ecx
6400774d:	push   eax
6400774e:	push   edi
6400774f:	push   ebx
64007750:	call   esi
64007752:	test   eax,eax
64007754:	je     0x640076e3
64007756:	mov    ecx,DWORD PTR [esp+0x5c]
6400775a:	pop    esi
6400775b:	xor    ecx,esp
6400775d:	mov    eax,0x1
64007762:	call   0x64013cc6
64007767:	mov    esp,ebp
64007769:	pop    ebp
6400776a:	ret    0xc
6400776d:	int3   
6400776e:	int3   
6400776f:	int3   
64007770:	mov    ecx,DWORD PTR [eax]
64007772:	push   ecx
64007773:	call   0x64013604
64007778:	pop    ecx
64007779:	ret    
6400777a:	int3   
6400777b:	int3   
6400777c:	int3   
6400777d:	int3   
6400777e:	int3   
6400777f:	int3   
64007780:	push   esi
64007781:	mov    esi,ecx
64007783:	mov    DWORD PTR [esi],0x64029968
64007789:	cmp    DWORD PTR [esi+0x24],0x10
6400778d:	jb     0x6400779b
6400778f:	mov    eax,DWORD PTR [esi+0x10]
64007792:	push   eax
64007793:	call   0x64013604
64007798:	add    esp,0x4
6400779b:	xor    eax,eax
6400779d:	mov    DWORD PTR [esi+0x24],0xf
640077a4:	mov    DWORD PTR [esi+0x20],eax
640077a7:	mov    ecx,esi
640077a9:	mov    BYTE PTR [esi+0x10],al
640077ac:	call   0x640136d8
640077b1:	test   BYTE PTR [esp+0x8],0x1
640077b6:	je     0x640077c1
640077b8:	push   esi
640077b9:	call   0x64013604
640077be:	add    esp,0x4
640077c1:	mov    eax,esi
640077c3:	pop    esi
640077c4:	ret    0x4
640077c7:	int3   
640077c8:	int3   
640077c9:	int3   
640077ca:	int3   
640077cb:	int3   
640077cc:	int3   
640077cd:	int3   
640077ce:	int3   
640077cf:	int3   
640077d0:	push   eax
640077d1:	push   ecx
640077d2:	call   0x64014eec
640077d7:	add    esp,0x8
640077da:	ret    
640077db:	int3   
640077dc:	int3   
640077dd:	int3   
640077de:	int3   
640077df:	int3   
640077e0:	push   eax
640077e1:	mov    eax,DWORD PTR [esp+0x8]
640077e5:	push   ecx
640077e6:	push   edx
640077e7:	push   eax
640077e8:	call   0x64015081
640077ed:	add    esp,0x10
640077f0:	ret    
640077f1:	int3   
640077f2:	int3   
640077f3:	int3   
640077f4:	int3   
640077f5:	int3   
640077f6:	int3   
640077f7:	int3   
640077f8:	int3   
640077f9:	int3   
640077fa:	int3   
640077fb:	int3   
640077fc:	int3   
640077fd:	int3   
640077fe:	int3   
640077ff:	int3   
64007800:	push   ecx
64007801:	xor    eax,eax
64007803:	cmp    WORD PTR [esp+0x8],ax
64007808:	mov    DWORD PTR [esp],eax
6400780b:	je     0x64007820
6400780d:	mov    DWORD PTR [esp+0x8],eax
64007811:	push   0x6402bd90
64007816:	lea    eax,[esp+0xc]
6400781a:	push   eax
6400781b:	call   0x64013832
64007820:	push   0x6402a5c4
64007825:	push   0x640299d0
6400782a:	push   esi
6400782b:	mov    ecx,0xbf4
64007830:	call   0x64006a80
64007835:	add    esp,0xc
64007838:	mov    eax,esi
6400783a:	pop    ecx
6400783b:	ret    
6400783c:	int3   
6400783d:	int3   
6400783e:	int3   
6400783f:	int3   
64007840:	push   ecx
64007841:	xor    eax,eax
64007843:	cmp    WORD PTR [esp+0x8],ax
64007848:	mov    DWORD PTR [esp],eax
6400784b:	je     0x64007860
6400784d:	mov    DWORD PTR [esp+0x8],eax
64007851:	push   0x6402bd90
64007856:	lea    eax,[esp+0xc]
6400785a:	push   eax
6400785b:	call   0x64013832
64007860:	push   0x6402a644
64007865:	push   0x6402a5f0
6400786a:	push   esi
6400786b:	mov    ecx,0x53
64007870:	call   0x64006a80
64007875:	add    esp,0xc
64007878:	mov    eax,esi
6400787a:	pop    ecx
6400787b:	ret    
6400787c:	int3   
6400787d:	int3   
6400787e:	int3   
6400787f:	int3   
64007880:	sub    esp,0x8
64007883:	xor    eax,eax
64007885:	cmp    WORD PTR [esp+0xc],ax
6400788a:	mov    DWORD PTR [esp+0x4],eax
6400788e:	je     0x640078a3
64007890:	mov    DWORD PTR [esp+0xc],eax
64007894:	push   0x6402bd90
64007899:	lea    eax,[esp+0x10]
6400789d:	push   eax
6400789e:	call   0x64013832
640078a3:	push   0x6402a700
640078a8:	push   0x6402a670
640078ad:	push   esi
640078ae:	mov    ecx,0x8e
640078b3:	call   0x64006a80
640078b8:	add    esp,0xc
640078bb:	mov    eax,esi
640078bd:	add    esp,0x8
640078c0:	ret    
640078c1:	int3   
640078c2:	int3   
640078c3:	int3   
640078c4:	int3   
640078c5:	int3   
640078c6:	int3   
640078c7:	int3   
640078c8:	int3   
640078c9:	int3   
640078ca:	int3   
640078cb:	int3   
640078cc:	int3   
640078cd:	int3   
640078ce:	int3   
640078cf:	int3   
640078d0:	mov    DWORD PTR [ecx],0x6402b02c
640078d6:	ret    
640078d7:	int3   
640078d8:	int3   
640078d9:	int3   
640078da:	int3   
640078db:	int3   
640078dc:	int3   
640078dd:	int3   
640078de:	int3   
640078df:	int3   
640078e0:	test   BYTE PTR [esp+0x4],0x1
640078e5:	push   esi
640078e6:	mov    esi,ecx
640078e8:	mov    DWORD PTR [esi],0x6402b02c
640078ee:	je     0x640078f9
640078f0:	push   esi
640078f1:	call   0x64013604
640078f6:	add    esp,0x4
640078f9:	mov    eax,esi
640078fb:	pop    esi
640078fc:	ret    0x4
640078ff:	int3   
64007900:	push   0xffffffff
64007902:	push   0x640230f8
64007907:	mov    eax,fs:0x0
6400790d:	push   eax
6400790e:	push   esi
6400790f:	mov    eax,ds:0x64037644
64007914:	xor    eax,esp
64007916:	push   eax
64007917:	lea    eax,[esp+0x8]
6400791b:	mov    fs:0x0,eax
64007921:	mov    esi,DWORD PTR [esp+0x18]
64007925:	mov    eax,DWORD PTR [esp+0x1c]
64007929:	mov    DWORD PTR [esp+0x10],0x0
64007931:	mov    DWORD PTR [esi],0x6402b038
64007937:	mov    eax,DWORD PTR [eax]
64007939:	sub    eax,0x10
6400793c:	call   0x64004390
64007941:	add    eax,0x10
64007944:	mov    DWORD PTR [esi+0x4],eax
64007947:	mov    eax,esi
64007949:	mov    ecx,DWORD PTR [esp+0x8]
6400794d:	mov    DWORD PTR fs:0x0,ecx
64007954:	pop    ecx
64007955:	pop    esi
64007956:	add    esp,0xc
64007959:	ret    0x8
6400795c:	int3   
6400795d:	int3   
6400795e:	int3   
6400795f:	int3   
64007960:	mov    ecx,DWORD PTR [ecx+0x4]
64007963:	push   ecx
64007964:	call   DWORD PTR ds:0x640240ac
6400796a:	test   eax,eax
6400796c:	jne    0x64007973
6400796e:	xor    edx,edx
64007970:	ret    0x4
64007973:	mov    ecx,DWORD PTR [esp+0x4]
64007977:	push   ecx
64007978:	push   eax
64007979:	call   DWORD PTR ds:0x64024098
6400797f:	xor    edx,edx
64007981:	ret    0x4
64007984:	int3   
64007985:	int3   
64007986:	int3   
64007987:	int3   
64007988:	int3   
64007989:	int3   
6400798a:	int3   
6400798b:	int3   
6400798c:	int3   
6400798d:	int3   
6400798e:	int3   
6400798f:	int3   
64007990:	push   esi
64007991:	mov    esi,ecx
64007993:	mov    eax,DWORD PTR [esi+0x4]
64007996:	sub    eax,0x10
64007999:	lea    ecx,[eax+0xc]
6400799c:	or     edx,0xffffffff
6400799f:	lock xadd DWORD PTR [ecx],edx
640079a3:	dec    edx
640079a4:	test   edx,edx
640079a6:	jg     0x640079b2
640079a8:	mov    ecx,DWORD PTR [eax]
640079aa:	mov    edx,DWORD PTR [ecx]
640079ac:	push   eax
640079ad:	mov    eax,DWORD PTR [edx+0x4]
640079b0:	call   eax
640079b2:	test   BYTE PTR [esp+0x8],0x1
640079b7:	mov    DWORD PTR [esi],0x6402b02c
640079bd:	je     0x640079c8
640079bf:	push   esi
640079c0:	call   0x64013604
640079c5:	add    esp,0x4
640079c8:	mov    eax,esi
640079ca:	pop    esi
640079cb:	ret    0x4
640079ce:	int3   
640079cf:	int3   
640079d0:	push   0xffffffff
640079d2:	push   0x640232f3
640079d7:	mov    eax,fs:0x0
640079dd:	push   eax
640079de:	push   ecx
640079df:	push   esi
640079e0:	mov    eax,ds:0x64037644
640079e5:	xor    eax,esp
640079e7:	push   eax
640079e8:	lea    eax,[esp+0xc]
640079ec:	mov    fs:0x0,eax
640079f2:	xor    esi,esi
640079f4:	push   0x8
640079f6:	mov    DWORD PTR [esp+0x18],esi
640079fa:	call   0x64013895
640079ff:	add    esp,0x4
64007a02:	mov    DWORD PTR [esp+0x8],eax
64007a06:	cmp    eax,esi
64007a08:	mov    BYTE PTR [esp+0x14],0x1
64007a0d:	je     0x64007a1c
64007a0f:	lea    ecx,[esp+0x1c]
64007a13:	push   ecx
64007a14:	push   eax
64007a15:	call   0x64007900
64007a1a:	mov    esi,eax
64007a1c:	mov    DWORD PTR [esp+0x14],0xffffffff
64007a24:	mov    eax,DWORD PTR [esp+0x1c]
64007a28:	add    eax,0xfffffff0
64007a2b:	lea    edx,[eax+0xc]
64007a2e:	or     ecx,0xffffffff
64007a31:	lock xadd DWORD PTR [edx],ecx
64007a35:	dec    ecx
64007a36:	test   ecx,ecx
64007a38:	jg     0x64007a44
64007a3a:	mov    ecx,DWORD PTR [eax]
64007a3c:	mov    edx,DWORD PTR [ecx]
64007a3e:	push   eax
64007a3f:	mov    eax,DWORD PTR [edx+0x4]
64007a42:	call   eax
64007a44:	mov    eax,esi
64007a46:	mov    ecx,DWORD PTR [esp+0xc]
64007a4a:	mov    DWORD PTR fs:0x0,ecx
64007a51:	pop    ecx
64007a52:	pop    esi
64007a53:	add    esp,0x10
64007a56:	ret    
64007a57:	int3   
64007a58:	int3   
64007a59:	int3   
64007a5a:	int3   
64007a5b:	int3   
64007a5c:	int3   
64007a5d:	int3   
64007a5e:	int3   
64007a5f:	int3   
64007a60:	push   esi
64007a61:	mov    esi,eax
64007a63:	call   0x64007b70
64007a68:	mov    ecx,esi
64007a6a:	pop    esi
64007a6b:	jmp    0x64009c40
64007a70:	push   0xffffffff
64007a72:	push   0x640234b8
64007a77:	mov    eax,fs:0x0
64007a7d:	push   eax
64007a7e:	sub    esp,0x28
64007a81:	push   ebx
64007a82:	push   ebp
64007a83:	push   esi
64007a84:	push   edi
64007a85:	mov    eax,ds:0x64037644
64007a8a:	xor    eax,esp
64007a8c:	push   eax
64007a8d:	lea    eax,[esp+0x3c]
64007a91:	mov    fs:0x0,eax
64007a97:	mov    esi,ecx
64007a99:	call   DWORD PTR ds:0x640240bc
64007a9f:	mov    DWORD PTR [esp+0x18],eax
64007aa3:	call   0x64007b70
64007aa8:	push   0x0
64007aaa:	push   0x4
64007aac:	call   0x64012ebe
64007ab1:	mov    edi,eax
64007ab3:	mov    DWORD PTR [esp+0x1c],edi
64007ab7:	cmp    edi,0xffffffff
64007aba:	mov    DWORD PTR [esp+0x44],0x0
64007ac2:	jne    0x64007acd
64007ac4:	call   DWORD PTR ds:0x64024068
64007aca:	push   edi
64007acb:	jmp    0x64007b3c
64007acd:	lea    eax,[esp+0x20]
64007ad1:	push   eax
64007ad2:	push   edi
64007ad3:	mov    DWORD PTR [esp+0x28],0x1c
64007adb:	call   0x64012ed6
64007ae0:	test   eax,eax
64007ae2:	je     0x64007b31
64007ae4:	mov    ebx,DWORD PTR ds:0x640240dc
64007aea:	mov    ebp,DWORD PTR ds:0x640240b4
64007af0:	mov    ecx,DWORD PTR [esp+0x4c]
64007af4:	cmp    DWORD PTR [esp+0x2c],ecx
64007af8:	jne    0x64007b22
64007afa:	mov    eax,DWORD PTR [esp+0x28]
64007afe:	cmp    DWORD PTR [esp+0x18],eax
64007b02:	je     0x64007b22
64007b04:	push   eax
64007b05:	push   0x0
64007b07:	push   0x2
64007b09:	call   ebx
64007b0b:	lea    edx,[esp+0x14]
64007b0f:	push   edx
64007b10:	mov    ecx,esi
64007b12:	mov    DWORD PTR [esp+0x18],eax
64007b16:	call   0x64009bf0
64007b1b:	mov    eax,DWORD PTR [esp+0x14]
64007b1f:	push   eax
64007b20:	call   ebp
64007b22:	lea    ecx,[esp+0x20]
64007b26:	push   ecx
64007b27:	push   edi
64007b28:	call   0x64012ed0
64007b2d:	test   eax,eax
64007b2f:	jne    0x64007af0
64007b31:	test   edi,edi
64007b33:	je     0x64007b4b
64007b35:	call   DWORD PTR ds:0x64024068
64007b3b:	push   edi
64007b3c:	mov    esi,eax
64007b3e:	call   DWORD PTR ds:0x64024074
64007b44:	push   esi
64007b45:	call   DWORD PTR ds:0x64024070
64007b4b:	mov    ecx,DWORD PTR [esp+0x3c]
64007b4f:	mov    DWORD PTR fs:0x0,ecx
64007b56:	pop    ecx
64007b57:	pop    edi
64007b58:	pop    esi
64007b59:	pop    ebp
64007b5a:	pop    ebx
64007b5b:	add    esp,0x34
64007b5e:	ret    0x4
64007b61:	int3   
64007b62:	int3   
64007b63:	int3   
64007b64:	int3   
64007b65:	int3   
64007b66:	int3   
64007b67:	int3   
64007b68:	int3   
64007b69:	int3   
64007b6a:	int3   
64007b6b:	int3   
64007b6c:	int3   
64007b6d:	int3   
64007b6e:	int3   
64007b6f:	int3   
64007b70:	mov    ecx,esi
64007b72:	call   0x64009ba0
64007b77:	test   eax,eax
64007b79:	je     0x64007bbc
64007b7b:	push   ebx
64007b7c:	mov    ebx,DWORD PTR ds:0x64024074
64007b82:	push   edi
64007b83:	mov    edi,DWORD PTR ds:0x640240b8
64007b89:	lea    esp,[esp+0x0]
64007b90:	mov    ecx,esi
64007b92:	call   0x64009bc0
64007b97:	mov    eax,DWORD PTR [eax]
64007b99:	push   eax
64007b9a:	call   edi
64007b9c:	mov    ecx,esi
64007b9e:	call   0x64009bc0
64007ba3:	mov    ecx,DWORD PTR [eax]
64007ba5:	push   ecx
64007ba6:	call   ebx
64007ba8:	mov    ecx,esi
64007baa:	call   0x64009c20
64007baf:	mov    ecx,esi
64007bb1:	call   0x64009ba0
64007bb6:	test   eax,eax
64007bb8:	jne    0x64007b90
64007bba:	pop    edi
64007bbb:	pop    ebx
64007bbc:	ret    
64007bbd:	int3   
64007bbe:	int3   
64007bbf:	int3   
64007bc0:	push   0xffffffff
64007bc2:	push   0x6402391a
64007bc7:	mov    eax,fs:0x0
64007bcd:	push   eax
64007bce:	sub    esp,0x24
64007bd1:	push   ebx
64007bd2:	push   ebp
64007bd3:	push   esi
64007bd4:	push   edi
64007bd5:	mov    eax,ds:0x64037644
64007bda:	xor    eax,esp
64007bdc:	push   eax
64007bdd:	lea    eax,[esp+0x38]
64007be1:	mov    fs:0x0,eax
64007be7:	mov    esi,ecx
64007be9:	mov    edi,DWORD PTR [esp+0x48]
64007bed:	xor    ebx,ebx
64007bef:	mov    DWORD PTR [esp+0x14],ebx
64007bf3:	mov    DWORD PTR [edi],ebx
64007bf5:	mov    DWORD PTR [esp+0x40],ebx
64007bf9:	lea    ecx,[edi+0x894]
64007bff:	push   ebx
64007c00:	mov    DWORD PTR [edi+0x4],esi
64007c03:	mov    DWORD PTR [edi+0x888],ebx
64007c09:	mov    BYTE PTR [edi+0x890],bl
64007c0f:	call   0x64009c60
64007c14:	push   esi
64007c15:	push   ebx
64007c16:	push   0x1f0fff
64007c1b:	mov    BYTE PTR [esp+0x4c],0x1
64007c20:	call   DWORD PTR ds:0x640240e0
64007c26:	mov    esi,DWORD PTR [edi]
64007c28:	test   esi,esi
64007c2a:	mov    ebp,eax
64007c2c:	je     0x64007c4a
64007c2e:	call   DWORD PTR ds:0x64024068
64007c34:	push   esi
64007c35:	mov    DWORD PTR [esp+0x18],eax
64007c39:	call   DWORD PTR ds:0x64024074
64007c3f:	mov    eax,DWORD PTR [esp+0x14]
64007c43:	push   eax
64007c44:	call   DWORD PTR ds:0x64024070
64007c4a:	push   0x8
64007c4c:	mov    DWORD PTR [edi],ebp
64007c4e:	call   0x64013895
64007c53:	mov    ebp,eax
64007c55:	add    esp,0x4
64007c58:	mov    DWORD PTR [esp+0x18],ebp
64007c5c:	test   ebp,ebp
64007c5e:	mov    BYTE PTR [esp+0x40],0x2
64007c63:	je     0x64007c8b
64007c65:	push   0x0
64007c67:	lea    esi,[esp+0x20]
64007c6b:	call   0x64007800
64007c70:	add    esp,0x4
64007c73:	mov    BYTE PTR [esp+0x40],0x3
64007c78:	mov    ebx,0x1
64007c7d:	push   ebp
64007c7e:	mov    ecx,eax
64007c80:	mov    DWORD PTR [esp+0x18],ebx
64007c84:	call   0x6400a860
64007c89:	jmp    0x64007c8d
64007c8b:	xor    eax,eax
64007c8d:	push   eax
64007c8e:	lea    ecx,[edi+0x894]
64007c94:	call   0x64009ae0
64007c99:	test   bl,0x1
64007c9c:	je     0x64007cb2
64007c9e:	cmp    DWORD PTR [esp+0x34],0x10
64007ca3:	jb     0x64007cb2
64007ca5:	mov    ecx,DWORD PTR [esp+0x20]
64007ca9:	push   ecx
64007caa:	call   0x64013604
64007caf:	add    esp,0x4
64007cb2:	mov    eax,edi
64007cb4:	mov    ecx,DWORD PTR [esp+0x38]
64007cb8:	mov    DWORD PTR fs:0x0,ecx
64007cbf:	pop    ecx
64007cc0:	pop    edi
64007cc1:	pop    esi
64007cc2:	pop    ebp
64007cc3:	pop    ebx
64007cc4:	add    esp,0x30
64007cc7:	ret    0x4
64007cca:	int3   
64007ccb:	int3   
64007ccc:	int3   
64007ccd:	int3   
64007cce:	int3   
64007ccf:	int3   
64007cd0:	push   0xffffffff
64007cd2:	push   0x6402348e
64007cd7:	mov    eax,fs:0x0
64007cdd:	push   eax
64007cde:	sub    esp,0x98
64007ce4:	push   ebx
64007ce5:	push   ebp
64007ce6:	push   esi
64007ce7:	push   edi
64007ce8:	mov    eax,ds:0x64037644
64007ced:	xor    eax,esp
64007cef:	push   eax
64007cf0:	lea    eax,[esp+0xac]
64007cf7:	mov    fs:0x0,eax
64007cfd:	mov    ebx,ecx
64007cff:	mov    ebp,DWORD PTR [esp+0xbc]
64007d06:	mov    esi,DWORD PTR [ebp+0x3c]
64007d09:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
64007d0d:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
64007d11:	mov    eax,DWORD PTR [ebx]
64007d13:	push   0x40
64007d15:	add    esi,ebp
64007d17:	push   0x3000
64007d1c:	push   ecx
64007d1d:	push   edx
64007d1e:	push   eax
64007d1f:	call   DWORD PTR ds:0x640240d4
64007d25:	mov    edi,eax
64007d27:	test   edi,edi
64007d29:	jne    0x64007d95
64007d2b:	mov    ecx,DWORD PTR [esi+0x50]
64007d2e:	mov    eax,DWORD PTR [ebx]
64007d30:	push   0x40
64007d32:	push   0x3000
64007d37:	push   ecx
64007d38:	push   edi
64007d39:	push   eax
64007d3a:	call   DWORD PTR ds:0x640240d4
64007d40:	mov    edi,eax
64007d42:	test   edi,edi
64007d44:	jne    0x64007d95
64007d46:	xor    esi,esi
64007d48:	push   esi
64007d49:	push   0x64029616
64007d4e:	lea    ecx,[esp+0x28]
64007d52:	mov    DWORD PTR [esp+0x40],0xf
64007d5a:	mov    DWORD PTR [esp+0x3c],esi
64007d5e:	mov    BYTE PTR [esp+0x2c],0x0
64007d63:	call   0x640033f0
64007d68:	lea    edx,[esp+0x20]
64007d6c:	push   edx
64007d6d:	lea    eax,[esp+0x5c]
64007d71:	push   eax
64007d72:	mov    DWORD PTR [esp+0xbc],esi
64007d79:	call   0x64001440
64007d7e:	push   0x6402bdcc
64007d83:	lea    ecx,[esp+0x5c]
64007d87:	push   ecx
64007d88:	mov    DWORD PTR [esp+0x60],0x6402b020
64007d90:	call   0x64013832
64007d95:	mov    eax,DWORD PTR [ebx]
64007d97:	lea    edx,[esp+0x1c]
64007d9b:	push   edx
64007d9c:	mov    DWORD PTR [esp+0x20],0x0
64007da4:	mov    ecx,DWORD PTR [esi+0x54]
64007da7:	push   ecx
64007da8:	push   ebp
64007da9:	push   edi
64007daa:	push   eax
64007dab:	call   DWORD PTR ds:0x640240e8
64007db1:	test   eax,eax
64007db3:	jne    0x64007e11
64007db5:	call   DWORD PTR ds:0x64024068
64007dbb:	push   0x0
64007dbd:	push   0x64029616
64007dc2:	lea    ecx,[esp+0x28]
64007dc6:	mov    DWORD PTR [esp+0x40],0xf
64007dce:	mov    DWORD PTR [esp+0x3c],0x0
64007dd6:	mov    BYTE PTR [esp+0x2c],0x0
64007ddb:	call   0x640033f0
64007de0:	lea    edx,[esp+0x20]
64007de4:	push   edx
64007de5:	lea    eax,[esp+0x5c]
64007de9:	push   eax
64007dea:	mov    DWORD PTR [esp+0xbc],0x1
64007df5:	call   0x64001440
64007dfa:	push   0x6402bdcc
64007dff:	lea    ecx,[esp+0x5c]
64007e03:	push   ecx
64007e04:	mov    DWORD PTR [esp+0x60],0x6402b020
64007e0c:	call   0x64013832
64007e11:	movzx  eax,WORD PTR [esi+0x6]
64007e15:	sub    eax,0x1
64007e18:	movzx  edx,WORD PTR [esi+0x14]
64007e1c:	lea    ebp,[edx+esi*1+0x18]
64007e20:	mov    DWORD PTR [esp+0x18],0x0
64007e28:	js     0x64007e71
64007e2a:	add    ebp,0x10
64007e2d:	lea    ecx,[ecx+0x0]
64007e30:	mov    ecx,DWORD PTR [ebp+0x0]
64007e33:	test   ecx,ecx
64007e35:	je     0x64007e58
64007e37:	mov    edx,DWORD PTR [ebp-0x4]
64007e3a:	mov    eax,DWORD PTR [ebx]
64007e3c:	push   0x0
64007e3e:	push   ecx
64007e3f:	mov    ecx,DWORD PTR [ebp+0x4]
64007e42:	add    ecx,DWORD PTR [esp+0xc4]
64007e49:	add    edx,edi
64007e4b:	push   ecx
64007e4c:	push   edx
64007e4d:	push   eax
64007e4e:	call   DWORD PTR ds:0x640240e8
64007e54:	test   eax,eax
64007e56:	je     0x64007e9c
64007e58:	movzx  ecx,WORD PTR [esi+0x6]
64007e5c:	mov    eax,DWORD PTR [esp+0x18]
64007e60:	add    eax,0x1
64007e63:	sub    ecx,0x1
64007e66:	add    ebp,0x28
64007e69:	cmp    eax,ecx
64007e6b:	mov    DWORD PTR [esp+0x18],eax
64007e6f:	jle    0x64007e30
64007e71:	mov    eax,edi
64007e73:	cdq    
64007e74:	mov    DWORD PTR [ebx+0x70],eax
64007e77:	mov    DWORD PTR [ebx+0x74],edx
64007e7a:	mov    edx,DWORD PTR [esi+0x50]
64007e7d:	mov    DWORD PTR [ebx+0x78],edx
64007e80:	mov    ecx,DWORD PTR [esp+0xac]
64007e87:	mov    DWORD PTR fs:0x0,ecx
64007e8e:	pop    ecx
64007e8f:	pop    edi
64007e90:	pop    esi
64007e91:	pop    ebp
64007e92:	pop    ebx
64007e93:	add    esp,0xa4
64007e99:	ret    0x4
64007e9c:	call   DWORD PTR ds:0x64024068
64007ea2:	mov    ebx,DWORD PTR [ebx]
64007ea4:	push   0x8000
64007ea9:	push   0x0
64007eab:	push   edi
64007eac:	push   ebx
64007ead:	call   DWORD PTR ds:0x640240c4
64007eb3:	push   0x0
64007eb5:	push   0x64029616
64007eba:	lea    ecx,[esp+0x44]
64007ebe:	mov    DWORD PTR [esp+0x5c],0xf
64007ec6:	mov    DWORD PTR [esp+0x58],0x0
64007ece:	mov    BYTE PTR [esp+0x48],0x0
64007ed3:	call   0x640033f0
64007ed8:	lea    edx,[esp+0x3c]
64007edc:	push   edx
64007edd:	lea    eax,[esp+0x84]
64007ee4:	push   eax
64007ee5:	mov    DWORD PTR [esp+0xbc],0x2
64007ef0:	call   0x64001440
64007ef5:	push   0x6402bdcc
64007efa:	lea    ecx,[esp+0x84]
64007f01:	push   ecx
64007f02:	mov    DWORD PTR [esp+0x88],0x6402b020
64007f0d:	call   0x64013832
64007f12:	int3   
64007f13:	int3   
64007f14:	int3   
64007f15:	int3   
64007f16:	int3   
64007f17:	int3   
64007f18:	int3   
64007f19:	int3   
64007f1a:	int3   
64007f1b:	int3   
64007f1c:	int3   
64007f1d:	int3   
64007f1e:	int3   
64007f1f:	int3   
64007f20:	mov    eax,DWORD PTR [esp+0x4]
64007f24:	push   esi
64007f25:	push   eax
64007f26:	mov    esi,ecx
64007f28:	call   0x640014f0
64007f2d:	mov    DWORD PTR [esi],0x6402b020
64007f33:	mov    eax,esi
64007f35:	pop    esi
64007f36:	ret    0x4
64007f39:	int3   
64007f3a:	int3   
64007f3b:	int3   
64007f3c:	int3   
64007f3d:	int3   
64007f3e:	int3   
64007f3f:	int3   
64007f40:	push   0xffffffff
64007f42:	push   0x640238be
64007f47:	mov    eax,fs:0x0
64007f4d:	push   eax
64007f4e:	sub    esp,0xa8
64007f54:	push   ebx
64007f55:	push   ebp
64007f56:	push   esi
64007f57:	mov    eax,ds:0x64037644
64007f5c:	xor    eax,esp
64007f5e:	push   eax
64007f5f:	lea    eax,[esp+0xb8]
64007f66:	mov    fs:0x0,eax
64007f6c:	lea    eax,[esp+0x18]
64007f70:	push   eax
64007f71:	call   DWORD PTR ds:0x64024088
64007f77:	lea    ecx,[esp+0x38]
64007f7b:	push   ecx
64007f7c:	lea    edx,[esp+0x1c]
64007f80:	push   edx
64007f81:	call   DWORD PTR ds:0x64024064
64007f87:	mov    ecx,DWORD PTR [esp+0x38]
64007f8b:	mov    eax,DWORD PTR [esp+0x3c]
64007f8f:	sub    ecx,0x2a69c000
64007f95:	push   0x2
64007f97:	sbb    eax,0xc9
64007f9c:	xor    ebx,ebx
64007f9e:	push   ebx
64007f9f:	push   ebx
64007fa0:	mov    DWORD PTR [edi+0x80],ecx
64007fa6:	lea    ecx,[esp+0x40]
64007faa:	mov    DWORD PTR [edi+0x84],eax
64007fb0:	mov    eax,DWORD PTR [edi]
64007fb2:	push   ecx
64007fb3:	push   eax
64007fb4:	push   eax
64007fb5:	mov    DWORD PTR [esp+0x4c],ebx
64007fb9:	call   DWORD PTR ds:0x6402403c
64007fbf:	push   eax
64007fc0:	call   DWORD PTR ds:0x640240c0
64007fc6:	mov    eax,DWORD PTR [esp+0x34]
64007fca:	cdq    
64007fcb:	push   0x6402a894
64007fd0:	push   0x9
64007fd2:	mov    ecx,0x640299b0
64007fd7:	mov    DWORD PTR [edi+0x68],eax
64007fda:	mov    DWORD PTR [edi+0x6c],edx
64007fdd:	call   0x64003030
64007fe2:	add    esp,0x4
64007fe5:	mov    edx,esp
64007fe7:	mov    DWORD PTR [esp+0x3c],esp
64007feb:	push   edx
64007fec:	mov    ecx,eax
64007fee:	call   0x64002a50
64007ff3:	call   0x640079d0
64007ff8:	add    esp,0x4
64007ffb:	push   eax
64007ffc:	lea    ecx,[esp+0x18]
64008000:	call   0x64009c60
64008005:	lea    ecx,[esp+0x14]
64008009:	mov    DWORD PTR [esp+0xc0],ebx
64008010:	call   0x64009cc0
64008015:	push   0x6402a8b8
6400801a:	mov    esi,eax
6400801c:	mov    ebp,DWORD PTR [esi]
6400801e:	push   0xd
64008020:	push   0x6402a8e8
64008025:	call   0x64002e30
6400802a:	add    esp,0xc
6400802d:	push   eax
6400802e:	mov    eax,DWORD PTR [ebp+0x0]
64008031:	mov    ecx,esi
64008033:	call   eax
64008035:	lea    ecx,[esp+0x14]
64008039:	mov    DWORD PTR [esp+0x58],eax
6400803d:	call   0x64009cc0
64008042:	push   0x6402a8f8
64008047:	mov    esi,eax
64008049:	mov    ebp,DWORD PTR [esi]
6400804b:	push   0xf
6400804d:	push   0x6402a91c
64008052:	call   0x64002e30
64008057:	mov    edx,DWORD PTR [ebp+0x0]
6400805a:	add    esp,0xc
6400805d:	push   eax
6400805e:	mov    ecx,esi
64008060:	call   edx
64008062:	lea    ecx,[esp+0x14]
64008066:	mov    DWORD PTR [esp+0x48],eax
6400806a:	call   0x64009cc0
6400806f:	mov    esi,eax
64008071:	mov    ebp,DWORD PTR [esi]
64008073:	push   0x6402a92c
64008078:	push   0xe
6400807a:	push   0x6402a96c
6400807f:	call   0x64002e30
64008084:	add    esp,0xc
64008087:	push   eax
64008088:	mov    eax,DWORD PTR [ebp+0x0]
6400808b:	mov    ecx,esi
6400808d:	call   eax
6400808f:	lea    ecx,[esp+0x14]
64008093:	mov    DWORD PTR [esp+0x50],eax
64008097:	call   0x64009cc0
6400809c:	push   0x6402a97c
640080a1:	mov    esi,eax
640080a3:	mov    ebp,DWORD PTR [esi]
640080a5:	push   0x12
640080a7:	push   0x6402a9ac
640080ac:	call   0x64002e30
640080b1:	mov    edx,DWORD PTR [ebp+0x0]
640080b4:	add    esp,0xc
640080b7:	push   eax
640080b8:	mov    ecx,esi
640080ba:	call   edx
640080bc:	lea    ecx,[esp+0x14]
640080c0:	mov    DWORD PTR [esp+0x5c],eax
640080c4:	call   0x64009cc0
640080c9:	push   0x6402a9c0
640080ce:	mov    esi,eax
640080d0:	mov    ebp,DWORD PTR [esi]
640080d2:	push   0x14
640080d4:	push   0x6402a9ec
640080d9:	call   0x64002e30
640080de:	add    esp,0xc
640080e1:	push   eax
640080e2:	mov    eax,DWORD PTR [ebp+0x0]
640080e5:	mov    ecx,esi
640080e7:	call   eax
640080e9:	lea    ecx,[esp+0x14]
640080ed:	mov    DWORD PTR [esp+0x4c],eax
640080f1:	call   0x64009cc0
640080f6:	push   0x6402aa04
640080fb:	mov    esi,eax
640080fd:	mov    ebp,DWORD PTR [esi]
640080ff:	push   0xa
64008101:	push   0x6402aa40
64008106:	call   0x64002e30
6400810b:	mov    edx,DWORD PTR [ebp+0x0]
6400810e:	add    esp,0xc
64008111:	push   eax
64008112:	mov    ecx,esi
64008114:	call   edx
64008116:	lea    ecx,[esp+0x14]
6400811a:	mov    DWORD PTR [esp+0x54],eax
6400811e:	call   0x64009cc0
64008123:	push   0x6402aa4c
64008128:	mov    esi,eax
6400812a:	mov    ebp,DWORD PTR [esi]
6400812c:	push   0x15
6400812e:	push   0x6402aa70
64008133:	call   0x64002e30
64008138:	add    esp,0xc
6400813b:	push   eax
6400813c:	mov    eax,DWORD PTR [ebp+0x0]
6400813f:	mov    ecx,esi
64008141:	call   eax
64008143:	lea    ecx,[esp+0x14]
64008147:	mov    DWORD PTR [esp+0x40],eax
6400814b:	call   0x64009cc0
64008150:	push   0x6402aa88
64008155:	mov    esi,eax
64008157:	mov    ebp,DWORD PTR [esi]
64008159:	push   0x7
6400815b:	push   0x6402aab0
64008160:	call   0x64002e30
64008165:	mov    edx,DWORD PTR [ebp+0x0]
64008168:	add    esp,0xc
6400816b:	push   eax
6400816c:	mov    ecx,esi
6400816e:	call   edx
64008170:	lea    ecx,[esp+0x14]
64008174:	mov    DWORD PTR [esp+0x44],eax
64008178:	call   0x64009cc0
6400817d:	push   0x6402aab8
64008182:	mov    esi,eax
64008184:	mov    ebp,DWORD PTR [esi]
64008186:	push   0x14
64008188:	push   0x6402aaf0
6400818d:	call   0x64002e30
64008192:	add    esp,0xc
64008195:	push   eax
64008196:	mov    eax,DWORD PTR [ebp+0x0]
64008199:	mov    ecx,esi
6400819b:	call   eax
6400819d:	lea    ecx,[esp+0x60]
640081a1:	mov    DWORD PTR [esp+0x38],eax
640081a5:	call   0x64009b50
640081aa:	mov    BYTE PTR [esp+0xc0],0x1
640081b2:	mov    ecx,DWORD PTR [edi+0x4]
640081b5:	push   ecx
640081b6:	lea    ecx,[esp+0x64]
640081ba:	call   0x64007a70
640081bf:	push   0x6402ab08
640081c4:	push   0xf
640081c6:	push   0x6402ab30
640081cb:	call   0x64002e30
640081d0:	mov    ecx,eax
640081d2:	add    esp,0xc
640081d5:	mov    DWORD PTR [esp+0x30],0xf
640081dd:	mov    DWORD PTR [esp+0x2c],ebx
640081e1:	mov    BYTE PTR [esp+0x1c],bl
640081e5:	lea    esi,[ecx+0x1]
640081e8:	mov    dl,BYTE PTR [ecx]
640081ea:	add    ecx,0x1
640081ed:	cmp    dl,bl
640081ef:	jne    0x640081e8
640081f1:	sub    ecx,esi
640081f3:	push   ecx
640081f4:	push   eax
640081f5:	lea    ecx,[esp+0x20]
640081f9:	call   0x640033f0
640081fe:	lea    edx,[esp+0x18]
64008202:	lea    ebp,[edi+0x894]
64008208:	mov    BYTE PTR [esp+0xc0],0x2
64008210:	mov    esi,DWORD PTR [edi]
64008212:	push   edx
64008213:	mov    ecx,ebp
64008215:	call   0x64009cc0
6400821a:	call   0x6400a8f0
6400821f:	add    eax,DWORD PTR [edi+0x88c]
64008225:	push   eax
64008226:	mov    eax,DWORD PTR [esp+0x5c]
6400822a:	push   eax
6400822b:	call   0x6400ad20
64008230:	cdq    
64008231:	add    esp,0x8
64008234:	mov    BYTE PTR [esp+0xc0],0x1
6400823c:	cmp    DWORD PTR [esp+0x30],0x10
64008241:	mov    DWORD PTR [edi+0x8],eax
64008244:	mov    DWORD PTR [edi+0xc],edx
64008247:	jb     0x64008256
64008249:	mov    ecx,DWORD PTR [esp+0x1c]
6400824d:	push   ecx
6400824e:	call   0x64013604
64008253:	add    esp,0x4
64008256:	push   0x6402ab40
6400825b:	push   0x11
6400825d:	push   0x6402ab70
64008262:	call   0x64002e30
64008267:	mov    esi,eax
64008269:	mov    ecx,esi
6400826b:	add    esp,0xc
6400826e:	mov    DWORD PTR [esp+0x30],0xf
64008276:	mov    DWORD PTR [esp+0x2c],ebx
6400827a:	mov    BYTE PTR [esp+0x1c],bl
6400827e:	lea    edx,[ecx+0x1]
64008281:	mov    al,BYTE PTR [ecx]
64008283:	add    ecx,0x1
64008286:	cmp    al,bl
64008288:	jne    0x64008281
6400828a:	sub    ecx,edx
6400828c:	push   ecx
6400828d:	push   esi
6400828e:	lea    ecx,[esp+0x20]
64008292:	call   0x640033f0
64008297:	lea    edx,[esp+0x18]
6400829b:	mov    BYTE PTR [esp+0xc0],0x3
640082a3:	mov    esi,DWORD PTR [edi]
640082a5:	push   edx
640082a6:	mov    ecx,ebp
640082a8:	call   0x64009cc0
640082ad:	call   0x6400a8f0
640082b2:	add    eax,DWORD PTR [edi+0x88c]
640082b8:	push   eax
640082b9:	mov    eax,DWORD PTR [esp+0x4c]
640082bd:	push   eax
640082be:	call   0x6400ad20
640082c3:	cdq    
640082c4:	add    esp,0x8
640082c7:	mov    BYTE PTR [esp+0xc0],0x1
640082cf:	cmp    DWORD PTR [esp+0x30],0x10
640082d4:	mov    DWORD PTR [edi+0x10],eax
640082d7:	mov    DWORD PTR [edi+0x14],edx
640082da:	jb     0x640082e9
640082dc:	mov    ecx,DWORD PTR [esp+0x1c]
640082e0:	push   ecx
640082e1:	call   0x64013604
640082e6:	add    esp,0x4
640082e9:	push   0x6402ab84
640082ee:	push   0x10
640082f0:	push   0x6402aba8
640082f5:	call   0x64002e30
640082fa:	mov    esi,eax
640082fc:	mov    ecx,esi
640082fe:	add    esp,0xc
64008301:	mov    DWORD PTR [esp+0x30],0xf
64008309:	mov    DWORD PTR [esp+0x2c],ebx
6400830d:	mov    BYTE PTR [esp+0x1c],bl
64008311:	lea    eax,[ecx+0x1]
64008314:	mov    dl,BYTE PTR [ecx]
64008316:	add    ecx,0x1
64008319:	cmp    dl,bl
6400831b:	jne    0x64008314
6400831d:	sub    ecx,eax
6400831f:	push   ecx
64008320:	push   esi
64008321:	lea    ecx,[esp+0x20]
64008325:	call   0x640033f0
6400832a:	lea    edx,[esp+0x18]
6400832e:	mov    BYTE PTR [esp+0xc0],0x4
64008336:	mov    esi,DWORD PTR [edi]
64008338:	push   edx
64008339:	mov    ecx,ebp
6400833b:	call   0x64009cc0
64008340:	call   0x6400a8f0
64008345:	add    eax,DWORD PTR [edi+0x88c]
6400834b:	push   eax
6400834c:	mov    eax,DWORD PTR [esp+0x54]
64008350:	push   eax
64008351:	call   0x6400ad20
64008356:	cdq    
64008357:	add    esp,0x8
6400835a:	mov    BYTE PTR [esp+0xc0],0x1
64008362:	cmp    DWORD PTR [esp+0x30],0x10
64008367:	mov    DWORD PTR [edi+0x28],eax
6400836a:	mov    DWORD PTR [edi+0x2c],edx
6400836d:	jb     0x6400837c
6400836f:	mov    ecx,DWORD PTR [esp+0x1c]
64008373:	push   ecx
64008374:	call   0x64013604
64008379:	add    esp,0x4
6400837c:	push   0x6402abbc
64008381:	push   0x14
64008383:	push   0x6402abe0
64008388:	call   0x64002e30
6400838d:	mov    esi,eax
6400838f:	mov    ecx,esi
64008391:	add    esp,0xc
64008394:	mov    DWORD PTR [esp+0x30],0xf
6400839c:	mov    DWORD PTR [esp+0x2c],ebx
640083a0:	mov    BYTE PTR [esp+0x1c],bl
640083a4:	lea    eax,[ecx+0x1]
640083a7:	mov    dl,BYTE PTR [ecx]
640083a9:	add    ecx,0x1
640083ac:	cmp    dl,bl
640083ae:	jne    0x640083a7
640083b0:	sub    ecx,eax
640083b2:	push   ecx
640083b3:	push   esi
640083b4:	lea    ecx,[esp+0x20]
640083b8:	call   0x640033f0
640083bd:	lea    edx,[esp+0x18]
640083c1:	mov    BYTE PTR [esp+0xc0],0x5
640083c9:	mov    esi,DWORD PTR [edi]
640083cb:	push   edx
640083cc:	mov    ecx,ebp
640083ce:	call   0x64009cc0
640083d3:	call   0x6400a8f0
640083d8:	add    eax,DWORD PTR [edi+0x88c]
640083de:	push   eax
640083df:	mov    eax,DWORD PTR [esp+0x60]
640083e3:	push   eax
640083e4:	call   0x6400ad20
640083e9:	cdq    
640083ea:	add    esp,0x8
640083ed:	mov    BYTE PTR [esp+0xc0],0x1
640083f5:	cmp    DWORD PTR [esp+0x30],0x10
640083fa:	mov    DWORD PTR [edi+0x18],eax
640083fd:	mov    DWORD PTR [edi+0x1c],edx
64008400:	jb     0x6400840f
64008402:	mov    ecx,DWORD PTR [esp+0x1c]
64008406:	push   ecx
64008407:	call   0x64013604
6400840c:	add    esp,0x4
6400840f:	push   0x6402abf8
64008414:	push   0x16
64008416:	push   0x6402ac20
6400841b:	call   0x64002e30
64008420:	mov    esi,eax
64008422:	mov    ecx,esi
64008424:	add    esp,0xc
64008427:	mov    DWORD PTR [esp+0x30],0xf
6400842f:	mov    DWORD PTR [esp+0x2c],ebx
64008433:	mov    BYTE PTR [esp+0x1c],bl
64008437:	lea    eax,[ecx+0x1]
6400843a:	lea    ebx,[ebx+0x0]
64008440:	mov    dl,BYTE PTR [ecx]
64008442:	add    ecx,0x1
64008445:	cmp    dl,bl
64008447:	jne    0x64008440
64008449:	sub    ecx,eax
6400844b:	push   ecx
6400844c:	push   esi
6400844d:	lea    ecx,[esp+0x20]
64008451:	call   0x640033f0
64008456:	lea    edx,[esp+0x18]
6400845a:	mov    BYTE PTR [esp+0xc0],0x6
64008462:	mov    esi,DWORD PTR [edi]
64008464:	push   edx
64008465:	mov    ecx,ebp
64008467:	call   0x64009cc0
6400846c:	call   0x6400a8f0
64008471:	add    eax,DWORD PTR [edi+0x88c]
64008477:	push   eax
64008478:	mov    eax,DWORD PTR [esp+0x50]
6400847c:	push   eax
6400847d:	call   0x6400ad20
64008482:	cdq    
64008483:	add    esp,0x8
64008486:	mov    BYTE PTR [esp+0xc0],0x1
6400848e:	cmp    DWORD PTR [esp+0x30],0x10
64008493:	mov    DWORD PTR [edi+0x20],eax
64008496:	mov    DWORD PTR [edi+0x24],edx
64008499:	jb     0x640084a8
6400849b:	mov    ecx,DWORD PTR [esp+0x1c]
6400849f:	push   ecx
640084a0:	call   0x64013604
640084a5:	add    esp,0x4
640084a8:	push   0x6402ac38
640084ad:	push   0x17
640084af:	push   0x6402ac68
640084b4:	call   0x64002e30
640084b9:	mov    esi,eax
640084bb:	mov    ecx,esi
640084bd:	add    esp,0xc
640084c0:	mov    DWORD PTR [esp+0x30],0xf
640084c8:	mov    DWORD PTR [esp+0x2c],ebx
640084cc:	mov    BYTE PTR [esp+0x1c],bl
640084d0:	lea    eax,[ecx+0x1]
640084d3:	mov    dl,BYTE PTR [ecx]
640084d5:	add    ecx,0x1
640084d8:	cmp    dl,bl
640084da:	jne    0x640084d3
640084dc:	sub    ecx,eax
640084de:	push   ecx
640084df:	push   esi
640084e0:	lea    ecx,[esp+0x20]
640084e4:	call   0x640033f0
640084e9:	lea    edx,[esp+0x18]
640084ed:	mov    BYTE PTR [esp+0xc0],0x7
640084f5:	mov    esi,DWORD PTR [edi]
640084f7:	push   edx
640084f8:	mov    ecx,ebp
640084fa:	call   0x64009cc0
640084ff:	call   0x6400a8f0
64008504:	add    eax,DWORD PTR [edi+0x88c]
6400850a:	push   eax
6400850b:	mov    eax,DWORD PTR [esp+0x44]
6400850f:	push   eax
64008510:	call   0x6400ad20
64008515:	cdq    
64008516:	add    esp,0x8
64008519:	mov    BYTE PTR [esp+0xc0],0x1
64008521:	cmp    DWORD PTR [esp+0x30],0x10
64008526:	mov    DWORD PTR [edi+0x30],eax
64008529:	mov    DWORD PTR [edi+0x34],edx
6400852c:	jb     0x6400853b
6400852e:	mov    ecx,DWORD PTR [esp+0x1c]
64008532:	push   ecx
64008533:	call   0x64013604
64008538:	add    esp,0x4
6400853b:	push   0x6402ac80
64008540:	push   0xc
64008542:	push   0x6402acbc
64008547:	call   0x64002e30
6400854c:	mov    esi,eax
6400854e:	mov    ecx,esi
64008550:	add    esp,0xc
64008553:	mov    DWORD PTR [esp+0x30],0xf
6400855b:	mov    DWORD PTR [esp+0x2c],ebx
6400855f:	mov    BYTE PTR [esp+0x1c],bl
64008563:	lea    edx,[ecx+0x1]
64008566:	mov    al,BYTE PTR [ecx]
64008568:	add    ecx,0x1
6400856b:	cmp    al,bl
6400856d:	jne    0x64008566
6400856f:	sub    ecx,edx
64008571:	push   ecx
64008572:	push   esi
64008573:	lea    ecx,[esp+0x20]
64008577:	call   0x640033f0
6400857c:	lea    edx,[esp+0x18]
64008580:	mov    BYTE PTR [esp+0xc0],0x8
64008588:	mov    esi,DWORD PTR [edi]
6400858a:	push   edx
6400858b:	mov    ecx,ebp
6400858d:	call   0x64009cc0
64008592:	call   0x6400a8f0
64008597:	add    eax,DWORD PTR [edi+0x88c]
6400859d:	push   eax
6400859e:	mov    eax,DWORD PTR [esp+0x58]
640085a2:	push   eax
640085a3:	call   0x6400ad20
640085a8:	cdq    
640085a9:	add    esp,0x8
640085ac:	mov    BYTE PTR [esp+0xc0],0x1
640085b4:	cmp    DWORD PTR [esp+0x30],0x10
640085b9:	mov    DWORD PTR [edi+0x38],eax
640085bc:	mov    DWORD PTR [edi+0x3c],edx
640085bf:	jb     0x640085ce
640085c1:	mov    ecx,DWORD PTR [esp+0x1c]
640085c5:	push   ecx
640085c6:	call   0x64013604
640085cb:	add    esp,0x4
640085ce:	push   0x6402accc
640085d3:	push   0x9
640085d5:	push   0x6402ad00
640085da:	call   0x64002e30
640085df:	mov    esi,eax
640085e1:	mov    ecx,esi
640085e3:	add    esp,0xc
640085e6:	mov    DWORD PTR [esp+0x30],0xf
640085ee:	mov    DWORD PTR [esp+0x2c],ebx
640085f2:	mov    BYTE PTR [esp+0x1c],bl
640085f6:	lea    eax,[ecx+0x1]
640085f9:	lea    esp,[esp+0x0]
64008600:	mov    dl,BYTE PTR [ecx]
64008602:	add    ecx,0x1
64008605:	cmp    dl,bl
64008607:	jne    0x64008600
64008609:	sub    ecx,eax
6400860b:	push   ecx
6400860c:	push   esi
6400860d:	lea    ecx,[esp+0x20]
64008611:	call   0x640033f0
64008616:	lea    edx,[esp+0x18]
6400861a:	mov    BYTE PTR [esp+0xc0],0x9
64008622:	mov    esi,DWORD PTR [edi]
64008624:	push   edx
64008625:	mov    ecx,ebp
64008627:	call   0x64009cc0
6400862c:	call   0x6400a8f0
64008631:	add    eax,DWORD PTR [edi+0x88c]
64008637:	push   eax
64008638:	mov    eax,DWORD PTR [esp+0x48]
6400863c:	push   eax
6400863d:	call   0x6400ad20
64008642:	cdq    
64008643:	add    esp,0x8
64008646:	mov    BYTE PTR [esp+0xc0],0x1
6400864e:	cmp    DWORD PTR [esp+0x30],0x10
64008653:	mov    DWORD PTR [edi+0x40],eax
64008656:	mov    DWORD PTR [edi+0x44],edx
64008659:	jb     0x64008668
6400865b:	mov    ecx,DWORD PTR [esp+0x1c]
6400865f:	push   ecx
64008660:	call   0x64013604
64008665:	add    esp,0x4
64008668:	push   0x6402ad0c
6400866d:	push   0x16
6400866f:	push   0x6402ad38
64008674:	call   0x64002e30
64008679:	mov    esi,eax
6400867b:	mov    ecx,esi
6400867d:	add    esp,0xc
64008680:	mov    DWORD PTR [esp+0x30],0xf
64008688:	mov    DWORD PTR [esp+0x2c],ebx
6400868c:	mov    BYTE PTR [esp+0x1c],bl
64008690:	lea    eax,[ecx+0x1]
64008693:	mov    dl,BYTE PTR [ecx]
64008695:	add    ecx,0x1
64008698:	cmp    dl,bl
6400869a:	jne    0x64008693
6400869c:	sub    ecx,eax
6400869e:	push   ecx
6400869f:	push   esi
640086a0:	lea    ecx,[esp+0x20]
640086a4:	call   0x640033f0
640086a9:	lea    edx,[esp+0x18]
640086ad:	mov    BYTE PTR [esp+0xc0],0xa
640086b5:	mov    esi,DWORD PTR [edi]
640086b7:	push   edx
640086b8:	mov    ecx,ebp
640086ba:	call   0x64009cc0
640086bf:	call   0x6400a8f0
640086c4:	add    eax,DWORD PTR [edi+0x88c]
640086ca:	push   eax
640086cb:	mov    eax,DWORD PTR [esp+0x3c]
640086cf:	push   eax
640086d0:	call   0x6400ad20
640086d5:	cdq    
640086d6:	add    esp,0x8
640086d9:	mov    BYTE PTR [esp+0xc0],0x1
640086e1:	cmp    DWORD PTR [esp+0x30],0x10
640086e6:	mov    DWORD PTR [edi+0x48],eax
640086e9:	mov    DWORD PTR [edi+0x4c],edx
640086ec:	jb     0x640086fb
640086ee:	mov    ecx,DWORD PTR [esp+0x1c]
640086f2:	push   ecx
640086f3:	call   0x64013604
640086f8:	add    esp,0x4
640086fb:	mov    edx,DWORD PTR [edi+0x8]
640086fe:	or     edx,DWORD PTR [edi+0xc]
64008701:	je     0x64008794
64008707:	mov    eax,DWORD PTR [edi+0x10]
6400870a:	or     eax,DWORD PTR [edi+0x14]
6400870d:	je     0x64008794
64008713:	mov    ecx,DWORD PTR [edi+0x28]
64008716:	or     ecx,DWORD PTR [edi+0x2c]
64008719:	je     0x64008794
6400871b:	mov    edx,DWORD PTR [edi+0x18]
6400871e:	or     edx,DWORD PTR [edi+0x1c]
64008721:	je     0x64008794
64008723:	mov    eax,DWORD PTR [edi+0x20]
64008726:	or     eax,DWORD PTR [edi+0x24]
64008729:	je     0x64008794
6400872b:	mov    ecx,DWORD PTR [edi+0x30]
6400872e:	or     ecx,DWORD PTR [edi+0x34]
64008731:	je     0x64008794
64008733:	mov    edx,DWORD PTR [edi+0x38]
64008736:	or     edx,DWORD PTR [edi+0x3c]
64008739:	je     0x64008794
6400873b:	mov    eax,DWORD PTR [edi+0x40]
6400873e:	or     eax,DWORD PTR [edi+0x44]
64008741:	je     0x64008794
64008743:	mov    ecx,DWORD PTR [edi+0x48]
64008746:	or     ecx,DWORD PTR [edi+0x4c]
64008749:	je     0x64008794
6400874b:	push   edi
6400874c:	call   0x64008950
64008751:	lea    esi,[esp+0x60]
64008755:	call   0x64007b70
6400875a:	mov    ecx,esi
6400875c:	call   0x64009c40
64008761:	call   DWORD PTR ds:0x64024038
64008767:	lea    ecx,[esp+0x14]
6400876b:	mov    DWORD PTR [esp+0xc0],0xffffffff
64008776:	call   0x64009c80
6400877b:	mov    ecx,DWORD PTR [esp+0xb8]
64008782:	mov    DWORD PTR fs:0x0,ecx
64008789:	pop    ecx
6400878a:	pop    esi
6400878b:	pop    ebp
6400878c:	pop    ebx
6400878d:	add    esp,0xb4
64008793:	ret    
64008794:	push   ebx
64008795:	push   0x64029616
6400879a:	lea    ecx,[esp+0x7c]
6400879e:	mov    DWORD PTR [esp+0x94],0xf
640087a9:	mov    DWORD PTR [esp+0x90],ebx
640087b0:	mov    BYTE PTR [esp+0x80],bl
640087b7:	call   0x640033f0
640087bc:	lea    edx,[esp+0x74]
640087c0:	push   edx
640087c1:	lea    eax,[esp+0x94]
640087c8:	push   eax
640087c9:	mov    BYTE PTR [esp+0xc8],0xb
640087d1:	call   0x64001440
640087d6:	push   0x6402bc90
640087db:	lea    ecx,[esp+0x94]
640087e2:	push   ecx
640087e3:	call   0x64013832
640087e8:	int3   
640087e9:	int3   
640087ea:	int3   
640087eb:	int3   
640087ec:	int3   
640087ed:	int3   
640087ee:	int3   
640087ef:	int3   
640087f0:	push   0xffffffff
640087f2:	push   0x64023818
640087f7:	mov    eax,fs:0x0
640087fd:	push   eax
640087fe:	sub    esp,0x1c
64008801:	push   ebx
64008802:	push   ebp
64008803:	push   edi
64008804:	mov    eax,ds:0x64037644
64008809:	xor    eax,esp
6400880b:	push   eax
6400880c:	lea    eax,[esp+0x2c]
64008810:	mov    fs:0x0,eax
64008816:	mov    eax,DWORD PTR [esi]
64008818:	mov    ebx,DWORD PTR ds:0x640240d4
6400881e:	push   0x4
64008820:	push   0x3000
64008825:	push   0x880
6400882a:	push   0x0
6400882c:	push   eax
6400882d:	call   ebx
6400882f:	lea    edi,[esi+0x894]
64008835:	mov    ecx,edi
64008837:	mov    DWORD PTR [esi+0x888],eax
6400883d:	call   0x64009cc0
64008842:	mov    eax,DWORD PTR [eax]
64008844:	mov    ebp,DWORD PTR [eax+0x6]
64008847:	mov    eax,DWORD PTR [esi]
64008849:	push   0x40
6400884b:	push   0x3000
64008850:	push   ebp
64008851:	push   0x0
64008853:	push   eax
64008854:	call   ebx
64008856:	push   eax
64008857:	mov    ecx,edi
64008859:	mov    DWORD PTR [esi+0x88c],eax
6400885f:	call   0x64009cc0
64008864:	call   0x6400a9e0
64008869:	mov    ecx,edi
6400886b:	call   0x64009cc0
64008870:	mov    eax,DWORD PTR [eax]
64008872:	mov    ecx,DWORD PTR [esi]
64008874:	push   0x0
64008876:	push   ebp
64008877:	mov    ebp,DWORD PTR ds:0x640240e8
6400887d:	add    eax,0x12
64008880:	push   eax
64008881:	mov    eax,DWORD PTR [esi+0x88c]
64008887:	push   eax
64008888:	push   ecx
64008889:	call   ebp
6400888b:	test   eax,eax
6400888d:	jne    0x64008895
6400888f:	call   DWORD PTR ds:0x64024068
64008895:	push   0x6402ad50
6400889a:	push   0xe
6400889c:	push   0x6402ad74
640088a1:	call   0x64002e30
640088a6:	mov    ecx,eax
640088a8:	add    esp,0xc
640088ab:	mov    DWORD PTR [esp+0x28],0xf
640088b3:	mov    DWORD PTR [esp+0x24],0x0
640088bb:	mov    BYTE PTR [esp+0x14],0x0
640088c0:	lea    ebx,[ecx+0x1]
640088c3:	mov    dl,BYTE PTR [ecx]
640088c5:	add    ecx,0x1
640088c8:	test   dl,dl
640088ca:	jne    0x640088c3
640088cc:	sub    ecx,ebx
640088ce:	push   ecx
640088cf:	push   eax
640088d0:	lea    ecx,[esp+0x18]
640088d4:	call   0x640033f0
640088d9:	lea    ecx,[esp+0x10]
640088dd:	push   ecx
640088de:	xor    ebx,ebx
640088e0:	mov    ecx,edi
640088e2:	mov    DWORD PTR [esp+0x38],ebx
640088e6:	call   0x64009cc0
640088eb:	call   0x6400a8f0
640088f0:	cmp    DWORD PTR [esp+0x28],0x10
640088f5:	mov    edi,eax
640088f7:	jb     0x64008906
640088f9:	mov    edx,DWORD PTR [esp+0x14]
640088fd:	push   edx
640088fe:	call   0x64013604
64008903:	add    esp,0x4
64008906:	mov    eax,DWORD PTR [esi]
64008908:	push   ebx
64008909:	push   0x4
6400890b:	lea    ecx,[esi+0x888]
64008911:	push   ecx
64008912:	mov    ecx,DWORD PTR [esi+0x88c]
64008918:	add    ecx,edi
6400891a:	push   ecx
6400891b:	push   eax
6400891c:	mov    DWORD PTR [esp+0x3c],0xf
64008924:	mov    DWORD PTR [esp+0x38],ebx
64008928:	mov    BYTE PTR [esp+0x28],0x0
6400892d:	call   ebp
6400892f:	test   eax,eax
64008931:	jne    0x64008939
64008933:	call   DWORD PTR ds:0x64024068
64008939:	mov    ecx,DWORD PTR [esp+0x2c]
6400893d:	mov    DWORD PTR fs:0x0,ecx
64008944:	pop    ecx
64008945:	pop    edi
64008946:	pop    ebp
64008947:	pop    ebx
64008948:	add    esp,0x28
6400894b:	ret    
6400894c:	int3   
6400894d:	int3   
6400894e:	int3   
6400894f:	int3   
64008950:	push   0xffffffff
64008952:	push   0x64023448
64008957:	mov    eax,fs:0x0
6400895d:	push   eax
6400895e:	sub    esp,0x48
64008961:	mov    eax,ds:0x64037644
64008966:	xor    eax,esp
64008968:	push   eax
64008969:	lea    eax,[esp+0x4c]
6400896d:	mov    fs:0x0,eax
64008973:	mov    eax,DWORD PTR [esp+0x5c]
64008977:	mov    ecx,DWORD PTR [eax]
64008979:	push   0x0
6400897b:	push   0x880
64008980:	lea    edx,[eax+0x8]
64008983:	mov    eax,DWORD PTR [eax+0x888]
64008989:	push   edx
6400898a:	push   eax
6400898b:	push   ecx
6400898c:	call   DWORD PTR ds:0x640240e8
64008992:	test   eax,eax
64008994:	jne    0x640089db
64008996:	push   eax
64008997:	push   0x64029616
6400899c:	lea    ecx,[esp+0xc]
640089a0:	mov    DWORD PTR [esp+0x24],0xf
640089a8:	mov    DWORD PTR [esp+0x20],eax
640089ac:	mov    BYTE PTR [esp+0x10],al
640089b0:	call   0x640033f0
640089b5:	lea    ecx,[esp+0x4]
640089b9:	push   ecx
640089ba:	lea    edx,[esp+0x24]
640089be:	push   edx
640089bf:	mov    DWORD PTR [esp+0x5c],0x0
640089c7:	call   0x64001440
640089cc:	push   0x6402bc90
640089d1:	lea    eax,[esp+0x24]
640089d5:	push   eax
640089d6:	call   0x64013832
640089db:	mov    ecx,DWORD PTR [esp+0x4c]
640089df:	mov    DWORD PTR fs:0x0,ecx
640089e6:	pop    ecx
640089e7:	add    esp,0x54
640089ea:	ret    0x4
640089ed:	int3   
640089ee:	int3   
640089ef:	int3   
640089f0:	push   ebp
640089f1:	mov    ebp,esp
640089f3:	push   0xfffffffe
640089f5:	push   0x6402bde0
640089fa:	push   0x64015f30
640089ff:	mov    eax,fs:0x0
64008a05:	push   eax
64008a06:	sub    esp,0x28
64008a09:	push   ebx
64008a0a:	push   esi
64008a0b:	push   edi
64008a0c:	mov    eax,ds:0x64037644
64008a11:	xor    DWORD PTR [ebp-0x8],eax
64008a14:	xor    eax,ebp
64008a16:	push   eax
64008a17:	lea    eax,[ebp-0x10]
64008a1a:	mov    fs:0x0,eax
64008a20:	mov    esi,DWORD PTR [ebp+0x8]
64008a23:	xor    ebx,ebx
64008a25:	mov    DWORD PTR [ebp-0x2c],ebx
64008a28:	mov    DWORD PTR [ebp-0x30],ebx
64008a2b:	mov    DWORD PTR [ebp-0x20],ebx
64008a2e:	mov    DWORD PTR [ebp-0x34],ebx
64008a31:	mov    DWORD PTR [ebp-0x38],ebx
64008a34:	mov    DWORD PTR [ebp-0x24],ebx
64008a37:	mov    BYTE PTR [ebp-0x19],bl
64008a3a:	mov    DWORD PTR [ebp-0x4],ebx
64008a3d:	push   0x4
64008a3f:	push   0x3000
64008a44:	push   0x1020
64008a49:	push   ebx
64008a4a:	push   esi
64008a4b:	call   DWORD PTR ds:0x640240d4
64008a51:	mov    edi,eax
64008a53:	mov    DWORD PTR [ebp-0x2c],edi
64008a56:	test   edi,edi
64008a58:	jne    0x64008a65
64008a5a:	call   DWORD PTR ds:0x64024068
64008a60:	jmp    0x64008b2d
64008a65:	lea    eax,[ebp-0x24]
64008a68:	push   eax
64008a69:	push   0x1020
64008a6e:	mov    ecx,DWORD PTR [ebp+0x14]
64008a71:	push   ecx
64008a72:	push   edi
64008a73:	push   esi
64008a74:	call   DWORD PTR ds:0x640240e8
64008a7a:	test   eax,eax
64008a7c:	je     0x64008b2d
64008a82:	push   0x40
64008a84:	push   0x3000
64008a89:	mov    edx,DWORD PTR [ebp+0x10]
64008a8c:	push   edx
64008a8d:	push   0x0
64008a8f:	push   esi
64008a90:	call   DWORD PTR ds:0x640240d4
64008a96:	mov    ebx,eax
64008a98:	mov    DWORD PTR [ebp-0x30],ebx
64008a9b:	test   ebx,ebx
64008a9d:	je     0x64008b2d
64008aa3:	lea    eax,[ebp-0x24]
64008aa6:	push   eax
64008aa7:	mov    ecx,DWORD PTR [ebp+0x10]
64008aaa:	push   ecx
64008aab:	mov    edx,DWORD PTR [ebp+0xc]
64008aae:	push   edx
64008aaf:	push   ebx
64008ab0:	push   esi
64008ab1:	call   DWORD PTR ds:0x640240e8
64008ab7:	test   eax,eax
64008ab9:	je     0x64008b2d
64008abb:	mov    DWORD PTR [ebp-0x28],0x0
64008ac2:	lea    eax,[ebp-0x28]
64008ac5:	push   eax
64008ac6:	push   0xf01ff
64008acb:	push   esi
64008acc:	call   DWORD PTR ds:0x64024008
64008ad2:	test   eax,eax
64008ad4:	je     0x64008b2d
64008ad6:	mov    ecx,DWORD PTR [ebp-0x28]
64008ad9:	push   ecx
64008ada:	call   DWORD PTR ds:0x64024004
64008ae0:	test   eax,eax
64008ae2:	je     0x64008b2d
64008ae4:	lea    edx,[ebp-0x34]
64008ae7:	push   edx
64008ae8:	push   0x0
64008aea:	push   edi
64008aeb:	push   ebx
64008aec:	push   0x0
64008aee:	push   0x0
64008af0:	push   esi
64008af1:	call   DWORD PTR ds:0x640240cc
64008af7:	mov    DWORD PTR [ebp-0x20],eax
64008afa:	test   eax,eax
64008afc:	je     0x64008b2d
64008afe:	call   DWORD PTR ds:0x64024000
64008b04:	push   0xffffffff
64008b06:	mov    eax,DWORD PTR [ebp-0x20]
64008b09:	push   eax
64008b0a:	call   DWORD PTR ds:0x64024058
64008b10:	lea    ecx,[ebp-0x24]
64008b13:	push   ecx
64008b14:	push   0x1020
64008b19:	mov    edx,DWORD PTR [ebp+0x14]
64008b1c:	push   edx
64008b1d:	push   edi
64008b1e:	push   esi
64008b1f:	call   DWORD PTR ds:0x640240d8
64008b25:	test   eax,eax
64008b27:	je     0x64008b2d
64008b29:	mov    BYTE PTR [ebp-0x19],0x1
64008b2d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64008b34:	call   0x64008b57
64008b39:	mov    al,BYTE PTR [ebp-0x19]
64008b3c:	mov    ecx,DWORD PTR [ebp-0x10]
64008b3f:	mov    DWORD PTR fs:0x0,ecx
64008b46:	pop    ecx
64008b47:	pop    edi
64008b48:	pop    esi
64008b49:	pop    ebx
64008b4a:	mov    esp,ebp
64008b4c:	pop    ebp
64008b4d:	ret    
64008b4e:	mov    esi,DWORD PTR [ebp+0x8]
64008b51:	mov    edi,DWORD PTR [ebp-0x2c]
64008b54:	mov    ebx,DWORD PTR [ebp-0x30]
64008b57:	test   edi,edi
64008b59:	je     0x64008b6a
64008b5b:	push   0x8000
64008b60:	push   0x0
64008b62:	push   edi
64008b63:	push   esi
64008b64:	call   DWORD PTR ds:0x640240c4
64008b6a:	test   ebx,ebx
64008b6c:	je     0x64008b7d
64008b6e:	push   0x8000
64008b73:	push   0x0
64008b75:	push   ebx
64008b76:	push   esi
64008b77:	call   DWORD PTR ds:0x640240c4
64008b7d:	mov    eax,DWORD PTR [ebp-0x20]
64008b80:	test   eax,eax
64008b82:	je     0x64008b99
64008b84:	lea    ecx,[ebp-0x38]
64008b87:	push   ecx
64008b88:	push   eax
64008b89:	call   DWORD PTR ds:0x640240d0
64008b8f:	mov    edx,DWORD PTR [ebp-0x20]
64008b92:	push   edx
64008b93:	call   DWORD PTR ds:0x64024074
64008b99:	ret    
64008b9a:	int3   
64008b9b:	int3   
64008b9c:	int3   
64008b9d:	int3   
64008b9e:	int3   
64008b9f:	int3   
64008ba0:	push   ebp
64008ba1:	mov    ebp,esp
64008ba3:	push   0xffffffff
64008ba5:	push   0x640237e1
64008baa:	mov    eax,fs:0x0
64008bb0:	push   eax
64008bb1:	push   ecx
64008bb2:	mov    eax,0x1060
64008bb7:	call   0x64017d00
64008bbc:	mov    eax,ds:0x64037644
64008bc1:	xor    eax,ebp
64008bc3:	mov    DWORD PTR [ebp-0x14],eax
64008bc6:	push   ebx
64008bc7:	push   esi
64008bc8:	push   edi
64008bc9:	push   eax
64008bca:	lea    eax,[ebp-0xc]
64008bcd:	mov    fs:0x0,eax
64008bd3:	mov    DWORD PTR [ebp-0x10],esp
64008bd6:	mov    ebx,DWORD PTR [ebp+0xc]
64008bd9:	mov    eax,DWORD PTR [ebp+0x8]
64008bdc:	push   0x1018
64008be1:	xor    edi,edi
64008be3:	lea    edx,[ebp-0x1030]
64008be9:	push   edi
64008bea:	push   edx
64008beb:	mov    DWORD PTR [ebp-0x104c],eax
64008bf1:	mov    DWORD PTR [ebp-0x1048],ecx
64008bf7:	mov    BYTE PTR [ebp-0x1038],0x0
64008bfe:	call   0x64015120
64008c03:	mov    eax,ebx
64008c05:	add    esp,0xc
64008c08:	lea    edx,[eax+0x2]
64008c0b:	jmp    0x64008c10
64008c0d:	lea    ecx,[ecx+0x0]
64008c10:	mov    cx,WORD PTR [eax]
64008c13:	add    eax,0x2
64008c16:	cmp    cx,di
64008c19:	jne    0x64008c10
64008c1b:	sub    eax,edx
64008c1d:	sar    eax,1
64008c1f:	cmp    eax,0x400
64008c24:	ja     0x64008dd0
64008c2a:	push   edi
64008c2b:	lea    ecx,[ebp-0x103c]
64008c31:	call   0x64009c60
64008c36:	push   0x6402ad84
64008c3b:	mov    DWORD PTR [ebp-0x4],edi
64008c3e:	push   0xc
64008c40:	mov    ecx,0x6402adb4
64008c45:	mov    BYTE PTR [ebp-0x4],0x1
64008c49:	call   0x64003030
64008c4e:	add    esp,0x8
64008c51:	push   ecx
64008c52:	mov    ecx,esp
64008c54:	mov    DWORD PTR [ebp-0x1050],esp
64008c5a:	push   ecx
64008c5b:	mov    ecx,eax
64008c5d:	call   0x64002a50
64008c62:	call   0x640079d0
64008c67:	add    esp,0x4
64008c6a:	push   eax
64008c6b:	lea    ecx,[ebp-0x103c]
64008c71:	call   0x64009cf0
64008c76:	mov    DWORD PTR [ebp-0x4],edi
64008c79:	jmp    0x64008c8d
64008c7b:	mov    DWORD PTR [ebp-0x4],0x0
64008c82:	mov    eax,0x64008c88
64008c87:	ret    
64008c88:	mov    ebx,DWORD PTR [ebp+0xc]
64008c8b:	xor    edi,edi
64008c8d:	lea    ecx,[ebp-0x103c]
64008c93:	call   0x64009ce0
64008c98:	test   eax,eax
64008c9a:	je     0x64008dbe
64008ca0:	push   edi
64008ca1:	lea    esi,[ebp-0x106c]
64008ca7:	call   0x64007880
64008cac:	add    esp,0x4
64008caf:	lea    edx,[ebp-0x1044]
64008cb5:	push   edx
64008cb6:	mov    ecx,eax
64008cb8:	mov    BYTE PTR [ebp-0x4],0x3
64008cbc:	call   0x6400a860
64008cc1:	mov    BYTE PTR [ebp-0x4],0x5
64008cc5:	cmp    DWORD PTR [ebp-0x1054],0x10
64008ccc:	jb     0x64008cdd
64008cce:	mov    eax,DWORD PTR [ebp-0x1068]
64008cd4:	push   eax
64008cd5:	call   0x64013604
64008cda:	add    esp,0x4
64008cdd:	lea    ecx,[ebp-0x103c]
64008ce3:	mov    DWORD PTR [ebp-0x1054],0xf
64008ced:	mov    DWORD PTR [ebp-0x1058],edi
64008cf3:	mov    BYTE PTR [ebp-0x1068],0x0
64008cfa:	mov    BYTE PTR [ebp-0x1038],0x0
64008d01:	call   0x64009cc0
64008d06:	push   0x6402add0
64008d0b:	mov    esi,eax
64008d0d:	mov    edi,DWORD PTR [esi]
64008d0f:	push   0x17
64008d11:	push   0x6402ae10
64008d16:	call   0x64002e30
64008d1b:	mov    edx,DWORD PTR [edi]
64008d1d:	add    esp,0xc
64008d20:	push   eax
64008d21:	mov    ecx,esi
64008d23:	call   edx
64008d25:	lea    ecx,[ebp-0x103c]
64008d2b:	mov    DWORD PTR [ebp-0x1030],eax
64008d31:	mov    DWORD PTR [ebp-0x102c],edx
64008d37:	call   0x64009cc0
64008d3c:	push   0x6402ae28
64008d41:	mov    esi,eax
64008d43:	mov    edi,DWORD PTR [esi]
64008d45:	push   0x17
64008d47:	push   0x6402ae5c
64008d4c:	call   0x64002e30
64008d51:	add    esp,0xc
64008d54:	push   eax
64008d55:	mov    eax,DWORD PTR [edi]
64008d57:	mov    ecx,esi
64008d59:	call   eax
64008d5b:	mov    DWORD PTR [ebp-0x1024],edx
64008d61:	lea    edx,[ebp-0x1020]
64008d67:	mov    DWORD PTR [ebp-0x1028],eax
64008d6d:	mov    eax,ebx
64008d6f:	sub    edx,ebx
64008d71:	movzx  ecx,WORD PTR [eax]
64008d74:	mov    WORD PTR [edx+eax*1],cx
64008d78:	add    eax,0x2
64008d7b:	test   cx,cx
64008d7e:	jne    0x64008d71
64008d80:	mov    eax,DWORD PTR [ebp-0x1044]
64008d86:	lea    edx,[ebp-0x1038]
64008d8c:	push   edx
64008d8d:	mov    DWORD PTR [ebp-0x20],0x40
64008d94:	mov    ecx,DWORD PTR [eax+0x6]
64008d97:	push   ecx
64008d98:	add    eax,0x12
64008d9b:	push   eax
64008d9c:	mov    eax,DWORD PTR [ebp-0x104c]
64008da2:	push   eax
64008da3:	call   0x640089f0
64008da8:	add    esp,0x10
64008dab:	test   al,al
64008dad:	jne    0x64008dd4
64008daf:	mov    ecx,DWORD PTR [ebp-0x1044]
64008db5:	push   ecx
64008db6:	call   0x64013604
64008dbb:	add    esp,0x4
64008dbe:	lea    ecx,[ebp-0x103c]
64008dc4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008dcb:	call   0x64009c80
64008dd0:	xor    eax,eax
64008dd2:	jmp    0x64008e22
64008dd4:	mov    esi,DWORD PTR [ebp-0x20]
64008dd7:	cmp    esi,0x40
64008dda:	jae    0x64008dff
64008ddc:	mov    edx,DWORD PTR [ebp-0x1048]
64008de2:	lea    eax,[ebp-0x820]
64008de8:	mov    ecx,eax
64008dea:	sub    edx,ecx
64008dec:	lea    esp,[esp+0x0]
64008df0:	movzx  ecx,WORD PTR [eax]
64008df3:	mov    WORD PTR [edx+eax*1],cx
64008df7:	add    eax,0x2
64008dfa:	test   cx,cx
64008dfd:	jne    0x64008df0
64008dff:	mov    edx,DWORD PTR [ebp-0x1044]
64008e05:	push   edx
64008e06:	call   0x64013604
64008e0b:	add    esp,0x4
64008e0e:	lea    ecx,[ebp-0x103c]
64008e14:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008e1b:	call   0x64009c80
64008e20:	mov    eax,esi
64008e22:	mov    ecx,DWORD PTR [ebp-0xc]
64008e25:	mov    DWORD PTR fs:0x0,ecx
64008e2c:	pop    ecx
64008e2d:	pop    edi
64008e2e:	pop    esi
64008e2f:	pop    ebx
64008e30:	mov    ecx,DWORD PTR [ebp-0x14]
64008e33:	xor    ecx,ebp
64008e35:	call   0x64013cc6
64008e3a:	mov    esp,ebp
64008e3c:	pop    ebp
64008e3d:	ret    
64008e3e:	int3   
64008e3f:	int3   
64008e40:	int3   
64008e41:	int3   
64008e42:	int3   
64008e43:	int3   
64008e44:	int3   
64008e45:	int3   
64008e46:	int3   
64008e47:	int3   
64008e48:	int3   
64008e49:	int3   
64008e4a:	int3   
64008e4b:	int3   
64008e4c:	int3   
64008e4d:	int3   
64008e4e:	int3   
64008e4f:	int3   
64008e50:	push   ebp
64008e51:	mov    ebp,esp
64008e53:	push   0xffffffff
64008e55:	push   0x64023791
64008e5a:	mov    eax,fs:0x0
64008e60:	push   eax
64008e61:	push   ecx
64008e62:	mov    eax,0x105c
64008e67:	call   0x64017d00
64008e6c:	mov    eax,ds:0x64037644
64008e71:	xor    eax,ebp
64008e73:	mov    DWORD PTR [ebp-0x18],eax
64008e76:	push   ebx
64008e77:	push   esi
64008e78:	push   edi
64008e79:	push   eax
64008e7a:	lea    eax,[ebp-0xc]
64008e7d:	mov    fs:0x0,eax
64008e83:	mov    DWORD PTR [ebp-0x10],esp
64008e86:	mov    ebx,DWORD PTR [ebp+0xc]
64008e89:	mov    eax,DWORD PTR [ebp+0x8]
64008e8c:	push   0x1018
64008e91:	xor    edi,edi
64008e93:	lea    ecx,[ebp-0x1034]
64008e99:	push   edi
64008e9a:	push   ecx
64008e9b:	mov    DWORD PTR [ebp-0x1044],eax
64008ea1:	mov    BYTE PTR [ebp-0x103c],0x0
64008ea8:	call   0x64015120
64008ead:	mov    eax,ebx
64008eaf:	add    esp,0xc
64008eb2:	lea    edx,[eax+0x2]
64008eb5:	mov    cx,WORD PTR [eax]
64008eb8:	add    eax,0x2
64008ebb:	cmp    cx,di
64008ebe:	jne    0x64008eb5
64008ec0:	sub    eax,edx
64008ec2:	sar    eax,1
64008ec4:	cmp    eax,0x400
64008ec9:	ja     0x640090a8
64008ecf:	mov    eax,DWORD PTR [ebp+0x10]
64008ed2:	lea    edx,[eax+0x2]
64008ed5:	mov    cx,WORD PTR [eax]
64008ed8:	add    eax,0x2
64008edb:	cmp    cx,di
64008ede:	jne    0x64008ed5
64008ee0:	sub    eax,edx
64008ee2:	sar    eax,1
64008ee4:	cmp    eax,0x400
64008ee9:	ja     0x640090a8
64008eef:	push   edi
64008ef0:	lea    ecx,[ebp-0x1040]
64008ef6:	call   0x64009c60
64008efb:	push   0x6402ae74
64008f00:	mov    DWORD PTR [ebp-0x4],edi
64008f03:	push   0xc
64008f05:	mov    ecx,0x6402adb4
64008f0a:	mov    BYTE PTR [ebp-0x4],0x1
64008f0e:	call   0x64003030
64008f13:	add    esp,0x8
64008f16:	push   ecx
64008f17:	mov    edx,esp
64008f19:	mov    DWORD PTR [ebp-0x1050],esp
64008f1f:	push   edx
64008f20:	mov    ecx,eax
64008f22:	call   0x64002a50
64008f27:	call   0x640079d0
64008f2c:	add    esp,0x4
64008f2f:	push   eax
64008f30:	lea    ecx,[ebp-0x1040]
64008f36:	call   0x64009cf0
64008f3b:	mov    DWORD PTR [ebp-0x4],edi
64008f3e:	jmp    0x64008f52
64008f40:	mov    DWORD PTR [ebp-0x4],0x0
64008f47:	mov    eax,0x64008f4d
64008f4c:	ret    
64008f4d:	mov    ebx,DWORD PTR [ebp+0xc]
64008f50:	xor    edi,edi
64008f52:	lea    ecx,[ebp-0x1040]
64008f58:	call   0x64009ce0
64008f5d:	test   eax,eax
64008f5f:	je     0x64009096
64008f65:	push   edi
64008f66:	lea    esi,[ebp-0x106c]
64008f6c:	call   0x64007880
64008f71:	add    esp,0x4
64008f74:	lea    ecx,[ebp-0x104c]
64008f7a:	push   ecx
64008f7b:	mov    ecx,eax
64008f7d:	mov    BYTE PTR [ebp-0x4],0x3
64008f81:	call   0x6400a860
64008f86:	mov    BYTE PTR [ebp-0x4],0x5
64008f8a:	cmp    DWORD PTR [ebp-0x1054],0x10
64008f91:	jb     0x64008fa2
64008f93:	mov    edx,DWORD PTR [ebp-0x1068]
64008f99:	push   edx
64008f9a:	call   0x64013604
64008f9f:	add    esp,0x4
64008fa2:	lea    ecx,[ebp-0x1040]
64008fa8:	mov    DWORD PTR [ebp-0x1054],0xf
64008fb2:	mov    DWORD PTR [ebp-0x1058],edi
64008fb8:	mov    BYTE PTR [ebp-0x1068],0x0
64008fbf:	mov    BYTE PTR [ebp-0x103c],0x1
64008fc6:	call   0x64009cc0
64008fcb:	push   0x6402aeac
64008fd0:	mov    esi,eax
64008fd2:	mov    edi,DWORD PTR [esi]
64008fd4:	push   0x17
64008fd6:	push   0x6402ae10
64008fdb:	call   0x64002e30
64008fe0:	add    esp,0xc
64008fe3:	push   eax
64008fe4:	mov    eax,DWORD PTR [edi]
64008fe6:	mov    ecx,esi
64008fe8:	call   eax
64008fea:	lea    ecx,[ebp-0x1040]
64008ff0:	mov    DWORD PTR [ebp-0x1034],eax
64008ff6:	mov    DWORD PTR [ebp-0x1030],edx
64008ffc:	call   0x64009cc0
64009001:	push   0x6402aed4
64009006:	mov    esi,eax
64009008:	mov    edi,DWORD PTR [esi]
6400900a:	push   0x17
6400900c:	push   0x6402ae5c
64009011:	call   0x64002e30
64009016:	mov    edx,DWORD PTR [edi]
64009018:	add    esp,0xc
6400901b:	push   eax
6400901c:	mov    ecx,esi
6400901e:	call   edx
64009020:	mov    DWORD PTR [ebp-0x1028],edx
64009026:	lea    edx,[ebp-0x1024]
6400902c:	mov    DWORD PTR [ebp-0x102c],eax
64009032:	mov    eax,ebx
64009034:	sub    edx,ebx
64009036:	movzx  ecx,WORD PTR [eax]
64009039:	mov    WORD PTR [edx+eax*1],cx
6400903d:	add    eax,0x2
64009040:	test   cx,cx
64009043:	jne    0x64009036
64009045:	mov    eax,DWORD PTR [ebp+0x10]
64009048:	lea    edx,[ebp-0x824]
6400904e:	sub    edx,eax
64009050:	movzx  ecx,WORD PTR [eax]
64009053:	mov    WORD PTR [edx+eax*1],cx
64009057:	add    eax,0x2
6400905a:	test   cx,cx
6400905d:	jne    0x64009050
6400905f:	mov    eax,DWORD PTR [ebp-0x104c]
64009065:	mov    ecx,DWORD PTR [eax+0x6]
64009068:	lea    edx,[ebp-0x103c]
6400906e:	push   edx
6400906f:	push   ecx
64009070:	add    eax,0x12
64009073:	push   eax
64009074:	mov    eax,DWORD PTR [ebp-0x1044]
6400907a:	push   eax
6400907b:	call   0x640089f0
64009080:	add    esp,0x10
64009083:	test   al,al
64009085:	jne    0x640090ac
64009087:	mov    ecx,DWORD PTR [ebp-0x104c]
6400908d:	push   ecx
6400908e:	call   0x64013604
64009093:	add    esp,0x4
64009096:	lea    ecx,[ebp-0x1040]
6400909c:	mov    DWORD PTR [ebp-0x4],0xffffffff
640090a3:	call   0x64009c80
640090a8:	xor    eax,eax
640090aa:	jmp    0x640090d2
640090ac:	mov    edx,DWORD PTR [ebp-0x104c]
640090b2:	push   edx
640090b3:	call   0x64013604
640090b8:	add    esp,0x4
640090bb:	lea    ecx,[ebp-0x1040]
640090c1:	mov    DWORD PTR [ebp-0x4],0xffffffff
640090c8:	call   0x64009c80
640090cd:	mov    eax,0x1
640090d2:	mov    ecx,DWORD PTR [ebp-0xc]
640090d5:	mov    DWORD PTR fs:0x0,ecx
640090dc:	pop    ecx
640090dd:	pop    edi
640090de:	pop    esi
640090df:	pop    ebx
640090e0:	mov    ecx,DWORD PTR [ebp-0x18]
640090e3:	xor    ecx,ebp
640090e5:	call   0x64013cc6
640090ea:	mov    esp,ebp
640090ec:	pop    ebp
640090ed:	ret    
640090ee:	int3   
640090ef:	int3   
640090f0:	push   0xffffffff
640090f2:	push   0x64023adb
640090f7:	mov    eax,fs:0x0
640090fd:	push   eax
640090fe:	sub    esp,0x88
64009104:	mov    eax,ds:0x64037644
64009109:	xor    eax,esp
6400910b:	mov    DWORD PTR [esp+0x84],eax
64009112:	push   edi
64009113:	mov    eax,ds:0x64037644
64009118:	xor    eax,esp
6400911a:	push   eax
6400911b:	lea    eax,[esp+0x90]
64009122:	mov    fs:0x0,eax
64009128:	mov    BYTE PTR [esi+0x890],0x0
6400912f:	mov    eax,ds:0x64038e64
64009134:	mov    edx,DWORD PTR [eax+0xc]
64009137:	mov    ecx,0x64038e64
6400913c:	call   edx
6400913e:	add    eax,0x10
64009141:	mov    DWORD PTR [esp+0x8],eax
64009145:	mov    DWORD PTR [esp+0x98],0x0
64009150:	mov    eax,DWORD PTR [esi+0x4]
64009153:	push   eax
64009154:	push   0x6402af10
64009159:	push   0x10
6400915b:	mov    ecx,0x6402af38
64009160:	call   0x64003030
64009165:	add    esp,0x8
64009168:	push   eax
64009169:	lea    ecx,[esp+0x10]
6400916d:	push   ecx
6400916e:	call   0x6400a5a0
64009173:	mov    edx,DWORD PTR [esp+0x14]
64009177:	mov    eax,DWORD PTR [esi]
64009179:	add    esp,0xc
6400917c:	push   edx
6400917d:	push   eax
6400917e:	lea    ecx,[esp+0x14]
64009182:	call   0x64008ba0
64009187:	add    esp,0x8
6400918a:	test   eax,eax
6400918c:	je     0x640091e8
6400918e:	lea    eax,[esp+0xc]
64009192:	push   eax
64009193:	call   0x6401509c
64009198:	mov    edi,eax
6400919a:	add    esp,0x4
6400919d:	test   edi,edi
6400919f:	je     0x640091e8
640091a1:	mov    eax,DWORD PTR [esi]
640091a3:	push   0x0
640091a5:	push   0x880
640091aa:	lea    ecx,[esi+0x8]
640091ad:	push   ecx
640091ae:	push   edi
640091af:	push   eax
640091b0:	call   DWORD PTR ds:0x640240d8
640091b6:	test   eax,eax
640091b8:	jne    0x640091db
640091ba:	mov    DWORD PTR [esp+0x98],0xffffffff
640091c5:	mov    eax,DWORD PTR [esp+0x8]
640091c9:	add    eax,0xfffffff0
640091cc:	lea    edx,[eax+0xc]
640091cf:	or     ecx,0xffffffff
640091d2:	lock xadd DWORD PTR [edx],ecx
640091d6:	dec    ecx
640091d7:	test   ecx,ecx
640091d9:	jmp    0x64009207
640091db:	mov    DWORD PTR [esi+0x888],edi
640091e1:	mov    BYTE PTR [esi+0x890],0x1
640091e8:	mov    DWORD PTR [esp+0x98],0xffffffff
640091f3:	mov    eax,DWORD PTR [esp+0x8]
640091f7:	add    eax,0xfffffff0
640091fa:	or     edx,0xffffffff
640091fd:	lea    ecx,[eax+0xc]
64009200:	lock xadd DWORD PTR [ecx],edx
64009204:	dec    edx
64009205:	test   edx,edx
64009207:	jg     0x64009213
64009209:	mov    ecx,DWORD PTR [eax]
6400920b:	mov    edx,DWORD PTR [ecx]
6400920d:	push   eax
6400920e:	mov    eax,DWORD PTR [edx+0x4]
64009211:	call   eax
64009213:	mov    ecx,DWORD PTR [esp+0x90]
6400921a:	mov    DWORD PTR fs:0x0,ecx
64009221:	pop    ecx
64009222:	pop    edi
64009223:	mov    ecx,DWORD PTR [esp+0x84]
6400922a:	xor    ecx,esp
6400922c:	call   0x64013cc6
64009231:	add    esp,0x94
64009237:	ret    
64009238:	int3   
64009239:	int3   
6400923a:	int3   
6400923b:	int3   
6400923c:	int3   
6400923d:	int3   
6400923e:	int3   
6400923f:	int3   
64009240:	push   ebp
64009241:	mov    ebp,esp
64009243:	and    esp,0xfffffff8
64009246:	push   0xffffffff
64009248:	push   0x64023ba1
6400924d:	mov    eax,fs:0x0
64009253:	push   eax
64009254:	sub    esp,0x874
6400925a:	mov    eax,ds:0x64037644
6400925f:	xor    eax,esp
64009261:	mov    DWORD PTR [esp+0x86c],eax
64009268:	push   esi
64009269:	push   edi
6400926a:	mov    eax,ds:0x64037644
6400926f:	xor    eax,esp
64009271:	push   eax
64009272:	lea    eax,[esp+0x880]
64009279:	mov    fs:0x0,eax
6400927f:	mov    eax,DWORD PTR [ebp+0x8]
64009282:	mov    edi,ecx
64009284:	mov    esi,edi
64009286:	mov    DWORD PTR [esp+0x14],eax
6400928a:	call   0x640090f0
6400928f:	cmp    BYTE PTR [edi+0x890],0x0
64009296:	je     0x6400938d
6400929c:	push   ecx
6400929d:	mov    ecx,esp
6400929f:	mov    DWORD PTR [esp+0x1c],esp
640092a3:	lea    esi,[edi+0x88]
640092a9:	push   ecx
640092aa:	mov    ecx,esi
640092ac:	call   0x64002a50
640092b1:	mov    edx,DWORD PTR [edi+0x4]
640092b4:	push   edx
640092b5:	call   0x64002710
640092ba:	add    esp,0x8
640092bd:	test   al,al
640092bf:	je     0x64009308
640092c1:	xor    esi,esi
640092c3:	push   esi
640092c4:	push   0x64029616
640092c9:	lea    ecx,[esp+0x38]
640092cd:	mov    DWORD PTR [esp+0x50],0xf
640092d5:	mov    DWORD PTR [esp+0x4c],esi
640092d9:	mov    BYTE PTR [esp+0x3c],0x0
640092de:	call   0x640033f0
640092e3:	lea    eax,[esp+0x30]
640092e7:	push   eax
640092e8:	lea    ecx,[esp+0x50]
640092ec:	push   ecx
640092ed:	mov    DWORD PTR [esp+0x890],esi
640092f4:	call   0x64001440
640092f9:	push   0x6402bc90
640092fe:	lea    edx,[esp+0x50]
64009302:	push   edx
64009303:	call   0x64013832
64009308:	mov    edx,esi
6400930a:	mov    eax,ebx
6400930c:	sub    edx,ebx
6400930e:	mov    edi,edi
64009310:	movzx  ecx,WORD PTR [eax]
64009313:	mov    WORD PTR [edx+eax*1],cx
64009317:	add    eax,0x2
6400931a:	test   cx,cx
6400931d:	jne    0x64009310
6400931f:	lea    ecx,[esp+0x1c]
64009323:	call   0x64009b50
64009328:	mov    DWORD PTR [esp+0x888],0x1
64009333:	mov    eax,DWORD PTR [edi+0x4]
64009336:	push   eax
64009337:	lea    ecx,[esp+0x20]
6400933b:	call   0x64007a70
64009340:	mov    eax,DWORD PTR [edi+0x70]
64009343:	mov    ecx,DWORD PTR [edi]
64009345:	xor    edx,edx
64009347:	push   0x8000
6400934c:	push   edx
6400934d:	push   eax
6400934e:	push   ecx
6400934f:	mov    DWORD PTR [edi+0x70],edx
64009352:	mov    DWORD PTR [edi+0x74],edx
64009355:	mov    DWORD PTR [edi+0x78],edx
64009358:	call   DWORD PTR ds:0x640240c4
6400935e:	mov    ecx,DWORD PTR [esp+0x14]
64009362:	push   ecx
64009363:	mov    ecx,edi
64009365:	call   0x64007cd0
6400936a:	push   edi
6400936b:	call   0x64008950
64009370:	lea    esi,[esp+0x1c]
64009374:	mov    DWORD PTR [esp+0x888],0xffffffff
6400937f:	call   0x64007b70
64009384:	mov    ecx,esi
64009386:	call   0x64009c40
6400938b:	jmp    0x640093c5
6400938d:	lea    edx,[edi+0x88]
64009393:	mov    eax,ebx
64009395:	sub    edx,ebx
64009397:	jmp    0x640093a0
64009399:	lea    esp,[esp+0x0]
640093a0:	movzx  ecx,WORD PTR [eax]
640093a3:	mov    WORD PTR [edx+eax*1],cx
640093a7:	add    eax,0x2
640093aa:	test   cx,cx
640093ad:	jne    0x640093a0
640093af:	call   0x640087f0
640093b4:	mov    edx,DWORD PTR [esp+0x14]
640093b8:	push   edx
640093b9:	mov    ecx,edi
640093bb:	call   0x64007cd0
640093c0:	call   0x64007f40
640093c5:	push   0xa
640093c7:	lea    eax,[esp+0x78]
640093cb:	push   eax
640093cc:	mov    eax,DWORD PTR [edi+0x888]
640093d2:	cdq    
640093d3:	push   edx
640093d4:	push   eax
640093d5:	call   0x64014e66
640093da:	mov    edx,DWORD PTR ds:0x64038e64
640093e0:	mov    eax,DWORD PTR [edx+0xc]
640093e3:	add    esp,0x10
640093e6:	mov    ecx,0x64038e64
640093eb:	call   eax
640093ed:	add    eax,0x10
640093f0:	mov    DWORD PTR [esp+0x10],eax
640093f4:	mov    DWORD PTR [esp+0x888],0x2
640093ff:	mov    ecx,DWORD PTR [edi+0x4]
64009402:	push   ecx
64009403:	push   0x6402af5c
64009408:	push   0x10
6400940a:	mov    ecx,0x6402af38
6400940f:	call   0x64003030
64009414:	add    esp,0x8
64009417:	push   eax
64009418:	lea    edx,[esp+0x18]
6400941c:	push   edx
6400941d:	call   0x6400a5a0
64009422:	mov    ecx,DWORD PTR [esp+0x1c]
64009426:	mov    edi,DWORD PTR [edi]
64009428:	add    esp,0xc
6400942b:	lea    eax,[esp+0x74]
6400942f:	push   eax
64009430:	push   ecx
64009431:	push   edi
64009432:	call   0x64008e50
64009437:	mov    DWORD PTR [esp+0x894],0xffffffff
64009442:	mov    eax,DWORD PTR [esp+0x1c]
64009446:	add    eax,0xfffffff0
64009449:	add    esp,0xc
6400944c:	lea    edx,[eax+0xc]
6400944f:	or     ecx,0xffffffff
64009452:	lock xadd DWORD PTR [edx],ecx
64009456:	dec    ecx
64009457:	test   ecx,ecx
64009459:	jg     0x64009465
6400945b:	mov    ecx,DWORD PTR [eax]
6400945d:	mov    edx,DWORD PTR [ecx]
6400945f:	push   eax
64009460:	mov    eax,DWORD PTR [edx+0x4]
64009463:	call   eax
64009465:	mov    ecx,DWORD PTR [esp+0x880]
6400946c:	mov    DWORD PTR fs:0x0,ecx
64009473:	pop    ecx
64009474:	pop    edi
64009475:	pop    esi
64009476:	mov    ecx,DWORD PTR [esp+0x86c]
6400947d:	xor    ecx,esp
6400947f:	call   0x64013cc6
64009484:	mov    esp,ebp
64009486:	pop    ebp
64009487:	ret    0x4
6400948a:	int3   
6400948b:	int3   
6400948c:	int3   
6400948d:	int3   
6400948e:	int3   
6400948f:	int3   
64009490:	push   ebp
64009491:	mov    ebp,esp
64009493:	push   0xffffffff
64009495:	push   0x64023be6
6400949a:	mov    eax,fs:0x0
640094a0:	push   eax
640094a1:	sub    esp,0x8bc
640094a7:	mov    eax,ds:0x64037644
640094ac:	xor    eax,ebp
640094ae:	mov    DWORD PTR [ebp-0x14],eax
640094b1:	push   ebx
640094b2:	push   esi
640094b3:	push   edi
640094b4:	push   eax
640094b5:	lea    eax,[ebp-0xc]
640094b8:	mov    fs:0x0,eax
640094be:	mov    DWORD PTR [ebp-0x10],esp
640094c1:	mov    esi,DWORD PTR [ebp+0x8]
640094c4:	mov    edi,DWORD PTR [ebp+0xc]
640094c7:	mov    ebx,DWORD PTR [ebp+0x10]
640094ca:	lea    eax,[ebp-0x8ac]
640094d0:	push   eax
640094d1:	mov    ecx,esi
640094d3:	mov    DWORD PTR [ebp-0x4],0x0
640094da:	call   0x64007bc0
640094df:	push   edi
640094e0:	lea    ecx,[ebp-0x8ac]
640094e6:	mov    BYTE PTR [ebp-0x4],0x1
640094ea:	call   0x64009240
640094ef:	call   DWORD PTR ds:0x6403761c
640094f5:	mov    edi,eax
640094f7:	call   DWORD PTR ds:0x64024038
640094fd:	cmp    esi,eax
640094ff:	je     0x64009568
64009501:	test   ebx,ebx
64009503:	jne    0x64009519
64009505:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400950b:	xor    eax,eax
6400950d:	push   eax
6400950e:	push   ecx
6400950f:	call   0x64009630
64009514:	add    esp,0x8
64009517:	jmp    0x6400956f
64009519:	push   ebx
6400951a:	call   DWORD PTR ds:0x64024030
64009520:	add    eax,0x1
64009523:	cmp    eax,0x3fffffff
64009528:	jle    0x6400953e
6400952a:	mov    ecx,DWORD PTR [ebp-0x8ac]
64009530:	xor    eax,eax
64009532:	push   eax
64009533:	push   ecx
64009534:	call   0x64009630
64009539:	add    esp,0x8
6400953c:	jmp    0x6400956f
6400953e:	lea    esi,[eax+eax*1]
64009541:	mov    eax,esi
64009543:	call   0x64013ce0
64009548:	mov    DWORD PTR [ebp-0x10],esp
6400954b:	mov    eax,esp
6400954d:	push   edi
6400954e:	push   esi
6400954f:	push   ebx
64009550:	push   eax
64009551:	call   0x64001000
64009556:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400955c:	push   eax
6400955d:	push   ecx
6400955e:	call   0x64009630
64009563:	add    esp,0x8
64009566:	jmp    0x6400956f
64009568:	push   ebx
64009569:	call   DWORD PTR ds:0x640240c8
6400956f:	lea    ecx,[ebp-0x18]
64009572:	call   0x64009a90
64009577:	mov    esi,DWORD PTR [ebp-0x8ac]
6400957d:	test   esi,esi
6400957f:	je     0x64009597
64009581:	call   DWORD PTR ds:0x64024068
64009587:	push   esi
64009588:	mov    edi,eax
6400958a:	call   DWORD PTR ds:0x64024074
64009590:	push   edi
64009591:	call   DWORD PTR ds:0x64024070
64009597:	lea    esp,[ebp-0x8d8]
6400959d:	mov    ecx,DWORD PTR [ebp-0xc]
640095a0:	mov    DWORD PTR fs:0x0,ecx
640095a7:	pop    ecx
640095a8:	pop    edi
640095a9:	pop    esi
640095aa:	pop    ebx
640095ab:	mov    ecx,DWORD PTR [ebp-0x14]
640095ae:	xor    ecx,ebp
640095b0:	call   0x64013cc6
640095b5:	mov    esp,ebp
640095b7:	pop    ebp
640095b8:	ret    
640095b9:	push   0x64029616
640095be:	lea    ecx,[ebp-0x8c8]
640095c4:	call   0x640028f0
640095c9:	mov    BYTE PTR [ebp-0x4],0x3
640095cd:	call   0x6400a7c0
640095d2:	lea    ecx,[ebp-0x8c8]
640095d8:	call   0x64002930
640095dd:	mov    eax,0x64009597
640095e2:	ret    
640095e3:	int3   
640095e4:	int3   
640095e5:	int3   
640095e6:	int3   
640095e7:	int3   
640095e8:	int3   
640095e9:	int3   
640095ea:	int3   
640095eb:	int3   
640095ec:	int3   
640095ed:	int3   
640095ee:	int3   
640095ef:	int3   
640095f0:	push   edi
640095f1:	lea    ecx,[esi+0x894]
640095f7:	call   0x64009a90
640095fc:	mov    edi,DWORD PTR [esi]
640095fe:	test   edi,edi
64009600:	je     0x6400961a
64009602:	push   ebx
64009603:	call   DWORD PTR ds:0x64024068
64009609:	push   edi
6400960a:	mov    ebx,eax
6400960c:	call   DWORD PTR ds:0x64024074
64009612:	push   ebx
64009613:	call   DWORD PTR ds:0x64024070
64009619:	pop    ebx
6400961a:	mov    DWORD PTR [esi],0x0
64009620:	pop    edi
64009621:	ret    
64009622:	int3   
64009623:	int3   
64009624:	int3   
64009625:	int3   
64009626:	int3   
64009627:	int3   
64009628:	int3   
64009629:	int3   
6400962a:	int3   
6400962b:	int3   
6400962c:	int3   
6400962d:	int3   
6400962e:	int3   
6400962f:	int3   
64009630:	push   ebp
64009631:	mov    ebp,esp
64009633:	push   0xffffffff
64009635:	push   0x6402373b
6400963a:	mov    eax,fs:0x0
64009640:	push   eax
64009641:	push   ecx
64009642:	sub    esp,0x220
64009648:	mov    eax,ds:0x64037644
6400964d:	xor    eax,ebp
6400964f:	mov    DWORD PTR [ebp-0x3c],eax
64009652:	push   ebx
64009653:	push   esi
64009654:	push   edi
64009655:	push   eax
64009656:	lea    eax,[ebp-0xc]
64009659:	mov    fs:0x0,eax
6400965f:	mov    DWORD PTR [ebp-0x10],esp
64009662:	push   0x6402af98
64009667:	push   0xc
64009669:	mov    ecx,0x6402adb4
6400966e:	call   0x64003030
64009673:	add    esp,0x4
64009676:	mov    ecx,esp
64009678:	mov    DWORD PTR [ebp-0xd8],esp
6400967e:	push   ecx
6400967f:	mov    ecx,eax
64009681:	call   0x64002a50
64009686:	mov    DWORD PTR [ebp-0x200],eax
6400968c:	call   0x640079d0
64009691:	add    esp,0x4
64009694:	mov    DWORD PTR [ebp-0x174],eax
6400969a:	mov    edx,DWORD PTR [ebp-0x174]
640096a0:	mov    DWORD PTR [ebp-0x28],edx
640096a3:	mov    DWORD PTR [ebp-0x4],0x0
640096aa:	cmp    DWORD PTR [ebp-0x28],0x0
640096ae:	jne    0x6400970e
640096b0:	mov    BYTE PTR [ebp-0xd9],0x0
640096b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
640096be:	mov    eax,DWORD PTR [ebp-0x28]
640096c1:	mov    DWORD PTR [ebp-0x17c],eax
640096c7:	mov    ecx,DWORD PTR [ebp-0x17c]
640096cd:	mov    DWORD PTR [ebp-0x178],ecx
640096d3:	cmp    DWORD PTR [ebp-0x178],0x0
640096da:	je     0x640096f9
640096dc:	push   0x1
640096de:	mov    edx,DWORD PTR [ebp-0x178]
640096e4:	mov    eax,DWORD PTR [edx]
640096e6:	mov    ecx,DWORD PTR [ebp-0x178]
640096ec:	mov    edx,DWORD PTR [eax+0x4]
640096ef:	call   edx
640096f1:	mov    DWORD PTR [ebp-0x204],eax
640096f7:	jmp    0x64009703
640096f9:	mov    DWORD PTR [ebp-0x204],0x0
64009703:	mov    al,BYTE PTR [ebp-0xd9]
64009709:	jmp    0x64009a72
6400970e:	mov    eax,DWORD PTR [ebp+0x8]
64009711:	push   eax
64009712:	call   0x640028e0
64009717:	add    esp,0x4
6400971a:	push   eax
6400971b:	lea    esi,[ebp-0xf8]
64009721:	call   0x64007840
64009726:	add    esp,0x4
64009729:	mov    DWORD PTR [ebp-0x208],eax
6400972f:	mov    ecx,DWORD PTR [ebp-0x208]
64009735:	mov    DWORD PTR [ebp-0x20c],ecx
6400973b:	mov    BYTE PTR [ebp-0x4],0x1
6400973f:	lea    edx,[ebp-0x38]
64009742:	push   edx
64009743:	mov    ecx,DWORD PTR [ebp-0x20c]
64009749:	call   0x6400a860
6400974e:	mov    BYTE PTR [ebp-0x4],0x3
64009752:	lea    ecx,[ebp-0xf8]
64009758:	call   0x64002930
6400975d:	mov    BYTE PTR [ebp-0x11],0x0
64009761:	mov    DWORD PTR [ebp-0x18],0x0
64009768:	mov    DWORD PTR [ebp-0x30],0x0
6400976f:	mov    DWORD PTR [ebp-0x24],0x0
64009776:	mov    DWORD PTR [ebp-0x2c],0x0
6400977d:	mov    DWORD PTR [ebp-0x1c],0x0
64009784:	mov    DWORD PTR [ebp-0x20],0x0
6400978b:	mov    BYTE PTR [ebp-0x4],0x4
6400978f:	mov    eax,DWORD PTR [ebp-0x28]
64009792:	mov    DWORD PTR [ebp-0x210],eax
64009798:	push   0x6402afcc
6400979d:	push   0xc
6400979f:	push   0x6402aff8
640097a4:	call   0x64002e30
640097a9:	add    esp,0xc
640097ac:	mov    DWORD PTR [ebp-0x214],eax
640097b2:	mov    ecx,DWORD PTR [ebp-0x214]
640097b8:	push   ecx
640097b9:	mov    edx,DWORD PTR [ebp-0x210]
640097bf:	mov    eax,DWORD PTR [edx]
640097c1:	mov    ecx,DWORD PTR [ebp-0x210]
640097c7:	mov    edx,DWORD PTR [eax]
640097c9:	call   edx
640097cb:	mov    DWORD PTR [ebp-0x21c],eax
640097d1:	mov    DWORD PTR [ebp-0x218],edx
640097d7:	mov    eax,DWORD PTR [ebp-0x21c]
640097dd:	mov    DWORD PTR [ebp-0xc8],eax
640097e3:	mov    ecx,DWORD PTR [ebp-0x218]
640097e9:	mov    DWORD PTR [ebp-0xc4],ecx
640097ef:	push   0x80
640097f4:	push   0x0
640097f6:	lea    edx,[ebp-0xc0]
640097fc:	push   edx
640097fd:	call   0x64015120
64009802:	add    esp,0xc
64009805:	mov    eax,DWORD PTR [ebp+0xc]
64009808:	mov    DWORD PTR [ebp-0x220],eax
6400980e:	lea    ecx,[ebp-0xc0]
64009814:	mov    DWORD PTR [ebp-0x224],ecx
6400981a:	mov    edx,DWORD PTR [ebp-0x224]
64009820:	mov    DWORD PTR [ebp-0x228],edx
64009826:	mov    eax,DWORD PTR [ebp-0x220]
6400982c:	mov    cl,BYTE PTR [eax]
6400982e:	mov    BYTE PTR [ebp-0x229],cl
64009834:	mov    edx,DWORD PTR [ebp-0x224]
6400983a:	mov    al,BYTE PTR [ebp-0x229]
64009840:	mov    BYTE PTR [edx],al
64009842:	mov    ecx,DWORD PTR [ebp-0x220]
64009848:	add    ecx,0x1
6400984b:	mov    DWORD PTR [ebp-0x220],ecx
64009851:	mov    edx,DWORD PTR [ebp-0x224]
64009857:	add    edx,0x1
6400985a:	mov    DWORD PTR [ebp-0x224],edx
64009860:	cmp    BYTE PTR [ebp-0x229],0x0
64009867:	jne    0x64009826
64009869:	mov    eax,DWORD PTR [ebp-0xc8]
6400986f:	or     eax,DWORD PTR [ebp-0xc4]
64009875:	jne    0x6400987c
64009877:	jmp    0x640099a1
6400987c:	push   0x4
6400987e:	push   0x3000
64009883:	push   0x88
64009888:	push   0x0
6400988a:	mov    ecx,DWORD PTR [ebp+0x8]
6400988d:	push   ecx
6400988e:	call   DWORD PTR ds:0x640240d4
64009894:	mov    DWORD PTR [ebp-0x18],eax
64009897:	cmp    DWORD PTR [ebp-0x18],0x0
6400989b:	jne    0x640098ae
6400989d:	call   DWORD PTR ds:0x64024068
640098a3:	mov    DWORD PTR [ebp-0xd4],eax
640098a9:	jmp    0x640099a1
640098ae:	lea    edx,[ebp-0x20]
640098b1:	push   edx
640098b2:	push   0x88
640098b7:	lea    eax,[ebp-0xc8]
640098bd:	push   eax
640098be:	mov    ecx,DWORD PTR [ebp-0x18]
640098c1:	push   ecx
640098c2:	mov    edx,DWORD PTR [ebp+0x8]
640098c5:	push   edx
640098c6:	call   DWORD PTR ds:0x640240e8
640098cc:	lea    eax,[ebp-0x38]
640098cf:	call   0x6400a9d0
640098d4:	mov    DWORD PTR [ebp-0xcc],eax
640098da:	push   0x40
640098dc:	push   0x3000
640098e1:	mov    eax,DWORD PTR [ebp-0xcc]
640098e7:	push   eax
640098e8:	push   0x0
640098ea:	mov    ecx,DWORD PTR [ebp+0x8]
640098ed:	push   ecx
640098ee:	call   DWORD PTR ds:0x640240d4
640098f4:	mov    DWORD PTR [ebp-0x30],eax
640098f7:	mov    edx,DWORD PTR [ebp-0x30]
640098fa:	push   edx
640098fb:	lea    eax,[ebp-0x38]
640098fe:	call   0x6400a9e0
64009903:	cmp    DWORD PTR [ebp-0x30],0x0
64009907:	jne    0x6400990e
64009909:	jmp    0x640099a1
6400990e:	lea    eax,[ebp-0x20]
64009911:	push   eax
64009912:	mov    ecx,DWORD PTR [ebp-0xcc]
64009918:	push   ecx
64009919:	lea    eax,[ebp-0x38]
6400991c:	call   0x6400a9c0
64009921:	push   eax
64009922:	mov    edx,DWORD PTR [ebp-0x30]
64009925:	push   edx
64009926:	mov    eax,DWORD PTR [ebp+0x8]
64009929:	push   eax
6400992a:	call   DWORD PTR ds:0x640240e8
64009930:	mov    DWORD PTR [ebp-0xd0],0x0
6400993a:	lea    ecx,[ebp-0xd0]
64009940:	push   ecx
64009941:	push   0xf01ff
64009946:	mov    edx,DWORD PTR [ebp+0x8]
64009949:	push   edx
6400994a:	call   DWORD PTR ds:0x64024008
64009950:	mov    eax,DWORD PTR [ebp-0xd0]
64009956:	push   eax
64009957:	call   DWORD PTR ds:0x64024004
6400995d:	lea    ecx,[ebp-0x2c]
64009960:	push   ecx
64009961:	push   0x0
64009963:	mov    edx,DWORD PTR [ebp-0x18]
64009966:	push   edx
64009967:	mov    eax,DWORD PTR [ebp-0x30]
6400996a:	push   eax
6400996b:	push   0x0
6400996d:	push   0x0
6400996f:	mov    ecx,DWORD PTR [ebp+0x8]
64009972:	push   ecx
64009973:	call   DWORD PTR ds:0x640240cc
64009979:	mov    DWORD PTR [ebp-0x24],eax
6400997c:	cmp    DWORD PTR [ebp-0x24],0x0
64009980:	jne    0x64009984
64009982:	jmp    0x640099a1
64009984:	call   DWORD PTR ds:0x64024000
6400998a:	push   0xffffffff
6400998c:	mov    edx,DWORD PTR [ebp-0x24]
6400998f:	push   edx
64009990:	call   DWORD PTR ds:0x64024058
64009996:	mov    BYTE PTR [ebp-0x11],0x1
6400999a:	jmp    0x640099a1
6400999c:	jmp    0x6400978f
640099a1:	jmp    0x640099b0
640099a3:	mov    DWORD PTR [ebp-0x4],0x3
640099aa:	mov    eax,0x640099b7
640099af:	ret    
640099b0:	mov    DWORD PTR [ebp-0x4],0x3
640099b7:	cmp    DWORD PTR [ebp-0x18],0x0
640099bb:	je     0x640099d2
640099bd:	push   0x8000
640099c2:	push   0x0
640099c4:	mov    eax,DWORD PTR [ebp-0x18]
640099c7:	push   eax
640099c8:	mov    ecx,DWORD PTR [ebp+0x8]
640099cb:	push   ecx
640099cc:	call   DWORD PTR ds:0x640240c4
640099d2:	cmp    DWORD PTR [ebp-0x30],0x0
640099d6:	je     0x640099ed
640099d8:	push   0x8000
640099dd:	push   0x0
640099df:	mov    edx,DWORD PTR [ebp-0x30]
640099e2:	push   edx
640099e3:	mov    eax,DWORD PTR [ebp+0x8]
640099e6:	push   eax
640099e7:	call   DWORD PTR ds:0x640240c4
640099ed:	cmp    DWORD PTR [ebp-0x24],0x0
640099f1:	je     0x64009a0b
640099f3:	lea    ecx,[ebp-0x1c]
640099f6:	push   ecx
640099f7:	mov    edx,DWORD PTR [ebp-0x24]
640099fa:	push   edx
640099fb:	call   DWORD PTR ds:0x640240d0
64009a01:	mov    eax,DWORD PTR [ebp-0x24]
64009a04:	push   eax
64009a05:	call   DWORD PTR ds:0x64024074
64009a0b:	mov    cl,BYTE PTR [ebp-0x11]
64009a0e:	mov    BYTE PTR [ebp-0xf9],cl
64009a14:	mov    BYTE PTR [ebp-0x4],0x0
64009a18:	lea    eax,[ebp-0x38]
64009a1b:	call   0x64007770
64009a20:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009a27:	mov    edx,DWORD PTR [ebp-0x28]
64009a2a:	mov    DWORD PTR [ebp-0x1fc],edx
64009a30:	mov    eax,DWORD PTR [ebp-0x1fc]
64009a36:	mov    DWORD PTR [ebp-0x1f8],eax
64009a3c:	cmp    DWORD PTR [ebp-0x1f8],0x0
64009a43:	je     0x64009a62
64009a45:	push   0x1
64009a47:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a4d:	mov    edx,DWORD PTR [ecx]
64009a4f:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a55:	mov    eax,DWORD PTR [edx+0x4]
64009a58:	call   eax
64009a5a:	mov    DWORD PTR [ebp-0x230],eax
64009a60:	jmp    0x64009a6c
64009a62:	mov    DWORD PTR [ebp-0x230],0x0
64009a6c:	mov    al,BYTE PTR [ebp-0xf9]
64009a72:	mov    ecx,DWORD PTR [ebp-0xc]
64009a75:	mov    DWORD PTR fs:0x0,ecx
64009a7c:	pop    ecx
64009a7d:	pop    edi
64009a7e:	pop    esi
64009a7f:	pop    ebx
64009a80:	mov    ecx,DWORD PTR [ebp-0x3c]
64009a83:	xor    ecx,ebp
64009a85:	call   0x64013cc6
64009a8a:	mov    esp,ebp
64009a8c:	pop    ebp
64009a8d:	ret    
64009a8e:	int3   
64009a8f:	int3   
64009a90:	push   ebp
64009a91:	mov    ebp,esp
64009a93:	sub    esp,0x14
64009a96:	mov    DWORD PTR [ebp-0x10],ecx
64009a99:	mov    eax,DWORD PTR [ebp-0x10]
64009a9c:	mov    ecx,DWORD PTR [eax]
64009a9e:	mov    DWORD PTR [ebp-0x8],ecx
64009aa1:	mov    edx,DWORD PTR [ebp-0x8]
64009aa4:	mov    DWORD PTR [ebp-0x4],edx
64009aa7:	cmp    DWORD PTR [ebp-0x4],0x0
64009aab:	je     0x64009ad3
64009aad:	mov    eax,DWORD PTR [ebp-0x4]
64009ab0:	call   0x64007770
64009ab5:	mov    eax,0x1
64009aba:	and    eax,0x1
64009abd:	je     0x64009acb
64009abf:	mov    ecx,DWORD PTR [ebp-0x4]
64009ac2:	push   ecx
64009ac3:	call   0x64013604
64009ac8:	add    esp,0x4
64009acb:	mov    edx,DWORD PTR [ebp-0x4]
64009ace:	mov    DWORD PTR [ebp-0x14],edx
64009ad1:	jmp    0x64009ada
64009ad3:	mov    DWORD PTR [ebp-0x14],0x0
64009ada:	mov    esp,ebp
64009adc:	pop    ebp
64009add:	ret    
64009ade:	int3   
64009adf:	int3   
64009ae0:	push   ebp
64009ae1:	mov    ebp,esp
64009ae3:	sub    esp,0x14
64009ae6:	mov    DWORD PTR [ebp-0x10],ecx
64009ae9:	mov    eax,DWORD PTR [ebp-0x10]
64009aec:	mov    ecx,DWORD PTR [ebp+0x8]
64009aef:	cmp    ecx,DWORD PTR [eax]
64009af1:	je     0x64009b34
64009af3:	mov    edx,DWORD PTR [ebp-0x10]
64009af6:	mov    eax,DWORD PTR [edx]
64009af8:	mov    DWORD PTR [ebp-0x8],eax
64009afb:	mov    ecx,DWORD PTR [ebp-0x8]
64009afe:	mov    DWORD PTR [ebp-0x4],ecx
64009b01:	cmp    DWORD PTR [ebp-0x4],0x0
64009b05:	je     0x64009b2d
64009b07:	mov    eax,DWORD PTR [ebp-0x4]
64009b0a:	call   0x64007770
64009b0f:	mov    edx,0x1
64009b14:	and    edx,0x1
64009b17:	je     0x64009b25
64009b19:	mov    eax,DWORD PTR [ebp-0x4]
64009b1c:	push   eax
64009b1d:	call   0x64013604
64009b22:	add    esp,0x4
64009b25:	mov    ecx,DWORD PTR [ebp-0x4]
64009b28:	mov    DWORD PTR [ebp-0x14],ecx
64009b2b:	jmp    0x64009b34
64009b2d:	mov    DWORD PTR [ebp-0x14],0x0
64009b34:	mov    edx,DWORD PTR [ebp-0x10]
64009b37:	mov    eax,DWORD PTR [ebp+0x8]
64009b3a:	mov    DWORD PTR [edx],eax
64009b3c:	mov    esp,ebp
64009b3e:	pop    ebp
64009b3f:	ret    0x4
64009b42:	int3   
64009b43:	int3   
64009b44:	int3   
64009b45:	int3   
64009b46:	int3   
64009b47:	int3   
64009b48:	int3   
64009b49:	int3   
64009b4a:	int3   
64009b4b:	int3   
64009b4c:	int3   
64009b4d:	int3   
64009b4e:	int3   
64009b4f:	int3   
64009b50:	push   ebp
64009b51:	mov    ebp,esp
64009b53:	sub    esp,0x18
64009b56:	mov    DWORD PTR [ebp-0x18],ecx
64009b59:	lea    eax,[ebp-0x12]
64009b5c:	mov    DWORD PTR [ebp-0x8],eax
64009b5f:	lea    ecx,[ebp-0x11]
64009b62:	mov    DWORD PTR [ebp-0x10],ecx
64009b65:	mov    edx,DWORD PTR [ebp-0x18]
64009b68:	mov    DWORD PTR [edx+0x4],0x0
64009b6f:	mov    eax,DWORD PTR [ebp-0x18]
64009b72:	mov    DWORD PTR [eax+0x8],0x0
64009b79:	mov    ecx,DWORD PTR [ebp-0x18]
64009b7c:	mov    DWORD PTR [ecx+0xc],0x0
64009b83:	mov    edx,DWORD PTR [ebp-0x18]
64009b86:	mov    DWORD PTR [edx+0x10],0x0
64009b8d:	mov    eax,DWORD PTR [ebp-0x18]
64009b90:	mov    esp,ebp
64009b92:	pop    ebp
64009b93:	ret    
64009b94:	int3   
64009b95:	int3   
64009b96:	int3   
64009b97:	int3   
64009b98:	int3   
64009b99:	int3   
64009b9a:	int3   
64009b9b:	int3   
64009b9c:	int3   
64009b9d:	int3   
64009b9e:	int3   
64009b9f:	int3   
64009ba0:	push   ebp
64009ba1:	mov    ebp,esp
64009ba3:	sub    esp,0x8
64009ba6:	mov    DWORD PTR [ebp-0x8],ecx
64009ba9:	mov    eax,DWORD PTR [ebp-0x8]
64009bac:	mov    ecx,DWORD PTR [eax+0x10]
64009baf:	mov    DWORD PTR [ebp-0x4],ecx
64009bb2:	mov    eax,DWORD PTR [ebp-0x4]
64009bb5:	mov    esp,ebp
64009bb7:	pop    ebp
64009bb8:	ret    
64009bb9:	int3   
64009bba:	int3   
64009bbb:	int3   
64009bbc:	int3   
64009bbd:	int3   
64009bbe:	int3   
64009bbf:	int3   
64009bc0:	push   ebp
64009bc1:	mov    ebp,esp
64009bc3:	sub    esp,0x20
64009bc6:	mov    DWORD PTR [ebp-0x20],ecx
64009bc9:	lea    eax,[ebp-0xc]
64009bcc:	push   eax
64009bcd:	mov    ecx,DWORD PTR [ebp-0x20]
64009bd0:	call   0x64009fd0
64009bd5:	mov    DWORD PTR [ebp-0x1c],eax
64009bd8:	mov    ecx,DWORD PTR [ebp-0x1c]
64009bdb:	call   0x6400a510
64009be0:	mov    esp,ebp
64009be2:	pop    ebp
64009be3:	ret    
64009be4:	int3   
64009be5:	int3   
64009be6:	int3   
64009be7:	int3   
64009be8:	int3   
64009be9:	int3   
64009bea:	int3   
64009beb:	int3   
64009bec:	int3   
64009bed:	int3   
64009bee:	int3   
64009bef:	int3   
64009bf0:	push   ebp
64009bf1:	mov    ebp,esp
64009bf3:	sub    esp,0xc8
64009bf9:	mov    DWORD PTR [ebp-0xc8],ecx
64009bff:	mov    eax,DWORD PTR [ebp+0x8]
64009c02:	push   eax
64009c03:	mov    ecx,DWORD PTR [ebp-0xc8]
64009c09:	call   0x64009dc0
64009c0e:	mov    esp,ebp
64009c10:	pop    ebp
64009c11:	ret    0x4
64009c14:	int3   
64009c15:	int3   
64009c16:	int3   
64009c17:	int3   
64009c18:	int3   
64009c19:	int3   
64009c1a:	int3   
64009c1b:	int3   
64009c1c:	int3   
64009c1d:	int3   
64009c1e:	int3   
64009c1f:	int3   
64009c20:	push   ebp
64009c21:	mov    ebp,esp
64009c23:	sub    esp,0x8
64009c26:	mov    DWORD PTR [ebp-0x8],ecx
64009c29:	mov    ecx,DWORD PTR [ebp-0x8]
64009c2c:	call   0x64009d40
64009c31:	mov    esp,ebp
64009c33:	pop    ebp
64009c34:	ret    
64009c35:	int3   
64009c36:	int3   
64009c37:	int3   
64009c38:	int3   
64009c39:	int3   
64009c3a:	int3   
64009c3b:	int3   
64009c3c:	int3   
64009c3d:	int3   
64009c3e:	int3   
64009c3f:	int3   
64009c40:	push   ebp
64009c41:	mov    ebp,esp
64009c43:	sub    esp,0x1c
64009c46:	mov    DWORD PTR [ebp-0x1c],ecx
64009c49:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c4c:	call   0x64009f20
64009c51:	mov    esp,ebp
64009c53:	pop    ebp
64009c54:	ret    
64009c55:	int3   
64009c56:	int3   
64009c57:	int3   
64009c58:	int3   
64009c59:	int3   
64009c5a:	int3   
64009c5b:	int3   
64009c5c:	int3   
64009c5d:	int3   
64009c5e:	int3   
64009c5f:	int3   
64009c60:	push   ebp
64009c61:	mov    ebp,esp
64009c63:	push   ecx
64009c64:	mov    DWORD PTR [ebp-0x4],ecx
64009c67:	mov    eax,DWORD PTR [ebp-0x4]
64009c6a:	mov    ecx,DWORD PTR [ebp+0x8]
64009c6d:	mov    DWORD PTR [eax],ecx
64009c6f:	mov    eax,DWORD PTR [ebp-0x4]
64009c72:	mov    esp,ebp
64009c74:	pop    ebp
64009c75:	ret    0x4
64009c78:	int3   
64009c79:	int3   
64009c7a:	int3   
64009c7b:	int3   
64009c7c:	int3   
64009c7d:	int3   
64009c7e:	int3   
64009c7f:	int3   
64009c80:	push   ebp
64009c81:	mov    ebp,esp
64009c83:	sub    esp,0x10
64009c86:	mov    DWORD PTR [ebp-0xc],ecx
64009c89:	mov    eax,DWORD PTR [ebp-0xc]
64009c8c:	mov    ecx,DWORD PTR [eax]
64009c8e:	mov    DWORD PTR [ebp-0x8],ecx
64009c91:	mov    edx,DWORD PTR [ebp-0x8]
64009c94:	mov    DWORD PTR [ebp-0x4],edx
64009c97:	cmp    DWORD PTR [ebp-0x4],0x0
64009c9b:	je     0x64009cb1
64009c9d:	push   0x1
64009c9f:	mov    eax,DWORD PTR [ebp-0x4]
64009ca2:	mov    edx,DWORD PTR [eax]
64009ca4:	mov    ecx,DWORD PTR [ebp-0x4]
64009ca7:	mov    eax,DWORD PTR [edx+0x4]
64009caa:	call   eax
64009cac:	mov    DWORD PTR [ebp-0x10],eax
64009caf:	jmp    0x64009cb8
64009cb1:	mov    DWORD PTR [ebp-0x10],0x0
64009cb8:	mov    esp,ebp
64009cba:	pop    ebp
64009cbb:	ret    
64009cbc:	int3   
64009cbd:	int3   
64009cbe:	int3   
64009cbf:	int3   
64009cc0:	push   ebp
64009cc1:	mov    ebp,esp
64009cc3:	sub    esp,0x8
64009cc6:	mov    DWORD PTR [ebp-0x8],ecx
64009cc9:	mov    eax,DWORD PTR [ebp-0x8]
64009ccc:	mov    ecx,DWORD PTR [eax]
64009cce:	mov    DWORD PTR [ebp-0x4],ecx
64009cd1:	mov    eax,DWORD PTR [ebp-0x4]
64009cd4:	mov    esp,ebp
64009cd6:	pop    ebp
64009cd7:	ret    
64009cd8:	int3   
64009cd9:	int3   
64009cda:	int3   
64009cdb:	int3   
64009cdc:	int3   
64009cdd:	int3   
64009cde:	int3   
64009cdf:	int3   
64009ce0:	push   ebp
64009ce1:	mov    ebp,esp
64009ce3:	push   ecx
64009ce4:	mov    DWORD PTR [ebp-0x4],ecx
64009ce7:	mov    eax,DWORD PTR [ebp-0x4]
64009cea:	mov    eax,DWORD PTR [eax]
64009cec:	mov    esp,ebp
64009cee:	pop    ebp
64009cef:	ret    
64009cf0:	push   ebp
64009cf1:	mov    ebp,esp
64009cf3:	sub    esp,0x10
64009cf6:	mov    DWORD PTR [ebp-0xc],ecx
64009cf9:	mov    eax,DWORD PTR [ebp-0xc]
64009cfc:	mov    ecx,DWORD PTR [ebp+0x8]
64009cff:	cmp    ecx,DWORD PTR [eax]
64009d01:	je     0x64009d32
64009d03:	mov    edx,DWORD PTR [ebp-0xc]
64009d06:	mov    eax,DWORD PTR [edx]
64009d08:	mov    DWORD PTR [ebp-0x8],eax
64009d0b:	mov    ecx,DWORD PTR [ebp-0x8]
64009d0e:	mov    DWORD PTR [ebp-0x4],ecx
64009d11:	cmp    DWORD PTR [ebp-0x4],0x0
64009d15:	je     0x64009d2b
64009d17:	push   0x1
64009d19:	mov    edx,DWORD PTR [ebp-0x4]
64009d1c:	mov    eax,DWORD PTR [edx]
64009d1e:	mov    ecx,DWORD PTR [ebp-0x4]
64009d21:	mov    edx,DWORD PTR [eax+0x4]
64009d24:	call   edx
64009d26:	mov    DWORD PTR [ebp-0x10],eax
64009d29:	jmp    0x64009d32
64009d2b:	mov    DWORD PTR [ebp-0x10],0x0
64009d32:	mov    eax,DWORD PTR [ebp-0xc]
64009d35:	mov    ecx,DWORD PTR [ebp+0x8]
64009d38:	mov    DWORD PTR [eax],ecx
64009d3a:	mov    esp,ebp
64009d3c:	pop    ebp
64009d3d:	ret    0x4
64009d40:	push   ebp
64009d41:	mov    ebp,esp
64009d43:	sub    esp,0x8
64009d46:	mov    DWORD PTR [ebp-0x8],ecx
64009d49:	mov    eax,DWORD PTR [ebp-0x8]
64009d4c:	xor    ecx,ecx
64009d4e:	cmp    DWORD PTR [eax+0x10],0x0
64009d52:	sete   cl
64009d55:	movzx  edx,cl
64009d58:	test   edx,edx
64009d5a:	jne    0x64009db4
64009d5c:	mov    eax,DWORD PTR [ebp-0x8]
64009d5f:	mov    ecx,DWORD PTR [eax+0xc]
64009d62:	shr    ecx,0x2
64009d65:	mov    DWORD PTR [ebp-0x4],ecx
64009d68:	mov    edx,DWORD PTR [ebp-0x8]
64009d6b:	mov    eax,DWORD PTR [edx+0xc]
64009d6e:	add    eax,0x1
64009d71:	mov    ecx,DWORD PTR [ebp-0x8]
64009d74:	mov    DWORD PTR [ecx+0xc],eax
64009d77:	mov    edx,DWORD PTR [ebp-0x8]
64009d7a:	mov    eax,DWORD PTR [edx+0x8]
64009d7d:	shl    eax,0x2
64009d80:	mov    ecx,DWORD PTR [ebp-0x8]
64009d83:	cmp    eax,DWORD PTR [ecx+0xc]
64009d86:	ja     0x64009d92
64009d88:	mov    edx,DWORD PTR [ebp-0x8]
64009d8b:	mov    DWORD PTR [edx+0xc],0x0
64009d92:	mov    eax,DWORD PTR [ebp-0x8]
64009d95:	mov    ecx,DWORD PTR [eax+0x10]
64009d98:	sub    ecx,0x1
64009d9b:	mov    edx,DWORD PTR [ebp-0x8]
64009d9e:	mov    DWORD PTR [edx+0x10],ecx
64009da1:	mov    eax,DWORD PTR [ebp-0x8]
64009da4:	cmp    DWORD PTR [eax+0x10],0x0
64009da8:	jne    0x64009db4
64009daa:	mov    ecx,DWORD PTR [ebp-0x8]
64009dad:	mov    DWORD PTR [ecx+0xc],0x0
64009db4:	mov    esp,ebp
64009db6:	pop    ebp
64009db7:	ret    
64009db8:	int3   
64009db9:	int3   
64009dba:	int3   
64009dbb:	int3   
64009dbc:	int3   
64009dbd:	int3   
64009dbe:	int3   
64009dbf:	int3   
64009dc0:	push   ebp
64009dc1:	mov    ebp,esp
64009dc3:	sub    esp,0xe8
64009dc9:	push   esi
64009dca:	mov    DWORD PTR [ebp-0xe4],ecx
64009dd0:	mov    eax,DWORD PTR [ebp-0xe4]
64009dd6:	mov    eax,DWORD PTR [eax+0xc]
64009dd9:	mov    ecx,DWORD PTR [ebp-0xe4]
64009ddf:	add    eax,DWORD PTR [ecx+0x10]
64009de2:	xor    edx,edx
64009de4:	mov    ecx,0x4
64009de9:	div    ecx
64009deb:	test   edx,edx
64009ded:	jne    0x64009e16
64009def:	mov    edx,DWORD PTR [ebp-0xe4]
64009df5:	mov    eax,DWORD PTR [edx+0x10]
64009df8:	add    eax,0x4
64009dfb:	shr    eax,0x2
64009dfe:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e04:	cmp    DWORD PTR [ecx+0x8],eax
64009e07:	ja     0x64009e16
64009e09:	push   0x1
64009e0b:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e11:	call   0x6400a0c0
64009e16:	mov    edx,DWORD PTR [ebp-0xe4]
64009e1c:	mov    eax,DWORD PTR [edx+0xc]
64009e1f:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e25:	add    eax,DWORD PTR [ecx+0x10]
64009e28:	mov    DWORD PTR [ebp-0x4],eax
64009e2b:	mov    edx,DWORD PTR [ebp-0x4]
64009e2e:	shr    edx,0x2
64009e31:	mov    DWORD PTR [ebp-0x8],edx
64009e34:	mov    eax,DWORD PTR [ebp-0xe4]
64009e3a:	mov    ecx,DWORD PTR [eax+0x8]
64009e3d:	cmp    ecx,DWORD PTR [ebp-0x8]
64009e40:	ja     0x64009e51
64009e42:	mov    edx,DWORD PTR [ebp-0xe4]
64009e48:	mov    eax,DWORD PTR [ebp-0x8]
64009e4b:	sub    eax,DWORD PTR [edx+0x8]
64009e4e:	mov    DWORD PTR [ebp-0x8],eax
64009e51:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e57:	mov    edx,DWORD PTR [ecx+0x4]
64009e5a:	mov    eax,DWORD PTR [ebp-0x8]
64009e5d:	cmp    DWORD PTR [edx+eax*4],0x0
64009e61:	jne    0x64009e82
64009e63:	push   0x4
64009e65:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e6b:	add    ecx,0x1
64009e6e:	call   0x6400a470
64009e73:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e79:	mov    edx,DWORD PTR [ecx+0x4]
64009e7c:	mov    ecx,DWORD PTR [ebp-0x8]
64009e7f:	mov    DWORD PTR [edx+ecx*4],eax
64009e82:	mov    edx,DWORD PTR [ebp-0xe4]
64009e88:	mov    ecx,DWORD PTR [edx+0x4]
64009e8b:	mov    eax,DWORD PTR [ebp-0x4]
64009e8e:	xor    edx,edx
64009e90:	mov    esi,0x4
64009e95:	div    esi
64009e97:	mov    eax,DWORD PTR [ebp-0x8]
64009e9a:	mov    ecx,DWORD PTR [ecx+eax*4]
64009e9d:	lea    edx,[ecx+edx*4]
64009ea0:	mov    DWORD PTR [ebp-0xe0],edx
64009ea6:	mov    eax,DWORD PTR [ebp-0xe0]
64009eac:	mov    DWORD PTR [ebp-0xd8],eax
64009eb2:	mov    ecx,DWORD PTR [ebp-0xd8]
64009eb8:	push   ecx
64009eb9:	push   0x4
64009ebb:	call   0x640011f0
64009ec0:	add    esp,0x8
64009ec3:	mov    DWORD PTR [ebp-0xdc],eax
64009ec9:	cmp    DWORD PTR [ebp-0xdc],0x0
64009ed0:	je     0x64009eed
64009ed2:	mov    edx,DWORD PTR [ebp-0xdc]
64009ed8:	mov    eax,DWORD PTR [ebp+0x8]
64009edb:	mov    ecx,DWORD PTR [eax]
64009edd:	mov    DWORD PTR [edx],ecx
64009edf:	mov    edx,DWORD PTR [ebp-0xdc]
64009ee5:	mov    DWORD PTR [ebp-0xe8],edx
64009eeb:	jmp    0x64009ef7
64009eed:	mov    DWORD PTR [ebp-0xe8],0x0
64009ef7:	mov    eax,DWORD PTR [ebp-0xe4]
64009efd:	mov    ecx,DWORD PTR [eax+0x10]
64009f00:	add    ecx,0x1
64009f03:	mov    edx,DWORD PTR [ebp-0xe4]
64009f09:	mov    DWORD PTR [edx+0x10],ecx
64009f0c:	pop    esi
64009f0d:	mov    esp,ebp
64009f0f:	pop    ebp
64009f10:	ret    0x4
64009f13:	int3   
64009f14:	int3   
64009f15:	int3   
64009f16:	int3   
64009f17:	int3   
64009f18:	int3   
64009f19:	int3   
64009f1a:	int3   
64009f1b:	int3   
64009f1c:	int3   
64009f1d:	int3   
64009f1e:	int3   
64009f1f:	int3   
64009f20:	push   ebp
64009f21:	mov    ebp,esp
64009f23:	sub    esp,0x1c
64009f26:	mov    DWORD PTR [ebp-0x1c],ecx
64009f29:	mov    eax,DWORD PTR [ebp-0x1c]
64009f2c:	xor    ecx,ecx
64009f2e:	cmp    DWORD PTR [eax+0x10],0x0
64009f32:	sete   cl
64009f35:	movzx  edx,cl
64009f38:	test   edx,edx
64009f3a:	jne    0x64009f46
64009f3c:	mov    ecx,DWORD PTR [ebp-0x1c]
64009f3f:	call   0x6400a040
64009f44:	jmp    0x64009f29
64009f46:	mov    eax,DWORD PTR [ebp-0x1c]
64009f49:	mov    ecx,DWORD PTR [eax+0x8]
64009f4c:	mov    DWORD PTR [ebp-0x4],ecx
64009f4f:	cmp    DWORD PTR [ebp-0x4],0x0
64009f53:	jbe    0x64009f8a
64009f55:	mov    edx,DWORD PTR [ebp-0x4]
64009f58:	sub    edx,0x1
64009f5b:	mov    DWORD PTR [ebp-0x4],edx
64009f5e:	mov    eax,DWORD PTR [ebp-0x1c]
64009f61:	mov    ecx,DWORD PTR [eax+0x4]
64009f64:	mov    edx,DWORD PTR [ebp-0x4]
64009f67:	cmp    DWORD PTR [ecx+edx*4],0x0
64009f6b:	je     0x64009f88
64009f6d:	mov    eax,DWORD PTR [ebp-0x1c]
64009f70:	mov    ecx,DWORD PTR [eax+0x4]
64009f73:	mov    edx,DWORD PTR [ebp-0x4]
64009f76:	mov    eax,DWORD PTR [ecx+edx*4]
64009f79:	mov    DWORD PTR [ebp-0x10],eax
64009f7c:	mov    ecx,DWORD PTR [ebp-0x10]
64009f7f:	push   ecx
64009f80:	call   0x64013604
64009f85:	add    esp,0x4
64009f88:	jmp    0x64009f4f
64009f8a:	mov    edx,DWORD PTR [ebp-0x1c]
64009f8d:	cmp    DWORD PTR [edx+0x4],0x0
64009f91:	je     0x64009fb1
64009f93:	mov    eax,DWORD PTR [ebp-0x1c]
64009f96:	mov    ecx,DWORD PTR [eax+0x8]
64009f99:	mov    DWORD PTR [ebp-0x18],ecx
64009f9c:	mov    edx,DWORD PTR [ebp-0x1c]
64009f9f:	mov    eax,DWORD PTR [edx+0x4]
64009fa2:	mov    DWORD PTR [ebp-0x14],eax
64009fa5:	mov    ecx,DWORD PTR [ebp-0x14]
64009fa8:	push   ecx
64009fa9:	call   0x64013604
64009fae:	add    esp,0x4
64009fb1:	mov    edx,DWORD PTR [ebp-0x1c]
64009fb4:	mov    DWORD PTR [edx+0x8],0x0
64009fbb:	mov    eax,DWORD PTR [ebp-0x1c]
64009fbe:	mov    DWORD PTR [eax+0x4],0x0
64009fc5:	mov    esp,ebp
64009fc7:	pop    ebp
64009fc8:	ret    
64009fc9:	int3   
64009fca:	int3   
64009fcb:	int3   
64009fcc:	int3   
64009fcd:	int3   
64009fce:	int3   
64009fcf:	int3   
64009fd0:	push   ebp
64009fd1:	mov    ebp,esp
64009fd3:	sub    esp,0x8
64009fd6:	mov    DWORD PTR [ebp-0x8],ecx
64009fd9:	mov    eax,DWORD PTR [ebp-0x8]
64009fdc:	mov    ecx,DWORD PTR [eax+0xc]
64009fdf:	mov    DWORD PTR [ebp-0x4],ecx
64009fe2:	mov    ecx,DWORD PTR [ebp+0x8]
64009fe5:	call   0x64001300
64009fea:	mov    edx,0x1
64009fef:	test   edx,edx
64009ff1:	je     0x6400a01a
64009ff3:	cmp    DWORD PTR [ebp-0x8],0x0
64009ff7:	je     0x6400a015
64009ff9:	mov    eax,DWORD PTR [ebp-0x8]
64009ffc:	mov    ecx,DWORD PTR [eax+0xc]
64009fff:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a002:	ja     0x6400a015
6400a004:	mov    edx,DWORD PTR [ebp-0x8]
6400a007:	mov    eax,DWORD PTR [edx+0xc]
6400a00a:	mov    ecx,DWORD PTR [ebp-0x8]
6400a00d:	add    eax,DWORD PTR [ecx+0x10]
6400a010:	cmp    DWORD PTR [ebp-0x4],eax
6400a013:	jbe    0x6400a01a
6400a015:	call   0x64013e36
6400a01a:	mov    edx,DWORD PTR [ebp+0x8]
6400a01d:	mov    eax,DWORD PTR [ebp-0x8]
6400a020:	mov    DWORD PTR [edx+0x4],eax
6400a023:	mov    ecx,DWORD PTR [ebp+0x8]
6400a026:	mov    edx,DWORD PTR [ebp-0x4]
6400a029:	mov    DWORD PTR [ecx+0x8],edx
6400a02c:	mov    eax,DWORD PTR [ebp+0x8]
6400a02f:	mov    esp,ebp
6400a031:	pop    ebp
6400a032:	ret    0x4
6400a035:	int3   
6400a036:	int3   
6400a037:	int3   
6400a038:	int3   
6400a039:	int3   
6400a03a:	int3   
6400a03b:	int3   
6400a03c:	int3   
6400a03d:	int3   
6400a03e:	int3   
6400a03f:	int3   
6400a040:	push   ebp
6400a041:	mov    ebp,esp
6400a043:	sub    esp,0xc
6400a046:	mov    DWORD PTR [ebp-0xc],ecx
6400a049:	mov    eax,DWORD PTR [ebp-0xc]
6400a04c:	xor    ecx,ecx
6400a04e:	cmp    DWORD PTR [eax+0x10],0x0
6400a052:	sete   cl
6400a055:	movzx  edx,cl
6400a058:	test   edx,edx
6400a05a:	jne    0x6400a0b1
6400a05c:	mov    eax,DWORD PTR [ebp-0xc]
6400a05f:	mov    ecx,DWORD PTR [eax+0x10]
6400a062:	mov    edx,DWORD PTR [ebp-0xc]
6400a065:	mov    eax,DWORD PTR [edx+0xc]
6400a068:	lea    ecx,[ecx+eax*1-0x1]
6400a06c:	mov    DWORD PTR [ebp-0x4],ecx
6400a06f:	mov    edx,DWORD PTR [ebp-0x4]
6400a072:	shr    edx,0x2
6400a075:	mov    DWORD PTR [ebp-0x8],edx
6400a078:	mov    eax,DWORD PTR [ebp-0xc]
6400a07b:	mov    ecx,DWORD PTR [eax+0x8]
6400a07e:	cmp    ecx,DWORD PTR [ebp-0x8]
6400a081:	ja     0x6400a08f
6400a083:	mov    edx,DWORD PTR [ebp-0xc]
6400a086:	mov    eax,DWORD PTR [ebp-0x8]
6400a089:	sub    eax,DWORD PTR [edx+0x8]
6400a08c:	mov    DWORD PTR [ebp-0x8],eax
6400a08f:	mov    ecx,DWORD PTR [ebp-0xc]
6400a092:	mov    edx,DWORD PTR [ecx+0x10]
6400a095:	sub    edx,0x1
6400a098:	mov    eax,DWORD PTR [ebp-0xc]
6400a09b:	mov    DWORD PTR [eax+0x10],edx
6400a09e:	mov    ecx,DWORD PTR [ebp-0xc]
6400a0a1:	cmp    DWORD PTR [ecx+0x10],0x0
6400a0a5:	jne    0x6400a0b1
6400a0a7:	mov    edx,DWORD PTR [ebp-0xc]
6400a0aa:	mov    DWORD PTR [edx+0xc],0x0
6400a0b1:	mov    esp,ebp
6400a0b3:	pop    ebp
6400a0b4:	ret    
6400a0b5:	int3   
6400a0b6:	int3   
6400a0b7:	int3   
6400a0b8:	int3   
6400a0b9:	int3   
6400a0ba:	int3   
6400a0bb:	int3   
6400a0bc:	int3   
6400a0bd:	int3   
6400a0be:	int3   
6400a0bf:	int3   
6400a0c0:	push   ebp
6400a0c1:	mov    ebp,esp
6400a0c3:	sub    esp,0x168
6400a0c9:	mov    DWORD PTR [ebp-0x160],ecx
6400a0cf:	mov    DWORD PTR [ebp-0x20],0x3fffffff
6400a0d6:	cmp    DWORD PTR [ebp-0x20],0x0
6400a0da:	jbe    0x6400a0e7
6400a0dc:	mov    eax,DWORD PTR [ebp-0x20]
6400a0df:	mov    DWORD PTR [ebp-0x164],eax
6400a0e5:	jmp    0x6400a0f1
6400a0e7:	mov    DWORD PTR [ebp-0x164],0x1
6400a0f1:	mov    ecx,DWORD PTR [ebp-0x164]
6400a0f7:	shr    ecx,0x2
6400a0fa:	mov    edx,DWORD PTR [ebp-0x160]
6400a100:	sub    ecx,DWORD PTR [edx+0x8]
6400a103:	cmp    ecx,DWORD PTR [ebp+0x8]
6400a106:	jae    0x6400a10d
6400a108:	call   0x6400a490
6400a10d:	mov    eax,DWORD PTR [ebp-0x160]
6400a113:	mov    ecx,DWORD PTR [eax+0x8]
6400a116:	shr    ecx,1
6400a118:	mov    DWORD PTR [ebp-0x8],ecx
6400a11b:	cmp    DWORD PTR [ebp-0x8],0x8
6400a11f:	jae    0x6400a128
6400a121:	mov    DWORD PTR [ebp-0x8],0x8
6400a128:	mov    edx,DWORD PTR [ebp+0x8]
6400a12b:	cmp    edx,DWORD PTR [ebp-0x8]
6400a12e:	jae    0x6400a16f
6400a130:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
6400a137:	cmp    DWORD PTR [ebp-0x6c],0x0
6400a13b:	jbe    0x6400a148
6400a13d:	mov    eax,DWORD PTR [ebp-0x6c]
6400a140:	mov    DWORD PTR [ebp-0x168],eax
6400a146:	jmp    0x6400a152
6400a148:	mov    DWORD PTR [ebp-0x168],0x1
6400a152:	mov    ecx,DWORD PTR [ebp-0x168]
6400a158:	shr    ecx,0x2
6400a15b:	sub    ecx,DWORD PTR [ebp-0x8]
6400a15e:	mov    edx,DWORD PTR [ebp-0x160]
6400a164:	cmp    DWORD PTR [edx+0x8],ecx
6400a167:	ja     0x6400a16f
6400a169:	mov    eax,DWORD PTR [ebp-0x8]
6400a16c:	mov    DWORD PTR [ebp+0x8],eax
6400a16f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a175:	mov    edx,DWORD PTR [ecx+0xc]
6400a178:	shr    edx,0x2
6400a17b:	mov    DWORD PTR [ebp-0x4],edx
6400a17e:	mov    eax,DWORD PTR [ebp-0x160]
6400a184:	mov    ecx,DWORD PTR [eax+0x8]
6400a187:	add    ecx,DWORD PTR [ebp+0x8]
6400a18a:	mov    DWORD PTR [ebp-0x7c],ecx
6400a18d:	push   0x0
6400a18f:	mov    edx,DWORD PTR [ebp-0x7c]
6400a192:	push   edx
6400a193:	call   0x6400a640
6400a198:	add    esp,0x8
6400a19b:	mov    DWORD PTR [ebp-0x10],eax
6400a19e:	mov    eax,DWORD PTR [ebp-0x4]
6400a1a1:	mov    ecx,DWORD PTR [ebp-0x10]
6400a1a4:	lea    edx,[ecx+eax*4]
6400a1a7:	mov    DWORD PTR [ebp-0xc],edx
6400a1aa:	mov    eax,DWORD PTR [ebp-0x160]
6400a1b0:	push   eax
6400a1b1:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1b4:	push   ecx
6400a1b5:	mov    edx,DWORD PTR [ebp-0x160]
6400a1bb:	mov    eax,DWORD PTR [edx+0x8]
6400a1be:	mov    ecx,DWORD PTR [ebp-0x160]
6400a1c4:	mov    edx,DWORD PTR [ecx+0x4]
6400a1c7:	lea    eax,[edx+eax*4]
6400a1ca:	push   eax
6400a1cb:	mov    ecx,DWORD PTR [ebp-0x160]
6400a1d1:	mov    edx,DWORD PTR [ecx+0x4]
6400a1d4:	mov    eax,DWORD PTR [ebp-0x4]
6400a1d7:	lea    ecx,[edx+eax*4]
6400a1da:	push   ecx
6400a1db:	call   0x6400a5d0
6400a1e0:	add    esp,0x10
6400a1e3:	mov    DWORD PTR [ebp-0xc],eax
6400a1e6:	mov    edx,DWORD PTR [ebp-0x4]
6400a1e9:	cmp    edx,DWORD PTR [ebp+0x8]
6400a1ec:	ja     0x6400a314
6400a1f2:	mov    eax,DWORD PTR [ebp-0x160]
6400a1f8:	push   eax
6400a1f9:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1fc:	push   ecx
6400a1fd:	mov    edx,DWORD PTR [ebp-0x160]
6400a203:	mov    eax,DWORD PTR [edx+0x4]
6400a206:	mov    ecx,DWORD PTR [ebp-0x4]
6400a209:	lea    edx,[eax+ecx*4]
6400a20c:	push   edx
6400a20d:	mov    eax,DWORD PTR [ebp-0x160]
6400a213:	mov    ecx,DWORD PTR [eax+0x4]
6400a216:	push   ecx
6400a217:	call   0x6400a5d0
6400a21c:	add    esp,0x10
6400a21f:	mov    DWORD PTR [ebp-0xc],eax
6400a222:	mov    DWORD PTR [ebp-0x14],0x0
6400a229:	mov    edx,DWORD PTR [ebp-0xc]
6400a22c:	mov    DWORD PTR [ebp-0xd0],edx
6400a232:	xor    eax,eax
6400a234:	mov    BYTE PTR [ebp-0xba],al
6400a23a:	mov    cl,BYTE PTR [ebp-0xbc]
6400a240:	mov    BYTE PTR [ebp-0xbb],cl
6400a246:	mov    dl,BYTE PTR [ebp-0xba]
6400a24c:	mov    BYTE PTR [ebp-0xc9],dl
6400a252:	mov    eax,DWORD PTR [ebp-0xd0]
6400a258:	mov    DWORD PTR [ebp-0xc8],eax
6400a25e:	mov    ecx,DWORD PTR [ebp-0xc8]
6400a264:	mov    DWORD PTR [ebp-0xc4],ecx
6400a26a:	xor    edx,edx
6400a26c:	mov    BYTE PTR [ebp-0xbd],dl
6400a272:	mov    al,BYTE PTR [ebp-0xbd]
6400a278:	push   eax
6400a279:	mov    cl,BYTE PTR [ebp-0xbe]
6400a27f:	push   ecx
6400a280:	lea    edx,[ebp-0x14]
6400a283:	push   edx
6400a284:	mov    eax,DWORD PTR [ebp+0x8]
6400a287:	sub    eax,DWORD PTR [ebp-0x4]
6400a28a:	push   eax
6400a28b:	mov    ecx,DWORD PTR [ebp-0xc4]
6400a291:	push   ecx
6400a292:	call   0x6400a760
6400a297:	add    esp,0x14
6400a29a:	mov    DWORD PTR [ebp-0x18],0x0
6400a2a1:	mov    edx,DWORD PTR [ebp-0x10]
6400a2a4:	mov    DWORD PTR [ebp-0xe8],edx
6400a2aa:	xor    eax,eax
6400a2ac:	mov    BYTE PTR [ebp-0xd1],al
6400a2b2:	mov    cl,BYTE PTR [ebp-0xd3]
6400a2b8:	mov    BYTE PTR [ebp-0xd2],cl
6400a2be:	mov    dl,BYTE PTR [ebp-0xd1]
6400a2c4:	mov    BYTE PTR [ebp-0xe1],dl
6400a2ca:	mov    eax,DWORD PTR [ebp-0xe8]
6400a2d0:	mov    DWORD PTR [ebp-0xe0],eax
6400a2d6:	mov    ecx,DWORD PTR [ebp-0xe0]
6400a2dc:	mov    DWORD PTR [ebp-0xdc],ecx
6400a2e2:	xor    edx,edx
6400a2e4:	mov    BYTE PTR [ebp-0xd4],dl
6400a2ea:	mov    al,BYTE PTR [ebp-0xd4]
6400a2f0:	push   eax
6400a2f1:	mov    cl,BYTE PTR [ebp-0xd5]
6400a2f7:	push   ecx
6400a2f8:	lea    edx,[ebp-0x18]
6400a2fb:	push   edx
6400a2fc:	mov    eax,DWORD PTR [ebp-0x4]
6400a2ff:	push   eax
6400a300:	mov    ecx,DWORD PTR [ebp-0xdc]
6400a306:	push   ecx
6400a307:	call   0x6400a760
6400a30c:	add    esp,0x14
6400a30f:	jmp    0x6400a3ca
6400a314:	mov    edx,DWORD PTR [ebp-0x160]
6400a31a:	push   edx
6400a31b:	mov    eax,DWORD PTR [ebp-0xc]
6400a31e:	push   eax
6400a31f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a325:	mov    edx,DWORD PTR [ecx+0x4]
6400a328:	mov    eax,DWORD PTR [ebp+0x8]
6400a32b:	lea    ecx,[edx+eax*4]
6400a32e:	push   ecx
6400a32f:	mov    edx,DWORD PTR [ebp-0x160]
6400a335:	mov    eax,DWORD PTR [edx+0x4]
6400a338:	push   eax
6400a339:	call   0x6400a5d0
6400a33e:	add    esp,0x10
6400a341:	mov    ecx,DWORD PTR [ebp-0x160]
6400a347:	push   ecx
6400a348:	mov    edx,DWORD PTR [ebp-0x10]
6400a34b:	push   edx
6400a34c:	mov    eax,DWORD PTR [ebp-0x160]
6400a352:	mov    ecx,DWORD PTR [eax+0x4]
6400a355:	mov    edx,DWORD PTR [ebp-0x4]
6400a358:	lea    eax,[ecx+edx*4]
6400a35b:	push   eax
6400a35c:	mov    ecx,DWORD PTR [ebp-0x160]
6400a362:	mov    edx,DWORD PTR [ecx+0x4]
6400a365:	mov    eax,DWORD PTR [ebp+0x8]
6400a368:	lea    ecx,[edx+eax*4]
6400a36b:	push   ecx
6400a36c:	call   0x6400a5d0
6400a371:	add    esp,0x10
6400a374:	mov    DWORD PTR [ebp-0xc],eax
6400a377:	mov    DWORD PTR [ebp-0x1c],0x0
6400a37e:	mov    edx,DWORD PTR [ebp-0xc]
6400a381:	mov    DWORD PTR [ebp-0x148],edx
6400a387:	xor    eax,eax
6400a389:	mov    BYTE PTR [ebp-0x126],al
6400a38f:	mov    cl,BYTE PTR [ebp-0x128]
6400a395:	mov    BYTE PTR [ebp-0x127],cl
6400a39b:	mov    dl,BYTE PTR [ebp-0x126]
6400a3a1:	mov    BYTE PTR [ebp-0x141],dl
6400a3a7:	mov    eax,DWORD PTR [ebp-0x148]
6400a3ad:	mov    DWORD PTR [ebp-0x140],eax
6400a3b3:	lea    ecx,[ebp-0x1c]
6400a3b6:	push   ecx
6400a3b7:	mov    edx,DWORD PTR [ebp+0x8]
6400a3ba:	push   edx
6400a3bb:	mov    eax,DWORD PTR [ebp-0x140]
6400a3c1:	push   eax
6400a3c2:	call   0x6400a6f0
6400a3c7:	add    esp,0xc
6400a3ca:	mov    ecx,DWORD PTR [ebp-0x160]
6400a3d0:	mov    edx,DWORD PTR [ecx+0x8]
6400a3d3:	mov    eax,DWORD PTR [ebp-0x160]
6400a3d9:	mov    ecx,DWORD PTR [eax+0x4]
6400a3dc:	lea    edx,[ecx+edx*4]
6400a3df:	mov    DWORD PTR [ebp-0x154],edx
6400a3e5:	mov    eax,DWORD PTR [ebp-0x160]
6400a3eb:	mov    ecx,DWORD PTR [eax+0x4]
6400a3ee:	mov    edx,DWORD PTR [ebp-0x4]
6400a3f1:	lea    eax,[ecx+edx*4]
6400a3f4:	mov    DWORD PTR [ebp-0x150],eax
6400a3fa:	mov    cl,BYTE PTR [ebp-0x14a]
6400a400:	mov    BYTE PTR [ebp-0x149],cl
6400a406:	mov    edx,DWORD PTR [ebp-0x160]
6400a40c:	cmp    DWORD PTR [edx+0x4],0x0
6400a410:	je     0x6400a43f
6400a412:	mov    eax,DWORD PTR [ebp-0x160]
6400a418:	mov    ecx,DWORD PTR [eax+0x8]
6400a41b:	mov    DWORD PTR [ebp-0x15c],ecx
6400a421:	mov    edx,DWORD PTR [ebp-0x160]
6400a427:	mov    eax,DWORD PTR [edx+0x4]
6400a42a:	mov    DWORD PTR [ebp-0x158],eax
6400a430:	mov    ecx,DWORD PTR [ebp-0x158]
6400a436:	push   ecx
6400a437:	call   0x64013604
6400a43c:	add    esp,0x4
6400a43f:	mov    edx,DWORD PTR [ebp-0x160]
6400a445:	mov    eax,DWORD PTR [ebp-0x10]
6400a448:	mov    DWORD PTR [edx+0x4],eax
6400a44b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a451:	mov    edx,DWORD PTR [ecx+0x8]
6400a454:	add    edx,DWORD PTR [ebp+0x8]
6400a457:	mov    eax,DWORD PTR [ebp-0x160]
6400a45d:	mov    DWORD PTR [eax+0x8],edx
6400a460:	mov    esp,ebp
6400a462:	pop    ebp
6400a463:	ret    0x4
6400a466:	int3   
6400a467:	int3   
6400a468:	int3   
6400a469:	int3   
6400a46a:	int3   
6400a46b:	int3   
6400a46c:	int3   
6400a46d:	int3   
6400a46e:	int3   
6400a46f:	int3   
6400a470:	push   ebp
6400a471:	mov    ebp,esp
6400a473:	sub    esp,0x10
6400a476:	mov    DWORD PTR [ebp-0x10],ecx
6400a479:	push   0x0
6400a47b:	mov    eax,DWORD PTR [ebp+0x8]
6400a47e:	push   eax
6400a47f:	call   0x6400a640
6400a484:	add    esp,0x8
6400a487:	mov    esp,ebp
6400a489:	pop    ebp
6400a48a:	ret    0x4
6400a48d:	int3   
6400a48e:	int3   
6400a48f:	int3   
6400a490:	push   ebp
6400a491:	mov    ebp,esp
6400a493:	push   0xffffffff
6400a495:	push   0x64023418
6400a49a:	mov    eax,fs:0x0
6400a4a0:	push   eax
6400a4a1:	sub    esp,0x6c
6400a4a4:	mov    eax,ds:0x64037644
6400a4a9:	xor    eax,ebp
6400a4ab:	push   eax
6400a4ac:	lea    eax,[ebp-0xc]
6400a4af:	mov    fs:0x0,eax
6400a4b5:	push   0x6402b008
6400a4ba:	lea    ecx,[ebp-0x50]
6400a4bd:	call   0x640028f0
6400a4c2:	mov    DWORD PTR [ebp-0x4],0x0
6400a4c9:	lea    eax,[ebp-0x50]
6400a4cc:	push   eax
6400a4cd:	lea    ecx,[ebp-0x34]
6400a4d0:	call   0x640013e0
6400a4d5:	push   0x6402bd24
6400a4da:	lea    ecx,[ebp-0x34]
6400a4dd:	push   ecx
6400a4de:	call   0x64013832
6400a4e3:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400a4ea:	lea    ecx,[ebp-0x50]
6400a4ed:	call   0x64002930
6400a4f2:	mov    ecx,DWORD PTR [ebp-0xc]
6400a4f5:	mov    DWORD PTR fs:0x0,ecx
6400a4fc:	pop    ecx
6400a4fd:	mov    esp,ebp
6400a4ff:	pop    ebp
6400a500:	ret    
6400a501:	int3   
6400a502:	int3   
6400a503:	int3   
6400a504:	int3   
6400a505:	int3   
6400a506:	int3   
6400a507:	int3   
6400a508:	int3   
6400a509:	int3   
6400a50a:	int3   
6400a50b:	int3   
6400a50c:	int3   
6400a50d:	int3   
6400a50e:	int3   
6400a50f:	int3   
6400a510:	push   ebp
6400a511:	mov    ebp,esp
6400a513:	sub    esp,0xc
6400a516:	mov    DWORD PTR [ebp-0xc],ecx
6400a519:	mov    eax,DWORD PTR [ebp-0xc]
6400a51c:	mov    ecx,DWORD PTR [eax+0x8]
6400a51f:	shr    ecx,0x2
6400a522:	mov    DWORD PTR [ebp-0x4],ecx
6400a525:	mov    edx,DWORD PTR [ebp-0xc]
6400a528:	mov    eax,DWORD PTR [edx+0x8]
6400a52b:	and    eax,0x3
6400a52e:	mov    DWORD PTR [ebp-0x8],eax
6400a531:	mov    ecx,DWORD PTR [ebp-0xc]
6400a534:	cmp    DWORD PTR [ecx+0x4],0x0
6400a538:	jne    0x6400a53f
6400a53a:	call   0x64013e36
6400a53f:	mov    edx,DWORD PTR [ebp-0xc]
6400a542:	mov    eax,DWORD PTR [edx+0x4]
6400a545:	mov    ecx,DWORD PTR [ebp-0xc]
6400a548:	mov    edx,DWORD PTR [ecx+0x4]
6400a54b:	mov    eax,DWORD PTR [eax+0xc]
6400a54e:	add    eax,DWORD PTR [edx+0x10]
6400a551:	mov    ecx,DWORD PTR [ebp-0xc]
6400a554:	cmp    DWORD PTR [ecx+0x8],eax
6400a557:	jb     0x6400a55e
6400a559:	call   0x64013e36
6400a55e:	mov    edx,DWORD PTR [ebp-0xc]
6400a561:	mov    eax,DWORD PTR [edx+0x4]
6400a564:	mov    ecx,DWORD PTR [eax+0x8]
6400a567:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a56a:	ja     0x6400a57b
6400a56c:	mov    edx,DWORD PTR [ebp-0xc]
6400a56f:	mov    eax,DWORD PTR [edx+0x4]
6400a572:	mov    ecx,DWORD PTR [ebp-0x4]
6400a575:	sub    ecx,DWORD PTR [eax+0x8]
6400a578:	mov    DWORD PTR [ebp-0x4],ecx
6400a57b:	mov    edx,DWORD PTR [ebp-0xc]
6400a57e:	mov    eax,DWORD PTR [edx+0x4]
6400a581:	mov    ecx,DWORD PTR [eax+0x4]
6400a584:	mov    edx,DWORD PTR [ebp-0x4]
6400a587:	mov    eax,DWORD PTR [ecx+edx*4]
6400a58a:	mov    ecx,DWORD PTR [ebp-0x8]
6400a58d:	lea    eax,[eax+ecx*4]
6400a590:	mov    esp,ebp
6400a592:	pop    ebp
6400a593:	ret    
6400a594:	int3   
6400a595:	int3   
6400a596:	int3   
6400a597:	int3   
6400a598:	int3   
6400a599:	int3   
6400a59a:	int3   
6400a59b:	int3   
6400a59c:	int3   
6400a59d:	int3   
6400a59e:	int3   
6400a59f:	int3   
6400a5a0:	push   ebp
6400a5a1:	mov    ebp,esp
6400a5a3:	sub    esp,0x18
6400a5a6:	lea    eax,[ebp+0x10]
6400a5a9:	mov    DWORD PTR [ebp-0x4],eax
6400a5ac:	mov    ecx,DWORD PTR [ebp-0x4]
6400a5af:	push   ecx
6400a5b0:	mov    edx,DWORD PTR [ebp+0xc]
6400a5b3:	push   edx
6400a5b4:	mov    ecx,DWORD PTR [ebp+0x8]
6400a5b7:	call   0x6400a690
6400a5bc:	mov    DWORD PTR [ebp-0x4],0x0
6400a5c3:	mov    esp,ebp
6400a5c5:	pop    ebp
6400a5c6:	ret    
6400a5c7:	int3   
6400a5c8:	int3   
6400a5c9:	int3   
6400a5ca:	int3   
6400a5cb:	int3   
6400a5cc:	int3   
6400a5cd:	int3   
6400a5ce:	int3   
6400a5cf:	int3   
6400a5d0:	push   ebp
6400a5d1:	mov    ebp,esp
6400a5d3:	sub    esp,0x20
6400a5d6:	xor    eax,eax
6400a5d8:	mov    BYTE PTR [ebp-0x1],al
6400a5db:	mov    cl,BYTE PTR [ebp-0x3]
6400a5de:	mov    BYTE PTR [ebp-0x2],cl
6400a5e1:	mov    edx,DWORD PTR [ebp+0xc]
6400a5e4:	mov    DWORD PTR [ebp-0x8],edx
6400a5e7:	mov    eax,DWORD PTR [ebp+0x8]
6400a5ea:	mov    DWORD PTR [ebp-0x10],eax
6400a5ed:	mov    cl,BYTE PTR [ebp-0x1]
6400a5f0:	mov    BYTE PTR [ebp-0x1d],cl
6400a5f3:	mov    edx,DWORD PTR [ebp+0x10]
6400a5f6:	mov    DWORD PTR [ebp-0x1c],edx
6400a5f9:	mov    eax,DWORD PTR [ebp-0x8]
6400a5fc:	sub    eax,DWORD PTR [ebp-0x10]
6400a5ff:	sar    eax,0x2
6400a602:	mov    DWORD PTR [ebp-0x14],eax
6400a605:	mov    ecx,DWORD PTR [ebp-0x14]
6400a608:	mov    edx,DWORD PTR [ebp-0x1c]
6400a60b:	lea    eax,[edx+ecx*4]
6400a60e:	mov    DWORD PTR [ebp-0x18],eax
6400a611:	je     0x6400a631
6400a613:	mov    ecx,DWORD PTR [ebp-0x14]
6400a616:	shl    ecx,0x2
6400a619:	push   ecx
6400a61a:	mov    edx,DWORD PTR [ebp-0x10]
6400a61d:	push   edx
6400a61e:	mov    eax,DWORD PTR [ebp-0x14]
6400a621:	shl    eax,0x2
6400a624:	push   eax
6400a625:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a628:	push   ecx
6400a629:	call   0x640137d7
6400a62e:	add    esp,0x10
6400a631:	mov    eax,DWORD PTR [ebp-0x18]
6400a634:	mov    esp,ebp
6400a636:	pop    ebp
6400a637:	ret    
6400a638:	int3   
6400a639:	int3   
6400a63a:	int3   
6400a63b:	int3   
6400a63c:	int3   
6400a63d:	int3   
6400a63e:	int3   
6400a63f:	int3   
6400a640:	push   ebp
6400a641:	mov    ebp,esp
6400a643:	sub    esp,0xc
6400a646:	cmp    DWORD PTR [ebp+0x8],0x0
6400a64a:	ja     0x6400a655
6400a64c:	mov    DWORD PTR [ebp+0x8],0x0
6400a653:	jmp    0x6400a67a
6400a655:	or     eax,0xffffffff
6400a658:	xor    edx,edx
6400a65a:	div    DWORD PTR [ebp+0x8]
6400a65d:	cmp    eax,0x4
6400a660:	jae    0x6400a67a
6400a662:	push   0x0
6400a664:	lea    ecx,[ebp-0xc]
6400a667:	call   0x64001210
6400a66c:	push   0x6402bd5c
6400a671:	lea    eax,[ebp-0xc]
6400a674:	push   eax
6400a675:	call   0x64013832
6400a67a:	mov    ecx,DWORD PTR [ebp+0x8]
6400a67d:	shl    ecx,0x2
6400a680:	push   ecx
6400a681:	call   0x64013895
6400a686:	add    esp,0x4
6400a689:	mov    esp,ebp
6400a68b:	pop    ebp
6400a68c:	ret    
6400a68d:	int3   
6400a68e:	int3   
6400a68f:	int3   
6400a690:	push   ebp
6400a691:	mov    ebp,esp
6400a693:	sub    esp,0x18
6400a696:	mov    DWORD PTR [ebp-0x18],ecx
6400a699:	cmp    DWORD PTR [ebp+0x8],0x0
6400a69d:	jne    0x6400a6a9
6400a69f:	push   0x80070057
6400a6a4:	call   0x64001040
6400a6a9:	mov    eax,DWORD PTR [ebp+0xc]
6400a6ac:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6af:	call   0x640077d0
6400a6b4:	mov    DWORD PTR [ebp-0x8],eax
6400a6b7:	mov    eax,DWORD PTR [ebp-0x8]
6400a6ba:	push   eax
6400a6bb:	mov    ecx,DWORD PTR [ebp-0x18]
6400a6be:	call   0x64002dd0
6400a6c3:	mov    DWORD PTR [ebp-0x4],eax
6400a6c6:	mov    edx,DWORD PTR [ebp-0x8]
6400a6c9:	add    edx,0x1
6400a6cc:	mov    ecx,DWORD PTR [ebp-0x4]
6400a6cf:	push   ecx
6400a6d0:	mov    eax,DWORD PTR [ebp+0xc]
6400a6d3:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6d6:	call   0x640077e0
6400a6db:	add    esp,0x4
6400a6de:	mov    edx,DWORD PTR [ebp-0x8]
6400a6e1:	push   edx
6400a6e2:	mov    ecx,DWORD PTR [ebp-0x18]
6400a6e5:	call   0x640036c0
6400a6ea:	mov    esp,ebp
6400a6ec:	pop    ebp
6400a6ed:	ret    0x8
6400a6f0:	push   ebp
6400a6f1:	mov    ebp,esp
6400a6f3:	sub    esp,0x20
6400a6f6:	xor    eax,eax
6400a6f8:	mov    BYTE PTR [ebp-0x1],al
6400a6fb:	mov    cl,BYTE PTR [ebp-0x1]
6400a6fe:	mov    BYTE PTR [ebp-0x1e],cl
6400a701:	mov    dl,BYTE PTR [ebp-0x2]
6400a704:	mov    BYTE PTR [ebp-0x1d],dl
6400a707:	mov    eax,DWORD PTR [ebp+0x8]
6400a70a:	mov    DWORD PTR [ebp-0x1c],eax
6400a70d:	mov    ecx,DWORD PTR [ebp+0xc]
6400a710:	mov    edx,DWORD PTR [ebp-0x1c]
6400a713:	lea    eax,[edx+ecx*4]
6400a716:	mov    DWORD PTR [ebp-0x8],eax
6400a719:	xor    ecx,ecx
6400a71b:	mov    BYTE PTR [ebp-0x9],cl
6400a71e:	mov    dl,BYTE PTR [ebp-0x9]
6400a721:	mov    BYTE PTR [ebp-0x15],dl
6400a724:	mov    eax,DWORD PTR [ebp+0xc]
6400a727:	mov    DWORD PTR [ebp-0x14],eax
6400a72a:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a72d:	mov    DWORD PTR [ebp-0x10],ecx
6400a730:	jmp    0x6400a744
6400a732:	mov    edx,DWORD PTR [ebp-0x14]
6400a735:	sub    edx,0x1
6400a738:	mov    DWORD PTR [ebp-0x14],edx
6400a73b:	mov    eax,DWORD PTR [ebp-0x10]
6400a73e:	add    eax,0x4
6400a741:	mov    DWORD PTR [ebp-0x10],eax
6400a744:	cmp    DWORD PTR [ebp-0x14],0x0
6400a748:	jbe    0x6400a756
6400a74a:	mov    ecx,DWORD PTR [ebp-0x10]
6400a74d:	mov    edx,DWORD PTR [ebp+0x10]
6400a750:	mov    eax,DWORD PTR [edx]
6400a752:	mov    DWORD PTR [ecx],eax
6400a754:	jmp    0x6400a732
6400a756:	mov    esp,ebp
6400a758:	pop    ebp
6400a759:	ret    
6400a75a:	int3   
6400a75b:	int3   
6400a75c:	int3   
6400a75d:	int3   
6400a75e:	int3   
6400a75f:	int3   
6400a760:	push   ebp
6400a761:	mov    ebp,esp
6400a763:	sub    esp,0x14
6400a766:	mov    eax,DWORD PTR [ebp+0xc]
6400a769:	mov    ecx,DWORD PTR [ebp+0x8]
6400a76c:	lea    edx,[ecx+eax*4]
6400a76f:	mov    DWORD PTR [ebp-0x4],edx
6400a772:	xor    eax,eax
6400a774:	mov    BYTE PTR [ebp-0x5],al
6400a777:	mov    cl,BYTE PTR [ebp-0x5]
6400a77a:	mov    BYTE PTR [ebp-0x11],cl
6400a77d:	mov    edx,DWORD PTR [ebp+0xc]
6400a780:	mov    DWORD PTR [ebp-0x10],edx
6400a783:	mov    eax,DWORD PTR [ebp+0x8]
6400a786:	mov    DWORD PTR [ebp-0xc],eax
6400a789:	jmp    0x6400a79d
6400a78b:	mov    ecx,DWORD PTR [ebp-0x10]
6400a78e:	sub    ecx,0x1
6400a791:	mov    DWORD PTR [ebp-0x10],ecx
6400a794:	mov    edx,DWORD PTR [ebp-0xc]
6400a797:	add    edx,0x4
6400a79a:	mov    DWORD PTR [ebp-0xc],edx
6400a79d:	cmp    DWORD PTR [ebp-0x10],0x0
6400a7a1:	jbe    0x6400a7af
6400a7a3:	mov    eax,DWORD PTR [ebp-0xc]
6400a7a6:	mov    ecx,DWORD PTR [ebp+0x10]
6400a7a9:	mov    edx,DWORD PTR [ecx]
6400a7ab:	mov    DWORD PTR [eax],edx
6400a7ad:	jmp    0x6400a78b
6400a7af:	mov    esp,ebp
6400a7b1:	pop    ebp
6400a7b2:	ret    
6400a7b3:	int3   
6400a7b4:	int3   
6400a7b5:	int3   
6400a7b6:	int3   
6400a7b7:	int3   
6400a7b8:	int3   
6400a7b9:	int3   
6400a7ba:	int3   
6400a7bb:	int3   
6400a7bc:	int3   
6400a7bd:	int3   
6400a7be:	int3   
6400a7bf:	int3   
6400a7c0:	push   ebp
6400a7c1:	mov    ebp,esp
6400a7c3:	push   0xffffffff
6400a7c5:	push   0x64023aa8
6400a7ca:	mov    eax,fs:0x0
6400a7d0:	push   eax
6400a7d1:	sub    esp,0x14
6400a7d4:	push   ebx
6400a7d5:	push   esi
6400a7d6:	push   edi
6400a7d7:	mov    eax,ds:0x64037644
6400a7dc:	xor    eax,ebp
6400a7de:	push   eax
6400a7df:	lea    eax,[ebp-0xc]
6400a7e2:	mov    fs:0x0,eax
6400a7e8:	mov    DWORD PTR [ebp-0x10],esp
6400a7eb:	mov    DWORD PTR [ebp-0x4],0x0
6400a7f2:	mov    al,0x1
6400a7f4:	mov    BYTE PTR [ebp-0x20],al
6400a7f7:	mov    DWORD PTR [ebp-0x1c],0xffffffff
6400a7fe:	mov    BYTE PTR [ebp-0x18],al
6400a801:	push   0x4
6400a803:	mov    BYTE PTR [ebp-0x4],al
6400a806:	lea    eax,[ebp-0x14]
6400a809:	push   eax
6400a80a:	push   0x4
6400a80c:	mov    ecx,eax
6400a80e:	push   ecx
6400a80f:	push   0x7
6400a811:	lea    ecx,[ebp-0x20]
6400a814:	mov    DWORD PTR [ebp-0x14],0x4
6400a81b:	call   0x640072a0
6400a820:	mov    edi,DWORD PTR [ebp-0x1c]
6400a823:	test   edi,edi
6400a825:	je     0x6400a83d
6400a827:	call   DWORD PTR ds:0x64024068
6400a82d:	push   edi
6400a82e:	mov    esi,eax
6400a830:	call   DWORD PTR ds:0x64024074
6400a836:	push   esi
6400a837:	call   DWORD PTR ds:0x64024070
6400a83d:	mov    ecx,DWORD PTR [ebp-0xc]
6400a840:	mov    DWORD PTR fs:0x0,ecx
6400a847:	pop    ecx
6400a848:	pop    edi
6400a849:	pop    esi
6400a84a:	pop    ebx
6400a84b:	mov    esp,ebp
6400a84d:	pop    ebp
6400a84e:	ret    
6400a84f:	mov    eax,0x6400a83d
6400a854:	ret    
6400a855:	int3   
6400a856:	int3   
6400a857:	int3   
6400a858:	int3   
6400a859:	int3   
6400a85a:	int3   
6400a85b:	int3   
6400a85c:	int3   
6400a85d:	int3   
6400a85e:	int3   
6400a85f:	int3   
6400a860:	push   0xffffffff
6400a862:	push   0x64022f48
6400a867:	mov    eax,fs:0x0
6400a86d:	push   eax
6400a86e:	push   ebx
6400a86f:	push   esi
6400a870:	push   edi
6400a871:	mov    eax,ds:0x64037644
6400a876:	xor    eax,esp
6400a878:	push   eax
6400a879:	lea    eax,[esp+0x10]
6400a87d:	mov    fs:0x0,eax
6400a883:	mov    esi,ecx
6400a885:	mov    edi,DWORD PTR [esp+0x20]
6400a889:	mov    DWORD PTR [edi],0x0
6400a88f:	mov    DWORD PTR [esp+0x18],0x0
6400a897:	mov    eax,DWORD PTR [esi+0x14]
6400a89a:	mov    DWORD PTR [edi+0x4],eax
6400a89d:	mov    eax,DWORD PTR [esi+0x14]
6400a8a0:	push   eax
6400a8a1:	call   0x64012f5a
6400a8a6:	mov    ebx,eax
6400a8a8:	mov    eax,DWORD PTR [edi]
6400a8aa:	add    esp,0x4
6400a8ad:	cmp    ebx,eax
6400a8af:	je     0x6400a8ba
6400a8b1:	push   eax
6400a8b2:	call   0x64013604
6400a8b7:	add    esp,0x4
6400a8ba:	mov    DWORD PTR [edi],ebx
6400a8bc:	cmp    DWORD PTR [esi+0x18],0x10
6400a8c0:	mov    eax,DWORD PTR [esi+0x14]
6400a8c3:	jb     0x6400a8ca
6400a8c5:	mov    esi,DWORD PTR [esi+0x4]
6400a8c8:	jmp    0x6400a8cd
6400a8ca:	add    esi,0x4
6400a8cd:	push   eax
6400a8ce:	push   esi
6400a8cf:	push   ebx
6400a8d0:	call   0x640151a0
6400a8d5:	add    esp,0xc
6400a8d8:	mov    eax,edi
6400a8da:	mov    ecx,DWORD PTR [esp+0x10]
6400a8de:	mov    DWORD PTR fs:0x0,ecx
6400a8e5:	pop    ecx
6400a8e6:	pop    edi
6400a8e7:	pop    esi
6400a8e8:	pop    ebx
6400a8e9:	add    esp,0xc
6400a8ec:	ret    0x4
6400a8ef:	int3   
6400a8f0:	sub    esp,0x14
6400a8f3:	mov    eax,DWORD PTR [eax]
6400a8f5:	mov    ecx,DWORD PTR [eax+0xa]
6400a8f8:	imul   ecx,ecx,0xd
6400a8fb:	add    ecx,DWORD PTR [eax+0x6]
6400a8fe:	push   ebx
6400a8ff:	push   ebp
6400a900:	lea    ebp,[ecx+eax*1+0x12]
6400a904:	mov    eax,DWORD PTR [eax+0xe]
6400a907:	test   eax,eax
6400a909:	push   esi
6400a90a:	push   edi
6400a90b:	mov    DWORD PTR [esp+0x10],0x0
6400a913:	mov    DWORD PTR [esp+0x20],eax
6400a917:	je     0x6400a999
6400a91d:	mov    eax,DWORD PTR [esp+0x28]
6400a921:	mov    edx,DWORD PTR [eax+0x14]
6400a924:	mov    DWORD PTR [esp+0x14],edx
6400a928:	mov    edx,DWORD PTR [eax+0x18]
6400a92b:	mov    DWORD PTR [esp+0x1c],edx
6400a92f:	nop
6400a930:	lea    ebx,[ebp+0x6]
6400a933:	mov    eax,ebx
6400a935:	lea    edx,[eax+0x1]
6400a938:	mov    cl,BYTE PTR [eax]
6400a93a:	add    eax,0x1
6400a93d:	test   cl,cl
6400a93f:	jne    0x6400a938
6400a941:	mov    esi,DWORD PTR [esp+0x14]
6400a945:	sub    eax,edx
6400a947:	mov    edi,eax
6400a949:	cmp    esi,edi
6400a94b:	mov    eax,esi
6400a94d:	mov    ecx,esi
6400a94f:	jb     0x6400a953
6400a951:	mov    ecx,edi
6400a953:	cmp    DWORD PTR [esp+0x1c],0x10
6400a958:	mov    eax,DWORD PTR [esp+0x28]
6400a95c:	jb     0x6400a963
6400a95e:	mov    eax,DWORD PTR [eax+0x4]
6400a961:	jmp    0x6400a966
6400a963:	add    eax,0x4
6400a966:	push   ecx
6400a967:	push   ebx
6400a968:	push   eax
6400a969:	call   0x64001270
6400a96e:	add    esp,0xc
6400a971:	test   eax,eax
6400a973:	jne    0x6400a982
6400a975:	cmp    esi,edi
6400a977:	jb     0x6400a982
6400a979:	cmp    esi,edi
6400a97b:	setne  al
6400a97e:	test   eax,eax
6400a980:	je     0x6400a9a6
6400a982:	movzx  ecx,WORD PTR [ebp+0x0]
6400a986:	mov    eax,DWORD PTR [esp+0x10]
6400a98a:	add    eax,0x1
6400a98d:	add    ebp,ecx
6400a98f:	cmp    eax,DWORD PTR [esp+0x20]
6400a993:	mov    DWORD PTR [esp+0x10],eax
6400a997:	jne    0x6400a930
6400a999:	pop    edi
6400a99a:	pop    esi
6400a99b:	pop    ebp
6400a99c:	or     eax,0xffffffff
6400a99f:	pop    ebx
6400a9a0:	add    esp,0x14
6400a9a3:	ret    0x4
6400a9a6:	mov    eax,DWORD PTR [ebp+0x2]
6400a9a9:	pop    edi
6400a9aa:	pop    esi
6400a9ab:	pop    ebp
6400a9ac:	pop    ebx
6400a9ad:	add    esp,0x14
6400a9b0:	ret    0x4
6400a9b3:	int3   
6400a9b4:	int3   
6400a9b5:	int3   
6400a9b6:	int3   
6400a9b7:	int3   
6400a9b8:	int3   
6400a9b9:	int3   
6400a9ba:	int3   
6400a9bb:	int3   
6400a9bc:	int3   
6400a9bd:	int3   
6400a9be:	int3   
6400a9bf:	int3   
6400a9c0:	mov    eax,DWORD PTR [eax]
6400a9c2:	add    eax,0x12
6400a9c5:	ret    
6400a9c6:	int3   
6400a9c7:	int3   
6400a9c8:	int3   
6400a9c9:	int3   
6400a9ca:	int3   
6400a9cb:	int3   
6400a9cc:	int3   
6400a9cd:	int3   
6400a9ce:	int3   
6400a9cf:	int3   
6400a9d0:	mov    ecx,DWORD PTR [eax]
6400a9d2:	mov    eax,DWORD PTR [ecx+0x6]
6400a9d5:	ret    
6400a9d6:	int3   
6400a9d7:	int3   
6400a9d8:	int3   
6400a9d9:	int3   
6400a9da:	int3   
6400a9db:	int3   
6400a9dc:	int3   
6400a9dd:	int3   
6400a9de:	int3   
6400a9df:	int3   
6400a9e0:	push   ebp
6400a9e1:	push   esi
6400a9e2:	mov    esi,DWORD PTR [eax]
6400a9e4:	mov    ecx,DWORD PTR [esi+0x6]
6400a9e7:	push   edi
6400a9e8:	lea    edi,[esi+0x12]
6400a9eb:	xor    ebp,ebp
6400a9ed:	add    ecx,edi
6400a9ef:	cmp    DWORD PTR [esi+0xa],ebp
6400a9f2:	je     0x6400aa26
6400a9f4:	push   ebx
6400a9f5:	cmp    BYTE PTR [ecx+0x4],0x0
6400a9f9:	jne    0x6400aa09
6400a9fb:	mov    edx,DWORD PTR [ecx+0x5]
6400a9fe:	add    edx,DWORD PTR [esp+0x14]
6400aa02:	mov    eax,DWORD PTR [ecx]
6400aa04:	mov    DWORD PTR [edi+eax*1],edx
6400aa07:	jmp    0x6400aa1a
6400aa09:	mov    eax,DWORD PTR [ecx+0x5]
6400aa0c:	add    eax,DWORD PTR [esp+0x14]
6400aa10:	mov    ebx,DWORD PTR [ecx]
6400aa12:	cdq    
6400aa13:	mov    DWORD PTR [edi+ebx*1],eax
6400aa16:	mov    DWORD PTR [edi+ebx*1+0x4],edx
6400aa1a:	add    ebp,0x1
6400aa1d:	add    ecx,0xd
6400aa20:	cmp    ebp,DWORD PTR [esi+0xa]
6400aa23:	jne    0x6400a9f5
6400aa25:	pop    ebx
6400aa26:	pop    edi
6400aa27:	pop    esi
6400aa28:	pop    ebp
6400aa29:	ret    0x4
6400aa2c:	int3   
6400aa2d:	int3   
6400aa2e:	int3   
6400aa2f:	int3   
6400aa30:	sub    esp,0x8
6400aa33:	push   edi
6400aa34:	mov    edi,DWORD PTR ds:0x64024104
6400aa3a:	lea    eax,[esp+0x4]
6400aa3e:	push   eax
6400aa3f:	mov    eax,ds:0x64038a34
6400aa44:	lea    ecx,[eax+eax*2]
6400aa47:	push   0x40
6400aa49:	add    ecx,ecx
6400aa4b:	push   ecx
6400aa4c:	push   esi
6400aa4d:	mov    DWORD PTR [esp+0x14],0x0
6400aa55:	call   edi
6400aa57:	mov    edx,DWORD PTR [esp+0x14]
6400aa5b:	sub    edx,DWORD PTR [esp+0x1c]
6400aa5f:	mov    ecx,DWORD PTR [esp+0x10]
6400aa63:	lea    eax,[esi+0x1]
6400aa66:	sub    edx,eax
6400aa68:	lea    edx,[edx+ecx*1-0x4]
6400aa6c:	mov    ecx,DWORD PTR [esp+0x4]
6400aa70:	mov    BYTE PTR [esi],0xe9
6400aa73:	mov    DWORD PTR [eax],edx
6400aa75:	lea    eax,[esp+0x8]
6400aa79:	push   eax
6400aa7a:	push   ecx
6400aa7b:	push   0x5
6400aa7d:	push   esi
6400aa7e:	mov    DWORD PTR [esp+0x18],0x0
6400aa86:	call   edi
6400aa88:	pop    edi
6400aa89:	add    esp,0x8
6400aa8c:	ret    
6400aa8d:	int3   
6400aa8e:	int3   
6400aa8f:	int3   
6400aa90:	mov    eax,0x193c
6400aa95:	call   0x64017d00
6400aa9a:	push   ebx
6400aa9b:	xor    eax,eax
6400aa9d:	push   ebp
6400aa9e:	push   esi
6400aa9f:	push   edi
6400aaa0:	mov    DWORD PTR [esp+0x38],eax
6400aaa4:	mov    DWORD PTR [esp+0x3c],eax
6400aaa8:	mov    DWORD PTR [esp+0x40],eax
6400aaac:	mov    DWORD PTR [esp+0x30],eax
6400aab0:	mov    DWORD PTR [esp+0x34],eax
6400aab4:	mov    DWORD PTR [esp+0x44],eax
6400aab8:	mov    eax,DWORD PTR [esp+0x1950]
6400aabf:	lea    edx,[esp+0x20]
6400aac3:	push   edx
6400aac4:	mov    ebx,ecx
6400aac6:	mov    ecx,DWORD PTR ds:0x64038a38
6400aacc:	mov    DWORD PTR [esp+0x3c],eax
6400aad0:	push   0x64
6400aad2:	lea    eax,[esp+0x50]
6400aad6:	mov    DWORD PTR [esp+0x48],ecx
6400aada:	xor    esi,esi
6400aadc:	push   eax
6400aadd:	lea    ecx,[esp+0x34]
6400aae1:	push   ecx
6400aae2:	mov    DWORD PTR [esp+0x30],esi
6400aae6:	mov    DWORD PTR [esp+0x38],esi
6400aaea:	mov    DWORD PTR [esp+0x3c],esi
6400aaee:	mov    DWORD PTR [esp+0x4c],0x1e
6400aaf6:	call   0x6400b4a0
6400aafb:	add    esp,0x10
6400aafe:	cmp    eax,0x3
6400ab01:	jne    0x6400ab10
6400ab03:	xor    eax,eax
6400ab05:	pop    edi
6400ab06:	pop    esi
6400ab07:	pop    ebp
6400ab08:	pop    ebx
6400ab09:	add    esp,0x193c
6400ab0f:	ret    
6400ab10:	xor    edi,edi
6400ab12:	xor    ebp,ebp
6400ab14:	cmp    DWORD PTR [esp+0x20],esi
6400ab18:	mov    DWORD PTR [esp+0x14],edi
6400ab1c:	mov    DWORD PTR [esp+0x10],esi
6400ab20:	jbe    0x6400ac52
6400ab26:	lea    edx,[esp+0x50]
6400ab2a:	mov    DWORD PTR [esp+0x18],edx
6400ab2e:	jmp    0x6400ab34
6400ab30:	mov    edx,DWORD PTR [esp+0x18]
6400ab34:	cmp    edi,DWORD PTR [esp+0x1954]
6400ab3b:	jae    0x6400ac52
6400ab41:	mov    eax,DWORD PTR [esp+0x1950]
6400ab48:	add    edi,eax
6400ab4a:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400ab52:	lea    eax,[edx+0xa]
6400ab55:	mov    cl,BYTE PTR [eax]
6400ab57:	test   cl,cl
6400ab59:	je     0x6400ab6f
6400ab5b:	cmp    cl,0x8
6400ab5e:	jne    0x6400ab64
6400ab60:	mov    DWORD PTR [esp+0x1c],esi
6400ab64:	add    esi,0x1
6400ab67:	add    eax,0x4
6400ab6a:	cmp    esi,0x4
6400ab6d:	jne    0x6400ab55
6400ab6f:	mov    DWORD PTR [esp+0x24],esi
6400ab73:	movzx  esi,BYTE PTR [edx]
6400ab76:	push   esi
6400ab77:	lea    ecx,[ebx+ebp*1]
6400ab7a:	push   edi
6400ab7b:	push   ecx
6400ab7c:	call   0x640151a0
6400ab81:	add    esp,0xc
6400ab84:	cmp    DWORD PTR [esp+0x24],0x1
6400ab89:	jne    0x6400ac23
6400ab8f:	cmp    DWORD PTR [esp+0x1c],0x0
6400ab94:	jne    0x6400ac23
6400ab9a:	mov    edx,DWORD PTR [esp+0x18]
6400ab9e:	movzx  ecx,WORD PTR [edx+0xc]
6400aba2:	movzx  eax,cx
6400aba5:	shr    eax,0x3
6400aba8:	cmp    cx,0x10
6400abac:	jne    0x6400abcb
6400abae:	sub    edi,ebx
6400abb0:	sub    edi,ebp
6400abb2:	sub    edi,DWORD PTR [esp+0x1960]
6400abb9:	sub    esi,eax
6400abbb:	add    edi,DWORD PTR [esp+0x1958]
6400abc2:	add    esi,ebp
6400abc4:	add    esi,ebx
6400abc6:	add    WORD PTR [esi],di
6400abc9:	jmp    0x6400ac23
6400abcb:	cmp    cx,0x20
6400abcf:	jne    0x6400abef
6400abd1:	sub    esi,eax
6400abd3:	mov    eax,DWORD PTR [esp+0x1958]
6400abda:	sub    eax,DWORD PTR [esp+0x1960]
6400abe1:	add    esi,ebp
6400abe3:	sub    eax,ebp
6400abe5:	sub    eax,ebx
6400abe7:	add    esi,ebx
6400abe9:	add    eax,edi
6400abeb:	add    DWORD PTR [esi],eax
6400abed:	jmp    0x6400ac23
6400abef:	cmp    cx,0x40
6400abf3:	jne    0x6400ac23
6400abf5:	sub    esi,eax
6400abf7:	mov    eax,edi
6400abf9:	sub    eax,ebp
6400abfb:	sub    eax,ebx
6400abfd:	add    esi,ebp
6400abff:	cdq    
6400ac00:	add    esi,ebx
6400ac02:	sub    eax,DWORD PTR [esp+0x1960]
6400ac09:	sbb    edx,DWORD PTR [esp+0x1964]
6400ac10:	add    eax,DWORD PTR [esp+0x1958]
6400ac17:	adc    edx,DWORD PTR [esp+0x195c]
6400ac1e:	add    DWORD PTR [esi],eax
6400ac20:	adc    DWORD PTR [esi+0x4],edx
6400ac23:	mov    ecx,DWORD PTR [esp+0x18]
6400ac27:	movzx  eax,BYTE PTR [ecx]
6400ac2a:	add    DWORD PTR [esp+0x14],eax
6400ac2e:	mov    edi,DWORD PTR [esp+0x14]
6400ac32:	add    ebp,eax
6400ac34:	mov    eax,DWORD PTR [esp+0x10]
6400ac38:	add    eax,0x1
6400ac3b:	add    ecx,0x40
6400ac3e:	xor    esi,esi
6400ac40:	cmp    eax,DWORD PTR [esp+0x20]
6400ac44:	mov    DWORD PTR [esp+0x10],eax
6400ac48:	mov    DWORD PTR [esp+0x18],ecx
6400ac4c:	jb     0x6400ab30
6400ac52:	mov    eax,ds:0x64038a34
6400ac57:	mov    ecx,DWORD PTR [esp+0x1950]
6400ac5e:	lea    edx,[esp+0x10]
6400ac62:	push   edx
6400ac63:	lea    eax,[eax+eax*2]
6400ac66:	push   0x40
6400ac68:	add    eax,eax
6400ac6a:	add    ebx,ebp
6400ac6c:	mov    ebp,DWORD PTR ds:0x64024104
6400ac72:	push   eax
6400ac73:	push   ebx
6400ac74:	add    edi,ecx
6400ac76:	mov    DWORD PTR [esp+0x20],esi
6400ac7a:	call   ebp
6400ac7c:	mov    eax,DWORD PTR [esp+0x1958]
6400ac83:	sub    eax,DWORD PTR [esp+0x1960]
6400ac8a:	lea    ecx,[ebx+0x1]
6400ac8d:	sub    eax,ecx
6400ac8f:	lea    edx,[eax+edi*1-0x4]
6400ac93:	mov    BYTE PTR [ebx],0xe9
6400ac96:	lea    eax,[esp+0x1c]
6400ac9a:	push   eax
6400ac9b:	mov    DWORD PTR [ecx],edx
6400ac9d:	mov    ecx,DWORD PTR [esp+0x14]
6400aca1:	push   ecx
6400aca2:	push   0x5
6400aca4:	push   ebx
6400aca5:	mov    DWORD PTR [esp+0x2c],esi
6400aca9:	call   ebp
6400acab:	pop    edi
6400acac:	pop    esi
6400acad:	pop    ebp
6400acae:	mov    eax,0x1
6400acb3:	pop    ebx
6400acb4:	add    esp,0x193c
6400acba:	ret    
6400acbb:	int3   
6400acbc:	int3   
6400acbd:	int3   
6400acbe:	int3   
6400acbf:	int3   
6400acc0:	mov    ecx,DWORD PTR [esp+0x1c]
6400acc4:	mov    edx,DWORD PTR ds:0x64038a34
6400acca:	push   ebx
6400accb:	mov    ebx,DWORD PTR [esp+0x10]
6400accf:	push   esi
6400acd0:	push   edi
6400acd1:	mov    edi,DWORD PTR [esp+0x1c]
6400acd5:	mov    esi,eax
6400acd7:	mov    eax,DWORD PTR [esp+0x2c]
6400acdb:	push   eax
6400acdc:	push   ecx
6400acdd:	mov    ecx,DWORD PTR [esp+0x18]
6400ace1:	push   edi
6400ace2:	push   ebx
6400ace3:	push   edx
6400ace4:	push   esi
6400ace5:	call   0x6400aa90
6400acea:	add    esp,0x18
6400aced:	test   eax,eax
6400acef:	jne    0x6400acf5
6400acf1:	pop    edi
6400acf2:	pop    esi
6400acf3:	pop    ebx
6400acf4:	ret    
6400acf5:	mov    eax,DWORD PTR [esp+0x24]
6400acf9:	mov    ecx,DWORD PTR [esp+0x20]
6400acfd:	mov    edx,DWORD PTR [esp+0x14]
6400ad01:	push   edi
6400ad02:	push   ebx
6400ad03:	push   eax
6400ad04:	push   ecx
6400ad05:	push   edx
6400ad06:	call   0x6400aa30
6400ad0b:	add    esp,0x14
6400ad0e:	pop    edi
6400ad0f:	pop    esi
6400ad10:	mov    eax,0x1
6400ad15:	pop    ebx
6400ad16:	ret    
6400ad17:	int3   
6400ad18:	int3   
6400ad19:	int3   
6400ad1a:	int3   
6400ad1b:	int3   
6400ad1c:	int3   
6400ad1d:	int3   
6400ad1e:	int3   
6400ad1f:	int3   
6400ad20:	sub    esp,0x8
6400ad23:	push   ebx
6400ad24:	push   ebp
6400ad25:	push   edi
6400ad26:	push   0x20
6400ad28:	mov    DWORD PTR [esp+0x14],0x0
6400ad30:	call   0x64012f5a
6400ad35:	add    esp,0x4
6400ad38:	push   0x20
6400ad3a:	mov    ebx,eax
6400ad3c:	call   0x64012f5a
6400ad41:	mov    ebp,eax
6400ad43:	mov    eax,ds:0x64038a34
6400ad48:	lea    eax,[eax+eax*2]
6400ad4b:	add    eax,eax
6400ad4d:	add    esp,0x4
6400ad50:	push   eax
6400ad51:	call   0x64012f5a
6400ad56:	add    esp,0x4
6400ad59:	mov    DWORD PTR [esp+0xc],eax
6400ad5d:	mov    eax,ds:0x64038a34
6400ad62:	push   0x40
6400ad64:	lea    eax,[eax+eax*2]
6400ad67:	push   0x3000
6400ad6c:	add    eax,eax
6400ad6e:	push   eax
6400ad6f:	push   0x0
6400ad71:	push   esi
6400ad72:	call   DWORD PTR ds:0x640240d4
6400ad78:	mov    edi,eax
6400ad7a:	test   edi,edi
6400ad7c:	je     0x6400ae2e
6400ad82:	mov    eax,DWORD PTR [esp+0x18]
6400ad86:	push   0x0
6400ad88:	push   0x20
6400ad8a:	push   ebx
6400ad8b:	push   eax
6400ad8c:	push   esi
6400ad8d:	call   DWORD PTR ds:0x640240d8
6400ad93:	test   eax,eax
6400ad95:	je     0x6400ae1f
6400ad9b:	mov    ecx,DWORD PTR [esp+0x1c]
6400ad9f:	push   0x0
6400ada1:	push   0x20
6400ada3:	push   ebp
6400ada4:	push   ecx
6400ada5:	push   esi
6400ada6:	call   DWORD PTR ds:0x640240d8
6400adac:	test   eax,eax
6400adae:	je     0x6400ae1f
6400adb0:	mov    ecx,DWORD PTR [esp+0xc]
6400adb4:	mov    eax,edi
6400adb6:	sub    eax,ecx
6400adb8:	cdq    
6400adb9:	push   edx
6400adba:	push   eax
6400adbb:	mov    eax,DWORD PTR [esp+0x24]
6400adbf:	sub    eax,ebp
6400adc1:	cdq    
6400adc2:	push   edx
6400adc3:	push   eax
6400adc4:	mov    eax,DWORD PTR [esp+0x28]
6400adc8:	sub    eax,ebx
6400adca:	cdq    
6400adcb:	push   edx
6400adcc:	push   eax
6400adcd:	push   ebp
6400adce:	push   ecx
6400adcf:	mov    eax,ebx
6400add1:	call   0x6400acc0
6400add6:	add    esp,0x20
6400add9:	test   eax,eax
6400addb:	je     0x6400ae1f
6400addd:	mov    eax,ds:0x64038a34
6400ade2:	push   0x0
6400ade4:	lea    edx,[eax+eax*2]
6400ade7:	mov    eax,DWORD PTR [esp+0x10]
6400adeb:	add    edx,edx
6400aded:	push   edx
6400adee:	push   eax
6400adef:	push   edi
6400adf0:	push   esi
6400adf1:	call   DWORD PTR ds:0x640240e8
6400adf7:	mov    ecx,DWORD PTR [esp+0x18]
6400adfb:	push   0x0
6400adfd:	push   0x20
6400adff:	push   ebx
6400ae00:	push   ecx
6400ae01:	push   esi
6400ae02:	call   DWORD PTR ds:0x640240e8
6400ae08:	mov    edx,DWORD PTR [esp+0x1c]
6400ae0c:	push   0x0
6400ae0e:	push   0x20
6400ae10:	push   ebp
6400ae11:	push   edx
6400ae12:	push   esi
6400ae13:	call   DWORD PTR ds:0x640240e8
6400ae19:	mov    DWORD PTR [esp+0x10],edi
6400ae1d:	jmp    0x6400ae2e
6400ae1f:	push   0x8000
6400ae24:	push   0x0
6400ae26:	push   edi
6400ae27:	push   esi
6400ae28:	call   DWORD PTR ds:0x640240c4
6400ae2e:	push   ebx
6400ae2f:	call   0x64014534
6400ae34:	add    esp,0x4
6400ae37:	push   ebp
6400ae38:	call   0x64014534
6400ae3d:	mov    eax,DWORD PTR [esp+0x10]
6400ae41:	add    esp,0x4
6400ae44:	push   eax
6400ae45:	call   0x64014534
6400ae4a:	mov    eax,DWORD PTR [esp+0x14]
6400ae4e:	add    esp,0x4
6400ae51:	pop    edi
6400ae52:	pop    ebp
6400ae53:	pop    ebx
6400ae54:	add    esp,0x8
6400ae57:	ret    
6400ae58:	int3   
6400ae59:	int3   
6400ae5a:	int3   
6400ae5b:	int3   
6400ae5c:	int3   
6400ae5d:	int3   
6400ae5e:	int3   
6400ae5f:	int3   
6400ae60:	mov    eax,DWORD PTR [esp+0x8]
6400ae64:	sub    eax,0x1
6400ae67:	jne    0x6400ae72
6400ae69:	mov    eax,DWORD PTR [esp+0x4]
6400ae6d:	mov    ds:0x64038cc0,eax
6400ae72:	mov    eax,0x1
6400ae77:	ret    0xc
6400ae7a:	int3   
6400ae7b:	int3   
6400ae7c:	int3   
6400ae7d:	int3   
6400ae7e:	int3   
6400ae7f:	int3   
6400ae80:	push   0x64038cc4
6400ae85:	call   DWORD PTR ds:0x6402402c
6400ae8b:	cmp    eax,0x1
6400ae8e:	jne    0x6400ae95
6400ae90:	call   0x6400b3b0
6400ae95:	or     eax,0xffffffff
6400ae98:	ret    0x8
6400ae9b:	int3   
6400ae9c:	int3   
6400ae9d:	int3   
6400ae9e:	int3   
6400ae9f:	int3   
6400aea0:	or     eax,0xffffffff
6400aea3:	ret    0x4
6400aea6:	int3   
6400aea7:	int3   
6400aea8:	int3   
6400aea9:	int3   
6400aeaa:	int3   
6400aeab:	int3   
6400aeac:	int3   
6400aead:	int3   
6400aeae:	int3   
6400aeaf:	int3   
6400aeb0:	push   ecx
6400aeb1:	push   esi
6400aeb2:	push   0x1
6400aeb4:	push   0x4
6400aeb6:	mov    DWORD PTR [esp+0xc],0x0
6400aebe:	call   0x64001ec0
6400aec3:	mov    esi,DWORD PTR [esp+0x14]
6400aec7:	push   eax
6400aec8:	push   esi
6400aec9:	call   0x640022a0
6400aece:	add    esp,0x10
6400aed1:	mov    eax,esi
6400aed3:	pop    esi
6400aed4:	pop    ecx
6400aed5:	ret    
6400aed6:	int3   
6400aed7:	int3   
6400aed8:	int3   
6400aed9:	int3   
6400aeda:	int3   
6400aedb:	int3   
6400aedc:	int3   
6400aedd:	int3   
6400aede:	int3   
6400aedf:	int3   
6400aee0:	push   ebp
6400aee1:	mov    ebp,esp
6400aee3:	push   0xffffffff
6400aee5:	push   0x64022e40
6400aeea:	mov    eax,fs:0x0
6400aef0:	push   eax
6400aef1:	sub    esp,0x34
6400aef4:	mov    eax,ds:0x64037644
6400aef9:	xor    eax,ebp
6400aefb:	mov    DWORD PTR [ebp-0x10],eax
6400aefe:	push   ebx
6400aeff:	push   esi
6400af00:	push   edi
6400af01:	push   eax
6400af02:	lea    eax,[ebp-0xc]
6400af05:	mov    fs:0x0,eax
6400af0b:	call   DWORD PTR ds:0x6403761c
6400af11:	push   0x1
6400af13:	mov    ebx,eax
6400af15:	lea    eax,[ebp-0x14]
6400af18:	push   0x5
6400af1a:	push   eax
6400af1b:	call   0x640020b0
6400af20:	add    esp,0xc
6400af23:	mov    esi,DWORD PTR [eax]
6400af25:	xor    edi,edi
6400af27:	cmp    esi,edi
6400af29:	mov    DWORD PTR [ebp-0x4],edi
6400af2c:	jne    0x6400af32
6400af2e:	xor    eax,eax
6400af30:	jmp    0x6400af5e
6400af32:	push   esi
6400af33:	call   DWORD PTR ds:0x64024030
6400af39:	add    eax,0x1
6400af3c:	cmp    eax,0x3fffffff
6400af41:	jle    0x6400af47
6400af43:	xor    eax,eax
6400af45:	jmp    0x6400af5e
6400af47:	lea    edi,[eax+eax*1]
6400af4a:	mov    eax,edi
6400af4c:	call   0x64013ce0
6400af51:	mov    eax,esp
6400af53:	push   ebx
6400af54:	push   edi
6400af55:	push   esi
6400af56:	push   eax
6400af57:	call   0x64001000
6400af5c:	xor    edi,edi
6400af5e:	mov    ebx,0xf
6400af63:	mov    ecx,eax
6400af65:	mov    DWORD PTR [ebp-0x18],ebx
6400af68:	mov    DWORD PTR [ebp-0x1c],edi
6400af6b:	mov    BYTE PTR [ebp-0x2c],0x0
6400af6f:	lea    esi,[ecx+0x1]
6400af72:	mov    dl,BYTE PTR [ecx]
6400af74:	add    ecx,0x1
6400af77:	test   dl,dl
6400af79:	jne    0x6400af72
6400af7b:	sub    ecx,esi
6400af7d:	push   ecx
6400af7e:	push   eax
6400af7f:	lea    ecx,[ebp-0x30]
6400af82:	call   0x640033f0
6400af87:	lea    ecx,[ebp-0x30]
6400af8a:	push   ecx
6400af8b:	lea    edx,[ebp-0x40]
6400af8e:	push   edx
6400af8f:	mov    BYTE PTR [ebp-0x4],0x1
6400af93:	call   0x64001b30
6400af98:	mov    esi,DWORD PTR [ebp+0x8]
6400af9b:	mov    ecx,DWORD PTR [eax]
6400af9d:	mov    edx,DWORD PTR [eax+0x4]
6400afa0:	mov    DWORD PTR [esi],ecx
6400afa2:	mov    ecx,DWORD PTR [eax+0x8]
6400afa5:	mov    DWORD PTR [esi+0x4],edx
6400afa8:	mov    edx,DWORD PTR [eax+0xc]
6400afab:	add    esp,0x8
6400afae:	cmp    DWORD PTR [ebp-0x18],0x10
6400afb2:	mov    DWORD PTR [esi+0x8],ecx
6400afb5:	mov    DWORD PTR [esi+0xc],edx
6400afb8:	jb     0x6400afc6
6400afba:	mov    eax,DWORD PTR [ebp-0x2c]
6400afbd:	push   eax
6400afbe:	call   0x64013604
6400afc3:	add    esp,0x4
6400afc6:	mov    eax,DWORD PTR [ebp-0x14]
6400afc9:	add    eax,0xfffffff0
6400afcc:	mov    DWORD PTR [ebp-0x18],ebx
6400afcf:	mov    DWORD PTR [ebp-0x1c],edi
6400afd2:	mov    BYTE PTR [ebp-0x2c],0x0
6400afd6:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400afdd:	lea    ecx,[eax+0xc]
6400afe0:	or     edx,0xffffffff
6400afe3:	lock xadd DWORD PTR [ecx],edx
6400afe7:	dec    edx
6400afe8:	test   edx,edx
6400afea:	jg     0x6400aff6
6400afec:	mov    ecx,DWORD PTR [eax]
6400afee:	mov    edx,DWORD PTR [ecx]
6400aff0:	push   eax
6400aff1:	mov    eax,DWORD PTR [edx+0x4]
6400aff4:	call   eax
6400aff6:	mov    eax,esi
6400aff8:	lea    esp,[ebp-0x50]
6400affb:	mov    ecx,DWORD PTR [ebp-0xc]
6400affe:	mov    DWORD PTR fs:0x0,ecx
6400b005:	pop    ecx
6400b006:	pop    edi
6400b007:	pop    esi
6400b008:	pop    ebx
6400b009:	mov    ecx,DWORD PTR [ebp-0x10]
6400b00c:	xor    ecx,ebp
6400b00e:	call   0x64013cc6
6400b013:	mov    esp,ebp
6400b015:	pop    ebp
6400b016:	ret    
6400b017:	int3   
6400b018:	int3   
6400b019:	int3   
6400b01a:	int3   
6400b01b:	int3   
6400b01c:	int3   
6400b01d:	int3   
6400b01e:	int3   
6400b01f:	int3   
6400b020:	sub    esp,0x1bc
6400b026:	mov    eax,ds:0x64037644
6400b02b:	xor    eax,esp
6400b02d:	mov    DWORD PTR [esp+0x1b8],eax
6400b034:	push   esi
6400b035:	lea    eax,[esp+0x2c]
6400b039:	push   eax
6400b03a:	push   0x202
6400b03f:	call   DWORD PTR ds:0x640241f4
6400b045:	lea    ecx,[esp+0xc]
6400b049:	push   ecx
6400b04a:	call   0x6400aee0
6400b04f:	mov    edx,DWORD PTR [eax]
6400b051:	mov    DWORD PTR [esp+0x20],edx
6400b055:	mov    ecx,DWORD PTR [eax+0x4]
6400b058:	mov    DWORD PTR [esp+0x24],ecx
6400b05c:	mov    edx,DWORD PTR [eax+0x8]
6400b05f:	add    esp,0x4
6400b062:	mov    DWORD PTR [esp+0x24],edx
6400b066:	mov    eax,DWORD PTR [eax+0xc]
6400b069:	lea    ecx,[esp+0x1c]
6400b06d:	push   ecx
6400b06e:	mov    DWORD PTR [esp+0x2c],eax
6400b072:	call   0x6400b498
6400b077:	lea    edx,[esp+0x4]
6400b07b:	push   edx
6400b07c:	call   0x6400aeb0
6400b081:	push   0x0
6400b083:	lea    eax,[esp+0x10]
6400b087:	push   0x1
6400b089:	push   eax
6400b08a:	call   0x64006960
6400b08f:	mov    esi,DWORD PTR [esp+0x18]
6400b093:	add    esp,0x10
6400b096:	cmp    DWORD PTR [esi-0x4],0x1
6400b09a:	jle    0x6400b0ad
6400b09c:	mov    ecx,DWORD PTR [esi-0xc]
6400b09f:	push   ecx
6400b0a0:	lea    ecx,[esp+0xc]
6400b0a4:	call   0x64003780
6400b0a9:	mov    esi,DWORD PTR [esp+0x8]
6400b0ad:	mov    eax,DWORD PTR [esp+0x4]
6400b0b1:	cmp    DWORD PTR [eax-0x4],0x1
6400b0b5:	jle    0x6400b0c8
6400b0b7:	mov    edx,DWORD PTR [eax-0xc]
6400b0ba:	push   edx
6400b0bb:	lea    ecx,[esp+0x8]
6400b0bf:	call   0x64003780
6400b0c4:	mov    eax,DWORD PTR [esp+0x4]
6400b0c8:	lea    ecx,[esp+0x1c]
6400b0cc:	push   ecx
6400b0cd:	push   0x1
6400b0cf:	push   0xc
6400b0d1:	push   esi
6400b0d2:	push   eax
6400b0d3:	call   0x6400b492
6400b0d8:	mov    esi,eax
6400b0da:	call   DWORD PTR ds:0x640241f8
6400b0e0:	mov    eax,DWORD PTR [esp+0x8]
6400b0e4:	add    eax,0xfffffff0
6400b0e7:	lea    edx,[eax+0xc]
6400b0ea:	or     ecx,0xffffffff
6400b0ed:	lock xadd DWORD PTR [edx],ecx
6400b0f1:	dec    ecx
6400b0f2:	test   ecx,ecx
6400b0f4:	jg     0x6400b100
6400b0f6:	mov    ecx,DWORD PTR [eax]
6400b0f8:	mov    edx,DWORD PTR [ecx]
6400b0fa:	push   eax
6400b0fb:	mov    eax,DWORD PTR [edx+0x4]
6400b0fe:	call   eax
6400b100:	mov    eax,DWORD PTR [esp+0x4]
6400b104:	add    eax,0xfffffff0
6400b107:	lea    ecx,[eax+0xc]
6400b10a:	or     edx,0xffffffff
6400b10d:	lock xadd DWORD PTR [ecx],edx
6400b111:	dec    edx
6400b112:	test   edx,edx
6400b114:	jg     0x6400b120
6400b116:	mov    ecx,DWORD PTR [eax]
6400b118:	mov    edx,DWORD PTR [ecx]
6400b11a:	push   eax
6400b11b:	mov    eax,DWORD PTR [edx+0x4]
6400b11e:	call   eax
6400b120:	mov    ecx,DWORD PTR [esp+0x1bc]
6400b127:	mov    eax,esi
6400b129:	pop    esi
6400b12a:	xor    ecx,esp
6400b12c:	call   0x64013cc6
6400b131:	add    esp,0x1bc
6400b137:	ret    
6400b138:	int3   
6400b139:	int3   
6400b13a:	int3   
6400b13b:	int3   
6400b13c:	int3   
6400b13d:	int3   
6400b13e:	int3   
6400b13f:	int3   
6400b140:	sub    esp,0x1b4
6400b146:	mov    eax,ds:0x64037644
6400b14b:	xor    eax,esp
6400b14d:	mov    DWORD PTR [esp+0x1b0],eax
6400b154:	push   esi
6400b155:	lea    eax,[esp+0x24]
6400b159:	push   eax
6400b15a:	push   0x202
6400b15f:	call   DWORD PTR ds:0x640241f4
6400b165:	lea    ecx,[esp+0x4]
6400b169:	push   ecx
6400b16a:	call   0x6400aee0
6400b16f:	mov    edx,DWORD PTR [eax]
6400b171:	mov    DWORD PTR [esp+0x18],edx
6400b175:	mov    ecx,DWORD PTR [eax+0x4]
6400b178:	mov    DWORD PTR [esp+0x1c],ecx
6400b17c:	mov    edx,DWORD PTR [eax+0x8]
6400b17f:	add    esp,0x4
6400b182:	mov    DWORD PTR [esp+0x1c],edx
6400b186:	mov    eax,DWORD PTR [eax+0xc]
6400b189:	lea    ecx,[esp+0x14]
6400b18d:	push   ecx
6400b18e:	mov    DWORD PTR [esp+0x24],eax
6400b192:	call   0x6400b498
6400b197:	mov    esi,eax
6400b199:	call   DWORD PTR ds:0x640241f8
6400b19f:	mov    ecx,DWORD PTR [esp+0x1b4]
6400b1a6:	mov    eax,esi
6400b1a8:	pop    esi
6400b1a9:	xor    ecx,esp
6400b1ab:	call   0x64013cc6
6400b1b0:	add    esp,0x1b4
6400b1b6:	ret    
6400b1b7:	int3   
6400b1b8:	int3   
6400b1b9:	int3   
6400b1ba:	int3   
6400b1bb:	int3   
6400b1bc:	int3   
6400b1bd:	int3   
6400b1be:	int3   
6400b1bf:	int3   
6400b1c0:	mov    eax,DWORD PTR [esp+0xc]
6400b1c4:	push   eax
6400b1c5:	lea    ecx,[esp+0x10]
6400b1c9:	call   0x64002b00
6400b1ce:	lea    ecx,[esp+0xc]
6400b1d2:	push   0x640242ac
6400b1d7:	push   ecx
6400b1d8:	call   0x64002d70
6400b1dd:	add    esp,0x8
6400b1e0:	test   al,al
6400b1e2:	je     0x6400b1eb
6400b1e4:	call   0x6400b140
6400b1e9:	jmp    0x6400b1f0
6400b1eb:	call   0x6400b020
6400b1f0:	push   0x0
6400b1f2:	call   DWORD PTR ds:0x64024034
6400b1f8:	int3   
6400b1f9:	int3   
6400b1fa:	int3   
6400b1fb:	int3   
6400b1fc:	int3   
6400b1fd:	int3   
6400b1fe:	int3   
6400b1ff:	int3   
6400b200:	cmp    BYTE PTR ds:0x64038cd4,0x0
6400b207:	jne    0x6400b227
6400b209:	mov    BYTE PTR ds:0x64038cd4,0x1
6400b210:	call   0x640020f0
6400b215:	push   eax
6400b216:	call   0x64006de0
6400b21b:	add    esp,0x4
6400b21e:	test   al,al
6400b220:	jne    0x6400b227
6400b222:	xor    eax,eax
6400b224:	ret    0xc
6400b227:	jmp    0x640142a9
6400b22c:	int3   
6400b22d:	int3   
6400b22e:	int3   
6400b22f:	int3   
6400b230:	push   ebp
6400b231:	mov    ebp,esp
6400b233:	push   0xffffffff
6400b235:	push   0x64022e88
6400b23a:	mov    eax,fs:0x0
6400b240:	push   eax
6400b241:	sub    esp,0x38
6400b244:	mov    eax,ds:0x64037644
6400b249:	xor    eax,ebp
6400b24b:	mov    DWORD PTR [ebp-0x14],eax
6400b24e:	push   ebx
6400b24f:	push   esi
6400b250:	push   edi
6400b251:	push   eax
6400b252:	lea    eax,[ebp-0xc]
6400b255:	mov    fs:0x0,eax
6400b25b:	mov    DWORD PTR [ebp-0x10],esp
6400b25e:	push   0x1
6400b260:	xor    esi,esi
6400b262:	push   0x1
6400b264:	lea    ecx,[ebp-0x44]
6400b267:	mov    DWORD PTR [ebp-0x4],esi
6400b26a:	call   0x64006fe0
6400b26f:	mov    BYTE PTR [ebp-0x4],0x1
6400b273:	call   DWORD PTR ds:0x6402403c
6400b279:	push   eax
6400b27a:	call   0x640028e0
6400b27f:	movzx  eax,ax
6400b282:	add    esp,0x4
6400b285:	push   eax
6400b286:	lea    eax,[ebp-0x30]
6400b289:	push   eax
6400b28a:	lea    ecx,[ebp-0x44]
6400b28d:	call   0x64007270
6400b292:	cmp    DWORD PTR [ebp-0x1c],esi
6400b295:	mov    bl,0x2
6400b297:	mov    BYTE PTR [ebp-0x4],bl
6400b29a:	jne    0x6400b2ad
6400b29c:	push   0x6402bd90
6400b2a1:	lea    ecx,[ebp-0x38]
6400b2a4:	push   ecx
6400b2a5:	mov    DWORD PTR [ebp-0x38],esi
6400b2a8:	call   0x64013832
6400b2ad:	call   DWORD PTR ds:0x6403761c
6400b2b3:	lea    edx,[ebp-0x34]
6400b2b6:	push   0x1
6400b2b8:	push   edx
6400b2b9:	call   0x640025c0
6400b2be:	add    esp,0x8
6400b2c1:	mov    esi,eax
6400b2c3:	mov    eax,DWORD PTR [esi]
6400b2c5:	mov    edi,0x10
6400b2ca:	sub    eax,edi
6400b2cc:	cmp    DWORD PTR [eax+0xc],0x1
6400b2d0:	mov    BYTE PTR [ebp-0x4],0x3
6400b2d4:	jle    0x6400b2e1
6400b2d6:	mov    eax,DWORD PTR [eax+0x4]
6400b2d9:	push   eax
6400b2da:	mov    ecx,esi
6400b2dc:	call   0x64003780
6400b2e1:	cmp    DWORD PTR [ebp-0x18],edi
6400b2e4:	mov    esi,DWORD PTR [esi]
6400b2e6:	mov    eax,DWORD PTR [ebp-0x2c]
6400b2e9:	jae    0x6400b2ee
6400b2eb:	lea    eax,[ebp-0x2c]
6400b2ee:	push   esi
6400b2ef:	push   eax
6400b2f0:	call   DWORD PTR ds:0x64024038
6400b2f6:	push   eax
6400b2f7:	call   0x64009490
6400b2fc:	mov    eax,DWORD PTR [ebp-0x34]
6400b2ff:	add    eax,0xfffffff0
6400b302:	add    esp,0xc
6400b305:	mov    BYTE PTR [ebp-0x4],bl
6400b308:	lea    ecx,[eax+0xc]
6400b30b:	or     edx,0xffffffff
6400b30e:	lock xadd DWORD PTR [ecx],edx
6400b312:	dec    edx
6400b313:	test   edx,edx
6400b315:	jg     0x6400b321
6400b317:	mov    ecx,DWORD PTR [eax]
6400b319:	mov    edx,DWORD PTR [ecx]
6400b31b:	push   eax
6400b31c:	mov    eax,DWORD PTR [edx+0x4]
6400b31f:	call   eax
6400b321:	cmp    DWORD PTR [ebp-0x18],edi
6400b324:	jb     0x6400b332
6400b326:	mov    ecx,DWORD PTR [ebp-0x2c]
6400b329:	push   ecx
6400b32a:	call   0x64013604
6400b32f:	add    esp,0x4
6400b332:	lea    ecx,[ebp-0x44]
6400b335:	mov    DWORD PTR [ebp-0x18],0xf
6400b33c:	mov    DWORD PTR [ebp-0x1c],0x0
6400b343:	mov    BYTE PTR [ebp-0x2c],0x0
6400b347:	mov    BYTE PTR [ebp-0x4],0x0
6400b34b:	call   0x64007000
6400b350:	mov    al,0x1
6400b352:	jmp    0x6400b35c
6400b354:	mov    eax,0x6400b35a
6400b359:	ret    
6400b35a:	xor    al,al
6400b35c:	mov    ecx,DWORD PTR [ebp-0xc]
6400b35f:	mov    DWORD PTR fs:0x0,ecx
6400b366:	pop    ecx
6400b367:	pop    edi
6400b368:	pop    esi
6400b369:	pop    ebx
6400b36a:	mov    ecx,DWORD PTR [ebp-0x14]
6400b36d:	xor    ecx,ebp
6400b36f:	call   0x64013cc6
6400b374:	mov    esp,ebp
6400b376:	pop    ebp
6400b377:	ret    
6400b378:	int3   
6400b379:	int3   
6400b37a:	int3   
6400b37b:	int3   
6400b37c:	int3   
6400b37d:	int3   
6400b37e:	int3   
6400b37f:	int3   
6400b380:	push   esi
6400b381:	push   edi
6400b382:	mov    edi,DWORD PTR ds:0x64024040
6400b388:	xor    esi,esi
6400b38a:	lea    ebx,[ebx+0x0]
6400b390:	call   0x6400b230
6400b395:	test   al,al
6400b397:	jne    0x6400b3a8
6400b399:	push   0xbb8
6400b39e:	call   edi
6400b3a0:	add    esi,0x1
6400b3a3:	cmp    esi,0x32
6400b3a6:	jne    0x6400b390
6400b3a8:	pop    edi
6400b3a9:	xor    eax,eax
6400b3ab:	pop    esi
6400b3ac:	ret    0x4
6400b3af:	int3   
6400b3b0:	sub    esp,0x214
6400b3b6:	mov    eax,ds:0x64037644
6400b3bb:	xor    eax,esp
6400b3bd:	mov    DWORD PTR [esp+0x210],eax
6400b3c4:	push   0x208
6400b3c9:	lea    eax,[esp+0xc]
6400b3cd:	push   eax
6400b3ce:	push   0x0
6400b3d0:	call   DWORD PTR ds:0x64024054
6400b3d6:	test   eax,eax
6400b3d8:	je     0x6400b47d
6400b3de:	lea    ecx,[esp+0x8]
6400b3e2:	push   0x104
6400b3e7:	push   ecx
6400b3e8:	call   0x64014521
6400b3ed:	lea    edx,[esp+0x10]
6400b3f1:	push   0x640243f0
6400b3f6:	push   edx
6400b3f7:	call   0x64013f7c
6400b3fc:	add    esp,0x10
6400b3ff:	test   eax,eax
6400b401:	jne    0x6400b419
6400b403:	lea    eax,[esp+0x8]
6400b407:	push   0x640243d8
6400b40c:	push   eax
6400b40d:	call   0x64013f7c
6400b412:	add    esp,0x8
6400b415:	test   eax,eax
6400b417:	je     0x6400b47d
6400b419:	lea    ecx,[esp]
6400b41c:	push   0x1
6400b41e:	push   ecx
6400b41f:	call   0x64002100
6400b424:	mov    eax,DWORD PTR [eax]
6400b426:	add    esp,0x8
6400b429:	lea    edx,[esp+0x4]
6400b42d:	push   edx
6400b42e:	push   eax
6400b42f:	push   0x0
6400b431:	call   DWORD PTR ds:0x64024050
6400b437:	mov    eax,DWORD PTR [esp]
6400b43a:	add    eax,0xfffffff0
6400b43d:	lea    ecx,[eax+0xc]
6400b440:	or     edx,0xffffffff
6400b443:	lock xadd DWORD PTR [ecx],edx
6400b447:	dec    edx
6400b448:	test   edx,edx
6400b44a:	jg     0x6400b456
6400b44c:	mov    ecx,DWORD PTR [eax]
6400b44e:	mov    edx,DWORD PTR [ecx]
6400b450:	push   eax
6400b451:	mov    eax,DWORD PTR [edx+0x4]
6400b454:	call   eax
6400b456:	lea    ecx,[esp+0x8]
6400b45a:	push   ecx
6400b45b:	call   DWORD PTR ds:0x6402404c
6400b461:	push   eax
6400b462:	call   DWORD PTR ds:0x64024048
6400b468:	push   0x0
6400b46a:	push   0x0
6400b46c:	push   0x0
6400b46e:	push   0x6400b380
6400b473:	push   0x0
6400b475:	push   0x0
6400b477:	call   DWORD PTR ds:0x64024044
6400b47d:	mov    ecx,DWORD PTR [esp+0x210]
6400b484:	xor    ecx,esp
6400b486:	call   0x64013cc6
6400b48b:	add    esp,0x214
6400b491:	ret    
6400b492:	jmp    DWORD PTR ds:0x640241f0
6400b498:	jmp    DWORD PTR ds:0x640241ec
6400b49e:	int3   
6400b49f:	int3   
6400b4a0:	push   edi
6400b4a1:	mov    edi,DWORD PTR [esp+0x14]
6400b4a5:	test   edi,edi
6400b4a7:	jne    0x6400b4ae
6400b4a9:	lea    eax,[edi+0x1]
6400b4ac:	pop    edi
6400b4ad:	ret    
6400b4ae:	mov    eax,DWORD PTR [esp+0x8]
6400b4b2:	test   eax,eax
6400b4b4:	push   esi
6400b4b5:	mov    DWORD PTR [edi],0x0
6400b4bb:	je     0x6400b50d
6400b4bd:	mov    esi,DWORD PTR [eax+0x14]
6400b4c0:	test   esi,esi
6400b4c2:	jl     0x6400b50d
6400b4c4:	mov    ecx,DWORD PTR [eax+0x18]
6400b4c7:	test   ecx,ecx
6400b4c9:	je     0x6400b4d5
6400b4cb:	cmp    ecx,0x1
6400b4ce:	je     0x6400b4d5
6400b4d0:	cmp    ecx,0x2
6400b4d3:	jne    0x6400b50d
6400b4d5:	cmp    DWORD PTR [eax+0x10],0x0
6400b4d9:	je     0x6400b50d
6400b4db:	mov    ecx,DWORD PTR [esp+0x10]
6400b4df:	test   ecx,ecx
6400b4e1:	je     0x6400b50d
6400b4e3:	mov    edx,DWORD PTR [eax+0x1c]
6400b4e6:	and    edx,0x3
6400b4e9:	cmp    dl,0x3
6400b4ec:	je     0x6400b50d
6400b4ee:	test   esi,esi
6400b4f0:	jne    0x6400b4f8
6400b4f2:	lea    eax,[esi+0x1]
6400b4f5:	pop    esi
6400b4f6:	pop    edi
6400b4f7:	ret    
6400b4f8:	mov    edx,DWORD PTR [esp+0x14]
6400b4fc:	push   edi
6400b4fd:	push   edx
6400b4fe:	push   ecx
6400b4ff:	push   0x0
6400b501:	push   eax
6400b502:	call   0x6400ba10
6400b507:	add    esp,0x14
6400b50a:	pop    esi
6400b50b:	pop    edi
6400b50c:	ret    
6400b50d:	pop    esi
6400b50e:	mov    eax,0x3
6400b513:	pop    edi
6400b514:	ret    
6400b515:	int3   
6400b516:	int3   
6400b517:	int3   
6400b518:	int3   
6400b519:	int3   
6400b51a:	int3   
6400b51b:	int3   
6400b51c:	int3   
6400b51d:	int3   
6400b51e:	int3   
6400b51f:	int3   
6400b520:	test   DWORD PTR [esp+0x4],0x4000
6400b528:	je     0x6400b531
6400b52a:	mov    eax,DWORD PTR [eax*4+0x6402e00c]
6400b531:	ret    
6400b532:	int3   
6400b533:	int3   
6400b534:	int3   
6400b535:	int3   
6400b536:	int3   
6400b537:	int3   
6400b538:	int3   
6400b539:	int3   
6400b53a:	int3   
6400b53b:	int3   
6400b53c:	int3   
6400b53d:	int3   
6400b53e:	int3   
6400b53f:	int3   
6400b540:	test   ecx,0x2000
6400b546:	je     0x6400b550
6400b548:	mov    eax,DWORD PTR [eax*4+0x6402e018]
6400b54f:	ret    
6400b550:	cmp    eax,0x2
6400b553:	jne    0x6400b57d
6400b555:	and    edx,0x3000000
6400b55b:	cmp    edx,0x1000000
6400b561:	je     0x6400b578
6400b563:	test   ecx,0x2000000
6400b569:	je     0x6400b572
6400b56b:	test   BYTE PTR [esp+0x4],0x8
6400b570:	jne    0x6400b578
6400b572:	mov    eax,0x1
6400b577:	ret    
6400b578:	mov    eax,0x2
6400b57d:	ret    
6400b57e:	int3   
6400b57f:	int3   
6400b580:	sub    esp,0x18
6400b583:	mov    edx,DWORD PTR [ebx+0x10]
6400b586:	push   ebp
6400b587:	mov    ebp,DWORD PTR [esp+0x20]
6400b58b:	mov    ecx,DWORD PTR [ebp+0x28]
6400b58e:	push   esi
6400b58f:	xor    eax,eax
6400b591:	push   ebp
6400b592:	push   ebx
6400b593:	mov    DWORD PTR [esp+0x10],eax
6400b597:	mov    DWORD PTR [esp+0x1c],ecx
6400b59b:	mov    DWORD PTR [esp+0x24],edx
6400b59f:	mov    BYTE PTR [esp+0x2c],al
6400b5a3:	mov    DWORD PTR [esp+0x20],eax
6400b5a7:	call   0x6400dfd0
6400b5ac:	mov    esi,eax
6400b5ae:	add    esp,0x8
6400b5b1:	test   esi,esi
6400b5b3:	je     0x6400b7b0
6400b5b9:	cmp    DWORD PTR [ebp+0x18],0x1
6400b5bd:	jne    0x6400b5e9
6400b5bf:	mov    eax,DWORD PTR [ebp+0x0]
6400b5c2:	test   eax,0x2000
6400b5c7:	je     0x6400b5e9
6400b5c9:	cmp    DWORD PTR [ebp+0x20],0x0
6400b5cd:	jne    0x6400b5e9
6400b5cf:	test   BYTE PTR [esp+0x14],0x8
6400b5d4:	je     0x6400b5e9
6400b5d6:	and    eax,0xffffdfff
6400b5db:	push   0x3
6400b5dd:	push   ebp
6400b5de:	mov    DWORD PTR [ebp+0x0],eax
6400b5e1:	call   0x6400d920
6400b5e6:	add    esp,0x8
6400b5e9:	mov    eax,DWORD PTR [ebx+0x18]
6400b5ec:	cmp    eax,0x2
6400b5ef:	jne    0x6400b602
6400b5f1:	test   DWORD PTR [esi+0x8],0x800000
6400b5f8:	jne    0x6400b7b0
6400b5fe:	cmp    eax,eax
6400b600:	je     0x6400b60f
6400b602:	test   DWORD PTR [esi+0x8],0x8000000
6400b609:	jne    0x6400b7b0
6400b60f:	mov    ecx,DWORD PTR [esi+0x8]
6400b612:	test   cl,0x1
6400b615:	je     0x6400b661
6400b617:	not    ecx
6400b619:	test   ecx,0x40000000
6400b61f:	je     0x6400b62f
6400b621:	add    DWORD PTR [ebx+0x10],0x1
6400b625:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b629:	js     0x6400b7b0
6400b62f:	mov    ecx,DWORD PTR [ebx+0x10]
6400b632:	movzx  edx,BYTE PTR [ecx]
6400b635:	mov    ecx,DWORD PTR [esi+0x8]
6400b638:	test   ecx,0x10000000
6400b63e:	mov    DWORD PTR [esp+0x8],edx
6400b642:	je     0x6400b64d
6400b644:	test   dl,0x38
6400b647:	jne    0x6400b7b0
6400b64d:	test   ecx,0x100000
6400b653:	je     0x6400b661
6400b655:	cmp    edx,0xc0
6400b65b:	jb     0x6400b7b0
6400b661:	mov    edx,DWORD PTR [esp+0x14]
6400b665:	add    DWORD PTR [ebx+0x10],0x1
6400b669:	mov    ecx,DWORD PTR [ebp+0x0]
6400b66c:	push   edx
6400b66d:	mov    edx,DWORD PTR [esi+0x8]
6400b670:	call   0x6400b540
6400b675:	mov    DWORD PTR [esp+0x14],eax
6400b679:	mov    eax,ecx
6400b67b:	push   eax
6400b67c:	mov    eax,DWORD PTR [ebx+0x18]
6400b67f:	call   0x6400b520
6400b684:	push   0x40
6400b686:	push   0x0
6400b688:	push   edi
6400b689:	mov    DWORD PTR [esp+0x20],eax
6400b68d:	call   0x64015120
6400b692:	mov    BYTE PTR [edi+0xd],0xff
6400b696:	mov    al,BYTE PTR [esi+0x3]
6400b699:	add    esp,0x14
6400b69c:	test   al,al
6400b69e:	je     0x6400b76a
6400b6a4:	mov    edx,DWORD PTR [esp+0xc]
6400b6a8:	lea    ecx,[esp+0x18]
6400b6ac:	push   ecx
6400b6ad:	mov    ecx,DWORD PTR [esp+0x14]
6400b6b1:	push   edx
6400b6b2:	mov    edx,DWORD PTR [esp+0x10]
6400b6b6:	push   ecx
6400b6b7:	push   ebp
6400b6b8:	push   edx
6400b6b9:	push   0x0
6400b6bb:	movzx  eax,al
6400b6be:	push   eax
6400b6bf:	push   esi
6400b6c0:	push   edi
6400b6c1:	push   ebx
6400b6c2:	call   0x6400c730
6400b6c7:	add    esp,0x28
6400b6ca:	test   eax,eax
6400b6cc:	je     0x6400b7b0
6400b6d2:	mov    al,BYTE PTR [esi+0x2]
6400b6d5:	test   al,al
6400b6d7:	je     0x6400b76a
6400b6dd:	mov    ecx,DWORD PTR [esp+0xc]
6400b6e1:	mov    edx,DWORD PTR [esp+0x10]
6400b6e5:	push   0x0
6400b6e7:	push   ecx
6400b6e8:	mov    ecx,DWORD PTR [esp+0x10]
6400b6ec:	push   edx
6400b6ed:	push   ebp
6400b6ee:	push   ecx
6400b6ef:	push   0x1
6400b6f1:	movzx  edx,al
6400b6f4:	push   edx
6400b6f5:	push   esi
6400b6f6:	push   edi
6400b6f7:	push   ebx
6400b6f8:	call   0x6400c730
6400b6fd:	add    esp,0x28
6400b700:	test   eax,eax
6400b702:	je     0x6400b7b0
6400b708:	test   DWORD PTR [esi+0x8],0x20000
6400b70f:	je     0x6400b76a
6400b711:	mov    eax,DWORD PTR [esp+0xc]
6400b715:	mov    ecx,DWORD PTR [esp+0x10]
6400b719:	mov    edx,DWORD PTR [esp+0x8]
6400b71d:	push   0x0
6400b71f:	push   eax
6400b720:	movzx  eax,BYTE PTR [esi+0x10]
6400b724:	push   ecx
6400b725:	push   ebp
6400b726:	push   edx
6400b727:	push   0x2
6400b729:	push   eax
6400b72a:	push   esi
6400b72b:	push   edi
6400b72c:	push   ebx
6400b72d:	call   0x6400c730
6400b732:	add    esp,0x28
6400b735:	test   eax,eax
6400b737:	je     0x6400b7b0
6400b739:	test   DWORD PTR [esi+0x8],0x40000
6400b740:	je     0x6400b76a
6400b742:	mov    ecx,DWORD PTR [esp+0xc]
6400b746:	mov    edx,DWORD PTR [esp+0x10]
6400b74a:	mov    eax,DWORD PTR [esp+0x8]
6400b74e:	push   0x0
6400b750:	push   ecx
6400b751:	movzx  ecx,BYTE PTR [esi+0x11]
6400b755:	push   edx
6400b756:	push   ebp
6400b757:	push   eax
6400b758:	push   0x3
6400b75a:	push   ecx
6400b75b:	push   esi
6400b75c:	push   edi
6400b75d:	push   ebx
6400b75e:	call   0x6400c730
6400b763:	add    esp,0x28
6400b766:	test   eax,eax
6400b768:	je     0x6400b7b0
6400b76a:	test   DWORD PTR [esi+0x8],0x200000
6400b771:	je     0x6400b782
6400b773:	push   ebx
6400b774:	call   0x6400e2c0
6400b779:	mov    esi,eax
6400b77b:	add    esp,0x4
6400b77e:	test   esi,esi
6400b780:	je     0x6400b7b0
6400b782:	test   DWORD PTR [esi+0x8],0x400000
6400b789:	je     0x6400b7a5
6400b78b:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b78f:	js     0x6400b7b0
6400b791:	mov    eax,DWORD PTR [ebx+0x10]
6400b794:	mov    cl,BYTE PTR [eax]
6400b796:	add    eax,0x1
6400b799:	cmp    cl,0x8
6400b79c:	mov    BYTE PTR [esp+0x24],cl
6400b7a0:	mov    DWORD PTR [ebx+0x10],eax
6400b7a3:	jae    0x6400b7b0
6400b7a5:	mov    edx,DWORD PTR [ebx+0x10]
6400b7a8:	sub    edx,DWORD PTR [ebp+0x8]
6400b7ab:	cmp    edx,0xf
6400b7ae:	jle    0x6400b7f5
6400b7b0:	push   0x40
6400b7b2:	push   0x0
6400b7b4:	push   edi
6400b7b5:	call   0x64015120
6400b7ba:	mov    eax,DWORD PTR [esp+0x28]
6400b7be:	mov    BYTE PTR [edi+0xd],0xff
6400b7c2:	mov    BYTE PTR [edi+0x8],0x1
6400b7c6:	add    esp,0xc
6400b7c9:	mov    DWORD PTR [ebp+0x4],0x0
6400b7d0:	cmp    BYTE PTR [eax],0x9b
6400b7d3:	jne    0x6400b7ea
6400b7d5:	or     BYTE PTR [edi+0x3a],0x8
6400b7d9:	pop    esi
6400b7da:	mov    WORD PTR [edi+0x10],0x3db
6400b7e0:	mov    eax,0x1
6400b7e5:	pop    ebp
6400b7e6:	add    esp,0x18
6400b7e9:	ret    
6400b7ea:	pop    esi
6400b7eb:	mov    eax,0x3
6400b7f0:	pop    ebp
6400b7f1:	add    esp,0x18
6400b7f4:	ret    
6400b7f5:	mov    edx,0x1
6400b7fa:	cmp    DWORD PTR [esp+0x18],edx
6400b7fe:	jne    0x6400b810
6400b800:	test   BYTE PTR [esi+0x8],0x10
6400b804:	je     0x6400b810
6400b806:	or     DWORD PTR [ebp+0x4],0x10
6400b80a:	or     WORD PTR [edi+0xa],dx
6400b80e:	jmp    0x6400b83b
6400b810:	mov    eax,DWORD PTR [esi+0x8]
6400b813:	test   al,0x20
6400b815:	je     0x6400b828
6400b817:	test   BYTE PTR [ebp+0x0],0x20
6400b81b:	je     0x6400b828
6400b81d:	or     DWORD PTR [ebp+0x4],0x20
6400b821:	or     WORD PTR [edi+0xa],0x2
6400b826:	jmp    0x6400b83b
6400b828:	test   al,0x40
6400b82a:	je     0x6400b83b
6400b82c:	test   BYTE PTR [ebp+0x0],0x40
6400b830:	je     0x6400b83b
6400b832:	or     DWORD PTR [ebp+0x4],0x40
6400b836:	or     WORD PTR [edi+0xa],0x4
6400b83b:	mov    eax,DWORD PTR [esi+0x8]
6400b83e:	mov    ecx,eax
6400b840:	and    ecx,0x14000
6400b846:	cmp    ecx,0x14000
6400b84c:	jne    0x6400b87f
6400b84e:	mov    eax,DWORD PTR [esp+0xc]
6400b852:	or     DWORD PTR [ebp+0x4],0x4000
6400b859:	test   eax,eax
6400b85b:	je     0x6400b95b
6400b861:	cmp    eax,edx
6400b863:	jne    0x6400b872
6400b865:	mov    ax,WORD PTR [esi+0x12]
6400b869:	mov    WORD PTR [edi+0x10],ax
6400b86d:	jmp    0x6400b963
6400b872:	mov    cx,WORD PTR [esi+0x14]
6400b876:	mov    WORD PTR [edi+0x10],cx
6400b87a:	jmp    0x6400b963
6400b87f:	mov    ecx,eax
6400b881:	and    ecx,0xc000
6400b887:	cmp    ecx,0xc000
6400b88d:	jne    0x6400b8a3
6400b88f:	mov    dx,WORD PTR [esi+0x4]
6400b893:	mov    WORD PTR [edi+0x10],dx
6400b897:	or     DWORD PTR [ebp+0x4],0x4000
6400b89e:	jmp    0x6400b963
6400b8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400b8a7:	test   ecx,ecx
6400b8a9:	jne    0x6400b8cd
6400b8ab:	test   eax,0x10000
6400b8b0:	je     0x6400b8c0
6400b8b2:	test   eax,0x1000008
6400b8b7:	jne    0x6400b8c0
6400b8b9:	or     DWORD PTR [ebp+0x4],0x2000
6400b8c0:	mov    ax,WORD PTR [esi+0x4]
6400b8c4:	mov    WORD PTR [edi+0x10],ax
6400b8c8:	jmp    0x6400b963
6400b8cd:	cmp    ecx,edx
6400b8cf:	jne    0x6400b922
6400b8d1:	or     WORD PTR [edi+0xa],0x100
6400b8d7:	test   DWORD PTR [esi+0x8],0x10000
6400b8de:	je     0x6400b95b
6400b8e0:	or     DWORD PTR [ebp+0x4],0x2000
6400b8e7:	mov    eax,DWORD PTR [esi+0x8]
6400b8ea:	test   eax,0x80000
6400b8ef:	je     0x6400b90b
6400b8f1:	cmp    DWORD PTR [esp+0x8],0xc0
6400b8f9:	jb     0x6400b905
6400b8fb:	mov    cx,WORD PTR [esi+0x4]
6400b8ff:	mov    WORD PTR [edi+0x10],cx
6400b903:	jmp    0x6400b963
6400b905:	mov    dx,WORD PTR [esi+0x12]
6400b909:	jmp    0x6400b95f
6400b90b:	test   eax,0x400000
6400b910:	je     0x6400b951
6400b912:	movzx  ax,BYTE PTR [esp+0x24]
6400b918:	add    ax,WORD PTR [esi+0x4]
6400b91c:	mov    WORD PTR [edi+0x10],ax
6400b920:	jmp    0x6400b963
6400b922:	or     WORD PTR [edi+0xa],0x200
6400b928:	mov    eax,DWORD PTR [esi+0x8]
6400b92b:	test   eax,0x4010000
6400b930:	je     0x6400b95b
6400b932:	test   eax,0x4000000
6400b937:	je     0x6400b951
6400b939:	test   BYTE PTR [esp+0x14],0x8
6400b93e:	je     0x6400b951
6400b940:	or     DWORD PTR [ebp+0x4],0x2000000
6400b947:	mov    ax,WORD PTR [esi+0x14]
6400b94b:	mov    WORD PTR [edi+0x10],ax
6400b94f:	jmp    0x6400b963
6400b951:	mov    cx,WORD PTR [esi+0x12]
6400b955:	mov    WORD PTR [edi+0x10],cx
6400b959:	jmp    0x6400b963
6400b95b:	mov    dx,WORD PTR [esi+0x4]
6400b95f:	mov    WORD PTR [edi+0x10],dx
6400b963:	test   DWORD PTR [esi+0x8],0x8000
6400b96a:	je     0x6400b97c
6400b96c:	test   DWORD PTR [ebp+0x0],0x2000
6400b973:	je     0x6400b97c
6400b975:	or     DWORD PTR [ebp+0x4],0x2000
6400b97c:	test   DWORD PTR [esi+0x8],0x20000000
6400b983:	je     0x6400b9a6
6400b985:	mov    eax,DWORD PTR [esi+0xc]
6400b988:	test   al,0x4
6400b98a:	je     0x6400b993
6400b98c:	test   BYTE PTR [esp+0x14],0x8
6400b991:	jne    0x6400b99e
6400b993:	test   al,0x8
6400b995:	je     0x6400b9a6
6400b997:	test   BYTE PTR [esp+0x14],0x10
6400b99c:	je     0x6400b9a6
6400b99e:	mov    ax,WORD PTR [esi+0x12]
6400b9a2:	mov    WORD PTR [edi+0x10],ax
6400b9a6:	mov    eax,DWORD PTR [esp+0xc]
6400b9aa:	and    eax,0x3
6400b9ad:	shl    eax,0xa
6400b9b0:	or     WORD PTR [edi+0xa],ax
6400b9b4:	test   DWORD PTR [esi+0x8],0x80000000
6400b9bb:	movzx  eax,WORD PTR [edi+0xa]
6400b9bf:	je     0x6400b9c8
6400b9c1:	or     eax,0x40
6400b9c4:	mov    WORD PTR [edi+0xa],ax
6400b9c8:	push   ebp
6400b9c9:	call   0x6400d960
6400b9ce:	mov    WORD PTR [edi+0x38],ax
6400b9d2:	mov    cl,BYTE PTR [esi+0x1]
6400b9d5:	add    esp,0x4
6400b9d8:	cmp    BYTE PTR [edi+0xc],0x0
6400b9dc:	mov    BYTE PTR [edi+0x3a],cl
6400b9df:	jne    0x6400b9e5
6400b9e1:	mov    BYTE PTR [edi+0xc],0xff
6400b9e5:	mov    al,BYTE PTR [edi+0xd]
6400b9e8:	cmp    al,0xff
6400b9ea:	je     0x6400b9fb
6400b9ec:	movzx  edx,al
6400b9ef:	mov    ax,WORD PTR [edx*2+0x6402e028]
6400b9f7:	or     WORD PTR [edi+0x3c],ax
6400b9fb:	mov    cl,BYTE PTR [ebx+0x10]
6400b9fe:	sub    cl,BYTE PTR [esp+0x1c]
6400ba02:	pop    esi
6400ba03:	mov    BYTE PTR [edi+0x8],cl
6400ba06:	mov    eax,0x1
6400ba0b:	pop    ebp
6400ba0c:	add    esp,0x18
6400ba0f:	ret    
6400ba10:	sub    esp,0x90
6400ba16:	push   ebx
6400ba17:	push   ebp
6400ba18:	push   esi
6400ba19:	or     eax,0xffffffff
6400ba1c:	push   edi
6400ba1d:	mov    edi,DWORD PTR [esp+0xa4]
6400ba24:	mov    ebp,DWORD PTR [edi]
6400ba26:	mov    ecx,DWORD PTR [edi+0x4]
6400ba29:	mov    ebx,DWORD PTR [edi+0x10]
6400ba2c:	mov    edx,DWORD PTR [edi+0x14]
6400ba2f:	mov    DWORD PTR [esp+0x2c],eax
6400ba33:	mov    DWORD PTR [esp+0x30],eax
6400ba37:	mov    eax,DWORD PTR [edi+0x1c]
6400ba3a:	xor    esi,esi
6400ba3c:	test   al,0x2
6400ba3e:	mov    DWORD PTR [esp+0x1c],ebp
6400ba42:	mov    DWORD PTR [esp+0x20],ecx
6400ba46:	mov    DWORD PTR [esp+0x18],ebx
6400ba4a:	mov    DWORD PTR [esp+0x14],edx
6400ba4e:	je     0x6400ba5a
6400ba50:	mov    DWORD PTR [esp+0x2c],0xffffffff
6400ba58:	jmp    0x6400ba66
6400ba5a:	test   al,0x1
6400ba5c:	je     0x6400ba6a
6400ba5e:	mov    DWORD PTR [esp+0x2c],0xffff
6400ba66:	mov    DWORD PTR [esp+0x30],esi
6400ba6a:	test   edx,edx
6400ba6c:	mov    eax,DWORD PTR [esp+0xb4]
6400ba73:	mov    DWORD PTR [eax],esi
6400ba75:	mov    eax,DWORD PTR [edi+0x18]
6400ba78:	mov    DWORD PTR [esp+0x98],eax
6400ba7f:	mov    DWORD PTR [edi+0x8],ebp
6400ba82:	mov    DWORD PTR [edi+0xc],ecx
6400ba85:	jg     0x6400baa8
6400ba87:	pop    edi
6400ba88:	pop    esi
6400ba89:	pop    ebp
6400ba8a:	mov    eax,0x1
6400ba8f:	pop    ebx
6400ba90:	add    esp,0x90
6400ba96:	ret    
6400ba97:	jmp    0x6400baa0
6400ba99:	lea    esp,[esp+0x0]
6400baa0:	mov    ecx,DWORD PTR [esp+0x20]
6400baa4:	mov    ebp,DWORD PTR [esp+0x1c]
6400baa8:	push   0x2c
6400baaa:	mov    DWORD PTR [esp+0x3c],ecx
6400baae:	lea    ecx,[esp+0x44]
6400bab2:	push   0x0
6400bab4:	push   ecx
6400bab5:	call   0x64015120
6400baba:	mov    edx,DWORD PTR [esp+0xa4]
6400bac1:	or     eax,0xffffffff
6400bac4:	mov    DWORD PTR [esp+0x78],eax
6400bac8:	mov    DWORD PTR [esp+0x7c],eax
6400bacc:	mov    DWORD PTR [esp+0x80],eax
6400bad3:	mov    DWORD PTR [esp+0x84],eax
6400bada:	mov    DWORD PTR [esp+0x88],eax
6400bae1:	mov    DWORD PTR [esp+0x54],ebx
6400bae5:	mov    DWORD PTR [esp+0x58],ebx
6400bae9:	movzx  eax,BYTE PTR [ebx]
6400baec:	push   edx
6400baed:	push   eax
6400baee:	mov    DWORD PTR [esp+0x38],0x0
6400baf6:	call   0x6400d810
6400bafb:	add    esp,0x14
6400bafe:	test   eax,eax
6400bb00:	je     0x6400bc2e
6400bb06:	mov    ecx,DWORD PTR [esp+0x98]
6400bb0d:	mov    eax,DWORD PTR [esp+0x14]
6400bb11:	push   ecx
6400bb12:	lea    edx,[esp+0x44]
6400bb16:	push   edx
6400bb17:	push   eax
6400bb18:	push   ebx
6400bb19:	call   0x6400d9f0
6400bb1e:	mov    ecx,DWORD PTR [esp+0x5c]
6400bb22:	mov    eax,ecx
6400bb24:	sub    eax,DWORD PTR [esp+0x58]
6400bb28:	add    esp,0x10
6400bb2b:	sub    DWORD PTR [esp+0x14],eax
6400bb2f:	mov    DWORD PTR [esp+0x24],eax
6400bb33:	je     0x6400bb3e
6400bb35:	cmp    eax,0xf
6400bb38:	jne    0x6400bc16
6400bb3e:	mov    edx,DWORD PTR [edi+0x1c]
6400bb41:	not    edx
6400bb43:	test   dl,0x4
6400bb46:	je     0x6400bc0b
6400bb4c:	sub    ecx,ebx
6400bb4e:	lea    edx,[ecx+esi*1]
6400bb51:	cmp    edx,DWORD PTR [esp+0xb0]
6400bb58:	ja     0x6400bf31
6400bb5e:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bb62:	jae    0x6400bc02
6400bb68:	mov    edx,DWORD PTR [esp+0xac]
6400bb6f:	mov    edi,esi
6400bb71:	imul   edi,edi,0xa8
6400bb77:	mov    eax,esi
6400bb79:	shl    eax,0x6
6400bb7c:	add    eax,edx
6400bb7e:	add    edi,edx
6400bb80:	add    esi,ecx
6400bb82:	mov    DWORD PTR [esp+0x10],esi
6400bb86:	jmp    0x6400bb94
6400bb88:	jmp    0x6400bb90
6400bb8a:	lea    ebx,[ebx+0x0]
6400bb90:	mov    eax,DWORD PTR [esp+0x28]
6400bb94:	cmp    DWORD PTR [esp+0xa8],0x0
6400bb9c:	mov    esi,edi
6400bb9e:	jne    0x6400bba2
6400bba0:	mov    esi,eax
6400bba2:	push   0x40
6400bba4:	add    eax,0x40
6400bba7:	push   0x0
6400bba9:	push   esi
6400bbaa:	add    edi,0xa8
6400bbb0:	mov    DWORD PTR [esp+0x34],eax
6400bbb4:	call   0x64015120
6400bbb9:	mov    ecx,DWORD PTR [esp+0x38]
6400bbbd:	mov    edx,DWORD PTR [esp+0x3c]
6400bbc1:	and    edx,DWORD PTR [esp+0x44]
6400bbc5:	mov    WORD PTR [esi+0xa],0xffff
6400bbcb:	mov    al,BYTE PTR [ebx]
6400bbcd:	and    ecx,ebp
6400bbcf:	add    esp,0xc
6400bbd2:	add    ebx,0x1
6400bbd5:	add    ebp,0x1
6400bbd8:	adc    DWORD PTR [esp+0x38],0x0
6400bbdd:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bbe1:	mov    BYTE PTR [esi+0x30],al
6400bbe4:	mov    BYTE PTR [esi+0x8],0x1
6400bbe8:	mov    DWORD PTR [esi],ecx
6400bbea:	mov    DWORD PTR [esi+0x4],edx
6400bbed:	jb     0x6400bb90
6400bbef:	mov    eax,DWORD PTR [esp+0x24]
6400bbf3:	mov    esi,DWORD PTR [esp+0x10]
6400bbf7:	mov    ebx,DWORD PTR [esp+0x18]
6400bbfb:	mov    edi,DWORD PTR [esp+0xa4]
6400bc02:	mov    ecx,DWORD PTR [esp+0xb4]
6400bc09:	mov    DWORD PTR [ecx],esi
6400bc0b:	cmp    DWORD PTR [esp+0x14],0x0
6400bc10:	je     0x6400ba87
6400bc16:	add    ebx,eax
6400bc18:	add    DWORD PTR [esp+0x1c],eax
6400bc1c:	mov    DWORD PTR [esp+0x18],ebx
6400bc20:	adc    DWORD PTR [esp+0x20],0x0
6400bc25:	cmp    eax,0xf
6400bc28:	je     0x6400bf16
6400bc2e:	cmp    DWORD PTR [esp+0x98],0x2
6400bc36:	jne    0x6400bc8b
6400bc38:	test   DWORD PTR [esp+0x40],0x2000000
6400bc40:	je     0x6400bc6a
6400bc42:	add    ebx,0xffffffff
6400bc45:	cmp    DWORD PTR [esp+0x54],ebx
6400bc49:	je     0x6400bc6a
6400bc4b:	and    DWORD PTR [esp+0x40],0xfdffffff
6400bc53:	lea    edx,[esp+0x40]
6400bc57:	push   0x0
6400bc59:	push   edx
6400bc5a:	mov    DWORD PTR [esp+0x60],0x0
6400bc62:	call   0x6400d920
6400bc67:	add    esp,0x8
6400bc6a:	test   DWORD PTR [esp+0x40],0x780
6400bc72:	je     0x6400bc8b
6400bc74:	and    DWORD PTR [esp+0x40],0xfffff87f
6400bc7c:	lea    eax,[esp+0x40]
6400bc80:	push   0x2
6400bc82:	push   eax
6400bc83:	call   0x6400d920
6400bc88:	add    esp,0x8
6400bc8b:	lea    eax,[esi+0x1]
6400bc8e:	cmp    eax,DWORD PTR [esp+0xb0]
6400bc95:	ja     0x6400bf31
6400bc9b:	cmp    DWORD PTR [esp+0xa8],0x0
6400bca3:	je     0x6400bcad
6400bca5:	imul   esi,esi,0xa8
6400bcab:	jmp    0x6400bcb0
6400bcad:	shl    esi,0x6
6400bcb0:	add    esi,DWORD PTR [esp+0xac]
6400bcb7:	mov    ecx,DWORD PTR [esp+0x18]
6400bcbb:	mov    edx,DWORD PTR [esp+0x14]
6400bcbf:	mov    DWORD PTR [esp+0x10],eax
6400bcc3:	lea    eax,[esp+0x40]
6400bcc7:	mov    edi,esi
6400bcc9:	push   eax
6400bcca:	lea    ebx,[esp+0x84]
6400bcd1:	mov    DWORD PTR [esp+0x94],ecx
6400bcd8:	mov    DWORD PTR [esp+0x98],edx
6400bcdf:	call   0x6400b580
6400bce4:	mov    ecx,DWORD PTR [esp+0xa8]
6400bceb:	add    esp,0x4
6400bcee:	test   BYTE PTR [ecx+0x1c],0x4
6400bcf2:	mov    DWORD PTR [esp+0x28],eax
6400bcf6:	je     0x6400bd06
6400bcf8:	test   BYTE PTR [edi+0x3a],0x7
6400bcfc:	jne    0x6400bd06
6400bcfe:	mov    DWORD PTR [esp+0x28],0x4
6400bd06:	mov    ecx,DWORD PTR [esp+0x30]
6400bd0a:	and    DWORD PTR [edi+0x2c],ecx
6400bd0d:	mov    eax,DWORD PTR [esp+0x2c]
6400bd11:	and    DWORD PTR [edi+0x28],eax
6400bd14:	mov    esi,ecx
6400bd16:	mov    cl,BYTE PTR [edi+0x8]
6400bd19:	and    esi,DWORD PTR [esp+0x38]
6400bd1d:	movzx  ebx,cl
6400bd20:	sub    DWORD PTR [esp+0x14],ebx
6400bd24:	mov    edx,eax
6400bd26:	and    edx,ebp
6400bd28:	mov    DWORD PTR [edi],edx
6400bd2a:	mov    eax,ebx
6400bd2c:	cdq    
6400bd2d:	add    DWORD PTR [esp+0x1c],eax
6400bd31:	mov    eax,DWORD PTR [esp+0x24]
6400bd35:	mov    DWORD PTR [edi+0x4],esi
6400bd38:	adc    DWORD PTR [esp+0x20],edx
6400bd3c:	mov    edx,DWORD PTR [esp+0x28]
6400bd40:	add    DWORD PTR [esp+0x18],ebx
6400bd44:	add    cl,al
6400bd46:	cmp    edx,0x3
6400bd49:	mov    BYTE PTR [edi+0x8],cl
6400bd4c:	jne    0x6400be39
6400bd52:	mov    ecx,DWORD PTR [esp+0xa4]
6400bd59:	mov    ecx,DWORD PTR [ecx+0x1c]
6400bd5c:	not    ecx
6400bd5e:	test   cl,0x4
6400bd61:	je     0x6400be43
6400bd67:	mov    esi,DWORD PTR [esp+0x10]
6400bd6b:	sub    esi,0x1
6400bd6e:	lea    ecx,[eax+0x1]
6400bd71:	test   ecx,ecx
6400bd73:	mov    DWORD PTR [esp+0x10],esi
6400bd77:	jbe    0x6400be43
6400bd7d:	lea    eax,[eax+esi*1+0x1]
6400bd81:	cmp    eax,DWORD PTR [esp+0xb0]
6400bd88:	ja     0x6400bf31
6400bd8e:	mov    ecx,DWORD PTR [esp+0x4c]
6400bd92:	mov    ebx,DWORD PTR [esp+0x48]
6400bd96:	add    ecx,0x1
6400bd99:	cmp    ebx,ecx
6400bd9b:	mov    DWORD PTR [esp+0x3c],ecx
6400bd9f:	jae    0x6400be43
6400bda5:	mov    edx,DWORD PTR [esp+0xac]
6400bdac:	mov    eax,esi
6400bdae:	imul   esi,esi,0xa8
6400bdb4:	shl    eax,0x6
6400bdb7:	sub    ecx,ebx
6400bdb9:	add    eax,edx
6400bdbb:	add    esi,edx
6400bdbd:	add    DWORD PTR [esp+0x10],ecx
6400bdc1:	jmp    0x6400bdd4
6400bdc3:	jmp    0x6400bdd0
6400bdc5:	lea    esp,[esp+0x0]
6400bdcc:	lea    esp,[esp+0x0]
6400bdd0:	mov    eax,DWORD PTR [esp+0x24]
6400bdd4:	cmp    DWORD PTR [esp+0xa8],0x0
6400bddc:	mov    edi,esi
6400bdde:	jne    0x6400bde2
6400bde0:	mov    edi,eax
6400bde2:	push   0x40
6400bde4:	add    eax,0x40
6400bde7:	push   0x0
6400bde9:	push   edi
6400bdea:	add    esi,0xa8
6400bdf0:	mov    DWORD PTR [esp+0x30],eax
6400bdf4:	call   0x64015120
6400bdf9:	mov    eax,DWORD PTR [esp+0x44]
6400bdfd:	mov    edx,DWORD PTR [esp+0x38]
6400be01:	mov    WORD PTR [edi+0xa],0xffff
6400be07:	mov    cl,BYTE PTR [ebx]
6400be09:	mov    BYTE PTR [edi+0x30],cl
6400be0c:	mov    ecx,DWORD PTR [esp+0x3c]
6400be10:	and    ecx,eax
6400be12:	and    edx,ebp
6400be14:	add    esp,0xc
6400be17:	add    ebx,0x1
6400be1a:	add    ebp,0x1
6400be1d:	adc    eax,0x0
6400be20:	cmp    ebx,DWORD PTR [esp+0x3c]
6400be24:	mov    BYTE PTR [edi+0x8],0x1
6400be28:	mov    DWORD PTR [edi],edx
6400be2a:	mov    DWORD PTR [edi+0x4],ecx
6400be2d:	mov    DWORD PTR [esp+0x38],eax
6400be31:	jb     0x6400bdd0
6400be33:	mov    edx,DWORD PTR [esp+0x28]
6400be37:	jmp    0x6400be43
6400be39:	cmp    edx,0x4
6400be3c:	jne    0x6400be43
6400be3e:	sub    DWORD PTR [esp+0x10],0x1
6400be43:	cmp    edx,0x1
6400be46:	mov    eax,DWORD PTR [esp+0xb4]
6400be4d:	mov    ecx,DWORD PTR [esp+0x10]
6400be51:	mov    DWORD PTR [eax],ecx
6400be53:	mov    ecx,DWORD PTR [esp+0x1c]
6400be57:	mov    eax,DWORD PTR [esp+0xa4]
6400be5e:	mov    DWORD PTR [eax+0x8],ecx
6400be61:	mov    ecx,DWORD PTR [esp+0x20]
6400be65:	mov    DWORD PTR [eax+0xc],ecx
6400be68:	jne    0x6400bf07
6400be6e:	mov    eax,DWORD PTR [eax+0x1c]
6400be71:	test   eax,0x3f8
6400be76:	je     0x6400bf07
6400be7c:	test   al,0x8
6400be7e:	je     0x6400be8f
6400be80:	mov    dl,BYTE PTR [edi+0x3a]
6400be83:	and    dl,0x7
6400be86:	cmp    dl,0x1
6400be89:	je     0x6400ba87
6400be8f:	test   al,0x10
6400be91:	je     0x6400bea2
6400be93:	mov    cl,BYTE PTR [edi+0x3a]
6400be96:	and    cl,0x7
6400be99:	cmp    cl,0x2
6400be9c:	je     0x6400ba87
6400bea2:	test   al,0x20
6400bea4:	je     0x6400beb5
6400bea6:	mov    dl,BYTE PTR [edi+0x3a]
6400bea9:	and    dl,0x7
6400beac:	cmp    dl,0x3
6400beaf:	je     0x6400ba87
6400beb5:	test   al,0x40
6400beb7:	je     0x6400bec8
6400beb9:	mov    cl,BYTE PTR [edi+0x3a]
6400bebc:	and    cl,0x7
6400bebf:	cmp    cl,0x4
6400bec2:	je     0x6400ba87
6400bec8:	test   al,al
6400beca:	jns    0x6400bedb
6400becc:	mov    dl,BYTE PTR [edi+0x3a]
6400becf:	and    dl,0x7
6400bed2:	cmp    dl,0x5
6400bed5:	je     0x6400ba87
6400bedb:	test   eax,0x100
6400bee0:	je     0x6400bef1
6400bee2:	mov    cl,BYTE PTR [edi+0x3a]
6400bee5:	and    cl,0x7
6400bee8:	cmp    cl,0x6
6400beeb:	je     0x6400ba87
6400bef1:	test   eax,0x200
6400bef6:	je     0x6400bf07
6400bef8:	mov    dl,BYTE PTR [edi+0x3a]
6400befb:	and    dl,0x7
6400befe:	cmp    dl,0x7
6400bf01:	je     0x6400ba87
6400bf07:	mov    esi,DWORD PTR [esp+0x10]
6400bf0b:	mov    ebx,DWORD PTR [esp+0x18]
6400bf0f:	mov    edi,DWORD PTR [esp+0xa4]
6400bf16:	cmp    DWORD PTR [esp+0x14],0x0
6400bf1b:	jg     0x6400baa0
6400bf21:	pop    edi
6400bf22:	pop    esi
6400bf23:	pop    ebp
6400bf24:	mov    eax,0x1
6400bf29:	pop    ebx
6400bf2a:	add    esp,0x90
6400bf30:	ret    
6400bf31:	pop    edi
6400bf32:	pop    esi
6400bf33:	pop    ebp
6400bf34:	mov    eax,0x2
6400bf39:	pop    ebx
6400bf3a:	add    esp,0x90
6400bf40:	ret    
6400bf41:	int3   
6400bf42:	int3   
6400bf43:	int3   
6400bf44:	int3   
6400bf45:	int3   
6400bf46:	int3   
6400bf47:	int3   
6400bf48:	int3   
6400bf49:	int3   
6400bf4a:	int3   
6400bf4b:	int3   
6400bf4c:	int3   
6400bf4d:	int3   
6400bf4e:	int3   
6400bf4f:	int3   
6400bf50:	lea    ecx,[eax-0x4]
6400bf53:	cmp    ecx,0x3
6400bf56:	ja     0x6400bf5c
6400bf58:	add    eax,0x3c
6400bf5b:	ret    
6400bf5c:	add    eax,0x30
6400bf5f:	ret    
6400bf60:	mov    cl,BYTE PTR [esp+0x4]
6400bf64:	mov    BYTE PTR [eax],cl
6400bf66:	mov    WORD PTR [eax+0x2],dx
6400bf6a:	ret    0x4
6400bf6d:	int3   
6400bf6e:	int3   
6400bf6f:	int3   
6400bf70:	mov    cl,BYTE PTR [esp+0x4]
6400bf74:	mov    dl,BYTE PTR [esp+0xc]
6400bf78:	mov    BYTE PTR [eax],cl
6400bf7a:	mov    cx,WORD PTR [esp+0x8]
6400bf7f:	mov    BYTE PTR [eax+0x1],dl
6400bf82:	mov    WORD PTR [eax+0x2],cx
6400bf86:	ret    0xc
6400bf89:	int3   
6400bf8a:	int3   
6400bf8b:	int3   
6400bf8c:	int3   
6400bf8d:	int3   
6400bf8e:	int3   
6400bf8f:	int3   
6400bf90:	sub    DWORD PTR [eax+0x14],esi
6400bf93:	jns    0x6400bf98
6400bf95:	xor    eax,eax
6400bf97:	ret    
6400bf98:	lea    edx,[esi-0x1]
6400bf9b:	cmp    edx,0x7
6400bf9e:	ja     0x6400bfe8
6400bfa0:	jmp    DWORD PTR [edx*4+0x6400bff4]
6400bfa7:	mov    edx,DWORD PTR [eax+0x10]
6400bfaa:	mov    dl,BYTE PTR [edx]
6400bfac:	mov    BYTE PTR [ecx],dl
6400bfae:	add    DWORD PTR [eax+0x10],esi
6400bfb1:	mov    eax,0x1
6400bfb6:	ret    
6400bfb7:	mov    edx,DWORD PTR [eax+0x10]
6400bfba:	mov    dx,WORD PTR [edx]
6400bfbd:	mov    WORD PTR [ecx],dx
6400bfc0:	add    DWORD PTR [eax+0x10],esi
6400bfc3:	mov    eax,0x1
6400bfc8:	ret    
6400bfc9:	mov    edx,DWORD PTR [eax+0x10]
6400bfcc:	mov    edx,DWORD PTR [edx]
6400bfce:	mov    DWORD PTR [ecx],edx
6400bfd0:	add    DWORD PTR [eax+0x10],esi
6400bfd3:	mov    eax,0x1
6400bfd8:	ret    
6400bfd9:	mov    edx,DWORD PTR [eax+0x10]
6400bfdc:	push   edi
6400bfdd:	mov    edi,DWORD PTR [edx]
6400bfdf:	mov    DWORD PTR [ecx],edi
6400bfe1:	mov    edx,DWORD PTR [edx+0x4]
6400bfe4:	mov    DWORD PTR [ecx+0x4],edx
6400bfe7:	pop    edi
6400bfe8:	add    DWORD PTR [eax+0x10],esi
6400bfeb:	mov    eax,0x1
6400bff0:	ret    
6400bff1:	lea    ecx,[ecx+0x0]
6400bff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
6400bff5:	mov    edi,0xbfb76400
6400bffa:	add    BYTE PTR [eax+ebp*8-0x41],ah
6400bffe:	add    BYTE PTR [ecx+ecx*8-0x41],ah
6400c002:	add    BYTE PTR [eax+ebp*8-0x41],ah
6400c006:	add    BYTE PTR [eax+ebp*8-0x41],ah
6400c00a:	add    BYTE PTR [eax+ebp*8-0x41],ah
6400c00e:	add    BYTE PTR [ecx+ebx*8-0x41],ah
6400c012:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c016:	int3   
6400c017:	int3   
6400c018:	int3   
6400c019:	int3   
6400c01a:	int3   
6400c01b:	int3   
6400c01c:	int3   
6400c01d:	int3   
6400c01e:	int3   
6400c01f:	int3   
6400c020:	sub    DWORD PTR [ecx+0x14],edi
6400c023:	jns    0x6400c028
6400c025:	xor    eax,eax
6400c027:	ret    
6400c028:	lea    eax,[edi-0x1]
6400c02b:	cmp    eax,0x7
6400c02e:	ja     0x6400c082
6400c030:	jmp    DWORD PTR [eax*4+0x6400c08c]
6400c037:	mov    eax,DWORD PTR [ecx+0x10]
6400c03a:	movsx  eax,BYTE PTR [eax]
6400c03d:	cdq    
6400c03e:	mov    DWORD PTR [esi],eax
6400c040:	mov    DWORD PTR [esi+0x4],edx
6400c043:	add    DWORD PTR [ecx+0x10],edi
6400c046:	mov    eax,0x1
6400c04b:	ret    
6400c04c:	mov    edx,DWORD PTR [ecx+0x10]
6400c04f:	movsx  eax,WORD PTR [edx]
6400c052:	cdq    
6400c053:	mov    DWORD PTR [esi],eax
6400c055:	mov    DWORD PTR [esi+0x4],edx
6400c058:	add    DWORD PTR [ecx+0x10],edi
6400c05b:	mov    eax,0x1
6400c060:	ret    
6400c061:	mov    eax,DWORD PTR [ecx+0x10]
6400c064:	mov    eax,DWORD PTR [eax]
6400c066:	cdq    
6400c067:	mov    DWORD PTR [esi],eax
6400c069:	mov    DWORD PTR [esi+0x4],edx
6400c06c:	add    DWORD PTR [ecx+0x10],edi
6400c06f:	mov    eax,0x1
6400c074:	ret    
6400c075:	mov    eax,DWORD PTR [ecx+0x10]
6400c078:	mov    edx,DWORD PTR [eax]
6400c07a:	mov    DWORD PTR [esi],edx
6400c07c:	mov    eax,DWORD PTR [eax+0x4]
6400c07f:	mov    DWORD PTR [esi+0x4],eax
6400c082:	add    DWORD PTR [ecx+0x10],edi
6400c085:	mov    eax,0x1
6400c08a:	ret    
6400c08b:	nop
6400c08c:	aaa    
6400c08d:	rol    BYTE PTR [eax],0x64
6400c090:	dec    esp
6400c091:	rol    BYTE PTR [eax],0x64
6400c094:	add    al,0x0
6400c097:	fs popa 
6400c099:	rol    BYTE PTR [eax],0x64
6400c09c:	add    al,0x0
6400c09f:	fs add al,0x0
6400c0a3:	fs add al,0x0
6400c0a7:	fs jne 0x6400c06a
6400c0aa:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c0ae:	int3   
6400c0af:	int3   
6400c0b0:	mov    eax,DWORD PTR [edi+0x28]
6400c0b3:	push   ebx
6400c0b4:	push   ebp
6400c0b5:	push   esi
6400c0b6:	mov    esi,edx
6400c0b8:	mov    ebx,edx
6400c0ba:	shr    esi,0x6
6400c0bd:	shr    ebx,0x3
6400c0c0:	and    esi,0x3
6400c0c3:	and    ebx,0x7
6400c0c6:	and    edx,0x7
6400c0c9:	test   al,0x2
6400c0cb:	je     0x6400c0d7
6400c0cd:	or     DWORD PTR [edi+0x4],0x2000000
6400c0d4:	add    ebx,0x8
6400c0d7:	cmp    ebx,0x4
6400c0da:	jne    0x6400c0ef
6400c0dc:	mov    ecx,DWORD PTR [esp+0x10]
6400c0e0:	mov    ebp,DWORD PTR [esp+0x14]
6400c0e4:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
6400c0e9:	lea    ebp,[ecx+ebp*4+0x13]
6400c0ed:	jmp    0x6400c103
6400c0ef:	mov    ebp,DWORD PTR [esp+0x10]
6400c0f3:	mov    ecx,DWORD PTR [esp+0x14]
6400c0f7:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
6400c0fc:	mov    ecx,DWORD PTR [esp+0x10]
6400c100:	add    ebp,0xd
6400c103:	cmp    edx,0x5
6400c106:	je     0x6400c14a
6400c108:	test   al,0x1
6400c10a:	je     0x6400c113
6400c10c:	or     DWORD PTR [edi+0x4],0x2000000
6400c113:	and    al,0x1
6400c115:	add    al,al
6400c117:	add    al,al
6400c119:	add    al,al
6400c11b:	cmp    DWORD PTR [esp+0x18],0x2
6400c120:	sete   cl
6400c123:	sub    cl,0x1
6400c126:	and    ecx,0x10
6400c129:	add    al,cl
6400c12b:	mov    ecx,DWORD PTR [esp+0x10]
6400c12f:	add    al,dl
6400c131:	cmp    ebx,0x4
6400c134:	mov    BYTE PTR [ebp+0x0],al
6400c137:	je     0x6400c1ad
6400c139:	cmp    DWORD PTR [esp+0x18],0x2
6400c13e:	jne    0x6400c185
6400c140:	mov    eax,DWORD PTR [esp+0x14]
6400c144:	mov    BYTE PTR [ecx+eax*4+0x13],bl
6400c148:	jmp    0x6400c190
6400c14a:	cmp    DWORD PTR [esp+0x1c],0x0
6400c14f:	je     0x6400c173
6400c151:	test   al,0x1
6400c153:	je     0x6400c15c
6400c155:	or     DWORD PTR [edi+0x4],0x2000000
6400c15c:	and    al,0x1
6400c15e:	add    al,al
6400c160:	add    al,al
6400c162:	add    al,al
6400c164:	cmp    DWORD PTR [esp+0x18],0x2
6400c169:	jne    0x6400c16f
6400c16b:	add    al,0x5
6400c16d:	jmp    0x6400c131
6400c16f:	add    al,0x15
6400c171:	jmp    0x6400c131
6400c173:	cmp    ebx,0x4
6400c176:	jne    0x6400c139
6400c178:	mov    edx,DWORD PTR [esp+0x14]
6400c17c:	pop    esi
6400c17d:	pop    ebp
6400c17e:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
6400c183:	pop    ebx
6400c184:	ret    
6400c185:	mov    edx,DWORD PTR [esp+0x14]
6400c189:	add    bl,0x10
6400c18c:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c190:	test   esi,esi
6400c192:	je     0x6400c1a8
6400c194:	mov    ecx,esi
6400c196:	mov    eax,0x1
6400c19b:	shl    eax,cl
6400c19d:	mov    ecx,DWORD PTR [esp+0x10]
6400c1a1:	pop    esi
6400c1a2:	pop    ebp
6400c1a3:	mov    BYTE PTR [ecx+0xe],al
6400c1a6:	pop    ebx
6400c1a7:	ret    
6400c1a8:	xor    eax,eax
6400c1aa:	mov    BYTE PTR [ecx+0xe],al
6400c1ad:	pop    esi
6400c1ae:	pop    ebp
6400c1af:	pop    ebx
6400c1b0:	ret    
6400c1b1:	int3   
6400c1b2:	int3   
6400c1b3:	int3   
6400c1b4:	int3   
6400c1b5:	int3   
6400c1b6:	int3   
6400c1b7:	int3   
6400c1b8:	int3   
6400c1b9:	int3   
6400c1ba:	int3   
6400c1bb:	int3   
6400c1bc:	int3   
6400c1bd:	int3   
6400c1be:	int3   
6400c1bf:	int3   
6400c1c0:	mov    edx,DWORD PTR [esp+0x20]
6400c1c4:	push   ebx
6400c1c5:	push   ebp
6400c1c6:	mov    ebp,DWORD PTR [esp+0x1c]
6400c1ca:	push   esi
6400c1cb:	xor    esi,esi
6400c1cd:	cmp    edx,0x3
6400c1d0:	push   edi
6400c1d1:	mov    edi,DWORD PTR [esp+0x1c]
6400c1d5:	mov    ebx,ecx
6400c1d7:	mov    ecx,DWORD PTR [ebp+0x28]
6400c1da:	mov    DWORD PTR [esp+0x24],esi
6400c1de:	jne    0x6400c3f9
6400c1e4:	mov    edx,DWORD PTR [esp+0x18]
6400c1e8:	mov    eax,DWORD PTR [esp+0x20]
6400c1ec:	mov    BYTE PTR [edx+eax*4+0x12],0x1
6400c1f1:	lea    eax,[edx+eax*4+0x14]
6400c1f5:	movzx  edx,WORD PTR [eax]
6400c1f8:	lea    esi,[edi-0xf]
6400c1fb:	cmp    esi,0x4c
6400c1fe:	mov    DWORD PTR [esp+0x30],eax
6400c202:	ja     0x6400c44b
6400c208:	movzx  eax,BYTE PTR [esi+0x6400c6e0]
6400c20f:	jmp    DWORD PTR [eax*4+0x6400c6ac]
6400c216:	mov    eax,DWORD PTR [esp+0x28]
6400c21a:	sub    eax,0x0
6400c21d:	je     0x6400c290
6400c21f:	sub    eax,0x1
6400c222:	je     0x6400c251
6400c224:	sub    eax,0x1
6400c227:	jne    0x6400c273
6400c229:	cmp    edi,0x1c
6400c22c:	mov    eax,0x2000000
6400c231:	jne    0x6400c236
6400c233:	or     DWORD PTR [ebp+0x4],eax
6400c236:	test   DWORD PTR [esp+0x34],eax
6400c23a:	je     0x6400c23f
6400c23c:	or     DWORD PTR [ebp+0x4],eax
6400c23f:	test   cl,0x1
6400c242:	je     0x6400c24a
6400c244:	or     DWORD PTR [ebp+0x4],eax
6400c247:	add    ebx,0x8
6400c24a:	mov    edx,0x40
6400c24f:	jmp    0x6400c273
6400c251:	or     DWORD PTR [ebp+0x4],0x2000
6400c258:	test   cl,0x1
6400c25b:	mov    eax,DWORD PTR [ebp+0x4]
6400c25e:	je     0x6400c26b
6400c260:	or     eax,0x2000000
6400c265:	mov    DWORD PTR [ebp+0x4],eax
6400c268:	add    ebx,0x8
6400c26b:	mov    edx,0x20
6400c270:	add    ebx,0x10
6400c273:	mov    eax,DWORD PTR [esp+0x30]
6400c277:	mov    ecx,DWORD PTR [esp+0x18]
6400c27b:	pop    edi
6400c27c:	mov    WORD PTR [eax],dx
6400c27f:	mov    edx,DWORD PTR [esp+0x1c]
6400c283:	pop    esi
6400c284:	pop    ebp
6400c285:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c289:	mov    eax,0x1
6400c28e:	pop    ebx
6400c28f:	ret    
6400c290:	or     DWORD PTR [ebp+0x4],0x2000
6400c297:	test   cl,0x1
6400c29a:	mov    eax,DWORD PTR [ebp+0x4]
6400c29d:	je     0x6400c2aa
6400c29f:	or     eax,0x2000000
6400c2a4:	mov    DWORD PTR [ebp+0x4],eax
6400c2a7:	add    ebx,0x8
6400c2aa:	mov    edx,0x10
6400c2af:	add    ebx,0x20
6400c2b2:	jmp    0x6400c273
6400c2b4:	test   cl,0x1
6400c2b7:	mov    eax,0x2000000
6400c2bc:	je     0x6400c2c4
6400c2be:	or     DWORD PTR [ebp+0x4],eax
6400c2c1:	add    ebx,0x8
6400c2c4:	mov    edx,DWORD PTR [esp+0x14]
6400c2c8:	cmp    DWORD PTR [edx+0x18],0x2
6400c2cc:	jne    0x6400c2e4
6400c2ce:	mov    edx,DWORD PTR [esp+0x34]
6400c2d2:	and    edx,0x3000000
6400c2d8:	cmp    edx,0x1000000
6400c2de:	je     0x6400c3ef
6400c2e4:	test   cl,0x8
6400c2e7:	je     0x6400c26b
6400c2e9:	or     DWORD PTR [ebp+0x4],eax
6400c2ec:	mov    edx,0x40
6400c2f1:	jmp    0x6400c273
6400c2f3:	test   cl,0x1
6400c2f6:	je     0x6400c302
6400c2f8:	or     DWORD PTR [ebp+0x4],0x2000000
6400c2ff:	add    ebx,0x8
6400c302:	test   DWORD PTR [ebp+0x0],0x2000
6400c309:	je     0x6400c26b
6400c30f:	or     DWORD PTR [ebp+0x4],0x2000
6400c316:	mov    edx,0x10
6400c31b:	add    ebx,0x20
6400c31e:	jmp    0x6400c273
6400c323:	test   cl,0x1
6400c326:	je     0x6400c332
6400c328:	or     DWORD PTR [ebp+0x4],0x2000000
6400c32f:	add    ebx,0x8
6400c332:	add    ebx,0x20
6400c335:	jmp    0x6400c273
6400c33a:	cmp    DWORD PTR [ebp+0x18],0x1
6400c33e:	jne    0x6400c359
6400c340:	or     DWORD PTR [ebp+0x4],0x2000000
6400c347:	and    ecx,0x1
6400c34a:	lea    eax,[ebx+ecx*8]
6400c34d:	call   0x6400bf50
6400c352:	mov    ebx,eax
6400c354:	jmp    0x6400c273
6400c359:	add    ebx,0x30
6400c35c:	jmp    0x6400c273
6400c361:	mov    edx,0x40
6400c366:	add    ebx,0x53
6400c369:	jmp    0x6400c273
6400c36e:	test   cl,0x1
6400c371:	je     0x6400c37d
6400c373:	or     DWORD PTR [ebp+0x4],0x2000000
6400c37a:	add    ebx,0x8
6400c37d:	mov    edx,0x80
6400c382:	add    ebx,0x5b
6400c385:	jmp    0x6400c273
6400c38a:	test   cl,0x1
6400c38d:	je     0x6400c26b
6400c393:	or     DWORD PTR [ebp+0x4],0x2000000
6400c39a:	jmp    0x6400c268
6400c39f:	test   cl,0x1
6400c3a2:	je     0x6400c3a7
6400c3a4:	add    ebx,0x8
6400c3a7:	add    ebx,0x6b
6400c3aa:	jmp    0x6400c273
6400c3af:	test   cl,0x1
6400c3b2:	je     0x6400c3b7
6400c3b4:	add    ebx,0x8
6400c3b7:	test   cl,0x10
6400c3ba:	je     0x6400c37d
6400c3bc:	mov    edx,0x100
6400c3c1:	add    ebx,0x6b
6400c3c4:	jmp    0x6400c273
6400c3c9:	test   cl,0x1
6400c3cc:	je     0x6400c37d
6400c3ce:	add    ebx,0x8
6400c3d1:	mov    edx,0x80
6400c3d6:	add    ebx,0x5b
6400c3d9:	jmp    0x6400c273
6400c3de:	test   cl,0x1
6400c3e1:	je     0x6400c3e6
6400c3e3:	add    ebx,0x8
6400c3e6:	test   cl,0x8
6400c3e9:	je     0x6400c26b
6400c3ef:	mov    edx,0x40
6400c3f4:	jmp    0x6400c273
6400c3f9:	or     DWORD PTR [ebp+0x4],0x4000
6400c400:	test   eax,eax
6400c402:	je     0x6400c410
6400c404:	test   BYTE PTR [ebp+0x0],0x10
6400c408:	je     0x6400c410
6400c40a:	mov    DWORD PTR [eax],0x1
6400c410:	cmp    DWORD PTR [esp+0x2c],esi
6400c414:	jne    0x6400c525
6400c41a:	test   edx,edx
6400c41c:	jne    0x6400c452
6400c41e:	cmp    ebx,0x6
6400c421:	jne    0x6400c452
6400c423:	mov    eax,DWORD PTR [esp+0x18]
6400c427:	mov    ecx,DWORD PTR [esp+0x20]
6400c42b:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
6400c430:	mov    ecx,DWORD PTR [esp+0x14]
6400c434:	lea    esi,[eax+0x28]
6400c437:	lea    edi,[edx+0x2]
6400c43a:	mov    BYTE PTR [eax+0xf],0x10
6400c43e:	call   0x6400c020
6400c443:	test   eax,eax
6400c445:	jne    0x6400c4ee
6400c44b:	pop    edi
6400c44c:	pop    esi
6400c44d:	pop    ebp
6400c44e:	xor    eax,eax
6400c450:	pop    ebx
6400c451:	ret    
6400c452:	cmp    ebx,0x4
6400c455:	jae    0x6400c479
6400c457:	mov    esi,DWORD PTR [esp+0x18]
6400c45b:	mov    edi,DWORD PTR [esp+0x20]
6400c45f:	mov    BYTE PTR [esi+edi*4+0x12],0x7
6400c464:	mov    al,BYTE PTR [ebx+0x6402e150]
6400c46a:	mov    BYTE PTR [esi+0xd],al
6400c46d:	mov    cl,BYTE PTR [ebx+0x6402e158]
6400c473:	mov    BYTE PTR [esi+edi*4+0x13],cl
6400c477:	jmp    0x6400c490
6400c479:	mov    edi,DWORD PTR [esp+0x18]
6400c47d:	mov    esi,DWORD PTR [esp+0x20]
6400c481:	mov    BYTE PTR [edi+esi*4+0x12],0x6
6400c486:	mov    al,BYTE PTR [ebx+0x6402e150]
6400c48c:	mov    BYTE PTR [edi+esi*4+0x13],al
6400c490:	cmp    edx,0x1
6400c493:	jne    0x6400c4b4
6400c495:	mov    eax,DWORD PTR [esp+0x18]
6400c499:	mov    ecx,DWORD PTR [esp+0x14]
6400c49d:	lea    esi,[eax+0x28]
6400c4a0:	mov    edi,edx
6400c4a2:	mov    BYTE PTR [eax+0xf],0x8
6400c4a6:	call   0x6400c020
6400c4ab:	test   eax,eax
6400c4ad:	jne    0x6400c4d7
6400c4af:	pop    edi
6400c4b0:	pop    esi
6400c4b1:	pop    ebp
6400c4b2:	pop    ebx
6400c4b3:	ret    
6400c4b4:	cmp    edx,0x2
6400c4b7:	jne    0x6400c4db
6400c4b9:	mov    eax,DWORD PTR [esp+0x18]
6400c4bd:	mov    ecx,DWORD PTR [esp+0x14]
6400c4c1:	lea    esi,[eax+0x28]
6400c4c4:	mov    edi,edx
6400c4c6:	mov    BYTE PTR [eax+0xf],0x10
6400c4ca:	call   0x6400c020
6400c4cf:	test   eax,eax
6400c4d1:	je     0x6400c44b
6400c4d7:	mov    edx,DWORD PTR [esp+0x30]
6400c4db:	cmp    ebx,0x2
6400c4de:	je     0x6400c513
6400c4e0:	cmp    ebx,0x3
6400c4e3:	je     0x6400c513
6400c4e5:	cmp    ebx,0x6
6400c4e8:	jne    0x6400c4ee
6400c4ea:	test   edx,edx
6400c4ec:	jne    0x6400c513
6400c4ee:	mov    ecx,DWORD PTR [esp+0x18]
6400c4f2:	mov    edx,DWORD PTR [esp+0x14]
6400c4f6:	mov    eax,DWORD PTR [edx+0x18]
6400c4f9:	push   ecx
6400c4fa:	push   eax
6400c4fb:	push   ebp
6400c4fc:	push   0x200
6400c501:	call   0x6400dd40
6400c506:	add    esp,0x10
6400c509:	pop    edi
6400c50a:	pop    esi
6400c50b:	pop    ebp
6400c50c:	mov    eax,0x1
6400c511:	pop    ebx
6400c512:	ret    
6400c513:	mov    ecx,DWORD PTR [esp+0x18]
6400c517:	mov    edx,DWORD PTR [esp+0x14]
6400c51b:	mov    eax,DWORD PTR [edx+0x18]
6400c51e:	push   ecx
6400c51f:	push   eax
6400c520:	jmp    0x6400c692
6400c525:	test   edx,edx
6400c527:	jne    0x6400c57a
6400c529:	cmp    ebx,0x5
6400c52c:	jne    0x6400c57a
6400c52e:	mov    ebx,DWORD PTR [esp+0x18]
6400c532:	mov    ecx,DWORD PTR [esp+0x14]
6400c536:	lea    esi,[ebx+0x28]
6400c539:	lea    edi,[edx+0x4]
6400c53c:	mov    BYTE PTR [ebx+0xf],0x20
6400c540:	call   0x6400c020
6400c545:	test   eax,eax
6400c547:	je     0x6400c44b
6400c54d:	cmp    DWORD PTR [ecx+0x18],0x2
6400c551:	jne    0x6400c56c
6400c553:	mov    eax,DWORD PTR [esp+0x20]
6400c557:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
6400c55c:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
6400c561:	or     WORD PTR [ebx+0xa],0x80
6400c567:	jmp    0x6400c643
6400c56c:	mov    ecx,DWORD PTR [esp+0x20]
6400c570:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
6400c575:	jmp    0x6400c643
6400c57a:	cmp    ebx,0x4
6400c57d:	jne    0x6400c5c1
6400c57f:	mov    eax,DWORD PTR [esp+0x14]
6400c583:	lea    esi,[ebx-0x3]
6400c586:	lea    ecx,[esp+0x24]
6400c58a:	call   0x6400bf90
6400c58f:	test   eax,eax
6400c591:	je     0x6400c44b
6400c597:	mov    edx,DWORD PTR [esp+0x30]
6400c59b:	mov    eax,DWORD PTR [esp+0x2c]
6400c59f:	mov    ecx,DWORD PTR [esp+0x20]
6400c5a3:	mov    esi,DWORD PTR [esp+0x24]
6400c5a7:	push   edx
6400c5a8:	mov    edx,DWORD PTR [esp+0x1c]
6400c5ac:	push   eax
6400c5ad:	push   ecx
6400c5ae:	push   edx
6400c5af:	mov    edx,esi
6400c5b1:	mov    edi,ebp
6400c5b3:	call   0x6400c0b0
6400c5b8:	mov    edx,DWORD PTR [esp+0x40]
6400c5bc:	add    esp,0x10
6400c5bf:	jmp    0x6400c5eb
6400c5c1:	test   cl,0x1
6400c5c4:	mov    edi,DWORD PTR [esp+0x18]
6400c5c8:	mov    eax,DWORD PTR [esp+0x20]
6400c5cc:	mov    BYTE PTR [edi+eax*4+0x12],0x6
6400c5d1:	je     0x6400c5dd
6400c5d3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c5da:	add    ebx,0x8
6400c5dd:	cmp    DWORD PTR [esp+0x2c],0x2
6400c5e2:	je     0x6400c5e7
6400c5e4:	add    bl,0x10
6400c5e7:	mov    BYTE PTR [edi+eax*4+0x13],bl
6400c5eb:	cmp    edx,0x1
6400c5ee:	jne    0x6400c60f
6400c5f0:	mov    eax,DWORD PTR [esp+0x18]
6400c5f4:	mov    ecx,DWORD PTR [esp+0x14]
6400c5f8:	lea    esi,[eax+0x28]
6400c5fb:	mov    edi,edx
6400c5fd:	mov    BYTE PTR [eax+0xf],0x8
6400c601:	call   0x6400c020
6400c606:	test   eax,eax
6400c608:	jne    0x6400c63f
6400c60a:	pop    edi
6400c60b:	pop    esi
6400c60c:	pop    ebp
6400c60d:	pop    ebx
6400c60e:	ret    
6400c60f:	cmp    edx,0x2
6400c612:	je     0x6400c61d
6400c614:	mov    eax,esi
6400c616:	and    eax,0x7
6400c619:	cmp    al,0x5
6400c61b:	jne    0x6400c63f
6400c61d:	mov    ebx,DWORD PTR [esp+0x18]
6400c621:	mov    ecx,DWORD PTR [esp+0x14]
6400c625:	lea    esi,[ebx+0x28]
6400c628:	mov    edi,0x4
6400c62d:	mov    BYTE PTR [ebx+0xf],0x20
6400c631:	call   0x6400c020
6400c636:	test   eax,eax
6400c638:	jne    0x6400c643
6400c63a:	pop    edi
6400c63b:	pop    esi
6400c63c:	pop    ebp
6400c63d:	pop    ebx
6400c63e:	ret    
6400c63f:	mov    ebx,DWORD PTR [esp+0x18]
6400c643:	mov    al,BYTE PTR [ebx+0xd]
6400c646:	cmp    al,0xff
6400c648:	mov    ecx,DWORD PTR [esp+0x20]
6400c64c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
6400c651:	je     0x6400c658
6400c653:	movzx  ecx,al
6400c656:	jmp    0x6400c65e
6400c658:	cmp    BYTE PTR [ebx+0xe],0x2
6400c65c:	jae    0x6400c668
6400c65e:	cmp    ecx,0x15
6400c661:	je     0x6400c689
6400c663:	cmp    ecx,0x14
6400c666:	je     0x6400c689
6400c668:	mov    edx,DWORD PTR [esp+0x14]
6400c66c:	mov    eax,DWORD PTR [edx+0x18]
6400c66f:	push   ebx
6400c670:	push   eax
6400c671:	push   ebp
6400c672:	push   0x200
6400c677:	call   0x6400dd40
6400c67c:	add    esp,0x10
6400c67f:	pop    edi
6400c680:	pop    esi
6400c681:	pop    ebp
6400c682:	mov    eax,0x1
6400c687:	pop    ebx
6400c688:	ret    
6400c689:	mov    ecx,DWORD PTR [esp+0x14]
6400c68d:	mov    edx,DWORD PTR [ecx+0x18]
6400c690:	push   ebx
6400c691:	push   edx
6400c692:	push   ebp
6400c693:	push   0x100
6400c698:	call   0x6400dd40
6400c69d:	add    esp,0x10
6400c6a0:	pop    edi
6400c6a1:	pop    esi
6400c6a2:	pop    ebp
6400c6a3:	mov    eax,0x1
6400c6a8:	pop    ebx
6400c6a9:	ret    
6400c6aa:	mov    edi,edi
6400c6ac:	cmp    al,bl
6400c6ae:	add    BYTE PTR [ebx+eiz*1-0x3d],ah
6400c6b2:	add    BYTE PTR [esi+edx*1-0x3e],ah
6400c6b6:	add    BYTE PTR [esp+esi*4-0x3e],ah
6400c6ba:	add    BYTE PTR [ebx+esi*8-0x3e],ah
6400c6be:	add    BYTE PTR [edx+ecx*4-0x3d],ah
6400c6c2:	add    BYTE PTR [ecx+eiz*2-0x3d],ah
6400c6c6:	add    BYTE PTR [esi+ebp*2-0x3d],ah
6400c6ca:	add    BYTE PTR [esi+ebx*8-0x3d],ah
6400c6ce:	add    BYTE PTR [ecx+ecx*8-0x3d],ah
6400c6d2:	add    BYTE PTR [edi+ebx*4-0x3d],ah
6400c6d6:	add    BYTE PTR [edi+ebp*4-0x3d],ah
6400c6da:	add    BYTE PTR [ebx+ecx*2-0x3c],ah
6400c6de:	add    BYTE PTR [eax+eax*1+0x1],ah
6400c6e2:	add    al,BYTE PTR [ebx]
6400c6e4:	add    al,0xc
6400c6e6:	or     al,0xc
6400c6e8:	or     al,0x5
6400c6ea:	add    eax,0xc020303
6400c6ef:	or     al,0xc
6400c6f1:	or     al,0xc
6400c6f3:	or     al,0xc
6400c6f5:	or     al,0xc
6400c6f7:	or     al,0xc
6400c6f9:	or     al,0xc
6400c6fb:	or     al,0xc
6400c6fd:	or     al,0xc
6400c6ff:	or     al,0xc
6400c701:	or     al,0xc
6400c703:	or     al,0xc
6400c705:	or     al,0xc
6400c707:	or     al,0xc
6400c709:	or     al,0xc
6400c70b:	or     al,0xc
6400c70d:	or     al,0xc
6400c70f:	or     al,0xc
6400c711:	or     al,0xc
6400c713:	push   es
6400c714:	push   es
6400c715:	or     al,0xc
6400c717:	pop    es
6400c718:	pop    es
6400c719:	pop    es
6400c71a:	pop    es
6400c71b:	or     al,0x5
6400c71d:	or     BYTE PTR [eax],cl
6400c71f:	or     al,0x8
6400c721:	or     DWORD PTR [esp+ecx*1],ecx
6400c724:	or     al,0xc
6400c726:	or     al,0xa
6400c728:	or     al,0xc
6400c72a:	or     ecx,DWORD PTR [ebx]
6400c72c:	or     esp,ecx
6400c72e:	int3   
6400c72f:	int3   
6400c730:	sub    esp,0xc
6400c733:	mov    ecx,DWORD PTR [esp+0x18]
6400c737:	mov    edx,DWORD PTR [ecx+0x8]
6400c73a:	mov    ecx,DWORD PTR [esp+0x14]
6400c73e:	push   ebx
6400c73f:	push   ebp
6400c740:	mov    ebp,DWORD PTR [esp+0x30]
6400c744:	mov    eax,DWORD PTR [ebp+0x24]
6400c747:	push   esi
6400c748:	mov    esi,DWORD PTR [esp+0x30]
6400c74c:	mov    DWORD PTR [esp+0x34],edx
6400c750:	mov    edx,DWORD PTR [esp+0x2c]
6400c754:	lea    ebx,[ecx+edx*4+0x12]
6400c758:	push   edi
6400c759:	mov    edi,esi
6400c75b:	mov    edx,esi
6400c75d:	and    esi,0x7
6400c760:	mov    DWORD PTR [esp+0x34],esi
6400c764:	mov    esi,DWORD PTR [esp+0x2c]
6400c768:	shr    edi,0x6
6400c76b:	shr    edx,0x3
6400c76e:	mov    DWORD PTR [esp+0x18],eax
6400c772:	mov    eax,DWORD PTR [ebp+0x28]
6400c775:	and    edx,0x7
6400c778:	add    esi,0xffffffec
6400c77b:	xor    ecx,ecx
6400c77d:	and    edi,0x3
6400c780:	cmp    esi,0x48
6400c783:	mov    DWORD PTR [esp+0x14],eax
6400c787:	mov    DWORD PTR [esp+0x10],edx
6400c78b:	ja     0x6400c8ec
6400c791:	movzx  esi,BYTE PTR [esi+0x6400d600]
6400c798:	jmp    DWORD PTR [esi*4+0x6400d5cc]
6400c79f:	mov    eax,DWORD PTR [esp+0x44]
6400c7a3:	test   eax,eax
6400c7a5:	je     0x6400c7b3
6400c7a7:	test   BYTE PTR [ebp+0x0],0x10
6400c7ab:	je     0x6400c7b3
6400c7ad:	mov    DWORD PTR [eax],0x1
6400c7b3:	cmp    DWORD PTR [esp+0x3c],0x2
6400c7b8:	jne    0x6400c7d9
6400c7ba:	or     DWORD PTR [ebp+0x4],0x2000000
6400c7c1:	mov    ecx,0x6
6400c7c6:	jmp    0x6400c865
6400c7cb:	cmp    DWORD PTR [esp+0x3c],0x2
6400c7d0:	jne    0x6400c81b
6400c7d2:	or     DWORD PTR [ebp+0x4],0x2000000
6400c7d9:	mov    ecx,0x4
6400c7de:	jmp    0x6400c865
6400c7e3:	mov    eax,DWORD PTR [esp+0x3c]
6400c7e7:	sub    eax,0x0
6400c7ea:	je     0x6400c822
6400c7ec:	sub    eax,0x1
6400c7ef:	je     0x6400c814
6400c7f1:	sub    eax,0x1
6400c7f4:	jne    0x6400c865
6400c7f6:	mov    eax,DWORD PTR [esp+0x38]
6400c7fa:	and    eax,0x3000000
6400c7ff:	cmp    eax,0x3000000
6400c804:	jne    0x6400c7d9
6400c806:	or     DWORD PTR [ebp+0x4],0x2000000
6400c80d:	mov    ecx,0x4
6400c812:	jmp    0x6400c865
6400c814:	or     DWORD PTR [ebp+0x4],0x2000
6400c81b:	mov    ecx,0x3
6400c820:	jmp    0x6400c865
6400c822:	or     DWORD PTR [ebp+0x4],0x2000
6400c829:	mov    ecx,0x2
6400c82e:	jmp    0x6400c865
6400c830:	mov    edx,DWORD PTR [esp+0x20]
6400c834:	xor    ecx,ecx
6400c836:	cmp    DWORD PTR [edx+0x18],0x2
6400c83a:	sete   cl
6400c83d:	add    ecx,0x3
6400c840:	jmp    0x6400c865
6400c842:	cmp    edi,0x3
6400c845:	jne    0x6400c882
6400c847:	lea    eax,[edi-0x2]
6400c84a:	pop    edi
6400c84b:	pop    esi
6400c84c:	pop    ebp
6400c84d:	pop    ebx
6400c84e:	add    esp,0xc
6400c851:	ret    
6400c852:	mov    ecx,0x5
6400c857:	jmp    0x6400c865
6400c859:	movzx  ecx,al
6400c85c:	and    ecx,0x10
6400c85f:	or     ecx,0x60
6400c862:	shr    ecx,0x4
6400c865:	cmp    edi,0x3
6400c868:	jne    0x6400c882
6400c86a:	mov    eax,DWORD PTR [esp+0x44]
6400c86e:	test   eax,eax
6400c870:	je     0x6400c878
6400c872:	mov    DWORD PTR [eax],0x0
6400c878:	xor    eax,eax
6400c87a:	pop    edi
6400c87b:	pop    esi
6400c87c:	pop    ebp
6400c87d:	pop    ebx
6400c87e:	add    esp,0xc
6400c881:	ret    
6400c882:	mov    ax,WORD PTR [ecx*2+0x6402e140]
6400c88a:	mov    ecx,DWORD PTR [esp+0x38]
6400c88e:	mov    edx,DWORD PTR [esp+0x40]
6400c892:	mov    esi,DWORD PTR [esp+0x24]
6400c896:	push   ecx
6400c897:	mov    ecx,DWORD PTR [esp+0x34]
6400c89b:	push   edi
6400c89c:	push   edx
6400c89d:	mov    edx,DWORD PTR [esp+0x38]
6400c8a1:	mov    WORD PTR [ebx+0x2],ax
6400c8a5:	mov    eax,DWORD PTR [esp+0x48]
6400c8a9:	push   eax
6400c8aa:	mov    eax,DWORD PTR [esp+0x30]
6400c8ae:	push   ebp
6400c8af:	push   ecx
6400c8b0:	mov    ecx,DWORD PTR [esp+0x4c]
6400c8b4:	push   edx
6400c8b5:	push   esi
6400c8b6:	push   eax
6400c8b7:	mov    eax,DWORD PTR [esp+0x68]
6400c8bb:	call   0x6400c1c0
6400c8c0:	mov    cl,BYTE PTR [ebx]
6400c8c2:	add    esp,0x24
6400c8c5:	cmp    cl,0x1
6400c8c8:	je     0x6400c8d4
6400c8ca:	cmp    cl,0x6
6400c8cd:	je     0x6400c8d4
6400c8cf:	cmp    cl,0x7
6400c8d2:	jne    0x6400c87a
6400c8d4:	movzx  ecx,BYTE PTR [ebx+0x1]
6400c8d8:	mov    dx,WORD PTR [ecx*2+0x6402e028]
6400c8e0:	or     WORD PTR [esi+0x3c],dx
6400c8e4:	pop    edi
6400c8e5:	pop    esi
6400c8e6:	pop    ebp
6400c8e7:	pop    ebx
6400c8e8:	add    esp,0xc
6400c8eb:	ret    
6400c8ec:	mov    esi,DWORD PTR [esp+0x2c]
6400c8f0:	lea    ecx,[esi-0xf]
6400c8f3:	cmp    ecx,0x4c
6400c8f6:	ja     0x6400ca66
6400c8fc:	movzx  ecx,BYTE PTR [ecx+0x6400d68c]
6400c903:	mov    esi,0x2000
6400c908:	jmp    DWORD PTR [ecx*4+0x6400d64c]
6400c90f:	or     DWORD PTR [ebp+0x4],esi
6400c912:	mov    ecx,DWORD PTR [esp+0x3c]
6400c916:	cmp    ecx,0x1
6400c919:	mov    eax,DWORD PTR [ebp+0x4]
6400c91c:	jne    0x6400c930
6400c91e:	mov    eax,0x3
6400c923:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c92b:	jmp    0x6400c88a
6400c930:	cmp    ecx,0x2
6400c933:	jne    0x6400c959
6400c935:	test   DWORD PTR [esp+0x38],0x1000000
6400c93d:	jne    0x6400c947
6400c93f:	or     eax,0x2000000
6400c944:	mov    DWORD PTR [ebp+0x4],eax
6400c947:	mov    eax,0x4
6400c94c:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c954:	jmp    0x6400c88a
6400c959:	cmp    DWORD PTR [esp+0x2c],0x10
6400c95e:	je     0x6400c963
6400c960:	or     DWORD PTR [ebp+0x4],esi
6400c963:	mov    eax,0x2
6400c968:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c970:	jmp    0x6400c88a
6400c975:	cmp    DWORD PTR [esp+0x3c],0x2
6400c97a:	jne    0x6400c91e
6400c97c:	mov    edx,DWORD PTR [esp+0x38]
6400c980:	and    edx,0x3000000
6400c986:	cmp    edx,0x3000000
6400c98c:	mov    eax,0x4
6400c991:	jne    0x6400ca55
6400c997:	or     DWORD PTR [ebp+0x4],0x2000000
6400c99e:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9a6:	jmp    0x6400c88a
6400c9ab:	test   DWORD PTR [ebp+0x0],esi
6400c9ae:	je     0x6400c91e
6400c9b4:	or     DWORD PTR [ebp+0x4],esi
6400c9b7:	mov    eax,0x2
6400c9bc:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9c4:	jmp    0x6400c88a
6400c9c9:	and    al,0x8
6400c9cb:	neg    al
6400c9cd:	sbb    eax,eax
6400c9cf:	neg    eax
6400c9d1:	add    eax,0x3
6400c9d4:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9dc:	jmp    0x6400c88a
6400c9e1:	and    al,0x10
6400c9e3:	neg    al
6400c9e5:	sbb    eax,eax
6400c9e7:	and    eax,0x3
6400c9ea:	add    eax,0x4
6400c9ed:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9f5:	jmp    0x6400c88a
6400c9fa:	movzx  eax,al
6400c9fd:	and    eax,0x10
6400ca00:	or     eax,0x60
6400ca03:	shr    eax,0x4
6400ca06:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca0e:	jmp    0x6400c88a
6400ca13:	movzx  eax,al
6400ca16:	and    eax,0x10
6400ca19:	or     eax,0x20
6400ca1c:	shr    eax,0x3
6400ca1f:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca27:	jmp    0x6400c88a
6400ca2c:	mov    eax,0x1
6400ca31:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca39:	jmp    0x6400c88a
6400ca3e:	mov    eax,0x6
6400ca43:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca4b:	jmp    0x6400c88a
6400ca50:	mov    eax,0x7
6400ca55:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca5d:	jmp    0x6400c88a
6400ca62:	mov    esi,DWORD PTR [esp+0x2c]
6400ca66:	lea    ecx,[esi-0x1]
6400ca69:	cmp    ecx,0x57
6400ca6c:	ja     0x6400c878
6400ca72:	movzx  ecx,BYTE PTR [ecx+0x6400d7ac]
6400ca79:	jmp    DWORD PTR [ecx*4+0x6400d6dc]
6400ca80:	push   0x2
6400ca82:	mov    edx,0x8
6400ca87:	mov    eax,ebx
6400ca89:	call   0x6400bf60
6400ca8e:	mov    ecx,DWORD PTR [esp+0x24]
6400ca92:	add    ecx,0x30
6400ca95:	mov    esi,0x1
6400ca9a:	mov    eax,DWORD PTR [esp+0x20]
6400ca9e:	call   0x6400bf90
6400caa3:	test   eax,eax
6400caa5:	jne    0x6400cc8d
6400caab:	pop    edi
6400caac:	pop    esi
6400caad:	pop    ebp
6400caae:	pop    ebx
6400caaf:	add    esp,0xc
6400cab2:	ret    
6400cab3:	mov    eax,DWORD PTR [esp+0x3c]
6400cab7:	test   eax,eax
6400cab9:	jne    0x6400cadc
6400cabb:	or     DWORD PTR [ebp+0x4],0x2000
6400cac2:	push   0x2
6400cac4:	mov    edx,0x10
6400cac9:	mov    eax,ebx
6400cacb:	call   0x6400bf60
6400cad0:	mov    ecx,DWORD PTR [esp+0x24]
6400cad4:	add    ecx,0x30
6400cad7:	lea    esi,[edx-0xe]
6400cada:	jmp    0x6400ca9a
6400cadc:	cmp    eax,0x2
6400cadf:	jne    0x6400cb12
6400cae1:	mov    eax,DWORD PTR [esp+0x38]
6400cae5:	and    eax,0x3000000
6400caea:	cmp    eax,0x3000000
6400caef:	jne    0x6400cb12
6400caf1:	or     DWORD PTR [ebp+0x4],0x2000000
6400caf8:	push   0x2
6400cafa:	mov    edx,0x40
6400caff:	mov    eax,ebx
6400cb01:	call   0x6400bf60
6400cb06:	mov    ecx,DWORD PTR [esp+0x24]
6400cb0a:	add    ecx,0x30
6400cb0d:	lea    esi,[edx-0x38]
6400cb10:	jmp    0x6400ca9a
6400cb12:	or     DWORD PTR [ebp+0x4],0x2000
6400cb19:	mov    eax,DWORD PTR [esp+0x20]
6400cb1d:	mov    ecx,DWORD PTR [esp+0x24]
6400cb21:	mov    BYTE PTR [ebx],0x2
6400cb24:	cmp    DWORD PTR [eax+0x18],0x2
6400cb28:	jne    0x6400cb49
6400cb2a:	mov    edx,0x20
6400cb2f:	mov    WORD PTR [ebx+0x2],dx
6400cb33:	or     WORD PTR [ecx+0xa],dx
6400cb37:	lea    esi,[ecx+0x30]
6400cb3a:	lea    edi,[edx-0x1c]
6400cb3d:	mov    ecx,eax
6400cb3f:	call   0x6400c020
6400cb44:	jmp    0x6400caa3
6400cb49:	mov    WORD PTR [ebx+0x2],0x20
6400cb4f:	add    ecx,0x30
6400cb52:	mov    esi,0x4
6400cb57:	jmp    0x6400ca9e
6400cb5c:	mov    ecx,DWORD PTR [esp+0x20]
6400cb60:	mov    esi,0x2000
6400cb65:	test   DWORD PTR [esp+0x38],esi
6400cb69:	mov    BYTE PTR [ebx],0x2
6400cb6c:	je     0x6400cb95
6400cb6e:	test   DWORD PTR [ebp+0x0],esi
6400cb71:	je     0x6400cb95
6400cb73:	or     DWORD PTR [ebp+0x4],esi
6400cb76:	mov    eax,DWORD PTR [ecx+0x18]
6400cb79:	test   eax,eax
6400cb7b:	je     0x6400cb8d
6400cb7d:	add    eax,0xffffffff
6400cb80:	cmp    eax,0x1
6400cb83:	ja     0x6400cb9b
6400cb85:	mov    WORD PTR [ebx+0x2],0x10
6400cb8b:	jmp    0x6400cb9b
6400cb8d:	mov    WORD PTR [ebx+0x2],0x20
6400cb93:	jmp    0x6400cb9b
6400cb95:	mov    WORD PTR [ebx+0x2],0x8
6400cb9b:	mov    eax,DWORD PTR [esp+0x24]
6400cb9f:	or     WORD PTR [eax+0xa],0x20
6400cba4:	lea    esi,[eax+0x30]
6400cba7:	mov    edi,0x1
6400cbac:	call   0x6400c020
6400cbb1:	jmp    0x6400caa3
6400cbb6:	push   0x3
6400cbb8:	jmp    0x6400cac4
6400cbbd:	push   0x3
6400cbbf:	jmp    0x6400ca82
6400cbc4:	push   0x4
6400cbc6:	mov    edx,0x8
6400cbcb:	mov    eax,ebx
6400cbcd:	call   0x6400bf60
6400cbd2:	mov    ecx,DWORD PTR [esp+0x24]
6400cbd6:	add    ecx,0x34
6400cbd9:	jmp    0x6400ca95
6400cbde:	push   0x1
6400cbe0:	mov    edx,0x8
6400cbe5:	mov    eax,ebx
6400cbe7:	call   0x6400bf60
6400cbec:	cmp    DWORD PTR [ebp+0x18],0x0
6400cbf0:	je     0x6400cc11
6400cbf2:	mov    eax,DWORD PTR [esp+0x14]
6400cbf6:	mov    edx,DWORD PTR [esp+0x10]
6400cbfa:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc01:	and    eax,0x4
6400cc04:	lea    eax,[edx+eax*2]
6400cc07:	call   0x6400bf50
6400cc0c:	mov    BYTE PTR [ebx+0x1],al
6400cc0f:	jmp    0x6400cc8d
6400cc11:	mov    al,BYTE PTR [esp+0x10]
6400cc15:	add    al,0x30
6400cc17:	mov    BYTE PTR [ebx+0x1],al
6400cc1a:	jmp    0x6400cc8d
6400cc1c:	mov    ecx,DWORD PTR [esp+0x3c]
6400cc20:	sub    ecx,0x0
6400cc23:	je     0x6400cc4e
6400cc25:	sub    ecx,0x1
6400cc28:	je     0x6400cc41
6400cc2a:	sub    ecx,0x1
6400cc2d:	jne    0x6400cc8d
6400cc2f:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc36:	and    eax,0x4
6400cc39:	lea    eax,[edx+eax*2]
6400cc3c:	push   eax
6400cc3d:	push   0x40
6400cc3f:	jmp    0x6400cc84
6400cc41:	test   al,0x4
6400cc43:	jne    0x6400cc74
6400cc45:	or     DWORD PTR [ebp+0x4],0x2000
6400cc4c:	jmp    0x6400cc7e
6400cc4e:	or     DWORD PTR [ebp+0x4],0x2000
6400cc55:	test   al,0x4
6400cc57:	mov    ecx,DWORD PTR [ebp+0x4]
6400cc5a:	je     0x6400cc68
6400cc5c:	or     ecx,0x2000000
6400cc62:	mov    DWORD PTR [ebp+0x4],ecx
6400cc65:	add    edx,0x8
6400cc68:	add    edx,0x20
6400cc6b:	push   edx
6400cc6c:	push   0x10
6400cc6e:	jmp    0x6400cc84
6400cc70:	test   al,0x4
6400cc72:	je     0x6400cc7e
6400cc74:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc7b:	add    edx,0x8
6400cc7e:	add    edx,0x10
6400cc81:	push   edx
6400cc82:	push   0x20
6400cc84:	mov    eax,ebx
6400cc86:	push   0x1
6400cc88:	call   0x6400bf70
6400cc8d:	mov    al,BYTE PTR [ebx]
6400cc8f:	cmp    al,0x1
6400cc91:	je     0x6400cc9b
6400cc93:	cmp    al,0x6
6400cc95:	je     0x6400cc9b
6400cc97:	cmp    al,0x7
6400cc99:	jne    0x6400ccaf
6400cc9b:	movzx  ecx,BYTE PTR [ebx+0x1]
6400cc9f:	mov    dx,WORD PTR [ecx*2+0x6402e028]
6400cca7:	mov    eax,DWORD PTR [esp+0x24]
6400ccab:	or     WORD PTR [eax+0x3c],dx
6400ccaf:	pop    edi
6400ccb0:	pop    esi
6400ccb1:	pop    ebp
6400ccb2:	mov    eax,0x1
6400ccb7:	pop    ebx
6400ccb8:	add    esp,0xc
6400ccbb:	ret    
6400ccbc:	test   al,0x4
6400ccbe:	mov    edi,0x2000000
6400ccc3:	je     0x6400cccb
6400ccc5:	or     DWORD PTR [ebp+0x4],edi
6400ccc8:	add    edx,0x8
6400cccb:	mov    ecx,DWORD PTR [esp+0x20]
6400cccf:	cmp    DWORD PTR [ecx+0x18],0x2
6400ccd3:	jne    0x6400ccec
6400ccd5:	mov    esi,DWORD PTR [esp+0x38]
6400ccd9:	and    esi,0x3000000
6400ccdf:	cmp    esi,0x1000000
6400cce5:	jne    0x6400ccec
6400cce7:	push   edx
6400cce8:	push   0x40
6400ccea:	jmp    0x6400cc84
6400ccec:	test   al,0x8
6400ccee:	mov    eax,ebx
6400ccf0:	je     0x6400ccfa
6400ccf2:	or     DWORD PTR [ebp+0x4],edi
6400ccf5:	push   edx
6400ccf6:	push   0x40
6400ccf8:	jmp    0x6400cc86
6400ccfa:	add    edx,0x10
6400ccfd:	push   edx
6400ccfe:	push   0x20
6400cd00:	jmp    0x6400cc86
6400cd02:	test   al,0x1
6400cd04:	mov    eax,DWORD PTR [esp+0x34]
6400cd08:	je     0x6400cd14
6400cd0a:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd11:	add    eax,0x8
6400cd14:	mov    edx,DWORD PTR [esp+0x20]
6400cd18:	cmp    DWORD PTR [edx+0x18],0x2
6400cd1c:	jne    0x6400cd26
6400cd1e:	push   eax
6400cd1f:	push   0x40
6400cd21:	jmp    0x6400cc84
6400cd26:	add    eax,0x10
6400cd29:	push   eax
6400cd2a:	jmp    0x6400cc82
6400cd2f:	add    edx,0x53
6400cd32:	push   edx
6400cd33:	push   0x40
6400cd35:	jmp    0x6400cc84
6400cd3a:	mov    eax,DWORD PTR [esp+0x34]
6400cd3e:	add    eax,0x53
6400cd41:	push   eax
6400cd42:	push   0x40
6400cd44:	jmp    0x6400cc84
6400cd49:	xor    eax,eax
6400cd4b:	mov    DWORD PTR [esp+0x10],eax
6400cd4f:	mov    DWORD PTR [esp+0x14],eax
6400cd53:	mov    edx,eax
6400cd55:	test   al,0x4
6400cd57:	je     0x6400cd63
6400cd59:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd60:	add    edx,0x8
6400cd63:	add    edx,0x5b
6400cd66:	push   edx
6400cd67:	push   0x80
6400cd6c:	jmp    0x6400cc84
6400cd71:	test   al,0x1
6400cd73:	je     0x6400cd81
6400cd75:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd7c:	add    DWORD PTR [esp+0x34],0x8
6400cd81:	mov    ecx,DWORD PTR [esp+0x34]
6400cd85:	add    ecx,0x5b
6400cd88:	push   ecx
6400cd89:	push   0x80
6400cd8e:	jmp    0x6400cc84
6400cd93:	test   al,0x4
6400cd95:	mov    eax,DWORD PTR [esp+0x20]
6400cd99:	je     0x6400cda7
6400cd9b:	or     DWORD PTR [ebp+0x4],0x2000000
6400cda2:	add    edx,0x8
6400cda5:	jmp    0x6400cdba
6400cda7:	cmp    DWORD PTR [eax+0x18],0x1
6400cdab:	jne    0x6400cdba
6400cdad:	test   BYTE PTR [ebp+0x0],0x10
6400cdb1:	je     0x6400cdba
6400cdb3:	add    edx,0x8
6400cdb6:	or     DWORD PTR [ebp+0x4],0x10
6400cdba:	cmp    edx,0x9
6400cdbd:	jae    0x6400c878
6400cdc3:	cmp    edx,0x1
6400cdc6:	je     0x6400c878
6400cdcc:	cmp    edx,0x5
6400cdcf:	jb     0x6400cdda
6400cdd1:	cmp    edx,0x7
6400cdd4:	jbe    0x6400c878
6400cdda:	mov    BYTE PTR [ebx],0x1
6400cddd:	mov    eax,DWORD PTR [eax+0x18]
6400cde0:	sub    eax,0x2
6400cde3:	neg    eax
6400cde5:	sbb    eax,eax
6400cde7:	and    eax,0xffffffe0
6400cdea:	add    eax,0x40
6400cded:	add    dl,0x7b
6400cdf0:	mov    WORD PTR [ebx+0x2],ax
6400cdf4:	mov    BYTE PTR [ebx+0x1],dl
6400cdf7:	jmp    0x6400cc9b
6400cdfc:	cmp    edx,0x4
6400cdff:	je     0x6400c878
6400ce05:	cmp    edx,0x5
6400ce08:	je     0x6400c878
6400ce0e:	test   al,0x4
6400ce10:	jne    0x6400c878
6400ce16:	mov    ecx,DWORD PTR [esp+0x20]
6400ce1a:	mov    BYTE PTR [ebx],0x1
6400ce1d:	mov    eax,DWORD PTR [ecx+0x18]
6400ce20:	sub    eax,0x2
6400ce23:	neg    eax
6400ce25:	sbb    eax,eax
6400ce27:	and    eax,0xffffffe0
6400ce2a:	add    eax,0x40
6400ce2d:	sub    dl,0x7c
6400ce30:	mov    WORD PTR [ebx+0x2],ax
6400ce34:	mov    BYTE PTR [ebx+0x1],dl
6400ce37:	jmp    0x6400cc9b
6400ce3c:	cmp    DWORD PTR [esp+0x44],0x0
6400ce41:	je     0x6400ce4c
6400ce43:	cmp    edx,0x1
6400ce46:	je     0x6400c878
6400ce4c:	cmp    edx,0x5
6400ce4f:	ja     0x6400c878
6400ce55:	add    edx,0x44
6400ce58:	push   edx
6400ce59:	push   0x10
6400ce5b:	jmp    0x6400cc84
6400ce60:	mov    eax,DWORD PTR [esp+0x38]
6400ce64:	mov    BYTE PTR [ebx],0x1
6400ce67:	mov    WORD PTR [ebx+0x2],0x10
6400ce6d:	or     DWORD PTR [ebp+0x4],0x2000
6400ce74:	and    eax,0x1f80
6400ce79:	cmp    eax,0x400
6400ce7e:	ja     0x6400cebf
6400ce80:	je     0x6400ceb6
6400ce82:	cmp    eax,0x80
6400ce87:	je     0x6400cead
6400ce89:	cmp    eax,0x100
6400ce8e:	je     0x6400cea4
6400ce90:	cmp    eax,0x200
6400ce95:	jne    0x6400cc8d
6400ce9b:	mov    BYTE PTR [ebx+0x1],0x47
6400ce9f:	jmp    0x6400cc8d
6400cea4:	mov    BYTE PTR [ebx+0x1],0x46
6400cea8:	jmp    0x6400cc8d
6400cead:	mov    BYTE PTR [ebx+0x1],0x45
6400ceb1:	jmp    0x6400cc8d
6400ceb6:	mov    BYTE PTR [ebx+0x1],0x44
6400ceba:	jmp    0x6400cc8d
6400cebf:	cmp    eax,0x800
6400cec4:	je     0x6400ceda
6400cec6:	cmp    eax,0x1000
6400cecb:	jne    0x6400cc8d
6400ced1:	mov    BYTE PTR [ebx+0x1],0x49
6400ced5:	jmp    0x6400cc8d
6400ceda:	mov    BYTE PTR [ebx+0x1],0x48
6400cede:	jmp    0x6400cc8d
6400cee3:	push   0x30
6400cee5:	push   0x8
6400cee7:	jmp    0x6400cc84
6400ceec:	mov    eax,DWORD PTR [esp+0x3c]
6400cef0:	test   eax,eax
6400cef2:	jne    0x6400cf04
6400cef4:	or     DWORD PTR [ebp+0x4],0x2000
6400cefb:	push   0x20
6400cefd:	push   0x10
6400ceff:	jmp    0x6400cc84
6400cf04:	cmp    eax,0x1
6400cf07:	jne    0x6400cf17
6400cf09:	or     DWORD PTR [ebp+0x4],0x2000
6400cf10:	push   0x10
6400cf12:	jmp    0x6400cc82
6400cf17:	mov    eax,DWORD PTR [esp+0x38]
6400cf1b:	not    eax
6400cf1d:	test   eax,0x1000000
6400cf22:	je     0x6400cf2b
6400cf24:	or     DWORD PTR [ebp+0x4],0x2000000
6400cf2b:	push   0x0
6400cf2d:	push   0x40
6400cf2f:	jmp    0x6400cc84
6400cf34:	or     DWORD PTR [ebp+0x4],0x2000
6400cf3b:	cmp    DWORD PTR [esp+0x3c],0x0
6400cf40:	mov    esi,DWORD PTR [esp+0x20]
6400cf44:	jne    0x6400cf7f
6400cf46:	add    DWORD PTR [esi+0x14],0xfffffffc
6400cf4a:	js     0x6400c878
6400cf50:	push   0x9
6400cf52:	mov    edx,0x10
6400cf57:	mov    eax,ebx
6400cf59:	call   0x6400bf60
6400cf5e:	mov    ecx,DWORD PTR [esi+0x10]
6400cf61:	movzx  edx,WORD PTR [ecx]
6400cf64:	mov    eax,DWORD PTR [esp+0x24]
6400cf68:	mov    DWORD PTR [eax+0x34],edx
6400cf6b:	mov    ecx,DWORD PTR [esi+0x10]
6400cf6e:	mov    dx,WORD PTR [ecx+0x2]
6400cf72:	mov    WORD PTR [eax+0x30],dx
6400cf76:	add    DWORD PTR [esi+0x10],0x4
6400cf7a:	jmp    0x6400cc8d
6400cf7f:	add    DWORD PTR [esi+0x14],0xfffffffa
6400cf83:	js     0x6400c878
6400cf89:	push   0x9
6400cf8b:	mov    edx,0x20
6400cf90:	mov    eax,ebx
6400cf92:	call   0x6400bf60
6400cf97:	mov    eax,DWORD PTR [esi+0x10]
6400cf9a:	mov    ecx,DWORD PTR [eax]
6400cf9c:	mov    eax,DWORD PTR [esp+0x24]
6400cfa0:	mov    DWORD PTR [eax+0x34],ecx
6400cfa3:	mov    edx,DWORD PTR [esi+0x10]
6400cfa6:	mov    cx,WORD PTR [edx+0x4]
6400cfaa:	mov    WORD PTR [eax+0x30],cx
6400cfae:	add    DWORD PTR [esi+0x10],0x6
6400cfb2:	jmp    0x6400cc8d
6400cfb7:	cmp    esi,0x28
6400cfba:	push   0x8
6400cfbc:	mov    eax,ebx
6400cfbe:	jne    0x6400cfe7
6400cfc0:	lea    edx,[esi-0x20]
6400cfc3:	call   0x6400bf60
6400cfc8:	lea    edi,[esi-0x27]
6400cfcb:	mov    esi,DWORD PTR [esp+0x24]
6400cfcf:	mov    ecx,DWORD PTR [esp+0x20]
6400cfd3:	add    esi,0x30
6400cfd6:	call   0x6400c020
6400cfdb:	test   eax,eax
6400cfdd:	jne    0x6400d029
6400cfdf:	pop    edi
6400cfe0:	pop    esi
6400cfe1:	pop    ebp
6400cfe2:	pop    ebx
6400cfe3:	add    esp,0xc
6400cfe6:	ret    
6400cfe7:	or     DWORD PTR [ebp+0x4],0x2000
6400cfee:	cmp    DWORD PTR [esp+0x40],0x0
6400cff3:	jne    0x6400d004
6400cff5:	mov    edx,0x10
6400cffa:	call   0x6400bf60
6400cfff:	lea    edi,[edx-0xe]
6400d002:	jmp    0x6400cfcb
6400d004:	mov    edx,0x20
6400d009:	call   0x6400bf60
6400d00e:	mov    esi,DWORD PTR [esp+0x24]
6400d012:	mov    ecx,DWORD PTR [esp+0x20]
6400d016:	add    esi,0x30
6400d019:	lea    edi,[edx-0x1c]
6400d01c:	call   0x6400c020
6400d021:	test   eax,eax
6400d023:	je     0x6400c878
6400d029:	mov    edx,DWORD PTR [esp+0x28]
6400d02d:	movzx  eax,WORD PTR [edx+0x4]
6400d031:	cmp    ax,0x18
6400d035:	jb     0x6400cc8d
6400d03b:	cmp    ax,0x27
6400d03f:	ja     0x6400cc8d
6400d045:	mov    eax,DWORD PTR [ebp+0x0]
6400d048:	test   al,al
6400d04a:	jns    0x6400d061
6400d04c:	mov    eax,DWORD PTR [esp+0x24]
6400d050:	or     DWORD PTR [ebp+0x4],0x80
6400d057:	or     WORD PTR [eax+0xa],0x10
6400d05c:	jmp    0x6400cc8d
6400d061:	test   eax,0x200
6400d066:	je     0x6400cc8d
6400d06c:	mov    eax,DWORD PTR [esp+0x24]
6400d070:	or     DWORD PTR [ebp+0x4],0x200
6400d077:	or     WORD PTR [eax+0xa],0x8
6400d07c:	jmp    0x6400cc8d
6400d081:	mov    WORD PTR [ebx+0x2],0x8
6400d087:	cmp    WORD PTR [ebx+0x2],0x0
6400d08c:	mov    BYTE PTR [ebx],0x5
6400d08f:	jne    0x6400d0ba
6400d091:	mov    eax,DWORD PTR [esp+0x3c]
6400d095:	sub    eax,0x0
6400d098:	je     0x6400d0b4
6400d09a:	sub    eax,0x1
6400d09d:	je     0x6400d0ac
6400d09f:	sub    eax,0x1
6400d0a2:	jne    0x6400d0ba
6400d0a4:	mov    WORD PTR [ebx+0x2],0x40
6400d0aa:	jmp    0x6400d0ba
6400d0ac:	mov    WORD PTR [ebx+0x2],0x20
6400d0b2:	jmp    0x6400d0ba
6400d0b4:	mov    WORD PTR [ebx+0x2],0x10
6400d0ba:	mov    eax,DWORD PTR [esp+0x24]
6400d0be:	mov    edi,DWORD PTR [esp+0x20]
6400d0c2:	mov    ecx,DWORD PTR [edi+0x18]
6400d0c5:	push   eax
6400d0c6:	push   ecx
6400d0c7:	push   ebp
6400d0c8:	push   0x200
6400d0cd:	call   0x6400dd40
6400d0d2:	mov    eax,DWORD PTR [esp+0x50]
6400d0d6:	add    esp,0x10
6400d0d9:	test   eax,eax
6400d0db:	jne    0x6400d0fb
6400d0dd:	mov    eax,DWORD PTR [esp+0x24]
6400d0e1:	or     DWORD PTR [ebp+0x4],0x4000
6400d0e8:	mov    BYTE PTR [eax+0xf],0x10
6400d0ec:	lea    ecx,[eax+0x28]
6400d0ef:	mov    esi,0x2
6400d0f4:	mov    eax,edi
6400d0f6:	jmp    0x6400ca9e
6400d0fb:	cmp    eax,0x1
6400d0fe:	mov    eax,DWORD PTR [esp+0x24]
6400d102:	lea    ecx,[eax+0x28]
6400d105:	jne    0x6400d11e
6400d107:	or     DWORD PTR [ebp+0x4],0x4000
6400d10e:	mov    BYTE PTR [eax+0xf],0x20
6400d112:	mov    esi,0x4
6400d117:	mov    eax,edi
6400d119:	jmp    0x6400ca9e
6400d11e:	mov    BYTE PTR [eax+0xf],0x40
6400d122:	mov    esi,0x8
6400d127:	mov    eax,edi
6400d129:	jmp    0x6400ca9e
6400d12e:	push   0x2
6400d130:	mov    edx,0x8
6400d135:	mov    eax,ebx
6400d137:	call   0x6400bf60
6400d13c:	mov    edx,DWORD PTR [esp+0x24]
6400d140:	mov    BYTE PTR [edx+0x30],0x1
6400d144:	jmp    0x6400cc8d
6400d149:	push   0x31
6400d14b:	push   0x8
6400d14d:	jmp    0x6400cc84
6400d152:	mov    eax,DWORD PTR [esp+0x20]
6400d156:	mov    ecx,DWORD PTR [eax+0x10]
6400d159:	movzx  edx,BYTE PTR [ecx-0x1]
6400d15d:	and    edx,0x7
6400d160:	add    edx,0x4b
6400d163:	jmp    0x6400cc81
6400d168:	push   0x4b
6400d16a:	push   0x20
6400d16c:	push   0x1
6400d16e:	mov    eax,ebx
6400d170:	call   0x6400bf70
6400d175:	mov    eax,DWORD PTR [esp+0x20]
6400d179:	mov    ecx,DWORD PTR [eax+0x10]
6400d17c:	movzx  edx,BYTE PTR [ecx-0x1]
6400d180:	and    edx,0x7
6400d183:	add    edx,0x4b
6400d186:	push   edx
6400d187:	push   0x20
6400d189:	lea    eax,[ebx+0x4]
6400d18c:	jmp    0x6400cc86
6400d191:	mov    eax,DWORD PTR [esp+0x20]
6400d195:	mov    ecx,DWORD PTR [eax+0x10]
6400d198:	movzx  edx,BYTE PTR [ecx-0x1]
6400d19c:	and    edx,0x7
6400d19f:	add    edx,0x4b
6400d1a2:	push   edx
6400d1a3:	push   0x20
6400d1a5:	push   0x1
6400d1a7:	mov    eax,ebx
6400d1a9:	call   0x6400bf70
6400d1ae:	push   0x4b
6400d1b0:	push   0x20
6400d1b2:	lea    eax,[ebx+0x4]
6400d1b5:	jmp    0x6400cc86
6400d1ba:	push   0x1
6400d1bc:	mov    edx,0x8
6400d1c1:	mov    eax,ebx
6400d1c3:	call   0x6400bf60
6400d1c8:	mov    eax,DWORD PTR [esp+0x20]
6400d1cc:	mov    ecx,DWORD PTR [eax+0x10]
6400d1cf:	movzx  eax,BYTE PTR [ecx-0x1]
6400d1d3:	and    eax,0x7
6400d1d6:	test   BYTE PTR [esp+0x14],0x1
6400d1db:	je     0x6400d1f3
6400d1dd:	or     DWORD PTR [ebp+0x4],0x2000000
6400d1e4:	add    eax,edx
6400d1e6:	call   0x6400bf50
6400d1eb:	mov    BYTE PTR [ebx+0x1],al
6400d1ee:	jmp    0x6400cc8d
6400d1f3:	cmp    DWORD PTR [ebp+0x18],0x1
6400d1f7:	jne    0x6400cc15
6400d1fd:	or     DWORD PTR [ebp+0x4],0x2000000
6400d204:	call   0x6400bf50
6400d209:	mov    BYTE PTR [ebx+0x1],al
6400d20c:	jmp    0x6400cc8d
6400d211:	mov    edx,DWORD PTR [esp+0x20]
6400d215:	mov    ecx,DWORD PTR [edx+0x10]
6400d218:	movzx  ecx,BYTE PTR [ecx-0x1]
6400d21c:	mov    edx,DWORD PTR [esp+0x3c]
6400d220:	and    ecx,0x7
6400d223:	sub    edx,0x0
6400d226:	je     0x6400d295
6400d228:	sub    edx,0x1
6400d22b:	je     0x6400d26e
6400d22d:	sub    edx,0x1
6400d230:	jne    0x6400cc8d
6400d236:	mov    edx,DWORD PTR [esp+0x38]
6400d23a:	test   edx,0x1000000
6400d240:	mov    edi,0x2000000
6400d245:	je     0x6400d25d
6400d247:	test   edi,edx
6400d249:	jne    0x6400d25d
6400d24b:	test   al,0x1
6400d24d:	je     0x6400d266
6400d24f:	or     DWORD PTR [ebp+0x4],edi
6400d252:	add    ecx,0x8
6400d255:	push   ecx
6400d256:	push   0x40
6400d258:	jmp    0x6400cc84
6400d25d:	or     DWORD PTR [ebp+0x4],edi
6400d260:	and    eax,0x1
6400d263:	lea    ecx,[ecx+eax*8]
6400d266:	push   ecx
6400d267:	push   0x40
6400d269:	jmp    0x6400cc84
6400d26e:	test   al,0x1
6400d270:	je     0x6400d285
6400d272:	or     DWORD PTR [ebp+0x4],0x2000000
6400d279:	add    ecx,0x8
6400d27c:	add    ecx,0x10
6400d27f:	push   ecx
6400d280:	jmp    0x6400cc82
6400d285:	or     DWORD PTR [ebp+0x4],0x2000
6400d28c:	add    ecx,0x10
6400d28f:	push   ecx
6400d290:	jmp    0x6400cc82
6400d295:	or     DWORD PTR [ebp+0x4],0x2000
6400d29c:	test   al,0x1
6400d29e:	mov    edx,DWORD PTR [ebp+0x4]
6400d2a1:	je     0x6400d2af
6400d2a3:	or     edx,0x2000000
6400d2a9:	mov    DWORD PTR [ebp+0x4],edx
6400d2ac:	add    ecx,0x8
6400d2af:	add    ecx,0x20
6400d2b2:	push   ecx
6400d2b3:	push   0x10
6400d2b5:	jmp    0x6400cc84
6400d2ba:	or     DWORD PTR [ebp+0x4],0x4000
6400d2c1:	mov    edx,DWORD PTR [esp+0x38]
6400d2c5:	test   dl,0x4
6400d2c8:	mov    BYTE PTR [ebx],0x6
6400d2cb:	je     0x6400d30c
6400d2cd:	or     DWORD PTR [ebp+0x4],0x2000
6400d2d4:	mov    ecx,DWORD PTR [esp+0x3c]
6400d2d8:	test   ecx,ecx
6400d2da:	mov    eax,DWORD PTR [ebp+0x4]
6400d2dd:	jne    0x6400d2e7
6400d2df:	mov    WORD PTR [ebx+0x2],0x10
6400d2e5:	jmp    0x6400d312
6400d2e7:	cmp    ecx,0x2
6400d2ea:	jne    0x6400d304
6400d2ec:	test   edx,0x1000000
6400d2f2:	je     0x6400d304
6400d2f4:	or     eax,0x2000000
6400d2f9:	mov    DWORD PTR [ebp+0x4],eax
6400d2fc:	mov    WORD PTR [ebx+0x2],0x40
6400d302:	jmp    0x6400d312
6400d304:	mov    WORD PTR [ebx+0x2],0x20
6400d30a:	jmp    0x6400d312
6400d30c:	mov    WORD PTR [ebx+0x2],0x8
6400d312:	mov    eax,DWORD PTR [esp+0x24]
6400d316:	mov    edx,DWORD PTR [esp+0x20]
6400d31a:	push   eax
6400d31b:	mov    BYTE PTR [eax+0xc],0x0
6400d31f:	mov    eax,DWORD PTR [edx+0x18]
6400d322:	push   eax
6400d323:	push   ebp
6400d324:	push   0x200
6400d329:	call   0x6400dd40
6400d32e:	mov    eax,DWORD PTR [esp+0x50]
6400d332:	add    esp,0x10
6400d335:	test   eax,eax
6400d337:	jne    0x6400d342
6400d339:	mov    BYTE PTR [ebx+0x1],0x26
6400d33d:	jmp    0x6400cc8d
6400d342:	sub    eax,0x1
6400d345:	neg    eax
6400d347:	sbb    al,al
6400d349:	and    al,0xf0
6400d34b:	add    al,0x16
6400d34d:	mov    BYTE PTR [ebx+0x1],al
6400d350:	jmp    0x6400cc8d
6400d355:	or     DWORD PTR [ebp+0x4],0x4000
6400d35c:	mov    edx,DWORD PTR [esp+0x38]
6400d360:	test   dl,0x4
6400d363:	mov    BYTE PTR [ebx],0x6
6400d366:	je     0x6400d3a7
6400d368:	or     DWORD PTR [ebp+0x4],0x2000
6400d36f:	mov    ecx,DWORD PTR [esp+0x3c]
6400d373:	test   ecx,ecx
6400d375:	mov    eax,DWORD PTR [ebp+0x4]
6400d378:	jne    0x6400d382
6400d37a:	mov    WORD PTR [ebx+0x2],0x10
6400d380:	jmp    0x6400d3ad
6400d382:	cmp    ecx,0x2
6400d385:	jne    0x6400d39f
6400d387:	test   edx,0x1000000
6400d38d:	je     0x6400d39f
6400d38f:	or     eax,0x2000000
6400d394:	mov    DWORD PTR [ebp+0x4],eax
6400d397:	mov    WORD PTR [ebx+0x2],0x40
6400d39d:	jmp    0x6400d3ad
6400d39f:	mov    WORD PTR [ebx+0x2],0x20
6400d3a5:	jmp    0x6400d3ad
6400d3a7:	mov    WORD PTR [ebx+0x2],0x8
6400d3ad:	cmp    DWORD PTR [esp+0x30],0x0
6400d3b2:	jne    0x6400d3c6
6400d3b4:	mov    ecx,DWORD PTR [esp+0x20]
6400d3b8:	cmp    DWORD PTR [ecx+0x18],0x2
6400d3bc:	je     0x6400d3c6
6400d3be:	mov    edx,DWORD PTR [esp+0x24]
6400d3c2:	mov    BYTE PTR [edx+0xc],0xc4
6400d3c6:	mov    eax,DWORD PTR [esp+0x40]
6400d3ca:	test   eax,eax
6400d3cc:	jne    0x6400d3d7
6400d3ce:	mov    BYTE PTR [ebx+0x1],0x27
6400d3d2:	jmp    0x6400cc8d
6400d3d7:	sub    eax,0x1
6400d3da:	neg    eax
6400d3dc:	sbb    al,al
6400d3de:	and    al,0xf0
6400d3e0:	add    al,0x17
6400d3e2:	mov    BYTE PTR [ebx+0x1],al
6400d3e5:	jmp    0x6400cc8d
6400d3ea:	push   0x22
6400d3ec:	push   0x10
6400d3ee:	jmp    0x6400cc84
6400d3f3:	push   0x11
6400d3f5:	jmp    0x6400cc82
6400d3fa:	mov    eax,DWORD PTR [esp+0x20]
6400d3fe:	or     DWORD PTR [ebp+0x4],0x4000
6400d405:	mov    edi,DWORD PTR [esp+0x24]
6400d409:	mov    ecx,DWORD PTR [eax+0x18]
6400d40c:	push   edi
6400d40d:	push   ecx
6400d40e:	push   ebp
6400d40f:	push   0x200
6400d414:	call   0x6400dd40
6400d419:	add    esp,0x10
6400d41c:	push   0x30
6400d41e:	push   0x8
6400d420:	push   0x7
6400d422:	mov    eax,ebx
6400d424:	call   0x6400bf70
6400d429:	mov    eax,DWORD PTR [esp+0x40]
6400d42d:	test   eax,eax
6400d42f:	jne    0x6400d43a
6400d431:	mov    BYTE PTR [edi+0xd],0x23
6400d435:	jmp    0x6400cc8d
6400d43a:	cmp    eax,0x1
6400d43d:	jne    0x6400d448
6400d43f:	mov    BYTE PTR [edi+0xd],0x13
6400d443:	jmp    0x6400cc8d
6400d448:	or     DWORD PTR [ebp+0x4],0x2000000
6400d44f:	mov    BYTE PTR [edi+0xd],0x3
6400d453:	jmp    0x6400cc8d
6400d458:	mov    eax,DWORD PTR [esp+0x40]
6400d45c:	cmp    eax,0x2
6400d45f:	jne    0x6400d46e
6400d461:	push   0x0
6400d463:	push   0x40
6400d465:	push   0x6
6400d467:	mov    eax,ebx
6400d469:	jmp    0x6400cc88
6400d46e:	or     DWORD PTR [ebp+0x4],0x4000
6400d475:	cmp    eax,0x1
6400d478:	mov    eax,ebx
6400d47a:	jne    0x6400d487
6400d47c:	push   0x10
6400d47e:	push   0x20
6400d480:	push   0x6
6400d482:	jmp    0x6400cc88
6400d487:	push   0x20
6400d489:	push   0x10
6400d48b:	push   0x6
6400d48d:	jmp    0x6400cc88
6400d492:	mov    edx,DWORD PTR [esp+0x18]
6400d496:	add    edx,0x5b
6400d499:	push   edx
6400d49a:	push   0x80
6400d49f:	jmp    0x6400cc84
6400d4a4:	mov    edi,DWORD PTR [esp+0x20]
6400d4a8:	add    DWORD PTR [edi+0x14],0xffffffff
6400d4ac:	js     0x6400c878
6400d4b2:	mov    esi,0x1
6400d4b7:	cmp    DWORD PTR [edi+0x18],esi
6400d4ba:	jne    0x6400d4ca
6400d4bc:	mov    eax,DWORD PTR [edi+0x10]
6400d4bf:	movzx  eax,BYTE PTR [eax]
6400d4c2:	shr    eax,0x4
6400d4c5:	and    eax,0x7
6400d4c8:	jmp    0x6400d4d3
6400d4ca:	mov    ecx,DWORD PTR [edi+0x10]
6400d4cd:	movzx  eax,BYTE PTR [ecx]
6400d4d0:	shr    eax,0x4
6400d4d3:	add    eax,0x5b
6400d4d6:	push   eax
6400d4d7:	push   0x80
6400d4dc:	push   esi
6400d4dd:	mov    eax,ebx
6400d4df:	call   0x6400bf70
6400d4e4:	add    DWORD PTR [edi+0x10],esi
6400d4e7:	jmp    0x6400cc8d
6400d4ec:	test   al,0x4
6400d4ee:	je     0x6400d4f3
6400d4f0:	add    edx,0x8
6400d4f3:	test   al,0x10
6400d4f5:	mov    eax,ebx
6400d4f7:	je     0x6400d507
6400d4f9:	add    edx,0x6b
6400d4fc:	push   edx
6400d4fd:	push   0x100
6400d502:	jmp    0x6400cc86
6400d507:	add    edx,0x5b
6400d50a:	push   edx
6400d50b:	push   0x80
6400d510:	jmp    0x6400cc86
6400d515:	mov    edi,DWORD PTR [esp+0x20]
6400d519:	add    DWORD PTR [edi+0x14],0xffffffff
6400d51d:	js     0x6400c878
6400d523:	mov    esi,0x1
6400d528:	cmp    DWORD PTR [edi+0x18],esi
6400d52b:	jne    0x6400d53b
6400d52d:	mov    edx,DWORD PTR [edi+0x10]
6400d530:	movzx  eax,BYTE PTR [edx]
6400d533:	shr    eax,0x4
6400d536:	and    eax,0x7
6400d539:	jmp    0x6400d544
6400d53b:	mov    eax,DWORD PTR [edi+0x10]
6400d53e:	movzx  eax,BYTE PTR [eax]
6400d541:	shr    eax,0x4
6400d544:	test   BYTE PTR [ebp+0x28],0x10
6400d548:	je     0x6400d4d3
6400d54a:	add    eax,0x6b
6400d54d:	push   eax
6400d54e:	push   0x100
6400d553:	push   esi
6400d554:	mov    eax,ebx
6400d556:	call   0x6400bf70
6400d55b:	add    DWORD PTR [edi+0x10],esi
6400d55e:	jmp    0x6400cc8d
6400d563:	test   al,0x4
6400d565:	je     0x6400d56a
6400d567:	add    edx,0x8
6400d56a:	add    edx,0x6b
6400d56d:	push   edx
6400d56e:	push   0x100
6400d573:	jmp    0x6400cc84
6400d578:	mov    ecx,DWORD PTR [esp+0x18]
6400d57c:	add    ecx,0x6b
6400d57f:	push   ecx
6400d580:	push   0x100
6400d585:	jmp    0x6400cc84
6400d58a:	test   al,0x10
6400d58c:	je     0x6400d5a0
6400d58e:	mov    edx,DWORD PTR [esp+0x18]
6400d592:	add    edx,0x6b
6400d595:	push   edx
6400d596:	push   0x100
6400d59b:	jmp    0x6400cc84
6400d5a0:	mov    eax,DWORD PTR [esp+0x18]
6400d5a4:	add    eax,0x5b
6400d5a7:	push   eax
6400d5a8:	push   0x80
6400d5ad:	jmp    0x6400cc84
6400d5b2:	test   al,0x4
6400d5b4:	je     0x6400d5b9
6400d5b6:	add    edx,0x8
6400d5b9:	test   al,0x8
6400d5bb:	je     0x6400cc7e
6400d5c1:	push   edx
6400d5c2:	push   0x40
6400d5c4:	jmp    0x6400cc84
6400d5c9:	lea    ecx,[ecx+0x0]
6400d5cc:	sub    eax,ecx
6400d5ce:	add    BYTE PTR [ebx+ebx*1-0x38],ah
6400d5d2:	add    BYTE PTR [ecx+ebx*8-0x39],ah
6400d5d6:	add    BYTE PTR [edx+edx*2-0x38],ah
6400d5da:	add    BYTE PTR [ebx+eiz*8-0x39],ah
6400d5de:	add    BYTE PTR [eax+esi*1-0x38],ah
6400d5e2:	add    BYTE PTR [ebp+eiz*2-0x38],ah
6400d5e6:	add    BYTE PTR [edx+eax*2-0x38],ah
6400d5ea:	add    BYTE PTR [ebx+ecx*8-0x39],ah
6400d5ee:	add    BYTE PTR [ecx+eax*8-0x39],ah
6400d5f2:	add    BYTE PTR [edi+ebx*4-0x39],ah
6400d5f6:	add    BYTE PTR [ecx+ebx*2-0x38],ah
6400d5fa:	add    BYTE PTR [esp+ebp*8-0x38],ah
6400d5fe:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d602:	add    al,BYTE PTR [ebx]
6400d604:	or     al,0xc
6400d606:	or     al,0xc
6400d608:	or     al,0xc
6400d60a:	or     al,0xc
6400d60c:	or     al,0xc
6400d60e:	or     al,0xc
6400d610:	or     al,0x4
6400d612:	or     al,0x5
6400d614:	or     al,0xc
6400d616:	push   es
6400d617:	pop    es
6400d618:	add    DWORD PTR [eax],ecx
6400d61a:	add    cl,BYTE PTR [ecx]
6400d61c:	or     cl,BYTE PTR [esp+ecx*1]
6400d61f:	or     al,0xc
6400d621:	or     al,0xc
6400d623:	or     al,0xc
6400d625:	or     al,0xc
6400d627:	or     al,0xc
6400d629:	or     al,0xc
6400d62b:	or     al,0xc
6400d62d:	or     al,0xc
6400d62f:	or     al,0xc
6400d631:	or     al,0xc
6400d633:	or     al,0xc
6400d635:	or     al,0xc
6400d637:	or     al,0xc
6400d639:	or     al,0xc
6400d63b:	or     al,0xc
6400d63d:	or     al,0xc
6400d63f:	or     al,0xc
6400d641:	or     al,0xc
6400d643:	or     al,0xc
6400d645:	or     al,0xc
6400d647:	or     al,0xb
6400d649:	lea    ecx,[ecx+0x0]
6400d64c:	sub    al,0xca
6400d64e:	add    BYTE PTR [ecx+ebx*2-0x37],ah
6400d652:	add    BYTE PTR [edi+ecx*1-0x37],ah
6400d656:	add    BYTE PTR [ebp+esi*2-0x37],ah
6400d65a:	add    BYTE PTR [ebx+ebp*4-0x37],ah
6400d65e:	add    BYTE PTR [ebx+eiz*2-0x37],ah
6400d662:	add    BYTE PTR [eax+eiz*2-0x37],ah
6400d666:	add    BYTE PTR [esi+ebx*1-0x37],ah
6400d66a:	add    BYTE PTR [edi+eax*2-0x37],ah
6400d66e:	add    BYTE PTR [esi+edi*1-0x36],ah
6400d672:	add    BYTE PTR [ecx+ecx*8-0x37],ah
6400d676:	add    BYTE PTR [eax+edx*2-0x36],ah
6400d67a:	add    BYTE PTR [ecx+eiz*8-0x37],ah
6400d67e:	add    BYTE PTR [edx+edi*8-0x37],ah
6400d682:	add    BYTE PTR [ebx+edx*1-0x36],ah
6400d686:	add    BYTE PTR [edx+eiz*2-0x36],ah
6400d68a:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d68e:	add    al,BYTE PTR [ebx]
6400d690:	add    al,0xf
6400d692:	(bad)  
6400d693:	(bad)  
6400d694:	sldt   WORD PTR ds:0xf060500
6400d69b:	(bad)  
6400d69c:	(bad)  
6400d69d:	(bad)  
6400d69e:	(bad)  
6400d69f:	(bad)  
6400d6a0:	(bad)  
6400d6a1:	(bad)  
6400d6a2:	(bad)  
6400d6a3:	(bad)  
6400d6a4:	(bad)  
6400d6a5:	(bad)  
6400d6a6:	(bad)  
6400d6a7:	(bad)  
6400d6a8:	(bad)  
6400d6a9:	(bad)  
6400d6aa:	(bad)  
6400d6ab:	(bad)  
6400d6ac:	(bad)  
6400d6ad:	(bad)  
6400d6ae:	(bad)  
6400d6af:	(bad)  
6400d6b0:	(bad)  
6400d6b1:	(bad)  
6400d6b2:	(bad)  
6400d6b3:	(bad)  
6400d6b4:	(bad)  
6400d6b5:	(bad)  
6400d6b6:	(bad)  
6400d6b7:	(bad)  
6400d6b8:	(bad)  
6400d6b9:	(bad)  
6400d6ba:	(bad)  
6400d6bb:	(bad)  
6400d6bc:	(bad)  
6400d6bd:	(bad)  
6400d6be:	sysret 
6400d6c0:	or     BYTE PTR [edi],cl
6400d6c2:	syscall 
6400d6c4:	pop    es
6400d6c5:	or     BYTE PTR [ecx],cl
6400d6c7:	sysret 
6400d6c9:	add    BYTE PTR ds:0xf0a0a0f,al
6400d6cf:	(bad)  
6400d6d0:	(bad)  
6400d6d1:	(bad)  
6400d6d2:	ud2    
6400d6d4:	(bad)  
6400d6d5:	(bad)  
6400d6d7:	or     eax,0x498d0e
6400d6dc:	or     dl,0x0
6400d6df:	fs ret 0xca
6400d6e3:	fs mov bl,0xca
6400d6e6:	add    BYTE PTR [ecx+ebx*1-0x35],ah
6400d6ea:	add    BYTE PTR [esp+ebx*2-0x35],ah
6400d6ee:	add    BYTE PTR [esi+esi*4-0x35],ah
6400d6f2:	add    BYTE PTR [ebp+edi*4-0x35],ah
6400d6f6:	add    BYTE PTR [esp+eax*8-0x35],ah
6400d6fa:	add    BYTE PTR [esi+ebx*8-0x35],ah
6400d6fe:	add    BYTE PTR [eax+ebp*2-0x34],ah
6400d702:	add    BYTE PTR [esp+ebx*1-0x34],ah
6400d706:	add    BYTE PTR [eax+esi*2-0x34],ah
6400d70a:	add    BYTE PTR [esp+edi*4-0x34],ah
6400d70e:	add    BYTE PTR [edx+eax*1-0x33],ah
6400d712:	add    BYTE PTR [ebx+edx*4-0x33],ah
6400d716:	add    BYTE PTR [esp+edi*8-0x33],ah
6400d71a:	add    BYTE PTR [esp+edi*1-0x32],ah
6400d71e:	add    BYTE PTR [eax+eiz*2-0x32],ah
6400d722:	add    BYTE PTR [ebx+eiz*8-0x32],ah
6400d726:	add    BYTE PTR [ebx+edi*8-0x32],ah
6400d72a:	add    BYTE PTR [esp+ebp*8-0x32],ah
6400d72e:	add    BYTE PTR [esp+esi*1-0x31],ah
6400d732:	add    BYTE PTR [edi+esi*4-0x31],ah
6400d736:	add    BYTE PTR [ecx+eax*4-0x30],ah
6400d73a:	add    BYTE PTR [edi+eax*4-0x30],ah
6400d73e:	add    BYTE PTR [esi+ebp*1-0x2f],ah
6400d742:	add    BYTE PTR [ecx+ecx*2-0x2f],ah
6400d746:	add    BYTE PTR [edx+edi*4-0x2f],ah
6400d74a:	add    BYTE PTR [ecx+edx*1-0x2e],ah
6400d74e:	add    BYTE PTR [edx+edi*4-0x2e],ah
6400d752:	add    BYTE PTR [ebp+edx*2-0x2d],ah
6400d756:	add    BYTE PTR [edx+edi*8-0x2d],ah
6400d75a:	add    BYTE PTR [eax+ebx*2-0x2c],ah
6400d75e:	add    BYTE PTR [edx+ebp*8-0x2d],ah
6400d762:	add    BYTE PTR [ebx+esi*8-0x2d],ah
6400d766:	add    BYTE PTR [edx+edx*2-0x2f],ah
6400d76a:	add    BYTE PTR [eax+ebp*2-0x2f],ah
6400d76e:	add    BYTE PTR [ecx+edx*4-0x2f],ah
6400d772:	add    BYTE PTR [edi+ebp*1-0x33],ah
6400d776:	add    BYTE PTR [edx+edi*1-0x33],ah
6400d77a:	add    BYTE PTR [ebp+edx*2-0x33],ah
6400d77e:	add    BYTE PTR [ecx+esi*2-0x33],ah
6400d782:	add    BYTE PTR [ecx+ecx*2-0x33],ah
6400d786:	add    BYTE PTR [edx+esi*4-0x2b],ah
6400d78a:	add    BYTE PTR [edx+edx*4-0x2c],ah
6400d78e:	add    BYTE PTR [esp+eiz*4-0x2c],ah
6400d792:	add    BYTE PTR [esp+ebp*8-0x2c],ah
6400d796:	add    BYTE PTR [ebp+edx*1-0x2b],ah
6400d79a:	add    BYTE PTR [ebx+eiz*2-0x2b],ah
6400d79e:	add    BYTE PTR [eax+edi*2-0x2b],ah
6400d7a2:	add    BYTE PTR [edx+ecx*4-0x2b],ah
6400d7a6:	add    BYTE PTR [eax+edi*2-0x38],ah
6400d7aa:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d7ae:	add    al,BYTE PTR [ebx]
6400d7b0:	add    al,0x5
6400d7b2:	push   es
6400d7b3:	pop    es
6400d7b4:	or     BYTE PTR [ecx],cl
6400d7b6:	or     cl,BYTE PTR [ebx]
6400d7b8:	or     al,0xd
6400d7ba:	xor    esi,DWORD PTR [ebx]
6400d7bc:	xor    esi,DWORD PTR [ebx]
6400d7be:	xor    esi,DWORD PTR [ebx]
6400d7c0:	xor    esi,DWORD PTR [ebx]
6400d7c2:	xor    esi,DWORD PTR [ebx]
6400d7c4:	xor    esi,DWORD PTR [ebx]
6400d7c6:	xor    esi,DWORD PTR [ebx]
6400d7c8:	push   cs
6400d7c9:	movups xmm2,XMMWORD PTR [ecx]
6400d7cc:	adc    dl,BYTE PTR [ebx]
6400d7ce:	adc    al,0x14
6400d7d0:	xor    edx,DWORD PTR ds:0x33161633
6400d7d6:	xor    esi,DWORD PTR [ebx]
6400d7d8:	xor    esi,DWORD PTR [ebx]
6400d7da:	xor    esi,DWORD PTR [ebx]
6400d7dc:	pop    ss
6400d7dd:	sbb    BYTE PTR [ecx],bl
6400d7df:	sbb    bl,BYTE PTR [ebx]
6400d7e1:	sbb    al,0x1d
6400d7e3:	push   ds
6400d7e4:	pop    ds
6400d7e5:	and    BYTE PTR [ecx],ah
6400d7e7:	and    ah,BYTE PTR [ebx]
6400d7e9:	and    al,0x25
6400d7eb:	es daa 
6400d7ed:	xor    esi,DWORD PTR [ebx]
6400d7ef:	sub    BYTE PTR [ecx],ch
6400d7f1:	xor    esi,DWORD PTR [ebx]
6400d7f3:	xor    esi,DWORD PTR [ebx]
6400d7f5:	sub    dh,BYTE PTR [ebx]
6400d7f7:	xor    esi,DWORD PTR [ebx]
6400d7f9:	sub    esi,DWORD PTR [ebx]
6400d7fb:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
6400d802:	xor    DWORD PTR [edx],esi
6400d804:	int3   
6400d805:	int3   
6400d806:	int3   
6400d807:	int3   
6400d808:	int3   
6400d809:	int3   
6400d80a:	int3   
6400d80b:	int3   
6400d80c:	int3   
6400d80d:	int3   
6400d80e:	int3   
6400d80f:	int3   
6400d810:	mov    eax,DWORD PTR [esp+0x4]
6400d814:	add    eax,0xffffffda
6400d817:	cmp    eax,0xcd
6400d81c:	ja     0x6400d83d
6400d81e:	movzx  eax,BYTE PTR [eax+0x6400d84c]
6400d825:	jmp    DWORD PTR [eax*4+0x6400d840]
6400d82c:	xor    eax,eax
6400d82e:	cmp    DWORD PTR [esp+0x8],0x2
6400d833:	sete   al
6400d836:	ret    
6400d837:	mov    eax,0x1
6400d83c:	ret    
6400d83d:	xor    eax,eax
6400d83f:	ret    
6400d840:	aaa    
6400d841:	fadd   DWORD PTR [eax]
6400d843:	fs sub al,0xd8
6400d846:	add    BYTE PTR [ebp+edi*1-0x28],ah
6400d84a:	add    BYTE PTR [eax+eax*1+0x2],ah
6400d84e:	add    al,BYTE PTR [edx]
6400d850:	add    al,BYTE PTR [edx]
6400d852:	add    al,BYTE PTR [edx]
6400d854:	add    BYTE PTR [edx],al
6400d856:	add    al,BYTE PTR [edx]
6400d858:	add    al,BYTE PTR [edx]
6400d85a:	add    al,BYTE PTR [edx]
6400d85c:	add    BYTE PTR [edx],al
6400d85e:	add    al,BYTE PTR [edx]
6400d860:	add    al,BYTE PTR [edx]
6400d862:	add    al,BYTE PTR [edx]
6400d864:	add    BYTE PTR [edx],al
6400d866:	add    DWORD PTR [ecx],eax
6400d868:	add    DWORD PTR [ecx],eax
6400d86a:	add    DWORD PTR [ecx],eax
6400d86c:	add    DWORD PTR [ecx],eax
6400d86e:	add    DWORD PTR [ecx],eax
6400d870:	add    DWORD PTR [ecx],eax
6400d872:	add    DWORD PTR [ecx],eax
6400d874:	add    DWORD PTR [ecx],eax
6400d876:	add    al,BYTE PTR [edx]
6400d878:	add    al,BYTE PTR [edx]
6400d87a:	add    al,BYTE PTR [edx]
6400d87c:	add    al,BYTE PTR [edx]
6400d87e:	add    al,BYTE PTR [edx]
6400d880:	add    al,BYTE PTR [edx]
6400d882:	add    al,BYTE PTR [edx]
6400d884:	add    al,BYTE PTR [edx]
6400d886:	add    al,BYTE PTR [edx]
6400d888:	add    al,BYTE PTR [edx]
6400d88a:	add    BYTE PTR [eax],al
6400d88c:	add    BYTE PTR [eax],al
6400d88e:	add    al,BYTE PTR [edx]
6400d890:	add    al,BYTE PTR [edx]
6400d892:	add    al,BYTE PTR [edx]
6400d894:	add    al,BYTE PTR [edx]
6400d896:	add    al,BYTE PTR [edx]
6400d898:	add    al,BYTE PTR [edx]
6400d89a:	add    al,BYTE PTR [edx]
6400d89c:	add    al,BYTE PTR [edx]
6400d89e:	add    al,BYTE PTR [edx]
6400d8a0:	add    al,BYTE PTR [edx]
6400d8a2:	add    al,BYTE PTR [edx]
6400d8a4:	add    al,BYTE PTR [edx]
6400d8a6:	add    al,BYTE PTR [edx]
6400d8a8:	add    al,BYTE PTR [edx]
6400d8aa:	add    al,BYTE PTR [edx]
6400d8ac:	add    al,BYTE PTR [edx]
6400d8ae:	add    al,BYTE PTR [edx]
6400d8b0:	add    al,BYTE PTR [edx]
6400d8b2:	add    al,BYTE PTR [edx]
6400d8b4:	add    al,BYTE PTR [edx]
6400d8b6:	add    al,BYTE PTR [edx]
6400d8b8:	add    al,BYTE PTR [edx]
6400d8ba:	add    al,BYTE PTR [edx]
6400d8bc:	add    al,BYTE PTR [edx]
6400d8be:	add    al,BYTE PTR [edx]
6400d8c0:	add    al,BYTE PTR [edx]
6400d8c2:	add    al,BYTE PTR [edx]
6400d8c4:	add    al,BYTE PTR [edx]
6400d8c6:	add    al,BYTE PTR [edx]
6400d8c8:	add    al,BYTE PTR [edx]
6400d8ca:	add    al,BYTE PTR [edx]
6400d8cc:	add    al,BYTE PTR [edx]
6400d8ce:	add    al,BYTE PTR [edx]
6400d8d0:	add    al,BYTE PTR [edx]
6400d8d2:	add    al,BYTE PTR [edx]
6400d8d4:	add    al,BYTE PTR [edx]
6400d8d6:	add    al,BYTE PTR [edx]
6400d8d8:	add    al,BYTE PTR [edx]
6400d8da:	add    al,BYTE PTR [edx]
6400d8dc:	add    al,BYTE PTR [edx]
6400d8de:	add    al,BYTE PTR [edx]
6400d8e0:	add    al,BYTE PTR [edx]
6400d8e2:	add    al,BYTE PTR [edx]
6400d8e4:	add    al,BYTE PTR [edx]
6400d8e6:	add    al,BYTE PTR [edx]
6400d8e8:	add    al,BYTE PTR [edx]
6400d8ea:	add    BYTE PTR [eax],al
6400d8ec:	add    al,BYTE PTR [edx]
6400d8ee:	add    al,BYTE PTR [edx]
6400d8f0:	add    al,BYTE PTR [edx]
6400d8f2:	add    al,BYTE PTR [edx]
6400d8f4:	add    al,BYTE PTR [edx]
6400d8f6:	add    al,BYTE PTR [edx]
6400d8f8:	add    al,BYTE PTR [edx]
6400d8fa:	add    al,BYTE PTR [edx]
6400d8fc:	add    al,BYTE PTR [edx]
6400d8fe:	add    al,BYTE PTR [edx]
6400d900:	add    al,BYTE PTR [edx]
6400d902:	add    al,BYTE PTR [edx]
6400d904:	add    al,BYTE PTR [edx]
6400d906:	add    al,BYTE PTR [edx]
6400d908:	add    al,BYTE PTR [edx]
6400d90a:	add    al,BYTE PTR [edx]
6400d90c:	add    al,BYTE PTR [edx]
6400d90e:	add    al,BYTE PTR [edx]
6400d910:	add    al,BYTE PTR [edx]
6400d912:	add    al,BYTE PTR [edx]
6400d914:	add    al,BYTE PTR [edx]
6400d916:	add    BYTE PTR [edx],al
6400d918:	add    BYTE PTR [eax],al
6400d91a:	int3   
6400d91b:	int3   
6400d91c:	int3   
6400d91d:	int3   
6400d91e:	int3   
6400d91f:	int3   
6400d920:	mov    eax,DWORD PTR [esp+0x4]
6400d924:	mov    ecx,DWORD PTR [esp+0x8]
6400d928:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
6400d92c:	cmp    ecx,0xffffffff
6400d92f:	je     0x6400d93c
6400d931:	mov    edx,0x1
6400d936:	shl    edx,cl
6400d938:	or     WORD PTR [eax+0x1c],dx
6400d93c:	ret    
6400d93d:	int3   
6400d93e:	int3   
6400d93f:	int3   
6400d940:	push   esi
6400d941:	push   edi
6400d942:	mov    edi,DWORD PTR [esp+0xc]
6400d946:	xor    esi,esi
6400d948:	push   esi
6400d949:	push   edi
6400d94a:	call   0x6400d920
6400d94f:	add    esi,0x1
6400d952:	add    esp,0x8
6400d955:	cmp    esi,0x5
6400d958:	jl     0x6400d948
6400d95a:	pop    edi
6400d95b:	pop    esi
6400d95c:	ret    
6400d95d:	int3   
6400d95e:	int3   
6400d95f:	int3   
6400d960:	push   ebx
6400d961:	push   esi
6400d962:	mov    esi,DWORD PTR [esp+0xc]
6400d966:	mov    ebx,DWORD PTR [esi+0x4]
6400d969:	xor    ebx,DWORD PTR [esi]
6400d96b:	test   ebx,0x2000000
6400d971:	je     0x6400d97e
6400d973:	push   0x0
6400d975:	push   esi
6400d976:	call   0x6400d920
6400d97b:	add    esp,0x8
6400d97e:	test   ebx,0x1f80
6400d984:	je     0x6400d991
6400d986:	push   0x2
6400d988:	push   esi
6400d989:	call   0x6400d920
6400d98e:	add    esp,0x8
6400d991:	test   bl,0x70
6400d994:	je     0x6400d9a1
6400d996:	push   0x1
6400d998:	push   esi
6400d999:	call   0x6400d920
6400d99e:	add    esp,0x8
6400d9a1:	test   ebx,0x2000
6400d9a7:	je     0x6400d9b4
6400d9a9:	push   0x3
6400d9ab:	push   esi
6400d9ac:	call   0x6400d920
6400d9b1:	add    esp,0x8
6400d9b4:	test   ebx,0x4000
6400d9ba:	je     0x6400d9c7
6400d9bc:	push   0x4
6400d9be:	push   esi
6400d9bf:	call   0x6400d920
6400d9c4:	add    esp,0x8
6400d9c7:	mov    ax,WORD PTR [esi+0x1c]
6400d9cb:	pop    esi
6400d9cc:	pop    ebx
6400d9cd:	ret    
6400d9ce:	int3   
6400d9cf:	int3   
6400d9d0:	push   esi
6400d9d1:	mov    esi,DWORD PTR [esp+0x10]
6400d9d5:	push   edi
6400d9d6:	mov    edi,DWORD PTR [esp+0xc]
6400d9da:	push   esi
6400d9db:	push   edi
6400d9dc:	call   0x6400d920
6400d9e1:	mov    eax,DWORD PTR [esp+0x18]
6400d9e5:	add    esp,0x8
6400d9e8:	mov    DWORD PTR [edi+esi*4+0x2c],eax
6400d9ec:	pop    edi
6400d9ed:	pop    esi
6400d9ee:	ret    
6400d9ef:	int3   
6400d9f0:	push   ebx
6400d9f1:	mov    ebx,DWORD PTR [esp+0x8]
6400d9f5:	push   esi
6400d9f6:	mov    esi,DWORD PTR [esp+0x14]
6400d9fa:	push   edi
6400d9fb:	xor    edi,edi
6400d9fd:	cmp    DWORD PTR [esp+0x14],edi
6400da01:	jle    0x6400db57
6400da07:	mov    eax,ebx
6400da09:	sub    eax,DWORD PTR [esi+0x8]
6400da0c:	cmp    eax,0xf
6400da0f:	jge    0x6400db57
6400da15:	movzx  eax,BYTE PTR [ebx]
6400da18:	add    eax,0xffffffda
6400da1b:	cmp    eax,0xcd
6400da20:	ja     0x6400db57
6400da26:	movzx  ecx,BYTE PTR [eax+0x6400dc64]
6400da2d:	jmp    DWORD PTR [ecx*4+0x6400dc30]
6400da34:	cmp    DWORD PTR [esp+0x1c],0x2
6400da39:	jne    0x6400db57
6400da3f:	or     DWORD PTR [esi],0x2000000
6400da45:	movzx  edx,BYTE PTR [ebx]
6400da48:	push   0x0
6400da4a:	and    edx,0xf
6400da4d:	push   edi
6400da4e:	push   esi
6400da4f:	mov    DWORD PTR [esi+0x28],edx
6400da52:	mov    DWORD PTR [esi+0x14],ebx
6400da55:	mov    DWORD PTR [esi+0x18],0x1
6400da5c:	call   0x6400d9d0
6400da61:	add    esp,0xc
6400da64:	jmp    0x6400db3e
6400da69:	or     DWORD PTR [esi],0x10
6400da6c:	push   0x1
6400da6e:	push   esi
6400da6f:	call   0x6400d920
6400da74:	mov    DWORD PTR [esi+0x30],edi
6400da77:	jmp    0x6400db3b
6400da7c:	or     DWORD PTR [esi],0x20
6400da7f:	push   0x1
6400da81:	push   esi
6400da82:	call   0x6400d920
6400da87:	mov    DWORD PTR [esi+0x30],edi
6400da8a:	jmp    0x6400db3b
6400da8f:	or     DWORD PTR [esi],0x40
6400da92:	push   0x1
6400da94:	push   esi
6400da95:	call   0x6400d920
6400da9a:	mov    DWORD PTR [esi+0x30],edi
6400da9d:	jmp    0x6400db3b
6400daa2:	or     DWORD PTR [esi],0x80
6400daa8:	push   0x2
6400daaa:	push   esi
6400daab:	call   0x6400d920
6400dab0:	mov    DWORD PTR [esi+0x34],edi
6400dab3:	jmp    0x6400db3b
6400dab8:	or     DWORD PTR [esi],0x100
6400dabe:	push   0x2
6400dac0:	push   esi
6400dac1:	call   0x6400d920
6400dac6:	mov    DWORD PTR [esi+0x34],edi
6400dac9:	jmp    0x6400db3b
6400dacb:	or     DWORD PTR [esi],0x200
6400dad1:	push   0x2
6400dad3:	push   esi
6400dad4:	call   0x6400d920
6400dad9:	mov    DWORD PTR [esi+0x34],edi
6400dadc:	jmp    0x6400db3b
6400dade:	or     DWORD PTR [esi],0x400
6400dae4:	push   0x2
6400dae6:	push   esi
6400dae7:	call   0x6400d920
6400daec:	mov    DWORD PTR [esi+0x34],edi
6400daef:	jmp    0x6400db3b
6400daf1:	or     DWORD PTR [esi],0x800
6400daf7:	push   0x2
6400daf9:	push   esi
6400dafa:	call   0x6400d920
6400daff:	mov    DWORD PTR [esi+0x34],edi
6400db02:	jmp    0x6400db3b
6400db04:	or     DWORD PTR [esi],0x1000
6400db0a:	push   0x2
6400db0c:	push   esi
6400db0d:	call   0x6400d920
6400db12:	mov    DWORD PTR [esi+0x34],edi
6400db15:	jmp    0x6400db3b
6400db17:	or     DWORD PTR [esi],0x2000
6400db1d:	push   0x3
6400db1f:	push   esi
6400db20:	call   0x6400d920
6400db25:	mov    DWORD PTR [esi+0x38],edi
6400db28:	jmp    0x6400db3b
6400db2a:	or     DWORD PTR [esi],0x4000
6400db30:	push   0x4
6400db32:	push   esi
6400db33:	call   0x6400d920
6400db38:	mov    DWORD PTR [esi+0x3c],edi
6400db3b:	add    esp,0x8
6400db3e:	mov    eax,DWORD PTR [esp+0x14]
6400db42:	sub    eax,0x1
6400db45:	add    ebx,0x1
6400db48:	add    edi,0x1
6400db4b:	test   eax,eax
6400db4d:	mov    DWORD PTR [esp+0x14],eax
6400db51:	jg     0x6400da07
6400db57:	mov    eax,0x2
6400db5c:	cmp    DWORD PTR [esp+0x14],eax
6400db60:	mov    dl,0xc0
6400db62:	jl     0x6400dbb1
6400db64:	cmp    BYTE PTR [ebx],0xc5
6400db67:	jne    0x6400dbb1
6400db69:	mov    ecx,ebx
6400db6b:	sub    ecx,DWORD PTR [esi+0x8]
6400db6e:	cmp    ecx,0xd
6400db71:	jg     0x6400dbb1
6400db73:	cmp    DWORD PTR [esp+0x1c],eax
6400db77:	je     0x6400db7e
6400db79:	cmp    BYTE PTR [ebx+0x1],dl
6400db7c:	jb     0x6400dbb1
6400db7e:	or     DWORD PTR [esi],0x20000000
6400db84:	lea    eax,[ebx+0x1]
6400db87:	mov    edi,0x2
6400db8c:	mov    DWORD PTR [esi+0x10],eax
6400db8f:	mov    DWORD PTR [esi+0x18],edi
6400db92:	mov    al,BYTE PTR [eax]
6400db94:	movzx  ecx,al
6400db97:	not    ecx
6400db99:	test   cl,cl
6400db9b:	jns    0x6400dba7
6400db9d:	cmp    DWORD PTR [esp+0x1c],edi
6400dba1:	jne    0x6400dba7
6400dba3:	or     DWORD PTR [esi+0x28],0x4
6400dba7:	test   al,0x4
6400dba9:	je     0x6400dbaf
6400dbab:	or     DWORD PTR [esi+0x28],0x10
6400dbaf:	add    ebx,edi
6400dbb1:	mov    edi,0x3
6400dbb6:	cmp    DWORD PTR [esp+0x14],edi
6400dbba:	jl     0x6400dc28
6400dbbc:	cmp    BYTE PTR [ebx],0xc4
6400dbbf:	jne    0x6400dc28
6400dbc1:	mov    eax,ebx
6400dbc3:	sub    eax,DWORD PTR [esi+0x8]
6400dbc6:	cmp    eax,0xc
6400dbc9:	jg     0x6400dc28
6400dbcb:	mov    ecx,DWORD PTR [esi]
6400dbcd:	mov    eax,ecx
6400dbcf:	not    eax
6400dbd1:	test   eax,0x20000000
6400dbd6:	je     0x6400dc28
6400dbd8:	cmp    DWORD PTR [esp+0x1c],0x2
6400dbdd:	je     0x6400dbe4
6400dbdf:	cmp    BYTE PTR [ebx+0x1],dl
6400dbe2:	jb     0x6400dc28
6400dbe4:	or     ecx,0x20000000
6400dbea:	lea    eax,[ebx+0x1]
6400dbed:	mov    DWORD PTR [esi],ecx
6400dbef:	mov    DWORD PTR [esi+0x10],eax
6400dbf2:	mov    DWORD PTR [esi+0x18],edi
6400dbf5:	movzx  ecx,BYTE PTR [eax]
6400dbf8:	not    ecx
6400dbfa:	sar    ecx,0x5
6400dbfd:	and    ecx,0x7
6400dc00:	or     DWORD PTR [esi+0x28],ecx
6400dc03:	mov    al,BYTE PTR [eax+0x1]
6400dc06:	test   al,0x4
6400dc08:	mov    ecx,DWORD PTR [esi+0x28]
6400dc0b:	je     0x6400dc13
6400dc0d:	or     ecx,0x10
6400dc10:	mov    DWORD PTR [esi+0x28],ecx
6400dc13:	test   al,al
6400dc15:	jns    0x6400dc1b
6400dc17:	or     DWORD PTR [esi+0x28],0x8
6400dc1b:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc20:	je     0x6400dc26
6400dc22:	and    DWORD PTR [esi+0x28],0xfffffff0
6400dc26:	add    ebx,edi
6400dc28:	pop    edi
6400dc29:	mov    DWORD PTR [esi+0xc],ebx
6400dc2c:	pop    esi
6400dc2d:	pop    ebx
6400dc2e:	ret    
6400dc2f:	nop
6400dc30:	(bad)  
6400dc32:	add    BYTE PTR [edx+eiz*4-0x26],ah
6400dc36:	add    BYTE PTR [eax+edi*4-0x26],ah
6400dc3a:	add    BYTE PTR [ebx+ecx*8-0x26],ah
6400dc3e:	add    BYTE PTR [esp+esi*1-0x26],ah
6400dc42:	add    BYTE PTR [ecx+esi*8-0x26],ah
6400dc46:	add    BYTE PTR [esp+eax*1-0x25],ah
6400dc4a:	add    BYTE PTR [edi+edx*1-0x25],ah
6400dc4e:	add    BYTE PTR [edx+ebp*1-0x25],ah
6400dc52:	add    BYTE PTR [ecx+ebp*2-0x26],ah
6400dc56:	add    BYTE PTR [esp+edi*2-0x26],ah
6400dc5a:	add    BYTE PTR [edi+ecx*4-0x26],ah
6400dc5e:	add    BYTE PTR [edi+edx*2-0x25],ah
6400dc62:	add    BYTE PTR [eax+eax*1+0xc],ah
6400dc66:	or     al,0xc
6400dc68:	or     al,0xc
6400dc6a:	or     al,0xc
6400dc6c:	add    DWORD PTR [esp+ecx*1],ecx
6400dc6f:	or     al,0xc
6400dc71:	or     al,0xc
6400dc73:	or     al,0x2
6400dc75:	or     al,0xc
6400dc77:	or     al,0xc
6400dc79:	or     al,0xc
6400dc7b:	or     al,0x3
6400dc7d:	or     al,0x4
6400dc7f:	add    al,0x4
6400dc81:	add    al,0x4
6400dc83:	add    al,0x4
6400dc85:	add    al,0x4
6400dc87:	add    al,0x4
6400dc89:	add    al,0x4
6400dc8b:	add    al,0x4
6400dc8d:	add    al,0xc
6400dc8f:	or     al,0xc
6400dc91:	or     al,0xc
6400dc93:	or     al,0xc
6400dc95:	or     al,0xc
6400dc97:	or     al,0xc
6400dc99:	or     al,0xc
6400dc9b:	or     al,0xc
6400dc9d:	or     al,0xc
6400dc9f:	or     al,0xc
6400dca1:	or     al,0x5
6400dca3:	push   es
6400dca4:	pop    es
6400dca5:	or     BYTE PTR [esp+ecx*1],cl
6400dca8:	or     al,0xc
6400dcaa:	or     al,0xc
6400dcac:	or     al,0xc
6400dcae:	or     al,0xc
6400dcb0:	or     al,0xc
6400dcb2:	or     al,0xc
6400dcb4:	or     al,0xc
6400dcb6:	or     al,0xc
6400dcb8:	or     al,0xc
6400dcba:	or     al,0xc
6400dcbc:	or     al,0xc
6400dcbe:	or     al,0xc
6400dcc0:	or     al,0xc
6400dcc2:	or     al,0xc
6400dcc4:	or     al,0xc
6400dcc6:	or     al,0xc
6400dcc8:	or     al,0xc
6400dcca:	or     al,0xc
6400dccc:	or     al,0xc
6400dcce:	or     al,0xc
6400dcd0:	or     al,0xc
6400dcd2:	or     al,0xc
6400dcd4:	or     al,0xc
6400dcd6:	or     al,0xc
6400dcd8:	or     al,0xc
6400dcda:	or     al,0xc
6400dcdc:	or     al,0xc
6400dcde:	or     al,0xc
6400dce0:	or     al,0xc
6400dce2:	or     al,0xc
6400dce4:	or     al,0xc
6400dce6:	or     al,0xc
6400dce8:	or     al,0xc
6400dcea:	or     al,0xc
6400dcec:	or     al,0xc
6400dcee:	or     al,0xc
6400dcf0:	or     al,0xc
6400dcf2:	or     al,0xc
6400dcf4:	or     al,0xc
6400dcf6:	or     al,0xc
6400dcf8:	or     al,0xc
6400dcfa:	or     al,0xc
6400dcfc:	or     al,0xc
6400dcfe:	or     al,0xc
6400dd00:	or     al,0xc
6400dd02:	or     al,0xc
6400dd04:	or     al,0xc
6400dd06:	or     al,0xc
6400dd08:	or     al,0xc
6400dd0a:	or     al,0xc
6400dd0c:	or     al,0xc
6400dd0e:	or     al,0xc
6400dd10:	or     al,0xc
6400dd12:	or     al,0xc
6400dd14:	or     al,0xc
6400dd16:	or     al,0xc
6400dd18:	or     al,0xc
6400dd1a:	or     al,0xc
6400dd1c:	or     al,0xc
6400dd1e:	or     al,0xc
6400dd20:	or     al,0xc
6400dd22:	or     al,0xc
6400dd24:	or     al,0xc
6400dd26:	or     al,0xc
6400dd28:	or     al,0xc
6400dd2a:	or     al,0xc
6400dd2c:	or     al,0xc
6400dd2e:	or     DWORD PTR [edx+ecx*1],ecx
6400dd31:	or     ecx,esp
6400dd33:	int3   
6400dd34:	int3   
6400dd35:	int3   
6400dd36:	int3   
6400dd37:	int3   
6400dd38:	int3   
6400dd39:	int3   
6400dd3a:	int3   
6400dd3b:	int3   
6400dd3c:	int3   
6400dd3d:	int3   
6400dd3e:	int3   
6400dd3f:	int3   
6400dd40:	push   esi
6400dd41:	mov    esi,DWORD PTR [esp+0xc]
6400dd45:	mov    eax,DWORD PTR [esi]
6400dd47:	push   edi
6400dd48:	mov    edi,DWORD PTR [esp+0x14]
6400dd4c:	cmp    edi,0x2
6400dd4f:	jne    0x6400dd58
6400dd51:	and    eax,0x1800
6400dd56:	jmp    0x6400dd5d
6400dd58:	and    eax,0x1f80
6400dd5d:	test   eax,eax
6400dd5f:	mov    ecx,DWORD PTR [esp+0x18]
6400dd63:	mov    edx,DWORD PTR [esp+0xc]
6400dd67:	je     0x6400dd72
6400dd69:	cmp    eax,edx
6400dd6b:	je     0x6400dd72
6400dd6d:	or     DWORD PTR [esi+0x4],eax
6400dd70:	jmp    0x6400dd78
6400dd72:	or     BYTE PTR [ecx+0xc],0x80
6400dd76:	mov    eax,edx
6400dd78:	cmp    eax,0x400
6400dd7d:	ja     0x6400ddae
6400dd7f:	je     0x6400dda8
6400dd81:	cmp    eax,0x80
6400dd86:	je     0x6400dda2
6400dd88:	cmp    eax,0x100
6400dd8d:	je     0x6400dd9c
6400dd8f:	cmp    eax,0x200
6400dd94:	jne    0x6400ddc6
6400dd96:	or     BYTE PTR [ecx+0xc],0x47
6400dd9a:	jmp    0x6400ddc6
6400dd9c:	or     BYTE PTR [ecx+0xc],0x46
6400dda0:	jmp    0x6400ddc6
6400dda2:	or     BYTE PTR [ecx+0xc],0x45
6400dda6:	jmp    0x6400ddc6
6400dda8:	or     BYTE PTR [ecx+0xc],0x44
6400ddac:	jmp    0x6400ddc6
6400ddae:	cmp    eax,0x800
6400ddb3:	je     0x6400ddc2
6400ddb5:	cmp    eax,0x1000
6400ddba:	jne    0x6400ddc6
6400ddbc:	or     BYTE PTR [ecx+0xc],0x49
6400ddc0:	jmp    0x6400ddc6
6400ddc2:	or     BYTE PTR [ecx+0xc],0x48
6400ddc6:	cmp    edi,0x2
6400ddc9:	pop    edi
6400ddca:	pop    esi
6400ddcb:	jne    0x6400ddd8
6400ddcd:	test   eax,0x780
6400ddd2:	je     0x6400ddd8
6400ddd4:	mov    BYTE PTR [ecx+0xc],0xff
6400ddd8:	ret    
6400ddd9:	int3   
6400ddda:	int3   
6400dddb:	int3   
6400dddc:	int3   
6400dddd:	int3   
6400ddde:	int3   
6400dddf:	int3   
6400dde0:	mov    ecx,DWORD PTR [esi]
6400dde2:	mov    eax,ecx
6400dde4:	and    eax,0x2060
6400dde9:	cmp    eax,0x40
6400ddec:	push   edi
6400dded:	ja     0x6400de2f
6400ddef:	je     0x6400de1d
6400ddf1:	test   eax,eax
6400ddf3:	je     0x6400de0f
6400ddf5:	cmp    eax,0x20
6400ddf8:	jne    0x6400de36
6400ddfa:	mov    eax,DWORD PTR [edx+0x4]
6400ddfd:	movzx  eax,BYTE PTR [eax+0x3]
6400de01:	mov    edi,DWORD PTR [edx+0x8]
6400de04:	mov    eax,DWORD PTR [edi+eax*4]
6400de07:	and    ecx,0xffffffdf
6400de0a:	jmp    0x6400de96
6400de0f:	mov    ecx,DWORD PTR [edx+0x4]
6400de12:	movzx  eax,BYTE PTR [ecx]
6400de15:	mov    ecx,DWORD PTR [edx+0x8]
6400de18:	mov    eax,DWORD PTR [ecx+eax*4]
6400de1b:	jmp    0x6400de98
6400de1d:	mov    eax,DWORD PTR [edx+0x4]
6400de20:	movzx  eax,BYTE PTR [eax+0x2]
6400de24:	mov    edi,DWORD PTR [edx+0x8]
6400de27:	mov    eax,DWORD PTR [edi+eax*4]
6400de2a:	and    ecx,0xffffffbf
6400de2d:	jmp    0x6400de96
6400de2f:	cmp    eax,0x2000
6400de34:	je     0x6400de7c
6400de36:	mov    eax,ecx
6400de38:	and    eax,0x60
6400de3b:	cmp    al,0x60
6400de3d:	je     0x6400de78
6400de3f:	test   cl,0x20
6400de42:	je     0x6400de50
6400de44:	mov    eax,DWORD PTR [edx+0x4]
6400de47:	movzx  eax,BYTE PTR [eax+0x3]
6400de4b:	and    ecx,0xffffffdf
6400de4e:	jmp    0x6400de5f
6400de50:	test   cl,0x40
6400de53:	je     0x6400de78
6400de55:	mov    eax,DWORD PTR [edx+0x4]
6400de58:	movzx  eax,BYTE PTR [eax+0x2]
6400de5c:	and    ecx,0xffffffbf
6400de5f:	mov    edi,DWORD PTR [edx+0x8]
6400de62:	mov    eax,DWORD PTR [edi+eax*4]
6400de65:	test   eax,eax
6400de67:	mov    DWORD PTR [esi],ecx
6400de69:	je     0x6400de78
6400de6b:	mov    ecx,DWORD PTR [eax+0x8]
6400de6e:	not    ecx
6400de70:	test   ecx,0x2000
6400de76:	je     0x6400de98
6400de78:	xor    eax,eax
6400de7a:	pop    edi
6400de7b:	ret    
6400de7c:	mov    eax,DWORD PTR [edx+0x4]
6400de7f:	movzx  eax,BYTE PTR [eax+0x1]
6400de83:	mov    edi,DWORD PTR [edx+0x8]
6400de86:	mov    eax,DWORD PTR [edi+eax*4]
6400de89:	mov    DWORD PTR [esi+0x20],0x1
6400de90:	and    ecx,0xffffdfff
6400de96:	mov    DWORD PTR [esi],ecx
6400de98:	test   eax,eax
6400de9a:	jne    0x6400dea8
6400de9c:	mov    ecx,DWORD PTR [edx+0x4]
6400de9f:	movzx  eax,BYTE PTR [ecx]
6400dea2:	mov    ecx,DWORD PTR [edx+0x8]
6400dea5:	mov    eax,DWORD PTR [ecx+eax*4]
6400dea8:	pop    edi
6400dea9:	ret    
6400deaa:	int3   
6400deab:	int3   
6400deac:	int3   
6400dead:	int3   
6400deae:	int3   
6400deaf:	int3   
6400deb0:	test   DWORD PTR [edx],0x2002070
6400deb6:	mov    ecx,DWORD PTR [edx+0x10]
6400deb9:	mov    al,BYTE PTR [ecx]
6400debb:	push   ebx
6400debc:	mov    ebx,0x4
6400dec1:	je     0x6400dec7
6400dec3:	xor    eax,eax
6400dec5:	pop    ebx
6400dec6:	ret    
6400dec7:	cmp    DWORD PTR [edx+0x18],0x2
6400decb:	push   ebp
6400decc:	push   esi
6400decd:	jne    0x6400dee8
6400decf:	movzx  ecx,al
6400ded2:	mov    eax,ecx
6400ded4:	not    eax
6400ded6:	sar    eax,0x3
6400ded9:	and    al,0xf
6400dedb:	movzx  esi,al
6400dede:	mov    DWORD PTR [edx+0x24],esi
6400dee1:	mov    esi,0x1
6400dee6:	jmp    0x6400df00
6400dee8:	movzx  ecx,BYTE PTR [ecx+0x1]
6400deec:	and    eax,0x1f
6400deef:	mov    esi,eax
6400def1:	mov    eax,ecx
6400def3:	not    eax
6400def5:	sar    eax,0x3
6400def8:	and    al,0xf
6400defa:	movzx  ebp,al
6400defd:	mov    DWORD PTR [edx+0x24],ebp
6400df00:	and    ecx,0x3
6400df03:	sub    esi,0x1
6400df06:	je     0x6400df24
6400df08:	sub    esi,0x1
6400df0b:	je     0x6400df1d
6400df0d:	sub    esi,0x1
6400df10:	jne    0x6400dfc1
6400df16:	mov    edx,0x640333d4
6400df1b:	jmp    0x6400df29
6400df1d:	mov    edx,0x64034f44
6400df22:	jmp    0x6400df29
6400df24:	mov    edx,0x640367c0
6400df29:	test   al,al
6400df2b:	jne    0x6400df32
6400df2d:	mov    ebx,0x8
6400df32:	add    ebx,ecx
6400df34:	add    DWORD PTR [edi+0x14],0xffffffff
6400df38:	mov    esi,DWORD PTR [edi+0x14]
6400df3b:	js     0x6400dfc1
6400df41:	mov    ecx,DWORD PTR [edi+0x10]
6400df44:	movzx  eax,BYTE PTR [ecx]
6400df47:	mov    ebp,DWORD PTR [edx+0x4]
6400df4a:	movzx  eax,BYTE PTR [eax+ebp*1]
6400df4e:	mov    edx,DWORD PTR [edx+0x8]
6400df51:	mov    eax,DWORD PTR [edx+eax*4]
6400df54:	test   eax,eax
6400df56:	je     0x6400dfc1
6400df58:	mov    dl,BYTE PTR [eax]
6400df5a:	cmp    dl,0x5
6400df5d:	je     0x6400dfb0
6400df5f:	cmp    dl,0x1
6400df62:	je     0x6400dfc1
6400df64:	cmp    dl,0x4
6400df67:	je     0x6400dfc1
6400df69:	lea    edx,[ecx+0x1]
6400df6c:	lea    ecx,[esi-0x1]
6400df6f:	test   ecx,ecx
6400df71:	mov    DWORD PTR [edi+0x10],edx
6400df74:	mov    DWORD PTR [edi+0x14],ecx
6400df77:	jl     0x6400dfc1
6400df79:	mov    cl,BYTE PTR [eax]
6400df7b:	cmp    cl,0x2
6400df7e:	jne    0x6400df92
6400df80:	movzx  ecx,BYTE PTR [edx]
6400df83:	mov    edx,DWORD PTR [eax+0x4]
6400df86:	shr    ecx,0x3
6400df89:	and    ecx,0x7
6400df8c:	movzx  ecx,BYTE PTR [ecx+edx*1]
6400df90:	jmp    0x6400dfa1
6400df92:	cmp    cl,0x3
6400df95:	jne    0x6400dfc1
6400df97:	movzx  ecx,BYTE PTR [edx]
6400df9a:	mov    edx,DWORD PTR [eax+0x4]
6400df9d:	movzx  ecx,BYTE PTR [edx+ecx*1]
6400dfa1:	mov    edx,DWORD PTR [eax+0x8]
6400dfa4:	mov    eax,DWORD PTR [edx+ecx*4]
6400dfa7:	test   eax,eax
6400dfa9:	je     0x6400dfc1
6400dfab:	cmp    BYTE PTR [eax],0x5
6400dfae:	jne    0x6400dfc1
6400dfb0:	mov    ecx,DWORD PTR [eax+0x4]
6400dfb3:	movzx  edx,BYTE PTR [ecx+ebx*1]
6400dfb7:	mov    eax,DWORD PTR [eax+0x8]
6400dfba:	mov    eax,DWORD PTR [eax+edx*4]
6400dfbd:	pop    esi
6400dfbe:	pop    ebp
6400dfbf:	pop    ebx
6400dfc0:	ret    
6400dfc1:	pop    esi
6400dfc2:	pop    ebp
6400dfc3:	xor    eax,eax
6400dfc5:	pop    ebx
6400dfc6:	ret    
6400dfc7:	int3   
6400dfc8:	int3   
6400dfc9:	int3   
6400dfca:	int3   
6400dfcb:	int3   
6400dfcc:	int3   
6400dfcd:	int3   
6400dfce:	int3   
6400dfcf:	int3   
6400dfd0:	sub    esp,0x8
6400dfd3:	push   ebx
6400dfd4:	push   esi
6400dfd5:	mov    esi,DWORD PTR [esp+0x18]
6400dfd9:	mov    eax,DWORD PTR [esi+0x28]
6400dfdc:	xor    ebx,ebx
6400dfde:	test   DWORD PTR [esi],0x20000000
6400dfe4:	push   edi
6400dfe5:	mov    edi,DWORD PTR [esp+0x18]
6400dfe9:	mov    DWORD PTR [esp+0x10],eax
6400dfed:	je     0x6400e01f
6400dfef:	mov    edx,esi
6400dff1:	call   0x6400deb0
6400dff6:	test   eax,eax
6400dff8:	je     0x6400e2b8
6400dffe:	test   BYTE PTR [eax+0xc],0x10
6400e002:	je     0x6400e2b8
6400e008:	mov    ecx,DWORD PTR [esi+0x28]
6400e00b:	not    ecx
6400e00d:	test   cl,0x10
6400e010:	je     0x6400e2b8
6400e016:	pop    edi
6400e017:	pop    esi
6400e018:	xor    eax,eax
6400e01a:	pop    ebx
6400e01b:	add    esp,0x8
6400e01e:	ret    
6400e01f:	push   ebp
6400e020:	or     ebp,0xffffffff
6400e023:	add    DWORD PTR [edi+0x14],ebp
6400e026:	mov    eax,DWORD PTR [edi+0x14]
6400e029:	js     0x6400e2b5
6400e02f:	mov    edx,DWORD PTR [edi+0x10]
6400e032:	movzx  ecx,BYTE PTR [edx]
6400e035:	cmp    ecx,0x9b
6400e03b:	mov    DWORD PTR [esp+0x10],ecx
6400e03f:	jne    0x6400e066
6400e041:	push   esi
6400e042:	lea    ebx,[ebp+0x2]
6400e045:	call   0x6400d940
6400e04a:	add    DWORD PTR [edi+0x10],ebx
6400e04d:	mov    ecx,DWORD PTR [edi+0x10]
6400e050:	add    esp,0x4
6400e053:	add    DWORD PTR [edi+0x14],ebp
6400e056:	mov    eax,DWORD PTR [edi+0x14]
6400e059:	js     0x6400e2b5
6400e05f:	movzx  ecx,BYTE PTR [ecx]
6400e062:	mov    DWORD PTR [esp+0x10],ecx
6400e066:	mov    edx,DWORD PTR ds:0x64037520
6400e06c:	movzx  edx,BYTE PTR [edx+ecx*1]
6400e070:	mov    ebp,DWORD PTR ds:0x64037524
6400e076:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
6400e07a:	test   ebp,ebp
6400e07c:	je     0x6400e2b5
6400e082:	cmp    BYTE PTR [ebp+0x0],0x1
6400e086:	jne    0x6400e11a
6400e08c:	test   ebx,ebx
6400e08e:	jne    0x6400e11a
6400e094:	mov    eax,ecx
6400e096:	sub    eax,0x63
6400e099:	je     0x6400e0fe
6400e09b:	sub    eax,0x2a
6400e09e:	je     0x6400e0e3
6400e0a0:	sub    eax,0x3
6400e0a3:	jne    0x6400e0f4
6400e0a5:	test   BYTE PTR [esi],0x40
6400e0a8:	je     0x6400e0bb
6400e0aa:	or     DWORD PTR [esi+0x4],0x40
6400e0ae:	pop    ebp
6400e0af:	pop    edi
6400e0b0:	pop    esi
6400e0b1:	mov    eax,0x64037558
6400e0b6:	pop    ebx
6400e0b7:	add    esp,0x8
6400e0ba:	ret    
6400e0bb:	mov    eax,DWORD PTR [esp+0x14]
6400e0bf:	test   al,0x8
6400e0c1:	je     0x6400e0ca
6400e0c3:	or     DWORD PTR [esi+0x4],0x2000000
6400e0ca:	cmp    DWORD PTR [edi+0x18],0x2
6400e0ce:	jne    0x6400e0d6
6400e0d0:	not    eax
6400e0d2:	test   al,0x1
6400e0d4:	je     0x6400e0f4
6400e0d6:	pop    ebp
6400e0d7:	pop    edi
6400e0d8:	pop    esi
6400e0d9:	mov    eax,0x6403754c
6400e0de:	pop    ebx
6400e0df:	add    esp,0x8
6400e0e2:	ret    
6400e0e3:	and    DWORD PTR [esi],0xffffe07f
6400e0e9:	push   0x2
6400e0eb:	push   esi
6400e0ec:	call   0x6400d920
6400e0f1:	add    esp,0x8
6400e0f4:	mov    eax,ebp
6400e0f6:	pop    ebp
6400e0f7:	pop    edi
6400e0f8:	pop    esi
6400e0f9:	pop    ebx
6400e0fa:	add    esp,0x8
6400e0fd:	ret    
6400e0fe:	cmp    DWORD PTR [edi+0x18],0x2
6400e102:	mov    eax,0x64037534
6400e107:	je     0x6400e2b7
6400e10d:	pop    ebp
6400e10e:	pop    edi
6400e10f:	pop    esi
6400e110:	mov    eax,0x64037528
6400e115:	pop    ebx
6400e116:	add    esp,0x8
6400e119:	ret    
6400e11a:	add    DWORD PTR [edi+0x10],0x1
6400e11e:	mov    esi,DWORD PTR [edi+0x10]
6400e121:	lea    edx,[eax-0x1]
6400e124:	test   edx,edx
6400e126:	mov    DWORD PTR [edi+0x14],edx
6400e129:	jl     0x6400e2b5
6400e12f:	mov    cl,BYTE PTR [ebp+0x0]
6400e132:	cmp    cl,0x2
6400e135:	movzx  eax,BYTE PTR [esi]
6400e138:	jne    0x6400e159
6400e13a:	test   ebx,ebx
6400e13c:	jne    0x6400e159
6400e13e:	mov    ecx,DWORD PTR [ebp+0x4]
6400e141:	shr    eax,0x3
6400e144:	and    eax,0x7
6400e147:	movzx  edx,BYTE PTR [eax+ecx*1]
6400e14b:	mov    eax,DWORD PTR [ebp+0x8]
6400e14e:	mov    eax,DWORD PTR [eax+edx*4]
6400e151:	pop    ebp
6400e152:	pop    edi
6400e153:	pop    esi
6400e154:	pop    ebx
6400e155:	add    esp,0x8
6400e158:	ret    
6400e159:	cmp    cl,0x4
6400e15c:	jne    0x6400e1c2
6400e15e:	cmp    eax,0xc0
6400e163:	jae    0x6400e16d
6400e165:	shr    eax,0x3
6400e168:	and    eax,0x7
6400e16b:	jmp    0x6400e172
6400e16d:	sub    eax,0xb8
6400e172:	mov    ecx,DWORD PTR [ebp+0x4]
6400e175:	movzx  edx,BYTE PTR [ecx+eax*1]
6400e179:	mov    eax,DWORD PTR [ebp+0x8]
6400e17c:	mov    eax,DWORD PTR [eax+edx*4]
6400e17f:	test   eax,eax
6400e181:	je     0x6400e2b5
6400e187:	cmp    BYTE PTR [eax],0x1
6400e18a:	jne    0x6400e1ad
6400e18c:	mov    ecx,DWORD PTR [eax+0x8]
6400e18f:	not    ecx
6400e191:	test   ecx,0x2000
6400e197:	je     0x6400e2b7
6400e19d:	test   ebx,ebx
6400e19f:	jne    0x6400e2b5
6400e1a5:	pop    ebp
6400e1a6:	pop    edi
6400e1a7:	pop    esi
6400e1a8:	pop    ebx
6400e1a9:	add    esp,0x8
6400e1ac:	ret    
6400e1ad:	mov    edx,DWORD PTR [eax+0x4]
6400e1b0:	movzx  ecx,BYTE PTR [edx+ebx*1]
6400e1b4:	mov    edx,DWORD PTR [eax+0x8]
6400e1b7:	mov    eax,DWORD PTR [edx+ecx*4]
6400e1ba:	pop    ebp
6400e1bb:	pop    edi
6400e1bc:	pop    esi
6400e1bd:	pop    ebx
6400e1be:	add    esp,0x8
6400e1c1:	ret    
6400e1c2:	test   ebx,ebx
6400e1c4:	jne    0x6400e2b5
6400e1ca:	cmp    cl,0x3
6400e1cd:	jne    0x6400e21f
6400e1cf:	mov    ecx,DWORD PTR [ebp+0x4]
6400e1d2:	movzx  ecx,BYTE PTR [ecx+eax*1]
6400e1d6:	mov    ebx,DWORD PTR [ebp+0x8]
6400e1d9:	mov    ebp,DWORD PTR [ebx+ecx*4]
6400e1dc:	test   ebp,ebp
6400e1de:	je     0x6400e2b5
6400e1e4:	cmp    DWORD PTR [esp+0x10],0xf
6400e1e9:	jne    0x6400e1fd
6400e1eb:	cmp    eax,0xf
6400e1ee:	jne    0x6400e1fd
6400e1f0:	pop    ebp
6400e1f1:	pop    edi
6400e1f2:	pop    esi
6400e1f3:	mov    eax,0x6402e15c
6400e1f8:	pop    ebx
6400e1f9:	add    esp,0x8
6400e1fc:	ret    
6400e1fd:	mov    al,BYTE PTR [ebp+0x0]
6400e200:	cmp    al,0x1
6400e202:	je     0x6400e0f4
6400e208:	cmp    al,0x5
6400e20a:	jne    0x6400e21f
6400e20c:	mov    esi,DWORD PTR [esp+0x20]
6400e210:	mov    edx,ebp
6400e212:	call   0x6400dde0
6400e217:	pop    ebp
6400e218:	pop    edi
6400e219:	pop    esi
6400e21a:	pop    ebx
6400e21b:	add    esp,0x8
6400e21e:	ret    
6400e21f:	lea    ecx,[edx-0x1]
6400e222:	test   ecx,ecx
6400e224:	lea    eax,[esi+0x1]
6400e227:	mov    DWORD PTR [edi+0x10],eax
6400e22a:	mov    DWORD PTR [edi+0x14],ecx
6400e22d:	jl     0x6400e2b5
6400e233:	movzx  ecx,BYTE PTR [eax]
6400e236:	mov    edi,DWORD PTR [ebp+0x4]
6400e239:	mov    esi,DWORD PTR [ebp+0x8]
6400e23c:	mov    edx,ecx
6400e23e:	shr    edx,0x3
6400e241:	and    edx,0x7
6400e244:	movzx  eax,BYTE PTR [edx+edi*1]
6400e248:	mov    dl,BYTE PTR [ebp+0x0]
6400e24b:	cmp    dl,0x2
6400e24e:	mov    eax,DWORD PTR [esi+eax*4]
6400e251:	jne    0x6400e26f
6400e253:	test   eax,eax
6400e255:	je     0x6400e2b5
6400e257:	cmp    BYTE PTR [eax],0x1
6400e25a:	je     0x6400e2b7
6400e25c:	mov    esi,DWORD PTR [esp+0x20]
6400e260:	mov    edx,eax
6400e262:	call   0x6400dde0
6400e267:	pop    ebp
6400e268:	pop    edi
6400e269:	pop    esi
6400e26a:	pop    ebx
6400e26b:	add    esp,0x8
6400e26e:	ret    
6400e26f:	cmp    dl,0x4
6400e272:	jne    0x6400e299
6400e274:	test   eax,eax
6400e276:	je     0x6400e27e
6400e278:	test   BYTE PTR [eax+0x8],0x2
6400e27c:	jne    0x6400e2b7
6400e27e:	cmp    ecx,0xc0
6400e284:	jb     0x6400e2b7
6400e286:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
6400e28e:	mov    eax,DWORD PTR [esi+ecx*4]
6400e291:	pop    ebp
6400e292:	pop    edi
6400e293:	pop    esi
6400e294:	pop    ebx
6400e295:	add    esp,0x8
6400e298:	ret    
6400e299:	cmp    dl,0x3
6400e29c:	jne    0x6400e2b5
6400e29e:	movzx  edx,BYTE PTR [edi+ecx*1]
6400e2a2:	mov    eax,DWORD PTR [esi+edx*4]
6400e2a5:	test   eax,eax
6400e2a7:	je     0x6400e2b5
6400e2a9:	mov    cl,BYTE PTR [eax]
6400e2ab:	cmp    cl,0x1
6400e2ae:	je     0x6400e2b7
6400e2b0:	cmp    cl,0x5
6400e2b3:	je     0x6400e25c
6400e2b5:	xor    eax,eax
6400e2b7:	pop    ebp
6400e2b8:	pop    edi
6400e2b9:	pop    esi
6400e2ba:	pop    ebx
6400e2bb:	add    esp,0x8
6400e2be:	ret    
6400e2bf:	int3   
6400e2c0:	mov    ecx,DWORD PTR [esp+0x4]
6400e2c4:	push   esi
6400e2c5:	mov    esi,DWORD PTR [ecx+0x14]
6400e2c8:	cmp    esi,0x1
6400e2cb:	jl     0x6400e2ff
6400e2cd:	mov    edx,DWORD PTR [ecx+0x10]
6400e2d0:	movzx  eax,BYTE PTR [edx]
6400e2d3:	push   edi
6400e2d4:	mov    edi,DWORD PTR ds:0x64035a48
6400e2da:	movzx  eax,BYTE PTR [eax+edi*1]
6400e2de:	mov    edi,DWORD PTR ds:0x64035a4c
6400e2e4:	mov    eax,DWORD PTR [edi+eax*4]
6400e2e7:	test   eax,eax
6400e2e9:	pop    edi
6400e2ea:	je     0x6400e2ff
6400e2ec:	cmp    BYTE PTR [eax],0x1
6400e2ef:	jne    0x6400e2ff
6400e2f1:	add    esi,0xffffffff
6400e2f4:	add    edx,0x1
6400e2f7:	mov    DWORD PTR [ecx+0x14],esi
6400e2fa:	mov    DWORD PTR [ecx+0x10],edx
6400e2fd:	pop    esi
6400e2fe:	ret    
6400e2ff:	xor    eax,eax
6400e301:	pop    esi
6400e302:	ret    
6400e303:	int3   
6400e304:	int3   
6400e305:	int3   
6400e306:	int3   
6400e307:	int3   
6400e308:	int3   
6400e309:	int3   
6400e30a:	int3   
6400e30b:	int3   
6400e30c:	int3   
6400e30d:	int3   
6400e30e:	int3   
6400e30f:	int3   
6400e310:	push   esi
6400e311:	mov    esi,eax
6400e313:	mov    eax,DWORD PTR [esi+0x1c]
6400e316:	mov    ecx,DWORD PTR [esi+0x10]
6400e319:	push   edi
6400e31a:	mov    edi,DWORD PTR [eax+0x14]
6400e31d:	cmp    edi,ecx
6400e31f:	jbe    0x6400e323
6400e321:	mov    edi,ecx
6400e323:	test   edi,edi
6400e325:	je     0x6400e35c
6400e327:	mov    eax,DWORD PTR [eax+0x10]
6400e32a:	mov    ecx,DWORD PTR [esi+0xc]
6400e32d:	push   edi
6400e32e:	push   eax
6400e32f:	push   ecx
6400e330:	call   0x640151a0
6400e335:	mov    eax,DWORD PTR [esi+0x1c]
6400e338:	add    DWORD PTR [esi+0xc],edi
6400e33b:	add    DWORD PTR [eax+0x10],edi
6400e33e:	add    DWORD PTR [esi+0x14],edi
6400e341:	sub    DWORD PTR [esi+0x10],edi
6400e344:	mov    eax,DWORD PTR [esi+0x1c]
6400e347:	sub    DWORD PTR [eax+0x14],edi
6400e34a:	mov    esi,DWORD PTR [esi+0x1c]
6400e34d:	add    esp,0xc
6400e350:	cmp    DWORD PTR [esi+0x14],0x0
6400e354:	jne    0x6400e35c
6400e356:	mov    edx,DWORD PTR [esi+0x8]
6400e359:	mov    DWORD PTR [esi+0x10],edx
6400e35c:	pop    edi
6400e35d:	pop    esi
6400e35e:	ret    
6400e35f:	int3   
6400e360:	mov    eax,DWORD PTR [esi+0x4]
6400e363:	push   edi
6400e364:	mov    edi,eax
6400e366:	cmp    edi,ecx
6400e368:	jbe    0x6400e36c
6400e36a:	mov    edi,ecx
6400e36c:	test   edi,edi
6400e36e:	jne    0x6400e374
6400e370:	xor    eax,eax
6400e372:	pop    edi
6400e373:	ret    
6400e374:	sub    eax,edi
6400e376:	mov    DWORD PTR [esi+0x4],eax
6400e379:	mov    eax,DWORD PTR [esi+0x1c]
6400e37c:	mov    eax,DWORD PTR [eax+0x18]
6400e37f:	cmp    eax,0x1
6400e382:	jne    0x6400e393
6400e384:	mov    ecx,DWORD PTR [esi]
6400e386:	mov    edx,DWORD PTR [esi+0x30]
6400e389:	push   edi
6400e38a:	push   ecx
6400e38b:	push   edx
6400e38c:	call   0x640107d0
6400e391:	jmp    0x6400e3a5
6400e393:	cmp    eax,0x2
6400e396:	jne    0x6400e3ab
6400e398:	mov    eax,DWORD PTR [esi]
6400e39a:	mov    ecx,DWORD PTR [esi+0x30]
6400e39d:	push   edi
6400e39e:	push   eax
6400e39f:	push   ecx
6400e3a0:	call   0x640124c0
6400e3a5:	mov    DWORD PTR [esi+0x30],eax
6400e3a8:	add    esp,0xc
6400e3ab:	mov    edx,DWORD PTR [esi]
6400e3ad:	mov    eax,DWORD PTR [esp+0x8]
6400e3b1:	push   edi
6400e3b2:	push   edx
6400e3b3:	push   eax
6400e3b4:	call   0x640151a0
6400e3b9:	add    DWORD PTR [esi],edi
6400e3bb:	add    DWORD PTR [esi+0x8],edi
6400e3be:	add    esp,0xc
6400e3c1:	mov    eax,edi
6400e3c3:	pop    edi
6400e3c4:	ret    
6400e3c5:	int3   
6400e3c6:	int3   
6400e3c7:	int3   
6400e3c8:	int3   
6400e3c9:	int3   
6400e3ca:	int3   
6400e3cb:	int3   
6400e3cc:	int3   
6400e3cd:	int3   
6400e3ce:	int3   
6400e3cf:	int3   
6400e3d0:	sub    esp,0x14
6400e3d3:	mov    ecx,DWORD PTR [edi+0x7c]
6400e3d6:	mov    edx,DWORD PTR [edi+0x6c]
6400e3d9:	push   ebx
6400e3da:	push   ebp
6400e3db:	mov    ebp,DWORD PTR [edi+0x78]
6400e3de:	push   esi
6400e3df:	mov    esi,DWORD PTR [edi+0x90]
6400e3e5:	mov    DWORD PTR [esp+0x10],ecx
6400e3e9:	mov    ecx,DWORD PTR [edi+0x38]
6400e3ec:	mov    DWORD PTR [esp+0x14],esi
6400e3f0:	mov    esi,DWORD PTR [edi+0x2c]
6400e3f3:	lea    ebx,[esi-0x106]
6400e3f9:	add    ecx,edx
6400e3fb:	cmp    edx,ebx
6400e3fd:	jbe    0x6400e40d
6400e3ff:	sub    edx,esi
6400e401:	add    edx,0x106
6400e407:	mov    DWORD PTR [esp+0x18],edx
6400e40b:	jmp    0x6400e415
6400e40d:	mov    DWORD PTR [esp+0x18],0x0
6400e415:	cmp    ebp,DWORD PTR [edi+0x8c]
6400e41b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
6400e420:	mov    BYTE PTR [esp+0xe],dl
6400e424:	movzx  edx,BYTE PTR [ecx+ebp*1]
6400e428:	lea    esi,[ecx+0x102]
6400e42e:	mov    BYTE PTR [esp+0xf],dl
6400e432:	jb     0x6400e439
6400e434:	shr    DWORD PTR [esp+0x10],0x2
6400e439:	mov    edx,DWORD PTR [edi+0x74]
6400e43c:	cmp    DWORD PTR [esp+0x14],edx
6400e440:	jbe    0x6400e446
6400e442:	mov    DWORD PTR [esp+0x14],edx
6400e446:	mov    edx,DWORD PTR [edi+0x38]
6400e449:	mov    bl,BYTE PTR [esp+0xf]
6400e44d:	add    edx,eax
6400e44f:	cmp    BYTE PTR [edx+ebp*1],bl
6400e452:	jne    0x6400e51f
6400e458:	mov    bl,BYTE PTR [esp+0xe]
6400e45c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
6400e460:	jne    0x6400e51f
6400e466:	mov    bl,BYTE PTR [edx]
6400e468:	cmp    bl,BYTE PTR [ecx]
6400e46a:	jne    0x6400e51f
6400e470:	mov    bl,BYTE PTR [edx+0x1]
6400e473:	add    edx,0x1
6400e476:	cmp    bl,BYTE PTR [ecx+0x1]
6400e479:	jne    0x6400e51f
6400e47f:	add    ecx,0x2
6400e482:	add    edx,0x1
6400e485:	mov    bl,BYTE PTR [ecx+0x1]
6400e488:	add    ecx,0x1
6400e48b:	add    edx,0x1
6400e48e:	cmp    bl,BYTE PTR [edx]
6400e490:	jne    0x6400e4f1
6400e492:	mov    bl,BYTE PTR [ecx+0x1]
6400e495:	add    ecx,0x1
6400e498:	add    edx,0x1
6400e49b:	cmp    bl,BYTE PTR [edx]
6400e49d:	jne    0x6400e4f1
6400e49f:	mov    bl,BYTE PTR [ecx+0x1]
6400e4a2:	add    ecx,0x1
6400e4a5:	add    edx,0x1
6400e4a8:	cmp    bl,BYTE PTR [edx]
6400e4aa:	jne    0x6400e4f1
6400e4ac:	mov    bl,BYTE PTR [ecx+0x1]
6400e4af:	add    ecx,0x1
6400e4b2:	add    edx,0x1
6400e4b5:	cmp    bl,BYTE PTR [edx]
6400e4b7:	jne    0x6400e4f1
6400e4b9:	mov    bl,BYTE PTR [ecx+0x1]
6400e4bc:	add    ecx,0x1
6400e4bf:	add    edx,0x1
6400e4c2:	cmp    bl,BYTE PTR [edx]
6400e4c4:	jne    0x6400e4f1
6400e4c6:	mov    bl,BYTE PTR [ecx+0x1]
6400e4c9:	add    ecx,0x1
6400e4cc:	add    edx,0x1
6400e4cf:	cmp    bl,BYTE PTR [edx]
6400e4d1:	jne    0x6400e4f1
6400e4d3:	mov    bl,BYTE PTR [ecx+0x1]
6400e4d6:	add    ecx,0x1
6400e4d9:	add    edx,0x1
6400e4dc:	cmp    bl,BYTE PTR [edx]
6400e4de:	jne    0x6400e4f1
6400e4e0:	mov    bl,BYTE PTR [ecx+0x1]
6400e4e3:	add    ecx,0x1
6400e4e6:	add    edx,0x1
6400e4e9:	cmp    bl,BYTE PTR [edx]
6400e4eb:	jne    0x6400e4f1
6400e4ed:	cmp    ecx,esi
6400e4ef:	jb     0x6400e485
6400e4f1:	mov    edx,ecx
6400e4f3:	sub    edx,esi
6400e4f5:	add    edx,0x102
6400e4fb:	cmp    edx,ebp
6400e4fd:	lea    ecx,[esi-0x102]
6400e503:	jle    0x6400e51f
6400e505:	cmp    edx,DWORD PTR [esp+0x14]
6400e509:	mov    DWORD PTR [edi+0x70],eax
6400e50c:	mov    ebp,edx
6400e50e:	jge    0x6400e53c
6400e510:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
6400e514:	mov    dl,BYTE PTR [edx+ecx*1]
6400e517:	mov    BYTE PTR [esp+0xe],bl
6400e51b:	mov    BYTE PTR [esp+0xf],dl
6400e51f:	mov    edx,DWORD PTR [edi+0x34]
6400e522:	and    edx,eax
6400e524:	mov    eax,DWORD PTR [edi+0x40]
6400e527:	movzx  eax,WORD PTR [eax+edx*2]
6400e52b:	cmp    eax,DWORD PTR [esp+0x18]
6400e52f:	jbe    0x6400e53c
6400e531:	sub    DWORD PTR [esp+0x10],0x1
6400e536:	jne    0x6400e446
6400e53c:	mov    eax,DWORD PTR [edi+0x74]
6400e53f:	cmp    ebp,eax
6400e541:	ja     0x6400e545
6400e543:	mov    eax,ebp
6400e545:	pop    esi
6400e546:	pop    ebp
6400e547:	pop    ebx
6400e548:	add    esp,0x14
6400e54b:	ret    
6400e54c:	int3   
6400e54d:	int3   
6400e54e:	int3   
6400e54f:	int3   
6400e550:	mov    ecx,DWORD PTR [esi+0x38]
6400e553:	mov    eax,DWORD PTR [esi+0x6c]
6400e556:	push   ebp
6400e557:	mov    ebp,DWORD PTR [esp+0x8]
6400e55b:	mov    dl,BYTE PTR [ecx+ebp*1]
6400e55e:	add    eax,ecx
6400e560:	add    ecx,ebp
6400e562:	cmp    dl,BYTE PTR [eax]
6400e564:	push   edi
6400e565:	lea    edi,[eax+0x102]
6400e56b:	jne    0x6400e60a
6400e571:	mov    dl,BYTE PTR [ecx+0x1]
6400e574:	cmp    dl,BYTE PTR [eax+0x1]
6400e577:	jne    0x6400e60a
6400e57d:	add    eax,0x2
6400e580:	add    ecx,0x2
6400e583:	mov    dl,BYTE PTR [eax+0x1]
6400e586:	add    eax,0x1
6400e589:	add    ecx,0x1
6400e58c:	cmp    dl,BYTE PTR [ecx]
6400e58e:	jne    0x6400e5ef
6400e590:	mov    dl,BYTE PTR [eax+0x1]
6400e593:	add    eax,0x1
6400e596:	add    ecx,0x1
6400e599:	cmp    dl,BYTE PTR [ecx]
6400e59b:	jne    0x6400e5ef
6400e59d:	mov    dl,BYTE PTR [eax+0x1]
6400e5a0:	add    eax,0x1
6400e5a3:	add    ecx,0x1
6400e5a6:	cmp    dl,BYTE PTR [ecx]
6400e5a8:	jne    0x6400e5ef
6400e5aa:	mov    dl,BYTE PTR [eax+0x1]
6400e5ad:	add    eax,0x1
6400e5b0:	add    ecx,0x1
6400e5b3:	cmp    dl,BYTE PTR [ecx]
6400e5b5:	jne    0x6400e5ef
6400e5b7:	mov    dl,BYTE PTR [eax+0x1]
6400e5ba:	add    eax,0x1
6400e5bd:	add    ecx,0x1
6400e5c0:	cmp    dl,BYTE PTR [ecx]
6400e5c2:	jne    0x6400e5ef
6400e5c4:	mov    dl,BYTE PTR [eax+0x1]
6400e5c7:	add    eax,0x1
6400e5ca:	add    ecx,0x1
6400e5cd:	cmp    dl,BYTE PTR [ecx]
6400e5cf:	jne    0x6400e5ef
6400e5d1:	mov    dl,BYTE PTR [eax+0x1]
6400e5d4:	add    eax,0x1
6400e5d7:	add    ecx,0x1
6400e5da:	cmp    dl,BYTE PTR [ecx]
6400e5dc:	jne    0x6400e5ef
6400e5de:	mov    dl,BYTE PTR [eax+0x1]
6400e5e1:	add    eax,0x1
6400e5e4:	add    ecx,0x1
6400e5e7:	cmp    dl,BYTE PTR [ecx]
6400e5e9:	jne    0x6400e5ef
6400e5eb:	cmp    eax,edi
6400e5ed:	jb     0x6400e583
6400e5ef:	sub    eax,edi
6400e5f1:	add    eax,0x102
6400e5f6:	cmp    eax,0x3
6400e5f9:	jl     0x6400e60a
6400e5fb:	mov    ecx,DWORD PTR [esi+0x74]
6400e5fe:	cmp    eax,ecx
6400e600:	mov    DWORD PTR [esi+0x70],ebp
6400e603:	jbe    0x6400e60f
6400e605:	pop    edi
6400e606:	mov    eax,ecx
6400e608:	pop    ebp
6400e609:	ret    
6400e60a:	mov    eax,0x2
6400e60f:	pop    edi
6400e610:	pop    ebp
6400e611:	ret    
6400e612:	int3   
6400e613:	int3   
6400e614:	int3   
6400e615:	int3   
6400e616:	int3   
6400e617:	int3   
6400e618:	int3   
6400e619:	int3   
6400e61a:	int3   
6400e61b:	int3   
6400e61c:	int3   
6400e61d:	int3   
6400e61e:	int3   
6400e61f:	int3   
6400e620:	push   ebx
6400e621:	mov    ebx,DWORD PTR [edi+0x2c]
6400e624:	push   ebp
6400e625:	push   esi
6400e626:	mov    ebp,DWORD PTR [edi+0x3c]
6400e629:	sub    ebp,DWORD PTR [edi+0x74]
6400e62c:	mov    eax,DWORD PTR [edi+0x6c]
6400e62f:	mov    ecx,DWORD PTR [edi+0x2c]
6400e632:	lea    edx,[ebx+ecx*1-0x106]
6400e639:	sub    ebp,eax
6400e63b:	cmp    eax,edx
6400e63d:	jb     0x6400e69e
6400e63f:	mov    eax,DWORD PTR [edi+0x38]
6400e642:	push   ebx
6400e643:	lea    ecx,[eax+ebx*1]
6400e646:	push   ecx
6400e647:	push   eax
6400e648:	call   0x640151a0
6400e64d:	mov    edx,DWORD PTR [edi+0x4c]
6400e650:	mov    eax,DWORD PTR [edi+0x44]
6400e653:	sub    DWORD PTR [edi+0x70],ebx
6400e656:	sub    DWORD PTR [edi+0x6c],ebx
6400e659:	add    esp,0xc
6400e65c:	sub    DWORD PTR [edi+0x5c],ebx
6400e65f:	lea    ecx,[eax+edx*2]
6400e662:	movzx  eax,WORD PTR [ecx-0x2]
6400e666:	sub    ecx,0x2
6400e669:	cmp    eax,ebx
6400e66b:	jb     0x6400e671
6400e66d:	sub    eax,ebx
6400e66f:	jmp    0x6400e673
6400e671:	xor    eax,eax
6400e673:	sub    edx,0x1
6400e676:	mov    WORD PTR [ecx],ax
6400e679:	jne    0x6400e662
6400e67b:	mov    ecx,DWORD PTR [edi+0x40]
6400e67e:	mov    edx,ebx
6400e680:	lea    ecx,[ecx+ebx*2]
6400e683:	movzx  eax,WORD PTR [ecx-0x2]
6400e687:	sub    ecx,0x2
6400e68a:	cmp    eax,ebx
6400e68c:	jb     0x6400e692
6400e68e:	sub    eax,ebx
6400e690:	jmp    0x6400e694
6400e692:	xor    eax,eax
6400e694:	sub    edx,0x1
6400e697:	mov    WORD PTR [ecx],ax
6400e69a:	jne    0x6400e683
6400e69c:	add    ebp,ebx
6400e69e:	mov    esi,DWORD PTR [edi]
6400e6a0:	cmp    DWORD PTR [esi+0x4],0x0
6400e6a4:	je     0x6400e6f9
6400e6a6:	mov    edx,DWORD PTR [edi+0x74]
6400e6a9:	add    edx,DWORD PTR [edi+0x6c]
6400e6ac:	mov    ecx,ebp
6400e6ae:	add    edx,DWORD PTR [edi+0x38]
6400e6b1:	push   edx
6400e6b2:	call   0x6400e360
6400e6b7:	add    DWORD PTR [edi+0x74],eax
6400e6ba:	mov    edx,DWORD PTR [edi+0x74]
6400e6bd:	add    esp,0x4
6400e6c0:	cmp    edx,0x3
6400e6c3:	jb     0x6400e6e5
6400e6c5:	mov    eax,DWORD PTR [edi+0x6c]
6400e6c8:	mov    ecx,DWORD PTR [edi+0x38]
6400e6cb:	lea    esi,[eax+ecx*1]
6400e6ce:	movzx  eax,BYTE PTR [esi]
6400e6d1:	mov    ecx,DWORD PTR [edi+0x58]
6400e6d4:	mov    DWORD PTR [edi+0x48],eax
6400e6d7:	shl    eax,cl
6400e6d9:	movzx  ecx,BYTE PTR [esi+0x1]
6400e6dd:	xor    eax,ecx
6400e6df:	and    eax,DWORD PTR [edi+0x54]
6400e6e2:	mov    DWORD PTR [edi+0x48],eax
6400e6e5:	cmp    edx,0x106
6400e6eb:	jae    0x6400e6f9
6400e6ed:	mov    edx,DWORD PTR [edi]
6400e6ef:	cmp    DWORD PTR [edx+0x4],0x0
6400e6f3:	jne    0x6400e626
6400e6f9:	pop    esi
6400e6fa:	pop    ebp
6400e6fb:	pop    ebx
6400e6fc:	ret    
6400e6fd:	int3   
6400e6fe:	int3   
6400e6ff:	int3   
6400e700:	push   esi
6400e701:	push   edi
6400e702:	mov    edi,DWORD PTR [esp+0xc]
6400e706:	mov    eax,DWORD PTR [edi+0xc]
6400e709:	mov    esi,0xffff
6400e70e:	add    eax,0xfffffffb
6400e711:	cmp    eax,esi
6400e713:	jae    0x6400e717
6400e715:	mov    esi,eax
6400e717:	mov    eax,DWORD PTR [edi+0x74]
6400e71a:	cmp    eax,0x1
6400e71d:	ja     0x6400e72f
6400e71f:	call   0x6400e620
6400e724:	mov    eax,DWORD PTR [edi+0x74]
6400e727:	test   eax,eax
6400e729:	je     0x6400e7cd
6400e72f:	add    DWORD PTR [edi+0x6c],eax
6400e732:	mov    ecx,DWORD PTR [edi+0x5c]
6400e735:	mov    edx,DWORD PTR [edi+0x6c]
6400e738:	mov    DWORD PTR [edi+0x74],0x0
6400e73f:	lea    eax,[ecx+esi*1]
6400e742:	je     0x6400e748
6400e744:	cmp    edx,eax
6400e746:	jb     0x6400e781
6400e748:	sub    edx,eax
6400e74a:	test   ecx,ecx
6400e74c:	mov    DWORD PTR [edi+0x74],edx
6400e74f:	mov    DWORD PTR [edi+0x6c],eax
6400e752:	jl     0x6400e75b
6400e754:	mov    edx,DWORD PTR [edi+0x38]
6400e757:	add    edx,ecx
6400e759:	jmp    0x6400e75d
6400e75b:	xor    edx,edx
6400e75d:	push   0x0
6400e75f:	sub    eax,ecx
6400e761:	push   eax
6400e762:	push   edx
6400e763:	push   edi
6400e764:	call   0x64012010
6400e769:	mov    eax,DWORD PTR [edi+0x6c]
6400e76c:	mov    DWORD PTR [edi+0x5c],eax
6400e76f:	mov    eax,DWORD PTR [edi]
6400e771:	add    esp,0x10
6400e774:	call   0x6400e310
6400e779:	mov    ecx,DWORD PTR [edi]
6400e77b:	cmp    DWORD PTR [ecx+0x10],0x0
6400e77f:	je     0x6400e7c8
6400e781:	mov    ecx,DWORD PTR [edi+0x5c]
6400e784:	mov    edx,DWORD PTR [edi+0x6c]
6400e787:	mov    eax,DWORD PTR [edi+0x2c]
6400e78a:	sub    edx,ecx
6400e78c:	sub    eax,0x106
6400e791:	cmp    edx,eax
6400e793:	jb     0x6400e717
6400e795:	test   ecx,ecx
6400e797:	jl     0x6400e7a0
6400e799:	mov    eax,DWORD PTR [edi+0x38]
6400e79c:	add    eax,ecx
6400e79e:	jmp    0x6400e7a2
6400e7a0:	xor    eax,eax
6400e7a2:	push   0x0
6400e7a4:	push   edx
6400e7a5:	push   eax
6400e7a6:	push   edi
6400e7a7:	call   0x64012010
6400e7ac:	mov    ecx,DWORD PTR [edi+0x6c]
6400e7af:	mov    eax,DWORD PTR [edi]
6400e7b1:	add    esp,0x10
6400e7b4:	mov    DWORD PTR [edi+0x5c],ecx
6400e7b7:	call   0x6400e310
6400e7bc:	mov    edx,DWORD PTR [edi]
6400e7be:	cmp    DWORD PTR [edx+0x10],0x0
6400e7c2:	jne    0x6400e717
6400e7c8:	pop    edi
6400e7c9:	xor    eax,eax
6400e7cb:	pop    esi
6400e7cc:	ret    
6400e7cd:	mov    esi,DWORD PTR [esp+0x10]
6400e7d1:	test   esi,esi
6400e7d3:	je     0x6400e7c8
6400e7d5:	mov    ecx,DWORD PTR [edi+0x5c]
6400e7d8:	test   ecx,ecx
6400e7da:	jl     0x6400e7e3
6400e7dc:	mov    eax,DWORD PTR [edi+0x38]
6400e7df:	add    eax,ecx
6400e7e1:	jmp    0x6400e7e5
6400e7e3:	xor    eax,eax
6400e7e5:	xor    edx,edx
6400e7e7:	cmp    esi,0x4
6400e7ea:	sete   dl
6400e7ed:	push   edx
6400e7ee:	mov    edx,DWORD PTR [edi+0x6c]
6400e7f1:	sub    edx,ecx
6400e7f3:	push   edx
6400e7f4:	push   eax
6400e7f5:	push   edi
6400e7f6:	call   0x64012010
6400e7fb:	mov    eax,DWORD PTR [edi+0x6c]
6400e7fe:	mov    DWORD PTR [edi+0x5c],eax
6400e801:	mov    eax,DWORD PTR [edi]
6400e803:	add    esp,0x10
6400e806:	call   0x6400e310
6400e80b:	mov    ecx,DWORD PTR [edi]
6400e80d:	xor    eax,eax
6400e80f:	cmp    DWORD PTR [ecx+0x10],eax
6400e812:	jne    0x6400e823
6400e814:	cmp    esi,0x4
6400e817:	setne  al
6400e81a:	pop    edi
6400e81b:	pop    esi
6400e81c:	sub    eax,0x1
6400e81f:	and    eax,0x2
6400e822:	ret    
6400e823:	cmp    esi,0x4
6400e826:	sete   al
6400e829:	pop    edi
6400e82a:	pop    esi
6400e82b:	lea    eax,[eax+eax*1+0x1]
6400e82f:	ret    
6400e830:	push   ebx
6400e831:	push   ebp
6400e832:	push   esi
6400e833:	xor    ebp,ebp
6400e835:	push   edi
6400e836:	mov    edi,DWORD PTR [esp+0x14]
6400e83a:	lea    ebx,[ebp+0x1]
6400e83d:	lea    ecx,[ecx+0x0]
6400e840:	mov    eax,DWORD PTR [edi+0x74]
6400e843:	cmp    eax,0x106
6400e848:	jae    0x6400e86d
6400e84a:	call   0x6400e620
6400e84f:	mov    eax,DWORD PTR [edi+0x74]
6400e852:	cmp    eax,0x106
6400e857:	mov    esi,DWORD PTR [esp+0x18]
6400e85b:	jae    0x6400e865
6400e85d:	test   esi,esi
6400e85f:	je     0x6400eae4
6400e865:	test   eax,eax
6400e867:	je     0x6400eaeb
6400e86d:	cmp    eax,0x3
6400e870:	jb     0x6400e8bb
6400e872:	mov    eax,DWORD PTR [edi+0x48]
6400e875:	mov    ecx,DWORD PTR [edi+0x58]
6400e878:	mov    edx,DWORD PTR [edi+0x6c]
6400e87b:	mov    esi,DWORD PTR [edi+0x34]
6400e87e:	shl    eax,cl
6400e880:	mov    ecx,DWORD PTR [edi+0x38]
6400e883:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400e888:	xor    eax,ecx
6400e88a:	and    eax,DWORD PTR [edi+0x54]
6400e88d:	mov    ecx,DWORD PTR [edi+0x44]
6400e890:	mov    DWORD PTR [edi+0x48],eax
6400e893:	mov    ax,WORD PTR [ecx+eax*2]
6400e897:	and    esi,edx
6400e899:	mov    edx,DWORD PTR [edi+0x40]
6400e89c:	mov    WORD PTR [edx+esi*2],ax
6400e8a0:	mov    ecx,DWORD PTR [edi+0x6c]
6400e8a3:	and    ecx,DWORD PTR [edi+0x34]
6400e8a6:	mov    edx,DWORD PTR [edi+0x40]
6400e8a9:	movzx  ebp,WORD PTR [edx+ecx*2]
6400e8ad:	mov    eax,DWORD PTR [edi+0x48]
6400e8b0:	mov    ecx,DWORD PTR [edi+0x44]
6400e8b3:	mov    dx,WORD PTR [edi+0x6c]
6400e8b7:	mov    WORD PTR [ecx+eax*2],dx
6400e8bb:	test   ebp,ebp
6400e8bd:	je     0x6400e901
6400e8bf:	mov    eax,DWORD PTR [edi+0x6c]
6400e8c2:	mov    ecx,DWORD PTR [edi+0x2c]
6400e8c5:	sub    eax,ebp
6400e8c7:	sub    ecx,0x106
6400e8cd:	cmp    eax,ecx
6400e8cf:	ja     0x6400e901
6400e8d1:	mov    ecx,DWORD PTR [edi+0x88]
6400e8d7:	cmp    ecx,0x2
6400e8da:	je     0x6400e8ea
6400e8dc:	cmp    ecx,0x3
6400e8df:	je     0x6400e8ef
6400e8e1:	mov    eax,ebp
6400e8e3:	call   0x6400e3d0
6400e8e8:	jmp    0x6400e8fe
6400e8ea:	cmp    ecx,0x3
6400e8ed:	jne    0x6400e901
6400e8ef:	cmp    eax,ebx
6400e8f1:	jne    0x6400e901
6400e8f3:	push   ebp
6400e8f4:	mov    esi,edi
6400e8f6:	call   0x6400e550
6400e8fb:	add    esp,0x4
6400e8fe:	mov    DWORD PTR [edi+0x60],eax
6400e901:	cmp    DWORD PTR [edi+0x60],0x3
6400e905:	jb     0x6400ea43
6400e90b:	mov    dx,WORD PTR [edi+0x6c]
6400e90f:	sub    dx,WORD PTR [edi+0x70]
6400e913:	mov    al,BYTE PTR [edi+0x60]
6400e916:	mov    esi,DWORD PTR [edi+0x16a4]
6400e91c:	movzx  ecx,dx
6400e91f:	mov    edx,DWORD PTR [edi+0x16a0]
6400e925:	mov    WORD PTR [esi+edx*2],cx
6400e929:	mov    edx,DWORD PTR [edi+0x1698]
6400e92f:	mov    esi,DWORD PTR [edi+0x16a0]
6400e935:	sub    al,0x3
6400e937:	mov    BYTE PTR [edx+esi*1],al
6400e93a:	add    DWORD PTR [edi+0x16a0],ebx
6400e940:	movzx  eax,al
6400e943:	movzx  edx,BYTE PTR [eax+0x64025778]
6400e94a:	add    WORD PTR [edi+edx*4+0x498],bx
6400e952:	lea    eax,[edi+edx*4+0x498]
6400e959:	add    ecx,0xffff
6400e95f:	cmp    cx,0x100
6400e964:	jae    0x6400e972
6400e966:	movzx  eax,cx
6400e969:	movzx  eax,BYTE PTR [eax+0x64025578]
6400e970:	jmp    0x6400e97f
6400e972:	movzx  ecx,cx
6400e975:	shr    ecx,0x7
6400e978:	movzx  eax,BYTE PTR [ecx+0x64025678]
6400e97f:	add    WORD PTR [edi+eax*4+0x988],bx
6400e987:	mov    edx,DWORD PTR [edi+0x169c]
6400e98d:	xor    eax,eax
6400e98f:	sub    edx,ebx
6400e991:	cmp    DWORD PTR [edi+0x16a0],edx
6400e997:	sete   al
6400e99a:	mov    esi,eax
6400e99c:	mov    eax,DWORD PTR [edi+0x60]
6400e99f:	sub    DWORD PTR [edi+0x74],eax
6400e9a2:	cmp    eax,DWORD PTR [edi+0x80]
6400e9a8:	mov    ecx,DWORD PTR [edi+0x74]
6400e9ab:	ja     0x6400ea17
6400e9ad:	cmp    ecx,0x3
6400e9b0:	jb     0x6400ea17
6400e9b2:	add    eax,0xffffffff
6400e9b5:	mov    DWORD PTR [edi+0x60],eax
6400e9b8:	jmp    0x6400e9c0
6400e9ba:	lea    ebx,[ebx+0x0]
6400e9c0:	add    DWORD PTR [edi+0x6c],ebx
6400e9c3:	mov    edx,DWORD PTR [edi+0x6c]
6400e9c6:	mov    ecx,DWORD PTR [edi+0x38]
6400e9c9:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
6400e9ce:	mov    ebp,DWORD PTR [edi+0x48]
6400e9d1:	mov    ecx,DWORD PTR [edi+0x58]
6400e9d4:	shl    ebp,cl
6400e9d6:	mov    ecx,DWORD PTR [edi+0x44]
6400e9d9:	xor    eax,ebp
6400e9db:	and    eax,DWORD PTR [edi+0x54]
6400e9de:	mov    ebp,DWORD PTR [edi+0x34]
6400e9e1:	and    ebp,edx
6400e9e3:	mov    edx,DWORD PTR [edi+0x40]
6400e9e6:	mov    DWORD PTR [edi+0x48],eax
6400e9e9:	mov    ax,WORD PTR [ecx+eax*2]
6400e9ed:	mov    WORD PTR [edx+ebp*2],ax
6400e9f1:	mov    ecx,DWORD PTR [edi+0x6c]
6400e9f4:	and    ecx,DWORD PTR [edi+0x34]
6400e9f7:	mov    edx,DWORD PTR [edi+0x40]
6400e9fa:	movzx  ebp,WORD PTR [edx+ecx*2]
6400e9fe:	mov    eax,DWORD PTR [edi+0x48]
6400ea01:	mov    ecx,DWORD PTR [edi+0x44]
6400ea04:	mov    dx,WORD PTR [edi+0x6c]
6400ea08:	mov    WORD PTR [ecx+eax*2],dx
6400ea0c:	add    DWORD PTR [edi+0x60],0xffffffff
6400ea10:	jne    0x6400e9c0
6400ea12:	jmp    0x6400ea9e
6400ea17:	add    DWORD PTR [edi+0x6c],eax
6400ea1a:	mov    eax,DWORD PTR [edi+0x6c]
6400ea1d:	mov    ecx,DWORD PTR [edi+0x38]
6400ea20:	lea    edx,[eax+ecx*1]
6400ea23:	mov    ecx,DWORD PTR [edi+0x58]
6400ea26:	mov    DWORD PTR [edi+0x60],0x0
6400ea2d:	movzx  eax,BYTE PTR [edx]
6400ea30:	mov    DWORD PTR [edi+0x48],eax
6400ea33:	movzx  edx,BYTE PTR [edx+0x1]
6400ea37:	shl    eax,cl
6400ea39:	xor    eax,edx
6400ea3b:	and    eax,DWORD PTR [edi+0x54]
6400ea3e:	mov    DWORD PTR [edi+0x48],eax
6400ea41:	jmp    0x6400eaa1
6400ea43:	mov    eax,DWORD PTR [edi+0x6c]
6400ea46:	mov    ecx,DWORD PTR [edi+0x38]
6400ea49:	mov    al,BYTE PTR [eax+ecx*1]
6400ea4c:	mov    edx,DWORD PTR [edi+0x16a0]
6400ea52:	mov    ecx,DWORD PTR [edi+0x16a4]
6400ea58:	mov    WORD PTR [ecx+edx*2],0x0
6400ea5e:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ea64:	mov    edx,DWORD PTR [edi+0x1698]
6400ea6a:	mov    BYTE PTR [edx+ecx*1],al
6400ea6d:	add    DWORD PTR [edi+0x16a0],ebx
6400ea73:	movzx  edx,al
6400ea76:	add    WORD PTR [edi+edx*4+0x94],bx
6400ea7e:	lea    eax,[edi+edx*4+0x94]
6400ea85:	mov    eax,DWORD PTR [edi+0x169c]
6400ea8b:	xor    ecx,ecx
6400ea8d:	sub    eax,ebx
6400ea8f:	cmp    DWORD PTR [edi+0x16a0],eax
6400ea95:	sete   cl
6400ea98:	add    DWORD PTR [edi+0x74],0xffffffff
6400ea9c:	mov    esi,ecx
6400ea9e:	add    DWORD PTR [edi+0x6c],ebx
6400eaa1:	test   esi,esi
6400eaa3:	je     0x6400e840
6400eaa9:	mov    ecx,DWORD PTR [edi+0x5c]
6400eaac:	test   ecx,ecx
6400eaae:	jl     0x6400eab7
6400eab0:	mov    eax,DWORD PTR [edi+0x38]
6400eab3:	add    eax,ecx
6400eab5:	jmp    0x6400eab9
6400eab7:	xor    eax,eax
6400eab9:	mov    edx,DWORD PTR [edi+0x6c]
6400eabc:	push   0x0
6400eabe:	sub    edx,ecx
6400eac0:	push   edx
6400eac1:	push   eax
6400eac2:	push   edi
6400eac3:	call   0x64012010
6400eac8:	mov    eax,DWORD PTR [edi+0x6c]
6400eacb:	mov    DWORD PTR [edi+0x5c],eax
6400eace:	mov    eax,DWORD PTR [edi]
6400ead0:	add    esp,0x10
6400ead3:	call   0x6400e310
6400ead8:	mov    ecx,DWORD PTR [edi]
6400eada:	cmp    DWORD PTR [ecx+0x10],0x0
6400eade:	jne    0x6400e840
6400eae4:	pop    edi
6400eae5:	pop    esi
6400eae6:	pop    ebp
6400eae7:	xor    eax,eax
6400eae9:	pop    ebx
6400eaea:	ret    
6400eaeb:	mov    ecx,DWORD PTR [edi+0x5c]
6400eaee:	test   ecx,ecx
6400eaf0:	jl     0x6400eaf9
6400eaf2:	mov    eax,DWORD PTR [edi+0x38]
6400eaf5:	add    eax,ecx
6400eaf7:	jmp    0x6400eafb
6400eaf9:	xor    eax,eax
6400eafb:	xor    edx,edx
6400eafd:	cmp    esi,0x4
6400eb00:	sete   dl
6400eb03:	push   edx
6400eb04:	mov    edx,DWORD PTR [edi+0x6c]
6400eb07:	sub    edx,ecx
6400eb09:	push   edx
6400eb0a:	push   eax
6400eb0b:	push   edi
6400eb0c:	call   0x64012010
6400eb11:	mov    eax,DWORD PTR [edi+0x6c]
6400eb14:	mov    DWORD PTR [edi+0x5c],eax
6400eb17:	mov    eax,DWORD PTR [edi]
6400eb19:	add    esp,0x10
6400eb1c:	call   0x6400e310
6400eb21:	mov    ecx,DWORD PTR [edi]
6400eb23:	xor    eax,eax
6400eb25:	cmp    DWORD PTR [ecx+0x10],eax
6400eb28:	jne    0x6400eb3b
6400eb2a:	cmp    esi,0x4
6400eb2d:	setne  al
6400eb30:	pop    edi
6400eb31:	pop    esi
6400eb32:	pop    ebp
6400eb33:	pop    ebx
6400eb34:	sub    eax,0x1
6400eb37:	and    eax,0x2
6400eb3a:	ret    
6400eb3b:	cmp    esi,0x4
6400eb3e:	sete   al
6400eb41:	pop    edi
6400eb42:	pop    esi
6400eb43:	pop    ebp
6400eb44:	pop    ebx
6400eb45:	lea    eax,[eax+eax*1+0x1]
6400eb49:	ret    
6400eb4a:	int3   
6400eb4b:	int3   
6400eb4c:	int3   
6400eb4d:	int3   
6400eb4e:	int3   
6400eb4f:	int3   
6400eb50:	push   ecx
6400eb51:	push   ebx
6400eb52:	push   ebp
6400eb53:	push   esi
6400eb54:	push   edi
6400eb55:	mov    edi,DWORD PTR [esp+0x18]
6400eb59:	mov    DWORD PTR [esp+0x10],0x0
6400eb61:	mov    ebp,0x1
6400eb66:	mov    eax,DWORD PTR [edi+0x74]
6400eb69:	cmp    eax,0x106
6400eb6e:	jae    0x6400eb93
6400eb70:	call   0x6400e620
6400eb75:	mov    eax,DWORD PTR [edi+0x74]
6400eb78:	cmp    eax,0x106
6400eb7d:	mov    esi,DWORD PTR [esp+0x1c]
6400eb81:	jae    0x6400eb8b
6400eb83:	test   esi,esi
6400eb85:	je     0x6400ede6
6400eb8b:	test   eax,eax
6400eb8d:	je     0x6400ee9b
6400eb93:	cmp    eax,0x3
6400eb96:	jb     0x6400ebe5
6400eb98:	mov    eax,DWORD PTR [edi+0x48]
6400eb9b:	mov    ecx,DWORD PTR [edi+0x58]
6400eb9e:	mov    edx,DWORD PTR [edi+0x6c]
6400eba1:	mov    esi,DWORD PTR [edi+0x34]
6400eba4:	shl    eax,cl
6400eba6:	mov    ecx,DWORD PTR [edi+0x38]
6400eba9:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400ebae:	xor    eax,ecx
6400ebb0:	and    eax,DWORD PTR [edi+0x54]
6400ebb3:	mov    ecx,DWORD PTR [edi+0x44]
6400ebb6:	mov    DWORD PTR [edi+0x48],eax
6400ebb9:	movzx  eax,WORD PTR [ecx+eax*2]
6400ebbd:	and    esi,edx
6400ebbf:	mov    edx,DWORD PTR [edi+0x40]
6400ebc2:	mov    WORD PTR [edx+esi*2],ax
6400ebc6:	mov    ecx,DWORD PTR [edi+0x6c]
6400ebc9:	and    ecx,DWORD PTR [edi+0x34]
6400ebcc:	mov    edx,DWORD PTR [edi+0x40]
6400ebcf:	movzx  eax,WORD PTR [edx+ecx*2]
6400ebd3:	mov    ecx,DWORD PTR [edi+0x48]
6400ebd6:	mov    edx,DWORD PTR [edi+0x44]
6400ebd9:	mov    DWORD PTR [esp+0x10],eax
6400ebdd:	movzx  eax,WORD PTR [edi+0x6c]
6400ebe1:	mov    WORD PTR [edx+ecx*2],ax
6400ebe5:	mov    edx,DWORD PTR [edi+0x70]
6400ebe8:	mov    ecx,DWORD PTR [edi+0x60]
6400ebeb:	mov    DWORD PTR [edi+0x64],edx
6400ebee:	mov    edx,DWORD PTR [esp+0x10]
6400ebf2:	test   edx,edx
6400ebf4:	mov    ebx,0x2
6400ebf9:	mov    DWORD PTR [edi+0x78],ecx
6400ebfc:	mov    DWORD PTR [edi+0x60],ebx
6400ebff:	je     0x6400ec72
6400ec01:	mov    eax,ecx
6400ec03:	cmp    eax,DWORD PTR [edi+0x80]
6400ec09:	jae    0x6400ec72
6400ec0b:	mov    eax,DWORD PTR [edi+0x6c]
6400ec0e:	mov    ecx,DWORD PTR [edi+0x2c]
6400ec11:	sub    eax,edx
6400ec13:	sub    ecx,0x106
6400ec19:	cmp    eax,ecx
6400ec1b:	ja     0x6400ec72
6400ec1d:	mov    ecx,DWORD PTR [edi+0x88]
6400ec23:	cmp    ecx,ebx
6400ec25:	je     0x6400ec35
6400ec27:	cmp    ecx,0x3
6400ec2a:	je     0x6400ec3a
6400ec2c:	mov    eax,edx
6400ec2e:	call   0x6400e3d0
6400ec33:	jmp    0x6400ec49
6400ec35:	cmp    ecx,0x3
6400ec38:	jne    0x6400ec4c
6400ec3a:	cmp    eax,ebp
6400ec3c:	jne    0x6400ec4c
6400ec3e:	push   edx
6400ec3f:	mov    esi,edi
6400ec41:	call   0x6400e550
6400ec46:	add    esp,0x4
6400ec49:	mov    DWORD PTR [edi+0x60],eax
6400ec4c:	mov    eax,DWORD PTR [edi+0x60]
6400ec4f:	cmp    eax,0x5
6400ec52:	ja     0x6400ec72
6400ec54:	cmp    DWORD PTR [edi+0x88],ebp
6400ec5a:	je     0x6400ec6f
6400ec5c:	cmp    eax,0x3
6400ec5f:	jne    0x6400ec72
6400ec61:	mov    edx,DWORD PTR [edi+0x6c]
6400ec64:	sub    edx,DWORD PTR [edi+0x70]
6400ec67:	cmp    edx,0x1000
6400ec6d:	jbe    0x6400ec72
6400ec6f:	mov    DWORD PTR [edi+0x60],ebx
6400ec72:	mov    eax,DWORD PTR [edi+0x78]
6400ec75:	cmp    eax,0x3
6400ec78:	jb     0x6400edee
6400ec7e:	cmp    DWORD PTR [edi+0x60],eax
6400ec81:	ja     0x6400edee
6400ec87:	mov    dx,WORD PTR [edi+0x6c]
6400ec8b:	sub    dx,WORD PTR [edi+0x64]
6400ec8f:	mov    eax,DWORD PTR [edi+0x6c]
6400ec92:	mov    ecx,DWORD PTR [edi+0x74]
6400ec95:	mov    ebx,DWORD PTR [edi+0x16a4]
6400ec9b:	lea    esi,[eax+ecx*1-0x3]
6400ec9f:	mov    al,BYTE PTR [edi+0x78]
6400eca2:	sub    dx,bp
6400eca5:	movzx  ecx,dx
6400eca8:	mov    edx,DWORD PTR [edi+0x16a0]
6400ecae:	mov    WORD PTR [ebx+edx*2],cx
6400ecb2:	mov    edx,DWORD PTR [edi+0x1698]
6400ecb8:	mov    ebx,DWORD PTR [edi+0x16a0]
6400ecbe:	sub    al,0x3
6400ecc0:	mov    BYTE PTR [edx+ebx*1],al
6400ecc3:	add    DWORD PTR [edi+0x16a0],ebp
6400ecc9:	movzx  eax,al
6400eccc:	movzx  edx,BYTE PTR [eax+0x64025778]
6400ecd3:	add    WORD PTR [edi+edx*4+0x498],bp
6400ecdb:	lea    eax,[edi+edx*4+0x498]
6400ece2:	add    ecx,0xffff
6400ece8:	cmp    cx,0x100
6400eced:	jae    0x6400ecfb
6400ecef:	movzx  eax,cx
6400ecf2:	movzx  eax,BYTE PTR [eax+0x64025578]
6400ecf9:	jmp    0x6400ed08
6400ecfb:	movzx  ecx,cx
6400ecfe:	shr    ecx,0x7
6400ed01:	movzx  eax,BYTE PTR [ecx+0x64025678]
6400ed08:	add    WORD PTR [edi+eax*4+0x988],bp
6400ed10:	mov    edx,DWORD PTR [edi+0x169c]
6400ed16:	mov    eax,DWORD PTR [edi+0x78]
6400ed19:	sub    edx,ebp
6400ed1b:	xor    ebx,ebx
6400ed1d:	cmp    DWORD PTR [edi+0x16a0],edx
6400ed23:	mov    ecx,ebp
6400ed25:	sete   bl
6400ed28:	sub    ecx,eax
6400ed2a:	add    DWORD PTR [edi+0x74],ecx
6400ed2d:	add    eax,0xfffffffe
6400ed30:	mov    DWORD PTR [edi+0x78],eax
6400ed33:	add    DWORD PTR [edi+0x6c],ebp
6400ed36:	mov    edx,DWORD PTR [edi+0x6c]
6400ed39:	cmp    edx,esi
6400ed3b:	ja     0x6400ed8c
6400ed3d:	mov    eax,DWORD PTR [edi+0x48]
6400ed40:	mov    ecx,DWORD PTR [edi+0x58]
6400ed43:	mov    ebp,DWORD PTR [edi+0x34]
6400ed46:	shl    eax,cl
6400ed48:	mov    ecx,DWORD PTR [edi+0x38]
6400ed4b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400ed50:	xor    eax,ecx
6400ed52:	and    eax,DWORD PTR [edi+0x54]
6400ed55:	mov    ecx,DWORD PTR [edi+0x44]
6400ed58:	mov    DWORD PTR [edi+0x48],eax
6400ed5b:	movzx  eax,WORD PTR [ecx+eax*2]
6400ed5f:	and    ebp,edx
6400ed61:	mov    edx,DWORD PTR [edi+0x40]
6400ed64:	mov    WORD PTR [edx+ebp*2],ax
6400ed68:	mov    ecx,DWORD PTR [edi+0x6c]
6400ed6b:	and    ecx,DWORD PTR [edi+0x34]
6400ed6e:	mov    edx,DWORD PTR [edi+0x40]
6400ed71:	movzx  eax,WORD PTR [edx+ecx*2]
6400ed75:	mov    ecx,DWORD PTR [edi+0x48]
6400ed78:	mov    edx,DWORD PTR [edi+0x44]
6400ed7b:	mov    DWORD PTR [esp+0x10],eax
6400ed7f:	movzx  eax,WORD PTR [edi+0x6c]
6400ed83:	mov    WORD PTR [edx+ecx*2],ax
6400ed87:	mov    ebp,0x1
6400ed8c:	add    DWORD PTR [edi+0x78],0xffffffff
6400ed90:	jne    0x6400ed33
6400ed92:	add    DWORD PTR [edi+0x6c],ebp
6400ed95:	test   ebx,ebx
6400ed97:	mov    eax,DWORD PTR [edi+0x6c]
6400ed9a:	mov    DWORD PTR [edi+0x68],0x0
6400eda1:	mov    DWORD PTR [edi+0x60],0x2
6400eda8:	je     0x6400eb66
6400edae:	mov    edx,DWORD PTR [edi+0x5c]
6400edb1:	test   edx,edx
6400edb3:	jl     0x6400edbc
6400edb5:	mov    ecx,DWORD PTR [edi+0x38]
6400edb8:	add    ecx,edx
6400edba:	jmp    0x6400edbe
6400edbc:	xor    ecx,ecx
6400edbe:	push   0x0
6400edc0:	sub    eax,edx
6400edc2:	push   eax
6400edc3:	push   ecx
6400edc4:	push   edi
6400edc5:	call   0x64012010
6400edca:	mov    ecx,DWORD PTR [edi+0x6c]
6400edcd:	mov    eax,DWORD PTR [edi]
6400edcf:	add    esp,0x10
6400edd2:	mov    DWORD PTR [edi+0x5c],ecx
6400edd5:	call   0x6400e310
6400edda:	mov    edx,DWORD PTR [edi]
6400eddc:	cmp    DWORD PTR [edx+0x10],0x0
6400ede0:	jne    0x6400eb66
6400ede6:	pop    edi
6400ede7:	pop    esi
6400ede8:	pop    ebp
6400ede9:	xor    eax,eax
6400edeb:	pop    ebx
6400edec:	pop    ecx
6400eded:	ret    
6400edee:	cmp    DWORD PTR [edi+0x68],0x0
6400edf2:	je     0x6400ee8c
6400edf8:	mov    eax,DWORD PTR [edi+0x6c]
6400edfb:	mov    ecx,DWORD PTR [edi+0x38]
6400edfe:	mov    al,BYTE PTR [eax+ecx*1-0x1]
6400ee02:	mov    edx,DWORD PTR [edi+0x16a0]
6400ee08:	mov    ecx,DWORD PTR [edi+0x16a4]
6400ee0e:	mov    WORD PTR [ecx+edx*2],0x0
6400ee14:	mov    edx,DWORD PTR [edi+0x1698]
6400ee1a:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ee20:	mov    BYTE PTR [edx+ecx*1],al
6400ee23:	add    DWORD PTR [edi+0x16a0],ebp
6400ee29:	movzx  edx,al
6400ee2c:	add    WORD PTR [edi+edx*4+0x94],bp
6400ee34:	lea    eax,[edi+edx*4+0x94]
6400ee3b:	mov    eax,DWORD PTR [edi+0x169c]
6400ee41:	sub    eax,ebp
6400ee43:	cmp    DWORD PTR [edi+0x16a0],eax
6400ee49:	jne    0x6400ee7a
6400ee4b:	mov    ecx,DWORD PTR [edi+0x5c]
6400ee4e:	test   ecx,ecx
6400ee50:	jl     0x6400ee59
6400ee52:	mov    eax,DWORD PTR [edi+0x38]
6400ee55:	add    eax,ecx
6400ee57:	jmp    0x6400ee5b
6400ee59:	xor    eax,eax
6400ee5b:	mov    edx,DWORD PTR [edi+0x6c]
6400ee5e:	push   0x0
6400ee60:	sub    edx,ecx
6400ee62:	push   edx
6400ee63:	push   eax
6400ee64:	push   edi
6400ee65:	call   0x64012010
6400ee6a:	mov    eax,DWORD PTR [edi+0x6c]
6400ee6d:	mov    DWORD PTR [edi+0x5c],eax
6400ee70:	mov    eax,DWORD PTR [edi]
6400ee72:	add    esp,0x10
6400ee75:	call   0x6400e310
6400ee7a:	mov    ecx,DWORD PTR [edi]
6400ee7c:	add    DWORD PTR [edi+0x6c],ebp
6400ee7f:	add    DWORD PTR [edi+0x74],0xffffffff
6400ee83:	cmp    DWORD PTR [ecx+0x10],0x0
6400ee87:	jmp    0x6400ede0
6400ee8c:	add    DWORD PTR [edi+0x6c],ebp
6400ee8f:	add    DWORD PTR [edi+0x74],0xffffffff
6400ee93:	mov    DWORD PTR [edi+0x68],ebp
6400ee96:	jmp    0x6400eb66
6400ee9b:	cmp    DWORD PTR [edi+0x68],0x0
6400ee9f:	je     0x6400eeeb
6400eea1:	mov    edx,DWORD PTR [edi+0x6c]
6400eea4:	mov    eax,DWORD PTR [edi+0x38]
6400eea7:	mov    al,BYTE PTR [edx+eax*1-0x1]
6400eeab:	mov    ecx,DWORD PTR [edi+0x16a0]
6400eeb1:	mov    edx,DWORD PTR [edi+0x16a4]
6400eeb7:	mov    WORD PTR [edx+ecx*2],0x0
6400eebd:	mov    edx,DWORD PTR [edi+0x16a0]
6400eec3:	mov    ecx,DWORD PTR [edi+0x1698]
6400eec9:	mov    BYTE PTR [ecx+edx*1],al
6400eecc:	add    DWORD PTR [edi+0x16a0],ebp
6400eed2:	movzx  eax,al
6400eed5:	add    WORD PTR [edi+eax*4+0x94],bp
6400eedd:	lea    eax,[edi+eax*4+0x94]
6400eee4:	mov    DWORD PTR [edi+0x68],0x0
6400eeeb:	mov    ecx,DWORD PTR [edi+0x5c]
6400eeee:	test   ecx,ecx
6400eef0:	jl     0x6400eef9
6400eef2:	mov    eax,DWORD PTR [edi+0x38]
6400eef5:	add    eax,ecx
6400eef7:	jmp    0x6400eefb
6400eef9:	xor    eax,eax
6400eefb:	xor    edx,edx
6400eefd:	cmp    esi,0x4
6400ef00:	sete   dl
6400ef03:	push   edx
6400ef04:	mov    edx,DWORD PTR [edi+0x6c]
6400ef07:	sub    edx,ecx
6400ef09:	push   edx
6400ef0a:	push   eax
6400ef0b:	push   edi
6400ef0c:	call   0x64012010
6400ef11:	mov    eax,DWORD PTR [edi+0x6c]
6400ef14:	mov    DWORD PTR [edi+0x5c],eax
6400ef17:	mov    eax,DWORD PTR [edi]
6400ef19:	add    esp,0x10
6400ef1c:	call   0x6400e310
6400ef21:	mov    ecx,DWORD PTR [edi]
6400ef23:	xor    eax,eax
6400ef25:	cmp    DWORD PTR [ecx+0x10],eax
6400ef28:	jne    0x6400ef3c
6400ef2a:	cmp    esi,0x4
6400ef2d:	setne  al
6400ef30:	pop    edi
6400ef31:	pop    esi
6400ef32:	pop    ebp
6400ef33:	pop    ebx
6400ef34:	sub    eax,0x1
6400ef37:	and    eax,0x2
6400ef3a:	pop    ecx
6400ef3b:	ret    
6400ef3c:	cmp    esi,0x4
6400ef3f:	sete   al
6400ef42:	pop    edi
6400ef43:	pop    esi
6400ef44:	pop    ebp
6400ef45:	pop    ebx
6400ef46:	lea    eax,[eax+eax*1+0x1]
6400ef4a:	pop    ecx
6400ef4b:	ret    
6400ef4c:	int3   
6400ef4d:	int3   
6400ef4e:	int3   
6400ef4f:	int3   
6400ef50:	mov    edx,DWORD PTR [esp+0x4]
6400ef54:	xor    ecx,ecx
6400ef56:	cmp    edx,ecx
6400ef58:	je     0x6400efa7
6400ef5a:	mov    eax,DWORD PTR [edx+0x1c]
6400ef5d:	cmp    eax,ecx
6400ef5f:	je     0x6400efa7
6400ef61:	mov    DWORD PTR [eax+0x1c],ecx
6400ef64:	mov    DWORD PTR [edx+0x14],ecx
6400ef67:	mov    DWORD PTR [edx+0x8],ecx
6400ef6a:	mov    DWORD PTR [edx+0x18],ecx
6400ef6d:	mov    DWORD PTR [edx+0x30],0x1
6400ef74:	mov    DWORD PTR [eax],ecx
6400ef76:	mov    DWORD PTR [eax+0x4],ecx
6400ef79:	mov    DWORD PTR [eax+0xc],ecx
6400ef7c:	mov    DWORD PTR [eax+0x20],ecx
6400ef7f:	mov    DWORD PTR [eax+0x28],ecx
6400ef82:	mov    DWORD PTR [eax+0x2c],ecx
6400ef85:	mov    DWORD PTR [eax+0x30],ecx
6400ef88:	mov    DWORD PTR [eax+0x38],ecx
6400ef8b:	mov    DWORD PTR [eax+0x3c],ecx
6400ef8e:	lea    ecx,[eax+0x530]
6400ef94:	mov    DWORD PTR [eax+0x14],0x8000
6400ef9b:	mov    DWORD PTR [eax+0x6c],ecx
6400ef9e:	mov    DWORD PTR [eax+0x50],ecx
6400efa1:	mov    DWORD PTR [eax+0x4c],ecx
6400efa4:	xor    eax,eax
6400efa6:	ret    
6400efa7:	mov    eax,0xfffffffe
6400efac:	ret    
6400efad:	int3   
6400efae:	int3   
6400efaf:	int3   
6400efb0:	mov    eax,DWORD PTR [esp+0xc]
6400efb4:	push   edi
6400efb5:	xor    edi,edi
6400efb7:	cmp    eax,edi
6400efb9:	je     0x6400f074
6400efbf:	cmp    BYTE PTR [eax],0x31
6400efc2:	jne    0x6400f074
6400efc8:	cmp    DWORD PTR [esp+0x14],0x38
6400efcd:	jne    0x6400f074
6400efd3:	push   esi
6400efd4:	mov    esi,DWORD PTR [esp+0xc]
6400efd8:	cmp    esi,edi
6400efda:	je     0x6400f06c
6400efe0:	cmp    DWORD PTR [esi+0x20],edi
6400efe3:	mov    DWORD PTR [esi+0x18],edi
6400efe6:	jne    0x6400eff2
6400efe8:	mov    DWORD PTR [esi+0x20],0x640124e0
6400efef:	mov    DWORD PTR [esi+0x28],edi
6400eff2:	cmp    DWORD PTR [esi+0x24],edi
6400eff5:	jne    0x6400effe
6400eff7:	mov    DWORD PTR [esi+0x24],0x64012500
6400effe:	mov    eax,DWORD PTR [esi+0x28]
6400f001:	mov    ecx,DWORD PTR [esi+0x20]
6400f004:	push   0x2530
6400f009:	push   0x1
6400f00b:	push   eax
6400f00c:	call   ecx
6400f00e:	add    esp,0xc
6400f011:	cmp    eax,edi
6400f013:	jne    0x6400f01d
6400f015:	pop    esi
6400f016:	mov    eax,0xfffffffc
6400f01b:	pop    edi
6400f01c:	ret    
6400f01d:	mov    ecx,DWORD PTR [esp+0x10]
6400f021:	cmp    ecx,edi
6400f023:	mov    DWORD PTR [esi+0x1c],eax
6400f026:	jge    0x6400f02f
6400f028:	mov    DWORD PTR [eax+0x8],edi
6400f02b:	neg    ecx
6400f02d:	jmp    0x6400f042
6400f02f:	mov    edx,ecx
6400f031:	sar    edx,0x4
6400f034:	add    edx,0x1
6400f037:	cmp    ecx,0x30
6400f03a:	mov    DWORD PTR [eax+0x8],edx
6400f03d:	jge    0x6400f042
6400f03f:	and    ecx,0xf
6400f042:	lea    edx,[ecx-0x8]
6400f045:	cmp    edx,0x7
6400f048:	ja     0x6400f05c
6400f04a:	push   esi
6400f04b:	mov    DWORD PTR [eax+0x24],ecx
6400f04e:	mov    DWORD PTR [eax+0x34],edi
6400f051:	call   0x6400ef50
6400f056:	add    esp,0x4
6400f059:	pop    esi
6400f05a:	pop    edi
6400f05b:	ret    
6400f05c:	mov    ecx,DWORD PTR [esi+0x24]
6400f05f:	push   eax
6400f060:	mov    eax,DWORD PTR [esi+0x28]
6400f063:	push   eax
6400f064:	call   ecx
6400f066:	add    esp,0x8
6400f069:	mov    DWORD PTR [esi+0x1c],edi
6400f06c:	pop    esi
6400f06d:	mov    eax,0xfffffffe
6400f072:	pop    edi
6400f073:	ret    
6400f074:	mov    eax,0xfffffffa
6400f079:	pop    edi
6400f07a:	ret    
6400f07b:	int3   
6400f07c:	int3   
6400f07d:	int3   
6400f07e:	int3   
6400f07f:	int3   
6400f080:	mov    DWORD PTR [eax+0x4c],0x640244c8
6400f087:	mov    DWORD PTR [eax+0x54],0x9
6400f08e:	mov    DWORD PTR [eax+0x50],0x64024cc8
6400f095:	mov    DWORD PTR [eax+0x58],0x5
6400f09c:	ret    
6400f09d:	int3   
6400f09e:	int3   
6400f09f:	int3   
6400f0a0:	push   ebp
6400f0a1:	push   esi
6400f0a2:	mov    esi,DWORD PTR [ebx+0x1c]
6400f0a5:	xor    ebp,ebp
6400f0a7:	cmp    DWORD PTR [esi+0x34],ebp
6400f0aa:	push   edi
6400f0ab:	mov    edi,eax
6400f0ad:	jne    0x6400f0d6
6400f0af:	mov    ecx,DWORD PTR [esi+0x24]
6400f0b2:	mov    edx,DWORD PTR [ebx+0x20]
6400f0b5:	mov    eax,0x1
6400f0ba:	shl    eax,cl
6400f0bc:	mov    ecx,DWORD PTR [ebx+0x28]
6400f0bf:	push   0x1
6400f0c1:	push   eax
6400f0c2:	push   ecx
6400f0c3:	call   edx
6400f0c5:	add    esp,0xc
6400f0c8:	cmp    eax,ebp
6400f0ca:	mov    DWORD PTR [esi+0x34],eax
6400f0cd:	jne    0x6400f0d6
6400f0cf:	pop    edi
6400f0d0:	pop    esi
6400f0d1:	lea    eax,[ebp+0x1]
6400f0d4:	pop    ebp
6400f0d5:	ret    
6400f0d6:	cmp    DWORD PTR [esi+0x28],ebp
6400f0d9:	jne    0x6400f0ee
6400f0db:	mov    ecx,DWORD PTR [esi+0x24]
6400f0de:	mov    eax,0x1
6400f0e3:	shl    eax,cl
6400f0e5:	mov    DWORD PTR [esi+0x30],ebp
6400f0e8:	mov    DWORD PTR [esi+0x2c],ebp
6400f0eb:	mov    DWORD PTR [esi+0x28],eax
6400f0ee:	sub    edi,DWORD PTR [ebx+0x10]
6400f0f1:	mov    eax,DWORD PTR [esi+0x28]
6400f0f4:	cmp    edi,eax
6400f0f6:	jb     0x6400f11a
6400f0f8:	mov    ecx,DWORD PTR [ebx+0xc]
6400f0fb:	mov    edx,DWORD PTR [esi+0x34]
6400f0fe:	push   eax
6400f0ff:	sub    ecx,eax
6400f101:	push   ecx
6400f102:	push   edx
6400f103:	call   0x640151a0
6400f108:	mov    eax,DWORD PTR [esi+0x28]
6400f10b:	add    esp,0xc
6400f10e:	pop    edi
6400f10f:	mov    DWORD PTR [esi+0x30],ebp
6400f112:	mov    DWORD PTR [esi+0x2c],eax
6400f115:	pop    esi
6400f116:	xor    eax,eax
6400f118:	pop    ebp
6400f119:	ret    
6400f11a:	sub    eax,DWORD PTR [esi+0x30]
6400f11d:	mov    ebp,eax
6400f11f:	cmp    ebp,edi
6400f121:	jbe    0x6400f125
6400f123:	mov    ebp,edi
6400f125:	mov    ecx,DWORD PTR [ebx+0xc]
6400f128:	mov    edx,DWORD PTR [esi+0x34]
6400f12b:	add    edx,DWORD PTR [esi+0x30]
6400f12e:	push   ebp
6400f12f:	sub    ecx,edi
6400f131:	push   ecx
6400f132:	push   edx
6400f133:	call   0x640151a0
6400f138:	add    esp,0xc
6400f13b:	sub    edi,ebp
6400f13d:	je     0x6400f161
6400f13f:	mov    eax,DWORD PTR [ebx+0xc]
6400f142:	mov    ecx,DWORD PTR [esi+0x34]
6400f145:	push   edi
6400f146:	sub    eax,edi
6400f148:	push   eax
6400f149:	push   ecx
6400f14a:	call   0x640151a0
6400f14f:	mov    edx,DWORD PTR [esi+0x28]
6400f152:	add    esp,0xc
6400f155:	mov    DWORD PTR [esi+0x30],edi
6400f158:	pop    edi
6400f159:	mov    DWORD PTR [esi+0x2c],edx
6400f15c:	pop    esi
6400f15d:	xor    eax,eax
6400f15f:	pop    ebp
6400f160:	ret    
6400f161:	add    DWORD PTR [esi+0x30],ebp
6400f164:	mov    ecx,DWORD PTR [esi+0x30]
6400f167:	mov    eax,DWORD PTR [esi+0x28]
6400f16a:	cmp    ecx,eax
6400f16c:	jne    0x6400f175
6400f16e:	mov    DWORD PTR [esi+0x30],0x0
6400f175:	mov    ecx,DWORD PTR [esi+0x2c]
6400f178:	cmp    ecx,eax
6400f17a:	jae    0x6400f181
6400f17c:	add    ecx,ebp
6400f17e:	mov    DWORD PTR [esi+0x2c],ecx
6400f181:	pop    edi
6400f182:	pop    esi
6400f183:	xor    eax,eax
6400f185:	pop    ebp
6400f186:	ret    
6400f187:	int3   
6400f188:	int3   
6400f189:	int3   
6400f18a:	int3   
6400f18b:	int3   
6400f18c:	int3   
6400f18d:	int3   
6400f18e:	int3   
6400f18f:	int3   
6400f190:	mov    eax,DWORD PTR [esp+0x4]
6400f194:	sub    esp,0x2c
6400f197:	test   eax,eax
6400f199:	push   edi
6400f19a:	je     0x640106ec
6400f1a0:	mov    edi,DWORD PTR [eax+0x1c]
6400f1a3:	test   edi,edi
6400f1a5:	je     0x640106ec
6400f1ab:	cmp    DWORD PTR [eax+0xc],0x0
6400f1af:	je     0x640106ec
6400f1b5:	cmp    DWORD PTR [eax],0x0
6400f1b8:	jne    0x6400f1c4
6400f1ba:	cmp    DWORD PTR [eax+0x4],0x0
6400f1be:	jne    0x640106ec
6400f1c4:	cmp    DWORD PTR [edi],0xb
6400f1c7:	jne    0x6400f1cf
6400f1c9:	mov    DWORD PTR [edi],0xc
6400f1cf:	mov    ecx,DWORD PTR [eax+0xc]
6400f1d2:	mov    edx,DWORD PTR [eax+0x4]
6400f1d5:	push   ebx
6400f1d6:	mov    ebx,DWORD PTR [edi+0x38]
6400f1d9:	push   ebp
6400f1da:	mov    ebp,DWORD PTR [eax]
6400f1dc:	mov    DWORD PTR [esp+0x24],ecx
6400f1e0:	mov    ecx,DWORD PTR [eax+0x10]
6400f1e3:	mov    eax,DWORD PTR [edi]
6400f1e5:	cmp    eax,0x1c
6400f1e8:	push   esi
6400f1e9:	mov    esi,DWORD PTR [edi+0x3c]
6400f1ec:	mov    DWORD PTR [esp+0x1c],ecx
6400f1f0:	mov    DWORD PTR [esp+0x10],edx
6400f1f4:	mov    DWORD PTR [esp+0x18],ebx
6400f1f8:	mov    DWORD PTR [esp+0x38],edx
6400f1fc:	mov    DWORD PTR [esp+0x2c],ecx
6400f200:	mov    DWORD PTR [esp+0x30],0x0
6400f208:	ja     0x64010599
6400f20e:	mov    edi,edi
6400f210:	jmp    DWORD PTR [eax*4+0x640106f8]
6400f217:	cmp    DWORD PTR [edi+0x8],0x0
6400f21b:	jne    0x6400f228
6400f21d:	mov    DWORD PTR [edi],0xc
6400f223:	jmp    0x6401058e
6400f228:	cmp    esi,0x10
6400f22b:	jae    0x6400f258
6400f22d:	lea    ecx,[ecx+0x0]
6400f230:	test   edx,edx
6400f232:	je     0x640105ec
6400f238:	movzx  eax,BYTE PTR [ebp+0x0]
6400f23c:	mov    ecx,esi
6400f23e:	shl    eax,cl
6400f240:	sub    edx,0x1
6400f243:	add    esi,0x8
6400f246:	add    ebp,0x1
6400f249:	add    ebx,eax
6400f24b:	cmp    esi,0x10
6400f24e:	mov    DWORD PTR [esp+0x10],edx
6400f252:	mov    DWORD PTR [esp+0x18],ebx
6400f256:	jb     0x6400f230
6400f258:	test   BYTE PTR [edi+0x8],0x2
6400f25c:	je     0x6400f2ab
6400f25e:	cmp    ebx,0x8b1f
6400f264:	jne    0x6400f2ab
6400f266:	push   0x0
6400f268:	push   0x0
6400f26a:	push   0x0
6400f26c:	call   0x640124c0
6400f271:	mov    DWORD PTR [edi+0x18],eax
6400f274:	push   0x2
6400f276:	lea    ecx,[esp+0x30]
6400f27a:	mov    BYTE PTR [esp+0x30],0x1f
6400f27f:	mov    BYTE PTR [esp+0x31],0x8b
6400f284:	mov    edx,DWORD PTR [edi+0x18]
6400f287:	push   ecx
6400f288:	push   edx
6400f289:	call   0x640124c0
6400f28e:	mov    edx,DWORD PTR [esp+0x28]
6400f292:	xor    ebx,ebx
6400f294:	add    esp,0x18
6400f297:	mov    DWORD PTR [edi+0x18],eax
6400f29a:	mov    DWORD PTR [esp+0x18],ebx
6400f29e:	xor    esi,esi
6400f2a0:	mov    DWORD PTR [edi],0x1
6400f2a6:	jmp    0x6401058e
6400f2ab:	mov    eax,DWORD PTR [edi+0x20]
6400f2ae:	test   eax,eax
6400f2b0:	mov    DWORD PTR [edi+0x10],0x0
6400f2b7:	je     0x6400f2c0
6400f2b9:	mov    DWORD PTR [eax+0x30],0xffffffff
6400f2c0:	test   BYTE PTR [edi+0x8],0x1
6400f2c4:	je     0x6400f371
6400f2ca:	movzx  eax,bl
6400f2cd:	shl    eax,0x8
6400f2d0:	mov    ecx,ebx
6400f2d2:	shr    ecx,0x8
6400f2d5:	add    eax,ecx
6400f2d7:	xor    edx,edx
6400f2d9:	mov    ecx,0x1f
6400f2de:	div    ecx
6400f2e0:	test   edx,edx
6400f2e2:	jne    0x6400f371
6400f2e8:	mov    edx,ebx
6400f2ea:	and    dl,0xf
6400f2ed:	cmp    dl,0x8
6400f2f0:	je     0x6400f306
6400f2f2:	mov    eax,DWORD PTR [esp+0x40]
6400f2f6:	mov    edx,DWORD PTR [esp+0x10]
6400f2fa:	mov    DWORD PTR [eax+0x18],0x64024f14
6400f301:	jmp    0x64010588
6400f306:	shr    ebx,0x4
6400f309:	mov    ecx,ebx
6400f30b:	and    ecx,0xf
6400f30e:	add    ecx,0x8
6400f311:	sub    esi,0x4
6400f314:	cmp    ecx,DWORD PTR [edi+0x24]
6400f317:	mov    DWORD PTR [esp+0x18],ebx
6400f31b:	jbe    0x6400f331
6400f31d:	mov    ecx,DWORD PTR [esp+0x40]
6400f321:	mov    edx,DWORD PTR [esp+0x10]
6400f325:	mov    DWORD PTR [ecx+0x18],0x64024f00
6400f32c:	jmp    0x64010588
6400f331:	mov    edx,0x1
6400f336:	shl    edx,cl
6400f338:	push   0x0
6400f33a:	push   0x0
6400f33c:	push   0x0
6400f33e:	mov    DWORD PTR [edi+0x14],edx
6400f341:	call   0x640107d0
6400f346:	mov    ecx,DWORD PTR [esp+0x4c]
6400f34a:	mov    edx,DWORD PTR [esp+0x1c]
6400f34e:	shr    ebx,0x8
6400f351:	not    ebx
6400f353:	and    ebx,0x2
6400f356:	or     ebx,0x9
6400f359:	mov    DWORD PTR [edi+0x18],eax
6400f35c:	mov    DWORD PTR [ecx+0x30],eax
6400f35f:	mov    DWORD PTR [edi],ebx
6400f361:	xor    ebx,ebx
6400f363:	add    esp,0xc
6400f366:	mov    DWORD PTR [esp+0x18],ebx
6400f36a:	xor    esi,esi
6400f36c:	jmp    0x6401058e
6400f371:	mov    edx,DWORD PTR [esp+0x40]
6400f375:	mov    DWORD PTR [edx+0x18],0x64024ee8
6400f37c:	mov    edx,DWORD PTR [esp+0x10]
6400f380:	jmp    0x64010588
6400f385:	cmp    esi,0x10
6400f388:	jae    0x6400f3b8
6400f38a:	lea    ebx,[ebx+0x0]
6400f390:	test   edx,edx
6400f392:	je     0x640105ec
6400f398:	movzx  eax,BYTE PTR [ebp+0x0]
6400f39c:	mov    ecx,esi
6400f39e:	shl    eax,cl
6400f3a0:	sub    edx,0x1
6400f3a3:	add    esi,0x8
6400f3a6:	add    ebp,0x1
6400f3a9:	add    ebx,eax
6400f3ab:	cmp    esi,0x10
6400f3ae:	mov    DWORD PTR [esp+0x10],edx
6400f3b2:	mov    DWORD PTR [esp+0x18],ebx
6400f3b6:	jb     0x6400f390
6400f3b8:	cmp    bl,0x8
6400f3bb:	mov    DWORD PTR [edi+0x10],ebx
6400f3be:	je     0x6400f3d0
6400f3c0:	mov    ecx,DWORD PTR [esp+0x40]
6400f3c4:	mov    DWORD PTR [ecx+0x18],0x64024f14
6400f3cb:	jmp    0x64010588
6400f3d0:	test   ebx,0xe000
6400f3d6:	je     0x6400f3e8
6400f3d8:	mov    eax,DWORD PTR [esp+0x40]
6400f3dc:	mov    DWORD PTR [eax+0x18],0x64024ecc
6400f3e3:	jmp    0x64010588
6400f3e8:	mov    eax,DWORD PTR [edi+0x20]
6400f3eb:	test   eax,eax
6400f3ed:	je     0x6400f3f9
6400f3ef:	mov    ecx,ebx
6400f3f1:	shr    ecx,0x8
6400f3f4:	and    ecx,0x1
6400f3f7:	mov    DWORD PTR [eax],ecx
6400f3f9:	test   DWORD PTR [edi+0x10],0x200
6400f400:	je     0x6400f427
6400f402:	mov    BYTE PTR [esp+0x20],bl
6400f406:	shr    ebx,0x8
6400f409:	push   0x2
6400f40b:	lea    edx,[esp+0x24]
6400f40f:	mov    BYTE PTR [esp+0x25],bl
6400f413:	mov    eax,DWORD PTR [edi+0x18]
6400f416:	push   edx
6400f417:	push   eax
6400f418:	call   0x640124c0
6400f41d:	mov    edx,DWORD PTR [esp+0x1c]
6400f421:	add    esp,0xc
6400f424:	mov    DWORD PTR [edi+0x18],eax
6400f427:	xor    ebx,ebx
6400f429:	xor    esi,esi
6400f42b:	mov    DWORD PTR [edi],0x2
6400f431:	jmp    0x6400f438
6400f433:	cmp    esi,0x20
6400f436:	jae    0x6400f45c
6400f438:	test   edx,edx
6400f43a:	je     0x640105ec
6400f440:	movzx  eax,BYTE PTR [ebp+0x0]
6400f444:	mov    ecx,esi
6400f446:	shl    eax,cl
6400f448:	sub    edx,0x1
6400f44b:	add    esi,0x8
6400f44e:	add    ebp,0x1
6400f451:	add    ebx,eax
6400f453:	cmp    esi,0x20
6400f456:	mov    DWORD PTR [esp+0x10],edx
6400f45a:	jb     0x6400f438
6400f45c:	mov    eax,DWORD PTR [edi+0x20]
6400f45f:	test   eax,eax
6400f461:	je     0x6400f466
6400f463:	mov    DWORD PTR [eax+0x4],ebx
6400f466:	test   DWORD PTR [edi+0x10],0x200
6400f46d:	je     0x6400f4a6
6400f46f:	mov    BYTE PTR [esp+0x20],bl
6400f473:	mov    ecx,ebx
6400f475:	mov    edx,ebx
6400f477:	shr    ecx,0x8
6400f47a:	shr    edx,0x10
6400f47d:	shr    ebx,0x18
6400f480:	push   0x4
6400f482:	lea    eax,[esp+0x24]
6400f486:	mov    BYTE PTR [esp+0x25],cl
6400f48a:	mov    BYTE PTR [esp+0x26],dl
6400f48e:	mov    BYTE PTR [esp+0x27],bl
6400f492:	mov    ecx,DWORD PTR [edi+0x18]
6400f495:	push   eax
6400f496:	push   ecx
6400f497:	call   0x640124c0
6400f49c:	mov    edx,DWORD PTR [esp+0x1c]
6400f4a0:	add    esp,0xc
6400f4a3:	mov    DWORD PTR [edi+0x18],eax
6400f4a6:	xor    ebx,ebx
6400f4a8:	xor    esi,esi
6400f4aa:	mov    DWORD PTR [edi],0x3
6400f4b0:	jmp    0x6400f4b7
6400f4b2:	cmp    esi,0x10
6400f4b5:	jae    0x6400f4db
6400f4b7:	test   edx,edx
6400f4b9:	je     0x640105ec
6400f4bf:	movzx  eax,BYTE PTR [ebp+0x0]
6400f4c3:	mov    ecx,esi
6400f4c5:	shl    eax,cl
6400f4c7:	sub    edx,0x1
6400f4ca:	add    esi,0x8
6400f4cd:	add    ebp,0x1
6400f4d0:	add    ebx,eax
6400f4d2:	cmp    esi,0x10
6400f4d5:	mov    DWORD PTR [esp+0x10],edx
6400f4d9:	jb     0x6400f4b7
6400f4db:	mov    eax,DWORD PTR [edi+0x20]
6400f4de:	test   eax,eax
6400f4e0:	je     0x6400f4f8
6400f4e2:	mov    ecx,ebx
6400f4e4:	and    ecx,0xff
6400f4ea:	mov    DWORD PTR [eax+0x8],ecx
6400f4ed:	mov    ecx,DWORD PTR [edi+0x20]
6400f4f0:	mov    eax,ebx
6400f4f2:	shr    eax,0x8
6400f4f5:	mov    DWORD PTR [ecx+0xc],eax
6400f4f8:	test   DWORD PTR [edi+0x10],0x200
6400f4ff:	je     0x6400f526
6400f501:	mov    BYTE PTR [esp+0x20],bl
6400f505:	shr    ebx,0x8
6400f508:	push   0x2
6400f50a:	lea    edx,[esp+0x24]
6400f50e:	mov    BYTE PTR [esp+0x25],bl
6400f512:	mov    eax,DWORD PTR [edi+0x18]
6400f515:	push   edx
6400f516:	push   eax
6400f517:	call   0x640124c0
6400f51c:	mov    edx,DWORD PTR [esp+0x1c]
6400f520:	add    esp,0xc
6400f523:	mov    DWORD PTR [edi+0x18],eax
6400f526:	xor    ebx,ebx
6400f528:	mov    DWORD PTR [esp+0x18],ebx
6400f52c:	xor    esi,esi
6400f52e:	mov    DWORD PTR [edi],0x4
6400f534:	test   DWORD PTR [edi+0x10],0x400
6400f53b:	je     0x6400f5ab
6400f53d:	cmp    esi,0x10
6400f540:	jae    0x6400f566
6400f542:	test   edx,edx
6400f544:	je     0x640105ec
6400f54a:	movzx  eax,BYTE PTR [ebp+0x0]
6400f54e:	mov    ecx,esi
6400f550:	shl    eax,cl
6400f552:	sub    edx,0x1
6400f555:	add    esi,0x8
6400f558:	add    ebp,0x1
6400f55b:	add    ebx,eax
6400f55d:	cmp    esi,0x10
6400f560:	mov    DWORD PTR [esp+0x10],edx
6400f564:	jb     0x6400f542
6400f566:	mov    eax,DWORD PTR [edi+0x20]
6400f569:	test   eax,eax
6400f56b:	mov    DWORD PTR [edi+0x40],ebx
6400f56e:	je     0x6400f573
6400f570:	mov    DWORD PTR [eax+0x14],ebx
6400f573:	test   DWORD PTR [edi+0x10],0x200
6400f57a:	je     0x6400f5a1
6400f57c:	mov    BYTE PTR [esp+0x20],bl
6400f580:	shr    ebx,0x8
6400f583:	push   0x2
6400f585:	lea    ecx,[esp+0x24]
6400f589:	mov    BYTE PTR [esp+0x25],bl
6400f58d:	mov    edx,DWORD PTR [edi+0x18]
6400f590:	push   ecx
6400f591:	push   edx
6400f592:	call   0x640124c0
6400f597:	mov    edx,DWORD PTR [esp+0x1c]
6400f59b:	add    esp,0xc
6400f59e:	mov    DWORD PTR [edi+0x18],eax
6400f5a1:	xor    ebx,ebx
6400f5a3:	mov    DWORD PTR [esp+0x18],ebx
6400f5a7:	xor    esi,esi
6400f5a9:	jmp    0x6400f5b9
6400f5ab:	mov    eax,DWORD PTR [edi+0x20]
6400f5ae:	test   eax,eax
6400f5b0:	je     0x6400f5b9
6400f5b2:	mov    DWORD PTR [eax+0x10],0x0
6400f5b9:	mov    DWORD PTR [edi],0x5
6400f5bf:	test   DWORD PTR [edi+0x10],0x400
6400f5c6:	je     0x6400f66e
6400f5cc:	mov    eax,DWORD PTR [edi+0x40]
6400f5cf:	cmp    eax,edx
6400f5d1:	mov    DWORD PTR [esp+0x14],eax
6400f5d5:	jbe    0x6400f5dd
6400f5d7:	mov    eax,edx
6400f5d9:	mov    DWORD PTR [esp+0x14],edx
6400f5dd:	test   eax,eax
6400f5df:	je     0x6400f664
6400f5e5:	mov    ecx,DWORD PTR [edi+0x20]
6400f5e8:	test   ecx,ecx
6400f5ea:	je     0x6400f633
6400f5ec:	mov    ecx,DWORD PTR [ecx+0x10]
6400f5ef:	test   ecx,ecx
6400f5f1:	mov    DWORD PTR [esp+0x34],ecx
6400f5f5:	je     0x6400f633
6400f5f7:	mov    ecx,DWORD PTR [edi+0x20]
6400f5fa:	mov    ecx,DWORD PTR [ecx+0x14]
6400f5fd:	sub    ecx,DWORD PTR [edi+0x40]
6400f600:	mov    edx,DWORD PTR [edi+0x20]
6400f603:	mov    edx,DWORD PTR [edx+0x18]
6400f606:	mov    DWORD PTR [esp+0x24],ecx
6400f60a:	add    ecx,eax
6400f60c:	cmp    ecx,edx
6400f60e:	jbe    0x6400f616
6400f610:	sub    edx,DWORD PTR [esp+0x24]
6400f614:	mov    eax,edx
6400f616:	mov    edx,DWORD PTR [esp+0x34]
6400f61a:	push   eax
6400f61b:	mov    eax,DWORD PTR [esp+0x28]
6400f61f:	add    edx,eax
6400f621:	push   ebp
6400f622:	push   edx
6400f623:	call   0x640151a0
6400f628:	mov    eax,DWORD PTR [esp+0x20]
6400f62c:	mov    edx,DWORD PTR [esp+0x1c]
6400f630:	add    esp,0xc
6400f633:	test   DWORD PTR [edi+0x10],0x200
6400f63a:	je     0x6400f659
6400f63c:	mov    ecx,DWORD PTR [esp+0x14]
6400f640:	mov    edx,DWORD PTR [edi+0x18]
6400f643:	push   ecx
6400f644:	push   ebp
6400f645:	push   edx
6400f646:	call   0x640124c0
6400f64b:	mov    edx,DWORD PTR [esp+0x1c]
6400f64f:	mov    DWORD PTR [edi+0x18],eax
6400f652:	mov    eax,DWORD PTR [esp+0x20]
6400f656:	add    esp,0xc
6400f659:	sub    edx,eax
6400f65b:	add    ebp,eax
6400f65d:	sub    DWORD PTR [edi+0x40],eax
6400f660:	mov    DWORD PTR [esp+0x10],edx
6400f664:	cmp    DWORD PTR [edi+0x40],0x0
6400f668:	jne    0x640105ec
6400f66e:	mov    DWORD PTR [edi+0x40],0x0
6400f675:	mov    DWORD PTR [edi],0x6
6400f67b:	test   DWORD PTR [edi+0x10],0x800
6400f682:	je     0x6400f718
6400f688:	test   edx,edx
6400f68a:	je     0x640105ec
6400f690:	xor    eax,eax
6400f692:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f696:	add    eax,0x1
6400f699:	mov    DWORD PTR [esp+0x14],eax
6400f69d:	mov    eax,DWORD PTR [edi+0x20]
6400f6a0:	test   eax,eax
6400f6a2:	mov    DWORD PTR [esp+0x24],ecx
6400f6a6:	je     0x6400f6ce
6400f6a8:	mov    ecx,DWORD PTR [eax+0x1c]
6400f6ab:	test   ecx,ecx
6400f6ad:	mov    DWORD PTR [esp+0x34],ecx
6400f6b1:	je     0x6400f6ce
6400f6b3:	mov    ecx,DWORD PTR [edi+0x40]
6400f6b6:	cmp    ecx,DWORD PTR [eax+0x20]
6400f6b9:	jae    0x6400f6ce
6400f6bb:	mov    edx,DWORD PTR [esp+0x34]
6400f6bf:	mov    al,BYTE PTR [esp+0x24]
6400f6c3:	mov    BYTE PTR [edx+ecx*1],al
6400f6c6:	add    DWORD PTR [edi+0x40],0x1
6400f6ca:	mov    edx,DWORD PTR [esp+0x10]
6400f6ce:	cmp    DWORD PTR [esp+0x24],0x0
6400f6d3:	je     0x6400f6dd
6400f6d5:	mov    eax,DWORD PTR [esp+0x14]
6400f6d9:	cmp    eax,edx
6400f6db:	jb     0x6400f692
6400f6dd:	test   DWORD PTR [edi+0x10],0x200
6400f6e4:	je     0x6400f6ff
6400f6e6:	mov    ecx,DWORD PTR [esp+0x14]
6400f6ea:	mov    edx,DWORD PTR [edi+0x18]
6400f6ed:	push   ecx
6400f6ee:	push   ebp
6400f6ef:	push   edx
6400f6f0:	call   0x640124c0
6400f6f5:	mov    edx,DWORD PTR [esp+0x1c]
6400f6f9:	add    esp,0xc
6400f6fc:	mov    DWORD PTR [edi+0x18],eax
6400f6ff:	mov    eax,DWORD PTR [esp+0x14]
6400f703:	sub    edx,eax
6400f705:	add    ebp,eax
6400f707:	cmp    DWORD PTR [esp+0x24],0x0
6400f70c:	mov    DWORD PTR [esp+0x10],edx
6400f710:	jne    0x640105ec
6400f716:	jmp    0x6400f726
6400f718:	mov    eax,DWORD PTR [edi+0x20]
6400f71b:	test   eax,eax
6400f71d:	je     0x6400f726
6400f71f:	mov    DWORD PTR [eax+0x1c],0x0
6400f726:	mov    DWORD PTR [edi+0x40],0x0
6400f72d:	mov    DWORD PTR [edi],0x7
6400f733:	test   DWORD PTR [edi+0x10],0x1000
6400f73a:	je     0x6400f7d6
6400f740:	test   edx,edx
6400f742:	je     0x640105ec
6400f748:	xor    eax,eax
6400f74a:	lea    ebx,[ebx+0x0]
6400f750:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f754:	add    eax,0x1
6400f757:	mov    DWORD PTR [esp+0x14],eax
6400f75b:	mov    eax,DWORD PTR [edi+0x20]
6400f75e:	test   eax,eax
6400f760:	mov    DWORD PTR [esp+0x24],ecx
6400f764:	je     0x6400f78c
6400f766:	mov    ecx,DWORD PTR [eax+0x24]
6400f769:	test   ecx,ecx
6400f76b:	mov    DWORD PTR [esp+0x34],ecx
6400f76f:	je     0x6400f78c
6400f771:	mov    ecx,DWORD PTR [edi+0x40]
6400f774:	cmp    ecx,DWORD PTR [eax+0x28]
6400f777:	jae    0x6400f78c
6400f779:	mov    edx,DWORD PTR [esp+0x34]
6400f77d:	mov    al,BYTE PTR [esp+0x24]
6400f781:	mov    BYTE PTR [edx+ecx*1],al
6400f784:	add    DWORD PTR [edi+0x40],0x1
6400f788:	mov    edx,DWORD PTR [esp+0x10]
6400f78c:	cmp    DWORD PTR [esp+0x24],0x0
6400f791:	je     0x6400f79b
6400f793:	mov    eax,DWORD PTR [esp+0x14]
6400f797:	cmp    eax,edx
6400f799:	jb     0x6400f750
6400f79b:	test   DWORD PTR [edi+0x10],0x200
6400f7a2:	je     0x6400f7bd
6400f7a4:	mov    ecx,DWORD PTR [esp+0x14]
6400f7a8:	mov    edx,DWORD PTR [edi+0x18]
6400f7ab:	push   ecx
6400f7ac:	push   ebp
6400f7ad:	push   edx
6400f7ae:	call   0x640124c0
6400f7b3:	mov    edx,DWORD PTR [esp+0x1c]
6400f7b7:	add    esp,0xc
6400f7ba:	mov    DWORD PTR [edi+0x18],eax
6400f7bd:	mov    eax,DWORD PTR [esp+0x14]
6400f7c1:	sub    edx,eax
6400f7c3:	add    ebp,eax
6400f7c5:	cmp    DWORD PTR [esp+0x24],0x0
6400f7ca:	mov    DWORD PTR [esp+0x10],edx
6400f7ce:	jne    0x640105ec
6400f7d4:	jmp    0x6400f7e4
6400f7d6:	mov    eax,DWORD PTR [edi+0x20]
6400f7d9:	test   eax,eax
6400f7db:	je     0x6400f7e4
6400f7dd:	mov    DWORD PTR [eax+0x24],0x0
6400f7e4:	mov    DWORD PTR [edi],0x8
6400f7ea:	test   DWORD PTR [edi+0x10],0x200
6400f7f1:	je     0x6400f840
6400f7f3:	cmp    esi,0x10
6400f7f6:	jae    0x6400f820
6400f7f8:	test   edx,edx
6400f7fa:	je     0x640105ec
6400f800:	movzx  eax,BYTE PTR [ebp+0x0]
6400f804:	mov    ecx,esi
6400f806:	shl    eax,cl
6400f808:	sub    edx,0x1
6400f80b:	add    esi,0x8
6400f80e:	add    ebp,0x1
6400f811:	add    ebx,eax
6400f813:	cmp    esi,0x10
6400f816:	mov    DWORD PTR [esp+0x10],edx
6400f81a:	mov    DWORD PTR [esp+0x18],ebx
6400f81e:	jb     0x6400f7f8
6400f820:	movzx  ecx,WORD PTR [edi+0x18]
6400f824:	cmp    ebx,ecx
6400f826:	je     0x6400f838
6400f828:	mov    eax,DWORD PTR [esp+0x40]
6400f82c:	mov    DWORD PTR [eax+0x18],0x64024eb8
6400f833:	jmp    0x64010588
6400f838:	xor    ebx,ebx
6400f83a:	mov    DWORD PTR [esp+0x18],ebx
6400f83e:	xor    esi,esi
6400f840:	mov    eax,DWORD PTR [edi+0x20]
6400f843:	test   eax,eax
6400f845:	je     0x6400f85d
6400f847:	mov    ecx,DWORD PTR [edi+0x10]
6400f84a:	sar    ecx,0x9
6400f84d:	and    ecx,0x1
6400f850:	mov    DWORD PTR [eax+0x2c],ecx
6400f853:	mov    edx,DWORD PTR [edi+0x20]
6400f856:	mov    DWORD PTR [edx+0x30],0x1
6400f85d:	push   0x0
6400f85f:	push   0x0
6400f861:	push   0x0
6400f863:	call   0x640124c0
6400f868:	mov    ecx,DWORD PTR [esp+0x4c]
6400f86c:	mov    edx,DWORD PTR [esp+0x1c]
6400f870:	mov    DWORD PTR [edi+0x18],eax
6400f873:	mov    DWORD PTR [ecx+0x30],eax
6400f876:	add    esp,0xc
6400f879:	mov    DWORD PTR [edi],0xb
6400f87f:	jmp    0x6401058e
6400f884:	cmp    esi,0x20
6400f887:	jae    0x6400f8b8
6400f889:	lea    esp,[esp+0x0]
6400f890:	test   edx,edx
6400f892:	je     0x640105ec
6400f898:	movzx  eax,BYTE PTR [ebp+0x0]
6400f89c:	mov    ecx,esi
6400f89e:	shl    eax,cl
6400f8a0:	sub    edx,0x1
6400f8a3:	add    esi,0x8
6400f8a6:	add    ebp,0x1
6400f8a9:	add    ebx,eax
6400f8ab:	cmp    esi,0x20
6400f8ae:	mov    DWORD PTR [esp+0x10],edx
6400f8b2:	mov    DWORD PTR [esp+0x18],ebx
6400f8b6:	jb     0x6400f890
6400f8b8:	mov    ecx,ebx
6400f8ba:	and    ecx,0xff00
6400f8c0:	mov    eax,ebx
6400f8c2:	shl    eax,0x10
6400f8c5:	add    ecx,eax
6400f8c7:	xor    eax,eax
6400f8c9:	mov    ah,BYTE PTR [esp+0x1a]
6400f8cd:	shl    ecx,0x8
6400f8d0:	shr    ebx,0x18
6400f8d3:	add    ecx,eax
6400f8d5:	lea    eax,[ecx+ebx*1]
6400f8d8:	mov    ecx,DWORD PTR [esp+0x40]
6400f8dc:	mov    DWORD PTR [edi+0x18],eax
6400f8df:	mov    DWORD PTR [ecx+0x30],eax
6400f8e2:	xor    ebx,ebx
6400f8e4:	xor    esi,esi
6400f8e6:	mov    DWORD PTR [edi],0xa
6400f8ec:	cmp    DWORD PTR [edi+0xc],0x0
6400f8f0:	je     0x640105a6
6400f8f6:	push   0x0
6400f8f8:	push   0x0
6400f8fa:	push   0x0
6400f8fc:	call   0x640107d0
6400f901:	mov    edx,DWORD PTR [esp+0x4c]
6400f905:	mov    DWORD PTR [edi+0x18],eax
6400f908:	mov    DWORD PTR [edx+0x30],eax
6400f90b:	mov    edx,DWORD PTR [esp+0x1c]
6400f90f:	add    esp,0xc
6400f912:	mov    DWORD PTR [edi],0xb
6400f918:	cmp    DWORD PTR [esp+0x44],0x5
6400f91d:	je     0x640105ec
6400f923:	cmp    DWORD PTR [edi+0x4],0x0
6400f927:	je     0x6400f941
6400f929:	mov    ecx,esi
6400f92b:	and    ecx,0x7
6400f92e:	shr    ebx,cl
6400f930:	sub    esi,ecx
6400f932:	mov    DWORD PTR [edi],0x18
6400f938:	mov    DWORD PTR [esp+0x18],ebx
6400f93c:	jmp    0x6401058e
6400f941:	cmp    esi,0x3
6400f944:	jae    0x6400f96a
6400f946:	test   edx,edx
6400f948:	je     0x640105ec
6400f94e:	movzx  eax,BYTE PTR [ebp+0x0]
6400f952:	mov    ecx,esi
6400f954:	shl    eax,cl
6400f956:	sub    edx,0x1
6400f959:	add    esi,0x8
6400f95c:	add    ebp,0x1
6400f95f:	add    ebx,eax
6400f961:	cmp    esi,0x3
6400f964:	mov    DWORD PTR [esp+0x10],edx
6400f968:	jb     0x6400f946
6400f96a:	mov    ecx,ebx
6400f96c:	shr    ebx,1
6400f96e:	mov    eax,ebx
6400f970:	and    ecx,0x1
6400f973:	and    eax,0x3
6400f976:	sub    esi,0x1
6400f979:	cmp    eax,0x3
6400f97c:	mov    DWORD PTR [edi+0x4],ecx
6400f97f:	ja     0x6400f9df
6400f981:	jmp    DWORD PTR [eax*4+0x6401076c]
6400f988:	shr    ebx,0x2
6400f98b:	mov    DWORD PTR [edi],0xd
6400f991:	mov    DWORD PTR [esp+0x18],ebx
6400f995:	sub    esi,0x2
6400f998:	jmp    0x6401058e
6400f99d:	mov    eax,edi
6400f99f:	call   0x6400f080
6400f9a4:	shr    ebx,0x2
6400f9a7:	mov    DWORD PTR [edi],0x12
6400f9ad:	mov    DWORD PTR [esp+0x18],ebx
6400f9b1:	sub    esi,0x2
6400f9b4:	jmp    0x6401058e
6400f9b9:	shr    ebx,0x2
6400f9bc:	mov    DWORD PTR [edi],0xf
6400f9c2:	mov    DWORD PTR [esp+0x18],ebx
6400f9c6:	sub    esi,0x2
6400f9c9:	jmp    0x6401058e
6400f9ce:	mov    eax,DWORD PTR [esp+0x40]
6400f9d2:	mov    DWORD PTR [eax+0x18],0x64024ea4
6400f9d9:	mov    DWORD PTR [edi],0x1b
6400f9df:	shr    ebx,0x2
6400f9e2:	mov    DWORD PTR [esp+0x18],ebx
6400f9e6:	sub    esi,0x2
6400f9e9:	jmp    0x6401058e
6400f9ee:	mov    ecx,esi
6400f9f0:	and    ecx,0x7
6400f9f3:	shr    ebx,cl
6400f9f5:	sub    esi,ecx
6400f9f7:	cmp    esi,0x20
6400f9fa:	mov    DWORD PTR [esp+0x18],ebx
6400f9fe:	jae    0x6400fa28
6400fa00:	test   edx,edx
6400fa02:	je     0x640105ec
6400fa08:	movzx  eax,BYTE PTR [ebp+0x0]
6400fa0c:	mov    ecx,esi
6400fa0e:	shl    eax,cl
6400fa10:	sub    edx,0x1
6400fa13:	add    esi,0x8
6400fa16:	add    ebp,0x1
6400fa19:	add    ebx,eax
6400fa1b:	cmp    esi,0x20
6400fa1e:	mov    DWORD PTR [esp+0x10],edx
6400fa22:	mov    DWORD PTR [esp+0x18],ebx
6400fa26:	jb     0x6400fa00
6400fa28:	mov    ecx,ebx
6400fa2a:	mov    eax,ebx
6400fa2c:	not    ecx
6400fa2e:	and    eax,0xffff
6400fa33:	shr    ecx,0x10
6400fa36:	cmp    eax,ecx
6400fa38:	je     0x6400fa4a
6400fa3a:	mov    eax,DWORD PTR [esp+0x40]
6400fa3e:	mov    DWORD PTR [eax+0x18],0x64024e84
6400fa45:	jmp    0x64010588
6400fa4a:	xor    ebx,ebx
6400fa4c:	mov    DWORD PTR [edi+0x40],eax
6400fa4f:	mov    DWORD PTR [esp+0x18],ebx
6400fa53:	xor    esi,esi
6400fa55:	mov    DWORD PTR [edi],0xe
6400fa5b:	mov    eax,DWORD PTR [edi+0x40]
6400fa5e:	test   eax,eax
6400fa60:	mov    DWORD PTR [esp+0x14],eax
6400fa64:	je     0x6401011c
6400fa6a:	cmp    eax,edx
6400fa6c:	jbe    0x6400fa74
6400fa6e:	mov    eax,edx
6400fa70:	mov    DWORD PTR [esp+0x14],edx
6400fa74:	mov    ecx,DWORD PTR [esp+0x1c]
6400fa78:	cmp    eax,ecx
6400fa7a:	jbe    0x6400fa82
6400fa7c:	mov    eax,ecx
6400fa7e:	mov    DWORD PTR [esp+0x14],eax
6400fa82:	test   eax,eax
6400fa84:	je     0x640105ec
6400fa8a:	mov    ecx,DWORD PTR [esp+0x14]
6400fa8e:	mov    edx,DWORD PTR [esp+0x28]
6400fa92:	push   ecx
6400fa93:	push   ebp
6400fa94:	push   edx
6400fa95:	call   0x640151a0
6400fa9a:	mov    eax,DWORD PTR [esp+0x20]
6400fa9e:	sub    DWORD PTR [esp+0x1c],eax
6400faa2:	sub    DWORD PTR [esp+0x28],eax
6400faa6:	add    DWORD PTR [esp+0x34],eax
6400faaa:	mov    edx,DWORD PTR [esp+0x1c]
6400faae:	add    esp,0xc
6400fab1:	add    ebp,eax
6400fab3:	sub    DWORD PTR [edi+0x40],eax
6400fab6:	jmp    0x6401058e
6400fabb:	cmp    esi,0xe
6400fabe:	jae    0x6400fae4
6400fac0:	test   edx,edx
6400fac2:	je     0x640105ec
6400fac8:	movzx  eax,BYTE PTR [ebp+0x0]
6400facc:	mov    ecx,esi
6400face:	shl    eax,cl
6400fad0:	sub    edx,0x1
6400fad3:	add    esi,0x8
6400fad6:	add    ebp,0x1
6400fad9:	add    ebx,eax
6400fadb:	cmp    esi,0xe
6400fade:	mov    DWORD PTR [esp+0x10],edx
6400fae2:	jb     0x6400fac0
6400fae4:	mov    ecx,ebx
6400fae6:	and    ecx,0x1f
6400fae9:	shr    ebx,0x5
6400faec:	add    ecx,0x101
6400faf2:	mov    eax,ebx
6400faf4:	mov    DWORD PTR [edi+0x60],ecx
6400faf7:	shr    ebx,0x5
6400fafa:	mov    ecx,ebx
6400fafc:	and    eax,0x1f
6400faff:	and    ecx,0xf
6400fb02:	add    eax,0x1
6400fb05:	add    ecx,0x4
6400fb08:	shr    ebx,0x4
6400fb0b:	sub    esi,0xe
6400fb0e:	cmp    DWORD PTR [edi+0x60],0x11e
6400fb15:	mov    DWORD PTR [edi+0x64],eax
6400fb18:	mov    DWORD PTR [edi+0x5c],ecx
6400fb1b:	mov    DWORD PTR [esp+0x18],ebx
6400fb1f:	ja     0x6400fc15
6400fb25:	cmp    eax,0x1e
6400fb28:	ja     0x6400fc15
6400fb2e:	mov    DWORD PTR [edi+0x68],0x0
6400fb35:	mov    DWORD PTR [edi],0x10
6400fb3b:	mov    ecx,DWORD PTR [edi+0x68]
6400fb3e:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fb41:	jae    0x6400fb98
6400fb43:	cmp    esi,0x3
6400fb46:	jae    0x6400fb6c
6400fb48:	test   edx,edx
6400fb4a:	je     0x640105ec
6400fb50:	movzx  eax,BYTE PTR [ebp+0x0]
6400fb54:	mov    ecx,esi
6400fb56:	shl    eax,cl
6400fb58:	sub    edx,0x1
6400fb5b:	add    esi,0x8
6400fb5e:	add    ebp,0x1
6400fb61:	add    ebx,eax
6400fb63:	cmp    esi,0x3
6400fb66:	mov    DWORD PTR [esp+0x10],edx
6400fb6a:	jb     0x6400fb48
6400fb6c:	mov    eax,DWORD PTR [edi+0x68]
6400fb6f:	movzx  eax,WORD PTR [eax*2+0x64024d48]
6400fb77:	movzx  ecx,bl
6400fb7a:	and    ecx,0x7
6400fb7d:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fb82:	add    DWORD PTR [edi+0x68],0x1
6400fb86:	mov    ecx,DWORD PTR [edi+0x68]
6400fb89:	shr    ebx,0x3
6400fb8c:	sub    esi,0x3
6400fb8f:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fb92:	mov    DWORD PTR [esp+0x18],ebx
6400fb96:	jb     0x6400fb43
6400fb98:	cmp    DWORD PTR [edi+0x68],0x13
6400fb9c:	jae    0x6400fbc9
6400fb9e:	mov    ecx,0x1
6400fba3:	xor    eax,eax
6400fba5:	jmp    0x6400fbb0
6400fba7:	lea    esp,[esp+0x0]
6400fbae:	mov    edi,edi
6400fbb0:	mov    edx,DWORD PTR [edi+0x68]
6400fbb3:	movzx  edx,WORD PTR [edx*2+0x64024d48]
6400fbbb:	mov    WORD PTR [edi+edx*2+0x70],ax
6400fbc0:	add    DWORD PTR [edi+0x68],ecx
6400fbc3:	cmp    DWORD PTR [edi+0x68],0x13
6400fbc7:	jb     0x6400fbb0
6400fbc9:	lea    eax,[edi+0x530]
6400fbcf:	lea    ecx,[edi+0x6c]
6400fbd2:	mov    DWORD PTR [ecx],eax
6400fbd4:	mov    DWORD PTR [edi+0x4c],eax
6400fbd7:	lea    edx,[edi+0x2f0]
6400fbdd:	push   edx
6400fbde:	lea    eax,[edi+0x54]
6400fbe1:	push   eax
6400fbe2:	push   ecx
6400fbe3:	mov    DWORD PTR [eax],0x7
6400fbe9:	push   0x13
6400fbeb:	lea    eax,[edi+0x70]
6400fbee:	push   eax
6400fbef:	push   0x0
6400fbf1:	call   0x640129d0
6400fbf6:	mov    edx,DWORD PTR [esp+0x28]
6400fbfa:	add    esp,0x18
6400fbfd:	test   eax,eax
6400fbff:	mov    DWORD PTR [esp+0x30],eax
6400fc03:	je     0x6400fc25
6400fc05:	mov    ecx,DWORD PTR [esp+0x40]
6400fc09:	mov    DWORD PTR [ecx+0x18],0x64024e68
6400fc10:	jmp    0x64010588
6400fc15:	mov    eax,DWORD PTR [esp+0x40]
6400fc19:	mov    DWORD PTR [eax+0x18],0x64024e44
6400fc20:	jmp    0x64010588
6400fc25:	mov    DWORD PTR [edi+0x68],0x0
6400fc2c:	mov    DWORD PTR [edi],0x11
6400fc32:	mov    eax,DWORD PTR [edi+0x64]
6400fc35:	add    eax,DWORD PTR [edi+0x60]
6400fc38:	cmp    DWORD PTR [edi+0x68],eax
6400fc3b:	jae    0x6400fe79
6400fc41:	mov    ecx,DWORD PTR [edi+0x54]
6400fc44:	mov    eax,0x1
6400fc49:	shl    eax,cl
6400fc4b:	mov    ecx,DWORD PTR [edi+0x4c]
6400fc4e:	sub    eax,0x1
6400fc51:	and    eax,ebx
6400fc53:	mov    eax,DWORD PTR [ecx+eax*4]
6400fc56:	mov    ecx,eax
6400fc58:	shr    ecx,0x8
6400fc5b:	movzx  ecx,cl
6400fc5e:	cmp    ecx,esi
6400fc60:	mov    DWORD PTR [esp+0x14],eax
6400fc64:	jbe    0x6400fcaa
6400fc66:	test   edx,edx
6400fc68:	je     0x640105ec
6400fc6e:	movzx  eax,BYTE PTR [ebp+0x0]
6400fc72:	mov    ecx,esi
6400fc74:	shl    eax,cl
6400fc76:	mov    ecx,DWORD PTR [edi+0x54]
6400fc79:	sub    edx,0x1
6400fc7c:	add    esi,0x8
6400fc7f:	add    ebx,eax
6400fc81:	mov    eax,0x1
6400fc86:	shl    eax,cl
6400fc88:	mov    ecx,DWORD PTR [edi+0x4c]
6400fc8b:	add    ebp,0x1
6400fc8e:	mov    DWORD PTR [esp+0x10],edx
6400fc92:	sub    eax,0x1
6400fc95:	and    eax,ebx
6400fc97:	mov    eax,DWORD PTR [ecx+eax*4]
6400fc9a:	mov    ecx,eax
6400fc9c:	shr    ecx,0x8
6400fc9f:	movzx  ecx,cl
6400fca2:	cmp    ecx,esi
6400fca4:	mov    DWORD PTR [esp+0x14],eax
6400fca8:	ja     0x6400fc66
6400fcaa:	mov    ecx,eax
6400fcac:	shr    ecx,0x10
6400fcaf:	cmp    ecx,0x10
6400fcb2:	jae    0x6400fd0b
6400fcb4:	mov    ecx,eax
6400fcb6:	shr    ecx,0x8
6400fcb9:	movzx  ecx,cl
6400fcbc:	cmp    esi,ecx
6400fcbe:	jae    0x6400fcea
6400fcc0:	test   edx,edx
6400fcc2:	je     0x640105ec
6400fcc8:	movzx  eax,BYTE PTR [ebp+0x0]
6400fccc:	mov    ecx,esi
6400fcce:	shl    eax,cl
6400fcd0:	sub    edx,0x1
6400fcd3:	add    esi,0x8
6400fcd6:	add    ebp,0x1
6400fcd9:	add    ebx,eax
6400fcdb:	mov    eax,DWORD PTR [esp+0x14]
6400fcdf:	movzx  ecx,ah
6400fce2:	cmp    esi,ecx
6400fce4:	mov    DWORD PTR [esp+0x10],edx
6400fce8:	jb     0x6400fcc0
6400fcea:	movzx  ecx,ah
6400fced:	mov    eax,DWORD PTR [edi+0x68]
6400fcf0:	shr    ebx,cl
6400fcf2:	sub    esi,ecx
6400fcf4:	mov    cx,WORD PTR [esp+0x16]
6400fcf9:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fcfe:	add    DWORD PTR [edi+0x68],0x1
6400fd02:	mov    DWORD PTR [esp+0x18],ebx
6400fd06:	jmp    0x6400fe6a
6400fd0b:	mov    cx,WORD PTR [esp+0x16]
6400fd10:	cmp    cx,0x10
6400fd14:	jne    0x6400fd81
6400fd16:	movzx  ecx,ah
6400fd19:	lea    eax,[ecx+0x2]
6400fd1c:	cmp    esi,eax
6400fd1e:	mov    DWORD PTR [esp+0x24],ecx
6400fd22:	jae    0x6400fd4e
6400fd24:	test   edx,edx
6400fd26:	je     0x640105ec
6400fd2c:	movzx  eax,BYTE PTR [ebp+0x0]
6400fd30:	mov    ecx,esi
6400fd32:	shl    eax,cl
6400fd34:	mov    ecx,DWORD PTR [esp+0x24]
6400fd38:	sub    edx,0x1
6400fd3b:	add    esi,0x8
6400fd3e:	add    ebx,eax
6400fd40:	lea    eax,[ecx+0x2]
6400fd43:	add    ebp,0x1
6400fd46:	cmp    esi,eax
6400fd48:	mov    DWORD PTR [esp+0x10],edx
6400fd4c:	jb     0x6400fd24
6400fd4e:	mov    eax,DWORD PTR [edi+0x68]
6400fd51:	shr    ebx,cl
6400fd53:	sub    esi,ecx
6400fd55:	test   eax,eax
6400fd57:	mov    DWORD PTR [esp+0x18],ebx
6400fd5b:	je     0x6400fed0
6400fd61:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
6400fd66:	mov    eax,ebx
6400fd68:	and    eax,0x3
6400fd6b:	add    eax,0x3
6400fd6e:	shr    ebx,0x2
6400fd71:	mov    DWORD PTR [esp+0x24],ecx
6400fd75:	mov    DWORD PTR [esp+0x14],eax
6400fd79:	sub    esi,0x2
6400fd7c:	jmp    0x6400fe30
6400fd81:	cmp    cx,0x11
6400fd85:	movzx  ecx,ah
6400fd88:	mov    DWORD PTR [esp+0x24],ecx
6400fd8c:	jne    0x6400fdd7
6400fd8e:	lea    eax,[ecx+0x3]
6400fd91:	cmp    esi,eax
6400fd93:	jae    0x6400fdbf
6400fd95:	test   edx,edx
6400fd97:	je     0x640105ec
6400fd9d:	movzx  eax,BYTE PTR [ebp+0x0]
6400fda1:	mov    ecx,esi
6400fda3:	shl    eax,cl
6400fda5:	mov    ecx,DWORD PTR [esp+0x24]
6400fda9:	sub    edx,0x1
6400fdac:	add    esi,0x8
6400fdaf:	add    ebx,eax
6400fdb1:	lea    eax,[ecx+0x3]
6400fdb4:	add    ebp,0x1
6400fdb7:	cmp    esi,eax
6400fdb9:	mov    DWORD PTR [esp+0x10],edx
6400fdbd:	jb     0x6400fd95
6400fdbf:	shr    ebx,cl
6400fdc1:	mov    eax,ebx
6400fdc3:	and    eax,0x7
6400fdc6:	add    eax,0x3
6400fdc9:	mov    DWORD PTR [esp+0x14],eax
6400fdcd:	shr    ebx,0x3
6400fdd0:	mov    eax,0xfffffffd
6400fdd5:	jmp    0x6400fe20
6400fdd7:	lea    eax,[ecx+0x7]
6400fdda:	cmp    esi,eax
6400fddc:	jae    0x6400fe0a
6400fdde:	mov    edi,edi
6400fde0:	test   edx,edx
6400fde2:	je     0x640105ec
6400fde8:	movzx  eax,BYTE PTR [ebp+0x0]
6400fdec:	mov    ecx,esi
6400fdee:	shl    eax,cl
6400fdf0:	mov    ecx,DWORD PTR [esp+0x24]
6400fdf4:	sub    edx,0x1
6400fdf7:	add    esi,0x8
6400fdfa:	add    ebx,eax
6400fdfc:	lea    eax,[ecx+0x7]
6400fdff:	add    ebp,0x1
6400fe02:	cmp    esi,eax
6400fe04:	mov    DWORD PTR [esp+0x10],edx
6400fe08:	jb     0x6400fde0
6400fe0a:	shr    ebx,cl
6400fe0c:	mov    eax,ebx
6400fe0e:	and    eax,0x7f
6400fe11:	add    eax,0xb
6400fe14:	mov    DWORD PTR [esp+0x14],eax
6400fe18:	shr    ebx,0x7
6400fe1b:	mov    eax,0xfffffff9
6400fe20:	sub    eax,ecx
6400fe22:	add    esi,eax
6400fe24:	mov    eax,DWORD PTR [esp+0x14]
6400fe28:	mov    DWORD PTR [esp+0x24],0x0
6400fe30:	mov    ecx,DWORD PTR [edi+0x68]
6400fe33:	add    ecx,eax
6400fe35:	mov    eax,DWORD PTR [edi+0x64]
6400fe38:	add    eax,DWORD PTR [edi+0x60]
6400fe3b:	mov    DWORD PTR [esp+0x18],ebx
6400fe3f:	cmp    ecx,eax
6400fe41:	ja     0x6400fee0
6400fe47:	cmp    DWORD PTR [esp+0x14],0x0
6400fe4c:	je     0x6400fe6a
6400fe4e:	mov    eax,DWORD PTR [esp+0x24]
6400fe52:	mov    ecx,DWORD PTR [edi+0x68]
6400fe55:	sub    DWORD PTR [esp+0x14],0x1
6400fe5a:	mov    WORD PTR [edi+ecx*2+0x70],ax
6400fe5f:	add    DWORD PTR [edi+0x68],0x1
6400fe63:	cmp    DWORD PTR [esp+0x14],0x0
6400fe68:	jne    0x6400fe52
6400fe6a:	mov    eax,DWORD PTR [edi+0x64]
6400fe6d:	add    eax,DWORD PTR [edi+0x60]
6400fe70:	cmp    DWORD PTR [edi+0x68],eax
6400fe73:	jb     0x6400fc41
6400fe79:	cmp    DWORD PTR [edi],0x1b
6400fe7c:	je     0x6401058e
6400fe82:	lea    eax,[edi+0x530]
6400fe88:	lea    ecx,[edi+0x6c]
6400fe8b:	mov    DWORD PTR [ecx],eax
6400fe8d:	lea    edx,[edi+0x2f0]
6400fe93:	push   edx
6400fe94:	mov    DWORD PTR [edi+0x4c],eax
6400fe97:	lea    eax,[edi+0x54]
6400fe9a:	push   eax
6400fe9b:	push   ecx
6400fe9c:	mov    ecx,DWORD PTR [edi+0x60]
6400fe9f:	push   ecx
6400fea0:	lea    edx,[edi+0x70]
6400fea3:	push   edx
6400fea4:	push   0x1
6400fea6:	mov    DWORD PTR [eax],0x9
6400feac:	call   0x640129d0
6400feb1:	add    esp,0x18
6400feb4:	test   eax,eax
6400feb6:	mov    DWORD PTR [esp+0x30],eax
6400feba:	je     0x6400fef0
6400febc:	mov    eax,DWORD PTR [esp+0x40]
6400fec0:	mov    edx,DWORD PTR [esp+0x10]
6400fec4:	mov    DWORD PTR [eax+0x18],0x64024e28
6400fecb:	jmp    0x64010588
6400fed0:	mov    ecx,DWORD PTR [esp+0x40]
6400fed4:	mov    DWORD PTR [ecx+0x18],0x64024e0c
6400fedb:	jmp    0x64010588
6400fee0:	mov    eax,DWORD PTR [esp+0x40]
6400fee4:	mov    DWORD PTR [eax+0x18],0x64024e0c
6400feeb:	jmp    0x64010588
6400fef0:	mov    edx,DWORD PTR [edi+0x6c]
6400fef3:	lea    ecx,[edi+0x6c]
6400fef6:	mov    DWORD PTR [edi+0x50],edx
6400fef9:	lea    edx,[edi+0x2f0]
6400feff:	push   edx
6400ff00:	lea    eax,[edi+0x58]
6400ff03:	push   eax
6400ff04:	push   ecx
6400ff05:	mov    ecx,DWORD PTR [edi+0x60]
6400ff08:	mov    DWORD PTR [eax],0x6
6400ff0e:	mov    eax,DWORD PTR [edi+0x64]
6400ff11:	push   eax
6400ff12:	lea    edx,[edi+ecx*2+0x70]
6400ff16:	push   edx
6400ff17:	push   0x2
6400ff19:	call   0x640129d0
6400ff1e:	mov    edx,DWORD PTR [esp+0x28]
6400ff22:	add    esp,0x18
6400ff25:	test   eax,eax
6400ff27:	mov    DWORD PTR [esp+0x30],eax
6400ff2b:	je     0x6400ff3d
6400ff2d:	mov    eax,DWORD PTR [esp+0x40]
6400ff31:	mov    DWORD PTR [eax+0x18],0x64024df4
6400ff38:	jmp    0x64010588
6400ff3d:	mov    DWORD PTR [edi],0x12
6400ff43:	cmp    edx,0x6
6400ff46:	jb     0x6400ffb1
6400ff4c:	cmp    DWORD PTR [esp+0x1c],0x102
6400ff54:	jb     0x6400ffb1
6400ff56:	mov    eax,DWORD PTR [esp+0x40]
6400ff5a:	mov    edx,DWORD PTR [esp+0x1c]
6400ff5e:	mov    ecx,DWORD PTR [esp+0x28]
6400ff62:	mov    DWORD PTR [eax+0x10],edx
6400ff65:	mov    edx,DWORD PTR [esp+0x2c]
6400ff69:	mov    DWORD PTR [eax+0xc],ecx
6400ff6c:	mov    ecx,DWORD PTR [esp+0x10]
6400ff70:	push   edx
6400ff71:	mov    DWORD PTR [eax],ebp
6400ff73:	mov    DWORD PTR [eax+0x4],ecx
6400ff76:	push   eax
6400ff77:	mov    DWORD PTR [edi+0x38],ebx
6400ff7a:	mov    DWORD PTR [edi+0x3c],esi
6400ff7d:	call   0x64012510
6400ff82:	mov    eax,DWORD PTR [esp+0x48]
6400ff86:	mov    edx,DWORD PTR [eax+0x10]
6400ff89:	mov    ecx,DWORD PTR [eax+0xc]
6400ff8c:	mov    ebp,DWORD PTR [eax]
6400ff8e:	mov    eax,DWORD PTR [eax+0x4]
6400ff91:	mov    ebx,DWORD PTR [edi+0x38]
6400ff94:	mov    esi,DWORD PTR [edi+0x3c]
6400ff97:	mov    DWORD PTR [esp+0x24],edx
6400ff9b:	add    esp,0x8
6400ff9e:	mov    DWORD PTR [esp+0x28],ecx
6400ffa2:	mov    DWORD PTR [esp+0x10],eax
6400ffa6:	mov    DWORD PTR [esp+0x18],ebx
6400ffaa:	mov    edx,eax
6400ffac:	jmp    0x6401058e
6400ffb1:	mov    ecx,DWORD PTR [edi+0x54]
6400ffb4:	mov    eax,0x1
6400ffb9:	shl    eax,cl
6400ffbb:	sub    eax,0x1
6400ffbe:	and    eax,ebx
6400ffc0:	mov    ecx,eax
6400ffc2:	mov    eax,DWORD PTR [edi+0x4c]
6400ffc5:	mov    eax,DWORD PTR [eax+ecx*4]
6400ffc8:	mov    ecx,eax
6400ffca:	shr    ecx,0x8
6400ffcd:	movzx  ecx,cl
6400ffd0:	cmp    ecx,esi
6400ffd2:	mov    DWORD PTR [esp+0x14],eax
6400ffd6:	jbe    0x6401001c
6400ffd8:	test   edx,edx
6400ffda:	je     0x640105ec
6400ffe0:	movzx  eax,BYTE PTR [ebp+0x0]
6400ffe4:	mov    ecx,esi
6400ffe6:	shl    eax,cl
6400ffe8:	mov    ecx,DWORD PTR [edi+0x54]
6400ffeb:	sub    edx,0x1
6400ffee:	add    esi,0x8
6400fff1:	add    ebx,eax
6400fff3:	mov    eax,0x1
6400fff8:	shl    eax,cl
6400fffa:	mov    ecx,DWORD PTR [edi+0x4c]
6400fffd:	add    ebp,0x1
64010000:	mov    DWORD PTR [esp+0x10],edx
64010004:	sub    eax,0x1
64010007:	and    eax,ebx
64010009:	mov    eax,DWORD PTR [ecx+eax*4]
6401000c:	mov    ecx,eax
6401000e:	shr    ecx,0x8
64010011:	movzx  ecx,cl
64010014:	cmp    ecx,esi
64010016:	mov    DWORD PTR [esp+0x14],eax
6401001a:	ja     0x6400ffd8
6401001c:	test   al,al
6401001e:	je     0x640100ed
64010024:	test   al,0xf0
64010026:	jne    0x640100ed
6401002c:	mov    ecx,eax
6401002e:	shr    ecx,0x8
64010031:	mov    DWORD PTR [esp+0x34],ecx
64010035:	movzx  ecx,cl
64010038:	mov    DWORD PTR [esp+0x24],ecx
6401003c:	movzx  ecx,al
6401003f:	add    ecx,DWORD PTR [esp+0x24]
64010043:	mov    DWORD PTR [esp+0x18],eax
64010047:	mov    eax,0x1
6401004c:	shl    eax,cl
6401004e:	mov    ecx,DWORD PTR [esp+0x24]
64010052:	sub    eax,0x1
64010055:	and    eax,ebx
64010057:	shr    eax,cl
64010059:	mov    ecx,DWORD PTR [esp+0x14]
6401005d:	shr    ecx,0x10
64010060:	add    eax,ecx
64010062:	mov    ecx,eax
64010064:	mov    eax,DWORD PTR [edi+0x4c]
64010067:	mov    eax,DWORD PTR [eax+ecx*4]
6401006a:	movzx  ecx,BYTE PTR [esp+0x34]
6401006f:	mov    DWORD PTR [esp+0x14],eax
64010073:	shr    eax,0x8
64010076:	movzx  eax,al
64010079:	add    eax,ecx
6401007b:	cmp    eax,esi
6401007d:	jbe    0x640100e0
64010083:	test   edx,edx
64010085:	je     0x640105ec
6401008b:	movzx  eax,BYTE PTR [ebp+0x0]
6401008f:	mov    ecx,esi
64010091:	shl    eax,cl
64010093:	mov    ecx,DWORD PTR [esp+0x18]
64010097:	sub    edx,0x1
6401009a:	add    esi,0x8
6401009d:	add    ebx,eax
6401009f:	movzx  eax,ch
640100a2:	add    ecx,eax
640100a4:	mov    DWORD PTR [esp+0x24],eax
640100a8:	mov    eax,0x1
640100ad:	shl    eax,cl
640100af:	mov    ecx,DWORD PTR [esp+0x24]
640100b3:	add    ebp,0x1
640100b6:	mov    DWORD PTR [esp+0x10],edx
640100ba:	sub    eax,0x1
640100bd:	and    eax,ebx
640100bf:	shr    eax,cl
640100c1:	movzx  ecx,WORD PTR [esp+0x1a]
640100c6:	add    eax,ecx
640100c8:	mov    ecx,DWORD PTR [edi+0x4c]
640100cb:	mov    eax,DWORD PTR [ecx+eax*4]
640100ce:	mov    DWORD PTR [esp+0x14],eax
640100d2:	shr    eax,0x8
640100d5:	movzx  eax,al
640100d8:	add    eax,DWORD PTR [esp+0x24]
640100dc:	cmp    eax,esi
640100de:	ja     0x64010083
640100e0:	movzx  ecx,BYTE PTR [esp+0x19]
640100e5:	mov    eax,DWORD PTR [esp+0x14]
640100e9:	shr    ebx,cl
640100eb:	sub    esi,ecx
640100ed:	mov    ecx,eax
640100ef:	shr    ecx,0x8
640100f2:	movzx  ecx,cl
640100f5:	shr    ebx,cl
640100f7:	sub    esi,ecx
640100f9:	mov    DWORD PTR [esp+0x24],ecx
640100fd:	mov    ecx,eax
640100ff:	shr    ecx,0x10
64010102:	test   al,al
64010104:	mov    DWORD PTR [esp+0x18],ebx
64010108:	mov    DWORD PTR [edi+0x40],ecx
6401010b:	jne    0x64010118
6401010d:	mov    DWORD PTR [edi],0x17
64010113:	jmp    0x6401058e
64010118:	test   al,0x20
6401011a:	je     0x64010127
6401011c:	mov    DWORD PTR [edi],0xb
64010122:	jmp    0x6401058e
64010127:	test   al,0x40
64010129:	je     0x6401013b
6401012b:	mov    eax,DWORD PTR [esp+0x40]
6401012f:	mov    DWORD PTR [eax+0x18],0x64024dd8
64010136:	jmp    0x64010588
6401013b:	and    eax,0xf
6401013e:	mov    DWORD PTR [edi+0x48],eax
64010141:	mov    DWORD PTR [edi],0x13
64010147:	mov    eax,DWORD PTR [edi+0x48]
6401014a:	test   eax,eax
6401014c:	je     0x6401018c
6401014e:	cmp    esi,eax
64010150:	jae    0x64010176
64010152:	test   edx,edx
64010154:	je     0x640105ec
6401015a:	movzx  eax,BYTE PTR [ebp+0x0]
6401015e:	mov    ecx,esi
64010160:	shl    eax,cl
64010162:	sub    edx,0x1
64010165:	add    esi,0x8
64010168:	add    ebp,0x1
6401016b:	add    ebx,eax
6401016d:	cmp    esi,DWORD PTR [edi+0x48]
64010170:	mov    DWORD PTR [esp+0x10],edx
64010174:	jb     0x64010152
64010176:	mov    ecx,DWORD PTR [edi+0x48]
64010179:	mov    eax,0x1
6401017e:	shl    eax,cl
64010180:	sub    eax,0x1
64010183:	and    eax,ebx
64010185:	add    DWORD PTR [edi+0x40],eax
64010188:	shr    ebx,cl
6401018a:	sub    esi,ecx
6401018c:	mov    DWORD PTR [edi],0x14
64010192:	mov    ecx,DWORD PTR [edi+0x58]
64010195:	mov    eax,0x1
6401019a:	shl    eax,cl
6401019c:	sub    eax,0x1
6401019f:	and    eax,ebx
640101a1:	mov    ecx,eax
640101a3:	mov    eax,DWORD PTR [edi+0x50]
640101a6:	mov    eax,DWORD PTR [eax+ecx*4]
640101a9:	mov    ecx,eax
640101ab:	shr    ecx,0x8
640101ae:	movzx  ecx,cl
640101b1:	cmp    ecx,esi
640101b3:	mov    DWORD PTR [esp+0x14],eax
640101b7:	jbe    0x64010204
640101b9:	lea    esp,[esp+0x0]
640101c0:	test   edx,edx
640101c2:	je     0x640105ec
640101c8:	movzx  eax,BYTE PTR [ebp+0x0]
640101cc:	mov    ecx,esi
640101ce:	shl    eax,cl
640101d0:	mov    ecx,DWORD PTR [edi+0x58]
640101d3:	sub    edx,0x1
640101d6:	add    esi,0x8
640101d9:	add    ebx,eax
640101db:	mov    eax,0x1
640101e0:	shl    eax,cl
640101e2:	mov    ecx,DWORD PTR [edi+0x50]
640101e5:	add    ebp,0x1
640101e8:	mov    DWORD PTR [esp+0x10],edx
640101ec:	sub    eax,0x1
640101ef:	and    eax,ebx
640101f1:	mov    eax,DWORD PTR [ecx+eax*4]
640101f4:	mov    ecx,eax
640101f6:	shr    ecx,0x8
640101f9:	movzx  ecx,cl
640101fc:	cmp    ecx,esi
640101fe:	mov    DWORD PTR [esp+0x14],eax
64010202:	ja     0x640101c0
64010204:	test   al,0xf0
64010206:	jne    0x640102cd
6401020c:	mov    ecx,eax
6401020e:	shr    ecx,0x8
64010211:	mov    DWORD PTR [esp+0x34],ecx
64010215:	movzx  ecx,cl
64010218:	mov    DWORD PTR [esp+0x24],ecx
6401021c:	movzx  ecx,al
6401021f:	add    ecx,DWORD PTR [esp+0x24]
64010223:	mov    DWORD PTR [esp+0x18],eax
64010227:	mov    eax,0x1
6401022c:	shl    eax,cl
6401022e:	mov    ecx,DWORD PTR [esp+0x24]
64010232:	sub    eax,0x1
64010235:	and    eax,ebx
64010237:	shr    eax,cl
64010239:	mov    ecx,DWORD PTR [esp+0x14]
6401023d:	shr    ecx,0x10
64010240:	add    eax,ecx
64010242:	mov    ecx,eax
64010244:	mov    eax,DWORD PTR [edi+0x50]
64010247:	mov    eax,DWORD PTR [eax+ecx*4]
6401024a:	movzx  ecx,BYTE PTR [esp+0x34]
6401024f:	mov    DWORD PTR [esp+0x14],eax
64010253:	shr    eax,0x8
64010256:	movzx  eax,al
64010259:	add    eax,ecx
6401025b:	cmp    eax,esi
6401025d:	jbe    0x640102c0
64010263:	test   edx,edx
64010265:	je     0x640105ec
6401026b:	movzx  eax,BYTE PTR [ebp+0x0]
6401026f:	mov    ecx,esi
64010271:	shl    eax,cl
64010273:	mov    ecx,DWORD PTR [esp+0x18]
64010277:	sub    edx,0x1
6401027a:	add    esi,0x8
6401027d:	add    ebx,eax
6401027f:	movzx  eax,ch
64010282:	add    ecx,eax
64010284:	mov    DWORD PTR [esp+0x24],eax
64010288:	mov    eax,0x1
6401028d:	shl    eax,cl
6401028f:	mov    ecx,DWORD PTR [esp+0x24]
64010293:	add    ebp,0x1
64010296:	mov    DWORD PTR [esp+0x10],edx
6401029a:	sub    eax,0x1
6401029d:	and    eax,ebx
6401029f:	shr    eax,cl
640102a1:	movzx  ecx,WORD PTR [esp+0x1a]
640102a6:	add    eax,ecx
640102a8:	mov    ecx,DWORD PTR [edi+0x50]
640102ab:	mov    eax,DWORD PTR [ecx+eax*4]
640102ae:	mov    DWORD PTR [esp+0x14],eax
640102b2:	shr    eax,0x8
640102b5:	movzx  eax,al
640102b8:	add    eax,DWORD PTR [esp+0x24]
640102bc:	cmp    eax,esi
640102be:	ja     0x64010263
640102c0:	movzx  ecx,BYTE PTR [esp+0x19]
640102c5:	mov    eax,DWORD PTR [esp+0x14]
640102c9:	shr    ebx,cl
640102cb:	sub    esi,ecx
640102cd:	mov    ecx,eax
640102cf:	shr    ecx,0x8
640102d2:	movzx  ecx,cl
640102d5:	shr    ebx,cl
640102d7:	sub    esi,ecx
640102d9:	test   al,0x40
640102db:	mov    DWORD PTR [esp+0x24],ecx
640102df:	mov    DWORD PTR [esp+0x18],ebx
640102e3:	je     0x640102f5
640102e5:	mov    eax,DWORD PTR [esp+0x40]
640102e9:	mov    DWORD PTR [eax+0x18],0x64024dc0
640102f0:	jmp    0x64010588
640102f5:	mov    ecx,eax
640102f7:	shr    ecx,0x10
640102fa:	and    eax,0xf
640102fd:	mov    DWORD PTR [edi+0x44],ecx
64010300:	mov    DWORD PTR [edi+0x48],eax
64010303:	mov    DWORD PTR [edi],0x15
64010309:	mov    eax,DWORD PTR [edi+0x48]
6401030c:	test   eax,eax
6401030e:	je     0x64010352
64010310:	cmp    esi,eax
64010312:	jae    0x64010338
64010314:	test   edx,edx
64010316:	je     0x640105ec
6401031c:	movzx  eax,BYTE PTR [ebp+0x0]
64010320:	mov    ecx,esi
64010322:	shl    eax,cl
64010324:	sub    edx,0x1
64010327:	add    esi,0x8
6401032a:	add    ebp,0x1
6401032d:	add    ebx,eax
6401032f:	cmp    esi,DWORD PTR [edi+0x48]
64010332:	mov    DWORD PTR [esp+0x10],edx
64010336:	jb     0x64010314
64010338:	mov    ecx,DWORD PTR [edi+0x48]
6401033b:	mov    eax,0x1
64010340:	shl    eax,cl
64010342:	sub    eax,0x1
64010345:	and    eax,ebx
64010347:	add    DWORD PTR [edi+0x44],eax
6401034a:	shr    ebx,cl
6401034c:	sub    esi,ecx
6401034e:	mov    DWORD PTR [esp+0x18],ebx
64010352:	mov    ecx,DWORD PTR [edi+0x2c]
64010355:	sub    ecx,DWORD PTR [esp+0x1c]
64010359:	add    ecx,DWORD PTR [esp+0x2c]
6401035d:	cmp    DWORD PTR [edi+0x44],ecx
64010360:	jbe    0x64010372
64010362:	mov    eax,DWORD PTR [esp+0x40]
64010366:	mov    DWORD PTR [eax+0x18],0x64024da0
6401036d:	jmp    0x64010588
64010372:	mov    DWORD PTR [edi],0x16
64010378:	cmp    DWORD PTR [esp+0x1c],0x0
6401037d:	je     0x640105ec
64010383:	mov    ecx,DWORD PTR [esp+0x2c]
64010387:	sub    ecx,DWORD PTR [esp+0x1c]
6401038b:	mov    eax,DWORD PTR [edi+0x44]
6401038e:	cmp    eax,ecx
64010390:	jbe    0x640103ce
64010392:	sub    eax,ecx
64010394:	mov    ecx,DWORD PTR [edi+0x30]
64010397:	cmp    eax,ecx
64010399:	mov    DWORD PTR [esp+0x14],eax
6401039d:	jbe    0x640103af
6401039f:	sub    eax,ecx
640103a1:	mov    ecx,DWORD PTR [edi+0x34]
640103a4:	add    ecx,DWORD PTR [edi+0x28]
640103a7:	mov    DWORD PTR [esp+0x14],eax
640103ab:	sub    ecx,eax
640103ad:	jmp    0x640103bb
640103af:	mov    ecx,DWORD PTR [edi+0x34]
640103b2:	sub    ecx,eax
640103b4:	add    ecx,DWORD PTR [edi+0x30]
640103b7:	mov    eax,DWORD PTR [esp+0x14]
640103bb:	mov    DWORD PTR [esp+0x24],ecx
640103bf:	mov    ecx,DWORD PTR [edi+0x40]
640103c2:	cmp    eax,ecx
640103c4:	mov    DWORD PTR [esp+0x34],ecx
640103c8:	jbe    0x640103e3
640103ca:	mov    eax,ecx
640103cc:	jmp    0x640103df
640103ce:	mov    ecx,DWORD PTR [esp+0x28]
640103d2:	sub    ecx,eax
640103d4:	mov    eax,DWORD PTR [edi+0x40]
640103d7:	mov    DWORD PTR [esp+0x24],ecx
640103db:	mov    DWORD PTR [esp+0x34],eax
640103df:	mov    DWORD PTR [esp+0x14],eax
640103e3:	mov    ecx,DWORD PTR [esp+0x1c]
640103e7:	cmp    eax,ecx
640103e9:	jbe    0x640103f1
640103eb:	mov    eax,ecx
640103ed:	mov    DWORD PTR [esp+0x14],eax
640103f1:	sub    ecx,eax
640103f3:	mov    DWORD PTR [esp+0x1c],ecx
640103f7:	mov    ecx,DWORD PTR [esp+0x34]
640103fb:	sub    ecx,eax
640103fd:	mov    eax,DWORD PTR [esp+0x28]
64010401:	mov    DWORD PTR [edi+0x40],ecx
64010404:	mov    ecx,DWORD PTR [esp+0x24]
64010408:	mov    cl,BYTE PTR [ecx]
6401040a:	add    DWORD PTR [esp+0x24],0x1
6401040f:	mov    BYTE PTR [eax],cl
64010411:	add    eax,0x1
64010414:	sub    DWORD PTR [esp+0x14],0x1
64010419:	jne    0x64010404
6401041b:	cmp    DWORD PTR [edi+0x40],0x0
6401041f:	mov    DWORD PTR [esp+0x28],eax
64010423:	jne    0x6401058e
64010429:	mov    DWORD PTR [edi],0x12
6401042f:	jmp    0x6401058e
64010434:	cmp    DWORD PTR [esp+0x1c],0x0
64010439:	je     0x640105ec
6401043f:	mov    eax,DWORD PTR [esp+0x28]
64010443:	mov    cl,BYTE PTR [edi+0x40]
64010446:	mov    BYTE PTR [eax],cl
64010448:	add    eax,0x1
6401044b:	sub    DWORD PTR [esp+0x1c],0x1
64010450:	mov    DWORD PTR [esp+0x28],eax
64010454:	mov    DWORD PTR [edi],0x12
6401045a:	jmp    0x6401058e
6401045f:	cmp    DWORD PTR [edi+0x8],0x0
64010463:	je     0x6401052c
64010469:	cmp    esi,0x20
6401046c:	jae    0x64010498
6401046e:	mov    edi,edi
64010470:	test   edx,edx
64010472:	je     0x640105ec
64010478:	movzx  eax,BYTE PTR [ebp+0x0]
6401047c:	mov    ecx,esi
6401047e:	shl    eax,cl
64010480:	sub    edx,0x1
64010483:	add    esi,0x8
64010486:	add    ebp,0x1
64010489:	add    ebx,eax
6401048b:	cmp    esi,0x20
6401048e:	mov    DWORD PTR [esp+0x10],edx
64010492:	mov    DWORD PTR [esp+0x18],ebx
64010496:	jb     0x64010470
64010498:	mov    eax,DWORD PTR [esp+0x2c]
6401049c:	sub    eax,DWORD PTR [esp+0x1c]
640104a0:	mov    ecx,DWORD PTR [esp+0x40]
640104a4:	add    DWORD PTR [ecx+0x14],eax
640104a7:	add    DWORD PTR [edi+0x1c],eax
640104aa:	test   eax,eax
640104ac:	mov    DWORD PTR [esp+0x2c],eax
640104b0:	je     0x640104e1
640104b2:	mov    ecx,DWORD PTR [esp+0x28]
640104b6:	mov    edx,DWORD PTR [edi+0x18]
640104b9:	push   eax
640104ba:	sub    ecx,eax
640104bc:	cmp    DWORD PTR [edi+0x10],0x0
640104c0:	push   ecx
640104c1:	push   edx
640104c2:	je     0x640104cb
640104c4:	call   0x640124c0
640104c9:	jmp    0x640104d0
640104cb:	call   0x640107d0
640104d0:	mov    ecx,DWORD PTR [esp+0x4c]
640104d4:	mov    edx,DWORD PTR [esp+0x1c]
640104d8:	mov    DWORD PTR [edi+0x18],eax
640104db:	add    esp,0xc
640104de:	mov    DWORD PTR [ecx+0x30],eax
640104e1:	cmp    DWORD PTR [edi+0x10],0x0
640104e5:	mov    eax,DWORD PTR [esp+0x1c]
640104e9:	mov    DWORD PTR [esp+0x2c],eax
640104ed:	mov    eax,ebx
640104ef:	jne    0x6401050f
640104f1:	and    eax,0xff00
640104f6:	mov    ecx,ebx
640104f8:	shl    ecx,0x10
640104fb:	add    eax,ecx
640104fd:	xor    ecx,ecx
640104ff:	mov    ch,BYTE PTR [esp+0x1a]
64010503:	shl    eax,0x8
64010506:	add    eax,ecx
64010508:	mov    ecx,ebx
6401050a:	shr    ecx,0x18
6401050d:	add    eax,ecx
6401050f:	cmp    eax,DWORD PTR [edi+0x18]
64010512:	je     0x64010524
64010514:	mov    eax,DWORD PTR [esp+0x40]
64010518:	mov    DWORD PTR [eax+0x18],0x64024d88
6401051f:	jmp    0x64010588
64010524:	xor    ebx,ebx
64010526:	mov    DWORD PTR [esp+0x18],ebx
6401052a:	xor    esi,esi
6401052c:	mov    DWORD PTR [edi],0x19
64010532:	cmp    DWORD PTR [edi+0x8],0x0
64010536:	je     0x640105d4
6401053c:	cmp    DWORD PTR [edi+0x10],0x0
64010540:	je     0x640105d4
64010546:	cmp    esi,0x20
64010549:	jae    0x64010578
6401054b:	jmp    0x64010550
6401054d:	lea    ecx,[ecx+0x0]
64010550:	test   edx,edx
64010552:	je     0x640105ec
64010558:	movzx  eax,BYTE PTR [ebp+0x0]
6401055c:	mov    ecx,esi
6401055e:	shl    eax,cl
64010560:	sub    edx,0x1
64010563:	add    esi,0x8
64010566:	add    ebp,0x1
64010569:	add    ebx,eax
6401056b:	cmp    esi,0x20
6401056e:	mov    DWORD PTR [esp+0x10],edx
64010572:	mov    DWORD PTR [esp+0x18],ebx
64010576:	jb     0x64010550
64010578:	cmp    ebx,DWORD PTR [edi+0x1c]
6401057b:	je     0x640105d0
6401057d:	mov    ecx,DWORD PTR [esp+0x40]
64010581:	mov    DWORD PTR [ecx+0x18],0x64024d70
64010588:	mov    DWORD PTR [edi],0x1b
6401058e:	mov    eax,DWORD PTR [edi]
64010590:	cmp    eax,0x1c
64010593:	jbe    0x6400f210
64010599:	mov    eax,0xfffffffe
6401059e:	pop    esi
6401059f:	pop    ebp
640105a0:	pop    ebx
640105a1:	pop    edi
640105a2:	add    esp,0x2c
640105a5:	ret    
640105a6:	mov    eax,DWORD PTR [esp+0x40]
640105aa:	mov    ecx,DWORD PTR [esp+0x28]
640105ae:	mov    DWORD PTR [eax+0xc],ecx
640105b1:	mov    ecx,DWORD PTR [esp+0x1c]
640105b5:	mov    DWORD PTR [eax],ebp
640105b7:	mov    DWORD PTR [eax+0x10],ecx
640105ba:	mov    DWORD PTR [eax+0x4],edx
640105bd:	mov    DWORD PTR [edi+0x3c],esi
640105c0:	pop    esi
640105c1:	pop    ebp
640105c2:	mov    DWORD PTR [edi+0x38],ebx
640105c5:	pop    ebx
640105c6:	mov    eax,0x2
640105cb:	pop    edi
640105cc:	add    esp,0x2c
640105cf:	ret    
640105d0:	xor    ebx,ebx
640105d2:	xor    esi,esi
640105d4:	mov    DWORD PTR [edi],0x1a
640105da:	mov    DWORD PTR [esp+0x30],0x1
640105e2:	jmp    0x640105ec
640105e4:	mov    DWORD PTR [esp+0x30],0xfffffffd
640105ec:	mov    eax,DWORD PTR [esp+0x40]
640105f0:	mov    ecx,DWORD PTR [esp+0x28]
640105f4:	mov    DWORD PTR [eax+0xc],ecx
640105f7:	mov    ecx,DWORD PTR [esp+0x1c]
640105fb:	mov    DWORD PTR [eax+0x10],ecx
640105fe:	mov    DWORD PTR [eax],ebp
64010600:	mov    DWORD PTR [eax+0x4],edx
64010603:	cmp    DWORD PTR [edi+0x28],0x0
64010607:	mov    DWORD PTR [edi+0x38],ebx
6401060a:	mov    DWORD PTR [edi+0x3c],esi
6401060d:	jne    0x6401061d
6401060f:	cmp    DWORD PTR [edi],0x18
64010612:	jge    0x64010641
64010614:	mov    edx,DWORD PTR [esp+0x2c]
64010618:	cmp    edx,DWORD PTR [eax+0x10]
6401061b:	je     0x64010641
6401061d:	mov    eax,DWORD PTR [esp+0x2c]
64010621:	mov    ebx,DWORD PTR [esp+0x40]
64010625:	call   0x6400f0a0
6401062a:	test   eax,eax
6401062c:	je     0x64010641
6401062e:	mov    DWORD PTR [edi],0x1c
64010634:	pop    esi
64010635:	pop    ebp
64010636:	pop    ebx
64010637:	mov    eax,0xfffffffc
6401063c:	pop    edi
6401063d:	add    esp,0x2c
64010640:	ret    
64010641:	mov    esi,DWORD PTR [esp+0x40]
64010645:	mov    ebp,DWORD PTR [esp+0x38]
64010649:	sub    ebp,DWORD PTR [esi+0x4]
6401064c:	mov    ebx,DWORD PTR [esp+0x2c]
64010650:	sub    ebx,DWORD PTR [esi+0x10]
64010653:	add    DWORD PTR [esi+0x8],ebp
64010656:	add    DWORD PTR [esi+0x14],ebx
64010659:	add    DWORD PTR [edi+0x1c],ebx
6401065c:	cmp    DWORD PTR [edi+0x8],0x0
64010660:	je     0x64010696
64010662:	test   ebx,ebx
64010664:	je     0x64010696
64010666:	cmp    DWORD PTR [edi+0x10],0x0
6401066a:	push   ebx
6401066b:	je     0x6401067e
6401066d:	mov    ecx,DWORD PTR [esi+0xc]
64010670:	mov    edx,DWORD PTR [edi+0x18]
64010673:	sub    ecx,ebx
64010675:	push   ecx
64010676:	push   edx
64010677:	call   0x640124c0
6401067c:	jmp    0x6401068d
6401067e:	mov    eax,DWORD PTR [esi+0xc]
64010681:	mov    ecx,DWORD PTR [edi+0x18]
64010684:	sub    eax,ebx
64010686:	push   eax
64010687:	push   ecx
64010688:	call   0x640107d0
6401068d:	mov    DWORD PTR [edi+0x18],eax
64010690:	add    esp,0xc
64010693:	mov    DWORD PTR [esi+0x30],eax
64010696:	mov    edx,DWORD PTR [edi+0x4]
64010699:	neg    edx
6401069b:	sbb    edx,edx
6401069d:	and    edx,0x40
640106a0:	xor    eax,eax
640106a2:	cmp    DWORD PTR [edi],0xb
640106a5:	setne  al
640106a8:	sub    eax,0x1
640106ab:	and    eax,0x80
640106b0:	add    edx,eax
640106b2:	add    edx,DWORD PTR [edi+0x3c]
640106b5:	test   ebp,ebp
640106b7:	mov    DWORD PTR [esi+0x2c],edx
640106ba:	jne    0x640106c0
640106bc:	test   ebx,ebx
640106be:	je     0x640106c7
640106c0:	cmp    DWORD PTR [esp+0x44],0x4
640106c5:	jne    0x640106e0
640106c7:	mov    eax,DWORD PTR [esp+0x30]
640106cb:	test   eax,eax
640106cd:	jne    0x6401059e
640106d3:	pop    esi
640106d4:	pop    ebp
640106d5:	pop    ebx
640106d6:	mov    eax,0xfffffffb
640106db:	pop    edi
640106dc:	add    esp,0x2c
640106df:	ret    
640106e0:	mov    eax,DWORD PTR [esp+0x30]
640106e4:	pop    esi
640106e5:	pop    ebp
640106e6:	pop    ebx
640106e7:	pop    edi
640106e8:	add    esp,0x2c
640106eb:	ret    
640106ec:	mov    eax,0xfffffffe
640106f1:	pop    edi
640106f2:	add    esp,0x2c
640106f5:	ret    
640106f6:	mov    edi,edi
640106f8:	pop    ss
640106f9:	repnz add BYTE PTR [ebp+eax*4-0xd],ah
640106fe:	add    BYTE PTR [ebx+esi*1-0xc],ah
64010702:	add    BYTE PTR [edx+esi*4-0xc],ah
64010706:	add    BYTE PTR [esp+esi*1-0xb],ah
6401070a:	add    BYTE PTR [edi+edi*4-0xb],ah
6401070e:	add    BYTE PTR [ebx+edi*2-0xa],ah
64010712:	add    BYTE PTR [ebx+esi*1-0x9],ah
64010716:	add    BYTE PTR [edx+ebp*8-0x9],ah
6401071a:	add    BYTE PTR [esp+eax*4-0x8],ah
6401071e:	add    BYTE PTR [esp+ebp*8-0x8],ah
64010722:	add    BYTE PTR [eax+ebx*1-0x7],ah
64010726:	add    BYTE PTR [ebx+eiz*1-0x7],ah
6401072a:	add    BYTE PTR [esi+ebp*8-0x7],ah
6401072e:	add    BYTE PTR [ebx+ebx*2-0x6],ah
64010732:	add    BYTE PTR [ebx+edi*4-0x6],ah
64010736:	add    BYTE PTR [ebx+edi*1-0x5],ah
6401073a:	add    BYTE PTR [edx+esi*1-0x4],ah
6401073e:	add    BYTE PTR [ebx+eax*2-0x1],ah
64010742:	add    BYTE PTR [edi+eax*2+0x1],ah
64010746:	add    DWORD PTR [edx+edx*4+0x1],esp
6401074a:	add    DWORD PTR [ecx+ecx*1+0x3],esp
6401074e:	add    DWORD PTR [eax+edi*2+0x3],esp
64010752:	add    DWORD PTR [esp+esi*1+0x4],esp
64010756:	add    DWORD PTR [edi+ebx*2+0x4],esp
6401075a:	add    DWORD PTR [edx+esi*1+0x5],esp
6401075e:	add    DWORD PTR [edx+ebx*8+0x5],esp
64010762:	add    DWORD PTR [esp+eiz*8+0x5],esp
64010766:	add    DWORD PTR [esp+esi*1+0x6],esp
6401076a:	add    DWORD PTR [eax+ecx*4-0x7],esp
6401076e:	add    BYTE PTR [ebp+ebx*4-0x7],ah
64010772:	add    BYTE PTR [ecx+edi*4-0x7],ah
64010776:	add    BYTE PTR [esi+ecx*8-0x7],ah
6401077a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6401077e:	int3   
6401077f:	int3   
64010780:	push   esi
64010781:	mov    esi,DWORD PTR [esp+0x8]
64010785:	test   esi,esi
64010787:	je     0x640107c3
64010789:	mov    eax,DWORD PTR [esi+0x1c]
6401078c:	test   eax,eax
6401078e:	je     0x640107c3
64010790:	mov    ecx,DWORD PTR [esi+0x24]
64010793:	test   ecx,ecx
64010795:	je     0x640107c3
64010797:	mov    eax,DWORD PTR [eax+0x34]
6401079a:	test   eax,eax
6401079c:	je     0x640107a8
6401079e:	push   eax
6401079f:	mov    eax,DWORD PTR [esi+0x28]
640107a2:	push   eax
640107a3:	call   ecx
640107a5:	add    esp,0x8
640107a8:	mov    ecx,DWORD PTR [esi+0x1c]
640107ab:	mov    edx,DWORD PTR [esi+0x28]
640107ae:	mov    eax,DWORD PTR [esi+0x24]
640107b1:	push   ecx
640107b2:	push   edx
640107b3:	call   eax
640107b5:	add    esp,0x8
640107b8:	mov    DWORD PTR [esi+0x1c],0x0
640107bf:	xor    eax,eax
640107c1:	pop    esi
640107c2:	ret    
640107c3:	mov    eax,0xfffffffe
640107c8:	pop    esi
640107c9:	ret    
640107ca:	int3   
640107cb:	int3   
640107cc:	int3   
640107cd:	int3   
640107ce:	int3   
640107cf:	int3   
640107d0:	mov    ecx,DWORD PTR [esp+0x4]
640107d4:	push   ebx
640107d5:	mov    ebx,DWORD PTR [esp+0x10]
640107d9:	push   edi
640107da:	mov    edi,ecx
640107dc:	shr    edi,0x10
640107df:	and    ecx,0xffff
640107e5:	cmp    ebx,0x1
640107e8:	jne    0x6401081b
640107ea:	mov    eax,DWORD PTR [esp+0x10]
640107ee:	movzx  edx,BYTE PTR [eax]
640107f1:	add    ecx,edx
640107f3:	cmp    ecx,0xfff1
640107f9:	jb     0x64010801
640107fb:	sub    ecx,0xfff1
64010801:	add    edi,ecx
64010803:	cmp    edi,0xfff1
64010809:	jb     0x64010811
6401080b:	sub    edi,0xfff1
64010811:	mov    eax,edi
64010813:	shl    eax,0x10
64010816:	pop    edi
64010817:	or     eax,ecx
64010819:	pop    ebx
6401081a:	ret    
6401081b:	push   esi
6401081c:	mov    esi,DWORD PTR [esp+0x14]
64010820:	test   esi,esi
64010822:	jne    0x6401082b
64010824:	lea    eax,[esi+0x1]
64010827:	pop    esi
64010828:	pop    edi
64010829:	pop    ebx
6401082a:	ret    
6401082b:	cmp    ebx,0x10
6401082e:	jae    0x6401086f
64010830:	test   ebx,ebx
64010832:	je     0x64010845
64010834:	movzx  eax,BYTE PTR [esi]
64010837:	add    ecx,eax
64010839:	sub    ebx,0x1
6401083c:	add    esi,0x1
6401083f:	add    edi,ecx
64010841:	test   ebx,ebx
64010843:	jne    0x64010834
64010845:	cmp    ecx,0xfff1
6401084b:	jb     0x64010853
6401084d:	sub    ecx,0xfff1
64010853:	mov    eax,0x80078071
64010858:	mul    edi
6401085a:	shr    edx,0xf
6401085d:	mov    eax,edx
6401085f:	shl    eax,0x4
64010862:	sub    eax,edx
64010864:	add    eax,edi
64010866:	pop    esi
64010867:	shl    eax,0x10
6401086a:	pop    edi
6401086b:	or     eax,ecx
6401086d:	pop    ebx
6401086e:	ret    
6401086f:	cmp    ebx,0x15b0
64010875:	jb     0x64010959
6401087b:	mov    eax,0x5e6ea9af
64010880:	mul    ebx
64010882:	push   ebp
64010883:	mov    ebp,edx
64010885:	shr    ebp,0xb
64010888:	jmp    0x64010890
6401088a:	lea    ebx,[ebx+0x0]
64010890:	sub    ebx,0x15b0
64010896:	mov    eax,0x15b
6401089b:	jmp    0x640108a0
6401089d:	lea    ecx,[ecx+0x0]
640108a0:	movzx  edx,BYTE PTR [esi]
640108a3:	add    ecx,edx
640108a5:	movzx  edx,BYTE PTR [esi+0x1]
640108a9:	add    edi,ecx
640108ab:	add    ecx,edx
640108ad:	movzx  edx,BYTE PTR [esi+0x2]
640108b1:	add    edi,ecx
640108b3:	add    ecx,edx
640108b5:	movzx  edx,BYTE PTR [esi+0x3]
640108b9:	add    edi,ecx
640108bb:	add    ecx,edx
640108bd:	movzx  edx,BYTE PTR [esi+0x4]
640108c1:	add    edi,ecx
640108c3:	add    ecx,edx
640108c5:	movzx  edx,BYTE PTR [esi+0x5]
640108c9:	add    edi,ecx
640108cb:	add    ecx,edx
640108cd:	movzx  edx,BYTE PTR [esi+0x6]
640108d1:	add    edi,ecx
640108d3:	add    ecx,edx
640108d5:	movzx  edx,BYTE PTR [esi+0x7]
640108d9:	add    edi,ecx
640108db:	add    ecx,edx
640108dd:	movzx  edx,BYTE PTR [esi+0x8]
640108e1:	add    edi,ecx
640108e3:	add    ecx,edx
640108e5:	movzx  edx,BYTE PTR [esi+0x9]
640108e9:	add    edi,ecx
640108eb:	add    ecx,edx
640108ed:	movzx  edx,BYTE PTR [esi+0xa]
640108f1:	add    edi,ecx
640108f3:	add    ecx,edx
640108f5:	movzx  edx,BYTE PTR [esi+0xb]
640108f9:	add    edi,ecx
640108fb:	add    ecx,edx
640108fd:	movzx  edx,BYTE PTR [esi+0xc]
64010901:	add    edi,ecx
64010903:	add    ecx,edx
64010905:	movzx  edx,BYTE PTR [esi+0xd]
64010909:	add    edi,ecx
6401090b:	add    ecx,edx
6401090d:	movzx  edx,BYTE PTR [esi+0xe]
64010911:	add    edi,ecx
64010913:	add    ecx,edx
64010915:	movzx  edx,BYTE PTR [esi+0xf]
64010919:	add    edi,ecx
6401091b:	add    ecx,edx
6401091d:	add    edi,ecx
6401091f:	add    esi,0x10
64010922:	sub    eax,0x1
64010925:	jne    0x640108a0
6401092b:	mov    eax,0x80078071
64010930:	mul    ecx
64010932:	shr    edx,0xf
64010935:	imul   edx,edx,0xffff000f
6401093b:	add    ecx,edx
6401093d:	mov    eax,0x80078071
64010942:	mul    edi
64010944:	shr    edx,0xf
64010947:	imul   edx,edx,0xffff000f
6401094d:	add    edi,edx
6401094f:	sub    ebp,0x1
64010952:	jne    0x64010890
64010958:	pop    ebp
64010959:	test   ebx,ebx
6401095b:	je     0x64010a37
64010961:	cmp    ebx,0x10
64010964:	jb     0x640109fe
6401096a:	mov    eax,ebx
6401096c:	shr    eax,0x4
6401096f:	nop
64010970:	movzx  edx,BYTE PTR [esi]
64010973:	add    ecx,edx
64010975:	movzx  edx,BYTE PTR [esi+0x1]
64010979:	add    edi,ecx
6401097b:	add    ecx,edx
6401097d:	movzx  edx,BYTE PTR [esi+0x2]
64010981:	add    edi,ecx
64010983:	add    ecx,edx
64010985:	movzx  edx,BYTE PTR [esi+0x3]
64010989:	add    edi,ecx
6401098b:	add    ecx,edx
6401098d:	movzx  edx,BYTE PTR [esi+0x4]
64010991:	add    edi,ecx
64010993:	add    ecx,edx
64010995:	movzx  edx,BYTE PTR [esi+0x5]
64010999:	add    edi,ecx
6401099b:	add    ecx,edx
6401099d:	movzx  edx,BYTE PTR [esi+0x6]
640109a1:	add    edi,ecx
640109a3:	add    ecx,edx
640109a5:	movzx  edx,BYTE PTR [esi+0x7]
640109a9:	add    edi,ecx
640109ab:	add    ecx,edx
640109ad:	movzx  edx,BYTE PTR [esi+0x8]
640109b1:	add    edi,ecx
640109b3:	add    ecx,edx
640109b5:	movzx  edx,BYTE PTR [esi+0x9]
640109b9:	add    edi,ecx
640109bb:	add    ecx,edx
640109bd:	movzx  edx,BYTE PTR [esi+0xa]
640109c1:	add    edi,ecx
640109c3:	add    ecx,edx
640109c5:	movzx  edx,BYTE PTR [esi+0xb]
640109c9:	add    edi,ecx
640109cb:	add    ecx,edx
640109cd:	movzx  edx,BYTE PTR [esi+0xc]
640109d1:	add    edi,ecx
640109d3:	add    ecx,edx
640109d5:	movzx  edx,BYTE PTR [esi+0xd]
640109d9:	add    edi,ecx
640109db:	add    ecx,edx
640109dd:	movzx  edx,BYTE PTR [esi+0xe]
640109e1:	add    edi,ecx
640109e3:	add    ecx,edx
640109e5:	movzx  edx,BYTE PTR [esi+0xf]
640109e9:	add    edi,ecx
640109eb:	add    ecx,edx
640109ed:	sub    ebx,0x10
640109f0:	add    edi,ecx
640109f2:	add    esi,0x10
640109f5:	sub    eax,0x1
640109f8:	jne    0x64010970
640109fe:	test   ebx,ebx
64010a00:	je     0x64010a13
64010a02:	movzx  eax,BYTE PTR [esi]
64010a05:	add    ecx,eax
64010a07:	sub    ebx,0x1
64010a0a:	add    esi,0x1
64010a0d:	add    edi,ecx
64010a0f:	test   ebx,ebx
64010a11:	jne    0x64010a02
64010a13:	mov    eax,0x80078071
64010a18:	mul    ecx
64010a1a:	shr    edx,0xf
64010a1d:	imul   edx,edx,0xffff000f
64010a23:	add    ecx,edx
64010a25:	mov    eax,0x80078071
64010a2a:	mul    edi
64010a2c:	shr    edx,0xf
64010a2f:	imul   edx,edx,0xffff000f
64010a35:	add    edi,edx
64010a37:	mov    eax,edi
64010a39:	pop    esi
64010a3a:	shl    eax,0x10
64010a3d:	pop    edi
64010a3e:	or     eax,ecx
64010a40:	pop    ebx
64010a41:	ret    
64010a42:	int3   
64010a43:	int3   
64010a44:	int3   
64010a45:	int3   
64010a46:	int3   
64010a47:	int3   
64010a48:	int3   
64010a49:	int3   
64010a4a:	int3   
64010a4b:	int3   
64010a4c:	int3   
64010a4d:	int3   
64010a4e:	int3   
64010a4f:	int3   
64010a50:	push   esi
64010a51:	lea    eax,[edx+0x94]
64010a57:	mov    ecx,0x11e
64010a5c:	xor    esi,esi
64010a5e:	mov    edi,edi
64010a60:	mov    WORD PTR [eax],si
64010a63:	add    eax,0x4
64010a66:	sub    ecx,0x1
64010a69:	jne    0x64010a60
64010a6b:	lea    eax,[edx+0x988]
64010a71:	mov    ecx,0x1e
64010a76:	mov    WORD PTR [eax],si
64010a79:	add    eax,0x4
64010a7c:	sub    ecx,0x1
64010a7f:	jne    0x64010a76
64010a81:	lea    eax,[edx+0xa7c]
64010a87:	mov    ecx,0x13
64010a8c:	lea    esp,[esp+0x0]
64010a90:	mov    WORD PTR [eax],si
64010a93:	add    eax,0x4
64010a96:	sub    ecx,0x1
64010a99:	jne    0x64010a90
64010a9b:	mov    DWORD PTR [edx+0x16ac],esi
64010aa1:	mov    DWORD PTR [edx+0x16a8],esi
64010aa7:	mov    DWORD PTR [edx+0x16b0],esi
64010aad:	mov    DWORD PTR [edx+0x16a0],esi
64010ab3:	mov    WORD PTR [edx+0x494],0x1
64010abc:	pop    esi
64010abd:	ret    
64010abe:	int3   
64010abf:	int3   
64010ac0:	push   ecx
64010ac1:	mov    edx,DWORD PTR [eax+0x1450]
64010ac7:	push   ebp
64010ac8:	push   esi
64010ac9:	mov    esi,DWORD PTR [esp+0x10]
64010acd:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
64010ad4:	lea    ecx,[esi+esi*1]
64010ad7:	cmp    ecx,edx
64010ad9:	mov    DWORD PTR [esp+0x8],ebp
64010add:	jg     0x64010b7b
64010ae3:	push   ebx
64010ae4:	jge    0x64010b1a
64010ae6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
64010aed:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
64010af4:	movzx  edx,WORD PTR [edi+esi*4]
64010af8:	movzx  ebx,WORD PTR [edi+ebp*4]
64010afc:	cmp    dx,bx
64010aff:	jb     0x64010b13
64010b01:	jne    0x64010b16
64010b03:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
64010b0a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
64010b11:	ja     0x64010b16
64010b13:	add    ecx,0x1
64010b16:	mov    ebp,DWORD PTR [esp+0xc]
64010b1a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
64010b21:	movzx  edx,WORD PTR [edi+ebp*4]
64010b25:	movzx  ebx,WORD PTR [edi+esi*4]
64010b29:	cmp    dx,bx
64010b2c:	jb     0x64010b5b
64010b2e:	jne    0x64010b40
64010b30:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
64010b37:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
64010b3e:	jbe    0x64010b6b
64010b40:	mov    edx,DWORD PTR [esp+0x14]
64010b44:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
64010b4b:	mov    edx,DWORD PTR [eax+0x1450]
64010b51:	mov    DWORD PTR [esp+0x14],ecx
64010b55:	add    ecx,ecx
64010b57:	cmp    ecx,edx
64010b59:	jle    0x64010ae4
64010b5b:	mov    ecx,DWORD PTR [esp+0x14]
64010b5f:	pop    ebx
64010b60:	pop    esi
64010b61:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
64010b68:	pop    ebp
64010b69:	pop    ecx
64010b6a:	ret    
64010b6b:	mov    edx,DWORD PTR [esp+0x14]
64010b6f:	pop    ebx
64010b70:	pop    esi
64010b71:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
64010b78:	pop    ebp
64010b79:	pop    ecx
64010b7a:	ret    
64010b7b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
64010b82:	pop    esi
64010b83:	pop    ebp
64010b84:	pop    ecx
64010b85:	ret    
64010b86:	int3   
64010b87:	int3   
64010b88:	int3   
64010b89:	int3   
64010b8a:	int3   
64010b8b:	int3   
64010b8c:	int3   
64010b8d:	int3   
64010b8e:	int3   
64010b8f:	int3   
64010b90:	sub    esp,0x20
64010b93:	mov    edx,DWORD PTR [ecx+0x4]
64010b96:	push   ebx
64010b97:	mov    ebx,DWORD PTR [ecx]
64010b99:	mov    ecx,DWORD PTR [ecx+0x8]
64010b9c:	mov    DWORD PTR [esp+0x18],edx
64010ba0:	mov    edx,DWORD PTR [ecx+0x4]
64010ba3:	push   ebp
64010ba4:	mov    ebp,DWORD PTR [ecx]
64010ba6:	mov    DWORD PTR [esp+0x24],edx
64010baa:	mov    edx,DWORD PTR [ecx+0x8]
64010bad:	push   esi
64010bae:	mov    esi,DWORD PTR [ecx+0x10]
64010bb1:	xor    ecx,ecx
64010bb3:	mov    DWORD PTR [eax+0xb3c],ecx
64010bb9:	mov    DWORD PTR [eax+0xb40],ecx
64010bbf:	mov    DWORD PTR [eax+0xb44],ecx
64010bc5:	mov    DWORD PTR [eax+0xb48],ecx
64010bcb:	mov    DWORD PTR [eax+0xb4c],ecx
64010bd1:	mov    DWORD PTR [eax+0xb50],ecx
64010bd7:	mov    DWORD PTR [eax+0xb54],ecx
64010bdd:	mov    DWORD PTR [eax+0xb58],ecx
64010be3:	mov    DWORD PTR [esp+0x24],edx
64010be7:	mov    edx,DWORD PTR [eax+0x1454]
64010bed:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
64010bf4:	push   edi
64010bf5:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010bfa:	mov    edi,DWORD PTR [eax+0x1454]
64010c00:	add    edi,0x1
64010c03:	cmp    edi,0x23d
64010c09:	mov    DWORD PTR [esp+0x1c],esi
64010c0d:	mov    DWORD PTR [esp+0x18],ecx
64010c11:	jge    0x64010d9f
64010c17:	lea    ecx,[eax+edi*4+0xb5c]
64010c1e:	mov    DWORD PTR [esp+0x14],ecx
64010c22:	mov    ecx,0x23d
64010c27:	sub    ecx,edi
64010c29:	add    edi,ecx
64010c2b:	mov    DWORD PTR [esp+0x20],ecx
64010c2f:	mov    DWORD PTR [esp+0x10],edi
64010c33:	jmp    0x64010c39
64010c35:	mov    esi,DWORD PTR [esp+0x1c]
64010c39:	mov    edx,DWORD PTR [esp+0x14]
64010c3d:	mov    edx,DWORD PTR [edx]
64010c3f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
64010c44:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
64010c49:	add    ecx,0x1
64010c4c:	cmp    ecx,esi
64010c4e:	jle    0x64010c57
64010c50:	add    DWORD PTR [esp+0x18],0x1
64010c55:	mov    ecx,esi
64010c57:	cmp    edx,DWORD PTR [esp+0x24]
64010c5b:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010c60:	jg     0x64010caa
64010c62:	mov    edi,DWORD PTR [esp+0x28]
64010c66:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
64010c6f:	xor    esi,esi
64010c71:	cmp    edx,edi
64010c73:	jl     0x64010c80
64010c75:	mov    esi,edx
64010c77:	sub    esi,edi
64010c79:	mov    edi,DWORD PTR [esp+0x2c]
64010c7d:	mov    esi,DWORD PTR [edi+esi*4]
64010c80:	movzx  edi,WORD PTR [ebx+edx*4]
64010c84:	movzx  edi,di
64010c87:	add    ecx,esi
64010c89:	imul   ecx,edi
64010c8c:	add    DWORD PTR [eax+0x16a8],ecx
64010c92:	test   ebp,ebp
64010c94:	je     0x64010ca6
64010c96:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
64010c9b:	add    edx,esi
64010c9d:	imul   edx,edi
64010ca0:	add    DWORD PTR [eax+0x16ac],edx
64010ca6:	mov    edi,DWORD PTR [esp+0x10]
64010caa:	add    DWORD PTR [esp+0x14],0x4
64010caf:	sub    DWORD PTR [esp+0x20],0x1
64010cb4:	jne    0x64010c35
64010cba:	mov    ebp,DWORD PTR [esp+0x18]
64010cbe:	test   ebp,ebp
64010cc0:	je     0x64010d9f
64010cc6:	mov    ecx,DWORD PTR [esp+0x1c]
64010cca:	lea    edx,[ecx-0x1]
64010ccd:	mov    DWORD PTR [esp+0x2c],edx
64010cd1:	lea    esi,[eax+ecx*2+0xb3c]
64010cd8:	jmp    0x64010ce0
64010cda:	lea    ebx,[ebx+0x0]
64010ce0:	mov    ecx,DWORD PTR [esp+0x2c]
64010ce4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
64010ced:	lea    edx,[eax+ecx*2+0xb3c]
64010cf4:	jne    0x64010d02
64010cf6:	sub    edx,0x2
64010cf9:	sub    ecx,0x1
64010cfc:	cmp    WORD PTR [edx],0x0
64010d00:	je     0x64010cf6
64010d02:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
64010d0c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
64010d15:	add    WORD PTR [esi],0xffff
64010d1a:	sub    ebp,0x2
64010d1d:	test   ebp,ebp
64010d1f:	jg     0x64010ce0
64010d21:	mov    edx,DWORD PTR [esp+0x1c]
64010d25:	test   edx,edx
64010d27:	je     0x64010d9f
64010d29:	mov    DWORD PTR [esp+0x20],esi
64010d2d:	lea    ecx,[ecx+0x0]
64010d30:	movzx  esi,WORD PTR [esi]
64010d33:	test   esi,esi
64010d35:	mov    DWORD PTR [esp+0x1c],esi
64010d39:	je     0x64010d8d
64010d3b:	lea    ebp,[eax+edi*4+0xb5c]
64010d42:	mov    ecx,DWORD PTR [ebp-0x4]
64010d45:	sub    DWORD PTR [esp+0x10],0x1
64010d4a:	sub    ebp,0x4
64010d4d:	cmp    ecx,DWORD PTR [esp+0x24]
64010d51:	mov    DWORD PTR [esp+0x2c],ebp
64010d55:	jg     0x64010d85
64010d57:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
64010d5c:	cmp    edi,edx
64010d5e:	lea    esi,[ebx+ecx*4+0x2]
64010d62:	je     0x64010d7c
64010d64:	movzx  ecx,WORD PTR [ebx+ecx*4]
64010d68:	mov    ebp,edx
64010d6a:	sub    ebp,edi
64010d6c:	imul   ebp,ecx
64010d6f:	add    DWORD PTR [eax+0x16a8],ebp
64010d75:	mov    ebp,DWORD PTR [esp+0x2c]
64010d79:	mov    WORD PTR [esi],dx
64010d7c:	sub    DWORD PTR [esp+0x1c],0x1
64010d81:	mov    esi,DWORD PTR [esp+0x1c]
64010d85:	test   esi,esi
64010d87:	jne    0x64010d42
64010d89:	mov    edi,DWORD PTR [esp+0x10]
64010d8d:	mov    esi,DWORD PTR [esp+0x20]
64010d91:	sub    edx,0x1
64010d94:	sub    esi,0x2
64010d97:	test   edx,edx
64010d99:	mov    DWORD PTR [esp+0x20],esi
64010d9d:	jne    0x64010d30
64010d9f:	pop    edi
64010da0:	pop    esi
64010da1:	pop    ebp
64010da2:	pop    ebx
64010da3:	add    esp,0x20
64010da6:	ret    
64010da7:	int3   
64010da8:	int3   
64010da9:	int3   
64010daa:	int3   
64010dab:	int3   
64010dac:	int3   
64010dad:	int3   
64010dae:	int3   
64010daf:	int3   
64010db0:	sub    esp,0xc
64010db3:	push   ebx
64010db4:	push   ebp
64010db5:	mov    ebp,DWORD PTR [esp+0x18]
64010db9:	push   esi
64010dba:	push   edi
64010dbb:	movzx  edi,WORD PTR [eax+0x2]
64010dbf:	xor    edx,edx
64010dc1:	test   edi,edi
64010dc3:	mov    ebx,ecx
64010dc5:	mov    DWORD PTR [esp+0x14],0xffffffff
64010dcd:	lea    ecx,[edx+0x7]
64010dd0:	lea    esi,[edx+0x4]
64010dd3:	jne    0x64010ddd
64010dd5:	mov    ecx,0x8a
64010dda:	lea    esi,[edx+0x3]
64010ddd:	test   ebx,ebx
64010ddf:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
64010de6:	jl     0x64010e8a
64010dec:	add    eax,0x6
64010def:	add    ebx,0x1
64010df2:	mov    DWORD PTR [esp+0x18],ebx
64010df6:	mov    DWORD PTR [esp+0x10],eax
64010dfa:	mov    ebx,0x1
64010dff:	nop
64010e00:	mov    eax,edi
64010e02:	mov    edi,DWORD PTR [esp+0x10]
64010e06:	movzx  edi,WORD PTR [edi]
64010e09:	add    edx,ebx
64010e0b:	cmp    edx,ecx
64010e0d:	jge    0x64010e13
64010e0f:	cmp    eax,edi
64010e11:	je     0x64010e7b
64010e13:	cmp    edx,esi
64010e15:	jge    0x64010e21
64010e17:	add    WORD PTR [ebp+eax*4+0xa7c],dx
64010e1f:	jmp    0x64010e51
64010e21:	test   eax,eax
64010e23:	je     0x64010e3c
64010e25:	cmp    eax,DWORD PTR [esp+0x14]
64010e29:	je     0x64010e33
64010e2b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
64010e33:	add    WORD PTR [ebp+0xabc],bx
64010e3a:	jmp    0x64010e51
64010e3c:	cmp    edx,0xa
64010e3f:	jg     0x64010e4a
64010e41:	add    WORD PTR [ebp+0xac0],bx
64010e48:	jmp    0x64010e51
64010e4a:	add    WORD PTR [ebp+0xac4],bx
64010e51:	xor    edx,edx
64010e53:	test   edi,edi
64010e55:	mov    DWORD PTR [esp+0x14],eax
64010e59:	jne    0x64010e65
64010e5b:	mov    ecx,0x8a
64010e60:	lea    esi,[edx+0x3]
64010e63:	jmp    0x64010e7b
64010e65:	cmp    eax,edi
64010e67:	jne    0x64010e73
64010e69:	mov    ecx,0x6
64010e6e:	lea    esi,[ecx-0x3]
64010e71:	jmp    0x64010e7b
64010e73:	mov    ecx,0x7
64010e78:	lea    esi,[ecx-0x3]
64010e7b:	add    DWORD PTR [esp+0x10],0x4
64010e80:	sub    DWORD PTR [esp+0x18],ebx
64010e84:	jne    0x64010e00
64010e8a:	pop    edi
64010e8b:	pop    esi
64010e8c:	pop    ebp
64010e8d:	pop    ebx
64010e8e:	add    esp,0xc
64010e91:	ret    
64010e92:	int3   
64010e93:	int3   
64010e94:	int3   
64010e95:	int3   
64010e96:	int3   
64010e97:	int3   
64010e98:	int3   
64010e99:	int3   
64010e9a:	int3   
64010e9b:	int3   
64010e9c:	int3   
64010e9d:	int3   
64010e9e:	int3   
64010e9f:	int3   
64010ea0:	sub    esp,0x18
64010ea3:	push   ebx
64010ea4:	push   ebp
64010ea5:	movzx  ebp,WORD PTR [edx+0x2]
64010ea9:	push   esi
64010eaa:	xor    esi,esi
64010eac:	test   ebp,ebp
64010eae:	push   edi
64010eaf:	mov    ebx,ecx
64010eb1:	mov    DWORD PTR [esp+0x1c],0xffffffff
64010eb9:	mov    DWORD PTR [esp+0x14],ebp
64010ebd:	lea    ecx,[esi+0x7]
64010ec0:	lea    edi,[esi+0x4]
64010ec3:	jne    0x64010ecd
64010ec5:	mov    ecx,0x8a
64010eca:	lea    edi,[ebp+0x3]
64010ecd:	test   ebx,ebx
64010ecf:	jl     0x640113a3
64010ed5:	add    edx,0x6
64010ed8:	add    ebx,0x1
64010edb:	mov    DWORD PTR [esp+0x18],edx
64010edf:	mov    DWORD PTR [esp+0x20],ebx
64010ee3:	mov    ebp,0x1
64010ee8:	jmp    0x64010ef0
64010eea:	lea    ebx,[ebx+0x0]
64010ef0:	mov    ebx,DWORD PTR [esp+0x18]
64010ef4:	movzx  ebx,WORD PTR [ebx]
64010ef7:	mov    edx,DWORD PTR [esp+0x14]
64010efb:	add    esi,ebp
64010efd:	cmp    esi,ecx
64010eff:	mov    DWORD PTR [esp+0x24],edx
64010f03:	mov    DWORD PTR [esp+0x14],ebx
64010f07:	mov    DWORD PTR [esp+0x10],esi
64010f0b:	jge    0x64010f15
64010f0d:	cmp    edx,ebx
64010f0f:	je     0x64011394
64010f15:	cmp    esi,edi
64010f17:	jge    0x64010fbf
64010f1d:	lea    ecx,[ecx+0x0]
64010f20:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64010f28:	mov    ecx,DWORD PTR [eax+0x16bc]
64010f2e:	mov    ebx,0x10
64010f33:	sub    ebx,edi
64010f35:	cmp    ecx,ebx
64010f37:	jle    0x64010f94
64010f39:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64010f41:	mov    edx,esi
64010f43:	shl    edx,cl
64010f45:	mov    ecx,DWORD PTR [eax+0x8]
64010f48:	or     WORD PTR [eax+0x16b8],dx
64010f4f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64010f56:	mov    edx,DWORD PTR [eax+0x14]
64010f59:	mov    BYTE PTR [ecx+edx*1],bl
64010f5c:	add    DWORD PTR [eax+0x14],ebp
64010f5f:	mov    ecx,DWORD PTR [eax+0x14]
64010f62:	movzx  ebx,BYTE PTR [eax+0x16b9]
64010f69:	mov    edx,DWORD PTR [eax+0x8]
64010f6c:	mov    BYTE PTR [ecx+edx*1],bl
64010f6f:	mov    edx,DWORD PTR [eax+0x16bc]
64010f75:	add    DWORD PTR [eax+0x14],ebp
64010f78:	mov    cl,0x10
64010f7a:	sub    cl,dl
64010f7c:	shr    si,cl
64010f7f:	lea    ecx,[edx+edi*1-0x10]
64010f83:	mov    edx,DWORD PTR [esp+0x24]
64010f87:	mov    WORD PTR [eax+0x16b8],si
64010f8e:	mov    esi,DWORD PTR [esp+0x10]
64010f92:	jmp    0x64010fa8
64010f94:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
64010f9c:	shl    bx,cl
64010f9f:	or     WORD PTR [eax+0x16b8],bx
64010fa6:	add    ecx,edi
64010fa8:	sub    esi,ebp
64010faa:	mov    DWORD PTR [eax+0x16bc],ecx
64010fb0:	mov    DWORD PTR [esp+0x10],esi
64010fb4:	jne    0x64010f20
64010fba:	jmp    0x64011366
64010fbf:	test   edx,edx
64010fc1:	je     0x6401116c
64010fc7:	cmp    edx,DWORD PTR [esp+0x1c]
64010fcb:	je     0x6401106d
64010fd1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64010fd9:	mov    ecx,DWORD PTR [eax+0x16bc]
64010fdf:	mov    ebx,0x10
64010fe4:	sub    ebx,edi
64010fe6:	cmp    ecx,ebx
64010fe8:	mov    DWORD PTR [esp+0x1c],edi
64010fec:	jle    0x64011049
64010fee:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64010ff6:	mov    edi,esi
64010ff8:	shl    edi,cl
64010ffa:	mov    ecx,DWORD PTR [eax+0x8]
64010ffd:	or     WORD PTR [eax+0x16b8],di
64011004:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401100b:	mov    edi,DWORD PTR [eax+0x14]
6401100e:	mov    BYTE PTR [ecx+edi*1],bl
64011011:	add    DWORD PTR [eax+0x14],ebp
64011014:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401101b:	mov    ecx,DWORD PTR [eax+0x8]
6401101e:	mov    edi,DWORD PTR [eax+0x14]
64011021:	mov    BYTE PTR [edi+ecx*1],bl
64011024:	mov    ebx,DWORD PTR [eax+0x16bc]
6401102a:	add    DWORD PTR [eax+0x14],ebp
6401102d:	mov    cl,0x10
6401102f:	sub    cl,bl
64011031:	shr    si,cl
64011034:	mov    ecx,DWORD PTR [esp+0x1c]
64011038:	lea    ecx,[ebx+ecx*1-0x10]
6401103c:	mov    WORD PTR [eax+0x16b8],si
64011043:	mov    esi,DWORD PTR [esp+0x10]
64011047:	jmp    0x64011061
64011049:	mov    di,WORD PTR [eax+edx*4+0xa7c]
64011051:	shl    di,cl
64011054:	or     WORD PTR [eax+0x16b8],di
6401105b:	mov    edi,DWORD PTR [esp+0x1c]
6401105f:	add    ecx,edi
64011061:	sub    esi,ebp
64011063:	mov    DWORD PTR [eax+0x16bc],ecx
64011069:	mov    DWORD PTR [esp+0x10],esi
6401106d:	movzx  edi,WORD PTR [eax+0xabe]
64011074:	mov    ecx,DWORD PTR [eax+0x16bc]
6401107a:	mov    ebx,0x10
6401107f:	sub    ebx,edi
64011081:	cmp    ecx,ebx
64011083:	mov    DWORD PTR [esp+0x1c],edi
64011087:	jle    0x640110e3
64011089:	movzx  esi,WORD PTR [eax+0xabc]
64011090:	mov    edi,esi
64011092:	shl    edi,cl
64011094:	mov    ecx,DWORD PTR [eax+0x8]
64011097:	or     WORD PTR [eax+0x16b8],di
6401109e:	movzx  ebx,BYTE PTR [eax+0x16b8]
640110a5:	mov    edi,DWORD PTR [eax+0x14]
640110a8:	mov    BYTE PTR [ecx+edi*1],bl
640110ab:	add    DWORD PTR [eax+0x14],ebp
640110ae:	movzx  ebx,BYTE PTR [eax+0x16b9]
640110b5:	mov    ecx,DWORD PTR [eax+0x8]
640110b8:	mov    edi,DWORD PTR [eax+0x14]
640110bb:	mov    BYTE PTR [edi+ecx*1],bl
640110be:	mov    ebx,DWORD PTR [eax+0x16bc]
640110c4:	add    DWORD PTR [eax+0x14],ebp
640110c7:	mov    cl,0x10
640110c9:	sub    cl,bl
640110cb:	shr    si,cl
640110ce:	mov    ecx,DWORD PTR [esp+0x1c]
640110d2:	lea    ecx,[ebx+ecx*1-0x10]
640110d6:	mov    WORD PTR [eax+0x16b8],si
640110dd:	mov    esi,DWORD PTR [esp+0x10]
640110e1:	jmp    0x640110fa
640110e3:	mov    di,WORD PTR [eax+0xabc]
640110ea:	shl    di,cl
640110ed:	or     WORD PTR [eax+0x16b8],di
640110f4:	mov    edi,DWORD PTR [esp+0x1c]
640110f8:	add    ecx,edi
640110fa:	add    esi,0xfffffffd
640110fd:	cmp    ecx,0xe
64011100:	mov    DWORD PTR [eax+0x16bc],ecx
64011106:	jle    0x6401115b
64011108:	mov    edi,esi
6401110a:	shl    edi,cl
6401110c:	mov    ecx,DWORD PTR [eax+0x8]
6401110f:	or     WORD PTR [eax+0x16b8],di
64011116:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401111d:	mov    edi,DWORD PTR [eax+0x14]
64011120:	mov    BYTE PTR [ecx+edi*1],bl
64011123:	add    DWORD PTR [eax+0x14],ebp
64011126:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401112d:	mov    edi,DWORD PTR [eax+0x14]
64011130:	mov    ecx,DWORD PTR [eax+0x8]
64011133:	mov    BYTE PTR [edi+ecx*1],bl
64011136:	mov    ebx,DWORD PTR [eax+0x16bc]
6401113c:	add    DWORD PTR [eax+0x14],ebp
6401113f:	mov    cl,0x10
64011141:	sub    cl,bl
64011143:	shr    si,cl
64011146:	add    ebx,0xfffffff2
64011149:	mov    DWORD PTR [eax+0x16bc],ebx
6401114f:	mov    WORD PTR [eax+0x16b8],si
64011156:	jmp    0x64011366
6401115b:	shl    esi,cl
6401115d:	or     WORD PTR [eax+0x16b8],si
64011164:	add    ecx,0x2
64011167:	jmp    0x64011360
6401116c:	cmp    esi,0xa
6401116f:	mov    ecx,DWORD PTR [eax+0x16bc]
64011175:	mov    ebx,0x10
6401117a:	jg     0x64011274
64011180:	movzx  edi,WORD PTR [eax+0xac2]
64011187:	sub    ebx,edi
64011189:	cmp    ecx,ebx
6401118b:	mov    DWORD PTR [esp+0x1c],edi
6401118f:	jle    0x640111eb
64011191:	movzx  esi,WORD PTR [eax+0xac0]
64011198:	mov    edi,esi
6401119a:	shl    edi,cl
6401119c:	mov    ecx,DWORD PTR [eax+0x8]
6401119f:	or     WORD PTR [eax+0x16b8],di
640111a6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640111ad:	mov    edi,DWORD PTR [eax+0x14]
640111b0:	mov    BYTE PTR [ecx+edi*1],bl
640111b3:	add    DWORD PTR [eax+0x14],ebp
640111b6:	movzx  ebx,BYTE PTR [eax+0x16b9]
640111bd:	mov    ecx,DWORD PTR [eax+0x8]
640111c0:	mov    edi,DWORD PTR [eax+0x14]
640111c3:	mov    BYTE PTR [edi+ecx*1],bl
640111c6:	mov    ebx,DWORD PTR [eax+0x16bc]
640111cc:	add    DWORD PTR [eax+0x14],ebp
640111cf:	mov    cl,0x10
640111d1:	sub    cl,bl
640111d3:	shr    si,cl
640111d6:	mov    ecx,DWORD PTR [esp+0x1c]
640111da:	lea    ecx,[ebx+ecx*1-0x10]
640111de:	mov    WORD PTR [eax+0x16b8],si
640111e5:	mov    esi,DWORD PTR [esp+0x10]
640111e9:	jmp    0x64011202
640111eb:	mov    di,WORD PTR [eax+0xac0]
640111f2:	shl    di,cl
640111f5:	or     WORD PTR [eax+0x16b8],di
640111fc:	mov    edi,DWORD PTR [esp+0x1c]
64011200:	add    ecx,edi
64011202:	add    esi,0xfffffffd
64011205:	cmp    ecx,0xd
64011208:	mov    DWORD PTR [eax+0x16bc],ecx
6401120e:	jle    0x64011263
64011210:	mov    edi,esi
64011212:	shl    edi,cl
64011214:	mov    ecx,DWORD PTR [eax+0x8]
64011217:	or     WORD PTR [eax+0x16b8],di
6401121e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011225:	mov    edi,DWORD PTR [eax+0x14]
64011228:	mov    BYTE PTR [ecx+edi*1],bl
6401122b:	add    DWORD PTR [eax+0x14],ebp
6401122e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011235:	mov    edi,DWORD PTR [eax+0x14]
64011238:	mov    ecx,DWORD PTR [eax+0x8]
6401123b:	mov    BYTE PTR [edi+ecx*1],bl
6401123e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011244:	add    DWORD PTR [eax+0x14],ebp
64011247:	mov    cl,0x10
64011249:	sub    cl,bl
6401124b:	shr    si,cl
6401124e:	add    ebx,0xfffffff3
64011251:	mov    DWORD PTR [eax+0x16bc],ebx
64011257:	mov    WORD PTR [eax+0x16b8],si
6401125e:	jmp    0x64011366
64011263:	shl    esi,cl
64011265:	or     WORD PTR [eax+0x16b8],si
6401126c:	add    ecx,0x3
6401126f:	jmp    0x64011360
64011274:	movzx  edi,WORD PTR [eax+0xac6]
6401127b:	sub    ebx,edi
6401127d:	cmp    ecx,ebx
6401127f:	mov    DWORD PTR [esp+0x1c],edi
64011283:	jle    0x640112df
64011285:	movzx  esi,WORD PTR [eax+0xac4]
6401128c:	mov    edi,esi
6401128e:	shl    edi,cl
64011290:	mov    ecx,DWORD PTR [eax+0x8]
64011293:	or     WORD PTR [eax+0x16b8],di
6401129a:	movzx  ebx,BYTE PTR [eax+0x16b8]
640112a1:	mov    edi,DWORD PTR [eax+0x14]
640112a4:	mov    BYTE PTR [ecx+edi*1],bl
640112a7:	add    DWORD PTR [eax+0x14],ebp
640112aa:	movzx  ebx,BYTE PTR [eax+0x16b9]
640112b1:	mov    ecx,DWORD PTR [eax+0x8]
640112b4:	mov    edi,DWORD PTR [eax+0x14]
640112b7:	mov    BYTE PTR [edi+ecx*1],bl
640112ba:	mov    ebx,DWORD PTR [eax+0x16bc]
640112c0:	add    DWORD PTR [eax+0x14],ebp
640112c3:	mov    cl,0x10
640112c5:	sub    cl,bl
640112c7:	shr    si,cl
640112ca:	mov    ecx,DWORD PTR [esp+0x1c]
640112ce:	lea    ecx,[ebx+ecx*1-0x10]
640112d2:	mov    WORD PTR [eax+0x16b8],si
640112d9:	mov    esi,DWORD PTR [esp+0x10]
640112dd:	jmp    0x640112f6
640112df:	mov    di,WORD PTR [eax+0xac4]
640112e6:	shl    di,cl
640112e9:	or     WORD PTR [eax+0x16b8],di
640112f0:	mov    edi,DWORD PTR [esp+0x1c]
640112f4:	add    ecx,edi
640112f6:	add    esi,0xfffffff5
640112f9:	cmp    ecx,0x9
640112fc:	mov    DWORD PTR [eax+0x16bc],ecx
64011302:	jle    0x64011354
64011304:	mov    edi,esi
64011306:	shl    edi,cl
64011308:	mov    ecx,DWORD PTR [eax+0x8]
6401130b:	or     WORD PTR [eax+0x16b8],di
64011312:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011319:	mov    edi,DWORD PTR [eax+0x14]
6401131c:	mov    BYTE PTR [ecx+edi*1],bl
6401131f:	add    DWORD PTR [eax+0x14],ebp
64011322:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011329:	mov    edi,DWORD PTR [eax+0x14]
6401132c:	mov    ecx,DWORD PTR [eax+0x8]
6401132f:	mov    BYTE PTR [edi+ecx*1],bl
64011332:	mov    ebx,DWORD PTR [eax+0x16bc]
64011338:	add    DWORD PTR [eax+0x14],ebp
6401133b:	mov    cl,0x10
6401133d:	sub    cl,bl
6401133f:	shr    si,cl
64011342:	add    ebx,0xfffffff7
64011345:	mov    DWORD PTR [eax+0x16bc],ebx
6401134b:	mov    WORD PTR [eax+0x16b8],si
64011352:	jmp    0x64011366
64011354:	shl    esi,cl
64011356:	or     WORD PTR [eax+0x16b8],si
6401135d:	add    ecx,0x7
64011360:	mov    DWORD PTR [eax+0x16bc],ecx
64011366:	mov    ecx,DWORD PTR [esp+0x14]
6401136a:	xor    esi,esi
6401136c:	test   ecx,ecx
6401136e:	mov    DWORD PTR [esp+0x1c],edx
64011372:	jne    0x6401137e
64011374:	mov    ecx,0x8a
64011379:	lea    edi,[esi+0x3]
6401137c:	jmp    0x64011394
6401137e:	cmp    edx,ecx
64011380:	jne    0x6401138c
64011382:	mov    ecx,0x6
64011387:	lea    edi,[ecx-0x3]
6401138a:	jmp    0x64011394
6401138c:	mov    ecx,0x7
64011391:	lea    edi,[ecx-0x3]
64011394:	add    DWORD PTR [esp+0x18],0x4
64011399:	sub    DWORD PTR [esp+0x20],ebp
6401139d:	jne    0x64010ef0
640113a3:	pop    edi
640113a4:	pop    esi
640113a5:	pop    ebp
640113a6:	pop    ebx
640113a7:	add    esp,0x18
640113aa:	ret    
640113ab:	int3   
640113ac:	int3   
640113ad:	int3   
640113ae:	int3   
640113af:	int3   
640113b0:	push   ecx
640113b1:	mov    ecx,DWORD PTR [eax+0x16bc]
640113b7:	cmp    ecx,0xb
640113ba:	push   ebx
640113bb:	mov    ebx,DWORD PTR [esp+0x14]
640113bf:	push   ebp
640113c0:	push   esi
640113c1:	push   edi
640113c2:	mov    ebp,0x1
640113c7:	jle    0x64011427
640113c9:	mov    esi,DWORD PTR [esp+0x18]
640113cd:	add    esi,0xfffffeff
640113d3:	mov    edx,esi
640113d5:	shl    edx,cl
640113d7:	mov    ecx,DWORD PTR [eax+0x14]
640113da:	or     WORD PTR [eax+0x16b8],dx
640113e1:	movzx  ebx,BYTE PTR [eax+0x16b8]
640113e8:	mov    edx,DWORD PTR [eax+0x8]
640113eb:	mov    BYTE PTR [ecx+edx*1],bl
640113ee:	add    DWORD PTR [eax+0x14],ebp
640113f1:	movzx  ebx,BYTE PTR [eax+0x16b9]
640113f8:	mov    ecx,DWORD PTR [eax+0x14]
640113fb:	mov    edx,DWORD PTR [eax+0x8]
640113fe:	mov    BYTE PTR [ecx+edx*1],bl
64011401:	mov    edx,DWORD PTR [eax+0x16bc]
64011407:	add    DWORD PTR [eax+0x14],ebp
6401140a:	mov    ebx,DWORD PTR [esp+0x20]
6401140e:	mov    cl,0x10
64011410:	sub    cl,dl
64011412:	shr    si,cl
64011415:	add    edx,0xfffffff5
64011418:	mov    DWORD PTR [eax+0x16bc],edx
6401141e:	mov    WORD PTR [eax+0x16b8],si
64011425:	jmp    0x64011443
64011427:	mov    edx,DWORD PTR [esp+0x18]
6401142b:	add    edx,0xfffffeff
64011431:	shl    edx,cl
64011433:	or     WORD PTR [eax+0x16b8],dx
6401143a:	add    ecx,0x5
6401143d:	mov    DWORD PTR [eax+0x16bc],ecx
64011443:	mov    ecx,DWORD PTR [eax+0x16bc]
64011449:	cmp    ecx,0xb
6401144c:	jle    0x640114ad
6401144e:	mov    esi,DWORD PTR [esp+0x1c]
64011452:	add    esi,0xffffffff
64011455:	mov    edx,esi
64011457:	shl    edx,cl
64011459:	mov    ecx,DWORD PTR [eax+0x14]
6401145c:	mov    DWORD PTR [esp+0x10],ebx
64011460:	or     WORD PTR [eax+0x16b8],dx
64011467:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401146e:	mov    edx,DWORD PTR [eax+0x8]
64011471:	mov    BYTE PTR [ecx+edx*1],bl
64011474:	add    DWORD PTR [eax+0x14],ebp
64011477:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401147e:	mov    ecx,DWORD PTR [eax+0x14]
64011481:	mov    edx,DWORD PTR [eax+0x8]
64011484:	mov    BYTE PTR [ecx+edx*1],bl
64011487:	mov    edx,DWORD PTR [eax+0x16bc]
6401148d:	add    DWORD PTR [eax+0x14],ebp
64011490:	mov    ebx,DWORD PTR [esp+0x10]
64011494:	mov    cl,0x10
64011496:	sub    cl,dl
64011498:	shr    si,cl
6401149b:	add    edx,0xfffffff5
6401149e:	mov    DWORD PTR [eax+0x16bc],edx
640114a4:	mov    WORD PTR [eax+0x16b8],si
640114ab:	jmp    0x640114c6
640114ad:	mov    edx,DWORD PTR [esp+0x1c]
640114b1:	add    edx,0xffffffff
640114b4:	shl    edx,cl
640114b6:	or     WORD PTR [eax+0x16b8],dx
640114bd:	add    ecx,0x5
640114c0:	mov    DWORD PTR [eax+0x16bc],ecx
640114c6:	mov    ecx,DWORD PTR [eax+0x16bc]
640114cc:	cmp    ecx,0xc
640114cf:	jle    0x6401152c
640114d1:	lea    esi,[ebx-0x4]
640114d4:	mov    edx,esi
640114d6:	shl    edx,cl
640114d8:	mov    ecx,DWORD PTR [eax+0x14]
640114db:	mov    DWORD PTR [esp+0x10],ebx
640114df:	or     WORD PTR [eax+0x16b8],dx
640114e6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640114ed:	mov    edx,DWORD PTR [eax+0x8]
640114f0:	mov    BYTE PTR [ecx+edx*1],bl
640114f3:	add    DWORD PTR [eax+0x14],ebp
640114f6:	movzx  ebx,BYTE PTR [eax+0x16b9]
640114fd:	mov    ecx,DWORD PTR [eax+0x14]
64011500:	mov    edx,DWORD PTR [eax+0x8]
64011503:	mov    BYTE PTR [ecx+edx*1],bl
64011506:	mov    edx,DWORD PTR [eax+0x16bc]
6401150c:	add    DWORD PTR [eax+0x14],ebp
6401150f:	mov    ebx,DWORD PTR [esp+0x10]
64011513:	mov    cl,0x10
64011515:	sub    cl,dl
64011517:	shr    si,cl
6401151a:	add    edx,0xfffffff4
6401151d:	mov    DWORD PTR [eax+0x16bc],edx
64011523:	mov    WORD PTR [eax+0x16b8],si
6401152a:	jmp    0x64011541
6401152c:	lea    edx,[ebx-0x4]
6401152f:	shl    edx,cl
64011531:	or     WORD PTR [eax+0x16b8],dx
64011538:	add    ecx,0x4
6401153b:	mov    DWORD PTR [eax+0x16bc],ecx
64011541:	xor    edi,edi
64011543:	test   ebx,ebx
64011545:	jle    0x640115e3
6401154b:	jmp    0x64011550
6401154d:	lea    ecx,[ecx+0x0]
64011550:	mov    ecx,DWORD PTR [eax+0x16bc]
64011556:	cmp    ecx,0xd
64011559:	movzx  edx,BYTE PTR [edi+0x64024fa4]
64011560:	jle    0x640115be
64011562:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
6401156a:	mov    edx,esi
6401156c:	shl    edx,cl
6401156e:	mov    ecx,DWORD PTR [eax+0x14]
64011571:	or     WORD PTR [eax+0x16b8],dx
64011578:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401157f:	mov    edx,DWORD PTR [eax+0x8]
64011582:	mov    BYTE PTR [ecx+edx*1],bl
64011585:	add    DWORD PTR [eax+0x14],ebp
64011588:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401158f:	mov    ecx,DWORD PTR [eax+0x14]
64011592:	mov    edx,DWORD PTR [eax+0x8]
64011595:	mov    BYTE PTR [ecx+edx*1],bl
64011598:	mov    edx,DWORD PTR [eax+0x16bc]
6401159e:	add    DWORD PTR [eax+0x14],ebp
640115a1:	mov    ebx,DWORD PTR [esp+0x20]
640115a5:	mov    cl,0x10
640115a7:	sub    cl,dl
640115a9:	shr    si,cl
640115ac:	add    edx,0xfffffff3
640115af:	mov    DWORD PTR [eax+0x16bc],edx
640115b5:	mov    WORD PTR [eax+0x16b8],si
640115bc:	jmp    0x640115d9
640115be:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
640115c6:	shl    dx,cl
640115c9:	or     WORD PTR [eax+0x16b8],dx
640115d0:	add    ecx,0x3
640115d3:	mov    DWORD PTR [eax+0x16bc],ecx
640115d9:	add    edi,ebp
640115db:	cmp    edi,ebx
640115dd:	jl     0x64011550
640115e3:	mov    ecx,DWORD PTR [esp+0x18]
640115e7:	add    ecx,0xffffffff
640115ea:	lea    edx,[eax+0x94]
640115f0:	call   0x64010ea0
640115f5:	mov    ecx,DWORD PTR [esp+0x1c]
640115f9:	pop    edi
640115fa:	pop    esi
640115fb:	pop    ebp
640115fc:	add    ecx,0xffffffff
640115ff:	lea    edx,[eax+0x988]
64011605:	pop    ebx
64011606:	add    esp,0x4
64011609:	jmp    0x64010ea0
6401160e:	int3   
6401160f:	int3   
64011610:	sub    esp,0xc
64011613:	push   ebx
64011614:	mov    ebx,DWORD PTR [esp+0x14]
64011618:	push   ebp
64011619:	xor    ecx,ecx
6401161b:	cmp    DWORD PTR [eax+0x16a0],ecx
64011621:	push   esi
64011622:	push   edi
64011623:	je     0x64011962
64011629:	lea    esp,[esp+0x0]
64011630:	mov    edx,DWORD PTR [eax+0x16a4]
64011636:	movzx  ebp,WORD PTR [edx+ecx*2]
6401163a:	mov    edx,DWORD PTR [eax+0x1698]
64011640:	movzx  esi,BYTE PTR [ecx+edx*1]
64011644:	add    ecx,0x1
64011647:	test   ebp,ebp
64011649:	mov    DWORD PTR [esp+0x18],ecx
6401164d:	mov    ecx,DWORD PTR [eax+0x16bc]
64011653:	jne    0x640116da
64011659:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
6401165e:	mov    edx,0x10
64011663:	sub    edx,edi
64011665:	cmp    ecx,edx
64011667:	jle    0x640116c5
64011669:	movzx  esi,WORD PTR [ebx+esi*4]
6401166d:	mov    edx,esi
6401166f:	shl    edx,cl
64011671:	mov    ecx,DWORD PTR [eax+0x8]
64011674:	mov    DWORD PTR [esp+0x10],ebx
64011678:	or     WORD PTR [eax+0x16b8],dx
6401167f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011686:	mov    edx,DWORD PTR [eax+0x14]
64011689:	mov    BYTE PTR [ecx+edx*1],bl
6401168c:	add    DWORD PTR [eax+0x14],0x1
64011690:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011697:	mov    ecx,DWORD PTR [eax+0x14]
6401169a:	mov    edx,DWORD PTR [eax+0x8]
6401169d:	mov    BYTE PTR [ecx+edx*1],bl
640116a0:	mov    edx,DWORD PTR [eax+0x16bc]
640116a6:	add    DWORD PTR [eax+0x14],0x1
640116aa:	mov    ebx,DWORD PTR [esp+0x10]
640116ae:	mov    cl,0x10
640116b0:	sub    cl,dl
640116b2:	shr    si,cl
640116b5:	lea    ecx,[edx+edi*1-0x10]
640116b9:	mov    WORD PTR [eax+0x16b8],si
640116c0:	jmp    0x6401194c
640116c5:	mov    dx,WORD PTR [ebx+esi*4]
640116c9:	shl    dx,cl
640116cc:	or     WORD PTR [eax+0x16b8],dx
640116d3:	add    ecx,edi
640116d5:	jmp    0x6401194c
640116da:	movzx  edx,BYTE PTR [esi+0x64025778]
640116e1:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
640116e9:	mov    ebx,0x10
640116ee:	sub    ebx,edi
640116f0:	cmp    ecx,ebx
640116f2:	mov    DWORD PTR [esp+0x10],edi
640116f6:	mov    edi,DWORD PTR [esp+0x20]
640116fa:	mov    DWORD PTR [esp+0x14],edx
640116fe:	jle    0x64011763
64011700:	movzx  edi,WORD PTR [edi+edx*4+0x404]
64011708:	mov    edx,edi
6401170a:	shl    edx,cl
6401170c:	mov    ecx,DWORD PTR [eax+0x8]
6401170f:	or     WORD PTR [eax+0x16b8],dx
64011716:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401171d:	mov    edx,DWORD PTR [eax+0x14]
64011720:	mov    BYTE PTR [ecx+edx*1],bl
64011723:	add    DWORD PTR [eax+0x14],0x1
64011727:	mov    ecx,DWORD PTR [eax+0x14]
6401172a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011731:	mov    edx,DWORD PTR [eax+0x8]
64011734:	mov    BYTE PTR [ecx+edx*1],bl
64011737:	mov    edx,DWORD PTR [eax+0x16bc]
6401173d:	add    DWORD PTR [eax+0x14],0x1
64011741:	mov    cl,0x10
64011743:	sub    cl,dl
64011745:	shr    di,cl
64011748:	mov    ecx,DWORD PTR [esp+0x10]
6401174c:	lea    edx,[edx+ecx*1-0x10]
64011750:	mov    DWORD PTR [eax+0x16bc],edx
64011756:	mov    edx,DWORD PTR [esp+0x14]
6401175a:	mov    WORD PTR [eax+0x16b8],di
64011761:	jmp    0x64011781
64011763:	mov    di,WORD PTR [edi+edx*4+0x404]
6401176b:	shl    di,cl
6401176e:	or     WORD PTR [eax+0x16b8],di
64011775:	mov    edi,DWORD PTR [esp+0x10]
64011779:	add    ecx,edi
6401177b:	mov    DWORD PTR [eax+0x16bc],ecx
64011781:	mov    edi,DWORD PTR [edx*4+0x64024f30]
64011788:	test   edi,edi
6401178a:	mov    ebx,DWORD PTR [esp+0x20]
6401178e:	je     0x6401180a
64011790:	sub    esi,DWORD PTR [edx*4+0x64025878]
64011797:	mov    ecx,DWORD PTR [eax+0x16bc]
6401179d:	mov    edx,0x10
640117a2:	sub    edx,edi
640117a4:	cmp    ecx,edx
640117a6:	jle    0x640117f9
640117a8:	mov    edx,esi
640117aa:	shl    edx,cl
640117ac:	mov    ecx,DWORD PTR [eax+0x8]
640117af:	or     WORD PTR [eax+0x16b8],dx
640117b6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640117bd:	mov    edx,DWORD PTR [eax+0x14]
640117c0:	mov    BYTE PTR [ecx+edx*1],bl
640117c3:	add    DWORD PTR [eax+0x14],0x1
640117c7:	movzx  ebx,BYTE PTR [eax+0x16b9]
640117ce:	mov    ecx,DWORD PTR [eax+0x14]
640117d1:	mov    edx,DWORD PTR [eax+0x8]
640117d4:	mov    BYTE PTR [ecx+edx*1],bl
640117d7:	mov    edx,DWORD PTR [eax+0x16bc]
640117dd:	add    DWORD PTR [eax+0x14],0x1
640117e1:	mov    ebx,DWORD PTR [esp+0x20]
640117e5:	mov    cl,0x10
640117e7:	sub    cl,dl
640117e9:	shr    si,cl
640117ec:	lea    ecx,[edx+edi*1-0x10]
640117f0:	mov    WORD PTR [eax+0x16b8],si
640117f7:	jmp    0x64011804
640117f9:	shl    esi,cl
640117fb:	or     WORD PTR [eax+0x16b8],si
64011802:	add    ecx,edi
64011804:	mov    DWORD PTR [eax+0x16bc],ecx
6401180a:	sub    ebp,0x1
6401180d:	cmp    ebp,0x100
64011813:	jae    0x6401181e
64011815:	movzx  edi,BYTE PTR [ebp+0x64025578]
6401181c:	jmp    0x6401182a
6401181e:	mov    edx,ebp
64011820:	shr    edx,0x7
64011823:	movzx  edi,BYTE PTR [edx+0x64025678]
6401182a:	mov    ecx,DWORD PTR [esp+0x24]
6401182e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
64011833:	mov    ecx,DWORD PTR [eax+0x16bc]
64011839:	mov    esi,0x10
6401183e:	sub    esi,edx
64011840:	cmp    ecx,esi
64011842:	mov    DWORD PTR [esp+0x14],edx
64011846:	jle    0x640118ab
64011848:	mov    edx,DWORD PTR [esp+0x24]
6401184c:	movzx  esi,WORD PTR [edx+edi*4]
64011850:	mov    edx,esi
64011852:	shl    edx,cl
64011854:	mov    ecx,DWORD PTR [eax+0x8]
64011857:	or     WORD PTR [eax+0x16b8],dx
6401185e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011865:	mov    edx,DWORD PTR [eax+0x14]
64011868:	mov    BYTE PTR [ecx+edx*1],bl
6401186b:	add    DWORD PTR [eax+0x14],0x1
6401186f:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011876:	mov    ecx,DWORD PTR [eax+0x14]
64011879:	mov    edx,DWORD PTR [eax+0x8]
6401187c:	mov    BYTE PTR [ecx+edx*1],bl
6401187f:	mov    edx,DWORD PTR [eax+0x16bc]
64011885:	add    DWORD PTR [eax+0x14],0x1
64011889:	mov    ebx,DWORD PTR [esp+0x20]
6401188d:	mov    cl,0x10
6401188f:	sub    cl,dl
64011891:	shr    si,cl
64011894:	mov    ecx,DWORD PTR [esp+0x14]
64011898:	lea    edx,[edx+ecx*1-0x10]
6401189c:	mov    DWORD PTR [eax+0x16bc],edx
640118a2:	mov    WORD PTR [eax+0x16b8],si
640118a9:	jmp    0x640118c5
640118ab:	mov    esi,DWORD PTR [esp+0x24]
640118af:	mov    si,WORD PTR [esi+edi*4]
640118b3:	shl    si,cl
640118b6:	or     WORD PTR [eax+0x16b8],si
640118bd:	add    ecx,edx
640118bf:	mov    DWORD PTR [eax+0x16bc],ecx
640118c5:	mov    esi,DWORD PTR [edi*4+0x64024fb8]
640118cc:	test   esi,esi
640118ce:	je     0x64011952
640118d4:	mov    ecx,DWORD PTR [eax+0x16bc]
640118da:	sub    ebp,DWORD PTR [edi*4+0x640258f0]
640118e1:	mov    edx,0x10
640118e6:	sub    edx,esi
640118e8:	cmp    ecx,edx
640118ea:	jle    0x64011941
640118ec:	mov    edx,ebp
640118ee:	shl    edx,cl
640118f0:	mov    ecx,DWORD PTR [eax+0x8]
640118f3:	mov    DWORD PTR [esp+0x14],ebx
640118f7:	or     WORD PTR [eax+0x16b8],dx
640118fe:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011905:	mov    edx,DWORD PTR [eax+0x14]
64011908:	mov    BYTE PTR [ecx+edx*1],bl
6401190b:	add    DWORD PTR [eax+0x14],0x1
6401190f:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011916:	mov    ecx,DWORD PTR [eax+0x14]
64011919:	mov    edx,DWORD PTR [eax+0x8]
6401191c:	mov    BYTE PTR [ecx+edx*1],bl
6401191f:	mov    edx,DWORD PTR [eax+0x16bc]
64011925:	add    DWORD PTR [eax+0x14],0x1
64011929:	mov    ebx,DWORD PTR [esp+0x14]
6401192d:	mov    cl,0x10
6401192f:	sub    cl,dl
64011931:	shr    bp,cl
64011934:	lea    ecx,[edx+esi*1-0x10]
64011938:	mov    WORD PTR [eax+0x16b8],bp
6401193f:	jmp    0x6401194c
64011941:	shl    ebp,cl
64011943:	or     WORD PTR [eax+0x16b8],bp
6401194a:	add    ecx,esi
6401194c:	mov    DWORD PTR [eax+0x16bc],ecx
64011952:	mov    ecx,DWORD PTR [esp+0x18]
64011956:	cmp    ecx,DWORD PTR [eax+0x16a0]
6401195c:	jb     0x64011630
64011962:	movzx  edi,WORD PTR [ebx+0x402]
64011969:	mov    ecx,DWORD PTR [eax+0x16bc]
6401196f:	mov    edx,0x10
64011974:	sub    edx,edi
64011976:	cmp    ecx,edx
64011978:	jle    0x640119ed
6401197a:	movzx  esi,WORD PTR [ebx+0x400]
64011981:	mov    edx,esi
64011983:	shl    edx,cl
64011985:	mov    ecx,DWORD PTR [eax+0x8]
64011988:	mov    DWORD PTR [esp+0x20],ebx
6401198c:	or     WORD PTR [eax+0x16b8],dx
64011993:	mov    edx,DWORD PTR [eax+0x14]
64011996:	mov    bl,BYTE PTR [eax+0x16b8]
6401199c:	mov    BYTE PTR [ecx+edx*1],bl
6401199f:	add    DWORD PTR [eax+0x14],0x1
640119a3:	mov    ebp,DWORD PTR [eax+0x14]
640119a6:	mov    ecx,DWORD PTR [eax+0x8]
640119a9:	mov    dl,BYTE PTR [eax+0x16b9]
640119af:	mov    ebx,DWORD PTR [esp+0x20]
640119b3:	mov    BYTE PTR [ecx+ebp*1],dl
640119b6:	mov    edx,DWORD PTR [eax+0x16bc]
640119bc:	add    DWORD PTR [eax+0x14],0x1
640119c0:	mov    cl,0x10
640119c2:	sub    cl,dl
640119c4:	shr    si,cl
640119c7:	lea    ecx,[edx+edi*1-0x10]
640119cb:	pop    edi
640119cc:	mov    DWORD PTR [eax+0x16bc],ecx
640119d2:	mov    WORD PTR [eax+0x16b8],si
640119d9:	movzx  edx,WORD PTR [ebx+0x402]
640119e0:	pop    esi
640119e1:	pop    ebp
640119e2:	mov    DWORD PTR [eax+0x16b4],edx
640119e8:	pop    ebx
640119e9:	add    esp,0xc
640119ec:	ret    
640119ed:	mov    dx,WORD PTR [ebx+0x400]
640119f4:	shl    dx,cl
640119f7:	or     WORD PTR [eax+0x16b8],dx
640119fe:	add    ecx,edi
64011a00:	pop    edi
64011a01:	mov    DWORD PTR [eax+0x16bc],ecx
64011a07:	movzx  ecx,WORD PTR [ebx+0x402]
64011a0e:	pop    esi
64011a0f:	pop    ebp
64011a10:	mov    DWORD PTR [eax+0x16b4],ecx
64011a16:	pop    ebx
64011a17:	add    esp,0xc
64011a1a:	ret    
64011a1b:	int3   
64011a1c:	int3   
64011a1d:	int3   
64011a1e:	int3   
64011a1f:	int3   
64011a20:	xor    eax,eax
64011a22:	lea    ecx,[edx+0x94]
64011a28:	cmp    WORD PTR [ecx],0x0
64011a2c:	jne    0x64011a39
64011a2e:	add    eax,0x1
64011a31:	add    ecx,0x4
64011a34:	cmp    eax,0x9
64011a37:	jl     0x64011a28
64011a39:	cmp    eax,0x9
64011a3c:	jne    0x64011add
64011a42:	mov    eax,0xe
64011a47:	lea    ecx,[edx+0xd0]
64011a4d:	lea    ecx,[ecx+0x0]
64011a50:	cmp    WORD PTR [ecx-0x4],0x0
64011a55:	jne    0x64011add
64011a5b:	cmp    WORD PTR [ecx],0x0
64011a5f:	jne    0x64011a96
64011a61:	cmp    WORD PTR [ecx+0x4],0x0
64011a66:	jne    0x64011aa7
64011a68:	cmp    WORD PTR [ecx+0x8],0x0
64011a6d:	jne    0x64011ab8
64011a6f:	cmp    WORD PTR [ecx+0xc],0x0
64011a74:	jne    0x64011ac9
64011a76:	cmp    WORD PTR [ecx+0x10],0x0
64011a7b:	jne    0x64011ada
64011a7d:	add    eax,0x6
64011a80:	add    ecx,0x18
64011a83:	cmp    eax,0x20
64011a86:	jl     0x64011a50
64011a88:	mov    edx,DWORD PTR [edx]
64011a8a:	xor    ecx,ecx
64011a8c:	cmp    eax,0x20
64011a8f:	sete   cl
64011a92:	mov    DWORD PTR [edx+0x2c],ecx
64011a95:	ret    
64011a96:	mov    edx,DWORD PTR [edx]
64011a98:	xor    ecx,ecx
64011a9a:	add    eax,0x1
64011a9d:	cmp    eax,0x20
64011aa0:	sete   cl
64011aa3:	mov    DWORD PTR [edx+0x2c],ecx
64011aa6:	ret    
64011aa7:	mov    edx,DWORD PTR [edx]
64011aa9:	xor    ecx,ecx
64011aab:	add    eax,0x2
64011aae:	cmp    eax,0x20
64011ab1:	sete   cl
64011ab4:	mov    DWORD PTR [edx+0x2c],ecx
64011ab7:	ret    
64011ab8:	mov    edx,DWORD PTR [edx]
64011aba:	xor    ecx,ecx
64011abc:	add    eax,0x3
64011abf:	cmp    eax,0x20
64011ac2:	sete   cl
64011ac5:	mov    DWORD PTR [edx+0x2c],ecx
64011ac8:	ret    
64011ac9:	mov    edx,DWORD PTR [edx]
64011acb:	xor    ecx,ecx
64011acd:	add    eax,0x4
64011ad0:	cmp    eax,0x20
64011ad3:	sete   cl
64011ad6:	mov    DWORD PTR [edx+0x2c],ecx
64011ad9:	ret    
64011ada:	add    eax,0x5
64011add:	mov    edx,DWORD PTR [edx]
64011adf:	xor    ecx,ecx
64011ae1:	cmp    eax,0x20
64011ae4:	sete   cl
64011ae7:	mov    DWORD PTR [edx+0x2c],ecx
64011aea:	ret    
64011aeb:	int3   
64011aec:	int3   
64011aed:	int3   
64011aee:	int3   
64011aef:	int3   
64011af0:	xor    eax,eax
64011af2:	push   esi
64011af3:	mov    esi,ecx
64011af5:	and    esi,0x1
64011af8:	or     eax,esi
64011afa:	sub    edx,0x1
64011afd:	shr    ecx,1
64011aff:	add    eax,eax
64011b01:	test   edx,edx
64011b03:	jg     0x64011af3
64011b05:	shr    eax,1
64011b07:	pop    esi
64011b08:	ret    
64011b09:	int3   
64011b0a:	int3   
64011b0b:	int3   
64011b0c:	int3   
64011b0d:	int3   
64011b0e:	int3   
64011b0f:	int3   
64011b10:	mov    edx,DWORD PTR [eax+0x16bc]
64011b16:	cmp    edx,0x8
64011b19:	push   ebx
64011b1a:	push   esi
64011b1b:	jle    0x64011b5a
64011b1d:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011b24:	mov    edx,DWORD PTR [eax+0x14]
64011b27:	mov    ecx,DWORD PTR [eax+0x8]
64011b2a:	mov    BYTE PTR [ecx+edx*1],bl
64011b2d:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011b34:	mov    edx,DWORD PTR [eax+0x8]
64011b37:	mov    esi,0x1
64011b3c:	add    DWORD PTR [eax+0x14],esi
64011b3f:	mov    ecx,DWORD PTR [eax+0x14]
64011b42:	mov    BYTE PTR [ecx+edx*1],bl
64011b45:	add    DWORD PTR [eax+0x14],esi
64011b48:	xor    ecx,ecx
64011b4a:	pop    esi
64011b4b:	mov    WORD PTR [eax+0x16b8],cx
64011b52:	mov    DWORD PTR [eax+0x16bc],ecx
64011b58:	pop    ebx
64011b59:	ret    
64011b5a:	xor    ecx,ecx
64011b5c:	cmp    edx,ecx
64011b5e:	jle    0x64011b73
64011b60:	mov    esi,DWORD PTR [eax+0x14]
64011b63:	mov    edx,DWORD PTR [eax+0x8]
64011b66:	mov    bl,BYTE PTR [eax+0x16b8]
64011b6c:	mov    BYTE PTR [edx+esi*1],bl
64011b6f:	add    DWORD PTR [eax+0x14],0x1
64011b73:	pop    esi
64011b74:	mov    WORD PTR [eax+0x16b8],cx
64011b7b:	mov    DWORD PTR [eax+0x16bc],ecx
64011b81:	pop    ebx
64011b82:	ret    
64011b83:	int3   
64011b84:	int3   
64011b85:	int3   
64011b86:	int3   
64011b87:	int3   
64011b88:	int3   
64011b89:	int3   
64011b8a:	int3   
64011b8b:	int3   
64011b8c:	int3   
64011b8d:	int3   
64011b8e:	int3   
64011b8f:	int3   
64011b90:	push   ebx
64011b91:	push   esi
64011b92:	push   edi
64011b93:	mov    ebx,ecx
64011b95:	mov    esi,edx
64011b97:	call   0x64011b10
64011b9c:	cmp    DWORD PTR [esp+0x10],0x0
64011ba1:	mov    DWORD PTR [eax+0x16b4],0x8
64011bab:	mov    edi,0x1
64011bb0:	je     0x64011bec
64011bb2:	mov    ecx,DWORD PTR [eax+0x14]
64011bb5:	mov    edx,DWORD PTR [eax+0x8]
64011bb8:	mov    BYTE PTR [ecx+edx*1],bl
64011bbb:	add    DWORD PTR [eax+0x14],edi
64011bbe:	mov    ecx,DWORD PTR [eax+0x14]
64011bc1:	mov    edx,DWORD PTR [eax+0x8]
64011bc4:	mov    BYTE PTR [ecx+edx*1],bh
64011bc7:	add    DWORD PTR [eax+0x14],edi
64011bca:	mov    edx,DWORD PTR [eax+0x8]
64011bcd:	push   ebp
64011bce:	mov    ebp,DWORD PTR [eax+0x14]
64011bd1:	mov    cl,bl
64011bd3:	not    cl
64011bd5:	mov    BYTE PTR [edx+ebp*1],cl
64011bd8:	add    DWORD PTR [eax+0x14],edi
64011bdb:	mov    ebp,DWORD PTR [eax+0x14]
64011bde:	mov    edx,DWORD PTR [eax+0x8]
64011be1:	mov    ecx,ebx
64011be3:	not    ecx
64011be5:	mov    BYTE PTR [edx+ebp*1],ch
64011be8:	add    DWORD PTR [eax+0x14],edi
64011beb:	pop    ebp
64011bec:	test   ebx,ebx
64011bee:	je     0x64011c0e
64011bf0:	mov    ecx,DWORD PTR [eax+0x14]
64011bf3:	mov    edx,DWORD PTR [eax+0x8]
64011bf6:	sub    ebx,edi
64011bf8:	mov    DWORD PTR [esp+0x10],ebx
64011bfc:	mov    bl,BYTE PTR [esi]
64011bfe:	mov    BYTE PTR [ecx+edx*1],bl
64011c01:	mov    ebx,DWORD PTR [esp+0x10]
64011c05:	add    DWORD PTR [eax+0x14],edi
64011c08:	add    esi,edi
64011c0a:	test   ebx,ebx
64011c0c:	jne    0x64011bf0
64011c0e:	pop    edi
64011c0f:	pop    esi
64011c10:	pop    ebx
64011c11:	ret    
64011c12:	int3   
64011c13:	int3   
64011c14:	int3   
64011c15:	int3   
64011c16:	int3   
64011c17:	int3   
64011c18:	int3   
64011c19:	int3   
64011c1a:	int3   
64011c1b:	int3   
64011c1c:	int3   
64011c1d:	int3   
64011c1e:	int3   
64011c1f:	int3   
64011c20:	sub    esp,0x24
64011c23:	mov    eax,ds:0x64037644
64011c28:	xor    eax,esp
64011c2a:	mov    DWORD PTR [esp+0x20],eax
64011c2e:	push   esi
64011c2f:	lea    esi,[esp+0x6]
64011c33:	xor    ecx,ecx
64011c35:	mov    eax,0x1
64011c3a:	sub    edx,esi
64011c3c:	lea    esp,[esp+0x0]
64011c40:	lea    esi,[edx+eax*2]
64011c43:	mov    si,WORD PTR [esp+esi*1+0x4]
64011c48:	add    si,cx
64011c4b:	add    si,si
64011c4e:	movzx  ecx,si
64011c51:	mov    WORD PTR [esp+eax*2+0x4],cx
64011c56:	add    eax,0x1
64011c59:	cmp    eax,0xf
64011c5c:	jle    0x64011c40
64011c5e:	xor    esi,esi
64011c60:	test   ebx,ebx
64011c62:	jl     0x64011c8d
64011c64:	movzx  edx,WORD PTR [edi+esi*4+0x2]
64011c69:	test   edx,edx
64011c6b:	je     0x64011c86
64011c6d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
64011c72:	movzx  ecx,ax
64011c75:	add    eax,0x1
64011c78:	mov    WORD PTR [esp+edx*2+0x4],ax
64011c7d:	call   0x64011af0
64011c82:	mov    WORD PTR [edi+esi*4],ax
64011c86:	add    esi,0x1
64011c89:	cmp    esi,ebx
64011c8b:	jle    0x64011c64
64011c8d:	mov    ecx,DWORD PTR [esp+0x24]
64011c91:	pop    esi
64011c92:	xor    ecx,esp
64011c94:	call   0x64013cc6
64011c99:	add    esp,0x24
64011c9c:	ret    
64011c9d:	int3   
64011c9e:	int3   
64011c9f:	int3   
64011ca0:	sub    esp,0x8
64011ca3:	mov    eax,DWORD PTR [esp+0xc]
64011ca7:	push   ebx
64011ca8:	push   ebp
64011ca9:	push   edi
64011caa:	mov    edi,DWORD PTR [eax]
64011cac:	mov    eax,DWORD PTR [eax+0x8]
64011caf:	mov    ecx,DWORD PTR [eax+0xc]
64011cb2:	mov    ebp,DWORD PTR [eax]
64011cb4:	xor    edx,edx
64011cb6:	or     ebx,0xffffffff
64011cb9:	xor    eax,eax
64011cbb:	cmp    ecx,edx
64011cbd:	mov    DWORD PTR [esp+0x10],ecx
64011cc1:	mov    DWORD PTR [esp+0xc],ebx
64011cc5:	mov    DWORD PTR [esi+0x1450],edx
64011ccb:	mov    DWORD PTR [esi+0x1454],0x23d
64011cd5:	jle    0x64011d0e
64011cd7:	cmp    WORD PTR [edi+eax*4],dx
64011cdb:	je     0x64011d00
64011cdd:	add    DWORD PTR [esi+0x1450],0x1
64011ce4:	mov    ecx,DWORD PTR [esi+0x1450]
64011cea:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011cf1:	mov    DWORD PTR [esp+0xc],eax
64011cf5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
64011cfc:	mov    ebx,eax
64011cfe:	jmp    0x64011d05
64011d00:	mov    WORD PTR [edi+eax*4+0x2],dx
64011d05:	add    eax,0x1
64011d08:	cmp    eax,DWORD PTR [esp+0x10]
64011d0c:	jl     0x64011cd7
64011d0e:	cmp    DWORD PTR [esi+0x1450],0x2
64011d15:	jge    0x64011d69
64011d17:	cmp    ebx,0x2
64011d1a:	jge    0x64011d23
64011d1c:	add    ebx,0x1
64011d1f:	mov    eax,ebx
64011d21:	jmp    0x64011d25
64011d23:	xor    eax,eax
64011d25:	add    DWORD PTR [esi+0x1450],0x1
64011d2c:	mov    ecx,DWORD PTR [esi+0x1450]
64011d32:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011d39:	mov    WORD PTR [edi+eax*4],0x1
64011d3f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
64011d46:	add    DWORD PTR [esi+0x16a8],0xffffffff
64011d4d:	cmp    ebp,edx
64011d4f:	je     0x64011d5c
64011d51:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
64011d56:	sub    DWORD PTR [esi+0x16ac],eax
64011d5c:	cmp    DWORD PTR [esi+0x1450],0x2
64011d63:	jl     0x64011d17
64011d65:	mov    DWORD PTR [esp+0xc],ebx
64011d69:	mov    ecx,DWORD PTR [esp+0x18]
64011d6d:	mov    DWORD PTR [ecx+0x4],ebx
64011d70:	mov    eax,DWORD PTR [esi+0x1450]
64011d76:	cdq    
64011d77:	sub    eax,edx
64011d79:	mov    ebp,eax
64011d7b:	sar    ebp,1
64011d7d:	cmp    ebp,0x1
64011d80:	jl     0x64011d95
64011d82:	push   ebp
64011d83:	mov    eax,esi
64011d85:	call   0x64010ac0
64011d8a:	sub    ebp,0x1
64011d8d:	add    esp,0x4
64011d90:	cmp    ebp,0x1
64011d93:	jge    0x64011d82
64011d95:	mov    ebx,DWORD PTR [esp+0x10]
64011d99:	lea    esp,[esp+0x0]
64011da0:	mov    eax,DWORD PTR [esi+0x1450]
64011da6:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
64011dad:	mov    ebp,DWORD PTR [esi+0xb60]
64011db3:	add    eax,0xffffffff
64011db6:	mov    DWORD PTR [esi+0x1450],eax
64011dbc:	push   0x1
64011dbe:	mov    eax,esi
64011dc0:	mov    DWORD PTR [esi+0xb60],edx
64011dc6:	call   0x64010ac0
64011dcb:	mov    eax,DWORD PTR [esi+0xb60]
64011dd1:	or     edx,0xffffffff
64011dd4:	add    DWORD PTR [esi+0x1454],edx
64011dda:	mov    ecx,DWORD PTR [esi+0x1454]
64011de0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
64011de7:	add    DWORD PTR [esi+0x1454],edx
64011ded:	mov    ecx,DWORD PTR [esi+0x1454]
64011df3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011dfa:	mov    cx,WORD PTR [edi+eax*4]
64011dfe:	add    cx,WORD PTR [edi+ebp*4]
64011e02:	add    esp,0x4
64011e05:	mov    WORD PTR [edi+ebx*4],cx
64011e09:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
64011e10:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
64011e17:	cmp    dl,cl
64011e19:	jb     0x64011e20
64011e1b:	movzx  ecx,dl
64011e1e:	jmp    0x64011e23
64011e20:	movzx  ecx,cl
64011e23:	add    cl,0x1
64011e26:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
64011e2d:	movzx  ecx,bx
64011e30:	mov    WORD PTR [edi+eax*4+0x2],cx
64011e35:	mov    WORD PTR [edi+ebp*4+0x2],cx
64011e3a:	mov    DWORD PTR [esi+0xb60],ebx
64011e40:	push   0x1
64011e42:	mov    eax,esi
64011e44:	add    ebx,0x1
64011e47:	call   0x64010ac0
64011e4c:	add    esp,0x4
64011e4f:	cmp    DWORD PTR [esi+0x1450],0x2
64011e56:	jge    0x64011da0
64011e5c:	add    DWORD PTR [esi+0x1454],0xffffffff
64011e63:	mov    eax,DWORD PTR [esi+0x1454]
64011e69:	mov    edx,DWORD PTR [esi+0xb60]
64011e6f:	mov    ecx,DWORD PTR [esp+0x18]
64011e73:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
64011e7a:	mov    eax,esi
64011e7c:	call   0x64010b90
64011e81:	mov    ebx,DWORD PTR [esp+0xc]
64011e85:	lea    edx,[esi+0xb3c]
64011e8b:	call   0x64011c20
64011e90:	pop    edi
64011e91:	pop    ebp
64011e92:	pop    ebx
64011e93:	add    esp,0x8
64011e96:	ret    
64011e97:	int3   
64011e98:	int3   
64011e99:	int3   
64011e9a:	int3   
64011e9b:	int3   
64011e9c:	int3   
64011e9d:	int3   
64011e9e:	int3   
64011e9f:	int3   
64011ea0:	push   esi
64011ea1:	mov    esi,eax
64011ea3:	mov    ecx,DWORD PTR [esi+0xb1c]
64011ea9:	lea    eax,[esi+0x94]
64011eaf:	push   esi
64011eb0:	call   0x64010db0
64011eb5:	mov    ecx,DWORD PTR [esi+0xb28]
64011ebb:	lea    eax,[esi+0x988]
64011ec1:	push   esi
64011ec2:	call   0x64010db0
64011ec7:	lea    eax,[esi+0xb30]
64011ecd:	push   eax
64011ece:	call   0x64011ca0
64011ed3:	add    esp,0xc
64011ed6:	mov    eax,0x12
64011edb:	jmp    0x64011ee0
64011edd:	lea    ecx,[ecx+0x0]
64011ee0:	movzx  ecx,BYTE PTR [eax+0x64024fa4]
64011ee7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011ef0:	jne    0x64011f5d
64011ef2:	movzx  edx,BYTE PTR [eax+0x64024fa3]
64011ef9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011f02:	jne    0x64011f3c
64011f04:	movzx  ecx,BYTE PTR [eax+0x64024fa2]
64011f0b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011f14:	jne    0x64011f4b
64011f16:	movzx  edx,BYTE PTR [eax+0x64024fa1]
64011f1d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011f26:	jne    0x64011f5a
64011f28:	sub    eax,0x4
64011f2b:	cmp    eax,0x3
64011f2e:	jge    0x64011ee0
64011f30:	lea    ecx,[eax+eax*2+0x11]
64011f34:	add    DWORD PTR [esi+0x16a8],ecx
64011f3a:	pop    esi
64011f3b:	ret    
64011f3c:	sub    eax,0x1
64011f3f:	lea    ecx,[eax+eax*2+0x11]
64011f43:	add    DWORD PTR [esi+0x16a8],ecx
64011f49:	pop    esi
64011f4a:	ret    
64011f4b:	sub    eax,0x2
64011f4e:	lea    ecx,[eax+eax*2+0x11]
64011f52:	add    DWORD PTR [esi+0x16a8],ecx
64011f58:	pop    esi
64011f59:	ret    
64011f5a:	sub    eax,0x3
64011f5d:	lea    ecx,[eax+eax*2+0x11]
64011f61:	add    DWORD PTR [esi+0x16a8],ecx
64011f67:	pop    esi
64011f68:	ret    
64011f69:	int3   
64011f6a:	int3   
64011f6b:	int3   
64011f6c:	int3   
64011f6d:	int3   
64011f6e:	int3   
64011f6f:	int3   
64011f70:	mov    eax,DWORD PTR [esp+0x4]
64011f74:	mov    ecx,DWORD PTR [eax+0x16bc]
64011f7a:	cmp    ecx,0xd
64011f7d:	jle    0x64011fe8
64011f7f:	push   ebx
64011f80:	push   esi
64011f81:	mov    esi,DWORD PTR [esp+0x18]
64011f85:	mov    edx,esi
64011f87:	shl    edx,cl
64011f89:	mov    ecx,DWORD PTR [eax+0x8]
64011f8c:	or     WORD PTR [eax+0x16b8],dx
64011f93:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011f9a:	mov    edx,DWORD PTR [eax+0x14]
64011f9d:	mov    BYTE PTR [ecx+edx*1],bl
64011fa0:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011fa7:	add    DWORD PTR [eax+0x14],0x1
64011fab:	mov    ecx,DWORD PTR [eax+0x14]
64011fae:	mov    edx,DWORD PTR [eax+0x8]
64011fb1:	mov    BYTE PTR [ecx+edx*1],bl
64011fb4:	mov    edx,DWORD PTR [eax+0x16bc]
64011fba:	add    DWORD PTR [eax+0x14],0x1
64011fbe:	mov    cl,0x10
64011fc0:	sub    cl,dl
64011fc2:	shr    si,cl
64011fc5:	mov    ecx,DWORD PTR [esp+0x14]
64011fc9:	add    edx,0xfffffff3
64011fcc:	mov    DWORD PTR [eax+0x16bc],edx
64011fd2:	mov    edx,DWORD PTR [esp+0x10]
64011fd6:	mov    WORD PTR [eax+0x16b8],si
64011fdd:	pop    esi
64011fde:	pop    ebx
64011fdf:	push   0x1
64011fe1:	call   0x64011b90
64011fe6:	pop    ecx
64011fe7:	ret    
64011fe8:	mov    edx,DWORD PTR [esp+0x10]
64011fec:	shl    edx,cl
64011fee:	add    ecx,0x3
64011ff1:	mov    DWORD PTR [eax+0x16bc],ecx
64011ff7:	mov    ecx,DWORD PTR [esp+0xc]
64011ffb:	or     WORD PTR [eax+0x16b8],dx
64012002:	mov    edx,DWORD PTR [esp+0x8]
64012006:	push   0x1
64012008:	call   0x64011b90
6401200d:	pop    ecx
6401200e:	ret    
6401200f:	int3   
64012010:	push   ecx
64012011:	push   ebx
64012012:	mov    ebx,DWORD PTR [esp+0x14]
64012016:	push   esi
64012017:	mov    esi,DWORD PTR [esp+0x10]
6401201b:	cmp    DWORD PTR [esi+0x84],0x0
64012022:	push   edi
64012023:	mov    DWORD PTR [esp+0xc],0x0
6401202b:	jle    0x64012084
6401202d:	test   ebx,ebx
6401202f:	jbe    0x64012040
64012031:	mov    eax,DWORD PTR [esi]
64012033:	cmp    DWORD PTR [eax+0x2c],0x2
64012037:	jne    0x64012040
64012039:	mov    edx,esi
6401203b:	call   0x64011a20
64012040:	lea    ecx,[esi+0xb18]
64012046:	push   ecx
64012047:	call   0x64011ca0
6401204c:	lea    edx,[esi+0xb24]
64012052:	push   edx
64012053:	call   0x64011ca0
64012058:	add    esp,0x8
6401205b:	mov    eax,esi
6401205d:	call   0x64011ea0
64012062:	mov    edx,DWORD PTR [esi+0x16a8]
64012068:	mov    ecx,DWORD PTR [esi+0x16ac]
6401206e:	add    edx,0xa
64012071:	add    ecx,0xa
64012074:	shr    edx,0x3
64012077:	shr    ecx,0x3
6401207a:	cmp    ecx,edx
6401207c:	mov    DWORD PTR [esp+0xc],eax
64012080:	ja     0x64012089
64012082:	jmp    0x64012087
64012084:	lea    ecx,[ebx+0x5]
64012087:	mov    edx,ecx
64012089:	lea    eax,[ebx+0x4]
6401208c:	cmp    eax,edx
6401208e:	ja     0x640120ad
64012090:	mov    eax,DWORD PTR [esp+0x18]
64012094:	test   eax,eax
64012096:	je     0x640120ad
64012098:	mov    edi,DWORD PTR [esp+0x20]
6401209c:	push   edi
6401209d:	push   ebx
6401209e:	push   eax
6401209f:	push   esi
640120a0:	call   0x64011f70
640120a5:	add    esp,0x10
640120a8:	jmp    0x64012202
640120ad:	cmp    DWORD PTR [esi+0x88],0x4
640120b4:	je     0x64012178
640120ba:	cmp    ecx,edx
640120bc:	je     0x64012178
640120c2:	mov    ecx,DWORD PTR [esi+0x16bc]
640120c8:	cmp    ecx,0xd
640120cb:	mov    edi,DWORD PTR [esp+0x20]
640120cf:	lea    edx,[edi+0x4]
640120d2:	jle    0x64012126
640120d4:	mov    eax,edx
640120d6:	shl    eax,cl
640120d8:	mov    ecx,DWORD PTR [esi+0x8]
640120db:	or     WORD PTR [esi+0x16b8],ax
640120e2:	movzx  ebx,BYTE PTR [esi+0x16b8]
640120e9:	mov    eax,DWORD PTR [esi+0x14]
640120ec:	mov    BYTE PTR [ecx+eax*1],bl
640120ef:	add    DWORD PTR [esi+0x14],0x1
640120f3:	movzx  ebx,BYTE PTR [esi+0x16b9]
640120fa:	mov    ecx,DWORD PTR [esi+0x14]
640120fd:	mov    eax,DWORD PTR [esi+0x8]
64012100:	mov    BYTE PTR [ecx+eax*1],bl
64012103:	mov    ebx,DWORD PTR [esi+0x16bc]
64012109:	add    DWORD PTR [esi+0x14],0x1
6401210d:	mov    cl,0x10
6401210f:	sub    cl,bl
64012111:	shr    dx,cl
64012114:	add    ebx,0xfffffff3
64012117:	mov    DWORD PTR [esi+0x16bc],ebx
6401211d:	mov    WORD PTR [esi+0x16b8],dx
64012124:	jmp    0x64012138
64012126:	shl    edx,cl
64012128:	or     WORD PTR [esi+0x16b8],dx
6401212f:	add    ecx,0x3
64012132:	mov    DWORD PTR [esi+0x16bc],ecx
64012138:	mov    eax,DWORD PTR [esp+0xc]
6401213c:	mov    ecx,DWORD PTR [esi+0xb28]
64012142:	mov    edx,DWORD PTR [esi+0xb1c]
64012148:	add    eax,0x1
6401214b:	push   eax
6401214c:	add    ecx,0x1
6401214f:	push   ecx
64012150:	add    edx,0x1
64012153:	push   edx
64012154:	mov    eax,esi
64012156:	call   0x640113b0
6401215b:	lea    eax,[esi+0x988]
64012161:	push   eax
64012162:	lea    ecx,[esi+0x94]
64012168:	push   ecx
64012169:	mov    eax,esi
6401216b:	call   0x64011610
64012170:	add    esp,0x14
64012173:	jmp    0x64012202
64012178:	mov    ecx,DWORD PTR [esi+0x16bc]
6401217e:	cmp    ecx,0xd
64012181:	mov    edi,DWORD PTR [esp+0x20]
64012185:	lea    eax,[edi+0x2]
64012188:	jle    0x640121dc
6401218a:	mov    edx,eax
6401218c:	shl    edx,cl
6401218e:	mov    ecx,DWORD PTR [esi+0x8]
64012191:	or     WORD PTR [esi+0x16b8],dx
64012198:	movzx  ebx,BYTE PTR [esi+0x16b8]
6401219f:	mov    edx,DWORD PTR [esi+0x14]
640121a2:	mov    BYTE PTR [ecx+edx*1],bl
640121a5:	add    DWORD PTR [esi+0x14],0x1
640121a9:	movzx  ebx,BYTE PTR [esi+0x16b9]
640121b0:	mov    ecx,DWORD PTR [esi+0x14]
640121b3:	mov    edx,DWORD PTR [esi+0x8]
640121b6:	mov    BYTE PTR [ecx+edx*1],bl
640121b9:	mov    edx,DWORD PTR [esi+0x16bc]
640121bf:	add    DWORD PTR [esi+0x14],0x1
640121c3:	mov    cl,0x10
640121c5:	sub    cl,dl
640121c7:	shr    ax,cl
640121ca:	add    edx,0xfffffff3
640121cd:	mov    DWORD PTR [esi+0x16bc],edx
640121d3:	mov    WORD PTR [esi+0x16b8],ax
640121da:	jmp    0x640121ee
640121dc:	shl    eax,cl
640121de:	or     WORD PTR [esi+0x16b8],ax
640121e5:	add    ecx,0x3
640121e8:	mov    DWORD PTR [esi+0x16bc],ecx
640121ee:	push   0x64025500
640121f3:	push   0x64025080
640121f8:	mov    eax,esi
640121fa:	call   0x64011610
640121ff:	add    esp,0x8
64012202:	mov    edx,esi
64012204:	call   0x64010a50
64012209:	test   edi,edi
6401220b:	pop    edi
6401220c:	je     0x6401221a
6401220e:	mov    eax,esi
64012210:	pop    esi
64012211:	pop    ebx
64012212:	add    esp,0x4
64012215:	jmp    0x64011b10
6401221a:	pop    esi
6401221b:	pop    ebx
6401221c:	pop    ecx
6401221d:	ret    
6401221e:	int3   
6401221f:	int3   
64012220:	push   esi
64012221:	mov    esi,edx
64012223:	test   esi,esi
64012225:	not    eax
64012227:	je     0x64012252
64012229:	lea    esp,[esp+0x0]
64012230:	test   cl,0x3
64012233:	je     0x64012252
64012235:	movzx  edx,BYTE PTR [ecx]
64012238:	xor    edx,eax
6401223a:	and    edx,0xff
64012240:	shr    eax,0x8
64012243:	xor    eax,DWORD PTR [edx*4+0x64025968]
6401224a:	add    ecx,0x1
6401224d:	sub    esi,0x1
64012250:	jne    0x64012230
64012252:	cmp    esi,0x20
64012255:	push   ebx
64012256:	push   edi
64012257:	jb     0x6401243c
6401225d:	mov    edi,esi
6401225f:	shr    edi,0x5
64012262:	xor    eax,DWORD PTR [ecx]
64012264:	add    ecx,0x4
64012267:	mov    edx,eax
64012269:	shr    edx,0x10
6401226c:	movzx  ebx,ah
6401226f:	and    edx,0xff
64012275:	mov    edx,DWORD PTR [edx*4+0x64025d68]
6401227c:	xor    edx,DWORD PTR [ebx*4+0x64026168]
64012283:	mov    ebx,eax
64012285:	and    eax,0xff
6401228a:	shr    ebx,0x18
6401228d:	xor    edx,DWORD PTR [ebx*4+0x64025968]
64012294:	add    ecx,0x4
64012297:	xor    edx,DWORD PTR [eax*4+0x64026568]
6401229e:	add    ecx,0x4
640122a1:	xor    edx,DWORD PTR [ecx-0x8]
640122a4:	add    ecx,0x4
640122a7:	mov    eax,edx
640122a9:	shr    eax,0x10
640122ac:	and    eax,0xff
640122b1:	mov    eax,DWORD PTR [eax*4+0x64025d68]
640122b8:	movzx  ebx,dh
640122bb:	xor    eax,DWORD PTR [ebx*4+0x64026168]
640122c2:	mov    ebx,edx
640122c4:	and    edx,0xff
640122ca:	shr    ebx,0x18
640122cd:	xor    eax,DWORD PTR [ebx*4+0x64025968]
640122d4:	add    ecx,0x4
640122d7:	xor    eax,DWORD PTR [edx*4+0x64026568]
640122de:	add    ecx,0x4
640122e1:	xor    eax,DWORD PTR [ecx-0x10]
640122e4:	mov    edx,eax
640122e6:	shr    edx,0x10
640122e9:	movzx  ebx,ah
640122ec:	and    edx,0xff
640122f2:	mov    edx,DWORD PTR [edx*4+0x64025d68]
640122f9:	xor    edx,DWORD PTR [ebx*4+0x64026168]
64012300:	mov    ebx,eax
64012302:	and    eax,0xff
64012307:	shr    ebx,0x18
6401230a:	xor    edx,DWORD PTR [ebx*4+0x64025968]
64012311:	xor    edx,DWORD PTR [eax*4+0x64026568]
64012318:	xor    edx,DWORD PTR [ecx-0xc]
6401231b:	mov    eax,edx
6401231d:	shr    eax,0x10
64012320:	and    eax,0xff
64012325:	mov    eax,DWORD PTR [eax*4+0x64025d68]
6401232c:	movzx  ebx,dh
6401232f:	xor    eax,DWORD PTR [ebx*4+0x64026168]
64012336:	mov    ebx,edx
64012338:	and    edx,0xff
6401233e:	shr    ebx,0x18
64012341:	xor    eax,DWORD PTR [ebx*4+0x64025968]
64012348:	xor    eax,DWORD PTR [edx*4+0x64026568]
6401234f:	xor    eax,DWORD PTR [ecx-0x8]
64012352:	mov    edx,eax
64012354:	shr    edx,0x10
64012357:	movzx  ebx,ah
6401235a:	and    edx,0xff
64012360:	mov    edx,DWORD PTR [edx*4+0x64025d68]
64012367:	xor    edx,DWORD PTR [ebx*4+0x64026168]
6401236e:	mov    ebx,eax
64012370:	and    eax,0xff
64012375:	shr    ebx,0x18
64012378:	xor    edx,DWORD PTR [ebx*4+0x64025968]
6401237f:	xor    edx,DWORD PTR [eax*4+0x64026568]
64012386:	xor    edx,DWORD PTR [ecx-0x4]
64012389:	mov    eax,edx
6401238b:	shr    eax,0x10
6401238e:	and    eax,0xff
64012393:	mov    eax,DWORD PTR [eax*4+0x64025d68]
6401239a:	movzx  ebx,dh
6401239d:	xor    eax,DWORD PTR [ebx*4+0x64026168]
640123a4:	mov    ebx,edx
640123a6:	shr    ebx,0x18
640123a9:	xor    eax,DWORD PTR [ebx*4+0x64025968]
640123b0:	and    edx,0xff
640123b6:	xor    eax,DWORD PTR [edx*4+0x64026568]
640123bd:	xor    eax,DWORD PTR [ecx]
640123bf:	add    ecx,0x4
640123c2:	mov    edx,eax
640123c4:	shr    edx,0x10
640123c7:	movzx  ebx,ah
640123ca:	and    edx,0xff
640123d0:	mov    edx,DWORD PTR [edx*4+0x64025d68]
640123d7:	xor    edx,DWORD PTR [ebx*4+0x64026168]
640123de:	mov    ebx,eax
640123e0:	and    eax,0xff
640123e5:	shr    ebx,0x18
640123e8:	xor    edx,DWORD PTR [ebx*4+0x64025968]
640123ef:	add    ecx,0x4
640123f2:	xor    edx,DWORD PTR [eax*4+0x64026568]
640123f9:	sub    esi,0x20
640123fc:	xor    edx,DWORD PTR [ecx-0x4]
640123ff:	mov    eax,edx
64012401:	shr    eax,0x10
64012404:	and    eax,0xff
64012409:	mov    eax,DWORD PTR [eax*4+0x64025d68]
64012410:	movzx  ebx,dh
64012413:	xor    eax,DWORD PTR [ebx*4+0x64026168]
6401241a:	mov    ebx,edx
6401241c:	shr    ebx,0x18
6401241f:	xor    eax,DWORD PTR [ebx*4+0x64025968]
64012426:	and    edx,0xff
6401242c:	xor    eax,DWORD PTR [edx*4+0x64026568]
64012433:	sub    edi,0x1
64012436:	jne    0x64012262
6401243c:	cmp    esi,0x4
6401243f:	jb     0x64012489
64012441:	mov    edx,esi
64012443:	shr    edx,0x2
64012446:	xor    eax,DWORD PTR [ecx]
64012448:	add    ecx,0x4
6401244b:	mov    edi,eax
6401244d:	shr    edi,0x10
64012450:	and    edi,0xff
64012456:	mov    edi,DWORD PTR [edi*4+0x64025d68]
6401245d:	movzx  ebx,ah
64012460:	xor    edi,DWORD PTR [ebx*4+0x64026168]
64012467:	mov    ebx,eax
64012469:	shr    ebx,0x18
6401246c:	xor    edi,DWORD PTR [ebx*4+0x64025968]
64012473:	and    eax,0xff
64012478:	xor    edi,DWORD PTR [eax*4+0x64026568]
6401247f:	sub    esi,0x4
64012482:	sub    edx,0x1
64012485:	mov    eax,edi
64012487:	jne    0x64012446
64012489:	test   esi,esi
6401248b:	pop    edi
6401248c:	pop    ebx
6401248d:	je     0x640124ad
6401248f:	nop
64012490:	movzx  edx,BYTE PTR [ecx]
64012493:	xor    edx,eax
64012495:	and    edx,0xff
6401249b:	shr    eax,0x8
6401249e:	xor    eax,DWORD PTR [edx*4+0x64025968]
640124a5:	add    ecx,0x1
640124a8:	sub    esi,0x1
640124ab:	jne    0x64012490
640124ad:	not    eax
640124af:	pop    esi
640124b0:	ret    
640124b1:	int3   
640124b2:	int3   
640124b3:	int3   
640124b4:	int3   
640124b5:	int3   
640124b6:	int3   
640124b7:	int3   
640124b8:	int3   
640124b9:	int3   
640124ba:	int3   
640124bb:	int3   
640124bc:	int3   
640124bd:	int3   
640124be:	int3   
640124bf:	int3   
640124c0:	mov    ecx,DWORD PTR [esp+0x8]
640124c4:	test   ecx,ecx
640124c6:	jne    0x640124cb
640124c8:	xor    eax,eax
640124ca:	ret    
640124cb:	mov    edx,DWORD PTR [esp+0xc]
640124cf:	mov    eax,DWORD PTR [esp+0x4]
640124d3:	jmp    0x64012220
640124d8:	int3   
640124d9:	int3   
640124da:	int3   
640124db:	int3   
640124dc:	int3   
640124dd:	int3   
640124de:	int3   
640124df:	int3   
640124e0:	mov    eax,DWORD PTR [esp+0x8]
640124e4:	imul   eax,DWORD PTR [esp+0xc]
640124e9:	push   eax
640124ea:	call   0x6401487e
640124ef:	add    esp,0x4
640124f2:	ret    
640124f3:	int3   
640124f4:	int3   
640124f5:	int3   
640124f6:	int3   
640124f7:	int3   
640124f8:	int3   
640124f9:	int3   
640124fa:	int3   
640124fb:	int3   
640124fc:	int3   
640124fd:	int3   
640124fe:	int3   
640124ff:	int3   
64012500:	mov    eax,DWORD PTR [esp+0x8]
64012504:	push   eax
64012505:	call   0x6401477f
6401250a:	pop    ecx
6401250b:	ret    
6401250c:	int3   
6401250d:	int3   
6401250e:	int3   
6401250f:	int3   
64012510:	sub    esp,0x3c
64012513:	push   ebx
64012514:	push   ebp
64012515:	push   esi
64012516:	push   edi
64012517:	mov    ecx,DWORD PTR [esp+0x50]
6401251b:	mov    eax,DWORD PTR [ecx+0x1c]
6401251e:	mov    edx,DWORD PTR [ecx+0x4]
64012521:	mov    ebx,DWORD PTR [eax+0x38]
64012524:	mov    ebp,DWORD PTR [ecx]
64012526:	sub    ebp,0x1
64012529:	lea    edx,[edx+ebp*1-0x5]
6401252d:	mov    DWORD PTR [esp+0x14],edx
64012531:	mov    esi,DWORD PTR [ecx+0xc]
64012534:	mov    ecx,DWORD PTR [ecx+0x10]
64012537:	mov    edx,ecx
64012539:	sub    edx,DWORD PTR [esp+0x54]
6401253d:	sub    esi,0x1
64012540:	add    edx,esi
64012542:	lea    ecx,[ecx+esi*1-0x101]
64012549:	mov    DWORD PTR [esp+0x38],edx
6401254d:	mov    edx,DWORD PTR [eax+0x28]
64012550:	mov    DWORD PTR [esp+0x2c],ecx
64012554:	mov    ecx,DWORD PTR [eax+0x2c]
64012557:	mov    DWORD PTR [esp+0x28],edx
6401255b:	mov    edx,DWORD PTR [eax+0x30]
6401255e:	mov    DWORD PTR [esp+0x3c],ecx
64012562:	mov    ecx,DWORD PTR [eax+0x34]
64012565:	mov    DWORD PTR [esp+0x44],edx
64012569:	mov    edx,DWORD PTR [eax+0x4c]
6401256c:	mov    DWORD PTR [esp+0x40],ecx
64012570:	mov    ecx,DWORD PTR [eax+0x50]
64012573:	mov    DWORD PTR [esp+0x20],edx
64012577:	mov    DWORD PTR [esp+0x24],ecx
6401257b:	mov    ecx,DWORD PTR [eax+0x54]
6401257e:	mov    edx,0x1
64012583:	shl    edx,cl
64012585:	mov    ecx,DWORD PTR [eax+0x58]
64012588:	mov    DWORD PTR [esp+0x18],eax
6401258c:	mov    edi,DWORD PTR [eax+0x3c]
6401258f:	mov    DWORD PTR [esp+0x54],0x1
64012597:	mov    eax,DWORD PTR [esp+0x54]
6401259b:	shl    eax,cl
6401259d:	sub    edx,0x1
640125a0:	mov    DWORD PTR [esp+0x10],ebp
640125a4:	mov    DWORD PTR [esp+0x48],edx
640125a8:	sub    eax,0x1
640125ab:	mov    DWORD PTR [esp+0x30],eax
640125af:	nop
640125b0:	cmp    edi,0xf
640125b3:	jae    0x640125d9
640125b5:	movzx  eax,BYTE PTR [ebp+0x1]
640125b9:	add    ebp,0x1
640125bc:	mov    ecx,edi
640125be:	shl    eax,cl
640125c0:	add    ebp,0x1
640125c3:	add    edi,0x8
640125c6:	mov    ecx,edi
640125c8:	add    ebx,eax
640125ca:	movzx  eax,BYTE PTR [ebp+0x0]
640125ce:	shl    eax,cl
640125d0:	mov    DWORD PTR [esp+0x10],ebp
640125d4:	add    ebx,eax
640125d6:	add    edi,0x8
640125d9:	mov    ecx,DWORD PTR [esp+0x20]
640125dd:	and    edx,ebx
640125df:	mov    eax,DWORD PTR [ecx+edx*4]
640125e2:	mov    edx,eax
640125e4:	shr    edx,0x8
640125e7:	movzx  ecx,dl
640125ea:	movzx  edx,al
640125ed:	shr    ebx,cl
640125ef:	sub    edi,ecx
640125f1:	test   edx,edx
640125f3:	je     0x64012638
640125f5:	test   dl,0x10
640125f8:	jne    0x64012645
640125fa:	test   dl,0x40
640125fd:	jne    0x6401294a
64012603:	mov    ecx,0x1
64012608:	mov    DWORD PTR [esp+0x54],ecx
6401260c:	mov    ecx,edx
6401260e:	mov    edx,DWORD PTR [esp+0x54]
64012612:	shl    edx,cl
64012614:	shr    eax,0x10
64012617:	sub    edx,0x1
6401261a:	and    edx,ebx
6401261c:	add    edx,eax
6401261e:	mov    eax,DWORD PTR [esp+0x20]
64012622:	mov    eax,DWORD PTR [eax+edx*4]
64012625:	mov    ecx,eax
64012627:	shr    ecx,0x8
6401262a:	movzx  ecx,cl
6401262d:	movzx  edx,al
64012630:	shr    ebx,cl
64012632:	sub    edi,ecx
64012634:	test   edx,edx
64012636:	jne    0x640125f5
64012638:	add    esi,0x1
6401263b:	shr    eax,0x10
6401263e:	mov    BYTE PTR [esi],al
64012640:	jmp    0x640128a5
64012645:	shr    eax,0x10
64012648:	and    edx,0xf
6401264b:	mov    DWORD PTR [esp+0x54],eax
6401264f:	je     0x6401267f
64012651:	cmp    edi,edx
64012653:	jae    0x64012669
64012655:	movzx  eax,BYTE PTR [ebp+0x1]
64012659:	add    ebp,0x1
6401265c:	mov    ecx,edi
6401265e:	shl    eax,cl
64012660:	mov    DWORD PTR [esp+0x10],ebp
64012664:	add    ebx,eax
64012666:	add    edi,0x8
64012669:	mov    ecx,edx
6401266b:	mov    eax,0x1
64012670:	shl    eax,cl
64012672:	sub    eax,0x1
64012675:	and    eax,ebx
64012677:	add    DWORD PTR [esp+0x54],eax
6401267b:	shr    ebx,cl
6401267d:	sub    edi,edx
6401267f:	cmp    edi,0xf
64012682:	jae    0x640126a8
64012684:	movzx  edx,BYTE PTR [ebp+0x1]
64012688:	add    ebp,0x1
6401268b:	movzx  eax,BYTE PTR [ebp+0x1]
6401268f:	mov    ecx,edi
64012691:	add    ebp,0x1
64012694:	shl    edx,cl
64012696:	add    edi,0x8
64012699:	mov    ecx,edi
6401269b:	shl    eax,cl
6401269d:	add    ebx,edx
6401269f:	mov    DWORD PTR [esp+0x10],ebp
640126a3:	add    ebx,eax
640126a5:	add    edi,0x8
640126a8:	mov    ecx,DWORD PTR [esp+0x30]
640126ac:	mov    edx,DWORD PTR [esp+0x24]
640126b0:	and    ecx,ebx
640126b2:	mov    edx,DWORD PTR [edx+ecx*4]
640126b5:	mov    eax,edx
640126b7:	shr    eax,0x8
640126ba:	movzx  ecx,al
640126bd:	movzx  eax,dl
640126c0:	shr    ebx,cl
640126c2:	sub    edi,ecx
640126c4:	test   al,0x10
640126c6:	mov    DWORD PTR [esp+0x1c],edx
640126ca:	jne    0x6401270b
640126cc:	lea    esp,[esp+0x0]
640126d0:	test   al,0x40
640126d2:	jne    0x6401293d
640126d8:	mov    ecx,eax
640126da:	movzx  eax,WORD PTR [esp+0x1e]
640126df:	mov    edx,0x1
640126e4:	shl    edx,cl
640126e6:	mov    ecx,DWORD PTR [esp+0x24]
640126ea:	sub    edx,0x1
640126ed:	and    edx,ebx
640126ef:	add    edx,eax
640126f1:	mov    edx,DWORD PTR [ecx+edx*4]
640126f4:	mov    eax,edx
640126f6:	shr    eax,0x8
640126f9:	movzx  ecx,al
640126fc:	movzx  eax,dl
640126ff:	shr    ebx,cl
64012701:	sub    edi,ecx
64012703:	test   al,0x10
64012705:	mov    DWORD PTR [esp+0x1c],edx
64012709:	je     0x640126d0
6401270b:	shr    edx,0x10
6401270e:	and    eax,0xf
64012711:	cmp    edi,eax
64012713:	mov    DWORD PTR [esp+0x1c],edx
64012717:	jae    0x64012745
64012719:	movzx  edx,BYTE PTR [ebp+0x1]
6401271d:	add    ebp,0x1
64012720:	mov    ecx,edi
64012722:	shl    edx,cl
64012724:	add    edi,0x8
64012727:	mov    DWORD PTR [esp+0x10],ebp
6401272b:	add    ebx,edx
6401272d:	cmp    edi,eax
6401272f:	jae    0x64012745
64012731:	movzx  edx,BYTE PTR [ebp+0x1]
64012735:	add    ebp,0x1
64012738:	mov    ecx,edi
6401273a:	shl    edx,cl
6401273c:	mov    DWORD PTR [esp+0x10],ebp
64012740:	add    ebx,edx
64012742:	add    edi,0x8
64012745:	mov    ecx,0x1
6401274a:	mov    edx,ecx
6401274c:	mov    ecx,eax
6401274e:	shl    edx,cl
64012750:	sub    edi,eax
64012752:	sub    edx,0x1
64012755:	and    edx,ebx
64012757:	mov    ecx,edx
64012759:	mov    edx,DWORD PTR [esp+0x1c]
6401275d:	add    edx,ecx
6401275f:	mov    ecx,eax
64012761:	mov    eax,esi
64012763:	sub    eax,DWORD PTR [esp+0x38]
64012767:	shr    ebx,cl
64012769:	cmp    edx,eax
6401276b:	mov    DWORD PTR [esp+0x1c],edx
6401276f:	jbe    0x640128c4
64012775:	mov    ebp,edx
64012777:	sub    ebp,eax
64012779:	cmp    ebp,DWORD PTR [esp+0x3c]
6401277d:	ja     0x64012922
64012783:	mov    ecx,DWORD PTR [esp+0x40]
64012787:	mov    eax,DWORD PTR [esp+0x44]
6401278b:	add    ecx,0xffffffff
6401278e:	test   eax,eax
64012790:	mov    DWORD PTR [esp+0x34],ecx
64012794:	jne    0x640127c2
64012796:	mov    eax,DWORD PTR [esp+0x28]
6401279a:	sub    eax,ebp
6401279c:	add    ecx,eax
6401279e:	cmp    ebp,DWORD PTR [esp+0x54]
640127a2:	jae    0x6401283a
640127a8:	sub    DWORD PTR [esp+0x54],ebp
640127ac:	lea    esp,[esp+0x0]
640127b0:	mov    al,BYTE PTR [ecx+0x1]
640127b3:	add    ecx,0x1
640127b6:	add    esi,0x1
640127b9:	sub    ebp,0x1
640127bc:	mov    BYTE PTR [esi],al
640127be:	jne    0x640127b0
640127c0:	jmp    0x64012836
640127c2:	cmp    eax,ebp
640127c4:	jae    0x64012818
640127c6:	mov    edx,eax
640127c8:	sub    edx,ebp
640127ca:	add    edx,DWORD PTR [esp+0x28]
640127ce:	sub    ebp,eax
640127d0:	add    ecx,edx
640127d2:	cmp    ebp,DWORD PTR [esp+0x54]
640127d6:	jae    0x6401283a
640127d8:	sub    DWORD PTR [esp+0x54],ebp
640127dc:	lea    esp,[esp+0x0]
640127e0:	mov    dl,BYTE PTR [ecx+0x1]
640127e3:	add    ecx,0x1
640127e6:	add    esi,0x1
640127e9:	sub    ebp,0x1
640127ec:	mov    BYTE PTR [esi],dl
640127ee:	jne    0x640127e0
640127f0:	cmp    eax,DWORD PTR [esp+0x54]
640127f4:	mov    ecx,DWORD PTR [esp+0x34]
640127f8:	jae    0x6401283a
640127fa:	sub    DWORD PTR [esp+0x54],eax
640127fe:	mov    ebp,eax
64012800:	mov    al,BYTE PTR [ecx+0x1]
64012803:	add    ecx,0x1
64012806:	add    esi,0x1
64012809:	sub    ebp,0x1
6401280c:	mov    BYTE PTR [esi],al
6401280e:	jne    0x64012800
64012810:	mov    ecx,esi
64012812:	sub    ecx,DWORD PTR [esp+0x1c]
64012816:	jmp    0x6401283a
64012818:	sub    eax,ebp
6401281a:	add    ecx,eax
6401281c:	cmp    ebp,DWORD PTR [esp+0x54]
64012820:	jae    0x6401283a
64012822:	sub    DWORD PTR [esp+0x54],ebp
64012826:	mov    al,BYTE PTR [ecx+0x1]
64012829:	add    ecx,0x1
6401282c:	add    esi,0x1
6401282f:	sub    ebp,0x1
64012832:	mov    BYTE PTR [esi],al
64012834:	jne    0x64012826
64012836:	mov    ecx,esi
64012838:	sub    ecx,edx
6401283a:	mov    eax,DWORD PTR [esp+0x54]
6401283e:	cmp    eax,0x2
64012841:	jbe    0x64012881
64012843:	lea    edx,[eax-0x3]
64012846:	mov    eax,0xaaaaaaab
6401284b:	mul    edx
6401284d:	mov    ebp,edx
6401284f:	shr    ebp,1
64012851:	add    ebp,0x1
64012854:	movzx  eax,BYTE PTR [ecx+0x1]
64012858:	sub    DWORD PTR [esp+0x54],0x3
6401285d:	add    ecx,0x1
64012860:	add    esi,0x1
64012863:	mov    BYTE PTR [esi],al
64012865:	mov    dl,BYTE PTR [ecx+0x1]
64012868:	add    ecx,0x1
6401286b:	add    esi,0x1
6401286e:	mov    BYTE PTR [esi],dl
64012870:	movzx  eax,BYTE PTR [ecx+0x1]
64012874:	add    ecx,0x1
64012877:	add    esi,0x1
6401287a:	sub    ebp,0x1
6401287d:	mov    BYTE PTR [esi],al
6401287f:	jne    0x64012854
64012881:	mov    ebp,DWORD PTR [esp+0x54]
64012885:	test   ebp,ebp
64012887:	je     0x640128a1
64012889:	mov    dl,BYTE PTR [ecx+0x1]
6401288c:	add    ecx,0x1
6401288f:	add    esi,0x1
64012892:	cmp    ebp,0x1
64012895:	mov    BYTE PTR [esi],dl
64012897:	jbe    0x640128a1
64012899:	mov    al,BYTE PTR [ecx+0x1]
6401289c:	add    esi,0x1
6401289f:	mov    BYTE PTR [esi],al
640128a1:	mov    ebp,DWORD PTR [esp+0x10]
640128a5:	mov    edx,DWORD PTR [esp+0x14]
640128a9:	cmp    ebp,edx
640128ab:	jae    0x64012974
640128b1:	cmp    esi,DWORD PTR [esp+0x2c]
640128b5:	jae    0x64012974
640128bb:	mov    edx,DWORD PTR [esp+0x48]
640128bf:	jmp    0x640125b0
640128c4:	mov    eax,esi
640128c6:	sub    eax,edx
640128c8:	jmp    0x640128d0
640128ca:	lea    ebx,[ebx+0x0]
640128d0:	movzx  ecx,BYTE PTR [eax+0x1]
640128d4:	add    eax,0x1
640128d7:	mov    BYTE PTR [esi+0x1],cl
640128da:	mov    dl,BYTE PTR [eax+0x1]
640128dd:	add    esi,0x1
640128e0:	add    eax,0x1
640128e3:	add    esi,0x1
640128e6:	mov    BYTE PTR [esi],dl
640128e8:	movzx  ecx,BYTE PTR [eax+0x1]
640128ec:	add    eax,0x1
640128ef:	add    esi,0x1
640128f2:	mov    BYTE PTR [esi],cl
640128f4:	mov    ecx,DWORD PTR [esp+0x54]
640128f8:	sub    ecx,0x3
640128fb:	cmp    ecx,0x2
640128fe:	mov    DWORD PTR [esp+0x54],ecx
64012902:	ja     0x640128d0
64012904:	test   ecx,ecx
64012906:	je     0x640128a5
64012908:	mov    dl,BYTE PTR [eax+0x1]
6401290b:	add    eax,0x1
6401290e:	add    esi,0x1
64012911:	cmp    ecx,0x1
64012914:	mov    BYTE PTR [esi],dl
64012916:	jbe    0x640128a5
64012918:	mov    al,BYTE PTR [eax+0x1]
6401291b:	add    esi,0x1
6401291e:	mov    BYTE PTR [esi],al
64012920:	jmp    0x640128a5
64012922:	mov    ecx,DWORD PTR [esp+0x50]
64012926:	mov    edx,DWORD PTR [esp+0x18]
6401292a:	mov    ebp,DWORD PTR [esp+0x10]
6401292e:	mov    DWORD PTR [ecx+0x18],0x64024da0
64012935:	mov    DWORD PTR [edx],0x1b
6401293b:	jmp    0x64012970
6401293d:	mov    eax,DWORD PTR [esp+0x50]
64012941:	mov    DWORD PTR [eax+0x18],0x64024dc0
64012948:	jmp    0x64012966
6401294a:	test   dl,0x20
6401294d:	je     0x6401295b
6401294f:	mov    edx,DWORD PTR [esp+0x18]
64012953:	mov    DWORD PTR [edx],0xb
64012959:	jmp    0x64012970
6401295b:	mov    eax,DWORD PTR [esp+0x50]
6401295f:	mov    DWORD PTR [eax+0x18],0x64024dd8
64012966:	mov    ecx,DWORD PTR [esp+0x18]
6401296a:	mov    DWORD PTR [ecx],0x1b
64012970:	mov    edx,DWORD PTR [esp+0x14]
64012974:	mov    eax,edi
64012976:	shr    eax,0x3
64012979:	sub    ebp,eax
6401297b:	add    eax,eax
6401297d:	add    eax,eax
6401297f:	add    eax,eax
64012981:	sub    edi,eax
64012983:	mov    ecx,edi
64012985:	mov    eax,0x1
6401298a:	shl    eax,cl
6401298c:	mov    ecx,DWORD PTR [esp+0x50]
64012990:	sub    edx,ebp
64012992:	add    edx,0x5
64012995:	sub    eax,0x1
64012998:	and    ebx,eax
6401299a:	lea    eax,[ebp+0x1]
6401299d:	mov    DWORD PTR [ecx],eax
6401299f:	lea    eax,[esi+0x1]
640129a2:	mov    DWORD PTR [ecx+0xc],eax
640129a5:	mov    eax,DWORD PTR [esp+0x2c]
640129a9:	sub    eax,esi
640129ab:	add    eax,0x101
640129b0:	mov    DWORD PTR [ecx+0x10],eax
640129b3:	mov    eax,DWORD PTR [esp+0x18]
640129b7:	mov    DWORD PTR [ecx+0x4],edx
640129ba:	mov    DWORD PTR [eax+0x3c],edi
640129bd:	pop    edi
640129be:	pop    esi
640129bf:	pop    ebp
640129c0:	mov    DWORD PTR [eax+0x38],ebx
640129c3:	pop    ebx
640129c4:	add    esp,0x3c
640129c7:	ret    
640129c8:	int3   
640129c9:	int3   
640129ca:	int3   
640129cb:	int3   
640129cc:	int3   
640129cd:	int3   
640129ce:	int3   
640129cf:	int3   
640129d0:	sub    esp,0x8c
640129d6:	mov    eax,ds:0x64037644
640129db:	xor    eax,esp
640129dd:	mov    DWORD PTR [esp+0x88],eax
640129e4:	mov    eax,DWORD PTR [esp+0xa4]
640129eb:	mov    edx,DWORD PTR [esp+0xa0]
640129f2:	push   ebx
640129f3:	mov    ebx,DWORD PTR [esp+0xa0]
640129fa:	push   ebp
640129fb:	mov    ebp,DWORD PTR [esp+0x9c]
64012a02:	push   esi
64012a03:	mov    esi,DWORD PTR [esp+0xa4]
64012a0a:	mov    DWORD PTR [esp+0x18],eax
64012a0e:	xor    eax,eax
64012a10:	test   esi,esi
64012a12:	mov    DWORD PTR [esp+0x50],ebp
64012a16:	mov    DWORD PTR [esp+0x38],ebx
64012a1a:	mov    DWORD PTR [esp+0x48],edx
64012a1e:	mov    DWORD PTR [esp+0x54],eax
64012a22:	mov    DWORD PTR [esp+0x58],eax
64012a26:	mov    DWORD PTR [esp+0x5c],eax
64012a2a:	mov    DWORD PTR [esp+0x60],eax
64012a2e:	mov    DWORD PTR [esp+0x64],eax
64012a32:	mov    DWORD PTR [esp+0x68],eax
64012a36:	mov    DWORD PTR [esp+0x6c],eax
64012a3a:	mov    DWORD PTR [esp+0x70],eax
64012a3e:	jbe    0x64012a56
64012a40:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
64012a45:	add    WORD PTR [esp+ecx*2+0x54],0x1
64012a4b:	lea    ecx,[esp+ecx*2+0x54]
64012a4f:	add    eax,0x1
64012a52:	cmp    eax,esi
64012a54:	jb     0x64012a40
64012a56:	mov    eax,DWORD PTR [edx]
64012a58:	mov    DWORD PTR [esp+0x10],eax
64012a5c:	mov    ecx,0xf
64012a61:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
64012a67:	jne    0x64012a71
64012a69:	sub    ecx,0x1
64012a6c:	cmp    ecx,0x1
64012a6f:	jae    0x64012a61
64012a71:	cmp    eax,ecx
64012a73:	mov    DWORD PTR [esp+0x1c],ecx
64012a77:	jbe    0x64012a7f
64012a79:	mov    DWORD PTR [esp+0x10],ecx
64012a7d:	mov    eax,ecx
64012a7f:	test   ecx,ecx
64012a81:	jne    0x64012ac4
64012a83:	mov    WORD PTR [esp+0xe],cx
64012a88:	mov    ecx,DWORD PTR [ebx]
64012a8a:	mov    BYTE PTR [esp+0xc],0x40
64012a8f:	mov    BYTE PTR [esp+0xd],0x1
64012a94:	mov    eax,DWORD PTR [esp+0xc]
64012a98:	mov    DWORD PTR [ecx],eax
64012a9a:	add    DWORD PTR [ebx],0x4
64012a9d:	mov    ecx,DWORD PTR [ebx]
64012a9f:	pop    esi
64012aa0:	mov    DWORD PTR [ecx],eax
64012aa2:	add    DWORD PTR [ebx],0x4
64012aa5:	pop    ebp
64012aa6:	mov    DWORD PTR [edx],0x1
64012aac:	xor    eax,eax
64012aae:	pop    ebx
64012aaf:	mov    ecx,DWORD PTR [esp+0x88]
64012ab6:	xor    ecx,esp
64012ab8:	call   0x64013cc6
64012abd:	add    esp,0x8c
64012ac3:	ret    
64012ac4:	mov    esi,0x1
64012ac9:	lea    esp,[esp+0x0]
64012ad0:	cmp    WORD PTR [esp+esi*2+0x54],0x0
64012ad6:	jne    0x64012b14
64012ad8:	cmp    WORD PTR [esp+esi*2+0x56],0x0
64012ade:	jne    0x64012b02
64012ae0:	cmp    WORD PTR [esp+esi*2+0x58],0x0
64012ae6:	jne    0x64012b07
64012ae8:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
64012aee:	jne    0x64012b0c
64012af0:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
64012af6:	jne    0x64012b11
64012af8:	add    esi,0x5
64012afb:	cmp    esi,0xf
64012afe:	jbe    0x64012ad0
64012b00:	jmp    0x64012b14
64012b02:	add    esi,0x1
64012b05:	jmp    0x64012b14
64012b07:	add    esi,0x2
64012b0a:	jmp    0x64012b14
64012b0c:	add    esi,0x3
64012b0f:	jmp    0x64012b14
64012b11:	add    esi,0x4
64012b14:	cmp    eax,esi
64012b16:	jae    0x64012b1c
64012b18:	mov    DWORD PTR [esp+0x10],esi
64012b1c:	mov    edx,0x1
64012b21:	mov    eax,edx
64012b23:	push   edi
64012b24:	movzx  edi,WORD PTR [esp+eax*2+0x58]
64012b29:	add    edx,edx
64012b2b:	sub    edx,edi
64012b2d:	js     0x64012b4b
64012b2f:	add    eax,0x1
64012b32:	cmp    eax,0xf
64012b35:	jbe    0x64012b24
64012b37:	test   edx,edx
64012b39:	mov    edi,DWORD PTR [esp+0xa0]
64012b40:	jle    0x64012b53
64012b42:	test   edi,edi
64012b44:	je     0x64012b4b
64012b46:	cmp    ecx,0x1
64012b49:	je     0x64012b53
64012b4b:	or     eax,0xffffffff
64012b4e:	jmp    0x64012ea5
64012b53:	mov    WORD PTR [esp+0x7a],0x0
64012b5a:	mov    eax,0x2
64012b5f:	nop
64012b60:	mov    cx,WORD PTR [esp+eax*1+0x78]
64012b65:	add    cx,WORD PTR [esp+eax*1+0x58]
64012b6a:	add    eax,0x2
64012b6d:	cmp    eax,0x1e
64012b70:	mov    WORD PTR [esp+eax*1+0x78],cx
64012b75:	jb     0x64012b60
64012b77:	mov    ecx,DWORD PTR [esp+0x1c]
64012b7b:	xor    eax,eax
64012b7d:	cmp    DWORD PTR [esp+0xa8],eax
64012b84:	jbe    0x64012bb7
64012b86:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
64012b8c:	je     0x64012bab
64012b8e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012b93:	movzx  edx,WORD PTR [esp+edx*2+0x78]
64012b98:	mov    WORD PTR [ecx+edx*2],ax
64012b9c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012ba1:	add    WORD PTR [esp+edx*2+0x78],0x1
64012ba7:	lea    edx,[esp+edx*2+0x78]
64012bab:	add    eax,0x1
64012bae:	cmp    eax,DWORD PTR [esp+0xa8]
64012bb5:	jb     0x64012b86
64012bb7:	mov    eax,edi
64012bb9:	sub    eax,0x0
64012bbc:	mov    edx,0xffffffff
64012bc1:	je     0x64012c04
64012bc3:	sub    eax,0x1
64012bc6:	je     0x64012bde
64012bc8:	mov    DWORD PTR [esp+0x2c],0x64027ac0
64012bd0:	mov    DWORD PTR [esp+0x38],0x64027b00
64012bd8:	mov    DWORD PTR [esp+0x30],edx
64012bdc:	jmp    0x64012c14
64012bde:	mov    eax,0x64027a40
64012be3:	sub    eax,0x202
64012be8:	mov    DWORD PTR [esp+0x2c],eax
64012bec:	mov    eax,0x64027a80
64012bf1:	sub    eax,0x202
64012bf6:	mov    DWORD PTR [esp+0x38],eax
64012bfa:	mov    DWORD PTR [esp+0x30],0x100
64012c02:	jmp    0x64012c14
64012c04:	mov    DWORD PTR [esp+0x38],ecx
64012c08:	mov    DWORD PTR [esp+0x2c],ecx
64012c0c:	mov    DWORD PTR [esp+0x30],0x13
64012c14:	mov    eax,DWORD PTR [ebx]
64012c16:	mov    ecx,DWORD PTR [esp+0x14]
64012c1a:	mov    DWORD PTR [esp+0x24],eax
64012c1e:	mov    eax,0x1
64012c23:	shl    eax,cl
64012c25:	xor    ebp,ebp
64012c27:	xor    ebx,ebx
64012c29:	cmp    edi,0x1
64012c2c:	lea    ecx,[eax-0x1]
64012c2f:	mov    DWORD PTR [esp+0x18],esi
64012c33:	mov    DWORD PTR [esp+0x34],edx
64012c37:	mov    DWORD PTR [esp+0x44],eax
64012c3b:	mov    DWORD PTR [esp+0x28],eax
64012c3f:	mov    DWORD PTR [esp+0x40],ecx
64012c43:	jne    0x64012c50
64012c45:	cmp    eax,0x5b0
64012c4a:	jae    0x64012ea0
64012c50:	mov    edx,DWORD PTR [esp+0x1c]
64012c54:	mov    DWORD PTR [esp+0x1c],edx
64012c58:	jmp    0x64012c60
64012c5a:	lea    ebx,[ebx+0x0]
64012c60:	mov    al,BYTE PTR [esp+0x18]
64012c64:	mov    esi,DWORD PTR [esp+0x1c]
64012c68:	mov    edx,DWORD PTR [esp+0x30]
64012c6c:	sub    al,bl
64012c6e:	mov    BYTE PTR [esp+0x11],al
64012c72:	movzx  eax,WORD PTR [esi]
64012c75:	movzx  ecx,ax
64012c78:	cmp    ecx,edx
64012c7a:	jge    0x64012c88
64012c7c:	mov    BYTE PTR [esp+0x10],0x0
64012c81:	mov    WORD PTR [esp+0x12],ax
64012c86:	jmp    0x64012cb5
64012c88:	jle    0x64012ca9
64012c8a:	movzx  eax,WORD PTR [esi]
64012c8d:	mov    ecx,DWORD PTR [esp+0x38]
64012c91:	add    eax,eax
64012c93:	mov    dl,BYTE PTR [eax+ecx*1]
64012c96:	mov    ecx,DWORD PTR [esp+0x2c]
64012c9a:	mov    BYTE PTR [esp+0x10],dl
64012c9e:	mov    dx,WORD PTR [eax+ecx*1]
64012ca2:	mov    WORD PTR [esp+0x12],dx
64012ca7:	jmp    0x64012cb5
64012ca9:	mov    BYTE PTR [esp+0x10],0x60
64012cae:	mov    WORD PTR [esp+0x12],0x0
64012cb5:	mov    ecx,DWORD PTR [esp+0x18]
64012cb9:	mov    eax,DWORD PTR [esp+0x44]
64012cbd:	sub    ecx,ebx
64012cbf:	mov    edx,0x1
64012cc4:	shl    edx,cl
64012cc6:	mov    ecx,ebx
64012cc8:	mov    edi,ebp
64012cca:	shr    edi,cl
64012ccc:	mov    ecx,DWORD PTR [esp+0x24]
64012cd0:	mov    DWORD PTR [esp+0x50],eax
64012cd4:	lea    esi,[edx*4+0x0]
64012cdb:	add    edi,eax
64012cdd:	lea    ecx,[ecx+edi*4]
64012ce0:	mov    edi,DWORD PTR [esp+0x10]
64012ce4:	sub    eax,edx
64012ce6:	sub    ecx,esi
64012ce8:	test   eax,eax
64012cea:	mov    DWORD PTR [ecx],edi
64012cec:	jne    0x64012ce4
64012cee:	mov    edx,DWORD PTR [esp+0x18]
64012cf2:	lea    ecx,[edx-0x1]
64012cf5:	mov    eax,0x1
64012cfa:	shl    eax,cl
64012cfc:	test   ebp,eax
64012cfe:	je     0x64012d06
64012d00:	shr    eax,1
64012d02:	test   ebp,eax
64012d04:	jne    0x64012d00
64012d06:	test   eax,eax
64012d08:	je     0x64012d15
64012d0a:	lea    ecx,[eax-0x1]
64012d0d:	and    ecx,ebp
64012d0f:	add    ecx,eax
64012d11:	mov    ebp,ecx
64012d13:	jmp    0x64012d17
64012d15:	xor    ebp,ebp
64012d17:	add    WORD PTR [esp+edx*2+0x58],0xffff
64012d1e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
64012d23:	add    DWORD PTR [esp+0x1c],0x2
64012d28:	test   ax,ax
64012d2b:	jne    0x64012d4a
64012d2d:	cmp    edx,DWORD PTR [esp+0x20]
64012d31:	je     0x64012e13
64012d37:	mov    edx,DWORD PTR [esp+0x1c]
64012d3b:	movzx  eax,WORD PTR [edx]
64012d3e:	mov    ecx,DWORD PTR [esp+0x54]
64012d42:	movzx  edx,WORD PTR [ecx+eax*2]
64012d46:	mov    DWORD PTR [esp+0x18],edx
64012d4a:	cmp    edx,DWORD PTR [esp+0x14]
64012d4e:	jbe    0x64012c60
64012d54:	mov    esi,DWORD PTR [esp+0x40]
64012d58:	and    esi,ebp
64012d5a:	cmp    esi,DWORD PTR [esp+0x34]
64012d5e:	mov    DWORD PTR [esp+0x48],esi
64012d62:	je     0x64012c60
64012d68:	test   ebx,ebx
64012d6a:	jne    0x64012d70
64012d6c:	mov    ebx,DWORD PTR [esp+0x14]
64012d70:	mov    eax,DWORD PTR [esp+0x24]
64012d74:	mov    ecx,DWORD PTR [esp+0x50]
64012d78:	lea    edx,[eax+ecx*4]
64012d7b:	mov    ecx,DWORD PTR [esp+0x18]
64012d7f:	sub    ecx,ebx
64012d81:	mov    DWORD PTR [esp+0x24],edx
64012d85:	mov    eax,0x1
64012d8a:	lea    edx,[ebx+ecx*1]
64012d8d:	shl    eax,cl
64012d8f:	cmp    edx,DWORD PTR [esp+0x20]
64012d93:	jae    0x64012dbe
64012d95:	lea    esi,[esp+edx*2+0x58]
64012d99:	lea    esp,[esp+0x0]
64012da0:	movzx  edi,WORD PTR [esi]
64012da3:	sub    eax,edi
64012da5:	test   eax,eax
64012da7:	jle    0x64012dba
64012da9:	add    edx,0x1
64012dac:	add    ecx,0x1
64012daf:	add    esi,0x2
64012db2:	add    eax,eax
64012db4:	cmp    edx,DWORD PTR [esp+0x20]
64012db8:	jb     0x64012da0
64012dba:	mov    esi,DWORD PTR [esp+0x48]
64012dbe:	mov    eax,0x1
64012dc3:	shl    eax,cl
64012dc5:	add    DWORD PTR [esp+0x28],eax
64012dc9:	cmp    DWORD PTR [esp+0xa0],0x1
64012dd1:	mov    DWORD PTR [esp+0x44],eax
64012dd5:	jne    0x64012de5
64012dd7:	cmp    DWORD PTR [esp+0x28],0x5b0
64012ddf:	jae    0x64012ea0
64012de5:	mov    edx,esi
64012de7:	mov    esi,DWORD PTR [esp+0x3c]
64012deb:	mov    eax,DWORD PTR [esi]
64012ded:	mov    BYTE PTR [eax+edx*4],cl
64012df0:	mov    ecx,DWORD PTR [esi]
64012df2:	mov    al,BYTE PTR [esp+0x14]
64012df6:	mov    BYTE PTR [ecx+edx*4+0x1],al
64012dfa:	mov    eax,DWORD PTR [esi]
64012dfc:	mov    ecx,DWORD PTR [esp+0x24]
64012e00:	sub    ecx,eax
64012e02:	sar    ecx,0x2
64012e05:	mov    DWORD PTR [esp+0x34],edx
64012e09:	mov    WORD PTR [eax+edx*4+0x2],cx
64012e0e:	jmp    0x64012c60
64012e13:	mov    edi,DWORD PTR [esp+0x3c]
64012e17:	mov    al,dl
64012e19:	sub    al,bl
64012e1b:	test   ebp,ebp
64012e1d:	mov    BYTE PTR [esp+0x10],0x40
64012e22:	mov    BYTE PTR [esp+0x11],al
64012e26:	mov    WORD PTR [esp+0x12],0x0
64012e2d:	je     0x64012e85
64012e2f:	mov    esi,DWORD PTR [esp+0x24]
64012e33:	test   ebx,ebx
64012e35:	je     0x64012e55
64012e37:	mov    ecx,DWORD PTR [esp+0x40]
64012e3b:	and    ecx,ebp
64012e3d:	cmp    ecx,DWORD PTR [esp+0x34]
64012e41:	je     0x64012e55
64012e43:	mov    eax,DWORD PTR [esp+0x14]
64012e47:	mov    esi,DWORD PTR [edi]
64012e49:	xor    ebx,ebx
64012e4b:	mov    DWORD PTR [esp+0x18],eax
64012e4f:	mov    BYTE PTR [esp+0x11],al
64012e53:	mov    edx,eax
64012e55:	mov    ecx,ebx
64012e57:	mov    eax,ebp
64012e59:	shr    eax,cl
64012e5b:	mov    ecx,DWORD PTR [esp+0x10]
64012e5f:	mov    DWORD PTR [esi+eax*4],ecx
64012e62:	lea    ecx,[edx-0x1]
64012e65:	mov    eax,0x1
64012e6a:	shl    eax,cl
64012e6c:	test   ebp,eax
64012e6e:	je     0x64012e76
64012e70:	shr    eax,1
64012e72:	test   ebp,eax
64012e74:	jne    0x64012e70
64012e76:	test   eax,eax
64012e78:	je     0x64012e85
64012e7a:	lea    ecx,[eax-0x1]
64012e7d:	and    ecx,ebp
64012e7f:	add    ecx,eax
64012e81:	mov    ebp,ecx
64012e83:	jne    0x64012e33
64012e85:	mov    edx,DWORD PTR [esp+0x28]
64012e89:	mov    ecx,DWORD PTR [esp+0x4c]
64012e8d:	lea    eax,[edx*4+0x0]
64012e94:	add    DWORD PTR [edi],eax
64012e96:	mov    edx,DWORD PTR [esp+0x14]
64012e9a:	mov    DWORD PTR [ecx],edx
64012e9c:	xor    eax,eax
64012e9e:	jmp    0x64012ea5
64012ea0:	mov    eax,0x1
64012ea5:	mov    ecx,DWORD PTR [esp+0x98]
64012eac:	pop    edi
64012ead:	pop    esi
64012eae:	pop    ebp
64012eaf:	pop    ebx
64012eb0:	xor    ecx,esp
64012eb2:	call   0x64013cc6
64012eb7:	add    esp,0x8c
64012ebd:	ret    
64012ebe:	jmp    DWORD PTR ds:0x6402407c
64012ec4:	jmp    DWORD PTR ds:0x64024080
64012eca:	jmp    DWORD PTR ds:0x64024084
64012ed0:	jmp    DWORD PTR ds:0x640240b0
64012ed6:	jmp    DWORD PTR ds:0x640240ec
64012edc:	push   0x44
64012ede:	mov    eax,0x64022eb5
64012ee3:	call   0x6401559b
64012ee8:	push   0x64027b40
64012eed:	lea    ecx,[ebp-0x28]
64012ef0:	call   0x640028f0
64012ef5:	and    DWORD PTR [ebp-0x4],0x0
64012ef9:	lea    eax,[ebp-0x28]
64012efc:	push   eax
64012efd:	lea    ecx,[ebp-0x50]
64012f00:	call   0x64001310
64012f05:	push   0x6402bd24
64012f0a:	lea    eax,[ebp-0x50]
64012f0d:	push   eax
64012f0e:	mov    DWORD PTR [ebp-0x50],0x640242e0
64012f15:	call   0x64013832
64012f1a:	int3   
64012f1b:	push   0x44
64012f1d:	mov    eax,0x64022ed8
64012f22:	call   0x6401559b
64012f27:	push   0x64027b50
64012f2c:	lea    ecx,[ebp-0x28]
64012f2f:	call   0x640028f0
64012f34:	and    DWORD PTR [ebp-0x4],0x0
64012f38:	lea    eax,[ebp-0x28]
64012f3b:	push   eax
64012f3c:	lea    ecx,[ebp-0x50]
64012f3f:	call   0x64001310
64012f44:	push   0x6402bce8
64012f49:	lea    eax,[ebp-0x50]
64012f4c:	push   eax
64012f4d:	mov    DWORD PTR [ebp-0x50],0x640242ec
64012f54:	call   0x64013832
64012f59:	int3   
64012f5a:	jmp    0x64013895
64012f5f:	push   edi
64012f60:	push   0x640375b4
64012f65:	mov    edi,ecx
64012f67:	call   DWORD PTR ds:0x6402402c
64012f6d:	test   eax,eax
64012f6f:	jne    0x64012f8a
64012f71:	push   esi
64012f72:	mov    esi,0x64038d40
64012f77:	push   esi
64012f78:	call   0x6401300f
64012f7d:	add    esi,0x18
64012f80:	cmp    esi,0x64038da0
64012f86:	pop    ecx
64012f87:	jl     0x64012f77
64012f89:	pop    esi
64012f8a:	mov    eax,edi
64012f8c:	pop    edi
64012f8d:	ret    
64012f8e:	push   0x640375b4
64012f93:	call   DWORD PTR ds:0x64024078
64012f99:	test   eax,eax
64012f9b:	jge    0x64012fb6
64012f9d:	push   esi
64012f9e:	mov    esi,0x64038d40
64012fa3:	push   esi
64012fa4:	call   0x6401301a
64012fa9:	add    esi,0x18
64012fac:	cmp    esi,0x64038da0
64012fb2:	pop    ecx
64012fb3:	jl     0x64012fa3
64012fb5:	pop    esi
64012fb6:	ret    
64012fb7:	mov    eax,DWORD PTR [esp+0x4]
64012fbb:	and    eax,0x3
64012fbe:	push   esi
64012fbf:	mov    esi,ecx
64012fc1:	mov    DWORD PTR [esi],eax
64012fc3:	imul   eax,eax,0x18
64012fc6:	add    eax,0x64038d40
64012fcb:	push   eax
64012fcc:	call   0x64013025
64012fd1:	pop    ecx
64012fd2:	mov    eax,esi
64012fd4:	pop    esi
64012fd5:	ret    0x4
64012fd8:	mov    eax,DWORD PTR [ecx]
64012fda:	imul   eax,eax,0x18
64012fdd:	add    eax,0x64038d40
64012fe2:	push   eax
64012fe3:	call   0x64013030
64012fe8:	pop    ecx
64012fe9:	ret    
64012fea:	jmp    0x64013004
64012fec:	mov    ecx,DWORD PTR [eax*4+0x64038dc4]
64012ff3:	inc    eax
64012ff4:	test   ecx,ecx
64012ff6:	mov    ds:0x640375bc,eax
64012ffb:	je     0x64013009
64012ffd:	call   DWORD PTR [eax*4+0x64038dc0]
64013004:	mov    eax,ds:0x640375bc
64013009:	cmp    eax,0xa
6401300c:	jb     0x64012fec
6401300e:	ret    
6401300f:	push   DWORD PTR [esp+0x4]
64013013:	call   DWORD PTR ds:0x64024158
64013019:	ret    
6401301a:	push   DWORD PTR [esp+0x4]
6401301e:	call   DWORD PTR ds:0x6402415c
64013024:	ret    
64013025:	push   DWORD PTR [esp+0x4]
64013029:	call   DWORD PTR ds:0x64024160
6401302f:	ret    
64013030:	push   DWORD PTR [esp+0x4]
64013034:	call   DWORD PTR ds:0x64024164
6401303a:	ret    
6401303b:	push   ebp
6401303c:	mov    ebp,esp
6401303e:	sub    esp,0xc
64013041:	mov    eax,ds:0x64037644
64013046:	xor    eax,ebp
64013048:	mov    DWORD PTR [ebp-0x4],eax
6401304b:	push   esi
6401304c:	xor    esi,esi
6401304e:	call   DWORD PTR ds:0x64024170
64013054:	push   0x7
64013056:	lea    ecx,[ebp-0xc]
64013059:	push   ecx
6401305a:	push   0x1004
6401305f:	push   eax
64013060:	call   DWORD PTR ds:0x6402416c
64013066:	test   eax,eax
64013068:	je     0x64013089
6401306a:	mov    cl,BYTE PTR [ebp-0xc]
6401306d:	test   cl,cl
6401306f:	lea    eax,[ebp-0xc]
64013072:	je     0x64013089
64013074:	imul   esi,esi,0xa
64013077:	movsx  ecx,cl
6401307a:	inc    eax
6401307b:	lea    esi,[esi+ecx*1-0x30]
6401307f:	mov    cl,BYTE PTR [eax]
64013081:	test   cl,cl
64013083:	jne    0x64013074
64013085:	test   esi,esi
64013087:	jne    0x64013091
64013089:	call   DWORD PTR ds:0x64024168
6401308f:	mov    esi,eax
64013091:	mov    ecx,DWORD PTR [ebp-0x4]
64013094:	mov    eax,esi
64013096:	xor    ecx,ebp
64013098:	pop    esi
64013099:	call   0x64013cc6
6401309e:	leave  
6401309f:	ret    
640130a0:	push   0x3
640130a2:	pop    eax
640130a3:	ret    
640130a4:	push   ebp
640130a5:	mov    ebp,esp
640130a7:	sub    esp,0x98
640130ad:	mov    eax,ds:0x64037644
640130b2:	xor    eax,ebp
640130b4:	mov    DWORD PTR [ebp-0x4],eax
640130b7:	lea    eax,[ebp-0x98]
640130bd:	push   eax
640130be:	mov    DWORD PTR [ebp-0x98],0x94
640130c8:	call   DWORD PTR ds:0x64024174
640130ce:	cmp    DWORD PTR [ebp-0x88],0x2
640130d5:	jne    0x640130e5
640130d7:	cmp    DWORD PTR [ebp-0x94],0x5
640130de:	mov    eax,0x640130a0
640130e3:	jae    0x640130ea
640130e5:	mov    eax,0x6401303b
640130ea:	push   eax
640130eb:	push   0x6403761c
640130f0:	call   DWORD PTR ds:0x64024154
640130f6:	call   DWORD PTR ds:0x6403761c
640130fc:	mov    ecx,DWORD PTR [ebp-0x4]
640130ff:	xor    ecx,ebp
64013101:	call   0x64013cc6
64013106:	leave  
64013107:	ret    
64013108:	push   esi
64013109:	mov    esi,ecx
6401310b:	mov    eax,DWORD PTR [esi]
6401310d:	test   eax,eax
6401310f:	je     0x6401311b
64013111:	push   eax
64013112:	call   0x6401477f
64013117:	and    DWORD PTR [esi],0x0
6401311a:	pop    ecx
6401311b:	and    DWORD PTR [esi+0x4],0x0
6401311f:	and    DWORD PTR [esi+0x8],0x0
64013123:	pop    esi
64013124:	ret    
64013125:	push   esi
64013126:	push   0x18
64013128:	mov    esi,ecx
6401312a:	push   0x0
6401312c:	push   esi
6401312d:	call   0x64015120
64013132:	add    esp,0xc
64013135:	mov    eax,esi
64013137:	pop    esi
64013138:	ret    
64013139:	push   0xc
6401313b:	push   0x6402b698
64013140:	call   0x64015ed4
64013145:	and    DWORD PTR [ebp-0x4],0x0
64013149:	push   ecx
6401314a:	call   DWORD PTR ds:0x64024158
64013150:	and    DWORD PTR [ebp-0x1c],0x0
64013154:	jmp    0x64013174
64013156:	mov    eax,DWORD PTR [ebp-0x14]
64013159:	mov    eax,DWORD PTR [eax]
6401315b:	mov    eax,DWORD PTR [eax]
6401315d:	xor    ecx,ecx
6401315f:	cmp    eax,0xc0000017
64013164:	sete   cl
64013167:	mov    eax,ecx
64013169:	ret    
6401316a:	mov    esp,DWORD PTR [ebp-0x18]
6401316d:	mov    DWORD PTR [ebp-0x1c],0x8007000e
64013174:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401317b:	mov    eax,DWORD PTR [ebp-0x1c]
6401317e:	call   0x64015f19
64013183:	ret    
64013184:	mov    eax,DWORD PTR [esp+0x4]
64013188:	test   eax,eax
6401318a:	jne    0x64013193
6401318c:	mov    eax,0x80070057
64013191:	jmp    0x640131a4
64013193:	cmp    DWORD PTR [eax],0x2c
64013196:	jne    0x6401318c
64013198:	and    DWORD PTR [eax+0x1c],0x0
6401319c:	lea    ecx,[eax+0x4]
6401319f:	call   0x64013139
640131a4:	ret    0x4
640131a7:	mov    eax,DWORD PTR [esp+0x4]
640131ab:	test   eax,eax
640131ad:	jl     0x640131bc
640131af:	cmp    eax,DWORD PTR [ecx+0x4]
640131b2:	jge    0x640131bc
640131b4:	mov    ecx,DWORD PTR [ecx]
640131b6:	lea    eax,[ecx+eax*2]
640131b9:	ret    0x4
640131bc:	push   0x0
640131be:	push   0x0
640131c0:	push   0x1
640131c2:	push   0xc000008c
640131c7:	call   DWORD PTR ds:0x64024178
640131cd:	int3   
640131ce:	mov    eax,DWORD PTR [esp+0x4]
640131d2:	test   eax,eax
640131d4:	jl     0x640131e3
640131d6:	cmp    eax,DWORD PTR [ecx+0x4]
640131d9:	jge    0x640131e3
640131db:	mov    ecx,DWORD PTR [ecx]
640131dd:	lea    eax,[ecx+eax*4]
640131e0:	ret    0x4
640131e3:	push   0x0
640131e5:	push   0x0
640131e7:	push   0x1
640131e9:	push   0xc000008c
640131ee:	call   DWORD PTR ds:0x64024178
640131f4:	int3   
640131f5:	push   esi
640131f6:	mov    esi,ecx
640131f8:	lea    ecx,[esi+0x4]
640131fb:	call   0x64013125
64013200:	xor    eax,eax
64013202:	mov    DWORD PTR [esi+0x20],eax
64013205:	mov    DWORD PTR [esi+0x24],eax
64013208:	mov    DWORD PTR [esi+0x28],eax
6401320b:	mov    eax,esi
6401320d:	pop    esi
6401320e:	ret    
6401320f:	push   esi
64013210:	mov    esi,DWORD PTR [esp+0x8]
64013214:	test   esi,esi
64013216:	jne    0x6401321f
64013218:	mov    eax,0x80070057
6401321d:	jmp    0x6401326b
6401321f:	mov    eax,DWORD PTR [esi]
64013221:	test   eax,eax
64013223:	je     0x64013269
64013225:	cmp    eax,0x2c
64013228:	jne    0x64013218
6401322a:	push   edi
6401322b:	xor    edi,edi
6401322d:	cmp    DWORD PTR [esi+0x24],edi
64013230:	jle    0x64013253
64013232:	push   ebx
64013233:	lea    ebx,[esi+0x20]
64013236:	push   edi
64013237:	mov    ecx,ebx
64013239:	call   0x640131a7
6401323e:	movzx  eax,WORD PTR [eax]
64013241:	push   DWORD PTR [esp+0x14]
64013245:	push   eax
64013246:	call   DWORD PTR ds:0x640241e4
6401324c:	inc    edi
6401324d:	cmp    edi,DWORD PTR [esi+0x24]
64013250:	jl     0x64013236
64013252:	pop    ebx
64013253:	lea    ecx,[esi+0x20]
64013256:	call   0x64013108
6401325b:	lea    eax,[esi+0x4]
6401325e:	push   eax
6401325f:	call   DWORD PTR ds:0x6402415c
64013265:	and    DWORD PTR [esi],0x0
64013268:	pop    edi
64013269:	xor    eax,eax
6401326b:	pop    esi
6401326c:	ret    0x8
6401326f:	push   esi
64013270:	mov    esi,ecx
64013272:	cmp    BYTE PTR [esi+0x4],0x0
64013276:	je     0x64013284
64013278:	push   DWORD PTR [esi]
6401327a:	call   DWORD PTR ds:0x64024164
64013280:	mov    BYTE PTR [esi+0x4],0x0
64013284:	pop    esi
64013285:	ret    
64013286:	push   esi
64013287:	mov    esi,ecx
64013289:	lea    ecx,[esi+0x18]
6401328c:	call   0x64013125
64013291:	xor    eax,eax
64013293:	mov    DWORD PTR [esi+0x30],eax
64013296:	mov    DWORD PTR [esi+0x34],eax
64013299:	mov    DWORD PTR [esi+0x38],eax
6401329c:	mov    eax,esi
6401329e:	pop    esi
6401329f:	ret    
640132a0:	push   esi
640132a1:	mov    esi,ecx
640132a3:	lea    eax,[esi+0x18]
640132a6:	push   eax
640132a7:	call   DWORD PTR ds:0x6402415c
640132ad:	lea    ecx,[esi+0x30]
640132b0:	pop    esi
640132b1:	jmp    0x64013108
640132b6:	push   ebp
640132b7:	mov    ebp,esp
640132b9:	push   ecx
640132ba:	push   ecx
640132bb:	push   esi
640132bc:	mov    esi,ecx
640132be:	lea    eax,[esi+0x18]
640132c1:	push   eax
640132c2:	mov    DWORD PTR [ebp-0x8],eax
640132c5:	call   DWORD PTR ds:0x64024160
640132cb:	mov    eax,DWORD PTR [esi+0x34]
640132ce:	mov    ecx,DWORD PTR [ebp+0x8]
640132d1:	cmp    ecx,eax
640132d3:	mov    BYTE PTR [ebp-0x4],0x1
640132d7:	jg     0x640132fd
640132d9:	test   ecx,ecx
640132db:	jl     0x640132fd
640132dd:	cmp    ecx,eax
640132df:	jne    0x640132f0
640132e1:	mov    esi,DWORD PTR [esi+0x8]
640132e4:	lea    ecx,[ebp-0x8]
640132e7:	call   0x6401326f
640132ec:	mov    eax,esi
640132ee:	jmp    0x64013307
640132f0:	push   ecx
640132f1:	lea    ecx,[esi+0x30]
640132f4:	call   0x640131ce
640132f9:	mov    esi,DWORD PTR [eax]
640132fb:	jmp    0x640132e4
640132fd:	lea    ecx,[ebp-0x8]
64013300:	call   0x6401326f
64013305:	xor    eax,eax
64013307:	pop    esi
64013308:	leave  
64013309:	ret    0x4
6401330c:	push   esi
6401330d:	mov    esi,ecx
6401330f:	call   0x640131f5
64013314:	push   esi
64013315:	mov    DWORD PTR [esi],0x2c
6401331b:	call   0x64013184
64013320:	test   eax,eax
64013322:	jge    0x6401332e
64013324:	mov    BYTE PTR ds:0x64039990,0x1
6401332b:	and    DWORD PTR [esi],0x0
6401332e:	mov    eax,esi
64013330:	pop    esi
64013331:	ret    
64013332:	push   ebp
64013333:	lea    ebp,[esp-0x78]
64013337:	sub    esp,0x98
6401333d:	mov    eax,ds:0x64037644
64013342:	xor    eax,ebp
64013344:	mov    DWORD PTR [ebp+0x74],eax
64013347:	push   esi
64013348:	mov    esi,ecx
6401334a:	call   0x64013286
6401334f:	mov    eax,0x64000000
64013354:	push   0x94
64013359:	mov    DWORD PTR [esi+0x8],eax
6401335c:	mov    DWORD PTR [esi+0x4],eax
6401335f:	lea    eax,[ebp-0x20]
64013362:	push   0x0
64013364:	push   eax
64013365:	mov    DWORD PTR [esi],0x3c
6401336b:	mov    BYTE PTR [esi+0xc],0x0
6401336f:	call   0x64015120
64013374:	add    esp,0xc
64013377:	lea    eax,[ebp-0x20]
6401337a:	push   eax
6401337b:	mov    DWORD PTR [ebp-0x20],0x94
64013382:	call   DWORD PTR ds:0x64024174
64013388:	cmp    DWORD PTR [ebp-0x10],0x2
6401338c:	jne    0x64013396
6401338e:	cmp    DWORD PTR [ebp-0x1c],0x5
64013392:	jb     0x640133ae
64013394:	jmp    0x640133aa
64013396:	cmp    DWORD PTR [ebp-0x10],0x1
6401339a:	jne    0x640133ae
6401339c:	cmp    DWORD PTR [ebp-0x1c],0x4
640133a0:	ja     0x640133aa
640133a2:	jne    0x640133ae
640133a4:	cmp    DWORD PTR [ebp-0x18],0x0
640133a8:	jbe    0x640133ae
640133aa:	mov    BYTE PTR [esi+0xc],0x1
640133ae:	lea    ecx,[esi+0x18]
640133b1:	mov    DWORD PTR [esi+0x10],0x800
640133b8:	mov    DWORD PTR [esi+0x14],0x64027b80
640133bf:	call   0x64013139
640133c4:	test   eax,eax
640133c6:	jge    0x640133cf
640133c8:	mov    BYTE PTR ds:0x64039990,0x1
640133cf:	mov    ecx,DWORD PTR [ebp+0x74]
640133d2:	mov    eax,esi
640133d4:	xor    ecx,ebp
640133d6:	pop    esi
640133d7:	call   0x64013cc6
640133dc:	add    ebp,0x78
640133df:	leave  
640133e0:	ret    
640133e1:	push   esi
640133e2:	push   DWORD PTR ds:0x64038df4
640133e8:	mov    esi,ecx
640133ea:	push   esi
640133eb:	call   0x6401320f
640133f0:	lea    ecx,[esi+0x20]
640133f3:	pop    esi
640133f4:	jmp    0x64013108
640133f9:	cmp    BYTE PTR [ecx+0x8],0x0
640133fd:	mov    DWORD PTR [ecx],0x64027b90
64013403:	je     0x64013413
64013405:	mov    ecx,DWORD PTR [ecx+0x4]
64013408:	test   ecx,ecx
6401340a:	je     0x64013413
6401340c:	push   ecx
6401340d:	call   DWORD PTR ds:0x6402417c
64013413:	ret    
64013414:	push   DWORD PTR [esp+0x4]
64013418:	push   0x0
6401341a:	push   DWORD PTR [ecx+0x4]
6401341d:	call   DWORD PTR ds:0x64024180
64013423:	ret    0x4
64013426:	cmp    DWORD PTR [esp+0x4],0x0
6401342b:	je     0x6401343c
6401342d:	push   DWORD PTR [esp+0x4]
64013431:	push   0x0
64013433:	push   DWORD PTR [ecx+0x4]
64013436:	call   DWORD PTR ds:0x64024184
6401343c:	ret    0x4
6401343f:	push   ebp
64013440:	mov    ebp,esp
64013442:	xor    eax,eax
64013444:	cmp    DWORD PTR [ebp+0x8],eax
64013447:	jne    0x64013452
64013449:	push   DWORD PTR [ebp+0xc]
6401344c:	mov    eax,DWORD PTR [ecx]
6401344e:	call   DWORD PTR [eax]
64013450:	jmp    0x64013473
64013452:	cmp    DWORD PTR [ebp+0xc],eax
64013455:	jne    0x64013463
64013457:	push   DWORD PTR [ebp+0x8]
6401345a:	mov    eax,DWORD PTR [ecx]
6401345c:	call   DWORD PTR [eax+0x4]
6401345f:	xor    eax,eax
64013461:	jmp    0x64013473
64013463:	push   DWORD PTR [ebp+0xc]
64013466:	push   DWORD PTR [ebp+0x8]
64013469:	push   eax
6401346a:	push   DWORD PTR [ecx+0x4]
6401346d:	call   DWORD PTR ds:0x64024188
64013473:	pop    ebp
64013474:	ret    0x8
64013477:	push   DWORD PTR [esp+0x4]
6401347b:	push   0x0
6401347d:	push   DWORD PTR [ecx+0x4]
64013480:	call   DWORD PTR ds:0x6402418c
64013486:	ret    0x4
64013489:	push   esi
6401348a:	mov    esi,ecx
6401348c:	call   0x640133f9
64013491:	test   BYTE PTR [esp+0x8],0x1
64013496:	je     0x6401349f
64013498:	push   esi
64013499:	call   0x64013604
6401349e:	pop    ecx
6401349f:	mov    eax,esi
640134a1:	pop    esi
640134a2:	ret    0x4
640134a5:	mov    eax,ecx
640134a7:	mov    ecx,DWORD PTR [esp+0x4]
640134ab:	mov    DWORD PTR [eax+0x4],ecx
640134ae:	mov    DWORD PTR [eax],0x64027ba4
640134b4:	xor    ecx,ecx
640134b6:	mov    DWORD PTR [eax+0x14],0x2
640134bd:	mov    DWORD PTR [eax+0xc],ecx
640134c0:	mov    DWORD PTR [eax+0x10],ecx
640134c3:	mov    WORD PTR [eax+0x18],cx
640134c7:	mov    WORD PTR [eax+0x1a],cx
640134cb:	mov    DWORD PTR [eax+0x8],eax
640134ce:	ret    0x4
640134d1:	mov    eax,DWORD PTR [esp+0x8]
640134d5:	mul    DWORD PTR [esp+0xc]
640134d9:	test   edx,edx
640134db:	ja     0x640134e2
640134dd:	cmp    eax,0xffffffff
640134e0:	jbe    0x640134e8
640134e2:	mov    eax,0x80070057
640134e7:	ret    
640134e8:	mov    ecx,DWORD PTR [esp+0x4]
640134ec:	mov    DWORD PTR [ecx],eax
640134ee:	xor    eax,eax
640134f0:	ret    
640134f1:	mov    ecx,DWORD PTR [ecx+0x4]
640134f4:	mov    eax,DWORD PTR [ecx]
640134f6:	jmp    DWORD PTR [eax+0x4]
640134f9:	xor    edx,edx
640134fb:	lea    eax,[ecx+0x14]
640134fe:	inc    edx
640134ff:	lock xadd DWORD PTR [eax],edx
64013503:	lea    eax,[ecx+0x8]
64013506:	ret    
64013507:	mov    eax,ecx
64013509:	ret    
6401350a:	test   BYTE PTR [esp+0x4],0x1
6401350f:	push   esi
64013510:	mov    esi,ecx
64013512:	mov    DWORD PTR [esi],0x64027ba4
64013518:	je     0x64013521
6401351a:	push   esi
6401351b:	call   0x64013604
64013520:	pop    ecx
64013521:	mov    eax,esi
64013523:	pop    esi
64013524:	ret    0x4
64013527:	mov    eax,DWORD PTR [esp+0x8]
6401352b:	mov    ecx,DWORD PTR [esp+0xc]
6401352f:	or     edx,0xffffffff
64013532:	sub    edx,eax
64013534:	cmp    edx,ecx
64013536:	jae    0x6401353e
64013538:	mov    eax,0x80070057
6401353d:	ret    
6401353e:	add    eax,ecx
64013540:	mov    ecx,DWORD PTR [esp+0x4]
64013544:	mov    DWORD PTR [ecx],eax
64013546:	xor    eax,eax
64013548:	ret    
64013549:	push   ebp
6401354a:	mov    ebp,esp
6401354c:	push   esi
6401354d:	mov    esi,DWORD PTR [ebp+0x8]
64013550:	push   edi
64013551:	push   DWORD PTR [ebp+0xc]
64013554:	add    esi,0x8
64013557:	and    esi,0xfffffff8
6401355a:	lea    eax,[ebp+0x8]
6401355d:	push   esi
6401355e:	push   eax
6401355f:	mov    edi,ecx
64013561:	call   0x640134d1
64013566:	add    esp,0xc
64013569:	test   eax,eax
6401356b:	jl     0x640135a3
6401356d:	push   DWORD PTR [ebp+0x8]
64013570:	lea    eax,[ebp+0x8]
64013573:	push   0x10
64013575:	push   eax
64013576:	call   0x64013527
6401357b:	add    esp,0xc
6401357e:	test   eax,eax
64013580:	jl     0x640135a3
64013582:	mov    ecx,DWORD PTR [edi+0x4]
64013585:	push   DWORD PTR [ebp+0x8]
64013588:	mov    eax,DWORD PTR [ecx]
6401358a:	call   DWORD PTR [eax]
6401358c:	test   eax,eax
6401358e:	je     0x640135a3
64013590:	dec    esi
64013591:	and    DWORD PTR [eax+0x4],0x0
64013595:	mov    DWORD PTR [eax],edi
64013597:	mov    DWORD PTR [eax+0xc],0x1
6401359e:	mov    DWORD PTR [eax+0x8],esi
640135a1:	jmp    0x640135a5
640135a3:	xor    eax,eax
640135a5:	pop    edi
640135a6:	pop    esi
640135a7:	pop    ebp
640135a8:	ret    0x8
640135ab:	push   ebp
640135ac:	mov    ebp,esp
640135ae:	push   esi
640135af:	mov    esi,DWORD PTR [ebp+0xc]
640135b2:	push   edi
640135b3:	push   DWORD PTR [ebp+0x10]
640135b6:	add    esi,0x8
640135b9:	and    esi,0xfffffff8
640135bc:	lea    eax,[ebp+0xc]
640135bf:	push   esi
640135c0:	push   eax
640135c1:	mov    edi,ecx
640135c3:	call   0x640134d1
640135c8:	add    esp,0xc
640135cb:	test   eax,eax
640135cd:	jl     0x640135fc
640135cf:	push   DWORD PTR [ebp+0xc]
640135d2:	lea    eax,[ebp+0xc]
640135d5:	push   0x10
640135d7:	push   eax
640135d8:	call   0x640067f0
640135dd:	add    esp,0xc
640135e0:	test   eax,eax
640135e2:	jl     0x640135fc
640135e4:	push   DWORD PTR [ebp+0xc]
640135e7:	mov    ecx,DWORD PTR [edi+0x4]
640135ea:	push   DWORD PTR [ebp+0x8]
640135ed:	mov    eax,DWORD PTR [ecx]
640135ef:	call   DWORD PTR [eax+0x8]
640135f2:	test   eax,eax
640135f4:	je     0x640135fc
640135f6:	dec    esi
640135f7:	mov    DWORD PTR [eax+0x8],esi
640135fa:	jmp    0x640135fe
640135fc:	xor    eax,eax
640135fe:	pop    edi
640135ff:	pop    esi
64013600:	pop    ebp
64013601:	ret    0xc
64013604:	jmp    0x6401477f
64013609:	mov    eax,ecx
6401360b:	and    DWORD PTR [eax+0x4],0x0
6401360f:	and    DWORD PTR [eax+0x8],0x0
64013613:	mov    DWORD PTR [eax],0x64027bc0
64013619:	ret    
6401361a:	push   ebx
6401361b:	mov    ebx,DWORD PTR [esp+0x8]
6401361f:	push   esi
64013620:	push   edi
64013621:	mov    edi,ecx
64013623:	mov    DWORD PTR [edi],0x64027bc0
64013629:	mov    eax,DWORD PTR [ebx]
6401362b:	test   eax,eax
6401362d:	je     0x64013655
6401362f:	push   eax
64013630:	call   0x64015510
64013635:	mov    esi,eax
64013637:	inc    esi
64013638:	push   esi
64013639:	call   0x6401487e
6401363e:	test   eax,eax
64013640:	pop    ecx
64013641:	pop    ecx
64013642:	mov    DWORD PTR [edi+0x4],eax
64013645:	je     0x64013659
64013647:	push   DWORD PTR [ebx]
64013649:	push   esi
6401364a:	push   eax
6401364b:	call   0x640162e1
64013650:	add    esp,0xc
64013653:	jmp    0x64013659
64013655:	and    DWORD PTR [edi+0x4],0x0
64013659:	mov    DWORD PTR [edi+0x8],0x1
64013660:	mov    eax,edi
64013662:	pop    edi
64013663:	pop    esi
64013664:	pop    ebx
64013665:	ret    0x4
64013668:	mov    eax,ecx
6401366a:	mov    ecx,DWORD PTR [esp+0x4]
6401366e:	mov    DWORD PTR [eax],0x64027bc0
64013674:	mov    ecx,DWORD PTR [ecx]
64013676:	and    DWORD PTR [eax+0x8],0x0
6401367a:	mov    DWORD PTR [eax+0x4],ecx
6401367d:	ret    0x8
64013680:	push   ebx
64013681:	mov    ebx,DWORD PTR [esp+0x8]
64013685:	push   esi
64013686:	mov    esi,ecx
64013688:	mov    DWORD PTR [esi],0x64027bc0
6401368e:	mov    eax,DWORD PTR [ebx+0x8]
64013691:	mov    DWORD PTR [esi+0x8],eax
64013694:	test   eax,eax
64013696:	mov    eax,DWORD PTR [ebx+0x4]
64013699:	push   edi
6401369a:	je     0x640136cd
6401369c:	test   eax,eax
6401369e:	je     0x640136c7
640136a0:	push   eax
640136a1:	call   0x64015510
640136a6:	mov    edi,eax
640136a8:	inc    edi
640136a9:	push   edi
640136aa:	call   0x6401487e
640136af:	test   eax,eax
640136b1:	pop    ecx
640136b2:	pop    ecx
640136b3:	mov    DWORD PTR [esi+0x4],eax
640136b6:	je     0x640136d0
640136b8:	push   DWORD PTR [ebx+0x4]
640136bb:	push   edi
640136bc:	push   eax
640136bd:	call   0x640162e1
640136c2:	add    esp,0xc
640136c5:	jmp    0x640136d0
640136c7:	and    DWORD PTR [esi+0x4],0x0
640136cb:	jmp    0x640136d0
640136cd:	mov    DWORD PTR [esi+0x4],eax
640136d0:	pop    edi
640136d1:	mov    eax,esi
640136d3:	pop    esi
640136d4:	pop    ebx
640136d5:	ret    0x4
640136d8:	cmp    DWORD PTR [ecx+0x8],0x0
640136dc:	mov    DWORD PTR [ecx],0x64027bc0
640136e2:	je     0x640136ed
640136e4:	push   DWORD PTR [ecx+0x4]
640136e7:	call   0x6401477f
640136ec:	pop    ecx
640136ed:	ret    
640136ee:	mov    eax,DWORD PTR [ecx+0x4]
640136f1:	test   eax,eax
640136f3:	jne    0x640136fa
640136f5:	mov    eax,0x64027bc8
640136fa:	ret    
640136fb:	push   esi
640136fc:	mov    esi,ecx
640136fe:	call   0x640136d8
64013703:	test   BYTE PTR [esp+0x8],0x1
64013708:	je     0x64013711
6401370a:	push   esi
6401370b:	call   0x64013604
64013710:	pop    ecx
64013711:	mov    eax,esi
64013713:	pop    esi
64013714:	ret    0x4
64013717:	push   ecx
64013718:	mov    DWORD PTR [ecx],0x64027be0
6401371e:	call   0x64016346
64013723:	pop    ecx
64013724:	ret    
64013725:	push   esi
64013726:	mov    esi,ecx
64013728:	call   0x64013717
6401372d:	test   BYTE PTR [esp+0x8],0x1
64013732:	je     0x6401373b
64013734:	push   esi
64013735:	call   0x64013604
6401373a:	pop    ecx
6401373b:	mov    eax,esi
6401373d:	pop    esi
6401373e:	ret    0x4
64013741:	mov    eax,DWORD PTR [esp+0x4]
64013745:	add    ecx,0x9
64013748:	push   ecx
64013749:	add    eax,0x9
6401374c:	push   eax
6401374d:	call   0x640163c0
64013752:	neg    eax
64013754:	pop    ecx
64013755:	sbb    eax,eax
64013757:	pop    ecx
64013758:	inc    eax
64013759:	ret    0x4
6401375c:	push   ebp
6401375d:	mov    ebp,esp
6401375f:	push   esi
64013760:	mov    esi,DWORD PTR [ebp+0x14]
64013763:	push   edi
64013764:	xor    edi,edi
64013766:	cmp    esi,edi
64013768:	jne    0x6401376e
6401376a:	xor    eax,eax
6401376c:	jmp    0x640137d3
6401376e:	cmp    DWORD PTR [ebp+0x8],edi
64013771:	jne    0x6401378e
64013773:	call   0x64016483
64013778:	push   0x16
6401377a:	pop    esi
6401377b:	mov    DWORD PTR [eax],esi
6401377d:	push   edi
6401377e:	push   edi
6401377f:	push   edi
64013780:	push   edi
64013781:	push   edi
64013782:	call   0x64013e12
64013787:	add    esp,0x14
6401378a:	mov    eax,esi
6401378c:	jmp    0x640137d3
6401378e:	cmp    DWORD PTR [ebp+0x10],edi
64013791:	je     0x640137a9
64013793:	cmp    DWORD PTR [ebp+0xc],esi
64013796:	jb     0x640137a9
64013798:	push   esi
64013799:	push   DWORD PTR [ebp+0x10]
6401379c:	push   DWORD PTR [ebp+0x8]
6401379f:	call   0x640151a0
640137a4:	add    esp,0xc
640137a7:	jmp    0x6401376a
640137a9:	push   DWORD PTR [ebp+0xc]
640137ac:	push   edi
640137ad:	push   DWORD PTR [ebp+0x8]
640137b0:	call   0x64015120
640137b5:	add    esp,0xc
640137b8:	cmp    DWORD PTR [ebp+0x10],edi
640137bb:	je     0x64013773
640137bd:	cmp    DWORD PTR [ebp+0xc],esi
640137c0:	jae    0x640137d0
640137c2:	call   0x64016483
640137c7:	push   0x22
640137c9:	pop    ecx
640137ca:	mov    DWORD PTR [eax],ecx
640137cc:	mov    esi,ecx
640137ce:	jmp    0x6401377d
640137d0:	push   0x16
640137d2:	pop    eax
640137d3:	pop    edi
640137d4:	pop    esi
640137d5:	pop    ebp
640137d6:	ret    
640137d7:	push   ebp
640137d8:	mov    ebp,esp
640137da:	mov    eax,DWORD PTR [ebp+0x14]
640137dd:	push   esi
640137de:	push   edi
640137df:	xor    edi,edi
640137e1:	cmp    eax,edi
640137e3:	je     0x6401382c
640137e5:	cmp    DWORD PTR [ebp+0x8],edi
640137e8:	jne    0x64013805
640137ea:	call   0x64016483
640137ef:	push   0x16
640137f1:	pop    esi
640137f2:	mov    DWORD PTR [eax],esi
640137f4:	push   edi
640137f5:	push   edi
640137f6:	push   edi
640137f7:	push   edi
640137f8:	push   edi
640137f9:	call   0x64013e12
640137fe:	add    esp,0x14
64013801:	mov    eax,esi
64013803:	jmp    0x6401382e
64013805:	cmp    DWORD PTR [ebp+0x10],edi
64013808:	je     0x640137ea
6401380a:	cmp    DWORD PTR [ebp+0xc],eax
6401380d:	jae    0x6401381d
6401380f:	call   0x64016483
64013814:	push   0x22
64013816:	pop    ecx
64013817:	mov    DWORD PTR [eax],ecx
64013819:	mov    esi,ecx
6401381b:	jmp    0x640137f4
6401381d:	push   eax
6401381e:	push   DWORD PTR [ebp+0x10]
64013821:	push   DWORD PTR [ebp+0x8]
64013824:	call   0x640164d0
64013829:	add    esp,0xc
6401382c:	xor    eax,eax
6401382e:	pop    edi
6401382f:	pop    esi
64013830:	pop    ebp
64013831:	ret    
64013832:	push   ebp
64013833:	mov    ebp,esp
64013835:	sub    esp,0x20
64013838:	mov    eax,DWORD PTR [ebp+0x8]
6401383b:	push   esi
6401383c:	push   edi
6401383d:	push   0x8
6401383f:	pop    ecx
64013840:	mov    esi,0x64027be4
64013845:	lea    edi,[ebp-0x20]
64013848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401384a:	mov    DWORD PTR [ebp-0x8],eax
6401384d:	mov    eax,DWORD PTR [ebp+0xc]
64013850:	test   eax,eax
64013852:	pop    edi
64013853:	mov    DWORD PTR [ebp-0x4],eax
64013856:	pop    esi
64013857:	je     0x64013865
64013859:	test   BYTE PTR [eax],0x8
6401385c:	je     0x64013865
6401385e:	mov    DWORD PTR [ebp-0xc],0x1994000
64013865:	lea    eax,[ebp-0xc]
64013868:	push   eax
64013869:	push   DWORD PTR [ebp-0x10]
6401386c:	push   DWORD PTR [ebp-0x1c]
6401386f:	push   DWORD PTR [ebp-0x20]
64013872:	call   DWORD PTR ds:0x64024178
64013878:	leave  
64013879:	ret    0x8
6401387c:	push   esi
6401387d:	push   0x1
6401387f:	push   0x64037640
64013884:	mov    esi,ecx
64013886:	call   0x64013668
6401388b:	mov    DWORD PTR [esi],0x640242a4
64013891:	mov    eax,esi
64013893:	pop    esi
64013894:	ret    
64013895:	push   ebp
64013896:	mov    ebp,esp
64013898:	sub    esp,0xc
6401389b:	jmp    0x640138aa
6401389d:	push   DWORD PTR [ebp+0x8]
640138a0:	call   0x6401683f
640138a5:	test   eax,eax
640138a7:	pop    ecx
640138a8:	je     0x640138b9
640138aa:	push   DWORD PTR [ebp+0x8]
640138ad:	call   0x6401487e
640138b2:	test   eax,eax
640138b4:	pop    ecx
640138b5:	je     0x6401389d
640138b7:	leave  
640138b8:	ret    
640138b9:	test   BYTE PTR ds:0x64038e8c,0x1
640138c0:	mov    esi,0x64038e80
640138c5:	jne    0x640138e0
640138c7:	or     DWORD PTR ds:0x64038e8c,0x1
640138ce:	mov    ecx,esi
640138d0:	call   0x6401387c
640138d5:	push   0x64023ef7
640138da:	call   0x64013f6a
640138df:	pop    ecx
640138e0:	push   esi
640138e1:	lea    ecx,[ebp-0xc]
640138e4:	call   0x64013680
640138e9:	push   0x6402bd5c
640138ee:	lea    eax,[ebp-0xc]
640138f1:	push   eax
640138f2:	mov    DWORD PTR [ebp-0xc],0x640242a4
640138f9:	call   0x64013832
640138fe:	int3   
640138ff:	push   ebp
64013900:	mov    ebp,esp
64013902:	push   ecx
64013903:	push   ebx
64013904:	mov    eax,DWORD PTR [ebp+0xc]
64013907:	add    eax,0xc
6401390a:	mov    DWORD PTR [ebp-0x4],eax
6401390d:	mov    ebx,DWORD PTR fs:0x0
64013914:	mov    eax,DWORD PTR [ebx]
64013916:	mov    fs:0x0,eax
6401391c:	mov    eax,DWORD PTR [ebp+0x8]
6401391f:	mov    ebx,DWORD PTR [ebp+0xc]
64013922:	mov    ebp,DWORD PTR [ebp-0x4]
64013925:	mov    esp,DWORD PTR [ebx-0x4]
64013928:	jmp    eax
6401392a:	pop    ebx
6401392b:	leave  
6401392c:	ret    0x8
6401392f:	pop    eax
64013930:	pop    ecx
64013931:	xchg   DWORD PTR [esp],eax
64013934:	jmp    eax
64013936:	push   ebp
64013937:	mov    ebp,esp
64013939:	push   ecx
6401393a:	push   ecx
6401393b:	push   ebx
6401393c:	push   esi
6401393d:	push   edi
6401393e:	mov    esi,DWORD PTR fs:0x0
64013945:	mov    DWORD PTR [ebp-0x4],esi
64013948:	mov    DWORD PTR [ebp-0x8],0x6401395f
6401394f:	push   0x0
64013951:	push   DWORD PTR [ebp+0xc]
64013954:	push   DWORD PTR [ebp-0x8]
64013957:	push   DWORD PTR [ebp+0x8]
6401395a:	call   0x64022e1c
6401395f:	mov    eax,DWORD PTR [ebp+0xc]
64013962:	mov    eax,DWORD PTR [eax+0x4]
64013965:	and    eax,0xfffffffd
64013968:	mov    ecx,DWORD PTR [ebp+0xc]
6401396b:	mov    DWORD PTR [ecx+0x4],eax
6401396e:	mov    edi,DWORD PTR fs:0x0
64013975:	mov    ebx,DWORD PTR [ebp-0x4]
64013978:	mov    DWORD PTR [ebx],edi
6401397a:	mov    DWORD PTR fs:0x0,ebx
64013981:	pop    edi
64013982:	pop    esi
64013983:	pop    ebx
64013984:	leave  
64013985:	ret    0x8
64013988:	push   ebp
64013989:	mov    ebp,esp
6401398b:	sub    esp,0x8
6401398e:	push   ebx
6401398f:	push   esi
64013990:	push   edi
64013991:	cld    
64013992:	mov    DWORD PTR [ebp-0x4],eax
64013995:	xor    eax,eax
64013997:	push   eax
64013998:	push   eax
64013999:	push   eax
6401399a:	push   DWORD PTR [ebp-0x4]
6401399d:	push   DWORD PTR [ebp+0x14]
640139a0:	push   DWORD PTR [ebp+0x10]
640139a3:	push   DWORD PTR [ebp+0xc]
640139a6:	push   DWORD PTR [ebp+0x8]
640139a9:	call   0x64017407
640139ae:	add    esp,0x20
640139b1:	mov    DWORD PTR [ebp-0x8],eax
640139b4:	pop    edi
640139b5:	pop    esi
640139b6:	pop    ebx
640139b7:	mov    eax,DWORD PTR [ebp-0x8]
640139ba:	mov    esp,ebp
640139bc:	pop    ebp
640139bd:	ret    
640139be:	push   esi
640139bf:	cld    
640139c0:	mov    esi,DWORD PTR [esp+0xc]
640139c4:	mov    ecx,DWORD PTR [esi+0x8]
640139c7:	xor    ecx,esi
640139c9:	call   0x64013cc6
640139ce:	push   0x0
640139d0:	push   esi
640139d1:	push   DWORD PTR [esi+0x14]
640139d4:	push   DWORD PTR [esi+0xc]
640139d7:	push   0x0
640139d9:	push   DWORD PTR [esp+0x24]
640139dd:	push   DWORD PTR [esi+0x10]
640139e0:	push   DWORD PTR [esp+0x24]
640139e4:	call   0x64017407
640139e9:	add    esp,0x20
640139ec:	pop    esi
640139ed:	ret    
640139ee:	push   ebp
640139ef:	mov    ebp,esp
640139f1:	sub    esp,0x38
640139f4:	push   ebx
640139f5:	cmp    DWORD PTR [ebp+0x8],0x123
640139fc:	jne    0x64013a10
640139fe:	mov    eax,0x64013a97
64013a03:	mov    ecx,DWORD PTR [ebp+0xc]
64013a06:	mov    DWORD PTR [ecx],eax
64013a08:	xor    eax,eax
64013a0a:	inc    eax
64013a0b:	jmp    0x64013ac0
64013a10:	and    DWORD PTR [ebp-0x28],0x0
64013a14:	mov    DWORD PTR [ebp-0x24],0x64013ac3
64013a1b:	mov    eax,ds:0x64037644
64013a20:	lea    ecx,[ebp-0x28]
64013a23:	xor    eax,ecx
64013a25:	mov    DWORD PTR [ebp-0x20],eax
64013a28:	mov    eax,DWORD PTR [ebp+0x18]
64013a2b:	mov    DWORD PTR [ebp-0x1c],eax
64013a2e:	mov    eax,DWORD PTR [ebp+0xc]
64013a31:	mov    DWORD PTR [ebp-0x18],eax
64013a34:	mov    eax,DWORD PTR [ebp+0x1c]
64013a37:	mov    DWORD PTR [ebp-0x14],eax
64013a3a:	mov    eax,DWORD PTR [ebp+0x20]
64013a3d:	mov    DWORD PTR [ebp-0x10],eax
64013a40:	and    DWORD PTR [ebp-0xc],0x0
64013a44:	and    DWORD PTR [ebp-0x8],0x0
64013a48:	and    DWORD PTR [ebp-0x4],0x0
64013a4c:	mov    DWORD PTR [ebp-0xc],esp
64013a4f:	mov    DWORD PTR [ebp-0x8],ebp
64013a52:	mov    eax,fs:0x0
64013a58:	mov    DWORD PTR [ebp-0x28],eax
64013a5b:	lea    eax,[ebp-0x28]
64013a5e:	mov    fs:0x0,eax
64013a64:	mov    DWORD PTR [ebp-0x38],0x1
64013a6b:	mov    eax,DWORD PTR [ebp+0x8]
64013a6e:	mov    DWORD PTR [ebp-0x34],eax
64013a71:	mov    eax,DWORD PTR [ebp+0x10]
64013a74:	mov    DWORD PTR [ebp-0x30],eax
64013a77:	call   0x640177ea
64013a7c:	mov    eax,DWORD PTR [eax+0x80]
64013a82:	mov    DWORD PTR [ebp-0x2c],eax
64013a85:	lea    eax,[ebp-0x34]
64013a88:	push   eax
64013a89:	mov    eax,DWORD PTR [ebp+0x8]
64013a8c:	push   DWORD PTR [eax]
64013a8e:	call   DWORD PTR [ebp-0x2c]
64013a91:	pop    ecx
64013a92:	pop    ecx
64013a93:	and    DWORD PTR [ebp-0x38],0x0
64013a97:	cmp    DWORD PTR [ebp-0x4],0x0
64013a9b:	je     0x64013ab4
64013a9d:	mov    ebx,DWORD PTR fs:0x0
64013aa4:	mov    eax,DWORD PTR [ebx]
64013aa6:	mov    ebx,DWORD PTR [ebp-0x28]
64013aa9:	mov    DWORD PTR [ebx],eax
64013aab:	mov    DWORD PTR fs:0x0,ebx
64013ab2:	jmp    0x64013abd
64013ab4:	mov    eax,DWORD PTR [ebp-0x28]
64013ab7:	mov    fs:0x0,eax
64013abd:	mov    eax,DWORD PTR [ebp-0x38]
64013ac0:	pop    ebx
64013ac1:	leave  
64013ac2:	ret    
64013ac3:	push   ebp
64013ac4:	mov    ebp,esp
64013ac6:	push   ecx
64013ac7:	push   ebx
64013ac8:	cld    
64013ac9:	mov    eax,DWORD PTR [ebp+0xc]
64013acc:	mov    ecx,DWORD PTR [eax+0x8]
64013acf:	xor    ecx,DWORD PTR [ebp+0xc]
64013ad2:	call   0x64013cc6
64013ad7:	mov    eax,DWORD PTR [ebp+0x8]
64013ada:	mov    eax,DWORD PTR [eax+0x4]
64013add:	and    eax,0x66
64013ae0:	je     0x64013af3
64013ae2:	mov    eax,DWORD PTR [ebp+0xc]
64013ae5:	mov    DWORD PTR [eax+0x24],0x1
64013aec:	xor    eax,eax
64013aee:	inc    eax
64013aef:	jmp    0x64013b5d
64013af1:	jmp    0x64013b5d
64013af3:	push   0x1
64013af5:	mov    eax,DWORD PTR [ebp+0xc]
64013af8:	push   DWORD PTR [eax+0x18]
64013afb:	mov    eax,DWORD PTR [ebp+0xc]
64013afe:	push   DWORD PTR [eax+0x14]
64013b01:	mov    eax,DWORD PTR [ebp+0xc]
64013b04:	push   DWORD PTR [eax+0xc]
64013b07:	push   0x0
64013b09:	push   DWORD PTR [ebp+0x10]
64013b0c:	mov    eax,DWORD PTR [ebp+0xc]
64013b0f:	push   DWORD PTR [eax+0x10]
64013b12:	push   DWORD PTR [ebp+0x8]
64013b15:	call   0x64017407
64013b1a:	add    esp,0x20
64013b1d:	mov    eax,DWORD PTR [ebp+0xc]
64013b20:	cmp    DWORD PTR [eax+0x24],0x0
64013b24:	jne    0x64013b31
64013b26:	push   DWORD PTR [ebp+0x8]
64013b29:	push   DWORD PTR [ebp+0xc]
64013b2c:	call   0x64013936
64013b31:	push   0x0
64013b33:	push   0x0
64013b35:	push   0x0
64013b37:	push   0x0
64013b39:	push   0x0
64013b3b:	lea    eax,[ebp-0x4]
64013b3e:	push   eax
64013b3f:	push   0x123
64013b44:	call   0x640139ee
64013b49:	add    esp,0x1c
64013b4c:	mov    eax,DWORD PTR [ebp-0x4]
64013b4f:	mov    ebx,DWORD PTR [ebp+0xc]
64013b52:	mov    esp,DWORD PTR [ebx+0x1c]
64013b55:	mov    ebp,DWORD PTR [ebx+0x20]
64013b58:	jmp    eax
64013b5a:	xor    eax,eax
64013b5c:	inc    eax
64013b5d:	pop    ebx
64013b5e:	leave  
64013b5f:	ret    
64013b60:	push   ebp
64013b61:	mov    ebp,esp
64013b63:	push   ecx
64013b64:	push   ebx
64013b65:	push   esi
64013b66:	push   edi
64013b67:	mov    edi,DWORD PTR [ebp+0x8]
64013b6a:	mov    eax,DWORD PTR [edi+0x10]
64013b6d:	mov    esi,DWORD PTR [edi+0xc]
64013b70:	mov    DWORD PTR [ebp-0x4],eax
64013b73:	mov    ebx,esi
64013b75:	jmp    0x64013ba4
64013b77:	cmp    esi,0xffffffff
64013b7a:	jne    0x64013b81
64013b7c:	call   0x64017b5c
64013b81:	mov    ecx,DWORD PTR [ebp-0x4]
64013b84:	dec    esi
64013b85:	mov    eax,esi
64013b87:	imul   eax,eax,0x14
64013b8a:	add    eax,ecx
64013b8c:	mov    ecx,DWORD PTR [ebp+0x10]
64013b8f:	cmp    DWORD PTR [eax+0x4],ecx
64013b92:	jge    0x64013b99
64013b94:	cmp    ecx,DWORD PTR [eax+0x8]
64013b97:	jle    0x64013b9e
64013b99:	cmp    esi,0xffffffff
64013b9c:	jne    0x64013ba7
64013b9e:	dec    DWORD PTR [ebp+0xc]
64013ba1:	mov    ebx,DWORD PTR [ebp+0x8]
64013ba4:	mov    DWORD PTR [ebp+0x8],esi
64013ba7:	cmp    DWORD PTR [ebp+0xc],0x0
64013bab:	jge    0x64013b77
64013bad:	mov    eax,DWORD PTR [ebp+0x14]
64013bb0:	inc    esi
64013bb1:	mov    DWORD PTR [eax],esi
64013bb3:	mov    eax,DWORD PTR [ebp+0x18]
64013bb6:	mov    DWORD PTR [eax],ebx
64013bb8:	cmp    ebx,DWORD PTR [edi+0xc]
64013bbb:	ja     0x64013bc1
64013bbd:	cmp    esi,ebx
64013bbf:	jbe    0x64013bc6
64013bc1:	call   0x64017b5c
64013bc6:	mov    eax,esi
64013bc8:	imul   eax,eax,0x14
64013bcb:	add    eax,DWORD PTR [ebp-0x4]
64013bce:	pop    edi
64013bcf:	pop    esi
64013bd0:	pop    ebx
64013bd1:	leave  
64013bd2:	ret    
64013bd3:	mov    eax,DWORD PTR [esp+0x8]
64013bd7:	push   esi
64013bd8:	mov    esi,DWORD PTR [esp+0x8]
64013bdc:	mov    DWORD PTR [esi],eax
64013bde:	call   0x640177ea
64013be3:	mov    eax,DWORD PTR [eax+0x98]
64013be9:	mov    DWORD PTR [esi+0x4],eax
64013bec:	call   0x640177ea
64013bf1:	mov    DWORD PTR [eax+0x98],esi
64013bf7:	mov    eax,esi
64013bf9:	pop    esi
64013bfa:	ret    
64013bfb:	call   0x640177ea
64013c00:	mov    eax,DWORD PTR [eax+0x98]
64013c06:	jmp    0x64013c13
64013c08:	mov    ecx,DWORD PTR [eax]
64013c0a:	cmp    ecx,DWORD PTR [esp+0x4]
64013c0e:	je     0x64013c19
64013c10:	mov    eax,DWORD PTR [eax+0x4]
64013c13:	test   eax,eax
64013c15:	jne    0x64013c08
64013c17:	inc    eax
64013c18:	ret    
64013c19:	xor    eax,eax
64013c1b:	ret    
64013c1c:	push   esi
64013c1d:	call   0x640177ea
64013c22:	mov    esi,DWORD PTR [esp+0x8]
64013c26:	cmp    esi,DWORD PTR [eax+0x98]
64013c2c:	jne    0x64013c3e
64013c2e:	call   0x640177ea
64013c33:	mov    ecx,DWORD PTR [esi+0x4]
64013c36:	mov    DWORD PTR [eax+0x98],ecx
64013c3c:	pop    esi
64013c3d:	ret    
64013c3e:	call   0x640177ea
64013c43:	mov    eax,DWORD PTR [eax+0x98]
64013c49:	jmp    0x64013c54
64013c4b:	mov    ecx,DWORD PTR [eax+0x4]
64013c4e:	cmp    esi,ecx
64013c50:	je     0x64013c60
64013c52:	mov    eax,ecx
64013c54:	cmp    DWORD PTR [eax+0x4],0x0
64013c58:	jne    0x64013c4b
64013c5a:	pop    esi
64013c5b:	jmp    0x64017b5c
64013c60:	mov    ecx,DWORD PTR [esi+0x4]
64013c63:	mov    DWORD PTR [eax+0x4],ecx
64013c66:	pop    esi
64013c67:	ret    
64013c68:	push   ebp
64013c69:	mov    ebp,esp
64013c6b:	sub    esp,0x18
64013c6e:	mov    eax,ds:0x64037644
64013c73:	and    DWORD PTR [ebp-0x18],0x0
64013c77:	lea    ecx,[ebp-0x18]
64013c7a:	xor    eax,ecx
64013c7c:	mov    ecx,DWORD PTR [ebp+0x8]
64013c7f:	mov    DWORD PTR [ebp-0x10],eax
64013c82:	mov    eax,DWORD PTR [ebp+0xc]
64013c85:	mov    DWORD PTR [ebp-0xc],eax
64013c88:	mov    eax,DWORD PTR [ebp+0x14]
64013c8b:	inc    eax
64013c8c:	mov    DWORD PTR [ebp-0x14],0x640139be
64013c93:	mov    DWORD PTR [ebp-0x8],ecx
64013c96:	mov    DWORD PTR [ebp-0x4],eax
64013c99:	mov    eax,fs:0x0
64013c9f:	mov    DWORD PTR [ebp-0x18],eax
64013ca2:	lea    eax,[ebp-0x18]
64013ca5:	mov    fs:0x0,eax
64013cab:	push   DWORD PTR [ebp+0x18]
64013cae:	push   ecx
64013caf:	push   DWORD PTR [ebp+0x10]
64013cb2:	call   0x64017bb0
64013cb7:	mov    ecx,eax
64013cb9:	mov    eax,DWORD PTR [ebp-0x18]
64013cbc:	mov    fs:0x0,eax
64013cc2:	mov    eax,ecx
64013cc4:	leave  
64013cc5:	ret    
64013cc6:	cmp    ecx,DWORD PTR ds:0x64037644
64013ccc:	jne    0x64013cd0
64013cce:	repz ret 
64013cd0:	jmp    0x64017bfc
64013cd5:	int3   
64013cd6:	int3   
64013cd7:	int3   
64013cd8:	int3   
64013cd9:	int3   
64013cda:	int3   
64013cdb:	int3   
64013cdc:	int3   
64013cdd:	int3   
64013cde:	int3   
64013cdf:	int3   
64013ce0:	push   ecx
64013ce1:	lea    ecx,[esp+0x8]
64013ce5:	sub    ecx,eax
64013ce7:	and    ecx,0xf
64013cea:	add    eax,ecx
64013cec:	sbb    ecx,ecx
64013cee:	or     eax,ecx
64013cf0:	pop    ecx
64013cf1:	jmp    0x64017d00
64013cf6:	push   ecx
64013cf7:	lea    ecx,[esp+0x8]
64013cfb:	sub    ecx,eax
64013cfd:	and    ecx,0x7
64013d00:	add    eax,ecx
64013d02:	sbb    ecx,ecx
64013d04:	or     eax,ecx
64013d06:	pop    ecx
64013d07:	jmp    0x64017d00
64013d0c:	mov    eax,DWORD PTR [esp+0x4]
64013d10:	mov    ds:0x64038e90,eax
64013d15:	ret    
64013d16:	push   ebp
64013d17:	lea    ebp,[esp-0x2a8]
64013d1e:	sub    esp,0x328
64013d24:	mov    eax,ds:0x64037644
64013d29:	xor    eax,ebp
64013d2b:	mov    DWORD PTR [ebp+0x2a4],eax
64013d31:	push   esi
64013d32:	mov    DWORD PTR [ebp+0x88],eax
64013d38:	mov    DWORD PTR [ebp+0x84],ecx
64013d3e:	mov    DWORD PTR [ebp+0x80],edx
64013d44:	mov    DWORD PTR [ebp+0x7c],ebx
64013d47:	mov    DWORD PTR [ebp+0x78],esi
64013d4a:	mov    DWORD PTR [ebp+0x74],edi
64013d4d:	data16 mov WORD PTR [ebp+0xa0],ss
64013d54:	data16 mov WORD PTR [ebp+0x94],cs
64013d5b:	data16 mov WORD PTR [ebp+0x70],ds
64013d5f:	data16 mov WORD PTR [ebp+0x6c],es
64013d63:	data16 mov WORD PTR [ebp+0x68],fs
64013d67:	data16 mov WORD PTR [ebp+0x64],gs
64013d6b:	pushf  
64013d6c:	pop    DWORD PTR [ebp+0x98]
64013d72:	mov    esi,DWORD PTR [ebp+0x2ac]
64013d78:	lea    eax,[ebp+0x2ac]
64013d7e:	mov    DWORD PTR [ebp+0x9c],eax
64013d84:	mov    DWORD PTR [ebp-0x28],0x10001
64013d8b:	mov    DWORD PTR [ebp+0x90],esi
64013d91:	mov    eax,DWORD PTR [eax-0x4]
64013d94:	push   0x50
64013d96:	mov    DWORD PTR [ebp+0x8c],eax
64013d9c:	lea    eax,[ebp-0x80]
64013d9f:	push   0x0
64013da1:	push   eax
64013da2:	call   0x64015120
64013da7:	lea    eax,[ebp-0x80]
64013daa:	mov    DWORD PTR [ebp-0x30],eax
64013dad:	lea    eax,[ebp-0x28]
64013db0:	add    esp,0xc
64013db3:	mov    DWORD PTR [ebp-0x80],0xc000000d
64013dba:	mov    DWORD PTR [ebp-0x74],esi
64013dbd:	mov    DWORD PTR [ebp-0x2c],eax
64013dc0:	call   DWORD PTR ds:0x640241a0
64013dc6:	push   0x0
64013dc8:	mov    esi,eax
64013dca:	call   DWORD PTR ds:0x6402419c
64013dd0:	lea    eax,[ebp-0x30]
64013dd3:	push   eax
64013dd4:	call   DWORD PTR ds:0x64024198
64013dda:	test   eax,eax
64013ddc:	jne    0x64013dea
64013dde:	test   esi,esi
64013de0:	jne    0x64013dea
64013de2:	push   0x2
64013de4:	call   0x64017d2b
64013de9:	pop    ecx
64013dea:	push   0xc000000d
64013def:	call   DWORD PTR ds:0x6402403c
64013df5:	push   eax
64013df6:	call   DWORD PTR ds:0x640240e4
64013dfc:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013e02:	xor    ecx,ebp
64013e04:	pop    esi
64013e05:	call   0x64013cc6
64013e0a:	add    ebp,0x2a8
64013e10:	leave  
64013e11:	ret    
64013e12:	push   ebp
64013e13:	mov    ebp,esp
64013e15:	push   DWORD PTR ds:0x64038e90
64013e1b:	call   0x640175ce
64013e20:	test   eax,eax
64013e22:	pop    ecx
64013e23:	je     0x64013e28
64013e25:	pop    ebp
64013e26:	jmp    eax
64013e28:	push   0x2
64013e2a:	call   0x64017d2b
64013e2f:	pop    ecx
64013e30:	pop    ebp
64013e31:	jmp    0x64013d16
64013e36:	xor    eax,eax
64013e38:	push   eax
64013e39:	push   eax
64013e3a:	push   eax
64013e3b:	push   eax
64013e3c:	push   eax
64013e3d:	call   0x64013e12
64013e42:	add    esp,0x14
64013e45:	ret    
64013e46:	push   ecx
64013e47:	push   ebx
64013e48:	push   ebp
64013e49:	push   esi
64013e4a:	push   edi
64013e4b:	push   DWORD PTR ds:0x6403ac68
64013e51:	call   0x640175ce
64013e56:	push   DWORD PTR ds:0x6403ac64
64013e5c:	mov    esi,eax
64013e5e:	mov    DWORD PTR [esp+0x18],esi
64013e62:	call   0x640175ce
64013e67:	mov    edi,eax
64013e69:	cmp    edi,esi
64013e6b:	pop    ecx
64013e6c:	pop    ecx
64013e6d:	jb     0x64013ef7
64013e73:	mov    ebx,edi
64013e75:	sub    ebx,esi
64013e77:	lea    ebp,[ebx+0x4]
64013e7a:	cmp    ebp,0x4
64013e7d:	jb     0x64013ef7
64013e7f:	push   esi
64013e80:	call   0x64017d33
64013e85:	mov    esi,eax
64013e87:	cmp    esi,ebp
64013e89:	pop    ecx
64013e8a:	jae    0x64013ed6
64013e8c:	mov    eax,0x800
64013e91:	cmp    esi,eax
64013e93:	jae    0x64013e97
64013e95:	mov    eax,esi
64013e97:	add    eax,esi
64013e99:	cmp    eax,esi
64013e9b:	jb     0x64013ead
64013e9d:	push   eax
64013e9e:	push   DWORD PTR [esp+0x14]
64013ea2:	call   0x64015d77
64013ea7:	test   eax,eax
64013ea9:	pop    ecx
64013eaa:	pop    ecx
64013eab:	jne    0x64013ec4
64013ead:	lea    eax,[esi+0x10]
64013eb0:	cmp    eax,esi
64013eb2:	jb     0x64013ef7
64013eb4:	push   eax
64013eb5:	push   DWORD PTR [esp+0x14]
64013eb9:	call   0x64015d77
64013ebe:	test   eax,eax
64013ec0:	pop    ecx
64013ec1:	pop    ecx
64013ec2:	je     0x64013ef7
64013ec4:	sar    ebx,0x2
64013ec7:	push   eax
64013ec8:	lea    edi,[eax+ebx*4]
64013ecb:	call   0x64017557
64013ed0:	pop    ecx
64013ed1:	mov    ds:0x6403ac68,eax
64013ed6:	push   DWORD PTR [esp+0x18]
64013eda:	call   0x64017557
64013edf:	mov    DWORD PTR [edi],eax
64013ee1:	add    edi,0x4
64013ee4:	push   edi
64013ee5:	call   0x64017557
64013eea:	pop    ecx
64013eeb:	mov    ds:0x6403ac64,eax
64013ef0:	mov    eax,DWORD PTR [esp+0x1c]
64013ef4:	pop    ecx
64013ef5:	jmp    0x64013ef9
64013ef7:	xor    eax,eax
64013ef9:	pop    edi
64013efa:	pop    esi
64013efb:	pop    ebp
64013efc:	pop    ebx
64013efd:	pop    ecx
64013efe:	ret    
64013eff:	push   esi
64013f00:	push   0x4
64013f02:	push   0x20
64013f04:	call   0x64015d2f
64013f09:	mov    esi,eax
64013f0b:	push   esi
64013f0c:	call   0x64017557
64013f11:	add    esp,0xc
64013f14:	test   esi,esi
64013f16:	mov    ds:0x6403ac68,eax
64013f1b:	mov    ds:0x6403ac64,eax
64013f20:	jne    0x64013f27
64013f22:	push   0x18
64013f24:	pop    eax
64013f25:	pop    esi
64013f26:	ret    
64013f27:	and    DWORD PTR [esi],0x0
64013f2a:	xor    eax,eax
64013f2c:	pop    esi
64013f2d:	ret    
64013f2e:	push   0xc
64013f30:	push   0x6402b6b8
64013f35:	call   0x64015ed4
64013f3a:	call   0x64017e35
64013f3f:	and    DWORD PTR [ebp-0x4],0x0
64013f43:	push   DWORD PTR [ebp+0x8]
64013f46:	call   0x64013e46
64013f4b:	pop    ecx
64013f4c:	mov    DWORD PTR [ebp-0x1c],eax
64013f4f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013f56:	call   0x64013f64
64013f5b:	mov    eax,DWORD PTR [ebp-0x1c]
64013f5e:	call   0x64015f19
64013f63:	ret    
64013f64:	call   0x64017e3e
64013f69:	ret    
64013f6a:	push   DWORD PTR [esp+0x4]
64013f6e:	call   0x64013f2e
64013f73:	neg    eax
64013f75:	sbb    eax,eax
64013f77:	neg    eax
64013f79:	pop    ecx
64013f7a:	dec    eax
64013f7b:	ret    
64013f7c:	mov    eax,DWORD PTR [esp+0x4]
64013f80:	push   ebx
64013f81:	mov    ebx,DWORD PTR [esp+0xc]
64013f85:	cmp    WORD PTR [ebx],0x0
64013f89:	push   edi
64013f8a:	mov    edi,eax
64013f8c:	je     0x64013fd3
64013f8e:	movzx  ecx,WORD PTR [eax]
64013f91:	test   cx,cx
64013f94:	je     0x64013fd1
64013f96:	movzx  edx,cx
64013f99:	sub    eax,ebx
64013f9b:	test   dx,dx
64013f9e:	mov    ecx,DWORD PTR [esp+0x10]
64013fa2:	je     0x64013fbf
64013fa4:	movzx  edx,WORD PTR [ecx]
64013fa7:	test   dx,dx
64013faa:	je     0x64013fd6
64013fac:	movzx  ebx,WORD PTR [eax+ecx*1]
64013fb0:	movzx  edx,dx
64013fb3:	sub    ebx,edx
64013fb5:	jne    0x64013fbf
64013fb7:	inc    ecx
64013fb8:	inc    ecx
64013fb9:	cmp    WORD PTR [eax+ecx*1],bx
64013fbd:	jne    0x64013fa4
64013fbf:	cmp    WORD PTR [ecx],0x0
64013fc3:	je     0x64013fd6
64013fc5:	inc    edi
64013fc6:	inc    edi
64013fc7:	movzx  edx,WORD PTR [edi]
64013fca:	inc    eax
64013fcb:	inc    eax
64013fcc:	test   dx,dx
64013fcf:	jne    0x64013f9b
64013fd1:	xor    eax,eax
64013fd3:	pop    edi
64013fd4:	pop    ebx
64013fd5:	ret    
64013fd6:	mov    eax,edi
64013fd8:	jmp    0x64013fd3
64013fda:	push   ebp
64013fdb:	mov    ebp,esp
64013fdd:	push   ecx
64013fde:	mov    eax,DWORD PTR [ebp+0xc]
64013fe1:	cmp    eax,0x1
64013fe4:	push   ebx
64013fe5:	push   esi
64013fe6:	push   edi
64013fe7:	jne    0x64014104
64013fed:	mov    ebx,DWORD PTR ds:0x64024190
64013ff3:	mov    edi,0x94
64013ff8:	push   edi
64013ff9:	push   0x0
64013ffb:	call   ebx
64013ffd:	push   eax
64013ffe:	call   DWORD PTR ds:0x64024180
64014004:	mov    esi,eax
64014006:	test   esi,esi
64014008:	jne    0x64014011
6401400a:	xor    eax,eax
6401400c:	jmp    0x640141ac
64014011:	push   esi
64014012:	mov    DWORD PTR [esi],edi
64014014:	call   DWORD PTR ds:0x64024174
6401401a:	test   eax,eax
6401401c:	push   esi
6401401d:	push   0x0
6401401f:	jne    0x6401402c
64014021:	call   ebx
64014023:	push   eax
64014024:	call   DWORD PTR ds:0x64024184
6401402a:	jmp    0x6401400a
6401402c:	mov    eax,DWORD PTR [esi+0x10]
6401402f:	mov    edi,DWORD PTR [esi+0xc]
64014032:	mov    DWORD PTR [ebp+0xc],eax
64014035:	mov    eax,DWORD PTR [esi+0x4]
64014038:	mov    DWORD PTR [ebp+0x10],eax
6401403b:	mov    eax,DWORD PTR [esi+0x8]
6401403e:	mov    DWORD PTR [ebp-0x4],eax
64014041:	and    edi,0x7fff
64014047:	call   ebx
64014049:	push   eax
6401404a:	call   DWORD PTR ds:0x64024184
64014050:	mov    eax,DWORD PTR [ebp+0xc]
64014053:	cmp    eax,0x2
64014056:	je     0x6401405e
64014058:	or     edi,0x8000
6401405e:	mov    ecx,DWORD PTR [ebp-0x4]
64014061:	mov    ds:0x64039200,eax
64014066:	mov    eax,DWORD PTR [ebp+0x10]
64014069:	mov    edx,eax
6401406b:	shl    edx,0x8
6401406e:	add    edx,ecx
64014070:	push   0x1
64014072:	mov    DWORD PTR ds:0x64039208,edx
64014078:	mov    ds:0x6403920c,eax
6401407d:	mov    DWORD PTR ds:0x64039210,ecx
64014083:	mov    DWORD PTR ds:0x64039204,edi
64014089:	call   0x64018876
6401408e:	test   eax,eax
64014090:	pop    ecx
64014091:	je     0x6401400a
64014097:	call   0x6401798c
6401409c:	test   eax,eax
6401409e:	jne    0x640140aa
640140a0:	call   0x640188d0
640140a5:	jmp    0x6401400a
640140aa:	call   0x640187d3
640140af:	call   DWORD PTR ds:0x640241a4
640140b5:	mov    ds:0x6403ac78,eax
640140ba:	call   0x6401869e
640140bf:	mov    ds:0x64038e98,eax
640140c4:	call   0x640180d2
640140c9:	test   eax,eax
640140cb:	jge    0x640140d4
640140cd:	call   0x64017677
640140d2:	jmp    0x640140a0
640140d4:	call   0x640185e5
640140d9:	test   eax,eax
640140db:	jl     0x640140fd
640140dd:	call   0x64018372
640140e2:	test   eax,eax
640140e4:	jl     0x640140fd
640140e6:	push   0x0
640140e8:	call   0x64017ef2
640140ed:	test   eax,eax
640140ef:	pop    ecx
640140f0:	jne    0x640140fd
640140f2:	inc    DWORD PTR ds:0x64038e94
640140f8:	jmp    0x640141a9
640140fd:	call   0x64018326
64014102:	jmp    0x640140cd
64014104:	xor    edi,edi
64014106:	cmp    eax,edi
64014108:	jne    0x6401413f
6401410a:	cmp    DWORD PTR ds:0x64038e94,edi
64014110:	jle    0x6401400a
64014116:	dec    DWORD PTR ds:0x64038e94
6401411c:	cmp    DWORD PTR ds:0x6403923c,edi
64014122:	jne    0x64014129
64014124:	call   0x64018077
64014129:	cmp    DWORD PTR [ebp+0x10],edi
6401412c:	jne    0x640141a9
6401412e:	call   0x64018326
64014133:	call   0x64017677
64014138:	call   0x640188d0
6401413d:	jmp    0x640141a9
6401413f:	cmp    eax,0x2
64014142:	jne    0x6401419d
64014144:	call   0x64017645
64014149:	push   0x214
6401414e:	push   0x1
64014150:	call   0x64015d2f
64014155:	mov    esi,eax
64014157:	cmp    esi,edi
64014159:	pop    ecx
6401415a:	pop    ecx
6401415b:	je     0x6401400a
64014161:	push   esi
64014162:	push   DWORD PTR ds:0x64037904
64014168:	push   DWORD PTR ds:0x64038ec8
6401416e:	call   0x640175ce
64014173:	pop    ecx
64014174:	call   eax
64014176:	test   eax,eax
64014178:	je     0x64014191
6401417a:	push   edi
6401417b:	push   esi
6401417c:	call   0x640176b4
64014181:	pop    ecx
64014182:	pop    ecx
64014183:	call   DWORD PTR ds:0x640240bc
64014189:	or     DWORD PTR [esi+0x4],0xffffffff
6401418d:	mov    DWORD PTR [esi],eax
6401418f:	jmp    0x640141a9
64014191:	push   esi
64014192:	call   0x6401477f
64014197:	pop    ecx
64014198:	jmp    0x6401400a
6401419d:	cmp    eax,0x3
640141a0:	jne    0x640141a9
640141a2:	push   edi
640141a3:	call   0x64017923
640141a8:	pop    ecx
640141a9:	xor    eax,eax
640141ab:	inc    eax
640141ac:	pop    edi
640141ad:	pop    esi
640141ae:	pop    ebx
640141af:	leave  
640141b0:	ret    0xc
640141b3:	push   0xc
640141b5:	push   0x6402b6d8
640141ba:	call   0x64015ed4
640141bf:	mov    edi,ecx
640141c1:	mov    esi,edx
640141c3:	mov    ebx,DWORD PTR [ebp+0x8]
640141c6:	xor    eax,eax
640141c8:	inc    eax
640141c9:	mov    DWORD PTR [ebp-0x1c],eax
640141cc:	test   esi,esi
640141ce:	jne    0x640141dc
640141d0:	cmp    DWORD PTR ds:0x64038e94,edx
640141d6:	je     0x640142a1
640141dc:	and    DWORD PTR [ebp-0x4],0x0
640141e0:	cmp    esi,eax
640141e2:	je     0x640141e9
640141e4:	cmp    esi,0x2
640141e7:	jne    0x64014217
640141e9:	mov    eax,ds:0x64027c04
640141ee:	test   eax,eax
640141f0:	je     0x640141fa
640141f2:	push   edi
640141f3:	push   esi
640141f4:	push   ebx
640141f5:	call   eax
640141f7:	mov    DWORD PTR [ebp-0x1c],eax
640141fa:	cmp    DWORD PTR [ebp-0x1c],0x0
640141fe:	je     0x6401429a
64014204:	push   edi
64014205:	push   esi
64014206:	push   ebx
64014207:	call   0x64013fda
6401420c:	mov    DWORD PTR [ebp-0x1c],eax
6401420f:	test   eax,eax
64014211:	je     0x6401429a
64014217:	push   edi
64014218:	push   esi
64014219:	push   ebx
6401421a:	call   0x6400ae60
6401421f:	mov    DWORD PTR [ebp-0x1c],eax
64014222:	cmp    esi,0x1
64014225:	jne    0x6401424b
64014227:	test   eax,eax
64014229:	jne    0x6401424b
6401422b:	push   edi
6401422c:	push   eax
6401422d:	push   ebx
6401422e:	call   0x6400ae60
64014233:	push   edi
64014234:	push   0x0
64014236:	push   ebx
64014237:	call   0x64013fda
6401423c:	mov    eax,ds:0x64027c04
64014241:	test   eax,eax
64014243:	je     0x6401424b
64014245:	push   edi
64014246:	push   0x0
64014248:	push   ebx
64014249:	call   eax
6401424b:	test   esi,esi
6401424d:	je     0x64014254
6401424f:	cmp    esi,0x3
64014252:	jne    0x6401427a
64014254:	push   edi
64014255:	push   esi
64014256:	push   ebx
64014257:	call   0x64013fda
6401425c:	test   eax,eax
6401425e:	jne    0x64014263
64014260:	and    DWORD PTR [ebp-0x1c],eax
64014263:	cmp    DWORD PTR [ebp-0x1c],0x0
64014267:	je     0x6401427a
64014269:	mov    eax,ds:0x64027c04
6401426e:	test   eax,eax
64014270:	je     0x6401427a
64014272:	push   edi
64014273:	push   esi
64014274:	push   ebx
64014275:	call   eax
64014277:	mov    DWORD PTR [ebp-0x1c],eax
6401427a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014281:	mov    eax,DWORD PTR [ebp-0x1c]
64014284:	jmp    0x640142a3
64014286:	mov    eax,DWORD PTR [ebp-0x14]
64014289:	mov    ecx,DWORD PTR [eax]
6401428b:	mov    ecx,DWORD PTR [ecx]
6401428d:	push   eax
6401428e:	push   ecx
6401428f:	call   0x64018aa3
64014294:	pop    ecx
64014295:	pop    ecx
64014296:	ret    
64014297:	mov    esp,DWORD PTR [ebp-0x18]
6401429a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142a1:	xor    eax,eax
640142a3:	call   0x64015f19
640142a8:	ret    
640142a9:	cmp    DWORD PTR [esp+0x8],0x1
640142ae:	jne    0x640142b5
640142b0:	call   0x64018abe
640142b5:	push   DWORD PTR [esp+0x4]
640142b9:	mov    ecx,DWORD PTR [esp+0x10]
640142bd:	mov    edx,DWORD PTR [esp+0xc]
640142c1:	call   0x640141b3
640142c6:	pop    ecx
640142c7:	ret    0xc
640142ca:	mov    eax,DWORD PTR [esp+0x4]
640142ce:	test   eax,eax
640142d0:	je     0x640142e4
640142d2:	sub    eax,0x8
640142d5:	cmp    DWORD PTR [eax],0xdddd
640142db:	jne    0x640142e4
640142dd:	push   eax
640142de:	call   0x6401477f
640142e3:	pop    ecx
640142e4:	ret    
640142e5:	mov    eax,DWORD PTR [esp+0x4]
640142e9:	test   eax,eax
640142eb:	push   esi
640142ec:	mov    esi,ecx
640142ee:	mov    BYTE PTR [esi+0xc],0x0
640142f2:	jne    0x64014357
640142f4:	call   0x640177ea
640142f9:	mov    DWORD PTR [esi+0x8],eax
640142fc:	mov    ecx,DWORD PTR [eax+0x6c]
640142ff:	mov    DWORD PTR [esi],ecx
64014301:	mov    ecx,DWORD PTR [eax+0x68]
64014304:	mov    DWORD PTR [esi+0x4],ecx
64014307:	mov    ecx,DWORD PTR [esi]
64014309:	cmp    ecx,DWORD PTR ds:0x64037ff0
6401430f:	je     0x64014323
64014311:	mov    ecx,DWORD PTR ds:0x64037f08
64014317:	test   DWORD PTR [eax+0x70],ecx
6401431a:	jne    0x64014323
6401431c:	call   0x64015894
64014321:	mov    DWORD PTR [esi],eax
64014323:	mov    eax,DWORD PTR [esi+0x4]
64014326:	cmp    eax,DWORD PTR ds:0x64037e10
6401432c:	je     0x64014344
6401432e:	mov    eax,DWORD PTR [esi+0x8]
64014331:	mov    ecx,DWORD PTR ds:0x64037f08
64014337:	test   DWORD PTR [eax+0x70],ecx
6401433a:	jne    0x64014344
6401433c:	call   0x64018d60
64014341:	mov    DWORD PTR [esi+0x4],eax
64014344:	mov    eax,DWORD PTR [esi+0x8]
64014347:	test   BYTE PTR [eax+0x70],0x2
6401434b:	jne    0x64014361
6401434d:	or     DWORD PTR [eax+0x70],0x2
64014351:	mov    BYTE PTR [esi+0xc],0x1
64014355:	jmp    0x64014361
64014357:	mov    ecx,DWORD PTR [eax]
64014359:	mov    DWORD PTR [esi],ecx
6401435b:	mov    eax,DWORD PTR [eax+0x4]
6401435e:	mov    DWORD PTR [esi+0x4],eax
64014361:	mov    eax,esi
64014363:	pop    esi
64014364:	ret    0x4
64014367:	push   ebp
64014368:	mov    ebp,esp
6401436a:	sub    esp,0xc
6401436d:	mov    eax,ds:0x64037644
64014372:	xor    eax,ebp
64014374:	mov    DWORD PTR [ebp-0x4],eax
64014377:	push   esi
64014378:	xor    esi,esi
6401437a:	cmp    ebx,esi
6401437c:	push   edi
6401437d:	jne    0x6401439d
6401437f:	call   0x64016483
64014384:	push   0x16
64014386:	pop    edi
64014387:	push   esi
64014388:	push   esi
64014389:	push   esi
6401438a:	push   esi
6401438b:	push   esi
6401438c:	mov    DWORD PTR [eax],edi
6401438e:	call   0x64013e12
64014393:	add    esp,0x14
64014396:	mov    eax,edi
64014398:	jmp    0x640144dd
6401439d:	push   DWORD PTR [ebp+0x8]
640143a0:	push   ebx
640143a1:	call   0x6401951c
640143a6:	cmp    eax,DWORD PTR [ebp+0x8]
640143a9:	pop    ecx
640143aa:	pop    ecx
640143ab:	jb     0x640143b2
640143ad:	mov    WORD PTR [ebx],si
640143b0:	jmp    0x6401437f
640143b2:	mov    edx,DWORD PTR [ebp+0xc]
640143b5:	mov    eax,DWORD PTR [edx]
640143b7:	mov    ecx,DWORD PTR [eax+0x14]
640143ba:	cmp    ecx,esi
640143bc:	jne    0x640143e8
640143be:	cmp    WORD PTR [ebx],si
640143c1:	mov    eax,ebx
640143c3:	je     0x640143e1
640143c5:	movzx  ecx,WORD PTR [eax]
640143c8:	cmp    cx,0x41
640143cc:	jb     0x640143da
640143ce:	cmp    cx,0x5a
640143d2:	ja     0x640143da
640143d4:	add    ecx,0x20
640143d7:	mov    WORD PTR [eax],cx
640143da:	inc    eax
640143db:	inc    eax
640143dc:	cmp    WORD PTR [eax],si
640143df:	jne    0x640143c5
640143e1:	xor    eax,eax
640143e3:	jmp    0x640144dd
640143e8:	push   DWORD PTR [eax+0x4]
640143eb:	mov    edi,0x100
640143f0:	push   esi
640143f1:	push   esi
640143f2:	push   0xffffffff
640143f4:	push   ebx
640143f5:	push   edi
640143f6:	push   ecx
640143f7:	push   edx
640143f8:	call   0x640194dc
640143fd:	mov    ecx,eax
640143ff:	add    esp,0x20
64014402:	cmp    ecx,esi
64014404:	mov    DWORD PTR [ebp-0xc],ecx
64014407:	jne    0x64014420
64014409:	call   0x64016483
6401440e:	mov    DWORD PTR [eax],0x2a
64014414:	call   0x64016483
64014419:	mov    eax,DWORD PTR [eax]
6401441b:	jmp    0x640144dd
64014420:	cmp    DWORD PTR [ebp+0x8],ecx
64014423:	jae    0x64014434
64014425:	mov    WORD PTR [ebx],si
64014428:	call   0x64016483
6401442d:	push   0x22
6401442f:	jmp    0x64014386
64014434:	cmp    ecx,esi
64014436:	jle    0x6401447e
64014438:	push   0xffffffe0
6401443a:	xor    edx,edx
6401443c:	pop    eax
6401443d:	div    ecx
6401443f:	cmp    eax,0x2
64014442:	jb     0x6401447e
64014444:	lea    eax,[ecx+ecx*1+0x8]
64014448:	cmp    eax,0x400
6401444d:	ja     0x64014462
6401444f:	call   0x64013ce0
64014454:	mov    eax,esp
64014456:	cmp    eax,esi
64014458:	je     0x64014476
6401445a:	mov    DWORD PTR [eax],0xcccc
64014460:	jmp    0x64014473
64014462:	push   eax
64014463:	call   0x6401487e
64014468:	cmp    eax,esi
6401446a:	pop    ecx
6401446b:	je     0x64014476
6401446d:	mov    DWORD PTR [eax],0xdddd
64014473:	add    eax,0x8
64014476:	mov    ecx,DWORD PTR [ebp-0xc]
64014479:	mov    DWORD PTR [ebp-0x8],eax
6401447c:	jmp    0x64014481
6401447e:	mov    DWORD PTR [ebp-0x8],esi
64014481:	cmp    DWORD PTR [ebp-0x8],esi
64014484:	jne    0x64014493
64014486:	call   0x64016483
6401448b:	mov    DWORD PTR [eax],0xc
64014491:	jmp    0x64014414
64014493:	mov    edx,DWORD PTR [ebp+0xc]
64014496:	mov    eax,DWORD PTR [edx]
64014498:	push   DWORD PTR [eax+0x4]
6401449b:	push   ecx
6401449c:	push   DWORD PTR [ebp-0x8]
6401449f:	push   0xffffffff
640144a1:	push   ebx
640144a2:	push   edi
640144a3:	push   DWORD PTR [eax+0x14]
640144a6:	push   edx
640144a7:	call   0x640194dc
640144ac:	add    esp,0x20
640144af:	test   eax,eax
640144b1:	je     0x640144c6
640144b3:	push   DWORD PTR [ebp-0x8]
640144b6:	push   DWORD PTR [ebp+0x8]
640144b9:	push   ebx
640144ba:	call   0x6401920f
640144bf:	add    esp,0xc
640144c2:	mov    esi,eax
640144c4:	jmp    0x640144d2
640144c6:	call   0x64016483
640144cb:	push   0x2a
640144cd:	pop    ecx
640144ce:	mov    DWORD PTR [eax],ecx
640144d0:	mov    esi,ecx
640144d2:	push   DWORD PTR [ebp-0x8]
640144d5:	call   0x640142ca
640144da:	pop    ecx
640144db:	mov    eax,esi
640144dd:	lea    esp,[ebp-0x14]
640144e0:	pop    edi
640144e1:	pop    esi
640144e2:	mov    ecx,DWORD PTR [ebp-0x4]
640144e5:	xor    ecx,ebp
640144e7:	call   0x64013cc6
640144ec:	leave  
640144ed:	ret    
640144ee:	push   ebp
640144ef:	mov    ebp,esp
640144f1:	sub    esp,0x10
640144f4:	push   ebx
640144f5:	push   DWORD PTR [ebp+0x10]
640144f8:	lea    ecx,[ebp-0x10]
640144fb:	call   0x640142e5
64014500:	mov    ebx,DWORD PTR [ebp+0x8]
64014503:	lea    eax,[ebp-0x10]
64014506:	push   eax
64014507:	push   DWORD PTR [ebp+0xc]
6401450a:	call   0x64014367
6401450f:	cmp    BYTE PTR [ebp-0x4],0x0
64014513:	pop    ecx
64014514:	pop    ecx
64014515:	pop    ebx
64014516:	je     0x6401451f
64014518:	mov    ecx,DWORD PTR [ebp-0x8]
6401451b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401451f:	leave  
64014520:	ret    
64014521:	push   0x0
64014523:	push   DWORD PTR [esp+0xc]
64014527:	push   DWORD PTR [esp+0xc]
6401452b:	call   0x640144ee
64014530:	add    esp,0xc
64014533:	ret    
64014534:	jmp    0x64013604
64014539:	cmp    DWORD PTR [esp+0x8],0x0
6401453e:	je     0x64014546
64014540:	mov    BYTE PTR [ecx],0x2d
64014543:	inc    ecx
64014544:	neg    eax
64014546:	push   esi
64014547:	mov    esi,ecx
64014549:	xor    edx,edx
6401454b:	div    DWORD PTR [esp+0x8]
6401454f:	cmp    edx,0x9
64014552:	jbe    0x64014559
64014554:	add    dl,0x57
64014557:	jmp    0x6401455c
64014559:	add    dl,0x30
6401455c:	mov    BYTE PTR [ecx],dl
6401455e:	inc    ecx
6401455f:	test   eax,eax
64014561:	ja     0x64014549
64014563:	mov    BYTE PTR [ecx],0x0
64014566:	dec    ecx
64014567:	mov    dl,BYTE PTR [esi]
64014569:	mov    al,BYTE PTR [ecx]
6401456b:	mov    BYTE PTR [ecx],dl
6401456d:	dec    ecx
6401456e:	mov    BYTE PTR [esi],al
64014570:	inc    esi
64014571:	cmp    esi,ecx
64014573:	jb     0x64014567
64014575:	pop    esi
64014576:	ret    0x8
64014579:	push   ebp
6401457a:	mov    ebp,esp
6401457c:	xor    eax,eax
6401457e:	cmp    DWORD PTR [ebp+0x10],0xa
64014582:	jne    0x6401458a
64014584:	cmp    DWORD PTR [ebp+0x8],eax
64014587:	jge    0x6401458a
64014589:	inc    eax
6401458a:	mov    ecx,DWORD PTR [ebp+0xc]
6401458d:	push   eax
6401458e:	push   DWORD PTR [ebp+0x10]
64014591:	mov    eax,DWORD PTR [ebp+0x8]
64014594:	call   0x64014539
64014599:	mov    eax,DWORD PTR [ebp+0xc]
6401459c:	pop    ebp
6401459d:	ret    
6401459e:	push   ebx
6401459f:	push   esi
640145a0:	mov    esi,DWORD PTR [esp+0xc]
640145a4:	push   edi
640145a5:	xor    edi,edi
640145a7:	or     ebx,0xffffffff
640145aa:	cmp    esi,edi
640145ac:	jne    0x640145ca
640145ae:	call   0x64016483
640145b3:	push   edi
640145b4:	push   edi
640145b5:	push   edi
640145b6:	push   edi
640145b7:	push   edi
640145b8:	mov    DWORD PTR [eax],0x16
640145be:	call   0x64013e12
640145c3:	add    esp,0x14
640145c6:	or     eax,ebx
640145c8:	jmp    0x6401460c
640145ca:	test   BYTE PTR [esi+0xc],0x83
640145ce:	je     0x64014607
640145d0:	push   esi
640145d1:	call   0x64019c74
640145d6:	push   esi
640145d7:	mov    ebx,eax
640145d9:	call   0x64019c48
640145de:	push   esi
640145df:	call   0x64019c1b
640145e4:	push   eax
640145e5:	call   0x64014ba8
640145ea:	add    esp,0x10
640145ed:	test   eax,eax
640145ef:	jge    0x640145f6
640145f1:	or     ebx,0xffffffff
640145f4:	jmp    0x64014607
640145f6:	mov    eax,DWORD PTR [esi+0x1c]
640145f9:	cmp    eax,edi
640145fb:	je     0x64014607
640145fd:	push   eax
640145fe:	call   0x6401477f
64014603:	pop    ecx
64014604:	mov    DWORD PTR [esi+0x1c],edi
64014607:	mov    DWORD PTR [esi+0xc],edi
6401460a:	mov    eax,ebx
6401460c:	pop    edi
6401460d:	pop    esi
6401460e:	pop    ebx
6401460f:	ret    
64014610:	push   0xc
64014612:	push   0x6402b6f8
64014617:	call   0x64015ed4
6401461c:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014620:	xor    eax,eax
64014622:	mov    esi,DWORD PTR [ebp+0x8]
64014625:	xor    edi,edi
64014627:	cmp    esi,edi
64014629:	setne  al
6401462c:	cmp    eax,edi
6401462e:	jne    0x6401464d
64014630:	call   0x64016483
64014635:	mov    DWORD PTR [eax],0x16
6401463b:	push   edi
6401463c:	push   edi
6401463d:	push   edi
6401463e:	push   edi
6401463f:	push   edi
64014640:	call   0x64013e12
64014645:	add    esp,0x14
64014648:	or     eax,0xffffffff
6401464b:	jmp    0x64014659
6401464d:	test   BYTE PTR [esi+0xc],0x40
64014651:	je     0x6401465f
64014653:	mov    DWORD PTR [esi+0xc],edi
64014656:	mov    eax,DWORD PTR [ebp-0x1c]
64014659:	call   0x64015f19
6401465e:	ret    
6401465f:	push   esi
64014660:	call   0x640199fc
64014665:	pop    ecx
64014666:	mov    DWORD PTR [ebp-0x4],edi
64014669:	push   esi
6401466a:	call   0x6401459e
6401466f:	pop    ecx
64014670:	mov    DWORD PTR [ebp-0x1c],eax
64014673:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401467a:	call   0x64014684
6401467f:	jmp    0x64014656
64014681:	mov    esi,DWORD PTR [ebp+0x8]
64014684:	push   esi
64014685:	call   0x64019a66
6401468a:	pop    ecx
6401468b:	ret    
6401468c:	push   ebp
6401468d:	mov    ebp,esp
6401468f:	sub    esp,0x20
64014692:	push   ebx
64014693:	xor    ebx,ebx
64014695:	cmp    DWORD PTR [ebp+0xc],ebx
64014698:	jne    0x640146b7
6401469a:	call   0x64016483
6401469f:	push   ebx
640146a0:	push   ebx
640146a1:	push   ebx
640146a2:	push   ebx
640146a3:	push   ebx
640146a4:	mov    DWORD PTR [eax],0x16
640146aa:	call   0x64013e12
640146af:	add    esp,0x14
640146b2:	or     eax,0xffffffff
640146b5:	jmp    0x64014704
640146b7:	mov    eax,DWORD PTR [ebp+0x8]
640146ba:	cmp    eax,ebx
640146bc:	je     0x6401469a
640146be:	push   esi
640146bf:	mov    DWORD PTR [ebp-0x18],eax
640146c2:	mov    DWORD PTR [ebp-0x20],eax
640146c5:	lea    eax,[ebp+0x10]
640146c8:	push   eax
640146c9:	push   ebx
640146ca:	push   DWORD PTR [ebp+0xc]
640146cd:	lea    eax,[ebp-0x20]
640146d0:	push   eax
640146d1:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640146d8:	mov    DWORD PTR [ebp-0x14],0x42
640146df:	call   0x64019ffc
640146e4:	add    esp,0x10
640146e7:	dec    DWORD PTR [ebp-0x1c]
640146ea:	mov    esi,eax
640146ec:	js     0x640146f5
640146ee:	mov    eax,DWORD PTR [ebp-0x20]
640146f1:	mov    BYTE PTR [eax],bl
640146f3:	jmp    0x64014701
640146f5:	lea    eax,[ebp-0x20]
640146f8:	push   eax
640146f9:	push   ebx
640146fa:	call   0x64019dfb
640146ff:	pop    ecx
64014700:	pop    ecx
64014701:	mov    eax,esi
64014703:	pop    esi
64014704:	pop    ebx
64014705:	leave  
64014706:	ret    
64014707:	push   ebp
64014708:	mov    ebp,esp
6401470a:	sub    esp,0x10
6401470d:	push   DWORD PTR [ebp+0xc]
64014710:	lea    ecx,[ebp-0x10]
64014713:	call   0x640142e5
64014718:	mov    eax,DWORD PTR [ebp-0x10]
6401471b:	cmp    DWORD PTR [eax+0xac],0x1
64014722:	jle    0x64014737
64014724:	lea    eax,[ebp-0x10]
64014727:	push   eax
64014728:	push   0x4
6401472a:	push   DWORD PTR [ebp+0x8]
6401472d:	call   0x6401a990
64014732:	add    esp,0xc
64014735:	jmp    0x64014747
64014737:	mov    eax,DWORD PTR [eax+0xc8]
6401473d:	mov    ecx,DWORD PTR [ebp+0x8]
64014740:	movzx  eax,BYTE PTR [eax+ecx*2]
64014744:	and    eax,0x4
64014747:	cmp    BYTE PTR [ebp-0x4],0x0
6401474b:	je     0x64014754
6401474d:	mov    ecx,DWORD PTR [ebp-0x8]
64014750:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014754:	leave  
64014755:	ret    
64014756:	cmp    DWORD PTR ds:0x64038ea8,0x0
6401475d:	jne    0x64014771
6401475f:	mov    eax,DWORD PTR [esp+0x4]
64014763:	mov    ecx,DWORD PTR ds:0x64037fe0
64014769:	movzx  eax,BYTE PTR [ecx+eax*2]
6401476d:	and    eax,0x4
64014770:	ret    
64014771:	push   0x0
64014773:	push   DWORD PTR [esp+0x8]
64014777:	call   0x64014707
6401477c:	pop    ecx
6401477d:	pop    ecx
6401477e:	ret    
6401477f:	push   0xc
64014781:	push   0x6402b718
64014786:	call   0x64015ed4
6401478b:	mov    esi,DWORD PTR [ebp+0x8]
6401478e:	test   esi,esi
64014790:	je     0x64014807
64014792:	cmp    DWORD PTR ds:0x6403ab44,0x3
64014799:	jne    0x640147de
6401479b:	push   0x4
6401479d:	call   0x6401b2ba
640147a2:	pop    ecx
640147a3:	and    DWORD PTR [ebp-0x4],0x0
640147a7:	push   esi
640147a8:	call   0x6401b333
640147ad:	pop    ecx
640147ae:	mov    DWORD PTR [ebp-0x1c],eax
640147b1:	test   eax,eax
640147b3:	je     0x640147be
640147b5:	push   esi
640147b6:	push   eax
640147b7:	call   0x6401b35e
640147bc:	pop    ecx
640147bd:	pop    ecx
640147be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640147c5:	call   0x640147d5
640147ca:	cmp    DWORD PTR [ebp-0x1c],0x0
640147ce:	jne    0x64014807
640147d0:	push   DWORD PTR [ebp+0x8]
640147d3:	jmp    0x640147df
640147d5:	push   0x4
640147d7:	call   0x6401b1e2
640147dc:	pop    ecx
640147dd:	ret    
640147de:	push   esi
640147df:	push   0x0
640147e1:	push   DWORD PTR ds:0x64039354
640147e7:	call   DWORD PTR ds:0x64024184
640147ed:	test   eax,eax
640147ef:	jne    0x64014807
640147f1:	call   0x64016483
640147f6:	mov    esi,eax
640147f8:	call   DWORD PTR ds:0x64024068
640147fe:	push   eax
640147ff:	call   0x64016448
64014804:	mov    DWORD PTR [esi],eax
64014806:	pop    ecx
64014807:	call   0x64015f19
6401480c:	ret    
6401480d:	mov    eax,DWORD PTR [esp+0x4]
64014811:	mov    dx,WORD PTR [esp+0x8]
64014816:	jmp    0x6401481f
64014818:	cmp    cx,dx
6401481b:	je     0x6401482e
6401481d:	inc    eax
6401481e:	inc    eax
6401481f:	movzx  ecx,WORD PTR [eax]
64014822:	test   cx,cx
64014825:	jne    0x64014818
64014827:	cmp    WORD PTR [eax],dx
6401482a:	je     0x6401482e
6401482c:	xor    eax,eax
6401482e:	ret    
6401482f:	push   0xc
64014831:	push   0x6402b738
64014836:	call   0x64015ed4
6401483b:	and    DWORD PTR [ebp-0x1c],0x0
6401483f:	mov    esi,DWORD PTR [ebp+0x8]
64014842:	cmp    esi,DWORD PTR ds:0x64039b24
64014848:	ja     0x6401486c
6401484a:	push   0x4
6401484c:	call   0x6401b2ba
64014851:	pop    ecx
64014852:	and    DWORD PTR [ebp-0x4],0x0
64014856:	push   esi
64014857:	call   0x6401bb07
6401485c:	pop    ecx
6401485d:	mov    DWORD PTR [ebp-0x1c],eax
64014860:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014867:	call   0x64014875
6401486c:	mov    eax,DWORD PTR [ebp-0x1c]
6401486f:	call   0x64015f19
64014874:	ret    
64014875:	push   0x4
64014877:	call   0x6401b1e2
6401487c:	pop    ecx
6401487d:	ret    
6401487e:	push   ebp
6401487f:	mov    ebp,DWORD PTR [esp+0x8]
64014883:	cmp    ebp,0xffffffe0
64014886:	ja     0x6401492b
6401488c:	push   ebx
6401488d:	mov    ebx,DWORD PTR ds:0x64024180
64014893:	push   esi
64014894:	push   edi
64014895:	xor    esi,esi
64014897:	cmp    DWORD PTR ds:0x64039354,esi
6401489d:	mov    edi,ebp
6401489f:	jne    0x640148b9
640148a1:	call   0x6401bfbd
640148a6:	push   0x1e
640148a8:	call   0x6401be1d
640148ad:	push   0xff
640148b2:	call   0x64017e20
640148b7:	pop    ecx
640148b8:	pop    ecx
640148b9:	mov    eax,ds:0x6403ab44
640148be:	cmp    eax,0x1
640148c1:	jne    0x640148d1
640148c3:	cmp    ebp,esi
640148c5:	je     0x640148cb
640148c7:	mov    eax,ebp
640148c9:	jmp    0x640148ce
640148cb:	xor    eax,eax
640148cd:	inc    eax
640148ce:	push   eax
640148cf:	jmp    0x640148ef
640148d1:	cmp    eax,0x3
640148d4:	jne    0x640148e1
640148d6:	push   ebp
640148d7:	call   0x6401482f
640148dc:	cmp    eax,esi
640148de:	pop    ecx
640148df:	jne    0x640148f8
640148e1:	cmp    ebp,esi
640148e3:	jne    0x640148e8
640148e5:	xor    edi,edi
640148e7:	inc    edi
640148e8:	add    edi,0xf
640148eb:	and    edi,0xfffffff0
640148ee:	push   edi
640148ef:	push   esi
640148f0:	push   DWORD PTR ds:0x64039354
640148f6:	call   ebx
640148f8:	mov    esi,eax
640148fa:	test   esi,esi
640148fc:	jne    0x64014924
640148fe:	cmp    DWORD PTR ds:0x6403980c,eax
64014904:	push   0xc
64014906:	pop    edi
64014907:	je     0x64014916
64014909:	push   ebp
6401490a:	call   0x6401683f
6401490f:	test   eax,eax
64014911:	pop    ecx
64014912:	jne    0x64014895
64014914:	jmp    0x6401491d
64014916:	call   0x64016483
6401491b:	mov    DWORD PTR [eax],edi
6401491d:	call   0x64016483
64014922:	mov    DWORD PTR [eax],edi
64014924:	pop    edi
64014925:	mov    eax,esi
64014927:	pop    esi
64014928:	pop    ebx
64014929:	pop    ebp
6401492a:	ret    
6401492b:	push   ebp
6401492c:	call   0x6401683f
64014931:	pop    ecx
64014932:	call   0x64016483
64014937:	mov    DWORD PTR [eax],0xc
6401493d:	xor    eax,eax
6401493f:	pop    ebp
64014940:	ret    
64014941:	push   ebp
64014942:	mov    ebp,esp
64014944:	sub    esp,0x10
64014947:	push   ebx
64014948:	push   esi
64014949:	push   DWORD PTR [ebp+0x10]
6401494c:	lea    ecx,[ebp-0x10]
6401494f:	call   0x640142e5
64014954:	mov    ebx,DWORD PTR [ebp+0x8]
64014957:	xor    esi,esi
64014959:	cmp    ebx,esi
6401495b:	jne    0x6401498c
6401495d:	call   0x64016483
64014962:	push   esi
64014963:	push   esi
64014964:	push   esi
64014965:	push   esi
64014966:	push   esi
64014967:	mov    DWORD PTR [eax],0x16
6401496d:	call   0x64013e12
64014972:	add    esp,0x14
64014975:	cmp    BYTE PTR [ebp-0x4],0x0
64014979:	je     0x64014982
6401497b:	mov    eax,DWORD PTR [ebp-0x8]
6401497e:	and    DWORD PTR [eax+0x70],0xfffffffd
64014982:	mov    eax,0x7fffffff
64014987:	jmp    0x64014a4c
6401498c:	push   edi
6401498d:	mov    edi,DWORD PTR [ebp+0xc]
64014990:	cmp    edi,esi
64014992:	jne    0x640149c3
64014994:	call   0x64016483
64014999:	push   esi
6401499a:	push   esi
6401499b:	push   esi
6401499c:	push   esi
6401499d:	push   esi
6401499e:	mov    DWORD PTR [eax],0x16
640149a4:	call   0x64013e12
640149a9:	add    esp,0x14
640149ac:	cmp    BYTE PTR [ebp-0x4],0x0
640149b0:	je     0x640149b9
640149b2:	mov    eax,DWORD PTR [ebp-0x8]
640149b5:	and    DWORD PTR [eax+0x70],0xfffffffd
640149b9:	mov    eax,0x7fffffff
640149be:	jmp    0x64014a4b
640149c3:	mov    eax,DWORD PTR [ebp-0x10]
640149c6:	cmp    DWORD PTR [eax+0x14],esi
640149c9:	jne    0x64014a05
640149cb:	movzx  eax,WORD PTR [ebx]
640149ce:	cmp    ax,0x41
640149d2:	jb     0x640149dd
640149d4:	cmp    ax,0x5a
640149d8:	ja     0x640149dd
640149da:	add    eax,0x20
640149dd:	movzx  esi,ax
640149e0:	movzx  eax,WORD PTR [edi]
640149e3:	cmp    ax,0x41
640149e7:	jb     0x640149f2
640149e9:	cmp    ax,0x5a
640149ed:	ja     0x640149f2
640149ef:	add    eax,0x20
640149f2:	inc    ebx
640149f3:	inc    ebx
640149f4:	inc    edi
640149f5:	inc    edi
640149f6:	test   si,si
640149f9:	movzx  eax,ax
640149fc:	je     0x64014a36
640149fe:	cmp    si,ax
64014a01:	je     0x640149cb
64014a03:	jmp    0x64014a36
64014a05:	movzx  eax,WORD PTR [ebx]
64014a08:	lea    ecx,[ebp-0x10]
64014a0b:	push   ecx
64014a0c:	push   eax
64014a0d:	call   0x6401bff6
64014a12:	movzx  esi,ax
64014a15:	movzx  eax,WORD PTR [edi]
64014a18:	lea    ecx,[ebp-0x10]
64014a1b:	push   ecx
64014a1c:	inc    ebx
64014a1d:	push   eax
64014a1e:	inc    ebx
64014a1f:	call   0x6401bff6
64014a24:	add    esp,0x10
64014a27:	inc    edi
64014a28:	inc    edi
64014a29:	test   si,si
64014a2c:	movzx  eax,ax
64014a2f:	je     0x64014a36
64014a31:	cmp    si,ax
64014a34:	je     0x64014a05
64014a36:	movzx  ecx,ax
64014a39:	movzx  eax,si
64014a3c:	sub    eax,ecx
64014a3e:	cmp    BYTE PTR [ebp-0x4],0x0
64014a42:	je     0x64014a4b
64014a44:	mov    ecx,DWORD PTR [ebp-0x8]
64014a47:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014a4b:	pop    edi
64014a4c:	pop    esi
64014a4d:	pop    ebx
64014a4e:	leave  
64014a4f:	ret    
64014a50:	push   esi
64014a51:	xor    esi,esi
64014a53:	cmp    DWORD PTR ds:0x64038ea8,esi
64014a59:	push   edi
64014a5a:	jne    0x64014acd
64014a5c:	mov    edi,DWORD PTR [esp+0xc]
64014a60:	cmp    edi,esi
64014a62:	jne    0x64014a83
64014a64:	call   0x64016483
64014a69:	push   esi
64014a6a:	push   esi
64014a6b:	push   esi
64014a6c:	push   esi
64014a6d:	push   esi
64014a6e:	mov    DWORD PTR [eax],0x16
64014a74:	call   0x64013e12
64014a79:	add    esp,0x14
64014a7c:	mov    eax,0x7fffffff
64014a81:	jmp    0x64014ade
64014a83:	mov    edx,DWORD PTR [esp+0x10]
64014a87:	cmp    edx,esi
64014a89:	je     0x64014a64
64014a8b:	movzx  eax,WORD PTR [edi]
64014a8e:	cmp    ax,0x41
64014a92:	jb     0x64014a9d
64014a94:	cmp    ax,0x5a
64014a98:	ja     0x64014a9d
64014a9a:	add    eax,0x20
64014a9d:	movzx  ecx,ax
64014aa0:	movzx  eax,WORD PTR [edx]
64014aa3:	cmp    ax,0x41
64014aa7:	jb     0x64014ab2
64014aa9:	cmp    ax,0x5a
64014aad:	ja     0x64014ab2
64014aaf:	add    eax,0x20
64014ab2:	inc    edi
64014ab3:	inc    edi
64014ab4:	inc    edx
64014ab5:	inc    edx
64014ab6:	cmp    cx,si
64014ab9:	movzx  eax,ax
64014abc:	je     0x64014ac3
64014abe:	cmp    cx,ax
64014ac1:	je     0x64014a8b
64014ac3:	movzx  edx,ax
64014ac6:	movzx  eax,cx
64014ac9:	sub    eax,edx
64014acb:	jmp    0x64014ade
64014acd:	push   esi
64014ace:	push   DWORD PTR [esp+0x14]
64014ad2:	push   DWORD PTR [esp+0x14]
64014ad6:	call   0x64014941
64014adb:	add    esp,0xc
64014ade:	pop    edi
64014adf:	pop    esi
64014ae0:	ret    
64014ae1:	mov    eax,DWORD PTR [esp+0x4]
64014ae5:	mov    edx,eax
64014ae7:	mov    cx,WORD PTR [eax]
64014aea:	inc    eax
64014aeb:	inc    eax
64014aec:	test   cx,cx
64014aef:	jne    0x64014ae7
64014af1:	mov    cx,WORD PTR [esp+0x8]
64014af6:	dec    eax
64014af7:	dec    eax
64014af8:	cmp    eax,edx
64014afa:	je     0x64014b01
64014afc:	cmp    WORD PTR [eax],cx
64014aff:	jne    0x64014af6
64014b01:	mov    dx,WORD PTR [eax]
64014b04:	sub    dx,cx
64014b07:	neg    dx
64014b0a:	sbb    edx,edx
64014b0c:	not    edx
64014b0e:	and    eax,edx
64014b10:	ret    
64014b11:	push   esi
64014b12:	mov    esi,DWORD PTR [esp+0x8]
64014b16:	push   edi
64014b17:	push   esi
64014b18:	call   0x64019755
64014b1d:	cmp    eax,0xffffffff
64014b20:	pop    ecx
64014b21:	je     0x64014b73
64014b23:	cmp    esi,0x1
64014b26:	mov    eax,ds:0x6403ab60
64014b2b:	jne    0x64014b36
64014b2d:	test   BYTE PTR [eax+0x84],0x1
64014b34:	jne    0x64014b41
64014b36:	cmp    esi,0x2
64014b39:	jne    0x64014b57
64014b3b:	test   BYTE PTR [eax+0x44],0x1
64014b3f:	je     0x64014b57
64014b41:	push   0x2
64014b43:	call   0x64019755
64014b48:	push   0x1
64014b4a:	mov    edi,eax
64014b4c:	call   0x64019755
64014b51:	cmp    eax,edi
64014b53:	pop    ecx
64014b54:	pop    ecx
64014b55:	je     0x64014b73
64014b57:	push   esi
64014b58:	call   0x64019755
64014b5d:	pop    ecx
64014b5e:	push   eax
64014b5f:	call   DWORD PTR ds:0x64024074
64014b65:	test   eax,eax
64014b67:	jne    0x64014b73
64014b69:	call   DWORD PTR ds:0x64024068
64014b6f:	mov    edi,eax
64014b71:	jmp    0x64014b75
64014b73:	xor    edi,edi
64014b75:	push   esi
64014b76:	call   0x640196d4
64014b7b:	mov    eax,esi
64014b7d:	sar    eax,0x5
64014b80:	mov    eax,DWORD PTR [eax*4+0x6403ab60]
64014b87:	and    esi,0x1f
64014b8a:	shl    esi,0x6
64014b8d:	test   edi,edi
64014b8f:	pop    ecx
64014b90:	mov    BYTE PTR [eax+esi*1+0x4],0x0
64014b95:	je     0x64014ba3
64014b97:	push   edi
64014b98:	call   0x640164a9
64014b9d:	pop    ecx
64014b9e:	or     eax,0xffffffff
64014ba1:	jmp    0x64014ba5
64014ba3:	xor    eax,eax
64014ba5:	pop    edi
64014ba6:	pop    esi
64014ba7:	ret    
64014ba8:	push   0x10
64014baa:	push   0x6402b758
64014baf:	call   0x64015ed4
64014bb4:	mov    eax,DWORD PTR [ebp+0x8]
64014bb7:	cmp    eax,0xfffffffe
64014bba:	jne    0x64014bd7
64014bbc:	call   0x64016496
64014bc1:	and    DWORD PTR [eax],0x0
64014bc4:	call   0x64016483
64014bc9:	mov    DWORD PTR [eax],0x9
64014bcf:	or     eax,0xffffffff
64014bd2:	jmp    0x64014c65
64014bd7:	xor    edi,edi
64014bd9:	cmp    eax,edi
64014bdb:	jl     0x64014be5
64014bdd:	cmp    eax,DWORD PTR ds:0x6403ab48
64014be3:	jb     0x64014c06
64014be5:	call   0x64016496
64014bea:	mov    DWORD PTR [eax],edi
64014bec:	call   0x64016483
64014bf1:	mov    DWORD PTR [eax],0x9
64014bf7:	push   edi
64014bf8:	push   edi
64014bf9:	push   edi
64014bfa:	push   edi
64014bfb:	push   edi
64014bfc:	call   0x64013e12
64014c01:	add    esp,0x14
64014c04:	jmp    0x64014bcf
64014c06:	mov    ecx,eax
64014c08:	sar    ecx,0x5
64014c0b:	lea    ebx,[ecx*4+0x6403ab60]
64014c12:	mov    esi,eax
64014c14:	and    esi,0x1f
64014c17:	shl    esi,0x6
64014c1a:	mov    ecx,DWORD PTR [ebx]
64014c1c:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64014c21:	and    ecx,0x1
64014c24:	je     0x64014be5
64014c26:	push   eax
64014c27:	call   0x640197c6
64014c2c:	pop    ecx
64014c2d:	mov    DWORD PTR [ebp-0x4],edi
64014c30:	mov    eax,DWORD PTR [ebx]
64014c32:	test   BYTE PTR [eax+esi*1+0x4],0x1
64014c37:	je     0x64014c47
64014c39:	push   DWORD PTR [ebp+0x8]
64014c3c:	call   0x64014b11
64014c41:	pop    ecx
64014c42:	mov    DWORD PTR [ebp-0x1c],eax
64014c45:	jmp    0x64014c56
64014c47:	call   0x64016483
64014c4c:	mov    DWORD PTR [eax],0x9
64014c52:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014c56:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c5d:	call   0x64014c6b
64014c62:	mov    eax,DWORD PTR [ebp-0x1c]
64014c65:	call   0x64015f19
64014c6a:	ret    
64014c6b:	push   DWORD PTR [ebp+0x8]
64014c6e:	call   0x64019866
64014c73:	pop    ecx
64014c74:	ret    
64014c75:	push   ebp
64014c76:	mov    ebp,esp
64014c78:	sub    esp,0x18
64014c7b:	push   ebx
64014c7c:	push   esi
64014c7d:	push   DWORD PTR [ebp+0xc]
64014c80:	lea    ecx,[ebp-0x18]
64014c83:	call   0x640142e5
64014c88:	mov    ebx,DWORD PTR [ebp+0x8]
64014c8b:	mov    esi,0x100
64014c90:	cmp    ebx,esi
64014c92:	jae    0x64014ce8
64014c94:	mov    ecx,DWORD PTR [ebp-0x18]
64014c97:	cmp    DWORD PTR [ecx+0xac],0x1
64014c9e:	jle    0x64014cb4
64014ca0:	lea    eax,[ebp-0x18]
64014ca3:	push   eax
64014ca4:	push   0x1
64014ca6:	push   ebx
64014ca7:	call   0x6401a990
64014cac:	mov    ecx,DWORD PTR [ebp-0x18]
64014caf:	add    esp,0xc
64014cb2:	jmp    0x64014cc1
64014cb4:	mov    eax,DWORD PTR [ecx+0xc8]
64014cba:	movzx  eax,BYTE PTR [eax+ebx*2]
64014cbe:	and    eax,0x1
64014cc1:	test   eax,eax
64014cc3:	je     0x64014cd4
64014cc5:	mov    eax,DWORD PTR [ecx+0xcc]
64014ccb:	movzx  eax,BYTE PTR [eax+ebx*1]
64014ccf:	jmp    0x64014d7b
64014cd4:	cmp    BYTE PTR [ebp-0xc],0x0
64014cd8:	je     0x64014ce1
64014cda:	mov    eax,DWORD PTR [ebp-0x10]
64014cdd:	and    DWORD PTR [eax+0x70],0xfffffffd
64014ce1:	mov    eax,ebx
64014ce3:	jmp    0x64014d88
64014ce8:	mov    eax,DWORD PTR [ebp-0x18]
64014ceb:	cmp    DWORD PTR [eax+0xac],0x1
64014cf2:	jle    0x64014d25
64014cf4:	mov    DWORD PTR [ebp+0x8],ebx
64014cf7:	sar    DWORD PTR [ebp+0x8],0x8
64014cfb:	lea    eax,[ebp-0x18]
64014cfe:	push   eax
64014cff:	mov    eax,DWORD PTR [ebp+0x8]
64014d02:	and    eax,0xff
64014d07:	push   eax
64014d08:	call   0x640150d7
64014d0d:	test   eax,eax
64014d0f:	pop    ecx
64014d10:	pop    ecx
64014d11:	je     0x64014d25
64014d13:	mov    al,BYTE PTR [ebp+0x8]
64014d16:	push   0x2
64014d18:	mov    BYTE PTR [ebp-0x4],al
64014d1b:	mov    BYTE PTR [ebp-0x3],bl
64014d1e:	mov    BYTE PTR [ebp-0x2],0x0
64014d22:	pop    ecx
64014d23:	jmp    0x64014d3a
64014d25:	call   0x64016483
64014d2a:	mov    DWORD PTR [eax],0x2a
64014d30:	xor    ecx,ecx
64014d32:	mov    BYTE PTR [ebp-0x4],bl
64014d35:	mov    BYTE PTR [ebp-0x3],0x0
64014d39:	inc    ecx
64014d3a:	mov    eax,DWORD PTR [ebp-0x18]
64014d3d:	push   0x1
64014d3f:	push   DWORD PTR [eax+0x4]
64014d42:	lea    edx,[ebp-0x8]
64014d45:	push   0x3
64014d47:	push   edx
64014d48:	push   ecx
64014d49:	lea    ecx,[ebp-0x4]
64014d4c:	push   ecx
64014d4d:	push   esi
64014d4e:	push   DWORD PTR [eax+0x14]
64014d51:	lea    eax,[ebp-0x18]
64014d54:	push   eax
64014d55:	call   0x64015cac
64014d5a:	add    esp,0x24
64014d5d:	test   eax,eax
64014d5f:	je     0x64014cd4
64014d65:	cmp    eax,0x1
64014d68:	jne    0x64014d70
64014d6a:	movzx  eax,BYTE PTR [ebp-0x8]
64014d6e:	jmp    0x64014d7b
64014d70:	movzx  ecx,BYTE PTR [ebp-0x7]
64014d74:	xor    eax,eax
64014d76:	mov    ah,BYTE PTR [ebp-0x8]
64014d79:	or     eax,ecx
64014d7b:	cmp    BYTE PTR [ebp-0xc],0x0
64014d7f:	je     0x64014d88
64014d81:	mov    ecx,DWORD PTR [ebp-0x10]
64014d84:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014d88:	pop    esi
64014d89:	pop    ebx
64014d8a:	leave  
64014d8b:	ret    
64014d8c:	cmp    DWORD PTR ds:0x64038ea8,0x0
64014d93:	jne    0x64014da5
64014d95:	mov    eax,DWORD PTR [esp+0x4]
64014d99:	lea    ecx,[eax-0x41]
64014d9c:	cmp    ecx,0x19
64014d9f:	ja     0x64014db2
64014da1:	add    eax,0x20
64014da4:	ret    
64014da5:	push   0x0
64014da7:	push   DWORD PTR [esp+0x8]
64014dab:	call   0x64014c75
64014db0:	pop    ecx
64014db1:	pop    ecx
64014db2:	ret    
64014db3:	mov    ecx,DWORD PTR [esp+0xc]
64014db7:	test   ecx,ecx
64014db9:	push   esi
64014dba:	push   edi
64014dbb:	mov    edi,DWORD PTR [esp+0xc]
64014dbf:	mov    esi,edi
64014dc1:	je     0x64014deb
64014dc3:	mov    edx,DWORD PTR [esp+0x10]
64014dc7:	movzx  eax,WORD PTR [edx]
64014dca:	mov    WORD PTR [edi],ax
64014dcd:	inc    edi
64014dce:	inc    edi
64014dcf:	inc    edx
64014dd0:	inc    edx
64014dd1:	test   ax,ax
64014dd4:	je     0x64014dd9
64014dd6:	dec    ecx
64014dd7:	jne    0x64014dc7
64014dd9:	test   ecx,ecx
64014ddb:	je     0x64014deb
64014ddd:	dec    ecx
64014dde:	je     0x64014deb
64014de0:	xor    eax,eax
64014de2:	shr    ecx,1
64014de4:	rep stos DWORD PTR es:[edi],eax
64014de6:	adc    ecx,ecx
64014de8:	rep stos WORD PTR es:[edi],ax
64014deb:	pop    edi
64014dec:	mov    eax,esi
64014dee:	pop    esi
64014def:	ret    
64014df0:	push   ebp
64014df1:	mov    ebp,esp
64014df3:	cmp    DWORD PTR [ebp+0x14],0x0
64014df7:	push   ebx
64014df8:	mov    ebx,DWORD PTR [ebp+0x8]
64014dfb:	push   esi
64014dfc:	mov    esi,eax
64014dfe:	mov    eax,DWORD PTR [ebp+0xc]
64014e01:	push   edi
64014e02:	je     0x64014e13
64014e04:	mov    WORD PTR [esi],0x2d
64014e09:	add    esi,0x2
64014e0c:	neg    ebx
64014e0e:	adc    eax,0x0
64014e11:	neg    eax
64014e13:	mov    edi,esi
64014e15:	xor    ecx,ecx
64014e17:	push   ecx
64014e18:	push   DWORD PTR [ebp+0x10]
64014e1b:	push   eax
64014e1c:	push   ebx
64014e1d:	call   0x64019890
64014e22:	cmp    ecx,0x9
64014e25:	mov    DWORD PTR [ebp+0xc],ebx
64014e28:	mov    ebx,eax
64014e2a:	mov    eax,edx
64014e2c:	jbe    0x64014e33
64014e2e:	add    ecx,0x57
64014e31:	jmp    0x64014e36
64014e33:	add    ecx,0x30
64014e36:	mov    WORD PTR [esi],cx
64014e39:	inc    esi
64014e3a:	inc    esi
64014e3b:	test   eax,eax
64014e3d:	ja     0x64014e15
64014e3f:	jb     0x64014e45
64014e41:	test   ebx,ebx
64014e43:	ja     0x64014e15
64014e45:	and    WORD PTR [esi],0x0
64014e49:	dec    esi
64014e4a:	dec    esi
64014e4b:	mov    cx,WORD PTR [edi]
64014e4e:	movzx  eax,WORD PTR [esi]
64014e51:	mov    WORD PTR [esi],cx
64014e54:	dec    esi
64014e55:	mov    WORD PTR [edi],ax
64014e58:	dec    esi
64014e59:	inc    edi
64014e5a:	inc    edi
64014e5b:	cmp    edi,esi
64014e5d:	jb     0x64014e4b
64014e5f:	pop    edi
64014e60:	pop    esi
64014e61:	pop    ebx
64014e62:	pop    ebp
64014e63:	ret    0x10
64014e66:	push   ebp
64014e67:	mov    ebp,esp
64014e69:	xor    eax,eax
64014e6b:	cmp    DWORD PTR [ebp+0x14],0xa
64014e6f:	jne    0x64014e80
64014e71:	cmp    DWORD PTR [ebp+0xc],eax
64014e74:	jg     0x64014e80
64014e76:	jl     0x64014e7d
64014e78:	cmp    DWORD PTR [ebp+0x8],eax
64014e7b:	jae    0x64014e80
64014e7d:	xor    eax,eax
64014e7f:	inc    eax
64014e80:	push   eax
64014e81:	push   DWORD PTR [ebp+0x14]
64014e84:	mov    eax,DWORD PTR [ebp+0x10]
64014e87:	push   DWORD PTR [ebp+0xc]
64014e8a:	push   DWORD PTR [ebp+0x8]
64014e8d:	call   0x64014df0
64014e92:	mov    eax,DWORD PTR [ebp+0x10]
64014e95:	pop    ebp
64014e96:	ret    
64014e97:	push   ebp
64014e98:	mov    ebp,esp
64014e9a:	sub    esp,0x20
64014e9d:	push   esi
64014e9e:	xor    esi,esi
64014ea0:	cmp    DWORD PTR [ebp+0xc],esi
64014ea3:	jne    0x64014ec2
64014ea5:	call   0x64016483
64014eaa:	push   esi
64014eab:	push   esi
64014eac:	push   esi
64014ead:	push   esi
64014eae:	push   esi
64014eaf:	mov    DWORD PTR [eax],0x16
64014eb5:	call   0x64013e12
64014eba:	add    esp,0x14
64014ebd:	or     eax,0xffffffff
64014ec0:	jmp    0x64014ee9
64014ec2:	push   DWORD PTR [ebp+0x14]
64014ec5:	lea    eax,[ebp-0x20]
64014ec8:	push   DWORD PTR [ebp+0x10]
64014ecb:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014ed2:	push   DWORD PTR [ebp+0xc]
64014ed5:	mov    DWORD PTR [ebp-0x14],0x42
64014edc:	push   eax
64014edd:	mov    DWORD PTR [ebp-0x18],esi
64014ee0:	mov    DWORD PTR [ebp-0x20],esi
64014ee3:	call   DWORD PTR [ebp+0x8]
64014ee6:	add    esp,0x10
64014ee9:	pop    esi
64014eea:	leave  
64014eeb:	ret    
64014eec:	push   DWORD PTR [esp+0x8]
64014ef0:	push   0x0
64014ef2:	push   DWORD PTR [esp+0xc]
64014ef6:	push   0x6401c217
64014efb:	call   0x64014e97
64014f00:	add    esp,0x10
64014f03:	ret    
64014f04:	push   ebp
64014f05:	mov    ebp,esp
64014f07:	sub    esp,0x20
64014f0a:	push   ebx
64014f0b:	xor    ebx,ebx
64014f0d:	cmp    DWORD PTR [ebp+0x14],ebx
64014f10:	jne    0x64014f32
64014f12:	call   0x64016483
64014f17:	push   ebx
64014f18:	push   ebx
64014f19:	push   ebx
64014f1a:	push   ebx
64014f1b:	push   ebx
64014f1c:	mov    DWORD PTR [eax],0x16
64014f22:	call   0x64013e12
64014f27:	add    esp,0x14
64014f2a:	or     eax,0xffffffff
64014f2d:	jmp    0x64014ff7
64014f32:	push   esi
64014f33:	mov    esi,DWORD PTR [ebp+0xc]
64014f36:	push   edi
64014f37:	mov    edi,DWORD PTR [ebp+0x10]
64014f3a:	cmp    edi,ebx
64014f3c:	je     0x64014f62
64014f3e:	cmp    esi,ebx
64014f40:	jne    0x64014f62
64014f42:	call   0x64016483
64014f47:	push   ebx
64014f48:	push   ebx
64014f49:	push   ebx
64014f4a:	push   ebx
64014f4b:	push   ebx
64014f4c:	mov    DWORD PTR [eax],0x16
64014f52:	call   0x64013e12
64014f57:	add    esp,0x14
64014f5a:	or     eax,0xffffffff
64014f5d:	jmp    0x64014ff5
64014f62:	cmp    edi,0x3fffffff
64014f68:	mov    DWORD PTR [ebp-0x14],0x42
64014f6f:	mov    DWORD PTR [ebp-0x18],esi
64014f72:	mov    DWORD PTR [ebp-0x20],esi
64014f75:	jbe    0x64014f80
64014f77:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014f7e:	jmp    0x64014f86
64014f80:	lea    eax,[edi+edi*1]
64014f83:	mov    DWORD PTR [ebp-0x1c],eax
64014f86:	push   DWORD PTR [ebp+0x1c]
64014f89:	lea    eax,[ebp-0x20]
64014f8c:	push   DWORD PTR [ebp+0x18]
64014f8f:	push   DWORD PTR [ebp+0x14]
64014f92:	push   eax
64014f93:	call   DWORD PTR [ebp+0x8]
64014f96:	add    esp,0x10
64014f99:	cmp    esi,ebx
64014f9b:	mov    DWORD PTR [ebp+0x14],eax
64014f9e:	je     0x64014ff5
64014fa0:	cmp    eax,ebx
64014fa2:	jl     0x64014fe6
64014fa4:	dec    DWORD PTR [ebp-0x1c]
64014fa7:	js     0x64014fb3
64014fa9:	mov    eax,DWORD PTR [ebp-0x20]
64014fac:	mov    BYTE PTR [eax],bl
64014fae:	inc    DWORD PTR [ebp-0x20]
64014fb1:	jmp    0x64014fc4
64014fb3:	lea    eax,[ebp-0x20]
64014fb6:	push   eax
64014fb7:	push   ebx
64014fb8:	call   0x64019dfb
64014fbd:	cmp    eax,0xffffffff
64014fc0:	pop    ecx
64014fc1:	pop    ecx
64014fc2:	je     0x64014fe6
64014fc4:	dec    DWORD PTR [ebp-0x1c]
64014fc7:	js     0x64014fd0
64014fc9:	mov    eax,DWORD PTR [ebp-0x20]
64014fcc:	mov    BYTE PTR [eax],bl
64014fce:	jmp    0x64014fe1
64014fd0:	lea    eax,[ebp-0x20]
64014fd3:	push   eax
64014fd4:	push   ebx
64014fd5:	call   0x64019dfb
64014fda:	cmp    eax,0xffffffff
64014fdd:	pop    ecx
64014fde:	pop    ecx
64014fdf:	je     0x64014fe6
64014fe1:	mov    eax,DWORD PTR [ebp+0x14]
64014fe4:	jmp    0x64014ff5
64014fe6:	xor    eax,eax
64014fe8:	cmp    DWORD PTR [ebp-0x1c],ebx
64014feb:	mov    WORD PTR [esi+edi*2-0x2],bx
64014ff0:	setge  al
64014ff3:	dec    eax
64014ff4:	dec    eax
64014ff5:	pop    edi
64014ff6:	pop    esi
64014ff7:	pop    ebx
64014ff8:	leave  
64014ff9:	ret    
64014ffa:	push   ebp
64014ffb:	mov    ebp,esp
64014ffd:	push   esi
64014ffe:	xor    esi,esi
64015000:	cmp    DWORD PTR [ebp+0x10],esi
64015003:	jne    0x64015022
64015005:	call   0x64016483
6401500a:	push   esi
6401500b:	push   esi
6401500c:	push   esi
6401500d:	push   esi
6401500e:	push   esi
6401500f:	mov    DWORD PTR [eax],0x16
64015015:	call   0x64013e12
6401501a:	add    esp,0x14
6401501d:	or     eax,0xffffffff
64015020:	jmp    0x6401507e
64015022:	push   edi
64015023:	mov    edi,DWORD PTR [ebp+0x8]
64015026:	cmp    edi,esi
64015028:	je     0x6401502f
6401502a:	cmp    DWORD PTR [ebp+0xc],esi
6401502d:	ja     0x6401503c
6401502f:	call   0x64016483
64015034:	mov    DWORD PTR [eax],0x16
6401503a:	jmp    0x6401506d
6401503c:	push   DWORD PTR [ebp+0x18]
6401503f:	push   DWORD PTR [ebp+0x14]
64015042:	push   DWORD PTR [ebp+0x10]
64015045:	push   DWORD PTR [ebp+0xc]
64015048:	push   edi
64015049:	push   0x6401cb4c
6401504e:	call   0x64014f04
64015053:	add    esp,0x18
64015056:	cmp    eax,esi
64015058:	jge    0x6401505d
6401505a:	mov    WORD PTR [edi],si
6401505d:	cmp    eax,0xfffffffe
64015060:	jne    0x6401507d
64015062:	call   0x64016483
64015067:	mov    DWORD PTR [eax],0x22
6401506d:	push   esi
6401506e:	push   esi
6401506f:	push   esi
64015070:	push   esi
64015071:	push   esi
64015072:	call   0x64013e12
64015077:	add    esp,0x14
6401507a:	or     eax,0xffffffff
6401507d:	pop    edi
6401507e:	pop    esi
6401507f:	pop    ebp
64015080:	ret    
64015081:	push   DWORD PTR [esp+0x10]
64015085:	push   0x0
64015087:	push   DWORD PTR [esp+0x14]
6401508b:	push   DWORD PTR [esp+0x14]
6401508f:	push   DWORD PTR [esp+0x14]
64015093:	call   0x64014ffa
64015098:	add    esp,0x14
6401509b:	ret    
6401509c:	push   0xa
6401509e:	push   0x0
640150a0:	push   DWORD PTR [esp+0xc]
640150a4:	call   0x6401d718
640150a9:	add    esp,0xc
640150ac:	ret    
640150ad:	push   DWORD PTR ds:0x64039820
640150b3:	call   0x640175ce
640150b8:	test   eax,eax
640150ba:	pop    ecx
640150bb:	je     0x640150bf
640150bd:	call   eax
640150bf:	push   0x19
640150c1:	call   0x6401be1d
640150c6:	push   0x1
640150c8:	push   0x0
640150ca:	call   0x64015eb5
640150cf:	add    esp,0xc
640150d2:	jmp    0x64015dc2
640150d7:	push   ebp
640150d8:	mov    ebp,esp
640150da:	sub    esp,0x10
640150dd:	push   DWORD PTR [ebp+0xc]
640150e0:	lea    ecx,[ebp-0x10]
640150e3:	call   0x640142e5
640150e8:	movzx  eax,BYTE PTR [ebp+0x8]
640150ec:	mov    ecx,DWORD PTR [ebp-0x10]
640150ef:	mov    ecx,DWORD PTR [ecx+0xc8]
640150f5:	movzx  eax,WORD PTR [ecx+eax*2]
640150f9:	and    eax,0x8000
640150fe:	cmp    BYTE PTR [ebp-0x4],0x0
64015102:	je     0x6401510b
64015104:	mov    ecx,DWORD PTR [ebp-0x8]
64015107:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401510b:	leave  
6401510c:	ret    
6401510d:	push   0x0
6401510f:	push   DWORD PTR [esp+0x8]
64015113:	call   0x640150d7
64015118:	pop    ecx
64015119:	pop    ecx
6401511a:	ret    
6401511b:	int3   
6401511c:	int3   
6401511d:	int3   
6401511e:	int3   
6401511f:	int3   
64015120:	mov    edx,DWORD PTR [esp+0xc]
64015124:	mov    ecx,DWORD PTR [esp+0x4]
64015128:	test   edx,edx
6401512a:	je     0x64015195
6401512c:	xor    eax,eax
6401512e:	mov    al,BYTE PTR [esp+0x8]
64015132:	test   al,al
64015134:	jne    0x6401514c
64015136:	cmp    edx,0x100
6401513c:	jb     0x6401514c
6401513e:	cmp    DWORD PTR ds:0x64039b18,0x0
64015145:	je     0x6401514c
64015147:	jmp    0x6401d806
6401514c:	push   edi
6401514d:	mov    edi,ecx
6401514f:	cmp    edx,0x4
64015152:	jb     0x64015185
64015154:	neg    ecx
64015156:	and    ecx,0x3
64015159:	je     0x64015167
6401515b:	sub    edx,ecx
6401515d:	mov    BYTE PTR [edi],al
6401515f:	add    edi,0x1
64015162:	sub    ecx,0x1
64015165:	jne    0x6401515d
64015167:	mov    ecx,eax
64015169:	shl    eax,0x8
6401516c:	add    eax,ecx
6401516e:	mov    ecx,eax
64015170:	shl    eax,0x10
64015173:	add    eax,ecx
64015175:	mov    ecx,edx
64015177:	and    edx,0x3
6401517a:	shr    ecx,0x2
6401517d:	je     0x64015185
6401517f:	rep stos DWORD PTR es:[edi],eax
64015181:	test   edx,edx
64015183:	je     0x6401518f
64015185:	mov    BYTE PTR [edi],al
64015187:	add    edi,0x1
6401518a:	sub    edx,0x1
6401518d:	jne    0x64015185
6401518f:	mov    eax,DWORD PTR [esp+0x8]
64015193:	pop    edi
64015194:	ret    
64015195:	mov    eax,DWORD PTR [esp+0x4]
64015199:	ret    
6401519a:	int3   
6401519b:	int3   
6401519c:	int3   
6401519d:	int3   
6401519e:	int3   
6401519f:	int3   
640151a0:	push   ebp
640151a1:	mov    ebp,esp
640151a3:	push   edi
640151a4:	push   esi
640151a5:	mov    esi,DWORD PTR [ebp+0xc]
640151a8:	mov    ecx,DWORD PTR [ebp+0x10]
640151ab:	mov    edi,DWORD PTR [ebp+0x8]
640151ae:	mov    eax,ecx
640151b0:	mov    edx,ecx
640151b2:	add    eax,esi
640151b4:	cmp    edi,esi
640151b6:	jbe    0x640151c0
640151b8:	cmp    edi,eax
640151ba:	jb     0x64015364
640151c0:	cmp    ecx,0x100
640151c6:	jb     0x640151e7
640151c8:	cmp    DWORD PTR ds:0x64039b18,0x0
640151cf:	je     0x640151e7
640151d1:	push   edi
640151d2:	push   esi
640151d3:	and    edi,0xf
640151d6:	and    esi,0xf
640151d9:	cmp    edi,esi
640151db:	pop    esi
640151dc:	pop    edi
640151dd:	jne    0x640151e7
640151df:	pop    esi
640151e0:	pop    edi
640151e1:	pop    ebp
640151e2:	jmp    0x6401d930
640151e7:	test   edi,0x3
640151ed:	jne    0x64015204
640151ef:	shr    ecx,0x2
640151f2:	and    edx,0x3
640151f5:	cmp    ecx,0x8
640151f8:	jb     0x64015224
640151fa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640151fc:	jmp    DWORD PTR [edx*4+0x64015314]
64015203:	nop
64015204:	mov    eax,edi
64015206:	mov    edx,0x3
6401520b:	sub    ecx,0x4
6401520e:	jb     0x6401521c
64015210:	and    eax,0x3
64015213:	add    ecx,eax
64015215:	jmp    DWORD PTR [eax*4+0x64015228]
6401521c:	jmp    DWORD PTR [ecx*4+0x64015324]
64015223:	nop
64015224:	jmp    DWORD PTR [ecx*4+0x640152a8]
6401522b:	nop
6401522c:	cmp    BYTE PTR [edx+0x1],dl
6401522f:	fs fs push edx
64015232:	add    DWORD PTR [eax+ecx*4+0x52],esp
64015236:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401523a:	mov    al,BYTE PTR [esi]
6401523c:	mov    BYTE PTR [edi],al
6401523e:	mov    al,BYTE PTR [esi+0x1]
64015241:	mov    BYTE PTR [edi+0x1],al
64015244:	mov    al,BYTE PTR [esi+0x2]
64015247:	shr    ecx,0x2
6401524a:	mov    BYTE PTR [edi+0x2],al
6401524d:	add    esi,0x3
64015250:	add    edi,0x3
64015253:	cmp    ecx,0x8
64015256:	jb     0x64015224
64015258:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401525a:	jmp    DWORD PTR [edx*4+0x64015314]
64015261:	lea    ecx,[ecx+0x0]
64015264:	and    edx,ecx
64015266:	mov    al,BYTE PTR [esi]
64015268:	mov    BYTE PTR [edi],al
6401526a:	mov    al,BYTE PTR [esi+0x1]
6401526d:	shr    ecx,0x2
64015270:	mov    BYTE PTR [edi+0x1],al
64015273:	add    esi,0x2
64015276:	add    edi,0x2
64015279:	cmp    ecx,0x8
6401527c:	jb     0x64015224
6401527e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015280:	jmp    DWORD PTR [edx*4+0x64015314]
64015287:	nop
64015288:	and    edx,ecx
6401528a:	mov    al,BYTE PTR [esi]
6401528c:	mov    BYTE PTR [edi],al
6401528e:	add    esi,0x1
64015291:	shr    ecx,0x2
64015294:	add    edi,0x1
64015297:	cmp    ecx,0x8
6401529a:	jb     0x64015224
6401529c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401529e:	jmp    DWORD PTR [edx*4+0x64015314]
640152a5:	lea    ecx,[ecx+0x0]
640152a8:	or     edx,DWORD PTR [ebx+0x1]
640152ab:	fs clc 
640152ad:	push   edx
640152ae:	add    DWORD PTR [eax+esi*8+0x52],esp
640152b2:	add    DWORD PTR [eax+ebp*8+0x52],esp
640152b6:	add    DWORD PTR [eax+eiz*8+0x52],esp
640152ba:	add    DWORD PTR [eax+ebx*8+0x52],esp
640152be:	add    DWORD PTR [eax+edx*8+0x52],esp
640152c2:	add    DWORD PTR [eax+ecx*8+0x52],esp
640152c6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640152ca:	mov    fs,esp
640152cc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640152d0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640152d4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640152d8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640152dc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640152e0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640152e4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640152e8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640152ec:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640152f0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640152f4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640152f8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640152fc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64015300:	lea    eax,[ecx*4+0x0]
64015307:	add    esi,eax
64015309:	add    edi,eax
6401530b:	jmp    DWORD PTR [edx*4+0x64015314]
64015312:	mov    edi,edi
64015314:	and    al,0x53
64015316:	add    DWORD PTR [esp+ebp*1+0x53],esp
6401531a:	add    DWORD PTR [eax+edi*1+0x53],esp
6401531e:	add    DWORD PTR [esp+ecx*2+0x53],esp
64015322:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015326:	or     BYTE PTR [esi+0x5f],bl
64015329:	leave  
6401532a:	ret    
6401532b:	nop
6401532c:	mov    al,BYTE PTR [esi]
6401532e:	mov    BYTE PTR [edi],al
64015330:	mov    eax,DWORD PTR [ebp+0x8]
64015333:	pop    esi
64015334:	pop    edi
64015335:	leave  
64015336:	ret    
64015337:	nop
64015338:	mov    al,BYTE PTR [esi]
6401533a:	mov    BYTE PTR [edi],al
6401533c:	mov    al,BYTE PTR [esi+0x1]
6401533f:	mov    BYTE PTR [edi+0x1],al
64015342:	mov    eax,DWORD PTR [ebp+0x8]
64015345:	pop    esi
64015346:	pop    edi
64015347:	leave  
64015348:	ret    
64015349:	lea    ecx,[ecx+0x0]
6401534c:	mov    al,BYTE PTR [esi]
6401534e:	mov    BYTE PTR [edi],al
64015350:	mov    al,BYTE PTR [esi+0x1]
64015353:	mov    BYTE PTR [edi+0x1],al
64015356:	mov    al,BYTE PTR [esi+0x2]
64015359:	mov    BYTE PTR [edi+0x2],al
6401535c:	mov    eax,DWORD PTR [ebp+0x8]
6401535f:	pop    esi
64015360:	pop    edi
64015361:	leave  
64015362:	ret    
64015363:	nop
64015364:	lea    esi,[ecx+esi*1-0x4]
64015368:	lea    edi,[ecx+edi*1-0x4]
6401536c:	test   edi,0x3
64015372:	jne    0x64015398
64015374:	shr    ecx,0x2
64015377:	and    edx,0x3
6401537a:	cmp    ecx,0x8
6401537d:	jb     0x6401538c
6401537f:	std    
64015380:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015382:	cld    
64015383:	jmp    DWORD PTR [edx*4+0x640154b0]
6401538a:	mov    edi,edi
6401538c:	neg    ecx
6401538e:	jmp    DWORD PTR [ecx*4+0x64015460]
64015395:	lea    ecx,[ecx+0x0]
64015398:	mov    eax,edi
6401539a:	mov    edx,0x3
6401539f:	cmp    ecx,0x4
640153a2:	jb     0x640153b0
640153a4:	and    eax,0x3
640153a7:	sub    ecx,eax
640153a9:	jmp    DWORD PTR [eax*4+0x640153b4]
640153b0:	jmp    DWORD PTR [ecx*4+0x640154b0]
640153b7:	nop
640153b8:	les    edx,FWORD PTR [ebx+0x1]
640153bb:	fs call 0x74655514
640153c1:	push   esp
640153c2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640153c6:	add    esp,DWORD PTR [ebx]
640153c8:	ror    DWORD PTR [eax-0x117cfcb9],1
640153ce:	add    ecx,eax
640153d0:	jmp    0x65f0d6d7
640153d5:	cmp    ecx,0x8
640153d8:	jb     0x6401538c
640153da:	std    
640153db:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640153dd:	cld    
640153de:	jmp    DWORD PTR [edx*4+0x640154b0]
640153e5:	lea    ecx,[ecx+0x0]
640153e8:	mov    al,BYTE PTR [esi+0x3]
640153eb:	and    edx,ecx
640153ed:	mov    BYTE PTR [edi+0x3],al
640153f0:	mov    al,BYTE PTR [esi+0x2]
640153f3:	shr    ecx,0x2
640153f6:	mov    BYTE PTR [edi+0x2],al
640153f9:	sub    esi,0x2
640153fc:	sub    edi,0x2
640153ff:	cmp    ecx,0x8
64015402:	jb     0x6401538c
64015404:	std    
64015405:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015407:	cld    
64015408:	jmp    DWORD PTR [edx*4+0x640154b0]
6401540f:	nop
64015410:	mov    al,BYTE PTR [esi+0x3]
64015413:	and    edx,ecx
64015415:	mov    BYTE PTR [edi+0x3],al
64015418:	mov    al,BYTE PTR [esi+0x2]
6401541b:	mov    BYTE PTR [edi+0x2],al
6401541e:	mov    al,BYTE PTR [esi+0x1]
64015421:	shr    ecx,0x2
64015424:	mov    BYTE PTR [edi+0x1],al
64015427:	sub    esi,0x3
6401542a:	sub    edi,0x3
6401542d:	cmp    ecx,0x8
64015430:	jb     0x6401538c
64015436:	std    
64015437:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015439:	cld    
6401543a:	jmp    DWORD PTR [edx*4+0x640154b0]
64015441:	lea    ecx,[ecx+0x0]
64015444:	fs push esp
64015446:	add    DWORD PTR [esp+ebp*2+0x54],esp
6401544a:	add    DWORD PTR [esp+esi*2+0x54],esp
6401544e:	add    DWORD PTR [esp+edi*2+0x54],esp
64015452:	add    DWORD PTR [esp+eax*4+0x54],esp
64015456:	add    DWORD PTR [esp+ecx*4+0x54],esp
6401545a:	add    DWORD PTR [esp+edx*4+0x54],esp
6401545e:	add    DWORD PTR [edi+eiz*4+0x54],esp
64015462:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015466:	mov    ds,WORD PTR [ecx+ecx*4]
64015469:	inc    esp
6401546a:	(bad)  
6401546b:	sbb    al,0x8b
6401546d:	inc    esp
6401546e:	mov    ds,WORD PTR [eax]
64015470:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64015474:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64015478:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401547c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64015480:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64015484:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64015488:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401548c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64015490:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64015494:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64015498:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401549c:	lea    eax,[ecx*4+0x0]
640154a3:	add    esi,eax
640154a5:	add    edi,eax
640154a7:	jmp    DWORD PTR [edx*4+0x640154b0]
640154ae:	mov    edi,edi
640154b0:	rcl    BYTE PTR [ecx+eax*1+0x64],0xc8
640154b5:	push   esp
640154b6:	add    DWORD PTR [eax+ebx*8+0x54],esp
640154ba:	add    DWORD PTR [esp+ebp*8+0x54],esp
640154be:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640154c2:	or     BYTE PTR [esi+0x5f],bl
640154c5:	leave  
640154c6:	ret    
640154c7:	nop
640154c8:	mov    al,BYTE PTR [esi+0x3]
640154cb:	mov    BYTE PTR [edi+0x3],al
640154ce:	mov    eax,DWORD PTR [ebp+0x8]
640154d1:	pop    esi
640154d2:	pop    edi
640154d3:	leave  
640154d4:	ret    
640154d5:	lea    ecx,[ecx+0x0]
640154d8:	mov    al,BYTE PTR [esi+0x3]
640154db:	mov    BYTE PTR [edi+0x3],al
640154de:	mov    al,BYTE PTR [esi+0x2]
640154e1:	mov    BYTE PTR [edi+0x2],al
640154e4:	mov    eax,DWORD PTR [ebp+0x8]
640154e7:	pop    esi
640154e8:	pop    edi
640154e9:	leave  
640154ea:	ret    
640154eb:	nop
640154ec:	mov    al,BYTE PTR [esi+0x3]
640154ef:	mov    BYTE PTR [edi+0x3],al
640154f2:	mov    al,BYTE PTR [esi+0x2]
640154f5:	mov    BYTE PTR [edi+0x2],al
640154f8:	mov    al,BYTE PTR [esi+0x1]
640154fb:	mov    BYTE PTR [edi+0x1],al
640154fe:	mov    eax,DWORD PTR [ebp+0x8]
64015501:	pop    esi
64015502:	pop    edi
64015503:	leave  
64015504:	ret    
64015505:	int3   
64015506:	int3   
64015507:	int3   
64015508:	int3   
64015509:	int3   
6401550a:	int3   
6401550b:	int3   
6401550c:	int3   
6401550d:	int3   
6401550e:	int3   
6401550f:	int3   
64015510:	mov    ecx,DWORD PTR [esp+0x4]
64015514:	test   ecx,0x3
6401551a:	je     0x64015540
6401551c:	mov    al,BYTE PTR [ecx]
6401551e:	add    ecx,0x1
64015521:	test   al,al
64015523:	je     0x64015573
64015525:	test   ecx,0x3
6401552b:	jne    0x6401551c
6401552d:	add    eax,0x0
64015532:	lea    esp,[esp+0x0]
64015539:	lea    esp,[esp+0x0]
64015540:	mov    eax,DWORD PTR [ecx]
64015542:	mov    edx,0x7efefeff
64015547:	add    edx,eax
64015549:	xor    eax,0xffffffff
6401554c:	xor    eax,edx
6401554e:	add    ecx,0x4
64015551:	test   eax,0x81010100
64015556:	je     0x64015540
64015558:	mov    eax,DWORD PTR [ecx-0x4]
6401555b:	test   al,al
6401555d:	je     0x64015591
6401555f:	test   ah,ah
64015561:	je     0x64015587
64015563:	test   eax,0xff0000
64015568:	je     0x6401557d
6401556a:	test   eax,0xff000000
6401556f:	je     0x64015573
64015571:	jmp    0x64015540
64015573:	lea    eax,[ecx-0x1]
64015576:	mov    ecx,DWORD PTR [esp+0x4]
6401557a:	sub    eax,ecx
6401557c:	ret    
6401557d:	lea    eax,[ecx-0x2]
64015580:	mov    ecx,DWORD PTR [esp+0x4]
64015584:	sub    eax,ecx
64015586:	ret    
64015587:	lea    eax,[ecx-0x3]
6401558a:	mov    ecx,DWORD PTR [esp+0x4]
6401558e:	sub    eax,ecx
64015590:	ret    
64015591:	lea    eax,[ecx-0x4]
64015594:	mov    ecx,DWORD PTR [esp+0x4]
64015598:	sub    eax,ecx
6401559a:	ret    
6401559b:	push   eax
6401559c:	push   DWORD PTR fs:0x0
640155a3:	lea    eax,[esp+0xc]
640155a7:	sub    esp,DWORD PTR [esp+0xc]
640155ab:	push   ebx
640155ac:	push   esi
640155ad:	push   edi
640155ae:	mov    DWORD PTR [eax],ebp
640155b0:	mov    ebp,eax
640155b2:	mov    eax,ds:0x64037644
640155b7:	xor    eax,ebp
640155b9:	push   eax
640155ba:	push   DWORD PTR [ebp-0x4]
640155bd:	mov    DWORD PTR [ebp-0x4],0xffffffff
640155c4:	lea    eax,[ebp-0xc]
640155c7:	mov    fs:0x0,eax
640155cd:	ret    
640155ce:	push   eax
640155cf:	push   DWORD PTR fs:0x0
640155d6:	lea    eax,[esp+0xc]
640155da:	sub    esp,DWORD PTR [esp+0xc]
640155de:	push   ebx
640155df:	push   esi
640155e0:	push   edi
640155e1:	mov    DWORD PTR [eax],ebp
640155e3:	mov    ebp,eax
640155e5:	mov    eax,ds:0x64037644
640155ea:	xor    eax,ebp
640155ec:	push   eax
640155ed:	mov    DWORD PTR [ebp-0x10],esp
640155f0:	push   DWORD PTR [ebp-0x4]
640155f3:	mov    DWORD PTR [ebp-0x4],0xffffffff
640155fa:	lea    eax,[ebp-0xc]
640155fd:	mov    fs:0x0,eax
64015603:	ret    
64015604:	push   ebx
64015605:	push   ebp
64015606:	push   esi
64015607:	mov    esi,DWORD PTR [esp+0x10]
6401560b:	mov    eax,DWORD PTR [esi+0xbc]
64015611:	xor    ebp,ebp
64015613:	cmp    eax,ebp
64015615:	push   edi
64015616:	je     0x64015687
64015618:	cmp    eax,0x64038530
6401561d:	je     0x64015687
6401561f:	mov    eax,DWORD PTR [esi+0xb0]
64015625:	cmp    eax,ebp
64015627:	je     0x64015687
64015629:	cmp    DWORD PTR [eax],ebp
6401562b:	jne    0x64015687
6401562d:	mov    eax,DWORD PTR [esi+0xb8]
64015633:	cmp    eax,ebp
64015635:	je     0x6401564e
64015637:	cmp    DWORD PTR [eax],ebp
64015639:	jne    0x6401564e
6401563b:	push   eax
6401563c:	call   0x6401477f
64015641:	push   DWORD PTR [esi+0xbc]
64015647:	call   0x6401dbe3
6401564c:	pop    ecx
6401564d:	pop    ecx
6401564e:	mov    eax,DWORD PTR [esi+0xb4]
64015654:	cmp    eax,ebp
64015656:	je     0x6401566f
64015658:	cmp    DWORD PTR [eax],ebp
6401565a:	jne    0x6401566f
6401565c:	push   eax
6401565d:	call   0x6401477f
64015662:	push   DWORD PTR [esi+0xbc]
64015668:	call   0x6401dba3
6401566d:	pop    ecx
6401566e:	pop    ecx
6401566f:	push   DWORD PTR [esi+0xb0]
64015675:	call   0x6401477f
6401567a:	push   DWORD PTR [esi+0xbc]
64015680:	call   0x6401477f
64015685:	pop    ecx
64015686:	pop    ecx
64015687:	mov    eax,DWORD PTR [esi+0xc0]
6401568d:	cmp    eax,ebp
6401568f:	je     0x640156d5
64015691:	cmp    DWORD PTR [eax],ebp
64015693:	jne    0x640156d5
64015695:	mov    eax,DWORD PTR [esi+0xc4]
6401569b:	sub    eax,0xfe
640156a0:	push   eax
640156a1:	call   0x6401477f
640156a6:	mov    eax,DWORD PTR [esi+0xcc]
640156ac:	mov    edi,0x80
640156b1:	sub    eax,edi
640156b3:	push   eax
640156b4:	call   0x6401477f
640156b9:	mov    eax,DWORD PTR [esi+0xd0]
640156bf:	sub    eax,edi
640156c1:	push   eax
640156c2:	call   0x6401477f
640156c7:	push   DWORD PTR [esi+0xc0]
640156cd:	call   0x6401477f
640156d2:	add    esp,0x10
640156d5:	lea    edi,[esi+0xd4]
640156db:	mov    eax,DWORD PTR [edi]
640156dd:	cmp    eax,0x64038470
640156e2:	je     0x640156fb
640156e4:	cmp    DWORD PTR [eax+0xb4],ebp
640156ea:	jne    0x640156fb
640156ec:	push   eax
640156ed:	call   0x6401da13
640156f2:	push   DWORD PTR [edi]
640156f4:	call   0x6401477f
640156f9:	pop    ecx
640156fa:	pop    ecx
640156fb:	push   0x6
640156fd:	lea    edi,[esi+0x50]
64015700:	pop    ebx
64015701:	cmp    DWORD PTR [edi-0x8],0x64037f10
64015708:	je     0x6401571b
6401570a:	mov    eax,DWORD PTR [edi]
6401570c:	cmp    eax,ebp
6401570e:	je     0x6401571b
64015710:	cmp    DWORD PTR [eax],ebp
64015712:	jne    0x6401571b
64015714:	push   eax
64015715:	call   0x6401477f
6401571a:	pop    ecx
6401571b:	cmp    DWORD PTR [edi-0x4],ebp
6401571e:	je     0x64015732
64015720:	mov    eax,DWORD PTR [edi+0x4]
64015723:	cmp    eax,ebp
64015725:	je     0x64015732
64015727:	cmp    DWORD PTR [eax],ebp
64015729:	jne    0x64015732
6401572b:	push   eax
6401572c:	call   0x6401477f
64015731:	pop    ecx
64015732:	add    edi,0x10
64015735:	dec    ebx
64015736:	jne    0x64015701
64015738:	push   esi
64015739:	call   0x6401477f
6401573e:	pop    ecx
6401573f:	pop    edi
64015740:	pop    esi
64015741:	pop    ebp
64015742:	pop    ebx
64015743:	ret    
64015744:	push   ebx
64015745:	push   ebp
64015746:	push   esi
64015747:	mov    esi,DWORD PTR [esp+0x10]
6401574b:	push   edi
6401574c:	mov    edi,DWORD PTR ds:0x6402402c
64015752:	push   esi
64015753:	call   edi
64015755:	mov    eax,DWORD PTR [esi+0xb0]
6401575b:	test   eax,eax
6401575d:	je     0x64015762
6401575f:	push   eax
64015760:	call   edi
64015762:	mov    eax,DWORD PTR [esi+0xb8]
64015768:	test   eax,eax
6401576a:	je     0x6401576f
6401576c:	push   eax
6401576d:	call   edi
6401576f:	mov    eax,DWORD PTR [esi+0xb4]
64015775:	test   eax,eax
64015777:	je     0x6401577c
64015779:	push   eax
6401577a:	call   edi
6401577c:	mov    eax,DWORD PTR [esi+0xc0]
64015782:	test   eax,eax
64015784:	je     0x64015789
64015786:	push   eax
64015787:	call   edi
64015789:	push   0x6
6401578b:	lea    ebx,[esi+0x50]
6401578e:	pop    ebp
6401578f:	cmp    DWORD PTR [ebx-0x8],0x64037f10
64015796:	je     0x640157a1
64015798:	mov    eax,DWORD PTR [ebx]
6401579a:	test   eax,eax
6401579c:	je     0x640157a1
6401579e:	push   eax
6401579f:	call   edi
640157a1:	cmp    DWORD PTR [ebx-0x4],0x0
640157a5:	je     0x640157b1
640157a7:	mov    eax,DWORD PTR [ebx+0x4]
640157aa:	test   eax,eax
640157ac:	je     0x640157b1
640157ae:	push   eax
640157af:	call   edi
640157b1:	add    ebx,0x10
640157b4:	dec    ebp
640157b5:	jne    0x6401578f
640157b7:	mov    eax,DWORD PTR [esi+0xd4]
640157bd:	add    eax,0xb4
640157c2:	push   eax
640157c3:	call   edi
640157c5:	pop    edi
640157c6:	pop    esi
640157c7:	pop    ebp
640157c8:	pop    ebx
640157c9:	ret    
640157ca:	push   esi
640157cb:	mov    esi,DWORD PTR [esp+0x8]
640157cf:	test   esi,esi
640157d1:	je     0x64015852
640157d3:	push   ebx
640157d4:	push   ebp
640157d5:	push   edi
640157d6:	mov    edi,DWORD PTR ds:0x64024078
640157dc:	push   esi
640157dd:	call   edi
640157df:	mov    eax,DWORD PTR [esi+0xb0]
640157e5:	test   eax,eax
640157e7:	je     0x640157ec
640157e9:	push   eax
640157ea:	call   edi
640157ec:	mov    eax,DWORD PTR [esi+0xb8]
640157f2:	test   eax,eax
640157f4:	je     0x640157f9
640157f6:	push   eax
640157f7:	call   edi
640157f9:	mov    eax,DWORD PTR [esi+0xb4]
640157ff:	test   eax,eax
64015801:	je     0x64015806
64015803:	push   eax
64015804:	call   edi
64015806:	mov    eax,DWORD PTR [esi+0xc0]
6401580c:	test   eax,eax
6401580e:	je     0x64015813
64015810:	push   eax
64015811:	call   edi
64015813:	push   0x6
64015815:	lea    ebx,[esi+0x50]
64015818:	pop    ebp
64015819:	cmp    DWORD PTR [ebx-0x8],0x64037f10
64015820:	je     0x6401582b
64015822:	mov    eax,DWORD PTR [ebx]
64015824:	test   eax,eax
64015826:	je     0x6401582b
64015828:	push   eax
64015829:	call   edi
6401582b:	cmp    DWORD PTR [ebx-0x4],0x0
6401582f:	je     0x6401583b
64015831:	mov    eax,DWORD PTR [ebx+0x4]
64015834:	test   eax,eax
64015836:	je     0x6401583b
64015838:	push   eax
64015839:	call   edi
6401583b:	add    ebx,0x10
6401583e:	dec    ebp
6401583f:	jne    0x64015819
64015841:	mov    eax,DWORD PTR [esi+0xd4]
64015847:	add    eax,0xb4
6401584c:	push   eax
6401584d:	call   edi
6401584f:	pop    edi
64015850:	pop    ebp
64015851:	pop    ebx
64015852:	mov    eax,esi
64015854:	pop    esi
64015855:	ret    
64015856:	test   edi,edi
64015858:	je     0x64015891
6401585a:	test   eax,eax
6401585c:	je     0x64015891
6401585e:	push   esi
6401585f:	mov    esi,DWORD PTR [eax]
64015861:	cmp    esi,edi
64015863:	je     0x6401588d
64015865:	push   edi
64015866:	mov    DWORD PTR [eax],edi
64015868:	call   0x64015744
6401586d:	test   esi,esi
6401586f:	pop    ecx
64015870:	je     0x6401588d
64015872:	push   esi
64015873:	call   0x640157ca
64015878:	cmp    DWORD PTR [esi],0x0
6401587b:	pop    ecx
6401587c:	jne    0x6401588d
6401587e:	cmp    esi,0x64037f18
64015884:	je     0x6401588d
64015886:	push   esi
64015887:	call   0x64015604
6401588c:	pop    ecx
6401588d:	mov    eax,edi
6401588f:	pop    esi
64015890:	ret    
64015891:	xor    eax,eax
64015893:	ret    
64015894:	push   0xc
64015896:	push   0x6402b778
6401589b:	call   0x64015ed4
640158a0:	call   0x640177ea
640158a5:	mov    esi,eax
640158a7:	mov    eax,ds:0x64037f08
640158ac:	test   DWORD PTR [esi+0x70],eax
640158af:	je     0x640158d3
640158b1:	cmp    DWORD PTR [esi+0x6c],0x0
640158b5:	je     0x640158d3
640158b7:	call   0x640177ea
640158bc:	mov    esi,DWORD PTR [eax+0x6c]
640158bf:	test   esi,esi
640158c1:	jne    0x640158cb
640158c3:	push   0x20
640158c5:	call   0x64017dd6
640158ca:	pop    ecx
640158cb:	mov    eax,esi
640158cd:	call   0x64015f19
640158d2:	ret    
640158d3:	push   0xc
640158d5:	call   0x6401b2ba
640158da:	pop    ecx
640158db:	and    DWORD PTR [ebp-0x4],0x0
640158df:	lea    eax,[esi+0x6c]
640158e2:	mov    edi,DWORD PTR ds:0x64037ff0
640158e8:	call   0x64015856
640158ed:	mov    DWORD PTR [ebp-0x1c],eax
640158f0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640158f7:	call   0x640158fe
640158fc:	jmp    0x640158bf
640158fe:	push   0xc
64015900:	call   0x6401b1e2
64015905:	pop    ecx
64015906:	mov    esi,DWORD PTR [ebp-0x1c]
64015909:	ret    
6401590a:	push   ebp
6401590b:	mov    ebp,esp
6401590d:	sub    esp,0x14
64015910:	mov    eax,ds:0x64037644
64015915:	xor    eax,ebp
64015917:	mov    DWORD PTR [ebp-0x4],eax
6401591a:	push   ebx
6401591b:	push   esi
6401591c:	xor    ebx,ebx
6401591e:	cmp    DWORD PTR ds:0x64038eac,ebx
64015924:	push   edi
64015925:	mov    esi,ecx
64015927:	jne    0x64015961
64015929:	push   ebx
6401592a:	push   ebx
6401592b:	xor    edi,edi
6401592d:	inc    edi
6401592e:	push   edi
6401592f:	push   0x640299ac
64015934:	push   0x100
64015939:	push   ebx
6401593a:	call   DWORD PTR ds:0x640241b4
64015940:	test   eax,eax
64015942:	je     0x6401594c
64015944:	mov    DWORD PTR ds:0x64038eac,edi
6401594a:	jmp    0x64015961
6401594c:	call   DWORD PTR ds:0x64024068
64015952:	cmp    eax,0x78
64015955:	jne    0x64015961
64015957:	mov    DWORD PTR ds:0x64038eac,0x2
64015961:	cmp    DWORD PTR [ebp+0x14],ebx
64015964:	jle    0x64015988
64015966:	mov    ecx,DWORD PTR [ebp+0x14]
64015969:	mov    eax,DWORD PTR [ebp+0x10]
6401596c:	dec    ecx
6401596d:	cmp    BYTE PTR [eax],bl
6401596f:	je     0x64015979
64015971:	inc    eax
64015972:	cmp    ecx,ebx
64015974:	jne    0x6401596c
64015976:	or     ecx,0xffffffff
64015979:	mov    eax,DWORD PTR [ebp+0x14]
6401597c:	sub    eax,ecx
6401597e:	dec    eax
6401597f:	cmp    eax,DWORD PTR [ebp+0x14]
64015982:	jge    0x64015985
64015984:	inc    eax
64015985:	mov    DWORD PTR [ebp+0x14],eax
64015988:	mov    eax,ds:0x64038eac
6401598d:	cmp    eax,0x2
64015990:	je     0x64015b41
64015996:	cmp    eax,ebx
64015998:	je     0x64015b41
6401599e:	cmp    eax,0x1
640159a1:	jne    0x64015b72
640159a7:	cmp    DWORD PTR [ebp+0x20],ebx
640159aa:	mov    DWORD PTR [ebp-0x8],ebx
640159ad:	jne    0x640159b7
640159af:	mov    eax,DWORD PTR [esi]
640159b1:	mov    eax,DWORD PTR [eax+0x4]
640159b4:	mov    DWORD PTR [ebp+0x20],eax
640159b7:	mov    esi,DWORD PTR ds:0x64024028
640159bd:	xor    eax,eax
640159bf:	cmp    DWORD PTR [ebp+0x24],ebx
640159c2:	push   ebx
640159c3:	push   ebx
640159c4:	push   DWORD PTR [ebp+0x14]
640159c7:	setne  al
640159ca:	push   DWORD PTR [ebp+0x10]
640159cd:	lea    eax,[eax*8+0x1]
640159d4:	push   eax
640159d5:	push   DWORD PTR [ebp+0x20]
640159d8:	call   esi
640159da:	mov    edi,eax
640159dc:	cmp    edi,ebx
640159de:	je     0x64015b72
640159e4:	jle    0x64015a29
640159e6:	push   0xffffffe0
640159e8:	xor    edx,edx
640159ea:	pop    eax
640159eb:	div    edi
640159ed:	cmp    eax,0x2
640159f0:	jb     0x64015a29
640159f2:	lea    eax,[edi+edi*1+0x8]
640159f6:	cmp    eax,0x400
640159fb:	ja     0x64015a10
640159fd:	call   0x64013ce0
64015a02:	mov    eax,esp
64015a04:	cmp    eax,ebx
64015a06:	je     0x64015a24
64015a08:	mov    DWORD PTR [eax],0xcccc
64015a0e:	jmp    0x64015a21
64015a10:	push   eax
64015a11:	call   0x6401487e
64015a16:	cmp    eax,ebx
64015a18:	pop    ecx
64015a19:	je     0x64015a24
64015a1b:	mov    DWORD PTR [eax],0xdddd
64015a21:	add    eax,0x8
64015a24:	mov    DWORD PTR [ebp-0xc],eax
64015a27:	jmp    0x64015a2c
64015a29:	mov    DWORD PTR [ebp-0xc],ebx
64015a2c:	cmp    DWORD PTR [ebp-0xc],ebx
64015a2f:	je     0x64015b72
64015a35:	push   edi
64015a36:	push   DWORD PTR [ebp-0xc]
64015a39:	push   DWORD PTR [ebp+0x14]
64015a3c:	push   DWORD PTR [ebp+0x10]
64015a3f:	push   0x1
64015a41:	push   DWORD PTR [ebp+0x20]
64015a44:	call   esi
64015a46:	test   eax,eax
64015a48:	je     0x64015b30
64015a4e:	mov    esi,DWORD PTR ds:0x640241b4
64015a54:	push   ebx
64015a55:	push   ebx
64015a56:	push   edi
64015a57:	push   DWORD PTR [ebp-0xc]
64015a5a:	push   DWORD PTR [ebp+0xc]
64015a5d:	push   DWORD PTR [ebp+0x8]
64015a60:	call   esi
64015a62:	mov    ecx,eax
64015a64:	cmp    ecx,ebx
64015a66:	mov    DWORD PTR [ebp-0x8],ecx
64015a69:	je     0x64015b30
64015a6f:	test   WORD PTR [ebp+0xc],0x400
64015a75:	je     0x64015aa0
64015a77:	cmp    DWORD PTR [ebp+0x1c],ebx
64015a7a:	je     0x64015b30
64015a80:	cmp    ecx,DWORD PTR [ebp+0x1c]
64015a83:	jg     0x64015b30
64015a89:	push   DWORD PTR [ebp+0x1c]
64015a8c:	push   DWORD PTR [ebp+0x18]
64015a8f:	push   edi
64015a90:	push   DWORD PTR [ebp-0xc]
64015a93:	push   DWORD PTR [ebp+0xc]
64015a96:	push   DWORD PTR [ebp+0x8]
64015a99:	call   esi
64015a9b:	jmp    0x64015b30
64015aa0:	cmp    ecx,ebx
64015aa2:	jle    0x64015ae9
64015aa4:	push   0xffffffe0
64015aa6:	xor    edx,edx
64015aa8:	pop    eax
64015aa9:	div    ecx
64015aab:	cmp    eax,0x2
64015aae:	jb     0x64015ae9
64015ab0:	lea    eax,[ecx+ecx*1+0x8]
64015ab4:	cmp    eax,0x400
64015ab9:	ja     0x64015ad1
64015abb:	call   0x64013ce0
64015ac0:	mov    esi,esp
64015ac2:	cmp    esi,ebx
64015ac4:	je     0x64015b30
64015ac6:	mov    DWORD PTR [esi],0xcccc
64015acc:	add    esi,0x8
64015acf:	jmp    0x64015aeb
64015ad1:	push   eax
64015ad2:	call   0x6401487e
64015ad7:	cmp    eax,ebx
64015ad9:	pop    ecx
64015ada:	je     0x64015ae5
64015adc:	mov    DWORD PTR [eax],0xdddd
64015ae2:	add    eax,0x8
64015ae5:	mov    esi,eax
64015ae7:	jmp    0x64015aeb
64015ae9:	xor    esi,esi
64015aeb:	cmp    esi,ebx
64015aed:	je     0x64015b30
64015aef:	push   DWORD PTR [ebp-0x8]
64015af2:	push   esi
64015af3:	push   edi
64015af4:	push   DWORD PTR [ebp-0xc]
64015af7:	push   DWORD PTR [ebp+0xc]
64015afa:	push   DWORD PTR [ebp+0x8]
64015afd:	call   DWORD PTR ds:0x640241b4
64015b03:	test   eax,eax
64015b05:	je     0x64015b29
64015b07:	cmp    DWORD PTR [ebp+0x1c],ebx
64015b0a:	push   ebx
64015b0b:	push   ebx
64015b0c:	jne    0x64015b12
64015b0e:	push   ebx
64015b0f:	push   ebx
64015b10:	jmp    0x64015b18
64015b12:	push   DWORD PTR [ebp+0x1c]
64015b15:	push   DWORD PTR [ebp+0x18]
64015b18:	push   DWORD PTR [ebp-0x8]
64015b1b:	push   esi
64015b1c:	push   ebx
64015b1d:	push   DWORD PTR [ebp+0x20]
64015b20:	call   DWORD PTR ds:0x64024010
64015b26:	mov    DWORD PTR [ebp-0x8],eax
64015b29:	push   esi
64015b2a:	call   0x640142ca
64015b2f:	pop    ecx
64015b30:	push   DWORD PTR [ebp-0xc]
64015b33:	call   0x640142ca
64015b38:	mov    eax,DWORD PTR [ebp-0x8]
64015b3b:	pop    ecx
64015b3c:	jmp    0x64015c9a
64015b41:	cmp    DWORD PTR [ebp+0x8],ebx
64015b44:	mov    DWORD PTR [ebp-0xc],ebx
64015b47:	mov    DWORD PTR [ebp-0x10],ebx
64015b4a:	jne    0x64015b54
64015b4c:	mov    eax,DWORD PTR [esi]
64015b4e:	mov    eax,DWORD PTR [eax+0x14]
64015b51:	mov    DWORD PTR [ebp+0x8],eax
64015b54:	cmp    DWORD PTR [ebp+0x20],ebx
64015b57:	jne    0x64015b61
64015b59:	mov    eax,DWORD PTR [esi]
64015b5b:	mov    eax,DWORD PTR [eax+0x4]
64015b5e:	mov    DWORD PTR [ebp+0x20],eax
64015b61:	push   DWORD PTR [ebp+0x8]
64015b64:	call   0x6401e020
64015b69:	cmp    eax,0xffffffff
64015b6c:	pop    ecx
64015b6d:	mov    DWORD PTR [ebp-0x14],eax
64015b70:	jne    0x64015b79
64015b72:	xor    eax,eax
64015b74:	jmp    0x64015c9a
64015b79:	cmp    eax,DWORD PTR [ebp+0x20]
64015b7c:	je     0x64015c5d
64015b82:	push   ebx
64015b83:	push   ebx
64015b84:	lea    ecx,[ebp+0x14]
64015b87:	push   ecx
64015b88:	push   DWORD PTR [ebp+0x10]
64015b8b:	push   eax
64015b8c:	push   DWORD PTR [ebp+0x20]
64015b8f:	call   0x6401e067
64015b94:	add    esp,0x18
64015b97:	cmp    eax,ebx
64015b99:	mov    DWORD PTR [ebp-0xc],eax
64015b9c:	je     0x64015b72
64015b9e:	mov    esi,DWORD PTR ds:0x640241b0
64015ba4:	push   ebx
64015ba5:	push   ebx
64015ba6:	push   DWORD PTR [ebp+0x14]
64015ba9:	push   eax
64015baa:	push   DWORD PTR [ebp+0xc]
64015bad:	push   DWORD PTR [ebp+0x8]
64015bb0:	call   esi
64015bb2:	cmp    eax,ebx
64015bb4:	mov    DWORD PTR [ebp-0x8],eax
64015bb7:	jne    0x64015bc0
64015bb9:	xor    esi,esi
64015bbb:	jmp    0x64015c77
64015bc0:	jle    0x64015bff
64015bc2:	cmp    eax,0xffffffe0
64015bc5:	ja     0x64015bff
64015bc7:	add    eax,0x8
64015bca:	cmp    eax,0x400
64015bcf:	ja     0x64015be7
64015bd1:	call   0x64013ce0
64015bd6:	mov    edi,esp
64015bd8:	cmp    edi,ebx
64015bda:	je     0x64015bb9
64015bdc:	mov    DWORD PTR [edi],0xcccc
64015be2:	add    edi,0x8
64015be5:	jmp    0x64015c01
64015be7:	push   eax
64015be8:	call   0x6401487e
64015bed:	cmp    eax,ebx
64015bef:	pop    ecx
64015bf0:	je     0x64015bfb
64015bf2:	mov    DWORD PTR [eax],0xdddd
64015bf8:	add    eax,0x8
64015bfb:	mov    edi,eax
64015bfd:	jmp    0x64015c01
64015bff:	xor    edi,edi
64015c01:	cmp    edi,ebx
64015c03:	je     0x64015bb9
64015c05:	push   DWORD PTR [ebp-0x8]
64015c08:	push   ebx
64015c09:	push   edi
64015c0a:	call   0x64015120
64015c0f:	add    esp,0xc
64015c12:	push   DWORD PTR [ebp-0x8]
64015c15:	push   edi
64015c16:	push   DWORD PTR [ebp+0x14]
64015c19:	push   DWORD PTR [ebp-0xc]
64015c1c:	push   DWORD PTR [ebp+0xc]
64015c1f:	push   DWORD PTR [ebp+0x8]
64015c22:	call   esi
64015c24:	cmp    eax,ebx
64015c26:	mov    DWORD PTR [ebp-0x8],eax
64015c29:	jne    0x64015c2f
64015c2b:	xor    esi,esi
64015c2d:	jmp    0x64015c54
64015c2f:	push   DWORD PTR [ebp+0x1c]
64015c32:	lea    eax,[ebp-0x8]
64015c35:	push   DWORD PTR [ebp+0x18]
64015c38:	push   eax
64015c39:	push   edi
64015c3a:	push   DWORD PTR [ebp+0x20]
64015c3d:	push   DWORD PTR [ebp-0x14]
64015c40:	call   0x6401e067
64015c45:	mov    esi,eax
64015c47:	mov    DWORD PTR [ebp-0x10],esi
64015c4a:	add    esp,0x18
64015c4d:	neg    esi
64015c4f:	sbb    esi,esi
64015c51:	and    esi,DWORD PTR [ebp-0x8]
64015c54:	push   edi
64015c55:	call   0x640142ca
64015c5a:	pop    ecx
64015c5b:	jmp    0x64015c77
64015c5d:	push   DWORD PTR [ebp+0x1c]
64015c60:	push   DWORD PTR [ebp+0x18]
64015c63:	push   DWORD PTR [ebp+0x14]
64015c66:	push   DWORD PTR [ebp+0x10]
64015c69:	push   DWORD PTR [ebp+0xc]
64015c6c:	push   DWORD PTR [ebp+0x8]
64015c6f:	call   DWORD PTR ds:0x640241b0
64015c75:	mov    esi,eax
64015c77:	cmp    DWORD PTR [ebp-0xc],ebx
64015c7a:	je     0x64015c85
64015c7c:	push   DWORD PTR [ebp-0xc]
64015c7f:	call   0x6401477f
64015c84:	pop    ecx
64015c85:	mov    eax,DWORD PTR [ebp-0x10]
64015c88:	cmp    eax,ebx
64015c8a:	je     0x64015c98
64015c8c:	cmp    DWORD PTR [ebp+0x18],eax
64015c8f:	je     0x64015c98
64015c91:	push   eax
64015c92:	call   0x6401477f
64015c97:	pop    ecx
64015c98:	mov    eax,esi
64015c9a:	lea    esp,[ebp-0x20]
64015c9d:	pop    edi
64015c9e:	pop    esi
64015c9f:	pop    ebx
64015ca0:	mov    ecx,DWORD PTR [ebp-0x4]
64015ca3:	xor    ecx,ebp
64015ca5:	call   0x64013cc6
64015caa:	leave  
64015cab:	ret    
64015cac:	push   ebp
64015cad:	mov    ebp,esp
64015caf:	sub    esp,0x10
64015cb2:	push   DWORD PTR [ebp+0x8]
64015cb5:	lea    ecx,[ebp-0x10]
64015cb8:	call   0x640142e5
64015cbd:	push   DWORD PTR [ebp+0x28]
64015cc0:	lea    ecx,[ebp-0x10]
64015cc3:	push   DWORD PTR [ebp+0x24]
64015cc6:	push   DWORD PTR [ebp+0x20]
64015cc9:	push   DWORD PTR [ebp+0x1c]
64015ccc:	push   DWORD PTR [ebp+0x18]
64015ccf:	push   DWORD PTR [ebp+0x14]
64015cd2:	push   DWORD PTR [ebp+0x10]
64015cd5:	push   DWORD PTR [ebp+0xc]
64015cd8:	call   0x6401590a
64015cdd:	add    esp,0x20
64015ce0:	cmp    BYTE PTR [ebp-0x4],0x0
64015ce4:	je     0x64015ced
64015ce6:	mov    ecx,DWORD PTR [ebp-0x8]
64015ce9:	and    DWORD PTR [ecx+0x70],0xfffffffd
64015ced:	leave  
64015cee:	ret    
64015cef:	push   esi
64015cf0:	push   edi
64015cf1:	xor    esi,esi
64015cf3:	push   DWORD PTR [esp+0xc]
64015cf7:	call   0x6401487e
64015cfc:	mov    edi,eax
64015cfe:	test   edi,edi
64015d00:	pop    ecx
64015d01:	jne    0x64015d2a
64015d03:	cmp    DWORD PTR ds:0x64038eb0,eax
64015d09:	jbe    0x64015d2a
64015d0b:	push   esi
64015d0c:	call   DWORD PTR ds:0x64024040
64015d12:	lea    eax,[esi+0x3e8]
64015d18:	cmp    eax,DWORD PTR ds:0x64038eb0
64015d1e:	jbe    0x64015d23
64015d20:	or     eax,0xffffffff
64015d23:	cmp    eax,0xffffffff
64015d26:	mov    esi,eax
64015d28:	jne    0x64015cf3
64015d2a:	mov    eax,edi
64015d2c:	pop    edi
64015d2d:	pop    esi
64015d2e:	ret    
64015d2f:	push   esi
64015d30:	push   edi
64015d31:	xor    esi,esi
64015d33:	push   0x0
64015d35:	push   DWORD PTR [esp+0x14]
64015d39:	push   DWORD PTR [esp+0x14]
64015d3d:	call   0x6401e219
64015d42:	mov    edi,eax
64015d44:	add    esp,0xc
64015d47:	test   edi,edi
64015d49:	jne    0x64015d72
64015d4b:	cmp    DWORD PTR ds:0x64038eb0,eax
64015d51:	jbe    0x64015d72
64015d53:	push   esi
64015d54:	call   DWORD PTR ds:0x64024040
64015d5a:	lea    eax,[esi+0x3e8]
64015d60:	cmp    eax,DWORD PTR ds:0x64038eb0
64015d66:	jbe    0x64015d6b
64015d68:	or     eax,0xffffffff
64015d6b:	cmp    eax,0xffffffff
64015d6e:	mov    esi,eax
64015d70:	jne    0x64015d33
64015d72:	mov    eax,edi
64015d74:	pop    edi
64015d75:	pop    esi
64015d76:	ret    
64015d77:	push   esi
64015d78:	push   edi
64015d79:	xor    esi,esi
64015d7b:	push   DWORD PTR [esp+0x10]
64015d7f:	push   DWORD PTR [esp+0x10]
64015d83:	call   0x640160c6
64015d88:	mov    edi,eax
64015d8a:	test   edi,edi
64015d8c:	pop    ecx
64015d8d:	pop    ecx
64015d8e:	jne    0x64015dbd
64015d90:	cmp    DWORD PTR [esp+0x10],eax
64015d94:	je     0x64015dbd
64015d96:	cmp    DWORD PTR ds:0x64038eb0,eax
64015d9c:	jbe    0x64015dbd
64015d9e:	push   esi
64015d9f:	call   DWORD PTR ds:0x64024040
64015da5:	lea    eax,[esi+0x3e8]
64015dab:	cmp    eax,DWORD PTR ds:0x64038eb0
64015db1:	jbe    0x64015db6
64015db3:	or     eax,0xffffffff
64015db6:	cmp    eax,0xffffffff
64015db9:	mov    esi,eax
64015dbb:	jne    0x64015d7b
64015dbd:	mov    eax,edi
64015dbf:	pop    edi
64015dc0:	pop    esi
64015dc1:	ret    
64015dc2:	push   ebp
64015dc3:	lea    ebp,[esp-0x2a8]
64015dca:	sub    esp,0x328
64015dd0:	mov    eax,ds:0x64037644
64015dd5:	xor    eax,ebp
64015dd7:	mov    DWORD PTR [ebp+0x2a4],eax
64015ddd:	test   BYTE PTR ds:0x6403775c,0x1
64015de4:	push   esi
64015de5:	je     0x64015def
64015de7:	push   0xa
64015de9:	call   0x6401be1d
64015dee:	pop    ecx
64015def:	call   0x6401e384
64015df4:	test   eax,eax
64015df6:	je     0x64015e00
64015df8:	push   0x16
64015dfa:	call   0x6401e391
64015dff:	pop    ecx
64015e00:	test   BYTE PTR ds:0x6403775c,0x2
64015e07:	je     0x64015ead
64015e0d:	mov    DWORD PTR [ebp+0x88],eax
64015e13:	mov    DWORD PTR [ebp+0x84],ecx
64015e19:	mov    DWORD PTR [ebp+0x80],edx
64015e1f:	mov    DWORD PTR [ebp+0x7c],ebx
64015e22:	mov    DWORD PTR [ebp+0x78],esi
64015e25:	mov    DWORD PTR [ebp+0x74],edi
64015e28:	data16 mov WORD PTR [ebp+0xa0],ss
64015e2f:	data16 mov WORD PTR [ebp+0x94],cs
64015e36:	data16 mov WORD PTR [ebp+0x70],ds
64015e3a:	data16 mov WORD PTR [ebp+0x6c],es
64015e3e:	data16 mov WORD PTR [ebp+0x68],fs
64015e42:	data16 mov WORD PTR [ebp+0x64],gs
64015e46:	pushf  
64015e47:	pop    DWORD PTR [ebp+0x98]
64015e4d:	mov    esi,DWORD PTR [ebp+0x2ac]
64015e53:	lea    eax,[ebp+0x2ac]
64015e59:	mov    DWORD PTR [ebp+0x9c],eax
64015e5f:	mov    DWORD PTR [ebp-0x28],0x10001
64015e66:	mov    DWORD PTR [ebp+0x90],esi
64015e6c:	mov    eax,DWORD PTR [eax-0x4]
64015e6f:	push   0x50
64015e71:	mov    DWORD PTR [ebp+0x8c],eax
64015e77:	lea    eax,[ebp-0x80]
64015e7a:	push   0x0
64015e7c:	push   eax
64015e7d:	call   0x64015120
64015e82:	lea    eax,[ebp-0x80]
64015e85:	add    esp,0xc
64015e88:	mov    DWORD PTR [ebp-0x30],eax
64015e8b:	lea    eax,[ebp-0x28]
64015e8e:	push   0x0
64015e90:	mov    DWORD PTR [ebp-0x80],0x40000015
64015e97:	mov    DWORD PTR [ebp-0x74],esi
64015e9a:	mov    DWORD PTR [ebp-0x2c],eax
64015e9d:	call   DWORD PTR ds:0x6402419c
64015ea3:	lea    eax,[ebp-0x30]
64015ea6:	push   eax
64015ea7:	call   DWORD PTR ds:0x64024198
64015ead:	push   0x3
64015eaf:	call   0x64018066
64015eb4:	int3   
64015eb5:	mov    ecx,DWORD PTR [esp+0x8]
64015eb9:	mov    eax,ds:0x6403775c
64015ebe:	mov    edx,DWORD PTR [esp+0x4]
64015ec2:	and    edx,DWORD PTR [esp+0x8]
64015ec6:	not    ecx
64015ec8:	and    ecx,eax
64015eca:	or     ecx,edx
64015ecc:	mov    DWORD PTR ds:0x6403775c,ecx
64015ed2:	ret    
64015ed3:	int3   
64015ed4:	push   0x64015f30
64015ed9:	push   DWORD PTR fs:0x0
64015ee0:	mov    eax,DWORD PTR [esp+0x10]
64015ee4:	mov    DWORD PTR [esp+0x10],ebp
64015ee8:	lea    ebp,[esp+0x10]
64015eec:	sub    esp,eax
64015eee:	push   ebx
64015eef:	push   esi
64015ef0:	push   edi
64015ef1:	mov    eax,ds:0x64037644
64015ef6:	xor    DWORD PTR [ebp-0x4],eax
64015ef9:	xor    eax,ebp
64015efb:	push   eax
64015efc:	mov    DWORD PTR [ebp-0x18],esp
64015eff:	push   DWORD PTR [ebp-0x8]
64015f02:	mov    eax,DWORD PTR [ebp-0x4]
64015f05:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015f0c:	mov    DWORD PTR [ebp-0x8],eax
64015f0f:	lea    eax,[ebp-0x10]
64015f12:	mov    fs:0x0,eax
64015f18:	ret    
64015f19:	mov    ecx,DWORD PTR [ebp-0x10]
64015f1c:	mov    DWORD PTR fs:0x0,ecx
64015f23:	pop    ecx
64015f24:	pop    edi
64015f25:	pop    edi
64015f26:	pop    esi
64015f27:	pop    ebx
64015f28:	mov    esp,ebp
64015f2a:	pop    ebp
64015f2b:	push   ecx
64015f2c:	ret    
64015f2d:	int3   
64015f2e:	int3   
64015f2f:	int3   
64015f30:	sub    esp,0x14
64015f33:	push   ebx
64015f34:	mov    ebx,DWORD PTR [esp+0x20]
64015f38:	push   ebp
64015f39:	push   esi
64015f3a:	mov    esi,DWORD PTR [ebx+0x8]
64015f3d:	xor    esi,DWORD PTR ds:0x64037644
64015f43:	push   edi
64015f44:	mov    eax,DWORD PTR [esi]
64015f46:	cmp    eax,0xfffffffe
64015f49:	mov    BYTE PTR [esp+0x13],0x0
64015f4e:	mov    DWORD PTR [esp+0x18],0x1
64015f56:	lea    edi,[ebx+0x10]
64015f59:	je     0x64015f68
64015f5b:	mov    ecx,DWORD PTR [esi+0x4]
64015f5e:	add    ecx,edi
64015f60:	xor    ecx,DWORD PTR [eax+edi*1]
64015f63:	call   0x64013cc6
64015f68:	mov    ecx,DWORD PTR [esi+0xc]
64015f6b:	mov    eax,DWORD PTR [esi+0x8]
64015f6e:	add    ecx,edi
64015f70:	xor    ecx,DWORD PTR [eax+edi*1]
64015f73:	call   0x64013cc6
64015f78:	mov    eax,DWORD PTR [esp+0x28]
64015f7c:	test   BYTE PTR [eax+0x4],0x66
64015f80:	jne    0x640160a5
64015f86:	mov    ebp,DWORD PTR [ebx+0xc]
64015f89:	cmp    ebp,0xfffffffe
64015f8c:	mov    ecx,DWORD PTR [esp+0x30]
64015f90:	lea    edx,[esp+0x1c]
64015f94:	mov    DWORD PTR [esp+0x1c],eax
64015f98:	mov    DWORD PTR [esp+0x20],ecx
64015f9c:	mov    DWORD PTR [ebx-0x4],edx
64015f9f:	je     0x64015fff
64015fa1:	lea    eax,[ebp+ebp*2+0x0]
64015fa5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64015fa9:	test   ecx,ecx
64015fab:	lea    ebx,[esi+eax*4+0x10]
64015faf:	mov    eax,DWORD PTR [ebx]
64015fb1:	mov    DWORD PTR [esp+0x14],eax
64015fb5:	je     0x64015fcd
64015fb7:	mov    edx,edi
64015fb9:	call   0x64019bba
64015fbe:	test   eax,eax
64015fc0:	mov    BYTE PTR [esp+0x13],0x1
64015fc5:	jl     0x6401600b
64015fc7:	jg     0x64016015
64015fc9:	mov    eax,DWORD PTR [esp+0x14]
64015fcd:	cmp    eax,0xfffffffe
64015fd0:	mov    ebp,eax
64015fd2:	jne    0x64015fa1
64015fd4:	cmp    BYTE PTR [esp+0x13],0x0
64015fd9:	je     0x64015fff
64015fdb:	mov    eax,DWORD PTR [esi]
64015fdd:	cmp    eax,0xfffffffe
64015fe0:	je     0x64015fef
64015fe2:	mov    ecx,DWORD PTR [esi+0x4]
64015fe5:	add    ecx,edi
64015fe7:	xor    ecx,DWORD PTR [eax+edi*1]
64015fea:	call   0x64013cc6
64015fef:	mov    ecx,DWORD PTR [esi+0xc]
64015ff2:	mov    eax,DWORD PTR [esi+0x8]
64015ff5:	add    ecx,edi
64015ff7:	xor    ecx,DWORD PTR [eax+edi*1]
64015ffa:	call   0x64013cc6
64015fff:	mov    eax,DWORD PTR [esp+0x18]
64016003:	pop    edi
64016004:	pop    esi
64016005:	pop    ebp
64016006:	pop    ebx
64016007:	add    esp,0x14
6401600a:	ret    
6401600b:	mov    DWORD PTR [esp+0x18],0x0
64016013:	jmp    0x64015fdb
64016015:	mov    ecx,DWORD PTR [esp+0x28]
64016019:	cmp    DWORD PTR [ecx],0xe06d7363
6401601f:	jne    0x6401604b
64016021:	cmp    DWORD PTR ds:0x640284a0,0x0
64016028:	je     0x6401604b
6401602a:	push   0x640284a0
6401602f:	call   0x6401e5d0
64016034:	add    esp,0x4
64016037:	test   eax,eax
64016039:	je     0x6401604b
6401603b:	mov    edx,DWORD PTR [esp+0x28]
6401603f:	push   0x1
64016041:	push   edx
64016042:	call   DWORD PTR ds:0x640284a0
64016048:	add    esp,0x8
6401604b:	mov    ecx,DWORD PTR [esp+0x2c]
6401604f:	call   0x64019bea
64016054:	mov    eax,DWORD PTR [esp+0x2c]
64016058:	cmp    DWORD PTR [eax+0xc],ebp
6401605b:	je     0x64016070
6401605d:	push   0x64037644
64016062:	push   edi
64016063:	mov    edx,ebp
64016065:	mov    ecx,eax
64016067:	call   0x64019c04
6401606c:	mov    eax,DWORD PTR [esp+0x2c]
64016070:	mov    ecx,DWORD PTR [esp+0x14]
64016074:	mov    DWORD PTR [eax+0xc],ecx
64016077:	mov    eax,DWORD PTR [esi]
64016079:	cmp    eax,0xfffffffe
6401607c:	je     0x6401608b
6401607e:	mov    ecx,DWORD PTR [esi+0x4]
64016081:	add    ecx,edi
64016083:	xor    ecx,DWORD PTR [eax+edi*1]
64016086:	call   0x64013cc6
6401608b:	mov    ecx,DWORD PTR [esi+0xc]
6401608e:	mov    edx,DWORD PTR [esi+0x8]
64016091:	add    ecx,edi
64016093:	xor    ecx,DWORD PTR [edx+edi*1]
64016096:	call   0x64013cc6
6401609b:	mov    ecx,DWORD PTR [ebx+0x8]
6401609e:	mov    edx,edi
640160a0:	jmp    0x64019bd1
640160a5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
640160a9:	je     0x64015fff
640160af:	push   0x64037644
640160b4:	push   edi
640160b5:	mov    ecx,ebx
640160b7:	mov    edx,0xfffffffe
640160bc:	call   0x64019c04
640160c1:	jmp    0x64015fdb
640160c6:	push   0x10
640160c8:	push   0x6402b798
640160cd:	call   0x64015ed4
640160d2:	mov    ebx,DWORD PTR [ebp+0x8]
640160d5:	test   ebx,ebx
640160d7:	jne    0x640160e7
640160d9:	push   DWORD PTR [ebp+0xc]
640160dc:	call   0x6401487e
640160e1:	pop    ecx
640160e2:	jmp    0x640162b3
640160e7:	mov    esi,DWORD PTR [ebp+0xc]
640160ea:	test   esi,esi
640160ec:	jne    0x640160fa
640160ee:	push   ebx
640160ef:	call   0x6401477f
640160f4:	pop    ecx
640160f5:	jmp    0x640162b1
640160fa:	cmp    DWORD PTR ds:0x6403ab44,0x3
64016101:	jne    0x6401629a
64016107:	xor    edi,edi
64016109:	mov    DWORD PTR [ebp-0x1c],edi
6401610c:	cmp    esi,0xffffffe0
6401610f:	ja     0x6401629f
64016115:	push   0x4
64016117:	call   0x6401b2ba
6401611c:	pop    ecx
6401611d:	mov    DWORD PTR [ebp-0x4],edi
64016120:	push   ebx
64016121:	call   0x6401b333
64016126:	pop    ecx
64016127:	mov    DWORD PTR [ebp-0x20],eax
6401612a:	cmp    eax,edi
6401612c:	je     0x640161d0
64016132:	cmp    esi,DWORD PTR ds:0x64039b24
64016138:	ja     0x64016183
6401613a:	push   esi
6401613b:	push   ebx
6401613c:	push   eax
6401613d:	call   0x6401b828
64016142:	add    esp,0xc
64016145:	test   eax,eax
64016147:	je     0x6401614e
64016149:	mov    DWORD PTR [ebp-0x1c],ebx
6401614c:	jmp    0x64016183
6401614e:	push   esi
6401614f:	call   0x6401bb07
64016154:	pop    ecx
64016155:	mov    DWORD PTR [ebp-0x1c],eax
64016158:	cmp    eax,edi
6401615a:	je     0x64016183
6401615c:	mov    eax,DWORD PTR [ebx-0x4]
6401615f:	dec    eax
64016160:	cmp    eax,esi
64016162:	jb     0x64016166
64016164:	mov    eax,esi
64016166:	push   eax
64016167:	push   ebx
64016168:	push   DWORD PTR [ebp-0x1c]
6401616b:	call   0x640151a0
64016170:	push   ebx
64016171:	call   0x6401b333
64016176:	mov    DWORD PTR [ebp-0x20],eax
64016179:	push   ebx
6401617a:	push   eax
6401617b:	call   0x6401b35e
64016180:	add    esp,0x18
64016183:	cmp    DWORD PTR [ebp-0x1c],edi
64016186:	jne    0x640161d0
64016188:	cmp    esi,edi
6401618a:	jne    0x64016192
6401618c:	xor    esi,esi
6401618e:	inc    esi
6401618f:	mov    DWORD PTR [ebp+0xc],esi
64016192:	add    esi,0xf
64016195:	and    esi,0xfffffff0
64016198:	mov    DWORD PTR [ebp+0xc],esi
6401619b:	push   esi
6401619c:	push   edi
6401619d:	push   DWORD PTR ds:0x64039354
640161a3:	call   DWORD PTR ds:0x64024180
640161a9:	mov    DWORD PTR [ebp-0x1c],eax
640161ac:	cmp    eax,edi
640161ae:	je     0x640161d0
640161b0:	mov    eax,DWORD PTR [ebx-0x4]
640161b3:	dec    eax
640161b4:	cmp    eax,esi
640161b6:	jb     0x640161ba
640161b8:	mov    eax,esi
640161ba:	push   eax
640161bb:	push   ebx
640161bc:	push   DWORD PTR [ebp-0x1c]
640161bf:	call   0x640151a0
640161c4:	push   ebx
640161c5:	push   DWORD PTR [ebp-0x20]
640161c8:	call   0x6401b35e
640161cd:	add    esp,0x14
640161d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640161d7:	call   0x6401620a
640161dc:	cmp    DWORD PTR [ebp-0x20],0x0
640161e0:	jne    0x64016213
640161e2:	test   esi,esi
640161e4:	jne    0x640161e7
640161e6:	inc    esi
640161e7:	add    esi,0xf
640161ea:	and    esi,0xfffffff0
640161ed:	mov    DWORD PTR [ebp+0xc],esi
640161f0:	push   esi
640161f1:	push   ebx
640161f2:	push   0x0
640161f4:	push   DWORD PTR ds:0x64039354
640161fa:	call   DWORD PTR ds:0x64024188
64016200:	mov    edi,eax
64016202:	jmp    0x64016216
64016204:	mov    esi,DWORD PTR [ebp+0xc]
64016207:	mov    ebx,DWORD PTR [ebp+0x8]
6401620a:	push   0x4
6401620c:	call   0x6401b1e2
64016211:	pop    ecx
64016212:	ret    
64016213:	mov    edi,DWORD PTR [ebp-0x1c]
64016216:	test   edi,edi
64016218:	jne    0x640162dd
6401621e:	cmp    DWORD PTR ds:0x6403980c,edi
64016224:	je     0x64016252
64016226:	push   esi
64016227:	call   0x6401683f
6401622c:	pop    ecx
6401622d:	test   eax,eax
6401622f:	jne    0x64016107
64016235:	call   0x64016483
6401623a:	cmp    DWORD PTR [ebp-0x20],edi
6401623d:	jne    0x640162ab
6401623f:	mov    esi,eax
64016241:	call   DWORD PTR ds:0x64024068
64016247:	push   eax
64016248:	call   0x64016448
6401624d:	pop    ecx
6401624e:	mov    DWORD PTR [esi],eax
64016250:	jmp    0x640162b1
64016252:	test   edi,edi
64016254:	jne    0x640162dd
6401625a:	call   0x64016483
6401625f:	cmp    DWORD PTR [ebp-0x20],edi
64016262:	je     0x640162cc
64016264:	mov    DWORD PTR [eax],0xc
6401626a:	jmp    0x640162dd
6401626c:	test   esi,esi
6401626e:	jne    0x64016271
64016270:	inc    esi
64016271:	push   esi
64016272:	push   ebx
64016273:	push   0x0
64016275:	push   DWORD PTR ds:0x64039354
6401627b:	call   DWORD PTR ds:0x64024188
64016281:	mov    edi,eax
64016283:	test   edi,edi
64016285:	jne    0x640162dd
64016287:	cmp    DWORD PTR ds:0x6403980c,eax
6401628d:	je     0x640162c3
6401628f:	push   esi
64016290:	call   0x6401683f
64016295:	pop    ecx
64016296:	test   eax,eax
64016298:	je     0x640162b9
6401629a:	cmp    esi,0xffffffe0
6401629d:	jbe    0x6401626c
6401629f:	push   esi
640162a0:	call   0x6401683f
640162a5:	pop    ecx
640162a6:	call   0x64016483
640162ab:	mov    DWORD PTR [eax],0xc
640162b1:	xor    eax,eax
640162b3:	call   0x64015f19
640162b8:	ret    
640162b9:	call   0x64016483
640162be:	jmp    0x6401623f
640162c3:	test   edi,edi
640162c5:	jne    0x640162dd
640162c7:	call   0x64016483
640162cc:	mov    esi,eax
640162ce:	call   DWORD PTR ds:0x64024068
640162d4:	push   eax
640162d5:	call   0x64016448
640162da:	mov    DWORD PTR [esi],eax
640162dc:	pop    ecx
640162dd:	mov    eax,edi
640162df:	jmp    0x640162b3
640162e1:	mov    ecx,DWORD PTR [esp+0x4]
640162e5:	push   ebx
640162e6:	xor    ebx,ebx
640162e8:	cmp    ecx,ebx
640162ea:	push   esi
640162eb:	push   edi
640162ec:	je     0x640162f6
640162ee:	mov    edi,DWORD PTR [esp+0x14]
640162f2:	cmp    edi,ebx
640162f4:	ja     0x64016311
640162f6:	call   0x64016483
640162fb:	push   0x16
640162fd:	pop    esi
640162fe:	mov    DWORD PTR [eax],esi
64016300:	push   ebx
64016301:	push   ebx
64016302:	push   ebx
64016303:	push   ebx
64016304:	push   ebx
64016305:	call   0x64013e12
6401630a:	add    esp,0x14
6401630d:	mov    eax,esi
6401630f:	jmp    0x64016342
64016311:	mov    esi,DWORD PTR [esp+0x18]
64016315:	cmp    esi,ebx
64016317:	jne    0x6401631d
64016319:	mov    BYTE PTR [ecx],bl
6401631b:	jmp    0x640162f6
6401631d:	mov    edx,ecx
6401631f:	mov    al,BYTE PTR [esi]
64016321:	mov    BYTE PTR [edx],al
64016323:	inc    edx
64016324:	inc    esi
64016325:	cmp    al,bl
64016327:	je     0x6401632c
64016329:	dec    edi
6401632a:	jne    0x6401631f
6401632c:	cmp    edi,ebx
6401632e:	jne    0x64016340
64016330:	mov    BYTE PTR [ecx],bl
64016332:	call   0x64016483
64016337:	push   0x22
64016339:	pop    ecx
6401633a:	mov    DWORD PTR [eax],ecx
6401633c:	mov    esi,ecx
6401633e:	jmp    0x64016300
64016340:	xor    eax,eax
64016342:	pop    edi
64016343:	pop    esi
64016344:	pop    ebx
64016345:	ret    
64016346:	push   0xc
64016348:	push   0x6402b7b8
6401634d:	call   0x64015ed4
64016352:	push   0xe
64016354:	call   0x6401b2ba
64016359:	pop    ecx
6401635a:	and    DWORD PTR [ebp-0x4],0x0
6401635e:	mov    esi,DWORD PTR [ebp+0x8]
64016361:	mov    ecx,DWORD PTR [esi+0x4]
64016364:	test   ecx,ecx
64016366:	je     0x64016397
64016368:	mov    eax,ds:0x64038eb8
6401636d:	mov    edx,0x64038eb4
64016372:	mov    DWORD PTR [ebp-0x1c],eax
64016375:	test   eax,eax
64016377:	je     0x6401638a
64016379:	cmp    DWORD PTR [eax],ecx
6401637b:	jne    0x640163a9
6401637d:	mov    ecx,DWORD PTR [eax+0x4]
64016380:	mov    DWORD PTR [edx+0x4],ecx
64016383:	push   eax
64016384:	call   0x6401477f
64016389:	pop    ecx
6401638a:	push   DWORD PTR [esi+0x4]
6401638d:	call   0x6401477f
64016392:	pop    ecx
64016393:	and    DWORD PTR [esi+0x4],0x0
64016397:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401639e:	call   0x640163ad
640163a3:	call   0x64015f19
640163a8:	ret    
640163a9:	mov    edx,eax
640163ab:	jmp    0x64016372
640163ad:	push   0xe
640163af:	call   0x6401b1e2
640163b4:	pop    ecx
640163b5:	ret    
640163b6:	int3   
640163b7:	int3   
640163b8:	int3   
640163b9:	int3   
640163ba:	int3   
640163bb:	int3   
640163bc:	int3   
640163bd:	int3   
640163be:	int3   
640163bf:	int3   
640163c0:	mov    edx,DWORD PTR [esp+0x4]
640163c4:	mov    ecx,DWORD PTR [esp+0x8]
640163c8:	test   edx,0x3
640163ce:	jne    0x6401640c
640163d0:	mov    eax,DWORD PTR [edx]
640163d2:	cmp    al,BYTE PTR [ecx]
640163d4:	jne    0x64016404
640163d6:	or     al,al
640163d8:	je     0x64016400
640163da:	cmp    ah,BYTE PTR [ecx+0x1]
640163dd:	jne    0x64016404
640163df:	or     ah,ah
640163e1:	je     0x64016400
640163e3:	shr    eax,0x10
640163e6:	cmp    al,BYTE PTR [ecx+0x2]
640163e9:	jne    0x64016404
640163eb:	or     al,al
640163ed:	je     0x64016400
640163ef:	cmp    ah,BYTE PTR [ecx+0x3]
640163f2:	jne    0x64016404
640163f4:	add    ecx,0x4
640163f7:	add    edx,0x4
640163fa:	or     ah,ah
640163fc:	jne    0x640163d0
640163fe:	mov    edi,edi
64016400:	xor    eax,eax
64016402:	ret    
64016403:	nop
64016404:	sbb    eax,eax
64016406:	shl    eax,1
64016408:	add    eax,0x1
6401640b:	ret    
6401640c:	test   edx,0x1
64016412:	je     0x6401642c
64016414:	mov    al,BYTE PTR [edx]
64016416:	add    edx,0x1
64016419:	cmp    al,BYTE PTR [ecx]
6401641b:	jne    0x64016404
6401641d:	add    ecx,0x1
64016420:	or     al,al
64016422:	je     0x64016400
64016424:	test   edx,0x2
6401642a:	je     0x640163d0
6401642c:	mov    ax,WORD PTR [edx]
6401642f:	add    edx,0x2
64016432:	cmp    al,BYTE PTR [ecx]
64016434:	jne    0x64016404
64016436:	or     al,al
64016438:	je     0x64016400
6401643a:	cmp    ah,BYTE PTR [ecx+0x1]
6401643d:	jne    0x64016404
6401643f:	or     ah,ah
64016441:	je     0x64016400
64016443:	add    ecx,0x2
64016446:	jmp    0x640163d0
64016448:	mov    eax,DWORD PTR [esp+0x4]
6401644c:	xor    ecx,ecx
6401644e:	cmp    eax,DWORD PTR [ecx*8+0x64037770]
64016455:	je     0x64016469
64016457:	inc    ecx
64016458:	cmp    ecx,0x2d
6401645b:	jb     0x6401644e
6401645d:	lea    ecx,[eax-0x13]
64016460:	cmp    ecx,0x11
64016463:	ja     0x64016471
64016465:	push   0xd
64016467:	pop    eax
64016468:	ret    
64016469:	mov    eax,DWORD PTR [ecx*8+0x64037774]
64016470:	ret    
64016471:	add    eax,0xffffff44
64016476:	push   0xe
64016478:	pop    ecx
64016479:	cmp    ecx,eax
6401647b:	sbb    eax,eax
6401647d:	and    eax,ecx
6401647f:	add    eax,0x8
64016482:	ret    
64016483:	call   0x64017773
64016488:	test   eax,eax
6401648a:	jne    0x64016492
6401648c:	mov    eax,0x640378d8
64016491:	ret    
64016492:	add    eax,0x8
64016495:	ret    
64016496:	call   0x64017773
6401649b:	test   eax,eax
6401649d:	jne    0x640164a5
6401649f:	mov    eax,0x640378dc
640164a4:	ret    
640164a5:	add    eax,0xc
640164a8:	ret    
640164a9:	push   esi
640164aa:	call   0x64016496
640164af:	mov    ecx,DWORD PTR [esp+0x8]
640164b3:	push   ecx
640164b4:	mov    DWORD PTR [eax],ecx
640164b6:	call   0x64016448
640164bb:	pop    ecx
640164bc:	mov    esi,eax
640164be:	call   0x64016483
640164c3:	mov    DWORD PTR [eax],esi
640164c5:	pop    esi
640164c6:	ret    
640164c7:	int3   
640164c8:	int3   
640164c9:	int3   
640164ca:	int3   
640164cb:	int3   
640164cc:	int3   
640164cd:	int3   
640164ce:	int3   
640164cf:	int3   
640164d0:	push   ebp
640164d1:	mov    ebp,esp
640164d3:	push   edi
640164d4:	push   esi
640164d5:	mov    esi,DWORD PTR [ebp+0xc]
640164d8:	mov    ecx,DWORD PTR [ebp+0x10]
640164db:	mov    edi,DWORD PTR [ebp+0x8]
640164de:	mov    eax,ecx
640164e0:	mov    edx,ecx
640164e2:	add    eax,esi
640164e4:	cmp    edi,esi
640164e6:	jbe    0x640164f0
640164e8:	cmp    edi,eax
640164ea:	jb     0x64016694
640164f0:	cmp    ecx,0x100
640164f6:	jb     0x64016517
640164f8:	cmp    DWORD PTR ds:0x64039b18,0x0
640164ff:	je     0x64016517
64016501:	push   edi
64016502:	push   esi
64016503:	and    edi,0xf
64016506:	and    esi,0xf
64016509:	cmp    edi,esi
6401650b:	pop    esi
6401650c:	pop    edi
6401650d:	jne    0x64016517
6401650f:	pop    esi
64016510:	pop    edi
64016511:	pop    ebp
64016512:	jmp    0x6401d930
64016517:	test   edi,0x3
6401651d:	jne    0x64016534
6401651f:	shr    ecx,0x2
64016522:	and    edx,0x3
64016525:	cmp    ecx,0x8
64016528:	jb     0x64016554
6401652a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401652c:	jmp    DWORD PTR [edx*4+0x64016644]
64016533:	nop
64016534:	mov    eax,edi
64016536:	mov    edx,0x3
6401653b:	sub    ecx,0x4
6401653e:	jb     0x6401654c
64016540:	and    eax,0x3
64016543:	add    ecx,eax
64016545:	jmp    DWORD PTR [eax*4+0x64016558]
6401654c:	jmp    DWORD PTR [ecx*4+0x64016654]
64016553:	nop
64016554:	jmp    DWORD PTR [ecx*4+0x640165d8]
6401655b:	nop
6401655c:	push   0x94640165
64016561:	add    DWORD PTR gs:[eax+edi*4+0x65],esp
64016566:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401656a:	mov    al,BYTE PTR [esi]
6401656c:	mov    BYTE PTR [edi],al
6401656e:	mov    al,BYTE PTR [esi+0x1]
64016571:	mov    BYTE PTR [edi+0x1],al
64016574:	mov    al,BYTE PTR [esi+0x2]
64016577:	shr    ecx,0x2
6401657a:	mov    BYTE PTR [edi+0x2],al
6401657d:	add    esi,0x3
64016580:	add    edi,0x3
64016583:	cmp    ecx,0x8
64016586:	jb     0x64016554
64016588:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401658a:	jmp    DWORD PTR [edx*4+0x64016644]
64016591:	lea    ecx,[ecx+0x0]
64016594:	and    edx,ecx
64016596:	mov    al,BYTE PTR [esi]
64016598:	mov    BYTE PTR [edi],al
6401659a:	mov    al,BYTE PTR [esi+0x1]
6401659d:	shr    ecx,0x2
640165a0:	mov    BYTE PTR [edi+0x1],al
640165a3:	add    esi,0x2
640165a6:	add    edi,0x2
640165a9:	cmp    ecx,0x8
640165ac:	jb     0x64016554
640165ae:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640165b0:	jmp    DWORD PTR [edx*4+0x64016644]
640165b7:	nop
640165b8:	and    edx,ecx
640165ba:	mov    al,BYTE PTR [esi]
640165bc:	mov    BYTE PTR [edi],al
640165be:	add    esi,0x1
640165c1:	shr    ecx,0x2
640165c4:	add    edi,0x1
640165c7:	cmp    ecx,0x8
640165ca:	jb     0x64016554
640165cc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640165ce:	jmp    DWORD PTR [edx*4+0x64016644]
640165d5:	lea    ecx,[ecx+0x0]
640165d8:	cmp    esp,DWORD PTR [esi+0x1]
640165db:	sub    BYTE PTR fs:[esi+0x1],ah
640165df:	and    BYTE PTR fs:[esi+0x1],ah
640165e3:	sbb    BYTE PTR fs:[esi+0x1],ah
640165e7:	adc    BYTE PTR fs:[esi+0x1],ah
640165eb:	or     BYTE PTR fs:[esi+0x1],ah
640165ef:	add    BYTE PTR fs:[esi+0x1],ah
640165f3:	fs clc 
640165f5:	add    DWORD PTR gs:[ebx+ecx*4+0x44],esp
640165fa:	mov    fs,esp
640165fc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64016600:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64016604:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64016608:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401660c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64016610:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64016614:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64016618:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401661c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64016620:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64016624:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64016628:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401662c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64016630:	lea    eax,[ecx*4+0x0]
64016637:	add    esi,eax
64016639:	add    edi,eax
6401663b:	jmp    DWORD PTR [edx*4+0x64016644]
64016642:	mov    edi,edi
64016644:	push   esp
64016645:	add    WORD PTR [esp+ebx*2+0x66],sp
6401664a:	add    DWORD PTR [eax+ebp*2+0x66],esp
6401664e:	add    DWORD PTR [esp+edi*2+0x66],esp
64016652:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64016656:	or     BYTE PTR [esi+0x5f],bl
64016659:	leave  
6401665a:	ret    
6401665b:	nop
6401665c:	mov    al,BYTE PTR [esi]
6401665e:	mov    BYTE PTR [edi],al
64016660:	mov    eax,DWORD PTR [ebp+0x8]
64016663:	pop    esi
64016664:	pop    edi
64016665:	leave  
64016666:	ret    
64016667:	nop
64016668:	mov    al,BYTE PTR [esi]
6401666a:	mov    BYTE PTR [edi],al
6401666c:	mov    al,BYTE PTR [esi+0x1]
6401666f:	mov    BYTE PTR [edi+0x1],al
64016672:	mov    eax,DWORD PTR [ebp+0x8]
64016675:	pop    esi
64016676:	pop    edi
64016677:	leave  
64016678:	ret    
64016679:	lea    ecx,[ecx+0x0]
6401667c:	mov    al,BYTE PTR [esi]
6401667e:	mov    BYTE PTR [edi],al
64016680:	mov    al,BYTE PTR [esi+0x1]
64016683:	mov    BYTE PTR [edi+0x1],al
64016686:	mov    al,BYTE PTR [esi+0x2]
64016689:	mov    BYTE PTR [edi+0x2],al
6401668c:	mov    eax,DWORD PTR [ebp+0x8]
6401668f:	pop    esi
64016690:	pop    edi
64016691:	leave  
64016692:	ret    
64016693:	nop
64016694:	lea    esi,[ecx+esi*1-0x4]
64016698:	lea    edi,[ecx+edi*1-0x4]
6401669c:	test   edi,0x3
640166a2:	jne    0x640166c8
640166a4:	shr    ecx,0x2
640166a7:	and    edx,0x3
640166aa:	cmp    ecx,0x8
640166ad:	jb     0x640166bc
640166af:	std    
640166b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640166b2:	cld    
640166b3:	jmp    DWORD PTR [edx*4+0x640167e0]
640166ba:	mov    edi,edi
640166bc:	neg    ecx
640166be:	jmp    DWORD PTR [ecx*4+0x64016790]
640166c5:	lea    ecx,[ecx+0x0]
640166c8:	mov    eax,edi
640166ca:	mov    edx,0x3
640166cf:	cmp    ecx,0x4
640166d2:	jb     0x640166e0
640166d4:	and    eax,0x3
640166d7:	sub    ecx,eax
640166d9:	jmp    DWORD PTR [eax*4+0x640166e4]
640166e0:	jmp    DWORD PTR [ecx*4+0x640167e0]
640166e7:	nop
640166e8:	hlt    
640166e9:	add    WORD PTR [eax+ebx*1+0x67],sp
640166ee:	add    DWORD PTR [eax+eax*2+0x67],esp
640166f2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640166f6:	add    esp,DWORD PTR [ebx]
640166f8:	ror    DWORD PTR [eax-0x117cfcb9],1
640166fe:	add    ecx,eax
64016700:	jmp    0x65f0ea07
64016705:	cmp    ecx,0x8
64016708:	jb     0x640166bc
6401670a:	std    
6401670b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401670d:	cld    
6401670e:	jmp    DWORD PTR [edx*4+0x640167e0]
64016715:	lea    ecx,[ecx+0x0]
64016718:	mov    al,BYTE PTR [esi+0x3]
6401671b:	and    edx,ecx
6401671d:	mov    BYTE PTR [edi+0x3],al
64016720:	mov    al,BYTE PTR [esi+0x2]
64016723:	shr    ecx,0x2
64016726:	mov    BYTE PTR [edi+0x2],al
64016729:	sub    esi,0x2
6401672c:	sub    edi,0x2
6401672f:	cmp    ecx,0x8
64016732:	jb     0x640166bc
64016734:	std    
64016735:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016737:	cld    
64016738:	jmp    DWORD PTR [edx*4+0x640167e0]
6401673f:	nop
64016740:	mov    al,BYTE PTR [esi+0x3]
64016743:	and    edx,ecx
64016745:	mov    BYTE PTR [edi+0x3],al
64016748:	mov    al,BYTE PTR [esi+0x2]
6401674b:	mov    BYTE PTR [edi+0x2],al
6401674e:	mov    al,BYTE PTR [esi+0x1]
64016751:	shr    ecx,0x2
64016754:	mov    BYTE PTR [edi+0x1],al
64016757:	sub    esi,0x3
6401675a:	sub    edi,0x3
6401675d:	cmp    ecx,0x8
64016760:	jb     0x640166bc
64016766:	std    
64016767:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016769:	cld    
6401676a:	jmp    DWORD PTR [edx*4+0x640167e0]
64016771:	lea    ecx,[ecx+0x0]
64016774:	xchg   esp,eax
64016775:	add    DWORD PTR [si-0x64],esp
64016779:	add    DWORD PTR [si-0x5c],esp
6401677d:	add    DWORD PTR [si-0x54],esp
64016781:	add    DWORD PTR [si-0x4c],esp
64016785:	add    DWORD PTR [si-0x44],esp
64016789:	add    DWORD PTR [si-0x3c],esp
6401678d:	add    DWORD PTR [si-0x29],esp
64016791:	add    DWORD PTR [si-0x75],esp
64016795:	inc    esp
64016796:	mov    ds,WORD PTR [ecx+ecx*4]
64016799:	inc    esp
6401679a:	(bad)  
6401679b:	sbb    al,0x8b
6401679d:	inc    esp
6401679e:	mov    ds,WORD PTR [eax]
640167a0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640167a4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640167a8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640167ac:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
640167b0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
640167b4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
640167b8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
640167bc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640167c0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640167c4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640167c8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640167cc:	lea    eax,[ecx*4+0x0]
640167d3:	add    esi,eax
640167d5:	add    edi,eax
640167d7:	jmp    DWORD PTR [edx*4+0x640167e0]
640167de:	mov    edi,edi
640167e0:	lock add DWORD PTR [si-0x8],esp
640167e5:	add    DWORD PTR [si+0x8],esp
640167e9:	push   0x681c6401
640167ee:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640167f2:	or     BYTE PTR [esi+0x5f],bl
640167f5:	leave  
640167f6:	ret    
640167f7:	nop
640167f8:	mov    al,BYTE PTR [esi+0x3]
640167fb:	mov    BYTE PTR [edi+0x3],al
640167fe:	mov    eax,DWORD PTR [ebp+0x8]
64016801:	pop    esi
64016802:	pop    edi
64016803:	leave  
64016804:	ret    
64016805:	lea    ecx,[ecx+0x0]
64016808:	mov    al,BYTE PTR [esi+0x3]
6401680b:	mov    BYTE PTR [edi+0x3],al
6401680e:	mov    al,BYTE PTR [esi+0x2]
64016811:	mov    BYTE PTR [edi+0x2],al
64016814:	mov    eax,DWORD PTR [ebp+0x8]
64016817:	pop    esi
64016818:	pop    edi
64016819:	leave  
6401681a:	ret    
6401681b:	nop
6401681c:	mov    al,BYTE PTR [esi+0x3]
6401681f:	mov    BYTE PTR [edi+0x3],al
64016822:	mov    al,BYTE PTR [esi+0x2]
64016825:	mov    BYTE PTR [edi+0x2],al
64016828:	mov    al,BYTE PTR [esi+0x1]
6401682b:	mov    BYTE PTR [edi+0x1],al
6401682e:	mov    eax,DWORD PTR [ebp+0x8]
64016831:	pop    esi
64016832:	pop    edi
64016833:	leave  
64016834:	ret    
64016835:	mov    eax,DWORD PTR [esp+0x4]
64016839:	mov    ds:0x64038ebc,eax
6401683e:	ret    
6401683f:	push   DWORD PTR ds:0x64038ebc
64016845:	call   0x640175ce
6401684a:	test   eax,eax
6401684c:	pop    ecx
6401684d:	je     0x6401685e
6401684f:	push   DWORD PTR [esp+0x4]
64016853:	call   eax
64016855:	test   eax,eax
64016857:	pop    ecx
64016858:	je     0x6401685e
6401685a:	xor    eax,eax
6401685c:	inc    eax
6401685d:	ret    
6401685e:	xor    eax,eax
64016860:	ret    
64016861:	mov    DWORD PTR [ecx],0x640284a8
64016867:	jmp    0x640136d8
6401686c:	push   esi
6401686d:	mov    esi,ecx
6401686f:	mov    DWORD PTR [esi],0x640284a8
64016875:	call   0x640136d8
6401687a:	test   BYTE PTR [esp+0x8],0x1
6401687f:	je     0x64016888
64016881:	push   esi
64016882:	call   0x64013604
64016887:	pop    ecx
64016888:	mov    eax,esi
6401688a:	pop    esi
6401688b:	ret    0x4
6401688e:	push   esi
6401688f:	push   edi
64016890:	mov    edi,DWORD PTR [esp+0xc]
64016894:	mov    eax,DWORD PTR [edi+0x4]
64016897:	test   eax,eax
64016899:	je     0x640168e4
6401689b:	lea    edx,[eax+0x8]
6401689e:	cmp    BYTE PTR [edx],0x0
640168a1:	je     0x640168e4
640168a3:	mov    esi,DWORD PTR [esp+0x10]
640168a7:	mov    ecx,DWORD PTR [esi+0x4]
640168aa:	cmp    eax,ecx
640168ac:	je     0x640168c2
640168ae:	add    ecx,0x8
640168b1:	push   ecx
640168b2:	push   edx
640168b3:	call   0x640163c0
640168b8:	test   eax,eax
640168ba:	pop    ecx
640168bb:	pop    ecx
640168bc:	je     0x640168c2
640168be:	xor    eax,eax
640168c0:	jmp    0x640168e7
640168c2:	test   BYTE PTR [esi],0x2
640168c5:	je     0x640168cc
640168c7:	test   BYTE PTR [edi],0x8
640168ca:	je     0x640168be
640168cc:	mov    eax,DWORD PTR [esp+0x14]
640168d0:	mov    eax,DWORD PTR [eax]
640168d2:	test   al,0x1
640168d4:	je     0x640168db
640168d6:	test   BYTE PTR [edi],0x1
640168d9:	je     0x640168be
640168db:	test   al,0x2
640168dd:	je     0x640168e4
640168df:	test   BYTE PTR [edi],0x2
640168e2:	je     0x640168be
640168e4:	xor    eax,eax
640168e6:	inc    eax
640168e7:	pop    edi
640168e8:	pop    esi
640168e9:	ret    
640168ea:	mov    eax,DWORD PTR [esp+0x4]
640168ee:	mov    eax,DWORD PTR [eax]
640168f0:	mov    eax,DWORD PTR [eax]
640168f2:	cmp    eax,0xe0434f4d
640168f7:	je     0x64016911
640168f9:	cmp    eax,0xe06d7363
640168fe:	jne    0x6401692b
64016900:	call   0x640177ea
64016905:	and    DWORD PTR [eax+0x90],0x0
6401690c:	jmp    0x64017b10
64016911:	call   0x640177ea
64016916:	cmp    DWORD PTR [eax+0x90],0x0
6401691d:	jle    0x6401692b
6401691f:	call   0x640177ea
64016924:	add    eax,0x90
64016929:	dec    DWORD PTR [eax]
6401692b:	xor    eax,eax
6401692d:	ret    
6401692e:	push   0x10
64016930:	push   0x6402b7d8
64016935:	call   0x64015ed4
6401693a:	mov    edi,DWORD PTR [ebp+0x10]
6401693d:	mov    ebx,DWORD PTR [ebp+0x8]
64016940:	cmp    DWORD PTR [edi+0x4],0x80
64016947:	jg     0x6401694f
64016949:	movsx  esi,BYTE PTR [ebx+0x8]
6401694d:	jmp    0x64016952
6401694f:	mov    esi,DWORD PTR [ebx+0x8]
64016952:	mov    DWORD PTR [ebp-0x1c],esi
64016955:	call   0x640177ea
6401695a:	add    eax,0x90
6401695f:	inc    DWORD PTR [eax]
64016961:	and    DWORD PTR [ebp-0x4],0x0
64016965:	cmp    esi,DWORD PTR [ebp+0x14]
64016968:	je     0x640169cf
6401696a:	cmp    esi,0xffffffff
6401696d:	jle    0x64016974
6401696f:	cmp    esi,DWORD PTR [edi+0x4]
64016972:	jl     0x64016979
64016974:	call   0x64017b5c
64016979:	mov    eax,esi
6401697b:	shl    eax,0x3
6401697e:	mov    ecx,DWORD PTR [edi+0x8]
64016981:	add    ecx,eax
64016983:	mov    esi,DWORD PTR [ecx]
64016985:	mov    DWORD PTR [ebp-0x20],esi
64016988:	mov    DWORD PTR [ebp-0x4],0x1
6401698f:	cmp    DWORD PTR [ecx+0x4],0x0
64016993:	je     0x640169aa
64016995:	mov    DWORD PTR [ebx+0x8],esi
64016998:	push   0x103
6401699d:	push   ebx
6401699e:	mov    ecx,DWORD PTR [edi+0x8]
640169a1:	push   DWORD PTR [ecx+eax*1+0x4]
640169a5:	call   0x64017bb0
640169aa:	and    DWORD PTR [ebp-0x4],0x0
640169ae:	jmp    0x640169ca
640169b0:	push   DWORD PTR [ebp-0x14]
640169b3:	call   0x640168ea
640169b8:	pop    ecx
640169b9:	ret    
640169ba:	mov    esp,DWORD PTR [ebp-0x18]
640169bd:	and    DWORD PTR [ebp-0x4],0x0
640169c1:	mov    edi,DWORD PTR [ebp+0x10]
640169c4:	mov    ebx,DWORD PTR [ebp+0x8]
640169c7:	mov    esi,DWORD PTR [ebp-0x20]
640169ca:	mov    DWORD PTR [ebp-0x1c],esi
640169cd:	jmp    0x64016965
640169cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640169d6:	call   0x640169f4
640169db:	cmp    esi,DWORD PTR [ebp+0x14]
640169de:	je     0x640169e5
640169e0:	call   0x64017b5c
640169e5:	mov    DWORD PTR [ebx+0x8],esi
640169e8:	call   0x64015f19
640169ed:	ret    
640169ee:	mov    ebx,DWORD PTR [ebp+0x8]
640169f1:	mov    esi,DWORD PTR [ebp-0x1c]
640169f4:	call   0x640177ea
640169f9:	cmp    DWORD PTR [eax+0x90],0x0
64016a00:	jle    0x64016a0e
64016a02:	call   0x640177ea
64016a07:	add    eax,0x90
64016a0c:	dec    DWORD PTR [eax]
64016a0e:	ret    
64016a0f:	mov    eax,DWORD PTR [eax]
64016a11:	cmp    DWORD PTR [eax],0xe06d7363
64016a17:	jne    0x64016a51
64016a19:	cmp    DWORD PTR [eax+0x10],0x3
64016a1d:	jne    0x64016a51
64016a1f:	mov    ecx,DWORD PTR [eax+0x14]
64016a22:	cmp    ecx,0x19930520
64016a28:	je     0x64016a3a
64016a2a:	cmp    ecx,0x19930521
64016a30:	je     0x64016a3a
64016a32:	cmp    ecx,0x19930522
64016a38:	jne    0x64016a51
64016a3a:	cmp    DWORD PTR [eax+0x1c],0x0
64016a3e:	jne    0x64016a51
64016a40:	call   0x640177ea
64016a45:	xor    ecx,ecx
64016a47:	inc    ecx
64016a48:	mov    DWORD PTR [eax+0x20c],ecx
64016a4e:	mov    eax,ecx
64016a50:	ret    
64016a51:	xor    eax,eax
64016a53:	ret    
64016a54:	push   0x8
64016a56:	push   0x6402b800
64016a5b:	call   0x64015ed4
64016a60:	mov    ecx,DWORD PTR [ebp+0x8]
64016a63:	test   ecx,ecx
64016a65:	je     0x64016a91
64016a67:	cmp    DWORD PTR [ecx],0xe06d7363
64016a6d:	jne    0x64016a91
64016a6f:	mov    eax,DWORD PTR [ecx+0x1c]
64016a72:	test   eax,eax
64016a74:	je     0x64016a91
64016a76:	mov    eax,DWORD PTR [eax+0x4]
64016a79:	test   eax,eax
64016a7b:	je     0x64016a91
64016a7d:	and    DWORD PTR [ebp-0x4],0x0
64016a81:	push   eax
64016a82:	push   DWORD PTR [ecx+0x18]
64016a85:	call   0x6401392f
64016a8a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016a91:	call   0x64015f19
64016a96:	ret    
64016a97:	xor    eax,eax
64016a99:	cmp    BYTE PTR [ebp+0xc],al
64016a9c:	setne  al
64016a9f:	ret    
64016aa0:	mov    esp,DWORD PTR [ebp-0x18]
64016aa3:	jmp    0x64017b10
64016aa8:	mov    ecx,DWORD PTR [esp+0x8]
64016aac:	mov    eax,DWORD PTR [ecx]
64016aae:	push   esi
64016aaf:	mov    esi,DWORD PTR [esp+0x8]
64016ab3:	add    eax,esi
64016ab5:	cmp    DWORD PTR [ecx+0x4],0x0
64016ab9:	jl     0x64016acb
64016abb:	mov    edx,DWORD PTR [ecx+0x4]
64016abe:	mov    ecx,DWORD PTR [ecx+0x8]
64016ac1:	mov    esi,DWORD PTR [edx+esi*1]
64016ac4:	mov    ecx,DWORD PTR [esi+ecx*1]
64016ac7:	add    ecx,edx
64016ac9:	add    eax,ecx
64016acb:	pop    esi
64016acc:	ret    
64016acd:	push   ebp
64016ace:	mov    ebp,esp
64016ad0:	sub    esp,0xc
64016ad3:	test   edi,edi
64016ad5:	jne    0x64016ae1
64016ad7:	call   0x64017b5c
64016adc:	jmp    0x64017b10
64016ae1:	and    DWORD PTR [ebp-0x8],0x0
64016ae5:	cmp    DWORD PTR [edi],0x0
64016ae8:	mov    BYTE PTR [ebp-0x1],0x0
64016aec:	jle    0x64016b41
64016aee:	push   ebx
64016aef:	push   esi
64016af0:	mov    eax,DWORD PTR [ebp+0x8]
64016af3:	mov    eax,DWORD PTR [eax+0x1c]
64016af6:	mov    eax,DWORD PTR [eax+0xc]
64016af9:	mov    ebx,DWORD PTR [eax]
64016afb:	test   ebx,ebx
64016afd:	lea    esi,[eax+0x4]
64016b00:	jle    0x64016b35
64016b02:	mov    eax,DWORD PTR [ebp-0x8]
64016b05:	shl    eax,0x4
64016b08:	mov    DWORD PTR [ebp-0xc],eax
64016b0b:	mov    ecx,DWORD PTR [ebp+0x8]
64016b0e:	push   DWORD PTR [ecx+0x1c]
64016b11:	mov    eax,DWORD PTR [esi]
64016b13:	push   eax
64016b14:	mov    eax,DWORD PTR [edi+0x4]
64016b17:	add    eax,DWORD PTR [ebp-0xc]
64016b1a:	push   eax
64016b1b:	call   0x6401688e
64016b20:	add    esp,0xc
64016b23:	test   eax,eax
64016b25:	jne    0x64016b31
64016b27:	dec    ebx
64016b28:	add    esi,0x4
64016b2b:	test   ebx,ebx
64016b2d:	jg     0x64016b0b
64016b2f:	jmp    0x64016b35
64016b31:	mov    BYTE PTR [ebp-0x1],0x1
64016b35:	inc    DWORD PTR [ebp-0x8]
64016b38:	mov    eax,DWORD PTR [ebp-0x8]
64016b3b:	cmp    eax,DWORD PTR [edi]
64016b3d:	jl     0x64016af0
64016b3f:	pop    esi
64016b40:	pop    ebx
64016b41:	mov    al,BYTE PTR [ebp-0x1]
64016b44:	leave  
64016b45:	ret    
64016b46:	push   0x4
64016b48:	mov    eax,0x64022ef3
64016b4d:	call   0x640155ce
64016b52:	call   0x640177ea
64016b57:	cmp    DWORD PTR [eax+0x94],0x0
64016b5e:	je     0x64016b65
64016b60:	call   0x64017b5c
64016b65:	and    DWORD PTR [ebp-0x4],0x0
64016b69:	call   0x64017b49
64016b6e:	or     DWORD PTR [ebp-0x4],0xffffffff
64016b72:	jmp    0x64017b10
64016b77:	call   0x640177ea
64016b7c:	mov    ecx,DWORD PTR [ebp+0x8]
64016b7f:	push   0x0
64016b81:	push   0x0
64016b83:	mov    DWORD PTR [eax+0x94],ecx
64016b89:	call   0x64013832
64016b8e:	int3   
64016b8f:	push   0x2c
64016b91:	push   0x6402b878
64016b96:	call   0x64015ed4
64016b9b:	mov    ebx,ecx
64016b9d:	mov    edi,DWORD PTR [ebp+0xc]
64016ba0:	mov    esi,DWORD PTR [ebp+0x8]
64016ba3:	mov    DWORD PTR [ebp-0x1c],ebx
64016ba6:	and    DWORD PTR [ebp-0x34],0x0
64016baa:	mov    eax,DWORD PTR [edi-0x4]
64016bad:	mov    DWORD PTR [ebp-0x24],eax
64016bb0:	push   DWORD PTR [esi+0x18]
64016bb3:	lea    eax,[ebp-0x3c]
64016bb6:	push   eax
64016bb7:	call   0x64013bd3
64016bbc:	pop    ecx
64016bbd:	pop    ecx
64016bbe:	mov    DWORD PTR [ebp-0x28],eax
64016bc1:	call   0x640177ea
64016bc6:	mov    eax,DWORD PTR [eax+0x88]
64016bcc:	mov    DWORD PTR [ebp-0x2c],eax
64016bcf:	call   0x640177ea
64016bd4:	mov    eax,DWORD PTR [eax+0x8c]
64016bda:	mov    DWORD PTR [ebp-0x30],eax
64016bdd:	call   0x640177ea
64016be2:	mov    DWORD PTR [eax+0x88],esi
64016be8:	call   0x640177ea
64016bed:	mov    ecx,DWORD PTR [ebp+0x10]
64016bf0:	mov    DWORD PTR [eax+0x8c],ecx
64016bf6:	and    DWORD PTR [ebp-0x4],0x0
64016bfa:	xor    eax,eax
64016bfc:	inc    eax
64016bfd:	mov    DWORD PTR [ebp+0x10],eax
64016c00:	mov    DWORD PTR [ebp-0x4],eax
64016c03:	push   DWORD PTR [ebp+0x1c]
64016c06:	push   DWORD PTR [ebp+0x18]
64016c09:	push   ebx
64016c0a:	push   DWORD PTR [ebp+0x14]
64016c0d:	push   edi
64016c0e:	call   0x64013c68
64016c13:	add    esp,0x14
64016c16:	mov    DWORD PTR [ebp-0x1c],eax
64016c19:	and    DWORD PTR [ebp-0x4],0x0
64016c1d:	jmp    0x64016c8e
64016c1f:	mov    eax,DWORD PTR [ebp-0x14]
64016c22:	call   0x64016a0f
64016c27:	ret    
64016c28:	mov    esp,DWORD PTR [ebp-0x18]
64016c2b:	call   0x640177ea
64016c30:	and    DWORD PTR [eax+0x20c],0x0
64016c37:	mov    esi,DWORD PTR [ebp+0x14]
64016c3a:	mov    edi,DWORD PTR [ebp+0xc]
64016c3d:	cmp    DWORD PTR [esi+0x4],0x80
64016c44:	jg     0x64016c4c
64016c46:	movsx  ecx,BYTE PTR [edi+0x8]
64016c4a:	jmp    0x64016c4f
64016c4c:	mov    ecx,DWORD PTR [edi+0x8]
64016c4f:	mov    ebx,DWORD PTR [esi+0x10]
64016c52:	and    DWORD PTR [ebp-0x20],0x0
64016c56:	mov    eax,DWORD PTR [ebp-0x20]
64016c59:	cmp    eax,DWORD PTR [esi+0xc]
64016c5c:	jae    0x64016c76
64016c5e:	imul   eax,eax,0x14
64016c61:	add    eax,ebx
64016c63:	mov    edx,DWORD PTR [eax+0x4]
64016c66:	cmp    ecx,edx
64016c68:	jle    0x64016caa
64016c6a:	cmp    ecx,DWORD PTR [eax+0x8]
64016c6d:	jg     0x64016caa
64016c6f:	mov    eax,DWORD PTR [esi+0x8]
64016c72:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64016c76:	push   ecx
64016c77:	push   esi
64016c78:	push   0x0
64016c7a:	push   edi
64016c7b:	call   0x6401692e
64016c80:	add    esp,0x10
64016c83:	and    DWORD PTR [ebp-0x1c],0x0
64016c87:	and    DWORD PTR [ebp-0x4],0x0
64016c8b:	mov    esi,DWORD PTR [ebp+0x8]
64016c8e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016c95:	mov    DWORD PTR [ebp+0x10],0x0
64016c9c:	call   0x64016cb5
64016ca1:	mov    eax,DWORD PTR [ebp-0x1c]
64016ca4:	call   0x64015f19
64016ca9:	ret    
64016caa:	inc    DWORD PTR [ebp-0x20]
64016cad:	jmp    0x64016c56
64016caf:	mov    edi,DWORD PTR [ebp+0xc]
64016cb2:	mov    esi,DWORD PTR [ebp+0x8]
64016cb5:	mov    eax,DWORD PTR [ebp-0x24]
64016cb8:	mov    DWORD PTR [edi-0x4],eax
64016cbb:	push   DWORD PTR [ebp-0x28]
64016cbe:	call   0x64013c1c
64016cc3:	pop    ecx
64016cc4:	call   0x640177ea
64016cc9:	mov    ecx,DWORD PTR [ebp-0x2c]
64016ccc:	mov    DWORD PTR [eax+0x88],ecx
64016cd2:	call   0x640177ea
64016cd7:	mov    ecx,DWORD PTR [ebp-0x30]
64016cda:	mov    DWORD PTR [eax+0x8c],ecx
64016ce0:	cmp    DWORD PTR [esi],0xe06d7363
64016ce6:	jne    0x64016d2a
64016ce8:	cmp    DWORD PTR [esi+0x10],0x3
64016cec:	jne    0x64016d2a
64016cee:	mov    eax,DWORD PTR [esi+0x14]
64016cf1:	cmp    eax,0x19930520
64016cf6:	je     0x64016d06
64016cf8:	cmp    eax,0x19930521
64016cfd:	je     0x64016d06
64016cff:	cmp    eax,0x19930522
64016d04:	jne    0x64016d2a
64016d06:	cmp    DWORD PTR [ebp-0x34],0x0
64016d0a:	jne    0x64016d2a
64016d0c:	cmp    DWORD PTR [ebp-0x1c],0x0
64016d10:	je     0x64016d2a
64016d12:	push   DWORD PTR [esi+0x18]
64016d15:	call   0x64013bfb
64016d1a:	pop    ecx
64016d1b:	test   eax,eax
64016d1d:	je     0x64016d2a
64016d1f:	push   DWORD PTR [ebp+0x10]
64016d22:	push   esi
64016d23:	call   0x64016a54
64016d28:	pop    ecx
64016d29:	pop    ecx
64016d2a:	ret    
64016d2b:	push   0xc
64016d2d:	push   0x6402b8a0
64016d32:	call   0x64015ed4
64016d37:	xor    edx,edx
64016d39:	mov    DWORD PTR [ebp-0x1c],edx
64016d3c:	mov    eax,DWORD PTR [ebp+0x10]
64016d3f:	mov    ecx,DWORD PTR [eax+0x4]
64016d42:	cmp    ecx,edx
64016d44:	je     0x64016ea2
64016d4a:	cmp    BYTE PTR [ecx+0x8],dl
64016d4d:	je     0x64016ea2
64016d53:	mov    ecx,DWORD PTR [eax+0x8]
64016d56:	cmp    ecx,edx
64016d58:	jne    0x64016d66
64016d5a:	test   DWORD PTR [eax],0x80000000
64016d60:	je     0x64016ea2
64016d66:	mov    eax,DWORD PTR [eax]
64016d68:	mov    esi,DWORD PTR [ebp+0xc]
64016d6b:	test   eax,eax
64016d6d:	js     0x64016d73
64016d6f:	lea    esi,[ecx+esi*1+0xc]
64016d73:	mov    DWORD PTR [ebp-0x4],edx
64016d76:	xor    ebx,ebx
64016d78:	inc    ebx
64016d79:	push   ebx
64016d7a:	test   al,0x8
64016d7c:	je     0x64016dbf
64016d7e:	mov    edi,DWORD PTR [ebp+0x8]
64016d81:	push   DWORD PTR [edi+0x18]
64016d84:	call   0x6401e68b
64016d89:	pop    ecx
64016d8a:	pop    ecx
64016d8b:	test   eax,eax
64016d8d:	je     0x64016e85
64016d93:	push   ebx
64016d94:	push   esi
64016d95:	call   0x6401e68b
64016d9a:	pop    ecx
64016d9b:	pop    ecx
64016d9c:	test   eax,eax
64016d9e:	je     0x64016e85
64016da4:	mov    eax,DWORD PTR [edi+0x18]
64016da7:	mov    DWORD PTR [esi],eax
64016da9:	mov    ecx,DWORD PTR [ebp+0x14]
64016dac:	add    ecx,0x8
64016daf:	push   ecx
64016db0:	push   eax
64016db1:	call   0x64016aa8
64016db6:	pop    ecx
64016db7:	pop    ecx
64016db8:	mov    DWORD PTR [esi],eax
64016dba:	jmp    0x64016e8a
64016dbf:	mov    edi,DWORD PTR [ebp+0x14]
64016dc2:	mov    eax,DWORD PTR [ebp+0x8]
64016dc5:	push   DWORD PTR [eax+0x18]
64016dc8:	test   BYTE PTR [edi],bl
64016dca:	je     0x64016e14
64016dcc:	call   0x6401e68b
64016dd1:	pop    ecx
64016dd2:	pop    ecx
64016dd3:	test   eax,eax
64016dd5:	je     0x64016e85
64016ddb:	push   ebx
64016ddc:	push   esi
64016ddd:	call   0x6401e68b
64016de2:	pop    ecx
64016de3:	pop    ecx
64016de4:	test   eax,eax
64016de6:	je     0x64016e85
64016dec:	push   DWORD PTR [edi+0x14]
64016def:	mov    eax,DWORD PTR [ebp+0x8]
64016df2:	push   DWORD PTR [eax+0x18]
64016df5:	push   esi
64016df6:	call   0x640164d0
64016dfb:	add    esp,0xc
64016dfe:	cmp    DWORD PTR [edi+0x14],0x4
64016e02:	jne    0x64016e8a
64016e08:	mov    eax,DWORD PTR [esi]
64016e0a:	test   eax,eax
64016e0c:	je     0x64016e8a
64016e0e:	add    edi,0x8
64016e11:	push   edi
64016e12:	jmp    0x64016db0
64016e14:	cmp    DWORD PTR [edi+0x18],edx
64016e17:	jne    0x64016e51
64016e19:	call   0x6401e68b
64016e1e:	pop    ecx
64016e1f:	pop    ecx
64016e20:	test   eax,eax
64016e22:	je     0x64016e85
64016e24:	push   ebx
64016e25:	push   esi
64016e26:	call   0x6401e68b
64016e2b:	pop    ecx
64016e2c:	pop    ecx
64016e2d:	test   eax,eax
64016e2f:	je     0x64016e85
64016e31:	push   DWORD PTR [edi+0x14]
64016e34:	add    edi,0x8
64016e37:	push   edi
64016e38:	mov    eax,DWORD PTR [ebp+0x8]
64016e3b:	push   DWORD PTR [eax+0x18]
64016e3e:	call   0x64016aa8
64016e43:	pop    ecx
64016e44:	pop    ecx
64016e45:	push   eax
64016e46:	push   esi
64016e47:	call   0x640164d0
64016e4c:	add    esp,0xc
64016e4f:	jmp    0x64016e8a
64016e51:	call   0x6401e68b
64016e56:	pop    ecx
64016e57:	pop    ecx
64016e58:	test   eax,eax
64016e5a:	je     0x64016e85
64016e5c:	push   ebx
64016e5d:	push   esi
64016e5e:	call   0x6401e68b
64016e63:	pop    ecx
64016e64:	pop    ecx
64016e65:	test   eax,eax
64016e67:	je     0x64016e85
64016e69:	push   DWORD PTR [edi+0x18]
64016e6c:	call   0x6401e68b
64016e71:	pop    ecx
64016e72:	test   eax,eax
64016e74:	je     0x64016e85
64016e76:	test   BYTE PTR [edi],0x4
64016e79:	push   0x0
64016e7b:	pop    eax
64016e7c:	setne  al
64016e7f:	inc    eax
64016e80:	mov    DWORD PTR [ebp-0x1c],eax
64016e83:	jmp    0x64016e8a
64016e85:	call   0x64017b5c
64016e8a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016e91:	mov    eax,DWORD PTR [ebp-0x1c]
64016e94:	jmp    0x64016ea4
64016e96:	xor    eax,eax
64016e98:	inc    eax
64016e99:	ret    
64016e9a:	mov    esp,DWORD PTR [ebp-0x18]
64016e9d:	jmp    0x64017b10
64016ea2:	xor    eax,eax
64016ea4:	call   0x64015f19
64016ea9:	ret    
64016eaa:	push   0x8
64016eac:	push   0x6402b8c0
64016eb1:	call   0x64015ed4
64016eb6:	mov    eax,DWORD PTR [ebp+0x10]
64016eb9:	test   DWORD PTR [eax],0x80000000
64016ebf:	je     0x64016ec6
64016ec1:	mov    ebx,DWORD PTR [ebp+0xc]
64016ec4:	jmp    0x64016ed0
64016ec6:	mov    ecx,DWORD PTR [eax+0x8]
64016ec9:	mov    edx,DWORD PTR [ebp+0xc]
64016ecc:	lea    ebx,[ecx+edx*1+0xc]
64016ed0:	and    DWORD PTR [ebp-0x4],0x0
64016ed4:	mov    esi,DWORD PTR [ebp+0x14]
64016ed7:	push   esi
64016ed8:	push   eax
64016ed9:	push   DWORD PTR [ebp+0xc]
64016edc:	mov    edi,DWORD PTR [ebp+0x8]
64016edf:	push   edi
64016ee0:	call   0x64016d2b
64016ee5:	add    esp,0x10
64016ee8:	dec    eax
64016ee9:	je     0x64016f0a
64016eeb:	dec    eax
64016eec:	jne    0x64016f22
64016eee:	push   0x1
64016ef0:	lea    eax,[esi+0x8]
64016ef3:	push   eax
64016ef4:	push   DWORD PTR [edi+0x18]
64016ef7:	call   0x64016aa8
64016efc:	pop    ecx
64016efd:	pop    ecx
64016efe:	push   eax
64016eff:	push   DWORD PTR [esi+0x18]
64016f02:	push   ebx
64016f03:	call   0x6401392f
64016f08:	jmp    0x64016f22
64016f0a:	lea    eax,[esi+0x8]
64016f0d:	push   eax
64016f0e:	push   DWORD PTR [edi+0x18]
64016f11:	call   0x64016aa8
64016f16:	pop    ecx
64016f17:	pop    ecx
64016f18:	push   eax
64016f19:	push   DWORD PTR [esi+0x18]
64016f1c:	push   ebx
64016f1d:	call   0x6401392f
64016f22:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016f29:	call   0x64015f19
64016f2e:	ret    
64016f2f:	xor    eax,eax
64016f31:	inc    eax
64016f32:	ret    
64016f33:	mov    esp,DWORD PTR [ebp-0x18]
64016f36:	jmp    0x64017b10
64016f3b:	push   ebp
64016f3c:	mov    ebp,esp
64016f3e:	cmp    DWORD PTR [ebp+0x18],0x0
64016f42:	je     0x64016f54
64016f44:	push   DWORD PTR [ebp+0x18]
64016f47:	push   ebx
64016f48:	push   esi
64016f49:	push   DWORD PTR [ebp+0x8]
64016f4c:	call   0x64016eaa
64016f51:	add    esp,0x10
64016f54:	cmp    DWORD PTR [ebp+0x20],0x0
64016f58:	push   DWORD PTR [ebp+0x8]
64016f5b:	jne    0x64016f60
64016f5d:	push   esi
64016f5e:	jmp    0x64016f63
64016f60:	push   DWORD PTR [ebp+0x20]
64016f63:	call   0x64013936
64016f68:	push   DWORD PTR [edi]
64016f6a:	push   DWORD PTR [ebp+0x14]
64016f6d:	push   DWORD PTR [ebp+0x10]
64016f70:	push   esi
64016f71:	call   0x6401692e
64016f76:	mov    eax,DWORD PTR [edi+0x4]
64016f79:	push   0x100
64016f7e:	push   DWORD PTR [ebp+0x1c]
64016f81:	inc    eax
64016f82:	push   DWORD PTR [ebp+0x14]
64016f85:	mov    DWORD PTR [esi+0x8],eax
64016f88:	push   DWORD PTR [ebp+0xc]
64016f8b:	mov    ecx,DWORD PTR [ebx+0xc]
64016f8e:	push   esi
64016f8f:	push   DWORD PTR [ebp+0x8]
64016f92:	call   0x64016b8f
64016f97:	add    esp,0x28
64016f9a:	test   eax,eax
64016f9c:	je     0x64016fa5
64016f9e:	push   esi
64016f9f:	push   eax
64016fa0:	call   0x640138ff
64016fa5:	pop    ebp
64016fa6:	ret    
64016fa7:	push   ebp
64016fa8:	mov    ebp,esp
64016faa:	push   ecx
64016fab:	push   ecx
64016fac:	push   esi
64016fad:	mov    esi,DWORD PTR [ebp+0x8]
64016fb0:	cmp    DWORD PTR [esi],0x80000003
64016fb6:	je     0x64017096
64016fbc:	push   edi
64016fbd:	call   0x640177ea
64016fc2:	cmp    DWORD PTR [eax+0x80],0x0
64016fc9:	je     0x6401700a
64016fcb:	call   0x640177ea
64016fd0:	lea    edi,[eax+0x80]
64016fd6:	call   0x640175c5
64016fdb:	cmp    DWORD PTR [edi],eax
64016fdd:	je     0x6401700a
64016fdf:	cmp    DWORD PTR [esi],0xe0434f4d
64016fe5:	je     0x6401700a
64016fe7:	push   DWORD PTR [ebp+0x24]
64016fea:	push   DWORD PTR [ebp+0x20]
64016fed:	push   DWORD PTR [ebp+0x18]
64016ff0:	push   DWORD PTR [ebp+0x14]
64016ff3:	push   DWORD PTR [ebp+0x10]
64016ff6:	push   DWORD PTR [ebp+0xc]
64016ff9:	push   esi
64016ffa:	call   0x640139ee
64016fff:	add    esp,0x1c
64017002:	test   eax,eax
64017004:	jne    0x64017095
6401700a:	mov    edi,DWORD PTR [ebp+0x18]
6401700d:	cmp    DWORD PTR [edi+0xc],0x0
64017011:	jne    0x64017018
64017013:	call   0x64017b5c
64017018:	mov    esi,DWORD PTR [ebp+0x1c]
6401701b:	lea    eax,[ebp-0x8]
6401701e:	push   eax
6401701f:	lea    eax,[ebp-0x4]
64017022:	push   eax
64017023:	push   esi
64017024:	push   DWORD PTR [ebp+0x20]
64017027:	push   edi
64017028:	call   0x64013b60
6401702d:	mov    edi,eax
6401702f:	mov    eax,DWORD PTR [ebp-0x4]
64017032:	add    esp,0x14
64017035:	cmp    eax,DWORD PTR [ebp-0x8]
64017038:	jae    0x64017095
6401703a:	push   ebx
6401703b:	cmp    esi,DWORD PTR [edi]
6401703d:	jl     0x64017086
6401703f:	cmp    esi,DWORD PTR [edi+0x4]
64017042:	jg     0x64017086
64017044:	mov    eax,DWORD PTR [edi+0xc]
64017047:	mov    ecx,DWORD PTR [edi+0x10]
6401704a:	shl    eax,0x4
6401704d:	add    eax,ecx
6401704f:	mov    ecx,DWORD PTR [eax-0xc]
64017052:	test   ecx,ecx
64017054:	je     0x6401705c
64017056:	cmp    BYTE PTR [ecx+0x8],0x0
6401705a:	jne    0x64017086
6401705c:	lea    ebx,[eax-0x10]
6401705f:	test   BYTE PTR [ebx],0x40
64017062:	jne    0x64017086
64017064:	push   DWORD PTR [ebp+0x24]
64017067:	mov    esi,DWORD PTR [ebp+0xc]
6401706a:	push   DWORD PTR [ebp+0x20]
6401706d:	push   0x0
6401706f:	push   DWORD PTR [ebp+0x18]
64017072:	push   DWORD PTR [ebp+0x14]
64017075:	push   DWORD PTR [ebp+0x10]
64017078:	push   DWORD PTR [ebp+0x8]
6401707b:	call   0x64016f3b
64017080:	mov    esi,DWORD PTR [ebp+0x1c]
64017083:	add    esp,0x1c
64017086:	inc    DWORD PTR [ebp-0x4]
64017089:	mov    eax,DWORD PTR [ebp-0x4]
6401708c:	add    edi,0x14
6401708f:	cmp    eax,DWORD PTR [ebp-0x8]
64017092:	jb     0x6401703b
64017094:	pop    ebx
64017095:	pop    edi
64017096:	pop    esi
64017097:	leave  
64017098:	ret    
64017099:	push   ebp
6401709a:	mov    ebp,esp
6401709c:	sub    esp,0x2c
6401709f:	mov    ecx,DWORD PTR [ebp+0xc]
640170a2:	push   ebx
640170a3:	mov    ebx,DWORD PTR [ebp+0x18]
640170a6:	mov    eax,DWORD PTR [ebx+0x4]
640170a9:	cmp    eax,0x80
640170ae:	push   esi
640170af:	push   edi
640170b0:	mov    BYTE PTR [ebp-0x1],0x0
640170b4:	jg     0x640170bc
640170b6:	movsx  ecx,BYTE PTR [ecx+0x8]
640170ba:	jmp    0x640170bf
640170bc:	mov    ecx,DWORD PTR [ecx+0x8]
640170bf:	cmp    ecx,0xffffffff
640170c2:	mov    DWORD PTR [ebp-0x8],ecx
640170c5:	jl     0x640170cb
640170c7:	cmp    ecx,eax
640170c9:	jl     0x640170d0
640170cb:	call   0x64017b5c
640170d0:	mov    esi,DWORD PTR [ebp+0x8]
640170d3:	mov    edi,0xe06d7363
640170d8:	cmp    DWORD PTR [esi],edi
640170da:	jne    0x640173ab
640170e0:	cmp    DWORD PTR [esi+0x10],0x3
640170e4:	mov    ebx,0x19930520
640170e9:	jne    0x64017218
640170ef:	mov    eax,DWORD PTR [esi+0x14]
640170f2:	cmp    eax,ebx
640170f4:	je     0x64017108
640170f6:	cmp    eax,0x19930521
640170fb:	je     0x64017108
640170fd:	cmp    eax,0x19930522
64017102:	jne    0x64017218
64017108:	cmp    DWORD PTR [esi+0x1c],0x0
6401710c:	jne    0x64017218
64017112:	call   0x640177ea
64017117:	cmp    DWORD PTR [eax+0x88],0x0
6401711e:	je     0x640173ea
64017124:	call   0x640177ea
64017129:	mov    esi,DWORD PTR [eax+0x88]
6401712f:	mov    DWORD PTR [ebp+0x8],esi
64017132:	call   0x640177ea
64017137:	mov    eax,DWORD PTR [eax+0x8c]
6401713d:	push   0x1
6401713f:	push   esi
64017140:	mov    DWORD PTR [ebp+0x10],eax
64017143:	call   0x6401e68b
64017148:	test   eax,eax
6401714a:	pop    ecx
6401714b:	pop    ecx
6401714c:	jne    0x64017153
6401714e:	call   0x64017b5c
64017153:	cmp    DWORD PTR [esi],edi
64017155:	jne    0x6401717d
64017157:	cmp    DWORD PTR [esi+0x10],0x3
6401715b:	jne    0x6401717d
6401715d:	mov    eax,DWORD PTR [esi+0x14]
64017160:	cmp    eax,ebx
64017162:	je     0x64017172
64017164:	cmp    eax,0x19930521
64017169:	je     0x64017172
6401716b:	cmp    eax,0x19930522
64017170:	jne    0x6401717d
64017172:	cmp    DWORD PTR [esi+0x1c],0x0
64017176:	jne    0x6401717d
64017178:	call   0x64017b5c
6401717d:	call   0x640177ea
64017182:	cmp    DWORD PTR [eax+0x94],0x0
64017189:	je     0x64017218
6401718f:	call   0x640177ea
64017194:	mov    edi,DWORD PTR [eax+0x94]
6401719a:	call   0x640177ea
6401719f:	push   DWORD PTR [ebp+0x8]
640171a2:	xor    esi,esi
640171a4:	mov    DWORD PTR [eax+0x94],esi
640171aa:	call   0x64016acd
640171af:	test   al,al
640171b1:	pop    ecx
640171b2:	jne    0x64017210
640171b4:	xor    ebx,ebx
640171b6:	cmp    DWORD PTR [edi],ebx
640171b8:	jle    0x640171d7
640171ba:	mov    eax,DWORD PTR [edi+0x4]
640171bd:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
640171c1:	push   0x640378e4
640171c6:	call   0x64013741
640171cb:	test   al,al
640171cd:	jne    0x640171dc
640171cf:	inc    esi
640171d0:	add    ebx,0x10
640171d3:	cmp    esi,DWORD PTR [edi]
640171d5:	jl     0x640171ba
640171d7:	jmp    0x64017b10
640171dc:	push   0x1
640171de:	push   DWORD PTR [ebp+0x8]
640171e1:	call   0x64016a54
640171e6:	pop    ecx
640171e7:	pop    ecx
640171e8:	lea    eax,[ebp+0x8]
640171eb:	push   eax
640171ec:	lea    ecx,[ebp-0x2c]
640171ef:	mov    DWORD PTR [ebp+0x8],0x640284b0
640171f6:	call   0x6401361a
640171fb:	push   0x6402b8dc
64017200:	lea    eax,[ebp-0x2c]
64017203:	push   eax
64017204:	mov    DWORD PTR [ebp-0x2c],0x640284a8
6401720b:	call   0x64013832
64017210:	mov    esi,DWORD PTR [ebp+0x8]
64017213:	mov    edi,0xe06d7363
64017218:	cmp    DWORD PTR [esi],edi
6401721a:	jne    0x640173a8
64017220:	cmp    DWORD PTR [esi+0x10],0x3
64017224:	jne    0x640173a8
6401722a:	mov    eax,DWORD PTR [esi+0x14]
6401722d:	cmp    eax,ebx
6401722f:	je     0x64017243
64017231:	cmp    eax,0x19930521
64017236:	je     0x64017243
64017238:	cmp    eax,0x19930522
6401723d:	jne    0x640173a8
64017243:	mov    edi,DWORD PTR [ebp+0x18]
64017246:	cmp    DWORD PTR [edi+0xc],0x0
6401724a:	jbe    0x6401730f
64017250:	lea    eax,[ebp-0x1c]
64017253:	push   eax
64017254:	lea    eax,[ebp-0x10]
64017257:	push   eax
64017258:	push   DWORD PTR [ebp-0x8]
6401725b:	push   DWORD PTR [ebp+0x20]
6401725e:	push   edi
6401725f:	call   0x64013b60
64017264:	add    esp,0x14
64017267:	mov    edi,eax
64017269:	mov    eax,DWORD PTR [ebp-0x10]
6401726c:	cmp    eax,DWORD PTR [ebp-0x1c]
6401726f:	jae    0x6401730c
64017275:	mov    eax,DWORD PTR [ebp-0x8]
64017278:	cmp    DWORD PTR [edi],eax
6401727a:	jg     0x64017301
64017280:	cmp    eax,DWORD PTR [edi+0x4]
64017283:	jg     0x64017301
64017285:	mov    eax,DWORD PTR [edi+0x10]
64017288:	mov    DWORD PTR [ebp-0xc],eax
6401728b:	mov    eax,DWORD PTR [edi+0xc]
6401728e:	test   eax,eax
64017290:	mov    DWORD PTR [ebp-0x18],eax
64017293:	jle    0x64017301
64017295:	mov    eax,DWORD PTR [esi+0x1c]
64017298:	mov    eax,DWORD PTR [eax+0xc]
6401729b:	lea    ebx,[eax+0x4]
6401729e:	mov    eax,DWORD PTR [eax]
640172a0:	test   eax,eax
640172a2:	mov    DWORD PTR [ebp-0x14],eax
640172a5:	jle    0x640172ca
640172a7:	push   DWORD PTR [esi+0x1c]
640172aa:	mov    eax,DWORD PTR [ebx]
640172ac:	push   eax
640172ad:	push   DWORD PTR [ebp-0xc]
640172b0:	mov    DWORD PTR [ebp-0x20],eax
640172b3:	call   0x6401688e
640172b8:	add    esp,0xc
640172bb:	test   eax,eax
640172bd:	jne    0x640172d9
640172bf:	dec    DWORD PTR [ebp-0x14]
640172c2:	add    ebx,0x4
640172c5:	cmp    DWORD PTR [ebp-0x14],eax
640172c8:	jg     0x640172a7
640172ca:	dec    DWORD PTR [ebp-0x18]
640172cd:	add    DWORD PTR [ebp-0xc],0x10
640172d1:	cmp    DWORD PTR [ebp-0x18],0x0
640172d5:	jg     0x64017295
640172d7:	jmp    0x64017301
640172d9:	push   DWORD PTR [ebp+0x24]
640172dc:	mov    ebx,DWORD PTR [ebp-0xc]
640172df:	push   DWORD PTR [ebp+0x20]
640172e2:	mov    BYTE PTR [ebp-0x1],0x1
640172e6:	push   DWORD PTR [ebp-0x20]
640172e9:	push   DWORD PTR [ebp+0x18]
640172ec:	push   DWORD PTR [ebp+0x14]
640172ef:	push   DWORD PTR [ebp+0x10]
640172f2:	push   esi
640172f3:	mov    esi,DWORD PTR [ebp+0xc]
640172f6:	call   0x64016f3b
640172fb:	mov    esi,DWORD PTR [ebp+0x8]
640172fe:	add    esp,0x1c
64017301:	inc    DWORD PTR [ebp-0x10]
64017304:	add    edi,0x14
64017307:	jmp    0x64017269
6401730c:	mov    edi,DWORD PTR [ebp+0x18]
6401730f:	cmp    BYTE PTR [ebp+0x1c],0x0
64017313:	je     0x6401731f
64017315:	push   0x1
64017317:	push   esi
64017318:	call   0x64016a54
6401731d:	pop    ecx
6401731e:	pop    ecx
6401731f:	cmp    BYTE PTR [ebp-0x1],0x0
64017323:	jne    0x640173d7
64017329:	mov    eax,DWORD PTR [edi]
6401732b:	and    eax,0x1fffffff
64017330:	cmp    eax,0x19930521
64017335:	jb     0x640173d7
6401733b:	mov    edi,DWORD PTR [edi+0x1c]
6401733e:	test   edi,edi
64017340:	je     0x640173d7
64017346:	push   esi
64017347:	call   0x64016acd
6401734c:	test   al,al
6401734e:	pop    ecx
6401734f:	jne    0x640173d7
64017355:	call   0x640177ea
6401735a:	call   0x640177ea
6401735f:	call   0x640177ea
64017364:	mov    DWORD PTR [eax+0x88],esi
6401736a:	call   0x640177ea
6401736f:	cmp    DWORD PTR [ebp+0x24],0x0
64017373:	mov    ecx,DWORD PTR [ebp+0x10]
64017376:	mov    DWORD PTR [eax+0x8c],ecx
6401737c:	push   esi
6401737d:	jne    0x64017384
6401737f:	push   DWORD PTR [ebp+0xc]
64017382:	jmp    0x64017387
64017384:	push   DWORD PTR [ebp+0x24]
64017387:	call   0x64013936
6401738c:	mov    esi,DWORD PTR [ebp+0x18]
6401738f:	push   0xffffffff
64017391:	push   esi
64017392:	push   DWORD PTR [ebp+0x14]
64017395:	push   DWORD PTR [ebp+0xc]
64017398:	call   0x6401692e
6401739d:	add    esp,0x10
640173a0:	push   DWORD PTR [esi+0x1c]
640173a3:	call   0x64016b46
640173a8:	mov    ebx,DWORD PTR [ebp+0x18]
640173ab:	cmp    DWORD PTR [ebx+0xc],0x0
640173af:	jbe    0x640173d7
640173b1:	cmp    BYTE PTR [ebp+0x1c],0x0
640173b5:	jne    0x640171d7
640173bb:	push   DWORD PTR [ebp+0x24]
640173be:	push   DWORD PTR [ebp+0x20]
640173c1:	push   DWORD PTR [ebp-0x8]
640173c4:	push   ebx
640173c5:	push   DWORD PTR [ebp+0x14]
640173c8:	push   DWORD PTR [ebp+0x10]
640173cb:	push   DWORD PTR [ebp+0xc]
640173ce:	push   esi
640173cf:	call   0x64016fa7
640173d4:	add    esp,0x20
640173d7:	call   0x640177ea
640173dc:	cmp    DWORD PTR [eax+0x94],0x0
640173e3:	je     0x640173ea
640173e5:	call   0x64017b5c
640173ea:	pop    edi
640173eb:	pop    esi
640173ec:	pop    ebx
640173ed:	leave  
640173ee:	ret    
640173ef:	push   esi
640173f0:	push   DWORD PTR [esp+0x8]
640173f4:	mov    esi,ecx
640173f6:	call   0x64013680
640173fb:	mov    DWORD PTR [esi],0x640284a8
64017401:	mov    eax,esi
64017403:	pop    esi
64017404:	ret    0x4
64017407:	push   ebp
64017408:	mov    ebp,esp
6401740a:	push   ebx
6401740b:	push   esi
6401740c:	push   edi
6401740d:	call   0x640177ea
64017412:	cmp    DWORD PTR [eax+0x20c],0x0
64017419:	mov    eax,DWORD PTR [ebp+0x18]
6401741c:	mov    ecx,DWORD PTR [ebp+0x8]
6401741f:	mov    edi,0xe06d7363
64017424:	mov    esi,0x1fffffff
64017429:	mov    ebx,0x19930522
6401742e:	jne    0x64017450
64017430:	mov    edx,DWORD PTR [ecx]
64017432:	cmp    edx,edi
64017434:	je     0x64017450
64017436:	cmp    edx,0x80000026
6401743c:	je     0x64017450
6401743e:	mov    edx,DWORD PTR [eax]
64017440:	and    edx,esi
64017442:	cmp    edx,ebx
64017444:	jb     0x64017450
64017446:	test   BYTE PTR [eax+0x20],0x1
6401744a:	jne    0x640174e3
64017450:	test   BYTE PTR [ecx+0x4],0x66
64017454:	je     0x64017479
64017456:	cmp    DWORD PTR [eax+0x4],0x0
6401745a:	je     0x640174e3
64017460:	cmp    DWORD PTR [ebp+0x1c],0x0
64017464:	jne    0x640174e3
64017466:	push   0xffffffff
64017468:	push   eax
64017469:	push   DWORD PTR [ebp+0x14]
6401746c:	push   DWORD PTR [ebp+0xc]
6401746f:	call   0x6401692e
64017474:	add    esp,0x10
64017477:	jmp    0x640174e3
64017479:	cmp    DWORD PTR [eax+0xc],0x0
6401747d:	jne    0x64017491
6401747f:	mov    edx,DWORD PTR [eax]
64017481:	and    edx,esi
64017483:	cmp    edx,0x19930521
64017489:	jb     0x640174e3
6401748b:	cmp    DWORD PTR [eax+0x1c],0x0
6401748f:	je     0x640174e3
64017491:	cmp    DWORD PTR [ecx],edi
64017493:	jne    0x640174c7
64017495:	cmp    DWORD PTR [ecx+0x10],0x3
64017499:	jb     0x640174c7
6401749b:	cmp    DWORD PTR [ecx+0x14],ebx
6401749e:	jbe    0x640174c7
640174a0:	mov    edx,DWORD PTR [ecx+0x1c]
640174a3:	mov    edx,DWORD PTR [edx+0x8]
640174a6:	test   edx,edx
640174a8:	je     0x640174c7
640174aa:	movzx  esi,BYTE PTR [ebp+0x24]
640174ae:	push   esi
640174af:	push   DWORD PTR [ebp+0x20]
640174b2:	push   DWORD PTR [ebp+0x1c]
640174b5:	push   eax
640174b6:	push   DWORD PTR [ebp+0x14]
640174b9:	push   DWORD PTR [ebp+0x10]
640174bc:	push   DWORD PTR [ebp+0xc]
640174bf:	push   ecx
640174c0:	call   edx
640174c2:	add    esp,0x20
640174c5:	jmp    0x640174e6
640174c7:	push   DWORD PTR [ebp+0x20]
640174ca:	push   DWORD PTR [ebp+0x1c]
640174cd:	push   DWORD PTR [ebp+0x24]
640174d0:	push   eax
640174d1:	push   DWORD PTR [ebp+0x14]
640174d4:	push   DWORD PTR [ebp+0x10]
640174d7:	push   DWORD PTR [ebp+0xc]
640174da:	push   ecx
640174db:	call   0x64017099
640174e0:	add    esp,0x20
640174e3:	xor    eax,eax
640174e5:	inc    eax
640174e6:	pop    edi
640174e7:	pop    esi
640174e8:	pop    ebx
640174e9:	pop    ebp
640174ea:	ret    
640174eb:	push   ebp
640174ec:	mov    ebp,esp
640174ee:	push   ecx
640174ef:	push   ecx
640174f0:	push   ebx
640174f1:	push   esi
640174f2:	xor    esi,esi
640174f4:	lea    eax,[ebp-0x4]
640174f7:	inc    esi
640174f8:	xor    ebx,ebx
640174fa:	push   eax
640174fb:	mov    DWORD PTR [ebp-0x8],esi
640174fe:	mov    DWORD PTR [ebp-0x4],ebx
64017501:	call   0x64017eb6
64017506:	cmp    DWORD PTR [ebp-0x4],0x5
6401750a:	pop    ecx
6401750b:	jle    0x64017511
6401750d:	mov    eax,esi
6401750f:	jmp    0x64017553
64017511:	push   edi
64017512:	push   ebx
64017513:	call   DWORD PTR ds:0x6402409c
64017519:	mov    esi,DWORD PTR [eax+0x3c]
6401751c:	add    esi,eax
6401751e:	cmp    WORD PTR [esi+0x6],bx
64017522:	movzx  eax,WORD PTR [esi+0x14]
64017526:	lea    edi,[eax+esi*1+0x18]
6401752a:	jbe    0x6401754f
6401752c:	push   edi
6401752d:	push   0x640284c0
64017532:	call   0x640163c0
64017537:	test   eax,eax
64017539:	pop    ecx
6401753a:	pop    ecx
6401753b:	je     0x6401754b
6401753d:	movzx  eax,WORD PTR [esi+0x6]
64017541:	inc    ebx
64017542:	add    edi,0x28
64017545:	cmp    ebx,eax
64017547:	jb     0x6401752c
64017549:	jmp    0x6401754f
6401754b:	and    DWORD PTR [ebp-0x8],0x0
6401754f:	mov    eax,DWORD PTR [ebp-0x8]
64017552:	pop    edi
64017553:	pop    esi
64017554:	pop    ebx
64017555:	leave  
64017556:	ret    
64017557:	push   esi
64017558:	push   DWORD PTR ds:0x64037908
6401755e:	mov    esi,DWORD PTR ds:0x640241bc
64017564:	call   esi
64017566:	test   eax,eax
64017568:	je     0x6401758b
6401756a:	mov    eax,ds:0x64037904
6401756f:	cmp    eax,0xffffffff
64017572:	je     0x6401758b
64017574:	push   eax
64017575:	push   DWORD PTR ds:0x64037908
6401757b:	call   esi
6401757d:	call   eax
6401757f:	test   eax,eax
64017581:	je     0x6401758b
64017583:	mov    eax,DWORD PTR [eax+0x1f8]
64017589:	jmp    0x640175b1
6401758b:	push   0x640284d8
64017590:	call   DWORD PTR ds:0x6402409c
64017596:	mov    esi,eax
64017598:	test   esi,esi
6401759a:	je     0x640175bf
6401759c:	call   0x640174eb
640175a1:	test   eax,eax
640175a3:	je     0x640175bf
640175a5:	push   0x640284c8
640175aa:	push   esi
640175ab:	call   DWORD PTR ds:0x64024098
640175b1:	test   eax,eax
640175b3:	je     0x640175bf
640175b5:	push   DWORD PTR [esp+0x8]
640175b9:	call   eax
640175bb:	mov    DWORD PTR [esp+0x8],eax
640175bf:	mov    eax,DWORD PTR [esp+0x8]
640175c3:	pop    esi
640175c4:	ret    
640175c5:	push   0x0
640175c7:	call   0x64017557
640175cc:	pop    ecx
640175cd:	ret    
640175ce:	push   esi
640175cf:	push   DWORD PTR ds:0x64037908
640175d5:	mov    esi,DWORD PTR ds:0x640241bc
640175db:	call   esi
640175dd:	test   eax,eax
640175df:	je     0x64017602
640175e1:	mov    eax,ds:0x64037904
640175e6:	cmp    eax,0xffffffff
640175e9:	je     0x64017602
640175eb:	push   eax
640175ec:	push   DWORD PTR ds:0x64037908
640175f2:	call   esi
640175f4:	call   eax
640175f6:	test   eax,eax
640175f8:	je     0x64017602
640175fa:	mov    eax,DWORD PTR [eax+0x1fc]
64017600:	jmp    0x64017628
64017602:	push   0x640284d8
64017607:	call   DWORD PTR ds:0x6402409c
6401760d:	mov    esi,eax
6401760f:	test   esi,esi
64017611:	je     0x64017636
64017613:	call   0x640174eb
64017618:	test   eax,eax
6401761a:	je     0x64017636
6401761c:	push   0x640284e8
64017621:	push   esi
64017622:	call   DWORD PTR ds:0x64024098
64017628:	test   eax,eax
6401762a:	je     0x64017636
6401762c:	push   DWORD PTR [esp+0x8]
64017630:	call   eax
64017632:	mov    DWORD PTR [esp+0x8],eax
64017636:	mov    eax,DWORD PTR [esp+0x8]
6401763a:	pop    esi
6401763b:	ret    
6401763c:	call   DWORD PTR ds:0x640241c0
64017642:	ret    0x4
64017645:	push   esi
64017646:	push   DWORD PTR ds:0x64037908
6401764c:	call   DWORD PTR ds:0x640241bc
64017652:	mov    esi,eax
64017654:	test   esi,esi
64017656:	jne    0x64017673
64017658:	push   DWORD PTR ds:0x64038ec4
6401765e:	call   0x640175ce
64017663:	pop    ecx
64017664:	mov    esi,eax
64017666:	push   esi
64017667:	push   DWORD PTR ds:0x64037908
6401766d:	call   DWORD PTR ds:0x640241c4
64017673:	mov    eax,esi
64017675:	pop    esi
64017676:	ret    
64017677:	mov    eax,ds:0x64037904
6401767c:	cmp    eax,0xffffffff
6401767f:	je     0x64017697
64017681:	push   eax
64017682:	push   DWORD PTR ds:0x64038ecc
64017688:	call   0x640175ce
6401768d:	pop    ecx
6401768e:	call   eax
64017690:	or     DWORD PTR ds:0x64037904,0xffffffff
64017697:	mov    eax,ds:0x64037908
6401769c:	cmp    eax,0xffffffff
6401769f:	je     0x640176af
640176a1:	push   eax
640176a2:	call   DWORD PTR ds:0x640241c8
640176a8:	or     DWORD PTR ds:0x64037908,0xffffffff
640176af:	jmp    0x6401b18d
640176b4:	push   0xc
640176b6:	push   0x6402b918
640176bb:	call   0x64015ed4
640176c0:	push   0x640284d8
640176c5:	call   DWORD PTR ds:0x6402409c
640176cb:	mov    DWORD PTR [ebp-0x1c],eax
640176ce:	mov    esi,DWORD PTR [ebp+0x8]
640176d1:	mov    DWORD PTR [esi+0x5c],0x64037960
640176d8:	xor    edi,edi
640176da:	inc    edi
640176db:	mov    DWORD PTR [esi+0x14],edi
640176de:	test   eax,eax
640176e0:	je     0x64017711
640176e2:	call   0x640174eb
640176e7:	test   eax,eax
640176e9:	je     0x64017711
640176eb:	push   0x640284c8
640176f0:	push   DWORD PTR [ebp-0x1c]
640176f3:	mov    ebx,DWORD PTR ds:0x64024098
640176f9:	call   ebx
640176fb:	mov    DWORD PTR [esi+0x1f8],eax
64017701:	push   0x640284e8
64017706:	push   DWORD PTR [ebp-0x1c]
64017709:	call   ebx
6401770b:	mov    DWORD PTR [esi+0x1fc],eax
64017711:	mov    DWORD PTR [esi+0x70],edi
64017714:	mov    BYTE PTR [esi+0xc8],0x43
6401771b:	mov    BYTE PTR [esi+0x14b],0x43
64017722:	mov    eax,0x640379e8
64017727:	mov    DWORD PTR [esi+0x68],eax
6401772a:	push   eax
6401772b:	call   DWORD PTR ds:0x6402402c
64017731:	push   0xc
64017733:	call   0x6401b2ba
64017738:	pop    ecx
64017739:	and    DWORD PTR [ebp-0x4],0x0
6401773d:	mov    eax,DWORD PTR [ebp+0xc]
64017740:	mov    DWORD PTR [esi+0x6c],eax
64017743:	test   eax,eax
64017745:	jne    0x6401774f
64017747:	mov    eax,ds:0x64037ff0
6401774c:	mov    DWORD PTR [esi+0x6c],eax
6401774f:	push   DWORD PTR [esi+0x6c]
64017752:	call   0x64015744
64017757:	pop    ecx
64017758:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401775f:	call   0x6401776a
64017764:	call   0x64015f19
64017769:	ret    
6401776a:	push   0xc
6401776c:	call   0x6401b1e2
64017771:	pop    ecx
64017772:	ret    
64017773:	push   esi
64017774:	push   edi
64017775:	call   DWORD PTR ds:0x64024068
6401777b:	push   DWORD PTR ds:0x64037904
64017781:	mov    edi,eax
64017783:	call   0x64017645
64017788:	call   eax
6401778a:	mov    esi,eax
6401778c:	test   esi,esi
6401778e:	jne    0x640177de
64017790:	push   0x214
64017795:	push   0x1
64017797:	call   0x64015d2f
6401779c:	mov    esi,eax
6401779e:	test   esi,esi
640177a0:	pop    ecx
640177a1:	pop    ecx
640177a2:	je     0x640177de
640177a4:	push   esi
640177a5:	push   DWORD PTR ds:0x64037904
640177ab:	push   DWORD PTR ds:0x64038ec8
640177b1:	call   0x640175ce
640177b6:	pop    ecx
640177b7:	call   eax
640177b9:	test   eax,eax
640177bb:	je     0x640177d5
640177bd:	push   0x0
640177bf:	push   esi
640177c0:	call   0x640176b4
640177c5:	pop    ecx
640177c6:	pop    ecx
640177c7:	call   DWORD PTR ds:0x640240bc
640177cd:	or     DWORD PTR [esi+0x4],0xffffffff
640177d1:	mov    DWORD PTR [esi],eax
640177d3:	jmp    0x640177de
640177d5:	push   esi
640177d6:	call   0x6401477f
640177db:	pop    ecx
640177dc:	xor    esi,esi
640177de:	push   edi
640177df:	call   DWORD PTR ds:0x64024070
640177e5:	pop    edi
640177e6:	mov    eax,esi
640177e8:	pop    esi
640177e9:	ret    
640177ea:	push   esi
640177eb:	call   0x64017773
640177f0:	mov    esi,eax
640177f2:	test   esi,esi
640177f4:	jne    0x640177fe
640177f6:	push   0x10
640177f8:	call   0x64017dd6
640177fd:	pop    ecx
640177fe:	mov    eax,esi
64017800:	pop    esi
64017801:	ret    
64017802:	push   0x8
64017804:	push   0x6402b938
64017809:	call   0x64015ed4
6401780e:	mov    esi,DWORD PTR [ebp+0x8]
64017811:	test   esi,esi
64017813:	je     0x64017903
64017819:	mov    eax,DWORD PTR [esi+0x24]
6401781c:	test   eax,eax
6401781e:	je     0x64017827
64017820:	push   eax
64017821:	call   0x6401477f
64017826:	pop    ecx
64017827:	mov    eax,DWORD PTR [esi+0x2c]
6401782a:	test   eax,eax
6401782c:	je     0x64017835
6401782e:	push   eax
6401782f:	call   0x6401477f
64017834:	pop    ecx
64017835:	mov    eax,DWORD PTR [esi+0x34]
64017838:	test   eax,eax
6401783a:	je     0x64017843
6401783c:	push   eax
6401783d:	call   0x6401477f
64017842:	pop    ecx
64017843:	mov    eax,DWORD PTR [esi+0x3c]
64017846:	test   eax,eax
64017848:	je     0x64017851
6401784a:	push   eax
6401784b:	call   0x6401477f
64017850:	pop    ecx
64017851:	mov    eax,DWORD PTR [esi+0x44]
64017854:	test   eax,eax
64017856:	je     0x6401785f
64017858:	push   eax
64017859:	call   0x6401477f
6401785e:	pop    ecx
6401785f:	mov    eax,DWORD PTR [esi+0x48]
64017862:	test   eax,eax
64017864:	je     0x6401786d
64017866:	push   eax
64017867:	call   0x6401477f
6401786c:	pop    ecx
6401786d:	mov    eax,DWORD PTR [esi+0x5c]
64017870:	cmp    eax,0x64037960
64017875:	je     0x6401787e
64017877:	push   eax
64017878:	call   0x6401477f
6401787d:	pop    ecx
6401787e:	push   0xd
64017880:	call   0x6401b2ba
64017885:	pop    ecx
64017886:	and    DWORD PTR [ebp-0x4],0x0
6401788a:	mov    edi,DWORD PTR [esi+0x68]
6401788d:	test   edi,edi
6401788f:	je     0x640178ab
64017891:	push   edi
64017892:	call   DWORD PTR ds:0x64024078
64017898:	test   eax,eax
6401789a:	jne    0x640178ab
6401789c:	cmp    edi,0x640379e8
640178a2:	je     0x640178ab
640178a4:	push   edi
640178a5:	call   0x6401477f
640178aa:	pop    ecx
640178ab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640178b2:	call   0x6401790e
640178b7:	push   0xc
640178b9:	call   0x6401b2ba
640178be:	pop    ecx
640178bf:	mov    DWORD PTR [ebp-0x4],0x1
640178c6:	mov    edi,DWORD PTR [esi+0x6c]
640178c9:	test   edi,edi
640178cb:	je     0x640178f0
640178cd:	push   edi
640178ce:	call   0x640157ca
640178d3:	pop    ecx
640178d4:	cmp    edi,DWORD PTR ds:0x64037ff0
640178da:	je     0x640178f0
640178dc:	cmp    edi,0x64037f18
640178e2:	je     0x640178f0
640178e4:	cmp    DWORD PTR [edi],0x0
640178e7:	jne    0x640178f0
640178e9:	push   edi
640178ea:	call   0x64015604
640178ef:	pop    ecx
640178f0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640178f7:	call   0x6401791a
640178fc:	push   esi
640178fd:	call   0x6401477f
64017902:	pop    ecx
64017903:	call   0x64015f19
64017908:	ret    0x4
6401790b:	mov    esi,DWORD PTR [ebp+0x8]
6401790e:	push   0xd
64017910:	call   0x6401b1e2
64017915:	pop    ecx
64017916:	ret    
64017917:	mov    esi,DWORD PTR [ebp+0x8]
6401791a:	push   0xc
6401791c:	call   0x6401b1e2
64017921:	pop    ecx
64017922:	ret    
64017923:	cmp    DWORD PTR ds:0x64037904,0xffffffff
6401792a:	je     0x64017978
6401792c:	push   edi
6401792d:	mov    edi,DWORD PTR [esp+0x8]
64017931:	test   edi,edi
64017933:	jne    0x6401795b
64017935:	push   esi
64017936:	push   DWORD PTR ds:0x64037908
6401793c:	mov    esi,DWORD PTR ds:0x640241bc
64017942:	call   esi
64017944:	test   eax,eax
64017946:	je     0x6401795a
64017948:	push   DWORD PTR ds:0x64037904
6401794e:	push   DWORD PTR ds:0x64037908
64017954:	call   esi
64017956:	call   eax
64017958:	mov    edi,eax
6401795a:	pop    esi
6401795b:	push   0x0
6401795d:	push   DWORD PTR ds:0x64037904
64017963:	push   DWORD PTR ds:0x64038ec8
64017969:	call   0x640175ce
6401796e:	pop    ecx
6401796f:	call   eax
64017971:	push   edi
64017972:	call   0x64017802
64017977:	pop    edi
64017978:	mov    eax,ds:0x64037908
6401797d:	cmp    eax,0xffffffff
64017980:	je     0x6401798b
64017982:	push   0x0
64017984:	push   eax
64017985:	call   DWORD PTR ds:0x640241c4
6401798b:	ret    
6401798c:	push   edi
6401798d:	push   0x640284d8
64017992:	call   DWORD PTR ds:0x6402409c
64017998:	mov    edi,eax
6401799a:	test   edi,edi
6401799c:	jne    0x640179a7
6401799e:	call   0x64017677
640179a3:	xor    eax,eax
640179a5:	pop    edi
640179a6:	ret    
640179a7:	push   esi
640179a8:	mov    esi,DWORD PTR ds:0x64024098
640179ae:	push   0x64028518
640179b3:	push   edi
640179b4:	call   esi
640179b6:	push   0x6402850c
640179bb:	push   edi
640179bc:	mov    ds:0x64038ec0,eax
640179c1:	call   esi
640179c3:	push   0x64028500
640179c8:	push   edi
640179c9:	mov    ds:0x64038ec4,eax
640179ce:	call   esi
640179d0:	push   0x640284f8
640179d5:	push   edi
640179d6:	mov    ds:0x64038ec8,eax
640179db:	call   esi
640179dd:	cmp    DWORD PTR ds:0x64038ec0,0x0
640179e4:	mov    esi,DWORD PTR ds:0x640241c4
640179ea:	mov    ds:0x64038ecc,eax
640179ef:	je     0x64017a07
640179f1:	cmp    DWORD PTR ds:0x64038ec4,0x0
640179f8:	je     0x64017a07
640179fa:	cmp    DWORD PTR ds:0x64038ec8,0x0
64017a01:	je     0x64017a07
64017a03:	test   eax,eax
64017a05:	jne    0x64017a2b
64017a07:	mov    eax,ds:0x640241bc
64017a0c:	mov    ds:0x64038ec4,eax
64017a11:	mov    eax,ds:0x640241c8
64017a16:	mov    DWORD PTR ds:0x64038ec0,0x6401763c
64017a20:	mov    DWORD PTR ds:0x64038ec8,esi
64017a26:	mov    ds:0x64038ecc,eax
64017a2b:	call   DWORD PTR ds:0x640241c0
64017a31:	cmp    eax,0xffffffff
64017a34:	mov    ds:0x64037908,eax
64017a39:	je     0x64017b0b
64017a3f:	push   DWORD PTR ds:0x64038ec4
64017a45:	push   eax
64017a46:	call   esi
64017a48:	test   eax,eax
64017a4a:	je     0x64017b0b
64017a50:	call   0x64018086
64017a55:	push   DWORD PTR ds:0x64038ec0
64017a5b:	call   0x64017557
64017a60:	push   DWORD PTR ds:0x64038ec4
64017a66:	mov    ds:0x64038ec0,eax
64017a6b:	call   0x64017557
64017a70:	push   DWORD PTR ds:0x64038ec8
64017a76:	mov    ds:0x64038ec4,eax
64017a7b:	call   0x64017557
64017a80:	push   DWORD PTR ds:0x64038ecc
64017a86:	mov    ds:0x64038ec8,eax
64017a8b:	call   0x64017557
64017a90:	add    esp,0x10
64017a93:	mov    ds:0x64038ecc,eax
64017a98:	call   0x6401b144
64017a9d:	test   eax,eax
64017a9f:	je     0x64017b06
64017aa1:	push   0x64017802
64017aa6:	push   DWORD PTR ds:0x64038ec0
64017aac:	call   0x640175ce
64017ab1:	pop    ecx
64017ab2:	call   eax
64017ab4:	cmp    eax,0xffffffff
64017ab7:	mov    ds:0x64037904,eax
64017abc:	je     0x64017b06
64017abe:	push   0x214
64017ac3:	push   0x1
64017ac5:	call   0x64015d2f
64017aca:	mov    esi,eax
64017acc:	test   esi,esi
64017ace:	pop    ecx
64017acf:	pop    ecx
64017ad0:	je     0x64017b06
64017ad2:	push   esi
64017ad3:	push   DWORD PTR ds:0x64037904
64017ad9:	push   DWORD PTR ds:0x64038ec8
64017adf:	call   0x640175ce
64017ae4:	pop    ecx
64017ae5:	call   eax
64017ae7:	test   eax,eax
64017ae9:	je     0x64017b06
64017aeb:	push   0x0
64017aed:	push   esi
64017aee:	call   0x640176b4
64017af3:	pop    ecx
64017af4:	pop    ecx
64017af5:	call   DWORD PTR ds:0x640240bc
64017afb:	or     DWORD PTR [esi+0x4],0xffffffff
64017aff:	mov    DWORD PTR [esi],eax
64017b01:	xor    eax,eax
64017b03:	inc    eax
64017b04:	jmp    0x64017b0d
64017b06:	call   0x64017677
64017b0b:	xor    eax,eax
64017b0d:	pop    esi
64017b0e:	pop    edi
64017b0f:	ret    
64017b10:	push   0x8
64017b12:	push   0x6402b960
64017b17:	call   0x64015ed4
64017b1c:	call   0x640177ea
64017b21:	mov    eax,DWORD PTR [eax+0x78]
64017b24:	test   eax,eax
64017b26:	je     0x64017b3e
64017b28:	and    DWORD PTR [ebp-0x4],0x0
64017b2c:	call   eax
64017b2e:	jmp    0x64017b37
64017b30:	xor    eax,eax
64017b32:	inc    eax
64017b33:	ret    
64017b34:	mov    esp,DWORD PTR [ebp-0x18]
64017b37:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017b3e:	call   0x64015dc2
64017b43:	call   0x64015f19
64017b48:	ret    
64017b49:	call   0x640177ea
64017b4e:	mov    eax,DWORD PTR [eax+0x7c]
64017b51:	test   eax,eax
64017b53:	je     0x64017b57
64017b55:	call   eax
64017b57:	jmp    0x64017b10
64017b5c:	push   0x8
64017b5e:	push   0x6402b980
64017b63:	call   0x64015ed4
64017b68:	push   DWORD PTR ds:0x64038ed0
64017b6e:	call   0x640175ce
64017b73:	pop    ecx
64017b74:	test   eax,eax
64017b76:	je     0x64017b8e
64017b78:	and    DWORD PTR [ebp-0x4],0x0
64017b7c:	call   eax
64017b7e:	jmp    0x64017b87
64017b80:	xor    eax,eax
64017b82:	inc    eax
64017b83:	ret    
64017b84:	mov    esp,DWORD PTR [ebp-0x18]
64017b87:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017b8e:	jmp    0x64017b10
64017b93:	push   0x64017b10
64017b98:	call   0x64017557
64017b9d:	pop    ecx
64017b9e:	mov    ds:0x64038ed0,eax
64017ba3:	ret    
64017ba4:	int3   
64017ba5:	int3   
64017ba6:	int3   
64017ba7:	int3   
64017ba8:	int3   
64017ba9:	int3   
64017baa:	int3   
64017bab:	int3   
64017bac:	int3   
64017bad:	int3   
64017bae:	int3   
64017baf:	int3   
64017bb0:	push   ebp
64017bb1:	mov    ebp,esp
64017bb3:	sub    esp,0x4
64017bb6:	push   ebx
64017bb7:	push   ecx
64017bb8:	mov    eax,DWORD PTR [ebp+0xc]
64017bbb:	add    eax,0xc
64017bbe:	mov    DWORD PTR [ebp-0x4],eax
64017bc1:	mov    eax,DWORD PTR [ebp+0x8]
64017bc4:	push   ebp
64017bc5:	push   DWORD PTR [ebp+0x10]
64017bc8:	mov    ecx,DWORD PTR [ebp+0x10]
64017bcb:	mov    ebp,DWORD PTR [ebp-0x4]
64017bce:	call   0x6401e7a4
64017bd3:	push   esi
64017bd4:	push   edi
64017bd5:	call   eax
64017bd7:	pop    edi
64017bd8:	pop    esi
64017bd9:	mov    ebx,ebp
64017bdb:	pop    ebp
64017bdc:	mov    ecx,DWORD PTR [ebp+0x10]
64017bdf:	push   ebp
64017be0:	mov    ebp,ebx
64017be2:	cmp    ecx,0x100
64017be8:	jne    0x64017bef
64017bea:	mov    ecx,0x2
64017bef:	push   ecx
64017bf0:	call   0x6401e7a4
64017bf5:	pop    ebp
64017bf6:	pop    ecx
64017bf7:	pop    ebx
64017bf8:	leave  
64017bf9:	ret    0xc
64017bfc:	push   ebp
64017bfd:	mov    ebp,esp
64017bff:	sub    esp,0x328
64017c05:	mov    ds:0x64038fe0,eax
64017c0a:	mov    DWORD PTR ds:0x64038fdc,ecx
64017c10:	mov    DWORD PTR ds:0x64038fd8,edx
64017c16:	mov    DWORD PTR ds:0x64038fd4,ebx
64017c1c:	mov    DWORD PTR ds:0x64038fd0,esi
64017c22:	mov    DWORD PTR ds:0x64038fcc,edi
64017c28:	data16 mov WORD PTR ds:0x64038ff8,ss
64017c2f:	data16 mov WORD PTR ds:0x64038fec,cs
64017c36:	data16 mov WORD PTR ds:0x64038fc8,ds
64017c3d:	data16 mov WORD PTR ds:0x64038fc4,es
64017c44:	data16 mov WORD PTR ds:0x64038fc0,fs
64017c4b:	data16 mov WORD PTR ds:0x64038fbc,gs
64017c52:	pushf  
64017c53:	pop    DWORD PTR ds:0x64038ff0
64017c59:	mov    eax,DWORD PTR [ebp+0x0]
64017c5c:	mov    ds:0x64038fe4,eax
64017c61:	mov    eax,DWORD PTR [ebp+0x4]
64017c64:	mov    ds:0x64038fe8,eax
64017c69:	lea    eax,[ebp+0x8]
64017c6c:	mov    ds:0x64038ff4,eax
64017c71:	mov    eax,DWORD PTR [ebp-0x320]
64017c77:	mov    DWORD PTR ds:0x64038f30,0x10001
64017c81:	mov    eax,ds:0x64038fe8
64017c86:	mov    ds:0x64038ee4,eax
64017c8b:	mov    DWORD PTR ds:0x64038ed8,0xc0000409
64017c95:	mov    DWORD PTR ds:0x64038edc,0x1
64017c9f:	mov    eax,ds:0x64037644
64017ca4:	mov    DWORD PTR [ebp-0x328],eax
64017caa:	mov    eax,ds:0x64037648
64017caf:	mov    DWORD PTR [ebp-0x324],eax
64017cb5:	call   DWORD PTR ds:0x640241a0
64017cbb:	mov    ds:0x64038f28,eax
64017cc0:	push   0x1
64017cc2:	call   0x64017d2b
64017cc7:	pop    ecx
64017cc8:	push   0x0
64017cca:	call   DWORD PTR ds:0x6402419c
64017cd0:	push   0x64028524
64017cd5:	call   DWORD PTR ds:0x64024198
64017cdb:	cmp    DWORD PTR ds:0x64038f28,0x0
64017ce2:	jne    0x64017cec
64017ce4:	push   0x1
64017ce6:	call   0x64017d2b
64017ceb:	pop    ecx
64017cec:	push   0xc0000409
64017cf1:	call   DWORD PTR ds:0x6402403c
64017cf7:	push   eax
64017cf8:	call   DWORD PTR ds:0x640240e4
64017cfe:	leave  
64017cff:	ret    
64017d00:	push   ecx
64017d01:	lea    ecx,[esp+0x4]
64017d05:	sub    ecx,eax
64017d07:	sbb    eax,eax
64017d09:	not    eax
64017d0b:	and    ecx,eax
64017d0d:	mov    eax,esp
64017d0f:	and    eax,0xfffff000
64017d14:	cmp    ecx,eax
64017d16:	jb     0x64017d22
64017d18:	mov    eax,ecx
64017d1a:	pop    ecx
64017d1b:	xchg   esp,eax
64017d1c:	mov    eax,DWORD PTR [eax]
64017d1e:	mov    DWORD PTR [esp],eax
64017d21:	ret    
64017d22:	sub    eax,0x1000
64017d27:	test   DWORD PTR [eax],eax
64017d29:	jmp    0x64017d14
64017d2b:	and    DWORD PTR ds:0x6403ac74,0x0
64017d32:	ret    
64017d33:	push   0x10
64017d35:	push   0x6402b9a0
64017d3a:	call   0x64015ed4
64017d3f:	xor    eax,eax
64017d41:	mov    ebx,DWORD PTR [ebp+0x8]
64017d44:	xor    edi,edi
64017d46:	cmp    ebx,edi
64017d48:	setne  al
64017d4b:	cmp    eax,edi
64017d4d:	jne    0x64017d6c
64017d4f:	call   0x64016483
64017d54:	mov    DWORD PTR [eax],0x16
64017d5a:	push   edi
64017d5b:	push   edi
64017d5c:	push   edi
64017d5d:	push   edi
64017d5e:	push   edi
64017d5f:	call   0x64013e12
64017d64:	add    esp,0x14
64017d67:	or     eax,0xffffffff
64017d6a:	jmp    0x64017dbf
64017d6c:	cmp    DWORD PTR ds:0x6403ab44,0x3
64017d73:	jne    0x64017dad
64017d75:	push   0x4
64017d77:	call   0x6401b2ba
64017d7c:	pop    ecx
64017d7d:	mov    DWORD PTR [ebp-0x4],edi
64017d80:	push   ebx
64017d81:	call   0x6401b333
64017d86:	pop    ecx
64017d87:	mov    DWORD PTR [ebp-0x20],eax
64017d8a:	cmp    eax,edi
64017d8c:	je     0x64017d99
64017d8e:	mov    esi,DWORD PTR [ebx-0x4]
64017d91:	sub    esi,0x9
64017d94:	mov    DWORD PTR [ebp-0x1c],esi
64017d97:	jmp    0x64017d9c
64017d99:	mov    esi,DWORD PTR [ebp-0x1c]
64017d9c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017da3:	call   0x64017dcd
64017da8:	cmp    DWORD PTR [ebp-0x20],edi
64017dab:	jne    0x64017dbd
64017dad:	push   ebx
64017dae:	push   edi
64017daf:	push   DWORD PTR ds:0x64039354
64017db5:	call   DWORD PTR ds:0x6402418c
64017dbb:	mov    esi,eax
64017dbd:	mov    eax,esi
64017dbf:	call   0x64015f19
64017dc4:	ret    
64017dc5:	xor    edi,edi
64017dc7:	mov    ebx,DWORD PTR [ebp+0x8]
64017dca:	mov    esi,DWORD PTR [ebp-0x1c]
64017dcd:	push   0x4
64017dcf:	call   0x6401b1e2
64017dd4:	pop    ecx
64017dd5:	ret    
64017dd6:	call   0x6401bfbd
64017ddb:	push   DWORD PTR [esp+0x4]
64017ddf:	call   0x6401be1d
64017de4:	push   DWORD PTR ds:0x64037910
64017dea:	call   0x640175ce
64017def:	push   0xff
64017df4:	call   eax
64017df6:	add    esp,0xc
64017df9:	ret    
64017dfa:	push   0x6402853c
64017dff:	call   DWORD PTR ds:0x6402409c
64017e05:	test   eax,eax
64017e07:	je     0x64017e1f
64017e09:	push   0x6402852c
64017e0e:	push   eax
64017e0f:	call   DWORD PTR ds:0x64024098
64017e15:	test   eax,eax
64017e17:	je     0x64017e1f
64017e19:	push   DWORD PTR [esp+0x4]
64017e1d:	call   eax
64017e1f:	ret    
64017e20:	push   DWORD PTR [esp+0x4]
64017e24:	call   0x64017dfa
64017e29:	pop    ecx
64017e2a:	push   DWORD PTR [esp+0x4]
64017e2e:	call   DWORD PTR ds:0x64024034
64017e34:	int3   
64017e35:	push   0x8
64017e37:	call   0x6401b2ba
64017e3c:	pop    ecx
64017e3d:	ret    
64017e3e:	push   0x8
64017e40:	call   0x6401b1e2
64017e45:	pop    ecx
64017e46:	ret    
64017e47:	push   esi
64017e48:	mov    esi,eax
64017e4a:	jmp    0x64017e57
64017e4c:	mov    eax,DWORD PTR [esi]
64017e4e:	test   eax,eax
64017e50:	je     0x64017e54
64017e52:	call   eax
64017e54:	add    esi,0x4
64017e57:	cmp    esi,DWORD PTR [esp+0x8]
64017e5b:	jb     0x64017e4c
64017e5d:	pop    esi
64017e5e:	ret    
64017e5f:	push   esi
64017e60:	mov    esi,DWORD PTR [esp+0x8]
64017e64:	xor    eax,eax
64017e66:	jmp    0x64017e77
64017e68:	test   eax,eax
64017e6a:	jne    0x64017e7d
64017e6c:	mov    ecx,DWORD PTR [esi]
64017e6e:	test   ecx,ecx
64017e70:	je     0x64017e74
64017e72:	call   ecx
64017e74:	add    esi,0x4
64017e77:	cmp    esi,DWORD PTR [esp+0xc]
64017e7b:	jb     0x64017e68
64017e7d:	pop    esi
64017e7e:	ret    
64017e7f:	mov    ecx,DWORD PTR [esp+0x4]
64017e83:	push   esi
64017e84:	xor    esi,esi
64017e86:	cmp    ecx,esi
64017e88:	jne    0x64017ea7
64017e8a:	call   0x64016483
64017e8f:	push   esi
64017e90:	push   esi
64017e91:	push   esi
64017e92:	push   esi
64017e93:	push   esi
64017e94:	mov    DWORD PTR [eax],0x16
64017e9a:	call   0x64013e12
64017e9f:	add    esp,0x14
64017ea2:	push   0x16
64017ea4:	pop    eax
64017ea5:	pop    esi
64017ea6:	ret    
64017ea7:	mov    eax,ds:0x64039200
64017eac:	cmp    eax,esi
64017eae:	je     0x64017e8a
64017eb0:	mov    DWORD PTR [ecx],eax
64017eb2:	xor    eax,eax
64017eb4:	pop    esi
64017eb5:	ret    
64017eb6:	mov    eax,DWORD PTR [esp+0x4]
64017eba:	push   esi
64017ebb:	xor    esi,esi
64017ebd:	cmp    eax,esi
64017ebf:	jne    0x64017ede
64017ec1:	call   0x64016483
64017ec6:	push   esi
64017ec7:	push   esi
64017ec8:	push   esi
64017ec9:	push   esi
64017eca:	push   esi
64017ecb:	mov    DWORD PTR [eax],0x16
64017ed1:	call   0x64013e12
64017ed6:	add    esp,0x14
64017ed9:	push   0x16
64017edb:	pop    eax
64017edc:	pop    esi
64017edd:	ret    
64017ede:	cmp    DWORD PTR ds:0x64039200,esi
64017ee4:	je     0x64017ec1
64017ee6:	mov    ecx,DWORD PTR ds:0x6403920c
64017eec:	mov    DWORD PTR [eax],ecx
64017eee:	xor    eax,eax
64017ef0:	pop    esi
64017ef1:	ret    
64017ef2:	cmp    DWORD PTR ds:0x64028ba4,0x0
64017ef9:	je     0x64017f15
64017efb:	push   0x64028ba4
64017f00:	call   0x6401e5d0
64017f05:	test   eax,eax
64017f07:	pop    ecx
64017f08:	je     0x64017f15
64017f0a:	push   DWORD PTR [esp+0x4]
64017f0e:	call   DWORD PTR ds:0x64028ba4
64017f14:	pop    ecx
64017f15:	call   0x6401e7cf
64017f1a:	push   0x64024264
64017f1f:	push   0x6402424c
64017f24:	call   0x64017e5f
64017f29:	test   eax,eax
64017f2b:	pop    ecx
64017f2c:	pop    ecx
64017f2d:	jne    0x64017f83
64017f2f:	push   esi
64017f30:	push   edi
64017f31:	push   0x640187f7
64017f36:	call   0x64013f6a
64017f3b:	mov    esi,0x64024208
64017f40:	mov    eax,esi
64017f42:	mov    edi,0x64024248
64017f47:	cmp    eax,edi
64017f49:	pop    ecx
64017f4a:	jae    0x64017f5b
64017f4c:	mov    eax,DWORD PTR [esi]
64017f4e:	test   eax,eax
64017f50:	je     0x64017f54
64017f52:	call   eax
64017f54:	add    esi,0x4
64017f57:	cmp    esi,edi
64017f59:	jb     0x64017f4c
64017f5b:	cmp    DWORD PTR ds:0x6403ac70,0x0
64017f62:	pop    edi
64017f63:	pop    esi
64017f64:	je     0x64017f81
64017f66:	push   0x6403ac70
64017f6b:	call   0x6401e5d0
64017f70:	test   eax,eax
64017f72:	pop    ecx
64017f73:	je     0x64017f81
64017f75:	push   0x0
64017f77:	push   0x2
64017f79:	push   0x0
64017f7b:	call   DWORD PTR ds:0x6403ac70
64017f81:	xor    eax,eax
64017f83:	ret    
64017f84:	push   0x10
64017f86:	push   0x6402b9c0
64017f8b:	call   0x64015ed4
64017f90:	push   0x8
64017f92:	call   0x6401b2ba
64017f97:	pop    ecx
64017f98:	xor    edi,edi
64017f9a:	mov    DWORD PTR [ebp-0x4],edi
64017f9d:	xor    ebx,ebx
64017f9f:	inc    ebx
64017fa0:	cmp    DWORD PTR ds:0x64039240,ebx
64017fa6:	je     0x64018026
64017fa8:	mov    DWORD PTR ds:0x6403923c,ebx
64017fae:	mov    al,BYTE PTR [ebp+0x10]
64017fb1:	mov    ds:0x64039238,al
64017fb6:	cmp    DWORD PTR [ebp+0xc],edi
64017fb9:	jne    0x64018016
64017fbb:	push   DWORD PTR ds:0x6403ac68
64017fc1:	call   0x640175ce
64017fc6:	mov    DWORD PTR [ebp-0x1c],eax
64017fc9:	push   DWORD PTR ds:0x6403ac64
64017fcf:	call   0x640175ce
64017fd4:	pop    ecx
64017fd5:	pop    ecx
64017fd6:	mov    esi,eax
64017fd8:	mov    DWORD PTR [ebp-0x20],esi
64017fdb:	cmp    DWORD PTR [ebp-0x1c],edi
64017fde:	je     0x64018006
64017fe0:	sub    esi,0x4
64017fe3:	mov    DWORD PTR [ebp-0x20],esi
64017fe6:	cmp    esi,DWORD PTR [ebp-0x1c]
64017fe9:	jb     0x64018006
64017feb:	cmp    DWORD PTR [esi],0x0
64017fee:	je     0x64017fe0
64017ff0:	mov    edi,DWORD PTR [esi]
64017ff2:	call   0x640175c5
64017ff7:	cmp    edi,eax
64017ff9:	je     0x64017fe0
64017ffb:	push   edi
64017ffc:	call   0x640175ce
64018001:	pop    ecx
64018002:	call   eax
64018004:	jmp    0x64017fe0
64018006:	push   0x64024274
6401800b:	mov    eax,0x64024268
64018010:	call   0x64017e47
64018015:	pop    ecx
64018016:	push   0x6402427c
6401801b:	mov    eax,0x64024278
64018020:	call   0x64017e47
64018025:	pop    ecx
64018026:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401802d:	call   0x64018051
64018032:	cmp    DWORD PTR [ebp+0x10],0x0
64018036:	jne    0x64018060
64018038:	mov    DWORD PTR ds:0x64039240,ebx
6401803e:	push   0x8
64018040:	call   0x6401b1e2
64018045:	pop    ecx
64018046:	push   DWORD PTR [ebp+0x8]
64018049:	call   0x64017e20
6401804e:	xor    ebx,ebx
64018050:	inc    ebx
64018051:	cmp    DWORD PTR [ebp+0x10],0x0
64018055:	je     0x6401805f
64018057:	push   0x8
64018059:	call   0x6401b1e2
6401805e:	pop    ecx
6401805f:	ret    
64018060:	call   0x64015f19
64018065:	ret    
64018066:	push   0x0
64018068:	push   0x1
6401806a:	push   DWORD PTR [esp+0xc]
6401806e:	call   0x64017f84
64018073:	add    esp,0xc
64018076:	ret    
64018077:	push   0x1
64018079:	push   0x0
6401807b:	push   0x0
6401807d:	call   0x64017f84
64018082:	add    esp,0xc
64018085:	ret    
64018086:	push   esi
64018087:	call   0x640175c5
6401808c:	mov    esi,eax
6401808e:	push   esi
6401808f:	call   0x64016835
64018094:	push   esi
64018095:	call   0x6401e7f8
6401809a:	push   esi
6401809b:	call   0x64013d0c
640180a0:	push   esi
640180a1:	call   0x6401d741
640180a6:	push   esi
640180a7:	call   0x6401e7ee
640180ac:	push   esi
640180ad:	call   0x6401e337
640180b2:	push   esi
640180b3:	call   0x64018944
640180b8:	push   esi
640180b9:	call   0x64017b93
640180be:	push   0x64018066
640180c3:	call   0x64017557
640180c8:	add    esp,0x24
640180cb:	mov    ds:0x64037910,eax
640180d0:	pop    esi
640180d1:	ret    
640180d2:	push   0x54
640180d4:	push   0x6402b9e0
640180d9:	call   0x64015ed4
640180de:	xor    edi,edi
640180e0:	mov    DWORD PTR [ebp-0x4],edi
640180e3:	lea    eax,[ebp-0x64]
640180e6:	push   eax
640180e7:	call   DWORD PTR ds:0x640241d8
640180ed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640180f4:	push   0x40
640180f6:	push   0x20
640180f8:	pop    esi
640180f9:	push   esi
640180fa:	call   0x64015d2f
640180ff:	pop    ecx
64018100:	pop    ecx
64018101:	cmp    eax,edi
64018103:	je     0x6401831d
64018109:	mov    ds:0x6403ab60,eax
6401810e:	mov    DWORD PTR ds:0x6403ab48,esi
64018114:	lea    ecx,[eax+0x800]
6401811a:	jmp    0x6401814c
6401811c:	mov    BYTE PTR [eax+0x4],0x0
64018120:	or     DWORD PTR [eax],0xffffffff
64018123:	mov    BYTE PTR [eax+0x5],0xa
64018127:	mov    DWORD PTR [eax+0x8],edi
6401812a:	mov    BYTE PTR [eax+0x24],0x0
6401812e:	mov    BYTE PTR [eax+0x25],0xa
64018132:	mov    BYTE PTR [eax+0x26],0xa
64018136:	mov    DWORD PTR [eax+0x38],edi
64018139:	mov    BYTE PTR [eax+0x34],0x0
6401813d:	add    eax,0x40
64018140:	mov    ecx,DWORD PTR ds:0x6403ab60
64018146:	add    ecx,0x800
6401814c:	cmp    eax,ecx
6401814e:	jb     0x6401811c
64018150:	cmp    WORD PTR [ebp-0x32],di
64018154:	je     0x64018264
6401815a:	mov    eax,DWORD PTR [ebp-0x30]
6401815d:	cmp    eax,edi
6401815f:	je     0x64018264
64018165:	mov    edi,DWORD PTR [eax]
64018167:	lea    ebx,[eax+0x4]
6401816a:	lea    eax,[ebx+edi*1]
6401816d:	mov    DWORD PTR [ebp-0x1c],eax
64018170:	mov    esi,0x800
64018175:	cmp    edi,esi
64018177:	jl     0x6401817b
64018179:	mov    edi,esi
6401817b:	mov    DWORD PTR [ebp-0x20],0x1
64018182:	jmp    0x640181df
64018184:	push   0x40
64018186:	push   0x20
64018188:	call   0x64015d2f
6401818d:	pop    ecx
6401818e:	pop    ecx
6401818f:	test   eax,eax
64018191:	je     0x640181e9
64018193:	mov    ecx,DWORD PTR [ebp-0x20]
64018196:	lea    ecx,[ecx*4+0x6403ab60]
6401819d:	mov    DWORD PTR [ecx],eax
6401819f:	add    DWORD PTR ds:0x6403ab48,0x20
640181a6:	lea    edx,[eax+0x800]
640181ac:	jmp    0x640181d8
640181ae:	mov    BYTE PTR [eax+0x4],0x0
640181b2:	or     DWORD PTR [eax],0xffffffff
640181b5:	mov    BYTE PTR [eax+0x5],0xa
640181b9:	and    DWORD PTR [eax+0x8],0x0
640181bd:	and    BYTE PTR [eax+0x24],0x80
640181c1:	mov    BYTE PTR [eax+0x25],0xa
640181c5:	mov    BYTE PTR [eax+0x26],0xa
640181c9:	and    DWORD PTR [eax+0x38],0x0
640181cd:	mov    BYTE PTR [eax+0x34],0x0
640181d1:	add    eax,0x40
640181d4:	mov    edx,DWORD PTR [ecx]
640181d6:	add    edx,esi
640181d8:	cmp    eax,edx
640181da:	jb     0x640181ae
640181dc:	inc    DWORD PTR [ebp-0x20]
640181df:	cmp    DWORD PTR ds:0x6403ab48,edi
640181e5:	jl     0x64018184
640181e7:	jmp    0x640181ef
640181e9:	mov    edi,DWORD PTR ds:0x6403ab48
640181ef:	and    DWORD PTR [ebp-0x20],0x0
640181f3:	test   edi,edi
640181f5:	jle    0x64018264
640181f7:	mov    eax,DWORD PTR [ebp-0x1c]
640181fa:	mov    ecx,DWORD PTR [eax]
640181fc:	cmp    ecx,0xffffffff
640181ff:	je     0x64018257
64018201:	cmp    ecx,0xfffffffe
64018204:	je     0x64018257
64018206:	mov    al,BYTE PTR [ebx]
64018208:	test   al,0x1
6401820a:	je     0x64018257
6401820c:	test   al,0x8
6401820e:	jne    0x6401821b
64018210:	push   ecx
64018211:	call   DWORD PTR ds:0x640241d4
64018217:	test   eax,eax
64018219:	je     0x64018257
6401821b:	mov    esi,DWORD PTR [ebp-0x20]
6401821e:	mov    eax,esi
64018220:	sar    eax,0x5
64018223:	and    esi,0x1f
64018226:	shl    esi,0x6
64018229:	add    esi,DWORD PTR [eax*4+0x6403ab60]
64018230:	mov    eax,DWORD PTR [ebp-0x1c]
64018233:	mov    eax,DWORD PTR [eax]
64018235:	mov    DWORD PTR [esi],eax
64018237:	mov    al,BYTE PTR [ebx]
64018239:	mov    BYTE PTR [esi+0x4],al
6401823c:	push   0xfa0
64018241:	lea    eax,[esi+0xc]
64018244:	push   eax
64018245:	call   0x6401e812
6401824a:	pop    ecx
6401824b:	pop    ecx
6401824c:	test   eax,eax
6401824e:	je     0x6401831d
64018254:	inc    DWORD PTR [esi+0x8]
64018257:	inc    DWORD PTR [ebp-0x20]
6401825a:	inc    ebx
6401825b:	add    DWORD PTR [ebp-0x1c],0x4
6401825f:	cmp    DWORD PTR [ebp-0x20],edi
64018262:	jl     0x640181f7
64018264:	xor    ebx,ebx
64018266:	mov    esi,ebx
64018268:	shl    esi,0x6
6401826b:	add    esi,DWORD PTR ds:0x6403ab60
64018271:	mov    eax,DWORD PTR [esi]
64018273:	cmp    eax,0xffffffff
64018276:	je     0x64018283
64018278:	cmp    eax,0xfffffffe
6401827b:	je     0x64018283
6401827d:	or     BYTE PTR [esi+0x4],0x80
64018281:	jmp    0x640182f5
64018283:	mov    BYTE PTR [esi+0x4],0x81
64018287:	test   ebx,ebx
64018289:	jne    0x64018290
6401828b:	push   0xfffffff6
6401828d:	pop    eax
6401828e:	jmp    0x6401829a
64018290:	mov    eax,ebx
64018292:	dec    eax
64018293:	neg    eax
64018295:	sbb    eax,eax
64018297:	add    eax,0xfffffff5
6401829a:	push   eax
6401829b:	call   DWORD PTR ds:0x640241d0
640182a1:	mov    edi,eax
640182a3:	cmp    edi,0xffffffff
640182a6:	je     0x640182eb
640182a8:	test   edi,edi
640182aa:	je     0x640182eb
640182ac:	push   edi
640182ad:	call   DWORD PTR ds:0x640241d4
640182b3:	test   eax,eax
640182b5:	je     0x640182eb
640182b7:	mov    DWORD PTR [esi],edi
640182b9:	and    eax,0xff
640182be:	cmp    eax,0x2
640182c1:	jne    0x640182c9
640182c3:	or     BYTE PTR [esi+0x4],0x40
640182c7:	jmp    0x640182d2
640182c9:	cmp    eax,0x3
640182cc:	jne    0x640182d2
640182ce:	or     BYTE PTR [esi+0x4],0x8
640182d2:	push   0xfa0
640182d7:	lea    eax,[esi+0xc]
640182da:	push   eax
640182db:	call   0x6401e812
640182e0:	pop    ecx
640182e1:	pop    ecx
640182e2:	test   eax,eax
640182e4:	je     0x6401831d
640182e6:	inc    DWORD PTR [esi+0x8]
640182e9:	jmp    0x640182f5
640182eb:	or     BYTE PTR [esi+0x4],0x40
640182ef:	mov    DWORD PTR [esi],0xfffffffe
640182f5:	inc    ebx
640182f6:	cmp    ebx,0x3
640182f9:	jl     0x64018266
640182ff:	push   DWORD PTR ds:0x6403ab48
64018305:	call   DWORD PTR ds:0x640241cc
6401830b:	xor    eax,eax
6401830d:	jmp    0x64018320
6401830f:	xor    eax,eax
64018311:	inc    eax
64018312:	ret    
64018313:	mov    esp,DWORD PTR [ebp-0x18]
64018316:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401831d:	or     eax,0xffffffff
64018320:	call   0x64015f19
64018325:	ret    
64018326:	push   esi
64018327:	push   edi
64018328:	mov    esi,0x6403ab60
6401832d:	mov    edi,DWORD PTR [esi]
6401832f:	test   edi,edi
64018331:	je     0x64018364
64018333:	lea    eax,[edi+0x800]
64018339:	jmp    0x64018355
6401833b:	cmp    DWORD PTR [edi+0x8],0x0
6401833f:	je     0x6401834b
64018341:	lea    eax,[edi+0xc]
64018344:	push   eax
64018345:	call   DWORD PTR ds:0x6402415c
6401834b:	mov    eax,DWORD PTR [esi]
6401834d:	add    edi,0x40
64018350:	add    eax,0x800
64018355:	cmp    edi,eax
64018357:	jb     0x6401833b
64018359:	push   DWORD PTR [esi]
6401835b:	call   0x6401477f
64018360:	and    DWORD PTR [esi],0x0
64018363:	pop    ecx
64018364:	add    esi,0x4
64018367:	cmp    esi,0x6403ac60
6401836d:	jl     0x6401832d
6401836f:	pop    edi
64018370:	pop    esi
64018371:	ret    
64018372:	push   ebx
64018373:	xor    ebx,ebx
64018375:	cmp    DWORD PTR ds:0x6403ac6c,ebx
6401837b:	push   esi
6401837c:	push   edi
6401837d:	jne    0x64018384
6401837f:	call   0x640191f1
64018384:	mov    esi,DWORD PTR ds:0x64038e98
6401838a:	xor    edi,edi
6401838c:	cmp    esi,ebx
6401838e:	jne    0x640183a8
64018390:	or     eax,0xffffffff
64018393:	jmp    0x64018433
64018398:	cmp    al,0x3d
6401839a:	je     0x6401839d
6401839c:	inc    edi
6401839d:	push   esi
6401839e:	call   0x64015510
640183a3:	pop    ecx
640183a4:	lea    esi,[esi+eax*1+0x1]
640183a8:	mov    al,BYTE PTR [esi]
640183aa:	cmp    al,bl
640183ac:	jne    0x64018398
640183ae:	push   0x4
640183b0:	inc    edi
640183b1:	push   edi
640183b2:	call   0x64015d2f
640183b7:	mov    edi,eax
640183b9:	cmp    edi,ebx
640183bb:	pop    ecx
640183bc:	pop    ecx
640183bd:	mov    DWORD PTR ds:0x64039220,edi
640183c3:	je     0x64018390
640183c5:	mov    esi,DWORD PTR ds:0x64038e98
640183cb:	push   ebp
640183cc:	jmp    0x6401840e
640183ce:	push   esi
640183cf:	call   0x64015510
640183d4:	mov    ebp,eax
640183d6:	inc    ebp
640183d7:	cmp    BYTE PTR [esi],0x3d
640183da:	pop    ecx
640183db:	je     0x6401840c
640183dd:	push   0x1
640183df:	push   ebp
640183e0:	call   0x64015d2f
640183e5:	cmp    eax,ebx
640183e7:	pop    ecx
640183e8:	pop    ecx
640183e9:	mov    DWORD PTR [edi],eax
640183eb:	je     0x64018437
640183ed:	push   esi
640183ee:	push   ebp
640183ef:	push   eax
640183f0:	call   0x640162e1
640183f5:	add    esp,0xc
640183f8:	test   eax,eax
640183fa:	je     0x64018409
640183fc:	push   ebx
640183fd:	push   ebx
640183fe:	push   ebx
640183ff:	push   ebx
64018400:	push   ebx
64018401:	call   0x64013d16
64018406:	add    esp,0x14
64018409:	add    edi,0x4
6401840c:	add    esi,ebp
6401840e:	cmp    BYTE PTR [esi],bl
64018410:	jne    0x640183ce
64018412:	push   DWORD PTR ds:0x64038e98
64018418:	call   0x6401477f
6401841d:	mov    DWORD PTR ds:0x64038e98,ebx
64018423:	mov    DWORD PTR [edi],ebx
64018425:	mov    DWORD PTR ds:0x6403ac60,0x1
6401842f:	xor    eax,eax
64018431:	pop    ecx
64018432:	pop    ebp
64018433:	pop    edi
64018434:	pop    esi
64018435:	pop    ebx
64018436:	ret    
64018437:	push   DWORD PTR ds:0x64039220
6401843d:	call   0x6401477f
64018442:	mov    DWORD PTR ds:0x64039220,ebx
64018448:	or     eax,0xffffffff
6401844b:	jmp    0x64018431
6401844d:	push   ebp
6401844e:	mov    ebp,esp
64018450:	push   ecx
64018451:	mov    ecx,DWORD PTR [ebp+0x10]
64018454:	push   ebx
64018455:	xor    eax,eax
64018457:	cmp    DWORD PTR [ebp+0x8],eax
6401845a:	push   esi
6401845b:	mov    DWORD PTR [edi],eax
6401845d:	mov    esi,edx
6401845f:	mov    edx,DWORD PTR [ebp+0xc]
64018462:	mov    DWORD PTR [ecx],0x1
64018468:	je     0x64018473
6401846a:	mov    ebx,DWORD PTR [ebp+0x8]
6401846d:	add    DWORD PTR [ebp+0x8],0x4
64018471:	mov    DWORD PTR [ebx],edx
64018473:	mov    DWORD PTR [ebp-0x4],eax
64018476:	cmp    BYTE PTR [esi],0x22
64018479:	jne    0x6401848b
6401847b:	xor    eax,eax
6401847d:	cmp    DWORD PTR [ebp-0x4],eax
64018480:	mov    bl,0x22
64018482:	sete   al
64018485:	inc    esi
64018486:	mov    DWORD PTR [ebp-0x4],eax
64018489:	jmp    0x640184c7
6401848b:	inc    DWORD PTR [edi]
6401848d:	test   edx,edx
6401848f:	je     0x64018499
64018491:	mov    al,BYTE PTR [esi]
64018493:	mov    BYTE PTR [edx],al
64018495:	inc    edx
64018496:	mov    DWORD PTR [ebp+0xc],edx
64018499:	mov    bl,BYTE PTR [esi]
6401849b:	movzx  eax,bl
6401849e:	push   eax
6401849f:	inc    esi
640184a0:	call   0x6401d79c
640184a5:	test   eax,eax
640184a7:	pop    ecx
640184a8:	je     0x640184bd
640184aa:	inc    DWORD PTR [edi]
640184ac:	cmp    DWORD PTR [ebp+0xc],0x0
640184b0:	je     0x640184bc
640184b2:	mov    ecx,DWORD PTR [ebp+0xc]
640184b5:	mov    al,BYTE PTR [esi]
640184b7:	inc    DWORD PTR [ebp+0xc]
640184ba:	mov    BYTE PTR [ecx],al
640184bc:	inc    esi
640184bd:	test   bl,bl
640184bf:	mov    edx,DWORD PTR [ebp+0xc]
640184c2:	mov    ecx,DWORD PTR [ebp+0x10]
640184c5:	je     0x640184f9
640184c7:	cmp    DWORD PTR [ebp-0x4],0x0
640184cb:	jne    0x64018476
640184cd:	cmp    bl,0x20
640184d0:	je     0x640184d7
640184d2:	cmp    bl,0x9
640184d5:	jne    0x64018476
640184d7:	test   edx,edx
640184d9:	je     0x640184df
640184db:	mov    BYTE PTR [edx-0x1],0x0
640184df:	and    DWORD PTR [ebp-0x4],0x0
640184e3:	cmp    BYTE PTR [esi],0x0
640184e6:	je     0x640185d5
640184ec:	mov    al,BYTE PTR [esi]
640184ee:	cmp    al,0x20
640184f0:	je     0x640184f6
640184f2:	cmp    al,0x9
640184f4:	jne    0x640184fc
640184f6:	inc    esi
640184f7:	jmp    0x640184ec
640184f9:	dec    esi
640184fa:	jmp    0x640184df
640184fc:	cmp    BYTE PTR [esi],0x0
640184ff:	je     0x640185d5
64018505:	cmp    DWORD PTR [ebp+0x8],0x0
64018509:	je     0x64018514
6401850b:	mov    eax,DWORD PTR [ebp+0x8]
6401850e:	add    DWORD PTR [ebp+0x8],0x4
64018512:	mov    DWORD PTR [eax],edx
64018514:	inc    DWORD PTR [ecx]
64018516:	xor    ebx,ebx
64018518:	inc    ebx
64018519:	xor    ecx,ecx
6401851b:	jmp    0x6401851f
6401851d:	inc    esi
6401851e:	inc    ecx
6401851f:	cmp    BYTE PTR [esi],0x5c
64018522:	je     0x6401851d
64018524:	cmp    BYTE PTR [esi],0x22
64018527:	jne    0x6401854f
64018529:	test   cl,0x1
6401852c:	jne    0x6401854d
6401852e:	cmp    DWORD PTR [ebp-0x4],0x0
64018532:	je     0x64018540
64018534:	lea    eax,[esi+0x1]
64018537:	cmp    BYTE PTR [eax],0x22
6401853a:	jne    0x64018540
6401853c:	mov    esi,eax
6401853e:	jmp    0x6401854d
64018540:	xor    eax,eax
64018542:	xor    ebx,ebx
64018544:	cmp    DWORD PTR [ebp-0x4],eax
64018547:	sete   al
6401854a:	mov    DWORD PTR [ebp-0x4],eax
6401854d:	shr    ecx,1
6401854f:	test   ecx,ecx
64018551:	je     0x64018565
64018553:	dec    ecx
64018554:	test   edx,edx
64018556:	je     0x6401855c
64018558:	mov    BYTE PTR [edx],0x5c
6401855b:	inc    edx
6401855c:	inc    DWORD PTR [edi]
6401855e:	test   ecx,ecx
64018560:	jne    0x64018553
64018562:	mov    DWORD PTR [ebp+0xc],edx
64018565:	mov    al,BYTE PTR [esi]
64018567:	test   al,al
64018569:	je     0x640185c0
6401856b:	cmp    DWORD PTR [ebp-0x4],0x0
6401856f:	jne    0x64018579
64018571:	cmp    al,0x20
64018573:	je     0x640185c0
64018575:	cmp    al,0x9
64018577:	je     0x640185c0
64018579:	test   ebx,ebx
6401857b:	je     0x640185ba
6401857d:	test   edx,edx
6401857f:	movsx  eax,al
64018582:	push   eax
64018583:	je     0x640185a8
64018585:	call   0x6401d79c
6401858a:	test   eax,eax
6401858c:	pop    ecx
6401858d:	je     0x6401859c
6401858f:	mov    al,BYTE PTR [esi]
64018591:	mov    ecx,DWORD PTR [ebp+0xc]
64018594:	inc    DWORD PTR [ebp+0xc]
64018597:	mov    BYTE PTR [ecx],al
64018599:	inc    esi
6401859a:	inc    DWORD PTR [edi]
6401859c:	mov    ecx,DWORD PTR [ebp+0xc]
6401859f:	mov    al,BYTE PTR [esi]
640185a1:	inc    DWORD PTR [ebp+0xc]
640185a4:	mov    BYTE PTR [ecx],al
640185a6:	jmp    0x640185b5
640185a8:	call   0x6401d79c
640185ad:	test   eax,eax
640185af:	pop    ecx
640185b0:	je     0x640185b5
640185b2:	inc    esi
640185b3:	inc    DWORD PTR [edi]
640185b5:	inc    DWORD PTR [edi]
640185b7:	mov    edx,DWORD PTR [ebp+0xc]
640185ba:	inc    esi
640185bb:	jmp    0x64018516
640185c0:	test   edx,edx
640185c2:	je     0x640185cb
640185c4:	mov    BYTE PTR [edx],0x0
640185c7:	inc    edx
640185c8:	mov    DWORD PTR [ebp+0xc],edx
640185cb:	inc    DWORD PTR [edi]
640185cd:	mov    ecx,DWORD PTR [ebp+0x10]
640185d0:	jmp    0x640184e3
640185d5:	mov    eax,DWORD PTR [ebp+0x8]
640185d8:	test   eax,eax
640185da:	pop    esi
640185db:	pop    ebx
640185dc:	je     0x640185e1
640185de:	and    DWORD PTR [eax],0x0
640185e1:	inc    DWORD PTR [ecx]
640185e3:	leave  
640185e4:	ret    
640185e5:	push   ebp
640185e6:	mov    ebp,esp
640185e8:	sub    esp,0xc
640185eb:	push   ebx
640185ec:	xor    ebx,ebx
640185ee:	cmp    DWORD PTR ds:0x6403ac6c,ebx
640185f4:	push   esi
640185f5:	push   edi
640185f6:	jne    0x640185fd
640185f8:	call   0x640191f1
640185fd:	push   0x104
64018602:	mov    esi,0x64039248
64018607:	push   esi
64018608:	push   ebx
64018609:	mov    BYTE PTR ds:0x6403934c,bl
6401860f:	call   DWORD PTR ds:0x64024150
64018615:	mov    eax,ds:0x6403ac78
6401861a:	cmp    eax,ebx
6401861c:	mov    DWORD PTR ds:0x64039230,esi
64018622:	je     0x6401862b
64018624:	cmp    BYTE PTR [eax],bl
64018626:	mov    DWORD PTR [ebp-0x4],eax
64018629:	jne    0x6401862e
6401862b:	mov    DWORD PTR [ebp-0x4],esi
6401862e:	mov    edx,DWORD PTR [ebp-0x4]
64018631:	lea    eax,[ebp-0x8]
64018634:	push   eax
64018635:	push   ebx
64018636:	push   ebx
64018637:	lea    edi,[ebp-0xc]
6401863a:	call   0x6401844d
6401863f:	mov    eax,DWORD PTR [ebp-0x8]
64018642:	add    esp,0xc
64018645:	cmp    eax,0x3fffffff
6401864a:	jae    0x64018696
6401864c:	mov    ecx,DWORD PTR [ebp-0xc]
6401864f:	cmp    ecx,0xffffffff
64018652:	jae    0x64018696
64018654:	mov    edi,eax
64018656:	shl    edi,0x2
64018659:	lea    eax,[edi+ecx*1]
6401865c:	cmp    eax,ecx
6401865e:	jb     0x64018696
64018660:	push   eax
64018661:	call   0x64015cef
64018666:	mov    esi,eax
64018668:	cmp    esi,ebx
6401866a:	pop    ecx
6401866b:	je     0x64018696
6401866d:	mov    edx,DWORD PTR [ebp-0x4]
64018670:	lea    eax,[ebp-0x8]
64018673:	push   eax
64018674:	add    edi,esi
64018676:	push   edi
64018677:	push   esi
64018678:	lea    edi,[ebp-0xc]
6401867b:	call   0x6401844d
64018680:	mov    eax,DWORD PTR [ebp-0x8]
64018683:	add    esp,0xc
64018686:	dec    eax
64018687:	mov    ds:0x64039214,eax
6401868c:	mov    DWORD PTR ds:0x64039218,esi
64018692:	xor    eax,eax
64018694:	jmp    0x64018699
64018696:	or     eax,0xffffffff
64018699:	pop    edi
6401869a:	pop    esi
6401869b:	pop    ebx
6401869c:	leave  
6401869d:	ret    
6401869e:	push   ecx
6401869f:	push   ecx
640186a0:	mov    eax,ds:0x64039350
640186a5:	push   ebx
640186a6:	push   ebp
640186a7:	push   esi
640186a8:	push   edi
640186a9:	mov    edi,DWORD PTR ds:0x64024114
640186af:	xor    ebx,ebx
640186b1:	xor    esi,esi
640186b3:	cmp    eax,ebx
640186b5:	push   0x2
640186b7:	pop    ebp
640186b8:	jne    0x640186e7
640186ba:	call   edi
640186bc:	mov    esi,eax
640186be:	cmp    esi,ebx
640186c0:	je     0x640186ce
640186c2:	mov    DWORD PTR ds:0x64039350,0x1
640186cc:	jmp    0x640186f0
640186ce:	call   DWORD PTR ds:0x64024068
640186d4:	cmp    eax,0x78
640186d7:	jne    0x640186e2
640186d9:	mov    eax,ebp
640186db:	mov    ds:0x64039350,eax
640186e0:	jmp    0x640186e7
640186e2:	mov    eax,ds:0x64039350
640186e7:	cmp    eax,0x1
640186ea:	jne    0x64018774
640186f0:	cmp    esi,ebx
640186f2:	jne    0x64018703
640186f4:	call   edi
640186f6:	mov    esi,eax
640186f8:	cmp    esi,ebx
640186fa:	jne    0x64018703
640186fc:	xor    eax,eax
640186fe:	jmp    0x640187cc
64018703:	cmp    WORD PTR [esi],bx
64018706:	mov    eax,esi
64018708:	je     0x64018718
6401870a:	add    eax,ebp
6401870c:	cmp    WORD PTR [eax],bx
6401870f:	jne    0x6401870a
64018711:	add    eax,ebp
64018713:	cmp    WORD PTR [eax],bx
64018716:	jne    0x6401870a
64018718:	mov    edi,DWORD PTR ds:0x64024010
6401871e:	push   ebx
6401871f:	push   ebx
64018720:	push   ebx
64018721:	sub    eax,esi
64018723:	push   ebx
64018724:	sar    eax,1
64018726:	inc    eax
64018727:	push   eax
64018728:	push   esi
64018729:	push   ebx
6401872a:	push   ebx
6401872b:	mov    DWORD PTR [esp+0x34],eax
6401872f:	call   edi
64018731:	mov    ebp,eax
64018733:	cmp    ebp,ebx
64018735:	je     0x64018769
64018737:	push   ebp
64018738:	call   0x64015cef
6401873d:	cmp    eax,ebx
6401873f:	pop    ecx
64018740:	mov    DWORD PTR [esp+0x10],eax
64018744:	je     0x64018769
64018746:	push   ebx
64018747:	push   ebx
64018748:	push   ebp
64018749:	push   eax
6401874a:	push   DWORD PTR [esp+0x24]
6401874e:	push   esi
6401874f:	push   ebx
64018750:	push   ebx
64018751:	call   edi
64018753:	test   eax,eax
64018755:	jne    0x64018765
64018757:	push   DWORD PTR [esp+0x10]
6401875b:	call   0x6401477f
64018760:	pop    ecx
64018761:	mov    DWORD PTR [esp+0x10],ebx
64018765:	mov    ebx,DWORD PTR [esp+0x10]
64018769:	push   esi
6401876a:	call   DWORD PTR ds:0x640240fc
64018770:	mov    eax,ebx
64018772:	jmp    0x640187cc
64018774:	cmp    eax,ebp
64018776:	je     0x6401877c
64018778:	cmp    eax,ebx
6401877a:	jne    0x640186fc
6401877c:	call   DWORD PTR ds:0x64024148
64018782:	mov    esi,eax
64018784:	cmp    esi,ebx
64018786:	je     0x640186fc
6401878c:	cmp    BYTE PTR [esi],bl
6401878e:	je     0x6401879a
64018790:	inc    eax
64018791:	cmp    BYTE PTR [eax],bl
64018793:	jne    0x64018790
64018795:	inc    eax
64018796:	cmp    BYTE PTR [eax],bl
64018798:	jne    0x64018790
6401879a:	sub    eax,esi
6401879c:	inc    eax
6401879d:	mov    ebp,eax
6401879f:	push   ebp
640187a0:	call   0x64015cef
640187a5:	mov    edi,eax
640187a7:	cmp    edi,ebx
640187a9:	pop    ecx
640187aa:	jne    0x640187b8
640187ac:	push   esi
640187ad:	call   DWORD PTR ds:0x6402414c
640187b3:	jmp    0x640186fc
640187b8:	push   ebp
640187b9:	push   esi
640187ba:	push   edi
640187bb:	call   0x640151a0
640187c0:	add    esp,0xc
640187c3:	push   esi
640187c4:	call   DWORD PTR ds:0x6402414c
640187ca:	mov    eax,edi
640187cc:	pop    edi
640187cd:	pop    esi
640187ce:	pop    ebp
640187cf:	pop    ebx
640187d0:	pop    ecx
640187d1:	pop    ecx
640187d2:	ret    
640187d3:	push   esi
640187d4:	push   edi
640187d5:	mov    eax,0x6402b588
640187da:	mov    edi,0x6402b588
640187df:	cmp    eax,edi
640187e1:	mov    esi,eax
640187e3:	jae    0x640187f4
640187e5:	mov    eax,DWORD PTR [esi]
640187e7:	test   eax,eax
640187e9:	je     0x640187ed
640187eb:	call   eax
640187ed:	add    esi,0x4
640187f0:	cmp    esi,edi
640187f2:	jb     0x640187e5
640187f4:	pop    edi
640187f5:	pop    esi
640187f6:	ret    
640187f7:	push   esi
640187f8:	push   edi
640187f9:	mov    eax,0x6402b590
640187fe:	mov    edi,0x6402b590
64018803:	cmp    eax,edi
64018805:	mov    esi,eax
64018807:	jae    0x64018818
64018809:	mov    eax,DWORD PTR [esi]
6401880b:	test   eax,eax
6401880d:	je     0x64018811
6401880f:	call   eax
64018811:	add    esi,0x4
64018814:	cmp    esi,edi
64018816:	jb     0x64018809
64018818:	pop    edi
64018819:	pop    esi
6401881a:	ret    
6401881b:	push   ebp
6401881c:	mov    ebp,esp
6401881e:	push   ecx
6401881f:	push   ecx
64018820:	push   esi
64018821:	lea    eax,[ebp-0x4]
64018824:	xor    esi,esi
64018826:	push   eax
64018827:	mov    DWORD PTR [ebp-0x4],esi
6401882a:	mov    DWORD PTR [ebp-0x8],esi
6401882d:	call   0x64017e7f
64018832:	test   eax,eax
64018834:	pop    ecx
64018835:	je     0x64018844
64018837:	push   esi
64018838:	push   esi
64018839:	push   esi
6401883a:	push   esi
6401883b:	push   esi
6401883c:	call   0x64013d16
64018841:	add    esp,0x14
64018844:	lea    eax,[ebp-0x8]
64018847:	push   eax
64018848:	call   0x64017eb6
6401884d:	test   eax,eax
6401884f:	pop    ecx
64018850:	je     0x6401885f
64018852:	push   esi
64018853:	push   esi
64018854:	push   esi
64018855:	push   esi
64018856:	push   esi
64018857:	call   0x64013d16
6401885c:	add    esp,0x14
6401885f:	cmp    DWORD PTR [ebp-0x4],0x2
64018863:	pop    esi
64018864:	jne    0x64018871
64018866:	cmp    DWORD PTR [ebp-0x8],0x5
6401886a:	jb     0x64018871
6401886c:	xor    eax,eax
6401886e:	inc    eax
6401886f:	leave  
64018870:	ret    
64018871:	push   0x3
64018873:	pop    eax
64018874:	leave  
64018875:	ret    
64018876:	xor    eax,eax
64018878:	cmp    DWORD PTR [esp+0x4],eax
6401887c:	push   0x0
6401887e:	sete   al
64018881:	push   0x1000
64018886:	push   eax
64018887:	call   DWORD PTR ds:0x64024118
6401888d:	test   eax,eax
6401888f:	mov    ds:0x64039354,eax
64018894:	jne    0x64018899
64018896:	xor    eax,eax
64018898:	ret    
64018899:	call   0x6401881b
6401889e:	cmp    eax,0x3
640188a1:	mov    ds:0x6403ab44,eax
640188a6:	jne    0x640188cc
640188a8:	push   0x3f8
640188ad:	call   0x6401b2eb
640188b2:	test   eax,eax
640188b4:	pop    ecx
640188b5:	jne    0x640188cc
640188b7:	push   DWORD PTR ds:0x64039354
640188bd:	call   DWORD PTR ds:0x6402417c
640188c3:	and    DWORD PTR ds:0x64039354,0x0
640188ca:	jmp    0x64018896
640188cc:	xor    eax,eax
640188ce:	inc    eax
640188cf:	ret    
640188d0:	push   ebp
640188d1:	xor    ebp,ebp
640188d3:	cmp    DWORD PTR ds:0x6403ab44,0x3
640188da:	jne    0x64018930
640188dc:	push   ebx
640188dd:	mov    ebx,DWORD PTR ds:0x64024184
640188e3:	push   edi
640188e4:	xor    edi,edi
640188e6:	cmp    DWORD PTR ds:0x64039b1c,ebp
640188ec:	jle    0x6401891f
640188ee:	push   esi
640188ef:	mov    esi,DWORD PTR ds:0x64039b20
640188f5:	add    esi,0x10
640188f8:	push   0x8000
640188fd:	push   ebp
640188fe:	push   DWORD PTR [esi-0x4]
64018901:	call   DWORD PTR ds:0x64024128
64018907:	push   DWORD PTR [esi]
64018909:	push   ebp
6401890a:	push   DWORD PTR ds:0x64039354
64018910:	call   ebx
64018912:	add    esi,0x14
64018915:	inc    edi
64018916:	cmp    edi,DWORD PTR ds:0x64039b1c
6401891c:	jl     0x640188f8
6401891e:	pop    esi
6401891f:	push   DWORD PTR ds:0x64039b20
64018925:	push   ebp
64018926:	push   DWORD PTR ds:0x64039354
6401892c:	call   ebx
6401892e:	pop    edi
6401892f:	pop    ebx
64018930:	push   DWORD PTR ds:0x64039354
64018936:	call   DWORD PTR ds:0x6402417c
6401893c:	mov    DWORD PTR ds:0x64039354,ebp
64018942:	pop    ebp
64018943:	ret    
64018944:	ret    
64018945:	push   ebp
64018946:	mov    ebp,esp
64018948:	push   ecx
64018949:	push   ecx
6401894a:	push   esi
6401894b:	call   0x64017773
64018950:	mov    esi,eax
64018952:	test   esi,esi
64018954:	je     0x64018aa0
6401895a:	mov    edx,DWORD PTR [esi+0x5c]
6401895d:	mov    eax,ds:0x640379e4
64018962:	push   edi
64018963:	mov    edi,DWORD PTR [ebp+0x8]
64018966:	mov    ecx,edx
64018968:	push   ebx
64018969:	cmp    DWORD PTR [ecx],edi
6401896b:	je     0x6401897b
6401896d:	mov    ebx,eax
6401896f:	imul   ebx,ebx,0xc
64018972:	add    ecx,0xc
64018975:	add    ebx,edx
64018977:	cmp    ecx,ebx
64018979:	jb     0x64018969
6401897b:	imul   eax,eax,0xc
6401897e:	add    eax,edx
64018980:	cmp    ecx,eax
64018982:	jae    0x6401898c
64018984:	cmp    DWORD PTR [ecx],edi
64018986:	jne    0x6401898c
64018988:	mov    eax,ecx
6401898a:	jmp    0x6401898e
6401898c:	xor    eax,eax
6401898e:	test   eax,eax
64018990:	je     0x6401899c
64018992:	mov    ebx,DWORD PTR [eax+0x8]
64018995:	test   ebx,ebx
64018997:	mov    DWORD PTR [ebp-0x4],ebx
6401899a:	jne    0x640189a3
6401899c:	xor    eax,eax
6401899e:	jmp    0x64018a9e
640189a3:	cmp    ebx,0x5
640189a6:	jne    0x640189b4
640189a8:	and    DWORD PTR [eax+0x8],0x0
640189ac:	xor    eax,eax
640189ae:	inc    eax
640189af:	jmp    0x64018a9e
640189b4:	cmp    ebx,0x1
640189b7:	je     0x64018a9b
640189bd:	mov    ecx,DWORD PTR [esi+0x60]
640189c0:	mov    DWORD PTR [ebp-0x8],ecx
640189c3:	mov    ecx,DWORD PTR [ebp+0xc]
640189c6:	mov    DWORD PTR [esi+0x60],ecx
640189c9:	mov    ecx,DWORD PTR [eax+0x4]
640189cc:	cmp    ecx,0x8
640189cf:	jne    0x64018a8d
640189d5:	mov    ecx,DWORD PTR ds:0x640379d8
640189db:	mov    edi,DWORD PTR ds:0x640379dc
640189e1:	mov    edx,ecx
640189e3:	add    edi,ecx
640189e5:	cmp    edx,edi
640189e7:	jge    0x64018a0d
640189e9:	imul   ecx,ecx,0xc
640189ec:	mov    edi,DWORD PTR [esi+0x5c]
640189ef:	and    DWORD PTR [ecx+edi*1+0x8],0x0
640189f4:	mov    edi,DWORD PTR ds:0x640379d8
640189fa:	mov    ebx,DWORD PTR ds:0x640379dc
64018a00:	inc    edx
64018a01:	add    ebx,edi
64018a03:	add    ecx,0xc
64018a06:	cmp    edx,ebx
64018a08:	jl     0x640189ec
64018a0a:	mov    ebx,DWORD PTR [ebp-0x4]
64018a0d:	mov    eax,DWORD PTR [eax]
64018a0f:	cmp    eax,0xc000008e
64018a14:	mov    edi,DWORD PTR [esi+0x64]
64018a17:	jne    0x64018a22
64018a19:	mov    DWORD PTR [esi+0x64],0x83
64018a20:	jmp    0x64018a80
64018a22:	cmp    eax,0xc0000090
64018a27:	jne    0x64018a32
64018a29:	mov    DWORD PTR [esi+0x64],0x81
64018a30:	jmp    0x64018a80
64018a32:	cmp    eax,0xc0000091
64018a37:	jne    0x64018a42
64018a39:	mov    DWORD PTR [esi+0x64],0x84
64018a40:	jmp    0x64018a80
64018a42:	cmp    eax,0xc0000093
64018a47:	jne    0x64018a52
64018a49:	mov    DWORD PTR [esi+0x64],0x85
64018a50:	jmp    0x64018a80
64018a52:	cmp    eax,0xc000008d
64018a57:	jne    0x64018a62
64018a59:	mov    DWORD PTR [esi+0x64],0x82
64018a60:	jmp    0x64018a80
64018a62:	cmp    eax,0xc000008f
64018a67:	jne    0x64018a72
64018a69:	mov    DWORD PTR [esi+0x64],0x86
64018a70:	jmp    0x64018a80
64018a72:	cmp    eax,0xc0000092
64018a77:	jne    0x64018a80
64018a79:	mov    DWORD PTR [esi+0x64],0x8a
64018a80:	push   DWORD PTR [esi+0x64]
64018a83:	push   0x8
64018a85:	call   ebx
64018a87:	pop    ecx
64018a88:	mov    DWORD PTR [esi+0x64],edi
64018a8b:	jmp    0x64018a94
64018a8d:	and    DWORD PTR [eax+0x8],0x0
64018a91:	push   ecx
64018a92:	call   ebx
64018a94:	mov    eax,DWORD PTR [ebp-0x8]
64018a97:	pop    ecx
64018a98:	mov    DWORD PTR [esi+0x60],eax
64018a9b:	or     eax,0xffffffff
64018a9e:	pop    ebx
64018a9f:	pop    edi
64018aa0:	pop    esi
64018aa1:	leave  
64018aa2:	ret    
64018aa3:	mov    eax,0xe06d7363
64018aa8:	cmp    DWORD PTR [esp+0x4],eax
64018aac:	jne    0x64018abb
64018aae:	push   DWORD PTR [esp+0x8]
64018ab2:	push   eax
64018ab3:	call   0x64018945
64018ab8:	pop    ecx
64018ab9:	pop    ecx
64018aba:	ret    
64018abb:	xor    eax,eax
64018abd:	ret    
64018abe:	push   ebp
64018abf:	mov    ebp,esp
64018ac1:	sub    esp,0x10
64018ac4:	mov    eax,ds:0x64037644
64018ac9:	and    DWORD PTR [ebp-0x8],0x0
64018acd:	and    DWORD PTR [ebp-0x4],0x0
64018ad1:	push   ebx
64018ad2:	push   edi
64018ad3:	mov    edi,0xbb40e64e
64018ad8:	cmp    eax,edi
64018ada:	mov    ebx,0xffff0000
64018adf:	je     0x64018aee
64018ae1:	test   ebx,eax
64018ae3:	je     0x64018aee
64018ae5:	not    eax
64018ae7:	mov    ds:0x64037648,eax
64018aec:	jmp    0x64018b4e
64018aee:	push   esi
64018aef:	lea    eax,[ebp-0x8]
64018af2:	push   eax
64018af3:	call   DWORD PTR ds:0x64024130
64018af9:	mov    esi,DWORD PTR [ebp-0x4]
64018afc:	xor    esi,DWORD PTR [ebp-0x8]
64018aff:	call   DWORD PTR ds:0x64024038
64018b05:	xor    esi,eax
64018b07:	call   DWORD PTR ds:0x640240bc
64018b0d:	xor    esi,eax
64018b0f:	call   DWORD PTR ds:0x640240f8
64018b15:	xor    esi,eax
64018b17:	lea    eax,[ebp-0x10]
64018b1a:	push   eax
64018b1b:	call   DWORD PTR ds:0x6402412c
64018b21:	mov    eax,DWORD PTR [ebp-0xc]
64018b24:	xor    eax,DWORD PTR [ebp-0x10]
64018b27:	xor    esi,eax
64018b29:	cmp    esi,edi
64018b2b:	jne    0x64018b34
64018b2d:	mov    esi,0xbb40e64f
64018b32:	jmp    0x64018b3f
64018b34:	test   ebx,esi
64018b36:	jne    0x64018b3f
64018b38:	mov    eax,esi
64018b3a:	shl    eax,0x10
64018b3d:	or     esi,eax
64018b3f:	mov    DWORD PTR ds:0x64037644,esi
64018b45:	not    esi
64018b47:	mov    DWORD PTR ds:0x64037648,esi
64018b4d:	pop    esi
64018b4e:	pop    edi
64018b4f:	pop    ebx
64018b50:	leave  
64018b51:	ret    
64018b52:	sub    eax,0x3a4
64018b57:	je     0x64018b7b
64018b59:	sub    eax,0x4
64018b5c:	je     0x64018b75
64018b5e:	sub    eax,0xd
64018b61:	je     0x64018b6f
64018b63:	dec    eax
64018b64:	je     0x64018b69
64018b66:	xor    eax,eax
64018b68:	ret    
64018b69:	mov    eax,0x404
64018b6e:	ret    
64018b6f:	mov    eax,0x412
64018b74:	ret    
64018b75:	mov    eax,0x804
64018b7a:	ret    
64018b7b:	mov    eax,0x411
64018b80:	ret    
64018b81:	push   ebx
64018b82:	push   ebp
64018b83:	push   esi
64018b84:	push   edi
64018b85:	mov    ebp,0x101
64018b8a:	mov    esi,eax
64018b8c:	push   ebp
64018b8d:	xor    edi,edi
64018b8f:	lea    ebx,[esi+0x1c]
64018b92:	push   edi
64018b93:	push   ebx
64018b94:	call   0x64015120
64018b99:	mov    DWORD PTR [esi+0x4],edi
64018b9c:	mov    DWORD PTR [esi+0x8],edi
64018b9f:	mov    DWORD PTR [esi+0xc],edi
64018ba2:	xor    eax,eax
64018ba4:	lea    edi,[esi+0x10]
64018ba7:	stos   DWORD PTR es:[edi],eax
64018ba8:	stos   DWORD PTR es:[edi],eax
64018ba9:	stos   DWORD PTR es:[edi],eax
64018baa:	mov    eax,0x640379e8
64018baf:	add    esp,0xc
64018bb2:	sub    eax,esi
64018bb4:	mov    cl,BYTE PTR [eax+ebx*1]
64018bb7:	mov    BYTE PTR [ebx],cl
64018bb9:	inc    ebx
64018bba:	dec    ebp
64018bbb:	jne    0x64018bb4
64018bbd:	lea    ecx,[esi+0x11d]
64018bc3:	mov    esi,0x100
64018bc8:	mov    dl,BYTE PTR [ecx+eax*1]
64018bcb:	mov    BYTE PTR [ecx],dl
64018bcd:	inc    ecx
64018bce:	dec    esi
64018bcf:	jne    0x64018bc8
64018bd1:	pop    edi
64018bd2:	pop    esi
64018bd3:	pop    ebp
64018bd4:	pop    ebx
64018bd5:	ret    
64018bd6:	push   ebp
64018bd7:	lea    ebp,[esp-0x49c]
64018bde:	sub    esp,0x51c
64018be4:	mov    eax,ds:0x64037644
64018be9:	xor    eax,ebp
64018beb:	mov    DWORD PTR [ebp+0x498],eax
64018bf1:	push   ebx
64018bf2:	push   edi
64018bf3:	lea    eax,[ebp-0x7c]
64018bf6:	push   eax
64018bf7:	push   DWORD PTR [esi+0x4]
64018bfa:	call   DWORD PTR ds:0x640241b8
64018c00:	test   eax,eax
64018c02:	mov    edi,0x100
64018c07:	je     0x64018cfc
64018c0d:	xor    eax,eax
64018c0f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64018c16:	inc    eax
64018c17:	cmp    eax,edi
64018c19:	jb     0x64018c0f
64018c1b:	mov    al,BYTE PTR [ebp-0x76]
64018c1e:	test   al,al
64018c20:	mov    BYTE PTR [ebp+0x398],0x20
64018c27:	je     0x64018c54
64018c29:	lea    ebx,[ebp-0x75]
64018c2c:	movzx  ecx,al
64018c2f:	movzx  eax,BYTE PTR [ebx]
64018c32:	cmp    ecx,eax
64018c34:	ja     0x64018c4c
64018c36:	sub    eax,ecx
64018c38:	inc    eax
64018c39:	push   eax
64018c3a:	lea    edx,[ebp+ecx*1+0x398]
64018c41:	push   0x20
64018c43:	push   edx
64018c44:	call   0x64015120
64018c49:	add    esp,0xc
64018c4c:	inc    ebx
64018c4d:	mov    al,BYTE PTR [ebx]
64018c4f:	inc    ebx
64018c50:	test   al,al
64018c52:	jne    0x64018c2c
64018c54:	push   0x0
64018c56:	push   DWORD PTR [esi+0xc]
64018c59:	lea    eax,[ebp-0x68]
64018c5c:	push   DWORD PTR [esi+0x4]
64018c5f:	push   eax
64018c60:	push   edi
64018c61:	lea    eax,[ebp+0x398]
64018c67:	push   eax
64018c68:	push   0x1
64018c6a:	push   0x0
64018c6c:	call   0x6401df91
64018c71:	xor    ebx,ebx
64018c73:	push   ebx
64018c74:	push   DWORD PTR [esi+0x4]
64018c77:	lea    eax,[ebp+0x298]
64018c7d:	push   edi
64018c7e:	push   eax
64018c7f:	push   edi
64018c80:	lea    eax,[ebp+0x398]
64018c86:	push   eax
64018c87:	push   edi
64018c88:	push   DWORD PTR [esi+0xc]
64018c8b:	push   ebx
64018c8c:	call   0x64015cac
64018c91:	add    esp,0x44
64018c94:	push   ebx
64018c95:	push   DWORD PTR [esi+0x4]
64018c98:	lea    eax,[ebp+0x198]
64018c9e:	push   edi
64018c9f:	push   eax
64018ca0:	push   edi
64018ca1:	lea    eax,[ebp+0x398]
64018ca7:	push   eax
64018ca8:	push   0x200
64018cad:	push   DWORD PTR [esi+0xc]
64018cb0:	push   ebx
64018cb1:	call   0x64015cac
64018cb6:	add    esp,0x24
64018cb9:	xor    eax,eax
64018cbb:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64018cc0:	test   cl,0x1
64018cc3:	je     0x64018cd3
64018cc5:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64018cca:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64018cd1:	jmp    0x64018ce4
64018cd3:	test   cl,0x2
64018cd6:	je     0x64018ced
64018cd8:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64018cdd:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64018ce4:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64018ceb:	jmp    0x64018cf5
64018ced:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64018cf5:	inc    eax
64018cf6:	cmp    eax,edi
64018cf8:	jb     0x64018cbb
64018cfa:	jmp    0x64018d49
64018cfc:	lea    eax,[esi+0x11d]
64018d02:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64018d09:	xor    ecx,ecx
64018d0b:	sub    DWORD PTR [ebp-0x80],eax
64018d0e:	mov    edx,DWORD PTR [ebp-0x80]
64018d11:	lea    eax,[esi+ecx*1+0x11d]
64018d18:	add    edx,eax
64018d1a:	lea    ebx,[edx+0x20]
64018d1d:	cmp    ebx,0x19
64018d20:	ja     0x64018d2e
64018d22:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64018d27:	mov    dl,cl
64018d29:	add    dl,0x20
64018d2c:	jmp    0x64018d3d
64018d2e:	cmp    edx,0x19
64018d31:	ja     0x64018d41
64018d33:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64018d38:	mov    dl,cl
64018d3a:	sub    dl,0x20
64018d3d:	mov    BYTE PTR [eax],dl
64018d3f:	jmp    0x64018d44
64018d41:	mov    BYTE PTR [eax],0x0
64018d44:	inc    ecx
64018d45:	cmp    ecx,edi
64018d47:	jb     0x64018d0e
64018d49:	mov    ecx,DWORD PTR [ebp+0x498]
64018d4f:	pop    edi
64018d50:	xor    ecx,ebp
64018d52:	pop    ebx
64018d53:	call   0x64013cc6
64018d58:	add    ebp,0x49c
64018d5e:	leave  
64018d5f:	ret    
64018d60:	push   0xc
64018d62:	push   0x6402ba00
64018d67:	call   0x64015ed4
64018d6c:	call   0x640177ea
64018d71:	mov    edi,eax
64018d73:	mov    eax,ds:0x64037f08
64018d78:	test   DWORD PTR [edi+0x70],eax
64018d7b:	je     0x64018d9a
64018d7d:	cmp    DWORD PTR [edi+0x6c],0x0
64018d81:	je     0x64018d9a
64018d83:	mov    esi,DWORD PTR [edi+0x68]
64018d86:	test   esi,esi
64018d88:	jne    0x64018d92
64018d8a:	push   0x20
64018d8c:	call   0x64017dd6
64018d91:	pop    ecx
64018d92:	mov    eax,esi
64018d94:	call   0x64015f19
64018d99:	ret    
64018d9a:	push   0xd
64018d9c:	call   0x6401b2ba
64018da1:	pop    ecx
64018da2:	and    DWORD PTR [ebp-0x4],0x0
64018da6:	mov    esi,DWORD PTR [edi+0x68]
64018da9:	mov    DWORD PTR [ebp-0x1c],esi
64018dac:	cmp    esi,DWORD PTR ds:0x64037e10
64018db2:	je     0x64018dea
64018db4:	test   esi,esi
64018db6:	je     0x64018dd2
64018db8:	push   esi
64018db9:	call   DWORD PTR ds:0x64024078
64018dbf:	test   eax,eax
64018dc1:	jne    0x64018dd2
64018dc3:	cmp    esi,0x640379e8
64018dc9:	je     0x64018dd2
64018dcb:	push   esi
64018dcc:	call   0x6401477f
64018dd1:	pop    ecx
64018dd2:	mov    eax,ds:0x64037e10
64018dd7:	mov    DWORD PTR [edi+0x68],eax
64018dda:	mov    esi,DWORD PTR ds:0x64037e10
64018de0:	mov    DWORD PTR [ebp-0x1c],esi
64018de3:	push   esi
64018de4:	call   DWORD PTR ds:0x6402402c
64018dea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018df1:	call   0x64018dfb
64018df6:	jmp    0x64018d86
64018df8:	mov    esi,DWORD PTR [ebp-0x1c]
64018dfb:	push   0xd
64018dfd:	call   0x6401b1e2
64018e02:	pop    ecx
64018e03:	ret    
64018e04:	push   ebp
64018e05:	mov    ebp,esp
64018e07:	sub    esp,0x10
64018e0a:	push   ebx
64018e0b:	xor    ebx,ebx
64018e0d:	push   ebx
64018e0e:	lea    ecx,[ebp-0x10]
64018e11:	call   0x640142e5
64018e16:	cmp    esi,0xfffffffe
64018e19:	mov    DWORD PTR ds:0x64039358,ebx
64018e1f:	jne    0x64018e3f
64018e21:	mov    DWORD PTR ds:0x64039358,0x1
64018e2b:	call   DWORD PTR ds:0x64024134
64018e31:	cmp    BYTE PTR [ebp-0x4],bl
64018e34:	je     0x64018e7b
64018e36:	mov    ecx,DWORD PTR [ebp-0x8]
64018e39:	and    DWORD PTR [ecx+0x70],0xfffffffd
64018e3d:	jmp    0x64018e7b
64018e3f:	cmp    esi,0xfffffffd
64018e42:	jne    0x64018e56
64018e44:	mov    DWORD PTR ds:0x64039358,0x1
64018e4e:	call   DWORD PTR ds:0x64024168
64018e54:	jmp    0x64018e31
64018e56:	cmp    esi,0xfffffffc
64018e59:	jne    0x64018e6d
64018e5b:	mov    eax,DWORD PTR [ebp-0x10]
64018e5e:	mov    eax,DWORD PTR [eax+0x4]
64018e61:	mov    DWORD PTR ds:0x64039358,0x1
64018e6b:	jmp    0x64018e31
64018e6d:	cmp    BYTE PTR [ebp-0x4],bl
64018e70:	je     0x64018e79
64018e72:	mov    eax,DWORD PTR [ebp-0x8]
64018e75:	and    DWORD PTR [eax+0x70],0xfffffffd
64018e79:	mov    eax,esi
64018e7b:	pop    ebx
64018e7c:	leave  
64018e7d:	ret    
64018e7e:	push   ebp
64018e7f:	mov    ebp,esp
64018e81:	sub    esp,0x20
64018e84:	mov    eax,ds:0x64037644
64018e89:	xor    eax,ebp
64018e8b:	mov    DWORD PTR [ebp-0x4],eax
64018e8e:	push   ebx
64018e8f:	mov    ebx,DWORD PTR [ebp+0xc]
64018e92:	push   esi
64018e93:	mov    esi,DWORD PTR [ebp+0x8]
64018e96:	push   edi
64018e97:	call   0x64018e04
64018e9c:	mov    edi,eax
64018e9e:	xor    esi,esi
64018ea0:	cmp    edi,esi
64018ea2:	mov    DWORD PTR [ebp+0x8],edi
64018ea5:	jne    0x64018eb5
64018ea7:	mov    eax,ebx
64018ea9:	call   0x64018b81
64018eae:	xor    eax,eax
64018eb0:	jmp    0x64019048
64018eb5:	mov    DWORD PTR [ebp-0x1c],esi
64018eb8:	xor    eax,eax
64018eba:	cmp    DWORD PTR [eax+0x64037e18],edi
64018ec0:	je     0x64018f57
64018ec6:	inc    DWORD PTR [ebp-0x1c]
64018ec9:	add    eax,0x30
64018ecc:	cmp    eax,0xf0
64018ed1:	jb     0x64018eba
64018ed3:	cmp    edi,0xfde8
64018ed9:	je     0x64019045
64018edf:	cmp    edi,0xfde9
64018ee5:	je     0x64019045
64018eeb:	movzx  eax,di
64018eee:	push   eax
64018eef:	call   DWORD PTR ds:0x64024138
64018ef5:	test   eax,eax
64018ef7:	je     0x64019045
64018efd:	lea    eax,[ebp-0x18]
64018f00:	push   eax
64018f01:	push   edi
64018f02:	call   DWORD PTR ds:0x640241b8
64018f08:	test   eax,eax
64018f0a:	je     0x64019039
64018f10:	push   0x101
64018f15:	lea    eax,[ebx+0x1c]
64018f18:	push   esi
64018f19:	push   eax
64018f1a:	call   0x64015120
64018f1f:	xor    edx,edx
64018f21:	inc    edx
64018f22:	add    esp,0xc
64018f25:	cmp    DWORD PTR [ebp-0x18],edx
64018f28:	mov    DWORD PTR [ebx+0x4],edi
64018f2b:	mov    DWORD PTR [ebx+0xc],esi
64018f2e:	jbe    0x6401902c
64018f34:	cmp    BYTE PTR [ebp-0x12],0x0
64018f38:	je     0x6401900d
64018f3e:	lea    esi,[ebp-0x11]
64018f41:	mov    cl,BYTE PTR [esi]
64018f43:	test   cl,cl
64018f45:	je     0x6401900d
64018f4b:	movzx  eax,BYTE PTR [esi-0x1]
64018f4f:	movzx  ecx,cl
64018f52:	jmp    0x64018ffd
64018f57:	push   0x101
64018f5c:	lea    eax,[ebx+0x1c]
64018f5f:	push   esi
64018f60:	push   eax
64018f61:	call   0x64015120
64018f66:	mov    ecx,DWORD PTR [ebp-0x1c]
64018f69:	add    esp,0xc
64018f6c:	imul   ecx,ecx,0x30
64018f6f:	mov    DWORD PTR [ebp-0x20],esi
64018f72:	lea    esi,[ecx+0x64037e28]
64018f78:	mov    DWORD PTR [ebp-0x1c],esi
64018f7b:	jmp    0x64018fa7
64018f7d:	mov    al,BYTE PTR [esi+0x1]
64018f80:	test   al,al
64018f82:	je     0x64018fac
64018f84:	movzx  edi,BYTE PTR [esi]
64018f87:	movzx  eax,al
64018f8a:	jmp    0x64018f9e
64018f8c:	mov    eax,DWORD PTR [ebp-0x20]
64018f8f:	mov    al,BYTE PTR [eax+0x64037e14]
64018f95:	or     BYTE PTR [ebx+edi*1+0x1d],al
64018f99:	movzx  eax,BYTE PTR [esi+0x1]
64018f9d:	inc    edi
64018f9e:	cmp    edi,eax
64018fa0:	jbe    0x64018f8c
64018fa2:	mov    edi,DWORD PTR [ebp+0x8]
64018fa5:	inc    esi
64018fa6:	inc    esi
64018fa7:	cmp    BYTE PTR [esi],0x0
64018faa:	jne    0x64018f7d
64018fac:	mov    esi,DWORD PTR [ebp-0x1c]
64018faf:	inc    DWORD PTR [ebp-0x20]
64018fb2:	add    esi,0x8
64018fb5:	cmp    DWORD PTR [ebp-0x20],0x4
64018fb9:	mov    DWORD PTR [ebp-0x1c],esi
64018fbc:	jb     0x64018fa7
64018fbe:	mov    eax,edi
64018fc0:	mov    DWORD PTR [ebx+0x4],edi
64018fc3:	mov    DWORD PTR [ebx+0x8],0x1
64018fca:	call   0x64018b52
64018fcf:	push   0x6
64018fd1:	mov    DWORD PTR [ebx+0xc],eax
64018fd4:	lea    eax,[ebx+0x10]
64018fd7:	lea    ecx,[ecx+0x64037e1c]
64018fdd:	pop    edx
64018fde:	mov    si,WORD PTR [ecx]
64018fe1:	inc    ecx
64018fe2:	mov    WORD PTR [eax],si
64018fe5:	inc    ecx
64018fe6:	inc    eax
64018fe7:	inc    eax
64018fe8:	dec    edx
64018fe9:	jne    0x64018fde
64018feb:	mov    esi,ebx
64018fed:	call   0x64018bd6
64018ff2:	jmp    0x64018eae
64018ff7:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
64018ffc:	inc    eax
64018ffd:	cmp    eax,ecx
64018fff:	jbe    0x64018ff7
64019001:	inc    esi
64019002:	inc    esi
64019003:	cmp    BYTE PTR [esi-0x1],0x0
64019007:	jne    0x64018f41
6401900d:	lea    eax,[ebx+0x1e]
64019010:	mov    ecx,0xfe
64019015:	or     BYTE PTR [eax],0x8
64019018:	inc    eax
64019019:	dec    ecx
6401901a:	jne    0x64019015
6401901c:	mov    eax,DWORD PTR [ebx+0x4]
6401901f:	call   0x64018b52
64019024:	mov    DWORD PTR [ebx+0xc],eax
64019027:	mov    DWORD PTR [ebx+0x8],edx
6401902a:	jmp    0x6401902f
6401902c:	mov    DWORD PTR [ebx+0x8],esi
6401902f:	xor    eax,eax
64019031:	lea    edi,[ebx+0x10]
64019034:	stos   DWORD PTR es:[edi],eax
64019035:	stos   DWORD PTR es:[edi],eax
64019036:	stos   DWORD PTR es:[edi],eax
64019037:	jmp    0x64018feb
64019039:	cmp    DWORD PTR ds:0x64039358,esi
6401903f:	jne    0x64018ea7
64019045:	or     eax,0xffffffff
64019048:	mov    ecx,DWORD PTR [ebp-0x4]
6401904b:	pop    edi
6401904c:	pop    esi
6401904d:	xor    ecx,ebp
6401904f:	pop    ebx
64019050:	call   0x64013cc6
64019055:	leave  
64019056:	ret    
64019057:	push   0x14
64019059:	push   0x6402ba20
6401905e:	call   0x64015ed4
64019063:	or     DWORD PTR [ebp-0x20],0xffffffff
64019067:	call   0x640177ea
6401906c:	mov    edi,eax
6401906e:	mov    DWORD PTR [ebp-0x24],edi
64019071:	call   0x64018d60
64019076:	mov    ebx,DWORD PTR [edi+0x68]
64019079:	mov    esi,DWORD PTR [ebp+0x8]
6401907c:	call   0x64018e04
64019081:	mov    DWORD PTR [ebp+0x8],eax
64019084:	cmp    eax,DWORD PTR [ebx+0x4]
64019087:	je     0x640191e4
6401908d:	push   0x220
64019092:	call   0x64015cef
64019097:	pop    ecx
64019098:	mov    ebx,eax
6401909a:	test   ebx,ebx
6401909c:	je     0x640191e8
640190a2:	mov    ecx,0x88
640190a7:	mov    esi,DWORD PTR [edi+0x68]
640190aa:	mov    edi,ebx
640190ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640190ae:	and    DWORD PTR [ebx],0x0
640190b1:	push   ebx
640190b2:	push   DWORD PTR [ebp+0x8]
640190b5:	call   0x64018e7e
640190ba:	pop    ecx
640190bb:	pop    ecx
640190bc:	mov    DWORD PTR [ebp-0x20],eax
640190bf:	test   eax,eax
640190c1:	jne    0x640191c3
640190c7:	mov    esi,DWORD PTR [ebp-0x24]
640190ca:	push   DWORD PTR [esi+0x68]
640190cd:	call   DWORD PTR ds:0x64024078
640190d3:	test   eax,eax
640190d5:	jne    0x640190e8
640190d7:	mov    eax,DWORD PTR [esi+0x68]
640190da:	cmp    eax,0x640379e8
640190df:	je     0x640190e8
640190e1:	push   eax
640190e2:	call   0x6401477f
640190e7:	pop    ecx
640190e8:	mov    DWORD PTR [esi+0x68],ebx
640190eb:	push   ebx
640190ec:	mov    edi,DWORD PTR ds:0x6402402c
640190f2:	call   edi
640190f4:	test   BYTE PTR [esi+0x70],0x2
640190f8:	jne    0x640191e8
640190fe:	test   BYTE PTR ds:0x64037f08,0x1
64019105:	jne    0x640191e8
6401910b:	push   0xd
6401910d:	call   0x6401b2ba
64019112:	pop    ecx
64019113:	and    DWORD PTR [ebp-0x4],0x0
64019117:	mov    eax,DWORD PTR [ebx+0x4]
6401911a:	mov    ds:0x64039368,eax
6401911f:	mov    eax,DWORD PTR [ebx+0x8]
64019122:	mov    ds:0x6403936c,eax
64019127:	mov    eax,DWORD PTR [ebx+0xc]
6401912a:	mov    ds:0x64039370,eax
6401912f:	xor    eax,eax
64019131:	mov    DWORD PTR [ebp-0x1c],eax
64019134:	cmp    eax,0x5
64019137:	jge    0x64019149
64019139:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401913e:	mov    WORD PTR [eax*2+0x6403935c],cx
64019146:	inc    eax
64019147:	jmp    0x64019131
64019149:	xor    eax,eax
6401914b:	mov    DWORD PTR [ebp-0x1c],eax
6401914e:	cmp    eax,0x101
64019153:	jge    0x64019162
64019155:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64019159:	mov    BYTE PTR [eax+0x64037c08],cl
6401915f:	inc    eax
64019160:	jmp    0x6401914b
64019162:	xor    eax,eax
64019164:	mov    DWORD PTR [ebp-0x1c],eax
64019167:	cmp    eax,0x100
6401916c:	jge    0x6401917e
6401916e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64019175:	mov    BYTE PTR [eax+0x64037d10],cl
6401917b:	inc    eax
6401917c:	jmp    0x64019164
6401917e:	push   DWORD PTR ds:0x64037e10
64019184:	call   DWORD PTR ds:0x64024078
6401918a:	test   eax,eax
6401918c:	jne    0x640191a1
6401918e:	mov    eax,ds:0x64037e10
64019193:	cmp    eax,0x640379e8
64019198:	je     0x640191a1
6401919a:	push   eax
6401919b:	call   0x6401477f
640191a0:	pop    ecx
640191a1:	mov    DWORD PTR ds:0x64037e10,ebx
640191a7:	push   ebx
640191a8:	call   edi
640191aa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640191b1:	call   0x640191b8
640191b6:	jmp    0x640191e8
640191b8:	push   0xd
640191ba:	call   0x6401b1e2
640191bf:	pop    ecx
640191c0:	ret    
640191c1:	jmp    0x640191e8
640191c3:	cmp    eax,0xffffffff
640191c6:	jne    0x640191e8
640191c8:	cmp    ebx,0x640379e8
640191ce:	je     0x640191d7
640191d0:	push   ebx
640191d1:	call   0x6401477f
640191d6:	pop    ecx
640191d7:	call   0x64016483
640191dc:	mov    DWORD PTR [eax],0x16
640191e2:	jmp    0x640191e8
640191e4:	and    DWORD PTR [ebp-0x20],0x0
640191e8:	mov    eax,DWORD PTR [ebp-0x20]
640191eb:	call   0x64015f19
640191f0:	ret    
640191f1:	cmp    DWORD PTR ds:0x6403ac6c,0x0
640191f8:	jne    0x6401920c
640191fa:	push   0xfffffffd
640191fc:	call   0x64019057
64019201:	pop    ecx
64019202:	mov    DWORD PTR ds:0x6403ac6c,0x1
6401920c:	xor    eax,eax
6401920e:	ret    
6401920f:	mov    ecx,DWORD PTR [esp+0x4]
64019213:	push   ebx
64019214:	push   esi
64019215:	push   edi
64019216:	xor    edi,edi
64019218:	cmp    ecx,edi
6401921a:	je     0x64019224
6401921c:	mov    ebx,DWORD PTR [esp+0x14]
64019220:	cmp    ebx,edi
64019222:	ja     0x6401923f
64019224:	call   0x64016483
64019229:	push   0x16
6401922b:	pop    esi
6401922c:	mov    DWORD PTR [eax],esi
6401922e:	push   edi
6401922f:	push   edi
64019230:	push   edi
64019231:	push   edi
64019232:	push   edi
64019233:	call   0x64013e12
64019238:	add    esp,0x14
6401923b:	mov    eax,esi
6401923d:	jmp    0x64019277
6401923f:	mov    esi,DWORD PTR [esp+0x18]
64019243:	cmp    esi,edi
64019245:	jne    0x6401924c
64019247:	mov    WORD PTR [ecx],di
6401924a:	jmp    0x64019224
6401924c:	mov    edx,ecx
6401924e:	movzx  eax,WORD PTR [esi]
64019251:	mov    WORD PTR [edx],ax
64019254:	inc    edx
64019255:	inc    edx
64019256:	inc    esi
64019257:	inc    esi
64019258:	cmp    ax,di
6401925b:	je     0x64019260
6401925d:	dec    ebx
6401925e:	jne    0x6401924e
64019260:	cmp    ebx,edi
64019262:	jne    0x64019275
64019264:	mov    WORD PTR [ecx],di
64019267:	call   0x64016483
6401926c:	push   0x22
6401926e:	pop    ecx
6401926f:	mov    DWORD PTR [eax],ecx
64019271:	mov    esi,ecx
64019273:	jmp    0x6401922e
64019275:	xor    eax,eax
64019277:	pop    edi
64019278:	pop    esi
64019279:	pop    ebx
6401927a:	ret    
6401927b:	push   ebp
6401927c:	mov    ebp,esp
6401927e:	sub    esp,0x10
64019281:	mov    eax,ds:0x64037644
64019286:	xor    eax,ebp
64019288:	mov    DWORD PTR [ebp-0x4],eax
6401928b:	push   ebx
6401928c:	push   esi
6401928d:	mov    esi,DWORD PTR ds:0x640241b4
64019293:	xor    ebx,ebx
64019295:	cmp    DWORD PTR ds:0x64039394,ebx
6401929b:	push   edi
6401929c:	mov    edi,ecx
6401929e:	jne    0x640192d6
640192a0:	push   ebx
640192a1:	push   ebx
640192a2:	push   0x1
640192a4:	push   0x640299ac
640192a9:	push   0x100
640192ae:	push   ebx
640192af:	call   esi
640192b1:	test   eax,eax
640192b3:	je     0x640192c1
640192b5:	mov    DWORD PTR ds:0x64039394,0x1
640192bf:	jmp    0x640192d6
640192c1:	call   DWORD PTR ds:0x64024068
640192c7:	cmp    eax,0x78
640192ca:	jne    0x640192d6
640192cc:	mov    DWORD PTR ds:0x64039394,0x2
640192d6:	cmp    DWORD PTR [ebp+0x14],ebx
640192d9:	jle    0x640192f8
640192db:	mov    ecx,DWORD PTR [ebp+0x14]
640192de:	mov    eax,DWORD PTR [ebp+0x10]
640192e1:	dec    ecx
640192e2:	cmp    WORD PTR [eax],bx
640192e5:	je     0x640192f0
640192e7:	inc    eax
640192e8:	inc    eax
640192e9:	cmp    ecx,ebx
640192eb:	jne    0x640192e1
640192ed:	or     ecx,0xffffffff
640192f0:	or     eax,0xffffffff
640192f3:	sub    eax,ecx
640192f5:	add    DWORD PTR [ebp+0x14],eax
640192f8:	mov    eax,ds:0x64039394
640192fd:	cmp    eax,0x1
64019300:	jne    0x6401931b
64019302:	push   DWORD PTR [ebp+0x1c]
64019305:	push   DWORD PTR [ebp+0x18]
64019308:	push   DWORD PTR [ebp+0x14]
6401930b:	push   DWORD PTR [ebp+0x10]
6401930e:	push   DWORD PTR [ebp+0xc]
64019311:	push   DWORD PTR [ebp+0x8]
64019314:	call   esi
64019316:	jmp    0x640194ca
6401931b:	cmp    eax,0x2
6401931e:	je     0x64019324
64019320:	cmp    eax,ebx
64019322:	jne    0x64019376
64019324:	cmp    DWORD PTR [ebp+0x8],ebx
64019327:	mov    DWORD PTR [ebp-0xc],ebx
6401932a:	jne    0x64019334
6401932c:	mov    eax,DWORD PTR [edi]
6401932e:	mov    eax,DWORD PTR [eax+0x14]
64019331:	mov    DWORD PTR [ebp+0x8],eax
64019334:	cmp    DWORD PTR [ebp+0x20],ebx
64019337:	jne    0x64019341
64019339:	mov    eax,DWORD PTR [edi]
6401933b:	mov    eax,DWORD PTR [eax+0x4]
6401933e:	mov    DWORD PTR [ebp+0x20],eax
64019341:	push   DWORD PTR [ebp+0x8]
64019344:	call   0x6401e020
64019349:	cmp    DWORD PTR [ebp+0x20],eax
6401934c:	pop    ecx
6401934d:	je     0x64019357
6401934f:	cmp    eax,0xffffffff
64019352:	je     0x64019357
64019354:	mov    DWORD PTR [ebp+0x20],eax
64019357:	mov    esi,DWORD PTR ds:0x64024010
6401935d:	push   ebx
6401935e:	push   ebx
6401935f:	push   ebx
64019360:	push   ebx
64019361:	push   DWORD PTR [ebp+0x14]
64019364:	push   DWORD PTR [ebp+0x10]
64019367:	push   ebx
64019368:	push   DWORD PTR [ebp+0x20]
6401936b:	call   esi
6401936d:	mov    edi,eax
6401936f:	cmp    edi,ebx
64019371:	mov    DWORD PTR [ebp-0x10],edi
64019374:	jne    0x6401937d
64019376:	xor    eax,eax
64019378:	jmp    0x640194ca
6401937d:	jle    0x640193c1
6401937f:	push   0xffffffe0
64019381:	xor    edx,edx
64019383:	pop    eax
64019384:	div    edi
64019386:	cmp    eax,0x1
64019389:	jb     0x640193c1
6401938b:	lea    eax,[edi+0x8]
6401938e:	cmp    eax,0x400
64019393:	ja     0x640193a8
64019395:	call   0x64013ce0
6401939a:	mov    eax,esp
6401939c:	cmp    eax,ebx
6401939e:	je     0x640193bc
640193a0:	mov    DWORD PTR [eax],0xcccc
640193a6:	jmp    0x640193b9
640193a8:	push   eax
640193a9:	call   0x6401487e
640193ae:	cmp    eax,ebx
640193b0:	pop    ecx
640193b1:	je     0x640193bc
640193b3:	mov    DWORD PTR [eax],0xdddd
640193b9:	add    eax,0x8
640193bc:	mov    DWORD PTR [ebp-0x8],eax
640193bf:	jmp    0x640193c4
640193c1:	mov    DWORD PTR [ebp-0x8],ebx
640193c4:	cmp    DWORD PTR [ebp-0x8],ebx
640193c7:	je     0x64019376
640193c9:	push   ebx
640193ca:	push   ebx
640193cb:	push   edi
640193cc:	push   DWORD PTR [ebp-0x8]
640193cf:	push   DWORD PTR [ebp+0x14]
640193d2:	push   DWORD PTR [ebp+0x10]
640193d5:	push   ebx
640193d6:	push   DWORD PTR [ebp+0x20]
640193d9:	call   esi
640193db:	test   eax,eax
640193dd:	je     0x640194be
640193e3:	push   ebx
640193e4:	push   ebx
640193e5:	push   edi
640193e6:	push   DWORD PTR [ebp-0x8]
640193e9:	mov    edi,DWORD PTR ds:0x640241b0
640193ef:	push   DWORD PTR [ebp+0xc]
640193f2:	push   DWORD PTR [ebp+0x8]
640193f5:	call   edi
640193f7:	mov    esi,eax
640193f9:	cmp    esi,ebx
640193fb:	je     0x640194be
64019401:	jle    0x64019442
64019403:	push   0xffffffe0
64019405:	xor    edx,edx
64019407:	pop    eax
64019408:	div    esi
6401940a:	cmp    eax,0x1
6401940d:	jb     0x64019442
6401940f:	lea    eax,[esi+0x8]
64019412:	cmp    eax,0x400
64019417:	ja     0x6401942c
64019419:	call   0x64013ce0
6401941e:	mov    eax,esp
64019420:	cmp    eax,ebx
64019422:	je     0x64019440
64019424:	mov    DWORD PTR [eax],0xcccc
6401942a:	jmp    0x6401943d
6401942c:	push   eax
6401942d:	call   0x6401487e
64019432:	cmp    eax,ebx
64019434:	pop    ecx
64019435:	je     0x64019440
64019437:	mov    DWORD PTR [eax],0xdddd
6401943d:	add    eax,0x8
64019440:	mov    ebx,eax
64019442:	test   ebx,ebx
64019444:	je     0x640194be
64019446:	push   esi
64019447:	push   ebx
64019448:	push   DWORD PTR [ebp-0x10]
6401944b:	push   DWORD PTR [ebp-0x8]
6401944e:	push   DWORD PTR [ebp+0xc]
64019451:	push   DWORD PTR [ebp+0x8]
64019454:	call   edi
64019456:	test   eax,eax
64019458:	je     0x640194b7
6401945a:	test   WORD PTR [ebp+0xc],0x400
64019460:	je     0x64019496
64019462:	mov    eax,DWORD PTR [ebp+0x1c]
64019465:	xor    edi,edi
64019467:	cmp    eax,edi
64019469:	mov    DWORD PTR [ebp-0xc],esi
6401946c:	je     0x640194b7
6401946e:	cmp    eax,esi
64019470:	jg     0x64019475
64019472:	lea    esi,[eax-0x1]
64019475:	push   esi
64019476:	push   ebx
64019477:	push   eax
64019478:	push   DWORD PTR [ebp+0x18]
6401947b:	call   0x6401dd26
64019480:	add    esp,0x10
64019483:	test   eax,eax
64019485:	je     0x640194b7
64019487:	push   edi
64019488:	push   edi
64019489:	push   edi
6401948a:	push   edi
6401948b:	push   edi
6401948c:	call   0x64013d16
64019491:	add    esp,0x14
64019494:	jmp    0x640194b7
64019496:	xor    eax,eax
64019498:	cmp    DWORD PTR [ebp+0x1c],eax
6401949b:	jne    0x640194a1
6401949d:	push   eax
6401949e:	push   eax
6401949f:	jmp    0x640194a7
640194a1:	push   DWORD PTR [ebp+0x1c]
640194a4:	push   DWORD PTR [ebp+0x18]
640194a7:	push   esi
640194a8:	push   ebx
640194a9:	push   0x1
640194ab:	push   DWORD PTR [ebp+0x20]
640194ae:	call   DWORD PTR ds:0x64024028
640194b4:	mov    DWORD PTR [ebp-0xc],eax
640194b7:	push   ebx
640194b8:	call   0x640142ca
640194bd:	pop    ecx
640194be:	push   DWORD PTR [ebp-0x8]
640194c1:	call   0x640142ca
640194c6:	mov    eax,DWORD PTR [ebp-0xc]
640194c9:	pop    ecx
640194ca:	lea    esp,[ebp-0x1c]
640194cd:	pop    edi
640194ce:	pop    esi
640194cf:	pop    ebx
640194d0:	mov    ecx,DWORD PTR [ebp-0x4]
640194d3:	xor    ecx,ebp
640194d5:	call   0x64013cc6
640194da:	leave  
640194db:	ret    
640194dc:	push   ebp
640194dd:	mov    ebp,esp
640194df:	sub    esp,0x10
640194e2:	push   DWORD PTR [ebp+0x8]
640194e5:	lea    ecx,[ebp-0x10]
640194e8:	call   0x640142e5
640194ed:	push   DWORD PTR [ebp+0x24]
640194f0:	lea    ecx,[ebp-0x10]
640194f3:	push   DWORD PTR [ebp+0x20]
640194f6:	push   DWORD PTR [ebp+0x1c]
640194f9:	push   DWORD PTR [ebp+0x18]
640194fc:	push   DWORD PTR [ebp+0x14]
640194ff:	push   DWORD PTR [ebp+0x10]
64019502:	push   DWORD PTR [ebp+0xc]
64019505:	call   0x6401927b
6401950a:	add    esp,0x1c
6401950d:	cmp    BYTE PTR [ebp-0x4],0x0
64019511:	je     0x6401951a
64019513:	mov    ecx,DWORD PTR [ebp-0x8]
64019516:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401951a:	leave  
6401951b:	ret    
6401951c:	xor    eax,eax
6401951e:	cmp    DWORD PTR [esp+0x8],eax
64019522:	jbe    0x64019537
64019524:	mov    ecx,DWORD PTR [esp+0x4]
64019528:	cmp    WORD PTR [ecx],0x0
6401952c:	je     0x64019537
6401952e:	inc    eax
6401952f:	inc    ecx
64019530:	inc    ecx
64019531:	cmp    eax,DWORD PTR [esp+0x8]
64019535:	jb     0x64019528
64019537:	ret    
64019538:	push   ebp
64019539:	mov    ebp,esp
6401953b:	push   ecx
6401953c:	push   ecx
6401953d:	mov    eax,DWORD PTR [ebp+0xc]
64019540:	push   esi
64019541:	mov    esi,DWORD PTR [ebp+0x8]
64019544:	mov    DWORD PTR [ebp-0x8],eax
64019547:	mov    eax,DWORD PTR [ebp+0x10]
6401954a:	push   edi
6401954b:	push   esi
6401954c:	mov    DWORD PTR [ebp-0x4],eax
6401954f:	call   0x64019755
64019554:	or     edi,0xffffffff
64019557:	cmp    eax,edi
64019559:	pop    ecx
6401955a:	jne    0x6401956d
6401955c:	call   0x64016483
64019561:	mov    DWORD PTR [eax],0x9
64019567:	mov    eax,edi
64019569:	mov    edx,edi
6401956b:	jmp    0x640195b7
6401956d:	push   DWORD PTR [ebp+0x14]
64019570:	lea    ecx,[ebp-0x4]
64019573:	push   ecx
64019574:	push   DWORD PTR [ebp-0x8]
64019577:	push   eax
64019578:	call   DWORD PTR ds:0x640241a8
6401957e:	cmp    eax,edi
64019580:	mov    DWORD PTR [ebp-0x8],eax
64019583:	jne    0x64019598
64019585:	call   DWORD PTR ds:0x64024068
6401958b:	test   eax,eax
6401958d:	je     0x64019598
6401958f:	push   eax
64019590:	call   0x640164a9
64019595:	pop    ecx
64019596:	jmp    0x64019567
64019598:	mov    eax,esi
6401959a:	sar    eax,0x5
6401959d:	mov    eax,DWORD PTR [eax*4+0x6403ab60]
640195a4:	and    esi,0x1f
640195a7:	shl    esi,0x6
640195aa:	lea    eax,[eax+esi*1+0x4]
640195ae:	and    BYTE PTR [eax],0xfd
640195b1:	mov    eax,DWORD PTR [ebp-0x8]
640195b4:	mov    edx,DWORD PTR [ebp-0x4]
640195b7:	pop    edi
640195b8:	pop    esi
640195b9:	leave  
640195ba:	ret    
640195bb:	push   0x14
640195bd:	push   0x6402ba40
640195c2:	call   0x64015ed4
640195c7:	or     esi,0xffffffff
640195ca:	mov    DWORD PTR [ebp-0x24],esi
640195cd:	mov    DWORD PTR [ebp-0x20],esi
640195d0:	mov    eax,DWORD PTR [ebp+0x8]
640195d3:	cmp    eax,0xfffffffe
640195d6:	jne    0x640195f4
640195d8:	call   0x64016496
640195dd:	and    DWORD PTR [eax],0x0
640195e0:	call   0x64016483
640195e5:	mov    DWORD PTR [eax],0x9
640195eb:	mov    eax,esi
640195ed:	mov    edx,esi
640195ef:	jmp    0x640196c4
640195f4:	xor    edi,edi
640195f6:	cmp    eax,edi
640195f8:	jl     0x64019602
640195fa:	cmp    eax,DWORD PTR ds:0x6403ab48
64019600:	jb     0x64019623
64019602:	call   0x64016496
64019607:	mov    DWORD PTR [eax],edi
64019609:	call   0x64016483
6401960e:	mov    DWORD PTR [eax],0x9
64019614:	push   edi
64019615:	push   edi
64019616:	push   edi
64019617:	push   edi
64019618:	push   edi
64019619:	call   0x64013e12
6401961e:	add    esp,0x14
64019621:	jmp    0x640195eb
64019623:	mov    ecx,eax
64019625:	sar    ecx,0x5
64019628:	lea    ebx,[ecx*4+0x6403ab60]
6401962f:	mov    esi,eax
64019631:	and    esi,0x1f
64019634:	shl    esi,0x6
64019637:	mov    ecx,DWORD PTR [ebx]
64019639:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401963e:	and    ecx,0x1
64019641:	jne    0x64019669
64019643:	call   0x64016496
64019648:	mov    DWORD PTR [eax],edi
6401964a:	call   0x64016483
6401964f:	mov    DWORD PTR [eax],0x9
64019655:	push   edi
64019656:	push   edi
64019657:	push   edi
64019658:	push   edi
64019659:	push   edi
6401965a:	call   0x64013e12
6401965f:	add    esp,0x14
64019662:	or     edx,0xffffffff
64019665:	mov    eax,edx
64019667:	jmp    0x640196c4
64019669:	push   eax
6401966a:	call   0x640197c6
6401966f:	pop    ecx
64019670:	mov    DWORD PTR [ebp-0x4],edi
64019673:	mov    eax,DWORD PTR [ebx]
64019675:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401967a:	je     0x64019698
6401967c:	push   DWORD PTR [ebp+0x14]
6401967f:	push   DWORD PTR [ebp+0x10]
64019682:	push   DWORD PTR [ebp+0xc]
64019685:	push   DWORD PTR [ebp+0x8]
64019688:	call   0x64019538
6401968d:	add    esp,0x10
64019690:	mov    DWORD PTR [ebp-0x24],eax
64019693:	mov    DWORD PTR [ebp-0x20],edx
64019696:	jmp    0x640196b2
64019698:	call   0x64016483
6401969d:	mov    DWORD PTR [eax],0x9
640196a3:	call   0x64016496
640196a8:	mov    DWORD PTR [eax],edi
640196aa:	or     DWORD PTR [ebp-0x24],0xffffffff
640196ae:	or     DWORD PTR [ebp-0x20],0xffffffff
640196b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640196b9:	call   0x640196ca
640196be:	mov    eax,DWORD PTR [ebp-0x24]
640196c1:	mov    edx,DWORD PTR [ebp-0x20]
640196c4:	call   0x64015f19
640196c9:	ret    
640196ca:	push   DWORD PTR [ebp+0x8]
640196cd:	call   0x64019866
640196d2:	pop    ecx
640196d3:	ret    
640196d4:	mov    ecx,DWORD PTR [esp+0x4]
640196d8:	push   ebx
640196d9:	xor    ebx,ebx
640196db:	cmp    ecx,ebx
640196dd:	push   esi
640196de:	push   edi
640196df:	jl     0x6401973c
640196e1:	cmp    ecx,DWORD PTR ds:0x6403ab48
640196e7:	jae    0x6401973c
640196e9:	mov    eax,ecx
640196eb:	sar    eax,0x5
640196ee:	mov    esi,ecx
640196f0:	lea    edi,[eax*4+0x6403ab60]
640196f7:	mov    eax,DWORD PTR [edi]
640196f9:	and    esi,0x1f
640196fc:	shl    esi,0x6
640196ff:	add    eax,esi
64019701:	test   BYTE PTR [eax+0x4],0x1
64019705:	je     0x6401973c
64019707:	cmp    DWORD PTR [eax],0xffffffff
6401970a:	je     0x6401973c
6401970c:	cmp    DWORD PTR ds:0x64038ea4,0x1
64019713:	jne    0x64019732
64019715:	sub    ecx,ebx
64019717:	je     0x64019729
64019719:	dec    ecx
6401971a:	je     0x64019724
6401971c:	dec    ecx
6401971d:	jne    0x64019732
6401971f:	push   ebx
64019720:	push   0xfffffff4
64019722:	jmp    0x6401972c
64019724:	push   ebx
64019725:	push   0xfffffff5
64019727:	jmp    0x6401972c
64019729:	push   ebx
6401972a:	push   0xfffffff6
6401972c:	call   DWORD PTR ds:0x640241dc
64019732:	mov    eax,DWORD PTR [edi]
64019734:	or     DWORD PTR [esi+eax*1],0xffffffff
64019738:	xor    eax,eax
6401973a:	jmp    0x64019751
6401973c:	call   0x64016483
64019741:	mov    DWORD PTR [eax],0x9
64019747:	call   0x64016496
6401974c:	mov    DWORD PTR [eax],ebx
6401974e:	or     eax,0xffffffff
64019751:	pop    edi
64019752:	pop    esi
64019753:	pop    ebx
64019754:	ret    
64019755:	mov    eax,DWORD PTR [esp+0x4]
64019759:	cmp    eax,0xfffffffe
6401975c:	jne    0x64019775
6401975e:	call   0x64016496
64019763:	and    DWORD PTR [eax],0x0
64019766:	call   0x64016483
6401976b:	mov    DWORD PTR [eax],0x9
64019771:	or     eax,0xffffffff
64019774:	ret    
64019775:	push   esi
64019776:	xor    esi,esi
64019778:	cmp    eax,esi
6401977a:	jl     0x6401979e
6401977c:	cmp    eax,DWORD PTR ds:0x6403ab48
64019782:	jae    0x6401979e
64019784:	mov    ecx,eax
64019786:	and    eax,0x1f
64019789:	sar    ecx,0x5
6401978c:	mov    ecx,DWORD PTR [ecx*4+0x6403ab60]
64019793:	shl    eax,0x6
64019796:	add    eax,ecx
64019798:	test   BYTE PTR [eax+0x4],0x1
6401979c:	jne    0x640197c2
6401979e:	call   0x64016496
640197a3:	mov    DWORD PTR [eax],esi
640197a5:	call   0x64016483
640197aa:	push   esi
640197ab:	push   esi
640197ac:	push   esi
640197ad:	push   esi
640197ae:	push   esi
640197af:	mov    DWORD PTR [eax],0x9
640197b5:	call   0x64013e12
640197ba:	add    esp,0x14
640197bd:	or     eax,0xffffffff
640197c0:	pop    esi
640197c1:	ret    
640197c2:	mov    eax,DWORD PTR [eax]
640197c4:	pop    esi
640197c5:	ret    
640197c6:	push   0xc
640197c8:	push   0x6402ba60
640197cd:	call   0x64015ed4
640197d2:	mov    edi,DWORD PTR [ebp+0x8]
640197d5:	mov    eax,edi
640197d7:	sar    eax,0x5
640197da:	mov    esi,edi
640197dc:	and    esi,0x1f
640197df:	shl    esi,0x6
640197e2:	add    esi,DWORD PTR [eax*4+0x6403ab60]
640197e9:	mov    DWORD PTR [ebp-0x1c],0x1
640197f0:	xor    ebx,ebx
640197f2:	cmp    DWORD PTR [esi+0x8],ebx
640197f5:	jne    0x6401982d
640197f7:	push   0xa
640197f9:	call   0x6401b2ba
640197fe:	pop    ecx
640197ff:	mov    DWORD PTR [ebp-0x4],ebx
64019802:	cmp    DWORD PTR [esi+0x8],ebx
64019805:	jne    0x64019821
64019807:	push   0xfa0
6401980c:	lea    eax,[esi+0xc]
6401980f:	push   eax
64019810:	call   0x6401e812
64019815:	pop    ecx
64019816:	pop    ecx
64019817:	test   eax,eax
64019819:	jne    0x6401981e
6401981b:	mov    DWORD PTR [ebp-0x1c],ebx
6401981e:	inc    DWORD PTR [esi+0x8]
64019821:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019828:	call   0x6401985d
6401982d:	cmp    DWORD PTR [ebp-0x1c],ebx
64019830:	je     0x6401984f
64019832:	mov    eax,edi
64019834:	sar    eax,0x5
64019837:	and    edi,0x1f
6401983a:	shl    edi,0x6
6401983d:	mov    eax,DWORD PTR [eax*4+0x6403ab60]
64019844:	lea    eax,[eax+edi*1+0xc]
64019848:	push   eax
64019849:	call   DWORD PTR ds:0x64024160
6401984f:	mov    eax,DWORD PTR [ebp-0x1c]
64019852:	call   0x64015f19
64019857:	ret    
64019858:	xor    ebx,ebx
6401985a:	mov    edi,DWORD PTR [ebp+0x8]
6401985d:	push   0xa
6401985f:	call   0x6401b1e2
64019864:	pop    ecx
64019865:	ret    
64019866:	mov    eax,DWORD PTR [esp+0x4]
6401986a:	mov    ecx,eax
6401986c:	and    eax,0x1f
6401986f:	sar    ecx,0x5
64019872:	mov    ecx,DWORD PTR [ecx*4+0x6403ab60]
64019879:	shl    eax,0x6
6401987c:	lea    eax,[ecx+eax*1+0xc]
64019880:	push   eax
64019881:	call   DWORD PTR ds:0x64024164
64019887:	ret    
64019888:	int3   
64019889:	int3   
6401988a:	int3   
6401988b:	int3   
6401988c:	int3   
6401988d:	int3   
6401988e:	int3   
6401988f:	int3   
64019890:	push   esi
64019891:	mov    eax,DWORD PTR [esp+0x14]
64019895:	or     eax,eax
64019897:	jne    0x640198c1
64019899:	mov    ecx,DWORD PTR [esp+0x10]
6401989d:	mov    eax,DWORD PTR [esp+0xc]
640198a1:	xor    edx,edx
640198a3:	div    ecx
640198a5:	mov    ebx,eax
640198a7:	mov    eax,DWORD PTR [esp+0x8]
640198ab:	div    ecx
640198ad:	mov    esi,eax
640198af:	mov    eax,ebx
640198b1:	mul    DWORD PTR [esp+0x10]
640198b5:	mov    ecx,eax
640198b7:	mov    eax,esi
640198b9:	mul    DWORD PTR [esp+0x10]
640198bd:	add    edx,ecx
640198bf:	jmp    0x64019908
640198c1:	mov    ecx,eax
640198c3:	mov    ebx,DWORD PTR [esp+0x10]
640198c7:	mov    edx,DWORD PTR [esp+0xc]
640198cb:	mov    eax,DWORD PTR [esp+0x8]
640198cf:	shr    ecx,1
640198d1:	rcr    ebx,1
640198d3:	shr    edx,1
640198d5:	rcr    eax,1
640198d7:	or     ecx,ecx
640198d9:	jne    0x640198cf
640198db:	div    ebx
640198dd:	mov    esi,eax
640198df:	mul    DWORD PTR [esp+0x14]
640198e3:	mov    ecx,eax
640198e5:	mov    eax,DWORD PTR [esp+0x10]
640198e9:	mul    esi
640198eb:	add    edx,ecx
640198ed:	jb     0x640198fd
640198ef:	cmp    edx,DWORD PTR [esp+0xc]
640198f3:	ja     0x640198fd
640198f5:	jb     0x64019906
640198f7:	cmp    eax,DWORD PTR [esp+0x8]
640198fb:	jbe    0x64019906
640198fd:	dec    esi
640198fe:	sub    eax,DWORD PTR [esp+0x10]
64019902:	sbb    edx,DWORD PTR [esp+0x14]
64019906:	xor    ebx,ebx
64019908:	sub    eax,DWORD PTR [esp+0x8]
6401990c:	sbb    edx,DWORD PTR [esp+0xc]
64019910:	neg    edx
64019912:	neg    eax
64019914:	sbb    edx,0x0
64019917:	mov    ecx,edx
64019919:	mov    edx,ebx
6401991b:	mov    ebx,ecx
6401991d:	mov    ecx,eax
6401991f:	mov    eax,esi
64019921:	pop    esi
64019922:	ret    0x10
64019925:	mov    eax,0x64038000
6401992a:	ret    
6401992b:	mov    eax,ds:0x6403ab40
64019930:	test   eax,eax
64019932:	push   esi
64019933:	push   0x14
64019935:	pop    esi
64019936:	jne    0x6401993f
64019938:	mov    eax,0x200
6401993d:	jmp    0x64019945
6401993f:	cmp    eax,esi
64019941:	jge    0x6401994a
64019943:	mov    eax,esi
64019945:	mov    ds:0x6403ab40,eax
6401994a:	push   0x4
6401994c:	push   eax
6401994d:	call   0x64015d2f
64019952:	test   eax,eax
64019954:	pop    ecx
64019955:	pop    ecx
64019956:	mov    ds:0x64039b34,eax
6401995b:	jne    0x6401997b
6401995d:	push   0x4
6401995f:	push   esi
64019960:	mov    DWORD PTR ds:0x6403ab40,esi
64019966:	call   0x64015d2f
6401996b:	test   eax,eax
6401996d:	pop    ecx
6401996e:	pop    ecx
6401996f:	mov    ds:0x64039b34,eax
64019974:	jne    0x6401997b
64019976:	push   0x1a
64019978:	pop    eax
64019979:	pop    esi
6401997a:	ret    
6401997b:	xor    edx,edx
6401997d:	mov    ecx,0x64038000
64019982:	jmp    0x64019989
64019984:	mov    eax,ds:0x64039b34
64019989:	mov    DWORD PTR [edx+eax*1],ecx
6401998c:	add    ecx,0x20
6401998f:	add    edx,0x4
64019992:	cmp    ecx,0x64038280
64019998:	jl     0x64019984
6401999a:	push   0xfffffffe
6401999c:	pop    esi
6401999d:	xor    edx,edx
6401999f:	mov    ecx,0x64038010
640199a4:	push   edi
640199a5:	mov    eax,edx
640199a7:	sar    eax,0x5
640199aa:	mov    eax,DWORD PTR [eax*4+0x6403ab60]
640199b1:	mov    edi,edx
640199b3:	and    edi,0x1f
640199b6:	shl    edi,0x6
640199b9:	mov    eax,DWORD PTR [edi+eax*1]
640199bc:	cmp    eax,0xffffffff
640199bf:	je     0x640199c9
640199c1:	cmp    eax,esi
640199c3:	je     0x640199c9
640199c5:	test   eax,eax
640199c7:	jne    0x640199cb
640199c9:	mov    DWORD PTR [ecx],esi
640199cb:	add    ecx,0x20
640199ce:	inc    edx
640199cf:	cmp    ecx,0x64038070
640199d5:	jl     0x640199a5
640199d7:	pop    edi
640199d8:	xor    eax,eax
640199da:	pop    esi
640199db:	ret    
640199dc:	call   0x64019df2
640199e1:	cmp    BYTE PTR ds:0x64039238,0x0
640199e8:	je     0x640199ef
640199ea:	call   0x6401e8d7
640199ef:	push   DWORD PTR ds:0x64039b34
640199f5:	call   0x6401477f
640199fa:	pop    ecx
640199fb:	ret    
640199fc:	push   esi
640199fd:	mov    esi,DWORD PTR [esp+0x8]
64019a01:	mov    eax,0x64038000
64019a06:	cmp    esi,eax
64019a08:	jb     0x64019a2c
64019a0a:	cmp    esi,0x64038260
64019a10:	ja     0x64019a2c
64019a12:	mov    ecx,esi
64019a14:	sub    ecx,eax
64019a16:	sar    ecx,0x5
64019a19:	add    ecx,0x10
64019a1c:	push   ecx
64019a1d:	call   0x6401b2ba
64019a22:	or     DWORD PTR [esi+0xc],0x8000
64019a29:	pop    ecx
64019a2a:	pop    esi
64019a2b:	ret    
64019a2c:	add    esi,0x20
64019a2f:	push   esi
64019a30:	call   DWORD PTR ds:0x64024160
64019a36:	pop    esi
64019a37:	ret    
64019a38:	mov    eax,DWORD PTR [esp+0x4]
64019a3c:	cmp    eax,0x14
64019a3f:	jge    0x64019a57
64019a41:	add    eax,0x10
64019a44:	push   eax
64019a45:	call   0x6401b2ba
64019a4a:	mov    eax,DWORD PTR [esp+0xc]
64019a4e:	or     DWORD PTR [eax+0xc],0x8000
64019a55:	pop    ecx
64019a56:	ret    
64019a57:	mov    eax,DWORD PTR [esp+0x8]
64019a5b:	add    eax,0x20
64019a5e:	push   eax
64019a5f:	call   DWORD PTR ds:0x64024160
64019a65:	ret    
64019a66:	mov    eax,DWORD PTR [esp+0x4]
64019a6a:	mov    ecx,0x64038000
64019a6f:	cmp    eax,ecx
64019a71:	jb     0x64019a91
64019a73:	cmp    eax,0x64038260
64019a78:	ja     0x64019a91
64019a7a:	and    DWORD PTR [eax+0xc],0xffff7fff
64019a81:	sub    eax,ecx
64019a83:	sar    eax,0x5
64019a86:	add    eax,0x10
64019a89:	push   eax
64019a8a:	call   0x6401b1e2
64019a8f:	pop    ecx
64019a90:	ret    
64019a91:	add    eax,0x20
64019a94:	push   eax
64019a95:	call   DWORD PTR ds:0x64024164
64019a9b:	ret    
64019a9c:	mov    ecx,DWORD PTR [esp+0x4]
64019aa0:	cmp    ecx,0x14
64019aa3:	mov    eax,DWORD PTR [esp+0x8]
64019aa7:	jge    0x64019abb
64019aa9:	and    DWORD PTR [eax+0xc],0xffff7fff
64019ab0:	add    ecx,0x10
64019ab3:	push   ecx
64019ab4:	call   0x6401b1e2
64019ab9:	pop    ecx
64019aba:	ret    
64019abb:	add    eax,0x20
64019abe:	push   eax
64019abf:	call   DWORD PTR ds:0x64024164
64019ac5:	ret    
64019ac6:	int3   
64019ac7:	int3   
64019ac8:	push   ebx
64019ac9:	push   esi
64019aca:	push   edi
64019acb:	mov    edx,DWORD PTR [esp+0x10]
64019acf:	mov    eax,DWORD PTR [esp+0x14]
64019ad3:	mov    ecx,DWORD PTR [esp+0x18]
64019ad7:	push   ebp
64019ad8:	push   edx
64019ad9:	push   eax
64019ada:	push   ecx
64019adb:	push   ecx
64019adc:	push   0x64019b58
64019ae1:	push   DWORD PTR fs:0x0
64019ae8:	mov    eax,ds:0x64037644
64019aed:	xor    eax,esp
64019aef:	mov    DWORD PTR [esp+0x8],eax
64019af3:	mov    DWORD PTR fs:0x0,esp
64019afa:	mov    eax,DWORD PTR [esp+0x30]
64019afe:	mov    ebx,DWORD PTR [eax+0x8]
64019b01:	mov    ecx,DWORD PTR [esp+0x2c]
64019b05:	xor    ebx,DWORD PTR [ecx]
64019b07:	mov    esi,DWORD PTR [eax+0xc]
64019b0a:	cmp    esi,0xfffffffe
64019b0d:	je     0x64019b4a
64019b0f:	mov    edx,DWORD PTR [esp+0x34]
64019b13:	cmp    edx,0xfffffffe
64019b16:	je     0x64019b1c
64019b18:	cmp    esi,edx
64019b1a:	jbe    0x64019b4a
64019b1c:	lea    esi,[esi+esi*2]
64019b1f:	lea    ebx,[ebx+esi*4+0x10]
64019b23:	mov    ecx,DWORD PTR [ebx]
64019b25:	mov    DWORD PTR [eax+0xc],ecx
64019b28:	cmp    DWORD PTR [ebx+0x4],0x0
64019b2c:	jne    0x64019afa
64019b2e:	push   0x101
64019b33:	mov    eax,DWORD PTR [ebx+0x8]
64019b36:	call   0x6401e7ad
64019b3b:	mov    ecx,0x1
64019b40:	mov    eax,DWORD PTR [ebx+0x8]
64019b43:	call   0x6401e7cc
64019b48:	jmp    0x64019afa
64019b4a:	pop    DWORD PTR fs:0x0
64019b51:	add    esp,0x18
64019b54:	pop    edi
64019b55:	pop    esi
64019b56:	pop    ebx
64019b57:	ret    
64019b58:	mov    ecx,DWORD PTR [esp+0x4]
64019b5c:	test   DWORD PTR [ecx+0x4],0x6
64019b63:	mov    eax,0x1
64019b68:	je     0x64019b9d
64019b6a:	mov    eax,DWORD PTR [esp+0x8]
64019b6e:	mov    ecx,DWORD PTR [eax+0x8]
64019b71:	xor    ecx,eax
64019b73:	call   0x64013cc6
64019b78:	push   ebp
64019b79:	mov    ebp,DWORD PTR [eax+0x18]
64019b7c:	push   DWORD PTR [eax+0xc]
64019b7f:	push   DWORD PTR [eax+0x10]
64019b82:	push   DWORD PTR [eax+0x14]
64019b85:	call   0x64019ac8
64019b8a:	add    esp,0xc
64019b8d:	pop    ebp
64019b8e:	mov    eax,DWORD PTR [esp+0x8]
64019b92:	mov    edx,DWORD PTR [esp+0x10]
64019b96:	mov    DWORD PTR [edx],eax
64019b98:	mov    eax,0x3
64019b9d:	ret    
64019b9e:	push   ebp
64019b9f:	mov    ecx,DWORD PTR [esp+0x8]
64019ba3:	mov    ebp,DWORD PTR [ecx]
64019ba5:	push   DWORD PTR [ecx+0x1c]
64019ba8:	push   DWORD PTR [ecx+0x18]
64019bab:	push   DWORD PTR [ecx+0x28]
64019bae:	call   0x64019ac8
64019bb3:	add    esp,0xc
64019bb6:	pop    ebp
64019bb7:	ret    0x4
64019bba:	push   ebp
64019bbb:	push   esi
64019bbc:	push   edi
64019bbd:	push   ebx
64019bbe:	mov    ebp,edx
64019bc0:	xor    eax,eax
64019bc2:	xor    ebx,ebx
64019bc4:	xor    edx,edx
64019bc6:	xor    esi,esi
64019bc8:	xor    edi,edi
64019bca:	call   ecx
64019bcc:	pop    ebx
64019bcd:	pop    edi
64019bce:	pop    esi
64019bcf:	pop    ebp
64019bd0:	ret    
64019bd1:	mov    ebp,edx
64019bd3:	mov    esi,ecx
64019bd5:	mov    eax,ecx
64019bd7:	push   0x1
64019bd9:	call   0x6401e7ad
64019bde:	xor    eax,eax
64019be0:	xor    ebx,ebx
64019be2:	xor    ecx,ecx
64019be4:	xor    edx,edx
64019be6:	xor    edi,edi
64019be8:	jmp    esi
64019bea:	push   ebp
64019beb:	mov    ebp,esp
64019bed:	push   ebx
64019bee:	push   esi
64019bef:	push   edi
64019bf0:	push   0x0
64019bf2:	push   0x0
64019bf4:	push   0x64019bff
64019bf9:	push   ecx
64019bfa:	call   0x64022e1c
64019bff:	pop    edi
64019c00:	pop    esi
64019c01:	pop    ebx
64019c02:	pop    ebp
64019c03:	ret    
64019c04:	push   ebp
64019c05:	mov    ebp,DWORD PTR [esp+0x8]
64019c09:	push   edx
64019c0a:	push   ecx
64019c0b:	push   DWORD PTR [esp+0x14]
64019c0f:	call   0x64019ac8
64019c14:	add    esp,0xc
64019c17:	pop    ebp
64019c18:	ret    0x8
64019c1b:	mov    eax,DWORD PTR [esp+0x4]
64019c1f:	push   esi
64019c20:	xor    esi,esi
64019c22:	cmp    eax,esi
64019c24:	jne    0x64019c43
64019c26:	call   0x64016483
64019c2b:	push   esi
64019c2c:	push   esi
64019c2d:	push   esi
64019c2e:	push   esi
64019c2f:	push   esi
64019c30:	mov    DWORD PTR [eax],0x16
64019c36:	call   0x64013e12
64019c3b:	add    esp,0x14
64019c3e:	or     eax,0xffffffff
64019c41:	pop    esi
64019c42:	ret    
64019c43:	mov    eax,DWORD PTR [eax+0x10]
64019c46:	pop    esi
64019c47:	ret    
64019c48:	push   esi
64019c49:	mov    esi,DWORD PTR [esp+0x8]
64019c4d:	mov    eax,DWORD PTR [esi+0xc]
64019c50:	test   al,0x83
64019c52:	je     0x64019c72
64019c54:	test   al,0x8
64019c56:	je     0x64019c72
64019c58:	push   DWORD PTR [esi+0x8]
64019c5b:	call   0x6401477f
64019c60:	and    DWORD PTR [esi+0xc],0xfffffbf7
64019c67:	xor    eax,eax
64019c69:	pop    ecx
64019c6a:	mov    DWORD PTR [esi],eax
64019c6c:	mov    DWORD PTR [esi+0x8],eax
64019c6f:	mov    DWORD PTR [esi+0x4],eax
64019c72:	pop    esi
64019c73:	ret    
64019c74:	push   ebx
64019c75:	push   esi
64019c76:	mov    esi,DWORD PTR [esp+0xc]
64019c7a:	mov    eax,DWORD PTR [esi+0xc]
64019c7d:	mov    ecx,eax
64019c7f:	and    cl,0x3
64019c82:	xor    ebx,ebx
64019c84:	cmp    cl,0x2
64019c87:	jne    0x64019cc8
64019c89:	test   ax,0x108
64019c8d:	je     0x64019cc8
64019c8f:	mov    eax,DWORD PTR [esi+0x8]
64019c92:	push   edi
64019c93:	mov    edi,DWORD PTR [esi]
64019c95:	sub    edi,eax
64019c97:	test   edi,edi
64019c99:	jle    0x64019cc7
64019c9b:	push   edi
64019c9c:	push   eax
64019c9d:	push   esi
64019c9e:	call   0x64019c1b
64019ca3:	pop    ecx
64019ca4:	push   eax
64019ca5:	call   0x6401b068
64019caa:	add    esp,0xc
64019cad:	cmp    eax,edi
64019caf:	jne    0x64019cc0
64019cb1:	mov    eax,DWORD PTR [esi+0xc]
64019cb4:	test   al,al
64019cb6:	jns    0x64019cc7
64019cb8:	and    eax,0xfffffffd
64019cbb:	mov    DWORD PTR [esi+0xc],eax
64019cbe:	jmp    0x64019cc7
64019cc0:	or     DWORD PTR [esi+0xc],0x20
64019cc4:	or     ebx,0xffffffff
64019cc7:	pop    edi
64019cc8:	mov    eax,DWORD PTR [esi+0x8]
64019ccb:	and    DWORD PTR [esi+0x4],0x0
64019ccf:	mov    DWORD PTR [esi],eax
64019cd1:	pop    esi
64019cd2:	mov    eax,ebx
64019cd4:	pop    ebx
64019cd5:	ret    
64019cd6:	push   esi
64019cd7:	mov    esi,DWORD PTR [esp+0x8]
64019cdb:	test   esi,esi
64019cdd:	jne    0x64019ce8
64019cdf:	push   esi
64019ce0:	call   0x64019d18
64019ce5:	pop    ecx
64019ce6:	pop    esi
64019ce7:	ret    
64019ce8:	push   esi
64019ce9:	call   0x64019c74
64019cee:	test   eax,eax
64019cf0:	pop    ecx
64019cf1:	je     0x64019cf8
64019cf3:	or     eax,0xffffffff
64019cf6:	pop    esi
64019cf7:	ret    
64019cf8:	test   WORD PTR [esi+0xc],0x4000
64019cfe:	je     0x64019d14
64019d00:	push   esi
64019d01:	call   0x64019c1b
64019d06:	push   eax
64019d07:	call   0x6401e976
64019d0c:	pop    ecx
64019d0d:	pop    ecx
64019d0e:	neg    eax
64019d10:	sbb    eax,eax
64019d12:	pop    esi
64019d13:	ret    
64019d14:	xor    eax,eax
64019d16:	pop    esi
64019d17:	ret    
64019d18:	push   0x14
64019d1a:	push   0x6402ba80
64019d1f:	call   0x64015ed4
64019d24:	xor    edi,edi
64019d26:	mov    DWORD PTR [ebp-0x1c],edi
64019d29:	mov    DWORD PTR [ebp-0x24],edi
64019d2c:	push   0x1
64019d2e:	call   0x6401b2ba
64019d33:	pop    ecx
64019d34:	mov    DWORD PTR [ebp-0x4],edi
64019d37:	xor    esi,esi
64019d39:	mov    DWORD PTR [ebp-0x20],esi
64019d3c:	cmp    esi,DWORD PTR ds:0x6403ab40
64019d42:	jge    0x64019dcb
64019d48:	mov    eax,ds:0x64039b34
64019d4d:	lea    eax,[eax+esi*4]
64019d50:	cmp    DWORD PTR [eax],edi
64019d52:	je     0x64019db2
64019d54:	mov    eax,DWORD PTR [eax]
64019d56:	test   BYTE PTR [eax+0xc],0x83
64019d5a:	je     0x64019db2
64019d5c:	push   eax
64019d5d:	push   esi
64019d5e:	call   0x64019a38
64019d63:	pop    ecx
64019d64:	pop    ecx
64019d65:	xor    edx,edx
64019d67:	inc    edx
64019d68:	mov    DWORD PTR [ebp-0x4],edx
64019d6b:	mov    eax,ds:0x64039b34
64019d70:	mov    eax,DWORD PTR [eax+esi*4]
64019d73:	mov    ecx,DWORD PTR [eax+0xc]
64019d76:	test   cl,0x83
64019d79:	je     0x64019daa
64019d7b:	cmp    DWORD PTR [ebp+0x8],edx
64019d7e:	jne    0x64019d91
64019d80:	push   eax
64019d81:	call   0x64019cd6
64019d86:	pop    ecx
64019d87:	cmp    eax,0xffffffff
64019d8a:	je     0x64019daa
64019d8c:	inc    DWORD PTR [ebp-0x1c]
64019d8f:	jmp    0x64019daa
64019d91:	cmp    DWORD PTR [ebp+0x8],edi
64019d94:	jne    0x64019daa
64019d96:	test   cl,0x2
64019d99:	je     0x64019daa
64019d9b:	push   eax
64019d9c:	call   0x64019cd6
64019da1:	pop    ecx
64019da2:	cmp    eax,0xffffffff
64019da5:	jne    0x64019daa
64019da7:	or     DWORD PTR [ebp-0x24],eax
64019daa:	mov    DWORD PTR [ebp-0x4],edi
64019dad:	call   0x64019dba
64019db2:	inc    esi
64019db3:	jmp    0x64019d39
64019db5:	xor    edi,edi
64019db7:	mov    esi,DWORD PTR [ebp-0x20]
64019dba:	mov    eax,ds:0x64039b34
64019dbf:	push   DWORD PTR [eax+esi*4]
64019dc2:	push   esi
64019dc3:	call   0x64019a9c
64019dc8:	pop    ecx
64019dc9:	pop    ecx
64019dca:	ret    
64019dcb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019dd2:	call   0x64019de9
64019dd7:	cmp    DWORD PTR [ebp+0x8],0x1
64019ddb:	mov    eax,DWORD PTR [ebp-0x1c]
64019dde:	je     0x64019de3
64019de0:	mov    eax,DWORD PTR [ebp-0x24]
64019de3:	call   0x64015f19
64019de8:	ret    
64019de9:	push   0x1
64019deb:	call   0x6401b1e2
64019df0:	pop    ecx
64019df1:	ret    
64019df2:	push   0x1
64019df4:	call   0x64019d18
64019df9:	pop    ecx
64019dfa:	ret    
64019dfb:	push   ebp
64019dfc:	mov    ebp,esp
64019dfe:	push   ecx
64019dff:	push   esi
64019e00:	mov    esi,DWORD PTR [ebp+0xc]
64019e03:	push   esi
64019e04:	call   0x64019c1b
64019e09:	mov    DWORD PTR [ebp+0xc],eax
64019e0c:	mov    eax,DWORD PTR [esi+0xc]
64019e0f:	test   al,0x82
64019e11:	pop    ecx
64019e12:	jne    0x64019e2b
64019e14:	call   0x64016483
64019e19:	mov    DWORD PTR [eax],0x9
64019e1f:	or     DWORD PTR [esi+0xc],0x20
64019e23:	or     eax,0xffffffff
64019e26:	jmp    0x64019f58
64019e2b:	test   al,0x40
64019e2d:	je     0x64019e3c
64019e2f:	call   0x64016483
64019e34:	mov    DWORD PTR [eax],0x22
64019e3a:	jmp    0x64019e1f
64019e3c:	push   ebx
64019e3d:	xor    ebx,ebx
64019e3f:	test   al,0x1
64019e41:	je     0x64019e59
64019e43:	test   al,0x10
64019e45:	mov    DWORD PTR [esi+0x4],ebx
64019e48:	je     0x64019ed3
64019e4e:	mov    ecx,DWORD PTR [esi+0x8]
64019e51:	and    eax,0xfffffffe
64019e54:	mov    DWORD PTR [esi],ecx
64019e56:	mov    DWORD PTR [esi+0xc],eax
64019e59:	mov    eax,DWORD PTR [esi+0xc]
64019e5c:	and    eax,0xffffffef
64019e5f:	or     eax,0x2
64019e62:	test   ax,0x10c
64019e66:	mov    DWORD PTR [esi+0xc],eax
64019e69:	mov    DWORD PTR [esi+0x4],ebx
64019e6c:	mov    DWORD PTR [ebp-0x4],ebx
64019e6f:	jne    0x64019e9d
64019e71:	call   0x64019925
64019e76:	add    eax,0x20
64019e79:	cmp    esi,eax
64019e7b:	je     0x64019e89
64019e7d:	call   0x64019925
64019e82:	add    eax,0x40
64019e85:	cmp    esi,eax
64019e87:	jne    0x64019e96
64019e89:	push   DWORD PTR [ebp+0xc]
64019e8c:	call   0x6401ea9b
64019e91:	test   eax,eax
64019e93:	pop    ecx
64019e94:	jne    0x64019e9d
64019e96:	push   esi
64019e97:	call   0x6401ea57
64019e9c:	pop    ecx
64019e9d:	test   WORD PTR [esi+0xc],0x108
64019ea3:	push   edi
64019ea4:	je     0x64019f2a
64019eaa:	mov    eax,DWORD PTR [esi+0x8]
64019ead:	mov    edi,DWORD PTR [esi]
64019eaf:	lea    ecx,[eax+0x1]
64019eb2:	mov    DWORD PTR [esi],ecx
64019eb4:	mov    ecx,DWORD PTR [esi+0x18]
64019eb7:	sub    edi,eax
64019eb9:	dec    ecx
64019eba:	cmp    edi,ebx
64019ebc:	mov    DWORD PTR [esi+0x4],ecx
64019ebf:	jle    0x64019ede
64019ec1:	push   edi
64019ec2:	push   eax
64019ec3:	push   DWORD PTR [ebp+0xc]
64019ec6:	call   0x6401b068
64019ecb:	add    esp,0xc
64019ece:	mov    DWORD PTR [ebp-0x4],eax
64019ed1:	jmp    0x64019f20
64019ed3:	or     eax,0x20
64019ed6:	mov    DWORD PTR [esi+0xc],eax
64019ed9:	or     eax,0xffffffff
64019edc:	jmp    0x64019f57
64019ede:	mov    ecx,DWORD PTR [ebp+0xc]
64019ee1:	cmp    ecx,0xffffffff
64019ee4:	je     0x64019f01
64019ee6:	cmp    ecx,0xfffffffe
64019ee9:	je     0x64019f01
64019eeb:	mov    eax,ecx
64019eed:	and    eax,0x1f
64019ef0:	mov    edx,ecx
64019ef2:	sar    edx,0x5
64019ef5:	shl    eax,0x6
64019ef8:	add    eax,DWORD PTR [edx*4+0x6403ab60]
64019eff:	jmp    0x64019f06
64019f01:	mov    eax,0x64037918
64019f06:	test   BYTE PTR [eax+0x4],0x20
64019f0a:	je     0x64019f20
64019f0c:	push   0x2
64019f0e:	push   ebx
64019f0f:	push   ebx
64019f10:	push   ecx
64019f11:	call   0x640195bb
64019f16:	and    eax,edx
64019f18:	add    esp,0x10
64019f1b:	cmp    eax,0xffffffff
64019f1e:	je     0x64019f45
64019f20:	mov    eax,DWORD PTR [esi+0x8]
64019f23:	mov    cl,BYTE PTR [ebp+0x8]
64019f26:	mov    BYTE PTR [eax],cl
64019f28:	jmp    0x64019f40
64019f2a:	xor    edi,edi
64019f2c:	inc    edi
64019f2d:	push   edi
64019f2e:	lea    eax,[ebp+0x8]
64019f31:	push   eax
64019f32:	push   DWORD PTR [ebp+0xc]
64019f35:	call   0x6401b068
64019f3a:	add    esp,0xc
64019f3d:	mov    DWORD PTR [ebp-0x4],eax
64019f40:	cmp    DWORD PTR [ebp-0x4],edi
64019f43:	je     0x64019f4e
64019f45:	or     DWORD PTR [esi+0xc],0x20
64019f49:	or     eax,0xffffffff
64019f4c:	jmp    0x64019f56
64019f4e:	mov    eax,DWORD PTR [ebp+0x8]
64019f51:	and    eax,0xff
64019f56:	pop    edi
64019f57:	pop    ebx
64019f58:	pop    esi
64019f59:	leave  
64019f5a:	ret    
64019f5b:	test   BYTE PTR [ecx+0xc],0x40
64019f5f:	je     0x64019f67
64019f61:	cmp    DWORD PTR [ecx+0x8],0x0
64019f65:	je     0x64019f8b
64019f67:	dec    DWORD PTR [ecx+0x4]
64019f6a:	js     0x64019f77
64019f6c:	mov    edx,DWORD PTR [ecx]
64019f6e:	mov    BYTE PTR [edx],al
64019f70:	inc    DWORD PTR [ecx]
64019f72:	movzx  eax,al
64019f75:	jmp    0x64019f83
64019f77:	movsx  eax,al
64019f7a:	push   ecx
64019f7b:	push   eax
64019f7c:	call   0x64019dfb
64019f81:	pop    ecx
64019f82:	pop    ecx
64019f83:	cmp    eax,0xffffffff
64019f86:	jne    0x64019f8b
64019f88:	or     DWORD PTR [esi],eax
64019f8a:	ret    
64019f8b:	inc    DWORD PTR [esi]
64019f8d:	ret    
64019f8e:	push   ebp
64019f8f:	mov    ebp,esp
64019f91:	push   esi
64019f92:	mov    esi,eax
64019f94:	jmp    0x64019fa9
64019f96:	mov    ecx,DWORD PTR [ebp+0x10]
64019f99:	mov    al,BYTE PTR [ebp+0x8]
64019f9c:	dec    DWORD PTR [ebp+0xc]
64019f9f:	call   0x64019f5b
64019fa4:	cmp    DWORD PTR [esi],0xffffffff
64019fa7:	je     0x64019faf
64019fa9:	cmp    DWORD PTR [ebp+0xc],0x0
64019fad:	jg     0x64019f96
64019faf:	pop    esi
64019fb0:	pop    ebp
64019fb1:	ret    
64019fb2:	test   BYTE PTR [edi+0xc],0x40
64019fb6:	push   ebx
64019fb7:	push   esi
64019fb8:	mov    esi,eax
64019fba:	mov    ebx,ecx
64019fbc:	je     0x64019ff2
64019fbe:	cmp    DWORD PTR [edi+0x8],0x0
64019fc2:	jne    0x64019ff2
64019fc4:	mov    eax,DWORD PTR [esp+0xc]
64019fc8:	add    DWORD PTR [esi],eax
64019fca:	jmp    0x64019ff9
64019fcc:	mov    al,BYTE PTR [ebx]
64019fce:	dec    DWORD PTR [esp+0xc]
64019fd2:	mov    ecx,edi
64019fd4:	call   0x64019f5b
64019fd9:	inc    ebx
64019fda:	cmp    DWORD PTR [esi],0xffffffff
64019fdd:	jne    0x64019ff2
64019fdf:	call   0x64016483
64019fe4:	cmp    DWORD PTR [eax],0x2a
64019fe7:	jne    0x64019ff9
64019fe9:	mov    ecx,edi
64019feb:	mov    al,0x3f
64019fed:	call   0x64019f5b
64019ff2:	cmp    DWORD PTR [esp+0xc],0x0
64019ff7:	jg     0x64019fcc
64019ff9:	pop    esi
64019ffa:	pop    ebx
64019ffb:	ret    
64019ffc:	push   ebp
64019ffd:	lea    ebp,[esp-0x1f8]
6401a004:	sub    esp,0x278
6401a00a:	mov    eax,ds:0x64037644
6401a00f:	xor    eax,ebp
6401a011:	mov    DWORD PTR [ebp+0x1f4],eax
6401a017:	mov    eax,DWORD PTR [ebp+0x200]
6401a01d:	push   ebx
6401a01e:	mov    ebx,DWORD PTR [ebp+0x204]
6401a024:	push   esi
6401a025:	xor    esi,esi
6401a027:	push   edi
6401a028:	mov    edi,DWORD PTR [ebp+0x20c]
6401a02e:	push   DWORD PTR [ebp+0x208]
6401a034:	lea    ecx,[ebp-0x64]
6401a037:	mov    DWORD PTR [ebp-0x30],eax
6401a03a:	mov    DWORD PTR [ebp-0x2c],edi
6401a03d:	mov    DWORD PTR [ebp-0x4c],esi
6401a040:	mov    DWORD PTR [ebp-0x18],esi
6401a043:	mov    DWORD PTR [ebp-0x40],esi
6401a046:	mov    DWORD PTR [ebp-0x20],esi
6401a049:	mov    DWORD PTR [ebp-0x3c],esi
6401a04c:	mov    DWORD PTR [ebp-0x50],esi
6401a04f:	mov    DWORD PTR [ebp-0x44],esi
6401a052:	call   0x640142e5
6401a057:	cmp    DWORD PTR [ebp-0x30],esi
6401a05a:	jne    0x6401a089
6401a05c:	call   0x64016483
6401a061:	push   esi
6401a062:	push   esi
6401a063:	push   esi
6401a064:	push   esi
6401a065:	mov    DWORD PTR [eax],0x16
6401a06b:	push   esi
6401a06c:	call   0x64013e12
6401a071:	add    esp,0x14
6401a074:	cmp    BYTE PTR [ebp-0x58],0x0
6401a078:	je     0x6401a081
6401a07a:	mov    eax,DWORD PTR [ebp-0x5c]
6401a07d:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a081:	or     eax,0xffffffff
6401a084:	jmp    0x6401a958
6401a089:	mov    eax,DWORD PTR [ebp-0x30]
6401a08c:	test   BYTE PTR [eax+0xc],0x40
6401a090:	jne    0x6401a13a
6401a096:	push   eax
6401a097:	call   0x64019c1b
6401a09c:	cmp    eax,0xffffffff
6401a09f:	pop    ecx
6401a0a0:	je     0x6401a0d8
6401a0a2:	push   DWORD PTR [ebp-0x30]
6401a0a5:	call   0x64019c1b
6401a0aa:	cmp    eax,0xfffffffe
6401a0ad:	pop    ecx
6401a0ae:	je     0x6401a0d8
6401a0b0:	push   DWORD PTR [ebp-0x30]
6401a0b3:	call   0x64019c1b
6401a0b8:	push   DWORD PTR [ebp-0x30]
6401a0bb:	sar    eax,0x5
6401a0be:	lea    esi,[eax*4+0x6403ab60]
6401a0c5:	call   0x64019c1b
6401a0ca:	and    eax,0x1f
6401a0cd:	shl    eax,0x6
6401a0d0:	add    eax,DWORD PTR [esi]
6401a0d2:	pop    ecx
6401a0d3:	pop    ecx
6401a0d4:	xor    esi,esi
6401a0d6:	jmp    0x6401a0dd
6401a0d8:	mov    eax,0x64037918
6401a0dd:	test   BYTE PTR [eax+0x24],0x7f
6401a0e1:	jne    0x6401a05c
6401a0e7:	push   DWORD PTR [ebp-0x30]
6401a0ea:	call   0x64019c1b
6401a0ef:	cmp    eax,0xffffffff
6401a0f2:	pop    ecx
6401a0f3:	je     0x6401a12b
6401a0f5:	push   DWORD PTR [ebp-0x30]
6401a0f8:	call   0x64019c1b
6401a0fd:	cmp    eax,0xfffffffe
6401a100:	pop    ecx
6401a101:	je     0x6401a12b
6401a103:	push   DWORD PTR [ebp-0x30]
6401a106:	call   0x64019c1b
6401a10b:	push   DWORD PTR [ebp-0x30]
6401a10e:	sar    eax,0x5
6401a111:	lea    esi,[eax*4+0x6403ab60]
6401a118:	call   0x64019c1b
6401a11d:	and    eax,0x1f
6401a120:	shl    eax,0x6
6401a123:	add    eax,DWORD PTR [esi]
6401a125:	pop    ecx
6401a126:	pop    ecx
6401a127:	xor    esi,esi
6401a129:	jmp    0x6401a130
6401a12b:	mov    eax,0x64037918
6401a130:	test   BYTE PTR [eax+0x24],0x80
6401a134:	jne    0x6401a05c
6401a13a:	cmp    ebx,esi
6401a13c:	je     0x6401a05c
6401a142:	mov    dl,BYTE PTR [ebx]
6401a144:	xor    ecx,ecx
6401a146:	test   dl,dl
6401a148:	mov    DWORD PTR [ebp-0x34],esi
6401a14b:	mov    DWORD PTR [ebp-0x28],esi
6401a14e:	mov    DWORD PTR [ebp-0x54],esi
6401a151:	mov    BYTE PTR [ebp-0x19],dl
6401a154:	je     0x6401a948
6401a15a:	inc    ebx
6401a15b:	cmp    DWORD PTR [ebp-0x34],0x0
6401a15f:	mov    DWORD PTR [ebp-0x48],ebx
6401a162:	jl     0x6401a948
6401a168:	mov    al,dl
6401a16a:	sub    al,0x20
6401a16c:	cmp    al,0x58
6401a16e:	ja     0x6401a181
6401a170:	movsx  eax,dl
6401a173:	movzx  eax,BYTE PTR [eax+0x64028568]
6401a17a:	and    eax,0xf
6401a17d:	xor    esi,esi
6401a17f:	jmp    0x6401a185
6401a181:	xor    esi,esi
6401a183:	xor    eax,eax
6401a185:	movsx  eax,BYTE PTR [ecx+eax*8+0x64028588]
6401a18d:	push   0x7
6401a18f:	sar    eax,0x4
6401a192:	pop    ecx
6401a193:	cmp    eax,ecx
6401a195:	mov    DWORD PTR [ebp-0x74],eax
6401a198:	ja     0x6401a918
6401a19e:	jmp    DWORD PTR [eax*4+0x6401a970]
6401a1a5:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a1a9:	mov    DWORD PTR [ebp-0x78],esi
6401a1ac:	mov    DWORD PTR [ebp-0x50],esi
6401a1af:	mov    DWORD PTR [ebp-0x40],esi
6401a1b2:	mov    DWORD PTR [ebp-0x3c],esi
6401a1b5:	mov    DWORD PTR [ebp-0x18],esi
6401a1b8:	mov    DWORD PTR [ebp-0x44],esi
6401a1bb:	jmp    0x6401a918
6401a1c0:	movsx  eax,dl
6401a1c3:	sub    eax,0x20
6401a1c6:	je     0x6401a206
6401a1c8:	sub    eax,0x3
6401a1cb:	je     0x6401a1fa
6401a1cd:	sub    eax,0x8
6401a1d0:	je     0x6401a1f1
6401a1d2:	dec    eax
6401a1d3:	dec    eax
6401a1d4:	je     0x6401a1e8
6401a1d6:	sub    eax,0x3
6401a1d9:	jne    0x6401a918
6401a1df:	or     DWORD PTR [ebp-0x18],0x8
6401a1e3:	jmp    0x6401a918
6401a1e8:	or     DWORD PTR [ebp-0x18],0x4
6401a1ec:	jmp    0x6401a918
6401a1f1:	or     DWORD PTR [ebp-0x18],0x1
6401a1f5:	jmp    0x6401a918
6401a1fa:	or     DWORD PTR [ebp-0x18],0x80
6401a201:	jmp    0x6401a918
6401a206:	or     DWORD PTR [ebp-0x18],0x2
6401a20a:	jmp    0x6401a918
6401a20f:	cmp    dl,0x2a
6401a212:	jne    0x6401a234
6401a214:	add    edi,0x4
6401a217:	mov    DWORD PTR [ebp-0x2c],edi
6401a21a:	mov    edi,DWORD PTR [edi-0x4]
6401a21d:	cmp    edi,esi
6401a21f:	mov    DWORD PTR [ebp-0x40],edi
6401a222:	jge    0x6401a918
6401a228:	or     DWORD PTR [ebp-0x18],0x4
6401a22c:	neg    DWORD PTR [ebp-0x40]
6401a22f:	jmp    0x6401a918
6401a234:	mov    eax,DWORD PTR [ebp-0x40]
6401a237:	imul   eax,eax,0xa
6401a23a:	movsx  ecx,dl
6401a23d:	lea    eax,[eax+ecx*1-0x30]
6401a241:	mov    DWORD PTR [ebp-0x40],eax
6401a244:	jmp    0x6401a918
6401a249:	mov    DWORD PTR [ebp-0x20],esi
6401a24c:	jmp    0x6401a918
6401a251:	cmp    dl,0x2a
6401a254:	jne    0x6401a273
6401a256:	add    edi,0x4
6401a259:	mov    DWORD PTR [ebp-0x2c],edi
6401a25c:	mov    edi,DWORD PTR [edi-0x4]
6401a25f:	cmp    edi,esi
6401a261:	mov    DWORD PTR [ebp-0x20],edi
6401a264:	jge    0x6401a918
6401a26a:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a26e:	jmp    0x6401a918
6401a273:	mov    eax,DWORD PTR [ebp-0x20]
6401a276:	imul   eax,eax,0xa
6401a279:	movsx  ecx,dl
6401a27c:	lea    eax,[eax+ecx*1-0x30]
6401a280:	mov    DWORD PTR [ebp-0x20],eax
6401a283:	jmp    0x6401a918
6401a288:	cmp    dl,0x49
6401a28b:	je     0x6401a2d3
6401a28d:	cmp    dl,0x68
6401a290:	je     0x6401a2ca
6401a292:	cmp    dl,0x6c
6401a295:	je     0x6401a2ac
6401a297:	cmp    dl,0x77
6401a29a:	jne    0x6401a918
6401a2a0:	or     DWORD PTR [ebp-0x18],0x800
6401a2a7:	jmp    0x6401a918
6401a2ac:	cmp    BYTE PTR [ebx],0x6c
6401a2af:	jne    0x6401a2c1
6401a2b1:	inc    ebx
6401a2b2:	or     DWORD PTR [ebp-0x18],0x1000
6401a2b9:	mov    DWORD PTR [ebp-0x48],ebx
6401a2bc:	jmp    0x6401a918
6401a2c1:	or     DWORD PTR [ebp-0x18],0x10
6401a2c5:	jmp    0x6401a918
6401a2ca:	or     DWORD PTR [ebp-0x18],0x20
6401a2ce:	jmp    0x6401a918
6401a2d3:	mov    al,BYTE PTR [ebx]
6401a2d5:	cmp    al,0x36
6401a2d7:	jne    0x6401a2f0
6401a2d9:	cmp    BYTE PTR [ebx+0x1],0x34
6401a2dd:	jne    0x6401a2f0
6401a2df:	inc    ebx
6401a2e0:	inc    ebx
6401a2e1:	or     DWORD PTR [ebp-0x18],0x8000
6401a2e8:	mov    DWORD PTR [ebp-0x48],ebx
6401a2eb:	jmp    0x6401a918
6401a2f0:	cmp    al,0x33
6401a2f2:	jne    0x6401a30b
6401a2f4:	cmp    BYTE PTR [ebx+0x1],0x32
6401a2f8:	jne    0x6401a30b
6401a2fa:	inc    ebx
6401a2fb:	inc    ebx
6401a2fc:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401a303:	mov    DWORD PTR [ebp-0x48],ebx
6401a306:	jmp    0x6401a918
6401a30b:	cmp    al,0x64
6401a30d:	je     0x6401a918
6401a313:	cmp    al,0x69
6401a315:	je     0x6401a918
6401a31b:	cmp    al,0x6f
6401a31d:	je     0x6401a918
6401a323:	cmp    al,0x75
6401a325:	je     0x6401a918
6401a32b:	cmp    al,0x78
6401a32d:	je     0x6401a918
6401a333:	cmp    al,0x58
6401a335:	je     0x6401a918
6401a33b:	mov    DWORD PTR [ebp-0x74],esi
6401a33e:	lea    eax,[ebp-0x64]
6401a341:	push   eax
6401a342:	movzx  eax,dl
6401a345:	push   eax
6401a346:	mov    DWORD PTR [ebp-0x44],esi
6401a349:	call   0x640150d7
6401a34e:	pop    ecx
6401a34f:	test   eax,eax
6401a351:	mov    al,BYTE PTR [ebp-0x19]
6401a354:	pop    ecx
6401a355:	je     0x6401a370
6401a357:	mov    ecx,DWORD PTR [ebp-0x30]
6401a35a:	lea    esi,[ebp-0x34]
6401a35d:	call   0x64019f5b
6401a362:	mov    al,BYTE PTR [ebx]
6401a364:	inc    ebx
6401a365:	test   al,al
6401a367:	mov    DWORD PTR [ebp-0x48],ebx
6401a36a:	je     0x6401a931
6401a370:	mov    ecx,DWORD PTR [ebp-0x30]
6401a373:	lea    esi,[ebp-0x34]
6401a376:	call   0x64019f5b
6401a37b:	jmp    0x6401a918
6401a380:	movsx  eax,dl
6401a383:	cmp    eax,0x64
6401a386:	jg     0x6401a4fe
6401a38c:	je     0x6401a57d
6401a392:	cmp    eax,0x53
6401a395:	jg     0x6401a446
6401a39b:	je     0x6401a3f7
6401a39d:	sub    eax,0x41
6401a3a0:	je     0x6401a3b2
6401a3a2:	dec    eax
6401a3a3:	dec    eax
6401a3a4:	je     0x6401a3e6
6401a3a6:	dec    eax
6401a3a7:	dec    eax
6401a3a8:	je     0x6401a3b2
6401a3aa:	dec    eax
6401a3ab:	dec    eax
6401a3ac:	jne    0x6401a800
6401a3b2:	add    dl,0x20
6401a3b5:	mov    DWORD PTR [ebp-0x78],0x1
6401a3bc:	mov    BYTE PTR [ebp-0x19],dl
6401a3bf:	or     DWORD PTR [ebp-0x18],0x40
6401a3c3:	cmp    DWORD PTR [ebp-0x20],esi
6401a3c6:	lea    ebx,[ebp-0x14]
6401a3c9:	mov    eax,0x200
6401a3ce:	mov    DWORD PTR [ebp-0x24],ebx
6401a3d1:	mov    DWORD PTR [ebp-0x68],eax
6401a3d4:	jge    0x6401a5a1
6401a3da:	mov    DWORD PTR [ebp-0x20],0x6
6401a3e1:	jmp    0x6401a5ef
6401a3e6:	test   WORD PTR [ebp-0x18],0x830
6401a3ec:	jne    0x6401a463
6401a3ee:	or     DWORD PTR [ebp-0x18],0x800
6401a3f5:	jmp    0x6401a463
6401a3f7:	test   WORD PTR [ebp-0x18],0x830
6401a3fd:	jne    0x6401a406
6401a3ff:	or     DWORD PTR [ebp-0x18],0x800
6401a406:	mov    ecx,DWORD PTR [ebp-0x20]
6401a409:	cmp    ecx,0xffffffff
6401a40c:	jne    0x6401a413
6401a40e:	mov    ecx,0x7fffffff
6401a413:	add    edi,0x4
6401a416:	test   WORD PTR [ebp-0x18],0x810
6401a41c:	mov    DWORD PTR [ebp-0x2c],edi
6401a41f:	mov    edi,DWORD PTR [edi-0x4]
6401a422:	mov    DWORD PTR [ebp-0x24],edi
6401a425:	je     0x6401a7de
6401a42b:	cmp    edi,esi
6401a42d:	jne    0x6401a437
6401a42f:	mov    eax,ds:0x64038284
6401a434:	mov    DWORD PTR [ebp-0x24],eax
6401a437:	mov    eax,DWORD PTR [ebp-0x24]
6401a43a:	mov    DWORD PTR [ebp-0x44],0x1
6401a441:	jmp    0x6401a7d3
6401a446:	sub    eax,0x58
6401a449:	je     0x6401a688
6401a44f:	dec    eax
6401a450:	dec    eax
6401a451:	je     0x6401a4b0
6401a453:	sub    eax,ecx
6401a455:	je     0x6401a3bf
6401a45b:	dec    eax
6401a45c:	dec    eax
6401a45d:	jne    0x6401a800
6401a463:	add    edi,0x4
6401a466:	test   WORD PTR [ebp-0x18],0x810
6401a46c:	mov    DWORD PTR [ebp-0x2c],edi
6401a46f:	je     0x6401a498
6401a471:	movzx  eax,WORD PTR [edi-0x4]
6401a475:	push   eax
6401a476:	push   0x200
6401a47b:	lea    eax,[ebp-0x14]
6401a47e:	push   eax
6401a47f:	lea    eax,[ebp-0x28]
6401a482:	push   eax
6401a483:	call   0x6401ec6e
6401a488:	add    esp,0x10
6401a48b:	test   eax,eax
6401a48d:	je     0x6401a4a5
6401a48f:	mov    DWORD PTR [ebp-0x50],0x1
6401a496:	jmp    0x6401a4a5
6401a498:	mov    al,BYTE PTR [edi-0x4]
6401a49b:	mov    BYTE PTR [ebp-0x14],al
6401a49e:	mov    DWORD PTR [ebp-0x28],0x1
6401a4a5:	lea    eax,[ebp-0x14]
6401a4a8:	mov    DWORD PTR [ebp-0x24],eax
6401a4ab:	jmp    0x6401a800
6401a4b0:	mov    eax,DWORD PTR [edi]
6401a4b2:	add    edi,0x4
6401a4b5:	cmp    eax,esi
6401a4b7:	mov    DWORD PTR [ebp-0x2c],edi
6401a4ba:	je     0x6401a4ea
6401a4bc:	mov    ecx,DWORD PTR [eax+0x4]
6401a4bf:	cmp    ecx,esi
6401a4c1:	je     0x6401a4ea
6401a4c3:	test   WORD PTR [ebp-0x18],0x800
6401a4c9:	movsx  eax,WORD PTR [eax]
6401a4cc:	mov    DWORD PTR [ebp-0x24],ecx
6401a4cf:	je     0x6401a4e2
6401a4d1:	cdq    
6401a4d2:	sub    eax,edx
6401a4d4:	sar    eax,1
6401a4d6:	mov    DWORD PTR [ebp-0x44],0x1
6401a4dd:	jmp    0x6401a7fd
6401a4e2:	mov    DWORD PTR [ebp-0x44],esi
6401a4e5:	jmp    0x6401a7fd
6401a4ea:	mov    eax,ds:0x64038280
6401a4ef:	mov    DWORD PTR [ebp-0x24],eax
6401a4f2:	push   eax
6401a4f3:	call   0x64015510
6401a4f8:	pop    ecx
6401a4f9:	jmp    0x6401a7fd
6401a4fe:	cmp    eax,0x70
6401a501:	jg     0x6401a68d
6401a507:	je     0x6401a681
6401a50d:	cmp    eax,0x65
6401a510:	jl     0x6401a800
6401a516:	cmp    eax,0x67
6401a519:	jle    0x6401a3bf
6401a51f:	cmp    eax,0x69
6401a522:	je     0x6401a57d
6401a524:	cmp    eax,0x6e
6401a527:	je     0x6401a548
6401a529:	cmp    eax,0x6f
6401a52c:	jne    0x6401a800
6401a532:	test   BYTE PTR [ebp-0x18],0x80
6401a536:	mov    DWORD PTR [ebp-0x28],0x8
6401a53d:	je     0x6401a588
6401a53f:	or     DWORD PTR [ebp-0x18],0x200
6401a546:	jmp    0x6401a588
6401a548:	mov    esi,DWORD PTR [edi]
6401a54a:	add    edi,0x4
6401a54d:	mov    DWORD PTR [ebp-0x2c],edi
6401a550:	call   0x6401eaf9
6401a555:	test   eax,eax
6401a557:	je     0x6401a931
6401a55d:	test   BYTE PTR [ebp-0x18],0x20
6401a561:	je     0x6401a56c
6401a563:	mov    ax,WORD PTR [ebp-0x34]
6401a567:	mov    WORD PTR [esi],ax
6401a56a:	jmp    0x6401a571
6401a56c:	mov    eax,DWORD PTR [ebp-0x34]
6401a56f:	mov    DWORD PTR [esi],eax
6401a571:	mov    DWORD PTR [ebp-0x50],0x1
6401a578:	jmp    0x6401a905
6401a57d:	or     DWORD PTR [ebp-0x18],0x40
6401a581:	mov    DWORD PTR [ebp-0x28],0xa
6401a588:	mov    ecx,DWORD PTR [ebp-0x18]
6401a58b:	test   cx,cx
6401a58e:	jns    0x6401a6d7
6401a594:	mov    eax,DWORD PTR [edi]
6401a596:	mov    edx,DWORD PTR [edi+0x4]
6401a599:	add    edi,0x8
6401a59c:	jmp    0x6401a70c
6401a5a1:	jne    0x6401a5b1
6401a5a3:	cmp    dl,0x67
6401a5a6:	jne    0x6401a5ef
6401a5a8:	mov    DWORD PTR [ebp-0x20],0x1
6401a5af:	jmp    0x6401a5ef
6401a5b1:	cmp    DWORD PTR [ebp-0x20],eax
6401a5b4:	jle    0x6401a5b9
6401a5b6:	mov    DWORD PTR [ebp-0x20],eax
6401a5b9:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a5c0:	jle    0x6401a5ef
6401a5c2:	mov    esi,DWORD PTR [ebp-0x20]
6401a5c5:	add    esi,0x15d
6401a5cb:	push   esi
6401a5cc:	call   0x64015cef
6401a5d1:	test   eax,eax
6401a5d3:	mov    dl,BYTE PTR [ebp-0x19]
6401a5d6:	pop    ecx
6401a5d7:	mov    DWORD PTR [ebp-0x54],eax
6401a5da:	je     0x6401a5e6
6401a5dc:	mov    DWORD PTR [ebp-0x24],eax
6401a5df:	mov    DWORD PTR [ebp-0x68],esi
6401a5e2:	mov    ebx,eax
6401a5e4:	jmp    0x6401a5ed
6401a5e6:	mov    DWORD PTR [ebp-0x20],0xa3
6401a5ed:	xor    esi,esi
6401a5ef:	mov    eax,DWORD PTR [edi]
6401a5f1:	add    edi,0x8
6401a5f4:	mov    DWORD PTR [ebp-0x80],eax
6401a5f7:	mov    eax,DWORD PTR [edi-0x4]
6401a5fa:	mov    DWORD PTR [ebp-0x7c],eax
6401a5fd:	lea    eax,[ebp-0x64]
6401a600:	push   eax
6401a601:	push   DWORD PTR [ebp-0x78]
6401a604:	movsx  eax,dl
6401a607:	push   DWORD PTR [ebp-0x20]
6401a60a:	mov    DWORD PTR [ebp-0x2c],edi
6401a60d:	push   eax
6401a60e:	push   DWORD PTR [ebp-0x68]
6401a611:	lea    eax,[ebp-0x80]
6401a614:	push   ebx
6401a615:	push   eax
6401a616:	push   DWORD PTR ds:0x64038598
6401a61c:	call   0x640175ce
6401a621:	pop    ecx
6401a622:	call   eax
6401a624:	mov    edi,DWORD PTR [ebp-0x18]
6401a627:	add    esp,0x1c
6401a62a:	and    edi,0x80
6401a630:	je     0x6401a64c
6401a632:	cmp    DWORD PTR [ebp-0x20],esi
6401a635:	jne    0x6401a64c
6401a637:	lea    eax,[ebp-0x64]
6401a63a:	push   eax
6401a63b:	push   ebx
6401a63c:	push   DWORD PTR ds:0x640385a4
6401a642:	call   0x640175ce
6401a647:	pop    ecx
6401a648:	call   eax
6401a64a:	pop    ecx
6401a64b:	pop    ecx
6401a64c:	cmp    BYTE PTR [ebp-0x19],0x67
6401a650:	jne    0x6401a66b
6401a652:	cmp    edi,esi
6401a654:	jne    0x6401a66b
6401a656:	lea    eax,[ebp-0x64]
6401a659:	push   eax
6401a65a:	push   ebx
6401a65b:	push   DWORD PTR ds:0x640385a0
6401a661:	call   0x640175ce
6401a666:	pop    ecx
6401a667:	call   eax
6401a669:	pop    ecx
6401a66a:	pop    ecx
6401a66b:	cmp    BYTE PTR [ebx],0x2d
6401a66e:	jne    0x6401a67b
6401a670:	or     DWORD PTR [ebp-0x18],0x100
6401a677:	inc    ebx
6401a678:	mov    DWORD PTR [ebp-0x24],ebx
6401a67b:	push   ebx
6401a67c:	jmp    0x6401a4f3
6401a681:	mov    DWORD PTR [ebp-0x20],0x8
6401a688:	mov    DWORD PTR [ebp-0x4c],ecx
6401a68b:	jmp    0x6401a6ae
6401a68d:	sub    eax,0x73
6401a690:	je     0x6401a406
6401a696:	dec    eax
6401a697:	dec    eax
6401a698:	je     0x6401a581
6401a69e:	sub    eax,0x3
6401a6a1:	jne    0x6401a800
6401a6a7:	mov    DWORD PTR [ebp-0x4c],0x27
6401a6ae:	test   BYTE PTR [ebp-0x18],0x80
6401a6b2:	mov    DWORD PTR [ebp-0x28],0x10
6401a6b9:	je     0x6401a588
6401a6bf:	mov    al,BYTE PTR [ebp-0x4c]
6401a6c2:	add    al,0x51
6401a6c4:	mov    BYTE PTR [ebp-0x38],0x30
6401a6c8:	mov    BYTE PTR [ebp-0x37],al
6401a6cb:	mov    DWORD PTR [ebp-0x3c],0x2
6401a6d2:	jmp    0x6401a588
6401a6d7:	test   cx,0x1000
6401a6dc:	jne    0x6401a594
6401a6e2:	add    edi,0x4
6401a6e5:	test   cl,0x20
6401a6e8:	je     0x6401a6ff
6401a6ea:	test   cl,0x40
6401a6ed:	mov    DWORD PTR [ebp-0x2c],edi
6401a6f0:	je     0x6401a6f8
6401a6f2:	movsx  eax,WORD PTR [edi-0x4]
6401a6f6:	jmp    0x6401a6fc
6401a6f8:	movzx  eax,WORD PTR [edi-0x4]
6401a6fc:	cdq    
6401a6fd:	jmp    0x6401a70f
6401a6ff:	test   cl,0x40
6401a702:	mov    eax,DWORD PTR [edi-0x4]
6401a705:	je     0x6401a70a
6401a707:	cdq    
6401a708:	jmp    0x6401a70c
6401a70a:	xor    edx,edx
6401a70c:	mov    DWORD PTR [ebp-0x2c],edi
6401a70f:	test   cl,0x40
6401a712:	je     0x6401a72c
6401a714:	cmp    edx,esi
6401a716:	jg     0x6401a72c
6401a718:	jl     0x6401a71e
6401a71a:	cmp    eax,esi
6401a71c:	jae    0x6401a72c
6401a71e:	neg    eax
6401a720:	adc    edx,0x0
6401a723:	neg    edx
6401a725:	or     DWORD PTR [ebp-0x18],0x100
6401a72c:	test   WORD PTR [ebp-0x18],0x9000
6401a732:	mov    ebx,edx
6401a734:	mov    edi,eax
6401a736:	jne    0x6401a73a
6401a738:	xor    ebx,ebx
6401a73a:	cmp    DWORD PTR [ebp-0x20],0x0
6401a73e:	jge    0x6401a749
6401a740:	mov    DWORD PTR [ebp-0x20],0x1
6401a747:	jmp    0x6401a75a
6401a749:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401a74d:	mov    eax,0x200
6401a752:	cmp    DWORD PTR [ebp-0x20],eax
6401a755:	jle    0x6401a75a
6401a757:	mov    DWORD PTR [ebp-0x20],eax
6401a75a:	mov    eax,edi
6401a75c:	or     eax,ebx
6401a75e:	jne    0x6401a763
6401a760:	and    DWORD PTR [ebp-0x3c],eax
6401a763:	lea    esi,[ebp+0x1eb]
6401a769:	mov    eax,DWORD PTR [ebp-0x20]
6401a76c:	dec    DWORD PTR [ebp-0x20]
6401a76f:	test   eax,eax
6401a771:	jg     0x6401a779
6401a773:	mov    eax,edi
6401a775:	or     eax,ebx
6401a777:	je     0x6401a79d
6401a779:	mov    eax,DWORD PTR [ebp-0x28]
6401a77c:	cdq    
6401a77d:	push   edx
6401a77e:	push   eax
6401a77f:	push   ebx
6401a780:	push   edi
6401a781:	call   0x64019890
6401a786:	add    ecx,0x30
6401a789:	cmp    ecx,0x39
6401a78c:	mov    DWORD PTR [ebp-0x68],ebx
6401a78f:	mov    edi,eax
6401a791:	mov    ebx,edx
6401a793:	jle    0x6401a798
6401a795:	add    ecx,DWORD PTR [ebp-0x4c]
6401a798:	mov    BYTE PTR [esi],cl
6401a79a:	dec    esi
6401a79b:	jmp    0x6401a769
6401a79d:	lea    eax,[ebp+0x1eb]
6401a7a3:	sub    eax,esi
6401a7a5:	inc    esi
6401a7a6:	test   WORD PTR [ebp-0x18],0x200
6401a7ac:	mov    DWORD PTR [ebp-0x28],eax
6401a7af:	mov    DWORD PTR [ebp-0x24],esi
6401a7b2:	je     0x6401a800
6401a7b4:	test   eax,eax
6401a7b6:	je     0x6401a7bf
6401a7b8:	mov    ecx,esi
6401a7ba:	cmp    BYTE PTR [ecx],0x30
6401a7bd:	je     0x6401a800
6401a7bf:	dec    DWORD PTR [ebp-0x24]
6401a7c2:	mov    ecx,DWORD PTR [ebp-0x24]
6401a7c5:	mov    BYTE PTR [ecx],0x30
6401a7c8:	inc    eax
6401a7c9:	jmp    0x6401a7fd
6401a7cb:	dec    ecx
6401a7cc:	cmp    WORD PTR [eax],si
6401a7cf:	je     0x6401a7d7
6401a7d1:	inc    eax
6401a7d2:	inc    eax
6401a7d3:	cmp    ecx,esi
6401a7d5:	jne    0x6401a7cb
6401a7d7:	sub    eax,DWORD PTR [ebp-0x24]
6401a7da:	sar    eax,1
6401a7dc:	jmp    0x6401a7fd
6401a7de:	cmp    edi,esi
6401a7e0:	jne    0x6401a7ea
6401a7e2:	mov    eax,ds:0x64038280
6401a7e7:	mov    DWORD PTR [ebp-0x24],eax
6401a7ea:	mov    eax,DWORD PTR [ebp-0x24]
6401a7ed:	jmp    0x6401a7f6
6401a7ef:	dec    ecx
6401a7f0:	cmp    BYTE PTR [eax],0x0
6401a7f3:	je     0x6401a7fa
6401a7f5:	inc    eax
6401a7f6:	cmp    ecx,esi
6401a7f8:	jne    0x6401a7ef
6401a7fa:	sub    eax,DWORD PTR [ebp-0x24]
6401a7fd:	mov    DWORD PTR [ebp-0x28],eax
6401a800:	cmp    DWORD PTR [ebp-0x50],0x0
6401a804:	jne    0x6401a905
6401a80a:	mov    eax,DWORD PTR [ebp-0x18]
6401a80d:	test   al,0x40
6401a80f:	je     0x6401a836
6401a811:	test   ax,0x100
6401a815:	je     0x6401a81d
6401a817:	mov    BYTE PTR [ebp-0x38],0x2d
6401a81b:	jmp    0x6401a82f
6401a81d:	test   al,0x1
6401a81f:	je     0x6401a827
6401a821:	mov    BYTE PTR [ebp-0x38],0x2b
6401a825:	jmp    0x6401a82f
6401a827:	test   al,0x2
6401a829:	je     0x6401a836
6401a82b:	mov    BYTE PTR [ebp-0x38],0x20
6401a82f:	mov    DWORD PTR [ebp-0x3c],0x1
6401a836:	mov    ebx,DWORD PTR [ebp-0x40]
6401a839:	sub    ebx,DWORD PTR [ebp-0x28]
6401a83c:	sub    ebx,DWORD PTR [ebp-0x3c]
6401a83f:	test   BYTE PTR [ebp-0x18],0xc
6401a843:	jne    0x6401a856
6401a845:	push   DWORD PTR [ebp-0x30]
6401a848:	lea    eax,[ebp-0x34]
6401a84b:	push   ebx
6401a84c:	push   0x20
6401a84e:	call   0x64019f8e
6401a853:	add    esp,0xc
6401a856:	push   DWORD PTR [ebp-0x3c]
6401a859:	mov    edi,DWORD PTR [ebp-0x30]
6401a85c:	lea    eax,[ebp-0x34]
6401a85f:	lea    ecx,[ebp-0x38]
6401a862:	call   0x64019fb2
6401a867:	test   BYTE PTR [ebp-0x18],0x8
6401a86b:	pop    ecx
6401a86c:	je     0x6401a883
6401a86e:	test   BYTE PTR [ebp-0x18],0x4
6401a872:	jne    0x6401a883
6401a874:	push   edi
6401a875:	push   ebx
6401a876:	push   0x30
6401a878:	lea    eax,[ebp-0x34]
6401a87b:	call   0x64019f8e
6401a880:	add    esp,0xc
6401a883:	cmp    DWORD PTR [ebp-0x44],0x0
6401a887:	mov    eax,DWORD PTR [ebp-0x28]
6401a88a:	je     0x6401a8dd
6401a88c:	test   eax,eax
6401a88e:	jle    0x6401a8dd
6401a890:	mov    esi,DWORD PTR [ebp-0x24]
6401a893:	mov    DWORD PTR [ebp-0x68],eax
6401a896:	movzx  eax,WORD PTR [esi]
6401a899:	dec    DWORD PTR [ebp-0x68]
6401a89c:	push   eax
6401a89d:	push   0x6
6401a89f:	lea    eax,[ebp+0x1ec]
6401a8a5:	push   eax
6401a8a6:	lea    eax,[ebp-0x70]
6401a8a9:	inc    esi
6401a8aa:	push   eax
6401a8ab:	inc    esi
6401a8ac:	call   0x6401ec6e
6401a8b1:	add    esp,0x10
6401a8b4:	test   eax,eax
6401a8b6:	jne    0x6401a8d7
6401a8b8:	cmp    DWORD PTR [ebp-0x70],eax
6401a8bb:	je     0x6401a8d7
6401a8bd:	push   DWORD PTR [ebp-0x70]
6401a8c0:	lea    eax,[ebp-0x34]
6401a8c3:	lea    ecx,[ebp+0x1ec]
6401a8c9:	call   0x64019fb2
6401a8ce:	cmp    DWORD PTR [ebp-0x68],0x0
6401a8d2:	pop    ecx
6401a8d3:	jne    0x6401a896
6401a8d5:	jmp    0x6401a8ea
6401a8d7:	or     DWORD PTR [ebp-0x34],0xffffffff
6401a8db:	jmp    0x6401a8ea
6401a8dd:	mov    ecx,DWORD PTR [ebp-0x24]
6401a8e0:	push   eax
6401a8e1:	lea    eax,[ebp-0x34]
6401a8e4:	call   0x64019fb2
6401a8e9:	pop    ecx
6401a8ea:	cmp    DWORD PTR [ebp-0x34],0x0
6401a8ee:	jl     0x6401a905
6401a8f0:	test   BYTE PTR [ebp-0x18],0x4
6401a8f4:	je     0x6401a905
6401a8f6:	push   edi
6401a8f7:	push   ebx
6401a8f8:	push   0x20
6401a8fa:	lea    eax,[ebp-0x34]
6401a8fd:	call   0x64019f8e
6401a902:	add    esp,0xc
6401a905:	cmp    DWORD PTR [ebp-0x54],0x0
6401a909:	je     0x6401a918
6401a90b:	push   DWORD PTR [ebp-0x54]
6401a90e:	call   0x6401477f
6401a913:	and    DWORD PTR [ebp-0x54],0x0
6401a917:	pop    ecx
6401a918:	mov    ebx,DWORD PTR [ebp-0x48]
6401a91b:	mov    al,BYTE PTR [ebx]
6401a91d:	test   al,al
6401a91f:	mov    BYTE PTR [ebp-0x19],al
6401a922:	je     0x6401a948
6401a924:	mov    ecx,DWORD PTR [ebp-0x74]
6401a927:	mov    edi,DWORD PTR [ebp-0x2c]
6401a92a:	mov    dl,al
6401a92c:	jmp    0x6401a15a
6401a931:	call   0x64016483
6401a936:	mov    DWORD PTR [eax],0x16
6401a93c:	xor    eax,eax
6401a93e:	push   eax
6401a93f:	push   eax
6401a940:	push   eax
6401a941:	push   eax
6401a942:	push   eax
6401a943:	jmp    0x6401a06c
6401a948:	cmp    BYTE PTR [ebp-0x58],0x0
6401a94c:	je     0x6401a955
6401a94e:	mov    eax,DWORD PTR [ebp-0x5c]
6401a951:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a955:	mov    eax,DWORD PTR [ebp-0x34]
6401a958:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401a95e:	pop    edi
6401a95f:	pop    esi
6401a960:	xor    ecx,ebp
6401a962:	pop    ebx
6401a963:	call   0x64013cc6
6401a968:	add    ebp,0x1f8
6401a96e:	leave  
6401a96f:	ret    
6401a970:	mov    ds:0xa1a56401,eax
6401a976:	add    DWORD PTR [eax+eax*8-0x5f],esp
6401a97a:	add    DWORD PTR [edi+ecx*1-0x5e],esp
6401a97e:	add    DWORD PTR [ecx+ecx*2-0x5e],esp
6401a982:	add    DWORD PTR [ecx+edx*2-0x5e],esp
6401a986:	add    DWORD PTR [eax+ecx*4-0x5e],esp
6401a98a:	add    DWORD PTR [eax+eax*4-0x5d],esp
6401a98e:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401a992:	in     al,dx
6401a993:	sub    esp,0x18
6401a996:	push   ebx
6401a997:	push   DWORD PTR [ebp+0x10]
6401a99a:	lea    ecx,[ebp-0x18]
6401a99d:	call   0x640142e5
6401a9a2:	mov    ebx,DWORD PTR [ebp+0x8]
6401a9a5:	lea    eax,[ebx+0x1]
6401a9a8:	cmp    eax,0x100
6401a9ad:	ja     0x6401a9be
6401a9af:	mov    eax,DWORD PTR [ebp-0x18]
6401a9b2:	mov    eax,DWORD PTR [eax+0xc8]
6401a9b8:	movzx  eax,WORD PTR [eax+ebx*2]
6401a9bc:	jmp    0x6401aa33
6401a9be:	mov    DWORD PTR [ebp+0x8],ebx
6401a9c1:	sar    DWORD PTR [ebp+0x8],0x8
6401a9c5:	lea    eax,[ebp-0x18]
6401a9c8:	push   eax
6401a9c9:	mov    eax,DWORD PTR [ebp+0x8]
6401a9cc:	and    eax,0xff
6401a9d1:	push   eax
6401a9d2:	call   0x640150d7
6401a9d7:	test   eax,eax
6401a9d9:	pop    ecx
6401a9da:	pop    ecx
6401a9db:	je     0x6401a9ef
6401a9dd:	mov    al,BYTE PTR [ebp+0x8]
6401a9e0:	push   0x2
6401a9e2:	mov    BYTE PTR [ebp-0x8],al
6401a9e5:	mov    BYTE PTR [ebp-0x7],bl
6401a9e8:	mov    BYTE PTR [ebp-0x6],0x0
6401a9ec:	pop    ecx
6401a9ed:	jmp    0x6401a9f9
6401a9ef:	xor    ecx,ecx
6401a9f1:	mov    BYTE PTR [ebp-0x8],bl
6401a9f4:	mov    BYTE PTR [ebp-0x7],0x0
6401a9f8:	inc    ecx
6401a9f9:	mov    eax,DWORD PTR [ebp-0x18]
6401a9fc:	push   0x1
6401a9fe:	push   DWORD PTR [eax+0x14]
6401aa01:	push   DWORD PTR [eax+0x4]
6401aa04:	lea    eax,[ebp-0x4]
6401aa07:	push   eax
6401aa08:	push   ecx
6401aa09:	lea    eax,[ebp-0x8]
6401aa0c:	push   eax
6401aa0d:	lea    eax,[ebp-0x18]
6401aa10:	push   0x1
6401aa12:	push   eax
6401aa13:	call   0x6401df91
6401aa18:	add    esp,0x20
6401aa1b:	test   eax,eax
6401aa1d:	jne    0x6401aa2f
6401aa1f:	cmp    BYTE PTR [ebp-0xc],al
6401aa22:	je     0x6401aa2b
6401aa24:	mov    eax,DWORD PTR [ebp-0x10]
6401aa27:	and    DWORD PTR [eax+0x70],0xfffffffd
6401aa2b:	xor    eax,eax
6401aa2d:	jmp    0x6401aa43
6401aa2f:	movzx  eax,WORD PTR [ebp-0x4]
6401aa33:	and    eax,DWORD PTR [ebp+0xc]
6401aa36:	cmp    BYTE PTR [ebp-0xc],0x0
6401aa3a:	je     0x6401aa43
6401aa3c:	mov    ecx,DWORD PTR [ebp-0x10]
6401aa3f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401aa43:	pop    ebx
6401aa44:	leave  
6401aa45:	ret    
6401aa46:	push   ebp
6401aa47:	lea    ebp,[esp-0x514]
6401aa4e:	sub    esp,0x590
6401aa54:	mov    eax,ds:0x64037644
6401aa59:	xor    eax,ebp
6401aa5b:	mov    DWORD PTR [ebp+0x510],eax
6401aa61:	mov    eax,DWORD PTR [ebp+0x520]
6401aa67:	push   esi
6401aa68:	xor    esi,esi
6401aa6a:	cmp    DWORD PTR [ebp+0x524],esi
6401aa70:	mov    DWORD PTR [ebp-0x64],eax
6401aa73:	mov    DWORD PTR [ebp-0x60],esi
6401aa76:	mov    DWORD PTR [ebp-0x68],esi
6401aa79:	jne    0x6401aa82
6401aa7b:	xor    eax,eax
6401aa7d:	jmp    0x6401b052
6401aa82:	cmp    eax,esi
6401aa84:	jne    0x6401aaad
6401aa86:	call   0x64016496
6401aa8b:	mov    DWORD PTR [eax],esi
6401aa8d:	call   0x64016483
6401aa92:	push   esi
6401aa93:	push   esi
6401aa94:	push   esi
6401aa95:	push   esi
6401aa96:	push   esi
6401aa97:	mov    DWORD PTR [eax],0x16
6401aa9d:	call   0x64013e12
6401aaa2:	add    esp,0x14
6401aaa5:	or     eax,0xffffffff
6401aaa8:	jmp    0x6401b052
6401aaad:	push   ebx
6401aaae:	push   edi
6401aaaf:	mov    edi,DWORD PTR [ebp+0x51c]
6401aab5:	mov    eax,edi
6401aab7:	sar    eax,0x5
6401aaba:	lea    esi,[eax*4+0x6403ab60]
6401aac1:	mov    eax,DWORD PTR [esi]
6401aac3:	and    edi,0x1f
6401aac6:	shl    edi,0x6
6401aac9:	add    eax,edi
6401aacb:	mov    bl,BYTE PTR [eax+0x24]
6401aace:	add    bl,bl
6401aad0:	sar    bl,1
6401aad2:	cmp    bl,0x2
6401aad5:	mov    DWORD PTR [ebp-0x70],esi
6401aad8:	mov    BYTE PTR [ebp-0x71],bl
6401aadb:	je     0x6401aae2
6401aadd:	cmp    bl,0x1
6401aae0:	jne    0x6401ab15
6401aae2:	mov    ecx,DWORD PTR [ebp+0x524]
6401aae8:	not    ecx
6401aaea:	test   cl,0x1
6401aaed:	jne    0x6401ab15
6401aaef:	call   0x64016496
6401aaf4:	xor    esi,esi
6401aaf6:	mov    DWORD PTR [eax],esi
6401aaf8:	call   0x64016483
6401aafd:	push   esi
6401aafe:	push   esi
6401aaff:	push   esi
6401ab00:	push   esi
6401ab01:	push   esi
6401ab02:	mov    DWORD PTR [eax],0x16
6401ab08:	call   0x64013e12
6401ab0d:	add    esp,0x14
6401ab10:	jmp    0x6401b045
6401ab15:	test   BYTE PTR [eax+0x4],0x20
6401ab19:	je     0x6401ab2f
6401ab1b:	push   0x2
6401ab1d:	push   0x0
6401ab1f:	push   0x0
6401ab21:	push   DWORD PTR [ebp+0x51c]
6401ab27:	call   0x64019538
6401ab2c:	add    esp,0x10
6401ab2f:	push   DWORD PTR [ebp+0x51c]
6401ab35:	call   0x6401ea9b
6401ab3a:	test   eax,eax
6401ab3c:	pop    ecx
6401ab3d:	je     0x6401ad7c
6401ab43:	mov    eax,DWORD PTR [esi]
6401ab45:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401ab4a:	je     0x6401ad7c
6401ab50:	call   0x640177ea
6401ab55:	mov    eax,DWORD PTR [eax+0x6c]
6401ab58:	xor    ecx,ecx
6401ab5a:	cmp    DWORD PTR [eax+0x14],ecx
6401ab5d:	lea    eax,[ebp-0x7c]
6401ab60:	sete   cl
6401ab63:	push   eax
6401ab64:	mov    eax,DWORD PTR [esi]
6401ab66:	push   DWORD PTR [edi+eax*1]
6401ab69:	mov    DWORD PTR [ebp-0x78],ecx
6401ab6c:	call   DWORD PTR ds:0x64024140
6401ab72:	test   eax,eax
6401ab74:	je     0x6401ad7c
6401ab7a:	xor    ecx,ecx
6401ab7c:	cmp    DWORD PTR [ebp-0x78],ecx
6401ab7f:	je     0x6401ab89
6401ab81:	test   bl,bl
6401ab83:	je     0x6401ad7e
6401ab89:	call   DWORD PTR ds:0x64024144
6401ab8f:	mov    ebx,DWORD PTR [ebp-0x64]
6401ab92:	mov    DWORD PTR [ebp-0x7c],eax
6401ab95:	xor    eax,eax
6401ab97:	cmp    DWORD PTR [ebp+0x524],eax
6401ab9d:	mov    DWORD PTR [ebp-0x5c],eax
6401aba0:	jbe    0x6401afed
6401aba6:	mov    DWORD PTR [ebp-0x54],eax
6401aba9:	mov    al,BYTE PTR [ebp-0x71]
6401abac:	test   al,al
6401abae:	jne    0x6401acf1
6401abb4:	mov    cl,BYTE PTR [ebx]
6401abb6:	mov    esi,DWORD PTR [ebp-0x70]
6401abb9:	xor    eax,eax
6401abbb:	cmp    cl,0xa
6401abbe:	sete   al
6401abc1:	mov    DWORD PTR [ebp-0x78],eax
6401abc4:	mov    eax,DWORD PTR [esi]
6401abc6:	add    eax,edi
6401abc8:	cmp    DWORD PTR [eax+0x38],0x0
6401abcc:	je     0x6401abec
6401abce:	mov    dl,BYTE PTR [eax+0x34]
6401abd1:	mov    BYTE PTR [ebp+0x508],dl
6401abd7:	mov    BYTE PTR [ebp+0x509],cl
6401abdd:	and    DWORD PTR [eax+0x38],0x0
6401abe1:	push   0x2
6401abe3:	lea    eax,[ebp+0x508]
6401abe9:	push   eax
6401abea:	jmp    0x6401ac31
6401abec:	movsx  eax,cl
6401abef:	push   eax
6401abf0:	call   0x6401510d
6401abf5:	test   eax,eax
6401abf7:	pop    ecx
6401abf8:	je     0x6401ac2e
6401abfa:	mov    ecx,DWORD PTR [ebp-0x64]
6401abfd:	sub    ecx,ebx
6401abff:	add    ecx,DWORD PTR [ebp+0x524]
6401ac05:	xor    eax,eax
6401ac07:	inc    eax
6401ac08:	cmp    ecx,eax
6401ac0a:	jbe    0x6401ad66
6401ac10:	push   0x2
6401ac12:	lea    eax,[ebp-0x58]
6401ac15:	push   ebx
6401ac16:	push   eax
6401ac17:	call   0x6401ee5e
6401ac1c:	add    esp,0xc
6401ac1f:	cmp    eax,0xffffffff
6401ac22:	je     0x6401afe7
6401ac28:	inc    ebx
6401ac29:	inc    DWORD PTR [ebp-0x54]
6401ac2c:	jmp    0x6401ac46
6401ac2e:	push   0x1
6401ac30:	push   ebx
6401ac31:	lea    eax,[ebp-0x58]
6401ac34:	push   eax
6401ac35:	call   0x6401ee5e
6401ac3a:	add    esp,0xc
6401ac3d:	cmp    eax,0xffffffff
6401ac40:	je     0x6401afe7
6401ac46:	xor    eax,eax
6401ac48:	push   eax
6401ac49:	push   eax
6401ac4a:	push   0x5
6401ac4c:	lea    ecx,[ebp+0x508]
6401ac52:	push   ecx
6401ac53:	push   0x1
6401ac55:	lea    ecx,[ebp-0x58]
6401ac58:	push   ecx
6401ac59:	push   eax
6401ac5a:	push   DWORD PTR [ebp-0x7c]
6401ac5d:	inc    ebx
6401ac5e:	inc    DWORD PTR [ebp-0x54]
6401ac61:	call   DWORD PTR ds:0x64024010
6401ac67:	mov    esi,eax
6401ac69:	test   esi,esi
6401ac6b:	je     0x6401afe7
6401ac71:	push   0x0
6401ac73:	lea    eax,[ebp-0x5c]
6401ac76:	push   eax
6401ac77:	push   esi
6401ac78:	lea    eax,[ebp+0x508]
6401ac7e:	push   eax
6401ac7f:	mov    eax,DWORD PTR [ebp-0x70]
6401ac82:	mov    eax,DWORD PTR [eax]
6401ac84:	push   DWORD PTR [edi+eax*1]
6401ac87:	call   DWORD PTR ds:0x6402413c
6401ac8d:	test   eax,eax
6401ac8f:	je     0x6401afde
6401ac95:	mov    eax,DWORD PTR [ebp-0x54]
6401ac98:	mov    ecx,DWORD PTR [ebp-0x68]
6401ac9b:	add    eax,ecx
6401ac9d:	cmp    DWORD PTR [ebp-0x5c],esi
6401aca0:	mov    DWORD PTR [ebp-0x60],eax
6401aca3:	jl     0x6401afe7
6401aca9:	cmp    DWORD PTR [ebp-0x78],0x0
6401acad:	je     0x6401ad52
6401acb3:	push   0x0
6401acb5:	lea    eax,[ebp-0x5c]
6401acb8:	push   eax
6401acb9:	push   0x1
6401acbb:	lea    eax,[ebp+0x508]
6401acc1:	push   eax
6401acc2:	mov    eax,DWORD PTR [ebp-0x70]
6401acc5:	mov    eax,DWORD PTR [eax]
6401acc7:	mov    BYTE PTR [ebp+0x508],0xd
6401acce:	push   DWORD PTR [edi+eax*1]
6401acd1:	call   DWORD PTR ds:0x6402413c
6401acd7:	test   eax,eax
6401acd9:	je     0x6401afde
6401acdf:	cmp    DWORD PTR [ebp-0x5c],0x1
6401ace3:	jl     0x6401afe7
6401ace9:	inc    DWORD PTR [ebp-0x68]
6401acec:	inc    DWORD PTR [ebp-0x60]
6401acef:	jmp    0x6401ad52
6401acf1:	cmp    al,0x1
6401acf3:	je     0x6401acf9
6401acf5:	cmp    al,0x2
6401acf7:	jne    0x6401ad11
6401acf9:	movzx  esi,WORD PTR [ebx]
6401acfc:	xor    ecx,ecx
6401acfe:	cmp    si,0xa
6401ad02:	sete   cl
6401ad05:	inc    ebx
6401ad06:	inc    ebx
6401ad07:	add    DWORD PTR [ebp-0x54],0x2
6401ad0b:	mov    DWORD PTR [ebp-0x58],esi
6401ad0e:	mov    DWORD PTR [ebp-0x78],ecx
6401ad11:	cmp    al,0x1
6401ad13:	je     0x6401ad19
6401ad15:	cmp    al,0x2
6401ad17:	jne    0x6401ad52
6401ad19:	push   DWORD PTR [ebp-0x58]
6401ad1c:	call   0x6401ec89
6401ad21:	cmp    ax,WORD PTR [ebp-0x58]
6401ad25:	pop    ecx
6401ad26:	jne    0x6401afde
6401ad2c:	inc    DWORD PTR [ebp-0x60]
6401ad2f:	cmp    DWORD PTR [ebp-0x78],0x0
6401ad33:	je     0x6401ad52
6401ad35:	push   0xd
6401ad37:	pop    eax
6401ad38:	push   eax
6401ad39:	mov    DWORD PTR [ebp-0x58],eax
6401ad3c:	call   0x6401ec89
6401ad41:	cmp    ax,WORD PTR [ebp-0x58]
6401ad45:	pop    ecx
6401ad46:	jne    0x6401afde
6401ad4c:	inc    DWORD PTR [ebp-0x60]
6401ad4f:	inc    DWORD PTR [ebp-0x68]
6401ad52:	mov    eax,DWORD PTR [ebp+0x524]
6401ad58:	cmp    DWORD PTR [ebp-0x54],eax
6401ad5b:	jb     0x6401aba9
6401ad61:	jmp    0x6401afe7
6401ad66:	mov    ecx,DWORD PTR [esi]
6401ad68:	mov    dl,BYTE PTR [ebx]
6401ad6a:	inc    DWORD PTR [ebp-0x60]
6401ad6d:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401ad71:	mov    ecx,DWORD PTR [esi]
6401ad73:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401ad77:	jmp    0x6401afe7
6401ad7c:	xor    ecx,ecx
6401ad7e:	mov    eax,DWORD PTR [esi]
6401ad80:	add    eax,edi
6401ad82:	test   BYTE PTR [eax+0x4],0x80
6401ad86:	je     0x6401afb7
6401ad8c:	test   bl,bl
6401ad8e:	mov    eax,DWORD PTR [ebp-0x64]
6401ad91:	mov    DWORD PTR [ebp-0x58],ecx
6401ad94:	jne    0x6401ae30
6401ad9a:	cmp    DWORD PTR [ebp+0x524],ecx
6401ada0:	mov    DWORD PTR [ebp-0x5c],eax
6401ada3:	jbe    0x6401b01d
6401ada9:	jmp    0x6401adae
6401adab:	mov    esi,DWORD PTR [ebp-0x70]
6401adae:	mov    ecx,DWORD PTR [ebp-0x5c]
6401adb1:	and    DWORD PTR [ebp-0x54],0x0
6401adb5:	sub    ecx,DWORD PTR [ebp-0x64]
6401adb8:	lea    eax,[ebp-0x50]
6401adbb:	cmp    ecx,DWORD PTR [ebp+0x524]
6401adc1:	jae    0x6401adea
6401adc3:	mov    edx,DWORD PTR [ebp-0x5c]
6401adc6:	inc    DWORD PTR [ebp-0x5c]
6401adc9:	mov    dl,BYTE PTR [edx]
6401adcb:	inc    ecx
6401adcc:	cmp    dl,0xa
6401adcf:	jne    0x6401addb
6401add1:	inc    DWORD PTR [ebp-0x68]
6401add4:	mov    BYTE PTR [eax],0xd
6401add7:	inc    eax
6401add8:	inc    DWORD PTR [ebp-0x54]
6401addb:	mov    BYTE PTR [eax],dl
6401addd:	inc    eax
6401adde:	inc    DWORD PTR [ebp-0x54]
6401ade1:	cmp    DWORD PTR [ebp-0x54],0x400
6401ade8:	jb     0x6401adbb
6401adea:	mov    ebx,eax
6401adec:	lea    eax,[ebp-0x50]
6401adef:	sub    ebx,eax
6401adf1:	push   0x0
6401adf3:	lea    eax,[ebp-0x6c]
6401adf6:	push   eax
6401adf7:	push   ebx
6401adf8:	lea    eax,[ebp-0x50]
6401adfb:	push   eax
6401adfc:	mov    eax,DWORD PTR [esi]
6401adfe:	push   DWORD PTR [edi+eax*1]
6401ae01:	call   DWORD PTR ds:0x6402413c
6401ae07:	test   eax,eax
6401ae09:	je     0x6401afde
6401ae0f:	mov    eax,DWORD PTR [ebp-0x6c]
6401ae12:	add    DWORD PTR [ebp-0x60],eax
6401ae15:	cmp    eax,ebx
6401ae17:	jl     0x6401afe7
6401ae1d:	mov    eax,DWORD PTR [ebp-0x5c]
6401ae20:	sub    eax,DWORD PTR [ebp-0x64]
6401ae23:	cmp    eax,DWORD PTR [ebp+0x524]
6401ae29:	jb     0x6401adab
6401ae2b:	jmp    0x6401afe7
6401ae30:	cmp    bl,0x2
6401ae33:	mov    DWORD PTR [ebp-0x54],eax
6401ae36:	jne    0x6401aedf
6401ae3c:	cmp    DWORD PTR [ebp+0x524],ecx
6401ae42:	jbe    0x6401b01d
6401ae48:	jmp    0x6401ae4d
6401ae4a:	mov    esi,DWORD PTR [ebp-0x70]
6401ae4d:	mov    ecx,DWORD PTR [ebp-0x54]
6401ae50:	and    DWORD PTR [ebp-0x5c],0x0
6401ae54:	sub    ecx,DWORD PTR [ebp-0x64]
6401ae57:	lea    eax,[ebp-0x50]
6401ae5a:	cmp    ecx,DWORD PTR [ebp+0x524]
6401ae60:	jae    0x6401ae95
6401ae62:	mov    edx,DWORD PTR [ebp-0x54]
6401ae65:	add    DWORD PTR [ebp-0x54],0x2
6401ae69:	movzx  edx,WORD PTR [edx]
6401ae6c:	inc    ecx
6401ae6d:	inc    ecx
6401ae6e:	cmp    dx,0xa
6401ae72:	jne    0x6401ae83
6401ae74:	add    DWORD PTR [ebp-0x68],0x2
6401ae78:	mov    WORD PTR [eax],0xd
6401ae7d:	inc    eax
6401ae7e:	inc    eax
6401ae7f:	add    DWORD PTR [ebp-0x5c],0x2
6401ae83:	add    DWORD PTR [ebp-0x5c],0x2
6401ae87:	mov    WORD PTR [eax],dx
6401ae8a:	inc    eax
6401ae8b:	inc    eax
6401ae8c:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401ae93:	jb     0x6401ae5a
6401ae95:	mov    ebx,eax
6401ae97:	lea    eax,[ebp-0x50]
6401ae9a:	sub    ebx,eax
6401ae9c:	push   0x0
6401ae9e:	lea    eax,[ebp-0x6c]
6401aea1:	push   eax
6401aea2:	push   ebx
6401aea3:	lea    eax,[ebp-0x50]
6401aea6:	push   eax
6401aea7:	mov    eax,DWORD PTR [esi]
6401aea9:	push   DWORD PTR [edi+eax*1]
6401aeac:	call   DWORD PTR ds:0x6402413c
6401aeb2:	test   eax,eax
6401aeb4:	je     0x6401afde
6401aeba:	mov    eax,DWORD PTR [ebp-0x6c]
6401aebd:	add    DWORD PTR [ebp-0x60],eax
6401aec0:	cmp    eax,ebx
6401aec2:	jl     0x6401afe7
6401aec8:	mov    eax,DWORD PTR [ebp-0x54]
6401aecb:	sub    eax,DWORD PTR [ebp-0x64]
6401aece:	cmp    eax,DWORD PTR [ebp+0x524]
6401aed4:	jb     0x6401ae4a
6401aeda:	jmp    0x6401afe7
6401aedf:	cmp    DWORD PTR [ebp+0x524],ecx
6401aee5:	jbe    0x6401b01d
6401aeeb:	mov    ecx,DWORD PTR [ebp-0x54]
6401aeee:	and    DWORD PTR [ebp-0x5c],0x0
6401aef2:	sub    ecx,DWORD PTR [ebp-0x64]
6401aef5:	push   0x2
6401aef7:	lea    eax,[ebp+0x3b4]
6401aefd:	pop    esi
6401aefe:	cmp    ecx,DWORD PTR [ebp+0x524]
6401af04:	jae    0x6401af32
6401af06:	mov    edx,DWORD PTR [ebp-0x54]
6401af09:	movzx  edx,WORD PTR [edx]
6401af0c:	add    DWORD PTR [ebp-0x54],esi
6401af0f:	add    ecx,esi
6401af11:	cmp    dx,0xa
6401af15:	jne    0x6401af21
6401af17:	mov    WORD PTR [eax],0xd
6401af1c:	add    eax,esi
6401af1e:	add    DWORD PTR [ebp-0x5c],esi
6401af21:	add    DWORD PTR [ebp-0x5c],esi
6401af24:	mov    WORD PTR [eax],dx
6401af27:	add    eax,esi
6401af29:	cmp    DWORD PTR [ebp-0x5c],0x152
6401af30:	jb     0x6401aefe
6401af32:	xor    esi,esi
6401af34:	push   esi
6401af35:	push   esi
6401af36:	push   0x2ab
6401af3b:	lea    ecx,[ebp+0x104]
6401af41:	push   ecx
6401af42:	lea    ecx,[ebp+0x3b4]
6401af48:	sub    eax,ecx
6401af4a:	cdq    
6401af4b:	sub    eax,edx
6401af4d:	sar    eax,1
6401af4f:	push   eax
6401af50:	mov    eax,ecx
6401af52:	push   eax
6401af53:	push   esi
6401af54:	push   0xfde9
6401af59:	call   DWORD PTR ds:0x64024010
6401af5f:	mov    ebx,eax
6401af61:	cmp    ebx,esi
6401af63:	je     0x6401afde
6401af65:	push   0x0
6401af67:	lea    eax,[ebp-0x6c]
6401af6a:	push   eax
6401af6b:	mov    eax,ebx
6401af6d:	sub    eax,esi
6401af6f:	push   eax
6401af70:	lea    eax,[ebp+esi*1+0x104]
6401af77:	push   eax
6401af78:	mov    eax,DWORD PTR [ebp-0x70]
6401af7b:	mov    eax,DWORD PTR [eax]
6401af7d:	push   DWORD PTR [edi+eax*1]
6401af80:	call   DWORD PTR ds:0x6402413c
6401af86:	test   eax,eax
6401af88:	je     0x6401af93
6401af8a:	add    esi,DWORD PTR [ebp-0x6c]
6401af8d:	cmp    ebx,esi
6401af8f:	jg     0x6401af65
6401af91:	jmp    0x6401af9c
6401af93:	call   DWORD PTR ds:0x64024068
6401af99:	mov    DWORD PTR [ebp-0x58],eax
6401af9c:	cmp    ebx,esi
6401af9e:	jg     0x6401afe7
6401afa0:	mov    eax,DWORD PTR [ebp-0x54]
6401afa3:	sub    eax,DWORD PTR [ebp-0x64]
6401afa6:	cmp    eax,DWORD PTR [ebp+0x524]
6401afac:	mov    DWORD PTR [ebp-0x60],eax
6401afaf:	jb     0x6401aeeb
6401afb5:	jmp    0x6401afe7
6401afb7:	push   0x0
6401afb9:	lea    ecx,[ebp-0x6c]
6401afbc:	push   ecx
6401afbd:	push   DWORD PTR [ebp+0x524]
6401afc3:	push   DWORD PTR [ebp-0x64]
6401afc6:	push   DWORD PTR [eax]
6401afc8:	call   DWORD PTR ds:0x6402413c
6401afce:	test   eax,eax
6401afd0:	je     0x6401afde
6401afd2:	mov    eax,DWORD PTR [ebp-0x6c]
6401afd5:	and    DWORD PTR [ebp-0x58],0x0
6401afd9:	mov    DWORD PTR [ebp-0x60],eax
6401afdc:	jmp    0x6401afe7
6401afde:	call   DWORD PTR ds:0x64024068
6401afe4:	mov    DWORD PTR [ebp-0x58],eax
6401afe7:	cmp    DWORD PTR [ebp-0x60],0x0
6401afeb:	jne    0x6401b04a
6401afed:	cmp    DWORD PTR [ebp-0x58],0x0
6401aff1:	je     0x6401b01a
6401aff3:	push   0x5
6401aff5:	pop    esi
6401aff6:	cmp    DWORD PTR [ebp-0x58],esi
6401aff9:	jne    0x6401b00f
6401affb:	call   0x64016483
6401b000:	mov    DWORD PTR [eax],0x9
6401b006:	call   0x64016496
6401b00b:	mov    DWORD PTR [eax],esi
6401b00d:	jmp    0x6401b045
6401b00f:	push   DWORD PTR [ebp-0x58]
6401b012:	call   0x640164a9
6401b017:	pop    ecx
6401b018:	jmp    0x6401b045
6401b01a:	mov    esi,DWORD PTR [ebp-0x70]
6401b01d:	mov    eax,DWORD PTR [esi]
6401b01f:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401b024:	je     0x6401b032
6401b026:	mov    eax,DWORD PTR [ebp-0x64]
6401b029:	cmp    BYTE PTR [eax],0x1a
6401b02c:	jne    0x6401b032
6401b02e:	xor    eax,eax
6401b030:	jmp    0x6401b050
6401b032:	call   0x64016483
6401b037:	mov    DWORD PTR [eax],0x1c
6401b03d:	call   0x64016496
6401b042:	and    DWORD PTR [eax],0x0
6401b045:	or     eax,0xffffffff
6401b048:	jmp    0x6401b050
6401b04a:	mov    eax,DWORD PTR [ebp-0x60]
6401b04d:	sub    eax,DWORD PTR [ebp-0x68]
6401b050:	pop    edi
6401b051:	pop    ebx
6401b052:	mov    ecx,DWORD PTR [ebp+0x510]
6401b058:	xor    ecx,ebp
6401b05a:	pop    esi
6401b05b:	call   0x64013cc6
6401b060:	add    ebp,0x514
6401b066:	leave  
6401b067:	ret    
6401b068:	push   0x10
6401b06a:	push   0x6402baa8
6401b06f:	call   0x64015ed4
6401b074:	mov    eax,DWORD PTR [ebp+0x8]
6401b077:	cmp    eax,0xfffffffe
6401b07a:	jne    0x6401b097
6401b07c:	call   0x64016496
6401b081:	and    DWORD PTR [eax],0x0
6401b084:	call   0x64016483
6401b089:	mov    DWORD PTR [eax],0x9
6401b08f:	or     eax,0xffffffff
6401b092:	jmp    0x6401b134
6401b097:	xor    edi,edi
6401b099:	cmp    eax,edi
6401b09b:	jl     0x6401b0a5
6401b09d:	cmp    eax,DWORD PTR ds:0x6403ab48
6401b0a3:	jb     0x6401b0c6
6401b0a5:	call   0x64016496
6401b0aa:	mov    DWORD PTR [eax],edi
6401b0ac:	call   0x64016483
6401b0b1:	mov    DWORD PTR [eax],0x9
6401b0b7:	push   edi
6401b0b8:	push   edi
6401b0b9:	push   edi
6401b0ba:	push   edi
6401b0bb:	push   edi
6401b0bc:	call   0x64013e12
6401b0c1:	add    esp,0x14
6401b0c4:	jmp    0x6401b08f
6401b0c6:	mov    ecx,eax
6401b0c8:	sar    ecx,0x5
6401b0cb:	lea    ebx,[ecx*4+0x6403ab60]
6401b0d2:	mov    esi,eax
6401b0d4:	and    esi,0x1f
6401b0d7:	shl    esi,0x6
6401b0da:	mov    ecx,DWORD PTR [ebx]
6401b0dc:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401b0e1:	and    ecx,0x1
6401b0e4:	je     0x6401b0a5
6401b0e6:	push   eax
6401b0e7:	call   0x640197c6
6401b0ec:	pop    ecx
6401b0ed:	mov    DWORD PTR [ebp-0x4],edi
6401b0f0:	mov    eax,DWORD PTR [ebx]
6401b0f2:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401b0f7:	je     0x6401b10f
6401b0f9:	push   DWORD PTR [ebp+0x10]
6401b0fc:	push   DWORD PTR [ebp+0xc]
6401b0ff:	push   DWORD PTR [ebp+0x8]
6401b102:	call   0x6401aa46
6401b107:	add    esp,0xc
6401b10a:	mov    DWORD PTR [ebp-0x1c],eax
6401b10d:	jmp    0x6401b125
6401b10f:	call   0x64016483
6401b114:	mov    DWORD PTR [eax],0x9
6401b11a:	call   0x64016496
6401b11f:	mov    DWORD PTR [eax],edi
6401b121:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401b125:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b12c:	call   0x6401b13a
6401b131:	mov    eax,DWORD PTR [ebp-0x1c]
6401b134:	call   0x64015f19
6401b139:	ret    
6401b13a:	push   DWORD PTR [ebp+0x8]
6401b13d:	call   0x64019866
6401b142:	pop    ecx
6401b143:	ret    
6401b144:	push   esi
6401b145:	push   edi
6401b146:	xor    esi,esi
6401b148:	mov    edi,0x640393a0
6401b14d:	cmp    DWORD PTR [esi*8+0x6403828c],0x1
6401b155:	jne    0x6401b175
6401b157:	lea    eax,[esi*8+0x64038288]
6401b15e:	mov    DWORD PTR [eax],edi
6401b160:	push   0xfa0
6401b165:	push   DWORD PTR [eax]
6401b167:	add    edi,0x18
6401b16a:	call   0x6401e812
6401b16f:	test   eax,eax
6401b171:	pop    ecx
6401b172:	pop    ecx
6401b173:	je     0x6401b181
6401b175:	inc    esi
6401b176:	cmp    esi,0x24
6401b179:	jl     0x6401b14d
6401b17b:	xor    eax,eax
6401b17d:	inc    eax
6401b17e:	pop    edi
6401b17f:	pop    esi
6401b180:	ret    
6401b181:	and    DWORD PTR [esi*8+0x64038288],0x0
6401b189:	xor    eax,eax
6401b18b:	jmp    0x6401b17e
6401b18d:	push   ebx
6401b18e:	mov    ebx,DWORD PTR ds:0x6402415c
6401b194:	push   esi
6401b195:	mov    esi,0x64038288
6401b19a:	push   edi
6401b19b:	mov    edi,DWORD PTR [esi]
6401b19d:	test   edi,edi
6401b19f:	je     0x6401b1b4
6401b1a1:	cmp    DWORD PTR [esi+0x4],0x1
6401b1a5:	je     0x6401b1b4
6401b1a7:	push   edi
6401b1a8:	call   ebx
6401b1aa:	push   edi
6401b1ab:	call   0x6401477f
6401b1b0:	and    DWORD PTR [esi],0x0
6401b1b3:	pop    ecx
6401b1b4:	add    esi,0x8
6401b1b7:	cmp    esi,0x640383a8
6401b1bd:	jl     0x6401b19b
6401b1bf:	mov    esi,0x64038288
6401b1c4:	pop    edi
6401b1c5:	mov    eax,DWORD PTR [esi]
6401b1c7:	test   eax,eax
6401b1c9:	je     0x6401b1d4
6401b1cb:	cmp    DWORD PTR [esi+0x4],0x1
6401b1cf:	jne    0x6401b1d4
6401b1d1:	push   eax
6401b1d2:	call   ebx
6401b1d4:	add    esi,0x8
6401b1d7:	cmp    esi,0x640383a8
6401b1dd:	jl     0x6401b1c5
6401b1df:	pop    esi
6401b1e0:	pop    ebx
6401b1e1:	ret    
6401b1e2:	push   ebp
6401b1e3:	mov    ebp,esp
6401b1e5:	mov    eax,DWORD PTR [ebp+0x8]
6401b1e8:	push   DWORD PTR [eax*8+0x64038288]
6401b1ef:	call   DWORD PTR ds:0x64024164
6401b1f5:	pop    ebp
6401b1f6:	ret    
6401b1f7:	push   0xc
6401b1f9:	push   0x6402bac8
6401b1fe:	call   0x64015ed4
6401b203:	xor    edi,edi
6401b205:	inc    edi
6401b206:	mov    DWORD PTR [ebp-0x1c],edi
6401b209:	xor    ebx,ebx
6401b20b:	cmp    DWORD PTR ds:0x64039354,ebx
6401b211:	jne    0x6401b22b
6401b213:	call   0x6401bfbd
6401b218:	push   0x1e
6401b21a:	call   0x6401be1d
6401b21f:	push   0xff
6401b224:	call   0x64017e20
6401b229:	pop    ecx
6401b22a:	pop    ecx
6401b22b:	mov    esi,DWORD PTR [ebp+0x8]
6401b22e:	lea    esi,[esi*8+0x64038288]
6401b235:	cmp    DWORD PTR [esi],ebx
6401b237:	je     0x6401b23d
6401b239:	mov    eax,edi
6401b23b:	jmp    0x6401b2ab
6401b23d:	push   0x18
6401b23f:	call   0x64015cef
6401b244:	pop    ecx
6401b245:	mov    edi,eax
6401b247:	cmp    edi,ebx
6401b249:	jne    0x6401b25a
6401b24b:	call   0x64016483
6401b250:	mov    DWORD PTR [eax],0xc
6401b256:	xor    eax,eax
6401b258:	jmp    0x6401b2ab
6401b25a:	push   0xa
6401b25c:	call   0x6401b2ba
6401b261:	pop    ecx
6401b262:	mov    DWORD PTR [ebp-0x4],ebx
6401b265:	cmp    DWORD PTR [esi],ebx
6401b267:	jne    0x6401b295
6401b269:	push   0xfa0
6401b26e:	push   edi
6401b26f:	call   0x6401e812
6401b274:	pop    ecx
6401b275:	pop    ecx
6401b276:	test   eax,eax
6401b278:	jne    0x6401b291
6401b27a:	push   edi
6401b27b:	call   0x6401477f
6401b280:	pop    ecx
6401b281:	call   0x64016483
6401b286:	mov    DWORD PTR [eax],0xc
6401b28c:	mov    DWORD PTR [ebp-0x1c],ebx
6401b28f:	jmp    0x6401b29c
6401b291:	mov    DWORD PTR [esi],edi
6401b293:	jmp    0x6401b29c
6401b295:	push   edi
6401b296:	call   0x6401477f
6401b29b:	pop    ecx
6401b29c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b2a3:	call   0x6401b2b1
6401b2a8:	mov    eax,DWORD PTR [ebp-0x1c]
6401b2ab:	call   0x64015f19
6401b2b0:	ret    
6401b2b1:	push   0xa
6401b2b3:	call   0x6401b1e2
6401b2b8:	pop    ecx
6401b2b9:	ret    
6401b2ba:	push   ebp
6401b2bb:	mov    ebp,esp
6401b2bd:	mov    eax,DWORD PTR [ebp+0x8]
6401b2c0:	push   esi
6401b2c1:	lea    esi,[eax*8+0x64038288]
6401b2c8:	cmp    DWORD PTR [esi],0x0
6401b2cb:	jne    0x6401b2e0
6401b2cd:	push   eax
6401b2ce:	call   0x6401b1f7
6401b2d3:	test   eax,eax
6401b2d5:	pop    ecx
6401b2d6:	jne    0x6401b2e0
6401b2d8:	push   0x11
6401b2da:	call   0x64017dd6
6401b2df:	pop    ecx
6401b2e0:	push   DWORD PTR [esi]
6401b2e2:	call   DWORD PTR ds:0x64024160
6401b2e8:	pop    esi
6401b2e9:	pop    ebp
6401b2ea:	ret    
6401b2eb:	push   0x140
6401b2f0:	push   0x0
6401b2f2:	push   DWORD PTR ds:0x64039354
6401b2f8:	call   DWORD PTR ds:0x64024180
6401b2fe:	test   eax,eax
6401b300:	mov    ds:0x64039b20,eax
6401b305:	jne    0x6401b308
6401b307:	ret    
6401b308:	mov    ecx,DWORD PTR [esp+0x4]
6401b30c:	and    DWORD PTR ds:0x640394f0,0x0
6401b313:	and    DWORD PTR ds:0x64039b1c,0x0
6401b31a:	mov    ds:0x64039b28,eax
6401b31f:	xor    eax,eax
6401b321:	mov    DWORD PTR ds:0x64039b24,ecx
6401b327:	mov    DWORD PTR ds:0x64039b2c,0x10
6401b331:	inc    eax
6401b332:	ret    
6401b333:	mov    ecx,DWORD PTR ds:0x64039b1c
6401b339:	mov    eax,ds:0x64039b20
6401b33e:	imul   ecx,ecx,0x14
6401b341:	add    ecx,eax
6401b343:	jmp    0x6401b357
6401b345:	mov    edx,DWORD PTR [esp+0x4]
6401b349:	sub    edx,DWORD PTR [eax+0xc]
6401b34c:	cmp    edx,0x100000
6401b352:	jb     0x6401b35d
6401b354:	add    eax,0x14
6401b357:	cmp    eax,ecx
6401b359:	jb     0x6401b345
6401b35b:	xor    eax,eax
6401b35d:	ret    
6401b35e:	push   ebp
6401b35f:	mov    ebp,esp
6401b361:	sub    esp,0x10
6401b364:	mov    ecx,DWORD PTR [ebp+0x8]
6401b367:	mov    eax,DWORD PTR [ecx+0x10]
6401b36a:	push   esi
6401b36b:	mov    esi,DWORD PTR [ebp+0xc]
6401b36e:	push   edi
6401b36f:	mov    edi,esi
6401b371:	sub    edi,DWORD PTR [ecx+0xc]
6401b374:	add    esi,0xfffffffc
6401b377:	shr    edi,0xf
6401b37a:	mov    ecx,edi
6401b37c:	imul   ecx,ecx,0x204
6401b382:	lea    ecx,[ecx+eax*1+0x144]
6401b389:	mov    DWORD PTR [ebp-0x10],ecx
6401b38c:	mov    ecx,DWORD PTR [esi]
6401b38e:	dec    ecx
6401b38f:	test   cl,0x1
6401b392:	mov    DWORD PTR [ebp-0x4],ecx
6401b395:	jne    0x6401b66e
6401b39b:	push   ebx
6401b39c:	lea    ebx,[ecx+esi*1]
6401b39f:	mov    edx,DWORD PTR [ebx]
6401b3a1:	mov    DWORD PTR [ebp-0xc],edx
6401b3a4:	mov    edx,DWORD PTR [esi-0x4]
6401b3a7:	mov    DWORD PTR [ebp-0x8],edx
6401b3aa:	mov    edx,DWORD PTR [ebp-0xc]
6401b3ad:	test   dl,0x1
6401b3b0:	mov    DWORD PTR [ebp+0xc],ebx
6401b3b3:	jne    0x6401b429
6401b3b5:	sar    edx,0x4
6401b3b8:	dec    edx
6401b3b9:	cmp    edx,0x3f
6401b3bc:	jbe    0x6401b3c1
6401b3be:	push   0x3f
6401b3c0:	pop    edx
6401b3c1:	mov    ecx,DWORD PTR [ebx+0x4]
6401b3c4:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b3c7:	jne    0x6401b40b
6401b3c9:	cmp    edx,0x20
6401b3cc:	mov    ebx,0x80000000
6401b3d1:	jae    0x6401b3ec
6401b3d3:	mov    ecx,edx
6401b3d5:	shr    ebx,cl
6401b3d7:	lea    ecx,[edx+eax*1+0x4]
6401b3db:	not    ebx
6401b3dd:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b3e1:	dec    BYTE PTR [ecx]
6401b3e3:	jne    0x6401b408
6401b3e5:	mov    ecx,DWORD PTR [ebp+0x8]
6401b3e8:	and    DWORD PTR [ecx],ebx
6401b3ea:	jmp    0x6401b408
6401b3ec:	lea    ecx,[edx-0x20]
6401b3ef:	shr    ebx,cl
6401b3f1:	lea    ecx,[edx+eax*1+0x4]
6401b3f5:	not    ebx
6401b3f7:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b3fe:	dec    BYTE PTR [ecx]
6401b400:	jne    0x6401b408
6401b402:	mov    ecx,DWORD PTR [ebp+0x8]
6401b405:	and    DWORD PTR [ecx+0x4],ebx
6401b408:	mov    ebx,DWORD PTR [ebp+0xc]
6401b40b:	mov    edx,DWORD PTR [ebx+0x8]
6401b40e:	mov    ebx,DWORD PTR [ebx+0x4]
6401b411:	mov    ecx,DWORD PTR [ebp-0x4]
6401b414:	add    ecx,DWORD PTR [ebp-0xc]
6401b417:	mov    DWORD PTR [edx+0x4],ebx
6401b41a:	mov    edx,DWORD PTR [ebp+0xc]
6401b41d:	mov    ebx,DWORD PTR [edx+0x4]
6401b420:	mov    edx,DWORD PTR [edx+0x8]
6401b423:	mov    DWORD PTR [ebx+0x8],edx
6401b426:	mov    DWORD PTR [ebp-0x4],ecx
6401b429:	mov    edx,ecx
6401b42b:	sar    edx,0x4
6401b42e:	dec    edx
6401b42f:	cmp    edx,0x3f
6401b432:	jbe    0x6401b437
6401b434:	push   0x3f
6401b436:	pop    edx
6401b437:	mov    ebx,DWORD PTR [ebp-0x8]
6401b43a:	and    ebx,0x1
6401b43d:	mov    DWORD PTR [ebp-0xc],ebx
6401b440:	jne    0x6401b4d5
6401b446:	sub    esi,DWORD PTR [ebp-0x8]
6401b449:	mov    ebx,DWORD PTR [ebp-0x8]
6401b44c:	sar    ebx,0x4
6401b44f:	push   0x3f
6401b451:	mov    DWORD PTR [ebp+0xc],esi
6401b454:	dec    ebx
6401b455:	pop    esi
6401b456:	cmp    ebx,esi
6401b458:	jbe    0x6401b45c
6401b45a:	mov    ebx,esi
6401b45c:	add    ecx,DWORD PTR [ebp-0x8]
6401b45f:	mov    edx,ecx
6401b461:	sar    edx,0x4
6401b464:	dec    edx
6401b465:	cmp    edx,esi
6401b467:	mov    DWORD PTR [ebp-0x4],ecx
6401b46a:	jbe    0x6401b46e
6401b46c:	mov    edx,esi
6401b46e:	cmp    ebx,edx
6401b470:	je     0x6401b4d0
6401b472:	mov    ecx,DWORD PTR [ebp+0xc]
6401b475:	mov    esi,DWORD PTR [ecx+0x4]
6401b478:	cmp    esi,DWORD PTR [ecx+0x8]
6401b47b:	jne    0x6401b4b8
6401b47d:	cmp    ebx,0x20
6401b480:	mov    esi,0x80000000
6401b485:	jae    0x6401b49e
6401b487:	mov    ecx,ebx
6401b489:	shr    esi,cl
6401b48b:	not    esi
6401b48d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b491:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b495:	jne    0x6401b4b8
6401b497:	mov    ecx,DWORD PTR [ebp+0x8]
6401b49a:	and    DWORD PTR [ecx],esi
6401b49c:	jmp    0x6401b4b8
6401b49e:	lea    ecx,[ebx-0x20]
6401b4a1:	shr    esi,cl
6401b4a3:	not    esi
6401b4a5:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b4ac:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b4b0:	jne    0x6401b4b8
6401b4b2:	mov    ecx,DWORD PTR [ebp+0x8]
6401b4b5:	and    DWORD PTR [ecx+0x4],esi
6401b4b8:	mov    ecx,DWORD PTR [ebp+0xc]
6401b4bb:	mov    esi,DWORD PTR [ecx+0x8]
6401b4be:	mov    ecx,DWORD PTR [ecx+0x4]
6401b4c1:	mov    DWORD PTR [esi+0x4],ecx
6401b4c4:	mov    ecx,DWORD PTR [ebp+0xc]
6401b4c7:	mov    esi,DWORD PTR [ecx+0x4]
6401b4ca:	mov    ecx,DWORD PTR [ecx+0x8]
6401b4cd:	mov    DWORD PTR [esi+0x8],ecx
6401b4d0:	mov    esi,DWORD PTR [ebp+0xc]
6401b4d3:	jmp    0x6401b4d8
6401b4d5:	mov    ebx,DWORD PTR [ebp+0x8]
6401b4d8:	cmp    DWORD PTR [ebp-0xc],0x0
6401b4dc:	jne    0x6401b4e6
6401b4de:	cmp    ebx,edx
6401b4e0:	je     0x6401b566
6401b4e6:	mov    ecx,DWORD PTR [ebp-0x10]
6401b4e9:	lea    ecx,[ecx+edx*8]
6401b4ec:	mov    ebx,DWORD PTR [ecx+0x4]
6401b4ef:	mov    DWORD PTR [esi+0x8],ecx
6401b4f2:	mov    DWORD PTR [esi+0x4],ebx
6401b4f5:	mov    DWORD PTR [ecx+0x4],esi
6401b4f8:	mov    ecx,DWORD PTR [esi+0x4]
6401b4fb:	mov    DWORD PTR [ecx+0x8],esi
6401b4fe:	mov    ecx,DWORD PTR [esi+0x4]
6401b501:	cmp    ecx,DWORD PTR [esi+0x8]
6401b504:	jne    0x6401b566
6401b506:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b50a:	mov    BYTE PTR [ebp+0xf],cl
6401b50d:	inc    cl
6401b50f:	cmp    edx,0x20
6401b512:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b516:	jae    0x6401b53d
6401b518:	cmp    BYTE PTR [ebp+0xf],0x0
6401b51c:	jne    0x6401b52c
6401b51e:	mov    ecx,edx
6401b520:	mov    ebx,0x80000000
6401b525:	shr    ebx,cl
6401b527:	mov    ecx,DWORD PTR [ebp+0x8]
6401b52a:	or     DWORD PTR [ecx],ebx
6401b52c:	mov    ebx,0x80000000
6401b531:	mov    ecx,edx
6401b533:	shr    ebx,cl
6401b535:	lea    eax,[eax+edi*4+0x44]
6401b539:	or     DWORD PTR [eax],ebx
6401b53b:	jmp    0x6401b566
6401b53d:	cmp    BYTE PTR [ebp+0xf],0x0
6401b541:	jne    0x6401b553
6401b543:	lea    ecx,[edx-0x20]
6401b546:	mov    ebx,0x80000000
6401b54b:	shr    ebx,cl
6401b54d:	mov    ecx,DWORD PTR [ebp+0x8]
6401b550:	or     DWORD PTR [ecx+0x4],ebx
6401b553:	lea    ecx,[edx-0x20]
6401b556:	mov    edx,0x80000000
6401b55b:	shr    edx,cl
6401b55d:	lea    eax,[eax+edi*4+0xc4]
6401b564:	or     DWORD PTR [eax],edx
6401b566:	mov    eax,DWORD PTR [ebp-0x4]
6401b569:	mov    DWORD PTR [esi],eax
6401b56b:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b56f:	mov    eax,DWORD PTR [ebp-0x10]
6401b572:	dec    DWORD PTR [eax]
6401b574:	jne    0x6401b66d
6401b57a:	mov    eax,ds:0x640394f0
6401b57f:	test   eax,eax
6401b581:	je     0x6401b65f
6401b587:	mov    ecx,DWORD PTR ds:0x64039b30
6401b58d:	mov    esi,DWORD PTR ds:0x64024128
6401b593:	push   0x4000
6401b598:	shl    ecx,0xf
6401b59b:	add    ecx,DWORD PTR [eax+0xc]
6401b59e:	mov    ebx,0x8000
6401b5a3:	push   ebx
6401b5a4:	push   ecx
6401b5a5:	call   esi
6401b5a7:	mov    ecx,DWORD PTR ds:0x64039b30
6401b5ad:	mov    eax,ds:0x640394f0
6401b5b2:	mov    edx,0x80000000
6401b5b7:	shr    edx,cl
6401b5b9:	or     DWORD PTR [eax+0x8],edx
6401b5bc:	mov    eax,ds:0x640394f0
6401b5c1:	mov    eax,DWORD PTR [eax+0x10]
6401b5c4:	mov    ecx,DWORD PTR ds:0x64039b30
6401b5ca:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b5d2:	mov    eax,ds:0x640394f0
6401b5d7:	mov    eax,DWORD PTR [eax+0x10]
6401b5da:	dec    BYTE PTR [eax+0x43]
6401b5dd:	mov    eax,ds:0x640394f0
6401b5e2:	mov    ecx,DWORD PTR [eax+0x10]
6401b5e5:	cmp    BYTE PTR [ecx+0x43],0x0
6401b5e9:	jne    0x6401b5f4
6401b5eb:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b5ef:	mov    eax,ds:0x640394f0
6401b5f4:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b5f8:	jne    0x6401b65f
6401b5fa:	push   ebx
6401b5fb:	push   0x0
6401b5fd:	push   DWORD PTR [eax+0xc]
6401b600:	call   esi
6401b602:	mov    eax,ds:0x640394f0
6401b607:	push   DWORD PTR [eax+0x10]
6401b60a:	push   0x0
6401b60c:	push   DWORD PTR ds:0x64039354
6401b612:	call   DWORD PTR ds:0x64024184
6401b618:	mov    ecx,DWORD PTR ds:0x64039b1c
6401b61e:	mov    eax,ds:0x640394f0
6401b623:	imul   ecx,ecx,0x14
6401b626:	mov    edx,DWORD PTR ds:0x64039b20
6401b62c:	sub    ecx,eax
6401b62e:	lea    ecx,[ecx+edx*1-0x14]
6401b632:	push   ecx
6401b633:	lea    ecx,[eax+0x14]
6401b636:	push   ecx
6401b637:	push   eax
6401b638:	call   0x640164d0
6401b63d:	mov    eax,DWORD PTR [ebp+0x8]
6401b640:	add    esp,0xc
6401b643:	dec    DWORD PTR ds:0x64039b1c
6401b649:	cmp    eax,DWORD PTR ds:0x640394f0
6401b64f:	jbe    0x6401b655
6401b651:	sub    DWORD PTR [ebp+0x8],0x14
6401b655:	mov    eax,ds:0x64039b20
6401b65a:	mov    ds:0x64039b28,eax
6401b65f:	mov    eax,DWORD PTR [ebp+0x8]
6401b662:	mov    ds:0x640394f0,eax
6401b667:	mov    DWORD PTR ds:0x64039b30,edi
6401b66d:	pop    ebx
6401b66e:	pop    edi
6401b66f:	pop    esi
6401b670:	leave  
6401b671:	ret    
6401b672:	mov    eax,ds:0x64039b2c
6401b677:	push   esi
6401b678:	mov    esi,DWORD PTR ds:0x64039b1c
6401b67e:	push   edi
6401b67f:	xor    edi,edi
6401b681:	cmp    esi,eax
6401b683:	jne    0x6401b6b9
6401b685:	add    eax,0x10
6401b688:	imul   eax,eax,0x14
6401b68b:	push   eax
6401b68c:	push   DWORD PTR ds:0x64039b20
6401b692:	push   edi
6401b693:	push   DWORD PTR ds:0x64039354
6401b699:	call   DWORD PTR ds:0x64024188
6401b69f:	cmp    eax,edi
6401b6a1:	jne    0x6401b6a7
6401b6a3:	xor    eax,eax
6401b6a5:	jmp    0x6401b71f
6401b6a7:	add    DWORD PTR ds:0x64039b2c,0x10
6401b6ae:	mov    esi,DWORD PTR ds:0x64039b1c
6401b6b4:	mov    ds:0x64039b20,eax
6401b6b9:	imul   esi,esi,0x14
6401b6bc:	add    esi,DWORD PTR ds:0x64039b20
6401b6c2:	push   0x41c4
6401b6c7:	push   0x8
6401b6c9:	push   DWORD PTR ds:0x64039354
6401b6cf:	call   DWORD PTR ds:0x64024180
6401b6d5:	cmp    eax,edi
6401b6d7:	mov    DWORD PTR [esi+0x10],eax
6401b6da:	je     0x6401b6a3
6401b6dc:	push   0x4
6401b6de:	push   0x2000
6401b6e3:	push   0x100000
6401b6e8:	push   edi
6401b6e9:	call   DWORD PTR ds:0x640241ac
6401b6ef:	cmp    eax,edi
6401b6f1:	mov    DWORD PTR [esi+0xc],eax
6401b6f4:	jne    0x6401b708
6401b6f6:	push   DWORD PTR [esi+0x10]
6401b6f9:	push   edi
6401b6fa:	push   DWORD PTR ds:0x64039354
6401b700:	call   DWORD PTR ds:0x64024184
6401b706:	jmp    0x6401b6a3
6401b708:	or     DWORD PTR [esi+0x8],0xffffffff
6401b70c:	mov    DWORD PTR [esi],edi
6401b70e:	mov    DWORD PTR [esi+0x4],edi
6401b711:	inc    DWORD PTR ds:0x64039b1c
6401b717:	mov    eax,DWORD PTR [esi+0x10]
6401b71a:	or     DWORD PTR [eax],0xffffffff
6401b71d:	mov    eax,esi
6401b71f:	pop    edi
6401b720:	pop    esi
6401b721:	ret    
6401b722:	push   ebp
6401b723:	mov    ebp,esp
6401b725:	push   ecx
6401b726:	push   ecx
6401b727:	mov    ecx,DWORD PTR [ebp+0x8]
6401b72a:	mov    eax,DWORD PTR [ecx+0x8]
6401b72d:	push   ebx
6401b72e:	push   esi
6401b72f:	mov    esi,DWORD PTR [ecx+0x10]
6401b732:	push   edi
6401b733:	xor    ebx,ebx
6401b735:	jmp    0x6401b73a
6401b737:	add    eax,eax
6401b739:	inc    ebx
6401b73a:	test   eax,eax
6401b73c:	jge    0x6401b737
6401b73e:	mov    eax,ebx
6401b740:	imul   eax,eax,0x204
6401b746:	lea    eax,[eax+esi*1+0x144]
6401b74d:	push   0x3f
6401b74f:	mov    DWORD PTR [ebp-0x8],eax
6401b752:	pop    edx
6401b753:	mov    DWORD PTR [eax+0x8],eax
6401b756:	mov    DWORD PTR [eax+0x4],eax
6401b759:	add    eax,0x8
6401b75c:	dec    edx
6401b75d:	jne    0x6401b753
6401b75f:	push   0x4
6401b761:	mov    edi,ebx
6401b763:	push   0x1000
6401b768:	shl    edi,0xf
6401b76b:	add    edi,DWORD PTR [ecx+0xc]
6401b76e:	push   0x8000
6401b773:	push   edi
6401b774:	call   DWORD PTR ds:0x640241ac
6401b77a:	test   eax,eax
6401b77c:	jne    0x6401b786
6401b77e:	or     eax,0xffffffff
6401b781:	jmp    0x6401b823
6401b786:	lea    edx,[edi+0x7000]
6401b78c:	cmp    edi,edx
6401b78e:	mov    DWORD PTR [ebp-0x4],edx
6401b791:	ja     0x6401b7d6
6401b793:	mov    ecx,edx
6401b795:	sub    ecx,edi
6401b797:	shr    ecx,0xc
6401b79a:	lea    eax,[edi+0x10]
6401b79d:	inc    ecx
6401b79e:	or     DWORD PTR [eax-0x8],0xffffffff
6401b7a2:	or     DWORD PTR [eax+0xfec],0xffffffff
6401b7a9:	lea    edx,[eax+0xffc]
6401b7af:	mov    DWORD PTR [eax],edx
6401b7b1:	lea    edx,[eax-0x1004]
6401b7b7:	mov    DWORD PTR [eax-0x4],0xff0
6401b7be:	mov    DWORD PTR [eax+0x4],edx
6401b7c1:	mov    DWORD PTR [eax+0xfe8],0xff0
6401b7cb:	add    eax,0x1000
6401b7d0:	dec    ecx
6401b7d1:	jne    0x6401b79e
6401b7d3:	mov    edx,DWORD PTR [ebp-0x4]
6401b7d6:	mov    eax,DWORD PTR [ebp-0x8]
6401b7d9:	add    eax,0x1f8
6401b7de:	lea    ecx,[edi+0xc]
6401b7e1:	mov    DWORD PTR [eax+0x4],ecx
6401b7e4:	mov    DWORD PTR [ecx+0x8],eax
6401b7e7:	lea    ecx,[edx+0xc]
6401b7ea:	mov    DWORD PTR [eax+0x8],ecx
6401b7ed:	mov    DWORD PTR [ecx+0x4],eax
6401b7f0:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401b7f5:	xor    edi,edi
6401b7f7:	inc    edi
6401b7f8:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401b7ff:	mov    al,BYTE PTR [esi+0x43]
6401b802:	mov    cl,al
6401b804:	inc    cl
6401b806:	test   al,al
6401b808:	mov    eax,DWORD PTR [ebp+0x8]
6401b80b:	mov    BYTE PTR [esi+0x43],cl
6401b80e:	jne    0x6401b813
6401b810:	or     DWORD PTR [eax+0x4],edi
6401b813:	mov    edx,0x80000000
6401b818:	mov    ecx,ebx
6401b81a:	shr    edx,cl
6401b81c:	not    edx
6401b81e:	and    DWORD PTR [eax+0x8],edx
6401b821:	mov    eax,ebx
6401b823:	pop    edi
6401b824:	pop    esi
6401b825:	pop    ebx
6401b826:	leave  
6401b827:	ret    
6401b828:	push   ebp
6401b829:	mov    ebp,esp
6401b82b:	sub    esp,0xc
6401b82e:	mov    ecx,DWORD PTR [ebp+0x8]
6401b831:	mov    eax,DWORD PTR [ecx+0x10]
6401b834:	push   ebx
6401b835:	push   esi
6401b836:	mov    esi,DWORD PTR [ebp+0x10]
6401b839:	push   edi
6401b83a:	mov    edi,DWORD PTR [ebp+0xc]
6401b83d:	mov    edx,edi
6401b83f:	sub    edx,DWORD PTR [ecx+0xc]
6401b842:	add    esi,0x17
6401b845:	shr    edx,0xf
6401b848:	mov    ecx,edx
6401b84a:	imul   ecx,ecx,0x204
6401b850:	lea    ecx,[ecx+eax*1+0x144]
6401b857:	mov    DWORD PTR [ebp-0xc],ecx
6401b85a:	mov    ecx,DWORD PTR [edi-0x4]
6401b85d:	and    esi,0xfffffff0
6401b860:	dec    ecx
6401b861:	cmp    esi,ecx
6401b863:	lea    edi,[ecx+edi*1-0x4]
6401b867:	mov    ebx,DWORD PTR [edi]
6401b869:	mov    DWORD PTR [ebp+0x10],ecx
6401b86c:	mov    DWORD PTR [ebp-0x4],ebx
6401b86f:	jle    0x6401b9ca
6401b875:	test   bl,0x1
6401b878:	jne    0x6401b9c3
6401b87e:	add    ebx,ecx
6401b880:	cmp    esi,ebx
6401b882:	jg     0x6401b9c3
6401b888:	mov    ecx,DWORD PTR [ebp-0x4]
6401b88b:	sar    ecx,0x4
6401b88e:	dec    ecx
6401b88f:	cmp    ecx,0x3f
6401b892:	mov    DWORD PTR [ebp-0x8],ecx
6401b895:	jbe    0x6401b89d
6401b897:	push   0x3f
6401b899:	pop    ecx
6401b89a:	mov    DWORD PTR [ebp-0x8],ecx
6401b89d:	mov    ebx,DWORD PTR [edi+0x4]
6401b8a0:	cmp    ebx,DWORD PTR [edi+0x8]
6401b8a3:	jne    0x6401b8e8
6401b8a5:	cmp    ecx,0x20
6401b8a8:	mov    ebx,0x80000000
6401b8ad:	jae    0x6401b8c9
6401b8af:	shr    ebx,cl
6401b8b1:	mov    ecx,DWORD PTR [ebp-0x8]
6401b8b4:	lea    ecx,[ecx+eax*1+0x4]
6401b8b8:	not    ebx
6401b8ba:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401b8be:	dec    BYTE PTR [ecx]
6401b8c0:	jne    0x6401b8e8
6401b8c2:	mov    ecx,DWORD PTR [ebp+0x8]
6401b8c5:	and    DWORD PTR [ecx],ebx
6401b8c7:	jmp    0x6401b8e8
6401b8c9:	add    ecx,0xffffffe0
6401b8cc:	shr    ebx,cl
6401b8ce:	mov    ecx,DWORD PTR [ebp-0x8]
6401b8d1:	lea    ecx,[ecx+eax*1+0x4]
6401b8d5:	not    ebx
6401b8d7:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401b8de:	dec    BYTE PTR [ecx]
6401b8e0:	jne    0x6401b8e8
6401b8e2:	mov    ecx,DWORD PTR [ebp+0x8]
6401b8e5:	and    DWORD PTR [ecx+0x4],ebx
6401b8e8:	mov    ecx,DWORD PTR [edi+0x8]
6401b8eb:	mov    ebx,DWORD PTR [edi+0x4]
6401b8ee:	mov    DWORD PTR [ecx+0x4],ebx
6401b8f1:	mov    ecx,DWORD PTR [edi+0x4]
6401b8f4:	mov    edi,DWORD PTR [edi+0x8]
6401b8f7:	mov    DWORD PTR [ecx+0x8],edi
6401b8fa:	mov    ecx,DWORD PTR [ebp+0x10]
6401b8fd:	sub    ecx,esi
6401b8ff:	add    DWORD PTR [ebp-0x4],ecx
6401b902:	cmp    DWORD PTR [ebp-0x4],0x0
6401b906:	jle    0x6401b9b1
6401b90c:	mov    edi,DWORD PTR [ebp-0x4]
6401b90f:	mov    ecx,DWORD PTR [ebp+0xc]
6401b912:	sar    edi,0x4
6401b915:	dec    edi
6401b916:	cmp    edi,0x3f
6401b919:	lea    ecx,[ecx+esi*1-0x4]
6401b91d:	jbe    0x6401b922
6401b91f:	push   0x3f
6401b921:	pop    edi
6401b922:	mov    ebx,DWORD PTR [ebp-0xc]
6401b925:	lea    ebx,[ebx+edi*8]
6401b928:	mov    DWORD PTR [ebp+0x10],ebx
6401b92b:	mov    ebx,DWORD PTR [ebx+0x4]
6401b92e:	mov    DWORD PTR [ecx+0x4],ebx
6401b931:	mov    ebx,DWORD PTR [ebp+0x10]
6401b934:	mov    DWORD PTR [ecx+0x8],ebx
6401b937:	mov    DWORD PTR [ebx+0x4],ecx
6401b93a:	mov    ebx,DWORD PTR [ecx+0x4]
6401b93d:	mov    DWORD PTR [ebx+0x8],ecx
6401b940:	mov    ebx,DWORD PTR [ecx+0x4]
6401b943:	cmp    ebx,DWORD PTR [ecx+0x8]
6401b946:	jne    0x6401b99f
6401b948:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401b94c:	mov    BYTE PTR [ebp+0x13],cl
6401b94f:	inc    cl
6401b951:	cmp    edi,0x20
6401b954:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401b958:	jae    0x6401b976
6401b95a:	cmp    BYTE PTR [ebp+0x13],0x0
6401b95e:	jne    0x6401b96e
6401b960:	mov    ecx,edi
6401b962:	mov    ebx,0x80000000
6401b967:	shr    ebx,cl
6401b969:	mov    ecx,DWORD PTR [ebp+0x8]
6401b96c:	or     DWORD PTR [ecx],ebx
6401b96e:	lea    eax,[eax+edx*4+0x44]
6401b972:	mov    ecx,edi
6401b974:	jmp    0x6401b996
6401b976:	cmp    BYTE PTR [ebp+0x13],0x0
6401b97a:	jne    0x6401b98c
6401b97c:	lea    ecx,[edi-0x20]
6401b97f:	mov    ebx,0x80000000
6401b984:	shr    ebx,cl
6401b986:	mov    ecx,DWORD PTR [ebp+0x8]
6401b989:	or     DWORD PTR [ecx+0x4],ebx
6401b98c:	lea    eax,[eax+edx*4+0xc4]
6401b993:	lea    ecx,[edi-0x20]
6401b996:	mov    edx,0x80000000
6401b99b:	shr    edx,cl
6401b99d:	or     DWORD PTR [eax],edx
6401b99f:	mov    edx,DWORD PTR [ebp+0xc]
6401b9a2:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9a5:	lea    eax,[edx+esi*1-0x4]
6401b9a9:	mov    DWORD PTR [eax],ecx
6401b9ab:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401b9af:	jmp    0x6401b9b4
6401b9b1:	mov    edx,DWORD PTR [ebp+0xc]
6401b9b4:	lea    eax,[esi+0x1]
6401b9b7:	mov    DWORD PTR [edx-0x4],eax
6401b9ba:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401b9be:	jmp    0x6401baff
6401b9c3:	xor    eax,eax
6401b9c5:	jmp    0x6401bb02
6401b9ca:	jge    0x6401baff
6401b9d0:	mov    ebx,DWORD PTR [ebp+0xc]
6401b9d3:	sub    DWORD PTR [ebp+0x10],esi
6401b9d6:	lea    ecx,[esi+0x1]
6401b9d9:	mov    DWORD PTR [ebx-0x4],ecx
6401b9dc:	lea    ebx,[ebx+esi*1-0x4]
6401b9e0:	mov    esi,DWORD PTR [ebp+0x10]
6401b9e3:	sar    esi,0x4
6401b9e6:	dec    esi
6401b9e7:	cmp    esi,0x3f
6401b9ea:	mov    DWORD PTR [ebp+0xc],ebx
6401b9ed:	mov    DWORD PTR [ebx-0x4],ecx
6401b9f0:	jbe    0x6401b9f5
6401b9f2:	push   0x3f
6401b9f4:	pop    esi
6401b9f5:	test   BYTE PTR [ebp-0x4],0x1
6401b9f9:	jne    0x6401ba7f
6401b9ff:	mov    esi,DWORD PTR [ebp-0x4]
6401ba02:	sar    esi,0x4
6401ba05:	dec    esi
6401ba06:	cmp    esi,0x3f
6401ba09:	jbe    0x6401ba0e
6401ba0b:	push   0x3f
6401ba0d:	pop    esi
6401ba0e:	mov    ecx,DWORD PTR [edi+0x4]
6401ba11:	cmp    ecx,DWORD PTR [edi+0x8]
6401ba14:	jne    0x6401ba58
6401ba16:	cmp    esi,0x20
6401ba19:	mov    ebx,0x80000000
6401ba1e:	jae    0x6401ba39
6401ba20:	mov    ecx,esi
6401ba22:	shr    ebx,cl
6401ba24:	lea    esi,[esi+eax*1+0x4]
6401ba28:	not    ebx
6401ba2a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401ba2e:	dec    BYTE PTR [esi]
6401ba30:	jne    0x6401ba55
6401ba32:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba35:	and    DWORD PTR [ecx],ebx
6401ba37:	jmp    0x6401ba55
6401ba39:	lea    ecx,[esi-0x20]
6401ba3c:	shr    ebx,cl
6401ba3e:	lea    ecx,[esi+eax*1+0x4]
6401ba42:	not    ebx
6401ba44:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401ba4b:	dec    BYTE PTR [ecx]
6401ba4d:	jne    0x6401ba55
6401ba4f:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba52:	and    DWORD PTR [ecx+0x4],ebx
6401ba55:	mov    ebx,DWORD PTR [ebp+0xc]
6401ba58:	mov    ecx,DWORD PTR [edi+0x8]
6401ba5b:	mov    esi,DWORD PTR [edi+0x4]
6401ba5e:	mov    DWORD PTR [ecx+0x4],esi
6401ba61:	mov    esi,DWORD PTR [edi+0x8]
6401ba64:	mov    ecx,DWORD PTR [edi+0x4]
6401ba67:	mov    DWORD PTR [ecx+0x8],esi
6401ba6a:	mov    esi,DWORD PTR [ebp+0x10]
6401ba6d:	add    esi,DWORD PTR [ebp-0x4]
6401ba70:	mov    DWORD PTR [ebp+0x10],esi
6401ba73:	sar    esi,0x4
6401ba76:	dec    esi
6401ba77:	cmp    esi,0x3f
6401ba7a:	jbe    0x6401ba7f
6401ba7c:	push   0x3f
6401ba7e:	pop    esi
6401ba7f:	mov    ecx,DWORD PTR [ebp-0xc]
6401ba82:	lea    ecx,[ecx+esi*8]
6401ba85:	mov    edi,DWORD PTR [ecx+0x4]
6401ba88:	mov    DWORD PTR [ebx+0x8],ecx
6401ba8b:	mov    DWORD PTR [ebx+0x4],edi
6401ba8e:	mov    DWORD PTR [ecx+0x4],ebx
6401ba91:	mov    ecx,DWORD PTR [ebx+0x4]
6401ba94:	mov    DWORD PTR [ecx+0x8],ebx
6401ba97:	mov    ecx,DWORD PTR [ebx+0x4]
6401ba9a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401ba9d:	jne    0x6401baf6
6401ba9f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401baa3:	mov    BYTE PTR [ebp+0xf],cl
6401baa6:	inc    cl
6401baa8:	cmp    esi,0x20
6401baab:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401baaf:	jae    0x6401bacd
6401bab1:	cmp    BYTE PTR [ebp+0xf],0x0
6401bab5:	jne    0x6401bac5
6401bab7:	mov    ecx,esi
6401bab9:	mov    edi,0x80000000
6401babe:	shr    edi,cl
6401bac0:	mov    ecx,DWORD PTR [ebp+0x8]
6401bac3:	or     DWORD PTR [ecx],edi
6401bac5:	lea    eax,[eax+edx*4+0x44]
6401bac9:	mov    ecx,esi
6401bacb:	jmp    0x6401baed
6401bacd:	cmp    BYTE PTR [ebp+0xf],0x0
6401bad1:	jne    0x6401bae3
6401bad3:	lea    ecx,[esi-0x20]
6401bad6:	mov    edi,0x80000000
6401badb:	shr    edi,cl
6401badd:	mov    ecx,DWORD PTR [ebp+0x8]
6401bae0:	or     DWORD PTR [ecx+0x4],edi
6401bae3:	lea    eax,[eax+edx*4+0xc4]
6401baea:	lea    ecx,[esi-0x20]
6401baed:	mov    edx,0x80000000
6401baf2:	shr    edx,cl
6401baf4:	or     DWORD PTR [eax],edx
6401baf6:	mov    eax,DWORD PTR [ebp+0x10]
6401baf9:	mov    DWORD PTR [ebx],eax
6401bafb:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401baff:	xor    eax,eax
6401bb01:	inc    eax
6401bb02:	pop    edi
6401bb03:	pop    esi
6401bb04:	pop    ebx
6401bb05:	leave  
6401bb06:	ret    
6401bb07:	push   ebp
6401bb08:	mov    ebp,esp
6401bb0a:	sub    esp,0x14
6401bb0d:	mov    eax,ds:0x64039b1c
6401bb12:	mov    ecx,DWORD PTR [ebp+0x8]
6401bb15:	imul   eax,eax,0x14
6401bb18:	add    eax,DWORD PTR ds:0x64039b20
6401bb1e:	add    ecx,0x17
6401bb21:	and    ecx,0xfffffff0
6401bb24:	mov    DWORD PTR [ebp-0x10],ecx
6401bb27:	sar    ecx,0x4
6401bb2a:	push   ebx
6401bb2b:	dec    ecx
6401bb2c:	cmp    ecx,0x20
6401bb2f:	push   esi
6401bb30:	push   edi
6401bb31:	jge    0x6401bb3e
6401bb33:	or     esi,0xffffffff
6401bb36:	shr    esi,cl
6401bb38:	or     DWORD PTR [ebp-0x8],0xffffffff
6401bb3c:	jmp    0x6401bb4b
6401bb3e:	add    ecx,0xffffffe0
6401bb41:	or     edx,0xffffffff
6401bb44:	xor    esi,esi
6401bb46:	shr    edx,cl
6401bb48:	mov    DWORD PTR [ebp-0x8],edx
6401bb4b:	mov    ecx,DWORD PTR ds:0x64039b28
6401bb51:	mov    ebx,ecx
6401bb53:	jmp    0x6401bb66
6401bb55:	mov    edx,DWORD PTR [ebx+0x4]
6401bb58:	mov    edi,DWORD PTR [ebx]
6401bb5a:	and    edx,DWORD PTR [ebp-0x8]
6401bb5d:	and    edi,esi
6401bb5f:	or     edx,edi
6401bb61:	jne    0x6401bb6d
6401bb63:	add    ebx,0x14
6401bb66:	cmp    ebx,eax
6401bb68:	mov    DWORD PTR [ebp+0x8],ebx
6401bb6b:	jb     0x6401bb55
6401bb6d:	cmp    ebx,eax
6401bb6f:	jne    0x6401bbf0
6401bb71:	mov    ebx,DWORD PTR ds:0x64039b20
6401bb77:	jmp    0x6401bb8a
6401bb79:	mov    edx,DWORD PTR [ebx+0x4]
6401bb7c:	mov    edi,DWORD PTR [ebx]
6401bb7e:	and    edx,DWORD PTR [ebp-0x8]
6401bb81:	and    edi,esi
6401bb83:	or     edx,edi
6401bb85:	jne    0x6401bb91
6401bb87:	add    ebx,0x14
6401bb8a:	cmp    ebx,ecx
6401bb8c:	mov    DWORD PTR [ebp+0x8],ebx
6401bb8f:	jb     0x6401bb79
6401bb91:	cmp    ebx,ecx
6401bb93:	jne    0x6401bbf0
6401bb95:	jmp    0x6401bba3
6401bb97:	cmp    DWORD PTR [ebx+0x8],0x0
6401bb9b:	jne    0x6401bba7
6401bb9d:	add    ebx,0x14
6401bba0:	mov    DWORD PTR [ebp+0x8],ebx
6401bba3:	cmp    ebx,eax
6401bba5:	jb     0x6401bb97
6401bba7:	cmp    ebx,eax
6401bba9:	jne    0x6401bbdc
6401bbab:	mov    ebx,DWORD PTR ds:0x64039b20
6401bbb1:	jmp    0x6401bbbc
6401bbb3:	cmp    DWORD PTR [ebx+0x8],0x0
6401bbb7:	jne    0x6401bbc3
6401bbb9:	add    ebx,0x14
6401bbbc:	cmp    ebx,ecx
6401bbbe:	mov    DWORD PTR [ebp+0x8],ebx
6401bbc1:	jb     0x6401bbb3
6401bbc3:	cmp    ebx,ecx
6401bbc5:	jne    0x6401bbdc
6401bbc7:	call   0x6401b672
6401bbcc:	mov    ebx,eax
6401bbce:	test   ebx,ebx
6401bbd0:	mov    DWORD PTR [ebp+0x8],ebx
6401bbd3:	jne    0x6401bbdc
6401bbd5:	xor    eax,eax
6401bbd7:	jmp    0x6401bde5
6401bbdc:	push   ebx
6401bbdd:	call   0x6401b722
6401bbe2:	pop    ecx
6401bbe3:	mov    ecx,DWORD PTR [ebx+0x10]
6401bbe6:	mov    DWORD PTR [ecx],eax
6401bbe8:	mov    eax,DWORD PTR [ebx+0x10]
6401bbeb:	cmp    DWORD PTR [eax],0xffffffff
6401bbee:	je     0x6401bbd5
6401bbf0:	mov    DWORD PTR ds:0x64039b28,ebx
6401bbf6:	mov    eax,DWORD PTR [ebx+0x10]
6401bbf9:	mov    edx,DWORD PTR [eax]
6401bbfb:	cmp    edx,0xffffffff
6401bbfe:	mov    DWORD PTR [ebp-0x4],edx
6401bc01:	je     0x6401bc17
6401bc03:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bc0a:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401bc0e:	and    ecx,DWORD PTR [ebp-0x8]
6401bc11:	and    edi,esi
6401bc13:	or     ecx,edi
6401bc15:	jne    0x6401bc40
6401bc17:	and    DWORD PTR [ebp-0x4],0x0
6401bc1b:	mov    edx,DWORD PTR [eax+0xc4]
6401bc21:	lea    ecx,[eax+0x44]
6401bc24:	mov    edi,DWORD PTR [ecx]
6401bc26:	and    edx,DWORD PTR [ebp-0x8]
6401bc29:	and    edi,esi
6401bc2b:	or     edx,edi
6401bc2d:	jne    0x6401bc3d
6401bc2f:	inc    DWORD PTR [ebp-0x4]
6401bc32:	mov    edx,DWORD PTR [ecx+0x84]
6401bc38:	add    ecx,0x4
6401bc3b:	jmp    0x6401bc24
6401bc3d:	mov    edx,DWORD PTR [ebp-0x4]
6401bc40:	mov    ecx,edx
6401bc42:	imul   ecx,ecx,0x204
6401bc48:	lea    ecx,[ecx+eax*1+0x144]
6401bc4f:	mov    DWORD PTR [ebp-0xc],ecx
6401bc52:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401bc56:	xor    edi,edi
6401bc58:	and    ecx,esi
6401bc5a:	jne    0x6401bc6e
6401bc5c:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bc63:	and    ecx,DWORD PTR [ebp-0x8]
6401bc66:	push   0x20
6401bc68:	pop    edi
6401bc69:	jmp    0x6401bc6e
6401bc6b:	add    ecx,ecx
6401bc6d:	inc    edi
6401bc6e:	test   ecx,ecx
6401bc70:	jge    0x6401bc6b
6401bc72:	mov    ecx,DWORD PTR [ebp-0xc]
6401bc75:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401bc79:	mov    ecx,DWORD PTR [edx]
6401bc7b:	sub    ecx,DWORD PTR [ebp-0x10]
6401bc7e:	mov    esi,ecx
6401bc80:	sar    esi,0x4
6401bc83:	dec    esi
6401bc84:	cmp    esi,0x3f
6401bc87:	mov    DWORD PTR [ebp-0x8],ecx
6401bc8a:	jle    0x6401bc8f
6401bc8c:	push   0x3f
6401bc8e:	pop    esi
6401bc8f:	cmp    esi,edi
6401bc91:	je     0x6401bd98
6401bc97:	mov    ecx,DWORD PTR [edx+0x4]
6401bc9a:	cmp    ecx,DWORD PTR [edx+0x8]
6401bc9d:	jne    0x6401bcfb
6401bc9f:	cmp    edi,0x20
6401bca2:	mov    ebx,0x80000000
6401bca7:	jge    0x6401bccf
6401bca9:	mov    ecx,edi
6401bcab:	shr    ebx,cl
6401bcad:	mov    ecx,DWORD PTR [ebp-0x4]
6401bcb0:	lea    edi,[eax+edi*1+0x4]
6401bcb4:	not    ebx
6401bcb6:	mov    DWORD PTR [ebp-0x14],ebx
6401bcb9:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401bcbd:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401bcc1:	dec    BYTE PTR [edi]
6401bcc3:	jne    0x6401bcf8
6401bcc5:	mov    ecx,DWORD PTR [ebp-0x14]
6401bcc8:	mov    ebx,DWORD PTR [ebp+0x8]
6401bccb:	and    DWORD PTR [ebx],ecx
6401bccd:	jmp    0x6401bcfb
6401bccf:	lea    ecx,[edi-0x20]
6401bcd2:	shr    ebx,cl
6401bcd4:	mov    ecx,DWORD PTR [ebp-0x4]
6401bcd7:	lea    ecx,[eax+ecx*4+0xc4]
6401bcde:	lea    edi,[eax+edi*1+0x4]
6401bce2:	not    ebx
6401bce4:	and    DWORD PTR [ecx],ebx
6401bce6:	dec    BYTE PTR [edi]
6401bce8:	mov    DWORD PTR [ebp-0x14],ebx
6401bceb:	jne    0x6401bcf8
6401bced:	mov    ebx,DWORD PTR [ebp+0x8]
6401bcf0:	mov    ecx,DWORD PTR [ebp-0x14]
6401bcf3:	and    DWORD PTR [ebx+0x4],ecx
6401bcf6:	jmp    0x6401bcfb
6401bcf8:	mov    ebx,DWORD PTR [ebp+0x8]
6401bcfb:	cmp    DWORD PTR [ebp-0x8],0x0
6401bcff:	mov    ecx,DWORD PTR [edx+0x8]
6401bd02:	mov    edi,DWORD PTR [edx+0x4]
6401bd05:	mov    DWORD PTR [ecx+0x4],edi
6401bd08:	mov    ecx,DWORD PTR [edx+0x4]
6401bd0b:	mov    edi,DWORD PTR [edx+0x8]
6401bd0e:	mov    DWORD PTR [ecx+0x8],edi
6401bd11:	je     0x6401bda4
6401bd17:	mov    ecx,DWORD PTR [ebp-0xc]
6401bd1a:	lea    ecx,[ecx+esi*8]
6401bd1d:	mov    edi,DWORD PTR [ecx+0x4]
6401bd20:	mov    DWORD PTR [edx+0x8],ecx
6401bd23:	mov    DWORD PTR [edx+0x4],edi
6401bd26:	mov    DWORD PTR [ecx+0x4],edx
6401bd29:	mov    ecx,DWORD PTR [edx+0x4]
6401bd2c:	mov    DWORD PTR [ecx+0x8],edx
6401bd2f:	mov    ecx,DWORD PTR [edx+0x4]
6401bd32:	cmp    ecx,DWORD PTR [edx+0x8]
6401bd35:	jne    0x6401bd95
6401bd37:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bd3b:	mov    BYTE PTR [ebp+0xb],cl
6401bd3e:	inc    cl
6401bd40:	cmp    esi,0x20
6401bd43:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bd47:	jge    0x6401bd6c
6401bd49:	cmp    BYTE PTR [ebp+0xb],0x0
6401bd4d:	jne    0x6401bd5a
6401bd4f:	mov    edi,0x80000000
6401bd54:	mov    ecx,esi
6401bd56:	shr    edi,cl
6401bd58:	or     DWORD PTR [ebx],edi
6401bd5a:	mov    ecx,esi
6401bd5c:	mov    edi,0x80000000
6401bd61:	shr    edi,cl
6401bd63:	mov    ecx,DWORD PTR [ebp-0x4]
6401bd66:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401bd6a:	jmp    0x6401bd95
6401bd6c:	cmp    BYTE PTR [ebp+0xb],0x0
6401bd70:	jne    0x6401bd7f
6401bd72:	lea    ecx,[esi-0x20]
6401bd75:	mov    edi,0x80000000
6401bd7a:	shr    edi,cl
6401bd7c:	or     DWORD PTR [ebx+0x4],edi
6401bd7f:	mov    ecx,DWORD PTR [ebp-0x4]
6401bd82:	lea    edi,[eax+ecx*4+0xc4]
6401bd89:	lea    ecx,[esi-0x20]
6401bd8c:	mov    esi,0x80000000
6401bd91:	shr    esi,cl
6401bd93:	or     DWORD PTR [edi],esi
6401bd95:	mov    ecx,DWORD PTR [ebp-0x8]
6401bd98:	test   ecx,ecx
6401bd9a:	je     0x6401bda7
6401bd9c:	mov    DWORD PTR [edx],ecx
6401bd9e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401bda2:	jmp    0x6401bda7
6401bda4:	mov    ecx,DWORD PTR [ebp-0x8]
6401bda7:	mov    esi,DWORD PTR [ebp-0x10]
6401bdaa:	add    edx,ecx
6401bdac:	lea    ecx,[esi+0x1]
6401bdaf:	mov    DWORD PTR [edx],ecx
6401bdb1:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401bdb5:	mov    esi,DWORD PTR [ebp-0xc]
6401bdb8:	mov    ecx,DWORD PTR [esi]
6401bdba:	test   ecx,ecx
6401bdbc:	lea    edi,[ecx+0x1]
6401bdbf:	mov    DWORD PTR [esi],edi
6401bdc1:	jne    0x6401bddd
6401bdc3:	cmp    ebx,DWORD PTR ds:0x640394f0
6401bdc9:	jne    0x6401bddd
6401bdcb:	mov    ecx,DWORD PTR [ebp-0x4]
6401bdce:	cmp    ecx,DWORD PTR ds:0x64039b30
6401bdd4:	jne    0x6401bddd
6401bdd6:	and    DWORD PTR ds:0x640394f0,0x0
6401bddd:	mov    ecx,DWORD PTR [ebp-0x4]
6401bde0:	mov    DWORD PTR [eax],ecx
6401bde2:	lea    eax,[edx+0x4]
6401bde5:	pop    edi
6401bde6:	pop    esi
6401bde7:	pop    ebx
6401bde8:	leave  
6401bde9:	ret    
6401bdea:	int3   
6401bdeb:	int3   
6401bdec:	int3   
6401bded:	int3   
6401bdee:	int3   
6401bdef:	int3   
6401bdf0:	push   ebp
6401bdf1:	mov    ebp,esp
6401bdf3:	push   edi
6401bdf4:	mov    edi,DWORD PTR [ebp+0x8]
6401bdf7:	xor    eax,eax
6401bdf9:	or     ecx,0xffffffff
6401bdfc:	repnz scas al,BYTE PTR es:[edi]
6401bdfe:	add    ecx,0x1
6401be01:	neg    ecx
6401be03:	sub    edi,0x1
6401be06:	mov    al,BYTE PTR [ebp+0xc]
6401be09:	std    
6401be0a:	repnz scas al,BYTE PTR es:[edi]
6401be0c:	add    edi,0x1
6401be0f:	cmp    BYTE PTR [edi],al
6401be11:	je     0x6401be17
6401be13:	xor    eax,eax
6401be15:	jmp    0x6401be19
6401be17:	mov    eax,edi
6401be19:	cld    
6401be1a:	pop    edi
6401be1b:	leave  
6401be1c:	ret    
6401be1d:	push   ecx
6401be1e:	push   ebx
6401be1f:	mov    ebx,DWORD PTR [esp+0xc]
6401be23:	push   esi
6401be24:	push   edi
6401be25:	xor    esi,esi
6401be27:	xor    edi,edi
6401be29:	cmp    ebx,DWORD PTR [edi*8+0x640383b0]
6401be30:	je     0x6401be38
6401be32:	inc    edi
6401be33:	cmp    edi,0x17
6401be36:	jb     0x6401be29
6401be38:	cmp    edi,0x17
6401be3b:	jae    0x6401bfb8
6401be41:	push   ebp
6401be42:	push   0x3
6401be44:	call   0x6401f032
6401be49:	cmp    eax,0x1
6401be4c:	pop    ecx
6401be4d:	je     0x6401bf84
6401be53:	push   0x3
6401be55:	call   0x6401f032
6401be5a:	test   eax,eax
6401be5c:	pop    ecx
6401be5d:	jne    0x6401be6c
6401be5f:	cmp    DWORD PTR ds:0x64038ea4,0x1
6401be66:	je     0x6401bf84
6401be6c:	cmp    ebx,0xfc
6401be72:	je     0x6401bfb7
6401be78:	push   0x64028b88
6401be7d:	mov    ebx,0x314
6401be82:	push   ebx
6401be83:	mov    ebp,0x640394f8
6401be88:	push   ebp
6401be89:	call   0x640162e1
6401be8e:	add    esp,0xc
6401be91:	test   eax,eax
6401be93:	je     0x6401bea2
6401be95:	push   esi
6401be96:	push   esi
6401be97:	push   esi
6401be98:	push   esi
6401be99:	push   esi
6401be9a:	call   0x64013d16
6401be9f:	add    esp,0x14
6401bea2:	push   0x104
6401bea7:	mov    esi,0x64039511
6401beac:	push   esi
6401bead:	push   0x0
6401beaf:	mov    BYTE PTR ds:0x64039615,0x0
6401beb6:	call   DWORD PTR ds:0x64024150
6401bebc:	test   eax,eax
6401bebe:	jne    0x6401bee6
6401bec0:	push   0x64028b70
6401bec5:	push   0x2fb
6401beca:	push   esi
6401becb:	call   0x640162e1
6401bed0:	add    esp,0xc
6401bed3:	test   eax,eax
6401bed5:	je     0x6401bee6
6401bed7:	xor    eax,eax
6401bed9:	push   eax
6401beda:	push   eax
6401bedb:	push   eax
6401bedc:	push   eax
6401bedd:	push   eax
6401bede:	call   0x64013d16
6401bee3:	add    esp,0x14
6401bee6:	push   esi
6401bee7:	call   0x64015510
6401beec:	inc    eax
6401beed:	cmp    eax,0x3c
6401bef0:	pop    ecx
6401bef1:	jbe    0x6401bf2b
6401bef3:	push   esi
6401bef4:	call   0x64015510
6401bef9:	sub    esi,0x3b
6401befc:	add    eax,esi
6401befe:	push   0x3
6401bf00:	mov    ecx,0x6403980c
6401bf05:	push   0x64028b6c
6401bf0a:	sub    ecx,eax
6401bf0c:	push   ecx
6401bf0d:	push   eax
6401bf0e:	call   0x6401dd26
6401bf13:	add    esp,0x14
6401bf16:	test   eax,eax
6401bf18:	je     0x6401bf2b
6401bf1a:	xor    esi,esi
6401bf1c:	push   esi
6401bf1d:	push   esi
6401bf1e:	push   esi
6401bf1f:	push   esi
6401bf20:	push   esi
6401bf21:	call   0x64013d16
6401bf26:	add    esp,0x14
6401bf29:	jmp    0x6401bf2d
6401bf2b:	xor    esi,esi
6401bf2d:	push   0x64028b68
6401bf32:	push   ebx
6401bf33:	push   ebp
6401bf34:	call   0x6401dc6c
6401bf39:	add    esp,0xc
6401bf3c:	test   eax,eax
6401bf3e:	je     0x6401bf4d
6401bf40:	push   esi
6401bf41:	push   esi
6401bf42:	push   esi
6401bf43:	push   esi
6401bf44:	push   esi
6401bf45:	call   0x64013d16
6401bf4a:	add    esp,0x14
6401bf4d:	push   DWORD PTR [edi*8+0x640383b4]
6401bf54:	push   ebx
6401bf55:	push   ebp
6401bf56:	call   0x6401dc6c
6401bf5b:	add    esp,0xc
6401bf5e:	test   eax,eax
6401bf60:	je     0x6401bf6f
6401bf62:	push   esi
6401bf63:	push   esi
6401bf64:	push   esi
6401bf65:	push   esi
6401bf66:	push   esi
6401bf67:	call   0x64013d16
6401bf6c:	add    esp,0x14
6401bf6f:	push   0x12010
6401bf74:	push   0x64028b40
6401bf79:	push   ebp
6401bf7a:	call   0x6401ee75
6401bf7f:	add    esp,0xc
6401bf82:	jmp    0x6401bfb7
6401bf84:	push   0xfffffff4
6401bf86:	call   DWORD PTR ds:0x640241d0
6401bf8c:	mov    ebp,eax
6401bf8e:	cmp    ebp,esi
6401bf90:	je     0x6401bfb7
6401bf92:	cmp    ebp,0xffffffff
6401bf95:	je     0x6401bfb7
6401bf97:	push   0x0
6401bf99:	lea    eax,[esp+0x14]
6401bf9d:	push   eax
6401bf9e:	lea    esi,[edi*8+0x640383b4]
6401bfa5:	push   DWORD PTR [esi]
6401bfa7:	call   0x64015510
6401bfac:	pop    ecx
6401bfad:	push   eax
6401bfae:	push   DWORD PTR [esi]
6401bfb0:	push   ebp
6401bfb1:	call   DWORD PTR ds:0x6402413c
6401bfb7:	pop    ebp
6401bfb8:	pop    edi
6401bfb9:	pop    esi
6401bfba:	pop    ebx
6401bfbb:	pop    ecx
6401bfbc:	ret    
6401bfbd:	push   0x3
6401bfbf:	call   0x6401f032
6401bfc4:	cmp    eax,0x1
6401bfc7:	pop    ecx
6401bfc8:	je     0x6401bfdf
6401bfca:	push   0x3
6401bfcc:	call   0x6401f032
6401bfd1:	test   eax,eax
6401bfd3:	pop    ecx
6401bfd4:	jne    0x6401bff5
6401bfd6:	cmp    DWORD PTR ds:0x64038ea4,0x1
6401bfdd:	jne    0x6401bff5
6401bfdf:	push   0xfc
6401bfe4:	call   0x6401be1d
6401bfe9:	push   0xff
6401bfee:	call   0x6401be1d
6401bff3:	pop    ecx
6401bff4:	pop    ecx
6401bff5:	ret    
6401bff6:	push   ebp
6401bff7:	mov    ebp,esp
6401bff9:	mov    eax,0xffff
6401bffe:	sub    esp,0x14
6401c001:	cmp    WORD PTR [ebp+0x8],ax
6401c005:	je     0x6401c0a1
6401c00b:	push   ebx
6401c00c:	push   DWORD PTR [ebp+0xc]
6401c00f:	lea    ecx,[ebp-0x14]
6401c012:	call   0x640142e5
6401c017:	mov    ecx,DWORD PTR [ebp-0x14]
6401c01a:	mov    edx,DWORD PTR [ecx+0x14]
6401c01d:	xor    ebx,ebx
6401c01f:	cmp    edx,ebx
6401c021:	jne    0x6401c037
6401c023:	mov    eax,DWORD PTR [ebp+0x8]
6401c026:	lea    ecx,[eax-0x41]
6401c029:	cmp    cx,0x19
6401c02d:	ja     0x6401c032
6401c02f:	add    eax,0x20
6401c032:	movzx  eax,ax
6401c035:	jmp    0x6401c094
6401c037:	mov    eax,0x100
6401c03c:	cmp    WORD PTR [ebp+0x8],ax
6401c040:	jae    0x6401c06b
6401c042:	lea    eax,[ebp-0x14]
6401c045:	push   eax
6401c046:	push   0x1
6401c048:	push   DWORD PTR [ebp+0x8]
6401c04b:	call   0x6401c0a3
6401c050:	add    esp,0xc
6401c053:	test   eax,eax
6401c055:	movzx  eax,WORD PTR [ebp+0x8]
6401c059:	je     0x6401c094
6401c05b:	mov    ecx,DWORD PTR [ebp-0x14]
6401c05e:	mov    ecx,DWORD PTR [ecx+0xcc]
6401c064:	movzx  ax,BYTE PTR [ecx+eax*1]
6401c069:	jmp    0x6401c032
6401c06b:	push   DWORD PTR [ecx+0x4]
6401c06e:	lea    ecx,[ebp-0x4]
6401c071:	push   0x1
6401c073:	push   ecx
6401c074:	push   0x1
6401c076:	lea    ecx,[ebp+0x8]
6401c079:	push   ecx
6401c07a:	push   eax
6401c07b:	push   edx
6401c07c:	lea    eax,[ebp-0x14]
6401c07f:	push   eax
6401c080:	call   0x640194dc
6401c085:	add    esp,0x20
6401c088:	test   eax,eax
6401c08a:	movzx  eax,WORD PTR [ebp+0x8]
6401c08e:	je     0x6401c094
6401c090:	movzx  eax,WORD PTR [ebp-0x4]
6401c094:	cmp    BYTE PTR [ebp-0x8],bl
6401c097:	je     0x6401c0a0
6401c099:	mov    ecx,DWORD PTR [ebp-0xc]
6401c09c:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401c0a0:	pop    ebx
6401c0a1:	leave  
6401c0a2:	ret    
6401c0a3:	push   ebp
6401c0a4:	mov    ebp,esp
6401c0a6:	sub    esp,0x14
6401c0a9:	cmp    WORD PTR [ebp+0x8],0xffff
6401c0af:	jne    0x6401c0b7
6401c0b1:	and    DWORD PTR [ebp-0x4],0x0
6401c0b5:	jmp    0x6401c119
6401c0b7:	cmp    WORD PTR [ebp+0x8],0x100
6401c0bd:	jae    0x6401c0d9
6401c0bf:	movzx  eax,WORD PTR [ebp+0x8]
6401c0c3:	mov    ecx,DWORD PTR ds:0x64037758
6401c0c9:	mov    ax,WORD PTR [ecx+eax*2]
6401c0cd:	and    ax,WORD PTR [ebp+0xc]
6401c0d1:	movzx  eax,ax
6401c0d4:	mov    DWORD PTR [ebp-0x4],eax
6401c0d7:	jmp    0x6401c119
6401c0d9:	push   DWORD PTR [ebp+0x10]
6401c0dc:	lea    ecx,[ebp-0x14]
6401c0df:	call   0x640142e5
6401c0e4:	mov    eax,DWORD PTR [ebp-0x14]
6401c0e7:	push   DWORD PTR [eax+0x14]
6401c0ea:	push   DWORD PTR [eax+0x4]
6401c0ed:	lea    eax,[ebp-0x4]
6401c0f0:	push   eax
6401c0f1:	push   0x1
6401c0f3:	lea    eax,[ebp+0x8]
6401c0f6:	push   eax
6401c0f7:	lea    eax,[ebp-0x14]
6401c0fa:	push   0x1
6401c0fc:	push   eax
6401c0fd:	call   0x6401fd20
6401c102:	add    esp,0x1c
6401c105:	test   eax,eax
6401c107:	jne    0x6401c10c
6401c109:	and    DWORD PTR [ebp-0x4],eax
6401c10c:	cmp    BYTE PTR [ebp-0x8],0x0
6401c110:	je     0x6401c119
6401c112:	mov    eax,DWORD PTR [ebp-0xc]
6401c115:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c119:	movzx  eax,WORD PTR [ebp-0x4]
6401c11d:	movzx  ecx,WORD PTR [ebp+0xc]
6401c121:	and    eax,ecx
6401c123:	leave  
6401c124:	ret    
6401c125:	mov    eax,0x640207eb
6401c12a:	mov    ds:0x64038580,eax
6401c12f:	mov    DWORD PTR ds:0x64038584,0x6401fee7
6401c139:	mov    DWORD PTR ds:0x64038588,0x6401fea5
6401c143:	mov    DWORD PTR ds:0x6403858c,0x6401fed9
6401c14d:	mov    DWORD PTR ds:0x64038590,0x6401fe4f
6401c157:	mov    ds:0x64038594,eax
6401c15c:	mov    DWORD PTR ds:0x64038598,0x64020765
6401c166:	mov    DWORD PTR ds:0x6403859c,0x6401fe65
6401c170:	mov    DWORD PTR ds:0x640385a0,0x6401fdcf
6401c17a:	mov    DWORD PTR ds:0x640385a4,0x6401fd5e
6401c184:	ret    
6401c185:	call   0x6401c125
6401c18a:	call   0x64020871
6401c18f:	cmp    DWORD PTR [esp+0x4],0x0
6401c194:	mov    ds:0x64039814,eax
6401c199:	je     0x6401c1a0
6401c19b:	call   0x6402080c
6401c1a0:	fnclex 
6401c1a2:	ret    
6401c1a3:	test   BYTE PTR [eax+0xc],0x40
6401c1a7:	je     0x6401c1af
6401c1a9:	cmp    DWORD PTR [eax+0x8],0x0
6401c1ad:	je     0x6401c1c5
6401c1af:	push   eax
6401c1b0:	push   DWORD PTR [esp+0x8]
6401c1b4:	call   0x64020a66
6401c1b9:	cmp    ax,0xffff
6401c1bd:	pop    ecx
6401c1be:	pop    ecx
6401c1bf:	jne    0x6401c1c5
6401c1c1:	or     DWORD PTR [esi],0xffffffff
6401c1c4:	ret    
6401c1c5:	inc    DWORD PTR [esi]
6401c1c7:	ret    
6401c1c8:	test   BYTE PTR [edi+0xc],0x40
6401c1cc:	push   ebx
6401c1cd:	push   esi
6401c1ce:	mov    esi,eax
6401c1d0:	mov    ebx,ecx
6401c1d2:	je     0x6401c20d
6401c1d4:	cmp    DWORD PTR [edi+0x8],0x0
6401c1d8:	jne    0x6401c20d
6401c1da:	mov    eax,DWORD PTR [esp+0xc]
6401c1de:	add    DWORD PTR [esi],eax
6401c1e0:	jmp    0x6401c214
6401c1e2:	movzx  eax,WORD PTR [ebx]
6401c1e5:	dec    DWORD PTR [esp+0xc]
6401c1e9:	push   eax
6401c1ea:	mov    eax,edi
6401c1ec:	call   0x6401c1a3
6401c1f1:	inc    ebx
6401c1f2:	inc    ebx
6401c1f3:	cmp    DWORD PTR [esi],0xffffffff
6401c1f6:	pop    ecx
6401c1f7:	jne    0x6401c20d
6401c1f9:	call   0x64016483
6401c1fe:	cmp    DWORD PTR [eax],0x2a
6401c201:	jne    0x6401c214
6401c203:	push   0x3f
6401c205:	mov    eax,edi
6401c207:	call   0x6401c1a3
6401c20c:	pop    ecx
6401c20d:	cmp    DWORD PTR [esp+0xc],0x0
6401c212:	jg     0x6401c1e2
6401c214:	pop    esi
6401c215:	pop    ebx
6401c216:	ret    
6401c217:	push   ebp
6401c218:	lea    ebp,[esp-0x3f4]
6401c21f:	sub    esp,0x474
6401c225:	mov    eax,ds:0x64037644
6401c22a:	xor    eax,ebp
6401c22c:	mov    DWORD PTR [ebp+0x3f0],eax
6401c232:	mov    eax,DWORD PTR [ebp+0x3fc]
6401c238:	push   ebx
6401c239:	mov    ebx,DWORD PTR [ebp+0x408]
6401c23f:	push   esi
6401c240:	mov    esi,DWORD PTR [ebp+0x400]
6401c246:	push   edi
6401c247:	push   DWORD PTR [ebp+0x404]
6401c24d:	xor    edi,edi
6401c24f:	lea    ecx,[ebp-0x64]
6401c252:	mov    DWORD PTR [ebp-0x3c],eax
6401c255:	mov    DWORD PTR [ebp-0x28],ebx
6401c258:	mov    DWORD PTR [ebp-0x54],edi
6401c25b:	mov    DWORD PTR [ebp-0x14],edi
6401c25e:	mov    DWORD PTR [ebp-0x38],edi
6401c261:	mov    DWORD PTR [ebp-0x18],edi
6401c264:	mov    DWORD PTR [ebp-0x30],edi
6401c267:	mov    DWORD PTR [ebp-0x48],edi
6401c26a:	mov    DWORD PTR [ebp-0x34],edi
6401c26d:	call   0x640142e5
6401c272:	cmp    DWORD PTR [ebp-0x3c],edi
6401c275:	jne    0x6401c2a4
6401c277:	call   0x64016483
6401c27c:	push   edi
6401c27d:	push   edi
6401c27e:	push   edi
6401c27f:	push   edi
6401c280:	mov    DWORD PTR [eax],0x16
6401c286:	push   edi
6401c287:	call   0x64013e12
6401c28c:	add    esp,0x14
6401c28f:	cmp    BYTE PTR [ebp-0x58],0x0
6401c293:	je     0x6401c29c
6401c295:	mov    eax,DWORD PTR [ebp-0x5c]
6401c298:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c29c:	or     eax,0xffffffff
6401c29f:	jmp    0x6401caef
6401c2a4:	cmp    esi,edi
6401c2a6:	je     0x6401c277
6401c2a8:	movzx  edx,WORD PTR [esi]
6401c2ab:	xor    ecx,ecx
6401c2ad:	cmp    dx,di
6401c2b0:	mov    DWORD PTR [ebp-0x2c],edi
6401c2b3:	mov    DWORD PTR [ebp-0x20],edi
6401c2b6:	mov    DWORD PTR [ebp-0x50],edi
6401c2b9:	mov    DWORD PTR [ebp-0x24],edx
6401c2bc:	je     0x6401cadf
6401c2c2:	push   0x2
6401c2c4:	pop    edi
6401c2c5:	add    esi,edi
6401c2c7:	cmp    DWORD PTR [ebp-0x2c],0x0
6401c2cb:	mov    DWORD PTR [ebp-0x4c],esi
6401c2ce:	jl     0x6401cadf
6401c2d4:	lea    eax,[edx-0x20]
6401c2d7:	cmp    ax,0x58
6401c2db:	ja     0x6401c2ec
6401c2dd:	movzx  eax,dx
6401c2e0:	movzx  eax,BYTE PTR [eax+0x64028568]
6401c2e7:	and    eax,0xf
6401c2ea:	jmp    0x6401c2ee
6401c2ec:	xor    eax,eax
6401c2ee:	movsx  eax,BYTE PTR [ecx+eax*8+0x64028588]
6401c2f6:	push   0x7
6401c2f8:	sar    eax,0x4
6401c2fb:	pop    ecx
6401c2fc:	cmp    eax,ecx
6401c2fe:	mov    DWORD PTR [ebp-0x68],eax
6401c301:	ja     0x6401caad
6401c307:	jmp    DWORD PTR [eax*4+0x6401cb07]
6401c30e:	xor    eax,eax
6401c310:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c314:	mov    DWORD PTR [ebp-0x6c],eax
6401c317:	mov    DWORD PTR [ebp-0x48],eax
6401c31a:	mov    DWORD PTR [ebp-0x38],eax
6401c31d:	mov    DWORD PTR [ebp-0x30],eax
6401c320:	mov    DWORD PTR [ebp-0x14],eax
6401c323:	mov    DWORD PTR [ebp-0x34],eax
6401c326:	jmp    0x6401caad
6401c32b:	movzx  eax,dx
6401c32e:	sub    eax,0x20
6401c331:	je     0x6401c371
6401c333:	sub    eax,0x3
6401c336:	je     0x6401c365
6401c338:	sub    eax,0x8
6401c33b:	je     0x6401c35c
6401c33d:	sub    eax,edi
6401c33f:	je     0x6401c353
6401c341:	sub    eax,0x3
6401c344:	jne    0x6401caad
6401c34a:	or     DWORD PTR [ebp-0x14],0x8
6401c34e:	jmp    0x6401caad
6401c353:	or     DWORD PTR [ebp-0x14],0x4
6401c357:	jmp    0x6401caad
6401c35c:	or     DWORD PTR [ebp-0x14],0x1
6401c360:	jmp    0x6401caad
6401c365:	or     DWORD PTR [ebp-0x14],0x80
6401c36c:	jmp    0x6401caad
6401c371:	or     DWORD PTR [ebp-0x14],edi
6401c374:	jmp    0x6401caad
6401c379:	cmp    dx,0x2a
6401c37d:	jne    0x6401c39f
6401c37f:	add    ebx,0x4
6401c382:	mov    DWORD PTR [ebp-0x28],ebx
6401c385:	mov    ebx,DWORD PTR [ebx-0x4]
6401c388:	test   ebx,ebx
6401c38a:	mov    DWORD PTR [ebp-0x38],ebx
6401c38d:	jge    0x6401caad
6401c393:	or     DWORD PTR [ebp-0x14],0x4
6401c397:	neg    DWORD PTR [ebp-0x38]
6401c39a:	jmp    0x6401caad
6401c39f:	mov    eax,DWORD PTR [ebp-0x38]
6401c3a2:	imul   eax,eax,0xa
6401c3a5:	movzx  ecx,dx
6401c3a8:	lea    eax,[eax+ecx*1-0x30]
6401c3ac:	mov    DWORD PTR [ebp-0x38],eax
6401c3af:	jmp    0x6401caad
6401c3b4:	and    DWORD PTR [ebp-0x18],0x0
6401c3b8:	jmp    0x6401caad
6401c3bd:	cmp    dx,0x2a
6401c3c1:	jne    0x6401c3e0
6401c3c3:	add    ebx,0x4
6401c3c6:	mov    DWORD PTR [ebp-0x28],ebx
6401c3c9:	mov    ebx,DWORD PTR [ebx-0x4]
6401c3cc:	test   ebx,ebx
6401c3ce:	mov    DWORD PTR [ebp-0x18],ebx
6401c3d1:	jge    0x6401caad
6401c3d7:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c3db:	jmp    0x6401caad
6401c3e0:	mov    eax,DWORD PTR [ebp-0x18]
6401c3e3:	imul   eax,eax,0xa
6401c3e6:	movzx  ecx,dx
6401c3e9:	lea    eax,[eax+ecx*1-0x30]
6401c3ed:	mov    DWORD PTR [ebp-0x18],eax
6401c3f0:	jmp    0x6401caad
6401c3f5:	movzx  eax,dx
6401c3f8:	cmp    eax,0x49
6401c3fb:	je     0x6401c445
6401c3fd:	cmp    eax,0x68
6401c400:	je     0x6401c43c
6401c402:	cmp    eax,0x6c
6401c405:	je     0x6401c41c
6401c407:	cmp    eax,0x77
6401c40a:	jne    0x6401caad
6401c410:	or     DWORD PTR [ebp-0x14],0x800
6401c417:	jmp    0x6401caad
6401c41c:	cmp    WORD PTR [esi],0x6c
6401c420:	jne    0x6401c433
6401c422:	add    esi,edi
6401c424:	or     DWORD PTR [ebp-0x14],0x1000
6401c42b:	mov    DWORD PTR [ebp-0x4c],esi
6401c42e:	jmp    0x6401caad
6401c433:	or     DWORD PTR [ebp-0x14],0x10
6401c437:	jmp    0x6401caad
6401c43c:	or     DWORD PTR [ebp-0x14],0x20
6401c440:	jmp    0x6401caad
6401c445:	movzx  eax,WORD PTR [esi]
6401c448:	cmp    ax,0x36
6401c44c:	jne    0x6401c467
6401c44e:	cmp    WORD PTR [esi+0x2],0x34
6401c453:	jne    0x6401c467
6401c455:	add    esi,0x4
6401c458:	or     DWORD PTR [ebp-0x14],0x8000
6401c45f:	mov    DWORD PTR [ebp-0x4c],esi
6401c462:	jmp    0x6401caad
6401c467:	cmp    ax,0x33
6401c46b:	jne    0x6401c486
6401c46d:	cmp    WORD PTR [esi+0x2],0x32
6401c472:	jne    0x6401c486
6401c474:	add    esi,0x4
6401c477:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401c47e:	mov    DWORD PTR [ebp-0x4c],esi
6401c481:	jmp    0x6401caad
6401c486:	cmp    ax,0x64
6401c48a:	je     0x6401caad
6401c490:	cmp    ax,0x69
6401c494:	je     0x6401caad
6401c49a:	cmp    ax,0x6f
6401c49e:	je     0x6401caad
6401c4a4:	cmp    ax,0x75
6401c4a8:	je     0x6401caad
6401c4ae:	cmp    ax,0x78
6401c4b2:	je     0x6401caad
6401c4b8:	cmp    ax,0x58
6401c4bc:	je     0x6401caad
6401c4c2:	and    DWORD PTR [ebp-0x68],0x0
6401c4c6:	mov    eax,DWORD PTR [ebp-0x3c]
6401c4c9:	push   edx
6401c4ca:	lea    esi,[ebp-0x2c]
6401c4cd:	mov    DWORD PTR [ebp-0x34],0x1
6401c4d4:	call   0x6401c1a3
6401c4d9:	jmp    0x6401caac
6401c4de:	movzx  eax,dx
6401c4e1:	cmp    eax,0x64
6401c4e4:	jg     0x6401c691
6401c4ea:	je     0x6401c710
6401c4f0:	cmp    eax,0x53
6401c4f3:	jg     0x6401c5d0
6401c4f9:	je     0x6401c55a
6401c4fb:	sub    eax,0x41
6401c4fe:	je     0x6401c510
6401c500:	sub    eax,edi
6401c502:	je     0x6401c545
6401c504:	sub    eax,edi
6401c506:	je     0x6401c510
6401c508:	sub    eax,edi
6401c50a:	jne    0x6401c991
6401c510:	add    edx,0x20
6401c513:	mov    DWORD PTR [ebp-0x6c],0x1
6401c51a:	mov    DWORD PTR [ebp-0x24],edx
6401c51d:	or     DWORD PTR [ebp-0x14],0x40
6401c521:	cmp    DWORD PTR [ebp-0x18],0x0
6401c525:	lea    esi,[ebp-0x10]
6401c528:	mov    eax,0x200
6401c52d:	mov    DWORD PTR [ebp-0x1c],esi
6401c530:	mov    DWORD PTR [ebp-0x20],eax
6401c533:	jge    0x6401c734
6401c539:	mov    DWORD PTR [ebp-0x18],0x6
6401c540:	jmp    0x6401c781
6401c545:	test   WORD PTR [ebp-0x14],0x830
6401c54b:	jne    0x6401c5ed
6401c551:	or     DWORD PTR [ebp-0x14],0x20
6401c555:	jmp    0x6401c5ed
6401c55a:	test   WORD PTR [ebp-0x14],0x830
6401c560:	jne    0x6401c566
6401c562:	or     DWORD PTR [ebp-0x14],0x20
6401c566:	mov    edi,DWORD PTR [ebp-0x18]
6401c569:	cmp    edi,0xffffffff
6401c56c:	jne    0x6401c573
6401c56e:	mov    edi,0x7fffffff
6401c573:	add    ebx,0x4
6401c576:	test   BYTE PTR [ebp-0x14],0x20
6401c57a:	mov    DWORD PTR [ebp-0x28],ebx
6401c57d:	mov    ebx,DWORD PTR [ebx-0x4]
6401c580:	mov    DWORD PTR [ebp-0x1c],ebx
6401c583:	je     0x6401c964
6401c589:	test   ebx,ebx
6401c58b:	jne    0x6401c595
6401c58d:	mov    eax,ds:0x64038280
6401c592:	mov    DWORD PTR [ebp-0x1c],eax
6401c595:	and    DWORD PTR [ebp-0x20],0x0
6401c599:	test   edi,edi
6401c59b:	mov    esi,DWORD PTR [ebp-0x1c]
6401c59e:	jle    0x6401c991
6401c5a4:	mov    al,BYTE PTR [esi]
6401c5a6:	test   al,al
6401c5a8:	je     0x6401c991
6401c5ae:	lea    ecx,[ebp-0x64]
6401c5b1:	movzx  eax,al
6401c5b4:	push   ecx
6401c5b5:	push   eax
6401c5b6:	call   0x640150d7
6401c5bb:	test   eax,eax
6401c5bd:	pop    ecx
6401c5be:	pop    ecx
6401c5bf:	je     0x6401c5c2
6401c5c1:	inc    esi
6401c5c2:	inc    esi
6401c5c3:	inc    DWORD PTR [ebp-0x20]
6401c5c6:	cmp    DWORD PTR [ebp-0x20],edi
6401c5c9:	jl     0x6401c5a4
6401c5cb:	jmp    0x6401c991
6401c5d0:	sub    eax,0x58
6401c5d3:	je     0x6401c81c
6401c5d9:	sub    eax,edi
6401c5db:	je     0x6401c644
6401c5dd:	sub    eax,ecx
6401c5df:	je     0x6401c51d
6401c5e5:	sub    eax,edi
6401c5e7:	jne    0x6401c991
6401c5ed:	movzx  eax,WORD PTR [ebx]
6401c5f0:	add    ebx,0x4
6401c5f3:	xor    esi,esi
6401c5f5:	inc    esi
6401c5f6:	test   BYTE PTR [ebp-0x14],0x20
6401c5fa:	mov    DWORD PTR [ebp-0x34],esi
6401c5fd:	mov    DWORD PTR [ebp-0x28],ebx
6401c600:	mov    DWORD PTR [ebp-0x70],eax
6401c603:	je     0x6401c632
6401c605:	mov    BYTE PTR [ebp-0x40],al
6401c608:	lea    eax,[ebp-0x64]
6401c60b:	push   eax
6401c60c:	mov    eax,DWORD PTR [ebp-0x64]
6401c60f:	mov    BYTE PTR [ebp-0x3f],0x0
6401c613:	push   DWORD PTR [eax+0xac]
6401c619:	lea    eax,[ebp-0x40]
6401c61c:	push   eax
6401c61d:	lea    eax,[ebp-0x10]
6401c620:	push   eax
6401c621:	call   0x6401ed4b
6401c626:	add    esp,0x10
6401c629:	test   eax,eax
6401c62b:	jge    0x6401c636
6401c62d:	mov    DWORD PTR [ebp-0x48],esi
6401c630:	jmp    0x6401c636
6401c632:	mov    WORD PTR [ebp-0x10],ax
6401c636:	lea    eax,[ebp-0x10]
6401c639:	mov    DWORD PTR [ebp-0x1c],eax
6401c63c:	mov    DWORD PTR [ebp-0x20],esi
6401c63f:	jmp    0x6401c991
6401c644:	mov    eax,DWORD PTR [ebx]
6401c646:	add    ebx,0x4
6401c649:	test   eax,eax
6401c64b:	mov    DWORD PTR [ebp-0x28],ebx
6401c64e:	je     0x6401c67d
6401c650:	mov    ecx,DWORD PTR [eax+0x4]
6401c653:	test   ecx,ecx
6401c655:	je     0x6401c67d
6401c657:	test   WORD PTR [ebp-0x14],0x800
6401c65d:	movsx  eax,WORD PTR [eax]
6401c660:	mov    DWORD PTR [ebp-0x1c],ecx
6401c663:	je     0x6401c674
6401c665:	cdq    
6401c666:	sub    eax,edx
6401c668:	mov    DWORD PTR [ebp-0x34],0x1
6401c66f:	jmp    0x6401c98c
6401c674:	and    DWORD PTR [ebp-0x34],0x0
6401c678:	jmp    0x6401c98e
6401c67d:	mov    eax,ds:0x64038280
6401c682:	mov    DWORD PTR [ebp-0x1c],eax
6401c685:	push   eax
6401c686:	call   0x64015510
6401c68b:	pop    ecx
6401c68c:	jmp    0x6401c98e
6401c691:	cmp    eax,0x70
6401c694:	jg     0x6401c821
6401c69a:	je     0x6401c815
6401c6a0:	cmp    eax,0x65
6401c6a3:	jl     0x6401c991
6401c6a9:	cmp    eax,0x67
6401c6ac:	jle    0x6401c51d
6401c6b2:	cmp    eax,0x69
6401c6b5:	je     0x6401c710
6401c6b7:	cmp    eax,0x6e
6401c6ba:	je     0x6401c6db
6401c6bc:	cmp    eax,0x6f
6401c6bf:	jne    0x6401c991
6401c6c5:	test   BYTE PTR [ebp-0x14],0x80
6401c6c9:	mov    DWORD PTR [ebp-0x24],0x8
6401c6d0:	je     0x6401c71b
6401c6d2:	or     DWORD PTR [ebp-0x14],0x200
6401c6d9:	jmp    0x6401c71b
6401c6db:	mov    esi,DWORD PTR [ebx]
6401c6dd:	add    ebx,0x4
6401c6e0:	mov    DWORD PTR [ebp-0x28],ebx
6401c6e3:	call   0x6401eaf9
6401c6e8:	test   eax,eax
6401c6ea:	je     0x6401cac8
6401c6f0:	test   BYTE PTR [ebp-0x14],0x20
6401c6f4:	je     0x6401c6ff
6401c6f6:	mov    ax,WORD PTR [ebp-0x2c]
6401c6fa:	mov    WORD PTR [esi],ax
6401c6fd:	jmp    0x6401c704
6401c6ff:	mov    eax,DWORD PTR [ebp-0x2c]
6401c702:	mov    DWORD PTR [esi],eax
6401c704:	mov    DWORD PTR [ebp-0x48],0x1
6401c70b:	jmp    0x6401ca9a
6401c710:	or     DWORD PTR [ebp-0x14],0x40
6401c714:	mov    DWORD PTR [ebp-0x24],0xa
6401c71b:	test   WORD PTR [ebp-0x14],0x8000
6401c721:	je     0x6401c86b
6401c727:	mov    eax,DWORD PTR [ebx]
6401c729:	mov    edx,DWORD PTR [ebx+0x4]
6401c72c:	add    ebx,0x8
6401c72f:	jmp    0x6401c8a4
6401c734:	jne    0x6401c745
6401c736:	cmp    dx,0x67
6401c73a:	jne    0x6401c781
6401c73c:	mov    DWORD PTR [ebp-0x18],0x1
6401c743:	jmp    0x6401c781
6401c745:	cmp    DWORD PTR [ebp-0x18],eax
6401c748:	jle    0x6401c74d
6401c74a:	mov    DWORD PTR [ebp-0x18],eax
6401c74d:	cmp    DWORD PTR [ebp-0x18],0xa3
6401c754:	jle    0x6401c781
6401c756:	mov    edi,DWORD PTR [ebp-0x18]
6401c759:	add    edi,0x15d
6401c75f:	push   edi
6401c760:	call   0x64015cef
6401c765:	test   eax,eax
6401c767:	mov    edx,DWORD PTR [ebp-0x24]
6401c76a:	pop    ecx
6401c76b:	mov    DWORD PTR [ebp-0x50],eax
6401c76e:	je     0x6401c77a
6401c770:	mov    DWORD PTR [ebp-0x1c],eax
6401c773:	mov    DWORD PTR [ebp-0x20],edi
6401c776:	mov    esi,eax
6401c778:	jmp    0x6401c781
6401c77a:	mov    DWORD PTR [ebp-0x18],0xa3
6401c781:	mov    eax,DWORD PTR [ebx]
6401c783:	add    ebx,0x8
6401c786:	mov    DWORD PTR [ebp-0x78],eax
6401c789:	mov    eax,DWORD PTR [ebx-0x4]
6401c78c:	mov    DWORD PTR [ebp-0x74],eax
6401c78f:	lea    eax,[ebp-0x64]
6401c792:	push   eax
6401c793:	push   DWORD PTR [ebp-0x6c]
6401c796:	movsx  eax,dl
6401c799:	push   DWORD PTR [ebp-0x18]
6401c79c:	mov    DWORD PTR [ebp-0x28],ebx
6401c79f:	push   eax
6401c7a0:	push   DWORD PTR [ebp-0x20]
6401c7a3:	lea    eax,[ebp-0x78]
6401c7a6:	push   esi
6401c7a7:	push   eax
6401c7a8:	push   DWORD PTR ds:0x64038598
6401c7ae:	call   0x640175ce
6401c7b3:	pop    ecx
6401c7b4:	call   eax
6401c7b6:	mov    ebx,DWORD PTR [ebp-0x14]
6401c7b9:	add    esp,0x1c
6401c7bc:	and    ebx,0x80
6401c7c2:	je     0x6401c7df
6401c7c4:	cmp    DWORD PTR [ebp-0x18],0x0
6401c7c8:	jne    0x6401c7df
6401c7ca:	lea    eax,[ebp-0x64]
6401c7cd:	push   eax
6401c7ce:	push   esi
6401c7cf:	push   DWORD PTR ds:0x640385a4
6401c7d5:	call   0x640175ce
6401c7da:	pop    ecx
6401c7db:	call   eax
6401c7dd:	pop    ecx
6401c7de:	pop    ecx
6401c7df:	cmp    WORD PTR [ebp-0x24],0x67
6401c7e4:	jne    0x6401c7ff
6401c7e6:	test   ebx,ebx
6401c7e8:	jne    0x6401c7ff
6401c7ea:	lea    eax,[ebp-0x64]
6401c7ed:	push   eax
6401c7ee:	push   esi
6401c7ef:	push   DWORD PTR ds:0x640385a0
6401c7f5:	call   0x640175ce
6401c7fa:	pop    ecx
6401c7fb:	call   eax
6401c7fd:	pop    ecx
6401c7fe:	pop    ecx
6401c7ff:	cmp    BYTE PTR [esi],0x2d
6401c802:	jne    0x6401c80f
6401c804:	or     DWORD PTR [ebp-0x14],0x100
6401c80b:	inc    esi
6401c80c:	mov    DWORD PTR [ebp-0x1c],esi
6401c80f:	push   esi
6401c810:	jmp    0x6401c686
6401c815:	mov    DWORD PTR [ebp-0x18],0x8
6401c81c:	mov    DWORD PTR [ebp-0x54],ecx
6401c81f:	jmp    0x6401c842
6401c821:	sub    eax,0x73
6401c824:	je     0x6401c566
6401c82a:	sub    eax,edi
6401c82c:	je     0x6401c714
6401c832:	sub    eax,0x3
6401c835:	jne    0x6401c991
6401c83b:	mov    DWORD PTR [ebp-0x54],0x27
6401c842:	test   BYTE PTR [ebp-0x14],0x80
6401c846:	mov    DWORD PTR [ebp-0x24],0x10
6401c84d:	je     0x6401c71b
6401c853:	mov    eax,DWORD PTR [ebp-0x54]
6401c856:	add    eax,0x51
6401c859:	mov    WORD PTR [ebp-0x44],0x30
6401c85f:	mov    WORD PTR [ebp-0x42],ax
6401c863:	mov    DWORD PTR [ebp-0x30],edi
6401c866:	jmp    0x6401c71b
6401c86b:	test   WORD PTR [ebp-0x14],0x1000
6401c871:	jne    0x6401c727
6401c877:	add    ebx,0x4
6401c87a:	test   BYTE PTR [ebp-0x14],0x20
6401c87e:	je     0x6401c896
6401c880:	test   BYTE PTR [ebp-0x14],0x40
6401c884:	mov    DWORD PTR [ebp-0x28],ebx
6401c887:	je     0x6401c88f
6401c889:	movsx  eax,WORD PTR [ebx-0x4]
6401c88d:	jmp    0x6401c893
6401c88f:	movzx  eax,WORD PTR [ebx-0x4]
6401c893:	cdq    
6401c894:	jmp    0x6401c8a7
6401c896:	test   BYTE PTR [ebp-0x14],0x40
6401c89a:	mov    eax,DWORD PTR [ebx-0x4]
6401c89d:	je     0x6401c8a2
6401c89f:	cdq    
6401c8a0:	jmp    0x6401c8a4
6401c8a2:	xor    edx,edx
6401c8a4:	mov    DWORD PTR [ebp-0x28],ebx
6401c8a7:	test   BYTE PTR [ebp-0x14],0x40
6401c8ab:	je     0x6401c8c5
6401c8ad:	test   edx,edx
6401c8af:	jg     0x6401c8c5
6401c8b1:	jl     0x6401c8b7
6401c8b3:	test   eax,eax
6401c8b5:	jae    0x6401c8c5
6401c8b7:	neg    eax
6401c8b9:	adc    edx,0x0
6401c8bc:	neg    edx
6401c8be:	or     DWORD PTR [ebp-0x14],0x100
6401c8c5:	test   WORD PTR [ebp-0x14],0x9000
6401c8cb:	mov    ebx,edx
6401c8cd:	mov    edi,eax
6401c8cf:	jne    0x6401c8d3
6401c8d1:	xor    ebx,ebx
6401c8d3:	cmp    DWORD PTR [ebp-0x18],0x0
6401c8d7:	jge    0x6401c8e2
6401c8d9:	mov    DWORD PTR [ebp-0x18],0x1
6401c8e0:	jmp    0x6401c8f3
6401c8e2:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401c8e6:	mov    eax,0x200
6401c8eb:	cmp    DWORD PTR [ebp-0x18],eax
6401c8ee:	jle    0x6401c8f3
6401c8f0:	mov    DWORD PTR [ebp-0x18],eax
6401c8f3:	mov    eax,edi
6401c8f5:	or     eax,ebx
6401c8f7:	jne    0x6401c8fc
6401c8f9:	and    DWORD PTR [ebp-0x30],eax
6401c8fc:	lea    esi,[ebp+0x1ef]
6401c902:	mov    eax,DWORD PTR [ebp-0x18]
6401c905:	dec    DWORD PTR [ebp-0x18]
6401c908:	test   eax,eax
6401c90a:	jg     0x6401c912
6401c90c:	mov    eax,edi
6401c90e:	or     eax,ebx
6401c910:	je     0x6401c936
6401c912:	mov    eax,DWORD PTR [ebp-0x24]
6401c915:	cdq    
6401c916:	push   edx
6401c917:	push   eax
6401c918:	push   ebx
6401c919:	push   edi
6401c91a:	call   0x64019890
6401c91f:	add    ecx,0x30
6401c922:	cmp    ecx,0x39
6401c925:	mov    DWORD PTR [ebp-0x7c],ebx
6401c928:	mov    edi,eax
6401c92a:	mov    ebx,edx
6401c92c:	jle    0x6401c931
6401c92e:	add    ecx,DWORD PTR [ebp-0x54]
6401c931:	mov    BYTE PTR [esi],cl
6401c933:	dec    esi
6401c934:	jmp    0x6401c902
6401c936:	lea    eax,[ebp+0x1ef]
6401c93c:	sub    eax,esi
6401c93e:	inc    esi
6401c93f:	test   WORD PTR [ebp-0x14],0x200
6401c945:	mov    DWORD PTR [ebp-0x20],eax
6401c948:	mov    DWORD PTR [ebp-0x1c],esi
6401c94b:	je     0x6401c991
6401c94d:	test   eax,eax
6401c94f:	je     0x6401c958
6401c951:	mov    ecx,esi
6401c953:	cmp    BYTE PTR [ecx],0x30
6401c956:	je     0x6401c991
6401c958:	dec    DWORD PTR [ebp-0x1c]
6401c95b:	mov    ecx,DWORD PTR [ebp-0x1c]
6401c95e:	mov    BYTE PTR [ecx],0x30
6401c961:	inc    eax
6401c962:	jmp    0x6401c98e
6401c964:	test   ebx,ebx
6401c966:	jne    0x6401c970
6401c968:	mov    eax,ds:0x64038284
6401c96d:	mov    DWORD PTR [ebp-0x1c],eax
6401c970:	mov    eax,DWORD PTR [ebp-0x1c]
6401c973:	mov    DWORD PTR [ebp-0x34],0x1
6401c97a:	jmp    0x6401c985
6401c97c:	dec    edi
6401c97d:	cmp    WORD PTR [eax],0x0
6401c981:	je     0x6401c989
6401c983:	inc    eax
6401c984:	inc    eax
6401c985:	test   edi,edi
6401c987:	jne    0x6401c97c
6401c989:	sub    eax,DWORD PTR [ebp-0x1c]
6401c98c:	sar    eax,1
6401c98e:	mov    DWORD PTR [ebp-0x20],eax
6401c991:	cmp    DWORD PTR [ebp-0x48],0x0
6401c995:	jne    0x6401ca9a
6401c99b:	mov    eax,DWORD PTR [ebp-0x14]
6401c99e:	test   al,0x40
6401c9a0:	je     0x6401c9cd
6401c9a2:	test   ax,0x100
6401c9a6:	je     0x6401c9b0
6401c9a8:	mov    WORD PTR [ebp-0x44],0x2d
6401c9ae:	jmp    0x6401c9c6
6401c9b0:	test   al,0x1
6401c9b2:	je     0x6401c9bc
6401c9b4:	mov    WORD PTR [ebp-0x44],0x2b
6401c9ba:	jmp    0x6401c9c6
6401c9bc:	test   al,0x2
6401c9be:	je     0x6401c9cd
6401c9c0:	mov    WORD PTR [ebp-0x44],0x20
6401c9c6:	mov    DWORD PTR [ebp-0x30],0x1
6401c9cd:	mov    ebx,DWORD PTR [ebp-0x38]
6401c9d0:	mov    esi,DWORD PTR [ebp-0x20]
6401c9d3:	sub    ebx,esi
6401c9d5:	sub    ebx,DWORD PTR [ebp-0x30]
6401c9d8:	test   BYTE PTR [ebp-0x14],0xc
6401c9dc:	jne    0x6401c9ef
6401c9de:	push   DWORD PTR [ebp-0x3c]
6401c9e1:	lea    eax,[ebp-0x2c]
6401c9e4:	push   ebx
6401c9e5:	push   0x20
6401c9e7:	call   0x6401cb27
6401c9ec:	add    esp,0xc
6401c9ef:	push   DWORD PTR [ebp-0x30]
6401c9f2:	mov    edi,DWORD PTR [ebp-0x3c]
6401c9f5:	lea    eax,[ebp-0x2c]
6401c9f8:	lea    ecx,[ebp-0x44]
6401c9fb:	call   0x6401c1c8
6401ca00:	test   BYTE PTR [ebp-0x14],0x8
6401ca04:	pop    ecx
6401ca05:	je     0x6401ca1c
6401ca07:	test   BYTE PTR [ebp-0x14],0x4
6401ca0b:	jne    0x6401ca1c
6401ca0d:	push   edi
6401ca0e:	push   ebx
6401ca0f:	push   0x30
6401ca11:	lea    eax,[ebp-0x2c]
6401ca14:	call   0x6401cb27
6401ca19:	add    esp,0xc
6401ca1c:	cmp    DWORD PTR [ebp-0x34],0x0
6401ca20:	jne    0x6401ca70
6401ca22:	test   esi,esi
6401ca24:	jle    0x6401ca70
6401ca26:	mov    edi,DWORD PTR [ebp-0x1c]
6401ca29:	mov    DWORD PTR [ebp-0x24],esi
6401ca2c:	dec    DWORD PTR [ebp-0x24]
6401ca2f:	lea    eax,[ebp-0x64]
6401ca32:	push   eax
6401ca33:	mov    eax,DWORD PTR [ebp-0x64]
6401ca36:	push   DWORD PTR [eax+0xac]
6401ca3c:	lea    eax,[ebp-0x70]
6401ca3f:	push   edi
6401ca40:	push   eax
6401ca41:	call   0x6401ed4b
6401ca46:	add    esp,0x10
6401ca49:	test   eax,eax
6401ca4b:	mov    DWORD PTR [ebp-0x7c],eax
6401ca4e:	jle    0x6401ca6a
6401ca50:	push   DWORD PTR [ebp-0x70]
6401ca53:	mov    eax,DWORD PTR [ebp-0x3c]
6401ca56:	lea    esi,[ebp-0x2c]
6401ca59:	call   0x6401c1a3
6401ca5e:	add    edi,DWORD PTR [ebp-0x7c]
6401ca61:	cmp    DWORD PTR [ebp-0x24],0x0
6401ca65:	pop    ecx
6401ca66:	jg     0x6401ca2c
6401ca68:	jmp    0x6401ca7d
6401ca6a:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401ca6e:	jmp    0x6401ca7d
6401ca70:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ca73:	push   esi
6401ca74:	lea    eax,[ebp-0x2c]
6401ca77:	call   0x6401c1c8
6401ca7c:	pop    ecx
6401ca7d:	cmp    DWORD PTR [ebp-0x2c],0x0
6401ca81:	jl     0x6401ca9a
6401ca83:	test   BYTE PTR [ebp-0x14],0x4
6401ca87:	je     0x6401ca9a
6401ca89:	push   DWORD PTR [ebp-0x3c]
6401ca8c:	lea    eax,[ebp-0x2c]
6401ca8f:	push   ebx
6401ca90:	push   0x20
6401ca92:	call   0x6401cb27
6401ca97:	add    esp,0xc
6401ca9a:	cmp    DWORD PTR [ebp-0x50],0x0
6401ca9e:	je     0x6401caad
6401caa0:	push   DWORD PTR [ebp-0x50]
6401caa3:	call   0x6401477f
6401caa8:	and    DWORD PTR [ebp-0x50],0x0
6401caac:	pop    ecx
6401caad:	mov    esi,DWORD PTR [ebp-0x4c]
6401cab0:	movzx  eax,WORD PTR [esi]
6401cab3:	test   ax,ax
6401cab6:	mov    DWORD PTR [ebp-0x24],eax
6401cab9:	je     0x6401cadf
6401cabb:	mov    ecx,DWORD PTR [ebp-0x68]
6401cabe:	mov    ebx,DWORD PTR [ebp-0x28]
6401cac1:	mov    edx,eax
6401cac3:	jmp    0x6401c2c2
6401cac8:	call   0x64016483
6401cacd:	mov    DWORD PTR [eax],0x16
6401cad3:	xor    eax,eax
6401cad5:	push   eax
6401cad6:	push   eax
6401cad7:	push   eax
6401cad8:	push   eax
6401cad9:	push   eax
6401cada:	jmp    0x6401c287
6401cadf:	cmp    BYTE PTR [ebp-0x58],0x0
6401cae3:	je     0x6401caec
6401cae5:	mov    eax,DWORD PTR [ebp-0x5c]
6401cae8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401caec:	mov    eax,DWORD PTR [ebp-0x2c]
6401caef:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401caf5:	pop    edi
6401caf6:	pop    esi
6401caf7:	xor    ecx,ebp
6401caf9:	pop    ebx
6401cafa:	call   0x64013cc6
6401caff:	add    ebp,0x3f4
6401cb05:	leave  
6401cb06:	ret    
6401cb07:	mov    ah,0x1
6401cb0a:	fs push cs
6401cb0c:	ret    
6401cb0d:	add    DWORD PTR [ebx+ebp*1-0x3d],esp
6401cb11:	add    DWORD PTR [ecx+edi*2-0x3d],esp
6401cb15:	add    DWORD PTR [esp+esi*4-0x3d],esp
6401cb19:	add    DWORD PTR [ebp+edi*4-0x3d],esp
6401cb1d:	add    DWORD PTR [ebp+esi*8-0x3d],esp
6401cb21:	add    DWORD PTR [esi+ebx*8-0x3c],esp
6401cb25:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401cb29:	in     al,dx
6401cb2a:	push   esi
6401cb2b:	mov    esi,eax
6401cb2d:	jmp    0x6401cb43
6401cb2f:	push   DWORD PTR [ebp+0x8]
6401cb32:	mov    eax,DWORD PTR [ebp+0x10]
6401cb35:	dec    DWORD PTR [ebp+0xc]
6401cb38:	call   0x6401c1a3
6401cb3d:	cmp    DWORD PTR [esi],0xffffffff
6401cb40:	pop    ecx
6401cb41:	je     0x6401cb49
6401cb43:	cmp    DWORD PTR [ebp+0xc],0x0
6401cb47:	jg     0x6401cb2f
6401cb49:	pop    esi
6401cb4a:	pop    ebp
6401cb4b:	ret    
6401cb4c:	push   ebp
6401cb4d:	lea    ebp,[esp-0x3f4]
6401cb54:	sub    esp,0x474
6401cb5a:	mov    eax,ds:0x64037644
6401cb5f:	xor    eax,ebp
6401cb61:	mov    DWORD PTR [ebp+0x3f0],eax
6401cb67:	push   ebx
6401cb68:	mov    ebx,DWORD PTR [ebp+0x408]
6401cb6e:	push   esi
6401cb6f:	mov    esi,DWORD PTR [ebp+0x3fc]
6401cb75:	xor    eax,eax
6401cb77:	push   edi
6401cb78:	push   DWORD PTR [ebp+0x404]
6401cb7e:	mov    edi,DWORD PTR [ebp+0x400]
6401cb84:	lea    ecx,[ebp-0x58]
6401cb87:	mov    DWORD PTR [ebp-0x48],esi
6401cb8a:	mov    DWORD PTR [ebp-0x24],ebx
6401cb8d:	mov    DWORD PTR [ebp-0x60],eax
6401cb90:	mov    DWORD PTR [ebp-0x14],eax
6401cb93:	mov    DWORD PTR [ebp-0x38],eax
6401cb96:	mov    DWORD PTR [ebp-0x18],eax
6401cb99:	mov    DWORD PTR [ebp-0x30],eax
6401cb9c:	mov    DWORD PTR [ebp-0x5c],eax
6401cb9f:	mov    DWORD PTR [ebp-0x34],eax
6401cba2:	call   0x640142e5
6401cba7:	test   esi,esi
6401cba9:	jne    0x6401cbda
6401cbab:	call   0x64016483
6401cbb0:	mov    DWORD PTR [eax],0x16
6401cbb6:	xor    eax,eax
6401cbb8:	push   eax
6401cbb9:	push   eax
6401cbba:	push   eax
6401cbbb:	push   eax
6401cbbc:	push   eax
6401cbbd:	call   0x64013e12
6401cbc2:	add    esp,0x14
6401cbc5:	cmp    BYTE PTR [ebp-0x4c],0x0
6401cbc9:	je     0x6401cbd2
6401cbcb:	mov    eax,DWORD PTR [ebp-0x50]
6401cbce:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cbd2:	or     eax,0xffffffff
6401cbd5:	jmp    0x6401d430
6401cbda:	xor    esi,esi
6401cbdc:	cmp    edi,esi
6401cbde:	jne    0x6401cbf2
6401cbe0:	call   0x64016483
6401cbe5:	push   esi
6401cbe6:	push   esi
6401cbe7:	push   esi
6401cbe8:	push   esi
6401cbe9:	mov    DWORD PTR [eax],0x16
6401cbef:	push   esi
6401cbf0:	jmp    0x6401cbbd
6401cbf2:	movzx  ecx,WORD PTR [edi]
6401cbf5:	cmp    cx,si
6401cbf8:	mov    DWORD PTR [ebp-0x2c],esi
6401cbfb:	mov    DWORD PTR [ebp-0x20],esi
6401cbfe:	mov    DWORD PTR [ebp-0x40],esi
6401cc01:	mov    DWORD PTR [ebp-0x64],esi
6401cc04:	mov    DWORD PTR [ebp-0x28],ecx
6401cc07:	je     0x6401d420
6401cc0d:	push   0x2
6401cc0f:	pop    esi
6401cc10:	add    edi,esi
6401cc12:	xor    eax,eax
6401cc14:	cmp    DWORD PTR [ebp-0x2c],eax
6401cc17:	mov    DWORD PTR [ebp-0x6c],edi
6401cc1a:	jl     0x6401d410
6401cc20:	lea    edx,[ecx-0x20]
6401cc23:	cmp    dx,0x58
6401cc27:	ja     0x6401cc36
6401cc29:	movzx  eax,cx
6401cc2c:	movzx  eax,BYTE PTR [eax+0x64028b90]
6401cc33:	and    eax,0xf
6401cc36:	mov    edx,DWORD PTR [ebp-0x40]
6401cc39:	imul   eax,eax,0x9
6401cc3c:	movzx  eax,BYTE PTR [eax+edx*1+0x64028bb0]
6401cc44:	push   0x8
6401cc46:	shr    eax,0x4
6401cc49:	pop    edx
6401cc4a:	cmp    eax,edx
6401cc4c:	mov    DWORD PTR [ebp-0x40],eax
6401cc4f:	je     0x6401cbab
6401cc55:	cmp    eax,0x7
6401cc58:	ja     0x6401d3f8
6401cc5e:	jmp    DWORD PTR [eax*4+0x6401d448]
6401cc65:	xor    eax,eax
6401cc67:	or     DWORD PTR [ebp-0x18],0xffffffff
6401cc6b:	mov    DWORD PTR [ebp-0x68],eax
6401cc6e:	mov    DWORD PTR [ebp-0x5c],eax
6401cc71:	mov    DWORD PTR [ebp-0x38],eax
6401cc74:	mov    DWORD PTR [ebp-0x30],eax
6401cc77:	mov    DWORD PTR [ebp-0x14],eax
6401cc7a:	mov    DWORD PTR [ebp-0x34],eax
6401cc7d:	jmp    0x6401d3fe
6401cc82:	movzx  eax,cx
6401cc85:	sub    eax,0x20
6401cc88:	je     0x6401ccc6
6401cc8a:	sub    eax,0x3
6401cc8d:	je     0x6401ccba
6401cc8f:	sub    eax,edx
6401cc91:	je     0x6401ccb1
6401cc93:	sub    eax,esi
6401cc95:	je     0x6401cca8
6401cc97:	sub    eax,0x3
6401cc9a:	jne    0x6401d3f8
6401cca0:	or     DWORD PTR [ebp-0x14],edx
6401cca3:	jmp    0x6401d3fe
6401cca8:	or     DWORD PTR [ebp-0x14],0x4
6401ccac:	jmp    0x6401d3fe
6401ccb1:	or     DWORD PTR [ebp-0x14],0x1
6401ccb5:	jmp    0x6401d3fe
6401ccba:	or     DWORD PTR [ebp-0x14],0x80
6401ccc1:	jmp    0x6401d3fe
6401ccc6:	or     DWORD PTR [ebp-0x14],esi
6401ccc9:	jmp    0x6401d3fe
6401ccce:	cmp    cx,0x2a
6401ccd2:	jne    0x6401ccf3
6401ccd4:	mov    eax,DWORD PTR [ebx]
6401ccd6:	add    ebx,0x4
6401ccd9:	test   eax,eax
6401ccdb:	mov    DWORD PTR [ebp-0x24],ebx
6401ccde:	mov    DWORD PTR [ebp-0x38],eax
6401cce1:	jge    0x6401d3fe
6401cce7:	or     DWORD PTR [ebp-0x14],0x4
6401cceb:	neg    DWORD PTR [ebp-0x38]
6401ccee:	jmp    0x6401d3fe
6401ccf3:	mov    eax,DWORD PTR [ebp-0x38]
6401ccf6:	imul   eax,eax,0xa
6401ccf9:	movzx  ecx,cx
6401ccfc:	lea    eax,[eax+ecx*1-0x30]
6401cd00:	mov    DWORD PTR [ebp-0x38],eax
6401cd03:	jmp    0x6401d3fe
6401cd08:	and    DWORD PTR [ebp-0x18],0x0
6401cd0c:	jmp    0x6401d3fe
6401cd11:	cmp    cx,0x2a
6401cd15:	jne    0x6401cd33
6401cd17:	mov    eax,DWORD PTR [ebx]
6401cd19:	add    ebx,0x4
6401cd1c:	test   eax,eax
6401cd1e:	mov    DWORD PTR [ebp-0x24],ebx
6401cd21:	mov    DWORD PTR [ebp-0x18],eax
6401cd24:	jge    0x6401d3fe
6401cd2a:	or     DWORD PTR [ebp-0x18],0xffffffff
6401cd2e:	jmp    0x6401d3fe
6401cd33:	mov    eax,DWORD PTR [ebp-0x18]
6401cd36:	imul   eax,eax,0xa
6401cd39:	movzx  ecx,cx
6401cd3c:	lea    eax,[eax+ecx*1-0x30]
6401cd40:	mov    DWORD PTR [ebp-0x18],eax
6401cd43:	jmp    0x6401d3fe
6401cd48:	movzx  eax,cx
6401cd4b:	cmp    eax,0x49
6401cd4e:	je     0x6401cd95
6401cd50:	cmp    eax,0x68
6401cd53:	je     0x6401cd8c
6401cd55:	cmp    eax,0x6c
6401cd58:	je     0x6401cd6f
6401cd5a:	cmp    eax,0x77
6401cd5d:	jne    0x6401d3fe
6401cd63:	or     DWORD PTR [ebp-0x14],0x800
6401cd6a:	jmp    0x6401d3fe
6401cd6f:	cmp    WORD PTR [edi],0x6c
6401cd73:	jne    0x6401cd83
6401cd75:	add    edi,esi
6401cd77:	or     DWORD PTR [ebp-0x14],0x1000
6401cd7e:	jmp    0x6401d3fe
6401cd83:	or     DWORD PTR [ebp-0x14],0x10
6401cd87:	jmp    0x6401d3fe
6401cd8c:	or     DWORD PTR [ebp-0x14],0x20
6401cd90:	jmp    0x6401d3fe
6401cd95:	movzx  eax,WORD PTR [edi]
6401cd98:	cmp    ax,0x36
6401cd9c:	jne    0x6401cdb4
6401cd9e:	cmp    WORD PTR [edi+0x2],0x34
6401cda3:	jne    0x6401cdb4
6401cda5:	add    edi,0x4
6401cda8:	or     DWORD PTR [ebp-0x14],0x8000
6401cdaf:	jmp    0x6401d3fe
6401cdb4:	cmp    ax,0x33
6401cdb8:	jne    0x6401cdd0
6401cdba:	cmp    WORD PTR [edi+0x2],0x32
6401cdbf:	jne    0x6401cdd0
6401cdc1:	add    edi,0x4
6401cdc4:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401cdcb:	jmp    0x6401d3fe
6401cdd0:	cmp    ax,0x64
6401cdd4:	je     0x6401d3fe
6401cdda:	cmp    ax,0x69
6401cdde:	je     0x6401d3fe
6401cde4:	cmp    ax,0x6f
6401cde8:	je     0x6401d3fe
6401cdee:	cmp    ax,0x75
6401cdf2:	je     0x6401d3fe
6401cdf8:	cmp    ax,0x78
6401cdfc:	je     0x6401d3fe
6401ce02:	cmp    ax,0x58
6401ce06:	je     0x6401d3fe
6401ce0c:	and    DWORD PTR [ebp-0x40],0x0
6401ce10:	mov    eax,DWORD PTR [ebp-0x48]
6401ce13:	push   ecx
6401ce14:	lea    esi,[ebp-0x2c]
6401ce17:	mov    DWORD PTR [ebp-0x34],0x1
6401ce1e:	call   0x6401c1a3
6401ce23:	pop    ecx
6401ce24:	jmp    0x6401d3fe
6401ce29:	movzx  eax,cx
6401ce2c:	cmp    eax,0x64
6401ce2f:	jg     0x6401cfdd
6401ce35:	je     0x6401d058
6401ce3b:	cmp    eax,0x53
6401ce3e:	jg     0x6401cf1b
6401ce44:	je     0x6401cea5
6401ce46:	sub    eax,0x41
6401ce49:	je     0x6401ce5b
6401ce4b:	sub    eax,esi
6401ce4d:	je     0x6401ce90
6401ce4f:	sub    eax,esi
6401ce51:	je     0x6401ce5b
6401ce53:	sub    eax,esi
6401ce55:	jne    0x6401d2dc
6401ce5b:	add    ecx,0x20
6401ce5e:	mov    DWORD PTR [ebp-0x68],0x1
6401ce65:	mov    DWORD PTR [ebp-0x28],ecx
6401ce68:	or     DWORD PTR [ebp-0x14],0x40
6401ce6c:	cmp    DWORD PTR [ebp-0x18],0x0
6401ce70:	lea    esi,[ebp-0x10]
6401ce73:	mov    eax,0x200
6401ce78:	mov    DWORD PTR [ebp-0x1c],esi
6401ce7b:	mov    DWORD PTR [ebp-0x20],eax
6401ce7e:	jge    0x6401d07c
6401ce84:	mov    DWORD PTR [ebp-0x18],0x6
6401ce8b:	jmp    0x6401d0cc
6401ce90:	test   WORD PTR [ebp-0x14],0x830
6401ce96:	jne    0x6401cf39
6401ce9c:	or     DWORD PTR [ebp-0x14],0x20
6401cea0:	jmp    0x6401cf39
6401cea5:	test   WORD PTR [ebp-0x14],0x830
6401ceab:	jne    0x6401ceb1
6401cead:	or     DWORD PTR [ebp-0x14],0x20
6401ceb1:	mov    edi,DWORD PTR [ebp-0x18]
6401ceb4:	cmp    edi,0xffffffff
6401ceb7:	jne    0x6401cebe
6401ceb9:	mov    edi,0x7fffffff
6401cebe:	add    ebx,0x4
6401cec1:	test   BYTE PTR [ebp-0x14],0x20
6401cec5:	mov    DWORD PTR [ebp-0x24],ebx
6401cec8:	mov    ebx,DWORD PTR [ebx-0x4]
6401cecb:	mov    DWORD PTR [ebp-0x1c],ebx
6401cece:	je     0x6401d2af
6401ced4:	test   ebx,ebx
6401ced6:	jne    0x6401cee0
6401ced8:	mov    eax,ds:0x64038280
6401cedd:	mov    DWORD PTR [ebp-0x1c],eax
6401cee0:	and    DWORD PTR [ebp-0x20],0x0
6401cee4:	test   edi,edi
6401cee6:	mov    esi,DWORD PTR [ebp-0x1c]
6401cee9:	jle    0x6401d2dc
6401ceef:	mov    al,BYTE PTR [esi]
6401cef1:	test   al,al
6401cef3:	je     0x6401d2dc
6401cef9:	lea    ecx,[ebp-0x58]
6401cefc:	movzx  eax,al
6401ceff:	push   ecx
6401cf00:	push   eax
6401cf01:	call   0x640150d7
6401cf06:	test   eax,eax
6401cf08:	pop    ecx
6401cf09:	pop    ecx
6401cf0a:	je     0x6401cf0d
6401cf0c:	inc    esi
6401cf0d:	inc    esi
6401cf0e:	inc    DWORD PTR [ebp-0x20]
6401cf11:	cmp    DWORD PTR [ebp-0x20],edi
6401cf14:	jl     0x6401ceef
6401cf16:	jmp    0x6401d2dc
6401cf1b:	sub    eax,0x58
6401cf1e:	je     0x6401d163
6401cf24:	sub    eax,esi
6401cf26:	je     0x6401cf90
6401cf28:	sub    eax,0x7
6401cf2b:	je     0x6401ce68
6401cf31:	sub    eax,esi
6401cf33:	jne    0x6401d2dc
6401cf39:	movzx  eax,WORD PTR [ebx]
6401cf3c:	add    ebx,0x4
6401cf3f:	xor    esi,esi
6401cf41:	inc    esi
6401cf42:	test   BYTE PTR [ebp-0x14],0x20
6401cf46:	mov    DWORD PTR [ebp-0x34],esi
6401cf49:	mov    DWORD PTR [ebp-0x24],ebx
6401cf4c:	mov    DWORD PTR [ebp-0x70],eax
6401cf4f:	je     0x6401cf7e
6401cf51:	mov    BYTE PTR [ebp-0x44],al
6401cf54:	lea    eax,[ebp-0x58]
6401cf57:	push   eax
6401cf58:	mov    eax,DWORD PTR [ebp-0x58]
6401cf5b:	mov    BYTE PTR [ebp-0x43],0x0
6401cf5f:	push   DWORD PTR [eax+0xac]
6401cf65:	lea    eax,[ebp-0x44]
6401cf68:	push   eax
6401cf69:	lea    eax,[ebp-0x10]
6401cf6c:	push   eax
6401cf6d:	call   0x6401ed4b
6401cf72:	add    esp,0x10
6401cf75:	test   eax,eax
6401cf77:	jge    0x6401cf82
6401cf79:	mov    DWORD PTR [ebp-0x5c],esi
6401cf7c:	jmp    0x6401cf82
6401cf7e:	mov    WORD PTR [ebp-0x10],ax
6401cf82:	lea    eax,[ebp-0x10]
6401cf85:	mov    DWORD PTR [ebp-0x1c],eax
6401cf88:	mov    DWORD PTR [ebp-0x20],esi
6401cf8b:	jmp    0x6401d2dc
6401cf90:	mov    eax,DWORD PTR [ebx]
6401cf92:	add    ebx,0x4
6401cf95:	test   eax,eax
6401cf97:	mov    DWORD PTR [ebp-0x24],ebx
6401cf9a:	je     0x6401cfc9
6401cf9c:	mov    ecx,DWORD PTR [eax+0x4]
6401cf9f:	test   ecx,ecx
6401cfa1:	je     0x6401cfc9
6401cfa3:	test   WORD PTR [ebp-0x14],0x800
6401cfa9:	movsx  eax,WORD PTR [eax]
6401cfac:	mov    DWORD PTR [ebp-0x1c],ecx
6401cfaf:	je     0x6401cfc0
6401cfb1:	cdq    
6401cfb2:	sub    eax,edx
6401cfb4:	mov    DWORD PTR [ebp-0x34],0x1
6401cfbb:	jmp    0x6401d2d7
6401cfc0:	and    DWORD PTR [ebp-0x34],0x0
6401cfc4:	jmp    0x6401d2d9
6401cfc9:	mov    eax,ds:0x64038280
6401cfce:	mov    DWORD PTR [ebp-0x1c],eax
6401cfd1:	push   eax
6401cfd2:	call   0x64015510
6401cfd7:	pop    ecx
6401cfd8:	jmp    0x6401d2d9
6401cfdd:	cmp    eax,0x70
6401cfe0:	jg     0x6401d16c
6401cfe6:	je     0x6401d160
6401cfec:	cmp    eax,0x65
6401cfef:	jl     0x6401d2dc
6401cff5:	cmp    eax,0x67
6401cff8:	jle    0x6401ce68
6401cffe:	cmp    eax,0x69
6401d001:	je     0x6401d058
6401d003:	cmp    eax,0x6e
6401d006:	je     0x6401d023
6401d008:	cmp    eax,0x6f
6401d00b:	jne    0x6401d2dc
6401d011:	test   BYTE PTR [ebp-0x14],0x80
6401d015:	mov    DWORD PTR [ebp-0x28],edx
6401d018:	je     0x6401d063
6401d01a:	or     DWORD PTR [ebp-0x14],0x200
6401d021:	jmp    0x6401d063
6401d023:	mov    esi,DWORD PTR [ebx]
6401d025:	add    ebx,0x4
6401d028:	mov    DWORD PTR [ebp-0x24],ebx
6401d02b:	call   0x6401eaf9
6401d030:	test   eax,eax
6401d032:	je     0x6401cbab
6401d038:	test   BYTE PTR [ebp-0x14],0x20
6401d03c:	je     0x6401d047
6401d03e:	mov    ax,WORD PTR [ebp-0x2c]
6401d042:	mov    WORD PTR [esi],ax
6401d045:	jmp    0x6401d04c
6401d047:	mov    eax,DWORD PTR [ebp-0x2c]
6401d04a:	mov    DWORD PTR [esi],eax
6401d04c:	mov    DWORD PTR [ebp-0x5c],0x1
6401d053:	jmp    0x6401d3e5
6401d058:	or     DWORD PTR [ebp-0x14],0x40
6401d05c:	mov    DWORD PTR [ebp-0x28],0xa
6401d063:	test   WORD PTR [ebp-0x14],0x8000
6401d069:	je     0x6401d1b6
6401d06f:	add    ebx,edx
6401d071:	mov    eax,DWORD PTR [ebx-0x8]
6401d074:	mov    edx,DWORD PTR [ebx-0x4]
6401d077:	jmp    0x6401d1ef
6401d07c:	jne    0x6401d08d
6401d07e:	cmp    cx,0x67
6401d082:	jne    0x6401d0cc
6401d084:	mov    DWORD PTR [ebp-0x18],0x1
6401d08b:	jmp    0x6401d0cc
6401d08d:	cmp    DWORD PTR [ebp-0x18],eax
6401d090:	jle    0x6401d095
6401d092:	mov    DWORD PTR [ebp-0x18],eax
6401d095:	cmp    DWORD PTR [ebp-0x18],0xa3
6401d09c:	jle    0x6401d0cc
6401d09e:	mov    edi,DWORD PTR [ebp-0x18]
6401d0a1:	add    edi,0x15d
6401d0a7:	push   edi
6401d0a8:	call   0x64015cef
6401d0ad:	test   eax,eax
6401d0af:	pop    ecx
6401d0b0:	mov    ecx,DWORD PTR [ebp-0x28]
6401d0b3:	push   0x8
6401d0b5:	mov    DWORD PTR [ebp-0x64],eax
6401d0b8:	pop    edx
6401d0b9:	je     0x6401d0c5
6401d0bb:	mov    DWORD PTR [ebp-0x1c],eax
6401d0be:	mov    DWORD PTR [ebp-0x20],edi
6401d0c1:	mov    esi,eax
6401d0c3:	jmp    0x6401d0cc
6401d0c5:	mov    DWORD PTR [ebp-0x18],0xa3
6401d0cc:	add    ebx,edx
6401d0ce:	mov    eax,DWORD PTR [ebx-0x8]
6401d0d1:	mov    DWORD PTR [ebp-0x78],eax
6401d0d4:	mov    eax,DWORD PTR [ebx-0x4]
6401d0d7:	mov    DWORD PTR [ebp-0x74],eax
6401d0da:	lea    eax,[ebp-0x58]
6401d0dd:	push   eax
6401d0de:	push   DWORD PTR [ebp-0x68]
6401d0e1:	movsx  eax,cl
6401d0e4:	push   DWORD PTR [ebp-0x18]
6401d0e7:	mov    DWORD PTR [ebp-0x24],ebx
6401d0ea:	push   eax
6401d0eb:	push   DWORD PTR [ebp-0x20]
6401d0ee:	lea    eax,[ebp-0x78]
6401d0f1:	push   esi
6401d0f2:	push   eax
6401d0f3:	push   DWORD PTR ds:0x64038598
6401d0f9:	call   0x640175ce
6401d0fe:	pop    ecx
6401d0ff:	call   eax
6401d101:	mov    ebx,DWORD PTR [ebp-0x14]
6401d104:	add    esp,0x1c
6401d107:	and    ebx,0x80
6401d10d:	je     0x6401d12a
6401d10f:	cmp    DWORD PTR [ebp-0x18],0x0
6401d113:	jne    0x6401d12a
6401d115:	lea    eax,[ebp-0x58]
6401d118:	push   eax
6401d119:	push   esi
6401d11a:	push   DWORD PTR ds:0x640385a4
6401d120:	call   0x640175ce
6401d125:	pop    ecx
6401d126:	call   eax
6401d128:	pop    ecx
6401d129:	pop    ecx
6401d12a:	cmp    WORD PTR [ebp-0x28],0x67
6401d12f:	jne    0x6401d14a
6401d131:	test   ebx,ebx
6401d133:	jne    0x6401d14a
6401d135:	lea    eax,[ebp-0x58]
6401d138:	push   eax
6401d139:	push   esi
6401d13a:	push   DWORD PTR ds:0x640385a0
6401d140:	call   0x640175ce
6401d145:	pop    ecx
6401d146:	call   eax
6401d148:	pop    ecx
6401d149:	pop    ecx
6401d14a:	cmp    BYTE PTR [esi],0x2d
6401d14d:	jne    0x6401d15a
6401d14f:	or     DWORD PTR [ebp-0x14],0x100
6401d156:	inc    esi
6401d157:	mov    DWORD PTR [ebp-0x1c],esi
6401d15a:	push   esi
6401d15b:	jmp    0x6401cfd2
6401d160:	mov    DWORD PTR [ebp-0x18],edx
6401d163:	mov    DWORD PTR [ebp-0x60],0x7
6401d16a:	jmp    0x6401d18d
6401d16c:	sub    eax,0x73
6401d16f:	je     0x6401ceb1
6401d175:	sub    eax,esi
6401d177:	je     0x6401d05c
6401d17d:	sub    eax,0x3
6401d180:	jne    0x6401d2dc
6401d186:	mov    DWORD PTR [ebp-0x60],0x27
6401d18d:	test   BYTE PTR [ebp-0x14],0x80
6401d191:	mov    DWORD PTR [ebp-0x28],0x10
6401d198:	je     0x6401d063
6401d19e:	mov    eax,DWORD PTR [ebp-0x60]
6401d1a1:	add    eax,0x51
6401d1a4:	mov    WORD PTR [ebp-0x3c],0x30
6401d1aa:	mov    WORD PTR [ebp-0x3a],ax
6401d1ae:	mov    DWORD PTR [ebp-0x30],esi
6401d1b1:	jmp    0x6401d063
6401d1b6:	test   WORD PTR [ebp-0x14],0x1000
6401d1bc:	jne    0x6401d06f
6401d1c2:	add    ebx,0x4
6401d1c5:	test   BYTE PTR [ebp-0x14],0x20
6401d1c9:	je     0x6401d1e1
6401d1cb:	test   BYTE PTR [ebp-0x14],0x40
6401d1cf:	mov    DWORD PTR [ebp-0x24],ebx
6401d1d2:	je     0x6401d1da
6401d1d4:	movsx  eax,WORD PTR [ebx-0x4]
6401d1d8:	jmp    0x6401d1de
6401d1da:	movzx  eax,WORD PTR [ebx-0x4]
6401d1de:	cdq    
6401d1df:	jmp    0x6401d1f2
6401d1e1:	test   BYTE PTR [ebp-0x14],0x40
6401d1e5:	mov    eax,DWORD PTR [ebx-0x4]
6401d1e8:	je     0x6401d1ed
6401d1ea:	cdq    
6401d1eb:	jmp    0x6401d1ef
6401d1ed:	xor    edx,edx
6401d1ef:	mov    DWORD PTR [ebp-0x24],ebx
6401d1f2:	test   BYTE PTR [ebp-0x14],0x40
6401d1f6:	je     0x6401d210
6401d1f8:	test   edx,edx
6401d1fa:	jg     0x6401d210
6401d1fc:	jl     0x6401d202
6401d1fe:	test   eax,eax
6401d200:	jae    0x6401d210
6401d202:	neg    eax
6401d204:	adc    edx,0x0
6401d207:	neg    edx
6401d209:	or     DWORD PTR [ebp-0x14],0x100
6401d210:	test   WORD PTR [ebp-0x14],0x9000
6401d216:	mov    ebx,edx
6401d218:	mov    edi,eax
6401d21a:	jne    0x6401d21e
6401d21c:	xor    ebx,ebx
6401d21e:	cmp    DWORD PTR [ebp-0x18],0x0
6401d222:	jge    0x6401d22d
6401d224:	mov    DWORD PTR [ebp-0x18],0x1
6401d22b:	jmp    0x6401d23e
6401d22d:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401d231:	mov    eax,0x200
6401d236:	cmp    DWORD PTR [ebp-0x18],eax
6401d239:	jle    0x6401d23e
6401d23b:	mov    DWORD PTR [ebp-0x18],eax
6401d23e:	mov    eax,edi
6401d240:	or     eax,ebx
6401d242:	jne    0x6401d247
6401d244:	and    DWORD PTR [ebp-0x30],eax
6401d247:	lea    esi,[ebp+0x1ef]
6401d24d:	mov    eax,DWORD PTR [ebp-0x18]
6401d250:	dec    DWORD PTR [ebp-0x18]
6401d253:	test   eax,eax
6401d255:	jg     0x6401d25d
6401d257:	mov    eax,edi
6401d259:	or     eax,ebx
6401d25b:	je     0x6401d281
6401d25d:	mov    eax,DWORD PTR [ebp-0x28]
6401d260:	cdq    
6401d261:	push   edx
6401d262:	push   eax
6401d263:	push   ebx
6401d264:	push   edi
6401d265:	call   0x64019890
6401d26a:	add    ecx,0x30
6401d26d:	cmp    ecx,0x39
6401d270:	mov    DWORD PTR [ebp-0x7c],ebx
6401d273:	mov    edi,eax
6401d275:	mov    ebx,edx
6401d277:	jle    0x6401d27c
6401d279:	add    ecx,DWORD PTR [ebp-0x60]
6401d27c:	mov    BYTE PTR [esi],cl
6401d27e:	dec    esi
6401d27f:	jmp    0x6401d24d
6401d281:	lea    eax,[ebp+0x1ef]
6401d287:	sub    eax,esi
6401d289:	inc    esi
6401d28a:	test   WORD PTR [ebp-0x14],0x200
6401d290:	mov    DWORD PTR [ebp-0x20],eax
6401d293:	mov    DWORD PTR [ebp-0x1c],esi
6401d296:	je     0x6401d2dc
6401d298:	test   eax,eax
6401d29a:	je     0x6401d2a3
6401d29c:	mov    ecx,esi
6401d29e:	cmp    BYTE PTR [ecx],0x30
6401d2a1:	je     0x6401d2dc
6401d2a3:	dec    DWORD PTR [ebp-0x1c]
6401d2a6:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d2a9:	mov    BYTE PTR [ecx],0x30
6401d2ac:	inc    eax
6401d2ad:	jmp    0x6401d2d9
6401d2af:	test   ebx,ebx
6401d2b1:	jne    0x6401d2bb
6401d2b3:	mov    eax,ds:0x64038284
6401d2b8:	mov    DWORD PTR [ebp-0x1c],eax
6401d2bb:	mov    eax,DWORD PTR [ebp-0x1c]
6401d2be:	mov    DWORD PTR [ebp-0x34],0x1
6401d2c5:	jmp    0x6401d2d0
6401d2c7:	dec    edi
6401d2c8:	cmp    WORD PTR [eax],0x0
6401d2cc:	je     0x6401d2d4
6401d2ce:	add    eax,esi
6401d2d0:	test   edi,edi
6401d2d2:	jne    0x6401d2c7
6401d2d4:	sub    eax,DWORD PTR [ebp-0x1c]
6401d2d7:	sar    eax,1
6401d2d9:	mov    DWORD PTR [ebp-0x20],eax
6401d2dc:	cmp    DWORD PTR [ebp-0x5c],0x0
6401d2e0:	jne    0x6401d3e5
6401d2e6:	mov    eax,DWORD PTR [ebp-0x14]
6401d2e9:	test   al,0x40
6401d2eb:	je     0x6401d318
6401d2ed:	test   ax,0x100
6401d2f1:	je     0x6401d2fb
6401d2f3:	mov    WORD PTR [ebp-0x3c],0x2d
6401d2f9:	jmp    0x6401d311
6401d2fb:	test   al,0x1
6401d2fd:	je     0x6401d307
6401d2ff:	mov    WORD PTR [ebp-0x3c],0x2b
6401d305:	jmp    0x6401d311
6401d307:	test   al,0x2
6401d309:	je     0x6401d318
6401d30b:	mov    WORD PTR [ebp-0x3c],0x20
6401d311:	mov    DWORD PTR [ebp-0x30],0x1
6401d318:	mov    ebx,DWORD PTR [ebp-0x38]
6401d31b:	mov    esi,DWORD PTR [ebp-0x20]
6401d31e:	sub    ebx,esi
6401d320:	sub    ebx,DWORD PTR [ebp-0x30]
6401d323:	test   BYTE PTR [ebp-0x14],0xc
6401d327:	jne    0x6401d33a
6401d329:	push   DWORD PTR [ebp-0x48]
6401d32c:	lea    eax,[ebp-0x2c]
6401d32f:	push   ebx
6401d330:	push   0x20
6401d332:	call   0x6401cb27
6401d337:	add    esp,0xc
6401d33a:	push   DWORD PTR [ebp-0x30]
6401d33d:	mov    edi,DWORD PTR [ebp-0x48]
6401d340:	lea    eax,[ebp-0x2c]
6401d343:	lea    ecx,[ebp-0x3c]
6401d346:	call   0x6401c1c8
6401d34b:	test   BYTE PTR [ebp-0x14],0x8
6401d34f:	pop    ecx
6401d350:	je     0x6401d367
6401d352:	test   BYTE PTR [ebp-0x14],0x4
6401d356:	jne    0x6401d367
6401d358:	push   edi
6401d359:	push   ebx
6401d35a:	push   0x30
6401d35c:	lea    eax,[ebp-0x2c]
6401d35f:	call   0x6401cb27
6401d364:	add    esp,0xc
6401d367:	cmp    DWORD PTR [ebp-0x34],0x0
6401d36b:	jne    0x6401d3bb
6401d36d:	test   esi,esi
6401d36f:	jle    0x6401d3bb
6401d371:	mov    edi,DWORD PTR [ebp-0x1c]
6401d374:	mov    DWORD PTR [ebp-0x28],esi
6401d377:	dec    DWORD PTR [ebp-0x28]
6401d37a:	lea    eax,[ebp-0x58]
6401d37d:	push   eax
6401d37e:	mov    eax,DWORD PTR [ebp-0x58]
6401d381:	push   DWORD PTR [eax+0xac]
6401d387:	lea    eax,[ebp-0x70]
6401d38a:	push   edi
6401d38b:	push   eax
6401d38c:	call   0x6401ed4b
6401d391:	add    esp,0x10
6401d394:	test   eax,eax
6401d396:	mov    DWORD PTR [ebp-0x7c],eax
6401d399:	jle    0x6401d3b5
6401d39b:	push   DWORD PTR [ebp-0x70]
6401d39e:	mov    eax,DWORD PTR [ebp-0x48]
6401d3a1:	lea    esi,[ebp-0x2c]
6401d3a4:	call   0x6401c1a3
6401d3a9:	add    edi,DWORD PTR [ebp-0x7c]
6401d3ac:	cmp    DWORD PTR [ebp-0x28],0x0
6401d3b0:	pop    ecx
6401d3b1:	jg     0x6401d377
6401d3b3:	jmp    0x6401d3c8
6401d3b5:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401d3b9:	jmp    0x6401d3c8
6401d3bb:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d3be:	push   esi
6401d3bf:	lea    eax,[ebp-0x2c]
6401d3c2:	call   0x6401c1c8
6401d3c7:	pop    ecx
6401d3c8:	cmp    DWORD PTR [ebp-0x2c],0x0
6401d3cc:	jl     0x6401d3e5
6401d3ce:	test   BYTE PTR [ebp-0x14],0x4
6401d3d2:	je     0x6401d3e5
6401d3d4:	push   DWORD PTR [ebp-0x48]
6401d3d7:	lea    eax,[ebp-0x2c]
6401d3da:	push   ebx
6401d3db:	push   0x20
6401d3dd:	call   0x6401cb27
6401d3e2:	add    esp,0xc
6401d3e5:	cmp    DWORD PTR [ebp-0x64],0x0
6401d3e9:	je     0x6401d3f8
6401d3eb:	push   DWORD PTR [ebp-0x64]
6401d3ee:	call   0x6401477f
6401d3f3:	and    DWORD PTR [ebp-0x64],0x0
6401d3f7:	pop    ecx
6401d3f8:	mov    edi,DWORD PTR [ebp-0x6c]
6401d3fb:	mov    ebx,DWORD PTR [ebp-0x24]
6401d3fe:	movzx  eax,WORD PTR [edi]
6401d401:	test   ax,ax
6401d404:	mov    DWORD PTR [ebp-0x28],eax
6401d407:	je     0x6401d410
6401d409:	mov    ecx,eax
6401d40b:	jmp    0x6401cc0d
6401d410:	cmp    DWORD PTR [ebp-0x40],0x0
6401d414:	je     0x6401d420
6401d416:	cmp    DWORD PTR [ebp-0x40],0x7
6401d41a:	jne    0x6401cbab
6401d420:	cmp    BYTE PTR [ebp-0x4c],0x0
6401d424:	je     0x6401d42d
6401d426:	mov    eax,DWORD PTR [ebp-0x50]
6401d429:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d42d:	mov    eax,DWORD PTR [ebp-0x2c]
6401d430:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401d436:	pop    edi
6401d437:	pop    esi
6401d438:	xor    ecx,ebp
6401d43a:	pop    ebx
6401d43b:	call   0x64013cc6
6401d440:	add    ebp,0x3f4
6401d446:	leave  
6401d447:	ret    
6401d448:	adc    dh,cl
6401d44a:	add    DWORD PTR [ebp+eiz*2-0x34],esp
6401d44e:	add    DWORD PTR [edx+eax*4-0x34],esp
6401d452:	add    DWORD PTR [esi+ecx*8-0x34],esp
6401d456:	add    DWORD PTR [eax+ecx*1-0x33],esp
6401d45a:	add    DWORD PTR [ecx+edx*1-0x33],esp
6401d45e:	add    DWORD PTR [eax+ecx*2-0x33],esp
6401d462:	add    DWORD PTR [ecx+ebp*1-0x32],esp
6401d466:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d46a:	in     al,dx
6401d46b:	sub    esp,0x30
6401d46e:	push   ebx
6401d46f:	push   esi
6401d470:	push   DWORD PTR [ebp+0x8]
6401d473:	lea    ecx,[ebp-0x30]
6401d476:	call   0x640142e5
6401d47b:	mov    eax,DWORD PTR [ebp+0x10]
6401d47e:	mov    ebx,DWORD PTR [ebp+0xc]
6401d481:	xor    esi,esi
6401d483:	cmp    eax,esi
6401d485:	je     0x6401d489
6401d487:	mov    DWORD PTR [eax],ebx
6401d489:	cmp    ebx,esi
6401d48b:	jne    0x6401d4bb
6401d48d:	call   0x64016483
6401d492:	push   esi
6401d493:	push   esi
6401d494:	push   esi
6401d495:	push   esi
6401d496:	push   esi
6401d497:	mov    DWORD PTR [eax],0x16
6401d49d:	call   0x64013e12
6401d4a2:	add    esp,0x14
6401d4a5:	cmp    BYTE PTR [ebp-0x24],0x0
6401d4a9:	je     0x6401d4b2
6401d4ab:	mov    eax,DWORD PTR [ebp-0x28]
6401d4ae:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d4b2:	xor    eax,eax
6401d4b4:	xor    edx,edx
6401d4b6:	jmp    0x6401d714
6401d4bb:	cmp    DWORD PTR [ebp+0x14],esi
6401d4be:	je     0x6401d4cc
6401d4c0:	cmp    DWORD PTR [ebp+0x14],0x2
6401d4c4:	jl     0x6401d48d
6401d4c6:	cmp    DWORD PTR [ebp+0x14],0x24
6401d4ca:	jg     0x6401d48d
6401d4cc:	push   edi
6401d4cd:	mov    DWORD PTR [ebp-0x8],esi
6401d4d0:	mov    DWORD PTR [ebp-0x4],esi
6401d4d3:	movzx  esi,WORD PTR [ebx]
6401d4d6:	lea    edi,[ebx+0x2]
6401d4d9:	jmp    0x6401d4e0
6401d4db:	movzx  esi,WORD PTR [edi]
6401d4de:	inc    edi
6401d4df:	inc    edi
6401d4e0:	lea    eax,[ebp-0x30]
6401d4e3:	push   eax
6401d4e4:	push   0x8
6401d4e6:	push   esi
6401d4e7:	call   0x6401c0a3
6401d4ec:	add    esp,0xc
6401d4ef:	test   eax,eax
6401d4f1:	jne    0x6401d4db
6401d4f3:	cmp    si,0x2d
6401d4f7:	jne    0x6401d4ff
6401d4f9:	or     DWORD PTR [ebp+0x18],0x2
6401d4fd:	jmp    0x6401d505
6401d4ff:	cmp    si,0x2b
6401d503:	jne    0x6401d50a
6401d505:	movzx  esi,WORD PTR [edi]
6401d508:	inc    edi
6401d509:	inc    edi
6401d50a:	mov    eax,DWORD PTR [ebp+0x14]
6401d50d:	test   eax,eax
6401d50f:	jl     0x6401d6f9
6401d515:	cmp    eax,0x1
6401d518:	je     0x6401d6f9
6401d51e:	cmp    eax,0x24
6401d521:	jg     0x6401d6f9
6401d527:	test   eax,eax
6401d529:	push   0x10
6401d52b:	pop    ebx
6401d52c:	jne    0x6401d55d
6401d52e:	push   esi
6401d52f:	call   0x64020c44
6401d534:	test   eax,eax
6401d536:	pop    ecx
6401d537:	je     0x6401d542
6401d539:	mov    DWORD PTR [ebp+0x14],0xa
6401d540:	jmp    0x6401d583
6401d542:	movzx  eax,WORD PTR [edi]
6401d545:	cmp    ax,0x78
6401d549:	je     0x6401d55a
6401d54b:	cmp    ax,0x58
6401d54f:	je     0x6401d55a
6401d551:	mov    DWORD PTR [ebp+0x14],0x8
6401d558:	jmp    0x6401d583
6401d55a:	mov    DWORD PTR [ebp+0x14],ebx
6401d55d:	cmp    DWORD PTR [ebp+0x14],ebx
6401d560:	jne    0x6401d583
6401d562:	push   esi
6401d563:	call   0x64020c44
6401d568:	test   eax,eax
6401d56a:	pop    ecx
6401d56b:	jne    0x6401d583
6401d56d:	movzx  eax,WORD PTR [edi]
6401d570:	cmp    ax,0x78
6401d574:	je     0x6401d57c
6401d576:	cmp    ax,0x58
6401d57a:	jne    0x6401d583
6401d57c:	inc    edi
6401d57d:	inc    edi
6401d57e:	movzx  esi,WORD PTR [edi]
6401d581:	inc    edi
6401d582:	inc    edi
6401d583:	mov    eax,DWORD PTR [ebp+0x14]
6401d586:	cdq    
6401d587:	push   edx
6401d588:	push   eax
6401d589:	push   0xffffffff
6401d58b:	push   0xffffffff
6401d58d:	mov    DWORD PTR [ebp-0x20],eax
6401d590:	mov    DWORD PTR [ebp-0x1c],edx
6401d593:	call   0x64019890
6401d598:	mov    DWORD PTR [ebp-0x18],ecx
6401d59b:	mov    DWORD PTR [ebp-0x14],ebx
6401d59e:	mov    DWORD PTR [ebp-0x10],eax
6401d5a1:	mov    DWORD PTR [ebp-0xc],edx
6401d5a4:	push   esi
6401d5a5:	call   0x64020c44
6401d5aa:	mov    ebx,eax
6401d5ac:	cmp    ebx,0xffffffff
6401d5af:	pop    ecx
6401d5b0:	jne    0x6401d5d9
6401d5b2:	cmp    si,0x41
6401d5b6:	jb     0x6401d5be
6401d5b8:	cmp    si,0x5a
6401d5bc:	jbe    0x6401d5c7
6401d5be:	lea    eax,[esi-0x61]
6401d5c1:	cmp    ax,0x19
6401d5c5:	ja     0x6401d619
6401d5c7:	lea    eax,[esi-0x61]
6401d5ca:	cmp    ax,0x19
6401d5ce:	movzx  eax,si
6401d5d1:	ja     0x6401d5d6
6401d5d3:	sub    eax,0x20
6401d5d6:	lea    ebx,[eax-0x37]
6401d5d9:	cmp    ebx,DWORD PTR [ebp+0x14]
6401d5dc:	jae    0x6401d619
6401d5de:	mov    ecx,DWORD PTR [ebp-0x4]
6401d5e1:	or     DWORD PTR [ebp+0x18],0x8
6401d5e5:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d5e8:	jb     0x6401d637
6401d5ea:	ja     0x6401d5f4
6401d5ec:	mov    eax,DWORD PTR [ebp-0x8]
6401d5ef:	cmp    eax,DWORD PTR [ebp-0x10]
6401d5f2:	jb     0x6401d637
6401d5f4:	mov    eax,DWORD PTR [ebp-0x10]
6401d5f7:	cmp    DWORD PTR [ebp-0x8],eax
6401d5fa:	jne    0x6401d60f
6401d5fc:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d5ff:	jne    0x6401d60f
6401d601:	xor    eax,eax
6401d603:	cmp    eax,DWORD PTR [ebp-0x14]
6401d606:	jb     0x6401d637
6401d608:	ja     0x6401d60f
6401d60a:	cmp    ebx,DWORD PTR [ebp-0x18]
6401d60d:	jbe    0x6401d637
6401d60f:	or     DWORD PTR [ebp+0x18],0x4
6401d613:	cmp    DWORD PTR [ebp+0x10],0x0
6401d617:	jne    0x6401d652
6401d619:	mov    eax,DWORD PTR [ebp+0x18]
6401d61c:	dec    edi
6401d61d:	dec    edi
6401d61e:	test   al,0x8
6401d620:	jne    0x6401d65c
6401d622:	xor    eax,eax
6401d624:	cmp    DWORD PTR [ebp+0x10],eax
6401d627:	je     0x6401d62c
6401d629:	mov    edi,DWORD PTR [ebp+0xc]
6401d62c:	mov    DWORD PTR [ebp-0x8],eax
6401d62f:	mov    DWORD PTR [ebp-0x4],eax
6401d632:	jmp    0x6401d6c2
6401d637:	push   ecx
6401d638:	push   DWORD PTR [ebp-0x8]
6401d63b:	push   DWORD PTR [ebp-0x1c]
6401d63e:	push   DWORD PTR [ebp-0x20]
6401d641:	call   0x64020dd0
6401d646:	xor    ecx,ecx
6401d648:	add    eax,ebx
6401d64a:	adc    edx,ecx
6401d64c:	mov    DWORD PTR [ebp-0x8],eax
6401d64f:	mov    DWORD PTR [ebp-0x4],edx
6401d652:	movzx  esi,WORD PTR [edi]
6401d655:	inc    edi
6401d656:	inc    edi
6401d657:	jmp    0x6401d5a4
6401d65c:	test   al,0x4
6401d65e:	mov    esi,0x7fffffff
6401d663:	mov    ebx,0x80000000
6401d668:	jne    0x6401d691
6401d66a:	test   al,0x1
6401d66c:	jne    0x6401d6c2
6401d66e:	and    eax,0x2
6401d671:	je     0x6401d680
6401d673:	cmp    DWORD PTR [ebp-0x4],ebx
6401d676:	ja     0x6401d691
6401d678:	jb     0x6401d680
6401d67a:	cmp    DWORD PTR [ebp-0x8],0x0
6401d67e:	ja     0x6401d691
6401d680:	test   eax,eax
6401d682:	jne    0x6401d6c2
6401d684:	cmp    DWORD PTR [ebp-0x4],esi
6401d687:	jb     0x6401d6c2
6401d689:	ja     0x6401d691
6401d68b:	cmp    DWORD PTR [ebp-0x8],0xffffffff
6401d68f:	jbe    0x6401d6c2
6401d691:	call   0x64016483
6401d696:	test   BYTE PTR [ebp+0x18],0x1
6401d69a:	mov    DWORD PTR [eax],0x22
6401d6a0:	je     0x6401d6ac
6401d6a2:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d6a6:	or     DWORD PTR [ebp-0x4],0xffffffff
6401d6aa:	jmp    0x6401d6c2
6401d6ac:	test   BYTE PTR [ebp+0x18],0x2
6401d6b0:	je     0x6401d6bb
6401d6b2:	and    DWORD PTR [ebp-0x8],0x0
6401d6b6:	mov    DWORD PTR [ebp-0x4],ebx
6401d6b9:	jmp    0x6401d6c2
6401d6bb:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d6bf:	mov    DWORD PTR [ebp-0x4],esi
6401d6c2:	mov    eax,DWORD PTR [ebp+0x10]
6401d6c5:	test   eax,eax
6401d6c7:	je     0x6401d6cb
6401d6c9:	mov    DWORD PTR [eax],edi
6401d6cb:	test   BYTE PTR [ebp+0x18],0x2
6401d6cf:	je     0x6401d6e4
6401d6d1:	mov    eax,DWORD PTR [ebp-0x8]
6401d6d4:	mov    ecx,DWORD PTR [ebp-0x4]
6401d6d7:	neg    eax
6401d6d9:	adc    ecx,0x0
6401d6dc:	neg    ecx
6401d6de:	mov    DWORD PTR [ebp-0x8],eax
6401d6e1:	mov    DWORD PTR [ebp-0x4],ecx
6401d6e4:	cmp    BYTE PTR [ebp-0x24],0x0
6401d6e8:	je     0x6401d6f1
6401d6ea:	mov    eax,DWORD PTR [ebp-0x28]
6401d6ed:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d6f1:	mov    eax,DWORD PTR [ebp-0x8]
6401d6f4:	mov    edx,DWORD PTR [ebp-0x4]
6401d6f7:	jmp    0x6401d713
6401d6f9:	mov    eax,DWORD PTR [ebp+0x10]
6401d6fc:	test   eax,eax
6401d6fe:	je     0x6401d702
6401d700:	mov    DWORD PTR [eax],ebx
6401d702:	cmp    BYTE PTR [ebp-0x24],0x0
6401d706:	je     0x6401d70f
6401d708:	mov    eax,DWORD PTR [ebp-0x28]
6401d70b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d70f:	xor    eax,eax
6401d711:	xor    edx,edx
6401d713:	pop    edi
6401d714:	pop    esi
6401d715:	pop    ebx
6401d716:	leave  
6401d717:	ret    
6401d718:	push   ebp
6401d719:	mov    ebp,esp
6401d71b:	xor    eax,eax
6401d71d:	cmp    DWORD PTR ds:0x64038ea8,eax
6401d723:	push   eax
6401d724:	push   DWORD PTR [ebp+0x10]
6401d727:	push   DWORD PTR [ebp+0xc]
6401d72a:	push   DWORD PTR [ebp+0x8]
6401d72d:	jne    0x6401d736
6401d72f:	push   0x64037ff8
6401d734:	jmp    0x6401d737
6401d736:	push   eax
6401d737:	call   0x6401d468
6401d73c:	add    esp,0x14
6401d73f:	pop    ebp
6401d740:	ret    
6401d741:	mov    eax,DWORD PTR [esp+0x4]
6401d745:	mov    ds:0x64039820,eax
6401d74a:	ret    
6401d74b:	push   ebp
6401d74c:	mov    ebp,esp
6401d74e:	sub    esp,0x10
6401d751:	push   DWORD PTR [ebp+0x8]
6401d754:	lea    ecx,[ebp-0x10]
6401d757:	call   0x640142e5
6401d75c:	movzx  eax,BYTE PTR [ebp+0xc]
6401d760:	mov    ecx,DWORD PTR [ebp-0xc]
6401d763:	mov    dl,BYTE PTR [ebp+0x14]
6401d766:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d76a:	jne    0x6401d78a
6401d76c:	cmp    DWORD PTR [ebp+0x10],0x0
6401d770:	je     0x6401d784
6401d772:	mov    ecx,DWORD PTR [ebp-0x10]
6401d775:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d77b:	movzx  eax,WORD PTR [ecx+eax*2]
6401d77f:	and    eax,DWORD PTR [ebp+0x10]
6401d782:	jmp    0x6401d786
6401d784:	xor    eax,eax
6401d786:	test   eax,eax
6401d788:	je     0x6401d78d
6401d78a:	xor    eax,eax
6401d78c:	inc    eax
6401d78d:	cmp    BYTE PTR [ebp-0x4],0x0
6401d791:	je     0x6401d79a
6401d793:	mov    ecx,DWORD PTR [ebp-0x8]
6401d796:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d79a:	leave  
6401d79b:	ret    
6401d79c:	push   0x4
6401d79e:	push   0x0
6401d7a0:	push   DWORD PTR [esp+0xc]
6401d7a4:	push   0x0
6401d7a6:	call   0x6401d74b
6401d7ab:	add    esp,0x10
6401d7ae:	ret    
6401d7af:	push   ebp
6401d7b0:	mov    ebp,esp
6401d7b2:	sub    esp,0x4
6401d7b5:	mov    DWORD PTR [ebp-0x4],edi
6401d7b8:	mov    edi,DWORD PTR [ebp+0x8]
6401d7bb:	mov    ecx,DWORD PTR [ebp+0xc]
6401d7be:	shr    ecx,0x7
6401d7c1:	pxor   xmm0,xmm0
6401d7c5:	jmp    0x6401d7cf
6401d7c7:	lea    esp,[esp+0x0]
6401d7ce:	nop
6401d7cf:	movdqa XMMWORD PTR [edi],xmm0
6401d7d3:	movdqa XMMWORD PTR [edi+0x10],xmm0
6401d7d8:	movdqa XMMWORD PTR [edi+0x20],xmm0
6401d7dd:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401d7e2:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401d7e7:	movdqa XMMWORD PTR [edi+0x50],xmm0
6401d7ec:	movdqa XMMWORD PTR [edi+0x60],xmm0
6401d7f1:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401d7f6:	lea    edi,[edi+0x80]
6401d7fc:	dec    ecx
6401d7fd:	jne    0x6401d7cf
6401d7ff:	mov    edi,DWORD PTR [ebp-0x4]
6401d802:	mov    esp,ebp
6401d804:	pop    ebp
6401d805:	ret    
6401d806:	push   ebp
6401d807:	mov    ebp,esp
6401d809:	sub    esp,0x10
6401d80c:	mov    DWORD PTR [ebp-0x4],edi
6401d80f:	mov    eax,DWORD PTR [ebp+0x8]
6401d812:	cdq    
6401d813:	mov    edi,eax
6401d815:	xor    edi,edx
6401d817:	sub    edi,edx
6401d819:	and    edi,0xf
6401d81c:	xor    edi,edx
6401d81e:	sub    edi,edx
6401d820:	test   edi,edi
6401d822:	jne    0x6401d860
6401d824:	mov    ecx,DWORD PTR [ebp+0x10]
6401d827:	mov    edx,ecx
6401d829:	and    edx,0x7f
6401d82c:	mov    DWORD PTR [ebp-0xc],edx
6401d82f:	cmp    ecx,edx
6401d831:	je     0x6401d845
6401d833:	sub    ecx,edx
6401d835:	push   ecx
6401d836:	push   eax
6401d837:	call   0x6401d7af
6401d83c:	add    esp,0x8
6401d83f:	mov    eax,DWORD PTR [ebp+0x8]
6401d842:	mov    edx,DWORD PTR [ebp-0xc]
6401d845:	test   edx,edx
6401d847:	je     0x6401d88e
6401d849:	add    eax,DWORD PTR [ebp+0x10]
6401d84c:	sub    eax,edx
6401d84e:	mov    DWORD PTR [ebp-0x8],eax
6401d851:	xor    eax,eax
6401d853:	mov    edi,DWORD PTR [ebp-0x8]
6401d856:	mov    ecx,DWORD PTR [ebp-0xc]
6401d859:	rep stos BYTE PTR es:[edi],al
6401d85b:	mov    eax,DWORD PTR [ebp+0x8]
6401d85e:	jmp    0x6401d88e
6401d860:	neg    edi
6401d862:	add    edi,0x10
6401d865:	mov    DWORD PTR [ebp-0x10],edi
6401d868:	xor    eax,eax
6401d86a:	mov    edi,DWORD PTR [ebp+0x8]
6401d86d:	mov    ecx,DWORD PTR [ebp-0x10]
6401d870:	rep stos BYTE PTR es:[edi],al
6401d872:	mov    eax,DWORD PTR [ebp-0x10]
6401d875:	mov    ecx,DWORD PTR [ebp+0x8]
6401d878:	mov    edx,DWORD PTR [ebp+0x10]
6401d87b:	add    ecx,eax
6401d87d:	sub    edx,eax
6401d87f:	push   edx
6401d880:	push   0x0
6401d882:	push   ecx
6401d883:	call   0x6401d806
6401d888:	add    esp,0xc
6401d88b:	mov    eax,DWORD PTR [ebp+0x8]
6401d88e:	mov    edi,DWORD PTR [ebp-0x4]
6401d891:	mov    esp,ebp
6401d893:	pop    ebp
6401d894:	ret    
6401d895:	and    DWORD PTR ds:0x64039b14,0x0
6401d89c:	call   0x640210a8
6401d8a1:	mov    ds:0x64039b14,eax
6401d8a6:	xor    eax,eax
6401d8a8:	ret    
6401d8a9:	push   ebp
6401d8aa:	mov    ebp,esp
6401d8ac:	sub    esp,0x8
6401d8af:	mov    DWORD PTR [ebp-0x4],edi
6401d8b2:	mov    DWORD PTR [ebp-0x8],esi
6401d8b5:	mov    esi,DWORD PTR [ebp+0xc]
6401d8b8:	mov    edi,DWORD PTR [ebp+0x8]
6401d8bb:	mov    ecx,DWORD PTR [ebp+0x10]
6401d8be:	shr    ecx,0x7
6401d8c1:	jmp    0x6401d8c9
6401d8c3:	lea    ebx,[ebx+0x0]
6401d8c9:	movdqa xmm0,XMMWORD PTR [esi]
6401d8cd:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401d8d2:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401d8d7:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401d8dc:	movdqa XMMWORD PTR [edi],xmm0
6401d8e0:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401d8e5:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401d8ea:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401d8ef:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401d8f4:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401d8f9:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401d8fe:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401d903:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401d908:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401d90d:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401d912:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401d917:	lea    esi,[esi+0x80]
6401d91d:	lea    edi,[edi+0x80]
6401d923:	dec    ecx
6401d924:	jne    0x6401d8c9
6401d926:	mov    esi,DWORD PTR [ebp-0x8]
6401d929:	mov    edi,DWORD PTR [ebp-0x4]
6401d92c:	mov    esp,ebp
6401d92e:	pop    ebp
6401d92f:	ret    
6401d930:	push   ebp
6401d931:	mov    ebp,esp
6401d933:	sub    esp,0x1c
6401d936:	mov    DWORD PTR [ebp-0xc],edi
6401d939:	mov    DWORD PTR [ebp-0x8],esi
6401d93c:	mov    DWORD PTR [ebp-0x4],ebx
6401d93f:	mov    ebx,DWORD PTR [ebp+0xc]
6401d942:	mov    eax,ebx
6401d944:	cdq    
6401d945:	mov    ecx,eax
6401d947:	mov    eax,DWORD PTR [ebp+0x8]
6401d94a:	xor    ecx,edx
6401d94c:	sub    ecx,edx
6401d94e:	and    ecx,0xf
6401d951:	xor    ecx,edx
6401d953:	sub    ecx,edx
6401d955:	cdq    
6401d956:	mov    edi,eax
6401d958:	xor    edi,edx
6401d95a:	sub    edi,edx
6401d95c:	and    edi,0xf
6401d95f:	xor    edi,edx
6401d961:	sub    edi,edx
6401d963:	mov    edx,ecx
6401d965:	or     edx,edi
6401d967:	jne    0x6401d9b3
6401d969:	mov    esi,DWORD PTR [ebp+0x10]
6401d96c:	mov    ecx,esi
6401d96e:	and    ecx,0x7f
6401d971:	mov    DWORD PTR [ebp-0x18],ecx
6401d974:	cmp    esi,ecx
6401d976:	je     0x6401d98b
6401d978:	sub    esi,ecx
6401d97a:	push   esi
6401d97b:	push   ebx
6401d97c:	push   eax
6401d97d:	call   0x6401d8a9
6401d982:	add    esp,0xc
6401d985:	mov    eax,DWORD PTR [ebp+0x8]
6401d988:	mov    ecx,DWORD PTR [ebp-0x18]
6401d98b:	test   ecx,ecx
6401d98d:	je     0x6401da06
6401d98f:	mov    ebx,DWORD PTR [ebp+0x10]
6401d992:	mov    edx,DWORD PTR [ebp+0xc]
6401d995:	add    edx,ebx
6401d997:	sub    edx,ecx
6401d999:	mov    DWORD PTR [ebp-0x14],edx
6401d99c:	add    ebx,eax
6401d99e:	sub    ebx,ecx
6401d9a0:	mov    DWORD PTR [ebp-0x10],ebx
6401d9a3:	mov    esi,DWORD PTR [ebp-0x14]
6401d9a6:	mov    edi,DWORD PTR [ebp-0x10]
6401d9a9:	mov    ecx,DWORD PTR [ebp-0x18]
6401d9ac:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401d9ae:	mov    eax,DWORD PTR [ebp+0x8]
6401d9b1:	jmp    0x6401da06
6401d9b3:	cmp    ecx,edi
6401d9b5:	jne    0x6401d9ec
6401d9b7:	neg    ecx
6401d9b9:	add    ecx,0x10
6401d9bc:	mov    DWORD PTR [ebp-0x1c],ecx
6401d9bf:	mov    esi,DWORD PTR [ebp+0xc]
6401d9c2:	mov    edi,DWORD PTR [ebp+0x8]
6401d9c5:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d9c8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401d9ca:	mov    ecx,DWORD PTR [ebp+0x8]
6401d9cd:	add    ecx,DWORD PTR [ebp-0x1c]
6401d9d0:	mov    edx,DWORD PTR [ebp+0xc]
6401d9d3:	add    edx,DWORD PTR [ebp-0x1c]
6401d9d6:	mov    eax,DWORD PTR [ebp+0x10]
6401d9d9:	sub    eax,DWORD PTR [ebp-0x1c]
6401d9dc:	push   eax
6401d9dd:	push   edx
6401d9de:	push   ecx
6401d9df:	call   0x6401d930
6401d9e4:	add    esp,0xc
6401d9e7:	mov    eax,DWORD PTR [ebp+0x8]
6401d9ea:	jmp    0x6401da06
6401d9ec:	mov    esi,DWORD PTR [ebp+0xc]
6401d9ef:	mov    edi,DWORD PTR [ebp+0x8]
6401d9f2:	mov    ecx,DWORD PTR [ebp+0x10]
6401d9f5:	mov    edx,ecx
6401d9f7:	shr    ecx,0x2
6401d9fa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d9fc:	mov    ecx,edx
6401d9fe:	and    ecx,0x3
6401da01:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401da03:	mov    eax,DWORD PTR [ebp+0x8]
6401da06:	mov    ebx,DWORD PTR [ebp-0x4]
6401da09:	mov    esi,DWORD PTR [ebp-0x8]
6401da0c:	mov    edi,DWORD PTR [ebp-0xc]
6401da0f:	mov    esp,ebp
6401da11:	pop    ebp
6401da12:	ret    
6401da13:	push   esi
6401da14:	mov    esi,DWORD PTR [esp+0x8]
6401da18:	test   esi,esi
6401da1a:	je     0x6401dba1
6401da20:	push   DWORD PTR [esi+0x4]
6401da23:	call   0x6401477f
6401da28:	push   DWORD PTR [esi+0x8]
6401da2b:	call   0x6401477f
6401da30:	push   DWORD PTR [esi+0xc]
6401da33:	call   0x6401477f
6401da38:	push   DWORD PTR [esi+0x10]
6401da3b:	call   0x6401477f
6401da40:	push   DWORD PTR [esi+0x14]
6401da43:	call   0x6401477f
6401da48:	push   DWORD PTR [esi+0x18]
6401da4b:	call   0x6401477f
6401da50:	push   DWORD PTR [esi]
6401da52:	call   0x6401477f
6401da57:	push   DWORD PTR [esi+0x20]
6401da5a:	call   0x6401477f
6401da5f:	push   DWORD PTR [esi+0x24]
6401da62:	call   0x6401477f
6401da67:	push   DWORD PTR [esi+0x28]
6401da6a:	call   0x6401477f
6401da6f:	push   DWORD PTR [esi+0x2c]
6401da72:	call   0x6401477f
6401da77:	push   DWORD PTR [esi+0x30]
6401da7a:	call   0x6401477f
6401da7f:	push   DWORD PTR [esi+0x34]
6401da82:	call   0x6401477f
6401da87:	push   DWORD PTR [esi+0x1c]
6401da8a:	call   0x6401477f
6401da8f:	push   DWORD PTR [esi+0x38]
6401da92:	call   0x6401477f
6401da97:	push   DWORD PTR [esi+0x3c]
6401da9a:	call   0x6401477f
6401da9f:	add    esp,0x40
6401daa2:	push   DWORD PTR [esi+0x40]
6401daa5:	call   0x6401477f
6401daaa:	push   DWORD PTR [esi+0x44]
6401daad:	call   0x6401477f
6401dab2:	push   DWORD PTR [esi+0x48]
6401dab5:	call   0x6401477f
6401daba:	push   DWORD PTR [esi+0x4c]
6401dabd:	call   0x6401477f
6401dac2:	push   DWORD PTR [esi+0x50]
6401dac5:	call   0x6401477f
6401daca:	push   DWORD PTR [esi+0x54]
6401dacd:	call   0x6401477f
6401dad2:	push   DWORD PTR [esi+0x58]
6401dad5:	call   0x6401477f
6401dada:	push   DWORD PTR [esi+0x5c]
6401dadd:	call   0x6401477f
6401dae2:	push   DWORD PTR [esi+0x60]
6401dae5:	call   0x6401477f
6401daea:	push   DWORD PTR [esi+0x64]
6401daed:	call   0x6401477f
6401daf2:	push   DWORD PTR [esi+0x68]
6401daf5:	call   0x6401477f
6401dafa:	push   DWORD PTR [esi+0x6c]
6401dafd:	call   0x6401477f
6401db02:	push   DWORD PTR [esi+0x70]
6401db05:	call   0x6401477f
6401db0a:	push   DWORD PTR [esi+0x74]
6401db0d:	call   0x6401477f
6401db12:	push   DWORD PTR [esi+0x78]
6401db15:	call   0x6401477f
6401db1a:	push   DWORD PTR [esi+0x7c]
6401db1d:	call   0x6401477f
6401db22:	add    esp,0x40
6401db25:	push   DWORD PTR [esi+0x80]
6401db2b:	call   0x6401477f
6401db30:	push   DWORD PTR [esi+0x84]
6401db36:	call   0x6401477f
6401db3b:	push   DWORD PTR [esi+0x88]
6401db41:	call   0x6401477f
6401db46:	push   DWORD PTR [esi+0x8c]
6401db4c:	call   0x6401477f
6401db51:	push   DWORD PTR [esi+0x90]
6401db57:	call   0x6401477f
6401db5c:	push   DWORD PTR [esi+0x94]
6401db62:	call   0x6401477f
6401db67:	push   DWORD PTR [esi+0x98]
6401db6d:	call   0x6401477f
6401db72:	push   DWORD PTR [esi+0x9c]
6401db78:	call   0x6401477f
6401db7d:	push   DWORD PTR [esi+0xa0]
6401db83:	call   0x6401477f
6401db88:	push   DWORD PTR [esi+0xa4]
6401db8e:	call   0x6401477f
6401db93:	push   DWORD PTR [esi+0xa8]
6401db99:	call   0x6401477f
6401db9e:	add    esp,0x2c
6401dba1:	pop    esi
6401dba2:	ret    
6401dba3:	push   esi
6401dba4:	mov    esi,DWORD PTR [esp+0x8]
6401dba8:	test   esi,esi
6401dbaa:	je     0x6401dbe1
6401dbac:	mov    eax,DWORD PTR [esi]
6401dbae:	cmp    eax,DWORD PTR ds:0x64038530
6401dbb4:	je     0x6401dbbd
6401dbb6:	push   eax
6401dbb7:	call   0x6401477f
6401dbbc:	pop    ecx
6401dbbd:	mov    eax,DWORD PTR [esi+0x4]
6401dbc0:	cmp    eax,DWORD PTR ds:0x64038534
6401dbc6:	je     0x6401dbcf
6401dbc8:	push   eax
6401dbc9:	call   0x6401477f
6401dbce:	pop    ecx
6401dbcf:	mov    esi,DWORD PTR [esi+0x8]
6401dbd2:	cmp    esi,DWORD PTR ds:0x64038538
6401dbd8:	je     0x6401dbe1
6401dbda:	push   esi
6401dbdb:	call   0x6401477f
6401dbe0:	pop    ecx
6401dbe1:	pop    esi
6401dbe2:	ret    
6401dbe3:	push   esi
6401dbe4:	mov    esi,DWORD PTR [esp+0x8]
6401dbe8:	test   esi,esi
6401dbea:	je     0x6401dc6a
6401dbec:	mov    eax,DWORD PTR [esi+0xc]
6401dbef:	cmp    eax,DWORD PTR ds:0x6403853c
6401dbf5:	je     0x6401dbfe
6401dbf7:	push   eax
6401dbf8:	call   0x6401477f
6401dbfd:	pop    ecx
6401dbfe:	mov    eax,DWORD PTR [esi+0x10]
6401dc01:	cmp    eax,DWORD PTR ds:0x64038540
6401dc07:	je     0x6401dc10
6401dc09:	push   eax
6401dc0a:	call   0x6401477f
6401dc0f:	pop    ecx
6401dc10:	mov    eax,DWORD PTR [esi+0x14]
6401dc13:	cmp    eax,DWORD PTR ds:0x64038544
6401dc19:	je     0x6401dc22
6401dc1b:	push   eax
6401dc1c:	call   0x6401477f
6401dc21:	pop    ecx
6401dc22:	mov    eax,DWORD PTR [esi+0x18]
6401dc25:	cmp    eax,DWORD PTR ds:0x64038548
6401dc2b:	je     0x6401dc34
6401dc2d:	push   eax
6401dc2e:	call   0x6401477f
6401dc33:	pop    ecx
6401dc34:	mov    eax,DWORD PTR [esi+0x1c]
6401dc37:	cmp    eax,DWORD PTR ds:0x6403854c
6401dc3d:	je     0x6401dc46
6401dc3f:	push   eax
6401dc40:	call   0x6401477f
6401dc45:	pop    ecx
6401dc46:	mov    eax,DWORD PTR [esi+0x20]
6401dc49:	cmp    eax,DWORD PTR ds:0x64038550
6401dc4f:	je     0x6401dc58
6401dc51:	push   eax
6401dc52:	call   0x6401477f
6401dc57:	pop    ecx
6401dc58:	mov    esi,DWORD PTR [esi+0x24]
6401dc5b:	cmp    esi,DWORD PTR ds:0x64038554
6401dc61:	je     0x6401dc6a
6401dc63:	push   esi
6401dc64:	call   0x6401477f
6401dc69:	pop    ecx
6401dc6a:	pop    esi
6401dc6b:	ret    
6401dc6c:	mov    eax,DWORD PTR [esp+0x4]
6401dc70:	push   ebx
6401dc71:	xor    ebx,ebx
6401dc73:	cmp    eax,ebx
6401dc75:	push   esi
6401dc76:	push   edi
6401dc77:	je     0x6401dc81
6401dc79:	mov    edi,DWORD PTR [esp+0x14]
6401dc7d:	cmp    edi,ebx
6401dc7f:	ja     0x6401dc9c
6401dc81:	call   0x64016483
6401dc86:	push   0x16
6401dc88:	pop    esi
6401dc89:	mov    DWORD PTR [eax],esi
6401dc8b:	push   ebx
6401dc8c:	push   ebx
6401dc8d:	push   ebx
6401dc8e:	push   ebx
6401dc8f:	push   ebx
6401dc90:	call   0x64013e12
6401dc95:	add    esp,0x14
6401dc98:	mov    eax,esi
6401dc9a:	jmp    0x6401dcd9
6401dc9c:	mov    esi,DWORD PTR [esp+0x18]
6401dca0:	cmp    esi,ebx
6401dca2:	jne    0x6401dca8
6401dca4:	mov    BYTE PTR [eax],bl
6401dca6:	jmp    0x6401dc81
6401dca8:	mov    edx,eax
6401dcaa:	cmp    BYTE PTR [edx],bl
6401dcac:	je     0x6401dcb2
6401dcae:	inc    edx
6401dcaf:	dec    edi
6401dcb0:	jne    0x6401dcaa
6401dcb2:	cmp    edi,ebx
6401dcb4:	je     0x6401dca4
6401dcb6:	mov    cl,BYTE PTR [esi]
6401dcb8:	mov    BYTE PTR [edx],cl
6401dcba:	inc    edx
6401dcbb:	inc    esi
6401dcbc:	cmp    cl,bl
6401dcbe:	je     0x6401dcc3
6401dcc0:	dec    edi
6401dcc1:	jne    0x6401dcb6
6401dcc3:	cmp    edi,ebx
6401dcc5:	jne    0x6401dcd7
6401dcc7:	mov    BYTE PTR [eax],bl
6401dcc9:	call   0x64016483
6401dcce:	push   0x22
6401dcd0:	pop    ecx
6401dcd1:	mov    DWORD PTR [eax],ecx
6401dcd3:	mov    esi,ecx
6401dcd5:	jmp    0x6401dc8b
6401dcd7:	xor    eax,eax
6401dcd9:	pop    edi
6401dcda:	pop    esi
6401dcdb:	pop    ebx
6401dcdc:	ret    
6401dcdd:	int3   
6401dcde:	int3   
6401dcdf:	int3   
6401dce0:	push   ebp
6401dce1:	mov    ebp,esp
6401dce3:	push   esi
6401dce4:	xor    eax,eax
6401dce6:	push   eax
6401dce7:	push   eax
6401dce8:	push   eax
6401dce9:	push   eax
6401dcea:	push   eax
6401dceb:	push   eax
6401dcec:	push   eax
6401dced:	push   eax
6401dcee:	mov    edx,DWORD PTR [ebp+0xc]
6401dcf1:	lea    ecx,[ecx+0x0]
6401dcf4:	mov    al,BYTE PTR [edx]
6401dcf6:	or     al,al
6401dcf8:	je     0x6401dd03
6401dcfa:	add    edx,0x1
6401dcfd:	bts    DWORD PTR [esp],eax
6401dd01:	jmp    0x6401dcf4
6401dd03:	mov    esi,DWORD PTR [ebp+0x8]
6401dd06:	or     ecx,0xffffffff
6401dd09:	lea    ecx,[ecx+0x0]
6401dd0c:	add    ecx,0x1
6401dd0f:	mov    al,BYTE PTR [esi]
6401dd11:	or     al,al
6401dd13:	je     0x6401dd1e
6401dd15:	add    esi,0x1
6401dd18:	bt     DWORD PTR [esp],eax
6401dd1c:	jae    0x6401dd0c
6401dd1e:	mov    eax,ecx
6401dd20:	add    esp,0x20
6401dd23:	pop    esi
6401dd24:	leave  
6401dd25:	ret    
6401dd26:	push   ebp
6401dd27:	mov    ebp,esp
6401dd29:	push   ebx
6401dd2a:	push   esi
6401dd2b:	mov    esi,DWORD PTR [ebp+0x8]
6401dd2e:	xor    ebx,ebx
6401dd30:	cmp    DWORD PTR [ebp+0x14],ebx
6401dd33:	push   edi
6401dd34:	jne    0x6401dd46
6401dd36:	cmp    esi,ebx
6401dd38:	jne    0x6401dd4a
6401dd3a:	cmp    DWORD PTR [ebp+0xc],ebx
6401dd3d:	jne    0x6401dd51
6401dd3f:	xor    eax,eax
6401dd41:	pop    edi
6401dd42:	pop    esi
6401dd43:	pop    ebx
6401dd44:	pop    ebp
6401dd45:	ret    
6401dd46:	cmp    esi,ebx
6401dd48:	je     0x6401dd51
6401dd4a:	mov    edi,DWORD PTR [ebp+0xc]
6401dd4d:	cmp    edi,ebx
6401dd4f:	ja     0x6401dd6c
6401dd51:	call   0x64016483
6401dd56:	push   0x16
6401dd58:	pop    esi
6401dd59:	mov    DWORD PTR [eax],esi
6401dd5b:	push   ebx
6401dd5c:	push   ebx
6401dd5d:	push   ebx
6401dd5e:	push   ebx
6401dd5f:	push   ebx
6401dd60:	call   0x64013e12
6401dd65:	add    esp,0x14
6401dd68:	mov    eax,esi
6401dd6a:	jmp    0x6401dd41
6401dd6c:	cmp    DWORD PTR [ebp+0x14],ebx
6401dd6f:	jne    0x6401dd75
6401dd71:	mov    BYTE PTR [esi],bl
6401dd73:	jmp    0x6401dd3f
6401dd75:	mov    edx,DWORD PTR [ebp+0x10]
6401dd78:	cmp    edx,ebx
6401dd7a:	jne    0x6401dd80
6401dd7c:	mov    BYTE PTR [esi],bl
6401dd7e:	jmp    0x6401dd51
6401dd80:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401dd84:	mov    eax,esi
6401dd86:	jne    0x6401dd97
6401dd88:	mov    cl,BYTE PTR [edx]
6401dd8a:	mov    BYTE PTR [eax],cl
6401dd8c:	inc    eax
6401dd8d:	inc    edx
6401dd8e:	cmp    cl,bl
6401dd90:	je     0x6401ddb0
6401dd92:	dec    edi
6401dd93:	jne    0x6401dd88
6401dd95:	jmp    0x6401ddb0
6401dd97:	mov    cl,BYTE PTR [edx]
6401dd99:	mov    BYTE PTR [eax],cl
6401dd9b:	inc    eax
6401dd9c:	inc    edx
6401dd9d:	cmp    cl,bl
6401dd9f:	je     0x6401dda9
6401dda1:	dec    edi
6401dda2:	je     0x6401dda9
6401dda4:	dec    DWORD PTR [ebp+0x14]
6401dda7:	jne    0x6401dd97
6401dda9:	cmp    DWORD PTR [ebp+0x14],ebx
6401ddac:	jne    0x6401ddb0
6401ddae:	mov    BYTE PTR [eax],bl
6401ddb0:	cmp    edi,ebx
6401ddb2:	jne    0x6401dd3f
6401ddb4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401ddb8:	jne    0x6401ddc9
6401ddba:	mov    eax,DWORD PTR [ebp+0xc]
6401ddbd:	push   0x50
6401ddbf:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401ddc3:	pop    eax
6401ddc4:	jmp    0x6401dd41
6401ddc9:	mov    BYTE PTR [esi],bl
6401ddcb:	call   0x64016483
6401ddd0:	push   0x22
6401ddd2:	pop    ecx
6401ddd3:	mov    DWORD PTR [eax],ecx
6401ddd5:	mov    esi,ecx
6401ddd7:	jmp    0x6401dd5b
6401ddd9:	push   ebp
6401ddda:	mov    ebp,esp
6401dddc:	push   ecx
6401dddd:	push   ecx
6401ddde:	mov    eax,ds:0x64037644
6401dde3:	xor    eax,ebp
6401dde5:	mov    DWORD PTR [ebp-0x4],eax
6401dde8:	mov    eax,ds:0x64039828
6401dded:	push   ebx
6401ddee:	push   esi
6401ddef:	xor    ebx,ebx
6401ddf1:	cmp    eax,ebx
6401ddf3:	push   edi
6401ddf4:	mov    edi,ecx
6401ddf6:	jne    0x6401de32
6401ddf8:	lea    eax,[ebp-0x8]
6401ddfb:	push   eax
6401ddfc:	xor    esi,esi
6401ddfe:	inc    esi
6401ddff:	push   esi
6401de00:	push   0x640299ac
6401de05:	push   esi
6401de06:	call   DWORD PTR ds:0x64024110
6401de0c:	test   eax,eax
6401de0e:	je     0x6401de18
6401de10:	mov    DWORD PTR ds:0x64039828,esi
6401de16:	jmp    0x6401de4c
6401de18:	call   DWORD PTR ds:0x64024068
6401de1e:	cmp    eax,0x78
6401de21:	jne    0x6401de2d
6401de23:	push   0x2
6401de25:	pop    eax
6401de26:	mov    ds:0x64039828,eax
6401de2b:	jmp    0x6401de32
6401de2d:	mov    eax,ds:0x64039828
6401de32:	cmp    eax,0x2
6401de35:	je     0x6401df0a
6401de3b:	cmp    eax,ebx
6401de3d:	je     0x6401df0a
6401de43:	cmp    eax,0x1
6401de46:	jne    0x6401df34
6401de4c:	cmp    DWORD PTR [ebp+0x18],ebx
6401de4f:	mov    DWORD PTR [ebp-0x8],ebx
6401de52:	jne    0x6401de5c
6401de54:	mov    eax,DWORD PTR [edi]
6401de56:	mov    eax,DWORD PTR [eax+0x4]
6401de59:	mov    DWORD PTR [ebp+0x18],eax
6401de5c:	mov    esi,DWORD PTR ds:0x64024028
6401de62:	xor    eax,eax
6401de64:	cmp    DWORD PTR [ebp+0x20],ebx
6401de67:	push   ebx
6401de68:	push   ebx
6401de69:	push   DWORD PTR [ebp+0x10]
6401de6c:	setne  al
6401de6f:	push   DWORD PTR [ebp+0xc]
6401de72:	lea    eax,[eax*8+0x1]
6401de79:	push   eax
6401de7a:	push   DWORD PTR [ebp+0x18]
6401de7d:	call   esi
6401de7f:	mov    edi,eax
6401de81:	cmp    edi,ebx
6401de83:	je     0x6401df34
6401de89:	jle    0x6401dec7
6401de8b:	cmp    edi,0x7ffffff0
6401de91:	ja     0x6401dec7
6401de93:	lea    eax,[edi+edi*1+0x8]
6401de97:	cmp    eax,0x400
6401de9c:	ja     0x6401deb1
6401de9e:	call   0x64013ce0
6401dea3:	mov    eax,esp
6401dea5:	cmp    eax,ebx
6401dea7:	je     0x6401dec5
6401dea9:	mov    DWORD PTR [eax],0xcccc
6401deaf:	jmp    0x6401dec2
6401deb1:	push   eax
6401deb2:	call   0x6401487e
6401deb7:	cmp    eax,ebx
6401deb9:	pop    ecx
6401deba:	je     0x6401dec5
6401debc:	mov    DWORD PTR [eax],0xdddd
6401dec2:	add    eax,0x8
6401dec5:	mov    ebx,eax
6401dec7:	test   ebx,ebx
6401dec9:	je     0x6401df34
6401decb:	lea    eax,[edi+edi*1]
6401dece:	push   eax
6401decf:	push   0x0
6401ded1:	push   ebx
6401ded2:	call   0x64015120
6401ded7:	add    esp,0xc
6401deda:	push   edi
6401dedb:	push   ebx
6401dedc:	push   DWORD PTR [ebp+0x10]
6401dedf:	push   DWORD PTR [ebp+0xc]
6401dee2:	push   0x1
6401dee4:	push   DWORD PTR [ebp+0x18]
6401dee7:	call   esi
6401dee9:	test   eax,eax
6401deeb:	je     0x6401defe
6401deed:	push   DWORD PTR [ebp+0x14]
6401def0:	push   eax
6401def1:	push   ebx
6401def2:	push   DWORD PTR [ebp+0x8]
6401def5:	call   DWORD PTR ds:0x64024110
6401defb:	mov    DWORD PTR [ebp-0x8],eax
6401defe:	push   ebx
6401deff:	call   0x640142ca
6401df04:	mov    eax,DWORD PTR [ebp-0x8]
6401df07:	pop    ecx
6401df08:	jmp    0x6401df7f
6401df0a:	xor    esi,esi
6401df0c:	cmp    DWORD PTR [ebp+0x1c],ebx
6401df0f:	jne    0x6401df19
6401df11:	mov    eax,DWORD PTR [edi]
6401df13:	mov    eax,DWORD PTR [eax+0x14]
6401df16:	mov    DWORD PTR [ebp+0x1c],eax
6401df19:	cmp    DWORD PTR [ebp+0x18],ebx
6401df1c:	jne    0x6401df26
6401df1e:	mov    eax,DWORD PTR [edi]
6401df20:	mov    eax,DWORD PTR [eax+0x4]
6401df23:	mov    DWORD PTR [ebp+0x18],eax
6401df26:	push   DWORD PTR [ebp+0x1c]
6401df29:	call   0x6401e020
6401df2e:	cmp    eax,0xffffffff
6401df31:	pop    ecx
6401df32:	jne    0x6401df38
6401df34:	xor    eax,eax
6401df36:	jmp    0x6401df7f
6401df38:	cmp    eax,DWORD PTR [ebp+0x18]
6401df3b:	je     0x6401df5b
6401df3d:	push   ebx
6401df3e:	push   ebx
6401df3f:	lea    ecx,[ebp+0x10]
6401df42:	push   ecx
6401df43:	push   DWORD PTR [ebp+0xc]
6401df46:	push   eax
6401df47:	push   DWORD PTR [ebp+0x18]
6401df4a:	call   0x6401e067
6401df4f:	mov    esi,eax
6401df51:	add    esp,0x18
6401df54:	cmp    esi,ebx
6401df56:	je     0x6401df34
6401df58:	mov    DWORD PTR [ebp+0xc],esi
6401df5b:	push   DWORD PTR [ebp+0x14]
6401df5e:	push   DWORD PTR [ebp+0x10]
6401df61:	push   DWORD PTR [ebp+0xc]
6401df64:	push   DWORD PTR [ebp+0x8]
6401df67:	push   DWORD PTR [ebp+0x1c]
6401df6a:	call   DWORD PTR ds:0x6402410c
6401df70:	cmp    esi,ebx
6401df72:	mov    edi,eax
6401df74:	je     0x6401df7d
6401df76:	push   esi
6401df77:	call   0x6401477f
6401df7c:	pop    ecx
6401df7d:	mov    eax,edi
6401df7f:	lea    esp,[ebp-0x14]
6401df82:	pop    edi
6401df83:	pop    esi
6401df84:	pop    ebx
6401df85:	mov    ecx,DWORD PTR [ebp-0x4]
6401df88:	xor    ecx,ebp
6401df8a:	call   0x64013cc6
6401df8f:	leave  
6401df90:	ret    
6401df91:	push   ebp
6401df92:	mov    ebp,esp
6401df94:	sub    esp,0x10
6401df97:	push   DWORD PTR [ebp+0x8]
6401df9a:	lea    ecx,[ebp-0x10]
6401df9d:	call   0x640142e5
6401dfa2:	push   DWORD PTR [ebp+0x24]
6401dfa5:	lea    ecx,[ebp-0x10]
6401dfa8:	push   DWORD PTR [ebp+0x20]
6401dfab:	push   DWORD PTR [ebp+0x1c]
6401dfae:	push   DWORD PTR [ebp+0x18]
6401dfb1:	push   DWORD PTR [ebp+0x14]
6401dfb4:	push   DWORD PTR [ebp+0x10]
6401dfb7:	push   DWORD PTR [ebp+0xc]
6401dfba:	call   0x6401ddd9
6401dfbf:	add    esp,0x1c
6401dfc2:	cmp    BYTE PTR [ebp-0x4],0x0
6401dfc6:	je     0x6401dfcf
6401dfc8:	mov    ecx,DWORD PTR [ebp-0x8]
6401dfcb:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401dfcf:	leave  
6401dfd0:	ret    
6401dfd1:	int3   
6401dfd2:	int3   
6401dfd3:	int3   
6401dfd4:	int3   
6401dfd5:	int3   
6401dfd6:	int3   
6401dfd7:	int3   
6401dfd8:	int3   
6401dfd9:	int3   
6401dfda:	int3   
6401dfdb:	int3   
6401dfdc:	int3   
6401dfdd:	int3   
6401dfde:	int3   
6401dfdf:	int3   
6401dfe0:	push   ebp
6401dfe1:	mov    ebp,esp
6401dfe3:	push   esi
6401dfe4:	xor    eax,eax
6401dfe6:	push   eax
6401dfe7:	push   eax
6401dfe8:	push   eax
6401dfe9:	push   eax
6401dfea:	push   eax
6401dfeb:	push   eax
6401dfec:	push   eax
6401dfed:	push   eax
6401dfee:	mov    edx,DWORD PTR [ebp+0xc]
6401dff1:	lea    ecx,[ecx+0x0]
6401dff4:	mov    al,BYTE PTR [edx]
6401dff6:	or     al,al
6401dff8:	je     0x6401e003
6401dffa:	add    edx,0x1
6401dffd:	bts    DWORD PTR [esp],eax
6401e001:	jmp    0x6401dff4
6401e003:	mov    esi,DWORD PTR [ebp+0x8]
6401e006:	mov    edi,edi
6401e008:	mov    al,BYTE PTR [esi]
6401e00a:	or     al,al
6401e00c:	je     0x6401e01a
6401e00e:	add    esi,0x1
6401e011:	bt     DWORD PTR [esp],eax
6401e015:	jae    0x6401e008
6401e017:	lea    eax,[esi-0x1]
6401e01a:	add    esp,0x20
6401e01d:	pop    esi
6401e01e:	leave  
6401e01f:	ret    
6401e020:	push   ebp
6401e021:	mov    ebp,esp
6401e023:	sub    esp,0xc
6401e026:	mov    eax,ds:0x64037644
6401e02b:	xor    eax,ebp
6401e02d:	mov    DWORD PTR [ebp-0x4],eax
6401e030:	push   0x6
6401e032:	lea    eax,[ebp-0xc]
6401e035:	push   eax
6401e036:	push   0x1004
6401e03b:	push   DWORD PTR [ebp+0x8]
6401e03e:	mov    BYTE PTR [ebp-0x6],0x0
6401e042:	call   DWORD PTR ds:0x6402416c
6401e048:	test   eax,eax
6401e04a:	jne    0x6401e051
6401e04c:	or     eax,0xffffffff
6401e04f:	jmp    0x6401e05b
6401e051:	lea    eax,[ebp-0xc]
6401e054:	push   eax
6401e055:	call   0x64021115
6401e05a:	pop    ecx
6401e05b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e05e:	xor    ecx,ebp
6401e060:	call   0x64013cc6
6401e065:	leave  
6401e066:	ret    
6401e067:	push   ebp
6401e068:	mov    ebp,esp
6401e06a:	sub    esp,0x34
6401e06d:	mov    eax,ds:0x64037644
6401e072:	xor    eax,ebp
6401e074:	mov    DWORD PTR [ebp-0x4],eax
6401e077:	mov    eax,DWORD PTR [ebp+0x10]
6401e07a:	mov    ecx,DWORD PTR [ebp+0x18]
6401e07d:	mov    DWORD PTR [ebp-0x28],eax
6401e080:	mov    eax,DWORD PTR [ebp+0x14]
6401e083:	push   ebx
6401e084:	mov    DWORD PTR [ebp-0x30],eax
6401e087:	mov    eax,DWORD PTR [eax]
6401e089:	push   esi
6401e08a:	mov    DWORD PTR [ebp-0x24],eax
6401e08d:	mov    eax,DWORD PTR [ebp+0x8]
6401e090:	push   edi
6401e091:	xor    edi,edi
6401e093:	cmp    eax,DWORD PTR [ebp+0xc]
6401e096:	mov    DWORD PTR [ebp-0x34],ecx
6401e099:	mov    DWORD PTR [ebp-0x20],edi
6401e09c:	mov    DWORD PTR [ebp-0x2c],edi
6401e09f:	je     0x6401e204
6401e0a5:	mov    esi,DWORD PTR ds:0x640241b8
6401e0ab:	lea    ecx,[ebp-0x18]
6401e0ae:	push   ecx
6401e0af:	push   eax
6401e0b0:	call   esi
6401e0b2:	test   eax,eax
6401e0b4:	mov    ebx,DWORD PTR ds:0x64024028
6401e0ba:	je     0x6401e11a
6401e0bc:	cmp    DWORD PTR [ebp-0x18],0x1
6401e0c0:	jne    0x6401e11a
6401e0c2:	lea    eax,[ebp-0x18]
6401e0c5:	push   eax
6401e0c6:	push   DWORD PTR [ebp+0xc]
6401e0c9:	call   esi
6401e0cb:	test   eax,eax
6401e0cd:	je     0x6401e11a
6401e0cf:	cmp    DWORD PTR [ebp-0x18],0x1
6401e0d3:	jne    0x6401e11a
6401e0d5:	mov    esi,DWORD PTR [ebp-0x24]
6401e0d8:	cmp    esi,0xffffffff
6401e0db:	mov    DWORD PTR [ebp-0x2c],0x1
6401e0e2:	jne    0x6401e0f0
6401e0e4:	push   DWORD PTR [ebp-0x28]
6401e0e7:	call   0x64015510
6401e0ec:	mov    esi,eax
6401e0ee:	pop    ecx
6401e0ef:	inc    esi
6401e0f0:	cmp    esi,edi
6401e0f2:	jle    0x6401e14f
6401e0f4:	cmp    esi,0x7ffffff0
6401e0fa:	ja     0x6401e14f
6401e0fc:	lea    eax,[esi+esi*1+0x8]
6401e100:	cmp    eax,0x400
6401e105:	ja     0x6401e136
6401e107:	call   0x64013ce0
6401e10c:	mov    eax,esp
6401e10e:	cmp    eax,edi
6401e110:	je     0x6401e14a
6401e112:	mov    DWORD PTR [eax],0xcccc
6401e118:	jmp    0x6401e147
6401e11a:	push   edi
6401e11b:	push   edi
6401e11c:	push   DWORD PTR [ebp-0x24]
6401e11f:	push   DWORD PTR [ebp-0x28]
6401e122:	push   0x1
6401e124:	push   DWORD PTR [ebp+0x8]
6401e127:	call   ebx
6401e129:	mov    esi,eax
6401e12b:	cmp    esi,edi
6401e12d:	jne    0x6401e0f2
6401e12f:	xor    eax,eax
6401e131:	jmp    0x6401e207
6401e136:	push   eax
6401e137:	call   0x6401487e
6401e13c:	cmp    eax,edi
6401e13e:	pop    ecx
6401e13f:	je     0x6401e14a
6401e141:	mov    DWORD PTR [eax],0xdddd
6401e147:	add    eax,0x8
6401e14a:	mov    DWORD PTR [ebp-0x1c],eax
6401e14d:	jmp    0x6401e152
6401e14f:	mov    DWORD PTR [ebp-0x1c],edi
6401e152:	cmp    DWORD PTR [ebp-0x1c],edi
6401e155:	je     0x6401e12f
6401e157:	lea    eax,[esi+esi*1]
6401e15a:	push   eax
6401e15b:	push   edi
6401e15c:	push   DWORD PTR [ebp-0x1c]
6401e15f:	call   0x64015120
6401e164:	add    esp,0xc
6401e167:	push   esi
6401e168:	push   DWORD PTR [ebp-0x1c]
6401e16b:	push   DWORD PTR [ebp-0x24]
6401e16e:	push   DWORD PTR [ebp-0x28]
6401e171:	push   0x1
6401e173:	push   DWORD PTR [ebp+0x8]
6401e176:	call   ebx
6401e178:	test   eax,eax
6401e17a:	je     0x6401e1fb
6401e17c:	mov    ebx,DWORD PTR [ebp-0x34]
6401e17f:	cmp    ebx,edi
6401e181:	je     0x6401e1a0
6401e183:	push   edi
6401e184:	push   edi
6401e185:	push   DWORD PTR [ebp+0x1c]
6401e188:	push   ebx
6401e189:	push   esi
6401e18a:	push   DWORD PTR [ebp-0x1c]
6401e18d:	push   edi
6401e18e:	push   DWORD PTR [ebp+0xc]
6401e191:	call   DWORD PTR ds:0x64024010
6401e197:	test   eax,eax
6401e199:	je     0x6401e1fb
6401e19b:	mov    DWORD PTR [ebp-0x20],ebx
6401e19e:	jmp    0x6401e1fb
6401e1a0:	cmp    DWORD PTR [ebp-0x2c],edi
6401e1a3:	mov    ebx,DWORD PTR ds:0x64024010
6401e1a9:	jne    0x6401e1bf
6401e1ab:	push   edi
6401e1ac:	push   edi
6401e1ad:	push   edi
6401e1ae:	push   edi
6401e1af:	push   esi
6401e1b0:	push   DWORD PTR [ebp-0x1c]
6401e1b3:	push   edi
6401e1b4:	push   DWORD PTR [ebp+0xc]
6401e1b7:	call   ebx
6401e1b9:	mov    esi,eax
6401e1bb:	cmp    esi,edi
6401e1bd:	je     0x6401e1fb
6401e1bf:	push   esi
6401e1c0:	push   0x1
6401e1c2:	call   0x64015d2f
6401e1c7:	cmp    eax,edi
6401e1c9:	pop    ecx
6401e1ca:	pop    ecx
6401e1cb:	mov    DWORD PTR [ebp-0x20],eax
6401e1ce:	je     0x6401e1fb
6401e1d0:	push   edi
6401e1d1:	push   edi
6401e1d2:	push   esi
6401e1d3:	push   eax
6401e1d4:	push   esi
6401e1d5:	push   DWORD PTR [ebp-0x1c]
6401e1d8:	push   edi
6401e1d9:	push   DWORD PTR [ebp+0xc]
6401e1dc:	call   ebx
6401e1de:	cmp    eax,edi
6401e1e0:	jne    0x6401e1f0
6401e1e2:	push   DWORD PTR [ebp-0x20]
6401e1e5:	call   0x6401477f
6401e1ea:	pop    ecx
6401e1eb:	mov    DWORD PTR [ebp-0x20],edi
6401e1ee:	jmp    0x6401e1fb
6401e1f0:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401e1f4:	je     0x6401e1fb
6401e1f6:	mov    ecx,DWORD PTR [ebp-0x30]
6401e1f9:	mov    DWORD PTR [ecx],eax
6401e1fb:	push   DWORD PTR [ebp-0x1c]
6401e1fe:	call   0x640142ca
6401e203:	pop    ecx
6401e204:	mov    eax,DWORD PTR [ebp-0x20]
6401e207:	lea    esp,[ebp-0x40]
6401e20a:	pop    edi
6401e20b:	pop    esi
6401e20c:	pop    ebx
6401e20d:	mov    ecx,DWORD PTR [ebp-0x4]
6401e210:	xor    ecx,ebp
6401e212:	call   0x64013cc6
6401e217:	leave  
6401e218:	ret    
6401e219:	push   0xc
6401e21b:	push   0x6402bae8
6401e220:	call   0x64015ed4
6401e225:	mov    ecx,DWORD PTR [ebp+0x8]
6401e228:	xor    edi,edi
6401e22a:	cmp    ecx,edi
6401e22c:	jbe    0x6401e25c
6401e22e:	push   0xffffffe0
6401e230:	pop    eax
6401e231:	xor    edx,edx
6401e233:	div    ecx
6401e235:	cmp    eax,DWORD PTR [ebp+0xc]
6401e238:	sbb    eax,eax
6401e23a:	inc    eax
6401e23b:	jne    0x6401e25c
6401e23d:	call   0x64016483
6401e242:	mov    DWORD PTR [eax],0xc
6401e248:	push   edi
6401e249:	push   edi
6401e24a:	push   edi
6401e24b:	push   edi
6401e24c:	push   edi
6401e24d:	call   0x64013e12
6401e252:	add    esp,0x14
6401e255:	xor    eax,eax
6401e257:	jmp    0x6401e331
6401e25c:	imul   ecx,DWORD PTR [ebp+0xc]
6401e260:	mov    esi,ecx
6401e262:	mov    DWORD PTR [ebp+0x8],esi
6401e265:	cmp    esi,edi
6401e267:	jne    0x6401e26c
6401e269:	xor    esi,esi
6401e26b:	inc    esi
6401e26c:	xor    ebx,ebx
6401e26e:	mov    DWORD PTR [ebp-0x1c],ebx
6401e271:	cmp    esi,0xffffffe0
6401e274:	ja     0x6401e2df
6401e276:	cmp    DWORD PTR ds:0x6403ab44,0x3
6401e27d:	jne    0x6401e2ca
6401e27f:	add    esi,0xf
6401e282:	and    esi,0xfffffff0
6401e285:	mov    DWORD PTR [ebp+0xc],esi
6401e288:	mov    eax,DWORD PTR [ebp+0x8]
6401e28b:	cmp    eax,DWORD PTR ds:0x64039b24
6401e291:	ja     0x6401e2ca
6401e293:	push   0x4
6401e295:	call   0x6401b2ba
6401e29a:	pop    ecx
6401e29b:	mov    DWORD PTR [ebp-0x4],edi
6401e29e:	push   DWORD PTR [ebp+0x8]
6401e2a1:	call   0x6401bb07
6401e2a6:	pop    ecx
6401e2a7:	mov    DWORD PTR [ebp-0x1c],eax
6401e2aa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e2b1:	call   0x6401e315
6401e2b6:	mov    ebx,DWORD PTR [ebp-0x1c]
6401e2b9:	cmp    ebx,edi
6401e2bb:	je     0x6401e2ce
6401e2bd:	push   DWORD PTR [ebp+0x8]
6401e2c0:	push   edi
6401e2c1:	push   ebx
6401e2c2:	call   0x64015120
6401e2c7:	add    esp,0xc
6401e2ca:	cmp    ebx,edi
6401e2cc:	jne    0x6401e32f
6401e2ce:	push   esi
6401e2cf:	push   0x8
6401e2d1:	push   DWORD PTR ds:0x64039354
6401e2d7:	call   DWORD PTR ds:0x64024180
6401e2dd:	mov    ebx,eax
6401e2df:	cmp    ebx,edi
6401e2e1:	jne    0x6401e32f
6401e2e3:	cmp    DWORD PTR ds:0x6403980c,edi
6401e2e9:	je     0x6401e31e
6401e2eb:	push   esi
6401e2ec:	call   0x6401683f
6401e2f1:	pop    ecx
6401e2f2:	test   eax,eax
6401e2f4:	jne    0x6401e26c
6401e2fa:	mov    eax,DWORD PTR [ebp+0x10]
6401e2fd:	cmp    eax,edi
6401e2ff:	je     0x6401e255
6401e305:	mov    DWORD PTR [eax],0xc
6401e30b:	jmp    0x6401e255
6401e310:	xor    edi,edi
6401e312:	mov    esi,DWORD PTR [ebp+0xc]
6401e315:	push   0x4
6401e317:	call   0x6401b1e2
6401e31c:	pop    ecx
6401e31d:	ret    
6401e31e:	cmp    ebx,edi
6401e320:	jne    0x6401e32f
6401e322:	mov    eax,DWORD PTR [ebp+0x10]
6401e325:	cmp    eax,edi
6401e327:	je     0x6401e32f
6401e329:	mov    DWORD PTR [eax],0xc
6401e32f:	mov    eax,ebx
6401e331:	call   0x64015f19
6401e336:	ret    
6401e337:	mov    eax,DWORD PTR [esp+0x4]
6401e33b:	mov    ds:0x6403982c,eax
6401e340:	mov    ds:0x64039830,eax
6401e345:	mov    ds:0x64039834,eax
6401e34a:	mov    ds:0x64039838,eax
6401e34f:	ret    
6401e350:	mov    eax,DWORD PTR [esp+0x4]
6401e354:	mov    ecx,DWORD PTR ds:0x640379e4
6401e35a:	push   esi
6401e35b:	cmp    DWORD PTR [eax+0x4],edx
6401e35e:	je     0x6401e370
6401e360:	mov    esi,ecx
6401e362:	imul   esi,esi,0xc
6401e365:	add    esi,DWORD PTR [esp+0x8]
6401e369:	add    eax,0xc
6401e36c:	cmp    eax,esi
6401e36e:	jb     0x6401e35b
6401e370:	imul   ecx,ecx,0xc
6401e373:	add    ecx,DWORD PTR [esp+0x8]
6401e377:	pop    esi
6401e378:	cmp    eax,ecx
6401e37a:	jae    0x6401e381
6401e37c:	cmp    DWORD PTR [eax+0x4],edx
6401e37f:	je     0x6401e383
6401e381:	xor    eax,eax
6401e383:	ret    
6401e384:	push   DWORD PTR ds:0x64039834
6401e38a:	call   0x640175ce
6401e38f:	pop    ecx
6401e390:	ret    
6401e391:	push   0x20
6401e393:	push   0x6402bb08
6401e398:	call   0x64015ed4
6401e39d:	xor    edi,edi
6401e39f:	mov    DWORD PTR [ebp-0x1c],edi
6401e3a2:	mov    DWORD PTR [ebp-0x28],edi
6401e3a5:	mov    ebx,DWORD PTR [ebp+0x8]
6401e3a8:	cmp    ebx,0xb
6401e3ab:	jg     0x6401e3f9
6401e3ad:	je     0x6401e3c4
6401e3af:	mov    eax,ebx
6401e3b1:	push   0x2
6401e3b3:	pop    ecx
6401e3b4:	sub    eax,ecx
6401e3b6:	je     0x6401e3da
6401e3b8:	sub    eax,ecx
6401e3ba:	je     0x6401e3c4
6401e3bc:	sub    eax,ecx
6401e3be:	je     0x6401e424
6401e3c0:	sub    eax,ecx
6401e3c2:	jne    0x6401e408
6401e3c4:	call   0x64017773
6401e3c9:	mov    edi,eax
6401e3cb:	mov    DWORD PTR [ebp-0x28],edi
6401e3ce:	test   edi,edi
6401e3d0:	jne    0x6401e3e6
6401e3d2:	or     eax,0xffffffff
6401e3d5:	jmp    0x6401e53b
6401e3da:	mov    esi,0x6403982c
6401e3df:	mov    eax,ds:0x6403982c
6401e3e4:	jmp    0x6401e446
6401e3e6:	push   DWORD PTR [edi+0x5c]
6401e3e9:	mov    edx,ebx
6401e3eb:	call   0x6401e350
6401e3f0:	mov    esi,eax
6401e3f2:	add    esi,0x8
6401e3f5:	mov    eax,DWORD PTR [esi]
6401e3f7:	jmp    0x6401e453
6401e3f9:	mov    eax,ebx
6401e3fb:	sub    eax,0xf
6401e3fe:	je     0x6401e43c
6401e400:	sub    eax,0x6
6401e403:	je     0x6401e430
6401e405:	dec    eax
6401e406:	je     0x6401e424
6401e408:	call   0x64016483
6401e40d:	mov    DWORD PTR [eax],0x16
6401e413:	xor    eax,eax
6401e415:	push   eax
6401e416:	push   eax
6401e417:	push   eax
6401e418:	push   eax
6401e419:	push   eax
6401e41a:	call   0x64013e12
6401e41f:	add    esp,0x14
6401e422:	jmp    0x6401e3d2
6401e424:	mov    esi,0x64039834
6401e429:	mov    eax,ds:0x64039834
6401e42e:	jmp    0x6401e446
6401e430:	mov    esi,0x64039830
6401e435:	mov    eax,ds:0x64039830
6401e43a:	jmp    0x6401e446
6401e43c:	mov    esi,0x64039838
6401e441:	mov    eax,ds:0x64039838
6401e446:	mov    DWORD PTR [ebp-0x1c],0x1
6401e44d:	push   eax
6401e44e:	call   0x640175ce
6401e453:	mov    DWORD PTR [ebp-0x20],eax
6401e456:	pop    ecx
6401e457:	xor    eax,eax
6401e459:	cmp    DWORD PTR [ebp-0x20],0x1
6401e45d:	je     0x6401e53b
6401e463:	cmp    DWORD PTR [ebp-0x20],eax
6401e466:	jne    0x6401e46f
6401e468:	push   0x3
6401e46a:	call   0x64018066
6401e46f:	cmp    DWORD PTR [ebp-0x1c],eax
6401e472:	je     0x6401e47b
6401e474:	push   eax
6401e475:	call   0x6401b2ba
6401e47a:	pop    ecx
6401e47b:	xor    eax,eax
6401e47d:	mov    DWORD PTR [ebp-0x4],eax
6401e480:	cmp    ebx,0x8
6401e483:	je     0x6401e48f
6401e485:	cmp    ebx,0xb
6401e488:	je     0x6401e48f
6401e48a:	cmp    ebx,0x4
6401e48d:	jne    0x6401e4aa
6401e48f:	mov    ecx,DWORD PTR [edi+0x60]
6401e492:	mov    DWORD PTR [ebp-0x2c],ecx
6401e495:	mov    DWORD PTR [edi+0x60],eax
6401e498:	cmp    ebx,0x8
6401e49b:	jne    0x6401e4dd
6401e49d:	mov    ecx,DWORD PTR [edi+0x64]
6401e4a0:	mov    DWORD PTR [ebp-0x30],ecx
6401e4a3:	mov    DWORD PTR [edi+0x64],0x8c
6401e4aa:	cmp    ebx,0x8
6401e4ad:	jne    0x6401e4dd
6401e4af:	mov    ecx,DWORD PTR ds:0x640379d8
6401e4b5:	mov    DWORD PTR [ebp-0x24],ecx
6401e4b8:	mov    ecx,DWORD PTR ds:0x640379dc
6401e4be:	mov    edx,DWORD PTR ds:0x640379d8
6401e4c4:	add    ecx,edx
6401e4c6:	cmp    DWORD PTR [ebp-0x24],ecx
6401e4c9:	jge    0x6401e4e4
6401e4cb:	mov    ecx,DWORD PTR [ebp-0x24]
6401e4ce:	imul   ecx,ecx,0xc
6401e4d1:	mov    edx,DWORD PTR [edi+0x5c]
6401e4d4:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401e4d8:	inc    DWORD PTR [ebp-0x24]
6401e4db:	jmp    0x6401e4b8
6401e4dd:	call   0x640175c5
6401e4e2:	mov    DWORD PTR [esi],eax
6401e4e4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e4eb:	call   0x6401e505
6401e4f0:	cmp    ebx,0x8
6401e4f3:	jne    0x6401e514
6401e4f5:	push   DWORD PTR [edi+0x64]
6401e4f8:	push   ebx
6401e4f9:	call   DWORD PTR [ebp-0x20]
6401e4fc:	pop    ecx
6401e4fd:	jmp    0x6401e518
6401e4ff:	mov    ebx,DWORD PTR [ebp+0x8]
6401e502:	mov    edi,DWORD PTR [ebp-0x28]
6401e505:	cmp    DWORD PTR [ebp-0x1c],0x0
6401e509:	je     0x6401e513
6401e50b:	push   0x0
6401e50d:	call   0x6401b1e2
6401e512:	pop    ecx
6401e513:	ret    
6401e514:	push   ebx
6401e515:	call   DWORD PTR [ebp-0x20]
6401e518:	pop    ecx
6401e519:	cmp    ebx,0x8
6401e51c:	je     0x6401e528
6401e51e:	cmp    ebx,0xb
6401e521:	je     0x6401e528
6401e523:	cmp    ebx,0x4
6401e526:	jne    0x6401e539
6401e528:	mov    eax,DWORD PTR [ebp-0x2c]
6401e52b:	mov    DWORD PTR [edi+0x60],eax
6401e52e:	cmp    ebx,0x8
6401e531:	jne    0x6401e539
6401e533:	mov    eax,DWORD PTR [ebp-0x30]
6401e536:	mov    DWORD PTR [edi+0x64],eax
6401e539:	xor    eax,eax
6401e53b:	call   0x64015f19
6401e540:	ret    
6401e541:	int3   
6401e542:	int3   
6401e543:	int3   
6401e544:	int3   
6401e545:	int3   
6401e546:	int3   
6401e547:	int3   
6401e548:	int3   
6401e549:	int3   
6401e54a:	int3   
6401e54b:	int3   
6401e54c:	int3   
6401e54d:	int3   
6401e54e:	int3   
6401e54f:	int3   
6401e550:	mov    ecx,DWORD PTR [esp+0x4]
6401e554:	cmp    WORD PTR [ecx],0x5a4d
6401e559:	je     0x6401e55e
6401e55b:	xor    eax,eax
6401e55d:	ret    
6401e55e:	mov    eax,DWORD PTR [ecx+0x3c]
6401e561:	add    eax,ecx
6401e563:	cmp    DWORD PTR [eax],0x4550
6401e569:	jne    0x6401e55b
6401e56b:	xor    ecx,ecx
6401e56d:	cmp    WORD PTR [eax+0x18],0x10b
6401e573:	sete   cl
6401e576:	mov    eax,ecx
6401e578:	ret    
6401e579:	int3   
6401e57a:	int3   
6401e57b:	int3   
6401e57c:	int3   
6401e57d:	int3   
6401e57e:	int3   
6401e57f:	int3   
6401e580:	mov    eax,DWORD PTR [esp+0x4]
6401e584:	mov    ecx,DWORD PTR [eax+0x3c]
6401e587:	add    ecx,eax
6401e589:	movzx  eax,WORD PTR [ecx+0x14]
6401e58d:	push   ebx
6401e58e:	push   esi
6401e58f:	movzx  esi,WORD PTR [ecx+0x6]
6401e593:	xor    edx,edx
6401e595:	test   esi,esi
6401e597:	push   edi
6401e598:	lea    eax,[eax+ecx*1+0x18]
6401e59c:	jbe    0x6401e5bc
6401e59e:	mov    edi,DWORD PTR [esp+0x14]
6401e5a2:	mov    ecx,DWORD PTR [eax+0xc]
6401e5a5:	cmp    edi,ecx
6401e5a7:	jb     0x6401e5b2
6401e5a9:	mov    ebx,DWORD PTR [eax+0x8]
6401e5ac:	add    ebx,ecx
6401e5ae:	cmp    edi,ebx
6401e5b0:	jb     0x6401e5be
6401e5b2:	add    edx,0x1
6401e5b5:	add    eax,0x28
6401e5b8:	cmp    edx,esi
6401e5ba:	jb     0x6401e5a2
6401e5bc:	xor    eax,eax
6401e5be:	pop    edi
6401e5bf:	pop    esi
6401e5c0:	pop    ebx
6401e5c1:	ret    
6401e5c2:	int3   
6401e5c3:	int3   
6401e5c4:	int3   
6401e5c5:	int3   
6401e5c6:	int3   
6401e5c7:	int3   
6401e5c8:	int3   
6401e5c9:	int3   
6401e5ca:	int3   
6401e5cb:	int3   
6401e5cc:	int3   
6401e5cd:	int3   
6401e5ce:	int3   
6401e5cf:	int3   
6401e5d0:	push   ebp
6401e5d1:	mov    ebp,esp
6401e5d3:	push   0xfffffffe
6401e5d5:	push   0x6402bb28
6401e5da:	push   0x64015f30
6401e5df:	mov    eax,fs:0x0
6401e5e5:	push   eax
6401e5e6:	sub    esp,0x8
6401e5e9:	push   ebx
6401e5ea:	push   esi
6401e5eb:	push   edi
6401e5ec:	mov    eax,ds:0x64037644
6401e5f1:	xor    DWORD PTR [ebp-0x8],eax
6401e5f4:	xor    eax,ebp
6401e5f6:	push   eax
6401e5f7:	lea    eax,[ebp-0x10]
6401e5fa:	mov    fs:0x0,eax
6401e600:	mov    DWORD PTR [ebp-0x18],esp
6401e603:	mov    DWORD PTR [ebp-0x4],0x0
6401e60a:	push   0x64000000
6401e60f:	call   0x6401e550
6401e614:	add    esp,0x4
6401e617:	test   eax,eax
6401e619:	je     0x6401e670
6401e61b:	mov    eax,DWORD PTR [ebp+0x8]
6401e61e:	sub    eax,0x64000000
6401e623:	push   eax
6401e624:	push   0x64000000
6401e629:	call   0x6401e580
6401e62e:	add    esp,0x8
6401e631:	test   eax,eax
6401e633:	je     0x6401e670
6401e635:	mov    eax,DWORD PTR [eax+0x24]
6401e638:	shr    eax,0x1f
6401e63b:	not    eax
6401e63d:	and    eax,0x1
6401e640:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e647:	mov    ecx,DWORD PTR [ebp-0x10]
6401e64a:	mov    DWORD PTR fs:0x0,ecx
6401e651:	pop    ecx
6401e652:	pop    edi
6401e653:	pop    esi
6401e654:	pop    ebx
6401e655:	mov    esp,ebp
6401e657:	pop    ebp
6401e658:	ret    
6401e659:	mov    eax,DWORD PTR [ebp-0x14]
6401e65c:	mov    ecx,DWORD PTR [eax]
6401e65e:	mov    eax,DWORD PTR [ecx]
6401e660:	xor    edx,edx
6401e662:	cmp    eax,0xc0000005
6401e667:	sete   dl
6401e66a:	mov    eax,edx
6401e66c:	ret    
6401e66d:	mov    esp,DWORD PTR [ebp-0x18]
6401e670:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e677:	xor    eax,eax
6401e679:	mov    ecx,DWORD PTR [ebp-0x10]
6401e67c:	mov    DWORD PTR fs:0x0,ecx
6401e683:	pop    ecx
6401e684:	pop    edi
6401e685:	pop    esi
6401e686:	pop    ebx
6401e687:	mov    esp,ebp
6401e689:	pop    ebp
6401e68a:	ret    
6401e68b:	xor    eax,eax
6401e68d:	inc    eax
6401e68e:	cmp    DWORD PTR [esp+0x4],0x0
6401e693:	jne    0x6401e697
6401e695:	xor    eax,eax
6401e697:	ret    
6401e698:	push   ebp
6401e699:	mov    ebp,esp
6401e69b:	push   ebx
6401e69c:	push   esi
6401e69d:	push   edi
6401e69e:	push   ebp
6401e69f:	push   0x0
6401e6a1:	push   0x0
6401e6a3:	push   0x6401e6b0
6401e6a8:	push   DWORD PTR [ebp+0x8]
6401e6ab:	call   0x64022e1c
6401e6b0:	pop    ebp
6401e6b1:	pop    edi
6401e6b2:	pop    esi
6401e6b3:	pop    ebx
6401e6b4:	mov    esp,ebp
6401e6b6:	pop    ebp
6401e6b7:	ret    
6401e6b8:	mov    ecx,DWORD PTR [esp+0x4]
6401e6bc:	test   DWORD PTR [ecx+0x4],0x6
6401e6c3:	mov    eax,0x1
6401e6c8:	je     0x6401e6fc
6401e6ca:	mov    eax,DWORD PTR [esp+0x14]
6401e6ce:	mov    ecx,DWORD PTR [eax-0x4]
6401e6d1:	xor    ecx,eax
6401e6d3:	call   0x64013cc6
6401e6d8:	push   ebp
6401e6d9:	mov    ebp,DWORD PTR [eax+0x10]
6401e6dc:	mov    edx,DWORD PTR [eax+0x28]
6401e6df:	push   edx
6401e6e0:	mov    edx,DWORD PTR [eax+0x24]
6401e6e3:	push   edx
6401e6e4:	call   0x6401e6fd
6401e6e9:	add    esp,0x8
6401e6ec:	pop    ebp
6401e6ed:	mov    eax,DWORD PTR [esp+0x8]
6401e6f1:	mov    edx,DWORD PTR [esp+0x10]
6401e6f5:	mov    DWORD PTR [edx],eax
6401e6f7:	mov    eax,0x3
6401e6fc:	ret    
6401e6fd:	push   ebx
6401e6fe:	push   esi
6401e6ff:	push   edi
6401e700:	mov    eax,DWORD PTR [esp+0x10]
6401e704:	push   ebp
6401e705:	push   eax
6401e706:	push   0xfffffffe
6401e708:	push   0x6401e6b8
6401e70d:	push   DWORD PTR fs:0x0
6401e714:	mov    eax,ds:0x64037644
6401e719:	xor    eax,esp
6401e71b:	push   eax
6401e71c:	lea    eax,[esp+0x4]
6401e720:	mov    fs:0x0,eax
6401e726:	mov    eax,DWORD PTR [esp+0x28]
6401e72a:	mov    ebx,DWORD PTR [eax+0x8]
6401e72d:	mov    esi,DWORD PTR [eax+0xc]
6401e730:	cmp    esi,0xffffffff
6401e733:	je     0x6401e76f
6401e735:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401e73a:	je     0x6401e742
6401e73c:	cmp    esi,DWORD PTR [esp+0x2c]
6401e740:	jbe    0x6401e76f
6401e742:	lea    esi,[esi+esi*2]
6401e745:	mov    ecx,DWORD PTR [ebx+esi*4]
6401e748:	mov    DWORD PTR [esp+0xc],ecx
6401e74c:	mov    DWORD PTR [eax+0xc],ecx
6401e74f:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401e754:	jne    0x6401e76d
6401e756:	push   0x101
6401e75b:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e75f:	call   0x6401e7ad
6401e764:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e768:	call   0x6401e7cc
6401e76d:	jmp    0x6401e726
6401e76f:	mov    ecx,DWORD PTR [esp+0x4]
6401e773:	mov    DWORD PTR fs:0x0,ecx
6401e77a:	add    esp,0x18
6401e77d:	pop    edi
6401e77e:	pop    esi
6401e77f:	pop    ebx
6401e780:	ret    
6401e781:	xor    eax,eax
6401e783:	mov    ecx,DWORD PTR fs:0x0
6401e78a:	cmp    DWORD PTR [ecx+0x4],0x6401e6b8
6401e791:	jne    0x6401e7a3
6401e793:	mov    edx,DWORD PTR [ecx+0xc]
6401e796:	mov    edx,DWORD PTR [edx+0xc]
6401e799:	cmp    DWORD PTR [ecx+0x8],edx
6401e79c:	jne    0x6401e7a3
6401e79e:	mov    eax,0x1
6401e7a3:	ret    
6401e7a4:	push   ebx
6401e7a5:	push   ecx
6401e7a6:	mov    ebx,0x64038570
6401e7ab:	jmp    0x6401e7b8
6401e7ad:	push   ebx
6401e7ae:	push   ecx
6401e7af:	mov    ebx,0x64038570
6401e7b4:	mov    ecx,DWORD PTR [esp+0xc]
6401e7b8:	mov    DWORD PTR [ebx+0x8],ecx
6401e7bb:	mov    DWORD PTR [ebx+0x4],eax
6401e7be:	mov    DWORD PTR [ebx+0xc],ebp
6401e7c1:	push   ebp
6401e7c2:	push   ecx
6401e7c3:	push   eax
6401e7c4:	pop    eax
6401e7c5:	pop    ecx
6401e7c6:	pop    ebp
6401e7c7:	pop    ecx
6401e7c8:	pop    ebx
6401e7c9:	ret    0x4
6401e7cc:	call   eax
6401e7ce:	ret    
6401e7cf:	push   esi
6401e7d0:	push   edi
6401e7d1:	xor    edi,edi
6401e7d3:	lea    esi,[edi+0x64038580]
6401e7d9:	push   DWORD PTR [esi]
6401e7db:	call   0x64017557
6401e7e0:	add    edi,0x4
6401e7e3:	cmp    edi,0x28
6401e7e6:	pop    ecx
6401e7e7:	mov    DWORD PTR [esi],eax
6401e7e9:	jb     0x6401e7d3
6401e7eb:	pop    edi
6401e7ec:	pop    esi
6401e7ed:	ret    
6401e7ee:	mov    eax,DWORD PTR [esp+0x4]
6401e7f2:	mov    ds:0x6403987c,eax
6401e7f7:	ret    
6401e7f8:	mov    eax,DWORD PTR [esp+0x4]
6401e7fc:	mov    ds:0x64039880,eax
6401e801:	ret    
6401e802:	push   DWORD PTR [esp+0x4]
6401e806:	call   DWORD PTR ds:0x64024158
6401e80c:	xor    eax,eax
6401e80e:	inc    eax
6401e80f:	ret    0x8
6401e812:	push   0x14
6401e814:	push   0x6402bb48
6401e819:	call   0x64015ed4
6401e81e:	xor    edi,edi
6401e820:	mov    DWORD PTR [ebp-0x1c],edi
6401e823:	push   DWORD PTR ds:0x64039880
6401e829:	call   0x640175ce
6401e82e:	pop    ecx
6401e82f:	mov    esi,eax
6401e831:	cmp    esi,edi
6401e833:	jne    0x6401e888
6401e835:	lea    eax,[ebp-0x1c]
6401e838:	push   eax
6401e839:	call   0x64017e7f
6401e83e:	pop    ecx
6401e83f:	cmp    eax,edi
6401e841:	je     0x6401e850
6401e843:	push   edi
6401e844:	push   edi
6401e845:	push   edi
6401e846:	push   edi
6401e847:	push   edi
6401e848:	call   0x64013d16
6401e84d:	add    esp,0x14
6401e850:	cmp    DWORD PTR [ebp-0x1c],0x1
6401e854:	je     0x6401e877
6401e856:	push   0x64027c08
6401e85b:	call   DWORD PTR ds:0x6402409c
6401e861:	cmp    eax,edi
6401e863:	je     0x6401e877
6401e865:	push   0x64029448
6401e86a:	push   eax
6401e86b:	call   DWORD PTR ds:0x64024098
6401e871:	mov    esi,eax
6401e873:	cmp    esi,edi
6401e875:	jne    0x6401e87c
6401e877:	mov    esi,0x6401e802
6401e87c:	push   esi
6401e87d:	call   0x64017557
6401e882:	pop    ecx
6401e883:	mov    ds:0x64039880,eax
6401e888:	mov    DWORD PTR [ebp-0x4],edi
6401e88b:	push   DWORD PTR [ebp+0xc]
6401e88e:	push   DWORD PTR [ebp+0x8]
6401e891:	call   esi
6401e893:	mov    DWORD PTR [ebp-0x20],eax
6401e896:	jmp    0x6401e8c7
6401e898:	mov    eax,DWORD PTR [ebp-0x14]
6401e89b:	mov    eax,DWORD PTR [eax]
6401e89d:	mov    eax,DWORD PTR [eax]
6401e89f:	mov    DWORD PTR [ebp-0x24],eax
6401e8a2:	xor    ecx,ecx
6401e8a4:	cmp    eax,0xc0000017
6401e8a9:	sete   cl
6401e8ac:	mov    eax,ecx
6401e8ae:	ret    
6401e8af:	mov    esp,DWORD PTR [ebp-0x18]
6401e8b2:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401e8b9:	jne    0x6401e8c3
6401e8bb:	push   0x8
6401e8bd:	call   DWORD PTR ds:0x64024070
6401e8c3:	and    DWORD PTR [ebp-0x20],0x0
6401e8c7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e8ce:	mov    eax,DWORD PTR [ebp-0x20]
6401e8d1:	call   0x64015f19
6401e8d6:	ret    
6401e8d7:	push   0x10
6401e8d9:	push   0x6402bb68
6401e8de:	call   0x64015ed4
6401e8e3:	xor    ebx,ebx
6401e8e5:	mov    DWORD PTR [ebp-0x1c],ebx
6401e8e8:	push   0x1
6401e8ea:	call   0x6401b2ba
6401e8ef:	pop    ecx
6401e8f0:	mov    DWORD PTR [ebp-0x4],ebx
6401e8f3:	push   0x3
6401e8f5:	pop    edi
6401e8f6:	mov    DWORD PTR [ebp-0x20],edi
6401e8f9:	cmp    edi,DWORD PTR ds:0x6403ab40
6401e8ff:	jge    0x6401e958
6401e901:	mov    esi,edi
6401e903:	shl    esi,0x2
6401e906:	mov    eax,ds:0x64039b34
6401e90b:	add    eax,esi
6401e90d:	cmp    DWORD PTR [eax],ebx
6401e90f:	je     0x6401e955
6401e911:	mov    eax,DWORD PTR [eax]
6401e913:	test   BYTE PTR [eax+0xc],0x83
6401e917:	je     0x6401e928
6401e919:	push   eax
6401e91a:	call   0x64014610
6401e91f:	pop    ecx
6401e920:	cmp    eax,0xffffffff
6401e923:	je     0x6401e928
6401e925:	inc    DWORD PTR [ebp-0x1c]
6401e928:	cmp    edi,0x14
6401e92b:	jl     0x6401e955
6401e92d:	mov    eax,ds:0x64039b34
6401e932:	mov    eax,DWORD PTR [esi+eax*1]
6401e935:	add    eax,0x20
6401e938:	push   eax
6401e939:	call   DWORD PTR ds:0x6402415c
6401e93f:	mov    eax,ds:0x64039b34
6401e944:	push   DWORD PTR [esi+eax*1]
6401e947:	call   0x6401477f
6401e94c:	pop    ecx
6401e94d:	mov    eax,ds:0x64039b34
6401e952:	mov    DWORD PTR [esi+eax*1],ebx
6401e955:	inc    edi
6401e956:	jmp    0x6401e8f6
6401e958:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e95f:	call   0x6401e96d
6401e964:	mov    eax,DWORD PTR [ebp-0x1c]
6401e967:	call   0x64015f19
6401e96c:	ret    
6401e96d:	push   0x1
6401e96f:	call   0x6401b1e2
6401e974:	pop    ecx
6401e975:	ret    
6401e976:	push   0x10
6401e978:	push   0x6402bb88
6401e97d:	call   0x64015ed4
6401e982:	mov    eax,DWORD PTR [ebp+0x8]
6401e985:	cmp    eax,0xfffffffe
6401e988:	jne    0x6401e99d
6401e98a:	call   0x64016483
6401e98f:	mov    DWORD PTR [eax],0x9
6401e995:	or     eax,0xffffffff
6401e998:	jmp    0x6401ea47
6401e99d:	xor    ebx,ebx
6401e99f:	cmp    eax,ebx
6401e9a1:	jl     0x6401e9ab
6401e9a3:	cmp    eax,DWORD PTR ds:0x6403ab48
6401e9a9:	jb     0x6401e9c5
6401e9ab:	call   0x64016483
6401e9b0:	mov    DWORD PTR [eax],0x9
6401e9b6:	push   ebx
6401e9b7:	push   ebx
6401e9b8:	push   ebx
6401e9b9:	push   ebx
6401e9ba:	push   ebx
6401e9bb:	call   0x64013e12
6401e9c0:	add    esp,0x14
6401e9c3:	jmp    0x6401e995
6401e9c5:	mov    ecx,eax
6401e9c7:	sar    ecx,0x5
6401e9ca:	lea    edi,[ecx*4+0x6403ab60]
6401e9d1:	mov    esi,eax
6401e9d3:	and    esi,0x1f
6401e9d6:	shl    esi,0x6
6401e9d9:	mov    ecx,DWORD PTR [edi]
6401e9db:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401e9e0:	and    ecx,0x1
6401e9e3:	je     0x6401e9ab
6401e9e5:	push   eax
6401e9e6:	call   0x640197c6
6401e9eb:	pop    ecx
6401e9ec:	mov    DWORD PTR [ebp-0x4],ebx
6401e9ef:	mov    eax,DWORD PTR [edi]
6401e9f1:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401e9f6:	je     0x6401ea29
6401e9f8:	push   DWORD PTR [ebp+0x8]
6401e9fb:	call   0x64019755
6401ea00:	pop    ecx
6401ea01:	push   eax
6401ea02:	call   DWORD PTR ds:0x64024100
6401ea08:	test   eax,eax
6401ea0a:	jne    0x6401ea17
6401ea0c:	call   DWORD PTR ds:0x64024068
6401ea12:	mov    DWORD PTR [ebp-0x1c],eax
6401ea15:	jmp    0x6401ea1a
6401ea17:	mov    DWORD PTR [ebp-0x1c],ebx
6401ea1a:	cmp    DWORD PTR [ebp-0x1c],ebx
6401ea1d:	je     0x6401ea38
6401ea1f:	call   0x64016496
6401ea24:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ea27:	mov    DWORD PTR [eax],ecx
6401ea29:	call   0x64016483
6401ea2e:	mov    DWORD PTR [eax],0x9
6401ea34:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ea38:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea3f:	call   0x6401ea4d
6401ea44:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea47:	call   0x64015f19
6401ea4c:	ret    
6401ea4d:	push   DWORD PTR [ebp+0x8]
6401ea50:	call   0x64019866
6401ea55:	pop    ecx
6401ea56:	ret    
6401ea57:	inc    DWORD PTR ds:0x64039398
6401ea5d:	push   0x1000
6401ea62:	call   0x64015cef
6401ea67:	test   eax,eax
6401ea69:	pop    ecx
6401ea6a:	mov    ecx,DWORD PTR [esp+0x4]
6401ea6e:	mov    DWORD PTR [ecx+0x8],eax
6401ea71:	je     0x6401ea80
6401ea73:	or     DWORD PTR [ecx+0xc],0x8
6401ea77:	mov    DWORD PTR [ecx+0x18],0x1000
6401ea7e:	jmp    0x6401ea91
6401ea80:	or     DWORD PTR [ecx+0xc],0x4
6401ea84:	lea    eax,[ecx+0x14]
6401ea87:	mov    DWORD PTR [ecx+0x8],eax
6401ea8a:	mov    DWORD PTR [ecx+0x18],0x2
6401ea91:	mov    eax,DWORD PTR [ecx+0x8]
6401ea94:	and    DWORD PTR [ecx+0x4],0x0
6401ea98:	mov    DWORD PTR [ecx],eax
6401ea9a:	ret    
6401ea9b:	mov    eax,DWORD PTR [esp+0x4]
6401ea9f:	cmp    eax,0xfffffffe
6401eaa2:	jne    0x6401eab2
6401eaa4:	call   0x64016483
6401eaa9:	mov    DWORD PTR [eax],0x9
6401eaaf:	xor    eax,eax
6401eab1:	ret    
6401eab2:	push   esi
6401eab3:	xor    esi,esi
6401eab5:	cmp    eax,esi
6401eab7:	jl     0x6401eac1
6401eab9:	cmp    eax,DWORD PTR ds:0x6403ab48
6401eabf:	jb     0x6401eadd
6401eac1:	call   0x64016483
6401eac6:	push   esi
6401eac7:	push   esi
6401eac8:	push   esi
6401eac9:	push   esi
6401eaca:	push   esi
6401eacb:	mov    DWORD PTR [eax],0x9
6401ead1:	call   0x64013e12
6401ead6:	add    esp,0x14
6401ead9:	xor    eax,eax
6401eadb:	pop    esi
6401eadc:	ret    
6401eadd:	mov    ecx,eax
6401eadf:	and    eax,0x1f
6401eae2:	sar    ecx,0x5
6401eae5:	mov    ecx,DWORD PTR [ecx*4+0x6403ab60]
6401eaec:	shl    eax,0x6
6401eaef:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401eaf4:	and    eax,0x40
6401eaf7:	pop    esi
6401eaf8:	ret    
6401eaf9:	mov    eax,ds:0x64037644
6401eafe:	or     eax,0x1
6401eb01:	xor    ecx,ecx
6401eb03:	cmp    DWORD PTR ds:0x64039888,eax
6401eb09:	sete   cl
6401eb0c:	mov    eax,ecx
6401eb0e:	ret    
6401eb0f:	push   ebp
6401eb10:	mov    ebp,esp
6401eb12:	sub    esp,0x10
6401eb15:	push   ebx
6401eb16:	push   esi
6401eb17:	mov    esi,DWORD PTR [ebp+0xc]
6401eb1a:	xor    ebx,ebx
6401eb1c:	cmp    esi,ebx
6401eb1e:	push   edi
6401eb1f:	mov    edi,DWORD PTR [ebp+0x10]
6401eb22:	jne    0x6401eb35
6401eb24:	cmp    edi,ebx
6401eb26:	jbe    0x6401eb35
6401eb28:	mov    eax,DWORD PTR [ebp+0x8]
6401eb2b:	cmp    eax,ebx
6401eb2d:	je     0x6401eb31
6401eb2f:	mov    DWORD PTR [eax],ebx
6401eb31:	xor    eax,eax
6401eb33:	jmp    0x6401ebb4
6401eb35:	mov    eax,DWORD PTR [ebp+0x8]
6401eb38:	cmp    eax,ebx
6401eb3a:	je     0x6401eb3f
6401eb3c:	or     DWORD PTR [eax],0xffffffff
6401eb3f:	cmp    edi,0x7fffffff
6401eb45:	jbe    0x6401eb62
6401eb47:	call   0x64016483
6401eb4c:	push   0x16
6401eb4e:	pop    esi
6401eb4f:	push   ebx
6401eb50:	push   ebx
6401eb51:	push   ebx
6401eb52:	push   ebx
6401eb53:	push   ebx
6401eb54:	mov    DWORD PTR [eax],esi
6401eb56:	call   0x64013e12
6401eb5b:	add    esp,0x14
6401eb5e:	mov    eax,esi
6401eb60:	jmp    0x6401ebb4
6401eb62:	push   DWORD PTR [ebp+0x18]
6401eb65:	lea    ecx,[ebp-0x10]
6401eb68:	call   0x640142e5
6401eb6d:	mov    eax,DWORD PTR [ebp-0x10]
6401eb70:	cmp    DWORD PTR [eax+0x14],ebx
6401eb73:	jne    0x6401ec0d
6401eb79:	mov    ax,WORD PTR [ebp+0x14]
6401eb7d:	cmp    ax,0xff
6401eb81:	jbe    0x6401ebb9
6401eb83:	cmp    esi,ebx
6401eb85:	je     0x6401eb96
6401eb87:	cmp    edi,ebx
6401eb89:	jbe    0x6401eb96
6401eb8b:	push   edi
6401eb8c:	push   ebx
6401eb8d:	push   esi
6401eb8e:	call   0x64015120
6401eb93:	add    esp,0xc
6401eb96:	call   0x64016483
6401eb9b:	mov    DWORD PTR [eax],0x2a
6401eba1:	call   0x64016483
6401eba6:	cmp    BYTE PTR [ebp-0x4],bl
6401eba9:	mov    eax,DWORD PTR [eax]
6401ebab:	je     0x6401ebb4
6401ebad:	mov    ecx,DWORD PTR [ebp-0x8]
6401ebb0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ebb4:	pop    edi
6401ebb5:	pop    esi
6401ebb6:	pop    ebx
6401ebb7:	leave  
6401ebb8:	ret    
6401ebb9:	cmp    esi,ebx
6401ebbb:	je     0x6401ebeb
6401ebbd:	cmp    edi,ebx
6401ebbf:	ja     0x6401ebe9
6401ebc1:	call   0x64016483
6401ebc6:	push   0x22
6401ebc8:	pop    esi
6401ebc9:	push   ebx
6401ebca:	push   ebx
6401ebcb:	push   ebx
6401ebcc:	push   ebx
6401ebcd:	push   ebx
6401ebce:	mov    DWORD PTR [eax],esi
6401ebd0:	call   0x64013e12
6401ebd5:	add    esp,0x14
6401ebd8:	cmp    BYTE PTR [ebp-0x4],bl
6401ebdb:	je     0x6401eb5e
6401ebdd:	mov    eax,DWORD PTR [ebp-0x8]
6401ebe0:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ebe4:	jmp    0x6401eb5e
6401ebe9:	mov    BYTE PTR [esi],al
6401ebeb:	mov    eax,DWORD PTR [ebp+0x8]
6401ebee:	cmp    eax,ebx
6401ebf0:	je     0x6401ebf8
6401ebf2:	mov    DWORD PTR [eax],0x1
6401ebf8:	cmp    BYTE PTR [ebp-0x4],bl
6401ebfb:	je     0x6401eb31
6401ec01:	mov    eax,DWORD PTR [ebp-0x8]
6401ec04:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ec08:	jmp    0x6401eb31
6401ec0d:	lea    ecx,[ebp+0xc]
6401ec10:	push   ecx
6401ec11:	push   ebx
6401ec12:	push   edi
6401ec13:	push   esi
6401ec14:	push   0x1
6401ec16:	lea    ecx,[ebp+0x14]
6401ec19:	push   ecx
6401ec1a:	push   ebx
6401ec1b:	mov    DWORD PTR [ebp+0xc],ebx
6401ec1e:	push   DWORD PTR [eax+0x4]
6401ec21:	call   DWORD PTR ds:0x64024010
6401ec27:	cmp    eax,ebx
6401ec29:	je     0x6401ec3f
6401ec2b:	cmp    DWORD PTR [ebp+0xc],ebx
6401ec2e:	jne    0x6401eb96
6401ec34:	mov    ecx,DWORD PTR [ebp+0x8]
6401ec37:	cmp    ecx,ebx
6401ec39:	je     0x6401ebf8
6401ec3b:	mov    DWORD PTR [ecx],eax
6401ec3d:	jmp    0x6401ebf8
6401ec3f:	call   DWORD PTR ds:0x64024068
6401ec45:	cmp    eax,0x7a
6401ec48:	jne    0x6401eb96
6401ec4e:	cmp    esi,ebx
6401ec50:	je     0x6401ebc1
6401ec56:	cmp    edi,ebx
6401ec58:	jbe    0x6401ebc1
6401ec5e:	push   edi
6401ec5f:	push   ebx
6401ec60:	push   esi
6401ec61:	call   0x64015120
6401ec66:	add    esp,0xc
6401ec69:	jmp    0x6401ebc1
6401ec6e:	push   0x0
6401ec70:	push   DWORD PTR [esp+0x14]
6401ec74:	push   DWORD PTR [esp+0x14]
6401ec78:	push   DWORD PTR [esp+0x14]
6401ec7c:	push   DWORD PTR [esp+0x14]
6401ec80:	call   0x6401eb0f
6401ec85:	add    esp,0x14
6401ec88:	ret    
6401ec89:	push   ebp
6401ec8a:	mov    ebp,esp
6401ec8c:	sub    esp,0x10
6401ec8f:	mov    eax,ds:0x64037644
6401ec94:	xor    eax,ebp
6401ec96:	mov    DWORD PTR [ebp-0x4],eax
6401ec99:	push   esi
6401ec9a:	xor    esi,esi
6401ec9c:	cmp    DWORD PTR ds:0x640385a8,esi
6401eca2:	je     0x6401ecf2
6401eca4:	cmp    DWORD PTR ds:0x64038954,0xfffffffe
6401ecab:	jne    0x6401ecb2
6401ecad:	call   0x6402112f
6401ecb2:	mov    eax,ds:0x64038954
6401ecb7:	cmp    eax,0xffffffff
6401ecba:	jne    0x6401ecc2
6401ecbc:	or     ax,0xffff
6401ecc0:	jmp    0x6401ed32
6401ecc2:	push   esi
6401ecc3:	lea    ecx,[ebp-0x10]
6401ecc6:	push   ecx
6401ecc7:	push   0x1
6401ecc9:	lea    ecx,[ebp+0x8]
6401eccc:	push   ecx
6401eccd:	push   eax
6401ecce:	call   DWORD PTR ds:0x64024124
6401ecd4:	test   eax,eax
6401ecd6:	jne    0x6401ed3f
6401ecd8:	cmp    DWORD PTR ds:0x640385a8,0x2
6401ecdf:	jne    0x6401ecbc
6401ece1:	call   DWORD PTR ds:0x64024068
6401ece7:	cmp    eax,0x78
6401ecea:	jne    0x6401ecbc
6401ecec:	mov    DWORD PTR ds:0x640385a8,esi
6401ecf2:	push   esi
6401ecf3:	push   esi
6401ecf4:	push   0x5
6401ecf6:	lea    eax,[ebp-0xc]
6401ecf9:	push   eax
6401ecfa:	push   0x1
6401ecfc:	lea    eax,[ebp+0x8]
6401ecff:	push   eax
6401ed00:	push   esi
6401ed01:	call   DWORD PTR ds:0x64024120
6401ed07:	push   eax
6401ed08:	call   DWORD PTR ds:0x64024010
6401ed0e:	mov    ecx,DWORD PTR ds:0x64038954
6401ed14:	cmp    ecx,0xffffffff
6401ed17:	je     0x6401ecbc
6401ed19:	push   esi
6401ed1a:	lea    edx,[ebp-0x10]
6401ed1d:	push   edx
6401ed1e:	push   eax
6401ed1f:	lea    eax,[ebp-0xc]
6401ed22:	push   eax
6401ed23:	push   ecx
6401ed24:	call   DWORD PTR ds:0x6402411c
6401ed2a:	test   eax,eax
6401ed2c:	je     0x6401ecbc
6401ed2e:	mov    ax,WORD PTR [ebp+0x8]
6401ed32:	mov    ecx,DWORD PTR [ebp-0x4]
6401ed35:	xor    ecx,ebp
6401ed37:	pop    esi
6401ed38:	call   0x64013cc6
6401ed3d:	leave  
6401ed3e:	ret    
6401ed3f:	mov    DWORD PTR ds:0x640385a8,0x1
6401ed49:	jmp    0x6401ed2e
6401ed4b:	push   ebp
6401ed4c:	mov    ebp,esp
6401ed4e:	sub    esp,0x10
6401ed51:	push   ebx
6401ed52:	push   esi
6401ed53:	mov    esi,DWORD PTR [ebp+0xc]
6401ed56:	xor    ebx,ebx
6401ed58:	cmp    esi,ebx
6401ed5a:	je     0x6401ed6f
6401ed5c:	cmp    DWORD PTR [ebp+0x10],ebx
6401ed5f:	je     0x6401ed6f
6401ed61:	cmp    BYTE PTR [esi],bl
6401ed63:	jne    0x6401ed75
6401ed65:	mov    eax,DWORD PTR [ebp+0x8]
6401ed68:	cmp    eax,ebx
6401ed6a:	je     0x6401ed6f
6401ed6c:	mov    WORD PTR [eax],bx
6401ed6f:	xor    eax,eax
6401ed71:	pop    esi
6401ed72:	pop    ebx
6401ed73:	leave  
6401ed74:	ret    
6401ed75:	push   DWORD PTR [ebp+0x14]
6401ed78:	lea    ecx,[ebp-0x10]
6401ed7b:	call   0x640142e5
6401ed80:	mov    eax,DWORD PTR [ebp-0x10]
6401ed83:	cmp    DWORD PTR [eax+0x14],ebx
6401ed86:	jne    0x6401eda7
6401ed88:	mov    eax,DWORD PTR [ebp+0x8]
6401ed8b:	cmp    eax,ebx
6401ed8d:	je     0x6401ed96
6401ed8f:	movzx  cx,BYTE PTR [esi]
6401ed93:	mov    WORD PTR [eax],cx
6401ed96:	cmp    BYTE PTR [ebp-0x4],bl
6401ed99:	je     0x6401eda2
6401ed9b:	mov    eax,DWORD PTR [ebp-0x8]
6401ed9e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eda2:	xor    eax,eax
6401eda4:	inc    eax
6401eda5:	jmp    0x6401ed71
6401eda7:	lea    eax,[ebp-0x10]
6401edaa:	push   eax
6401edab:	movzx  eax,BYTE PTR [esi]
6401edae:	push   eax
6401edaf:	call   0x640150d7
6401edb4:	test   eax,eax
6401edb6:	pop    ecx
6401edb7:	pop    ecx
6401edb8:	je     0x6401ee37
6401edba:	mov    eax,DWORD PTR [ebp-0x10]
6401edbd:	mov    ecx,DWORD PTR [eax+0xac]
6401edc3:	cmp    ecx,0x1
6401edc6:	jle    0x6401eded
6401edc8:	cmp    DWORD PTR [ebp+0x10],ecx
6401edcb:	jl     0x6401eded
6401edcd:	xor    edx,edx
6401edcf:	cmp    DWORD PTR [ebp+0x8],ebx
6401edd2:	setne  dl
6401edd5:	push   edx
6401edd6:	push   DWORD PTR [ebp+0x8]
6401edd9:	push   ecx
6401edda:	push   esi
6401eddb:	push   0x9
6401eddd:	push   DWORD PTR [eax+0x4]
6401ede0:	call   DWORD PTR ds:0x64024028
6401ede6:	test   eax,eax
6401ede8:	mov    eax,DWORD PTR [ebp-0x10]
6401edeb:	jne    0x6401edfd
6401eded:	mov    ecx,DWORD PTR [ebp+0x10]
6401edf0:	cmp    ecx,DWORD PTR [eax+0xac]
6401edf6:	jb     0x6401ee18
6401edf8:	cmp    BYTE PTR [esi+0x1],bl
6401edfb:	je     0x6401ee18
6401edfd:	cmp    BYTE PTR [ebp-0x4],bl
6401ee00:	mov    eax,DWORD PTR [eax+0xac]
6401ee06:	je     0x6401ed71
6401ee0c:	mov    ecx,DWORD PTR [ebp-0x8]
6401ee0f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ee13:	jmp    0x6401ed71
6401ee18:	call   0x64016483
6401ee1d:	mov    DWORD PTR [eax],0x2a
6401ee23:	cmp    BYTE PTR [ebp-0x4],bl
6401ee26:	je     0x6401ee2f
6401ee28:	mov    eax,DWORD PTR [ebp-0x8]
6401ee2b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ee2f:	or     eax,0xffffffff
6401ee32:	jmp    0x6401ed71
6401ee37:	xor    eax,eax
6401ee39:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee3c:	setne  al
6401ee3f:	push   eax
6401ee40:	push   DWORD PTR [ebp+0x8]
6401ee43:	mov    eax,DWORD PTR [ebp-0x10]
6401ee46:	push   0x1
6401ee48:	push   esi
6401ee49:	push   0x9
6401ee4b:	push   DWORD PTR [eax+0x4]
6401ee4e:	call   DWORD PTR ds:0x64024028
6401ee54:	test   eax,eax
6401ee56:	jne    0x6401ed96
6401ee5c:	jmp    0x6401ee18
6401ee5e:	push   0x0
6401ee60:	push   DWORD PTR [esp+0x10]
6401ee64:	push   DWORD PTR [esp+0x10]
6401ee68:	push   DWORD PTR [esp+0x10]
6401ee6c:	call   0x6401ed4b
6401ee71:	add    esp,0x10
6401ee74:	ret    
6401ee75:	push   ebp
6401ee76:	mov    ebp,esp
6401ee78:	sub    esp,0x20
6401ee7b:	push   ebx
6401ee7c:	push   esi
6401ee7d:	push   edi
6401ee7e:	call   0x640175c5
6401ee83:	xor    ebx,ebx
6401ee85:	cmp    DWORD PTR ds:0x6403988c,ebx
6401ee8b:	mov    DWORD PTR [ebp-0x8],eax
6401ee8e:	mov    DWORD PTR [ebp-0x4],ebx
6401ee91:	mov    DWORD PTR [ebp-0xc],ebx
6401ee94:	mov    DWORD PTR [ebp-0x10],ebx
6401ee97:	jne    0x6401ef4b
6401ee9d:	push   0x640294d4
6401eea2:	call   DWORD PTR ds:0x640240a0
6401eea8:	mov    edi,eax
6401eeaa:	cmp    edi,ebx
6401eeac:	je     0x6401f02b
6401eeb2:	mov    esi,DWORD PTR ds:0x64024098
6401eeb8:	push   0x640294c8
6401eebd:	push   edi
6401eebe:	call   esi
6401eec0:	cmp    eax,ebx
6401eec2:	je     0x6401f02b
6401eec8:	push   eax
6401eec9:	call   0x64017557
6401eece:	mov    DWORD PTR [esp],0x640294b8
6401eed5:	push   edi
6401eed6:	mov    ds:0x6403988c,eax
6401eedb:	call   esi
6401eedd:	push   eax
6401eede:	call   0x64017557
6401eee3:	mov    DWORD PTR [esp],0x640294a4
6401eeea:	push   edi
6401eeeb:	mov    ds:0x64039890,eax
6401eef0:	call   esi
6401eef2:	push   eax
6401eef3:	call   0x64017557
6401eef8:	mov    ds:0x64039894,eax
6401eefd:	lea    eax,[ebp-0xc]
6401ef00:	push   eax
6401ef01:	call   0x64017e7f
6401ef06:	test   eax,eax
6401ef08:	pop    ecx
6401ef09:	pop    ecx
6401ef0a:	je     0x6401ef19
6401ef0c:	push   ebx
6401ef0d:	push   ebx
6401ef0e:	push   ebx
6401ef0f:	push   ebx
6401ef10:	push   ebx
6401ef11:	call   0x64013d16
6401ef16:	add    esp,0x14
6401ef19:	cmp    DWORD PTR [ebp-0xc],0x2
6401ef1d:	jne    0x6401ef4b
6401ef1f:	push   0x64029488
6401ef24:	push   edi
6401ef25:	call   esi
6401ef27:	push   eax
6401ef28:	call   0x64017557
6401ef2d:	cmp    eax,ebx
6401ef2f:	pop    ecx
6401ef30:	mov    ds:0x6403989c,eax
6401ef35:	je     0x6401ef4b
6401ef37:	push   0x64029470
6401ef3c:	push   edi
6401ef3d:	call   esi
6401ef3f:	push   eax
6401ef40:	call   0x64017557
6401ef45:	pop    ecx
6401ef46:	mov    ds:0x64039898,eax
6401ef4b:	mov    eax,ds:0x64039898
6401ef50:	mov    ecx,DWORD PTR [ebp-0x8]
6401ef53:	cmp    eax,ecx
6401ef55:	je     0x6401efd0
6401ef57:	cmp    DWORD PTR ds:0x6403989c,ecx
6401ef5d:	je     0x6401efd0
6401ef5f:	push   eax
6401ef60:	call   0x640175ce
6401ef65:	push   DWORD PTR ds:0x6403989c
6401ef6b:	mov    esi,eax
6401ef6d:	call   0x640175ce
6401ef72:	cmp    esi,ebx
6401ef74:	pop    ecx
6401ef75:	pop    ecx
6401ef76:	mov    edi,eax
6401ef78:	je     0x6401efd0
6401ef7a:	cmp    edi,ebx
6401ef7c:	je     0x6401efd0
6401ef7e:	call   esi
6401ef80:	cmp    eax,ebx
6401ef82:	je     0x6401ef9d
6401ef84:	lea    ecx,[ebp-0x14]
6401ef87:	push   ecx
6401ef88:	push   0xc
6401ef8a:	lea    ecx,[ebp-0x20]
6401ef8d:	push   ecx
6401ef8e:	push   0x1
6401ef90:	push   eax
6401ef91:	call   edi
6401ef93:	test   eax,eax
6401ef95:	je     0x6401ef9d
6401ef97:	test   BYTE PTR [ebp-0x18],0x1
6401ef9b:	jne    0x6401efd0
6401ef9d:	lea    eax,[ebp-0x10]
6401efa0:	push   eax
6401efa1:	call   0x64017eb6
6401efa6:	test   eax,eax
6401efa8:	pop    ecx
6401efa9:	je     0x6401efb8
6401efab:	push   ebx
6401efac:	push   ebx
6401efad:	push   ebx
6401efae:	push   ebx
6401efaf:	push   ebx
6401efb0:	call   0x64013d16
6401efb5:	add    esp,0x14
6401efb8:	cmp    DWORD PTR [ebp-0x10],0x4
6401efbc:	jb     0x6401efc7
6401efbe:	or     DWORD PTR [ebp+0x10],0x200000
6401efc5:	jmp    0x6401f00b
6401efc7:	or     DWORD PTR [ebp+0x10],0x40000
6401efce:	jmp    0x6401f00b
6401efd0:	mov    eax,ds:0x64039890
6401efd5:	cmp    eax,DWORD PTR [ebp-0x8]
6401efd8:	je     0x6401f00b
6401efda:	push   eax
6401efdb:	call   0x640175ce
6401efe0:	cmp    eax,ebx
6401efe2:	pop    ecx
6401efe3:	je     0x6401f00b
6401efe5:	call   eax
6401efe7:	cmp    eax,ebx
6401efe9:	mov    DWORD PTR [ebp-0x4],eax
6401efec:	je     0x6401f00b
6401efee:	mov    eax,ds:0x64039894
6401eff3:	cmp    eax,DWORD PTR [ebp-0x8]
6401eff6:	je     0x6401f00b
6401eff8:	push   eax
6401eff9:	call   0x640175ce
6401effe:	cmp    eax,ebx
6401f000:	pop    ecx
6401f001:	je     0x6401f00b
6401f003:	push   DWORD PTR [ebp-0x4]
6401f006:	call   eax
6401f008:	mov    DWORD PTR [ebp-0x4],eax
6401f00b:	push   DWORD PTR ds:0x6403988c
6401f011:	call   0x640175ce
6401f016:	cmp    eax,ebx
6401f018:	pop    ecx
6401f019:	je     0x6401f02b
6401f01b:	push   DWORD PTR [ebp+0x10]
6401f01e:	push   DWORD PTR [ebp+0xc]
6401f021:	push   DWORD PTR [ebp+0x8]
6401f024:	push   DWORD PTR [ebp-0x4]
6401f027:	call   eax
6401f029:	jmp    0x6401f02d
6401f02b:	xor    eax,eax
6401f02d:	pop    edi
6401f02e:	pop    esi
6401f02f:	pop    ebx
6401f030:	leave  
6401f031:	ret    
6401f032:	mov    ecx,DWORD PTR [esp+0x4]
6401f036:	push   esi
6401f037:	xor    esi,esi
6401f039:	cmp    ecx,esi
6401f03b:	jl     0x6401f05b
6401f03d:	cmp    ecx,0x2
6401f040:	jle    0x6401f04e
6401f042:	cmp    ecx,0x3
6401f045:	jne    0x6401f05b
6401f047:	mov    eax,ds:0x64038ea0
6401f04c:	pop    esi
6401f04d:	ret    
6401f04e:	mov    eax,ds:0x64038ea0
6401f053:	mov    DWORD PTR ds:0x64038ea0,ecx
6401f059:	pop    esi
6401f05a:	ret    
6401f05b:	call   0x64016483
6401f060:	push   esi
6401f061:	push   esi
6401f062:	push   esi
6401f063:	push   esi
6401f064:	push   esi
6401f065:	mov    DWORD PTR [eax],0x16
6401f06b:	call   0x64013e12
6401f070:	add    esp,0x14
6401f073:	or     eax,0xffffffff
6401f076:	pop    esi
6401f077:	ret    
6401f078:	push   ebp
6401f079:	mov    ebp,esp
6401f07b:	sub    esp,0x2c
6401f07e:	mov    eax,DWORD PTR [ebp+0x8]
6401f081:	movzx  ecx,WORD PTR [eax+0xa]
6401f085:	push   ebx
6401f086:	mov    ebx,ecx
6401f088:	and    ecx,0x8000
6401f08e:	mov    DWORD PTR [ebp-0x14],ecx
6401f091:	mov    ecx,DWORD PTR [eax+0x6]
6401f094:	mov    DWORD PTR [ebp-0x20],ecx
6401f097:	mov    ecx,DWORD PTR [eax+0x2]
6401f09a:	movzx  eax,WORD PTR [eax]
6401f09d:	and    ebx,0x7fff
6401f0a3:	sub    ebx,0x3fff
6401f0a9:	shl    eax,0x10
6401f0ac:	cmp    ebx,0xffffc001
6401f0b2:	push   edi
6401f0b3:	mov    DWORD PTR [ebp-0x1c],ecx
6401f0b6:	mov    DWORD PTR [ebp-0x18],eax
6401f0b9:	jne    0x6401f0e2
6401f0bb:	xor    ebx,ebx
6401f0bd:	xor    eax,eax
6401f0bf:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f0c3:	jne    0x6401f0d2
6401f0c5:	inc    eax
6401f0c6:	cmp    eax,0x3
6401f0c9:	jl     0x6401f0bf
6401f0cb:	xor    eax,eax
6401f0cd:	jmp    0x6401f577
6401f0d2:	xor    eax,eax
6401f0d4:	lea    edi,[ebp-0x20]
6401f0d7:	stos   DWORD PTR es:[edi],eax
6401f0d8:	stos   DWORD PTR es:[edi],eax
6401f0d9:	push   0x2
6401f0db:	stos   DWORD PTR es:[edi],eax
6401f0dc:	pop    eax
6401f0dd:	jmp    0x6401f577
6401f0e2:	and    DWORD PTR [ebp+0x8],0x0
6401f0e6:	push   esi
6401f0e7:	lea    esi,[ebp-0x20]
6401f0ea:	lea    edi,[ebp-0x2c]
6401f0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f0f0:	mov    esi,DWORD PTR ds:0x640385b4
6401f0f6:	dec    esi
6401f0f7:	lea    ecx,[esi+0x1]
6401f0fa:	mov    eax,ecx
6401f0fc:	cdq    
6401f0fd:	and    edx,0x1f
6401f100:	add    eax,edx
6401f102:	sar    eax,0x5
6401f105:	mov    edx,ecx
6401f107:	and    edx,0x8000001f
6401f10d:	mov    DWORD PTR [ebp-0x10],ebx
6401f110:	mov    DWORD PTR [ebp-0xc],eax
6401f113:	jns    0x6401f11a
6401f115:	dec    edx
6401f116:	or     edx,0xffffffe0
6401f119:	inc    edx
6401f11a:	lea    edi,[ebp+eax*4-0x20]
6401f11e:	push   0x1f
6401f120:	xor    eax,eax
6401f122:	pop    ecx
6401f123:	sub    ecx,edx
6401f125:	inc    eax
6401f126:	shl    eax,cl
6401f128:	mov    DWORD PTR [ebp-0x8],ecx
6401f12b:	test   DWORD PTR [edi],eax
6401f12d:	je     0x6401f1c0
6401f133:	mov    eax,DWORD PTR [ebp-0xc]
6401f136:	or     edx,0xffffffff
6401f139:	shl    edx,cl
6401f13b:	not    edx
6401f13d:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f141:	jmp    0x6401f148
6401f143:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f148:	jne    0x6401f152
6401f14a:	inc    eax
6401f14b:	cmp    eax,0x3
6401f14e:	jl     0x6401f143
6401f150:	jmp    0x6401f1c0
6401f152:	mov    eax,esi
6401f154:	cdq    
6401f155:	push   0x1f
6401f157:	pop    ecx
6401f158:	and    edx,ecx
6401f15a:	add    eax,edx
6401f15c:	sar    eax,0x5
6401f15f:	and    esi,0x8000001f
6401f165:	jns    0x6401f16c
6401f167:	dec    esi
6401f168:	or     esi,0xffffffe0
6401f16b:	inc    esi
6401f16c:	and    DWORD PTR [ebp-0x4],0x0
6401f170:	sub    ecx,esi
6401f172:	xor    edx,edx
6401f174:	inc    edx
6401f175:	shl    edx,cl
6401f177:	lea    ecx,[ebp+eax*4-0x20]
6401f17b:	mov    esi,DWORD PTR [ecx]
6401f17d:	add    esi,edx
6401f17f:	mov    DWORD PTR [ebp+0x8],esi
6401f182:	mov    esi,DWORD PTR [ecx]
6401f184:	cmp    DWORD PTR [ebp+0x8],esi
6401f187:	jb     0x6401f1ab
6401f189:	cmp    DWORD PTR [ebp+0x8],edx
6401f18c:	jmp    0x6401f1a9
6401f18e:	test   ecx,ecx
6401f190:	je     0x6401f1bd
6401f192:	and    DWORD PTR [ebp-0x4],0x0
6401f196:	lea    ecx,[ebp+eax*4-0x20]
6401f19a:	mov    edx,DWORD PTR [ecx]
6401f19c:	lea    esi,[edx+0x1]
6401f19f:	cmp    esi,edx
6401f1a1:	mov    DWORD PTR [ebp+0x8],esi
6401f1a4:	jb     0x6401f1ab
6401f1a6:	cmp    esi,0x1
6401f1a9:	jae    0x6401f1b2
6401f1ab:	mov    DWORD PTR [ebp-0x4],0x1
6401f1b2:	dec    eax
6401f1b3:	mov    edx,DWORD PTR [ebp+0x8]
6401f1b6:	mov    DWORD PTR [ecx],edx
6401f1b8:	mov    ecx,DWORD PTR [ebp-0x4]
6401f1bb:	jns    0x6401f18e
6401f1bd:	mov    DWORD PTR [ebp+0x8],ecx
6401f1c0:	mov    ecx,DWORD PTR [ebp-0x8]
6401f1c3:	or     eax,0xffffffff
6401f1c6:	shl    eax,cl
6401f1c8:	and    DWORD PTR [edi],eax
6401f1ca:	mov    eax,DWORD PTR [ebp-0xc]
6401f1cd:	inc    eax
6401f1ce:	cmp    eax,0x3
6401f1d1:	jge    0x6401f1e0
6401f1d3:	push   0x3
6401f1d5:	pop    ecx
6401f1d6:	lea    edi,[ebp+eax*4-0x20]
6401f1da:	sub    ecx,eax
6401f1dc:	xor    eax,eax
6401f1de:	rep stos DWORD PTR es:[edi],eax
6401f1e0:	cmp    DWORD PTR [ebp+0x8],0x0
6401f1e4:	je     0x6401f1e7
6401f1e6:	inc    ebx
6401f1e7:	mov    eax,ds:0x640385b0
6401f1ec:	mov    ecx,eax
6401f1ee:	sub    ecx,DWORD PTR ds:0x640385b4
6401f1f4:	cmp    ebx,ecx
6401f1f6:	jge    0x6401f205
6401f1f8:	xor    eax,eax
6401f1fa:	lea    edi,[ebp-0x20]
6401f1fd:	stos   DWORD PTR es:[edi],eax
6401f1fe:	stos   DWORD PTR es:[edi],eax
6401f1ff:	stos   DWORD PTR es:[edi],eax
6401f200:	jmp    0x6401f412
6401f205:	cmp    ebx,eax
6401f207:	jg     0x6401f41c
6401f20d:	sub    eax,DWORD PTR [ebp-0x10]
6401f210:	lea    esi,[ebp-0x2c]
6401f213:	mov    ecx,eax
6401f215:	lea    edi,[ebp-0x20]
6401f218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f219:	cdq    
6401f21a:	and    edx,0x1f
6401f21d:	add    eax,edx
6401f21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f220:	mov    edx,ecx
6401f222:	sar    eax,0x5
6401f225:	and    edx,0x8000001f
6401f22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f22c:	jns    0x6401f233
6401f22e:	dec    edx
6401f22f:	or     edx,0xffffffe0
6401f232:	inc    edx
6401f233:	and    DWORD PTR [ebp-0xc],0x0
6401f237:	and    DWORD PTR [ebp+0x8],0x0
6401f23b:	or     edi,0xffffffff
6401f23e:	mov    ecx,edx
6401f240:	shl    edi,cl
6401f242:	mov    DWORD PTR [ebp-0x4],0x20
6401f249:	sub    DWORD PTR [ebp-0x4],edx
6401f24c:	not    edi
6401f24e:	mov    ebx,DWORD PTR [ebp+0x8]
6401f251:	lea    ebx,[ebp+ebx*4-0x20]
6401f255:	mov    esi,DWORD PTR [ebx]
6401f257:	mov    ecx,esi
6401f259:	and    ecx,edi
6401f25b:	mov    DWORD PTR [ebp-0x10],ecx
6401f25e:	mov    ecx,edx
6401f260:	shr    esi,cl
6401f262:	mov    ecx,DWORD PTR [ebp-0x4]
6401f265:	or     esi,DWORD PTR [ebp-0xc]
6401f268:	mov    DWORD PTR [ebx],esi
6401f26a:	mov    esi,DWORD PTR [ebp-0x10]
6401f26d:	shl    esi,cl
6401f26f:	inc    DWORD PTR [ebp+0x8]
6401f272:	cmp    DWORD PTR [ebp+0x8],0x3
6401f276:	mov    DWORD PTR [ebp-0xc],esi
6401f279:	jl     0x6401f24e
6401f27b:	mov    esi,eax
6401f27d:	push   0x2
6401f27f:	shl    esi,0x2
6401f282:	lea    ecx,[ebp-0x18]
6401f285:	pop    edx
6401f286:	sub    ecx,esi
6401f288:	cmp    edx,eax
6401f28a:	jl     0x6401f294
6401f28c:	mov    esi,DWORD PTR [ecx]
6401f28e:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f292:	jmp    0x6401f299
6401f294:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f299:	dec    edx
6401f29a:	sub    ecx,0x4
6401f29d:	test   edx,edx
6401f29f:	jge    0x6401f288
6401f2a1:	mov    esi,DWORD PTR ds:0x640385b4
6401f2a7:	dec    esi
6401f2a8:	lea    ecx,[esi+0x1]
6401f2ab:	mov    eax,ecx
6401f2ad:	cdq    
6401f2ae:	and    edx,0x1f
6401f2b1:	add    eax,edx
6401f2b3:	sar    eax,0x5
6401f2b6:	mov    edx,ecx
6401f2b8:	and    edx,0x8000001f
6401f2be:	mov    DWORD PTR [ebp-0xc],eax
6401f2c1:	jns    0x6401f2c8
6401f2c3:	dec    edx
6401f2c4:	or     edx,0xffffffe0
6401f2c7:	inc    edx
6401f2c8:	push   0x1f
6401f2ca:	pop    ecx
6401f2cb:	sub    ecx,edx
6401f2cd:	xor    edx,edx
6401f2cf:	inc    edx
6401f2d0:	shl    edx,cl
6401f2d2:	lea    ebx,[ebp+eax*4-0x20]
6401f2d6:	mov    DWORD PTR [ebp-0x10],ecx
6401f2d9:	test   DWORD PTR [ebx],edx
6401f2db:	je     0x6401f363
6401f2e1:	or     edx,0xffffffff
6401f2e4:	shl    edx,cl
6401f2e6:	not    edx
6401f2e8:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f2ec:	jmp    0x6401f2f3
6401f2ee:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f2f3:	jne    0x6401f2fd
6401f2f5:	inc    eax
6401f2f6:	cmp    eax,0x3
6401f2f9:	jl     0x6401f2ee
6401f2fb:	jmp    0x6401f363
6401f2fd:	mov    eax,esi
6401f2ff:	cdq    
6401f300:	push   0x1f
6401f302:	pop    ecx
6401f303:	and    edx,ecx
6401f305:	add    eax,edx
6401f307:	sar    eax,0x5
6401f30a:	and    esi,0x8000001f
6401f310:	jns    0x6401f317
6401f312:	dec    esi
6401f313:	or     esi,0xffffffe0
6401f316:	inc    esi
6401f317:	and    DWORD PTR [ebp+0x8],0x0
6401f31b:	xor    edx,edx
6401f31d:	sub    ecx,esi
6401f31f:	inc    edx
6401f320:	shl    edx,cl
6401f322:	lea    ecx,[ebp+eax*4-0x20]
6401f326:	mov    esi,DWORD PTR [ecx]
6401f328:	lea    edi,[esi+edx*1]
6401f32b:	cmp    edi,esi
6401f32d:	jb     0x6401f333
6401f32f:	cmp    edi,edx
6401f331:	jae    0x6401f33a
6401f333:	mov    DWORD PTR [ebp+0x8],0x1
6401f33a:	mov    DWORD PTR [ecx],edi
6401f33c:	mov    ecx,DWORD PTR [ebp+0x8]
6401f33f:	jmp    0x6401f360
6401f341:	test   ecx,ecx
6401f343:	je     0x6401f363
6401f345:	lea    ecx,[ebp+eax*4-0x20]
6401f349:	mov    edx,DWORD PTR [ecx]
6401f34b:	lea    esi,[edx+0x1]
6401f34e:	xor    edi,edi
6401f350:	cmp    esi,edx
6401f352:	jb     0x6401f359
6401f354:	cmp    esi,0x1
6401f357:	jae    0x6401f35c
6401f359:	xor    edi,edi
6401f35b:	inc    edi
6401f35c:	mov    DWORD PTR [ecx],esi
6401f35e:	mov    ecx,edi
6401f360:	dec    eax
6401f361:	jns    0x6401f341
6401f363:	mov    ecx,DWORD PTR [ebp-0x10]
6401f366:	or     eax,0xffffffff
6401f369:	shl    eax,cl
6401f36b:	and    DWORD PTR [ebx],eax
6401f36d:	mov    eax,DWORD PTR [ebp-0xc]
6401f370:	inc    eax
6401f371:	cmp    eax,0x3
6401f374:	jge    0x6401f383
6401f376:	push   0x3
6401f378:	pop    ecx
6401f379:	lea    edi,[ebp+eax*4-0x20]
6401f37d:	sub    ecx,eax
6401f37f:	xor    eax,eax
6401f381:	rep stos DWORD PTR es:[edi],eax
6401f383:	mov    ecx,DWORD PTR ds:0x640385b8
6401f389:	inc    ecx
6401f38a:	mov    eax,ecx
6401f38c:	cdq    
6401f38d:	and    edx,0x1f
6401f390:	add    eax,edx
6401f392:	mov    edx,ecx
6401f394:	sar    eax,0x5
6401f397:	and    edx,0x8000001f
6401f39d:	jns    0x6401f3a4
6401f39f:	dec    edx
6401f3a0:	or     edx,0xffffffe0
6401f3a3:	inc    edx
6401f3a4:	and    DWORD PTR [ebp-0xc],0x0
6401f3a8:	and    DWORD PTR [ebp+0x8],0x0
6401f3ac:	or     edi,0xffffffff
6401f3af:	mov    ecx,edx
6401f3b1:	shl    edi,cl
6401f3b3:	mov    DWORD PTR [ebp-0x4],0x20
6401f3ba:	sub    DWORD PTR [ebp-0x4],edx
6401f3bd:	not    edi
6401f3bf:	mov    ebx,DWORD PTR [ebp+0x8]
6401f3c2:	lea    ebx,[ebp+ebx*4-0x20]
6401f3c6:	mov    esi,DWORD PTR [ebx]
6401f3c8:	mov    ecx,esi
6401f3ca:	and    ecx,edi
6401f3cc:	mov    DWORD PTR [ebp-0x10],ecx
6401f3cf:	mov    ecx,edx
6401f3d1:	shr    esi,cl
6401f3d3:	mov    ecx,DWORD PTR [ebp-0x4]
6401f3d6:	or     esi,DWORD PTR [ebp-0xc]
6401f3d9:	mov    DWORD PTR [ebx],esi
6401f3db:	mov    esi,DWORD PTR [ebp-0x10]
6401f3de:	shl    esi,cl
6401f3e0:	inc    DWORD PTR [ebp+0x8]
6401f3e3:	cmp    DWORD PTR [ebp+0x8],0x3
6401f3e7:	mov    DWORD PTR [ebp-0xc],esi
6401f3ea:	jl     0x6401f3bf
6401f3ec:	mov    esi,eax
6401f3ee:	push   0x2
6401f3f0:	shl    esi,0x2
6401f3f3:	lea    ecx,[ebp-0x18]
6401f3f6:	pop    edx
6401f3f7:	sub    ecx,esi
6401f3f9:	cmp    edx,eax
6401f3fb:	jl     0x6401f405
6401f3fd:	mov    esi,DWORD PTR [ecx]
6401f3ff:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f403:	jmp    0x6401f40a
6401f405:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f40a:	dec    edx
6401f40b:	sub    ecx,0x4
6401f40e:	test   edx,edx
6401f410:	jge    0x6401f3f9
6401f412:	push   0x2
6401f414:	xor    ebx,ebx
6401f416:	pop    eax
6401f417:	jmp    0x6401f576
6401f41c:	cmp    ebx,DWORD PTR ds:0x640385ac
6401f422:	mov    ecx,DWORD PTR ds:0x640385b8
6401f428:	jl     0x6401f4db
6401f42e:	xor    eax,eax
6401f430:	lea    edi,[ebp-0x20]
6401f433:	stos   DWORD PTR es:[edi],eax
6401f434:	stos   DWORD PTR es:[edi],eax
6401f435:	stos   DWORD PTR es:[edi],eax
6401f436:	or     DWORD PTR [ebp-0x20],0x80000000
6401f43d:	mov    eax,ecx
6401f43f:	cdq    
6401f440:	and    edx,0x1f
6401f443:	add    eax,edx
6401f445:	mov    edx,ecx
6401f447:	sar    eax,0x5
6401f44a:	and    edx,0x8000001f
6401f450:	jns    0x6401f457
6401f452:	dec    edx
6401f453:	or     edx,0xffffffe0
6401f456:	inc    edx
6401f457:	and    DWORD PTR [ebp-0xc],0x0
6401f45b:	and    DWORD PTR [ebp+0x8],0x0
6401f45f:	or     edi,0xffffffff
6401f462:	mov    ecx,edx
6401f464:	shl    edi,cl
6401f466:	mov    DWORD PTR [ebp-0x4],0x20
6401f46d:	sub    DWORD PTR [ebp-0x4],edx
6401f470:	not    edi
6401f472:	mov    ebx,DWORD PTR [ebp+0x8]
6401f475:	lea    ebx,[ebp+ebx*4-0x20]
6401f479:	mov    esi,DWORD PTR [ebx]
6401f47b:	mov    ecx,esi
6401f47d:	and    ecx,edi
6401f47f:	mov    DWORD PTR [ebp-0x10],ecx
6401f482:	mov    ecx,edx
6401f484:	shr    esi,cl
6401f486:	mov    ecx,DWORD PTR [ebp-0x4]
6401f489:	or     esi,DWORD PTR [ebp-0xc]
6401f48c:	mov    DWORD PTR [ebx],esi
6401f48e:	mov    esi,DWORD PTR [ebp-0x10]
6401f491:	shl    esi,cl
6401f493:	inc    DWORD PTR [ebp+0x8]
6401f496:	cmp    DWORD PTR [ebp+0x8],0x3
6401f49a:	mov    DWORD PTR [ebp-0xc],esi
6401f49d:	jl     0x6401f472
6401f49f:	mov    esi,eax
6401f4a1:	push   0x2
6401f4a3:	shl    esi,0x2
6401f4a6:	lea    ecx,[ebp-0x18]
6401f4a9:	pop    edx
6401f4aa:	sub    ecx,esi
6401f4ac:	cmp    edx,eax
6401f4ae:	jl     0x6401f4b8
6401f4b0:	mov    esi,DWORD PTR [ecx]
6401f4b2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f4b6:	jmp    0x6401f4bd
6401f4b8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f4bd:	dec    edx
6401f4be:	sub    ecx,0x4
6401f4c1:	test   edx,edx
6401f4c3:	jge    0x6401f4ac
6401f4c5:	mov    eax,ds:0x640385ac
6401f4ca:	mov    ecx,DWORD PTR ds:0x640385c0
6401f4d0:	lea    ebx,[ecx+eax*1]
6401f4d3:	xor    eax,eax
6401f4d5:	inc    eax
6401f4d6:	jmp    0x6401f576
6401f4db:	mov    eax,ds:0x640385c0
6401f4e0:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401f4e7:	add    ebx,eax
6401f4e9:	mov    eax,ecx
6401f4eb:	cdq    
6401f4ec:	and    edx,0x1f
6401f4ef:	add    eax,edx
6401f4f1:	mov    edx,ecx
6401f4f3:	sar    eax,0x5
6401f4f6:	and    edx,0x8000001f
6401f4fc:	jns    0x6401f503
6401f4fe:	dec    edx
6401f4ff:	or     edx,0xffffffe0
6401f502:	inc    edx
6401f503:	and    DWORD PTR [ebp-0xc],0x0
6401f507:	and    DWORD PTR [ebp+0x8],0x0
6401f50b:	or     esi,0xffffffff
6401f50e:	mov    ecx,edx
6401f510:	shl    esi,cl
6401f512:	mov    DWORD PTR [ebp-0x4],0x20
6401f519:	sub    DWORD PTR [ebp-0x4],edx
6401f51c:	not    esi
6401f51e:	mov    ecx,DWORD PTR [ebp+0x8]
6401f521:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401f525:	mov    ecx,edi
6401f527:	and    ecx,esi
6401f529:	mov    DWORD PTR [ebp-0x10],ecx
6401f52c:	mov    ecx,edx
6401f52e:	shr    edi,cl
6401f530:	mov    ecx,DWORD PTR [ebp+0x8]
6401f533:	or     edi,DWORD PTR [ebp-0xc]
6401f536:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401f53a:	mov    edi,DWORD PTR [ebp-0x10]
6401f53d:	mov    ecx,DWORD PTR [ebp-0x4]
6401f540:	shl    edi,cl
6401f542:	inc    DWORD PTR [ebp+0x8]
6401f545:	cmp    DWORD PTR [ebp+0x8],0x3
6401f549:	mov    DWORD PTR [ebp-0xc],edi
6401f54c:	jl     0x6401f51e
6401f54e:	mov    esi,eax
6401f550:	push   0x2
6401f552:	shl    esi,0x2
6401f555:	lea    ecx,[ebp-0x18]
6401f558:	pop    edx
6401f559:	sub    ecx,esi
6401f55b:	cmp    edx,eax
6401f55d:	jl     0x6401f567
6401f55f:	mov    esi,DWORD PTR [ecx]
6401f561:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f565:	jmp    0x6401f56c
6401f567:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f56c:	dec    edx
6401f56d:	sub    ecx,0x4
6401f570:	test   edx,edx
6401f572:	jge    0x6401f55b
6401f574:	xor    eax,eax
6401f576:	pop    esi
6401f577:	push   0x1f
6401f579:	pop    ecx
6401f57a:	sub    ecx,DWORD PTR ds:0x640385b8
6401f580:	shl    ebx,cl
6401f582:	mov    ecx,DWORD PTR [ebp-0x14]
6401f585:	neg    ecx
6401f587:	sbb    ecx,ecx
6401f589:	and    ecx,0x80000000
6401f58f:	or     ebx,ecx
6401f591:	mov    ecx,DWORD PTR ds:0x640385bc
6401f597:	or     ebx,DWORD PTR [ebp-0x20]
6401f59a:	cmp    ecx,0x40
6401f59d:	jne    0x6401f5ac
6401f59f:	mov    ecx,DWORD PTR [ebp+0xc]
6401f5a2:	mov    edx,DWORD PTR [ebp-0x1c]
6401f5a5:	mov    DWORD PTR [ecx+0x4],ebx
6401f5a8:	mov    DWORD PTR [ecx],edx
6401f5aa:	jmp    0x6401f5b6
6401f5ac:	cmp    ecx,0x20
6401f5af:	jne    0x6401f5b6
6401f5b1:	mov    ecx,DWORD PTR [ebp+0xc]
6401f5b4:	mov    DWORD PTR [ecx],ebx
6401f5b6:	pop    edi
6401f5b7:	pop    ebx
6401f5b8:	leave  
6401f5b9:	ret    
6401f5ba:	push   ebp
6401f5bb:	mov    ebp,esp
6401f5bd:	sub    esp,0x2c
6401f5c0:	mov    eax,DWORD PTR [ebp+0x8]
6401f5c3:	movzx  ecx,WORD PTR [eax+0xa]
6401f5c7:	push   ebx
6401f5c8:	mov    ebx,ecx
6401f5ca:	and    ecx,0x8000
6401f5d0:	mov    DWORD PTR [ebp-0x14],ecx
6401f5d3:	mov    ecx,DWORD PTR [eax+0x6]
6401f5d6:	mov    DWORD PTR [ebp-0x20],ecx
6401f5d9:	mov    ecx,DWORD PTR [eax+0x2]
6401f5dc:	movzx  eax,WORD PTR [eax]
6401f5df:	and    ebx,0x7fff
6401f5e5:	sub    ebx,0x3fff
6401f5eb:	shl    eax,0x10
6401f5ee:	cmp    ebx,0xffffc001
6401f5f4:	push   edi
6401f5f5:	mov    DWORD PTR [ebp-0x1c],ecx
6401f5f8:	mov    DWORD PTR [ebp-0x18],eax
6401f5fb:	jne    0x6401f624
6401f5fd:	xor    ebx,ebx
6401f5ff:	xor    eax,eax
6401f601:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f605:	jne    0x6401f614
6401f607:	inc    eax
6401f608:	cmp    eax,0x3
6401f60b:	jl     0x6401f601
6401f60d:	xor    eax,eax
6401f60f:	jmp    0x6401fab9
6401f614:	xor    eax,eax
6401f616:	lea    edi,[ebp-0x20]
6401f619:	stos   DWORD PTR es:[edi],eax
6401f61a:	stos   DWORD PTR es:[edi],eax
6401f61b:	push   0x2
6401f61d:	stos   DWORD PTR es:[edi],eax
6401f61e:	pop    eax
6401f61f:	jmp    0x6401fab9
6401f624:	and    DWORD PTR [ebp+0x8],0x0
6401f628:	push   esi
6401f629:	lea    esi,[ebp-0x20]
6401f62c:	lea    edi,[ebp-0x2c]
6401f62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f632:	mov    esi,DWORD PTR ds:0x640385cc
6401f638:	dec    esi
6401f639:	lea    ecx,[esi+0x1]
6401f63c:	mov    eax,ecx
6401f63e:	cdq    
6401f63f:	and    edx,0x1f
6401f642:	add    eax,edx
6401f644:	sar    eax,0x5
6401f647:	mov    edx,ecx
6401f649:	and    edx,0x8000001f
6401f64f:	mov    DWORD PTR [ebp-0x10],ebx
6401f652:	mov    DWORD PTR [ebp-0xc],eax
6401f655:	jns    0x6401f65c
6401f657:	dec    edx
6401f658:	or     edx,0xffffffe0
6401f65b:	inc    edx
6401f65c:	lea    edi,[ebp+eax*4-0x20]
6401f660:	push   0x1f
6401f662:	xor    eax,eax
6401f664:	pop    ecx
6401f665:	sub    ecx,edx
6401f667:	inc    eax
6401f668:	shl    eax,cl
6401f66a:	mov    DWORD PTR [ebp-0x8],ecx
6401f66d:	test   DWORD PTR [edi],eax
6401f66f:	je     0x6401f702
6401f675:	mov    eax,DWORD PTR [ebp-0xc]
6401f678:	or     edx,0xffffffff
6401f67b:	shl    edx,cl
6401f67d:	not    edx
6401f67f:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f683:	jmp    0x6401f68a
6401f685:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f68a:	jne    0x6401f694
6401f68c:	inc    eax
6401f68d:	cmp    eax,0x3
6401f690:	jl     0x6401f685
6401f692:	jmp    0x6401f702
6401f694:	mov    eax,esi
6401f696:	cdq    
6401f697:	push   0x1f
6401f699:	pop    ecx
6401f69a:	and    edx,ecx
6401f69c:	add    eax,edx
6401f69e:	sar    eax,0x5
6401f6a1:	and    esi,0x8000001f
6401f6a7:	jns    0x6401f6ae
6401f6a9:	dec    esi
6401f6aa:	or     esi,0xffffffe0
6401f6ad:	inc    esi
6401f6ae:	and    DWORD PTR [ebp-0x4],0x0
6401f6b2:	sub    ecx,esi
6401f6b4:	xor    edx,edx
6401f6b6:	inc    edx
6401f6b7:	shl    edx,cl
6401f6b9:	lea    ecx,[ebp+eax*4-0x20]
6401f6bd:	mov    esi,DWORD PTR [ecx]
6401f6bf:	add    esi,edx
6401f6c1:	mov    DWORD PTR [ebp+0x8],esi
6401f6c4:	mov    esi,DWORD PTR [ecx]
6401f6c6:	cmp    DWORD PTR [ebp+0x8],esi
6401f6c9:	jb     0x6401f6ed
6401f6cb:	cmp    DWORD PTR [ebp+0x8],edx
6401f6ce:	jmp    0x6401f6eb
6401f6d0:	test   ecx,ecx
6401f6d2:	je     0x6401f6ff
6401f6d4:	and    DWORD PTR [ebp-0x4],0x0
6401f6d8:	lea    ecx,[ebp+eax*4-0x20]
6401f6dc:	mov    edx,DWORD PTR [ecx]
6401f6de:	lea    esi,[edx+0x1]
6401f6e1:	cmp    esi,edx
6401f6e3:	mov    DWORD PTR [ebp+0x8],esi
6401f6e6:	jb     0x6401f6ed
6401f6e8:	cmp    esi,0x1
6401f6eb:	jae    0x6401f6f4
6401f6ed:	mov    DWORD PTR [ebp-0x4],0x1
6401f6f4:	dec    eax
6401f6f5:	mov    edx,DWORD PTR [ebp+0x8]
6401f6f8:	mov    DWORD PTR [ecx],edx
6401f6fa:	mov    ecx,DWORD PTR [ebp-0x4]
6401f6fd:	jns    0x6401f6d0
6401f6ff:	mov    DWORD PTR [ebp+0x8],ecx
6401f702:	mov    ecx,DWORD PTR [ebp-0x8]
6401f705:	or     eax,0xffffffff
6401f708:	shl    eax,cl
6401f70a:	and    DWORD PTR [edi],eax
6401f70c:	mov    eax,DWORD PTR [ebp-0xc]
6401f70f:	inc    eax
6401f710:	cmp    eax,0x3
6401f713:	jge    0x6401f722
6401f715:	push   0x3
6401f717:	pop    ecx
6401f718:	lea    edi,[ebp+eax*4-0x20]
6401f71c:	sub    ecx,eax
6401f71e:	xor    eax,eax
6401f720:	rep stos DWORD PTR es:[edi],eax
6401f722:	cmp    DWORD PTR [ebp+0x8],0x0
6401f726:	je     0x6401f729
6401f728:	inc    ebx
6401f729:	mov    eax,ds:0x640385c8
6401f72e:	mov    ecx,eax
6401f730:	sub    ecx,DWORD PTR ds:0x640385cc
6401f736:	cmp    ebx,ecx
6401f738:	jge    0x6401f747
6401f73a:	xor    eax,eax
6401f73c:	lea    edi,[ebp-0x20]
6401f73f:	stos   DWORD PTR es:[edi],eax
6401f740:	stos   DWORD PTR es:[edi],eax
6401f741:	stos   DWORD PTR es:[edi],eax
6401f742:	jmp    0x6401f954
6401f747:	cmp    ebx,eax
6401f749:	jg     0x6401f95e
6401f74f:	sub    eax,DWORD PTR [ebp-0x10]
6401f752:	lea    esi,[ebp-0x2c]
6401f755:	mov    ecx,eax
6401f757:	lea    edi,[ebp-0x20]
6401f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f75b:	cdq    
6401f75c:	and    edx,0x1f
6401f75f:	add    eax,edx
6401f761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f762:	mov    edx,ecx
6401f764:	sar    eax,0x5
6401f767:	and    edx,0x8000001f
6401f76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f76e:	jns    0x6401f775
6401f770:	dec    edx
6401f771:	or     edx,0xffffffe0
6401f774:	inc    edx
6401f775:	and    DWORD PTR [ebp-0xc],0x0
6401f779:	and    DWORD PTR [ebp+0x8],0x0
6401f77d:	or     edi,0xffffffff
6401f780:	mov    ecx,edx
6401f782:	shl    edi,cl
6401f784:	mov    DWORD PTR [ebp-0x4],0x20
6401f78b:	sub    DWORD PTR [ebp-0x4],edx
6401f78e:	not    edi
6401f790:	mov    ebx,DWORD PTR [ebp+0x8]
6401f793:	lea    ebx,[ebp+ebx*4-0x20]
6401f797:	mov    esi,DWORD PTR [ebx]
6401f799:	mov    ecx,esi
6401f79b:	and    ecx,edi
6401f79d:	mov    DWORD PTR [ebp-0x10],ecx
6401f7a0:	mov    ecx,edx
6401f7a2:	shr    esi,cl
6401f7a4:	mov    ecx,DWORD PTR [ebp-0x4]
6401f7a7:	or     esi,DWORD PTR [ebp-0xc]
6401f7aa:	mov    DWORD PTR [ebx],esi
6401f7ac:	mov    esi,DWORD PTR [ebp-0x10]
6401f7af:	shl    esi,cl
6401f7b1:	inc    DWORD PTR [ebp+0x8]
6401f7b4:	cmp    DWORD PTR [ebp+0x8],0x3
6401f7b8:	mov    DWORD PTR [ebp-0xc],esi
6401f7bb:	jl     0x6401f790
6401f7bd:	mov    esi,eax
6401f7bf:	push   0x2
6401f7c1:	shl    esi,0x2
6401f7c4:	lea    ecx,[ebp-0x18]
6401f7c7:	pop    edx
6401f7c8:	sub    ecx,esi
6401f7ca:	cmp    edx,eax
6401f7cc:	jl     0x6401f7d6
6401f7ce:	mov    esi,DWORD PTR [ecx]
6401f7d0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f7d4:	jmp    0x6401f7db
6401f7d6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f7db:	dec    edx
6401f7dc:	sub    ecx,0x4
6401f7df:	test   edx,edx
6401f7e1:	jge    0x6401f7ca
6401f7e3:	mov    esi,DWORD PTR ds:0x640385cc
6401f7e9:	dec    esi
6401f7ea:	lea    ecx,[esi+0x1]
6401f7ed:	mov    eax,ecx
6401f7ef:	cdq    
6401f7f0:	and    edx,0x1f
6401f7f3:	add    eax,edx
6401f7f5:	sar    eax,0x5
6401f7f8:	mov    edx,ecx
6401f7fa:	and    edx,0x8000001f
6401f800:	mov    DWORD PTR [ebp-0xc],eax
6401f803:	jns    0x6401f80a
6401f805:	dec    edx
6401f806:	or     edx,0xffffffe0
6401f809:	inc    edx
6401f80a:	push   0x1f
6401f80c:	pop    ecx
6401f80d:	sub    ecx,edx
6401f80f:	xor    edx,edx
6401f811:	inc    edx
6401f812:	shl    edx,cl
6401f814:	lea    ebx,[ebp+eax*4-0x20]
6401f818:	mov    DWORD PTR [ebp-0x10],ecx
6401f81b:	test   DWORD PTR [ebx],edx
6401f81d:	je     0x6401f8a5
6401f823:	or     edx,0xffffffff
6401f826:	shl    edx,cl
6401f828:	not    edx
6401f82a:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f82e:	jmp    0x6401f835
6401f830:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f835:	jne    0x6401f83f
6401f837:	inc    eax
6401f838:	cmp    eax,0x3
6401f83b:	jl     0x6401f830
6401f83d:	jmp    0x6401f8a5
6401f83f:	mov    eax,esi
6401f841:	cdq    
6401f842:	push   0x1f
6401f844:	pop    ecx
6401f845:	and    edx,ecx
6401f847:	add    eax,edx
6401f849:	sar    eax,0x5
6401f84c:	and    esi,0x8000001f
6401f852:	jns    0x6401f859
6401f854:	dec    esi
6401f855:	or     esi,0xffffffe0
6401f858:	inc    esi
6401f859:	and    DWORD PTR [ebp+0x8],0x0
6401f85d:	xor    edx,edx
6401f85f:	sub    ecx,esi
6401f861:	inc    edx
6401f862:	shl    edx,cl
6401f864:	lea    ecx,[ebp+eax*4-0x20]
6401f868:	mov    esi,DWORD PTR [ecx]
6401f86a:	lea    edi,[esi+edx*1]
6401f86d:	cmp    edi,esi
6401f86f:	jb     0x6401f875
6401f871:	cmp    edi,edx
6401f873:	jae    0x6401f87c
6401f875:	mov    DWORD PTR [ebp+0x8],0x1
6401f87c:	mov    DWORD PTR [ecx],edi
6401f87e:	mov    ecx,DWORD PTR [ebp+0x8]
6401f881:	jmp    0x6401f8a2
6401f883:	test   ecx,ecx
6401f885:	je     0x6401f8a5
6401f887:	lea    ecx,[ebp+eax*4-0x20]
6401f88b:	mov    edx,DWORD PTR [ecx]
6401f88d:	lea    esi,[edx+0x1]
6401f890:	xor    edi,edi
6401f892:	cmp    esi,edx
6401f894:	jb     0x6401f89b
6401f896:	cmp    esi,0x1
6401f899:	jae    0x6401f89e
6401f89b:	xor    edi,edi
6401f89d:	inc    edi
6401f89e:	mov    DWORD PTR [ecx],esi
6401f8a0:	mov    ecx,edi
6401f8a2:	dec    eax
6401f8a3:	jns    0x6401f883
6401f8a5:	mov    ecx,DWORD PTR [ebp-0x10]
6401f8a8:	or     eax,0xffffffff
6401f8ab:	shl    eax,cl
6401f8ad:	and    DWORD PTR [ebx],eax
6401f8af:	mov    eax,DWORD PTR [ebp-0xc]
6401f8b2:	inc    eax
6401f8b3:	cmp    eax,0x3
6401f8b6:	jge    0x6401f8c5
6401f8b8:	push   0x3
6401f8ba:	pop    ecx
6401f8bb:	lea    edi,[ebp+eax*4-0x20]
6401f8bf:	sub    ecx,eax
6401f8c1:	xor    eax,eax
6401f8c3:	rep stos DWORD PTR es:[edi],eax
6401f8c5:	mov    ecx,DWORD PTR ds:0x640385d0
6401f8cb:	inc    ecx
6401f8cc:	mov    eax,ecx
6401f8ce:	cdq    
6401f8cf:	and    edx,0x1f
6401f8d2:	add    eax,edx
6401f8d4:	mov    edx,ecx
6401f8d6:	sar    eax,0x5
6401f8d9:	and    edx,0x8000001f
6401f8df:	jns    0x6401f8e6
6401f8e1:	dec    edx
6401f8e2:	or     edx,0xffffffe0
6401f8e5:	inc    edx
6401f8e6:	and    DWORD PTR [ebp-0xc],0x0
6401f8ea:	and    DWORD PTR [ebp+0x8],0x0
6401f8ee:	or     edi,0xffffffff
6401f8f1:	mov    ecx,edx
6401f8f3:	shl    edi,cl
6401f8f5:	mov    DWORD PTR [ebp-0x4],0x20
6401f8fc:	sub    DWORD PTR [ebp-0x4],edx
6401f8ff:	not    edi
6401f901:	mov    ebx,DWORD PTR [ebp+0x8]
6401f904:	lea    ebx,[ebp+ebx*4-0x20]
6401f908:	mov    esi,DWORD PTR [ebx]
6401f90a:	mov    ecx,esi
6401f90c:	and    ecx,edi
6401f90e:	mov    DWORD PTR [ebp-0x10],ecx
6401f911:	mov    ecx,edx
6401f913:	shr    esi,cl
6401f915:	mov    ecx,DWORD PTR [ebp-0x4]
6401f918:	or     esi,DWORD PTR [ebp-0xc]
6401f91b:	mov    DWORD PTR [ebx],esi
6401f91d:	mov    esi,DWORD PTR [ebp-0x10]
6401f920:	shl    esi,cl
6401f922:	inc    DWORD PTR [ebp+0x8]
6401f925:	cmp    DWORD PTR [ebp+0x8],0x3
6401f929:	mov    DWORD PTR [ebp-0xc],esi
6401f92c:	jl     0x6401f901
6401f92e:	mov    esi,eax
6401f930:	push   0x2
6401f932:	shl    esi,0x2
6401f935:	lea    ecx,[ebp-0x18]
6401f938:	pop    edx
6401f939:	sub    ecx,esi
6401f93b:	cmp    edx,eax
6401f93d:	jl     0x6401f947
6401f93f:	mov    esi,DWORD PTR [ecx]
6401f941:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f945:	jmp    0x6401f94c
6401f947:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f94c:	dec    edx
6401f94d:	sub    ecx,0x4
6401f950:	test   edx,edx
6401f952:	jge    0x6401f93b
6401f954:	push   0x2
6401f956:	xor    ebx,ebx
6401f958:	pop    eax
6401f959:	jmp    0x6401fab8
6401f95e:	cmp    ebx,DWORD PTR ds:0x640385c4
6401f964:	mov    ecx,DWORD PTR ds:0x640385d0
6401f96a:	jl     0x6401fa1d
6401f970:	xor    eax,eax
6401f972:	lea    edi,[ebp-0x20]
6401f975:	stos   DWORD PTR es:[edi],eax
6401f976:	stos   DWORD PTR es:[edi],eax
6401f977:	stos   DWORD PTR es:[edi],eax
6401f978:	or     DWORD PTR [ebp-0x20],0x80000000
6401f97f:	mov    eax,ecx
6401f981:	cdq    
6401f982:	and    edx,0x1f
6401f985:	add    eax,edx
6401f987:	mov    edx,ecx
6401f989:	sar    eax,0x5
6401f98c:	and    edx,0x8000001f
6401f992:	jns    0x6401f999
6401f994:	dec    edx
6401f995:	or     edx,0xffffffe0
6401f998:	inc    edx
6401f999:	and    DWORD PTR [ebp-0xc],0x0
6401f99d:	and    DWORD PTR [ebp+0x8],0x0
6401f9a1:	or     edi,0xffffffff
6401f9a4:	mov    ecx,edx
6401f9a6:	shl    edi,cl
6401f9a8:	mov    DWORD PTR [ebp-0x4],0x20
6401f9af:	sub    DWORD PTR [ebp-0x4],edx
6401f9b2:	not    edi
6401f9b4:	mov    ebx,DWORD PTR [ebp+0x8]
6401f9b7:	lea    ebx,[ebp+ebx*4-0x20]
6401f9bb:	mov    esi,DWORD PTR [ebx]
6401f9bd:	mov    ecx,esi
6401f9bf:	and    ecx,edi
6401f9c1:	mov    DWORD PTR [ebp-0x10],ecx
6401f9c4:	mov    ecx,edx
6401f9c6:	shr    esi,cl
6401f9c8:	mov    ecx,DWORD PTR [ebp-0x4]
6401f9cb:	or     esi,DWORD PTR [ebp-0xc]
6401f9ce:	mov    DWORD PTR [ebx],esi
6401f9d0:	mov    esi,DWORD PTR [ebp-0x10]
6401f9d3:	shl    esi,cl
6401f9d5:	inc    DWORD PTR [ebp+0x8]
6401f9d8:	cmp    DWORD PTR [ebp+0x8],0x3
6401f9dc:	mov    DWORD PTR [ebp-0xc],esi
6401f9df:	jl     0x6401f9b4
6401f9e1:	mov    esi,eax
6401f9e3:	push   0x2
6401f9e5:	shl    esi,0x2
6401f9e8:	lea    ecx,[ebp-0x18]
6401f9eb:	pop    edx
6401f9ec:	sub    ecx,esi
6401f9ee:	cmp    edx,eax
6401f9f0:	jl     0x6401f9fa
6401f9f2:	mov    esi,DWORD PTR [ecx]
6401f9f4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f9f8:	jmp    0x6401f9ff
6401f9fa:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f9ff:	dec    edx
6401fa00:	sub    ecx,0x4
6401fa03:	test   edx,edx
6401fa05:	jge    0x6401f9ee
6401fa07:	mov    eax,ds:0x640385c4
6401fa0c:	mov    ecx,DWORD PTR ds:0x640385d8
6401fa12:	lea    ebx,[ecx+eax*1]
6401fa15:	xor    eax,eax
6401fa17:	inc    eax
6401fa18:	jmp    0x6401fab8
6401fa1d:	mov    eax,ds:0x640385d8
6401fa22:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401fa29:	add    ebx,eax
6401fa2b:	mov    eax,ecx
6401fa2d:	cdq    
6401fa2e:	and    edx,0x1f
6401fa31:	add    eax,edx
6401fa33:	mov    edx,ecx
6401fa35:	sar    eax,0x5
6401fa38:	and    edx,0x8000001f
6401fa3e:	jns    0x6401fa45
6401fa40:	dec    edx
6401fa41:	or     edx,0xffffffe0
6401fa44:	inc    edx
6401fa45:	and    DWORD PTR [ebp-0xc],0x0
6401fa49:	and    DWORD PTR [ebp+0x8],0x0
6401fa4d:	or     esi,0xffffffff
6401fa50:	mov    ecx,edx
6401fa52:	shl    esi,cl
6401fa54:	mov    DWORD PTR [ebp-0x4],0x20
6401fa5b:	sub    DWORD PTR [ebp-0x4],edx
6401fa5e:	not    esi
6401fa60:	mov    ecx,DWORD PTR [ebp+0x8]
6401fa63:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401fa67:	mov    ecx,edi
6401fa69:	and    ecx,esi
6401fa6b:	mov    DWORD PTR [ebp-0x10],ecx
6401fa6e:	mov    ecx,edx
6401fa70:	shr    edi,cl
6401fa72:	mov    ecx,DWORD PTR [ebp+0x8]
6401fa75:	or     edi,DWORD PTR [ebp-0xc]
6401fa78:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401fa7c:	mov    edi,DWORD PTR [ebp-0x10]
6401fa7f:	mov    ecx,DWORD PTR [ebp-0x4]
6401fa82:	shl    edi,cl
6401fa84:	inc    DWORD PTR [ebp+0x8]
6401fa87:	cmp    DWORD PTR [ebp+0x8],0x3
6401fa8b:	mov    DWORD PTR [ebp-0xc],edi
6401fa8e:	jl     0x6401fa60
6401fa90:	mov    esi,eax
6401fa92:	push   0x2
6401fa94:	shl    esi,0x2
6401fa97:	lea    ecx,[ebp-0x18]
6401fa9a:	pop    edx
6401fa9b:	sub    ecx,esi
6401fa9d:	cmp    edx,eax
6401fa9f:	jl     0x6401faa9
6401faa1:	mov    esi,DWORD PTR [ecx]
6401faa3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401faa7:	jmp    0x6401faae
6401faa9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401faae:	dec    edx
6401faaf:	sub    ecx,0x4
6401fab2:	test   edx,edx
6401fab4:	jge    0x6401fa9d
6401fab6:	xor    eax,eax
6401fab8:	pop    esi
6401fab9:	push   0x1f
6401fabb:	pop    ecx
6401fabc:	sub    ecx,DWORD PTR ds:0x640385d0
6401fac2:	shl    ebx,cl
6401fac4:	mov    ecx,DWORD PTR [ebp-0x14]
6401fac7:	neg    ecx
6401fac9:	sbb    ecx,ecx
6401facb:	and    ecx,0x80000000
6401fad1:	or     ebx,ecx
6401fad3:	mov    ecx,DWORD PTR ds:0x640385d4
6401fad9:	or     ebx,DWORD PTR [ebp-0x20]
6401fadc:	cmp    ecx,0x40
6401fadf:	jne    0x6401faee
6401fae1:	mov    ecx,DWORD PTR [ebp+0xc]
6401fae4:	mov    edx,DWORD PTR [ebp-0x1c]
6401fae7:	mov    DWORD PTR [ecx+0x4],ebx
6401faea:	mov    DWORD PTR [ecx],edx
6401faec:	jmp    0x6401faf8
6401faee:	cmp    ecx,0x20
6401faf1:	jne    0x6401faf8
6401faf3:	mov    ecx,DWORD PTR [ebp+0xc]
6401faf6:	mov    DWORD PTR [ecx],ebx
6401faf8:	pop    edi
6401faf9:	pop    ebx
6401fafa:	leave  
6401fafb:	ret    
6401fafc:	push   ebp
6401fafd:	mov    ebp,esp
6401faff:	sub    esp,0x10
6401fb02:	mov    eax,ds:0x64037644
6401fb07:	xor    eax,ebp
6401fb09:	mov    DWORD PTR [ebp-0x4],eax
6401fb0c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401fb10:	push   ebx
6401fb11:	push   esi
6401fb12:	push   edi
6401fb13:	jge    0x6401fb1c
6401fb15:	xor    eax,eax
6401fb17:	jmp    0x6401fd0e
6401fb1c:	mov    eax,ds:0x640398a0
6401fb21:	mov    esi,DWORD PTR ds:0x64024110
6401fb27:	xor    ebx,ebx
6401fb29:	xor    edi,edi
6401fb2b:	inc    ebx
6401fb2c:	cmp    eax,edi
6401fb2e:	jne    0x6401fb63
6401fb30:	lea    eax,[ebp-0x8]
6401fb33:	push   eax
6401fb34:	push   ebx
6401fb35:	push   0x640299ac
6401fb3a:	push   ebx
6401fb3b:	call   esi
6401fb3d:	test   eax,eax
6401fb3f:	je     0x6401fb49
6401fb41:	mov    DWORD PTR ds:0x640398a0,ebx
6401fb47:	jmp    0x6401fb67
6401fb49:	call   DWORD PTR ds:0x64024068
6401fb4f:	cmp    eax,0x78
6401fb52:	jne    0x6401fb5e
6401fb54:	push   0x2
6401fb56:	pop    eax
6401fb57:	mov    ds:0x640398a0,eax
6401fb5c:	jmp    0x6401fb63
6401fb5e:	mov    eax,ds:0x640398a0
6401fb63:	cmp    eax,ebx
6401fb65:	jne    0x6401fb7a
6401fb67:	push   DWORD PTR [ebp+0x18]
6401fb6a:	push   DWORD PTR [ebp+0x14]
6401fb6d:	push   DWORD PTR [ebp+0x10]
6401fb70:	push   DWORD PTR [ebp+0xc]
6401fb73:	call   esi
6401fb75:	jmp    0x6401fd0e
6401fb7a:	cmp    eax,0x2
6401fb7d:	je     0x6401fb83
6401fb7f:	cmp    eax,edi
6401fb81:	jne    0x6401fb15
6401fb83:	cmp    DWORD PTR [ebp+0x20],edi
6401fb86:	mov    DWORD PTR [ebp-0xc],edi
6401fb89:	jne    0x6401fb96
6401fb8b:	mov    eax,DWORD PTR [ebp+0x8]
6401fb8e:	mov    eax,DWORD PTR [eax]
6401fb90:	mov    eax,DWORD PTR [eax+0x14]
6401fb93:	mov    DWORD PTR [ebp+0x20],eax
6401fb96:	cmp    DWORD PTR [ebp+0x1c],edi
6401fb99:	jne    0x6401fba6
6401fb9b:	mov    eax,DWORD PTR [ebp+0x8]
6401fb9e:	mov    eax,DWORD PTR [eax]
6401fba0:	mov    eax,DWORD PTR [eax+0x4]
6401fba3:	mov    DWORD PTR [ebp+0x1c],eax
6401fba6:	push   DWORD PTR [ebp+0x20]
6401fba9:	call   0x6401e020
6401fbae:	cmp    DWORD PTR [ebp+0x1c],eax
6401fbb1:	pop    ecx
6401fbb2:	je     0x6401fbbc
6401fbb4:	cmp    eax,0xffffffff
6401fbb7:	je     0x6401fbbc
6401fbb9:	mov    DWORD PTR [ebp+0x1c],eax
6401fbbc:	mov    ebx,DWORD PTR ds:0x64024010
6401fbc2:	push   edi
6401fbc3:	push   edi
6401fbc4:	push   edi
6401fbc5:	push   edi
6401fbc6:	push   DWORD PTR [ebp+0x14]
6401fbc9:	push   DWORD PTR [ebp+0x10]
6401fbcc:	push   edi
6401fbcd:	push   DWORD PTR [ebp+0x1c]
6401fbd0:	call   ebx
6401fbd2:	mov    esi,eax
6401fbd4:	cmp    esi,edi
6401fbd6:	mov    DWORD PTR [ebp-0x10],esi
6401fbd9:	je     0x6401fb15
6401fbdf:	jle    0x6401fc1c
6401fbe1:	cmp    esi,0xffffffe0
6401fbe4:	ja     0x6401fc1c
6401fbe6:	lea    eax,[esi+0x8]
6401fbe9:	cmp    eax,0x400
6401fbee:	ja     0x6401fc03
6401fbf0:	call   0x64013ce0
6401fbf5:	mov    eax,esp
6401fbf7:	cmp    eax,edi
6401fbf9:	je     0x6401fc17
6401fbfb:	mov    DWORD PTR [eax],0xcccc
6401fc01:	jmp    0x6401fc14
6401fc03:	push   eax
6401fc04:	call   0x6401487e
6401fc09:	cmp    eax,edi
6401fc0b:	pop    ecx
6401fc0c:	je     0x6401fc17
6401fc0e:	mov    DWORD PTR [eax],0xdddd
6401fc14:	add    eax,0x8
6401fc17:	mov    DWORD PTR [ebp-0x8],eax
6401fc1a:	jmp    0x6401fc1f
6401fc1c:	mov    DWORD PTR [ebp-0x8],edi
6401fc1f:	cmp    DWORD PTR [ebp-0x8],edi
6401fc22:	je     0x6401fb15
6401fc28:	push   esi
6401fc29:	push   edi
6401fc2a:	push   DWORD PTR [ebp-0x8]
6401fc2d:	call   0x64015120
6401fc32:	add    esp,0xc
6401fc35:	push   edi
6401fc36:	push   edi
6401fc37:	push   esi
6401fc38:	push   DWORD PTR [ebp-0x8]
6401fc3b:	push   DWORD PTR [ebp+0x14]
6401fc3e:	push   DWORD PTR [ebp+0x10]
6401fc41:	push   edi
6401fc42:	push   DWORD PTR [ebp+0x1c]
6401fc45:	call   ebx
6401fc47:	test   eax,eax
6401fc49:	je     0x6401fd02
6401fc4f:	lea    eax,[esi+0x1]
6401fc52:	cmp    eax,edi
6401fc54:	jle    0x6401fc9a
6401fc56:	cmp    eax,0x7ffffff0
6401fc5b:	ja     0x6401fc9a
6401fc5d:	lea    eax,[esi+esi*1+0xa]
6401fc61:	cmp    eax,0x400
6401fc66:	ja     0x6401fc82
6401fc68:	call   0x64013ce0
6401fc6d:	mov    ebx,esp
6401fc6f:	cmp    ebx,edi
6401fc71:	je     0x6401fd02
6401fc77:	mov    DWORD PTR [ebx],0xcccc
6401fc7d:	add    ebx,0x8
6401fc80:	jmp    0x6401fc9c
6401fc82:	push   eax
6401fc83:	call   0x6401487e
6401fc88:	cmp    eax,edi
6401fc8a:	pop    ecx
6401fc8b:	je     0x6401fc96
6401fc8d:	mov    DWORD PTR [eax],0xdddd
6401fc93:	add    eax,0x8
6401fc96:	mov    ebx,eax
6401fc98:	jmp    0x6401fc9c
6401fc9a:	xor    ebx,ebx
6401fc9c:	cmp    ebx,edi
6401fc9e:	je     0x6401fd02
6401fca0:	cmp    DWORD PTR [ebp+0x20],edi
6401fca3:	jne    0x6401fcb0
6401fca5:	mov    eax,DWORD PTR [ebp+0x8]
6401fca8:	mov    eax,DWORD PTR [eax]
6401fcaa:	mov    eax,DWORD PTR [eax+0x14]
6401fcad:	mov    DWORD PTR [ebp+0x20],eax
6401fcb0:	mov    edi,DWORD PTR [ebp+0x14]
6401fcb3:	push   ebx
6401fcb4:	push   DWORD PTR [ebp-0x10]
6401fcb7:	add    edi,edi
6401fcb9:	push   DWORD PTR [ebp-0x8]
6401fcbc:	lea    esi,[edi+ebx*1]
6401fcbf:	push   DWORD PTR [ebp+0xc]
6401fcc2:	or     WORD PTR [esi],0xffff
6401fcc7:	push   DWORD PTR [ebp+0x20]
6401fcca:	or     WORD PTR [esi-0x2],0xffff
6401fcd0:	call   DWORD PTR ds:0x6402410c
6401fcd6:	cmp    WORD PTR [esi-0x2],0xffff
6401fcdc:	mov    DWORD PTR [ebp-0xc],eax
6401fcdf:	je     0x6401fcf7
6401fce1:	cmp    WORD PTR [esi],0xffff
6401fce6:	jne    0x6401fcf7
6401fce8:	push   edi
6401fce9:	push   ebx
6401fcea:	push   DWORD PTR [ebp+0x18]
6401fced:	call   0x640164d0
6401fcf2:	add    esp,0xc
6401fcf5:	jmp    0x6401fcfb
6401fcf7:	and    DWORD PTR [ebp-0xc],0x0
6401fcfb:	push   ebx
6401fcfc:	call   0x640142ca
6401fd01:	pop    ecx
6401fd02:	push   DWORD PTR [ebp-0x8]
6401fd05:	call   0x640142ca
6401fd0a:	mov    eax,DWORD PTR [ebp-0xc]
6401fd0d:	pop    ecx
6401fd0e:	lea    esp,[ebp-0x1c]
6401fd11:	pop    edi
6401fd12:	pop    esi
6401fd13:	pop    ebx
6401fd14:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd17:	xor    ecx,ebp
6401fd19:	call   0x64013cc6
6401fd1e:	leave  
6401fd1f:	ret    
6401fd20:	push   ebp
6401fd21:	mov    ebp,esp
6401fd23:	sub    esp,0x10
6401fd26:	push   DWORD PTR [ebp+0x8]
6401fd29:	lea    ecx,[ebp-0x10]
6401fd2c:	call   0x640142e5
6401fd31:	push   DWORD PTR [ebp+0x20]
6401fd34:	lea    eax,[ebp-0x10]
6401fd37:	push   DWORD PTR [ebp+0x1c]
6401fd3a:	push   DWORD PTR [ebp+0x18]
6401fd3d:	push   DWORD PTR [ebp+0x14]
6401fd40:	push   DWORD PTR [ebp+0x10]
6401fd43:	push   DWORD PTR [ebp+0xc]
6401fd46:	push   eax
6401fd47:	call   0x6401fafc
6401fd4c:	add    esp,0x1c
6401fd4f:	cmp    BYTE PTR [ebp-0x4],0x0
6401fd53:	je     0x6401fd5c
6401fd55:	mov    ecx,DWORD PTR [ebp-0x8]
6401fd58:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401fd5c:	leave  
6401fd5d:	ret    
6401fd5e:	push   ebp
6401fd5f:	mov    ebp,esp
6401fd61:	sub    esp,0x10
6401fd64:	push   esi
6401fd65:	push   DWORD PTR [ebp+0xc]
6401fd68:	lea    ecx,[ebp-0x10]
6401fd6b:	call   0x640142e5
6401fd70:	mov    esi,DWORD PTR [ebp+0x8]
6401fd73:	movsx  eax,BYTE PTR [esi]
6401fd76:	push   eax
6401fd77:	call   0x64014d8c
6401fd7c:	cmp    eax,0x65
6401fd7f:	jmp    0x6401fd8d
6401fd81:	inc    esi
6401fd82:	movzx  eax,BYTE PTR [esi]
6401fd85:	push   eax
6401fd86:	call   0x64014756
6401fd8b:	test   eax,eax
6401fd8d:	pop    ecx
6401fd8e:	jne    0x6401fd81
6401fd90:	movsx  eax,BYTE PTR [esi]
6401fd93:	push   eax
6401fd94:	call   0x64014d8c
6401fd99:	cmp    eax,0x78
6401fd9c:	pop    ecx
6401fd9d:	jne    0x6401fda1
6401fd9f:	inc    esi
6401fda0:	inc    esi
6401fda1:	mov    ecx,DWORD PTR [ebp-0x10]
6401fda4:	mov    ecx,DWORD PTR [ecx+0xbc]
6401fdaa:	mov    ecx,DWORD PTR [ecx]
6401fdac:	mov    al,BYTE PTR [esi]
6401fdae:	mov    cl,BYTE PTR [ecx]
6401fdb0:	mov    BYTE PTR [esi],cl
6401fdb2:	inc    esi
6401fdb3:	mov    cl,BYTE PTR [esi]
6401fdb5:	mov    BYTE PTR [esi],al
6401fdb7:	mov    al,cl
6401fdb9:	mov    cl,BYTE PTR [esi]
6401fdbb:	inc    esi
6401fdbc:	test   cl,cl
6401fdbe:	jne    0x6401fdb3
6401fdc0:	cmp    BYTE PTR [ebp-0x4],cl
6401fdc3:	pop    esi
6401fdc4:	je     0x6401fdcd
6401fdc6:	mov    eax,DWORD PTR [ebp-0x8]
6401fdc9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fdcd:	leave  
6401fdce:	ret    
6401fdcf:	push   ebp
6401fdd0:	mov    ebp,esp
6401fdd2:	sub    esp,0x10
6401fdd5:	push   esi
6401fdd6:	push   DWORD PTR [ebp+0xc]
6401fdd9:	lea    ecx,[ebp-0x10]
6401fddc:	call   0x640142e5
6401fde1:	mov    eax,DWORD PTR [ebp+0x8]
6401fde4:	mov    cl,BYTE PTR [eax]
6401fde6:	test   cl,cl
6401fde8:	mov    esi,DWORD PTR [ebp-0x10]
6401fdeb:	je     0x6401fe02
6401fded:	mov    edx,DWORD PTR [esi+0xbc]
6401fdf3:	mov    edx,DWORD PTR [edx]
6401fdf5:	mov    dl,BYTE PTR [edx]
6401fdf7:	cmp    cl,dl
6401fdf9:	je     0x6401fe02
6401fdfb:	inc    eax
6401fdfc:	mov    cl,BYTE PTR [eax]
6401fdfe:	test   cl,cl
6401fe00:	jne    0x6401fdf7
6401fe02:	mov    cl,BYTE PTR [eax]
6401fe04:	inc    eax
6401fe05:	test   cl,cl
6401fe07:	je     0x6401fe3f
6401fe09:	jmp    0x6401fe16
6401fe0b:	cmp    cl,0x65
6401fe0e:	je     0x6401fe1c
6401fe10:	cmp    cl,0x45
6401fe13:	je     0x6401fe1c
6401fe15:	inc    eax
6401fe16:	mov    cl,BYTE PTR [eax]
6401fe18:	test   cl,cl
6401fe1a:	jne    0x6401fe0b
6401fe1c:	mov    edx,eax
6401fe1e:	dec    eax
6401fe1f:	cmp    BYTE PTR [eax],0x30
6401fe22:	je     0x6401fe1e
6401fe24:	mov    ecx,DWORD PTR [esi+0xbc]
6401fe2a:	mov    ecx,DWORD PTR [ecx]
6401fe2c:	push   ebx
6401fe2d:	mov    bl,BYTE PTR [eax]
6401fe2f:	cmp    bl,BYTE PTR [ecx]
6401fe31:	pop    ebx
6401fe32:	jne    0x6401fe35
6401fe34:	dec    eax
6401fe35:	mov    cl,BYTE PTR [edx]
6401fe37:	inc    eax
6401fe38:	inc    edx
6401fe39:	test   cl,cl
6401fe3b:	mov    BYTE PTR [eax],cl
6401fe3d:	jne    0x6401fe35
6401fe3f:	cmp    BYTE PTR [ebp-0x4],0x0
6401fe43:	pop    esi
6401fe44:	je     0x6401fe4d
6401fe46:	mov    eax,DWORD PTR [ebp-0x8]
6401fe49:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fe4d:	leave  
6401fe4e:	ret    
6401fe4f:	fldz   
6401fe51:	mov    eax,DWORD PTR [esp+0x4]
6401fe55:	fcomp  QWORD PTR [eax]
6401fe57:	fnstsw ax
6401fe59:	test   ah,0x41
6401fe5c:	jp     0x6401fe62
6401fe5e:	xor    eax,eax
6401fe60:	inc    eax
6401fe61:	ret    
6401fe62:	xor    eax,eax
6401fe64:	ret    
6401fe65:	push   ebp
6401fe66:	mov    ebp,esp
6401fe68:	push   ecx
6401fe69:	push   ecx
6401fe6a:	cmp    DWORD PTR [ebp+0x8],0x0
6401fe6e:	push   DWORD PTR [ebp+0x14]
6401fe71:	push   DWORD PTR [ebp+0x10]
6401fe74:	je     0x6401fe8f
6401fe76:	lea    eax,[ebp-0x8]
6401fe79:	push   eax
6401fe7a:	call   0x6402117b
6401fe7f:	mov    ecx,DWORD PTR [ebp-0x8]
6401fe82:	mov    eax,DWORD PTR [ebp+0xc]
6401fe85:	mov    DWORD PTR [eax],ecx
6401fe87:	mov    ecx,DWORD PTR [ebp-0x4]
6401fe8a:	mov    DWORD PTR [eax+0x4],ecx
6401fe8d:	jmp    0x6401fea0
6401fe8f:	lea    eax,[ebp+0x8]
6401fe92:	push   eax
6401fe93:	call   0x64021221
6401fe98:	mov    eax,DWORD PTR [ebp+0xc]
6401fe9b:	mov    ecx,DWORD PTR [ebp+0x8]
6401fe9e:	mov    DWORD PTR [eax],ecx
6401fea0:	add    esp,0xc
6401fea3:	leave  
6401fea4:	ret    
6401fea5:	push   0x0
6401fea7:	push   DWORD PTR [esp+0x10]
6401feab:	push   DWORD PTR [esp+0x10]
6401feaf:	push   DWORD PTR [esp+0x10]
6401feb3:	call   0x6401fe65
6401feb8:	add    esp,0x10
6401febb:	ret    
6401febc:	test   edi,edi
6401febe:	push   esi
6401febf:	mov    esi,eax
6401fec1:	je     0x6401fed7
6401fec3:	push   esi
6401fec4:	call   0x64015510
6401fec9:	inc    eax
6401feca:	push   eax
6401fecb:	push   esi
6401fecc:	add    esi,edi
6401fece:	push   esi
6401fecf:	call   0x640164d0
6401fed4:	add    esp,0x10
6401fed7:	pop    esi
6401fed8:	ret    
6401fed9:	push   0x0
6401fedb:	push   DWORD PTR [esp+0x8]
6401fedf:	call   0x6401fd5e
6401fee4:	pop    ecx
6401fee5:	pop    ecx
6401fee6:	ret    
6401fee7:	push   0x0
6401fee9:	push   DWORD PTR [esp+0x8]
6401feed:	call   0x6401fdcf
6401fef2:	pop    ecx
6401fef3:	pop    ecx
6401fef4:	ret    
6401fef5:	push   ebp
6401fef6:	mov    ebp,esp
6401fef8:	sub    esp,0x10
6401fefb:	push   ebx
6401fefc:	push   esi
6401fefd:	push   edi
6401fefe:	push   DWORD PTR [ebp+0x1c]
6401ff01:	lea    ecx,[ebp-0x10]
6401ff04:	mov    ebx,eax
6401ff06:	call   0x640142e5
6401ff0b:	xor    esi,esi
6401ff0d:	cmp    ebx,esi
6401ff0f:	jne    0x6401ff3c
6401ff11:	call   0x64016483
6401ff16:	push   0x16
6401ff18:	pop    edi
6401ff19:	push   esi
6401ff1a:	push   esi
6401ff1b:	push   esi
6401ff1c:	push   esi
6401ff1d:	push   esi
6401ff1e:	mov    DWORD PTR [eax],edi
6401ff20:	call   0x64013e12
6401ff25:	add    esp,0x14
6401ff28:	cmp    BYTE PTR [ebp-0x4],0x0
6401ff2c:	je     0x6401ff35
6401ff2e:	mov    eax,DWORD PTR [ebp-0x8]
6401ff31:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff35:	mov    eax,edi
6401ff37:	jmp    0x6402005d
6401ff3c:	cmp    DWORD PTR [ebp+0x8],esi
6401ff3f:	jbe    0x6401ff11
6401ff41:	cmp    DWORD PTR [ebp+0xc],esi
6401ff44:	jle    0x6401ff4b
6401ff46:	mov    eax,DWORD PTR [ebp+0xc]
6401ff49:	jmp    0x6401ff4d
6401ff4b:	xor    eax,eax
6401ff4d:	add    eax,0x9
6401ff50:	cmp    DWORD PTR [ebp+0x8],eax
6401ff53:	ja     0x6401ff5e
6401ff55:	call   0x64016483
6401ff5a:	push   0x22
6401ff5c:	jmp    0x6401ff18
6401ff5e:	cmp    BYTE PTR [ebp+0x18],0x0
6401ff62:	je     0x6401ff82
6401ff64:	mov    edx,DWORD PTR [ebp+0x14]
6401ff67:	xor    eax,eax
6401ff69:	cmp    DWORD PTR [ebp+0xc],esi
6401ff6c:	setg   al
6401ff6f:	xor    ecx,ecx
6401ff71:	cmp    DWORD PTR [edx],0x2d
6401ff74:	sete   cl
6401ff77:	mov    edi,eax
6401ff79:	add    ecx,ebx
6401ff7b:	mov    eax,ecx
6401ff7d:	call   0x6401febc
6401ff82:	mov    edi,DWORD PTR [ebp+0x14]
6401ff85:	cmp    DWORD PTR [edi],0x2d
6401ff88:	mov    esi,ebx
6401ff8a:	jne    0x6401ff92
6401ff8c:	mov    BYTE PTR [ebx],0x2d
6401ff8f:	lea    esi,[ebx+0x1]
6401ff92:	cmp    DWORD PTR [ebp+0xc],0x0
6401ff96:	jle    0x6401ffb0
6401ff98:	lea    eax,[esi+0x1]
6401ff9b:	mov    cl,BYTE PTR [eax]
6401ff9d:	mov    BYTE PTR [esi],cl
6401ff9f:	mov    esi,eax
6401ffa1:	mov    eax,DWORD PTR [ebp-0x10]
6401ffa4:	mov    eax,DWORD PTR [eax+0xbc]
6401ffaa:	mov    eax,DWORD PTR [eax]
6401ffac:	mov    al,BYTE PTR [eax]
6401ffae:	mov    BYTE PTR [esi],al
6401ffb0:	xor    eax,eax
6401ffb2:	cmp    BYTE PTR [ebp+0x18],al
6401ffb5:	sete   al
6401ffb8:	add    eax,DWORD PTR [ebp+0xc]
6401ffbb:	add    esi,eax
6401ffbd:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401ffc1:	jne    0x6401ffc8
6401ffc3:	or     ebx,0xffffffff
6401ffc6:	jmp    0x6401ffcd
6401ffc8:	sub    ebx,esi
6401ffca:	add    ebx,DWORD PTR [ebp+0x8]
6401ffcd:	push   0x640294e0
6401ffd2:	push   ebx
6401ffd3:	push   esi
6401ffd4:	call   0x640162e1
6401ffd9:	add    esp,0xc
6401ffdc:	xor    ebx,ebx
6401ffde:	test   eax,eax
6401ffe0:	je     0x6401ffef
6401ffe2:	push   ebx
6401ffe3:	push   ebx
6401ffe4:	push   ebx
6401ffe5:	push   ebx
6401ffe6:	push   ebx
6401ffe7:	call   0x64013d16
6401ffec:	add    esp,0x14
6401ffef:	cmp    DWORD PTR [ebp+0x10],ebx
6401fff2:	lea    ecx,[esi+0x2]
6401fff5:	je     0x6401fffa
6401fff7:	mov    BYTE PTR [esi],0x45
6401fffa:	mov    eax,DWORD PTR [edi+0xc]
6401fffd:	inc    esi
6401fffe:	cmp    BYTE PTR [eax],0x30
64020001:	je     0x64020031
64020003:	mov    eax,DWORD PTR [edi+0x4]
64020006:	dec    eax
64020007:	jns    0x6402000e
64020009:	neg    eax
6402000b:	mov    BYTE PTR [esi],0x2d
6402000e:	inc    esi
6402000f:	cmp    eax,0x64
64020012:	jl     0x6402001e
64020014:	cdq    
64020015:	push   0x64
64020017:	pop    edi
64020018:	idiv   edi
6402001a:	add    BYTE PTR [esi],al
6402001c:	mov    eax,edx
6402001e:	inc    esi
6402001f:	cmp    eax,0xa
64020022:	jl     0x6402002e
64020024:	cdq    
64020025:	push   0xa
64020027:	pop    edi
64020028:	idiv   edi
6402002a:	add    BYTE PTR [esi],al
6402002c:	mov    eax,edx
6402002e:	add    BYTE PTR [esi+0x1],al
64020031:	test   BYTE PTR ds:0x6403996c,0x1
64020038:	je     0x6402004e
6402003a:	cmp    BYTE PTR [ecx],0x30
6402003d:	jne    0x6402004e
6402003f:	push   0x3
64020041:	lea    eax,[ecx+0x1]
64020044:	push   eax
64020045:	push   ecx
64020046:	call   0x640164d0
6402004b:	add    esp,0xc
6402004e:	cmp    BYTE PTR [ebp-0x4],0x0
64020052:	je     0x6402005b
64020054:	mov    eax,DWORD PTR [ebp-0x8]
64020057:	and    DWORD PTR [eax+0x70],0xfffffffd
6402005b:	xor    eax,eax
6402005d:	pop    edi
6402005e:	pop    esi
6402005f:	pop    ebx
64020060:	leave  
64020061:	ret    
64020062:	push   ebp
64020063:	mov    ebp,esp
64020065:	sub    esp,0x2c
64020068:	mov    eax,ds:0x64037644
6402006d:	xor    eax,ebp
6402006f:	mov    DWORD PTR [ebp-0x4],eax
64020072:	mov    eax,DWORD PTR [ebp+0x8]
64020075:	push   ebx
64020076:	push   esi
64020077:	push   edi
64020078:	mov    edi,DWORD PTR [ebp+0xc]
6402007b:	push   0x16
6402007d:	pop    esi
6402007e:	push   esi
6402007f:	lea    ecx,[ebp-0x1c]
64020082:	push   ecx
64020083:	lea    ecx,[ebp-0x2c]
64020086:	push   ecx
64020087:	push   DWORD PTR [eax+0x4]
6402008a:	push   DWORD PTR [eax]
6402008c:	call   0x6402143f
64020091:	xor    ebx,ebx
64020093:	add    esp,0x14
64020096:	cmp    edi,ebx
64020098:	jne    0x640200b2
6402009a:	call   0x64016483
6402009f:	push   ebx
640200a0:	push   ebx
640200a1:	push   ebx
640200a2:	push   ebx
640200a3:	push   ebx
640200a4:	mov    DWORD PTR [eax],esi
640200a6:	call   0x64013e12
640200ab:	add    esp,0x14
640200ae:	mov    eax,esi
640200b0:	jmp    0x64020121
640200b2:	mov    eax,DWORD PTR [ebp+0x10]
640200b5:	cmp    eax,ebx
640200b7:	jbe    0x6402009a
640200b9:	cmp    eax,0xffffffff
640200bc:	mov    esi,DWORD PTR [ebp+0x14]
640200bf:	jne    0x640200c6
640200c1:	or     eax,0xffffffff
640200c4:	jmp    0x640200da
640200c6:	xor    ecx,ecx
640200c8:	cmp    DWORD PTR [ebp-0x2c],0x2d
640200cc:	sete   cl
640200cf:	sub    eax,ecx
640200d1:	xor    ecx,ecx
640200d3:	cmp    esi,ebx
640200d5:	setg   cl
640200d8:	sub    eax,ecx
640200da:	lea    ecx,[ebp-0x2c]
640200dd:	push   ecx
640200de:	lea    ecx,[esi+0x1]
640200e1:	push   ecx
640200e2:	push   eax
640200e3:	xor    eax,eax
640200e5:	cmp    DWORD PTR [ebp-0x2c],0x2d
640200e9:	sete   al
640200ec:	xor    ecx,ecx
640200ee:	cmp    esi,ebx
640200f0:	setg   cl
640200f3:	add    eax,edi
640200f5:	add    ecx,eax
640200f7:	push   ecx
640200f8:	call   0x640212c7
640200fd:	add    esp,0x10
64020100:	cmp    eax,ebx
64020102:	je     0x64020108
64020104:	mov    BYTE PTR [edi],bl
64020106:	jmp    0x64020121
64020108:	push   DWORD PTR [ebp+0x1c]
6402010b:	lea    eax,[ebp-0x2c]
6402010e:	push   ebx
6402010f:	push   eax
64020110:	push   DWORD PTR [ebp+0x18]
64020113:	mov    eax,edi
64020115:	push   esi
64020116:	push   DWORD PTR [ebp+0x10]
64020119:	call   0x6401fef5
6402011e:	add    esp,0x18
64020121:	mov    ecx,DWORD PTR [ebp-0x4]
64020124:	pop    edi
64020125:	pop    esi
64020126:	xor    ecx,ebp
64020128:	pop    ebx
64020129:	call   0x64013cc6
6402012e:	leave  
6402012f:	ret    
64020130:	push   ebp
64020131:	mov    ebp,esp
64020133:	push   0x0
64020135:	push   DWORD PTR [ebp+0x18]
64020138:	push   DWORD PTR [ebp+0x14]
6402013b:	push   DWORD PTR [ebp+0x10]
6402013e:	push   DWORD PTR [ebp+0xc]
64020141:	push   DWORD PTR [ebp+0x8]
64020144:	call   0x64020062
64020149:	add    esp,0x18
6402014c:	pop    ebp
6402014d:	ret    
6402014e:	push   ebp
6402014f:	mov    ebp,esp
64020151:	sub    esp,0x24
64020154:	push   esi
64020155:	push   edi
64020156:	push   DWORD PTR [ebp+0x1c]
64020159:	lea    ecx,[ebp-0x24]
6402015c:	mov    DWORD PTR [ebp-0x14],0x3ff
64020163:	xor    edi,edi
64020165:	mov    DWORD PTR [ebp-0x4],0x30
6402016c:	call   0x640142e5
64020171:	cmp    DWORD PTR [ebp+0x14],edi
64020174:	jge    0x64020179
64020176:	mov    DWORD PTR [ebp+0x14],edi
64020179:	mov    esi,DWORD PTR [ebp+0xc]
6402017c:	cmp    esi,edi
6402017e:	jne    0x640201ab
64020180:	call   0x64016483
64020185:	push   0x16
64020187:	pop    esi
64020188:	push   edi
64020189:	push   edi
6402018a:	push   edi
6402018b:	push   edi
6402018c:	push   edi
6402018d:	mov    DWORD PTR [eax],esi
6402018f:	call   0x64013e12
64020194:	add    esp,0x14
64020197:	cmp    BYTE PTR [ebp-0x18],0x0
6402019b:	je     0x640201a4
6402019d:	mov    eax,DWORD PTR [ebp-0x1c]
640201a0:	and    DWORD PTR [eax+0x70],0xfffffffd
640201a4:	mov    eax,esi
640201a6:	jmp    0x640204bb
640201ab:	cmp    DWORD PTR [ebp+0x10],edi
640201ae:	jbe    0x64020180
640201b0:	mov    eax,DWORD PTR [ebp+0x14]
640201b3:	add    eax,0xb
640201b6:	cmp    DWORD PTR [ebp+0x10],eax
640201b9:	mov    BYTE PTR [esi],0x0
640201bc:	ja     0x640201c7
640201be:	call   0x64016483
640201c3:	push   0x22
640201c5:	jmp    0x64020187
640201c7:	mov    edi,DWORD PTR [ebp+0x8]
640201ca:	mov    eax,DWORD PTR [edi]
640201cc:	mov    DWORD PTR [ebp-0xc],eax
640201cf:	mov    eax,DWORD PTR [edi+0x4]
640201d2:	mov    ecx,eax
640201d4:	shr    ecx,0x14
640201d7:	mov    edx,0x7ff
640201dc:	push   ebx
640201dd:	and    ecx,edx
640201df:	xor    ebx,ebx
640201e1:	cmp    ecx,edx
640201e3:	jne    0x64020279
640201e9:	test   ebx,ebx
640201eb:	jne    0x64020279
640201f1:	mov    eax,DWORD PTR [ebp+0x10]
640201f4:	cmp    eax,0xffffffff
640201f7:	jne    0x640201fd
640201f9:	or     eax,eax
640201fb:	jmp    0x64020200
640201fd:	add    eax,0xfffffffe
64020200:	push   0x0
64020202:	push   DWORD PTR [ebp+0x14]
64020205:	lea    ebx,[esi+0x2]
64020208:	push   eax
64020209:	push   ebx
6402020a:	push   edi
6402020b:	call   0x64020130
64020210:	add    esp,0x14
64020213:	test   eax,eax
64020215:	je     0x64020230
64020217:	cmp    BYTE PTR [ebp-0x18],0x0
6402021b:	mov    BYTE PTR [esi],0x0
6402021e:	je     0x640204ba
64020224:	mov    ecx,DWORD PTR [ebp-0x1c]
64020227:	and    DWORD PTR [ecx+0x70],0xfffffffd
6402022b:	jmp    0x640204ba
64020230:	cmp    BYTE PTR [ebx],0x2d
64020233:	jne    0x64020239
64020235:	mov    BYTE PTR [esi],0x2d
64020238:	inc    esi
64020239:	mov    BYTE PTR [esi],0x30
6402023c:	inc    esi
6402023d:	cmp    DWORD PTR [ebp+0x18],0x0
64020241:	push   0x65
64020243:	sete   al
64020246:	dec    al
64020248:	and    al,0xe0
6402024a:	add    al,0x78
6402024c:	mov    BYTE PTR [esi],al
6402024e:	inc    esi
6402024f:	push   esi
64020250:	call   0x6401bdf0
64020255:	test   eax,eax
64020257:	pop    ecx
64020258:	pop    ecx
64020259:	je     0x640204ab
6402025f:	cmp    DWORD PTR [ebp+0x18],0x0
64020263:	sete   cl
64020266:	dec    cl
64020268:	and    cl,0xe0
6402026b:	add    cl,0x70
6402026e:	mov    BYTE PTR [eax],cl
64020270:	mov    BYTE PTR [eax+0x3],0x0
64020274:	jmp    0x640204ab
64020279:	and    eax,0x80000000
6402027e:	xor    ecx,ecx
64020280:	or     ecx,eax
64020282:	je     0x64020288
64020284:	mov    BYTE PTR [esi],0x2d
64020287:	inc    esi
64020288:	mov    ebx,DWORD PTR [ebp+0x18]
6402028b:	mov    BYTE PTR [esi],0x30
6402028e:	inc    esi
6402028f:	test   ebx,ebx
64020291:	sete   al
64020294:	dec    al
64020296:	and    al,0xe0
64020298:	add    al,0x78
6402029a:	mov    BYTE PTR [esi],al
6402029c:	mov    ecx,DWORD PTR [edi+0x4]
6402029f:	inc    esi
640202a0:	neg    ebx
640202a2:	sbb    ebx,ebx
640202a4:	and    ebx,0xffffffe0
640202a7:	and    ecx,0x7ff00000
640202ad:	xor    eax,eax
640202af:	add    ebx,0x27
640202b2:	xor    edx,edx
640202b4:	or     eax,ecx
640202b6:	jne    0x640202d9
640202b8:	mov    BYTE PTR [esi],0x30
640202bb:	mov    ecx,DWORD PTR [edi+0x4]
640202be:	mov    eax,DWORD PTR [edi]
640202c0:	and    ecx,0xfffff
640202c6:	inc    esi
640202c7:	or     eax,ecx
640202c9:	jne    0x640202d0
640202cb:	mov    DWORD PTR [ebp-0x14],edx
640202ce:	jmp    0x640202dd
640202d0:	mov    DWORD PTR [ebp-0x14],0x3fe
640202d7:	jmp    0x640202dd
640202d9:	mov    BYTE PTR [esi],0x31
640202dc:	inc    esi
640202dd:	mov    eax,esi
640202df:	inc    esi
640202e0:	cmp    DWORD PTR [ebp+0x14],edx
640202e3:	mov    DWORD PTR [ebp+0xc],eax
640202e6:	jne    0x640202ec
640202e8:	mov    BYTE PTR [eax],dl
640202ea:	jmp    0x640202fb
640202ec:	mov    ecx,DWORD PTR [ebp-0x24]
640202ef:	mov    ecx,DWORD PTR [ecx+0xbc]
640202f5:	mov    ecx,DWORD PTR [ecx]
640202f7:	mov    cl,BYTE PTR [ecx]
640202f9:	mov    BYTE PTR [eax],cl
640202fb:	mov    ecx,DWORD PTR [edi+0x4]
640202fe:	mov    eax,DWORD PTR [edi]
64020300:	and    ecx,0xfffff
64020306:	mov    DWORD PTR [ebp-0x8],ecx
64020309:	ja     0x64020313
6402030b:	cmp    eax,edx
6402030d:	jbe    0x640203c8
64020313:	mov    DWORD PTR [ebp-0xc],edx
64020316:	mov    DWORD PTR [ebp-0x8],0xf0000
6402031d:	cmp    DWORD PTR [ebp+0x14],0x0
64020321:	jle    0x64020370
64020323:	mov    edx,DWORD PTR [edi+0x4]
64020326:	and    edx,DWORD PTR [ebp-0x8]
64020329:	mov    eax,DWORD PTR [edi]
6402032b:	movsx  ecx,WORD PTR [ebp-0x4]
6402032f:	and    eax,DWORD PTR [ebp-0xc]
64020332:	and    edx,0xfffff
64020338:	call   0x640215b0
6402033d:	add    ax,0x30
64020341:	movzx  eax,ax
64020344:	cmp    ax,0x39
64020348:	jbe    0x6402034c
6402034a:	add    eax,ebx
6402034c:	mov    ecx,DWORD PTR [ebp-0x8]
6402034f:	sub    DWORD PTR [ebp-0x4],0x4
64020353:	mov    BYTE PTR [esi],al
64020355:	mov    eax,DWORD PTR [ebp-0xc]
64020358:	shrd   eax,ecx,0x4
6402035c:	shr    ecx,0x4
6402035f:	inc    esi
64020360:	dec    DWORD PTR [ebp+0x14]
64020363:	cmp    WORD PTR [ebp-0x4],0x0
64020368:	mov    DWORD PTR [ebp-0xc],eax
6402036b:	mov    DWORD PTR [ebp-0x8],ecx
6402036e:	jge    0x6402031d
64020370:	cmp    WORD PTR [ebp-0x4],0x0
64020375:	jl     0x640203c8
64020377:	mov    edx,DWORD PTR [edi+0x4]
6402037a:	and    edx,DWORD PTR [ebp-0x8]
6402037d:	mov    eax,DWORD PTR [edi]
6402037f:	movsx  ecx,WORD PTR [ebp-0x4]
64020383:	and    eax,DWORD PTR [ebp-0xc]
64020386:	and    edx,0xfffff
6402038c:	call   0x640215b0
64020391:	cmp    ax,0x8
64020395:	jbe    0x640203c8
64020397:	lea    eax,[esi-0x1]
6402039a:	mov    cl,BYTE PTR [eax]
6402039c:	cmp    cl,0x66
6402039f:	je     0x640203a6
640203a1:	cmp    cl,0x46
640203a4:	jne    0x640203ac
640203a6:	mov    BYTE PTR [eax],0x30
640203a9:	dec    eax
640203aa:	jmp    0x6402039a
640203ac:	cmp    eax,DWORD PTR [ebp+0xc]
640203af:	je     0x640203c5
640203b1:	mov    cl,BYTE PTR [eax]
640203b3:	cmp    cl,0x39
640203b6:	jne    0x640203bf
640203b8:	add    bl,0x3a
640203bb:	mov    BYTE PTR [eax],bl
640203bd:	jmp    0x640203c8
640203bf:	inc    cl
640203c1:	mov    BYTE PTR [eax],cl
640203c3:	jmp    0x640203c8
640203c5:	inc    BYTE PTR [eax-0x1]
640203c8:	cmp    DWORD PTR [ebp+0x14],0x0
640203cc:	jle    0x640203df
640203ce:	push   DWORD PTR [ebp+0x14]
640203d1:	push   0x30
640203d3:	push   esi
640203d4:	call   0x64015120
640203d9:	add    esp,0xc
640203dc:	add    esi,DWORD PTR [ebp+0x14]
640203df:	mov    eax,DWORD PTR [ebp+0xc]
640203e2:	cmp    BYTE PTR [eax],0x0
640203e5:	jne    0x640203e9
640203e7:	mov    esi,eax
640203e9:	cmp    DWORD PTR [ebp+0x18],0x0
640203ed:	mov    cl,0x34
640203ef:	sete   al
640203f2:	dec    al
640203f4:	and    al,0xe0
640203f6:	add    al,0x70
640203f8:	mov    BYTE PTR [esi],al
640203fa:	mov    eax,DWORD PTR [edi]
640203fc:	mov    edx,DWORD PTR [edi+0x4]
640203ff:	inc    esi
64020400:	call   0x640215b0
64020405:	xor    ebx,ebx
64020407:	and    eax,0x7ff
6402040c:	and    edx,ebx
6402040e:	sub    eax,DWORD PTR [ebp-0x14]
64020411:	push   ebx
64020412:	pop    ecx
64020413:	sbb    edx,ecx
64020415:	js     0x64020423
64020417:	jg     0x6402041d
64020419:	cmp    eax,ebx
6402041b:	jb     0x64020423
6402041d:	mov    BYTE PTR [esi],0x2b
64020420:	inc    esi
64020421:	jmp    0x6402042d
64020423:	mov    BYTE PTR [esi],0x2d
64020426:	inc    esi
64020427:	neg    eax
64020429:	adc    edx,ebx
6402042b:	neg    edx
6402042d:	cmp    edx,ebx
6402042f:	mov    edi,esi
64020431:	mov    BYTE PTR [esi],0x30
64020434:	jl     0x6402045a
64020436:	mov    ecx,0x3e8
6402043b:	jg     0x64020441
6402043d:	cmp    eax,ecx
6402043f:	jb     0x6402045a
64020441:	push   ebx
64020442:	push   ecx
64020443:	push   edx
64020444:	push   eax
64020445:	call   0x640214d0
6402044a:	add    al,0x30
6402044c:	mov    BYTE PTR [esi],al
6402044e:	inc    esi
6402044f:	cmp    esi,edi
64020451:	mov    DWORD PTR [ebp-0x10],edx
64020454:	mov    eax,ecx
64020456:	mov    edx,ebx
64020458:	jne    0x64020465
6402045a:	test   edx,edx
6402045c:	jl     0x6402047c
6402045e:	jg     0x64020465
64020460:	cmp    eax,0x64
64020463:	jb     0x6402047c
64020465:	push   0x0
64020467:	push   0x64
64020469:	push   edx
6402046a:	push   eax
6402046b:	call   0x640214d0
64020470:	add    al,0x30
64020472:	mov    BYTE PTR [esi],al
64020474:	mov    DWORD PTR [ebp-0x10],edx
64020477:	inc    esi
64020478:	mov    eax,ecx
6402047a:	mov    edx,ebx
6402047c:	cmp    esi,edi
6402047e:	jne    0x6402048b
64020480:	test   edx,edx
64020482:	jl     0x640204a3
64020484:	jg     0x6402048b
64020486:	cmp    eax,0xa
64020489:	jb     0x640204a3
6402048b:	push   0x0
6402048d:	push   0xa
6402048f:	push   edx
64020490:	push   eax
64020491:	call   0x640214d0
64020496:	add    al,0x30
64020498:	mov    BYTE PTR [esi],al
6402049a:	mov    DWORD PTR [ebp-0x10],edx
6402049d:	inc    esi
6402049e:	mov    eax,ecx
640204a0:	mov    DWORD PTR [ebp-0x10],ebx
640204a3:	add    al,0x30
640204a5:	mov    BYTE PTR [esi],al
640204a7:	mov    BYTE PTR [esi+0x1],0x0
640204ab:	cmp    BYTE PTR [ebp-0x18],0x0
640204af:	je     0x640204b8
640204b1:	mov    eax,DWORD PTR [ebp-0x1c]
640204b4:	and    DWORD PTR [eax+0x70],0xfffffffd
640204b8:	xor    eax,eax
640204ba:	pop    ebx
640204bb:	pop    edi
640204bc:	pop    esi
640204bd:	leave  
640204be:	ret    
640204bf:	push   ebp
640204c0:	mov    ebp,esp
640204c2:	sub    esp,0x10
640204c5:	push   ebx
640204c6:	push   esi
640204c7:	push   edi
640204c8:	push   DWORD PTR [ebp+0x14]
640204cb:	mov    ebx,eax
640204cd:	mov    esi,DWORD PTR [ebx+0x4]
640204d0:	mov    edi,ecx
640204d2:	lea    ecx,[ebp-0x10]
640204d5:	dec    esi
640204d6:	call   0x640142e5
640204db:	test   edi,edi
640204dd:	jne    0x6402050c
640204df:	call   0x64016483
640204e4:	push   0x16
640204e6:	pop    esi
640204e7:	mov    DWORD PTR [eax],esi
640204e9:	xor    eax,eax
640204eb:	push   eax
640204ec:	push   eax
640204ed:	push   eax
640204ee:	push   eax
640204ef:	push   eax
640204f0:	call   0x64013e12
640204f5:	add    esp,0x14
640204f8:	cmp    BYTE PTR [ebp-0x4],0x0
640204fc:	je     0x64020505
640204fe:	mov    eax,DWORD PTR [ebp-0x8]
64020501:	and    DWORD PTR [eax+0x70],0xfffffffd
64020505:	mov    eax,esi
64020507:	jmp    0x640205af
6402050c:	cmp    DWORD PTR [ebp+0x8],0x0
64020510:	jbe    0x640204df
64020512:	cmp    BYTE PTR [ebp+0x10],0x0
64020516:	je     0x64020530
64020518:	cmp    esi,DWORD PTR [ebp+0xc]
6402051b:	jne    0x64020530
6402051d:	xor    eax,eax
6402051f:	cmp    DWORD PTR [ebx],0x2d
64020522:	sete   al
64020525:	add    eax,esi
64020527:	add    eax,edi
64020529:	mov    BYTE PTR [eax],0x30
6402052c:	mov    BYTE PTR [eax+0x1],0x0
64020530:	cmp    DWORD PTR [ebx],0x2d
64020533:	mov    esi,edi
64020535:	jne    0x6402053d
64020537:	mov    BYTE PTR [edi],0x2d
6402053a:	lea    esi,[edi+0x1]
6402053d:	mov    eax,DWORD PTR [ebx+0x4]
64020540:	xor    edi,edi
64020542:	inc    edi
64020543:	test   eax,eax
64020545:	jg     0x64020554
64020547:	mov    eax,esi
64020549:	call   0x6401febc
6402054e:	mov    BYTE PTR [esi],0x30
64020551:	inc    esi
64020552:	jmp    0x64020556
64020554:	add    esi,eax
64020556:	cmp    DWORD PTR [ebp+0xc],0x0
6402055a:	jle    0x640205a0
6402055c:	mov    eax,esi
6402055e:	call   0x6401febc
64020563:	mov    eax,DWORD PTR [ebp-0x10]
64020566:	mov    eax,DWORD PTR [eax+0xbc]
6402056c:	mov    eax,DWORD PTR [eax]
6402056e:	mov    al,BYTE PTR [eax]
64020570:	mov    BYTE PTR [esi],al
64020572:	mov    ebx,DWORD PTR [ebx+0x4]
64020575:	inc    esi
64020576:	test   ebx,ebx
64020578:	jge    0x640205a0
6402057a:	neg    ebx
6402057c:	cmp    BYTE PTR [ebp+0x10],0x0
64020580:	jne    0x64020587
64020582:	cmp    DWORD PTR [ebp+0xc],ebx
64020585:	jl     0x6402058a
64020587:	mov    DWORD PTR [ebp+0xc],ebx
6402058a:	mov    edi,DWORD PTR [ebp+0xc]
6402058d:	mov    eax,esi
6402058f:	call   0x6401febc
64020594:	push   edi
64020595:	push   0x30
64020597:	push   esi
64020598:	call   0x64015120
6402059d:	add    esp,0xc
640205a0:	cmp    BYTE PTR [ebp-0x4],0x0
640205a4:	je     0x640205ad
640205a6:	mov    eax,DWORD PTR [ebp-0x8]
640205a9:	and    DWORD PTR [eax+0x70],0xfffffffd
640205ad:	xor    eax,eax
640205af:	pop    edi
640205b0:	pop    esi
640205b1:	pop    ebx
640205b2:	leave  
640205b3:	ret    
640205b4:	push   ebp
640205b5:	mov    ebp,esp
640205b7:	sub    esp,0x2c
640205ba:	mov    eax,ds:0x64037644
640205bf:	xor    eax,ebp
640205c1:	mov    DWORD PTR [ebp-0x4],eax
640205c4:	mov    eax,DWORD PTR [ebp+0x8]
640205c7:	push   ebx
640205c8:	push   esi
640205c9:	push   edi
640205ca:	mov    edi,DWORD PTR [ebp+0xc]
640205cd:	push   0x16
640205cf:	pop    esi
640205d0:	push   esi
640205d1:	lea    ecx,[ebp-0x1c]
640205d4:	push   ecx
640205d5:	lea    ecx,[ebp-0x2c]
640205d8:	push   ecx
640205d9:	push   DWORD PTR [eax+0x4]
640205dc:	push   DWORD PTR [eax]
640205de:	call   0x6402143f
640205e3:	xor    ebx,ebx
640205e5:	add    esp,0x14
640205e8:	cmp    edi,ebx
640205ea:	jne    0x64020604
640205ec:	call   0x64016483
640205f1:	push   ebx
640205f2:	push   ebx
640205f3:	push   ebx
640205f4:	push   ebx
640205f5:	push   ebx
640205f6:	mov    DWORD PTR [eax],esi
640205f8:	call   0x64013e12
640205fd:	add    esp,0x14
64020600:	mov    eax,esi
64020602:	jmp    0x6402065e
64020604:	mov    eax,DWORD PTR [ebp+0x10]
64020607:	cmp    eax,ebx
64020609:	jbe    0x640205ec
6402060b:	cmp    eax,0xffffffff
6402060e:	jne    0x64020614
64020610:	or     eax,eax
64020612:	jmp    0x6402061f
64020614:	xor    ecx,ecx
64020616:	cmp    DWORD PTR [ebp-0x2c],0x2d
6402061a:	sete   cl
6402061d:	sub    eax,ecx
6402061f:	mov    esi,DWORD PTR [ebp+0x14]
64020622:	lea    ecx,[ebp-0x2c]
64020625:	push   ecx
64020626:	mov    ecx,DWORD PTR [ebp-0x28]
64020629:	add    ecx,esi
6402062b:	push   ecx
6402062c:	push   eax
6402062d:	xor    eax,eax
6402062f:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020633:	sete   al
64020636:	add    eax,edi
64020638:	push   eax
64020639:	call   0x640212c7
6402063e:	add    esp,0x10
64020641:	cmp    eax,ebx
64020643:	je     0x64020649
64020645:	mov    BYTE PTR [edi],bl
64020647:	jmp    0x6402065e
64020649:	push   DWORD PTR [ebp+0x18]
6402064c:	lea    eax,[ebp-0x2c]
6402064f:	push   ebx
64020650:	push   esi
64020651:	push   DWORD PTR [ebp+0x10]
64020654:	mov    ecx,edi
64020656:	call   0x640204bf
6402065b:	add    esp,0x10
6402065e:	mov    ecx,DWORD PTR [ebp-0x4]
64020661:	pop    edi
64020662:	pop    esi
64020663:	xor    ecx,ebp
64020665:	pop    ebx
64020666:	call   0x64013cc6
6402066b:	leave  
6402066c:	ret    
6402066d:	push   ebp
6402066e:	mov    ebp,esp
64020670:	sub    esp,0x30
64020673:	mov    eax,ds:0x64037644
64020678:	xor    eax,ebp
6402067a:	mov    DWORD PTR [ebp-0x4],eax
6402067d:	mov    eax,DWORD PTR [ebp+0x8]
64020680:	push   ebx
64020681:	push   esi
64020682:	mov    esi,DWORD PTR [ebp+0xc]
64020685:	push   edi
64020686:	push   0x16
64020688:	pop    edi
64020689:	push   edi
6402068a:	lea    ecx,[ebp-0x1c]
6402068d:	push   ecx
6402068e:	lea    ecx,[ebp-0x30]
64020691:	push   ecx
64020692:	push   DWORD PTR [eax+0x4]
64020695:	push   DWORD PTR [eax]
64020697:	call   0x6402143f
6402069c:	xor    ebx,ebx
6402069e:	add    esp,0x14
640206a1:	cmp    esi,ebx
640206a3:	jne    0x640206c0
640206a5:	call   0x64016483
640206aa:	push   ebx
640206ab:	push   ebx
640206ac:	push   ebx
640206ad:	push   ebx
640206ae:	push   ebx
640206af:	mov    DWORD PTR [eax],edi
640206b1:	call   0x64013e12
640206b6:	add    esp,0x14
640206b9:	mov    eax,edi
640206bb:	jmp    0x64020756
640206c0:	mov    ecx,DWORD PTR [ebp+0x10]
640206c3:	cmp    ecx,ebx
640206c5:	jbe    0x640206a5
640206c7:	mov    eax,DWORD PTR [ebp-0x2c]
640206ca:	dec    eax
640206cb:	mov    DWORD PTR [ebp-0x20],eax
640206ce:	xor    eax,eax
640206d0:	cmp    DWORD PTR [ebp-0x30],0x2d
640206d4:	sete   al
640206d7:	cmp    ecx,0xffffffff
640206da:	lea    edi,[eax+esi*1]
640206dd:	jne    0x640206e3
640206df:	or     ecx,ecx
640206e1:	jmp    0x640206e5
640206e3:	sub    ecx,eax
640206e5:	lea    eax,[ebp-0x30]
640206e8:	push   eax
640206e9:	push   DWORD PTR [ebp+0x14]
640206ec:	push   ecx
640206ed:	push   edi
640206ee:	call   0x640212c7
640206f3:	add    esp,0x10
640206f6:	cmp    eax,ebx
640206f8:	je     0x640206fe
640206fa:	mov    BYTE PTR [esi],bl
640206fc:	jmp    0x64020756
640206fe:	mov    eax,DWORD PTR [ebp-0x2c]
64020701:	dec    eax
64020702:	cmp    DWORD PTR [ebp-0x20],eax
64020705:	setl   cl
64020708:	cmp    eax,0xfffffffc
6402070b:	jl     0x6402073a
6402070d:	cmp    eax,DWORD PTR [ebp+0x14]
64020710:	jge    0x6402073a
64020712:	cmp    cl,bl
64020714:	je     0x64020720
64020716:	mov    al,BYTE PTR [edi]
64020718:	inc    edi
64020719:	test   al,al
6402071b:	jne    0x64020716
6402071d:	mov    BYTE PTR [edi-0x2],bl
64020720:	push   DWORD PTR [ebp+0x1c]
64020723:	lea    eax,[ebp-0x30]
64020726:	push   0x1
64020728:	push   DWORD PTR [ebp+0x14]
6402072b:	mov    ecx,esi
6402072d:	push   DWORD PTR [ebp+0x10]
64020730:	call   0x640204bf
64020735:	add    esp,0x10
64020738:	jmp    0x64020756
6402073a:	push   DWORD PTR [ebp+0x1c]
6402073d:	lea    eax,[ebp-0x30]
64020740:	push   0x1
64020742:	push   eax
64020743:	push   DWORD PTR [ebp+0x18]
64020746:	mov    eax,esi
64020748:	push   DWORD PTR [ebp+0x14]
6402074b:	push   DWORD PTR [ebp+0x10]
6402074e:	call   0x6401fef5
64020753:	add    esp,0x18
64020756:	mov    ecx,DWORD PTR [ebp-0x4]
64020759:	pop    edi
6402075a:	pop    esi
6402075b:	xor    ecx,ebp
6402075d:	pop    ebx
6402075e:	call   0x64013cc6
64020763:	leave  
64020764:	ret    
64020765:	push   ebp
64020766:	mov    ebp,esp
64020768:	mov    eax,DWORD PTR [ebp+0x14]
6402076b:	cmp    eax,0x65
6402076e:	je     0x640207cf
64020770:	cmp    eax,0x45
64020773:	je     0x640207cf
64020775:	cmp    eax,0x66
64020778:	jne    0x64020793
6402077a:	push   DWORD PTR [ebp+0x20]
6402077d:	push   DWORD PTR [ebp+0x18]
64020780:	push   DWORD PTR [ebp+0x10]
64020783:	push   DWORD PTR [ebp+0xc]
64020786:	push   DWORD PTR [ebp+0x8]
64020789:	call   0x640205b4
6402078e:	add    esp,0x14
64020791:	pop    ebp
64020792:	ret    
64020793:	cmp    eax,0x61
64020796:	je     0x640207b6
64020798:	cmp    eax,0x41
6402079b:	je     0x640207b6
6402079d:	push   DWORD PTR [ebp+0x20]
640207a0:	push   DWORD PTR [ebp+0x1c]
640207a3:	push   DWORD PTR [ebp+0x18]
640207a6:	push   DWORD PTR [ebp+0x10]
640207a9:	push   DWORD PTR [ebp+0xc]
640207ac:	push   DWORD PTR [ebp+0x8]
640207af:	call   0x6402066d
640207b4:	jmp    0x640207e6
640207b6:	push   DWORD PTR [ebp+0x20]
640207b9:	push   DWORD PTR [ebp+0x1c]
640207bc:	push   DWORD PTR [ebp+0x18]
640207bf:	push   DWORD PTR [ebp+0x10]
640207c2:	push   DWORD PTR [ebp+0xc]
640207c5:	push   DWORD PTR [ebp+0x8]
640207c8:	call   0x6402014e
640207cd:	jmp    0x640207e6
640207cf:	push   DWORD PTR [ebp+0x20]
640207d2:	push   DWORD PTR [ebp+0x1c]
640207d5:	push   DWORD PTR [ebp+0x18]
640207d8:	push   DWORD PTR [ebp+0x10]
640207db:	push   DWORD PTR [ebp+0xc]
640207de:	push   DWORD PTR [ebp+0x8]
640207e1:	call   0x64020062
640207e6:	add    esp,0x18
640207e9:	pop    ebp
640207ea:	ret    
640207eb:	push   ebp
640207ec:	mov    ebp,esp
640207ee:	push   0x0
640207f0:	push   DWORD PTR [ebp+0x1c]
640207f3:	push   DWORD PTR [ebp+0x18]
640207f6:	push   DWORD PTR [ebp+0x14]
640207f9:	push   DWORD PTR [ebp+0x10]
640207fc:	push   DWORD PTR [ebp+0xc]
640207ff:	push   DWORD PTR [ebp+0x8]
64020802:	call   0x64020765
64020807:	add    esp,0x1c
6402080a:	pop    ebp
6402080b:	ret    
6402080c:	push   esi
6402080d:	push   0x30000
64020812:	push   0x10000
64020817:	xor    esi,esi
64020819:	push   esi
6402081a:	call   0x640215cf
6402081f:	add    esp,0xc
64020822:	test   eax,eax
64020824:	je     0x64020833
64020826:	push   esi
64020827:	push   esi
64020828:	push   esi
64020829:	push   esi
6402082a:	push   esi
6402082b:	call   0x64013d16
64020830:	add    esp,0x14
64020833:	pop    esi
64020834:	ret    
64020835:	push   ebp
64020836:	mov    ebp,esp
64020838:	sub    esp,0x18
6402083b:	fld    QWORD PTR ds:0x640294f0
64020841:	fstp   QWORD PTR [ebp-0x10]
64020844:	fld    QWORD PTR ds:0x640294e8
6402084a:	fstp   QWORD PTR [ebp-0x18]
6402084d:	fld    QWORD PTR [ebp-0x18]
64020850:	fdiv   QWORD PTR [ebp-0x10]
64020853:	fmul   QWORD PTR [ebp-0x10]
64020856:	fsubr  QWORD PTR [ebp-0x18]
64020859:	fstp   QWORD PTR [ebp-0x8]
6402085c:	fld1   
6402085e:	fcomp  QWORD PTR [ebp-0x8]
64020861:	fnstsw ax
64020863:	test   ah,0x5
64020866:	jp     0x6402086d
64020868:	xor    eax,eax
6402086a:	inc    eax
6402086b:	leave  
6402086c:	ret    
6402086d:	xor    eax,eax
6402086f:	leave  
64020870:	ret    
64020871:	push   0x64029514
64020876:	call   DWORD PTR ds:0x6402409c
6402087c:	test   eax,eax
6402087e:	je     0x64020895
64020880:	push   0x640294f8
64020885:	push   eax
64020886:	call   DWORD PTR ds:0x64024098
6402088c:	test   eax,eax
6402088e:	je     0x64020895
64020890:	push   0x0
64020892:	call   eax
64020894:	ret    
64020895:	jmp    0x64020835
6402089a:	push   ebp
6402089b:	mov    ebp,esp
6402089d:	sub    esp,0x18
640208a0:	mov    eax,ds:0x64037644
640208a5:	xor    eax,ebp
640208a7:	mov    DWORD PTR [ebp-0x4],eax
640208aa:	mov    eax,DWORD PTR [ebp+0x10]
640208ad:	push   ebx
640208ae:	push   esi
640208af:	xor    esi,esi
640208b1:	cmp    DWORD PTR [ebp+0xc],esi
640208b4:	push   edi
640208b5:	mov    DWORD PTR [ebp-0x18],0x404e
640208bc:	mov    DWORD PTR [eax],esi
640208be:	mov    DWORD PTR [eax+0x4],esi
640208c1:	mov    DWORD PTR [eax+0x8],esi
640208c4:	jbe    0x64020a10
640208ca:	mov    edx,DWORD PTR [eax]
640208cc:	mov    ebx,DWORD PTR [eax+0x4]
640208cf:	mov    esi,eax
640208d1:	lea    edi,[ebp-0x10]
640208d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640208d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640208d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640208d7:	mov    ecx,edx
640208d9:	shr    ecx,0x1f
640208dc:	lea    edi,[edx+edx*1]
640208df:	lea    edx,[ebx+ebx*1]
640208e2:	or     edx,ecx
640208e4:	mov    ecx,DWORD PTR [eax+0x8]
640208e7:	mov    esi,ebx
640208e9:	shr    esi,0x1f
640208ec:	add    ecx,ecx
640208ee:	or     ecx,esi
640208f0:	mov    DWORD PTR [ebp-0x14],edi
640208f3:	mov    esi,edi
640208f5:	and    DWORD PTR [ebp-0x14],0x0
640208f9:	mov    ebx,edx
640208fb:	shr    ebx,0x1f
640208fe:	add    ecx,ecx
64020900:	shr    edi,0x1f
64020903:	or     ecx,ebx
64020905:	mov    ebx,DWORD PTR [ebp-0x10]
64020908:	add    esi,esi
6402090a:	add    edx,edx
6402090c:	or     edx,edi
6402090e:	lea    edi,[esi+ebx*1]
64020911:	cmp    edi,esi
64020913:	mov    DWORD PTR [eax],esi
64020915:	mov    DWORD PTR [eax+0x4],edx
64020918:	mov    DWORD PTR [eax+0x8],ecx
6402091b:	jb     0x64020921
6402091d:	cmp    edi,ebx
6402091f:	jae    0x64020928
64020921:	mov    DWORD PTR [ebp-0x14],0x1
64020928:	xor    ebx,ebx
6402092a:	cmp    DWORD PTR [ebp-0x14],ebx
6402092d:	mov    DWORD PTR [eax],edi
6402092f:	je     0x6402094b
64020931:	lea    esi,[edx+0x1]
64020934:	cmp    esi,edx
64020936:	jb     0x6402093d
64020938:	cmp    esi,0x1
6402093b:	jae    0x64020940
6402093d:	xor    ebx,ebx
6402093f:	inc    ebx
64020940:	test   ebx,ebx
64020942:	mov    DWORD PTR [eax+0x4],esi
64020945:	je     0x6402094b
64020947:	inc    ecx
64020948:	mov    DWORD PTR [eax+0x8],ecx
6402094b:	mov    ecx,DWORD PTR [eax+0x4]
6402094e:	mov    edx,DWORD PTR [ebp-0xc]
64020951:	lea    ebx,[ecx+edx*1]
64020954:	xor    esi,esi
64020956:	cmp    ebx,ecx
64020958:	jb     0x6402095e
6402095a:	cmp    ebx,edx
6402095c:	jae    0x64020961
6402095e:	xor    esi,esi
64020960:	inc    esi
64020961:	test   esi,esi
64020963:	mov    DWORD PTR [eax+0x4],ebx
64020966:	je     0x6402096b
64020968:	inc    DWORD PTR [eax+0x8]
6402096b:	mov    ecx,DWORD PTR [ebp-0x8]
6402096e:	add    DWORD PTR [eax+0x8],ecx
64020971:	and    DWORD PTR [ebp-0x14],0x0
64020975:	lea    ecx,[edi+edi*1]
64020978:	mov    edx,edi
6402097a:	shr    edx,0x1f
6402097d:	lea    edi,[ebx+ebx*1]
64020980:	or     edi,edx
64020982:	mov    edx,DWORD PTR [eax+0x8]
64020985:	mov    esi,ebx
64020987:	shr    esi,0x1f
6402098a:	lea    ebx,[edx+edx*1]
6402098d:	mov    edx,DWORD PTR [ebp+0x8]
64020990:	or     ebx,esi
64020992:	mov    DWORD PTR [eax],ecx
64020994:	mov    DWORD PTR [eax+0x4],edi
64020997:	mov    DWORD PTR [eax+0x8],ebx
6402099a:	movsx  edx,BYTE PTR [edx]
6402099d:	lea    esi,[ecx+edx*1]
640209a0:	cmp    esi,ecx
640209a2:	mov    DWORD PTR [ebp-0x10],edx
640209a5:	jb     0x640209ab
640209a7:	cmp    esi,edx
640209a9:	jae    0x640209b2
640209ab:	mov    DWORD PTR [ebp-0x14],0x1
640209b2:	cmp    DWORD PTR [ebp-0x14],0x0
640209b6:	mov    DWORD PTR [eax],esi
640209b8:	je     0x640209d6
640209ba:	lea    ecx,[edi+0x1]
640209bd:	xor    edx,edx
640209bf:	cmp    ecx,edi
640209c1:	jb     0x640209c8
640209c3:	cmp    ecx,0x1
640209c6:	jae    0x640209cb
640209c8:	xor    edx,edx
640209ca:	inc    edx
640209cb:	test   edx,edx
640209cd:	mov    DWORD PTR [eax+0x4],ecx
640209d0:	je     0x640209d6
640209d2:	inc    ebx
640209d3:	mov    DWORD PTR [eax+0x8],ebx
640209d6:	dec    DWORD PTR [ebp+0xc]
640209d9:	inc    DWORD PTR [ebp+0x8]
640209dc:	cmp    DWORD PTR [ebp+0xc],0x0
640209e0:	ja     0x640208ca
640209e6:	xor    esi,esi
640209e8:	jmp    0x64020a10
640209ea:	mov    ecx,DWORD PTR [eax+0x4]
640209ed:	mov    edx,ecx
640209ef:	shr    edx,0x10
640209f2:	mov    DWORD PTR [eax+0x8],edx
640209f5:	mov    edx,DWORD PTR [eax]
640209f7:	mov    edi,edx
640209f9:	shl    ecx,0x10
640209fc:	shr    edi,0x10
640209ff:	or     ecx,edi
64020a01:	shl    edx,0x10
64020a04:	add    DWORD PTR [ebp-0x18],0xfff0
64020a0b:	mov    DWORD PTR [eax+0x4],ecx
64020a0e:	mov    DWORD PTR [eax],edx
64020a10:	cmp    DWORD PTR [eax+0x8],esi
64020a13:	je     0x640209ea
64020a15:	mov    ebx,0x8000
64020a1a:	test   DWORD PTR [eax+0x8],ebx
64020a1d:	jne    0x64020a4f
64020a1f:	mov    esi,DWORD PTR [eax]
64020a21:	mov    edi,DWORD PTR [eax+0x4]
64020a24:	add    DWORD PTR [ebp-0x18],0xffff
64020a2b:	mov    ecx,esi
64020a2d:	add    esi,esi
64020a2f:	shr    ecx,0x1f
64020a32:	mov    DWORD PTR [eax],esi
64020a34:	lea    esi,[edi+edi*1]
64020a37:	or     esi,ecx
64020a39:	mov    ecx,DWORD PTR [eax+0x8]
64020a3c:	mov    edx,edi
64020a3e:	shr    edx,0x1f
64020a41:	add    ecx,ecx
64020a43:	or     ecx,edx
64020a45:	test   ebx,ecx
64020a47:	mov    DWORD PTR [eax+0x4],esi
64020a4a:	mov    DWORD PTR [eax+0x8],ecx
64020a4d:	je     0x64020a1f
64020a4f:	mov    cx,WORD PTR [ebp-0x18]
64020a53:	mov    WORD PTR [eax+0xa],cx
64020a57:	mov    ecx,DWORD PTR [ebp-0x4]
64020a5a:	pop    edi
64020a5b:	pop    esi
64020a5c:	xor    ecx,ebp
64020a5e:	pop    ebx
64020a5f:	call   0x64013cc6
64020a64:	leave  
64020a65:	ret    
64020a66:	push   ebp
64020a67:	mov    ebp,esp
64020a69:	sub    esp,0x10
64020a6c:	mov    eax,ds:0x64037644
64020a71:	xor    eax,ebp
64020a73:	mov    DWORD PTR [ebp-0x4],eax
64020a76:	push   ebx
64020a77:	push   esi
64020a78:	mov    esi,DWORD PTR [ebp+0xc]
64020a7b:	test   BYTE PTR [esi+0xc],0x40
64020a7f:	push   edi
64020a80:	jne    0x64020c15
64020a86:	push   esi
64020a87:	call   0x64019c1b
64020a8c:	cmp    eax,0xffffffff
64020a8f:	pop    ecx
64020a90:	mov    edi,0x64037918
64020a95:	je     0x64020ac5
64020a97:	push   esi
64020a98:	call   0x64019c1b
64020a9d:	cmp    eax,0xfffffffe
64020aa0:	pop    ecx
64020aa1:	je     0x64020ac5
64020aa3:	push   esi
64020aa4:	call   0x64019c1b
64020aa9:	sar    eax,0x5
64020aac:	push   esi
64020aad:	lea    ebx,[eax*4+0x6403ab60]
64020ab4:	call   0x64019c1b
64020ab9:	and    eax,0x1f
64020abc:	pop    ecx
64020abd:	shl    eax,0x6
64020ac0:	add    eax,DWORD PTR [ebx]
64020ac2:	pop    ecx
64020ac3:	jmp    0x64020ac7
64020ac5:	mov    eax,edi
64020ac7:	mov    al,BYTE PTR [eax+0x24]
64020aca:	and    al,0x7f
64020acc:	cmp    al,0x2
64020ace:	je     0x64020c15
64020ad4:	push   esi
64020ad5:	call   0x64019c1b
64020ada:	cmp    eax,0xffffffff
64020add:	pop    ecx
64020ade:	je     0x64020b0e
64020ae0:	push   esi
64020ae1:	call   0x64019c1b
64020ae6:	cmp    eax,0xfffffffe
64020ae9:	pop    ecx
64020aea:	je     0x64020b0e
64020aec:	push   esi
64020aed:	call   0x64019c1b
64020af2:	sar    eax,0x5
64020af5:	push   esi
64020af6:	lea    ebx,[eax*4+0x6403ab60]
64020afd:	call   0x64019c1b
64020b02:	and    eax,0x1f
64020b05:	pop    ecx
64020b06:	shl    eax,0x6
64020b09:	add    eax,DWORD PTR [ebx]
64020b0b:	pop    ecx
64020b0c:	jmp    0x64020b10
64020b0e:	mov    eax,edi
64020b10:	mov    al,BYTE PTR [eax+0x24]
64020b13:	and    al,0x7f
64020b15:	cmp    al,0x1
64020b17:	jne    0x64020b75
64020b19:	dec    DWORD PTR [esi+0x4]
64020b1c:	mov    ebx,DWORD PTR [ebp+0x8]
64020b1f:	js     0x64020b2f
64020b21:	mov    eax,DWORD PTR [esi]
64020b23:	mov    BYTE PTR [eax],bl
64020b25:	mov    ecx,DWORD PTR [esi]
64020b27:	movzx  eax,BYTE PTR [ecx]
64020b2a:	inc    ecx
64020b2b:	mov    DWORD PTR [esi],ecx
64020b2d:	jmp    0x64020b3b
64020b2f:	movsx  eax,bl
64020b32:	push   esi
64020b33:	push   eax
64020b34:	call   0x64019dfb
64020b39:	pop    ecx
64020b3a:	pop    ecx
64020b3b:	cmp    eax,0xffffffff
64020b3e:	jne    0x64020b49
64020b40:	or     ax,0xffff
64020b44:	jmp    0x64020c35
64020b49:	dec    DWORD PTR [esi+0x4]
64020b4c:	js     0x64020b5c
64020b4e:	mov    eax,DWORD PTR [esi]
64020b50:	mov    BYTE PTR [eax],bh
64020b52:	mov    ecx,DWORD PTR [esi]
64020b54:	movzx  eax,BYTE PTR [ecx]
64020b57:	inc    ecx
64020b58:	mov    DWORD PTR [esi],ecx
64020b5a:	jmp    0x64020b68
64020b5c:	movsx  eax,bh
64020b5f:	push   esi
64020b60:	push   eax
64020b61:	call   0x64019dfb
64020b66:	pop    ecx
64020b67:	pop    ecx
64020b68:	cmp    eax,0xffffffff
64020b6b:	je     0x64020b40
64020b6d:	mov    ax,bx
64020b70:	jmp    0x64020c35
64020b75:	push   esi
64020b76:	call   0x64019c1b
64020b7b:	cmp    eax,0xffffffff
64020b7e:	pop    ecx
64020b7f:	je     0x64020baf
64020b81:	push   esi
64020b82:	call   0x64019c1b
64020b87:	cmp    eax,0xfffffffe
64020b8a:	pop    ecx
64020b8b:	je     0x64020baf
64020b8d:	push   esi
64020b8e:	call   0x64019c1b
64020b93:	sar    eax,0x5
64020b96:	push   esi
64020b97:	lea    ebx,[eax*4+0x6403ab60]
64020b9e:	call   0x64019c1b
64020ba3:	and    eax,0x1f
64020ba6:	pop    ecx
64020ba7:	shl    eax,0x6
64020baa:	add    eax,DWORD PTR [ebx]
64020bac:	pop    ecx
64020bad:	jmp    0x64020bb1
64020baf:	mov    eax,edi
64020bb1:	test   BYTE PTR [eax+0x4],0x80
64020bb5:	je     0x64020c15
64020bb7:	push   DWORD PTR [ebp+0x8]
64020bba:	lea    eax,[ebp-0xc]
64020bbd:	push   0x5
64020bbf:	push   eax
64020bc0:	lea    eax,[ebp-0x10]
64020bc3:	push   eax
64020bc4:	call   0x6401ec6e
64020bc9:	add    esp,0x10
64020bcc:	test   eax,eax
64020bce:	jne    0x64020b40
64020bd4:	xor    ebx,ebx
64020bd6:	cmp    DWORD PTR [ebp-0x10],ebx
64020bd9:	jle    0x64020c0f
64020bdb:	dec    DWORD PTR [esi+0x4]
64020bde:	js     0x64020bf2
64020be0:	mov    eax,DWORD PTR [esi]
64020be2:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
64020be6:	mov    BYTE PTR [eax],cl
64020be8:	mov    ecx,DWORD PTR [esi]
64020bea:	movzx  eax,BYTE PTR [ecx]
64020bed:	inc    ecx
64020bee:	mov    DWORD PTR [esi],ecx
64020bf0:	jmp    0x64020c00
64020bf2:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
64020bf7:	push   esi
64020bf8:	push   eax
64020bf9:	call   0x64019dfb
64020bfe:	pop    ecx
64020bff:	pop    ecx
64020c00:	cmp    eax,0xffffffff
64020c03:	je     0x64020b40
64020c09:	inc    ebx
64020c0a:	cmp    ebx,DWORD PTR [ebp-0x10]
64020c0d:	jl     0x64020bdb
64020c0f:	mov    ax,WORD PTR [ebp+0x8]
64020c13:	jmp    0x64020c35
64020c15:	add    DWORD PTR [esi+0x4],0xfffffffe
64020c19:	js     0x64020c28
64020c1b:	mov    ecx,DWORD PTR [esi]
64020c1d:	mov    eax,DWORD PTR [ebp+0x8]
64020c20:	mov    WORD PTR [ecx],ax
64020c23:	add    DWORD PTR [esi],0x2
64020c26:	jmp    0x64020c35
64020c28:	movzx  eax,WORD PTR [ebp+0x8]
64020c2c:	push   esi
64020c2d:	push   eax
64020c2e:	call   0x64021639
64020c33:	pop    ecx
64020c34:	pop    ecx
64020c35:	mov    ecx,DWORD PTR [ebp-0x4]
64020c38:	pop    edi
64020c39:	pop    esi
64020c3a:	xor    ecx,ebp
64020c3c:	pop    ebx
64020c3d:	call   0x64013cc6
64020c42:	leave  
64020c43:	ret    
64020c44:	mov    ax,WORD PTR [esp+0x4]
64020c49:	cmp    ax,0x30
64020c4d:	jb     0x64020dc2
64020c53:	cmp    ax,0x3a
64020c57:	jae    0x64020c60
64020c59:	movzx  eax,ax
64020c5c:	sub    eax,0x30
64020c5f:	ret    
64020c60:	mov    ecx,0xff10
64020c65:	cmp    ax,cx
64020c68:	jae    0x64020db8
64020c6e:	mov    ecx,0x660
64020c73:	cmp    ax,cx
64020c76:	jb     0x64020dc2
64020c7c:	cmp    ax,0x66a
64020c80:	jae    0x64020c88
64020c82:	movzx  eax,ax
64020c85:	sub    eax,ecx
64020c87:	ret    
64020c88:	mov    ecx,0x6f0
64020c8d:	cmp    ax,cx
64020c90:	jb     0x64020dc2
64020c96:	cmp    ax,0x6fa
64020c9a:	jb     0x64020c82
64020c9c:	mov    ecx,0x966
64020ca1:	cmp    ax,cx
64020ca4:	jb     0x64020dc2
64020caa:	cmp    ax,0x970
64020cae:	jb     0x64020c82
64020cb0:	mov    ecx,0x9e6
64020cb5:	cmp    ax,cx
64020cb8:	jb     0x64020dc2
64020cbe:	cmp    ax,0x9f0
64020cc2:	jb     0x64020c82
64020cc4:	mov    ecx,0xa66
64020cc9:	cmp    ax,cx
64020ccc:	jb     0x64020dc2
64020cd2:	cmp    ax,0xa70
64020cd6:	jb     0x64020c82
64020cd8:	mov    ecx,0xae6
64020cdd:	cmp    ax,cx
64020ce0:	jb     0x64020dc2
64020ce6:	cmp    ax,0xaf0
64020cea:	jb     0x64020c82
64020cec:	mov    ecx,0xb66
64020cf1:	cmp    ax,cx
64020cf4:	jb     0x64020dc2
64020cfa:	cmp    ax,0xb70
64020cfe:	jb     0x64020c82
64020d00:	mov    ecx,0xc66
64020d05:	cmp    ax,cx
64020d08:	jb     0x64020dc2
64020d0e:	cmp    ax,0xc70
64020d12:	jb     0x64020c82
64020d18:	mov    ecx,0xce6
64020d1d:	cmp    ax,cx
64020d20:	jb     0x64020dc2
64020d26:	cmp    ax,0xcf0
64020d2a:	jb     0x64020c82
64020d30:	mov    ecx,0xd66
64020d35:	cmp    ax,cx
64020d38:	jb     0x64020dc2
64020d3e:	cmp    ax,0xd70
64020d42:	jb     0x64020c82
64020d48:	mov    ecx,0xe50
64020d4d:	cmp    ax,cx
64020d50:	jb     0x64020dc2
64020d52:	cmp    ax,0xe5a
64020d56:	jb     0x64020c82
64020d5c:	mov    ecx,0xed0
64020d61:	cmp    ax,cx
64020d64:	jb     0x64020dc2
64020d66:	cmp    ax,0xeda
64020d6a:	jb     0x64020c82
64020d70:	add    ecx,0x50
64020d73:	cmp    ax,cx
64020d76:	jb     0x64020dc2
64020d78:	cmp    ax,0xf2a
64020d7c:	jb     0x64020c82
64020d82:	mov    ecx,0x1040
64020d87:	cmp    ax,cx
64020d8a:	jb     0x64020dc2
64020d8c:	cmp    ax,0x104a
64020d90:	jb     0x64020c82
64020d96:	mov    ecx,0x17e0
64020d9b:	cmp    ax,cx
64020d9e:	jb     0x64020dc2
64020da0:	cmp    ax,0x17ea
64020da4:	jb     0x64020c82
64020daa:	add    ecx,0x30
64020dad:	cmp    ax,cx
64020db0:	jb     0x64020dc2
64020db2:	cmp    ax,0x181a
64020db6:	jmp    0x64020dbc
64020db8:	cmp    ax,0xff1a
64020dbc:	jb     0x64020c82
64020dc2:	or     eax,0xffffffff
64020dc5:	ret    
64020dc6:	int3   
64020dc7:	int3   
64020dc8:	int3   
64020dc9:	int3   
64020dca:	int3   
64020dcb:	int3   
64020dcc:	int3   
64020dcd:	int3   
64020dce:	int3   
64020dcf:	int3   
64020dd0:	mov    eax,DWORD PTR [esp+0x8]
64020dd4:	mov    ecx,DWORD PTR [esp+0x10]
64020dd8:	or     ecx,eax
64020dda:	mov    ecx,DWORD PTR [esp+0xc]
64020dde:	jne    0x64020de9
64020de0:	mov    eax,DWORD PTR [esp+0x4]
64020de4:	mul    ecx
64020de6:	ret    0x10
64020de9:	push   ebx
64020dea:	mul    ecx
64020dec:	mov    ebx,eax
64020dee:	mov    eax,DWORD PTR [esp+0x8]
64020df2:	mul    DWORD PTR [esp+0x14]
64020df6:	add    ebx,eax
64020df8:	mov    eax,DWORD PTR [esp+0x8]
64020dfc:	mul    ecx
64020dfe:	add    edx,ebx
64020e00:	pop    ebx
64020e01:	ret    0x10
64020e04:	push   ebp
64020e05:	mov    ebp,esp
64020e07:	sub    esp,0x14
64020e0a:	push   esi
64020e0b:	push   edi
64020e0c:	push   DWORD PTR [ebp+0x8]
64020e0f:	lea    ecx,[ebp-0x14]
64020e12:	call   0x640142e5
64020e17:	mov    eax,DWORD PTR [ebp+0x10]
64020e1a:	mov    esi,DWORD PTR [ebp+0xc]
64020e1d:	xor    edi,edi
64020e1f:	cmp    eax,edi
64020e21:	je     0x64020e25
64020e23:	mov    DWORD PTR [eax],esi
64020e25:	cmp    esi,edi
64020e27:	jne    0x64020e55
64020e29:	call   0x64016483
64020e2e:	push   edi
64020e2f:	push   edi
64020e30:	push   edi
64020e31:	push   edi
64020e32:	push   edi
64020e33:	mov    DWORD PTR [eax],0x16
64020e39:	call   0x64013e12
64020e3e:	add    esp,0x14
64020e41:	cmp    BYTE PTR [ebp-0x8],0x0
64020e45:	je     0x64020e4e
64020e47:	mov    eax,DWORD PTR [ebp-0xc]
64020e4a:	and    DWORD PTR [eax+0x70],0xfffffffd
64020e4e:	xor    eax,eax
64020e50:	jmp    0x6402102b
64020e55:	cmp    DWORD PTR [ebp+0x14],edi
64020e58:	je     0x64020e66
64020e5a:	cmp    DWORD PTR [ebp+0x14],0x2
64020e5e:	jl     0x64020e29
64020e60:	cmp    DWORD PTR [ebp+0x14],0x24
64020e64:	jg     0x64020e29
64020e66:	mov    ecx,DWORD PTR [ebp-0x14]
64020e69:	push   ebx
64020e6a:	mov    bl,BYTE PTR [esi]
64020e6c:	mov    DWORD PTR [ebp-0x4],edi
64020e6f:	lea    edi,[esi+0x1]
64020e72:	cmp    DWORD PTR [ecx+0xac],0x1
64020e79:	jle    0x64020e92
64020e7b:	lea    eax,[ebp-0x14]
64020e7e:	push   eax
64020e7f:	movzx  eax,bl
64020e82:	push   0x8
64020e84:	push   eax
64020e85:	call   0x6401a990
64020e8a:	mov    ecx,DWORD PTR [ebp-0x14]
64020e8d:	add    esp,0xc
64020e90:	jmp    0x64020ea2
64020e92:	mov    edx,DWORD PTR [ecx+0xc8]
64020e98:	movzx  eax,bl
64020e9b:	movzx  eax,BYTE PTR [edx+eax*2]
64020e9f:	and    eax,0x8
64020ea2:	test   eax,eax
64020ea4:	je     0x64020eab
64020ea6:	mov    bl,BYTE PTR [edi]
64020ea8:	inc    edi
64020ea9:	jmp    0x64020e72
64020eab:	cmp    bl,0x2d
64020eae:	jne    0x64020eb6
64020eb0:	or     DWORD PTR [ebp+0x18],0x2
64020eb4:	jmp    0x64020ebb
64020eb6:	cmp    bl,0x2b
64020eb9:	jne    0x64020ebe
64020ebb:	mov    bl,BYTE PTR [edi]
64020ebd:	inc    edi
64020ebe:	mov    eax,DWORD PTR [ebp+0x14]
64020ec1:	test   eax,eax
64020ec3:	jl     0x64021012
64020ec9:	cmp    eax,0x1
64020ecc:	je     0x64021012
64020ed2:	cmp    eax,0x24
64020ed5:	jg     0x64021012
64020edb:	test   eax,eax
64020edd:	jne    0x64020f09
64020edf:	cmp    bl,0x30
64020ee2:	je     0x64020eed
64020ee4:	mov    DWORD PTR [ebp+0x14],0xa
64020eeb:	jmp    0x64020f21
64020eed:	mov    al,BYTE PTR [edi]
64020eef:	cmp    al,0x78
64020ef1:	je     0x64020f00
64020ef3:	cmp    al,0x58
64020ef5:	je     0x64020f00
64020ef7:	mov    DWORD PTR [ebp+0x14],0x8
64020efe:	jmp    0x64020f21
64020f00:	mov    DWORD PTR [ebp+0x14],0x10
64020f07:	jmp    0x64020f13
64020f09:	cmp    eax,0x10
64020f0c:	jne    0x64020f21
64020f0e:	cmp    bl,0x30
64020f11:	jne    0x64020f21
64020f13:	mov    al,BYTE PTR [edi]
64020f15:	cmp    al,0x78
64020f17:	je     0x64020f1d
64020f19:	cmp    al,0x58
64020f1b:	jne    0x64020f21
64020f1d:	inc    edi
64020f1e:	mov    bl,BYTE PTR [edi]
64020f20:	inc    edi
64020f21:	mov    esi,DWORD PTR [ecx+0xc8]
64020f27:	or     eax,0xffffffff
64020f2a:	xor    edx,edx
64020f2c:	div    DWORD PTR [ebp+0x14]
64020f2f:	movzx  ecx,bl
64020f32:	movzx  ecx,WORD PTR [esi+ecx*2]
64020f36:	test   cl,0x4
64020f39:	je     0x64020f43
64020f3b:	movsx  ecx,bl
64020f3e:	sub    ecx,0x30
64020f41:	jmp    0x64020f5d
64020f43:	test   cx,0x103
64020f48:	je     0x64020f7b
64020f4a:	mov    cl,bl
64020f4c:	sub    cl,0x61
64020f4f:	cmp    cl,0x19
64020f52:	movsx  ecx,bl
64020f55:	ja     0x64020f5a
64020f57:	sub    ecx,0x20
64020f5a:	add    ecx,0xffffffc9
64020f5d:	cmp    ecx,DWORD PTR [ebp+0x14]
64020f60:	jae    0x64020f7b
64020f62:	or     DWORD PTR [ebp+0x18],0x8
64020f66:	cmp    DWORD PTR [ebp-0x4],eax
64020f69:	jb     0x64020f92
64020f6b:	jne    0x64020f71
64020f6d:	cmp    ecx,edx
64020f6f:	jbe    0x64020f92
64020f71:	or     DWORD PTR [ebp+0x18],0x4
64020f75:	cmp    DWORD PTR [ebp+0x10],0x0
64020f79:	jne    0x64020f9e
64020f7b:	mov    eax,DWORD PTR [ebp+0x18]
64020f7e:	dec    edi
64020f7f:	test   al,0x8
64020f81:	jne    0x64020fa3
64020f83:	cmp    DWORD PTR [ebp+0x10],0x0
64020f87:	je     0x64020f8c
64020f89:	mov    edi,DWORD PTR [ebp+0xc]
64020f8c:	and    DWORD PTR [ebp-0x4],0x0
64020f90:	jmp    0x64020fee
64020f92:	mov    ebx,DWORD PTR [ebp-0x4]
64020f95:	imul   ebx,DWORD PTR [ebp+0x14]
64020f99:	add    ebx,ecx
64020f9b:	mov    DWORD PTR [ebp-0x4],ebx
64020f9e:	mov    bl,BYTE PTR [edi]
64020fa0:	inc    edi
64020fa1:	jmp    0x64020f2f
64020fa3:	test   al,0x4
64020fa5:	mov    esi,0x7fffffff
64020faa:	jne    0x64020fc7
64020fac:	test   al,0x1
64020fae:	jne    0x64020fee
64020fb0:	and    eax,0x2
64020fb3:	je     0x64020fbe
64020fb5:	cmp    DWORD PTR [ebp-0x4],0x80000000
64020fbc:	ja     0x64020fc7
64020fbe:	test   eax,eax
64020fc0:	jne    0x64020fee
64020fc2:	cmp    DWORD PTR [ebp-0x4],esi
64020fc5:	jbe    0x64020fee
64020fc7:	call   0x64016483
64020fcc:	test   BYTE PTR [ebp+0x18],0x1
64020fd0:	mov    DWORD PTR [eax],0x22
64020fd6:	je     0x64020fde
64020fd8:	or     DWORD PTR [ebp-0x4],0xffffffff
64020fdc:	jmp    0x64020fee
64020fde:	mov    al,BYTE PTR [ebp+0x18]
64020fe1:	and    al,0x2
64020fe3:	neg    al
64020fe5:	sbb    eax,eax
64020fe7:	neg    eax
64020fe9:	add    eax,esi
64020feb:	mov    DWORD PTR [ebp-0x4],eax
64020fee:	mov    eax,DWORD PTR [ebp+0x10]
64020ff1:	test   eax,eax
64020ff3:	je     0x64020ff7
64020ff5:	mov    DWORD PTR [eax],edi
64020ff7:	test   BYTE PTR [ebp+0x18],0x2
64020ffb:	je     0x64021000
64020ffd:	neg    DWORD PTR [ebp-0x4]
64021000:	cmp    BYTE PTR [ebp-0x8],0x0
64021004:	je     0x6402100d
64021006:	mov    eax,DWORD PTR [ebp-0xc]
64021009:	and    DWORD PTR [eax+0x70],0xfffffffd
6402100d:	mov    eax,DWORD PTR [ebp-0x4]
64021010:	jmp    0x6402102a
64021012:	mov    eax,DWORD PTR [ebp+0x10]
64021015:	test   eax,eax
64021017:	je     0x6402101b
64021019:	mov    DWORD PTR [eax],esi
6402101b:	cmp    BYTE PTR [ebp-0x8],0x0
6402101f:	je     0x64021028
64021021:	mov    eax,DWORD PTR [ebp-0xc]
64021024:	and    DWORD PTR [eax+0x70],0xfffffffd
64021028:	xor    eax,eax
6402102a:	pop    ebx
6402102b:	pop    edi
6402102c:	pop    esi
6402102d:	leave  
6402102e:	ret    
6402102f:	push   ebp
64021030:	mov    ebp,esp
64021032:	xor    eax,eax
64021034:	cmp    DWORD PTR ds:0x64038ea8,eax
6402103a:	push   eax
6402103b:	push   DWORD PTR [ebp+0x10]
6402103e:	push   DWORD PTR [ebp+0xc]
64021041:	push   DWORD PTR [ebp+0x8]
64021044:	jne    0x6402104d
64021046:	push   0x64037ff8
6402104b:	jmp    0x6402104e
6402104d:	push   eax
6402104e:	call   0x64020e04
64021053:	add    esp,0x14
64021056:	pop    ebp
64021057:	ret    
64021058:	push   0xc
6402105a:	push   0x6402bba8
6402105f:	call   0x64015ed4
64021064:	and    DWORD PTR [ebp-0x4],0x0
64021068:	movapd xmm0,xmm1
6402106c:	mov    DWORD PTR [ebp-0x1c],0x1
64021073:	jmp    0x64021098
64021075:	mov    eax,DWORD PTR [ebp-0x14]
64021078:	mov    eax,DWORD PTR [eax]
6402107a:	mov    eax,DWORD PTR [eax]
6402107c:	cmp    eax,0xc0000005
64021081:	je     0x6402108d
64021083:	cmp    eax,0xc000001d
64021088:	je     0x6402108d
6402108a:	xor    eax,eax
6402108c:	ret    
6402108d:	xor    eax,eax
6402108f:	inc    eax
64021090:	ret    
64021091:	mov    esp,DWORD PTR [ebp-0x18]
64021094:	and    DWORD PTR [ebp-0x1c],0x0
64021098:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6402109f:	mov    eax,DWORD PTR [ebp-0x1c]
640210a2:	call   0x64015f19
640210a7:	ret    
640210a8:	push   ebp
640210a9:	mov    ebp,esp
640210ab:	sub    esp,0x18
640210ae:	xor    eax,eax
640210b0:	push   ebx
640210b1:	mov    DWORD PTR [ebp-0x4],eax
640210b4:	mov    DWORD PTR [ebp-0xc],eax
640210b7:	mov    DWORD PTR [ebp-0x8],eax
640210ba:	push   ebx
640210bb:	pushf  
640210bc:	pop    eax
640210bd:	mov    ecx,eax
640210bf:	xor    eax,0x200000
640210c4:	push   eax
640210c5:	popf   
640210c6:	pushf  
640210c7:	pop    edx
640210c8:	sub    edx,ecx
640210ca:	je     0x640210eb
640210cc:	push   ecx
640210cd:	popf   
640210ce:	xor    eax,eax
640210d0:	cpuid  
640210d2:	mov    DWORD PTR [ebp-0xc],eax
640210d5:	mov    DWORD PTR [ebp-0x18],ebx
640210d8:	mov    DWORD PTR [ebp-0x14],edx
640210db:	mov    DWORD PTR [ebp-0x10],ecx
640210de:	mov    eax,0x1
640210e3:	cpuid  
640210e5:	mov    DWORD PTR [ebp-0x4],edx
640210e8:	mov    DWORD PTR [ebp-0x8],eax
640210eb:	pop    ebx
640210ec:	test   DWORD PTR [ebp-0x4],0x4000000
640210f3:	je     0x64021103
640210f5:	call   0x64021058
640210fa:	test   eax,eax
640210fc:	je     0x64021103
640210fe:	xor    eax,eax
64021100:	inc    eax
64021101:	jmp    0x64021105
64021103:	xor    eax,eax
64021105:	pop    ebx
64021106:	leave  
64021107:	ret    
64021108:	call   0x640210a8
6402110d:	mov    ds:0x64039b18,eax
64021112:	xor    eax,eax
64021114:	ret    
64021115:	push   0xa
64021117:	push   0x0
64021119:	push   DWORD PTR [esp+0xc]
6402111d:	call   0x6402102f
64021122:	add    esp,0xc
64021125:	ret    
64021126:	push   0x2
64021128:	call   0x64017dd6
6402112d:	pop    ecx
6402112e:	ret    
6402112f:	xor    eax,eax
64021131:	push   eax
64021132:	push   eax
64021133:	push   0x3
64021135:	push   eax
64021136:	push   0x3
64021138:	push   0x40000000
6402113d:	push   0x64029560
64021142:	call   DWORD PTR ds:0x64024108
64021148:	mov    ds:0x64038954,eax
6402114d:	ret    
6402114e:	mov    eax,ds:0x64038954
64021153:	cmp    eax,0xffffffff
64021156:	push   esi
64021157:	mov    esi,DWORD PTR ds:0x64024074
6402115d:	je     0x64021167
6402115f:	cmp    eax,0xfffffffe
64021162:	je     0x64021167
64021164:	push   eax
64021165:	call   esi
64021167:	mov    eax,ds:0x64038950
6402116c:	cmp    eax,0xffffffff
6402116f:	je     0x64021179
64021171:	cmp    eax,0xfffffffe
64021174:	je     0x64021179
64021176:	push   eax
64021177:	call   esi
64021179:	pop    esi
6402117a:	ret    
6402117b:	push   ebp
6402117c:	mov    ebp,esp
6402117e:	sub    esp,0x28
64021181:	mov    eax,ds:0x64037644
64021186:	xor    eax,ebp
64021188:	mov    DWORD PTR [ebp-0x4],eax
6402118b:	push   ebx
6402118c:	push   esi
6402118d:	mov    esi,DWORD PTR [ebp+0x8]
64021190:	push   edi
64021191:	push   DWORD PTR [ebp+0x10]
64021194:	mov    edi,DWORD PTR [ebp+0xc]
64021197:	lea    ecx,[ebp-0x24]
6402119a:	call   0x640142e5
6402119f:	lea    eax,[ebp-0x24]
640211a2:	push   eax
640211a3:	xor    ebx,ebx
640211a5:	push   ebx
640211a6:	push   ebx
640211a7:	push   ebx
640211a8:	push   ebx
640211a9:	push   edi
640211aa:	lea    eax,[ebp-0x28]
640211ad:	push   eax
640211ae:	lea    eax,[ebp-0x10]
640211b1:	push   eax
640211b2:	call   0x64021811
640211b7:	mov    DWORD PTR [ebp-0x14],eax
640211ba:	lea    eax,[ebp-0x10]
640211bd:	push   esi
640211be:	push   eax
640211bf:	call   0x6401f078
640211c4:	add    esp,0x28
640211c7:	test   BYTE PTR [ebp-0x14],0x3
640211cb:	jne    0x640211f8
640211cd:	cmp    eax,0x1
640211d0:	jne    0x640211e3
640211d2:	cmp    BYTE PTR [ebp-0x18],bl
640211d5:	je     0x640211de
640211d7:	mov    eax,DWORD PTR [ebp-0x1c]
640211da:	and    DWORD PTR [eax+0x70],0xfffffffd
640211de:	push   0x3
640211e0:	pop    eax
640211e1:	jmp    0x64021212
640211e3:	cmp    eax,0x2
640211e6:	jne    0x64021204
640211e8:	cmp    BYTE PTR [ebp-0x18],bl
640211eb:	je     0x640211f4
640211ed:	mov    eax,DWORD PTR [ebp-0x1c]
640211f0:	and    DWORD PTR [eax+0x70],0xfffffffd
640211f4:	push   0x4
640211f6:	jmp    0x640211e0
640211f8:	test   BYTE PTR [ebp-0x14],0x1
640211fc:	jne    0x640211e8
640211fe:	test   BYTE PTR [ebp-0x14],0x2
64021202:	jne    0x640211d2
64021204:	cmp    BYTE PTR [ebp-0x18],bl
64021207:	je     0x64021210
64021209:	mov    eax,DWORD PTR [ebp-0x1c]
6402120c:	and    DWORD PTR [eax+0x70],0xfffffffd
64021210:	xor    eax,eax
64021212:	mov    ecx,DWORD PTR [ebp-0x4]
64021215:	pop    edi
64021216:	pop    esi
64021217:	xor    ecx,ebp
64021219:	pop    ebx
6402121a:	call   0x64013cc6
6402121f:	leave  
64021220:	ret    
64021221:	push   ebp
64021222:	mov    ebp,esp
64021224:	sub    esp,0x28
64021227:	mov    eax,ds:0x64037644
6402122c:	xor    eax,ebp
6402122e:	mov    DWORD PTR [ebp-0x4],eax
64021231:	push   ebx
64021232:	push   esi
64021233:	mov    esi,DWORD PTR [ebp+0x8]
64021236:	push   edi
64021237:	push   DWORD PTR [ebp+0x10]
6402123a:	mov    edi,DWORD PTR [ebp+0xc]
6402123d:	lea    ecx,[ebp-0x24]
64021240:	call   0x640142e5
64021245:	lea    eax,[ebp-0x24]
64021248:	push   eax
64021249:	xor    ebx,ebx
6402124b:	push   ebx
6402124c:	push   ebx
6402124d:	push   ebx
6402124e:	push   ebx
6402124f:	push   edi
64021250:	lea    eax,[ebp-0x28]
64021253:	push   eax
64021254:	lea    eax,[ebp-0x10]
64021257:	push   eax
64021258:	call   0x64021811
6402125d:	mov    DWORD PTR [ebp-0x14],eax
64021260:	lea    eax,[ebp-0x10]
64021263:	push   esi
64021264:	push   eax
64021265:	call   0x6401f5ba
6402126a:	add    esp,0x28
6402126d:	test   BYTE PTR [ebp-0x14],0x3
64021271:	jne    0x6402129e
64021273:	cmp    eax,0x1
64021276:	jne    0x64021289
64021278:	cmp    BYTE PTR [ebp-0x18],bl
6402127b:	je     0x64021284
6402127d:	mov    eax,DWORD PTR [ebp-0x1c]
64021280:	and    DWORD PTR [eax+0x70],0xfffffffd
64021284:	push   0x3
64021286:	pop    eax
64021287:	jmp    0x640212b8
64021289:	cmp    eax,0x2
6402128c:	jne    0x640212aa
6402128e:	cmp    BYTE PTR [ebp-0x18],bl
64021291:	je     0x6402129a
64021293:	mov    eax,DWORD PTR [ebp-0x1c]
64021296:	and    DWORD PTR [eax+0x70],0xfffffffd
6402129a:	push   0x4
6402129c:	jmp    0x64021286
6402129e:	test   BYTE PTR [ebp-0x14],0x1
640212a2:	jne    0x6402128e
640212a4:	test   BYTE PTR [ebp-0x14],0x2
640212a8:	jne    0x64021278
640212aa:	cmp    BYTE PTR [ebp-0x18],bl
640212ad:	je     0x640212b6
640212af:	mov    eax,DWORD PTR [ebp-0x1c]
640212b2:	and    DWORD PTR [eax+0x70],0xfffffffd
640212b6:	xor    eax,eax
640212b8:	mov    ecx,DWORD PTR [ebp-0x4]
640212bb:	pop    edi
640212bc:	pop    esi
640212bd:	xor    ecx,ebp
640212bf:	pop    ebx
640212c0:	call   0x64013cc6
640212c5:	leave  
640212c6:	ret    
640212c7:	push   ebp
640212c8:	mov    ebp,esp
640212ca:	mov    ecx,DWORD PTR [ebp+0x14]
640212cd:	push   ebx
640212ce:	push   esi
640212cf:	mov    esi,DWORD PTR [ebp+0x8]
640212d2:	xor    ebx,ebx
640212d4:	cmp    esi,ebx
640212d6:	push   edi
640212d7:	mov    edi,DWORD PTR [ecx+0xc]
640212da:	jne    0x640212fa
640212dc:	call   0x64016483
640212e1:	push   0x16
640212e3:	pop    esi
640212e4:	mov    DWORD PTR [eax],esi
640212e6:	push   ebx
640212e7:	push   ebx
640212e8:	push   ebx
640212e9:	push   ebx
640212ea:	push   ebx
640212eb:	call   0x64013e12
640212f0:	add    esp,0x14
640212f3:	mov    eax,esi
640212f5:	jmp    0x6402137f
640212fa:	cmp    DWORD PTR [ebp+0xc],ebx
640212fd:	jbe    0x640212dc
640212ff:	mov    edx,DWORD PTR [ebp+0x10]
64021302:	cmp    edx,ebx
64021304:	mov    BYTE PTR [esi],bl
64021306:	jle    0x6402130c
64021308:	mov    eax,edx
6402130a:	jmp    0x6402130e
6402130c:	xor    eax,eax
6402130e:	inc    eax
6402130f:	cmp    DWORD PTR [ebp+0xc],eax
64021312:	ja     0x64021322
64021314:	call   0x64016483
64021319:	push   0x22
6402131b:	pop    ecx
6402131c:	mov    DWORD PTR [eax],ecx
6402131e:	mov    esi,ecx
64021320:	jmp    0x640212e6
64021322:	cmp    edx,ebx
64021324:	mov    BYTE PTR [esi],0x30
64021327:	lea    eax,[esi+0x1]
6402132a:	jle    0x64021346
6402132c:	mov    cl,BYTE PTR [edi]
6402132e:	cmp    cl,bl
64021330:	je     0x64021338
64021332:	movsx  ecx,cl
64021335:	inc    edi
64021336:	jmp    0x6402133b
64021338:	push   0x30
6402133a:	pop    ecx
6402133b:	mov    BYTE PTR [eax],cl
6402133d:	inc    eax
6402133e:	dec    edx
6402133f:	cmp    edx,ebx
64021341:	jg     0x6402132c
64021343:	mov    ecx,DWORD PTR [ebp+0x14]
64021346:	cmp    edx,ebx
64021348:	mov    BYTE PTR [eax],bl
6402134a:	jl     0x6402135e
6402134c:	cmp    BYTE PTR [edi],0x35
6402134f:	jl     0x6402135e
64021351:	jmp    0x64021356
64021353:	mov    BYTE PTR [eax],0x30
64021356:	dec    eax
64021357:	cmp    BYTE PTR [eax],0x39
6402135a:	je     0x64021353
6402135c:	inc    BYTE PTR [eax]
6402135e:	cmp    BYTE PTR [esi],0x31
64021361:	jne    0x64021368
64021363:	inc    DWORD PTR [ecx+0x4]
64021366:	jmp    0x6402137d
64021368:	lea    edi,[esi+0x1]
6402136b:	push   edi
6402136c:	call   0x64015510
64021371:	inc    eax
64021372:	push   eax
64021373:	push   edi
64021374:	push   esi
64021375:	call   0x640164d0
6402137a:	add    esp,0x10
6402137d:	xor    eax,eax
6402137f:	pop    edi
64021380:	pop    esi
64021381:	pop    ebx
64021382:	pop    ebp
64021383:	ret    
64021384:	push   ebp
64021385:	mov    ebp,esp
64021387:	push   ecx
64021388:	mov    edx,DWORD PTR [ebp+0xc]
6402138b:	movzx  eax,WORD PTR [edx+0x6]
6402138f:	push   ebx
64021390:	mov    ecx,eax
64021392:	push   esi
64021393:	push   edi
64021394:	shr    ecx,0x4
64021397:	and    eax,0x8000
6402139c:	mov    edi,0x7ff
640213a1:	and    ecx,edi
640213a3:	mov    DWORD PTR [ebp+0xc],eax
640213a6:	mov    eax,DWORD PTR [edx+0x4]
640213a9:	mov    edx,DWORD PTR [edx]
640213ab:	movzx  ebx,cx
640213ae:	mov    esi,0x80000000
640213b3:	and    eax,0xfffff
640213b8:	test   ebx,ebx
640213ba:	mov    DWORD PTR [ebp-0x4],esi
640213bd:	je     0x640213d2
640213bf:	cmp    ebx,edi
640213c1:	je     0x640213cb
640213c3:	add    ecx,0x3c00
640213c9:	jmp    0x640213f3
640213cb:	mov    edi,0x7fff
640213d0:	jmp    0x640213f6
640213d2:	xor    ebx,ebx
640213d4:	cmp    eax,ebx
640213d6:	jne    0x640213ea
640213d8:	cmp    edx,ebx
640213da:	jne    0x640213ea
640213dc:	mov    eax,DWORD PTR [ebp+0x8]
640213df:	mov    cx,WORD PTR [ebp+0xc]
640213e3:	mov    DWORD PTR [eax+0x4],ebx
640213e6:	mov    DWORD PTR [eax],ebx
640213e8:	jmp    0x64021436
640213ea:	add    ecx,0x3c01
640213f0:	mov    DWORD PTR [ebp-0x4],ebx
640213f3:	movzx  edi,cx
640213f6:	mov    ecx,edx
640213f8:	shr    ecx,0x15
640213fb:	shl    eax,0xb
640213fe:	or     ecx,eax
64021400:	or     ecx,DWORD PTR [ebp-0x4]
64021403:	mov    eax,DWORD PTR [ebp+0x8]
64021406:	shl    edx,0xb
64021409:	test   esi,ecx
6402140b:	mov    DWORD PTR [eax+0x4],ecx
6402140e:	mov    DWORD PTR [eax],edx
64021410:	jne    0x64021431
64021412:	mov    ecx,DWORD PTR [eax]
64021414:	mov    edx,DWORD PTR [eax+0x4]
64021417:	mov    ebx,ecx
64021419:	add    edx,edx
6402141b:	shr    ebx,0x1f
6402141e:	or     edx,ebx
64021420:	add    ecx,ecx
64021422:	add    edi,0xffff
64021428:	test   esi,edx
6402142a:	mov    DWORD PTR [eax+0x4],edx
6402142d:	mov    DWORD PTR [eax],ecx
6402142f:	je     0x64021412
64021431:	mov    ecx,DWORD PTR [ebp+0xc]
64021434:	or     ecx,edi
64021436:	pop    edi
64021437:	pop    esi
64021438:	mov    WORD PTR [eax+0x8],cx
6402143c:	pop    ebx
6402143d:	leave  
6402143e:	ret    
6402143f:	push   ebp
64021440:	mov    ebp,esp
64021442:	sub    esp,0x30
64021445:	mov    eax,ds:0x64037644
6402144a:	xor    eax,ebp
6402144c:	mov    DWORD PTR [ebp-0x4],eax
6402144f:	mov    eax,DWORD PTR [ebp+0x14]
64021452:	push   ebx
64021453:	mov    ebx,DWORD PTR [ebp+0x10]
64021456:	push   esi
64021457:	mov    DWORD PTR [ebp-0x30],eax
6402145a:	push   edi
6402145b:	lea    eax,[ebp+0x8]
6402145e:	push   eax
6402145f:	lea    eax,[ebp-0x10]
64021462:	push   eax
64021463:	call   0x64021384
64021468:	pop    ecx
64021469:	pop    ecx
6402146a:	lea    eax,[ebp-0x2c]
6402146d:	push   eax
6402146e:	push   0x0
64021470:	push   0x11
64021472:	sub    esp,0xc
64021475:	lea    esi,[ebp-0x10]
64021478:	mov    edi,esp
6402147a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402147b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402147c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6402147e:	call   0x64021ed1
64021483:	mov    esi,DWORD PTR [ebp-0x30]
64021486:	mov    DWORD PTR [ebx+0x8],eax
64021489:	movsx  eax,BYTE PTR [ebp-0x2a]
6402148d:	mov    DWORD PTR [ebx],eax
6402148f:	movsx  eax,WORD PTR [ebp-0x2c]
64021493:	mov    DWORD PTR [ebx+0x4],eax
64021496:	lea    eax,[ebp-0x28]
64021499:	push   eax
6402149a:	push   DWORD PTR [ebp+0x18]
6402149d:	push   esi
6402149e:	call   0x640162e1
640214a3:	add    esp,0x24
640214a6:	test   eax,eax
640214a8:	je     0x640214b9
640214aa:	xor    eax,eax
640214ac:	push   eax
640214ad:	push   eax
640214ae:	push   eax
640214af:	push   eax
640214b0:	push   eax
640214b1:	call   0x64013d16
640214b6:	add    esp,0x14
640214b9:	mov    ecx,DWORD PTR [ebp-0x4]
640214bc:	pop    edi
640214bd:	mov    DWORD PTR [ebx+0xc],esi
640214c0:	pop    esi
640214c1:	mov    eax,ebx
640214c3:	xor    ecx,ebp
640214c5:	pop    ebx
640214c6:	call   0x64013cc6
640214cb:	leave  
640214cc:	ret    
640214cd:	int3   
640214ce:	int3   
640214cf:	int3   
640214d0:	push   edi
640214d1:	push   esi
640214d2:	push   ebp
640214d3:	xor    edi,edi
640214d5:	xor    ebp,ebp
640214d7:	mov    eax,DWORD PTR [esp+0x14]
640214db:	or     eax,eax
640214dd:	jge    0x640214f4
640214df:	inc    edi
640214e0:	inc    ebp
640214e1:	mov    edx,DWORD PTR [esp+0x10]
640214e5:	neg    eax
640214e7:	neg    edx
640214e9:	sbb    eax,0x0
640214ec:	mov    DWORD PTR [esp+0x14],eax
640214f0:	mov    DWORD PTR [esp+0x10],edx
640214f4:	mov    eax,DWORD PTR [esp+0x1c]
640214f8:	or     eax,eax
640214fa:	jge    0x64021510
640214fc:	inc    edi
640214fd:	mov    edx,DWORD PTR [esp+0x18]
64021501:	neg    eax
64021503:	neg    edx
64021505:	sbb    eax,0x0
64021508:	mov    DWORD PTR [esp+0x1c],eax
6402150c:	mov    DWORD PTR [esp+0x18],edx
64021510:	or     eax,eax
64021512:	jne    0x6402153c
64021514:	mov    ecx,DWORD PTR [esp+0x18]
64021518:	mov    eax,DWORD PTR [esp+0x14]
6402151c:	xor    edx,edx
6402151e:	div    ecx
64021520:	mov    ebx,eax
64021522:	mov    eax,DWORD PTR [esp+0x10]
64021526:	div    ecx
64021528:	mov    esi,eax
6402152a:	mov    eax,ebx
6402152c:	mul    DWORD PTR [esp+0x18]
64021530:	mov    ecx,eax
64021532:	mov    eax,esi
64021534:	mul    DWORD PTR [esp+0x18]
64021538:	add    edx,ecx
6402153a:	jmp    0x64021583
6402153c:	mov    ebx,eax
6402153e:	mov    ecx,DWORD PTR [esp+0x18]
64021542:	mov    edx,DWORD PTR [esp+0x14]
64021546:	mov    eax,DWORD PTR [esp+0x10]
6402154a:	shr    ebx,1
6402154c:	rcr    ecx,1
6402154e:	shr    edx,1
64021550:	rcr    eax,1
64021552:	or     ebx,ebx
64021554:	jne    0x6402154a
64021556:	div    ecx
64021558:	mov    esi,eax
6402155a:	mul    DWORD PTR [esp+0x1c]
6402155e:	mov    ecx,eax
64021560:	mov    eax,DWORD PTR [esp+0x18]
64021564:	mul    esi
64021566:	add    edx,ecx
64021568:	jb     0x64021578
6402156a:	cmp    edx,DWORD PTR [esp+0x14]
6402156e:	ja     0x64021578
64021570:	jb     0x64021581
64021572:	cmp    eax,DWORD PTR [esp+0x10]
64021576:	jbe    0x64021581
64021578:	dec    esi
64021579:	sub    eax,DWORD PTR [esp+0x18]
6402157d:	sbb    edx,DWORD PTR [esp+0x1c]
64021581:	xor    ebx,ebx
64021583:	sub    eax,DWORD PTR [esp+0x10]
64021587:	sbb    edx,DWORD PTR [esp+0x14]
6402158b:	dec    ebp
6402158c:	jns    0x64021595
6402158e:	neg    edx
64021590:	neg    eax
64021592:	sbb    edx,0x0
64021595:	mov    ecx,edx
64021597:	mov    edx,ebx
64021599:	mov    ebx,ecx
6402159b:	mov    ecx,eax
6402159d:	mov    eax,esi
6402159f:	dec    edi
640215a0:	jne    0x640215a9
640215a2:	neg    edx
640215a4:	neg    eax
640215a6:	sbb    edx,0x0
640215a9:	pop    ebp
640215aa:	pop    esi
640215ab:	pop    edi
640215ac:	ret    0x10
640215af:	int3   
640215b0:	cmp    cl,0x40
640215b3:	jae    0x640215ca
640215b5:	cmp    cl,0x20
640215b8:	jae    0x640215c0
640215ba:	shrd   eax,edx,cl
640215bd:	shr    edx,cl
640215bf:	ret    
640215c0:	mov    eax,edx
640215c2:	xor    edx,edx
640215c4:	and    cl,0x1f
640215c7:	shr    eax,cl
640215c9:	ret    
640215ca:	xor    eax,eax
640215cc:	xor    edx,edx
640215ce:	ret    
640215cf:	push   ebp
640215d0:	mov    ebp,esp
640215d2:	mov    eax,DWORD PTR [ebp+0x10]
640215d5:	mov    ecx,DWORD PTR [ebp+0xc]
640215d8:	and    eax,0xfff7ffff
640215dd:	and    ecx,eax
640215df:	test   ecx,0xfcf0fce0
640215e5:	push   esi
640215e6:	je     0x64021619
640215e8:	push   edi
640215e9:	mov    edi,DWORD PTR [ebp+0x8]
640215ec:	xor    esi,esi
640215ee:	cmp    edi,esi
640215f0:	je     0x640215fd
640215f2:	push   esi
640215f3:	push   esi
640215f4:	call   0x640228c5
640215f9:	pop    ecx
640215fa:	pop    ecx
640215fb:	mov    DWORD PTR [edi],eax
640215fd:	call   0x64016483
64021602:	push   0x16
64021604:	pop    edi
64021605:	push   esi
64021606:	push   esi
64021607:	push   esi
64021608:	push   esi
64021609:	push   esi
6402160a:	mov    DWORD PTR [eax],edi
6402160c:	call   0x64013e12
64021611:	add    esp,0x14
64021614:	mov    eax,edi
64021616:	pop    edi
64021617:	jmp    0x64021636
64021619:	mov    esi,DWORD PTR [ebp+0x8]
6402161c:	test   esi,esi
6402161e:	push   eax
6402161f:	push   DWORD PTR [ebp+0xc]
64021622:	je     0x6402162d
64021624:	call   0x640228c5
64021629:	mov    DWORD PTR [esi],eax
6402162b:	jmp    0x64021632
6402162d:	call   0x640228c5
64021632:	pop    ecx
64021633:	pop    ecx
64021634:	xor    eax,eax
64021636:	pop    esi
64021637:	pop    ebp
64021638:	ret    
64021639:	push   ebp
6402163a:	mov    ebp,esp
6402163c:	push   ecx
6402163d:	push   esi
6402163e:	mov    esi,DWORD PTR [ebp+0xc]
64021641:	push   esi
64021642:	call   0x64019c1b
64021647:	mov    DWORD PTR [ebp+0xc],eax
6402164a:	mov    eax,DWORD PTR [esi+0xc]
6402164d:	test   al,0x82
6402164f:	pop    ecx
64021650:	jne    0x6402166b
64021652:	call   0x64016483
64021657:	mov    DWORD PTR [eax],0x9
6402165d:	or     DWORD PTR [esi+0xc],0x20
64021661:	mov    eax,0xffff
64021666:	jmp    0x640217a6
6402166b:	test   al,0x40
6402166d:	je     0x6402167c
6402166f:	call   0x64016483
64021674:	mov    DWORD PTR [eax],0x22
6402167a:	jmp    0x6402165d
6402167c:	test   al,0x1
6402167e:	je     0x64021697
64021680:	and    DWORD PTR [esi+0x4],0x0
64021684:	test   al,0x10
64021686:	je     0x64021717
6402168c:	mov    ecx,DWORD PTR [esi+0x8]
6402168f:	and    eax,0xfffffffe
64021692:	mov    DWORD PTR [esi],ecx
64021694:	mov    DWORD PTR [esi+0xc],eax
64021697:	mov    eax,DWORD PTR [esi+0xc]
6402169a:	and    DWORD PTR [esi+0x4],0x0
6402169e:	and    DWORD PTR [ebp-0x4],0x0
640216a2:	push   ebx
640216a3:	push   0x2
640216a5:	and    eax,0xffffffef
640216a8:	pop    ebx
640216a9:	or     eax,ebx
640216ab:	test   ax,0x10c
640216af:	mov    DWORD PTR [esi+0xc],eax
640216b2:	jne    0x640216e0
640216b4:	call   0x64019925
640216b9:	add    eax,0x20
640216bc:	cmp    esi,eax
640216be:	je     0x640216cc
640216c0:	call   0x64019925
640216c5:	add    eax,0x40
640216c8:	cmp    esi,eax
640216ca:	jne    0x640216d9
640216cc:	push   DWORD PTR [ebp+0xc]
640216cf:	call   0x6401ea9b
640216d4:	test   eax,eax
640216d6:	pop    ecx
640216d7:	jne    0x640216e0
640216d9:	push   esi
640216da:	call   0x6401ea57
640216df:	pop    ecx
640216e0:	test   WORD PTR [esi+0xc],0x108
640216e6:	push   edi
640216e7:	je     0x64021770
640216ed:	mov    eax,DWORD PTR [esi+0x8]
640216f0:	mov    edi,DWORD PTR [esi]
640216f2:	lea    ecx,[eax+0x2]
640216f5:	mov    DWORD PTR [esi],ecx
640216f7:	mov    ecx,DWORD PTR [esi+0x18]
640216fa:	sub    edi,eax
640216fc:	sub    ecx,ebx
640216fe:	test   edi,edi
64021700:	mov    DWORD PTR [esi+0x4],ecx
64021703:	jle    0x64021722
64021705:	push   edi
64021706:	push   eax
64021707:	push   DWORD PTR [ebp+0xc]
6402170a:	call   0x6401b068
6402170f:	add    esp,0xc
64021712:	mov    DWORD PTR [ebp-0x4],eax
64021715:	jmp    0x64021765
64021717:	or     eax,0x20
6402171a:	mov    DWORD PTR [esi+0xc],eax
6402171d:	jmp    0x64021661
64021722:	mov    ecx,DWORD PTR [ebp+0xc]
64021725:	cmp    ecx,0xffffffff
64021728:	je     0x64021745
6402172a:	cmp    ecx,0xfffffffe
6402172d:	je     0x64021745
6402172f:	mov    eax,ecx
64021731:	and    eax,0x1f
64021734:	mov    edx,ecx
64021736:	sar    edx,0x5
64021739:	shl    eax,0x6
6402173c:	add    eax,DWORD PTR [edx*4+0x6403ab60]
64021743:	jmp    0x6402174a
64021745:	mov    eax,0x64037918
6402174a:	test   BYTE PTR [eax+0x4],0x20
6402174e:	je     0x64021765
64021750:	push   ebx
64021751:	push   0x0
64021753:	push   0x0
64021755:	push   ecx
64021756:	call   0x640195bb
6402175b:	and    eax,edx
6402175d:	add    esp,0x10
64021760:	cmp    eax,0xffffffff
64021763:	je     0x64021792
64021765:	mov    eax,DWORD PTR [esi+0x8]
64021768:	mov    ebx,DWORD PTR [ebp+0x8]
6402176b:	mov    WORD PTR [eax],bx
6402176e:	jmp    0x6402178d
64021770:	push   0x2
64021772:	lea    eax,[ebp-0x4]
64021775:	push   eax
64021776:	push   DWORD PTR [ebp+0xc]
64021779:	mov    edi,ebx
6402177b:	mov    ebx,DWORD PTR [ebp+0x8]
6402177e:	mov    WORD PTR [ebp-0x4],bx
64021782:	call   0x6401b068
64021787:	add    esp,0xc
6402178a:	mov    DWORD PTR [ebp-0x4],eax
6402178d:	cmp    DWORD PTR [ebp-0x4],edi
64021790:	je     0x6402179d
64021792:	or     DWORD PTR [esi+0xc],0x20
64021796:	mov    eax,0xffff
6402179b:	jmp    0x640217a4
6402179d:	mov    eax,ebx
6402179f:	and    eax,0xffff
640217a4:	pop    edi
640217a5:	pop    ebx
640217a6:	pop    esi
640217a7:	leave  
640217a8:	ret    
640217a9:	int3   
640217aa:	int3   
640217ab:	int3   
640217ac:	int3   
640217ad:	int3   
640217ae:	int3   
640217af:	int3   
640217b0:	push   ebp
640217b1:	mov    ebp,esp
640217b3:	push   edi
640217b4:	push   esi
640217b5:	push   ebx
640217b6:	mov    ecx,DWORD PTR [ebp+0x10]
640217b9:	or     ecx,ecx
640217bb:	je     0x6402180a
640217bd:	mov    esi,DWORD PTR [ebp+0x8]
640217c0:	mov    edi,DWORD PTR [ebp+0xc]
640217c3:	mov    bh,0x41
640217c5:	mov    bl,0x5a
640217c7:	mov    dh,0x20
640217c9:	lea    ecx,[ecx+0x0]
640217cc:	mov    ah,BYTE PTR [esi]
640217ce:	or     ah,ah
640217d0:	mov    al,BYTE PTR [edi]
640217d2:	je     0x640217fb
640217d4:	or     al,al
640217d6:	je     0x640217fb
640217d8:	add    esi,0x1
640217db:	add    edi,0x1
640217de:	cmp    ah,bh
640217e0:	jb     0x640217e8
640217e2:	cmp    ah,bl
640217e4:	ja     0x640217e8
640217e6:	add    ah,dh
640217e8:	cmp    al,bh
640217ea:	jb     0x640217f2
640217ec:	cmp    al,bl
640217ee:	ja     0x640217f2
640217f0:	add    al,dh
640217f2:	cmp    ah,al
640217f4:	jne    0x64021801
640217f6:	sub    ecx,0x1
640217f9:	jne    0x640217cc
640217fb:	xor    ecx,ecx
640217fd:	cmp    ah,al
640217ff:	je     0x6402180a
64021801:	mov    ecx,0xffffffff
64021806:	jb     0x6402180a
64021808:	neg    ecx
6402180a:	mov    eax,ecx
6402180c:	pop    ebx
6402180d:	pop    esi
6402180e:	pop    edi
6402180f:	leave  
64021810:	ret    
64021811:	push   ebp
64021812:	mov    ebp,esp
64021814:	sub    esp,0x7c
64021817:	mov    eax,ds:0x64037644
6402181c:	xor    eax,ebp
6402181e:	mov    DWORD PTR [ebp-0x4],eax
64021821:	mov    eax,DWORD PTR [ebp+0x8]
64021824:	push   ebx
64021825:	xor    ebx,ebx
64021827:	push   esi
64021828:	xor    esi,esi
6402182a:	mov    DWORD PTR [ebp-0x7c],eax
6402182d:	mov    eax,DWORD PTR [ebp+0xc]
64021830:	inc    esi
64021831:	xor    ecx,ecx
64021833:	cmp    DWORD PTR [ebp+0x24],ebx
64021836:	push   edi
64021837:	mov    DWORD PTR [ebp-0x70],eax
6402183a:	lea    edi,[ebp-0x20]
6402183d:	mov    DWORD PTR [ebp-0x74],ebx
64021840:	mov    DWORD PTR [ebp-0x68],esi
64021843:	mov    DWORD PTR [ebp-0x4c],ebx
64021846:	mov    DWORD PTR [ebp-0x58],ebx
64021849:	mov    DWORD PTR [ebp-0x5c],ebx
6402184c:	mov    DWORD PTR [ebp-0x60],ebx
6402184f:	mov    DWORD PTR [ebp-0x64],ebx
64021852:	mov    DWORD PTR [ebp-0x50],ebx
64021855:	mov    DWORD PTR [ebp-0x6c],ebx
64021858:	jne    0x64021879
6402185a:	call   0x64016483
6402185f:	push   ebx
64021860:	push   ebx
64021861:	push   ebx
64021862:	push   ebx
64021863:	push   ebx
64021864:	mov    DWORD PTR [eax],0x16
6402186a:	call   0x64013e12
6402186f:	add    esp,0x14
64021872:	xor    eax,eax
64021874:	jmp    0x64021e92
64021879:	mov    edx,DWORD PTR [ebp+0x10]
6402187c:	mov    DWORD PTR [ebp-0x54],edx
6402187f:	mov    al,BYTE PTR [edx]
64021881:	cmp    al,0x20
64021883:	je     0x64021891
64021885:	cmp    al,0x9
64021887:	je     0x64021891
64021889:	cmp    al,0xa
6402188b:	je     0x64021891
6402188d:	cmp    al,0xd
6402188f:	jne    0x64021894
64021891:	inc    edx
64021892:	jmp    0x6402187f
64021894:	mov    bl,0x30
64021896:	mov    al,BYTE PTR [edx]
64021898:	inc    edx
64021899:	cmp    ecx,0xb
6402189c:	ja     0x64021ad1
640218a2:	jmp    DWORD PTR [ecx*4+0x64021ea1]
640218a9:	mov    cl,al
640218ab:	sub    cl,0x31
640218ae:	cmp    cl,0x8
640218b1:	ja     0x640218b9
640218b3:	push   0x3
640218b5:	pop    ecx
640218b6:	dec    edx
640218b7:	jmp    0x64021896
640218b9:	mov    ecx,DWORD PTR [ebp+0x24]
640218bc:	mov    ecx,DWORD PTR [ecx]
640218be:	mov    ecx,DWORD PTR [ecx+0xbc]
640218c4:	mov    ecx,DWORD PTR [ecx]
640218c6:	cmp    al,BYTE PTR [ecx]
640218c8:	jne    0x640218cf
640218ca:	push   0x5
640218cc:	pop    ecx
640218cd:	jmp    0x64021896
640218cf:	movsx  eax,al
640218d2:	sub    eax,0x2b
640218d5:	je     0x640218f4
640218d7:	dec    eax
640218d8:	dec    eax
640218d9:	je     0x640218e8
640218db:	sub    eax,0x3
640218de:	jne    0x64021a6f
640218e4:	mov    ecx,esi
640218e6:	jmp    0x64021896
640218e8:	push   0x2
640218ea:	pop    ecx
640218eb:	mov    DWORD PTR [ebp-0x74],0x8000
640218f2:	jmp    0x64021896
640218f4:	and    DWORD PTR [ebp-0x74],0x0
640218f8:	push   0x2
640218fa:	pop    ecx
640218fb:	jmp    0x64021896
640218fd:	mov    cl,al
640218ff:	sub    cl,0x31
64021902:	cmp    cl,0x8
64021905:	mov    DWORD PTR [ebp-0x58],esi
64021908:	jbe    0x640218b3
6402190a:	mov    ecx,DWORD PTR [ebp+0x24]
6402190d:	mov    ecx,DWORD PTR [ecx]
6402190f:	mov    ecx,DWORD PTR [ecx+0xbc]
64021915:	mov    ecx,DWORD PTR [ecx]
64021917:	cmp    al,BYTE PTR [ecx]
64021919:	jne    0x6402191f
6402191b:	push   0x4
6402191d:	jmp    0x640218cc
6402191f:	cmp    al,0x2b
64021921:	je     0x6402194b
64021923:	cmp    al,0x2d
64021925:	je     0x6402194b
64021927:	cmp    al,bl
64021929:	je     0x640218e4
6402192b:	cmp    al,0x43
6402192d:	jle    0x64021a6f
64021933:	cmp    al,0x45
64021935:	jle    0x64021947
64021937:	cmp    al,0x63
64021939:	jle    0x64021a6f
6402193f:	cmp    al,0x65
64021941:	jg     0x64021a6f
64021947:	push   0x6
64021949:	jmp    0x640218cc
6402194b:	dec    edx
6402194c:	push   0xb
6402194e:	jmp    0x640218cc
64021953:	mov    cl,al
64021955:	sub    cl,0x31
64021958:	cmp    cl,0x8
6402195b:	jbe    0x640218b3
64021961:	mov    ecx,DWORD PTR [ebp+0x24]
64021964:	mov    ecx,DWORD PTR [ecx]
64021966:	mov    ecx,DWORD PTR [ecx+0xbc]
6402196c:	mov    ecx,DWORD PTR [ecx]
6402196e:	cmp    al,BYTE PTR [ecx]
64021970:	je     0x640218ca
64021976:	cmp    al,bl
64021978:	je     0x640218e4
6402197e:	mov    edx,DWORD PTR [ebp-0x54]
64021981:	jmp    0x64021a9a
64021986:	mov    DWORD PTR [ebp-0x58],esi
64021989:	jmp    0x640219a5
6402198b:	cmp    al,0x39
6402198d:	jg     0x640219a9
6402198f:	cmp    DWORD PTR [ebp-0x4c],0x19
64021993:	jae    0x6402199f
64021995:	inc    DWORD PTR [ebp-0x4c]
64021998:	sub    al,bl
6402199a:	mov    BYTE PTR [edi],al
6402199c:	inc    edi
6402199d:	jmp    0x640219a2
6402199f:	inc    DWORD PTR [ebp-0x50]
640219a2:	mov    al,BYTE PTR [edx]
640219a4:	inc    edx
640219a5:	cmp    al,bl
640219a7:	jge    0x6402198b
640219a9:	mov    ecx,DWORD PTR [ebp+0x24]
640219ac:	mov    ecx,DWORD PTR [ecx]
640219ae:	mov    ecx,DWORD PTR [ecx+0xbc]
640219b4:	mov    ecx,DWORD PTR [ecx]
640219b6:	cmp    al,BYTE PTR [ecx]
640219b8:	je     0x6402191b
640219be:	cmp    al,0x2b
640219c0:	je     0x6402194b
640219c2:	cmp    al,0x2d
640219c4:	je     0x6402194b
640219c6:	jmp    0x6402192b
640219cb:	cmp    DWORD PTR [ebp-0x4c],0x0
640219cf:	mov    DWORD PTR [ebp-0x58],esi
640219d2:	mov    DWORD PTR [ebp-0x5c],esi
640219d5:	jne    0x640219fd
640219d7:	jmp    0x640219df
640219d9:	dec    DWORD PTR [ebp-0x50]
640219dc:	mov    al,BYTE PTR [edx]
640219de:	inc    edx
640219df:	cmp    al,bl
640219e1:	je     0x640219d9
640219e3:	jmp    0x640219fd
640219e5:	cmp    al,0x39
640219e7:	jg     0x640219be
640219e9:	cmp    DWORD PTR [ebp-0x4c],0x19
640219ed:	jae    0x640219fa
640219ef:	inc    DWORD PTR [ebp-0x4c]
640219f2:	sub    al,bl
640219f4:	mov    BYTE PTR [edi],al
640219f6:	inc    edi
640219f7:	dec    DWORD PTR [ebp-0x50]
640219fa:	mov    al,BYTE PTR [edx]
640219fc:	inc    edx
640219fd:	cmp    al,bl
640219ff:	jge    0x640219e5
64021a01:	jmp    0x640219be
64021a03:	sub    al,bl
64021a05:	cmp    al,0x9
64021a07:	mov    DWORD PTR [ebp-0x5c],esi
64021a0a:	ja     0x6402197e
64021a10:	push   0x4
64021a12:	jmp    0x640218b5
64021a17:	lea    ecx,[edx-0x2]
64021a1a:	mov    DWORD PTR [ebp-0x54],ecx
64021a1d:	mov    cl,al
64021a1f:	sub    cl,0x31
64021a22:	cmp    cl,0x8
64021a25:	ja     0x64021a2e
64021a27:	push   0x9
64021a29:	jmp    0x640218b5
64021a2e:	movsx  eax,al
64021a31:	sub    eax,0x2b
64021a34:	je     0x64021a56
64021a36:	dec    eax
64021a37:	dec    eax
64021a38:	je     0x64021a4a
64021a3a:	sub    eax,0x3
64021a3d:	jne    0x6402197e
64021a43:	push   0x8
64021a45:	jmp    0x640218cc
64021a4a:	or     DWORD PTR [ebp-0x68],0xffffffff
64021a4e:	push   0x7
64021a50:	pop    ecx
64021a51:	jmp    0x64021896
64021a56:	push   0x7
64021a58:	jmp    0x640218cc
64021a5d:	mov    DWORD PTR [ebp-0x60],esi
64021a60:	jmp    0x64021a65
64021a62:	mov    al,BYTE PTR [edx]
64021a64:	inc    edx
64021a65:	cmp    al,bl
64021a67:	je     0x64021a62
64021a69:	sub    al,0x31
64021a6b:	cmp    al,0x8
64021a6d:	jbe    0x64021a27
64021a6f:	dec    edx
64021a70:	jmp    0x64021a9a
64021a72:	mov    cl,al
64021a74:	sub    cl,0x31
64021a77:	cmp    cl,0x8
64021a7a:	jbe    0x64021a27
64021a7c:	cmp    al,bl
64021a7e:	jmp    0x64021a3d
64021a80:	cmp    DWORD PTR [ebp+0x20],0x0
64021a84:	je     0x64021acd
64021a86:	movsx  eax,al
64021a89:	sub    eax,0x2b
64021a8c:	lea    ecx,[edx-0x1]
64021a8f:	mov    DWORD PTR [ebp-0x54],ecx
64021a92:	je     0x64021a56
64021a94:	dec    eax
64021a95:	dec    eax
64021a96:	je     0x64021a4a
64021a98:	mov    edx,ecx
64021a9a:	cmp    DWORD PTR [ebp-0x58],0x0
64021a9e:	mov    eax,DWORD PTR [ebp-0x70]
64021aa1:	mov    DWORD PTR [eax],edx
64021aa3:	je     0x64021e4d
64021aa9:	push   0x18
64021aab:	pop    eax
64021aac:	cmp    DWORD PTR [ebp-0x4c],eax
64021aaf:	jbe    0x64021ac1
64021ab1:	cmp    BYTE PTR [ebp-0x9],0x5
64021ab5:	jl     0x64021aba
64021ab7:	inc    BYTE PTR [ebp-0x9]
64021aba:	dec    edi
64021abb:	inc    DWORD PTR [ebp-0x50]
64021abe:	mov    DWORD PTR [ebp-0x4c],eax
64021ac1:	cmp    DWORD PTR [ebp-0x4c],0x0
64021ac5:	jbe    0x64021e74
64021acb:	jmp    0x64021b26
64021acd:	push   0xa
64021acf:	pop    ecx
64021ad0:	dec    edx
64021ad1:	cmp    ecx,0xa
64021ad4:	jne    0x64021896
64021ada:	jmp    0x64021a9a
64021adc:	mov    DWORD PTR [ebp-0x60],esi
64021adf:	xor    ecx,ecx
64021ae1:	jmp    0x64021afc
64021ae3:	cmp    al,0x39
64021ae5:	jg     0x64021b07
64021ae7:	imul   ecx,ecx,0xa
64021aea:	movsx  esi,al
64021aed:	lea    ecx,[ecx+esi*1-0x30]
64021af1:	cmp    ecx,0x1450
64021af7:	jg     0x64021b02
64021af9:	mov    al,BYTE PTR [edx]
64021afb:	inc    edx
64021afc:	cmp    al,bl
64021afe:	jge    0x64021ae3
64021b00:	jmp    0x64021b07
64021b02:	mov    ecx,0x1451
64021b07:	mov    DWORD PTR [ebp-0x64],ecx
64021b0a:	jmp    0x64021b17
64021b0c:	cmp    al,0x39
64021b0e:	jg     0x64021a6f
64021b14:	mov    al,BYTE PTR [edx]
64021b16:	inc    edx
64021b17:	cmp    al,bl
64021b19:	jge    0x64021b0c
64021b1b:	jmp    0x64021a6f
64021b20:	dec    DWORD PTR [ebp-0x4c]
64021b23:	inc    DWORD PTR [ebp-0x50]
64021b26:	dec    edi
64021b27:	cmp    BYTE PTR [edi],0x0
64021b2a:	je     0x64021b20
64021b2c:	lea    eax,[ebp-0x3c]
64021b2f:	push   eax
64021b30:	push   DWORD PTR [ebp-0x4c]
64021b33:	lea    eax,[ebp-0x20]
64021b36:	push   eax
64021b37:	call   0x6402089a
64021b3c:	mov    eax,DWORD PTR [ebp-0x64]
64021b3f:	xor    ecx,ecx
64021b41:	add    esp,0xc
64021b44:	cmp    DWORD PTR [ebp-0x68],ecx
64021b47:	jge    0x64021b4b
64021b49:	neg    eax
64021b4b:	add    eax,DWORD PTR [ebp-0x50]
64021b4e:	cmp    DWORD PTR [ebp-0x60],ecx
64021b51:	jne    0x64021b56
64021b53:	add    eax,DWORD PTR [ebp+0x18]
64021b56:	cmp    DWORD PTR [ebp-0x5c],ecx
64021b59:	jne    0x64021b5e
64021b5b:	sub    eax,DWORD PTR [ebp+0x1c]
64021b5e:	cmp    eax,0x1450
64021b63:	jg     0x64021e56
64021b69:	cmp    eax,0xffffebb0
64021b6e:	jl     0x64021e6d
64021b74:	mov    esi,0x640385e0
64021b79:	sub    esi,0x60
64021b7c:	cmp    eax,ecx
64021b7e:	mov    DWORD PTR [ebp-0x54],eax
64021b81:	je     0x64021e3b
64021b87:	jge    0x64021b96
64021b89:	neg    eax
64021b8b:	mov    esi,0x64038740
64021b90:	mov    DWORD PTR [ebp-0x54],eax
64021b93:	sub    esi,0x60
64021b96:	cmp    DWORD PTR [ebp+0x14],ecx
64021b99:	jne    0x64021b9f
64021b9b:	mov    WORD PTR [ebp-0x3c],cx
64021b9f:	cmp    DWORD PTR [ebp-0x54],ecx
64021ba2:	je     0x64021e3b
64021ba8:	mov    eax,DWORD PTR [ebp-0x54]
64021bab:	sar    DWORD PTR [ebp-0x54],0x3
64021baf:	add    esi,0x54
64021bb2:	and    eax,0x7
64021bb5:	test   eax,eax
64021bb7:	mov    DWORD PTR [ebp-0x4c],esi
64021bba:	je     0x64021e31
64021bc0:	imul   eax,eax,0xc
64021bc3:	add    eax,esi
64021bc5:	mov    ebx,eax
64021bc7:	cmp    WORD PTR [ebx],0x8000
64021bcc:	mov    DWORD PTR [ebp-0x70],ebx
64021bcf:	jb     0x64021be5
64021bd1:	mov    esi,ebx
64021bd3:	lea    edi,[ebp-0x48]
64021bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd9:	dec    DWORD PTR [ebp-0x46]
64021bdc:	mov    esi,DWORD PTR [ebp-0x4c]
64021bdf:	lea    ebx,[ebp-0x48]
64021be2:	mov    DWORD PTR [ebp-0x70],ebx
64021be5:	movzx  edx,WORD PTR [ebx+0xa]
64021be9:	mov    ecx,DWORD PTR [ebp-0x32]
64021bec:	xor    eax,eax
64021bee:	mov    DWORD PTR [ebp-0x50],eax
64021bf1:	mov    DWORD PTR [ebp-0x2c],eax
64021bf4:	mov    DWORD PTR [ebp-0x28],eax
64021bf7:	mov    DWORD PTR [ebp-0x24],eax
64021bfa:	mov    eax,edx
64021bfc:	mov    edi,0x7fff
64021c01:	xor    eax,ecx
64021c03:	and    ecx,edi
64021c05:	and    edx,edi
64021c07:	and    eax,0x8000
64021c0c:	cmp    cx,0x7fff
64021c11:	lea    edi,[edx+ecx*1]
64021c14:	movzx  edi,di
64021c17:	jae    0x64021e17
64021c1d:	cmp    dx,0x7fff
64021c22:	jae    0x64021e17
64021c28:	cmp    di,0xbffd
64021c2d:	ja     0x64021e17
64021c33:	cmp    di,0x3fbf
64021c38:	ja     0x64021c47
64021c3a:	xor    eax,eax
64021c3c:	mov    DWORD PTR [ebp-0x38],eax
64021c3f:	mov    DWORD PTR [ebp-0x3c],eax
64021c42:	jmp    0x64021e2e
64021c47:	test   cx,cx
64021c4a:	jne    0x64021c6b
64021c4c:	inc    edi
64021c4d:	test   DWORD PTR [ebp-0x34],0x7fffffff
64021c54:	jne    0x64021c6b
64021c56:	cmp    DWORD PTR [ebp-0x38],0x0
64021c5a:	jne    0x64021c6b
64021c5c:	cmp    DWORD PTR [ebp-0x3c],0x0
64021c60:	jne    0x64021c6b
64021c62:	and    WORD PTR [ebp-0x32],cx
64021c66:	jmp    0x64021e31
64021c6b:	xor    ecx,ecx
64021c6d:	cmp    dx,cx
64021c70:	jne    0x64021c93
64021c72:	inc    edi
64021c73:	test   DWORD PTR [ebx+0x8],0x7fffffff
64021c7a:	jne    0x64021c93
64021c7c:	cmp    DWORD PTR [ebx+0x4],ecx
64021c7f:	jne    0x64021c93
64021c81:	cmp    DWORD PTR [ebx],ecx
64021c83:	jne    0x64021c93
64021c85:	mov    DWORD PTR [ebp-0x34],ecx
64021c88:	mov    DWORD PTR [ebp-0x38],ecx
64021c8b:	mov    DWORD PTR [ebp-0x3c],ecx
64021c8e:	jmp    0x64021e31
64021c93:	and    DWORD PTR [ebp-0x68],ecx
64021c96:	lea    esi,[ebp-0x28]
64021c99:	mov    DWORD PTR [ebp-0x58],0x5
64021ca0:	mov    ecx,DWORD PTR [ebp-0x68]
64021ca3:	mov    edx,DWORD PTR [ebp-0x58]
64021ca6:	add    ecx,ecx
64021ca8:	test   edx,edx
64021caa:	mov    DWORD PTR [ebp-0x64],edx
64021cad:	jle    0x64021d04
64021caf:	lea    ecx,[ebp+ecx*1-0x3c]
64021cb3:	add    ebx,0x8
64021cb6:	mov    DWORD PTR [ebp-0x5c],ecx
64021cb9:	mov    DWORD PTR [ebp-0x60],ebx
64021cbc:	mov    ecx,DWORD PTR [ebp-0x60]
64021cbf:	mov    edx,DWORD PTR [ebp-0x5c]
64021cc2:	movzx  edx,WORD PTR [edx]
64021cc5:	movzx  ecx,WORD PTR [ecx]
64021cc8:	and    DWORD PTR [ebp-0x78],0x0
64021ccc:	imul   ecx,edx
64021ccf:	mov    edx,DWORD PTR [esi-0x4]
64021cd2:	lea    ebx,[edx+ecx*1]
64021cd5:	cmp    ebx,edx
64021cd7:	jb     0x64021cdd
64021cd9:	cmp    ebx,ecx
64021cdb:	jae    0x64021ce4
64021cdd:	mov    DWORD PTR [ebp-0x78],0x1
64021ce4:	cmp    DWORD PTR [ebp-0x78],0x0
64021ce8:	mov    DWORD PTR [esi-0x4],ebx
64021ceb:	je     0x64021cf0
64021ced:	inc    WORD PTR [esi]
64021cf0:	add    DWORD PTR [ebp-0x5c],0x2
64021cf4:	sub    DWORD PTR [ebp-0x60],0x2
64021cf8:	dec    DWORD PTR [ebp-0x64]
64021cfb:	cmp    DWORD PTR [ebp-0x64],0x0
64021cff:	jg     0x64021cbc
64021d01:	mov    ebx,DWORD PTR [ebp-0x70]
64021d04:	inc    esi
64021d05:	inc    esi
64021d06:	inc    DWORD PTR [ebp-0x68]
64021d09:	dec    DWORD PTR [ebp-0x58]
64021d0c:	cmp    DWORD PTR [ebp-0x58],0x0
64021d10:	jg     0x64021ca0
64021d12:	add    edi,0xc002
64021d18:	test   di,di
64021d1b:	jle    0x64021d58
64021d1d:	test   DWORD PTR [ebp-0x24],0x80000000
64021d24:	jne    0x64021d53
64021d26:	mov    esi,DWORD PTR [ebp-0x28]
64021d29:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d2c:	shl    DWORD PTR [ebp-0x2c],1
64021d2f:	shr    ecx,0x1f
64021d32:	mov    edx,esi
64021d34:	add    esi,esi
64021d36:	or     esi,ecx
64021d38:	mov    ecx,DWORD PTR [ebp-0x24]
64021d3b:	shr    edx,0x1f
64021d3e:	add    ecx,ecx
64021d40:	or     ecx,edx
64021d42:	add    edi,0xffff
64021d48:	test   di,di
64021d4b:	mov    DWORD PTR [ebp-0x28],esi
64021d4e:	mov    DWORD PTR [ebp-0x24],ecx
64021d51:	jg     0x64021d1d
64021d53:	test   di,di
64021d56:	jg     0x64021da5
64021d58:	add    edi,0xffff
64021d5e:	test   di,di
64021d61:	jge    0x64021da5
64021d63:	mov    ecx,edi
64021d65:	neg    ecx
64021d67:	movzx  esi,cx
64021d6a:	add    edi,esi
64021d6c:	test   BYTE PTR [ebp-0x2c],0x1
64021d70:	je     0x64021d75
64021d72:	inc    DWORD PTR [ebp-0x50]
64021d75:	mov    ecx,DWORD PTR [ebp-0x24]
64021d78:	mov    ebx,DWORD PTR [ebp-0x28]
64021d7b:	mov    edx,DWORD PTR [ebp-0x28]
64021d7e:	shr    DWORD PTR [ebp-0x24],1
64021d81:	shl    ecx,0x1f
64021d84:	shr    ebx,1
64021d86:	or     ebx,ecx
64021d88:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d8b:	shl    edx,0x1f
64021d8e:	shr    ecx,1
64021d90:	or     ecx,edx
64021d92:	dec    esi
64021d93:	mov    DWORD PTR [ebp-0x28],ebx
64021d96:	mov    DWORD PTR [ebp-0x2c],ecx
64021d99:	jne    0x64021d6c
64021d9b:	cmp    DWORD PTR [ebp-0x50],esi
64021d9e:	je     0x64021da5
64021da0:	or     WORD PTR [ebp-0x2c],0x1
64021da5:	cmp    WORD PTR [ebp-0x2c],0x8000
64021dab:	ja     0x64021dbe
64021dad:	mov    ecx,DWORD PTR [ebp-0x2c]
64021db0:	and    ecx,0x1ffff
64021db6:	cmp    ecx,0x18000
64021dbc:	jne    0x64021df1
64021dbe:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
64021dc2:	jne    0x64021dee
64021dc4:	and    DWORD PTR [ebp-0x2a],0x0
64021dc8:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64021dcc:	jne    0x64021de9
64021dce:	and    DWORD PTR [ebp-0x26],0x0
64021dd2:	cmp    WORD PTR [ebp-0x22],0xffff
64021dd8:	jne    0x64021de3
64021dda:	mov    WORD PTR [ebp-0x22],0x8000
64021de0:	inc    edi
64021de1:	jmp    0x64021df1
64021de3:	inc    WORD PTR [ebp-0x22]
64021de7:	jmp    0x64021df1
64021de9:	inc    DWORD PTR [ebp-0x26]
64021dec:	jmp    0x64021df1
64021dee:	inc    DWORD PTR [ebp-0x2a]
64021df1:	cmp    di,0x7fff
64021df6:	mov    esi,DWORD PTR [ebp-0x4c]
64021df9:	jae    0x64021e17
64021dfb:	mov    cx,WORD PTR [ebp-0x2a]
64021dff:	mov    WORD PTR [ebp-0x3c],cx
64021e03:	mov    ecx,DWORD PTR [ebp-0x28]
64021e06:	mov    DWORD PTR [ebp-0x3a],ecx
64021e09:	mov    ecx,DWORD PTR [ebp-0x24]
64021e0c:	or     edi,eax
64021e0e:	mov    DWORD PTR [ebp-0x36],ecx
64021e11:	mov    WORD PTR [ebp-0x32],di
64021e15:	jmp    0x64021e31
64021e17:	neg    ax
64021e1a:	sbb    eax,eax
64021e1c:	and    DWORD PTR [ebp-0x38],0x0
64021e20:	and    eax,0x80000000
64021e25:	add    eax,0x7fff8000
64021e2a:	and    DWORD PTR [ebp-0x3c],0x0
64021e2e:	mov    DWORD PTR [ebp-0x34],eax
64021e31:	cmp    DWORD PTR [ebp-0x54],0x0
64021e35:	jne    0x64021ba8
64021e3b:	mov    eax,DWORD PTR [ebp-0x34]
64021e3e:	movzx  ecx,WORD PTR [ebp-0x3c]
64021e42:	mov    esi,DWORD PTR [ebp-0x3a]
64021e45:	mov    edx,DWORD PTR [ebp-0x36]
64021e48:	shr    eax,0x10
64021e4b:	jmp    0x64021e7c
64021e4d:	mov    DWORD PTR [ebp-0x6c],0x4
64021e54:	jmp    0x64021e74
64021e56:	xor    esi,esi
64021e58:	mov    eax,0x7fff
64021e5d:	mov    edx,0x80000000
64021e62:	xor    ecx,ecx
64021e64:	mov    DWORD PTR [ebp-0x6c],0x2
64021e6b:	jmp    0x64021e7c
64021e6d:	mov    DWORD PTR [ebp-0x6c],0x1
64021e74:	xor    ecx,ecx
64021e76:	xor    eax,eax
64021e78:	xor    edx,edx
64021e7a:	xor    esi,esi
64021e7c:	mov    edi,DWORD PTR [ebp-0x7c]
64021e7f:	or     eax,DWORD PTR [ebp-0x74]
64021e82:	mov    WORD PTR [edi],cx
64021e85:	mov    WORD PTR [edi+0xa],ax
64021e89:	mov    eax,DWORD PTR [ebp-0x6c]
64021e8c:	mov    DWORD PTR [edi+0x2],esi
64021e8f:	mov    DWORD PTR [edi+0x6],edx
64021e92:	mov    ecx,DWORD PTR [ebp-0x4]
64021e95:	pop    edi
64021e96:	pop    esi
64021e97:	xor    ecx,ebp
64021e99:	pop    ebx
64021e9a:	call   0x64013cc6
64021e9f:	leave  
64021ea0:	ret    
64021ea1:	test   eax,0xfd640218
64021ea6:	sbb    BYTE PTR [edx],al
64021ea8:	fs push ebx
64021eaa:	sbb    DWORD PTR [edx],eax
64021eac:	xchg   BYTE PTR fs:[ecx],bl
64021eaf:	add    ah,BYTE PTR [ebx+ecx*8+0x19]
64021eb3:	add    ah,BYTE PTR [ebx+eax*1+0x1a]
64021eb7:	add    ah,BYTE PTR [edi+edx*1+0x1a]
64021ebb:	add    ah,BYTE PTR [edx+esi*2+0x1a]
64021ebf:	add    ah,BYTE PTR [ebp+ebx*2+0x1a]
64021ec3:	add    ah,BYTE PTR [esp+ebx*8+0x1a]
64021ec7:	add    ah,BYTE PTR [ecx+edx*8+0x1a]
64021ecb:	add    ah,BYTE PTR [eax+eax*4+0x1a]
64021ecf:	add    ah,BYTE PTR [ebp+edx*2-0x75]
64021ed3:	in     al,dx
64021ed4:	sub    esp,0x74
64021ed7:	mov    eax,ds:0x64037644
64021edc:	xor    eax,ebp
64021ede:	mov    DWORD PTR [ebp-0x4],eax
64021ee1:	push   ebx
64021ee2:	mov    ebx,DWORD PTR [ebp+0x1c]
64021ee5:	push   esi
64021ee6:	push   edi
64021ee7:	lea    esi,[ebp+0x8]
64021eea:	lea    edi,[ebp-0x10]
64021eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021eef:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021ef1:	mov    edx,DWORD PTR [ebp-0x8]
64021ef4:	mov    ecx,edx
64021ef6:	mov    eax,0x8000
64021efb:	and    ecx,eax
64021efd:	and    edx,0x7fff
64021f03:	test   cx,cx
64021f06:	mov    DWORD PTR [ebp-0x60],ebx
64021f09:	mov    BYTE PTR [ebp-0x30],0xcc
64021f0d:	mov    BYTE PTR [ebp-0x2f],0xcc
64021f11:	mov    BYTE PTR [ebp-0x2e],0xcc
64021f15:	mov    BYTE PTR [ebp-0x2d],0xcc
64021f19:	mov    BYTE PTR [ebp-0x2c],0xcc
64021f1d:	mov    BYTE PTR [ebp-0x2b],0xcc
64021f21:	mov    BYTE PTR [ebp-0x2a],0xcc
64021f25:	mov    BYTE PTR [ebp-0x29],0xcc
64021f29:	mov    BYTE PTR [ebp-0x28],0xcc
64021f2d:	mov    BYTE PTR [ebp-0x27],0xcc
64021f31:	mov    BYTE PTR [ebp-0x26],0xfb
64021f35:	mov    BYTE PTR [ebp-0x25],0x3f
64021f39:	mov    DWORD PTR [ebp-0x74],0x1
64021f40:	mov    DWORD PTR [ebp-0x6c],ecx
64021f43:	je     0x64021f4b
64021f45:	mov    BYTE PTR [ebx+0x2],0x2d
64021f49:	jmp    0x64021f4f
64021f4b:	mov    BYTE PTR [ebx+0x2],0x20
64021f4f:	test   dx,dx
64021f52:	mov    esi,DWORD PTR [ebp-0xc]
64021f55:	mov    edi,DWORD PTR [ebp-0x10]
64021f58:	jne    0x64021f88
64021f5a:	test   esi,esi
64021f5c:	jne    0x64021f88
64021f5e:	test   edi,edi
64021f60:	jne    0x64021f88
64021f62:	and    WORD PTR [ebx],di
64021f65:	cmp    cx,ax
64021f68:	setne  al
64021f6b:	dec    al
64021f6d:	and    al,0xd
64021f6f:	add    al,0x20
64021f71:	mov    BYTE PTR [ebx+0x2],al
64021f74:	mov    BYTE PTR [ebx+0x3],0x1
64021f78:	mov    BYTE PTR [ebx+0x4],0x30
64021f7c:	mov    BYTE PTR [ebx+0x5],0x0
64021f80:	xor    eax,eax
64021f82:	inc    eax
64021f83:	jmp    0x6402274f
64021f88:	cmp    dx,0x7fff
64021f8d:	jne    0x64022031
64021f93:	mov    eax,0x80000000
64021f98:	cmp    esi,eax
64021f9a:	mov    WORD PTR [ebx],0x1
64021f9f:	jne    0x64021fa5
64021fa1:	test   edi,edi
64021fa3:	je     0x64021fb4
64021fa5:	test   esi,0x40000000
64021fab:	jne    0x64021fb4
64021fad:	push   0x64029580
64021fb2:	jmp    0x64022005
64021fb4:	test   cx,cx
64021fb7:	je     0x64021fcc
64021fb9:	cmp    esi,0xc0000000
64021fbf:	jne    0x64021fcc
64021fc1:	test   edi,edi
64021fc3:	jne    0x64022000
64021fc5:	push   0x64029578
64021fca:	jmp    0x64021fd9
64021fcc:	cmp    esi,eax
64021fce:	jne    0x64022000
64021fd0:	test   edi,edi
64021fd2:	jne    0x64022000
64021fd4:	push   0x64029570
64021fd9:	lea    eax,[ebx+0x4]
64021fdc:	push   0x16
64021fde:	push   eax
64021fdf:	call   0x640162e1
64021fe4:	add    esp,0xc
64021fe7:	xor    esi,esi
64021fe9:	test   eax,eax
64021feb:	je     0x64021ffa
64021fed:	push   esi
64021fee:	push   esi
64021fef:	push   esi
64021ff0:	push   esi
64021ff1:	push   esi
64021ff2:	call   0x64013d16
64021ff7:	add    esp,0x14
64021ffa:	mov    BYTE PTR [ebx+0x3],0x5
64021ffe:	jmp    0x6402202a
64022000:	push   0x64029568
64022005:	lea    eax,[ebx+0x4]
64022008:	push   0x16
6402200a:	push   eax
6402200b:	call   0x640162e1
64022010:	add    esp,0xc
64022013:	xor    esi,esi
64022015:	test   eax,eax
64022017:	je     0x64022026
64022019:	push   esi
6402201a:	push   esi
6402201b:	push   esi
6402201c:	push   esi
6402201d:	push   esi
6402201e:	call   0x64013d16
64022023:	add    esp,0x14
64022026:	mov    BYTE PTR [ebx+0x3],0x6
6402202a:	xor    eax,eax
6402202c:	jmp    0x6402274f
64022031:	movzx  ecx,dx
64022034:	mov    ebx,ecx
64022036:	imul   ecx,ecx,0x4d10
6402203c:	shr    ebx,0x8
6402203f:	mov    eax,esi
64022041:	shr    eax,0x18
64022044:	lea    eax,[ebx+eax*2]
64022047:	imul   eax,eax,0x4d
6402204a:	lea    eax,[eax+ecx*1-0x134312f4]
64022051:	sar    eax,0x10
64022054:	movzx  ecx,ax
64022057:	movsx  ebx,cx
6402205a:	mov    DWORD PTR [ebp-0x4c],ecx
6402205d:	xor    eax,eax
6402205f:	mov    ecx,0x640385e0
64022064:	neg    ebx
64022066:	sub    ecx,0x60
64022069:	cmp    ebx,eax
6402206b:	mov    WORD PTR [ebp-0x16],dx
6402206f:	mov    DWORD PTR [ebp-0x1a],esi
64022072:	mov    DWORD PTR [ebp-0x1e],edi
64022075:	mov    WORD PTR [ebp-0x20],ax
64022079:	mov    DWORD PTR [ebp-0x68],ecx
6402207c:	je     0x64022330
64022082:	jge    0x64022091
64022084:	mov    ecx,0x64038740
64022089:	neg    ebx
6402208b:	sub    ecx,0x60
6402208e:	mov    DWORD PTR [ebp-0x68],ecx
64022091:	cmp    ebx,eax
64022093:	je     0x64022330
64022099:	add    DWORD PTR [ebp-0x68],0x54
6402209d:	mov    ecx,ebx
6402209f:	and    ecx,0x7
640220a2:	sar    ebx,0x3
640220a5:	test   ecx,ecx
640220a7:	je     0x64022326
640220ad:	imul   ecx,ecx,0xc
640220b0:	add    ecx,DWORD PTR [ebp-0x68]
640220b3:	cmp    WORD PTR [ecx],0x8000
640220b8:	mov    DWORD PTR [ebp-0x64],ecx
640220bb:	jb     0x640220d0
640220bd:	mov    esi,ecx
640220bf:	lea    edi,[ebp-0x3c]
640220c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c4:	lea    eax,[ebp-0x3c]
640220c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c8:	dec    DWORD PTR [ebp-0x3a]
640220cb:	mov    DWORD PTR [ebp-0x64],eax
640220ce:	mov    ecx,eax
640220d0:	movzx  edi,WORD PTR [ecx+0xa]
640220d4:	mov    edx,DWORD PTR [ebp-0x16]
640220d7:	xor    eax,eax
640220d9:	mov    ecx,edi
640220db:	mov    esi,0x7fff
640220e0:	xor    ecx,edx
640220e2:	and    edx,esi
640220e4:	and    edi,esi
640220e6:	mov    DWORD PTR [ebp-0x48],eax
640220e9:	mov    DWORD PTR [ebp-0x10],eax
640220ec:	mov    DWORD PTR [ebp-0xc],eax
640220ef:	mov    DWORD PTR [ebp-0x8],eax
640220f2:	and    ecx,0x8000
640220f8:	cmp    dx,si
640220fb:	lea    eax,[edi+edx*1]
640220fe:	movzx  eax,ax
64022101:	jae    0x6402230a
64022107:	cmp    di,si
6402210a:	jae    0x6402230a
64022110:	cmp    ax,0xbffd
64022114:	ja     0x6402230a
6402211a:	cmp    ax,0x3fbf
6402211e:	ja     0x64022130
64022120:	xor    eax,eax
64022122:	mov    DWORD PTR [ebp-0x18],eax
64022125:	mov    DWORD PTR [ebp-0x1c],eax
64022128:	mov    DWORD PTR [ebp-0x20],eax
6402212b:	jmp    0x64022326
64022130:	xor    esi,esi
64022132:	cmp    dx,si
64022135:	jne    0x64022154
64022137:	inc    eax
64022138:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402213f:	jne    0x64022154
64022141:	cmp    DWORD PTR [ebp-0x1c],esi
64022144:	jne    0x64022154
64022146:	cmp    DWORD PTR [ebp-0x20],esi
64022149:	jne    0x64022154
6402214b:	mov    WORD PTR [ebp-0x16],si
6402214f:	jmp    0x64022326
64022154:	cmp    di,si
64022157:	jne    0x6402217d
64022159:	mov    edx,DWORD PTR [ebp-0x64]
6402215c:	inc    eax
6402215d:	test   DWORD PTR [edx+0x8],0x7fffffff
64022164:	jne    0x6402217d
64022166:	cmp    DWORD PTR [edx+0x4],esi
64022169:	jne    0x6402217d
6402216b:	cmp    DWORD PTR [edx],esi
6402216d:	jne    0x6402217d
6402216f:	mov    DWORD PTR [ebp-0x18],esi
64022172:	mov    DWORD PTR [ebp-0x1c],esi
64022175:	mov    DWORD PTR [ebp-0x20],esi
64022178:	jmp    0x64022326
6402217d:	lea    edi,[ebp-0xc]
64022180:	mov    DWORD PTR [ebp-0x5c],esi
64022183:	mov    DWORD PTR [ebp-0x44],edi
64022186:	mov    DWORD PTR [ebp-0x40],0x5
6402218d:	mov    edx,DWORD PTR [ebp-0x5c]
64022190:	mov    esi,DWORD PTR [ebp-0x40]
64022193:	add    edx,edx
64022195:	test   esi,esi
64022197:	mov    DWORD PTR [ebp-0x50],esi
6402219a:	jle    0x640221f4
6402219c:	lea    edx,[ebp+edx*1-0x20]
640221a0:	mov    DWORD PTR [ebp-0x58],edx
640221a3:	mov    edx,DWORD PTR [ebp-0x64]
640221a6:	add    edx,0x8
640221a9:	mov    DWORD PTR [ebp-0x54],edx
640221ac:	mov    edx,DWORD PTR [ebp-0x58]
640221af:	mov    esi,DWORD PTR [ebp-0x54]
640221b2:	movzx  esi,WORD PTR [esi]
640221b5:	movzx  edx,WORD PTR [edx]
640221b8:	mov    edi,DWORD PTR [edi-0x4]
640221bb:	imul   edx,esi
640221be:	and    DWORD PTR [ebp-0x70],0x0
640221c2:	lea    esi,[edi+edx*1]
640221c5:	cmp    esi,edi
640221c7:	jb     0x640221cd
640221c9:	cmp    esi,edx
640221cb:	jae    0x640221d4
640221cd:	mov    DWORD PTR [ebp-0x70],0x1
640221d4:	cmp    DWORD PTR [ebp-0x70],0x0
640221d8:	mov    edi,DWORD PTR [ebp-0x44]
640221db:	mov    DWORD PTR [edi-0x4],esi
640221de:	je     0x640221e3
640221e0:	inc    WORD PTR [edi]
640221e3:	add    DWORD PTR [ebp-0x58],0x2
640221e7:	sub    DWORD PTR [ebp-0x54],0x2
640221eb:	dec    DWORD PTR [ebp-0x50]
640221ee:	cmp    DWORD PTR [ebp-0x50],0x0
640221f2:	jg     0x640221ac
640221f4:	inc    edi
640221f5:	inc    edi
640221f6:	inc    DWORD PTR [ebp-0x5c]
640221f9:	dec    DWORD PTR [ebp-0x40]
640221fc:	cmp    DWORD PTR [ebp-0x40],0x0
64022200:	mov    DWORD PTR [ebp-0x44],edi
64022203:	jg     0x6402218d
64022205:	add    eax,0xc002
6402220a:	test   ax,ax
6402220d:	jle    0x6402224a
6402220f:	test   DWORD PTR [ebp-0x8],0x80000000
64022216:	jne    0x64022245
64022218:	mov    edx,DWORD PTR [ebp-0x10]
6402221b:	mov    edi,DWORD PTR [ebp-0xc]
6402221e:	mov    esi,DWORD PTR [ebp-0xc]
64022221:	shl    DWORD PTR [ebp-0x10],1
64022224:	shr    edx,0x1f
64022227:	add    edi,edi
64022229:	or     edi,edx
6402222b:	mov    edx,DWORD PTR [ebp-0x8]
6402222e:	shr    esi,0x1f
64022231:	add    edx,edx
64022233:	or     edx,esi
64022235:	add    eax,0xffff
6402223a:	test   ax,ax
6402223d:	mov    DWORD PTR [ebp-0xc],edi
64022240:	mov    DWORD PTR [ebp-0x8],edx
64022243:	jg     0x6402220f
64022245:	test   ax,ax
64022248:	jg     0x6402229c
6402224a:	add    eax,0xffff
6402224f:	test   ax,ax
64022252:	jge    0x6402229c
64022254:	mov    edx,eax
64022256:	neg    edx
64022258:	movzx  edx,dx
6402225b:	mov    DWORD PTR [ebp-0x44],edx
6402225e:	add    eax,edx
64022260:	test   BYTE PTR [ebp-0x10],0x1
64022264:	je     0x64022269
64022266:	inc    DWORD PTR [ebp-0x48]
64022269:	mov    edx,DWORD PTR [ebp-0x8]
6402226c:	mov    edi,DWORD PTR [ebp-0xc]
6402226f:	mov    esi,DWORD PTR [ebp-0xc]
64022272:	shr    DWORD PTR [ebp-0x8],1
64022275:	shl    edx,0x1f
64022278:	shr    edi,1
6402227a:	or     edi,edx
6402227c:	mov    edx,DWORD PTR [ebp-0x10]
6402227f:	shl    esi,0x1f
64022282:	shr    edx,1
64022284:	or     edx,esi
64022286:	dec    DWORD PTR [ebp-0x44]
64022289:	mov    DWORD PTR [ebp-0xc],edi
6402228c:	mov    DWORD PTR [ebp-0x10],edx
6402228f:	jne    0x64022260
64022291:	cmp    DWORD PTR [ebp-0x48],0x0
64022295:	je     0x6402229c
64022297:	or     WORD PTR [ebp-0x10],0x1
6402229c:	cmp    WORD PTR [ebp-0x10],0x8000
640222a2:	ja     0x640222b5
640222a4:	mov    edx,DWORD PTR [ebp-0x10]
640222a7:	and    edx,0x1ffff
640222ad:	cmp    edx,0x18000
640222b3:	jne    0x640222e8
640222b5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640222b9:	jne    0x640222e5
640222bb:	and    DWORD PTR [ebp-0xe],0x0
640222bf:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640222c3:	jne    0x640222e0
640222c5:	and    DWORD PTR [ebp-0xa],0x0
640222c9:	cmp    WORD PTR [ebp-0x6],0xffff
640222cf:	jne    0x640222da
640222d1:	mov    WORD PTR [ebp-0x6],0x8000
640222d7:	inc    eax
640222d8:	jmp    0x640222e8
640222da:	inc    WORD PTR [ebp-0x6]
640222de:	jmp    0x640222e8
640222e0:	inc    DWORD PTR [ebp-0xa]
640222e3:	jmp    0x640222e8
640222e5:	inc    DWORD PTR [ebp-0xe]
640222e8:	cmp    ax,0x7fff
640222ec:	jae    0x6402230a
640222ee:	mov    dx,WORD PTR [ebp-0xe]
640222f2:	mov    WORD PTR [ebp-0x20],dx
640222f6:	mov    edx,DWORD PTR [ebp-0xc]
640222f9:	mov    DWORD PTR [ebp-0x1e],edx
640222fc:	mov    edx,DWORD PTR [ebp-0x8]
640222ff:	or     eax,ecx
64022301:	mov    DWORD PTR [ebp-0x1a],edx
64022304:	mov    WORD PTR [ebp-0x16],ax
64022308:	jmp    0x64022326
6402230a:	neg    cx
6402230d:	sbb    ecx,ecx
6402230f:	and    DWORD PTR [ebp-0x1c],0x0
64022313:	and    ecx,0x80000000
64022319:	add    ecx,0x7fff8000
6402231f:	and    DWORD PTR [ebp-0x20],0x0
64022323:	mov    DWORD PTR [ebp-0x18],ecx
64022326:	test   ebx,ebx
64022328:	jne    0x64022099
6402232e:	xor    eax,eax
64022330:	mov    ecx,DWORD PTR [ebp-0x18]
64022333:	shr    ecx,0x10
64022336:	cmp    cx,0x3fff
6402233b:	mov    ebx,0x7fff
64022340:	jb     0x6402258e
64022346:	mov    esi,DWORD PTR [ebp-0x26]
64022349:	inc    DWORD PTR [ebp-0x4c]
6402234c:	movzx  edx,cx
6402234f:	mov    ecx,esi
64022351:	xor    ecx,edx
64022353:	and    edx,ebx
64022355:	and    esi,ebx
64022357:	and    ecx,0x8000
6402235d:	cmp    dx,bx
64022360:	lea    edi,[esi+edx*1]
64022363:	mov    DWORD PTR [ebp-0x58],eax
64022366:	mov    DWORD PTR [ebp-0x10],eax
64022369:	mov    DWORD PTR [ebp-0xc],eax
6402236c:	mov    DWORD PTR [ebp-0x8],eax
6402236f:	movzx  edi,di
64022372:	jae    0x64022574
64022378:	cmp    si,bx
6402237b:	jae    0x64022574
64022381:	cmp    di,0xbffd
64022386:	ja     0x64022574
6402238c:	cmp    di,0x3fbf
64022391:	ja     0x6402239b
64022393:	mov    DWORD PTR [ebp-0x18],eax
64022396:	jmp    0x64022588
6402239b:	cmp    dx,ax
6402239e:	jne    0x640223bd
640223a0:	inc    edi
640223a1:	test   DWORD PTR [ebp-0x18],0x7fffffff
640223a8:	jne    0x640223bd
640223aa:	cmp    DWORD PTR [ebp-0x1c],eax
640223ad:	jne    0x640223bd
640223af:	cmp    DWORD PTR [ebp-0x20],eax
640223b2:	jne    0x640223bd
640223b4:	mov    WORD PTR [ebp-0x16],ax
640223b8:	jmp    0x6402258e
640223bd:	cmp    si,ax
640223c0:	jne    0x640223d6
640223c2:	inc    edi
640223c3:	test   DWORD PTR [ebp-0x28],0x7fffffff
640223ca:	jne    0x640223d6
640223cc:	cmp    DWORD PTR [ebp-0x2c],eax
640223cf:	jne    0x640223d6
640223d1:	cmp    DWORD PTR [ebp-0x30],eax
640223d4:	je     0x64022393
640223d6:	and    DWORD PTR [ebp-0x54],0x0
640223da:	lea    eax,[ebp-0xc]
640223dd:	mov    DWORD PTR [ebp-0x40],0x5
640223e4:	mov    edx,DWORD PTR [ebp-0x54]
640223e7:	mov    esi,DWORD PTR [ebp-0x40]
640223ea:	add    edx,edx
640223ec:	test   esi,esi
640223ee:	mov    DWORD PTR [ebp-0x50],esi
640223f1:	jle    0x64022445
640223f3:	lea    esi,[ebp-0x28]
640223f6:	lea    edx,[ebp+edx*1-0x20]
640223fa:	mov    DWORD PTR [ebp-0x5c],esi
640223fd:	mov    DWORD PTR [ebp-0x48],edx
64022400:	mov    edx,DWORD PTR [ebp-0x5c]
64022403:	mov    esi,DWORD PTR [ebp-0x48]
64022406:	movzx  esi,WORD PTR [esi]
64022409:	movzx  edx,WORD PTR [edx]
6402240c:	and    DWORD PTR [ebp-0x44],0x0
64022410:	imul   edx,esi
64022413:	mov    esi,DWORD PTR [eax-0x4]
64022416:	lea    ebx,[esi+edx*1]
64022419:	cmp    ebx,esi
6402241b:	jb     0x64022421
6402241d:	cmp    ebx,edx
6402241f:	jae    0x64022428
64022421:	mov    DWORD PTR [ebp-0x44],0x1
64022428:	cmp    DWORD PTR [ebp-0x44],0x0
6402242c:	mov    DWORD PTR [eax-0x4],ebx
6402242f:	je     0x64022434
64022431:	inc    WORD PTR [eax]
64022434:	add    DWORD PTR [ebp-0x48],0x2
64022438:	sub    DWORD PTR [ebp-0x5c],0x2
6402243c:	dec    DWORD PTR [ebp-0x50]
6402243f:	cmp    DWORD PTR [ebp-0x50],0x0
64022443:	jg     0x64022400
64022445:	inc    eax
64022446:	inc    eax
64022447:	inc    DWORD PTR [ebp-0x54]
6402244a:	dec    DWORD PTR [ebp-0x40]
6402244d:	cmp    DWORD PTR [ebp-0x40],0x0
64022451:	jg     0x640223e4
64022453:	add    edi,0xc002
64022459:	xor    eax,eax
6402245b:	cmp    di,ax
6402245e:	jle    0x6402249c
64022460:	test   DWORD PTR [ebp-0x8],0x80000000
64022467:	jne    0x64022497
64022469:	mov    edx,DWORD PTR [ebp-0x10]
6402246c:	mov    ebx,DWORD PTR [ebp-0xc]
6402246f:	mov    esi,DWORD PTR [ebp-0xc]
64022472:	shl    DWORD PTR [ebp-0x10],1
64022475:	shr    edx,0x1f
64022478:	add    ebx,ebx
6402247a:	or     ebx,edx
6402247c:	mov    edx,DWORD PTR [ebp-0x8]
6402247f:	shr    esi,0x1f
64022482:	add    edx,edx
64022484:	or     edx,esi
64022486:	add    edi,0xffff
6402248c:	cmp    di,ax
6402248f:	mov    DWORD PTR [ebp-0xc],ebx
64022492:	mov    DWORD PTR [ebp-0x8],edx
64022495:	jg     0x64022460
64022497:	cmp    di,ax
6402249a:	jg     0x640224e9
6402249c:	add    edi,0xffff
640224a2:	cmp    di,ax
640224a5:	jge    0x640224e9
640224a7:	mov    eax,edi
640224a9:	neg    eax
640224ab:	movzx  eax,ax
640224ae:	add    edi,eax
640224b0:	test   BYTE PTR [ebp-0x10],0x1
640224b4:	je     0x640224b9
640224b6:	inc    DWORD PTR [ebp-0x58]
640224b9:	mov    edx,DWORD PTR [ebp-0x8]
640224bc:	mov    ebx,DWORD PTR [ebp-0xc]
640224bf:	mov    esi,DWORD PTR [ebp-0xc]
640224c2:	shr    DWORD PTR [ebp-0x8],1
640224c5:	shl    edx,0x1f
640224c8:	shr    ebx,1
640224ca:	or     ebx,edx
640224cc:	mov    edx,DWORD PTR [ebp-0x10]
640224cf:	shl    esi,0x1f
640224d2:	shr    edx,1
640224d4:	or     edx,esi
640224d6:	dec    eax
640224d7:	mov    DWORD PTR [ebp-0xc],ebx
640224da:	mov    DWORD PTR [ebp-0x10],edx
640224dd:	jne    0x640224b0
640224df:	cmp    DWORD PTR [ebp-0x58],eax
640224e2:	je     0x640224e9
640224e4:	or     WORD PTR [ebp-0x10],0x1
640224e9:	cmp    WORD PTR [ebp-0x10],0x8000
640224ef:	ja     0x64022502
640224f1:	mov    edx,DWORD PTR [ebp-0x10]
640224f4:	and    edx,0x1ffff
640224fa:	cmp    edx,0x18000
64022500:	jne    0x64022533
64022502:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022506:	jne    0x64022530
64022508:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6402250c:	mov    DWORD PTR [ebp-0xe],eax
6402250f:	jne    0x6402252b
64022511:	cmp    WORD PTR [ebp-0x6],0xffff
64022517:	mov    DWORD PTR [ebp-0xa],eax
6402251a:	jne    0x64022525
6402251c:	mov    WORD PTR [ebp-0x6],0x8000
64022522:	inc    edi
64022523:	jmp    0x64022533
64022525:	inc    WORD PTR [ebp-0x6]
64022529:	jmp    0x64022533
6402252b:	inc    DWORD PTR [ebp-0xa]
6402252e:	jmp    0x64022533
64022530:	inc    DWORD PTR [ebp-0xe]
64022533:	cmp    di,0x7fff
64022538:	jb     0x64022558
6402253a:	neg    cx
6402253d:	mov    DWORD PTR [ebp-0x1c],eax
64022540:	mov    DWORD PTR [ebp-0x20],eax
64022543:	sbb    ecx,ecx
64022545:	and    ecx,0x80000000
6402254b:	add    ecx,0x7fff8000
64022551:	mov    DWORD PTR [ebp-0x18],ecx
64022554:	xor    eax,eax
64022556:	jmp    0x6402258e
64022558:	mov    ax,WORD PTR [ebp-0xe]
6402255c:	mov    WORD PTR [ebp-0x20],ax
64022560:	mov    eax,DWORD PTR [ebp-0xc]
64022563:	mov    DWORD PTR [ebp-0x1e],eax
64022566:	mov    eax,DWORD PTR [ebp-0x8]
64022569:	or     edi,ecx
6402256b:	mov    DWORD PTR [ebp-0x1a],eax
6402256e:	mov    WORD PTR [ebp-0x16],di
64022572:	jmp    0x64022554
64022574:	neg    cx
64022577:	sbb    ecx,ecx
64022579:	and    ecx,0x80000000
6402257f:	add    ecx,0x7fff8000
64022585:	mov    DWORD PTR [ebp-0x18],ecx
64022588:	mov    DWORD PTR [ebp-0x1c],eax
6402258b:	mov    DWORD PTR [ebp-0x20],eax
6402258e:	test   BYTE PTR [ebp+0x18],0x1
64022592:	mov    edx,DWORD PTR [ebp-0x60]
64022595:	mov    ecx,DWORD PTR [ebp-0x4c]
64022598:	mov    WORD PTR [edx],cx
6402259b:	je     0x640225cf
6402259d:	movsx  ecx,cx
640225a0:	add    DWORD PTR [ebp+0x14],ecx
640225a3:	cmp    DWORD PTR [ebp+0x14],eax
640225a6:	jg     0x640225cf
640225a8:	and    WORD PTR [edx],0x0
640225ac:	cmp    WORD PTR [ebp-0x6c],0x8000
640225b2:	mov    BYTE PTR [edx+0x3],0x1
640225b6:	setne  al
640225b9:	dec    al
640225bb:	and    al,0xd
640225bd:	add    al,0x20
640225bf:	mov    BYTE PTR [edx+0x2],al
640225c2:	mov    BYTE PTR [edx+0x4],0x30
640225c6:	mov    BYTE PTR [edx+0x5],0x0
640225ca:	jmp    0x64021f80
640225cf:	push   0x15
640225d1:	pop    ecx
640225d2:	cmp    DWORD PTR [ebp+0x14],ecx
640225d5:	jle    0x640225da
640225d7:	mov    DWORD PTR [ebp+0x14],ecx
640225da:	mov    esi,DWORD PTR [ebp-0x18]
640225dd:	shr    esi,0x10
640225e0:	push   0x8
640225e2:	sub    esi,0x3ffe
640225e8:	mov    WORD PTR [ebp-0x16],ax
640225ec:	pop    ebx
640225ed:	mov    eax,DWORD PTR [ebp-0x20]
640225f0:	mov    edi,DWORD PTR [ebp-0x1c]
640225f3:	mov    ecx,DWORD PTR [ebp-0x1c]
640225f6:	shl    DWORD PTR [ebp-0x20],1
640225f9:	shr    eax,0x1f
640225fc:	add    edi,edi
640225fe:	or     edi,eax
64022600:	mov    eax,DWORD PTR [ebp-0x18]
64022603:	shr    ecx,0x1f
64022606:	add    eax,eax
64022608:	or     eax,ecx
6402260a:	dec    ebx
6402260b:	mov    DWORD PTR [ebp-0x1c],edi
6402260e:	mov    DWORD PTR [ebp-0x18],eax
64022611:	jne    0x640225ed
64022613:	test   esi,esi
64022615:	jge    0x64022649
64022617:	neg    esi
64022619:	and    esi,0xff
6402261f:	jle    0x64022649
64022621:	mov    eax,DWORD PTR [ebp-0x18]
64022624:	mov    edi,DWORD PTR [ebp-0x1c]
64022627:	mov    ecx,DWORD PTR [ebp-0x1c]
6402262a:	shr    DWORD PTR [ebp-0x18],1
6402262d:	shl    eax,0x1f
64022630:	shr    edi,1
64022632:	or     edi,eax
64022634:	mov    eax,DWORD PTR [ebp-0x20]
64022637:	shl    ecx,0x1f
6402263a:	shr    eax,1
6402263c:	or     eax,ecx
6402263e:	dec    esi
6402263f:	test   esi,esi
64022641:	mov    DWORD PTR [ebp-0x1c],edi
64022644:	mov    DWORD PTR [ebp-0x20],eax
64022647:	jg     0x64022621
64022649:	mov    eax,DWORD PTR [ebp+0x14]
6402264c:	inc    eax
6402264d:	test   eax,eax
6402264f:	lea    ebx,[edx+0x4]
64022652:	mov    DWORD PTR [ebp-0x40],ebx
64022655:	mov    DWORD PTR [ebp-0x4c],eax
64022658:	jle    0x64022713
6402265e:	mov    edx,DWORD PTR [ebp-0x20]
64022661:	mov    eax,DWORD PTR [ebp-0x1c]
64022664:	lea    esi,[ebp-0x20]
64022667:	lea    edi,[ebp-0x3c]
6402266a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266d:	shl    DWORD PTR [ebp-0x20],1
64022670:	mov    edi,DWORD PTR [ebp-0x20]
64022673:	shl    DWORD PTR [ebp-0x20],1
64022676:	shr    edx,0x1f
64022679:	lea    ecx,[eax+eax*1]
6402267c:	or     ecx,edx
6402267e:	mov    edx,DWORD PTR [ebp-0x18]
64022681:	mov    esi,eax
64022683:	shr    esi,0x1f
64022686:	add    edx,edx
64022688:	or     edx,esi
6402268a:	mov    eax,ecx
6402268c:	lea    esi,[ecx+ecx*1]
6402268f:	shr    eax,0x1f
64022692:	lea    ecx,[edx+edx*1]
64022695:	mov    edx,DWORD PTR [ebp-0x3c]
64022698:	shr    edi,0x1f
6402269b:	or     ecx,eax
6402269d:	mov    eax,DWORD PTR [ebp-0x20]
640226a0:	or     esi,edi
640226a2:	lea    edi,[edx+eax*1]
640226a5:	cmp    edi,eax
640226a7:	jb     0x640226ad
640226a9:	cmp    edi,edx
640226ab:	jae    0x640226c5
640226ad:	lea    eax,[esi+0x1]
640226b0:	xor    edx,edx
640226b2:	cmp    eax,esi
640226b4:	jb     0x640226bb
640226b6:	cmp    eax,0x1
640226b9:	jae    0x640226be
640226bb:	xor    edx,edx
640226bd:	inc    edx
640226be:	test   edx,edx
640226c0:	mov    esi,eax
640226c2:	je     0x640226c5
640226c4:	inc    ecx
640226c5:	mov    eax,DWORD PTR [ebp-0x38]
640226c8:	lea    edx,[eax+esi*1]
640226cb:	cmp    edx,esi
640226cd:	mov    DWORD PTR [ebp-0x44],edx
640226d0:	jb     0x640226d6
640226d2:	cmp    edx,eax
640226d4:	jae    0x640226d7
640226d6:	inc    ecx
640226d7:	add    ecx,DWORD PTR [ebp-0x34]
640226da:	shr    edx,0x1f
640226dd:	add    ecx,ecx
640226df:	or     ecx,edx
640226e1:	lea    esi,[edi+edi*1]
640226e4:	mov    DWORD PTR [ebp-0x20],esi
640226e7:	mov    esi,DWORD PTR [ebp-0x44]
640226ea:	mov    DWORD PTR [ebp-0x18],ecx
640226ed:	shr    ecx,0x18
640226f0:	add    esi,esi
640226f2:	add    cl,0x30
640226f5:	mov    eax,edi
640226f7:	shr    eax,0x1f
640226fa:	or     esi,eax
640226fc:	mov    BYTE PTR [ebx],cl
640226fe:	inc    ebx
640226ff:	dec    DWORD PTR [ebp-0x4c]
64022702:	cmp    DWORD PTR [ebp-0x4c],0x0
64022706:	mov    DWORD PTR [ebp-0x1c],esi
64022709:	mov    BYTE PTR [ebp-0x15],0x0
6402270d:	jg     0x6402265e
64022713:	dec    ebx
64022714:	mov    al,BYTE PTR [ebx]
64022716:	dec    ebx
64022717:	cmp    al,0x35
64022719:	jge    0x64022729
6402271b:	mov    ecx,DWORD PTR [ebp-0x40]
6402271e:	jmp    0x64022764
64022720:	cmp    BYTE PTR [ebx],0x39
64022723:	jne    0x6402272e
64022725:	mov    BYTE PTR [ebx],0x30
64022728:	dec    ebx
64022729:	cmp    ebx,DWORD PTR [ebp-0x40]
6402272c:	jae    0x64022720
6402272e:	cmp    ebx,DWORD PTR [ebp-0x40]
64022731:	mov    eax,DWORD PTR [ebp-0x60]
64022734:	jae    0x6402273a
64022736:	inc    ebx
64022737:	inc    WORD PTR [eax]
6402273a:	inc    BYTE PTR [ebx]
6402273c:	sub    bl,al
6402273e:	sub    bl,0x3
64022741:	movsx  ecx,bl
64022744:	mov    BYTE PTR [eax+0x3],bl
64022747:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
6402274c:	mov    eax,DWORD PTR [ebp-0x74]
6402274f:	mov    ecx,DWORD PTR [ebp-0x4]
64022752:	pop    edi
64022753:	pop    esi
64022754:	xor    ecx,ebp
64022756:	pop    ebx
64022757:	call   0x64013cc6
6402275c:	leave  
6402275d:	ret    
6402275e:	cmp    BYTE PTR [ebx],0x30
64022761:	jne    0x64022768
64022763:	dec    ebx
64022764:	cmp    ebx,ecx
64022766:	jae    0x6402275e
64022768:	cmp    ebx,ecx
6402276a:	mov    eax,DWORD PTR [ebp-0x60]
6402276d:	jae    0x6402273c
6402276f:	and    WORD PTR [eax],0x0
64022773:	cmp    WORD PTR [ebp-0x6c],0x8000
64022779:	mov    BYTE PTR [eax+0x3],0x1
6402277d:	setne  dl
64022780:	dec    dl
64022782:	and    dl,0xd
64022785:	add    dl,0x20
64022788:	mov    BYTE PTR [eax+0x2],dl
6402278b:	mov    BYTE PTR [ecx],0x30
6402278e:	mov    BYTE PTR [eax+0x5],0x0
64022792:	jmp    0x64021f80
64022797:	xor    eax,eax
64022799:	test   bl,0x10
6402279c:	je     0x6402279f
6402279e:	inc    eax
6402279f:	test   bl,0x8
640227a2:	je     0x640227a7
640227a4:	or     eax,0x4
640227a7:	test   bl,0x4
640227aa:	je     0x640227af
640227ac:	or     eax,0x8
640227af:	test   bl,0x2
640227b2:	je     0x640227b7
640227b4:	or     eax,0x10
640227b7:	test   bl,0x1
640227ba:	je     0x640227bf
640227bc:	or     eax,0x20
640227bf:	test   ebx,0x80000
640227c5:	je     0x640227ca
640227c7:	or     eax,0x2
640227ca:	mov    ecx,ebx
640227cc:	mov    edx,0x300
640227d1:	and    ecx,edx
640227d3:	push   esi
640227d4:	mov    esi,0x200
640227d9:	je     0x640227fe
640227db:	cmp    ecx,0x100
640227e1:	je     0x640227f9
640227e3:	cmp    ecx,esi
640227e5:	je     0x640227f2
640227e7:	cmp    ecx,edx
640227e9:	jne    0x640227fe
640227eb:	or     eax,0xc00
640227f0:	jmp    0x640227fe
640227f2:	or     eax,0x800
640227f7:	jmp    0x640227fe
640227f9:	or     eax,0x400
640227fe:	mov    ecx,ebx
64022800:	and    ecx,0x30000
64022806:	je     0x64022814
64022808:	cmp    ecx,0x10000
6402280e:	jne    0x64022816
64022810:	or     eax,esi
64022812:	jmp    0x64022816
64022814:	or     eax,edx
64022816:	test   ebx,0x40000
6402281c:	pop    esi
6402281d:	je     0x64022824
6402281f:	or     eax,0x1000
64022824:	ret    
64022825:	xor    eax,eax
64022827:	test   dl,0x10
6402282a:	je     0x64022831
6402282c:	mov    eax,0x80
64022831:	test   dl,0x8
64022834:	push   ebx
64022835:	push   esi
64022836:	push   edi
64022837:	mov    ebx,0x200
6402283c:	je     0x64022840
6402283e:	or     eax,ebx
64022840:	test   dl,0x4
64022843:	je     0x6402284a
64022845:	or     eax,0x400
6402284a:	test   dl,0x2
6402284d:	je     0x64022854
6402284f:	or     eax,0x800
64022854:	test   dl,0x1
64022857:	je     0x6402285e
64022859:	or     eax,0x1000
6402285e:	test   edx,0x80000
64022864:	mov    edi,0x100
64022869:	je     0x6402286d
6402286b:	or     eax,edi
6402286d:	mov    ecx,edx
6402286f:	mov    esi,0x300
64022874:	and    ecx,esi
64022876:	je     0x64022897
64022878:	cmp    ecx,edi
6402287a:	je     0x64022892
6402287c:	cmp    ecx,ebx
6402287e:	je     0x6402288b
64022880:	cmp    ecx,esi
64022882:	jne    0x64022897
64022884:	or     eax,0x6000
64022889:	jmp    0x64022897
6402288b:	or     eax,0x4000
64022890:	jmp    0x64022897
64022892:	or     eax,0x2000
64022897:	mov    ecx,0x3000000
6402289c:	pop    edi
6402289d:	and    edx,ecx
6402289f:	cmp    edx,0x1000000
640228a5:	pop    esi
640228a6:	pop    ebx
640228a7:	je     0x640228bf
640228a9:	cmp    edx,0x2000000
640228af:	je     0x640228bb
640228b1:	cmp    edx,ecx
640228b3:	jne    0x640228c4
640228b5:	or     eax,0x8000
640228ba:	ret    
640228bb:	or     eax,0x40
640228be:	ret    
640228bf:	or     eax,0x8040
640228c4:	ret    
640228c5:	sub    esp,0x10
640228c8:	push   ebx
640228c9:	push   ebp
640228ca:	push   esi
640228cb:	push   edi
640228cc:	fstcw  WORD PTR [esp+0x14]
640228d1:	mov    ebx,DWORD PTR [esp+0x14]
640228d5:	xor    edx,edx
640228d7:	test   bl,0x1
640228da:	je     0x640228df
640228dc:	push   0x10
640228de:	pop    edx
640228df:	test   bl,0x4
640228e2:	je     0x640228e7
640228e4:	or     edx,0x8
640228e7:	test   bl,0x8
640228ea:	je     0x640228ef
640228ec:	or     edx,0x4
640228ef:	test   bl,0x10
640228f2:	je     0x640228f7
640228f4:	or     edx,0x2
640228f7:	test   bl,0x20
640228fa:	je     0x640228ff
640228fc:	or     edx,0x1
640228ff:	test   bl,0x2
64022902:	je     0x6402290a
64022904:	or     edx,0x80000
6402290a:	movzx  ecx,bx
6402290d:	mov    eax,ecx
6402290f:	mov    edi,0xc00
64022914:	and    eax,edi
64022916:	mov    ebp,0x300
6402291b:	mov    esi,0x200
64022920:	je     0x64022942
64022922:	cmp    eax,0x400
64022927:	je     0x6402293c
64022929:	cmp    eax,0x800
6402292e:	je     0x64022938
64022930:	cmp    eax,edi
64022932:	jne    0x64022942
64022934:	or     edx,ebp
64022936:	jmp    0x64022942
64022938:	or     edx,esi
6402293a:	jmp    0x64022942
6402293c:	or     edx,0x100
64022942:	and    ecx,ebp
64022944:	je     0x64022952
64022946:	cmp    ecx,esi
64022948:	jne    0x64022958
6402294a:	or     edx,0x10000
64022950:	jmp    0x64022958
64022952:	or     edx,0x20000
64022958:	test   bx,0x1000
6402295d:	je     0x64022965
6402295f:	or     edx,0x40000
64022965:	mov    esi,DWORD PTR [esp+0x28]
64022969:	mov    ecx,DWORD PTR [esp+0x24]
6402296d:	mov    eax,esi
6402296f:	not    eax
64022971:	and    eax,edx
64022973:	and    ecx,esi
64022975:	or     eax,ecx
64022977:	cmp    eax,edx
64022979:	mov    DWORD PTR [esp+0x1c],eax
6402297d:	je     0x64022a2d
64022983:	mov    ebx,eax
64022985:	call   0x64022797
6402298a:	movzx  eax,ax
6402298d:	mov    DWORD PTR [esp+0x10],eax
64022991:	fldcw  WORD PTR [esp+0x10]
64022995:	fstcw  WORD PTR [esp+0x10]
6402299a:	mov    ebx,DWORD PTR [esp+0x10]
6402299e:	xor    edx,edx
640229a0:	test   bl,0x1
640229a3:	je     0x640229a8
640229a5:	push   0x10
640229a7:	pop    edx
640229a8:	test   bl,0x4
640229ab:	je     0x640229b0
640229ad:	or     edx,0x8
640229b0:	test   bl,0x8
640229b3:	je     0x640229b8
640229b5:	or     edx,0x4
640229b8:	test   bl,0x10
640229bb:	je     0x640229c0
640229bd:	or     edx,0x2
640229c0:	test   bl,0x20
640229c3:	je     0x640229c8
640229c5:	or     edx,0x1
640229c8:	test   bl,0x2
640229cb:	je     0x640229d3
640229cd:	or     edx,0x80000
640229d3:	movzx  ecx,bx
640229d6:	mov    eax,ecx
640229d8:	and    eax,edi
640229da:	je     0x64022a00
640229dc:	cmp    eax,0x400
640229e1:	je     0x640229fa
640229e3:	cmp    eax,0x800
640229e8:	je     0x640229f2
640229ea:	cmp    eax,edi
640229ec:	jne    0x64022a00
640229ee:	or     edx,ebp
640229f0:	jmp    0x64022a00
640229f2:	or     edx,0x200
640229f8:	jmp    0x64022a00
640229fa:	or     edx,0x100
64022a00:	and    ecx,ebp
64022a02:	je     0x64022a14
64022a04:	cmp    ecx,0x200
64022a0a:	jne    0x64022a1a
64022a0c:	or     edx,0x10000
64022a12:	jmp    0x64022a1a
64022a14:	or     edx,0x20000
64022a1a:	test   bx,0x1000
64022a1f:	je     0x64022a27
64022a21:	or     edx,0x40000
64022a27:	mov    eax,edx
64022a29:	mov    DWORD PTR [esp+0x1c],edx
64022a2d:	cmp    DWORD PTR ds:0x64039b18,0x0
64022a34:	je     0x64022bc0
64022a3a:	and    esi,0x308031f
64022a40:	mov    edi,esi
64022a42:	stmxcsr DWORD PTR [esp+0x18]
64022a47:	mov    eax,DWORD PTR [esp+0x18]
64022a4b:	xor    esi,esi
64022a4d:	test   al,al
64022a4f:	jns    0x64022a54
64022a51:	push   0x10
64022a53:	pop    esi
64022a54:	test   ax,0x200
64022a58:	je     0x64022a5d
64022a5a:	or     esi,0x8
64022a5d:	test   ax,0x400
64022a61:	je     0x64022a66
64022a63:	or     esi,0x4
64022a66:	test   ax,0x800
64022a6a:	je     0x64022a6f
64022a6c:	or     esi,0x2
64022a6f:	test   ax,0x1000
64022a73:	je     0x64022a78
64022a75:	or     esi,0x1
64022a78:	test   ax,0x100
64022a7c:	je     0x64022a84
64022a7e:	or     esi,0x80000
64022a84:	mov    ecx,eax
64022a86:	mov    ebp,0x6000
64022a8b:	and    ecx,ebp
64022a8d:	je     0x64022ab9
64022a8f:	cmp    ecx,0x2000
64022a95:	je     0x64022ab3
64022a97:	cmp    ecx,0x4000
64022a9d:	je     0x64022aab
64022a9f:	cmp    ecx,ebp
64022aa1:	jne    0x64022ab9
64022aa3:	or     esi,0x300
64022aa9:	jmp    0x64022ab9
64022aab:	or     esi,0x200
64022ab1:	jmp    0x64022ab9
64022ab3:	or     esi,0x100
64022ab9:	mov    ebx,0x8040
64022abe:	and    eax,ebx
64022ac0:	sub    eax,0x40
64022ac3:	je     0x64022ae1
64022ac5:	sub    eax,0x7fc0
64022aca:	je     0x64022ad9
64022acc:	sub    eax,0x40
64022acf:	jne    0x64022ae7
64022ad1:	or     esi,0x1000000
64022ad7:	jmp    0x64022ae7
64022ad9:	or     esi,0x3000000
64022adf:	jmp    0x64022ae7
64022ae1:	or     esi,0x2000000
64022ae7:	mov    edx,edi
64022ae9:	and    edi,DWORD PTR [esp+0x24]
64022aed:	not    edx
64022aef:	and    edx,esi
64022af1:	or     edx,edi
64022af3:	cmp    edx,esi
64022af5:	jne    0x64022afe
64022af7:	mov    eax,esi
64022af9:	jmp    0x64022ba9
64022afe:	call   0x64022825
64022b03:	push   eax
64022b04:	mov    DWORD PTR [esp+0x2c],eax
64022b08:	call   0x64022bc8
64022b0d:	pop    ecx
64022b0e:	stmxcsr DWORD PTR [esp+0x28]
64022b13:	mov    eax,DWORD PTR [esp+0x28]
64022b17:	xor    edx,edx
64022b19:	test   al,al
64022b1b:	jns    0x64022b20
64022b1d:	push   0x10
64022b1f:	pop    edx
64022b20:	mov    edi,0x200
64022b25:	test   edi,eax
64022b27:	je     0x64022b2c
64022b29:	or     edx,0x8
64022b2c:	test   ax,0x400
64022b30:	je     0x64022b35
64022b32:	or     edx,0x4
64022b35:	test   ax,0x800
64022b39:	je     0x64022b3e
64022b3b:	or     edx,0x2
64022b3e:	test   ax,0x1000
64022b42:	je     0x64022b47
64022b44:	or     edx,0x1
64022b47:	mov    esi,0x100
64022b4c:	test   esi,eax
64022b4e:	je     0x64022b56
64022b50:	or     edx,0x80000
64022b56:	mov    ecx,eax
64022b58:	and    ecx,ebp
64022b5a:	je     0x64022b7e
64022b5c:	cmp    ecx,0x2000
64022b62:	je     0x64022b7c
64022b64:	cmp    ecx,0x4000
64022b6a:	je     0x64022b78
64022b6c:	cmp    ecx,ebp
64022b6e:	jne    0x64022b7e
64022b70:	or     edx,0x300
64022b76:	jmp    0x64022b7e
64022b78:	or     edx,edi
64022b7a:	jmp    0x64022b7e
64022b7c:	or     edx,esi
64022b7e:	and    eax,ebx
64022b80:	sub    eax,0x40
64022b83:	je     0x64022ba1
64022b85:	sub    eax,0x7fc0
64022b8a:	je     0x64022b99
64022b8c:	sub    eax,0x40
64022b8f:	jne    0x64022ba7
64022b91:	or     edx,0x1000000
64022b97:	jmp    0x64022ba7
64022b99:	or     edx,0x3000000
64022b9f:	jmp    0x64022ba7
64022ba1:	or     edx,0x2000000
64022ba7:	mov    eax,edx
64022ba9:	mov    ecx,DWORD PTR [esp+0x1c]
64022bad:	mov    edx,eax
64022baf:	xor    edx,ecx
64022bb1:	or     eax,ecx
64022bb3:	test   edx,0x8031f
64022bb9:	je     0x64022bc0
64022bbb:	or     eax,0x80000000
64022bc0:	pop    edi
64022bc1:	pop    esi
64022bc2:	pop    ebp
64022bc3:	pop    ebx
64022bc4:	add    esp,0x10
64022bc7:	ret    
64022bc8:	push   0x8
64022bca:	push   0x6402bbc8
64022bcf:	call   0x64015ed4
64022bd4:	xor    eax,eax
64022bd6:	cmp    DWORD PTR ds:0x64039b18,eax
64022bdc:	je     0x64022c34
64022bde:	test   BYTE PTR [ebp+0x8],0x40
64022be2:	je     0x64022c2c
64022be4:	cmp    DWORD PTR ds:0x640389e8,eax
64022bea:	je     0x64022c2c
64022bec:	mov    DWORD PTR [ebp-0x4],eax
64022bef:	ldmxcsr DWORD PTR [ebp+0x8]
64022bf3:	jmp    0x64022c23
64022bf5:	mov    eax,DWORD PTR [ebp-0x14]
64022bf8:	mov    eax,DWORD PTR [eax]
64022bfa:	mov    eax,DWORD PTR [eax]
64022bfc:	cmp    eax,0xc0000005
64022c01:	je     0x64022c0d
64022c03:	cmp    eax,0xc000001d
64022c08:	je     0x64022c0d
64022c0a:	xor    eax,eax
64022c0c:	ret    
64022c0d:	xor    eax,eax
64022c0f:	inc    eax
64022c10:	ret    
64022c11:	mov    esp,DWORD PTR [ebp-0x18]
64022c14:	and    DWORD PTR ds:0x640389e8,0x0
64022c1b:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c1f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c23:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022c2a:	jmp    0x64022c34
64022c2c:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c30:	ldmxcsr DWORD PTR [ebp+0x8]
64022c34:	call   0x64015f19
64022c39:	ret    
64022c3a:	int3   
64022c3b:	int3   
64022c3c:	int3   
64022c3d:	int3   
64022c3e:	int3   
64022c3f:	int3   
64022c40:	lea    eax,[edx-0x1]
64022c43:	pop    ebx
64022c44:	ret    
64022c45:	lea    esp,[esp+0x0]
64022c4c:	lea    esp,[esp+0x0]
64022c50:	xor    eax,eax
64022c52:	mov    al,BYTE PTR [esp+0x8]
64022c56:	push   ebx
64022c57:	mov    ebx,eax
64022c59:	shl    eax,0x8
64022c5c:	mov    edx,DWORD PTR [esp+0x8]
64022c60:	test   edx,0x3
64022c66:	je     0x64022c7d
64022c68:	mov    cl,BYTE PTR [edx]
64022c6a:	add    edx,0x1
64022c6d:	cmp    cl,bl
64022c6f:	je     0x64022c40
64022c71:	test   cl,cl
64022c73:	je     0x64022cc6
64022c75:	test   edx,0x3
64022c7b:	jne    0x64022c68
64022c7d:	or     ebx,eax
64022c7f:	push   edi
64022c80:	mov    eax,ebx
64022c82:	shl    ebx,0x10
64022c85:	push   esi
64022c86:	or     ebx,eax
64022c88:	mov    ecx,DWORD PTR [edx]
64022c8a:	mov    edi,0x7efefeff
64022c8f:	mov    eax,ecx
64022c91:	mov    esi,edi
64022c93:	xor    ecx,ebx
64022c95:	add    esi,eax
64022c97:	add    edi,ecx
64022c99:	xor    ecx,0xffffffff
64022c9c:	xor    eax,0xffffffff
64022c9f:	xor    ecx,edi
64022ca1:	xor    eax,esi
64022ca3:	add    edx,0x4
64022ca6:	and    ecx,0x81010100
64022cac:	jne    0x64022cca
64022cae:	and    eax,0x81010100
64022cb3:	je     0x64022c88
64022cb5:	and    eax,0x1010100
64022cba:	jne    0x64022cc4
64022cbc:	and    esi,0x80000000
64022cc2:	jne    0x64022c88
64022cc4:	pop    esi
64022cc5:	pop    edi
64022cc6:	pop    ebx
64022cc7:	xor    eax,eax
64022cc9:	ret    
64022cca:	mov    eax,DWORD PTR [edx-0x4]
64022ccd:	cmp    al,bl
64022ccf:	je     0x64022d07
64022cd1:	test   al,al
64022cd3:	je     0x64022cc4
64022cd5:	cmp    ah,bl
64022cd7:	je     0x64022d00
64022cd9:	test   ah,ah
64022cdb:	je     0x64022cc4
64022cdd:	shr    eax,0x10
64022ce0:	cmp    al,bl
64022ce2:	je     0x64022cf9
64022ce4:	test   al,al
64022ce6:	je     0x64022cc4
64022ce8:	cmp    ah,bl
64022cea:	je     0x64022cf2
64022cec:	test   ah,ah
64022cee:	je     0x64022cc4
64022cf0:	jmp    0x64022c88
64022cf2:	pop    esi
64022cf3:	pop    edi
64022cf4:	lea    eax,[edx-0x1]
64022cf7:	pop    ebx
64022cf8:	ret    
64022cf9:	lea    eax,[edx-0x2]
64022cfc:	pop    esi
64022cfd:	pop    edi
64022cfe:	pop    ebx
64022cff:	ret    
64022d00:	lea    eax,[edx-0x3]
64022d03:	pop    esi
64022d04:	pop    edi
64022d05:	pop    ebx
64022d06:	ret    
64022d07:	lea    eax,[edx-0x4]
64022d0a:	pop    esi
64022d0b:	pop    edi
64022d0c:	pop    ebx
64022d0d:	ret    
64022d0e:	int3   
64022d0f:	int3   
64022d10:	push   esi
64022d11:	mov    esi,ecx
64022d13:	mov    eax,DWORD PTR [esi+0x8]
64022d16:	test   eax,eax
64022d18:	mov    DWORD PTR [esi],0x6402958c
64022d1e:	je     0x64022d28
64022d20:	mov    ecx,DWORD PTR [eax]
64022d22:	mov    edx,DWORD PTR [ecx+0x8]
64022d25:	push   eax
64022d26:	call   edx
64022d28:	cmp    DWORD PTR [esi+0xc],0x0
64022d2c:	je     0x64022d45
64022d2e:	call   DWORD PTR ds:0x64024190
64022d34:	test   eax,eax
64022d36:	je     0x64022d45
64022d38:	mov    ecx,DWORD PTR [esi+0xc]
64022d3b:	push   ecx
64022d3c:	push   0x0
64022d3e:	push   eax
64022d3f:	call   DWORD PTR ds:0x64024184
64022d45:	pop    esi
64022d46:	ret    
64022d47:	int3   
64022d48:	int3   
64022d49:	int3   
64022d4a:	int3   
64022d4b:	int3   
64022d4c:	int3   
64022d4d:	int3   
64022d4e:	int3   
64022d4f:	int3   
64022d50:	sub    esp,0x10
64022d53:	mov    eax,DWORD PTR [esp+0x14]
64022d57:	mov    ecx,DWORD PTR [esp+0x18]
64022d5b:	push   0x6402bbe4
64022d60:	lea    edx,[esp+0x4]
64022d64:	push   edx
64022d65:	mov    DWORD PTR [esp+0x8],0x6402958c
64022d6d:	mov    DWORD PTR [esp+0xc],eax
64022d71:	mov    DWORD PTR [esp+0x10],ecx
64022d75:	mov    DWORD PTR [esp+0x14],0x0
64022d7d:	call   0x64013832
64022d82:	int3   
64022d83:	int3   
64022d84:	int3   
64022d85:	int3   
64022d86:	int3   
64022d87:	int3   
64022d88:	int3   
64022d89:	int3   
64022d8a:	int3   
64022d8b:	int3   
64022d8c:	int3   
64022d8d:	int3   
64022d8e:	int3   
64022d8f:	int3   
64022d90:	mov    eax,DWORD PTR [esp+0x4]
64022d94:	push   esi
64022d95:	mov    esi,ecx
64022d97:	mov    DWORD PTR [esi],0x6402958c
64022d9d:	mov    ecx,DWORD PTR [eax+0x4]
64022da0:	mov    DWORD PTR [esi+0x4],ecx
64022da3:	mov    edx,DWORD PTR [eax+0x8]
64022da6:	mov    eax,edx
64022da8:	test   eax,eax
64022daa:	mov    DWORD PTR [esi+0x8],edx
64022dad:	mov    DWORD PTR [esi+0xc],0x0
64022db4:	je     0x64022dbe
64022db6:	mov    ecx,DWORD PTR [eax]
64022db8:	mov    edx,DWORD PTR [ecx+0x4]
64022dbb:	push   eax
64022dbc:	call   edx
64022dbe:	mov    eax,esi
64022dc0:	pop    esi
64022dc1:	ret    0x4
64022dc4:	int3   
64022dc5:	int3   
64022dc6:	int3   
64022dc7:	int3   
64022dc8:	int3   
64022dc9:	int3   
64022dca:	int3   
64022dcb:	int3   
64022dcc:	int3   
64022dcd:	int3   
64022dce:	int3   
64022dcf:	int3   
64022dd0:	push   esi
64022dd1:	mov    esi,ecx
64022dd3:	mov    eax,DWORD PTR [esi+0x8]
64022dd6:	test   eax,eax
64022dd8:	mov    DWORD PTR [esi],0x6402958c
64022dde:	je     0x64022de8
64022de0:	mov    ecx,DWORD PTR [eax]
64022de2:	mov    edx,DWORD PTR [ecx+0x8]
64022de5:	push   eax
64022de6:	call   edx
64022de8:	cmp    DWORD PTR [esi+0xc],0x0
64022dec:	je     0x64022e05
64022dee:	call   DWORD PTR ds:0x64024190
64022df4:	test   eax,eax
64022df6:	je     0x64022e05
64022df8:	mov    ecx,DWORD PTR [esi+0xc]
64022dfb:	push   ecx
64022dfc:	push   0x0
64022dfe:	push   eax
64022dff:	call   DWORD PTR ds:0x64024184
64022e05:	test   BYTE PTR [esp+0x8],0x1
64022e0a:	je     0x64022e15
64022e0c:	push   esi
64022e0d:	call   0x64013604
64022e12:	add    esp,0x4
64022e15:	mov    eax,esi
64022e17:	pop    esi
64022e18:	ret    0x4
64022e1b:	int3   
64022e1c:	jmp    DWORD PTR ds:0x64024194
64022e22:	int3   
64022e23:	int3   
64022e24:	int3   
64022e25:	int3   
64022e26:	int3   
64022e27:	int3   
64022e28:	int3   
64022e29:	int3   
64022e2a:	int3   
64022e2b:	int3   
64022e2c:	int3   
64022e2d:	int3   
64022e2e:	int3   
64022e2f:	int3   
64022e30:	lea    ecx,[ebp-0x14]
64022e33:	jmp    0x64002b90
64022e38:	lea    ecx,[ebp-0x30]
64022e3b:	jmp    0x64002930
64022e40:	mov    edx,DWORD PTR [esp+0x8]
64022e44:	lea    eax,[edx+0xc]
64022e47:	mov    ecx,DWORD PTR [edx-0x44]
64022e4a:	xor    ecx,eax
64022e4c:	call   0x64013cc6
64022e51:	mov    ecx,DWORD PTR [edx-0x4]
64022e54:	xor    ecx,eax
64022e56:	call   0x64013cc6
64022e5b:	mov    eax,0x6402b5a8
64022e60:	jmp    0x64013988
64022e65:	int3   
64022e66:	int3   
64022e67:	int3   
64022e68:	int3   
64022e69:	int3   
64022e6a:	int3   
64022e6b:	int3   
64022e6c:	int3   
64022e6d:	int3   
64022e6e:	int3   
64022e6f:	int3   
64022e70:	lea    ecx,[ebp-0x44]
64022e73:	jmp    0x64007000
64022e78:	lea    ecx,[ebp-0x30]
64022e7b:	jmp    0x64002930
64022e80:	lea    ecx,[ebp-0x34]
64022e83:	jmp    0x64002b90
64022e88:	mov    edx,DWORD PTR [esp+0x8]
64022e8c:	lea    eax,[edx+0xc]
64022e8f:	mov    ecx,DWORD PTR [edx-0x48]
64022e92:	xor    ecx,eax
64022e94:	call   0x64013cc6
64022e99:	mov    ecx,DWORD PTR [edx-0x8]
64022e9c:	xor    ecx,eax
64022e9e:	call   0x64013cc6
64022ea3:	mov    eax,0x6402b5f0
64022ea8:	jmp    0x64013988
64022ead:	lea    ecx,[ebp-0x28]
64022eb0:	jmp    0x64002930
64022eb5:	mov    edx,DWORD PTR [esp+0x8]
64022eb9:	lea    eax,[edx+0xc]
64022ebc:	mov    ecx,DWORD PTR [edx-0x54]
64022ebf:	xor    ecx,eax
64022ec1:	call   0x64013cc6
64022ec6:	mov    eax,0x6402b644
64022ecb:	jmp    0x64013988
64022ed0:	lea    ecx,[ebp-0x28]
64022ed3:	jmp    0x64002930
64022ed8:	mov    edx,DWORD PTR [esp+0x8]
64022edc:	lea    eax,[edx+0xc]
64022edf:	mov    ecx,DWORD PTR [edx-0x54]
64022ee2:	xor    ecx,eax
64022ee4:	call   0x64013cc6
64022ee9:	mov    eax,0x6402b670
64022eee:	jmp    0x64013988
64022ef3:	mov    edx,DWORD PTR [esp+0x8]
64022ef7:	lea    eax,[edx+0xc]
64022efa:	mov    ecx,DWORD PTR [edx-0x14]
64022efd:	xor    ecx,eax
64022eff:	call   0x64013cc6
64022f04:	mov    eax,0x6402b850
64022f09:	jmp    0x64013988
64022f0e:	int3   
64022f0f:	int3   
64022f10:	lea    eax,[ebp-0x50]
64022f13:	jmp    0x64007770
64022f18:	lea    eax,[ebp-0x4c]
64022f1b:	jmp    0x64007770
64022f20:	mov    edx,DWORD PTR [esp+0x8]
64022f24:	lea    eax,[edx-0x5c]
64022f27:	mov    ecx,DWORD PTR [edx-0x60]
64022f2a:	xor    ecx,eax
64022f2c:	call   0x64013cc6
64022f31:	mov    eax,0x6402be0c
64022f36:	jmp    0x64013988
64022f3b:	int3   
64022f3c:	int3   
64022f3d:	int3   
64022f3e:	int3   
64022f3f:	int3   
64022f40:	mov    eax,DWORD PTR [ebp+0x4]
64022f43:	jmp    0x64007770
64022f48:	mov    edx,DWORD PTR [esp+0x8]
64022f4c:	lea    eax,[edx-0xc]
64022f4f:	mov    ecx,DWORD PTR [edx-0x10]
64022f52:	xor    ecx,eax
64022f54:	call   0x64013cc6
64022f59:	mov    eax,0x6402be38
64022f5e:	jmp    0x64013988
64022f63:	int3   
64022f64:	int3   
64022f65:	int3   
64022f66:	int3   
64022f67:	int3   
64022f68:	int3   
64022f69:	int3   
64022f6a:	int3   
64022f6b:	int3   
64022f6c:	int3   
64022f6d:	int3   
64022f6e:	int3   
64022f6f:	int3   
64022f70:	lea    ecx,[ebp+0x8]
64022f73:	jmp    0x64002b90
64022f78:	lea    ecx,[ebp-0x43c]
64022f7e:	jmp    0x64002e00
64022f83:	mov    edx,DWORD PTR [esp+0x8]
64022f87:	lea    eax,[edx-0x444]
64022f8d:	mov    ecx,DWORD PTR [edx-0x448]
64022f93:	xor    ecx,eax
64022f95:	call   0x64013cc6
64022f9a:	add    eax,0x10
64022f9d:	mov    ecx,DWORD PTR [edx-0x4]
64022fa0:	xor    ecx,eax
64022fa2:	call   0x64013cc6
64022fa7:	mov    eax,0x6402be6c
64022fac:	jmp    0x64013988
64022fb1:	int3   
64022fb2:	int3   
64022fb3:	int3   
64022fb4:	int3   
64022fb5:	int3   
64022fb6:	int3   
64022fb7:	int3   
64022fb8:	int3   
64022fb9:	int3   
64022fba:	int3   
64022fbb:	int3   
64022fbc:	int3   
64022fbd:	int3   
64022fbe:	int3   
64022fbf:	int3   
64022fc0:	mov    edx,DWORD PTR [esp+0x8]
64022fc4:	lea    eax,[edx+0xc]
64022fc7:	mov    ecx,DWORD PTR [edx-0x28]
64022fca:	xor    ecx,eax
64022fcc:	call   0x64013cc6
64022fd1:	mov    eax,0x6402bef8
64022fd6:	jmp    0x64013988
64022fdb:	int3   
64022fdc:	int3   
64022fdd:	int3   
64022fde:	int3   
64022fdf:	int3   
64022fe0:	mov    edx,DWORD PTR [esp+0x8]
64022fe4:	lea    eax,[edx+0xc]
64022fe7:	mov    ecx,DWORD PTR [edx-0x2c]
64022fea:	xor    ecx,eax
64022fec:	call   0x64013cc6
64022ff1:	mov    eax,0x6402bf84
64022ff6:	jmp    0x64013988
64022ffb:	int3   
64022ffc:	int3   
64022ffd:	int3   
64022ffe:	int3   
64022fff:	int3   
64023000:	lea    esi,[ebp+0x4]
64023003:	jmp    0x64003cd0
64023008:	mov    edx,DWORD PTR [esp+0x8]
6402300c:	lea    eax,[edx-0x10]
6402300f:	mov    ecx,DWORD PTR [edx-0x14]
64023012:	xor    ecx,eax
64023014:	call   0x64013cc6
64023019:	mov    eax,0x6402bfb0
6402301e:	jmp    0x64013988
64023023:	int3   
64023024:	int3   
64023025:	int3   
64023026:	int3   
64023027:	int3   
64023028:	int3   
64023029:	int3   
6402302a:	int3   
6402302b:	int3   
6402302c:	int3   
6402302d:	int3   
6402302e:	int3   
6402302f:	int3   
64023030:	mov    ecx,DWORD PTR [ebp-0x10]
64023033:	jmp    0x640136d8
64023038:	mov    edx,DWORD PTR [esp+0x8]
6402303c:	lea    eax,[edx-0xc]
6402303f:	mov    ecx,DWORD PTR [edx-0x10]
64023042:	xor    ecx,eax
64023044:	call   0x64013cc6
64023049:	mov    eax,0x6402bfdc
6402304e:	jmp    0x64013988
64023053:	int3   
64023054:	int3   
64023055:	int3   
64023056:	int3   
64023057:	int3   
64023058:	int3   
64023059:	int3   
6402305a:	int3   
6402305b:	int3   
6402305c:	int3   
6402305d:	int3   
6402305e:	int3   
6402305f:	int3   
64023060:	mov    ecx,DWORD PTR [ebp-0x10]
64023063:	jmp    0x640136d8
64023068:	mov    edx,DWORD PTR [esp+0x8]
6402306c:	lea    eax,[edx-0xc]
6402306f:	mov    ecx,DWORD PTR [edx-0x10]
64023072:	xor    ecx,eax
64023074:	call   0x64013cc6
64023079:	mov    eax,0x6402c008
6402307e:	jmp    0x64013988
64023083:	int3   
64023084:	int3   
64023085:	int3   
64023086:	int3   
64023087:	int3   
64023088:	int3   
64023089:	int3   
6402308a:	int3   
6402308b:	int3   
6402308c:	int3   
6402308d:	int3   
6402308e:	int3   
6402308f:	int3   
64023090:	mov    ecx,DWORD PTR [ebp+0x4]
64023093:	jmp    0x640136d8
64023098:	mov    edx,DWORD PTR [esp+0x8]
6402309c:	lea    eax,[edx-0x4]
6402309f:	mov    ecx,DWORD PTR [edx-0x8]
640230a2:	xor    ecx,eax
640230a4:	call   0x64013cc6
640230a9:	mov    eax,0x6402c034
640230ae:	jmp    0x64013988
640230b3:	int3   
640230b4:	int3   
640230b5:	int3   
640230b6:	int3   
640230b7:	int3   
640230b8:	int3   
640230b9:	int3   
640230ba:	int3   
640230bb:	int3   
640230bc:	int3   
640230bd:	int3   
640230be:	int3   
640230bf:	int3   
640230c0:	mov    ecx,DWORD PTR [ebp-0x10]
640230c3:	jmp    0x640136d8
640230c8:	mov    edx,DWORD PTR [esp+0x8]
640230cc:	lea    eax,[edx-0x8]
640230cf:	mov    ecx,DWORD PTR [edx-0xc]
640230d2:	xor    ecx,eax
640230d4:	call   0x64013cc6
640230d9:	mov    eax,0x6402c060
640230de:	jmp    0x64013988
640230e3:	int3   
640230e4:	int3   
640230e5:	int3   
640230e6:	int3   
640230e7:	int3   
640230e8:	int3   
640230e9:	int3   
640230ea:	int3   
640230eb:	int3   
640230ec:	int3   
640230ed:	int3   
640230ee:	int3   
640230ef:	int3   
640230f0:	mov    ecx,DWORD PTR [ebp+0x4]
640230f3:	jmp    0x640078d0
640230f8:	mov    edx,DWORD PTR [esp+0x8]
640230fc:	lea    eax,[edx-0x4]
640230ff:	mov    ecx,DWORD PTR [edx-0x8]
64023102:	xor    ecx,eax
64023104:	call   0x64013cc6
64023109:	mov    eax,0x6402c08c
6402310e:	jmp    0x64013988
64023113:	int3   
64023114:	int3   
64023115:	int3   
64023116:	int3   
64023117:	int3   
64023118:	int3   
64023119:	int3   
6402311a:	int3   
6402311b:	int3   
6402311c:	int3   
6402311d:	int3   
6402311e:	int3   
6402311f:	int3   
64023120:	mov    esi,DWORD PTR [ebp+0x4]
64023123:	jmp    0x64003cd0
64023128:	mov    edx,DWORD PTR [esp+0x8]
6402312c:	lea    eax,[edx-0x8]
6402312f:	mov    ecx,DWORD PTR [edx-0xc]
64023132:	xor    ecx,eax
64023134:	call   0x64013cc6
64023139:	mov    eax,0x6402c0b8
6402313e:	jmp    0x64013988
64023143:	int3   
64023144:	int3   
64023145:	int3   
64023146:	int3   
64023147:	int3   
64023148:	int3   
64023149:	int3   
6402314a:	int3   
6402314b:	int3   
6402314c:	int3   
6402314d:	int3   
6402314e:	int3   
6402314f:	int3   
64023150:	mov    ecx,DWORD PTR [ebp-0x10]
64023153:	jmp    0x64002930
64023158:	mov    edx,DWORD PTR [esp+0x8]
6402315c:	lea    eax,[edx-0x10]
6402315f:	mov    ecx,DWORD PTR [edx-0x14]
64023162:	xor    ecx,eax
64023164:	call   0x64013cc6
64023169:	mov    eax,0x6402c0e4
6402316e:	jmp    0x64013988
64023173:	int3   
64023174:	int3   
64023175:	int3   
64023176:	int3   
64023177:	int3   
64023178:	int3   
64023179:	int3   
6402317a:	int3   
6402317b:	int3   
6402317c:	int3   
6402317d:	int3   
6402317e:	int3   
6402317f:	int3   
64023180:	mov    eax,DWORD PTR [ebp-0x14]
64023183:	push   eax
64023184:	mov    ecx,DWORD PTR [ebp-0x18]
64023187:	push   ecx
64023188:	call   0x64001200
6402318d:	add    esp,0x8
64023190:	ret    
64023191:	mov    edx,DWORD PTR [esp+0x8]
64023195:	lea    eax,[edx+0xc]
64023198:	mov    ecx,DWORD PTR [edx-0x1c]
6402319b:	xor    ecx,eax
6402319d:	call   0x64013cc6
640231a2:	mov    eax,0x6402c144
640231a7:	jmp    0x64013988
640231ac:	int3   
640231ad:	int3   
640231ae:	int3   
640231af:	int3   
640231b0:	mov    eax,DWORD PTR [ebp-0x14]
640231b3:	push   eax
640231b4:	mov    ecx,DWORD PTR [ebp-0x18]
640231b7:	push   ecx
640231b8:	call   0x64001200
640231bd:	add    esp,0x8
640231c0:	ret    
640231c1:	mov    edx,DWORD PTR [esp+0x8]
640231c5:	lea    eax,[edx+0xc]
640231c8:	mov    ecx,DWORD PTR [edx-0x1c]
640231cb:	xor    ecx,eax
640231cd:	call   0x64013cc6
640231d2:	mov    eax,0x6402c1a4
640231d7:	jmp    0x64013988
640231dc:	int3   
640231dd:	int3   
640231de:	int3   
640231df:	int3   
640231e0:	mov    esi,DWORD PTR [ebp+0x4]
640231e3:	jmp    0x64003cd0
640231e8:	mov    edx,DWORD PTR [esp+0x8]
640231ec:	lea    eax,[edx-0x8]
640231ef:	mov    ecx,DWORD PTR [edx-0xc]
640231f2:	xor    ecx,eax
640231f4:	call   0x64013cc6
640231f9:	mov    eax,0x6402c1d0
640231fe:	jmp    0x64013988
64023203:	int3   
64023204:	int3   
64023205:	int3   
64023206:	int3   
64023207:	int3   
64023208:	int3   
64023209:	int3   
6402320a:	int3   
6402320b:	int3   
6402320c:	int3   
6402320d:	int3   
6402320e:	int3   
6402320f:	int3   
64023210:	mov    ecx,DWORD PTR [ebp-0x10]
64023213:	jmp    0x64002930
64023218:	mov    edx,DWORD PTR [esp+0x8]
6402321c:	lea    eax,[edx-0xc]
6402321f:	mov    ecx,DWORD PTR [edx-0x10]
64023222:	xor    ecx,eax
64023224:	call   0x64013cc6
64023229:	mov    eax,0x6402c1fc
6402322e:	jmp    0x64013988
64023233:	int3   
64023234:	int3   
64023235:	int3   
64023236:	int3   
64023237:	int3   
64023238:	int3   
64023239:	int3   
6402323a:	int3   
6402323b:	int3   
6402323c:	int3   
6402323d:	int3   
6402323e:	int3   
6402323f:	int3   
64023240:	lea    ecx,[ebp+0x8]
64023243:	jmp    0x64002930
64023248:	mov    edx,DWORD PTR [esp+0x8]
6402324c:	lea    eax,[edx-0x14]
6402324f:	mov    ecx,DWORD PTR [edx-0x18]
64023252:	xor    ecx,eax
64023254:	call   0x64013cc6
64023259:	mov    eax,0x6402c228
6402325e:	jmp    0x64013988
64023263:	int3   
64023264:	int3   
64023265:	int3   
64023266:	int3   
64023267:	int3   
64023268:	int3   
64023269:	int3   
6402326a:	int3   
6402326b:	int3   
6402326c:	int3   
6402326d:	int3   
6402326e:	int3   
6402326f:	int3   
64023270:	mov    eax,DWORD PTR [ebp+0x8]
64023273:	and    eax,0x1
64023276:	je     0x64023288
6402327c:	and    DWORD PTR [ebp+0x8],0xfffffffe
64023280:	mov    ecx,DWORD PTR [ebp+0x4]
64023283:	jmp    0x64002b90
64023288:	ret    
64023289:	mov    edx,DWORD PTR [esp+0x8]
6402328d:	lea    eax,[edx-0x8]
64023290:	mov    ecx,DWORD PTR [edx-0xc]
64023293:	xor    ecx,eax
64023295:	call   0x64013cc6
6402329a:	mov    eax,0x6402c254
6402329f:	jmp    0x64013988
640232a4:	int3   
640232a5:	int3   
640232a6:	int3   
640232a7:	int3   
640232a8:	int3   
640232a9:	int3   
640232aa:	int3   
640232ab:	int3   
640232ac:	int3   
640232ad:	int3   
640232ae:	int3   
640232af:	int3   
640232b0:	lea    ecx,[ebp-0x10]
640232b3:	jmp    0x64002b90
640232b8:	mov    edx,DWORD PTR [esp+0x8]
640232bc:	lea    eax,[edx-0xc]
640232bf:	mov    ecx,DWORD PTR [edx-0x10]
640232c2:	xor    ecx,eax
640232c4:	call   0x64013cc6
640232c9:	mov    eax,0x6402c280
640232ce:	jmp    0x64013988
640232d3:	int3   
640232d4:	int3   
640232d5:	int3   
640232d6:	int3   
640232d7:	int3   
640232d8:	int3   
640232d9:	int3   
640232da:	int3   
640232db:	int3   
640232dc:	int3   
640232dd:	int3   
640232de:	int3   
640232df:	int3   
640232e0:	lea    ecx,[ebp+0x4]
640232e3:	jmp    0x64002b90
640232e8:	mov    eax,DWORD PTR [ebp-0x10]
640232eb:	push   eax
640232ec:	call   0x64013604
640232f1:	pop    ecx
640232f2:	ret    
640232f3:	mov    edx,DWORD PTR [esp+0x8]
640232f7:	lea    eax,[edx-0x8]
640232fa:	mov    ecx,DWORD PTR [edx-0xc]
640232fd:	xor    ecx,eax
640232ff:	call   0x64013cc6
64023304:	mov    eax,0x6402c2b4
64023309:	jmp    0x64013988
6402330e:	int3   
6402330f:	int3   
64023310:	mov    eax,DWORD PTR [ebp-0x10]
64023313:	and    eax,0x1
64023316:	je     0x64023328
6402331c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023320:	mov    ecx,DWORD PTR [ebp+0x4]
64023323:	jmp    0x64002b90
64023328:	ret    
64023329:	mov    edx,DWORD PTR [esp+0x8]
6402332d:	lea    eax,[edx-0xc]
64023330:	mov    ecx,DWORD PTR [edx-0x10]
64023333:	xor    ecx,eax
64023335:	call   0x64013cc6
6402333a:	mov    eax,0x6402c2e0
6402333f:	jmp    0x64013988
64023344:	int3   
64023345:	int3   
64023346:	int3   
64023347:	int3   
64023348:	int3   
64023349:	int3   
6402334a:	int3   
6402334b:	int3   
6402334c:	int3   
6402334d:	int3   
6402334e:	int3   
6402334f:	int3   
64023350:	lea    eax,[ebp-0x14]
64023353:	jmp    0x64007770
64023358:	lea    eax,[ebp-0x10]
6402335b:	jmp    0x64007770
64023360:	mov    edx,DWORD PTR [esp+0x8]
64023364:	lea    eax,[edx-0x1c]
64023367:	mov    ecx,DWORD PTR [edx-0x20]
6402336a:	xor    ecx,eax
6402336c:	call   0x64013cc6
64023371:	mov    eax,0x6402c314
64023376:	jmp    0x64013988
6402337b:	int3   
6402337c:	int3   
6402337d:	int3   
6402337e:	int3   
6402337f:	int3   
64023380:	lea    ecx,[ebp-0x28]
64023383:	jmp    0x64002930
64023388:	mov    edx,DWORD PTR [esp+0x8]
6402338c:	lea    eax,[edx-0x28]
6402338f:	mov    ecx,DWORD PTR [edx-0x2c]
64023392:	xor    ecx,eax
64023394:	call   0x64013cc6
64023399:	mov    eax,0x6402c340
6402339e:	jmp    0x64013988
640233a3:	int3   
640233a4:	int3   
640233a5:	int3   
640233a6:	int3   
640233a7:	int3   
640233a8:	int3   
640233a9:	int3   
640233aa:	int3   
640233ab:	int3   
640233ac:	int3   
640233ad:	int3   
640233ae:	int3   
640233af:	int3   
640233b0:	mov    ecx,DWORD PTR [ebp-0x10]
640233b3:	jmp    0x64002b90
640233b8:	mov    edx,DWORD PTR [esp+0x8]
640233bc:	lea    eax,[edx-0xc]
640233bf:	mov    ecx,DWORD PTR [edx-0x10]
640233c2:	xor    ecx,eax
640233c4:	call   0x64013cc6
640233c9:	mov    eax,0x6402c36c
640233ce:	jmp    0x64013988
640233d3:	int3   
640233d4:	int3   
640233d5:	int3   
640233d6:	int3   
640233d7:	int3   
640233d8:	int3   
640233d9:	int3   
640233da:	int3   
640233db:	int3   
640233dc:	int3   
640233dd:	int3   
640233de:	int3   
640233df:	int3   
640233e0:	mov    ecx,DWORD PTR [ebp+0x4]
640233e3:	jmp    0x64002b90
640233e8:	mov    edx,DWORD PTR [esp+0x8]
640233ec:	lea    eax,[edx-0xc]
640233ef:	mov    ecx,DWORD PTR [edx-0x10]
640233f2:	xor    ecx,eax
640233f4:	call   0x64013cc6
640233f9:	mov    eax,0x6402c398
640233fe:	jmp    0x64013988
64023403:	int3   
64023404:	int3   
64023405:	int3   
64023406:	int3   
64023407:	int3   
64023408:	int3   
64023409:	int3   
6402340a:	int3   
6402340b:	int3   
6402340c:	int3   
6402340d:	int3   
6402340e:	int3   
6402340f:	int3   
64023410:	lea    ecx,[ebp-0x50]
64023413:	jmp    0x64002930
64023418:	mov    edx,DWORD PTR [esp+0x8]
6402341c:	lea    eax,[edx+0xc]
6402341f:	mov    ecx,DWORD PTR [edx-0x70]
64023422:	xor    ecx,eax
64023424:	call   0x64013cc6
64023429:	mov    eax,0x6402c3c4
6402342e:	jmp    0x64013988
64023433:	int3   
64023434:	int3   
64023435:	int3   
64023436:	int3   
64023437:	int3   
64023438:	int3   
64023439:	int3   
6402343a:	int3   
6402343b:	int3   
6402343c:	int3   
6402343d:	int3   
6402343e:	int3   
6402343f:	int3   
64023440:	lea    ecx,[ebp-0x54]
64023443:	jmp    0x64002930
64023448:	mov    edx,DWORD PTR [esp+0x8]
6402344c:	lea    eax,[edx-0x48]
6402344f:	mov    ecx,DWORD PTR [edx-0x4c]
64023452:	xor    ecx,eax
64023454:	call   0x64013cc6
64023459:	mov    eax,0x6402c3f0
6402345e:	jmp    0x64013988
64023463:	int3   
64023464:	int3   
64023465:	int3   
64023466:	int3   
64023467:	int3   
64023468:	int3   
64023469:	int3   
6402346a:	int3   
6402346b:	int3   
6402346c:	int3   
6402346d:	int3   
6402346e:	int3   
6402346f:	int3   
64023470:	lea    ecx,[ebp-0x98]
64023476:	jmp    0x64002930
6402347b:	lea    ecx,[ebp-0x98]
64023481:	jmp    0x64002930
64023486:	lea    ecx,[ebp-0x7c]
64023489:	jmp    0x64002930
6402348e:	mov    edx,DWORD PTR [esp+0x8]
64023492:	lea    eax,[edx-0xa8]
64023498:	mov    ecx,DWORD PTR [edx-0xac]
6402349e:	xor    ecx,eax
640234a0:	call   0x64013cc6
640234a5:	mov    eax,0x6402c42c
640234aa:	jmp    0x64013988
640234af:	int3   
640234b0:	lea    ecx,[ebp-0x2c]
640234b3:	jmp    0x64002e00
640234b8:	mov    edx,DWORD PTR [esp+0x8]
640234bc:	lea    eax,[edx-0x38]
640234bf:	mov    ecx,DWORD PTR [edx-0x3c]
640234c2:	xor    ecx,eax
640234c4:	call   0x64013cc6
640234c9:	mov    eax,0x6402c458
640234ce:	jmp    0x64013988
640234d3:	int3   
640234d4:	int3   
640234d5:	int3   
640234d6:	int3   
640234d7:	int3   
640234d8:	int3   
640234d9:	int3   
640234da:	int3   
640234db:	int3   
640234dc:	int3   
640234dd:	int3   
640234de:	int3   
640234df:	int3   
640234e0:	lea    ecx,[ebp-0x54]
640234e3:	jmp    0x64002930
640234e8:	mov    edx,DWORD PTR [esp+0x8]
640234ec:	lea    eax,[edx-0x58]
640234ef:	mov    ecx,DWORD PTR [edx-0x5c]
640234f2:	xor    ecx,eax
640234f4:	call   0x64013cc6
640234f9:	mov    eax,0x6402c484
640234fe:	jmp    0x64013988
64023503:	int3   
64023504:	int3   
64023505:	int3   
64023506:	int3   
64023507:	int3   
64023508:	int3   
64023509:	int3   
6402350a:	int3   
6402350b:	int3   
6402350c:	int3   
6402350d:	int3   
6402350e:	int3   
6402350f:	int3   
64023510:	lea    ecx,[ebp-0x54]
64023513:	jmp    0x64002930
64023518:	mov    edx,DWORD PTR [esp+0x8]
6402351c:	lea    eax,[edx-0x5c]
6402351f:	mov    ecx,DWORD PTR [edx-0x60]
64023522:	xor    ecx,eax
64023524:	call   0x64013cc6
64023529:	mov    eax,0x6402c4b0
6402352e:	jmp    0x64013988
64023533:	int3   
64023534:	int3   
64023535:	int3   
64023536:	int3   
64023537:	int3   
64023538:	int3   
64023539:	int3   
6402353a:	int3   
6402353b:	int3   
6402353c:	int3   
6402353d:	int3   
6402353e:	int3   
6402353f:	int3   
64023540:	lea    ecx,[ebp-0x50]
64023543:	jmp    0x64002930
64023548:	mov    edx,DWORD PTR [esp+0x8]
6402354c:	lea    eax,[edx-0x54]
6402354f:	mov    ecx,DWORD PTR [edx-0x58]
64023552:	xor    ecx,eax
64023554:	call   0x64013cc6
64023559:	mov    eax,0x6402c4dc
6402355e:	jmp    0x64013988
64023563:	int3   
64023564:	int3   
64023565:	int3   
64023566:	int3   
64023567:	int3   
64023568:	int3   
64023569:	int3   
6402356a:	int3   
6402356b:	int3   
6402356c:	int3   
6402356d:	int3   
6402356e:	int3   
6402356f:	int3   
64023570:	lea    ecx,[ebp-0x54]
64023573:	jmp    0x64002930
64023578:	mov    edx,DWORD PTR [esp+0x8]
6402357c:	lea    eax,[edx-0x5c]
6402357f:	mov    ecx,DWORD PTR [edx-0x60]
64023582:	xor    ecx,eax
64023584:	call   0x64013cc6
64023589:	mov    eax,0x6402c508
6402358e:	jmp    0x64013988
64023593:	int3   
64023594:	int3   
64023595:	int3   
64023596:	int3   
64023597:	int3   
64023598:	int3   
64023599:	int3   
6402359a:	int3   
6402359b:	int3   
6402359c:	int3   
6402359d:	int3   
6402359e:	int3   
6402359f:	int3   
640235a0:	lea    esi,[ebp-0x64]
640235a3:	jmp    0x64003cd0
640235a8:	lea    esi,[ebp-0x48]
640235ab:	jmp    0x64003f60
640235b0:	mov    edx,DWORD PTR [esp+0x8]
640235b4:	lea    eax,[edx-0x70]
640235b7:	mov    ecx,DWORD PTR [edx-0x74]
640235ba:	xor    ecx,eax
640235bc:	call   0x64013cc6
640235c1:	mov    eax,0x6402c53c
640235c6:	jmp    0x64013988
640235cb:	int3   
640235cc:	int3   
640235cd:	int3   
640235ce:	int3   
640235cf:	int3   
640235d0:	lea    ecx,[ebp-0x64]
640235d3:	jmp    0x64002930
640235d8:	lea    ecx,[ebp-0x48]
640235db:	jmp    0x64003f10
640235e0:	mov    edx,DWORD PTR [esp+0x8]
640235e4:	lea    eax,[edx-0x6c]
640235e7:	mov    ecx,DWORD PTR [edx-0x70]
640235ea:	xor    ecx,eax
640235ec:	call   0x64013cc6
640235f1:	mov    eax,0x6402c570
640235f6:	jmp    0x64013988
640235fb:	int3   
640235fc:	int3   
640235fd:	int3   
640235fe:	int3   
640235ff:	int3   
64023600:	mov    eax,ds:0x64039988
64023605:	and    eax,0xfffffffe
64023608:	mov    ds:0x64039988,eax
6402360d:	ret    
6402360e:	mov    edx,DWORD PTR [esp+0x8]
64023612:	lea    eax,[edx]
64023614:	mov    ecx,DWORD PTR [edx-0x4]
64023617:	xor    ecx,eax
64023619:	call   0x64013cc6
6402361e:	mov    eax,0x6402c59c
64023623:	jmp    0x64013988
64023628:	int3   
64023629:	int3   
6402362a:	int3   
6402362b:	int3   
6402362c:	int3   
6402362d:	int3   
6402362e:	int3   
6402362f:	int3   
64023630:	mov    eax,ds:0x6403998c
64023635:	and    eax,0xfffffffe
64023638:	mov    ds:0x6403998c,eax
6402363d:	ret    
6402363e:	mov    edx,DWORD PTR [esp+0x8]
64023642:	lea    eax,[edx]
64023644:	mov    ecx,DWORD PTR [edx-0x4]
64023647:	xor    ecx,eax
64023649:	call   0x64013cc6
6402364e:	mov    eax,0x6402c5c8
64023653:	jmp    0x64013988
64023658:	int3   
64023659:	int3   
6402365a:	int3   
6402365b:	int3   
6402365c:	int3   
6402365d:	int3   
6402365e:	int3   
6402365f:	int3   
64023660:	lea    esi,[ebp-0x4c]
64023663:	jmp    0x64003cd0
64023668:	lea    esi,[ebp-0x30]
6402366b:	jmp    0x64003cd0
64023670:	mov    edx,DWORD PTR [esp+0x8]
64023674:	lea    eax,[edx-0x5c]
64023677:	mov    ecx,DWORD PTR [edx-0x60]
6402367a:	xor    ecx,eax
6402367c:	call   0x64013cc6
64023681:	add    eax,0xc
64023684:	mov    ecx,DWORD PTR [edx-0x8]
64023687:	xor    ecx,eax
64023689:	call   0x64013cc6
6402368e:	mov    eax,0x6402c5fc
64023693:	jmp    0x64013988
64023698:	int3   
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	lea    ecx,[ebp-0x4c]
640236a3:	jmp    0x64002930
640236a8:	lea    ecx,[ebp-0x30]
640236ab:	jmp    0x64002930
640236b0:	mov    edx,DWORD PTR [esp+0x8]
640236b4:	lea    eax,[edx-0x5c]
640236b7:	mov    ecx,DWORD PTR [edx-0x60]
640236ba:	xor    ecx,eax
640236bc:	call   0x64013cc6
640236c1:	add    eax,0xc
640236c4:	mov    ecx,DWORD PTR [edx-0x8]
640236c7:	xor    ecx,eax
640236c9:	call   0x64013cc6
640236ce:	mov    eax,0x6402c630
640236d3:	jmp    0x64013988
640236d8:	int3   
640236d9:	int3   
640236da:	int3   
640236db:	int3   
640236dc:	int3   
640236dd:	int3   
640236de:	int3   
640236df:	int3   
640236e0:	mov    eax,DWORD PTR [ebp-0x58]
640236e3:	and    eax,0x1
640236e6:	je     0x640236f8
640236ec:	and    DWORD PTR [ebp-0x58],0xfffffffe
640236f0:	mov    ecx,DWORD PTR [ebp+0x4]
640236f3:	jmp    0x64002b90
640236f8:	ret    
640236f9:	lea    ecx,[ebp-0x54]
640236fc:	jmp    0x64002930
64023701:	mov    edx,DWORD PTR [esp+0x8]
64023705:	lea    eax,[edx-0x58]
64023708:	mov    ecx,DWORD PTR [edx-0x5c]
6402370b:	xor    ecx,eax
6402370d:	call   0x64013cc6
64023712:	mov    eax,0x6402c664
64023717:	jmp    0x64013988
6402371c:	int3   
6402371d:	int3   
6402371e:	int3   
6402371f:	int3   
64023720:	lea    ecx,[ebp-0x28]
64023723:	jmp    0x64009c80
64023728:	lea    ecx,[ebp-0xf8]
6402372e:	jmp    0x64002930
64023733:	lea    eax,[ebp-0x38]
64023736:	jmp    0x64007770
6402373b:	mov    edx,DWORD PTR [esp+0x8]
6402373f:	lea    eax,[edx+0xc]
64023742:	mov    ecx,DWORD PTR [edx-0x234]
64023748:	xor    ecx,eax
6402374a:	call   0x64013cc6
6402374f:	mov    ecx,DWORD PTR [edx-0x30]
64023752:	xor    ecx,eax
64023754:	call   0x64013cc6
64023759:	mov    eax,0x6402c6dc
6402375e:	jmp    0x64013988
64023763:	int3   
64023764:	int3   
64023765:	int3   
64023766:	int3   
64023767:	int3   
64023768:	int3   
64023769:	int3   
6402376a:	int3   
6402376b:	int3   
6402376c:	int3   
6402376d:	int3   
6402376e:	int3   
6402376f:	int3   
64023770:	lea    ecx,[ebp-0x1040]
64023776:	jmp    0x64009c80
6402377b:	lea    ecx,[ebp-0x106c]
64023781:	jmp    0x64002930
64023786:	lea    eax,[ebp-0x104c]
6402378c:	jmp    0x64007770
64023791:	mov    edx,DWORD PTR [esp+0x8]
64023795:	lea    eax,[edx+0xc]
64023798:	mov    ecx,DWORD PTR [edx-0x1070]
6402379e:	xor    ecx,eax
640237a0:	call   0x64013cc6
640237a5:	mov    ecx,DWORD PTR [edx-0xc]
640237a8:	xor    ecx,eax
640237aa:	call   0x64013cc6
640237af:	mov    eax,0x6402c754
640237b4:	jmp    0x64013988
640237b9:	int3   
640237ba:	int3   
640237bb:	int3   
640237bc:	int3   
640237bd:	int3   
640237be:	int3   
640237bf:	int3   
640237c0:	lea    ecx,[ebp-0x103c]
640237c6:	jmp    0x64009c80
640237cb:	lea    ecx,[ebp-0x106c]
640237d1:	jmp    0x64002930
640237d6:	lea    eax,[ebp-0x1044]
640237dc:	jmp    0x64007770
640237e1:	mov    edx,DWORD PTR [esp+0x8]
640237e5:	lea    eax,[edx+0xc]
640237e8:	mov    ecx,DWORD PTR [edx-0x1074]
640237ee:	xor    ecx,eax
640237f0:	call   0x64013cc6
640237f5:	mov    ecx,DWORD PTR [edx-0x8]
640237f8:	xor    ecx,eax
640237fa:	call   0x64013cc6
640237ff:	mov    eax,0x6402c7cc
64023804:	jmp    0x64013988
64023809:	int3   
6402380a:	int3   
6402380b:	int3   
6402380c:	int3   
6402380d:	int3   
6402380e:	int3   
6402380f:	int3   
64023810:	lea    ecx,[ebp-0x28]
64023813:	jmp    0x64002930
64023818:	mov    edx,DWORD PTR [esp+0x8]
6402381c:	lea    eax,[edx-0x28]
6402381f:	mov    ecx,DWORD PTR [edx-0x2c]
64023822:	xor    ecx,eax
64023824:	call   0x64013cc6
64023829:	mov    eax,0x6402c7f8
6402382e:	jmp    0x64013988
64023833:	int3   
64023834:	int3   
64023835:	int3   
64023836:	int3   
64023837:	int3   
64023838:	int3   
64023839:	int3   
6402383a:	int3   
6402383b:	int3   
6402383c:	int3   
6402383d:	int3   
6402383e:	int3   
6402383f:	int3   
64023840:	lea    ecx,[ebp-0xb0]
64023846:	jmp    0x64009c80
6402384b:	lea    eax,[ebp-0x64]
6402384e:	jmp    0x64007a60
64023853:	lea    ecx,[ebp-0xac]
64023859:	jmp    0x64002930
6402385e:	lea    ecx,[ebp-0xac]
64023864:	jmp    0x64002930
64023869:	lea    ecx,[ebp-0xac]
6402386f:	jmp    0x64002930
64023874:	lea    ecx,[ebp-0xac]
6402387a:	jmp    0x64002930
6402387f:	lea    ecx,[ebp-0xac]
64023885:	jmp    0x64002930
6402388a:	lea    ecx,[ebp-0xac]
64023890:	jmp    0x64002930
64023895:	lea    ecx,[ebp-0xac]
6402389b:	jmp    0x64002930
640238a0:	lea    ecx,[ebp-0xac]
640238a6:	jmp    0x64002930
640238ab:	lea    ecx,[ebp-0xac]
640238b1:	jmp    0x64002930
640238b6:	lea    ecx,[ebp-0x50]
640238b9:	jmp    0x64002930
640238be:	mov    edx,DWORD PTR [esp+0x8]
640238c2:	lea    eax,[edx-0xb4]
640238c8:	mov    ecx,DWORD PTR [edx-0xb8]
640238ce:	xor    ecx,eax
640238d0:	call   0x64013cc6
640238d5:	mov    eax,0x6402c880
640238da:	jmp    0x64013988
640238df:	int3   
640238e0:	mov    ecx,DWORD PTR [ebp+0x4]
640238e3:	jmp    0x64002e00
640238e8:	mov    ecx,DWORD PTR [ebp+0x4]
640238eb:	add    ecx,0x894
640238f1:	jmp    0x64009a90
640238f6:	mov    eax,DWORD PTR [ebp-0x2c]
640238f9:	push   eax
640238fa:	call   0x64013604
640238ff:	pop    ecx
64023900:	ret    
64023901:	mov    eax,DWORD PTR [ebp-0x30]
64023904:	and    eax,0x1
64023907:	je     0x64023919
6402390d:	and    DWORD PTR [ebp-0x30],0xfffffffe
64023911:	lea    ecx,[ebp-0x28]
64023914:	jmp    0x64002930
64023919:	ret    
6402391a:	mov    edx,DWORD PTR [esp+0x8]
6402391e:	lea    eax,[edx-0x34]
64023921:	mov    ecx,DWORD PTR [edx-0x38]
64023924:	xor    ecx,eax
64023926:	call   0x64013cc6
6402392b:	mov    eax,0x6402c8cc
64023930:	jmp    0x64013988
64023935:	int3   
64023936:	int3   
64023937:	int3   
64023938:	int3   
64023939:	int3   
6402393a:	int3   
6402393b:	int3   
6402393c:	int3   
6402393d:	int3   
6402393e:	int3   
6402393f:	int3   
64023940:	lea    ecx,[ebp-0x18]
64023943:	jmp    0x64002e00
64023948:	lea    ecx,[ebp-0x1c]
6402394b:	jmp    0x64002b90
64023950:	mov    eax,ds:0x64039b0c
64023955:	and    eax,0xfffffffe
64023958:	mov    ds:0x64039b0c,eax
6402395d:	ret    
6402395e:	mov    edx,DWORD PTR [esp+0x8]
64023962:	lea    eax,[edx-0x24]
64023965:	mov    ecx,DWORD PTR [edx-0x28]
64023968:	xor    ecx,eax
6402396a:	call   0x64013cc6
6402396f:	mov    eax,0x6402c908
64023974:	jmp    0x64013988
64023979:	int3   
6402397a:	int3   
6402397b:	int3   
6402397c:	int3   
6402397d:	int3   
6402397e:	int3   
6402397f:	int3   
64023980:	lea    ecx,[ebp-0x10]
64023983:	jmp    0x64002e00
64023988:	mov    edx,DWORD PTR [esp+0x8]
6402398c:	lea    eax,[edx-0x14]
6402398f:	mov    ecx,DWORD PTR [edx-0x18]
64023992:	xor    ecx,eax
64023994:	call   0x64013cc6
64023999:	mov    eax,0x6402c934
6402399e:	jmp    0x64013988
640239a3:	int3   
640239a4:	int3   
640239a5:	int3   
640239a6:	int3   
640239a7:	int3   
640239a8:	int3   
640239a9:	int3   
640239aa:	int3   
640239ab:	int3   
640239ac:	int3   
640239ad:	int3   
640239ae:	int3   
640239af:	int3   
640239b0:	lea    eax,[ebp-0x58]
640239b3:	jmp    0x64007770
640239b8:	lea    eax,[ebp-0x5c]
640239bb:	jmp    0x64007770
640239c0:	lea    ecx,[ebp-0x54]
640239c3:	jmp    0x64002930
640239c8:	lea    ecx,[ebp-0x54]
640239cb:	jmp    0x64002930
640239d0:	lea    ecx,[ebp-0x54]
640239d3:	jmp    0x64002930
640239d8:	mov    edx,DWORD PTR [esp+0x8]
640239dc:	lea    eax,[edx-0x5c]
640239df:	mov    ecx,DWORD PTR [edx-0x60]
640239e2:	xor    ecx,eax
640239e4:	call   0x64013cc6
640239e9:	mov    eax,0x6402c980
640239ee:	jmp    0x64013988
640239f3:	int3   
640239f4:	int3   
640239f5:	int3   
640239f6:	int3   
640239f7:	int3   
640239f8:	int3   
640239f9:	int3   
640239fa:	int3   
640239fb:	int3   
640239fc:	int3   
640239fd:	int3   
640239fe:	int3   
640239ff:	int3   
64023a00:	mov    eax,ds:0x64039b10
64023a05:	and    eax,0xfffffffe
64023a08:	mov    ds:0x64039b10,eax
64023a0d:	ret    
64023a0e:	mov    eax,DWORD PTR [ebp-0x2c]
64023a11:	and    eax,0x1
64023a14:	je     0x64023a26
64023a1a:	and    DWORD PTR [ebp-0x2c],0xfffffffe
64023a1e:	mov    ecx,DWORD PTR [ebp-0x30]
64023a21:	jmp    0x64002b90
64023a26:	ret    
64023a27:	lea    ecx,[ebp-0x4c]
64023a2a:	jmp    0x64002930
64023a2f:	mov    edx,DWORD PTR [esp+0x8]
64023a33:	lea    eax,[edx+0xc]
64023a36:	mov    ecx,DWORD PTR [edx-0xa1c]
64023a3c:	xor    ecx,eax
64023a3e:	call   0x64013cc6
64023a43:	mov    ecx,DWORD PTR [edx-0x4]
64023a46:	xor    ecx,eax
64023a48:	call   0x64013cc6
64023a4d:	mov    eax,0x6402c9bc
64023a52:	jmp    0x64013988
64023a57:	int3   
64023a58:	int3   
64023a59:	int3   
64023a5a:	int3   
64023a5b:	int3   
64023a5c:	int3   
64023a5d:	int3   
64023a5e:	int3   
64023a5f:	int3   
64023a60:	mov    eax,DWORD PTR [ebp-0x58]
64023a63:	and    eax,0x1
64023a66:	je     0x64023a78
64023a6c:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023a70:	mov    ecx,DWORD PTR [ebp+0x4]
64023a73:	jmp    0x64002b90
64023a78:	ret    
64023a79:	lea    ecx,[ebp-0x54]
64023a7c:	jmp    0x64002930
64023a81:	mov    edx,DWORD PTR [esp+0x8]
64023a85:	lea    eax,[edx-0x60]
64023a88:	mov    ecx,DWORD PTR [edx-0x64]
64023a8b:	xor    ecx,eax
64023a8d:	call   0x64013cc6
64023a92:	mov    eax,0x6402c9f0
64023a97:	jmp    0x64013988
64023a9c:	int3   
64023a9d:	int3   
64023a9e:	int3   
64023a9f:	int3   
64023aa0:	lea    ecx,[ebp-0x20]
64023aa3:	jmp    0x64007000
64023aa8:	mov    edx,DWORD PTR [esp+0x8]
64023aac:	lea    eax,[edx+0xc]
64023aaf:	mov    ecx,DWORD PTR [edx-0x24]
64023ab2:	xor    ecx,eax
64023ab4:	call   0x64013cc6
64023ab9:	mov    eax,0x6402ca50
64023abe:	jmp    0x64013988
64023ac3:	int3   
64023ac4:	int3   
64023ac5:	int3   
64023ac6:	int3   
64023ac7:	int3   
64023ac8:	int3   
64023ac9:	int3   
64023aca:	int3   
64023acb:	int3   
64023acc:	int3   
64023acd:	int3   
64023ace:	int3   
64023acf:	int3   
64023ad0:	lea    ecx,[ebp-0x94]
64023ad6:	jmp    0x64002b90
64023adb:	mov    edx,DWORD PTR [esp+0x8]
64023adf:	lea    eax,[edx-0x8c]
64023ae5:	mov    ecx,DWORD PTR [edx-0x90]
64023aeb:	xor    ecx,eax
64023aed:	call   0x64013cc6
64023af2:	add    eax,0x4
64023af5:	mov    ecx,DWORD PTR [edx-0x4]
64023af8:	xor    ecx,eax
64023afa:	call   0x64013cc6
64023aff:	mov    eax,0x6402ca7c
64023b04:	jmp    0x64013988
64023b09:	int3   
64023b0a:	int3   
64023b0b:	int3   
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	lea    ecx,[ebp-0x7c]
64023b13:	jmp    0x64002b90
64023b18:	lea    ecx,[ebp-0xa4]
64023b1e:	jmp    0x64002930
64023b23:	lea    ecx,[ebp-0xe8]
64023b29:	jmp    0x64002930
64023b2e:	lea    ecx,[ebp-0x104]
64023b34:	jmp    0x64002930
64023b39:	lea    ecx,[ebp-0x13c]
64023b3f:	jmp    0x64002930
64023b44:	lea    ecx,[ebp-0x120]
64023b4a:	jmp    0x64002930
64023b4f:	mov    edx,DWORD PTR [esp+0x8]
64023b53:	lea    eax,[edx+0xc]
64023b56:	mov    ecx,DWORD PTR [edx-0x144]
64023b5c:	xor    ecx,eax
64023b5e:	call   0x64013cc6
64023b63:	mov    ecx,DWORD PTR [edx-0x4]
64023b66:	xor    ecx,eax
64023b68:	call   0x64013cc6
64023b6d:	mov    eax,0x6402cad0
64023b72:	jmp    0x64013988
64023b77:	int3   
64023b78:	int3   
64023b79:	int3   
64023b7a:	int3   
64023b7b:	int3   
64023b7c:	int3   
64023b7d:	int3   
64023b7e:	int3   
64023b7f:	int3   
64023b80:	lea    ecx,[ebp-0x85c]
64023b86:	jmp    0x64002930
64023b8b:	lea    eax,[ebp-0x870]
64023b91:	jmp    0x64007a60
64023b96:	lea    ecx,[ebp-0x87c]
64023b9c:	jmp    0x64002b90
64023ba1:	mov    edx,DWORD PTR [esp+0x8]
64023ba5:	lea    eax,[edx-0x87c]
64023bab:	mov    ecx,DWORD PTR [edx-0x880]
64023bb1:	xor    ecx,eax
64023bb3:	call   0x64013cc6
64023bb8:	add    eax,0x8
64023bbb:	mov    ecx,DWORD PTR [edx-0x8]
64023bbe:	xor    ecx,eax
64023bc0:	call   0x64013cc6
64023bc5:	mov    eax,0x6402cb0c
64023bca:	jmp    0x64013988
64023bcf:	int3   
64023bd0:	lea    esi,[ebp-0x8ac]
64023bd6:	jmp    0x640095f0
64023bdb:	lea    ecx,[ebp-0x8c8]
64023be1:	jmp    0x64002930
64023be6:	mov    edx,DWORD PTR [esp+0x8]
64023bea:	lea    eax,[edx+0xc]
64023bed:	mov    ecx,DWORD PTR [edx-0x8cc]
64023bf3:	xor    ecx,eax
64023bf5:	call   0x64013cc6
64023bfa:	mov    ecx,DWORD PTR [edx-0x8]
64023bfd:	xor    ecx,eax
64023bff:	call   0x64013cc6
64023c04:	mov    eax,0x6402cb74
64023c09:	jmp    0x64013988
64023c0e:	int3   
64023c0f:	int3   
64023c10:	lea    ecx,[ebp-0x1c]
64023c13:	jmp    0x64002b90
64023c18:	lea    ecx,[ebp-0x14]
64023c1b:	jmp    0x64002b90
64023c20:	lea    ecx,[ebp-0x18]
64023c23:	jmp    0x64002b90
64023c28:	mov    edx,DWORD PTR [esp+0x8]
64023c2c:	lea    eax,[edx-0x1c]
64023c2f:	mov    ecx,DWORD PTR [edx-0x20]
64023c32:	xor    ecx,eax
64023c34:	call   0x64013cc6
64023c39:	mov    eax,0x6402cbb0
64023c3e:	jmp    0x64013988
64023c43:	int3   
64023c44:	int3   
64023c45:	int3   
64023c46:	int3   
64023c47:	int3   
64023c48:	int3   
64023c49:	int3   
64023c4a:	int3   
64023c4b:	int3   
64023c4c:	int3   
64023c4d:	int3   
64023c4e:	int3   
64023c4f:	int3   
64023c50:	mov    eax,DWORD PTR [ebp-0x18]
64023c53:	and    eax,0x1
64023c56:	je     0x64023c68
64023c5c:	and    DWORD PTR [ebp-0x18],0xfffffffe
64023c60:	mov    ecx,DWORD PTR [ebp+0x4]
64023c63:	jmp    0x64002b90
64023c68:	ret    
64023c69:	lea    ecx,[ebp-0x14]
64023c6c:	jmp    0x64002b90
64023c71:	lea    ecx,[ebp-0x10]
64023c74:	jmp    0x64002b90
64023c79:	lea    ecx,[ebp-0x14]
64023c7c:	jmp    0x64002b90
64023c81:	mov    edx,DWORD PTR [esp+0x8]
64023c85:	lea    eax,[edx-0x18]
64023c88:	mov    ecx,DWORD PTR [edx-0x1c]
64023c8b:	xor    ecx,eax
64023c8d:	call   0x64013cc6
64023c92:	mov    eax,0x6402cbf4
64023c97:	jmp    0x64013988
64023c9c:	int3   
64023c9d:	int3   
64023c9e:	int3   
64023c9f:	int3   
64023ca0:	push   edi
64023ca1:	mov    edi,0x64039afc
64023ca6:	call   0x640017d0
64023cab:	pop    edi
64023cac:	ret    
64023cad:	int3   
64023cae:	int3   
64023caf:	int3   
64023cb0:	push   edi
64023cb1:	mov    edi,0x64039afd
64023cb6:	call   0x640017d0
64023cbb:	pop    edi
64023cbc:	ret    
64023cbd:	int3   
64023cbe:	int3   
64023cbf:	int3   
64023cc0:	push   0x0
64023cc2:	push   0x0
64023cc4:	push   0x1
64023cc6:	push   0x0
64023cc8:	call   DWORD PTR ds:0x640240f0
64023cce:	mov    ds:0x64039b00,eax
64023cd3:	ret    
64023cd4:	int3   
64023cd5:	int3   
64023cd6:	int3   
64023cd7:	int3   
64023cd8:	int3   
64023cd9:	int3   
64023cda:	int3   
64023cdb:	int3   
64023cdc:	int3   
64023cdd:	int3   
64023cde:	int3   
64023cdf:	int3   
64023ce0:	push   0x6402b040
64023ce5:	push   0xf
64023ce7:	mov    ecx,0x6402b070
64023cec:	call   0x64003030
64023cf1:	add    esp,0x8
64023cf4:	mov    ds:0x64039b04,eax
64023cf9:	ret    
64023cfa:	int3   
64023cfb:	int3   
64023cfc:	int3   
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	push   0x64024308
64023d05:	push   0x10
64023d07:	push   0x640242f4
64023d0c:	call   0x64002e30
64023d11:	add    esp,0xc
64023d14:	mov    ds:0x64038cd0,eax
64023d19:	ret    
64023d1a:	int3   
64023d1b:	int3   
64023d1c:	int3   
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	push   0x64024358
64023d25:	push   0x10
64023d27:	push   0x64024344
64023d2c:	call   0x64002e30
64023d31:	add    esp,0xc
64023d34:	mov    ds:0x64038ccc,eax
64023d39:	ret    
64023d3a:	int3   
64023d3b:	int3   
64023d3c:	int3   
64023d3d:	int3   
64023d3e:	int3   
64023d3f:	int3   
64023d40:	push   0x64024394
64023d45:	push   0x10
64023d47:	push   0x64024380
64023d4c:	call   0x64002e30
64023d51:	add    esp,0xc
64023d54:	mov    ds:0x64038cc8,eax
64023d59:	ret    
64023d5a:	push   0x64023ea6
64023d5f:	call   0x64013f6a
64023d64:	pop    ecx
64023d65:	ret    
64023d66:	mov    ecx,0x64038da0
64023d6b:	call   0x64012f5f
64023d70:	push   0x64023eb0
64023d75:	call   0x64013f6a
64023d7a:	pop    ecx
64023d7b:	ret    
64023d7c:	mov    ecx,0x64038dec
64023d81:	call   0x64012f5f
64023d86:	push   0x64023eba
64023d8b:	call   0x64013f6a
64023d90:	pop    ecx
64023d91:	ret    
64023d92:	push   0x64023ec4
64023d97:	call   0x64013f6a
64023d9c:	pop    ecx
64023d9d:	ret    
64023d9e:	mov    ecx,0x64038df0
64023da3:	call   0x64013332
64023da8:	push   0x64023ece
64023dad:	call   0x64013f6a
64023db2:	pop    ecx
64023db3:	ret    
64023db4:	mov    ecx,0x64038e2c
64023db9:	call   0x6401330c
64023dbe:	push   0x64023ed8
64023dc3:	call   0x64013f6a
64023dc8:	pop    ecx
64023dc9:	ret    
64023dca:	call   DWORD PTR ds:0x64024190
64023dd0:	push   0x64023ee2
64023dd5:	mov    DWORD PTR ds:0x64038e58,0x64027b90
64023ddf:	mov    ds:0x64038e5c,eax
64023de4:	mov    BYTE PTR ds:0x64038e60,0x0
64023deb:	call   0x64013f6a
64023df0:	pop    ecx
64023df1:	ret    
64023df2:	push   0x64038e58
64023df7:	mov    ecx,0x64038e64
64023dfc:	call   0x640134a5
64023e01:	push   0x64023eec
64023e06:	call   0x64013f6a
64023e0b:	pop    ecx
64023e0c:	ret    
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	push   ebp
64023e11:	mov    ebp,esp
64023e13:	and    esp,0xfffffff8
64023e16:	mov    eax,ds:0x64039980
64023e1b:	mov    edx,DWORD PTR [eax]
64023e1d:	sub    esp,0xc
64023e20:	push   esi
64023e21:	push   eax
64023e22:	mov    ecx,0x6403997c
64023e27:	push   ecx
64023e28:	push   edx
64023e29:	mov    esi,ecx
64023e2b:	push   esi
64023e2c:	lea    eax,[esp+0x18]
64023e30:	push   eax
64023e31:	call   0x64005a20
64023e36:	mov    ecx,DWORD PTR ds:0x64039980
64023e3c:	push   ecx
64023e3d:	call   0x64013604
64023e42:	add    esp,0x4
64023e45:	xor    eax,eax
64023e47:	mov    ds:0x64039980,eax
64023e4c:	mov    ds:0x64039984,eax
64023e51:	pop    esi
64023e52:	mov    esp,ebp
64023e54:	pop    ebp
64023e55:	ret    
64023e56:	int3   
64023e57:	int3   
64023e58:	int3   
64023e59:	int3   
64023e5a:	int3   
64023e5b:	int3   
64023e5c:	int3   
64023e5d:	int3   
64023e5e:	int3   
64023e5f:	int3   
64023e60:	push   ebp
64023e61:	mov    ebp,esp
64023e63:	and    esp,0xfffffff8
64023e66:	mov    eax,ds:0x64039974
64023e6b:	mov    edx,DWORD PTR [eax]
64023e6d:	sub    esp,0xc
64023e70:	push   esi
64023e71:	push   eax
64023e72:	mov    ecx,0x64039970
64023e77:	push   ecx
64023e78:	push   edx
64023e79:	mov    esi,ecx
64023e7b:	push   esi
64023e7c:	lea    eax,[esp+0x18]
64023e80:	push   eax
64023e81:	call   0x64005640
64023e86:	mov    ecx,DWORD PTR ds:0x64039974
64023e8c:	push   ecx
64023e8d:	call   0x64013604
64023e92:	add    esp,0x4
64023e95:	xor    eax,eax
64023e97:	mov    ds:0x64039974,eax
64023e9c:	mov    ds:0x64039978,eax
64023ea1:	pop    esi
64023ea2:	mov    esp,ebp
64023ea4:	pop    ebp
64023ea5:	ret    
64023ea6:	mov    ecx,0x64038cf8
64023eab:	jmp    0x64001570
64023eb0:	mov    ecx,0x64038da0
64023eb5:	jmp    0x64012f8e
64023eba:	mov    ecx,0x64038dec
64023ebf:	jmp    0x64012f8e
64023ec4:	mov    ecx,0x64038ded
64023ec9:	jmp    0x64012fea
64023ece:	mov    ecx,0x64038df0
64023ed3:	jmp    0x640132a0
64023ed8:	mov    ecx,0x64038e2c
64023edd:	jmp    0x640133e1
64023ee2:	mov    ecx,0x64038e58
64023ee7:	jmp    0x640133f9
64023eec:	mov    DWORD PTR ds:0x64038e64,0x64027ba4
64023ef6:	ret    
64023ef7:	mov    DWORD PTR ds:0x64038e80,0x640242a4
64023f01:	mov    ecx,0x64038e80
64023f06:	jmp    0x640136d8
